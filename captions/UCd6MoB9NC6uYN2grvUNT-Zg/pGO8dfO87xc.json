[
  {
    "start": "0",
    "end": "86000"
  },
  {
    "text": "okay welcome to this session my name is Martin Elwin I head up the solutions",
    "start": "4940",
    "end": "11370"
  },
  {
    "text": "architecture team for AWS in the Nordics which for for AWS includes Norway Sweden",
    "start": "11370",
    "end": "17130"
  },
  {
    "text": "Denmark Finland the Baltics and Iceland so today we're gonna talk a little bit",
    "start": "17130",
    "end": "24660"
  },
  {
    "text": "about the introductory aspects of gaming and different common patterns we see",
    "start": "24660",
    "end": "30630"
  },
  {
    "text": "customers use when implementing gaming backends on AWS with me today I have the",
    "start": "30630",
    "end": "36899"
  },
  {
    "text": "lead server developer from ground crew Rob Kangas who's going to share with us a little bit about what they've done for",
    "start": "36899",
    "end": "43230"
  },
  {
    "text": "the game super nodes and the backend they've implemented so today we have",
    "start": "43230",
    "end": "48510"
  },
  {
    "text": "quite a few different gaming companies using AWS and we we work with some of",
    "start": "48510",
    "end": "57480"
  },
  {
    "text": "them in the Nordics but actually I'm really happy to be here to meet the customers from different different",
    "start": "57480",
    "end": "63270"
  },
  {
    "text": "regions as well one of the things we hear from from customers is that the the",
    "start": "63270",
    "end": "68970"
  },
  {
    "text": "way AWS works and the public cloud matches the gaming use case really well doing things like focusing on",
    "start": "68970",
    "end": "76020"
  },
  {
    "text": "implementing a game rather than implementing infrastructure as one example but I think the most important",
    "start": "76020",
    "end": "83009"
  },
  {
    "text": "aspect is probably the elasticity of AWS I'm sure many of you are already familiar with this concept traditionally",
    "start": "83009",
    "end": "90360"
  },
  {
    "text": "you might have had to estimate the capacity you need for your game and by",
    "start": "90360",
    "end": "95400"
  },
  {
    "text": "Hardware upfront and of course anytime you buy more hardware than you actually",
    "start": "95400",
    "end": "101790"
  },
  {
    "text": "need you're gonna waste money and if you're developing a big budget title you know spending a few millions on hardware",
    "start": "101790",
    "end": "108420"
  },
  {
    "text": "might not be a big issue but what happens if you underestimate if a game",
    "start": "108420",
    "end": "113549"
  },
  {
    "text": "is actually more popular than you expected it to be well then of course you're gonna have an unmet demand",
    "start": "113549",
    "end": "120140"
  },
  {
    "text": "players are gonna be upset and this is not just bad for your brand it also means missed revenue so working",
    "start": "120140",
    "end": "128310"
  },
  {
    "text": "in this traditional way that we're all used to is it's quite rigid",
    "start": "128310",
    "end": "133620"
  },
  {
    "text": "so on a double yes of course we have a more elastic availability of resources",
    "start": "133620",
    "end": "139020"
  },
  {
    "text": "so no matter what demand you have if you have a spike you can get the capacity you need and when the spike goes down",
    "start": "139020",
    "end": "145870"
  },
  {
    "text": "you can just return that capacity another thing we hear from gaming customers is also the possibility to",
    "start": "145870",
    "end": "152560"
  },
  {
    "text": "reach a global market the the guys in R&D they are working on increasing the speed of light but we're not done with",
    "start": "152560",
    "end": "158530"
  },
  {
    "text": "that yet so so until that's done you still need to consider sort of where your users are in relationship to where",
    "start": "158530",
    "end": "165459"
  },
  {
    "text": "your back end is oh sorry the clicker is",
    "start": "165459",
    "end": "170860"
  },
  {
    "text": "not really working in the way chip so global reach is important and today as",
    "start": "170860",
    "end": "177160"
  },
  {
    "text": "I'm sure you all know we have 11 regions spread across the world nine of which you can use just by",
    "start": "177160",
    "end": "183400"
  },
  {
    "text": "opening an account two of which are a little bit more special Meg of cloud and the Chinese region so working with",
    "start": "183400",
    "end": "192220"
  },
  {
    "start": "190000",
    "end": "263000"
  },
  {
    "text": "gaming companies I find really inspiring there are so many cool things being done in the gaming industry and as I was",
    "start": "192220",
    "end": "199060"
  },
  {
    "text": "flying over here to Las Vegas I remember this discussion I had with with a colleague of mine in in the UK Fitz and",
    "start": "199060",
    "end": "205239"
  },
  {
    "text": "he had this really cool idea for a game and I thought I have to implement that and yet I shouldn't even be talking",
    "start": "205239",
    "end": "212739"
  },
  {
    "text": "about it actually because it's not done and and I actually haven't even started it but if you keep it in this room maybe",
    "start": "212739",
    "end": "219190"
  },
  {
    "text": "and don't share it with anyone in the games industry instead okay so anyway this is the idea",
    "start": "219190",
    "end": "225239"
  },
  {
    "text": "3d pong and I'm thinking like revolutionary concepts like multiplayer",
    "start": "225239",
    "end": "231150"
  },
  {
    "text": "multi-platform multi ball play leaderboards achievements in-game",
    "start": "231150",
    "end": "236769"
  },
  {
    "text": "purchases you know all the bells and whistles you need today and maybe a",
    "start": "236769",
    "end": "243040"
  },
  {
    "text": "front end in html5 unity3d PowerPoint I know can you implement it front end in",
    "start": "243040",
    "end": "249549"
  },
  {
    "text": "PowerPoint so but but for some of these features you definitely do back end as",
    "start": "249549",
    "end": "255459"
  },
  {
    "text": "well like things like leaderboards that you want to share between the different users by the way I'm not really a game designer in case that's not clear so if",
    "start": "255459",
    "end": "264880"
  },
  {
    "start": "263000",
    "end": "345000"
  },
  {
    "text": "we were to implement something support this game what could that look like and there are some patterns that it",
    "start": "264880",
    "end": "270669"
  },
  {
    "text": "seemed to be like common between many different gaming customers to start with when you define a back-end it's good to",
    "start": "270669",
    "end": "276970"
  },
  {
    "text": "think about it in terms of an API defining the backend as an API allows",
    "start": "276970",
    "end": "282520"
  },
  {
    "text": "you to separate the front-end from the backend which simplifies things like versioning and development of these two",
    "start": "282520",
    "end": "287919"
  },
  {
    "text": "different parts very common today is having an API defined using HTTP with",
    "start": "287919",
    "end": "293590"
  },
  {
    "text": "Jason as a way to structure the data you're sending between the client and the server then you define operations",
    "start": "293590",
    "end": "301690"
  },
  {
    "text": "things like get friends get leaderboards submit scores or whatever kinds of operations you need support for your",
    "start": "301690",
    "end": "307930"
  },
  {
    "text": "game you might also have things like binary asset data it could be content",
    "start": "307930",
    "end": "313540"
  },
  {
    "text": "you need to download to the client based on what board they're playing in 3d pong or whatever your game needs in addition",
    "start": "313540",
    "end": "321550"
  },
  {
    "text": "you might have a need for dedicated multiplayer servers things where you need the real-time interaction between",
    "start": "321550",
    "end": "327850"
  },
  {
    "text": "players and you need a back-end to support them maintaining things like game States and maybe exchanging",
    "start": "327850",
    "end": "334630"
  },
  {
    "text": "messages between the different connected players and of course you want the environment to be highly available and",
    "start": "334630",
    "end": "340090"
  },
  {
    "text": "scalable as well so let's see what this could look like on AWS to begin with you",
    "start": "340090",
    "end": "347169"
  },
  {
    "text": "have the clients they could be like desktop laptop mobile device whatever that might be and the first thing you",
    "start": "347169",
    "end": "352360"
  },
  {
    "text": "need to think about when starting up the service in AI AWS is decide what region to run the service in as I mentioned",
    "start": "352360",
    "end": "358930"
  },
  {
    "text": "before there are many different regions if you only run your game out of a single region you might want to consider",
    "start": "358930",
    "end": "364210"
  },
  {
    "text": "where the majority of your users are so that you pick the region which gives the overall best user experience within each",
    "start": "364210",
    "end": "371950"
  },
  {
    "text": "of the general regions there are always two or more availability zones physically isolated from each other with",
    "start": "371950",
    "end": "379000"
  },
  {
    "text": "things like a separate network connectivity and power and cooling and all the other things that make things",
    "start": "379000",
    "end": "384490"
  },
  {
    "text": "take then you want to deploy your game servers the actual API the game API",
    "start": "384490",
    "end": "391960"
  },
  {
    "text": "logic and there are different ways of deploying of course you could use higher-level tools like Italy as",
    "start": "391960",
    "end": "397539"
  },
  {
    "text": "opsworks or elastic Beanstalk or maybe the new code deploy service that",
    "start": "397539",
    "end": "402650"
  },
  {
    "text": "that was announced this morning but you might also decide to do your own thing",
    "start": "402650",
    "end": "407810"
  },
  {
    "text": "and before it straight onto the Elastic Compute cloud service easy to on virtual",
    "start": "407810",
    "end": "413690"
  },
  {
    "text": "machines like instances as we call them and of course you want to run multiple instances and place them in different",
    "start": "413690",
    "end": "420290"
  },
  {
    "text": "availability zones to benefit from the higher availability you can get by doing that then to make sure you actually use",
    "start": "420290",
    "end": "427550"
  },
  {
    "text": "these different instances you use the service such as elastic low bouncer to distribute the incoming traffic over the",
    "start": "427550",
    "end": "433490"
  },
  {
    "text": "instance of better running using health checks to make sure you don't send traffic to an instance which is broken",
    "start": "433490",
    "end": "440320"
  },
  {
    "text": "then in a solution like this you don't want to store State in those game",
    "start": "440590",
    "end": "446600"
  },
  {
    "text": "service or in those instances where you've deployed your application if you do that if something happens with that",
    "start": "446600",
    "end": "453680"
  },
  {
    "text": "instance of course that state you stored there it's gonna be gone so what's very common is to use something like a",
    "start": "453680",
    "end": "460040"
  },
  {
    "text": "datastore very often a relational database and for that you could use the",
    "start": "460040",
    "end": "465680"
  },
  {
    "text": "Amazon RDS service the relational database service which supports Oracle Microsoft sequel server my sequel and",
    "start": "465680",
    "end": "473330"
  },
  {
    "text": "Postgres and the newly announced Aurora database eventually when that's",
    "start": "473330",
    "end": "478820"
  },
  {
    "text": "available and of course you want to make that highly available as well and in RDS",
    "start": "478820",
    "end": "485000"
  },
  {
    "text": "you can flip the switch to make sure that the database is in multi availability zone mode which enables it",
    "start": "485000",
    "end": "492020"
  },
  {
    "text": "to synchronously replicate data into second available zone so this is a good",
    "start": "492020",
    "end": "497960"
  },
  {
    "text": "start if you're in this location you have a good foundation to build your",
    "start": "497960",
    "end": "503000"
  },
  {
    "text": "your back-end from you're highly available using multiple availability zones and there's sort of the common",
    "start": "503000",
    "end": "509300"
  },
  {
    "text": "basic patterns but what happens when everyone wants to play 3d pong as I'm",
    "start": "509300",
    "end": "516200"
  },
  {
    "text": "sure will happen we need to scale up so let's look at that so if we want to",
    "start": "516200",
    "end": "523099"
  },
  {
    "text": "increase the capacity of our back-end one of the first things that is usually good to do is make sure that you use the",
    "start": "523099",
    "end": "528920"
  },
  {
    "text": "right tool for each job and if you previously delivered binary resource just through your API or through or game",
    "start": "528920",
    "end": "536269"
  },
  {
    "text": "servers that might be something you want to move outside of that and one option",
    "start": "536269",
    "end": "542000"
  },
  {
    "text": "is to use the simple storage service s3 to host store your your binary assets",
    "start": "542000",
    "end": "548420"
  },
  {
    "text": "and also deliver them to clients to decrease the latency that clients",
    "start": "548420",
    "end": "558579"
  },
  {
    "text": "clients see when they download assets you might also use a CDN such as the the",
    "start": "558819",
    "end": "564829"
  },
  {
    "text": "cloud front service you can use that in front of s3 to make sure static resources are cached more locally to the",
    "start": "564829",
    "end": "571490"
  },
  {
    "text": "users and by doing this by moving some of these things that the game server did",
    "start": "571490",
    "end": "576860"
  },
  {
    "text": "previously in two separate services you decrease the load of the game servers which means you can potentially run",
    "start": "576860",
    "end": "582829"
  },
  {
    "text": "smaller instances thereby saving money",
    "start": "582829",
    "end": "587110"
  },
  {
    "text": "so then of course we need to actually handle Peaks within our game service as",
    "start": "588879",
    "end": "594470"
  },
  {
    "text": "well if user load goes up we need to run more service and to do that we might use auto scaling groups functionality",
    "start": "594470",
    "end": "601879"
  },
  {
    "text": "related to ec2 using auto scaling groups we can adjust the number of instances",
    "start": "601879",
    "end": "607279"
  },
  {
    "text": "running based on the load we're seeing and this is not just good to elastically",
    "start": "607279",
    "end": "613040"
  },
  {
    "text": "adjust the capacity we have all the scaling also knows how many instances should be running so if an instance",
    "start": "613040",
    "end": "619490"
  },
  {
    "text": "fails it can replace it automatically without any human intervention so then",
    "start": "619490",
    "end": "629180"
  },
  {
    "text": "we up to the database layer database layer is usually a little bit more tricky most database software they don't",
    "start": "629180",
    "end": "636559"
  },
  {
    "text": "support just naturally scaling out on multiple instances but there are some",
    "start": "636559",
    "end": "642800"
  },
  {
    "text": "things you might do still you can for instance add a caching layer for",
    "start": "642800",
    "end": "649069"
  },
  {
    "text": "instance using the Amazon ElastiCache service which handles the infrastructural aspect of running alas M",
    "start": "649069",
    "end": "655100"
  },
  {
    "text": "Redis or mem cache tea and if you make sure in your application to always put",
    "start": "655100",
    "end": "660199"
  },
  {
    "text": "frequently requested data in the cache you decrease the load on the database",
    "start": "660199",
    "end": "665720"
  },
  {
    "text": "and can thereby handle more users so that's good in theory the",
    "start": "665720",
    "end": "672870"
  },
  {
    "text": "problem is games tend to be right heavy there are many things going on in a game",
    "start": "672870",
    "end": "678690"
  },
  {
    "text": "client you might want to collect things like what the user is doing in the game",
    "start": "678690",
    "end": "683810"
  },
  {
    "text": "things like session lanes or purchases or a lot of data that you want to",
    "start": "683810",
    "end": "689339"
  },
  {
    "text": "persist because you also want to analyze it to understand what the users are doing in the game so that you can",
    "start": "689339",
    "end": "694500"
  },
  {
    "text": "improve the game so a lot of data coming in and you want to store it and in that",
    "start": "694500",
    "end": "700199"
  },
  {
    "text": "scenario adding a cache doesn't really help very much in addition the kind of",
    "start": "700199",
    "end": "708180"
  },
  {
    "text": "information you get from games tend to be quite simple simple events may be key value pairs or may be a binary",
    "start": "708180",
    "end": "714509"
  },
  {
    "text": "structures like game state that you want to persist and as the peak load goes up",
    "start": "714509",
    "end": "721800"
  },
  {
    "text": "the number of users increase then you're going to see the database become a bottleneck and there are different ways",
    "start": "721800",
    "end": "728370"
  },
  {
    "start": "726000",
    "end": "1075000"
  },
  {
    "text": "of handling this one way is for instance to use what's called charting and by",
    "start": "728370",
    "end": "734459"
  },
  {
    "text": "charting your database environments you basically add more database environments so if we start in a situation like this",
    "start": "734459",
    "end": "740399"
  },
  {
    "text": "where we have a single database environment with all our data in we have a master database replicated into the",
    "start": "740399",
    "end": "746279"
  },
  {
    "text": "secondary copy for durability reasons we might store all the users in there say with the user side user IDs starting",
    "start": "746279",
    "end": "753360"
  },
  {
    "text": "between a and Z and if we want increase write capacity we basically add another",
    "start": "753360",
    "end": "759329"
  },
  {
    "text": "database environment and we split our user base into these two separate databases to handle this usually you",
    "start": "759329",
    "end": "767880"
  },
  {
    "text": "need to add logic in your application as well to make sure the queries and inserts and stuff like that are done",
    "start": "767880",
    "end": "773309"
  },
  {
    "text": "against the right database and actually usually it's not based on like first letter of the user ID there it might use",
    "start": "773309",
    "end": "779399"
  },
  {
    "text": "something like consistent hashing to make sure you get an even distribution across the different shards and then of",
    "start": "779399",
    "end": "785819"
  },
  {
    "text": "course if you want to increase capacity even more you add another database and you shard into that as well so this",
    "start": "785819",
    "end": "794220"
  },
  {
    "text": "looks fine right thing is in the games industry which some of you might be",
    "start": "794220",
    "end": "800759"
  },
  {
    "text": "working where you tend to want to work on actually implementing games and not",
    "start": "800759",
    "end": "806279"
  },
  {
    "text": "doing things like this this is what's called not fun so an alternative to",
    "start": "806279",
    "end": "814740"
  },
  {
    "text": "doing things like this like sharding and working with infrastructure and managing the data you could select the database that it actually has built-in support",
    "start": "814740",
    "end": "821370"
  },
  {
    "text": "for scaling out and one example is Amazon DynamoDB so a dynamo DB is a",
    "start": "821370",
    "end": "830670"
  },
  {
    "text": "fully managed no sequel datastore which is built on provisioned throughput which",
    "start": "830670",
    "end": "836640"
  },
  {
    "text": "basically means that you just tell the service how many writes and reads per second you want to support and dynamodb make sure",
    "start": "836640",
    "end": "843450"
  },
  {
    "text": "the infrastructure to handle that is provision for you you store data in",
    "start": "843450",
    "end": "851790"
  },
  {
    "text": "tables and you can define secondary indexes to make sure that data can be",
    "start": "851790",
    "end": "856980"
  },
  {
    "text": "efficiently retrieved in different ways it's based on really simple operations like puts and gets of the the keys with",
    "start": "856980",
    "end": "865890"
  },
  {
    "text": "the attributes and just recently a few weeks back we released document support",
    "start": "865890",
    "end": "870899"
  },
  {
    "text": "as well which allows you to actually represent JSON documents in in as an",
    "start": "870899",
    "end": "877079"
  },
  {
    "text": "item I'll describe that a little bit more and as part of the same release we",
    "start": "877079",
    "end": "882329"
  },
  {
    "text": "also increase the maximum size of documents or items from 64 kilobytes to 400 kilobytes and we also announced",
    "start": "882329",
    "end": "889440"
  },
  {
    "text": "re-indexing support it's not out yet but will be released shortly and it's going",
    "start": "889440",
    "end": "895470"
  },
  {
    "text": "to allow you to redefine indexes in already existing tables instead of having to do it when you create the",
    "start": "895470",
    "end": "901529"
  },
  {
    "text": "table and there's a lot of different",
    "start": "901529",
    "end": "906990"
  },
  {
    "text": "services or sorry libraries around dynamo DB as well that we can use to extend the functionality of the base",
    "start": "906990",
    "end": "912930"
  },
  {
    "text": "service things like a geo hash library that allows you to store and query geographical information it can be",
    "start": "912930",
    "end": "919320"
  },
  {
    "text": "pretty cool if you if you're working with the points of interest and things like that there's also a tool called",
    "start": "919320",
    "end": "924959"
  },
  {
    "text": "dynamic dynamodb that allows you to adjust the capacity based on the needs you have so you can vary the capacity",
    "start": "924959",
    "end": "931709"
  },
  {
    "text": "over day depending on on the load that is put against dynamodb so let's look at what",
    "start": "931709",
    "end": "937970"
  },
  {
    "text": "it how we could use DynamoDB to handle a leaderboard case in our 3d pong application so the use case is in 3d",
    "start": "937970",
    "end": "945020"
  },
  {
    "text": "pong I want to be able to show my users that score they've achieved for all the different boards they played and to do",
    "start": "945020",
    "end": "953060"
  },
  {
    "text": "this we might create a table like this we start by defining a hash key based on the user ID the hash key is the primary",
    "start": "953060",
    "end": "960320"
  },
  {
    "text": "key which we use to efficiently retrieve data from dynamodb in addition we can",
    "start": "960320",
    "end": "967040"
  },
  {
    "text": "define a range key based on the board name the range key is a sub key and all",
    "start": "967040",
    "end": "972410"
  },
  {
    "text": "the items sharing a hash key are sorted by the range key then we can define",
    "start": "972410",
    "end": "979490"
  },
  {
    "text": "additional attributes such as the top score we want to store and a timestamp when the score was achieved and by doing",
    "start": "979490",
    "end": "986120"
  },
  {
    "text": "it this way we can just make a single query against DynamoDB to get all that scores for the different boards that a",
    "start": "986120",
    "end": "993470"
  },
  {
    "text": "user has achieved but what if we want the global leaderboard we want to be",
    "start": "993470",
    "end": "999860"
  },
  {
    "text": "able to show say the top 10 scores from all players for a specific board to do",
    "start": "999860",
    "end": "1006820"
  },
  {
    "text": "that we could define a secondary index something like this so we have the",
    "start": "1006820",
    "end": "1012700"
  },
  {
    "text": "original table and we take the different attributes defined in that table and create an index from that so in this",
    "start": "1012700",
    "end": "1019330"
  },
  {
    "text": "case we use the board name as the hash key the top score as the range key and",
    "start": "1019330",
    "end": "1026589"
  },
  {
    "text": "then we can project additional attributes into the index as well such as the user ID that we might want to",
    "start": "1026589",
    "end": "1031870"
  },
  {
    "text": "keep track of when we display this course so with this structure we can now",
    "start": "1031870",
    "end": "1039310"
  },
  {
    "text": "efficiently get the scores for a specific board and since the the items",
    "start": "1039310",
    "end": "1046420"
  },
  {
    "text": "are sorted by the range key which means the score we can and dynamodb can return",
    "start": "1046420",
    "end": "1052630"
  },
  {
    "text": "the the information in reverse sort order we can make an efficient query to",
    "start": "1052630",
    "end": "1058780"
  },
  {
    "text": "get just the top 10 scores for a specific board and this index is automatically maintained by dynamically",
    "start": "1058780",
    "end": "1065080"
  },
  {
    "text": "before us and in similar ways we can use balls together with different kind of secondary indexes to handle many",
    "start": "1065080",
    "end": "1071500"
  },
  {
    "text": "different kinds of gaming news cases to talk a little bit about the the document",
    "start": "1071500",
    "end": "1077380"
  },
  {
    "start": "1075000",
    "end": "1163000"
  },
  {
    "text": "support that was recently added so previously we had support for a number of different data types in in dynamodb",
    "start": "1077380",
    "end": "1084070"
  },
  {
    "text": "items including strings numbers and binaries and set versions of the same and now we've added a few simple",
    "start": "1084070",
    "end": "1091420"
  },
  {
    "text": "additional data types boolean and nulls together with to document data types",
    "start": "1091420",
    "end": "1097000"
  },
  {
    "text": "list and map and list the map they're a little bit special because they can contain the other data types including",
    "start": "1097000",
    "end": "1102610"
  },
  {
    "text": "themselves recursively which means you can define a document tree to go into an",
    "start": "1102610",
    "end": "1108130"
  },
  {
    "text": "attribute value and by using these types you can represent something like a JSON",
    "start": "1108130",
    "end": "1113530"
  },
  {
    "text": "document directly in a dynamodb so using the SDK when you take a JSON document",
    "start": "1113530",
    "end": "1120100"
  },
  {
    "text": "it's gonna automatically map it into these dynamo DD DB data types so for",
    "start": "1120100",
    "end": "1125230"
  },
  {
    "text": "instance in your gaming API if you get a document Bay in JSON from the client you",
    "start": "1125230",
    "end": "1130750"
  },
  {
    "text": "can put that directly into an attribute in dynamo DB and then by using the new addressing functionality you can modify",
    "start": "1130750",
    "end": "1137920"
  },
  {
    "text": "and retrieve specific parts of that document for instance if we have a",
    "start": "1137920",
    "end": "1144040"
  },
  {
    "text": "document like this with the scores for different boards we can get and modify just that part of the document directly",
    "start": "1144040",
    "end": "1151330"
  },
  {
    "text": "and this increases efficiently because we don't need to download the whole document make modifications and then",
    "start": "1151330",
    "end": "1156610"
  },
  {
    "text": "submit everything again so",
    "start": "1156610",
    "end": "1164550"
  },
  {
    "start": "1163000",
    "end": "1369000"
  },
  {
    "text": "if we're interested in these things like how to scale your environment or maybe use DynamoDB and model data here some",
    "start": "1164550",
    "end": "1172080"
  },
  {
    "text": "suggested sessions that you might want to check out so to continue with our 3d",
    "start": "1172080",
    "end": "1181170"
  },
  {
    "text": "board is 3d pong board game another thing we might want to do as well is",
    "start": "1181170",
    "end": "1186870"
  },
  {
    "text": "look at multiplayer servers and for multiplayer servers they usually have a little bit different requirements than",
    "start": "1186870",
    "end": "1193020"
  },
  {
    "text": "our API back-end we might still have the API back-end as I mentioned previously we must still use something like s3 and",
    "start": "1193020",
    "end": "1199770"
  },
  {
    "text": "CloudFront for our binary assets but then we can create also a separate public tier of game servers so",
    "start": "1199770",
    "end": "1207030"
  },
  {
    "text": "multiplayer game servers and they usually do things like require direct connectivity from the end users they",
    "start": "1207030",
    "end": "1213900"
  },
  {
    "text": "might use custom protocols based on UDP or direct connections over TCP and by",
    "start": "1213900",
    "end": "1221190"
  },
  {
    "text": "having them run like this you can vary the number of game servers you're running based on the number of users",
    "start": "1221190",
    "end": "1226559"
  },
  {
    "text": "using so for instance the process might look something like this on the client",
    "start": "1226559",
    "end": "1233370"
  },
  {
    "text": "device they want to start a new game so they connect to the API service log in do whatever is needed in your game logic",
    "start": "1233370",
    "end": "1240360"
  },
  {
    "text": "to to handle this user they might want to start a new game request matchmaking",
    "start": "1240360",
    "end": "1245490"
  },
  {
    "text": "create the world whatever it is that your game is doing and then we want to return like the IP address and",
    "start": "1245490",
    "end": "1252390"
  },
  {
    "text": "potentially port number of the game server to connect to so how do we do that well we could use the tools such as",
    "start": "1252390",
    "end": "1258570"
  },
  {
    "text": "the zookeeper as a service service registry for to keep track of what's running in our environment but we",
    "start": "1258570",
    "end": "1265710"
  },
  {
    "text": "could also use something simple such as the ec2 api's and through the api's",
    "start": "1265710",
    "end": "1271470"
  },
  {
    "text": "query the environment based on tags for instance to see what game servers are running we can also use these two API to",
    "start": "1271470",
    "end": "1278580"
  },
  {
    "text": "just start up new game servers if we need to do that new instances depending on the load we're seen we can also",
    "start": "1278580",
    "end": "1285000"
  },
  {
    "text": "connect directly to the game servers to do things like initialization making sure the world is in the right state",
    "start": "1285000",
    "end": "1290880"
  },
  {
    "text": "before we allow a user to connect and once we're happy with the situation we can take the IP address and port number",
    "start": "1290880",
    "end": "1296820"
  },
  {
    "text": "of that server returned it to the client which then can connect directly to that instance at that point the client might",
    "start": "1296820",
    "end": "1306650"
  },
  {
    "text": "download additional binary resources such as the custom 3d pong boards or whatever it might be and if you have",
    "start": "1306650",
    "end": "1314570"
  },
  {
    "text": "other players they might go through the same process and through the match making algorithms in our API they could",
    "start": "1314570",
    "end": "1320570"
  },
  {
    "text": "return the same game server address so that they connect the two players to each other in the same way if you have a",
    "start": "1320570",
    "end": "1330260"
  },
  {
    "text": "a game that is latency sensitive you might want to run these game servers in multiple regions you can use the same",
    "start": "1330260",
    "end": "1337820"
  },
  {
    "text": "path and it's very common to have a single API back-end running in one location globally because the API",
    "start": "1337820",
    "end": "1344120"
  },
  {
    "text": "especially if you have HTTP it's not as latency sensitive as the real multiplayer interaction but you can use",
    "start": "1344120",
    "end": "1351049"
  },
  {
    "text": "the same mechanism in the API through these two api's start up new instances",
    "start": "1351049",
    "end": "1356210"
  },
  {
    "text": "in a different region do the initialization return that IP to the client and allow those clients to",
    "start": "1356210",
    "end": "1361940"
  },
  {
    "text": "connect directly to the game server running near them so if you're",
    "start": "1361940",
    "end": "1370429"
  },
  {
    "start": "1369000",
    "end": "1460000"
  },
  {
    "text": "interested in these aspects you might want to check out some additional sessions in the gaming track around",
    "start": "1370429",
    "end": "1376510"
  },
  {
    "text": "running multiplayer games globally and also looking at how to deploy games on",
    "start": "1376510",
    "end": "1382309"
  },
  {
    "text": "in Amazon and also alternative ways of delivering games based on app stream for",
    "start": "1382309",
    "end": "1388909"
  },
  {
    "text": "instance so to summarize a little bit use auto scaling the idea of the only",
    "start": "1388909",
    "end": "1396919"
  },
  {
    "text": "running what you're actually using is really important so using auto scaling",
    "start": "1396919",
    "end": "1401929"
  },
  {
    "text": "to make sure you only have the instances that you actually need based on the incoming user load it's a really",
    "start": "1401929",
    "end": "1407299"
  },
  {
    "text": "important idea not just for scalability but also for the self-healing aspect I",
    "start": "1407299",
    "end": "1412730"
  },
  {
    "text": "mentioned CloudFront s3 think about how you can",
    "start": "1412730",
    "end": "1421050"
  },
  {
    "text": "offload your game servers to make sure you only actually do what they they they are needed for doing things like",
    "start": "1421050",
    "end": "1427590"
  },
  {
    "text": "delivering static assets might be much better to do through other services and",
    "start": "1427590",
    "end": "1433670"
  },
  {
    "text": "managing your own complex database infrastructure might not be what you want to focus on so it might be worth",
    "start": "1433670",
    "end": "1439650"
  },
  {
    "text": "having a look at dynamo DB for something like that and then dynamically managing your set of game servers through the",
    "start": "1439650",
    "end": "1446190"
  },
  {
    "text": "api's also in a multi region set up is an important idea where auto scaling might not really fit in what you want to",
    "start": "1446190",
    "end": "1452760"
  },
  {
    "text": "do you can still use the api's and have your own logic to control the service you're running alright with that said",
    "start": "1452760",
    "end": "1462120"
  },
  {
    "text": "I'd like to hand over to rope who's going to tell us a little bit about the game super nodes",
    "start": "1462120",
    "end": "1467929"
  },
  {
    "text": "Thank You Martin yeah so a bit about",
    "start": "1468560",
    "end": "1480270"
  },
  {
    "text": "myself I'm Rob economist I've been working with mobile games for a while now in different kind roles for the past",
    "start": "1480270",
    "end": "1488520"
  },
  {
    "text": "three years so I've been working with cron crew looking after how we implement server or server architecture and how we",
    "start": "1488520",
    "end": "1495030"
  },
  {
    "text": "implement the server-side cold and a bit about the company there are a small",
    "start": "1495030",
    "end": "1502080"
  },
  {
    "text": "mobile gaming startup doing free-to-play games try to make them sole sole contain",
    "start": "1502080",
    "end": "1507570"
  },
  {
    "text": "something deeper deeper social interactions maybe make people find new",
    "start": "1507570",
    "end": "1513530"
  },
  {
    "text": "real world connections we're based in Helsinki Finland found at that three",
    "start": "1513530",
    "end": "1520770"
  },
  {
    "text": "years ago the game I'm going to talk about is super Nazis of it's our first",
    "start": "1520770",
    "end": "1526560"
  },
  {
    "text": "release we really did this to yeah so to",
    "start": "1526560",
    "end": "1533010"
  },
  {
    "start": "1531000",
    "end": "1648000"
  },
  {
    "text": "give you some kind of idea what super nodes is I have a video about the game here",
    "start": "1533010",
    "end": "1539930"
  },
  {
    "start": "1648000",
    "end": "1686000"
  },
  {
    "text": "okay so to quickly recap something about the game from technical standpoint it is",
    "start": "1648630",
    "end": "1655930"
  },
  {
    "text": "a multiplayer game it is always connected to a server the server actually mirrors everything you do in",
    "start": "1655930",
    "end": "1661030"
  },
  {
    "text": "the games it's running the game logic it has the Box all 3d world it's doing this",
    "start": "1661030",
    "end": "1666580"
  },
  {
    "text": "tetris like physics things might be falling down the server also controls",
    "start": "1666580",
    "end": "1672309"
  },
  {
    "text": "all of the non player characters it doing a lot of AI and pad finding so",
    "start": "1672309",
    "end": "1677620"
  },
  {
    "text": "there's a lot of going on on the server side because we want to validate the client actions and then on to how we",
    "start": "1677620",
    "end": "1687910"
  },
  {
    "start": "1686000",
    "end": "2067000"
  },
  {
    "text": "actually implement the server side first of all I mean I want to talk about some",
    "start": "1687910",
    "end": "1696700"
  },
  {
    "text": "overall design goals for the architecture that we had well we wanted",
    "start": "1696700",
    "end": "1701740"
  },
  {
    "text": "to build a horizontally scalable system so what it means that we can utilize the",
    "start": "1701740",
    "end": "1706929"
  },
  {
    "text": "other scaling groups add more resources as we need more capacity and maybe take",
    "start": "1706929",
    "end": "1712179"
  },
  {
    "text": "out resources when we don't need take capacity and since we're going to fail",
    "start": "1712179",
    "end": "1717880"
  },
  {
    "text": "make box instances are going to disappear all kinds of random stuff tends to happen especially when you have",
    "start": "1717880",
    "end": "1725020"
  },
  {
    "text": "a lot of machines we try to make it make sure that those failures usually affect",
    "start": "1725020",
    "end": "1730270"
  },
  {
    "text": "only a subset of our users and one",
    "start": "1730270",
    "end": "1735280"
  },
  {
    "text": "important thing is that the a it should be kept as simple as simple as possible so you can actually yourself understand",
    "start": "1735280",
    "end": "1741790"
  },
  {
    "text": "what is happening on the server side and here's an overview of the backend it is",
    "start": "1741790",
    "end": "1749110"
  },
  {
    "text": "really just two main components we have this login API that's sitting behind ELB",
    "start": "1749110",
    "end": "1754929"
  },
  {
    "text": "it's an auto scaling group and then there's another scaling group that is",
    "start": "1754929",
    "end": "1761200"
  },
  {
    "text": "the game servers that are doing the actual heavy lifting and we use ready",
    "start": "1761200",
    "end": "1766750"
  },
  {
    "text": "is not as the cash so much but we use it for all kinds of data that we don't want",
    "start": "1766750",
    "end": "1771820"
  },
  {
    "text": "to store permanently like citizens or the state of our game cluster and we use",
    "start": "1771820",
    "end": "1777400"
  },
  {
    "text": "MongoDB for persisting data for long at a time like your game system you are a",
    "start": "1777400",
    "end": "1783970"
  },
  {
    "text": "game world like the books of world then the logging API it's HTTP based really",
    "start": "1783970",
    "end": "1792400"
  },
  {
    "text": "simple actually HTTP between the client and the API ELB does the SSL termination",
    "start": "1792400",
    "end": "1798280"
  },
  {
    "text": "for us it doesn't contain much logic it is basically a proxy server it is just",
    "start": "1798280",
    "end": "1805450"
  },
  {
    "text": "floating the request from the client to to our game servers with which so actually handling all of the heavy",
    "start": "1805450",
    "end": "1811840"
  },
  {
    "text": "lifting of how to find you and new place to run your world and because it is a",
    "start": "1811840",
    "end": "1817090"
  },
  {
    "text": "proxy server it's it's pretty important that it can keep a lot of a lot of those",
    "start": "1817090",
    "end": "1822310"
  },
  {
    "text": "logging connections open at a time and some of them might start to take a long time a long time for me seconds that's",
    "start": "1822310",
    "end": "1829810"
  },
  {
    "text": "maybe not a long time for some people but still it should be able to handle a lot of concurrent connections a lot of",
    "start": "1829810",
    "end": "1837760"
  },
  {
    "text": "login connection logging attempts at once and then a bit about the game",
    "start": "1837760",
    "end": "1845140"
  },
  {
    "text": "servers they're actually written in c-sharp since we wrote the game with unity in c-sharp running on mono vm on",
    "start": "1845140",
    "end": "1853990"
  },
  {
    "text": "linux we were able to do that because of the new versions three-point-something",
    "start": "1853990",
    "end": "1860110"
  },
  {
    "text": "versions of Manabi emam are actually somewhat stable it is also important the",
    "start": "1860110",
    "end": "1867640"
  },
  {
    "text": "one reason we wanted to use the c soft on the backend that is that we wanted to be able to share large chunks of the",
    "start": "1867640",
    "end": "1873580"
  },
  {
    "text": "game code between the server and the client since we need to run the a ipad",
    "start": "1873580",
    "end": "1879160"
  },
  {
    "text": "find in edit the box all world do all kinds of things on the back end we really don't want to go go and rewrite",
    "start": "1879160",
    "end": "1886480"
  },
  {
    "text": "that in java or something not like that and as a side effect that we didn't",
    "start": "1886480",
    "end": "1892150"
  },
  {
    "text": "think about at start when we started the project we noticed that most of the programmers could work with all of the",
    "start": "1892150",
    "end": "1898810"
  },
  {
    "text": "stack so you could start to clemont's um like top list feature on the client and then you could go and",
    "start": "1898810",
    "end": "1904600"
  },
  {
    "text": "write something on the backend also and maybe involve some server programmer along the line when you start to figure",
    "start": "1904600",
    "end": "1912129"
  },
  {
    "text": "out how you're gonna host the whole of the top list yeah and radius radius is really awesome",
    "start": "1912129",
    "end": "1918549"
  },
  {
    "text": "actually it is the one component that I I haven't had any problems like ever and",
    "start": "1918549",
    "end": "1924879"
  },
  {
    "text": "we we launched the game and current will run it so that we only have like one node content consider having all of our",
    "start": "1924879",
    "end": "1932200"
  },
  {
    "text": "system data all of the cluster state so it can actually fail but we'll heal it back and the system will be working",
    "start": "1932200",
    "end": "1938590"
  },
  {
    "text": "again and also use pops up which we insert for message game between our game",
    "start": "1938590",
    "end": "1945970"
  },
  {
    "text": "servers through radius and but there are things we don't want to lose like or",
    "start": "1945970",
    "end": "1952359"
  },
  {
    "text": "like the top lists or I guess we store chat logs and things like that also on",
    "start": "1952359",
    "end": "1957970"
  },
  {
    "text": "Redis and we use the replicated cluster for that we ended up deploying it",
    "start": "1957970",
    "end": "1964570"
  },
  {
    "text": "through elastic cache because it provides well automated backups pretty",
    "start": "1964570",
    "end": "1972489"
  },
  {
    "text": "good monitoring of Redis so you see what kind of what kind of comments you're running how much you're using memory and",
    "start": "1972489",
    "end": "1979149"
  },
  {
    "text": "so on and I guess there's even some kind of automated software updates so it's",
    "start": "1979149",
    "end": "1985830"
  },
  {
    "text": "really really good and recently the option for running Redis and then",
    "start": "1985830",
    "end": "1992739"
  },
  {
    "text": "DP where we we have shouting but one on the day people rubberized it provides",
    "start": "1992739",
    "end": "1998739"
  },
  {
    "text": "the sorting for us it basically means our data is split into few few few shards each of those",
    "start": "1998739",
    "end": "2004590"
  },
  {
    "text": "shorts are sitting on top of a rep replica set where there is at least three instances containing a copy of",
    "start": "2004590",
    "end": "2011850"
  },
  {
    "text": "that sort of data and each of those instances is sitting on a different availability zone so even if we lose one",
    "start": "2011850",
    "end": "2020159"
  },
  {
    "text": "available at its own we in at least interior should be able to run MoMA DP it's all deployed through through cloud",
    "start": "2020159",
    "end": "2028289"
  },
  {
    "text": "formation so having done that we were able to easily launch",
    "start": "2028289",
    "end": "2034780"
  },
  {
    "text": "like a load testing environment development environment what whatever we needed but it did take a significant",
    "start": "2034780",
    "end": "2041590"
  },
  {
    "text": "amount of time to figure out how are you going to deploy among add a MongoDB through cloud formation so there's",
    "start": "2041590",
    "end": "2048250"
  },
  {
    "text": "something to consider it can be done but it will take some time to actually implement everything you need and having",
    "start": "2048250",
    "end": "2055389"
  },
  {
    "text": "said that we use ready-made tools for MongoDB for monitoring the cluster and taking backups because it's a few couple",
    "start": "2055390",
    "end": "2062950"
  },
  {
    "text": "of things we don't have to do ourselves and yeah then about the load testing",
    "start": "2062950",
    "end": "2068770"
  },
  {
    "start": "2067000",
    "end": "2389000"
  },
  {
    "text": "which is one really important part of what we've been doing so why would we do",
    "start": "2068770",
    "end": "2074620"
  },
  {
    "text": "load testing there is a big business risk involved in launching a game when",
    "start": "2074620",
    "end": "2081850"
  },
  {
    "text": "you when you get like featured by Apple something you might get a lot of users at once and well if the game doesn't",
    "start": "2081850",
    "end": "2088720"
  },
  {
    "text": "work they're not coming back and and it would be really really costly to try to",
    "start": "2088720",
    "end": "2094450"
  },
  {
    "text": "acquire the users back to marketing and well a lot of upset players and also as",
    "start": "2094450",
    "end": "2100750"
  },
  {
    "text": "a programmer III would like to understand how the system behaves when there's different kind of gameplay modes",
    "start": "2100750",
    "end": "2106930"
  },
  {
    "text": "going on when we take the load or stress it a lot and of course try to find the",
    "start": "2106930",
    "end": "2115270"
  },
  {
    "text": "box and critical bottlenecks something you did you missed what our design in the system before the launch so you",
    "start": "2115270",
    "end": "2120760"
  },
  {
    "text": "don't have to be putting out fires then and well how did we test it simply just",
    "start": "2120760",
    "end": "2127530"
  },
  {
    "text": "replace the unity client with the client written in Erlang actually because it we",
    "start": "2127530",
    "end": "2133600"
  },
  {
    "text": "founded a kind of natural match the model a single player as a single lightweight process so we could write",
    "start": "2133600",
    "end": "2140110"
  },
  {
    "text": "the different kind of processes doing different kind things and the a long Wien actually enabled us to quite easily",
    "start": "2140110",
    "end": "2146520"
  },
  {
    "text": "distribute the load test application on a cluster of law test instances because",
    "start": "2146520",
    "end": "2152680"
  },
  {
    "text": "we need needed a lot of machines because we wanted to run load tests with tens of",
    "start": "2152680",
    "end": "2157930"
  },
  {
    "text": "thousands of concurrent players at once just to see where we can get the cluster and finally try out all kind of matrix",
    "start": "2157930",
    "end": "2166060"
  },
  {
    "text": "tools and try to find out what metrics are important when when running the system yeah once so",
    "start": "2166060",
    "end": "2176260"
  },
  {
    "text": "something about the metrics it's not so pretty but what we made sure that our",
    "start": "2176260",
    "end": "2181270"
  },
  {
    "text": "load testing application actually produced some actionable data and some kind of metrics of how the game looks",
    "start": "2181270",
    "end": "2186370"
  },
  {
    "text": "looks from the clients perspective and for the load testing we used stats D and",
    "start": "2186370",
    "end": "2193240"
  },
  {
    "text": "graphite to aggregate information from the game server so we could see from the both ends how it looks like if there's a",
    "start": "2193240",
    "end": "2200830"
  },
  {
    "text": "possibility like we write the load tester has a bug and it's data would be showing some increase in latencies you",
    "start": "2200830",
    "end": "2209470"
  },
  {
    "text": "want to see from the server side also that the how the game works and we did",
    "start": "2209470",
    "end": "2214480"
  },
  {
    "text": "use cloud formation naturally to see the CPU usage and network traffic and",
    "start": "2214480",
    "end": "2219580"
  },
  {
    "text": "actually in this test there's something bad happening there's only like three dozen P BOTS playing the game and the",
    "start": "2219580",
    "end": "2225460"
  },
  {
    "text": "time it takes to log in a player goes up the roof and I can see from cloud 4 cloud watch that the CPU utilization on",
    "start": "2225460",
    "end": "2233800"
  },
  {
    "text": "the API instances plummets down so basically the API has gone away it",
    "start": "2233800",
    "end": "2241660"
  },
  {
    "text": "actually running a lot of tests like that we noticed that the implement in this kind of our really traditional HTTP",
    "start": "2241660",
    "end": "2248020"
  },
  {
    "text": "API on traditional web server software wasn't such a bright idea because we",
    "start": "2248020",
    "end": "2253930"
  },
  {
    "text": "would usually if we'd had some problems like games ever going and going down or",
    "start": "2253930",
    "end": "2259140"
  },
  {
    "text": "latency with the database or whatever happening we would end up in situations where we would be having long-running",
    "start": "2259140",
    "end": "2266470"
  },
  {
    "text": "logging breakfast taking taking resources away from the API and eventually the API would just quit and",
    "start": "2266470",
    "end": "2273490"
  },
  {
    "text": "go go away now we could have lets us just run more API servers but we decided",
    "start": "2273490",
    "end": "2279010"
  },
  {
    "text": "to just rewrite it all as asynchronous very very really simple lean web server",
    "start": "2279010",
    "end": "2286330"
  },
  {
    "text": "that's just just dusty proxying and some other logic really well so in this case",
    "start": "2286330",
    "end": "2292930"
  },
  {
    "text": "we can see that in this test we could take it to some maybe 80,000 concurrent",
    "start": "2292930",
    "end": "2297940"
  },
  {
    "text": "users and not have that API problem there so a bit better and then when we know that",
    "start": "2297940",
    "end": "2306670"
  },
  {
    "text": "the system is about the working system before the launch we did this magical extra step of actually contacting AWS",
    "start": "2306670",
    "end": "2313810"
  },
  {
    "text": "and telling them what we're about to do and we we we need to do this a couple of times during the development and talk to",
    "start": "2313810",
    "end": "2320950"
  },
  {
    "text": "the solutions architects and actually switched over to VP C and the use enhance networking after having trouble",
    "start": "2320950",
    "end": "2327700"
  },
  {
    "text": "with our load tests and getting feedback from the support and also well basic",
    "start": "2327700",
    "end": "2334510"
  },
  {
    "text": "things like check the limits and make sure there isn't anything simple that's going to trip was over when we launched",
    "start": "2334510",
    "end": "2340390"
  },
  {
    "text": "the game and after spending time with load testing and so on the we got",
    "start": "2340390",
    "end": "2346660"
  },
  {
    "text": "featured by Apple it brought in from you and build players in the first week but",
    "start": "2346660",
    "end": "2353200"
  },
  {
    "text": "really driving the point about the elasticity here a few grabs from data dog this basically in an one on one our",
    "start": "2353200",
    "end": "2361240"
  },
  {
    "text": "we go up from twenty instances to 100 game servers from thousand concurrent",
    "start": "2361240",
    "end": "2366580"
  },
  {
    "text": "users to 6,000 concurrent users and when you have like that kind of firehose opening you you really more well you",
    "start": "2366580",
    "end": "2374200"
  },
  {
    "text": "could you could be doing something else on trust and rule it that we are doing like trusting that it really works",
    "start": "2374200",
    "end": "2379750"
  },
  {
    "text": "you could be scaling up beforehand but but you really want the elasticity of the cloud to handle this kind of stuff",
    "start": "2379750",
    "end": "2385900"
  },
  {
    "text": "and it worked but there's also something",
    "start": "2385900",
    "end": "2392380"
  },
  {
    "start": "2389000",
    "end": "2646000"
  },
  {
    "text": "about scaling down the maybe the cost of the or instant infrastructure I want to talk about it turned out we design it",
    "start": "2392380",
    "end": "2399340"
  },
  {
    "text": "for a pretty large CCU we were weren't able to read stat at some point after",
    "start": "2399340",
    "end": "2405460"
  },
  {
    "text": "launch we wanted to take a look getting the costs meet the actual usage and one",
    "start": "2405460",
    "end": "2413890"
  },
  {
    "text": "one important part is that the databases aren't something that you can usually auto scale so we kind of planned or",
    "start": "2413890",
    "end": "2419860"
  },
  {
    "text": "planned to open publish in MongoDB and to make sure that we have right capacity",
    "start": "2419860",
    "end": "2425490"
  },
  {
    "text": "when we launched the game and then go and switch the instance types if we don't need all of that capacity so we",
    "start": "2425490",
    "end": "2432190"
  },
  {
    "text": "use those or I to instances with local SSD and MongoDB was showing like zero",
    "start": "2432190",
    "end": "2438730"
  },
  {
    "text": "percent utilization during the launch so but it was very costly to run that kind",
    "start": "2438730",
    "end": "2445210"
  },
  {
    "text": "of cluster so we wanted to scale it down and also when scaling down changing the",
    "start": "2445210",
    "end": "2450880"
  },
  {
    "text": "instance types it's also important to follow the metrics and such as screen grabs from data talk we we follow how",
    "start": "2450880",
    "end": "2457900"
  },
  {
    "text": "much reads and writes the game server thinks it's doing and some interval and how many concurrent users we have and",
    "start": "2457900",
    "end": "2464619"
  },
  {
    "text": "that small bit word there is nothing happening we actually had to do a small my didn't maintenance break when we",
    "start": "2464619",
    "end": "2470619"
  },
  {
    "text": "actually switch over our primary instances to the new in new instant",
    "start": "2470619",
    "end": "2475930"
  },
  {
    "text": "types and but following the matrix you can really see that the it is working as",
    "start": "2475930",
    "end": "2481270"
  },
  {
    "text": "it as it was before and well MMS provides all kinds of insights in in",
    "start": "2481270",
    "end": "2488770"
  },
  {
    "text": "this case I could see that there isn't really any kind of effect on how much the database is spending time on like on",
    "start": "2488770",
    "end": "2496390"
  },
  {
    "text": "trying to write today's score it's going going to disk abit more that's stuff",
    "start": "2496390",
    "end": "2501670"
  },
  {
    "text": "that is in the memory which is expected and yeah having having done this all in",
    "start": "2501670",
    "end": "2507369"
  },
  {
    "text": "cloud formation it was pretty easy to go over and update our called formation",
    "start": "2507369",
    "end": "2514690"
  },
  {
    "text": "stacks for the leopard replica set nodes for the replicas of the current replica",
    "start": "2514690",
    "end": "2521680"
  },
  {
    "text": "set running one short and like replace a node at a time which works beautiful",
    "start": "2521680",
    "end": "2527200"
  },
  {
    "text": "with MongoDB and since we were using V PC and n has networking we could have them actually sing from scratch and it happened",
    "start": "2527200",
    "end": "2533589"
  },
  {
    "text": "happened really fast because it was only like some tens of gigabytes of data and",
    "start": "2533589",
    "end": "2539250"
  },
  {
    "text": "finally a muslim' provides this tool called cost Explorer which is pretty handy for actually validating that your",
    "start": "2539250",
    "end": "2545650"
  },
  {
    "text": "cost is going down here it's not going much but it's still going down you can actually drill into more detail by DAC",
    "start": "2545650",
    "end": "2553900"
  },
  {
    "text": "tagging your resources and utilizing that from the cost Explorer it's it's really handy and yeah so to quickly",
    "start": "2553900",
    "end": "2564400"
  },
  {
    "text": "recap the stuff I've been galloping through we took care in the beginning when they",
    "start": "2564400",
    "end": "2570880"
  },
  {
    "text": "started building it just to make sure it's scalable wanted to test the system",
    "start": "2570880",
    "end": "2577060"
  },
  {
    "text": "that it actually works or the extent that we can know and do it and invest",
    "start": "2577060",
    "end": "2586330"
  },
  {
    "text": "some money into the actual launch so that we'll okay okay with spending money",
    "start": "2586330",
    "end": "2591580"
  },
  {
    "text": "on the launch and not putting out fires because some instances are failing so if",
    "start": "2591580",
    "end": "2597400"
  },
  {
    "text": "you have any more questions to me please feel free to email or come talk to me my over time right all right",
    "start": "2597400",
    "end": "2607260"
  },
  {
    "text": "sessions on on gameanalytics that might be interesting to see and just to summarize we talked about gaming on AWS",
    "start": "2622390",
    "end": "2631210"
  },
  {
    "text": "and super NOSSA of course and please don't remember get 3d pong it's our",
    "start": "2631210",
    "end": "2638770"
  },
  {
    "text": "secret right so keep your eyes open and thank you very much for coming to this session hope you have a good rest of",
    "start": "2638770",
    "end": "2643840"
  },
  {
    "text": "reinvention",
    "start": "2643840",
    "end": "2646170"
  }
]