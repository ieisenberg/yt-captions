[
  {
    "text": "hi everyone we have a lot of content",
    "start": "5120",
    "end": "7520"
  },
  {
    "text": "that helps you with the why and the",
    "start": "7520",
    "end": "9519"
  },
  {
    "text": "how-tos of fine-tuning but in this video",
    "start": "9519",
    "end": "12000"
  },
  {
    "text": "I'm going to focus on how you can create",
    "start": "12000",
    "end": "13719"
  },
  {
    "text": "more reliable and repeatable fine-tuning",
    "start": "13719",
    "end": "16358"
  },
  {
    "text": "pipelines I'm Shelby igro I'm a",
    "start": "16359",
    "end": "19000"
  },
  {
    "text": "principal gen ml specialist Solutions",
    "start": "19000",
    "end": "21240"
  },
  {
    "text": "architect and I spend a good majority of",
    "start": "21240",
    "end": "23359"
  },
  {
    "text": "my time looking at how to go from proof",
    "start": "23359",
    "end": "25760"
  },
  {
    "text": "of concept to production focusing on how",
    "start": "25760",
    "end": "29519"
  },
  {
    "text": "to oper operationalized generative Ai",
    "start": "29519",
    "end": "32119"
  },
  {
    "text": "workloads and fine-tuning pipelines are",
    "start": "32120",
    "end": "35000"
  },
  {
    "text": "often a small part of that broader",
    "start": "35000",
    "end": "37640"
  },
  {
    "text": "discussion let's first start with what a",
    "start": "37640",
    "end": "40200"
  },
  {
    "text": "fine-tuning pipeline is so when we talk",
    "start": "40200",
    "end": "42879"
  },
  {
    "text": "about a fine-tuning pipeline we're just",
    "start": "42879",
    "end": "44840"
  },
  {
    "text": "referring to utilizing a tool that's",
    "start": "44840",
    "end": "46640"
  },
  {
    "text": "capable of orchestrating and automating",
    "start": "46640",
    "end": "48399"
  },
  {
    "text": "the steps that are required to fine",
    "start": "48399",
    "end": "50320"
  },
  {
    "text": "tunea model which includes not only the",
    "start": "50320",
    "end": "52920"
  },
  {
    "text": "data and training steps but also the",
    "start": "52920",
    "end": "54879"
  },
  {
    "text": "evaluation of that model as well as the",
    "start": "54879",
    "end": "56879"
  },
  {
    "text": "management of those model versions",
    "start": "56879",
    "end": "60120"
  },
  {
    "text": "in the case of using Laura parameter",
    "start": "60120",
    "end": "62199"
  },
  {
    "text": "efficient fine-tuning based techniques",
    "start": "62199",
    "end": "65000"
  },
  {
    "text": "as you see here you also potentially",
    "start": "65000",
    "end": "67240"
  },
  {
    "text": "have variations of model versions to",
    "start": "67240",
    "end": "69200"
  },
  {
    "text": "consider including the base model used",
    "start": "69200",
    "end": "71799"
  },
  {
    "text": "the trained adapter layers as well as",
    "start": "71799",
    "end": "74759"
  },
  {
    "text": "the merge model if you're merging the",
    "start": "74759",
    "end": "76439"
  },
  {
    "text": "model prior to",
    "start": "76439",
    "end": "77759"
  },
  {
    "text": "deploying so what's the benefit of",
    "start": "77759",
    "end": "79960"
  },
  {
    "text": "creating a fine-tuning",
    "start": "79960",
    "end": "82560"
  },
  {
    "text": "workflow the automation of the workflow",
    "start": "82560",
    "end": "84840"
  },
  {
    "text": "creates more reliability in the",
    "start": "84840",
    "end": "86439"
  },
  {
    "text": "collection of key metadata about the",
    "start": "86439",
    "end": "89240"
  },
  {
    "text": "base Foundation models the data the",
    "start": "89240",
    "end": "91720"
  },
  {
    "text": "training libraries and evaluation",
    "start": "91720",
    "end": "93680"
  },
  {
    "text": "metrics and manually collecting this",
    "start": "93680",
    "end": "95799"
  },
  {
    "text": "metadata is really prone to error",
    "start": "95799",
    "end": "98240"
  },
  {
    "text": "there's also more reliability in the",
    "start": "98240",
    "end": "99960"
  },
  {
    "text": "processes used to tune and evaluate as",
    "start": "99960",
    "end": "102280"
  },
  {
    "text": "well as the technology used so things",
    "start": "102280",
    "end": "104159"
  },
  {
    "text": "like libraries that are used as part of",
    "start": "104159",
    "end": "105719"
  },
  {
    "text": "your fine- tuning workflow pipelines",
    "start": "105719",
    "end": "108240"
  },
  {
    "text": "also provide the increased ability to",
    "start": "108240",
    "end": "110200"
  },
  {
    "text": "repeat the workflow this is especially",
    "start": "110200",
    "end": "112680"
  },
  {
    "text": "true when you're regularly performing",
    "start": "112680",
    "end": "114520"
  },
  {
    "text": "fine-tuning activities based on feedback",
    "start": "114520",
    "end": "117119"
  },
  {
    "text": "or in use cases like",
    "start": "117119",
    "end": "118360"
  },
  {
    "text": "hyper-personalization",
    "start": "118360",
    "end": "120840"
  },
  {
    "text": "the second benefit is increased",
    "start": "120840",
    "end": "122439"
  },
  {
    "text": "traceability I spoke about improved",
    "start": "122439",
    "end": "124560"
  },
  {
    "text": "reliability and having a consistent way",
    "start": "124560",
    "end": "126640"
  },
  {
    "text": "to collect metadata but this also helps",
    "start": "126640",
    "end": "129200"
  },
  {
    "text": "with things like increased transparency",
    "start": "129200",
    "end": "131800"
  },
  {
    "text": "into providing insights about how that",
    "start": "131800",
    "end": "134120"
  },
  {
    "text": "model was fine-tuned so what base",
    "start": "134120",
    "end": "136280"
  },
  {
    "text": "Foundation model was used what the",
    "start": "136280",
    "end": "137920"
  },
  {
    "text": "metrics were used to evaluate",
    "start": "137920",
    "end": "139879"
  },
  {
    "text": "performance of that",
    "start": "139879",
    "end": "141319"
  },
  {
    "text": "model with fine-tuning methods a common",
    "start": "141319",
    "end": "144080"
  },
  {
    "text": "evaluation approach is to incorporate",
    "start": "144080",
    "end": "145920"
  },
  {
    "text": "human in thee Loop feedback which can be",
    "start": "145920",
    "end": "148040"
  },
  {
    "text": "done across the endtoend generative AI",
    "start": "148040",
    "end": "150239"
  },
  {
    "text": "workflow but here specifically I'm",
    "start": "150239",
    "end": "152400"
  },
  {
    "text": "referring to predeployment human in the",
    "start": "152400",
    "end": "154519"
  },
  {
    "text": "loop workflow so this could be through",
    "start": "154519",
    "end": "156920"
  },
  {
    "text": "fine-tuning techniques such as rhf or as",
    "start": "156920",
    "end": "159800"
  },
  {
    "text": "part of the normal evaluation workflow",
    "start": "159800",
    "end": "161640"
  },
  {
    "text": "in something like a user acceptance test",
    "start": "161640",
    "end": "164360"
  },
  {
    "text": "evaluation either way being able to",
    "start": "164360",
    "end": "166599"
  },
  {
    "text": "efficiently integrate human feedback is",
    "start": "166599",
    "end": "169040"
  },
  {
    "text": "important to a fine-tuning",
    "start": "169040",
    "end": "172280"
  },
  {
    "text": "workflow finally when you're looking at",
    "start": "172280",
    "end": "174560"
  },
  {
    "text": "fine-tuning across use cases or tasks as",
    "start": "174560",
    "end": "177239"
  },
  {
    "text": "the number of generative models or",
    "start": "177239",
    "end": "178760"
  },
  {
    "text": "adapters increases it becomes",
    "start": "178760",
    "end": "180800"
  },
  {
    "text": "increasingly important to look for",
    "start": "180800",
    "end": "182480"
  },
  {
    "text": "operational efficiencies in the tooling",
    "start": "182480",
    "end": "184400"
  },
  {
    "text": "and processes used to create and manage",
    "start": "184400",
    "end": "187000"
  },
  {
    "text": "those",
    "start": "187000",
    "end": "188239"
  },
  {
    "text": "models which brings us to sagemaker",
    "start": "188239",
    "end": "190640"
  },
  {
    "text": "pipelines pipelines allows you to",
    "start": "190640",
    "end": "192760"
  },
  {
    "text": "programmatically create pipelines using",
    "start": "192760",
    "end": "195319"
  },
  {
    "text": "either the SDK or you can alternatively",
    "start": "195319",
    "end": "197840"
  },
  {
    "text": "author pipelines using the pipeline",
    "start": "197840",
    "end": "199840"
  },
  {
    "text": "definition Json schema a few things to",
    "start": "199840",
    "end": "203080"
  },
  {
    "text": "highlight here would be the step caching",
    "start": "203080",
    "end": "205560"
  },
  {
    "text": "and selective step execution",
    "start": "205560",
    "end": "207239"
  },
  {
    "text": "capabilities which allow you to either",
    "start": "207239",
    "end": "209200"
  },
  {
    "text": "automatic skip steps based on cast",
    "start": "209200",
    "end": "211519"
  },
  {
    "text": "results using the same input or",
    "start": "211519",
    "end": "214400"
  },
  {
    "text": "explicitly identify steps to skip that",
    "start": "214400",
    "end": "216840"
  },
  {
    "text": "were part of that pipeline run you can",
    "start": "216840",
    "end": "219680"
  },
  {
    "text": "also schedule or trigger your pipeline",
    "start": "219680",
    "end": "222080"
  },
  {
    "text": "based on specific events through the",
    "start": "222080",
    "end": "224120"
  },
  {
    "text": "native integration with event Bridge you",
    "start": "224120",
    "end": "227760"
  },
  {
    "text": "can either set this up directly in event",
    "start": "227760",
    "end": "229560"
  },
  {
    "text": "Bridge or you can use and schedule it",
    "start": "229560",
    "end": "231720"
  },
  {
    "text": "directly using the pipeline schedule",
    "start": "231720",
    "end": "233760"
  },
  {
    "text": "Constructor as part of the sagemaker",
    "start": "233760",
    "end": "236439"
  },
  {
    "text": "SDK finally one key benefit is their 's",
    "start": "236439",
    "end": "239920"
  },
  {
    "text": "no servers to manage so you don't have",
    "start": "239920",
    "end": "241599"
  },
  {
    "text": "to manage any of the underlying",
    "start": "241599",
    "end": "243079"
  },
  {
    "text": "infrastructure that's hosting your",
    "start": "243079",
    "end": "244319"
  },
  {
    "text": "workflow tooling which reduces",
    "start": "244319",
    "end": "246319"
  },
  {
    "text": "operational overhead but also cost",
    "start": "246319",
    "end": "248400"
  },
  {
    "text": "because with pipelines you only pay for",
    "start": "248400",
    "end": "250079"
  },
  {
    "text": "the compute steps that are used as part",
    "start": "250079",
    "end": "252319"
  },
  {
    "text": "of the steps within your workflow so",
    "start": "252319",
    "end": "254519"
  },
  {
    "text": "things like training jobs within the",
    "start": "254519",
    "end": "258040"
  },
  {
    "text": "pipeline pipelines includes typical",
    "start": "259040",
    "end": "261560"
  },
  {
    "text": "steps that you'd expect as part of a",
    "start": "261560",
    "end": "263320"
  },
  {
    "text": "pipeline tools such as you know",
    "start": "263320",
    "end": "264919"
  },
  {
    "text": "conditional steps and the ability to",
    "start": "264919",
    "end": "266840"
  },
  {
    "text": "explicitly Define custom dependencies",
    "start": "266840",
    "end": "269320"
  },
  {
    "text": "between steps but pipelines also",
    "start": "269320",
    "end": "271120"
  },
  {
    "text": "includes native steps that allow for",
    "start": "271120",
    "end": "272880"
  },
  {
    "text": "easy integration with most of the sage",
    "start": "272880",
    "end": "275199"
  },
  {
    "text": "maker features that are commonly used as",
    "start": "275199",
    "end": "277080"
  },
  {
    "text": "part of these automated",
    "start": "277080",
    "end": "278759"
  },
  {
    "text": "workflows these supported steps are kept",
    "start": "278759",
    "end": "281360"
  },
  {
    "text": "current with the latest and greatest",
    "start": "281360",
    "end": "282919"
  },
  {
    "text": "Sage maker",
    "start": "282919",
    "end": "284440"
  },
  {
    "text": "capabilities and this list here contains",
    "start": "284440",
    "end": "286680"
  },
  {
    "text": "a view of the natively supported steps",
    "start": "286680",
    "end": "289120"
  },
  {
    "text": "which are included in Sage maker",
    "start": "289120",
    "end": "290759"
  },
  {
    "text": "pipelines so things like processing for",
    "start": "290759",
    "end": "293080"
  },
  {
    "text": "data preparation sagemaker training jobs",
    "start": "293080",
    "end": "295680"
  },
  {
    "text": "for model training but you'll also",
    "start": "295680",
    "end": "297280"
  },
  {
    "text": "notice inside here pipelines does end to",
    "start": "297280",
    "end": "300039"
  },
  {
    "text": "other AWS services like Lambda or EMR as",
    "start": "300039",
    "end": "303080"
  },
  {
    "text": "well as the additional flexibility to",
    "start": "303080",
    "end": "305080"
  },
  {
    "text": "include tasks that are executed through",
    "start": "305080",
    "end": "307000"
  },
  {
    "text": "jobs on other AWS services or jobs",
    "start": "307000",
    "end": "309720"
  },
  {
    "text": "outside of AWS through the call back",
    "start": "309720",
    "end": "313520"
  },
  {
    "text": "step pipelines can be visualized within",
    "start": "313960",
    "end": "316600"
  },
  {
    "text": "studio like you'll see in the demo but",
    "start": "316600",
    "end": "318680"
  },
  {
    "text": "you see here how incorporating these",
    "start": "318680",
    "end": "320400"
  },
  {
    "text": "fine-tuning steps into a pipeline",
    "start": "320400",
    "end": "322160"
  },
  {
    "text": "workflow we're able to rely on sagemaker",
    "start": "322160",
    "end": "324720"
  },
  {
    "text": "pipelines to reliably capture that key",
    "start": "324720",
    "end": "326840"
  },
  {
    "text": "metadata that we talked about before",
    "start": "326840",
    "end": "328880"
  },
  {
    "text": "about not only the pipeline itself but",
    "start": "328880",
    "end": "330759"
  },
  {
    "text": "also the steps within the",
    "start": "330759",
    "end": "333120"
  },
  {
    "text": "pipeline finally one other key benefit",
    "start": "333120",
    "end": "335479"
  },
  {
    "text": "to mention includes the more recent",
    "start": "335479",
    "end": "337319"
  },
  {
    "text": "release of our simplified developer",
    "start": "337319",
    "end": "339039"
  },
  {
    "text": "experience for pipelines which allowed",
    "start": "339039",
    "end": "341240"
  },
  {
    "text": "for the ability to easily execute",
    "start": "341240",
    "end": "343120"
  },
  {
    "text": "pipelines from the SDK like I previously",
    "start": "343120",
    "end": "345280"
  },
  {
    "text": "mentioned but also enabling developers",
    "start": "345280",
    "end": "347440"
  },
  {
    "text": "to more easily create pipelines through",
    "start": "347440",
    "end": "349680"
  },
  {
    "text": "the use of a new Step decorator which",
    "start": "349680",
    "end": "351800"
  },
  {
    "text": "allows you to wrap your python function",
    "start": "351800",
    "end": "353800"
  },
  {
    "text": "code using the step decorator and have",
    "start": "353800",
    "end": "356440"
  },
  {
    "text": "pipelines automatically convert that",
    "start": "356440",
    "end": "358600"
  },
  {
    "text": "into a step Within your pipeline the",
    "start": "358600",
    "end": "361400"
  },
  {
    "text": "simplified developer experience was",
    "start": "361400",
    "end": "363000"
  },
  {
    "text": "created because customers were looking",
    "start": "363000",
    "end": "364520"
  },
  {
    "text": "for easier ways to author pipelines so",
    "start": "364520",
    "end": "367000"
  },
  {
    "text": "this new Step decorator allows you to",
    "start": "367000",
    "end": "368800"
  },
  {
    "text": "easily wrap your python code into a step",
    "start": "368800",
    "end": "371400"
  },
  {
    "text": "decorator then either let pipelines",
    "start": "371400",
    "end": "373280"
  },
  {
    "text": "infer the step order based on Pipeline",
    "start": "373280",
    "end": "375479"
  },
  {
    "text": "dependencies or you can also explicitly",
    "start": "375479",
    "end": "378039"
  },
  {
    "text": "highlight dependencies between steps",
    "start": "378039",
    "end": "380360"
  },
  {
    "text": "let's look now at a fine-tuning pipeline",
    "start": "380360",
    "end": "382400"
  },
  {
    "text": "through a",
    "start": "382400",
    "end": "383599"
  },
  {
    "text": "demo so in this demo we're going to show",
    "start": "383599",
    "end": "386160"
  },
  {
    "text": "how to build out a fine-tuning pipeline",
    "start": "386160",
    "end": "388759"
  },
  {
    "text": "using Sage maker pipelines and",
    "start": "388759",
    "end": "390560"
  },
  {
    "text": "specifically a fine-tuning pipeline for",
    "start": "390560",
    "end": "392440"
  },
  {
    "text": "a parameter efficient fine-tuning",
    "start": "392440",
    "end": "394039"
  },
  {
    "text": "technique that's commonly used called",
    "start": "394039",
    "end": "396000"
  },
  {
    "text": "Laura and for this we're just going to",
    "start": "396000",
    "end": "398000"
  },
  {
    "text": "use kind of an outof thebox data set a",
    "start": "398000",
    "end": "399759"
  },
  {
    "text": "sample data set to show how you can find",
    "start": "399759",
    "end": "401880"
  },
  {
    "text": "tune using sagemaker pipelines and",
    "start": "401880",
    "end": "403720"
  },
  {
    "text": "create that repeatability reliability in",
    "start": "403720",
    "end": "405880"
  },
  {
    "text": "your fine-tuning workflow and for this",
    "start": "405880",
    "end": "408400"
  },
  {
    "text": "the base model that we're going to use",
    "start": "408400",
    "end": "409720"
  },
  {
    "text": "is actually a quantized version of llama",
    "start": "409720",
    "end": "412360"
  },
  {
    "text": "2 and if we look at the detailed",
    "start": "412360",
    "end": "414720"
  },
  {
    "text": "architecture here this is what the",
    "start": "414720",
    "end": "416199"
  },
  {
    "text": "fine-tuning pipeline will do so it's a",
    "start": "416199",
    "end": "418120"
  },
  {
    "text": "simple pipeline that's going to take our",
    "start": "418120",
    "end": "419759"
  },
  {
    "text": "base Foundation model and a fine-tuning",
    "start": "419759",
    "end": "422879"
  },
  {
    "text": "data set that we provide we're going to",
    "start": "422879",
    "end": "424759"
  },
  {
    "text": "pre-process that data set largely since",
    "start": "424759",
    "end": "427039"
  },
  {
    "text": "it's already in process form we're not",
    "start": "427039",
    "end": "428400"
  },
  {
    "text": "going to do too much to it there but",
    "start": "428400",
    "end": "430319"
  },
  {
    "text": "then we'll have a step in our workflow",
    "start": "430319",
    "end": "431680"
  },
  {
    "text": "for that we'll also have a step for the",
    "start": "431680",
    "end": "433599"
  },
  {
    "text": "actual fine-tuning again using Laura as",
    "start": "433599",
    "end": "436479"
  },
  {
    "text": "a technique and then we'll have a step",
    "start": "436479",
    "end": "438680"
  },
  {
    "text": "to merge the model and evaluate the",
    "start": "438680",
    "end": "440560"
  },
  {
    "text": "model and keep in mind here we're going",
    "start": "440560",
    "end": "442520"
  },
  {
    "text": "to show you custom code for evaluation",
    "start": "442520",
    "end": "444160"
  },
  {
    "text": "in this particular demo but you can also",
    "start": "444160",
    "end": "445919"
  },
  {
    "text": "use our um evaluation Library as well to",
    "start": "445919",
    "end": "449360"
  },
  {
    "text": "do do this uh we'll also have a",
    "start": "449360",
    "end": "451560"
  },
  {
    "text": "conditional step that's going to check",
    "start": "451560",
    "end": "452960"
  },
  {
    "text": "whether the relevancy score which is the",
    "start": "452960",
    "end": "455400"
  },
  {
    "text": "the evaluation metric that we're looking",
    "start": "455400",
    "end": "457240"
  },
  {
    "text": "at is above a certain threshold if it is",
    "start": "457240",
    "end": "459680"
  },
  {
    "text": "we're going to go ahead and register",
    "start": "459680",
    "end": "461000"
  },
  {
    "text": "that model and we'll talk a little bit",
    "start": "461000",
    "end": "462800"
  },
  {
    "text": "about how we'll register that model",
    "start": "462800",
    "end": "464280"
  },
  {
    "text": "considering with adapter based fine",
    "start": "464280",
    "end": "466000"
  },
  {
    "text": "tuning you have both the foundation",
    "start": "466000",
    "end": "468599"
  },
  {
    "text": "based model you have the adapter weights",
    "start": "468599",
    "end": "470840"
  },
  {
    "text": "and then potentially the merged model if",
    "start": "470840",
    "end": "472960"
  },
  {
    "text": "you're choosing to merge before loading",
    "start": "472960",
    "end": "474840"
  },
  {
    "text": "and",
    "start": "474840",
    "end": "476080"
  },
  {
    "text": "deploying so we're going to skip over",
    "start": "476080",
    "end": "478000"
  },
  {
    "text": "some of the general setup which is just",
    "start": "478000",
    "end": "479639"
  },
  {
    "text": "installing libraries specific to this",
    "start": "479639",
    "end": "481639"
  },
  {
    "text": "notebook in this",
    "start": "481639",
    "end": "483720"
  },
  {
    "text": "demo but we'll go into here some of the",
    "start": "483720",
    "end": "486080"
  },
  {
    "text": "onetime setup that we did in the model",
    "start": "486080",
    "end": "488199"
  },
  {
    "text": "registry so there is an example notebook",
    "start": "488199",
    "end": "490720"
  },
  {
    "text": "that will be provided but inside model",
    "start": "490720",
    "end": "492879"
  },
  {
    "text": "registry which is a manage service",
    "start": "492879",
    "end": "495879"
  },
  {
    "text": "within Sage maker for collecting key",
    "start": "495879",
    "end": "498039"
  },
  {
    "text": "metadata about a model version so not",
    "start": "498039",
    "end": "500680"
  },
  {
    "text": "only how it was built in terms of you",
    "start": "500680",
    "end": "502319"
  },
  {
    "text": "know the containers the algorithms used",
    "start": "502319",
    "end": "504680"
  },
  {
    "text": "the model artifact itself as well as",
    "start": "504680",
    "end": "507360"
  },
  {
    "text": "evaluation metrics so with model",
    "start": "507360",
    "end": "510319"
  },
  {
    "text": "registry one thing I want to point out",
    "start": "510319",
    "end": "511919"
  },
  {
    "text": "is there is this notion of model",
    "start": "511919",
    "end": "514159"
  },
  {
    "text": "collection which is a hierarchy of",
    "start": "514159",
    "end": "515880"
  },
  {
    "text": "models and a really good use case for",
    "start": "515880",
    "end": "517599"
  },
  {
    "text": "using these model collections happens to",
    "start": "517599",
    "end": "519919"
  },
  {
    "text": "be these uh adapter weights so you'll",
    "start": "519919",
    "end": "522479"
  },
  {
    "text": "see inside here if we look at this",
    "start": "522479",
    "end": "525000"
  },
  {
    "text": "diagram we will load the base Foundation",
    "start": "525000",
    "end": "527600"
  },
  {
    "text": "model into model registry so that way we",
    "start": "527600",
    "end": "529480"
  },
  {
    "text": "know the exact version of the foundation",
    "start": "529480",
    "end": "531200"
  },
  {
    "text": "model that was used for this fine-tuning",
    "start": "531200",
    "end": "534360"
  },
  {
    "text": "workflow we'll also we've created a",
    "start": "534360",
    "end": "537000"
  },
  {
    "text": "model group so this is done in that",
    "start": "537000",
    "end": "538440"
  },
  {
    "text": "first notebook we've created a model",
    "start": "538440",
    "end": "539920"
  },
  {
    "text": "group for those Vine tune models and",
    "start": "539920",
    "end": "542320"
  },
  {
    "text": "created a model collection so that we",
    "start": "542320",
    "end": "544279"
  },
  {
    "text": "could actually have that collection of",
    "start": "544279",
    "end": "546880"
  },
  {
    "text": "adapter weights group together logically",
    "start": "546880",
    "end": "549720"
  },
  {
    "text": "within the model",
    "start": "549720",
    "end": "551279"
  },
  {
    "text": "registry and you'll see when we actually",
    "start": "551279",
    "end": "554000"
  },
  {
    "text": "go to deploy out in this particular",
    "start": "554000",
    "end": "556240"
  },
  {
    "text": "picture we won't show a deployment",
    "start": "556240",
    "end": "557800"
  },
  {
    "text": "workflow here but when you do go out to",
    "start": "557800",
    "end": "559760"
  },
  {
    "text": "deploy out in terms of Model Management",
    "start": "559760",
    "end": "561600"
  },
  {
    "text": "here you're combining that base model so",
    "start": "561600",
    "end": "564079"
  },
  {
    "text": "you know what is all the relevant",
    "start": "564079",
    "end": "566160"
  },
  {
    "text": "metadata about that base model and",
    "start": "566160",
    "end": "567880"
  },
  {
    "text": "you're combining it with all the",
    "start": "567880",
    "end": "568920"
  },
  {
    "text": "relevant data about either your",
    "start": "568920",
    "end": "571079"
  },
  {
    "text": "fine-tune weights so those adapter",
    "start": "571079",
    "end": "572720"
  },
  {
    "text": "weights or merge models in the case of",
    "start": "572720",
    "end": "574519"
  },
  {
    "text": "you're merging it before loading and",
    "start": "574519",
    "end": "576040"
  },
  {
    "text": "deploying that out so that way we know",
    "start": "576040",
    "end": "578839"
  },
  {
    "text": "for every single deployed fine-tune use",
    "start": "578839",
    "end": "581720"
  },
  {
    "text": "case that's out there we know the base",
    "start": "581720",
    "end": "583120"
  },
  {
    "text": "Foundation model metadata as well as the",
    "start": "583120",
    "end": "585360"
  },
  {
    "text": "adapter",
    "start": "585360",
    "end": "587600"
  },
  {
    "text": "weights So within this we're just using",
    "start": "587600",
    "end": "590040"
  },
  {
    "text": "a data set canned outof thebox data set",
    "start": "590040",
    "end": "592800"
  },
  {
    "text": "for the sample um so we're just",
    "start": "592800",
    "end": "595720"
  },
  {
    "text": "identifying that within",
    "start": "595720",
    "end": "597360"
  },
  {
    "text": "there and then here's we're going to",
    "start": "597360",
    "end": "599120"
  },
  {
    "text": "actually go ahead and create that",
    "start": "599120",
    "end": "600360"
  },
  {
    "text": "fine-tuning pipeline so you'll see here",
    "start": "600360",
    "end": "602279"
  },
  {
    "text": "we're going to use that step decorator",
    "start": "602279",
    "end": "604440"
  },
  {
    "text": "which you'll notice essentially we're",
    "start": "604440",
    "end": "606079"
  },
  {
    "text": "wrapping our python code for a",
    "start": "606079",
    "end": "608320"
  },
  {
    "text": "particular step with that step decorator",
    "start": "608320",
    "end": "610880"
  },
  {
    "text": "which stage maker pipelines will",
    "start": "610880",
    "end": "612160"
  },
  {
    "text": "automatically convert into a step within",
    "start": "612160",
    "end": "614160"
  },
  {
    "text": "your",
    "start": "614160",
    "end": "616399"
  },
  {
    "text": "workflow so first we do have to set up",
    "start": "618000",
    "end": "620360"
  },
  {
    "text": "each step right so every step in your",
    "start": "620360",
    "end": "622200"
  },
  {
    "text": "pipeline has some type of code backing",
    "start": "622200",
    "end": "624120"
  },
  {
    "text": "it so the first step here is to",
    "start": "624120",
    "end": "625839"
  },
  {
    "text": "pre-process the data set so in this case",
    "start": "625839",
    "end": "628880"
  },
  {
    "text": "here you'll notice what we're doing in",
    "start": "628880",
    "end": "630959"
  },
  {
    "text": "this particular function that we're",
    "start": "630959",
    "end": "632560"
  },
  {
    "text": "going to wrap with that step decorator",
    "start": "632560",
    "end": "634040"
  },
  {
    "text": "so it becomes a step in our pipeline is",
    "start": "634040",
    "end": "636160"
  },
  {
    "text": "we're loading the data set from S3 we're",
    "start": "636160",
    "end": "638839"
  },
  {
    "text": "going to split that data set into a",
    "start": "638839",
    "end": "640480"
  },
  {
    "text": "train test validation data set split",
    "start": "640480",
    "end": "643120"
  },
  {
    "text": "we're going to initialize a tokenizer",
    "start": "643120",
    "end": "645399"
  },
  {
    "text": "and then tokenize in chunk the input",
    "start": "645399",
    "end": "647279"
  },
  {
    "text": "data so this will ultimately feed into",
    "start": "647279",
    "end": "650160"
  },
  {
    "text": "our next step which is",
    "start": "650160",
    "end": "653639"
  },
  {
    "text": "fine-tuning so if we look here you can",
    "start": "654480",
    "end": "656800"
  },
  {
    "text": "see this is where the step decorator",
    "start": "656800",
    "end": "658639"
  },
  {
    "text": "comes into",
    "start": "658639",
    "end": "660160"
  },
  {
    "text": "place so this is all you need to",
    "start": "660160",
    "end": "662560"
  },
  {
    "text": "essentially take your python log logic",
    "start": "662560",
    "end": "664839"
  },
  {
    "text": "that's performing a particular task",
    "start": "664839",
    "end": "666680"
  },
  {
    "text": "within your workflow and wrap it into a",
    "start": "666680",
    "end": "668920"
  },
  {
    "text": "step inside your pipeline so this is the",
    "start": "668920",
    "end": "670920"
  },
  {
    "text": "step",
    "start": "670920",
    "end": "671720"
  },
  {
    "text": "decorator and then this is all the",
    "start": "671720",
    "end": "674279"
  },
  {
    "text": "python logic that performs that data",
    "start": "674279",
    "end": "678040"
  },
  {
    "text": "pre-processing so once we've set that",
    "start": "679399",
    "end": "681519"
  },
  {
    "text": "step up we can then go on to our next",
    "start": "681519",
    "end": "684120"
  },
  {
    "text": "step which is the training step so once",
    "start": "684120",
    "end": "686839"
  },
  {
    "text": "again inside this one we're taking the",
    "start": "686839",
    "end": "688440"
  },
  {
    "text": "input of the data sets that we just",
    "start": "688440",
    "end": "690560"
  },
  {
    "text": "created uh we're taking the base",
    "start": "690560",
    "end": "692399"
  },
  {
    "text": "Foundation model of course right because",
    "start": "692399",
    "end": "694200"
  },
  {
    "text": "we need that for fine-tuning as well as",
    "start": "694200",
    "end": "695920"
  },
  {
    "text": "the training parameters so these are the",
    "start": "695920",
    "end": "697800"
  },
  {
    "text": "fine-tuning parameters we want to use",
    "start": "697800",
    "end": "699360"
  },
  {
    "text": "for fine tuning we'll download that base",
    "start": "699360",
    "end": "702360"
  },
  {
    "text": "Foundation model as part of the task um",
    "start": "702360",
    "end": "704720"
  },
  {
    "text": "we'll set up the Laura training",
    "start": "704720",
    "end": "706160"
  },
  {
    "text": "configuration we'll fine-tune using that",
    "start": "706160",
    "end": "708120"
  },
  {
    "text": "training configuration and then",
    "start": "708120",
    "end": "710160"
  },
  {
    "text": "ultimately we're going to come out with",
    "start": "710160",
    "end": "712120"
  },
  {
    "text": "a set of updated weights that we will",
    "start": "712120",
    "end": "714399"
  },
  {
    "text": "upload to",
    "start": "714399",
    "end": "717000"
  },
  {
    "text": "S3 So within this you'll see once again",
    "start": "717000",
    "end": "720200"
  },
  {
    "text": "this is all of our training code and to",
    "start": "720200",
    "end": "723160"
  },
  {
    "text": "create a pipeline using that once again",
    "start": "723160",
    "end": "725880"
  },
  {
    "text": "we just had to do the step decorator so",
    "start": "725880",
    "end": "728200"
  },
  {
    "text": "we have our existing python code we use",
    "start": "728200",
    "end": "730240"
  },
  {
    "text": "the step decorator to automatically",
    "start": "730240",
    "end": "731959"
  },
  {
    "text": "create a step inside our",
    "start": "731959",
    "end": "735600"
  },
  {
    "text": "pipeline me just keep",
    "start": "741279",
    "end": "744880"
  },
  {
    "text": "scrolling and then the next step here is",
    "start": "745360",
    "end": "747480"
  },
  {
    "text": "our evaluation code like I said in this",
    "start": "747480",
    "end": "749399"
  },
  {
    "text": "particular case we're doing some custom",
    "start": "749399",
    "end": "750800"
  },
  {
    "text": "evaluation code but you can also use our",
    "start": "750800",
    "end": "752800"
  },
  {
    "text": "FM evaluation Library as well and",
    "start": "752800",
    "end": "755360"
  },
  {
    "text": "incorporate one or more evaluation or",
    "start": "755360",
    "end": "758600"
  },
  {
    "text": "workflow kind of quality Gates within",
    "start": "758600",
    "end": "760240"
  },
  {
    "text": "your pipeline so in this particular case",
    "start": "760240",
    "end": "762600"
  },
  {
    "text": "we're taking that test data set and the",
    "start": "762600",
    "end": "764680"
  },
  {
    "text": "fine tune model weights uh loading that",
    "start": "764680",
    "end": "767079"
  },
  {
    "text": "fine-tune model in running some",
    "start": "767079",
    "end": "768800"
  },
  {
    "text": "inference to then uh generate answers to",
    "start": "768800",
    "end": "771720"
  },
  {
    "text": "those questions evaluating those and",
    "start": "771720",
    "end": "774040"
  },
  {
    "text": "calculating the relevance relevancy",
    "start": "774040",
    "end": "776160"
  },
  {
    "text": "score so once again we're using the step",
    "start": "776160",
    "end": "778760"
  },
  {
    "text": "decor",
    "start": "778760",
    "end": "780360"
  },
  {
    "text": "basically to wrap our python function",
    "start": "780360",
    "end": "782199"
  },
  {
    "text": "code into a step inside our",
    "start": "782199",
    "end": "785959"
  },
  {
    "text": "pipeline",
    "start": "790199",
    "end": "793199"
  },
  {
    "text": "so and then finally we're creating a",
    "start": "794800",
    "end": "797720"
  },
  {
    "text": "register model step so assuming that our",
    "start": "797720",
    "end": "800720"
  },
  {
    "text": "model passes that conditional check",
    "start": "800720",
    "end": "802720"
  },
  {
    "text": "right where the relevancy score is above",
    "start": "802720",
    "end": "804720"
  },
  {
    "text": "a certain threshold we'll then go ahead",
    "start": "804720",
    "end": "806399"
  },
  {
    "text": "and register the model into the model",
    "start": "806399",
    "end": "808160"
  },
  {
    "text": "registry",
    "start": "808160",
    "end": "811120"
  },
  {
    "text": "so this again is our register model",
    "start": "811120",
    "end": "814240"
  },
  {
    "text": "function code wrapped with a step",
    "start": "814240",
    "end": "816120"
  },
  {
    "text": "decorator where we will go ahead and",
    "start": "816120",
    "end": "818519"
  },
  {
    "text": "register the model if it is um meeting",
    "start": "818519",
    "end": "821800"
  },
  {
    "text": "the threshold that we've",
    "start": "821800",
    "end": "824720"
  },
  {
    "text": "established and this one is the",
    "start": "830959",
    "end": "833320"
  },
  {
    "text": "conditional logic code so the reason you",
    "start": "833320",
    "end": "834959"
  },
  {
    "text": "create the step that comes after the",
    "start": "834959",
    "end": "836480"
  },
  {
    "text": "conditional logic code is we have to",
    "start": "836480",
    "end": "837759"
  },
  {
    "text": "refer to the step that we want to",
    "start": "837759",
    "end": "839839"
  },
  {
    "text": "progress if that condition is true so we",
    "start": "839839",
    "end": "842480"
  },
  {
    "text": "created the register model St step but",
    "start": "842480",
    "end": "844759"
  },
  {
    "text": "then we want the conditional logic code",
    "start": "844759",
    "end": "846639"
  },
  {
    "text": "behind that so this is where we're going",
    "start": "846639",
    "end": "848399"
  },
  {
    "text": "actually check if that evaluation metric",
    "start": "848399",
    "end": "850920"
  },
  {
    "text": "passed if it does we'll register the",
    "start": "850920",
    "end": "852560"
  },
  {
    "text": "model if not we'll fail the",
    "start": "852560",
    "end": "855720"
  },
  {
    "text": "pipeline and then here's where we create",
    "start": "856959",
    "end": "859079"
  },
  {
    "text": "and start the pipeline so you'll notice",
    "start": "859079",
    "end": "860880"
  },
  {
    "text": "within here we are essentially naming",
    "start": "860880",
    "end": "864600"
  },
  {
    "text": "the pipeline we can pass runtime",
    "start": "864600",
    "end": "866959"
  },
  {
    "text": "parameters as well which is good for",
    "start": "866959",
    "end": "868800"
  },
  {
    "text": "kind of of templatized and changing your",
    "start": "868800",
    "end": "871759"
  },
  {
    "text": "pipeline in certain parameters at",
    "start": "871759",
    "end": "874240"
  },
  {
    "text": "runtime versus having to go in and",
    "start": "874240",
    "end": "875920"
  },
  {
    "text": "directly change your pipeline",
    "start": "875920",
    "end": "878040"
  },
  {
    "text": "code and you'll see here we're only",
    "start": "878040",
    "end": "880240"
  },
  {
    "text": "passing One Step which is conditionally",
    "start": "880240",
    "end": "882040"
  },
  {
    "text": "register that's because pipelines will",
    "start": "882040",
    "end": "883880"
  },
  {
    "text": "automatically infer the order of steps",
    "start": "883880",
    "end": "886240"
  },
  {
    "text": "based on the inputs and outputs that are",
    "start": "886240",
    "end": "888480"
  },
  {
    "text": "defined as part of each",
    "start": "888480",
    "end": "890519"
  },
  {
    "text": "step and then rle upsert and upsert is",
    "start": "890519",
    "end": "893199"
  },
  {
    "text": "basically just creating that pipeline",
    "start": "893199",
    "end": "894759"
  },
  {
    "text": "that you've",
    "start": "894759",
    "end": "897079"
  },
  {
    "text": "defined and then we'll start the PIP",
    "start": "897120",
    "end": "899759"
  },
  {
    "text": "pipeline so here is the start of the",
    "start": "899759",
    "end": "902160"
  },
  {
    "text": "pipeline execution and you can",
    "start": "902160",
    "end": "904320"
  },
  {
    "text": "programmatically get the status of the",
    "start": "904320",
    "end": "906160"
  },
  {
    "text": "pipeline from a local environment from",
    "start": "906160",
    "end": "907759"
  },
  {
    "text": "your notebook but you can also visualize",
    "start": "907759",
    "end": "909959"
  },
  {
    "text": "the pipeline in the pipeline",
    "start": "909959",
    "end": "913240"
  },
  {
    "text": "execution directly inside studio if we",
    "start": "913399",
    "end": "917000"
  },
  {
    "text": "go into our",
    "start": "917000",
    "end": "919920"
  },
  {
    "text": "pipelines and we go into one execution",
    "start": "919920",
    "end": "922480"
  },
  {
    "text": "so this is that pipeline reflected",
    "start": "922480",
    "end": "924440"
  },
  {
    "text": "through a dag so a visualization you can",
    "start": "924440",
    "end": "927000"
  },
  {
    "text": "see these are all the steps that we",
    "start": "927000",
    "end": "928399"
  },
  {
    "text": "created the status of each step green is",
    "start": "928399",
    "end": "930959"
  },
  {
    "text": "it passed then if you click on the step",
    "start": "930959",
    "end": "933199"
  },
  {
    "text": "similar to what we saw in the",
    "start": "933199",
    "end": "934480"
  },
  {
    "text": "presentation you can see different",
    "start": "934480",
    "end": "935920"
  },
  {
    "text": "metadata about each step as",
    "start": "935920",
    "end": "940120"
  },
  {
    "text": "well so that was it we created a",
    "start": "940279",
    "end": "942560"
  },
  {
    "text": "fine-tuning pipeline using the",
    "start": "942560",
    "end": "944160"
  },
  {
    "text": "simplified developer experience that",
    "start": "944160",
    "end": "945639"
  },
  {
    "text": "allows us to wrap our python code with a",
    "start": "945639",
    "end": "948519"
  },
  {
    "text": "step decorator to automatically create",
    "start": "948519",
    "end": "950480"
  },
  {
    "text": "those pipeline steps and in terms of",
    "start": "950480",
    "end": "952959"
  },
  {
    "text": "considerations for deploying to higher",
    "start": "952959",
    "end": "954560"
  },
  {
    "text": "level environments so now that you have",
    "start": "954560",
    "end": "956560"
  },
  {
    "text": "that those fine-tune weights there's a",
    "start": "956560",
    "end": "958519"
  },
  {
    "text": "couple different options right the first",
    "start": "958519",
    "end": "960319"
  },
  {
    "text": "option there is deploying the merged",
    "start": "960319",
    "end": "961800"
  },
  {
    "text": "model and this is what is done in the",
    "start": "961800",
    "end": "963480"
  },
  {
    "text": "demo code where we essentially merge",
    "start": "963480",
    "end": "965560"
  },
  {
    "text": "That Base Foundation model with the",
    "start": "965560",
    "end": "967199"
  },
  {
    "text": "adapter weights prior to deploying those",
    "start": "967199",
    "end": "970240"
  },
  {
    "text": "out the other option is to deploy the",
    "start": "970240",
    "end": "972720"
  },
  {
    "text": "base Foundation model and fine-tune",
    "start": "972720",
    "end": "974959"
  },
  {
    "text": "weights separately so each has",
    "start": "974959",
    "end": "976680"
  },
  {
    "text": "advantages and disadvantages which I",
    "start": "976680",
    "end": "978399"
  },
  {
    "text": "know are covered in other deep di videos",
    "start": "978399",
    "end": "980920"
  },
  {
    "text": "uh but one thing to consider there is",
    "start": "980920",
    "end": "982560"
  },
  {
    "text": "incorporating that with your own CD",
    "start": "982560",
    "end": "984639"
  },
  {
    "text": "pipeline to then go out and provision",
    "start": "984639",
    "end": "986920"
  },
  {
    "text": "the infrastructure as well as the",
    "start": "986920",
    "end": "989160"
  },
  {
    "text": "related services for the deployment part",
    "start": "989160",
    "end": "991600"
  },
  {
    "text": "of your",
    "start": "991600",
    "end": "992720"
  },
  {
    "text": "workflow in the demo we just did you saw",
    "start": "992720",
    "end": "995319"
  },
  {
    "text": "how to create a fine-tuning pipeline",
    "start": "995319",
    "end": "996880"
  },
  {
    "text": "using sagemaker pipelines and then",
    "start": "996880",
    "end": "998440"
  },
  {
    "text": "register that base model and the model's",
    "start": "998440",
    "end": "1000800"
  },
  {
    "text": "adapted weights into sagemaker model",
    "start": "1000800",
    "end": "1002759"
  },
  {
    "text": "registry where it can then be deployed",
    "start": "1002759",
    "end": "1004440"
  },
  {
    "text": "using a continuous delivery or",
    "start": "1004440",
    "end": "1006000"
  },
  {
    "text": "continuous deployment pipeline the other",
    "start": "1006000",
    "end": "1008839"
  },
  {
    "text": "thing you should consider automating",
    "start": "1008839",
    "end": "1010240"
  },
  {
    "text": "within your workflow is the creation of",
    "start": "1010240",
    "end": "1011720"
  },
  {
    "text": "a model card from a governance",
    "start": "1011720",
    "end": "1013279"
  },
  {
    "text": "perspective to be able to document the",
    "start": "1013279",
    "end": "1015440"
  },
  {
    "text": "intended use of the model whether that",
    "start": "1015440",
    "end": "1017319"
  },
  {
    "text": "is the merged model or the adapted",
    "start": "1017319",
    "end": "1019240"
  },
  {
    "text": "weights as well as capturing model",
    "start": "1019240",
    "end": "1021279"
  },
  {
    "text": "documentation such as risk",
    "start": "1021279",
    "end": "1024199"
  },
  {
    "text": "ratings one other extension to the",
    "start": "1024199",
    "end": "1026438"
  },
  {
    "text": "pipeline you saw would be to integrate",
    "start": "1026439",
    "end": "1028520"
  },
  {
    "text": "this workflow with sagemaker projects to",
    "start": "1028520",
    "end": "1030520"
  },
  {
    "text": "further standardize and templatized",
    "start": "1030520",
    "end": "1032558"
  },
  {
    "text": "workflow setting up any of the standard",
    "start": "1032559",
    "end": "1034880"
  },
  {
    "text": "Integrations that you would need",
    "start": "1034880",
    "end": "1036160"
  },
  {
    "text": "automatically as well as incorporating",
    "start": "1036160",
    "end": "1037880"
  },
  {
    "text": "source and verion control for your",
    "start": "1037880",
    "end": "1039918"
  },
  {
    "text": "code this example is focused on a case",
    "start": "1039919",
    "end": "1042600"
  },
  {
    "text": "where you're doing regular fine-tuning",
    "start": "1042600",
    "end": "1044199"
  },
  {
    "text": "of a foundation model which provides",
    "start": "1044199",
    "end": "1046360"
  },
  {
    "text": "traceability and reliability but another",
    "start": "1046360",
    "end": "1048438"
  },
  {
    "text": "use case we discussed where these",
    "start": "1048439",
    "end": "1050120"
  },
  {
    "text": "fine-tuning workflows would be useful is",
    "start": "1050120",
    "end": "1052280"
  },
  {
    "text": "in",
    "start": "1052280",
    "end": "1054400"
  },
  {
    "text": "personalization so in this case you may",
    "start": "1054400",
    "end": "1056440"
  },
  {
    "text": "be creating personalized models similar",
    "start": "1056440",
    "end": "1058520"
  },
  {
    "text": "to what you see here in terms of an",
    "start": "1058520",
    "end": "1060600"
  },
  {
    "text": "avatar generation use case so in this",
    "start": "1060600",
    "end": "1063280"
  },
  {
    "text": "case you need the ability to scale out",
    "start": "1063280",
    "end": "1064880"
  },
  {
    "text": "the pipelines as well as create a",
    "start": "1064880",
    "end": "1066440"
  },
  {
    "text": "repeatable reliable process that scales",
    "start": "1066440",
    "end": "1068520"
  },
  {
    "text": "across personalization use cases so this",
    "start": "1068520",
    "end": "1071840"
  },
  {
    "text": "is actually handled by sagemaker",
    "start": "1071840",
    "end": "1073200"
  },
  {
    "text": "pipelines as a managed service and the",
    "start": "1073200",
    "end": "1074880"
  },
  {
    "text": "ability to scale out multiple pipelines",
    "start": "1074880",
    "end": "1076840"
  },
  {
    "text": "in parallel",
    "start": "1076840",
    "end": "1080039"
  },
  {
    "text": "finally I want to leave you with some",
    "start": "1080200",
    "end": "1081840"
  },
  {
    "text": "resources starting with a GitHub",
    "start": "1081840",
    "end": "1083400"
  },
  {
    "text": "repository with a lot of different code",
    "start": "1083400",
    "end": "1085080"
  },
  {
    "text": "examples including those specific to",
    "start": "1085080",
    "end": "1087400"
  },
  {
    "text": "operationalizing your generative AI",
    "start": "1087400",
    "end": "1089120"
  },
  {
    "text": "workflows which includes fine-tuning",
    "start": "1089120",
    "end": "1091520"
  },
  {
    "text": "pipelines as we discussed here today",
    "start": "1091520",
    "end": "1094240"
  },
  {
    "text": "second there's a link to documentation",
    "start": "1094240",
    "end": "1096039"
  },
  {
    "text": "for sage maker pipelines and more",
    "start": "1096039",
    "end": "1097760"
  },
  {
    "text": "specifically the step decorator",
    "start": "1097760",
    "end": "1099360"
  },
  {
    "text": "simplified experience that we went over",
    "start": "1099360",
    "end": "1102280"
  },
  {
    "text": "today finally in our examples and demos",
    "start": "1102280",
    "end": "1105880"
  },
  {
    "text": "we showed Sage maker model registry for",
    "start": "1105880",
    "end": "1108039"
  },
  {
    "text": "cataloging managing models at scale",
    "start": "1108039",
    "end": "1111159"
  },
  {
    "text": "however this blog here goes into a bit",
    "start": "1111159",
    "end": "1112880"
  },
  {
    "text": "more detail on some considerations for",
    "start": "1112880",
    "end": "1114799"
  },
  {
    "text": "model version management specifically on",
    "start": "1114799",
    "end": "1117120"
  },
  {
    "text": "some of the more popular parameter",
    "start": "1117120",
    "end": "1118720"
  },
  {
    "text": "efficient techniques in this case what",
    "start": "1118720",
    "end": "1120880"
  },
  {
    "text": "we focused on was",
    "start": "1120880",
    "end": "1122640"
  },
  {
    "text": "Laura so in this video we went over what",
    "start": "1122640",
    "end": "1125760"
  },
  {
    "text": "a fine-tuning pipeline is what the",
    "start": "1125760",
    "end": "1127720"
  },
  {
    "text": "benefits of building a fine-tuning",
    "start": "1127720",
    "end": "1129320"
  },
  {
    "text": "pipeline are as well as the benefits of",
    "start": "1129320",
    "end": "1132159"
  },
  {
    "text": "utilizing Sage maker pipelines to build",
    "start": "1132159",
    "end": "1134000"
  },
  {
    "text": "out those fine-tuning workflows as well",
    "start": "1134000",
    "end": "1136799"
  },
  {
    "text": "as some resources to follow up on if you",
    "start": "1136799",
    "end": "1138799"
  },
  {
    "text": "want to dive deep and get your hands on",
    "start": "1138799",
    "end": "1141240"
  },
  {
    "text": "some of the tooling feel free to follow",
    "start": "1141240",
    "end": "1143080"
  },
  {
    "text": "along in some of those code examples we",
    "start": "1143080",
    "end": "1145120"
  },
  {
    "text": "provided and as always thank you so much",
    "start": "1145120",
    "end": "1147400"
  },
  {
    "text": "for your time and reach out on LinkedIn",
    "start": "1147400",
    "end": "1149159"
  },
  {
    "text": "I love connecting with others in the",
    "start": "1149159",
    "end": "1150640"
  },
  {
    "text": "space",
    "start": "1150640",
    "end": "1153640"
  }
]