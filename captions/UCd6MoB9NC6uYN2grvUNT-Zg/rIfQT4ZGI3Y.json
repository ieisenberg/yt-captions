[
  {
    "text": "good afternoon thank you all for being here today",
    "start": "4460",
    "end": "10429"
  },
  {
    "text": "you know I remember this time last year at reinvent 2017 when we launched and",
    "start": "10429",
    "end": "17460"
  },
  {
    "text": "unveiled AWS Fargate to the world what an exciting time it was and I can tell",
    "start": "17460",
    "end": "24119"
  },
  {
    "text": "you that I'm equally excited to be back here this year one year later one year",
    "start": "24119",
    "end": "32040"
  },
  {
    "text": "of now having operated the service in production one year of building the next",
    "start": "32040",
    "end": "40530"
  },
  {
    "text": "set of features on this platform for you one year of scaling the service out from",
    "start": "40530",
    "end": "46710"
  },
  {
    "text": "one region at launch last year to 11 regions today and most importantly one",
    "start": "46710",
    "end": "54300"
  },
  {
    "text": "year of having all of you our customers use the service for your real-world",
    "start": "54300",
    "end": "59520"
  },
  {
    "text": "applications and give us invaluable feedback that we use every day at our",
    "start": "59520",
    "end": "65040"
  },
  {
    "text": "jobs so thank you very much please keep it coming over the course of this one",
    "start": "65040",
    "end": "73049"
  },
  {
    "text": "year through all this experience that we've gained we're learning so much about the way we need to think about our",
    "start": "73049",
    "end": "80610"
  },
  {
    "text": "applications that are running on Fargate and some patterns are now starting to",
    "start": "80610",
    "end": "85950"
  },
  {
    "text": "emerge and today I want to talk to you about one such pattern that has really",
    "start": "85950",
    "end": "93000"
  },
  {
    "text": "stood out over the past year and I won't tell you what the pattern is just yet we'll keep that in suspense and build up",
    "start": "93000",
    "end": "100439"
  },
  {
    "text": "to it through the course of the presentation but I will tell you that",
    "start": "100439",
    "end": "105509"
  },
  {
    "text": "this particular pattern this particular idea has been central it has been core",
    "start": "105509",
    "end": "111930"
  },
  {
    "text": "to every single feature that we have designed and built for you on Fargate and my hope today is that at the end of",
    "start": "111930",
    "end": "120840"
  },
  {
    "text": "this talk I want to sow that seed of that idea of that pattern in your minds",
    "start": "120840",
    "end": "127860"
  },
  {
    "text": "so you can take that idea to your applications that you may be thinking about migrating to Fargate but",
    "start": "127860",
    "end": "135360"
  },
  {
    "text": "before I go any further I want to introduce you to Joseph Bulger who is a",
    "start": "135360",
    "end": "140849"
  },
  {
    "text": "principal architect at Turner and he's going to be co-presenting this session",
    "start": "140849",
    "end": "145980"
  },
  {
    "text": "with me today Turner is one of our larger Fargate customers and at and",
    "start": "145980",
    "end": "153930"
  },
  {
    "text": "we're really happy to have you here Thank You Joseph for spending the time here and so after I give you a little",
    "start": "153930",
    "end": "160170"
  },
  {
    "text": "bit of the AWS perspective of how you should be thinking about your applications on Fargate Joseph will talk",
    "start": "160170",
    "end": "166890"
  },
  {
    "text": "to you about a customer side perspective of their migration story on to Fargate",
    "start": "166890",
    "end": "173209"
  },
  {
    "text": "so without much further ado let's get started when I first started to think",
    "start": "173209",
    "end": "181799"
  },
  {
    "text": "about what message I wanted to deliver here on this platform today to all of you I started to put my slide deck",
    "start": "181799",
    "end": "186870"
  },
  {
    "text": "together and the very first slide that I put together was my BIOS slide fairly",
    "start": "186870",
    "end": "192060"
  },
  {
    "text": "common thing to do I thought I'd tell you a little bit about myself my name is Archana Shri Kanta and I am a senior",
    "start": "192060",
    "end": "199500"
  },
  {
    "text": "software developer and the engineering lead for AWS Fargate and then I thought",
    "start": "199500",
    "end": "204660"
  },
  {
    "text": "I'd tell you a little bit about my journey with AWS I've been with AWS for",
    "start": "204660",
    "end": "209819"
  },
  {
    "text": "about seven years I started out on the c2 team and then I transitioned to the",
    "start": "209819",
    "end": "216650"
  },
  {
    "text": "elastic container services team and about two years ago I moved to seed and",
    "start": "216650",
    "end": "223470"
  },
  {
    "text": "become the founding engineer on the Fargate team now as soon as I put this slide together something interesting",
    "start": "223470",
    "end": "230549"
  },
  {
    "text": "struck me call me lucky but my career progression through Amazon basically",
    "start": "230549",
    "end": "238340"
  },
  {
    "text": "exactly maps on to the evolution of compute platforms on AWS and I thought",
    "start": "238340",
    "end": "245519"
  },
  {
    "text": "this was a perfect starting point for today's conversation here AWS started out with ec2 which is plain",
    "start": "245519",
    "end": "253739"
  },
  {
    "text": "old virtual machines in the cloud what we know as ec2 instances and then we",
    "start": "253739",
    "end": "259019"
  },
  {
    "text": "started noticing that customers were starting to adopt containers and we're starting to organize their",
    "start": "259019",
    "end": "264090"
  },
  {
    "text": "applications within these ec2 instances as containers so we launched the elastic",
    "start": "264090",
    "end": "269160"
  },
  {
    "text": "container service or ECS and ECS allowed you to scale and manage containers",
    "start": "269160",
    "end": "275790"
  },
  {
    "text": "within clusters of ec2 instances at scale now some of you have used ECS may",
    "start": "275790",
    "end": "281670"
  },
  {
    "text": "recognize this model as what we call the ec2 launch type a VCS as opposed to the",
    "start": "281670",
    "end": "286890"
  },
  {
    "text": "Fargate launch type and it's called the ec2 launch type because these containers are running on ec2 instances within your",
    "start": "286890",
    "end": "294330"
  },
  {
    "text": "account but then customers told us that they really only cared about the",
    "start": "294330",
    "end": "300720"
  },
  {
    "text": "applications that were running within the containers managing and maintaining this ec2 instance or the VM layer around",
    "start": "300720",
    "end": "307530"
  },
  {
    "text": "these containers is just undifferentiated heavy lifting that adds zero value to your business and so we",
    "start": "307530",
    "end": "314970"
  },
  {
    "text": "listened and we launched Fargate which basically removes the need for you to",
    "start": "314970",
    "end": "321390"
  },
  {
    "text": "manage any kind of instance or VM or server underneath your containers and you can just launch your containerized",
    "start": "321390",
    "end": "327660"
  },
  {
    "text": "applications as first-class citizens in the AWS cloud now the thing to note",
    "start": "327660",
    "end": "334110"
  },
  {
    "text": "about each of these transitions here is that even though it may look like this",
    "start": "334110",
    "end": "340320"
  },
  {
    "text": "is just an infrastructure level change something that your IT department deals with it really isn't it's not just an",
    "start": "340320",
    "end": "348480"
  },
  {
    "text": "infrastructure shift it's fundamentally changing the way in which we're thinking",
    "start": "348480",
    "end": "354210"
  },
  {
    "text": "about and building and designing our applications and this couldn't have been more evident than it wasn't that very",
    "start": "354210",
    "end": "361380"
  },
  {
    "text": "first shift from VMs to containers in fact let's take a few moments here and",
    "start": "361380",
    "end": "367200"
  },
  {
    "text": "quickly recap the kind of shift that containers brought about the",
    "start": "367200",
    "end": "372930"
  },
  {
    "text": "infrastructure change with containers was that we went from running applications just as loose processes",
    "start": "372930",
    "end": "380190"
  },
  {
    "text": "within virtual machines to running each application in its own little resource",
    "start": "380190",
    "end": "386580"
  },
  {
    "text": "and namespace isolated sandbox that we call a container the design paradigm",
    "start": "386580",
    "end": "392550"
  },
  {
    "text": "shift that this brought upon us was that it forced us to think of these applications",
    "start": "392550",
    "end": "399300"
  },
  {
    "text": "as completely decoupled independent entities even though they may be running",
    "start": "399300",
    "end": "405870"
  },
  {
    "text": "within the same virtual machine and this idea of decoupled applications really",
    "start": "405870",
    "end": "411750"
  },
  {
    "text": "led to a whole burst of innovation in the application development space we",
    "start": "411750",
    "end": "417630"
  },
  {
    "text": "found a need to decouple the packaging and builds of applications and the container image format and the docker",
    "start": "417630",
    "end": "423510"
  },
  {
    "text": "build process really enabled that for us there was a need to decouple deployments",
    "start": "423510",
    "end": "428700"
  },
  {
    "text": "for these applications we were no longer just deploying these bulky VM images with everything in it in fact we were",
    "start": "428700",
    "end": "435180"
  },
  {
    "text": "deploying individual container images within these VMs and so there were a lot more deployments and there was a lot",
    "start": "435180",
    "end": "441390"
  },
  {
    "text": "that happened on the CI CD front to enable faster and safer container deployment there was a need to decouple",
    "start": "441390",
    "end": "448560"
  },
  {
    "text": "the scaling of these applications again we're not scaling at the VM level were scaling at the individual container",
    "start": "448560",
    "end": "453960"
  },
  {
    "text": "level and so there was a lot of investment over the past four or five years in the cluster management and",
    "start": "453960",
    "end": "459720"
  },
  {
    "text": "orchestration space with solutions like ECS and kubernetes and eks the couple",
    "start": "459720",
    "end": "467070"
  },
  {
    "text": "locality of applications applications no longer assumed that other applications that they wanted to talk to were running",
    "start": "467070",
    "end": "474090"
  },
  {
    "text": "locally within the same virtual machine or even that they were running on well-known addresses of remote machines",
    "start": "474090",
    "end": "480480"
  },
  {
    "text": "because the whole placement of containers on VMs became such a dynamic decision and so we needed a way for",
    "start": "480480",
    "end": "486660"
  },
  {
    "text": "applications to dynamically discover where other applications lived and service discovery and all the wonderful",
    "start": "486660",
    "end": "493620"
  },
  {
    "text": "solutions we have there was the answer to that basically all these buzzwords that we know as the micro services era I",
    "start": "493620",
    "end": "500700"
  },
  {
    "text": "think all of us can agree that micro services really fundamentally changed",
    "start": "500700",
    "end": "508350"
  },
  {
    "text": "the way in which we think about our applications and so the question ahead",
    "start": "508350",
    "end": "514229"
  },
  {
    "text": "of us now is how is far gate shifting the paradigm the infrastructure shift",
    "start": "514229",
    "end": "520530"
  },
  {
    "text": "here with Fargate is that you're going from running containers that are hosted",
    "start": "520530",
    "end": "526590"
  },
  {
    "text": "on ec2 instances that are running in your account two running containers that are just",
    "start": "526590",
    "end": "532830"
  },
  {
    "text": "magically hosted in the cloud for you and the underlying server underneath",
    "start": "532830",
    "end": "539700"
  },
  {
    "text": "your containers is completely abstracted away from you which means you don't have",
    "start": "539700",
    "end": "545160"
  },
  {
    "text": "access to login to it you don't have the ability to perform any kind of customizations on the server you",
    "start": "545160",
    "end": "551430"
  },
  {
    "text": "basically lose all interaction touchpoints with the underlying server and the design paradigm shift that I",
    "start": "551430",
    "end": "558420"
  },
  {
    "text": "think this needs for us to operate successfully in this kind of a server list world is that not only do we need",
    "start": "558420",
    "end": "565890"
  },
  {
    "text": "to decouple applications from one another but we also need to decouple applications from the underlying host",
    "start": "565890",
    "end": "572550"
  },
  {
    "text": "and this is the idea that I was saying has been very central to everything that",
    "start": "572550",
    "end": "579900"
  },
  {
    "text": "we've done on the Fargate platform for you but in order to truly realize this",
    "start": "579900",
    "end": "584970"
  },
  {
    "text": "vision of decoupling the application from the underlying host I think it's a",
    "start": "584970",
    "end": "590520"
  },
  {
    "text": "joint responsibility between you the customer and us the service team behind",
    "start": "590520",
    "end": "596040"
  },
  {
    "text": "far game and I can tell you from our side again for every single feature that",
    "start": "596040",
    "end": "601830"
  },
  {
    "text": "we build the engineering team behind Fargate evaluates it against this design",
    "start": "601830",
    "end": "607320"
  },
  {
    "text": "principle is this particular implementation of this feature",
    "start": "607320",
    "end": "612950"
  },
  {
    "text": "sufficiently decoupling the application from the underlying host and if the answer to that is no we go back to the",
    "start": "612950",
    "end": "620760"
  },
  {
    "text": "drawing board and come up with the new way to achieve the same goal and the",
    "start": "620760",
    "end": "626190"
  },
  {
    "text": "commitment that we need from you the customers is to really embrace and adopt",
    "start": "626190",
    "end": "631590"
  },
  {
    "text": "these newer modes of operation that are coming up on the Fargate platform and",
    "start": "631590",
    "end": "638030"
  },
  {
    "text": "instead of just blindly asking you to change the way you're doing things I",
    "start": "638030",
    "end": "643460"
  },
  {
    "text": "wanted to walk through a few practical examples of features where we examined",
    "start": "643460",
    "end": "650790"
  },
  {
    "text": "the state-of-the-art decided it wasn't a good fit for Fargate and then came up with the new way to do it oftentimes",
    "start": "650790",
    "end": "657960"
  },
  {
    "text": "you'll find that if you're operating containers on servers that you own whether it's easy to instances or",
    "start": "657960",
    "end": "663300"
  },
  {
    "text": "virtual machine in your own data centers you're used to doing things in a certain way and sometimes those old methods of operation",
    "start": "663300",
    "end": "670800"
  },
  {
    "text": "don't quite translate to the Fargate world and so today I wanted to give you a little bit of insight into why some of",
    "start": "670800",
    "end": "678540"
  },
  {
    "text": "these things might work differently in the Fargate world so we're going to use these three examples I'm going to talk",
    "start": "678540",
    "end": "684510"
  },
  {
    "text": "about how we decoupled your applications networking from the underlying host I'll",
    "start": "684510",
    "end": "690630"
  },
  {
    "text": "talk about how we decoupled the permissions model for your application from the underlying host and finally how",
    "start": "690630",
    "end": "696990"
  },
  {
    "text": "we decoupled monitoring for your application so let's start with the",
    "start": "696990",
    "end": "702300"
  },
  {
    "text": "first one decouple networking via the AWS VPC networking road now before we had AWS",
    "start": "702300",
    "end": "709470"
  },
  {
    "text": "VPC networking mode there were two modes of operation networking modes of operation in the ec2 launch type of ECS",
    "start": "709470",
    "end": "717990"
  },
  {
    "text": "bridge and host networking mode we took a good look at these and we decided that this was not a good fit for Fargate",
    "start": "717990",
    "end": "724730"
  },
  {
    "text": "let's see why why that was the case starting with bridged networking mode so",
    "start": "724730",
    "end": "731490"
  },
  {
    "text": "in bridged networking mode you have an ec2 instance and if you're running any",
    "start": "731490",
    "end": "737310"
  },
  {
    "text": "standard flavor of Linux every machine gets a default network namespace what we",
    "start": "737310",
    "end": "744090"
  },
  {
    "text": "call the host network namespace and the physical network interface that is used",
    "start": "744090",
    "end": "750870"
  },
  {
    "text": "for all incoming and outgoing traffic in and out of this ec2 instance what's also called the f0 interface lives within",
    "start": "750870",
    "end": "757620"
  },
  {
    "text": "this default network namespace and if you're using this instance to launch",
    "start": "757620",
    "end": "763320"
  },
  {
    "text": "docker containers presumably you've installed docker on this machine and one of the networking components that docker",
    "start": "763320",
    "end": "769530"
  },
  {
    "text": "sets up for you is a Dockers aerobridge bridge is really just a way to connect",
    "start": "769530",
    "end": "776270"
  },
  {
    "text": "namespaces together so you can have a process that's running in one network namespace talk to another process that's",
    "start": "776270",
    "end": "782520"
  },
  {
    "text": "running through in another network namespace through this bridge and now when you launch a docker container what",
    "start": "782520",
    "end": "789990"
  },
  {
    "text": "docker does is it creates a separate isolated network namespace for this container and launches the container",
    "start": "789990",
    "end": "796780"
  },
  {
    "text": "that's within it but any traffic incoming or outgoing to this container",
    "start": "796780",
    "end": "804250"
  },
  {
    "text": "from outside of the ec2 instance must still transit through that physical at",
    "start": "804250",
    "end": "810490"
  },
  {
    "text": "the zero interface that's attached to your host because that's the only way to talk in and out of the ec2 instance I'm",
    "start": "810490",
    "end": "818380"
  },
  {
    "text": "also going to introduce the concept of a task here a task is a logical group of",
    "start": "818380",
    "end": "824680"
  },
  {
    "text": "containers and if you've already used DCs or Fargate you might be familiar with this concept but it's a logical",
    "start": "824680",
    "end": "830440"
  },
  {
    "text": "group of containers that still represents a single application for example you may have an engine X",
    "start": "830440",
    "end": "836800"
  },
  {
    "text": "container that's back affronting your back-end web server and you'd put both those containers into a single task and",
    "start": "836800",
    "end": "843550"
  },
  {
    "text": "the guarantee is that both those containers will land within the same VM and oftentimes there is a need for two",
    "start": "843550",
    "end": "850780"
  },
  {
    "text": "containers within the same task to talk to one another and in this case in the",
    "start": "850780",
    "end": "855880"
  },
  {
    "text": "bridge networking mode docker has no idea of tasks tasks is a higher-level",
    "start": "855880",
    "end": "861010"
  },
  {
    "text": "ECS API construct to docker these are just two containers so when you launch",
    "start": "861010",
    "end": "866320"
  },
  {
    "text": "that second container docker puts that second container within its own namespace a separate namespace and now",
    "start": "866320",
    "end": "873160"
  },
  {
    "text": "if these two containers need to talk to each other because they're in separate namespaces they need to transit through",
    "start": "873160",
    "end": "878530"
  },
  {
    "text": "the dr0 bridge and now we looked at this picture and said ok how do we take this",
    "start": "878530",
    "end": "885310"
  },
  {
    "text": "model to the Fargate world and we notice that there were a few problems here problem number one any traffic in and",
    "start": "885310",
    "end": "894730"
  },
  {
    "text": "out of your tasks needs to transit through this host level network interface what do you do when the host",
    "start": "894730",
    "end": "902230"
  },
  {
    "text": "interface isn't yours it's AWS this host interface problem",
    "start": "902230",
    "end": "907690"
  },
  {
    "text": "number two any communication between containers within the same task is transiting through this docker 0 bridge",
    "start": "907690",
    "end": "914980"
  },
  {
    "text": "which is also something that's pre-installed on the host that's outside",
    "start": "914980",
    "end": "921100"
  },
  {
    "text": "of the sort of sandbox of the task and so if we remove all the host level",
    "start": "921100",
    "end": "926440"
  },
  {
    "text": "components from this picture you can see that there are a lot of loose and here how do you as the customer actually",
    "start": "926440",
    "end": "932740"
  },
  {
    "text": "communicate with your task and how do containers within your task talk to each other so that wasn't gonna work",
    "start": "932740",
    "end": "940170"
  },
  {
    "text": "let's quickly examine the host networking mode what happens in the host",
    "start": "940170",
    "end": "945430"
  },
  {
    "text": "networking mode is instead of launching your containers in their own isolated namespaces docker will launch all your",
    "start": "945430",
    "end": "953380"
  },
  {
    "text": "containers into the hosts default Network namespace itself and in some ways this is almost a gross or violation",
    "start": "953380",
    "end": "960280"
  },
  {
    "text": "of that idea if we need to decouple from the host but it has some merits both the",
    "start": "960280",
    "end": "966700"
  },
  {
    "text": "containers within the task are now in the same networking namespace so they can talk to each other and that's solved",
    "start": "966700",
    "end": "971860"
  },
  {
    "text": "but communications in and out of your tasks outside of the instance still",
    "start": "971860",
    "end": "978070"
  },
  {
    "text": "needs to go through this physical at zero in our face of your host so that wasn't going to quite work either and so",
    "start": "978070",
    "end": "985630"
  },
  {
    "text": "we said we needed to come up with a new way of doing this and so we came up with the AWS VPC networking mode what we did",
    "start": "985630",
    "end": "995200"
  },
  {
    "text": "with the AWS VPC networking mode is when you launch a task we create a task level",
    "start": "995200",
    "end": "1001650"
  },
  {
    "text": "network namespace and put all the containers within this task into that task network namespace and so now when",
    "start": "1001650",
    "end": "1009510"
  },
  {
    "text": "your containers want to talk to each other within the task they're both in the same namespace they just use local hosts to talk to each other but we still",
    "start": "1009510",
    "end": "1017400"
  },
  {
    "text": "have to solve the problem of external communication and for that what we do is",
    "start": "1017400",
    "end": "1023160"
  },
  {
    "text": "we create an elastic network interface are Annie and I within your VPC within",
    "start": "1023160",
    "end": "1028890"
  },
  {
    "text": "your network and then we attach that eni as a secondary network interface to this",
    "start": "1028890",
    "end": "1034410"
  },
  {
    "text": "host and so and the secondary network interface it doesn't live in the host",
    "start": "1034410",
    "end": "1041010"
  },
  {
    "text": "namespace it lives within the tasks Network namespace and so now any communication in and out of your task",
    "start": "1041010",
    "end": "1047579"
  },
  {
    "text": "can transit through this task network interface without relying on the host",
    "start": "1047579",
    "end": "1052920"
  },
  {
    "text": "set 0 interface and so now we can remove all the host components from this",
    "start": "1052920",
    "end": "1057990"
  },
  {
    "text": "picture and we actually get a fully functional working standalone Fargate",
    "start": "1057990",
    "end": "1063240"
  },
  {
    "text": "task and so to summarize what happened here we innovated and built a new way a task",
    "start": "1063240",
    "end": "1072059"
  },
  {
    "text": "native way for you to be able to do networking at the task level such that",
    "start": "1072059",
    "end": "1078360"
  },
  {
    "text": "each TAF gets its own E&I each task gets its own IP address each task gets its",
    "start": "1078360",
    "end": "1084149"
  },
  {
    "text": "own security group firewall rules without any reliance on your hosts",
    "start": "1084149",
    "end": "1089909"
  },
  {
    "text": "networking stack and rules that govern the hosts at zero interface and that was",
    "start": "1089909",
    "end": "1096269"
  },
  {
    "text": "a good fit for the Fargate paradigm and if any of this container networking",
    "start": "1096269",
    "end": "1103860"
  },
  {
    "text": "stuff piqued your interest there is a 400 level deep dive into container networking that's happening tomorrow I",
    "start": "1103860",
    "end": "1112309"
  },
  {
    "text": "highly recommend going to this talk if you're interested in in more details on the awsm EPC networking front moving on",
    "start": "1112309",
    "end": "1122190"
  },
  {
    "text": "to the second example decoupling permissions via the tasks role before we had task role you would",
    "start": "1122190",
    "end": "1132240"
  },
  {
    "text": "launch an ec2 instance and typically you launch an instance with an instance role",
    "start": "1132240",
    "end": "1139049"
  },
  {
    "text": "an ec2 instance role and I am role and then when you launch a task within this",
    "start": "1139049",
    "end": "1144929"
  },
  {
    "text": "ec2 instance let's say that this task wants to access some other AWS resource",
    "start": "1144929",
    "end": "1150330"
  },
  {
    "text": "like a dynamo DB table in this case you need credentials to be able to access",
    "start": "1150330",
    "end": "1156869"
  },
  {
    "text": "this dynamo DB table you need an access key and a secret key and by default the",
    "start": "1156869",
    "end": "1163950"
  },
  {
    "text": "way this works is the AWS SDK or CLI that you're using within your task to",
    "start": "1163950",
    "end": "1169980"
  },
  {
    "text": "make that dynamo DB API call is wired by default to load the credentials",
    "start": "1169980",
    "end": "1176129"
  },
  {
    "text": "associated with your ec2 instance role and that means that the I am policy that",
    "start": "1176129",
    "end": "1182460"
  },
  {
    "text": "you attach to your ec2 instance role needs to have this d DB permissions",
    "start": "1182460",
    "end": "1187769"
  },
  {
    "text": "associated with it now if you launch a second task onto this instance that's accessing some",
    "start": "1187769",
    "end": "1194429"
  },
  {
    "text": "other kind of resource let's say an s3 get in this case the SDK within that task is also falling back to use the",
    "start": "1194429",
    "end": "1202080"
  },
  {
    "text": "same ec2 instance role and so the policy that goes with your instance role also",
    "start": "1202080",
    "end": "1207900"
  },
  {
    "text": "needs to allow s3 actions now there are a few problems with this model if you",
    "start": "1207900",
    "end": "1213299"
  },
  {
    "text": "try to move it to the Fargate world problem number one you're relying on your hosts in role in order to give your",
    "start": "1213299",
    "end": "1220980"
  },
  {
    "text": "tasks permissions to do the things that they need to do and that's not good for Fargate problem number two because all",
    "start": "1220980",
    "end": "1229830"
  },
  {
    "text": "the tasks on your instance are sharing that same role you're now opening the door to this kind of cross communication",
    "start": "1229830",
    "end": "1237570"
  },
  {
    "text": "your task one that only really needs to access the DynamoDB table can now also",
    "start": "1237570",
    "end": "1243570"
  },
  {
    "text": "access this s3 bucket that it has no business accessing just because it's",
    "start": "1243570",
    "end": "1249360"
  },
  {
    "text": "sharing the same role that a neighboring task might also be using and we certainly don't want this kind of thing",
    "start": "1249360",
    "end": "1256409"
  },
  {
    "text": "in Fargate we need to isolate the tasks and so if you remove the host components",
    "start": "1256409",
    "end": "1261990"
  },
  {
    "text": "from this picture it doesn't work for Fargate where do these tasks get their",
    "start": "1261990",
    "end": "1267330"
  },
  {
    "text": "permissions from if the underlying server and the role associated with the server is not your role and so we came",
    "start": "1267330",
    "end": "1275279"
  },
  {
    "text": "up of this concept of a task role and it's really very simple idea and it's exactly what you think it is when you",
    "start": "1275279",
    "end": "1283049"
  },
  {
    "text": "now launch a task you can create an iam",
    "start": "1283049",
    "end": "1288870"
  },
  {
    "text": "role with just the permissions needed for that task and Men and and pass it",
    "start": "1288870",
    "end": "1294630"
  },
  {
    "text": "along in the launch tasks API call and we worked with the AWS SDK team to",
    "start": "1294630",
    "end": "1302220"
  },
  {
    "text": "change the wiring to have it now load the credentials associated with that tasks role that you passed to us during",
    "start": "1302220",
    "end": "1309390"
  },
  {
    "text": "the task launch and so if you launch a second task you can create a second role",
    "start": "1309390",
    "end": "1314880"
  },
  {
    "text": "and pass a second role on to your second task and this was perfect because it",
    "start": "1314880",
    "end": "1323429"
  },
  {
    "text": "removed the reliance of your tasks on that ec2 instance level role and so we",
    "start": "1323429",
    "end": "1328860"
  },
  {
    "text": "can remove all the in components from this picture and we get standalone tasks that work in the",
    "start": "1328860",
    "end": "1335309"
  },
  {
    "text": "Fargate world so again we innovated a",
    "start": "1335309",
    "end": "1341519"
  },
  {
    "text": "task native way to do permissions such that you can specify fine-grained",
    "start": "1341519",
    "end": "1347370"
  },
  {
    "text": "permissions for that specific task without having any reliance on the",
    "start": "1347370",
    "end": "1352559"
  },
  {
    "text": "permissions model of the underlying host and that was a good fit for the Fargate",
    "start": "1352559",
    "end": "1357690"
  },
  {
    "text": "paradigm and finally my last example for",
    "start": "1357690",
    "end": "1363570"
  },
  {
    "text": "today is how we decouple monitoring via the task metadata endpoint and for this",
    "start": "1363570",
    "end": "1371610"
  },
  {
    "text": "example I'm going to to use the specific use case of data dogs integration with",
    "start": "1371610",
    "end": "1378480"
  },
  {
    "text": "us for those of you who don't know what data dog is data dog is an AWS partner",
    "start": "1378480",
    "end": "1383760"
  },
  {
    "text": "company and they are building solutions to enable you to basically collect",
    "start": "1383760",
    "end": "1392460"
  },
  {
    "text": "metrics and logs from your applications that are running on AWS and view it in a",
    "start": "1392460",
    "end": "1399090"
  },
  {
    "text": "nice UI on their website so before we",
    "start": "1399090",
    "end": "1405149"
  },
  {
    "text": "had the task metadata endpoint this is what the data dog integration story was you have the default network namespace",
    "start": "1405149",
    "end": "1412380"
  },
  {
    "text": "there that we talked about earlier the docker demon itself runs within this",
    "start": "1412380",
    "end": "1419309"
  },
  {
    "text": "default network namespace of the host with data dog you have to also install",
    "start": "1419309",
    "end": "1425059"
  },
  {
    "text": "the data dog agent itself as a daemon and the data dog demon also runs within",
    "start": "1425059",
    "end": "1431159"
  },
  {
    "text": "this host network namespace and now when you launch your application container",
    "start": "1431159",
    "end": "1438740"
  },
  {
    "text": "presumably if you're using the AWS VPC networking mode the container and the application lives in the task network",
    "start": "1438740",
    "end": "1445710"
  },
  {
    "text": "namespace and what happens here is data dog queries docker for stats about your",
    "start": "1445710",
    "end": "1454649"
  },
  {
    "text": "container like CPU utilization memory utilization disk and network bandwidth it queries all of these docker stats",
    "start": "1454649",
    "end": "1462380"
  },
  {
    "text": "against the doctor and then publishes it out to their data data dog service so you can go view",
    "start": "1462380",
    "end": "1468560"
  },
  {
    "text": "those statistics on on a webpage and we looked at this and said this is a great",
    "start": "1468560",
    "end": "1474170"
  },
  {
    "text": "feature you know easy to mode tasks have this feature why shouldn't Fargate tasks",
    "start": "1474170",
    "end": "1479570"
  },
  {
    "text": "have this feature we want to enable this feature for farting but we couldn't take",
    "start": "1479570",
    "end": "1484910"
  },
  {
    "text": "the solution as is to the Fargate world and the reason for that problem number one the docker daemon the data dog demon",
    "start": "1484910",
    "end": "1493430"
  },
  {
    "text": "itself is running in the hosts network namespace problem number two the data",
    "start": "1493430",
    "end": "1500750"
  },
  {
    "text": "dog demon is getting its information the stats that it needs from the docker daemon which is also running outside of",
    "start": "1500750",
    "end": "1506900"
  },
  {
    "text": "the tasks sandbox in the host network namespace problem number three because",
    "start": "1506900",
    "end": "1512780"
  },
  {
    "text": "the data dog demon is running in the host network namespace it's using that host network interface the f0 network",
    "start": "1512780",
    "end": "1520550"
  },
  {
    "text": "interface to publish metrics out to the data service and so if we remove the",
    "start": "1520550",
    "end": "1526430"
  },
  {
    "text": "host components from this picture how is all of this going to work anymore",
    "start": "1526430",
    "end": "1531550"
  },
  {
    "text": "and so we went back and sat down with data dog and came up with a different",
    "start": "1531550",
    "end": "1538400"
  },
  {
    "text": "way of doing things in the Fargate world the first change that we made was",
    "start": "1538400",
    "end": "1543700"
  },
  {
    "text": "instead of installing the data dog demon the data dog agent as a daemon on your",
    "start": "1543700",
    "end": "1552290"
  },
  {
    "text": "server data dog came up with the containerized version of their agent and what you can do now is when you launch",
    "start": "1552290",
    "end": "1559610"
  },
  {
    "text": "your task instead of just launching your application container you can also pull in this data dog agent as a sidecar",
    "start": "1559610",
    "end": "1566660"
  },
  {
    "text": "container and now the data data dog demon is actually running within your task network namespace itself the second",
    "start": "1566660",
    "end": "1575480"
  },
  {
    "text": "change that we brought about the data dog demon still needs to query something",
    "start": "1575480",
    "end": "1580550"
  },
  {
    "text": "and get the stats and we don't want it to be reaching down into the hosts network namespace to talk to docker but",
    "start": "1580550",
    "end": "1588020"
  },
  {
    "text": "we said this is a reasonable use case to say I want I want to know information",
    "start": "1588020",
    "end": "1593930"
  },
  {
    "text": "about my my application containers in tasks namespace I should have access to",
    "start": "1593930",
    "end": "1599570"
  },
  {
    "text": "this information and so we built a task metadata endpoint it's a local endpoint",
    "start": "1599570",
    "end": "1606200"
  },
  {
    "text": "that's available within your task network namespace that surfaces various metadata about your task like the task",
    "start": "1606200",
    "end": "1613490"
  },
  {
    "text": "ID the IP address of your tasks including docker stats CPU memory stats",
    "start": "1613490",
    "end": "1619220"
  },
  {
    "text": "etc and so now the citecar container the data doc container can just hit this local endpoint within the task name",
    "start": "1619220",
    "end": "1625820"
  },
  {
    "text": "space to get application level stats and also because it's running within the",
    "start": "1625820",
    "end": "1632299"
  },
  {
    "text": "task network namespace it can use the tasks network interface to publish",
    "start": "1632299",
    "end": "1637370"
  },
  {
    "text": "metrics out to the data dog service and so now if we remove the host level",
    "start": "1637370",
    "end": "1643250"
  },
  {
    "text": "components here you get a cohesive picture for the Fargate world and really",
    "start": "1643250",
    "end": "1651220"
  },
  {
    "text": "again to reinforce the point here with tasks metadata we innovated on a way to",
    "start": "1651220",
    "end": "1658760"
  },
  {
    "text": "give you a task native way to query of information about your containers",
    "start": "1658760",
    "end": "1664000"
  },
  {
    "text": "without necessarily giving you access to information about other tasks right and",
    "start": "1664000",
    "end": "1670809"
  },
  {
    "text": "interested more interestingly the what data dog did here they worked with us to",
    "start": "1670809",
    "end": "1677330"
  },
  {
    "text": "move from a model that required you to pre install a daemon on the server to a",
    "start": "1677330",
    "end": "1683210"
  },
  {
    "text": "model where you can just pull an application can just pull in all the supporting containers it needs into the",
    "start": "1683210",
    "end": "1689960"
  },
  {
    "text": "task sandbox itself and I think that was a great example of how they were",
    "start": "1689960",
    "end": "1696019"
  },
  {
    "text": "evolving to meet this new paradigm requirements and if you are interested",
    "start": "1696019",
    "end": "1704870"
  },
  {
    "text": "in this particular topic of how to gain visibility in to your applications that are running in the serverless mode there",
    "start": "1704870",
    "end": "1712549"
  },
  {
    "text": "is a breakout session tomorrow that dives deeper into this topic and with",
    "start": "1712549",
    "end": "1720590"
  },
  {
    "text": "that I don't want to take too much more of your time and I want to let you hear about Turner so my takeaway to you is",
    "start": "1720590",
    "end": "1730540"
  },
  {
    "text": "really examine your applications that you want to bring to Fargate to see if",
    "start": "1730540",
    "end": "1735850"
  },
  {
    "text": "you have any touch points any assumptions that you're making about the underlying host and if you are",
    "start": "1735850",
    "end": "1745500"
  },
  {
    "text": "investigate if there's a different way of doing it is there a different mode of operation that we've enabled and Fargate",
    "start": "1745500",
    "end": "1751180"
  },
  {
    "text": "that lets you do the same thing we probably have I like to think of it as a",
    "start": "1751180",
    "end": "1756430"
  },
  {
    "text": "jigsaw puzzle where we own the bottom piece and you own the top piece and the",
    "start": "1756430",
    "end": "1762400"
  },
  {
    "text": "more precise we can get about that line of interface between those two pieces",
    "start": "1762400",
    "end": "1768160"
  },
  {
    "text": "the faster you can iterate on your piece and the faster we can iterate on our",
    "start": "1768160",
    "end": "1774190"
  },
  {
    "text": "piece so that we can give you a better platform underneath your tasks and if",
    "start": "1774190",
    "end": "1780880"
  },
  {
    "text": "you really feel like I've looked at everything and there really isn't any other way to do this I must have access",
    "start": "1780880",
    "end": "1787150"
  },
  {
    "text": "to that underlying host please come and talk to us we want to build a solution for you and we're innovating every day",
    "start": "1787150",
    "end": "1794230"
  },
  {
    "text": "back at home in the team to find new ways to allow you to safely decouple your applications from the underlying",
    "start": "1794230",
    "end": "1800890"
  },
  {
    "text": "host because that is the future of serverless computing thank you very much",
    "start": "1800890",
    "end": "1805990"
  },
  {
    "text": "and now I'll hand it over to Joseph",
    "start": "1805990",
    "end": "1810000"
  },
  {
    "text": "Thank You Archer now hey everybody I'm Joseph Bolger the principal architect at",
    "start": "1813340",
    "end": "1819320"
  },
  {
    "text": "Turner and today I'm here to tell you about our journey to far gate but before",
    "start": "1819320",
    "end": "1826250"
  },
  {
    "text": "I get started let me tell you a little about us for those of you that are not",
    "start": "1826250",
    "end": "1832580"
  },
  {
    "text": "familiar with Turner some of our brands include TBS TNT CNN Cartoon Network",
    "start": "1832580",
    "end": "1839299"
  },
  {
    "text": "Adult Swim just to name a few we currently have the ninth largest collection of web properties in the",
    "start": "1839299",
    "end": "1846559"
  },
  {
    "text": "world so why did we at Turner choose to adopt",
    "start": "1846559",
    "end": "1853270"
  },
  {
    "text": "Fargate as a technology well to get us started let me give you a brief history",
    "start": "1853270",
    "end": "1860240"
  },
  {
    "text": "of our path up until now a while ago we",
    "start": "1860240",
    "end": "1866659"
  },
  {
    "text": "realized the benefits of containerization and we knew that in",
    "start": "1866659",
    "end": "1873409"
  },
  {
    "text": "order to meet the demands of our business we were gonna need a containerize so he did we started to",
    "start": "1873409",
    "end": "1880850"
  },
  {
    "text": "learn how to build docker containers and we started to leverage the benefits of",
    "start": "1880850",
    "end": "1886400"
  },
  {
    "text": "them and through that process we began to understand the other need of",
    "start": "1886400",
    "end": "1893330"
  },
  {
    "text": "orchestration so we went about building a platform that we called harbor which",
    "start": "1893330",
    "end": "1902120"
  },
  {
    "text": "is basically an internal paths running on top of a kubernetes cluster and we",
    "start": "1902120",
    "end": "1909679"
  },
  {
    "text": "began migrating teams onto this platform",
    "start": "1909679",
    "end": "1914780"
  },
  {
    "text": "and it worked really great for them for a long time but around the same time",
    "start": "1914780",
    "end": "1920570"
  },
  {
    "text": "that we were getting peak adoption the harbor Turner needed to start instituting a culture shift or two",
    "start": "1920570",
    "end": "1928580"
  },
  {
    "text": "arching his point institute a paradigm shift of a DevOps culture in our teams",
    "start": "1928580",
    "end": "1934490"
  },
  {
    "text": "to a lot of our teams adopted that mindset very quickly and immediately",
    "start": "1934490",
    "end": "1942200"
  },
  {
    "text": "jumped into other technologies and ECS and it provided many benefits for",
    "start": "1942200",
    "end": "1948680"
  },
  {
    "text": "them include and still do today but then Fargate came out and for the rest of the",
    "start": "1948680",
    "end": "1957320"
  },
  {
    "text": "teams that were still on harbor we saw Fargate as a gateway technology to get",
    "start": "1957320",
    "end": "1965540"
  },
  {
    "text": "them into this new devops world so why",
    "start": "1965540",
    "end": "1972710"
  },
  {
    "text": "far gate what did far gate do that really engaged",
    "start": "1972710",
    "end": "1979520"
  },
  {
    "text": "and allowed them to get into this DevOps mindset to help answer that let me give",
    "start": "1979520",
    "end": "1987770"
  },
  {
    "text": "you a little bit of context you see these teams that were still in Harbor",
    "start": "1987770",
    "end": "1997299"
  },
  {
    "text": "operationally most of what they had to do was done for them they didn't have to",
    "start": "1997390",
    "end": "2004660"
  },
  {
    "text": "create load balancers or allocate target groups or make route 53 records they",
    "start": "2004660",
    "end": "2011650"
  },
  {
    "text": "didn't have to do any of that stuff because it was all done for them by Harbor or by the Harbor team and so",
    "start": "2011650",
    "end": "2019660"
  },
  {
    "text": "because of that they kind of lived in this world where they focused most on",
    "start": "2019660",
    "end": "2026380"
  },
  {
    "text": "their container levels far Gate was a technology that enabled them to get into",
    "start": "2026380",
    "end": "2037540"
  },
  {
    "text": "the DevOps culture and mindset without having to take as big of a leap as they",
    "start": "2037540",
    "end": "2045670"
  },
  {
    "text": "would have had to take in other technologies the leap that they have",
    "start": "2045670",
    "end": "2050919"
  },
  {
    "text": "that other technologies require to them was too large there's too many things for them to learn for example with Farah",
    "start": "2050920",
    "end": "2060310"
  },
  {
    "text": "gate as Archer I was pointing out earlier all of your host level concerns",
    "start": "2060310",
    "end": "2066490"
  },
  {
    "text": "are abstracted away you don't have to manage the host level that allowed their team our teams to only focus at the",
    "start": "2066490",
    "end": "2074740"
  },
  {
    "text": "container level which is what they were already used to doing and so because of this our",
    "start": "2074740",
    "end": "2083679"
  },
  {
    "text": "cloud architecture team began building tooling around the Fargate product to",
    "start": "2083679",
    "end": "2089638"
  },
  {
    "text": "[Music] accelerate the adoption and the move into this new device world the result",
    "start": "2089639",
    "end": "2098760"
  },
  {
    "text": "ended up with reduced costs both in terms of compute because far gate",
    "start": "2098760",
    "end": "2104170"
  },
  {
    "text": "allowed most of these teams to actually save on compute costs but also in time",
    "start": "2104170",
    "end": "2110310"
  },
  {
    "text": "because it took them much less time to actually get up and running one key",
    "start": "2110310",
    "end": "2121450"
  },
  {
    "text": "aspect of that tooling was to build a",
    "start": "2121450",
    "end": "2126599"
  },
  {
    "text": "scaffolding CLI that would allow the teams to accelerate into deploying their",
    "start": "2126599",
    "end": "2135490"
  },
  {
    "text": "compute clusters this was key because",
    "start": "2135490",
    "end": "2141089"
  },
  {
    "text": "it'll gave our teams a full stack of something that they would use in the",
    "start": "2141089",
    "end": "2150069"
  },
  {
    "text": "Fargate compute cluster without needing to know exactly what it did it provided a full stack a Fargate compute cluster a",
    "start": "2150069",
    "end": "2157450"
  },
  {
    "text": "compute that was easily deployable with minimal understanding required it also",
    "start": "2157450",
    "end": "2165190"
  },
  {
    "text": "provided them a great starting point to learn so not only did it build the stack",
    "start": "2165190",
    "end": "2172300"
  },
  {
    "text": "for them but also provided in the code that they would need to go back later on when they actually had time to learn",
    "start": "2172300",
    "end": "2180220"
  },
  {
    "text": "about each individual thing that was being allocated it also provided a huge",
    "start": "2180220",
    "end": "2186970"
  },
  {
    "text": "cost savings because this team didn't have these teams didn't have to build an",
    "start": "2186970",
    "end": "2192190"
  },
  {
    "text": "entire stack they were able to leapfrog into their infrastructure without having",
    "start": "2192190",
    "end": "2198369"
  },
  {
    "text": "to know each and every individual piece so what is this scaffolding look like it",
    "start": "2198369",
    "end": "2206109"
  },
  {
    "text": "starts off by creating a terraform TFRs file",
    "start": "2206109",
    "end": "2211200"
  },
  {
    "text": "and you have to provide a few key properties like you have to tell at what",
    "start": "2211200",
    "end": "2217870"
  },
  {
    "text": "region you're gonna be in what VPC do you want to deploy to what profile what",
    "start": "2217870",
    "end": "2223210"
  },
  {
    "text": "are the subnets stuff like that and then the Fargate create CLI will take that",
    "start": "2223210",
    "end": "2232710"
  },
  {
    "text": "TFRs file and generate for them an entire stack the result is you get an",
    "start": "2232710",
    "end": "2239920"
  },
  {
    "text": "entire AWS stack necessary to run for example a web server you get a fully",
    "start": "2239920",
    "end": "2246610"
  },
  {
    "text": "working compute cluster in Fargate along with all the ancillary technologies in",
    "start": "2246610",
    "end": "2253380"
  },
  {
    "text": "AWS that you need to run your server our serve your web server this is where our",
    "start": "2253380",
    "end": "2262090"
  },
  {
    "text": "teams began to see huge benefits they",
    "start": "2262090",
    "end": "2267160"
  },
  {
    "text": "were only a couple of terraform applies away from having a fully running Fargate",
    "start": "2267160",
    "end": "2273430"
  },
  {
    "text": "cluster on their account once the",
    "start": "2273430",
    "end": "2279220"
  },
  {
    "text": "cluster was up then they needed to start managing and operating it so we began",
    "start": "2279220",
    "end": "2287650"
  },
  {
    "text": "leveraging the Fargate CLI to do that they needed to do things like get",
    "start": "2287650",
    "end": "2294460"
  },
  {
    "text": "information about it like what kind of tasks are were running on the service or",
    "start": "2294460",
    "end": "2301020"
  },
  {
    "text": "was the endpoint for the load balancer things like that they also needed to",
    "start": "2301020",
    "end": "2306040"
  },
  {
    "text": "scale it both horizontally and vertically to try to right-size it they",
    "start": "2306040",
    "end": "2314170"
  },
  {
    "text": "also needed a way to deploy it in there see ICD process once the teams had their",
    "start": "2314170",
    "end": "2324520"
  },
  {
    "text": "clusters up and running the next step for them was to migrate their CI CD",
    "start": "2324520",
    "end": "2332050"
  },
  {
    "text": "process and that was basically a few key changes that they had to make the first",
    "start": "2332050",
    "end": "2340630"
  },
  {
    "text": "of which was they needed to login to docker with their new ad of",
    "start": "2340630",
    "end": "2349500"
  },
  {
    "text": "Secr once they were logged in they then",
    "start": "2349500",
    "end": "2355590"
  },
  {
    "text": "need to take their docker image and push it into that ACR and once they had that",
    "start": "2355590",
    "end": "2362970"
  },
  {
    "text": "image pushed into the ECR they then needed to deploy that image into their Fargate service this is what the Fargate",
    "start": "2362970",
    "end": "2374720"
  },
  {
    "text": "journey looked like at Turner and the results we've had a lot of success we've",
    "start": "2374720",
    "end": "2382620"
  },
  {
    "text": "migrated over 500 services of those 500 services we've had around 700 tasks in",
    "start": "2382620",
    "end": "2390780"
  },
  {
    "text": "them that's come about by over 300 migrations across a hundred AWS accounts",
    "start": "2390780",
    "end": "2398880"
  },
  {
    "text": "and we've done all of that and less than 12 months Cartoon Network runs on",
    "start": "2398880",
    "end": "2407490"
  },
  {
    "text": "Fargate Adult Swim also runs on Fargate just to give you a couple examples and",
    "start": "2407490",
    "end": "2415410"
  },
  {
    "text": "I've also prepared a little demo for you guys here today to show you some of the",
    "start": "2415410",
    "end": "2420570"
  },
  {
    "text": "tooling that we've been talking about that accelerated these teams into this",
    "start": "2420570",
    "end": "2425820"
  },
  {
    "text": "DevOps culture I want to show you the Fargate create scaffolding tool and show",
    "start": "2425820",
    "end": "2433080"
  },
  {
    "text": "you how how our teams generated stacks and just how smooth it can be to get a",
    "start": "2433080",
    "end": "2440750"
  },
  {
    "text": "compute cluster up and running and if we have time I'd also like to show you the",
    "start": "2440750",
    "end": "2447570"
  },
  {
    "text": "Fargate CLI that our teams use to get information about their clusters and",
    "start": "2447570",
    "end": "2453560"
  },
  {
    "text": "what a lot of them use to deploy and with their CI CD process",
    "start": "2453560",
    "end": "2460370"
  },
  {
    "text": "so what I have here is the beginning of",
    "start": "2464759",
    "end": "2470259"
  },
  {
    "text": "a terraform TFRs file and I've predefined for us to kind of save us",
    "start": "2470259",
    "end": "2477400"
  },
  {
    "text": "some time an example web server that I want to spin up so I've already put in",
    "start": "2477400",
    "end": "2482529"
  },
  {
    "text": "all the properties that I'm gonna need to run this these are mostly things that",
    "start": "2482529",
    "end": "2491890"
  },
  {
    "text": "your teams would need to go into the AWS console and look up for the most part or",
    "start": "2491890",
    "end": "2497670"
  },
  {
    "text": "you know a lot of this like your project name or your product name and things like that well once you have this",
    "start": "2497670",
    "end": "2504730"
  },
  {
    "text": "running or once you have this defined",
    "start": "2504730",
    "end": "2508950"
  },
  {
    "text": "you run the Fargate create command and",
    "start": "2510749",
    "end": "2516190"
  },
  {
    "text": "it's going to ask you a few questions today we're gonna take the defaults just to make it quicker but here you know you",
    "start": "2516190",
    "end": "2523480"
  },
  {
    "text": "can see it's asking you things like do you want HTTP support it'll make a sort if it'll make a certificate certificate",
    "start": "2523480",
    "end": "2529630"
  },
  {
    "text": "manager for example do you want auto scaling do you wanna IM role for your CI CD process stuff like that we're going",
    "start": "2529630",
    "end": "2536710"
  },
  {
    "text": "to take all the defaults but basically what it does is if if you don't want something it's just going to remove a terraform file so you don't have it and",
    "start": "2536710",
    "end": "2543999"
  },
  {
    "text": "the end result after you've done that is it will build an entire terraform set of",
    "start": "2543999",
    "end": "2553809"
  },
  {
    "text": "scripts that you need in order to get your Fargate compute cluster up and",
    "start": "2553809",
    "end": "2560589"
  },
  {
    "text": "running the first thing it does is it creates a base folder",
    "start": "2560589",
    "end": "2569430"
  },
  {
    "text": "in the base folder it's gonna do two things it's going to define a s3 bucket",
    "start": "2569430",
    "end": "2581930"
  },
  {
    "text": "that we're going to use to store the terraform state and anybody that's",
    "start": "2581930",
    "end": "2587190"
  },
  {
    "text": "familiar with terraform state knows when you have multiple people on a team trying to actually allocate",
    "start": "2587190",
    "end": "2594170"
  },
  {
    "text": "infrastructure with terraform you want to have a common place to store it because you don't want to have different",
    "start": "2594170",
    "end": "2600480"
  },
  {
    "text": "terraform States sitting on different computers so that's the purpose of that and then the second thing that it's",
    "start": "2600480",
    "end": "2607560"
  },
  {
    "text": "going to do is it's going to allocate",
    "start": "2607560",
    "end": "2613050"
  },
  {
    "text": "for this project a ECR for the",
    "start": "2613050",
    "end": "2618570"
  },
  {
    "text": "application that we're going to build so right now I'm just gonna have it do a terraform apply real quick and have it",
    "start": "2618570",
    "end": "2625230"
  },
  {
    "text": "build it this one doesn't take long the next one takes a little bit of time so I'm gonna get this one running real quick",
    "start": "2625230",
    "end": "2630630"
  },
  {
    "text": "so I can talk Lots going so the second",
    "start": "2630630",
    "end": "2636870"
  },
  {
    "text": "thing that we're going to get into is the environment of the application that",
    "start": "2636870",
    "end": "2642990"
  },
  {
    "text": "we're gonna build right now so real quick trying to get this running and",
    "start": "2642990",
    "end": "2648890"
  },
  {
    "text": "then we'll talk about what's going on in here",
    "start": "2651830",
    "end": "2655970"
  },
  {
    "text": "okay so what do we have here well the",
    "start": "2657870",
    "end": "2663600"
  },
  {
    "text": "way that this template is written out each and every file that you're seeing",
    "start": "2663600",
    "end": "2669870"
  },
  {
    "text": "here is an individual infrastructure function that you need in order to get",
    "start": "2669870",
    "end": "2675660"
  },
  {
    "text": "your target compute cluster running a web server that's what we're building today so there are things in here like",
    "start": "2675660",
    "end": "2682620"
  },
  {
    "text": "you see the auto scale terraform files to do either time-based auto scaling or",
    "start": "2682620",
    "end": "2689630"
  },
  {
    "text": "performance-based auto scaling they also have meaningful defaults in there so",
    "start": "2689630",
    "end": "2697470"
  },
  {
    "text": "your teams don't have to define a bunch of values just to get things weren't working so for example if you look at",
    "start": "2697470",
    "end": "2704280"
  },
  {
    "text": "the auto scaling performance file you'll notice like the low threshold is at 20% and the high is at 80 the time one's",
    "start": "2704280",
    "end": "2712830"
  },
  {
    "text": "similar it'll for any non production environment it'll shut down the cluster",
    "start": "2712830",
    "end": "2719520"
  },
  {
    "text": "it'll throw out all down the tasks to zero after seven o'clock at night for example you can change that the compute",
    "start": "2719520",
    "end": "2728730"
  },
  {
    "text": "cluster itself is actually allocated inside the ECS terraform file and you",
    "start": "2728730",
    "end": "2734310"
  },
  {
    "text": "also have things like the low balancer you have the listeners and you also have",
    "start": "2734310",
    "end": "2740820"
  },
  {
    "text": "the roles that the tasks are going to be given for your permissions the bottom",
    "start": "2740820",
    "end": "2750150"
  },
  {
    "text": "line here is it creates the entire stack for you so literally in about five or",
    "start": "2750150",
    "end": "2758550"
  },
  {
    "text": "ten minutes our team's once they know what their VP see the VP ceases are",
    "start": "2758550",
    "end": "2764910"
  },
  {
    "text": "going to put it in or their sudden that's they're gonna put it in and some of the tagging that we use they have a",
    "start": "2764910",
    "end": "2770130"
  },
  {
    "text": "whole stack of compute running in AWS ready for them to push too so we're",
    "start": "2770130",
    "end": "2782790"
  },
  {
    "text": "still waiting for the loop out the load balancer which is typical so let me jump",
    "start": "2782790",
    "end": "2788370"
  },
  {
    "text": "over here I want to show you something so I went ahead and I made I made one",
    "start": "2788370",
    "end": "2795990"
  },
  {
    "text": "yesterday and I have it back up so this is actually the result which are seeing",
    "start": "2795990",
    "end": "2802440"
  },
  {
    "text": "here of a the Fargate service info command on a cluster that I made earlier",
    "start": "2802440",
    "end": "2808220"
  },
  {
    "text": "so you can see things like what docker image is running on how many tasks is",
    "start": "2808220",
    "end": "2815010"
  },
  {
    "text": "there one being allocated or provisioned you can see things like your help your",
    "start": "2815010",
    "end": "2821220"
  },
  {
    "text": "environment some of your environment variables you can see what the load",
    "start": "2821220",
    "end": "2827309"
  },
  {
    "text": "balance the load balance our end point is stuff like that in fact if I go over",
    "start": "2827309",
    "end": "2834289"
  },
  {
    "text": "here I can show you guys know again I",
    "start": "2834289",
    "end": "2844400"
  },
  {
    "text": "must disclose off",
    "start": "2844400",
    "end": "2848119"
  },
  {
    "text": "up so we're actually done here so let me show you so I'm gonna run if I get",
    "start": "2849800",
    "end": "2856040"
  },
  {
    "text": "service info and then boom it's our cluster running it comes pre deployed",
    "start": "2856040",
    "end": "2864650"
  },
  {
    "text": "with a default back-end so it's not actually the application that your team would be running but it's the starting",
    "start": "2864650",
    "end": "2871700"
  },
  {
    "text": "point to get them there right so now as Wendy would begin the migration of your",
    "start": "2871700",
    "end": "2878750"
  },
  {
    "text": "CIC process to actually push your apps docker image into your service all the",
    "start": "2878750",
    "end": "2895310"
  },
  {
    "text": "things that I just showed you are open sourced and available on github please",
    "start": "2895310",
    "end": "2903590"
  },
  {
    "text": "feel free to take this stuff for a spin and let us know what you think about them the Fargate create repo or CLI is",
    "start": "2903590",
    "end": "2912800"
  },
  {
    "text": "the tool that i just showed you that scaffold scaffold an entire sack for",
    "start": "2912800",
    "end": "2919670"
  },
  {
    "text": "that compute cluster in the case that we ran was actually a web server but it can do other types of infrastructure too in",
    "start": "2919670",
    "end": "2927700"
  },
  {
    "text": "fact the terraform ECS Fargate repo is the scripts that the Fargate create CLI",
    "start": "2927700",
    "end": "2937510"
  },
  {
    "text": "uses to scaffold out all the terraform files for you and then lastly the",
    "start": "2937510",
    "end": "2943700"
  },
  {
    "text": "Fargate CLI is the thing at the end that we used to get information about the cluster and with that oh thanks",
    "start": "2943700",
    "end": "2955550"
  },
  {
    "text": "everybody [Applause]",
    "start": "2955550",
    "end": "2960900"
  },
  {
    "text": "Thank You Joseph for that that's basically all we had for you today",
    "start": "2960900",
    "end": "2966460"
  },
  {
    "text": "please do fill out the survey and your mobile app and tell us how you felt",
    "start": "2966460",
    "end": "2972040"
  },
  {
    "text": "about this talk and both Joseph and I will be outside in the hallway so if you",
    "start": "2972040",
    "end": "2979300"
  },
  {
    "text": "have any questions feel free to come here as absent and thank you all very much for your time and patience here",
    "start": "2979300",
    "end": "2985610"
  },
  {
    "text": "[Applause]",
    "start": "2985610",
    "end": "2989649"
  }
]