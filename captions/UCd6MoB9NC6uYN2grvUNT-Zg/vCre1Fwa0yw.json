[
  {
    "start": "0",
    "end": "21000"
  },
  {
    "text": "[Music]",
    "start": "140",
    "end": "1160"
  },
  {
    "text": "[Applause]",
    "start": "1160",
    "end": "2910"
  },
  {
    "text": "[Music]",
    "start": "2910",
    "end": "6080"
  },
  {
    "text": "hello I am utsav a cloud support",
    "start": "7460",
    "end": "10019"
  },
  {
    "text": "engineer here at the AWS office in Cape",
    "start": "10019",
    "end": "13200"
  },
  {
    "text": "Town today I'm going to show you how to",
    "start": "13200",
    "end": "15120"
  },
  {
    "text": "troubleshoot High CPU utilization on",
    "start": "15120",
    "end": "17580"
  },
  {
    "text": "Amazon relational database service for",
    "start": "17580",
    "end": "19740"
  },
  {
    "text": "Oracle instances let's get started",
    "start": "19740",
    "end": "22980"
  },
  {
    "start": "21000",
    "end": "77000"
  },
  {
    "text": "for rds4 Oracle there are multiple tools",
    "start": "22980",
    "end": "26039"
  },
  {
    "text": "from AWS and Oracle that you can use to",
    "start": "26039",
    "end": "28980"
  },
  {
    "text": "track down the increase in CPU",
    "start": "28980",
    "end": "30539"
  },
  {
    "text": "utilization",
    "start": "30539",
    "end": "32099"
  },
  {
    "text": "Amazon cloudwatch Matrix enhanced",
    "start": "32099",
    "end": "34980"
  },
  {
    "text": "monitoring Matrix performance insights",
    "start": "34980",
    "end": "37680"
  },
  {
    "text": "Matrix Oracle stats pack Oracle sqlt",
    "start": "37680",
    "end": "42239"
  },
  {
    "text": "automatic workload Repository",
    "start": "42239",
    "end": "44879"
  },
  {
    "text": "automatic database diagnostic monitor",
    "start": "44879",
    "end": "48120"
  },
  {
    "text": "active session history",
    "start": "48120",
    "end": "50280"
  },
  {
    "text": "let's quickly check each one of them and",
    "start": "50280",
    "end": "53039"
  },
  {
    "text": "how you can use them to troubleshoot any",
    "start": "53039",
    "end": "55079"
  },
  {
    "text": "CPU bottlenecks",
    "start": "55079",
    "end": "57059"
  },
  {
    "text": "cloudwatch collects and processes the",
    "start": "57059",
    "end": "59460"
  },
  {
    "text": "information from the Amazon RDS instance",
    "start": "59460",
    "end": "61860"
  },
  {
    "text": "and then shares the Matrix that can help",
    "start": "61860",
    "end": "64799"
  },
  {
    "text": "you to Monitor and troubleshoot any",
    "start": "64799",
    "end": "66960"
  },
  {
    "text": "performance issue on the Amazon RDS",
    "start": "66960",
    "end": "69060"
  },
  {
    "text": "instance",
    "start": "69060",
    "end": "70380"
  },
  {
    "text": "for our scenario let's look at the CPU",
    "start": "70380",
    "end": "73140"
  },
  {
    "text": "utilization of the RDS instance that I",
    "start": "73140",
    "end": "75659"
  },
  {
    "text": "have created for this demo let's go to",
    "start": "75659",
    "end": "78540"
  },
  {
    "start": "77000",
    "end": "150000"
  },
  {
    "text": "the AWS Management console and then",
    "start": "78540",
    "end": "80880"
  },
  {
    "text": "navigate to the RDS console",
    "start": "80880",
    "end": "84438"
  },
  {
    "text": "in the navigation pin choose the",
    "start": "86040",
    "end": "88740"
  },
  {
    "text": "monitoring Tab and select cloudwatch",
    "start": "88740",
    "end": "90960"
  },
  {
    "text": "Matrix",
    "start": "90960",
    "end": "91979"
  },
  {
    "text": "from The Matrix we can observe that the",
    "start": "91979",
    "end": "94500"
  },
  {
    "text": "instance CPU utilization is high",
    "start": "94500",
    "end": "97680"
  },
  {
    "text": "to identify any probable cause of the",
    "start": "97680",
    "end": "100860"
  },
  {
    "text": "sudden increase in CPU utilization we",
    "start": "100860",
    "end": "103860"
  },
  {
    "text": "can leverage other Matrix that are",
    "start": "103860",
    "end": "106020"
  },
  {
    "text": "collected by cloudwatch",
    "start": "106020",
    "end": "108119"
  },
  {
    "text": "are the Matrix that can help to identify",
    "start": "108119",
    "end": "111180"
  },
  {
    "text": "the issue will be database connections",
    "start": "111180",
    "end": "113220"
  },
  {
    "text": "disk Q depth right iops right throughput",
    "start": "113220",
    "end": "116700"
  },
  {
    "text": "read iops and read throughput",
    "start": "116700",
    "end": "120840"
  },
  {
    "text": "note that if the instance class is T2 or",
    "start": "120840",
    "end": "124500"
  },
  {
    "text": "T3 or t4g",
    "start": "124500",
    "end": "126659"
  },
  {
    "text": "it's best practice to check the CPU",
    "start": "126659",
    "end": "129959"
  },
  {
    "text": "credit usage and CPU credit balance as",
    "start": "129959",
    "end": "133319"
  },
  {
    "text": "they provide a baseline level of CPU",
    "start": "133319",
    "end": "135840"
  },
  {
    "text": "performance with the ability to burst",
    "start": "135840",
    "end": "138420"
  },
  {
    "text": "CPU usage at any time for as long as",
    "start": "138420",
    "end": "141780"
  },
  {
    "text": "required depending upon the credits",
    "start": "141780",
    "end": "144000"
  },
  {
    "text": "accumulated when the CPU usage is below",
    "start": "144000",
    "end": "146640"
  },
  {
    "text": "the Baseline threshold also for the",
    "start": "146640",
    "end": "148620"
  },
  {
    "text": "Matrix in Cloud watch the sample is",
    "start": "148620",
    "end": "150780"
  },
  {
    "start": "150000",
    "end": "375000"
  },
  {
    "text": "collected every minute",
    "start": "150780",
    "end": "152879"
  },
  {
    "text": "enhanced monitoring is another tool from",
    "start": "152879",
    "end": "155520"
  },
  {
    "text": "AWS that allows you to track the Matrix",
    "start": "155520",
    "end": "158760"
  },
  {
    "text": "in real time for the operating system",
    "start": "158760",
    "end": "161099"
  },
  {
    "text": "that your database is running on",
    "start": "161099",
    "end": "163800"
  },
  {
    "text": "also enhanced monitoring allows you to",
    "start": "163800",
    "end": "166980"
  },
  {
    "text": "view all the processes that are",
    "start": "166980",
    "end": "169260"
  },
  {
    "text": "currently running on the RDS instance",
    "start": "169260",
    "end": "171540"
  },
  {
    "text": "note that smaller monitoring intervals",
    "start": "171540",
    "end": "174300"
  },
  {
    "text": "can result in more frequent reporting of",
    "start": "174300",
    "end": "176940"
  },
  {
    "text": "os metrics and increases your monitoring",
    "start": "176940",
    "end": "180480"
  },
  {
    "text": "cost but provides you more accurate data",
    "start": "180480",
    "end": "183780"
  },
  {
    "text": "for better troubleshooting",
    "start": "183780",
    "end": "185819"
  },
  {
    "text": "if the instance is a multi-availability",
    "start": "185819",
    "end": "188459"
  },
  {
    "text": "Zone deployment you can select primary",
    "start": "188459",
    "end": "190920"
  },
  {
    "text": "to view the OS Matrix of the primary",
    "start": "190920",
    "end": "193800"
  },
  {
    "text": "instance",
    "start": "193800",
    "end": "194879"
  },
  {
    "text": "and also select secondary to view the",
    "start": "194879",
    "end": "197340"
  },
  {
    "text": "Matrix for the standby replica",
    "start": "197340",
    "end": "199980"
  },
  {
    "text": "let's review The Matrix related to CPU",
    "start": "199980",
    "end": "203040"
  },
  {
    "text": "for example let's look into these values",
    "start": "203040",
    "end": "207659"
  },
  {
    "text": "user the percentage of CPU in use by",
    "start": "207659",
    "end": "211319"
  },
  {
    "text": "user programs",
    "start": "211319",
    "end": "213000"
  },
  {
    "text": "nice",
    "start": "213000",
    "end": "214319"
  },
  {
    "text": "the percentage of the CPU in use by",
    "start": "214319",
    "end": "217260"
  },
  {
    "text": "programs running at lowest priority",
    "start": "217260",
    "end": "219860"
  },
  {
    "text": "these are mostly the user process itself",
    "start": "219860",
    "end": "222959"
  },
  {
    "text": "waiting for other user or system",
    "start": "222959",
    "end": "225659"
  },
  {
    "text": "processes to complete",
    "start": "225659",
    "end": "228239"
  },
  {
    "text": "system the percentage of the CPU in use",
    "start": "228239",
    "end": "232019"
  },
  {
    "text": "by the kernel processes",
    "start": "232019",
    "end": "234659"
  },
  {
    "text": "total the total percentage of the CPU in",
    "start": "234659",
    "end": "238260"
  },
  {
    "text": "use",
    "start": "238260",
    "end": "239220"
  },
  {
    "text": "idle",
    "start": "239220",
    "end": "240480"
  },
  {
    "text": "the percentage of the CPU that's idle",
    "start": "240480",
    "end": "244319"
  },
  {
    "text": "weight the percentage of the CPU that's",
    "start": "244319",
    "end": "247620"
  },
  {
    "text": "unused while waiting for Io access",
    "start": "247620",
    "end": "251819"
  },
  {
    "text": "another important metric is load average",
    "start": "251819",
    "end": "254220"
  },
  {
    "text": "that shows the number of processes",
    "start": "254220",
    "end": "256620"
  },
  {
    "text": "requesting the CPU time",
    "start": "256620",
    "end": "259199"
  },
  {
    "text": "enhanced monitoring shows the",
    "start": "259199",
    "end": "261540"
  },
  {
    "text": "information for the last minute the last",
    "start": "261540",
    "end": "264300"
  },
  {
    "text": "five minutes and the last 15 minutes",
    "start": "264300",
    "end": "267660"
  },
  {
    "text": "if the load average is greater than the",
    "start": "267660",
    "end": "270360"
  },
  {
    "text": "number of vcpus then the instance can be",
    "start": "270360",
    "end": "273060"
  },
  {
    "text": "experiencing a CPU bottleneck",
    "start": "273060",
    "end": "276740"
  },
  {
    "text": "you can also review the other OS Matrix",
    "start": "280139",
    "end": "282960"
  },
  {
    "text": "such as iops memory and storage from the",
    "start": "282960",
    "end": "287340"
  },
  {
    "text": "OS perspective",
    "start": "287340",
    "end": "288840"
  },
  {
    "text": "to check for any performance",
    "start": "288840",
    "end": "290759"
  },
  {
    "text": "enhancements if necessary",
    "start": "290759",
    "end": "293880"
  },
  {
    "text": "as mentioned earlier",
    "start": "293880",
    "end": "295979"
  },
  {
    "text": "other than reviewing the Matrix enhanced",
    "start": "295979",
    "end": "298979"
  },
  {
    "text": "monitoring can also provide us the list",
    "start": "298979",
    "end": "301919"
  },
  {
    "text": "of processes running on the Oracle",
    "start": "301919",
    "end": "304620"
  },
  {
    "text": "instance",
    "start": "304620",
    "end": "305820"
  },
  {
    "text": "to view the OS processes select OS",
    "start": "305820",
    "end": "308759"
  },
  {
    "text": "process list from the monitoring drop",
    "start": "308759",
    "end": "311280"
  },
  {
    "text": "down list",
    "start": "311280",
    "end": "312360"
  },
  {
    "text": "then sort the list by CPU percentage",
    "start": "312360",
    "end": "316080"
  },
  {
    "text": "values to identify the process that has",
    "start": "316080",
    "end": "319380"
  },
  {
    "text": "the most CPU usage",
    "start": "319380",
    "end": "322259"
  },
  {
    "text": "we can see that there is a specific",
    "start": "322259",
    "end": "324000"
  },
  {
    "text": "process consuming most of the CPU",
    "start": "324000",
    "end": "326520"
  },
  {
    "text": "because the PID of the process is also",
    "start": "326520",
    "end": "329160"
  },
  {
    "text": "provided let's connect to SQL plus and",
    "start": "329160",
    "end": "331800"
  },
  {
    "text": "run a query",
    "start": "331800",
    "end": "333900"
  },
  {
    "text": "that will help us to identify the user",
    "start": "333900",
    "end": "336360"
  },
  {
    "text": "and the SQL query that's causing High",
    "start": "336360",
    "end": "339360"
  },
  {
    "text": "CPU utilization",
    "start": "339360",
    "end": "342240"
  },
  {
    "text": "by identifying the query we can make a",
    "start": "342240",
    "end": "345060"
  },
  {
    "text": "decision depending upon how badly it's",
    "start": "345060",
    "end": "347880"
  },
  {
    "text": "impacting other processes running on the",
    "start": "347880",
    "end": "350220"
  },
  {
    "text": "RDS instance",
    "start": "350220",
    "end": "351600"
  },
  {
    "text": "if necessary we can kill the query",
    "start": "351600",
    "end": "354180"
  },
  {
    "text": "execution to decrease the CPU",
    "start": "354180",
    "end": "356220"
  },
  {
    "text": "utilization or else we can run query",
    "start": "356220",
    "end": "359039"
  },
  {
    "text": "tuning to improve the performance",
    "start": "359039",
    "end": "362039"
  },
  {
    "text": "now let's look into performance insights",
    "start": "362039",
    "end": "364740"
  },
  {
    "text": "that allows us to visualize the database",
    "start": "364740",
    "end": "367800"
  },
  {
    "text": "load and filter the load by weights SQL",
    "start": "367800",
    "end": "371639"
  },
  {
    "text": "statements hosts or users",
    "start": "371639",
    "end": "375060"
  },
  {
    "start": "375000",
    "end": "462000"
  },
  {
    "text": "let's now check the performance insights",
    "start": "375060",
    "end": "377580"
  },
  {
    "text": "to see what we can observe when the CPU",
    "start": "377580",
    "end": "381360"
  },
  {
    "text": "utilization was high for the test RDS",
    "start": "381360",
    "end": "385139"
  },
  {
    "text": "instance",
    "start": "385139",
    "end": "386639"
  },
  {
    "text": "open the Amazon RDS console",
    "start": "386639",
    "end": "389400"
  },
  {
    "text": "in the navigation pane choose",
    "start": "389400",
    "end": "392100"
  },
  {
    "text": "performance insights",
    "start": "392100",
    "end": "394080"
  },
  {
    "text": "choose the DB instance that you want to",
    "start": "394080",
    "end": "396660"
  },
  {
    "text": "monitor",
    "start": "396660",
    "end": "398100"
  },
  {
    "text": "for view past select the duration of",
    "start": "398100",
    "end": "400500"
  },
  {
    "text": "your choice",
    "start": "400500",
    "end": "401819"
  },
  {
    "text": "in the database load graph check the",
    "start": "401819",
    "end": "404580"
  },
  {
    "text": "time when you experienced a spike in the",
    "start": "404580",
    "end": "407520"
  },
  {
    "text": "CPU usage",
    "start": "407520",
    "end": "410039"
  },
  {
    "text": "as we can see there is a spy that is due",
    "start": "410039",
    "end": "412800"
  },
  {
    "text": "to CPU weight event",
    "start": "412800",
    "end": "414360"
  },
  {
    "text": "we can now also check the top SQL to",
    "start": "414360",
    "end": "417539"
  },
  {
    "text": "identify which SQL query was causing the",
    "start": "417539",
    "end": "419940"
  },
  {
    "text": "spike in the database load",
    "start": "419940",
    "end": "422039"
  },
  {
    "text": "performance insights helps us to",
    "start": "422039",
    "end": "424740"
  },
  {
    "text": "identify any query bottleneck",
    "start": "424740",
    "end": "426960"
  },
  {
    "text": "performance insights also lets us know",
    "start": "426960",
    "end": "429900"
  },
  {
    "text": "which weight events are causing higher",
    "start": "429900",
    "end": "432720"
  },
  {
    "text": "load",
    "start": "432720",
    "end": "433680"
  },
  {
    "text": "this helps us to narrow down the root",
    "start": "433680",
    "end": "437100"
  },
  {
    "text": "cause of increase in high CPU",
    "start": "437100",
    "end": "439500"
  },
  {
    "text": "utilization",
    "start": "439500",
    "end": "441300"
  },
  {
    "text": "activating performance insights is a",
    "start": "441300",
    "end": "444539"
  },
  {
    "text": "best practice because it offers a",
    "start": "444539",
    "end": "446880"
  },
  {
    "text": "rolling seven days of performance data",
    "start": "446880",
    "end": "449099"
  },
  {
    "text": "history at no charge",
    "start": "449099",
    "end": "451259"
  },
  {
    "text": "there are other tools provided by Oracle",
    "start": "451259",
    "end": "454020"
  },
  {
    "text": "that you can use depending upon the",
    "start": "454020",
    "end": "456900"
  },
  {
    "text": "license model used for the RDS for",
    "start": "456900",
    "end": "460560"
  },
  {
    "text": "Oracle instance",
    "start": "460560",
    "end": "462539"
  },
  {
    "start": "462000",
    "end": "591000"
  },
  {
    "text": "we can use stats pack and security for a",
    "start": "462539",
    "end": "466080"
  },
  {
    "text": "standard edition instance however awr",
    "start": "466080",
    "end": "469319"
  },
  {
    "text": "that is automatic workload repository",
    "start": "469319",
    "end": "471780"
  },
  {
    "text": "which also includes automatic database",
    "start": "471780",
    "end": "475139"
  },
  {
    "text": "diagnostic monitor and active session",
    "start": "475139",
    "end": "477780"
  },
  {
    "text": "history is available only for Enterprise",
    "start": "477780",
    "end": "480599"
  },
  {
    "text": "Edition of Oracle because it requires a",
    "start": "480599",
    "end": "484139"
  },
  {
    "text": "diagnostic packed license",
    "start": "484139",
    "end": "486539"
  },
  {
    "text": "Oracle stats pack is a performance",
    "start": "486539",
    "end": "488699"
  },
  {
    "text": "reporting tool that provides the",
    "start": "488699",
    "end": "490979"
  },
  {
    "text": "performance Matrix of your database over",
    "start": "490979",
    "end": "493620"
  },
  {
    "text": "a specific time period",
    "start": "493620",
    "end": "495660"
  },
  {
    "text": "after the report is generated it",
    "start": "495660",
    "end": "498060"
  },
  {
    "text": "provides you the queries with high CPU",
    "start": "498060",
    "end": "501060"
  },
  {
    "text": "utilization and the corresponding top",
    "start": "501060",
    "end": "504419"
  },
  {
    "text": "weight events for the time interval",
    "start": "504419",
    "end": "508020"
  },
  {
    "text": "Oracle sqlt is an oracle utility that",
    "start": "508020",
    "end": "511680"
  },
  {
    "text": "produces a report that includes object",
    "start": "511680",
    "end": "515459"
  },
  {
    "text": "statistics object metadata Optimizer",
    "start": "515459",
    "end": "518520"
  },
  {
    "text": "related initialization parameters",
    "start": "518520",
    "end": "520919"
  },
  {
    "text": "and other information that a database",
    "start": "520919",
    "end": "523860"
  },
  {
    "text": "administrator can use to tune a skill",
    "start": "523860",
    "end": "527100"
  },
  {
    "text": "statement for Optimal Performance",
    "start": "527100",
    "end": "530240"
  },
  {
    "text": "sklt produces an HTML Report with",
    "start": "530240",
    "end": "534120"
  },
  {
    "text": "hyperlinks to all of the sections in the",
    "start": "534120",
    "end": "536940"
  },
  {
    "text": "report unlike automatic workload",
    "start": "536940",
    "end": "539399"
  },
  {
    "text": "repository or stats back reports sqlt",
    "start": "539399",
    "end": "543360"
  },
  {
    "text": "works on individual SQL statements",
    "start": "543360",
    "end": "546839"
  },
  {
    "text": "the awr report contains all the",
    "start": "546839",
    "end": "549959"
  },
  {
    "text": "information based on the snapshot",
    "start": "549959",
    "end": "552000"
  },
  {
    "text": "interval that the report is generated",
    "start": "552000",
    "end": "554100"
  },
  {
    "text": "for",
    "start": "554100",
    "end": "555000"
  },
  {
    "text": "to troubleshoot High CPU utilization you",
    "start": "555000",
    "end": "558839"
  },
  {
    "text": "can check the SQL ordered by CPU time",
    "start": "558839",
    "end": "561480"
  },
  {
    "text": "section of the awr report",
    "start": "561480",
    "end": "564360"
  },
  {
    "text": "iridium analyzes the awr data and",
    "start": "564360",
    "end": "567480"
  },
  {
    "text": "provides recommendations based on any",
    "start": "567480",
    "end": "570839"
  },
  {
    "text": "performance bottleneck observed",
    "start": "570839",
    "end": "573180"
  },
  {
    "text": "Ash is a diagnostic tool that collects",
    "start": "573180",
    "end": "576720"
  },
  {
    "text": "active session information this is very",
    "start": "576720",
    "end": "579779"
  },
  {
    "text": "useful to troubleshoot transient",
    "start": "579779",
    "end": "582120"
  },
  {
    "text": "performance problems",
    "start": "582120",
    "end": "583860"
  },
  {
    "text": "review the ish report for top SQL with",
    "start": "583860",
    "end": "586980"
  },
  {
    "text": "top events section to troubleshoot",
    "start": "586980",
    "end": "589560"
  },
  {
    "text": "performance issue",
    "start": "589560",
    "end": "591660"
  },
  {
    "start": "591000",
    "end": "614000"
  },
  {
    "text": "and now you know how to troubleshoot",
    "start": "591660",
    "end": "593640"
  },
  {
    "text": "High CPU utilization on Amazon",
    "start": "593640",
    "end": "595740"
  },
  {
    "text": "relational database service for Oracle",
    "start": "595740",
    "end": "598019"
  },
  {
    "text": "instances thanks for watching and happy",
    "start": "598019",
    "end": "600240"
  },
  {
    "text": "cloud computing from all of us here at",
    "start": "600240",
    "end": "602580"
  },
  {
    "text": "AWS",
    "start": "602580",
    "end": "603220"
  },
  {
    "text": "[Music]",
    "start": "603220",
    "end": "604240"
  },
  {
    "text": "[Applause]",
    "start": "604240",
    "end": "606959"
  },
  {
    "text": "thank you",
    "start": "606959",
    "end": "609420"
  },
  {
    "text": "foreign",
    "start": "609420",
    "end": "611200"
  },
  {
    "text": "[Music]",
    "start": "611200",
    "end": "614379"
  }
]