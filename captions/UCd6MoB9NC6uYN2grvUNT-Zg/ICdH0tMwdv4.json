[
  {
    "start": "0",
    "end": "35000"
  },
  {
    "text": "hey everyone uh my name is Cory thank",
    "start": "1480",
    "end": "2960"
  },
  {
    "text": "you very much for the introduction Steve",
    "start": "2960",
    "end": "4319"
  },
  {
    "text": "and Chris for an awesome presentation my",
    "start": "4319",
    "end": "6080"
  },
  {
    "text": "name is Corey um and I'm here to talk to",
    "start": "6080",
    "end": "7960"
  },
  {
    "text": "you today about stream processing at",
    "start": "7960",
    "end": "9080"
  },
  {
    "text": "answers so just take a quick straw pull",
    "start": "9080",
    "end": "10759"
  },
  {
    "text": "the room how many people have done",
    "start": "10759",
    "end": "11880"
  },
  {
    "text": "stream processing",
    "start": "11880",
    "end": "13320"
  },
  {
    "text": "before so we got some hands up cool how",
    "start": "13320",
    "end": "15639"
  },
  {
    "text": "many people have used storm before okay",
    "start": "15639",
    "end": "18439"
  },
  {
    "text": "so people have heard about storm so the",
    "start": "18439",
    "end": "20039"
  },
  {
    "text": "goal of this talk is kind of somewhere",
    "start": "20039",
    "end": "21240"
  },
  {
    "text": "in between it's going to give kind of an",
    "start": "21240",
    "end": "22320"
  },
  {
    "text": "introduction a little bit about stream",
    "start": "22320",
    "end": "23560"
  },
  {
    "text": "processing and why it might be important",
    "start": "23560",
    "end": "25160"
  },
  {
    "text": "talk a little bit about how storm which",
    "start": "25160",
    "end": "26439"
  },
  {
    "text": "is kind of the current State ofthe art",
    "start": "26439",
    "end": "27720"
  },
  {
    "text": "works and then give an overview of Heron",
    "start": "27720",
    "end": "29720"
  },
  {
    "text": "which is Twitter's Next Generation",
    "start": "29720",
    "end": "30800"
  },
  {
    "text": "stream processing so before I really get",
    "start": "30800",
    "end": "33440"
  },
  {
    "text": "into things I want to give you a quick",
    "start": "33440",
    "end": "34480"
  },
  {
    "text": "overview of what answers actually is",
    "start": "34480",
    "end": "37559"
  },
  {
    "start": "35000",
    "end": "88000"
  },
  {
    "text": "answers is a real-time and opinionated",
    "start": "37559",
    "end": "39440"
  },
  {
    "text": "mobile analytics product there are many",
    "start": "39440",
    "end": "41239"
  },
  {
    "text": "different mobile analytics products out",
    "start": "41239",
    "end": "42600"
  },
  {
    "text": "there in this space from the beginning",
    "start": "42600",
    "end": "44320"
  },
  {
    "text": "we wanted to differentiate ourselves the",
    "start": "44320",
    "end": "46160"
  },
  {
    "text": "goal for our product is really to be",
    "start": "46160",
    "end": "47280"
  },
  {
    "text": "opinionated and give people only the",
    "start": "47280",
    "end": "49079"
  },
  {
    "text": "insights that they need rather than",
    "start": "49079",
    "end": "50399"
  },
  {
    "text": "having them sift through all the data",
    "start": "50399",
    "end": "51920"
  },
  {
    "text": "and we wanted to be able to be real time",
    "start": "51920",
    "end": "53520"
  },
  {
    "text": "to be the pulse of people's apps it's no",
    "start": "53520",
    "end": "55320"
  },
  {
    "text": "use that your analytics product tells",
    "start": "55320",
    "end": "56600"
  },
  {
    "text": "you a week later that you're out of",
    "start": "56600",
    "end": "57640"
  },
  {
    "text": "users you want to know right now and in",
    "start": "57640",
    "end": "59280"
  },
  {
    "text": "advance in bet",
    "start": "59280",
    "end": "61039"
  },
  {
    "text": "here's an example of the typee of",
    "start": "61039",
    "end": "62120"
  },
  {
    "text": "dashboards we present to users you can",
    "start": "62120",
    "end": "64600"
  },
  {
    "text": "see that all metrics on the dashboard",
    "start": "64600",
    "end": "66439"
  },
  {
    "text": "fluctuate in real time as you receive",
    "start": "66439",
    "end": "68080"
  },
  {
    "text": "new data into the",
    "start": "68080",
    "end": "69799"
  },
  {
    "text": "system across the top you see the top",
    "start": "69799",
    "end": "71920"
  },
  {
    "text": "six metrics that we show we've chosen",
    "start": "71920",
    "end": "73439"
  },
  {
    "text": "six metrics that we think are important",
    "start": "73439",
    "end": "74759"
  },
  {
    "text": "for all customers to watch we show these",
    "start": "74759",
    "end": "76720"
  },
  {
    "text": "front and center we show a spark line",
    "start": "76720",
    "end": "78960"
  },
  {
    "text": "underneath them to give you context",
    "start": "78960",
    "end": "80280"
  },
  {
    "text": "about how you're trending over time and",
    "start": "80280",
    "end": "81920"
  },
  {
    "text": "when there's a a big change we highlight",
    "start": "81920",
    "end": "83680"
  },
  {
    "text": "it you can see kind of an orange circle",
    "start": "83680",
    "end": "85119"
  },
  {
    "text": "down here and invite customers to dig",
    "start": "85119",
    "end": "87799"
  },
  {
    "text": "in so this is a really cool dashboard",
    "start": "87799",
    "end": "90479"
  },
  {
    "start": "88000",
    "end": "245000"
  },
  {
    "text": "but how do we actually build it anwers",
    "start": "90479",
    "end": "93079"
  },
  {
    "text": "uses what is known as the Lambda",
    "start": "93079",
    "end": "94240"
  },
  {
    "text": "architecture to power our dashboards",
    "start": "94240",
    "end": "96520"
  },
  {
    "text": "some of you may have heard of the Lambda",
    "start": "96520",
    "end": "97560"
  },
  {
    "text": "architecture before but as a brief",
    "start": "97560",
    "end": "99000"
  },
  {
    "text": "overview the Lambda architecture calls",
    "start": "99000",
    "end": "100799"
  },
  {
    "text": "for two discrete layers you have a batch",
    "start": "100799",
    "end": "102960"
  },
  {
    "text": "layer and a real-time speed layer as new",
    "start": "102960",
    "end": "105520"
  },
  {
    "text": "data enters the system it it's processed",
    "start": "105520",
    "end": "108040"
  },
  {
    "text": "in parallel by both",
    "start": "108040",
    "end": "109479"
  },
  {
    "text": "layers on the one hand you have a batch",
    "start": "109479",
    "end": "111560"
  },
  {
    "text": "layer which uses Hadoop and map ruce to",
    "start": "111560",
    "end": "114040"
  },
  {
    "text": "compute some view over some set of data",
    "start": "114040",
    "end": "116240"
  },
  {
    "text": "this kind of you could build an",
    "start": "116240",
    "end": "117200"
  },
  {
    "text": "analytics product using just a batch",
    "start": "117200",
    "end": "118680"
  },
  {
    "text": "layer but the problem is it would be at",
    "start": "118680",
    "end": "120360"
  },
  {
    "text": "most at at at least an hour or a few",
    "start": "120360",
    "end": "122680"
  },
  {
    "text": "hours delayed these kind of jobs are",
    "start": "122680",
    "end": "124439"
  },
  {
    "text": "batch jobs and take a while to compute",
    "start": "124439",
    "end": "126799"
  },
  {
    "text": "in order to to remedy that we in",
    "start": "126799",
    "end": "128679"
  },
  {
    "text": "parallel add a real-time layer this",
    "start": "128679",
    "end": "130440"
  },
  {
    "text": "layer computes similar metrics in real",
    "start": "130440",
    "end": "132040"
  },
  {
    "text": "time provides up-to-date results at",
    "start": "132040",
    "end": "134319"
  },
  {
    "text": "query time the two views are merged and",
    "start": "134319",
    "end": "136200"
  },
  {
    "text": "joined to provide both an accurate view",
    "start": "136200",
    "end": "137840"
  },
  {
    "text": "of the world as well as the most recent",
    "start": "137840",
    "end": "139800"
  },
  {
    "text": "one while both layers are interesting",
    "start": "139800",
    "end": "142080"
  },
  {
    "text": "and have their own challenges as we",
    "start": "142080",
    "end": "143680"
  },
  {
    "text": "talked about spark R is a great can for",
    "start": "143680",
    "end": "145560"
  },
  {
    "text": "great great chance for using batch",
    "start": "145560",
    "end": "146840"
  },
  {
    "text": "processing today I want to focus on the",
    "start": "146840",
    "end": "148280"
  },
  {
    "text": "real time layer so maybe you get a",
    "start": "148280",
    "end": "149400"
  },
  {
    "text": "little B like the architecture between",
    "start": "149400",
    "end": "150760"
  },
  {
    "text": "the two talks um the real time layer is",
    "start": "150760",
    "end": "153160"
  },
  {
    "text": "pretty different from the from the batch",
    "start": "153160",
    "end": "154400"
  },
  {
    "text": "processing it has a bunch of different",
    "start": "154400",
    "end": "155560"
  },
  {
    "text": "concerns that are a little bit different",
    "start": "155560",
    "end": "157480"
  },
  {
    "text": "unlike the batch layer the realtime",
    "start": "157480",
    "end": "159000"
  },
  {
    "text": "layer has to handle an unbounded stream",
    "start": "159000",
    "end": "160599"
  },
  {
    "text": "of new data data continues to enter the",
    "start": "160599",
    "end": "162519"
  },
  {
    "text": "new system and there's a hard time",
    "start": "162519",
    "end": "164280"
  },
  {
    "text": "requirement for it we need to be able to",
    "start": "164280",
    "end": "165720"
  },
  {
    "text": "process the information in real time",
    "start": "165720",
    "end": "167599"
  },
  {
    "text": "provide low latency results and",
    "start": "167599",
    "end": "169879"
  },
  {
    "text": "updates so let's go ahead and zoom in on",
    "start": "169879",
    "end": "171800"
  },
  {
    "text": "the realtime layer and take a look at",
    "start": "171800",
    "end": "173000"
  },
  {
    "text": "how it actually works for us data starts",
    "start": "173000",
    "end": "175400"
  },
  {
    "text": "on devices distributed throughout the",
    "start": "175400",
    "end": "176800"
  },
  {
    "text": "world a user clicks a button or installs",
    "start": "176800",
    "end": "179000"
  },
  {
    "text": "an app or install an app and the device",
    "start": "179000",
    "end": "181360"
  },
  {
    "text": "sends the information up to a back end",
    "start": "181360",
    "end": "182840"
  },
  {
    "text": "we run in AWS that back end is really",
    "start": "182840",
    "end": "185519"
  },
  {
    "text": "simple and has really one task to put",
    "start": "185519",
    "end": "187400"
  },
  {
    "text": "the data into a durable queue once the",
    "start": "187400",
    "end": "190159"
  },
  {
    "text": "data is safely in a durable queue we can",
    "start": "190159",
    "end": "192040"
  },
  {
    "text": "then begin the process of streaming the",
    "start": "192040",
    "end": "193440"
  },
  {
    "text": "data through a series of different",
    "start": "193440",
    "end": "195480"
  },
  {
    "text": "processes this decoupling of receiving",
    "start": "195480",
    "end": "197599"
  },
  {
    "text": "the data and actually processing it is",
    "start": "197599",
    "end": "199799"
  },
  {
    "text": "actually pretty substantial it has a",
    "start": "199799",
    "end": "201239"
  },
  {
    "text": "number of good advantages first Let's us",
    "start": "201239",
    "end": "203360"
  },
  {
    "text": "simplify we can write code that just",
    "start": "203360",
    "end": "205200"
  },
  {
    "text": "handles events reception and writes it",
    "start": "205200",
    "end": "206760"
  },
  {
    "text": "to a queue that's a really simple task",
    "start": "206760",
    "end": "208519"
  },
  {
    "text": "hard to mess up and then can write a",
    "start": "208519",
    "end": "210120"
  },
  {
    "text": "series of processing T tasks that are",
    "start": "210120",
    "end": "211840"
  },
  {
    "text": "totally decoupled this lets us scale",
    "start": "211840",
    "end": "213959"
  },
  {
    "text": "them individually say if in the future",
    "start": "213959",
    "end": "215680"
  },
  {
    "text": "we wanted to add a super Advanced",
    "start": "215680",
    "end": "217040"
  },
  {
    "text": "processing step that required machine",
    "start": "217040",
    "end": "218439"
  },
  {
    "text": "learning we could go ahead and add that",
    "start": "218439",
    "end": "219959"
  },
  {
    "text": "with no impact to our event reception",
    "start": "219959",
    "end": "221840"
  },
  {
    "text": "but it also allows us to handle partial",
    "start": "221840",
    "end": "223360"
  },
  {
    "text": "availability nicely if we imagine for",
    "start": "223360",
    "end": "225319"
  },
  {
    "text": "some reason I deployed a bug in our",
    "start": "225319",
    "end": "226680"
  },
  {
    "text": "processing Pipeline and we can no longer",
    "start": "226680",
    "end": "228439"
  },
  {
    "text": "process new events it's okay we can",
    "start": "228439",
    "end": "230360"
  },
  {
    "text": "still receive them and we'll continue to",
    "start": "230360",
    "end": "232200"
  },
  {
    "text": "get new data we won't lose anything this",
    "start": "232200",
    "end": "234239"
  },
  {
    "text": "is",
    "start": "234239",
    "end": "235079"
  },
  {
    "text": "important by embracing this sort of an",
    "start": "235079",
    "end": "237159"
  },
  {
    "text": "asynchronous approach to communication",
    "start": "237159",
    "end": "238879"
  },
  {
    "text": "it allows us to DEC application into a",
    "start": "238879",
    "end": "240760"
  },
  {
    "text": "bunch of different small components that",
    "start": "240760",
    "end": "242040"
  },
  {
    "text": "communicate through",
    "start": "242040",
    "end": "244640"
  },
  {
    "text": "cues well this approach has its",
    "start": "244640",
    "end": "246560"
  },
  {
    "start": "245000",
    "end": "292000"
  },
  {
    "text": "advantages building a realtime",
    "start": "246560",
    "end": "248079"
  },
  {
    "text": "distributed system in this fashion also",
    "start": "248079",
    "end": "249840"
  },
  {
    "text": "has its own",
    "start": "249840",
    "end": "251000"
  },
  {
    "text": "challenges in a system like this there",
    "start": "251000",
    "end": "252920"
  },
  {
    "text": "are many different moving Parts there",
    "start": "252920",
    "end": "254480"
  },
  {
    "text": "are a number of different cues a number",
    "start": "254480",
    "end": "255760"
  },
  {
    "text": "of different workers they all have to be",
    "start": "255760",
    "end": "257880"
  },
  {
    "text": "managed and they have to",
    "start": "257880",
    "end": "259880"
  },
  {
    "text": "interconnect with so many components",
    "start": "259880",
    "end": "261720"
  },
  {
    "text": "distributed throughout the system there",
    "start": "261720",
    "end": "262960"
  },
  {
    "text": "are many different failure points how",
    "start": "262960",
    "end": "264440"
  },
  {
    "text": "can you be sure that the the data that",
    "start": "264440",
    "end": "265880"
  },
  {
    "text": "you received in the front door actually",
    "start": "265880",
    "end": "267560"
  },
  {
    "text": "makes it out at the end it's a real",
    "start": "267560",
    "end": "269199"
  },
  {
    "text": "challenge",
    "start": "269199",
    "end": "271440"
  },
  {
    "text": "further as we interconnect these systems",
    "start": "271440",
    "end": "273199"
  },
  {
    "text": "and they flow through cues we need to",
    "start": "273199",
    "end": "274759"
  },
  {
    "text": "have a way to actually propagate back",
    "start": "274759",
    "end": "276080"
  },
  {
    "text": "pressure through a system if we imagine",
    "start": "276080",
    "end": "277919"
  },
  {
    "text": "that one worker somewhere becomes slow",
    "start": "277919",
    "end": "280600"
  },
  {
    "text": "it'll stop reading from a que at the",
    "start": "280600",
    "end": "281960"
  },
  {
    "text": "same rate that Q might build up in terms",
    "start": "281960",
    "end": "284280"
  },
  {
    "text": "of in terms of the number of events",
    "start": "284280",
    "end": "285479"
  },
  {
    "text": "stuck in it and if workers wri to that",
    "start": "285479",
    "end": "287440"
  },
  {
    "text": "queue don't know about it that queue",
    "start": "287440",
    "end": "288639"
  },
  {
    "text": "will eventually fall over that'll result",
    "start": "288639",
    "end": "290440"
  },
  {
    "text": "in a loss of data that's",
    "start": "290440",
    "end": "292320"
  },
  {
    "start": "292000",
    "end": "525000"
  },
  {
    "text": "unacceptable in 2011 Twitter open",
    "start": "292320",
    "end": "294639"
  },
  {
    "text": "sourced a project called storm some of",
    "start": "294639",
    "end": "296320"
  },
  {
    "text": "you may know storm provides a number of",
    "start": "296320",
    "end": "298280"
  },
  {
    "text": "abstractions and a clustering system to",
    "start": "298280",
    "end": "300039"
  },
  {
    "text": "actually run streaming computations and",
    "start": "300039",
    "end": "301720"
  },
  {
    "text": "make it easier so you don't have to",
    "start": "301720",
    "end": "302720"
  },
  {
    "text": "manage all these cues yourself storm has",
    "start": "302720",
    "end": "305479"
  },
  {
    "text": "a number of abstractions that really",
    "start": "305479",
    "end": "306639"
  },
  {
    "text": "help make things simpler the first",
    "start": "306639",
    "end": "308720"
  },
  {
    "text": "abstraction storm uses is that of a",
    "start": "308720",
    "end": "310080"
  },
  {
    "text": "spout in storm a spout is a source of",
    "start": "310080",
    "end": "312080"
  },
  {
    "text": "tupal into the system it encapsulates a",
    "start": "312080",
    "end": "314160"
  },
  {
    "text": "logic of transforming information from a",
    "start": "314160",
    "end": "315880"
  },
  {
    "text": "que or a database or really anything",
    "start": "315880",
    "end": "318319"
  },
  {
    "text": "into tupal in the",
    "start": "318319",
    "end": "319680"
  },
  {
    "text": "system storm also has the idea of a bolt",
    "start": "319680",
    "end": "322240"
  },
  {
    "text": "it's a computation on a stream of tupal",
    "start": "322240",
    "end": "324240"
  },
  {
    "text": "this is really the Workhorse of the",
    "start": "324240",
    "end": "325400"
  },
  {
    "text": "system and where you put the majority of",
    "start": "325400",
    "end": "326880"
  },
  {
    "text": "your logic a bolt processes tupal from",
    "start": "326880",
    "end": "329319"
  },
  {
    "text": "spout",
    "start": "329319",
    "end": "330280"
  },
  {
    "text": "and can combine them filter them or do",
    "start": "330280",
    "end": "331919"
  },
  {
    "text": "operations on them and potentially also",
    "start": "331919",
    "end": "333520"
  },
  {
    "text": "emit",
    "start": "333520",
    "end": "334440"
  },
  {
    "text": "tupal with these two applic with these",
    "start": "334440",
    "end": "336919"
  },
  {
    "text": "two uh abstractions combined storm forms",
    "start": "336919",
    "end": "340039"
  },
  {
    "text": "a directed graph of computation data",
    "start": "340039",
    "end": "342199"
  },
  {
    "text": "starts flowing from spouts and flows",
    "start": "342199",
    "end": "343639"
  },
  {
    "text": "through bolts and eventually",
    "start": "343639",
    "end": "346160"
  },
  {
    "text": "ends that's a little bit abstract so",
    "start": "346160",
    "end": "348120"
  },
  {
    "text": "let's make it a little bit more concrete",
    "start": "348120",
    "end": "350000"
  },
  {
    "text": "let's take an example of a topology that",
    "start": "350000",
    "end": "352000"
  },
  {
    "text": "we wanted to actually archive data let's",
    "start": "352000",
    "end": "353759"
  },
  {
    "text": "imagine that we have a bunch of data in",
    "start": "353759",
    "end": "355440"
  },
  {
    "text": "a q somewhere and we want to write it to",
    "start": "355440",
    "end": "357360"
  },
  {
    "text": "S3 efficiently in a way that's scalable",
    "start": "357360",
    "end": "359840"
  },
  {
    "text": "the way we do that is to create a spout",
    "start": "359840",
    "end": "361880"
  },
  {
    "text": "and two bolts the spout would",
    "start": "361880",
    "end": "363400"
  },
  {
    "text": "encapsulate the logic of actually",
    "start": "363400",
    "end": "364520"
  },
  {
    "text": "reading from the queue and we create two",
    "start": "364520",
    "end": "366479"
  },
  {
    "text": "bolts one which handled the task of",
    "start": "366479",
    "end": "368360"
  },
  {
    "text": "decompressing the events and another",
    "start": "368360",
    "end": "370120"
  },
  {
    "text": "which handled the logic of actually",
    "start": "370120",
    "end": "371280"
  },
  {
    "text": "writing them to S3 once we've defined a",
    "start": "371280",
    "end": "373720"
  },
  {
    "text": "topology in storm it gives us a huge",
    "start": "373720",
    "end": "375840"
  },
  {
    "text": "advantage to be able to scale things",
    "start": "375840",
    "end": "377360"
  },
  {
    "text": "linearly once you define this shape you",
    "start": "377360",
    "end": "379840"
  },
  {
    "text": "can go ahead and add capacity to a",
    "start": "379840",
    "end": "381280"
  },
  {
    "text": "component individually without touching",
    "start": "381280",
    "end": "382919"
  },
  {
    "text": "others as we can imagine let's say",
    "start": "382919",
    "end": "384759"
  },
  {
    "text": "extraction was we invented a really good",
    "start": "384759",
    "end": "386319"
  },
  {
    "text": "compression algorithm and extraction",
    "start": "386319",
    "end": "387599"
  },
  {
    "text": "became expensive well we could go ahead",
    "start": "387599",
    "end": "389319"
  },
  {
    "text": "and parallelize extraction but not not",
    "start": "389319",
    "end": "391560"
  },
  {
    "text": "affect the amount of time we spend",
    "start": "391560",
    "end": "392680"
  },
  {
    "text": "writing to S3 or scale at those workers",
    "start": "392680",
    "end": "394919"
  },
  {
    "text": "that's a huge win with a topology",
    "start": "394919",
    "end": "397560"
  },
  {
    "text": "defined storm also helps actually",
    "start": "397560",
    "end": "399199"
  },
  {
    "text": "deploying this topology and scheduling",
    "start": "399199",
    "end": "400599"
  },
  {
    "text": "it across the cluster as you remembered",
    "start": "400599",
    "end": "402560"
  },
  {
    "text": "there are many different roles there are",
    "start": "402560",
    "end": "403960"
  },
  {
    "text": "cues and workers and scheduling and",
    "start": "403960",
    "end": "405680"
  },
  {
    "text": "deploying them is a challenge storms",
    "start": "405680",
    "end": "407680"
  },
  {
    "text": "helps to deploy a topology in storm you",
    "start": "407680",
    "end": "410360"
  },
  {
    "text": "submit a configuration in a jar to",
    "start": "410360",
    "end": "412120"
  },
  {
    "text": "Nimbus nimus is this kind of cluster",
    "start": "412120",
    "end": "414199"
  },
  {
    "text": "management system nbus then communicates",
    "start": "414199",
    "end": "416840"
  },
  {
    "text": "with a series of storm workers through",
    "start": "416840",
    "end": "418440"
  },
  {
    "text": "their supervisor and develops an",
    "start": "418440",
    "end": "420280"
  },
  {
    "text": "assignment for them it determines which",
    "start": "420280",
    "end": "421800"
  },
  {
    "text": "workers it should run it on and which",
    "start": "421800",
    "end": "423280"
  },
  {
    "text": "executors to go ahead and run it in",
    "start": "423280",
    "end": "425479"
  },
  {
    "text": "storm will then automatically schedule",
    "start": "425479",
    "end": "426960"
  },
  {
    "text": "your actual task across the cluster in a",
    "start": "426960",
    "end": "429560"
  },
  {
    "text": "way that's reliable supervisors will",
    "start": "429560",
    "end": "431319"
  },
  {
    "text": "continue to watch processes in case they",
    "start": "431319",
    "end": "432919"
  },
  {
    "text": "fail and automatically restart them and",
    "start": "432919",
    "end": "435000"
  },
  {
    "text": "if any worker dies they'll automatically",
    "start": "435000",
    "end": "436919"
  },
  {
    "text": "be rebalanced across the cluster this is",
    "start": "436919",
    "end": "438800"
  },
  {
    "text": "great because it'd be a headache to do",
    "start": "438800",
    "end": "439919"
  },
  {
    "text": "by",
    "start": "439919",
    "end": "440639"
  },
  {
    "text": "hand but now that tasks are distributed",
    "start": "440639",
    "end": "442720"
  },
  {
    "text": "across the cluster how do they actually",
    "start": "442720",
    "end": "444800"
  },
  {
    "text": "communicate we've got these tasks that",
    "start": "444800",
    "end": "446400"
  },
  {
    "text": "we no need to pass information and storm",
    "start": "446400",
    "end": "448039"
  },
  {
    "text": "now needs to provide a way to actually",
    "start": "448039",
    "end": "449280"
  },
  {
    "text": "communic communicate between them and",
    "start": "449280",
    "end": "450319"
  },
  {
    "text": "pass",
    "start": "450319",
    "end": "451360"
  },
  {
    "text": "tuples in order to provide a robust way",
    "start": "451360",
    "end": "453520"
  },
  {
    "text": "to communicate storm actually provides a",
    "start": "453520",
    "end": "455240"
  },
  {
    "text": "message CU co-resident with the bolt",
    "start": "455240",
    "end": "457560"
  },
  {
    "text": "that means storm actually runs a Zer mq",
    "start": "457560",
    "end": "459440"
  },
  {
    "text": "instance right in front of the bolt for",
    "start": "459440",
    "end": "461879"
  },
  {
    "text": "for a spout to actually talk to a bolt",
    "start": "461879",
    "end": "464120"
  },
  {
    "text": "it simply writes data to the zerm Q",
    "start": "464120",
    "end": "466319"
  },
  {
    "text": "sitting right next to the bolt a bolt",
    "start": "466319",
    "end": "468199"
  },
  {
    "text": "then pulls information from the que and",
    "start": "468199",
    "end": "469879"
  },
  {
    "text": "begins to process",
    "start": "469879",
    "end": "471319"
  },
  {
    "text": "it but if we backtrack a little while",
    "start": "471319",
    "end": "473599"
  },
  {
    "text": "ago in the beginning I talked about back",
    "start": "473599",
    "end": "474960"
  },
  {
    "text": "pressure talked about something getting",
    "start": "474960",
    "end": "476599"
  },
  {
    "text": "slow and ensuring that people Upstream",
    "start": "476599",
    "end": "478039"
  },
  {
    "text": "of it knew what was going on",
    "start": "478039",
    "end": "479960"
  },
  {
    "text": "with this sort of an architecture",
    "start": "479960",
    "end": "481319"
  },
  {
    "text": "there's no way for a spout to know",
    "start": "481319",
    "end": "482879"
  },
  {
    "text": "immediately if it should back off this",
    "start": "482879",
    "end": "485159"
  },
  {
    "text": "is a one- directional flow a spout could",
    "start": "485159",
    "end": "486879"
  },
  {
    "text": "continue writing data until eventually",
    "start": "486879",
    "end": "488240"
  },
  {
    "text": "the Zer Q fell over that would result in",
    "start": "488240",
    "end": "490560"
  },
  {
    "text": "data loss which is again something we",
    "start": "490560",
    "end": "492000"
  },
  {
    "text": "don't want so in order to actually",
    "start": "492000",
    "end": "494680"
  },
  {
    "text": "Implement back pressure in storm it must",
    "start": "494680",
    "end": "496520"
  },
  {
    "text": "track tup for every Tuple in the system",
    "start": "496520",
    "end": "499159"
  },
  {
    "text": "storm actually tracks it its acquisition",
    "start": "499159",
    "end": "501919"
  },
  {
    "text": "and sending throughout the whole system",
    "start": "501919",
    "end": "503879"
  },
  {
    "text": "let's say you have a spout which emits a",
    "start": "503879",
    "end": "505400"
  },
  {
    "text": "tuple it'll go ahead and get passed to",
    "start": "505400",
    "end": "507560"
  },
  {
    "text": "the Q on the bolt and the bolt will",
    "start": "507560",
    "end": "509479"
  },
  {
    "text": "eventually pull the the Tuple out and",
    "start": "509479",
    "end": "511240"
  },
  {
    "text": "process it once it has successfully",
    "start": "511240",
    "end": "512959"
  },
  {
    "text": "processed the Tuple it'll send an",
    "start": "512959",
    "end": "514560"
  },
  {
    "text": "acknowledgement back to the spout and",
    "start": "514560",
    "end": "516518"
  },
  {
    "text": "the spout will now know that it can send",
    "start": "516519",
    "end": "517839"
  },
  {
    "text": "more data in this way a spout can",
    "start": "517839",
    "end": "520240"
  },
  {
    "text": "actually regulate how much data flows",
    "start": "520240",
    "end": "521599"
  },
  {
    "text": "through the system by keeping this kind",
    "start": "521599",
    "end": "522919"
  },
  {
    "text": "of like a Max spout pending it's",
    "start": "522919",
    "end": "525200"
  },
  {
    "start": "525000",
    "end": "698000"
  },
  {
    "text": "called now storm is an amazing system",
    "start": "525200",
    "end": "527720"
  },
  {
    "text": "and we've used it for many years we've",
    "start": "527720",
    "end": "529399"
  },
  {
    "text": "used it both at crash litics which is",
    "start": "529399",
    "end": "530760"
  },
  {
    "text": "the precursor to answers as well as",
    "start": "530760",
    "end": "532360"
  },
  {
    "text": "Twitter um but as with any tool you",
    "start": "532360",
    "end": "535120"
  },
  {
    "text": "scale they become you you find its pain",
    "start": "535120",
    "end": "537519"
  },
  {
    "text": "points answers has been around for for",
    "start": "537519",
    "end": "539519"
  },
  {
    "text": "about 2 years and we've been scaling",
    "start": "539519",
    "end": "540959"
  },
  {
    "text": "aggressively since then we now process",
    "start": "540959",
    "end": "542800"
  },
  {
    "text": "more than 1.5 million events every",
    "start": "542800",
    "end": "544680"
  },
  {
    "text": "second that means depending on how",
    "start": "544680",
    "end": "546120"
  },
  {
    "text": "slowly or fast I've been talking we've",
    "start": "546120",
    "end": "547760"
  },
  {
    "text": "processed about a billion events now",
    "start": "547760",
    "end": "550160"
  },
  {
    "text": "that's amazing but it also comes with",
    "start": "550160",
    "end": "551399"
  },
  {
    "text": "its own challenges and today I want to",
    "start": "551399",
    "end": "552880"
  },
  {
    "text": "talk to you about two of them one",
    "start": "552880",
    "end": "554800"
  },
  {
    "text": "challenge we've had with work with storm",
    "start": "554800",
    "end": "556399"
  },
  {
    "text": "in particular with is response to",
    "start": "556399",
    "end": "558320"
  },
  {
    "text": "resource utilization in storm as I",
    "start": "558320",
    "end": "560600"
  },
  {
    "text": "discussed there's a way to describe a",
    "start": "560600",
    "end": "562160"
  },
  {
    "text": "cluster and run your code across it to",
    "start": "562160",
    "end": "564279"
  },
  {
    "text": "do this storm has the idea of a worker",
    "start": "564279",
    "end": "565920"
  },
  {
    "text": "which is a supervisor and some",
    "start": "565920",
    "end": "567320"
  },
  {
    "text": "predefined number of slots these slots",
    "start": "567320",
    "end": "569600"
  },
  {
    "text": "represent executor slots where Storm can",
    "start": "569600",
    "end": "571480"
  },
  {
    "text": "schedule work now one challenge here is",
    "start": "571480",
    "end": "574079"
  },
  {
    "text": "that you must predefine out how many",
    "start": "574079",
    "end": "575839"
  },
  {
    "text": "slots are available for scheduling work",
    "start": "575839",
    "end": "577680"
  },
  {
    "text": "across your",
    "start": "577680",
    "end": "578760"
  },
  {
    "text": "cluster while these these slots are",
    "start": "578760",
    "end": "580959"
  },
  {
    "text": "predefined workloads are actually",
    "start": "580959",
    "end": "582640"
  },
  {
    "text": "diverse in nature and once a component",
    "start": "582640",
    "end": "585240"
  },
  {
    "text": "is scheduled inside of an Executor the",
    "start": "585240",
    "end": "586959"
  },
  {
    "text": "rest of the container cannot be used",
    "start": "586959",
    "end": "588720"
  },
  {
    "text": "these are simply jvms that run code in",
    "start": "588720",
    "end": "590839"
  },
  {
    "text": "as you can see here schedule a bunch of",
    "start": "590839",
    "end": "592320"
  },
  {
    "text": "tasks and the results in a lot of",
    "start": "592320",
    "end": "594160"
  },
  {
    "text": "waste further these tasks are actually",
    "start": "594160",
    "end": "596480"
  },
  {
    "text": "competing for resources on the",
    "start": "596480",
    "end": "597560"
  },
  {
    "text": "underlying host imagine if you had one",
    "start": "597560",
    "end": "599640"
  },
  {
    "text": "task which was really IO heavy or really",
    "start": "599640",
    "end": "602200"
  },
  {
    "text": "heavy on CPU usage it might steal CPU",
    "start": "602200",
    "end": "604760"
  },
  {
    "text": "from other tasks and result in a Noisy",
    "start": "604760",
    "end": "606760"
  },
  {
    "text": "Neighbor this makes it difficult to",
    "start": "606760",
    "end": "608120"
  },
  {
    "text": "debug topologies it may be running",
    "start": "608120",
    "end": "610000"
  },
  {
    "text": "successfully one moment someone deploys",
    "start": "610000",
    "end": "611800"
  },
  {
    "text": "another action and then you have trouble",
    "start": "611800",
    "end": "614160"
  },
  {
    "text": "it's a challenge but further in storm",
    "start": "614160",
    "end": "616880"
  },
  {
    "text": "the cluster is actually shared between a",
    "start": "616880",
    "end": "618240"
  },
  {
    "text": "number of topologies this means that not",
    "start": "618240",
    "end": "620079"
  },
  {
    "text": "only will your own code be running",
    "start": "620079",
    "end": "621920"
  },
  {
    "text": "potentially other teams or potentially",
    "start": "621920",
    "end": "623760"
  },
  {
    "text": "other systems are also running and these",
    "start": "623760",
    "end": "625600"
  },
  {
    "text": "again can be scheduled in the same",
    "start": "625600",
    "end": "626680"
  },
  {
    "text": "physical Host this not only makes it",
    "start": "626680",
    "end": "628760"
  },
  {
    "text": "difficult to actually understand the",
    "start": "628760",
    "end": "629800"
  },
  {
    "text": "performance characteristics of your",
    "start": "629800",
    "end": "631000"
  },
  {
    "text": "application but it becomes difficult to",
    "start": "631000",
    "end": "632519"
  },
  {
    "text": "debug to find the log files you have to",
    "start": "632519",
    "end": "634720"
  },
  {
    "text": "go across a number of different machines",
    "start": "634720",
    "end": "636000"
  },
  {
    "text": "and they may be",
    "start": "636000",
    "end": "638440"
  },
  {
    "text": "interwoven with storm we're able to work",
    "start": "638440",
    "end": "640399"
  },
  {
    "text": "around these in a number of different",
    "start": "640399",
    "end": "641760"
  },
  {
    "text": "ways with response to resource",
    "start": "641760",
    "end": "644000"
  },
  {
    "text": "utilization we actually are able to",
    "start": "644000",
    "end": "645560"
  },
  {
    "text": "develop a bunch of different clusters",
    "start": "645560",
    "end": "647160"
  },
  {
    "text": "and kind of mess around with the",
    "start": "647160",
    "end": "648880"
  },
  {
    "text": "different levels of ram CPU and number",
    "start": "648880",
    "end": "650920"
  },
  {
    "text": "of workers scheduled to find some kind",
    "start": "650920",
    "end": "652639"
  },
  {
    "text": "of a sweet spot for us we also ran a",
    "start": "652639",
    "end": "654720"
  },
  {
    "text": "couple different clusters you can",
    "start": "654720",
    "end": "655920"
  },
  {
    "text": "imagine we have one cluster which was",
    "start": "655920",
    "end": "657480"
  },
  {
    "text": "only for really IO heavy tasks they were",
    "start": "657480",
    "end": "659680"
  },
  {
    "text": "really underloaded and one which was",
    "start": "659680",
    "end": "661079"
  },
  {
    "text": "better for CPU but there's some overhead",
    "start": "661079",
    "end": "663079"
  },
  {
    "text": "here there's shared components that they",
    "start": "663079",
    "end": "664519"
  },
  {
    "text": "actually require there's also just",
    "start": "664519",
    "end": "665920"
  },
  {
    "text": "operational overhead of knowing which",
    "start": "665920",
    "end": "667200"
  },
  {
    "text": "cluster to submit to it's a",
    "start": "667200",
    "end": "669720"
  },
  {
    "text": "challenge Second Challenge we had as we",
    "start": "669720",
    "end": "672200"
  },
  {
    "text": "discussed was back pressure in storm",
    "start": "672200",
    "end": "674240"
  },
  {
    "text": "while storm has a way to implement back",
    "start": "674240",
    "end": "675560"
  },
  {
    "text": "pressure using sending acknowledgements",
    "start": "675560",
    "end": "677160"
  },
  {
    "text": "and tracking aing there's a huge",
    "start": "677160",
    "end": "678920"
  },
  {
    "text": "overhead to",
    "start": "678920",
    "end": "680480"
  },
  {
    "text": "that as we scaled up we had trouble",
    "start": "680480",
    "end": "682839"
  },
  {
    "text": "actually maintaining acknowledgements in",
    "start": "682839",
    "end": "684320"
  },
  {
    "text": "our system and so we had to disable them",
    "start": "684320",
    "end": "686360"
  },
  {
    "text": "that meant with storm we had no ability",
    "start": "686360",
    "end": "687680"
  },
  {
    "text": "to have back pressure while okay for us",
    "start": "687680",
    "end": "689800"
  },
  {
    "text": "to lose some tupal because we have a",
    "start": "689800",
    "end": "691079"
  },
  {
    "text": "Lambda architecture which means that any",
    "start": "691079",
    "end": "692920"
  },
  {
    "text": "data we miss during the speed layer we",
    "start": "692920",
    "end": "694519"
  },
  {
    "text": "can then recover in the batch layer",
    "start": "694519",
    "end": "695920"
  },
  {
    "text": "living out back pressure was a real",
    "start": "695920",
    "end": "698560"
  },
  {
    "start": "698000",
    "end": "1001000"
  },
  {
    "text": "challenge Twitter has a similar has has",
    "start": "698560",
    "end": "701279"
  },
  {
    "text": "used uh Heron similarly for many years",
    "start": "701279",
    "end": "703639"
  },
  {
    "text": "and has many of the same challenges that",
    "start": "703639",
    "end": "705000"
  },
  {
    "text": "we had and has developed the Next",
    "start": "705000",
    "end": "706720"
  },
  {
    "text": "Generation stream processing tool called",
    "start": "706720",
    "end": "708480"
  },
  {
    "text": "Heron to replace it Twitter's been",
    "start": "708480",
    "end": "710720"
  },
  {
    "text": "running herin in production for about 2",
    "start": "710720",
    "end": "712200"
  },
  {
    "text": "years and in the past six months answers",
    "start": "712200",
    "end": "714240"
  },
  {
    "text": "and crash lytics have migrated all of",
    "start": "714240",
    "end": "715720"
  },
  {
    "text": "our topologies over to to Heron with",
    "start": "715720",
    "end": "717839"
  },
  {
    "text": "great success",
    "start": "717839",
    "end": "720360"
  },
  {
    "text": "Heron is API compatible with storm this",
    "start": "720360",
    "end": "722600"
  },
  {
    "text": "is huge it's a successor to storm and",
    "start": "722600",
    "end": "724800"
  },
  {
    "text": "it's 100% API compatible this enabled us",
    "start": "724800",
    "end": "727120"
  },
  {
    "text": "to migrate more than 70 topologies in",
    "start": "727120",
    "end": "728760"
  },
  {
    "text": "the past six months migrations for",
    "start": "728760",
    "end": "730440"
  },
  {
    "text": "anyone else who hasn't done them is",
    "start": "730440",
    "end": "731560"
  },
  {
    "text": "usually a nightmare this one uh went",
    "start": "731560",
    "end": "733800"
  },
  {
    "text": "pretty well so is it a question",
    "start": "733800",
    "end": "736040"
  },
  {
    "text": "or remembery is a your inst exactly",
    "start": "736040",
    "end": "742000"
  },
  {
    "text": "sorry um well there are number of",
    "start": "742000",
    "end": "744519"
  },
  {
    "text": "different changes in how storm actually",
    "start": "744519",
    "end": "746320"
  },
  {
    "text": "Heron actually works on the hood it's",
    "start": "746320",
    "end": "747480"
  },
  {
    "text": "API compatible but these Chang are",
    "start": "747480",
    "end": "749440"
  },
  {
    "text": "actually pretty",
    "start": "749440",
    "end": "750600"
  },
  {
    "text": "substantial while storm solves the",
    "start": "750600",
    "end": "752560"
  },
  {
    "text": "problem of cluster management using",
    "start": "752560",
    "end": "753880"
  },
  {
    "text": "Nimbus and a series of workers Heron",
    "start": "753880",
    "end": "755959"
  },
  {
    "text": "actually outsources this to popular",
    "start": "755959",
    "end": "757279"
  },
  {
    "text": "systems that are already deployed in",
    "start": "757279",
    "end": "759760"
  },
  {
    "text": "clusters to do this Heron uses msos and",
    "start": "759760",
    "end": "762800"
  },
  {
    "text": "Aurora msos if for anyone who doesn't",
    "start": "762800",
    "end": "764760"
  },
  {
    "text": "know Mayo um is a cluster management",
    "start": "764760",
    "end": "767000"
  },
  {
    "text": "system that specializes in isolation and",
    "start": "767000",
    "end": "769279"
  },
  {
    "text": "efficient resource utilization and",
    "start": "769279",
    "end": "771160"
  },
  {
    "text": "Aurora is a longterm longtime running",
    "start": "771160",
    "end": "773519"
  },
  {
    "text": "service scheduler it kind of takes the",
    "start": "773519",
    "end": "775079"
  },
  {
    "text": "role of supervisor and maintains",
    "start": "775079",
    "end": "776959"
  },
  {
    "text": "containers ensures they're running and",
    "start": "776959",
    "end": "778360"
  },
  {
    "text": "the processes Within",
    "start": "778360",
    "end": "780800"
  },
  {
    "text": "them now Heron since it's based upon",
    "start": "780800",
    "end": "784279"
  },
  {
    "text": "Aurora and mesos is able to take",
    "start": "784279",
    "end": "786240"
  },
  {
    "text": "advantage of this this means that inside",
    "start": "786240",
    "end": "787920"
  },
  {
    "text": "of your topology you're able to",
    "start": "787920",
    "end": "789240"
  },
  {
    "text": "configure at a very fine grain detail",
    "start": "789240",
    "end": "791199"
  },
  {
    "text": "how much CPU and RAM different container",
    "start": "791199",
    "end": "793240"
  },
  {
    "text": "different tasks actually have access to",
    "start": "793240",
    "end": "795320"
  },
  {
    "text": "going back to our example we can imagine",
    "start": "795320",
    "end": "797000"
  },
  {
    "text": "we can set the number of containers",
    "start": "797000",
    "end": "798560"
  },
  {
    "text": "required for our topology to say two we",
    "start": "798560",
    "end": "800519"
  },
  {
    "text": "can go ahead and configure the amount of",
    "start": "800519",
    "end": "802040"
  },
  {
    "text": "ram per container so we could imagine",
    "start": "802040",
    "end": "804480"
  },
  {
    "text": "that the bolt needed less information",
    "start": "804480",
    "end": "806440"
  },
  {
    "text": "like an extraction bolt might be a very",
    "start": "806440",
    "end": "807959"
  },
  {
    "text": "fast task but a b B that's writing to S3",
    "start": "807959",
    "end": "810000"
  },
  {
    "text": "might want to do some sort of buffering",
    "start": "810000",
    "end": "811360"
  },
  {
    "text": "and so we can give that twice as much",
    "start": "811360",
    "end": "814519"
  },
  {
    "text": "memory in Heron a topology has a",
    "start": "814959",
    "end": "817320"
  },
  {
    "text": "slightly different architecture than",
    "start": "817320",
    "end": "818519"
  },
  {
    "text": "storm and Heron there's a topology",
    "start": "818519",
    "end": "820360"
  },
  {
    "text": "Master which governs the idea of like",
    "start": "820360",
    "end": "822079"
  },
  {
    "text": "the actual physical assignment of tasks",
    "start": "822079",
    "end": "824440"
  },
  {
    "text": "and a number of containers these",
    "start": "824440",
    "end": "825880"
  },
  {
    "text": "containers each contain a stream manager",
    "start": "825880",
    "end": "827480"
  },
  {
    "text": "and a metrics manager as well as only",
    "start": "827480",
    "end": "829360"
  },
  {
    "text": "your",
    "start": "829360",
    "end": "830880"
  },
  {
    "text": "code as we mentioned these containers",
    "start": "830880",
    "end": "833120"
  },
  {
    "text": "are sized to exactly what fits inside of",
    "start": "833120",
    "end": "835199"
  },
  {
    "text": "them this means that in this case each",
    "start": "835199",
    "end": "837120"
  },
  {
    "text": "one only had exactly one gig of RAM",
    "start": "837120",
    "end": "839240"
  },
  {
    "text": "allocated to it or roughly there's a",
    "start": "839240",
    "end": "840639"
  },
  {
    "text": "little bit of extra room for other",
    "start": "840639",
    "end": "841920"
  },
  {
    "text": "things um and each one is isolated to",
    "start": "841920",
    "end": "844000"
  },
  {
    "text": "exactly two CPUs and it's guaranteed to",
    "start": "844000",
    "end": "846279"
  },
  {
    "text": "actually get",
    "start": "846279",
    "end": "847920"
  },
  {
    "text": "that now this container looks sort of",
    "start": "847920",
    "end": "850120"
  },
  {
    "text": "similar to the one we showed before with",
    "start": "850120",
    "end": "851839"
  },
  {
    "text": "workers in storm but it's actually quite",
    "start": "851839",
    "end": "853720"
  },
  {
    "text": "different there's a stream manager a",
    "start": "853720",
    "end": "855480"
  },
  {
    "text": "metrics manager and just your instances",
    "start": "855480",
    "end": "858199"
  },
  {
    "text": "now the metrics manager manages metrics",
    "start": "858199",
    "end": "859800"
  },
  {
    "text": "and a few other things that I haven't",
    "start": "859800",
    "end": "861079"
  },
  {
    "text": "talked about which are very important",
    "start": "861079",
    "end": "862600"
  },
  {
    "text": "but the stream manager is actually new",
    "start": "862600",
    "end": "863880"
  },
  {
    "text": "and pretty",
    "start": "863880",
    "end": "864880"
  },
  {
    "text": "interesting the stream manager is",
    "start": "864880",
    "end": "866639"
  },
  {
    "text": "involved in message passing and this is",
    "start": "866639",
    "end": "868560"
  },
  {
    "text": "one of the way this is one of the places",
    "start": "868560",
    "end": "870160"
  },
  {
    "text": "that Heron really deviates from storm in",
    "start": "870160",
    "end": "873680"
  },
  {
    "text": "Heron instead of spouts communicating",
    "start": "873680",
    "end": "876120"
  },
  {
    "text": "directly with bolts they communicate",
    "start": "876120",
    "end": "877600"
  },
  {
    "text": "through stream managers a spout will",
    "start": "877600",
    "end": "879839"
  },
  {
    "text": "produce a tupal and send it to a stream",
    "start": "879839",
    "end": "881399"
  },
  {
    "text": "manager the stream manager then handles",
    "start": "881399",
    "end": "883000"
  },
  {
    "text": "routing it to other stream managers",
    "start": "883000",
    "end": "884759"
  },
  {
    "text": "where it'll then eventually communicate",
    "start": "884759",
    "end": "886160"
  },
  {
    "text": "it to the bolt it effectively kind of",
    "start": "886160",
    "end": "888120"
  },
  {
    "text": "proxies this communication now what's",
    "start": "888120",
    "end": "890240"
  },
  {
    "text": "substantial here is that stream managers",
    "start": "890240",
    "end": "891959"
  },
  {
    "text": "are all interconnected they need the",
    "start": "891959",
    "end": "893399"
  },
  {
    "text": "ability to communicate with everyone",
    "start": "893399",
    "end": "894920"
  },
  {
    "text": "else and this bidirectional",
    "start": "894920",
    "end": "896399"
  },
  {
    "text": "communication proves extremely important",
    "start": "896399",
    "end": "899839"
  },
  {
    "text": "this bidirectional communication allows",
    "start": "899839",
    "end": "901839"
  },
  {
    "text": "allows Heron to implement back pressure",
    "start": "901839",
    "end": "903480"
  },
  {
    "text": "seamlessly without acing if we go",
    "start": "903480",
    "end": "905440"
  },
  {
    "text": "through kind of the normal flow we can",
    "start": "905440",
    "end": "906720"
  },
  {
    "text": "imagine that some bolt is running and",
    "start": "906720",
    "end": "909720"
  },
  {
    "text": "then for some reason it has to GC or it",
    "start": "909720",
    "end": "911519"
  },
  {
    "text": "can't keep up or request or slow for",
    "start": "911519",
    "end": "913079"
  },
  {
    "text": "some reason the stream manager who's",
    "start": "913079",
    "end": "915360"
  },
  {
    "text": "providing it information can can realize",
    "start": "915360",
    "end": "917680"
  },
  {
    "text": "this this T that this task has become",
    "start": "917680",
    "end": "919600"
  },
  {
    "text": "slow and start sending back pressure",
    "start": "919600",
    "end": "921519"
  },
  {
    "text": "signals to other stream managers all",
    "start": "921519",
    "end": "923480"
  },
  {
    "text": "these other stream managers can then",
    "start": "923480",
    "end": "925120"
  },
  {
    "text": "clamp down on the spouts that they're",
    "start": "925120",
    "end": "927040"
  },
  {
    "text": "attached to since the spouts are the of",
    "start": "927040",
    "end": "929279"
  },
  {
    "text": "information that the streams of tup into",
    "start": "929279",
    "end": "931120"
  },
  {
    "text": "the system when you clamp down in a",
    "start": "931120",
    "end": "932800"
  },
  {
    "text": "spout it'll stop sending information",
    "start": "932800",
    "end": "934759"
  },
  {
    "text": "this means that no new information is",
    "start": "934759",
    "end": "936040"
  },
  {
    "text": "able to enter the system and slowly we",
    "start": "936040",
    "end": "938040"
  },
  {
    "text": "can let the pressure dissipate",
    "start": "938040",
    "end": "939759"
  },
  {
    "text": "eventually when waited long enough the",
    "start": "939759",
    "end": "941440"
  },
  {
    "text": "bolt will recover once the bolt is",
    "start": "941440",
    "end": "943639"
  },
  {
    "text": "recovered the stream manager again send",
    "start": "943639",
    "end": "945319"
  },
  {
    "text": "that and sends a stop back pressure",
    "start": "945319",
    "end": "947279"
  },
  {
    "text": "signal to all stream managers the stream",
    "start": "947279",
    "end": "949160"
  },
  {
    "text": "managers then allow new new data into",
    "start": "949160",
    "end": "951000"
  },
  {
    "text": "the system in this way Heron can",
    "start": "951000",
    "end": "953720"
  },
  {
    "text": "regulate and actively regulate how fast",
    "start": "953720",
    "end": "956000"
  },
  {
    "text": "data moves in the system safely so to",
    "start": "956000",
    "end": "958240"
  },
  {
    "text": "give a quick summary of Heron for any of",
    "start": "958240",
    "end": "960079"
  },
  {
    "text": "you who hear about it later again uh",
    "start": "960079",
    "end": "961839"
  },
  {
    "text": "Heron's 100% API compatible with storm",
    "start": "961839",
    "end": "964079"
  },
  {
    "text": "it gives you flexible resource",
    "start": "964079",
    "end": "965319"
  },
  {
    "text": "distribution and isolation it provides",
    "start": "965319",
    "end": "967399"
  },
  {
    "text": "simple predictable back pressure and",
    "start": "967399",
    "end": "969440"
  },
  {
    "text": "much much more for any of you who've",
    "start": "969440",
    "end": "971160"
  },
  {
    "text": "used storm before uh the visualization",
    "start": "971160",
    "end": "973079"
  },
  {
    "text": "tools and management are not so good um",
    "start": "973079",
    "end": "975519"
  },
  {
    "text": "with Heron we've invested a lot in them",
    "start": "975519",
    "end": "977279"
  },
  {
    "text": "and you get beautiful graphs of your",
    "start": "977279",
    "end": "978600"
  },
  {
    "text": "topology great inspectability and great",
    "start": "978600",
    "end": "980319"
  },
  {
    "text": "debug ability this is kind of an",
    "start": "980319",
    "end": "981880"
  },
  {
    "text": "overview of like the Management console",
    "start": "981880",
    "end": "983800"
  },
  {
    "text": "you get when you run the herin viz tool",
    "start": "983800",
    "end": "986000"
  },
  {
    "text": "you can see the The Logical layout of a",
    "start": "986000",
    "end": "987759"
  },
  {
    "text": "topology with three different stages",
    "start": "987759",
    "end": "989480"
  },
  {
    "text": "here and then you can also see the",
    "start": "989480",
    "end": "991120"
  },
  {
    "text": "mapping of the actual tasks to",
    "start": "991120",
    "end": "992720"
  },
  {
    "text": "Containers you can inspect them",
    "start": "992720",
    "end": "994240"
  },
  {
    "text": "individually and see how each container",
    "start": "994240",
    "end": "995880"
  },
  {
    "text": "is performing as well as at a high level",
    "start": "995880",
    "end": "998040"
  },
  {
    "text": "get an overview of what's going on",
    "start": "998040",
    "end": "999199"
  },
  {
    "text": "inside inside your topology and",
    "start": "999199",
    "end": "1001079"
  },
  {
    "start": "1001000",
    "end": "1479000"
  },
  {
    "text": "cluster thank you all for coming",
    "start": "1001079",
    "end": "1003000"
  },
  {
    "text": "listening and thanks for inviting me uh",
    "start": "1003000",
    "end": "1004800"
  },
  {
    "text": "I don't know what's next but I'm happy",
    "start": "1004800",
    "end": "1007319"
  },
  {
    "text": "to answer any questions now or later or",
    "start": "1007319",
    "end": "1009519"
  },
  {
    "text": "during the silver feather talk time I",
    "start": "1009519",
    "end": "1012079"
  },
  {
    "text": "don't know what that remember the name",
    "start": "1012079",
    "end": "1013519"
  },
  {
    "text": "of that so is one of the soltions for",
    "start": "1013519",
    "end": "1016560"
  },
  {
    "text": "stream processing",
    "start": "1016560",
    "end": "1019920"
  },
  {
    "text": "other",
    "start": "1020000",
    "end": "1022920"
  },
  {
    "text": "guessing how do they",
    "start": "1022920",
    "end": "1025280"
  },
  {
    "text": "compare that's a really good question um",
    "start": "1025280",
    "end": "1027600"
  },
  {
    "text": "so they compared a bunch of different",
    "start": "1027600",
    "end": "1028880"
  },
  {
    "text": "ways and each kind of has its different",
    "start": "1028880",
    "end": "1030120"
  },
  {
    "text": "specialty um part of the reason for",
    "start": "1030120",
    "end": "1032438"
  },
  {
    "text": "Twitter working on Heron was we've",
    "start": "1032439",
    "end": "1034160"
  },
  {
    "text": "invested so much in storm um we also",
    "start": "1034160",
    "end": "1036600"
  },
  {
    "text": "thought that the API it actually",
    "start": "1036600",
    "end": "1037760"
  },
  {
    "text": "provides is good um so the underlying",
    "start": "1037760",
    "end": "1040240"
  },
  {
    "text": "API was good but the implementation um",
    "start": "1040240",
    "end": "1043160"
  },
  {
    "text": "was there were some rooms for",
    "start": "1043160",
    "end": "1044120"
  },
  {
    "text": "optimization and improvements um so so",
    "start": "1044120",
    "end": "1046438"
  },
  {
    "text": "Twitter opted to improve that area um",
    "start": "1046439",
    "end": "1048558"
  },
  {
    "text": "the other pieces it really specializes",
    "start": "1048559",
    "end": "1050120"
  },
  {
    "text": "in real ESS um some the other streaming",
    "start": "1050120",
    "end": "1052400"
  },
  {
    "text": "engines use kind of batch processing or",
    "start": "1052400",
    "end": "1054360"
  },
  {
    "text": "micro batching um there's just kind of",
    "start": "1054360",
    "end": "1056799"
  },
  {
    "text": "Different",
    "start": "1056799",
    "end": "1059039"
  },
  {
    "text": "Strokes I",
    "start": "1062559",
    "end": "1065679"
  },
  {
    "text": "am language you're building yeah so it's",
    "start": "1065880",
    "end": "1069440"
  },
  {
    "text": "the storm and Heron are both like jvm",
    "start": "1069440",
    "end": "1071799"
  },
  {
    "text": "based so there's interfaces in Java but",
    "start": "1071799",
    "end": "1074080"
  },
  {
    "text": "also in um Scala as well as closure um",
    "start": "1074080",
    "end": "1077919"
  },
  {
    "text": "and her similar to storm uh has like",
    "start": "1077919",
    "end": "1080640"
  },
  {
    "text": "kind of an abstract interface so that",
    "start": "1080640",
    "end": "1082440"
  },
  {
    "text": "any language could actually implement it",
    "start": "1082440",
    "end": "1083640"
  },
  {
    "text": "and connect with",
    "start": "1083640",
    "end": "1086200"
  },
  {
    "text": "it can you repeat the question when ah",
    "start": "1087720",
    "end": "1090799"
  },
  {
    "text": "yes",
    "start": "1090799",
    "end": "1092200"
  },
  {
    "text": "sorry is it Z it is not does not use",
    "start": "1092200",
    "end": "1096200"
  },
  {
    "text": "your mq at all",
    "start": "1096200",
    "end": "1098400"
  },
  {
    "text": "um which actually if you use use storm",
    "start": "1098400",
    "end": "1101320"
  },
  {
    "text": "it's actually one of the challenges with",
    "start": "1101320",
    "end": "1102520"
  },
  {
    "text": "it there's these large cues that are not",
    "start": "1102520",
    "end": "1104640"
  },
  {
    "text": "possible to inspect easily so uh Heron",
    "start": "1104640",
    "end": "1107240"
  },
  {
    "text": "completely does away with those and as",
    "start": "1107240",
    "end": "1108919"
  },
  {
    "text": "part of that we get huge performance",
    "start": "1108919",
    "end": "1110039"
  },
  {
    "text": "gains predictability um I don't have any",
    "start": "1110039",
    "end": "1112360"
  },
  {
    "text": "slides about the performance in",
    "start": "1112360",
    "end": "1113360"
  },
  {
    "text": "particular there's a blog post by",
    "start": "1113360",
    "end": "1114880"
  },
  {
    "text": "Twitter actually I think about six",
    "start": "1114880",
    "end": "1116159"
  },
  {
    "text": "months ago by caric it talks about the",
    "start": "1116159",
    "end": "1118200"
  },
  {
    "text": "performance gains which were substantial",
    "start": "1118200",
    "end": "1122639"
  },
  {
    "text": "um do you run on ec2 we do yeah so all",
    "start": "1122720",
    "end": "1126960"
  },
  {
    "text": "of our stuff is hosted on AWS so we run",
    "start": "1126960",
    "end": "1129039"
  },
  {
    "text": "MOS on ec2 and we run all of our work",
    "start": "1129039",
    "end": "1132080"
  },
  {
    "text": "against that",
    "start": "1132080",
    "end": "1135360"
  },
  {
    "text": "specific it's all done over Thrift um so",
    "start": "1139280",
    "end": "1142440"
  },
  {
    "text": "they all use Thrift structures",
    "start": "1142440",
    "end": "1143440"
  },
  {
    "text": "internally and communicate over",
    "start": "1143440",
    "end": "1146720"
  },
  {
    "text": "Thrift is heron open source Heron is not",
    "start": "1147880",
    "end": "1150960"
  },
  {
    "text": "currently open source um there there are",
    "start": "1150960",
    "end": "1154200"
  },
  {
    "text": "definitely plans to kind of move in that",
    "start": "1154200",
    "end": "1155559"
  },
  {
    "text": "direction but no kind of firm kind of",
    "start": "1155559",
    "end": "1157520"
  },
  {
    "text": "deadline um the team is definitely very",
    "start": "1157520",
    "end": "1159720"
  },
  {
    "text": "interested in",
    "start": "1159720",
    "end": "1161320"
  },
  {
    "text": "it what are your",
    "start": "1161320",
    "end": "1164360"
  },
  {
    "text": "super in like the stream manager so the",
    "start": "1164360",
    "end": "1166640"
  },
  {
    "text": "stream managers in herin actually only",
    "start": "1166640",
    "end": "1168320"
  },
  {
    "text": "have very small cues they're actually",
    "start": "1168320",
    "end": "1170600"
  },
  {
    "text": "like about 60 um elements deep and",
    "start": "1170600",
    "end": "1173120"
  },
  {
    "text": "they're kind of just simple blocking",
    "start": "1173120",
    "end": "1174120"
  },
  {
    "text": "cues that are in memory um part of the",
    "start": "1174120",
    "end": "1176400"
  },
  {
    "text": "advantage is actually keeping it inside",
    "start": "1176400",
    "end": "1177559"
  },
  {
    "text": "of the same process one of the",
    "start": "1177559",
    "end": "1178760"
  },
  {
    "text": "challenges that uh is faced kind of in",
    "start": "1178760",
    "end": "1181240"
  },
  {
    "text": "storm is there's actually a lot of stuff",
    "start": "1181240",
    "end": "1182480"
  },
  {
    "text": "going on there's closure running there's",
    "start": "1182480",
    "end": "1184159"
  },
  {
    "text": "Zer mq running there's a bunch of",
    "start": "1184159",
    "end": "1185840"
  },
  {
    "text": "different things that you're interacting",
    "start": "1185840",
    "end": "1187000"
  },
  {
    "text": "with um that has implications both",
    "start": "1187000",
    "end": "1189080"
  },
  {
    "text": "operationally but also in terms of",
    "start": "1189080",
    "end": "1190440"
  },
  {
    "text": "performance so under the cover Teran is",
    "start": "1190440",
    "end": "1192720"
  },
  {
    "text": "actually mostly written in C C++ um and",
    "start": "1192720",
    "end": "1195480"
  },
  {
    "text": "kind of keeps that all stuff inhouse and",
    "start": "1195480",
    "end": "1196880"
  },
  {
    "text": "is able to optimize pretty aggressively",
    "start": "1196880",
    "end": "1200039"
  },
  {
    "text": "um so the Press signals go to each of",
    "start": "1200039",
    "end": "1204080"
  },
  {
    "text": "the",
    "start": "1204080",
    "end": "1205039"
  },
  {
    "text": "individual what of",
    "start": "1205039",
    "end": "1207799"
  },
  {
    "text": "messages so uh Heron also has like",
    "start": "1207799",
    "end": "1210640"
  },
  {
    "text": "similar message processing guarantees so",
    "start": "1210640",
    "end": "1213000"
  },
  {
    "text": "it can actually Implement acing as well",
    "start": "1213000",
    "end": "1214679"
  },
  {
    "text": "so back pressure mechanism can let it",
    "start": "1214679",
    "end": "1216760"
  },
  {
    "text": "actually translate like velocity but not",
    "start": "1216760",
    "end": "1218600"
  },
  {
    "text": "for tracking individual messages um",
    "start": "1218600",
    "end": "1221000"
  },
  {
    "text": "that's a really good",
    "start": "1221000",
    "end": "1223440"
  },
  {
    "text": "point I forgot to repeat sorry go ahead",
    "start": "1223440",
    "end": "1228759"
  },
  {
    "text": "Ah that's a good question so when there",
    "start": "1234559",
    "end": "1237000"
  },
  {
    "text": "there's cues on either side of a stream",
    "start": "1237000",
    "end": "1238360"
  },
  {
    "text": "manager there's an inq for it receiving",
    "start": "1238360",
    "end": "1240000"
  },
  {
    "text": "data as well as an outq for it providing",
    "start": "1240000",
    "end": "1241919"
  },
  {
    "text": "it to bolts um so what happens if a",
    "start": "1241919",
    "end": "1244159"
  },
  {
    "text": "stream manager can actually block when",
    "start": "1244159",
    "end": "1245559"
  },
  {
    "text": "sending data to another stream manager",
    "start": "1245559",
    "end": "1247240"
  },
  {
    "text": "it can go ahead and propagate that back",
    "start": "1247240",
    "end": "1248559"
  },
  {
    "text": "to the bolt that's receiving it and",
    "start": "1248559",
    "end": "1250000"
  },
  {
    "text": "still send that stop back pressure",
    "start": "1250000",
    "end": "1252280"
  },
  {
    "text": "signal if it slows down either on the",
    "start": "1252280",
    "end": "1254320"
  },
  {
    "text": "sending like on the sending side of data",
    "start": "1254320",
    "end": "1256200"
  },
  {
    "text": "new data coming into it or else on the",
    "start": "1256200",
    "end": "1257679"
  },
  {
    "text": "giving data to the bolt next to it it",
    "start": "1257679",
    "end": "1259320"
  },
  {
    "text": "can still send the same back pressure",
    "start": "1259320",
    "end": "1261120"
  },
  {
    "text": "signal does that make",
    "start": "1261120",
    "end": "1264600"
  },
  {
    "text": "sense what do you guys use for deploying",
    "start": "1265240",
    "end": "1267640"
  },
  {
    "text": "and managing topologies when you want to",
    "start": "1267640",
    "end": "1269400"
  },
  {
    "text": "introduce something into your",
    "start": "1269400",
    "end": "1270279"
  },
  {
    "text": "environment so uh the nice thing about",
    "start": "1270279",
    "end": "1272360"
  },
  {
    "text": "this is we use mesos so the way you",
    "start": "1272360",
    "end": "1274880"
  },
  {
    "text": "submit a heron topology is you uh you",
    "start": "1274880",
    "end": "1276919"
  },
  {
    "text": "run a command line and effectively",
    "start": "1276919",
    "end": "1278400"
  },
  {
    "text": "creates a bunch of tasks inside of msos",
    "start": "1278400",
    "end": "1280360"
  },
  {
    "text": "that then get scheduled so we create",
    "start": "1280360",
    "end": "1282200"
  },
  {
    "text": "jars and simply deploy them we uh we use",
    "start": "1282200",
    "end": "1284440"
  },
  {
    "text": "our own kind of like chat op system",
    "start": "1284440",
    "end": "1286279"
  },
  {
    "text": "that's based on Chef and hosted Chef",
    "start": "1286279",
    "end": "1287720"
  },
  {
    "text": "internally",
    "start": "1287720",
    "end": "1290520"
  },
  {
    "text": "um can this be run in conjunction with",
    "start": "1291919",
    "end": "1295159"
  },
  {
    "text": "other things like",
    "start": "1295159",
    "end": "1297240"
  },
  {
    "text": "stor it it can it's kind of a",
    "start": "1297240",
    "end": "1299559"
  },
  {
    "text": "replacement for storm so you wouldn't",
    "start": "1299559",
    "end": "1301039"
  },
  {
    "text": "typically run them both but the nice",
    "start": "1301039",
    "end": "1302760"
  },
  {
    "text": "thing is that you simply have to change",
    "start": "1302760",
    "end": "1303840"
  },
  {
    "text": "the dependency on storm inside of your",
    "start": "1303840",
    "end": "1305760"
  },
  {
    "text": "topology and you'll be pretty much able",
    "start": "1305760",
    "end": "1307600"
  },
  {
    "text": "to run it on Heron there's a few changes",
    "start": "1307600",
    "end": "1309440"
  },
  {
    "text": "around serialization that you might come",
    "start": "1309440",
    "end": "1311440"
  },
  {
    "text": "into but uh that's it",
    "start": "1311440",
    "end": "1316240"
  },
  {
    "text": "this also run on",
    "start": "1318760",
    "end": "1321080"
  },
  {
    "text": "mices does it run on what micro uh it",
    "start": "1321080",
    "end": "1324520"
  },
  {
    "text": "does do microb batching internally and",
    "start": "1324520",
    "end": "1326080"
  },
  {
    "text": "is able to manage that um but in storm",
    "start": "1326080",
    "end": "1328600"
  },
  {
    "text": "the microb batching is actually done by",
    "start": "1328600",
    "end": "1329919"
  },
  {
    "text": "the zeromq because implicit inside of",
    "start": "1329919",
    "end": "1331760"
  },
  {
    "text": "zmq is microb batching um Heron can",
    "start": "1331760",
    "end": "1333760"
  },
  {
    "text": "actually do that explicitly in a",
    "start": "1333760",
    "end": "1335240"
  },
  {
    "text": "different sense so it doesn't kind of",
    "start": "1335240",
    "end": "1336880"
  },
  {
    "text": "Outsource",
    "start": "1336880",
    "end": "1339360"
  },
  {
    "text": "that um I actually don't know what the",
    "start": "1339640",
    "end": "1341840"
  },
  {
    "text": "setting is or if it's configurable that",
    "start": "1341840",
    "end": "1343480"
  },
  {
    "text": "was the question yeah",
    "start": "1343480",
    "end": "1348158"
  },
  {
    "text": "okay uh no it does not have a similar",
    "start": "1353440",
    "end": "1356760"
  },
  {
    "text": "restriction that I know of we can talk",
    "start": "1356760",
    "end": "1358799"
  },
  {
    "text": "more we should figure this",
    "start": "1358799",
    "end": "1361679"
  },
  {
    "text": "outter",
    "start": "1366200",
    "end": "1368240"
  },
  {
    "text": "TW yeah so Twitter uses Heron to process",
    "start": "1368240",
    "end": "1371159"
  },
  {
    "text": "all of our realtime systems so every",
    "start": "1371159",
    "end": "1372840"
  },
  {
    "text": "single tweet will flow through a number",
    "start": "1372840",
    "end": "1373840"
  },
  {
    "text": "of different her and apologies so does",
    "start": "1373840",
    "end": "1375640"
  },
  {
    "text": "that include like imery and uh it's a",
    "start": "1375640",
    "end": "1378880"
  },
  {
    "text": "good question um I don't know exactly",
    "start": "1378880",
    "end": "1382120"
  },
  {
    "text": "what those teams use for each portion of",
    "start": "1382120",
    "end": "1383720"
  },
  {
    "text": "it I know some of it definitely",
    "start": "1383720",
    "end": "1385679"
  },
  {
    "text": "does um but there's a variety of",
    "start": "1385679",
    "end": "1387840"
  },
  {
    "text": "different things deployed at Twitter but",
    "start": "1387840",
    "end": "1389520"
  },
  {
    "text": "for everything that we used to use storm",
    "start": "1389520",
    "end": "1390919"
  },
  {
    "text": "for we now use",
    "start": "1390919",
    "end": "1394000"
  },
  {
    "text": "Heron",
    "start": "1396880",
    "end": "1398960"
  },
  {
    "text": "questionology Prov some",
    "start": "1398960",
    "end": "1404000"
  },
  {
    "text": "system CPU what if you don't provide",
    "start": "1404200",
    "end": "1407200"
  },
  {
    "text": "that",
    "start": "1407200",
    "end": "1409000"
  },
  {
    "text": "they're they're pretty sensible defaults",
    "start": "1409000",
    "end": "1410200"
  },
  {
    "text": "I think they're maybe tuned to the",
    "start": "1410200",
    "end": "1411440"
  },
  {
    "text": "current use cases that we've used it for",
    "start": "1411440",
    "end": "1413200"
  },
  {
    "text": "so they might not be um the same for",
    "start": "1413200",
    "end": "1415080"
  },
  {
    "text": "everyone in the world um but right now",
    "start": "1415080",
    "end": "1416960"
  },
  {
    "text": "the defaults are pretty sane you get a",
    "start": "1416960",
    "end": "1418320"
  },
  {
    "text": "CPU per task and a gig of memory per jvm",
    "start": "1418320",
    "end": "1422400"
  },
  {
    "text": "um there's obviously room to change",
    "start": "1422400",
    "end": "1423840"
  },
  {
    "text": "those defaults and make them more",
    "start": "1423840",
    "end": "1426840"
  },
  {
    "text": "configurable awesome thank you all for",
    "start": "1426840",
    "end": "1429240"
  },
  {
    "text": "listening and for your questions I'll be",
    "start": "1429240",
    "end": "1430960"
  },
  {
    "text": "hanging around and would love to talk",
    "start": "1430960",
    "end": "1431960"
  },
  {
    "text": "more oh do you have uh the cost is like",
    "start": "1431960",
    "end": "1436240"
  },
  {
    "text": "like 703 kind of stuff or how did it",
    "start": "1436240",
    "end": "1438840"
  },
  {
    "text": "work uh sorry I don't think I cost of",
    "start": "1438840",
    "end": "1441039"
  },
  {
    "text": "using",
    "start": "1441039",
    "end": "1442760"
  },
  {
    "text": "your uh there's no cost to use like",
    "start": "1442760",
    "end": "1444960"
  },
  {
    "text": "Heron is a replacement for storm uh",
    "start": "1444960",
    "end": "1447159"
  },
  {
    "text": "there were significant cost reductions",
    "start": "1447159",
    "end": "1448559"
  },
  {
    "text": "in actually moving to Heron because it's",
    "start": "1448559",
    "end": "1449880"
  },
  {
    "text": "a lot more efficient and because the",
    "start": "1449880",
    "end": "1451520"
  },
  {
    "text": "resource management actually makes it a",
    "start": "1451520",
    "end": "1452799"
  },
  {
    "text": "lot easier to schedule things I can't",
    "start": "1452799",
    "end": "1454640"
  },
  {
    "text": "share any numbers about the exact cost",
    "start": "1454640",
    "end": "1456600"
  },
  {
    "text": "uh there's a blog post where Twitter",
    "start": "1456600",
    "end": "1457799"
  },
  {
    "text": "talks about it's change in costs and",
    "start": "1457799",
    "end": "1459600"
  },
  {
    "text": "they were fairly",
    "start": "1459600",
    "end": "1462120"
  },
  {
    "text": "substantial initially you mentioned one",
    "start": "1464520",
    "end": "1466840"
  },
  {
    "text": "of The Inspirations",
    "start": "1466840",
    "end": "1470039"
  },
  {
    "text": "to be able",
    "start": "1470039",
    "end": "1472519"
  },
  {
    "text": "toess how do you do",
    "start": "1472840",
    "end": "1476440"
  },
  {
    "text": "that yeah so um I should probably oh",
    "start": "1476720",
    "end": "1480399"
  },
  {
    "text": "sorry the question was uh in the",
    "start": "1480399",
    "end": "1482000"
  },
  {
    "text": "beginning I was talking about L the",
    "start": "1482000",
    "end": "1483240"
  },
  {
    "text": "Lambda architecture and kind of a",
    "start": "1483240",
    "end": "1485039"
  },
  {
    "text": "combination between like real-time",
    "start": "1485039",
    "end": "1486399"
  },
  {
    "text": "processing and batch processing I",
    "start": "1486399",
    "end": "1488159"
  },
  {
    "text": "believe the question was kind of how do",
    "start": "1488159",
    "end": "1489159"
  },
  {
    "text": "you merge them in the end at the end and",
    "start": "1489159",
    "end": "1491520"
  },
  {
    "text": "does Heron help and do we have anything",
    "start": "1491520",
    "end": "1493279"
  },
  {
    "text": "else to do it um so the first piece is",
    "start": "1493279",
    "end": "1495840"
  },
  {
    "text": "that Heron actually doesn't help with",
    "start": "1495840",
    "end": "1497120"
  },
  {
    "text": "doing batch processing at all it focuses",
    "start": "1497120",
    "end": "1499039"
  },
  {
    "text": "purely on the real- time side of things",
    "start": "1499039",
    "end": "1501600"
  },
  {
    "text": "uh but Twitter has a number of Open",
    "start": "1501600",
    "end": "1503080"
  },
  {
    "text": "Source believe open source framework it",
    "start": "1503080",
    "end": "1504559"
  },
  {
    "text": "does yeah um called summing bird which",
    "start": "1504559",
    "end": "1506440"
  },
  {
    "text": "combine which provides a combined API",
    "start": "1506440",
    "end": "1508520"
  },
  {
    "text": "for creating something that's both",
    "start": "1508520",
    "end": "1509679"
  },
  {
    "text": "streaming and batch processing and",
    "start": "1509679",
    "end": "1511799"
  },
  {
    "text": "Twitter uses that a lot internally I",
    "start": "1511799",
    "end": "1513279"
  },
  {
    "text": "haven't actually used it personally so I",
    "start": "1513279",
    "end": "1514600"
  },
  {
    "text": "can't speak to it um but there are a",
    "start": "1514600",
    "end": "1516720"
  },
  {
    "text": "number of different tools to help you",
    "start": "1516720",
    "end": "1517960"
  },
  {
    "text": "manage that complexity and it's a really",
    "start": "1517960",
    "end": "1519480"
  },
  {
    "text": "good area of research which goes back to",
    "start": "1519480",
    "end": "1521440"
  },
  {
    "text": "kind of the combination of other stream",
    "start": "1521440",
    "end": "1523080"
  },
  {
    "text": "processing languages and the differences",
    "start": "1523080",
    "end": "1524760"
  },
  {
    "text": "between them",
    "start": "1524760",
    "end": "1528039"
  }
]