[
  {
    "text": "alright hello everyone and welcome today's webinar titled what's inside my containers hosted jointly by Amazon Web",
    "start": "60",
    "end": "6930"
  },
  {
    "text": "Services and shifting my name is Omar lorry I'm a partner Solutions Architect for AWS I work on our container",
    "start": "6930",
    "end": "12900"
  },
  {
    "text": "ecosystem and work with partners helping customers adopt containers on AWS I'm going to be your host speaker today so",
    "start": "12900",
    "end": "19529"
  },
  {
    "text": "just to start a couple industry ships that we've seen as more and more customers started to adopt AWS and cloud",
    "start": "19529",
    "end": "25320"
  },
  {
    "text": "computing some of the major trends that we see here first one is elasticity so",
    "start": "25320",
    "end": "30500"
  },
  {
    "text": "it basically means that you can provision just the amount of resources that you need for your workloads scale",
    "start": "30500",
    "end": "36780"
  },
  {
    "text": "out and scale back in and only pay for the infrastructure and services that you need when you need them when it's",
    "start": "36780",
    "end": "42059"
  },
  {
    "text": "underutilized you go ahead and just return the capacity and stop paying for it next major trend we see is around",
    "start": "42059",
    "end": "48420"
  },
  {
    "text": "agility so you have the ability to spin up many different resources along the infrastructure side and services really",
    "start": "48420",
    "end": "55739"
  },
  {
    "text": "quickly and rapidly basically with the click of a button maybe you want to test out the new ideas we architect existing",
    "start": "55739",
    "end": "61949"
  },
  {
    "text": "services the point is that you don't have to wait for infrastructure to show up in your data center the services and infrastructure are available to you on",
    "start": "61949",
    "end": "68820"
  },
  {
    "text": "demand at the click of a button and then lastly high-availability have",
    "start": "68820",
    "end": "74240"
  },
  {
    "text": "multiple data centers in multiple regions across the world so you can architect your application to take",
    "start": "74240",
    "end": "79549"
  },
  {
    "text": "advantage of that infrastructure that's available to you and make sure that your applications are always up and running and they're close to where your",
    "start": "79549",
    "end": "85340"
  },
  {
    "text": "customers are so a lot of customers have",
    "start": "85340",
    "end": "91429"
  },
  {
    "text": "started to adopt cloud computing another step that we're starting to see now is to start adopting containers basically",
    "start": "91429",
    "end": "99770"
  },
  {
    "text": "what a container is is taking taking advantage of some core Linux constructs",
    "start": "99770",
    "end": "105079"
  },
  {
    "text": "around to groups and namespaces this allows you to allocate resources to",
    "start": "105079",
    "end": "110200"
  },
  {
    "text": "processes and the namespaces allow you to isolate those processes from one another all of your application code",
    "start": "110200",
    "end": "116569"
  },
  {
    "text": "libraries and dependencies are packaged up into a small package where you can",
    "start": "116569",
    "end": "121759"
  },
  {
    "text": "run both the same application on your desktop as you do in the cloud so adding",
    "start": "121759",
    "end": "127459"
  },
  {
    "text": "to some of the points you see on the slide here regarding some of the benefits containers are immutable which",
    "start": "127459",
    "end": "133040"
  },
  {
    "text": "means you never log into a container and make changes you always make a change of the container image itself and then redeploy this provides you with the",
    "start": "133040",
    "end": "139700"
  },
  {
    "text": "confidence that you know that the application is running the same in all of your different application environments so what does this mean to",
    "start": "139700",
    "end": "151760"
  },
  {
    "text": "you another trend that we're seeing as customers use containers is that they're also adopting micro services I think a",
    "start": "151760",
    "end": "159260"
  },
  {
    "text": "lot of the people on the webinar today probably know what micro services are but just to recap it's basically a way",
    "start": "159260",
    "end": "165500"
  },
  {
    "text": "to break up the application and the teams that develop and support those application into smaller segments so",
    "start": "165500",
    "end": "171560"
  },
  {
    "text": "adopting micro services in containers means that this application has been broken up you can make smaller more",
    "start": "171560",
    "end": "176989"
  },
  {
    "text": "frequent appointments to get features out to your customers and users at a higher velocity in addition that enables",
    "start": "176989",
    "end": "183169"
  },
  {
    "text": "you to automate these process so this gives you the comfort to be able to make more frequent deployments into your",
    "start": "183169",
    "end": "188660"
  },
  {
    "text": "environment",
    "start": "188660",
    "end": "191169"
  },
  {
    "text": "so know some of the benefits that you get around to point your container applications in kws versus the",
    "start": "197340",
    "end": "205590"
  },
  {
    "text": "integration into all of the rest of the AWS services so we have a full spectrum of services things like dynamo DB and",
    "start": "205590",
    "end": "212640"
  },
  {
    "text": "RDS to store your persistent data sqs for queuing Kinesis for streaming",
    "start": "212640",
    "end": "218969"
  },
  {
    "text": "additional tools for management by CloudFormation to deploy cloud watch for",
    "start": "218969",
    "end": "224340"
  },
  {
    "text": "monitoring and logging elasticsearch for analyzing those logs and a ton of different services just around compute",
    "start": "224340",
    "end": "230519"
  },
  {
    "text": "networking analytics mobile to really help customers be more productive and",
    "start": "230519",
    "end": "236370"
  },
  {
    "text": "other things that we continue to add these capabilities at an accelerating pace if you look at back to 2011 we",
    "start": "236370",
    "end": "242849"
  },
  {
    "text": "released over 80 significant services and features in 2012 that was nearly 160",
    "start": "242849",
    "end": "248519"
  },
  {
    "text": "and the number just continues to increase last year in 2016 we launched",
    "start": "248519",
    "end": "253669"
  },
  {
    "text": "1017 new services and futures and so customers have access to this whether they want to use them or not it's just",
    "start": "253669",
    "end": "259949"
  },
  {
    "text": "available to them so continuing to to leverage those really helps your teams be a lot more productive also as I",
    "start": "259949",
    "end": "266460"
  },
  {
    "text": "alluded to earlier around the high availability we have a global footprint so you can deploy your container",
    "start": "266460",
    "end": "272610"
  },
  {
    "text": "applications in any of our 43 availability zones that are spread out across 16 geographic regions across the",
    "start": "272610",
    "end": "278520"
  },
  {
    "text": "world we also expect to have three additional AWS regions come online through 2017 and 2018 and we recently",
    "start": "278520",
    "end": "286650"
  },
  {
    "text": "announced France China and Sweden to be coming on through 2018",
    "start": "286650",
    "end": "293330"
  },
  {
    "text": "next point of security so we've achieved a number of internationally recognised certifications and accreditation that",
    "start": "294270",
    "end": "300310"
  },
  {
    "text": "help customers achieve their specific security and regulatory objectives there's tools iCloud trail KMS inspector",
    "start": "300310",
    "end": "307300"
  },
  {
    "text": "that really helped customers lock down their environments and have the same kind of security controls that they're",
    "start": "307300",
    "end": "313120"
  },
  {
    "text": "accustomed to and then lastly is the partner ecosystem so we have a rapidly",
    "start": "313120",
    "end": "318969"
  },
  {
    "text": "growing partner ecosystem that provides customers with offer solutions that extend AWS and system integrators that",
    "start": "318969",
    "end": "325659"
  },
  {
    "text": "can help customers deploy and manage those container applications into AWS",
    "start": "325659",
    "end": "331229"
  },
  {
    "text": "this is kind of the container ecosystem from the partner side so if you kind of look in that middle area we have a",
    "start": "334949",
    "end": "340449"
  },
  {
    "text": "section that highlights orchestration management and scheduling so this is managing basically clusters compute",
    "start": "340449",
    "end": "347229"
  },
  {
    "text": "resources that schedule in place your container workloads onto onto infrastructure resources and then on the",
    "start": "347229",
    "end": "353919"
  },
  {
    "text": "top blue box is our networking security continuous integration and deployment",
    "start": "353919",
    "end": "358979"
  },
  {
    "text": "partners that help customers accelerate their adoption of AWS and containers on",
    "start": "358979",
    "end": "364509"
  },
  {
    "text": "AWS the partner that we're going to look at today kind of fits in that top box",
    "start": "364509",
    "end": "369599"
  },
  {
    "text": "Cystic and I'd like to introduce Knox Anderson who's our technical partner",
    "start": "369599",
    "end": "375250"
  },
  {
    "text": "here to cover the Cystic product awesome",
    "start": "375250",
    "end": "381639"
  },
  {
    "text": "thing the intro hey everyone really excited to be presenting to you guys today we want",
    "start": "381639",
    "end": "386860"
  },
  {
    "text": "this session to be as interactive as possible so if you have any question at any point in time please chat that in",
    "start": "386860",
    "end": "394150"
  },
  {
    "text": "and we'll try to address it as we're going through the presentation so what",
    "start": "394150",
    "end": "401919"
  },
  {
    "text": "we're going to cover today is the worst effect where the attentive container intelligence company and we're going to be able to provide you a unified way to",
    "start": "401919",
    "end": "408280"
  },
  {
    "text": "monitor troubleshoot and secure your containers from a single instrumentation point that's running on your host so",
    "start": "408280",
    "end": "415210"
  },
  {
    "text": "we're going to start off by talking about security monitoring and operations",
    "start": "415210",
    "end": "420220"
  },
  {
    "text": "with containers in your environment the challenge is what you need to know and then from there move on to our architecture talk about the capabilities",
    "start": "420220",
    "end": "427990"
  },
  {
    "text": "that that gives you and then spend a ton of time today in the demo so we want to get through this slide kind of",
    "start": "427990",
    "end": "433630"
  },
  {
    "text": "relatively quickly and then we're going to do some live installs with kubernetes",
    "start": "433630",
    "end": "439270"
  },
  {
    "text": "environments ETS environments all that kind of stuff so a little bit of",
    "start": "439270",
    "end": "446130"
  },
  {
    "text": "background on to the company so we were founded by Laura sejuani he's the",
    "start": "446130",
    "end": "453760"
  },
  {
    "text": "co-creator of a really popular Network packet analyzer tool called Wireshark",
    "start": "453760",
    "end": "458979"
  },
  {
    "text": "that a lot of you guys have probably heard of that company was then bought by riverbed and from there he built 50 and",
    "start": "458979",
    "end": "467500"
  },
  {
    "text": "fistic it's kind of like if you combine x-ray TCP dump h top ellis off and some",
    "start": "467500",
    "end": "475180"
  },
  {
    "text": "container magic on top and it allows us to do really deep troubleshooting inside your containers we launched that in 2013",
    "start": "475180",
    "end": "482530"
  },
  {
    "text": "have millions of downloads and have built security and monitoring products",
    "start": "482530",
    "end": "487960"
  },
  {
    "text": "on top of that core technology you've got 250 plus enterprise customers and partner really closely with all the",
    "start": "487960",
    "end": "495250"
  },
  {
    "text": "different Orchestrator providers as well as AWS and other companies so like any",
    "start": "495250",
    "end": "503470"
  },
  {
    "text": "other infrastructure shift so physical to virtual virtual to cloud and now",
    "start": "503470",
    "end": "508680"
  },
  {
    "text": "containers it's going to create a need for new tooling so first off the things that make containers great they're",
    "start": "508680",
    "end": "515229"
  },
  {
    "text": "isolated portable they are essentially black boxes also make it really hard to get",
    "start": "515229",
    "end": "521289"
  },
  {
    "text": "visibility and to what's actually running inside that container another benefit of containers is they're going",
    "start": "521289",
    "end": "527079"
  },
  {
    "text": "to let you push things through CIT platform quicker and make your development organization much more agile",
    "start": "527079",
    "end": "534389"
  },
  {
    "text": "that speed is something that your tooling really needs to adapt to and do",
    "start": "534389",
    "end": "539470"
  },
  {
    "text": "more auto discovery and recognize the processes containers the cgroups",
    "start": "539470",
    "end": "544600"
  },
  {
    "text": "everything that's running on your machine also with this dish and really",
    "start": "544600",
    "end": "549759"
  },
  {
    "text": "fragments your toolset so you've got your legacy kind of post intrusion",
    "start": "549759",
    "end": "554919"
  },
  {
    "text": "detection systems maybe something for a network firewall then you've got a",
    "start": "554919",
    "end": "560169"
  },
  {
    "text": "logging tool a infrastructure metrics tool all those different things with",
    "start": "560169",
    "end": "565689"
  },
  {
    "text": "multiple points of performance overhead as well as management overhead on your team and then last the thing that really",
    "start": "565689",
    "end": "573910"
  },
  {
    "text": "is happening with containers and allowing you to get to these nice scale out architecture also makes it harder to",
    "start": "573910",
    "end": "579609"
  },
  {
    "text": "make sense of what's running inside your environment so now that database that was running on one host is sprinkled",
    "start": "579609",
    "end": "586029"
  },
  {
    "text": "across multiple hosts and containers in multiple regions how do you make sense of that service as a whole look at its",
    "start": "586029",
    "end": "591579"
  },
  {
    "text": "performance and secure it so the approach that we like to take and we've",
    "start": "591579",
    "end": "597819"
  },
  {
    "text": "seen a lot of other companies take is a container native and cloud native approach so really trying to get full",
    "start": "597819",
    "end": "604209"
  },
  {
    "text": "visibility into what's running inside your containers without going and instrumenting any of those containers",
    "start": "604209",
    "end": "610239"
  },
  {
    "text": "individually by themselves you also need automative automated adaptive and alerting and security",
    "start": "610239",
    "end": "616989"
  },
  {
    "text": "policies so when you spin out that EPS cluster to two new regions you're",
    "start": "616989",
    "end": "622029"
  },
  {
    "text": "alerting will automatically adapt to that and also you'll have security and",
    "start": "622029",
    "end": "627970"
  },
  {
    "text": "policy enforcement that's going to scale as your application skill next with a",
    "start": "627970",
    "end": "633519"
  },
  {
    "text": "non-disruptive unified instrumentation you don't want to go and configure exporters in each containers these",
    "start": "633519",
    "end": "639160"
  },
  {
    "text": "containers could be running for seconds minutes maybe hours and you don't want",
    "start": "639160",
    "end": "644829"
  },
  {
    "text": "to have to go and add extra libraries dependencies all of that to your can say then you were kind of getting away from",
    "start": "644829",
    "end": "651310"
  },
  {
    "text": "that purpose in the first place you're adding libraries you're adding bloat and you were getting away from that single",
    "start": "651310",
    "end": "657339"
  },
  {
    "text": "process isolation and then all of your security and monitoring needs to be be",
    "start": "657339",
    "end": "662800"
  },
  {
    "text": "fully serviced an Orchestrator aware so understanding how ETS is distributing",
    "start": "662800",
    "end": "668470"
  },
  {
    "text": "your containers how kubernetes deployments are working any Orchestrator that you choose to run on Amazon and",
    "start": "668470",
    "end": "675569"
  },
  {
    "text": "understand that and be able to give you topology Maps and different lenses and things like that so next I'm going to",
    "start": "675569",
    "end": "683740"
  },
  {
    "text": "cover our architecture a little bit about how we get data from your system and how we're able to see inside your",
    "start": "683740",
    "end": "690639"
  },
  {
    "text": "containers so our our architecture is made up of two main components the first",
    "start": "690639",
    "end": "696399"
  },
  {
    "text": "would be container vision which is going to allow us to see all effectivity container activity host network from a",
    "start": "696399",
    "end": "704110"
  },
  {
    "text": "single instrumentation point and then service vision where we're going to go and pull the api's from Amazon docker",
    "start": "704110",
    "end": "712720"
  },
  {
    "text": "kubernetes OpenShift to go and enrich all the data that we",
    "start": "712720",
    "end": "717910"
  },
  {
    "text": "collect from your hosts with that metadata from those services that's all",
    "start": "717910",
    "end": "723339"
  },
  {
    "text": "sent to a back-end which you can use there's a staff service I'm the we host or host it on premise",
    "start": "723339",
    "end": "728740"
  },
  {
    "text": "behind your own firewall as well and from that single instrumentation point",
    "start": "728740",
    "end": "734800"
  },
  {
    "text": "and single back in we're going to give you security monitoring and deep troubleshooting and introspection",
    "start": "734800",
    "end": "740560"
  },
  {
    "text": "capabilities as well so the next section here and this is kind of the thing that",
    "start": "740560",
    "end": "747790"
  },
  {
    "text": "we're doing really differently and I expect you guys are going to have a lot of questions here so please chat those",
    "start": "747790",
    "end": "753100"
  },
  {
    "text": "then how do we actually collect data from these hosts so what we're looking at now is a simple VM I've got a host OS",
    "start": "753100",
    "end": "760630"
  },
  {
    "text": "a couple containers that are running and what we're going to do is install our agent as a container or a process that's",
    "start": "760630",
    "end": "767290"
  },
  {
    "text": "running on that host that can allow us to instrument your kernel and from there we're going to be able to see all the",
    "start": "767290",
    "end": "773079"
  },
  {
    "text": "system calls that are happening from your containers and so from there we're",
    "start": "773079",
    "end": "778120"
  },
  {
    "text": "going to put all the system calls in a non-blocking and read this kernel modules fully open tour",
    "start": "778120",
    "end": "783730"
  },
  {
    "text": "and it's part of our artistic open-source product Cystic falco just",
    "start": "783730",
    "end": "788920"
  },
  {
    "text": "big monitors to secure and from there we're going to be able to see all application activity container activity",
    "start": "788920",
    "end": "795970"
  },
  {
    "text": "network system calls all that kind of stuff from that kernel module put it",
    "start": "795970",
    "end": "801340"
  },
  {
    "text": "into a room buffer and then send that out to our agent so you can get your performance metrics captures events all",
    "start": "801340",
    "end": "808510"
  },
  {
    "text": "that kind of stuff before I get to the next slide any questions on kind of how we",
    "start": "808510",
    "end": "813700"
  },
  {
    "text": "instrument your hosts and the data that we're collecting there all right so I",
    "start": "813700",
    "end": "825430"
  },
  {
    "text": "got a question about the overhead of the statistic agent yes we just look at the process and kind of trace traits from",
    "start": "825430",
    "end": "832690"
  },
  {
    "text": "there and so that's going to basically let us let us say really performant we",
    "start": "832690",
    "end": "839710"
  },
  {
    "text": "usually run between one to two percent of the host CPU yeah so two other",
    "start": "839710",
    "end": "847600"
  },
  {
    "text": "questions here our agent runs as a privilege container and we're actually looking at all the system calls and the",
    "start": "847600",
    "end": "853750"
  },
  {
    "text": "C groups and namespaces that are happening on that host and from those containers to discover kind of what's",
    "start": "853750",
    "end": "861070"
  },
  {
    "text": "running inside so we're now looking at the docker socket or anything like that we're listening to the system calls and",
    "start": "861070",
    "end": "867490"
  },
  {
    "text": "from what's running inside the container awesome Justin Jonathan Jeremy Christopher",
    "start": "867490",
    "end": "874630"
  },
  {
    "text": "thanks for sending the questions in look forward to kind of covering the next ones here so on",
    "start": "874630",
    "end": "882950"
  },
  {
    "text": "this instrumentation we've also layered on an open source rule engine from cystic taco and this is going to allow",
    "start": "882950",
    "end": "889040"
  },
  {
    "text": "you to do any policy detection and violation for files or directories ports",
    "start": "889040",
    "end": "896440"
  },
  {
    "text": "executed programs all that kind of stuff so really customize any one of these",
    "start": "896440",
    "end": "902480"
  },
  {
    "text": "open-source policies to do any type of detection of user activity application",
    "start": "902480",
    "end": "907610"
  },
  {
    "text": "activity on your host and then from here we've also layered on some policy",
    "start": "907610",
    "end": "913370"
  },
  {
    "text": "enforcement where you're going to be able to kill a container to kind of",
    "start": "913370",
    "end": "918590"
  },
  {
    "text": "block that issue or go and pause the container to quarantine it or take",
    "start": "918590",
    "end": "924350"
  },
  {
    "text": "assisted capture which is actually going to give you a buffering capture of all the system calls pre and post policy",
    "start": "924350",
    "end": "930980"
  },
  {
    "text": "violation that happened in your environment the next component of service vision a lot of you guys are",
    "start": "930980",
    "end": "937820"
  },
  {
    "text": "probably deploying architectures that look like this so you've got a bunch of shared hosts running on ec2 that have",
    "start": "937820",
    "end": "946460"
  },
  {
    "text": "container service - sprinkled across them and so what you need to do here from a monitoring or security",
    "start": "946460",
    "end": "952340"
  },
  {
    "text": "perspective is enrich that data with the logical services that are running so",
    "start": "952340",
    "end": "957650"
  },
  {
    "text": "then you get a view of your environment that's running here on the right so you can see the different services and",
    "start": "957650",
    "end": "963650"
  },
  {
    "text": "enforce it at one logical level to answer something like what's the response time of my Cassandra service",
    "start": "963650",
    "end": "969890"
  },
  {
    "text": "that's distributed across three different AWS regions and made up of 50",
    "start": "969890",
    "end": "975050"
  },
  {
    "text": "different containers alright so next I'm going to talk about kind of where we sit in the container security stack so we're",
    "start": "975050",
    "end": "982820"
  },
  {
    "text": "really focusing on runtime security and forensic security on the runtime side",
    "start": "982820",
    "end": "988120"
  },
  {
    "text": "we're looking for fundamentally malicious behavior so if the user goes",
    "start": "988120",
    "end": "993500"
  },
  {
    "text": "and runs a shell on a container or if there's a right below XP or if someone has modified an RPM database so really",
    "start": "993500",
    "end": "1000730"
  },
  {
    "text": "looking at kind of the activities that are happening on your containers and on",
    "start": "1000730",
    "end": "1006700"
  },
  {
    "text": "your hosts while you're running them in production and then also since we're",
    "start": "1006700",
    "end": "1011860"
  },
  {
    "text": "monitoring millions of containers which statistic monitor we have a ton of data we've collected about what the profile",
    "start": "1011860",
    "end": "1019870"
  },
  {
    "text": "the Redis container looks like in production or what the profile of an index container looks like and then",
    "start": "1019870",
    "end": "1026079"
  },
  {
    "text": "automating and updating policies to to block those and alerts you on anomalous",
    "start": "1026079",
    "end": "1032409"
  },
  {
    "text": "behavior there um the second would be forensic security and this is by default",
    "start": "1032409",
    "end": "1037538"
  },
  {
    "text": "tracking every single user interaction that's happening on the O's or within",
    "start": "1037539",
    "end": "1043418"
  },
  {
    "text": "the container and giving you full context of when your developers are pushing out new applications and things",
    "start": "1043419",
    "end": "1049690"
  },
  {
    "text": "like that on ETS although the commands that they're entering to a specific task",
    "start": "1049690",
    "end": "1055390"
  },
  {
    "text": "or on a host really however you want to slice and dice it in your environment",
    "start": "1055390",
    "end": "1060630"
  },
  {
    "text": "also on the forensic side doing that just to capture which I kind of like to describe as a TCP dump of your kernel",
    "start": "1060630",
    "end": "1068230"
  },
  {
    "text": "where we're going to be able to see all system calls pre and post policy violation and drunk drop that into a",
    "start": "1068230",
    "end": "1075039"
  },
  {
    "text": "Netscape file so you can do any type of analysis that you want there we're going to integrate with your existing IT",
    "start": "1075039",
    "end": "1081490"
  },
  {
    "text": "security tools so logging your sim and be able to send all that data from six",
    "start": "1081490",
    "end": "1088419"
  },
  {
    "text": "figure out to out to whatever you're running and then also on the platform side will integrate with your different",
    "start": "1088419",
    "end": "1096730"
  },
  {
    "text": "scanning tools our back for secrets management - then we can use that metadata and event from those system in",
    "start": "1096730",
    "end": "1104169"
  },
  {
    "text": "our events feed as well on the monitoring side you got to remember it's that single instrumentation I mean I'm",
    "start": "1104169",
    "end": "1110740"
  },
  {
    "text": "actually going to do a live until later to kind of show you different ways to get visibility on the hosts but going in",
    "start": "1110740",
    "end": "1116860"
  },
  {
    "text": "and I'm dynamically mapping your services so you can kind of abstract away the your host and your into",
    "start": "1116860",
    "end": "1124120"
  },
  {
    "text": "containers and just see how that ETS load balancer is communicating with your",
    "start": "1124120",
    "end": "1129909"
  },
  {
    "text": "different back-end services that could be on RDS or dynamo or any of those",
    "start": "1129909",
    "end": "1135010"
  },
  {
    "text": "other things also going in and automatically detecting that my sequel",
    "start": "1135010",
    "end": "1140110"
  },
  {
    "text": "is running that nginx is running and pulling metrics from those services as well as automatically just detecting",
    "start": "1140110",
    "end": "1145690"
  },
  {
    "text": "things like that's the Prometheus JMX so then you can pull metrics inside your containers without having to",
    "start": "1145690",
    "end": "1153130"
  },
  {
    "text": "go and instrument them and then the last part the specific monitor will provide is will also integrate with all your",
    "start": "1153130",
    "end": "1159730"
  },
  {
    "text": "CloudFormation templates all that kind of stuff so then you can logically",
    "start": "1159730",
    "end": "1165240"
  },
  {
    "text": "surface data to your team's based on the services or the host that they're managing so they kind of don't have to",
    "start": "1165240",
    "end": "1170980"
  },
  {
    "text": "go through a bunch of different dashboards or hit different areas to get the data that they need and that's",
    "start": "1170980",
    "end": "1177310"
  },
  {
    "text": "related to them so hopefully that's kind",
    "start": "1177310",
    "end": "1182500"
  },
  {
    "text": "of a quick overview what we are I want to do now is kind of move over into a",
    "start": "1182500",
    "end": "1187810"
  },
  {
    "text": "live instrumentation and one of the last things I just wanted to cover quickly this is something that we've done with",
    "start": "1187810",
    "end": "1193660"
  },
  {
    "text": "hundreds of different companies across a bunch of different verticals on-premise or with SAS and we really want to",
    "start": "1193660",
    "end": "1200290"
  },
  {
    "text": "partner with you guys as you go forward in your container journey alright so now",
    "start": "1200290",
    "end": "1209170"
  },
  {
    "text": "to the fun part getting into the demo so what I'm going",
    "start": "1209170",
    "end": "1214360"
  },
  {
    "text": "to do now is something that you probably won't see from any other monitoring or",
    "start": "1214360",
    "end": "1219810"
  },
  {
    "text": "security product out there and let's actually do a live instrumentation of",
    "start": "1219810",
    "end": "1225540"
  },
  {
    "text": "some containerized services that I've got running on Amazon so if you can see in here there's no data going into my",
    "start": "1225540",
    "end": "1232210"
  },
  {
    "text": "environment and if I go to my hosts really quickly and do a doctor yes I've",
    "start": "1232210",
    "end": "1238540"
  },
  {
    "text": "got a simple WordPress application running here kind of like any other demo that you've seen so we've got a HAF",
    "start": "1238540",
    "end": "1243970"
  },
  {
    "text": "proxy service upon a bunch of wordpress containers communicating to my sequel and i can go here and now kind of",
    "start": "1243970",
    "end": "1252820"
  },
  {
    "text": "install this agent as a container that's running on the host so let me see if I",
    "start": "1252820",
    "end": "1266620"
  },
  {
    "text": "can all right sorry about that you guys didn't have screen control can I get a confirmation that everyone can see my",
    "start": "1266620",
    "end": "1273730"
  },
  {
    "text": "screen now awesome all right everyone can see everything now cool so going",
    "start": "1273730",
    "end": "1281560"
  },
  {
    "text": "back I can just do this docker PS again here you can see yeah I've got a basic H a proxy service and WordPress services",
    "start": "1281560",
    "end": "1288070"
  },
  {
    "text": "my super cool running here and now I can go and copy this Asian command where you",
    "start": "1288070",
    "end": "1294100"
  },
  {
    "text": "can deploy it with ETS with the daemon side via kubernetes really however you want and I'm actually going to flip over",
    "start": "1294100",
    "end": "1300610"
  },
  {
    "text": "and to monitor really quick so we can see the real-time data come in so let's",
    "start": "1300610",
    "end": "1306760"
  },
  {
    "text": "copy this command and I'm actually going to remove the dash be here so we can",
    "start": "1306760",
    "end": "1313240"
  },
  {
    "text": "look at the output and see what's happening all right so what's happening",
    "start": "1313240",
    "end": "1319270"
  },
  {
    "text": "right here is we're going to load this module via DKMS so we're going to see the existing version of your kernel that",
    "start": "1319270",
    "end": "1325210"
  },
  {
    "text": "you're running and then build that module on top of it so it's not going to require a restart or do anything like that and then you're going to see a",
    "start": "1325210",
    "end": "1331810"
  },
  {
    "text": "bunch of different checks that are happening here so starting to capture command lines looking for any custom jmx",
    "start": "1331810",
    "end": "1339040"
  },
  {
    "text": "metrics Prometheus metrics looking for all those different protocols the detective if anything is running there",
    "start": "1339040",
    "end": "1344740"
  },
  {
    "text": "and then start automatically and trim it in your JVM then we're going to go hit",
    "start": "1344740",
    "end": "1350290"
  },
  {
    "text": "your different AWS instances see if we can collect metadata there pull kubernetes metadata as this metadata",
    "start": "1350290",
    "end": "1356890"
  },
  {
    "text": "really whatever you're running auto detect that and start pulling those metrics then so if you're looking at the",
    "start": "1356890",
    "end": "1362620"
  },
  {
    "text": "background now you can see that I had a host pop up here and if I open it up you",
    "start": "1362620",
    "end": "1368830"
  },
  {
    "text": "can see those same containers that were running individual performance metrics about all of those containers and then",
    "start": "1368830",
    "end": "1375460"
  },
  {
    "text": "from here we can actually go in and do some further analysis of ok what's",
    "start": "1375460",
    "end": "1382000"
  },
  {
    "text": "actually running on this house so I can click on this network traffic map here and I can see all my different ingress",
    "start": "1382000",
    "end": "1388570"
  },
  {
    "text": "and egress services the connections coming in the connections going out and then actually drill down inside of this",
    "start": "1388570",
    "end": "1394570"
  },
  {
    "text": "host as well so what we're looking at now is all the different processes that are running the connections out and then",
    "start": "1394570",
    "end": "1401740"
  },
  {
    "text": "I can go into any container see all the dependencies between them and then actually drill down into any",
    "start": "1401740",
    "end": "1407950"
  },
  {
    "text": "container and get down to the individual process level of what's running inside so pretty much every other tool is just",
    "start": "1407950",
    "end": "1414430"
  },
  {
    "text": "going to hit the docker stats API and they'll say hey this containers running at 80% CPU but not their process",
    "start": "1414430",
    "end": "1421150"
  },
  {
    "text": "that's actually running inside and what's causing it to run at that level one of the other kind of cool things",
    "start": "1421150",
    "end": "1426550"
  },
  {
    "text": "from a security perspective that you can see here is I can actually even see the SSH process that I have running on that",
    "start": "1426550",
    "end": "1434350"
  },
  {
    "text": "remote ec2 instance and then the connection out from my local laptop here",
    "start": "1434350",
    "end": "1439420"
  },
  {
    "text": "so this is kind of our ISP provider that we've got at the office on the",
    "start": "1439420",
    "end": "1447190"
  },
  {
    "text": "application side we can see that my vehicles running here and switch over to",
    "start": "1447190",
    "end": "1452770"
  },
  {
    "text": "kind of one of those default my sequel views and will automatically detect that profile and then start pulling things",
    "start": "1452770",
    "end": "1458860"
  },
  {
    "text": "like a number of requests number of errors top queries slowest queries from",
    "start": "1458860",
    "end": "1464530"
  },
  {
    "text": "inside that container without you needing to do any instrumentation so with that actually happening here is we",
    "start": "1464530",
    "end": "1470650"
  },
  {
    "text": "can see that DCP TCP connection and we're decrypting it and then reading the",
    "start": "1470650",
    "end": "1476080"
  },
  {
    "text": "file descriptor to pull all of these metrics out for you out of the box dynamically all right cool so now that",
    "start": "1476080",
    "end": "1490330"
  },
  {
    "text": "we've covered a little bit on the monitoring side and the instrumentation there let's go into my hosts and do some",
    "start": "1490330",
    "end": "1496300"
  },
  {
    "text": "stuff that we never should so I'm going to do the docker PS command again really quickly confirm we've got everything",
    "start": "1496300",
    "end": "1502990"
  },
  {
    "text": "that's running here and then let's go touch your binary directory so I'm going",
    "start": "1502990",
    "end": "1509590"
  },
  {
    "text": "to touch bin Omar is attacking me sorry Omar for throwing you under the bus here",
    "start": "1509590",
    "end": "1514980"
  },
  {
    "text": "and I can do that and then switch over to Cystic secure and if I go over into",
    "start": "1514980",
    "end": "1523810"
  },
  {
    "text": "the events out here and let's just switch this to the last ten minutes we",
    "start": "1523810",
    "end": "1531130"
  },
  {
    "text": "can see we've detected a right below that binary directory I automatically discovered that host and the containers that were",
    "start": "1531130",
    "end": "1537300"
  },
  {
    "text": "running there and then I can click on this and see full details of what",
    "start": "1537300",
    "end": "1543660"
  },
  {
    "text": "happened the user the command and all the full details of what happened around",
    "start": "1543660",
    "end": "1550050"
  },
  {
    "text": "that policy violation now you can also flip over to the command history and see",
    "start": "1550050",
    "end": "1555180"
  },
  {
    "text": "everything that I've run on that host at that point in time so quick overview",
    "start": "1555180",
    "end": "1561120"
  },
  {
    "text": "here on the instrumentation side just really wanted to show you guys kind of how easy it is and how to how we kind of",
    "start": "1561120",
    "end": "1569730"
  },
  {
    "text": "go and take a different approach to collecting that data from from your host and how that single agent can give you",
    "start": "1569730",
    "end": "1577080"
  },
  {
    "text": "kind of full security and monitoring visibility into your containers your services and your hosts that are running",
    "start": "1577080",
    "end": "1583200"
  },
  {
    "text": "there all right any questions about the instrumentation and what I've shown so",
    "start": "1583200",
    "end": "1589890"
  },
  {
    "text": "far before I pop over into ETS all right",
    "start": "1589890",
    "end": "1602820"
  },
  {
    "text": "let's move on over and just as you guys going if there's anything that you have a question about about how we're doing",
    "start": "1602820",
    "end": "1608580"
  },
  {
    "text": "detection or metrics or anything like that please send those in as soon as",
    "start": "1608580",
    "end": "1614010"
  },
  {
    "text": "that's going can we capture hosts traffic Sam yet to something now that",
    "start": "1614010",
    "end": "1620310"
  },
  {
    "text": "we'll be able to show you and then I can actually go in and do more full like",
    "start": "1620310",
    "end": "1625350"
  },
  {
    "text": "transaction analysis and that kind of stuff so I'll get into that a little bit further here um so I'm going to start",
    "start": "1625350",
    "end": "1632670"
  },
  {
    "text": "off in the explore page and Cystic monitor with ETS and this is just a",
    "start": "1632670",
    "end": "1638310"
  },
  {
    "text": "small ECF environment that we've got running here so we've got multiple hosts with different containers running on",
    "start": "1638310",
    "end": "1644040"
  },
  {
    "text": "here and this is kind of like an H top for your infrastructure so what we can",
    "start": "1644040",
    "end": "1649980"
  },
  {
    "text": "do here is actually go and switch this from looking at my environment from kind",
    "start": "1649980",
    "end": "1657150"
  },
  {
    "text": "of this physical view to an e CF native view so if I switch on to over to e CF services now we're looking at my",
    "start": "1657150",
    "end": "1663450"
  },
  {
    "text": "environment from ok let's look at this sure the different services that are part of that cluster and then go in to",
    "start": "1663450",
    "end": "1670770"
  },
  {
    "text": "the families all the way down to the containers that roll up into that you",
    "start": "1670770",
    "end": "1675990"
  },
  {
    "text": "can click on this entire infrastructure overview here and then get an overview",
    "start": "1675990",
    "end": "1681240"
  },
  {
    "text": "of the different services that are running the container counts per service and then get all the way down to looking",
    "start": "1681240",
    "end": "1687900"
  },
  {
    "text": "at okay their request times of my different logical services regardless of where they're physically located see CPU",
    "start": "1687900",
    "end": "1695190"
  },
  {
    "text": "net by its all that kind of stuff or get down into your tasks and see which tasks",
    "start": "1695190",
    "end": "1701280"
  },
  {
    "text": "are consumed consuming your most file system memory by having network activity",
    "start": "1701280",
    "end": "1708420"
  },
  {
    "text": "all that kind of stuff regardless of where they're physically running in your environment yeah so Sarat the same",
    "start": "1708420",
    "end": "1720480"
  },
  {
    "text": "things going to happen with kubernetes openshift as well basically what we'll be doing is pulling the different API",
    "start": "1720480",
    "end": "1728670"
  },
  {
    "text": "that you have running and then enriching every single metric that we collect with the host will with all the labels that",
    "start": "1728670",
    "end": "1735210"
  },
  {
    "text": "EGS is exposing kubernetes and all that kind of stuff and all i'll get into kubernetes a little bit once we go over",
    "start": "1735210",
    "end": "1741240"
  },
  {
    "text": "into the security environment Jeremy for",
    "start": "1741240",
    "end": "1747000"
  },
  {
    "text": "services that are funded by a load balancer can you monitor the request request rate yeah so one of the things",
    "start": "1747000",
    "end": "1753380"
  },
  {
    "text": "that we'll be able to see there it's with lb or lb you can see the incoming",
    "start": "1753380",
    "end": "1759330"
  },
  {
    "text": "traffic and then request from that client to dilute balancer because we'll be integrating with cloud watch and also",
    "start": "1759330",
    "end": "1766890"
  },
  {
    "text": "just seeing even like top URLs lowest URLs or on the RDS side being able and",
    "start": "1766890",
    "end": "1776700"
  },
  {
    "text": "looking at the top queries and slowest queries because we can see that",
    "start": "1776700",
    "end": "1782250"
  },
  {
    "text": "connection and the file descriptor on the system call from that connection that's being open to RDS all right",
    "start": "1782250",
    "end": "1793750"
  },
  {
    "text": "other questions just came in I'm going to try to address some of those at the end and then keep on going through ETS here so one of the other things that we",
    "start": "1793750",
    "end": "1801400"
  },
  {
    "text": "see from a ton of ECS customers is kind of this crash loopback that you're also going to see on the kubernetes side and",
    "start": "1801400",
    "end": "1807970"
  },
  {
    "text": "one of the things that we'll be able to do for you is create alerting in your environment so there's a couple",
    "start": "1807970",
    "end": "1813400"
  },
  {
    "text": "different types of alerts downtown alerts metrics anomaly detection in",
    "start": "1813400",
    "end": "1818710"
  },
  {
    "text": "hotel I grew Bell airs on the anomaly detection side you're using ECS because",
    "start": "1818710",
    "end": "1824470"
  },
  {
    "text": "you really care about a logical service you don't really care about how that underlying host is performing and so one",
    "start": "1824470",
    "end": "1830650"
  },
  {
    "text": "of the awesome things to do here at that service level is look at the response time of that service as a whole and then",
    "start": "1830650",
    "end": "1837760"
  },
  {
    "text": "if it for some reason gets outside of a standard deviation they're alert on that or one of the things that we actually",
    "start": "1837760",
    "end": "1845410"
  },
  {
    "text": "just released is the ability to go and use lambda or any metric that we collect",
    "start": "1845410",
    "end": "1851500"
  },
  {
    "text": "to then go and schedule new services with ETS and kind of scale out your",
    "start": "1851500",
    "end": "1857140"
  },
  {
    "text": "architecture based on any of the pieces of performance metrics that we're collecting on the crash loop back side",
    "start": "1857140",
    "end": "1864330"
  },
  {
    "text": "one of the things that you'll see when you're pushing on a new ETS deployment is that that basically that new",
    "start": "1864330",
    "end": "1871630"
  },
  {
    "text": "deployment won't fail for a couple hours so one of the things you can do here is see that if a container is being killed",
    "start": "1871630",
    "end": "1879010"
  },
  {
    "text": "or restarted over and over and over again and so look for any event that we're seeing will automatically ingest",
    "start": "1879010",
    "end": "1886090"
  },
  {
    "text": "all events from your docker API or your kubernetes api so mr. containers killed",
    "start": "1886090",
    "end": "1892090"
  },
  {
    "text": "if the container is at a memory if you're scaling replica sets all that kind of stuff and allow you to alert on",
    "start": "1892090",
    "end": "1899410"
  },
  {
    "text": "those as well so if I've had more than three containers killed for this",
    "start": "1899410",
    "end": "1905800"
  },
  {
    "text": "specific GCS service and my go",
    "start": "1905800",
    "end": "1912820"
  },
  {
    "text": "application in the past three minutes I'll be able to alert on that send an",
    "start": "1912820",
    "end": "1917920"
  },
  {
    "text": "email out to SMS email any other notification channel that you've got",
    "start": "1917920",
    "end": "1923230"
  },
  {
    "text": "running there have a bunch of pre-built dashboards",
    "start": "1923230",
    "end": "1929580"
  },
  {
    "text": "that you can use so if you want to go in and look at some of these ETS services",
    "start": "1929580",
    "end": "1935070"
  },
  {
    "text": "or detect anything else that's running in your environment you just have to get started with one of these and then you",
    "start": "1935070",
    "end": "1941190"
  },
  {
    "text": "can customize it however you want so if I want to look at kind of this logical to vault or this physical topology of",
    "start": "1941190",
    "end": "1947309"
  },
  {
    "text": "what's running in my system I can see all those different hosts which ones are fronted and then actually",
    "start": "1947309",
    "end": "1953460"
  },
  {
    "text": "go in there see the processes how they're communicating with each other and everything else that's running on",
    "start": "1953460",
    "end": "1959640"
  },
  {
    "text": "that host all right hopefully that was a",
    "start": "1959640",
    "end": "1965460"
  },
  {
    "text": "pretty quick overview on a monitoring side now let's flip over into kubernetes",
    "start": "1965460",
    "end": "1971400"
  },
  {
    "text": "and talk about a little bit about kubernetes running on EPS I'm sorry",
    "start": "1971400",
    "end": "1976440"
  },
  {
    "text": "kubernetes running on Amazon and the different things that you want to think about from a security perspective there",
    "start": "1976440",
    "end": "1982820"
  },
  {
    "text": "before I flip over any questions all right looks like we've got a couple so",
    "start": "1982820",
    "end": "1988320"
  },
  {
    "text": "from Vincent do you install an agent on each node yes so we install via a daemon set with cube and that's going to allow",
    "start": "1988320",
    "end": "1996450"
  },
  {
    "text": "us basically to to get those containers",
    "start": "1996450",
    "end": "2001460"
  },
  {
    "text": "restarted and it's acute CTL to sticky ammo and we're going to be everywhere in",
    "start": "2001460",
    "end": "2006470"
  },
  {
    "text": "your cluster Christopher yeah so all the products are REST API driven so you can",
    "start": "2006470",
    "end": "2013580"
  },
  {
    "text": "send our data anywhere you can send alerts out events all that kind of stuff",
    "start": "2013580",
    "end": "2019419"
  },
  {
    "text": "alright so now let's look at an overview of kind of what's running from a",
    "start": "2019419",
    "end": "2026980"
  },
  {
    "text": "perspective in my kubernetes environment so I can see the different host year where I've had security violations but",
    "start": "2026980",
    "end": "2034429"
  },
  {
    "text": "what we want to do is really look at these from that logical perspective and I can use the same idea of grouping here",
    "start": "2034429",
    "end": "2041150"
  },
  {
    "text": "as well and switch it out with kubernetes now to see the different applications and namespaces that I have",
    "start": "2041150",
    "end": "2047690"
  },
  {
    "text": "running and then drill into something like this Java app here see the",
    "start": "2047690",
    "end": "2054050"
  },
  {
    "text": "different deployment and then the pods that are running in there as well as the",
    "start": "2054050",
    "end": "2060169"
  },
  {
    "text": "containers and which ones I've had violations and dependencies so kind of a quick overview of all the",
    "start": "2060169",
    "end": "2066888"
  },
  {
    "text": "different services that are connected and their dependencies and which ones might have violation one of the cool",
    "start": "2066889",
    "end": "2073489"
  },
  {
    "text": "things that I always see with both ETS and kubernetes customers here is as soon",
    "start": "2073489",
    "end": "2079730"
  },
  {
    "text": "as you install the agent you're going to start to see all these different connections and really be able to see",
    "start": "2079730",
    "end": "2085339"
  },
  {
    "text": "some service that's talking to a different container or service that you didn't even know about before next we",
    "start": "2085339",
    "end": "2093289"
  },
  {
    "text": "can kind of look at just a general summary of what's running in my environment and see the policies that",
    "start": "2093289",
    "end": "2099829"
  },
  {
    "text": "are protecting everything which how many high severity things violations have",
    "start": "2099829",
    "end": "2106730"
  },
  {
    "text": "happened as well as the logical oats where they've occurred the containers as well as the different images and",
    "start": "2106730",
    "end": "2115539"
  },
  {
    "text": "services where these violations have happened once again these are going to show up at the services level regardless",
    "start": "2115539",
    "end": "2122839"
  },
  {
    "text": "of where it's physically located this is pretty unique on the security side",
    "start": "2122839",
    "end": "2128650"
  },
  {
    "text": "because pretty much every other piece of enforcement is done at the image level",
    "start": "2128650",
    "end": "2133819"
  },
  {
    "text": "and so if you're using these open source components like nginx like Reddit or a safe proxy you name it",
    "start": "2133819",
    "end": "2142220"
  },
  {
    "text": "the different container images that you're using if you're using them in different ECS services or different",
    "start": "2142220",
    "end": "2148039"
  },
  {
    "text": "kubernetes deployments no other tool can really go and logically break those out",
    "start": "2148039",
    "end": "2153200"
  },
  {
    "text": "out of service by service basis and enforce them and enforce different policies that roll up into the logical",
    "start": "2153200",
    "end": "2161660"
  },
  {
    "text": "service that you're deploying to your customers your developers so that's that's one of the things that kind of",
    "start": "2161660",
    "end": "2168499"
  },
  {
    "text": "makes it unique and so you don't have to have custom images for every service you can let your Orchestrator and ECS to do",
    "start": "2168499",
    "end": "2174589"
  },
  {
    "text": "it it's really supposed to do next I'm going to go through kind of some different policies so what we're looking",
    "start": "2174589",
    "end": "2181579"
  },
  {
    "text": "at now are all the hosting container policies that are going to automatically come with meinem environment these are",
    "start": "2181579",
    "end": "2188480"
  },
  {
    "text": "from the open-source community with justic BALCO so a lot of those have come in that way as well as policies that",
    "start": "2188480",
    "end": "2195440"
  },
  {
    "text": "we've kind of learned from monitoring and managing millions of containers with such big monitor to the things like a",
    "start": "2195440",
    "end": "2203150"
  },
  {
    "text": "user running a shell in a container or a database sponder program other than",
    "start": "2203150",
    "end": "2208310"
  },
  {
    "text": "itself if someone's modifying binary directories sensitive mouth by",
    "start": "2208310",
    "end": "2213560"
  },
  {
    "text": "containers all that kind of stuff that's happening at runtime that could be a something that's an",
    "start": "2213560",
    "end": "2222770"
  },
  {
    "text": "anomaly with your user or a program that's running there but once again we",
    "start": "2222770",
    "end": "2228170"
  },
  {
    "text": "can go kind of look down in at that service level and drill into this policy that's protecting this reddit service so",
    "start": "2228170",
    "end": "2236720"
  },
  {
    "text": "right now it's looking for an unexpected outbound connection from this reddit deployment and right now it's scope to",
    "start": "2236720",
    "end": "2244070"
  },
  {
    "text": "that Redis deployment as a whole but if I wanted to go and add this to other data services that shouldn't have any",
    "start": "2244070",
    "end": "2252530"
  },
  {
    "text": "outbound connections then we can go in here and add something like my sequel or",
    "start": "2252530",
    "end": "2262720"
  },
  {
    "text": "MongoDB or any of this other deployments that are running within kubernetes and",
    "start": "2262720",
    "end": "2268390"
  },
  {
    "text": "that policy is going to be distributed across the multiple hosts wear that",
    "start": "2268390",
    "end": "2274610"
  },
  {
    "text": "kubernetes deployment is running or that ECS service is running from here we can",
    "start": "2274610",
    "end": "2280940"
  },
  {
    "text": "go and kind of stop the container to to block the issue pause it to go in",
    "start": "2280940",
    "end": "2286940"
  },
  {
    "text": "quarantine it and do further analysis or create the Cystic capture which is going",
    "start": "2286940",
    "end": "2292220"
  },
  {
    "text": "to give me all the system called pre and post policy violation for full forensic",
    "start": "2292220",
    "end": "2297740"
  },
  {
    "text": "analysis here and you can customize this to see if you want to see the twenty seconds leading up to the event and the",
    "start": "2297740",
    "end": "2303650"
  },
  {
    "text": "thirty seconds after really whatever you want to set that window to you can",
    "start": "2303650",
    "end": "2308660"
  },
  {
    "text": "customize that for your own forensics purposes and then these can be sent out kind of to SNS slack web hooks basically",
    "start": "2308660",
    "end": "2316430"
  },
  {
    "text": "whatever you want running here yeah here",
    "start": "2316430",
    "end": "2325570"
  },
  {
    "text": "agent gets installed on each host and isn't doing anything with the containers",
    "start": "2325570",
    "end": "2330940"
  },
  {
    "text": "as well okay so next I'm going to kind of go",
    "start": "2330940",
    "end": "2336190"
  },
  {
    "text": "through some of the events and look at things that have happened mine in my environment and then kind of go through",
    "start": "2336190",
    "end": "2342400"
  },
  {
    "text": "a full forensics and incident response workflow so I can see my different",
    "start": "2342400",
    "end": "2350680"
  },
  {
    "text": "namespaces that I've got running here I can open up this job application that I've got running and then go and click",
    "start": "2350680",
    "end": "2355990"
  },
  {
    "text": "on something like this Redis deployment switch over to this list view and I can see the different times that's happened over the last day and then actually the",
    "start": "2355990",
    "end": "2363100"
  },
  {
    "text": "drill in and get further details about what's happened so we can see okay two different policies have been triggered",
    "start": "2363100",
    "end": "2370060"
  },
  {
    "text": "here so there's an application policy for that unexpected outbound connection the same one that we looked at and",
    "start": "2370060",
    "end": "2376000"
  },
  {
    "text": "edited before and then we've got this file policy where a sensitive file with",
    "start": "2376000",
    "end": "2381430"
  },
  {
    "text": "thread the really cool thing here is you're going to be able to see where this happened from that kubernetes or",
    "start": "2381430",
    "end": "2388030"
  },
  {
    "text": "that ETS lens so the specific deployment the pod which namespace it rolls up into",
    "start": "2388030",
    "end": "2393310"
  },
  {
    "text": "as well as the host and the container and the MAC address all those kind of",
    "start": "2393310",
    "end": "2400180"
  },
  {
    "text": "things so then you can either kind of shut down that host do patching anything",
    "start": "2400180",
    "end": "2406150"
  },
  {
    "text": "like that of what's happened at that host level if we scroll down further you",
    "start": "2406150",
    "end": "2412930"
  },
  {
    "text": "can get actual individual details about what trigger that policy violation was full command-line arguments so we can",
    "start": "2412930",
    "end": "2420130"
  },
  {
    "text": "see okay there's an unexpected outbound connection you've got the command on the port and then go down a step further and",
    "start": "2420130",
    "end": "2426970"
  },
  {
    "text": "see that a sensitive file was open it's that same a test command and then",
    "start": "2426970",
    "end": "2432820"
  },
  {
    "text": "that the file that was actually read was epic shadow so someone has gone and",
    "start": "2432820",
    "end": "2437830"
  },
  {
    "text": "started a compare some program has gone and started an unexpected outbound connection and then it's reading from my",
    "start": "2437830",
    "end": "2444690"
  },
  {
    "text": "directory which is holding all my ash passwords so this is something where you probably want to go and kill the",
    "start": "2444690",
    "end": "2450160"
  },
  {
    "text": "container right away or go and do further analysis with the Cystic capture or something like that",
    "start": "2450160",
    "end": "2458880"
  },
  {
    "text": "all right Jeremy is there a way to integrate statistic with your pipeline that when a vulnerability is detected",
    "start": "2461910",
    "end": "2468609"
  },
  {
    "text": "you can replace the container with a new container that has the latest version yeah great question there one of the",
    "start": "2468609",
    "end": "2475600"
  },
  {
    "text": "things that we're doing right now with integrating with your CIPD platform so basically any container that you're",
    "start": "2475600",
    "end": "2482710"
  },
  {
    "text": "pushing through there that's trust it or part of your known registry if some new container is spawned it'll automatically",
    "start": "2482710",
    "end": "2489190"
  },
  {
    "text": "kill that container and then you can go and kind of have like a whitelist of the",
    "start": "2489190",
    "end": "2496240"
  },
  {
    "text": "containers that you're going to allow in your environment and then if an it's on that's outside of that list you can",
    "start": "2496240",
    "end": "2502030"
  },
  {
    "text": "pause the container kill it and then notify yourself policy enforcement right",
    "start": "2502030",
    "end": "2508660"
  },
  {
    "text": "now we're doing through the docker API",
    "start": "2508660",
    "end": "2513850"
  },
  {
    "text": "there's a bunch of other different things that we can cover with you individually as well",
    "start": "2513850",
    "end": "2519880"
  },
  {
    "text": "Jason other great question here we're gonna be able to monitor really as many",
    "start": "2519880",
    "end": "2527800"
  },
  {
    "text": "the question was is there a limit to the number of containers a statistic agent can monitor yeah on that side",
    "start": "2527800",
    "end": "2535810"
  },
  {
    "text": "we're basically going to be able to see every container so we have customers running 300 to 500 containers per hos",
    "start": "2535810",
    "end": "2544230"
  },
  {
    "text": "really scaling those out across hundreds of thousands of hosts there and since we",
    "start": "2544230",
    "end": "2551109"
  },
  {
    "text": "can see the C group in name space that's associated with that container we're just going to map that back to your",
    "start": "2551109",
    "end": "2557859"
  },
  {
    "text": "environment and be able to pull all that data yeah ciarán mini Vincent Jeremy",
    "start": "2557859",
    "end": "2565180"
  },
  {
    "text": "Jason awesome questions so far everyone else to keep on sending those in all",
    "start": "2565180",
    "end": "2570880"
  },
  {
    "text": "right so the next thing I'm going to do really quickly is go through kind of an incident response work incident response",
    "start": "2570880",
    "end": "2577330"
  },
  {
    "text": "workflow and kind of go and do deeper further analysis of what happens when a user does some type of malicious",
    "start": "2577330",
    "end": "2584260"
  },
  {
    "text": "activity on my host so I can go into this WordPress demo namespace here",
    "start": "2584260",
    "end": "2591980"
  },
  {
    "text": "and then go over into this deployment and we can see that we had a policy",
    "start": "2591980",
    "end": "2597350"
  },
  {
    "text": "violation for a user running a shell in a container so since the container is isolated and portable and that's awesome",
    "start": "2597350",
    "end": "2604310"
  },
  {
    "text": "for a development workflow also seeing what users are doing inside them is",
    "start": "2604310",
    "end": "2609350"
  },
  {
    "text": "really hard and they can actually go and execute itself inside a container that's going to go and have broad reaching",
    "start": "2609350",
    "end": "2616160"
  },
  {
    "text": "effects on your environment so one of the things will kind of look for out of the boxes okay someone started their",
    "start": "2616160",
    "end": "2621830"
  },
  {
    "text": "shell in the container let's go and make sure we know everything that they're doing so what we can see here is saying",
    "start": "2621830",
    "end": "2629869"
  },
  {
    "text": "that full scoping of what happened the hosted container and then from here we can actually go in and drill down into",
    "start": "2629869",
    "end": "2636290"
  },
  {
    "text": "the view command and now I can see all the commands that were executed when",
    "start": "2636290",
    "end": "2642619"
  },
  {
    "text": "that user started a shell in a container and we'll have this data regardless of if they just find that container exact",
    "start": "2642619",
    "end": "2649790"
  },
  {
    "text": "in and then did some stuff and left all automatically for you so we can see all",
    "start": "2649790",
    "end": "2655970"
  },
  {
    "text": "right the user started a shell and then they use curl to pull down a URL so if I",
    "start": "2655970",
    "end": "2662330"
  },
  {
    "text": "click in here you can get further details that show the entire URL here so",
    "start": "2662330",
    "end": "2668109"
  },
  {
    "text": "this URL definitely looks pretty sketchy we've got root kit in it so this is",
    "start": "2668109",
    "end": "2676280"
  },
  {
    "text": "definitely something I'm going to want to do further analysis with you can see the working directory and then further",
    "start": "2676280",
    "end": "2682970"
  },
  {
    "text": "details about the individual user the shell that's in stupid' all that concept",
    "start": "2682970",
    "end": "2688780"
  },
  {
    "text": "and then from here we can also go and see that then the user use Tartuffe",
    "start": "2688780",
    "end": "2695660"
  },
  {
    "text": "unzip that root kit and install it on on my with on that container or on that",
    "start": "2695660",
    "end": "2701240"
  },
  {
    "text": "host from the container all these commands that you see here are going to",
    "start": "2701240",
    "end": "2707180"
  },
  {
    "text": "be captured all the time regardless of kind of where you're drilling down to in",
    "start": "2707180",
    "end": "2712970"
  },
  {
    "text": "your environment and so you can go and turtle into a specific namespace see",
    "start": "2712970",
    "end": "2718220"
  },
  {
    "text": "what users are doing there what commands are being executed regardless of where that's physically located so if you're",
    "start": "2718220",
    "end": "2724490"
  },
  {
    "text": "deploying sure with ETS to a developer group you're going to get full visibility into what",
    "start": "2724490",
    "end": "2730580"
  },
  {
    "text": "the developers are doing both on those hurt on those hosts and the services all",
    "start": "2730580",
    "end": "2737000"
  },
  {
    "text": "right so now that we've seen okay they've done some stuff with with this",
    "start": "2737000",
    "end": "2742010"
  },
  {
    "text": "crew kid they've installed it they you start to kind of unzip all those files let's go into the capture to do further",
    "start": "2742010",
    "end": "2748310"
  },
  {
    "text": "analysis of what actually happened so I can open that up here and we'll open it",
    "start": "2748310",
    "end": "2754790"
  },
  {
    "text": "up with cystic inspect in this browser for anyone who's used Wireshark before this escape file is really similar to a",
    "start": "2754790",
    "end": "2762470"
  },
  {
    "text": "peek app we're doing all this analysis outside of production and I can do it on my local machine too and we're seeing",
    "start": "2762470",
    "end": "2769150"
  },
  {
    "text": "every single system call that happened on my host at that point in time you can",
    "start": "2769150",
    "end": "2775070"
  },
  {
    "text": "also use all these des capsules for troubleshooting it's part of our monitoring product as well and you can",
    "start": "2775070",
    "end": "2780800"
  },
  {
    "text": "get full performance metrics Network data file data app log messages error",
    "start": "2780800",
    "end": "2788150"
  },
  {
    "text": "messages all that kind of stuff in this centralized troubleshooting and",
    "start": "2788150",
    "end": "2793280"
  },
  {
    "text": "forensics location so first off let's go and overlay the security violation that",
    "start": "2793280",
    "end": "2801530"
  },
  {
    "text": "happened so I can drill down into it see it's the same violation that we had",
    "start": "2801530",
    "end": "2808760"
  },
  {
    "text": "before and then start overlaying my executed commands look at that specific",
    "start": "2808760",
    "end": "2814820"
  },
  {
    "text": "time window when it happened okay cool it wouldn't be a live demo something",
    "start": "2814820",
    "end": "2820550"
  },
  {
    "text": "didn't go wrong so thanks for sitting with me we can overlay the Cystic secure",
    "start": "2820550",
    "end": "2826220"
  },
  {
    "text": "notifications there look at the executed commands and then I'm going to drill down into that specific window and start",
    "start": "2826220",
    "end": "2834260"
  },
  {
    "text": "overlaying other pieces of related data on top of that to do further correlation",
    "start": "2834260",
    "end": "2839960"
  },
  {
    "text": "and all that kind of stuff from here we can actually go into those executed commands see the same commands that we",
    "start": "2839960",
    "end": "2846530"
  },
  {
    "text": "saw in the commands history but then from here go and actually do further",
    "start": "2846530",
    "end": "2852710"
  },
  {
    "text": "analysis of what happened when that user rant are so I can double click on the",
    "start": "2852710",
    "end": "2858050"
  },
  {
    "text": "command and then switch over to this files view and what I'm looking at now is every",
    "start": "2858050",
    "end": "2863569"
  },
  {
    "text": "single file that was installed went and tar was ran to unzip that rootkit so we",
    "start": "2863569",
    "end": "2869329"
  },
  {
    "text": "can see the readme the install script the backdoor every different file that",
    "start": "2869329",
    "end": "2878299"
  },
  {
    "text": "was installed and then actually go in and step further by using the i/o",
    "start": "2878299",
    "end": "2883400"
  },
  {
    "text": "streams functionality here and see the individual content of what was written",
    "start": "2883400",
    "end": "2889209"
  },
  {
    "text": "to that file when it was installed on the host so from a forensics side I'm",
    "start": "2889209",
    "end": "2895190"
  },
  {
    "text": "getting all of this data about what happened what the user did and the",
    "start": "2895190",
    "end": "2900559"
  },
  {
    "text": "individual contents of the file of the HTTP transaction of basically anything",
    "start": "2900559",
    "end": "2906079"
  },
  {
    "text": "that's happened from this from this capture file pre and post policy violation and all of this can be",
    "start": "2906079",
    "end": "2913279"
  },
  {
    "text": "automated and triggered off of any alert on the monitoring side or any security",
    "start": "2913279",
    "end": "2919369"
  },
  {
    "text": "violation on the on the security side as well so this is another time where we",
    "start": "2919369",
    "end": "2926959"
  },
  {
    "text": "usually see a ton of questions and it looks like there's some here so okay is",
    "start": "2926959",
    "end": "2935269"
  },
  {
    "text": "there anything we're seeing here specifically reliant on AWS for the introspection or it works equally well",
    "start": "2935269",
    "end": "2941529"
  },
  {
    "text": "on on bare metal yeah so we're going to be able to monitor anything Linux and be",
    "start": "2941529",
    "end": "2949309"
  },
  {
    "text": "able to see all those system calls take those captures do all that kind of stuff",
    "start": "2949309",
    "end": "2955329"
  },
  {
    "text": "for the AWS side where AWS is really",
    "start": "2955329",
    "end": "2960920"
  },
  {
    "text": "awesome and where we can pull in that metadata from cloud formation or any of the AWS tags and things like that or",
    "start": "2960920",
    "end": "2968089"
  },
  {
    "text": "will allow you to do the different service based policies and all that kind of stuff all right Corey another",
    "start": "2968089",
    "end": "2979430"
  },
  {
    "text": "question is is there a config to get the intersection and feed it into our own",
    "start": "2979430",
    "end": "2984589"
  },
  {
    "text": "monitoring system or analysis engine what a great question so one of the",
    "start": "2984589",
    "end": "2990349"
  },
  {
    "text": "things that I kind of covered in the slides is we have to wait where we can store this",
    "start": "2990349",
    "end": "2996830"
  },
  {
    "text": "data you can sort it in our SAS back-end and use this as a service send that out all out via API or you can deploy it on",
    "start": "2996830",
    "end": "3003970"
  },
  {
    "text": "premise and use all of our data is stored in Cassandra for the performance metrics and then events and user",
    "start": "3003970",
    "end": "3010960"
  },
  {
    "text": "commands and things like that are all going to be stored into elasticsearch",
    "start": "3010960",
    "end": "3020830"
  },
  {
    "text": "there all right Michael I love this question this is magic how many Wizards",
    "start": "3020830",
    "end": "3026530"
  },
  {
    "text": "were sacrificed to make this possible Michael only three we thought it would",
    "start": "3026530",
    "end": "3032770"
  },
  {
    "text": "take four or five Wizards but three three goddess will be needed yeah so on",
    "start": "3032770",
    "end": "3039130"
  },
  {
    "text": "assisting in spec side this is fully open source you can download it play with Patra files locally check it out",
    "start": "3039130",
    "end": "3045880"
  },
  {
    "text": "but the thing that gets really valuable here is all of those policies and",
    "start": "3045880",
    "end": "3051160"
  },
  {
    "text": "captures can be automated but sorry to any wizards in the audience we didn't",
    "start": "3051160",
    "end": "3057010"
  },
  {
    "text": "mean to sacrifice as many of you but had to do it to kind of make this big impact so Michael awesome question there thank",
    "start": "3057010",
    "end": "3064450"
  },
  {
    "text": "you I'm just going to go back into CICIG",
    "start": "3064450",
    "end": "3071200"
  },
  {
    "text": "monitor really quickly and then look at our event see that's one thing I kind of",
    "start": "3071200",
    "end": "3076270"
  },
  {
    "text": "realized I met and then from there we're going to open it up to questions for everyone so in this event feed you're",
    "start": "3076270",
    "end": "3083619"
  },
  {
    "text": "going to be able to see all custom events that have happened you can deploy in anything from your CICS DD pipeline",
    "start": "3083619",
    "end": "3090940"
  },
  {
    "text": "all of that automatically and get kind of full context about the host your",
    "start": "3090940",
    "end": "3098040"
  },
  {
    "text": "specific container all that kind of stuff even with exit codes so that's one",
    "start": "3098040",
    "end": "3104080"
  },
  {
    "text": "of the huge things that we've kind of seen it's like this container randomly died what happened and those executors",
    "start": "3104080",
    "end": "3111070"
  },
  {
    "text": "and things like that are going to allow you to actually go and do some deeper",
    "start": "3111070",
    "end": "3116470"
  },
  {
    "text": "troubleshooting there all right with",
    "start": "3116470",
    "end": "3121990"
  },
  {
    "text": "that thanks everyone or attended you guys have been an awesome audience I",
    "start": "3121990",
    "end": "3128800"
  },
  {
    "text": "love having all these questions come in interactive we're going to open it up now for anything else that you want to",
    "start": "3128800",
    "end": "3135580"
  },
  {
    "text": "ask and let's go from here all right",
    "start": "3135580",
    "end": "3141400"
  },
  {
    "text": "awesome Knox does a great job very very whisky of you to do so many",
    "start": "3141400",
    "end": "3146500"
  },
  {
    "text": "live demos in one webinar so it's really cool to see really cool to see the functionality of Cystic for modern",
    "start": "3146500",
    "end": "3153160"
  },
  {
    "text": "container workloads I think you answered a lot of the questions that we happen to see so if anyone's got any please keep",
    "start": "3153160",
    "end": "3159610"
  },
  {
    "text": "them coming but I think one in particular here I don't know if we addressed is is there any api's that",
    "start": "3159610",
    "end": "3167380"
  },
  {
    "text": "allow other tools to consume the specific data yeah so we have a full",
    "start": "3167380",
    "end": "3172750"
  },
  {
    "text": "REST API for forwarding any of this data out as well as Python client to to pull",
    "start": "3172750",
    "end": "3180640"
  },
  {
    "text": "this data the other question that I can see here is our API is available to",
    "start": "3180640",
    "end": "3189130"
  },
  {
    "text": "consume data with Splunk we have a Splunk integration where you can send data in as well so all of that will come",
    "start": "3189130",
    "end": "3196450"
  },
  {
    "text": "in awesome I think another question I think maybe was asked earlier that we",
    "start": "3196450",
    "end": "3203410"
  },
  {
    "text": "may not an address and what what user does the agent run at yeah so the agent",
    "start": "3203410",
    "end": "3210040"
  },
  {
    "text": "will run as a privileged container or a a root user on the host we do need that",
    "start": "3210040",
    "end": "3216850"
  },
  {
    "text": "access so we can load that module but the module is fully open source and you",
    "start": "3216850",
    "end": "3222100"
  },
  {
    "text": "can see all that kind of stuff yeah yeah can you describe a hybrid cloud deployment architecture or multi cloud",
    "start": "3222100",
    "end": "3229480"
  },
  {
    "text": "yeah so you can really deploy our agent on any different host whether it's",
    "start": "3229480",
    "end": "3238450"
  },
  {
    "text": "running on premise on AWS on your own private cloud on a different public cloud and then we're going to forward",
    "start": "3238450",
    "end": "3244930"
  },
  {
    "text": "all that data to our back-end so we have customers we actually have a lot of European customers that are doing stuff",
    "start": "3244930",
    "end": "3251170"
  },
  {
    "text": "in the AWS Frankfort region as well as some on Prem data centers and that's",
    "start": "3251170",
    "end": "3257560"
  },
  {
    "text": "allowing them to kind of send both pieces of day to our back-end and monitor it from",
    "start": "3257560",
    "end": "3262870"
  },
  {
    "text": "there so really you can kind of run our H in basically anywhere as long as it's",
    "start": "3262870",
    "end": "3269170"
  },
  {
    "text": "Linux great see I think we've got time",
    "start": "3269170",
    "end": "3274390"
  },
  {
    "text": "for a couple more there the service have",
    "start": "3274390",
    "end": "3279490"
  },
  {
    "text": "any built-in IDF capabilities or can and I think were you answered can you feed into a third party idea yes we have some",
    "start": "3279490",
    "end": "3287590"
  },
  {
    "text": "intrusion detection capabilities kind of based on the like the activity that's",
    "start": "3287590",
    "end": "3295450"
  },
  {
    "text": "happening on the host and so looking at like if a process has started if some",
    "start": "3295450",
    "end": "3301540"
  },
  {
    "text": "user runs those kind of things and then kind of with any other piece of data",
    "start": "3301540",
    "end": "3308110"
  },
  {
    "text": "that we collect like I said before we can send that out anywhere okay great",
    "start": "3308110",
    "end": "3315490"
  },
  {
    "text": "let's go ahead and take one last one here you know we know that systick has some open source products but on the",
    "start": "3315490",
    "end": "3321550"
  },
  {
    "text": "commercial offering what does the pricing look like yeah so the pricing",
    "start": "3321550",
    "end": "3327600"
  },
  {
    "text": "for cystic monitor starts off at $20 a",
    "start": "3327600",
    "end": "3333580"
  },
  {
    "text": "host a month and then we have different pricing tiers kind of based on how many",
    "start": "3333580",
    "end": "3340750"
  },
  {
    "text": "containers you're running or different pieces of functionality like teams or",
    "start": "3340750",
    "end": "3346030"
  },
  {
    "text": "the metrics limits and things like that but since since we're not a tag based",
    "start": "3346030",
    "end": "3352420"
  },
  {
    "text": "system on the metric side we're going to be able to collect thousands of metrics from your hosts and containers out of",
    "start": "3352420",
    "end": "3360130"
  },
  {
    "text": "the box cool and and I noticed okay",
    "start": "3360130",
    "end": "3366100"
  },
  {
    "text": "awesome yeah I think we're going to go ahead and wrap it up thank you so much Knox great job and just as a quick",
    "start": "3366100",
    "end": "3372370"
  },
  {
    "text": "reminder you'll get an email within the next few days with a link to these slides on SlideShare and a recording of",
    "start": "3372370",
    "end": "3377530"
  },
  {
    "text": "the webinar it'll be posted on our AWS YouTube site I just wanted to thank everybody very much for attending and if",
    "start": "3377530",
    "end": "3384730"
  },
  {
    "text": "you have any other questions please don't hesitate to reach out thank you thanks everyone",
    "start": "3384730",
    "end": "3390100"
  },
  {
    "text": "thanks so much",
    "start": "3390100",
    "end": "3392670"
  }
]