[
  {
    "start": "0",
    "end": "34000"
  },
  {
    "text": "good afternoon everyone hope you're all having fun at reinvent thank you for",
    "start": "199",
    "end": "6600"
  },
  {
    "text": "thank you for joining the session today my name is Prahlad Rao I mean a",
    "start": "6600",
    "end": "12269"
  },
  {
    "text": "Solutions Architect at Amazon Web Services the session today is cross",
    "start": "12269",
    "end": "18150"
  },
  {
    "text": "region replication with Amazon DynamoDB streams we also have today with us Kalyan blood",
    "start": "18150",
    "end": "26430"
  },
  {
    "text": "from Under Armour who will speak about their implementation of DynamoDB",
    "start": "26430",
    "end": "33768"
  },
  {
    "start": "34000",
    "end": "34000"
  },
  {
    "text": "so just a show of hands how many of you are already using dynamodb today",
    "start": "34399",
    "end": "41090"
  },
  {
    "text": "great ok so the goal of this session today is to provide best practice and",
    "start": "41090",
    "end": "50420"
  },
  {
    "text": "useful guidance from a customer implementation of DynamoDB and hopefully",
    "start": "50420",
    "end": "55559"
  },
  {
    "text": "by the end of this session you'll be able to take actionable guidance for your own deployment of DynamoDB",
    "start": "55559",
    "end": "62550"
  },
  {
    "text": "within your environments we'll begin with a quick recap of",
    "start": "62550",
    "end": "67580"
  },
  {
    "text": "DynamoDB look at its features and capabilities",
    "start": "67580",
    "end": "73100"
  },
  {
    "text": "and then we'll review some of the DynamoDB patterns replication patterns",
    "start": "73100",
    "end": "78330"
  },
  {
    "text": "and use cases and what tools that Amazon provides today",
    "start": "78330",
    "end": "84560"
  },
  {
    "text": "that allow you to replicate data sets within DynamoDB",
    "start": "84560",
    "end": "90079"
  },
  {
    "text": "we'll will then have Kyle from Under Armour come on stage to talk about their",
    "start": "90079",
    "end": "97430"
  },
  {
    "text": "implementation of dynamodb review their use case",
    "start": "97430",
    "end": "104240"
  },
  {
    "text": "look at the decision process that went through in understanding what they have",
    "start": "104810",
    "end": "110520"
  },
  {
    "text": "the solution today some of the experience lesson lessons",
    "start": "110520",
    "end": "115530"
  },
  {
    "text": "learned and next steps Amazon DynamoDB",
    "start": "115530",
    "end": "121820"
  },
  {
    "start": "118000",
    "end": "118000"
  },
  {
    "text": "provides a fully managed no sequel database experience that alleviates the",
    "start": "121820",
    "end": "129360"
  },
  {
    "text": "need for you to maintain and manage the underlying infrastructure required to",
    "start": "129360",
    "end": "134820"
  },
  {
    "text": "run no sequel databases with a simple clicks or API calls and by specifying",
    "start": "134820",
    "end": "143630"
  },
  {
    "text": "the necessary read and write capacity units you can easily get started in",
    "start": "143630",
    "end": "150090"
  },
  {
    "text": "leveraging dynamodb as a no sequel solution for your application environments",
    "start": "150090",
    "end": "156890"
  },
  {
    "text": "DynamoDB is designed to scale to any workload and provides low single-digit",
    "start": "156890",
    "end": "164910"
  },
  {
    "text": "millisecond latency for your application axis in addition",
    "start": "164910",
    "end": "171080"
  },
  {
    "text": "DynamoDB also provides rich capabilities around access and authentication control",
    "start": "171080",
    "end": "176490"
  },
  {
    "text": "for your tables through IM and fine-grained access control that allow",
    "start": "176490",
    "end": "182310"
  },
  {
    "text": "you to granularly manage permissions on a per table or per row basis within the",
    "start": "182310",
    "end": "188130"
  },
  {
    "text": "DynamoDB table data structure for those of you coming in from the",
    "start": "188130",
    "end": "195660"
  },
  {
    "text": "sequel world the table is similar to what we have",
    "start": "195660",
    "end": "200760"
  },
  {
    "text": "table in a sequel world so you have table you have rows and columns in a no",
    "start": "200760",
    "end": "207450"
  },
  {
    "text": "sequel database you still have the construct of table and within table you",
    "start": "207450",
    "end": "215100"
  },
  {
    "text": "have what we call as items that are essentially rows and each item comprises",
    "start": "215100",
    "end": "220950"
  },
  {
    "text": "of attributes that are essentially key value pairs",
    "start": "220950",
    "end": "226520"
  },
  {
    "text": "all you need is a hash key to get started in creating a table and",
    "start": "226520",
    "end": "233460"
  },
  {
    "text": "leveraging that in addition to that through a combination of",
    "start": "233460",
    "end": "240410"
  },
  {
    "text": "hash key range key and or global and local secondary indexes",
    "start": "240410",
    "end": "246380"
  },
  {
    "text": "you that provides rich query capabilities for you to model a 1 to 1 1",
    "start": "246380",
    "end": "254340"
  },
  {
    "text": "to n or n to n relationships within your data sets",
    "start": "254340",
    "end": "259340"
  },
  {
    "text": "any data that is written to a dynamodb table is replicated",
    "start": "260000",
    "end": "266360"
  },
  {
    "text": "across multiple availability zone in a region partitions allow you to scale your data",
    "start": "266360",
    "end": "275300"
  },
  {
    "text": "sets within a DynamoDB table horizontally across multiple nodes in",
    "start": "275300",
    "end": "280430"
  },
  {
    "text": "the backend and you as a customer since the partitions and the replication",
    "start": "280430",
    "end": "288889"
  },
  {
    "text": "mechanism is inherently provided by the DynamoDB service you don't have to",
    "start": "288889",
    "end": "294830"
  },
  {
    "text": "maintain and manage the partitions and the replication mechanism in order to",
    "start": "294830",
    "end": "300949"
  },
  {
    "text": "leverage these capabilities so why do you want to replicate data",
    "start": "300949",
    "end": "309289"
  },
  {
    "start": "306000",
    "end": "306000"
  },
  {
    "text": "sets within a DynamoDB table when we already provide the capability to",
    "start": "309289",
    "end": "316300"
  },
  {
    "text": "replicate data across SES in a data across multiple AZ's in a region well",
    "start": "316300",
    "end": "322610"
  },
  {
    "text": "you might have globally distributed applications that need access to low latency data",
    "start": "322610",
    "end": "330139"
  },
  {
    "text": "sets that are residing in DynamoDB table for your applications",
    "start": "330139",
    "end": "336339"
  },
  {
    "text": "traffic distribution that means you might have applications across different regions worldwide where your users would",
    "start": "336520",
    "end": "344300"
  },
  {
    "text": "require low latency access to that application and data set based on their location and",
    "start": "344300",
    "end": "350319"
  },
  {
    "text": "then of course disaster recovery in case you need to maintain an additional copy",
    "start": "350319",
    "end": "356180"
  },
  {
    "text": "of your data set or and on top of what we provide as data redundancy capability",
    "start": "356180",
    "end": "361789"
  },
  {
    "text": "you can easily copy the data set to a different region as a backup copy",
    "start": "361789",
    "end": "367300"
  },
  {
    "text": "this another thing that's probably not mentioned here is also for compliance reason you might have a need to maybe",
    "start": "367300",
    "end": "374120"
  },
  {
    "text": "copy data or maintain different data sets across regions for compliance and",
    "start": "374120",
    "end": "379610"
  },
  {
    "text": "security reasons as well the primarily McCann's mechanism of",
    "start": "379610",
    "end": "387430"
  },
  {
    "text": "leveraging replication within dynamodb accomplished through streams dynamodb",
    "start": "387430",
    "end": "393139"
  },
  {
    "text": "streams streams provides or captures the continuous updates that are made to a",
    "start": "393139",
    "end": "399469"
  },
  {
    "text": "table whether it's ad modified delete record to the primary table and captures all the changes that are made",
    "start": "399469",
    "end": "407140"
  },
  {
    "text": "to the table and provides that as a stream of data to end users and",
    "start": "407140",
    "end": "413010"
  },
  {
    "text": "these are strictly ordered that means that allow you to easily take advantage",
    "start": "413010",
    "end": "419200"
  },
  {
    "text": "of applications that require strict ordering capability in addition the data",
    "start": "419200",
    "end": "424570"
  },
  {
    "text": "within the streams are available up to 24 hour time timeline in which case your",
    "start": "424570",
    "end": "430540"
  },
  {
    "text": "downstream applications can easily use the streams data and",
    "start": "430540",
    "end": "436590"
  },
  {
    "text": "to leverage that as additional workflows or maybe additional triggers for your",
    "start": "436590",
    "end": "442470"
  },
  {
    "text": "applications so in the context of replication",
    "start": "442470",
    "end": "449340"
  },
  {
    "start": "445000",
    "end": "445000"
  },
  {
    "text": "we have in Regent application and cross region replication",
    "start": "449340",
    "end": "454530"
  },
  {
    "text": "in region replication as I mentioned the service natively provides automatic",
    "start": "454530",
    "end": "459850"
  },
  {
    "text": "replication that means you don't have to any do anything you create a table add data add records to the table and there",
    "start": "459850",
    "end": "467740"
  },
  {
    "text": "you go the data is already available across multiple aces and these are mainly meant for data production and",
    "start": "467740",
    "end": "474220"
  },
  {
    "text": "redundancy however there might be a need for users",
    "start": "474220",
    "end": "479830"
  },
  {
    "text": "to maintain an additional backup copy are a copy for to be used for maybe a",
    "start": "479830",
    "end": "486730"
  },
  {
    "text": "secondary application they don't want to use the primary table for their",
    "start": "486730",
    "end": "491920"
  },
  {
    "text": "application for the secondary application in which case you can easily accomplish data replication",
    "start": "491920",
    "end": "498240"
  },
  {
    "text": "through a combination of dynamodb streams and a double slam de functionality to copy data from one",
    "start": "498240",
    "end": "506320"
  },
  {
    "text": "table to another table within the same region so by way of a de plus lambda",
    "start": "506320",
    "end": "515010"
  },
  {
    "text": "lambda can easily invoke or trigger based on the updates that are made to",
    "start": "515010",
    "end": "520510"
  },
  {
    "text": "the primary table in order for our customers to easily set",
    "start": "520510",
    "end": "527590"
  },
  {
    "start": "524000",
    "end": "524000"
  },
  {
    "text": "up cross region replication for dynamodb we are made available",
    "start": "527590",
    "end": "533920"
  },
  {
    "text": "cross region replication library that uses a combination of DynamoDB streams",
    "start": "533920",
    "end": "539350"
  },
  {
    "text": "and Kinesis client library to set up a replication solution to copy data across",
    "start": "539350",
    "end": "546639"
  },
  {
    "text": "regions the replication library is available in our github repository and we welcome",
    "start": "546639",
    "end": "553449"
  },
  {
    "text": "feedback to the",
    "start": "553449",
    "end": "557279"
  },
  {
    "text": "going in a little bit details on how the cross region replication library",
    "start": "559769",
    "end": "565810"
  },
  {
    "text": "solution is by way of setting up a Kinesis client library application on an",
    "start": "565810",
    "end": "572380"
  },
  {
    "text": "ec2 instance and then ask when you enable DynamoDB streams to your primary",
    "start": "572380",
    "end": "578560"
  },
  {
    "text": "table the dynamodb client writes to the",
    "start": "578560",
    "end": "583660"
  },
  {
    "text": "primary table and the updates are captured through the streams and then by",
    "start": "583660",
    "end": "588820"
  },
  {
    "text": "way of the Kinesis client library when when you setup it sets a based on the number of partitions that you already",
    "start": "588820",
    "end": "594670"
  },
  {
    "text": "have within DynamoDB to create the Kinesis client library worker nodes or",
    "start": "594670",
    "end": "601560"
  },
  {
    "text": "worker instances right so the KCl worker is responsible for replicating data",
    "start": "601560",
    "end": "609839"
  },
  {
    "text": "from your primary table to a secondary table across different regions",
    "start": "609839",
    "end": "616170"
  },
  {
    "text": "however in order to use and leverage the",
    "start": "618390",
    "end": "623560"
  },
  {
    "text": "Kinesis client library or the cross region replication library i mentioned you need to setup an ec2 instance set up",
    "start": "623560",
    "end": "630970"
  },
  {
    "text": "the Kinesis client library on top of it and then enabled application",
    "start": "630970",
    "end": "636149"
  },
  {
    "text": "through a combination of dynamodb streams and a SS lamda functionality",
    "start": "636149",
    "end": "643079"
  },
  {
    "text": "you can create an event-driven architecture where the streams are constantly",
    "start": "643079",
    "end": "650319"
  },
  {
    "text": "captured and invoked by lambda functions so that the lambda function that you",
    "start": "650319",
    "end": "656470"
  },
  {
    "text": "write can copy the data from your table to a different table across regions so",
    "start": "656470",
    "end": "663220"
  },
  {
    "text": "this provides you to take advantage of the powerful cap ladies of our lambda service without",
    "start": "663220",
    "end": "669350"
  },
  {
    "text": "having to maintain and manage an ec2 instance set up all the kinases client library worker instances",
    "start": "669350",
    "end": "676990"
  },
  {
    "text": "with that introduction I now invite Carl",
    "start": "678399",
    "end": "683929"
  },
  {
    "text": "from under Arbor to take us through the next set of the presentation slides",
    "start": "683929",
    "end": "690579"
  },
  {
    "text": "thank you welcome Carl thank you",
    "start": "690579",
    "end": "695319"
  },
  {
    "text": "thank you so one thing I want to make clear is",
    "start": "698529",
    "end": "703579"
  },
  {
    "text": "paralyzed did not lie I do work for Under Armour that's true but also this is a high-level talk so I'm not going to",
    "start": "703579",
    "end": "710329"
  },
  {
    "text": "do a really deep dive on a particular technical topic I'm going to walk you through like we talked about on the",
    "start": "710329",
    "end": "715339"
  },
  {
    "text": "second slide I'm going to walk you through our experience I hope that something will be something will jump",
    "start": "715339",
    "end": "721279"
  },
  {
    "text": "out at you as a hook that is similar to your own experience or your own plans that you can follow up on so we're going",
    "start": "721279",
    "end": "727220"
  },
  {
    "text": "to touch on a few different topics over the next clicker over the next forty or",
    "start": "727220",
    "end": "733639"
  },
  {
    "text": "forty or so slides the next forty or so minutes so the first thing we're going to talk",
    "start": "733639",
    "end": "738860"
  },
  {
    "text": "about is just some context building and some background right so Under Armor you",
    "start": "738860",
    "end": "745670"
  },
  {
    "text": "know depending on who you've worked for your experience may seem like a big company this is Kevin Plank our CEO giving a talk to a fraction of the",
    "start": "745670",
    "end": "752509"
  },
  {
    "text": "company we have offices across the globe and this map is actually out of date already we have an office in San",
    "start": "752509",
    "end": "758869"
  },
  {
    "text": "Francisco for sure now so we're growing but I work for a very particular part of",
    "start": "758869",
    "end": "765589"
  },
  {
    "text": "Under Armour which is Under Armour connected fitness so we are connected fitness are the",
    "start": "765589",
    "end": "771529"
  },
  {
    "text": "engineers who build and maintain some apps you may or may not be familiar with those apps are things like My Fitness",
    "start": "771529",
    "end": "777110"
  },
  {
    "text": "Pal map my fitness in the mondo you a record and you a shop right so these",
    "start": "777110",
    "end": "782720"
  },
  {
    "text": "mobile apps and web applications that you can use to do different things like blog foods or log workouts",
    "start": "782720",
    "end": "788529"
  },
  {
    "text": "we're kind of spread out there's a lot of us in Austin and there's a lot of us in San Francisco but there's also a fair",
    "start": "788529",
    "end": "795350"
  },
  {
    "text": "group in Copenhagen in Denver and then kind of this long tail so we're a pretty diverse group",
    "start": "795350",
    "end": "801660"
  },
  {
    "text": "there was an about me slide in a template so I was going to fill it out originally with like kind of boring",
    "start": "801870",
    "end": "807550"
  },
  {
    "text": "stuff about my actual title at Under Armour and that's not really important so I put pictures up they kind of represent me as a person and so you know",
    "start": "807550",
    "end": "815980"
  },
  {
    "text": "I'm the kind of person who takes greens that are called power greens and you know I work out my garage and I've",
    "start": "815980",
    "end": "821950"
  },
  {
    "text": "Halloween dogs the bottom right is a little bit relevant that's the Austin office it's a little bit less cartoony",
    "start": "821950",
    "end": "827620"
  },
  {
    "text": "in real life this is like concept art from before it was built I am based in Austin so how do y'all this is where I",
    "start": "827620",
    "end": "834850"
  },
  {
    "text": "work and this is like you know I think it was 40% from that pie chart of the u ACF Under Armor connected Fitness",
    "start": "834850",
    "end": "840670"
  },
  {
    "text": "engineers are based here so hang on click so",
    "start": "840670",
    "end": "848220"
  },
  {
    "text": "single sign-on what does it mean why am I talking about this it's not cross the region replication well it's a little",
    "start": "848220",
    "end": "854589"
  },
  {
    "text": "bit of background let's burn through it real quick right so that the rest of the talk makes sense so single sign-on can",
    "start": "854589",
    "end": "860769"
  },
  {
    "text": "mean a lot of different things in different contexts there's like enterprise single sign-on right that's not what I'm talking about this single",
    "start": "860769",
    "end": "867579"
  },
  {
    "text": "sign-on is specific to those apps I listed that Under Armor builds and maintains so it's the ability to move",
    "start": "867579",
    "end": "873310"
  },
  {
    "text": "from MyFitnessPal to MapMyFitness without having to re-enter your credentials right so that's the",
    "start": "873310",
    "end": "878649"
  },
  {
    "text": "definition for this talk just to make that real clear these next slides are entirely visual",
    "start": "878649",
    "end": "884170"
  },
  {
    "text": "just for people who like to see pictures you know like the visual part of the audience they're just screen shots from a mobile device right this is walking",
    "start": "884170",
    "end": "891130"
  },
  {
    "text": "through the single sign-on experience so for example you open you a shop going left to right along this slide you fill",
    "start": "891130",
    "end": "898480"
  },
  {
    "text": "out your initial information about preferences and you find something that you're going to add to your cart",
    "start": "898480",
    "end": "904410"
  },
  {
    "text": "I broke the clicker so you've added this item to your cart",
    "start": "907550",
    "end": "914030"
  },
  {
    "text": "and you have to login to checkout and so it asks for your credentials right that is the vanilla flow",
    "start": "914030",
    "end": "920410"
  },
  {
    "text": "so let's take a step back kind of like reset your mind now right this is a",
    "start": "920410",
    "end": "925760"
  },
  {
    "text": "different app on the same phone you've installed and you're logging into you a record right so there's nothing special",
    "start": "925760",
    "end": "931790"
  },
  {
    "text": "about this in particular this slide other than demonstrating that I'm entering my credentials and I login you",
    "start": "931790",
    "end": "937640"
  },
  {
    "text": "can see my profile pic in the upper left right so if we go back and we kind of like",
    "start": "937640",
    "end": "943460"
  },
  {
    "text": "rewind the the timeline and we're back in you a shop except this time we're already signed into you a record this",
    "start": "943460",
    "end": "949640"
  },
  {
    "text": "time when we add that item to our cart and we go to checkout you a shop can recognize us and can say hey Carl you",
    "start": "949640",
    "end": "955640"
  },
  {
    "text": "know continue as yourself or if not you can click the little link but there's no reason our users should have to go",
    "start": "955640",
    "end": "961190"
  },
  {
    "text": "through the typing in your password again and then this is actually just kind of an",
    "start": "961190",
    "end": "967310"
  },
  {
    "text": "array of three different apps actually you've seen two of them it's MapMyFitness from the left you a record",
    "start": "967310",
    "end": "972350"
  },
  {
    "text": "in the middle and you a shop on the right just demonstrating that it's me logged in to all of them it's the same",
    "start": "972350",
    "end": "977450"
  },
  {
    "text": "profile picture right it's the same user so it's multiple apps and one identity",
    "start": "977450",
    "end": "983180"
  },
  {
    "text": "service on the back end and I'm going to try to play a video",
    "start": "983180",
    "end": "990670"
  },
  {
    "text": "but it's really not important this video is literally just an animated version of those slides so let's move on",
    "start": "990670",
    "end": "998350"
  },
  {
    "text": "okay so that single sign-on so now we know what that words means now we know",
    "start": "998350",
    "end": "1003400"
  },
  {
    "text": "what that word means and we kind of have like seen it in action right",
    "start": "1003400",
    "end": "1008070"
  },
  {
    "text": "so I think it's like 12 to 18 months it's a pretty broad range I know but",
    "start": "1008490",
    "end": "1015100"
  },
  {
    "text": "between 12 and 18 months ago we said we're gonna build single sign-on that",
    "start": "1015100",
    "end": "1020260"
  },
  {
    "text": "was the goal what you just saw right we were driving towards that so we knew we needed an open ID application we needed",
    "start": "1020260",
    "end": "1027939"
  },
  {
    "text": "an identity service and so that was the work that's the team that I was on and",
    "start": "1027940",
    "end": "1032949"
  },
  {
    "text": "that's the work that led to our need for cross region replication so now we're I'm getting to the actual you know top",
    "start": "1032950",
    "end": "1038490"
  },
  {
    "text": "topic right but our choice of tooling",
    "start": "1038490",
    "end": "1045438"
  },
  {
    "text": "you get a different one that's cool I'm going to uncomfortably reach around you",
    "start": "1045439",
    "end": "1052130"
  },
  {
    "start": "1052000",
    "end": "1052000"
  },
  {
    "text": "so there's some context though about our choice of tooling like why did we even end up on dynamodb well we started with",
    "start": "1052130",
    "end": "1059970"
  },
  {
    "text": "three people and our max team size really ended up at four so we were a pretty small team for this and this goal",
    "start": "1059970",
    "end": "1067380"
  },
  {
    "text": "again just to reiterate you know 180 million odd users thank you and we want them to sign on once and that's it and",
    "start": "1067380",
    "end": "1073049"
  },
  {
    "text": "be done with it so based on our needs we ended up on dynamodb for the like low operational overhead right we didn't",
    "start": "1073049",
    "end": "1079830"
  },
  {
    "text": "want to be on call for a database or as little on call as possible for our",
    "start": "1079830",
    "end": "1085080"
  },
  {
    "text": "database we have tested it just worked yep thank you very much",
    "start": "1085080",
    "end": "1093020"
  },
  {
    "text": "so we ended up on dynamodb right so that's step one - getting to needing replication based on dynamic giving",
    "start": "1093020",
    "end": "1100190"
  },
  {
    "text": "okay this is a slight tangent but I can't talk about signing on in an identity service and open ID and users",
    "start": "1100190",
    "end": "1107309"
  },
  {
    "text": "without talking about personally identifiable information so the privacy of our users is incredibly important and",
    "start": "1107309",
    "end": "1113640"
  },
  {
    "text": "personally identifiable information as a concept is starting you know is legislated like you cannot mess this up",
    "start": "1113640",
    "end": "1120450"
  },
  {
    "text": "where you can get in serious trouble with actual governmental bodies and so this also plays into the cross red cross",
    "start": "1120450",
    "end": "1127590"
  },
  {
    "text": "region replication needs because now we have to not replicate things that are",
    "start": "1127590",
    "end": "1133080"
  },
  {
    "text": "personally identifiable and we have to replicate other things that we'll see we'll talk about through the rest of the",
    "start": "1133080",
    "end": "1138240"
  },
  {
    "text": "presentation to help us deal with it but that's what PII means when I say PII",
    "start": "1138240",
    "end": "1144570"
  },
  {
    "text": "data so like I was just saying PII data is",
    "start": "1144570",
    "end": "1152830"
  },
  {
    "text": "one of the first contexts in which we actually first started talking about having to replicate data between regions",
    "start": "1152830",
    "end": "1158410"
  },
  {
    "text": "which seems kind of weird right because I just said you don't want to replicate PII data but what that means is where you know",
    "start": "1158410",
    "end": "1165280"
  },
  {
    "text": "where we ended up is is we have open ID processes right this open ID application that we're using to authenticate our",
    "start": "1165280",
    "end": "1171520"
  },
  {
    "text": "users and it's running in multiple amazon regions so say us east one in e us one just as an example",
    "start": "1171520",
    "end": "1178230"
  },
  {
    "text": "so those applications need to be able to get user data regardless of where it",
    "start": "1178230",
    "end": "1183820"
  },
  {
    "text": "actually lives so if the user data is stored in u.s. East one and you're accessing it from the application in EU",
    "start": "1183820",
    "end": "1190690"
  },
  {
    "text": "s one somehow that application needs to know to actually get the data from u.s. East one right so the solution we came",
    "start": "1190690",
    "end": "1199240"
  },
  {
    "text": "up with and we'll talk about some of the benefits and drawbacks to the solution later I think but the solution we came",
    "start": "1199240",
    "end": "1205570"
  },
  {
    "text": "up with are these pointers so these pointers are PII free there's nothing about them that's private or sensitive",
    "start": "1205570",
    "end": "1210790"
  },
  {
    "text": "so we can replicate these globally once we've replicated these globally the",
    "start": "1210790",
    "end": "1217360"
  },
  {
    "text": "application can always find it locally and then use that to look up the user's home region based on their user ID and",
    "start": "1217360",
    "end": "1223150"
  },
  {
    "text": "then map the home region to an Amazon data center and make the correct request to get the users PII data",
    "start": "1223150",
    "end": "1231270"
  },
  {
    "text": "so we talked about this and we talked about the need",
    "start": "1232650",
    "end": "1238710"
  },
  {
    "text": "so the next thing we had to do was an intensive Rd figuring out how we're going to do this right with this",
    "start": "1239370",
    "end": "1245560"
  },
  {
    "text": "decision process so I went to Google and I typed in a",
    "start": "1245560",
    "end": "1252010"
  },
  {
    "text": "dynamodb cross region replication and I click the first link and that was kind",
    "start": "1252010",
    "end": "1257110"
  },
  {
    "text": "of the beginning of the R&D process as one does",
    "start": "1257110",
    "end": "1262860"
  },
  {
    "text": "the first solution that I chose was where the first solution that I clicked was the AWS CloudFormation",
    "start": "1262860",
    "end": "1270300"
  },
  {
    "text": "template that they provided to you to do this it's actually deprecated so there's",
    "start": "1270300",
    "end": "1275620"
  },
  {
    "text": "not too much reason for me to talk about it a lot but it would spin up containers",
    "start": "1275620",
    "end": "1280990"
  },
  {
    "text": "and yes and it would use those containers to do the replication for you it would also do the initial copying of",
    "start": "1280990",
    "end": "1286419"
  },
  {
    "text": "the table data if you really mess with it like deleting tables and stuff while it's working you could get it into a bad",
    "start": "1286419",
    "end": "1292929"
  },
  {
    "text": "State and I had to get like Amazon reps to help me fix it so we didn't go with",
    "start": "1292929",
    "end": "1297940"
  },
  {
    "text": "that solution even though it was that even though it was not deprecated at the time we were evaluating him",
    "start": "1297940",
    "end": "1303899"
  },
  {
    "text": "so we kind of threw that one off into the you know the rejection pile on the upper right so I continued my research",
    "start": "1303899",
    "end": "1310509"
  },
  {
    "text": "and I click the second link in the Google results and that led me to the Kinesis client library which probably I",
    "start": "1310509",
    "end": "1316120"
  },
  {
    "text": "just talked about and it also relies on the dynamodb streams adapter",
    "start": "1316120",
    "end": "1321360"
  },
  {
    "text": "but we were this real small team we did not want to adopt a lot of operational overhead so as strong of a solution as",
    "start": "1321360",
    "end": "1329559"
  },
  {
    "text": "this is for us in particular for our story it was more than we wanted to take",
    "start": "1329559",
    "end": "1334899"
  },
  {
    "text": "on especially given that we were kind of already aware of lambda being able to maybe do this so some of the downsides",
    "start": "1334899",
    "end": "1340330"
  },
  {
    "text": "of this solution for us in particular are the operational is the operational",
    "start": "1340330",
    "end": "1345340"
  },
  {
    "text": "overhead of like you're responsible for the ec2 and the process that you wrote that embeds the library right and by",
    "start": "1345340",
    "end": "1352000"
  },
  {
    "text": "being responsible for all that if it fails for any reason whatsoever you have to figure it out your own call stuff",
    "start": "1352000",
    "end": "1357879"
  },
  {
    "text": "like that you have to scale it to",
    "start": "1357879",
    "end": "1363000"
  },
  {
    "text": "so I don't think it was actually the third link in Google but like I said we were",
    "start": "1363870",
    "end": "1370299"
  },
  {
    "text": "kind of aware of a lambda and we were thinking about how we're going to solve this and it was just kind of putting two and two together that hooking lambda up",
    "start": "1370299",
    "end": "1377289"
  },
  {
    "text": "to dynamo streams is really like a one-click thing in the console it's very simple right it's all built for you and",
    "start": "1377289",
    "end": "1382509"
  },
  {
    "text": "so we just ran with it and we said let's try this and see what we can do with it",
    "start": "1382509",
    "end": "1388620"
  },
  {
    "text": "we've kind of touched all right you know probably touched on these a little bit already but just to reiterate the actual",
    "start": "1389669",
    "end": "1395470"
  },
  {
    "text": "updates that get stored in your dynamodb stream persist for 24 hours so if something explodes catastrophic ly you",
    "start": "1395470",
    "end": "1401350"
  },
  {
    "text": "do have a chance to react to it by getting things up and running and processing those backlogged records and",
    "start": "1401350",
    "end": "1406620"
  },
  {
    "text": "then there's some other stuff if it's important to your particular use case like you can paralyze inside the lambda",
    "start": "1406620",
    "end": "1412179"
  },
  {
    "text": "function you can break out threads and do things in parallel and importantly for us very low operational",
    "start": "1412179",
    "end": "1420010"
  },
  {
    "text": "overhead we are a Java shop so if you're if",
    "start": "1420010",
    "end": "1426160"
  },
  {
    "text": "you're not a Java shop you can kind of tune out for the next 20 seconds if you are a Java shop you may and you're not",
    "start": "1426160",
    "end": "1432100"
  },
  {
    "text": "using log4j last time I checked log4j is really the only official adapter that's",
    "start": "1432100",
    "end": "1437290"
  },
  {
    "text": "available so that was kind of a bummer because we use log back and so we had to have a second kind of Xtreme like a get",
    "start": "1437290",
    "end": "1443860"
  },
  {
    "text": "familiar with the whole second logging framework it also locks to Amazon Cloud Watch",
    "start": "1443860",
    "end": "1448960"
  },
  {
    "text": "which is great if you're already using it but we tend to aggregate our logs into an L cluster at connected fitness",
    "start": "1448960",
    "end": "1455350"
  },
  {
    "text": "and so this is like a second place where we have logs now to go check so the",
    "start": "1455350",
    "end": "1460720"
  },
  {
    "text": "third one is if you're used to runtime configuration like 12 factor style where you set environment variables that's not",
    "start": "1460720",
    "end": "1466420"
  },
  {
    "text": "really an option in lambda we kind of hacked around that by using we would set",
    "start": "1466420",
    "end": "1472090"
  },
  {
    "text": "alias names on our lambda functions and the alias name is actually a key into a",
    "start": "1472090",
    "end": "1477370"
  },
  {
    "text": "set of configuration so that was how we kind of like faked having environment variables for our lambda functions",
    "start": "1477370",
    "end": "1484679"
  },
  {
    "text": "so we've talked about some background and how we ended up at this where we are",
    "start": "1490350",
    "end": "1496360"
  },
  {
    "text": "now right we decided on lambda dynamodb streams replication via that",
    "start": "1496360",
    "end": "1501900"
  },
  {
    "text": "what is our experience been so far well this is specific to us but it's",
    "start": "1501900",
    "end": "1509800"
  },
  {
    "start": "1507000",
    "end": "1507000"
  },
  {
    "text": "about leveraging the public nature of dynamodb endpoints",
    "start": "1509800",
    "end": "1515860"
  },
  {
    "text": "to deal with PII data again using those pointers so this is",
    "start": "1515860",
    "end": "1522670"
  },
  {
    "text": "just to make concrete all the things I've been talking about and how we implemented it at underarmor",
    "start": "1522670",
    "end": "1528270"
  },
  {
    "text": "so for example if you've got users using your application in the US right kind of going down the right side of this",
    "start": "1528270",
    "end": "1534280"
  },
  {
    "text": "diagram the first call you need to make is to your local database so the green line straight down and you get that",
    "start": "1534280",
    "end": "1540550"
  },
  {
    "text": "pointer and that pointer says hey for whatever reason this users data is in u.s. East one so then you can use that",
    "start": "1540550",
    "end": "1546980"
  },
  {
    "text": "pointer and the fact that DynamoDB endpoints are public right they're just internet accessible protected by TLS",
    "start": "1546980",
    "end": "1553879"
  },
  {
    "text": "encryption and all the header signing the Amazon does via the SDK for you and so you can use that fact to let your",
    "start": "1553879",
    "end": "1560690"
  },
  {
    "text": "open ID server in EU s1 crude connect directly to us east one and get the PII",
    "start": "1560690",
    "end": "1566419"
  },
  {
    "text": "data from where it's supposed to be stored but for this to work each application",
    "start": "1566419",
    "end": "1573980"
  },
  {
    "text": "has to always have access to those pointers in its local database right so how does that work well the opposite you",
    "start": "1573980",
    "end": "1581360"
  },
  {
    "text": "know the other side of the coin is the rights so right now we're running a single",
    "start": "1581360",
    "end": "1588080"
  },
  {
    "text": "master topology for our anonymous data or for our non PII data so what that",
    "start": "1588080",
    "end": "1595100"
  },
  {
    "text": "means is all of our open ID applications when they need to write anonymous or non PII data they write it to us East one",
    "start": "1595100",
    "end": "1602960"
  },
  {
    "text": "and then all the replication kicks in and it gets replicated to EU s1 as in",
    "start": "1602960",
    "end": "1608090"
  },
  {
    "text": "it's as in this example and then all the other regions that we have a presence in",
    "start": "1608090",
    "end": "1613659"
  },
  {
    "text": "again using the public nature of dynamo endpoints when you need to write PII",
    "start": "1613659",
    "end": "1619129"
  },
  {
    "text": "data itself you just write it directly to the correct location based on the user's known home region so in this case",
    "start": "1619129",
    "end": "1627320"
  },
  {
    "text": "we're writing into EU s1 directly so this is where the replication comes",
    "start": "1627320",
    "end": "1632899"
  },
  {
    "text": "in of that anonymous data to make those reads on the previous slide possible and",
    "start": "1632899",
    "end": "1638269"
  },
  {
    "text": "to make the whole system kind of run off this replication so that we always know where to get your data",
    "start": "1638269",
    "end": "1644350"
  },
  {
    "text": "I'll actually touch on one more thing before I move on from this slide which is there are other tables that benefit",
    "start": "1644350",
    "end": "1650509"
  },
  {
    "text": "from replication that are anonymous data more than those pointers right so you can replicate refresh tokens right",
    "start": "1650509",
    "end": "1657159"
  },
  {
    "text": "it's just another example so I think we've got at least five or six tables that we replicated",
    "start": "1657159",
    "end": "1664480"
  },
  {
    "start": "1663000",
    "end": "1663000"
  },
  {
    "text": "so I included this slide because I thought it kind of captured the simplicity of the set up so this is",
    "start": "1664539",
    "end": "1671509"
  },
  {
    "text": "our lambda function it's actually Scala even though I said we were a Java shop",
    "start": "1671509",
    "end": "1676770"
  },
  {
    "text": "but because lambda the java version of lambda is just JVM you can run jvm languages so in this case we've got this",
    "start": "1676770",
    "end": "1683670"
  },
  {
    "text": "Scala class and the simplicity of it is that all you have to do is give lambda",
    "start": "1683670",
    "end": "1689310"
  },
  {
    "text": "Handler and that handler is going to get past the event which has all the data and the context so like the first line",
    "start": "1689310",
    "end": "1697200"
  },
  {
    "text": "inside the handler I mentioned this already from the context you can get the lambda alias and that's where we're",
    "start": "1697200",
    "end": "1704040"
  },
  {
    "text": "using that alias to look up our runtime configuration and that runtime configuration tells us for example which",
    "start": "1704040",
    "end": "1709290"
  },
  {
    "text": "regions to replicate to the rest of this is pretty straightforward we filter the records so we don't necessarily replicate",
    "start": "1709290",
    "end": "1715230"
  },
  {
    "text": "everything and then we just do it now this slide is kind of abstract but",
    "start": "1715230",
    "end": "1723180"
  },
  {
    "text": "the general the gist of it is latency is bad like right latency bad and",
    "start": "1723180",
    "end": "1730520"
  },
  {
    "text": "the thing about our setup is we've talked about PII data you're accessing potentially in different regions that's",
    "start": "1731120",
    "end": "1737670"
  },
  {
    "text": "going to be slow right there's this tax they're just overhead and whenever you make a call say from EU s wine to US",
    "start": "1737670",
    "end": "1743910"
  },
  {
    "text": "East one or conversely roughly there's a 50 millisecond tax in our experience so",
    "start": "1743910",
    "end": "1749280"
  },
  {
    "text": "that's real bad because latency affects the user experience so this is one thing where like we've",
    "start": "1749280",
    "end": "1756510"
  },
  {
    "text": "really got our eye on it and we want to do better but it's unavoidable for PII it's a little",
    "start": "1756510",
    "end": "1763590"
  },
  {
    "text": "bit better for our anonymous data because we are replicating it for reads it's not great for our anonymous data",
    "start": "1763590",
    "end": "1769740"
  },
  {
    "text": "for writes if you're outside US East one because of that single master topology",
    "start": "1769740",
    "end": "1776090"
  },
  {
    "text": "all right so I think roughly a year in production I'm not super good with dates",
    "start": "1778730",
    "end": "1784040"
  },
  {
    "text": "but it's been super reliable so other than the one time that I like totally on",
    "start": "1784040",
    "end": "1790850"
  },
  {
    "text": "purpose set off the alarms as a test it was not at all an accident the alarms just haven't gone off and",
    "start": "1790850",
    "end": "1798130"
  },
  {
    "text": "it's a enough to the point where it's like a little bit suspicious you're like is it even working because it's been",
    "start": "1798130",
    "end": "1803600"
  },
  {
    "text": "quiet so it's been really reliable and that's been really pleasing especially with the small team signs",
    "start": "1803600",
    "end": "1811179"
  },
  {
    "text": "all right so where do we want to take this next",
    "start": "1811390",
    "end": "1816730"
  },
  {
    "text": "because like especially with the latency slide right like I kind of talked about it could be better",
    "start": "1816730",
    "end": "1823270"
  },
  {
    "text": "so one of the ways we want to make it better is reliability so if US East one goes down which is highly unlikely and",
    "start": "1825490",
    "end": "1832970"
  },
  {
    "text": "unfortunate if it does but if it does our applications become unavailable because we're unable to write that",
    "start": "1832970",
    "end": "1838580"
  },
  {
    "text": "anonymous data in the non PII data we would like to fall back to EU s1 or",
    "start": "1838580",
    "end": "1845059"
  },
  {
    "text": "some other region even unfortunately doing that implies a multi",
    "start": "1845059",
    "end": "1850429"
  },
  {
    "text": "master set up it's no longer a single master topology but that sometime is just you know like",
    "start": "1850429",
    "end": "1856880"
  },
  {
    "text": "that's the price of having a more reliable application maybe we use history internally in some of our",
    "start": "1856880",
    "end": "1863210"
  },
  {
    "text": "apps which is a library from Netflix and so I just included this right column to make it really concrete because history",
    "start": "1863210",
    "end": "1868850"
  },
  {
    "text": "is like a circuit breaking library it's really great also does load shedding and bulk heading so this is just like the",
    "start": "1868850",
    "end": "1875720"
  },
  {
    "text": "pretty cataclysmic scenario that Us East one Andy us one are both unavailable at",
    "start": "1875720",
    "end": "1881600"
  },
  {
    "text": "the same time but my goodness you know we're still up because we're gonna fall away back to AP",
    "start": "1881600",
    "end": "1887660"
  },
  {
    "text": "North East one right so that's the goal that's kind of like the bar to hit if at all possible",
    "start": "1887660",
    "end": "1892809"
  },
  {
    "text": "for reliability and then back to latency if we can allow you",
    "start": "1892809",
    "end": "1898640"
  },
  {
    "text": "to always write that anonymous data to your local database all those interactions the user has with",
    "start": "1898640",
    "end": "1905179"
  },
  {
    "text": "the app that need to do that are going to be that much faster so we want to squish this down",
    "start": "1905179",
    "end": "1910230"
  },
  {
    "text": "and just improve the user experience again relying on now a multi master set up where you can accept rights anywhere",
    "start": "1910230",
    "end": "1918470"
  },
  {
    "start": "1918000",
    "end": "1918000"
  },
  {
    "text": "so when I talk about a multi master setup that's also doing replication",
    "start": "1920270",
    "end": "1927890"
  },
  {
    "text": "right ordering is should be kind of a big red flag right because now you can",
    "start": "1927890",
    "end": "1933960"
  },
  {
    "text": "theoretically accept rights in two different regions at the same time so",
    "start": "1933960",
    "end": "1939360"
  },
  {
    "text": "you can get concurrent conflicting rights so your system if you got you know if",
    "start": "1939360",
    "end": "1945450"
  },
  {
    "text": "you go down this path or if you're thinking about it your system has to be able to deal with that there's a ton of work on this I'm",
    "start": "1945450",
    "end": "1952200"
  },
  {
    "text": "actually going to try and touch on some of like the theoretical stuff at the very end but for now our solution is",
    "start": "1952200",
    "end": "1958050"
  },
  {
    "text": "like simplicity as much as possible just simple simple simple right so we're",
    "start": "1958050",
    "end": "1964800"
  },
  {
    "text": "adding three items or I'm sorry three attributes to our items or three columns",
    "start": "1964800",
    "end": "1970560"
  },
  {
    "text": "to our tables of timestamp right ID and replicate me",
    "start": "1970560",
    "end": "1976700"
  },
  {
    "text": "to use those three new attributes it kind of goes through this state machine",
    "start": "1979310",
    "end": "1985230"
  },
  {
    "text": "right some of this state machine is not actually that interesting on the left",
    "start": "1985230",
    "end": "1990690"
  },
  {
    "text": "that's just the open ID application writing to dynamo so that's no big deal",
    "start": "1990690",
    "end": "1995720"
  },
  {
    "text": "going from the dynamo right to the stream shard updated thing that's all",
    "start": "1995720",
    "end": "2001460"
  },
  {
    "text": "under the hood right that's dynamodb streams so you don't to worry about that lambda pulling those streams is still",
    "start": "2001460",
    "end": "2008480"
  },
  {
    "text": "under the hood that's where you've told lambda hey I want to consume the streams for this table when you get to the third column and the",
    "start": "2008480",
    "end": "2016610"
  },
  {
    "text": "first decision diamond in this flow chart that's where your actual lambda function comes into play right that's your code so we consume this is the",
    "start": "2016610",
    "end": "2024920"
  },
  {
    "text": "first of those new fields right so replicate me that's just a way for the application to say hey this is a novel",
    "start": "2024920",
    "end": "2029960"
  },
  {
    "text": "write into the system so in our data layer in the application we just pretty much consistently we set replicate me to",
    "start": "2029960",
    "end": "2036800"
  },
  {
    "text": "true all the time right and that way all rights that come in",
    "start": "2036800",
    "end": "2042870"
  },
  {
    "text": "from the app from the open ID server need to be replicated and then when we",
    "start": "2042870",
    "end": "2048300"
  },
  {
    "text": "actually do the replication we can set that flag to false and you avoid the infinite loop of like constantly",
    "start": "2048300",
    "end": "2053850"
  },
  {
    "text": "replicating back and forth so in a decision diamond to the right means false so in this case if we",
    "start": "2053850",
    "end": "2060629"
  },
  {
    "text": "replicate me as false we go to the right we're done processing this event is over if it's true we go down into the",
    "start": "2060630",
    "end": "2067560"
  },
  {
    "text": "replication box right this little rectangle is like the magic and the reason it's just a rectangle is there",
    "start": "2067560",
    "end": "2073710"
  },
  {
    "text": "really isn't any magic this replication is just using the Amazon SDK for",
    "start": "2073710",
    "end": "2079260"
  },
  {
    "text": "DynamoDB it's not like I mean there's really nothing else to it you're just making a put item request",
    "start": "2079260",
    "end": "2086360"
  },
  {
    "text": "the one thing that we add to that that makes it a little more complicated than just put item is we have a right",
    "start": "2086360",
    "end": "2092820"
  },
  {
    "text": "condition attached I'm going to talk about what that right condition actually is but to finish this flowchart if the",
    "start": "2092820",
    "end": "2098760"
  },
  {
    "text": "right condition fails what that means is we're going to go to the right I'm sorry if the right",
    "start": "2098760",
    "end": "2104970"
  },
  {
    "text": "condition has not failed we go to the right and we're done so right condition failed is false which is great that",
    "start": "2104970",
    "end": "2111570"
  },
  {
    "text": "means replication succeeded we replicated the update and the system is done if",
    "start": "2111570",
    "end": "2116990"
  },
  {
    "text": "the right condition did fail if it's true we go down and that means that we",
    "start": "2116990",
    "end": "2123330"
  },
  {
    "text": "had a right conflict so we had concurrent rights for some reason coming to sued into multiple regions and",
    "start": "2123330",
    "end": "2129320"
  },
  {
    "text": "now we've got this right in memory and we've got to do something with it because we could not replicate it so we",
    "start": "2129320",
    "end": "2135810"
  },
  {
    "text": "put it in s3 and again this is like very specific to us right this is our solution again like simple simple simple",
    "start": "2135810",
    "end": "2141980"
  },
  {
    "text": "just put it in s3 as an audit trail we can hook up that data in s3 to things",
    "start": "2141980",
    "end": "2148770"
  },
  {
    "text": "like our customer happiness tooling so they can actually see for a given user that rights have been discarded and that",
    "start": "2148770",
    "end": "2155130"
  },
  {
    "text": "helps them triage when someone's having like issues with the application itself",
    "start": "2155130",
    "end": "2160340"
  },
  {
    "text": "so I said we talked about the right condition and then this is it this is not pseudocode this is literally the",
    "start": "2164830",
    "end": "2171710"
  },
  {
    "text": "string that you give to the Amazon SDK this is the right condition if you're not familiar with right",
    "start": "2171710",
    "end": "2179000"
  },
  {
    "text": "conditions I guess the thing to understand is that the symbols that are prefixed with",
    "start": "2179000",
    "end": "2185060"
  },
  {
    "text": "colons will be interpolated in the lambda function so those are",
    "start": "2185060",
    "end": "2191090"
  },
  {
    "text": "values that are coming from the update that we're trying to replicate the symbols that are not prefixed with",
    "start": "2191090",
    "end": "2196940"
  },
  {
    "text": "Collins will be interpolated with the data in the document that is being replicated over so the data in the",
    "start": "2196940",
    "end": "2203840"
  },
  {
    "text": "document that isn't that is in the target region so I said simple several times and it",
    "start": "2203840",
    "end": "2212360"
  },
  {
    "text": "really is right we're doing time stamp based conflict resolution it is literally like the simplest solution you",
    "start": "2212360",
    "end": "2218060"
  },
  {
    "text": "can do some might even say naive but I'll talk about why until you're in a",
    "start": "2218060",
    "end": "2223070"
  },
  {
    "text": "site so to run through this though right the time stamp coming in has to be greater",
    "start": "2223070",
    "end": "2229510"
  },
  {
    "text": "so we just take the latest right and that's what wins if the time stamps for",
    "start": "2229510",
    "end": "2235250"
  },
  {
    "text": "some reason are the same though we want to cover all our corner cases so we also include this is that third field that we",
    "start": "2235250",
    "end": "2241730"
  },
  {
    "text": "saw back on the previous slide we include a write ID which is just to you Ewan it's a random 64-bit number",
    "start": "2241730",
    "end": "2248560"
  },
  {
    "text": "represented alphanumeric Lea that's the tiebreaker if for whatever reason time stamps are the same it is",
    "start": "2248560",
    "end": "2255650"
  },
  {
    "text": "arbitrary but it's consistent and that's actually the key here is this whole",
    "start": "2255650",
    "end": "2260870"
  },
  {
    "text": "thing is designed to be consistent the design constraint is we did not want under any case if at all possible",
    "start": "2260870",
    "end": "2268280"
  },
  {
    "text": "for replication to come to rest and have different data in different regions",
    "start": "2268280",
    "end": "2273400"
  },
  {
    "text": "because that's just a nightmare for developers and customer happiness to debug when it actually becomes a problem",
    "start": "2273400",
    "end": "2280160"
  },
  {
    "text": "and it also means your data can just accumulate entropy because over time",
    "start": "2280160",
    "end": "2285170"
  },
  {
    "text": "some of those may not actually come up as problems right away but you can sort of slowly accumulate these errors",
    "start": "2285170",
    "end": "2292000"
  },
  {
    "text": "so the whole thing is designed to end up with the same data everywhere",
    "start": "2295430",
    "end": "2302869"
  },
  {
    "text": "so again to make things visual in concrete I made some timelines this is",
    "start": "2304040",
    "end": "2310410"
  },
  {
    "text": "the happy path this is a right coming into one region it's really simple because there's no potential conflict",
    "start": "2310410",
    "end": "2315780"
  },
  {
    "text": "you just replicate everywhere it may also be useful to note that in our setup",
    "start": "2315780",
    "end": "2322820"
  },
  {
    "text": "our multiple regions are unlikely to get concurrent rights right this is not a",
    "start": "2322820",
    "end": "2328290"
  },
  {
    "text": "single data center multi-master database where you can potentially get conflicts",
    "start": "2328290",
    "end": "2333690"
  },
  {
    "text": "per second because you're accepting writes frequently at multiple masters unless a user for some reason is geo DNS",
    "start": "2333690",
    "end": "2342240"
  },
  {
    "text": "or latency DNS routed to different regions in a short timeframe most of their rights are just going to",
    "start": "2342240",
    "end": "2348660"
  },
  {
    "text": "go to one region so most of the time we're going to go down this happy path and things just work really simply",
    "start": "2348660",
    "end": "2355400"
  },
  {
    "text": "but if somebody is doing curl requests to different regions or something's",
    "start": "2355400",
    "end": "2360660"
  },
  {
    "text": "going on again we want to handle it and we want to end up with a system with the same data everywhere we do not want",
    "start": "2360660",
    "end": "2366839"
  },
  {
    "text": "entropy so this is an example of three concurrent writes for three regions and",
    "start": "2366839",
    "end": "2372260"
  },
  {
    "text": "how those resolve one thing to note is this slightest technically incorrect timestamp - when",
    "start": "2372260",
    "end": "2379589"
  },
  {
    "text": "it replicates up to us east one should have succeeded but in a sense the end",
    "start": "2379589",
    "end": "2385500"
  },
  {
    "text": "result is the same so it kind of doesn't matter which is the whole point in the end timestamp three should win",
    "start": "2385500",
    "end": "2391440"
  },
  {
    "text": "everywhere and so even if timestamp timestamp two had succeeded if that was",
    "start": "2391440",
    "end": "2397140"
  },
  {
    "text": "represented correctly timestamp three would have still collaborated the timestamps are just epic",
    "start": "2397140",
    "end": "2403589"
  },
  {
    "text": "milliseconds they're not actually one two three but for the example",
    "start": "2403589",
    "end": "2409160"
  },
  {
    "text": "so timestamps could be the same",
    "start": "2410810",
    "end": "2416000"
  },
  {
    "text": "and again we want to cover our corner cases",
    "start": "2416000",
    "end": "2421430"
  },
  {
    "text": "because we don't want creeping entropy creeping entropy so in this example say timestamps are",
    "start": "2421430",
    "end": "2427930"
  },
  {
    "text": "exactly the same for two updates that can currently enter the system in two different regions",
    "start": "2427930",
    "end": "2433630"
  },
  {
    "text": "well we still have the right ID and statistically the right IDs are not going to collide in the lifetime of our",
    "start": "2433630",
    "end": "2439760"
  },
  {
    "text": "universe so we're going to count on that and in this case right IDB is alpha",
    "start": "2439760",
    "end": "2444860"
  },
  {
    "text": "numerically greater than a so it wins everywhere so the final state of added",
    "start": "2444860",
    "end": "2450440"
  },
  {
    "text": "idiot the final state of the data is right ID right ID be everywhere excuse",
    "start": "2450440",
    "end": "2456230"
  },
  {
    "text": "me which again is good that's the whole goal of this design",
    "start": "2456230",
    "end": "2462190"
  },
  {
    "text": "but",
    "start": "2463810",
    "end": "2466810"
  },
  {
    "text": "this solution works for us and it meets our needs and",
    "start": "2470050",
    "end": "2475190"
  },
  {
    "text": "it meets our goals but if you're on this path or you're considering anything if",
    "start": "2475190",
    "end": "2480290"
  },
  {
    "text": "you know if you're considering going down this path or you're already on this path there's always something to be learned from what if we started over",
    "start": "2480290",
    "end": "2487550"
  },
  {
    "text": "right started fresh with all the knowledge we have now and like our you know newfound awareness and actually",
    "start": "2487550",
    "end": "2494030"
  },
  {
    "text": "paid attention to the theory from the beginning so let's do that right now in case that's valuable to somebody I",
    "start": "2494030",
    "end": "2502269"
  },
  {
    "text": "will admit you are welcome if you are familiar with distributed database design and you want to laugh at me for",
    "start": "2503350",
    "end": "2509420"
  },
  {
    "text": "my naivety in this next bit that is totally okay because it was pretty bad I admit I spent a little bit of time",
    "start": "2509420",
    "end": "2516560"
  },
  {
    "text": "trying to design a system that was in a sense immune to right conflicts I",
    "start": "2516560",
    "end": "2522500"
  },
  {
    "text": "thought if I can just find the right something right the right magic that I",
    "start": "2522500",
    "end": "2528380"
  },
  {
    "text": "could set up this system that we'd never have to worry about right conflicts ever that's not possible so if you're",
    "start": "2528380",
    "end": "2537050"
  },
  {
    "text": "thinking about that you may be heading towards a a pitfall so if right",
    "start": "2537050",
    "end": "2543830"
  },
  {
    "text": "conflicts are going to happen unconditionally full-stop the only thing that's left to do is figure out what",
    "start": "2543830",
    "end": "2549890"
  },
  {
    "text": "you're going to do about them right so you can't avoid them you must recognize",
    "start": "2549890",
    "end": "2555050"
  },
  {
    "text": "and resolve them and that's what we ended up doing our solution is very simple but we recognize them and we",
    "start": "2555050",
    "end": "2561290"
  },
  {
    "text": "resolve them via timestamp and we're done with it",
    "start": "2561290",
    "end": "2565450"
  },
  {
    "start": "2565000",
    "end": "2565000"
  },
  {
    "text": "but if you're at a point where you have the opportunity to think about this",
    "start": "2567700",
    "end": "2573530"
  },
  {
    "text": "problem from the beginning and you can let it influence say your database design right or your document schema",
    "start": "2573530",
    "end": "2580010"
  },
  {
    "text": "whether you're using dynamo or anything else",
    "start": "2580010",
    "end": "2583930"
  },
  {
    "text": "what we can learn from like the academic work around this and the best practices",
    "start": "2585760",
    "end": "2592970"
  },
  {
    "text": "is that because when you have write conflicts you have multiple versions of",
    "start": "2592970",
    "end": "2598430"
  },
  {
    "text": "the truth so think about how you're going to represent that can your data",
    "start": "2598430",
    "end": "2603950"
  },
  {
    "text": "design handle multiple versions of reality because that's really what's going on in a multi master system with",
    "start": "2603950",
    "end": "2610940"
  },
  {
    "text": "conflicting rights is that disagreement right so if you can design your system to do",
    "start": "2610940",
    "end": "2617300"
  },
  {
    "text": "that you're a step ahead there are these things called CR DTS",
    "start": "2617300",
    "end": "2622910"
  },
  {
    "text": "that acronym actually stands for a couple different things but one of the things that stands for is convergent",
    "start": "2622910",
    "end": "2628880"
  },
  {
    "text": "replicated data types that's kind of like the formal academic work on how to",
    "start": "2628880",
    "end": "2633890"
  },
  {
    "text": "solve write conflicts and distributed systems so that's one of those hooks right if",
    "start": "2633890",
    "end": "2641120"
  },
  {
    "text": "you're thinking about going down this path read about C or D T's a little",
    "start": "2641120",
    "end": "2646150"
  },
  {
    "text": "learn about them they seem like magic sometimes because they talk about",
    "start": "2646150",
    "end": "2651380"
  },
  {
    "text": "automatically handling right conflicts they have downsides though some CRD T's",
    "start": "2651380",
    "end": "2656600"
  },
  {
    "text": "for example will grow without bound and the presence of continued right conflicts",
    "start": "2656600",
    "end": "2661720"
  },
  {
    "text": "unbounded growth of anything is usually a real bad problem waiting to happen",
    "start": "2661720",
    "end": "2669700"
  },
  {
    "text": "yeah so CRT T's even though they're kind of",
    "start": "2671869",
    "end": "2678660"
  },
  {
    "start": "2672000",
    "end": "2672000"
  },
  {
    "text": "academic are actually not that intimidating either I believe that if you actually looked at",
    "start": "2678660",
    "end": "2685230"
  },
  {
    "text": "Under Armour solution with time stamps that you could make the argument that is",
    "start": "2685230",
    "end": "2690540"
  },
  {
    "text": "a single or like that is a single value register convergent replicated data type",
    "start": "2690540",
    "end": "2696390"
  },
  {
    "text": "I think that's like actually a thing so we kind of accidentally reinvented it cool",
    "start": "2696390",
    "end": "2702710"
  },
  {
    "text": "but there's lots of them lots to learn I included this slide because a lot of the",
    "start": "2702710",
    "end": "2708359"
  },
  {
    "text": "stuff I started from you know just googling with my intents like research and development style but a lot of",
    "start": "2708359",
    "end": "2714750"
  },
  {
    "text": "places I often ended up on Bosch shows blog and I learned a lot of things there so I wanted to include it here and this",
    "start": "2714750",
    "end": "2721349"
  },
  {
    "text": "is just a kind of a screen grab for one of their more recent posts on dotted version vectors I",
    "start": "2721349",
    "end": "2726980"
  },
  {
    "text": "guess in so dotted version vectors just to keep throwing words out there for you to kind of hook off of dotted version",
    "start": "2726980",
    "end": "2732990"
  },
  {
    "text": "vectors are a way of establishing causality in your database and they're part of making a CR DT so like you may",
    "start": "2732990",
    "end": "2740130"
  },
  {
    "text": "make a CR DT that uses dotted version vectors to not grow as much without bound",
    "start": "2740130",
    "end": "2745430"
  },
  {
    "text": "but yeah so I learned a lot from these people and I'm by no means the expert but one and so I wanted to give them",
    "start": "2745430",
    "end": "2751559"
  },
  {
    "text": "credit Russell Brown I think did a lot of the work of translating some of the academic papers into these blog posts so",
    "start": "2751559",
    "end": "2757829"
  },
  {
    "text": "that's why he's up here Nuno Carlos Paulo Victor and Ricardo are the authors",
    "start": "2757829",
    "end": "2763020"
  },
  {
    "text": "on this paper at the bottom who again they drove a lot of the work on dotted",
    "start": "2763020",
    "end": "2768599"
  },
  {
    "text": "version vectors itself which is kind of a new thing as a few months ago I think so yeah this is a there's a big world",
    "start": "2768599",
    "end": "2776250"
  },
  {
    "text": "out there to explore but that's all I've got thank you everybody for being here if",
    "start": "2776250",
    "end": "2783960"
  },
  {
    "text": "you've got anything that you want to talk to me about or follow up on whether you know something to use on my slides",
    "start": "2783960",
    "end": "2789540"
  },
  {
    "text": "just get in touch with me with my contact info thank you very much to the engineers who",
    "start": "2789540",
    "end": "2795000"
  },
  {
    "text": "run the audio and video like they make this really easy on the speakers so",
    "start": "2795000",
    "end": "2800599"
  },
  {
    "text": "that's it Oh [Applause]",
    "start": "2800599",
    "end": "2807449"
  }
]