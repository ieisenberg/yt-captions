[
  {
    "start": "0",
    "end": "55000"
  },
  {
    "text": "hello there good morning good afternoon",
    "start": "60",
    "end": "2520"
  },
  {
    "text": "good evening depending on very well that",
    "start": "2520",
    "end": "5370"
  },
  {
    "text": "you are there right now and you're",
    "start": "5370",
    "end": "7680"
  },
  {
    "text": "watching this in this session we're",
    "start": "7680",
    "end": "9780"
  },
  {
    "text": "going to talk about AWS Fargate and if",
    "start": "9780",
    "end": "12599"
  },
  {
    "text": "you're wondering what that is",
    "start": "12599",
    "end": "14309"
  },
  {
    "text": "well AWS Fargate is a technology that",
    "start": "14309",
    "end": "17190"
  },
  {
    "text": "allows you to run with containers",
    "start": "17190",
    "end": "18690"
  },
  {
    "text": "without actually having to manage",
    "start": "18690",
    "end": "20609"
  },
  {
    "text": "servers or clusters so for example you",
    "start": "20609",
    "end": "23550"
  },
  {
    "text": "could use AWS Fargate for Amazon ECS a",
    "start": "23550",
    "end": "26789"
  },
  {
    "text": "managed container orchestration service",
    "start": "26789",
    "end": "29340"
  },
  {
    "text": "in AWS that supports docker containers",
    "start": "29340",
    "end": "31830"
  },
  {
    "text": "and we've always stated this that we",
    "start": "31830",
    "end": "34170"
  },
  {
    "text": "wanted to take the undifferentiated",
    "start": "34170",
    "end": "35850"
  },
  {
    "text": "heavy lifting away from customers and",
    "start": "35850",
    "end": "38370"
  },
  {
    "text": "have you focus on your core business and",
    "start": "38370",
    "end": "40950"
  },
  {
    "text": "this is just one more example in helping",
    "start": "40950",
    "end": "43260"
  },
  {
    "text": "doing just that now for attendees of",
    "start": "43260",
    "end": "45870"
  },
  {
    "text": "this session the assumption is that you",
    "start": "45870",
    "end": "48239"
  },
  {
    "text": "already have some level of basic",
    "start": "48239",
    "end": "50010"
  },
  {
    "text": "understanding and working knowledge of",
    "start": "50010",
    "end": "51780"
  },
  {
    "text": "containers like Dockers for example now",
    "start": "51780",
    "end": "55469"
  },
  {
    "start": "55000",
    "end": "107000"
  },
  {
    "text": "by way of introduction my name is Sean",
    "start": "55469",
    "end": "57480"
  },
  {
    "text": "to do that and I've been onboard AWS for",
    "start": "57480",
    "end": "59609"
  },
  {
    "text": "a little over seven years now it's been",
    "start": "59609",
    "end": "61829"
  },
  {
    "text": "a fantastic journey for me starting off",
    "start": "61829",
    "end": "63750"
  },
  {
    "text": "as a Solutions Architect back then and",
    "start": "63750",
    "end": "65790"
  },
  {
    "text": "then now I run the solutions",
    "start": "65790",
    "end": "67680"
  },
  {
    "text": "architecture teams for parts of ASEAN",
    "start": "67680",
    "end": "70260"
  },
  {
    "text": "and a major part of my and my teams day",
    "start": "70260",
    "end": "73020"
  },
  {
    "text": "job is to really help customers with",
    "start": "73020",
    "end": "75119"
  },
  {
    "text": "their architecture of the workloads on",
    "start": "75119",
    "end": "76920"
  },
  {
    "text": "the AWS platform and one of the things",
    "start": "76920",
    "end": "79470"
  },
  {
    "text": "that I've been excited about right from",
    "start": "79470",
    "end": "81000"
  },
  {
    "text": "day one for all these seven years is the",
    "start": "81000",
    "end": "83280"
  },
  {
    "text": "variety of use cases that customers like",
    "start": "83280",
    "end": "85680"
  },
  {
    "text": "you around the world have and how we as",
    "start": "85680",
    "end": "88829"
  },
  {
    "text": "a team help you solve technology and",
    "start": "88829",
    "end": "90689"
  },
  {
    "text": "business problems including use cases",
    "start": "90689",
    "end": "93090"
  },
  {
    "text": "around microservices and containers oh",
    "start": "93090",
    "end": "95390"
  },
  {
    "text": "by the way that is my twitter handle",
    "start": "95390",
    "end": "97920"
  },
  {
    "text": "there as well so in case you want to",
    "start": "97920",
    "end": "99840"
  },
  {
    "text": "connect with me or have a comment about",
    "start": "99840",
    "end": "102119"
  },
  {
    "text": "my presentation today and you would like",
    "start": "102119",
    "end": "104399"
  },
  {
    "text": "to tweet then I'm happy to connect with",
    "start": "104399",
    "end": "106170"
  },
  {
    "text": "you there so just a recap of why Fargate",
    "start": "106170",
    "end": "109710"
  },
  {
    "start": "107000",
    "end": "118000"
  },
  {
    "text": "and how we got here this actually been a",
    "start": "109710",
    "end": "112320"
  },
  {
    "text": "journey and some of you who have been",
    "start": "112320",
    "end": "114390"
  },
  {
    "text": "following this for the past 2 or 3 years",
    "start": "114390",
    "end": "116250"
  },
  {
    "text": "might be aware it was just about three",
    "start": "116250",
    "end": "119310"
  },
  {
    "start": "118000",
    "end": "155000"
  },
  {
    "text": "and a half years ago November 2014 that",
    "start": "119310",
    "end": "122790"
  },
  {
    "text": "we were announcing the release of Amazon",
    "start": "122790",
    "end": "125159"
  },
  {
    "text": "Elastic container service also called as",
    "start": "125159",
    "end": "127649"
  },
  {
    "text": "Amazon ECS now we launched TCS because",
    "start": "127649",
    "end": "130860"
  },
  {
    "text": "our customers needed a way to manage",
    "start": "130860",
    "end": "133060"
  },
  {
    "text": "skill deployment of docker containers on",
    "start": "133060",
    "end": "135459"
  },
  {
    "text": "AWS our customers wanted a magnet",
    "start": "135459",
    "end": "139030"
  },
  {
    "text": "service where they didn't have to",
    "start": "139030",
    "end": "140410"
  },
  {
    "text": "operate their own cluster management",
    "start": "140410",
    "end": "142090"
  },
  {
    "text": "software a solution that was scalable",
    "start": "142090",
    "end": "144970"
  },
  {
    "text": "and secure that they could trust to run",
    "start": "144970",
    "end": "147790"
  },
  {
    "text": "their production workloads and they",
    "start": "147790",
    "end": "149680"
  },
  {
    "text": "wanted to write tight integration and",
    "start": "149680",
    "end": "151780"
  },
  {
    "text": "support for ec2 features that they liked",
    "start": "151780",
    "end": "154290"
  },
  {
    "text": "then in 2015 we focused on building a",
    "start": "154290",
    "end": "157989"
  },
  {
    "start": "155000",
    "end": "280000"
  },
  {
    "text": "highly reliable and performing docker",
    "start": "157989",
    "end": "160360"
  },
  {
    "text": "image registry that we call Amazon",
    "start": "160360",
    "end": "162910"
  },
  {
    "text": "Elastic container registry or ACR and we",
    "start": "162910",
    "end": "165880"
  },
  {
    "text": "announced the general availability",
    "start": "165880",
    "end": "166900"
  },
  {
    "text": "release near the end of 2015 our goal",
    "start": "166900",
    "end": "170110"
  },
  {
    "text": "with ECR was to enable developers to use",
    "start": "170110",
    "end": "172569"
  },
  {
    "text": "the same familiar docker push-and-pull",
    "start": "172569",
    "end": "174850"
  },
  {
    "text": "api's to store their container images",
    "start": "174850",
    "end": "177250"
  },
  {
    "text": "and we see this product highly adopted",
    "start": "177250",
    "end": "179709"
  },
  {
    "text": "by customers both running containers in",
    "start": "179709",
    "end": "181630"
  },
  {
    "text": "AWS and really across any environment",
    "start": "181630",
    "end": "183849"
  },
  {
    "text": "for that matter in the last couple of",
    "start": "183849",
    "end": "186370"
  },
  {
    "text": "years we've seen create adoption of",
    "start": "186370",
    "end": "188230"
  },
  {
    "text": "production use cases on Amazon ECS our",
    "start": "188230",
    "end": "191319"
  },
  {
    "text": "active customers actually up by more",
    "start": "191319",
    "end": "193720"
  },
  {
    "text": "than four hundred and fifty percent",
    "start": "193720",
    "end": "195220"
  },
  {
    "text": "since 2016 so we are managing containers",
    "start": "195220",
    "end": "198370"
  },
  {
    "text": "across millions of businesses every",
    "start": "198370",
    "end": "200260"
  },
  {
    "text": "single month in fact we are witnessing",
    "start": "200260",
    "end": "203079"
  },
  {
    "text": "an incredible transition to containers",
    "start": "203079",
    "end": "204820"
  },
  {
    "text": "and customers that we see is whether",
    "start": "204820",
    "end": "206380"
  },
  {
    "text": "it's expedient running its travel",
    "start": "206380",
    "end": "208660"
  },
  {
    "text": "platform or matte box",
    "start": "208660",
    "end": "209940"
  },
  {
    "text": "powering mapping data for some of the",
    "start": "209940",
    "end": "212200"
  },
  {
    "text": "most popular websites Amazon ECS enables",
    "start": "212200",
    "end": "215890"
  },
  {
    "text": "these customers to be able to run",
    "start": "215890",
    "end": "217359"
  },
  {
    "text": "containers at high scale and indeed we",
    "start": "217359",
    "end": "220480"
  },
  {
    "text": "see hundreds and millions of containers",
    "start": "220480",
    "end": "222040"
  },
  {
    "text": "launched every single week customers",
    "start": "222040",
    "end": "225579"
  },
  {
    "text": "that is each of you a critical key to",
    "start": "225579",
    "end": "227889"
  },
  {
    "text": "our innovation we love to listen to our",
    "start": "227889",
    "end": "229959"
  },
  {
    "text": "customers understand your use cases",
    "start": "229959",
    "end": "232150"
  },
  {
    "text": "learn use those ideas to fuel our",
    "start": "232150",
    "end": "235000"
  },
  {
    "text": "experimentation and then find ways to",
    "start": "235000",
    "end": "237459"
  },
  {
    "text": "then build innovative new features to",
    "start": "237459",
    "end": "239980"
  },
  {
    "text": "stall the problems and challenges we are",
    "start": "239980",
    "end": "241660"
  },
  {
    "text": "hearing about we get those features in",
    "start": "241660",
    "end": "244480"
  },
  {
    "text": "your hands and then that flywheel spins",
    "start": "244480",
    "end": "247090"
  },
  {
    "text": "back again with new feedback ideas use",
    "start": "247090",
    "end": "250030"
  },
  {
    "text": "cases etc that is pretty much how we've",
    "start": "250030",
    "end": "252880"
  },
  {
    "text": "built all our services and features",
    "start": "252880",
    "end": "254530"
  },
  {
    "text": "throughout our history and this same",
    "start": "254530",
    "end": "257019"
  },
  {
    "text": "process has helped us to deliver over 50",
    "start": "257019",
    "end": "259750"
  },
  {
    "text": "new features to the ECS service and the",
    "start": "259750",
    "end": "262120"
  },
  {
    "text": "stack",
    "start": "262120",
    "end": "262630"
  },
  {
    "text": "since 2014-15 now one of the most prom",
    "start": "262630",
    "end": "266139"
  },
  {
    "text": "things we have heard from our ECS",
    "start": "266139",
    "end": "267759"
  },
  {
    "text": "customers is that you would love to not",
    "start": "267759",
    "end": "270219"
  },
  {
    "text": "really have you know you would love to",
    "start": "270219",
    "end": "272770"
  },
  {
    "text": "only have to think about the container",
    "start": "272770",
    "end": "274449"
  },
  {
    "text": "or the application and really not have",
    "start": "274449",
    "end": "276879"
  },
  {
    "text": "to manage any of the underlying ec2",
    "start": "276879",
    "end": "278889"
  },
  {
    "text": "infrastructure so we took this feedback",
    "start": "278889",
    "end": "280870"
  },
  {
    "text": "and we've worked hard to build a",
    "start": "280870",
    "end": "283120"
  },
  {
    "text": "technology that allows customers to",
    "start": "283120",
    "end": "285129"
  },
  {
    "text": "focus entirely on their applications and",
    "start": "285129",
    "end": "287590"
  },
  {
    "text": "work with their applications directly at",
    "start": "287590",
    "end": "290020"
  },
  {
    "text": "the container or the task level we have",
    "start": "290020",
    "end": "293259"
  },
  {
    "text": "over the years worked on making virtual",
    "start": "293259",
    "end": "295240"
  },
  {
    "text": "machine instances on the cloud as a very",
    "start": "295240",
    "end": "298090"
  },
  {
    "text": "basic compute primitive and now it means",
    "start": "298090",
    "end": "300849"
  },
  {
    "text": "we are making even containers a",
    "start": "300849",
    "end": "303069"
  },
  {
    "text": "fundamental compute primitive and that",
    "start": "303069",
    "end": "305770"
  },
  {
    "text": "brought us to a table is far gate and we",
    "start": "305770",
    "end": "307990"
  },
  {
    "text": "announced the launch of this at Orion",
    "start": "307990",
    "end": "309759"
  },
  {
    "text": "win 2017 towards the end of November if",
    "start": "309759",
    "end": "312430"
  },
  {
    "text": "you remember which is to run containers",
    "start": "312430",
    "end": "314680"
  },
  {
    "text": "without the need to manage underlying",
    "start": "314680",
    "end": "316750"
  },
  {
    "text": "infrastructure far gate allows you to",
    "start": "316750",
    "end": "319509"
  },
  {
    "text": "work entirely with an ECA stars' native",
    "start": "319509",
    "end": "322150"
  },
  {
    "text": "API and with Fargate you specify the",
    "start": "322150",
    "end": "324550"
  },
  {
    "text": "continuing image CPU memory required to",
    "start": "324550",
    "end": "327729"
  },
  {
    "text": "run the container in an ECS task",
    "start": "327729",
    "end": "329979"
  },
  {
    "text": "definition and with a single command",
    "start": "329979",
    "end": "332259"
  },
  {
    "text": "literally you can run that container in",
    "start": "332259",
    "end": "334360"
  },
  {
    "text": "production and with one command you can",
    "start": "334360",
    "end": "336819"
  },
  {
    "text": "scale that to tens hundreds or even",
    "start": "336819",
    "end": "339729"
  },
  {
    "text": "thousands based on the requirements with",
    "start": "339729",
    "end": "342639"
  },
  {
    "text": "Fargate one you have no instances to",
    "start": "342639",
    "end": "345310"
  },
  {
    "text": "manage so no more patching OS or",
    "start": "345310",
    "end": "346839"
  },
  {
    "text": "runtimes - with the new task native API",
    "start": "346839",
    "end": "349659"
  },
  {
    "text": "you don't need to worry about clusters",
    "start": "349659",
    "end": "351310"
  },
  {
    "text": "there as an organizational and security",
    "start": "351310",
    "end": "354039"
  },
  {
    "text": "boundary there but you really don't need",
    "start": "354039",
    "end": "355990"
  },
  {
    "text": "to think about cluster utilization or",
    "start": "355990",
    "end": "357759"
  },
  {
    "text": "auto scaling of compute resources within",
    "start": "357759",
    "end": "360189"
  },
  {
    "text": "that cluster boundary with the resource",
    "start": "360189",
    "end": "362560"
  },
  {
    "text": "based pricing model you only pay for the",
    "start": "362560",
    "end": "364779"
  },
  {
    "text": "resources you provision for each task so",
    "start": "364779",
    "end": "368020"
  },
  {
    "text": "we think of Fargate fundamentally how it",
    "start": "368020",
    "end": "371020"
  },
  {
    "text": "change it frog it basically changes how",
    "start": "371020",
    "end": "373240"
  },
  {
    "text": "you think about consumption how you will",
    "start": "373240",
    "end": "375219"
  },
  {
    "text": "run and deploy your applications with",
    "start": "375219",
    "end": "377050"
  },
  {
    "text": "containers and as I stated at the",
    "start": "377050",
    "end": "379719"
  },
  {
    "text": "beginning of my presentation it takes",
    "start": "379719",
    "end": "381849"
  },
  {
    "text": "away that undifferentiated heavy lifting",
    "start": "381849",
    "end": "383889"
  },
  {
    "text": "of managing infrastructure which is",
    "start": "383889",
    "end": "385990"
  },
  {
    "text": "servers in clusters AWS for gate is",
    "start": "385990",
    "end": "388990"
  },
  {
    "start": "387000",
    "end": "408000"
  },
  {
    "text": "designed to be used with Amazon ECS the",
    "start": "388990",
    "end": "391539"
  },
  {
    "text": "core API scheduling and placement",
    "start": "391539",
    "end": "394029"
  },
  {
    "text": "concepts remaining the same and you can",
    "start": "394029",
    "end": "396190"
  },
  {
    "text": "continue to benefit from investments we",
    "start": "396190",
    "end": "398319"
  },
  {
    "text": "have made there over the past three",
    "start": "398319",
    "end": "399940"
  },
  {
    "text": "years",
    "start": "399940",
    "end": "400450"
  },
  {
    "text": "with access to the same rich set of",
    "start": "400450",
    "end": "402670"
  },
  {
    "text": "features and capabilities to run",
    "start": "402670",
    "end": "404260"
  },
  {
    "text": "production and run it at scale that's",
    "start": "404260",
    "end": "406690"
  },
  {
    "text": "important oh and by the way if you're",
    "start": "406690",
    "end": "409330"
  },
  {
    "start": "408000",
    "end": "423000"
  },
  {
    "text": "wondering as to why I'm talking about",
    "start": "409330",
    "end": "410980"
  },
  {
    "text": "ECS what about kubernetes this is",
    "start": "410980",
    "end": "413920"
  },
  {
    "text": "important because amongst other reasons",
    "start": "413920",
    "end": "415780"
  },
  {
    "text": "more than 60 percent of kubernetes",
    "start": "415780",
    "end": "418210"
  },
  {
    "text": "workloads run on AWS as of early 2017",
    "start": "418210",
    "end": "421360"
  },
  {
    "text": "based on service so we absolutely plan",
    "start": "421360",
    "end": "424570"
  },
  {
    "text": "to extend it Willis volume to support",
    "start": "424570",
    "end": "426610"
  },
  {
    "text": "Amazon Elastic humanity service are",
    "start": "426610",
    "end": "428830"
  },
  {
    "text": "fully managed coburn it is offering some",
    "start": "428830",
    "end": "431710"
  },
  {
    "text": "time through 2018 so would you like to",
    "start": "431710",
    "end": "434830"
  },
  {
    "text": "learn more about AWS foggy then I'm sure",
    "start": "434830",
    "end": "437680"
  },
  {
    "text": "you do so let's get under the hood in",
    "start": "437680",
    "end": "439780"
  },
  {
    "text": "details so we'll discuss some of the use",
    "start": "439780",
    "end": "442480"
  },
  {
    "text": "cases Fargate how it works show a quick",
    "start": "442480",
    "end": "445420"
  },
  {
    "text": "demo and then visit some of the key",
    "start": "445420",
    "end": "447310"
  },
  {
    "text": "product areas really addresses",
    "start": "447310",
    "end": "450130"
  },
  {
    "text": "the breadth for how containers a deploy",
    "start": "450130",
    "end": "452050"
  },
  {
    "text": "today but don't really want to manage",
    "start": "452050",
    "end": "454090"
  },
  {
    "text": "the underlying infrastructure for",
    "start": "454090",
    "end": "456790"
  },
  {
    "text": "example by definition micro services are",
    "start": "456790",
    "end": "460450"
  },
  {
    "text": "independently deployable services that",
    "start": "460450",
    "end": "462760"
  },
  {
    "text": "work together and it's modeled around a",
    "start": "462760",
    "end": "465130"
  },
  {
    "text": "business domain what a platform like ECS",
    "start": "465130",
    "end": "467710"
  },
  {
    "text": "does and Fargate enables you to even for",
    "start": "467710",
    "end": "470860"
  },
  {
    "text": "the do is let the developers working on",
    "start": "470860",
    "end": "472870"
  },
  {
    "text": "these independent service be able to",
    "start": "472870",
    "end": "474970"
  },
  {
    "text": "choose the deployment cadence and",
    "start": "474970",
    "end": "476740"
  },
  {
    "text": "scaling requirements without any",
    "start": "476740",
    "end": "479230"
  },
  {
    "text": "additional infrastructure considerations",
    "start": "479230",
    "end": "480940"
  },
  {
    "text": "at all so if you're running bad jobs you",
    "start": "480940",
    "end": "484090"
  },
  {
    "text": "may be running them for short durations",
    "start": "484090",
    "end": "485860"
  },
  {
    "text": "or on an intermittent basis to perform",
    "start": "485860",
    "end": "488350"
  },
  {
    "text": "lots of computation unlike let's say web",
    "start": "488350",
    "end": "490690"
  },
  {
    "text": "websites or e-commerce stores or for",
    "start": "490690",
    "end": "493390"
  },
  {
    "text": "other long-standing services you don't",
    "start": "493390",
    "end": "495310"
  },
  {
    "text": "have to stand up and scale capacity",
    "start": "495310",
    "end": "497080"
  },
  {
    "text": "ahead of such a job and lastly",
    "start": "497080",
    "end": "499680"
  },
  {
    "text": "containers are an excellent way that we",
    "start": "499680",
    "end": "502390"
  },
  {
    "text": "see many customers following to be able",
    "start": "502390",
    "end": "504580"
  },
  {
    "text": "to port their applications between not",
    "start": "504580",
    "end": "506770"
  },
  {
    "text": "only their environments like Devon prod",
    "start": "506770",
    "end": "508810"
  },
  {
    "text": "and across in a consistent manner but",
    "start": "508810",
    "end": "511210"
  },
  {
    "text": "also from the on-prem to cloud",
    "start": "511210",
    "end": "512950"
  },
  {
    "text": "environments so if you're migrating",
    "start": "512950",
    "end": "514630"
  },
  {
    "text": "workloads by using continually",
    "start": "514630",
    "end": "516690"
  },
  {
    "text": "containerization Fargate maintains that",
    "start": "516690",
    "end": "519250"
  },
  {
    "text": "focus on a containers as a very simple",
    "start": "519250",
    "end": "521560"
  },
  {
    "text": "primitive now getting started with",
    "start": "521560",
    "end": "523900"
  },
  {
    "text": "containers is rather easy you could even",
    "start": "523900",
    "end": "526060"
  },
  {
    "text": "spin up one locally without much effort",
    "start": "526060",
    "end": "529120"
  },
  {
    "text": "at all or if you really want to run",
    "start": "529120",
    "end": "532090"
  },
  {
    "start": "530000",
    "end": "615000"
  },
  {
    "text": "containers in the class",
    "start": "532090",
    "end": "533569"
  },
  {
    "text": "you could actually spin up some ec2",
    "start": "533569",
    "end": "535100"
  },
  {
    "text": "instances launch containers on them and",
    "start": "535100",
    "end": "537499"
  },
  {
    "text": "get going in minutes",
    "start": "537499",
    "end": "538910"
  },
  {
    "text": "this would work even if you're using",
    "start": "538910",
    "end": "540860"
  },
  {
    "text": "dozens of containers but as you start to",
    "start": "540860",
    "end": "543439"
  },
  {
    "text": "think about scaling this managing",
    "start": "543439",
    "end": "545509"
  },
  {
    "text": "hundreds of instances monitoring their",
    "start": "545509",
    "end": "548420"
  },
  {
    "text": "health scaling and then launching your",
    "start": "548420",
    "end": "550249"
  },
  {
    "text": "containers on them and the entire gamut",
    "start": "550249",
    "end": "552559"
  },
  {
    "text": "and the whole lifecycle around them how",
    "start": "552559",
    "end": "554749"
  },
  {
    "text": "do you actually scale for that it's",
    "start": "554749",
    "end": "556249"
  },
  {
    "text": "tough so let's say you plan to run",
    "start": "556249",
    "end": "558589"
  },
  {
    "text": "several highly available applications",
    "start": "558589",
    "end": "560660"
  },
  {
    "text": "across three different availability",
    "start": "560660",
    "end": "562970"
  },
  {
    "text": "zones in a region",
    "start": "562970",
    "end": "564249"
  },
  {
    "text": "ECS enables you to be able to",
    "start": "564249",
    "end": "567079"
  },
  {
    "text": "operationalize your continues to",
    "start": "567079",
    "end": "568730"
  },
  {
    "text": "workloads at very high scales no",
    "start": "568730",
    "end": "571639"
  },
  {
    "text": "management software to install a worry",
    "start": "571639",
    "end": "573379"
  },
  {
    "text": "about its high availability the cluster",
    "start": "573379",
    "end": "576799"
  },
  {
    "text": "management piece enabled you to monitor",
    "start": "576799",
    "end": "579350"
  },
  {
    "text": "the cluster scale it using auto scaling",
    "start": "579350",
    "end": "582230"
  },
  {
    "text": "groups and be able to manage state of",
    "start": "582230",
    "end": "584929"
  },
  {
    "text": "the instances in the cluster the",
    "start": "584929",
    "end": "587079"
  },
  {
    "text": "placement engine enables you to be able",
    "start": "587079",
    "end": "589339"
  },
  {
    "text": "to set rules to target landing your",
    "start": "589339",
    "end": "592279"
  },
  {
    "text": "containers on the right instances based",
    "start": "592279",
    "end": "594470"
  },
  {
    "text": "on your own preferences and then finally",
    "start": "594470",
    "end": "597499"
  },
  {
    "text": "the advanced regi link features help",
    "start": "597499",
    "end": "599869"
  },
  {
    "text": "maintain the desired state of that",
    "start": "599869",
    "end": "601970"
  },
  {
    "text": "application small new containers to",
    "start": "601970",
    "end": "604639"
  },
  {
    "text": "automatically respond to scaling needs",
    "start": "604639",
    "end": "606259"
  },
  {
    "text": "and maintain resiliency by deploying",
    "start": "606259",
    "end": "609110"
  },
  {
    "text": "across multiple ability zones while this",
    "start": "609110",
    "end": "612019"
  },
  {
    "text": "at the same time being resource of air",
    "start": "612019",
    "end": "613790"
  },
  {
    "text": "of the underlying compute so if you",
    "start": "613790",
    "end": "616160"
  },
  {
    "start": "615000",
    "end": "620000"
  },
  {
    "text": "actually look at the instances if you",
    "start": "616160",
    "end": "618319"
  },
  {
    "text": "actually double-click down it actually",
    "start": "618319",
    "end": "620809"
  },
  {
    "text": "reveals that there's additional",
    "start": "620809",
    "end": "622279"
  },
  {
    "text": "supporting software that you need to run",
    "start": "622279",
    "end": "624559"
  },
  {
    "text": "maintain patch on all your virtual",
    "start": "624559",
    "end": "627319"
  },
  {
    "text": "machines to support your containers like",
    "start": "627319",
    "end": "629509"
  },
  {
    "text": "the docker agent and the easiest agent",
    "start": "629509",
    "end": "632360"
  },
  {
    "text": "so the real picture looked something",
    "start": "632360",
    "end": "635239"
  },
  {
    "text": "like this",
    "start": "635239",
    "end": "635720"
  },
  {
    "text": "and there are these additional layers of",
    "start": "635720",
    "end": "638329"
  },
  {
    "start": "636000",
    "end": "644000"
  },
  {
    "text": "management you need to be aware of when",
    "start": "638329",
    "end": "640759"
  },
  {
    "text": "all you wanted to do was run containers",
    "start": "640759",
    "end": "643179"
  },
  {
    "text": "so far gate really supports for ECS",
    "start": "643179",
    "end": "647199"
  },
  {
    "start": "644000",
    "end": "669000"
  },
  {
    "text": "enables you to do just that a fully",
    "start": "647199",
    "end": "650029"
  },
  {
    "text": "managed orchid orchestration as well as",
    "start": "650029",
    "end": "652489"
  },
  {
    "text": "data plain experience bringing your",
    "start": "652489",
    "end": "654139"
  },
  {
    "text": "focus to only those containers so let's",
    "start": "654139",
    "end": "657139"
  },
  {
    "text": "talk about how to use Fargate BDCs you",
    "start": "657139",
    "end": "660319"
  },
  {
    "text": "want to think about Fargate as a",
    "start": "660319",
    "end": "661699"
  },
  {
    "text": "technology and not really a different",
    "start": "661699",
    "end": "664069"
  },
  {
    "text": "service per se when using it with ECS",
    "start": "664069",
    "end": "666840"
  },
  {
    "text": "that is no new API student as such now",
    "start": "666840",
    "end": "669570"
  },
  {
    "start": "669000",
    "end": "746000"
  },
  {
    "text": "here's a screenshot of ECS when you",
    "start": "669570",
    "end": "671550"
  },
  {
    "text": "define an application called",
    "start": "671550",
    "end": "673529"
  },
  {
    "text": "a task definition you are actually",
    "start": "673529",
    "end": "675600"
  },
  {
    "text": "presented with an option to select",
    "start": "675600",
    "end": "677850"
  },
  {
    "text": "compatibilities with a launch time",
    "start": "677850",
    "end": "679520"
  },
  {
    "text": "Fargate is just a launch time if you",
    "start": "679520",
    "end": "682260"
  },
  {
    "text": "want to run your containers on the ec2",
    "start": "682260",
    "end": "684089"
  },
  {
    "text": "instances registered with your ECS",
    "start": "684089",
    "end": "686190"
  },
  {
    "text": "cluster that is the easy to launch time",
    "start": "686190",
    "end": "688830"
  },
  {
    "text": "that's another option as well so you",
    "start": "688830",
    "end": "691350"
  },
  {
    "text": "continue to define your applications as",
    "start": "691350",
    "end": "693390"
  },
  {
    "text": "you do for ECS today and use the same",
    "start": "693390",
    "end": "696240"
  },
  {
    "text": "set of api's running containers as",
    "start": "696240",
    "end": "699000"
  },
  {
    "text": "Fargate on ec2 or even easy to launch",
    "start": "699000",
    "end": "701610"
  },
  {
    "text": "type is really a launch type decision so",
    "start": "701610",
    "end": "703770"
  },
  {
    "text": "there's no additional plug-in required",
    "start": "703770",
    "end": "705630"
  },
  {
    "text": "as such to be added to run to your",
    "start": "705630",
    "end": "707550"
  },
  {
    "text": "containers as Fargate and because you",
    "start": "707550",
    "end": "710820"
  },
  {
    "text": "continue to leverage the same constructs",
    "start": "710820",
    "end": "712740"
  },
  {
    "text": "and api is not only is your migration",
    "start": "712740",
    "end": "715050"
  },
  {
    "text": "between ec2 and Fargate very easy but",
    "start": "715050",
    "end": "717750"
  },
  {
    "text": "you can draw a far get eyes service and",
    "start": "717750",
    "end": "720029"
  },
  {
    "text": "one that runs on your ec2 instances",
    "start": "720029",
    "end": "721910"
  },
  {
    "text": "side-by-side within that same cluster no",
    "start": "721910",
    "end": "724350"
  },
  {
    "text": "problem at all so you can get the",
    "start": "724350",
    "end": "726390"
  },
  {
    "text": "flexibility in picking the launch time",
    "start": "726390",
    "end": "727860"
  },
  {
    "text": "for your purposes without actually",
    "start": "727860",
    "end": "730170"
  },
  {
    "text": "breaking the model of colocation or for",
    "start": "730170",
    "end": "732630"
  },
  {
    "text": "different applications so let's actually",
    "start": "732630",
    "end": "735360"
  },
  {
    "text": "look at how one does this let's actually",
    "start": "735360",
    "end": "737580"
  },
  {
    "text": "walk through a demo which actually show",
    "start": "737580",
    "end": "739860"
  },
  {
    "text": "you a screencast video that I've",
    "start": "739860",
    "end": "741930"
  },
  {
    "text": "recorded to see what it takes to set",
    "start": "741930",
    "end": "744270"
  },
  {
    "text": "this up so let's start with this so",
    "start": "744270",
    "end": "746940"
  },
  {
    "start": "746000",
    "end": "896000"
  },
  {
    "text": "we'll start with creating a cluster as",
    "start": "746940",
    "end": "749040"
  },
  {
    "text": "you can see that there are various",
    "start": "749040",
    "end": "750690"
  },
  {
    "text": "templates we'll create a new one anyway",
    "start": "750690",
    "end": "752850"
  },
  {
    "text": "we'll plot it call it flask demo cluster",
    "start": "752850",
    "end": "757440"
  },
  {
    "text": "and then once you create it there are",
    "start": "757440",
    "end": "759720"
  },
  {
    "text": "certain parameters that will define very",
    "start": "759720",
    "end": "762570"
  },
  {
    "text": "simple to do there are two launch types",
    "start": "762570",
    "end": "765420"
  },
  {
    "text": "as we mentioned I will choose the",
    "start": "765420",
    "end": "768180"
  },
  {
    "text": "Fargate launch type because that's what",
    "start": "768180",
    "end": "769950"
  },
  {
    "text": "this demo is about we'll choose a couple",
    "start": "769950",
    "end": "771570"
  },
  {
    "text": "of tasks under the service there's a VPC",
    "start": "771570",
    "end": "774540"
  },
  {
    "text": "configuration which all of you should be",
    "start": "774540",
    "end": "776010"
  },
  {
    "text": "aware of we'll just select an existing",
    "start": "776010",
    "end": "778709"
  },
  {
    "text": "one to make it easier and then we'll",
    "start": "778709",
    "end": "781680"
  },
  {
    "text": "configure the application load balancer",
    "start": "781680",
    "end": "783450"
  },
  {
    "text": "we have been existing here as well and",
    "start": "783450",
    "end": "785790"
  },
  {
    "text": "we'll configure the different parameters",
    "start": "785790",
    "end": "787770"
  },
  {
    "text": "of the alb as well we will then",
    "start": "787770",
    "end": "791430"
  },
  {
    "text": "configure an auto scaling group to sort",
    "start": "791430",
    "end": "794310"
  },
  {
    "text": "of add and remove tasks automatically to",
    "start": "794310",
    "end": "796980"
  },
  {
    "text": "match scaling demands we'll put in a",
    "start": "796980",
    "end": "798930"
  },
  {
    "text": "policy there",
    "start": "798930",
    "end": "800060"
  },
  {
    "text": "and then once me over the next step will",
    "start": "800060",
    "end": "804560"
  },
  {
    "text": "actually review the configuration and",
    "start": "804560",
    "end": "806120"
  },
  {
    "text": "create this new service as you can see",
    "start": "806120",
    "end": "809180"
  },
  {
    "text": "it's creating all of this in the",
    "start": "809180",
    "end": "810350"
  },
  {
    "text": "background automatically and very soon",
    "start": "810350",
    "end": "812450"
  },
  {
    "text": "we should have a service with Fargate",
    "start": "812450",
    "end": "814790"
  },
  {
    "text": "launch type up and running in no time",
    "start": "814790",
    "end": "818350"
  },
  {
    "text": "there you are you can see all the",
    "start": "818350",
    "end": "821360"
  },
  {
    "text": "configuration settings there if we click",
    "start": "821360",
    "end": "824510"
  },
  {
    "text": "on individually on some of them it will",
    "start": "824510",
    "end": "826790"
  },
  {
    "text": "actually show you the differences the",
    "start": "826790",
    "end": "829040"
  },
  {
    "text": "group name the VB CID",
    "start": "829040",
    "end": "832269"
  },
  {
    "text": "this obviously load-balanced under the",
    "start": "833060",
    "end": "835460"
  },
  {
    "text": "application load balancer",
    "start": "835460",
    "end": "837170"
  },
  {
    "text": "it shows the tasks as well one of them",
    "start": "837170",
    "end": "840050"
  },
  {
    "text": "provisioning one of them that's already",
    "start": "840050",
    "end": "841430"
  },
  {
    "text": "running it so shows the security group",
    "start": "841430",
    "end": "845330"
  },
  {
    "text": "rules and what are the rules and the",
    "start": "845330",
    "end": "847520"
  },
  {
    "text": "inbound ports that have been opened",
    "start": "847520",
    "end": "849140"
  },
  {
    "text": "so let's actually look at the DNS link",
    "start": "849140",
    "end": "851900"
  },
  {
    "text": "for this very quickly to see the hello",
    "start": "851900",
    "end": "856180"
  },
  {
    "text": "forgetful message that I've put in so",
    "start": "856180",
    "end": "859100"
  },
  {
    "text": "now that the application load balance is",
    "start": "859100",
    "end": "860750"
  },
  {
    "text": "up and running we will go to the link",
    "start": "860750",
    "end": "862460"
  },
  {
    "text": "just put it in a browser and there you",
    "start": "862460",
    "end": "865100"
  },
  {
    "text": "go this is just a small a low voice",
    "start": "865100",
    "end": "866720"
  },
  {
    "text": "message I've put in and this is",
    "start": "866720",
    "end": "869180"
  },
  {
    "text": "important we had to launch types as you",
    "start": "869180",
    "end": "871040"
  },
  {
    "text": "can see they can coexist with a domain",
    "start": "871040",
    "end": "873320"
  },
  {
    "text": "name space separating them and you can",
    "start": "873320",
    "end": "877130"
  },
  {
    "text": "have the ec2 and far gate type clusters",
    "start": "877130",
    "end": "879110"
  },
  {
    "text": "or the services under the same cluster",
    "start": "879110",
    "end": "881090"
  },
  {
    "text": "running with no problem at all if I",
    "start": "881090",
    "end": "883910"
  },
  {
    "text": "actually go to one of the tasks you can",
    "start": "883910",
    "end": "887900"
  },
  {
    "text": "see the tasks running under both the ec2",
    "start": "887900",
    "end": "890360"
  },
  {
    "text": "and far gate type and they are",
    "start": "890360",
    "end": "891890"
  },
  {
    "text": "distinctly shown there as well which",
    "start": "891890",
    "end": "893540"
  },
  {
    "text": "means you can manage them from there on",
    "start": "893540",
    "end": "896920"
  },
  {
    "text": "so that was a simple demonstration of",
    "start": "896920",
    "end": "899529"
  },
  {
    "text": "launching an EC s cluster with Fargate",
    "start": "899529",
    "end": "902170"
  },
  {
    "text": "hope that was useful now let's look at",
    "start": "902170",
    "end": "904149"
  },
  {
    "text": "what we look at the demo we will visit",
    "start": "904149",
    "end": "906999"
  },
  {
    "text": "some of the key product areas we will",
    "start": "906999",
    "end": "908949"
  },
  {
    "text": "begin with the networking portion in the",
    "start": "908949",
    "end": "911559"
  },
  {
    "start": "911000",
    "end": "924000"
  },
  {
    "text": "fire gate model even though there is no",
    "start": "911559",
    "end": "913629"
  },
  {
    "text": "instances that you actually manage each",
    "start": "913629",
    "end": "916059"
  },
  {
    "text": "task gets its own dedicated elastic",
    "start": "916059",
    "end": "918999"
  },
  {
    "text": "network interface or an Eni as we call",
    "start": "918999",
    "end": "921669"
  },
  {
    "text": "it in a separate network namespace this",
    "start": "921669",
    "end": "924639"
  },
  {
    "start": "924000",
    "end": "962000"
  },
  {
    "text": "is a recently launched task called as",
    "start": "924639",
    "end": "926470"
  },
  {
    "text": "networking mode or AWS VPC mode and is a",
    "start": "926470",
    "end": "930129"
  },
  {
    "text": "default way of running your Fargate",
    "start": "930129",
    "end": "932230"
  },
  {
    "text": "tasks with ECS it provides the required",
    "start": "932230",
    "end": "935379"
  },
  {
    "text": "separation of responsibilities where you",
    "start": "935379",
    "end": "937959"
  },
  {
    "text": "as a user don't really have to worry",
    "start": "937959",
    "end": "940119"
  },
  {
    "text": "about the underlying infrastructure as",
    "start": "940119",
    "end": "941709"
  },
  {
    "text": "yet and yet you actually retain full",
    "start": "941709",
    "end": "944350"
  },
  {
    "text": "control of networking policies for",
    "start": "944350",
    "end": "946359"
  },
  {
    "text": "applications wire security groups as",
    "start": "946359",
    "end": "948759"
  },
  {
    "text": "well as get powerful eni capabilities",
    "start": "948759",
    "end": "951459"
  },
  {
    "text": "such as flow logs and as you can see the",
    "start": "951459",
    "end": "954429"
  },
  {
    "text": "public IP addresses are supported so you",
    "start": "954429",
    "end": "957220"
  },
  {
    "text": "get a public IP for tasks in submit one",
    "start": "957220",
    "end": "959769"
  },
  {
    "text": "and three right here in the diagram we",
    "start": "959769",
    "end": "962679"
  },
  {
    "start": "962000",
    "end": "982000"
  },
  {
    "text": "see customers taking advantage of the",
    "start": "962679",
    "end": "964299"
  },
  {
    "text": "capabilities of the application load",
    "start": "964299",
    "end": "966369"
  },
  {
    "text": "balancer and they recently launched",
    "start": "966369",
    "end": "968079"
  },
  {
    "text": "network load balancer as well you",
    "start": "968079",
    "end": "970689"
  },
  {
    "text": "continue to use them the way ECS",
    "start": "970689",
    "end": "972759"
  },
  {
    "text": "provides the integration today and in",
    "start": "972759",
    "end": "974739"
  },
  {
    "text": "faregates case you only register the IPS",
    "start": "974739",
    "end": "977139"
  },
  {
    "text": "belonging to your tasks with the load",
    "start": "977139",
    "end": "979119"
  },
  {
    "text": "balancers as we saw in the demo so we",
    "start": "979119",
    "end": "982660"
  },
  {
    "text": "talked about how the network security",
    "start": "982660",
    "end": "984489"
  },
  {
    "text": "using PPC security group rules enforces",
    "start": "984489",
    "end": "988029"
  },
  {
    "text": "network access",
    "start": "988029",
    "end": "988749"
  },
  {
    "text": "let's talk further let's talk about the",
    "start": "988749",
    "end": "990999"
  },
  {
    "text": "other security aspects we will start",
    "start": "990999",
    "end": "993339"
  },
  {
    "text": "with the level of isolation and how you",
    "start": "993339",
    "end": "995709"
  },
  {
    "text": "could think about it when planning your",
    "start": "995709",
    "end": "997629"
  },
  {
    "text": "clusters at the beginning so you can",
    "start": "997629",
    "end": "1000119"
  },
  {
    "text": "continue to use the notion of a cluster",
    "start": "1000119",
    "end": "1002039"
  },
  {
    "text": "when using Fargate BDCs but Fargate even",
    "start": "1002039",
    "end": "1005730"
  },
  {
    "text": "though there are no easy to instances to",
    "start": "1005730",
    "end": "1007139"
  },
  {
    "text": "run a cluster is an entity to provide",
    "start": "1007139",
    "end": "1009839"
  },
  {
    "text": "logical isolation of that namespace and",
    "start": "1009839",
    "end": "1012629"
  },
  {
    "text": "so in easiest with ec2 your container",
    "start": "1012629",
    "end": "1015720"
  },
  {
    "text": "instances are registered with the",
    "start": "1015720",
    "end": "1017009"
  },
  {
    "text": "cluster and your tasks are running on",
    "start": "1017009",
    "end": "1019289"
  },
  {
    "text": "shared infrastructure similarly your far",
    "start": "1019289",
    "end": "1022350"
  },
  {
    "text": "gate tasks in the production cluster may",
    "start": "1022350",
    "end": "1024928"
  },
  {
    "text": "share the same underlying infrastructure",
    "start": "1024929",
    "end": "1026970"
  },
  {
    "text": "as other tasks within that same cluster",
    "start": "1026970",
    "end": "1029819"
  },
  {
    "text": "but the notification application in prod",
    "start": "1029820",
    "end": "1033180"
  },
  {
    "text": "will never share them infrastructure",
    "start": "1033180",
    "end": "1035160"
  },
  {
    "text": "with any other tasks from dev QA or the",
    "start": "1035160",
    "end": "1038339"
  },
  {
    "text": "beta clusters there are permissions you",
    "start": "1038340",
    "end": "1041370"
  },
  {
    "start": "1039000",
    "end": "1062000"
  },
  {
    "text": "can control at three distinct and",
    "start": "1041370",
    "end": "1043410"
  },
  {
    "text": "different layers when it comes to",
    "start": "1043410",
    "end": "1044939"
  },
  {
    "text": "managing your faulted environment the",
    "start": "1044940",
    "end": "1047640"
  },
  {
    "text": "easiest cluster level permissions enable",
    "start": "1047640",
    "end": "1049950"
  },
  {
    "text": "you to control which user can run",
    "start": "1049950",
    "end": "1052590"
  },
  {
    "text": "applications in the cluster so if you",
    "start": "1052590",
    "end": "1054690"
  },
  {
    "text": "really have the same set of applications",
    "start": "1054690",
    "end": "1056430"
  },
  {
    "text": "running Devon prod you can separate the",
    "start": "1056430",
    "end": "1058830"
  },
  {
    "text": "user permissions based on the",
    "start": "1058830",
    "end": "1060150"
  },
  {
    "text": "environment they should have access to",
    "start": "1060150",
    "end": "1062060"
  },
  {
    "start": "1062000",
    "end": "1084000"
  },
  {
    "text": "then secondly you have these AWS",
    "start": "1062060",
    "end": "1065280"
  },
  {
    "text": "resources like simple storage our simple",
    "start": "1065280",
    "end": "1069270"
  },
  {
    "text": "storage service the buckets for s3 or",
    "start": "1069270",
    "end": "1071630"
  },
  {
    "text": "r9m ODB tables that need to be accessed",
    "start": "1071630",
    "end": "1074190"
  },
  {
    "text": "as an IM user the tasks",
    "start": "1074190",
    "end": "1077430"
  },
  {
    "text": "I am role runs your containers as an I",
    "start": "1077430",
    "end": "1080070"
  },
  {
    "text": "am user so you can actually access these",
    "start": "1080070",
    "end": "1082170"
  },
  {
    "text": "resources very easily",
    "start": "1082170",
    "end": "1083690"
  },
  {
    "text": "lastly you can give ECS the ability to",
    "start": "1083690",
    "end": "1086850"
  },
  {
    "start": "1084000",
    "end": "1103000"
  },
  {
    "text": "perform certain actions like your tasks",
    "start": "1086850",
    "end": "1089160"
  },
  {
    "text": "like send logs to cloud watch or pull",
    "start": "1089160",
    "end": "1092160"
  },
  {
    "text": "ECR images we call the role to perform",
    "start": "1092160",
    "end": "1095160"
  },
  {
    "text": "these actions a task execution role all",
    "start": "1095160",
    "end": "1098580"
  },
  {
    "text": "these permissions apply to both ec2 as",
    "start": "1098580",
    "end": "1101280"
  },
  {
    "text": "well as the Fargate launch types now you",
    "start": "1101280",
    "end": "1104310"
  },
  {
    "text": "can run your containers very easily with",
    "start": "1104310",
    "end": "1106200"
  },
  {
    "text": "no infrastructure management involved",
    "start": "1106200",
    "end": "1108510"
  },
  {
    "text": "but where do you actually store the",
    "start": "1108510",
    "end": "1110370"
  },
  {
    "text": "final images so Amazon ECR is a fully",
    "start": "1110370",
    "end": "1114060"
  },
  {
    "start": "1112000",
    "end": "1140000"
  },
  {
    "text": "managed highly available registry with a",
    "start": "1114060",
    "end": "1116520"
  },
  {
    "text": "global footprint or offer for your",
    "start": "1116520",
    "end": "1119040"
  },
  {
    "text": "container images the additional",
    "start": "1119040",
    "end": "1121050"
  },
  {
    "text": "capabilities that have been built with",
    "start": "1121050",
    "end": "1122880"
  },
  {
    "text": "Fargate why our task execution role",
    "start": "1122880",
    "end": "1125250"
  },
  {
    "text": "really enables us to provide seamless",
    "start": "1125250",
    "end": "1127880"
  },
  {
    "text": "authentication to be able to pull those",
    "start": "1127880",
    "end": "1130080"
  },
  {
    "text": "images from ECR similarly if you're",
    "start": "1130080",
    "end": "1133200"
  },
  {
    "text": "actually using a public repository like",
    "start": "1133200",
    "end": "1135150"
  },
  {
    "text": "docker hub you can actually continue to",
    "start": "1135150",
    "end": "1137340"
  },
  {
    "text": "do so without any changes we do plan to",
    "start": "1137340",
    "end": "1140730"
  },
  {
    "start": "1140000",
    "end": "1166000"
  },
  {
    "text": "support an add support for third-party",
    "start": "1140730",
    "end": "1143100"
  },
  {
    "text": "private repositories over time now what",
    "start": "1143100",
    "end": "1146490"
  },
  {
    "text": "kind of visibility and monitoring can",
    "start": "1146490",
    "end": "1148260"
  },
  {
    "text": "one have to this well all application",
    "start": "1148260",
    "end": "1151050"
  },
  {
    "text": "logs are sent to cloud watch locks and",
    "start": "1151050",
    "end": "1153300"
  },
  {
    "text": "cloud watch events available in your AWS",
    "start": "1153300",
    "end": "1156240"
  },
  {
    "text": "account in addition when you want to set",
    "start": "1156240",
    "end": "1158730"
  },
  {
    "text": "up scaling rules for your services you",
    "start": "1158730",
    "end": "1161100"
  },
  {
    "text": "can actually monitor these",
    "start": "1161100",
    "end": "1162730"
  },
  {
    "text": "service CPU and service memory you play",
    "start": "1162730",
    "end": "1165160"
  },
  {
    "text": "the same very easily and lastly what's a",
    "start": "1165160",
    "end": "1167890"
  },
  {
    "start": "1166000",
    "end": "1173000"
  },
  {
    "text": "cost for running all of this so let's",
    "start": "1167890",
    "end": "1169690"
  },
  {
    "text": "look at how pricing and configuration",
    "start": "1169690",
    "end": "1171790"
  },
  {
    "text": "works for forget running the ECS",
    "start": "1171790",
    "end": "1174549"
  },
  {
    "start": "1173000",
    "end": "1213000"
  },
  {
    "text": "orchestration in itself continues to be",
    "start": "1174549",
    "end": "1177010"
  },
  {
    "text": "at no additional charge at all you only",
    "start": "1177010",
    "end": "1179200"
  },
  {
    "text": "pay for what you request at the pass",
    "start": "1179200",
    "end": "1181450"
  },
  {
    "text": "level here we have identified task level",
    "start": "1181450",
    "end": "1184750"
  },
  {
    "text": "CPU and memory at 1v CPU and 3gb",
    "start": "1184750",
    "end": "1188470"
  },
  {
    "text": "respectively so you get what you define",
    "start": "1188470",
    "end": "1191470"
  },
  {
    "text": "at the task level and are charged on a",
    "start": "1191470",
    "end": "1194169"
  },
  {
    "text": "per second basis and only for the time",
    "start": "1194169",
    "end": "1196809"
  },
  {
    "text": "your task is in actual use the billing",
    "start": "1196809",
    "end": "1199960"
  },
  {
    "text": "is on a per second granularity and you",
    "start": "1199960",
    "end": "1202630"
  },
  {
    "text": "configure and pay for the task level",
    "start": "1202630",
    "end": "1204460"
  },
  {
    "text": "dimensions independently so in other",
    "start": "1204460",
    "end": "1207250"
  },
  {
    "text": "words you pay per CPU second and per GB",
    "start": "1207250",
    "end": "1210910"
  },
  {
    "text": "second for memory so here are the",
    "start": "1210910",
    "end": "1213820"
  },
  {
    "start": "1213000",
    "end": "1237000"
  },
  {
    "text": "various configurations that are",
    "start": "1213820",
    "end": "1215559"
  },
  {
    "text": "supported today with AWS file gain as",
    "start": "1215559",
    "end": "1217780"
  },
  {
    "text": "you can see you can have from 2 GB per V",
    "start": "1217780",
    "end": "1221530"
  },
  {
    "text": "CPU to generally up to 8 GB per V CPU",
    "start": "1221530",
    "end": "1224799"
  },
  {
    "text": "for the various configurations that we",
    "start": "1224799",
    "end": "1226960"
  },
  {
    "text": "have today so match your workload",
    "start": "1226960",
    "end": "1229030"
  },
  {
    "text": "requirements closely where they are",
    "start": "1229030",
    "end": "1231070"
  },
  {
    "text": "general-purpose computer intensive or",
    "start": "1231070",
    "end": "1233440"
  },
  {
    "text": "even memory optimized the choice is",
    "start": "1233440",
    "end": "1235780"
  },
  {
    "text": "yours and the choices are broad and",
    "start": "1235780",
    "end": "1237190"
  },
  {
    "start": "1237000",
    "end": "1259000"
  },
  {
    "text": "finally talking about SLS remember we",
    "start": "1237190",
    "end": "1240549"
  },
  {
    "text": "have service level agreements for our",
    "start": "1240549",
    "end": "1242140"
  },
  {
    "text": "core AWS building block services like",
    "start": "1242140",
    "end": "1244450"
  },
  {
    "text": "our lastik compute service and our",
    "start": "1244450",
    "end": "1246700"
  },
  {
    "text": "elastic block storage so here we are",
    "start": "1246700",
    "end": "1249340"
  },
  {
    "text": "actually extending the compute service",
    "start": "1249340",
    "end": "1251320"
  },
  {
    "text": "level agreement to include ECS and",
    "start": "1251320",
    "end": "1253630"
  },
  {
    "text": "Fargate and that stands at 99.99% for",
    "start": "1253630",
    "end": "1257350"
  },
  {
    "text": "that service for the region",
    "start": "1257350",
    "end": "1258520"
  },
  {
    "text": "now many customers have this question",
    "start": "1258520",
    "end": "1261250"
  },
  {
    "text": "with far gate and easy to launch types",
    "start": "1261250",
    "end": "1263890"
  },
  {
    "text": "available which one should I actually",
    "start": "1263890",
    "end": "1265960"
  },
  {
    "text": "pick for my workloads or if one way to",
    "start": "1265960",
    "end": "1268540"
  },
  {
    "text": "say it differently I like the simplicity",
    "start": "1268540",
    "end": "1270340"
  },
  {
    "text": "of our gate but when should I actually",
    "start": "1270340",
    "end": "1272380"
  },
  {
    "text": "consider using the easy to launch type",
    "start": "1272380",
    "end": "1274720"
  },
  {
    "text": "right how do you sort of differentiate",
    "start": "1274720",
    "end": "1276340"
  },
  {
    "text": "that and the answer to that is that far",
    "start": "1276340",
    "end": "1279400"
  },
  {
    "start": "1277000",
    "end": "1357000"
  },
  {
    "text": "gate and easy to launch types are",
    "start": "1279400",
    "end": "1280990"
  },
  {
    "text": "compatible with each other in the sense",
    "start": "1280990",
    "end": "1283360"
  },
  {
    "text": "that you can continue to use not only",
    "start": "1283360",
    "end": "1285160"
  },
  {
    "text": "the same primitives as discussed earlier",
    "start": "1285160",
    "end": "1287380"
  },
  {
    "text": "but also run within the same cluster",
    "start": "1287380",
    "end": "1290320"
  },
  {
    "text": "boundary and we saw the demo earlier as",
    "start": "1290320",
    "end": "1292750"
  },
  {
    "text": "well that there were two separate",
    "start": "1292750",
    "end": "1294940"
  },
  {
    "text": "clusters running",
    "start": "1294940",
    "end": "1296040"
  },
  {
    "text": "one each with falcon and one with ec2 so",
    "start": "1296040",
    "end": "1299610"
  },
  {
    "text": "you continually define your applications",
    "start": "1299610",
    "end": "1302190"
  },
  {
    "text": "as you do for ECS today and you use the",
    "start": "1302190",
    "end": "1305130"
  },
  {
    "text": "same api's running containers as far",
    "start": "1305130",
    "end": "1307950"
  },
  {
    "text": "gate or ec2 is really a launch time",
    "start": "1307950",
    "end": "1309990"
  },
  {
    "text": "decision there's no additional plug-in",
    "start": "1309990",
    "end": "1312600"
  },
  {
    "text": "to be added to your containers as far",
    "start": "1312600",
    "end": "1315330"
  },
  {
    "text": "yet",
    "start": "1315330",
    "end": "1315690"
  },
  {
    "text": "and because you continue to leverage the",
    "start": "1315690",
    "end": "1318150"
  },
  {
    "text": "same constructs and api's not only is",
    "start": "1318150",
    "end": "1321360"
  },
  {
    "text": "your migration between easier and",
    "start": "1321360",
    "end": "1322860"
  },
  {
    "text": "Fargate easy but you can run a",
    "start": "1322860",
    "end": "1325440"
  },
  {
    "text": "eyes service and one that runs on your",
    "start": "1325440",
    "end": "1328410"
  },
  {
    "text": "two instances side-by-side within that",
    "start": "1328410",
    "end": "1331050"
  },
  {
    "text": "same cluster so you'll get the",
    "start": "1331050",
    "end": "1333090"
  },
  {
    "text": "flexibility in picking the launch type",
    "start": "1333090",
    "end": "1334620"
  },
  {
    "text": "for your purposes without actually",
    "start": "1334620",
    "end": "1337050"
  },
  {
    "text": "breaking the model of colocation of your",
    "start": "1337050",
    "end": "1339720"
  },
  {
    "text": "applications so if you have use cases",
    "start": "1339720",
    "end": "1342390"
  },
  {
    "text": "that you need to roll your own version",
    "start": "1342390",
    "end": "1344460"
  },
  {
    "text": "of the Amazon machine images or you",
    "start": "1344460",
    "end": "1347100"
  },
  {
    "text": "would like to add something you know",
    "start": "1347100",
    "end": "1349140"
  },
  {
    "text": "some accompanying software that cannot",
    "start": "1349140",
    "end": "1351240"
  },
  {
    "text": "run as a container in your task",
    "start": "1351240",
    "end": "1352710"
  },
  {
    "text": "definition you should look to use the",
    "start": "1352710",
    "end": "1355020"
  },
  {
    "text": "easy to launch type option as well say",
    "start": "1355020",
    "end": "1357720"
  },
  {
    "start": "1357000",
    "end": "1408000"
  },
  {
    "text": "for example you have this ecommerce site",
    "start": "1357720",
    "end": "1360120"
  },
  {
    "text": "with different requirements for the",
    "start": "1360120",
    "end": "1362010"
  },
  {
    "text": "shopping cart or let's just say the",
    "start": "1362010",
    "end": "1364230"
  },
  {
    "text": "notifications app team would like to be",
    "start": "1364230",
    "end": "1366660"
  },
  {
    "text": "able to move to Fargate but they have a",
    "start": "1366660",
    "end": "1369240"
  },
  {
    "text": "different timeline which they plan to do",
    "start": "1369240",
    "end": "1371310"
  },
  {
    "text": "so so far great clusters are",
    "start": "1371310",
    "end": "1373860"
  },
  {
    "text": "heterogeneous you can actually run the",
    "start": "1373860",
    "end": "1376230"
  },
  {
    "text": "web app as an ECS service with launched",
    "start": "1376230",
    "end": "1378780"
  },
  {
    "text": "type as far gate and you can only see",
    "start": "1378780",
    "end": "1381420"
  },
  {
    "text": "your tasks across the various subnets",
    "start": "1381420",
    "end": "1383580"
  },
  {
    "text": "and availability zones you can continue",
    "start": "1383580",
    "end": "1386130"
  },
  {
    "text": "to run the shopping cart and",
    "start": "1386130",
    "end": "1387300"
  },
  {
    "text": "notifications app as easy to launch",
    "start": "1387300",
    "end": "1389580"
  },
  {
    "text": "types within the same cluster as the",
    "start": "1389580",
    "end": "1392010"
  },
  {
    "text": "Fargate powered web app and the network",
    "start": "1392010",
    "end": "1394380"
  },
  {
    "text": "boundary is there by applying uniform",
    "start": "1394380",
    "end": "1396630"
  },
  {
    "text": "set of policies in terms of I am",
    "start": "1396630",
    "end": "1398550"
  },
  {
    "text": "permissions as well as network access",
    "start": "1398550",
    "end": "1400860"
  },
  {
    "text": "rules so this is not just a one-way door",
    "start": "1400860",
    "end": "1403410"
  },
  {
    "text": "when you choose to run your containers",
    "start": "1403410",
    "end": "1405150"
  },
  {
    "text": "on Fargate or vice versa the other way",
    "start": "1405150",
    "end": "1407610"
  },
  {
    "text": "around",
    "start": "1407610",
    "end": "1408200"
  },
  {
    "start": "1408000",
    "end": "1448000"
  },
  {
    "text": "uses a snapshot of some of our early",
    "start": "1408200",
    "end": "1411180"
  },
  {
    "text": "adopter customers as you can see very",
    "start": "1411180",
    "end": "1413340"
  },
  {
    "text": "clearly it's a mix of customers like",
    "start": "1413340",
    "end": "1415680"
  },
  {
    "text": "Expedia to Autodesk to add roll our",
    "start": "1415680",
    "end": "1419460"
  },
  {
    "text": "disparate set of customers from varied",
    "start": "1419460",
    "end": "1421830"
  },
  {
    "text": "industry you can only obviously talk",
    "start": "1421830",
    "end": "1423930"
  },
  {
    "text": "about the ones that are publicly",
    "start": "1423930",
    "end": "1425610"
  },
  {
    "text": "referenceable customers but I can assure",
    "start": "1425610",
    "end": "1427410"
  },
  {
    "text": "you there are several other customers",
    "start": "1427410",
    "end": "1429389"
  },
  {
    "text": "as well running SES in either ec2 or",
    "start": "1429389",
    "end": "1432389"
  },
  {
    "text": "Fargate mode and as we continue to",
    "start": "1432389",
    "end": "1435029"
  },
  {
    "text": "launch this in more AWS regions we are",
    "start": "1435029",
    "end": "1438149"
  },
  {
    "text": "going to see an increase adoption",
    "start": "1438149",
    "end": "1439649"
  },
  {
    "text": "amongst our customers as they were",
    "start": "1439649",
    "end": "1441119"
  },
  {
    "text": "obviously shown interest in using far",
    "start": "1441119",
    "end": "1443879"
  },
  {
    "text": "grid apart including the customer base",
    "start": "1443879",
    "end": "1446129"
  },
  {
    "text": "that we had with EC yesterday you're our",
    "start": "1446129",
    "end": "1448649"
  },
  {
    "start": "1448000",
    "end": "1470000"
  },
  {
    "text": "partners that we've worked with to",
    "start": "1448649",
    "end": "1450659"
  },
  {
    "text": "enable integrations around security and",
    "start": "1450659",
    "end": "1452909"
  },
  {
    "text": "visibility",
    "start": "1452909",
    "end": "1453570"
  },
  {
    "text": "you might recognize many of them and may",
    "start": "1453570",
    "end": "1456479"
  },
  {
    "text": "also be using some of their products and",
    "start": "1456479",
    "end": "1458519"
  },
  {
    "text": "services and as has been the case in the",
    "start": "1458519",
    "end": "1461279"
  },
  {
    "text": "past we will continue to integrate",
    "start": "1461279",
    "end": "1463559"
  },
  {
    "text": "across a rich expanding partner",
    "start": "1463559",
    "end": "1465779"
  },
  {
    "text": "ecosystem over time and take feedback",
    "start": "1465779",
    "end": "1467849"
  },
  {
    "text": "from you - for additions so if you want",
    "start": "1467849",
    "end": "1470700"
  },
  {
    "text": "to get started you could actually start",
    "start": "1470700",
    "end": "1472709"
  },
  {
    "text": "with visiting our main page on our",
    "start": "1472709",
    "end": "1474419"
  },
  {
    "text": "website at aws.amazon.com slash pocket",
    "start": "1474419",
    "end": "1478259"
  },
  {
    "text": "and you will find all the needful in",
    "start": "1478259",
    "end": "1480450"
  },
  {
    "text": "food that you get from that page and",
    "start": "1480450",
    "end": "1482099"
  },
  {
    "text": "then move on from there for",
    "start": "1482099",
    "end": "1484039"
  },
  {
    "text": "documentation as well as other things to",
    "start": "1484039",
    "end": "1487139"
  },
  {
    "start": "1487000",
    "end": "1519000"
  },
  {
    "text": "gain more confidence and hands-on",
    "start": "1487139",
    "end": "1488700"
  },
  {
    "text": "experience with AWS you can access the",
    "start": "1488700",
    "end": "1492179"
  },
  {
    "text": "digital training build by the a SS",
    "start": "1492179",
    "end": "1494459"
  },
  {
    "text": "experts you could also attend our",
    "start": "1494459",
    "end": "1496769"
  },
  {
    "text": "instructor-led classes by qualified",
    "start": "1496769",
    "end": "1499139"
  },
  {
    "text": "eatables instructors and you can learn",
    "start": "1499139",
    "end": "1501269"
  },
  {
    "text": "how to design deploy and operate highly",
    "start": "1501269",
    "end": "1504659"
  },
  {
    "text": "available cost-effective and secure",
    "start": "1504659",
    "end": "1506399"
  },
  {
    "text": "applications on AWS and then you could",
    "start": "1506399",
    "end": "1510119"
  },
  {
    "text": "validate your technical expertise with",
    "start": "1510119",
    "end": "1512700"
  },
  {
    "text": "AWS and use practice exams to help you",
    "start": "1512700",
    "end": "1515789"
  },
  {
    "text": "prepare for your AWS certifications",
    "start": "1515789",
    "end": "1518599"
  },
  {
    "text": "AWS also has a wide partner ecosystem to",
    "start": "1518599",
    "end": "1522570"
  },
  {
    "start": "1519000",
    "end": "1543000"
  },
  {
    "text": "help you focus on your success and take",
    "start": "1522570",
    "end": "1525209"
  },
  {
    "text": "full advantage of all the business",
    "start": "1525209",
    "end": "1527849"
  },
  {
    "text": "benefits enablers has to offer so learn",
    "start": "1527849",
    "end": "1530279"
  },
  {
    "text": "more about our partner ecosystem from",
    "start": "1530279",
    "end": "1532379"
  },
  {
    "text": "the AWS partner ecosystem website that",
    "start": "1532379",
    "end": "1535200"
  },
  {
    "text": "we have and you will have find the right",
    "start": "1535200",
    "end": "1537029"
  },
  {
    "text": "APN partner needs when you visit an AWS",
    "start": "1537029",
    "end": "1540029"
  },
  {
    "text": "appian booth at a showcase finally I'd",
    "start": "1540029",
    "end": "1543749"
  },
  {
    "start": "1543000",
    "end": "1565000"
  },
  {
    "text": "like to thank you for attending the",
    "start": "1543749",
    "end": "1545759"
  },
  {
    "text": "session I hope you found it useful and",
    "start": "1545759",
    "end": "1548190"
  },
  {
    "text": "interesting and for now do provide us",
    "start": "1548190",
    "end": "1551999"
  },
  {
    "text": "for with your feedback and valuable",
    "start": "1551999",
    "end": "1553589"
  },
  {
    "text": "suggestions for us to improve in future",
    "start": "1553589",
    "end": "1555539"
  },
  {
    "text": "events",
    "start": "1555539",
    "end": "1556409"
  },
  {
    "text": "so we excited to get our service",
    "start": "1556409",
    "end": "1559619"
  },
  {
    "text": "to you and we always love to hear",
    "start": "1559619",
    "end": "1561179"
  },
  {
    "text": "feedback from a cast",
    "start": "1561179",
    "end": "1562770"
  },
  {
    "text": "by way for now Cheers",
    "start": "1562770",
    "end": "1566480"
  }
]