[
  {
    "start": "0",
    "end": "28000"
  },
  {
    "text": "welcome to dev 308 earn your DevOps black belt deployment scenarios with AWS",
    "start": "690",
    "end": "6810"
  },
  {
    "text": "CloudFormation my name is Chuck Meier I am a senior developer advocate freight",
    "start": "6810",
    "end": "12630"
  },
  {
    "text": "abyss cloud formation with me is Luiz my name is Luiz Cologne and I'm also a",
    "start": "12630",
    "end": "18449"
  },
  {
    "text": "senior developer advocate with AWS CloudFormation I've been with a group for a couple of years and I'm very",
    "start": "18449",
    "end": "24900"
  },
  {
    "text": "excited to be able to talk to you guys today mm-hmm right so we're very glad to have you here we're gonna be talking",
    "start": "24900",
    "end": "31529"
  },
  {
    "start": "28000",
    "end": "116000"
  },
  {
    "text": "about continuous integration and continuous delivery strategies for infrastructure right so take it away",
    "start": "31529",
    "end": "39360"
  },
  {
    "text": "thanks a lot so in order to do that what",
    "start": "39360",
    "end": "44399"
  },
  {
    "text": "we tend to do with presentations like this particularly like a 300 level presentation is we're going to start with some very brief kind of refreshers",
    "start": "44399",
    "end": "51840"
  },
  {
    "text": "both on conformation and sort of see ICD terminology just to kind of level set",
    "start": "51840",
    "end": "56969"
  },
  {
    "text": "everyone I'll try not to spend too much time on it but it's just kind of a good way to sort of make sure we're all on the same page we're all kind of talking",
    "start": "56969",
    "end": "62489"
  },
  {
    "text": "the same language once we have that together we're going to go ahead and start building an infrastructure",
    "start": "62489",
    "end": "68909"
  },
  {
    "text": "pipeline so we're going to start treating our infrastructures code doing all the things that we would expect you",
    "start": "68909",
    "end": "76200"
  },
  {
    "text": "should be able to do with code and we're gonna be talking about the tools that we're going to be integrating into those pipelines to succeed once we have that",
    "start": "76200",
    "end": "85830"
  },
  {
    "text": "sort of put together we're gonna dig in a little bit further on how to integrate in testing and validation to that",
    "start": "85830",
    "end": "91530"
  },
  {
    "text": "pipeline and then we're gonna hand off to Luis who's going to talk a little bit more about full stack deployment",
    "start": "91530",
    "end": "97829"
  },
  {
    "text": "scenarios right so where you're deploying your infrastructure alongside your application in sort of a continuous",
    "start": "97829",
    "end": "103530"
  },
  {
    "text": "manner and we're going to finish up with serverless deployments which have a few additional nuances so there's sort of an",
    "start": "103530",
    "end": "110009"
  },
  {
    "text": "inheritance here as we learn stuff it'll all apply it just sort of gets more nuanced as we go along okay so anything",
    "start": "110009",
    "end": "118829"
  },
  {
    "start": "116000",
    "end": "220000"
  },
  {
    "text": "that's not a 400 level session I like to put this slide in first of all just hands up who in the room who are active",
    "start": "118829",
    "end": "125189"
  },
  {
    "text": "cloud formation users already okay cool and who are here because they're interested in sort of getting into",
    "start": "125189",
    "end": "131009"
  },
  {
    "text": "infrastructure as code few folks okay so I'm just gonna spend a little bit of time on the slide this is",
    "start": "131009",
    "end": "137400"
  },
  {
    "text": "my one slide version of what is CloudFormation and so just to kind of go through it quickly cloud formation is",
    "start": "137400",
    "end": "143930"
  },
  {
    "text": "AWS is infrastructure as codes service so it's a service that sits up in your",
    "start": "143930",
    "end": "150720"
  },
  {
    "text": "account and you describe the infrastructure that you would like to deploy in a text file that could be",
    "start": "150720",
    "end": "157830"
  },
  {
    "text": "written in neon wall or JSON you might write it yourself it might be generated by a tool but however you sort of create",
    "start": "157830",
    "end": "165630"
  },
  {
    "text": "that file once you have it you put it into an s3 bucket in your account and",
    "start": "165630",
    "end": "170700"
  },
  {
    "text": "you tell CloudFormation where that file is the cloud formation service then",
    "start": "170700",
    "end": "177030"
  },
  {
    "text": "retrieves that file processes it determines the appropriate order to start deploying infrastructure for you",
    "start": "177030",
    "end": "182910"
  },
  {
    "text": "and then has a whole workflow on the back side to provision things in the correct order make sure that they",
    "start": "182910",
    "end": "187950"
  },
  {
    "text": "stabilize appropriately and unless you know at the end once everything's available and ready to use as that",
    "start": "187950",
    "end": "196050"
  },
  {
    "text": "infrastructure sort of continues through its life cycle you have opportunities to modify that template and then perform",
    "start": "196050",
    "end": "202290"
  },
  {
    "text": "updates and Confirmation will try to figure out what has changed and then make the appropriate API calls on the back side to make your infrastructure",
    "start": "202290",
    "end": "209190"
  },
  {
    "text": "match that new version of the template okay so that's sort of the basic version of cloud formation lots of folks",
    "start": "209190",
    "end": "215459"
  },
  {
    "text": "sounds like they you're already using it but that kind of helps everyone understand where we are with it okay",
    "start": "215459",
    "end": "221820"
  },
  {
    "text": "so moving on from that talking about CI CD who who here is has some sort of",
    "start": "221820",
    "end": "228060"
  },
  {
    "text": "continuous integration continuous delivery pipeline going already ok for a code and stuff awesome again we're just",
    "start": "228060",
    "end": "234959"
  },
  {
    "text": "going to kind of make sure that we're all speaking the same language these are some basic concepts around continuous",
    "start": "234959",
    "end": "240660"
  },
  {
    "text": "integration continuous delivery and continuous deployment so you know we assume you know a little bit about this",
    "start": "240660",
    "end": "246600"
  },
  {
    "text": "already but just to make sure we're all speaking the same language continuous integration taking source code going",
    "start": "246600",
    "end": "253470"
  },
  {
    "text": "ahead and compiling it down generating artifacts that are ready to go out into your environments continuous delivery or",
    "start": "253470",
    "end": "259980"
  },
  {
    "text": "continuous deployment is taking those artifacts and then orchestrating pushing",
    "start": "259980",
    "end": "265410"
  },
  {
    "text": "them up into environments sort of an organized manner biggest difference between continuous delivery",
    "start": "265410",
    "end": "270530"
  },
  {
    "text": "and continuous deployment is whether or not you keep on production your appetite for just going for it and getting things",
    "start": "270530",
    "end": "277520"
  },
  {
    "text": "all the way into production because of your confidence in your level of testing that you're doing up into that point",
    "start": "277520",
    "end": "283450"
  },
  {
    "text": "right so the most important thing about the slide though is the four categories at the top the source build test and",
    "start": "283450",
    "end": "290960"
  },
  {
    "text": "promote and that's kind of the stuff that we're going to carry forward as we start taking these concepts and sort of",
    "start": "290960",
    "end": "297260"
  },
  {
    "text": "mapping them on to infrastructure right so we're gonna be talking about versioning building your your artifacts",
    "start": "297260",
    "end": "304280"
  },
  {
    "text": "and we're gonna be talking about that promotion process as well right so we",
    "start": "304280",
    "end": "309770"
  },
  {
    "start": "308000",
    "end": "390000"
  },
  {
    "text": "say very often your infrastructure treat your infrastructure as code but you know",
    "start": "309770",
    "end": "315440"
  },
  {
    "text": "now your infrastructure is code this is this is something that you need to accept embrace and treat it that way and",
    "start": "315440",
    "end": "323780"
  },
  {
    "text": "even those of us that have been doing this for a while haven't necessarily done that there haven't really been the",
    "start": "323780",
    "end": "329570"
  },
  {
    "text": "tools to do the types of testing the types of validation that you have that",
    "start": "329570",
    "end": "334820"
  },
  {
    "text": "gives you that level of confidence so I see we've got a lot of CloudFormation users who's opened up a file and then",
    "start": "334820",
    "end": "341810"
  },
  {
    "text": "just thrown some JSON or a mole in it to build their template okay and then who's",
    "start": "341810",
    "end": "347300"
  },
  {
    "text": "taken that template and just uploaded it to the console and seen what happens and",
    "start": "347300",
    "end": "353470"
  },
  {
    "text": "then who's come back an hour later to see if it's finished rolling back",
    "start": "353470",
    "end": "359030"
  },
  {
    "text": "appropriately right okay okay so that's what we want to",
    "start": "359030",
    "end": "364190"
  },
  {
    "text": "avoid right we wouldn't do that with our application code we would just throw into an environment and hope for the",
    "start": "364190",
    "end": "369289"
  },
  {
    "text": "best only some of us would right I don't know I was in college once but we should",
    "start": "369289",
    "end": "375830"
  },
  {
    "text": "be treating it like code we should be doing all the same things we should be doing the version control we should be doing integration testing right that",
    "start": "375830",
    "end": "382310"
  },
  {
    "text": "promotion through environments should be orchestrated it should be done in an organized and consistent manner and",
    "start": "382310",
    "end": "387860"
  },
  {
    "text": "that's what we're gonna do today okay so the first of those categories is source",
    "start": "387860",
    "end": "393440"
  },
  {
    "start": "390000",
    "end": "656000"
  },
  {
    "text": "right version control everything your cloud formation templates should be in",
    "start": "393440",
    "end": "399500"
  },
  {
    "text": "some sort of source the parameters that you're passing into your CloudFormation templates you can",
    "start": "399500",
    "end": "405200"
  },
  {
    "text": "put those in a JSON document will consume that that should be in source control right hopefully any",
    "start": "405200",
    "end": "410990"
  },
  {
    "text": "configuration management or shell scripts or any sort of helpers that you need you were already doing source",
    "start": "410990",
    "end": "416450"
  },
  {
    "text": "control with but that all needs to live together this is all pieces of your infrastructure as code you know so that",
    "start": "416450",
    "end": "423980"
  },
  {
    "text": "should be going into something like a git repository or you know a bit bucket if that's something you use at the very",
    "start": "423980",
    "end": "430370"
  },
  {
    "text": "least if you're throwing it all in an s3 bucket please just turn on versioning right but give you that version control",
    "start": "430370",
    "end": "436460"
  },
  {
    "text": "so that you can see how these pieces of code are changing over time and who's changing them that's kind of the root of",
    "start": "436460",
    "end": "443480"
  },
  {
    "text": "everything and just like it would be for your application so the next we talked",
    "start": "443480",
    "end": "450230"
  },
  {
    "text": "about the build phase will you know if you're just doing straight up cloud formation you know you you've already got your",
    "start": "450230",
    "end": "456500"
  },
  {
    "text": "JSON or your ml document it's not like you're compiling it so when I talk about build for infrastructures code right now",
    "start": "456500",
    "end": "462170"
  },
  {
    "text": "I'm talking more about static code analysis and the good news is that this is an area where tooling has really",
    "start": "462170",
    "end": "468680"
  },
  {
    "text": "matured in the last couple of years there's a lot of really interesting tooling out there in the community for doing these types of things the two",
    "start": "468680",
    "end": "476510"
  },
  {
    "text": "things that I tend the two tools that I tend to focus on in this space one",
    "start": "476510",
    "end": "481550"
  },
  {
    "text": "selfishly and and one less selfishly are CFN lint and CF NMAC now that one thing",
    "start": "481550",
    "end": "489050"
  },
  {
    "text": "that I want to point out about CFN lint it's a it's a great tool it's a syntactic validator for cloud formation",
    "start": "489050",
    "end": "497030"
  },
  {
    "text": "right so it actually goes beyond what doing the validate template in the API does it doesn't just check to see if",
    "start": "497030",
    "end": "503720"
  },
  {
    "text": "it's a good JSON or llamó it's going to check your files against the resource specification that's going to let you",
    "start": "503720",
    "end": "508820"
  },
  {
    "text": "know that you have the appropriate properties and to the extent that it can whether or not the values kind of match up to what it's expecting whether it be",
    "start": "508820",
    "end": "515360"
  },
  {
    "text": "a string or an integer or what-have-you there are two different tools called CFN",
    "start": "515360",
    "end": "521479"
  },
  {
    "text": "lint one was written by a gentleman named Marty sweet he wrote his a node",
    "start": "521479",
    "end": "526970"
  },
  {
    "text": "and it's a great tool ours is called CFN Python lint and it was",
    "start": "526970",
    "end": "535010"
  },
  {
    "text": "written by some folks some a to be a service field folks and it's hip",
    "start": "535010",
    "end": "540500"
  },
  {
    "text": "installable so because it was written in Python the primary difference other than the languages that they're written in is",
    "start": "540500",
    "end": "546110"
  },
  {
    "text": "sort of how they handle conditionals I tend to like the way the Python version",
    "start": "546110",
    "end": "551420"
  },
  {
    "text": "see if I'm Python my handles conditionals a little bit better it tends to go and sort of navigate all of",
    "start": "551420",
    "end": "557360"
  },
  {
    "text": "the paths of conditionals to see make sure that it's sort of everything's valid across the board traditionally the",
    "start": "557360",
    "end": "564200"
  },
  {
    "text": "other CFN lint would ask for parameter values and then sort of follow the happy path obviously as with any tooling we're",
    "start": "564200",
    "end": "571279"
  },
  {
    "text": "both evolving and kind of hitting each other's space but the one I'm going to be focused on to see if M Python lent",
    "start": "571279",
    "end": "576290"
  },
  {
    "text": "today now in opposition to CFN lint which is looking at sort of syntactic",
    "start": "576290",
    "end": "581560"
  },
  {
    "text": "syntactical correctness CFN nag which is a tool that was written by our partners",
    "start": "581560",
    "end": "586880"
  },
  {
    "text": "it's telogen is looking more for best practices so CFN nag is checking to see",
    "start": "586880",
    "end": "593600"
  },
  {
    "text": "whether your ion policies have asterisks in them right whether your security group ingress rules are using 0 dot 0",
    "start": "593600",
    "end": "600170"
  },
  {
    "text": "dot 0 slash 0 do you have encryption turned on things like that who in the rooms using zfn",
    "start": "600170",
    "end": "605750"
  },
  {
    "text": "i've already okay a few folks who's using one of the CF and lint flavors ok",
    "start": "605750",
    "end": "612350"
  },
  {
    "text": "cool cool if you asked me which one",
    "start": "612350",
    "end": "617510"
  },
  {
    "text": "should I put in my pipeline every time I would say both right now because I think",
    "start": "617510",
    "end": "623149"
  },
  {
    "text": "both are important I like to say that CFN lint is can i deploy this template",
    "start": "623149",
    "end": "628670"
  },
  {
    "text": "and see if an AG is should I deploy this template and I think those are both important questions to be able to answer",
    "start": "628670",
    "end": "634520"
  },
  {
    "text": "all right and let's see the interesting kind of other piece of the puzzle here",
    "start": "634520",
    "end": "640850"
  },
  {
    "text": "is sorry the ability to put this not",
    "start": "640850",
    "end": "647570"
  },
  {
    "text": "just kind of run them locally but the ability to put these directly into your pipeline right and be able to sort of have this as sort of an analysis step",
    "start": "647570",
    "end": "654560"
  },
  {
    "text": "within your pipeline itself so this is just a quick look at CF n lint this is",
    "start": "654560",
    "end": "660829"
  },
  {
    "text": "kind of showing a appropriately named bad route table file",
    "start": "660829",
    "end": "665870"
  },
  {
    "text": "running it through the winter via the command line you can see that it's found an error in my file it's telling me the specific error number and it's also",
    "start": "665870",
    "end": "672590"
  },
  {
    "text": "giving me sort of a location we're gonna drill into this particular error a little bit in a demo so I'm not going to",
    "start": "672590",
    "end": "678200"
  },
  {
    "text": "dwell on it too much right now we're gonna move on to integration testing right so there are lots of things that",
    "start": "678200",
    "end": "686330"
  },
  {
    "text": "you can catch with tools like CFM agassiz offend lint about the validity of your template but then there are",
    "start": "686330",
    "end": "692180"
  },
  {
    "text": "things that you just don't know until you actually go and deploy into a live environment and so the first tool that I",
    "start": "692180",
    "end": "700550"
  },
  {
    "text": "found that I've really liked in this space was actually written by our friends over at the QuickStart team anyone here who's deployed QuickStart",
    "start": "700550",
    "end": "707500"
  },
  {
    "text": "okay cool we've got a few folks so the QuickStart team what they do is they work with partners to sort of define",
    "start": "707500",
    "end": "715060"
  },
  {
    "text": "complex architectures that solve specific problems using partner",
    "start": "715060",
    "end": "720470"
  },
  {
    "text": "solutions and they build very complex CloudFormation templates they actually",
    "start": "720470",
    "end": "726770"
  },
  {
    "text": "have one that's pretty cool that deploys a validation pipeline for CloudFormation templates so a little plug there but",
    "start": "726770",
    "end": "733400"
  },
  {
    "text": "because they're building these complex templates and then bending them out to all of you who are going to deploy them",
    "start": "733400",
    "end": "738590"
  },
  {
    "text": "in every region right in every kind of permutation they needed to make sure",
    "start": "738590",
    "end": "744320"
  },
  {
    "text": "that they had a consistency and that it was going to work for you so they wrote this tool called task cat",
    "start": "744320",
    "end": "749810"
  },
  {
    "text": "and task cat is is a tool that you provide with a CloudFormation template",
    "start": "749810",
    "end": "754820"
  },
  {
    "text": "and a small yellow file that has sort of a list of of regions that you want to deploy into and information about",
    "start": "754820",
    "end": "761990"
  },
  {
    "text": "parameter values and then it will go and deploy that template across those regions with those values and it will",
    "start": "761990",
    "end": "767360"
  },
  {
    "text": "generate a report at the end and tell you if it was successful where it failed and what messages that got back from",
    "start": "767360",
    "end": "772580"
  },
  {
    "text": "from those particular stacks and this is a great tool for finding out things like oops it looks like that service that I",
    "start": "772580",
    "end": "779570"
  },
  {
    "text": "really wanted to use is not actually available in this particular region I need to be aware of that and code around",
    "start": "779570",
    "end": "784970"
  },
  {
    "text": "that right or oops I want to deploy this template and it turns out someone else has already deployed it and there's",
    "start": "784970",
    "end": "790970"
  },
  {
    "text": "already an export with that name right these are things that you can't find just from the code you have to actually",
    "start": "790970",
    "end": "796400"
  },
  {
    "text": "go and deploy them somewhere and so that's kind of worked cat comes into the pipeline this is a",
    "start": "796400",
    "end": "803450"
  },
  {
    "start": "802000",
    "end": "826000"
  },
  {
    "text": "run of tasks cat I know it's a little bit small here but basically what you're seeing here is I've taken a V PC",
    "start": "803450",
    "end": "809420"
  },
  {
    "text": "template and I've told tasks yet that I want to test that in the US east to my favorite region because I live in",
    "start": "809420",
    "end": "815450"
  },
  {
    "text": "Columbus and task cat is giving me the results of that it's saying I was",
    "start": "815450",
    "end": "821180"
  },
  {
    "text": "successfully able to deploy it everything looks good let's go forward",
    "start": "821180",
    "end": "826060"
  },
  {
    "text": "okay so now we've got a pretty solid level of confidence that not only is",
    "start": "827020",
    "end": "833210"
  },
  {
    "text": "this template valid but it actually deploys in the regions that I wanted to deploy right so now I can finally move",
    "start": "833210",
    "end": "839210"
  },
  {
    "text": "beyond testing and I can start promoting this template up through my environments well we want to make sure that we're",
    "start": "839210",
    "end": "845420"
  },
  {
    "text": "doing that in a consistent and unified way right and so this is exact same thing we would do with our application",
    "start": "845420",
    "end": "851360"
  },
  {
    "text": "code we want to promote we want to make sure that we are starting out in some sort of integration or acceptance",
    "start": "851360",
    "end": "858200"
  },
  {
    "text": "environment maybe through staging up through production but we have to make some choices here you know how is that",
    "start": "858200",
    "end": "863480"
  },
  {
    "text": "going to happen confirmation one of the things that does very well is handle in place updates but",
    "start": "863480",
    "end": "870260"
  },
  {
    "text": "there are some places where that in place update might require us to replace a resource you know so what does that",
    "start": "870260",
    "end": "876980"
  },
  {
    "text": "mean for us as we move into production are we comfortable with that are we okay with letting CloudFormation do that",
    "start": "876980",
    "end": "882560"
  },
  {
    "text": "update do we need to deploy a separate stock validate that and then move traffic over using something like you",
    "start": "882560",
    "end": "888080"
  },
  {
    "text": "know DNS entries or something with you know some other sort of mechanism these",
    "start": "888080",
    "end": "893660"
  },
  {
    "text": "are kind of the choices that we have to make and this should be decided by our tooling this should be done using an",
    "start": "893660",
    "end": "899390"
  },
  {
    "text": "orchestration tool like code pipeline or jenkins or any sort of other orchestration tool that you might have",
    "start": "899390",
    "end": "905720"
  },
  {
    "text": "lying around that's the important point to do it but the other place to sort of",
    "start": "905720",
    "end": "911089"
  },
  {
    "text": "think about here is what your strategy around accounts and regions you know do",
    "start": "911089",
    "end": "916310"
  },
  {
    "text": "you have a multi account strategy do you have a multi region strategy is it replicated you need to make sure that they are consistent on both sides is it",
    "start": "916310",
    "end": "923210"
  },
  {
    "text": "a failover are you routing traffic because of latency and you just need to make sure",
    "start": "923210",
    "end": "928550"
  },
  {
    "text": "that you know you've got the right things sort of in each environment and does your truly support that appropriately there's some interesting",
    "start": "928550",
    "end": "934940"
  },
  {
    "text": "things in this space as well code pipeline recently injected the ability to deploy to multiple regions",
    "start": "934940",
    "end": "941690"
  },
  {
    "text": "that's pretty good for failover scenarios right you can make sure that you've got a consistent deployment to you know east and west or however you're",
    "start": "941690",
    "end": "948829"
  },
  {
    "text": "sort of splitting things up using code pipeline itself CloudFormation has a feature called Stax s that allows you to",
    "start": "948829",
    "end": "955220"
  },
  {
    "text": "deploy out to multiple accounts and multiple regions can you leverage that to make sure that you've got sort of",
    "start": "955220",
    "end": "961399"
  },
  {
    "text": "consistent deployments across all of the things that need to be identical does your orchestration tool itself have",
    "start": "961399",
    "end": "967819"
  },
  {
    "text": "what it needs to be able to do that you know could you simply do it with multiple sets of credentials and your",
    "start": "967819",
    "end": "972949"
  },
  {
    "text": "Jenkins server or something like that are assuming roles so these are the sort of things that you need to think about",
    "start": "972949",
    "end": "978790"
  },
  {
    "text": "you know it's the stuff that I can't say this is the best way to do it it's going to be sort of specific to the way you do",
    "start": "978790",
    "end": "985430"
  },
  {
    "text": "your deployments but the important thing here is that it's done with consistent tooling okay so this is putting it all",
    "start": "985430",
    "end": "992930"
  },
  {
    "start": "991000",
    "end": "1073000"
  },
  {
    "text": "together right this particular version is taking advantage of our sort of SAS",
    "start": "992930",
    "end": "998750"
  },
  {
    "text": "code star products so you know we're sort of consuming all of it here we've",
    "start": "998750",
    "end": "1004899"
  },
  {
    "text": "got a developer who's writing up their CloudFormation templates or generating some Python code and using troposphere",
    "start": "1004899",
    "end": "1010959"
  },
  {
    "text": "to use to build that JSON file they're pushing that into code commit which is",
    "start": "1010959",
    "end": "1017800"
  },
  {
    "text": "our you know s3 back gate repository that is triggering a code pipeline code",
    "start": "1017800",
    "end": "1023860"
  },
  {
    "text": "pipeline is then using code build to execute CFN lit and CFN nag against",
    "start": "1023860",
    "end": "1029380"
  },
  {
    "text": "those templates to make sure that they're actually okay that everything's good there if that works out all right",
    "start": "1029380",
    "end": "1036188"
  },
  {
    "text": "we are gonna trigger a lambda function that's going to execute tasks at lambda is gonna go run that task at tasks at",
    "start": "1036189",
    "end": "1042790"
  },
  {
    "text": "has the ability to generate a report we can then look at that report or we can send information from that report back",
    "start": "1042790",
    "end": "1048188"
  },
  {
    "text": "up to say that hey we were successful once we're successful we can start promoting up through environments so",
    "start": "1048189",
    "end": "1053559"
  },
  {
    "text": "we're going to use code pipelines native integration with CloudFormation to start deploying out into environments",
    "start": "1053559",
    "end": "1059510"
  },
  {
    "text": "and then we're gonna have to make that decision whether or not we want to stop before we have production and put some sort of manual gate in there so that",
    "start": "1059510",
    "end": "1065870"
  },
  {
    "text": "some can go look at all of the stuff and make sure that we're happy with it so that's sort of the code star way of",
    "start": "1065870",
    "end": "1071450"
  },
  {
    "text": "doing things but that's not the only way to do it it doesn't really change much if you're using your existing tooling",
    "start": "1071450",
    "end": "1076910"
  },
  {
    "start": "1073000",
    "end": "1105000"
  },
  {
    "text": "you can do this just as easily using git github Travis CI your build tools of",
    "start": "1076910",
    "end": "1084590"
  },
  {
    "text": "choice you know good old Jenkins for the orchestration layer the only thing that changes really is sort of how these",
    "start": "1084590",
    "end": "1090950"
  },
  {
    "text": "things are coupled together and where permissions live to be able to do what you need to do right for things like",
    "start": "1090950",
    "end": "1096230"
  },
  {
    "text": "provisioning out to your environments but the process doesn't change it's",
    "start": "1096230",
    "end": "1101450"
  },
  {
    "text": "simply just the tooling that changes okay so going from there I kind of",
    "start": "1101450",
    "end": "1109760"
  },
  {
    "start": "1105000",
    "end": "1130000"
  },
  {
    "text": "wanted to give a quick little demo here I wanted to show off mostly the linter",
    "start": "1109760",
    "end": "1114919"
  },
  {
    "text": "here but we're going to do this let me see oh sorry about that and we quickly",
    "start": "1114919",
    "end": "1121490"
  },
  {
    "text": "get this back up and running here",
    "start": "1121490",
    "end": "1124630"
  },
  {
    "start": "1130000",
    "end": "1259000"
  },
  {
    "text": "I'll add thank you well chuckles typing I'll add when you see some of these pipelines my plates like applications",
    "start": "1130210",
    "end": "1138380"
  },
  {
    "text": "are your starting points I remember setting up pipeline six or seven years ago and the first pipe",
    "start": "1138380",
    "end": "1144950"
  },
  {
    "text": "lights on they had like unit testing and integration testing end to end testing and analytics pipelines who may have",
    "start": "1144950",
    "end": "1150890"
  },
  {
    "text": "other components and some other code pipelines you may have tests for code coverage your application may also",
    "start": "1150890",
    "end": "1157970"
  },
  {
    "text": "require things like warming up the cache and everything so not only do our human",
    "start": "1157970",
    "end": "1163580"
  },
  {
    "text": "application and your processes become mature you keep adding steps to those pipelines so consider this kind of like",
    "start": "1163580",
    "end": "1169070"
  },
  {
    "text": "a good basic starting point and evolved from there it's an excellent point so",
    "start": "1169070",
    "end": "1175850"
  },
  {
    "text": "where we're gonna start for this particular demo is in a github repo this is my aptly named CFN lint demo repo it",
    "start": "1175850",
    "end": "1183620"
  },
  {
    "text": "contains some cloud formation templates in a template directory and one of the",
    "start": "1183620",
    "end": "1188840"
  },
  {
    "text": "things that I have done here as you can see I've actually got a build badge for my templates so you can see that as far",
    "start": "1188840",
    "end": "1194360"
  },
  {
    "text": "as we're concerned we feel like these templates are in pretty good shape so I've got my BBC template I've got a",
    "start": "1194360",
    "end": "1200330"
  },
  {
    "text": "load balancer and a security group here everything looks pretty good to me and I",
    "start": "1200330",
    "end": "1206240"
  },
  {
    "text": "do notice that I've got a pull request over here so I can go take a look at that added new route table Association",
    "start": "1206240",
    "end": "1215240"
  },
  {
    "text": "should be fine let's take a look at that one right so you can see here I'm using",
    "start": "1215240",
    "end": "1223840"
  },
  {
    "text": "github sort of built in integration with Travis CI and I've actually run some",
    "start": "1223840",
    "end": "1228890"
  },
  {
    "text": "tests against my templates here and this pull request and it looks like it's not going so well so we're gonna click",
    "start": "1228890",
    "end": "1235580"
  },
  {
    "text": "through here and look at the details of that",
    "start": "1235580",
    "end": "1240040"
  },
  {
    "text": "so here we have my pull request I can go in and look and I've run the linter and",
    "start": "1243210",
    "end": "1249309"
  },
  {
    "text": "sure enough we found some hairs here it's our good friend the bad route table Association and it looks like it's",
    "start": "1249309",
    "end": "1255910"
  },
  {
    "text": "having some problems so let's go ahead and take a look at that template here",
    "start": "1255910",
    "end": "1261270"
  },
  {
    "text": "I've actually got this in Visual Studio code now the interesting thing here is",
    "start": "1261270",
    "end": "1266970"
  },
  {
    "text": "let's see here that's not doing what I wanted it to do",
    "start": "1266970",
    "end": "1272980"
  },
  {
    "text": "Visual Studio code typically but because it's a demo day it's not working right",
    "start": "1272980",
    "end": "1279490"
  },
  {
    "text": "now but Visual Studio code has a plug in for the linter that looks like it's not",
    "start": "1279490",
    "end": "1286720"
  },
  {
    "text": "installed right now so let's see let's reload there we go has a plug in for the",
    "start": "1286720",
    "end": "1298030"
  },
  {
    "text": "linter so I can actually bring up that same template here and sure enough I've got my little squiggly lines around my",
    "start": "1298030",
    "end": "1305140"
  },
  {
    "text": "ears and my warnings right and there's that error that I'm seeing so let's take a look at that again so interesting fact",
    "start": "1305140",
    "end": "1313210"
  },
  {
    "text": "you can only have one round table associated with a subnet and a bpc if",
    "start": "1313210",
    "end": "1319179"
  },
  {
    "text": "you try to associate multiple route tables with a subnet not only does it",
    "start": "1319179",
    "end": "1325780"
  },
  {
    "text": "cause some issues but there's actually deletion ramifications there that can get very very messy so it's actually",
    "start": "1325780",
    "end": "1332140"
  },
  {
    "text": "kind of a bad thing to have happen so why is this happening here well if I look up here I've got this little green",
    "start": "1332140",
    "end": "1338140"
  },
  {
    "text": "line up here and it turns out I've got this parameter this private subnet parameter that's not being used and",
    "start": "1338140",
    "end": "1344350"
  },
  {
    "text": "looking down here oh sure enough I've got my public's on that here in my private route table association so let's",
    "start": "1344350",
    "end": "1350380"
  },
  {
    "text": "go ahead and fix that okay all of my squiggles have gone away so this seems",
    "start": "1350380",
    "end": "1356830"
  },
  {
    "text": "to be in pretty good shape so we're gonna go here go ahead and add that file",
    "start": "1356830",
    "end": "1364540"
  },
  {
    "start": "1358000",
    "end": "1422000"
  },
  {
    "text": "back in and because I am an awesome dev we're",
    "start": "1364540",
    "end": "1372420"
  },
  {
    "text": "gonna put a really good commit message he's okay awesome might be kind of",
    "start": "1372420",
    "end": "1378360"
  },
  {
    "text": "stretching it but yeah he has fast and he gets Christmas cards and everything he's a gift for those of you so for some",
    "start": "1378360",
    "end": "1385440"
  },
  {
    "text": "folks infrastructures code is actually your first journey into using some of these tools and there's kind of AI in",
    "start": "1385440",
    "end": "1393480"
  },
  {
    "text": "the past have been guilty of any one of kind of treat this a little laissez-faire I don't really treat the tool as well as I maybe I do when I'm",
    "start": "1393480",
    "end": "1400050"
  },
  {
    "text": "writing my application code but this is important right like if something did go wrong with that rail table this is how we're",
    "start": "1400050",
    "end": "1406590"
  },
  {
    "text": "gonna figure out what what was going on so we need to treat these just as as as real as we do our our commits for our",
    "start": "1406590",
    "end": "1414120"
  },
  {
    "text": "application code let's go ahead and push that cool and then we're gonna jump back",
    "start": "1414120",
    "end": "1422430"
  },
  {
    "text": "over here see I know refresh let me make sure that",
    "start": "1422430",
    "end": "1434730"
  },
  {
    "text": "we've got the right version or a file in here now so we've got a private subnet here I can see it in my pull request we",
    "start": "1434730",
    "end": "1442980"
  },
  {
    "text": "can jump over to Travis again",
    "start": "1442980",
    "end": "1446299"
  },
  {
    "text": "since your most of you are conformation users how many of you consider yourselves to be expert get users okay",
    "start": "1452149",
    "end": "1461059"
  },
  {
    "start": "1453000",
    "end": "1582000"
  },
  {
    "text": "okay so you can see fix that thing is my current commit here",
    "start": "1461059",
    "end": "1467429"
  },
  {
    "text": "Travis is now going ahead and it's doing its installs getting the linter in there",
    "start": "1467429",
    "end": "1480989"
  },
  {
    "text": "can you reload that I'm seeing at the",
    "start": "1480989",
    "end": "1486389"
  },
  {
    "text": "end of the day what we should see here [Applause]",
    "start": "1486389",
    "end": "1494089"
  },
  {
    "text": "is a successful build",
    "start": "1496190",
    "end": "1500118"
  },
  {
    "text": "why does it always go so slow you're on stage oh I didn't mean you you see that",
    "start": "1502510",
    "end": "1510640"
  },
  {
    "text": "you see what happened there we go exit with the zero looks like we're clean here how about stepping on the",
    "start": "1510640",
    "end": "1517330"
  },
  {
    "text": "cable that's what I was doing all checks have passed and we're all set to squash and marriage I did my code review right",
    "start": "1517330",
    "end": "1524170"
  },
  {
    "text": "you saw me go in there and look at it so let's go ahead and confirm that and there we go",
    "start": "1524170",
    "end": "1530310"
  },
  {
    "text": "so our route table Association is now in our repository oh gosh now she's show",
    "start": "1530310",
    "end": "1537160"
  },
  {
    "text": "that a pass right should we show that him yeah cuz you know we're nerds and",
    "start": "1537160",
    "end": "1543850"
  },
  {
    "text": "everything right yep so we're passing up here now why did the build badge in the",
    "start": "1543850",
    "end": "1549820"
  },
  {
    "text": "repository still say passing when all of that badness was happening uh maybe he",
    "start": "1549820",
    "end": "1555970"
  },
  {
    "text": "didn't wanna hurt your feelings I was working so I was working in an alpha branch right so just like I would with",
    "start": "1555970",
    "end": "1561370"
  },
  {
    "text": "my regular code I wasn't pushing up to master that's when you're gonna work in a separate branch for whatever feature",
    "start": "1561370",
    "end": "1567430"
  },
  {
    "text": "you're working on you're gonna merge it in a pack so I think that takes us",
    "start": "1567430",
    "end": "1573070"
  },
  {
    "text": "through my side of the presentation Lewis if you want to come on over and",
    "start": "1573070",
    "end": "1579510"
  },
  {
    "text": "we'll get you goin over here all right thanks Thank You Chuck if it sounds like",
    "start": "1579510",
    "end": "1590880"
  },
  {
    "text": "I've been smoking since I gave birth is because I have lost my voice but it don't feel bad about it and if you find",
    "start": "1590880",
    "end": "1597280"
  },
  {
    "text": "it funny it doesn't really hurt my feelings at all so let's talk about full",
    "start": "1597280",
    "end": "1602830"
  },
  {
    "text": "stack deployment full stack is now a term that gets thrown across around a",
    "start": "1602830",
    "end": "1608380"
  },
  {
    "text": "lot and not only am i how I heard it about deployments but also about full stack developers any of you consider",
    "start": "1608380",
    "end": "1614650"
  },
  {
    "text": "yourselves full stack developers some of you do what I've seen with customers is",
    "start": "1614650",
    "end": "1620110"
  },
  {
    "text": "that these full stack developers are typically in smaller companies where perhaps they don't have a dedicated operations team and a dedicated",
    "start": "1620110",
    "end": "1627480"
  },
  {
    "text": "development team etc and they have to pretty much not only understand their",
    "start": "1627480",
    "end": "1632500"
  },
  {
    "text": "product the application the server sorry installing on doing maintenance etc and some people consider that a",
    "start": "1632500",
    "end": "1640010"
  },
  {
    "text": "pretty tough job I think it's super powerful and I think that one of the biggest benefits is full site developers",
    "start": "1640010",
    "end": "1646460"
  },
  {
    "text": "will probably attest to is that since they know everything when the problem happens they can literally look up",
    "start": "1646460",
    "end": "1652250"
  },
  {
    "text": "whether something is wrong on a commit from get or something's wrong in the",
    "start": "1652250",
    "end": "1657560"
  },
  {
    "text": "configuration of the server so it's not a bad thing to start thinking full-stack",
    "start": "1657560",
    "end": "1662720"
  },
  {
    "text": "if you haven't been a full stack developer before in this context however we're gonna talk about full stack",
    "start": "1662720",
    "end": "1669620"
  },
  {
    "start": "1665000",
    "end": "1724000"
  },
  {
    "text": "deployment that includes your application code all the app servers and",
    "start": "1669620",
    "end": "1675200"
  },
  {
    "text": "things that you have to configure and all the network compute and storage so it represents the entire PI it is very",
    "start": "1675200",
    "end": "1683060"
  },
  {
    "text": "powerful it used to be that you could not sometimes that in the initial pipelines that first became popular maybe six or",
    "start": "1683060",
    "end": "1690830"
  },
  {
    "text": "seven years ago you can only do the pipeline on the front but still the network and the servers and the data",
    "start": "1690830",
    "end": "1697640"
  },
  {
    "text": "centers and the racks still have to be taken care of manually now really we have the ability to do all these things",
    "start": "1697640",
    "end": "1703520"
  },
  {
    "text": "in an automated matter and why be so hung up about doing in an automated matter automated means you can do a lot",
    "start": "1703520",
    "end": "1710900"
  },
  {
    "text": "of changes you can do them quickly and you can do it with proper testing because also if it weren't automated you",
    "start": "1710900",
    "end": "1716960"
  },
  {
    "text": "can do a lot of changes and break a lot of things too but that's a quick way to lose friends we're gonna show you some",
    "start": "1716960",
    "end": "1726770"
  },
  {
    "start": "1724000",
    "end": "1820000"
  },
  {
    "text": "examples as to how this full stack deployment does apply to any application architecture that you may encounter this",
    "start": "1726770",
    "end": "1733850"
  },
  {
    "text": "first example is a traditional feels like a lamp application as I mean using",
    "start": "1733850",
    "end": "1740990"
  },
  {
    "text": "Linux for this and the infrastructure will include setting up your ebbc",
    "start": "1740990",
    "end": "1746800"
  },
  {
    "text": "availability zones and other components load balancers on top of that you",
    "start": "1746800",
    "end": "1753050"
  },
  {
    "text": "install your app servers in this case it'll be like a digital CMS you can use",
    "start": "1753050",
    "end": "1758360"
  },
  {
    "text": "your install and set up your database and configure your database my sequel pros grass or there's engine access to",
    "start": "1758360",
    "end": "1765050"
  },
  {
    "text": "your webserver and then chef also to do come generation management and other activities and then on top of that then",
    "start": "1765050",
    "end": "1772159"
  },
  {
    "text": "your code and the necessary things assets and your code requires this also",
    "start": "1772159",
    "end": "1778909"
  },
  {
    "text": "applies to containers and in the container world what you probably end up doing is setting up docker images and",
    "start": "1778909",
    "end": "1787880"
  },
  {
    "text": "then as every time you do a deployment you go through the testing of your code generate the new images deploy them and",
    "start": "1787880",
    "end": "1796029"
  },
  {
    "text": "in many cases because of the benefits of containers in general you can make these",
    "start": "1796029",
    "end": "1801049"
  },
  {
    "text": "pipelines a lot faster and that's should be one of the the thing when you think about pipelines continuously monitor",
    "start": "1801049",
    "end": "1807830"
  },
  {
    "text": "those pipelines make them faster because over time chances are that as your application changes it will add features",
    "start": "1807830",
    "end": "1814850"
  },
  {
    "text": "he will add tests so there will be that tendency for those pipelines to become slower serverless absolutely the",
    "start": "1814850",
    "end": "1824029"
  },
  {
    "start": "1820000",
    "end": "1853000"
  },
  {
    "text": "infrastructure and the services part for server less becomes a lot smaller especially if you're using something",
    "start": "1824029",
    "end": "1830149"
  },
  {
    "text": "like Sam lambda or the serverless application architecture several is",
    "start": "1830149",
    "end": "1837230"
  },
  {
    "text": "application model or the serverless framework where there's a lot of the",
    "start": "1837230",
    "end": "1842720"
  },
  {
    "text": "components that get generated for you but what doesn't usually get generated",
    "start": "1842720",
    "end": "1848029"
  },
  {
    "text": "is testaments and the testing that you have to do so there's plenty of",
    "start": "1848029",
    "end": "1854480"
  },
  {
    "start": "1853000",
    "end": "1961000"
  },
  {
    "text": "strategies when we deal with full stack development one of the key ones that we",
    "start": "1854480",
    "end": "1859570"
  },
  {
    "text": "encounter and we advise people to do is to group resources by lifecycle this has",
    "start": "1859570",
    "end": "1865789"
  },
  {
    "text": "two primary benefits number one imagine your entire application and your",
    "start": "1865789",
    "end": "1873289"
  },
  {
    "text": "application including BBC Network rules setting up rules setting up users",
    "start": "1873289",
    "end": "1878480"
  },
  {
    "text": "chances are parameters or configuration for those components are not going to",
    "start": "1878480",
    "end": "1883759"
  },
  {
    "text": "change once an hour or once a day or once a week so it makes sense in some",
    "start": "1883759",
    "end": "1889100"
  },
  {
    "text": "situations especially in compute situations to have those as a separate pipeline and the the other pipeline",
    "start": "1889100",
    "end": "1897559"
  },
  {
    "text": "becomes the application now that pipeline potentially you could potentially release code once an hour many times",
    "start": "1897559",
    "end": "1905080"
  },
  {
    "text": "today once a week etc and those pipelines don't affect each other when a",
    "start": "1905080",
    "end": "1910810"
  },
  {
    "text": "problem happens you're essentially reducing the potential blast radius as",
    "start": "1910810",
    "end": "1918670"
  },
  {
    "text": "we call it so that if you always include everything in your pipeline then a lot",
    "start": "1918670",
    "end": "1923890"
  },
  {
    "text": "of things are gonna change at the same time now there are cases that including things in the pipeline make a lot of",
    "start": "1923890",
    "end": "1929950"
  },
  {
    "text": "sense the idea is that if you have everything well automated with good monitoring and good testing you still",
    "start": "1929950",
    "end": "1936670"
  },
  {
    "text": "want to make sure that that step that only deployed the application only could have affected the application so here to",
    "start": "1936670",
    "end": "1945010"
  },
  {
    "text": "kind of like be more specific about it when we talk about lifecycle it's about separating longer-lived",
    "start": "1945010",
    "end": "1952060"
  },
  {
    "text": "resources from resources that change a lot and isolate resources that are stateful resources that databases or",
    "start": "1952060",
    "end": "1959110"
  },
  {
    "text": "queues let's get into some examples in",
    "start": "1959110",
    "end": "1965980"
  },
  {
    "start": "1961000",
    "end": "2010000"
  },
  {
    "text": "ec2 it makes sense to in this particular example to use two pipelines the first",
    "start": "1965980",
    "end": "1972310"
  },
  {
    "text": "pipeline might be my infrastructure llamo and maybe that one I only change monthly I set up the BBC auto scaling",
    "start": "1972310",
    "end": "1979930"
  },
  {
    "text": "group and perhaps as months go on I have to add subnets to have places for other",
    "start": "1979930",
    "end": "1985270"
  },
  {
    "text": "applications to run the daily one I may have to change the load balancer my",
    "start": "1985270",
    "end": "1991630"
  },
  {
    "text": "application gets tested and maybe I bake an Amazon machine image or am i and",
    "start": "1991630",
    "end": "1996880"
  },
  {
    "text": "that's the only thing that changes everything else has not changed so you can see by having these two individual",
    "start": "1996880",
    "end": "2002370"
  },
  {
    "text": "steps the steps are smaller they're faster they're easier to test and they",
    "start": "2002370",
    "end": "2007650"
  },
  {
    "text": "have a smaller blast radius now this is how that particular ec2 example looks",
    "start": "2007650",
    "end": "2015000"
  },
  {
    "text": "like it should look really familiar because we just talked about this before what do you have code come in by plying",
    "start": "2015000",
    "end": "2021990"
  },
  {
    "text": "using tools like CF and lint and nag task add and task ID it's powerful",
    "start": "2021990",
    "end": "2028560"
  },
  {
    "text": "enough and the people that wrote it use it not only for relatively simple templates but they also use it for",
    "start": "2028560",
    "end": "2034630"
  },
  {
    "text": "fairly complex complex nested stacks if you ever wanted to learn more about Nessa stats and wanted to look at a huge",
    "start": "2034630",
    "end": "2041350"
  },
  {
    "text": "example that works take a look at some of the best stacks that the that the quickstarts team puts together they're",
    "start": "2041350",
    "end": "2047710"
  },
  {
    "text": "quite impressive and then you use of course CloudFormation to update your",
    "start": "2047710",
    "end": "2054460"
  },
  {
    "text": "application scaling group and set up things like Bluegreen deployments",
    "start": "2054460",
    "end": "2059610"
  },
  {
    "text": "cannery deployments etc let me get a sense of for some of those that are",
    "start": "2059610",
    "end": "2065648"
  },
  {
    "text": "using pipelines today are you deploying blue green today some of you are",
    "start": "2065649",
    "end": "2070929"
  },
  {
    "text": "excellent now Canaries apply when you have hundreds of servers and everything",
    "start": "2070929",
    "end": "2076898"
  },
  {
    "text": "how many of you are deploying with canary canary deployments excellent those are the kind of like process",
    "start": "2076899",
    "end": "2083560"
  },
  {
    "text": "automation maturity models that you should strive to get to now the this is",
    "start": "2083560",
    "end": "2092169"
  },
  {
    "start": "2089000",
    "end": "2256000"
  },
  {
    "text": "an example of the application part of the pipeline this is your typical C icd",
    "start": "2092169",
    "end": "2100330"
  },
  {
    "text": "pipeline that would have things like unit tests test coverage maybe if you",
    "start": "2100330",
    "end": "2105460"
  },
  {
    "text": "have tools to actually check for security and vulnerabilities you would have these as well in this pipeline",
    "start": "2105460",
    "end": "2111850"
  },
  {
    "text": "after we finish our integration test and we believe that the application is ready to be baked",
    "start": "2111850",
    "end": "2116980"
  },
  {
    "text": "then we're baking the Machine image and then we start deploying down on staging now trick question see if you can figure",
    "start": "2116980",
    "end": "2125050"
  },
  {
    "text": "out the trick is it a good idea to test in production awesome answer because",
    "start": "2125050",
    "end": "2132700"
  },
  {
    "text": "that's right when that we're not messing when that common fails if is it if",
    "start": "2132700",
    "end": "2138640"
  },
  {
    "text": "you're only testing in production no good but the reality is that the proper",
    "start": "2138640",
    "end": "2144820"
  },
  {
    "text": "amount of testing once you land in your environment including production you",
    "start": "2144820",
    "end": "2150400"
  },
  {
    "text": "should be doing something that some people call small testing just to make sure that you pass traffic before do the",
    "start": "2150400",
    "end": "2156610"
  },
  {
    "text": "testing before you pass traffic to the freshly minted servers and in the same way you should do it in production you",
    "start": "2156610",
    "end": "2162550"
  },
  {
    "text": "should do it every time your application lands in any one of those environments so one sort of interesting thing I",
    "start": "2162550",
    "end": "2168589"
  },
  {
    "text": "wanted to point out about this as well as you know not allure these two separate pipelines but there's a",
    "start": "2168589",
    "end": "2173660"
  },
  {
    "text": "decision to be made about what's going to drive those pipelines are these two separate repositories there are some",
    "start": "2173660",
    "end": "2179569"
  },
  {
    "text": "cases where it might make sense for you to source your infrastructure code from",
    "start": "2179569",
    "end": "2185599"
  },
  {
    "text": "a different place than you do your application code and that's sort of what this is representing whereas I believe",
    "start": "2185599",
    "end": "2191660"
  },
  {
    "text": "in the next case there actually can be sourced from the same from the same repository so the question is can I",
    "start": "2191660",
    "end": "2202699"
  },
  {
    "text": "define what I mean by production I typically define production where I'm having real customers creating real",
    "start": "2202699",
    "end": "2210019"
  },
  {
    "text": "transactions and processing real money now that seems kind of like a very narrow or simplistic definition because",
    "start": "2210019",
    "end": "2216949"
  },
  {
    "text": "in many cases you will have large companies that will provide the new version to be tested by other people and",
    "start": "2216949",
    "end": "2223969"
  },
  {
    "text": "if there's people using your application and you need to care for their personally identifiable information",
    "start": "2223969",
    "end": "2229609"
  },
  {
    "text": "you might call the environment QA or preview but you need to treat it as production as well okay all right and",
    "start": "2229609",
    "end": "2245599"
  },
  {
    "text": "that's where I think every there's a lot of people I would agree with that statement all right so we looked at",
    "start": "2245599",
    "end": "2252169"
  },
  {
    "text": "basic compute with ec2 now if you're leveraging containers and darker you may",
    "start": "2252169",
    "end": "2258979"
  },
  {
    "start": "2256000",
    "end": "2348000"
  },
  {
    "text": "set up a container pipeline this may be sourced from the same rich repository and and this is the kind of thing that",
    "start": "2258979",
    "end": "2265539"
  },
  {
    "text": "especially in medium and large sized companies that have been around for a while you're always gonna have a mix of",
    "start": "2265539",
    "end": "2271249"
  },
  {
    "text": "traditional compute darker applications serverless applications the fact that",
    "start": "2271249",
    "end": "2277009"
  },
  {
    "text": "you have that kind of mix and some of the applications are more legacy than others should not stop you from having",
    "start": "2277009",
    "end": "2282079"
  },
  {
    "text": "multiple pipelines sometimes for those different applications and sometimes pipelines that may combine some of those",
    "start": "2282079",
    "end": "2288759"
  },
  {
    "text": "here in the container pipeline will have our environmental setting up our load",
    "start": "2288759",
    "end": "2294529"
  },
  {
    "text": "balancers our security groups in the cluster and then the parts that",
    "start": "2294529",
    "end": "2300350"
  },
  {
    "text": "probably changed a lot more often are your service your task definitions that",
    "start": "2300350",
    "end": "2305540"
  },
  {
    "text": "create darker containers they need to get registered and deploy so still the",
    "start": "2305540",
    "end": "2311000"
  },
  {
    "text": "pipeline looks rather similar things are gonna be checked in from from for your versioning system",
    "start": "2311000",
    "end": "2316970"
  },
  {
    "text": "I'm gonna go and build your called pipelines you're gonna then once your",
    "start": "2316970",
    "end": "2322730"
  },
  {
    "text": "test run build your docker images then you'll have a whole bunch of templates and then",
    "start": "2322730",
    "end": "2329240"
  },
  {
    "text": "deploy those things with confirmation again the idea here is to be able to repeatedly deploy the exact same thing",
    "start": "2329240",
    "end": "2336170"
  },
  {
    "text": "we don't want any snowflakes in our clusters and in our environment go through different environments so we",
    "start": "2336170",
    "end": "2341630"
  },
  {
    "text": "have opportunities to test and test once the code lands in those environments including production now this is just",
    "start": "2341630",
    "end": "2351200"
  },
  {
    "start": "2348000",
    "end": "2430000"
  },
  {
    "text": "one example using very Amazon orientated tools but uh container certain docker",
    "start": "2351200",
    "end": "2357410"
  },
  {
    "text": "and Curran eighties are such a popular area right now that you will have many other utilities from many other",
    "start": "2357410",
    "end": "2363200"
  },
  {
    "text": "companies some of them APM partners what I highlight this one by Stella Junt which Chuck talked about a little bit",
    "start": "2363200",
    "end": "2371150"
  },
  {
    "text": "before they are the same ones that write CF and nag they wrote this tool called new it's open source which I always get",
    "start": "2371150",
    "end": "2379610"
  },
  {
    "text": "excited because I can see the tool I can use it I can look at the code and then when I have my own company requirements",
    "start": "2379610",
    "end": "2386120"
  },
  {
    "text": "I can start from what they wrote and customize it to my company or regulation",
    "start": "2386120",
    "end": "2392450"
  },
  {
    "text": "needs so it's all about new being a full stack micro service management utility",
    "start": "2392450",
    "end": "2398860"
  },
  {
    "text": "you start with your components and it builds pipelines for you it builds your",
    "start": "2398860",
    "end": "2404360"
  },
  {
    "text": "confirmation templates it deploys the services leveraging what CloudFormation brings to",
    "start": "2404360",
    "end": "2409970"
  },
  {
    "text": "the table which means you can roll back two things etc we manage the state dependencies and it can manage the",
    "start": "2409970",
    "end": "2416060"
  },
  {
    "text": "environments and it uses many AWS native services so you can get em you the URL",
    "start": "2416060",
    "end": "2425680"
  },
  {
    "text": "stated there get meal dot I I'd like to demo what one mule looks",
    "start": "2425680",
    "end": "2433809"
  },
  {
    "start": "2430000",
    "end": "2731000"
  },
  {
    "text": "like and the magic here happens just a to just hit to right there oh wait here",
    "start": "2433809",
    "end": "2440229"
  },
  {
    "text": "here there we go how many engineers does",
    "start": "2440229",
    "end": "2445359"
  },
  {
    "text": "it take to it alright so I'm using",
    "start": "2445359",
    "end": "2451239"
  },
  {
    "text": "chucks machine and Chuck has already setup em you downloaded it initialize",
    "start": "2451239",
    "end": "2456969"
  },
  {
    "text": "the project change the bill spec to actually do the build and specify some",
    "start": "2456969",
    "end": "2462099"
  },
  {
    "text": "environments so what exactly has he done so far I can calm you and tell it to",
    "start": "2462099",
    "end": "2468969"
  },
  {
    "text": "show the services that I have in place so I'll scroll this up a little bit here",
    "start": "2468969",
    "end": "2476709"
  },
  {
    "text": "and you'll see that wants me to again the only thing that I change after the",
    "start": "2476709",
    "end": "2482799"
  },
  {
    "text": "initialization was by Bill specs you took care of creating pipelines creating",
    "start": "2482799",
    "end": "2489670"
  },
  {
    "text": "stats and doing so in all the environments or stages that we",
    "start": "2489670",
    "end": "2495489"
  },
  {
    "text": "configured and you can see kind of like an event status of I went through the mill stage I went through the acceptance",
    "start": "2495489",
    "end": "2502179"
  },
  {
    "text": "stage and then I went to the production States what deployments how I had in what",
    "start": "2502179",
    "end": "2507400"
  },
  {
    "text": "environment and of course because it's automated it happens relatively quickly now let's",
    "start": "2507400",
    "end": "2513969"
  },
  {
    "text": "take a look at one environment you sure",
    "start": "2513969",
    "end": "2521309"
  },
  {
    "text": "acceptance there you go so our",
    "start": "2521309",
    "end": "2527469"
  },
  {
    "text": "environment is an acceptance environment providers ECS the cluster stack name and",
    "start": "2527469",
    "end": "2534519"
  },
  {
    "text": "stack here is a confirmation stack and it last the last event status is create",
    "start": "2534519",
    "end": "2540249"
  },
  {
    "text": "complete PPC stack because we broke the infrastructure it's also create complete",
    "start": "2540249",
    "end": "2545380"
  },
  {
    "text": "and everything looks quite kosher so let me switch now to the browser-based",
    "start": "2545380",
    "end": "2552189"
  },
  {
    "text": "interface because I want to show you after this run what happens from a",
    "start": "2552189",
    "end": "2559719"
  },
  {
    "text": "called pipeline perspective actually I shouldn't love DUI because it is on your code pipeline so because of",
    "start": "2559719",
    "end": "2568130"
  },
  {
    "text": "me being too happy with the clicks and everything you're gonna get to see Chuck login again alright no one copy my",
    "start": "2568130",
    "end": "2575330"
  },
  {
    "text": "password another thing that might be useful that we can show you after we look in here too is mu is a very",
    "start": "2575330",
    "end": "2582410"
  },
  {
    "text": "opinionated tool which is kind of one of the things that makes it interesting the configuration that you have to do to do",
    "start": "2582410",
    "end": "2588800"
  },
  {
    "text": "everything that we just did is very small and look at that as well as yes yes so I'm gonna show you here called",
    "start": "2588800",
    "end": "2600410"
  },
  {
    "text": "pipeline this is the banana service this is all generated by mu you never have to",
    "start": "2600410",
    "end": "2606890"
  },
  {
    "text": "log into the console and it generates the stages source gives you events it",
    "start": "2606890",
    "end": "2613130"
  },
  {
    "text": "can tie to for you to link to the details for all of them acceptance and",
    "start": "2613130",
    "end": "2622600"
  },
  {
    "text": "production all this generated on your behalf by the mute tool your",
    "start": "2622600",
    "end": "2632750"
  },
  {
    "text": "confirmation it's gonna have your muse dat's that's the X the stacks for the V",
    "start": "2632750",
    "end": "2639650"
  },
  {
    "text": "PC load balancer environment and for the service itself and you can see that it",
    "start": "2639650",
    "end": "2648350"
  },
  {
    "text": "creates resources like UCS das definitions as well now let's show at",
    "start": "2648350",
    "end": "2656090"
  },
  {
    "text": "least one of the files the bill spec is",
    "start": "2656090",
    "end": "2662120"
  },
  {
    "text": "right there",
    "start": "2662120",
    "end": "2664540"
  },
  {
    "text": "very simplistic in the bill face I'm gonna call Gradle build and I should",
    "start": "2671150",
    "end": "2678780"
  },
  {
    "text": "have also the configuration file here i",
    "start": "2678780",
    "end": "2686670"
  },
  {
    "text": "can define i need two environments except us in production I'm gonna give",
    "start": "2686670",
    "end": "2691710"
  },
  {
    "text": "it a path I'm gonna use as a source github and the repo and github and my",
    "start": "2691710",
    "end": "2697770"
  },
  {
    "text": "build images will require Java open NDK",
    "start": "2697770",
    "end": "2703460"
  },
  {
    "text": "so very convenient and once again because this tool is open source even if",
    "start": "2703460",
    "end": "2709859"
  },
  {
    "text": "you end up not using all the components look at the code because you probably will have some really interesting ideas",
    "start": "2709859",
    "end": "2715230"
  },
  {
    "text": "as to how to automate other ACS and docker processes alright back to the",
    "start": "2715230",
    "end": "2729240"
  },
  {
    "text": "slides so we we see an ec2 traditional",
    "start": "2729240",
    "end": "2735690"
  },
  {
    "text": "compute we've seen docker container compute serverless pipelines applied to",
    "start": "2735690",
    "end": "2742650"
  },
  {
    "text": "server list as well the assembly examples that we talked about today will",
    "start": "2742650",
    "end": "2747690"
  },
  {
    "text": "use one of the tools that we Bend which is a framework called server this application model that we I think both",
    "start": "2747690",
    "end": "2752760"
  },
  {
    "text": "mentioned before what it does is from a conformation perspective if you create",
    "start": "2752760",
    "end": "2759890"
  },
  {
    "text": "lambda manually you have to use AWS : : : : function you have to make sure that",
    "start": "2759890",
    "end": "2766380"
  },
  {
    "text": "you have your security and execution rules and permissions said in many cases",
    "start": "2766380",
    "end": "2772710"
  },
  {
    "text": "you have to also build your API gateway endpoints and other components and dependencies like a dynamo DB database",
    "start": "2772710",
    "end": "2778410"
  },
  {
    "text": "if you're using that with some of these server less resource types and you use AWS serverless function a lot of this a",
    "start": "2778410",
    "end": "2786270"
  },
  {
    "text": "lot of these things are generated for you and it really beyond that it supports anything the confirmation",
    "start": "2786270",
    "end": "2792420"
  },
  {
    "text": "supports it's been open source the translator has been recently open source",
    "start": "2792420",
    "end": "2798789"
  },
  {
    "text": "but Sam it's already it's mature to the sense that it's been available for a couple of years and another thing that",
    "start": "2798789",
    "end": "2804609"
  },
  {
    "text": "it has is a tool called Sam local where you can do a lot of your development in Sam without while being disconnected",
    "start": "2804609",
    "end": "2810880"
  },
  {
    "text": "from the network and it has simulators for for things like dynamo Dewey one thing maybe I'd just to add the linter",
    "start": "2810880",
    "end": "2817929"
  },
  {
    "start": "2814000",
    "end": "2916000"
  },
  {
    "text": "that we were talking about earlier integrates with that Sam translator so you can actually use the same linter to",
    "start": "2817929",
    "end": "2823449"
  },
  {
    "text": "validate a Sam template that you would a regular CloudFormation template so for",
    "start": "2823449",
    "end": "2828729"
  },
  {
    "text": "you confirmation folks this is what a Sam template looks like very much like a confirmation template biggest difference",
    "start": "2828729",
    "end": "2835599"
  },
  {
    "text": "you see the transform definition there which is where it says aw server list 2016 1031 of the second line and then",
    "start": "2835599",
    "end": "2843459"
  },
  {
    "text": "with this abbreviated resource that's a type serverless function you define the",
    "start": "2843459",
    "end": "2849309"
  },
  {
    "text": "right handle in the runtime and a policy right in line and it generates a whole",
    "start": "2849309",
    "end": "2854829"
  },
  {
    "text": "bunch of these things for you so now let's look at the pipeline if you were using Sam for CI CD the beginning kind",
    "start": "2854829",
    "end": "2863019"
  },
  {
    "text": "of like stays the same and in code build you'll have your code artifacts your",
    "start": "2863019",
    "end": "2868179"
  },
  {
    "text": "change sets that it generates and then once the change sets are generated you can make things happen like for example",
    "start": "2868179",
    "end": "2873579"
  },
  {
    "text": "require manual approvals or do automatic approvals as you write other tests",
    "start": "2873579",
    "end": "2878979"
  },
  {
    "text": "especially for your API endpoints you can do API testing with tools like postman if you use Sam and the AWS",
    "start": "2878979",
    "end": "2887169"
  },
  {
    "text": "server in its API resource type Sam can automatically trigger and your API gateway deployment as part of your",
    "start": "2887169",
    "end": "2894039"
  },
  {
    "text": "regular confirmation appointment so you don't you yourself don't have to manually add any extra custom deployment",
    "start": "2894039",
    "end": "2901029"
  },
  {
    "text": "logic to it CFM build is also integrated with Sam and it will generate a template",
    "start": "2901029",
    "end": "2908079"
  },
  {
    "text": "instead of a native CFM template if you add an NTP I'll call produced summers",
    "start": "2908079",
    "end": "2913419"
  },
  {
    "text": "file in the package root directory so to summarize don't think that your",
    "start": "2913419",
    "end": "2922539"
  },
  {
    "start": "2916000",
    "end": "3211000"
  },
  {
    "text": "application and the application architecture is such that it cannot benefit from a pipeline we talked about",
    "start": "2922539",
    "end": "2930069"
  },
  {
    "text": "very traditional probably people will consider web orientated applications but even in ec2",
    "start": "2930069",
    "end": "2937720"
  },
  {
    "text": "if your application is more analytical versus transactional and you're deploying data lakes you can set up",
    "start": "2937720",
    "end": "2943510"
  },
  {
    "text": "pipelines for this as well in the same way that in this that you can do unit testing for code you can do data base",
    "start": "2943510",
    "end": "2950110"
  },
  {
    "text": "unit testing as well same applies to the other application architectures that we",
    "start": "2950110",
    "end": "2955570"
  },
  {
    "text": "discuss key takeaways the benefit of treating infrastructure definitions is",
    "start": "2955570",
    "end": "2962710"
  },
  {
    "text": "code is number one it's really solid documentation because the documentation for perhaps an auditor or something it's",
    "start": "2962710",
    "end": "2969700"
  },
  {
    "text": "right there or code that you're executing number two you can take the same type of tools that people use for",
    "start": "2969700",
    "end": "2976030"
  },
  {
    "text": "code testing linting like we mentioned before and apply those same benefits to",
    "start": "2976030",
    "end": "2983470"
  },
  {
    "text": "that code the automation makes it repeatable when you're using a tool like",
    "start": "2983470",
    "end": "2988510"
  },
  {
    "text": "CloudFormation not always it repeatable it is also reversible so there's so many",
    "start": "2988510",
    "end": "2994690"
  },
  {
    "text": "benefits to them we're at a point that if you want to live in the world that you have to compete and release a lot of features",
    "start": "2994690",
    "end": "3000690"
  },
  {
    "text": "quickly in a stable predictable way I don't see any other way of doing that",
    "start": "3000690",
    "end": "3006450"
  },
  {
    "text": "without really buying into that lopsy ICD for all your applications in your portfolio versioning you know we're",
    "start": "3006450",
    "end": "3016410"
  },
  {
    "text": "talking before about one of the practices being when you do a commit put a meaningful message on the committed",
    "start": "3016410",
    "end": "3022590"
  },
  {
    "text": "sometimes something breaks and it's not obvious what broke it can it can lead",
    "start": "3022590",
    "end": "3027900"
  },
  {
    "text": "you quickly to the solution if you look at your commits and said this is why I changed my routing table and if the",
    "start": "3027900",
    "end": "3034290"
  },
  {
    "text": "error that I see is a routing table error I can completely drill down to the previous two verses of the file and why",
    "start": "3034290",
    "end": "3041130"
  },
  {
    "text": "did the change actually broke and in many cases you can just say well let me restore the previous version so that's",
    "start": "3041130",
    "end": "3048030"
  },
  {
    "text": "where version control becomes important and having good discipline with git commits is important as well now I met a",
    "start": "3048030",
    "end": "3055170"
  },
  {
    "text": "lot of customers cuz I do a lot of these Della's presentations and many Confirmation developers come from more",
    "start": "3055170",
    "end": "3062700"
  },
  {
    "text": "of an operational background so it does make sense they're not experts on things like version control and get and some of",
    "start": "3062700",
    "end": "3068970"
  },
  {
    "text": "these tools but if you're open to learning that you'll get significant",
    "start": "3068970",
    "end": "3074970"
  },
  {
    "text": "benefit from having this automation in place testing and testing everything you",
    "start": "3074970",
    "end": "3081510"
  },
  {
    "text": "want to test everything from the very beginning of your code all the way to encode lands in production and why not",
    "start": "3081510",
    "end": "3090480"
  },
  {
    "text": "start testing while you're authoring the code this is one of the reasons why we show you the editor with the CloudFormation linter in particular you",
    "start": "3090480",
    "end": "3096900"
  },
  {
    "text": "can avoid errors by the time you save the file and I have to go to this process of going to the console try to",
    "start": "3096900",
    "end": "3102690"
  },
  {
    "text": "now upload a template find out there's an error going back to your editor it",
    "start": "3102690",
    "end": "3107880"
  },
  {
    "text": "just dries up a lot of minutes if in many many many cases I think there's examples of if you're hitting API",
    "start": "3107880",
    "end": "3114480"
  },
  {
    "text": "throttling limits in many many cases other than that you can avoid any validation errors by using a linter not",
    "start": "3114480",
    "end": "3122700"
  },
  {
    "text": "only in your editor but also by using the lint or in the headless mode like he was doing on pipelines",
    "start": "3122700",
    "end": "3128540"
  },
  {
    "text": "also while we're talking about testing I'm sure many of you have read the CIC",
    "start": "3128540",
    "end": "3134820"
  },
  {
    "text": "debug by Jess humble and it describes character additional test once again as",
    "start": "3134820",
    "end": "3140570"
  },
  {
    "text": "new components come along new ways of testing those components also are emerging so as a spy points are in place",
    "start": "3140570",
    "end": "3147690"
  },
  {
    "text": "expect them to change expect them to grow group resources by lifecycle this",
    "start": "3147690",
    "end": "3154140"
  },
  {
    "text": "is for any other reason other than to dit to reduce your blast radius and risk",
    "start": "3154140",
    "end": "3159480"
  },
  {
    "text": "do it also because you make each operation a lot faster to execute and a",
    "start": "3159480",
    "end": "3165390"
  },
  {
    "text": "lot easier to troubleshoot and test and then deployed via all pipe deployed all",
    "start": "3165390",
    "end": "3171300"
  },
  {
    "text": "be our pipelines one of the things that I've heard a handful of people do is to say well we have a pipeline for",
    "start": "3171300",
    "end": "3177360"
  },
  {
    "text": "production stuff but for development we just kind of like throw things and they're in QA does other things you're",
    "start": "3177360",
    "end": "3183210"
  },
  {
    "text": "only gonna get the maximum benefit of this if you're doing pipelines from the very beginning including for Deb for QA",
    "start": "3183210",
    "end": "3189900"
  },
  {
    "text": "for preview for stage etc and then as you're doing that ensure that you keep",
    "start": "3189900",
    "end": "3195000"
  },
  {
    "text": "the configuration details of the application outside one thing that you mention about keeping parameter Southside confirmation",
    "start": "3195000",
    "end": "3203490"
  },
  {
    "text": "now supports keeping parameters in parameter store keeping secrets and secrets manager those things also take",
    "start": "3203490",
    "end": "3209580"
  },
  {
    "text": "advantage of versioning as well yeah we can't stress enough about starting early",
    "start": "3209580",
    "end": "3214950"
  },
  {
    "start": "3211000",
    "end": "3254000"
  },
  {
    "text": "the hole advantage right of infrastructure is code is providing consistency across environments not",
    "start": "3214950",
    "end": "3220650"
  },
  {
    "text": "having that surprise in production because someone made a manual change so by putting this automation in place",
    "start": "3220650",
    "end": "3227160"
  },
  {
    "text": "you're enforcing that you're making sure that the lower environments are an accurate representation of production",
    "start": "3227160",
    "end": "3233400"
  },
  {
    "text": "not just for the application code but for your configuration management and for the infrastructure itself",
    "start": "3233400",
    "end": "3238680"
  },
  {
    "text": "mm-hm what is the impact of having encryption on maybe you don't want encryption on everywhere but having",
    "start": "3238680",
    "end": "3245430"
  },
  {
    "text": "encryption on in lower environments is certainly going to tell you a lot more about you know the latency of your application so you don't have that",
    "start": "3245430",
    "end": "3251130"
  },
  {
    "text": "surprise when you move to production and move to adoption now we've covered a lot",
    "start": "3251130",
    "end": "3256350"
  },
  {
    "start": "3254000",
    "end": "3334000"
  },
  {
    "text": "of stuff about CICE pipelines different architectures techniques tools testing",
    "start": "3256350",
    "end": "3261590"
  },
  {
    "text": "and versioning and many of you might say well how the heck do I get started do",
    "start": "3261590",
    "end": "3267810"
  },
  {
    "text": "these things kind of like come pre-built there are some examples and there's tools that like me you that actually",
    "start": "3267810",
    "end": "3273270"
  },
  {
    "text": "help along but it's fairly perfectly okay to go ahead and get started with a",
    "start": "3273270",
    "end": "3278910"
  },
  {
    "text": "minimal pipeline that just it's connected to gate or version control and runs a job and copy something and then",
    "start": "3278910",
    "end": "3285720"
  },
  {
    "text": "you build from there when that pipeline matures then you started putting in production I can almost always assure",
    "start": "3285720",
    "end": "3292020"
  },
  {
    "text": "you that some of these very fancy pipelines that you've seen did not start day one with all those components they",
    "start": "3292020",
    "end": "3299580"
  },
  {
    "text": "kind of like evolved and everything I remember one of the first things one of the areas that we spend in pipelines",
    "start": "3299580",
    "end": "3304590"
  },
  {
    "text": "before when I was in another job was the picking out the slowest part of the pipeline which invariably was going",
    "start": "3304590",
    "end": "3311250"
  },
  {
    "text": "through the test suite and come up with different ways to speed up the test suite and everything once you speed that up something else becomes the slowest",
    "start": "3311250",
    "end": "3317970"
  },
  {
    "text": "thing and you try to automate it but you continue to iterate and over time you'll have a fairly stable pipeline that once",
    "start": "3317970",
    "end": "3325470"
  },
  {
    "text": "again gives you the innovation and gives you the ability to tell people we can release quickly with",
    "start": "3325470",
    "end": "3330830"
  },
  {
    "text": "discipline in an auditable repeatable way okay with that there's some links to",
    "start": "3330830",
    "end": "3340190"
  },
  {
    "start": "3334000",
    "end": "3412000"
  },
  {
    "text": "some of the tools that we mentioned the literacy and TGIF element the two tools by Stella Junt CFN nag and new tasks at",
    "start": "3340190",
    "end": "3348920"
  },
  {
    "text": "if you remember we talked about that being developed by the AWS QuickStart scene and again take a look at those",
    "start": "3348920",
    "end": "3355250"
  },
  {
    "text": "quick starts even if you don't need to deploy something like Apache Zeppelin or s AP which are some of the quick starts",
    "start": "3355250",
    "end": "3360770"
  },
  {
    "text": "because there's a lot of really neat things in that code but you can reuse in your code and get some good ideas we do",
    "start": "3360770",
    "end": "3367970"
  },
  {
    "text": "a session here about hardening accounts with confirmation and we use a",
    "start": "3367970",
    "end": "3372980"
  },
  {
    "text": "QuickStart that we collaborated with quick with a QuickStart steam and Accenture and accompanied in an",
    "start": "3372980",
    "end": "3380960"
  },
  {
    "text": "organization called C is a Center for Internet Security you can harden accounts with clout with",
    "start": "3380960",
    "end": "3386480"
  },
  {
    "text": "confirmation creating config rules and lambda and it literally takes 20 minutes",
    "start": "3386480",
    "end": "3392240"
  },
  {
    "text": "to set it up so there's a really noble reason to take not to take advantage of those tools we also mentioned the Sam",
    "start": "3392240",
    "end": "3399260"
  },
  {
    "text": "tool you have CLI and again you have the ability to test locally with that as",
    "start": "3399260",
    "end": "3404390"
  },
  {
    "text": "well thank you so much for attending",
    "start": "3404390",
    "end": "3410080"
  },
  {
    "text": "[Applause]",
    "start": "3410080",
    "end": "3414119"
  }
]