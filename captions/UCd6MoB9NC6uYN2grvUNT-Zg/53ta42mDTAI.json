[
  {
    "start": "0",
    "end": "85000"
  },
  {
    "text": "all right so good afternoon everyone please actually if you still have one",
    "start": "6440",
    "end": "11880"
  },
  {
    "text": "sitting next to you do raise your hand so that a couple of people can still sit down",
    "start": "11880",
    "end": "17480"
  },
  {
    "text": "it's a session that's going to be on chaos engineering part of the evangelistic myself and before we get",
    "start": "17480",
    "end": "23760"
  },
  {
    "text": "started I just want to have a little understanding of the audience how many of you practice chaos engineering today",
    "start": "23760",
    "end": "29670"
  },
  {
    "text": "in your company okay I'm not talking just chaos I'm really talking about chaos in general because I'm pretty sure",
    "start": "29670",
    "end": "35730"
  },
  {
    "text": "everyone else cares I saw two three okay cool so this session is really for you",
    "start": "35730",
    "end": "41059"
  },
  {
    "text": "so I'm part of the evangelist team obviously and I've been working on",
    "start": "41059",
    "end": "47879"
  },
  {
    "text": "large-scale system for about 10 15 years depending on how big the system was and",
    "start": "47879",
    "end": "52920"
  },
  {
    "text": "when you start but I always love breaking things and I'm sure pretty much",
    "start": "52920",
    "end": "59489"
  },
  {
    "text": "sure that yourself you you had legal breaks or things like this when you're a kid and you love to break things and I",
    "start": "59489",
    "end": "67799"
  },
  {
    "text": "think kids love to break things because that's the way we can learn about love and chaos engineering is pretty much",
    "start": "67799",
    "end": "74040"
  },
  {
    "text": "around the ID that breaking is actually a way of learning and hopefully I can",
    "start": "74040",
    "end": "79590"
  },
  {
    "text": "give you this kind of ideas in about one hour so why do we talk about chaos",
    "start": "79590",
    "end": "87600"
  },
  {
    "start": "85000",
    "end": "85000"
  },
  {
    "text": "engineering this is actually an interesting picture this is the constellation of microservices of",
    "start": "87600",
    "end": "94680"
  },
  {
    "text": "amazon.com in 2008 ok things have changed quite much dramatically since",
    "start": "94680",
    "end": "100470"
  },
  {
    "text": "then actually it's increasing this isn't Twitter and this is Netflix so pretty",
    "start": "100470",
    "end": "106320"
  },
  {
    "text": "much the idea of having one or two services doesn't apply anymore and if",
    "start": "106320",
    "end": "112110"
  },
  {
    "text": "you have maybe 5 10 services working together the idea of the system working",
    "start": "112110",
    "end": "118799"
  },
  {
    "text": "all the time is kind of normal we call that full working system right we have ten service the normal operation",
    "start": "118799",
    "end": "125939"
  },
  {
    "text": "mode is everything should work but when you have as many services as that the normal mode of operation doesn't",
    "start": "125939",
    "end": "133640"
  },
  {
    "text": "apply anymore because on any given moment in time there's gonna be some",
    "start": "133640",
    "end": "139069"
  },
  {
    "text": "failures happening in system right so failure is actually something that happens all the time",
    "start": "139069",
    "end": "144980"
  },
  {
    "start": "143000",
    "end": "143000"
  },
  {
    "text": "and since you want to operate in a mode where failure always happen we call that",
    "start": "144980",
    "end": "151730"
  },
  {
    "text": "partial failure mode so that means it's a mode where failure is tolerated and it",
    "start": "151730",
    "end": "157790"
  },
  {
    "text": "actually we embrace failure we say it's not because we have failure in the system that we should not work we just",
    "start": "157790",
    "end": "164030"
  },
  {
    "text": "go into a partial failure mode or degraded mode and this actually is a",
    "start": "164030",
    "end": "169130"
  },
  {
    "text": "real video is a BASE jumper in Norway that wanted to make a good entrance into",
    "start": "169130",
    "end": "174610"
  },
  {
    "text": "I think the world of gymnastics so so to",
    "start": "174610",
    "end": "181489"
  },
  {
    "text": "say and why I like this is it didn't die right actually it didn't die I wouldn't",
    "start": "181489",
    "end": "187280"
  },
  {
    "text": "put a video of someone dying on the stairs but it survived because he had a",
    "start": "187280",
    "end": "192470"
  },
  {
    "text": "parachute okay and this is exactly what we want right we are operating in",
    "start": "192470",
    "end": "197510"
  },
  {
    "text": "failure mode but then we have a decorated state and it survives and then eventually managed to do one",
    "start": "197510",
    "end": "203780"
  },
  {
    "text": "successfully so this exactly what is the idea of partial failure mode and degradation now when we talk about this",
    "start": "203780",
    "end": "212000"
  },
  {
    "text": "we often talk about the word resiliency run and this is exactly what resiliency is resiliency is accepting that there's",
    "start": "212000",
    "end": "219560"
  },
  {
    "text": "going to be some failures now when you expect that there are failures",
    "start": "219560",
    "end": "225220"
  },
  {
    "text": "often people think that there are failures on the infrastructure this is kind of the first things that people",
    "start": "225220",
    "end": "231260"
  },
  {
    "text": "have in mind is like a network connection that is braking or electricity that is braking but actually",
    "start": "231260",
    "end": "237260"
  },
  {
    "text": "failures come from the network infrastructures or the infrastructures go up to the network and data to the",
    "start": "237260",
    "end": "244160"
  },
  {
    "text": "application and evil of people and we're going to talk about some of those patterns a bit further in the",
    "start": "244160",
    "end": "250370"
  },
  {
    "text": "presentation but when you operate in those systems like this the normal",
    "start": "250370",
    "end": "256039"
  },
  {
    "start": "252000",
    "end": "252000"
  },
  {
    "text": "testing framework like unit testing or integration testing pretty much don't",
    "start": "256039",
    "end": "262340"
  },
  {
    "text": "work anymore you have thousands or right I'm pretty sure no one can be test",
    "start": "262340",
    "end": "267940"
  },
  {
    "text": "to really test this kind of thing so what you need to do is try something",
    "start": "267940",
    "end": "273889"
  },
  {
    "text": "else and what we do is we move testing as close to the production system right",
    "start": "273889",
    "end": "279710"
  },
  {
    "text": "so because that's the only place where we could really test the real system is",
    "start": "279710",
    "end": "284900"
  },
  {
    "text": "on the production we have thousands of micro-services we can't have a staging with seven Microsoft seven different",
    "start": "284900",
    "end": "293569"
  },
  {
    "text": "micro services so we try to bring testing close to the production environment so that what we do is kind",
    "start": "293569",
    "end": "299479"
  },
  {
    "start": "298000",
    "end": "298000"
  },
  {
    "text": "of realistic and we started to do this at Amazon in the mid 2000 and the mid",
    "start": "299479",
    "end": "304789"
  },
  {
    "text": "2000 amazon.com was growing a lot we started to have a lot of data centers worldwide and we brought one guy called",
    "start": "304789",
    "end": "314569"
  },
  {
    "text": "Jesse Robbins but we hired a guy called Jesse Robbins and Jesse Robbins was quite particular he actually was a",
    "start": "314569",
    "end": "322219"
  },
  {
    "text": "firefighter during a spare time and do you know what's very uncommon with fire fighters",
    "start": "322219",
    "end": "330020"
  },
  {
    "text": "compared to the rest of professions wanna guess they practice fighting fire",
    "start": "330020",
    "end": "336560"
  },
  {
    "text": "80% of the time all right and you know why they do that so that the 20% of the",
    "start": "336560",
    "end": "344750"
  },
  {
    "text": "time where they go and fight a real fire they have intuition they have been tuition on how to fight",
    "start": "344750",
    "end": "350479"
  },
  {
    "text": "fire if they think about the fire the dead so they have to develop an",
    "start": "350479",
    "end": "356629"
  },
  {
    "text": "intuition and you dip up this intuition through testing and so practicing right",
    "start": "356629",
    "end": "362710"
  },
  {
    "text": "so Jesse Robbins came at Amazon and brought system called",
    "start": "362710",
    "end": "370009"
  },
  {
    "text": "game days and those game days where the early days where we were practicing chaos engineering is basically we would",
    "start": "370009",
    "end": "376759"
  },
  {
    "text": "or Jesse Robbins would just randomly start unplugging servers or shut down",
    "start": "376759",
    "end": "382400"
  },
  {
    "text": "the electricity or any wood or anything you would just really randomly go into",
    "start": "382400",
    "end": "387830"
  },
  {
    "text": "engineering team and say ok let's try if the system is gonna go down they weren't even at",
    "start": "387830",
    "end": "393719"
  },
  {
    "text": "closing the whole data center the first time it did that it actually didn't go well right so there was a lot of issues",
    "start": "393719",
    "end": "400019"
  },
  {
    "text": "but through the different times they practice closing data centers and",
    "start": "400019",
    "end": "405089"
  },
  {
    "text": "breaking things they built a lot of resiliency they started to understand what was happening and eventually the",
    "start": "405089",
    "end": "411479"
  },
  {
    "text": "system become became pretty resilient but chaos engineering actually really",
    "start": "411479",
    "end": "417599"
  },
  {
    "start": "415000",
    "end": "415000"
  },
  {
    "text": "became popular through a company called Netflix Netflix I'm pretty sure you know",
    "start": "417599",
    "end": "423299"
  },
  {
    "text": "Netflix I don't have to reintroduce Netflix but Netflix in 2012 experience",
    "start": "423299",
    "end": "428909"
  },
  {
    "text": "for the big outage that was responsibility from AWS it was not",
    "start": "428909",
    "end": "434189"
  },
  {
    "text": "Netflix fault after that they went into architecting a very big multi region",
    "start": "434189",
    "end": "439769"
  },
  {
    "text": "system which I talked of yesterday but this architecture this global architectures was something they",
    "start": "439769",
    "end": "446669"
  },
  {
    "text": "couldn't test with normal testing tools so they developed tools called the monkeys and the whole monkeys they are",
    "start": "446669",
    "end": "453509"
  },
  {
    "text": "different different of them they are called the simian army and those monkeys",
    "start": "453509",
    "end": "458699"
  },
  {
    "text": "are software system that basically Netflix runs randomly inside their AWS",
    "start": "458699",
    "end": "463889"
  },
  {
    "text": "accounts to break things the first monkey that was launched is this little monkey here called chaos monkey and it",
    "start": "463889",
    "end": "471149"
  },
  {
    "text": "would randomly go and switch off instances ec2 instances in an account and say if the system is supposed to be",
    "start": "471149",
    "end": "478679"
  },
  {
    "text": "resilient I should be able to switch off anything right how many of you always how many of you who say I think the",
    "start": "478679",
    "end": "486419"
  },
  {
    "text": "system is resilient but please don't try it often like this we have system and we",
    "start": "486419",
    "end": "491849"
  },
  {
    "text": "hope the system is resilient but let's not really try because in chess right do you practice chilling your database",
    "start": "491849",
    "end": "498239"
  },
  {
    "text": "regularly how many of you do that yeah it's a very few right what if one day it",
    "start": "498239",
    "end": "504659"
  },
  {
    "text": "will go down because actually it will go down one day like failures always happen",
    "start": "504659",
    "end": "509969"
  },
  {
    "text": "there is no room there is no world where failure doesn't exist okay so let fix",
    "start": "509969",
    "end": "517229"
  },
  {
    "text": "embrace the idea of failure and create a tool to test pretty much everything testing security groups",
    "start": "517229",
    "end": "523370"
  },
  {
    "text": "Network's testing even the resiliency across region failures so the big monkey",
    "start": "523370",
    "end": "528860"
  },
  {
    "text": "the gorilla here once a month go randomly and kill a region inside the",
    "start": "528860",
    "end": "534860"
  },
  {
    "text": "Netflix AWS account and then they can practice moving traffic from one region",
    "start": "534860",
    "end": "539930"
  },
  {
    "text": "to another and they do this while you watch movies okay so they've become so",
    "start": "539930",
    "end": "545240"
  },
  {
    "text": "good that user is pretty much don't realize when this happens so the simian",
    "start": "545240",
    "end": "550760"
  },
  {
    "text": "army is pretty cool right and what is it really in general basically chaos",
    "start": "550760",
    "end": "555980"
  },
  {
    "text": "engineering is really injecting failures so the same way as we build resilience",
    "start": "555980",
    "end": "561260"
  },
  {
    "text": "in our body against sickness we inject vaccines for us our body to create anti",
    "start": "561260",
    "end": "567950"
  },
  {
    "text": "antibodies in a software system we do the same we inject failures and we",
    "start": "567950",
    "end": "573680"
  },
  {
    "text": "inject failures at a lot of different level in the system on the application level on the infrastructure level so",
    "start": "573680",
    "end": "581210"
  },
  {
    "text": "some cool attacks on the infrastructure level is say okay let's unplug the",
    "start": "581210",
    "end": "586310"
  },
  {
    "text": "network right do we have a resilient connection let's add latency you know",
    "start": "586310",
    "end": "592880"
  },
  {
    "text": "latency is the terrible sin right it can destroy system on an application we say okay let's remove the cache or let's",
    "start": "592880",
    "end": "600410"
  },
  {
    "text": "kill a database or let's simply remove a load balancer and see what happens but",
    "start": "600410",
    "end": "607339"
  },
  {
    "text": "that it's not only that one of my favorite attack is actually a pole attack it's a human attack how many of",
    "start": "607339",
    "end": "613940"
  },
  {
    "text": "you have in your company the one person that does everything is like a magician a if he's not coming at work",
    "start": "613940",
    "end": "621380"
  },
  {
    "text": "nothing is pretty much working no one knows I does think he's just by I'll fix",
    "start": "621380",
    "end": "626839"
  },
  {
    "text": "it I'll fix it yeah yeah Algar how many of you have that I had Paul in my life so many what if he doesn't work come or",
    "start": "626839",
    "end": "633230"
  },
  {
    "text": "what if he gets hit by a bus have you thought about that so you want to build",
    "start": "633230",
    "end": "639170"
  },
  {
    "text": "resiliency against Paul and one of the very easy attack you say hey Paul today you don't come to work give me your",
    "start": "639170",
    "end": "645470"
  },
  {
    "text": "laptop and let's don't do anything and now let's test the system and this",
    "start": "645470",
    "end": "651020"
  },
  {
    "text": "actually is very very the so I always love to start with this kind",
    "start": "651020",
    "end": "656920"
  },
  {
    "text": "of attack but let's not do that right now so chaos engineering is really a",
    "start": "656920",
    "end": "663550"
  },
  {
    "text": "discipline to build an intuition okay but we don't just go around that",
    "start": "663550",
    "end": "670330"
  },
  {
    "text": "breaking system in production like this right there's a whole path there's a whole journey into okay",
    "start": "670330",
    "end": "677740"
  },
  {
    "text": "I started chaos engineering now how long does it take for me to actually break these in production it can take weeks it",
    "start": "677740",
    "end": "684430"
  },
  {
    "text": "can take months in years right it's a journey of trying to build resiliency and that's all what is chaos Engineering",
    "start": "684430",
    "end": "692530"
  },
  {
    "text": "is we want to avoid the I think the system will recover we want to have I",
    "start": "692530",
    "end": "698410"
  },
  {
    "text": "know the system will recover okay and chaos engineering is the whole method around trying to prove an assumption",
    "start": "698410",
    "end": "705790"
  },
  {
    "text": "okay that I know the system will recover okay so how many of you had outage that",
    "start": "705790",
    "end": "713140"
  },
  {
    "text": "happen in the nights on Christmas on birthdays two of the biggest outage in",
    "start": "713140",
    "end": "720010"
  },
  {
    "text": "my life where Christmas the third one was my birthday and that was quite",
    "start": "720010",
    "end": "727990"
  },
  {
    "text": "normal that all the other outage was Friday evening Saturday Sunday you know Friday is when everything everyone wants",
    "start": "727990",
    "end": "735130"
  },
  {
    "text": "to go home actually also when things tend to go wrong I don't know what is",
    "start": "735130",
    "end": "740500"
  },
  {
    "text": "this low is probably the low of no one is that the office stuff is gonna break but actually that's exactly what",
    "start": "740500",
    "end": "745990"
  },
  {
    "text": "happened and chaos engineering wants to break things when everyone is in the office okay so that you have all the",
    "start": "745990",
    "end": "754270"
  },
  {
    "text": "best engineers at work ready to jump in and try to fix things versus having one",
    "start": "754270",
    "end": "761470"
  },
  {
    "text": "guy on Friday night wanting to go out pretty much already having had a couple",
    "start": "761470",
    "end": "766870"
  },
  {
    "text": "of beers not ready to take the system now and this is exactly what chaos engineering is okay so when we do chaos",
    "start": "766870",
    "end": "773350"
  },
  {
    "text": "engineering experiment usually it's at 10:00 in the morning actually if you come too much if you start your chemist",
    "start": "773350",
    "end": "779200"
  },
  {
    "text": "experiment or breaking things in the morning people are not ready if you go too late people",
    "start": "779200",
    "end": "784820"
  },
  {
    "text": "want to go on so then 10 a.m. is the good window to do that and especially",
    "start": "784820",
    "end": "790279"
  },
  {
    "text": "you want to avoid doing it at 1:00 a.m. in production when your boss is calling you know when I had outages the first",
    "start": "790279",
    "end": "797509"
  },
  {
    "text": "thing that happened is boss calling and it was 1:00 a.m. I was already all stressed trying to fix the system the",
    "start": "797509",
    "end": "803480"
  },
  {
    "text": "boss calling these things are done I know you know we don't want that it's escalating it's very sweaty you start to",
    "start": "803480",
    "end": "810319"
  },
  {
    "text": "lose all your mind you become really stupid you know that's what it is so chaos engineering is really we try to",
    "start": "810319",
    "end": "817220"
  },
  {
    "text": "avoid this situation where we are stupid okay and usually when you present chaos",
    "start": "817220",
    "end": "823670"
  },
  {
    "text": "engineering to your boss and say all right I want to talk on chaos engineering Adrian say we should break a",
    "start": "823670",
    "end": "830240"
  },
  {
    "text": "database that's how it should it looks like so don't go Monday morning and tell to",
    "start": "830240",
    "end": "836420"
  },
  {
    "text": "your boss a Adrian from AWS say we should break the database that's not what I'm saying",
    "start": "836420",
    "end": "841670"
  },
  {
    "text": "okay twitch don't break stuff what I'm saying is actually a very good thing to",
    "start": "841670",
    "end": "847279"
  },
  {
    "text": "start doing and something that is very important and Norah Jones from Netflix",
    "start": "847279",
    "end": "853970"
  },
  {
    "text": "said that very beautifully is that chaos engineering doesn't create problems right it actually reveals them which is",
    "start": "853970",
    "end": "861199"
  },
  {
    "text": "great and it reveals them when all your neurons are active okay so I often get",
    "start": "861199",
    "end": "868880"
  },
  {
    "text": "the question who is actually doing chose engineering because I showed the microservices of Amazon Netflix Twitter",
    "start": "868880",
    "end": "875690"
  },
  {
    "text": "but actually chaos engineering is practiced by a lot of different organization from very small to very",
    "start": "875690",
    "end": "881209"
  },
  {
    "text": "large this is a map maintained online if you want to see of all the work that is",
    "start": "881209",
    "end": "886939"
  },
  {
    "text": "being done is not me maintaining the map actually severe is very cool guy that is",
    "start": "886939",
    "end": "892100"
  },
  {
    "text": "doing this work but it's a very interesting way to see who is doing what so if you are interested into chaos",
    "start": "892100",
    "end": "897529"
  },
  {
    "text": "engineering really have a look at here and you see this company from Facebook Google Dropbox up to Netflix yeah pretty",
    "start": "897529",
    "end": "905930"
  },
  {
    "text": "much all the company have some sort of chaos engineering and I'm not talking jails",
    "start": "905930",
    "end": "912050"
  },
  {
    "text": "because that would be everyone okay so what is really coast engineering and how",
    "start": "912050",
    "end": "917360"
  },
  {
    "text": "do we do it without that's the that's the important thing chaos engineering you can divide this",
    "start": "917360",
    "end": "922459"
  },
  {
    "text": "into few phases and these phases that start from what we call the steady",
    "start": "922459",
    "end": "929779"
  },
  {
    "text": "states and it go up into trying to make a knife but it is verifying the output",
    "start": "929779",
    "end": "936079"
  },
  {
    "text": "disease even eventually fixing the stuff so what is steady state let's start with",
    "start": "936079",
    "end": "941179"
  },
  {
    "text": "that steady state is the ID to a metric that shows you the normal operation of",
    "start": "941179",
    "end": "948769"
  },
  {
    "start": "942000",
    "end": "942000"
  },
  {
    "text": "your system what is normal operation and that's a good question so a normal",
    "start": "948769",
    "end": "955579"
  },
  {
    "text": "operation is a curve that shows how you system behaves during the day during the",
    "start": "955579",
    "end": "963679"
  },
  {
    "text": "night through change of traffic and this is kind of a normal patterns that you have in some system you know this is",
    "start": "963679",
    "end": "970610"
  },
  {
    "text": "week one and week two on top of each other and you can see kind of the system behaves kind of consistently so the two",
    "start": "970610",
    "end": "978259"
  },
  {
    "text": "weeks are kind of normal there is no big problem here and this is exactly what the steady state is now steady state",
    "start": "978259",
    "end": "985009"
  },
  {
    "text": "shouldn't be CPU shouldn't be memory shouldn't be stuff like this because a large scale you can have a jump in CPU",
    "start": "985009",
    "end": "991670"
  },
  {
    "text": "but actually the user experience is still good right so it doesn't mean you should raise the alarm and wake up",
    "start": "991670",
    "end": "998509"
  },
  {
    "text": "everybody and say ok let's fix stuff steady state is actually a metric that",
    "start": "998509",
    "end": "1003879"
  },
  {
    "text": "should be related to your business need and one of the best steady state that I",
    "start": "1003879",
    "end": "1011980"
  },
  {
    "text": "know of is the one from Netflix Netflix as a steady state called the pulse of",
    "start": "1011980",
    "end": "1018549"
  },
  {
    "text": "Netflix and the pulse of Netflix is very interesting is how many times people click the play button around the world",
    "start": "1018549",
    "end": "1026548"
  },
  {
    "text": "it's funny how many times people click a play button you know why they do this is because if the video doesn't load people",
    "start": "1026549",
    "end": "1035230"
  },
  {
    "text": "tend to click several times and if it doesn't load it means there a problem and since you click several",
    "start": "1035230",
    "end": "1041529"
  },
  {
    "text": "times you're pissed as a user right so it's a direct view of customer",
    "start": "1041529",
    "end": "1047260"
  },
  {
    "text": "experience versus the system and this is a beautiful way for Netflix to measure",
    "start": "1047260",
    "end": "1052809"
  },
  {
    "text": "the steady state and they can actually predict very well the steady state of Netflix across the day is the weeks and",
    "start": "1052809",
    "end": "1060490"
  },
  {
    "text": "the pattern is very very normal okay so at Amazon we also have a couple",
    "start": "1060490",
    "end": "1069850"
  },
  {
    "text": "of steady States if you heard me yesterday I talked about the multi region systems and latency we did some",
    "start": "1069850",
    "end": "1076390"
  },
  {
    "start": "1071000",
    "end": "1071000"
  },
  {
    "text": "experiments at Amazon and increasing 100% 100 milliseconds latency in the UI",
    "start": "1076390",
    "end": "1083140"
  },
  {
    "text": "in the amazon.com retail site add an effect of 1% drop in the sales at the",
    "start": "1083140",
    "end": "1090340"
  },
  {
    "text": "scale of Amazon 1% scale sales drop is pretty big right so that's a direct",
    "start": "1090340",
    "end": "1095500"
  },
  {
    "text": "metric of our business right because our business is selling goods on the platform right so we have a matrix 100",
    "start": "1095500",
    "end": "1103299"
  },
  {
    "text": "milliseconds increase of latency creates some sense of drop so for us measuring",
    "start": "1103299",
    "end": "1108940"
  },
  {
    "text": "sales on our system is very it's a good metric so if we see dramatic change in",
    "start": "1108940",
    "end": "1115210"
  },
  {
    "text": "sales patterns we know that the system is experiencing issue maybe it's an issue in checkout so then it's a direct",
    "start": "1115210",
    "end": "1122380"
  },
  {
    "text": "customer experience so it's an issue in some of the recommendation service that don't work it's also a customer",
    "start": "1122380",
    "end": "1128520"
  },
  {
    "text": "experience that is degraded Google they did similar kind of stuff so Google 500",
    "start": "1128520",
    "end": "1135850"
  },
  {
    "text": "milliseconds latency reduce the search by 20% when your search is the business",
    "start": "1135850",
    "end": "1142179"
  },
  {
    "text": "model it's quite dramatic right and Yahoo did something similar so these are kind of interesting steady states right",
    "start": "1142179",
    "end": "1148299"
  },
  {
    "text": "so the number of search the sales and then the number of time a user clicked on play so when you work at defining the",
    "start": "1148299",
    "end": "1156880"
  },
  {
    "text": "steady state don't just go the easy way towards application metrics or network metrics because it's not only this it",
    "start": "1156880",
    "end": "1164020"
  },
  {
    "text": "has to be a combination of a user and the system interaction okay so once you",
    "start": "1164020",
    "end": "1170710"
  },
  {
    "text": "figure it out what your steady state is and you are able to monitor that steady",
    "start": "1170710",
    "end": "1175779"
  },
  {
    "text": "state you go into analysis and the output is this is exactly what I've said",
    "start": "1175779",
    "end": "1182110"
  },
  {
    "text": "before is what happened if a switch of my daddy my database when you do that",
    "start": "1182110",
    "end": "1192629"
  },
  {
    "text": "you have to get everyone in the room and asked yourself the question right but",
    "start": "1192629",
    "end": "1199350"
  },
  {
    "text": "don't let everyone in the room answer to each other actually ask everyone in the",
    "start": "1199350",
    "end": "1204669"
  },
  {
    "text": "room to write down on the paper what they think is going to happen if the database goes down and you should not",
    "start": "1204669",
    "end": "1211779"
  },
  {
    "text": "just have software engineers you should have database engineers you should have network engineers the UI designers",
    "start": "1211779",
    "end": "1219070"
  },
  {
    "text": "project manager you should have everyone that is involved in building the",
    "start": "1219070",
    "end": "1224559"
  },
  {
    "text": "application okay and you know why is because if you ask anyone in the company",
    "start": "1224559",
    "end": "1230109"
  },
  {
    "text": "what happens when you break the database everyone is going to give you a different answer actually the first time",
    "start": "1230109",
    "end": "1235629"
  },
  {
    "text": "you're going to do that exercise you can stop here and say Oh what do we have different answer why no one knows",
    "start": "1235629",
    "end": "1242859"
  },
  {
    "text": "exactly what's gonna happen and this is actually a very good revelation that",
    "start": "1242859",
    "end": "1247929"
  },
  {
    "text": "there is a problem because everyone should answer the same thing because we should work towards the same goals but",
    "start": "1247929",
    "end": "1254230"
  },
  {
    "text": "when you build system and if you don't build this in your in your documentation",
    "start": "1254230",
    "end": "1261389"
  },
  {
    "text": "how an engineer is going to build the system to know okay if my database goes",
    "start": "1261389",
    "end": "1266499"
  },
  {
    "text": "down then I should have a degradation of service how many of you have database in",
    "start": "1266499",
    "end": "1272109"
  },
  {
    "text": "your applications right how many of you have master database right how many of",
    "start": "1272109",
    "end": "1279100"
  },
  {
    "text": "you read only in your application read",
    "start": "1279100",
    "end": "1284230"
  },
  {
    "text": "only so if my masters goes down if I break my database I can still average to",
    "start": "1284230",
    "end": "1291220"
  },
  {
    "text": "the ridge replica how many one two okay three four whew and that's exactly what",
    "start": "1291220",
    "end": "1297879"
  },
  {
    "text": "the is imagine your Netflix imagine your business is to serve video and your",
    "start": "1297879",
    "end": "1304179"
  },
  {
    "text": "database goes down should that affect customer your business is delivering",
    "start": "1304179",
    "end": "1310750"
  },
  {
    "text": "video is not storing data in a database right so if your database is",
    "start": "1310750",
    "end": "1315790"
  },
  {
    "text": "experiencing issue you should be able to degrade yourself into a read-only mode right because that's that your business",
    "start": "1315790",
    "end": "1322570"
  },
  {
    "text": "is actually trying to move away the failures that don't impact delivery of your video right imagine if you have an",
    "start": "1322570",
    "end": "1329860"
  },
  {
    "text": "authentication system that fails and your users have paid to deliver to play",
    "start": "1329860",
    "end": "1334990"
  },
  {
    "text": "videos right do you just tell them oh sorry identification doesn't work you can't",
    "start": "1334990",
    "end": "1340660"
  },
  {
    "text": "see the videos you paid for what should you do should you fail fail fail or",
    "start": "1340660",
    "end": "1346120"
  },
  {
    "text": "should you fail open fail open means if my authentication system fails I let",
    "start": "1346120",
    "end": "1351940"
  },
  {
    "text": "every users to look at every video because that's the best user experience right that's what they paid for",
    "start": "1351940",
    "end": "1357700"
  },
  {
    "text": "it's not their problem that you have had problems with your authentication system",
    "start": "1357700",
    "end": "1363460"
  },
  {
    "text": "so this idea is like this are very important to talk about and when you have everyone talking about in",
    "start": "1363460",
    "end": "1369160"
  },
  {
    "text": "hypothesis everyone should have exactly the same answer so the first thing to fix is why do we have different answer",
    "start": "1369160",
    "end": "1376110"
  },
  {
    "text": "now let's make an opportunities that eventually after few exercise you all",
    "start": "1376110",
    "end": "1383350"
  },
  {
    "text": "give the same answer never ever I have one person say I think and then let it",
    "start": "1383350",
    "end": "1391780"
  },
  {
    "text": "go if you hear one person say I think the system will recover like that that",
    "start": "1391780",
    "end": "1397780"
  },
  {
    "text": "should be a big big interrogation mark okay because I think just gives you the",
    "start": "1397780",
    "end": "1403179"
  },
  {
    "text": "idea that I'm not so confident and when you want to do chaos experiment you",
    "start": "1403179",
    "end": "1408549"
  },
  {
    "text": "should be very very confident let me give you an example I was few months ago with a company in Iceland it's a big",
    "start": "1408549",
    "end": "1416200"
  },
  {
    "text": "company dealing with a lot of user data and I simply asked them the question of",
    "start": "1416200",
    "end": "1423489"
  },
  {
    "text": "is your AWS a challenge MSA protected MFA is means simply that you receive",
    "start": "1423489",
    "end": "1430690"
  },
  {
    "text": "text message or that you have to put a second number to verify that you're used",
    "start": "1430690",
    "end": "1435820"
  },
  {
    "text": "using that you're the right account owner and it's really a security best",
    "start": "1435820",
    "end": "1441639"
  },
  {
    "text": "practice right and everyone in the room said yeah yeah yeah there's one guy on",
    "start": "1441639",
    "end": "1447340"
  },
  {
    "text": "the side is shy guy to say I think another what do you mean you think is it",
    "start": "1447340",
    "end": "1452649"
  },
  {
    "text": "protected or not and we went to verify and guess what the account was not",
    "start": "1452649",
    "end": "1457659"
  },
  {
    "text": "protected so you had 15 people in the room plus one saying yes it is and one",
    "start": "1457659",
    "end": "1463929"
  },
  {
    "text": "that says I think and actually the account was not protected they just add a small reorg ID to open the account to",
    "start": "1463929",
    "end": "1470710"
  },
  {
    "text": "transfer to someone else and had forgotten to to reenable MFA so the ID",
    "start": "1470710",
    "end": "1478119"
  },
  {
    "text": "of the problem with with that is humans humans we tend to think that a system",
    "start": "1478119",
    "end": "1484029"
  },
  {
    "text": "was like this two weeks ago therefore is going to be like this now if you don't verify you're in big trouble",
    "start": "1484029",
    "end": "1491799"
  },
  {
    "text": "ok so obsessed ends that verify all the time so if you have anyone that says I",
    "start": "1491799",
    "end": "1497470"
  },
  {
    "text": "think stop there and go verify don't break stuff that anyone says I think it",
    "start": "1497470",
    "end": "1502989"
  },
  {
    "text": "should recover go and do chaos experiment and break things when everyone believe the system will be",
    "start": "1502989",
    "end": "1510909"
  },
  {
    "text": "resilient and that's the OL ID you want to break things to verify an ID but it",
    "start": "1510909",
    "end": "1516429"
  },
  {
    "text": "is that something is resonant and this is chaos in general now that's exactly",
    "start": "1516429",
    "end": "1523119"
  },
  {
    "text": "what I said so don't break things that you know is gonna break right now once you have done your hypothesis and say ok",
    "start": "1523119",
    "end": "1530799"
  },
  {
    "text": "what is happening if I break my database and everyone agrees ok the system should",
    "start": "1530799",
    "end": "1535899"
  },
  {
    "text": "go in the read-only mode then you can design an experiment and say ok how am I going to prove this in production or",
    "start": "1535899",
    "end": "1542320"
  },
  {
    "text": "should I go and break the whole production system or should I design a small experiment within",
    "start": "1542320",
    "end": "1549310"
  },
  {
    "text": "production environment to isolate people and see what happens there and this is exactly what designing the experiment is",
    "start": "1549310",
    "end": "1556120"
  },
  {
    "start": "1554000",
    "end": "1554000"
  },
  {
    "text": "is figuring out the scope of your experiment figuring out which users are going to be affected what are you going",
    "start": "1556120",
    "end": "1562420"
  },
  {
    "text": "to do never ever ever ever start with 100% of the users in production right it",
    "start": "1562420",
    "end": "1569050"
  },
  {
    "text": "makes sense so always start with a small set of your users and slowly increase",
    "start": "1569050",
    "end": "1579820"
  },
  {
    "text": "the number of users and closely go to the production system you can of course",
    "start": "1579820",
    "end": "1586110"
  },
  {
    "text": "start with testing staging systems and then build confidence in your",
    "start": "1586110",
    "end": "1594420"
  },
  {
    "text": "architectures or your software system and eventually go to production right but the end goal is really that you will",
    "start": "1594420",
    "end": "1602350"
  },
  {
    "text": "run eventually an experiment in production ok you don't have to start in",
    "start": "1602350",
    "end": "1608410"
  },
  {
    "text": "production but the end goal is like this so you pick your hypothesis you define",
    "start": "1608410",
    "end": "1615190"
  },
  {
    "text": "the scope you control the blast radius and then you need to figure out the",
    "start": "1615190",
    "end": "1621280"
  },
  {
    "text": "matrix ok so matrix is being able to know detect when the system goes down",
    "start": "1621280",
    "end": "1627150"
  },
  {
    "text": "notify all these kind of very important matrix that you will have to measure because when you make an experiment it's",
    "start": "1627150",
    "end": "1633790"
  },
  {
    "text": "a scientific experiment you want to use data you don't want to just say ok let's break and then check what happened you",
    "start": "1633790",
    "end": "1641020"
  },
  {
    "text": "wanna have measured data so that you can go back to the experiment and say this is exactly what happened this is a",
    "start": "1641020",
    "end": "1647410"
  },
  {
    "text": "timeline and then understand exactly what happened so picking up the metric is super",
    "start": "1647410",
    "end": "1652960"
  },
  {
    "text": "important once you do that make sure",
    "start": "1652960",
    "end": "1658690"
  },
  {
    "text": "that you have a return button and at the button that you can stop an experiment",
    "start": "1658690",
    "end": "1663940"
  },
  {
    "text": "very often at the beginning you will notice that some experiments might go",
    "start": "1663940",
    "end": "1669880"
  },
  {
    "text": "wrong that your assumptions are not what you thought they were so I'm breaking my",
    "start": "1669880",
    "end": "1676450"
  },
  {
    "text": "data base I thought the system was recovering and you noticed after 30 seconds",
    "start": "1676450",
    "end": "1681880"
  },
  {
    "text": "okay the system is still not recovery let's stop the experiment and then you should be able to come back so when you",
    "start": "1681880",
    "end": "1688000"
  },
  {
    "text": "destroy a database it doesn't mean you actually should physically destroy the database you can say remove the",
    "start": "1688000",
    "end": "1693040"
  },
  {
    "text": "connection and then I'll put it back alright so be smart one when you say let's break the database make sure that",
    "start": "1693040",
    "end": "1699850"
  },
  {
    "text": "you can actually put it back right away in the same in the cloud if you go and say okay let's break or let's remove the",
    "start": "1699850",
    "end": "1706990"
  },
  {
    "text": "database don't just say oh bomb an instance on my database click delete no all right just remove or add a",
    "start": "1706990",
    "end": "1714820"
  },
  {
    "text": "security group remove the connection do a change in the network with one click",
    "start": "1714820",
    "end": "1719980"
  },
  {
    "text": "you are able to come back right so be careful what you're doing so you have",
    "start": "1719980",
    "end": "1725470"
  },
  {
    "text": "your back button you have your emergency stop and now you're running your experiment the best way I've found to do",
    "start": "1725470",
    "end": "1734290"
  },
  {
    "start": "1729000",
    "end": "1729000"
  },
  {
    "text": "experiment is through Canary deployments and I love especially for large-scale systems are loved to do experiment on",
    "start": "1734290",
    "end": "1741280"
  },
  {
    "text": "the DNS level and this is just one way of doing it you don't have to do it like",
    "start": "1741280",
    "end": "1746440"
  },
  {
    "text": "this but canary deployment for me is good because canary deployment means I have my normal versions of the normal",
    "start": "1746440",
    "end": "1755830"
  },
  {
    "text": "system in production and then I create a second environment and I only push maybe",
    "start": "1755830",
    "end": "1763150"
  },
  {
    "text": "1% of the traffic there right or 0.1 if you have millions of users and you can",
    "start": "1763150",
    "end": "1768880"
  },
  {
    "text": "also figuring out which user you push first to test the system doing that you",
    "start": "1768880",
    "end": "1775630"
  },
  {
    "text": "can very very fast through DNS failover push back all the traffic there and when",
    "start": "1775630",
    "end": "1781030"
  },
  {
    "text": "you do a canary deployment just don't say ok I'm going to start with 1% 2% 5%",
    "start": "1781030",
    "end": "1786070"
  },
  {
    "text": "of the users and say oh it works let's move everything go all the way 1 2 3 4 5",
    "start": "1786070",
    "end": "1792970"
  },
  {
    "text": "6 until 100% and wait systems like with lot of cache needs warm up right so when",
    "start": "1792970",
    "end": "1800980"
  },
  {
    "text": "you move the num users be patient don't say okay one minute system works are increased ten",
    "start": "1800980",
    "end": "1806230"
  },
  {
    "text": "percent well it works and because the system might most likely will go down I've seen system breakdown after 90",
    "start": "1806230",
    "end": "1813820"
  },
  {
    "text": "percent of the traffic was tested after an hour of traffic right that's what it",
    "start": "1813820",
    "end": "1820539"
  },
  {
    "text": "is when you have large-scale system with lot of cash with lot of messaging choose the system takes time to warm up okay",
    "start": "1820539",
    "end": "1828820"
  },
  {
    "text": "the beautiful way with that is you can really flip back so this is why I like and you don't have to do a DNS level",
    "start": "1828820",
    "end": "1835379"
  },
  {
    "text": "cannery you can do on the function level in lambda you can do on the container level with a load balancer on ec2 with a",
    "start": "1835379",
    "end": "1843159"
  },
  {
    "text": "load balancer it's really up to you to do that once you do that you have the",
    "start": "1843159",
    "end": "1849909"
  },
  {
    "text": "matrix you're starting your experiment you've brought the database you have all",
    "start": "1849909",
    "end": "1855669"
  },
  {
    "text": "the metrics you stopped the experiment then you need to verify and verifying is",
    "start": "1855669",
    "end": "1861100"
  },
  {
    "text": "you look at everything that was written in the hypothesis space and you go one",
    "start": "1861100",
    "end": "1866860"
  },
  {
    "text": "by one is it exactly what we thought that was going to happen is the reality",
    "start": "1866860",
    "end": "1873240"
  },
  {
    "text": "representing what people think and this is where you have very interesting conflicts maybe the time that you waited",
    "start": "1873240",
    "end": "1883750"
  },
  {
    "text": "for the system to failover was not what you thought it was you know for example",
    "start": "1883750",
    "end": "1889110"
  },
  {
    "text": "for example when you do a canary deployment or DNS failover there are TTL right in the DNS is it 30",
    "start": "1889110",
    "end": "1897250"
  },
  {
    "text": "seconds is it 60 seconds is it three minutes so all this time",
    "start": "1897250",
    "end": "1903519"
  },
  {
    "text": "that the system does the change needs to be measured and verified and this is",
    "start": "1903519",
    "end": "1908710"
  },
  {
    "text": "very important quantifying the results and for me the",
    "start": "1908710",
    "end": "1914320"
  },
  {
    "start": "1909000",
    "end": "1909000"
  },
  {
    "text": "most important time to detect so one of the big outage that I was talking about",
    "start": "1914320",
    "end": "1921360"
  },
  {
    "text": "was a failure in our detection system our detection system failed",
    "start": "1921360",
    "end": "1928990"
  },
  {
    "text": "means we never realized we never got notified that actually the system was having a failure so we had first a minor",
    "start": "1928990",
    "end": "1936070"
  },
  {
    "text": "failures where the cash system going down the system was supposed to recover",
    "start": "1936070",
    "end": "1941140"
  },
  {
    "text": "but our notification system didn't work actually we didn't get paged so we were",
    "start": "1941140",
    "end": "1949210"
  },
  {
    "text": "all waiting and nothing happened right",
    "start": "1949210",
    "end": "1954400"
  },
  {
    "text": "and that's a big problem you know what the problem was is the escalation path one person had left the company and the",
    "start": "1954400",
    "end": "1963220"
  },
  {
    "text": "escalation path have not been updated it sounds stupid like this but I see Lee that's always what happened actually big",
    "start": "1963220",
    "end": "1970510"
  },
  {
    "text": "outage is not just one thing it's a collection of small things that all happen at the same time create",
    "start": "1970510",
    "end": "1976540"
  },
  {
    "text": "catastrophic failures and this is what it is and if we would have been paged they wouldn't have been a problem",
    "start": "1976540",
    "end": "1982210"
  },
  {
    "text": "because we would have been paged maybe been paged after one minutes and then we",
    "start": "1982210",
    "end": "1987880"
  },
  {
    "text": "would have been able to fix the cache but it took 27 minutes for us to be",
    "start": "1987880",
    "end": "1993340"
  },
  {
    "text": "notified actually is the users that told us the system is downs like what within a wall and in 27 minutes the system had",
    "start": "1993340",
    "end": "2002010"
  },
  {
    "text": "degraded a lot more we started to have cascading failures we starting to have a lot more requests on the database we",
    "start": "2002010",
    "end": "2008910"
  },
  {
    "text": "started to have update requests I was blocking the tables and then all of a sudden the whole system when did you",
    "start": "2008910",
    "end": "2015300"
  },
  {
    "text": "cascading failures a catastrophic one right so it's just like a few small",
    "start": "2015300",
    "end": "2020370"
  },
  {
    "text": "program put together that really creates problem so the first very time to detect",
    "start": "2020370",
    "end": "2025710"
  },
  {
    "text": "super important and of course you need to quantification for everything that",
    "start": "2025710",
    "end": "2031320"
  },
  {
    "text": "your company wants and time to clear all is super important or time to inform the",
    "start": "2031320",
    "end": "2037230"
  },
  {
    "text": "public all this kind of stuff okay so one of the most important thing when you",
    "start": "2037230",
    "end": "2045120"
  },
  {
    "text": "do quantifications of results is do not blame people actually I've seen cultures",
    "start": "2045120",
    "end": "2052950"
  },
  {
    "text": "being broken down because of blaming alright so for example I'll give you an example",
    "start": "2052950",
    "end": "2058850"
  },
  {
    "text": "eight nine years ago i deleted i cleaned a database in production actually I",
    "start": "2058850",
    "end": "2066000"
  },
  {
    "text": "destroyed the database by mistake I thought it was a testing environment I",
    "start": "2066000",
    "end": "2071300"
  },
  {
    "text": "deleted it I like to say I cleaned it I deleted the database and when we did the",
    "start": "2071300",
    "end": "2079470"
  },
  {
    "text": "debrief no one blamed me right and actually I think I wouldn't be here to be honest if anyone would not blame me",
    "start": "2079470",
    "end": "2086340"
  },
  {
    "text": "because I already felt so bad yeah as an engineer you don't want to do stuff like that right because that makes you feel",
    "start": "2086340",
    "end": "2092429"
  },
  {
    "text": "pretty stupid I was hired and that was my third week",
    "start": "2092429",
    "end": "2097670"
  },
  {
    "text": "it will happen to you one day and actually my manager was really nice that",
    "start": "2097670",
    "end": "2103200"
  },
  {
    "text": "he didn't blame me all right so that's super important right and if you would",
    "start": "2103200",
    "end": "2108390"
  },
  {
    "text": "have said all your stupid you come do this list and then I was okay I'm gonna go and make steaks and hamburgers",
    "start": "2108390",
    "end": "2114300"
  },
  {
    "text": "because that's what all so good at you know I was just learning you know and you can make mistakes so instead of",
    "start": "2114300",
    "end": "2121410"
  },
  {
    "text": "blaming me said okay that's done what can you do to never do that again and",
    "start": "2121410",
    "end": "2126690"
  },
  {
    "text": "then we started to build tools right resiliency tool and then we started to build a lot of automation tools to avoid",
    "start": "2126690",
    "end": "2133140"
  },
  {
    "text": "this kind of stuff and actually this is how I got interested into breaking things okay so don't blame anyone",
    "start": "2133140",
    "end": "2140610"
  },
  {
    "text": "because actually that will destroy your company in your culture and then when you do that when you do the verification",
    "start": "2140610",
    "end": "2147960"
  },
  {
    "start": "2144000",
    "end": "2144000"
  },
  {
    "text": "and you want to go through the whole thing you need to have some kind of methodology to understand what really",
    "start": "2147960",
    "end": "2155730"
  },
  {
    "text": "happened you know at Amazon we like to use methodology cause the five why's is",
    "start": "2155730",
    "end": "2161790"
  },
  {
    "text": "like it's a metal methodology that just starts with an outage and then we ask",
    "start": "2161790",
    "end": "2166890"
  },
  {
    "text": "what did we have an outage or because our database went down why did our database went down because they dream",
    "start": "2166890",
    "end": "2172920"
  },
  {
    "text": "deleted the database why did Adrienne delete the database because within a because Adrienne was",
    "start": "2172920",
    "end": "2178980"
  },
  {
    "text": "using the production environment without thinking it was in production environment how is that possible he say",
    "start": "2178980",
    "end": "2185880"
  },
  {
    "text": "because he had to terminal with the same color same font any toy it was I so we started to build tools you know to",
    "start": "2185880",
    "end": "2191670"
  },
  {
    "text": "really understand what was happening and what was happening is that there was nothing for me to know obviously that I",
    "start": "2191670",
    "end": "2199800"
  },
  {
    "text": "was in production environment and this is what we started to build tools to make sure that when you log in the",
    "start": "2199800",
    "end": "2204960"
  },
  {
    "text": "system with your terminal in production it's read right and when you click",
    "start": "2204960",
    "end": "2211380"
  },
  {
    "text": "delete there's verification five times that are you sure you want to delete that that",
    "start": "2211380",
    "end": "2216780"
  },
  {
    "text": "that are you really sure Adam MFA just to make sure and this is",
    "start": "2216780",
    "end": "2222210"
  },
  {
    "text": "what you should do so now the five voice methodology is being criticized quite",
    "start": "2222210",
    "end": "2228240"
  },
  {
    "text": "often because if you ask ten people in a team of Y system went down actually you",
    "start": "2228240",
    "end": "2235260"
  },
  {
    "text": "will end up with five different versions of the Y but at least it gives you an idea of you know were where to look at",
    "start": "2235260",
    "end": "2242670"
  },
  {
    "text": "but don't stop here ask yourself a lot more questions like why didn't anyone",
    "start": "2242670",
    "end": "2249030"
  },
  {
    "text": "help or advice or try to help that's",
    "start": "2249030",
    "end": "2255930"
  },
  {
    "text": "again related to blaming in team someone might say the database went down and",
    "start": "2255930",
    "end": "2263270"
  },
  {
    "text": "Adrian was left alone trying to recover everything why no one helped you know",
    "start": "2263270",
    "end": "2269280"
  },
  {
    "text": "all this kind of stuff and this is very important go deeper into the products try to figure out ask more question and",
    "start": "2269280",
    "end": "2275220"
  },
  {
    "text": "this is super important and few things to always always remember when you try",
    "start": "2275220",
    "end": "2281580"
  },
  {
    "start": "2277000",
    "end": "2277000"
  },
  {
    "text": "to find the root code even though there's never one root code there might be several root cause because again like",
    "start": "2281580",
    "end": "2288600"
  },
  {
    "text": "I said failures are not one thing it's a collection of small things happening at",
    "start": "2288600",
    "end": "2293640"
  },
  {
    "text": "the same time that create monsters catastrophic failures okay what might",
    "start": "2293640",
    "end": "2300090"
  },
  {
    "text": "seem bending if it's happening at the same time as another so if a cache goes",
    "start": "2300090",
    "end": "2305970"
  },
  {
    "text": "down at the same time as your other system goes down that's bad if any of",
    "start": "2305970",
    "end": "2312090"
  },
  {
    "text": "those would have gone down isolated no problem so always remember that things are not",
    "start": "2312090",
    "end": "2320960"
  },
  {
    "text": "isolated and then you have to fix and",
    "start": "2320960",
    "end": "2326000"
  },
  {
    "text": "here I really have no idea don't know what to tell you but because it's really depending on your application when you",
    "start": "2326000",
    "end": "2332720"
  },
  {
    "text": "have a problem in you have identified you should make a correction of error but don't wait to implement the changes",
    "start": "2332720",
    "end": "2343660"
  },
  {
    "text": "okay once you've understood what is wrong don't say oh but our customers",
    "start": "2343660",
    "end": "2349640"
  },
  {
    "text": "really need more features so let's wait a little bit to implement the fixes okay",
    "start": "2349640",
    "end": "2356300"
  },
  {
    "text": "a couple of months ago I was working with company they made a beautiful",
    "start": "2356300",
    "end": "2362000"
  },
  {
    "text": "beautiful chaos experiment a beautiful analysis of the root cause they are the",
    "start": "2362000",
    "end": "2368540"
  },
  {
    "text": "very beautiful Corrections of errors but they didn't at the time or the management said we don't have the time",
    "start": "2368540",
    "end": "2374390"
  },
  {
    "text": "to to do the change now let's wait a week later same stuff much beer so we're",
    "start": "2374390",
    "end": "2384020"
  },
  {
    "text": "turning to a 20 minute outage in the cow experiments that could be recovered and well-understood ended up in 27 hours",
    "start": "2384020",
    "end": "2392060"
  },
  {
    "text": "down the same thing simply because they didn't take the time to implement what",
    "start": "2392060",
    "end": "2398990"
  },
  {
    "text": "they had what they knew had to be implemented at Amazon when we do",
    "start": "2398990",
    "end": "2404630"
  },
  {
    "text": "Corrections of errors the service teams that writes those Corrections of errors",
    "start": "2404630",
    "end": "2410840"
  },
  {
    "text": "the principles the principle engineers can delay anything in a roadmap actually",
    "start": "2410840",
    "end": "2417680"
  },
  {
    "text": "the corrections for the problems have high priority over anything else okay",
    "start": "2417680",
    "end": "2423230"
  },
  {
    "text": "and this is super important so",
    "start": "2423230",
    "end": "2428590"
  },
  {
    "text": "the next slides are more collections of some of the big patterns that you need",
    "start": "2428590",
    "end": "2433960"
  },
  {
    "text": "to have implemented in your architecture this is some of the stuff that actually broke all the time that if I had outages",
    "start": "2433960",
    "end": "2443520"
  },
  {
    "text": "this is what happens so this is just a collection of some of the top patterns that I've seen and that you should",
    "start": "2443520",
    "end": "2449620"
  },
  {
    "text": "probably think of if you want to be resilient one of the first is of course",
    "start": "2449620",
    "end": "2454740"
  },
  {
    "text": "understanding that and if you were in my presentation yesterday it's simply understanding that if you put two parts",
    "start": "2454740",
    "end": "2460960"
  },
  {
    "start": "2457000",
    "end": "2457000"
  },
  {
    "text": "in parallel actually the availability of the system increased dramatically so for",
    "start": "2460960",
    "end": "2467560"
  },
  {
    "text": "example if I have a Part A X and X and it's 99% available isolated it means",
    "start": "2467560",
    "end": "2474790"
  },
  {
    "text": "this can be down three days but if you put this in parallel with the same system it's 52 minute downtime right so",
    "start": "2474790",
    "end": "2482560"
  },
  {
    "text": "the availability of the system increased dramatically to four nines of availability which is very very good if",
    "start": "2482560",
    "end": "2488950"
  },
  {
    "text": "you do the same thing another time so a third part you increase your ability to",
    "start": "2488950",
    "end": "2494740"
  },
  {
    "text": "six nines okay and this is probably the most important patterns you know it's",
    "start": "2494740",
    "end": "2500890"
  },
  {
    "text": "like putting things in parallel in the system's increase the availability of the system dramatically and this is also",
    "start": "2500890",
    "end": "2507520"
  },
  {
    "text": "why we always say you should architect your application across multiple aces in",
    "start": "2507520",
    "end": "2512830"
  },
  {
    "start": "2508000",
    "end": "2508000"
  },
  {
    "text": "Amazon we talked about regions and in regions they are ability zones H availability zones as one to several",
    "start": "2512830",
    "end": "2520150"
  },
  {
    "text": "data centers and when you architect an application you should always be across",
    "start": "2520150",
    "end": "2525190"
  },
  {
    "text": "several read several AZ's right so that if an AC is experiencing issues your",
    "start": "2525190",
    "end": "2530650"
  },
  {
    "text": "application is available in other Isis when you do this you need to make sure that your application is stateless so",
    "start": "2530650",
    "end": "2537490"
  },
  {
    "start": "2533000",
    "end": "2533000"
  },
  {
    "text": "that means that your application can take requests or that the terms send service in one AZ or the other can take",
    "start": "2537490",
    "end": "2545320"
  },
  {
    "text": "two subsequent requests without any problem right so that means service a",
    "start": "2545320",
    "end": "2551370"
  },
  {
    "text": "and B need to share all the states with services in other phases and this is",
    "start": "2551370",
    "end": "2557980"
  },
  {
    "text": "what we call stateless you never store State locally on your function on your",
    "start": "2557980",
    "end": "2563450"
  },
  {
    "text": "container on your instance always share that state with other through a cache",
    "start": "2563450",
    "end": "2569900"
  },
  {
    "text": "right so ready is memcache rabbitmq if you want to do that elasticsearch DynamoDB there's a lot of different",
    "start": "2569900",
    "end": "2576440"
  },
  {
    "text": "solutions I tend to prefer memcache in Redis when you do this you can make your",
    "start": "2576440",
    "end": "2585079"
  },
  {
    "text": "system pretty much resilient because if my ACS go down my state is preserved and",
    "start": "2585079",
    "end": "2592220"
  },
  {
    "text": "then the service can recover and those services are by default orchestrated",
    "start": "2592220",
    "end": "2598310"
  },
  {
    "text": "across several AC so the state will be preserved okay another pattern which is super important",
    "start": "2598310",
    "end": "2604910"
  },
  {
    "text": "is auto scaling right auto scaling is the idea that with traffic you change the pattern of your application or that",
    "start": "2604910",
    "end": "2611060"
  },
  {
    "text": "you increase resources but actually the interesting thing for resiliency is when",
    "start": "2611060",
    "end": "2616730"
  },
  {
    "text": "you knew when you use oh sorry when you use auto scaling it's also a self-healing system right when you use",
    "start": "2616730",
    "end": "2623359"
  },
  {
    "text": "on AWS auto scaling groups you put always a minimum a minimum of 1 for",
    "start": "2623359",
    "end": "2628490"
  },
  {
    "text": "example or two and if any of the instance experiences issue the system will just shut them down and restart two",
    "start": "2628490",
    "end": "2635450"
  },
  {
    "text": "more instances automatically and this is the basic version of self-healing and",
    "start": "2635450",
    "end": "2641690"
  },
  {
    "text": "this is very interesting patterns for making application resilient alright because then you don't have to go and",
    "start": "2641690",
    "end": "2648589"
  },
  {
    "text": "log into the system and so I need to start another instance the system does that automatically another interesting",
    "start": "2648589",
    "end": "2656240"
  },
  {
    "text": "pattern of course I talked about also guys all so scaling is decoupling ok we",
    "start": "2656240",
    "end": "2662510"
  },
  {
    "start": "2659000",
    "end": "2659000"
  },
  {
    "text": "are talking about micro services all the time what is very important is having a",
    "start": "2662510",
    "end": "2669760"
  },
  {
    "text": "being able to talk through B without knowing B exists right so that actually",
    "start": "2669760",
    "end": "2675859"
  },
  {
    "text": "the system are totally decoupled and there's a few ways you to do that my favorite one is to use Q's right so",
    "start": "2675859",
    "end": "2681950"
  },
  {
    "text": "instead of having system talk to one another you use a queue so that if B is",
    "start": "2681950",
    "end": "2687740"
  },
  {
    "text": "experiencing issues a can still operate normally and send data into the queue right of course you",
    "start": "2687740",
    "end": "2695150"
  },
  {
    "text": "have to make the queue resilient but it's much easier to do like that when you do like this the most common pattern",
    "start": "2695150",
    "end": "2701239"
  },
  {
    "text": "to use to in the coupled system is to isolate your API instances or your API",
    "start": "2701239",
    "end": "2710230"
  },
  {
    "text": "customer facing API with worker instances okay so what happens is",
    "start": "2710470",
    "end": "2716390"
  },
  {
    "text": "imagine I'm a user and I met I made a request like I say my API do something",
    "start": "2716390",
    "end": "2722329"
  },
  {
    "text": "instead of trying to do the something and then return I take the ID and are",
    "start": "2722329",
    "end": "2728809"
  },
  {
    "text": "returned immediately and this is the idea of having a synchronous API so you",
    "start": "2728809",
    "end": "2734059"
  },
  {
    "text": "take a job you put the job into a queue once you do that you worker can get the",
    "start": "2734059",
    "end": "2740900"
  },
  {
    "text": "job from the queue process that job stored the information in the cache that",
    "start": "2740900",
    "end": "2748249"
  },
  {
    "text": "does two things it allows you to scale this independently of that because API",
    "start": "2748249",
    "end": "2756440"
  },
  {
    "text": "is a very often CPU bound or maybe IO bound depending on what system you're",
    "start": "2756440",
    "end": "2763069"
  },
  {
    "text": "using and this might have totally different characteristics right and the very interesting thing with this one is",
    "start": "2763069",
    "end": "2769489"
  },
  {
    "text": "you can start decoupling things even more because now my data stored in cache",
    "start": "2769489",
    "end": "2776059"
  },
  {
    "text": "what you can do is push notification to the user and that the user can come and fetch the result one of the most",
    "start": "2776059",
    "end": "2783410"
  },
  {
    "text": "important thing with this is actually that you don't necessarily only have one",
    "start": "2783410",
    "end": "2789109"
  },
  {
    "text": "queue because when system experience failures you don't want to not let the",
    "start": "2789109",
    "end": "2796369"
  },
  {
    "text": "system work you want to degrade it and this is a very beautiful way to degrade an API for",
    "start": "2796369",
    "end": "2802999"
  },
  {
    "text": "example you might in a system you always a critical API and non-critical API",
    "start": "2802999",
    "end": "2809380"
  },
  {
    "text": "critical API you want to prioritize that so if for example you have some failures",
    "start": "2809380",
    "end": "2815690"
  },
  {
    "text": "happening in your system you might say I'm only going to take critical API and",
    "start": "2815690",
    "end": "2821230"
  },
  {
    "text": "deploy it as all the stuff that I don't care right and this is a very good way to do it choose",
    "start": "2821230",
    "end": "2827330"
  },
  {
    "text": "per priorities another thing what you",
    "start": "2827330",
    "end": "2833359"
  },
  {
    "text": "can do is on the database level alright one thing that very often happen is",
    "start": "2833359",
    "end": "2838880"
  },
  {
    "text": "people use database and that database takes the reads and the right one that",
    "start": "2838880",
    "end": "2844550"
  },
  {
    "text": "the first thing to do is actually split I have a master database and then some",
    "start": "2844550",
    "end": "2850400"
  },
  {
    "text": "read replicas so that you can have reads and writes happening a different place very often",
    "start": "2850400",
    "end": "2856460"
  },
  {
    "text": "the database when they write they lock the table so that means you can't read",
    "start": "2856460",
    "end": "2862880"
  },
  {
    "text": "as much as you want if you do that you can decouple the rights to the reads and",
    "start": "2862880",
    "end": "2868609"
  },
  {
    "text": "actually scale your application so that means it's a very easy way to scale if",
    "start": "2868609",
    "end": "2873830"
  },
  {
    "text": "you use Amazon RDS you can add five replicas if you Aurora you can have 15",
    "start": "2873830",
    "end": "2879890"
  },
  {
    "text": "of them that means there's a lot of way to scale your reads and it's also a very",
    "start": "2879890",
    "end": "2885320"
  },
  {
    "text": "good way to do read-only mode the questions are asked was if my master",
    "start": "2885320",
    "end": "2890540"
  },
  {
    "text": "database goes down well my rear epic are all going to work and you can very very",
    "start": "2890540",
    "end": "2895550"
  },
  {
    "text": "easily have an application that is read-only and then you might want to",
    "start": "2895550",
    "end": "2900680"
  },
  {
    "text": "store transaction or store things there in a queue and then push them a bit later to the database once it's",
    "start": "2900680",
    "end": "2907010"
  },
  {
    "text": "recovered so it actually gives you a very easy way to do graceful degradation okay so from master failures to",
    "start": "2907010",
    "end": "2914810"
  },
  {
    "text": "read-only mode and many many companies use that and you don't necessarily see",
    "start": "2914810",
    "end": "2920510"
  },
  {
    "text": "it because your application still works another pattern is of course database",
    "start": "2920510",
    "end": "2926390"
  },
  {
    "text": "Federation very often when you look at databases there are tables that are absolutely not related so one easy way",
    "start": "2926390",
    "end": "2933890"
  },
  {
    "start": "2928000",
    "end": "2928000"
  },
  {
    "text": "to scale the database is actually to remove the one from another put-put tables in different databases if",
    "start": "2933890",
    "end": "2941390"
  },
  {
    "text": "they don't have relation to them you don't do joins between all of those it",
    "start": "2941390",
    "end": "2946609"
  },
  {
    "text": "doesn't make sense to have them at Amazon in 2007/8 we did an analysis of",
    "start": "2946609",
    "end": "2954570"
  },
  {
    "text": "all the database query that was happening in our system and 70% of them were not transactional right so we were",
    "start": "2954570",
    "end": "2961380"
  },
  {
    "text": "using a lot of transaction transactional database but 70% of them were not transactional so what we did is we",
    "start": "2961380",
    "end": "2967740"
  },
  {
    "text": "actually add the Federation and move the transactional database to a smaller cluster of transactional database and",
    "start": "2967740",
    "end": "2974130"
  },
  {
    "text": "then implemented DynamoDB right and this is why we now have DynamoDB so you can",
    "start": "2974130",
    "end": "2979740"
  },
  {
    "text": "also do Federation of different type of database you can have no as sequel and sequel you don't have to make one choice",
    "start": "2979740",
    "end": "2987300"
  },
  {
    "start": "2980000",
    "end": "2980000"
  },
  {
    "text": "and you know the sequel versus no sequel war is just for internet memes right you",
    "start": "2987300",
    "end": "2993330"
  },
  {
    "text": "have to use both they have qualities that are actually important and the last resort to scaling your database is of",
    "start": "2993330",
    "end": "3000320"
  },
  {
    "text": "course the charting the database that's on the short id it's maybe more advanced",
    "start": "3000320",
    "end": "3005810"
  },
  {
    "text": "I'll leave it in the slides I want to move on because I'm running out of time enough stuff I want to talk about",
    "start": "3005810",
    "end": "3011830"
  },
  {
    "text": "important thing is do not store transient state in database actually some of the biggest outage of a hat was",
    "start": "3011830",
    "end": "3018050"
  },
  {
    "text": "because of updates query on the database right when you do an update query on the database it means you want to update a",
    "start": "3018050",
    "end": "3023630"
  },
  {
    "text": "value in the database that means you mutate that value so what did you put it in the first place there right there's",
    "start": "3023630",
    "end": "3029030"
  },
  {
    "text": "no reason so a database should only be used for data that is not mutated if you want to mutate your data use systems",
    "start": "3029030",
    "end": "3036140"
  },
  {
    "text": "like radius or memcache or system that actually live yet the request to the",
    "start": "3036140",
    "end": "3042380"
  },
  {
    "text": "database if you want to query database make sure it's a query that is very important for the database no donut I",
    "start": "3042380",
    "end": "3049670"
  },
  {
    "text": "did I only do read and write if you have to do updates think why you do that okay",
    "start": "3049670",
    "end": "3056120"
  },
  {
    "text": "and most of the time is because you want to mutate data and that's bad use cash",
    "start": "3056120",
    "end": "3062150"
  },
  {
    "text": "or use other system to do that a very important thing what happens in",
    "start": "3062150",
    "end": "3067940"
  },
  {
    "start": "3064000",
    "end": "3064000"
  },
  {
    "text": "large-scale system is cascading failures so you saw we had to availability zones and the load balancer pushing traffic",
    "start": "3067940",
    "end": "3076190"
  },
  {
    "text": "from one AZ to another the load balancer is the mom right the babies are the",
    "start": "3076190",
    "end": "3081230"
  },
  {
    "text": "availability zone one baby is experiencing an outage it falls the mom switched all our attention to",
    "start": "3081230",
    "end": "3087700"
  },
  {
    "text": "one baby and then the baby falls right and this is exactly what cascading failure is the problem here is that you",
    "start": "3087700",
    "end": "3095290"
  },
  {
    "text": "have Bristol situation right if you have two ACS and you have a load balancer",
    "start": "3095290",
    "end": "3100800"
  },
  {
    "text": "distributing traffic between two services and they have 70% resource",
    "start": "3100800",
    "end": "3106150"
  },
  {
    "text": "organization and you flip all the traffic from one to another all of a sudden you have 70% plus 70% and that's",
    "start": "3106150",
    "end": "3113800"
  },
  {
    "text": "the case getting failure so when you design systems like this always make sure that when you flip you don't create",
    "start": "3113800",
    "end": "3120910"
  },
  {
    "text": "this kind of cascading failure mode okay",
    "start": "3120910",
    "end": "3125910"
  },
  {
    "text": "another important things I want to make a test how many of you are Python",
    "start": "3126310",
    "end": "3131650"
  },
  {
    "text": "developers oh cool how many of you know",
    "start": "3131650",
    "end": "3137940"
  },
  {
    "text": "the default timeout for the request library in Python what no one when you",
    "start": "3137940",
    "end": "3148660"
  },
  {
    "text": "design system you don't check timers all right let me tell your story it's a",
    "start": "3148660",
    "end": "3154360"
  },
  {
    "text": "quick story I'm running out of time but imagine I have a user and I'm making requests to a database right very often",
    "start": "3154360",
    "end": "3161920"
  },
  {
    "text": "I make a request I'm a one users so this is one for users and I make a lot of",
    "start": "3161920",
    "end": "3170020"
  },
  {
    "text": "requests imagine my number of requests increased and my database starts to slow down what happened well",
    "start": "3170020",
    "end": "3179730"
  },
  {
    "text": "you have to look at the system man and then you have to say well imagine sorry",
    "start": "3180290",
    "end": "3187080"
  },
  {
    "text": "I go back the system just crazy",
    "start": "3187080",
    "end": "3192150"
  },
  {
    "text": "hello so I'm making my requests I create an insert my database is slowing down",
    "start": "3192150",
    "end": "3199490"
  },
  {
    "text": "what if actually the database slowed down so much that the time out here fell",
    "start": "3199490",
    "end": "3206609"
  },
  {
    "text": "so imagine I didn't implement a time out right but now imagine actually the",
    "start": "3206609",
    "end": "3212670"
  },
  {
    "text": "client-side which often have default time out of let's say 5 or 10 up to 5",
    "start": "3212670",
    "end": "3217980"
  },
  {
    "text": "seconds or 10 seconds decides that ok I'm gonna stop the request you have one",
    "start": "3217980",
    "end": "3224190"
  },
  {
    "text": "request that is blocked to insert data in a database because there's no time out this is timing out so my user makes",
    "start": "3224190",
    "end": "3232080"
  },
  {
    "text": "another request ok my request tries to",
    "start": "3232080",
    "end": "3239220"
  },
  {
    "text": "make another insert into the database my database still doesn't accept the insert there is",
    "start": "3239220",
    "end": "3247619"
  },
  {
    "text": "no time out my connection still locks my user does another retry because it",
    "start": "3247619",
    "end": "3255060"
  },
  {
    "text": "couldn't insert it never gets and all of a sudden you get something like this",
    "start": "3255060",
    "end": "3260869"
  },
  {
    "text": "have you seen that error the error is that your connection pool is out and",
    "start": "3260869",
    "end": "3267930"
  },
  {
    "text": "this is exactly what cascading failure is right because now your user cannot",
    "start": "3267930",
    "end": "3274680"
  },
  {
    "text": "make API requests anymore it's get 500 or 400 depending on what you do right and this is super important so timeouts",
    "start": "3274680",
    "end": "3282720"
  },
  {
    "text": "not implemented can kill your system and this is also some of the outages I've seen is because outage outage by default",
    "start": "3282720",
    "end": "3290250"
  },
  {
    "text": "are actually very often infinite and you",
    "start": "3290250",
    "end": "3296339"
  },
  {
    "text": "don't believe me this is the Python documentation for the request API you",
    "start": "3296339",
    "end": "3301770"
  },
  {
    "text": "see by default requests do not timeout and Python developers trust me you want",
    "start": "3301770",
    "end": "3310790"
  },
  {
    "text": "that to time out right and actually many of the libraries do not time out okay so",
    "start": "3310790",
    "end": "3318109"
  },
  {
    "text": "when you implement system make sure you do if you want to time out there's some",
    "start": "3318109",
    "end": "3323990"
  },
  {
    "text": "decorators in the Python this is for piping developer I'll leave it in the slide so you can do this so really make",
    "start": "3323990",
    "end": "3329599"
  },
  {
    "start": "3327000",
    "end": "3327000"
  },
  {
    "text": "sure you have those time out then you could have done a lot of other stuff you",
    "start": "3329599",
    "end": "3335540"
  },
  {
    "text": "could have waited instead of retrying immediately and this is called well exponential back-off you",
    "start": "3335540",
    "end": "3341900"
  },
  {
    "text": "probably heard about about that so that if I retry every time I do in the retry",
    "start": "3341900",
    "end": "3348530"
  },
  {
    "text": "instead of doing the rich right immediately I wait for example two seconds then four seconds and eight",
    "start": "3348530",
    "end": "3353810"
  },
  {
    "text": "sixteen so I exponentially my wait time a rich right time my wait before I reach",
    "start": "3353810",
    "end": "3359570"
  },
  {
    "text": "why actually increases and this is called exponential back-off and exponential back-off you also want a",
    "start": "3359570",
    "end": "3366500"
  },
  {
    "text": "jitter and there's been some research paper that shows that exponential back off without jitter can also create",
    "start": "3366500",
    "end": "3372230"
  },
  {
    "text": "problems so do make sure that your library have exponential back-off and actually very often they don't okay so",
    "start": "3372230",
    "end": "3380390"
  },
  {
    "text": "make sure when you connect to systems they are exponential back-off you'll all",
    "start": "3380390",
    "end": "3386960"
  },
  {
    "text": "have the slides I'm running out of time I'm being told I need to stop so thank",
    "start": "3386960",
    "end": "3392990"
  },
  {
    "text": "you very much other good afternoon you",
    "start": "3392990",
    "end": "3399270"
  },
  {
    "text": "you",
    "start": "3407770",
    "end": "3409830"
  }
]