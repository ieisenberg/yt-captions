[
  {
    "start": "0",
    "end": "22000"
  },
  {
    "text": "thanks everybody for coming out I know it's probably been a long day for everybody and hopefully this will be a",
    "start": "0",
    "end": "5759"
  },
  {
    "text": "useful hour for you before you go off and play it replay my name is Bob Kenny I am a developer with the API gateway",
    "start": "5759",
    "end": "13980"
  },
  {
    "text": "team and today we're going to be talking about a little bit about how to operate your production API in a server less in",
    "start": "13980",
    "end": "21210"
  },
  {
    "text": "a service environment so I'll first on the top just do a really brief",
    "start": "21210",
    "end": "26580"
  },
  {
    "start": "22000",
    "end": "22000"
  },
  {
    "text": "walkthrough through API gateway and lambda I'm sure everybody in here already has seen this multiple times but just to make sure that we're all on the",
    "start": "26580",
    "end": "32969"
  },
  {
    "text": "same page then we'll jump into monitoring your API using cloud watch metrics alarms and logs then we'll talk",
    "start": "32969",
    "end": "41250"
  },
  {
    "text": "a little bit about how you can protect your API with API gateways built-in throttling awesome authorization as well",
    "start": "41250",
    "end": "47370"
  },
  {
    "text": "as the usage plan features that we launched earlier this year then finally we'll talk a little bit about some of",
    "start": "47370",
    "end": "52620"
  },
  {
    "text": "the ways that you can manage your API deployments and the API lifecycle management so API gateway product I",
    "start": "52620",
    "end": "61829"
  },
  {
    "start": "59000",
    "end": "59000"
  },
  {
    "text": "happen to work on so the the value proposition here is is that you can create a unified REST API for legacy",
    "start": "61829",
    "end": "69450"
  },
  {
    "text": "systems as well as micro services that you might be running with either UCS or",
    "start": "69450",
    "end": "75090"
  },
  {
    "text": "lambda we have built-in DDoS protection that as well as throttling for your",
    "start": "75090",
    "end": "81030"
  },
  {
    "text": "backends so that means that if you have a legacy system that you want to expose to customers you can put it behind the API gateway and we can offer some",
    "start": "81030",
    "end": "87780"
  },
  {
    "text": "protection for you there additionally we can do authorization and authentication for those api's as well as throttle",
    "start": "87780",
    "end": "95729"
  },
  {
    "text": "meter and monetize your api's through the usage plans feature so you know we",
    "start": "95729",
    "end": "103680"
  },
  {
    "start": "101000",
    "end": "101000"
  },
  {
    "text": "have here sort of our architecture so we have mobile clients web sites or back-end services that are connected",
    "start": "103680",
    "end": "109829"
  },
  {
    "text": "through the internet to the cloud front distribution that's created for every single one of API gateways API s then",
    "start": "109829",
    "end": "117119"
  },
  {
    "text": "that comes in to API gateway we have the ability to serve cached results via",
    "start": "117119",
    "end": "123570"
  },
  {
    "text": "dedicated caching inside of the service as well as emit metrics and logging from",
    "start": "123570",
    "end": "128729"
  },
  {
    "text": "service then down stream you can then connect to a lambda function for a true service",
    "start": "128729",
    "end": "135260"
  },
  {
    "text": "architecture or you can integrate with an elastic beanstalk 18 dedicated ec2",
    "start": "135260",
    "end": "141800"
  },
  {
    "text": "instances or any other legacy product that you have that's a public API",
    "start": "141800",
    "end": "146950"
  },
  {
    "text": "additionally you can also integrate with any public AWS service such as s3 or dynamo directly so then we also have",
    "start": "146950",
    "end": "155360"
  },
  {
    "text": "lambda which is a great service that's obviously a lot of people are here or",
    "start": "155360",
    "end": "160520"
  },
  {
    "start": "156000",
    "end": "156000"
  },
  {
    "text": "familiar with it's no infrastructure to manage so it's a truly service offering",
    "start": "160520",
    "end": "166100"
  },
  {
    "text": "or basically you write your code you deploy it and it runs based on events and one of the events that you can do is",
    "start": "166100",
    "end": "172790"
  },
  {
    "text": "API gateway invocations it's great and cost-effective and you can bring your",
    "start": "172790",
    "end": "178460"
  },
  {
    "text": "own code to run inside the container okay so now what I'd like to do is talk",
    "start": "178460",
    "end": "185060"
  },
  {
    "start": "183000",
    "end": "183000"
  },
  {
    "text": "to you a little bit about my friend Doug Doug is a typical satellite he likes his",
    "start": "185060",
    "end": "192230"
  },
  {
    "text": "coffee doug also happens to be a software developer and writes applications and he in his spare time",
    "start": "192230",
    "end": "198680"
  },
  {
    "text": "I'm built this app he called tamper which is a way for him and his friends",
    "start": "198680",
    "end": "203870"
  },
  {
    "text": "to basically rate the various coffee shops and their blends so Doug built",
    "start": "203870",
    "end": "209540"
  },
  {
    "text": "tamper using tamper back-end using basically serverless components using",
    "start": "209540",
    "end": "214820"
  },
  {
    "text": "API gateway lambda and DynamoDB",
    "start": "214820",
    "end": "218830"
  },
  {
    "start": "218000",
    "end": "218000"
  },
  {
    "text": "so the first reviews that Doug got on tamper weren't great so you can see some",
    "start": "220540",
    "end": "225710"
  },
  {
    "text": "selections here so the problem is is that he's having some problems with",
    "start": "225710",
    "end": "230720"
  },
  {
    "text": "errors but doesn't necessarily know you know where they're coming from so the",
    "start": "230720",
    "end": "236240"
  },
  {
    "text": "first way that we're going to take a look at solving this problem it's taking a look at cloud Watch metrics integration in API gateway so by default",
    "start": "236240",
    "end": "245270"
  },
  {
    "start": "243000",
    "end": "243000"
  },
  {
    "text": "API gateway offers a set of default metrics you can see them listed here so they include things like the overall",
    "start": "245270",
    "end": "251210"
  },
  {
    "text": "count of the API calls as well as the number of for xx and 5xx error coats that your API is generating as well as",
    "start": "251210",
    "end": "258140"
  },
  {
    "text": "two different latency metrics one which is the latency metric of the overall call so that's how long API gateway took",
    "start": "258140",
    "end": "264410"
  },
  {
    "text": "from the time it was received until the time there was sent out as well as the integration latency which is the time that it took",
    "start": "264410",
    "end": "270650"
  },
  {
    "text": "for a PA gateway to call your back-end integration and get a response from the integration additionally if you're using",
    "start": "270650",
    "end": "276830"
  },
  {
    "text": "the cache feature we also have cache hit and cache miss counts so on top of the",
    "start": "276830",
    "end": "283850"
  },
  {
    "text": "basic basic metrics for the overall API you can also get detailed level metrics and",
    "start": "283850",
    "end": "289790"
  },
  {
    "text": "these detailed level metrics can be enabled on a per method basis so you can",
    "start": "289790",
    "end": "295130"
  },
  {
    "text": "get the same set of metrics for each one of your methods just to reiterate the",
    "start": "295130",
    "end": "303260"
  },
  {
    "text": "default metrics are included for free you get them by default any time you actually build an API using API gateway",
    "start": "303260",
    "end": "309410"
  },
  {
    "text": "and they're broken bound by the API stage if you opt in to using detailed",
    "start": "309410",
    "end": "314570"
  },
  {
    "text": "metrics standard cloud watch pricing does apply there so every one of your metrics that's tracked for for your",
    "start": "314570",
    "end": "322100"
  },
  {
    "text": "methods will be billed as a custom cloud watch metric so once you have your",
    "start": "322100",
    "end": "329030"
  },
  {
    "start": "327000",
    "end": "327000"
  },
  {
    "text": "metrics you can obviously integrate alarms with those so then cloud watch has obviously an alarm",
    "start": "329030",
    "end": "336770"
  },
  {
    "text": "system that allowed that you can tie to any any metric that's being generated by the system the alarm notifications can",
    "start": "336770",
    "end": "344720"
  },
  {
    "text": "then be sent to an SNS topic and that SNS topic and then have subscriptions to email SMS or other excuse me or even to",
    "start": "344720",
    "end": "354289"
  },
  {
    "text": "a lambda function if you wanted to double down on your surveillance architecture I'm sure probably a lot of",
    "start": "354289",
    "end": "361789"
  },
  {
    "text": "you have already seen all this but I do want to highlight a couple of new things in this area that we actually just",
    "start": "361789",
    "end": "367789"
  },
  {
    "text": "launched right before we invent which is that now the error and cache metrics are actually support averages so previously",
    "start": "367789",
    "end": "376550"
  },
  {
    "text": "you could only see a sum of your of your errors your Forks X or 5x X errors now",
    "start": "376550",
    "end": "382190"
  },
  {
    "text": "you can get an average so that means that you can alarm on the rate of your failures not just the rock out so now",
    "start": "382190",
    "end": "390620"
  },
  {
    "text": "what I like to do is switch over and do a short demo",
    "start": "390620",
    "end": "395590"
  },
  {
    "text": "using the detailed metrics and alarming",
    "start": "396439",
    "end": "401379"
  },
  {
    "text": "I'm hitting right button",
    "start": "409940",
    "end": "413170"
  },
  {
    "text": "which wasn't what they were supposed to know right sorry thank you okay sorry",
    "start": "422680",
    "end": "429010"
  },
  {
    "text": "for that short malfunction okay so now what I have here is a very simple excuse",
    "start": "429010",
    "end": "436030"
  },
  {
    "text": "me very simple REST API built inside of API gateway and what I'm going to do is",
    "start": "436030",
    "end": "441790"
  },
  {
    "text": "actually modify the settings for one of my methods so that I can start recording",
    "start": "441790",
    "end": "446949"
  },
  {
    "text": "detailed metrics so I'm actually going to be calling this gatling random method",
    "start": "446949",
    "end": "453190"
  },
  {
    "text": "I'm going to override the settings for this specific method and enable excuse",
    "start": "453190",
    "end": "459160"
  },
  {
    "text": "me enable details club watch metrics then I'm going to go ahead and save those changes that does not require",
    "start": "459160",
    "end": "464639"
  },
  {
    "text": "redeployment but I'll just be a little while so that those settings can propagate and then I'll bring up our",
    "start": "464639",
    "end": "472169"
  },
  {
    "text": "gatling run here which is basically going to run invocations of that",
    "start": "472169",
    "end": "479710"
  },
  {
    "text": "specific rest URL from basically ten different users and just repeat that",
    "start": "479710",
    "end": "485470"
  },
  {
    "text": "over and over again so then I'll just",
    "start": "485470",
    "end": "495639"
  },
  {
    "text": "also highlight here real quickly our function which is the green of an errors",
    "start": "495639",
    "end": "501010"
  },
  {
    "text": "function which basically generates a random amount of errors I'm going to set this back to small levels and go ahead",
    "start": "501010",
    "end": "510700"
  },
  {
    "text": "and start our Gatling round",
    "start": "510700",
    "end": "513900"
  },
  {
    "text": "so we'll start to see here is a summary of the number of errors in OK's that we're getting from our API you can",
    "start": "524650",
    "end": "531490"
  },
  {
    "text": "already see that we're already getting we already got one 500 from from our API for a small number of requests so now if",
    "start": "531490",
    "end": "540820"
  },
  {
    "text": "I switch over to the cloud watch console and go to our brand new metrics dashboard and go to API gateway",
    "start": "540820",
    "end": "550440"
  },
  {
    "text": "I'll first go ahead and look at the the overall API level metrics because our",
    "start": "561560",
    "end": "568670"
  },
  {
    "text": "detailed metrics haven't quite shown up in in the cloud watch dashboard so you",
    "start": "568670",
    "end": "573950"
  },
  {
    "text": "can see here that I'm already starting to get some amount of data that's from probably from a previous test I was doing and we can see on tighter periods",
    "start": "573950",
    "end": "586329"
  },
  {
    "text": "eventually we'll start to see a number of errors okay here we go so now we saw the last data point and",
    "start": "587290",
    "end": "593660"
  },
  {
    "text": "we're getting a small percentage of errors so from here I can let's go ahead",
    "start": "593660",
    "end": "600470"
  },
  {
    "text": "and see if we've got our detailed metrics coming up yet",
    "start": "600470",
    "end": "604870"
  },
  {
    "text": "all right so our by method metrics are here so let's take a look at those five",
    "start": "615310",
    "end": "620440"
  },
  {
    "text": "X X's that should basically be the same we'll go ahead and move this guy",
    "start": "620440",
    "end": "630150"
  },
  {
    "text": "okay so now from here I can see my my detailed metrics for for this particular",
    "start": "637190",
    "end": "644870"
  },
  {
    "text": "method I can see that I'm getting a small number of errors from from this dashboard I can quickly create a new",
    "start": "644870",
    "end": "651410"
  },
  {
    "text": "alarm",
    "start": "651410",
    "end": "653860"
  },
  {
    "text": "and I'm going to go ahead and set this to fire at ten percent or point one on",
    "start": "662570",
    "end": "667610"
  },
  {
    "text": "an average for any given period I'm going to set it to send to a special",
    "start": "667610",
    "end": "673700"
  },
  {
    "text": "distribution list and go ahead and create that alarm now I'll go back to",
    "start": "673700",
    "end": "678860"
  },
  {
    "text": "lambda and quickly change the parameters so that it will actually fire suppose we",
    "start": "678860",
    "end": "685880"
  },
  {
    "text": "should now see about a twenty percent error rate if I switch back to my",
    "start": "685880",
    "end": "691460"
  },
  {
    "text": "gatling console I should immediately start to see a larger number of errors you can see from that the last run we",
    "start": "691460",
    "end": "698180"
  },
  {
    "text": "got twenty two fifty and we're getting more and more errors coming up and then",
    "start": "698180",
    "end": "706100"
  },
  {
    "text": "if we once again switch back to the cloud watch console we should eventually",
    "start": "706100",
    "end": "713060"
  },
  {
    "text": "start seeing a higher percentage of errors",
    "start": "713060",
    "end": "718360"
  },
  {
    "text": "perils of live demos okay so we should eventually start seeing an increase in",
    "start": "736360",
    "end": "742550"
  },
  {
    "text": "the metrics and so that will eventually cause our cloud watch alarm to fire",
    "start": "742550",
    "end": "747680"
  },
  {
    "text": "which should generate an email to my account to let me know that I am in fact seeing a larger number of errors for",
    "start": "747680",
    "end": "755449"
  },
  {
    "text": "this particular method and so we can",
    "start": "755449",
    "end": "767480"
  },
  {
    "text": "already see here that we've got a data point above so this is this alarm should switch its stage shortly any minute now",
    "start": "767480",
    "end": "781750"
  },
  {
    "text": "okay so our last data point here is still not quite high enough okay well",
    "start": "802480",
    "end": "810850"
  },
  {
    "text": "looks like oh here we go alright so we did get our email even though the dashboard didn't want to quite show us",
    "start": "810850",
    "end": "818209"
  },
  {
    "text": "to it so now we've got a system for finding out when these errors are occurring and in what method they are",
    "start": "818209",
    "end": "824990"
  },
  {
    "text": "occurring in by using our detailed metrics so our friend Doug now has set",
    "start": "824990",
    "end": "835670"
  },
  {
    "text": "up his alarms and metrics and he knows that he knows when these errors are",
    "start": "835670",
    "end": "842089"
  },
  {
    "text": "occurring and with what method they're occurring but he doesn't know why they're occurring and that's where cloud",
    "start": "842089",
    "end": "848959"
  },
  {
    "text": "watch logs comes into play so cloud watch logs is integrated actually in",
    "start": "848959",
    "end": "855829"
  },
  {
    "start": "852000",
    "end": "852000"
  },
  {
    "text": "both services both API gateway and lamda the API gateway integration we basically",
    "start": "855829",
    "end": "861769"
  },
  {
    "text": "have two levels of logging error and info we also support full method and",
    "start": "861769",
    "end": "867050"
  },
  {
    "text": "request response logging as well you can set that globally on an API stage and just as with the API or the detailed",
    "start": "867050",
    "end": "874490"
  },
  {
    "text": "level metrics you can also opt to do this only for specific methods lamda",
    "start": "874490",
    "end": "881180"
  },
  {
    "text": "logging you actually can provide your own logging statements so inside of your",
    "start": "881180",
    "end": "886519"
  },
  {
    "text": "code you log you log whatever it is that you're interested in and it will end up in your log streams for your lambda",
    "start": "886519",
    "end": "893209"
  },
  {
    "text": "functions additionally so cloud watch logs has always kind of supported this idea of",
    "start": "893209",
    "end": "901160"
  },
  {
    "text": "being able to create search filters and generate metrics from your logs and then you can also then set up alarms on those",
    "start": "901160",
    "end": "909079"
  },
  {
    "text": "on those filtered metrics and pivot back to the actual log data that generated",
    "start": "909079",
    "end": "914569"
  },
  {
    "text": "the air that generated the spike in the data that you were looking at so anybody",
    "start": "914569",
    "end": "921470"
  },
  {
    "text": "who's used cloud watch logs in lambda and API gateway is probably very familiar with these screens there's just",
    "start": "921470",
    "end": "926959"
  },
  {
    "text": "a lot of log streams it says due to the way that cloud watch logs is implemented",
    "start": "926959",
    "end": "932809"
  },
  {
    "text": "in both of the services and it's an unfortunate side effect so",
    "start": "932809",
    "end": "937870"
  },
  {
    "text": "one of our developers on the API gateway team took it upon himself to write this nice little tool that is really great",
    "start": "937870",
    "end": "944980"
  },
  {
    "text": "for doing streaming of your logs for debugging purposes so the real nice",
    "start": "944980",
    "end": "950589"
  },
  {
    "text": "benefit here is is that you can actually see both your API gateway logs in your lambda logs in the same screen so what",
    "start": "950589",
    "end": "958930"
  },
  {
    "text": "I'd like to do now is actually demonstrate the use of that tool",
    "start": "958930",
    "end": "964470"
  },
  {
    "text": "so I already have it installed on my on my laptop but it's just a Python",
    "start": "982360",
    "end": "988699"
  },
  {
    "text": "function that's available via pip so you can just do a pip install of API logs and you can get started using using this",
    "start": "988699",
    "end": "995930"
  },
  {
    "text": "tool so I'm actually gonna use it in the watch mode which allows me to basically stream the contents of my api's logs as",
    "start": "995930",
    "end": "1005559"
  },
  {
    "text": "they come in so it will watch all the log streams to look for new data and",
    "start": "1005559",
    "end": "1010689"
  },
  {
    "text": "then will display it on the screen with some hits syntax highlighting to help me look at the logs while they're coming in",
    "start": "1010689",
    "end": "1018360"
  },
  {
    "text": "so I'm gonna go ahead and start that up I'm not gonna see any output because I'm not actually sending any requests to my",
    "start": "1018360",
    "end": "1024668"
  },
  {
    "text": "API well ok so we're gonna get some whole state yeah okay so we got some",
    "start": "1024669",
    "end": "1031569"
  },
  {
    "text": "older data from from some of the previous runs I'm gonna let this just quiesce just a little bit before I move",
    "start": "1031569",
    "end": "1037569"
  },
  {
    "text": "on so this the the tool also offers the ability to search backwards through logs",
    "start": "1037569",
    "end": "1044260"
  },
  {
    "text": "and it has basic syntax highlighting as I mentioned as well as basic search okay",
    "start": "1044260",
    "end": "1049779"
  },
  {
    "text": "so it looks like we are quest now so now I'm going to switch over to another tool really okay",
    "start": "1049779",
    "end": "1056860"
  },
  {
    "text": "I'm gonna switch over to another tool called postman which allows me to kind of do a simple request response with my",
    "start": "1056860",
    "end": "1063909"
  },
  {
    "text": "API and I'm going to invoke this function which I haven't to know is",
    "start": "1063909",
    "end": "1069010"
  },
  {
    "text": "going to generate a 500 and what I'm going to hope to see now in my logs",
    "start": "1069010",
    "end": "1074880"
  },
  {
    "text": "again if I was didn't stop my stuff fast",
    "start": "1074880",
    "end": "1081220"
  },
  {
    "text": "enough okay",
    "start": "1081220",
    "end": "1084148"
  },
  {
    "text": "okay here we go so here's our pause this",
    "start": "1099080",
    "end": "1104929"
  },
  {
    "text": "long enough to get the value okay so I",
    "start": "1104929",
    "end": "1111070"
  },
  {
    "text": "can see here I know that was actually",
    "start": "1111070",
    "end": "1116989"
  },
  {
    "text": "not the method I was looking for I'm sorry folks again perils of live demos so what I was",
    "start": "1116989",
    "end": "1128960"
  },
  {
    "text": "expecting to see here is is that if I had not kept my previous run running and",
    "start": "1128960",
    "end": "1135049"
  },
  {
    "text": "I was seeing some old data is is that I would see the logs from the output of my",
    "start": "1135049",
    "end": "1140359"
  },
  {
    "text": "REST API call and that REST API call would actually indicate to me that my permissions error the permissions on the",
    "start": "1140359",
    "end": "1147409"
  },
  {
    "text": "lambda function that I'm calling are incorrect for API gateway to actually call it and that is why I'm getting a",
    "start": "1147409",
    "end": "1152840"
  },
  {
    "text": "500 on the server side so what I'm going to do now is open up another tab in my",
    "start": "1152840",
    "end": "1160009"
  },
  {
    "text": "console terminal app we're on a quick",
    "start": "1160009",
    "end": "1166600"
  },
  {
    "text": "API call to restore those permissions",
    "start": "1166600",
    "end": "1172330"
  },
  {
    "text": "and then I'm gonna go back to postman rerun that request and now I can see",
    "start": "1175340",
    "end": "1182179"
  },
  {
    "text": "that I'm getting a positive 200 response with the expected payload and return so",
    "start": "1182179",
    "end": "1190850"
  },
  {
    "text": "as you can see the Tool Works works better when there's a smaller amount of",
    "start": "1190850",
    "end": "1196100"
  },
  {
    "text": "data so not necessarily a great tool for for finding a specific log message in a",
    "start": "1196100",
    "end": "1203149"
  },
  {
    "text": "live API but while you're doing testing again really really useful for being",
    "start": "1203149",
    "end": "1208639"
  },
  {
    "text": "able to excuse me for being able to debug errors that are happening in a",
    "start": "1208639",
    "end": "1215960"
  },
  {
    "text": "test API",
    "start": "1215960",
    "end": "1218498"
  },
  {
    "start": "1235000",
    "end": "1235000"
  },
  {
    "text": "okay so let's check back in with Doug Doug turned on logging and he was able",
    "start": "1235970",
    "end": "1241680"
  },
  {
    "text": "to figure out that the areas that he was seeing in his API were actually due to a bug in one of the mobile app versions",
    "start": "1241680",
    "end": "1249150"
  },
  {
    "text": "that he had shipped that was sending a spurious number of requests to a specific API so that was causing",
    "start": "1249150",
    "end": "1257210"
  },
  {
    "text": "basically the excuse me the back end his DynamoDB table to get over to get hit",
    "start": "1257210",
    "end": "1264570"
  },
  {
    "text": "too often causing him to exceed his provisioned throughput capacity causing some 500s for customers who are calling",
    "start": "1264570",
    "end": "1270900"
  },
  {
    "text": "his API so Doug needs a now needs a way to basically be able to limit the",
    "start": "1270900",
    "end": "1276000"
  },
  {
    "text": "traffic coming from that method or from that device to to basically be able to",
    "start": "1276000",
    "end": "1281370"
  },
  {
    "text": "better serve the rest of his customers so that's where we'll move on to the",
    "start": "1281370",
    "end": "1288900"
  },
  {
    "text": "first step of protecting your API via throttling so API gateway actually",
    "start": "1288900",
    "end": "1296250"
  },
  {
    "text": "offers three different levels of throttling the first is API key level",
    "start": "1296250",
    "end": "1301260"
  },
  {
    "text": "throttling via the usage plan feature I'll talk a little bit more about that later the method level throttling so that's",
    "start": "1301260",
    "end": "1308790"
  },
  {
    "text": "where you can actually define how how much a any given method can be called inside of your API you can also set a",
    "start": "1308790",
    "end": "1315960"
  },
  {
    "text": "stage level method default throttling level and then override that on a per",
    "start": "1315960",
    "end": "1322440"
  },
  {
    "text": "method basis like we did with the logging and the metrics before and then finally there is an account level",
    "start": "1322440",
    "end": "1327810"
  },
  {
    "text": "throttling and this one you don't have any control over but you can request",
    "start": "1327810",
    "end": "1333060"
  },
  {
    "text": "increased limits as your as your API grows as with most AWS services API",
    "start": "1333060",
    "end": "1341940"
  },
  {
    "text": "gateway actually implements all throttling via the token bucket algorithm this basically means that",
    "start": "1341940",
    "end": "1346980"
  },
  {
    "text": "there's two values that you're interested in basically the burst level and the constant rate so the burst level",
    "start": "1346980",
    "end": "1353880"
  },
  {
    "text": "is the size of the bucket so that's how many tokens can actually be in an even bucket and the rate is which is how fast",
    "start": "1353880",
    "end": "1360690"
  },
  {
    "text": "it refills so again probably most most of you who",
    "start": "1360690",
    "end": "1368180"
  },
  {
    "start": "1364000",
    "end": "1364000"
  },
  {
    "text": "have used API gateway are already familiar with the fact that we do throttling but one couple things that I",
    "start": "1368180",
    "end": "1373430"
  },
  {
    "text": "do want to highlight that are recent changes in the way we handle throttling so the first one is is that we've",
    "start": "1373430",
    "end": "1379690"
  },
  {
    "text": "reordered the throttling order so we actually do it by now the most specific level so that's API key then method then",
    "start": "1379690",
    "end": "1387980"
  },
  {
    "text": "account so that means that you can actually set levels on your API to",
    "start": "1387980",
    "end": "1393110"
  },
  {
    "text": "protect yourself from being over so protect your API from exceeding the account level limits secondly all",
    "start": "1393110",
    "end": "1401210"
  },
  {
    "text": "throttled methods regardless of why they were throttled will no longer be built",
    "start": "1401210",
    "end": "1407170"
  },
  {
    "text": "so now I'd like to do a quick demo of using throttling at a method level",
    "start": "1408490",
    "end": "1415870"
  },
  {
    "text": "so I'm actually going to be running another gatling simulation and it's basically going to hit a different path",
    "start": "1422320",
    "end": "1428419"
  },
  {
    "text": "in my API called Gatling throttling very",
    "start": "1428419",
    "end": "1435379"
  },
  {
    "text": "descriptive for what we're doing and what I'm going to do is go to my API",
    "start": "1435379",
    "end": "1440450"
  },
  {
    "text": "stage settings actually I'm going to start the Gatling run first",
    "start": "1440450",
    "end": "1446228"
  },
  {
    "text": "and because I haven't set any default throttling limits on this this method it",
    "start": "1455000",
    "end": "1460250"
  },
  {
    "text": "can be called as fast as possible this means that it could potentially use all",
    "start": "1460250",
    "end": "1465890"
  },
  {
    "text": "the way up to my account level limits much as the case was with Doug so now",
    "start": "1465890",
    "end": "1472010"
  },
  {
    "text": "what I'll do now that I have this running is go back to my stage level settings for the gatling throttle method",
    "start": "1472010",
    "end": "1478450"
  },
  {
    "text": "again override the method override the stage level settings and enable a",
    "start": "1478450",
    "end": "1484700"
  },
  {
    "text": "throttling level now I'm just going to go ahead and throttle this way way down to one RPS and again this does not like",
    "start": "1484700",
    "end": "1495320"
  },
  {
    "text": "these stage level settings don't require a deployment but they do take a little bit of time to apply and what I should",
    "start": "1495320",
    "end": "1503270"
  },
  {
    "text": "start to see hopefully in the next refresh of statistics is is that we're",
    "start": "1503270",
    "end": "1508820"
  },
  {
    "text": "now starting to see some 429 responses which means that our throttling is working and we can see that the number",
    "start": "1508820",
    "end": "1515720"
  },
  {
    "text": "of okay's is going up much slower than the number of chaos or 429 so this is a",
    "start": "1515720",
    "end": "1523760"
  },
  {
    "text": "really easy way to kind of to give you control over which methods are using up",
    "start": "1523760",
    "end": "1529280"
  },
  {
    "text": "all of your all of your account level throughput",
    "start": "1529280",
    "end": "1534580"
  },
  {
    "text": "so we'll go back to Doug so Doug now that he knows that the the",
    "start": "1540129",
    "end": "1545419"
  },
  {
    "text": "particular method that was being hit too often he go ahead and set method level",
    "start": "1545419",
    "end": "1550730"
  },
  {
    "text": "throttling on that method he's been able to basically ship a new update to the API to put customers on a different rest",
    "start": "1550730",
    "end": "1558529"
  },
  {
    "text": "resource so that they can call that method at the levels that they need to and customers who are using the old",
    "start": "1558529",
    "end": "1565159"
  },
  {
    "text": "buggy version will get some 429 response errors but the rest of the app should stay should stay active so now now that",
    "start": "1565159",
    "end": "1576649"
  },
  {
    "start": "1574000",
    "end": "1574000"
  },
  {
    "text": "he's fixed some of the problems with his app and the the reviews are starting to come back more positive some of the",
    "start": "1576649",
    "end": "1583730"
  },
  {
    "text": "local coffee shops are starting to notice that they're using that their customers are using tamper to check-in",
    "start": "1583730",
    "end": "1589460"
  },
  {
    "text": "and so they contact Doug because they're interested in selling basically",
    "start": "1589460",
    "end": "1596059"
  },
  {
    "text": "promotions through the application to build brand loyalty so Doug needs a way to be basically be",
    "start": "1596059",
    "end": "1602330"
  },
  {
    "text": "able to give these customers privileged accounts that can modify resources inside of the inside of the temper app",
    "start": "1602330",
    "end": "1608470"
  },
  {
    "text": "and sell resources but also protect the rest of the service so this is where",
    "start": "1608470",
    "end": "1616279"
  },
  {
    "text": "we'll start talking about authorization and authentication in API gateway so",
    "start": "1616279",
    "end": "1623629"
  },
  {
    "start": "1623000",
    "end": "1623000"
  },
  {
    "text": "today there are three main methods for doing authentication and authorization inside of API gateway the first is AWS I",
    "start": "1623629",
    "end": "1637009"
  },
  {
    "text": "am and on despite its name it does not require I am users it can also use roles",
    "start": "1637009",
    "end": "1644359"
  },
  {
    "text": "or Cognito temporary credentials via STS or any of those other things so that",
    "start": "1644359",
    "end": "1651529"
  },
  {
    "text": "supports basically authentication and authorization via based basic I on policy and uses signature version four",
    "start": "1651529",
    "end": "1658850"
  },
  {
    "text": "as any other AWS service would we also",
    "start": "1658850",
    "end": "1664039"
  },
  {
    "text": "have a custom authorizer which basically allows you to write a lambda function to separate up your off",
    "start": "1664039",
    "end": "1670470"
  },
  {
    "text": "and authentication mechanisms from your business logic and that again allows you",
    "start": "1670470",
    "end": "1675930"
  },
  {
    "text": "to spit to authenticate and authorize your API methods what you actually return back from your authorizer is an",
    "start": "1675930",
    "end": "1682560"
  },
  {
    "text": "eye on policy style document that actually defines the permissions that",
    "start": "1682560",
    "end": "1687780"
  },
  {
    "text": "that that specific user has inside of your API then finally we have our Amazon",
    "start": "1687780",
    "end": "1694290"
  },
  {
    "text": "Cognito authorizer which integrates with the Cognito your user pools product it currently only",
    "start": "1694290",
    "end": "1700740"
  },
  {
    "text": "supports authentication so that means that if you want to allow specific you want all of your users to have access to",
    "start": "1700740",
    "end": "1707190"
  },
  {
    "text": "your API you can do that with this and then you can use the information that's fed into your API via the context to",
    "start": "1707190",
    "end": "1714780"
  },
  {
    "text": "determine what permissions that users should have inside of your application",
    "start": "1714780",
    "end": "1720830"
  },
  {
    "text": "so both the I am and the Amazon kognito authorizer have no additional cost",
    "start": "1721220",
    "end": "1727200"
  },
  {
    "text": "whatsoever other than the use of those services so for I am obviously that's free for kognito your user pools you pay",
    "start": "1727200",
    "end": "1734340"
  },
  {
    "text": "for your monthly active users for the",
    "start": "1734340",
    "end": "1739410"
  },
  {
    "text": "custom authorizer you pay only for the authorizer invocations that you make but we do",
    "start": "1739410",
    "end": "1744720"
  },
  {
    "text": "offer a free cache so you can catch the results of the authorizer results and you can offload some of your costs that",
    "start": "1744720",
    "end": "1751230"
  },
  {
    "text": "way again these are probably some",
    "start": "1751230",
    "end": "1757590"
  },
  {
    "start": "1755000",
    "end": "1755000"
  },
  {
    "text": "features that a lot of a lot of you were already familiar with but I do want to highlight a couple of new features that we launched or a couple modifications we",
    "start": "1757590",
    "end": "1765090"
  },
  {
    "text": "launched to these prior to reinvent the first is is that custom authorizers",
    "start": "1765090",
    "end": "1771290"
  },
  {
    "text": "previously you could only return the policy document which described the resources that the customer had access",
    "start": "1771290",
    "end": "1777510"
  },
  {
    "text": "to as well as what we called a principal ID now you can pass back a context",
    "start": "1777510",
    "end": "1784410"
  },
  {
    "text": "dictionary so that JSON document inside of that can be passed into into the API",
    "start": "1784410",
    "end": "1791520"
  },
  {
    "text": "gateway function and then passed on to your lambda or to your back-end depending on your use case so that",
    "start": "1791520",
    "end": "1799770"
  },
  {
    "text": "offers some additional flexibility there and then finally as we did with with the",
    "start": "1799770",
    "end": "1805320"
  },
  {
    "text": "throttling now no longer do we charge for unauthorized requests so if you set",
    "start": "1805320",
    "end": "1810720"
  },
  {
    "text": "up authorization on your API you can be rest assured that the spurious traffic",
    "start": "1810720",
    "end": "1816780"
  },
  {
    "text": "that's not passing your authorization checks will not be charged all right so",
    "start": "1816780",
    "end": "1824190"
  },
  {
    "text": "now I'd like to demo a couple of the authorization mechanisms so the first",
    "start": "1824190",
    "end": "1835950"
  },
  {
    "text": "one I'm going to do is the I am authenticated request so just which on",
    "start": "1835950",
    "end": "1846510"
  },
  {
    "text": "to be a signature and I'll send this request and so what I want to highlight",
    "start": "1846510",
    "end": "1855330"
  },
  {
    "text": "here is so this this the lambda function I'm using here is literally just passing",
    "start": "1855330",
    "end": "1860550"
  },
  {
    "text": "back whatever was passed in and I'm using the API gateways lambda proxy feature which basically passes all of",
    "start": "1860550",
    "end": "1867630"
  },
  {
    "text": "the request metadata in from API gateway to lambda so what I'm getting back is basically the full context of the",
    "start": "1867630",
    "end": "1875460"
  },
  {
    "text": "request that's being sent to API gateway so a couple things to highlight here",
    "start": "1875460",
    "end": "1883100"
  },
  {
    "text": "inside of this identity block you can",
    "start": "1883100",
    "end": "1889590"
  },
  {
    "text": "see here that we have additional information about the I am user that I'm",
    "start": "1889590",
    "end": "1894990"
  },
  {
    "text": "using here so I can see an account ID which is actually going to be mine as well as a principal ID in as well as an",
    "start": "1894990",
    "end": "1904290"
  },
  {
    "text": "access key and then I can also see the actual I am user because I used a user",
    "start": "1904290",
    "end": "1909300"
  },
  {
    "text": "in this case but if it was a role you would see the role information as well",
    "start": "1909300",
    "end": "1914660"
  },
  {
    "text": "okay so now I'll switch over to the custom authorizer but first let me",
    "start": "1916040",
    "end": "1921810"
  },
  {
    "text": "switch back to the AWS console and just take you through the authorizer code",
    "start": "1921810",
    "end": "1927900"
  },
  {
    "text": "really quickly so this authorizes based on the existing",
    "start": "1927900",
    "end": "1934040"
  },
  {
    "text": "blueprint that we have inside of inside of lambda it is modified to use the the",
    "start": "1934040",
    "end": "1941450"
  },
  {
    "text": "new context new context values the blueprint hasn't been updated for that quite yet but you can see down here at",
    "start": "1941450",
    "end": "1948530"
  },
  {
    "text": "the bottom basically that's really a really dumb check but it's a useful",
    "start": "1948530",
    "end": "1955910"
  },
  {
    "text": "example if I pass in the value allow' as a token I will be allowed to call this",
    "start": "1955910",
    "end": "1962360"
  },
  {
    "text": "method if I call pass in the super value I get to do a additional amount of",
    "start": "1962360",
    "end": "1968390"
  },
  {
    "text": "privileges I'm additionally passing back some context about this user so the",
    "start": "1968390",
    "end": "1974390"
  },
  {
    "text": "normal user is me the super user also happens to me me that's my legal name so",
    "start": "1974390",
    "end": "1981470"
  },
  {
    "text": "then if I go back over to postman and I see that I have the allow method and I",
    "start": "1981470",
    "end": "1987770"
  },
  {
    "text": "do send if I go down to the authorizers",
    "start": "1987770",
    "end": "1993430"
  },
  {
    "text": "portion of the response body down here",
    "start": "1993430",
    "end": "1999680"
  },
  {
    "text": "so you can see here that we have the authorizer I have my principal ID which is the normal user but additionally all",
    "start": "1999680",
    "end": "2006370"
  },
  {
    "text": "those context values get passed in as keys into this into this map so that those are all available to me inside of",
    "start": "2006370",
    "end": "2012820"
  },
  {
    "text": "my lambda function if I try to call a method that I am NOT allowed to call I",
    "start": "2012820",
    "end": "2020820"
  },
  {
    "text": "get an appropriate error message saying that I don't have access to this resource but then if I change it if I",
    "start": "2020820",
    "end": "2028330"
  },
  {
    "text": "change my headers to that super user the",
    "start": "2028330",
    "end": "2034870"
  },
  {
    "text": "super user is allowed to access this method and again if I scroll down to the authorizer I can see that the principal",
    "start": "2034870",
    "end": "2041590"
  },
  {
    "text": "ID has changed and now that I can see the context for that user instead",
    "start": "2041590",
    "end": "2048240"
  },
  {
    "text": "so for the customer authorizers you'll also note that none of the identity",
    "start": "2054950",
    "end": "2060408"
  },
  {
    "text": "information down here is filled in so this is specific to I am identities the",
    "start": "2060409",
    "end": "2065898"
  },
  {
    "text": "authorizers will be filled in for both the custom authorizer and the Cognito authorizer",
    "start": "2065899",
    "end": "2072760"
  },
  {
    "text": "okay so Doug set up his promotions interface and used custom authorizers to",
    "start": "2078159",
    "end": "2085520"
  },
  {
    "text": "set it all up so that the users could access and modify and create promotions and it's been a big hit",
    "start": "2085520",
    "end": "2093139"
  },
  {
    "text": "now doug has been talking to some other services that are interested in doing",
    "start": "2093140",
    "end": "2098300"
  },
  {
    "text": "partnership so there's an app that does reviews for brunch locations and so",
    "start": "2098300",
    "end": "2103640"
  },
  {
    "text": "they're interested in using partnering with tamper to be able to offer the reviews of the of the coffee at those",
    "start": "2103640",
    "end": "2110390"
  },
  {
    "text": "brunch spots so Doug wants a way so that he can expose his api's to third parties",
    "start": "2110390",
    "end": "2116450"
  },
  {
    "text": "like this this brunch app but also be able to track and limit their access to",
    "start": "2116450",
    "end": "2123200"
  },
  {
    "text": "call his API so that you can potentially monetize it later so that's where we'll",
    "start": "2123200",
    "end": "2129860"
  },
  {
    "text": "go jump into our last topic on protecting your API which is usage plans so usage plans is a set of features that",
    "start": "2129860",
    "end": "2137360"
  },
  {
    "start": "2136000",
    "end": "2136000"
  },
  {
    "text": "we launched previous earlier this year and I believe April that allows you to",
    "start": "2137360",
    "end": "2145190"
  },
  {
    "text": "do controls both of throttling and quota so a periodic quota by API key so API",
    "start": "2145190",
    "end": "2154520"
  },
  {
    "text": "keys were available when we launched but basically they were only available to kind of just do really basic",
    "start": "2154520",
    "end": "2161740"
  },
  {
    "text": "authorization checks so whether or not you had a key or not with the launch of usage plans you can now track how to see",
    "start": "2161740",
    "end": "2168290"
  },
  {
    "text": "how often an API key is being used on a daily basis via our usage metrics and as",
    "start": "2168290",
    "end": "2174620"
  },
  {
    "text": "well as limit those calls with throttling in quota so that you could then build",
    "start": "2174620",
    "end": "2180470"
  },
  {
    "text": "excuse me usage reports and build directly through to the customer I will",
    "start": "2180470",
    "end": "2186990"
  },
  {
    "text": "note that the the AWS SAS marketplace actually uses this this information so",
    "start": "2186990",
    "end": "2192720"
  },
  {
    "text": "that's actually how that integration works so if you wanted if you're interested in reselling your API through",
    "start": "2192720",
    "end": "2198480"
  },
  {
    "text": "the SAS marketplace you would be using usage plans so now I'll quickly",
    "start": "2198480",
    "end": "2205170"
  },
  {
    "text": "demonstrate the use of usage plans for throttling in quota so I'm gonna switch",
    "start": "2205170",
    "end": "2213450"
  },
  {
    "text": "back to using gatling again and so i've pre created a number of keys and an",
    "start": "2213450",
    "end": "2219330"
  },
  {
    "text": "associated usage plan and i'm just going to call this this usage plans method",
    "start": "2219330",
    "end": "2224609"
  },
  {
    "text": "which is actually enabled for four keys with all of these keys in in parallel so",
    "start": "2224609",
    "end": "2234859"
  },
  {
    "text": "quickly I'm just going to go back to the API gateway console and show you the usage plan so I actually have three",
    "start": "2234859",
    "end": "2241890"
  },
  {
    "text": "different plans so two of the key RS are - the keys are actually under this quota",
    "start": "2241890",
    "end": "2248190"
  },
  {
    "text": "plan but I have a high level throttling limit which allows for a thousand RPS",
    "start": "2248190",
    "end": "2253790"
  },
  {
    "text": "for the key with no quota I have a low a low request a low throttle rate with one",
    "start": "2253790",
    "end": "2261150"
  },
  {
    "text": "RPS with no quota and then our our quota usage plan allows two RPS but limits the",
    "start": "2261150",
    "end": "2269520"
  },
  {
    "text": "request to 50 requests per day so I'm",
    "start": "2269520",
    "end": "2277290"
  },
  {
    "text": "going to go ahead and start up my Gatling run for this",
    "start": "2277290",
    "end": "2281599"
  },
  {
    "text": "so you can see already that we've got key zero is our high-level key so that's",
    "start": "2292620",
    "end": "2298150"
  },
  {
    "text": "getting through no problem no Kos everything's going through fine our key one is our low level throttling so",
    "start": "2298150",
    "end": "2305500"
  },
  {
    "text": "there's only about a request a second going through that key and everything else is being sent to 429 and then our",
    "start": "2305500",
    "end": "2313120"
  },
  {
    "text": "two bottom ones key two and key three are set on our quota so you can see now",
    "start": "2313120",
    "end": "2318550"
  },
  {
    "text": "that they've hit their 50/50 calls per day limit and they're basically not",
    "start": "2318550",
    "end": "2324250"
  },
  {
    "text": "generating any more okay's they're basically they've they've capped at their limit",
    "start": "2324250",
    "end": "2330520"
  },
  {
    "text": "so if you're using usage plans and you have a customer who has hit their quota limit we actually also offer the ability",
    "start": "2330520",
    "end": "2337840"
  },
  {
    "text": "to extend the the quota for the period",
    "start": "2337840",
    "end": "2343960"
  },
  {
    "text": "that they're in so we support daily weekly and monthly quotas and so you can give a customer an extension for for the",
    "start": "2343960",
    "end": "2351610"
  },
  {
    "text": "given period so I'm going to go ahead and give key to another 50 requests for today so we can see that hopefully and",
    "start": "2351610",
    "end": "2363280"
  },
  {
    "text": "so what I should see again once the configuration propagates is is that key",
    "start": "2363280",
    "end": "2368650"
  },
  {
    "text": "to will start to be able to then at two requests a second start to be able to see some okay's again and eventually",
    "start": "2368650",
    "end": "2374740"
  },
  {
    "text": "will hit a hundred requests at which point it will have hit its quota again and the customer can either request",
    "start": "2374740",
    "end": "2380110"
  },
  {
    "text": "another limit increase or wait for the next period so again we're creeping up",
    "start": "2380110",
    "end": "2387190"
  },
  {
    "text": "on 100 requests and again our other key",
    "start": "2387190",
    "end": "2392650"
  },
  {
    "text": "has stayed at 50 and once again we hit a",
    "start": "2392650",
    "end": "2398440"
  },
  {
    "text": "hundred and everything's back to where it was before so again all of those all of these",
    "start": "2398440",
    "end": "2405700"
  },
  {
    "text": "requests that RKO'd again no no charge whatsoever so if you have a customer who's that you need to turn off for any",
    "start": "2405700",
    "end": "2413020"
  },
  {
    "text": "reason you can just simply turn their their their quota or their throttling rate to zero and not have to worry about",
    "start": "2413020",
    "end": "2420220"
  },
  {
    "text": "them causing your bill to go up",
    "start": "2420220",
    "end": "2423990"
  },
  {
    "text": "so so now now Doug's gotten these partnerships everything's continuing to grow he's",
    "start": "2431760",
    "end": "2438690"
  },
  {
    "text": "actually making enough money from tamper that he's actually able to bring on some other people to help work on the",
    "start": "2438690",
    "end": "2444480"
  },
  {
    "text": "application so he's looking for ways to formalize his update process now that it's not just him that's making the",
    "start": "2444480",
    "end": "2450630"
  },
  {
    "text": "updates to the API but a number of developers working for him so now let's",
    "start": "2450630",
    "end": "2456570"
  },
  {
    "text": "talk a little bit about some of the ways that you can manage your API with API gateway so the first way is with API",
    "start": "2456570",
    "end": "2465000"
  },
  {
    "start": "2463000",
    "end": "2463000"
  },
  {
    "text": "stages so API stages are the way for a named link from a deployment of your API",
    "start": "2465000",
    "end": "2472800"
  },
  {
    "text": "to a name so you can create a deployment that is not associated with a stage and",
    "start": "2472800",
    "end": "2479040"
  },
  {
    "text": "then associate the stage to it you can also do quickly do roll backs this way and it's a great way for you to do for",
    "start": "2479040",
    "end": "2487470"
  },
  {
    "text": "managing API life cycles so dev tests prod or alpha beta gamma depending on",
    "start": "2487470",
    "end": "2492900"
  },
  {
    "text": "which terminology you use um it additionally supports parameterised",
    "start": "2492900",
    "end": "2498990"
  },
  {
    "text": "values so for via stage variables no so this could be things like your your beta",
    "start": "2498990",
    "end": "2506130"
  },
  {
    "text": "api hits a beta database so that uses either different credentials or a different RDS database for instance you",
    "start": "2506130",
    "end": "2514200"
  },
  {
    "text": "could put that information in your stage variables and then control keep the same",
    "start": "2514200",
    "end": "2519720"
  },
  {
    "text": "code but just but parameterize your actual values inside of the API",
    "start": "2519720",
    "end": "2528380"
  },
  {
    "start": "2528000",
    "end": "2528000"
  },
  {
    "text": "additionally on the lambda side we have support for versioning and aliases so",
    "start": "2529310",
    "end": "2534870"
  },
  {
    "text": "this is a great way to deploy updates to your lambda code and then also move the",
    "start": "2534870",
    "end": "2540060"
  },
  {
    "text": "alias as much in the same way that you move the stage aliases these work really",
    "start": "2540060",
    "end": "2545160"
  },
  {
    "text": "great with stage variables so you basically set up your stage variables to point to a specific alias and then when",
    "start": "2545160",
    "end": "2552480"
  },
  {
    "text": "you're versioning your lambda functions you can just move of the the lambda function alias from",
    "start": "2552480",
    "end": "2558300"
  },
  {
    "text": "one version to another",
    "start": "2558300",
    "end": "2561050"
  },
  {
    "start": "2563000",
    "end": "2563000"
  },
  {
    "text": "additionally API gateway supports custom domains this is a great way for you to",
    "start": "2563630",
    "end": "2569040"
  },
  {
    "text": "either you know brand your API as well as offer multiple versions of your API",
    "start": "2569040",
    "end": "2575660"
  },
  {
    "text": "so this is one of our recommended methods for versioning you actually have your API dot so in Doug's case we have",
    "start": "2575660",
    "end": "2583950"
  },
  {
    "text": "API tamper comm /v one goes to his v1 version of his API and API tamper comm",
    "start": "2583950",
    "end": "2591210"
  },
  {
    "text": "/b two goes to a different version of his API which was cloned from the existing API",
    "start": "2591210",
    "end": "2598369"
  },
  {
    "start": "2599000",
    "end": "2599000"
  },
  {
    "text": "additionally API gateway supports swagger import and export so swagger is",
    "start": "2601640",
    "end": "2607859"
  },
  {
    "text": "a portable API definition that supports both Jason and llamo and as I mentioned",
    "start": "2607859",
    "end": "2614040"
  },
  {
    "text": "you can import an export so this is a nice way to be able to source control your API definition so you can run code",
    "start": "2614040",
    "end": "2623010"
  },
  {
    "text": "reviews and push your API up to API gateway after it's been reviewed",
    "start": "2623010",
    "end": "2629869"
  },
  {
    "text": "additionally you can also do merge imports so if you have teams that are",
    "start": "2629869",
    "end": "2635310"
  },
  {
    "text": "working on disparate portions of your API you can have them work on a subset of the swagger swagger document and only",
    "start": "2635310",
    "end": "2642599"
  },
  {
    "text": "import that portion as a merge merge import and update that portion",
    "start": "2642599",
    "end": "2648560"
  },
  {
    "start": "2649000",
    "end": "2649000"
  },
  {
    "text": "deployment mechanisms so the this is a Volvo space to put it mildly so up here",
    "start": "2650510",
    "end": "2659220"
  },
  {
    "text": "we I have listed a couple of a few different methods for managing",
    "start": "2659220",
    "end": "2664560"
  },
  {
    "text": "deployments the first is chalice which is a Python micro framework which",
    "start": "2664560",
    "end": "2671310"
  },
  {
    "text": "actually offers a little bit more than just deployment management it also integrates with various Python web",
    "start": "2671310",
    "end": "2679710"
  },
  {
    "text": "service frameworks like flask and includes deployment scripts for managing",
    "start": "2679710",
    "end": "2685109"
  },
  {
    "text": "the lifecycle this is actually written by one of our two helpers on the Python team so it's",
    "start": "2685109",
    "end": "2691220"
  },
  {
    "text": "maintained by AWS next we have server lists which used to be formally known as jaws which is a great excuse me a great",
    "start": "2691220",
    "end": "2699859"
  },
  {
    "text": "framework which actually offers and started working on cross-platform support for service architectures and it",
    "start": "2699859",
    "end": "2707150"
  },
  {
    "text": "supports nodejs Python Java and Scala and it allows you to describe the API",
    "start": "2707150",
    "end": "2712339"
  },
  {
    "text": "resources as well as the API description and then finally the the the serverless",
    "start": "2712339",
    "end": "2719270"
  },
  {
    "text": "application model or Sam for short which was some of you may have seen earlier today which is our extension to cloud",
    "start": "2719270",
    "end": "2727520"
  },
  {
    "text": "formation to basically smooth out some of the edges and allow you to describe more of the resources in your API and",
    "start": "2727520",
    "end": "2735020"
  },
  {
    "text": "not just the API definition okay so",
    "start": "2735020",
    "end": "2743710"
  },
  {
    "start": "2740000",
    "end": "2740000"
  },
  {
    "text": "hopefully this was useful and I want to send you away with the message that to",
    "start": "2743710",
    "end": "2750440"
  },
  {
    "text": "be like Doug so we'd like you to monitor your api's we have cloud watch metrics",
    "start": "2750440",
    "end": "2755720"
  },
  {
    "text": "and cloud watch logs we'd love you to use the throttling and authentication mechanism is to protect your API we'd",
    "start": "2755720",
    "end": "2762529"
  },
  {
    "text": "love you to use we'd love you to use usage plans to make your API is available to third parties and make your",
    "start": "2762529",
    "end": "2768799"
  },
  {
    "text": "api's grow even larger as well as manage your API with one of our one of the",
    "start": "2768799",
    "end": "2773839"
  },
  {
    "text": "available tools for deployments and lifecycle management so that's actually",
    "start": "2773839",
    "end": "2780500"
  },
  {
    "start": "2779000",
    "end": "2779000"
  },
  {
    "text": "the end of our talk today unfortunately actually I have this up here as visit",
    "start": "2780500",
    "end": "2785510"
  },
  {
    "text": "the booth but the booth I don't think will be open tomorrow so if you do have any other questions I'll be around here",
    "start": "2785510",
    "end": "2791510"
  },
  {
    "text": "for a little while before heading over to replay myself so I'll be happy to answer your questions if I can't answer",
    "start": "2791510",
    "end": "2798200"
  },
  {
    "text": "your question here feel free to reach out to us via the forums or on Stack Overflow AWS engineers actually monitor",
    "start": "2798200",
    "end": "2805670"
  },
  {
    "text": "Stack Overflow tags and answer questions there as well excuse me and just as a",
    "start": "2805670",
    "end": "2812990"
  },
  {
    "text": "final note thank you do please make sure to complete your evaluation forms it's",
    "start": "2812990",
    "end": "2818630"
  },
  {
    "text": "extremely useful for me as a presenter as well as us for a company to make sure that we're generating content that is useful for you and with",
    "start": "2818630",
    "end": "2825060"
  },
  {
    "text": "that thank you very much and enjoy replay [Applause]",
    "start": "2825060",
    "end": "2832010"
  }
]