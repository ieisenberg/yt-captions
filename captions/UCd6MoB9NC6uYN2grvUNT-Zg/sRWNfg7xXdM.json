[
  {
    "text": "[Music]",
    "start": "380",
    "end": "12320"
  },
  {
    "text": "hello",
    "start": "12320",
    "end": "12960"
  },
  {
    "text": "i'm kunal a cloud support engineer here",
    "start": "12960",
    "end": "15599"
  },
  {
    "text": "at the aws office in dublin",
    "start": "15599",
    "end": "18080"
  },
  {
    "text": "sometimes customers tell me that they",
    "start": "18080",
    "end": "19840"
  },
  {
    "text": "are able to create a table in athena",
    "start": "19840",
    "end": "21920"
  },
  {
    "text": "but when they query it zero records are",
    "start": "21920",
    "end": "23920"
  },
  {
    "text": "returned",
    "start": "23920",
    "end": "25199"
  },
  {
    "text": "today i'll walk you through three common",
    "start": "25199",
    "end": "27119"
  },
  {
    "text": "scenarios where the query might return",
    "start": "27119",
    "end": "28960"
  },
  {
    "text": "zero records",
    "start": "28960",
    "end": "30000"
  },
  {
    "text": "and how can you resolve it so let's get",
    "start": "30000",
    "end": "32320"
  },
  {
    "text": "started",
    "start": "32320",
    "end": "33840"
  },
  {
    "text": "reason one the first reason could be an",
    "start": "33840",
    "end": "36960"
  },
  {
    "text": "incorrect amazon s3 path while",
    "start": "36960",
    "end": "39600"
  },
  {
    "text": "specifying the s3 path",
    "start": "39600",
    "end": "41520"
  },
  {
    "text": "be sure to specify the burkitt prefix as",
    "start": "41520",
    "end": "44239"
  },
  {
    "text": "opposed to the entire path to the file",
    "start": "44239",
    "end": "47440"
  },
  {
    "text": "that is use s3 my data",
    "start": "47440",
    "end": "50879"
  },
  {
    "text": "slash new instead of s3",
    "start": "50879",
    "end": "54160"
  },
  {
    "text": "my data slash new slash data.json",
    "start": "54160",
    "end": "57760"
  },
  {
    "text": "to create the table in athena you may",
    "start": "57760",
    "end": "60239"
  },
  {
    "text": "have either provided the table",
    "start": "60239",
    "end": "61760"
  },
  {
    "text": "definition",
    "start": "61760",
    "end": "62960"
  },
  {
    "text": "or ddl via the athena console",
    "start": "62960",
    "end": "66000"
  },
  {
    "text": "or used aws glue crawler to",
    "start": "66000",
    "end": "68560"
  },
  {
    "text": "automatically infer the table schema",
    "start": "68560",
    "end": "70880"
  },
  {
    "text": "and populate the table if you provided",
    "start": "70880",
    "end": "72960"
  },
  {
    "text": "the table ddl",
    "start": "72960",
    "end": "74320"
  },
  {
    "text": "via the athena console then check the s3",
    "start": "74320",
    "end": "77360"
  },
  {
    "text": "part specified",
    "start": "77360",
    "end": "78560"
  },
  {
    "text": "and update it if required let me walk",
    "start": "78560",
    "end": "81600"
  },
  {
    "text": "you through the steps",
    "start": "81600",
    "end": "82720"
  },
  {
    "text": "to update the s3 path after logging into",
    "start": "82720",
    "end": "85680"
  },
  {
    "text": "the aws management console",
    "start": "85680",
    "end": "88000"
  },
  {
    "text": "navigate to the athena console",
    "start": "88000",
    "end": "91920"
  },
  {
    "text": "run the show create table table name",
    "start": "95040",
    "end": "98840"
  },
  {
    "text": "command",
    "start": "98840",
    "end": "101840"
  },
  {
    "text": "if you would like to change the table",
    "start": "104960",
    "end": "106479"
  },
  {
    "text": "location that is",
    "start": "106479",
    "end": "108240"
  },
  {
    "text": "in case the entire path to this file was",
    "start": "108240",
    "end": "110799"
  },
  {
    "text": "specified",
    "start": "110799",
    "end": "111920"
  },
  {
    "text": "then update the location by using the",
    "start": "111920",
    "end": "114000"
  },
  {
    "text": "command alter table",
    "start": "114000",
    "end": "115759"
  },
  {
    "text": "table name set location new location",
    "start": "115759",
    "end": "120960"
  },
  {
    "text": "now run the query to see if it works",
    "start": "127520",
    "end": "141920"
  },
  {
    "text": "similarly",
    "start": "141920",
    "end": "142720"
  },
  {
    "text": "if you created the table using the aws",
    "start": "142720",
    "end": "145599"
  },
  {
    "text": "glue crawler",
    "start": "145599",
    "end": "146800"
  },
  {
    "text": "be sure that the crawler is pointing to",
    "start": "146800",
    "end": "149200"
  },
  {
    "text": "the s3 bucket",
    "start": "149200",
    "end": "150560"
  },
  {
    "text": "slash folder rather than a file you can",
    "start": "150560",
    "end": "153760"
  },
  {
    "text": "check the s3 path provided",
    "start": "153760",
    "end": "155599"
  },
  {
    "text": "and then update it if required by",
    "start": "155599",
    "end": "157680"
  },
  {
    "text": "following the steps on the screen",
    "start": "157680",
    "end": "160080"
  },
  {
    "text": "from the aws glue console",
    "start": "160080",
    "end": "164480"
  },
  {
    "text": "choose the crawler section",
    "start": "166160",
    "end": "169360"
  },
  {
    "text": "from the list of crawlers select your",
    "start": "169360",
    "end": "171440"
  },
  {
    "text": "crawler name",
    "start": "171440",
    "end": "172400"
  },
  {
    "text": "and then check the include path",
    "start": "172400",
    "end": "176560"
  },
  {
    "text": "if a specific file was specified rather",
    "start": "176959",
    "end": "179680"
  },
  {
    "text": "than the bucket prefix",
    "start": "179680",
    "end": "181440"
  },
  {
    "text": "choose edit",
    "start": "181440",
    "end": "185840"
  },
  {
    "text": "then under add a data source section",
    "start": "186560",
    "end": "189760"
  },
  {
    "text": "update the include path",
    "start": "189760",
    "end": "192959"
  },
  {
    "text": "leave all other configurations as same",
    "start": "195519",
    "end": "200239"
  },
  {
    "text": "choose finish",
    "start": "203519",
    "end": "206239"
  },
  {
    "text": "now run the crawler to update the table",
    "start": "207680",
    "end": "210840"
  },
  {
    "text": "ddl",
    "start": "210840",
    "end": "213840"
  },
  {
    "text": "now run the query to check if you get",
    "start": "235760",
    "end": "237840"
  },
  {
    "text": "the results",
    "start": "237840",
    "end": "240480"
  },
  {
    "text": "note if you run the crawler multiple",
    "start": "240480",
    "end": "243280"
  },
  {
    "text": "times on a schedule",
    "start": "243280",
    "end": "244480"
  },
  {
    "text": "to update the schema or add partitions",
    "start": "244480",
    "end": "246720"
  },
  {
    "text": "and so on",
    "start": "246720",
    "end": "247760"
  },
  {
    "text": "you must update the include part however",
    "start": "247760",
    "end": "251280"
  },
  {
    "text": "if you use the crawler just once to",
    "start": "251280",
    "end": "253280"
  },
  {
    "text": "create the table",
    "start": "253280",
    "end": "254480"
  },
  {
    "text": "you can use the alt table command itself",
    "start": "254480",
    "end": "257280"
  },
  {
    "text": "as i talked about earlier",
    "start": "257280",
    "end": "259759"
  },
  {
    "text": "reason 2 the second reason could be an",
    "start": "259759",
    "end": "262720"
  },
  {
    "text": "incorrect location path",
    "start": "262720",
    "end": "264400"
  },
  {
    "text": "that doesn't exist or doesn't contain",
    "start": "264400",
    "end": "266720"
  },
  {
    "text": "the relevant data",
    "start": "266720",
    "end": "268400"
  },
  {
    "text": "verify that the input data location path",
    "start": "268400",
    "end": "271759"
  },
  {
    "text": "points to amazon s3 if the input",
    "start": "271759",
    "end": "274880"
  },
  {
    "text": "location path is incorrect",
    "start": "274880",
    "end": "276720"
  },
  {
    "text": "then athena returns zero records",
    "start": "276720",
    "end": "280560"
  },
  {
    "text": "in the example here the location",
    "start": "280560",
    "end": "282720"
  },
  {
    "text": "provided is",
    "start": "282720",
    "end": "283759"
  },
  {
    "text": "s3 knowledge center slash table03",
    "start": "283759",
    "end": "288240"
  },
  {
    "text": "well in fact the actual location is s3",
    "start": "288240",
    "end": "292000"
  },
  {
    "text": "knowledge center table 3 that is without",
    "start": "292000",
    "end": "295199"
  },
  {
    "text": "the zero",
    "start": "295199",
    "end": "296800"
  },
  {
    "text": "reason three the third reason could be",
    "start": "296800",
    "end": "299840"
  },
  {
    "text": "that your table has defined partitions",
    "start": "299840",
    "end": "302479"
  },
  {
    "text": "and these partitions were not loaded",
    "start": "302479",
    "end": "304880"
  },
  {
    "text": "into the aws glue data catalog",
    "start": "304880",
    "end": "307440"
  },
  {
    "text": "or the internal athena data catalog if",
    "start": "307440",
    "end": "310560"
  },
  {
    "text": "the partitioning information was",
    "start": "310560",
    "end": "312080"
  },
  {
    "text": "specified",
    "start": "312080",
    "end": "313199"
  },
  {
    "text": "in the create table statement then you",
    "start": "313199",
    "end": "315520"
  },
  {
    "text": "can load the partitions into the catalog",
    "start": "315520",
    "end": "318479"
  },
  {
    "text": "depending upon your partitioning",
    "start": "318479",
    "end": "320000"
  },
  {
    "text": "structure you can",
    "start": "320000",
    "end": "321600"
  },
  {
    "text": "use either msck repair table",
    "start": "321600",
    "end": "324960"
  },
  {
    "text": "or alter table add partition command",
    "start": "324960",
    "end": "329440"
  },
  {
    "text": "to check the partitioning structure",
    "start": "329440",
    "end": "331520"
  },
  {
    "text": "navigate to the s3 console",
    "start": "331520",
    "end": "333919"
  },
  {
    "text": "and select the bucket name that's",
    "start": "333919",
    "end": "335680"
  },
  {
    "text": "visible in the table ddl or",
    "start": "335680",
    "end": "338560"
  },
  {
    "text": "aws glue crawler",
    "start": "338560",
    "end": "353840"
  },
  {
    "text": "here is an example of how athena expects",
    "start": "367680",
    "end": "370080"
  },
  {
    "text": "to find the data at s3 path",
    "start": "370080",
    "end": "372400"
  },
  {
    "text": "for a table that is partitioned on ear",
    "start": "372400",
    "end": "375440"
  },
  {
    "text": "let me show you how to add these",
    "start": "375440",
    "end": "377360"
  },
  {
    "text": "partitions to the",
    "start": "377360",
    "end": "378720"
  },
  {
    "text": "data catalog by using the console",
    "start": "378720",
    "end": "382800"
  },
  {
    "text": "from the athena console",
    "start": "382800",
    "end": "385918"
  },
  {
    "text": "run the msck repair table table name",
    "start": "386080",
    "end": "388720"
  },
  {
    "text": "command",
    "start": "388720",
    "end": "391120"
  },
  {
    "text": "now let's run the query to check if it",
    "start": "391280",
    "end": "393600"
  },
  {
    "text": "returns the records",
    "start": "393600",
    "end": "396720"
  },
  {
    "text": "if the partitions aren't stored in a",
    "start": "404800",
    "end": "406720"
  },
  {
    "text": "format that athena",
    "start": "406720",
    "end": "408000"
  },
  {
    "text": "supports or are located at different s3",
    "start": "408000",
    "end": "410960"
  },
  {
    "text": "parts",
    "start": "410960",
    "end": "411840"
  },
  {
    "text": "then run the command alter table add",
    "start": "411840",
    "end": "414240"
  },
  {
    "text": "partition",
    "start": "414240",
    "end": "415199"
  },
  {
    "text": "for each partition consider the same",
    "start": "415199",
    "end": "418479"
  },
  {
    "text": "example",
    "start": "418479",
    "end": "419360"
  },
  {
    "text": "of a table that is partitioned on ear",
    "start": "419360",
    "end": "422639"
  },
  {
    "text": "another partitioning structure could be",
    "start": "422639",
    "end": "424800"
  },
  {
    "text": "as shown on my screen",
    "start": "424800",
    "end": "428000"
  },
  {
    "text": "if you have a similar partitioning",
    "start": "429039",
    "end": "430560"
  },
  {
    "text": "structure that athena does not directly",
    "start": "430560",
    "end": "433120"
  },
  {
    "text": "support",
    "start": "433120",
    "end": "434000"
  },
  {
    "text": "run the alter table command for all the",
    "start": "434000",
    "end": "436560"
  },
  {
    "text": "partitions",
    "start": "436560",
    "end": "437840"
  },
  {
    "text": "let me show you how",
    "start": "437840",
    "end": "440880"
  },
  {
    "text": "from the athena console run this command",
    "start": "446560",
    "end": "449759"
  },
  {
    "text": "on the console",
    "start": "449759",
    "end": "452639"
  },
  {
    "text": "now let's run the query to check if it",
    "start": "458960",
    "end": "461199"
  },
  {
    "text": "returns the records",
    "start": "461199",
    "end": "465840"
  },
  {
    "text": "when using partitioning avoid specifying",
    "start": "467919",
    "end": "470479"
  },
  {
    "text": "the amazon s3 path",
    "start": "470479",
    "end": "472080"
  },
  {
    "text": "in camel case instead use the flat case",
    "start": "472080",
    "end": "476080"
  },
  {
    "text": "for example use user id",
    "start": "476080",
    "end": "479199"
  },
  {
    "text": "instead of user id with the capital i",
    "start": "479199",
    "end": "482960"
  },
  {
    "text": "finally run the select query to check if",
    "start": "482960",
    "end": "485919"
  },
  {
    "text": "you can see the results",
    "start": "485919",
    "end": "487199"
  },
  {
    "text": "after fixing the issue",
    "start": "487199",
    "end": "490560"
  },
  {
    "text": "thanks for watching and happy cloud",
    "start": "490560",
    "end": "492240"
  },
  {
    "text": "computing from all of us here at aws",
    "start": "492240",
    "end": "502560"
  }
]