[
  {
    "text": "my name is Becky Weiss I am an engineer on the AWS Identity and Access",
    "start": "179",
    "end": "6000"
  },
  {
    "text": "Management team and the good news that I have for you is that while the set of",
    "start": "6000",
    "end": "13500"
  },
  {
    "text": "AWS services and features is indeed vast the set of things you need to know to secure them properly is not there are",
    "start": "13500",
    "end": "21539"
  },
  {
    "text": "really only a relatively small number of fundamental concepts and patterns that",
    "start": "21539",
    "end": "27480"
  },
  {
    "text": "you have to master and these these are I am for permissions management VPC",
    "start": "27480",
    "end": "34200"
  },
  {
    "text": "virtual private cloud network security features for network security these are the two services whose patterns you need",
    "start": "34200",
    "end": "41700"
  },
  {
    "text": "to understand in order to do anything securely in AWS and once you on once you",
    "start": "41700",
    "end": "49500"
  },
  {
    "text": "learn how to spot the patterns once you learn the fundamental concepts you're gonna be able to secure everything in",
    "start": "49500",
    "end": "56610"
  },
  {
    "text": "AWS these are patterns that repeat across our entire set of offerings so",
    "start": "56610",
    "end": "63270"
  },
  {
    "text": "that's what we're gonna talk about today and I believe that in the next 60 minutes I can get you to the point where",
    "start": "63270",
    "end": "70470"
  },
  {
    "text": "you know how to read and write permissions you know what these permissions are capable of doing and you",
    "start": "70470",
    "end": "75930"
  },
  {
    "text": "know how to use the network security controls available to you so that's what we're gonna do here in the next hour so",
    "start": "75930",
    "end": "83520"
  },
  {
    "text": "of course the first thing you need to know if you're gonna secure something is where it is right you know this graphic",
    "start": "83520",
    "end": "89640"
  },
  {
    "text": "here of a house that it looks weird because it doesn't have any entry points I can't tell you how to secure that",
    "start": "89640",
    "end": "94680"
  },
  {
    "text": "house because I don't know where its points of entry are alright let's draw on some points of entry well that's a door it opens I probably need to secure",
    "start": "94680",
    "end": "101790"
  },
  {
    "text": "it well taking this analogy into the AWS world in order to secure what you're",
    "start": "101790",
    "end": "108689"
  },
  {
    "text": "doing in AWS you WorkFirst are going to need to know where it is well in AWS",
    "start": "108689",
    "end": "116340"
  },
  {
    "text": "those of you who have been using AWS already you know that you're gonna be you have one or more AWS accounts that's",
    "start": "116340",
    "end": "122880"
  },
  {
    "text": "a unit of ownership of things of resources in AWS now if you've used AWS",
    "start": "122880",
    "end": "129330"
  },
  {
    "text": "you also notice that almost all of our services with the exception of a couple services that only makes sense globally he's in a",
    "start": "129330",
    "end": "136380"
  },
  {
    "text": "physical location in AWS region at you know at this very moment we have 19",
    "start": "136380",
    "end": "142500"
  },
  {
    "text": "regions all around the globe their physical locations and they're truly isolated from one another like an",
    "start": "142500",
    "end": "148650"
  },
  {
    "text": "instance of a service in one region shares nothing shares no infrastructure shares no data with the instance of that",
    "start": "148650",
    "end": "155790"
  },
  {
    "text": "same service in another region so to make things simple here I'm going to consider just one region although you have all of these 19 regions available",
    "start": "155790",
    "end": "163350"
  },
  {
    "text": "to you for global reach okay so we got a physical location in AWS region now to",
    "start": "163350",
    "end": "169500"
  },
  {
    "text": "subdivide the physical location even more each of our regions is divided into one or more into multiple availability",
    "start": "169500",
    "end": "177150"
  },
  {
    "text": "zones availability zones has the name availability it's a core concept for when you're deploying highly",
    "start": "177150",
    "end": "183390"
  },
  {
    "text": "availability services on AWS that's not what we're gonna talk about here for the",
    "start": "183390",
    "end": "189120"
  },
  {
    "text": "purposes of this discussion availability zones are kind of a further division of where your resources go now of course",
    "start": "189120",
    "end": "195930"
  },
  {
    "text": "these are your resources your infrastructure so they need to go in a network and in AWS you control the",
    "start": "195930",
    "end": "202440"
  },
  {
    "text": "network this here that you're looking at this is a V PC a virtual data center in the cloud you control pretty much every",
    "start": "202440",
    "end": "208560"
  },
  {
    "text": "aspect of it connectivity IP addressing so we've chosen this IP address range if you don't read the networking ease",
    "start": "208560",
    "end": "214950"
  },
  {
    "text": "that's called cider notation it means IP address starting with 10.0 dot something dot something so this is your V PC",
    "start": "214950",
    "end": "222660"
  },
  {
    "text": "network in a region it's owned by your AWS account and of course we're gonna",
    "start": "222660",
    "end": "228570"
  },
  {
    "text": "deploy infrastructure it needs to go each each each resource needs to go in a",
    "start": "228570",
    "end": "234120"
  },
  {
    "text": "particular availability zone so the subnets the sub networks are how you subdivide your network so you can be",
    "start": "234120",
    "end": "240630"
  },
  {
    "text": "specific about which availability zones your resources go into so now that we had now that we have all of that now we",
    "start": "240630",
    "end": "246989"
  },
  {
    "text": "can have some resources we can have for example ec2 instances virtual machines",
    "start": "246989",
    "end": "252510"
  },
  {
    "text": "in the cloud these run in your subnets in the availability zones in your",
    "start": "252510",
    "end": "258959"
  },
  {
    "text": "network in the region that you've chosen to run your V PC in and all of this owned by your account now",
    "start": "258959",
    "end": "265770"
  },
  {
    "text": "you see two instances our own ec2 is only one of many AWS services that runs",
    "start": "265770",
    "end": "272520"
  },
  {
    "text": "infrastructure in your network really it's anything in AWS it's managing infrastructure dedicated to you one",
    "start": "272520",
    "end": "279090"
  },
  {
    "text": "example is our relational database service RDS you deploy that inside your",
    "start": "279090",
    "end": "284849"
  },
  {
    "text": "V PC the databases themselves are managed by RDS but the infrastructure is running in your network lots of other",
    "start": "284849",
    "end": "290970"
  },
  {
    "text": "examples for example if you have a Windows workload and you're using our managed Active Directory service your",
    "start": "290970",
    "end": "296669"
  },
  {
    "text": "domain controllers for that service will run in your V PC and so on there are a lot of other examples like this now when",
    "start": "296669",
    "end": "306599"
  },
  {
    "text": "you're running workloads in AWS infrastructure that's either managed for",
    "start": "306599",
    "end": "311970"
  },
  {
    "text": "you by AWS or that you're running yourself and in your V PC goes in your network which means you can use network",
    "start": "311970",
    "end": "318389"
  },
  {
    "text": "security controls on them but you'll also be interacting with AWS services",
    "start": "318389",
    "end": "325250"
  },
  {
    "text": "that are not in your V PC the resources are in your account in your region and",
    "start": "325250",
    "end": "332069"
  },
  {
    "text": "you own them and control them but they'll appear not to be in your V PC for example almost everybody here is",
    "start": "332069",
    "end": "339180"
  },
  {
    "text": "going to be storing their data in Amazon simple storage service s3 you know buckets where you can put objects get",
    "start": "339180",
    "end": "346050"
  },
  {
    "text": "objects store your data in the cloud and lots of other services also have this characteristic of their own by you and",
    "start": "346050",
    "end": "352469"
  },
  {
    "text": "controlled by you but they're not in your V PC for example SQS using a queue",
    "start": "352469",
    "end": "357750"
  },
  {
    "text": "for your applications that's not gonna be in your V PC a dynamodb table are no sequel database also not in your V PC",
    "start": "357750",
    "end": "365330"
  },
  {
    "text": "lots of other services work this way the services in this category these are services that you know we don't call",
    "start": "365330",
    "end": "371669"
  },
  {
    "text": "them server lists you know cuz serverless is kind of a new thing but essentially they are server list they're",
    "start": "371669",
    "end": "378029"
  },
  {
    "text": "highly scalable services running in Amazon's network that you just make web API calls to so now the first question",
    "start": "378029",
    "end": "386400"
  },
  {
    "text": "is okay some things are in my network some things are not in my network I think I'm gonna be using different tools",
    "start": "386400",
    "end": "392669"
  },
  {
    "text": "to secure them so how do i how do I even tell which is which I just have this long list of aw",
    "start": "392669",
    "end": "398490"
  },
  {
    "text": "services that I'm using well there's a number of ways you can do it that you can tell where your resource is running",
    "start": "398490",
    "end": "405360"
  },
  {
    "text": "the easiest way one way that I find is as you're provisioning the resources if you get asked about a bunch of VPC",
    "start": "405360",
    "end": "411449"
  },
  {
    "text": "things like security groups and subnets we'll talk about both of those later that's a hint that you're about to run something in your V PC but another thing",
    "start": "411449",
    "end": "418889"
  },
  {
    "text": "you can do is just resolve these are all services that you access across the network you get a dns name for any of",
    "start": "418889",
    "end": "425280"
  },
  {
    "text": "these just resolve that dns name for example you're gonna talk to that database from inside your V PC so",
    "start": "425280",
    "end": "431669"
  },
  {
    "text": "resolve it's you're given a DNS name for it an end point resolve that you can see that's an address in your V PC so I know",
    "start": "431669",
    "end": "437729"
  },
  {
    "text": "that my RDS database is indeed in my V PC whereas if I were gonna be talking to",
    "start": "437729",
    "end": "442940"
  },
  {
    "text": "sqs to to use my sqs q here well the dns",
    "start": "442940",
    "end": "448590"
  },
  {
    "text": "name I have for that is of the general sqs service I resolve that that's not in my V PC so that's one way to tell the",
    "start": "448590",
    "end": "455280"
  },
  {
    "text": "difference now it's regardless of whether the resource is running in your V PC or not in your V PC it's under your control and",
    "start": "455280",
    "end": "462810"
  },
  {
    "text": "we're gonna talk about both cases so this is how it breaks down so the first thing you need to understand the thing",
    "start": "462810",
    "end": "468570"
  },
  {
    "text": "that I'm about to secure is it running in my V PC or not it either is or it isn't and depending on whether or not",
    "start": "468570",
    "end": "475020"
  },
  {
    "text": "it's running in your network you either do or don't use network security controls on it and in all cases you use",
    "start": "475020",
    "end": "481770"
  },
  {
    "text": "Identity and Access Management permissions which can get which can get for some services very fine-grain can",
    "start": "481770",
    "end": "487680"
  },
  {
    "text": "give you extremely fine grain inflexible control over your resources this is what we're gonna talk about here so you see",
    "start": "487680",
    "end": "494669"
  },
  {
    "text": "that I am saying it seems to be useful across the board for securing everything",
    "start": "494669",
    "end": "499800"
  },
  {
    "text": "so let's start there okay so what is I am I am is our identity and access",
    "start": "499800",
    "end": "505319"
  },
  {
    "text": "management system the I stands for authentication and the a M stands for authorization and this is used across",
    "start": "505319",
    "end": "513169"
  },
  {
    "text": "AWS all of our services support permissions with I am this is how you",
    "start": "513169",
    "end": "518490"
  },
  {
    "text": "secure access to any AWS resource that you have okay well if you think about AWS the WS",
    "start": "518490",
    "end": "525720"
  },
  {
    "text": "stands for web services everything you do in AWS is done by calling",
    "start": "525720",
    "end": "532140"
  },
  {
    "text": "AWS Web API on the you know service that you're trying to work with now it's what",
    "start": "532140",
    "end": "538440"
  },
  {
    "text": "it's a web service you're creating and just deleting and modifying resources so you need to be authenticated",
    "start": "538440",
    "end": "544740"
  },
  {
    "text": "to call that API AWS they're the service that you're calling needs to know who",
    "start": "544740",
    "end": "551430"
  },
  {
    "text": "you are so first let's talk about who you are in AWS as you make an API call well one",
    "start": "551430",
    "end": "557280"
  },
  {
    "text": "thing you could be as a human user in fact if you've ever logged into the AWS console with a username and a password",
    "start": "557280",
    "end": "562620"
  },
  {
    "text": "with some long term credentials or if you've ever used that access key ID secret key pair and you know you've",
    "start": "562620",
    "end": "569580"
  },
  {
    "text": "configured your command-line interface or your SDK with those if you're using long term credentials you're an I am",
    "start": "569580",
    "end": "575310"
  },
  {
    "text": "user and that's typically for human users so that's one kind of identity you",
    "start": "575310",
    "end": "580680"
  },
  {
    "text": "can have in AWS how many of you here are human how many of you here are robots",
    "start": "580680",
    "end": "587220"
  },
  {
    "text": "yeah there's always somebody this is reinvent well the other kind of identity",
    "start": "587220",
    "end": "592380"
  },
  {
    "text": "you can have in AWS the other thing you could be in AWS is a robot and by that I mean an application an automated process",
    "start": "592380",
    "end": "599120"
  },
  {
    "text": "something that isn't a human user clicking around the console or making API calls in the CLI for those the",
    "start": "599120",
    "end": "607530"
  },
  {
    "text": "identity that we use is called an iam role and and all of our platforms on",
    "start": "607530",
    "end": "613560"
  },
  {
    "text": "which you can run and run your own application code so I have up here easy to an ec2 instance that I might be",
    "start": "613560",
    "end": "619470"
  },
  {
    "text": "running an application on or a lambda function that I might have deployed my code to be run server lessly in AWS all",
    "start": "619470",
    "end": "626820"
  },
  {
    "text": "of these support running under an iam role is you're setting up the lambda function as you're launching the ec2",
    "start": "626820",
    "end": "632220"
  },
  {
    "text": "instance you can and you should designate an iam role an identity for it now the great thing about this you know",
    "start": "632220",
    "end": "639420"
  },
  {
    "text": "as a security practitioner is that I am roles unlike the I am users that work with",
    "start": "639420",
    "end": "644910"
  },
  {
    "text": "long term security credentials that someone just needs to be really careful about I am roles use short term security",
    "start": "644910",
    "end": "651750"
  },
  {
    "text": "credentials and the great thing is these platforms ec2 lambda bar GAE ECS a whole",
    "start": "651750",
    "end": "659940"
  },
  {
    "text": "a whole long list of them support I am role and the application code that you write",
    "start": "659940",
    "end": "665470"
  },
  {
    "text": "no longer has to handle any credentials it just runs as the identity of the",
    "start": "665470",
    "end": "671620"
  },
  {
    "text": "instance or the lambda function that it's running at and has the permissions associated with that role so this is",
    "start": "671620",
    "end": "678610"
  },
  {
    "text": "great that means your application developers aren't trying to smear secrets around all over the place and keep them safe nobody ever looks at",
    "start": "678610",
    "end": "685000"
  },
  {
    "text": "secrets they're handled behind the scenes by ec2 does all of the work of retrieving and retrieving making",
    "start": "685000",
    "end": "692410"
  },
  {
    "text": "available refreshing these short-term security credentials and then you know once you know the application code just",
    "start": "692410",
    "end": "698530"
  },
  {
    "text": "goes and accesses this DynamoDB table in the picture here to do what it needs to do one thing that I'll just mention is",
    "start": "698530",
    "end": "706210"
  },
  {
    "text": "in fact you'll see AWS services that themselves modify AWS resources that you",
    "start": "706210",
    "end": "713500"
  },
  {
    "text": "have I have a peer application auto-scaling it's a handy feature that if you're using DynamoDB it will scale",
    "start": "713500",
    "end": "720010"
  },
  {
    "text": "up and scale down the provisioned i/o based on you know based on observed demand and that's great now if you think",
    "start": "720010",
    "end": "726490"
  },
  {
    "text": "about that that's an automated process running that needs to change a resource your DynamoDB table and in fact if you",
    "start": "726490",
    "end": "733000"
  },
  {
    "text": "look under the hood which I encourage you to as practitioners that's a great way to learn about things if you look under the hood you'll see that AWS",
    "start": "733000",
    "end": "739600"
  },
  {
    "text": "application auto scaling will itself create a role for itself to run under so",
    "start": "739600",
    "end": "745089"
  },
  {
    "text": "that it can do what it needs to do with your dynamodb table there is one other case for roles I'm just gonna mention it",
    "start": "745089",
    "end": "752920"
  },
  {
    "text": "it's kind of an advanced topic but for those of you working at enterprises who have a Corp have your users in a",
    "start": "752920",
    "end": "759310"
  },
  {
    "text": "corporate directory this is a good thing to know about you can look it up later it's called identity Federation those",
    "start": "759310",
    "end": "764950"
  },
  {
    "text": "are the words to look up if your corporate directory is something like an Active Directory supports sam'l you can",
    "start": "764950",
    "end": "771970"
  },
  {
    "text": "set it up so that your users authenticate to the corporate directory and then you know then we manage all",
    "start": "771970",
    "end": "778089"
  },
  {
    "text": "this machinery this sam'l token will that gain gets passed into AWS which AWS will exchange for a role your",
    "start": "778089",
    "end": "784810"
  },
  {
    "text": "administrator will set up the mappings of you know groups in your Active Directory to the various roles that people should end up as and again the",
    "start": "784810",
    "end": "791530"
  },
  {
    "text": "short-term credentials are managed for you so this is for the human corporate robots and the umbrella term",
    "start": "791530",
    "end": "800550"
  },
  {
    "text": "for both kinds of identities we've been talking about identities I am roles short-term credentials use",
    "start": "800550",
    "end": "806970"
  },
  {
    "text": "them whenever you can they're always the better one from a security perspective because of the short-term credentials",
    "start": "806970",
    "end": "812430"
  },
  {
    "text": "and I am users for direct human access so that's who you are in fact I'm going",
    "start": "812430",
    "end": "820199"
  },
  {
    "text": "to go under the hood into the details a little bit you don't need to know what I'm about to tell you but it might help",
    "start": "820199",
    "end": "825750"
  },
  {
    "text": "your understanding of how calls into AWS are actually authenticated I'm going to",
    "start": "825750",
    "end": "830819"
  },
  {
    "text": "give you the example of an I am role with its short term credentials calling an API and dynamodb list table show me",
    "start": "830819",
    "end": "836880"
  },
  {
    "text": "the tables that I have and we're gonna kind of look at what that authenticated request actually looks like I'll show",
    "start": "836880",
    "end": "842910"
  },
  {
    "text": "you the HTTP headers here again you don't need to know this because the console the command-line interface the",
    "start": "842910",
    "end": "849180"
  },
  {
    "text": "SDK it's all doing this for you you don't need to know how to do this but I'll point out to you that the authorization header here has the non",
    "start": "849180",
    "end": "856709"
  },
  {
    "text": "secret part of your credential pairing here this is who I'm claiming to be and then the key part here in a check",
    "start": "856709",
    "end": "862529"
  },
  {
    "text": "signature produced client side with the secret part of your credential pair so",
    "start": "862529",
    "end": "867930"
  },
  {
    "text": "you have to have that secret in order to produce a valid signature the signature covers the entire request so it can't",
    "start": "867930",
    "end": "874110"
  },
  {
    "text": "have been tampered with and this gives AWS everything it needs to be able to determine that yes it was in fact this",
    "start": "874110",
    "end": "881010"
  },
  {
    "text": "role who made this request exactly as I'm seeing it so you don't need to know this but sometimes I find that it you",
    "start": "881010",
    "end": "887670"
  },
  {
    "text": "know it helps to take kind of a peek under the hood look at the machinery but back to reality",
    "start": "887670",
    "end": "894209"
  },
  {
    "text": "you've got your you you have an identity you've authenticated to AWS of course",
    "start": "894209",
    "end": "899399"
  },
  {
    "text": "that's only half the picture right you are who you say you are but are you actually allowed to make that call to",
    "start": "899399",
    "end": "904769"
  },
  {
    "text": "dynamodb lists tables or whatever you are going to do and that's where I am policy comes in",
    "start": "904769",
    "end": "911040"
  },
  {
    "text": "I am policy is used in multiple places across AWS it always comes up in the",
    "start": "911040",
    "end": "917130"
  },
  {
    "text": "context of securing something the most common use of an iam policy is you",
    "start": "917130",
    "end": "922170"
  },
  {
    "text": "attach it to a principal to a role or a user and it's a statement of what they can do we're gonna learn how to read and",
    "start": "922170",
    "end": "929220"
  },
  {
    "text": "right these policies they're written in JSON and in many cases they're self-explanatory just a couple patterns",
    "start": "929220",
    "end": "934649"
  },
  {
    "text": "to understand and you'll be able to do the rest of documentation so I am policy matters everywhere in AWS all API calls",
    "start": "934649",
    "end": "944370"
  },
  {
    "text": "with the exception of those that are explicitly unauthenticated and there very few of them and it's very obvious",
    "start": "944370",
    "end": "950069"
  },
  {
    "text": "what they are every call to every AWS service is authenticated and authorized",
    "start": "950069",
    "end": "955529"
  },
  {
    "text": "so first it checks you out who you are who you say you are and the request is validly signed and then it looks at the",
    "start": "955529",
    "end": "962310"
  },
  {
    "text": "policy at all of the policies that are relevant to the request but here we're going to talk about the policies associated with the caller with the",
    "start": "962310",
    "end": "969449"
  },
  {
    "text": "principal and figure out whether it says we're allowed to do what we're going to do so we're going to dive into what",
    "start": "969449",
    "end": "977129"
  },
  {
    "text": "makes up a policy how to read and write it but the first thing I wanted to call your attention to AWS on the IAM console",
    "start": "977129",
    "end": "984420"
  },
  {
    "text": "actually maintains a curated set of managed I am policies I you see here I'm",
    "start": "984420",
    "end": "989670"
  },
  {
    "text": "searching for the ones that have to do with dynamo they have you know friendly names that kind of explain what they do",
    "start": "989670",
    "end": "995059"
  },
  {
    "text": "you can actually go I recommend using these for human users because they've got all the common commonly used",
    "start": "995059",
    "end": "1001519"
  },
  {
    "text": "permission sets in there one thing you can do is you can actually go and look",
    "start": "1001519",
    "end": "1007309"
  },
  {
    "text": "at the policy written for each of these that's a use that's a useful thing to do if you're just trying to learn about",
    "start": "1007309",
    "end": "1012379"
  },
  {
    "text": "kind of what permissions do I need to be a you know dynamodb full access what",
    "start": "1012379",
    "end": "1018259"
  },
  {
    "text": "permissions do I need on which services it's actually a good learning tool as well as being handy shorthand for your",
    "start": "1018259",
    "end": "1024230"
  },
  {
    "text": "human users okay well let's talk about how to read and write an ion policy this",
    "start": "1024230",
    "end": "1029600"
  },
  {
    "text": "is a very simple policy I'll put up here let me point out different aspects of",
    "start": "1029600",
    "end": "1034610"
  },
  {
    "text": "its anatomy here there's an effect clause says it'll say either allow or",
    "start": "1034610",
    "end": "1040730"
  },
  {
    "text": "deny which means what you think there's an action what in this case what is this",
    "start": "1040730",
    "end": "1046610"
  },
  {
    "text": "person allowed or disallowed from doing you'll notice that we support wild cards here so this notation here means all a",
    "start": "1046610",
    "end": "1054830"
  },
  {
    "text": "all acts all API is in dynamodb are allowed and then finally there's a",
    "start": "1054830",
    "end": "1059929"
  },
  {
    "text": "resource you can see that also supports wild carding that indicates what can they do this",
    "start": "1059929",
    "end": "1065120"
  },
  {
    "text": "action on okay so the English translation of this policy is whoever",
    "start": "1065120",
    "end": "1071029"
  },
  {
    "text": "has this policy they can do anything they want and DynamoDB within the account of course you can't attach a",
    "start": "1071029",
    "end": "1076789"
  },
  {
    "text": "policy to a principle that gives it permissions outside the account so they can do dynamodb inside the account now",
    "start": "1076789",
    "end": "1084950"
  },
  {
    "text": "your security people here you might be thinking that doesn't sound very least privileged to me so maybe let's make",
    "start": "1084950",
    "end": "1092450"
  },
  {
    "text": "this let's maybe narrow this down a little bit more and let's think about a concrete example where I'm writing a",
    "start": "1092450",
    "end": "1097730"
  },
  {
    "text": "policy for an iamb role that my application is gonna run as I'm gonna put this I am role on a lambda function",
    "start": "1097730",
    "end": "1104299"
  },
  {
    "text": "I'm gonna deploy my serverless application to the lambda function and I needed to read items from a particular",
    "start": "1104299",
    "end": "1110809"
  },
  {
    "text": "DynamoDB table I know what table that is I know what they need to do so I can be specific about the actions these are",
    "start": "1110809",
    "end": "1116600"
  },
  {
    "text": "actions in DynamoDB that that are typically associated with reading individual items okay so I can read",
    "start": "1116600",
    "end": "1125120"
  },
  {
    "text": "things on DynamoDB but you know what I can get even more specific than that I can specify the resource I know that",
    "start": "1125120",
    "end": "1131870"
  },
  {
    "text": "they want to get to my table name that's the name of the table that they want to get to and in fact they're gonna D do",
    "start": "1131870",
    "end": "1137659"
  },
  {
    "text": "inquiries and that query call is gonna be going against the indexes for that table so I have another wildcard",
    "start": "1137659",
    "end": "1144289"
  },
  {
    "text": "specification of this if you're wondering how I came up with this the answer is you know the answer is for the",
    "start": "1144289",
    "end": "1151070"
  },
  {
    "text": "service you're gonna be working with you look at its I am documentation and it will tell you how you specify the",
    "start": "1151070",
    "end": "1156769"
  },
  {
    "text": "resources that are relevant for the different actions so now we have a pretty good lease privilege policy here",
    "start": "1156769",
    "end": "1163759"
  },
  {
    "text": "for my application I can do these specific read API calls which means I can't go and delete tables because",
    "start": "1163759",
    "end": "1169909"
  },
  {
    "text": "there's no need for my application to do that and if it's trying to do that there's a problem and it's a specific",
    "start": "1169909",
    "end": "1175399"
  },
  {
    "text": "table and it's indexes so it's not accessing all of the DynamoDB tables in",
    "start": "1175399",
    "end": "1180440"
  },
  {
    "text": "my account this application works on this one table so that's what he's on you might be wondering without this",
    "start": "1180440",
    "end": "1185539"
  },
  {
    "text": "notation here is with all the colons in it this is an AWS wide thing it's called an Amazon resource name and Arne",
    "start": "1185539",
    "end": "1191840"
  },
  {
    "text": "you see these for all of our services you know I've kind of marked out the different part of this air and it's a fully qualified",
    "start": "1191840",
    "end": "1197980"
  },
  {
    "text": "name in AWS you know with all of these fields it uniquely identifies in this",
    "start": "1197980",
    "end": "1203500"
  },
  {
    "text": "case your dynamodb table so we can get",
    "start": "1203500",
    "end": "1209650"
  },
  {
    "text": "even more granular than that for example dynamodb is a service that",
    "start": "1209650",
    "end": "1216330"
  },
  {
    "text": "DynamoDB is a service that holds data now many of you might be operating under",
    "start": "1216330",
    "end": "1222780"
  },
  {
    "text": "regulations that you know are concerned with data residency like where your data lives you know we talked about those",
    "start": "1222780",
    "end": "1228430"
  },
  {
    "text": "physical regions all around the globe you may have particular regions that you intend for your data to be and you don't",
    "start": "1228430",
    "end": "1234070"
  },
  {
    "text": "want anybody to accidentally or maliciously use DynamoDB in the wrong region well so AWS I am policy offers",
    "start": "1234070",
    "end": "1243450"
  },
  {
    "text": "conditions and there are many condition keys their condition keys that are that",
    "start": "1243450",
    "end": "1248500"
  },
  {
    "text": "work across AWS service you're looking at one of them here there are also ones that are specific to the service like",
    "start": "1248500",
    "end": "1254410"
  },
  {
    "text": "dynamodb can let you narrow down based on what's in the primary key so there's conditions that are you know only make",
    "start": "1254410",
    "end": "1260740"
  },
  {
    "text": "sense for a specific service but this one here if I have this permission it means that they can't accidentally use",
    "start": "1260740",
    "end": "1266830"
  },
  {
    "text": "DynamoDB in in any region but here I said Ohio so here you're allowed to do",
    "start": "1266830",
    "end": "1272560"
  },
  {
    "text": "anything with dynamodb as long as it's in the right region so far we've been",
    "start": "1272560",
    "end": "1278950"
  },
  {
    "text": "talking about permissions on principles and permissions on principles you know",
    "start": "1278950",
    "end": "1284110"
  },
  {
    "text": "you think about why this might be so it makes sense permissions on that account remember we said the beginning is a unit",
    "start": "1284110",
    "end": "1290110"
  },
  {
    "text": "of ownership of AWS resources so within the account the principles that live in",
    "start": "1290110",
    "end": "1295330"
  },
  {
    "text": "the account the policies can authorize them to get at things within the account",
    "start": "1295330",
    "end": "1301200"
  },
  {
    "text": "but in reality it's often the case that you're gonna find yourself especially at",
    "start": "1301200",
    "end": "1306880"
  },
  {
    "text": "enterprises running across multiple accounts an extremely common use case",
    "start": "1306880",
    "end": "1311890"
  },
  {
    "text": "for running multiple accounts in AWS is just different environments you have",
    "start": "1311890",
    "end": "1317500"
  },
  {
    "text": "your production it's very common every production environment in one account may be your development test",
    "start": "1317500",
    "end": "1322750"
  },
  {
    "text": "environments each and respectively other accounts may be you have yet more accounts for shared sir",
    "start": "1322750",
    "end": "1328160"
  },
  {
    "text": "services it counts for science experiments from your developers and you keep these in separate accounts so that",
    "start": "1328160",
    "end": "1333680"
  },
  {
    "text": "you you know you have no risk of crossing the streams you'll put those accounts in an AWS",
    "start": "1333680",
    "end": "1339740"
  },
  {
    "text": "organization so that you get a single bill for all of those organizations also gives you a couple of management tools",
    "start": "1339740",
    "end": "1345260"
  },
  {
    "text": "for your set of accounts and you mean you set up something like this it's very common to find that you have while you",
    "start": "1345260",
    "end": "1353810"
  },
  {
    "text": "are using those accounts as a unit of ownership and they're good sort of tight bubbles perimeters of resources you do",
    "start": "1353810",
    "end": "1360440"
  },
  {
    "text": "have access patterns where you need to maybe this application on this ec2 instance running under a role needs to",
    "start": "1360440",
    "end": "1367430"
  },
  {
    "text": "get to data for an an s3 bucket from another account now remember what we said before the principle policy the",
    "start": "1367430",
    "end": "1375290"
  },
  {
    "text": "principle policy for that ec2 instance it can't it can just by itself",
    "start": "1375290",
    "end": "1382100"
  },
  {
    "text": "unilaterally give itself permission to that bucket outside the account there needs to be some other mechanism for",
    "start": "1382100",
    "end": "1387710"
  },
  {
    "text": "doing that and for that remember when we talked about iam policies we said well I",
    "start": "1387710",
    "end": "1393890"
  },
  {
    "text": "am policies very common to put you always are putting them on principles but there are a couple of other places",
    "start": "1393890",
    "end": "1399710"
  },
  {
    "text": "you can use them too across AWS well this is one example of that so you",
    "start": "1399710",
    "end": "1405170"
  },
  {
    "text": "notice here I have an I am policy in this picture but it's not applied to a principle it doesn't say what some",
    "start": "1405170",
    "end": "1410570"
  },
  {
    "text": "particular principle can do instead it's attached to the s3 bucket we call these",
    "start": "1410570",
    "end": "1416420"
  },
  {
    "text": "resource based policies in AWS about 20 of our services offer them in s3 you'll",
    "start": "1416420",
    "end": "1422120"
  },
  {
    "text": "see them called bucket policies and it's I am policy that's attached to the",
    "start": "1422120",
    "end": "1427160"
  },
  {
    "text": "resource the bucket in this case and I'll show you what that looks like and I hope by now this is looking familiar",
    "start": "1427160",
    "end": "1432310"
  },
  {
    "text": "this looks a lot like the policy statements that we were putting on principles except there's one new thing",
    "start": "1432310",
    "end": "1437750"
  },
  {
    "text": "here which I've highlighted there's this principal clause right because this is this policy is not attached to a",
    "start": "1437750",
    "end": "1443840"
  },
  {
    "text": "principle and in fact one of the things that I'm gonna want to do on my bucket policy is I'm gonna want to talk about",
    "start": "1443840",
    "end": "1449780"
  },
  {
    "text": "who can access me right so if you look at this policy it's saying that role and",
    "start": "1449780",
    "end": "1456080"
  },
  {
    "text": "you notice that's an AR n that's an AR n of the role in the other and I say this role in that other account here's it's fully qualified AR n",
    "start": "1456080",
    "end": "1463220"
  },
  {
    "text": "it can call the specific API it can call as get object and I even know the path",
    "start": "1463220",
    "end": "1468649"
  },
  {
    "text": "under me that it's going to be calling get object on so now you have the I am",
    "start": "1468649",
    "end": "1475970"
  },
  {
    "text": "you have the bucket saying that it can be accessed from this other account and if you think about that makes sense the",
    "start": "1475970",
    "end": "1481730"
  },
  {
    "text": "bucket is owned by this other account so something in this account needs to be letting that first account in so here's",
    "start": "1481730",
    "end": "1489470"
  },
  {
    "text": "how that works when you're doing at access to AWS resources across account first off the s3 bucket that's trying to",
    "start": "1489470",
    "end": "1497570"
  },
  {
    "text": "be access has to explicitly be allowing that other account in some form to get",
    "start": "1497570",
    "end": "1502639"
  },
  {
    "text": "in and then as always the principle needs to the principle who is making the",
    "start": "1502639",
    "end": "1508700"
  },
  {
    "text": "call the purple role in the top account has to you know as before have an iamb",
    "start": "1508700",
    "end": "1514460"
  },
  {
    "text": "policy attached to it that lets it do what it's trying to do both of these have to be true or else the access gets",
    "start": "1514460",
    "end": "1520249"
  },
  {
    "text": "denied account one needs to say I'm okay accessing data from account twos bucket account twos bucket needs to say I'm",
    "start": "1520249",
    "end": "1526759"
  },
  {
    "text": "okay being accessed by these specific roles with this account now as I",
    "start": "1526759",
    "end": "1534019"
  },
  {
    "text": "mentioned before many of our services 20 of our services support resource based policies not all do for example dynamodb",
    "start": "1534019",
    "end": "1541519"
  },
  {
    "text": "doesn't you can't put a resource based policy on a DynamoDB table but for those services that don't one thing you can",
    "start": "1541519",
    "end": "1548539"
  },
  {
    "text": "always do is I am roles themselves have resource based policies we call them",
    "start": "1548539",
    "end": "1555110"
  },
  {
    "text": "trust policies in our documentation you might also see them called assumed role policy documents they are again short I",
    "start": "1555110",
    "end": "1563119"
  },
  {
    "text": "am policies that say who can assume this role so I set it up so that the role at",
    "start": "1563119",
    "end": "1568369"
  },
  {
    "text": "the bottom it's trust policy says it can be assumed by the role at the top and then my application code running in that",
    "start": "1568369",
    "end": "1575419"
  },
  {
    "text": "ec2 instance in the first account it'll go assume that role get those temporary credentials and use that to access",
    "start": "1575419",
    "end": "1582850"
  },
  {
    "text": "DynamoDB now from inside the second account so that's something you can always do for cross account access now",
    "start": "1582850",
    "end": "1590480"
  },
  {
    "text": "one thing I should mention in I am you know there's a lot of deep Hales here but really you know as you see the patterns repeat over and over",
    "start": "1590480",
    "end": "1597470"
  },
  {
    "text": "and over again and I've mostly been talking about DynamoDB just because it's a great example but really every AWS",
    "start": "1597470",
    "end": "1603350"
  },
  {
    "text": "service works this way and the particulars just change depending on like what you do in that service what",
    "start": "1603350",
    "end": "1608659"
  },
  {
    "text": "I'm showing you here is my favorite page of the AWS documentation this is the",
    "start": "1608659",
    "end": "1613669"
  },
  {
    "text": "most useful documentation in my humble opinion AWS services that work with I am I've shown you a screenshot below we",
    "start": "1613669",
    "end": "1620659"
  },
  {
    "text": "have every service listed showing you what it supports you click through to that and what you will get there is",
    "start": "1620659",
    "end": "1626749"
  },
  {
    "text": "you'll be able to see how you specify resources and how you specify resources",
    "start": "1626749",
    "end": "1632299"
  },
  {
    "text": "for the various actions what service specific conditions are available to you because those are of course going to vary according to what the service",
    "start": "1632299",
    "end": "1638840"
  },
  {
    "text": "actually does this is a very useful reference because again there's a lot of",
    "start": "1638840",
    "end": "1644119"
  },
  {
    "text": "AWS out there no I think it's safe to say no living human being has memorized",
    "start": "1644119",
    "end": "1649330"
  },
  {
    "text": "surface of all AWS services now maybe that was true a couple years ago it's certainly not true today but if you know",
    "start": "1649330",
    "end": "1657080"
  },
  {
    "text": "these patterns you're going to know what questions to ask you're gonna know what to go looking for as you look at that",
    "start": "1657080",
    "end": "1662269"
  },
  {
    "text": "documentation so really you know you do this with documentation and an understanding of the patterns now",
    "start": "1662269",
    "end": "1669799"
  },
  {
    "text": "remember we said so this I am think it works no matter what resources what kinds of resources you're talking to in",
    "start": "1669799",
    "end": "1676039"
  },
  {
    "text": "AWS inside your EPC not inside your VPC but if we're talking about things in",
    "start": "1676039",
    "end": "1681649"
  },
  {
    "text": "your VPC you also since you control the network therein you also have access so",
    "start": "1681649",
    "end": "1687470"
  },
  {
    "text": "the network security controls in your V PC and we're gonna spend the next a little bit talking about not about all",
    "start": "1687470",
    "end": "1694399"
  },
  {
    "text": "of the features of V PC available to you because there's a lot of connectivity and availability features but we're",
    "start": "1694399",
    "end": "1701269"
  },
  {
    "text": "gonna talk specifically about the tools you have in V PC to secure your",
    "start": "1701269",
    "end": "1706460"
  },
  {
    "text": "workloads they're actually fairly simple and they don't require you to have any sort of networking background to grok",
    "start": "1706460",
    "end": "1712970"
  },
  {
    "text": "what they're doing really kind of three categories of things to know about security groups security groups allow",
    "start": "1712970",
    "end": "1721159"
  },
  {
    "text": "you to control what traffic flows into or out of different parts of your VPC routing",
    "start": "1721159",
    "end": "1730379"
  },
  {
    "text": "routing sounds like a networking topic but it's also a security topic because it lets you create least privileged",
    "start": "1730379",
    "end": "1735779"
  },
  {
    "text": "connectivity and then finally to go even further with least privileged connectivity we have a family of",
    "start": "1735779",
    "end": "1741929"
  },
  {
    "text": "features called V PC endpoints that I'm going to talk about so first let's talk",
    "start": "1741929",
    "end": "1747299"
  },
  {
    "text": "about security groups authorizing only the traffic you expect hey I'm going to tell you this is the easiest of these",
    "start": "1747299",
    "end": "1754080"
  },
  {
    "text": "three topics and it's also the most powerful so security groups are actually",
    "start": "1754080",
    "end": "1760620"
  },
  {
    "text": "fairly easy to explain because they're probably aligned with how you're already thinking about your applications here's",
    "start": "1760620",
    "end": "1767370"
  },
  {
    "text": "an example workload that you might run on AWS very very common I have a public-facing web service in other words",
    "start": "1767370",
    "end": "1773850"
  },
  {
    "text": "my users are gonna be I expect my users to reach me over the Internet I expect them to come from everywhere I put a",
    "start": "1773850",
    "end": "1780419"
  },
  {
    "text": "load balancer this is application load balancer that's our layer seven load balancer at AWS",
    "start": "1780419",
    "end": "1785730"
  },
  {
    "text": "I put a load balancer in front of it so that's where that's the front door they're gonna be coming in to that load",
    "start": "1785730",
    "end": "1791909"
  },
  {
    "text": "balancer is backed by a fleet in Auto scaled plate of ec2 instances I haven't shown the auto scaling group but it's",
    "start": "1791909",
    "end": "1797970"
  },
  {
    "text": "there so these instances are running your application code and as part of",
    "start": "1797970",
    "end": "1803730"
  },
  {
    "text": "what they do they query an relational database to get some data form a response and send the response back up",
    "start": "1803730",
    "end": "1811289"
  },
  {
    "text": "so this is fairly calm and you've probably seen this before and what I just described to you is exactly the",
    "start": "1811289",
    "end": "1817950"
  },
  {
    "text": "patterns of network traffic that you're expecting here so let's make it so that",
    "start": "1817950",
    "end": "1823259"
  },
  {
    "text": "we get only the network traffic that we were expecting here and we do that with security groups we put a group around",
    "start": "1823259",
    "end": "1830370"
  },
  {
    "text": "each set of things that has like network traffic patterns for example I've got",
    "start": "1830370",
    "end": "1835740"
  },
  {
    "text": "this application load balancer it's gonna be listening on port 443 because this is an HTTP service and I want to",
    "start": "1835740",
    "end": "1843960"
  },
  {
    "text": "allow traffic in from everywhere the instance is on the other hand they're only expecting traffic that's forwarded",
    "start": "1843960",
    "end": "1849659"
  },
  {
    "text": "to them from the low bouncer they're not expecting requests that you know come from somewhere else and likewise the",
    "start": "1849659",
    "end": "1856110"
  },
  {
    "text": "databases they're expecting traffic from the ec2 instances not from somewhere else so how do we do",
    "start": "1856110",
    "end": "1862119"
  },
  {
    "text": "this with security groups well it's literally what we just said here the security groups these are inbound",
    "start": "1862119",
    "end": "1868929"
  },
  {
    "text": "security groups ingress security groups and they specify what kind of traffic is",
    "start": "1868929",
    "end": "1874840"
  },
  {
    "text": "allowed in so for example the group that my load balancer is and the load balancer might be the load balancer",
    "start": "1874840",
    "end": "1881499"
  },
  {
    "text": "itself auto scales behind the scenes Amazon does this for you so it might be multiple IP addresses in your V PC you",
    "start": "1881499",
    "end": "1888519"
  },
  {
    "text": "don't have to worry about that or care you just say you put the application load balancer in the security group and",
    "start": "1888519",
    "end": "1894369"
  },
  {
    "text": "you write a rule that says all traffic that's the zero dot 0 dot 0 / 0 all",
    "start": "1894369",
    "end": "1899590"
  },
  {
    "text": "traffic can send oh all sources can send traffic to me on port 443 so I don't",
    "start": "1899590",
    "end": "1906700"
  },
  {
    "text": "have other ports open because I don't need them I just have this port open but it's open to everything cuz that's my",
    "start": "1906700",
    "end": "1912070"
  },
  {
    "text": "intention if I go look at the security group for the tier of instances here",
    "start": "1912070",
    "end": "1917080"
  },
  {
    "text": "these instances are all in the same security group you notice that there's kind of a different sort of looking rule here they're listening on port 80 443",
    "start": "1917080",
    "end": "1924669"
  },
  {
    "text": "let's say but the rule is allowing traffic from another group in the V PC",
    "start": "1924669",
    "end": "1929909"
  },
  {
    "text": "so am allowing group to group traffic it's a very convenient way of thinking about this you don't have to worry about",
    "start": "1929909",
    "end": "1935409"
  },
  {
    "text": "how all of these layers are auto-scaling and then finally the databases are in a similar kind of groove except you know",
    "start": "1935409",
    "end": "1942190"
  },
  {
    "text": "they're listening on port 3306 because maybe this is my sequel now each of these security groups I showed you I put",
    "start": "1942190",
    "end": "1947830"
  },
  {
    "text": "only one rule in them that you can put multiple rules in a security group if",
    "start": "1947830",
    "end": "1952840"
  },
  {
    "text": "you wanted to open multiple ports or add multiple ranges of addresses this very common you might have been wondering",
    "start": "1952840",
    "end": "1958779"
  },
  {
    "text": "okay you're allowing all the traffic in I can see how the packet gets all the way down to the database but what about",
    "start": "1958779",
    "end": "1965200"
  },
  {
    "text": "the reverse direction right I didn't say anything about who I'm expecting the route how the return traffic is supposed",
    "start": "1965200",
    "end": "1970779"
  },
  {
    "text": "to be authorized and that's where the word stateful up here comes in you know those of you with the networking background will probably recognize this",
    "start": "1970779",
    "end": "1977669"
  },
  {
    "text": "but security groups are stateful which means that they govern the initiation of",
    "start": "1977669",
    "end": "1982720"
  },
  {
    "text": "the connection so as long as the inbound as long as the connection is allowed to",
    "start": "1982720",
    "end": "1987940"
  },
  {
    "text": "be established the security groups actually track the fact that this is an established connection and",
    "start": "1987940",
    "end": "1993059"
  },
  {
    "text": "allow the replied traffic without you having to authorize it explicitly if you do need to go in the other direction",
    "start": "1993059",
    "end": "1998999"
  },
  {
    "text": "this is less common security groups also support egress rules which works in the",
    "start": "1998999",
    "end": "2004460"
  },
  {
    "text": "opposite direction if you wanted to limit the outbound connections that your instances or your other infrastructure",
    "start": "2004460",
    "end": "2011960"
  },
  {
    "text": "could initiate you could do that far more common is to do ingress security group rules and you know what if this is",
    "start": "2011960",
    "end": "2018889"
  },
  {
    "text": "the only thing you take away from the network and part of this talk you are prepared to run a perfectly secure",
    "start": "2018889",
    "end": "2025039"
  },
  {
    "text": "network security groups work they're simple they're powerful and they do what",
    "start": "2025039",
    "end": "2030649"
  },
  {
    "text": "they say so you might wonder why I even have these why she's even going to talk about these other topics here and the",
    "start": "2030649",
    "end": "2035899"
  },
  {
    "text": "reason why is because it's very common for customers maybe moving from an",
    "start": "2035899",
    "end": "2040999"
  },
  {
    "text": "on-premise environment or maybe who are in regulated industries or maybe your own customers are asking you questions",
    "start": "2040999",
    "end": "2048200"
  },
  {
    "text": "about your environment where they want you to show that part of your network is not on the internet and routing is the",
    "start": "2048200",
    "end": "2055158"
  },
  {
    "text": "way that you do that for least privilege okay so let's talk about routing in a V",
    "start": "2055159",
    "end": "2060888"
  },
  {
    "text": "PC remember we talked about your V PC spans the availability zones and you",
    "start": "2060889",
    "end": "2066020"
  },
  {
    "text": "have subnets and those availability zones subnets are the unit of a number of things you can see they're a unit of",
    "start": "2066020",
    "end": "2071210"
  },
  {
    "text": "sub addressing in your V PC but significantly here they're also a unit of routing each subnet in a V PC is",
    "start": "2071210",
    "end": "2079250"
  },
  {
    "text": "associated with one route table in that route table is a little simple list of rules that says where packets can go",
    "start": "2079250",
    "end": "2086510"
  },
  {
    "text": "when they leave the V PC so I'll take away the other two availability zones just to make the picture simpler but you",
    "start": "2086510",
    "end": "2092960"
  },
  {
    "text": "can imagine a copy of what we're gonna talk about in each availability zone so let's talk about this availability zone",
    "start": "2092960",
    "end": "2098540"
  },
  {
    "text": "let's look at the subnet on the bottom here let's say I'm running some internal compute job on ec2 instances maybe I",
    "start": "2098540",
    "end": "2104540"
  },
  {
    "text": "have a cache and elastic cache cluster you know managed Redis running in there all of this is private data this data",
    "start": "2104540",
    "end": "2111290"
  },
  {
    "text": "you know not nothing I'm running in here has any reason to send traffic outside the V PC well if I put all that traffic",
    "start": "2111290",
    "end": "2118250"
  },
  {
    "text": "in the same subnet I can take the I can take the route table for that subnet and",
    "start": "2118250",
    "end": "2124130"
  },
  {
    "text": "I can give it route tables come with the one rule and I haven't added any more rules to it this rule says in English",
    "start": "2124130",
    "end": "2131440"
  },
  {
    "text": "traffic that's bound for the V PC that matches that one rule there 10.0 / 16",
    "start": "2131440",
    "end": "2137660"
  },
  {
    "text": "gets routed locally so traffic sent to the V PC can get there notice I have no other routes here which means if the",
    "start": "2137660",
    "end": "2144110"
  },
  {
    "text": "traffic if somebody tries to send a packet outside the V PC there mullet accidentally or maliciously it has",
    "start": "2144110",
    "end": "2150290"
  },
  {
    "text": "nowhere to go it gets dropped so that's great I can now show anybody who wants",
    "start": "2150290",
    "end": "2155600"
  },
  {
    "text": "to know that this that the resources I'm running in this subnet are off the internet there's no way for them to get",
    "start": "2155600",
    "end": "2161330"
  },
  {
    "text": "to the Internet and there's certainly no way for the Internet to get to them now of course a very common valid use cases",
    "start": "2161330",
    "end": "2167630"
  },
  {
    "text": "you might have things that you explicitly do want to be accessible from the internet like you remember that application load balancer for that",
    "start": "2167630",
    "end": "2173570"
  },
  {
    "text": "public service we were running before well that needs a publicly routable IP address it's in a security group that's",
    "start": "2173570",
    "end": "2180200"
  },
  {
    "text": "open to 0/0 and I need it to have a route both you know in and out of there you may also be running you know if you",
    "start": "2180200",
    "end": "2188690"
  },
  {
    "text": "if your operators require SSH access to your instances you might be running a bastion SSH host or jump host up there",
    "start": "2188690",
    "end": "2196130"
  },
  {
    "text": "and you know for that that's gonna I'm not showing it here in the picture but that would be in a security group that would have tightly scoped rules you know",
    "start": "2196130",
    "end": "2203270"
  },
  {
    "text": "you're expecting people to get onto the bastion host so really only from a few specific IP addresses but in this case I",
    "start": "2203270",
    "end": "2209540"
  },
  {
    "text": "I really do want access to the Internet from this part of my V PC so for that you create an Internet gateway that's",
    "start": "2209540",
    "end": "2216890"
  },
  {
    "text": "something you created with a V PC API you create a route to it your route is",
    "start": "2216890",
    "end": "2222560"
  },
  {
    "text": "gonna look like this you notice that second route here 0/0 it's being sent to",
    "start": "2222560",
    "end": "2228080"
  },
  {
    "text": "the Internet gateway so if it looks like it's going to the V PC route it locally otherwise sent it to the Internet",
    "start": "2228080",
    "end": "2233240"
  },
  {
    "text": "gateway so it can get to the Internet now in ur documentation we call this kind of V PC the upper V PC we call it a",
    "start": "2233240",
    "end": "2240410"
  },
  {
    "text": "public subnet so if you see that word I put that word in quotes because it's not",
    "start": "2240410",
    "end": "2246800"
  },
  {
    "text": "quite accurate what they actually mean to say is that the VP the subnet has a",
    "start": "2246800",
    "end": "2252080"
  },
  {
    "text": "route to the Internet because security you know I'm not showing security groups",
    "start": "2252080",
    "end": "2257270"
  },
  {
    "text": "in here but unless curity group says that the thing is publicly accessible it's not right but",
    "start": "2257270",
    "end": "2263080"
  },
  {
    "text": "as you're reading our documentation you hear about public subnets and private subnets that is what they mean now of",
    "start": "2263080",
    "end": "2269080"
  },
  {
    "text": "course there's a middle ground here like if you think about the things and the resources that you're running in that lower private subnet it is often the",
    "start": "2269080",
    "end": "2276760"
  },
  {
    "text": "case that they need outbound access they need to reach the Internet maybe they have a dependency",
    "start": "2276760",
    "end": "2282280"
  },
  {
    "text": "and a third party service that they reach over the Internet they need to reach outbound but you still don't want",
    "start": "2282280",
    "end": "2289540"
  },
  {
    "text": "them to have publicly routable IP addresses you still don't intend for them to be accessible from the internet",
    "start": "2289540",
    "end": "2295470"
  },
  {
    "text": "well for that VPC gives you again a tool of lesser privilege for internet access",
    "start": "2295470",
    "end": "2301900"
  },
  {
    "text": "that's called an ack gateway the way you set this up is you create a route to an ACK eight-way that technically lives in",
    "start": "2301900",
    "end": "2308890"
  },
  {
    "text": "the pulp in the public subnet and when when the ec2 instances in your private",
    "start": "2308890",
    "end": "2315400"
  },
  {
    "text": "subnet are sending traffic outbound it gets routed to the nat gateway it gets",
    "start": "2315400",
    "end": "2320590"
  },
  {
    "text": "routed to the nat gateway and you see there's a route for that those of you who are familiar with networking",
    "start": "2320590",
    "end": "2325900"
  },
  {
    "text": "concepts nat is network address translation and it's doing what you think it's changing all of those source",
    "start": "2325900",
    "end": "2332410"
  },
  {
    "text": "IP addresses to the publicly routable IP address of the NAT gateway so they all",
    "start": "2332410",
    "end": "2337540"
  },
  {
    "text": "come out to the internet looking like they're coming from the same place tracks the connection so that the returned traffic can get back where it",
    "start": "2337540",
    "end": "2344080"
  },
  {
    "text": "needs to go you didn't need to understand any of this to use in that gateway if all you need is outbound access you just set up this nat gateway",
    "start": "2344080",
    "end": "2350500"
  },
  {
    "text": "and you have a bow net you can call the world and the world can't call you so",
    "start": "2350500",
    "end": "2356890"
  },
  {
    "text": "summary of the routing for at least privileged part if you do need to if if you need to take parts of your V PC off",
    "start": "2356890",
    "end": "2363730"
  },
  {
    "text": "the internet either for regulatory reasons or because you like belt suspenders and mitten Clips you can do",
    "start": "2363730",
    "end": "2369820"
  },
  {
    "text": "this with you can do this with routing you figure out which parts of your infrastructure have like routing needs",
    "start": "2369820",
    "end": "2375670"
  },
  {
    "text": "which part need inbound and outbound and internet access which parts need outbound only internet access which",
    "start": "2375670",
    "end": "2382390"
  },
  {
    "text": "parts need no internet access at all and you give them different route tables now",
    "start": "2382390",
    "end": "2388030"
  },
  {
    "text": "there's other things you can do with routes and VPC including peirong of different VP's of different",
    "start": "2388030",
    "end": "2394809"
  },
  {
    "text": "VP C's even across account including connectivity to your on-premises networks via direct connecting VPN",
    "start": "2394809",
    "end": "2400690"
  },
  {
    "text": "gateway it all kind of works this it all kind of works the same and from a security standpoint again you're",
    "start": "2400690",
    "end": "2406089"
  },
  {
    "text": "thinking about who has like connectivity needs which gets me to my last point if",
    "start": "2406089",
    "end": "2412960"
  },
  {
    "text": "you're trying to go even more least privilege than the least privilege techniques we've talked about for",
    "start": "2412960",
    "end": "2419109"
  },
  {
    "text": "routing this V PC endpoint SPARC is something you're gonna want to pay attention to V PC endpoints is useful",
    "start": "2419109",
    "end": "2425289"
  },
  {
    "text": "when you need connectivity out of your V PC out of your subnet but only to a few",
    "start": "2425289",
    "end": "2430539"
  },
  {
    "text": "specific things here's one example where that might be the case you're at an",
    "start": "2430539",
    "end": "2436029"
  },
  {
    "text": "enterprise you're running across a multi AWS account environment which today",
    "start": "2436029",
    "end": "2441160"
  },
  {
    "text": "means moment V pcs for these different accounts maybe you have a shared service account that's you know that's the one",
    "start": "2441160",
    "end": "2447789"
  },
  {
    "text": "on the right that is maybe you know vending some kind of a service that you expect other accounts in the",
    "start": "2447789",
    "end": "2453880"
  },
  {
    "text": "organization to have to consume well you know there's any number of ways to create connectivity here you can if you",
    "start": "2453880",
    "end": "2461079"
  },
  {
    "text": "have good authentication and authorization at the application level which you should which we're not talking about here you could put it on the",
    "start": "2461079",
    "end": "2467890"
  },
  {
    "text": "internet and access it over public IP that's secure if you have your authentication and authorization down",
    "start": "2467890",
    "end": "2474099"
  },
  {
    "text": "you could also peer the VP sees you know that kind of conjoins the network turns it into like one network space so you",
    "start": "2474099",
    "end": "2481509"
  },
  {
    "text": "can get from one to the other or if this is the only reason or if this is only one of one of only a few reasons you",
    "start": "2481509",
    "end": "2488890"
  },
  {
    "text": "needed connectivity between these V pcs you can also create something called a V",
    "start": "2488890",
    "end": "2494859"
  },
  {
    "text": "PC endpoint also known as private link and what this allows you to do is take that it has to be a service running",
    "start": "2494859",
    "end": "2500799"
  },
  {
    "text": "behind a network load balancer that's our layer for load balancer in AWS and you can project that network load",
    "start": "2500799",
    "end": "2507640"
  },
  {
    "text": "balancer directly into the V pcs of the services that are gonna consume them and when they're there they get this DNS",
    "start": "2507640",
    "end": "2514660"
  },
  {
    "text": "name and remember from the beginning of this talk if I want to see where this DNS name is I look it up and I see that",
    "start": "2514660",
    "end": "2519910"
  },
  {
    "text": "this service has appeared inside my V PC so I don't need any kind of a route if",
    "start": "2519910",
    "end": "2525190"
  },
  {
    "text": "I'm just trying to get to this service that has a V PC endpoint this is especially useful if you're running a",
    "start": "2525190",
    "end": "2531910"
  },
  {
    "text": "large scale enterprise environment with many accounts if you are in security you",
    "start": "2531910",
    "end": "2537430"
  },
  {
    "text": "care about visibility you care about why you know why VP CA has access to VP CB V",
    "start": "2537430",
    "end": "2545050"
  },
  {
    "text": "PC endpoints give you a very auditable way to see exactly what everybody has access to and why in fact to prove to",
    "start": "2545050",
    "end": "2553000"
  },
  {
    "text": "you that it doesn't require any kind of network level connectivity I can show you this picture that I've drawn here",
    "start": "2553000",
    "end": "2558550"
  },
  {
    "text": "works even if they all have exactly the same network if they're actually on exactly the same IP address space they",
    "start": "2558550",
    "end": "2565690"
  },
  {
    "text": "even then they could have connectivity like that because the service is once again projected into these V pcs now V",
    "start": "2565690",
    "end": "2574360"
  },
  {
    "text": "PC endpoints they work for your own services if you put them behind a network load balancer but importantly",
    "start": "2574360",
    "end": "2579790"
  },
  {
    "text": "they also work for access to AWS services within your V PC what I have up",
    "start": "2579790",
    "end": "2586510"
  },
  {
    "text": "here is a very common scenario in this scenario I'm running an application on ec2 and you know my application like all",
    "start": "2586510",
    "end": "2594280"
  },
  {
    "text": "applications produces logs now logs are fantastic you know logs are great for",
    "start": "2594280",
    "end": "2599290"
  },
  {
    "text": "debugging they're great for understanding how your users are using your service and hey they're great for security analysis cloud watch logs is",
    "start": "2599290",
    "end": "2607210"
  },
  {
    "text": "AWS is log service it's a place you can ship your logs where they get aggregated in one place with great analysis tools",
    "start": "2607210",
    "end": "2613840"
  },
  {
    "text": "that you can run over them so that's great cloud watch logs gives me an agent that I can install on my ec2 instances",
    "start": "2613840",
    "end": "2621160"
  },
  {
    "text": "and with just a little bit of config I point that agent to where I expect my logs to show up and it does exactly what",
    "start": "2621160",
    "end": "2626560"
  },
  {
    "text": "you think it shovels the logs out and sends them up to cloud watch logs that's",
    "start": "2626560",
    "end": "2632080"
  },
  {
    "text": "great ok where is cloud watch logs resolve the DNS name I see hey that's",
    "start": "2632080",
    "end": "2639160"
  },
  {
    "text": "not in my VP see that's one of these services it's serverless it's not running in my V PC ok let me get an",
    "start": "2639160",
    "end": "2647650"
  },
  {
    "text": "Internet gateway for that I can have put it I can put a publicly routable IP address on each of these ec2 instances I",
    "start": "2647650",
    "end": "2654430"
  },
  {
    "text": "can give those subnets or - an Internet gateway and now I have good connectivity I've done my security",
    "start": "2654430",
    "end": "2660220"
  },
  {
    "text": "groups right this is a hundred percent secure but maybe I'm trying to route for least privilege okay I'll do one better",
    "start": "2660220",
    "end": "2666220"
  },
  {
    "text": "I'll put an AK eight way on here because I know these ec2 instances they don't individually need public IP addresses",
    "start": "2666220",
    "end": "2672810"
  },
  {
    "text": "they need outbound connectivity to cloud watch logs but cloud watch logs doesn't need access to them nobody needs access",
    "start": "2672810",
    "end": "2679660"
  },
  {
    "text": "to them so I've done an act gateway of course the cloud watch logs is still outside my VPC if I want to go one step",
    "start": "2679660",
    "end": "2685930"
  },
  {
    "text": "further than that if I don't want any kind of gateway any kind of right",
    "start": "2685930",
    "end": "2691420"
  },
  {
    "text": "outside my VP see that's where VP see endpoints come in they're very easy to see there it may sound like an advanced",
    "start": "2691420",
    "end": "2698050"
  },
  {
    "text": "networking concept but they are very easy to set up this is a screenshot from the VP see console you see you just",
    "start": "2698050",
    "end": "2704680"
  },
  {
    "text": "select the AWS services that you want access to we support 18 of them today that number that number grows over time",
    "start": "2704680",
    "end": "2712300"
  },
  {
    "text": "so here I've selected logs I intend for this V PC to have X I want this V PC to",
    "start": "2712300",
    "end": "2718510"
  },
  {
    "text": "have access to cloud watch logs without creating any kinds of routes outside the V PC that's great I set this up and now",
    "start": "2718510",
    "end": "2724840"
  },
  {
    "text": "the picture looks like this you notice that I don't have any gateways here furthermore you notice that now I'm",
    "start": "2724840",
    "end": "2730240"
  },
  {
    "text": "resolving the DNS name of cloud watch logs same DNS name as before but now I'm",
    "start": "2730240",
    "end": "2735460"
  },
  {
    "text": "getting an address inside my V PC and through the magic of route 53 private hosted zones in fact from the different",
    "start": "2735460",
    "end": "2742390"
  },
  {
    "text": "availability zones here I'll get a availability zone local address for cloud watch logs so this is great",
    "start": "2742390",
    "end": "2749560"
  },
  {
    "text": "I get to this AWS service that I'm using without technically leaving the V PC",
    "start": "2749560",
    "end": "2756420"
  },
  {
    "text": "it's just worth mentioning for those of you who look under the hood at how the machinery all hangs together our V PC",
    "start": "2756420",
    "end": "2763720"
  },
  {
    "text": "endpoints for s3 and dynamodb they're called gateway endpoints in contrast to",
    "start": "2763720",
    "end": "2769120"
  },
  {
    "text": "the one I was showing you before which is an interface endpoint these two services have a gateway endpoint exactly",
    "start": "2769120",
    "end": "2774820"
  },
  {
    "text": "the same effect from a security standpoint you don't need to put an Internet gateway or a NAT gateway on",
    "start": "2774820",
    "end": "2780010"
  },
  {
    "text": "your V PC to get to them but they do manifest in a slightly different way if you look under the hood the setups just",
    "start": "2780010",
    "end": "2786160"
  },
  {
    "text": "as easy but you'll see you do have a route for them you have this funny route down there that's sending traffic to a VPC endpoint what this",
    "start": "2786160",
    "end": "2793130"
  },
  {
    "text": "route means if you have the s3 or dynamodb gateway if you resolve its dns name you'll see it's still an address",
    "start": "2793130",
    "end": "2799400"
  },
  {
    "text": "outside your V PC but it's not actually routing to any kind of a gateway it's routing to the V PC end point same deal",
    "start": "2799400",
    "end": "2805400"
  },
  {
    "text": "just if you look under the hood you'll see something different and that's why okay but we're not done there this V PC",
    "start": "2805400",
    "end": "2813680"
  },
  {
    "text": "security control this network security control also is integrated with the I am controls I am policies that we talked",
    "start": "2813680",
    "end": "2821120"
  },
  {
    "text": "about in the first half of this talk so this is true for three of our endpoints",
    "start": "2821120",
    "end": "2828110"
  },
  {
    "text": "today and we expect the set of services that support V PC endpoint policies to",
    "start": "2828110",
    "end": "2833750"
  },
  {
    "text": "grow over time so that's three DynamoDB and code build are the ones that support it today and again you can expect to see",
    "start": "2833750",
    "end": "2839240"
  },
  {
    "text": "more in the future but with my V PC s V PC endpoint to s3 here I can attach an",
    "start": "2839240",
    "end": "2846470"
  },
  {
    "text": "iam policy not to a principal not to an s3 bucket but to my network the effect",
    "start": "2846470",
    "end": "2855560"
  },
  {
    "text": "of that and I'll explain I'll show you an example of that in the next slide but the effect of this is that I get to now",
    "start": "2855560",
    "end": "2861740"
  },
  {
    "text": "use my network as a security perimeter what this policy means it means that any",
    "start": "2861740",
    "end": "2868040"
  },
  {
    "text": "request to s3 that goes over this endpoint that means any request to s3 that originates from this V PC in",
    "start": "2868040",
    "end": "2874940"
  },
  {
    "text": "addition to being subject to the restrictions of the policy of whoever was making the calls also going to be",
    "start": "2874940",
    "end": "2880460"
  },
  {
    "text": "subject to the policy that applies network wide this is very useful for",
    "start": "2880460",
    "end": "2886490"
  },
  {
    "text": "governing a large scale environment it's a really good guardrail so here's what a",
    "start": "2886490",
    "end": "2892310"
  },
  {
    "text": "V PC endpoint policy on my V PC endpoint might look like so you notice here this",
    "start": "2892310",
    "end": "2898280"
  },
  {
    "text": "should look familiar by now there's a principal clause because again this is not attached to a principal it's a other",
    "start": "2898280",
    "end": "2904430"
  },
  {
    "text": "policy that gets evaluated along the way in an authorization you notice that over",
    "start": "2904430",
    "end": "2909800"
  },
  {
    "text": "here I'm talking about particular resources maybe I did that because from this V PC I know it's running in this V",
    "start": "2909800",
    "end": "2915830"
  },
  {
    "text": "PC and I know that there are particular s3 buckets that and maybe particular paths under s3 buckets",
    "start": "2915830",
    "end": "2922670"
  },
  {
    "text": "this VPC should be accessing it I don't expect any other buckets to be accessed from this V PC so let me just turn them",
    "start": "2922670",
    "end": "2929210"
  },
  {
    "text": "off from the V PC and you'll notice there's also a condition here this is a condensed a really useful AWS wide",
    "start": "2929210",
    "end": "2935840"
  },
  {
    "text": "condition that that we launched it may be a couple of months ago and principal",
    "start": "2935840",
    "end": "2941990"
  },
  {
    "text": "org ID what that means is when I'm authorizing this call I can go look at",
    "start": "2941990",
    "end": "2948530"
  },
  {
    "text": "the AWS organization of the principal making the call and he better be part of",
    "start": "2948530",
    "end": "2954440"
  },
  {
    "text": "the organization that I expect and what that means if I have a policy like this it means that anybody from within this",
    "start": "2954440",
    "end": "2962990"
  },
  {
    "text": "network who's accessing s3 they're gonna be going over this V PC endpoint I know that this is a principle under my",
    "start": "2962990",
    "end": "2969350"
  },
  {
    "text": "organization and because I know that I know that the policy that's attached to this principle was under my control",
    "start": "2969350",
    "end": "2975830"
  },
  {
    "text": "I know exactly what everybody in the organization can do and I've limited use of s3 in this network only to my",
    "start": "2975830",
    "end": "2982730"
  },
  {
    "text": "organization right this is typically what you expect but we're not done here",
    "start": "2982730",
    "end": "2987980"
  },
  {
    "text": "right so we talked about policy on the V PC endpoint but you know there's still",
    "start": "2987980",
    "end": "2993770"
  },
  {
    "text": "as before you have the opportunity to put policy on the s3 bucket now what can",
    "start": "2993770",
    "end": "2999140"
  },
  {
    "text": "you do with that well what you can do with that perhaps it's true that this s3",
    "start": "2999140",
    "end": "3004450"
  },
  {
    "text": "bucket you only expect access to it to occur from this V PC you don't expect",
    "start": "3004450",
    "end": "3011500"
  },
  {
    "text": "access to it from anyone on the internet even if they're signing it with the credentials of someone in your account",
    "start": "3011500",
    "end": "3016510"
  },
  {
    "text": "you don't expect access from some other V PC in your own account or some other account you can actually talk about V PC",
    "start": "3016510",
    "end": "3023710"
  },
  {
    "text": "endpoints and resource based policies so here's how it would look in the bucket policy you'll notice this is the first",
    "start": "3023710",
    "end": "3029470"
  },
  {
    "text": "time in this hour that we are looking at a policy that says deny what this means",
    "start": "3029470",
    "end": "3037240"
  },
  {
    "text": "in English is deny the access if it's not for my V PC endpoint now double",
    "start": "3037240",
    "end": "3043720"
  },
  {
    "text": "negatives can get a little bit tricky to reason about I'm married to a lawyer you can use five negatives in a sentence and",
    "start": "3043720",
    "end": "3049330"
  },
  {
    "text": "he knows which way you're going but it's hard for us normal humans and the reason",
    "start": "3049330",
    "end": "3054790"
  },
  {
    "text": "why I use the denied here is because deny in I am is an even blunt or hammer than allow and since I'm",
    "start": "3054790",
    "end": "3061410"
  },
  {
    "text": "very particular that this s3 bucket needs to be accessed from this network what I don't want to have happen is I",
    "start": "3061410",
    "end": "3068220"
  },
  {
    "text": "don't want some iam user or role from my account from my",
    "start": "3068220",
    "end": "3074280"
  },
  {
    "text": "organization to be trying to maybe with a valid policy to allow him to talk to",
    "start": "3074280",
    "end": "3079920"
  },
  {
    "text": "this bucket if you were to try to do that from outside my VPC well the policy",
    "start": "3079920",
    "end": "3086550"
  },
  {
    "text": "says he can do it unless I also have a deny on the bucket that says no I am not",
    "start": "3086550",
    "end": "3092370"
  },
  {
    "text": "expecting someone to access me from outside the VPC so that's just kind of a subtle distinction there and then",
    "start": "3092370",
    "end": "3098880"
  },
  {
    "text": "finally you know coming back to what we talked about before the roll your application running on the ec2 instance",
    "start": "3098880",
    "end": "3105120"
  },
  {
    "text": "it's running under a roll it to has policy so we got three policies here they all get taken into account by s3 as",
    "start": "3105120",
    "end": "3112080"
  },
  {
    "text": "its authorizing you know after it authenticates the call make sure it's from that roll and when it's authorizing",
    "start": "3112080",
    "end": "3117660"
  },
  {
    "text": "it it's looking for all of the policies that are applicable so you got the roll policy that's applicable you got the V",
    "start": "3117660",
    "end": "3123150"
  },
  {
    "text": "PC endpoint because the call is coming through a V PC endpoint and s3 knows that got the bucket which has a policy",
    "start": "3123150",
    "end": "3129000"
  },
  {
    "text": "on that s3 knows that all three of these policies have to say yes in order for",
    "start": "3129000",
    "end": "3134550"
  },
  {
    "text": "this access to be allowed and like I said there are a couple other places you can use policy in fact organizations we",
    "start": "3134550",
    "end": "3141480"
  },
  {
    "text": "didn't talk about this here today if you want kind of blanket it's they're called service control policies another way to",
    "start": "3141480",
    "end": "3147320"
  },
  {
    "text": "use to apply policy across large swaths of your cloud estate now of course you",
    "start": "3147320",
    "end": "3155040"
  },
  {
    "text": "might have been watching this whole network part of this wondering well who controls the network security controls",
    "start": "3155040",
    "end": "3160170"
  },
  {
    "text": "and the answer is just like everything else in AWS its I am typically those",
    "start": "3160170",
    "end": "3165780"
  },
  {
    "text": "permissions to create routes create Internet gateways attach Internet gateways those permissions will typically be granted to an",
    "start": "3165780",
    "end": "3173280"
  },
  {
    "text": "administrative role someone with administrative privilege it's something that you do not often you don't expect",
    "start": "3173280",
    "end": "3179670"
  },
  {
    "text": "most users in your account to be able to do this so these are privileges that are typically given to in iam user",
    "start": "3179670",
    "end": "3186960"
  },
  {
    "text": "so we've gotten to the end here there's a couple of topics that we haven't talked about and as you're beginning your cloud journey I would encourage you",
    "start": "3186960",
    "end": "3193559"
  },
  {
    "text": "to look into some of these topics because they're also they're also important that they're also important",
    "start": "3193559",
    "end": "3199770"
  },
  {
    "text": "and in fact repeated across AWS patterns for securing your workloads most",
    "start": "3199770",
    "end": "3205200"
  },
  {
    "text": "importantly encryption you know we haven't really talked about your data in AWS but as security people you know you",
    "start": "3205200",
    "end": "3210720"
  },
  {
    "text": "want to encrypt everything AWS offers a great simple to use service key key",
    "start": "3210720",
    "end": "3216270"
  },
  {
    "text": "management service kms it actually I should mention that it has very good",
    "start": "3216270",
    "end": "3221460"
  },
  {
    "text": "very fine-grain permission control with I am and that's makes sense because you",
    "start": "3221460",
    "end": "3226559"
  },
  {
    "text": "would want really good control over who can encrypt and decrypt data under what circumstances kms is also very",
    "start": "3226559",
    "end": "3232800"
  },
  {
    "text": "seamlessly and simply integrated with many of our data services like s3 like DynamoDB often it's as simple as just",
    "start": "3232800",
    "end": "3239910"
  },
  {
    "text": "selecting the key that's going to encrypt your data and the service takes care of doing the rest also on the topic",
    "start": "3239910",
    "end": "3247050"
  },
  {
    "text": "of encryption you know this is sort of application level stuff but important to consider as you're deploying an AWS AWS",
    "start": "3247050",
    "end": "3253829"
  },
  {
    "text": "certificate manager integrated with many of our services like API gateway like",
    "start": "3253829",
    "end": "3258839"
  },
  {
    "text": "application load balancer give you certificates in AWS and take care of all",
    "start": "3258839",
    "end": "3264089"
  },
  {
    "text": "of the muck of take care of all of the muck of you know renewing certificates and all of that does it for you behind",
    "start": "3264089",
    "end": "3270030"
  },
  {
    "text": "the scenes so you can run great secure TLS applications in AWS we spent this",
    "start": "3270030",
    "end": "3276960"
  },
  {
    "text": "whole hour talking about preventive controls right permissions controls that prevent what you don't want and network",
    "start": "3276960",
    "end": "3282329"
  },
  {
    "text": "security controls that prevent what you don't want visibility is the other side of that coin also very important in the cloud",
    "start": "3282329",
    "end": "3289530"
  },
  {
    "text": "you get unprecedented levels of visibility you get visibility into into your security posture like you never had",
    "start": "3289530",
    "end": "3296190"
  },
  {
    "text": "on-premises the key service is there AWS cloud trail that's a service that we",
    "start": "3296190",
    "end": "3301380"
  },
  {
    "text": "tell our customers just turn it on like there's really no reason not to have it on it's a full audit log of all of the",
    "start": "3301380",
    "end": "3307980"
  },
  {
    "text": "API calls that got made in your account who made them where they allowed or denied what were the parameters what was",
    "start": "3307980",
    "end": "3313589"
  },
  {
    "text": "the response and then VPC flow logs analogously for your network and again you just turn this on",
    "start": "3313589",
    "end": "3320200"
  },
  {
    "text": "and you can have full your all of your traffic flows into around out of your V",
    "start": "3320200",
    "end": "3327579"
  },
  {
    "text": "PC source and destination port an IP address protocol and you can get that",
    "start": "3327579",
    "end": "3333520"
  },
  {
    "text": "dump to cloud watch logs for analysis or just you know get a get a dump into s3 so these are your two visibility",
    "start": "3333520",
    "end": "3339670"
  },
  {
    "text": "controls on permissions and on network connectivity and then finally we have a",
    "start": "3339670",
    "end": "3345520"
  },
  {
    "text": "growing set of higher-level security services eight AWS in fact you could spend the whole reinvent week just",
    "start": "3345520",
    "end": "3351790"
  },
  {
    "text": "learning about those guard duty is another one of those that we just tell our customers just turn that on it",
    "start": "3351790",
    "end": "3357460"
  },
  {
    "text": "ingests your cloud trail and your V PC flow logs and uses you know uses our best threat intelligence to produce",
    "start": "3357460",
    "end": "3363430"
  },
  {
    "text": "findings about your security posture Amazon inspector igloo great way to look at the patch you know figure out the",
    "start": "3363430",
    "end": "3369220"
  },
  {
    "text": "patch status of your hosts so that brings us to the end here and I hope I",
    "start": "3369220",
    "end": "3375880"
  },
  {
    "text": "hope that what you're coming away from this with is you haven't memorized all of the AWS services but you now have the",
    "start": "3375880",
    "end": "3384220"
  },
  {
    "text": "tools to know how to secure for the infrastructure that's gonna run in your network you know how to secure the",
    "start": "3384220",
    "end": "3390069"
  },
  {
    "text": "network traffic to and from it in the routes and for everything you're gonna do in AWS you now understand the",
    "start": "3390069",
    "end": "3395890"
  },
  {
    "text": "fundamental patterns how to read and write an iamb policy where you can apply an ion policy what kinds of things you",
    "start": "3395890",
    "end": "3401560"
  },
  {
    "text": "can do with iam policy and really the rest is details on that theme so thank",
    "start": "3401560",
    "end": "3408280"
  },
  {
    "text": "you very much I hope you have a great rest of reinvent thank you for coming over this late evening session tonight thank you",
    "start": "3408280",
    "end": "3415060"
  },
  {
    "text": "[Applause]",
    "start": "3415060",
    "end": "3417420"
  }
]