[
  {
    "start": "0",
    "end": "21000"
  },
  {
    "text": "[Music]",
    "start": "0",
    "end": "2270"
  },
  {
    "text": "hi this is shri lakshmi pi with AWS",
    "start": "2270",
    "end": "6240"
  },
  {
    "text": "today we are going to talk about",
    "start": "6240",
    "end": "7610"
  },
  {
    "text": "authenticating a dotnet core web",
    "start": "7610",
    "end": "9660"
  },
  {
    "text": "application using amazon cognitive in",
    "start": "9660",
    "end": "12210"
  },
  {
    "text": "this video we'll be covering following",
    "start": "12210",
    "end": "14219"
  },
  {
    "text": "topics amazon cognitive surplus",
    "start": "14219",
    "end": "16890"
  },
  {
    "text": "computing on AWS and a demo of calendar",
    "start": "16890",
    "end": "20279"
  },
  {
    "text": "web application so external facing their",
    "start": "20279",
    "end": "23699"
  },
  {
    "text": "applications nearly always needs some",
    "start": "23699",
    "end": "26189"
  },
  {
    "text": "kind of authentication and to store and",
    "start": "26189",
    "end": "29580"
  },
  {
    "text": "manage users developers typically rely",
    "start": "29580",
    "end": "33450"
  },
  {
    "text": "on a custom user database solution to",
    "start": "33450",
    "end": "36600"
  },
  {
    "text": "store and manage users this approach",
    "start": "36600",
    "end": "39390"
  },
  {
    "text": "usually leads to challenges with scaling",
    "start": "39390",
    "end": "41910"
  },
  {
    "text": "the large number of users with amazon",
    "start": "41910",
    "end": "44969"
  },
  {
    "text": "cognitive developers can offload the",
    "start": "44969",
    "end": "47250"
  },
  {
    "text": "storage management and authentication of",
    "start": "47250",
    "end": "50160"
  },
  {
    "text": "users to a managed service that can",
    "start": "50160",
    "end": "53610"
  },
  {
    "text": "scale up to millions of users developers",
    "start": "53610",
    "end": "56910"
  },
  {
    "text": "can spend their time creating great",
    "start": "56910",
    "end": "58559"
  },
  {
    "text": "applications and let amazon kognito",
    "start": "58559",
    "end": "61140"
  },
  {
    "text": "handle authentication the key benefits",
    "start": "61140",
    "end": "65489"
  },
  {
    "start": "63000",
    "end": "169000"
  },
  {
    "text": "of amazon cognitive are it is a secure",
    "start": "65489",
    "end": "68280"
  },
  {
    "text": "and scalable user directory amazon",
    "start": "68280",
    "end": "71100"
  },
  {
    "text": "Cognito user pools provide secure user",
    "start": "71100",
    "end": "73619"
  },
  {
    "text": "directory that scales to hundreds of",
    "start": "73619",
    "end": "75869"
  },
  {
    "text": "millions of users as a fully managed",
    "start": "75869",
    "end": "78720"
  },
  {
    "text": "service user pools are easy to set up",
    "start": "78720",
    "end": "81270"
  },
  {
    "text": "without any worries about standing up",
    "start": "81270",
    "end": "84330"
  },
  {
    "text": "server infrastructure with amazon",
    "start": "84330",
    "end": "87090"
  },
  {
    "text": "cognitive you users can sign through",
    "start": "87090",
    "end": "89280"
  },
  {
    "text": "social identity providers such as google",
    "start": "89280",
    "end": "91530"
  },
  {
    "text": "facebook and as you're through",
    "start": "91530",
    "end": "93720"
  },
  {
    "text": "enterprise identity providers such as",
    "start": "93720",
    "end": "95310"
  },
  {
    "text": "microsoft ad by isamu amazon cognitive",
    "start": "95310",
    "end": "100229"
  },
  {
    "text": "user pool is a standard based identity",
    "start": "100229",
    "end": "102479"
  },
  {
    "text": "provider and supports Identity and",
    "start": "102479",
    "end": "104220"
  },
  {
    "text": "Access Management standards such as or",
    "start": "104220",
    "end": "106430"
  },
  {
    "text": "2.0 sam'l 2.0 and open ID connect Amazon",
    "start": "106430",
    "end": "111990"
  },
  {
    "text": "kognito also supports multi-factor",
    "start": "111990",
    "end": "114180"
  },
  {
    "text": "authentication and encryption of data at",
    "start": "114180",
    "end": "117000"
  },
  {
    "text": "rest and in transit an amazon Cognito is",
    "start": "117000",
    "end": "121020"
  },
  {
    "text": "also HIPAA eligible and PCI DSS and SOC",
    "start": "121020",
    "end": "124680"
  },
  {
    "text": "compliant",
    "start": "124680",
    "end": "126100"
  },
  {
    "text": "Amazon cognitive provide solutions to",
    "start": "126100",
    "end": "128259"
  },
  {
    "text": "control access to back-end resources",
    "start": "128259",
    "end": "130030"
  },
  {
    "text": "from your app you can define roles and",
    "start": "130030",
    "end": "133209"
  },
  {
    "text": "map users to different roles your app",
    "start": "133209",
    "end": "137140"
  },
  {
    "text": "can access only the resources that are",
    "start": "137140",
    "end": "140319"
  },
  {
    "text": "authorized for each other",
    "start": "140319",
    "end": "142860"
  },
  {
    "text": "with a built-in UI and easy",
    "start": "142860",
    "end": "145709"
  },
  {
    "text": "configuration for federating identity",
    "start": "145709",
    "end": "148000"
  },
  {
    "text": "providers you can integrate Amazon",
    "start": "148000",
    "end": "150670"
  },
  {
    "text": "computer to add user sign in sign up and",
    "start": "150670",
    "end": "153670"
  },
  {
    "text": "access controlled your app in minutes",
    "start": "153670",
    "end": "156150"
  },
  {
    "text": "you can customize the UI to put your",
    "start": "156150",
    "end": "159040"
  },
  {
    "text": "company branding front and center for",
    "start": "159040",
    "end": "161769"
  },
  {
    "text": "all user interactions so now we are",
    "start": "161769",
    "end": "166120"
  },
  {
    "text": "familiar with Amazon kognito let's move",
    "start": "166120",
    "end": "168910"
  },
  {
    "text": "to service computing on lambda so",
    "start": "168910",
    "end": "172000"
  },
  {
    "start": "169000",
    "end": "248000"
  },
  {
    "text": "analyst lambda lets you run code without",
    "start": "172000",
    "end": "174640"
  },
  {
    "text": "provisioning or managing servers you pay",
    "start": "174640",
    "end": "177549"
  },
  {
    "text": "only for the compute time you consume",
    "start": "177549",
    "end": "179590"
  },
  {
    "text": "there is no charge when your code is not",
    "start": "179590",
    "end": "182739"
  },
  {
    "text": "running with AWS lambda you can run code",
    "start": "182739",
    "end": "186010"
  },
  {
    "text": "for virtually any type of application or",
    "start": "186010",
    "end": "188290"
  },
  {
    "text": "back-end service all with 0",
    "start": "188290",
    "end": "190329"
  },
  {
    "text": "administration just upload your code and",
    "start": "190329",
    "end": "193090"
  },
  {
    "text": "lambda takes care of everything required",
    "start": "193090",
    "end": "195640"
  },
  {
    "text": "to run and scale your code with high",
    "start": "195640",
    "end": "197200"
  },
  {
    "text": "availability so the key benefits of",
    "start": "197200",
    "end": "199690"
  },
  {
    "text": "lambda are a diverse lambda",
    "start": "199690",
    "end": "201609"
  },
  {
    "text": "automatically runs your code without",
    "start": "201609",
    "end": "203470"
  },
  {
    "text": "requiring you to provision or manage",
    "start": "203470",
    "end": "206230"
  },
  {
    "text": "service just write the code and upload",
    "start": "206230",
    "end": "208600"
  },
  {
    "text": "it to the lambda AWS lambda",
    "start": "208600",
    "end": "211299"
  },
  {
    "text": "automatically scales her application by",
    "start": "211299",
    "end": "213880"
  },
  {
    "text": "running coding response to each trigger",
    "start": "213880",
    "end": "215859"
  },
  {
    "text": "your code runs in parallel and processes",
    "start": "215859",
    "end": "218920"
  },
  {
    "text": "each trigger individually scaling",
    "start": "218920",
    "end": "221200"
  },
  {
    "text": "precisely with the size of the workload",
    "start": "221200",
    "end": "223739"
  },
  {
    "text": "with AWS lamda you're charged only for",
    "start": "223739",
    "end": "227320"
  },
  {
    "text": "every hundred milliseconds your code",
    "start": "227320",
    "end": "229840"
  },
  {
    "text": "executes and the number of times your",
    "start": "229840",
    "end": "232930"
  },
  {
    "text": "code is triggered you don't pay anything",
    "start": "232930",
    "end": "235239"
  },
  {
    "text": "when your code is not running so with",
    "start": "235239",
    "end": "237640"
  },
  {
    "text": "these benefits it actually makes sense",
    "start": "237640",
    "end": "240390"
  },
  {
    "text": "to combine your AWS lambda with AWS",
    "start": "240390",
    "end": "245500"
  },
  {
    "text": "Cognito to authenticate users to",
    "start": "245500",
    "end": "248650"
  },
  {
    "text": "demonstrate how we can leverage AWS",
    "start": "248650",
    "end": "252220"
  },
  {
    "text": "cognitive to authenticate and serve a",
    "start": "252220",
    "end": "255190"
  },
  {
    "text": "less dotnet application",
    "start": "255190",
    "end": "257440"
  },
  {
    "text": "we'll build the following in this video",
    "start": "257440",
    "end": "259209"
  },
  {
    "text": "an Amazon cognate or user pool to",
    "start": "259209",
    "end": "262090"
  },
  {
    "text": "authenticate store and manage users will",
    "start": "262090",
    "end": "265540"
  },
  {
    "text": "be configuring and deploying an asp.net",
    "start": "265540",
    "end": "267670"
  },
  {
    "text": "core web application that will be hosted",
    "start": "267670",
    "end": "270970"
  },
  {
    "text": "in AWS lambda and fronted by API gateway",
    "start": "270970",
    "end": "274900"
  },
  {
    "text": "to call these functions a client-side",
    "start": "274900",
    "end": "278080"
  },
  {
    "text": "script will authenticate user against",
    "start": "278080",
    "end": "280060"
  },
  {
    "text": "incognito and give back a JSON web token",
    "start": "280060",
    "end": "283990"
  },
  {
    "text": "which it will then pass in the HTTP",
    "start": "283990",
    "end": "286540"
  },
  {
    "text": "authorization header to our web api",
    "start": "286540",
    "end": "288910"
  },
  {
    "text": "methods that require authorization so",
    "start": "288910",
    "end": "291880"
  },
  {
    "text": "this is how the architecture of their",
    "start": "291880",
    "end": "294190"
  },
  {
    "start": "292000",
    "end": "345000"
  },
  {
    "text": "calendar web app looks like so user sign",
    "start": "294190",
    "end": "299170"
  },
  {
    "text": "sign into our application and the Amazon",
    "start": "299170",
    "end": "302230"
  },
  {
    "text": "cognitive attenti gates the user and",
    "start": "302230",
    "end": "304390"
  },
  {
    "text": "gives back a JSON web token which is",
    "start": "304390",
    "end": "307870"
  },
  {
    "text": "then sent back by the user in the HTTP",
    "start": "307870",
    "end": "311110"
  },
  {
    "text": "authorization header to the API gateway",
    "start": "311110",
    "end": "314260"
  },
  {
    "text": "which will call your lambda functions",
    "start": "314260",
    "end": "316660"
  },
  {
    "text": "that is get put and post so the get",
    "start": "316660",
    "end": "320170"
  },
  {
    "text": "event will get you back all the events",
    "start": "320170",
    "end": "322480"
  },
  {
    "text": "and the post function will help you",
    "start": "322480",
    "end": "325870"
  },
  {
    "text": "create and edit events so this is just a",
    "start": "325870",
    "end": "329560"
  },
  {
    "text": "simple web application which will create",
    "start": "329560",
    "end": "332290"
  },
  {
    "text": "and edit events in the application and",
    "start": "332290",
    "end": "334630"
  },
  {
    "text": "uses Amazon Cognito for the user to",
    "start": "334630",
    "end": "337690"
  },
  {
    "text": "authenticate against the application so",
    "start": "337690",
    "end": "341290"
  },
  {
    "text": "let's start building open the AWS",
    "start": "341290",
    "end": "346210"
  },
  {
    "start": "345000",
    "end": "604000"
  },
  {
    "text": "console and navigate to the Amazon",
    "start": "346210",
    "end": "348700"
  },
  {
    "text": "cognitive service you can either choose",
    "start": "348700",
    "end": "353200"
  },
  {
    "text": "it from your recently visited service or",
    "start": "353200",
    "end": "355060"
  },
  {
    "text": "just search in the search bar and click",
    "start": "355060",
    "end": "361350"
  },
  {
    "text": "on it",
    "start": "361350",
    "end": "363790"
  },
  {
    "text": "now let's create a user poll click on",
    "start": "363790",
    "end": "367000"
  },
  {
    "text": "manage user polls this please click on",
    "start": "367000",
    "end": "370630"
  },
  {
    "text": "create a user poll add the user pool",
    "start": "370630",
    "end": "375790"
  },
  {
    "text": "name we'll add it as calendar web app",
    "start": "375790",
    "end": "378580"
  },
  {
    "text": "user pool let's review the defaults the",
    "start": "378580",
    "end": "388210"
  },
  {
    "text": "pool name the required attributes is",
    "start": "388210",
    "end": "390220"
  },
  {
    "text": "email minimum password strength is 8 the",
    "start": "390220",
    "end": "394150"
  },
  {
    "text": "password policy is uppercase lowercase",
    "start": "394150",
    "end": "396070"
  },
  {
    "text": "special characters a number and you can",
    "start": "396070",
    "end": "398530"
  },
  {
    "text": "edit it if you want to add more or",
    "start": "398530",
    "end": "400600"
  },
  {
    "text": "remove certain restrictions user signup",
    "start": "400600",
    "end": "404740"
  },
  {
    "text": "allowed you can either let only",
    "start": "404740",
    "end": "406590"
  },
  {
    "text": "administrators add users or we'll have",
    "start": "406590",
    "end": "409900"
  },
  {
    "text": "users to sign up themselves if you want",
    "start": "409900",
    "end": "413230"
  },
  {
    "text": "multi-factor authentication you can",
    "start": "413230",
    "end": "414790"
  },
  {
    "text": "enable it here let's add an app point",
    "start": "414790",
    "end": "419310"
  },
  {
    "text": "this is an application client which will",
    "start": "419310",
    "end": "422050"
  },
  {
    "text": "help us connect to our dotnet",
    "start": "422050",
    "end": "424090"
  },
  {
    "text": "application calendar web app client",
    "start": "424090",
    "end": "434820"
  },
  {
    "text": "[Music]",
    "start": "435810",
    "end": "436920"
  },
  {
    "text": "make sure you uncheck generate client",
    "start": "436920",
    "end": "439630"
  },
  {
    "text": "secret because the JavaScript client",
    "start": "439630",
    "end": "443800"
  },
  {
    "text": "which we are going to use to",
    "start": "443800",
    "end": "446020"
  },
  {
    "text": "authenticate users does not support",
    "start": "446020",
    "end": "448210"
  },
  {
    "text": "client secrets as the source code can be",
    "start": "448210",
    "end": "451030"
  },
  {
    "text": "seen on the browser once I create the",
    "start": "451030",
    "end": "459310"
  },
  {
    "text": "app fine go to the pool details and",
    "start": "459310",
    "end": "464730"
  },
  {
    "text": "click on create pool so this creates",
    "start": "464730",
    "end": "469570"
  },
  {
    "text": "through your user pool",
    "start": "469570",
    "end": "471450"
  },
  {
    "text": "make sure you copy this pool ID and save",
    "start": "471450",
    "end": "476380"
  },
  {
    "text": "it in a text editor",
    "start": "476380",
    "end": "479400"
  },
  {
    "text": "next let's go to the add clients",
    "start": "480870",
    "end": "485190"
  },
  {
    "text": "[Music]",
    "start": "486760",
    "end": "489889"
  },
  {
    "text": "and save the app client ID the text",
    "start": "491069",
    "end": "495309"
  },
  {
    "text": "editor we need these details in our",
    "start": "495309",
    "end": "498789"
  },
  {
    "text": "application now let's create some users",
    "start": "498789",
    "end": "510159"
  },
  {
    "text": "and add them to the group test user",
    "start": "510159",
    "end": "519990"
  },
  {
    "text": "create a temporary password and when you",
    "start": "519990",
    "end": "523839"
  },
  {
    "text": "first time logging into the application",
    "start": "523839",
    "end": "526089"
  },
  {
    "text": "user will be required to change this",
    "start": "526089",
    "end": "528579"
  },
  {
    "text": "password I don't want a phone number I'm",
    "start": "528579",
    "end": "536470"
  },
  {
    "text": "just going to enter the mail ID so now",
    "start": "536470",
    "end": "543939"
  },
  {
    "text": "the user has been created let's create a",
    "start": "543939",
    "end": "545769"
  },
  {
    "text": "group",
    "start": "545769",
    "end": "547860"
  },
  {
    "text": "[Music]",
    "start": "550020",
    "end": "553080"
  },
  {
    "text": "I'm creating this group because this",
    "start": "555380",
    "end": "558839"
  },
  {
    "text": "group will allow users to create the",
    "start": "558839",
    "end": "562140"
  },
  {
    "text": "calendar events in the application if",
    "start": "562140",
    "end": "564330"
  },
  {
    "text": "you are not part of this group will not",
    "start": "564330",
    "end": "566880"
  },
  {
    "text": "be allowed to create any applications",
    "start": "566880",
    "end": "570740"
  },
  {
    "text": "let's I create the group let me add",
    "start": "573830",
    "end": "576480"
  },
  {
    "text": "users the user has been added to the",
    "start": "576480",
    "end": "584130"
  },
  {
    "text": "group so this is how you create a",
    "start": "584130",
    "end": "589649"
  },
  {
    "text": "Cognito user pole and add users and",
    "start": "589649",
    "end": "592860"
  },
  {
    "text": "groups to the user Pole and you also",
    "start": "592860",
    "end": "595050"
  },
  {
    "text": "create an application clients to connect",
    "start": "595050",
    "end": "597600"
  },
  {
    "text": "it to your application built either in",
    "start": "597600",
    "end": "600540"
  },
  {
    "text": "dotnet or any other programming",
    "start": "600540",
    "end": "602279"
  },
  {
    "text": "languages which you choose - let's now",
    "start": "602279",
    "end": "605070"
  },
  {
    "start": "604000",
    "end": "679000"
  },
  {
    "text": "create a dotnet serverless application",
    "start": "605070",
    "end": "607709"
  },
  {
    "text": "and then host it on AWS lambda before we",
    "start": "607709",
    "end": "611100"
  },
  {
    "text": "create a project make sure you have a SS",
    "start": "611100",
    "end": "613320"
  },
  {
    "text": "toolkit installed on your visual studio",
    "start": "613320",
    "end": "615089"
  },
  {
    "text": "this will give you options to create AWS",
    "start": "615089",
    "end": "619170"
  },
  {
    "text": "project templates and also deploy onto",
    "start": "619170",
    "end": "622589"
  },
  {
    "text": "AWS services from visual studio click on",
    "start": "622589",
    "end": "629070"
  },
  {
    "text": "new project select 8 of your service",
    "start": "629070",
    "end": "633270"
  },
  {
    "text": "application and type the name Calendar",
    "start": "633270",
    "end": "639020"
  },
  {
    "text": "web app",
    "start": "639020",
    "end": "642200"
  },
  {
    "text": "okay select asp.net core Web API then",
    "start": "642480",
    "end": "647610"
  },
  {
    "text": "click on finish this version reads",
    "start": "647610",
    "end": "652380"
  },
  {
    "text": "skeleton code for our project and also a",
    "start": "652380",
    "end": "654660"
  },
  {
    "text": "CloudFormation template that will deploy",
    "start": "654660",
    "end": "657149"
  },
  {
    "text": "the solution this blueprint relies on",
    "start": "657149",
    "end": "659430"
  },
  {
    "text": "the Amazon lambda asp.net core server",
    "start": "659430",
    "end": "662610"
  },
  {
    "text": "nougat package to translate calls",
    "start": "662610",
    "end": "664620"
  },
  {
    "text": "between API gateway and asp.net core",
    "start": "664620",
    "end": "667350"
  },
  {
    "text": "framework the asp.net Web API blueprint",
    "start": "667350",
    "end": "671430"
  },
  {
    "text": "project template creates two entry point",
    "start": "671430",
    "end": "673560"
  },
  {
    "text": "classes lambda entry point dot CS and",
    "start": "673560",
    "end": "677190"
  },
  {
    "text": "local entry point CS the local entry",
    "start": "677190",
    "end": "681060"
  },
  {
    "start": "679000",
    "end": "738000"
  },
  {
    "text": "point dot CS class is used when running",
    "start": "681060",
    "end": "683730"
  },
  {
    "text": "your local environment and leverage",
    "start": "683730",
    "end": "686250"
  },
  {
    "text": "successful the asp.net core web server",
    "start": "686250",
    "end": "689250"
  },
  {
    "text": "this makes it really easy to test our",
    "start": "689250",
    "end": "691470"
  },
  {
    "text": "project locally before deploying it the",
    "start": "691470",
    "end": "694290"
  },
  {
    "text": "lambda entry point relies on API gateway",
    "start": "694290",
    "end": "697560"
  },
  {
    "text": "now let's create a custom authorization",
    "start": "697560",
    "end": "700560"
  },
  {
    "text": "handler class right-click and add a",
    "start": "700560",
    "end": "703800"
  },
  {
    "text": "class add the authorization reference",
    "start": "703800",
    "end": "718550"
  },
  {
    "text": "this custom handler just checks to see",
    "start": "718760",
    "end": "721560"
  },
  {
    "text": "if the cognitive group is equal to",
    "start": "721560",
    "end": "723389"
  },
  {
    "text": "whatever group you specify in the",
    "start": "723389",
    "end": "725010"
  },
  {
    "text": "authorization policy let's add another",
    "start": "725010",
    "end": "728430"
  },
  {
    "text": "class called cognitive authorization",
    "start": "728430",
    "end": "730920"
  },
  {
    "text": "handler",
    "start": "730920",
    "end": "733339"
  },
  {
    "text": "we have added two classes cognitive",
    "start": "737139",
    "end": "739970"
  },
  {
    "start": "738000",
    "end": "822000"
  },
  {
    "text": "group authorization Handler and",
    "start": "739970",
    "end": "741500"
  },
  {
    "text": "cognitive group authorization",
    "start": "741500",
    "end": "743120"
  },
  {
    "text": "requirement for custom handler this",
    "start": "743120",
    "end": "746000"
  },
  {
    "text": "custom handler just checks to see if the",
    "start": "746000",
    "end": "748100"
  },
  {
    "text": "cognitive group is equal to whatever",
    "start": "748100",
    "end": "749839"
  },
  {
    "text": "group you specify in the authorization",
    "start": "749839",
    "end": "752630"
  },
  {
    "text": "policy in the next step we'll be adding",
    "start": "752630",
    "end": "755180"
  },
  {
    "text": "authorization policy let's jump back to",
    "start": "755180",
    "end": "758300"
  },
  {
    "text": "the start up dot CS file and add the",
    "start": "758300",
    "end": "760639"
  },
  {
    "text": "code let us now update the configure",
    "start": "760639",
    "end": "763130"
  },
  {
    "text": "services method to connect to Amazon",
    "start": "763130",
    "end": "767209"
  },
  {
    "text": "cognitive and also to add the",
    "start": "767209",
    "end": "770509"
  },
  {
    "text": "authorization policy as you can see in",
    "start": "770509",
    "end": "773630"
  },
  {
    "text": "this method we are checking if the user",
    "start": "773630",
    "end": "776389"
  },
  {
    "text": "is part of the in calendar write group",
    "start": "776389",
    "end": "778430"
  },
  {
    "text": "by adding a policy now let's update the",
    "start": "778430",
    "end": "781430"
  },
  {
    "text": "audience and authority property here",
    "start": "781430",
    "end": "786279"
  },
  {
    "text": "let's take the value which we copied",
    "start": "786610",
    "end": "789019"
  },
  {
    "text": "when we created the user pool the user",
    "start": "789019",
    "end": "793220"
  },
  {
    "text": "pool ID over here and also copy the",
    "start": "793220",
    "end": "802810"
  },
  {
    "text": "region name here",
    "start": "802810",
    "end": "808870"
  },
  {
    "text": "so this will create your 30 property",
    "start": "809390",
    "end": "812300"
  },
  {
    "text": "next let's copy the application client",
    "start": "812300",
    "end": "815390"
  },
  {
    "text": "ID paste it here for production app you",
    "start": "815390",
    "end": "823580"
  },
  {
    "start": "822000",
    "end": "888000"
  },
  {
    "text": "could pass Authority and audience values",
    "start": "823580",
    "end": "825860"
  },
  {
    "text": "as environment variables at deploy time",
    "start": "825860",
    "end": "828860"
  },
  {
    "text": "then read the values with environment",
    "start": "828860",
    "end": "831170"
  },
  {
    "text": "get wicket environment variable for",
    "start": "831170",
    "end": "834770"
  },
  {
    "text": "testing locally without having to worry",
    "start": "834770",
    "end": "836750"
  },
  {
    "text": "about certificates set required HTTP",
    "start": "836750",
    "end": "840080"
  },
  {
    "text": "metadata equal to false for production",
    "start": "840080",
    "end": "842690"
  },
  {
    "text": "application require HTTP metadata should",
    "start": "842690",
    "end": "845480"
  },
  {
    "text": "be set to true so that the JWT token is",
    "start": "845480",
    "end": "848570"
  },
  {
    "text": "sent only over HTTP a JWT Baron malware",
    "start": "848570",
    "end": "852860"
  },
  {
    "text": "validates the JWT s digital signature",
    "start": "852860",
    "end": "855710"
  },
  {
    "text": "checks the expiration and thus other",
    "start": "855710",
    "end": "858410"
  },
  {
    "text": "checks then creates a claims principal",
    "start": "858410",
    "end": "860870"
  },
  {
    "text": "for the current user the configure",
    "start": "860870",
    "end": "862670"
  },
  {
    "text": "services class is responsible for doing",
    "start": "862670",
    "end": "864950"
  },
  {
    "text": "following registers your policy and adds",
    "start": "864950",
    "end": "867920"
  },
  {
    "text": "a singleton of the handler class",
    "start": "867920",
    "end": "869770"
  },
  {
    "text": "configures the JWT authentication",
    "start": "869770",
    "end": "872900"
  },
  {
    "text": "options next let's update the configure",
    "start": "872900",
    "end": "875630"
  },
  {
    "text": "method this code enables app to serve",
    "start": "875630",
    "end": "879230"
  },
  {
    "text": "static files like HTML CSS and",
    "start": "879230",
    "end": "881330"
  },
  {
    "text": "JavaScript as well as default files so",
    "start": "881330",
    "end": "884090"
  },
  {
    "text": "you don't have to specify index dot HTML",
    "start": "884090",
    "end": "886130"
  },
  {
    "text": "in the URL of the main page now let's",
    "start": "886130",
    "end": "889250"
  },
  {
    "start": "888000",
    "end": "960000"
  },
  {
    "text": "create calendar event and even",
    "start": "889250",
    "end": "890960"
  },
  {
    "text": "controller classes this class has all",
    "start": "890960",
    "end": "893630"
  },
  {
    "text": "the properties that we need to create",
    "start": "893630",
    "end": "895520"
  },
  {
    "text": "and edit an event now let's create an",
    "start": "895520",
    "end": "898340"
  },
  {
    "text": "events controller class in events",
    "start": "898340",
    "end": "900710"
  },
  {
    "text": "controller class we have implemented get",
    "start": "900710",
    "end": "903350"
  },
  {
    "text": "method to get all the calendar events",
    "start": "903350",
    "end": "905750"
  },
  {
    "text": "post method to add calendar events and",
    "start": "905750",
    "end": "909650"
  },
  {
    "text": "what method to edit already existing",
    "start": "909650",
    "end": "912500"
  },
  {
    "text": "events as you can see we have decorated",
    "start": "912500",
    "end": "914960"
  },
  {
    "text": "all these methods with authorized",
    "start": "914960",
    "end": "917510"
  },
  {
    "text": "attribute and it is a custom attribute",
    "start": "917510",
    "end": "920180"
  },
  {
    "text": "to authorize our policy and checks if",
    "start": "920180",
    "end": "923630"
  },
  {
    "text": "the user is part of in calendar writer",
    "start": "923630",
    "end": "925790"
  },
  {
    "text": "group to keep things really simple for",
    "start": "925790",
    "end": "928670"
  },
  {
    "text": "this walkthrough you will just be",
    "start": "928670",
    "end": "930260"
  },
  {
    "text": "storing events in a static collection in",
    "start": "930260",
    "end": "932420"
  },
  {
    "text": "the controller in a real application you",
    "start": "932420",
    "end": "935420"
  },
  {
    "text": "will persist em somewhere durable and",
    "start": "935420",
    "end": "937220"
  },
  {
    "text": "share between different lambda",
    "start": "937220",
    "end": "939200"
  },
  {
    "text": "invitations like Amazon DynamoDB a",
    "start": "939200",
    "end": "942570"
  },
  {
    "text": "no sequel database lambda functions will",
    "start": "942570",
    "end": "945510"
  },
  {
    "text": "be unloaded after about five minutes of",
    "start": "945510",
    "end": "947940"
  },
  {
    "text": "non-use so any events you are will",
    "start": "947940",
    "end": "951030"
  },
  {
    "text": "disappear when that happens the test",
    "start": "951030",
    "end": "953520"
  },
  {
    "text": "event created in the constructor is used",
    "start": "953520",
    "end": "955830"
  },
  {
    "text": "to demonstrate the ability to see events",
    "start": "955830",
    "end": "957840"
  },
  {
    "text": "when not authenticated so now let's add",
    "start": "957840",
    "end": "961800"
  },
  {
    "start": "960000",
    "end": "1006000"
  },
  {
    "text": "the UI for this application",
    "start": "961800",
    "end": "964400"
  },
  {
    "text": "asp.net core uses the folder www root as",
    "start": "964400",
    "end": "968520"
  },
  {
    "text": "the root web directory by default so",
    "start": "968520",
    "end": "971160"
  },
  {
    "text": "let's add a new folder www root as you",
    "start": "971160",
    "end": "976500"
  },
  {
    "text": "can see this folder has changed the icon",
    "start": "976500",
    "end": "978930"
  },
  {
    "text": "just to show that it is the root web app",
    "start": "978930",
    "end": "981000"
  },
  {
    "text": "directory let's add all the UI files",
    "start": "981000",
    "end": "986580"
  },
  {
    "text": "required for this web application I have",
    "start": "986580",
    "end": "994800"
  },
  {
    "text": "already created this files I'm just",
    "start": "994800",
    "end": "996690"
  },
  {
    "text": "going to add them to this application we",
    "start": "996690",
    "end": "1000380"
  },
  {
    "text": "are using full calendar event jeaious to",
    "start": "1000380",
    "end": "1003290"
  },
  {
    "text": "create and edit the calendar UI in index",
    "start": "1003290",
    "end": "1006740"
  },
  {
    "start": "1006000",
    "end": "1040000"
  },
  {
    "text": "dot HTML we have all the UI required for",
    "start": "1006740",
    "end": "1009800"
  },
  {
    "text": "this app and also the Java Script which",
    "start": "1009800",
    "end": "1012380"
  },
  {
    "text": "will help us connect to AWS kognito so",
    "start": "1012380",
    "end": "1015920"
  },
  {
    "text": "let's configure some values here as you",
    "start": "1015920",
    "end": "1019940"
  },
  {
    "text": "can see we have to update the user pool",
    "start": "1019940",
    "end": "1021800"
  },
  {
    "text": "ID and the app client ID since the demo",
    "start": "1021800",
    "end": "1032510"
  },
  {
    "text": "app is very simple Java Script used to",
    "start": "1032510",
    "end": "1035120"
  },
  {
    "text": "authenticate and create edit events is",
    "start": "1035120",
    "end": "1037430"
  },
  {
    "text": "embedded in line in the index dot HTML",
    "start": "1037430",
    "end": "1039740"
  },
  {
    "text": "on document dot ready the source for",
    "start": "1039740",
    "end": "1043280"
  },
  {
    "text": "events in full calendar is set to API",
    "start": "1043280",
    "end": "1045530"
  },
  {
    "text": "slash events full calendar passes the",
    "start": "1045530",
    "end": "1048650"
  },
  {
    "text": "start and end arguments for test",
    "start": "1048650",
    "end": "1051230"
  },
  {
    "text": "purposes give used login button to",
    "start": "1051230",
    "end": "1053900"
  },
  {
    "text": "authenticate the user during",
    "start": "1053900",
    "end": "1055970"
  },
  {
    "text": "authentication we call the authenticate",
    "start": "1055970",
    "end": "1058370"
  },
  {
    "text": "method which handles the on success on",
    "start": "1058370",
    "end": "1061160"
  },
  {
    "text": "failure and new password required events",
    "start": "1061160",
    "end": "1064220"
  },
  {
    "text": "on first login",
    "start": "1064220",
    "end": "1066690"
  },
  {
    "text": "the new password required event is",
    "start": "1066690",
    "end": "1069029"
  },
  {
    "text": "triggered and prompts users to enter the",
    "start": "1069029",
    "end": "1072629"
  },
  {
    "text": "new password and then they will have to",
    "start": "1072629",
    "end": "1075360"
  },
  {
    "text": "log in with a new password this will",
    "start": "1075360",
    "end": "1078000"
  },
  {
    "text": "change the users status incognito from",
    "start": "1078000",
    "end": "1080730"
  },
  {
    "text": "force change password to confirm to keep",
    "start": "1080730",
    "end": "1083789"
  },
  {
    "text": "things simple in this walkthrough a",
    "start": "1083789",
    "end": "1085789"
  },
  {
    "text": "token refresh strategy is not",
    "start": "1085789",
    "end": "1087960"
  },
  {
    "text": "implemented when the jaywalk token",
    "start": "1087960",
    "end": "1090090"
  },
  {
    "text": "expires like after one hour subsequent",
    "start": "1090090",
    "end": "1093149"
  },
  {
    "text": "put or post calls will fail with 4:01",
    "start": "1093149",
    "end": "1096179"
  },
  {
    "text": "unauthorized response in this",
    "start": "1096179",
    "end": "1099990"
  },
  {
    "text": "walkthrough we are implementing the UI",
    "start": "1099990",
    "end": "1102059"
  },
  {
    "text": "and authentication for ourselves in HTML",
    "start": "1102059",
    "end": "1104970"
  },
  {
    "text": "and JavaScript kognito can actually host",
    "start": "1104970",
    "end": "1108419"
  },
  {
    "text": "the login from itself and handle the",
    "start": "1108419",
    "end": "1110820"
  },
  {
    "text": "change parts for flow and other",
    "start": "1110820",
    "end": "1112320"
  },
  {
    "text": "scenarios as well you can even customize",
    "start": "1112320",
    "end": "1115379"
  },
  {
    "text": "the UI but your old logo and CSS",
    "start": "1115379",
    "end": "1118610"
  },
  {
    "text": "JavaScript here is to demo the minimum",
    "start": "1118610",
    "end": "1121019"
  },
  {
    "text": "cognitive functionality to support a",
    "start": "1121019",
    "end": "1123210"
  },
  {
    "text": "custom authorization handler in asp.net",
    "start": "1123210",
    "end": "1125669"
  },
  {
    "text": "core let's test this application locally",
    "start": "1125669",
    "end": "1131240"
  },
  {
    "text": "[Music]",
    "start": "1132000",
    "end": "1135069"
  },
  {
    "text": "enter the user which you created in the",
    "start": "1137060",
    "end": "1139760"
  },
  {
    "text": "cognate or you support as this is the",
    "start": "1139760",
    "end": "1148050"
  },
  {
    "text": "first time login you can see we are",
    "start": "1148050",
    "end": "1151110"
  },
  {
    "text": "prompted to add the new password enter a",
    "start": "1151110",
    "end": "1153900"
  },
  {
    "text": "new password click on change password",
    "start": "1153900",
    "end": "1165540"
  },
  {
    "text": "has been changed let's login with a new",
    "start": "1165540",
    "end": "1168180"
  },
  {
    "text": "password as you can see a test event has",
    "start": "1168180",
    "end": "1175890"
  },
  {
    "text": "been added which we added in our event",
    "start": "1175890",
    "end": "1178290"
  },
  {
    "text": "controller class let's click on any",
    "start": "1178290",
    "end": "1180900"
  },
  {
    "text": "other date and create an event best demo",
    "start": "1180900",
    "end": "1189570"
  },
  {
    "text": "event has been added so this app is here",
    "start": "1189570",
    "end": "1192600"
  },
  {
    "text": "to the name demo the minimum cognitive",
    "start": "1192600",
    "end": "1195120"
  },
  {
    "text": "functionality to support a custom",
    "start": "1195120",
    "end": "1197160"
  },
  {
    "text": "authorization Handler in asp.net core so",
    "start": "1197160",
    "end": "1201300"
  },
  {
    "text": "now that we have tested this application",
    "start": "1201300",
    "end": "1203070"
  },
  {
    "text": "locally let's deploy this application",
    "start": "1203070",
    "end": "1204900"
  },
  {
    "text": "onto AWS lambda before doing that let's",
    "start": "1204900",
    "end": "1209160"
  },
  {
    "start": "1207000",
    "end": "1498000"
  },
  {
    "text": "add get resources event to our",
    "start": "1209160",
    "end": "1211500"
  },
  {
    "text": "CloudFormation template under asp.net",
    "start": "1211500",
    "end": "1214410"
  },
  {
    "text": "core function under events will add get",
    "start": "1214410",
    "end": "1219510"
  },
  {
    "text": "resources given this will get the",
    "start": "1219510",
    "end": "1223560"
  },
  {
    "text": "resources all the events save this",
    "start": "1223560",
    "end": "1227880"
  },
  {
    "text": "template deploy this project onto AWS",
    "start": "1227880",
    "end": "1231210"
  },
  {
    "text": "lambda right click on the project and",
    "start": "1231210",
    "end": "1234540"
  },
  {
    "text": "select publish to eat abuse lambda you",
    "start": "1234540",
    "end": "1237300"
  },
  {
    "text": "can see the region is selected as US",
    "start": "1237300",
    "end": "1239130"
  },
  {
    "text": "first but we created our app pool or",
    "start": "1239130",
    "end": "1241860"
  },
  {
    "text": "insole so let's select so",
    "start": "1241860",
    "end": "1246110"
  },
  {
    "text": "add a stack name and a bucket name and",
    "start": "1248770",
    "end": "1262780"
  },
  {
    "text": "click on publish using CloudFormation",
    "start": "1262780",
    "end": "1267470"
  },
  {
    "text": "stack our lambda functions are deployed",
    "start": "1267470",
    "end": "1269990"
  },
  {
    "text": "on to our AWS account let's wait for the",
    "start": "1269990",
    "end": "1272870"
  },
  {
    "text": "status to change into complete once it's",
    "start": "1272870",
    "end": "1276440"
  },
  {
    "text": "completed we can test our application",
    "start": "1276440",
    "end": "1279820"
  },
  {
    "text": "now that the status is create complete",
    "start": "1280510",
    "end": "1283250"
  },
  {
    "text": "let's browse the AWS server less URL add",
    "start": "1283250",
    "end": "1289670"
  },
  {
    "text": "a forward slash I'm going to login using",
    "start": "1289670",
    "end": "1298760"
  },
  {
    "text": "the test user which we created",
    "start": "1298760",
    "end": "1302530"
  },
  {
    "text": "[Music]",
    "start": "1307520",
    "end": "1308630"
  },
  {
    "text": "now that the user is locked in let's try",
    "start": "1308630",
    "end": "1311340"
  },
  {
    "text": "to create an event the event has been",
    "start": "1311340",
    "end": "1321900"
  },
  {
    "text": "created so this shows that whenever a",
    "start": "1321900",
    "end": "1324750"
  },
  {
    "text": "user was part of calendar writer group",
    "start": "1324750",
    "end": "1327450"
  },
  {
    "text": "logs in he is able to create an event to",
    "start": "1327450",
    "end": "1330600"
  },
  {
    "text": "test if the user who's not part of the",
    "start": "1330600",
    "end": "1333090"
  },
  {
    "text": "calendar event group is able to create",
    "start": "1333090",
    "end": "1334920"
  },
  {
    "text": "event or not let's try to log in using a",
    "start": "1334920",
    "end": "1338210"
  },
  {
    "text": "different user let's go to cognate or",
    "start": "1338210",
    "end": "1346440"
  },
  {
    "text": "user pools I have created a user test",
    "start": "1346440",
    "end": "1349740"
  },
  {
    "text": "user one who is not part of the calendar",
    "start": "1349740",
    "end": "1352890"
  },
  {
    "text": "writer group I'm going to login using",
    "start": "1352890",
    "end": "1359940"
  },
  {
    "text": "test user one to check if he is able to",
    "start": "1359940",
    "end": "1362340"
  },
  {
    "text": "create the events or not missed user one",
    "start": "1362340",
    "end": "1367560"
  },
  {
    "text": "password already confirm password so",
    "start": "1367560",
    "end": "1372540"
  },
  {
    "text": "it's directly going to login into the",
    "start": "1372540",
    "end": "1374460"
  },
  {
    "text": "application so as you can see you do not",
    "start": "1374460",
    "end": "1381810"
  },
  {
    "text": "have permission to save events message",
    "start": "1381810",
    "end": "1383760"
  },
  {
    "text": "is displayed to the test user one so",
    "start": "1383760",
    "end": "1386490"
  },
  {
    "text": "this is because we have decorated each",
    "start": "1386490",
    "end": "1388440"
  },
  {
    "text": "of our API events with an authorization",
    "start": "1388440",
    "end": "1390560"
  },
  {
    "text": "policy which allows only users who are",
    "start": "1390560",
    "end": "1394080"
  },
  {
    "text": "present in calendar writer group to",
    "start": "1394080",
    "end": "1396330"
  },
  {
    "text": "create events so to wrap things up in",
    "start": "1396330",
    "end": "1399930"
  },
  {
    "text": "this demo we created a asp.net core",
    "start": "1399930",
    "end": "1402900"
  },
  {
    "text": "single page application and connected it",
    "start": "1402900",
    "end": "1405390"
  },
  {
    "text": "to calm little user pool to authenticate",
    "start": "1405390",
    "end": "1407760"
  },
  {
    "text": "users using custom authorization handler",
    "start": "1407760",
    "end": "1412460"
  },
  {
    "text": "hosting an entire website in lambda is a",
    "start": "1412790",
    "end": "1415590"
  },
  {
    "text": "fun approach but using lambda to serve",
    "start": "1415590",
    "end": "1418080"
  },
  {
    "text": "static content isn't optimal lambda cold",
    "start": "1418080",
    "end": "1421350"
  },
  {
    "text": "starts mean the index dot HTML page will",
    "start": "1421350",
    "end": "1423690"
  },
  {
    "text": "be slow to load for users whenever the",
    "start": "1423690",
    "end": "1426120"
  },
  {
    "text": "website hasn't been visited for more",
    "start": "1426120",
    "end": "1428100"
  },
  {
    "text": "than a few minutes to address that you",
    "start": "1428100",
    "end": "1430710"
  },
  {
    "text": "should move static content HTML CSS and",
    "start": "1430710",
    "end": "1433380"
  },
  {
    "text": "JavaScript to an amazon s3 bucket and",
    "start": "1433380",
    "end": "1436260"
  },
  {
    "text": "enable static web hosting you can also",
    "start": "1436260",
    "end": "1439170"
  },
  {
    "text": "use your own domain",
    "start": "1439170",
    "end": "1440419"
  },
  {
    "text": "for both the API gateway and for the s3",
    "start": "1440419",
    "end": "1443629"
  },
  {
    "text": "bucket setting that domain root Y domain",
    "start": "1443629",
    "end": "1445970"
  },
  {
    "text": "calm or wwo main calm to point to the s3",
    "start": "1445970",
    "end": "1451009"
  },
  {
    "text": "bucket and a cname like API dot your",
    "start": "1451009",
    "end": "1453679"
  },
  {
    "text": "domain comm pointing at your API gateway",
    "start": "1453679",
    "end": "1456619"
  },
  {
    "text": "that way your webpage can load",
    "start": "1456619",
    "end": "1458869"
  },
  {
    "text": "immediately and show an updating message",
    "start": "1458869",
    "end": "1461600"
  },
  {
    "text": "to the users if the API is responding",
    "start": "1461600",
    "end": "1464299"
  },
  {
    "text": "slowly if you have an existing asp.net",
    "start": "1464299",
    "end": "1467960"
  },
  {
    "text": "Web API project that you would like to",
    "start": "1467960",
    "end": "1470690"
  },
  {
    "text": "migrate to run in a SS lambda",
    "start": "1470690",
    "end": "1472759"
  },
  {
    "text": "rather than starting from a new project",
    "start": "1472759",
    "end": "1474710"
  },
  {
    "text": "template check out norm Johanns Suns",
    "start": "1474710",
    "end": "1477950"
  },
  {
    "text": "blog deploy an existing asp.net core web",
    "start": "1477950",
    "end": "1481279"
  },
  {
    "text": "api to a is AWS lambda I hope you",
    "start": "1481279",
    "end": "1484879"
  },
  {
    "text": "enjoyed watching this video for more",
    "start": "1484879",
    "end": "1487519"
  },
  {
    "text": "videos like this visit tinyurl.com slash",
    "start": "1487519",
    "end": "1491169"
  },
  {
    "text": "AWS S for Microsoft workloads thank you",
    "start": "1491169",
    "end": "1495630"
  },
  {
    "text": "[Music]",
    "start": "1495630",
    "end": "1500199"
  }
]