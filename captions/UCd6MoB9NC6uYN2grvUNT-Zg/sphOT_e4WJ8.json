[
  {
    "start": "0",
    "end": "38000"
  },
  {
    "text": "all right welcome thanks for joining us so I'm Jim sharp I'm the general manager",
    "start": "1340",
    "end": "8970"
  },
  {
    "text": "for Amazon DynamoDB and I'm excited to talk to you about some new capabilities that we just launched today quick show",
    "start": "8970",
    "end": "16230"
  },
  {
    "text": "of hands how many of you are current DynamoDB users Oh get them out well for",
    "start": "16230",
    "end": "21630"
  },
  {
    "text": "the rest of you I hope you'll hear some things it might make you interested in trying out mode to be yourself we have a",
    "start": "21630",
    "end": "29869"
  },
  {
    "text": "free tier so you know there's really no downside so your going and trying out dynamodb so before going into DynamoDB I",
    "start": "29869",
    "end": "40500"
  },
  {
    "start": "38000",
    "end": "336000"
  },
  {
    "text": "just wanted to kind of take a bit of time and talk about the history of dynamo where it came from so background",
    "start": "40500",
    "end": "48350"
  },
  {
    "text": "2004 is about when I joined a dress and at that time in December of 2004 the",
    "start": "48350",
    "end": "56940"
  },
  {
    "text": "Amazon retail website had an outage multi-hour outage and it was pretty",
    "start": "56940",
    "end": "62699"
  },
  {
    "text": "impactful because as you probably are aware for retailers December is a pretty important month a year and moreover this",
    "start": "62699",
    "end": "69930"
  },
  {
    "text": "was a time where you know ecommerce shopping was still kind of getting",
    "start": "69930",
    "end": "76680"
  },
  {
    "text": "acceptance by that broader population so it's a really big deal for Amazon and",
    "start": "76680",
    "end": "82220"
  },
  {
    "text": "once they got the site back up they went and did a root cause analysis and they",
    "start": "82220",
    "end": "88770"
  },
  {
    "text": "then they learned that basically the root cause was failure to scale in a",
    "start": "88770",
    "end": "95369"
  },
  {
    "text": "relational database stack and what we came to realize is dinamo Amazon rather",
    "start": "95369",
    "end": "101060"
  },
  {
    "text": "was using relational databases at a scale that at that time was pretty unprecedented and with a projected",
    "start": "101060",
    "end": "108720"
  },
  {
    "text": "growth of Amazon we realized just continuing to scale that the old way",
    "start": "108720",
    "end": "114659"
  },
  {
    "text": "just wasn't going to work so a bunch of senior leaders across the company met",
    "start": "114659",
    "end": "120329"
  },
  {
    "text": "and a number of top the technologists including Vernor went off and to build a",
    "start": "120329",
    "end": "127770"
  },
  {
    "text": "new solution and what they came up with was a highly available key value store",
    "start": "127770",
    "end": "133050"
  },
  {
    "text": "that originally was just used to store items in the shopping cart so as your",
    "start": "133050",
    "end": "139800"
  },
  {
    "text": "purchasing on that is on a retail website obviously if we're losing stuff in the shopping cart its inhibiting your",
    "start": "139800",
    "end": "146070"
  },
  {
    "text": "ability to buy which is bad for us for a business and bad for you as a customer because now you're you're have to go",
    "start": "146070",
    "end": "151620"
  },
  {
    "text": "restart right if you put that out and it was highly effective for Amazon and then",
    "start": "151620",
    "end": "158730"
  },
  {
    "text": "we published in 2007 the DynamoDB paper which kind of has become one of the",
    "start": "158730",
    "end": "164310"
  },
  {
    "text": "seminal works in defining what we now refer to is no sequel and then kind of",
    "start": "164310",
    "end": "169770"
  },
  {
    "text": "an apparel parallel track the Amazon Web Services business was really starting to",
    "start": "169770",
    "end": "174840"
  },
  {
    "text": "take off and like we do have done in a number of instances we took a look and",
    "start": "174840",
    "end": "181590"
  },
  {
    "text": "said hey you know Amazon Web Services customers might also benefit from this technology that we build for Amazon so",
    "start": "181590",
    "end": "188160"
  },
  {
    "text": "we in 2012 we launched for Amazon DynamoDB and then in the intervening",
    "start": "188160",
    "end": "194490"
  },
  {
    "text": "years pretty much all of Amazon properties in one way or another depend on dynamodb you know things like",
    "start": "194490",
    "end": "201420"
  },
  {
    "text": "obviously the retail website and prime and marketplace and more recently things",
    "start": "201420",
    "end": "207000"
  },
  {
    "text": "like alexa and just giving you kind of a feel for like the real implications that",
    "start": "207000",
    "end": "212910"
  },
  {
    "text": "kind of so what you know like in Amazon I was one time on a call where they",
    "start": "212910",
    "end": "219480"
  },
  {
    "text": "thought that Dinamo was having issues now it wasn't actually Dinamo was how they were their app interacting with",
    "start": "219480",
    "end": "227100"
  },
  {
    "text": "Dinamo and it was a fulfillment center app and in the background of the call there was a guy screaming saying hey hey",
    "start": "227100",
    "end": "234270"
  },
  {
    "text": "Joe where do I stack all these totes so for those who don't know the fulfillment",
    "start": "234270",
    "end": "239310"
  },
  {
    "text": "center is you put your stuff in these totes and they go at pretty fast speeds we can the filming center along the",
    "start": "239310",
    "end": "246420"
  },
  {
    "text": "conveyor belt and before they box them up and the point there is you know dynamodb just has to be up for all sorts",
    "start": "246420",
    "end": "253980"
  },
  {
    "text": "of real-world applications otherwise I mean they literally have to stop the conveyor belts in the fulfillment",
    "start": "253980",
    "end": "259230"
  },
  {
    "text": "centers and so what does that mean to you I mean dynamodb has been tested under",
    "start": "259230",
    "end": "264950"
  },
  {
    "text": "some pretty extreme conditions it's pretty extreme load and things like prime day for us as a major shopping day",
    "start": "264950",
    "end": "270980"
  },
  {
    "text": "of the year Cyber Monday Black Friday and what that means is we've it's already been",
    "start": "270980",
    "end": "276320"
  },
  {
    "text": "battle-hardened so you can know that it can be your your need for your",
    "start": "276320",
    "end": "281600"
  },
  {
    "text": "application and today we're happy to say that we have over a hundred thousand customers using DynamoDB for critical",
    "start": "281600",
    "end": "289550"
  },
  {
    "text": "applications we have we're doing over a trillion well over a trillion requests",
    "start": "289550",
    "end": "296510"
  },
  {
    "text": "per day process and we have single tables that are receiving millions of",
    "start": "296510",
    "end": "302900"
  },
  {
    "text": "requests per second and we have some tables over you know in the hundreds of terabytes of scale the point being is",
    "start": "302900",
    "end": "309350"
  },
  {
    "text": "you know we have scaled this pretty pretty far and pretty confident we can meet your needs and so today we're",
    "start": "309350",
    "end": "317360"
  },
  {
    "text": "excited to announce a couple new capabilities one hopefully you heard about DynamoDB accelerator or dax and",
    "start": "317360",
    "end": "324230"
  },
  {
    "text": "we're going to do a deep dive through there and Joe is going to talk through that show a demo and then also VPC",
    "start": "324230",
    "end": "331160"
  },
  {
    "text": "endpoints for dynamodb which is a really important security feature okay so how",
    "start": "331160",
    "end": "338840"
  },
  {
    "text": "many people took a lift to the event today I I did so number a few people and",
    "start": "338840",
    "end": "346430"
  },
  {
    "text": "and so you know looking at the kind of real-world applications of customers using dynamodb I got in a lift yesterday",
    "start": "346430",
    "end": "354380"
  },
  {
    "text": "from our Palo Alto office to come up here to prep for the event and the lyft driver says though you work for Amazon",
    "start": "354380",
    "end": "360169"
  },
  {
    "text": "and then he turned to me he's like you know that you know lyft is powered by a dress and I like well yeah I've actually",
    "start": "360169",
    "end": "366350"
  },
  {
    "text": "worked there for twelve and a half years I do and we kind of engaged in the conversation about how dynamodb is a",
    "start": "366350",
    "end": "373850"
  },
  {
    "text": "database that's you know use behind all of the the ride tracking and all that kind of stuff and so it just kind of",
    "start": "373850",
    "end": "380570"
  },
  {
    "text": "gives you a feel for you know whether it be you know Expedia or if you're",
    "start": "380570",
    "end": "387290"
  },
  {
    "text": "watching ml BAM does some pretty interesting statcast stuff on baseball just a very wide range of",
    "start": "387290",
    "end": "394550"
  },
  {
    "text": "customers and you can see you know the scenarios that we really get a lot of",
    "start": "394550",
    "end": "402729"
  },
  {
    "text": "Attraction with our mobile ad tech IOT gaming you know these are ones that all",
    "start": "402729",
    "end": "410000"
  },
  {
    "text": "come to dynamo because of the huge scale mobile presence and consistent performance and the other thing to think",
    "start": "410000",
    "end": "417650"
  },
  {
    "text": "about it's not just kind of a new-age company's doing this but increasingly even traditional enterprises have mobile",
    "start": "417650",
    "end": "425090"
  },
  {
    "text": "and nioh tea use cases you know whether you're talking about farm machinery or banks or what-have-you",
    "start": "425090",
    "end": "431030"
  },
  {
    "text": "more and more these types of customers are also using DynamoDB so as we sit",
    "start": "431030",
    "end": "438830"
  },
  {
    "start": "436000",
    "end": "488000"
  },
  {
    "text": "down within the team and talk about how we're going to prioritize our investment to continue to grow",
    "start": "438830",
    "end": "445479"
  },
  {
    "text": "dynamodb these are the main pillars that we we think about security performance",
    "start": "445479",
    "end": "451000"
  },
  {
    "text": "scalability availability these are kind of table stakes for any ADF service we",
    "start": "451000",
    "end": "456650"
  },
  {
    "text": "certainly think so hopefully you do as well but in addition one of the major reasons people come to DynamoDB is",
    "start": "456650",
    "end": "463190"
  },
  {
    "text": "because it's a managed service and so I'm going to talk a little bit more about that and then lastly you know",
    "start": "463190",
    "end": "468320"
  },
  {
    "text": "Vernon and it's his keynote this morning saying go code and so really we want to make dynamo to be a very compelling",
    "start": "468320",
    "end": "474520"
  },
  {
    "text": "developer platform easy to integrate with easy for you to build awesome apps so you you you know you you use us for",
    "start": "474520",
    "end": "481130"
  },
  {
    "text": "the database and then you can innovate on top of us I'm going to talk through some of these as we go so scalability so",
    "start": "481130",
    "end": "489949"
  },
  {
    "start": "488000",
    "end": "635000"
  },
  {
    "text": "you know we talked about you know we already have large tables and high request rate tables the important thing",
    "start": "489949",
    "end": "497120"
  },
  {
    "text": "you need to think about is you know you want to have a database that can react",
    "start": "497120",
    "end": "504050"
  },
  {
    "text": "to rapid swings and scale right I mean that's part of the cloud hopefully I'm preaching to the choir and sir in terms",
    "start": "504050",
    "end": "510169"
  },
  {
    "text": "of you know the elasticity is one of the major compelling characteristics of the cloud and so you see here a real graph",
    "start": "510169",
    "end": "516950"
  },
  {
    "text": "of a customer seeing to 300 percent spikes from from baseline and what's",
    "start": "516950",
    "end": "523698"
  },
  {
    "text": "important to think through is in this if you are managing your own database you need to worry about oh no",
    "start": "523699",
    "end": "529970"
  },
  {
    "text": "you know provisioning you know doing capacity planning provisioning host even if you're using ec2 that's easier but",
    "start": "529970",
    "end": "536060"
  },
  {
    "text": "you still have to spin that up perhaps manually restarting data across the new hosts dealing with replication H",
    "start": "536060",
    "end": "542899"
  },
  {
    "text": "a node failure this kind of thing and then also things like security patching of the OS and the database that's all",
    "start": "542899",
    "end": "550250"
  },
  {
    "text": "your responsibility and you know might be a little stressful particularly if",
    "start": "550250",
    "end": "555470"
  },
  {
    "text": "you're seeing spikes like that to be thinking through all those things and with DynamoDB we take care of that for",
    "start": "555470",
    "end": "562850"
  },
  {
    "text": "you is with you know as simple with a few clicks in the address management console or some API calls a number of",
    "start": "562850",
    "end": "569690"
  },
  {
    "text": "customers actually have as part of their applications and make some calls scale up the table do some batch processing",
    "start": "569690",
    "end": "576709"
  },
  {
    "text": "and then at the end scale down the capacity and we take care of all that for you and you know another real-world",
    "start": "576709",
    "end": "585079"
  },
  {
    "text": "example here is Game seven of last year's World Series you know as they",
    "start": "585079",
    "end": "592160"
  },
  {
    "text": "made the last out the Cubs you know made history by winning the World Series finally and we had you know real world",
    "start": "592160",
    "end": "600829"
  },
  {
    "text": "out the implication here that you know we were watching DynamoDB one of our",
    "start": "600829",
    "end": "606079"
  },
  {
    "text": "customers a social media type customer they saw their traffic to their dynamodb",
    "start": "606079",
    "end": "613010"
  },
  {
    "text": "table increased by 500% in just a couple seconds and they were crossing 3.5",
    "start": "613010",
    "end": "620540"
  },
  {
    "text": "million requests per second on a single table dynamo ran fine their app performed well and everything was good",
    "start": "620540",
    "end": "627740"
  },
  {
    "text": "but this is the kind of thing that you know customers have come to depend on for download read so then performance so",
    "start": "627740",
    "end": "637699"
  },
  {
    "start": "635000",
    "end": "688000"
  },
  {
    "text": "it doesn't matter you know if we can handle the request but all of a sudden",
    "start": "637699",
    "end": "643640"
  },
  {
    "text": "the latency degrades terribly and your because your application will effectively be down to your customers",
    "start": "643640",
    "end": "650390"
  },
  {
    "text": "anyway as you see this graph here the blue line is effectively is the request rate and",
    "start": "650390",
    "end": "656610"
  },
  {
    "text": "that's basically on the order of millions of requests per second and the second y axis and the Green Line is",
    "start": "656610",
    "end": "663720"
  },
  {
    "text": "shows the latency in milliseconds and basically what the point of this slide",
    "start": "663720",
    "end": "669480"
  },
  {
    "text": "here is even despite large swings in request rate Dinamo for most customers",
    "start": "669480",
    "end": "675300"
  },
  {
    "text": "for most applications dynamo customers see very consistent single-digit millisecond latency and that's really",
    "start": "675300",
    "end": "682050"
  },
  {
    "text": "important that that's was core to how dynamo DB was built but some of our most",
    "start": "682050",
    "end": "692180"
  },
  {
    "text": "performance most advanced customers who really performance centric while",
    "start": "692180",
    "end": "698579"
  },
  {
    "text": "millisecond latency was good for yesterday they're really looking for microsecond latencies today these are",
    "start": "698579",
    "end": "706170"
  },
  {
    "text": "applications like ad Tech where you may just add an ad tech industry you may just have a few milliseconds may",
    "start": "706170",
    "end": "712709"
  },
  {
    "text": "determine whether you win the bid or not for placing an ad and that relates that",
    "start": "712709",
    "end": "717899"
  },
  {
    "text": "equates to real money either won or lost for your business and for these types of",
    "start": "717899",
    "end": "722910"
  },
  {
    "text": "customers we notice the common pattern they walk us through the steps they had to go through",
    "start": "722910",
    "end": "728279"
  },
  {
    "text": "they basically first had to basically they decided to add a cash to in front",
    "start": "728279",
    "end": "735000"
  },
  {
    "text": "of DynamoDB for the most recently accessed data and it was a good idea and",
    "start": "735000",
    "end": "741270"
  },
  {
    "text": "but they walk through the muck they had to walk through they first had to decide well which cash should I use they had to",
    "start": "741270",
    "end": "749100"
  },
  {
    "text": "you know learn the new API to that cash and they had to figure out how they're",
    "start": "749100",
    "end": "754350"
  },
  {
    "text": "gonna lay out the data in the cache they had to figure out they had to change their code around substantially - now",
    "start": "754350",
    "end": "760760"
  },
  {
    "text": "you know hydrate data from dynamodb into the cache read from the cache when it",
    "start": "760760",
    "end": "766290"
  },
  {
    "text": "was there we got back to DynamoDB when it wasn't fixed data out of the cache and while it's all doable and some of",
    "start": "766290",
    "end": "773519"
  },
  {
    "text": "our most advanced customers did you know it's a lot of heavy lifting and then",
    "start": "773519",
    "end": "780449"
  },
  {
    "text": "also they had to worry about just physically managing the cash-spending up the ec2 instances doing the deployments",
    "start": "780449",
    "end": "787470"
  },
  {
    "text": "worrying about eh-eh in scale node failures etcetera and",
    "start": "787470",
    "end": "793530"
  },
  {
    "text": "again you know they're happy with a bit with a better performance there will do",
    "start": "793530",
    "end": "799370"
  },
  {
    "text": "but it was a lot of heavy lifting so we asked ourselves what if dynamodb just",
    "start": "799370",
    "end": "805710"
  },
  {
    "text": "had kind of a turbocharged button where we could give customers even better performance for the most recently read",
    "start": "805710",
    "end": "814800"
  },
  {
    "text": "data what if we could do that by just providing them an endpoint and with no",
    "start": "814800",
    "end": "822600"
  },
  {
    "text": "API changes to their application the dynamodb compatible api and what if all",
    "start": "822600",
    "end": "829860"
  },
  {
    "text": "the nodes and ha4 that cache we're",
    "start": "829860",
    "end": "835020"
  },
  {
    "text": "completely behind the scenes it's not something that had to worry about what if we could manage that for them and",
    "start": "835020",
    "end": "841080"
  },
  {
    "text": "that's what led us to build DynamoDB accelerator which we announced today is",
    "start": "841080",
    "end": "847830"
  },
  {
    "text": "in public preview and with that I'm going to call up Joe who helped build",
    "start": "847830",
    "end": "853800"
  },
  {
    "text": "stacks and he's going to give us a quick demo thank you Jim",
    "start": "853800",
    "end": "859070"
  },
  {
    "start": "857000",
    "end": "970000"
  },
  {
    "text": "all right so what anybody accelerator you know I would like to show you a",
    "start": "859070",
    "end": "864390"
  },
  {
    "text": "little bit how this works through through a demo application it's one thing to look at the slides that's a whole other experience to see it in",
    "start": "864390",
    "end": "870510"
  },
  {
    "text": "action all right so I've created a",
    "start": "870510",
    "end": "880800"
  },
  {
    "text": "sample application ahead of time let me just open that up really quick and what",
    "start": "880800",
    "end": "889440"
  },
  {
    "text": "this application does is I have a dynamodb table that I've already provisioned and it's about you know four or five thousand IMDB movie titles that",
    "start": "889440",
    "end": "896850"
  },
  {
    "text": "contains you know the year the date and some information about each of these movies now what this application does is",
    "start": "896850",
    "end": "903270"
  },
  {
    "text": "very simple create the DynamoDB client instantiates a table for that particular",
    "start": "903270",
    "end": "908820"
  },
  {
    "text": "client so we'll go grab this data from the movies table and then it's going to do ten iterations of a thousand requests",
    "start": "908820",
    "end": "915900"
  },
  {
    "text": "and it's going to print out the average latency after each iteration",
    "start": "915900",
    "end": "921260"
  },
  {
    "text": "right and we'll compile for good form and then we're going to run our",
    "start": "924040",
    "end": "930530"
  },
  {
    "text": "application",
    "start": "930530",
    "end": "932680"
  },
  {
    "text": "all right we can see you know just as Jim said DynamoDB is experiencing single-digit millisecond latency and you",
    "start": "939310",
    "end": "946300"
  },
  {
    "text": "know for many applications that's fantastic but as Jim is saying it what about the applications in which literally every millisecond means",
    "start": "946300",
    "end": "953500"
  },
  {
    "text": "something material to my bottom line it's either the differentiation between my application and my competitors or",
    "start": "953500",
    "end": "959080"
  },
  {
    "text": "it's just I didn't get the bid in time or it wasn't a good enough bid to be able to to complete them to complete the",
    "start": "959080",
    "end": "965560"
  },
  {
    "text": "sale the little customers do so you know at this point you know if we want to add",
    "start": "965560",
    "end": "971800"
  },
  {
    "text": "that cash you know now is the point where we go okay well now you know it is what do I go look for is it Redis or is",
    "start": "971800",
    "end": "977410"
  },
  {
    "text": "it memcache am I going to go spin up in uc2 instance do W get start playing around with it you know we'd go back to",
    "start": "977410",
    "end": "983560"
  },
  {
    "text": "our application and we start performing heart surgery on all this all the database calls to DynamoDB right we'd",
    "start": "983560",
    "end": "990880"
  },
  {
    "text": "have to start wrapping those in this logic that basically says hey is that item in dynamo no okay a little is it",
    "start": "990880",
    "end": "997150"
  },
  {
    "text": "I'm sorry sir than the cash no let's go fetch it from dynamo okay we got it let's go put it back in the cache and we",
    "start": "997150",
    "end": "1003120"
  },
  {
    "text": "have to handle that whole logic so I've already provisioned the Dax endpoint ahead of time and I'll show you",
    "start": "1003120",
    "end": "1009330"
  },
  {
    "text": "how to do that in one second but I'm going to show you how easy it is to add that DAC endpoint to our application and",
    "start": "1009330",
    "end": "1014730"
  },
  {
    "text": "then we just get seamless integration with that and why is that well Dax is",
    "start": "1014730",
    "end": "1020130"
  },
  {
    "text": "API compatible with dynamo DB which means the same interfaces that are expose from a dynamo DB client get item",
    "start": "1020130",
    "end": "1026760"
  },
  {
    "text": "code item scan query update item delete item are exposed to Dax - so we don't",
    "start": "1026760",
    "end": "1031980"
  },
  {
    "text": "have to change any of that logic in our application we just have to make the calls alright so let's go back to that",
    "start": "1031980",
    "end": "1042360"
  },
  {
    "text": "same application that we had and what I'm going to do is I'm going to come out comment out the dynamo DB client and I'm",
    "start": "1042360",
    "end": "1049470"
  },
  {
    "text": "going to remove some of this code and this is the end point for the Dax question again this sits in line between",
    "start": "1049470",
    "end": "1055410"
  },
  {
    "text": "our client application and our dynamo DB tables and then I'm just going to add",
    "start": "1055410",
    "end": "1061440"
  },
  {
    "text": "this to a config that I'm going to pass to the Dax client and as you can see I",
    "start": "1061440",
    "end": "1067020"
  },
  {
    "text": "didn't go change any of the rest of the code in my application we're going to do the same get item test we didn't change any of the api's in our app",
    "start": "1067020",
    "end": "1073190"
  },
  {
    "text": "whatsoever and we're going to save this recompile and run it again all right so",
    "start": "1073190",
    "end": "1086720"
  },
  {
    "text": "what we should expect we should expect to this application is the first time we",
    "start": "1086720",
    "end": "1091730"
  },
  {
    "text": "do these gets these are going to be all cache misses right because this item wasn't in wasn't in the cache before and",
    "start": "1091730",
    "end": "1098290"
  },
  {
    "text": "now when we start warming up the cache those those iterations those thousand you know those thousand calls that we're",
    "start": "1098290",
    "end": "1103880"
  },
  {
    "text": "going to do for the second third fourth and fifth iterations those are all in cash so we can see you know five",
    "start": "1103880",
    "end": "1109190"
  },
  {
    "text": "milliseconds is really cool 200 microseconds is awesome that is fast we",
    "start": "1109190",
    "end": "1114830"
  },
  {
    "text": "just added in memory caching to our application didn't have to write any cache invalidation logic so let me go",
    "start": "1114830",
    "end": "1120500"
  },
  {
    "text": "show you now how we would provision such an endpoint like this so as many of you",
    "start": "1120500",
    "end": "1128540"
  },
  {
    "start": "1127000",
    "end": "1256000"
  },
  {
    "text": "familiar with you know quite a few show hands they've been using DynamoDB you",
    "start": "1128540",
    "end": "1133550"
  },
  {
    "text": "know this is the table that I was just playing with you know we have the movies table and has the items right and we",
    "start": "1133550",
    "end": "1141200"
  },
  {
    "text": "have some goodies in here some old urns and have these movies I don't even know but there's some good ones in there so",
    "start": "1141200",
    "end": "1147080"
  },
  {
    "text": "this is a data we're playing with and we said hey you know that's great now let's figure out how we're going to",
    "start": "1147080",
    "end": "1152180"
  },
  {
    "text": "deploy this this endpoint so go into dynamo where we go into the Dax Council which is just sitting right below",
    "start": "1152180",
    "end": "1158630"
  },
  {
    "text": "dynamodb and you can see we have the preview tag as we just announced that today we're going to go create a cluster",
    "start": "1158630",
    "end": "1164840"
  },
  {
    "text": "and we'll just call this SF summit one and they're going to choose the different the node type that we want and",
    "start": "1164840",
    "end": "1171140"
  },
  {
    "text": "what this really means you know for your application is how big do you want your cache size to be we're going to start",
    "start": "1171140",
    "end": "1176420"
  },
  {
    "text": "off on the are three instances so arrange anywhere from 15 gigs to 244 gigs of memory and what customers",
    "start": "1176420",
    "end": "1183500"
  },
  {
    "text": "typically think about this is you know how much what is my working set and how long do I want that to fit in send in",
    "start": "1183500",
    "end": "1189320"
  },
  {
    "text": "memory so we'll say an R 3 large is sufficient you know we'll choose you know we have the ability to choose up to",
    "start": "1189320",
    "end": "1194600"
  },
  {
    "text": "10 nodes will choose 3 for the purposes of this application and then we specify a role and what this rule does for you",
    "start": "1194600",
    "end": "1201770"
  },
  {
    "text": "is it says hey I'm going to let Dax call DynamoDB AP is on my behalf",
    "start": "1201770",
    "end": "1206930"
  },
  {
    "text": "it also allows you to attach a security policy that says hey I only want Dax to be able to talk to these three tables",
    "start": "1206930",
    "end": "1212990"
  },
  {
    "text": "and call these three api's maybe it's just get put in scan if that is",
    "start": "1212990",
    "end": "1218630"
  },
  {
    "text": "applicable to your application or it could just be the read api's will keep",
    "start": "1218630",
    "end": "1223760"
  },
  {
    "text": "the same sub keep the default to the subnet group and the security groups and then we just click Launch and what this",
    "start": "1223760",
    "end": "1233600"
  },
  {
    "text": "will go do is create an endpoint and I've already created some of these ahead of time I created a gym cluster earlier but we'll grab the the Dynamo or the",
    "start": "1233600",
    "end": "1240500"
  },
  {
    "text": "demo one that we used earlier and we would just go grab this endpoint and then we would go back to our application",
    "start": "1240500",
    "end": "1245800"
  },
  {
    "text": "and add that endpoint in there with the Dax client and we're off to the races so",
    "start": "1245800",
    "end": "1252130"
  },
  {
    "text": "you can switch back to the presentation please alright so as we talked about",
    "start": "1252130",
    "end": "1258380"
  },
  {
    "start": "1256000",
    "end": "1380000"
  },
  {
    "text": "Dax's is a fully managed highly available caching cluster in you know",
    "start": "1258380",
    "end": "1263480"
  },
  {
    "text": "what is what does that mean what is what is fully managed me means you don't have to manage any of the life cycles you come to expect from an AWS service you",
    "start": "1263480",
    "end": "1270320"
  },
  {
    "text": "know all the patching upgrades is handled for you high availability is achieved through you know enabling to",
    "start": "1270320",
    "end": "1277340"
  },
  {
    "text": "create clusters that have nodes in multiple AZ's so in the unlikely case that there's a issue with a node or an",
    "start": "1277340",
    "end": "1284270"
  },
  {
    "text": "AZ there's still three nodes you know for instance in a three node cluster there's still two nodes that enable your",
    "start": "1284270",
    "end": "1290300"
  },
  {
    "text": "application to keep moving along and Dax also enables you to scale that out so say hey three knows isn't good enough",
    "start": "1290300",
    "end": "1296780"
  },
  {
    "text": "from application you know I need millions of requests per second you can keep scaling out you know four five six",
    "start": "1296780",
    "end": "1302780"
  },
  {
    "text": "seven up to ten nodes for an individual cluster we can scale that back down as well with Dax are also integrated into",
    "start": "1302780",
    "end": "1310790"
  },
  {
    "text": "AWS services that you're used to using for manageability Dax will come out of the box with begging cloud watch metrics",
    "start": "1310790",
    "end": "1317860"
  },
  {
    "text": "and console support as we saw and also for security you manage Dax control",
    "start": "1317860",
    "end": "1324500"
  },
  {
    "text": "either Dax's access to dynamo DB or your clients access to Dax through using iam",
    "start": "1324500",
    "end": "1330410"
  },
  {
    "text": "policies and one of the questions we typically get in this manageability",
    "start": "1330410",
    "end": "1336050"
  },
  {
    "text": "space is hey how do you how do your victims from Dax actually as two algorithms at play you",
    "start": "1336050",
    "end": "1341870"
  },
  {
    "text": "can set a TTL or time-to-live value for the items that exist index and after say five minutes or ten minutes or whatever",
    "start": "1341870",
    "end": "1348590"
  },
  {
    "text": "is applicable for your application will expire those will expire those items dax",
    "start": "1348590",
    "end": "1354230"
  },
  {
    "text": "also uses what is called lease recently used which is an algorithm that says hey if your application is just pounding",
    "start": "1354230",
    "end": "1360830"
  },
  {
    "text": "your Dax cluster which is we evict well we'll Vic the ones that are released",
    "start": "1360830",
    "end": "1366049"
  },
  {
    "text": "recently used in favor of the ones that are most recent we use index also is we",
    "start": "1366049",
    "end": "1372559"
  },
  {
    "text": "deploy within your V PC so we provide that strong Network boundary between your application and the caching tier so",
    "start": "1372559",
    "end": "1381710"
  },
  {
    "start": "1380000",
    "end": "1445000"
  },
  {
    "text": "as we've been working through the beta with with quite a few customers there's been two use cases that have really",
    "start": "1381710",
    "end": "1387559"
  },
  {
    "text": "emerged the first one is customers that have as Jim was talking about really",
    "start": "1387559",
    "end": "1392750"
  },
  {
    "text": "unpredictable workloads and what typically happens in databases and what customers do a lot is they",
    "start": "1392750",
    "end": "1397870"
  },
  {
    "text": "over-provision their database significantly because the chance of not hitting you know your customers on the",
    "start": "1397870",
    "end": "1403730"
  },
  {
    "text": "Game seven of the World Series is very detrimental to your business but it also becomes you know pretty expensive to",
    "start": "1403730",
    "end": "1410090"
  },
  {
    "text": "over provision or it becomes you know a lot to manage when customers typically do in those situations is add a cache",
    "start": "1410090",
    "end": "1415340"
  },
  {
    "text": "right it's a great buffer and you see this across an entire application stack whether it's in the client or whether",
    "start": "1415340",
    "end": "1421549"
  },
  {
    "text": "it's you know in front of the database and what we see with customers you know",
    "start": "1421549",
    "end": "1427340"
  },
  {
    "text": "looking at Dax and dynamodb together and I really love these quotes is the best of both worlds where I get improved late",
    "start": "1427340",
    "end": "1433760"
  },
  {
    "text": "you know I get the 10x performance or the 20x performance that we saw here but I also can think about reducing some of",
    "start": "1433760",
    "end": "1439370"
  },
  {
    "text": "my over provisioning on my database because Dax provides that buffer for me",
    "start": "1439370",
    "end": "1445059"
  },
  {
    "start": "1445000",
    "end": "1537000"
  },
  {
    "text": "the second pattern that we've seen emerge is just the customers that want the raw speed and this goes back to you",
    "start": "1445510",
    "end": "1452120"
  },
  {
    "text": "know hey we're not having a conversation about milliseconds anymore we're having a conversation about microseconds and if",
    "start": "1452120",
    "end": "1458210"
  },
  {
    "text": "I can achieve that that helps me do 25 percent more work before I have to place a bid or it makes my game that much",
    "start": "1458210",
    "end": "1464570"
  },
  {
    "text": "faster I mean sometimes I'll just go and watch twitch and those guys know if there's a",
    "start": "1464570",
    "end": "1470210"
  },
  {
    "text": "little bit of jitter in the game or there's a little bit of latency built call it out on the game and call each other out and say hey your your",
    "start": "1470210",
    "end": "1477350"
  },
  {
    "text": "connections not good or there's a problem of the game so these things really really matter but what has been",
    "start": "1477350",
    "end": "1483230"
  },
  {
    "text": "consistent across the customers that we've been working with in the beta is the ease of use and one of the gentlemen",
    "start": "1483230",
    "end": "1489020"
  },
  {
    "text": "working with is a VP at one of the companies and you know he has a whole engineering team at his disposal he can",
    "start": "1489020",
    "end": "1495860"
  },
  {
    "text": "call any one of those guys into his office to help them at any time he said hey adding back some application is so",
    "start": "1495860",
    "end": "1501140"
  },
  {
    "text": "easy I didn't need that any of those guys for help so you know I just want to",
    "start": "1501140",
    "end": "1506360"
  },
  {
    "text": "was with with our customers I think Glenn you know really summarized this and I don't think I could say it better",
    "start": "1506360",
    "end": "1512030"
  },
  {
    "text": "so I will actually read it verbatim and this is really at the spirit of working back from customer problems is AWS team",
    "start": "1512030",
    "end": "1518150"
  },
  {
    "text": "has taken a best-practice architectural pattern and turned it into something that is repeatable and valuable for its customers so we see",
    "start": "1518150",
    "end": "1525470"
  },
  {
    "text": "that if customers want to achieve that performance you know instead of having every single customer write that",
    "start": "1525470",
    "end": "1531020"
  },
  {
    "text": "bifurcation logic for caching for every single application that they want to use that for we just made it easier for them",
    "start": "1531020",
    "end": "1536480"
  },
  {
    "text": "with Dax so X is in public preview today amazing performance really simple to use",
    "start": "1536480",
    "end": "1543830"
  },
  {
    "start": "1537000",
    "end": "1565000"
  },
  {
    "text": "and we feel you know for a lot of customers they're given those feedback it's actually going to help them not only achieve more performance but I will",
    "start": "1543830",
    "end": "1549950"
  },
  {
    "text": "save costs on their application as well so thank [Applause]",
    "start": "1549950",
    "end": "1559900"
  },
  {
    "text": "great so we're really excited about that one I'm going to go through some of the other areas as well so we talked about",
    "start": "1559900",
    "end": "1568550"
  },
  {
    "start": "1565000",
    "end": "1670000"
  },
  {
    "text": "security well we talked to security security is one of the areas we care about and you know we care about it",
    "start": "1568550",
    "end": "1574520"
  },
  {
    "text": "again because Amazon uses dynamodb and as well as so many customers we we have",
    "start": "1574520",
    "end": "1580550"
  },
  {
    "text": "a number of compliance regulatory compliance regimes that we have to comply with as well as our customers so",
    "start": "1580550",
    "end": "1587120"
  },
  {
    "text": "kind of it drives us to always be raising the bar with security one of the",
    "start": "1587120",
    "end": "1593180"
  },
  {
    "text": "you know first areas that we have is integration with 8os identity access",
    "start": "1593180",
    "end": "1598790"
  },
  {
    "text": "management and that gives you the control at the user level at the",
    "start": "1598790",
    "end": "1603860"
  },
  {
    "text": "federated user level even using internet identity providers like Facebook and Google or whatever you can give access",
    "start": "1603860",
    "end": "1609920"
  },
  {
    "text": "control control at the user level and it's also we have very fine-grain access",
    "start": "1609920",
    "end": "1615890"
  },
  {
    "text": "control at the DynamoDB level we can support per item and per attribute level",
    "start": "1615890",
    "end": "1621560"
  },
  {
    "text": "access control so you can really control things down to the equivalent of a single row for a single user you can",
    "start": "1621560",
    "end": "1629120"
  },
  {
    "text": "also do things like ensuring users can read and write to DynamoDB table but they can to be more disruptive",
    "start": "1629120",
    "end": "1635050"
  },
  {
    "text": "destructive operations like deleting data from the table or dropping at a",
    "start": "1635050",
    "end": "1640100"
  },
  {
    "text": "table and that's really important as you know for mission critical workloads we",
    "start": "1640100",
    "end": "1645620"
  },
  {
    "text": "have monitoring integration with Cod watch so you can you know make sure you're tracking access patterns to your",
    "start": "1645620",
    "end": "1652520"
  },
  {
    "text": "dynamodb tables and then we've integration with cloud trail for audit log purposes then we have a wide range",
    "start": "1652520",
    "end": "1659150"
  },
  {
    "text": "of compliance support Sauk PCI FedRAMP HIPPA etc now one of the most common",
    "start": "1659150",
    "end": "1668390"
  },
  {
    "text": "security best practices is to use an Amazon virtual private cloud which lets",
    "start": "1668390",
    "end": "1674570"
  },
  {
    "start": "1670000",
    "end": "1715000"
  },
  {
    "text": "you virtualize the network and control and create subnet and control access within those subnets and before today",
    "start": "1674570",
    "end": "1683590"
  },
  {
    "text": "you know that's good for your ec2 but if you needed to access data in dynamodb",
    "start": "1683590",
    "end": "1689020"
  },
  {
    "text": "you basically have to manage from your V PC subnet manage an Internet",
    "start": "1689020",
    "end": "1695909"
  },
  {
    "text": "gateway traffic would actually go out to the Internet and your DynamoDB tables",
    "start": "1695909",
    "end": "1701220"
  },
  {
    "text": "were potentially you know or they're accessible from the public Internet and you can use X control to lock that",
    "start": "1701220",
    "end": "1707370"
  },
  {
    "text": "down but in order to make this pattern work you had to have get those tables internet accessible and today with the",
    "start": "1707370",
    "end": "1716669"
  },
  {
    "start": "1715000",
    "end": "1761000"
  },
  {
    "text": "launch of public preview of V PC endpoints for dynamodb we've now",
    "start": "1716669",
    "end": "1723240"
  },
  {
    "text": "extended that so you can essentially extend DynamoDB into your V PC and you",
    "start": "1723240",
    "end": "1730980"
  },
  {
    "text": "know with that the main one you know it gives you much more fine-grained control and then you know while having DynamoDB",
    "start": "1730980",
    "end": "1738450"
  },
  {
    "text": "internet accessible is kind of mandatory for use cases like mobile iot devices",
    "start": "1738450",
    "end": "1744270"
  },
  {
    "text": "where you want the Internet to be able to access or DynamoDB tables if you are",
    "start": "1744270",
    "end": "1749610"
  },
  {
    "text": "doing more back office or financial applications or what have you there you",
    "start": "1749610",
    "end": "1754799"
  },
  {
    "text": "probably don't want your tables to be internet accessible and so let's walk through how you actually do that",
    "start": "1754799",
    "end": "1760770"
  },
  {
    "text": "so use identity access management to create a policy that can create",
    "start": "1760770",
    "end": "1766740"
  },
  {
    "start": "1761000",
    "end": "1813000"
  },
  {
    "text": "restricts users groups or roles to a particular VPC endpoint for a particular",
    "start": "1766740",
    "end": "1773220"
  },
  {
    "text": "DynamoDB table or tables and so here we're going to construct niam policy so",
    "start": "1773220",
    "end": "1779909"
  },
  {
    "text": "first we're seeing we're saying deny all dynamodb acts actions for all accounts",
    "start": "1779909",
    "end": "1789470"
  },
  {
    "text": "except when it's coming from my particular V PC so that V PC e - one one",
    "start": "1789470",
    "end": "1796529"
  },
  {
    "text": "one BB B - - that's the identifier for the V PC you're using and so that will",
    "start": "1796529",
    "end": "1802740"
  },
  {
    "text": "lock down access to your table you know and again you can do this for a particular users particularly a beloved",
    "start": "1802740",
    "end": "1809730"
  },
  {
    "text": "cetera you just apply the policies and the key features here you know security",
    "start": "1809730",
    "end": "1816000"
  },
  {
    "start": "1813000",
    "end": "1842000"
  },
  {
    "text": "access control locking off access from the public Internet gateways and it's fast secure and easier to use",
    "start": "1816000",
    "end": "1823139"
  },
  {
    "text": "than what you could do prior to today it's in public preview right now in in",
    "start": "1823139",
    "end": "1830129"
  },
  {
    "text": "eight regions we're adding more all the time and so we really look forward to",
    "start": "1830129",
    "end": "1835679"
  },
  {
    "text": "trying it out signing up trying it out and giving us a feedback on it right",
    "start": "1835679",
    "end": "1842508"
  },
  {
    "start": "1842000",
    "end": "1852000"
  },
  {
    "text": "okay availability and data protection you know all customers care about it we care",
    "start": "1842659",
    "end": "1849059"
  },
  {
    "text": "about it you know when we look at DynamoDB we're available in all address",
    "start": "1849059",
    "end": "1856590"
  },
  {
    "start": "1852000",
    "end": "1930000"
  },
  {
    "text": "regions worldwide sixteen regions and Counting so as you hear the announcements the database is adding",
    "start": "1856590",
    "end": "1862980"
  },
  {
    "text": "more regions I think we just said Sweden just I mean it just now Sweden just reached recently you can you can know",
    "start": "1862980",
    "end": "1870389"
  },
  {
    "text": "that DynamoDB will be there in fact as we are building out new regions we",
    "start": "1870389",
    "end": "1877740"
  },
  {
    "text": "cannot even boot up ec2 when we're building out a new region until DynamoDB is already up and operational so what",
    "start": "1877740",
    "end": "1885600"
  },
  {
    "text": "that means to you is you can just rest assured knowing that Dinamo is going to be in all these regions and as they",
    "start": "1885600",
    "end": "1892440"
  },
  {
    "text": "dress expands and so we're probably already in the regions you need but you can also rest assure that as your",
    "start": "1892440",
    "end": "1898379"
  },
  {
    "text": "business expands and a2s expands to different regions Dinamo will be there",
    "start": "1898379",
    "end": "1903450"
  },
  {
    "text": "too you can see we're already operating in a pretty large scale and then of course we we take care of replicating",
    "start": "1903450",
    "end": "1912480"
  },
  {
    "text": "data and making sure that is available to you by replicating across three availability zones for you all behind",
    "start": "1912480",
    "end": "1919799"
  },
  {
    "text": "the scenes all within that single-digit millisecond request so that you can just",
    "start": "1919799",
    "end": "1925889"
  },
  {
    "text": "worry about your app and not worry about your data okay so then manageability I said",
    "start": "1925889",
    "end": "1934289"
  },
  {
    "start": "1930000",
    "end": "1978000"
  },
  {
    "text": "earlier a lot of customers really choose the nmo even if they've tried other no",
    "start": "1934289",
    "end": "1939389"
  },
  {
    "text": "sequel databases previously we've had a number of customers try the no sequel databases",
    "start": "1939389",
    "end": "1945019"
  },
  {
    "text": "you know themselves and then over time scale they realize that managing you",
    "start": "1945019",
    "end": "1950650"
  },
  {
    "text": "know a 50 node cluster or 100 node cluster it's hard to do a lot of muck it requires specialized skill set because",
    "start": "1950650",
    "end": "1957280"
  },
  {
    "text": "you kind of need someone who can kind of think like a DBA but also think like a developer it's pretty hard skill set to",
    "start": "1957280",
    "end": "1963460"
  },
  {
    "text": "find retain and scale and 24/7 around the clock and so we have a number of",
    "start": "1963460",
    "end": "1970000"
  },
  {
    "text": "customers that you know once things get big they come to us and say hey I think",
    "start": "1970000",
    "end": "1975040"
  },
  {
    "text": "dynamodb is a better solution for us and so you know previously I mentioned that",
    "start": "1975040",
    "end": "1981340"
  },
  {
    "start": "1978000",
    "end": "2027000"
  },
  {
    "text": "customers have individual tables that exceed 100 terabytes and that can be",
    "start": "1981340",
    "end": "1987190"
  },
  {
    "text": "that's pretty cool but over time that data can really be hard to manage particularly if you have regulatory",
    "start": "1987190",
    "end": "1992410"
  },
  {
    "text": "requirements that say you have to expire out all data or if you know in order to",
    "start": "1992410",
    "end": "1998590"
  },
  {
    "text": "keep your application tuned you want to make sure that that you're only pulling back a small result set you don't wanna",
    "start": "1998590",
    "end": "2004950"
  },
  {
    "text": "have to paginate through you might want to you know delete out old data just to kind of make sure that your app response",
    "start": "2004950",
    "end": "2011790"
  },
  {
    "text": "is staying performant and you know you could always could have done that",
    "start": "2011790",
    "end": "2016920"
  },
  {
    "text": "previously with dynamo but it's a lot of mock for you to handle particularly when",
    "start": "2016920",
    "end": "2022500"
  },
  {
    "text": "you're talking about you know terabytes tens of terabytes hundred terabytes and so in February we announced time-to-live",
    "start": "2022500",
    "end": "2030990"
  },
  {
    "start": "2027000",
    "end": "2127000"
  },
  {
    "text": "which is generally available in all regions and essentially what you do is you specify a single attribute of your",
    "start": "2030990",
    "end": "2037290"
  },
  {
    "text": "table and you say hey that's my TTL attribute and then you set a timestamp",
    "start": "2037290",
    "end": "2044010"
  },
  {
    "text": "at a per item level and then dynamo will behind-the-scenes sweep out the old",
    "start": "2044010",
    "end": "2050878"
  },
  {
    "text": "items and delete them on your behalf in it as a background process and what's",
    "start": "2050879",
    "end": "2057330"
  },
  {
    "text": "good about this is it's not at all interfering with your I ops your iOS you",
    "start": "2057330",
    "end": "2062820"
  },
  {
    "text": "know coming in from your application we just use spare I ops behind the scenes and it's all free to you these elites",
    "start": "2062820",
    "end": "2070950"
  },
  {
    "text": "are logs to dynamodb streams and which means all of this gives you the ability",
    "start": "2070950",
    "end": "2076950"
  },
  {
    "text": "to reuse costs you know for your application some some people find that you know just shrinking",
    "start": "2076950",
    "end": "2083220"
  },
  {
    "text": "the data set for their app you know while dynamo queries are very consistent their application having the page",
    "start": "2083220",
    "end": "2088829"
  },
  {
    "text": "paginate through less smaller results that can be beneficial and then we're",
    "start": "2088829",
    "end": "2094020"
  },
  {
    "text": "starting to see customers who looking at these streams and viewing the deletes that we're doing since they're all log",
    "start": "2094020",
    "end": "2100980"
  },
  {
    "text": "streams they're then triggering other workflows lambda functions that are doing like",
    "start": "2100980",
    "end": "2106500"
  },
  {
    "text": "post processing so things like hey when I delete this DynamoDB record I'm then going to configure a lambda function",
    "start": "2106500",
    "end": "2113490"
  },
  {
    "text": "that will then go and delete any associate s3 data that may be pertain to",
    "start": "2113490",
    "end": "2119490"
  },
  {
    "text": "say a customer ID that was in that record that kind of thing so it's very extensible and we're starting to see customers do more and more like that and",
    "start": "2119490",
    "end": "2128420"
  },
  {
    "start": "2127000",
    "end": "2164000"
  },
  {
    "text": "you know so tune is an ad tech company a tech company is produce a ton of data",
    "start": "2128420",
    "end": "2134540"
  },
  {
    "text": "and not just shortly after we turned",
    "start": "2134540",
    "end": "2139770"
  },
  {
    "text": "them on for TTL they purged 85 terabytes of data from the tables they saved",
    "start": "2139770",
    "end": "2144780"
  },
  {
    "text": "themselves over 200 thousand dollars per year while also simplifying their app logic because they no longer had to",
    "start": "2144780",
    "end": "2151800"
  },
  {
    "text": "worry about kind of doing sweeps themselves and again details free to use",
    "start": "2151800",
    "end": "2157920"
  },
  {
    "text": "saves a few hundred thousand dollars win-win so they were pretty happy with that and we were too so another you know",
    "start": "2157920",
    "end": "2167160"
  },
  {
    "text": "another thing about manageability so when I've talked to customers particularly early on in their cloud",
    "start": "2167160",
    "end": "2173280"
  },
  {
    "text": "migration but probably even continuing on past that you know they typically have two main concerns about going to",
    "start": "2173280",
    "end": "2179520"
  },
  {
    "text": "cloud one is security I talked about all the capabilities that dynamodb has we",
    "start": "2179520",
    "end": "2184619"
  },
  {
    "text": "just added VPC endpoints and so will continue to iterate there but the other",
    "start": "2184619",
    "end": "2189990"
  },
  {
    "text": "concern other than security is typically cost and so you know you I can explain",
    "start": "2189990",
    "end": "2196530"
  },
  {
    "text": "to you how dynamodb is priced and simple and you know predictable and all that kind of stuff and then you can learn sqs",
    "start": "2196530",
    "end": "2203040"
  },
  {
    "text": "pricing and ec2 pricing and all that kind of stuff but over time you know a bet most of you",
    "start": "2203040",
    "end": "2208820"
  },
  {
    "text": "building real-world architectures like this one and this one's actually fairly simple and figuring out how cost plays",
    "start": "2208820",
    "end": "2216890"
  },
  {
    "text": "across all those services over time can be pretty complex and you know if you",
    "start": "2216890",
    "end": "2222350"
  },
  {
    "text": "can't understand your usage that could potentially lead to you know dollars you",
    "start": "2222350",
    "end": "2227870"
  },
  {
    "text": "didn't want to necessarily spend so in January we added tagging support it's",
    "start": "2227870",
    "end": "2234080"
  },
  {
    "start": "2230000",
    "end": "2300000"
  },
  {
    "text": "it's generally available in all regions and this is similar if you've used tagging with ec2 or any of the other US",
    "start": "2234080",
    "end": "2240920"
  },
  {
    "text": "services it's the same thing we've added it for dynamo DB so now you can tag",
    "start": "2240920",
    "end": "2245960"
  },
  {
    "text": "particular tables and you can do things like tag a table and you know for you know Project X or project Y or dev",
    "start": "2245960",
    "end": "2253340"
  },
  {
    "text": "versus tests or or internal business unit a versus B that kind of thing",
    "start": "2253340",
    "end": "2259310"
  },
  {
    "text": "whatever you care about and then it allows you to sort you know in your reports you can see in the hopefully you",
    "start": "2259310",
    "end": "2267620"
  },
  {
    "text": "can see the in the in the graphic there you can then filter your reports only show particular tags and the key",
    "start": "2267620",
    "end": "2275480"
  },
  {
    "text": "benefits here is now you can understand your costs your your dynamodb cost but",
    "start": "2275480",
    "end": "2282230"
  },
  {
    "text": "consistent across your other a dress spend as well and so now you can do",
    "start": "2282230",
    "end": "2287660"
  },
  {
    "text": "things like internal accounting chargebacks or whatever to know whether it's project X or project Y that's",
    "start": "2287660",
    "end": "2294500"
  },
  {
    "text": "leading you to spend more on dynamo this month versus last and then another thing",
    "start": "2294500",
    "end": "2303800"
  },
  {
    "start": "2300000",
    "end": "2325000"
  },
  {
    "text": "for manageability we find that a lot of customers might start out with their own databases",
    "start": "2303800",
    "end": "2308960"
  },
  {
    "text": "either relational or no sequel but over time they find that managing them just",
    "start": "2308960",
    "end": "2314840"
  },
  {
    "text": "as something overhead they don't want to deal with anymore and so more and more we're hearing them come to dynamodb",
    "start": "2314840",
    "end": "2320300"
  },
  {
    "text": "they're saying hey how do I get from there over to dynamodb well last week",
    "start": "2320300",
    "end": "2327020"
  },
  {
    "start": "2325000",
    "end": "2376000"
  },
  {
    "text": "the AOS data migration service which is a service that's been around for a bit now which previously has enabled",
    "start": "2327020",
    "end": "2334990"
  },
  {
    "text": "relational to relational migrations so things from like your your",
    "start": "2334990",
    "end": "2340089"
  },
  {
    "text": "historical on-prem relational database either onto RDS for manage relational or",
    "start": "2340089",
    "end": "2346660"
  },
  {
    "text": "on to Aurora for even you know better performance lower cost so we've been",
    "start": "2346660",
    "end": "2351999"
  },
  {
    "text": "seeing a lot of success with DMS for those kinds of use cases but now they added connectors for MongoDB and dynamo",
    "start": "2351999",
    "end": "2359199"
  },
  {
    "text": "DB so now if you're trying to move weather relational or non-relational",
    "start": "2359199",
    "end": "2364390"
  },
  {
    "text": "data over to dynamo DB DMS can help you with that so really looking for feedback",
    "start": "2364390",
    "end": "2369579"
  },
  {
    "text": "on this one hope you'll try it out and let us know and that's generally available and then last is developer",
    "start": "2369579",
    "end": "2379689"
  },
  {
    "start": "2376000",
    "end": "2385000"
  },
  {
    "text": "platform it's basically all of you and the folks you work with we want to make it easy for you to you know build",
    "start": "2379689",
    "end": "2386559"
  },
  {
    "start": "2385000",
    "end": "2536000"
  },
  {
    "text": "awesome apps on dynamo you know take advantage of the scale performance the",
    "start": "2386559",
    "end": "2391930"
  },
  {
    "text": "you know the global presence the dynamo provides and then you do the innovation on top now you know this diagram the",
    "start": "2391930",
    "end": "2399219"
  },
  {
    "text": "diagram isn't that important but what is important is you know you you could just think of dynamo DB as a database storing",
    "start": "2399219",
    "end": "2406359"
  },
  {
    "text": "your data but that's not really how the world works anymore you really need to think about well hey you know if I have",
    "start": "2406359",
    "end": "2413349"
  },
  {
    "text": "RFID or data coming in you know do I",
    "start": "2413349",
    "end": "2418420"
  },
  {
    "text": "have a database that is in the regions where that that would be that can scale",
    "start": "2418420",
    "end": "2423489"
  },
  {
    "text": "if all of a sudden those IOT sensors start triggering more data coming in at",
    "start": "2423489",
    "end": "2429279"
  },
  {
    "text": "a faster rate and it's always available because a lot of that IOT devices don't",
    "start": "2429279",
    "end": "2434349"
  },
  {
    "text": "do so well all of a sudden things are disconnected for a while and so dynamodb you know is increasingly used in that",
    "start": "2434349",
    "end": "2441640"
  },
  {
    "text": "way and is kind of an underpinning to some of the 80's iot offerings then you",
    "start": "2441640",
    "end": "2448239"
  },
  {
    "text": "know Werner said earlier dynamo GE has become the default server list database",
    "start": "2448239",
    "end": "2453359"
  },
  {
    "text": "and we're seeing that all the time customers wanted to use lambda functions",
    "start": "2453359",
    "end": "2458410"
  },
  {
    "text": "to do server lists also things like Alexa skills development you know the",
    "start": "2458410",
    "end": "2464679"
  },
  {
    "text": "natural thing we're the natural pattern we're seeing is for customers to use dynamodb as a database under painting",
    "start": "2464679",
    "end": "2470920"
  },
  {
    "text": "that and as well as you know I talk about streams enables you to you know read off",
    "start": "2470920",
    "end": "2478520"
  },
  {
    "text": "the changes and integrate with other things whether be EMR and redshift or analysis or your own application you",
    "start": "2478520",
    "end": "2484670"
  },
  {
    "text": "know saying hey when this record changes I want to do something on my application so the main point here is as a draft",
    "start": "2484670",
    "end": "2492680"
  },
  {
    "text": "keeps adding and standing the services in our internal ecosystem we keep you know dynamodb is one of these",
    "start": "2492680",
    "end": "2498860"
  },
  {
    "text": "foundational pillars that you know all these other services are relying on and",
    "start": "2498860",
    "end": "2505790"
  },
  {
    "text": "we're going to continue to focus on integrating there for you so as these services come out you know dynamo cetera",
    "start": "2505790",
    "end": "2512200"
  },
  {
    "text": "but also you know one of the major areas of focus for us is we want to figure out",
    "start": "2512200",
    "end": "2518270"
  },
  {
    "text": "how to make it easier for developers how to integrate dynamo with your services applications and your favorite tools and",
    "start": "2518270",
    "end": "2525980"
  },
  {
    "text": "SDKs and all that so if you have any ideas on that we'd love to get more feedback on how we could make dynamo DB",
    "start": "2525980",
    "end": "2532880"
  },
  {
    "text": "easier for developers and so you know just winding down here you know we've",
    "start": "2532880",
    "end": "2540530"
  },
  {
    "start": "2536000",
    "end": "2573000"
  },
  {
    "text": "talked about these pillars scalability performance security availability",
    "start": "2540530",
    "end": "2545720"
  },
  {
    "text": "management manageability developer platform where we were excited to announce a number of things today DAC",
    "start": "2545720",
    "end": "2553040"
  },
  {
    "text": "CPC endpoints as well as some of the other items like tagging and TTL and VMs connector where you know we're excited",
    "start": "2553040",
    "end": "2560120"
  },
  {
    "text": "to add those and you know our general processes you probably know by now with a dress is continue to iteratively",
    "start": "2560120",
    "end": "2566480"
  },
  {
    "text": "iterate on all these dimensions so you can expect more capabilities coming out on all those pillars over time and as",
    "start": "2566480",
    "end": "2574070"
  },
  {
    "start": "2573000",
    "end": "2621000"
  },
  {
    "text": "Vernor said you know go code we love you know we love these conferences getting the custom you know talking to customers",
    "start": "2574070",
    "end": "2579440"
  },
  {
    "text": "getting the feedback we really get stoked to launch new services and get",
    "start": "2579440",
    "end": "2585050"
  },
  {
    "text": "them getting them into your hands because we have our own suspicions of where we need to go next with some of these things but really what guides us",
    "start": "2585050",
    "end": "2591710"
  },
  {
    "text": "in a dress as a customer feedback so love you to check these out try them out",
    "start": "2591710",
    "end": "2597440"
  },
  {
    "text": "dax VPC end points the data migration service and then give us feedback again Dax and",
    "start": "2597440",
    "end": "2603630"
  },
  {
    "text": "VP ten points are in public preview today sign up and we're going to be whitelisting starting tomorrow morning",
    "start": "2603630",
    "end": "2609630"
  },
  {
    "text": "so with that thanks for coming and I'll be up here afterwards Joe and I will be up here afterwards if you have any",
    "start": "2609630",
    "end": "2615869"
  },
  {
    "text": "questions thank you [Applause]",
    "start": "2615869",
    "end": "2623709"
  }
]