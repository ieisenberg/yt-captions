[
  {
    "text": "hi",
    "start": "5520",
    "end": "6240"
  },
  {
    "text": "and welcome to getting started with",
    "start": "6240",
    "end": "7759"
  },
  {
    "text": "rules engine my name is dave malone",
    "start": "7759",
    "end": "10559"
  },
  {
    "text": "and i am an iot solutions architect for",
    "start": "10559",
    "end": "12799"
  },
  {
    "text": "aws",
    "start": "12799",
    "end": "15040"
  },
  {
    "text": "in this tutorial we will cover rules",
    "start": "15040",
    "end": "16960"
  },
  {
    "text": "engine a feature of aws",
    "start": "16960",
    "end": "19119"
  },
  {
    "text": "iot core which makes it easy to route",
    "start": "19119",
    "end": "21680"
  },
  {
    "text": "device data",
    "start": "21680",
    "end": "22560"
  },
  {
    "text": "to and from aws services rules engine",
    "start": "22560",
    "end": "26160"
  },
  {
    "text": "makes it possible to build iot",
    "start": "26160",
    "end": "28160"
  },
  {
    "text": "applications that gather",
    "start": "28160",
    "end": "29599"
  },
  {
    "text": "process analyze and act on data",
    "start": "29599",
    "end": "32160"
  },
  {
    "text": "generated by your devices",
    "start": "32160",
    "end": "33920"
  },
  {
    "text": "without having to manage any",
    "start": "33920",
    "end": "35520"
  },
  {
    "text": "infrastructure",
    "start": "35520",
    "end": "36960"
  },
  {
    "text": "for example you can evaluate incoming",
    "start": "36960",
    "end": "39360"
  },
  {
    "text": "messages and route them to aws services",
    "start": "39360",
    "end": "42399"
  },
  {
    "text": "including aws iot analytics or events",
    "start": "42399",
    "end": "45760"
  },
  {
    "text": "aws lambda amazon kinesis",
    "start": "45760",
    "end": "48800"
  },
  {
    "text": "amazon s3 amazon simple notification",
    "start": "48800",
    "end": "52160"
  },
  {
    "text": "service",
    "start": "52160",
    "end": "52800"
  },
  {
    "text": "and many more in this video i will show",
    "start": "52800",
    "end": "55680"
  },
  {
    "text": "you how to create a rule to select data",
    "start": "55680",
    "end": "58320"
  },
  {
    "text": "from mqtt topics then transform",
    "start": "58320",
    "end": "62160"
  },
  {
    "text": "filter and enrich data using sql like",
    "start": "62160",
    "end": "65760"
  },
  {
    "text": "statements",
    "start": "65760",
    "end": "66880"
  },
  {
    "text": "and then route the data to other aws",
    "start": "66880",
    "end": "69280"
  },
  {
    "text": "services via actions",
    "start": "69280",
    "end": "72479"
  },
  {
    "text": "to follow along with this demo you will",
    "start": "72479",
    "end": "74799"
  },
  {
    "text": "need a device or devices",
    "start": "74799",
    "end": "76640"
  },
  {
    "text": "registered and have a device sdk",
    "start": "76640",
    "end": "79680"
  },
  {
    "text": "which are publishing messages to the aws",
    "start": "79680",
    "end": "82640"
  },
  {
    "text": "iot core broker",
    "start": "82640",
    "end": "84560"
  },
  {
    "text": "if you are following along from the iot",
    "start": "84560",
    "end": "87119"
  },
  {
    "text": "quick connect video",
    "start": "87119",
    "end": "88479"
  },
  {
    "text": "i will be using the same device setup",
    "start": "88479",
    "end": "90560"
  },
  {
    "text": "later in this video",
    "start": "90560",
    "end": "93600"
  },
  {
    "text": "i'm going to start by showing you where",
    "start": "94320",
    "end": "96240"
  },
  {
    "text": "rules exist",
    "start": "96240",
    "end": "97680"
  },
  {
    "text": "in the aws iot console after logging",
    "start": "97680",
    "end": "101280"
  },
  {
    "text": "into the aws management console",
    "start": "101280",
    "end": "103600"
  },
  {
    "text": "i will navigate to the aws core",
    "start": "103600",
    "end": "106960"
  },
  {
    "text": "services",
    "start": "106960",
    "end": "109600"
  },
  {
    "text": "once within the aws iot console",
    "start": "111119",
    "end": "114320"
  },
  {
    "text": "i'm going to go ahead and click the act",
    "start": "114320",
    "end": "116479"
  },
  {
    "text": "menu on the left hand navigation menu",
    "start": "116479",
    "end": "120320"
  },
  {
    "text": "go ahead and click rules",
    "start": "120320",
    "end": "123439"
  },
  {
    "text": "and next let's go ahead and click create",
    "start": "123520",
    "end": "125600"
  },
  {
    "text": "a rule",
    "start": "125600",
    "end": "129440"
  },
  {
    "text": "this is where i will be creating my rule",
    "start": "129440",
    "end": "132160"
  },
  {
    "text": "doing my transforms",
    "start": "132160",
    "end": "133680"
  },
  {
    "text": "and filters and then routing data via",
    "start": "133680",
    "end": "136800"
  },
  {
    "text": "actions",
    "start": "136800",
    "end": "138000"
  },
  {
    "text": "but before i get to that i need to",
    "start": "138000",
    "end": "140400"
  },
  {
    "text": "create my demo data",
    "start": "140400",
    "end": "143840"
  },
  {
    "text": "now if you're following along from the",
    "start": "145120",
    "end": "147200"
  },
  {
    "text": "iot quick connect video",
    "start": "147200",
    "end": "149520"
  },
  {
    "text": "we created demo data based on a",
    "start": "149520",
    "end": "151519"
  },
  {
    "text": "fictional company that makes thermostats",
    "start": "151519",
    "end": "154000"
  },
  {
    "text": "so we'll create this data that emits",
    "start": "154000",
    "end": "157200"
  },
  {
    "text": "random temperature values this program",
    "start": "157200",
    "end": "160560"
  },
  {
    "text": "uses the python thing sdk",
    "start": "160560",
    "end": "164480"
  },
  {
    "text": "to publish temperature data over an mqtt",
    "start": "164480",
    "end": "167440"
  },
  {
    "text": "topic",
    "start": "167440",
    "end": "168160"
  },
  {
    "text": "through aws iot core i'm going to go",
    "start": "168160",
    "end": "171120"
  },
  {
    "text": "ahead and",
    "start": "171120",
    "end": "171599"
  },
  {
    "text": "launch the program and have it start",
    "start": "171599",
    "end": "174319"
  },
  {
    "text": "publishing the temperature data",
    "start": "174319",
    "end": "176000"
  },
  {
    "text": "at random through a well-known mqtt",
    "start": "176000",
    "end": "178560"
  },
  {
    "text": "topic",
    "start": "178560",
    "end": "180879"
  },
  {
    "text": "going back into the aws console",
    "start": "182319",
    "end": "185599"
  },
  {
    "text": "we're going to use the test portion of",
    "start": "185599",
    "end": "188319"
  },
  {
    "text": "the",
    "start": "188319",
    "end": "188959"
  },
  {
    "text": "aws iot console where i can check to",
    "start": "188959",
    "end": "192879"
  },
  {
    "text": "make sure that i'm actually receiving",
    "start": "192879",
    "end": "194319"
  },
  {
    "text": "the messages",
    "start": "194319",
    "end": "199840"
  },
  {
    "text": "here i'm going to subscribe to the topic",
    "start": "201440",
    "end": "203680"
  },
  {
    "text": "that i'm publishing to",
    "start": "203680",
    "end": "205280"
  },
  {
    "text": "in this case i have a topic structure",
    "start": "205280",
    "end": "209040"
  },
  {
    "text": "that looks like this",
    "start": "209040",
    "end": "210319"
  },
  {
    "text": "and i'm going to use a wildcard at the",
    "start": "210319",
    "end": "211920"
  },
  {
    "text": "end",
    "start": "211920",
    "end": "213360"
  },
  {
    "text": "so that i can subscribe to any device",
    "start": "213360",
    "end": "215599"
  },
  {
    "text": "messages that come in",
    "start": "215599",
    "end": "217200"
  },
  {
    "text": "on one subtopic level lower than",
    "start": "217200",
    "end": "220879"
  },
  {
    "text": "the given topic structure that you see",
    "start": "220879",
    "end": "222560"
  },
  {
    "text": "here go ahead and click on subscribe to",
    "start": "222560",
    "end": "224840"
  },
  {
    "text": "topic",
    "start": "224840",
    "end": "227680"
  },
  {
    "text": "now you can see that the messages are",
    "start": "227680",
    "end": "229200"
  },
  {
    "text": "flowing through on this expected topic",
    "start": "229200",
    "end": "231280"
  },
  {
    "text": "structure",
    "start": "231280",
    "end": "233760"
  },
  {
    "text": "now that we've confirmed that our data",
    "start": "235439",
    "end": "237120"
  },
  {
    "text": "is flowing through",
    "start": "237120",
    "end": "239200"
  },
  {
    "text": "the aws iot test console we're going to",
    "start": "239200",
    "end": "241920"
  },
  {
    "text": "go ahead and go back",
    "start": "241920",
    "end": "243200"
  },
  {
    "text": "into the act portion of the aws iot",
    "start": "243200",
    "end": "246239"
  },
  {
    "text": "console",
    "start": "246239",
    "end": "247120"
  },
  {
    "text": "where we'll create a rule",
    "start": "247120",
    "end": "250239"
  },
  {
    "text": "note that you cannot use any spaces in",
    "start": "252080",
    "end": "254799"
  },
  {
    "text": "the name of the rule but we can use",
    "start": "254799",
    "end": "256479"
  },
  {
    "text": "underscore",
    "start": "256479",
    "end": "257840"
  },
  {
    "text": "for the purposes of this demo we're",
    "start": "257840",
    "end": "259600"
  },
  {
    "text": "going to go ahead and use",
    "start": "259600",
    "end": "261519"
  },
  {
    "text": "demo underscore rule as the name",
    "start": "261519",
    "end": "264960"
  },
  {
    "text": "for the rule query statement we're going",
    "start": "264960",
    "end": "267120"
  },
  {
    "text": "to go ahead and leave",
    "start": "267120",
    "end": "268000"
  },
  {
    "text": "the selected sql version to the default",
    "start": "268000",
    "end": "271919"
  },
  {
    "text": "you can learn more about the values here",
    "start": "271919",
    "end": "274560"
  },
  {
    "text": "in the aws iot core documentation",
    "start": "274560",
    "end": "278080"
  },
  {
    "text": "next you'll see a text area where you",
    "start": "278080",
    "end": "280080"
  },
  {
    "text": "can write your sql like",
    "start": "280080",
    "end": "282000"
  },
  {
    "text": "statements to query incoming messages",
    "start": "282000",
    "end": "285440"
  },
  {
    "text": "from your mqtt topics there's a helpful",
    "start": "285440",
    "end": "288560"
  },
  {
    "text": "link right above the box to see",
    "start": "288560",
    "end": "290320"
  },
  {
    "text": "what sql statements are supported today",
    "start": "290320",
    "end": "293919"
  },
  {
    "text": "we're going to start by selecting the",
    "start": "293919",
    "end": "296240"
  },
  {
    "text": "same mqtt",
    "start": "296240",
    "end": "297440"
  },
  {
    "text": "topic that we used in the test console",
    "start": "297440",
    "end": "299840"
  },
  {
    "text": "to subscribe to our messages",
    "start": "299840",
    "end": "303280"
  },
  {
    "text": "in this case the rules engine also",
    "start": "304080",
    "end": "306160"
  },
  {
    "text": "supports wild cards",
    "start": "306160",
    "end": "311360"
  },
  {
    "text": "next we can select which actions to use",
    "start": "311360",
    "end": "314960"
  },
  {
    "text": "when our query criteria are met to route",
    "start": "314960",
    "end": "318240"
  },
  {
    "text": "message data to other aws services",
    "start": "318240",
    "end": "321600"
  },
  {
    "text": "as i mentioned earlier",
    "start": "321600",
    "end": "325840"
  },
  {
    "text": "you can see all the different actions",
    "start": "327039",
    "end": "329120"
  },
  {
    "text": "you can take across",
    "start": "329120",
    "end": "330240"
  },
  {
    "text": "aws services such as inserting the",
    "start": "330240",
    "end": "332880"
  },
  {
    "text": "message into a dynamodb table",
    "start": "332880",
    "end": "336400"
  },
  {
    "text": "sending a message to an amazon kinesis",
    "start": "336400",
    "end": "338639"
  },
  {
    "text": "data stream",
    "start": "338639",
    "end": "340240"
  },
  {
    "text": "or sending the data along to a lambda",
    "start": "340240",
    "end": "342560"
  },
  {
    "text": "function",
    "start": "342560",
    "end": "343360"
  },
  {
    "text": "for more advanced and flexible data",
    "start": "343360",
    "end": "345680"
  },
  {
    "text": "processing",
    "start": "345680",
    "end": "347280"
  },
  {
    "text": "in our use case we're going to imagine",
    "start": "347280",
    "end": "349759"
  },
  {
    "text": "that we have thermostats",
    "start": "349759",
    "end": "351280"
  },
  {
    "text": "that are running in a restaurant freezer",
    "start": "351280",
    "end": "353840"
  },
  {
    "text": "environment",
    "start": "353840",
    "end": "355440"
  },
  {
    "text": "and we want to send a notification to",
    "start": "355440",
    "end": "358400"
  },
  {
    "text": "the restaurant manager",
    "start": "358400",
    "end": "359680"
  },
  {
    "text": "and the restaurant owner if the freezer",
    "start": "359680",
    "end": "362319"
  },
  {
    "text": "temperature",
    "start": "362319",
    "end": "362960"
  },
  {
    "text": "goes above freezing in degrees",
    "start": "362960",
    "end": "364840"
  },
  {
    "text": "fahrenheit",
    "start": "364840",
    "end": "366000"
  },
  {
    "text": "in events where maybe the freezer door",
    "start": "366000",
    "end": "367919"
  },
  {
    "text": "was accidentally left open",
    "start": "367919",
    "end": "369840"
  },
  {
    "text": "or the freezer just malfunctioned so",
    "start": "369840",
    "end": "373360"
  },
  {
    "text": "we're going to go ahead and select send",
    "start": "373360",
    "end": "374960"
  },
  {
    "text": "a message to an sns",
    "start": "374960",
    "end": "376639"
  },
  {
    "text": "push notification to allow a text",
    "start": "376639",
    "end": "379360"
  },
  {
    "text": "message to be sent",
    "start": "379360",
    "end": "380479"
  },
  {
    "text": "to recipients that are interested in",
    "start": "380479",
    "end": "382319"
  },
  {
    "text": "receiving this event",
    "start": "382319",
    "end": "385199"
  },
  {
    "text": "next we'll need to either create or",
    "start": "390400",
    "end": "392960"
  },
  {
    "text": "select",
    "start": "392960",
    "end": "393680"
  },
  {
    "text": "an existing snx topic in this case",
    "start": "393680",
    "end": "397280"
  },
  {
    "text": "i've already pre-created an sns topic",
    "start": "397280",
    "end": "400560"
  },
  {
    "text": "which i'll use for this demo however",
    "start": "400560",
    "end": "404319"
  },
  {
    "text": "the console has the ability to help you",
    "start": "404319",
    "end": "406319"
  },
  {
    "text": "create an sns topic for targeting here",
    "start": "406319",
    "end": "410720"
  },
  {
    "text": "for the message format it supports two",
    "start": "410720",
    "end": "412960"
  },
  {
    "text": "options raw",
    "start": "412960",
    "end": "414160"
  },
  {
    "text": "or json",
    "start": "414160",
    "end": "416880"
  },
  {
    "text": "next you'll also need to select the role",
    "start": "417680",
    "end": "421520"
  },
  {
    "text": "that you're going to grant aws iot",
    "start": "421520",
    "end": "425199"
  },
  {
    "text": "access to perform this action this is an",
    "start": "425199",
    "end": "428160"
  },
  {
    "text": "im role",
    "start": "428160",
    "end": "429199"
  },
  {
    "text": "that allows aws iot core to access",
    "start": "429199",
    "end": "432240"
  },
  {
    "text": "the sns service on your behalf",
    "start": "432240",
    "end": "435520"
  },
  {
    "text": "you can either create the role or select",
    "start": "435520",
    "end": "437360"
  },
  {
    "text": "an existing role",
    "start": "437360",
    "end": "440319"
  },
  {
    "text": "and go ahead and click create action",
    "start": "443599",
    "end": "446720"
  },
  {
    "text": "now it's actually best practice to also",
    "start": "446720",
    "end": "449280"
  },
  {
    "text": "create",
    "start": "449280",
    "end": "449759"
  },
  {
    "text": "a corresponding error action that would",
    "start": "449759",
    "end": "452479"
  },
  {
    "text": "be executed in case something goes wrong",
    "start": "452479",
    "end": "455360"
  },
  {
    "text": "with processing the rule however we're",
    "start": "455360",
    "end": "458000"
  },
  {
    "text": "not going to configure that as part of",
    "start": "458000",
    "end": "459520"
  },
  {
    "text": "this demo",
    "start": "459520",
    "end": "460479"
  },
  {
    "text": "for more information on that please see",
    "start": "460479",
    "end": "462400"
  },
  {
    "text": "the aws iot core documentation",
    "start": "462400",
    "end": "466720"
  },
  {
    "text": "and one last thing before we're finished",
    "start": "469120",
    "end": "471199"
  },
  {
    "text": "we're going to go back to our rules",
    "start": "471199",
    "end": "472639"
  },
  {
    "text": "query statement",
    "start": "472639",
    "end": "474479"
  },
  {
    "text": "we actually only want to send an sns",
    "start": "474479",
    "end": "476840"
  },
  {
    "text": "notification",
    "start": "476840",
    "end": "478080"
  },
  {
    "text": "if the temperature is in fact over our",
    "start": "478080",
    "end": "480560"
  },
  {
    "text": "desired temperature",
    "start": "480560",
    "end": "482160"
  },
  {
    "text": "so i will edit our sql statement adding",
    "start": "482160",
    "end": "485599"
  },
  {
    "text": "our filter",
    "start": "485599",
    "end": "486479"
  },
  {
    "text": "in the rule statement adding the where",
    "start": "486479",
    "end": "489120"
  },
  {
    "text": "clause",
    "start": "489120",
    "end": "490479"
  },
  {
    "text": "and a measurement evaluation where the",
    "start": "490479",
    "end": "493360"
  },
  {
    "text": "temperature",
    "start": "493360",
    "end": "494240"
  },
  {
    "text": "is greater than 31 degrees fahrenheit",
    "start": "494240",
    "end": "498479"
  },
  {
    "text": "finally go ahead and click create rule",
    "start": "498800",
    "end": "502800"
  },
  {
    "text": "now at this point if i select the rule",
    "start": "505120",
    "end": "508319"
  },
  {
    "text": "you can see that it's enabled and it",
    "start": "508319",
    "end": "510720"
  },
  {
    "text": "should be processing",
    "start": "510720",
    "end": "512000"
  },
  {
    "text": "any data that is coming in to our",
    "start": "512000",
    "end": "514080"
  },
  {
    "text": "desired topics",
    "start": "514080",
    "end": "515839"
  },
  {
    "text": "based on the sql query",
    "start": "515839",
    "end": "519360"
  },
  {
    "text": "and sending a message out via simple",
    "start": "519360",
    "end": "521919"
  },
  {
    "text": "notification service",
    "start": "521919",
    "end": "523518"
  },
  {
    "text": "for any messages that meet our criteria",
    "start": "523519",
    "end": "526240"
  },
  {
    "text": "say",
    "start": "526240",
    "end": "526800"
  },
  {
    "text": "if the sensor reads 33 degrees",
    "start": "526800",
    "end": "528720"
  },
  {
    "text": "fahrenheit",
    "start": "528720",
    "end": "531279"
  },
  {
    "text": "so in this video we walked through rules",
    "start": "531519",
    "end": "534560"
  },
  {
    "text": "engine",
    "start": "534560",
    "end": "535279"
  },
  {
    "text": "and set up a rule based on incoming",
    "start": "535279",
    "end": "537279"
  },
  {
    "text": "messages on our temperature topic",
    "start": "537279",
    "end": "540240"
  },
  {
    "text": "and then we added a filter via our",
    "start": "540240",
    "end": "542399"
  },
  {
    "text": "sql-like query",
    "start": "542399",
    "end": "543839"
  },
  {
    "text": "to only apply the rule if the message",
    "start": "543839",
    "end": "546560"
  },
  {
    "text": "exceeded our threshold of 31 degrees",
    "start": "546560",
    "end": "548640"
  },
  {
    "text": "fahrenheit",
    "start": "548640",
    "end": "550160"
  },
  {
    "text": "finally we set up an action to trigger a",
    "start": "550160",
    "end": "552240"
  },
  {
    "text": "push notification",
    "start": "552240",
    "end": "553839"
  },
  {
    "text": "via simple notification service to",
    "start": "553839",
    "end": "556320"
  },
  {
    "text": "notify",
    "start": "556320",
    "end": "557440"
  },
  {
    "text": "any interested parties that this",
    "start": "557440",
    "end": "559839"
  },
  {
    "text": "criteria has been met",
    "start": "559839",
    "end": "563839"
  }
]