[
  {
    "start": "0",
    "end": "35000"
  },
  {
    "text": "hi everybody I'm Chris Bergen business development manager for Amazon Connect I'm joined today by Robert Killary lead",
    "start": "800",
    "end": "8670"
  },
  {
    "text": "product manager for Amazon connecting Joe Sullivan principal engineer for Amazon Connect today we're going to talk",
    "start": "8670",
    "end": "15299"
  },
  {
    "text": "about IOT and Amazon Connect first I'd",
    "start": "15299",
    "end": "20310"
  },
  {
    "text": "like to have you look at this and think for a second the problems we're going to",
    "start": "20310",
    "end": "30179"
  },
  {
    "text": "focus on today is is around improving customer service take a typical customer",
    "start": "30179",
    "end": "36780"
  },
  {
    "start": "35000",
    "end": "86000"
  },
  {
    "text": "service experience every one of us here has has has called in to a contact",
    "start": "36780",
    "end": "42780"
  },
  {
    "text": "center service before to try and get service on something that's broken how",
    "start": "42780",
    "end": "47850"
  },
  {
    "text": "many people I guess I should start before I jump into this how many people are already familiar with Amazon Connect",
    "start": "47850",
    "end": "54739"
  },
  {
    "text": "fantastic how many people are like 200",
    "start": "54739",
    "end": "60120"
  },
  {
    "text": "level IOT okay that helps a lot thank you very much",
    "start": "60120",
    "end": "65820"
  },
  {
    "text": "so in a typical customer service experience let's imagine a water heater and your water heater is broke you're at",
    "start": "65820",
    "end": "74640"
  },
  {
    "text": "work you've come home at the end of the day there's water in your basement super",
    "start": "74640",
    "end": "80340"
  },
  {
    "text": "frustrating problem you have to find a water heater company call them and then",
    "start": "80340",
    "end": "85890"
  },
  {
    "text": "you get an experience where you hit the call center oftentimes the the call",
    "start": "85890",
    "end": "92729"
  },
  {
    "start": "86000",
    "end": "124000"
  },
  {
    "text": "center offers you a number of choices I mean you choose support and it offers",
    "start": "92729",
    "end": "98340"
  },
  {
    "text": "and it requests more information what type of support what's your device eventually you get to",
    "start": "98340",
    "end": "105149"
  },
  {
    "text": "an agent when you get to that agent what's your experience typically like",
    "start": "105149",
    "end": "110880"
  },
  {
    "text": "now that you've given all that information Who am I speaking with what",
    "start": "110880",
    "end": "118079"
  },
  {
    "text": "kind of problem are you having and what is the device that your serial number for your device that's super frustrating",
    "start": "118079",
    "end": "126110"
  },
  {
    "start": "124000",
    "end": "145000"
  },
  {
    "text": "we've released Amazon Kinect in March 28th which 90% of the room already knows about which is great",
    "start": "126110",
    "end": "133120"
  },
  {
    "text": "specifically to solve these types of problems to make that scenario better but today we're going to talk about not just Amazon connect but Amazon connect",
    "start": "133120",
    "end": "140150"
  },
  {
    "text": "layered with IOT and how those two services together can improve this experience Amazon Connect is you know",
    "start": "140150",
    "end": "150020"
  },
  {
    "start": "145000",
    "end": "174000"
  },
  {
    "text": "that though the pieces of the solution that help make this possible within",
    "start": "150020",
    "end": "155210"
  },
  {
    "text": "Amazon Connect are the contact flows the contact flows are where we can create",
    "start": "155210",
    "end": "160310"
  },
  {
    "text": "the personal experience and we can embed both lambda and Lex as a as a way to",
    "start": "160310",
    "end": "167990"
  },
  {
    "text": "integrate with back-end systems and Lex to create a natural experience another",
    "start": "167990",
    "end": "175430"
  },
  {
    "text": "key contributor to improving this experience is being able to have an open",
    "start": "175430",
    "end": "180470"
  },
  {
    "text": "system in this diagram how many people have seen this diagram before okay",
    "start": "180470",
    "end": "186620"
  },
  {
    "text": "couple so I'll walk through it in the middle you've got Amazon connect and on",
    "start": "186620",
    "end": "192860"
  },
  {
    "text": "the right we fund the Amazon connect the application but this is showing how you can get information you can integrate",
    "start": "192860",
    "end": "199459"
  },
  {
    "text": "with the solution outside the application first on the right you'll",
    "start": "199459",
    "end": "204500"
  },
  {
    "text": "see that call recordings metrics and agent data can all be sent outside the",
    "start": "204500",
    "end": "211010"
  },
  {
    "text": "system to AWS services and other services top right all your call recordings are stored in in s3 you can",
    "start": "211010",
    "end": "220670"
  },
  {
    "text": "choose a bucket or Amazon connect will create one for you when you launch your application in the bottom right you can",
    "start": "220670",
    "end": "228650"
  },
  {
    "text": "use Kinesis to stream contacts enter data to our to your data warehouse it",
    "start": "228650",
    "end": "234830"
  },
  {
    "text": "could be an AWS service like redshift or it could be a third party data warehouse of your choice and oftentimes contact",
    "start": "234830",
    "end": "241790"
  },
  {
    "text": "centers have a tool like workforce management to help effectively schedule",
    "start": "241790",
    "end": "247000"
  },
  {
    "text": "agents and make sure that you have the right amount of staff to handle the call volumes that are the the call arrival",
    "start": "247000",
    "end": "253160"
  },
  {
    "text": "patterns that occur throughout a day so we can stream data to that workforce management system so you can make more",
    "start": "253160",
    "end": "259489"
  },
  {
    "text": "informed decisions and better staff your contact center on the lower left there's the integration with the",
    "start": "259489",
    "end": "266750"
  },
  {
    "text": "at the agent level the agent in a contact center has a in with Amazon Connect they have a soft phone",
    "start": "266750",
    "end": "272540"
  },
  {
    "text": "capability we call that our contact control panel and we offer the telephony",
    "start": "272540",
    "end": "278830"
  },
  {
    "text": "functionality that an agent needs in that contact control panel such as answer a call make themselves available",
    "start": "278830",
    "end": "285820"
  },
  {
    "text": "change their state so that they can go on break but we also have the ability or",
    "start": "285820",
    "end": "291970"
  },
  {
    "text": "those capabilities oftentimes you want that in the same application that the",
    "start": "291970",
    "end": "298280"
  },
  {
    "text": "agents using to identify the customer going back to our use case the agent now",
    "start": "298280",
    "end": "303680"
  },
  {
    "text": "has to ask the information or we've all experienced they ask for this information even though you gave it in",
    "start": "303680",
    "end": "308990"
  },
  {
    "text": "the automated system you asked for it they're looking you up in a CRM or some application so that they can get more",
    "start": "308990",
    "end": "314630"
  },
  {
    "text": "information about you so we believe that many customers will want to put that contact control panel in the application",
    "start": "314630",
    "end": "321770"
  },
  {
    "text": "that the agents are using where the customer information is stored so we have an API available for that you can",
    "start": "321770",
    "end": "327410"
  },
  {
    "text": "embed the contact control panel we also have out-of-the-box integrations for popular applications like CRM such as",
    "start": "327410",
    "end": "335330"
  },
  {
    "text": "Salesforce and a soho but you can easily create an integration with your custom",
    "start": "335330",
    "end": "341960"
  },
  {
    "text": "applications we also leverage lamda I talked a little bit about the creating a",
    "start": "341960",
    "end": "348020"
  },
  {
    "text": "personalized experience but in the top left what really enables that is lambda and we embed lambda in a contact flow",
    "start": "348020",
    "end": "355250"
  },
  {
    "text": "and for those that that that don't know that term contact flow think of it like",
    "start": "355250",
    "end": "360560"
  },
  {
    "text": "an IVR our application except it can do more it allows you to create a there's a",
    "start": "360560",
    "end": "365720"
  },
  {
    "text": "canvas which Joe will be sewing a little bit later in a demonstration there's a canvas where you can drag actions onto",
    "start": "365720",
    "end": "372950"
  },
  {
    "text": "the canvas and control the customer experience one of those actions that you can drag onto the canvas is to trigger a",
    "start": "372950",
    "end": "380090"
  },
  {
    "text": "lambda function that lambda function can look into an application like CRM or",
    "start": "380090",
    "end": "385250"
  },
  {
    "text": "business intelligence or data warehouse and it can get information about that caller and then not only can you route",
    "start": "385250",
    "end": "391580"
  },
  {
    "text": "the caller specifically based on that information but you can also create a",
    "start": "391580",
    "end": "397640"
  },
  {
    "text": "customized experience for them this is the key to leveraging IOT as",
    "start": "397640",
    "end": "402920"
  },
  {
    "text": "well so it's important we understand this fundamentally open sorry I went backwards okay so now we're thinking",
    "start": "402920",
    "end": "412160"
  },
  {
    "start": "408000",
    "end": "468000"
  },
  {
    "text": "about that problem and how can we leverage IOT in this experience how can we combine an IOT and connect and make",
    "start": "412160",
    "end": "417740"
  },
  {
    "text": "this experience better first you've got connected devices out in the world okay",
    "start": "417740",
    "end": "423590"
  },
  {
    "text": "and if we can make those devices connected there could send information but cloud but connected is only one",
    "start": "423590",
    "end": "429140"
  },
  {
    "text": "piece of the puzzle the second piece of the puzzle is coordinated and well that's what we're really excited about",
    "start": "429140",
    "end": "435140"
  },
  {
    "text": "at AWS is the idea of sending information to the cloud from the device such as how it's performing and then",
    "start": "435140",
    "end": "443120"
  },
  {
    "text": "marrying looking at that data with your customer data to understand where that device is what was that person's last",
    "start": "443120",
    "end": "450020"
  },
  {
    "text": "interaction with that device have they called before has is this device are we seeing signs that this device is failing",
    "start": "450020",
    "end": "456470"
  },
  {
    "text": "just based on the amount of times they've called in and the information that it's sending so we get that information and we coordinate it and now",
    "start": "456470",
    "end": "462919"
  },
  {
    "text": "we can make decisions and execute decisions within Amazon connect so IOT",
    "start": "462919",
    "end": "469970"
  },
  {
    "start": "468000",
    "end": "505000"
  },
  {
    "text": "this is a visual representative representation of the services that AWS offers with IOT the key to this slide is",
    "start": "469970",
    "end": "478760"
  },
  {
    "text": "that you could see that the data from in our example the water heater is sent if",
    "start": "478760",
    "end": "484850"
  },
  {
    "text": "it was IOT enabled that data could be sent up into the cloud it could be processed through a rules engine and",
    "start": "484850",
    "end": "490760"
  },
  {
    "text": "then it can be it can trigger using aw it can trigger AWS other AWS services so",
    "start": "490760",
    "end": "498050"
  },
  {
    "text": "it can send data through Kinesis it can leverage lambda to trigger Amazon Connect and that's what we're going to",
    "start": "498050",
    "end": "503990"
  },
  {
    "text": "focus on today the impact of this if you if if somebody could put this together",
    "start": "503990",
    "end": "510320"
  },
  {
    "start": "505000",
    "end": "547000"
  },
  {
    "text": "is they complete deliver an improvement in both operational efficiency and top-line revenue and I'll explain that",
    "start": "510320",
    "end": "517130"
  },
  {
    "text": "in a minute it also can deliver better customer experience because instead of having to think about a reactive customer",
    "start": "517130",
    "end": "525260"
  },
  {
    "text": "experience where your water heater broke and now you're frustrated and now it's",
    "start": "525260",
    "end": "530540"
  },
  {
    "text": "an urgent issue for you and you have to call what could we do to make that experience proactive maybe even thinking through",
    "start": "530540",
    "end": "539750"
  },
  {
    "text": "that problem could result in a new business model what if it was water",
    "start": "539750",
    "end": "545120"
  },
  {
    "text": "heater as a service okay what if we could rent the water heater so let's",
    "start": "545120",
    "end": "556220"
  },
  {
    "start": "547000",
    "end": "663000"
  },
  {
    "text": "look at the scenario that same scenario if it if the water heater were IOT",
    "start": "556220",
    "end": "561260"
  },
  {
    "text": "enabled and we all created a new business where we were paying monthly",
    "start": "561260",
    "end": "566930"
  },
  {
    "text": "for a service or paying incrementally for a service for our water heater to ensure that that thing always runs the",
    "start": "566930",
    "end": "574310"
  },
  {
    "text": "water heater now we don't have to wait till it fails we know it's underperforming many times in a water heater there's a two heating elements",
    "start": "574310",
    "end": "580700"
  },
  {
    "text": "one on the top one on the bottom you might not know when your top heating element goes out to you you take a three",
    "start": "580700",
    "end": "586610"
  },
  {
    "text": "minute shower the water was hot everything is fine but the heat but one heating element is out that information",
    "start": "586610",
    "end": "592520"
  },
  {
    "text": "the temperature can be monitored in the tank information could be sent to the cloud we notice a fluctuation in that",
    "start": "592520",
    "end": "600200"
  },
  {
    "text": "temperature trigger an event and contact the customer now when we contact that",
    "start": "600200",
    "end": "606980"
  },
  {
    "text": "customer what's their experience going to be it depends on what they'd like they might prefer based on the if it's",
    "start": "606980",
    "end": "613430"
  },
  {
    "text": "one potentially a heating element is out that might not be as critical as water leaking on the basement floor so we",
    "start": "613430",
    "end": "619820"
  },
  {
    "text": "might send a text notification and say hey there's something we'd like we're recognizing with your water heater we'd",
    "start": "619820",
    "end": "626690"
  },
  {
    "text": "like to get out you could have a virtual agent you could offer them the ability to schedule an appointment and have a",
    "start": "626690",
    "end": "632150"
  },
  {
    "text": "virtual agent do that is everybody familiar with the concept of a virtual agent okay Amazon Lex is the service",
    "start": "632150",
    "end": "639530"
  },
  {
    "text": "that we use to create those virtual agent or chat bot scenarios enabled by voice and then of course you could if",
    "start": "639530",
    "end": "646940"
  },
  {
    "text": "it's is an urgent matter they might want the they won't even want to receive a call handled by a live agent somebody",
    "start": "646940",
    "end": "652550"
  },
  {
    "text": "that can help them right away so now the experience is this this",
    "start": "652550",
    "end": "657680"
  },
  {
    "text": "customer gets this experience as opposed to having to make a call in",
    "start": "657680",
    "end": "662770"
  },
  {
    "start": "663000",
    "end": "703000"
  },
  {
    "text": "so let's talk about the pieces of the puzzle that we're using here first to",
    "start": "663630",
    "end": "669100"
  },
  {
    "text": "enable this we have the water heater it's sending data to the AWS cloud and",
    "start": "669100",
    "end": "674860"
  },
  {
    "text": "the using IOT and in the IOT the rules engine is processing that information",
    "start": "674860",
    "end": "679930"
  },
  {
    "text": "and triggering a lambda function lambda is looking into the customer data into CRM to understand more about that",
    "start": "679930",
    "end": "686500"
  },
  {
    "text": "customer where they are what their preference for contact is do they want to be called do they want do we have",
    "start": "686500",
    "end": "692290"
  },
  {
    "text": "their tech do we have their cell phone number can we text them and then we're using Amazon connect and pin point as",
    "start": "692290",
    "end": "699579"
  },
  {
    "text": "the communication method out to the customer we're at this point we're gonna",
    "start": "699579",
    "end": "706660"
  },
  {
    "start": "703000",
    "end": "880000"
  },
  {
    "text": "walk you the rest of the way through demos an architectural overview and then",
    "start": "706660",
    "end": "711730"
  },
  {
    "text": "we're going to go into each service and show you how we built these demos I'm gonna hand it over to Jill thanks Chris",
    "start": "711730",
    "end": "720029"
  },
  {
    "text": "so in the in the first scenario it's this is the thanks face this is the",
    "start": "720029",
    "end": "726699"
  },
  {
    "text": "urgent scenario of water leaking on your floor so you come home there's water all over the place this is this is what we",
    "start": "726699",
    "end": "732639"
  },
  {
    "text": "think of as an urgent outreach something went wrong you needed immediate attention and so we're gonna use Amazon",
    "start": "732639",
    "end": "738160"
  },
  {
    "text": "connect for that so to simulate the water heater scenario we're going to use a AWS IOT button and so if I click the",
    "start": "738160",
    "end": "745990"
  },
  {
    "text": "button",
    "start": "745990",
    "end": "748019"
  },
  {
    "text": "[Music]",
    "start": "764660",
    "end": "767759"
  },
  {
    "text": "sorry our Wi-Fi is not quite working",
    "start": "773300",
    "end": "777880"
  },
  {
    "text": "okay so they click the button my my phone rings we're using Amazon connect and the the new outbound API to call out",
    "start": "786980",
    "end": "793010"
  },
  {
    "text": "to the customer hi Nicki wolf this is acne plumbing a water leak has",
    "start": "793010",
    "end": "798200"
  },
  {
    "text": "been detected in your home would you like us to send a plumber to your home right away we are sending a plumber to",
    "start": "798200",
    "end": "807290"
  },
  {
    "text": "your home now we will give him or her this number to contact you when he reached your home so it's a that's a",
    "start": "807290",
    "end": "813950"
  },
  {
    "text": "fairly simplistic scenario we we used the outbound API we called out to the customer what was interesting there is it was personalized we we knew who you",
    "start": "813950",
    "end": "820340"
  },
  {
    "text": "were we recognized you we greeted you and we we gave you the option of speaking to an agent or dispatching a",
    "start": "820340",
    "end": "826640"
  },
  {
    "text": "technician right away to fix the problem so that was put together with Amazon poly for text-to-speech in the India",
    "start": "826640",
    "end": "833300"
  },
  {
    "text": "contact flow as well as Amazon Lex for handling that natural language voice pod experience and so the the second example",
    "start": "833300",
    "end": "840470"
  },
  {
    "text": "we're going to show is the the mobile",
    "start": "840470",
    "end": "846230"
  },
  {
    "text": "notification via Amazon pinpoint so very very similar scenario do you have the",
    "start": "846230",
    "end": "852950"
  },
  {
    "text": "button so in this world you'll see we",
    "start": "852950",
    "end": "859220"
  },
  {
    "text": "send an SMS to your to your phone we notify you that we've detected an issue with your water heater we give the give",
    "start": "859220",
    "end": "864860"
  },
  {
    "text": "you the option to schedule an appointment at your convenience using Amazon pinpoint you you could build more",
    "start": "864860",
    "end": "870440"
  },
  {
    "text": "of a conversational interface if you wanted to reply via SMS you could also use push notifications on a mobile",
    "start": "870440",
    "end": "876260"
  },
  {
    "text": "device if you didn't want if you want to integrate it more with your mobile application so you can see if I if I",
    "start": "876260",
    "end": "881750"
  },
  {
    "start": "880000",
    "end": "933000"
  },
  {
    "text": "click on this link I'm given the option to schedule a callback I could pick a time and a date I could click call me it",
    "start": "881750",
    "end": "888590"
  },
  {
    "text": "already knows who I am it knows all the data associated with my account so at the point of picking up",
    "start": "888590",
    "end": "893600"
  },
  {
    "text": "the phone once more hi Nikki will this",
    "start": "893600",
    "end": "900230"
  },
  {
    "text": "is the scheduled call you requested about your water heater we are connecting you with the technician who",
    "start": "900230",
    "end": "905330"
  },
  {
    "text": "can help you troubleshoot the issue thank you for calling your calling so same similar experience we know we know",
    "start": "905330",
    "end": "912950"
  },
  {
    "text": "who you are you're able to request a callback you're able by when you'd like us to call you out of convenient time and were able to connect you with the",
    "start": "912950",
    "end": "919190"
  },
  {
    "text": "technician to figure on how to resolve the issue so now we're gonna walk through how we how we",
    "start": "919190",
    "end": "924440"
  },
  {
    "text": "actually built this so starting in the",
    "start": "924440",
    "end": "931130"
  },
  {
    "text": "AWS console we have AWS IOT and so in this example we we don't have a water",
    "start": "931130",
    "end": "937280"
  },
  {
    "start": "933000",
    "end": "1262000"
  },
  {
    "text": "heater we have an IOT button and so we've registered a couple of IOT buttons in our account and each button has",
    "start": "937280",
    "end": "943790"
  },
  {
    "text": "associated with it a device serial number so a unique a unique identifier with associated with the device in the",
    "start": "943790",
    "end": "949580"
  },
  {
    "text": "IOT service you can associate arbitrary metadata with with these devices so if",
    "start": "949580",
    "end": "955430"
  },
  {
    "text": "you want to tack on data about about these devices what they represent who they represent you can do that in IOT",
    "start": "955430",
    "end": "961630"
  },
  {
    "text": "you're also able to write write rules in the IOT system to configure when when",
    "start": "961630",
    "end": "968030"
  },
  {
    "text": "actions get invoked and so we have a fairly simple rule in our world where we",
    "start": "968030",
    "end": "973760"
  },
  {
    "text": "essentially just invoke a a lambda function so we have a trigger it says that anytime sorry let me pull up my",
    "start": "973760",
    "end": "982040"
  },
  {
    "text": "lambda function anytime the IOT button is pressed we have this trigger that",
    "start": "982040",
    "end": "988790"
  },
  {
    "text": "says anytime one of my buttons is pressed then invoke this lambda function and well well dive into this lambda",
    "start": "988790",
    "end": "994130"
  },
  {
    "text": "function and what it's actually doing",
    "start": "994130",
    "end": "997900"
  },
  {
    "text": "so I press I pressed my button I get a payload here that tells me what serial",
    "start": "1001240",
    "end": "1006429"
  },
  {
    "text": "number was pressed and what type of click it was and so we're using this in our example to discern between inert",
    "start": "1006429",
    "end": "1013540"
  },
  {
    "text": "sand scenario and an anode and scenario so the immediate callback versus the the push notification and that the first",
    "start": "1013540",
    "end": "1020529"
  },
  {
    "text": "thing we do is we we load data from dynamodb and so we're storing all of our customer data within Amazon DynamoDB",
    "start": "1020529",
    "end": "1026409"
  },
  {
    "text": "which is a non relational database product that we have so you're able to",
    "start": "1026409",
    "end": "1032760"
  },
  {
    "text": "store data associated with items you're able to retrieve this data highly scalable very fast and so we load this",
    "start": "1032760",
    "end": "1040029"
  },
  {
    "text": "data out of our table based on the device serial number that you saw before in the IOT service and once we get the",
    "start": "1040029",
    "end": "1046959"
  },
  {
    "text": "the item back we decide what to do with it so if this is an urgent event then we",
    "start": "1046959",
    "end": "1052870"
  },
  {
    "text": "use the Amazon Connect outbound API to place a call back immediately and so this is an API that we released a week",
    "start": "1052870",
    "end": "1059380"
  },
  {
    "text": "or two back it's in the preview mode right now so you could request access to it and so the Amazon Connect alpha API",
    "start": "1059380",
    "end": "1065140"
  },
  {
    "text": "allows you to trigger a call out to a phone number and to run a contact flow once once the user picks up the phone so",
    "start": "1065140",
    "end": "1072190"
  },
  {
    "text": "you could think of it as an agent playing an outbound call placing an outbound call but there's there's no agent in the loop yet so anything that",
    "start": "1072190",
    "end": "1078730"
  },
  {
    "text": "you can do in a context low in terms of invoking luck spots building customer custom and personalized experiences with",
    "start": "1078730",
    "end": "1085210"
  },
  {
    "text": "Pali you can continue to do in these contact flows once once your customer picks up so the full power of Amazon",
    "start": "1085210",
    "end": "1090760"
  },
  {
    "text": "Connect for outbound calls and so we we call the phone number associated with this registration so this is data that",
    "start": "1090760",
    "end": "1097330"
  },
  {
    "text": "we got back from dynamodb we tell em as unconnect what contact flow to run so",
    "start": "1097330",
    "end": "1103380"
  },
  {
    "text": "this is really like Chris said defining the full customer experience and the full customer journey and how you want",
    "start": "1103380",
    "end": "1108460"
  },
  {
    "text": "to handle that customer and you tell what Amazon connected instance you should do this in the context of so you",
    "start": "1108460",
    "end": "1114279"
  },
  {
    "text": "could think of an instance as a virtual contact center many companies will have an instance per department or per line",
    "start": "1114279",
    "end": "1120789"
  },
  {
    "text": "of business they might have instances dedicated to development or production workloads and so you're also able to",
    "start": "1120789",
    "end": "1129520"
  },
  {
    "text": "associate attributes with with the contact and Amazon connect and so these are these are key value pairs",
    "start": "1129520",
    "end": "1135040"
  },
  {
    "text": "is any data that you want to pass in town was on connect and it can be leveraged within Amazon connecting the contact flow and it could also be",
    "start": "1135040",
    "end": "1142030"
  },
  {
    "text": "leveraged by other services that Amazon Connect integrates with so if you call a lambda function if you invoke a Lex bot",
    "start": "1142030",
    "end": "1147760"
  },
  {
    "text": "you could you could pass all of this data down so that you know what to do with this this contact based on the data all of these attributes will also be",
    "start": "1147760",
    "end": "1154720"
  },
  {
    "text": "persisted on the contact tracer is our historical record of the contact and",
    "start": "1154720",
    "end": "1160150"
  },
  {
    "text": "what happened so you can get that out to a data warehouse you could run custom analytics on top of it and it'll further",
    "start": "1160150",
    "end": "1167380"
  },
  {
    "text": "be provided to the agent call control panel so when anything gets one of these",
    "start": "1167380",
    "end": "1172390"
  },
  {
    "text": "calls you're able to display this data you're able to suggest actions for the Aged and and really cut to the chase so that they don't have to ask over and",
    "start": "1172390",
    "end": "1179170"
  },
  {
    "text": "over again for information you already know and so you could see that if it if",
    "start": "1179170",
    "end": "1184510"
  },
  {
    "text": "it was a urgent message we'll go ahead and now that just make sure I'm one done",
    "start": "1184510",
    "end": "1192040"
  },
  {
    "text": "not every not every application requires code you don't have to use lambda to",
    "start": "1192040",
    "end": "1197980"
  },
  {
    "text": "design your entire contact center we're showing lambda functionality now but we're also going to show you how this",
    "start": "1197980",
    "end": "1203710"
  },
  {
    "text": "fits into the contact flow in Amazon Connect yep I could try browser right",
    "start": "1203710",
    "end": "1214270"
  },
  {
    "text": "control thing yep is that better okay so",
    "start": "1214270",
    "end": "1219610"
  },
  {
    "text": "you could see if it's an urgent event so if it was if the event that we deemed as urgent we call this outbound voice",
    "start": "1219610",
    "end": "1225100"
  },
  {
    "text": "contact API on Amazon connect if it's a non urgent event we we build up an SMS",
    "start": "1225100",
    "end": "1231280"
  },
  {
    "text": "message so we this was a message you saw before we say we've detected an issue with your water heater we passed you a",
    "start": "1231280",
    "end": "1238090"
  },
  {
    "text": "link to a web site and we we pass along in that link the serial number associated with your device that we",
    "start": "1238090",
    "end": "1243370"
  },
  {
    "text": "could later look you up and give you a personalized experience when you come back in and so this is using the Amazon",
    "start": "1243370",
    "end": "1249520"
  },
  {
    "text": "pinpoint API to send this send this message to the phone number associated with the device so very similar to the",
    "start": "1249520",
    "end": "1255790"
  },
  {
    "text": "Connect integration all all standard awf service api's and so past this point if",
    "start": "1255790",
    "end": "1263980"
  },
  {
    "text": "we look at what what this data in dynamo actually looks like this is a example for you in the real world you'd",
    "start": "1263980",
    "end": "1270790"
  },
  {
    "text": "probably be interfacing with an existing customer data system you have maybe a CRM application some other database that",
    "start": "1270790",
    "end": "1277390"
  },
  {
    "text": "exists at your company you're able to pull data from within lamda or within",
    "start": "1277390",
    "end": "1283000"
  },
  {
    "text": "Amazon connect and make decisions based on it so this is showing the the set of data that we're passing in to Amazon connect so first name last name as as",
    "start": "1283000",
    "end": "1291010"
  },
  {
    "text": "attributes and so the the experience like we've talked about a number of",
    "start": "1291010",
    "end": "1296170"
  },
  {
    "text": "times contact flows define the full customer experience and journey and so if we look",
    "start": "1296170",
    "end": "1301450"
  },
  {
    "text": "at this urgent issue flow you can see",
    "start": "1301450",
    "end": "1306940"
  },
  {
    "text": "the behavior of it it's it's a fairly simple flow you can build these really as complicated as you want you can nope",
    "start": "1306940",
    "end": "1313840"
  },
  {
    "text": "sorry about that it's good good okay so",
    "start": "1313840",
    "end": "1320160"
  },
  {
    "text": "you can make contact flows as complicated as your business needs really dictate you can see here the the",
    "start": "1320160",
    "end": "1326650"
  },
  {
    "text": "first thing we do is we invoke an Amazon Lex bot and so we're using the data that was passed in from our lambda function",
    "start": "1326650",
    "end": "1333070"
  },
  {
    "text": "so those attributes that we saw before from dynamo you'll see that we we referenced the first name attribute and",
    "start": "1333070",
    "end": "1338710"
  },
  {
    "text": "the last name attribute so we're greeting the caller and we're we're at that point invoking in Amazon Lex bot",
    "start": "1338710",
    "end": "1344950"
  },
  {
    "text": "we're invoking this bot called yes/no and so this is this is a very simple but you could use Amazon Lex to build full",
    "start": "1344950",
    "end": "1351400"
  },
  {
    "text": "natural language experiences full conversational voice BOTS in this example we're really just reacting to",
    "start": "1351400",
    "end": "1356620"
  },
  {
    "text": "yes or no to keep things simple and so you'll see we we spell out the bot name here and we'll look at that in a second",
    "start": "1356620",
    "end": "1362440"
  },
  {
    "text": "in our account and any parameters you want to pass to the bot you can do so",
    "start": "1362440",
    "end": "1367540"
  },
  {
    "text": "here as well so if you want to pass an attribute that was passed in such as the first name or or the device serial",
    "start": "1367540",
    "end": "1373150"
  },
  {
    "text": "number to look up data on the left side you could do that as well and just Jo just to go back while you're on the contact flow just the the general",
    "start": "1373150",
    "end": "1379810"
  },
  {
    "text": "concept of the contact flow is you drag these boxes onto the onto the canvas and if you click out of that first second Jo",
    "start": "1379810",
    "end": "1386440"
  },
  {
    "text": "you can show they the choices on the Left these choices on the Left are all the options you have to be able to",
    "start": "1386440",
    "end": "1392800"
  },
  {
    "text": "control the customer experience and drag boxes onto the canvas so we kind of jumped right to lambda because that's",
    "start": "1392800",
    "end": "1400480"
  },
  {
    "text": "where we're getting a bunch of information from the device we're to trigger the event but you can do things like drag a prompt",
    "start": "1400480",
    "end": "1406990"
  },
  {
    "text": "onto the canvas you can collect an attribute maybe you talk through some of",
    "start": "1406990",
    "end": "1412810"
  },
  {
    "text": "those Joe yep yeah absolutely so um really any any of the any of the",
    "start": "1412810",
    "end": "1417880"
  },
  {
    "text": "experience that the customer is going to have you're in full control over so playing audio changing the voice that they experience via Amazon poly changing",
    "start": "1417880",
    "end": "1425320"
  },
  {
    "text": "the the language to play audio back in changing weather calls are recorded or",
    "start": "1425320",
    "end": "1430660"
  },
  {
    "text": "not as well as being able to really react to data within the contact center environment itself so being able to know",
    "start": "1430660",
    "end": "1435670"
  },
  {
    "text": "if cues are at capacity or there aren't enough agents to handle this right now or even that you're simply out of hours",
    "start": "1435670",
    "end": "1441790"
  },
  {
    "text": "you have full control over that you can shift volume as needed based on what's happening in real time",
    "start": "1441790",
    "end": "1447070"
  },
  {
    "text": "and I think the key here is that a business user can use the boxes on the",
    "start": "1447070",
    "end": "1452440"
  },
  {
    "text": "left to control a very simple customer experience and if you can have a",
    "start": "1452440",
    "end": "1457450"
  },
  {
    "text": "developer with lambda get some information you can create a very customized very personalized experience",
    "start": "1457450",
    "end": "1463360"
  },
  {
    "text": "that's just showing you and it also gives you the ability to pre stage things in here so that you can respond",
    "start": "1463360",
    "end": "1469480"
  },
  {
    "text": "to other events you know how many times we had a scenario where weather or natural disaster affects your operations",
    "start": "1469480",
    "end": "1476320"
  },
  {
    "text": "you can build into these right here so that that can be accounted for and operations can address it without having",
    "start": "1476320",
    "end": "1482470"
  },
  {
    "text": "to reach out to technology or to the developers all right so coming back to",
    "start": "1482470",
    "end": "1489370"
  },
  {
    "text": "this example we invoke a left spot we we collect some data if the customer says yes please send a technician then we we",
    "start": "1489370",
    "end": "1496510"
  },
  {
    "text": "simply tell them that we're going to send a plumber to your home and expect to hear from us shortly you would you",
    "start": "1496510",
    "end": "1502840"
  },
  {
    "text": "would likely invoke a lambda function or similar at this point to actually request a resource like that or figure",
    "start": "1502840",
    "end": "1508570"
  },
  {
    "text": "out what scheduling information you need and so all of that is available within a contact flow and otherwise you could",
    "start": "1508570",
    "end": "1514390"
  },
  {
    "text": "route to an agent so if if the customer says no I need to talk to someone you have the ability to select a queue to",
    "start": "1514390",
    "end": "1520060"
  },
  {
    "text": "out them to transfer them down to that queue and get them serviced that way and",
    "start": "1520060",
    "end": "1526660"
  },
  {
    "text": "so stepping stepping over to Amazon lacks that that simple bot we saw before",
    "start": "1526660",
    "end": "1531860"
  },
  {
    "text": "to create a bot like this you you really just need to define your set of intents right so the the set of data that this",
    "start": "1531860",
    "end": "1538850"
  },
  {
    "text": "bot is going to end up with and so this is a simple bot the intent is either no or yes and so when you create each of",
    "start": "1538850",
    "end": "1545450"
  },
  {
    "text": "these intents you associate sample utterances and so a question yes how many people have been in Amazon Lex",
    "start": "1545450",
    "end": "1553630"
  },
  {
    "text": "fantastic great and so these these sample utterances don't they don't need",
    "start": "1553630",
    "end": "1559159"
  },
  {
    "text": "to match exactly so you're really giving samples at this point and you're you're trying to think of the the different",
    "start": "1559159",
    "end": "1565250"
  },
  {
    "text": "things that customers might say when they interact with one of these bots and if they say something that doesn't exactly match Amazon alexis is smart",
    "start": "1565250",
    "end": "1571850"
  },
  {
    "text": "enough to really build up a model and fill in the blanks if there are cases where the utterances don't match at all",
    "start": "1571850",
    "end": "1578899"
  },
  {
    "text": "you're likewise able to go into Amazon lakhs for your bot look at what it's",
    "start": "1578899",
    "end": "1584240"
  },
  {
    "text": "captured to date what hasn't matched and then go back and retrain your model to to make sure that you're really",
    "start": "1584240",
    "end": "1590299"
  },
  {
    "text": "accounting for everything that you're your customers are feeding you likewise",
    "start": "1590299",
    "end": "1595309"
  },
  {
    "text": "this this bot isn't collecting any actual data it's really just collecting an intent these Amazon Lex has the",
    "start": "1595309",
    "end": "1601130"
  },
  {
    "text": "concept of slots and so these are really pieces of data that you want the bot to collect what's your name what date will",
    "start": "1601130",
    "end": "1607909"
  },
  {
    "text": "you be home for this appointment things like that and so the bot will will collect this information from the user",
    "start": "1607909",
    "end": "1613100"
  },
  {
    "text": "fill in the slots as it goes and then all of that data will come back down as unconnect you could access it within",
    "start": "1613100",
    "end": "1618860"
  },
  {
    "text": "your contact flow you can make routing decisions based on it or you could just associate it with with your contact",
    "start": "1618860",
    "end": "1624110"
  },
  {
    "text": "trace record to further send that data through to your agent and so that that",
    "start": "1624110",
    "end": "1632899"
  },
  {
    "text": "covered the the urgent call back scenario that was that was all that was involved there and so in that world you",
    "start": "1632899",
    "end": "1640580"
  },
  {
    "text": "use the outbound API you trigger a callback you you look up some data in dynamo first pass it all along Amazon",
    "start": "1640580",
    "end": "1647750"
  },
  {
    "text": "Lex is invoked you interact with the customer a bit and then you disconnect and now we're going to go through the",
    "start": "1647750",
    "end": "1654049"
  },
  {
    "text": "non urgent yeast case and so I'm sorry in the non agent use case we send an SMS",
    "start": "1654049",
    "end": "1660470"
  },
  {
    "text": "and you see that we we passed this URL around along and all this URL is doing is its",
    "start": "1660470",
    "end": "1666250"
  },
  {
    "start": "1663000",
    "end": "1828000"
  },
  {
    "text": "collecting some data in terms of one to call and what phone number you'd like to be called back on and at that point it's",
    "start": "1666250",
    "end": "1672400"
  },
  {
    "text": "invoking an API on Amazon API gateway that we wrote that's a simple API that",
    "start": "1672400",
    "end": "1677799"
  },
  {
    "text": "really is just passing straight through to a lambda function so we're gonna look at that lambda function so there is this",
    "start": "1677799",
    "end": "1683980"
  },
  {
    "text": "place call lambda function and it's gonna look very similar to the a container yep it's gonna look very",
    "start": "1683980",
    "end": "1689200"
  },
  {
    "text": "similar to the the other one that we saw and so in this in this place call example a user on a website clicks a",
    "start": "1689200",
    "end": "1695679"
  },
  {
    "text": "button on their phone they say give me a call back tomorrow at 7:00 a.m. all of that data comes in here in terms of what",
    "start": "1695679",
    "end": "1702309"
  },
  {
    "text": "phone number to call what time to call what the device serial number is so just like before we're we're looking at our",
    "start": "1702309",
    "end": "1708309"
  },
  {
    "text": "Dynamo table and we're we're fetching the data associated with this device serial number once we once we have that",
    "start": "1708309",
    "end": "1714309"
  },
  {
    "text": "data we're able to we're able to build up this event here in terms of when this",
    "start": "1714309",
    "end": "1721210"
  },
  {
    "text": "when this call is due what phone number to place it to what contact flow to",
    "start": "1721210",
    "end": "1726399"
  },
  {
    "text": "execute when the call is placed and all of the attributes associated with it so again things like first name last name",
    "start": "1726399",
    "end": "1733270"
  },
  {
    "text": "whatever we had in our Dynamo table at that point this is a perfect spot a lot of times people concerned about security",
    "start": "1733270",
    "end": "1739720"
  },
  {
    "text": "and controlling the calls that are made with their systems in the functionality here or in the CRM you have the ability",
    "start": "1739720",
    "end": "1746799"
  },
  {
    "text": "to build in whatever controls are appropriate for your business so it may be that you don't want to present a phone number box to them but only allow",
    "start": "1746799",
    "end": "1753309"
  },
  {
    "text": "them to pick one that's on their account so the compliance security aspects that you need to build in tech both your",
    "start": "1753309",
    "end": "1758950"
  },
  {
    "text": "customers in your business this is one of the areas that you could place that in yeah and the other thing that",
    "start": "1758950",
    "end": "1764679"
  },
  {
    "text": "customers find power powerful with the outbound API is that your since you're",
    "start": "1764679",
    "end": "1770020"
  },
  {
    "text": "getting a request from a user you're invoking an API you you do know who they are you're able to authenticate them you're able to have a much higher level",
    "start": "1770020",
    "end": "1776500"
  },
  {
    "text": "of trust and if they call your phone number directly over the public telephone network and so in this world",
    "start": "1776500",
    "end": "1783220"
  },
  {
    "text": "we bundle up all this data and what we're doing is we're we're invoking a step function so this is using AWS step",
    "start": "1783220",
    "end": "1790090"
  },
  {
    "text": "function service which is a service for distributed application orchestration so",
    "start": "1790090",
    "end": "1795549"
  },
  {
    "text": "I know that's a mouthful you could think of it as being able to model really almost like a contact flow but the the workflow",
    "start": "1795549",
    "end": "1803120"
  },
  {
    "text": "associated with a piece of work being able to stitch together service calls or",
    "start": "1803120",
    "end": "1809029"
  },
  {
    "text": "tasks being able to invoke lambda functions and react to two events and so we're using step functions in this case",
    "start": "1809029",
    "end": "1815360"
  },
  {
    "text": "in order to to delay the call so in order to wait until this expert date that you picked we're using this this",
    "start": "1815360",
    "end": "1821630"
  },
  {
    "text": "step function and so we're starting this execution and I'll show you what this looks like if we go into the the step",
    "start": "1821630",
    "end": "1828470"
  },
  {
    "start": "1828000",
    "end": "2115000"
  },
  {
    "text": "function console you'll see this scheduled callback state machine and if we look at the details for it it's it's",
    "start": "1828470",
    "end": "1835159"
  },
  {
    "text": "very simplistic so you define a step function state machine with Jason there's an amazon state language that",
    "start": "1835159",
    "end": "1841279"
  },
  {
    "text": "that really controls how these things react and so this is this is a very simple state machine it's coming it's",
    "start": "1841279",
    "end": "1847340"
  },
  {
    "text": "starting off it's going to this wait state and so this is going to wait until that expert that we passed in and so",
    "start": "1847340",
    "end": "1853460"
  },
  {
    "text": "this is slurping out of that input payload the expert and saying wait until tomorrow at 7:00 a.m. or wait until next",
    "start": "1853460",
    "end": "1859789"
  },
  {
    "text": "Thursday and once that time has elapsed it's gonna go to this place call state so you'll see this place call state",
    "start": "1859789",
    "end": "1866149"
  },
  {
    "text": "below that's saying at the point of invoking me trigger this this lambda",
    "start": "1866149",
    "end": "1871340"
  },
  {
    "text": "function so this place scheduled callback function and what's going to be passed into that is all of the data associated with with the state machine",
    "start": "1871340",
    "end": "1878059"
  },
  {
    "text": "right now so all the data from the previous state which in this case will be the data we are originally passed in",
    "start": "1878059",
    "end": "1883250"
  },
  {
    "text": "from lambda so the phone number to call the the DSN the first name the last name",
    "start": "1883250",
    "end": "1888730"
  },
  {
    "text": "the other nice thing about about step functions is that it does give you full insight into what executions have",
    "start": "1888730",
    "end": "1895640"
  },
  {
    "text": "happened you're able to dive into a history see what happened see what went right see what went wrong you're able to",
    "start": "1895640",
    "end": "1901070"
  },
  {
    "text": "also retry with within these step functions this is a very simple one that",
    "start": "1901070",
    "end": "1906529"
  },
  {
    "text": "is really just invoking this lambda function so if we look at this place scheduled callback function",
    "start": "1906529",
    "end": "1913360"
  },
  {
    "text": "that will zoom in again",
    "start": "1916800",
    "end": "1920210"
  },
  {
    "text": "so this is this is really simple so step functions is invoking this function and",
    "start": "1921809",
    "end": "1926960"
  },
  {
    "text": "the only thing we're doing is once again calling in the Amazon connect outbound voice contact API and so we're passing",
    "start": "1926960",
    "end": "1935129"
  },
  {
    "text": "along the set of attributes that came in from step functions we're passing along the the phone number to call so again",
    "start": "1935129",
    "end": "1940859"
  },
  {
    "text": "this is data that came in from the from the step function workflow and we're passing along the the contact flow to",
    "start": "1940859",
    "end": "1946739"
  },
  {
    "text": "invoke and so this is in this case what we passed along originally was this non urgent contact flow and if we look at",
    "start": "1946739",
    "end": "1953519"
  },
  {
    "text": "the the non urgent flow it's it's very simplistic where we're getting",
    "start": "1953519",
    "end": "1958950"
  },
  {
    "text": "personalizing it we're slipping data out of these attributes that were passed along so we're we're welcoming the the",
    "start": "1958950",
    "end": "1964499"
  },
  {
    "text": "user where we're informing them that this is the scheduled callback they requested about the water heater and",
    "start": "1964499",
    "end": "1969960"
  },
  {
    "text": "that we're going to connect them with the technician to help them troubleshoot and so this is a very simple contact",
    "start": "1969960",
    "end": "1974969"
  },
  {
    "text": "flow that's playing some audio putting the customer in the queue and then",
    "start": "1974969",
    "end": "1979979"
  },
  {
    "text": "routing them to to an appropriate agent if this is a great place where if you're looking for automation",
    "start": "1979979",
    "end": "1985229"
  },
  {
    "text": "maybe off-hours handling a like spot that's more advanced and able to schedule an appointment",
    "start": "1985229",
    "end": "1991080"
  },
  {
    "text": "could be a perfect place here where it can actually let the customer interact with LEC's pick the date pick the time get it",
    "start": "1991080",
    "end": "1997710"
  },
  {
    "text": "confirmed on the scheduling software for in this case the plumber and then give the confirmation back to the customer so",
    "start": "1997710",
    "end": "2004580"
  },
  {
    "text": "depending on what level of human touch versus automation you're looking for with the business these contact flows",
    "start": "2004580",
    "end": "2009769"
  },
  {
    "text": "give you that opportunity and it can be dynamic based on call volume coming in who's available etc okay so so those are",
    "start": "2009769",
    "end": "2020149"
  },
  {
    "text": "the two demo scenarios we outlined you could you could build from there so this is really just intended to get people",
    "start": "2020149",
    "end": "2026539"
  },
  {
    "text": "thinking about what what is possible so these were fairly simplistic both on the IOT side on the Amazon connect side you",
    "start": "2026539",
    "end": "2034159"
  },
  {
    "text": "could you could build much more complex scenarios based on what your business requirements are and and they really",
    "start": "2034159",
    "end": "2039589"
  },
  {
    "text": "followed the same model and so we our goal is really to make make these things simple to do easy to do and make for",
    "start": "2039589",
    "end": "2046009"
  },
  {
    "text": "compelling customer experiences so with that said are there any questions right now there's a mic in the middle of the",
    "start": "2046009",
    "end": "2051440"
  },
  {
    "text": "room if you'd like to ask a question we're happy to deep into any area you'd like to go",
    "start": "2051440",
    "end": "2058260"
  },
  {
    "text": "doesn't look like there's any questions so we'll probably wrap up I'm gonna put",
    "start": "2060359",
    "end": "2065980"
  },
  {
    "text": "this back over here there's another",
    "start": "2065980",
    "end": "2071830"
  },
  {
    "text": "session on Amazon connect this afternoon it's our last one of reinvent if you're",
    "start": "2071830",
    "end": "2077020"
  },
  {
    "text": "interested in dye being deep into the know I don't know what happened to",
    "start": "2077020",
    "end": "2082740"
  },
  {
    "text": "change to go to the end okay the if you're interested in",
    "start": "2082740",
    "end": "2090158"
  },
  {
    "text": "learning more about Amazon connect and lakhs and how those two solutions work together to build a natural experience",
    "start": "2090159",
    "end": "2096128"
  },
  {
    "text": "so that you can use the bots to create this experience is when you reach out to customers or even when they're reaching",
    "start": "2096129",
    "end": "2101140"
  },
  {
    "text": "into you you can attend that session and also please complete your evaluations so",
    "start": "2101140",
    "end": "2107710"
  },
  {
    "text": "that we can do more connect things next year more presentations thank you very much for your time thank you",
    "start": "2107710",
    "end": "2114190"
  },
  {
    "text": "[Applause]",
    "start": "2114190",
    "end": "2117420"
  }
]