[
  {
    "start": "0",
    "end": "50000"
  },
  {
    "text": "and once again i'd like to welcome you to our webcast today journey to the aws cloud our presenter",
    "start": "719",
    "end": "6160"
  },
  {
    "text": "today is brett holman who's a solutions architect here at aws but you have the floor",
    "start": "6160",
    "end": "12160"
  },
  {
    "text": "all right hello everyone thanks for taking the time to join the webinar this morning i'm going",
    "start": "12160",
    "end": "17680"
  },
  {
    "text": "to take you through a journey to the abs cloud we're going to talk about some of the benefits of cloud computing",
    "start": "17680",
    "end": "23840"
  },
  {
    "text": "today we're going to go into a couple case studies on elasticity and um then we're going to talk through",
    "start": "23840",
    "end": "31199"
  },
  {
    "text": "a variety of aws services in the portfolio and then we're going to finish off with an example of",
    "start": "31199",
    "end": "36559"
  },
  {
    "text": "using our api set and our cli tools so you get an idea of how this all works",
    "start": "36559",
    "end": "43520"
  },
  {
    "text": "okay so first off i wanted to talk to you about the aws mission and that's to uh enable",
    "start": "43520",
    "end": "51360"
  },
  {
    "start": "50000",
    "end": "108000"
  },
  {
    "text": "businesses and developers to use web services to build scalable sophisticated applications and so you see a little asterisk there",
    "start": "51360",
    "end": "57600"
  },
  {
    "text": "that says you know what people now call the cloud so when you think about amazon web services um you know the web services portion",
    "start": "57600",
    "end": "63680"
  },
  {
    "text": "really means that everything we do at amazon you know all the services we make available the",
    "start": "63680",
    "end": "69360"
  },
  {
    "text": "ability to create services of read or list services that you've got deployed update services or delete",
    "start": "69360",
    "end": "75119"
  },
  {
    "text": "services is all available available via our web services api and as we move through this you'll see",
    "start": "75119",
    "end": "82400"
  },
  {
    "text": "examples of the cli tools and the console and all of those things are using our apis our web services apis to actually",
    "start": "82400",
    "end": "88799"
  },
  {
    "text": "create those resources underneath the cover so now you have the ability to um you know",
    "start": "88799",
    "end": "94400"
  },
  {
    "text": "generate uh architecture via you know a nice ui via command line tool or potentially code or script your",
    "start": "94400",
    "end": "101520"
  },
  {
    "text": "infrastructure out so you're actually deploying your infrastructure via code",
    "start": "101520",
    "end": "106880"
  },
  {
    "text": "okay so everybody knows that amazon web services is pouring many of the uh",
    "start": "106880",
    "end": "111920"
  },
  {
    "start": "108000",
    "end": "170000"
  },
  {
    "text": "the big internet businesses and here are a few um couples to call out that are you know hallmark",
    "start": "111920",
    "end": "116960"
  },
  {
    "text": "you know businesses that have grown up on aws um i think businesses like instagram um dropbox netflix airbnb pinterest and",
    "start": "116960",
    "end": "125520"
  },
  {
    "text": "many others many great uh stories about building things that you know started very small",
    "start": "125520",
    "end": "131440"
  },
  {
    "text": "and you know now are at enormous scale um through the use of amazon web services",
    "start": "131440",
    "end": "136720"
  },
  {
    "text": "one of the things that people you know may know or or may not know yet but um you know we are",
    "start": "136720",
    "end": "142800"
  },
  {
    "text": "highly trusted by enterprises as well and we have many of the fortune 500 and even fortune 100 companies",
    "start": "142800",
    "end": "148239"
  },
  {
    "text": "building out um large workloads on amazon web services companies like shell and unilever",
    "start": "148239",
    "end": "154640"
  },
  {
    "text": "nav back and you have that spin cloud which was recently uh released back in 2012 are great examples of",
    "start": "154640",
    "end": "160959"
  },
  {
    "text": "enterprises i'm building out you know um highly scalable applications in the cloud on aws so uh",
    "start": "160959",
    "end": "169280"
  },
  {
    "text": "you know just a point of reference here um so if you think about amazon.com back",
    "start": "169280",
    "end": "174640"
  },
  {
    "start": "170000",
    "end": "213000"
  },
  {
    "text": "in 2003 we were about a 5.2 billion dollar retail business you know mainly e-commerce",
    "start": "174640",
    "end": "180959"
  },
  {
    "text": "um 7 800 employees and you can imagine how many servers we had in our fleet a huge number of servers",
    "start": "180959",
    "end": "187040"
  },
  {
    "text": "huge amount of compute capacities that serve that 5.2 billion dollar retail business e-commerce platform",
    "start": "187040",
    "end": "192959"
  },
  {
    "text": "and you know each day amazon web services adds the equivalent",
    "start": "192959",
    "end": "198000"
  },
  {
    "text": "capacity to um you know power amazon when it was back um in 2003 that 5.2 billion enterprise",
    "start": "198000",
    "end": "203680"
  },
  {
    "text": "so so we are adding immense scale on a daily basis to the amazon web service class",
    "start": "203680",
    "end": "211200"
  },
  {
    "text": "you know one of the other things to mention is we we are completely uh customer focused that think about",
    "start": "211280",
    "end": "217280"
  },
  {
    "start": "213000",
    "end": "261000"
  },
  {
    "text": "amazon as a whole um we're a customer-driven company um we always innovate on behalf of our customers and listen to our customers",
    "start": "217280",
    "end": "223280"
  },
  {
    "text": "about what they want to see from the platform amazon web services is no different",
    "start": "223280",
    "end": "228799"
  },
  {
    "text": "last year in the first 11 months of 2012 we launched 158 new features and services",
    "start": "228799",
    "end": "234720"
  },
  {
    "text": "so that includes things like glacier you know large-scale products like glacier or redshift it also includes you",
    "start": "234720",
    "end": "241680"
  },
  {
    "text": "know new features on ec2 and rds and s3 um that people are now using today so um",
    "start": "241680",
    "end": "248000"
  },
  {
    "text": "we're rapidly outpacing that in 2013 and you know we always to our customers",
    "start": "248000",
    "end": "253760"
  },
  {
    "text": "and try to innovate based on what our customers are asking for most",
    "start": "253760",
    "end": "258400"
  },
  {
    "text": "so why are customers moving to cloud computing and adopting the cloud there's a variety of reasons",
    "start": "260239",
    "end": "266960"
  },
  {
    "start": "261000",
    "end": "317000"
  },
  {
    "text": "we're going to go through some of the benefits of the cloud on these next coming slides but you know one of the main",
    "start": "266960",
    "end": "273040"
  },
  {
    "text": "drivers is the variability variable expense so replacing capex with opex or variable",
    "start": "273040",
    "end": "279280"
  },
  {
    "text": "expense monthly when you think about running something on premise there's a large capital",
    "start": "279280",
    "end": "285120"
  },
  {
    "text": "investment in physical installation that's required um you know we'll see some examples coming up here but",
    "start": "285120",
    "end": "290880"
  },
  {
    "text": "you know people are spending large amounts of money to um deploy infrastructure for a",
    "start": "290880",
    "end": "296960"
  },
  {
    "text": "particular project or to turn up a new color or data center or whatever it might be you know on amazon web services that",
    "start": "296960",
    "end": "302320"
  },
  {
    "text": "cost your dollars to get started and you're going to pay as you go so you know huge hugely beneficial when you think about",
    "start": "302320",
    "end": "310240"
  },
  {
    "text": "the financing it requires to get a project off the ground",
    "start": "310240",
    "end": "314720"
  },
  {
    "text": "so um also you know economies of skill is important um you know we can achieve more variable",
    "start": "315280",
    "end": "321120"
  },
  {
    "start": "317000",
    "end": "472000"
  },
  {
    "text": "expenses than a company can achieve by themselves so by aggregating all the the resources that are required by all these companies",
    "start": "321120",
    "end": "327759"
  },
  {
    "text": "we achieve an enormous scale and all our customers benefit from that",
    "start": "327759",
    "end": "334000"
  },
  {
    "text": "an example uh samsung with their smart hub application you know um",
    "start": "334639",
    "end": "339680"
  },
  {
    "text": "they saved 34 million dollars on deploying the smart hub app um you know commonwealth bank is another",
    "start": "339680",
    "end": "344800"
  },
  {
    "text": "great example and you know foursquare reduced their analytical cost by 50 um by moving",
    "start": "344800",
    "end": "350400"
  },
  {
    "text": "them to aws from their own colo and you know one of the things that breeds is the ability to",
    "start": "350400",
    "end": "356000"
  },
  {
    "text": "um when you save that kind of money you can answer questions that you couldn't answer before now you didn't have the",
    "start": "356000",
    "end": "362080"
  },
  {
    "text": "compute and the storage necessary to save data or to answer deeper questions or to",
    "start": "362080",
    "end": "367680"
  },
  {
    "text": "run you know workloads that go deeper in your data so so economies of skill allows you to one save money as well as",
    "start": "367680",
    "end": "373600"
  },
  {
    "text": "to you know potentially answer questions on big data you might not have been able to answer",
    "start": "373600",
    "end": "378840"
  },
  {
    "text": "before um so here's a little total cost of ownership study done by ibc",
    "start": "378840",
    "end": "384560"
  },
  {
    "text": "and um you know basically what it says is there's a 70 lower five-year total cost of ownership",
    "start": "384560",
    "end": "390400"
  },
  {
    "text": "per app um running on aws and they they did a study this is independent of us and um they found that the average",
    "start": "390400",
    "end": "397199"
  },
  {
    "text": "application the total cost of ownership over five years is point nine million dollars and an on premise that would",
    "start": "397199",
    "end": "403759"
  },
  {
    "text": "cost about three million dollars to run it yourself um so you know given those economies of",
    "start": "403759",
    "end": "409759"
  },
  {
    "text": "scale you can achieve great things inside of the amazon cloud",
    "start": "409759",
    "end": "414720"
  },
  {
    "text": "um here's a little example of lower lower variable expenses and some of the drivers of that",
    "start": "414960",
    "end": "420319"
  },
  {
    "text": "so if you think about this there's a kind of a virtuous cycle and it's what we go through so so we we",
    "start": "420319",
    "end": "425759"
  },
  {
    "text": "get more customers we get more aws usage we then um deploy more infrastructure",
    "start": "425759",
    "end": "431919"
  },
  {
    "text": "which drives economies of scale which then in turn lowers costs",
    "start": "431919",
    "end": "437840"
  },
  {
    "text": "which then we reduce prices and then we get more customers and then there's more energy usage but it's a virtuous cycle",
    "start": "437840",
    "end": "444240"
  },
  {
    "text": "that feeds itself um we've done over 31 price erections since 2006. most that's not due to competitive",
    "start": "444240",
    "end": "450479"
  },
  {
    "text": "pressure it's because that's who we are we you know we we are a low margin business that's that's part of amazon",
    "start": "450479",
    "end": "455919"
  },
  {
    "text": "dna part of amazon.com dna and similarly that transfers over to amazon web services as well",
    "start": "455919",
    "end": "460960"
  },
  {
    "text": "very customer focused and we like to pass those savings down to you when we either better our efficiencies or uh",
    "start": "460960",
    "end": "466879"
  },
  {
    "text": "reach economies of scale the next we're going to talk about",
    "start": "466879",
    "end": "472879"
  },
  {
    "start": "472000",
    "end": "604000"
  },
  {
    "text": "elastic capacity and that being another driver for cloud adoption so with elastic capacity",
    "start": "472879",
    "end": "478720"
  },
  {
    "text": "there's no need to guess capacitor permits and over provision like you might have had to in the past um you can think of this in terms of",
    "start": "478720",
    "end": "485039"
  },
  {
    "text": "deploying a data center or you can think of this in terms of a particular application and we'll take a look at this i'm going to talk",
    "start": "485039",
    "end": "490879"
  },
  {
    "text": "in terms of deploying an app but you can you can formally assist you you know deploying a new data center or",
    "start": "490879",
    "end": "496479"
  },
  {
    "text": "um turning up the data center as well or you're usually planning for a data center so here's a picture of um",
    "start": "496479",
    "end": "504800"
  },
  {
    "text": "or a graph of a per a typical predicted demand cycle you need to think you know three to six",
    "start": "504800",
    "end": "511840"
  },
  {
    "text": "months out about where you need to be in terms of capacity and deploy and then and then uh you know",
    "start": "511840",
    "end": "519279"
  },
  {
    "text": "it takes a while when you actually do need to deploy again to actually you know requisition hardware get more force",
    "start": "519279",
    "end": "525200"
  },
  {
    "text": "based more cooling all of those things and actually you know license them like something that's required to uh",
    "start": "525200",
    "end": "530320"
  },
  {
    "text": "turn up you know more infrastructure um you know it takes a while so if you look at what the predicted demand is and",
    "start": "530320",
    "end": "536720"
  },
  {
    "text": "where where it is and then you look at the actual demand for the data center you notice that at the beginning um you over deployed",
    "start": "536720",
    "end": "542480"
  },
  {
    "text": "because you were thinking three to six months out there was a waste and um and then you",
    "start": "542480",
    "end": "548320"
  },
  {
    "text": "know maybe your your data center scaled or your application scaled much faster than the predicted demand so",
    "start": "548320",
    "end": "554959"
  },
  {
    "text": "now when you're trying to get more hardware deployed um there's a customer just satisfaction you can't serve them you're either",
    "start": "554959",
    "end": "560800"
  },
  {
    "text": "your app has been degraded or uh or you're not able to serve all those customers or whatever it might be maybe",
    "start": "560800",
    "end": "565920"
  },
  {
    "text": "your site is loading slower so you're losing sales um so you know",
    "start": "565920",
    "end": "571760"
  },
  {
    "text": "this this illustrates well the the waste that can go on you know with having to guess what your past requirements are as well as the",
    "start": "571760",
    "end": "578240"
  },
  {
    "text": "dissatisfaction by not having enough capacity to scale when you move to the",
    "start": "578240",
    "end": "584080"
  },
  {
    "text": "cloud you you deploy based on your uh your demand curve so you deploy your",
    "start": "584080",
    "end": "590160"
  },
  {
    "text": "capacity you know that follows closely with your demand curve so you're always deploying just enough capacity",
    "start": "590160",
    "end": "595200"
  },
  {
    "text": "to to meet the demand that you your application requires",
    "start": "595200",
    "end": "600720"
  },
  {
    "text": "another key driver is the speed and agility i always think of this one as being the one you know maybe it's not",
    "start": "601440",
    "end": "607279"
  },
  {
    "start": "604000",
    "end": "725000"
  },
  {
    "text": "the one that people go to first but it's the reason they they they move more workloads to the cloud over time and why they stay",
    "start": "607279",
    "end": "615279"
  },
  {
    "text": "and you know there's a couple keys here it kind of leads into the next bullet as well but speed and agility infrastructure and",
    "start": "615279",
    "end": "621920"
  },
  {
    "text": "then not weak so um when you want to deploy a project um or a new application or start testing",
    "start": "621920",
    "end": "628240"
  },
  {
    "text": "something they have the ability to deploy infrastructure very very rapidly um here are some examples of a few",
    "start": "628240",
    "end": "633839"
  },
  {
    "text": "companies um and and their quotes um but you know anywhere from deploying new apps and where it used to",
    "start": "633839",
    "end": "640160"
  },
  {
    "text": "take months to days and you know somebody even you know specifying advantage even that's fine we can double turn the capacity in 20",
    "start": "640160",
    "end": "646000"
  },
  {
    "text": "seconds the speed and agility uh you know old",
    "start": "646000",
    "end": "653680"
  },
  {
    "text": "world deploying app infrastructure in terms of weeks you know whether it's",
    "start": "653680",
    "end": "658720"
  },
  {
    "text": "6 weeks eight weeks ten weeks two weeks it's in weeks and you know with aws it's literally in",
    "start": "658720",
    "end": "663920"
  },
  {
    "text": "minutes you can see a little mock-up of a console here where they're creating a new dev environment new production environments and so on",
    "start": "663920",
    "end": "670160"
  },
  {
    "text": "they're doing it in japan and they're adding a thousand servers um the capability to do that on amazon web server",
    "start": "670160",
    "end": "677360"
  },
  {
    "text": "and um you know so if you think about this on-premise you know you you don't experiment frequently it's",
    "start": "677920",
    "end": "682959"
  },
  {
    "text": "more infrequently the experiment because failure is expensive you've got to stand up an application there's a large capex budget that's",
    "start": "682959",
    "end": "689600"
  },
  {
    "text": "required to get a project off the ground and that that means that you're only going to select certain projects and only work on certain projects so",
    "start": "689600",
    "end": "696480"
  },
  {
    "text": "there's less innovation in the cloud on amazon web services it will give you the ability to experiment",
    "start": "696480",
    "end": "702160"
  },
  {
    "text": "often and you know fail quickly at a low cost and people fail well well the more you fail and the",
    "start": "702160",
    "end": "708320"
  },
  {
    "text": "cheaper you fail the more you can innovate and derive successes as well so failing quickly at a low low cost allows",
    "start": "708320",
    "end": "715200"
  },
  {
    "text": "you to innovate rapidly and then drive more successes out of your product as well",
    "start": "715200",
    "end": "721360"
  },
  {
    "text": "so um one of the other reasons customers are adopting a cloud is they want to focus on their business so",
    "start": "723360",
    "end": "728560"
  },
  {
    "start": "725000",
    "end": "781000"
  },
  {
    "text": "they're not in the you know they don't need to do the undisputed undifferentiated heavy iq listing that",
    "start": "728560",
    "end": "734800"
  },
  {
    "text": "you know is required to deploy an app there's no there's no um it doesn't benefit their product",
    "start": "734800",
    "end": "740720"
  },
  {
    "text": "and um you know when you when you come to amazon we take care of a lot of the",
    "start": "740720",
    "end": "746480"
  },
  {
    "text": "the core infrastructure needs that you have um you know we're very good at um doing all these things you know we have",
    "start": "746480",
    "end": "752399"
  },
  {
    "text": "great staff and we deploy great data centers um so you don't have to do these things on your own you don't have to buy and install you don't have to get",
    "start": "752399",
    "end": "758639"
  },
  {
    "text": "licensing for oasis you don't have to do all these things we do it for you and these things are necessarily of value to your end product",
    "start": "758639",
    "end": "765600"
  },
  {
    "text": "so doing them in the cloud is a great place to to deploy your resources",
    "start": "765600",
    "end": "772320"
  },
  {
    "text": "and focus on your business and work on your product the things that differentiate your product",
    "start": "772320",
    "end": "778240"
  },
  {
    "text": "um lastly and not least by any stretch is global reach so um you know you deploy an application and",
    "start": "778880",
    "end": "785200"
  },
  {
    "start": "781000",
    "end": "818000"
  },
  {
    "text": "you want to have a global reach on that application you know in the cloud you can go global in minutes and reach a global audience",
    "start": "785200",
    "end": "790959"
  },
  {
    "text": "so you know we're going to look into this a little bit more in our example at the end but uh you know this illustrates our",
    "start": "790959",
    "end": "797839"
  },
  {
    "text": "global footprint and your application and you know the ability to go and you know call apis or or use our console",
    "start": "797839",
    "end": "804399"
  },
  {
    "text": "or use our cli tools and deploy your application around the globe in minutes for the capability well",
    "start": "804399",
    "end": "810079"
  },
  {
    "text": "within your reach in the cloud and not amazon web services",
    "start": "810079",
    "end": "815360"
  },
  {
    "text": "okay so we're going to transition a little bit into elasticity and i'm going to bring",
    "start": "816320",
    "end": "822000"
  },
  {
    "start": "818000",
    "end": "1066000"
  },
  {
    "text": "up a couple of different case studies here but one of the things i want to note if you think about the cloud being a",
    "start": "822000",
    "end": "827519"
  },
  {
    "text": "utility-based platform um you can correlate this back to the electricity industry or any of the",
    "start": "827519",
    "end": "833199"
  },
  {
    "text": "industries like that that are utility-based you know you pay for what you use um what we've done is tried to",
    "start": "833199",
    "end": "840079"
  },
  {
    "text": "create that same type of um environment for um ic resources and compute and",
    "start": "840079",
    "end": "846560"
  },
  {
    "text": "storage um so so a lot of the things you think about when you think about using power um equate to the cloud you pay for what",
    "start": "846560",
    "end": "852959"
  },
  {
    "text": "you use you can deploy and use more when you want to it's always there and you know those are some of the tenants of amazon",
    "start": "852959",
    "end": "859360"
  },
  {
    "text": "web services so moving on to the next slide um this illustrates a case study from",
    "start": "859360",
    "end": "865600"
  },
  {
    "text": "amazon.com so this is their weekly traffic typical weekly traffic on amazon.com you know",
    "start": "865600",
    "end": "871199"
  },
  {
    "text": "you have your peaks during the you know the peak times of the day and you know you have your your um late",
    "start": "871199",
    "end": "876720"
  },
  {
    "text": "at night you have your your times where you know the traffic or demand goes down for amazon.com",
    "start": "876720",
    "end": "884240"
  },
  {
    "text": "then um here's the november traffic amazon.com so you can see at the",
    "start": "884240",
    "end": "889279"
  },
  {
    "text": "beginning of the month it starts out pretty linear like we saw in those earlier in that earlier slide",
    "start": "889279",
    "end": "895040"
  },
  {
    "text": "but then you can see as we start approaching the end of the month in black pride we have these huge spikes which might be 4 or 5x than normal",
    "start": "895040",
    "end": "901040"
  },
  {
    "text": "traffic so um think about what it might require to actually",
    "start": "901040",
    "end": "906880"
  },
  {
    "text": "you know run servers so if you were deploying in the old world you know arena you'd have to deploy a",
    "start": "906880",
    "end": "912639"
  },
  {
    "text": "lot of capacities to hit these peaks and you might have to sustain it because you're not virtualizing your demand is",
    "start": "912639",
    "end": "917680"
  },
  {
    "text": "not following your um or your elasticity of compute is not following the demand so",
    "start": "917680",
    "end": "923920"
  },
  {
    "text": "here's a picture of what amazon would have had to provision to um do it you know satisfy all those",
    "start": "924639",
    "end": "930639"
  },
  {
    "text": "customer requests um for november you know and for the big spikes of black friday now you know we we did some math on this and",
    "start": "930639",
    "end": "937920"
  },
  {
    "text": "um you take a look there their utilization on deploying that kind of provisioning capacity would be",
    "start": "937920",
    "end": "942959"
  },
  {
    "text": "24 and like we looked at on another chart there would be 76 percent waste wow",
    "start": "942959",
    "end": "949120"
  },
  {
    "text": "that's a lot of waste um so you know it's pretty interesting",
    "start": "949120",
    "end": "954880"
  },
  {
    "text": "um so what what do they do you know move to a more elastic demand",
    "start": "954880",
    "end": "961519"
  },
  {
    "text": "cycle that actually follows um your you know deploying compute capacity when the",
    "start": "961519",
    "end": "967279"
  },
  {
    "text": "demand is there and um and we're going to talk more about that there's another case study and then we're going to talk more about",
    "start": "967279",
    "end": "972959"
  },
  {
    "text": "how you do that on our tools and on our platform so another another good use case for case study is",
    "start": "972959",
    "end": "980839"
  },
  {
    "text": "animoto and so animoto ran at about 40 to 50 servers steady state for a while and then they",
    "start": "980839",
    "end": "988399"
  },
  {
    "text": "um they launched a facebook modification to their application which let people share the uh the videos the music based videos",
    "start": "988399",
    "end": "995600"
  },
  {
    "text": "that they created with their uh with their their content um and share it with the people that were actually in",
    "start": "995600",
    "end": "1001360"
  },
  {
    "text": "the video so that people could see it via facebook um they could see as they were part of this video they'd watch the video and then they wanted to create their own",
    "start": "1001360",
    "end": "1006959"
  },
  {
    "text": "videos so shortly thereafter they were tech crunched or an article was written in techcrunch",
    "start": "1006959",
    "end": "1012079"
  },
  {
    "text": "on um this particular topic and you know um usage just spiked and within",
    "start": "1012079",
    "end": "1018000"
  },
  {
    "text": "three days they went from uh you know free state of about 40 servers to about 5 000 servers",
    "start": "1018000",
    "end": "1024160"
  },
  {
    "text": "imagine doing that in your own data center um what would that take and and you would have had to plan you",
    "start": "1024160",
    "end": "1030959"
  },
  {
    "text": "know months ahead to have those 5 000 servers there and then think about it as well you can see that the demand tapers off maybe",
    "start": "1030959",
    "end": "1037199"
  },
  {
    "text": "they ran in a steady state of two to three thousand servers after that well if they deployed five thousand so",
    "start": "1037199",
    "end": "1042640"
  },
  {
    "text": "there's a tremendous amount of waste again and um you know you know guesstimating",
    "start": "1042640",
    "end": "1048400"
  },
  {
    "text": "that is pretty difficult you know where is your piece gonna be so but you know we give you the ability to do that to burst",
    "start": "1048400",
    "end": "1054559"
  },
  {
    "text": "um to you know fulfill your application request um and you know there's services that we have called auto scaling which we're",
    "start": "1054559",
    "end": "1060960"
  },
  {
    "text": "going to talk more about okay so next we're going to dive into",
    "start": "1060960",
    "end": "1066400"
  },
  {
    "start": "1066000",
    "end": "1114000"
  },
  {
    "text": "some of the services that are available on top of aws or amazon web services so if you think about your application",
    "start": "1066400",
    "end": "1073440"
  },
  {
    "text": "and the requirements to deploy an application every application requires you know",
    "start": "1073440",
    "end": "1078840"
  },
  {
    "text": "co-location or a data center infrastructure on top of that you deploy networking",
    "start": "1078840",
    "end": "1084640"
  },
  {
    "text": "between your compute and your storage and your database then you you deploy your compute your",
    "start": "1084640",
    "end": "1089840"
  },
  {
    "text": "storage in your database and then you might be running application level services that supply email or do queuing",
    "start": "1089840",
    "end": "1094880"
  },
  {
    "text": "or do pub sub messaging or whatever the pieces you need are and then lastly there's the deployment administration of",
    "start": "1094880",
    "end": "1100320"
  },
  {
    "text": "your application so this is a reference model of the services we offer um so we're going to dive into this and talk about what we",
    "start": "1100320",
    "end": "1106480"
  },
  {
    "text": "offer each one of these areas to help you build out your application on the cloud",
    "start": "1106480",
    "end": "1112559"
  },
  {
    "text": "okay so global infrastructure amazon is amazon web services made up of nine regions we've got three regions in north",
    "start": "1113360",
    "end": "1120480"
  },
  {
    "start": "1114000",
    "end": "1235000"
  },
  {
    "text": "america we've got u.s east u.s west one northern california and u.s west to oregon",
    "start": "1120480",
    "end": "1126080"
  },
  {
    "text": "we also have an itar compliance region or government workloads called gov cloud",
    "start": "1126080",
    "end": "1133760"
  },
  {
    "text": "that government or you know people that are working with the governments on workloads and that that that's what that is satisfied",
    "start": "1133760",
    "end": "1140880"
  },
  {
    "text": "then we have regions in south america europe asia and australia as well um a region is made up of a collection",
    "start": "1140880",
    "end": "1147280"
  },
  {
    "text": "of aws resources in a defined geography like a metropolitan area",
    "start": "1147280",
    "end": "1153280"
  },
  {
    "text": "so those regions are made up of what we call availability zone and the availability",
    "start": "1153280",
    "end": "1159120"
  },
  {
    "text": "zone correlates to essentially a data center could be a very large data center",
    "start": "1159120",
    "end": "1164240"
  },
  {
    "text": "or a cluster of data centers but essentially it's a data center that's the best way to think of it and each one of these is designed as",
    "start": "1164240",
    "end": "1170960"
  },
  {
    "text": "independent failure zone um so they're spread around a typical metropolitan area but they're not",
    "start": "1170960",
    "end": "1177200"
  },
  {
    "text": "necessarily located right next to each other we try to keep them physically separated and separate as much as possible between",
    "start": "1177200",
    "end": "1184559"
  },
  {
    "text": "availability zones and you can think about building applications you know across",
    "start": "1184559",
    "end": "1189919"
  },
  {
    "text": "availability zones in a region you know when you actually build out your applications in multiple data centers you've got single digit",
    "start": "1189919",
    "end": "1197039"
  },
  {
    "text": "milliseconds between um low single digit million seconds latency between these availability zones",
    "start": "1197039",
    "end": "1202320"
  },
  {
    "text": "so it's very possible to build out applications that span multiple availability zones on the amazon cloud",
    "start": "1202320",
    "end": "1209600"
  },
  {
    "text": "lastly we've got edge locations and this represents the edge locations where we host our",
    "start": "1211120",
    "end": "1216400"
  },
  {
    "text": "content delivery network or our dns route 53 network and we'll talk more",
    "start": "1216400",
    "end": "1222000"
  },
  {
    "text": "about these two products and how they lay over this network but we also say there's about approximately 40 edge locations in the",
    "start": "1222000",
    "end": "1229360"
  },
  {
    "text": "network now and that number is always growing",
    "start": "1229360",
    "end": "1234640"
  },
  {
    "text": "okay so we're going to dive into the networking stack on amazon web services um so the first product we're going to",
    "start": "1234640",
    "end": "1241360"
  },
  {
    "start": "1235000",
    "end": "1327000"
  },
  {
    "text": "talk about is route 53 and so route 53 is our highly available dns service",
    "start": "1241360",
    "end": "1246960"
  },
  {
    "text": "um and uh you know it's supported globally there's edge locations around the globe",
    "start": "1246960",
    "end": "1252640"
  },
  {
    "text": "uh has the ability to scale based upon usage um so based upon your query volumes for",
    "start": "1252640",
    "end": "1257919"
  },
  {
    "text": "your particular host zone that you host in route 53 for your domain name it'll automatically scale based upon flurry",
    "start": "1257919",
    "end": "1263600"
  },
  {
    "text": "volume you have the ability to deploy multi-region applications and use",
    "start": "1263600",
    "end": "1269120"
  },
  {
    "text": "something called latency-based routing where when a user requests",
    "start": "1269120",
    "end": "1274640"
  },
  {
    "text": "your dns record it will send you to the local the nearest regional data center um to actually",
    "start": "1274640",
    "end": "1280000"
  },
  {
    "text": "terminate that traffic so you can host in multiple regions around the world and route 53 will help you",
    "start": "1280000",
    "end": "1285440"
  },
  {
    "text": "based on your your proximity to the closest data set or the closest availability though or the closed region where your your",
    "start": "1285440",
    "end": "1291600"
  },
  {
    "text": "application is being hosted lastly um it's secure it integrates with im and it you also have",
    "start": "1291600",
    "end": "1297200"
  },
  {
    "text": "api access you can add records so let's say your application is producing",
    "start": "1297200",
    "end": "1303200"
  },
  {
    "text": "custom domain records for a particular um you know client that signs up for a",
    "start": "1303200",
    "end": "1308320"
  },
  {
    "text": "service you can do that via api um in this api calls to route 53 and on",
    "start": "1308320",
    "end": "1313440"
  },
  {
    "text": "demand your applications create new records um you know new custom senior records your new custom dns records",
    "start": "1313440",
    "end": "1320159"
  },
  {
    "text": "or update dns records on the fly the next we're going to talk about",
    "start": "1320159",
    "end": "1326159"
  },
  {
    "text": "virtual private cloud and very popular product on ews",
    "start": "1326159",
    "end": "1331679"
  },
  {
    "start": "1327000",
    "end": "1394000"
  },
  {
    "text": "so virtual private cloud i think the best way to describe this is this gives you the tools that you require to",
    "start": "1331679",
    "end": "1336880"
  },
  {
    "text": "build out your own virtual data center on amazon web services so you you start off by picking an ip",
    "start": "1336880",
    "end": "1344880"
  },
  {
    "text": "space and you pick your own ip space that you want to use instead of your cloud and then you you um submit up that",
    "start": "1344880",
    "end": "1350799"
  },
  {
    "text": "ipstate you um you deploy subnet you can deploy ingress egress rules around those",
    "start": "1350799",
    "end": "1356640"
  },
  {
    "text": "subnets and what kind of traffic can come into it out of a particular subnet so that provides some level of security about",
    "start": "1356640",
    "end": "1362880"
  },
  {
    "text": "what you're going to deploy each subnet whether it's going to be database servers or web servers then you can specify the routing rules for a",
    "start": "1362880",
    "end": "1368720"
  },
  {
    "text": "particular subnet and then what access they have for the external world what does this traffic for the subnet route to does it",
    "start": "1368720",
    "end": "1375039"
  },
  {
    "text": "route out back to your corporate data center over private connection or is it allowed to run out to the internet",
    "start": "1375039",
    "end": "1380880"
  },
  {
    "text": "um so you have all these fine-grained controls for deploying a virtual data center on",
    "start": "1380880",
    "end": "1386880"
  },
  {
    "text": "we've got a virtual amazon.com cloud um we're going to talk about a couple of",
    "start": "1387120",
    "end": "1392320"
  },
  {
    "text": "the means for connecting your your virtual private cloud or your your amazon data center to um to",
    "start": "1392320",
    "end": "1398640"
  },
  {
    "start": "1394000",
    "end": "1440000"
  },
  {
    "text": "uh your own corporate data center or network so the first way you connect your vpc to",
    "start": "1398640",
    "end": "1404799"
  },
  {
    "text": "uh to your own appropriate data center would be via a vpn connection so um we have an endpoint as part of",
    "start": "1404799",
    "end": "1412159"
  },
  {
    "text": "when you stand up a virtual private cloud you get you can provision something called a virtual private gateway",
    "start": "1412159",
    "end": "1417760"
  },
  {
    "text": "and on that virtual private gateway you can terminate ipsec vpn tunnels um back that go back to your own router",
    "start": "1417760",
    "end": "1425200"
  },
  {
    "text": "or firewall or customer gateway and um so one way to connect you know quick way to connect your virtual",
    "start": "1425200",
    "end": "1430799"
  },
  {
    "text": "private cloud up to um your own corporate data center is with vpn connection",
    "start": "1430799",
    "end": "1437039"
  },
  {
    "text": "there's another way um and you know typically customers will start off with vpn connection or ip spectator",
    "start": "1437039",
    "end": "1443120"
  },
  {
    "start": "1440000",
    "end": "1549000"
  },
  {
    "text": "and then they'll as as their workloads grow and there's more data moving back and forth between um their virtual private cloud or their",
    "start": "1443120",
    "end": "1449520"
  },
  {
    "text": "virtual data center on amazon web services and their own data center they will purchase",
    "start": "1449520",
    "end": "1455440"
  },
  {
    "text": "a private connection to amazon web services which is called directive and direct connect is comes in two",
    "start": "1455440",
    "end": "1462559"
  },
  {
    "text": "flavors you can purchase a one gig or a ten g port into amazon web services cloud",
    "start": "1462559",
    "end": "1468640"
  },
  {
    "text": "and then once you've done that you've got the ability to create vlans",
    "start": "1468640",
    "end": "1474080"
  },
  {
    "text": "over that so you can create vlans that connect your data center up to your virtual private cloud um privately",
    "start": "1474080",
    "end": "1480159"
  },
  {
    "text": "or you can have a public vlan as well which allows users on your network to communicate without going over the",
    "start": "1480159",
    "end": "1485840"
  },
  {
    "text": "public internet you're going over the public space on a public vlan but you're hitting amazon web services apis calling s3",
    "start": "1485840",
    "end": "1492720"
  },
  {
    "text": "retrieving objects doing all the things you might want to do in the cloud publicly over your direct connect as well so you can sub interface that direct",
    "start": "1492720",
    "end": "1498480"
  },
  {
    "text": "connect into multiple private and public vlan further you know how do you how do you get to us",
    "start": "1498480",
    "end": "1505440"
  },
  {
    "text": "well there's a variety of needs there's about uh about a dozen or so sites around the",
    "start": "1505440",
    "end": "1510880"
  },
  {
    "text": "world where you can come and meet amazon web services we've extended our network out to those locations called direct connect",
    "start": "1510880",
    "end": "1516400"
  },
  {
    "text": "ops and um so you either one may be co-located in one of those direct connect tops and then you simply buy a",
    "start": "1516400",
    "end": "1522799"
  },
  {
    "text": "cross-connect from the colo provider the amazon web services that the data can be great or",
    "start": "1522799",
    "end": "1529279"
  },
  {
    "text": "if your data center is not sitting in one of those co-location facilities um you would purchase a third-party",
    "start": "1529279",
    "end": "1534799"
  },
  {
    "text": "circuit from one of our from a telecom provider to um extend it out to one of those facilities and then",
    "start": "1534799",
    "end": "1541120"
  },
  {
    "text": "you get a cross-connect over to amazon web service with the data can be great",
    "start": "1541120",
    "end": "1546320"
  },
  {
    "text": "so next we're going to move over into the compute stack and first thing we're going to talk about is elastic cloud compute now that",
    "start": "1548000",
    "end": "1554960"
  },
  {
    "start": "1549000",
    "end": "1761000"
  },
  {
    "text": "is um really you know the one of the flagship products of amazon web services",
    "start": "1554960",
    "end": "1560640"
  },
  {
    "text": "when you think about virtual service in the cloud that is ec2 and um there's a",
    "start": "1560640",
    "end": "1567679"
  },
  {
    "text": "variety of instance types you you can you know deploy um servers for anywhere from a micro size",
    "start": "1567679",
    "end": "1573120"
  },
  {
    "text": "all the way up to what we call a cluster compute and um we refer to these as instances so we don't call them virtual services",
    "start": "1573120",
    "end": "1579440"
  },
  {
    "text": "you deploy an ec2 instance you choose your size um you know anywhere from uh micro to",
    "start": "1579440",
    "end": "1585440"
  },
  {
    "text": "cluster compute like we discussed so you know um plastic cloud computer ec2 is very",
    "start": "1585440",
    "end": "1591760"
  },
  {
    "text": "flexible when you launch an instance you can choose to run on windows or linux got the ability to you know",
    "start": "1591760",
    "end": "1599039"
  },
  {
    "text": "scale from micro to you know cluster compute you can deploy um many at a time as well um you start you always start",
    "start": "1599039",
    "end": "1606480"
  },
  {
    "text": "from what we call an amazon machine image or an omni for short and um an ami",
    "start": "1606480",
    "end": "1612720"
  },
  {
    "text": "can be anywhere from a base image of an os like windows 2008 r2 or linux sent off",
    "start": "1612720",
    "end": "1619520"
  },
  {
    "text": "or whatever it might be and um you start from a base statement or you can choose an ami that somebody's",
    "start": "1619520",
    "end": "1625279"
  },
  {
    "text": "put out there that has a variety of other packages installed on top of the base ami",
    "start": "1625279",
    "end": "1631600"
  },
  {
    "text": "like in the case of windows it might be ias and sql server express already displayed",
    "start": "1631600",
    "end": "1637360"
  },
  {
    "text": "on an image when you launch an image or launch an instance you have full control",
    "start": "1637360",
    "end": "1643360"
  },
  {
    "text": "you own that guest os um you have the full route or administrator right to that box you",
    "start": "1643360",
    "end": "1649600"
  },
  {
    "text": "get a pair of keys you launch the server with those keys and you access that server with those keys and we do not have those",
    "start": "1649600",
    "end": "1654960"
  },
  {
    "text": "keys so you you are the owner of that instance so it is secure um and and further um",
    "start": "1654960",
    "end": "1660720"
  },
  {
    "text": "when you launch an instance you you deploy it inside of a security group you always launch a server inside of a security",
    "start": "1660720",
    "end": "1666240"
  },
  {
    "text": "group by default before you modify the security group all security groups come by default with",
    "start": "1666240",
    "end": "1672799"
  },
  {
    "text": "no ports and no ip addresses open for any services and so you you launch an instance as you",
    "start": "1672799",
    "end": "1680240"
  },
  {
    "text": "open ports and ip address ranges on those ports now you can start doing things like ssh",
    "start": "1680240",
    "end": "1685760"
  },
  {
    "text": "or rdping into your instance so you open up you open up a security group and by",
    "start": "1685760",
    "end": "1692080"
  },
  {
    "text": "default that security group is a blanket deny so so that you know it is it is very secure um also you have the ability to",
    "start": "1692080",
    "end": "1699360"
  },
  {
    "text": "monitor um we publish metrics to cloudwatch um that come out of the hypervisor things like",
    "start": "1699360",
    "end": "1705039"
  },
  {
    "text": "cpu utilization and other you know metrics you might want to see are available via cloud watch which is our monitoring tool and and we",
    "start": "1705039",
    "end": "1711919"
  },
  {
    "text": "have a console for that as well there's a variety of ways to purchase pc2 you can do it on demand that's the",
    "start": "1711919",
    "end": "1718799"
  },
  {
    "text": "utility-based model we also have a reserve model where you pay a little bit upfront and you buy",
    "start": "1718799",
    "end": "1723840"
  },
  {
    "text": "down your rate and save well over the life of the contract and lastly you have the ability to bid on the unused capacity that exists",
    "start": "1723840",
    "end": "1730559"
  },
  {
    "text": "in an amazon data center or any given time and you know you can get a great savings by using these spot instances to",
    "start": "1730559",
    "end": "1738480"
  },
  {
    "text": "purchase capacity for doing dash type workloads or hadoop type workloads lastly you have the ability to use our",
    "start": "1738480",
    "end": "1744799"
  },
  {
    "text": "vm import and export tool to import windows images into aws and if",
    "start": "1744799",
    "end": "1750240"
  },
  {
    "text": "you've imported a windows image you have the ability to export it back to your own data center as well",
    "start": "1750240",
    "end": "1756799"
  },
  {
    "text": "so next we're going to take a look at an example of launching an ec2 instance so we",
    "start": "1757039",
    "end": "1763520"
  },
  {
    "start": "1761000",
    "end": "1838000"
  },
  {
    "text": "talked about the amazon machine image you always pick an amazon machine image again we'll use the example where you're choosing a base os um",
    "start": "1763520",
    "end": "1770799"
  },
  {
    "text": "but you could also use choose from many images in our ec2 emi community and um",
    "start": "1770799",
    "end": "1777919"
  },
  {
    "text": "there are literally tens of thousands available then you um watch that instance you",
    "start": "1777919",
    "end": "1783360"
  },
  {
    "text": "choose what instant type you want to watch it on next you decide whether you want to launch it in the public or private cloud",
    "start": "1783360",
    "end": "1791679"
  },
  {
    "text": "you then choose which availability zone you want to launch it in then you go when you create ebs volumes",
    "start": "1791760",
    "end": "1797360"
  },
  {
    "text": "which is our block storage we're going to talk more about that in the coming slides then you can snapshot those eds volumes",
    "start": "1797360",
    "end": "1804159"
  },
  {
    "text": "and i think the final point to make here is that you watch for a base ami but once you've",
    "start": "1804159",
    "end": "1809279"
  },
  {
    "text": "deployed all of your software on a particular ec2 instance and you've deployed your",
    "start": "1809279",
    "end": "1814960"
  },
  {
    "text": "source code you've enabled services like on iis or apache so everything's running now",
    "start": "1814960",
    "end": "1821279"
  },
  {
    "text": "you can snapshot that particular instance so when you and then you can relaunch more images that look exactly like that",
    "start": "1821279",
    "end": "1828159"
  },
  {
    "text": "with everything deployed and just ready to go we're gonna talk more about that in terms of auto scaling a little later",
    "start": "1828159",
    "end": "1837039"
  },
  {
    "text": "and when i say a little later i mean the next slide so so auto scaling um so what this gives you the ability to",
    "start": "1837039",
    "end": "1843600"
  },
  {
    "start": "1838000",
    "end": "1961000"
  },
  {
    "text": "do is um have set up a a set of compute resources that are going to",
    "start": "1843600",
    "end": "1849200"
  },
  {
    "text": "scale out based on the items you you require in your clusters so",
    "start": "1849200",
    "end": "1855279"
  },
  {
    "text": "the way this works you set up an auto scale launch configuration which specifies",
    "start": "1855279",
    "end": "1863120"
  },
  {
    "text": "what you want to launch so i want to launch a server of this size with this particular ami and um",
    "start": "1863120",
    "end": "1870720"
  },
  {
    "text": "you know your launch configuration can pass in user data for bootstrapping do a lot of different things",
    "start": "1870720",
    "end": "1877120"
  },
  {
    "text": "you know inside of your launch configuration then you create an auto scaling group an auto scaling group",
    "start": "1877120",
    "end": "1882159"
  },
  {
    "text": "says i want to always be running a minimum of four servers but in this case this is just an example a minimum of four",
    "start": "1882159",
    "end": "1888320"
  },
  {
    "text": "servers and a maximum of 200 servers and i want to watch them in this availability zone",
    "start": "1888320",
    "end": "1894080"
  },
  {
    "text": "or these availability zones so you can have this application running across multiple availability zones",
    "start": "1894080",
    "end": "1900480"
  },
  {
    "text": "you can also have these things attaching to a load balancer or registering and deregistering with a load balancer as part of auto scale",
    "start": "1900480",
    "end": "1906960"
  },
  {
    "text": "um so lastly now that you've got this min size and max size you either deploy a policy",
    "start": "1906960",
    "end": "1912559"
  },
  {
    "text": "to scale on a metric like cpu utilization you might say i want to scale up when my cpu utilization is over 80",
    "start": "1912559",
    "end": "1920480"
  },
  {
    "text": "on average for over 10 minutes and i want to scale it by this many instances and when i my cpu utilization is below",
    "start": "1920480",
    "end": "1927760"
  },
  {
    "text": "40 for over 10 minutes i want to scale down by this minion further you can also do this on",
    "start": "1927760",
    "end": "1932960"
  },
  {
    "text": "schedules you could schedule at certain times of the day where you know you're going to have a huge spike in traffic and you don't want your",
    "start": "1932960",
    "end": "1938159"
  },
  {
    "text": "application responding to those huge spikes you'd rather steal ahead of time you can do something like auto scale by schedule",
    "start": "1938159",
    "end": "1944960"
  },
  {
    "text": "um say at 5pm i want to scale up you know from four servers to 200 and then at",
    "start": "1944960",
    "end": "1951600"
  },
  {
    "text": "10 pm i know my traffic drops off or out drastically i want to scale back down to full",
    "start": "1951600",
    "end": "1957600"
  },
  {
    "text": "so next is our elastic load balancing product which i mentioned earlier and it's often shortened to elb",
    "start": "1959440",
    "end": "1967519"
  },
  {
    "start": "1961000",
    "end": "2095000"
  },
  {
    "text": "and um it's a highly scalable load balancing application it distributes load across multiple ec2",
    "start": "1967519",
    "end": "1974000"
  },
  {
    "text": "instances in multiple availability zones and um some keys to this one it works in",
    "start": "1974000",
    "end": "1979440"
  },
  {
    "text": "conjunction with auto scale if you choose you can use it separately but you can also use it auto scaling and it will automatically um",
    "start": "1979440",
    "end": "1986960"
  },
  {
    "text": "auto scaling will automatically register and do register instances from it as autoscaling ads into the fleet of web",
    "start": "1986960",
    "end": "1992240"
  },
  {
    "text": "servers or app servers or whatever it might be also classically load balanced and scales on its own based on traffic so it",
    "start": "1992240",
    "end": "1998720"
  },
  {
    "text": "will deploy more resources as traffic scales and will also shrink down as traffic cools over time",
    "start": "1998720",
    "end": "2006240"
  },
  {
    "text": "you can always use this to spread traffic across multiple instances in multiple availability zones within a",
    "start": "2006240",
    "end": "2011840"
  },
  {
    "text": "single region so very powerful it also provides health checks which you can configure",
    "start": "2011840",
    "end": "2018240"
  },
  {
    "text": "which will help check an instant and then remove unhealthy instances out of the fleet",
    "start": "2018240",
    "end": "2023360"
  },
  {
    "text": "um and stop sending traffic to them until they start passing health checks again so that's powerful you set up the health",
    "start": "2023360",
    "end": "2029519"
  },
  {
    "text": "check when it starts degrading it will remove it from the load balancer and stop sending traffic to it until it",
    "start": "2029519",
    "end": "2034799"
  },
  {
    "text": "actually starts passing health checks again another thing you know we always recommend",
    "start": "2034799",
    "end": "2040240"
  },
  {
    "text": "you know when you're building out a new app if you can separate session state from your application and store it",
    "start": "2040240",
    "end": "2045360"
  },
  {
    "text": "outside of your particular server um you know at a key value store in",
    "start": "2045360",
    "end": "2050720"
  },
  {
    "text": "memcache and dynamodb a variety of different locations you can store your session data in that database but many many applications store",
    "start": "2050720",
    "end": "2058720"
  },
  {
    "text": "session use your session data right on the server so pld does support session stickiness as",
    "start": "2058720",
    "end": "2064560"
  },
  {
    "text": "well or session affinity where it will record route request for the same instance if you set up this session sticking your search session",
    "start": "2064560",
    "end": "2070638"
  },
  {
    "text": "affinity um so it'll it'll always send the same user back to the same server um and that that can be important if",
    "start": "2070639",
    "end": "2077839"
  },
  {
    "text": "you're storing section on the server um because you don't want the user have to log in when they end up at a new server",
    "start": "2077839",
    "end": "2083118"
  },
  {
    "text": "um lastly just to round out elastic load balancing it does support ssl and it also does publish metrics cloud",
    "start": "2083119",
    "end": "2089118"
  },
  {
    "text": "watch",
    "start": "2089119",
    "end": "2091358"
  },
  {
    "text": "next we're going to move into the storage um part of the stack and our first service we're going to",
    "start": "2094639",
    "end": "2100079"
  },
  {
    "start": "2095000",
    "end": "2267000"
  },
  {
    "text": "talk about is simple storage service so f3 is a durable object storage",
    "start": "2100079",
    "end": "2105200"
  },
  {
    "text": "um it is it it has eleven nines of durability on objects um and you might say wow 11 9",
    "start": "2105200",
    "end": "2112560"
  },
  {
    "text": "how does that work well when you upload an object to s3 that object is replicated around the region",
    "start": "2112560",
    "end": "2118560"
  },
  {
    "text": "so there's multiple replicas of that object available around the region and then we deploy algorithms to keep",
    "start": "2118560",
    "end": "2124720"
  },
  {
    "text": "check on those objects to make sure they don't degrade if they degrade we'll destroy them and regenerate them from a clean object",
    "start": "2124720",
    "end": "2130960"
  },
  {
    "text": "so very highly durable storage um and also it's unlimited i mean you just keep on uploading you pay for what you",
    "start": "2130960",
    "end": "2137119"
  },
  {
    "text": "use um you can store up to five terabyte objects and the way this works um you create",
    "start": "2137119",
    "end": "2142480"
  },
  {
    "text": "buckets you know bucket acts like a drive you can deploy folder structures within a bucket",
    "start": "2142480",
    "end": "2147760"
  },
  {
    "text": "um this is not a file system though and that's one of the things this is an object store um then you know",
    "start": "2147760",
    "end": "2154160"
  },
  {
    "text": "you can deploy access control over your buckets or your objects you can specify what um",
    "start": "2154160",
    "end": "2160240"
  },
  {
    "text": "who is allowed into a bucket or who's allowed to access an object and who's not and you can create users",
    "start": "2160240",
    "end": "2166000"
  },
  {
    "text": "via iam that allows certain you know users into the bucket to put things and maybe a different user that's",
    "start": "2166000",
    "end": "2171520"
  },
  {
    "text": "allowed to get things out you also can use ip addressing in a variety of different ways that you know manage access control",
    "start": "2171520",
    "end": "2178079"
  },
  {
    "text": "um on the encryption side of things you can always use ssl to upload objects so you get",
    "start": "2178079",
    "end": "2184839"
  },
  {
    "text": "um encrypt your data in transit and then you can also encrypt it at rest with our server-side encryption",
    "start": "2184839",
    "end": "2190320"
  },
  {
    "text": "further you can pre-encrypt prior to uploading to the cloud as well um supports multi-part uploads so if",
    "start": "2190320",
    "end": "2196320"
  },
  {
    "text": "you're uploading very large large objects you can do a parallel upload um sports versioning you can expire objects",
    "start": "2196320",
    "end": "2202720"
  },
  {
    "text": "out and remove old ones we're going to also talk about on the ability to transition objects so we're talking about our simple",
    "start": "2202720",
    "end": "2209119"
  },
  {
    "text": "storage service now but in a few slides we're going to talk about glacier which is our cold storage",
    "start": "2209119",
    "end": "2214560"
  },
  {
    "text": "solution and you have the ability to push objects into s3 and then set up a transition policy",
    "start": "2214560",
    "end": "2221040"
  },
  {
    "text": "where maybe after 30 days a particular object gets retired or transitioned over to glacier for",
    "start": "2221040",
    "end": "2227040"
  },
  {
    "text": "long-term storage um you can set up access logging onto graph goes into a bucket",
    "start": "2227040",
    "end": "2232079"
  },
  {
    "text": "for an object and who grabs it and does what and you have the ability to access log and put those access blogs in s3",
    "start": "2232079",
    "end": "2238079"
  },
  {
    "text": "you can also host content out of s3 it can be static content from your website",
    "start": "2238079",
    "end": "2243280"
  },
  {
    "text": "from your own custom origin or you can actually post an entire static site out of an s3",
    "start": "2243280",
    "end": "2248720"
  },
  {
    "text": "bucket um and uh you know lastly you've got the ability to use our aws import export service so if",
    "start": "2248720",
    "end": "2256079"
  },
  {
    "text": "you've got a large amount of data and you don't want to upload it via the internet um you can actually send this drive yeah",
    "start": "2256079",
    "end": "2261760"
  },
  {
    "text": "this important exports here okay so spotify",
    "start": "2261760",
    "end": "2269040"
  },
  {
    "start": "2267000",
    "end": "2298000"
  },
  {
    "text": "many people are familiar with the spotify application you know um you go to create custom playlists share music with friends lots of great",
    "start": "2269040",
    "end": "2275359"
  },
  {
    "text": "capabilities of this application um got a huge content library and um you",
    "start": "2275359",
    "end": "2280720"
  },
  {
    "text": "know they needed a storage solution that could scale quickly without incurring long lead times need to have be highly",
    "start": "2280720",
    "end": "2286079"
  },
  {
    "text": "durable they found simple storage service and they're very happy with a simple code service and they do host their library",
    "start": "2286079",
    "end": "2293359"
  },
  {
    "text": "on f3 um so next we're going to transition",
    "start": "2293359",
    "end": "2298880"
  },
  {
    "start": "2298000",
    "end": "2401000"
  },
  {
    "text": "into our elastic block store product so when you launch a server in ec2",
    "start": "2298880",
    "end": "2306079"
  },
  {
    "text": "and you want to mount a persistent drive that will live beyond the life of that particular ec2",
    "start": "2306079",
    "end": "2312079"
  },
  {
    "text": "instance you would mount an elastic block store drive so the high performance block storage",
    "start": "2312079",
    "end": "2317839"
  },
  {
    "text": "device can be anywhere from one gig to one terabyte in size and so you basically would create a",
    "start": "2317839",
    "end": "2322880"
  },
  {
    "text": "volume you mount it to a particular instance and then you can format it once it's mounted you can also raid um use you know",
    "start": "2322880",
    "end": "2330240"
  },
  {
    "text": "software raid to raid together multiple you know drive or multiple block storage volumes",
    "start": "2330240",
    "end": "2336480"
  },
  {
    "text": "and secure and privacy your instance you can actually specify performance levels you want to achieve",
    "start": "2336480",
    "end": "2341520"
  },
  {
    "text": "with eds you can specify i want to deploy a one terabyte volume and i want it to have up to four",
    "start": "2341520",
    "end": "2347280"
  },
  {
    "text": "thousand um iops uh in performance and we will we will create a volume that can achieve that",
    "start": "2347280",
    "end": "2353440"
  },
  {
    "text": "kind of i o um also it's a you know it has a good availability development",
    "start": "2353440",
    "end": "2360720"
  },
  {
    "text": "solution we actually replicate that volume to another volume inside of the availability zone so",
    "start": "2360720",
    "end": "2366000"
  },
  {
    "text": "um when you when you've got primary volume you also always have a volume that's being replicated to in case something that happened to that primary",
    "start": "2366000",
    "end": "2371839"
  },
  {
    "text": "volume um you also have the ability to snapshot those volumes which i showed you in the",
    "start": "2371839",
    "end": "2377119"
  },
  {
    "text": "ec2 slide earlier and then store those snapshots and s3 which is highly durable one of the things to note is",
    "start": "2377119",
    "end": "2382720"
  },
  {
    "text": "if something were to happen to that particular volume you'd always have the ability to launch that from a snapshot um in any of the",
    "start": "2382720",
    "end": "2389280"
  },
  {
    "text": "availability zones in the region and lastly you can actually monitor these drives with cloud watches through",
    "start": "2389280",
    "end": "2394400"
  },
  {
    "text": "the metrics in terms of i o and a variety of other metrics",
    "start": "2394400",
    "end": "2399920"
  },
  {
    "text": "okay i'm going to briefly talk about glacier we mentioned this earlier as well glaciers are lower cost storage it's",
    "start": "2400320",
    "end": "2406960"
  },
  {
    "start": "2401000",
    "end": "2453000"
  },
  {
    "text": "great for backup and archival it's for data that you don't frequently access it's meant for long-term storage",
    "start": "2406960",
    "end": "2414000"
  },
  {
    "text": "comes in at a very low cost around a cent per gig per month with no upfront commitment",
    "start": "2414000",
    "end": "2419040"
  },
  {
    "text": "it has the same durability as f3 and further you can store data in f3 and then transition to glacier",
    "start": "2419040",
    "end": "2424640"
  },
  {
    "text": "and then you just simply go back to the s3 console after you've tiered it off and you say i",
    "start": "2424640",
    "end": "2430079"
  },
  {
    "text": "want to restore this particular file from the s3 console and it will pull it back that's where you can set up a notification so you",
    "start": "2430079",
    "end": "2436079"
  },
  {
    "text": "know when the object back of this point api based very secure you can use import",
    "start": "2436079",
    "end": "2442240"
  },
  {
    "text": "and export to get data in here and if you're using it natively you create bulk very similar to an f3 bucket",
    "start": "2442240",
    "end": "2449440"
  },
  {
    "text": "okay now we're going to transition the database area of our stack and our first service",
    "start": "2450720",
    "end": "2456960"
  },
  {
    "start": "2453000",
    "end": "2560000"
  },
  {
    "text": "so you can always run databases on ec2 run your own database roll your own database you can use any database",
    "start": "2456960",
    "end": "2463119"
  },
  {
    "text": "technology that you want but we also offer a database as a service",
    "start": "2463119",
    "end": "2468319"
  },
  {
    "text": "product called relational database service or rds and um essentially what it is um and we",
    "start": "2468319",
    "end": "2474640"
  },
  {
    "text": "offer a variety of different platforms mysql sql server or oracle and you do launch the native mysql sql server or oracle",
    "start": "2474640",
    "end": "2482560"
  },
  {
    "text": "um you know versions you have to choose which version you want to launch we recently just released 5.6 for my sql",
    "start": "2482560",
    "end": "2491200"
  },
  {
    "text": "um it's going to it's going to launch it with the kind of the standard sensible default settings out of the box um you can set up",
    "start": "2491359",
    "end": "2497920"
  },
  {
    "text": "automated patching and how long you want to keep or when you want the automated patching to happen you set up your maintenance",
    "start": "2497920",
    "end": "2503119"
  },
  {
    "text": "window you can also set up automated backups you can use point in time restore",
    "start": "2503119",
    "end": "2508720"
  },
  {
    "text": "you can specify how long you want to keep backups and so on you can provision i o similar to ebs you",
    "start": "2508720",
    "end": "2514800"
  },
  {
    "text": "can specify how much io you want to provision and oracle in my sql can handle up to 30 000 iops",
    "start": "2514800",
    "end": "2520560"
  },
  {
    "text": "or 30 000 ios or reads and writes per second it also has a built-in failover solution",
    "start": "2520560",
    "end": "2526640"
  },
  {
    "text": "where you can set up a master slave environment a master running in one availability zone and a slave running in a second",
    "start": "2526640",
    "end": "2532160"
  },
  {
    "text": "availability zone and then it will automatically fail over from master to slave with about a one to three minute um you",
    "start": "2532160",
    "end": "2538480"
  },
  {
    "text": "know failover time between master and slave and lastly if you're running uh mysql you have the ability to launch",
    "start": "2538480",
    "end": "2544880"
  },
  {
    "text": "read replicas and separate the reads from your master database so that these you're going against read replicas you",
    "start": "2544880",
    "end": "2550319"
  },
  {
    "text": "create and writes are going against your your master",
    "start": "2550319",
    "end": "2556160"
  },
  {
    "text": "we also have a no sql offering called dynamodb and uh you know it's a key value pair",
    "start": "2558960",
    "end": "2565440"
  },
  {
    "start": "2560000",
    "end": "2649000"
  },
  {
    "text": "nosql database um fast and predictable performance um and when i say that you have the",
    "start": "2565440",
    "end": "2571680"
  },
  {
    "text": "ability to dial up or dial down how much you read and write capacity you want so you could say to start off i",
    "start": "2571680",
    "end": "2577200"
  },
  {
    "text": "want 20 reads per second and 10 right and it will actually provision the right resources given your amount of",
    "start": "2577200",
    "end": "2583119"
  },
  {
    "text": "data to handle 20 reads and 10 writes per second but then as your application scales you can",
    "start": "2583119",
    "end": "2588319"
  },
  {
    "text": "twist that dial and people have twisted that dial to extreme um you know extreme highly you know",
    "start": "2588319",
    "end": "2595839"
  },
  {
    "text": "available throughputs of things like you know over a hundred thousand of um or in a hundred thousand range of",
    "start": "2595839",
    "end": "2603119"
  },
  {
    "text": "you know reads and rents per second and so it could fail to enormous proportion",
    "start": "2603119",
    "end": "2608560"
  },
  {
    "text": "it all the data that you put in dynamodb is replicated around the region so there",
    "start": "2608560",
    "end": "2614640"
  },
  {
    "text": "are multiple replicas so any servers running in any of the availability zones in the region to call their local api endpoint and the",
    "start": "2614640",
    "end": "2621520"
  },
  {
    "text": "data you know will be retrievable in single digit milliseconds in those availability zones and so",
    "start": "2621520",
    "end": "2627839"
  },
  {
    "text": "everything is ssd back and very fast also integrates the cloud watch i am is",
    "start": "2627839",
    "end": "2633440"
  },
  {
    "text": "built-ins you can specify who has access to a particular table and who doesn't and for what types of purposes and",
    "start": "2633440",
    "end": "2639280"
  },
  {
    "text": "lastly it integrates with our elastic mapreduce and redshift products that's slightly",
    "start": "2639280",
    "end": "2644800"
  },
  {
    "text": "integrated with those two um next is sqs our simple queue service",
    "start": "2644800",
    "end": "2652240"
  },
  {
    "start": "2649000",
    "end": "2751000"
  },
  {
    "text": "so um it's it's a queueing service we also have a messaging service called sms which is published in scribe messaging",
    "start": "2652240",
    "end": "2658319"
  },
  {
    "text": "or a version of that and um the queuing service why would you use a queuing service well let's say i want to build an application",
    "start": "2658319",
    "end": "2664800"
  },
  {
    "text": "and i want to um decouple certain components from the front end experience so let's say i've got a user uploading",
    "start": "2664800",
    "end": "2669920"
  },
  {
    "text": "videos i may have a user upload a video once they upload it to the server i'm gonna i'm gonna push that video to s3",
    "start": "2669920",
    "end": "2676560"
  },
  {
    "text": "and maybe i need to transport this video into different formats so i'm gonna send a message over to sqs saying hey um",
    "start": "2676560",
    "end": "2684000"
  },
  {
    "text": "there's a video in f3 that needs to be transcoded and now i might now my my web server continues on the",
    "start": "2684000",
    "end": "2689200"
  },
  {
    "text": "workload we're processing the user request and responding back to the user their upload is complete but i might",
    "start": "2689200",
    "end": "2695839"
  },
  {
    "text": "have worker agents that are pulling that that cue that transcodes you to go and grab",
    "start": "2695839",
    "end": "2702240"
  },
  {
    "text": "the you know the video you know the url for the video at s3 and then potentially go and push it to our elastic transcode",
    "start": "2702240",
    "end": "2707760"
  },
  {
    "text": "service or or to use an api based um service um from one of our",
    "start": "2707760",
    "end": "2712960"
  },
  {
    "text": "partners or three potentially run their own um ffmpeg transcoding on ec2 you know any",
    "start": "2712960",
    "end": "2719040"
  },
  {
    "text": "of those possibilities exist you know they use the cues so they decouple the back end work of transcoding from",
    "start": "2719040",
    "end": "2725040"
  },
  {
    "text": "the front end um where the user is doing the upload so it's a reliable service",
    "start": "2725040",
    "end": "2730400"
  },
  {
    "text": "um scales where you need to messages are replicated around the region and available from any endpoint and it's secure you actually um use apis",
    "start": "2730400",
    "end": "2738000"
  },
  {
    "text": "with your access key to get messages out very simple um apis to call to send and receive",
    "start": "2738000",
    "end": "2744839"
  },
  {
    "text": "messages cloud search is another service that uh",
    "start": "2744839",
    "end": "2750640"
  },
  {
    "text": "you know it's based on the amazon a9 search engine it's a elastic search engine",
    "start": "2750640",
    "end": "2755680"
  },
  {
    "start": "2751000",
    "end": "2790000"
  },
  {
    "text": "fully managed lots of associated features it scales based on the number of items you add the",
    "start": "2755680",
    "end": "2762000"
  },
  {
    "text": "index your document server will scale based on the number of documents or items you add into the index as well as it will scale based on the",
    "start": "2762000",
    "end": "2768720"
  },
  {
    "text": "number of searches that are being done against the server from users it has some very sophisticated features",
    "start": "2768720",
    "end": "2774480"
  },
  {
    "text": "such as faceting spending giving them software you can also write custom rank expressions",
    "start": "2774480",
    "end": "2780079"
  },
  {
    "text": "um so really great way to deploy a search engine um integrate it into your business um",
    "start": "2780079",
    "end": "2785680"
  },
  {
    "text": "and do it very rapidly cloud front is our global cdn like we",
    "start": "2785680",
    "end": "2792240"
  },
  {
    "start": "2790000",
    "end": "2915000"
  },
  {
    "text": "talked about there are over for somewhere around 40 edge edge locations available and that's",
    "start": "2792240",
    "end": "2798319"
  },
  {
    "text": "always growing so what it does is it provides a caching mechanism for your your overall",
    "start": "2798319",
    "end": "2803359"
  },
  {
    "text": "application or delivering your content so let's say you have users um around the globe and you're trying to get that",
    "start": "2803359",
    "end": "2809200"
  },
  {
    "text": "content as close to those users as possible quad front um would be the product you",
    "start": "2809200",
    "end": "2814800"
  },
  {
    "text": "know that you'd want to use you you um there's three different use cases there's maybe the static content",
    "start": "2814800",
    "end": "2821440"
  },
  {
    "text": "where where a user requests your web you know contacts your particular um",
    "start": "2821440",
    "end": "2826560"
  },
  {
    "text": "your particular web application and your web application says please download all these pieces the images the videos the",
    "start": "2826560",
    "end": "2832240"
  },
  {
    "text": "css the javascript from cloudfront and then when they called cloudfront to get them it retrieves them from very local cache",
    "start": "2832240",
    "end": "2838000"
  },
  {
    "text": "notes second use case might be um putting cloudfront in front of your website and",
    "start": "2838000",
    "end": "2844000"
  },
  {
    "text": "we call that dynamic site acceleration so crowdfund proxies all requests back to your actual web application so",
    "start": "2844000",
    "end": "2851440"
  },
  {
    "text": "in this example up above in the reference architecture you can see it's getting images out of s3 and it's using um",
    "start": "2851440",
    "end": "2857839"
  },
  {
    "text": "there's there's multiple um uh multiple origins and there are different cache behaviors so if",
    "start": "2857839",
    "end": "2864559"
  },
  {
    "text": "if the um the request has images slashing it images slash star will get it to get them out of f3 um",
    "start": "2864559",
    "end": "2872559"
  },
  {
    "text": "and it'll cache them locally and then you know they're locally cached and available to users or things that go back to your custom",
    "start": "2872559",
    "end": "2878079"
  },
  {
    "text": "origin it will actually do tcp optimization between the cloud footage and your custom origin to actually get",
    "start": "2878079",
    "end": "2883440"
  },
  {
    "text": "your dynamic content on the calls back your you know web app and your database",
    "start": "2883440",
    "end": "2888559"
  },
  {
    "text": "broker them quicker with tcp optimization between the cloud front edge and your application the third way to use cloudflare is for",
    "start": "2888559",
    "end": "2895520"
  },
  {
    "text": "streaming services such as rtmp where you can stream objects directly out of an s3 bucket",
    "start": "2895520",
    "end": "2901119"
  },
  {
    "text": "people also do live streaming with adobe media server and microsoft media server",
    "start": "2901119",
    "end": "2906319"
  },
  {
    "text": "so many streaming options available as well from cloud",
    "start": "2906319",
    "end": "2914319"
  },
  {
    "text": "next we have a managed hadoop offering we call elastic map reduce or emr and allows you to build an elastic",
    "start": "2914319",
    "end": "2921040"
  },
  {
    "start": "2915000",
    "end": "2965000"
  },
  {
    "text": "hadoop cluster and launch it very rapidly this product integrates tightly with s3 for storing",
    "start": "2921040",
    "end": "2927440"
  },
  {
    "text": "the data ingesting it into elastic map release processing and putting it back into s3 so it's great",
    "start": "2927440",
    "end": "2933200"
  },
  {
    "text": "highly durable place to store your data for processing and then after processing",
    "start": "2933200",
    "end": "2938319"
  },
  {
    "text": "as well i mean also tightly integrates with dynamodb you can write high queries that actually will go and query the sqlite statements",
    "start": "2938319",
    "end": "2944800"
  },
  {
    "text": "off your dynamodb table very scalable you can turn up a cluster you can add nodes you",
    "start": "2944800",
    "end": "2951040"
  },
  {
    "text": "can use spot instances to augment and you know very cost effective and",
    "start": "2951040",
    "end": "2956480"
  },
  {
    "text": "easy solution to use from running your own customized cluster on eg2 or in your own data set",
    "start": "2956480",
    "end": "2963119"
  },
  {
    "text": "okay we're going to touch on the deployment and administration tools so here we're going to talk about",
    "start": "2963760",
    "end": "2968880"
  },
  {
    "start": "2965000",
    "end": "3051000"
  },
  {
    "text": "something called beanstalk elastified stuff so what elastic beanstalk is is it's our app container it allows the developer to",
    "start": "2968880",
    "end": "2976720"
  },
  {
    "text": "you know not worry about the infrastructure required to run a web application we take care of that for you all you",
    "start": "2976720",
    "end": "2981839"
  },
  {
    "text": "need to do is write your code and use a variety of tools such as the clips visual studio or git to deploy it",
    "start": "2981839",
    "end": "2988400"
  },
  {
    "text": "to a particular application and you know we support net php java python",
    "start": "2988400",
    "end": "2994640"
  },
  {
    "text": "ruby and node.js um we automatically create the load balancers the instances behind there we",
    "start": "2994640",
    "end": "3001119"
  },
  {
    "text": "set up auto scaling and all the monitoring we'll aggregate logs off the instances and push those up to s3",
    "start": "3001119",
    "end": "3007599"
  },
  {
    "text": "um you have the ability to create multiple environments for an application so you can create a dev",
    "start": "3007599",
    "end": "3012880"
  },
  {
    "text": "environment with a specific url for dev a test environment url in a production application and you",
    "start": "3012880",
    "end": "3019040"
  },
  {
    "text": "can deploy different versions of code to each one of those",
    "start": "3019040",
    "end": "3024880"
  },
  {
    "text": "environments and you can all easily roll back deployments as well and lastly the really great thing about",
    "start": "3024880",
    "end": "3029920"
  },
  {
    "text": "this is you have full resources full access to all those resources so um you can still take your ssh feed and um",
    "start": "3029920",
    "end": "3038000"
  },
  {
    "text": "log into the instance or your you know your your um or rdp into the instances and um",
    "start": "3038000",
    "end": "3043040"
  },
  {
    "text": "gain access troubleshoot do whatever you need to do inside of an instance very powerful um",
    "start": "3043040",
    "end": "3049839"
  },
  {
    "text": "next in the uh deployment integration tools area is cloud formation and what this is it's a scripting framework for creating",
    "start": "3049839",
    "end": "3056240"
  },
  {
    "start": "3051000",
    "end": "3119000"
  },
  {
    "text": "aws resources and you can create resources with inside of our json scripting",
    "start": "3056240",
    "end": "3062880"
  },
  {
    "text": "environment and and you can deploy them in stacks you can deploy a whole application as",
    "start": "3062880",
    "end": "3068400"
  },
  {
    "text": "one template json template that you write out at the push of a button or using cli or api command",
    "start": "3068400",
    "end": "3076078"
  },
  {
    "text": "and uh you know really cool um you can pass in parameters so you can",
    "start": "3076160",
    "end": "3081440"
  },
  {
    "text": "say well i want to create an application and here's the script for my application but i want to",
    "start": "3081440",
    "end": "3087200"
  },
  {
    "text": "um you know for dev i might only want to run one instance on a small for test time i want to run two instances and two availability zones",
    "start": "3087200",
    "end": "3093760"
  },
  {
    "text": "and i want to run you know small and then in production i want to run 20 instances on extra larges behind the",
    "start": "3093760",
    "end": "3100240"
  },
  {
    "text": "load balancer so you could have the number of instances and the size of the instances passing",
    "start": "3100240",
    "end": "3106640"
  },
  {
    "text": "the parameters and you can define what you want to pass into these parameters but when you when you lay out the actual",
    "start": "3106640",
    "end": "3112000"
  },
  {
    "text": "confirmation stacks and scripts very powerful tool",
    "start": "3112000",
    "end": "3116800"
  },
  {
    "text": "also we have identity access management which allows you to create groups and roles assign",
    "start": "3117760",
    "end": "3123200"
  },
  {
    "text": "permissions and then assign users to those groups we also have a variety of sdks um that",
    "start": "3123200",
    "end": "3128240"
  },
  {
    "text": "wrap the restful apis that's exposed for each service into some very commonly used things for each",
    "start": "3128240",
    "end": "3133760"
  },
  {
    "text": "service so you don't have to use the very granular api you always have the ability to do that but you know if you use the php or python or ruby",
    "start": "3133760",
    "end": "3140960"
  },
  {
    "text": "sdk or any of the sdks it will group things like i want to put an object in s3 it's a simple call to do that",
    "start": "3140960",
    "end": "3152160"
  },
  {
    "text": "okay so there's many other services um that we have uh on our platform i would you know highly recommend you go out and learn more",
    "start": "3152160",
    "end": "3158400"
  },
  {
    "start": "3153000",
    "end": "3168000"
  },
  {
    "text": "about you know email services workflow notifications caching and so on",
    "start": "3158400",
    "end": "3166079"
  },
  {
    "text": "i'm going to mention a couple things about two other services that were recently launched we recently launched redshift which is our petabyte scale um",
    "start": "3166079",
    "end": "3173040"
  },
  {
    "start": "3168000",
    "end": "3202000"
  },
  {
    "text": "data warehousing solution on amazon um you know it comes in around a tenth of cost of traditional weight",
    "start": "3173040",
    "end": "3178319"
  },
  {
    "text": "data warehouses and it has the ability to you launch it very easily there's a couple of buttons",
    "start": "3178319",
    "end": "3183839"
  },
  {
    "text": "you know knobs you can twist um you can always add nodes to the cluster to grow your cluster out it's pronounced very small and grow to",
    "start": "3183839",
    "end": "3190079"
  },
  {
    "text": "up to 1.6 petabytes and it's very compatible with popular bi tools and",
    "start": "3190079",
    "end": "3195359"
  },
  {
    "text": "different tools you use for querying and access to it we also have elastic transcoder which we",
    "start": "3195359",
    "end": "3201520"
  },
  {
    "text": "just recently launched so um you know what this allows you to do is we use the the video",
    "start": "3201520",
    "end": "3206800"
  },
  {
    "start": "3202000",
    "end": "3254000"
  },
  {
    "text": "example earlier um let's say i've got that that video item in a queue that i want to transcode",
    "start": "3206800",
    "end": "3211920"
  },
  {
    "text": "i can call elastic transfer what i do is i define a pipeline and it specifies what the input bucket is",
    "start": "3211920",
    "end": "3217680"
  },
  {
    "text": "for my content and what the output bucket is then i define a preset which says i want to when i run a job i want to run it with a",
    "start": "3217680",
    "end": "3224079"
  },
  {
    "text": "particular preset and this preset is going to create a 1080p mp4 output let's say and then next",
    "start": "3224079",
    "end": "3231359"
  },
  {
    "text": "i create a job and i say i want to i want to run a job on this pipeline with this particular preset or treatment",
    "start": "3231359",
    "end": "3236960"
  },
  {
    "text": "and the output will be put in the destination bucket and from there i can start serving that concept",
    "start": "3236960",
    "end": "3242960"
  },
  {
    "text": "very powerful tool compared to rolling your own transcoder inside of ec2 but you know",
    "start": "3242960",
    "end": "3248880"
  },
  {
    "text": "many people might want to do that as well okay so we're going to run through a quick use case and then i'm going to",
    "start": "3248880",
    "end": "3254800"
  },
  {
    "start": "3254000",
    "end": "3261000"
  },
  {
    "text": "open this up for questions so um this is on utility computing there are many different types of things you might do with on",
    "start": "3254800",
    "end": "3261839"
  },
  {
    "start": "3261000",
    "end": "3276000"
  },
  {
    "text": "utility computing you might you know run a database you might run a load balancer or a workflow or you might just be using it for running web servers",
    "start": "3261839",
    "end": "3268720"
  },
  {
    "text": "and you know many benefits for doing utility computing in the cloud so we talked about our region",
    "start": "3268720",
    "end": "3276559"
  },
  {
    "text": "we talked about how availability zones exist inside of a region and we also talked about so so when i",
    "start": "3276559",
    "end": "3284400"
  },
  {
    "start": "3284000",
    "end": "3338000"
  },
  {
    "text": "let's say i wanted to launch um launch resources using our cli tool um i've got the",
    "start": "3284400",
    "end": "3289599"
  },
  {
    "text": "ability to go global in minutes i talked about that earlier well here's a couple api or cli call using",
    "start": "3289599",
    "end": "3295359"
  },
  {
    "text": "our command line interface calls to launch um ec2 instances and this is going to launch with this ami",
    "start": "3295359",
    "end": "3300799"
  },
  {
    "text": "it's going to last three instances of eu s1a that are m1 small right there and i'm going to run another",
    "start": "3300799",
    "end": "3306160"
  },
  {
    "text": "cli command which is going to launch five instances the us1c that are medium",
    "start": "3306160",
    "end": "3312000"
  },
  {
    "text": "very easy to do i just launched eight instances and i can you know bootstrap my applications on",
    "start": "3312000",
    "end": "3317119"
  },
  {
    "text": "those launches as well or i can be launching emis that are golden that already have all my data on",
    "start": "3317119",
    "end": "3322319"
  },
  {
    "text": "them to launch that particular application and run it um next i can uh go launch some in north",
    "start": "3322319",
    "end": "3329359"
  },
  {
    "text": "america i'm gonna launch two in u.s east 1b and two more in usc 1d",
    "start": "3329359",
    "end": "3334880"
  },
  {
    "text": "next i'm going to create a load balancer i'm going to authorize ports over in europe and i'm going to create an",
    "start": "3334880",
    "end": "3340000"
  },
  {
    "text": "auto scaling group so this shows you the power of um",
    "start": "3340000",
    "end": "3345440"
  },
  {
    "text": "you know you know the ability to launch resources very rapidly and provision what you need when you need it",
    "start": "3345440",
    "end": "3351359"
  },
  {
    "text": "just the same you can you can list your resources you can update them and you can turn them down via the console via the command line",
    "start": "3351359",
    "end": "3358000"
  },
  {
    "text": "tool or via the api this is a brief look at the console so the console has a rich",
    "start": "3358000",
    "end": "3364240"
  },
  {
    "start": "3364000",
    "end": "3410000"
  },
  {
    "text": "set of console-based services for doing similar things that i showed that i showed you in that last example",
    "start": "3364240",
    "end": "3369520"
  },
  {
    "text": "um and we come to the summary so",
    "start": "3369520",
    "end": "3374559"
  },
  {
    "text": "you know we talked about why customers are adopting cloud computing and in many reasons variable expense",
    "start": "3374559",
    "end": "3380000"
  },
  {
    "text": "reaching economies of scale they clicking for their own data centers um and benefiting from those on the ability to use capacity elastically and",
    "start": "3380000",
    "end": "3387440"
  },
  {
    "text": "match your um your knee your your deployment curve to your demand curve um the speed and agility you can you can",
    "start": "3387440",
    "end": "3394240"
  },
  {
    "text": "reach for deploying new projects the ability to fail fast innovate quickly um and and you know",
    "start": "3394240",
    "end": "3400079"
  },
  {
    "text": "fail cheaply and be able to innovate more focusing on your business and lastly",
    "start": "3400079",
    "end": "3405119"
  },
  {
    "text": "going global one minute",
    "start": "3405119",
    "end": "3408078"
  },
  {
    "start": "3410000",
    "end": "3599000"
  },
  {
    "text": "thank you all um i'm gonna go to the q a now we've got a few minutes available for q",
    "start": "3410160",
    "end": "3415440"
  },
  {
    "text": "a so i'm going to move over to that and i'm going to try to answer a few questions",
    "start": "3415440",
    "end": "3419839"
  },
  {
    "text": "all right just give me one second here",
    "start": "3420559",
    "end": "3424960"
  },
  {
    "text": "so somebody asked what type of hardware is used to create the vpn connection between our local network and our amazon vpc um so you know from",
    "start": "3428559",
    "end": "3436319"
  },
  {
    "text": "your end perspective you can run any um any router that router or firewall",
    "start": "3436319",
    "end": "3441440"
  },
  {
    "text": "or endpoint it could be a virtual appliance as well that can support ipsec there's a set of",
    "start": "3441440",
    "end": "3446640"
  },
  {
    "text": "requirements on our um in our vpc guide um and then on our end um you know that it",
    "start": "3446640",
    "end": "3453200"
  },
  {
    "text": "ends at a um an appliance in our end that terminates those connections you know for your particular vpc",
    "start": "3453200",
    "end": "3459599"
  },
  {
    "text": "so um you can use anything on your end and what on our end um you know we've got an appliance you know that you're going",
    "start": "3459599",
    "end": "3464799"
  },
  {
    "text": "to be determining connections to if you run dual tunnels you terminate those at dual appliances",
    "start": "3464799",
    "end": "3470640"
  },
  {
    "text": "can you suggest some of the better resources for continuing to learn about aws um yeah so um what i'd recommend",
    "start": "3472799",
    "end": "3479440"
  },
  {
    "text": "is this um we have a white papers area if you go to aws.amazon.com whitepapers",
    "start": "3479440",
    "end": "3485920"
  },
  {
    "text": "there's a great deal of white papers that dive into particular solutions that are available um on aws um best",
    "start": "3485920",
    "end": "3492559"
  },
  {
    "text": "practice for architecture best place practice for running a database you know and so on um",
    "start": "3492559",
    "end": "3497760"
  },
  {
    "text": "many different many different topics you can find the whitepapers on we also have an architecture center so if you",
    "start": "3497760",
    "end": "3504319"
  },
  {
    "text": "want to learn more about architecture we saw some reference architectures in the slides up in the upper right-hand",
    "start": "3504319",
    "end": "3510079"
  },
  {
    "text": "corner when we were going through um the different services well we have an architecture center it's at aws.amazon",
    "start": "3510079",
    "end": "3517040"
  },
  {
    "text": "architecture and you can see different architectures for batch workloads or for on content delivery or for running a web",
    "start": "3517040",
    "end": "3523280"
  },
  {
    "text": "application that's highly available and all those are available there so i'd recommend going up and then lastly",
    "start": "3523280",
    "end": "3529280"
  },
  {
    "text": "if you want more documentation on each one of these products go to aws.amazon.com",
    "start": "3529280",
    "end": "3534640"
  },
  {
    "text": "from there you can navigate to the product and on the left-hand side of every product page there's a link for documentation and the",
    "start": "3534640",
    "end": "3541520"
  },
  {
    "text": "documentation link will take you to um all the developer docs the user guides and all of that to drill down",
    "start": "3541520",
    "end": "3548400"
  },
  {
    "text": "deeply into these products and how to use them there's usually a getting started guide as well so it'll be a very easy you know process",
    "start": "3548400",
    "end": "3554000"
  },
  {
    "text": "to get started you know in a very short amount of time and then you know the level of detail you'd want to go down to on using the apis or whatever",
    "start": "3554000",
    "end": "3560880"
  },
  {
    "text": "you might need to do um",
    "start": "3560880",
    "end": "3566559"
  },
  {
    "text": "somebody else do we have a one-click deployment for drupal so what i'd say um is we've got one",
    "start": "3567520",
    "end": "3573440"
  },
  {
    "text": "point deployments available if you search aws cloud formation um you'll find quite a few different um templates",
    "start": "3573440",
    "end": "3580799"
  },
  {
    "text": "available that are one-click launches of a variety of different application stacks on top of aws so like i told you you can script out",
    "start": "3580799",
    "end": "3586880"
  },
  {
    "text": "your own environment but we also have a lot of pre-built ones that are easy to watch",
    "start": "3586880",
    "end": "3592240"
  },
  {
    "text": "so i think see if we can do one more question here um",
    "start": "3597520",
    "end": "3605279"
  },
  {
    "text": "so the question was what you mentioned windows and linux amis what flavors of linux are available",
    "start": "3608559",
    "end": "3614160"
  },
  {
    "text": "so i'm not sure if i'm going to hit them all but i'll mention a few uh so we've got amazon linux we've got red",
    "start": "3614160",
    "end": "3619520"
  },
  {
    "text": "hat enterprise linux there's suzy linux centos",
    "start": "3619520",
    "end": "3625040"
  },
  {
    "text": "ubuntu and i'm probably missing one or two we also support windows 2003 2008",
    "start": "3625040",
    "end": "3630480"
  },
  {
    "text": "and 2012. all right so uh i think we're to the top of the hour",
    "start": "3630480",
    "end": "3636400"
  },
  {
    "text": "here or to the bottom of the next hour so um thank you all for coming i appreciate your time and",
    "start": "3636400",
    "end": "3642319"
  },
  {
    "text": "um you know watch there are many more other webinars coming out on different topics such as high",
    "start": "3642319",
    "end": "3648160"
  },
  {
    "text": "availability applications thank you very much bye all right thanks so much brett and",
    "start": "3648160",
    "end": "3653200"
  },
  {
    "text": "thanks everyone for attending today i would just like to remind you to please take a second to fill out that survey",
    "start": "3653200",
    "end": "3658799"
  },
  {
    "text": "just let us know what you thought of today's webcast thank you so much",
    "start": "3658799",
    "end": "3665359"
  }
]