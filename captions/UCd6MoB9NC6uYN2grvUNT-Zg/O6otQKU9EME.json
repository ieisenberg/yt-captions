[
  {
    "text": "In this video, you’ll see how to modernize \napplications using Customizations for",
    "start": "0",
    "end": "3918"
  },
  {
    "text": "AWS Control Tower (CfCT) and \nAWS Migration Hub Refactor Spaces.",
    "start": "3918",
    "end": "9092"
  },
  {
    "text": "With this solution, you can incrementally\ntransition to a microservices-based",
    "start": "9630",
    "end": "13118"
  },
  {
    "text": "architecture by using CfCT to deploy \nrelated CloudFormation templates",
    "start": "13118",
    "end": "17021"
  },
  {
    "text": "across multiple AWS accounts, and \nuse the refactor environment to simplify",
    "start": "17021",
    "end": "21163"
  },
  {
    "text": "routing from the legacy \napplication to the new microservice.",
    "start": "21163",
    "end": "24108"
  },
  {
    "text": "Before we start, let’s take a quick \nlook at the solution architecture.",
    "start": "25089",
    "end": "28241"
  },
  {
    "text": "We will use three AWS accounts.",
    "start": "28953",
    "end": "30932"
  },
  {
    "text": "The Refactor Spaces Environment \nOwner account is the foundation",
    "start": "31471",
    "end": "34389"
  },
  {
    "text": "account that holds the \nresources for our refactor spaces.",
    "start": "34389",
    "end": "37187"
  },
  {
    "text": "The Legacy Application account holds \nthe resources associated with our",
    "start": "37967",
    "end": "41219"
  },
  {
    "text": "Amazon Relational Database Service \n(RDS) database and Amazon Elastic",
    "start": "41220",
    "end": "45454"
  },
  {
    "text": "Compute Cloud (EC2) instance.",
    "start": "45454",
    "end": "47467"
  },
  {
    "text": "The Shopping Cart account is a \nmicroservices account that will host our",
    "start": "48395",
    "end": "51368"
  },
  {
    "text": "DynamoDB and our Lambda functions.",
    "start": "51368",
    "end": "53424"
  },
  {
    "text": "Let’s begin in the AWS console, where \nwe’ll navigate to the Management",
    "start": "55601",
    "end": "58905"
  },
  {
    "text": "account for the AWS organization, which\nis where the CfCT solution is installed.",
    "start": "58905",
    "end": "63127"
  },
  {
    "text": "Under CodeCommit, we \ncan view our CfCT repository.",
    "start": "64014",
    "end": "66859"
  },
  {
    "text": "We’ll open the manifest.yaml file, and \nensure that it’s using the latest CfCT version.",
    "start": "69000",
    "end": "73743"
  },
  {
    "text": "This file controls all the resources that \nwill be installed by the CfCT solution.",
    "start": "74643",
    "end": "78481"
  },
  {
    "text": "Let’s edit the file to include the \nresources we want to create.",
    "start": "79127",
    "end": "81747"
  },
  {
    "text": "We’ll specify the target account and \nresources for each stack in a top-down",
    "start": "82687",
    "end": "85965"
  },
  {
    "text": "manner, starting with our \nLegacy Application account.",
    "start": "85966",
    "end": "88254"
  },
  {
    "text": "For the second stack, we’ll specify the \nRefactor Spaces foundation account.",
    "start": "89786",
    "end": "93385"
  },
  {
    "text": "The third stack will launch the \nDynamoDB table and Lambda",
    "start": "94420",
    "end": "96940"
  },
  {
    "text": "functions for our microservices \napplication account.",
    "start": "96941",
    "end": "99421"
  },
  {
    "text": "For demonstration purposes, we have \nalready uploaded each stack’s template",
    "start": "100362",
    "end": "103619"
  },
  {
    "text": "to an Amazon Simple Storage \nService (Amazon S3) bucket.",
    "start": "103619",
    "end": "106727"
  },
  {
    "text": "We’ll commit the changes to the main branch.",
    "start": "107708",
    "end": "109539"
  },
  {
    "text": "Let’s navigate to AWS CodePipeline \nto view the CfCT pipeline.",
    "start": "116502",
    "end": "120292"
  },
  {
    "text": "The CfCT pipeline is currently in progress.",
    "start": "121179",
    "end": "123688"
  },
  {
    "text": "This CfCT pipeline has four stages.",
    "start": "125327",
    "end": "127760"
  },
  {
    "text": "The Source stage is initiated by the \ncustomized configuration package.",
    "start": "128083",
    "end": "131579"
  },
  {
    "text": "The Build stage uses AWS CodeBuild to validate \nthe contents of the configuration package.",
    "start": "132064",
    "end": "136670"
  },
  {
    "text": "The Service Control Policy stage executes \nresources for the service control policy.",
    "start": "137221",
    "end": "141256"
  },
  {
    "text": "The final CloudFormation Resource \nstage confirms the resources and",
    "start": "141874",
    "end": "145273"
  },
  {
    "text": "creates the stacks from the templates \nspecified in the manifest file.",
    "start": "145274",
    "end": "148380"
  },
  {
    "text": "We can view the progress details in CodeBuild.",
    "start": "149281",
    "end": "151471"
  },
  {
    "text": "Here are the build logs.",
    "start": "152358",
    "end": "153529"
  },
  {
    "text": "We can open the tail logs to \nview the ongoing process.",
    "start": "153878",
    "end": "156526"
  },
  {
    "text": "Once the pipeline is complete, we can review \nthe CloudFormation stacks in the target accounts.",
    "start": "157440",
    "end": "161705"
  },
  {
    "text": "Let’s open our Legacy account \nto locate the stack set we created.",
    "start": "162578",
    "end": "165613"
  },
  {
    "text": "In CloudFormation, we can see \nthe stack set has been created.",
    "start": "167494",
    "end": "170200"
  },
  {
    "text": "We can view the stack’s \nresources, events, and outputs.",
    "start": "173761",
    "end": "176470"
  },
  {
    "text": "These outputs are used as input to the \nother stacks within the CfCT framework.",
    "start": "180000",
    "end": "183883"
  },
  {
    "text": "To test that the site has been created \nsuccessfully, let’s open the website URL.",
    "start": "184783",
    "end": "188452"
  },
  {
    "text": "Our website is called The Unicorn Shop.",
    "start": "189447",
    "end": "191344"
  },
  {
    "text": "Let’s sign up.",
    "start": "191506",
    "end": "192205"
  },
  {
    "text": "We’ll enable developer \nmode to monitor the backend.",
    "start": "199653",
    "end": "202267"
  },
  {
    "text": "The object is referencing an EC2 \ninstance because we’re currently using",
    "start": "206487",
    "end": "209543"
  },
  {
    "text": "the Legacy backend for the application.",
    "start": "209543",
    "end": "211484"
  },
  {
    "text": "We’ll copy the uuid that \nwas created for the user.",
    "start": "212263",
    "end": "214929"
  },
  {
    "text": "Let’s log in and add some items to the cart.",
    "start": "216434",
    "end": "218408"
  },
  {
    "text": "As we add items to the cart, \nthe cart number increases.",
    "start": "226405",
    "end": "229064"
  },
  {
    "text": "Let’s remove an item from the cart.",
    "start": "238097",
    "end": "239614"
  },
  {
    "text": "The application is currently saving \nthe data directly to our EC2 instance.",
    "start": "242557",
    "end": "246102"
  },
  {
    "text": "To facilitate the move from the Legacy \nbackend to our microservices backend,",
    "start": "246976",
    "end": "250605"
  },
  {
    "text": "we’ll return to our Refactor Spaces foundation \naccount and implement Amazon API Gateway.",
    "start": "250605",
    "end": "255081"
  },
  {
    "text": "We'll select the unistore API that \nwas created by our CfCT stack.",
    "start": "257809",
    "end": "261638"
  },
  {
    "text": "Let’s drill down to locate the invoke URL.",
    "start": "262486",
    "end": "264905"
  },
  {
    "text": "We’ll copy this URL so we can \ninvoke the API from our other accounts.",
    "start": "267472",
    "end": "271077"
  },
  {
    "text": "Now, let’s navigate to our Legacy account, \nwhich contains the S3 bucket with our UI.",
    "start": "271950",
    "end": "276354"
  },
  {
    "text": "We’ll use AWS CloudShell to \nupdate the bucket’s config.json file.",
    "start": "277281",
    "end": "281230"
  },
  {
    "text": "We’ll create a local copy of the UI bucket\n config.json file that we can modify.",
    "start": "282224",
    "end": "286445"
  },
  {
    "text": "Let’s update the host to send traffic \nthrough the API Gateway REST API.",
    "start": "287332",
    "end": "291246"
  },
  {
    "text": "Now, let’s copy our updated \nfile back into the bucket.",
    "start": "296085",
    "end": "298720"
  },
  {
    "text": "Next, we’ll enable public-read access so\nthe object can be used by all our accounts.",
    "start": "304029",
    "end": "308202"
  },
  {
    "text": "Let’s open the S3 service to ensure \nthat Block Public Access settings",
    "start": "309116",
    "end": "312406"
  },
  {
    "text": "are disabled for this account.",
    "start": "312407",
    "end": "313850"
  },
  {
    "text": "Let's go back to the Unicorn Shop and confirm \nthat it’s using the API Gateway for the backend.",
    "start": "316349",
    "end": "320847"
  },
  {
    "text": "We’ll refresh the page.",
    "start": "321613",
    "end": "322809"
  },
  {
    "text": "The host is now referencing \nthe API’s invoke URL.",
    "start": "324731",
    "end": "327555"
  },
  {
    "text": "We can add and remove items from the cart.",
    "start": "328455",
    "end": "330363"
  },
  {
    "text": "Next, we’ll update our microservices \napplication to redirect traffic to our",
    "start": "337621",
    "end": "341058"
  },
  {
    "text": "Lambda functions so that the \nAmazon DynamoDB table is used.",
    "start": "341058",
    "end": "344620"
  },
  {
    "text": "Let’s return to our Management account\n and navigate to the manifest file.",
    "start": "346676",
    "end": "349841"
  },
  {
    "text": "Let’s scroll to the bottom and paste \nin our shopping cart microservices.",
    "start": "354747",
    "end": "357847"
  },
  {
    "text": "The first stack we added will create \nthe Shopping Cart microservices.",
    "start": "362108",
    "end": "365314"
  },
  {
    "text": "The second stack will update the API Gateway \nservice to redirect traffic to the microservices.",
    "start": "365676",
    "end": "370340"
  },
  {
    "text": "Note that the function uses the alfred \nhelper to reference the SSM Parameter Store.",
    "start": "371133",
    "end": "375442"
  },
  {
    "text": "This allows it to reuse output from previous \nstacks as input into stacks in multiple accounts.",
    "start": "376128",
    "end": "380900"
  },
  {
    "text": "Let’s commit the changes.",
    "start": "381774",
    "end": "382956"
  },
  {
    "text": "The change will trigger an \nupdate to our code pipeline.",
    "start": "390983",
    "end": "393355"
  },
  {
    "text": "The pipeline execution is now in progress.",
    "start": "394283",
    "end": "396414"
  },
  {
    "text": "Let’s view the details for the \nCloudFormation Resource build.",
    "start": "398081",
    "end": "400768"
  },
  {
    "text": "Let’s review the tail logs.",
    "start": "403027",
    "end": "404529"
  },
  {
    "text": "We can see the Shopping Cart services are \n now running on the CloudFormation stack.",
    "start": "406169",
    "end": "409672"
  },
  {
    "text": "Let’s check the progress of \nour microservices account.",
    "start": "410371",
    "end": "412687"
  },
  {
    "text": "In the CloudFormation console, we \ncan see the stacks we created earlier.",
    "start": "416450",
    "end": "419658"
  },
  {
    "text": "Let's look at our Lambda functions.",
    "start": "420988",
    "end": "422453"
  },
  {
    "text": "We can see the services for our website.",
    "start": "426055",
    "end": "427956"
  },
  {
    "text": "Next, let’s look at our DynamoDB table.",
    "start": "428695",
    "end": "430845"
  },
  {
    "text": "We’ll explore the table items.",
    "start": "438227",
    "end": "439775"
  },
  {
    "text": "When service traffic is redirected to \nour microservices DynamoDB table,",
    "start": "440648",
    "end": "444425"
  },
  {
    "text": "we will see the cart items displayed here.",
    "start": "444425",
    "end": "446360"
  },
  {
    "text": "Let’s return to the CloudFormation console \nto view the Shopping Cart stack resources.",
    "start": "447072",
    "end": "450906"
  },
  {
    "text": "We can see that the routes and services have \nbeen created to make calls to Refactor Spaces.",
    "start": "454656",
    "end": "458805"
  },
  {
    "text": "Let’s navigate to our Foundation account \nand review the Refactor Spaces environment.",
    "start": "459665",
    "end": "463465"
  },
  {
    "text": "Under the Services and routes tab, we \ncan see the services we redirected.",
    "start": "471059",
    "end": "474784"
  },
  {
    "text": "The cart services use a different \naccount than our legacy service",
    "start": "475698",
    "end": "478416"
  },
  {
    "text": "and utilize the Lambda functions\n in our microservices endpoints.",
    "start": "478416",
    "end": "481548"
  },
  {
    "text": "The routes have also been updated \nto use the new target endpoints.",
    "start": "482516",
    "end": "485591"
  },
  {
    "text": "Our environment is shared with the \nmicroservices account using AWS",
    "start": "486424",
    "end": "489605"
  },
  {
    "text": "Resource Access Manager.",
    "start": "489605",
    "end": "490981"
  },
  {
    "text": "Now, let's go to the Management \naccount to check on the CfCT pipeline.",
    "start": "492000",
    "end": "495428"
  },
  {
    "text": "The CfCT pipeline execution has succeeded.",
    "start": "499568",
    "end": "502057"
  },
  {
    "text": "Let’s view the updates in the Unicorn Shop.",
    "start": "502863",
    "end": "504788"
  },
  {
    "text": "When we last visited the site, \nwe had two items in the cart.",
    "start": "505460",
    "end": "508064"
  },
  {
    "text": "Let’s refresh the page.",
    "start": "508279",
    "end": "509422"
  },
  {
    "text": "Our cart is now empty because we have \nmoved from an EC2 instance database",
    "start": "511639",
    "end": "515283"
  },
  {
    "text": "to a microservices DynamoDB table.",
    "start": "515283",
    "end": "517460"
  },
  {
    "text": "Let’s view the table in DynamoDB.",
    "start": "518240",
    "end": "520026"
  },
  {
    "text": "We’ll explore the table items \nto monitor the status of the cart.",
    "start": "528212",
    "end": "531076"
  },
  {
    "text": "As we update our cart, the \nDynamoDB table entries will change.",
    "start": "531924",
    "end": "535205"
  },
  {
    "text": "Let’s return to the Unicorn \nShop and add some items.",
    "start": "535568",
    "end": "538014"
  },
  {
    "text": "We’ll run the scan to update this page.",
    "start": "547556",
    "end": "549421"
  },
  {
    "text": "One item was returned. Let’s take a look.",
    "start": "550254",
    "end": "552284"
  },
  {
    "text": "Two items were added to the DynamoDB table.",
    "start": "555684",
    "end": "558000"
  },
  {
    "text": "Now, let’s switch to the Unicorn Store \nand remove one item from the cart.",
    "start": "558806",
    "end": "562121"
  },
  {
    "text": "We’ll rerun the query.",
    "start": "568613",
    "end": "569777"
  },
  {
    "text": "The table has updated successfully.",
    "start": "575462",
    "end": "577144"
  },
  {
    "text": "You’ve just seen how to modernize \napplications with Customizations for",
    "start": "579791",
    "end": "582758"
  },
  {
    "text": "AWS Control Tower and Refactor Spaces.",
    "start": "582758",
    "end": "585322"
  },
  {
    "text": "You can learn more about this topic in \nthe description and links for this video.",
    "start": "586008",
    "end": "589197"
  },
  {
    "text": "Thanks for watching. Now it’s your turn to try.",
    "start": "589439",
    "end": "591404"
  }
]