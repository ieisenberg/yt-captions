[
  {
    "start": "0",
    "end": "63000"
  },
  {
    "text": "Amazon web services supports delegated",
    "start": "1319",
    "end": "3959"
  },
  {
    "text": "access to your AWS environment in this",
    "start": "3959",
    "end": "7040"
  },
  {
    "text": "video I demonstrate using Microsoft",
    "start": "7040",
    "end": "9400"
  },
  {
    "text": "active directory active directory",
    "start": "9400",
    "end": "11599"
  },
  {
    "text": "Federation Services security assertion",
    "start": "11599",
    "end": "14200"
  },
  {
    "text": "markup language or saml 2.0 and ec2",
    "start": "14200",
    "end": "17800"
  },
  {
    "text": "resource level permissions to provide",
    "start": "17800",
    "end": "19600"
  },
  {
    "text": "single sign on and fine grain access to",
    "start": "19600",
    "end": "22359"
  },
  {
    "text": "your AWS Resources by simply using",
    "start": "22359",
    "end": "25000"
  },
  {
    "text": "Active Directory Group",
    "start": "25000",
    "end": "26800"
  },
  {
    "text": "membership Amazon web services recently",
    "start": "26800",
    "end": "29640"
  },
  {
    "text": "added support for saml an open standard",
    "start": "29640",
    "end": "32078"
  },
  {
    "text": "used by many identity providers this new",
    "start": "32079",
    "end": "35120"
  },
  {
    "text": "feature enables Federated single sign on",
    "start": "35120",
    "end": "37960"
  },
  {
    "text": "which lets users sign into the AWS",
    "start": "37960",
    "end": "40039"
  },
  {
    "text": "console or make programmatic calls to",
    "start": "40039",
    "end": "42480"
  },
  {
    "text": "AWS apis by using assertions from a SLE",
    "start": "42480",
    "end": "46199"
  },
  {
    "text": "compliant identity provider like active",
    "start": "46199",
    "end": "48480"
  },
  {
    "text": "directory Federation services or",
    "start": "48480",
    "end": "51120"
  },
  {
    "text": "adfs since most organizations already",
    "start": "51120",
    "end": "54199"
  },
  {
    "text": "have Microsoft active directory deployed",
    "start": "54199",
    "end": "57120"
  },
  {
    "text": "in their corporate environment this",
    "start": "57120",
    "end": "58879"
  },
  {
    "text": "becomes a natural way to provision and",
    "start": "58879",
    "end": "60760"
  },
  {
    "text": "restrict access to AWS",
    "start": "60760",
    "end": "63519"
  },
  {
    "start": "63000",
    "end": "179000"
  },
  {
    "text": "resources this video demonstrates the",
    "start": "63519",
    "end": "66040"
  },
  {
    "text": "use of this functionality after adfs",
    "start": "66040",
    "end": "68759"
  },
  {
    "text": "Federation to AWS has been established I",
    "start": "68759",
    "end": "71759"
  },
  {
    "text": "will touch on a few of the key",
    "start": "71759",
    "end": "75320"
  },
  {
    "text": "components first is the use of AWS am or",
    "start": "76799",
    "end": "80960"
  },
  {
    "text": "identity and access management",
    "start": "80960",
    "end": "83799"
  },
  {
    "text": "roles instead of creating AWS accounts",
    "start": "83799",
    "end": "87360"
  },
  {
    "text": "for all of our corporate users we will",
    "start": "87360",
    "end": "89560"
  },
  {
    "text": "use AWS roles and map these roles to the",
    "start": "89560",
    "end": "92680"
  },
  {
    "text": "active directory groups in our",
    "start": "92680",
    "end": "95880"
  },
  {
    "text": "Enterprise in my example here I have",
    "start": "104079",
    "end": "106520"
  },
  {
    "text": "created four I am roles adfs admins adfs",
    "start": "106520",
    "end": "112280"
  },
  {
    "text": "development adfs production and adfs",
    "start": "112280",
    "end": "116719"
  },
  {
    "text": "QA associated with an adfs role is an IM",
    "start": "116719",
    "end": "120479"
  },
  {
    "text": "am policy that specifies permissions for",
    "start": "120479",
    "end": "123200"
  },
  {
    "text": "the role let's first look at the adfs",
    "start": "123200",
    "end": "126000"
  },
  {
    "text": "admin's role and its IM am",
    "start": "126000",
    "end": "128479"
  },
  {
    "text": "policy as you would expect for an",
    "start": "128479",
    "end": "130640"
  },
  {
    "text": "administrator it allows for all actions",
    "start": "130640",
    "end": "133800"
  },
  {
    "text": "against all ec2",
    "start": "133800",
    "end": "137000"
  },
  {
    "text": "resources now let's look at the edfs",
    "start": "141640",
    "end": "144000"
  },
  {
    "text": "development role the policy for this",
    "start": "144000",
    "end": "146599"
  },
  {
    "text": "role is far more restrictive",
    "start": "146599",
    "end": "150519"
  },
  {
    "text": "first it only allows the describe action",
    "start": "150560",
    "end": "152959"
  },
  {
    "text": "for all ec2",
    "start": "152959",
    "end": "156080"
  },
  {
    "text": "resources then which makes sense for a",
    "start": "158519",
    "end": "160879"
  },
  {
    "text": "developer it allows all actions against",
    "start": "160879",
    "end": "163800"
  },
  {
    "text": "all ec2 resources but only if the",
    "start": "163800",
    "end": "166879"
  },
  {
    "text": "resource is tagged with environment",
    "start": "166879",
    "end": "168959"
  },
  {
    "text": "equals",
    "start": "168959",
    "end": "170000"
  },
  {
    "text": "development here you can see the",
    "start": "170000",
    "end": "171840"
  },
  {
    "text": "condition for the tag",
    "start": "171840",
    "end": "175519"
  },
  {
    "start": "179000",
    "end": "232000"
  },
  {
    "text": "now that we have the AWS roles",
    "start": "180440",
    "end": "182560"
  },
  {
    "text": "established let's take a look at our",
    "start": "182560",
    "end": "184440"
  },
  {
    "text": "active",
    "start": "184440",
    "end": "186760"
  },
  {
    "text": "directory this is where the Enterprise",
    "start": "187760",
    "end": "189920"
  },
  {
    "text": "admins will want to manage AWS",
    "start": "189920",
    "end": "194040"
  },
  {
    "text": "access in our example we have four",
    "start": "194200",
    "end": "196840"
  },
  {
    "text": "active directory groups with names that",
    "start": "196840",
    "end": "199120"
  },
  {
    "text": "are very similar to and correlate to the",
    "start": "199120",
    "end": "201159"
  },
  {
    "text": "AWS roles we just looked",
    "start": "201159",
    "end": "203599"
  },
  {
    "text": "at we also have a user named Bob Bob is",
    "start": "203599",
    "end": "207200"
  },
  {
    "text": "a developer so we are going to add Bob",
    "start": "207200",
    "end": "209760"
  },
  {
    "text": "to the AWS developer Active Directory",
    "start": "209760",
    "end": "211959"
  },
  {
    "text": "Group this will give Bob the Privileges",
    "start": "211959",
    "end": "214239"
  },
  {
    "text": "associated with the adfs development IM",
    "start": "214239",
    "end": "216680"
  },
  {
    "text": "role that we looked at",
    "start": "216680",
    "end": "218120"
  },
  {
    "text": "previously we don't need to create an ID",
    "start": "218120",
    "end": "220599"
  },
  {
    "text": "for Bob on",
    "start": "220599",
    "end": "223280"
  },
  {
    "start": "232000",
    "end": "433000"
  },
  {
    "text": "AWS now let's try it",
    "start": "232680",
    "end": "235640"
  },
  {
    "text": "out since Bob is a developer and we have",
    "start": "235640",
    "end": "238799"
  },
  {
    "text": "added him to the A WS Development Active",
    "start": "238799",
    "end": "241480"
  },
  {
    "text": "Directory Group Bob should only have",
    "start": "241480",
    "end": "243760"
  },
  {
    "text": "limited access to",
    "start": "243760",
    "end": "245599"
  },
  {
    "text": "AWS here we have a domain session",
    "start": "245599",
    "end": "248079"
  },
  {
    "text": "established for user Bob in the",
    "start": "248079",
    "end": "249560"
  },
  {
    "text": "contoso.com active directory domain next",
    "start": "249560",
    "end": "253200"
  },
  {
    "text": "we go to a web page that is provided by",
    "start": "253200",
    "end": "255480"
  },
  {
    "text": "active directory Federation",
    "start": "255480",
    "end": "258759"
  },
  {
    "text": "services this is the default page that",
    "start": "263040",
    "end": "265280"
  },
  {
    "text": "comes with adfs customers would most",
    "start": "265280",
    "end": "268000"
  },
  {
    "text": "likely create a page that is much pretti",
    "start": "268000",
    "end": "270120"
  },
  {
    "text": "with their company logo by selecting",
    "start": "270120",
    "end": "272800"
  },
  {
    "text": "Amazon web services adfs logs us on to",
    "start": "272800",
    "end": "276400"
  },
  {
    "text": "AWS but only with a permission",
    "start": "276400",
    "end": "278600"
  },
  {
    "text": "associated with the adfs development IM",
    "start": "278600",
    "end": "280479"
  },
  {
    "text": "IM role that Bob is a member",
    "start": "280479",
    "end": "283080"
  },
  {
    "text": "of let's see if these permissions really",
    "start": "283080",
    "end": "286320"
  },
  {
    "text": "work first let's try to do something",
    "start": "286320",
    "end": "288919"
  },
  {
    "text": "with S3 our Amazon simple storage",
    "start": "288919",
    "end": "292320"
  },
  {
    "text": "service now if you remember our policy",
    "start": "292320",
    "end": "295160"
  },
  {
    "text": "for development only gave access to the",
    "start": "295160",
    "end": "297600"
  },
  {
    "text": "ec2 service so Bob should not be able to",
    "start": "297600",
    "end": "300160"
  },
  {
    "text": "do anything with",
    "start": "300160",
    "end": "301919"
  },
  {
    "text": "S3 and as you can see that is the case",
    "start": "301919",
    "end": "305000"
  },
  {
    "text": "Bob has no permissions for",
    "start": "305000",
    "end": "308280"
  },
  {
    "text": "S3 now let's see if we can really",
    "start": "309520",
    "end": "311600"
  },
  {
    "text": "control resource level access through",
    "start": "311600",
    "end": "315560"
  },
  {
    "text": "tagging we have two servers",
    "start": "322319",
    "end": "326880"
  },
  {
    "text": "server two is tagged with environment",
    "start": "332639",
    "end": "334680"
  },
  {
    "text": "equals",
    "start": "334680",
    "end": "337080"
  },
  {
    "text": "development and server one has a tag of",
    "start": "343919",
    "end": "346280"
  },
  {
    "text": "environment equals production because we",
    "start": "346280",
    "end": "348840"
  },
  {
    "text": "only enabled permissions to the",
    "start": "348840",
    "end": "350639"
  },
  {
    "text": "development IM role if the instance was",
    "start": "350639",
    "end": "352759"
  },
  {
    "text": "tagged with the environment equals",
    "start": "352759",
    "end": "354160"
  },
  {
    "text": "development we should not be able to",
    "start": "354160",
    "end": "356039"
  },
  {
    "text": "perform actions on server one let's see",
    "start": "356039",
    "end": "358560"
  },
  {
    "text": "if we can stop the instance",
    "start": "358560",
    "end": "360199"
  },
  {
    "text": "we should not be able",
    "start": "360199",
    "end": "363120"
  },
  {
    "text": "to and as you can see we are not allowed",
    "start": "375039",
    "end": "377840"
  },
  {
    "text": "to stop the instance",
    "start": "377840",
    "end": "381360"
  },
  {
    "text": "now let's see if we can stop server 2 we",
    "start": "390319",
    "end": "392319"
  },
  {
    "text": "should be able to stop this",
    "start": "392319",
    "end": "395479"
  },
  {
    "text": "instance and as you can see we",
    "start": "401120",
    "end": "405080"
  },
  {
    "text": "can this video demonstrated using",
    "start": "406479",
    "end": "409080"
  },
  {
    "text": "Microsoft active directory active",
    "start": "409080",
    "end": "411280"
  },
  {
    "text": "directory Federation Services security",
    "start": "411280",
    "end": "413880"
  },
  {
    "text": "assertion markup language and ec2",
    "start": "413880",
    "end": "416400"
  },
  {
    "text": "resource level permissions to provide",
    "start": "416400",
    "end": "418479"
  },
  {
    "text": "single sign on and fine grain access to",
    "start": "418479",
    "end": "420879"
  },
  {
    "text": "AWS",
    "start": "420879",
    "end": "422240"
  },
  {
    "text": "resources once this is configured",
    "start": "422240",
    "end": "424840"
  },
  {
    "text": "Enterprise administrators can easily",
    "start": "424840",
    "end": "426680"
  },
  {
    "text": "utilize Active Directory Group",
    "start": "426680",
    "end": "428280"
  },
  {
    "text": "membership to manage access to AWS",
    "start": "428280",
    "end": "430319"
  },
  {
    "text": "resources",
    "start": "430319",
    "end": "433319"
  }
]