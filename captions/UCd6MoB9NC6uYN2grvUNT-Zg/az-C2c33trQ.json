[
  {
    "text": "Hi, welcome to 'This is My Architecture.'",
    "start": "6590",
    "end": "8765"
  },
  {
    "text": "Today I'm with Stephane from Adikteev.\nHi Stephane.",
    "start": "9135",
    "end": "12180"
  },
  {
    "text": "Hello.\nHi, could you please tell me more about your company?",
    "start": "12180",
    "end": "14881"
  },
  {
    "text": "Yeah, so I'm the CTO for Adikteev.",
    "start": "14977",
    "end": "17532"
  },
  {
    "text": "We are an adtech company,",
    "start": "17532",
    "end": "19997"
  },
  {
    "text": "providing tools and services \nfor mobile application publishers.",
    "start": "19997",
    "end": "22997"
  },
  {
    "text": "And we help them optimize their ad spending basically.",
    "start": "24375",
    "end": "28100"
  },
  {
    "text": "So, today we'll be talking about our analytics products,",
    "start": "28100",
    "end": "32328"
  },
  {
    "text": "which help them predict \ntheir revenue per user instead of reacting to it.",
    "start": "32328",
    "end": "37362"
  },
  {
    "text": "Okay, great. How it works?",
    "start": "37362",
    "end": "39151"
  },
  {
    "text": "So the way it works,\nis that we receive a stream of events,",
    "start": "39151",
    "end": "42669"
  },
  {
    "text": "being the user activity \nin every mobile application of our customers,",
    "start": "42669",
    "end": "47554"
  },
  {
    "text": "and we push that into our Kafka clusters.",
    "start": "47554",
    "end": "50145"
  },
  {
    "text": "Then we consume that into application running into EKS,\nthe managed Kubernetes.",
    "start": "50692",
    "end": "57543"
  },
  {
    "text": "That's Kafka's streams applications.",
    "start": "57785",
    "end": "60978"
  },
  {
    "text": "And we have two use cases for that.",
    "start": "61075",
    "end": "62859"
  },
  {
    "text": "One is to runtime compute aggregation encounters,",
    "start": "63030",
    "end": "68212"
  },
  {
    "text": "and the other one is to keep everything \nas raw material for later analysis.",
    "start": "68465",
    "end": "73565"
  },
  {
    "text": "And do you have metrics about your Kafka injection?",
    "start": "73566",
    "end": "77157"
  },
  {
    "text": "Yeah, so overall, here, \nit's about 30,000 events per second,",
    "start": "77157",
    "end": "84054"
  },
  {
    "text": "which is equal to that.",
    "start": "84054",
    "end": "85835"
  },
  {
    "text": "And at the end of the day, \nit adds about 400 GB of data every day to the data lake.",
    "start": "85835",
    "end": "92119"
  },
  {
    "text": "So the data we manage is about 120 terabytes.",
    "start": "92120",
    "end": "97640"
  },
  {
    "text": "Okay, great, so now you have water turn history, \nwhat do you do with this data?",
    "start": "98812",
    "end": "103742"
  },
  {
    "text": "So we run our machine learning models \ninto spark applications,",
    "start": "103864",
    "end": "109840"
  },
  {
    "text": "running into another EKS cluster.",
    "start": "110041",
    "end": "113394"
  },
  {
    "text": "And we particularly run spark clusters, \nfor our customers to process the data.",
    "start": "113396",
    "end": "119959"
  },
  {
    "text": "So, how many spark clusters \ndo you use every day?",
    "start": "120192",
    "end": "123228"
  },
  {
    "text": "Quite a lot, 'cause we keep them separated \nbetween our customers and different jobs,",
    "start": "123228",
    "end": "127765"
  },
  {
    "text": "so it's hundreds of spark cluster \nthat we store every day.",
    "start": "127765",
    "end": "131155"
  },
  {
    "text": "Okay, but why do you do that?",
    "start": "131155",
    "end": "133635"
  },
  {
    "text": "So first, we need to be very resilient,",
    "start": "134037",
    "end": "137857"
  },
  {
    "text": "even that any jobs failing \nwill not prevent the flow and the results for other jobs,",
    "start": "137857",
    "end": "143722"
  },
  {
    "text": "and so we protect the quality of services.",
    "start": "143723",
    "end": "146474"
  },
  {
    "text": "And also, since we use spot instances\n into those clusters,",
    "start": "146732",
    "end": "151308"
  },
  {
    "text": "we can expect them to disappear at some point, \nand everything will get restarted.",
    "start": "151309",
    "end": "155048"
  },
  {
    "text": "Okay, that's great. \nSo it's resilient, it's safe,",
    "start": "155048",
    "end": "158958"
  },
  {
    "text": "and it's also cost-efficient.",
    "start": "159371",
    "end": "161531"
  },
  {
    "text": "So what is outcomes of your model processing?",
    "start": "161796",
    "end": "165221"
  },
  {
    "text": "So we have two outputs.",
    "start": "165255",
    "end": "167486"
  },
  {
    "text": "We have metrics about prediction, aggregating here,",
    "start": "167800",
    "end": "173054"
  },
  {
    "text": "and we have the raw data \nfor every user here in Redshift.",
    "start": "173132",
    "end": "176534"
  },
  {
    "text": "Is it focusing metrics?",
    "start": "176551",
    "end": "178193"
  },
  {
    "text": "Yeah.\nOkay, great.",
    "start": "178193",
    "end": "179745"
  },
  {
    "text": "And so you have two data stores, \nwhy don't you put everything into RDS?",
    "start": "179745",
    "end": "185642"
  },
  {
    "text": "So we optimize here for the speed of access,",
    "start": "185642",
    "end": "188746"
  },
  {
    "text": "and here more flexibility \nbecause we don't really know how they will be accessed.",
    "start": "188746",
    "end": "193959"
  },
  {
    "text": "Okay, and so how do you display \nthis information to your customer?",
    "start": "193959",
    "end": "197674"
  },
  {
    "text": "So we provide them with a dashboard \nthat is run as a React application,",
    "start": "197674",
    "end": "202606"
  },
  {
    "text": "and it talks to an API endpoint,",
    "start": "202606",
    "end": "204649"
  },
  {
    "text": "which go here, \nthis will exist directly the different data stores.",
    "start": "204649",
    "end": "208715"
  },
  {
    "text": "So this is an architecture we designed \nand deployed in just under three months",
    "start": "209215",
    "end": "214765"
  },
  {
    "text": "during our MVP phase.",
    "start": "214766",
    "end": "216309"
  },
  {
    "text": "And we believe that with the managed services,",
    "start": "216309",
    "end": "218815"
  },
  {
    "text": "it will scale with the customer growing",
    "start": "218815",
    "end": "221426"
  },
  {
    "text": "and it will be kept cost-efficient.",
    "start": "221426",
    "end": "224258"
  },
  {
    "text": "Oh great, you did that in only three months? \nThat's great. ",
    "start": "224776",
    "end": "228714"
  },
  {
    "text": "Thank you, Stephane for all this information.\nThanks for having me.",
    "start": "228714",
    "end": "232774"
  },
  {
    "text": "And thank you for watching \n'This is My Architecture.'",
    "start": "232774",
    "end": "235327"
  },
  {
    "text": "[upbeat music]",
    "start": "235327",
    "end": "238905"
  }
]