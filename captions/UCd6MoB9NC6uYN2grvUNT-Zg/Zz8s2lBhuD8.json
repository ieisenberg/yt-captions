[
  {
    "start": "0",
    "end": "25000"
  },
  {
    "text": "[Music]",
    "start": "130",
    "end": "1120"
  },
  {
    "text": "[Applause]",
    "start": "1120",
    "end": "3170"
  },
  {
    "text": "[Music]",
    "start": "3170",
    "end": "6309"
  },
  {
    "text": "hello I'm sham a cloud support engineer",
    "start": "7720",
    "end": "10559"
  },
  {
    "text": "here at the AWS office in Dallas today",
    "start": "10559",
    "end": "14120"
  },
  {
    "text": "I'm going to show you how to terminate",
    "start": "14120",
    "end": "16440"
  },
  {
    "text": "https traffic on Amazon elastic",
    "start": "16440",
    "end": "19480"
  },
  {
    "text": "kubernetes service workloads with aw",
    "start": "19480",
    "end": "22160"
  },
  {
    "text": "certificate manager let's get",
    "start": "22160",
    "end": "25359"
  },
  {
    "start": "25000",
    "end": "48000"
  },
  {
    "text": "started after logging into the AWS",
    "start": "25359",
    "end": "28279"
  },
  {
    "text": "Management console navigate to the",
    "start": "28279",
    "end": "31119"
  },
  {
    "text": "certificate manager console this is my",
    "start": "31119",
    "end": "34360"
  },
  {
    "text": "certificate manager console which lists",
    "start": "34360",
    "end": "36920"
  },
  {
    "text": "all the certificate that are created or",
    "start": "36920",
    "end": "39360"
  },
  {
    "text": "imported I'll note down the Arn of the",
    "start": "39360",
    "end": "42200"
  },
  {
    "text": "certificate that I need to use with the",
    "start": "42200",
    "end": "44320"
  },
  {
    "text": "load",
    "start": "44320",
    "end": "45399"
  },
  {
    "text": "balancer now I'm opening my terminal I",
    "start": "45399",
    "end": "49280"
  },
  {
    "start": "48000",
    "end": "221000"
  },
  {
    "text": "have a cube CTL tool configured with my",
    "start": "49280",
    "end": "52239"
  },
  {
    "text": "existing Amazon eks or kubernetes",
    "start": "52239",
    "end": "55399"
  },
  {
    "text": "cluster I have a couple of notes",
    "start": "55399",
    "end": "57960"
  },
  {
    "text": "registered to my cluster how however I",
    "start": "57960",
    "end": "60719"
  },
  {
    "text": "don't have any ports running at this",
    "start": "60719",
    "end": "62719"
  },
  {
    "text": "moment now I'll create ports using",
    "start": "62719",
    "end": "66040"
  },
  {
    "text": "deployment object for this video I'll",
    "start": "66040",
    "end": "69320"
  },
  {
    "text": "create parts from latest enginex image",
    "start": "69320",
    "end": "72799"
  },
  {
    "text": "this deployment object already has a few",
    "start": "72799",
    "end": "75720"
  },
  {
    "text": "labels defined such as Tire web server",
    "start": "75720",
    "end": "79840"
  },
  {
    "text": "and environment staging after these are",
    "start": "79840",
    "end": "82960"
  },
  {
    "text": "created you can see the three parts",
    "start": "82960",
    "end": "86040"
  },
  {
    "text": "running then I'll create a service with",
    "start": "86040",
    "end": "88960"
  },
  {
    "text": "a load balancer that will forward the",
    "start": "88960",
    "end": "91320"
  },
  {
    "text": "traffic to these three parts the service",
    "start": "91320",
    "end": "94439"
  },
  {
    "text": "is created with the selector te web",
    "start": "94439",
    "end": "97439"
  },
  {
    "text": "server and environment staging this lets",
    "start": "97439",
    "end": "101320"
  },
  {
    "text": "the service direct the received traffic",
    "start": "101320",
    "end": "103799"
  },
  {
    "text": "to the parts that have the same labels",
    "start": "103799",
    "end": "107040"
  },
  {
    "text": "this service has a type called load",
    "start": "107040",
    "end": "109200"
  },
  {
    "text": "balancer that will create AWS public",
    "start": "109200",
    "end": "112399"
  },
  {
    "text": "load balancer of the type Network also",
    "start": "112399",
    "end": "116240"
  },
  {
    "text": "because of the annotations that are",
    "start": "116240",
    "end": "118240"
  },
  {
    "text": "defined in the service the load balancer",
    "start": "118240",
    "end": "121039"
  },
  {
    "text": "will have a listener with Port 443 and",
    "start": "121039",
    "end": "124360"
  },
  {
    "text": "the certificate from the ACM store",
    "start": "124360",
    "end": "127479"
  },
  {
    "text": "please note that I have a AWS load",
    "start": "127479",
    "end": "129759"
  },
  {
    "text": "balancer controller installed in my",
    "start": "129759",
    "end": "132319"
  },
  {
    "text": "Amazon elastic kubernetes service",
    "start": "132319",
    "end": "134760"
  },
  {
    "text": "cluster the first annotation specifies",
    "start": "134760",
    "end": "138200"
  },
  {
    "text": "whether the NLB will be internet facing",
    "start": "138200",
    "end": "141280"
  },
  {
    "text": "or internal the second annotation",
    "start": "141280",
    "end": "144360"
  },
  {
    "text": "specifies the availability Zone the NLB",
    "start": "144360",
    "end": "147920"
  },
  {
    "text": "will Route traffic to the third",
    "start": "147920",
    "end": "150760"
  },
  {
    "text": "annotation specifies the Arn of the",
    "start": "150760",
    "end": "153480"
  },
  {
    "text": "certificate to use it can be either a",
    "start": "153480",
    "end": "156879"
  },
  {
    "text": "certificate from a third party issuer or",
    "start": "156879",
    "end": "159599"
  },
  {
    "text": "it can be one created within AWS",
    "start": "159599",
    "end": "162000"
  },
  {
    "text": "certificate manager the fourth",
    "start": "162000",
    "end": "164319"
  },
  {
    "text": "annotation specifies the protocol that a",
    "start": "164319",
    "end": "167080"
  },
  {
    "text": "port",
    "start": "167080",
    "end": "168000"
  },
  {
    "text": "speaks for https and SSL the load",
    "start": "168000",
    "end": "171959"
  },
  {
    "text": "balancer expects the port to",
    "start": "171959",
    "end": "174120"
  },
  {
    "text": "authenticate itself over the encrypted",
    "start": "174120",
    "end": "177560"
  },
  {
    "text": "connection the other configuration to",
    "start": "177560",
    "end": "180239"
  },
  {
    "text": "Define is the port and Target Port be",
    "start": "180239",
    "end": "183599"
  },
  {
    "text": "sure that the port is set as",
    "start": "183599",
    "end": "187040"
  },
  {
    "text": "443 this is where the load balancer is",
    "start": "187040",
    "end": "190920"
  },
  {
    "text": "listening and be sure that the Target",
    "start": "190920",
    "end": "194599"
  },
  {
    "text": "Port is set to what container or",
    "start": "194599",
    "end": "197080"
  },
  {
    "text": "application is listening for this video",
    "start": "197080",
    "end": "200599"
  },
  {
    "text": "Let's consider Target Port to be 80",
    "start": "200599",
    "end": "203480"
  },
  {
    "text": "because we're using enginex",
    "start": "203480",
    "end": "206280"
  },
  {
    "text": "container after this is created you can",
    "start": "206280",
    "end": "209280"
  },
  {
    "text": "see the load balancer DNS URL by using",
    "start": "209280",
    "end": "213239"
  },
  {
    "text": "this command get the load balancer URL",
    "start": "213239",
    "end": "216959"
  },
  {
    "text": "from the",
    "start": "216959",
    "end": "217920"
  },
  {
    "text": "output now go to the load balancer",
    "start": "217920",
    "end": "222799"
  },
  {
    "start": "221000",
    "end": "260000"
  },
  {
    "text": "console on the listeners tab you can see",
    "start": "229840",
    "end": "233079"
  },
  {
    "text": "the load balance of Port is set to 443",
    "start": "233079",
    "end": "236360"
  },
  {
    "text": "and the SSL certificate from the ACM",
    "start": "236360",
    "end": "238959"
  },
  {
    "text": "that was defined find in the yaml now",
    "start": "238959",
    "end": "242319"
  },
  {
    "text": "try accessing the load balancer URL on",
    "start": "242319",
    "end": "245159"
  },
  {
    "text": "the browser on https",
    "start": "245159",
    "end": "248360"
  },
  {
    "text": "protocol so using just these annotations",
    "start": "248360",
    "end": "252239"
  },
  {
    "text": "you can terminate the SSL traffic on the",
    "start": "252239",
    "end": "254879"
  },
  {
    "text": "load balancer while using SSL",
    "start": "254879",
    "end": "257120"
  },
  {
    "text": "certificate from",
    "start": "257120",
    "end": "259400"
  },
  {
    "text": "ACM now you know how to terminate https",
    "start": "259400",
    "end": "263280"
  },
  {
    "start": "260000",
    "end": "282000"
  },
  {
    "text": "traffic on eks workloads with",
    "start": "263280",
    "end": "266280"
  },
  {
    "text": "ACM thanks for watching and happy cloud",
    "start": "266280",
    "end": "269280"
  },
  {
    "text": "computing from all of us here at AWS",
    "start": "269280",
    "end": "273080"
  },
  {
    "text": "[Applause]",
    "start": "273080",
    "end": "275130"
  },
  {
    "text": "[Music]",
    "start": "275130",
    "end": "278269"
  }
]