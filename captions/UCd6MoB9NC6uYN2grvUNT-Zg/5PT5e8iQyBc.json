[
  {
    "start": "0",
    "end": "22000"
  },
  {
    "text": "my name is Abhishek Mishra and I'm gonna talk to you about how you can integrate your email sending app with SES shortly",
    "start": "60",
    "end": "7830"
  },
  {
    "text": "after that Morgan will be up here to do a deep dive on how to build a robust notification processor that leverages",
    "start": "7830",
    "end": "13590"
  },
  {
    "text": "AWS and they'll have a guest speaker here to talk about how you can prioritize and send the right email for",
    "start": "13590",
    "end": "18840"
  },
  {
    "text": "your customers so how do you get started with SES well the very first step is to",
    "start": "18840",
    "end": "25710"
  },
  {
    "start": "22000",
    "end": "162000"
  },
  {
    "text": "verify with us the email address that you're gonna send your emails from now the reason we ask you to do this is to",
    "start": "25710",
    "end": "31619"
  },
  {
    "text": "ensure that you're a legitimate email sender that's allowed to send mail from that address and by ensuring that only",
    "start": "31619",
    "end": "37890"
  },
  {
    "text": "legitimate senders are using our platform we help improve the livability for all of our centers so the way you do",
    "start": "37890",
    "end": "43530"
  },
  {
    "text": "this you go to the SES console and you'll see a form just like the one you see up there you can type in an email",
    "start": "43530",
    "end": "49110"
  },
  {
    "text": "address and click the button and we'll shoot you an email with a link in it once you click the link that address is",
    "start": "49110",
    "end": "54719"
  },
  {
    "text": "now verified with us now you may also want to verify an entire domain that we can send from a host of addresses on",
    "start": "54719",
    "end": "60719"
  },
  {
    "text": "that domain to do this you would initiate the process the same way by going into the console but when you hit",
    "start": "60719",
    "end": "65729"
  },
  {
    "text": "the button here to verify the domain after you've typed it in will actually give you a DNS record for you to publish",
    "start": "65729",
    "end": "70890"
  },
  {
    "text": "via your DNS provider now once you go ahead and publish those records ses will shortly thereafter",
    "start": "70890",
    "end": "76470"
  },
  {
    "text": "automatically recognize the existence of those records and as a result that domain will be verified with us and then",
    "start": "76470",
    "end": "83100"
  },
  {
    "text": "you can start sending emails from any address on that domain and you know if you want to go ahead and and test out if",
    "start": "83100",
    "end": "89820"
  },
  {
    "text": "everything's working one way to do that is to go into the console and there's a sent test email form like the one you",
    "start": "89820",
    "end": "95280"
  },
  {
    "text": "see up there we just asked for a few basic parameters like subject body etc and you can go ahead and shoot yourself an email and ensure that it's getting",
    "start": "95280",
    "end": "102540"
  },
  {
    "text": "delivered the next step of course is to connect your application with SES and",
    "start": "102540",
    "end": "108540"
  },
  {
    "text": "actually give us those email requests that you want to send through us there's two major ways to do this the first way",
    "start": "108540",
    "end": "114210"
  },
  {
    "text": "and probably the fastest way for many of you would be to point your existing infrastructure that is the MTA's that",
    "start": "114210",
    "end": "119759"
  },
  {
    "text": "you use to deliver mail to the SMTP endpoint of SES and this lets you use",
    "start": "119759",
    "end": "124860"
  },
  {
    "text": "SES for delivery without having to write a new new application the other way of course is to use the query interface",
    "start": "124860",
    "end": "131250"
  },
  {
    "text": "that SES offers is our HTTP API and no matter which way you use HTTP or SMTP you're still going",
    "start": "131250",
    "end": "138819"
  },
  {
    "text": "to get the same features and and your interact with the same service all right so one thing to keep in mind is once you",
    "start": "138819",
    "end": "146319"
  },
  {
    "text": "start sending mails you should reckon you should expect that you'll get some notifications from us about events such",
    "start": "146319",
    "end": "152139"
  },
  {
    "text": "as bounces and complaints and we're actually gonna do a deep dive on des shortly so just hang tight for now and",
    "start": "152139",
    "end": "157719"
  },
  {
    "text": "then we'll get back to it a little bit so let's talk about how you can scale",
    "start": "157719",
    "end": "165129"
  },
  {
    "start": "162000",
    "end": "256000"
  },
  {
    "text": "your email sending on top of SES one of the first things that we recommend if",
    "start": "165129",
    "end": "170949"
  },
  {
    "text": "you're a sender on top of SES it's a set of email authentication now as you are",
    "start": "170949",
    "end": "176079"
  },
  {
    "text": "sending more and more mail it is more crucial that you prove to recipients that is ISPs as well as your end-users",
    "start": "176079",
    "end": "182199"
  },
  {
    "text": "that your mail is legitimate and there's a number of technologies in this space that can help you do that the main one that we're going to talk",
    "start": "182199",
    "end": "188799"
  },
  {
    "text": "about here is domainkeys identified mail or D CEM for short dekum is an email",
    "start": "188799",
    "end": "195159"
  },
  {
    "text": "authentication standard that lets you add a cryptographic signature to your emails and using the signature a",
    "start": "195159",
    "end": "202120"
  },
  {
    "text": "recipient can then validate that you are a legitimate sender they can prove certain things about your email for",
    "start": "202120",
    "end": "208000"
  },
  {
    "text": "example a recipient can prove that the sender of email is actually allowed to send from that domain in a strong",
    "start": "208000",
    "end": "213639"
  },
  {
    "text": "cryptographic manner they can prove that the email has not been altered or tampered with during transit before it",
    "start": "213639",
    "end": "220509"
  },
  {
    "text": "got to them and lastly you know signing your emails with dk also lets ISPs",
    "start": "220509",
    "end": "226120"
  },
  {
    "text": "associate email reputation with your domain and the reason this is important is they're more strongly able to prove",
    "start": "226120",
    "end": "231609"
  },
  {
    "text": "that you are actually the legitimate sender representing that domain and sending email from that domain and of",
    "start": "231609",
    "end": "237040"
  },
  {
    "text": "course as you send better and better mail that's gonna help improve your deliverability as well now we actually",
    "start": "237040",
    "end": "242259"
  },
  {
    "text": "have a a blog post series on this particular topic of Deakin and so if you",
    "start": "242259",
    "end": "247299"
  },
  {
    "text": "guys you know head over to the SES official blog I highly recommend you check out that series so how do you",
    "start": "247299",
    "end": "256930"
  },
  {
    "start": "256000",
    "end": "341000"
  },
  {
    "text": "actually set up Deakin on top of SES if you head over to the console we called ez Deakin we have a",
    "start": "256930",
    "end": "263420"
  },
  {
    "text": "a page that will let you do this and essentially what we give you are three DNS cname records and these records are",
    "start": "263420",
    "end": "269810"
  },
  {
    "text": "again similar to the verification process for a domain these are DNS records that you'll need to publish through your provider and and",
    "start": "269810",
    "end": "276080"
  },
  {
    "text": "once you do that SCS will actually detect their existence and send you an email saying hey we now see these",
    "start": "276080",
    "end": "281540"
  },
  {
    "text": "records and and at that point you can return to the console and check a box to say start signing my mails at that point",
    "start": "281540",
    "end": "287930"
  },
  {
    "text": "all of the email requests that you've been sending to SPS will start to get signed by us on your behalf now if you guys are hosting DNS with",
    "start": "287930",
    "end": "295460"
  },
  {
    "text": "Amazon route 53 and you're using that same AWS account with SES then we can actually publish those records on your",
    "start": "295460",
    "end": "301730"
  },
  {
    "text": "behalf right out of the console without you having to do it so one other thing",
    "start": "301730",
    "end": "307820"
  },
  {
    "text": "about a note about using dkm on top of SES you can certainly sign your own emails ahead of time and then send those",
    "start": "307820",
    "end": "314030"
  },
  {
    "text": "requests to SES and we'll still deliver them but there's actually some good reasons for you to let us sign the email on your behalf and and one of them is",
    "start": "314030",
    "end": "321230"
  },
  {
    "text": "that we will do automatic key rotation for you this is where periodically we'll actually rotate the public private key",
    "start": "321230",
    "end": "326990"
  },
  {
    "text": "pair that's associated with your cryptographic signing for deacon without you having to intervene and as a result",
    "start": "326990",
    "end": "333170"
  },
  {
    "text": "we provide a a stronger level of security around these cryptographic signatures let's walk through how this",
    "start": "333170",
    "end": "339020"
  },
  {
    "text": "works real quick so first you the sender give us an email",
    "start": "339020",
    "end": "344600"
  },
  {
    "start": "341000",
    "end": "431000"
  },
  {
    "text": "request to send and SES we'll then go ahead and compute a dekum signature and",
    "start": "344600",
    "end": "349820"
  },
  {
    "text": "add it to the email thus producing a sign email like with all emails it'll then find its way over to the ISP and",
    "start": "349820",
    "end": "356690"
  },
  {
    "text": "the ISP will then want to validate because there's a signature there the want to validate the signature and know",
    "start": "356690",
    "end": "361790"
  },
  {
    "text": "that you are actually authenticated to send from that domain they'll do this by first fetching the public deacon key",
    "start": "361790",
    "end": "367460"
  },
  {
    "text": "associated with that signature and at that point they're able to validate that it is actually a valid email now",
    "start": "367460",
    "end": "373670"
  },
  {
    "text": "sometime later SCS will go ahead and rotate those keys and we'll publish a new set of records into dns and and then",
    "start": "373670",
    "end": "381230"
  },
  {
    "text": "you might give us a second email to send just like before we will sign the email and it'll make its way over to the isp",
    "start": "381230",
    "end": "386480"
  },
  {
    "text": "the ISP will reach out into dns and fetch a a public beacon key that's associated with that signature and now",
    "start": "386480",
    "end": "393200"
  },
  {
    "text": "they're able to validate the second email but what about that first email let's say that the first email was",
    "start": "393200",
    "end": "398240"
  },
  {
    "text": "delayed or for whatever reason the ISP wants to revalidate at a later time they're actually able to still do this",
    "start": "398240",
    "end": "404210"
  },
  {
    "text": "and the reason they're able to still do this is we asked you to publish three cname records for for the Deacon signing",
    "start": "404210",
    "end": "410719"
  },
  {
    "text": "and this lets us keep the old keys around after we start using the new keys and therefore old emails will be still",
    "start": "410719",
    "end": "417050"
  },
  {
    "text": "what can still be validated for some period of time even though we're now using the new keys and so this is a cool",
    "start": "417050",
    "end": "423169"
  },
  {
    "text": "benefit of using our deacon signatures instead of pre signing the mails before you give you a request to us so now",
    "start": "423169",
    "end": "433400"
  },
  {
    "start": "431000",
    "end": "451000"
  },
  {
    "text": "you've gone ahead and set up email authentication the next step is to set up a reliable feedback processing system and as I mentioned before we're actually",
    "start": "433400",
    "end": "440599"
  },
  {
    "text": "gonna do a deep dive on this topic we're gonna cover things like how you configure it what you do with these notifications and so just stay tuned for",
    "start": "440599",
    "end": "446930"
  },
  {
    "text": "a few moments and then we'll get back to it alright the next step is to plan",
    "start": "446930",
    "end": "454189"
  },
  {
    "start": "451000",
    "end": "629000"
  },
  {
    "text": "ahead for sending limit increases and and the first step in knowing what your limits are increasing those limits above",
    "start": "454189",
    "end": "459949"
  },
  {
    "text": "SES is to monitor your sending and know how much you're sending we actually we actually offer four different metrics",
    "start": "459949",
    "end": "465650"
  },
  {
    "text": "right now delivery's bounces complaints and rejected emails which are emails that SES will not deliver we display",
    "start": "465650",
    "end": "472729"
  },
  {
    "text": "those graphically and as you see in the screenshot here in the console but you can also pull them through our API s and",
    "start": "472729",
    "end": "478460"
  },
  {
    "text": "consume them programmatically once you know how much email you're sending it's",
    "start": "478460",
    "end": "483979"
  },
  {
    "text": "a good idea to compare that to the the amount of email you're allowed to send",
    "start": "483979",
    "end": "488990"
  },
  {
    "text": "now every account on SES has two limits associated with it and you can find this",
    "start": "488990",
    "end": "494089"
  },
  {
    "text": "in the console you can also find it in the API the two limits being the daily sending quota this is the volume of",
    "start": "494089",
    "end": "500719"
  },
  {
    "text": "email that you're allowed to send on any given day and the maximum send rate which is the per second email rate that",
    "start": "500719",
    "end": "506839"
  },
  {
    "text": "you'd be throttled at knowing these limits and comparing them to to your actual sending will let you know if you",
    "start": "506839",
    "end": "513078"
  },
  {
    "text": "need to increase your limits and to do that you can actually follow a link from our public documentation which will take",
    "start": "513079",
    "end": "518599"
  },
  {
    "text": "you over to a forum like this to request in increasing your limits of course we we recommend that you do this well in",
    "start": "518599",
    "end": "524750"
  },
  {
    "text": "advance of ever reaching the limits just so your continuity your continuity is not affected this form has",
    "start": "524750",
    "end": "530110"
  },
  {
    "text": "a few basic questions about your email and the limits you're requesting typically we try to turn these around within 24 hours so it's pretty quick so",
    "start": "530110",
    "end": "539610"
  },
  {
    "text": "let's say you've gone ahead and monitored you're sending realize you needed a greater limit you put in that",
    "start": "539610",
    "end": "545259"
  },
  {
    "text": "request we turn it around and now you have a higher limit now it's probably a good idea to make sure that your email",
    "start": "545259",
    "end": "550420"
  },
  {
    "text": "application is actually able to scale up and give us those requests at that increased high rate now there are a few",
    "start": "550420",
    "end": "555910"
  },
  {
    "text": "ways to do scalability testing an email what we certainly do not want you to do is to send email to a bunch of random",
    "start": "555910",
    "end": "561370"
  },
  {
    "text": "made-up addresses on the internet because that will probably get you know get you in trouble deliverability wise and so instead we offer a feature we",
    "start": "561370",
    "end": "569500"
  },
  {
    "text": "call the mailbox simulator and all the mailbox simulator is is actually a series of email addresses that you can",
    "start": "569500",
    "end": "575410"
  },
  {
    "text": "send email to freely and these email addresses are available in our documentation and they do different",
    "start": "575410",
    "end": "580959"
  },
  {
    "text": "things some of them simulate a successful delivery some of them will simulate a bounce or complaint and so you can use",
    "start": "580959",
    "end": "587350"
  },
  {
    "text": "this to go ahead and test your application without using your sending quota or contributing to your bounced complaint metrics and so it's a great",
    "start": "587350",
    "end": "593829"
  },
  {
    "text": "way to load test your application as well and when you do load testing there's a couple key things to keep in",
    "start": "593829",
    "end": "598930"
  },
  {
    "text": "mind you need to essentially replicate the real use case of email that you have in production and so that means",
    "start": "598930",
    "end": "604630"
  },
  {
    "text": "monitoring the email sizes that you're actually sending in production and load testing with those same sizes it also",
    "start": "604630",
    "end": "609880"
  },
  {
    "text": "means sending emails at the same volumes that you would in production just to make sure everything is appropriately scaled up",
    "start": "609880",
    "end": "616709"
  },
  {
    "text": "lastly I want to note that you also want to ensure that your feedback processing system is also scaled up and is able to",
    "start": "616709",
    "end": "622810"
  },
  {
    "text": "handle the increased load in addition to just your core sending application so",
    "start": "622810",
    "end": "629800"
  },
  {
    "start": "629000",
    "end": "640000"
  },
  {
    "text": "let's say you went ahead and did that scalability testing and now you find out that your application is not able to send those emails quickly what are some",
    "start": "629800",
    "end": "635889"
  },
  {
    "text": "things they could do to tune your application and get those emails out the",
    "start": "635889",
    "end": "641319"
  },
  {
    "start": "640000",
    "end": "704000"
  },
  {
    "text": "first thing that we recommend to our users is to actually consider using the HTTP endpoint instead of SMTP that is",
    "start": "641319",
    "end": "647350"
  },
  {
    "text": "using our query API and and the reason we recommend this is SMTP is actually a",
    "start": "647350",
    "end": "652779"
  },
  {
    "text": "very chatty protocol what I mean by that is each email request from your mail servers to our SMTP endpoint requires",
    "start": "652779",
    "end": "659620"
  },
  {
    "text": "multiple round trips between our servers and this of course is somewhat inefficient now if you compare that to using the query API it's",
    "start": "659620",
    "end": "666860"
  },
  {
    "text": "really one request/response roundtrip now whether you use SMTP or HTTP we",
    "start": "666860",
    "end": "673730"
  },
  {
    "text": "recommend that you use persistent connections and what I mean by that is that you reuse connections to send multiple requests instead of doing",
    "start": "673730",
    "end": "680330"
  },
  {
    "text": "something like tearing down the connection after each request and a building a brand new one up lastly",
    "start": "680330",
    "end": "686450"
  },
  {
    "text": "you'll definitely want to consider sending in parallel which means we are protecting your application potentially to use multiple processes multiple",
    "start": "686450",
    "end": "693350"
  },
  {
    "text": "threads and depending on the scale you're operating at you'll also want to distribute that across many hosts so that you're able to fully use your",
    "start": "693350",
    "end": "699470"
  },
  {
    "text": "sending quota with us cool so what did",
    "start": "699470",
    "end": "705290"
  },
  {
    "start": "704000",
    "end": "732000"
  },
  {
    "text": "we talk about we first talked about setting up dekum authentication for your emails and we talked about the",
    "start": "705290",
    "end": "710750"
  },
  {
    "text": "importance of a reliable feedback processing system and we'll cover that in a little bit we talked about how to monitor your sending how to check your",
    "start": "710750",
    "end": "717230"
  },
  {
    "text": "sending limits and how to increase those limits with us we also talked about how you can do scalability testing with a",
    "start": "717230",
    "end": "722780"
  },
  {
    "text": "mailbox simulator and finally we talked about some things you can do to tweak your application in order to maximize",
    "start": "722780",
    "end": "727940"
  },
  {
    "text": "the throughput of your email sending now I'd like to invite up Morgan Thomas from",
    "start": "727940",
    "end": "734240"
  },
  {
    "start": "732000",
    "end": "742000"
  },
  {
    "text": "the SES team to do a deep dive into how you can build a robust notification processor thanks thanks Abbie hey guys",
    "start": "734240",
    "end": "743690"
  },
  {
    "text": "I'm Morgan Thomas and I'm a software development engineer on the Amazon SES team and today I'm gonna tell you a",
    "start": "743690",
    "end": "751190"
  },
  {
    "text": "little bit about how you can use email notifications to improve your sending with SES I'm gonna start by giving you",
    "start": "751190",
    "end": "756200"
  },
  {
    "text": "an introduction into what email notifications are the different types we offer and importantly why you want them",
    "start": "756200",
    "end": "762370"
  },
  {
    "text": "then I'm gonna show you how you can set up a notification processor leveraging other a degree of services so what are",
    "start": "762370",
    "end": "770870"
  },
  {
    "text": "email notifications well put simply they are a source of feedback about the email you send SES offers three different",
    "start": "770870",
    "end": "777770"
  },
  {
    "text": "types bounced complaint and delivery notifications you can choose to receive",
    "start": "777770",
    "end": "783410"
  },
  {
    "text": "them either via email or via Amazon simple notification service SNS Amazon",
    "start": "783410",
    "end": "788930"
  },
  {
    "text": "SNS is a service that allows you to push messages to distributed services via a handful of protocols such",
    "start": "788930",
    "end": "794270"
  },
  {
    "text": "as HTTP or Amazon's simple queue service so in this talk we're gonna focus on",
    "start": "794270",
    "end": "799400"
  },
  {
    "text": "receiving notifications via Amazon SMS because it offers easy programmatic consumption compared to email so why do",
    "start": "799400",
    "end": "809450"
  },
  {
    "start": "808000",
    "end": "848000"
  },
  {
    "text": "you want these notifications well they offer you increased visibility interests inning with SES for example",
    "start": "809450",
    "end": "814520"
  },
  {
    "text": "delivery notifications enable you to know the incident your emails delivered they make it easy to offer and improve",
    "start": "814520",
    "end": "820670"
  },
  {
    "text": "customer experience ensuring that only your customers who wish to receive your email do they help you maintain a good",
    "start": "820670",
    "end": "827720"
  },
  {
    "text": "sinning reputation with ISPs this is because mail servers may treat your email favorably if they notice you are",
    "start": "827720",
    "end": "834200"
  },
  {
    "text": "acting on bounces and complaints you receive and finally notifications can be",
    "start": "834200",
    "end": "839240"
  },
  {
    "text": "used as a source of feedback about the email you send alerting you to specific email campaigns that may have been less",
    "start": "839240",
    "end": "844760"
  },
  {
    "text": "desirable amongst your customers so let's talk about the first type balances",
    "start": "844760",
    "end": "850610"
  },
  {
    "start": "848000",
    "end": "939000"
  },
  {
    "text": "so bounces are reported from receiving mail server when delivery fails they",
    "start": "850610",
    "end": "855680"
  },
  {
    "text": "represent undeliverable email SES will classify your bounces into three",
    "start": "855680",
    "end": "861410"
  },
  {
    "text": "different categories permanent transient and undetermined permanent bounces",
    "start": "861410",
    "end": "868010"
  },
  {
    "text": "indicate that you should no longer send email to a particular recipient this is because all future email that attempts",
    "start": "868010",
    "end": "874580"
  },
  {
    "text": "will likely fail for that recipient for example if you receive a bounce due to",
    "start": "874580",
    "end": "879680"
  },
  {
    "text": "an invalid recipient email address it's likely you'll receive the same bounce for any future email sent to that",
    "start": "879680",
    "end": "885140"
  },
  {
    "text": "address transient bounces on the other hand represent failed delivery attempts",
    "start": "885140",
    "end": "891230"
  },
  {
    "text": "to an email address which will likely be able to receive email successfully in the future for example an email that",
    "start": "891230",
    "end": "897530"
  },
  {
    "text": "fails due to a full recipient inbox has a high chance of succeeding if we try it again",
    "start": "897530",
    "end": "902800"
  },
  {
    "text": "or if you receive a bounce due to a message being too large you may be able to reduce the message size before",
    "start": "902800",
    "end": "909860"
  },
  {
    "text": "sending again so and finally undetermined bounces represent bounces",
    "start": "909860",
    "end": "915410"
  },
  {
    "text": "the SES was unable to classify in one of the previous two categories this can happen if SES receives a non-standard",
    "start": "915410",
    "end": "921980"
  },
  {
    "text": "bounce from an ISP and is unable to parse and classify that so in summary we recommend that you stop",
    "start": "921980",
    "end": "929380"
  },
  {
    "text": "sitting to addresses that generate permanent bounces for transient bounces it depends and for undetermined bounces",
    "start": "929380",
    "end": "936010"
  },
  {
    "text": "we recommend that you manually review them the next type is complaints complaints are reported from receiving",
    "start": "936010",
    "end": "942790"
  },
  {
    "start": "939000",
    "end": "965000"
  },
  {
    "text": "mail server' when a user marks a message as spam in their email client SCS has feedback loops with ISPs which enable us",
    "start": "942790",
    "end": "950320"
  },
  {
    "text": "to receive these complaints and forward them to you an SCS customer complaints",
    "start": "950320",
    "end": "955450"
  },
  {
    "text": "represent unwanted email so we recommend that you stop sending to the addresses that generate them next is delivery",
    "start": "955450",
    "end": "966880"
  },
  {
    "start": "965000",
    "end": "993000"
  },
  {
    "text": "notifications new to SCS this year this was a big customer request delivery notifications enable you to know the",
    "start": "966880",
    "end": "973270"
  },
  {
    "text": "instant that SCS hands off your email to a receiving mail server in addition to delivery timestamp the notifications",
    "start": "973270",
    "end": "979930"
  },
  {
    "text": "contain other useful information such as the response message of the remote mail server that accepted your email we're",
    "start": "979930",
    "end": "986200"
  },
  {
    "text": "seeing some cool use cases for this feature such as using the notifications to help track time-sensitive emails so",
    "start": "986200",
    "end": "993970"
  },
  {
    "start": "993000",
    "end": "1031000"
  },
  {
    "text": "let's take a look at how these notifications commonly flow here's a SCS customer making a send email API request",
    "start": "993970",
    "end": "1000830"
  },
  {
    "text": "SCS will deliver the email on behalf of the customer upon successful delivery",
    "start": "1000830",
    "end": "1006300"
  },
  {
    "text": "SCS will issue a delivery notification to an SNS topic of the customer's choice",
    "start": "1006300",
    "end": "1011450"
  },
  {
    "text": "let's say the recipient of the email marks a message as spam SCS will receive",
    "start": "1011450",
    "end": "1016650"
  },
  {
    "text": "a complaint from the ISP which will then forward as a complete notification to the SNS topic of a customer's choice",
    "start": "1016650",
    "end": "1022650"
  },
  {
    "text": "this can be either the same SNS topic used for other notification types or a separate SNS topic so let's examine what",
    "start": "1022650",
    "end": "1032850"
  },
  {
    "start": "1031000",
    "end": "1089000"
  },
  {
    "text": "the notifications look like you'll notice they're in the JSON format which allows easy programmatic consumption",
    "start": "1032850",
    "end": "1038100"
  },
  {
    "text": "this one in particular is a bounce each notification type will have some",
    "start": "1038100",
    "end": "1043110"
  },
  {
    "text": "information specific to that type for example bounce type and bounce subtype this one is a transient bounce of",
    "start": "1043110",
    "end": "1049500"
  },
  {
    "text": "subtype mailbox full this indicates the SES was able to classify the bounce it",
    "start": "1049500",
    "end": "1054960"
  },
  {
    "text": "received and determined that the bounce represented an email that was unable to be too liver due to a full recipient inbox this",
    "start": "1054960",
    "end": "1062250"
  },
  {
    "text": "classification by SES makes it really easy for your application to process and act on these notifications without",
    "start": "1062250",
    "end": "1068640"
  },
  {
    "text": "having to parse balanced messages finally each notification will contain a mail object which contains identifying",
    "start": "1068640",
    "end": "1075299"
  },
  {
    "text": "information helping you to relate the notification back to the SES request that generated it for example the",
    "start": "1075299",
    "end": "1080789"
  },
  {
    "text": "message ID shown here is the message ID that was returned to the customer when they made a request to SES so now I'm",
    "start": "1080789",
    "end": "1089549"
  },
  {
    "start": "1089000",
    "end": "1121000"
  },
  {
    "text": "going to show you how you can set up a notification processor leveraging 8 abreast services such as elastic",
    "start": "1089549",
    "end": "1094620"
  },
  {
    "text": "Beanstalk this application is going to consume and process bounces and complaints depending on the type of",
    "start": "1094620",
    "end": "1100350"
  },
  {
    "text": "notification it's going to perform some action such as remove the customer from a mailing list in the case of permanent",
    "start": "1100350",
    "end": "1105960"
  },
  {
    "text": "bounces for some bounces such as mailbox full bounces we may want to temporarily suspend sinning to the customer to give",
    "start": "1105960",
    "end": "1112890"
  },
  {
    "text": "them time to clean out their inbox finally for some notifications we may send them to a human for mail no review",
    "start": "1112890",
    "end": "1120649"
  },
  {
    "text": "so here's an overview of the steps I'm going to take I'm gonna start by creating an SNS topic where I will",
    "start": "1120649",
    "end": "1126929"
  },
  {
    "start": "1121000",
    "end": "1191000"
  },
  {
    "text": "receive these notifications at I'm then going to create an Amazon simple queue service queue and subscribe it to the",
    "start": "1126929",
    "end": "1132870"
  },
  {
    "text": "SNS topic doing this provides a level of durability and temporary message storage",
    "start": "1132870",
    "end": "1138299"
  },
  {
    "text": "allowing my application to process the notifications at its leisure I'll then create an elastic Beanstalk worker to",
    "start": "1138299",
    "end": "1145049"
  },
  {
    "text": "your application which will consume messages from our queue and host our Python code which is processing the",
    "start": "1145049",
    "end": "1150059"
  },
  {
    "text": "notifications finally I'll walk you through some example Python application which shows how you can process the JSON",
    "start": "1150059",
    "end": "1157140"
  },
  {
    "text": "objects and update an email list so let's get started I'm gonna create an",
    "start": "1157140",
    "end": "1162870"
  },
  {
    "text": "SNS topic and an sqs queue I'm then gonna subscribe the queue to the topic which will result in a setup similar to",
    "start": "1162870",
    "end": "1169320"
  },
  {
    "text": "this when SES receives a complaint or a bounce it's gonna forward it to our new SNS topic our SNS topic will then push",
    "start": "1169320",
    "end": "1176760"
  },
  {
    "text": "that notification out to our queue so I'm gonna switch over to a web browser here and show you what this looks like",
    "start": "1176760",
    "end": "1183059"
  },
  {
    "text": "real quick",
    "start": "1183059",
    "end": "1185450"
  },
  {
    "start": "1191000",
    "end": "1272000"
  },
  {
    "text": "great so I'm gonna start here in the SES dashboard of the a DBS console I'm going",
    "start": "1191070",
    "end": "1197110"
  },
  {
    "text": "to navigate over here to the verified senders list where I'll select either the email address or domain that I want",
    "start": "1197110",
    "end": "1202900"
  },
  {
    "text": "to configure settings for I can go down here and hit edit configuration and we'll notice that I don't currently have",
    "start": "1202900",
    "end": "1209559"
  },
  {
    "text": "an SNS topic set up for bounces or complaints I can create a new SNS topic easily from within the SES console next",
    "start": "1209559",
    "end": "1221500"
  },
  {
    "text": "I'll go to the bounce drop-down and select the topic we just created and do the same for complaints now that we have",
    "start": "1221500",
    "end": "1228940"
  },
  {
    "text": "bounces and complaints going to an SNS topic we're going to navigate to the Amazon simple queue service dashboard",
    "start": "1228940",
    "end": "1234490"
  },
  {
    "text": "where we're gonna create a new queue I'm",
    "start": "1234490",
    "end": "1239919"
  },
  {
    "text": "going to name this SES notifications queue and stick with the defaults here",
    "start": "1239919",
    "end": "1247169"
  },
  {
    "text": "next we want to subscribe our queue to our SNS topic I can do the so by going up to queue actions and hitting",
    "start": "1248309",
    "end": "1254260"
  },
  {
    "text": "subscribe key to SNS topic we'll see the topic we just created in the drop down and we can hit subscribe subscribing",
    "start": "1254260",
    "end": "1261250"
  },
  {
    "text": "your queue to your topic this way ensures that the appropriate permissions are in place allowing your topic to push messages to your queue great so we've",
    "start": "1261250",
    "end": "1273460"
  },
  {
    "text": "just completed the first two steps of our solution we have our notifications going to a queue I'm now going to set up an elastic Beanstalk worker to your",
    "start": "1273460",
    "end": "1279880"
  },
  {
    "text": "application to consume the messages from our queue here's an overview of what",
    "start": "1279880",
    "end": "1285460"
  },
  {
    "start": "1284000",
    "end": "1311000"
  },
  {
    "text": "this solution will look like after we're done with this step we're gonna have elastic Beanstalk managing an ec2",
    "start": "1285460",
    "end": "1291100"
  },
  {
    "text": "instance running our Python code will process messages from our queue parse the notification and update our email",
    "start": "1291100",
    "end": "1297730"
  },
  {
    "text": "list when necessary in this example my email list is stored in a PostgreSQL database hosted on Amazon relational",
    "start": "1297730",
    "end": "1304000"
  },
  {
    "text": "database service I'm going to show you what the elastic Beanstalk creation process looks like because it's pretty",
    "start": "1304000",
    "end": "1310539"
  },
  {
    "text": "easy so from the elastic Beanstalk console I'm gonna hit create new application",
    "start": "1310539",
    "end": "1317759"
  },
  {
    "text": "I'm gonna call it SVS feedback processor and we're gonna configure some details",
    "start": "1319640",
    "end": "1325110"
  },
  {
    "text": "of the environment I'm gonna select the worker tier this is different than a traditional elastic Beanstalk application that serves web pages and",
    "start": "1325110",
    "end": "1331770"
  },
  {
    "text": "that it's going to pull messages from a queue and perform some work on them this",
    "start": "1331770",
    "end": "1336960"
  },
  {
    "text": "is perfect for a use case next I'm gonna select Python as the configuration for",
    "start": "1336960",
    "end": "1342570"
  },
  {
    "text": "this example but you'll notice there are many other options finally I've determined that a single",
    "start": "1342570",
    "end": "1348750"
  },
  {
    "text": "instance is enough for my use case but if you notice that a single instance does not adequately handle the volume of",
    "start": "1348750",
    "end": "1355140"
  },
  {
    "text": "notifications you're getting it's easy to come back and leverage auto-scaling integration with elastic Beanstalk to",
    "start": "1355140",
    "end": "1360870"
  },
  {
    "text": "manage multiple instances and then going to upload my application which is a zip",
    "start": "1360870",
    "end": "1366810"
  },
  {
    "text": "file containing my Python code I'll go into some details of what's in this Python code here in a few minutes but",
    "start": "1366810",
    "end": "1374550"
  },
  {
    "text": "for now I'm going to upload this and hit next we can go with the default name for environment and then we also don't need",
    "start": "1374550",
    "end": "1381360"
  },
  {
    "text": "any additional resources at this time although I recommend you launching your environment inside an existing V PC if",
    "start": "1381360",
    "end": "1387060"
  },
  {
    "text": "you have one finally I'm going to configure some details about the instance type in this example I'm gonna",
    "start": "1387060",
    "end": "1394650"
  },
  {
    "text": "stick with the default but there are a wide range of instance types that may suit your application better next I'll",
    "start": "1394650",
    "end": "1401640"
  },
  {
    "text": "select the instance profile this is the I am role which will be launched with each of our ec2 instances in our",
    "start": "1401640",
    "end": "1407430"
  },
  {
    "text": "application this role is going to give our instance permissions to read and write from our sq sq and to publish",
    "start": "1407430",
    "end": "1413490"
  },
  {
    "text": "metrics to cloud watch I'm going to skip",
    "start": "1413490",
    "end": "1418800"
  },
  {
    "text": "through the tag section and finally we're gonna configure some details of our worker we're gonna select the queue",
    "start": "1418800",
    "end": "1424680"
  },
  {
    "text": "we recently created as the input queue for our worker to pull messages from next we'll configure the HTTP path the",
    "start": "1424680",
    "end": "1434040"
  },
  {
    "text": "way the elastic Beanstalk worker tier works is that there's a daemon running on our ec2 instance pulling messages",
    "start": "1434040",
    "end": "1439470"
  },
  {
    "text": "from our queue and posting them to our application via HTTP so this is the URL",
    "start": "1439470",
    "end": "1445470"
  },
  {
    "text": "that we're going to expect our sqs messages at finally we can review everything we just did and launch our",
    "start": "1445470",
    "end": "1451590"
  },
  {
    "text": "application it's gonna take a few minutes to launch our elastic beanstalk app so I'm going to switch back to the presentation and",
    "start": "1451590",
    "end": "1459230"
  },
  {
    "text": "now we have our notifications being pushed to a queue and being processed by our Python code running on an elastic",
    "start": "1459230",
    "end": "1465780"
  },
  {
    "text": "Beanstalk worker tier so I'm going to show you a little bit about our Python code which processes the json",
    "start": "1465780",
    "end": "1471570"
  },
  {
    "text": "notifications and updates our email list here's an overview of what's going on elastic Beanstalk is gonna get a message",
    "start": "1471570",
    "end": "1478559"
  },
  {
    "start": "1474000",
    "end": "1500000"
  },
  {
    "text": "from the queue and post it to our python application we're then gonna parse a notification determine the type and",
    "start": "1478559",
    "end": "1485059"
  },
  {
    "text": "depending on the type we might update our email list or send it off to a human form an overview when we're done",
    "start": "1485059",
    "end": "1491220"
  },
  {
    "text": "processing the message we're gonna return a success response letting elastic Beanstalk know it's safe to",
    "start": "1491220",
    "end": "1496350"
  },
  {
    "text": "delete the message from our queue so here's an overview of the meet of the",
    "start": "1496350",
    "end": "1503039"
  },
  {
    "start": "1500000",
    "end": "1581000"
  },
  {
    "text": "Python application I'm using here we're gonna leverage the flask framework to set up a lightweight HTTP server this",
    "start": "1503039",
    "end": "1510419"
  },
  {
    "text": "annotation is specifying that we want to receive post requests at the slash process URL this is the same URL I just",
    "start": "1510419",
    "end": "1517140"
  },
  {
    "text": "configured our elastic Beanstalk application to post our sqs messages too next we're going to load the message as",
    "start": "1517140",
    "end": "1524039"
  },
  {
    "text": "a JSON object to make it easier to parse and begin by looking at the notification type we know for permanent bounces we",
    "start": "1524039",
    "end": "1530640"
  },
  {
    "text": "want to remove the recipients from our list so that we don't send them anymore email for transient bounces we can look",
    "start": "1530640",
    "end": "1537419"
  },
  {
    "text": "at the bounced subtype for bounces with a subtype of mailbox full we're gonna attempt release has been sending to them",
    "start": "1537419",
    "end": "1543120"
  },
  {
    "text": "so that the recipient has time we clean out their inbox for other transient bounces we're gonna send them to a human",
    "start": "1543120",
    "end": "1549030"
  },
  {
    "text": "for manual review similarly for bounces that are neither permanent nor transient we're gonna send them off to a human",
    "start": "1549030",
    "end": "1555240"
  },
  {
    "text": "from an overview it's important to have a catch-all like this because SES may add additional bounce types in the",
    "start": "1555240",
    "end": "1560760"
  },
  {
    "text": "future finally for complaints we're gonna do something similar to permanent bounces and remove those recipients from",
    "start": "1560760",
    "end": "1567270"
  },
  {
    "text": "our list when we're done processing the notification we're going to return a 200",
    "start": "1567270",
    "end": "1572280"
  },
  {
    "text": "response letting elastic Beanstalk know it's safe to delete the message from our queue",
    "start": "1572280",
    "end": "1577908"
  },
  {
    "text": "so we've just completed all the steps in in our solution so how do we know if it works well I'm gonna leverage the SCS",
    "start": "1580550",
    "end": "1587640"
  },
  {
    "start": "1581000",
    "end": "1672000"
  },
  {
    "text": "mailbox simulator to generate some sample bounces and complaints which will hopefully be picked up by our processor",
    "start": "1587640",
    "end": "1593070"
  },
  {
    "text": "so let me show you a brief demo of what this is gonna look like so I mentioned",
    "start": "1593070",
    "end": "1601860"
  },
  {
    "text": "previously that I have an email list stored in a PostgreSQL database I'm gonna run a simple select all command",
    "start": "1601860",
    "end": "1607320"
  },
  {
    "text": "showing you the contents of my email list here's the recipients that we normally send email to in this example",
    "start": "1607320",
    "end": "1613950"
  },
  {
    "text": "we're gonna focus on the last one complaint at simulator' amazon SES comm this is going to represent a customer of",
    "start": "1613950",
    "end": "1621240"
  },
  {
    "text": "ours who's gonna mark our message as spam when they receive an email from us",
    "start": "1621240",
    "end": "1626570"
  },
  {
    "text": "when that happens we should expect to receive a complete notification which will get picked up by our notification",
    "start": "1626570",
    "end": "1633090"
  },
  {
    "text": "processor which will then notice that it is a complaint and so it will remove the recipient from our email list so I'm",
    "start": "1633090",
    "end": "1641220"
  },
  {
    "text": "gonna make a sample SCS request using the AWS command line interface this makes a simple send email API request to",
    "start": "1641220",
    "end": "1648000"
  },
  {
    "text": "SCS with the basic subject and body we're gonna get a message ID back which",
    "start": "1648000",
    "end": "1654990"
  },
  {
    "text": "indicates that SCS successfully processed our message and is now sending it out if I switch back to the database",
    "start": "1654990",
    "end": "1660960"
  },
  {
    "text": "I should be able to run the same command and will notice the recipients now gone indicating that our processor process",
    "start": "1660960",
    "end": "1666390"
  },
  {
    "text": "that complaint successfully and with",
    "start": "1666390",
    "end": "1673410"
  },
  {
    "text": "that I'm happy I could show you some use cases for notifications with SES and how you can quickly set up a notification",
    "start": "1673410",
    "end": "1678960"
  },
  {
    "text": "processor leveraging a degree of services such as elastic Beanstalk next up I'm gonna introduce Sina from Amazon",
    "start": "1678960",
    "end": "1685650"
  },
  {
    "text": "comms email marketing platform Cena's going to share with you some of the strategies that amazon.com uses to send the right",
    "start": "1685650",
    "end": "1691560"
  },
  {
    "text": "email for its customers thank you",
    "start": "1691560",
    "end": "1695360"
  },
  {
    "text": "Thank You Morgan hi everyone my name is",
    "start": "1699080",
    "end": "1704760"
  },
  {
    "start": "1703000",
    "end": "1717000"
  },
  {
    "text": "Sania Ghana and I'm a technical program manager with Amazon comm email marketing platform today I'll be talking about how",
    "start": "1704760",
    "end": "1711540"
  },
  {
    "text": "Amazon comms sends the percentage and prioritizes their marketing messages but",
    "start": "1711540",
    "end": "1717210"
  },
  {
    "start": "1717000",
    "end": "1734000"
  },
  {
    "text": "before I get started I want to talk a little bit about why I'm here first off Amazon comm is a very large",
    "start": "1717210",
    "end": "1722520"
  },
  {
    "text": "email sender we're also an Amazon SES user because of these two reasons we've been invited by SES here to talk a",
    "start": "1722520",
    "end": "1729120"
  },
  {
    "text": "little bit about our methodologies of how we send marketing messages so what",
    "start": "1729120",
    "end": "1734430"
  },
  {
    "start": "1734000",
    "end": "1764000"
  },
  {
    "text": "kind of messages to be sent at amazon.com first off we send about a million transactional messages per hour",
    "start": "1734430",
    "end": "1740180"
  },
  {
    "text": "these messages are like ship shipment confirmations or purchase confirmations",
    "start": "1740180",
    "end": "1745340"
  },
  {
    "text": "we also send marketing messages where we try to batch and send these emails as",
    "start": "1745340",
    "end": "1750420"
  },
  {
    "text": "quickly as possible I'll be mostly talking about the marketing side of things today finally we don't only send",
    "start": "1750420",
    "end": "1756660"
  },
  {
    "text": "for Amazon calm but we also send for a couple of our subsidiaries such as my habit Zappos inaudible so what do we",
    "start": "1756660",
    "end": "1764490"
  },
  {
    "start": "1764000",
    "end": "1808000"
  },
  {
    "text": "need in an email system well first off we want to make sure that we send all of our emails it's extremely important to",
    "start": "1764490",
    "end": "1770970"
  },
  {
    "text": "make sure that all of our that we have a reliable system to send our messages as we know the opportunity cost of every message that we don't send we also want",
    "start": "1770970",
    "end": "1778440"
  },
  {
    "text": "to be able to scale up and scale down the messages that we send both the throughput in the volume our business",
    "start": "1778440",
    "end": "1785730"
  },
  {
    "text": "changes on every single day and we want to be able to be have the flexibility to move along with it finally we want to",
    "start": "1785730",
    "end": "1792960"
  },
  {
    "text": "make sure that every single message that we send ends up on the ends up in the customers inbox this is actually a",
    "start": "1792960",
    "end": "1798630"
  },
  {
    "text": "really tough problem and it's really nice to have someone else handle that for you I'm boarding with SES makes it so we don't have to worry about that so",
    "start": "1798630",
    "end": "1808140"
  },
  {
    "start": "1808000",
    "end": "1858000"
  },
  {
    "text": "today I want to talk a little bit about how amazon.com does its email marketing or in its email marketing platform architecture aka how we send emails and",
    "start": "1808140",
    "end": "1815400"
  },
  {
    "text": "how we prioritize those messages and the latter half of my talk I want to talk a little bit about our marketing",
    "start": "1815400",
    "end": "1821700"
  },
  {
    "text": "experimentation and metrics for example what a/b tests we run and how we use metrics to ensure that we're sending the",
    "start": "1821700",
    "end": "1826950"
  },
  {
    "text": "best message for our customers so for our marketing messages I said we send a lot of",
    "start": "1826950",
    "end": "1832670"
  },
  {
    "text": "messages we send about 75 to 250 million marketing messages every single day that's about 20 terabytes worth of data",
    "start": "1832670",
    "end": "1839860"
  },
  {
    "text": "we leverage SES notifications in order for our feedback processing and to make sure that we're sending the right",
    "start": "1839860",
    "end": "1845870"
  },
  {
    "text": "messages and finally our rate of send is about 30 million per hour we set this",
    "start": "1845870",
    "end": "1851600"
  },
  {
    "text": "cap because of our business needs but we have the flexibility to change this cap anytime we need to so I want to talk a",
    "start": "1851600",
    "end": "1859160"
  },
  {
    "start": "1858000",
    "end": "1891000"
  },
  {
    "text": "bit about a problem that we found when we want to solve or send messages at a high volume so in a basic system each",
    "start": "1859160",
    "end": "1866000"
  },
  {
    "text": "merchandiser chooses the message content and the customers each customer will then get every single message that's",
    "start": "1866000",
    "end": "1871040"
  },
  {
    "text": "targeted for them I wanted to find what a merchandiser is at amazon.com a merchandiser amazon.com every department",
    "start": "1871040",
    "end": "1878210"
  },
  {
    "text": "has a marketing merchandiser and these are the people were sending up the email campaigns so to illustrate why this is a",
    "start": "1878210",
    "end": "1883580"
  },
  {
    "text": "problem I'm going to go ahead and go through an example we have a shus merchandiser and a book merchandiser that wants to set up an email marketing",
    "start": "1883580",
    "end": "1889940"
  },
  {
    "text": "message they go ahead and set up their campaigns and then they send their message to every single customer that",
    "start": "1889940",
    "end": "1896510"
  },
  {
    "text": "they've targeted what this means is that certain certain people are going to get multiple messages for that day a common",
    "start": "1896510",
    "end": "1903860"
  },
  {
    "text": "solution to solve this problem is to have some sort of scheduling where books merchandisers for example send on a",
    "start": "1903860",
    "end": "1909170"
  },
  {
    "text": "Wednesday and shoes merchandisers send on a Thursday however it's not the but",
    "start": "1909170",
    "end": "1915200"
  },
  {
    "text": "it's not the best way to solve this problem as we have it's not the best message that we can send to the customer",
    "start": "1915200",
    "end": "1920450"
  },
  {
    "text": "and more importantly amazon.com is very big our customers are interested in multiple multitude of different",
    "start": "1920450",
    "end": "1926660"
  },
  {
    "start": "1921000",
    "end": "1934000"
  },
  {
    "text": "departments for example a books for someone who enjoys books may also enjoy shoes automotives etc and just going to",
    "start": "1926660",
    "end": "1934490"
  },
  {
    "text": "the amazon.com website you can see we have a lot of different departments that we sell things on each one of these",
    "start": "1934490",
    "end": "1941180"
  },
  {
    "text": "departments actually has a merchandiser that's Kate at creating campaigns and because of that each customer on average",
    "start": "1941180",
    "end": "1946940"
  },
  {
    "text": "is targeted for seven different campaigns every single day so how do we solve this problem well let's go through",
    "start": "1946940",
    "end": "1953510"
  },
  {
    "start": "1953000",
    "end": "1979000"
  },
  {
    "text": "how we actually currently send mail we have merchandisers and our automation teams creating campaigns that we then",
    "start": "1953510",
    "end": "1959510"
  },
  {
    "text": "store in Amazon s our automation teams create emails based on customer behaviors such as abandoned",
    "start": "1959510",
    "end": "1965180"
  },
  {
    "text": "current messages or view follow-up messages from s3 we then have something called the planner which determines",
    "start": "1965180",
    "end": "1971120"
  },
  {
    "text": "what's the best message to send each customer we then commit that planteth Amazon s3 we then render and that we",
    "start": "1971120",
    "end": "1977180"
  },
  {
    "text": "send using SES let's focus on the planner because that's the that's the component that actually solved the",
    "start": "1977180",
    "end": "1983300"
  },
  {
    "start": "1979000",
    "end": "2004000"
  },
  {
    "text": "problem that was illustrating earlier so in our distributed marketing system the merchandiser sets up the targeting",
    "start": "1983300",
    "end": "1989960"
  },
  {
    "text": "and the content but then the planner then determines what's the best message to send to the customer this ensures that the customer only gets the best",
    "start": "1989960",
    "end": "1995990"
  },
  {
    "text": "marketing message so going back to our previous example we have the shoes and",
    "start": "1995990",
    "end": "2001030"
  },
  {
    "text": "books merchandisers they do the exact same thing but instead of just sending it directly to the customer they're",
    "start": "2001030",
    "end": "2006640"
  },
  {
    "text": "actually feeding their messages into our planner and then the planner determines what's the best message this is very",
    "start": "2006640",
    "end": "2013450"
  },
  {
    "text": "efficient and good for a lot of reasons first of all the merchandisers have",
    "start": "2013450",
    "end": "2018640"
  },
  {
    "text": "their own marketing strategy and they're able to execute on their strategy they're autonomous departments and they have their own way that they want to",
    "start": "2018640",
    "end": "2024520"
  },
  {
    "text": "send their message and we're still able to not disrupt that workflow so let's",
    "start": "2024520",
    "end": "2030880"
  },
  {
    "start": "2030000",
    "end": "2147000"
  },
  {
    "text": "dive a little bit deeper and how the planner actually works so i'm going to go through all the steps that the planner takes first off the",
    "start": "2030880",
    "end": "2036220"
  },
  {
    "text": "merchandisers upload their targeted customer list to Amazon s3 second we use Amazon Elastic MapReduce to figure out",
    "start": "2036220",
    "end": "2042340"
  },
  {
    "text": "what's the top valued message and finally we commit that result into Amazon s3 for rendering and then we send",
    "start": "2042340",
    "end": "2049300"
  },
  {
    "text": "with SES so going step by step first we upload the campaigns the merchandisers",
    "start": "2049300",
    "end": "2055450"
  },
  {
    "text": "and the automated teams will then upload their upload their campaigns to Amazon s3 with a list of recipients that are",
    "start": "2055450",
    "end": "2061270"
  },
  {
    "text": "intended to receive that campaign from there we then look at every single",
    "start": "2061270",
    "end": "2067810"
  },
  {
    "text": "campaign campaigns have metadata associated with them for example a books campaign can have its genre or whether",
    "start": "2067810",
    "end": "2074620"
  },
  {
    "text": "it's available on Kindle as part of its metadata and we use Hadoop distributed cache on elastic MapReduce to store this",
    "start": "2074620",
    "end": "2080800"
  },
  {
    "text": "information on every single node in the cluster each recipient also has some",
    "start": "2080800",
    "end": "2086110"
  },
  {
    "text": "metadata associated with it for example has this person bought of books books has has this person bought a book in the",
    "start": "2086110",
    "end": "2092139"
  },
  {
    "text": "last couple days or are they a prime member taking all of this information we want",
    "start": "2092140",
    "end": "2097730"
  },
  {
    "text": "to take the recipient and map it to each campaign as well as map the recipient to each to its own metadata when we reduce",
    "start": "2097730",
    "end": "2104869"
  },
  {
    "text": "this we see that each recipient will then have every cut every eligible campaign and its metadata so processing",
    "start": "2104869",
    "end": "2113900"
  },
  {
    "text": "this reduced data we process this reduced data using recipient campaign metadata so taking the campaign metadata",
    "start": "2113900",
    "end": "2119869"
  },
  {
    "text": "in the recipient metadata we then use prioritization logic or an algorithm to figure out what's the best way to actually send this what's the best email",
    "start": "2119869",
    "end": "2126170"
  },
  {
    "text": "to actually send to this customer we then do this for every single recipient and we commit this plan to Amazon s3 the",
    "start": "2126170",
    "end": "2135110"
  },
  {
    "text": "key takeaways from this is that we still have our distributed marketing but we have a centralized planner that determines what's the best message to",
    "start": "2135110",
    "end": "2141260"
  },
  {
    "text": "send each customer we typically only send one marketing message per customer per day and finally we use Amazon",
    "start": "2141260",
    "end": "2149510"
  },
  {
    "start": "2147000",
    "end": "2163000"
  },
  {
    "text": "Elastic MapReduce in Amazon s3 for our planning so now that we have a system in",
    "start": "2149510",
    "end": "2155450"
  },
  {
    "text": "place on how we actually send our marketing messages a common question that we often receive from merchandisers is how can we improve our message common",
    "start": "2155450",
    "end": "2163640"
  },
  {
    "text": "questions that we receive are can we improve our content how can we improve our content can we improve our targeting should we even send this message luckily",
    "start": "2163640",
    "end": "2171230"
  },
  {
    "text": "there's a very simple answer to all of these questions using a be experimentation you're able to figure out whether you're sending the optimal",
    "start": "2171230",
    "end": "2177140"
  },
  {
    "text": "message so there's certain types that are different types of ad experiments that we can do for content we offer",
    "start": "2177140",
    "end": "2183830"
  },
  {
    "text": "multiple templates to each of our merchandisers so they can actually have the same email campaign sent out with different different content what this",
    "start": "2183830",
    "end": "2191359"
  },
  {
    "text": "allows them to do is actually compare their experimental content with their control and be able to see whether the new content is better than the old we",
    "start": "2191359",
    "end": "2198440"
  },
  {
    "text": "also offer a feature known as staggered sending which allows people to art which allows them to set up the experiment and",
    "start": "2198440",
    "end": "2203869"
  },
  {
    "text": "then we automatically scale up or scale down how much we send on that experiment another thing that we can do is actually",
    "start": "2203869",
    "end": "2210410"
  },
  {
    "text": "affect the planner itself the planner is using an algorithm to figure out what's the best message to send and we can",
    "start": "2210410",
    "end": "2215570"
  },
  {
    "text": "actually use machine learning or other methods to actually fine-tune how we decide what's the best message finally",
    "start": "2215570",
    "end": "2222760"
  },
  {
    "text": "for the same camp for one campaign someone has a certain target or a group",
    "start": "2222760",
    "end": "2227770"
  },
  {
    "text": "of customers that they want to target and they want to figure out is that the right is that the right group of people to target targeting a/b testing is",
    "start": "2227770",
    "end": "2234070"
  },
  {
    "text": "actually a little bit more difficult than explained so I'm gonna actually run through a quick example about it so for",
    "start": "2234070",
    "end": "2239890"
  },
  {
    "text": "example we have a shus campaign for that target's customers who bought shoes within the last six months we want we",
    "start": "2239890",
    "end": "2245890"
  },
  {
    "text": "noticed that this campaign is actually doing quite well and we want to know if there we can either grow our targeting list or if we should change our",
    "start": "2245890",
    "end": "2251380"
  },
  {
    "text": "targeting at all so the question would be should we change this targeting to be customers who bought shoes but then four",
    "start": "2251380",
    "end": "2256720"
  },
  {
    "text": "to ten months so to do this I'm going to go ahead and put up a Venn diagram on",
    "start": "2256720",
    "end": "2262300"
  },
  {
    "start": "2258000",
    "end": "2273000"
  },
  {
    "text": "the left side we have the people who have bought a group of people who've bought shoes within the last six months",
    "start": "2262300",
    "end": "2267640"
  },
  {
    "text": "and on the right side people who bought it within four to ten months most people",
    "start": "2267640",
    "end": "2273340"
  },
  {
    "start": "2273000",
    "end": "2290000"
  },
  {
    "text": "would just want to split it down the middle and maybe do an a/b test let's go ahead and put some some some numbers in",
    "start": "2273340",
    "end": "2278770"
  },
  {
    "text": "there we'll say that a is making five cents of mail and be said Center is making three cents per mail does that",
    "start": "2278770",
    "end": "2284980"
  },
  {
    "text": "mean that a is a better target than be not necessarily actually and in order to",
    "start": "2284980",
    "end": "2290170"
  },
  {
    "start": "2290000",
    "end": "2374000"
  },
  {
    "text": "actually explain why that's the case I have to explain the concept of a holdout group so traditionally what a holdout",
    "start": "2290170",
    "end": "2295450"
  },
  {
    "text": "group means is that there's a targeted group of people who will receive the message that they're targeted for but",
    "start": "2295450",
    "end": "2301720"
  },
  {
    "text": "the holdout group actually does not receive that message at amazon.com since we have the planner we're actually able",
    "start": "2301720",
    "end": "2307720"
  },
  {
    "text": "to have a better holdout group by sending the next best message so at amazon.com which is a little different",
    "start": "2307720",
    "end": "2313690"
  },
  {
    "text": "than most other other places the population if we do a 50% holdout 50% of the population will receive the message",
    "start": "2313690",
    "end": "2319870"
  },
  {
    "text": "and then 50% of the holdout group will receive the next best message so in our",
    "start": "2319870",
    "end": "2325000"
  },
  {
    "text": "example we're making five cents the mail for for our a targeting but we noticed that the holdouts making six cents of",
    "start": "2325000",
    "end": "2331090"
  },
  {
    "text": "mail we can see that incrementally we're actually not sending the best message to those customers with our planner it's",
    "start": "2331090",
    "end": "2337840"
  },
  {
    "text": "actually quite easy to do to implement our holdout groups I wrote up some pseudocode over here but the main gist",
    "start": "2337840",
    "end": "2343870"
  },
  {
    "text": "of it is that if you take a hash of the recipient and take a look at the experimentation hash range and you",
    "start": "2343870",
    "end": "2349540"
  },
  {
    "text": "notice that the recipient isn't in that range then we could just remove the recipient and campaign ID in the pair in",
    "start": "2349540",
    "end": "2355030"
  },
  {
    "text": "the pot and the planner we use a hash because it allows us to it allows us to",
    "start": "2355030",
    "end": "2360640"
  },
  {
    "text": "actually keep treatment groups for if we want to do a long-standing experiment or if we want to do multiple experiments with the same",
    "start": "2360640",
    "end": "2365750"
  },
  {
    "text": "targeting group so let's go back to our to our targeting example earlier except",
    "start": "2365750",
    "end": "2372500"
  },
  {
    "text": "this time let's add a holdout group so previously we wanted to compare a versus B but now let's go ahead and throw some",
    "start": "2372500",
    "end": "2378680"
  },
  {
    "start": "2374000",
    "end": "2442000"
  },
  {
    "text": "values into our holdout groups as well so now we want to complete actually calculate the incremental value for a",
    "start": "2378680",
    "end": "2385490"
  },
  {
    "text": "and the incremental value for B so to do this we take the value of a which is",
    "start": "2385490",
    "end": "2390619"
  },
  {
    "text": "making five cents in mail and subtract it with the value of the a holdout which is six cents per mail so the incremental",
    "start": "2390619",
    "end": "2395780"
  },
  {
    "text": "value for sending to that targeting group is negative one sentiment and the incremental four value for B is we take",
    "start": "2395780",
    "end": "2403190"
  },
  {
    "text": "three cents per mail for B and we subtract it with this holdout which is one cent and we get two cents of mail so",
    "start": "2403190",
    "end": "2408980"
  },
  {
    "text": "what does this mean this means that incrementally B is a better campaign than a and therefore we should use Group",
    "start": "2408980",
    "end": "2414349"
  },
  {
    "text": "B for our targeting let's go ahead and change our example one last time except",
    "start": "2414349",
    "end": "2419599"
  },
  {
    "text": "this time let's assume that a is making seven cents of mail so B stays the same but a is actually making one cent amount",
    "start": "2419599",
    "end": "2426490"
  },
  {
    "text": "it should be sent to a or should we send to be actually the answer is that we",
    "start": "2426490",
    "end": "2432020"
  },
  {
    "text": "should set use both groups for our targeting because both groups are incrementally doing a better job than their holdout groups so both groups will",
    "start": "2432020",
    "end": "2438380"
  },
  {
    "text": "actually be a good a good group of people to send to so the key takeaway from this is that incremental values a",
    "start": "2438380",
    "end": "2445160"
  },
  {
    "start": "2442000",
    "end": "2461000"
  },
  {
    "text": "really good way for us to see whether we should either send the mail or which group we should send it to using the",
    "start": "2445160",
    "end": "2451099"
  },
  {
    "text": "incremental value of a versus the incremental value of B will allow us to know whether we should send a Group A or B or both so now that we've explained a",
    "start": "2451099",
    "end": "2459890"
  },
  {
    "text": "little bit about our experimentation I'm going to talk about some of the metrics that we use first off everything that we",
    "start": "2459890",
    "end": "2465589"
  },
  {
    "start": "2461000",
    "end": "2519000"
  },
  {
    "text": "do has to have statistical significance for us to care about it I'm not going to go into how the calculations of",
    "start": "2465589",
    "end": "2471440"
  },
  {
    "text": "statistical significance but I use 95 we usually use 95% confidence intervals to determine that our experiments are",
    "start": "2471440",
    "end": "2477050"
  },
  {
    "text": "actually statistically viable rather than random occurrences one thing that",
    "start": "2477050",
    "end": "2482240"
  },
  {
    "text": "we noticed is that opens and clicks since they're a binary metric they're easier to actually get statistical",
    "start": "2482240",
    "end": "2488510"
  },
  {
    "text": "significance for what I mean by a binary metric it's either the customer either open the message or",
    "start": "2488510",
    "end": "2493910"
  },
  {
    "text": "they didn't they either click through the message or they did it because of this it's actually we can get quick",
    "start": "2493910",
    "end": "2498950"
  },
  {
    "text": "turnaround whether our our mails are getting engaged properly and whether people are enjoying it the best way to",
    "start": "2498950",
    "end": "2506059"
  },
  {
    "text": "actually calculate whether our emails are doing good though is the monetary value this is a non binary metric which",
    "start": "2506059",
    "end": "2511099"
  },
  {
    "text": "means that we either have to have a higher ad test more people in the in the experiment group or we have to run it",
    "start": "2511099",
    "end": "2516799"
  },
  {
    "text": "over a longer period of time finally one thing that we do at amazon.com is something known as site-wide monetary",
    "start": "2516799",
    "end": "2524000"
  },
  {
    "start": "2519000",
    "end": "2541000"
  },
  {
    "text": "value this is us comparing one experiment against all of amazon.com it'll actually give us some of the best",
    "start": "2524000",
    "end": "2531230"
  },
  {
    "text": "data that we could possibly get however it has a lot of noise and it's non-binary so this usually takes like a",
    "start": "2531230",
    "end": "2536420"
  },
  {
    "text": "month or a year before we can get any sort of statistical significance there's",
    "start": "2536420",
    "end": "2541579"
  },
  {
    "start": "2541000",
    "end": "2580000"
  },
  {
    "text": "some negative engagements that we also look at negative engagement metrics that we also look at for example the one that",
    "start": "2541579",
    "end": "2547339"
  },
  {
    "text": "we like to use a lot is opt-out per click ratio the reason why we use this one is because if the number goes up",
    "start": "2547339",
    "end": "2553130"
  },
  {
    "text": "that means people are either not enjoying their email or they're not engaging with the email which is both bad so it's a very easy way for us to",
    "start": "2553130",
    "end": "2559819"
  },
  {
    "text": "determine whether we're actually sending the right message or not finally we use",
    "start": "2559819",
    "end": "2565160"
  },
  {
    "text": "bounces of complaints that were delivered from Amazon SES similar to the notification feedback process under that",
    "start": "2565160",
    "end": "2570740"
  },
  {
    "text": "Morgan was just showing we are able to take our complaints and make sure that we don't send marketing messages to",
    "start": "2570740",
    "end": "2576829"
  },
  {
    "text": "those addresses again so tying it all together Amazon marketing sends a lot of email",
    "start": "2576829",
    "end": "2583700"
  },
  {
    "text": "messages because of the planner our customers love getting the best email that's for them we leverage SES feedback",
    "start": "2583700",
    "end": "2590480"
  },
  {
    "text": "loops to allow our detail to allow us to tailor our customer experience and finally a be testing experimentation are",
    "start": "2590480",
    "end": "2596750"
  },
  {
    "text": "key for us for us to make sure that we send the best message and that we keep the customers happy all right I want to",
    "start": "2596750",
    "end": "2605569"
  },
  {
    "start": "2604000",
    "end": "2621000"
  },
  {
    "text": "thank you all for coming today I hope you enjoy it and take away some stuff from this we're going to be at the QA",
    "start": "2605569",
    "end": "2611450"
  },
  {
    "text": "booth if you guys have any questions please come find us we'd love to answer your questions thank you",
    "start": "2611450",
    "end": "2618800"
  },
  {
    "text": "you",
    "start": "2618800",
    "end": "2620860"
  }
]