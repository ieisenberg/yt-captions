[
  {
    "text": "[Music]",
    "start": "0",
    "end": "6410"
  },
  {
    "text": "hi welcome to this is my model my name",
    "start": "6410",
    "end": "9840"
  },
  {
    "text": "is Andrea and I'm here with Molly from",
    "start": "9840",
    "end": "11940"
  },
  {
    "text": "Zeppo hi moon welcome to the show great",
    "start": "11940",
    "end": "14910"
  },
  {
    "text": "thanks for having me here",
    "start": "14910",
    "end": "16619"
  },
  {
    "text": "of course you're the creator of Zeppelin",
    "start": "16619",
    "end": "19859"
  },
  {
    "text": "notebook and the co-founder of Zeppo can",
    "start": "19859",
    "end": "23340"
  },
  {
    "text": "you tell our viewers what is the",
    "start": "23340",
    "end": "24720"
  },
  {
    "text": "difference between these two opposites",
    "start": "24720",
    "end": "27449"
  },
  {
    "text": "airplane is an open-source data science",
    "start": "27449",
    "end": "30000"
  },
  {
    "text": "note to that you can download or build",
    "start": "30000",
    "end": "32250"
  },
  {
    "text": "and deploy anywhere you want the pole is",
    "start": "32250",
    "end": "35640"
  },
  {
    "text": "your SAS service with enterprise support",
    "start": "35640",
    "end": "40020"
  },
  {
    "text": "like a security and collaborations great",
    "start": "40020",
    "end": "44250"
  },
  {
    "text": "so we're going to talk about the use",
    "start": "44250",
    "end": "45989"
  },
  {
    "text": "case we chose customer churn I'm a data",
    "start": "45989",
    "end": "49890"
  },
  {
    "text": "scientist I want to take advantage of",
    "start": "49890",
    "end": "51930"
  },
  {
    "text": "zepo platform walk us through here I see",
    "start": "51930",
    "end": "55050"
  },
  {
    "text": "on this on this board eks easy as well",
    "start": "55050",
    "end": "59370"
  },
  {
    "text": "where does I start as a data scientist",
    "start": "59370",
    "end": "61500"
  },
  {
    "text": "how do I take advantage of your platform",
    "start": "61500",
    "end": "63390"
  },
  {
    "text": "so first first thing you need to do is",
    "start": "63390",
    "end": "66240"
  },
  {
    "text": "you need to connect to your data",
    "start": "66240",
    "end": "68369"
  },
  {
    "text": "so our set pool is running on East eks",
    "start": "68369",
    "end": "72780"
  },
  {
    "text": "okay so our entire service component is",
    "start": "72780",
    "end": "77729"
  },
  {
    "text": "running on the kubernetes and support",
    "start": "77729",
    "end": "82080"
  },
  {
    "text": "can connect to multiple data services",
    "start": "82080",
    "end": "84330"
  },
  {
    "text": "like amazon athena s3 or ideas and let",
    "start": "84330",
    "end": "89220"
  },
  {
    "text": "me assume that we have a customer's",
    "start": "89220",
    "end": "91710"
  },
  {
    "text": "behavior data that our data engineer",
    "start": "91710",
    "end": "94170"
  },
  {
    "text": "prepared on Amazon s3",
    "start": "94170",
    "end": "97200"
  },
  {
    "text": "and historical turn turn data on Amazon",
    "start": "97200",
    "end": "100590"
  },
  {
    "text": "RDS and Zappo you can first thing you",
    "start": "100590",
    "end": "104610"
  },
  {
    "text": "can do is you can create a new tool in",
    "start": "104610",
    "end": "106439"
  },
  {
    "text": "in the sample and that node is running",
    "start": "106439",
    "end": "109409"
  },
  {
    "text": "on the ECS and not to can connect to",
    "start": "109409",
    "end": "112110"
  },
  {
    "text": "multiple data sources at the same time I",
    "start": "112110",
    "end": "115460"
  },
  {
    "text": "see so this is assuming the customers",
    "start": "115460",
    "end": "119909"
  },
  {
    "text": "data is in s3 or in a relational data",
    "start": "119909",
    "end": "122610"
  },
  {
    "text": "store what would you do if the customers",
    "start": "122610",
    "end": "124799"
  },
  {
    "text": "use case in this case the churn customer",
    "start": "124799",
    "end": "127350"
  },
  {
    "text": "churn scenario we have data sitting",
    "start": "127350",
    "end": "129479"
  },
  {
    "text": "outside these data stores how would you",
    "start": "129479",
    "end": "131489"
  },
  {
    "text": "address that it's a poor supper",
    "start": "131489",
    "end": "134159"
  },
  {
    "text": "many different data sources but even if",
    "start": "134159",
    "end": "137080"
  },
  {
    "text": "you have a data sources that support us",
    "start": "137080",
    "end": "139360"
  },
  {
    "text": "and support you can actually install",
    "start": "139360",
    "end": "141069"
  },
  {
    "text": "your data sources driver or client",
    "start": "141069",
    "end": "143409"
  },
  {
    "text": "inside or no - so there is a project",
    "start": "143409",
    "end": "146260"
  },
  {
    "text": "virtually no limitation which data",
    "start": "146260",
    "end": "149440"
  },
  {
    "text": "source you want to connect ok so I do",
    "start": "149440",
    "end": "151959"
  },
  {
    "text": "see elastic container registry here how",
    "start": "151959",
    "end": "155049"
  },
  {
    "text": "does that fit into the elastic container",
    "start": "155049",
    "end": "157510"
  },
  {
    "text": "service notebook framework so actually",
    "start": "157510",
    "end": "161739"
  },
  {
    "text": "we are probe we are running low tool on",
    "start": "161739",
    "end": "164200"
  },
  {
    "text": "the container",
    "start": "164200",
    "end": "164980"
  },
  {
    "text": "each node to have a container and to run",
    "start": "164980",
    "end": "167980"
  },
  {
    "text": "or not to in the container we need a",
    "start": "167980",
    "end": "169920"
  },
  {
    "text": "container image and we are storing",
    "start": "169920",
    "end": "172420"
  },
  {
    "text": "container image on Amazon ECI service",
    "start": "172420",
    "end": "175420"
  },
  {
    "text": "and read library time as an ECR service",
    "start": "175420",
    "end": "178299"
  },
  {
    "text": "to keep many different versions of it",
    "start": "178299",
    "end": "180730"
  },
  {
    "text": "not to image to improve reproducibility",
    "start": "180730",
    "end": "184090"
  },
  {
    "text": "or not - Oh interesting",
    "start": "184090",
    "end": "185980"
  },
  {
    "text": "so in our customer churn scenario we got",
    "start": "185980",
    "end": "189819"
  },
  {
    "text": "our data I want to do exploratory work",
    "start": "189819",
    "end": "192609"
  },
  {
    "text": "at the data scientist tell us about this",
    "start": "192609",
    "end": "195909"
  },
  {
    "text": "exploratory data path I do see Athena",
    "start": "195909",
    "end": "198430"
  },
  {
    "text": "here do I take advantage of that or",
    "start": "198430",
    "end": "200709"
  },
  {
    "text": "would it be somewhere else yeah if you",
    "start": "200709",
    "end": "203680"
  },
  {
    "text": "are creating notebook and then you can",
    "start": "203680",
    "end": "206290"
  },
  {
    "text": "connect to data sources multiple data",
    "start": "206290",
    "end": "209709"
  },
  {
    "text": "sources at once so in this case your",
    "start": "209709",
    "end": "213010"
  },
  {
    "text": "notes you can access s3 and RDS data",
    "start": "213010",
    "end": "217000"
  },
  {
    "text": "services through our container no.2",
    "start": "217000",
    "end": "221349"
  },
  {
    "text": "container and you can write a queries or",
    "start": "221349",
    "end": "224790"
  },
  {
    "text": "script to analyze and visualize your",
    "start": "224790",
    "end": "228250"
  },
  {
    "text": "release results in case of you have a",
    "start": "228250",
    "end": "230970"
  },
  {
    "text": "really large data set in s3 then imagine",
    "start": "230970",
    "end": "235690"
  },
  {
    "text": "you can use Amazon Athena to run the",
    "start": "235690",
    "end": "238720"
  },
  {
    "text": "query against your really large data set",
    "start": "238720",
    "end": "241569"
  },
  {
    "text": "or you can even connect to the spot",
    "start": "241569",
    "end": "244599"
  },
  {
    "text": "cluster on Amazon EMR support can spin",
    "start": "244599",
    "end": "247569"
  },
  {
    "text": "up a spark cluster on a magic EMR and",
    "start": "247569",
    "end": "250030"
  },
  {
    "text": "spark on EMR can process data on s3 in a",
    "start": "250030",
    "end": "254889"
  },
  {
    "text": "distributed manner",
    "start": "254889",
    "end": "256120"
  },
  {
    "text": "ok so highly integrated with set of core",
    "start": "256120",
    "end": "259000"
  },
  {
    "text": "services for processing for exploratory",
    "start": "259000",
    "end": "261400"
  },
  {
    "text": "of large sets of data you mentioned also",
    "start": "261400",
    "end": "263860"
  },
  {
    "text": "within the Zeppelin notebook",
    "start": "263860",
    "end": "265430"
  },
  {
    "text": "there is some expiratory we've now done",
    "start": "265430",
    "end": "268039"
  },
  {
    "text": "our exploration we are ready to do the",
    "start": "268039",
    "end": "271009"
  },
  {
    "text": "machine learning where do I start if you",
    "start": "271009",
    "end": "274820"
  },
  {
    "text": "are data scientist and want to create a",
    "start": "274820",
    "end": "277430"
  },
  {
    "text": "machine learning model and you can start",
    "start": "277430",
    "end": "280430"
  },
  {
    "text": "from the from your notebook and you can",
    "start": "280430",
    "end": "283820"
  },
  {
    "text": "train your data and data can a data to",
    "start": "283820",
    "end": "286669"
  },
  {
    "text": "train can be loaded from s3 or any other",
    "start": "286669",
    "end": "289910"
  },
  {
    "text": "data sources and you can train your",
    "start": "289910",
    "end": "292400"
  },
  {
    "text": "model and deploy your model using",
    "start": "292400",
    "end": "295190"
  },
  {
    "text": "seismic API so we support stage maker",
    "start": "295190",
    "end": "299900"
  },
  {
    "text": "API to deploy your model but if you want",
    "start": "299900",
    "end": "303410"
  },
  {
    "text": "you can train your model in the city",
    "start": "303410",
    "end": "305389"
  },
  {
    "text": "maker as well okay in terms of",
    "start": "305389",
    "end": "308919"
  },
  {
    "text": "leveraging deep learning machine",
    "start": "308919",
    "end": "311180"
  },
  {
    "text": "learning with this platform support both",
    "start": "311180",
    "end": "314389"
  },
  {
    "text": "is there any situation there and you",
    "start": "314389",
    "end": "317000"
  },
  {
    "text": "think users might not be able to explore",
    "start": "317000",
    "end": "320979"
  },
  {
    "text": "suppose notes well you can use languages",
    "start": "320979",
    "end": "324440"
  },
  {
    "text": "that you want for example we we support",
    "start": "324440",
    "end": "328370"
  },
  {
    "text": "Python our scholar and sequel languages",
    "start": "328370",
    "end": "332120"
  },
  {
    "text": "and you can also use your favorite",
    "start": "332120",
    "end": "334990"
  },
  {
    "text": "frameworks like tensorflow",
    "start": "334990",
    "end": "337159"
  },
  {
    "text": "Python or ml lab in spark so you can do",
    "start": "337159",
    "end": "341570"
  },
  {
    "text": "you can build your model with your own",
    "start": "341570",
    "end": "344710"
  },
  {
    "text": "languages and frameworks okay wonderful",
    "start": "344710",
    "end": "348349"
  },
  {
    "text": "so talking about regions ok is this in",
    "start": "348349",
    "end": "352580"
  },
  {
    "text": "one region is the multi region how do",
    "start": "352580",
    "end": "354800"
  },
  {
    "text": "you address a global reach so entire",
    "start": "354800",
    "end": "358460"
  },
  {
    "text": "that both service component internally",
    "start": "358460",
    "end": "361159"
  },
  {
    "text": "are they are highly available and fault",
    "start": "361159",
    "end": "364280"
  },
  {
    "text": "tolerant we are running in the Amazon",
    "start": "364280",
    "end": "368449"
  },
  {
    "text": "West region but the universe that you",
    "start": "368449",
    "end": "372349"
  },
  {
    "text": "can connect is not limited to Amazon",
    "start": "372349",
    "end": "375020"
  },
  {
    "text": "West so you can connect to any data or",
    "start": "375020",
    "end": "377870"
  },
  {
    "text": "services from anyplace in the world",
    "start": "377870",
    "end": "380090"
  },
  {
    "text": "ok and we also have an option to deploy",
    "start": "380090",
    "end": "382699"
  },
  {
    "text": "our platform in Europe EPC Oh wonderful",
    "start": "382699",
    "end": "386440"
  },
  {
    "text": "how about how do you address data",
    "start": "386440",
    "end": "388789"
  },
  {
    "text": "governance talk more specifically about",
    "start": "388789",
    "end": "391099"
  },
  {
    "text": "data catalog and does this platform",
    "start": "391099",
    "end": "393520"
  },
  {
    "text": "support that as part of your eks",
    "start": "393520",
    "end": "396710"
  },
  {
    "text": "container that's actually really good",
    "start": "396710",
    "end": "400340"
  },
  {
    "text": "case and one of one of our future laws",
    "start": "400340",
    "end": "403340"
  },
  {
    "text": "met because it was opposed approach",
    "start": "403340",
    "end": "405970"
  },
  {
    "text": "entire data must not in pipeline it also",
    "start": "405970",
    "end": "409580"
  },
  {
    "text": "makes sense to support model management",
    "start": "409580",
    "end": "413240"
  },
  {
    "text": "so we are planning to we will have a",
    "start": "413240",
    "end": "416540"
  },
  {
    "text": "model management capability so multiple",
    "start": "416540",
    "end": "419960"
  },
  {
    "text": "personal model data scientists can",
    "start": "419960",
    "end": "422450"
  },
  {
    "text": "manage and they can track and see the",
    "start": "422450",
    "end": "424550"
  },
  {
    "text": "performance of each models so the you",
    "start": "424550",
    "end": "427310"
  },
  {
    "text": "know scientist can compare and improve",
    "start": "427310",
    "end": "429620"
  },
  {
    "text": "models performance great thank you very",
    "start": "429620",
    "end": "432560"
  },
  {
    "text": "much for walking us through this example",
    "start": "432560",
    "end": "434840"
  },
  {
    "text": "so the zipper platform is essentially",
    "start": "434840",
    "end": "436550"
  },
  {
    "text": "running on eks and ECS and then you can",
    "start": "436550",
    "end": "439490"
  },
  {
    "text": "tap into different data sources you can",
    "start": "439490",
    "end": "441560"
  },
  {
    "text": "do exploratory work and finally but not",
    "start": "441560",
    "end": "444889"
  },
  {
    "text": "least do extreme you know machine",
    "start": "444889",
    "end": "447560"
  },
  {
    "text": "learning and and processing on large",
    "start": "447560",
    "end": "450380"
  },
  {
    "text": "data sets using sage maker and EMR and",
    "start": "450380",
    "end": "452720"
  },
  {
    "text": "customers are not necessarily limited to",
    "start": "452720",
    "end": "455150"
  },
  {
    "text": "use a specific framework you keep it",
    "start": "455150",
    "end": "457370"
  },
  {
    "text": "open to allow users to do do any machine",
    "start": "457370",
    "end": "460820"
  },
  {
    "text": "learning framework of their choice thank",
    "start": "460820",
    "end": "463010"
  },
  {
    "text": "you very much for presenting this thank",
    "start": "463010",
    "end": "464750"
  },
  {
    "text": "you and thanks for watching this is my",
    "start": "464750",
    "end": "466580"
  },
  {
    "text": "model",
    "start": "466580",
    "end": "468770"
  },
  {
    "text": "[Music]",
    "start": "468770",
    "end": "470240"
  },
  {
    "text": "you",
    "start": "470240",
    "end": "472300"
  }
]