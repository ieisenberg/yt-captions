[
  {
    "start": "0",
    "end": "74000"
  },
  {
    "text": "all right good afternoon my name is Eric fajita and have few here with me he introduced himself from King",
    "start": "0",
    "end": "7440"
  },
  {
    "text": "that's the time where I tell you to stop looking at your phones unless you're playing candy crush you pain candy crush",
    "start": "7440",
    "end": "14610"
  },
  {
    "text": "you find okay but otherwise please stop today we're going to talk about best",
    "start": "14610",
    "end": "19890"
  },
  {
    "text": "practice of redshift and it is pretty much I keep having the same presentation",
    "start": "19890",
    "end": "25830"
  },
  {
    "text": "every year so this year I decided to make something different instead of saying here's what documentation says",
    "start": "25830",
    "end": "30840"
  },
  {
    "text": "you should do it should not do we're going to go over a particular example of one customer that went through",
    "start": "30840",
    "end": "36719"
  },
  {
    "text": "themselves and learn the process and then I will show you some things under",
    "start": "36719",
    "end": "42510"
  },
  {
    "text": "the hood of redshift how was designed so understand why the best practices work",
    "start": "42510",
    "end": "47579"
  },
  {
    "text": "and why the untie patterns don't work so then you can have like a first-hand",
    "start": "47579",
    "end": "52860"
  },
  {
    "text": "experience oh oh that's why you should do these or should not do that and so that's the plan for today right so we're",
    "start": "52860",
    "end": "58530"
  },
  {
    "text": "going to go over be free cap off redshift we're going to go over a kink implementation of their CRM within",
    "start": "58530",
    "end": "65158"
  },
  {
    "text": "redshift and then I'll go come back and walk you through the whys of his best",
    "start": "65159",
    "end": "70890"
  },
  {
    "text": "practices work on redshift okay sounds like a plan now what is redshift well",
    "start": "70890",
    "end": "77340"
  },
  {
    "start": "74000",
    "end": "264000"
  },
  {
    "text": "Amazon redshift is a relational data house massive parallel petabyte scale fully managed database and you have",
    "start": "77340",
    "end": "84600"
  },
  {
    "text": "different platforms to choose for and it's pretty much a thousand dollars per terabytes per year or you can start",
    "start": "84600",
    "end": "90630"
  },
  {
    "text": "playing with 25 cents per hour but that's redshift now that's rich if for you for us here's what redshift is",
    "start": "90630",
    "end": "97829"
  },
  {
    "text": "redshift is a Postgres database where we got the storage layer wiped out",
    "start": "97829",
    "end": "104520"
  },
  {
    "text": "and in its place we created a columnar storage where on a regular database all",
    "start": "104520",
    "end": "112229"
  },
  {
    "text": "the columns are together the same roll the same record like a file on redshift every column has a separate file for",
    "start": "112229",
    "end": "118920"
  },
  {
    "text": "itself so you only touch the columns you need it's a massive parallel cluster a share nothing cluster brute force mutual",
    "start": "118920",
    "end": "125670"
  },
  {
    "text": "parallel processing and we put a OLAP SQL engine on it that it can take those",
    "start": "125670",
    "end": "132209"
  },
  {
    "text": "big ooh you guys write all the time and it can take care of those and make the",
    "start": "132209",
    "end": "137400"
  },
  {
    "text": "career run fast for you now we wanted to make that to run as a cloud service",
    "start": "137400",
    "end": "142590"
  },
  {
    "text": "right so it's on AWS and to run on AWS there's a lot of automation that has to",
    "start": "142590",
    "end": "148500"
  },
  {
    "text": "happen on different places and because AWS is sort of a lego store we pick up",
    "start": "148500",
    "end": "154320"
  },
  {
    "text": "those pieces from other services and blessed to help us with that we didn't design a lot of things from scratch so",
    "start": "154320",
    "end": "160200"
  },
  {
    "text": "we are big users of AWS ourselves so we started using the simple workflow",
    "start": "160200",
    "end": "165600"
  },
  {
    "text": "product from AWS we started using Amazon VPC so you can protect the data around",
    "start": "165600",
    "end": "171390"
  },
  {
    "text": "the network around your your databases we have I am so you can have access for",
    "start": "171390",
    "end": "176610"
  },
  {
    "text": "users for the console access we use Amazon ec2 our hostess are easy to host",
    "start": "176610",
    "end": "182580"
  },
  {
    "text": "the same ones that you can use on your systems right we use Amazon s3 mostly",
    "start": "182580",
    "end": "188970"
  },
  {
    "text": "for our backups in our intake of data we use a kms for key management we use",
    "start": "188970",
    "end": "195030"
  },
  {
    "text": "route 53 for our network management for your end of point for access to the",
    "start": "195030",
    "end": "200760"
  },
  {
    "text": "database right and we use cloud watch for monitoring in alarming write all those I standard products that you use",
    "start": "200760",
    "end": "206940"
  },
  {
    "text": "in the same way that you would use it I have any special API any special access we use the same way as you and that",
    "start": "206940",
    "end": "212700"
  },
  {
    "text": "together makes the service Amazon redshift",
    "start": "212700",
    "end": "217880"
  },
  {
    "text": "now inside that availability zone on redshift redshift is always inside a single availability",
    "start": "217880",
    "end": "225090"
  },
  {
    "text": "zone and inside of a V PC of Verto private cloud and it lives on a",
    "start": "225090",
    "end": "230190"
  },
  {
    "text": "particular region and there are things you can do to restore a new cluster on a different easy on the same",
    "start": "230190",
    "end": "237240"
  },
  {
    "text": "region or you can push your backups for different region but in general like an a basic level red shift leaves on a",
    "start": "237240",
    "end": "244020"
  },
  {
    "text": "single AZ now we launched on February 2013 it was",
    "start": "244020",
    "end": "250410"
  },
  {
    "text": "a Valentine's Day was lovely Valentine's Day when we launched the red shift and since then we added a hundred and thirty",
    "start": "250410",
    "end": "256950"
  },
  {
    "text": "five features significant features to the system and we never raise the price",
    "start": "256950",
    "end": "262019"
  },
  {
    "text": "one single time now who here uses red today show hands",
    "start": "262020",
    "end": "268300"
  },
  {
    "start": "264000",
    "end": "395000"
  },
  {
    "text": "awesome great great to have people now I'm gonna pass the baton to another user",
    "start": "268300",
    "end": "273970"
  },
  {
    "text": "redshift and he's going to share with you how they did the implementation how they learn the best practices on real",
    "start": "273970",
    "end": "280569"
  },
  {
    "text": "life brilliant thank you thanks a lot Eric so first of all who of you have heard of",
    "start": "280569",
    "end": "288250"
  },
  {
    "text": "King before not that many people but who's heard of",
    "start": "288250",
    "end": "293650"
  },
  {
    "text": "candycrush before okay a lot more people so King is basically the company behind candy crush",
    "start": "293650",
    "end": "302550"
  },
  {
    "text": "when I was asked by Eric and his colleagues if I would like to talk",
    "start": "302550",
    "end": "307690"
  },
  {
    "text": "alongside him and explain our journey of redshift I was very honored and was very",
    "start": "307690",
    "end": "313120"
  },
  {
    "text": "happy to be able to share our journey we've been using redshifted King for two",
    "start": "313120",
    "end": "318610"
  },
  {
    "text": "years now but my experience of wretched actually goes back quite a bit further before King I was running a company",
    "start": "318610",
    "end": "326979"
  },
  {
    "text": "called commie fight we were a big Marco more big Buy we were a marketing",
    "start": "326979",
    "end": "332159"
  },
  {
    "text": "technology company and at the beginning of 2013 we started acquiring a lot of",
    "start": "332159",
    "end": "338560"
  },
  {
    "text": "customers we had a lot of big lines in the gaming space but also in",
    "start": "338560",
    "end": "345089"
  },
  {
    "text": "media and quite a few other things so we really needed to ramp up our systems at",
    "start": "345089",
    "end": "350889"
  },
  {
    "text": "the time we're running a post press cluster which we're really pushing way beyond it limits what we then needed was",
    "start": "350889",
    "end": "358870"
  },
  {
    "text": "to really upgrade our database technology we went out we researched a lot of different solutions but none of",
    "start": "358870",
    "end": "366580"
  },
  {
    "text": "them really scaled to the point where we needed it and then luckily redshift came",
    "start": "366580",
    "end": "372430"
  },
  {
    "text": "along and we were actually blown out of the water by the performance and as Eric",
    "start": "372430",
    "end": "378099"
  },
  {
    "text": "just said redshift was launched in February 2013 May 2013 we're ready",
    "start": "378099",
    "end": "383500"
  },
  {
    "text": "running in full production and managed to scale to the point where we needed to",
    "start": "383500",
    "end": "389199"
  },
  {
    "text": "so I'm personally as well very grateful for the performance",
    "start": "389199",
    "end": "394349"
  },
  {
    "text": "what I like to do today is go a bit more into detail what we're",
    "start": "394349",
    "end": "400559"
  },
  {
    "start": "395000",
    "end": "506000"
  },
  {
    "text": "actually doing at King so Amazon redshift as an operational CRM database",
    "start": "400559",
    "end": "405569"
  },
  {
    "text": "at King is the title the key here is the operational piece because I believe",
    "start": "405569",
    "end": "411629"
  },
  {
    "text": "we're actually using redshift quite differently from standard data warehouse",
    "start": "411629",
    "end": "417439"
  },
  {
    "text": "operation we're actually using it to power our marketing system which is constantly sending",
    "start": "417439",
    "end": "424769"
  },
  {
    "text": "messages engaging our clients but let's go into the business",
    "start": "424769",
    "end": "430319"
  },
  {
    "text": "challenges first what do we have we have a very dynamic customer base with a very",
    "start": "430319",
    "end": "436769"
  },
  {
    "text": "large scale with hundred millions of users players at King but we also have",
    "start": "436769",
    "end": "443279"
  },
  {
    "text": "limited data science resources pretty much like any other company I believe so we've just seen quite a few of you",
    "start": "443279",
    "end": "451679"
  },
  {
    "text": "guys know candy crush saga but let's look at what actually happened in the CRM saga",
    "start": "451679",
    "end": "457579"
  },
  {
    "text": "before redshift was being used as part of a marketing system",
    "start": "457579",
    "end": "463309"
  },
  {
    "text": "the saga looked a little bit like this so a marketeer wanted to do a campaign",
    "start": "463309",
    "end": "470179"
  },
  {
    "text": "they thought about okay who do I want to target what do I want to send out they then put that into an email it went over",
    "start": "470179",
    "end": "477749"
  },
  {
    "text": "to a data scientist who then did the extraction together with an engineer",
    "start": "477749",
    "end": "482959"
  },
  {
    "text": "once they've done that they put that back into an email it went back to the marketeer campaign was executed and the",
    "start": "482959",
    "end": "489869"
  },
  {
    "text": "cycle continued the candy crush bubblegum troll really",
    "start": "489869",
    "end": "495629"
  },
  {
    "text": "didn't like this because it took up to a week sometimes for this process to finish so it wasn't really feasible for",
    "start": "495629",
    "end": "503819"
  },
  {
    "text": "us to continue that especially if you look at the scale we're operating at today so let me give",
    "start": "503819",
    "end": "511559"
  },
  {
    "text": "a little bit of a background off of where we are at the moment so we're sending about nine and a half thousand",
    "start": "511559",
    "end": "518638"
  },
  {
    "text": "campaigns on a weekly basis we are sending about 1.5 billion messages on a",
    "start": "518639",
    "end": "526589"
  },
  {
    "text": "monthly basis we're supporting 12 games and we're doing all of that with only",
    "start": "526589",
    "end": "531880"
  },
  {
    "text": "eight promotion specialists who are the marketeers that are actually running the campaigns and executing that so I think",
    "start": "531880",
    "end": "538630"
  },
  {
    "text": "these numbers are very very impressive but I think they're even more impressive",
    "start": "538630",
    "end": "544360"
  },
  {
    "text": "if we put them into perspective where we've actually come from within two years so before redshift we were running",
    "start": "544360",
    "end": "551740"
  },
  {
    "text": "about five campaigns per week we're sending only 23,000 messages per month",
    "start": "551740",
    "end": "556930"
  },
  {
    "text": "we supported only five games and we did all of that with even more people we're about ten people dedicated to running",
    "start": "556930",
    "end": "564040"
  },
  {
    "text": "that so I think a very very impressive increase in terms of scale I talked",
    "start": "564040",
    "end": "570430"
  },
  {
    "text": "quite a bit about the marketeers and that they need to run the system by themselves so let me show you what they",
    "start": "570430",
    "end": "577570"
  },
  {
    "text": "are actually using to to engage with the marketing platform they're using a",
    "start": "577570",
    "end": "583630"
  },
  {
    "text": "campaign manager which is called EMA Sario in Spanish EMA Sario is the",
    "start": "583630",
    "end": "588640"
  },
  {
    "text": "messenger of the king which i think is quite fitting for us so what you see",
    "start": "588640",
    "end": "594580"
  },
  {
    "text": "here is on the left hand side you've got a query builder so the marketeers can",
    "start": "594580",
    "end": "601450"
  },
  {
    "text": "use very simple and all logic to construct their campaigns so they might",
    "start": "601450",
    "end": "607240"
  },
  {
    "text": "say we want to message people that live in Las Vegas they've played within the last 14 days and they're above level",
    "start": "607240",
    "end": "614770"
  },
  {
    "text": "hundred in a particular game so they can do that and then the blue bar on the",
    "start": "614770",
    "end": "620020"
  },
  {
    "text": "right top right-hand side gives them pretty much immediate feedback because",
    "start": "620020",
    "end": "625600"
  },
  {
    "text": "we can query wretched very quickly and the marketeers get query quick feedback",
    "start": "625600",
    "end": "630940"
  },
  {
    "text": "saying this segment has X number of players so they get a really good",
    "start": "630940",
    "end": "636100"
  },
  {
    "text": "feeling how big their campaign is and so on so once they've done that they can quickly click apply and execute a",
    "start": "636100",
    "end": "643450"
  },
  {
    "text": "marketing campaign back on the back of the data we've actually just retrieved from redshift",
    "start": "643450",
    "end": "650910"
  },
  {
    "text": "but what do we actually like about redshift so for us it's been very quick",
    "start": "650910",
    "end": "656830"
  },
  {
    "start": "651000",
    "end": "803000"
  },
  {
    "text": "time-to-market it's been very scalable great value for money we holding",
    "start": "656830",
    "end": "662320"
  },
  {
    "text": "billions of customer records in our system we're doing more than 10,000 queries per day it's great that we don't",
    "start": "662320",
    "end": "670660"
  },
  {
    "text": "need a dedicated admin team to to run the cluster we're getting great support",
    "start": "670660",
    "end": "675670"
  },
  {
    "text": "from our friends at Amazon the column abased and massively parallel nature actually fits our workloads very",
    "start": "675670",
    "end": "683260"
  },
  {
    "text": "well and the execution times of the analytical and marketing queries are",
    "start": "683260",
    "end": "689860"
  },
  {
    "text": "actually very very quick so to sum up we love the performance we were actually",
    "start": "689860",
    "end": "695950"
  },
  {
    "text": "getting from the system you might wonder how big is our cluster so we're running",
    "start": "695950",
    "end": "702100"
  },
  {
    "text": "three clusters here so the bit on the left-hand side is not drawn to scale at",
    "start": "702100",
    "end": "707980"
  },
  {
    "text": "all otherwise you wouldn't be seeing it but in development we're running to DC one large nodes in staging it's 6 DC one",
    "start": "707980",
    "end": "716170"
  },
  {
    "text": "large nodes but then the Big Daddy in production here we're running 24 DC 1 8",
    "start": "716170",
    "end": "723190"
  },
  {
    "text": "X large notes and they're all EC so compute notes because for us the",
    "start": "723190",
    "end": "730510"
  },
  {
    "text": "computation is more important than actually the storage I think at the moment were knee running off 30 40",
    "start": "730510",
    "end": "735700"
  },
  {
    "text": "terabytes so not that much storage but we need a lot of compute power to return the queries in the time time",
    "start": "735700",
    "end": "743140"
  },
  {
    "text": "we need so how does wretched actually fit in overall in the overall architecture we have so key for us are",
    "start": "743140",
    "end": "750640"
  },
  {
    "text": "obviously our players so they play our our great games on their devices from",
    "start": "750640",
    "end": "756310"
  },
  {
    "text": "the devices the data goes into the game servers from the game servers into the",
    "start": "756310",
    "end": "762160"
  },
  {
    "text": "legacy data store from there we're doing regular ETS that are going into s3 redshift then takes the data from s3 and",
    "start": "762160",
    "end": "771660"
  },
  {
    "text": "the msre your server here is the back end to the front end you saw a minute ago and that then queries redshift and",
    "start": "771660",
    "end": "779230"
  },
  {
    "text": "gets the user data out of it for the marketing execution and once all that's done MSM the msre server",
    "start": "779230",
    "end": "787750"
  },
  {
    "text": "sends the data to our delivery service which communicate with Facebook",
    "start": "787750",
    "end": "792840"
  },
  {
    "text": "Google Apple and so on which then deliver the messages up to",
    "start": "792840",
    "end": "798010"
  },
  {
    "text": "the devices and then this lovely circle continues great so let me quickly sum up the choir",
    "start": "798010",
    "end": "805900"
  },
  {
    "text": "moans we're actually having for redshift so we need a database that be part of an",
    "start": "805900",
    "end": "811780"
  },
  {
    "text": "operational system that means it must handle a lot of parallel queries so we",
    "start": "811780",
    "end": "817720"
  },
  {
    "text": "can't have a big query blocking everything because a lot of background tasks for continuous operation of",
    "start": "817720",
    "end": "824050"
  },
  {
    "text": "campaigns but also marketeers are engaging with the system constantly and",
    "start": "824050",
    "end": "829440"
  },
  {
    "text": "for the marketeer queries we've given ourselves a maximum of 15 seconds it can",
    "start": "829440",
    "end": "836710"
  },
  {
    "text": "take for a query or to return because we want the marketeers to have a great experience with the system not needing",
    "start": "836710",
    "end": "843580"
  },
  {
    "text": "to wait for things to come back because if they if it takes like minutes they'll get bored they do something else they",
    "start": "843580",
    "end": "849400"
  },
  {
    "text": "forget about it and our players are not really getting the great experience they deserve so 15 seconds is the threshold",
    "start": "849400",
    "end": "856630"
  },
  {
    "text": "we set ourselves and obviously it must be financially viable so we can't have an unlimited number of",
    "start": "856630",
    "end": "864100"
  },
  {
    "text": "big instances let me do a big cut here because here what I've done so far is",
    "start": "864100",
    "end": "870910"
  },
  {
    "text": "giving you a bit of the background what else scale is what we've done and what the requirements are for the system what",
    "start": "870910",
    "end": "877360"
  },
  {
    "text": "I like to do now is to actually dive into real examples and share the best practices we've learned over the years",
    "start": "877360",
    "end": "884550"
  },
  {
    "text": "we've actually used on redshift at anger so first one and very important one is",
    "start": "884550",
    "end": "892330"
  },
  {
    "text": "the proper use of distribution keys in all joints so we're having tables that have more",
    "start": "892330",
    "end": "899920"
  },
  {
    "text": "than four billion rows and as you guys probably know at such a scale only",
    "start": "899920",
    "end": "906280"
  },
  {
    "text": "merge-join so actually the viable solution to get anything out of the",
    "start": "906280",
    "end": "911590"
  },
  {
    "text": "database so we did that we query the database but still queries were running",
    "start": "911590",
    "end": "917470"
  },
  {
    "text": "pretty much forever and never returned what we found was that we actually need",
    "start": "917470",
    "end": "923230"
  },
  {
    "text": "to put the distribution key inside the query semantically it's redundant",
    "start": "923230",
    "end": "930249"
  },
  {
    "text": "but by adding it Rhett Schiff doesn't need to scan across all notes to",
    "start": "930249",
    "end": "935649"
  },
  {
    "text": "actually get the data out so it can stain as in a single note and will be very quick returning the information so",
    "start": "935649",
    "end": "943600"
  },
  {
    "text": "Eric later on will actually explain a lot more technical details about the",
    "start": "943600",
    "end": "948730"
  },
  {
    "text": "best practices I'm sharing so distribution keys key in all joins",
    "start": "948730",
    "end": "954430"
  },
  {
    "text": "very important that also leads me on to what we've done actually with natural",
    "start": "954430",
    "end": "960639"
  },
  {
    "text": "distribution keys so at King we're updating about 10 percent of our data on",
    "start": "960639",
    "end": "966069"
  },
  {
    "text": "a daily basis so a lot of the data is constantly changing which means we need to do a lot of",
    "start": "966069",
    "end": "973079"
  },
  {
    "text": "updating and merging of data and what we had at the beginning we had a",
    "start": "973079",
    "end": "981339"
  },
  {
    "text": "distribution key that was local to redshift so as soon as the new data came",
    "start": "981339",
    "end": "986350"
  },
  {
    "text": "in we needed compute it do the updating of the data and so on and what we found",
    "start": "986350",
    "end": "991540"
  },
  {
    "text": "this process took actually more than 24 hours to complete so not viable at all",
    "start": "991540",
    "end": "997559"
  },
  {
    "text": "what we then did we started searching for a natural distribution key within",
    "start": "997559",
    "end": "1002850"
  },
  {
    "text": "the business so something the new data has as well as the existing data within redshift and for us there is quite an",
    "start": "1002850",
    "end": "1009779"
  },
  {
    "text": "obvious one which is the universal player ID that any player within the King Network has so we use that insight",
    "start": "1009779",
    "end": "1017879"
  },
  {
    "text": "redshift and then when the new data comes in we can use that again in all the joints doing the merging and the",
    "start": "1017879",
    "end": "1024959"
  },
  {
    "text": "updating and we dramatically reduce the time so as I said it took more than 24",
    "start": "1024959",
    "end": "1031288"
  },
  {
    "text": "hours and now we're running at about 30 minutes and most queries are returned and most updates are actually happening",
    "start": "1031289",
    "end": "1038490"
  },
  {
    "text": "in less than five minutes so a great performance increasing",
    "start": "1038490",
    "end": "1043520"
  },
  {
    "start": "1043000",
    "end": "1271000"
  },
  {
    "text": "while we're on the topic of updating data as I said one of the big",
    "start": "1043520",
    "end": "1049770"
  },
  {
    "text": "requirements for us is to have redshift running as part of an operational system which means we can't",
    "start": "1049770",
    "end": "1056520"
  },
  {
    "text": "have massive right locks all the time saying right lock the tables",
    "start": "1056520",
    "end": "1062800"
  },
  {
    "text": "we're doing the updating once we're done we're releasing everything and operation continues we need to make sure that the",
    "start": "1062800",
    "end": "1068950"
  },
  {
    "text": "system can continuously operate at the same level of performance so what we've done is we're actually",
    "start": "1068950",
    "end": "1077400"
  },
  {
    "text": "taking the data we're copying it into temporary tables and the temporary",
    "start": "1077400",
    "end": "1082600"
  },
  {
    "text": "tables are inside redshift so it's not an operation happening outside redshift but it's happening inside redshift and",
    "start": "1082600",
    "end": "1088950"
  },
  {
    "text": "we're doing all the merging all the computation everything we need to do to add the new data with the temporary",
    "start": "1088950",
    "end": "1095680"
  },
  {
    "text": "tables and from there we're actually copying the temporary tables over so we",
    "start": "1095680",
    "end": "1101620"
  },
  {
    "text": "only have very short right locks and we're getting a great performance out of",
    "start": "1101620",
    "end": "1107380"
  },
  {
    "text": "the system next one so next one is quite a funny",
    "start": "1107380",
    "end": "1112720"
  },
  {
    "text": "one for us column compression encoding we thought it would have maybe five",
    "start": "1112720",
    "end": "1118330"
  },
  {
    "text": "maximum ten percent of performance increase and our friend sort Amazon were",
    "start": "1118330",
    "end": "1123490"
  },
  {
    "text": "very very insistent with us and saying no guys you really need to make that change and they even send two engineers",
    "start": "1123490",
    "end": "1129790"
  },
  {
    "text": "down to Barcelona helping us to find the best encoding for us and we had a very",
    "start": "1129790",
    "end": "1136300"
  },
  {
    "text": "very pleasant surprise because we achieved a very heavy reduction of i/o",
    "start": "1136300",
    "end": "1141870"
  },
  {
    "text": "we had a nearly 100% performance increase and very nice was that we could reduce the",
    "start": "1141870",
    "end": "1150130"
  },
  {
    "text": "cluster from 48 dc1 Excel large nodes down to 24 so a massive reduction in",
    "start": "1150130",
    "end": "1158950"
  },
  {
    "text": "cost as well which obviously make the business very happy but one node a",
    "start": "1158950",
    "end": "1164950"
  },
  {
    "text": "notion of caution here we did a lot of testing and experimenting to find the",
    "start": "1164950",
    "end": "1170830"
  },
  {
    "text": "right encoding so you can't just employ one but you need to actually look and see which one fits the best to get the",
    "start": "1170830",
    "end": "1177520"
  },
  {
    "text": "right performance levels of you so this was a as I said very very good and nice",
    "start": "1177520",
    "end": "1183610"
  },
  {
    "text": "surprise for us now on to concurrency optimization in",
    "start": "1183610",
    "end": "1189190"
  },
  {
    "text": "wlm so as I said it's running as an operational system for us which means",
    "start": "1189190",
    "end": "1196760"
  },
  {
    "text": "a lot of parallel queries marketeers are doing queries the system is executing a",
    "start": "1196760",
    "end": "1201890"
  },
  {
    "text": "lot of campaigns in the background and the market has found that often the",
    "start": "1201890",
    "end": "1207590"
  },
  {
    "text": "queries return as I said within the 15-second threshold but sometimes",
    "start": "1207590",
    "end": "1213040"
  },
  {
    "text": "the queries took a long time even though just beforehand they took only let's say",
    "start": "1213040",
    "end": "1219560"
  },
  {
    "text": "five seconds to return so they came to the engineers and said look the system is broken or something is happening",
    "start": "1219560",
    "end": "1225890"
  },
  {
    "text": "because the queries are not returning properly we started digging but what we",
    "start": "1225890",
    "end": "1231200"
  },
  {
    "text": "found was that the average completion time of the query was was on average the",
    "start": "1231200",
    "end": "1238550"
  },
  {
    "text": "same it's state within the threshold so then we started digging more and",
    "start": "1238550",
    "end": "1243640"
  },
  {
    "text": "we found a great query within the github utils redshift as providing which",
    "start": "1243640",
    "end": "1250850"
  },
  {
    "text": "actually gives you the time a query stays in the queue before it's being",
    "start": "1250850",
    "end": "1257330"
  },
  {
    "text": "executed and bingo here we found that quite a lot of the queries are actually queuing for quite a while before they",
    "start": "1257330",
    "end": "1265160"
  },
  {
    "text": "can execute because this number should ideally be 0 here to get the best performance",
    "start": "1265160",
    "end": "1271000"
  },
  {
    "start": "1271000",
    "end": "1372000"
  },
  {
    "text": "luckily there was a great easy fix for it we basically increased the number of",
    "start": "1271000",
    "end": "1277490"
  },
  {
    "text": "concurrent queries we can run from 5 up to 10 you might think oh they guys just",
    "start": "1277490",
    "end": "1284600"
  },
  {
    "text": "doubled it because 10 looks quite a nice round number up from 5 but we did actually do quite a lot of experiments",
    "start": "1284600",
    "end": "1290810"
  },
  {
    "text": "to find the right number for us and I would urge you to actually do the same because if you up this number too much",
    "start": "1290810",
    "end": "1296570"
  },
  {
    "text": "you can run in down of memory issues as well with redshift so again quite a bit",
    "start": "1296570",
    "end": "1302630"
  },
  {
    "text": "of experimentation is is a good thing to do here now",
    "start": "1302630",
    "end": "1308230"
  },
  {
    "text": "as I said we're getting a lot of new data into the system constantly and that",
    "start": "1308230",
    "end": "1316730"
  },
  {
    "text": "means we need to modify the data at the beginning we thought great what we'll do",
    "start": "1316730",
    "end": "1321890"
  },
  {
    "text": "is as soon as a new piece of data comes in we update the database so we were",
    "start": "1321890",
    "end": "1327770"
  },
  {
    "text": "running current modifications of the data but actually we ran into a lot of",
    "start": "1327770",
    "end": "1334239"
  },
  {
    "text": "errors here which resulted in quite a few roll backs because we're accessing the same tables at the same time which",
    "start": "1334239",
    "end": "1342039"
  },
  {
    "text": "obviously the system doesn't like at all so we opted for a very straightforward fix here which is going from parallel to",
    "start": "1342039",
    "end": "1350590"
  },
  {
    "text": "sequential processing and updating of the data for our data freshness",
    "start": "1350590",
    "end": "1356109"
  },
  {
    "text": "requirements that is more than enough but maybe you have more stricter data",
    "start": "1356109",
    "end": "1363249"
  },
  {
    "text": "freshness requirements so you might want to do it in parallel but just a notion of caution here that you might end up",
    "start": "1363249",
    "end": "1369309"
  },
  {
    "text": "having quite a few roll backs as well now on to vacuum I'm sure most of you",
    "start": "1369309",
    "end": "1377229"
  },
  {
    "start": "1372000",
    "end": "1503000"
  },
  {
    "text": "don't like vacuums too much they block the system they're often quite challenging to manage and require quite",
    "start": "1377229",
    "end": "1385690"
  },
  {
    "text": "a bit of work same was true for us we opted for the standard 24-hour vacuum cycles but",
    "start": "1385690",
    "end": "1394269"
  },
  {
    "text": "because we update as I said about 10 percent of our data constantly what we found towards the end of the 24-hour",
    "start": "1394269",
    "end": "1401679"
  },
  {
    "text": "period the performance of the database was degrading quite dramatically up to",
    "start": "1401679",
    "end": "1407440"
  },
  {
    "text": "the point where really wasn't responsive and we couldn't provide the right service to the marketeers and the reason",
    "start": "1407440",
    "end": "1414220"
  },
  {
    "text": "for that is if you start updating data redshift doesn't do a straightforward update but what it actually does it",
    "start": "1414220",
    "end": "1420789"
  },
  {
    "text": "doesn't insert and delete so you end up actually having quite a lot of data skew",
    "start": "1420789",
    "end": "1427419"
  },
  {
    "text": "or data distribution skew within your tables leading to big dev",
    "start": "1427419",
    "end": "1434190"
  },
  {
    "text": "fragmentation of the data which means performance goes down and just takes a",
    "start": "1434190",
    "end": "1439359"
  },
  {
    "text": "lot longer for the queries to return so what we then did we went from a 24-hour",
    "start": "1439359",
    "end": "1445679"
  },
  {
    "text": "vacuum cycle to an on-demand vacuum model so we actually wrote our own",
    "start": "1445679",
    "end": "1452039"
  },
  {
    "text": "system here that's making use of the svv table info system redshift provides and",
    "start": "1452039",
    "end": "1459980"
  },
  {
    "text": "we've set a threshold per table where if the performance goes below and falls",
    "start": "1459980",
    "end": "1467570"
  },
  {
    "text": "below this this threshold we're actually doing an on-demand vacuum and this had",
    "start": "1467570",
    "end": "1473270"
  },
  {
    "text": "the great effect so performance was stable system is running at the same speed across the board but also it meant",
    "start": "1473270",
    "end": "1482930"
  },
  {
    "text": "the workings didn't didn't clock up the system or block the systems because they didn't have as much to do so was a great",
    "start": "1482930",
    "end": "1490670"
  },
  {
    "text": "solution for us and I urge you to actually look at the information the redshift system is providing so you can",
    "start": "1490670",
    "end": "1498500"
  },
  {
    "text": "see if this is something you should potentially do as well",
    "start": "1498500",
    "end": "1503860"
  },
  {
    "start": "1503000",
    "end": "1674000"
  },
  {
    "text": "now this is a funny one so",
    "start": "1504100",
    "end": "1509230"
  },
  {
    "text": "reduce the number of selected columns for you guys who have only used column",
    "start": "1509230",
    "end": "1516500"
  },
  {
    "text": "or data stores this one is probably extremely obvious we've come from",
    "start": "1516500",
    "end": "1522640"
  },
  {
    "text": "Postgres so LTP background and obviously with oil TP databases you don't get a",
    "start": "1522640",
    "end": "1530930"
  },
  {
    "text": "massive you don't really get a performance penalty if you select more columns then you actually need because",
    "start": "1530930",
    "end": "1538010"
  },
  {
    "text": "you already got the row with with all the information you need what we have in our system as I showed",
    "start": "1538010",
    "end": "1546470"
  },
  {
    "text": "you with the user interface the marketeers are putting the query in and then we have a system that actually",
    "start": "1546470",
    "end": "1552290"
  },
  {
    "text": "translates what the marketeers have put in into SQL statements to then return",
    "start": "1552290",
    "end": "1558890"
  },
  {
    "text": "the data and this system was a legacy system which we initially wrote for Postgres and",
    "start": "1558890",
    "end": "1565390"
  },
  {
    "text": "the system often selected more columns than they were actually required so we",
    "start": "1565390",
    "end": "1570500"
  },
  {
    "text": "went back into the system and we did a lot of heavy optimization making sure that we only select the columns that are",
    "start": "1570500",
    "end": "1577250"
  },
  {
    "text": "actually required in the query which again gave us a big performance gain so",
    "start": "1577250",
    "end": "1582440"
  },
  {
    "text": "as I said not one for everyone because for quite a few of you it's quite obvious but if you",
    "start": "1582440",
    "end": "1587840"
  },
  {
    "text": "have an ultra Peder background and you're moving over to redshift that's something to keep in mind",
    "start": "1587840",
    "end": "1594740"
  },
  {
    "text": "another very important one for us batch sizes because we're constantly reading a",
    "start": "1594740",
    "end": "1601920"
  },
  {
    "text": "lot of information for our segments from redshift we started with batch size of a",
    "start": "1601920",
    "end": "1608370"
  },
  {
    "text": "hundred thousand but we found the performance wasn't great",
    "start": "1608370",
    "end": "1613700"
  },
  {
    "text": "we then started experimenting and we increase batch size to a million",
    "start": "1613700",
    "end": "1619470"
  },
  {
    "text": "initially and what we actually found was that the batch size is not scaling linearly but a lot better so doing a",
    "start": "1619470",
    "end": "1627420"
  },
  {
    "text": "hundred thousand or a million took about the same time and what we opted for in the end is a",
    "start": "1627420",
    "end": "1634050"
  },
  {
    "text": "batch size of about five million red shift can actually do more and still return very quickly but that was",
    "start": "1634050",
    "end": "1641190"
  },
  {
    "text": "actually due to a MS Aria system so what's actually connecting with red",
    "start": "1641190",
    "end": "1646770"
  },
  {
    "text": "shift is the limitation here however the limitation of five million as I said is",
    "start": "1646770",
    "end": "1654780"
  },
  {
    "text": "due to the external system but red shift does have a limitation especially if you",
    "start": "1654780",
    "end": "1660120"
  },
  {
    "text": "go way beyond the five million so we quite often do extracts of data that are",
    "start": "1660120",
    "end": "1667260"
  },
  {
    "text": "ranging in the area of a hundred million two hundred million at a time or even",
    "start": "1667260",
    "end": "1673680"
  },
  {
    "text": "more and at that point the leader node can actually become a massive bottleneck",
    "start": "1673680",
    "end": "1679230"
  },
  {
    "start": "1674000",
    "end": "1741000"
  },
  {
    "text": "because you're collecting all the data you're funneling through the database driver through the leader node out to",
    "start": "1679230",
    "end": "1685380"
  },
  {
    "text": "your external system what we found thanks to our friends from redshift to",
    "start": "1685380",
    "end": "1692130"
  },
  {
    "text": "actually pointed it out to us we found quite a nifty feature of redshift",
    "start": "1692130",
    "end": "1697730"
  },
  {
    "text": "which can actually unload data to s3 directly from a node",
    "start": "1697730",
    "end": "1705540"
  },
  {
    "text": "not having to go through the leader node so if we have really big exports of data",
    "start": "1705540",
    "end": "1712140"
  },
  {
    "text": "we're writing directly through three three however here you again have to",
    "start": "1712140",
    "end": "1717750"
  },
  {
    "text": "watch your distribution key very carefully because if you don't there's a big chance again it scans across all the",
    "start": "1717750",
    "end": "1724470"
  },
  {
    "text": "different notes and you have a massive performance issue so if you have the distribution key in order and you have a",
    "start": "1724470",
    "end": "1732350"
  },
  {
    "text": "lot of data actually doing the unload command can give you really big",
    "start": "1732350",
    "end": "1738200"
  },
  {
    "text": "performance gains great so these are our best practices",
    "start": "1738200",
    "end": "1744890"
  },
  {
    "start": "1741000",
    "end": "1819000"
  },
  {
    "text": "what we've learned over the time what we've done as well now is we've actually put them into definitely do",
    "start": "1744890",
    "end": "1751600"
  },
  {
    "text": "medium do and do it if you have some time",
    "start": "1751600",
    "end": "1756640"
  },
  {
    "text": "really important one use distribution keys that can be used in all joints",
    "start": "1756640",
    "end": "1762970"
  },
  {
    "text": "migrate to an app to a natural key if possible reduce the use of the lead node",
    "start": "1762970",
    "end": "1769460"
  },
  {
    "text": "as much as possible column compression and coding then on",
    "start": "1769460",
    "end": "1774710"
  },
  {
    "text": "the medium side data pre-processing outside the main tables WM optimizations",
    "start": "1774710",
    "end": "1781870"
  },
  {
    "text": "reduce the batch size as much as possible and if you've got some time",
    "start": "1781870",
    "end": "1787010"
  },
  {
    "text": "prohibit concurrent modification of data reduce selected columns and do some",
    "start": "1787010",
    "end": "1792920"
  },
  {
    "text": "on-demand vacuums based on the state of the table if you guys have any other",
    "start": "1792920",
    "end": "1798830"
  },
  {
    "text": "ones I would really love to hear from you afterwards so please come up and",
    "start": "1798830",
    "end": "1804830"
  },
  {
    "text": "have a discussion afterwards because we also want to learn from you and see what you've done so we can hopefully increase",
    "start": "1804830",
    "end": "1812210"
  },
  {
    "text": "the performance even more and now over to Eric again who will give you a bit",
    "start": "1812210",
    "end": "1818210"
  },
  {
    "text": "more technical details all right so thank you very much",
    "start": "1818210",
    "end": "1823270"
  },
  {
    "text": "so when you build redshift we build redshift with three things in mind we",
    "start": "1827340",
    "end": "1833740"
  },
  {
    "text": "want it to be fast cheap and easy to use it's like you have a Formula One car but",
    "start": "1833740",
    "end": "1839860"
  },
  {
    "text": "a self-driving formula car that it costs like a Toyota Corolla okay that's the",
    "start": "1839860",
    "end": "1844900"
  },
  {
    "text": "idea okay or if you think about a toaster we want it to be like a toaster you submit your job choose a few options",
    "start": "1844900",
    "end": "1851680"
  },
  {
    "text": "any runs right but we can't not know how",
    "start": "1851680",
    "end": "1857320"
  },
  {
    "text": "the system work otherwise you can't take advantage of its strengths or appreciate the trade-offs you're making for example",
    "start": "1857320",
    "end": "1864520"
  },
  {
    "text": "on a toaster or even on those kind of simple toast we have a bagel button now",
    "start": "1864520",
    "end": "1869530"
  },
  {
    "text": "who knows here what a bagel button actually does very few people awesome so if you want to",
    "start": "1869530",
    "end": "1876040"
  },
  {
    "text": "know sticking to the end I'll tell you what you're going to do at the end of the presentation okay but for you to",
    "start": "1876040",
    "end": "1882310"
  },
  {
    "start": "1882000",
    "end": "1938000"
  },
  {
    "text": "appreciate redshift you have to understand how was design and how is under the hood and how it works so if",
    "start": "1882310",
    "end": "1887800"
  },
  {
    "text": "you think about the architecture of redshift you have a leader node there is a node the same type as you know you",
    "start": "1887800",
    "end": "1893830"
  },
  {
    "text": "choose for your compute node and by the way you don't pay for the leader node so if you create a 10 node cluster you",
    "start": "1893830",
    "end": "1900190"
  },
  {
    "text": "actually have an 11 node cluster and the leader node is on us what is the same type a module in memory as the compute",
    "start": "1900190",
    "end": "1907480"
  },
  {
    "text": "nodes and the compute nodes underneath is where the data resides and data gets",
    "start": "1907480",
    "end": "1913450"
  },
  {
    "text": "processed massively parallel and the data goes in and out in parallel through the compute nodes either from s3 or EMR",
    "start": "1913450",
    "end": "1921190"
  },
  {
    "text": "dime DB or any ssh server you can put your hands on on the leader side is",
    "start": "1921190",
    "end": "1927610"
  },
  {
    "text": "where we put your SQL endpoint and all the metadata is stored there and all the",
    "start": "1927610",
    "end": "1933940"
  },
  {
    "text": "coordination of how the queries run happens on the leader node now the idea for directive to be fast is",
    "start": "1933940",
    "end": "1941560"
  },
  {
    "start": "1938000",
    "end": "1996000"
  },
  {
    "text": "to reduce i/o so we want to make as little IO as possible and one thing we",
    "start": "1941560",
    "end": "1947440"
  },
  {
    "text": "did when a design redshift is to make it columnar storage on a regular database",
    "start": "1947440",
    "end": "1952690"
  },
  {
    "text": "you have a row that has all the columns together and if you query one column you",
    "start": "1952690",
    "end": "1958120"
  },
  {
    "text": "have two the block with all the other columns together oh you and data warehouse applications normally have",
    "start": "1958120",
    "end": "1963580"
  },
  {
    "text": "very wide tables so become a very expensive proposition on redshift if you",
    "start": "1963580",
    "end": "1968920"
  },
  {
    "text": "only create a particular column you only touch the blocks for that column and that reduces a lot of the i/o and that's",
    "start": "1968920",
    "end": "1975250"
  },
  {
    "text": "why select star it's a crime it should be prohibited right it should be like",
    "start": "1975250",
    "end": "1981010"
  },
  {
    "text": "been right it's a bad practice anyway for application purposes because you never know which columns are going to",
    "start": "1981010",
    "end": "1986140"
  },
  {
    "text": "come back but on a columnar database is even worse so that's why we try to reduce the area by only touching the",
    "start": "1986140",
    "end": "1992920"
  },
  {
    "text": "columns you need for your query now the other thing we do is to allow data",
    "start": "1992920",
    "end": "1998080"
  },
  {
    "start": "1996000",
    "end": "2056000"
  },
  {
    "text": "compression of the columns and because the systems column are you can have a different compression for different",
    "start": "1998080",
    "end": "2003180"
  },
  {
    "text": "columns because every data type has a better compression depending on which order it is if it's an integer or is a",
    "start": "2003180",
    "end": "2009060"
  },
  {
    "text": "date or if it's a varchar' so you can choose different compressions now this system helps you by doing up your data",
    "start": "2009060",
    "end": "2017640"
  },
  {
    "text": "and compressing all possible ways and then tell you which one came out smaller",
    "start": "2017640",
    "end": "2023480"
  },
  {
    "text": "but it's a sample you might know your data better and you might know the compression algorithms better and there",
    "start": "2023480",
    "end": "2029970"
  },
  {
    "text": "is trade-offs usually you spend more cpu to compress and uncompress the data but",
    "start": "2029970",
    "end": "2035160"
  },
  {
    "text": "data has applications normally at the i/o bound not CPU bound which translates",
    "start": "2035160",
    "end": "2040230"
  },
  {
    "text": "to pretty much we haven't found a situation for large tables where compression doesn't make any faster it",
    "start": "2040230",
    "end": "2046560"
  },
  {
    "text": "always makes faster and makes the smaller and cheaper like he talked about being able to reduce to by half the size",
    "start": "2046560",
    "end": "2052980"
  },
  {
    "text": "of their cluster right then the other thing we do is something",
    "start": "2052980",
    "end": "2058260"
  },
  {
    "start": "2056000",
    "end": "2139000"
  },
  {
    "text": "called zone maps and that's a departure from the regular database regular databases you might have to scan the",
    "start": "2058260",
    "end": "2065878"
  },
  {
    "text": "whole table right you call linear scan right as full table scan as other people know and and when you do that a system",
    "start": "2065879",
    "end": "2072658"
  },
  {
    "text": "language if you do that really fast because we move to parallel brute force massive parallel data it runs fast but",
    "start": "2072659",
    "end": "2080100"
  },
  {
    "text": "imagine you don't have to touch every block to know to get the right data looking for on other database you have",
    "start": "2080100",
    "end": "2086128"
  },
  {
    "text": "an index or projection or or some other name where you have a redundant copy of the data in a different format a b-tree",
    "start": "2086129",
    "end": "2093108"
  },
  {
    "text": "or a hash hash index or something that allows you to navigate to the data one",
    "start": "2093109",
    "end": "2099020"
  },
  {
    "text": "and then only get a blocky one on redshift every block of every column has",
    "start": "2099020",
    "end": "2104180"
  },
  {
    "text": "a header that remains in memory all the time that has the minimax value of that",
    "start": "2104180",
    "end": "2109700"
  },
  {
    "text": "column on that block so when you scan it for a particular value we look at the",
    "start": "2109700",
    "end": "2115339"
  },
  {
    "text": "header in memory first if the velum looking for doesn't fall in between me max I don't touch that block and then if",
    "start": "2115339",
    "end": "2122420"
  },
  {
    "text": "I have multiple parameters like I'm doing location and date and ID we do an",
    "start": "2122420",
    "end": "2128180"
  },
  {
    "text": "intersection of the blocks or they roll numbers they need to be scan and only scan the blocks that you need for now",
    "start": "2128180",
    "end": "2134480"
  },
  {
    "text": "that makes more sense if the data is in a particular order right so on redshift",
    "start": "2134480",
    "end": "2140180"
  },
  {
    "start": "2139000",
    "end": "2204000"
  },
  {
    "text": "for example imagine have a completely on started table and you make a query that",
    "start": "2140180",
    "end": "2145670"
  },
  {
    "text": "you want to look for a particular date because of zone maps even if the table",
    "start": "2145670",
    "end": "2151040"
  },
  {
    "text": "is not sorted or the column is not your search key if we will do the zone maps",
    "start": "2151040",
    "end": "2156079"
  },
  {
    "text": "and try to keep the blocks as much as possible but if you see is hit amis it's not that great but if the table is",
    "start": "2156079",
    "end": "2163040"
  },
  {
    "text": "sorted by that date then I can only scan a single block now the other difference",
    "start": "2163040",
    "end": "2168980"
  },
  {
    "text": "between redshift and our regular database that has indexes is that if you index in one column and you query a",
    "start": "2168980",
    "end": "2174530"
  },
  {
    "text": "different column you don't use the index on redshift if you order by one column",
    "start": "2174530",
    "end": "2179720"
  },
  {
    "text": "but you career by a different column however the different column has a correlation with the first column for",
    "start": "2179720",
    "end": "2187280"
  },
  {
    "text": "example order ID and date they both growth to the right right so if you sort by one",
    "start": "2187280",
    "end": "2193579"
  },
  {
    "text": "you kind of sorting by the other as well so you take advantage may not be full advantage 100% advantage but maybe 80%",
    "start": "2193579",
    "end": "2199790"
  },
  {
    "text": "advantage and saves a lot of time to scan your data so on redshift you can",
    "start": "2199790",
    "end": "2204829"
  },
  {
    "start": "2204000",
    "end": "2303000"
  },
  {
    "text": "create complex sort keys you can choose one column on multiple columns on the compound search Keys the way it works is",
    "start": "2204829",
    "end": "2212329"
  },
  {
    "text": "we start by one column for the first column and then for the same values of the first column we sort by the other",
    "start": "2212329",
    "end": "2218150"
  },
  {
    "text": "columns which means that you don't want a very high-resolution column the first column because everything comes after",
    "start": "2218150",
    "end": "2224210"
  },
  {
    "text": "that will be useless because you have a very high resolution so contrary to you think of on indexes where you put the",
    "start": "2224210",
    "end": "2230090"
  },
  {
    "text": "most selective column first on redshift is actually the opposite you put the least selective column that you query by",
    "start": "2230090",
    "end": "2236600"
  },
  {
    "text": "first because then you can take advantage of the multiple layers of your sort keys",
    "start": "2236600",
    "end": "2242050"
  },
  {
    "text": "in my example if I'm searching by customer ID only I can touch only the",
    "start": "2242050",
    "end": "2248420"
  },
  {
    "text": "red block there simple easy efficient but if I skip the",
    "start": "2248420",
    "end": "2253670"
  },
  {
    "text": "customer ID and only query by product ID and my search key is customer ID product ID I will have to scan the whole table",
    "start": "2253670",
    "end": "2260870"
  },
  {
    "text": "which is not that bad on redshift because you only scan that column and its massive parallettes cetera but it's",
    "start": "2260870",
    "end": "2265940"
  },
  {
    "text": "not ideal because it's a linear cost right the bigger my table is the longer it takes right",
    "start": "2265940",
    "end": "2271390"
  },
  {
    "text": "so a lot of customers say you know I have some tables that I sometimes I queried by one column sometimes I creep",
    "start": "2271390",
    "end": "2277700"
  },
  {
    "text": "by other column can you help me have to sort keys that I can both grew by one or",
    "start": "2277700",
    "end": "2283580"
  },
  {
    "text": "the other I don't have to always have the first column on and in the tendancy source you know let's create a",
    "start": "2283580",
    "end": "2289570"
  },
  {
    "text": "projection or merge index whatever adjoining like some different databases",
    "start": "2289570",
    "end": "2295100"
  },
  {
    "text": "right we didn't want to have redundant data on the database because it will slow down the loads so we got nerdy and",
    "start": "2295100",
    "end": "2302450"
  },
  {
    "text": "came up with something called interleaved start keys where the two are up to eight columns they are they are",
    "start": "2302450",
    "end": "2309260"
  },
  {
    "start": "2303000",
    "end": "2429000"
  },
  {
    "text": "sorted in an interleaved way I saw it a little bit by one column and a little bit about the other column the way that",
    "start": "2309260",
    "end": "2315110"
  },
  {
    "text": "works is like this first for each column that I'm having my interleaved index on",
    "start": "2315110",
    "end": "2321350"
  },
  {
    "text": "I I map in buckets the 1024 values and I",
    "start": "2321350",
    "end": "2326510"
  },
  {
    "text": "distribute the value buckets like a hash information but I maintain the order so I have buckets I maintain the order and",
    "start": "2326510",
    "end": "2333170"
  },
  {
    "text": "then every value is given a bucket then I mix together the bits of the",
    "start": "2333170",
    "end": "2340400"
  },
  {
    "text": "bucket values for every column so then I maintain the order so I still have the",
    "start": "2340400",
    "end": "2346160"
  },
  {
    "text": "order like if I do a range search iced you can walk through and know when I don't have that column anymore right it",
    "start": "2346160",
    "end": "2353090"
  },
  {
    "text": "allows me to do range scans but allow me to scan by product ID or by customer ID",
    "start": "2353090",
    "end": "2358520"
  },
  {
    "text": "in the in Italy right so the data will be sorted equal measure on both keys",
    "start": "2358520",
    "end": "2365290"
  },
  {
    "text": "now if after created my cable and did my interleaved start key I have a new value",
    "start": "2365290",
    "end": "2371120"
  },
  {
    "text": "that didn't exist before there is others bucket and of course after why I have 2 min of those new",
    "start": "2371120",
    "end": "2377780"
  },
  {
    "text": "values all your data is on the others bucket is is not efficient anymore right so the interior key works for colander",
    "start": "2377780",
    "end": "2384650"
  },
  {
    "text": "the values are kind of stable and if you change add too many new values",
    "start": "2384650",
    "end": "2391100"
  },
  {
    "text": "eventually you have to do maintenance on the table remap and rewrite the whole table to incorporate the new mappings",
    "start": "2391100",
    "end": "2396980"
  },
  {
    "text": "that's what we call vacuum reindex right it is painful it is slow it sucks we're",
    "start": "2396980",
    "end": "2402230"
  },
  {
    "text": "going to fix it one day but not there today ok now in my example right let's",
    "start": "2402230",
    "end": "2407540"
  },
  {
    "text": "say if I'm looking for one customer ID instead of scanning for blocks on my example I scan only two blocks",
    "start": "2407540",
    "end": "2414970"
  },
  {
    "text": "if I scan by a product ID I also only scan two blocks instead of four blocks",
    "start": "2414970",
    "end": "2420260"
  },
  {
    "text": "so I get logarithmic access to the table it is much faster than on linear scale right now interleaf start key is",
    "start": "2420260",
    "end": "2427370"
  },
  {
    "text": "explained to you has some limitations the first limitation only really makes sense on very very large tables redshift",
    "start": "2427370",
    "end": "2434060"
  },
  {
    "start": "2429000",
    "end": "2510000"
  },
  {
    "text": "is a massive parallel system columnar fully compressed blocks so imagine a",
    "start": "2434060",
    "end": "2440360"
  },
  {
    "text": "table where on a particular slice on a particular CPU I have 10 blocks of data",
    "start": "2440360",
    "end": "2445670"
  },
  {
    "text": "on that column that represents pretty much about 80 million rows right and",
    "start": "2445670",
    "end": "2451130"
  },
  {
    "text": "only one I have about 10 blocks off to scan is where the cost to scan the whole table it's double the cost of scanning",
    "start": "2451130",
    "end": "2458390"
  },
  {
    "text": "via interleaved search key right now there is cost to load and maintain the until if search key table so it only",
    "start": "2458390",
    "end": "2464360"
  },
  {
    "text": "really makes sense if it was really really big right otherwise it's not much difference you see only after the 10",
    "start": "2464360",
    "end": "2470690"
  },
  {
    "text": "that the numbers kind of really go apart between the linear and the logarithm in one and only makes sense if the columns",
    "start": "2470690",
    "end": "2476750"
  },
  {
    "text": "domain are stable because if I put a date or time stamp on my table the",
    "start": "2476750",
    "end": "2482120"
  },
  {
    "text": "moment I build a table the very next value that insert go to the others bucket it's useless right I have to",
    "start": "2482120",
    "end": "2487190"
  },
  {
    "text": "reading this all the time right and even that we are thinking of finding a way to fix that so the interleave Sarki can be",
    "start": "2487190",
    "end": "2494090"
  },
  {
    "text": "a wider range of uses today is a quite narrow usage but for that usage it saves",
    "start": "2494090",
    "end": "2499880"
  },
  {
    "text": "really really a lot of time but if you use for the wrong the wrong usage",
    "start": "2499880",
    "end": "2505070"
  },
  {
    "text": "especially fuse time stamp it can cause your headache so keep eye on that now on",
    "start": "2505070",
    "end": "2511130"
  },
  {
    "start": "2510000",
    "end": "2592000"
  },
  {
    "text": "redshift on the topic of trying to allow yo to not happen right we compress",
    "start": "2511130",
    "end": "2516800"
  },
  {
    "text": "everything you try to stay in the same place we want to distribute the data as even as possible so a choice of",
    "start": "2516800",
    "end": "2522740"
  },
  {
    "text": "distribution key becomes very important is we have to make sure that you know where your data is going and the idea is",
    "start": "2522740",
    "end": "2528650"
  },
  {
    "text": "to be even to see we have skew and one node has way more data than others everybody has to wait that one node so",
    "start": "2528650",
    "end": "2535130"
  },
  {
    "text": "you lose your parallelism right and you wanted to reduce the data movement",
    "start": "2535130",
    "end": "2540230"
  },
  {
    "text": "because you wanna when you join two tables one of the rows of those two they're joining already together on the",
    "start": "2540230",
    "end": "2546260"
  },
  {
    "text": "same node so you don't have to move data around so that's your you choose your distribution key and already if you have three choices either you choose a column",
    "start": "2546260",
    "end": "2553940"
  },
  {
    "text": "where we apply a hash function and put on the on the on the different slices on",
    "start": "2553940",
    "end": "2559400"
  },
  {
    "text": "the different nodes on the red shift and for two tables that have key",
    "start": "2559400",
    "end": "2565220"
  },
  {
    "text": "distribution keys you'll be able to actually fall on the same column when you join the two columns actually have",
    "start": "2565220",
    "end": "2571610"
  },
  {
    "text": "to be the same data type I have customers that have one table with a key that is char and another key that is",
    "start": "2571610",
    "end": "2578480"
  },
  {
    "text": "varchar' both the distribution key and the joy together do indirect and why it's slow because the data types are",
    "start": "2578480",
    "end": "2583910"
  },
  {
    "text": "different a hash function will act differently on different data types so data types have to be same the size and",
    "start": "2583910",
    "end": "2589640"
  },
  {
    "text": "the type have to be the same or if you don't have such a column you can't",
    "start": "2589640",
    "end": "2594920"
  },
  {
    "start": "2592000",
    "end": "2654000"
  },
  {
    "text": "choose the column or you don't have a good choice you can ask the system just distribute evenly the data round right",
    "start": "2594920",
    "end": "2600560"
  },
  {
    "text": "we came up with a third way imagine on a star schema where you have a few large",
    "start": "2600560",
    "end": "2606740"
  },
  {
    "text": "tables that you can choose this mission key but they have a bunch of smaller tables that you join that are not so",
    "start": "2606740",
    "end": "2612350"
  },
  {
    "text": "small that you don't care but you can't have a single distribution key for all of them because there are different tables different dimensions you can make",
    "start": "2612350",
    "end": "2620000"
  },
  {
    "text": "the system to have a copy of the tape on every node not on every slice on every note and every slice on that node uses",
    "start": "2620000",
    "end": "2626630"
  },
  {
    "text": "the data locally and then you replicated it a little bit but for those joints a",
    "start": "2626630",
    "end": "2631939"
  },
  {
    "text": "star schema it's much much faster for you to use now you talk to me okay how we're going to know all this it's hard",
    "start": "2631939",
    "end": "2638449"
  },
  {
    "text": "to understand and I'm I migrating from another system I don't know about redshift how we do and the documentation",
    "start": "2638449",
    "end": "2643759"
  },
  {
    "text": "is complicated maybe it's not complicated but it's long it's big I understand this big it's a very long document it will keep changing",
    "start": "2643759",
    "end": "2649999"
  },
  {
    "text": "making try to make it better but it is complicated so we have help for you we",
    "start": "2649999",
    "end": "2655429"
  },
  {
    "start": "2654000",
    "end": "2747000"
  },
  {
    "text": "can help you migrate your database for you that's a tool that's been out for a while and we adding features to these",
    "start": "2655429",
    "end": "2661459"
  },
  {
    "text": "tools because schema conversion to the schema conversion to can point to your",
    "start": "2661459",
    "end": "2667309"
  },
  {
    "text": "existing database or a code a date and a teaser greenplum read our schema read the statistics of",
    "start": "2667309",
    "end": "2675140"
  },
  {
    "text": "how you use your tables how you query your tables and build for you this",
    "start": "2675140",
    "end": "2681499"
  },
  {
    "text": "schema for redshift already optimized with the best search key and the best",
    "start": "2681499",
    "end": "2687019"
  },
  {
    "text": "distribution key all you have to do is to implement right now it's not perfect",
    "start": "2687019",
    "end": "2692029"
  },
  {
    "text": "but it's a very very good first step it's awesome now the two also can look",
    "start": "2692029",
    "end": "2698569"
  },
  {
    "text": "at the code you have on your application your java code or a script that i created for one of your sources database",
    "start": "2698569",
    "end": "2704839"
  },
  {
    "text": "what we call legacy databases and you can convert those scripts new to redshift schema so it converts your code",
    "start": "2704839",
    "end": "2712789"
  },
  {
    "text": "that SQL code and converts your schema now the latest feature you added to the",
    "start": "2712789",
    "end": "2718099"
  },
  {
    "text": "schema conversion tube is one of the sources now is redshift you can have existing redshift",
    "start": "2718099",
    "end": "2724759"
  },
  {
    "text": "cuz they're not sure if the optimal or not point the truth to to it and it can",
    "start": "2724759",
    "end": "2729799"
  },
  {
    "text": "create a new scheme that is optimized for the way you use your data so it can save you a lot of time and help you",
    "start": "2729799",
    "end": "2736549"
  },
  {
    "text": "understand the choice of distribution key and start key because the to give you options 80 percent certainty so good",
    "start": "2736549",
    "end": "2742339"
  },
  {
    "text": "distribution key twenty percent these would be a good and so forth now if you don't have time to build a custom",
    "start": "2742339",
    "end": "2750650"
  },
  {
    "start": "2747000",
    "end": "2785000"
  },
  {
    "text": "dashboard for building queries like the king guys did you can use quick site",
    "start": "2750650",
    "end": "2755779"
  },
  {
    "text": "because quick citing redshift I think that go well hand and together because",
    "start": "2755779",
    "end": "2760910"
  },
  {
    "text": "we kind of sit next to each other in development and they build the spice engine to read data already or a chief",
    "start": "2760910",
    "end": "2767619"
  },
  {
    "text": "columnar into the spice engine that is commoner and allow you to navigate your data really really fast and really",
    "start": "2767619",
    "end": "2774170"
  },
  {
    "text": "really easy so I highly recommend if you haven't looked into quick side it just became GA and has a whole life ahead of",
    "start": "2774170",
    "end": "2780559"
  },
  {
    "text": "it adding new features and cool stuff I highly recommend you take a look to it now one more thing about the batch sizes",
    "start": "2780559",
    "end": "2787400"
  },
  {
    "start": "2785000",
    "end": "2815000"
  },
  {
    "text": "that that field talked about is on redshift the parallelism for loads is",
    "start": "2787400",
    "end": "2793630"
  },
  {
    "text": "defined by the number of files you load so if you hold one big file only one CPU",
    "start": "2793630",
    "end": "2799969"
  },
  {
    "text": "will be busy so you just using 6% of your performance if you distribute your",
    "start": "2799969",
    "end": "2805940"
  },
  {
    "text": "file to multiple files one at least one per slice and so many files are similar sizes then you have the full performance",
    "start": "2805940",
    "end": "2811940"
  },
  {
    "text": "of your copy command alright so riffing a little bit how do you optimize",
    "start": "2811940",
    "end": "2818599"
  },
  {
    "start": "2815000",
    "end": "2915000"
  },
  {
    "text": "your database for your queries first you periodically check the status of your table see if hell's you need stats or",
    "start": "2818599",
    "end": "2824690"
  },
  {
    "text": "need a vacuum right and you really have to take a look on something that's missing stats or table skew or columns",
    "start": "2824690",
    "end": "2831709"
  },
  {
    "text": "that are not compressed or data that's not sorted all that will overtime kind",
    "start": "2831709",
    "end": "2837170"
  },
  {
    "text": "of degrade your performs it's like it's like hygiene right you don't brush your",
    "start": "2837170",
    "end": "2842180"
  },
  {
    "text": "teeth every day and one day you have a big cavity I wonder what happened yesterday that have kept you today well it's not because days overtime you",
    "start": "2842180",
    "end": "2848869"
  },
  {
    "text": "neglected your data on redshifted the more often you keep track of your data you don't lose performance and the",
    "start": "2848869",
    "end": "2854989"
  },
  {
    "text": "maintenance itself is cheaper and faster if you let it go too long then the matrix itself takes longer right so keep",
    "start": "2854989",
    "end": "2861349"
  },
  {
    "text": "your data in hygiene in up-to-date ok and check the status of your cluster",
    "start": "2861349",
    "end": "2866599"
  },
  {
    "text": "check your mm queuing commit queuing database walk take a look on that see",
    "start": "2866599",
    "end": "2871999"
  },
  {
    "text": "what's going on right now I'm assuming them just like yeah every so often have your toast you have to clean up the things underneath right otherwise",
    "start": "2871999",
    "end": "2877999"
  },
  {
    "text": "there's a fire one day right so be careful with that right they optimizing",
    "start": "2877999",
    "end": "2883579"
  },
  {
    "text": "specifically like to have statistics about the tables now because we have",
    "start": "2883579",
    "end": "2889519"
  },
  {
    "text": "very wide tables you say I don't have time to gather stat on all my tables all the time you can gather stats only on",
    "start": "2889519",
    "end": "2895700"
  },
  {
    "text": "sort keys distribution keys and queries that you use on future that's enough for the optimized to make good choices on",
    "start": "2895700",
    "end": "2901610"
  },
  {
    "text": "the on the queries right don't need to scan right if you have the time great but if you don't at least gather stats",
    "start": "2901610",
    "end": "2907550"
  },
  {
    "text": "on search Keys dispersion keys and filters because that will make a difference between a good plan and a bad",
    "start": "2907550",
    "end": "2913490"
  },
  {
    "text": "plan and of course table skew and unsorted",
    "start": "2913490",
    "end": "2918560"
  },
  {
    "start": "2915000",
    "end": "2934000"
  },
  {
    "text": "table can become a problem over time especially table skew right just look at this queue and if that is Qi index on",
    "start": "2918560",
    "end": "2925700"
  },
  {
    "text": "this SUV table if it's a bigger than five you're in trouble right please please please pay attention to that okay",
    "start": "2925700",
    "end": "2932660"
  },
  {
    "text": "now one thing we talked about is to avoid modification of data at the same time",
    "start": "2932660",
    "end": "2939320"
  },
  {
    "start": "2934000",
    "end": "3070000"
  },
  {
    "text": "right that's called the commit queue on redshift the commit Q is single threaded cluster wide you can do much for change",
    "start": "2939320",
    "end": "2946850"
  },
  {
    "text": "at the same time but at commit time they come together and they line up so in the locks on redshift happen on a table",
    "start": "2946850",
    "end": "2953210"
  },
  {
    "text": "level as well so two people cannot change the same table the same time they can query and change at the same time it's fully acid but you don't want to do",
    "start": "2953210",
    "end": "2959930"
  },
  {
    "text": "so that's why for a single table you want to keep single-threaded and that we increase your throughput instead of the",
    "start": "2959930",
    "end": "2965150"
  },
  {
    "text": "equation throughput trying to do too many things on writes at the same time will decrease your to put and that we",
    "start": "2965150",
    "end": "2971150"
  },
  {
    "text": "don't want to work log management kill it's something already chief that kinda misunderstood and here's how explain on",
    "start": "2971150",
    "end": "2977480"
  },
  {
    "text": "other systems a single query cannot take over the whole cluster so for you to",
    "start": "2977480",
    "end": "2983090"
  },
  {
    "text": "take advantage of the million dollar you paid for your system you have to run a bunch of crazy same time that's your idea on redshift a single query can take",
    "start": "2983090",
    "end": "2991460"
  },
  {
    "text": "and is designed to take the whole cluster so you not gain anything by running 400 degrees at the same time the",
    "start": "2991460",
    "end": "2998240"
  },
  {
    "text": "system I designed to run few queries very fast and you can use workload management to line up your resources",
    "start": "2998240",
    "end": "3005350"
  },
  {
    "text": "because your customers will try to come to the base at their pace and you can regulate that to a certain degree but",
    "start": "3005350",
    "end": "3010810"
  },
  {
    "text": "you can look at where chieftain say if I tune my WLAN queue from 5 to 10 how much",
    "start": "3010810",
    "end": "3016150"
  },
  {
    "text": "faster my whole workload ends and from then to 20 how much faster and you it",
    "start": "3016150",
    "end": "3021400"
  },
  {
    "text": "doesn't get any faster that you don't need to turn it on again you keep it there and let the system handle because",
    "start": "3021400",
    "end": "3026950"
  },
  {
    "text": "at some point you're going to heat inverse scaling where the churn of too many things run at the same time we",
    "start": "3026950",
    "end": "3032290"
  },
  {
    "text": "actually make your run slower than faster we keep working on optimizing the",
    "start": "3032290",
    "end": "3037750"
  },
  {
    "text": "workload management queue and there are some awesome new features coming up and I highly recommend there's a session tomorrow 2:30 p.m. that video is going",
    "start": "3037750",
    "end": "3045160"
  },
  {
    "text": "to come and tell all the new features that we came last month and the next two months I highly recommend because unless",
    "start": "3045160",
    "end": "3051790"
  },
  {
    "text": "you want to stay another hour here's to go over them do know ok ok so we will come tomorrow and talk and see you at",
    "start": "3051790",
    "end": "3057339"
  },
  {
    "text": "the session about new features but workload management queue think of how you can optimize the to boot of a system",
    "start": "3057339",
    "end": "3064510"
  },
  {
    "text": "don't think about concurrency think about to put and that's that's why we don't want to think about",
    "start": "3064510",
    "end": "3070050"
  },
  {
    "text": "now we put together of the years a bunch of tools for you to optimize your users",
    "start": "3070050",
    "end": "3076540"
  },
  {
    "text": "of right chief so there is a github it's open source and open source means that you can contribute you as well you can",
    "start": "3076540",
    "end": "3083410"
  },
  {
    "text": "say hey how about the skip that does that how about the script or there's a me and there's a problem here we take suggestions all the time I maintain the",
    "start": "3083410",
    "end": "3090609"
  },
  {
    "text": "repository and you have utilities you have monitors have UDF's we have scripts",
    "start": "3090609",
    "end": "3096910"
  },
  {
    "text": "views we have : encoding utility to re-encode your system to recompress your system if you want we even have a tool",
    "start": "3096910",
    "end": "3103450"
  },
  {
    "text": "more recent similar what they did they can look at your tables and see which tables need more vacuum and stats and",
    "start": "3103450",
    "end": "3109599"
  },
  {
    "text": "run the scripts for you so take a look on those github x' and it's very very very useful for you to manage your",
    "start": "3109599",
    "end": "3116020"
  },
  {
    "text": "system now are we done are you kind of you know",
    "start": "3116020",
    "end": "3121540"
  },
  {
    "text": "rich if is good enough right we would only need to change anything right we never done right so what's coming next",
    "start": "3121540",
    "end": "3127480"
  },
  {
    "start": "3125000",
    "end": "3139000"
  },
  {
    "text": "we adding a ton of features on redshift and and all the features we add on redshift are always related to to make",
    "start": "3127480",
    "end": "3133630"
  },
  {
    "text": "it fast to make it cheaper to make it easier to use right and there will be a",
    "start": "3133630",
    "end": "3139210"
  },
  {
    "start": "3139000",
    "end": "3185000"
  },
  {
    "text": "session tomorrow BDA 304 it's called what snack what's new with amazon relative I highly",
    "start": "3139210",
    "end": "3145690"
  },
  {
    "text": "recommend this is going to go over all the new features a few things that we haven't announced yet we normally don't",
    "start": "3145690",
    "end": "3151150"
  },
  {
    "text": "do that there are few things that are just about to be launched so you want to talk to you about right relate to workload management skills related to",
    "start": "3151150",
    "end": "3157930"
  },
  {
    "text": "how we're going to get more crazy to put going to the system talking about how",
    "start": "3157930",
    "end": "3163319"
  },
  {
    "text": "you'll be able to have different ways of connecting database without having username and password directly some kind",
    "start": "3163319",
    "end": "3169510"
  },
  {
    "text": "of cool stuff coming up so I highly recommend to take a look on that right and there's a few other sessions that",
    "start": "3169510",
    "end": "3174970"
  },
  {
    "text": "are other customers that use redshift to do their work right and they learn their",
    "start": "3174970",
    "end": "3181089"
  },
  {
    "text": "lessons and and I highly highly really beg you to look back on the",
    "start": "3181089",
    "end": "3187119"
  },
  {
    "text": "documentation on best practices and now with this understanding from today read it again I understand the whys off we",
    "start": "3187119",
    "end": "3193180"
  },
  {
    "text": "say do these and don't do that we keep making documentation better we take suggestions we try to fix as much as we",
    "start": "3193180",
    "end": "3198880"
  },
  {
    "text": "can and we really really want our system to be like a toaster that you just put your jobs and make a",
    "start": "3198880",
    "end": "3206770"
  },
  {
    "text": "few choices and it runs right and you don't have to worry about too much and we we strive to make it better and",
    "start": "3206770",
    "end": "3212290"
  },
  {
    "text": "better over time I'm a recovering DBA that I'd love to have knobs on things and I have my hands lap all the time now",
    "start": "3212290",
    "end": "3219099"
  },
  {
    "text": "we're not going to put a knob if this isn't going to choose the right value we're going to do automatically do the right thing we don't add knobs right and",
    "start": "3219099",
    "end": "3224770"
  },
  {
    "text": "that's how has been since the beginning but they're few knobs it you can't escape for example on the toaster the",
    "start": "3224770",
    "end": "3230170"
  },
  {
    "text": "bagel button right what is the bagel button do right so the bagel button do is you only turn on the heater on the",
    "start": "3230170",
    "end": "3238329"
  },
  {
    "text": "inside so the outside where the crust is it doesn't burn if you don't know that you don't press the big about you burn",
    "start": "3238329",
    "end": "3244599"
  },
  {
    "text": "your cheese on your bagel or you put the wrong way right for whatever reason you're going to change the I know right",
    "start": "3244599",
    "end": "3250420"
  },
  {
    "text": "but you have to know that and not net all toasters are the same some toasters the outside don't turn on at all my",
    "start": "3250420",
    "end": "3257710"
  },
  {
    "text": "toaster it turns out a little bit less right so you have to understand how",
    "start": "3257710",
    "end": "3263470"
  },
  {
    "text": "things work so you can take full advantage of them you don't need to be an expert on toaster but you need to",
    "start": "3263470",
    "end": "3269349"
  },
  {
    "text": "know to clean up the dry underneath a little bit as well and know what the buttons do and how to put your stuff in",
    "start": "3269349",
    "end": "3274960"
  },
  {
    "text": "and once you do this minimal and understand how things work you can take full advantage of the the system right",
    "start": "3274960",
    "end": "3281230"
  },
  {
    "text": "and that's the idea for for redshift we want to make a system that's going to keep evolving over time we're not going",
    "start": "3281230",
    "end": "3286900"
  },
  {
    "text": "to build them Mahima database like other database we're always going to be fast cheap and",
    "start": "3286900",
    "end": "3293290"
  },
  {
    "text": "did you use and that's what I have for you today thank you [Applause]",
    "start": "3293290",
    "end": "3300290"
  }
]