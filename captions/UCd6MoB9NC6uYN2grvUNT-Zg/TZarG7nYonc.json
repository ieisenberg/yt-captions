[
  {
    "text": "hi my name is gomier I am an Enterprise",
    "start": "399",
    "end": "3199"
  },
  {
    "text": "architect at AWS today I want to show",
    "start": "3199",
    "end": "5520"
  },
  {
    "text": "you how you can use the Amazon managed",
    "start": "5520",
    "end": "7080"
  },
  {
    "text": "blockchain service to interact with the",
    "start": "7080",
    "end": "8599"
  },
  {
    "text": "Bitcoin Network in the following demo I",
    "start": "8599",
    "end": "11400"
  },
  {
    "text": "will record some data on the Bitcoin",
    "start": "11400",
    "end": "12920"
  },
  {
    "text": "test net I will use some random data but",
    "start": "12920",
    "end": "15599"
  },
  {
    "text": "you could record more meaningful data if",
    "start": "15599",
    "end": "17680"
  },
  {
    "text": "you want such as the identifier of an",
    "start": "17680",
    "end": "19520"
  },
  {
    "text": "ipfs file if you want to know how you",
    "start": "19520",
    "end": "22000"
  },
  {
    "text": "can run ipfs on AWS you can refer to",
    "start": "22000",
    "end": "24400"
  },
  {
    "text": "some of the links in the description of",
    "start": "24400",
    "end": "25840"
  },
  {
    "text": "this",
    "start": "25840",
    "end": "26720"
  },
  {
    "text": "video if you want to follow along the",
    "start": "26720",
    "end": "28920"
  },
  {
    "text": "only thing you need is a browser",
    "start": "28920",
    "end": "30439"
  },
  {
    "text": "connected to your AWS account let's get",
    "start": "30439",
    "end": "34719"
  },
  {
    "text": "started from the AWS console select the",
    "start": "34719",
    "end": "37640"
  },
  {
    "text": "region where the Amazon manage",
    "start": "37640",
    "end": "38960"
  },
  {
    "text": "blockchain service is available such as",
    "start": "38960",
    "end": "40719"
  },
  {
    "text": "us one then start vws cloud",
    "start": "40719",
    "end": "45440"
  },
  {
    "text": "share we will maximize the cloud shell",
    "start": "47320",
    "end": "49760"
  },
  {
    "text": "window so it's easier to work on",
    "start": "49760",
    "end": "52680"
  },
  {
    "text": "it let's start by installing some",
    "start": "52680",
    "end": "55480"
  },
  {
    "text": "prerequisites we will use AWS C to",
    "start": "55480",
    "end": "57960"
  },
  {
    "text": "interact with the Amazon managed",
    "start": "57960",
    "end": "59320"
  },
  {
    "text": "blockchain service",
    "start": "59320",
    "end": "60760"
  },
  {
    "text": "so we need to install this tool",
    "start": "60760",
    "end": "64280"
  },
  {
    "text": "first we can use the sample command from",
    "start": "69479",
    "end": "72040"
  },
  {
    "text": "the documentation to check that awl can",
    "start": "72040",
    "end": "74400"
  },
  {
    "text": "connect to the Bitcoin access service",
    "start": "74400",
    "end": "76040"
  },
  {
    "text": "end",
    "start": "76040",
    "end": "78280"
  },
  {
    "text": "point multiple libraries exist in",
    "start": "79920",
    "end": "82520"
  },
  {
    "text": "different programming languages to",
    "start": "82520",
    "end": "84079"
  },
  {
    "text": "manipulate Bitcoin transactions in this",
    "start": "84079",
    "end": "86680"
  },
  {
    "text": "demo we will use the Bitcoin JS s",
    "start": "86680",
    "end": "88439"
  },
  {
    "text": "JavaScript library to generate the the",
    "start": "88439",
    "end": "90000"
  },
  {
    "text": "Bitcoin transactions but it would be",
    "start": "90000",
    "end": "91960"
  },
  {
    "text": "possible to use another programming",
    "start": "91960",
    "end": "93439"
  },
  {
    "text": "language or",
    "start": "93439",
    "end": "95600"
  },
  {
    "text": "Library we all",
    "start": "95600",
    "end": "98520"
  },
  {
    "text": "set let's start the node console and",
    "start": "98520",
    "end": "100880"
  },
  {
    "text": "generate a new Bitcoin key",
    "start": "100880",
    "end": "102920"
  },
  {
    "text": "pair to do that we use the key",
    "start": "102920",
    "end": "105280"
  },
  {
    "text": "management functions of the ECP",
    "start": "105280",
    "end": "108960"
  },
  {
    "text": "library in a production environment you",
    "start": "110560",
    "end": "113000"
  },
  {
    "text": "may want to use a key management system",
    "start": "113000",
    "end": "114840"
  },
  {
    "text": "like kws KMS to handle your keys but for",
    "start": "114840",
    "end": "118320"
  },
  {
    "text": "the purpose of this demo we will simply",
    "start": "118320",
    "end": "120000"
  },
  {
    "text": "back up the key pair in a wet import",
    "start": "120000",
    "end": "123880"
  },
  {
    "text": "format let's write down this value and",
    "start": "127000",
    "end": "129280"
  },
  {
    "text": "check that we can reimport the key",
    "start": "129280",
    "end": "132720"
  },
  {
    "text": "pair we will use the post segit address",
    "start": "144160",
    "end": "146840"
  },
  {
    "text": "format and script for the",
    "start": "146840",
    "end": "148599"
  },
  {
    "text": "transactions so so let's extract the pay",
    "start": "148599",
    "end": "150920"
  },
  {
    "text": "to witness public key Ash and",
    "start": "150920",
    "end": "152560"
  },
  {
    "text": "corresponding address from our key",
    "start": "152560",
    "end": "156120"
  },
  {
    "text": "pair we can write down this",
    "start": "158879",
    "end": "162840"
  },
  {
    "text": "address we will not be able to do much",
    "start": "163480",
    "end": "165760"
  },
  {
    "text": "until we get some test Bitcoins or test",
    "start": "165760",
    "end": "168120"
  },
  {
    "text": "satoshis to be more",
    "start": "168120",
    "end": "169640"
  },
  {
    "text": "precise to do that we will request funds",
    "start": "169640",
    "end": "172200"
  },
  {
    "text": "from the coin. website but feel free to",
    "start": "172200",
    "end": "175680"
  },
  {
    "text": "use an info set of your",
    "start": "175680",
    "end": "178680"
  },
  {
    "text": "choice",
    "start": "178840",
    "end": "181840"
  },
  {
    "text": "the foret has sent us this amount of",
    "start": "183640",
    "end": "186290"
  },
  {
    "text": "[Music]",
    "start": "186290",
    "end": "188840"
  },
  {
    "text": "Sates let's go to a Bitcoin test net",
    "start": "188840",
    "end": "191280"
  },
  {
    "text": "Explorer such as the one from",
    "start": "191280",
    "end": "192879"
  },
  {
    "text": "blockstream and enter our Bitcoin",
    "start": "192879",
    "end": "196920"
  },
  {
    "text": "address we see one transaction that",
    "start": "202519",
    "end": "204799"
  },
  {
    "text": "relates to our",
    "start": "204799",
    "end": "207599"
  },
  {
    "text": "address Bitcoin chooses unpend",
    "start": "207959",
    "end": "210239"
  },
  {
    "text": "transaction output or utxo model where",
    "start": "210239",
    "end": "213519"
  },
  {
    "text": "the outputs of past transactions are",
    "start": "213519",
    "end": "215560"
  },
  {
    "text": "used as inputs to the new ones to",
    "start": "215560",
    "end": "217519"
  },
  {
    "text": "prepare future transactions from our",
    "start": "217519",
    "end": "219560"
  },
  {
    "text": "Bitcoin address we need to record the",
    "start": "219560",
    "end": "221920"
  },
  {
    "text": "transaction ID of the initial funding",
    "start": "221920",
    "end": "226799"
  },
  {
    "text": "transaction the index of the",
    "start": "226840",
    "end": "230680"
  },
  {
    "text": "output and the exact number of Sates",
    "start": "230680",
    "end": "233439"
  },
  {
    "text": "that we",
    "start": "233439",
    "end": "236000"
  },
  {
    "text": "received let's go back to clell and",
    "start": "236200",
    "end": "238439"
  },
  {
    "text": "record those values",
    "start": "238439",
    "end": "241720"
  },
  {
    "text": "we now have all we need to create our",
    "start": "243879",
    "end": "246280"
  },
  {
    "text": "transaction to do that we will use the",
    "start": "246280",
    "end": "248840"
  },
  {
    "text": "psbt object from the Bitcoin JS",
    "start": "248840",
    "end": "251480"
  },
  {
    "text": "Library psbt stands for partially signed",
    "start": "251480",
    "end": "254400"
  },
  {
    "text": "Bitcoin transactions this is the",
    "start": "254400",
    "end": "255760"
  },
  {
    "text": "community standard that is used to craft",
    "start": "255760",
    "end": "257600"
  },
  {
    "text": "Bitcoin",
    "start": "257600",
    "end": "259040"
  },
  {
    "text": "transactions as mentioned earlier we",
    "start": "259040",
    "end": "261280"
  },
  {
    "text": "need to reference the output of a",
    "start": "261280",
    "end": "262840"
  },
  {
    "text": "previous transaction as an input to our",
    "start": "262840",
    "end": "265960"
  },
  {
    "text": "transaction we can conveniently get this",
    "start": "265960",
    "end": "268440"
  },
  {
    "text": "output from the p to witness public key",
    "start": "268440",
    "end": "270880"
  },
  {
    "text": "Ash of our key",
    "start": "270880",
    "end": "272600"
  },
  {
    "text": "pair if this sounds a bit obscure to you",
    "start": "272600",
    "end": "275160"
  },
  {
    "text": "there is a link in the description",
    "start": "275160",
    "end": "276600"
  },
  {
    "text": "providing more information on bitcoin",
    "start": "276600",
    "end": "279479"
  },
  {
    "text": "scripts let's now create the input part",
    "start": "279479",
    "end": "281960"
  },
  {
    "text": "of our transaction using the different",
    "start": "281960",
    "end": "283520"
  },
  {
    "text": "pieces of information previously",
    "start": "283520",
    "end": "287120"
  },
  {
    "text": "collected we will have two outputs in",
    "start": "288880",
    "end": "291280"
  },
  {
    "text": "the",
    "start": "291280",
    "end": "292039"
  },
  {
    "text": "transaction a n return output with zero",
    "start": "292039",
    "end": "295199"
  },
  {
    "text": "value to record some data and another",
    "start": "295199",
    "end": "297880"
  },
  {
    "text": "output to send us back some set",
    "start": "297880",
    "end": "300880"
  },
  {
    "text": "the difference between the setes sent",
    "start": "300880",
    "end": "302639"
  },
  {
    "text": "back to us and the setes from the input",
    "start": "302639",
    "end": "305000"
  },
  {
    "text": "constitute the fees of the",
    "start": "305000",
    "end": "307199"
  },
  {
    "text": "transaction let's start with the opon",
    "start": "307199",
    "end": "311400"
  },
  {
    "text": "output we start by defining the data",
    "start": "311440",
    "end": "313960"
  },
  {
    "text": "that we want to",
    "start": "313960",
    "end": "315120"
  },
  {
    "text": "record for this demo I will use a small",
    "start": "315120",
    "end": "317800"
  },
  {
    "text": "text but it can be anything shorter than",
    "start": "317800",
    "end": "320039"
  },
  {
    "text": "80 bytes so again you could store an",
    "start": "320039",
    "end": "323240"
  },
  {
    "text": "ipfs content identifier if you",
    "start": "323240",
    "end": "326120"
  },
  {
    "text": "want we can conveniently use the",
    "start": "326120",
    "end": "328560"
  },
  {
    "text": "payments. uned function to create the",
    "start": "328560",
    "end": "331280"
  },
  {
    "text": "opon",
    "start": "331280",
    "end": "333919"
  },
  {
    "text": "script for the second output we first",
    "start": "340120",
    "end": "343160"
  },
  {
    "text": "compute our",
    "start": "343160",
    "end": "345800"
  },
  {
    "text": "change then we use this value and the",
    "start": "348440",
    "end": "351080"
  },
  {
    "text": "BET witness public address to create the",
    "start": "351080",
    "end": "353600"
  },
  {
    "text": "second",
    "start": "353600",
    "end": "355319"
  },
  {
    "text": "output here we are using the previously",
    "start": "355319",
    "end": "357759"
  },
  {
    "text": "generated address but we could could",
    "start": "357759",
    "end": "359759"
  },
  {
    "text": "have created a new one for increased",
    "start": "359759",
    "end": "363680"
  },
  {
    "text": "privacy let's now sign the",
    "start": "363680",
    "end": "366759"
  },
  {
    "text": "transaction we use the sign input",
    "start": "366759",
    "end": "368919"
  },
  {
    "text": "function from the psbt object with the",
    "start": "368919",
    "end": "371560"
  },
  {
    "text": "index of the input we want to sign and",
    "start": "371560",
    "end": "373840"
  },
  {
    "text": "our key",
    "start": "373840",
    "end": "375759"
  },
  {
    "text": "pair we have a unique input in this",
    "start": "375759",
    "end": "378440"
  },
  {
    "text": "transaction so we can now call the",
    "start": "378440",
    "end": "380560"
  },
  {
    "text": "finalize all inputs",
    "start": "380560",
    "end": "383639"
  },
  {
    "text": "function that's",
    "start": "384000",
    "end": "386240"
  },
  {
    "text": "it we can now extract our transaction in",
    "start": "386240",
    "end": "389080"
  },
  {
    "text": "row for so we can later broadcast it on",
    "start": "389080",
    "end": "391319"
  },
  {
    "text": "the Bitcoin",
    "start": "391319",
    "end": "393840"
  },
  {
    "text": "Network to broadcast the transaction",
    "start": "405680",
    "end": "408000"
  },
  {
    "text": "using the Amazon managed blockchain",
    "start": "408000",
    "end": "409560"
  },
  {
    "text": "access Bitcoin service we will use an",
    "start": "409560",
    "end": "412199"
  },
  {
    "text": "awsl command similar to the one we",
    "start": "412199",
    "end": "414319"
  },
  {
    "text": "previously",
    "start": "414319",
    "end": "415360"
  },
  {
    "text": "used except we will use the sendro",
    "start": "415360",
    "end": "417840"
  },
  {
    "text": "transaction method the roow transaction",
    "start": "417840",
    "end": "420879"
  },
  {
    "text": "as parameter and the test net end",
    "start": "420879",
    "end": "425560"
  },
  {
    "text": "point this command Returns the",
    "start": "430800",
    "end": "432840"
  },
  {
    "text": "transaction ID we can use this",
    "start": "432840",
    "end": "435160"
  },
  {
    "text": "transaction ID to double check on the",
    "start": "435160",
    "end": "436919"
  },
  {
    "text": "blockchain Explorer whether it has been",
    "start": "436919",
    "end": "439000"
  },
  {
    "text": "successfully included into the Bitcoin",
    "start": "439000",
    "end": "442230"
  },
  {
    "text": "[Music]",
    "start": "442230",
    "end": "445339"
  },
  {
    "text": "blockchain if if we inspect the",
    "start": "448240",
    "end": "450280"
  },
  {
    "text": "transaction we see that it contains two",
    "start": "450280",
    "end": "453479"
  },
  {
    "text": "outputs an unspent output that we will",
    "start": "453479",
    "end": "456319"
  },
  {
    "text": "be able to use for future",
    "start": "456319",
    "end": "458560"
  },
  {
    "text": "transactions and the not return output",
    "start": "458560",
    "end": "461080"
  },
  {
    "text": "that contains the data we wanted to",
    "start": "461080",
    "end": "464039"
  },
  {
    "text": "record that's all I wanted to show you",
    "start": "464039",
    "end": "466159"
  },
  {
    "text": "today on this video thanks for",
    "start": "466159",
    "end": "470360"
  },
  {
    "text": "watching",
    "start": "474560",
    "end": "477560"
  }
]