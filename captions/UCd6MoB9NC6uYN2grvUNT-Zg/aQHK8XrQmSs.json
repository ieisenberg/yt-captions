[
  {
    "text": "[Music]",
    "start": "380",
    "end": "12320"
  },
  {
    "text": "hi",
    "start": "12320",
    "end": "12880"
  },
  {
    "text": "my name is amul a cloud support engineer",
    "start": "12880",
    "end": "14960"
  },
  {
    "text": "here at the aws office in dallas",
    "start": "14960",
    "end": "17279"
  },
  {
    "text": "sometimes customers ask me about passing",
    "start": "17279",
    "end": "19279"
  },
  {
    "text": "query string parameters",
    "start": "19279",
    "end": "20560"
  },
  {
    "text": "from a client to the backend lambda or",
    "start": "20560",
    "end": "22720"
  },
  {
    "text": "http endpoint y",
    "start": "22720",
    "end": "24000"
  },
  {
    "text": "api gateway today i'm going to show you",
    "start": "24000",
    "end": "26160"
  },
  {
    "text": "how it can be done",
    "start": "26160",
    "end": "27519"
  },
  {
    "text": "let's get started as we know there are",
    "start": "27519",
    "end": "30080"
  },
  {
    "text": "two types of integrations for lambda",
    "start": "30080",
    "end": "32238"
  },
  {
    "text": "and http endpoints first kind is proxy",
    "start": "32239",
    "end": "35440"
  },
  {
    "text": "integration",
    "start": "35440",
    "end": "36559"
  },
  {
    "text": "and second kind is non-proxy integration",
    "start": "36559",
    "end": "39280"
  },
  {
    "text": "while proxy implementation is the",
    "start": "39280",
    "end": "40719"
  },
  {
    "text": "recommended approach",
    "start": "40719",
    "end": "41840"
  },
  {
    "text": "as it simplifies management of the api",
    "start": "41840",
    "end": "44079"
  },
  {
    "text": "and reduces api response times",
    "start": "44079",
    "end": "46320"
  },
  {
    "text": "non-proxy implementation forces the use",
    "start": "46320",
    "end": "48399"
  },
  {
    "text": "of mapping templates",
    "start": "48399",
    "end": "50000"
  },
  {
    "text": "although templates are supported with",
    "start": "50000",
    "end": "51680"
  },
  {
    "text": "use in api gateway",
    "start": "51680",
    "end": "53120"
  },
  {
    "text": "they use vtl which is a language that",
    "start": "53120",
    "end": "55440"
  },
  {
    "text": "support can't help troubleshoot or write",
    "start": "55440",
    "end": "58000"
  },
  {
    "text": "customers who want to customize",
    "start": "58000",
    "end": "59520"
  },
  {
    "text": "templates for their use case",
    "start": "59520",
    "end": "61199"
  },
  {
    "text": "must have knowledge of the vtl language",
    "start": "61199",
    "end": "63280"
  },
  {
    "text": "i will clarify the two types of",
    "start": "63280",
    "end": "64799"
  },
  {
    "text": "integration briefly",
    "start": "64799",
    "end": "66479"
  },
  {
    "text": "first one proxy integration when a",
    "start": "66479",
    "end": "69119"
  },
  {
    "text": "client submits an api request",
    "start": "69119",
    "end": "71040"
  },
  {
    "text": "api gateway passes the raw request to",
    "start": "71040",
    "end": "73119"
  },
  {
    "text": "the backend as is",
    "start": "73119",
    "end": "74640"
  },
  {
    "text": "except that the order of the request",
    "start": "74640",
    "end": "76080"
  },
  {
    "text": "parameters is not preserved",
    "start": "76080",
    "end": "78000"
  },
  {
    "text": "request parameters can be referred as",
    "start": "78000",
    "end": "80080"
  },
  {
    "text": "headers query strings",
    "start": "80080",
    "end": "81759"
  },
  {
    "text": "path parameters and so on second kind is",
    "start": "81759",
    "end": "84960"
  },
  {
    "text": "non-proxy integration",
    "start": "84960",
    "end": "86560"
  },
  {
    "text": "with this integration you must be sure",
    "start": "86560",
    "end": "88720"
  },
  {
    "text": "that the input to the back end is",
    "start": "88720",
    "end": "90320"
  },
  {
    "text": "supplied",
    "start": "90320",
    "end": "91119"
  },
  {
    "text": "as the integration request payload this",
    "start": "91119",
    "end": "93600"
  },
  {
    "text": "implies that",
    "start": "93600",
    "end": "94560"
  },
  {
    "text": "you as an api developer must map the",
    "start": "94560",
    "end": "97200"
  },
  {
    "text": "query string parameters",
    "start": "97200",
    "end": "98720"
  },
  {
    "text": "along with any input data the client",
    "start": "98720",
    "end": "100880"
  },
  {
    "text": "supplied as a request parameters",
    "start": "100880",
    "end": "103119"
  },
  {
    "text": "into the proper integration request body",
    "start": "103119",
    "end": "105600"
  },
  {
    "text": "using a mapping template",
    "start": "105600",
    "end": "108240"
  },
  {
    "text": "for proxy open api gateway management",
    "start": "108240",
    "end": "112840"
  },
  {
    "text": "console",
    "start": "112840",
    "end": "115759"
  },
  {
    "text": "choose the api",
    "start": "115759",
    "end": "118719"
  },
  {
    "text": "choose the resources choose the",
    "start": "122399",
    "end": "125280"
  },
  {
    "text": "configured http method",
    "start": "125280",
    "end": "129679"
  },
  {
    "text": "choose integration request",
    "start": "129679",
    "end": "133200"
  },
  {
    "text": "select http or lambda as integration",
    "start": "134560",
    "end": "137360"
  },
  {
    "text": "type",
    "start": "137360",
    "end": "139120"
  },
  {
    "text": "check the box for use http proxy",
    "start": "139120",
    "end": "141680"
  },
  {
    "text": "integration",
    "start": "141680",
    "end": "142720"
  },
  {
    "text": "for http backend or use lambda proxy",
    "start": "142720",
    "end": "146239"
  },
  {
    "text": "integration",
    "start": "146239",
    "end": "146879"
  },
  {
    "text": "for lambda back-end select the http",
    "start": "146879",
    "end": "149360"
  },
  {
    "text": "method supported by the backend",
    "start": "149360",
    "end": "153040"
  },
  {
    "text": "provide an endpoint url for example",
    "start": "153519",
    "end": "156800"
  },
  {
    "text": "a pet store endpoint select the lambda",
    "start": "156800",
    "end": "159840"
  },
  {
    "text": "function",
    "start": "159840",
    "end": "161840"
  },
  {
    "text": "accept the other default settings choose",
    "start": "161840",
    "end": "166400"
  },
  {
    "text": "save",
    "start": "168840",
    "end": "171840"
  },
  {
    "text": "deploy the api",
    "start": "174319",
    "end": "185280"
  },
  {
    "text": "for lambda non-proxy integration you",
    "start": "185280",
    "end": "187360"
  },
  {
    "text": "must be sure that",
    "start": "187360",
    "end": "188560"
  },
  {
    "text": "the input to the lambda function is",
    "start": "188560",
    "end": "190480"
  },
  {
    "text": "supplied as the integration request",
    "start": "190480",
    "end": "192319"
  },
  {
    "text": "payload",
    "start": "192319",
    "end": "193200"
  },
  {
    "text": "this implies that you as an api",
    "start": "193200",
    "end": "195680"
  },
  {
    "text": "developer",
    "start": "195680",
    "end": "196400"
  },
  {
    "text": "must map query string parameters along",
    "start": "196400",
    "end": "198879"
  },
  {
    "text": "with any input data the client supplied",
    "start": "198879",
    "end": "201599"
  },
  {
    "text": "as request parameters into the proper",
    "start": "201599",
    "end": "203840"
  },
  {
    "text": "integration request body",
    "start": "203840",
    "end": "205280"
  },
  {
    "text": "using a mapping template the following",
    "start": "205280",
    "end": "207760"
  },
  {
    "text": "are the steps",
    "start": "207760",
    "end": "209440"
  },
  {
    "text": "open the api gateway console",
    "start": "209440",
    "end": "213840"
  },
  {
    "text": "choose the api",
    "start": "215120",
    "end": "218080"
  },
  {
    "text": "choose the resources choose the",
    "start": "222080",
    "end": "225200"
  },
  {
    "text": "configured http method",
    "start": "225200",
    "end": "228879"
  },
  {
    "text": "in the method execution pane choose",
    "start": "229200",
    "end": "231680"
  },
  {
    "text": "method request",
    "start": "231680",
    "end": "234480"
  },
  {
    "text": "expand the url query string parameters",
    "start": "236799",
    "end": "238959"
  },
  {
    "text": "section",
    "start": "238959",
    "end": "241840"
  },
  {
    "text": "choose add query string",
    "start": "242000",
    "end": "245360"
  },
  {
    "text": "enter foo for name select the required",
    "start": "245680",
    "end": "248640"
  },
  {
    "text": "option",
    "start": "248640",
    "end": "249760"
  },
  {
    "text": "and choose the check mark icon to save",
    "start": "249760",
    "end": "252159"
  },
  {
    "text": "the setting",
    "start": "252159",
    "end": "253280"
  },
  {
    "text": "select caching option as per requirement",
    "start": "253280",
    "end": "257439"
  },
  {
    "text": "return to the method execution pane and",
    "start": "258959",
    "end": "261280"
  },
  {
    "text": "then choose integration request",
    "start": "261280",
    "end": "264960"
  },
  {
    "text": "expand the mapping template section",
    "start": "267120",
    "end": "269280"
  },
  {
    "text": "choose add mapping template",
    "start": "269280",
    "end": "272800"
  },
  {
    "text": "enter application json for content type",
    "start": "277280",
    "end": "280880"
  },
  {
    "text": "choose the check mark icon to save the",
    "start": "280880",
    "end": "282880"
  },
  {
    "text": "setting",
    "start": "282880",
    "end": "285360"
  },
  {
    "text": "in the pop-up that appears choose yes",
    "start": "287440",
    "end": "290320"
  },
  {
    "text": "secure this integration",
    "start": "290320",
    "end": "293520"
  },
  {
    "text": "check the recommended when there are no",
    "start": "293600",
    "end": "295680"
  },
  {
    "text": "templates defined for request body",
    "start": "295680",
    "end": "297600"
  },
  {
    "text": "passthrough",
    "start": "297600",
    "end": "300160"
  },
  {
    "text": "replace the generated mapping script in",
    "start": "300320",
    "end": "302400"
  },
  {
    "text": "the mapping template editor with the",
    "start": "302400",
    "end": "306240"
  },
  {
    "text": "following",
    "start": "308840",
    "end": "310800"
  },
  {
    "text": "input dot params returns the value of",
    "start": "310800",
    "end": "312880"
  },
  {
    "text": "method request parameter from the path",
    "start": "312880",
    "end": "315360"
  },
  {
    "text": "query string or header value given a",
    "start": "315360",
    "end": "318080"
  },
  {
    "text": "parameter",
    "start": "318080",
    "end": "319280"
  },
  {
    "text": "names string foo",
    "start": "319280",
    "end": "322639"
  },
  {
    "text": "input dot params returns the value of a",
    "start": "322639",
    "end": "324880"
  },
  {
    "text": "method request parameter from the path",
    "start": "324880",
    "end": "327360"
  },
  {
    "text": "query string or header value search in",
    "start": "327360",
    "end": "330320"
  },
  {
    "text": "that order",
    "start": "330320",
    "end": "331280"
  },
  {
    "text": "given a parameter name string foo",
    "start": "331280",
    "end": "334479"
  },
  {
    "text": "this given template will assign the",
    "start": "334479",
    "end": "336160"
  },
  {
    "text": "value returned by input.params",
    "start": "336160",
    "end": "338479"
  },
  {
    "text": "to a variable named foo which can be",
    "start": "338479",
    "end": "340639"
  },
  {
    "text": "retrieved at the backend",
    "start": "340639",
    "end": "342800"
  },
  {
    "text": "choose save deploy the api",
    "start": "342800",
    "end": "353840"
  },
  {
    "text": "non-proxy http non-proxy integration",
    "start": "359360",
    "end": "363440"
  },
  {
    "text": "this is similar to lambda non-proxy",
    "start": "363440",
    "end": "365280"
  },
  {
    "text": "integration",
    "start": "365280",
    "end": "366479"
  },
  {
    "text": "you as an api developer must configure",
    "start": "366479",
    "end": "368960"
  },
  {
    "text": "the method request to add the query",
    "start": "368960",
    "end": "370639"
  },
  {
    "text": "string parameter",
    "start": "370639",
    "end": "372080"
  },
  {
    "text": "then you update the integration request",
    "start": "372080",
    "end": "374240"
  },
  {
    "text": "to map the query string parameter from",
    "start": "374240",
    "end": "376080"
  },
  {
    "text": "the method request to the backend",
    "start": "376080",
    "end": "377759"
  },
  {
    "text": "request",
    "start": "377759",
    "end": "379120"
  },
  {
    "text": "follow these steps open the api gateway",
    "start": "379120",
    "end": "382000"
  },
  {
    "text": "management console",
    "start": "382000",
    "end": "384960"
  },
  {
    "text": "choose the api choose the resources",
    "start": "385360",
    "end": "390720"
  },
  {
    "text": "choose the configured http method in the",
    "start": "390720",
    "end": "394000"
  },
  {
    "text": "method execution pane",
    "start": "394000",
    "end": "395759"
  },
  {
    "text": "choose method request expand the url",
    "start": "395759",
    "end": "399680"
  },
  {
    "text": "query string parameters section",
    "start": "399680",
    "end": "401840"
  },
  {
    "text": "choose add query string enter the name",
    "start": "401840",
    "end": "404800"
  },
  {
    "text": "of the query string parameter",
    "start": "404800",
    "end": "406560"
  },
  {
    "text": "and then choose the check mark icon to",
    "start": "406560",
    "end": "408400"
  },
  {
    "text": "save the setting",
    "start": "408400",
    "end": "411039"
  },
  {
    "text": "go back to the method execution pane and",
    "start": "411039",
    "end": "413360"
  },
  {
    "text": "choose integration request",
    "start": "413360",
    "end": "416800"
  },
  {
    "text": "expand the url query string parameter",
    "start": "418000",
    "end": "420840"
  },
  {
    "text": "section",
    "start": "420840",
    "end": "423840"
  },
  {
    "text": "by default the method request query",
    "start": "424800",
    "end": "426720"
  },
  {
    "text": "string parameters are mapped to the like",
    "start": "426720",
    "end": "428800"
  },
  {
    "text": "name",
    "start": "428800",
    "end": "429120"
  },
  {
    "text": "integration request query string",
    "start": "429120",
    "end": "430560"
  },
  {
    "text": "parameters to map a different method",
    "start": "430560",
    "end": "432800"
  },
  {
    "text": "request parameter to the corresponding",
    "start": "432800",
    "end": "434720"
  },
  {
    "text": "integration request parameter",
    "start": "434720",
    "end": "436639"
  },
  {
    "text": "choose the pencil icon for the parameter",
    "start": "436639",
    "end": "438800"
  },
  {
    "text": "to edit the mapping expression",
    "start": "438800",
    "end": "441039"
  },
  {
    "text": "to map a method request parameter to a",
    "start": "441039",
    "end": "443039"
  },
  {
    "text": "different integration request parameter",
    "start": "443039",
    "end": "445280"
  },
  {
    "text": "first choose the delete icon to remove",
    "start": "445280",
    "end": "447440"
  },
  {
    "text": "the existing integration request",
    "start": "447440",
    "end": "448960"
  },
  {
    "text": "parameter",
    "start": "448960",
    "end": "450000"
  },
  {
    "text": "and then choose add query string to",
    "start": "450000",
    "end": "452240"
  },
  {
    "text": "specify a new name",
    "start": "452240",
    "end": "453840"
  },
  {
    "text": "and the desired method request parameter",
    "start": "453840",
    "end": "456080"
  },
  {
    "text": "mapping expression",
    "start": "456080",
    "end": "457919"
  },
  {
    "text": "now finally deploy the api",
    "start": "457919",
    "end": "465840"
  },
  {
    "text": "thanks for watching and happy cloud",
    "start": "470000",
    "end": "471520"
  },
  {
    "text": "computing from all of us here at aws",
    "start": "471520",
    "end": "479840"
  },
  {
    "text": "you",
    "start": "479840",
    "end": "481919"
  }
]