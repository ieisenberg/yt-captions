[
  {
    "text": "If you want to build\nan AI voice assistant app,",
    "start": "297",
    "end": "2671"
  },
  {
    "text": "stick around.",
    "start": "2695",
    "end": "3695"
  },
  {
    "text": "I'll show you the services that you need",
    "start": "3703",
    "end": "5691"
  },
  {
    "text": "to get your app off the ground.",
    "start": "5715",
    "end": "7925"
  },
  {
    "text": "Gaurav is a software architect\nfrom Pennsylvania, USA.",
    "start": "16495",
    "end": "19996"
  },
  {
    "text": "When he's not spending time\nwith his daughter,",
    "start": "20197",
    "end": "22105"
  },
  {
    "text": "he's thinking about building a chat bot",
    "start": "22191",
    "end": "23979"
  },
  {
    "text": "to help people better understand\ntheir medical expenses.",
    "start": "24003",
    "end": "27277"
  },
  {
    "text": "I know I personally could use\nsomething like this.",
    "start": "27502",
    "end": "29808"
  },
  {
    "text": "Let's hear from Gaurav.",
    "start": "30198",
    "end": "31706"
  },
  {
    "text": "So the problem I'm trying to solve is,",
    "start": "31909",
    "end": "33784"
  },
  {
    "text": "the insurance/health insurance plans\nin the US is pretty convoluted",
    "start": "33889",
    "end": "37138"
  },
  {
    "text": "a lot of the time the insured has to go to\nthe customer care executives,",
    "start": "37162",
    "end": "40558"
  },
  {
    "text": "or work forum to understand\ntheir plan benefits.",
    "start": "40582",
    "end": "42997"
  },
  {
    "text": "How much they'll end up paying for a given...",
    "start": "43208",
    "end": "45107"
  },
  {
    "text": "therapy, or a test, or a visit.",
    "start": "45388",
    "end": "47478"
  },
  {
    "text": "So the system that I'm trying to develop",
    "start": "47502",
    "end": "49406"
  },
  {
    "text": "will be able to tell on its own,",
    "start": "49617",
    "end": "52698"
  },
  {
    "text": "or interact with the insured on its own,",
    "start": "52807",
    "end": "55281"
  },
  {
    "text": "and answer their questions.",
    "start": "55305",
    "end": "56992"
  },
  {
    "text": "In the initial phases, it could be\nbasic questions that it could answer.",
    "start": "57289",
    "end": "60779"
  },
  {
    "text": "Whether a provider is within\nthe network reach or not.",
    "start": "60803",
    "end": "63295"
  },
  {
    "text": "And later on, as it develops,",
    "start": "63718",
    "end": "65292"
  },
  {
    "text": "it should be able to tell more and more.",
    "start": "65316",
    "end": "66999"
  },
  {
    "text": "Or, answer more and more\nquestions of the insured.",
    "start": "67108",
    "end": "69503"
  },
  {
    "text": "Now, the main focus of this video,",
    "start": "69902",
    "end": "71779"
  },
  {
    "text": "is going to be on showing you",
    "start": "71803",
    "end": "73311"
  },
  {
    "text": "the services that you need\nto build an AI Voice Assistant.",
    "start": "73498",
    "end": "76584"
  },
  {
    "text": "You're building an AI assistant\nfor healthcare,",
    "start": "76991",
    "end": "79390"
  },
  {
    "text": "and your app is for the US market,",
    "start": "79507",
    "end": "81492"
  },
  {
    "text": "then make sure you check out my video",
    "start": "81609",
    "end": "83583"
  },
  {
    "text": "on HIPAA, which I've linked to below.",
    "start": "83692",
    "end": "85989"
  },
  {
    "text": "I break down what HIPAA means\nfor building your app in AWS.",
    "start": "86200",
    "end": "90095"
  },
  {
    "text": "Let's dive in.",
    "start": "90307",
    "end": "92009"
  },
  {
    "text": "In Gaurav's case,",
    "start": "92393",
    "end": "93509"
  },
  {
    "text": "he's going to have to search through\nall the patient's medical records,",
    "start": "93611",
    "end": "96768"
  },
  {
    "text": "as well as insurance information",
    "start": "96792",
    "end": "98700"
  },
  {
    "text": "in order to answer a user's question.",
    "start": "98724",
    "end": "101198"
  },
  {
    "text": "He'll store the medical records\nand insurance documents in Amazon S3.",
    "start": "101594",
    "end": "106189"
  },
  {
    "text": "S3 is your go to service,",
    "start": "108084",
    "end": "110487"
  },
  {
    "text": "for scalable object storage in the cloud.",
    "start": "110511",
    "end": "113503"
  },
  {
    "text": "Once the data is in S3,",
    "start": "113902",
    "end": "115495"
  },
  {
    "text": "an AWS Lambda function will be triggered",
    "start": "115605",
    "end": "118402"
  },
  {
    "text": "to call the Amazon Comprehend Medical API.",
    "start": "118496",
    "end": "121887"
  },
  {
    "text": "Lambda allows you to run code\nwithout having to manage servers.",
    "start": "122496",
    "end": "126001"
  },
  {
    "text": "Lambda functions\ncan be triggered based on events.",
    "start": "126313",
    "end": "128959"
  },
  {
    "text": "So in this case, putting data into S3,",
    "start": "128983",
    "end": "131704"
  },
  {
    "text": "triggers the Lambda function to run.",
    "start": "131899",
    "end": "133884"
  },
  {
    "text": "Comprehend Medical is a service\nthat uses machine learning",
    "start": "134290",
    "end": "137474"
  },
  {
    "text": "to extract health data from medical text.",
    "start": "137498",
    "end": "140105"
  },
  {
    "text": "Don't worry.",
    "start": "140130",
    "end": "141111"
  },
  {
    "text": "You don't need machine learning\nexpertise to use the service.",
    "start": "141135",
    "end": "144008"
  },
  {
    "text": "If you need to extract data from documents\nor text, but not from medical documents.",
    "start": "144493",
    "end": "149608"
  },
  {
    "text": "Then you can use Amazon Comprehend.",
    "start": "149788",
    "end": "151902"
  },
  {
    "text": "When the Lambda function\ncalls the Comprehend Medical API,",
    "start": "152397",
    "end": "155901"
  },
  {
    "text": "it will return JSON with information\nthat's in the document.",
    "start": "155994",
    "end": "159598"
  },
  {
    "text": "This JSON will be stored in\nAmazon DynamoDB.",
    "start": "159895",
    "end": "163304"
  },
  {
    "text": "DynamoDB is a fast\nand scalable NoSQL database.",
    "start": "164398",
    "end": "168088"
  },
  {
    "text": "If you don't have any files\nlike PDF files to parse,",
    "start": "168292",
    "end": "171312"
  },
  {
    "text": "then you can skip the S3 step.",
    "start": "171398",
    "end": "173215"
  },
  {
    "text": "You would just call the Comprehend API",
    "start": "173501",
    "end": "175981"
  },
  {
    "text": "and pass in your string of text\nto be processed.",
    "start": "176005",
    "end": "178886"
  },
  {
    "text": "Then, you would store\nthe results in DynamoDB.",
    "start": "179495",
    "end": "183101"
  },
  {
    "text": "All the data that is related\nto the user like,",
    "start": "183593",
    "end": "186168"
  },
  {
    "text": "like, date of birth address\nand a medical history,",
    "start": "186192",
    "end": "189601"
  },
  {
    "text": "will be stored at Amazon Aurora.",
    "start": "189694",
    "end": "191999"
  },
  {
    "text": "Aurora is a MySQL and Postgres\ncompatible, relational database",
    "start": "192702",
    "end": "197213"
  },
  {
    "text": "built for the cloud.",
    "start": "197402",
    "end": "198795"
  },
  {
    "text": "Now that you have your data stored,",
    "start": "199411",
    "end": "201092"
  },
  {
    "text": "it's time to build the Voice Assistant.",
    "start": "201194",
    "end": "203502"
  },
  {
    "text": "Since Gaurav wants to allow his users\nto call in to talk to the AI Bot,",
    "start": "203706",
    "end": "208092"
  },
  {
    "text": "he will use Amazon Lex\nwith Amazon Connect.",
    "start": "208390",
    "end": "211795"
  },
  {
    "text": "Lex, enables you to build\nconversational chat bots.",
    "start": "212308",
    "end": "215694"
  },
  {
    "text": "Connect, is an easy to use\ncloud contact center,",
    "start": "215906",
    "end": "218778"
  },
  {
    "text": "that you can set up in minutes.",
    "start": "218802",
    "end": "220590"
  },
  {
    "text": "You can bring your own phone number,",
    "start": "221012",
    "end": "222480"
  },
  {
    "text": "or get a toll-free number\nthrough Amazon Connect.",
    "start": "222504",
    "end": "225203"
  },
  {
    "text": "You can associate your\nAmazon Connect instance",
    "start": "225789",
    "end": "228594"
  },
  {
    "text": "to a Lex bot in the Amazon Connect API.",
    "start": "228704",
    "end": "231690"
  },
  {
    "text": "Amazon Connect will translate\nverbal request to text,",
    "start": "231997",
    "end": "235174"
  },
  {
    "text": "so they can be processed by Lex.",
    "start": "235199",
    "end": "237293"
  },
  {
    "text": "When a user calls in,",
    "start": "237591",
    "end": "238802"
  },
  {
    "text": "Lex will use Lambda\nto look up the users account",
    "start": "238903",
    "end": "241789"
  },
  {
    "text": "based on their phone number in Aurora.",
    "start": "241891",
    "end": "244000"
  },
  {
    "text": "Once the account is found,",
    "start": "244401",
    "end": "245759"
  },
  {
    "text": "the user will be prompted to verify\nhis or her health plan subscriber number",
    "start": "245783",
    "end": "249608"
  },
  {
    "text": "and a zip code.",
    "start": "249710",
    "end": "250811"
  },
  {
    "text": "After the users identity is verified,",
    "start": "250991",
    "end": "253187"
  },
  {
    "text": "the user will start to engage\nwith the Voice Assistant.",
    "start": "253211",
    "end": "255714"
  },
  {
    "text": "If you don't need your users\nto call in to talk to a Voice Assistant,",
    "start": "256503",
    "end": "260092"
  },
  {
    "text": "then you can omit Connect\nfrom your architecture",
    "start": "260195",
    "end": "262480"
  },
  {
    "text": "and just create\na text-only chat bot using Lex.",
    "start": "262504",
    "end": "265690"
  },
  {
    "text": "The best way to think about\ncreating a chat bot with Lex,",
    "start": "266089",
    "end": "269371"
  },
  {
    "text": "is you want to define",
    "start": "269395",
    "end": "270996"
  },
  {
    "text": "as many scenarios of what a user could say",
    "start": "271098",
    "end": "274214"
  },
  {
    "text": "and match them to what\na user would want to happen.",
    "start": "274392",
    "end": "277509"
  },
  {
    "text": "These scenarios are\nreferred to as 'utterances'.",
    "start": "277901",
    "end": "280697"
  },
  {
    "text": "And the objectives that a user\nmight be trying to accomplish",
    "start": "280807",
    "end": "283998"
  },
  {
    "text": "are called 'intents'.",
    "start": "284107",
    "end": "285798"
  },
  {
    "text": "In the documentation.",
    "start": "285901",
    "end": "287303"
  },
  {
    "text": "The keywords of an utterance\nare referred to as slots.",
    "start": "287600",
    "end": "291593"
  },
  {
    "text": "Let's say someone asked,",
    "start": "291898",
    "end": "293603"
  },
  {
    "text": "\"Does my insurance cover acupuncture?\"",
    "start": "293689",
    "end": "296291"
  },
  {
    "text": "The intent is that someone wants to know",
    "start": "296510",
    "end": "298741"
  },
  {
    "text": "if certain procedure\nis covered by their insurance.",
    "start": "298765",
    "end": "301303"
  },
  {
    "text": "The utterance would be,\n\"Does my insurance cover?\"",
    "start": "301600",
    "end": "304909"
  },
  {
    "text": "The slot would be the procedure.",
    "start": "305401",
    "end": "307213"
  },
  {
    "text": "Lex will use Lambda to query data,",
    "start": "307588",
    "end": "309867"
  },
  {
    "text": "and DynamoDB to fetch information\nabout their insurance coverage.",
    "start": "309891",
    "end": "314007"
  },
  {
    "text": "Without them having to\nwait on pins and needles.",
    "start": "314203",
    "end": "316686"
  },
  {
    "text": "Now, there will probably be cases,",
    "start": "316890",
    "end": "318466"
  },
  {
    "text": "when the user is going\nto ask a question like,",
    "start": "318490",
    "end": "321496"
  },
  {
    "text": "Did I pick the right health insurance plan?",
    "start": "321691",
    "end": "324104"
  },
  {
    "text": "The response from Lex\nwill return a confidence score",
    "start": "324604",
    "end": "327381"
  },
  {
    "text": "for the intent.",
    "start": "327405",
    "end": "328405"
  },
  {
    "text": "Alternative intents.",
    "start": "328495",
    "end": "329918"
  },
  {
    "text": "And a confidence score\nfor each alternative intent.",
    "start": "330090",
    "end": "332999"
  },
  {
    "text": "This is useful in scenarios\nwhere the intent",
    "start": "333291",
    "end": "335164"
  },
  {
    "text": "with the highest confidence score is not\nfar off from the alternative intent.",
    "start": "335189",
    "end": "339198"
  },
  {
    "text": "Instead of your AI Bots\nreturning a snarky comment like,",
    "start": "339494",
    "end": "342616"
  },
  {
    "text": "How would I know?\nI'm just a bot.",
    "start": "342812",
    "end": "344601"
  },
  {
    "text": "You can use your domain knowledge",
    "start": "344796",
    "end": "346582"
  },
  {
    "text": "to select the right intent to return\nfrom the list of alternative intents.",
    "start": "346607",
    "end": "351005"
  },
  {
    "text": "If you're starting the conversation\nwith your users from a Lex bot,",
    "start": "351092",
    "end": "354899"
  },
  {
    "text": "you could design your bot\nin a way that if the user",
    "start": "355089",
    "end": "357873"
  },
  {
    "text": "is unable to get their question\nanswered in two attempts,",
    "start": "357897",
    "end": "361001"
  },
  {
    "text": "then connect the person to an agent.",
    "start": "361103",
    "end": "363189"
  },
  {
    "text": "In this scenario,",
    "start": "363580",
    "end": "364580"
  },
  {
    "text": "Lex would trigger a Lambda function",
    "start": "364604",
    "end": "366598"
  },
  {
    "text": "to invoke the Connect API\nto call an agent.",
    "start": "366700",
    "end": "369703"
  },
  {
    "text": "My guess,",
    "start": "369910",
    "end": "370910"
  },
  {
    "text": "is that you're going to want\nto analyze the conversation history.",
    "start": "371004",
    "end": "374207"
  },
  {
    "text": "You can stream\nthe chat bot conversation log",
    "start": "374493",
    "end": "376968"
  },
  {
    "text": "to a feature of Amazon CloudWatch called,",
    "start": "376992",
    "end": "379796"
  },
  {
    "text": "CloudWatch Logs.",
    "start": "379884",
    "end": "381798"
  },
  {
    "text": "CloudWatch is a monitoring service\nfor AWS Cloud resources",
    "start": "383302",
    "end": "387095"
  },
  {
    "text": "and the applications you've run on AWS.",
    "start": "387198",
    "end": "389705"
  },
  {
    "text": "You can use a sub feature\nof CloudWatch Logs called,",
    "start": "389992",
    "end": "392989"
  },
  {
    "text": "CloudWatch Logs Insights,",
    "start": "393014",
    "end": "394903"
  },
  {
    "text": "to interactively search and analyze\nyour log data in CloudWatch Logs.",
    "start": "394997",
    "end": "399691"
  },
  {
    "text": "Once the chat history\nis in CloudWatch Logs,",
    "start": "400004",
    "end": "402402"
  },
  {
    "text": "You can run queries\nin CloudWatch Logs Insights,",
    "start": "402504",
    "end": "405695"
  },
  {
    "text": "and build dashboards.",
    "start": "405905",
    "end": "407612"
  },
  {
    "text": "Using Gaurav's app as an example.",
    "start": "408002",
    "end": "410002"
  },
  {
    "text": "He could create a chart\nof the top utilized intents.",
    "start": "410096",
    "end": "412897"
  },
  {
    "text": "And a rank ordered list of the users,\nthat talk to the bot most frequently.",
    "start": "412983",
    "end": "416998"
  },
  {
    "text": "If you have agents talking to\nyour users over the phone,",
    "start": "417701",
    "end": "420503"
  },
  {
    "text": "then you can have Connect\nstore the call recording in S3.",
    "start": "420601",
    "end": "424604"
  },
  {
    "text": "Then a Lambda function would create\nan Amazon Transcribe Call Analytics job,",
    "start": "424893",
    "end": "430092"
  },
  {
    "text": "to transcribe and analyze the call.",
    "start": "430117",
    "end": "432795"
  },
  {
    "text": "Transcribe Helps you automatically\nconvert speech-to-text.",
    "start": "433491",
    "end": "437294"
  },
  {
    "text": "Transcribe Call Analytics,",
    "start": "437489",
    "end": "439379"
  },
  {
    "text": "is a feature of Transcribe,",
    "start": "439403",
    "end": "441099"
  },
  {
    "text": "that makes it easier to\nunderstand calls with your customers.",
    "start": "441192",
    "end": "444694"
  },
  {
    "text": "I know I covered a lot.",
    "start": "444907",
    "end": "446498"
  },
  {
    "text": "So it's time for a recap.",
    "start": "446607",
    "end": "448498"
  },
  {
    "text": "Use Amazon Comprehend Medical,",
    "start": "448802",
    "end": "450681"
  },
  {
    "text": "to extract key entities\nfrom medical documents,",
    "start": "450705",
    "end": "453410"
  },
  {
    "text": "or Amazon Comprehend\nfor non-medical use cases.",
    "start": "453494",
    "end": "456599"
  },
  {
    "text": "Need agents to talk to your customers?",
    "start": "456811",
    "end": "458768"
  },
  {
    "text": "Use Amazon Connect.",
    "start": "458792",
    "end": "460206"
  },
  {
    "text": "Build an AI chat bot with Amazon Lex.",
    "start": "460495",
    "end": "462999"
  },
  {
    "text": "Store the chat bot history\nin Amazon DynamoDB.",
    "start": "463194",
    "end": "466202"
  },
  {
    "text": "Store user information in Amazon Aurora.",
    "start": "466397",
    "end": "469003"
  },
  {
    "text": "Analyze conversations\nwith the chat bots in Amazon CloudWatch.",
    "start": "469605",
    "end": "473218"
  },
  {
    "text": "Analyze calls\nwith Amazon Transcribe Call Analytics.",
    "start": "473398",
    "end": "477018"
  },
  {
    "text": "An apple a day keeps the doctor away.",
    "start": "477301",
    "end": "479709"
  },
  {
    "text": "That's what you need to build an AI Bot,",
    "start": "479889",
    "end": "482994"
  },
  {
    "text": "without needing to know the AI.",
    "start": "483103",
    "end": "485193"
  },
  {
    "text": "Make sure you check out the links\nat the bottom of this video",
    "start": "485307",
    "end": "488881"
  },
  {
    "text": "to help you get started.",
    "start": "488905",
    "end": "490189"
  },
  {
    "text": "It doesn't matter when you start,\nas long as you just get started.",
    "start": "490307",
    "end": "493493"
  },
  {
    "text": "Thanks for hanging out with me.",
    "start": "493607",
    "end": "494880"
  },
  {
    "text": "See you soon.",
    "start": "494904",
    "end": "495972"
  }
]