[
  {
    "text": "Welcome to another episode \nof 'Back to Basics'.",
    "start": "5810",
    "end": "8412"
  },
  {
    "text": "I'm Chloe, a Product Manager\n for AWS AppConfig.",
    "start": "8412",
    "end": "11806"
  },
  {
    "text": "Today we will talk about Feature Flags \nand how they can help you tune your application",
    "start": "12170",
    "end": "16639"
  },
  {
    "text": "at runtime without needing\n to restart or redeploy your code. ",
    "start": "16639",
    "end": "20480"
  },
  {
    "text": "Thousands of teams at Amazon \nhave used AppConfig internally for years.",
    "start": "21190",
    "end": "25353"
  },
  {
    "text": "We've taken our learnings\n from those experiences ",
    "start": "25619",
    "end": "28355"
  },
  {
    "text": "and built them into the service offered today.",
    "start": "28355",
    "end": "30652"
  },
  {
    "text": "Let's first start out by understanding\n what Feature Flags are,",
    "start": "31371",
    "end": "34477"
  },
  {
    "text": "and why they're so important to creating\n a successful development process.",
    "start": "34477",
    "end": "38583"
  },
  {
    "text": "A Feature Flag refers\n to a modern software strategy",
    "start": "39435",
    "end": "42665"
  },
  {
    "text": "where you can enable or disable\n certain features without re-deploying your code.",
    "start": "42665",
    "end": "47332"
  },
  {
    "text": "With Feature Flags, you can separate \nfeature releases from code deployment,",
    "start": "48344",
    "end": "52498"
  },
  {
    "text": "build effective strategies for rolling things out,",
    "start": "52498",
    "end": "55451"
  },
  {
    "text": "and have strong insight into how changes\n impact your application performance.",
    "start": "55451",
    "end": "60444"
  },
  {
    "text": "There are different use cases and types \nof feature flags, depending on the need.",
    "start": "60771",
    "end": "64500"
  },
  {
    "text": "Today, we're going to focus \non the example of a release flag,",
    "start": "64757",
    "end": "67812"
  },
  {
    "text": "which is used to rule out\n a new feature of an application.",
    "start": "67812",
    "end": "71231"
  },
  {
    "text": "A team of engineers can code a feature,",
    "start": "71923",
    "end": "74397"
  },
  {
    "text": "deploy it while the feature \nis hidden behind a feature flag,",
    "start": "74591",
    "end": "77558"
  },
  {
    "text": "and gradually make the feature \navailable for all users.",
    "start": "77737",
    "end": "81151"
  },
  {
    "text": "You can do all of this while also monitoring\n your application's health",
    "start": "81351",
    "end": "85445"
  },
  {
    "text": "and understanding how users are engaging\n or responding to the new feature. ",
    "start": "85445",
    "end": "90248"
  },
  {
    "text": "As you can see here, this feature\n is released gradually",
    "start": "90663",
    "end": "93653"
  },
  {
    "text": "so that you can limit the negative impact \nof any unintended outcomes. ",
    "start": "93872",
    "end": "97986"
  },
  {
    "text": "There are three different groups shown, \nand the feature is being released gradually to all three. ",
    "start": "99058",
    "end": "103294"
  },
  {
    "text": "This strategy also enables you \nto analyze the feature release.",
    "start": "103850",
    "end": "107390"
  },
  {
    "text": "How is this feature affecting your app \noperationally and reputationally? ",
    "start": "107615",
    "end": "111897"
  },
  {
    "text": "What if you need a kill switch\n to turn the feature off quickly?",
    "start": "112424",
    "end": "115462"
  },
  {
    "text": "This gradual deployment method is recommended\n by AWS as a best practice,",
    "start": "115909",
    "end": "120736"
  },
  {
    "text": "so you can answer these key questions.",
    "start": "120736",
    "end": "123574"
  },
  {
    "text": "And once you know \nthat the feature is safe to release,",
    "start": "123874",
    "end": "126589"
  },
  {
    "text": "it can be turned on to all groups.",
    "start": "126589",
    "end": "129164"
  },
  {
    "text": "Now that you understand more about what Feature Flags are\n and why they're so important,",
    "start": "130802",
    "end": "134916"
  },
  {
    "text": "let's talk about AppConfig\nand some of the best practices to be aware of.",
    "start": "135233",
    "end": "138978"
  },
  {
    "text": "With AppConfig Feature Flags you can either \ndeploy a single flag at a time,",
    "start": "139447",
    "end": "143815"
  },
  {
    "text": "or centrally manage and deploy \nmultiple flags together.",
    "start": "144242",
    "end": "147424"
  },
  {
    "text": "The Feature Flag data\n lives within AppConfig,",
    "start": "147904",
    "end": "150737"
  },
  {
    "text": "and your application can dynamically \nfetch the data throughout run time.",
    "start": "150898",
    "end": "154890"
  },
  {
    "text": "As shown here, let's say\n you have a web application. ",
    "start": "155529",
    "end": "158527"
  },
  {
    "text": "Your application will dynamically\n retrieve information from AppConfig",
    "start": "158968",
    "end": "163000"
  },
  {
    "text": "and the Feature Flags will be created \nand fetched from AWS AppConfig.",
    "start": "163175",
    "end": "167274"
  },
  {
    "text": "So how this works is, first the application\n gets the configuration data from AppConfig.",
    "start": "168082",
    "end": "173383"
  },
  {
    "text": "Next, the configuration data is fetched\n from AppConfig to the application.",
    "start": "173892",
    "end": "178096"
  },
  {
    "text": "Now the application \nwill show the feature or not,",
    "start": "178725",
    "end": "181680"
  },
  {
    "text": "based on if the Feature Flag\n is on or not.",
    "start": "182027",
    "end": "184243"
  },
  {
    "text": "But be careful, releasing a new feature\n without safety controls",
    "start": "184674",
    "end": "188584"
  },
  {
    "text": "can be similar to pushing\n untested code to production.",
    "start": "188584",
    "end": "191770"
  },
  {
    "text": "And that's why we have so many guardrails\n that are built into the service. ",
    "start": "192425",
    "end": "196021"
  },
  {
    "text": "First, AppConfig allows you to set validators,",
    "start": "196292",
    "end": "199039"
  },
  {
    "text": "and constraints for each flag.",
    "start": "199039",
    "end": "200953"
  },
  {
    "text": "If a flag's data is non-boolean\nso for example, a number",
    "start": "201502",
    "end": "205347"
  },
  {
    "text": "you can set an optional minimum \nor maximum value ",
    "start": "205715",
    "end": "208760"
  },
  {
    "text": "for that number to ensure that some accidental\n flag value does not cause a problem ",
    "start": "209107",
    "end": "213700"
  },
  {
    "text": "or even an outage in production.",
    "start": "214114",
    "end": "216285"
  },
  {
    "text": "As I mentioned earlier, \nyou can also release your flags gradually ",
    "start": "216858",
    "end": "220382"
  },
  {
    "text": "by setting a deployment strategy\n for your flag updates.",
    "start": "220382",
    "end": "223752"
  },
  {
    "text": "Flag updates can be rolled out \nover the course of hours,",
    "start": "224229",
    "end": "227485"
  },
  {
    "text": "limiting the negative impact \nof any unexpected change. ",
    "start": "227796",
    "end": "231077"
  },
  {
    "text": "Finally, if something goes wrong, \nwhich sometimes it does,",
    "start": "231640",
    "end": "234887"
  },
  {
    "text": "AppConfig will automatically roll back \nany Feature Flag update",
    "start": "235234",
    "end": "238832"
  },
  {
    "text": "if a CloudWatch alarm is triggered.",
    "start": "238977",
    "end": "241104"
  },
  {
    "text": "Now let's take a look at an end-to-end architecture\n that leverages Feature Flags.",
    "start": "241104",
    "end": "245625"
  },
  {
    "text": "To illustrate this architecture,\nI'll use an example",
    "start": "245955",
    "end": "248853"
  },
  {
    "text": "where you're running a concert ticket \nmarketplace website.",
    "start": "248853",
    "end": "252028"
  },
  {
    "text": "Your team is introducing a new feature\n to the website that lets viewers preview",
    "start": "252674",
    "end": "257203"
  },
  {
    "text": "10 seconds of a song for a given concert.",
    "start": "257203",
    "end": "259915"
  },
  {
    "text": "This feature's awesome but as a best practice, \nyou want to introduce it gradually and safely.",
    "start": "260203",
    "end": "265281"
  },
  {
    "text": "Especially since adding music could potentially\n affect the performance of your website. ",
    "start": "265976",
    "end": "270475"
  },
  {
    "text": "First, your engineers build the feature,\n but hide it behind a flag",
    "start": "271176",
    "end": "274787"
  },
  {
    "text": "in AppConfig so that no users can access it.",
    "start": "274787",
    "end": "278093"
  },
  {
    "text": "As you can see in this diagram, the feature \nhas been created, but is not turned on.",
    "start": "278607",
    "end": "283235"
  },
  {
    "text": "This could be as simple as a true \nor false boolean expression.",
    "start": "283696",
    "end": "287203"
  },
  {
    "text": "So leading up to the launch\n because you have a Feature Flag,",
    "start": "288093",
    "end": "291305"
  },
  {
    "text": "your code is deployed to production, \nbut no one can access it ",
    "start": "291699",
    "end": "294874"
  },
  {
    "text": "since it's hidden behind a Feature Flag.",
    "start": "294874",
    "end": "297285"
  },
  {
    "text": "In this next scenario, you gradually release\n the music preview feature.",
    "start": "297772",
    "end": "302079"
  },
  {
    "text": "Some of your users will slowly\n get to access ",
    "start": "302761",
    "end": "305223"
  },
  {
    "text": "the new music feature \nas shown in this example.",
    "start": "305223",
    "end": "308030"
  },
  {
    "text": "Now, since the Feature Flag is toggled on,",
    "start": "308742",
    "end": "311844"
  },
  {
    "text": "when the application goes \nto fetch data from AppConfig,",
    "start": "311844",
    "end": "314999"
  },
  {
    "text": "the configuration data will indicate \n'true' or 'on' to your application.",
    "start": "314999",
    "end": "319573"
  },
  {
    "text": "And this can all be done without pushing \nany new code to production ",
    "start": "320059",
    "end": "323505"
  },
  {
    "text": "or restarting your application.",
    "start": "323505",
    "end": "325643"
  },
  {
    "text": "And since only some users\n are being exposed to the new feature,",
    "start": "326080",
    "end": "329413"
  },
  {
    "text": "your team can measure \nhow their engagement is,",
    "start": "329744",
    "end": "332154"
  },
  {
    "text": "or how the performance\n of your website is impacted.",
    "start": "332451",
    "end": "335349"
  },
  {
    "text": "So let's say the feature's actually affecting \nyour website's performance negatively.",
    "start": "335986",
    "end": "340039"
  },
  {
    "text": "You may want a kill switch, \nand AppConfig lets you do that.",
    "start": "340341",
    "end": "343772"
  },
  {
    "text": "I just showed you \nthe life cycle of Feature Flags,",
    "start": "344624",
    "end": "347518"
  },
  {
    "text": "but this pattern doesn't just apply\n to a small part of software development.",
    "start": "347720",
    "end": "351538"
  },
  {
    "text": "You can use Feature Flags \nacross various AWS use cases",
    "start": "351904",
    "end": "355632"
  },
  {
    "text": "like AWS Lambda, ECS, and EC2",
    "start": "355970",
    "end": "359593"
  },
  {
    "text": "which just shows you \nhow versatile Feature Flags are.",
    "start": "359593",
    "end": "362854"
  },
  {
    "text": "In this episode, we explored \nhow AppConfig Feature Flags",
    "start": "363740",
    "end": "367173"
  },
  {
    "text": "let you safely release new features\n to your production environment.",
    "start": "367174",
    "end": "371239"
  },
  {
    "text": "You can use Feature Flags \nto gradually deploy features",
    "start": "371720",
    "end": "375109"
  },
  {
    "text": "while monitoring \nthe impact on your application.",
    "start": "375109",
    "end": "378029"
  },
  {
    "text": "And by doing this, you can really \nfocus more on innovating faster.",
    "start": "378029",
    "end": "382202"
  },
  {
    "text": "Check out the links below \nfor more details, see you next time.",
    "start": "382643",
    "end": "386289"
  }
]