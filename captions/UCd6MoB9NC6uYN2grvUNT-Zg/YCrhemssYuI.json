[
  {
    "start": "0",
    "end": "17000"
  },
  {
    "text": "all right thank you thank you for coming i am ken exner the director of developer tools in aws",
    "start": "960",
    "end": "7279"
  },
  {
    "text": "and this is transforming software development uh it's a bit of an ambitious title i know um",
    "start": "7279",
    "end": "13679"
  },
  {
    "text": "hopefully i can make good on this uh all right so a couple years ago uh we",
    "start": "13679",
    "end": "21039"
  },
  {
    "text": "were out talking to customers potential customers of aws uh people who were looking to move to",
    "start": "21039",
    "end": "26240"
  },
  {
    "text": "ec2 and s3 and we started noticing a pattern emerge these customers would tell us you know we're totally bought in",
    "start": "26240",
    "end": "32719"
  },
  {
    "text": "on the cloud you know you don't need to sell us on s3 and ec2 but we want to hear about is what do you guys do",
    "start": "32719",
    "end": "38160"
  },
  {
    "text": "internally inside of amazon what tools and software what tools and software development processes do you guys follow",
    "start": "38160",
    "end": "44719"
  },
  {
    "text": "these customers were in the process of moving to agile processes or moving to devops moving to the cloud",
    "start": "44719",
    "end": "51280"
  },
  {
    "text": "and they had heard that amazon was famously a devops oriented culture that we were known for our agility you know you see",
    "start": "51280",
    "end": "57520"
  },
  {
    "text": "these feature releases that we do every year we do hundreds of feature releases and customers wanted to know",
    "start": "57520",
    "end": "63039"
  },
  {
    "text": "how do you do that like what does amazon amazon do inside allows us to be so agile",
    "start": "63039",
    "end": "69600"
  },
  {
    "text": "so in this talk i'm going to answer some of those questions i'm going to talk about",
    "start": "69600",
    "end": "76000"
  },
  {
    "start": "71000",
    "end": "136000"
  },
  {
    "text": "uh the the transformation that amazon made itself over the last 15 years to a devops oriented culture we didn't always",
    "start": "76000",
    "end": "82640"
  },
  {
    "text": "start off that way so we started off you know different processes different uh a different model",
    "start": "82640",
    "end": "87759"
  },
  {
    "text": "of software development and software delivery but over the last 15 years we transformed to being very agile devops",
    "start": "87759",
    "end": "94000"
  },
  {
    "text": "oriented culture and i'm going to tell you that story i'm going to tell you about the things that changed inside of amazon over those 15 years",
    "start": "94000",
    "end": "100640"
  },
  {
    "text": "and also the tools that emerged to support that so we had to develop a lot of new tools inside of amazon to support these new",
    "start": "100640",
    "end": "106799"
  },
  {
    "text": "processes and i'm going to talk about not only how we develop these tools but how we're now making them available to you our customers",
    "start": "106799",
    "end": "113280"
  },
  {
    "text": "in the form of aws code deploy aws code pipeline and aws code commit these are",
    "start": "113280",
    "end": "119040"
  },
  {
    "text": "three new products that we recently announced or pre-announced that are based on or inspired by our internal",
    "start": "119040",
    "end": "124799"
  },
  {
    "text": "tools things that we've been using for the last 12 15 years and have been improving on over that time",
    "start": "124799",
    "end": "131200"
  },
  {
    "text": "at the end if there's a bit of time i can do some q a off to the side but let's go ahead and get going",
    "start": "131200",
    "end": "137680"
  },
  {
    "start": "136000",
    "end": "150000"
  },
  {
    "text": "and take a look back in time go through the the journey the amazon made to a",
    "start": "137680",
    "end": "142879"
  },
  {
    "text": "devops oriented culture so if we go back 14 15 years",
    "start": "142879",
    "end": "148640"
  },
  {
    "text": "let's say literally to 2001 back in 2001",
    "start": "148640",
    "end": "154720"
  },
  {
    "start": "150000",
    "end": "216000"
  },
  {
    "text": "amazon was this is amazon.com this is before aws the retail site amazon.com",
    "start": "154720",
    "end": "160319"
  },
  {
    "text": "was a monolithic architecture it was an interior architecture but it was basically one big monolith",
    "start": "160319",
    "end": "165760"
  },
  {
    "text": "what that meant is that it was one code base that everyone was you know collaborating away at and we were deploying it as a single unit",
    "start": "165760",
    "end": "172560"
  },
  {
    "text": "so it was a monolithic architecture that was deployed as a single unit and as typically happens when you have this",
    "start": "172560",
    "end": "178319"
  },
  {
    "text": "kind of architecture a monolithic architecture it didn't scale it start we started to slow down we",
    "start": "178319",
    "end": "183760"
  },
  {
    "text": "started having bottlenecks uh every time we wanted to release software we had to you know do all kinds of regression it",
    "start": "183760",
    "end": "190000"
  },
  {
    "text": "became a bit overwhelming we couldn't we couldn't continue doing this architecture because",
    "start": "190000",
    "end": "195519"
  },
  {
    "text": "it was slowing us down so something had to change we realized we had to change",
    "start": "195519",
    "end": "200640"
  },
  {
    "text": "our architecture we had to change how we organized around that architecture and we also had to change some of the cultural aspects about how we how we",
    "start": "200640",
    "end": "207120"
  },
  {
    "text": "dealt with our software development so two fundamental changes happened one was an architectural change and one was",
    "start": "207120",
    "end": "213120"
  },
  {
    "text": "an organizational and cultural change the first the architectural change",
    "start": "213120",
    "end": "218879"
  },
  {
    "start": "216000",
    "end": "306000"
  },
  {
    "text": "is we literally exploded the monolith and turned it into a service oriented architecture so",
    "start": "218879",
    "end": "225040"
  },
  {
    "text": "we moved towards a service-oriented architecture where everything was turned into a service and every service had an",
    "start": "225040",
    "end": "230319"
  },
  {
    "text": "interface and these services communicated with each other over these interfaces uh and if you look at this picture this",
    "start": "230319",
    "end": "236480"
  },
  {
    "text": "is actually a a depiction that someone did inside of amazon of what amazon looked like after this explosion into",
    "start": "236480",
    "end": "243120"
  },
  {
    "text": "these services this depicts each of the little rectangles here the blue and pink rectangles depicts one of these services",
    "start": "243120",
    "end": "251120"
  },
  {
    "text": "communicating with all the other services over these interfaces so we moved to the service oriented",
    "start": "251120",
    "end": "256239"
  },
  {
    "text": "architecture from this monolithic architecture and one of the tenets that we had was that every service had to be",
    "start": "256239",
    "end": "262400"
  },
  {
    "text": "small had to be small focused and simple we called this architecture primitives",
    "start": "262400",
    "end": "267919"
  },
  {
    "text": "we wanted we were moving away from this monolithic large structure so we went kind of the opposite direction everything became a primitive meaning",
    "start": "267919",
    "end": "274880"
  },
  {
    "text": "that it had to be small simple and focused um so we had we had primitives for",
    "start": "274880",
    "end": "280000"
  },
  {
    "text": "everything we had a primitive for tax calculation on the website we had a primitive for how to display the buy",
    "start": "280000",
    "end": "286160"
  },
  {
    "text": "button on a detail page everything became a primitive today i guess we would call this a micro",
    "start": "286160",
    "end": "291680"
  },
  {
    "text": "services style architecture but we called it primitives it was a service oriented architecture where we had these primitives that were doing very focused",
    "start": "291680",
    "end": "298960"
  },
  {
    "text": "simple things so that was the the architectural change that we made",
    "start": "298960",
    "end": "304320"
  },
  {
    "text": "the other change that we made was an organizational uh or cultural change",
    "start": "304320",
    "end": "309360"
  },
  {
    "start": "306000",
    "end": "413000"
  },
  {
    "text": "we were moving towards agile processes and as part of that we decentralized the organization",
    "start": "309360",
    "end": "315280"
  },
  {
    "text": "um we turned uh you know what used to be one sort of big development team into a bunch of small teams",
    "start": "315280",
    "end": "321120"
  },
  {
    "text": "we called these literally uh two pizza teams and this was simply a clever way of describing uh the fact that we wanted",
    "start": "321120",
    "end": "327440"
  },
  {
    "text": "these teams to be small the rule of thumb was that the team had to be no bigger than could be fed by two",
    "start": "327440",
    "end": "332880"
  },
  {
    "text": "pizzas which i was told meant eight or ten people but i i don't know how eight or",
    "start": "332880",
    "end": "338479"
  },
  {
    "text": "ten people can eat two pizzas but these were you know lean teams that had to be small",
    "start": "338479",
    "end": "344080"
  },
  {
    "text": "and beyond just being small they had to have end to end ownership so they had to own development and",
    "start": "344080",
    "end": "350400"
  },
  {
    "text": "operations testing product management all aspects of developing and owning one",
    "start": "350400",
    "end": "356160"
  },
  {
    "text": "of these services so we created these small autonomous accountable teams that own development",
    "start": "356160",
    "end": "362639"
  },
  {
    "text": "and operations and everything else and we didn't realize we were sort of moving towards this devops philosophy",
    "start": "362639",
    "end": "368479"
  },
  {
    "text": "but that's essentially what was happening uh by creating teams small autonomous teams that had ownership of",
    "start": "368479",
    "end": "373840"
  },
  {
    "text": "development and operations not separate teams for development not separate teams for operations but uh you know single",
    "start": "373840",
    "end": "379280"
  },
  {
    "text": "teams that own development and operations we were moving towards devops and we were also preserving our startup",
    "start": "379280",
    "end": "386160"
  },
  {
    "text": "heritage uh amazon essentially became a company of hundreds and thousands of little",
    "start": "386160",
    "end": "391680"
  },
  {
    "text": "startups under underneath one umbrella so we could move with the agility of a hundred or thousands of little startups",
    "start": "391680",
    "end": "399840"
  },
  {
    "text": "all right so once we made the architectural change to moving towards the service oriented architecture and we made the the cultural or organizational",
    "start": "399840",
    "end": "406880"
  },
  {
    "text": "change of decentralizing and moving towards these small two pizza teams",
    "start": "406880",
    "end": "413600"
  },
  {
    "start": "413000",
    "end": "491000"
  },
  {
    "text": "we then realized we needed new tools a lot of the ways that we had previously deployed and released software didn't",
    "start": "413600",
    "end": "419599"
  },
  {
    "text": "work anymore we actually used to literally have a centralized deployment team that handled all deployments inside of amazon",
    "start": "419599",
    "end": "426800"
  },
  {
    "text": "well that didn't work in a world where you had thousands of teams and thousands of of services that needed",
    "start": "426800",
    "end": "431919"
  },
  {
    "text": "to be to be deployed so we created a new tools team that was chartered with creating",
    "start": "431919",
    "end": "437360"
  },
  {
    "text": "tools that could be self self-service tools they had to support this agile process",
    "start": "437360",
    "end": "442960"
  },
  {
    "text": "but a couple other requirements that were pretty unique one is that they had to be technology agnostic",
    "start": "442960",
    "end": "448000"
  },
  {
    "text": "because amazon wasn't just a java shop or a ruby shop or a pearl shop as i guess we were known",
    "start": "448000",
    "end": "453599"
  },
  {
    "text": "for we had every technology under the sun in use at amazon so the tools we had had to",
    "start": "453599",
    "end": "459199"
  },
  {
    "text": "be technology agnostic and language agnostic and the other important thing is that we",
    "start": "459199",
    "end": "464240"
  },
  {
    "text": "realized we didn't want teams making the same mistakes over and over again so we needed the tools to codify best",
    "start": "464240",
    "end": "469759"
  },
  {
    "text": "practices and provide guard rails so that teams were making the same mistakes that we would learn something",
    "start": "469759",
    "end": "475039"
  },
  {
    "text": "we would put that into a best practice create guard rails so the teams would make that mistake over again",
    "start": "475039",
    "end": "480240"
  },
  {
    "text": "so we wanted the tools to help us become better and you know more efficient in how we",
    "start": "480240",
    "end": "486080"
  },
  {
    "text": "release software i'll describe a couple of the services that emerged the first was apollo",
    "start": "486080",
    "end": "494160"
  },
  {
    "start": "491000",
    "end": "575000"
  },
  {
    "text": "this is a name borrowed from nasa it's it's used to describe the internal deployment system that we use at amazon",
    "start": "494720",
    "end": "500560"
  },
  {
    "text": "and apollo is used to deploy everything from the retail site to the web services it's used pervasively pervasively across",
    "start": "500560",
    "end": "507440"
  },
  {
    "text": "amazon and it's been used for over a dozen years so when we first introduced this a",
    "start": "507440",
    "end": "513120"
  },
  {
    "text": "dozen years ago it was after we broke into these small teams owning these micro services",
    "start": "513120",
    "end": "518399"
  },
  {
    "text": "we created this deployment service that would be self-service um and it got smarter and smarter over the over the last decade",
    "start": "518399",
    "end": "525120"
  },
  {
    "text": "we learned how to do deployments without uh downtime without having to impact customers and you don't go to amazon and",
    "start": "525120",
    "end": "531120"
  },
  {
    "text": "see that we're doing a deployment you know they'll come back later or spitting 500s because we're doing a deployment",
    "start": "531120",
    "end": "537120"
  },
  {
    "text": "and that's because we started getting smarter about how to incrementally release software so that customers wouldn't see that we were doing a",
    "start": "537120",
    "end": "543120"
  },
  {
    "text": "deployment but also not just impacting customers during the deployment but making sure that if we're pushing out something that",
    "start": "543120",
    "end": "550240"
  },
  {
    "text": "has a has a problem that we can we can isolate that and roll back and not propagate that across the rest of the",
    "start": "550240",
    "end": "556320"
  },
  {
    "text": "fleet so a lot of sophisticated things started getting pushed into apollo",
    "start": "556320",
    "end": "561519"
  },
  {
    "text": "in terms of how we how we deployed software got smarter and smarter and the workflow engine started",
    "start": "561519",
    "end": "567120"
  },
  {
    "text": "being able to do everything from uh versioning artifacts to rolling back to automated health checking",
    "start": "567120",
    "end": "574080"
  },
  {
    "text": "another tool that emerged after apollo was pipelines uh and pipelines is our",
    "start": "574959",
    "end": "581120"
  },
  {
    "start": "575000",
    "end": "701000"
  },
  {
    "text": "continued delivery or release automation service inside of amazon",
    "start": "581120",
    "end": "586800"
  },
  {
    "text": "uh and this started back in 2008 and a couple guys in the builder tools team",
    "start": "586800",
    "end": "592240"
  },
  {
    "text": "they did a study of how long it was taking us on average across amazon to go from code check-in",
    "start": "592240",
    "end": "598080"
  },
  {
    "text": "to having that code running in production so how long from co-check-in to build to test pushing out across different",
    "start": "598080",
    "end": "604399"
  },
  {
    "text": "environments to finally having that code in production and they found it was uh embarrassingly",
    "start": "604399",
    "end": "610480"
  },
  {
    "text": "long it was weeks and weeks of time on average and they we reported this to the executives at amazon and uh you know",
    "start": "610480",
    "end": "617360"
  },
  {
    "text": "they of course said we need to fix this um if there's anything you want you should know about amazon is that we pride ourselves on efficiency uh",
    "start": "617360",
    "end": "623760"
  },
  {
    "text": "everything has to be efficient uh you know we're the we're the people with uh robots in our fulfillment centers we're trying to always make things more and",
    "start": "623760",
    "end": "630079"
  },
  {
    "text": "more efficient and we saw this as essentially a broken production line",
    "start": "630079",
    "end": "635600"
  },
  {
    "text": "we had a production line that was inefficient had all kinds of human processes uh in in that was making it",
    "start": "635600",
    "end": "641200"
  },
  {
    "text": "slow it wasn't that the build was taking weeks it wasn't that a deployment was taking weeks or testing any of these",
    "start": "641200",
    "end": "647519"
  },
  {
    "text": "individual parts of the release process it was the the human interaction the the way you know me sending a notification",
    "start": "647519",
    "end": "653839"
  },
  {
    "text": "to another developer that developer bunching up a bunch of changes all the human uh manual steps in between",
    "start": "653839",
    "end": "659920"
  },
  {
    "text": "that was taking long so we set out to automate that and we turned it into a completely automat",
    "start": "659920",
    "end": "666880"
  },
  {
    "text": "automated system from code check-in to having that in production and allowed developers and teams inside of amazon to",
    "start": "666880",
    "end": "674000"
  },
  {
    "text": "basically model their entire release process and run it in an automated way",
    "start": "674000",
    "end": "679120"
  },
  {
    "text": "today well north of 90 of the teams at amazon use pipelines it's how we do our",
    "start": "679120",
    "end": "685200"
  },
  {
    "text": "releases everything is modeled in this everything from s3 to the website the retail website is modeled in pipelines so it's",
    "start": "685200",
    "end": "692880"
  },
  {
    "text": "very flexible and it allows us to basically automate all the manual steps that would have slowed this down",
    "start": "692880",
    "end": "699760"
  },
  {
    "text": "all right so what happens when you have thousands of teams at amazon all deploying this micro services or",
    "start": "700959",
    "end": "707920"
  },
  {
    "start": "701000",
    "end": "742000"
  },
  {
    "text": "primitive style architecture having multiple environments multiple testing environments perhaps multiple",
    "start": "707920",
    "end": "714079"
  },
  {
    "text": "environments across different regions practicing continuous delivery",
    "start": "714079",
    "end": "720399"
  },
  {
    "text": "you get a ridiculous number of deployments last year we did 50 million deployments inside of",
    "start": "720399",
    "end": "725920"
  },
  {
    "text": "amazon using apollo this is just inside of amazon so not customers using it just internal teams using apollo 50 million",
    "start": "725920",
    "end": "732959"
  },
  {
    "text": "deployments that's a deployment and a half every second and that's you know from these thousands",
    "start": "732959",
    "end": "738079"
  },
  {
    "text": "of teams pushing this constantly so back to our customers when our customers",
    "start": "738079",
    "end": "744880"
  },
  {
    "start": "742000",
    "end": "878000"
  },
  {
    "text": "asked us you know is there anything we do inside of amazon are there any tools that we have that might be useful to them",
    "start": "744880",
    "end": "750959"
  },
  {
    "text": "we looked internally and said of course yeah we've been doing this for a while now so in the rest of this talk i'm going to",
    "start": "750959",
    "end": "757839"
  },
  {
    "text": "describe how you can use codeploy code pipeline and code commit which are based",
    "start": "757839",
    "end": "762959"
  },
  {
    "text": "on our internal tools to build your own devops pipeline so that you can automate your release",
    "start": "762959",
    "end": "768800"
  },
  {
    "text": "pipeline just that the same way amazon does going from source code checking to having that code in production and",
    "start": "768800",
    "end": "774639"
  },
  {
    "text": "automating everything in between this will allow you to produce software more quickly be more efficient",
    "start": "774639",
    "end": "780480"
  },
  {
    "text": "and have fewer errors in that release process and be able to iterate more quickly for your customers",
    "start": "780480",
    "end": "787680"
  },
  {
    "text": "all right so let's get going with aws code deploy the deployment service",
    "start": "787680",
    "end": "794079"
  },
  {
    "text": "so why do you need a deployment service a number of reasons but one is if you're going to create a devops pipeline you're",
    "start": "794880",
    "end": "801920"
  },
  {
    "text": "going to want to automate your deployments because you're going to be doing a lot of them uh you're going to have you know more releases you're going",
    "start": "801920",
    "end": "808480"
  },
  {
    "text": "to have smaller bat your batch up you're not going to batch up your releases you're going to do small incremental pushes",
    "start": "808480",
    "end": "813519"
  },
  {
    "text": "you're going to be deploying across multiple environments so you're going to want that to be as automated as possible you don't want to",
    "start": "813519",
    "end": "818959"
  },
  {
    "text": "have any friction in that in that pipeline so you're going to want to automate the deployments another reason is that you want to",
    "start": "818959",
    "end": "824560"
  },
  {
    "text": "manage complexity and what i mean by this is that uh if you're a single developer deploying to",
    "start": "824560",
    "end": "829600"
  },
  {
    "text": "one box it's simple you just ssh into that box you run your scripts and your deployment's done um but what happens",
    "start": "829600",
    "end": "835839"
  },
  {
    "text": "when you add more boxes or or more developers you know trying to deploy those same boxes",
    "start": "835839",
    "end": "840880"
  },
  {
    "text": "you don't want to ssh into a you know hundreds of different boxes to run your deployment script so you're",
    "start": "840880",
    "end": "846240"
  },
  {
    "text": "going to want to make sure that you have a deployment system that can deploy that for you in an automated way",
    "start": "846240",
    "end": "852800"
  },
  {
    "text": "and you're going to want to avoid downtime so you know you're not going to want your customers to know you're doing a deployment uh you know you're not",
    "start": "852800",
    "end": "858480"
  },
  {
    "text": "going to want them to see 500s or see you know glitches on your site as you're doing a deployment",
    "start": "858480",
    "end": "863839"
  },
  {
    "text": "also you're going to want to make sure that if you do a deployment that pushes out something bad or you have a an error in your deployment scripts",
    "start": "863839",
    "end": "870880"
  },
  {
    "text": "that your employment service can capture that and isolate it and not propagate that air across the rest of your fleet",
    "start": "870880",
    "end": "877600"
  },
  {
    "text": "so we introduced aws code deploy we launched this back in november at re",
    "start": "877600",
    "end": "883279"
  },
  {
    "start": "878000",
    "end": "1006000"
  },
  {
    "text": "invent it is generally available you can begin using it today it is",
    "start": "883279",
    "end": "889920"
  },
  {
    "text": "based on apollo so it allows you to deploy like amazon does it shares the same back end as apollo",
    "start": "889920",
    "end": "895680"
  },
  {
    "text": "same workflow logic as apollo so all the things that we have learned and put into apollo you get to benefit from",
    "start": "895680",
    "end": "902560"
  },
  {
    "text": "to use codeploy you teach it how to deploy to one instance and it will replicate that across any",
    "start": "902560",
    "end": "908399"
  },
  {
    "text": "number of instances so you can deploy to hundreds or thousands of instances the same way as you would one",
    "start": "908399",
    "end": "915519"
  },
  {
    "text": "and also like apollo it allows you to deploy without downtime and i'll show you how this happens through rolling deployments",
    "start": "915519",
    "end": "922000"
  },
  {
    "text": "you you basically push out your deployment incrementally without impacting the entire fleet",
    "start": "922000",
    "end": "928079"
  },
  {
    "text": "um codeploy also allows you to centralize your deployment so that or be able to view what version of software",
    "start": "928079",
    "end": "934320"
  },
  {
    "text": "is running on any fleet at any time it provides an archive of all your deployable artifacts so you can go back",
    "start": "934320",
    "end": "940560"
  },
  {
    "text": "and see what was running on any environment at any time and it gives you sort of that control monitoring about",
    "start": "940560",
    "end": "947040"
  },
  {
    "text": "what software is running where and best of all there's no additional charge for using code deploy you just",
    "start": "947040",
    "end": "954320"
  },
  {
    "text": "pay for the ec2 instances that you're running there's no additional charge i will caveat that and say we we",
    "start": "954320",
    "end": "960560"
  },
  {
    "text": "announced a new feature last week which is support for on-premise instances we do charge for that that is",
    "start": "960560",
    "end": "966880"
  },
  {
    "text": "two cents per instance update um but the the cool thing about this is that you can use codeploy now to",
    "start": "966880",
    "end": "972800"
  },
  {
    "text": "uh do deployments to on-premise servers so if you have your own data your own servers in your data center you can use",
    "start": "972800",
    "end": "979040"
  },
  {
    "text": "the same deployment service to deploy to ec2 as you do to your own data centers all it needs is",
    "start": "979040",
    "end": "985199"
  },
  {
    "text": "to establish a connection back to uh to code deploy a long polling connection so the instance calls us to wait for",
    "start": "985199",
    "end": "991279"
  },
  {
    "text": "instructions and basically that means any device with an internet connection that can call us",
    "start": "991279",
    "end": "996639"
  },
  {
    "text": "can receive a deployment so you can deploy to your laptop you can deploy anywhere using the same deployment service",
    "start": "996639",
    "end": "1003519"
  },
  {
    "text": "pretty cool let me show you how to use code deploy",
    "start": "1003519",
    "end": "1009120"
  },
  {
    "start": "1006000",
    "end": "1188000"
  },
  {
    "text": "there's three simple steps the first step is you're going to want to package up your application",
    "start": "1009120",
    "end": "1015040"
  },
  {
    "text": "and when you package up your application you're going to want to create what we call an app spec file",
    "start": "1015040",
    "end": "1020079"
  },
  {
    "text": "an app spec file is a bit of configuration you can see a sample here",
    "start": "1020079",
    "end": "1025520"
  },
  {
    "text": "it's yaml code so it's a bit of yaml and there's a couple sections here i'll call out the first is the file section",
    "start": "1025520",
    "end": "1033760"
  },
  {
    "text": "this teaches code deploy where to copy files so where to pull from and where to where to copy",
    "start": "1033760",
    "end": "1039199"
  },
  {
    "text": "your files the second thing i'll call out here is the hooks",
    "start": "1039199",
    "end": "1045120"
  },
  {
    "text": "there are seven different lifecycle events in code deploy so during each deployment it's going to iterate through",
    "start": "1046319",
    "end": "1051919"
  },
  {
    "text": "seven different life cycle events and during these life cycle events you can attach scripts",
    "start": "1051919",
    "end": "1057840"
  },
  {
    "text": "uh you can you know there's hooks for attaching scripts and these scripts can be anything they can be powershell scripts they can be bash scripts uh they",
    "start": "1057840",
    "end": "1064720"
  },
  {
    "text": "can be chef recipes as this sample shows here and this goes back to the idea that we",
    "start": "1064720",
    "end": "1070000"
  },
  {
    "text": "have to have tools that are technology agnostic whether it's languages whether it's configuration management tools",
    "start": "1070000",
    "end": "1075840"
  },
  {
    "text": "this will work with puppet this will work with powershell this will work with uh salt stack ansible you name it",
    "start": "1075840",
    "end": "1083039"
  },
  {
    "text": "there's actually a bunch of templates available that show you how to use this if you go to our git",
    "start": "1083039",
    "end": "1088400"
  },
  {
    "text": "the aws labs repository in github you can see a bunch of templates for how to integrate this with a number of",
    "start": "1088400",
    "end": "1093760"
  },
  {
    "text": "different tools but the cool thing here is you can bring your own scripts it can be anything attach it to one of these hooks",
    "start": "1093760",
    "end": "1100160"
  },
  {
    "text": "and you're set step two",
    "start": "1100160",
    "end": "1105200"
  },
  {
    "text": "is you're going to want to set up your targets except the target environments",
    "start": "1105200",
    "end": "1110240"
  },
  {
    "text": "and these are the instances that are going to receive a deployment and we call this encode deploy a deployment group so a deployment group",
    "start": "1110240",
    "end": "1117520"
  },
  {
    "text": "is a set of instances whether they're ec2 instances or instances in your own data center",
    "start": "1117520",
    "end": "1124240"
  },
  {
    "text": "that you want to receive one deployment and you can define the deployment group either by tags using ec2 tags or",
    "start": "1124240",
    "end": "1131280"
  },
  {
    "text": "on-premise tags so in this example here you have a staging deployment group and a production deployment group and that",
    "start": "1131280",
    "end": "1138000"
  },
  {
    "text": "might be based on a tag where environment equals production or environment equals staging",
    "start": "1138000",
    "end": "1143440"
  },
  {
    "text": "so you can use tags to define the deployment group you can also use auto scaling groups to define a deployment",
    "start": "1143440",
    "end": "1149360"
  },
  {
    "text": "group so you can just point us at an auto scaling group if you're using autoscaling and code deploy will know to deploy to",
    "start": "1149360",
    "end": "1155520"
  },
  {
    "text": "that auto scaling group the other cool thing about this is that the integration with auto scaling knows",
    "start": "1155520",
    "end": "1161520"
  },
  {
    "text": "that it's not going to put an instance on production until it's received the software update so the interaction with",
    "start": "1161520",
    "end": "1167200"
  },
  {
    "text": "auto scaling allows it to bring up an instance have code deploy",
    "start": "1167200",
    "end": "1172640"
  },
  {
    "text": "update the software on there so it matches the rest of the fleet and then put it into service so that way you're not bringing up",
    "start": "1172640",
    "end": "1178480"
  },
  {
    "text": "instances that are the wrong version of software uh so once you've created your app spec",
    "start": "1178480",
    "end": "1184960"
  },
  {
    "text": "file and step two you've set up your target environments you're then going to deploy",
    "start": "1184960",
    "end": "1190960"
  },
  {
    "start": "1188000",
    "end": "1356000"
  },
  {
    "text": "and this is pretty pretty simple it's just a simple command you can do this you know through a button click in the console or you can",
    "start": "1190960",
    "end": "1197360"
  },
  {
    "text": "use the command line tools or sdks it's also completely api driven",
    "start": "1197360",
    "end": "1203280"
  },
  {
    "text": "which also means that you can do this through the interfaces and a number of partners i have provided integrations",
    "start": "1203280",
    "end": "1208880"
  },
  {
    "text": "with this that allow you to use code deploy from various cicd tools",
    "start": "1208880",
    "end": "1214320"
  },
  {
    "text": "like travis codeship circleci a number of different vendors have",
    "start": "1214320",
    "end": "1219440"
  },
  {
    "text": "provided integrations i'll come back and tell you a bit about all the integrations that are available but if",
    "start": "1219440",
    "end": "1224960"
  },
  {
    "text": "you're using one of these tools they're automatically integrated with code deploy you can automatically trigger a deployment from these tools",
    "start": "1224960",
    "end": "1231600"
  },
  {
    "text": "github is another company that provided an integration i'm actually going to do a demo of this to show you how you can",
    "start": "1231600",
    "end": "1236720"
  },
  {
    "text": "do a deployment straight from github it's pretty cool and i'll show you that in a second",
    "start": "1236720",
    "end": "1243760"
  },
  {
    "text": "one of the important concepts to understand about code deploy is that you can choose your deployment speed",
    "start": "1246799",
    "end": "1251840"
  },
  {
    "text": "speed is not always the best thing because you want to balance the availability availability of",
    "start": "1251840",
    "end": "1256960"
  },
  {
    "text": "your site with how quickly a deployment goes and you can choose anything from one at a time to all at once or anything in",
    "start": "1256960",
    "end": "1263280"
  },
  {
    "text": "between it's completely configurable and what this is going to do is it's going to teach us how to do the rolling deployment",
    "start": "1263280",
    "end": "1269760"
  },
  {
    "text": "to show you how this works imagine that you have three instances sitting behind a load balancer",
    "start": "1269760",
    "end": "1276799"
  },
  {
    "text": "and these three instances are all running version one of your software and you're going to want to push out a",
    "start": "1276799",
    "end": "1282080"
  },
  {
    "text": "change to version two and let's say that you have configured this to deploy to your fleet a third of",
    "start": "1282080",
    "end": "1287200"
  },
  {
    "text": "a third at a time a third of a time here would be one instance at a time so what's going to happen is",
    "start": "1287200",
    "end": "1293760"
  },
  {
    "text": "codeploy is going to take one instance out from behind the load balancer update it to version two",
    "start": "1293760",
    "end": "1299840"
  },
  {
    "text": "and then put it back in and then move on to the next instance update it to version two and then put it back in and then the",
    "start": "1299840",
    "end": "1306000"
  },
  {
    "text": "same for the third instance and then put it back in until all the instances are running version two",
    "start": "1306000",
    "end": "1312159"
  },
  {
    "text": "now let's say that there's a problem uh during your deployment let's say you're deploying to version",
    "start": "1312159",
    "end": "1317360"
  },
  {
    "text": "three and there's some failure in one of your scripts or something happens uh codeploy",
    "start": "1317360",
    "end": "1323039"
  },
  {
    "text": "is going to stop uh or abort the deployment because it's it recognizes that there's",
    "start": "1323039",
    "end": "1328240"
  },
  {
    "text": "an issue one of the scripts failed or one of the things it was expecting didn't work out right or one of the validations didn't work",
    "start": "1328240",
    "end": "1334559"
  },
  {
    "text": "uh it then allows you to roll back to version two you know without propagating that same",
    "start": "1334559",
    "end": "1341600"
  },
  {
    "text": "the same error across to the other instances and then you're back in version two",
    "start": "1341600",
    "end": "1346880"
  },
  {
    "text": "so this is you know pretty important feature that it uh isolates the the air doesn't propagate that across the rest",
    "start": "1346880",
    "end": "1352080"
  },
  {
    "text": "of the rest of your fleet and allows you to roll back all right so",
    "start": "1352080",
    "end": "1358320"
  },
  {
    "start": "1356000",
    "end": "1636000"
  },
  {
    "text": "enough talking let's uh let's show you code deploy uh i'm going to do a demo and this is a demo someone my team wrote",
    "start": "1358320",
    "end": "1364960"
  },
  {
    "text": "uh it's a magic eight ball app uh i assume everyone knows the magic 8 ball app or magic 8 ball that you shake and",
    "start": "1364960",
    "end": "1371120"
  },
  {
    "text": "it gives you some witty response let's see magic 8 ball is this demo",
    "start": "1371120",
    "end": "1377360"
  },
  {
    "text": "going to work outlook not so good",
    "start": "1377360",
    "end": "1383120"
  },
  {
    "text": "all right so this is a simple python app and what it's doing is it's",
    "start": "1383120",
    "end": "1390080"
  },
  {
    "text": "spitting out some responses here it's spitting out some magic 8-ball clips down here",
    "start": "1390080",
    "end": "1395760"
  },
  {
    "text": "and below this you can see i have three instances sitting behind a load balancer and",
    "start": "1395760",
    "end": "1400799"
  },
  {
    "text": "they're all in service and what i'm going to do is i'm going to go to github",
    "start": "1400799",
    "end": "1406640"
  },
  {
    "text": "where i store the source for this for this application and i'm going to kick off a deployment",
    "start": "1406640",
    "end": "1412400"
  },
  {
    "text": "after a commit so github has provided a post commit hook that allows me to automatically",
    "start": "1412400",
    "end": "1417520"
  },
  {
    "text": "deploy following a commit and i'll show you how that works so this is the",
    "start": "1417520",
    "end": "1423840"
  },
  {
    "text": "the github repository here you can see this is the magic 8-ball flask app it's a flask application in",
    "start": "1423840",
    "end": "1430000"
  },
  {
    "text": "python one of the things i'll point out here is that you can see here there's an app",
    "start": "1430000",
    "end": "1435039"
  },
  {
    "text": "spec file and this is the yaml file i spoke about earlier this is the configuration that you",
    "start": "1435039",
    "end": "1440080"
  },
  {
    "text": "include with your application directory and you see a lot of things that uh i talked about before the the the files",
    "start": "1440080",
    "end": "1446320"
  },
  {
    "text": "that you're copying the hooks there's a number of these samples that you can find on our git lab uh aws labs",
    "start": "1446320",
    "end": "1452880"
  },
  {
    "text": "repository and github but going back here i'm going to",
    "start": "1452880",
    "end": "1458400"
  },
  {
    "text": "go find this file here",
    "start": "1458400",
    "end": "1464240"
  },
  {
    "text": "this is the file that return this is the back end service to this flask app that returns a bunch of responses and i'm going to make a change here i'm going to",
    "start": "1464240",
    "end": "1471760"
  },
  {
    "text": "use the little editor here in github and i'm going to say hello",
    "start": "1471760",
    "end": "1479760"
  },
  {
    "text": "summit and i'm going to go ahead and commit that",
    "start": "1480320",
    "end": "1486640"
  },
  {
    "text": "so github has a post i've already set up the post commit hook that triggers a deployment and if i go over",
    "start": "1486640",
    "end": "1493440"
  },
  {
    "text": "to the console this is the aws console the code deploy console and i refresh this",
    "start": "1493440",
    "end": "1501440"
  },
  {
    "text": "you'll see that a deployment has been kicked off 17 seconds ago so right after i did that",
    "start": "1501440",
    "end": "1506559"
  },
  {
    "text": "commit it kicked off a deployment if i open this up you can see that",
    "start": "1506559",
    "end": "1512960"
  },
  {
    "text": "one uh instance i'm rolling this out one instance at a time so i'm doing the same thing i showed you uh where it's doing",
    "start": "1512960",
    "end": "1519440"
  },
  {
    "text": "one instance at a time so it's going to do one instance put it back into service take the second instance out update that",
    "start": "1519440",
    "end": "1525360"
  },
  {
    "text": "put it back into service and then the same for the third and this is going to keep going and while this happens if i go back",
    "start": "1525360",
    "end": "1532480"
  },
  {
    "text": "to my app here you'll see that this one has been taken",
    "start": "1532480",
    "end": "1537919"
  },
  {
    "text": "out and it's back in service in a second",
    "start": "1537919",
    "end": "1543158"
  },
  {
    "text": "this one will go out of service and then it will be updated and then be",
    "start": "1543919",
    "end": "1550080"
  },
  {
    "text": "put back in and the entire time this happens the the app continues to serve traffic because",
    "start": "1550080",
    "end": "1556559"
  },
  {
    "text": "it's still serving traffic from two instances while the third is being uh updated so here you can see the second",
    "start": "1556559",
    "end": "1562799"
  },
  {
    "text": "one is is out of service and the other two are serving up all the traffic um while that finishes i'll show you a",
    "start": "1562799",
    "end": "1568960"
  },
  {
    "text": "couple other features that are important about using code deploy if i",
    "start": "1568960",
    "end": "1574159"
  },
  {
    "text": "click on this i can view the instances that are part of this deployment you can see there's three instances here",
    "start": "1574159",
    "end": "1581200"
  },
  {
    "text": "this has been up it's updated to the third is in progress for any of these uh instances that have",
    "start": "1581200",
    "end": "1586799"
  },
  {
    "text": "been part of this deployment i can view events uh and these are the the seven life cycle events i talked about before these",
    "start": "1586799",
    "end": "1593840"
  },
  {
    "text": "are the events it's going to go through it's going to stop the application it's going to download the bundle it's going to do the install and then it's going to",
    "start": "1593840",
    "end": "1599520"
  },
  {
    "text": "do any kind of validation that you want you can see here it's succeeded all these steps you can see the duration if",
    "start": "1599520",
    "end": "1605919"
  },
  {
    "text": "there are any problems if there are any errors with any of these steps you'd see an air here and you see a tale",
    "start": "1605919",
    "end": "1611840"
  },
  {
    "text": "of the logs here so you can very easily debug the issue because we provide private the tail of the the log",
    "start": "1611840",
    "end": "1617600"
  },
  {
    "text": "here for easy debugging and then some actions you can you can use for remediation",
    "start": "1617600",
    "end": "1624480"
  },
  {
    "text": "uh going back to this uh this is probably just about done",
    "start": "1624559",
    "end": "1630320"
  },
  {
    "text": "uh so it's gonna be updating the third instance and and that will bring back into production and then",
    "start": "1630320",
    "end": "1635440"
  },
  {
    "text": "uh we'll be done done there it is so three instances have",
    "start": "1635440",
    "end": "1641039"
  },
  {
    "text": "been updated the the app has been uh changed uh based on a commit from github",
    "start": "1641039",
    "end": "1647520"
  },
  {
    "text": "all right so what i've demoed here is one of the integrations that we have",
    "start": "1650320",
    "end": "1656559"
  },
  {
    "start": "1652000",
    "end": "1713000"
  },
  {
    "text": "available this is the one that github did that allows you to do a deployment straight from github",
    "start": "1656559",
    "end": "1662000"
  },
  {
    "text": "but if you have any um you know build or test steps that you want to do say you're doing a java app you need to",
    "start": "1662000",
    "end": "1667840"
  },
  {
    "text": "build or something like that we also have a number of partners that have built-in integrations with build",
    "start": "1667840",
    "end": "1673520"
  },
  {
    "text": "and ci systems so you can use travis for example if you're using github you can then do your builds on travis and travis",
    "start": "1673520",
    "end": "1679919"
  },
  {
    "text": "will kick off the deployment straight to code deploy same thing with circle ci code ship solano labs",
    "start": "1679919",
    "end": "1686080"
  },
  {
    "text": "all these partners this also works very well with configuration management tools so we've",
    "start": "1686080",
    "end": "1692000"
  },
  {
    "text": "partnered with companies like puppet labs salt stack ansible and chef to provide",
    "start": "1692000",
    "end": "1698240"
  },
  {
    "text": "templates that demonstrate how you can use those configuration management tools together with code deploy and encourage",
    "start": "1698240",
    "end": "1703520"
  },
  {
    "text": "you to check that out this allows you to continue using those scripts if you do use any of those configuration",
    "start": "1703520",
    "end": "1709120"
  },
  {
    "text": "management languages together with code deploy all right",
    "start": "1709120",
    "end": "1715440"
  },
  {
    "text": "let's talk now about aws code pipeline",
    "start": "1715440",
    "end": "1720000"
  },
  {
    "text": "in aws code pipeline is the release automation service uh",
    "start": "1720559",
    "end": "1725679"
  },
  {
    "text": "inspired by pipelines used internally uh let's first ask the question why do",
    "start": "1725679",
    "end": "1731120"
  },
  {
    "start": "1729000",
    "end": "1794000"
  },
  {
    "text": "we need to use release automation um well one is once you deploy once you automate your deployments you're gonna",
    "start": "1731120",
    "end": "1736480"
  },
  {
    "text": "want to deploy automate the entire workflow you're going to learn like amazon did that uh you're going to be",
    "start": "1736480",
    "end": "1741760"
  },
  {
    "text": "you're going to have a lot of manual steps you know human steps in that process that you're going to want to automate so you're not taking weeks like amazon",
    "start": "1741760",
    "end": "1748799"
  },
  {
    "text": "had been taking to do a typical release you're going to want to automate that so that it's as efficient as possible",
    "start": "1748799",
    "end": "1755520"
  },
  {
    "text": "this is going to allow you to release more quickly and it's going to also create a higher quality release for a couple reasons one is",
    "start": "1755520",
    "end": "1762559"
  },
  {
    "text": "anytime you have human steps you're going to have problems with human errors you also don't want",
    "start": "1762559",
    "end": "1769039"
  },
  {
    "text": "all the all the rules about how to do deployment in someone's head if it's in someone's head it can be put",
    "start": "1769039",
    "end": "1775039"
  },
  {
    "text": "into a script it can be put into a test it can be put into automation that way you're not dependent on that person remembering how to do a release",
    "start": "1775039",
    "end": "1782000"
  },
  {
    "text": "or if someone else comes into your team they can do a release and you're not dependent on the knowledge that's in one",
    "start": "1782000",
    "end": "1787200"
  },
  {
    "text": "person's head so you'll you'll have better quality releases more consistent releases if you have automation",
    "start": "1787200",
    "end": "1795520"
  },
  {
    "start": "1794000",
    "end": "2147000"
  },
  {
    "text": "so we've been working on code pipeline uh we pre-announced this at re invent uh and this is based on pipelines the the",
    "start": "1795520",
    "end": "1802240"
  },
  {
    "text": "internal product uh that shares its name uh and this is in private beta today you",
    "start": "1802240",
    "end": "1808559"
  },
  {
    "text": "can sign up on the website if you're interested in trying it out we're letting customers in in in waves this",
    "start": "1808559",
    "end": "1814240"
  },
  {
    "text": "will be released publicly soon uh but if you're interested in trying it out early i encourage you to go to the website uh to the pipelines page on aws",
    "start": "1814240",
    "end": "1822320"
  },
  {
    "text": "and you can sign up for the private beta and this will allow you to release software like amazon does",
    "start": "1822320",
    "end": "1830399"
  },
  {
    "text": "it will allow you to automate the entire release process from source to production and in this example here uh i",
    "start": "1830399",
    "end": "1836720"
  },
  {
    "text": "show uh how you can model pull and source doing a build followed by unit tests uh then deploying",
    "start": "1836720",
    "end": "1843360"
  },
  {
    "text": "to a beta stage followed by some ui tests followed by a deployment to a gamma stage another pre-production stage",
    "start": "1843360",
    "end": "1850559"
  },
  {
    "text": "followed by a load test and then deploying to three regions in production uh maybe your your your release process",
    "start": "1850559",
    "end": "1856640"
  },
  {
    "text": "isn't this complicated or more maybe it's more complicated uh it doesn't matter code pipeline will let you model",
    "start": "1856640",
    "end": "1862159"
  },
  {
    "text": "that entire release process it's used to model everything inside of amazon so we're fairly confident you can model",
    "start": "1862159",
    "end": "1868320"
  },
  {
    "text": "the release process that you have so it's not not only built for with flexibility in mind it's also built with",
    "start": "1868320",
    "end": "1874880"
  },
  {
    "text": "extensibility in mind and this was important in the customers that we talked to they wanted us to be able to allow them to continue using the",
    "start": "1874880",
    "end": "1882080"
  },
  {
    "text": "tools that they use today and not be forced to change so if you use github you can continue using github if you use",
    "start": "1882080",
    "end": "1888240"
  },
  {
    "text": "jenkins for build you can continue using jenkins for build customers wanted to be able to mix and match the tools that they they had and",
    "start": "1888240",
    "end": "1894799"
  },
  {
    "text": "what they wanted from us is to help them integrate that end-to-end release process",
    "start": "1894799",
    "end": "1899840"
  },
  {
    "text": "so that they didn't have to so integrate that end-to-end process in the cloud and allow customers to use whatever tools",
    "start": "1899840",
    "end": "1905200"
  },
  {
    "text": "that they want this is a pretty powerful concept so we built a plug-in architecture all",
    "start": "1905200",
    "end": "1911279"
  },
  {
    "text": "this is built on a plug-in architecture and the integrations that we have done we've done on top of that plug-in",
    "start": "1911279",
    "end": "1916640"
  },
  {
    "text": "architecture so we we've integrated uh code deploy for example as a deployment engine on top of this uh on top of this",
    "start": "1916640",
    "end": "1923360"
  },
  {
    "text": "plug-in architecture third-party partners have also been",
    "start": "1923360",
    "end": "1928799"
  },
  {
    "text": "integrating with code pipeline so that at launch you'll be able to use a number of third-party products as part of this",
    "start": "1928799",
    "end": "1934799"
  },
  {
    "text": "release process and the other thing is that customers can also use this plug-in architecture",
    "start": "1934799",
    "end": "1940080"
  },
  {
    "text": "to integrate whatever tools that they have so if you have your own testing tools and you want to integrate that into this",
    "start": "1940080",
    "end": "1945840"
  },
  {
    "text": "you can use that maybe it's your own selenium box or whatever you have as proprietary you can",
    "start": "1945840",
    "end": "1951440"
  },
  {
    "text": "integrate that into code pipeline and have it integrated with your cloud-based release automation",
    "start": "1951440",
    "end": "1959039"
  },
  {
    "text": "i'll show you how this works actually in a second i'm going to go over to",
    "start": "1959039",
    "end": "1965200"
  },
  {
    "text": "a demo",
    "start": "1965200",
    "end": "1967679"
  },
  {
    "text": "all right let it settle okay so this is a",
    "start": "1971600",
    "end": "1979039"
  },
  {
    "text": "a pipeline that i've already created um and this is a running pipeline right now",
    "start": "1979039",
    "end": "1986080"
  },
  {
    "text": "you can see it's in process of doing build and the thing to understand about code",
    "start": "1986080",
    "end": "1992399"
  },
  {
    "text": "pipeline is that the two fundamental concepts one is stages and actions",
    "start": "1992399",
    "end": "1998720"
  },
  {
    "text": "and a stage can be is depicted by these boxes here so this",
    "start": "1998720",
    "end": "2003760"
  },
  {
    "text": "is this is a source stage this is a build stage and this is a beta stage",
    "start": "2003760",
    "end": "2010960"
  },
  {
    "text": "if i go down i can see a production stage and these these stages can be whatever",
    "start": "2011039",
    "end": "2016399"
  },
  {
    "text": "you want and inside these stages you have actions so the first box here i have a source stage",
    "start": "2016399",
    "end": "2022320"
  },
  {
    "text": "and i've created an action to pull from github once that's complete it's going to go on",
    "start": "2022320",
    "end": "2028320"
  },
  {
    "text": "to the build stage where it's going to do a build in jenkins once that build is complete it's going",
    "start": "2028320",
    "end": "2034799"
  },
  {
    "text": "to go ahead and go to the beta stage and all this is going to happen automatically if i wanted to i can i can",
    "start": "2034799",
    "end": "2041200"
  },
  {
    "text": "put a block here so that it doesn't advance until i i let it advance but it auto it's on automatically",
    "start": "2041200",
    "end": "2047279"
  },
  {
    "text": "proceed from from stage to stage when when any of the actions in that stage return successful",
    "start": "2047279",
    "end": "2053839"
  },
  {
    "text": "so it's going to complete the jenkins build and then it's going to go to the beta stage",
    "start": "2053839",
    "end": "2059839"
  },
  {
    "text": "where i have three actions and what this demonstrates is that actions can be parallel or sequential",
    "start": "2059839",
    "end": "2066560"
  },
  {
    "text": "so you can see i have a a deployment using aws code deploy to a beta fleet",
    "start": "2066560",
    "end": "2072638"
  },
  {
    "text": "followed sequentially by two parallel actions it's going to do a load test in sosta",
    "start": "2072639",
    "end": "2078158"
  },
  {
    "text": "and it's going to do some ui tests and sauce labs once those actions complete it's going",
    "start": "2078159",
    "end": "2084079"
  },
  {
    "text": "to advance the production stage or production stage here um what i but what",
    "start": "2084079",
    "end": "2089839"
  },
  {
    "text": "i've done here is i've inserted what we call a gate and this gate here is a is a manual approval gate so i can say that you know",
    "start": "2089839",
    "end": "2097118"
  },
  {
    "text": "the director or the manager of this team can do has to manually approve anything before",
    "start": "2097119",
    "end": "2102560"
  },
  {
    "text": "it goes to production there's a number of different gates that we'll have available this shows a manual gate but",
    "start": "2102560",
    "end": "2107599"
  },
  {
    "text": "gates can be time based they can be based on calendar they can be based on",
    "start": "2107599",
    "end": "2112800"
  },
  {
    "text": "monitoring and metrics but you have this abstract concept of a gate that you can apply anywhere in this pipeline to",
    "start": "2112800",
    "end": "2119040"
  },
  {
    "text": "control the flow so that that shows you the basic concepts in code pipeline there are",
    "start": "2119040",
    "end": "2125200"
  },
  {
    "text": "these stages that contain actions things advance automatically from stage",
    "start": "2125200",
    "end": "2130240"
  },
  {
    "text": "to stage unless you block it with a gate or manually",
    "start": "2130240",
    "end": "2135880"
  },
  {
    "text": "all right uh the last service i'm going to talk about is aws code commit uh so we've we've automated our",
    "start": "2146800",
    "end": "2153119"
  },
  {
    "start": "2147000",
    "end": "2160000"
  },
  {
    "text": "deployments we've automated the release pipeline now let's talk about the source control system that sits at the very front of that",
    "start": "2153119",
    "end": "2160160"
  },
  {
    "start": "2160000",
    "end": "2242000"
  },
  {
    "text": "and this is an area where customers started telling us if they're going to be moving all their tools and all their environments to the cloud if they're",
    "start": "2160160",
    "end": "2166000"
  },
  {
    "text": "going to be moving their build to build environments and test environments and production environments to the cloud why not also move their source control",
    "start": "2166000",
    "end": "2173359"
  },
  {
    "text": "and for a couple of reasons one uh performance benefits of having your source code next to your build environments next to your test",
    "start": "2173359",
    "end": "2179520"
  },
  {
    "text": "environments uh you're gonna have lower latency but also customers wanted something that would be fully managed they didn't want",
    "start": "2179520",
    "end": "2186560"
  },
  {
    "text": "to continue to have to manage their own source control systems so they asked us can you give us something that we can",
    "start": "2186560",
    "end": "2191599"
  },
  {
    "text": "simply turn on that is fully managed source code source control in the cloud",
    "start": "2191599",
    "end": "2198000"
  },
  {
    "text": "they also wanted these to be highly available especially as you start using uh",
    "start": "2198000",
    "end": "2203359"
  },
  {
    "text": "devops pipelines that start pulling on your source control system a lot you're going to want to make sure that the source control systems are always",
    "start": "2203359",
    "end": "2209200"
  },
  {
    "text": "available and the most important requirement we got from customers was that it had to be",
    "start": "2209200",
    "end": "2214400"
  },
  {
    "text": "not as secure but more secure than anything that they could do inside their own inside their own walls",
    "start": "2214400",
    "end": "2220480"
  },
  {
    "text": "they wanted this to be more secure than something they could build themselves and manage themselves and the last requirement was that",
    "start": "2220480",
    "end": "2227359"
  },
  {
    "text": "they wanted it to be able to store anything not be limited by the size of objects that it could store or the size",
    "start": "2227359",
    "end": "2233599"
  },
  {
    "text": "of repositories they wanted the the promise of the cloud brought to source control systems for",
    "start": "2233599",
    "end": "2238800"
  },
  {
    "text": "them to be scalable infinitely scalable so we have been working on aws code",
    "start": "2238800",
    "end": "2244400"
  },
  {
    "start": "2242000",
    "end": "2390000"
  },
  {
    "text": "commit this was also pre-announced at re invent it is in private beta you can sign up on",
    "start": "2244400",
    "end": "2250320"
  },
  {
    "text": "the website we're letting customers in it will be released publicly soon",
    "start": "2250320",
    "end": "2256320"
  },
  {
    "text": "and this is you can think of it as get on top of s3 so it allows you to store private git",
    "start": "2256320",
    "end": "2262400"
  },
  {
    "text": "repositories in the cloud get on top of s3 that means you get the best of both worlds you get the familiar",
    "start": "2262400",
    "end": "2267520"
  },
  {
    "text": "git interface if you're using git today all the git operations will work without any modification",
    "start": "2267520",
    "end": "2273520"
  },
  {
    "text": "every git client will work it's a full fidelity full fidelity implementation of the git protocol",
    "start": "2273520",
    "end": "2278960"
  },
  {
    "text": "and you also get the benefits of the cloud which means that it's you get the durability uh guarantees of of s3 and",
    "start": "2278960",
    "end": "2285920"
  },
  {
    "text": "dynamodb so your data is replicated across different azs you get the availability of these",
    "start": "2285920",
    "end": "2291599"
  },
  {
    "text": "services you also get the scalability so there's no no size limit on the files",
    "start": "2291599",
    "end": "2297680"
  },
  {
    "text": "on the objects that you can store in this there's no there's no limit on how big a repository",
    "start": "2297680",
    "end": "2303280"
  },
  {
    "text": "can be and you can have infinite number of repositories so scaling in three different dimensions",
    "start": "2303280",
    "end": "2309839"
  },
  {
    "text": "and perhaps the most important thing is it's secure it uses im so you can use fine green",
    "start": "2309839",
    "end": "2315440"
  },
  {
    "text": "permissions and im to lock down uh your repository uh all the all the benefits of im are available",
    "start": "2315440",
    "end": "2321599"
  },
  {
    "text": "to code commit all the other features of im like saml integration and directory",
    "start": "2321599",
    "end": "2327680"
  },
  {
    "text": "integration ad integration are available with this and the last thing is it's integrated",
    "start": "2327680",
    "end": "2332880"
  },
  {
    "text": "with the key management service and for those who don't know the key management service was launched last year",
    "start": "2332880",
    "end": "2338079"
  },
  {
    "text": "and it allows you to uh encrypt data and add edible services with your own keys",
    "start": "2338079",
    "end": "2343359"
  },
  {
    "text": "so uh the key management service will provide your own keys and will allow you to encrypt data and s3 or rds or ebs uh",
    "start": "2343359",
    "end": "2350320"
  },
  {
    "text": "it is also integrated with code commit so that your data is encrypted at rest that means data in",
    "start": "2350320",
    "end": "2356079"
  },
  {
    "text": "code commit is encrypted in at rest and in transit uh pretty cool",
    "start": "2356079",
    "end": "2363599"
  },
  {
    "text": "um and as i said it's the same getting experience all the git commands that you love or",
    "start": "2363599",
    "end": "2369760"
  },
  {
    "text": "hate git commit get pushed they all work the same way the only thing that's different is that you're pointing at a",
    "start": "2369760",
    "end": "2374960"
  },
  {
    "text": "different endpoint you can see in the first line here i'm pointing it at an aws endpoint but everything else is",
    "start": "2374960",
    "end": "2380240"
  },
  {
    "text": "exactly the same the same experience",
    "start": "2380240",
    "end": "2385599"
  },
  {
    "text": "all right so to wrap up aws code commit is our private git",
    "start": "2385920",
    "end": "2393680"
  },
  {
    "start": "2390000",
    "end": "2457000"
  },
  {
    "text": "solution on the cloud you can think of it as git on top of s3 it is in private beta you can sign up",
    "start": "2393680",
    "end": "2400320"
  },
  {
    "text": "today we will be releasing this to the general public soon i encourage you to sign up if you're interested in trying",
    "start": "2400320",
    "end": "2407119"
  },
  {
    "text": "it early it was code pipeline is our release automation service uh based on pipelines the same tool we",
    "start": "2407119",
    "end": "2413760"
  },
  {
    "text": "use inside of amazon to automate our releases end-to-end same thing you can you can sign up for",
    "start": "2413760",
    "end": "2419599"
  },
  {
    "text": "the private beta if you're interested this will be launching soon and it was code deploy is available",
    "start": "2419599",
    "end": "2425599"
  },
  {
    "text": "today it launched last november this is our deployment service that allows you to automate your deployments",
    "start": "2425599",
    "end": "2431200"
  },
  {
    "text": "it is based on apollo the internal deployment system uh that we use inside of amazon and have been using for a",
    "start": "2431200",
    "end": "2436640"
  },
  {
    "text": "dozen years i encourage you to use that today you can use it to deploy dc2 as well as to your own",
    "start": "2436640",
    "end": "2442560"
  },
  {
    "text": "instances in your own data center or any device with an internet connection",
    "start": "2442560",
    "end": "2447839"
  },
  {
    "text": "thank you for listening i i'll stick around if anyone has questions but thank you",
    "start": "2447839",
    "end": "2455800"
  }
]