[
  {
    "text": "hi everybody thanks for coming I know there's a lot of talks I really appreciate you guys coming to this one",
    "start": "2040",
    "end": "7799"
  },
  {
    "text": "uh my name is Mitch Garnet I'm director of uh operations at scopely and today we're going to be",
    "start": "7799",
    "end": "13639"
  },
  {
    "text": "talking about our continuous deployment pipeline that we put together over the",
    "start": "13639",
    "end": "18800"
  },
  {
    "text": "last three months and uh I don't know if you guys have been to the Keynotes but it's kind of interesting that uh the the",
    "start": "18800",
    "end": "25119"
  },
  {
    "text": "idea of deployment has come up a lot in the in the Keynotes um on Tuesday there was the",
    "start": "25119",
    "end": "30640"
  },
  {
    "text": "uh new service the code deploy service that was announced which is is really cool uh and today's keynote uh in the",
    "start": "30640",
    "end": "38719"
  },
  {
    "text": "docker conversation there was talk about green blue deployments uh and which is something we're going to be talking",
    "start": "38719",
    "end": "44280"
  },
  {
    "text": "about today so everybody's talking about deployments including",
    "start": "44280",
    "end": "49079"
  },
  {
    "text": "us so if you haven't heard of scopely um we are a mobile gaming company so we do",
    "start": "49960",
    "end": "57280"
  },
  {
    "text": "IOS and Android games Facebook games um",
    "start": "57280",
    "end": "62840"
  },
  {
    "text": "we getting the wrong slide here sorry uh we've got a number of really popular",
    "start": "62840",
    "end": "69360"
  },
  {
    "text": "games uh and more of them coming all the time uh we've got about 35 million users",
    "start": "69360",
    "end": "74840"
  },
  {
    "text": "across all of our games and on any given day we're handling billions of requests",
    "start": "74840",
    "end": "81119"
  },
  {
    "text": "uh from users of our games and uh we are 100% on Amazon web",
    "start": "81119",
    "end": "88840"
  },
  {
    "text": "services so",
    "start": "88840",
    "end": "94000"
  },
  {
    "text": "deployment um software deployment is something I if you Google it or Google",
    "start": "94000",
    "end": "100079"
  },
  {
    "text": "deployment pipelines um there's a lot of information on deployment it's something",
    "start": "100079",
    "end": "105119"
  },
  {
    "text": "we as software developers talk about a lot it's kind of a big deal uh it's",
    "start": "105119",
    "end": "110360"
  },
  {
    "text": "really what we need to go through the steps we need to go through to get our software in the hands of our users",
    "start": "110360",
    "end": "115960"
  },
  {
    "text": "really so it's pretty important um in the the old days deployment was more",
    "start": "115960",
    "end": "121520"
  },
  {
    "text": "about you know building burning discs and and shipping them around now I'm sure for everybody in this room",
    "start": "121520",
    "end": "127320"
  },
  {
    "text": "deployment means getting some software up on some servers in the web somewhere probably in Amazon web",
    "start": "127320",
    "end": "133959"
  },
  {
    "text": "services so while we talk about deployment a lot and it's a really big deal for us the thing is that for",
    "start": "133959",
    "end": "142200"
  },
  {
    "text": "customers um they don't really think about deployment and they shouldn't ever have to think about deployment so from a",
    "start": "142200",
    "end": "149000"
  },
  {
    "text": "customer's point of view if they're sitting there playing one of our mobile games and we deploy some new software uh",
    "start": "149000",
    "end": "154760"
  },
  {
    "text": "what we want them to see is basically nothing we want it to be a seamless experience for them and uh the only",
    "start": "154760",
    "end": "162519"
  },
  {
    "text": "thing they might notice is maybe there'll be a new feature that wasn't there before or maybe some bug that used to be there is now fixed but there",
    "start": "162519",
    "end": "169440"
  },
  {
    "text": "should be no uh break in their experience so that's really important",
    "start": "169440",
    "end": "174640"
  },
  {
    "text": "for uh us as a company to maintain that user experience",
    "start": "174640",
    "end": "181760"
  },
  {
    "text": "so you know just to one more quote and this one's from me but something along these lines if you ever are in a",
    "start": "181760",
    "end": "187920"
  },
  {
    "text": "position where you've got to talk to your customers or talk to uh your",
    "start": "187920",
    "end": "193159"
  },
  {
    "text": "management or talk to the Business Leaders in your company about software deployment then probably something's",
    "start": "193159",
    "end": "198480"
  },
  {
    "text": "gone really wrong because they should never have to know about it that's the thing for us to worry about and if it",
    "start": "198480",
    "end": "203519"
  },
  {
    "text": "ever kind of breaks out of that world then something's gone",
    "start": "203519",
    "end": "208680"
  },
  {
    "text": "wrong so the basic uh topics for today are uh I kind of wanted to go over the",
    "start": "208680",
    "end": "215159"
  },
  {
    "text": "goals you know what we wanted to accomplish with the deployment pipeline that we built talk a little bit about",
    "start": "215159",
    "end": "221000"
  },
  {
    "text": "green blue deployments which again we heard a little bit about in the keynote today and uh think about sort of a high",
    "start": "221000",
    "end": "228720"
  },
  {
    "text": "level view about of how our actual deployment works and how it differs from traditional green blue deployment and",
    "start": "228720",
    "end": "234560"
  },
  {
    "text": "then we'll try to dive into a little bit more detail on how our dep deployment pipeline actually works so that's the",
    "start": "234560",
    "end": "241760"
  },
  {
    "text": "agenda so in building this pipeline which we've sort of done over the past",
    "start": "241760",
    "end": "247000"
  },
  {
    "text": "three or four months probably um we wanted to have obviously a very automatable repeatable process we want",
    "start": "247000",
    "end": "254120"
  },
  {
    "text": "to be able to you don't want have to have to be me messing around manually in a deployment process you as as much as",
    "start": "254120",
    "end": "260600"
  },
  {
    "text": "possible want it to be push a button and things happen um another important goal",
    "start": "260600",
    "end": "266479"
  },
  {
    "text": "for us was to be compatible with the autoscaling service uh the deployment approach that we used",
    "start": "266479",
    "end": "273520"
  },
  {
    "text": "previous to this pipeline that we put together uh really was not compatible",
    "start": "273520",
    "end": "278600"
  },
  {
    "text": "with autoscaling uh and because it was sort of based on a Model that's much",
    "start": "278600",
    "end": "283880"
  },
  {
    "text": "more um uh tra much more of a traditional model where you've got a fleet of servers they're static and",
    "start": "283880",
    "end": "290080"
  },
  {
    "text": "you're kind of constantly updating those servers with new versions of software but if you want to do autoscaling you",
    "start": "290080",
    "end": "295199"
  },
  {
    "text": "need to be able to allow the autoscaling service to create a new instance on your behalf at any time and it's got to be",
    "start": "295199",
    "end": "301880"
  },
  {
    "text": "able to you have to be able to ensure that the right software is on that new instance each time it fires up so that",
    "start": "301880",
    "end": "307960"
  },
  {
    "text": "didn't really fit into our our deployment model at all and so we weren't really benefiting from uh Auto",
    "start": "307960",
    "end": "314919"
  },
  {
    "text": "scaling and it's a very cyclical business up daily and over the weekend so there was a lot of uh cost savings we",
    "start": "314919",
    "end": "320759"
  },
  {
    "text": "could incur uh gain from from using autoscaling um another major factor was",
    "start": "320759",
    "end": "326440"
  },
  {
    "text": "to be able to uh roll back deployments so uh no matter how much you test no matter",
    "start": "326440",
    "end": "331520"
  },
  {
    "text": "what goes how much effort you put into it uh there are times when you deploy software that you really shouldn't have",
    "start": "331520",
    "end": "337319"
  },
  {
    "text": "deployed and you want to have a way to back that software out as quickly as possible with as little impact on your",
    "start": "337319",
    "end": "343800"
  },
  {
    "text": "users uh the games that we produce are uh very social games so there are a lot",
    "start": "343800",
    "end": "349520"
  },
  {
    "text": "of interactions with friends there's a lot of uh interactions with our servers so any disruption in in our servers",
    "start": "349520",
    "end": "357680"
  },
  {
    "text": "while a player is playing the game is going to be very disruptive and they're probably going to get fed up stop",
    "start": "357680",
    "end": "364360"
  },
  {
    "text": "playing the game and that's the last thing we want to have happen we want them to keep playing our games so in sort of researching uh what",
    "start": "364360",
    "end": "372560"
  },
  {
    "text": "we wanted to do and how we wanted to redo our pipeline uh one thing that we read about and and studied was this idea",
    "start": "372560",
    "end": "379440"
  },
  {
    "text": "of a blue green deployment and it seemed like it was a model that fit into a lot of our",
    "start": "379440",
    "end": "385120"
  },
  {
    "text": "requirements so I don't know how many people are familiar but I thought I'd just kind of walk through sort of what a",
    "start": "388080",
    "end": "393560"
  },
  {
    "text": "blue green deployment actually is um in a Blu green deployment you have",
    "start": "393560",
    "end": "400720"
  },
  {
    "text": "two identical clusters of servers so one is always hot serving production traffic",
    "start": "400720",
    "end": "407360"
  },
  {
    "text": "and that's called the Blue cluster so your blue cluster is always live always serving traffic and basically all your",
    "start": "407360",
    "end": "414680"
  },
  {
    "text": "customers are hitting that particular cluster you have another cluster called the green cluster which is which is just",
    "start": "414680",
    "end": "420080"
  },
  {
    "text": "sitting idle in this period of time so it's just sitting there waiting for you to use it when you want to deploy software you",
    "start": "420080",
    "end": "427599"
  },
  {
    "text": "would basically install the new software on all the instances within your green cluster uh through whatever mechanism",
    "start": "427599",
    "end": "434879"
  },
  {
    "text": "you want to use but now the green cluster has all your new software on",
    "start": "434879",
    "end": "440039"
  },
  {
    "text": "it the next step in a blue green deployment is that you would run a very thorough acceptance test on the software",
    "start": "440039",
    "end": "447360"
  },
  {
    "text": "that you've just installed in the green cluster so so meanwhile your blue cluster is still serving your customers the old version of your software but",
    "start": "447360",
    "end": "454120"
  },
  {
    "text": "you're running this acceptance test against the Green cluster to kind of convince yourself that the code that",
    "start": "454120",
    "end": "459840"
  },
  {
    "text": "you've deployed into that green cluster is ready to go and then the final The Next Step",
    "start": "459840",
    "end": "466560"
  },
  {
    "text": "would be to basically switch production traffic from the blue cluster to the green cluster and that switch is usually",
    "start": "466560",
    "end": "472680"
  },
  {
    "text": "done uh instantaneous or as quickly as possible all at once so in a traditional",
    "start": "472680",
    "end": "477960"
  },
  {
    "text": "data center you you know you some sort of a router switch or something but that switch is made all at once so you know",
    "start": "477960",
    "end": "484479"
  },
  {
    "text": "one moment in time everybody's using the old software and essentially the next Mo moment in time everybody's using the new",
    "start": "484479",
    "end": "491800"
  },
  {
    "text": "software and then the final step is you sort of turn the green cluster um at",
    "start": "491800",
    "end": "497960"
  },
  {
    "text": "least logically Into the Blue cluster it's now the production cluster and the other cluster which was previously blue",
    "start": "497960",
    "end": "505800"
  },
  {
    "text": "uh is now green and available for deployment of your next version and testing so that's sort of how a Blu",
    "start": "505800",
    "end": "512000"
  },
  {
    "text": "green deployment Works uh classically anyway uh in in thinking through that",
    "start": "512000",
    "end": "518518"
  },
  {
    "text": "and how that fit in with scopely and our workflow and our uh I'm just sort of",
    "start": "518519",
    "end": "523719"
  },
  {
    "text": "reiterating what a Blu green deployment is here two identical clusters full acceptance test on the candidate switch",
    "start": "523719",
    "end": "529480"
  },
  {
    "text": "traffic all at once so those are the kind of primary uh factors in a blue",
    "start": "529480",
    "end": "534839"
  },
  {
    "text": "green deployment in thinking through that and how it applies to what we do and the way",
    "start": "534839",
    "end": "540800"
  },
  {
    "text": "that we work uh there were a couple of issues that we had uh in thinking through this uh one is that it's",
    "start": "540800",
    "end": "548959"
  },
  {
    "text": "expensive although that's much less of a issue these days with Amazon obviously you can these those servers don't have",
    "start": "548959",
    "end": "555440"
  },
  {
    "text": "to sit there all the time but there is a significant amount of time when you've got two full clusters where there lots",
    "start": "555440",
    "end": "562079"
  },
  {
    "text": "of things happening with them so there's some additional expense there which is one one factor um another really",
    "start": "562079",
    "end": "569200"
  },
  {
    "text": "critical part of Blu green deployment is that the acceptance tests are crucial so you have to be really confident the",
    "start": "569200",
    "end": "576040"
  },
  {
    "text": "acceptance tests that you have are able to run against your new software is going to tell you whether there's a",
    "start": "576040",
    "end": "581200"
  },
  {
    "text": "problem or not uh not everybody is in a position where they have tests that are that thorough that they have that much",
    "start": "581200",
    "end": "587360"
  },
  {
    "text": "confidence in um the third thing really is that you",
    "start": "587360",
    "end": "593600"
  },
  {
    "text": "know if you were running this in a data center there's some really easy ways to switch that traffic that would have have",
    "start": "593600",
    "end": "599320"
  },
  {
    "text": "no impact on your customers at all it happens completely within your own data center uh no DNS changes nothing has to",
    "start": "599320",
    "end": "605920"
  },
  {
    "text": "happen but when you're working in the cloud uh you don't really have that option so there's basically the normal",
    "start": "605920",
    "end": "613240"
  },
  {
    "text": "way that you would accomplish blue green deployment in something like Amazon is you would have two separate elastic load",
    "start": "613240",
    "end": "619880"
  },
  {
    "text": "balancer groups you know one represents the blue group one represents the green group and you would when you when it's",
    "start": "619880",
    "end": "627360"
  },
  {
    "text": "time to switch you would basically do some sort of a DNS change to change the C name record that points to your blue",
    "start": "627360",
    "end": "633920"
  },
  {
    "text": "group over to point to the green group and that would be the way that you would try to direct people over to the new",
    "start": "633920",
    "end": "640040"
  },
  {
    "text": "version of your software um the issue with that that we found in",
    "start": "640040",
    "end": "645639"
  },
  {
    "text": "doing some testing and kind of doing some research is that DNS clients really don't behave themselves well so if you",
    "start": "645639",
    "end": "654440"
  },
  {
    "text": "made a DNS change and let's say you had a really short TTL on on your record so you said that the TTL on this DNS record",
    "start": "654440",
    "end": "661519"
  },
  {
    "text": "is 15 seconds what's that what that's supposed to mean is that any DNS client",
    "start": "661519",
    "end": "666680"
  },
  {
    "text": "who is looking up that record should know and be careful about checking with",
    "start": "666680",
    "end": "671800"
  },
  {
    "text": "the DNS server every 15 seconds to see if there's a new value or not has it changed has it changed what happens in",
    "start": "671800",
    "end": "678320"
  },
  {
    "text": "practice though is that a lot of DNS uh clients just ignore that so they they",
    "start": "678320",
    "end": "683760"
  },
  {
    "text": "basically don't check so you can make you can change the record you can tell DNS",
    "start": "683760",
    "end": "689519"
  },
  {
    "text": "that it should be pointed here but if the client never actually goes and checks again it's still going to be",
    "start": "689519",
    "end": "695200"
  },
  {
    "text": "sending requests to the old to the old endpoint and that's not going to be good um the other issue is that as I",
    "start": "695200",
    "end": "703480"
  },
  {
    "text": "said you normally have two elastic load balancers in that scenario one your blue",
    "start": "703480",
    "end": "708519"
  },
  {
    "text": "one is all warmed up it's ready to go it's been handling hundreds of thousands of requests a minute for you know hours",
    "start": "708519",
    "end": "715040"
  },
  {
    "text": "or days and then you got this other one that you just created for this purpose and you've put some servers in it um and",
    "start": "715040",
    "end": "722200"
  },
  {
    "text": "you make the switch but the problem with that approach is that uh it's called elastic for a reason it's an elastic",
    "start": "722200",
    "end": "727480"
  },
  {
    "text": "load balancer that grows and shrinks based on the amount of traffic that it's getting so if it's a brand new one they",
    "start": "727480",
    "end": "734040"
  },
  {
    "text": "don't create a brand new one this big they create a brand new one this big and let it scale up to the size to meet your",
    "start": "734040",
    "end": "740199"
  },
  {
    "text": "traffic so if you immediately switched over to that that other elastic load",
    "start": "740199",
    "end": "745240"
  },
  {
    "text": "balancer group other elastic load balancer the new one uh and tried to throw hundreds of thousands of requests",
    "start": "745240",
    "end": "751160"
  },
  {
    "text": "per minute at that particular server or elb uh you'd be getting a lot of Errors",
    "start": "751160",
    "end": "757000"
  },
  {
    "text": "so it'd be a very unpleasant experience for your customers and and for you so uh",
    "start": "757000",
    "end": "762440"
  },
  {
    "text": "there's ways around that you can warm it up ahead of time you can if you have the right service contract with Amazon you",
    "start": "762440",
    "end": "768480"
  },
  {
    "text": "can actually call them or or create a ticket and have them warm it up for you but all those things are just more",
    "start": "768480",
    "end": "773959"
  },
  {
    "text": "moving pieces more complexity in the process",
    "start": "773959",
    "end": "780079"
  },
  {
    "text": "so what we decided to do was sort of merge those a little bit and kind of a mixture of green and blue uh we kind of",
    "start": "780079",
    "end": "787399"
  },
  {
    "text": "call it cyan I think I've heard somebody call it purple before depends on whether you like additive color or subtractive I",
    "start": "787399",
    "end": "792760"
  },
  {
    "text": "guess but it's kind of a a blending of these that fits our purposes really well so some of the differences are that it's",
    "start": "792760",
    "end": "800320"
  },
  {
    "text": "has qualities of a canary release if you ever heard of a canary release which is the idea of sort of dipping your toe in",
    "start": "800320",
    "end": "806560"
  },
  {
    "text": "trying out your new software on a small subset of the production traffic before",
    "start": "806560",
    "end": "812160"
  },
  {
    "text": "you actually expand it out to a bigger audience um it sort of acknowledges",
    "start": "812160",
    "end": "819000"
  },
  {
    "text": "implicitly that your acceptance tests are incomplete so we've got a pretty good set of tests we've got unit tests",
    "start": "819000",
    "end": "825000"
  },
  {
    "text": "we've got integration tests but we didn't have a set of tests that we were comfortable with saying if it passes",
    "start": "825000",
    "end": "831079"
  },
  {
    "text": "these tests turn everybody live onto this new set of Cl software right now so we wanted to have a more gradual way of",
    "start": "831079",
    "end": "838040"
  },
  {
    "text": "doing that um another really nice benefit of this approach is that there's only a single",
    "start": "838040",
    "end": "844240"
  },
  {
    "text": "elb involved in this so we never have to create another elb we don't have to warm it up we don't have to worry about it",
    "start": "844240",
    "end": "850120"
  },
  {
    "text": "not being ready to accept the traffic that we're throwing at it because it's the same elb that we were just using",
    "start": "850120",
    "end": "855680"
  },
  {
    "text": "before and there's no DNS changes so again that the DNS stuff should work and",
    "start": "855680",
    "end": "862199"
  },
  {
    "text": "a lot maybe some of you have found it to work but we've had a lot of issues trying to do these kinds of switches",
    "start": "862199",
    "end": "867519"
  },
  {
    "text": "through DNS changes so in general there's just a lot fewer",
    "start": "867519",
    "end": "873639"
  },
  {
    "text": "moving pieces and it allows us to sort of gradually figure out whether our software is ready to be deployed or not",
    "start": "873639",
    "end": "880639"
  },
  {
    "text": "and it gives us still gives us an easy way to back out so that's kind of the basic idea behind the this",
    "start": "880639",
    "end": "888839"
  },
  {
    "text": "approach and what I'd like to do is just walk through this at a high level show you",
    "start": "888839",
    "end": "895759"
  },
  {
    "text": "each of the steps in the deployment Pipeline and then we can kind of dig into each of those steps in a little bit more detail and hopefully at the end",
    "start": "895759",
    "end": "902680"
  },
  {
    "text": "we'll have enough time to talk about monitoring as well which is another big piece of deployment so this is our",
    "start": "902680",
    "end": "908639"
  },
  {
    "text": "starting State this is our steady state uh we've got production traffic hitting a load balancer an auto scaling group",
    "start": "908639",
    "end": "915639"
  },
  {
    "text": "that's been that's our blue group and in fact we actually label it or tag it in ec2 as blue uh with some number of",
    "start": "915639",
    "end": "922959"
  },
  {
    "text": "instances in it that are appropriate for the amount of traffic we're getting right now",
    "start": "922959",
    "end": "929959"
  },
  {
    "text": "so the first sort of Step In This pipeline really doesn't have anything to do with deploying software to production",
    "start": "929959",
    "end": "936319"
  },
  {
    "text": "because we really want to have a continuous pipeline that moves us all the way from development all the way",
    "start": "936319",
    "end": "941800"
  },
  {
    "text": "through to production so the first step is what we call preview and the purpose of preview is to allow us to test every",
    "start": "941800",
    "end": "949160"
  },
  {
    "text": "change that we make in our software as we are making it so the this particular",
    "start": "949160",
    "end": "955639"
  },
  {
    "text": "step is initiated by a check-in into to the de velop branch of our GitHub repository so some developers committed",
    "start": "955639",
    "end": "963079"
  },
  {
    "text": "some new code into the develop branch and that kicks off this whole process the",
    "start": "963079",
    "end": "969079"
  },
  {
    "text": "process uh continues by basically building artifacts that represent the difference between the last known State",
    "start": "969079",
    "end": "976680"
  },
  {
    "text": "we had of the software and the changes that we made and those Deltas those uh",
    "start": "976680",
    "end": "982199"
  },
  {
    "text": "build artifacts are pushed up to an S3 bucket uh the next step is we spin up uh",
    "start": "982199",
    "end": "988839"
  },
  {
    "text": "a preview instance uh based on sort of the last snapshot of the Ser of the of",
    "start": "988839",
    "end": "995079"
  },
  {
    "text": "the uh of our software that we've that we've snapshotted we bring up a new instance that that is our preview",
    "start": "995079",
    "end": "1001600"
  },
  {
    "text": "instance and then the step four we employ we deploy those Deltas onto that new preview instance and at that point",
    "start": "1001600",
    "end": "1008720"
  },
  {
    "text": "we have a a single instance this is not running in production this is running in a Dev environment that has the new",
    "start": "1008720",
    "end": "1015240"
  },
  {
    "text": "software and we can run tests again so and that all happens automated uh as we'll see in a little bit uh as we go",
    "start": "1015240",
    "end": "1022639"
  },
  {
    "text": "further through the talk so that's step one preview okay the next step is what we",
    "start": "1022639",
    "end": "1029360"
  },
  {
    "text": "call bake and the point of bake is to create the actual build artifact that",
    "start": "1029360",
    "end": "1034640"
  },
  {
    "text": "we're going to deploy in the autoscaling group so this particular step is triggered by a merge from our develop",
    "start": "1034640",
    "end": "1041038"
  },
  {
    "text": "Branch to our Master Branch so when we merge from develop to master that",
    "start": "1041039",
    "end": "1046120"
  },
  {
    "text": "basically means we're making a release and I think a lot of people sort of run their GitHub repos that way so that",
    "start": "1046120",
    "end": "1051360"
  },
  {
    "text": "means it's a it's a build it's a release we build that software we test it and then the final step of the process is we",
    "start": "1051360",
    "end": "1058720"
  },
  {
    "text": "actually create an Ami based on that software so we create an Amazon machine",
    "start": "1058720",
    "end": "1064280"
  },
  {
    "text": "image that has all the all the latest software and everything we need ready to go baked as an Ami so that's the bake",
    "start": "1064280",
    "end": "1071640"
  },
  {
    "text": "step and again we'll get into all these in a little bit more detail as we go uh a little bit of an aside about the",
    "start": "1071640",
    "end": "1079039"
  },
  {
    "text": "builds you know generally you run into two different approaches with this build",
    "start": "1079039",
    "end": "1084520"
  },
  {
    "text": "process uh the one I've just describe which is the one that we use uh is",
    "start": "1084520",
    "end": "1089880"
  },
  {
    "text": "sometimes referred to as a golden Nami approach but the idea is that you the output of your build process is an Ami",
    "start": "1089880",
    "end": "1096080"
  },
  {
    "text": "it's an image machine image that has everything on it all ready to go nothing else is required um the other approach",
    "start": "1096080",
    "end": "1103760"
  },
  {
    "text": "would be to have a base image that has a lot of your common software installed but the things that don't change very",
    "start": "1103760",
    "end": "1109960"
  },
  {
    "text": "often that you'd start that up as as your instance and then there would be some process that would have to deploy",
    "start": "1109960",
    "end": "1116720"
  },
  {
    "text": "your latest version of the software onto that instance before you actually turn it on in your autoscaling group or in",
    "start": "1116720",
    "end": "1123200"
  },
  {
    "text": "your elb so two different ways of doing it both of them can work uh and have",
    "start": "1123200",
    "end": "1130000"
  },
  {
    "text": "been shown to work we've basically taken this golden Ami approach because it it",
    "start": "1130000",
    "end": "1135360"
  },
  {
    "text": "um we like the fact that all of our dependencies are resolved at build time so if there's any issue with uh some",
    "start": "1135360",
    "end": "1141840"
  },
  {
    "text": "repo not being available or anything at all that's all going to happen when we're building not when we're deploying",
    "start": "1141840",
    "end": "1148520"
  },
  {
    "text": "we get end up with a Amazon machine image that has everything we need it's all ready to go uh it's also faster at",
    "start": "1148520",
    "end": "1155919"
  },
  {
    "text": "start time because there's no deployment process happening right then um we actually use Windows instances for a lot",
    "start": "1155919",
    "end": "1162200"
  },
  {
    "text": "of our gaming servers not all of them um Windows servers take quite a bit longer to start anyway so",
    "start": "1162200",
    "end": "1168799"
  },
  {
    "text": "anything you can do to shorten that time is is is good and this also fits in with our",
    "start": "1168799",
    "end": "1175600"
  },
  {
    "text": "release Cadence so uh we don't do like many releases a day we do probably",
    "start": "1175600",
    "end": "1182120"
  },
  {
    "text": "several releases a week for a a game at the most so you know the process of",
    "start": "1182120",
    "end": "1187640"
  },
  {
    "text": "baking an Ami and building it into you know that that can take a little bit of time but in the Cadence of releases that",
    "start": "1187640",
    "end": "1193159"
  },
  {
    "text": "we have it works out fine it's if you were trying to do you know a release every single change you know every 10",
    "start": "1193159",
    "end": "1199320"
  },
  {
    "text": "minutes or every 15 minutes this may not work out for you so after we bake the Yi the next",
    "start": "1199320",
    "end": "1206960"
  },
  {
    "text": "step in the release process would be staging and what happens in staging is we actually create uh another",
    "start": "1206960",
    "end": "1214440"
  },
  {
    "text": "autoscaling group and Associate it or attach it to the same elb that we're using for production so sometimes you",
    "start": "1214440",
    "end": "1222600"
  },
  {
    "text": "know when people hear that that it sounds like it's would be exactly the thing you wouldn't want to do doesn't",
    "start": "1222600",
    "end": "1228200"
  },
  {
    "text": "that screw up the the instances that are already running in your in the other Auto scaling group in your elb and the",
    "start": "1228200",
    "end": "1233400"
  },
  {
    "text": "answer is it really doesn't in fact they're sort of designed to work this way um all the instances in our elb that",
    "start": "1233400",
    "end": "1240559"
  },
  {
    "text": "are running in production currently before we start staging are all controlled by a single autoscaling group",
    "start": "1240559",
    "end": "1246080"
  },
  {
    "text": "we're creating a whole another autoscaling group and creating instances in there it doesn't have any knowledge",
    "start": "1246080",
    "end": "1252400"
  },
  {
    "text": "of the other instances that are being managed by the other autoscaling group so it's not going to attempt to scale",
    "start": "1252400",
    "end": "1257520"
  },
  {
    "text": "them up or scale them down or do anything with them it just basically ignores them it doesn't know a thing about them which is exactly what we want",
    "start": "1257520",
    "end": "1263919"
  },
  {
    "text": "really so we create another autoscaling group uh create one or a couple of",
    "start": "1263919",
    "end": "1269880"
  },
  {
    "text": "instances within it a small number and that's the the staging",
    "start": "1269880",
    "end": "1276000"
  },
  {
    "text": "process so once we've staged it we monitor that staged instance very",
    "start": "1276000",
    "end": "1282080"
  },
  {
    "text": "carefully so now we're actually sending production traffic to uh this one or two",
    "start": "1282080",
    "end": "1288279"
  },
  {
    "text": "small instances that we have within the the green group so we want to really",
    "start": "1288279",
    "end": "1294400"
  },
  {
    "text": "monitor those carefully make sure things are going okay if there's any pro kind of a problem we would want to figure out",
    "start": "1294400",
    "end": "1300360"
  },
  {
    "text": "what to do about it if everything goes smoothly though at that point The Next Step would be to scale it up so",
    "start": "1300360",
    "end": "1305520"
  },
  {
    "text": "basically we need to adjust the autoscaling group to bring up as many instances instances as we need to uh",
    "start": "1305520",
    "end": "1312919"
  },
  {
    "text": "handle the traffic currently in the auto in the elb so that's the scaling group scaling St",
    "start": "1312919",
    "end": "1318559"
  },
  {
    "text": "step and then the final step in a successful deployment would be the switch so basically we switch all the",
    "start": "1318559",
    "end": "1326120"
  },
  {
    "text": "traffic we we kind of get rid of the blue group The Green group is still there it's still in the elb and it just",
    "start": "1326120",
    "end": "1333720"
  },
  {
    "text": "starts handling all the traffic there's no instances there running the old software anymore so now at this point we've switched over and all customers",
    "start": "1333720",
    "end": "1340760"
  },
  {
    "text": "are hitting the new software if we did run into a problem anywhere in that process we would need",
    "start": "1340760",
    "end": "1347679"
  },
  {
    "text": "to basically get rid of the green group that we had brought up and just leave the blue group as it is so that's our",
    "start": "1347679",
    "end": "1353720"
  },
  {
    "text": "that's our roll back process and then in the ending State we",
    "start": "1353720",
    "end": "1360039"
  },
  {
    "text": "basically relabel the green group to be the BL blue group and we're good to",
    "start": "1360039",
    "end": "1366960"
  },
  {
    "text": "go so that's kind of the high level view of it and what I'd like to do now is just step through each of those and give",
    "start": "1369320",
    "end": "1375799"
  },
  {
    "text": "you a little bit more detail of what's actually happening behind behind the scenes and also talk a little bit about",
    "start": "1375799",
    "end": "1381000"
  },
  {
    "text": "the tools that we've been building to sort of help us with this",
    "start": "1381000",
    "end": "1387679"
  },
  {
    "text": "process so just to review the deployment steps our preview bake stage scale roll back switch those are the steps of our",
    "start": "1392600",
    "end": "1401039"
  },
  {
    "text": "process so in preview as I said this is triggered by a commit to our develop",
    "start": "1401039",
    "end": "1406720"
  },
  {
    "text": "Branch the whole process is orchestrated by Jenkins we create a single instance",
    "start": "1406720",
    "end": "1411919"
  },
  {
    "text": "we provision it using anible and in the white box there you can see the actual command that we run",
    "start": "1411919",
    "end": "1418640"
  },
  {
    "text": "that actually does this for us uh it's using a command called Fleet this is not to be confused with the coreos fleet",
    "start": "1418640",
    "end": "1425320"
  },
  {
    "text": "this is a tool that we've written that I'll talk about a little bit more in a minute uh but the the whole preview step",
    "start": "1425320",
    "end": "1433159"
  },
  {
    "text": "can be done with a single command basically um a little bit of an aside",
    "start": "1433159",
    "end": "1439840"
  },
  {
    "text": "about anible so why do we pick ansible for this process uh one is it it's python based and we're python shop on at",
    "start": "1439840",
    "end": "1446919"
  },
  {
    "text": "least on the devop side of things so it's something that's easy for us to extend it's easy for us to understand uh",
    "start": "1446919",
    "end": "1454360"
  },
  {
    "text": "it's also an agentless uh deployment technology so we don't have to have any",
    "start": "1454360",
    "end": "1459520"
  },
  {
    "text": "kind of an agent installed on our servers which is kind of makes it easier to manage there's no Central server",
    "start": "1459520",
    "end": "1465159"
  },
  {
    "text": "either um and because our deployment really happens at build time it's a very",
    "start": "1465159",
    "end": "1471640"
  },
  {
    "text": "simple process we're really just deploying the software to a single instance that we will then bake into an",
    "start": "1471640",
    "end": "1476840"
  },
  {
    "text": "armi so it's uh we don't really have any issues sometimes people uh if you've got thousands of instances or something",
    "start": "1476840",
    "end": "1484120"
  },
  {
    "text": "using an agentless uh deployment strategy a push kind of strategy can be uh can can be a little bit honorous but",
    "start": "1484120",
    "end": "1490799"
  },
  {
    "text": "in our case it works out just fine so we've been really happy with ansible and then the command the the",
    "start": "1490799",
    "end": "1497799"
  },
  {
    "text": "tool that I mentioned there the fleet commander um is basically a utility that",
    "start": "1497799",
    "end": "1503159"
  },
  {
    "text": "we've written it's a python command line tool sort of built on top of Botto and some other tools uh and it allows us to",
    "start": "1503159",
    "end": "1509640"
  },
  {
    "text": "do things with individual ec2 instances which is what we're doing in this case for preview um it allows us to also",
    "start": "1509640",
    "end": "1515880"
  },
  {
    "text": "manipulate Auto scaling groups and uh just gener generic AWS cloud formation",
    "start": "1515880",
    "end": "1521840"
  },
  {
    "text": "Stacks that we want to be able to manipulate so it's just a tool that we' built on top of an an existing base of",
    "start": "1521840",
    "end": "1527960"
  },
  {
    "text": "tools that sort of tailor this process a little bit closer to the way that we think about our",
    "start": "1527960",
    "end": "1535120"
  },
  {
    "text": "deployment this is um of course there's a config file for everything this is our the yaml config file uh an example of a",
    "start": "1535880",
    "end": "1543799"
  },
  {
    "text": "yaml config config file for a fleet commander uh it has the kind of stuff you would sort of think about at the",
    "start": "1543799",
    "end": "1549880"
  },
  {
    "text": "elbs that we're dealing with us that would be the name of the elb do a lot of stuff with New Relic which I'll talk about a bit later uh so there's some New",
    "start": "1549880",
    "end": "1556600"
  },
  {
    "text": "Relic stuff happening in this config file it has a lot of properties",
    "start": "1556600",
    "end": "1561799"
  },
  {
    "text": "associated with things like the instance and the autoscaling groups those properties are uh we'll see in a minute",
    "start": "1561799",
    "end": "1571360"
  },
  {
    "text": "basically get mapped to uh parameters within a cloud formation template and it allows us to do things",
    "start": "1571360",
    "end": "1578679"
  },
  {
    "text": "across multiple accounts if we need to so that's sort of the information that you see within a yaml config file",
    "start": "1578679",
    "end": "1587480"
  },
  {
    "text": "um we also use cloud formation a lot so this would for example be a cloud formation template that allows us to",
    "start": "1587480",
    "end": "1594840"
  },
  {
    "text": "create that new autoscaling group and really I'm not going to go through it in detail but the thing I would say is that",
    "start": "1594840",
    "end": "1602039"
  },
  {
    "text": "these parameters or these cloudformation templates are heavily parameterized we try to make them as flexible as possible",
    "start": "1602039",
    "end": "1608760"
  },
  {
    "text": "and then the really one of the main jobs of the fleet tool that we are talking about here is to take the parameters",
    "start": "1608760",
    "end": "1614240"
  },
  {
    "text": "from that yaml config file and basically map them to the parameters in the cloud formation template so we get to be makes",
    "start": "1614240",
    "end": "1620559"
  },
  {
    "text": "it really easy to reuse these heavily parameterized cloud formation templates in lots of different ways with the",
    "start": "1620559",
    "end": "1626039"
  },
  {
    "text": "actual configuration sort of being uh maintained within a yo config excuse me",
    "start": "1626039",
    "end": "1632200"
  },
  {
    "text": "a yaml config file so it's works out well for",
    "start": "1632200",
    "end": "1637320"
  },
  {
    "text": "us okay for the next step the bake uh again it's triggered by a merge",
    "start": "1637320",
    "end": "1643120"
  },
  {
    "text": "to master more Jenkin stuff to sort of Drive the whole thing we create an instance we provision it using anle we",
    "start": "1643120",
    "end": "1650760"
  },
  {
    "text": "create an Ami and that whole process is is accomplished with a single command Ami baking bake so Ami baking is another",
    "start": "1650760",
    "end": "1658799"
  },
  {
    "text": "tool that we've developed another python CLI tool it's kind of like a really simplified hybrid",
    "start": "1658799",
    "end": "1665320"
  },
  {
    "text": "between vagrant and Packer um we don't really need to do anything other than AWS that's the only thing that we deal",
    "start": "1665320",
    "end": "1671399"
  },
  {
    "text": "with we don't deal with other VMS or other systems um it ALS we also only",
    "start": "1671399",
    "end": "1677200"
  },
  {
    "text": "need to to deal with anible we don't deal with Chef or puppet or any of the other config management tools so we sort",
    "start": "1677200",
    "end": "1683159"
  },
  {
    "text": "of stripped this down to work exactly the way we want it to work and the other thing that we wanted to do is to be able",
    "start": "1683159",
    "end": "1689200"
  },
  {
    "text": "to have it work with Windows and Linux boxes um since a lot of our game servers",
    "start": "1689200",
    "end": "1694320"
  },
  {
    "text": "are windows machines uh we wanted to be able to treat those like Linux boxes as",
    "start": "1694320",
    "end": "1700039"
  },
  {
    "text": "a Linux person I wanted to be able to do that as much as possible so we basically in our base images we install sigwin we",
    "start": "1700039",
    "end": "1706679"
  },
  {
    "text": "have SSH enabled so anel uh works by sshing into instances and running",
    "start": "1706679",
    "end": "1712480"
  },
  {
    "text": "commands and that all sort of works pretty well uh across Linux and uh windows for",
    "start": "1712480",
    "end": "1720039"
  },
  {
    "text": "us and just to give you an idea of the kinds of things that Ami baking does again there's a yaml file associated",
    "start": "1720960",
    "end": "1727080"
  },
  {
    "text": "with it that drives it that yaml file would be uh would vary from Project to project uh it has basic commands like",
    "start": "1727080",
    "end": "1734600"
  },
  {
    "text": "creating uh provisioning which is uh installing software on the instance you",
    "start": "1734600",
    "end": "1739720"
  },
  {
    "text": "can SSH into the instance that which is useful during debug times just to check to see what's going on with it um once",
    "start": "1739720",
    "end": "1747159"
  },
  {
    "text": "you're you're happy with it you can actually create an image which will go off and create the Ami um or you can",
    "start": "1747159",
    "end": "1753919"
  },
  {
    "text": "just basically do all of those steps to combine in with a single Ami baking bake drives the whole",
    "start": "1753919",
    "end": "1760880"
  },
  {
    "text": "thing and here's the yaml config file for AMI baking again you can see the",
    "start": "1760880",
    "end": "1767519"
  },
  {
    "text": "sort of the information about the um the instance that we're going to",
    "start": "1767519",
    "end": "1773320"
  },
  {
    "text": "create information about how we SSH into it again we have information about all",
    "start": "1773320",
    "end": "1779320"
  },
  {
    "text": "the accounts we want to use so if you have multiple accounts this would basically build the Army in each of those accounts and it would be the same",
    "start": "1779320",
    "end": "1786320"
  },
  {
    "text": "Army across all those accounts um and we also reference the the actual anable",
    "start": "1786320",
    "end": "1792559"
  },
  {
    "text": "Playbook um the base image that we're going to use to start with",
    "start": "1792559",
    "end": "1797960"
  },
  {
    "text": "and this notion of flavors which really is just another kind of tagging",
    "start": "1797960",
    "end": "1803440"
  },
  {
    "text": "capability it allows us to treat a bunch of instance a bunch of amies as sort of",
    "start": "1803440",
    "end": "1808640"
  },
  {
    "text": "similar and we can search for them based on the",
    "start": "1808640",
    "end": "1813080"
  },
  {
    "text": "flavor okay so that was bake in staging basically we want to create a new uh",
    "start": "1814039",
    "end": "1819279"
  },
  {
    "text": "autoscaling group launch create a new launch configuration using that newly baked Amy that we just",
    "start": "1819279",
    "end": "1825000"
  },
  {
    "text": "created use uh we use a a cloud formation template which we saw a couple steps back uh and we control the Minimax",
    "start": "1825000",
    "end": "1833039"
  },
  {
    "text": "size of the auto scaling group usually just to be one so we get a single new instance and then we label that tag it",
    "start": "1833039",
    "end": "1839519"
  },
  {
    "text": "uh as our green autoscaling group and that whole process is created is done with that single uh Fleet command uh",
    "start": "1839519",
    "end": "1846559"
  },
  {
    "text": "Fleet autoscaling group create uh you can pass in the number of instances you want which is just a done as an",
    "start": "1846559",
    "end": "1852640"
  },
  {
    "text": "environment variable within Jenkins and that will take care of all those steps",
    "start": "1852640",
    "end": "1859240"
  },
  {
    "text": "in the scaling process we want to basically uh start to increase the number of instances within the",
    "start": "1860279",
    "end": "1866000"
  },
  {
    "text": "autoscaling group so we need to adjust the Min size and Max size uh and the",
    "start": "1866000",
    "end": "1871320"
  },
  {
    "text": "desired capacity of our green autoscaling group and we do that by",
    "start": "1871320",
    "end": "1876519"
  },
  {
    "text": "update basically doing a cloud formation update on the auto scaling group that we just created on the stack associated",
    "start": "1876519",
    "end": "1882440"
  },
  {
    "text": "with it and uh an optional command that you see here is that uh we optionally",
    "start": "1882440",
    "end": "1888279"
  },
  {
    "text": "allow a certain number of failed instances on this particular step so if you were only deploying or scaling up to",
    "start": "1888279",
    "end": "1895799"
  },
  {
    "text": "three or four instances if there was a problem with any one of those you would probably want to know it and stop the",
    "start": "1895799",
    "end": "1901440"
  },
  {
    "text": "deployment that would be you know assigned that something wasn't going right but if you're deploying 50 or 60 or 100 servers uh within a cluster and",
    "start": "1901440",
    "end": "1909559"
  },
  {
    "text": "one of them just doesn't sort of start up properly uh you probably want to continue on because that one will",
    "start": "1909559",
    "end": "1914760"
  },
  {
    "text": "eventually just fail health check and be replaced by the auto scaling group so we allow a certain number or at least have",
    "start": "1914760",
    "end": "1920840"
  },
  {
    "text": "the ability to allow a certain number of failed instances uh at this step so that we can uh continue on in our",
    "start": "1920840",
    "end": "1930600"
  },
  {
    "text": "deployment roll back at that point is really a simple step of just deleting the green group so we've put thep a",
    "start": "1933039",
    "end": "1939399"
  },
  {
    "text": "bunch of instances some number of instances into the green group we're monitoring it doesn't look right all we",
    "start": "1939399",
    "end": "1944559"
  },
  {
    "text": "really want to do is just make it go away and have our blue group they handling traffic so that's done with a",
    "start": "1944559",
    "end": "1950279"
  },
  {
    "text": "single command just Fleet uh ASG destroy",
    "start": "1950279",
    "end": "1956240"
  },
  {
    "text": "green and then the switch part is um a couple of steps involved in that we want",
    "start": "1957159",
    "end": "1962679"
  },
  {
    "text": "to delete the blue stack so the blue stack is the one running our old software we're happy with a new software",
    "start": "1962679",
    "end": "1968840"
  },
  {
    "text": "we're ready to get rid of it so we want to delete that group we want to use cloud formation uh update to relabel the",
    "start": "1968840",
    "end": "1976399"
  },
  {
    "text": "green group to be the blue group and then we also as I mentioned earlier we use New Relic so we also want",
    "start": "1976399",
    "end": "1983440"
  },
  {
    "text": "to record that deployment in New Relic so that when we're looking in New Relic we can see it as an event and if there's",
    "start": "1983440",
    "end": "1990919"
  },
  {
    "text": "something going on we we know that and it's related to that deployment we would be able to correlate it with the deployment that we just made and that",
    "start": "1990919",
    "end": "1999080"
  },
  {
    "text": "actually requires a couple different Fleet commands we're going to destroy the blue group update the green group uh",
    "start": "1999080",
    "end": "2005080"
  },
  {
    "text": "and then record the New Relic the deployment in New Relic and again Fleet sort of handles all those details for",
    "start": "2005080",
    "end": "2013600"
  },
  {
    "text": "us right so that's sorry that's the that's the uh the process we uh again A",
    "start": "2015080",
    "end": "2023399"
  },
  {
    "text": "variation of blue green deployment kind of this Canary launch uh aspect we",
    "start": "2023399",
    "end": "2028639"
  },
  {
    "text": "control the blue and green groups as separate uh autoscaling groups got a single load balancer so there's no DNS",
    "start": "2028639",
    "end": "2034720"
  },
  {
    "text": "changes no pre-warming of the new elb um staging provides our final acceptance",
    "start": "2034720",
    "end": "2040880"
  },
  {
    "text": "test so we can run a bunch of tests beforehand but we don't really switch until uh we are convinced in the staging",
    "start": "2040880",
    "end": "2047039"
  },
  {
    "text": "step that the new instance is behaving properly and throughout the process uh this monitoring uh is really critical to",
    "start": "2047039",
    "end": "2054280"
  },
  {
    "text": "the whole process so even though monitoring is not really part of the deployment pipeline it is a com you know",
    "start": "2054280",
    "end": "2059520"
  },
  {
    "text": "a critical component that we use in determining whether the deployment is happening properly or not and so uh I",
    "start": "2059520",
    "end": "2066280"
  },
  {
    "text": "wanted to spend a a little bit of time just talking about where we ended up uh with on",
    "start": "2066280",
    "end": "2072158"
  },
  {
    "text": "monitoring so again we use monitoring to figure out is the preview doing okay so",
    "start": "2072280",
    "end": "2077398"
  },
  {
    "text": "as we're testing each develop each uh commit into develop uh did that last",
    "start": "2077399",
    "end": "2082960"
  },
  {
    "text": "build break something or are we still okay um we need monitoring to help us",
    "start": "2082960",
    "end": "2088280"
  },
  {
    "text": "figure out whether the staged instance is behaving properly uh and for that monitoring we use a kind a combination",
    "start": "2088280",
    "end": "2094398"
  },
  {
    "text": "of things we use New Relic for sort of app level monitoring and we use another",
    "start": "2094399",
    "end": "2100200"
  },
  {
    "text": "key component in kind of figuring out whether things are going on going the right way or not is looking at the logs",
    "start": "2100200",
    "end": "2105880"
  },
  {
    "text": "and we've tried lots of different log uh products um commercial ones and and",
    "start": "2105880",
    "end": "2112040"
  },
  {
    "text": "different types of things and what we've landed on for handling our logs is uh elastic search um so we found you know",
    "start": "2112040",
    "end": "2121040"
  },
  {
    "text": "there's lots of features that logging products provide but the most critical features for us",
    "start": "2121040",
    "end": "2127800"
  },
  {
    "text": "in using it in a deployment context especially is we want to be able to see the log message in our dashboard as",
    "start": "2127800",
    "end": "2135480"
  },
  {
    "text": "early as we possibly can so we want that time divisibility is really important and the other thing we want to be able",
    "start": "2135480",
    "end": "2141760"
  },
  {
    "text": "to do is search for uh similar logs similar errors within the log so if we",
    "start": "2141760",
    "end": "2146920"
  },
  {
    "text": "get see an error we want to know is that an isolated one or are there 10,000 of those out there and we need to do",
    "start": "2146920",
    "end": "2152240"
  },
  {
    "text": "something about it and for those purposes we found uh elastic search the",
    "start": "2152240",
    "end": "2158720"
  },
  {
    "text": "best approach the best solution and gives us the best time to visibility by",
    "start": "2158720",
    "end": "2164319"
  },
  {
    "text": "far this is sort of our monitoring um configuration which is a",
    "start": "2164319",
    "end": "2169520"
  },
  {
    "text": "little bit different than some people might use one thing you notice is there's a Kinesis stream sitting you",
    "start": "2169520",
    "end": "2174760"
  },
  {
    "text": "know right in the middle of this thing I'll talk a little bit more about why we do that but the idea that we have with",
    "start": "2174760",
    "end": "2181800"
  },
  {
    "text": "uh monitoring is really to get everything that we want to log all log data uh stats D metrics everything we",
    "start": "2181800",
    "end": "2188560"
  },
  {
    "text": "push it into the Kinesis stream as quickly as we can so these UDP sync",
    "start": "2188560",
    "end": "2194640"
  },
  {
    "text": "uh instances or processes here are little python uh applications that uh",
    "start": "2194640",
    "end": "2201800"
  },
  {
    "text": "they're running Python 3 3.4 in the new async library um they listen on a UDP",
    "start": "2201800",
    "end": "2207520"
  },
  {
    "text": "report and the only thing that they do is take whatever you send it wrap it up an adjacent bundle ship it into kesa",
    "start": "2207520",
    "end": "2213599"
  },
  {
    "text": "stream that's it they don't do any processing nothing else else other than get it into Kinesis as quickly as we",
    "start": "2213599",
    "end": "2219079"
  },
  {
    "text": "possibly can on the other side of the Kinesis we have uh something that looks you know pretty familiar for anybody uh",
    "start": "2219079",
    "end": "2226400"
  },
  {
    "text": "familiar with that elastic search we've got a cluster with three different uh autoscaling groups for one for storage",
    "start": "2226400",
    "end": "2234119"
  },
  {
    "text": "one for Masters and one for Cabana which are all the sort of the components you would need in elastic search uh the",
    "start": "2234119",
    "end": "2241319"
  },
  {
    "text": "other autoscaling group there is for something called connector which I'll I'll talk about in a minute",
    "start": "2241319",
    "end": "2248599"
  },
  {
    "text": "so we've sort of gone over this but you know we've got these connector autoscaling groups Cabana Master Storage",
    "start": "2249720",
    "end": "2256319"
  },
  {
    "text": "uh one thing I thought I'd mention is we actually are using M3 medium types for our instance types so we found um with",
    "start": "2256319",
    "end": "2263440"
  },
  {
    "text": "which is actually a pretty small you know sort of moderate sized instance type we found that it's without elastic",
    "start": "2263440",
    "end": "2269440"
  },
  {
    "text": "search it's much better to have a a larger number of small instances than to have a smaller number of really big",
    "start": "2269440",
    "end": "2274640"
  },
  {
    "text": "instances so uh so far the three medium types uh work out well for us they don't really have much storage on them so for",
    "start": "2274640",
    "end": "2281160"
  },
  {
    "text": "the storage nodes we basically created 200 gab um solid state e EBS volume that",
    "start": "2281160",
    "end": "2286960"
  },
  {
    "text": "we attach to each of the storage nodes uh and that gives us plenty of storage we really are cycling those logs on a",
    "start": "2286960",
    "end": "2293880"
  },
  {
    "text": "weekly basis so we don't really keep logs Beyond a week at least not right now we might change that in the",
    "start": "2293880",
    "end": "2300799"
  },
  {
    "text": "future and then the connector app that I talked about is really",
    "start": "2301839",
    "end": "2307400"
  },
  {
    "text": "uh a python it's another python application uh it's a it's an",
    "start": "2307400",
    "end": "2312680"
  },
  {
    "text": "application whose job it is to read from the Kinesis stream uh it ships the log",
    "start": "2312680",
    "end": "2318440"
  },
  {
    "text": "data to elastic search clusters and then it provide some simple alerting uh along",
    "start": "2318440",
    "end": "2324599"
  },
  {
    "text": "the way so with connector we're able to say if you see this particular error show up uh this many times within this",
    "start": "2324599",
    "end": "2331800"
  },
  {
    "text": "period of time then that then basically raise an alarm which would mean sending an alert to an SNS topic um it also",
    "start": "2331800",
    "end": "2340200"
  },
  {
    "text": "saves all the state that it needs to sort of remember where it is in the Kinesis stream saves all that state back",
    "start": "2340200",
    "end": "2346960"
  },
  {
    "text": "to elastic search as",
    "start": "2346960",
    "end": "2350280"
  },
  {
    "text": "well so this is just a sort of a picture anybody familiar with the L it's just a basic Cabana dashboard but it uh sort of",
    "start": "2352000",
    "end": "2359760"
  },
  {
    "text": "gives us a really good view of what's going on we can see the errors we can drill into any of the errors that we do",
    "start": "2359760",
    "end": "2365079"
  },
  {
    "text": "see um so we've been really happy with elastic search we see really really quick time between the time the log",
    "start": "2365079",
    "end": "2371280"
  },
  {
    "text": "actually is is generated and the time we can actually see it and search on it uh within the K Cabana",
    "start": "2371280",
    "end": "2379599"
  },
  {
    "text": "dashboard and really the final thing I kind of wanted to talk about a little bit was you know why I mean that picture",
    "start": "2380480",
    "end": "2387599"
  },
  {
    "text": "looks probably a lot looks familiar to a lot of people but why would you put Kinesis in the middle of it why not just",
    "start": "2387599",
    "end": "2393560"
  },
  {
    "text": "go right from your UDP collectors's you know right into elastic search um and",
    "start": "2393560",
    "end": "2399440"
  },
  {
    "text": "the reason that we do that really is that we um we kind of view Kinesis as",
    "start": "2399440",
    "end": "2405119"
  },
  {
    "text": "this really highly available highly scalable 24-hour buffer that we can",
    "start": "2405119",
    "end": "2411720"
  },
  {
    "text": "write into so data that you write into Kinesis into a Kinesis stream will be is",
    "start": "2411720",
    "end": "2417880"
  },
  {
    "text": "guaranteed to be held within that stream and available for 24-Hour period so from an operations point of view that gives",
    "start": "2417880",
    "end": "2425240"
  },
  {
    "text": "us a lot of flexibility so the really the strategy is to kind of keep the the left side of that picture uh you know",
    "start": "2425240",
    "end": "2432640"
  },
  {
    "text": "that what happens on the left side of the Kinesis stream as simple as you can possibly make it so that's why we have these UDP collectors that do nothing",
    "start": "2432640",
    "end": "2439880"
  },
  {
    "text": "other than to push data directly into Kinesis so there's no processing very few things that could possibly go wrong",
    "start": "2439880",
    "end": "2446280"
  },
  {
    "text": "and we get the data into the Kinesis stream as early as we possibly can um",
    "start": "2446280",
    "end": "2451520"
  },
  {
    "text": "that then gives us a lot of flexibility on the opp side on the other side because if we have uh some sort of an",
    "start": "2451520",
    "end": "2457040"
  },
  {
    "text": "issue with connectors or with elastic search or these much more complicated systems on the sort of the right side of",
    "start": "2457040",
    "end": "2462400"
  },
  {
    "text": "the Kinesis stream uh we can be assured that we basic we have a 24-hour window",
    "start": "2462400",
    "end": "2468720"
  },
  {
    "text": "to kind of get those things sorted out and not lose any log data so uh I think you know Kinesis is sort of thought of",
    "start": "2468720",
    "end": "2475440"
  },
  {
    "text": "more as a sort of real time analytics kind of a thing a lot of uh sort of big",
    "start": "2475440",
    "end": "2480880"
  },
  {
    "text": "data but and it's great for all that but I find that from an operation point of view it's just a really great tool to",
    "start": "2480880",
    "end": "2487200"
  },
  {
    "text": "use to sort of give yourself a little bit of slack on the operation side to make sure that you don't lose data",
    "start": "2487200",
    "end": "2492680"
  },
  {
    "text": "especially critical data like logs or statsd metrics things like that and so we really uh are taking this approach",
    "start": "2492680",
    "end": "2500160"
  },
  {
    "text": "both with logs we're starting to put all of our statsd metrics through in the same way we have UDP um uh listeners",
    "start": "2500160",
    "end": "2508119"
  },
  {
    "text": "that just take the data and put it directly into the Kinesis as quickly as possible no aggregation happening no",
    "start": "2508119",
    "end": "2514240"
  },
  {
    "text": "processing of any kind and then do all the heavy lifting sort of on the other side of the Kinesis stream and that's uh",
    "start": "2514240",
    "end": "2520599"
  },
  {
    "text": "worked out really well so it's something you might want to consider uh in your own",
    "start": "2520599",
    "end": "2525720"
  },
  {
    "text": "operations so just to kind of wrap things up a little bit um talked about",
    "start": "2526319",
    "end": "2531720"
  },
  {
    "text": "some of this in the first slide but we've got roughly 35 million users uh",
    "start": "2531720",
    "end": "2536880"
  },
  {
    "text": "using our games you know active users we're handling billions of requests a day which is a decent scale it's not",
    "start": "2536880",
    "end": "2543160"
  },
  {
    "text": "sort of Netflix but it's interesting uh and some um and and challenging uh our game",
    "start": "2543160",
    "end": "2549319"
  },
  {
    "text": "clusters generally tend to be between 10 and 50 uh C3 4X larges uh you know per",
    "start": "2549319",
    "end": "2555720"
  },
  {
    "text": "game so quite a few instances but again not not Netflix scale but but enough to",
    "start": "2555720",
    "end": "2561040"
  },
  {
    "text": "be a challenge uh we kind of in terms of cadences we do sort of many previews a",
    "start": "2561040",
    "end": "2567000"
  },
  {
    "text": "day that's happening every time we're committing into the develop Branch we do multiple releases per week per game um",
    "start": "2567000",
    "end": "2575200"
  },
  {
    "text": "in from an operation side we've got about 50 million doc 50 million documents in our elastic search cluster",
    "start": "2575200",
    "end": "2582040"
  },
  {
    "text": "you know and that's rotating them once a week uh and that cluster is handling thousands of requests a second even with",
    "start": "2582040",
    "end": "2589079"
  },
  {
    "text": "the M3 medium instances and we really our Ops Team really is two people me and one other guy um you know the one caveat",
    "start": "2589079",
    "end": "2596079"
  },
  {
    "text": "I would say is we also have a Development Group that is very sort of devops oriented so we really take the",
    "start": "2596079",
    "end": "2602319"
  },
  {
    "text": "the devops idea very seriously our developers uh are contributing and helping with the Ops side uh of our uh",
    "start": "2602319",
    "end": "2610079"
  },
  {
    "text": "of in scopely their writing code that helps with Ops and they're hope actually writing tools some of these tools were",
    "start": "2610079",
    "end": "2615800"
  },
  {
    "text": "written by the development team as well so we're certainly augmented by the engineering team but from an Ops point",
    "start": "2615800",
    "end": "2621800"
  },
  {
    "text": "of view we have a very small team I think doing quite a bit of work uh the deployment pipeline has been working out",
    "start": "2621800",
    "end": "2627680"
  },
  {
    "text": "really well for us so there's lots of ways to deploy code but this one is working well for us uh we probably will",
    "start": "2627680",
    "end": "2633839"
  },
  {
    "text": "circle around and look at the uh the code deploy tool from Amazon we were",
    "start": "2633839",
    "end": "2640200"
  },
  {
    "text": "involved with a private beta of that but it didn't support coming from from",
    "start": "2640200",
    "end": "2645480"
  },
  {
    "text": "Amazon internal there are no windows servers inside of Amazon in a production setting so they had no support for",
    "start": "2645480",
    "end": "2652119"
  },
  {
    "text": "Windows uh when they released the product uh announced it yesterday it does now so we'll look at that and I",
    "start": "2652119",
    "end": "2658079"
  },
  {
    "text": "think it has a lot of nice qualities and certainly the underlying tool of Apollo is is a is a great Tool uh as anybody",
    "start": "2658079",
    "end": "2664480"
  },
  {
    "text": "who's worked at Amazon can can testify um that's pretty much it um I",
    "start": "2664480",
    "end": "2672200"
  },
  {
    "text": "thank all of you for coming it's a long way upstairs and off to the corner [Applause]",
    "start": "2672200",
    "end": "2678680"
  },
  {
    "text": "thanks",
    "start": "2678680",
    "end": "2681680"
  }
]