[
  {
    "text": "my name is Brian Murphy I'm your room host for the day I just want to run through a couple of items before we get started first of all thank you for",
    "start": "30",
    "end": "7859"
  },
  {
    "text": "coming welcome to the 2018 public sector summit in Washington DC the emergency",
    "start": "7859",
    "end": "13259"
  },
  {
    "text": "exits are located obviously the doors that you came in through and then behind the curtains to my right and left bathrooms are located",
    "start": "13259",
    "end": "19859"
  },
  {
    "text": "out the door and to the left please remember to silence all of your devices during this session it will be",
    "start": "19859",
    "end": "25740"
  },
  {
    "text": "recorded those recordings will be available on the AWS gov YouTube channel next week if you have not done so",
    "start": "25740",
    "end": "33630"
  },
  {
    "text": "already please download the summit app we do VIP we do value your feedback and do want to make this the most customer",
    "start": "33630",
    "end": "39989"
  },
  {
    "text": "centric experience for you so if you could please give us any feedback that you have through that app that'd be lovely so without any further ado we're",
    "start": "39989",
    "end": "46530"
  },
  {
    "text": "gonna get started here we have continuous integration continuous delivery and that is going to be led by",
    "start": "46530",
    "end": "52640"
  },
  {
    "text": "yury Horvath and Len Henry so we're gonna start with URI good morning for",
    "start": "52640",
    "end": "63329"
  },
  {
    "text": "you security focus people in the room first of all can I have a little bit of a show of hands for who in this room has",
    "start": "63329",
    "end": "70350"
  },
  {
    "text": "had to think about securing life or that's part of your everyday life okay",
    "start": "70350",
    "end": "75509"
  },
  {
    "text": "more than I thought that's good you're in the right place so how many times have you been frustrated by the fact",
    "start": "75509",
    "end": "81330"
  },
  {
    "text": "that your security and your compliance testing i've been thought of as more of an annual event for your infrastructure",
    "start": "81330",
    "end": "88860"
  },
  {
    "text": "or for your applications or for the developers in the room and I'm one of",
    "start": "88860",
    "end": "94619"
  },
  {
    "text": "those I will fully admit are there any other developers in the room other than me okay we got some so for you",
    "start": "94619",
    "end": "101280"
  },
  {
    "text": "developers have you ever been frustrated that on that annual basis you might have to take a few weeks out of your life",
    "start": "101280",
    "end": "107610"
  },
  {
    "text": "where you really want to be developing functionality for your customers but instead you have to take a break because",
    "start": "107610",
    "end": "114570"
  },
  {
    "text": "there's been some security or compliance rules that you need to comply with and",
    "start": "114570",
    "end": "120299"
  },
  {
    "text": "you need to make changes to your applications or to your infrastructure if this seems sort of familiar okay so I",
    "start": "120299",
    "end": "127740"
  },
  {
    "text": "have a few hands then I am Malika Horvath I am a senior Solutions",
    "start": "127740",
    "end": "133050"
  },
  {
    "text": "Architect here at Amazon working on with our federal civilian customers and I'm joined by Len Henry another senior",
    "start": "133050",
    "end": "140849"
  },
  {
    "text": "Solutions Architect working in the education space and we're here to talk to you about integrating your compliance",
    "start": "140849",
    "end": "147750"
  },
  {
    "text": "and your security testing into your CI ste pipelines for infrastructure and for",
    "start": "147750",
    "end": "153450"
  },
  {
    "text": "your applications and scaling this out through your organization with that key",
    "start": "153450",
    "end": "161760"
  },
  {
    "text": "takeaways things for you to listen to throughout today or at least the next 15",
    "start": "161760",
    "end": "166859"
  },
  {
    "text": "minutes one of them is the benefits of automating your security a nurse compliance testing in your continuous",
    "start": "166859",
    "end": "174900"
  },
  {
    "text": "integration and continuous delivery pipelines an introduction to AWS partner",
    "start": "174900",
    "end": "180720"
  },
  {
    "text": "and industry tool choices for CI CD security and compliance and patterns for",
    "start": "180720",
    "end": "187560"
  },
  {
    "text": "using CI CD with these tools in your AWS accounts let's go through some goals so",
    "start": "187560",
    "end": "196139"
  },
  {
    "text": "developers in the room you are always looking towards CI CD because you want",
    "start": "196139",
    "end": "202049"
  },
  {
    "text": "to deliver functionality to your customers faster without compromising on",
    "start": "202049",
    "end": "207120"
  },
  {
    "text": "the quality of your code or the quality of that functionality for the operations",
    "start": "207120",
    "end": "213930"
  },
  {
    "text": "folks in the room do you remember those days where you were standing up servers",
    "start": "213930",
    "end": "220230"
  },
  {
    "text": "and other infrastructure for your applications you are setting this up in",
    "start": "220230",
    "end": "225629"
  },
  {
    "text": "your development environment and your testing environment and then when it comes to going to prod you were crossing",
    "start": "225629",
    "end": "231299"
  },
  {
    "text": "your fingers hoping that the same setup that was going on in your test environment where everything was getting",
    "start": "231299",
    "end": "238739"
  },
  {
    "text": "a thumbs-up you were deploying at that same code or that same infrastructure to production",
    "start": "238739",
    "end": "244909"
  },
  {
    "text": "well your on AWS now that's great now you can think about all of your infrastructure as code so all of those",
    "start": "244909",
    "end": "252900"
  },
  {
    "text": "conveniences yet that your developers have had around changed control for their applications now you can have that",
    "start": "252900",
    "end": "259229"
  },
  {
    "text": "change control for your infrastructure and with that you can take the same code",
    "start": "259229",
    "end": "265080"
  },
  {
    "text": "that deploys out your infrastructure to your test environment and you can have consistency from your dev test into",
    "start": "265080",
    "end": "273330"
  },
  {
    "text": "your production environments with this you're deploying out your code in a more",
    "start": "273330",
    "end": "278939"
  },
  {
    "text": "automated fashion minimizing those manual steps which you know there's a potential for error anytime you're going",
    "start": "278939",
    "end": "285960"
  },
  {
    "text": "manual and on those rare cases where something has been detected as a problem",
    "start": "285960",
    "end": "292740"
  },
  {
    "text": "in an environment you can always roll back to a point in time when you know your infrastructure was secure and good",
    "start": "292740",
    "end": "300680"
  },
  {
    "text": "when we combine these practices together of integration between your operations",
    "start": "300680",
    "end": "305879"
  },
  {
    "text": "team and your developer teams together we call that DevOps and what we're really looking to focus on more going",
    "start": "305879",
    "end": "312360"
  },
  {
    "text": "ahead into the future is for the security folks in your room for you guys to be able to take advantage of the same",
    "start": "312360",
    "end": "318599"
  },
  {
    "text": "conveniences in your operations teams and your development teams and start integrating in a more automated fashion",
    "start": "318599",
    "end": "324710"
  },
  {
    "text": "continuously security for your applications security for your infrastructure which and as you spread",
    "start": "324710",
    "end": "331349"
  },
  {
    "text": "this across your whole entire organization you get enhanced governance and when we're thinking about that we",
    "start": "331349",
    "end": "336719"
  },
  {
    "text": "have compliance and security ops so we're gonna be looking at incorporating",
    "start": "336719",
    "end": "343289"
  },
  {
    "text": "your security testing inter compliance testing both for your infrastructures and your applications but we're gonna",
    "start": "343289",
    "end": "349379"
  },
  {
    "text": "start off with infrastructure because you need infrastructure first before you can even start thinking about deploying",
    "start": "349379",
    "end": "354960"
  },
  {
    "text": "your applications right so brief overview of the advantages of thinking",
    "start": "354960",
    "end": "360779"
  },
  {
    "text": "through CI CD for your infrastructure and through security and we can be",
    "start": "360779",
    "end": "367189"
  },
  {
    "text": "taking your infrastructure as code and creating your baseline AWS accounts so",
    "start": "367189",
    "end": "375479"
  },
  {
    "text": "this could be setting up your networking and V pcs this could be setting up your IM roles so that you can have specific",
    "start": "375479",
    "end": "382500"
  },
  {
    "text": "users authorized to do things within your environments or it could be setting up things like your data stores that are",
    "start": "382500",
    "end": "389189"
  },
  {
    "text": "immutable as your application changes in addition to that we could be thinking",
    "start": "389189",
    "end": "395099"
  },
  {
    "text": "about your infrastructure as code to describe your application environments as well so this can be your blue",
    "start": "395099",
    "end": "401230"
  },
  {
    "text": "deploy out deploys out to your ec2 instances which are connecting to your",
    "start": "401230",
    "end": "406780"
  },
  {
    "text": "immutable data stores see ICD has a flow",
    "start": "406780",
    "end": "412570"
  },
  {
    "text": "and there's multiple different tools that you can use in this flow and we're gonna go through that today so let's",
    "start": "412570",
    "end": "417850"
  },
  {
    "text": "start off again now you have your infrastructure as code so this could be",
    "start": "417850",
    "end": "423340"
  },
  {
    "text": "done through CloudFormation or through third-party tools like terraform but basically you're taking your whole",
    "start": "423340",
    "end": "429250"
  },
  {
    "text": "entire AWS infrastructure and you were describing that in a yamo or a JSON file",
    "start": "429250",
    "end": "435460"
  },
  {
    "text": "and now we can start doing things like committing this code using one of the",
    "start": "435460",
    "end": "442390"
  },
  {
    "text": "tools that you see here going through the tools so now that you have your",
    "start": "442390",
    "end": "447880"
  },
  {
    "text": "infrastructure adds code you want to think about things like version control so the three options that you see here",
    "start": "447880",
    "end": "454540"
  },
  {
    "text": "on the screen between code commit kit and bucket and there are other other third-party tools as well they all",
    "start": "454540",
    "end": "460930"
  },
  {
    "text": "support get version control and collaboration so you can do things like have pull requests reviews for your",
    "start": "460930",
    "end": "468360"
  },
  {
    "text": "infrastructure now so remember your infrastructure it's not just always set up once there are changes that occur so",
    "start": "468360",
    "end": "476050"
  },
  {
    "text": "wouldn't it be nice as you're making changes to your infrastructure before you deploy it out to have another pair",
    "start": "476050",
    "end": "481870"
  },
  {
    "text": "of eyeballs or a few pairs of eyeballs to look at your infrastructure changes before they get to point out well now",
    "start": "481870",
    "end": "487960"
  },
  {
    "text": "you can do that code commit is AWS is solution around committing code it's a",
    "start": "487960",
    "end": "494380"
  },
  {
    "text": "managed service and it integrates with a.m. and it supports encryption at rest and integration with other ADA based",
    "start": "494380",
    "end": "501520"
  },
  {
    "text": "tools that you'll see today after you have committed your infrastructure as",
    "start": "501520",
    "end": "508120"
  },
  {
    "text": "code you want to do something with that commit this is an adventure than thing you need a coordination pipeline to",
    "start": "508120",
    "end": "514840"
  },
  {
    "text": "listen to those commits we're gonna be looking at code pipeline lambda and Jenkins and then after that coordination",
    "start": "514840",
    "end": "522669"
  },
  {
    "text": "pipeline again is listening to that commit of changes to your infrastructure and it's deploying it out into your test",
    "start": "522669",
    "end": "530470"
  },
  {
    "text": "environment overall when it comes to coordinating",
    "start": "530470",
    "end": "536149"
  },
  {
    "text": "your CI CD pipeline you want orchestration across your infrastructure so code pipeline is Amazon's solution",
    "start": "536149",
    "end": "544190"
  },
  {
    "text": "around CI CD where it's a managed service at one dollar per month per",
    "start": "544190",
    "end": "549980"
  },
  {
    "text": "pipeline it's easy to set up through the console or through cloud formation",
    "start": "549980",
    "end": "555500"
  },
  {
    "text": "scripts so once you've set up your CI CD pipeline through cloud formation this is something that you can now share across",
    "start": "555500",
    "end": "562670"
  },
  {
    "text": "your your organization to different application or workload teams and in",
    "start": "562670",
    "end": "569870"
  },
  {
    "text": "addition to that it also integrates with all the other AWS development tools that you'll see today if you have a",
    "start": "569870",
    "end": "575570"
  },
  {
    "text": "complicated CI CD pipeline where you have conditionals like if there is a",
    "start": "575570",
    "end": "581060"
  },
  {
    "text": "failure over here you might want to roll back or you might want to notify in special cases you can look at lambda as",
    "start": "581060",
    "end": "587480"
  },
  {
    "text": "a CI CD tool for you and of course Jenkins and other third-party tools are",
    "start": "587480",
    "end": "593000"
  },
  {
    "text": "available in our AWS marketplace deploying your infrastructure we want to",
    "start": "593000",
    "end": "599990"
  },
  {
    "text": "look at a combination of not just to point out but managing the lifecycle of your application infrastructure we want",
    "start": "599990",
    "end": "606290"
  },
  {
    "text": "over all we want integration with your CI CD pipeline and of course it's nice when this is a managed service so you",
    "start": "606290",
    "end": "612290"
  },
  {
    "text": "don't have to think about managing a cluster cloud formation elastic beanstalk and opsworks are all solutions",
    "start": "612290",
    "end": "618380"
  },
  {
    "text": "for you in terms of cloud formation when it comes to deploying your infrastructure it supports it supports the majority of",
    "start": "618380",
    "end": "624790"
  },
  {
    "text": "AWS services and infrastructure for your developer applications elastic Beanstalk",
    "start": "624790",
    "end": "632329"
  },
  {
    "text": "is a good solution it's simple to set up for your developers and if you have talent for chef or puppet in your teams",
    "start": "632329",
    "end": "640339"
  },
  {
    "text": "and you can look at Ops works for a tool to integrate there once you have",
    "start": "640339",
    "end": "646760"
  },
  {
    "text": "deployed out to your testing test environment you want to test so let's",
    "start": "646760",
    "end": "653240"
  },
  {
    "text": "get into that so code build in conjunction with code pipeline can go",
    "start": "653240",
    "end": "659570"
  },
  {
    "text": "through and retest your application on any changes that you've made to your infrastructure environment",
    "start": "659570",
    "end": "665470"
  },
  {
    "text": "and in addition to that through lambda or some of these other tools like",
    "start": "665470",
    "end": "670510"
  },
  {
    "text": "Jenkins and you're gonna see an example of that in the demo today you can go through and integrate your security and",
    "start": "670510",
    "end": "677350"
  },
  {
    "text": "your compliance testing into your CI CD pipeline so that's automated for you and",
    "start": "677350",
    "end": "682990"
  },
  {
    "text": "you don't even continue on until you have passing compliance and security tests once you've successfully gone",
    "start": "682990",
    "end": "692860"
  },
  {
    "text": "through and test is for your security tested for compliance and made sure your",
    "start": "692860",
    "end": "699520"
  },
  {
    "text": "applications are still up and running correctly you can then notify your security teams or compliance teams or",
    "start": "699520",
    "end": "706000"
  },
  {
    "text": "others so that they can do any other manual checks before you decide to plug",
    "start": "706000",
    "end": "711160"
  },
  {
    "text": "deploy out in terms of testing functionality as mentioned before code",
    "start": "711160",
    "end": "716950"
  },
  {
    "text": "build in conjunction with code pipeline integrates with a lot of third-party testing services that you may already be",
    "start": "716950",
    "end": "724540"
  },
  {
    "text": "familiar with including Jenkins nuvola ghost inspector HPE storm runner run",
    "start": "724540",
    "end": "730240"
  },
  {
    "text": "scope and blaze meter the reason why we're bringing this up in terms of",
    "start": "730240",
    "end": "735760"
  },
  {
    "text": "testing for your infrastructure is again the last thing you want is to make a change with your infrastructure and for",
    "start": "735760",
    "end": "743260"
  },
  {
    "text": "that to affect the performance of your applications or the functionality of",
    "start": "743260",
    "end": "748300"
  },
  {
    "text": "your applications so you can think about this as an example changing the size of your database or changing anything in",
    "start": "748300",
    "end": "756520"
  },
  {
    "text": "regards to your security group or your networking so that your applications can't communicate out in addition to for",
    "start": "756520",
    "end": "764860"
  },
  {
    "text": "testing your security and compliance we've got Amazon inspector to look at",
    "start": "764860",
    "end": "770530"
  },
  {
    "text": "security vulnerabilities for your applications deployed on ec2 instances",
    "start": "770530",
    "end": "775890"
  },
  {
    "text": "you have AWS config to look at security and compliance across all of your AWS",
    "start": "775890",
    "end": "782110"
  },
  {
    "text": "infrastructure and it supports having configurable rules for your compliance",
    "start": "782110",
    "end": "787330"
  },
  {
    "text": "needs in auditioning to have a managed set of rules that you can look at like",
    "start": "787330",
    "end": "792460"
  },
  {
    "text": "the CIS benchmark and there are third-party security tools as well that",
    "start": "792460",
    "end": "798280"
  },
  {
    "text": "have eight he is that you can call into using things like Jenkins or lambda or other CI CD tools with",
    "start": "798280",
    "end": "809949"
  },
  {
    "text": "Amazon inspector an AWS config you have dashboards so in addition to having",
    "start": "809949",
    "end": "815949"
  },
  {
    "text": "automated testing that's running you can always go through it and look at the dashboards for inspector and for AWS",
    "start": "815949",
    "end": "822250"
  },
  {
    "text": "config to dive deep into issues that are going on and recommended remedies for",
    "start": "822250",
    "end": "828610"
  },
  {
    "text": "these issues once you go through and have ought you've gone through again",
    "start": "828610",
    "end": "835300"
  },
  {
    "text": "your functionality tests your security and compliance tests and you've gone through and your security and compliance",
    "start": "835300",
    "end": "840970"
  },
  {
    "text": "teams or QA teams have gone and done their manual checks in addition to what's already been automated at this",
    "start": "840970",
    "end": "848199"
  },
  {
    "text": "point they can give their thumbs up to say that it's ready to go out to production and your coordination",
    "start": "848199",
    "end": "853360"
  },
  {
    "text": "pipeline will then deploy out the same infrastructure because remember this is codified you know that you're gonna have",
    "start": "853360",
    "end": "860079"
  },
  {
    "text": "the same infrastructure built in production as what you have in test",
    "start": "860079",
    "end": "866550"
  },
  {
    "text": "let's look at a demo of this so what we're going to be looking at is a CI CD",
    "start": "867029",
    "end": "873370"
  },
  {
    "text": "pipeline using code pipeline and then from here we're gonna have some",
    "start": "873370",
    "end": "879009"
  },
  {
    "text": "scenarios of security vulnerabilities that we want to remediate so for our",
    "start": "879009",
    "end": "887860"
  },
  {
    "text": "setup we have got code pipeline with two",
    "start": "887860",
    "end": "892959"
  },
  {
    "text": "different code bases stored in code commit this is going very fast from",
    "start": "892959",
    "end": "898060"
  },
  {
    "text": "there our CloudFormation templates are going to be copied into CloudFormation from the code pipeline and then it's",
    "start": "898060",
    "end": "904120"
  },
  {
    "text": "going to be deployed out to our test account where we're going to create a",
    "start": "904120",
    "end": "910750"
  },
  {
    "text": "stack for cloud formation then it's going to be validated and with the",
    "start": "910750",
    "end": "915850"
  },
  {
    "text": "validation we just want to make sure that every part of your infrastructure is set up so as an example here we're checking for our security groups to be",
    "start": "915850",
    "end": "922180"
  },
  {
    "text": "set up and our IM roles along with our elby's",
    "start": "922180",
    "end": "928740"
  },
  {
    "text": "after our test infrastructure is set up in our test environment this is where we're gonna invoke a lambda script to",
    "start": "929780",
    "end": "936870"
  },
  {
    "text": "call out to AWS config to look at our different config rules that we've and",
    "start": "936870",
    "end": "942510"
  },
  {
    "text": "we've passed in as parameters our lambda script is integrated between code pipeline and AWS config and overall what",
    "start": "942510",
    "end": "950850"
  },
  {
    "text": "our script is doing is starting our ADA based config evaluation going through",
    "start": "950850",
    "end": "958050"
  },
  {
    "text": "all of our AWS config rules and looking for compliance bindings if there are any",
    "start": "958050",
    "end": "965820"
  },
  {
    "text": "failures that are found from AWS config we're gonna communicate that to code",
    "start": "965820",
    "end": "971010"
  },
  {
    "text": "pipeline and upon success we will also communicate that success scenario to",
    "start": "971010",
    "end": "977880"
  },
  {
    "text": "code pipeline after going through our AWS config compliance testing we are",
    "start": "977880",
    "end": "985260"
  },
  {
    "text": "going to now use a third-party Jenkins integration to call a script into aw",
    "start": "985260",
    "end": "991920"
  },
  {
    "text": "Amazon inspector let's look at our Jenkins script so from here what we're",
    "start": "991920",
    "end": "997920"
  },
  {
    "text": "doing is we are making an API call out to Amazon inspector then we're going to",
    "start": "997920",
    "end": "1004340"
  },
  {
    "text": "wait for that inspector to finish running after that part we're gonna list",
    "start": "1004340",
    "end": "1010010"
  },
  {
    "text": "all findings from inspector and make a report that Jenkins can read now let's",
    "start": "1010010",
    "end": "1020510"
  },
  {
    "text": "look at our Jenkins setup so Jenkins is configured to of course run this Python",
    "start": "1020510",
    "end": "1026180"
  },
  {
    "text": "script that interfaces with inspector there's the script afterwards what it's",
    "start": "1026180",
    "end": "1034938"
  },
  {
    "text": "going to do is read from that report that was created from our Python script",
    "start": "1034939",
    "end": "1040579"
  },
  {
    "text": "and communicate what's in that report back to code pipeline",
    "start": "1040579",
    "end": "1048339"
  },
  {
    "text": "great so after we've done all of our compliance and security testing and our",
    "start": "1051340",
    "end": "1057230"
  },
  {
    "text": "application security testing then we're going to be able to continue on what's our scenarios the security issues one of",
    "start": "1057230",
    "end": "1063529"
  },
  {
    "text": "them is we have ec2 instances that are going to be deployed out with the ability to SSH in through our username",
    "start": "1063529",
    "end": "1070009"
  },
  {
    "text": "password instead of using a pen key this is our guest our best practices in addition to that we are going to be",
    "start": "1070009",
    "end": "1075830"
  },
  {
    "text": "missing certain tags that we want across all ec2 instances in our environment for",
    "start": "1075830",
    "end": "1081799"
  },
  {
    "text": "reporting sake and our database is going to be created without an encrypted storage volume oops",
    "start": "1081799",
    "end": "1088850"
  },
  {
    "text": "let's get better at that so first of all we're going to commit our oops scenario and then we're gonna watch code pipeline",
    "start": "1088850",
    "end": "1097539"
  },
  {
    "text": "listening to this commit event and propagate the changes into our test",
    "start": "1097539",
    "end": "1103519"
  },
  {
    "text": "environment so here we have code pipeline you can see that it's been listening for changes and it's detected",
    "start": "1103519",
    "end": "1110149"
  },
  {
    "text": "some so at this point what it's doing is copying the changed code into our into",
    "start": "1110149",
    "end": "1116090"
  },
  {
    "text": "cloud formation after this cloud formation starts deploying out our code",
    "start": "1116090",
    "end": "1121549"
  },
  {
    "text": "to the test environment then we validate",
    "start": "1121549",
    "end": "1128330"
  },
  {
    "text": "that our confirmation scripts has created our environment and a device config lambda scripts have failed so we",
    "start": "1128330",
    "end": "1135739"
  },
  {
    "text": "have failed compliance let's fix this so let's add those tags to our ec2",
    "start": "1135739",
    "end": "1142070"
  },
  {
    "text": "instances back this is as easy as",
    "start": "1142070",
    "end": "1147080"
  },
  {
    "text": "uncommenting and let's go to our database description and make sure that",
    "start": "1147080",
    "end": "1152179"
  },
  {
    "text": "we are using an encrypted storage volume instead of having an unencrypted data base great so infrastructure is code we",
    "start": "1152179",
    "end": "1162470"
  },
  {
    "text": "now commit and we know this is going to run through our code pipeline changes",
    "start": "1162470",
    "end": "1169070"
  },
  {
    "text": "have been detected we'll go through this a little bit faster now will we've noticed that there's a change we're",
    "start": "1169070",
    "end": "1174499"
  },
  {
    "text": "going to deploy this out through cloud formation a to our test environment again",
    "start": "1174499",
    "end": "1179919"
  },
  {
    "text": "at this point we validate that AWS config has passed",
    "start": "1179919",
    "end": "1188350"
  },
  {
    "text": "we fast-forwarded a bit lambda our lambda script has passed at this point we are running through our testing",
    "start": "1188350",
    "end": "1194799"
  },
  {
    "text": "through inspector that has just failed so now let's look at an inspector and",
    "start": "1194799",
    "end": "1200080"
  },
  {
    "text": "see what it says so we're going into all of our findings from inspector and as we",
    "start": "1200080",
    "end": "1206169"
  },
  {
    "text": "see what has happened we noticed that we have a medium level severity issue around the fact that our ec2 instances",
    "start": "1206169",
    "end": "1213730"
  },
  {
    "text": "can be authenticated into using a username and password and you can see here that they have recommendations for",
    "start": "1213730",
    "end": "1220330"
  },
  {
    "text": "how to change this so let's go fix our issue that inspector found for our ec2",
    "start": "1220330",
    "end": "1226960"
  },
  {
    "text": "instances so we're going to make sure that changing we're going to change our sshd config files so that you can't use",
    "start": "1226960",
    "end": "1233649"
  },
  {
    "text": "password authentication going forward we're committing this change and now we're going to see a successful",
    "start": "1233649",
    "end": "1239639"
  },
  {
    "text": "run-through of our infrastructure changes all the way into production so",
    "start": "1239639",
    "end": "1245970"
  },
  {
    "text": "again code pipeline fast forwarding a little bit we've gone through we've succeeded",
    "start": "1245970",
    "end": "1252730"
  },
  {
    "text": "or with inspector and now this is where we can have manual checks around whether",
    "start": "1252730",
    "end": "1258639"
  },
  {
    "text": "our test environment is good to go I'm saying this is passed we're good to go I give my thumbs up and now we're deleting",
    "start": "1258639",
    "end": "1265570"
  },
  {
    "text": "that test stack just so we can save a little bit of money in our test environment now we're going through into",
    "start": "1265570",
    "end": "1270940"
  },
  {
    "text": "a user acceptance testing environment and again whoever those testers are they can give their manual approval and then",
    "start": "1270940",
    "end": "1277720"
  },
  {
    "text": "we can go to production where again you can have that option to have manual approval before you ever deploy out",
    "start": "1277720",
    "end": "1285899"
  },
  {
    "text": "and we have succeeded so now we have",
    "start": "1290200",
    "end": "1295220"
  },
  {
    "text": "that same infrastructure in our testing environment all the way through production so we've seen the advantages",
    "start": "1295220",
    "end": "1304429"
  },
  {
    "text": "of having compliance and security testing for our infrastructure now let's",
    "start": "1304429",
    "end": "1309590"
  },
  {
    "text": "look at that for our applications brief overview of what we want is deliver our",
    "start": "1309590",
    "end": "1317000"
  },
  {
    "text": "application code and all changes to that to production as fast as possible",
    "start": "1317000",
    "end": "1322070"
  },
  {
    "text": "without compromising on security for our applications again now we're seeing a",
    "start": "1322070",
    "end": "1329360"
  },
  {
    "text": "similar CI CD flow but this instead of being your infrastructure described as",
    "start": "1329360",
    "end": "1334460"
  },
  {
    "text": "code it's your application code what are some of the security issues that you can think about here it could be that you",
    "start": "1334460",
    "end": "1341179"
  },
  {
    "text": "have introduced an old vulnerable library into your code it could be that",
    "start": "1341179",
    "end": "1347299"
  },
  {
    "text": "you're using unsecure protocols to call in to third-party services these are all things that you want to watch out for",
    "start": "1347299",
    "end": "1353389"
  },
  {
    "text": "and there is the CVE or the common vulnerabilities and exposures list that",
    "start": "1353389",
    "end": "1358879"
  },
  {
    "text": "goes that's constantly updated for vulnerabilities that we need to check for and AWS Amazon inspector is",
    "start": "1358879",
    "end": "1366610"
  },
  {
    "text": "constantly looking for these types of vulnerabilities in your applications so",
    "start": "1366610",
    "end": "1372559"
  },
  {
    "text": "we take this application code now and we need to commit it we've already seen some tool choices there we know that",
    "start": "1372559",
    "end": "1379639"
  },
  {
    "text": "once a commit happens it goes through a coordination pipeline of some sort to make sure that you can orchestrate the",
    "start": "1379639",
    "end": "1386029"
  },
  {
    "text": "rest of your deployment out now for your code a lot of times you want to build",
    "start": "1386029",
    "end": "1392029"
  },
  {
    "text": "artifacts so you can make sure that the same bytecode for your application is",
    "start": "1392029",
    "end": "1397309"
  },
  {
    "text": "deployed out between your tests all the way through your production environments once you build your artifacts then you",
    "start": "1397309",
    "end": "1404960"
  },
  {
    "text": "want to store these somewhere and for options on AWS you can look at s3 Amazon",
    "start": "1404960",
    "end": "1411649"
  },
  {
    "text": "Elastic container repository or you can be building a Mis also in terms of",
    "start": "1411649",
    "end": "1417470"
  },
  {
    "text": "building artifacts code build is Amazon's solution around this it integrates with s3 I'm an Amazon",
    "start": "1417470",
    "end": "1425049"
  },
  {
    "text": "Elastic container repository and docker hub and others it has hooks into code",
    "start": "1425049",
    "end": "1430570"
  },
  {
    "text": "pipeline as you seen and it's a managed service with auto scaling there's also",
    "start": "1430570",
    "end": "1436000"
  },
  {
    "text": "Jenkins and other tools that support this as well that you can find on the AWS marketplace once you have stored",
    "start": "1436000",
    "end": "1443530"
  },
  {
    "text": "your artifacts this is when you can test so when it comes to applications you can look at static code analysis to make",
    "start": "1443530",
    "end": "1450910"
  },
  {
    "text": "sure that your code quality is up to where you want it to be plus you can do static code testing for security as well",
    "start": "1450910",
    "end": "1457780"
  },
  {
    "text": "through OWASP and you can do this before you even deploy out to your test",
    "start": "1457780",
    "end": "1463120"
  },
  {
    "text": "environments in addition to that after you've gone through and passed your static code analysis testing you can",
    "start": "1463120",
    "end": "1471429"
  },
  {
    "text": "deploy out to your test environment using Amazon Amazon elastic container",
    "start": "1471429",
    "end": "1479770"
  },
  {
    "text": "service or elastic beanstalk or going out to ec2 instances and this is where",
    "start": "1479770",
    "end": "1485500"
  },
  {
    "text": "you can also start running Amazon inspector on your ec2 instances for",
    "start": "1485500",
    "end": "1490840"
  },
  {
    "text": "looking at the runtime analysis security vulnerabilities that could be out there of course once that testing passes this",
    "start": "1490840",
    "end": "1499059"
  },
  {
    "text": "is when you can notify your QA teams and security teams for any manual checks",
    "start": "1499059",
    "end": "1505030"
  },
  {
    "text": "that might need to be made after that point in terms of deploying code we want",
    "start": "1505030",
    "end": "1511660"
  },
  {
    "text": "to look at nowadays not just deploying out to ec2 instances but also lambda and for those who have infrastructure on",
    "start": "1511660",
    "end": "1518770"
  },
  {
    "text": "Prem we want to support that as well code deploy puppet and chef they all support",
    "start": "1518770",
    "end": "1523900"
  },
  {
    "text": "to point out in these different scenarios code deploy is a managed service that supports auto scaling so",
    "start": "1523900",
    "end": "1530049"
  },
  {
    "text": "you can actually track what ec2 instances have what version of your code at any point in time there's also puppet",
    "start": "1530049",
    "end": "1539440"
  },
  {
    "text": "and chef if you have those talents on your team and you want to keep utilizing them in terms of testing functionality",
    "start": "1539440",
    "end": "1546250"
  },
  {
    "text": "we've seen this before but code build in conjunction with code pipeline integrates with a lot of third-party",
    "start": "1546250",
    "end": "1551980"
  },
  {
    "text": "tools including Jenkins Nivola ghost inspector h4u storm runner run scope and blaze",
    "start": "1551980",
    "end": "1557350"
  },
  {
    "text": "meter for a combination of poor functionality testing your UI testing",
    "start": "1557350",
    "end": "1562750"
  },
  {
    "text": "and performance testing for security Amazon inspector we've seen this before",
    "start": "1562750",
    "end": "1569080"
  },
  {
    "text": "as well so overall what you're looking for in your applications is being able",
    "start": "1569080",
    "end": "1574810"
  },
  {
    "text": "to comply with the CVE so that common vulnerabilities and exposure list and",
    "start": "1574810",
    "end": "1580180"
  },
  {
    "text": "making sure you don't have vulnerabilities in your applications you're also looking at the CIS benchmarks Amazon security best",
    "start": "1580180",
    "end": "1586840"
  },
  {
    "text": "practices all on running instances when",
    "start": "1586840",
    "end": "1592810"
  },
  {
    "text": "it comes to your functionalities test the tools for Jenkins and ghost inspector and others they have great in",
    "start": "1592810",
    "end": "1598300"
  },
  {
    "text": "for interfaces to show where applications are in terms of passing your tests or diving into specific tests",
    "start": "1598300",
    "end": "1604810"
  },
  {
    "text": "that are having problems for performance and load testing this is something we want you to consider you don't have to",
    "start": "1604810",
    "end": "1610930"
  },
  {
    "text": "do it with every single deploy out for your applications but when major changes happen you want to make sure that your",
    "start": "1610930",
    "end": "1618160"
  },
  {
    "text": "performance has not been affected once you've passed your functionality testing",
    "start": "1618160",
    "end": "1625450"
  },
  {
    "text": "your performance testing and your security testing do not forget that that's when all those manual checks by",
    "start": "1625450",
    "end": "1633520"
  },
  {
    "text": "your QA teams and your security teams they can give their thumbs up and we can deploy your application code to your",
    "start": "1633520",
    "end": "1639970"
  },
  {
    "text": "production environment with that I'm passing the clicker to my colleague",
    "start": "1639970",
    "end": "1647410"
  },
  {
    "text": "Glenn and he's going to take you through security a security demo for applications morning everyone can",
    "start": "1647410",
    "end": "1654280"
  },
  {
    "text": "everyone hear me okay all right so I'm Elaine Henry I've spent many years doing",
    "start": "1654280",
    "end": "1661000"
  },
  {
    "text": "DevOps for lots of different customers and so this morning I'm going to talk to you about how to implement securing your",
    "start": "1661000",
    "end": "1666190"
  },
  {
    "text": "containers inside a part of your CI CD pipeline the example I'm going to show is containers but as URIs made clear a",
    "start": "1666190",
    "end": "1672400"
  },
  {
    "text": "lot of these things depend you have many different deployment mechanisms whether it's to ec2 whether it's to something",
    "start": "1672400",
    "end": "1677950"
  },
  {
    "text": "like elastic Beanstalk you can implement security with those solutions as well so",
    "start": "1677950",
    "end": "1683620"
  },
  {
    "text": "I'm gonna be stopping this video at certain points as I want to highlight I'm gonna focus on three different mechanisms in which you",
    "start": "1683620",
    "end": "1690250"
  },
  {
    "text": "can use to secure your container based applications I'm focusing on containers not just because I love containers but",
    "start": "1690250",
    "end": "1695620"
  },
  {
    "text": "also because it's one of the more frequent the point mechanisms that customers have for deploying applications on top of a SS but many of",
    "start": "1695620",
    "end": "1702580"
  },
  {
    "text": "these same techniques can be applied to a lot of different technologies as well as you return stencil config works great",
    "start": "1702580",
    "end": "1710200"
  },
  {
    "text": "for all sorts of a tubeless resources as well so the first example in this show is how many folks here about how often",
    "start": "1710200",
    "end": "1716110"
  },
  {
    "text": "folks commit access keys and secret keys to github so if for those who don't know",
    "start": "1716110",
    "end": "1722710"
  },
  {
    "text": "this is actually something where maybe once every two weeks someone comes in and mentioned something to me about hey",
    "start": "1722710",
    "end": "1727900"
  },
  {
    "text": "a customer did something like this and it's a very frequent thing that happens so it's we've actually there's a tool",
    "start": "1727900",
    "end": "1734560"
  },
  {
    "text": "out there that we release to the public that can help you figure this out and it's called git secrets it hooks into your git and therefore in your local",
    "start": "1734560",
    "end": "1741370"
  },
  {
    "text": "repository it'll be able to warn you in case someone is trying to attempt to commit something like that into into a",
    "start": "1741370",
    "end": "1746560"
  },
  {
    "text": "repository so this first example is showing in using in our this is so it's",
    "start": "1746560",
    "end": "1753460"
  },
  {
    "text": "using for this example I'm showing a code pipeline NOC code pipeline but using Jenkins and a CI CV pipelines",
    "start": "1753460",
    "end": "1760330"
  },
  {
    "text": "running on Jenkins and it's committing to a code commit repository and in this example I'm showing using the cloud 9 ID",
    "start": "1760330",
    "end": "1766540"
  },
  {
    "text": "how many folks here have played around with cloud 9 definitely it's awesome you should check it out the first thing you do after this meeting is check it out",
    "start": "1766540",
    "end": "1772510"
  },
  {
    "text": "because it's actually pretty amazing but in this example I'm showing how I'm attempting to commit something that",
    "start": "1772510",
    "end": "1777970"
  },
  {
    "text": "includes this access key and then how it's getting stopped would get secrets so here I have a suspicious config JSON",
    "start": "1777970",
    "end": "1786550"
  },
  {
    "text": "that includes access keys in it and if you open that file you can notice it",
    "start": "1786550",
    "end": "1793000"
  },
  {
    "text": "does have secret key information that's not valid secret key information it just matches the records by the way and I'm",
    "start": "1793000",
    "end": "1798370"
  },
  {
    "text": "attempting to commit it so now I'm",
    "start": "1798370",
    "end": "1803380"
  },
  {
    "text": "adding it and committing it",
    "start": "1803380",
    "end": "1808920"
  },
  {
    "text": "and this is what ends up happening and as you can see here get secrets actually gives you a warning and it won't allow",
    "start": "1812170",
    "end": "1818740"
  },
  {
    "text": "the commit to proceed because you had secret information contained into it you can actually modify the the scripts you",
    "start": "1818740",
    "end": "1825460"
  },
  {
    "text": "use as a partner in terms of regular expressions that it could match forged secrets so you don't have to look for it",
    "start": "1825460",
    "end": "1830920"
  },
  {
    "text": "actually has a built-in template for AWS secret information we can add your own using regular expressions you can mark",
    "start": "1830920",
    "end": "1837309"
  },
  {
    "text": "off entire folders ISM there's a bunch of different things you can do with it but the idea behind it is that you don't want it it's an example of a static",
    "start": "1837309",
    "end": "1843400"
  },
  {
    "text": "analysis you can do as a part of your development process to be able to look for suspicious things that you don't want to be able to push out so it's like",
    "start": "1843400",
    "end": "1849580"
  },
  {
    "text": "you know just one example so actually the fix-it so I'm highlighting the error",
    "start": "1849580",
    "end": "1855040"
  },
  {
    "text": "here to actually fix it you have to in this example I'm just removing the file but obviously you could do things like",
    "start": "1855040",
    "end": "1861070"
  },
  {
    "text": "you know comment out that thing as well",
    "start": "1861070",
    "end": "1869549"
  },
  {
    "text": "so I'm actually going to trigger off my pipeline by modifying a change",
    "start": "1869910",
    "end": "1875049"
  },
  {
    "text": "so this pipeline is actually or this CI CD process is actually orchestrated using Jenkins you could similarly do",
    "start": "1875049",
    "end": "1881140"
  },
  {
    "text": "this similarly with with with or different orchestration technologies like code pipeline the reason I'm using",
    "start": "1881140",
    "end": "1887650"
  },
  {
    "text": "Jenkins is this is the next part of my demonstration is on OS so one of the things you want to do in terms of",
    "start": "1887650",
    "end": "1894040"
  },
  {
    "text": "securing your application there are many different things you can do what's known as static analysis which is looking at your actual source files to be able to",
    "start": "1894040",
    "end": "1900400"
  },
  {
    "text": "figure out suspicious thing get secrets as an example of doing that where it's actually where it's actually looking at",
    "start": "1900400",
    "end": "1906040"
  },
  {
    "text": "the file I'm looking for secret information but you can actually get fairly complicated and how you do that and actually the plugin called OS /",
    "start": "1906040",
    "end": "1912580"
  },
  {
    "text": "Jenkins actually allows you to do analysis based on CVEs well-known issues with certain libraries",
    "start": "1912580",
    "end": "1920200"
  },
  {
    "text": "in the context of this example it's this is a package.json that's being used for",
    "start": "1920200",
    "end": "1925960"
  },
  {
    "text": "nodejs application running inside of a container and so OS as a plugin for Jenkins what it does is it actually",
    "start": "1925960",
    "end": "1931840"
  },
  {
    "text": "looks at your package JSON in the example of node app it uses different files with a different formats for",
    "start": "1931840",
    "end": "1936850"
  },
  {
    "text": "example if you're doing jars or Ruby apps it'll look at different files but it basically does static analysis and then",
    "start": "1936850",
    "end": "1943210"
  },
  {
    "text": "basically gives you a report based off of well-known CVEs for example about those libraries",
    "start": "1943210",
    "end": "1948970"
  },
  {
    "text": "that you're using as a part of your application and what's that to useful for is it basically highlights to you that this library that you're using to",
    "start": "1948970",
    "end": "1954850"
  },
  {
    "text": "develop your application you want to make sure you're careful about what you're doing or maybe not use that particular library so that's the purpose",
    "start": "1954850",
    "end": "1961659"
  },
  {
    "text": "for it so I'm doing the commit into the code commit repository and as the as a",
    "start": "1961659",
    "end": "1967960"
  },
  {
    "text": "part of the orchestration so there's the commit",
    "start": "1967960",
    "end": "1972149"
  },
  {
    "text": "and this is I'm just highlighting some of the nice things about using cochem it obviously whichever type of source",
    "start": "1977620",
    "end": "1983380"
  },
  {
    "text": "control repository is fine as well but this is really awesome about the way code commits allows you to do everything inside of the browser",
    "start": "1983380",
    "end": "1988929"
  },
  {
    "text": "I mean similarly you can pull some of this stuff from from you can put one of",
    "start": "1988929",
    "end": "1994330"
  },
  {
    "text": "the things about using a double of services is that we have API hooks for everything so pretty much anything that you can see inside of the console you",
    "start": "1994330",
    "end": "2000090"
  },
  {
    "text": "can actually pull it inside of some more that using API or SDK to be able to use that information otherwise the reason",
    "start": "2000090",
    "end": "2006450"
  },
  {
    "text": "why I highlight this is that at scale you're gonna end up with lots and lots of different orchestrations and when",
    "start": "2006450",
    "end": "2011789"
  },
  {
    "text": "you're doing it this at scale it would make sense to be able to pull that information and aggregate it in order to get a single pane of glass view of your",
    "start": "2011789",
    "end": "2018990"
  },
  {
    "text": "overall CI CD processes because you know as a developer I know that every organization has tons of development",
    "start": "2018990",
    "end": "2025049"
  },
  {
    "text": "operations that are going on at one time so therefore you know as hard as you try you want to standardize on tools but",
    "start": "2025049",
    "end": "2031080"
  },
  {
    "text": "it's not sometimes not always possible so sometimes you may have different folks using different CI CD pipelines for example so one of the goals you'd",
    "start": "2031080",
    "end": "2037649"
  },
  {
    "text": "want to do when you're thinking of deploying a CI see the solution and type of ApS is to consider aggregation and leveraging the fact that if you're using",
    "start": "2037649",
    "end": "2044460"
  },
  {
    "text": "built in a double of services you can make API or SDK SDK calls pull that information into a single source and",
    "start": "2044460",
    "end": "2050460"
  },
  {
    "text": "then put reporting on top of it using one of the many tools popular one is the elk sack so you have elasticsearch and",
    "start": "2050460",
    "end": "2056460"
  },
  {
    "text": "then you're using something like log stash to pull information and Cabana for a dashboard we have a service called quick site which allows you to pull",
    "start": "2056460",
    "end": "2063089"
  },
  {
    "text": "stuff if you have something stored in that street bucket you can put Athene on top of it and then pull that into quick site so the idea though is that you want",
    "start": "2063089",
    "end": "2069780"
  },
  {
    "text": "to aggregate that information such that no matter how your CI CD processes are running you can use that information for",
    "start": "2069780",
    "end": "2075480"
  },
  {
    "text": "analysis to be able to figure out how well you're doing at a high level so this pipeline now should be triggered by",
    "start": "2075480",
    "end": "2081720"
  },
  {
    "text": "the commit in this example I'm having Jenkins pull the code commit repository this would work the same if and you can",
    "start": "2081720",
    "end": "2088950"
  },
  {
    "text": "see here it's actually notice to change already and now we're actually going as",
    "start": "2088950",
    "end": "2094589"
  },
  {
    "text": "it's running to build so a couple of things I want to highlight I'm using the example of Jenkins here yuri showed an",
    "start": "2094589",
    "end": "2100170"
  },
  {
    "text": "example of using code pipeline we support a bunch of different things on different ways of doing this",
    "start": "2100170",
    "end": "2105869"
  },
  {
    "text": "in terms of this example i'm showing OS as a jenkins plugin they're similarly",
    "start": "2105869",
    "end": "2111060"
  },
  {
    "text": "other third party integrations for code pipeline as well that do similar things but we just wanted to show light the",
    "start": "2111060",
    "end": "2116130"
  },
  {
    "text": "breadth of services there are ways in which you can do these things on top of the a SS platform so Oh asses it's it's",
    "start": "2116130",
    "end": "2122700"
  },
  {
    "text": "a part of my build my Jenkins bill so I'll show you the configuration for this right now",
    "start": "2122700",
    "end": "2129140"
  },
  {
    "text": "so the bill is a Jenkins actually figured this out that the build is running so it's it's like I said I'm",
    "start": "2130490",
    "end": "2138300"
  },
  {
    "text": "polling my code commit repository so the",
    "start": "2138300",
    "end": "2143700"
  },
  {
    "text": "it's running every minute so that's my my bill trigger and then as a part of",
    "start": "2143700",
    "end": "2148950"
  },
  {
    "text": "the build so this is a container application so it's actually doing a",
    "start": "2148950",
    "end": "2154160"
  },
  {
    "text": "login into the ECR repository and then I'm actually doing a build and published",
    "start": "2154160",
    "end": "2159210"
  },
  {
    "text": "to ECR with the with what's coming in for the docker file and then I'm",
    "start": "2159210",
    "end": "2165600"
  },
  {
    "text": "actually as a part of this orchestration I'm actually pushing directly to ECS using the image that I just built from",
    "start": "2165600",
    "end": "2172200"
  },
  {
    "text": "and this so this is an automated process so whenever you do a commit it's gonna Jenkins is going to see the change",
    "start": "2172200",
    "end": "2178350"
  },
  {
    "text": "push push it in to ECR and then it's gonna push it out to ECS obviously you can do variations on this depending on",
    "start": "2178350",
    "end": "2184860"
  },
  {
    "text": "what you're trying to do and one of the actions it's actually doing here is using the OS plug-in to display",
    "start": "2184860",
    "end": "2190230"
  },
  {
    "text": "dependency analysis information of your of the code that you're executing and the purpose to that and I'll show you",
    "start": "2190230",
    "end": "2197340"
  },
  {
    "text": "this right now the next step is that graph that you see on the left hand side on the right hand side is actually the",
    "start": "2197340",
    "end": "2203520"
  },
  {
    "text": "output of LS and it's basically doing analysis in this a case of the package.json to basically look at things",
    "start": "2203520",
    "end": "2210120"
  },
  {
    "text": "like CVEs well known exploits based off of the things that are included in your package that JSON I just want to add",
    "start": "2210120",
    "end": "2216180"
  },
  {
    "text": "that in terms of package like JSON for no development we definitely recommend using an actual explicit tag for",
    "start": "2216180",
    "end": "2222300"
  },
  {
    "text": "versions of libraries use their explicit version and not things like latest or greater-than it's it's one of the best",
    "start": "2222300",
    "end": "2228210"
  },
  {
    "text": "practices we recommend for DevOps and in fact I'll be talking about that later today on there caught and I talked on DevOps but as when oh s looks at your",
    "start": "2228210",
    "end": "2235980"
  },
  {
    "text": "package dot JSON and does analysis of it based off of well known vulnerabilities and gives you a report",
    "start": "2235980",
    "end": "2242570"
  },
  {
    "text": "so that's the dependency check actually executing and then similar to URIs demo",
    "start": "2244270",
    "end": "2249410"
  },
  {
    "text": "where it actually pushed published our report output file it's using that report output file to publish and give",
    "start": "2249410",
    "end": "2255410"
  },
  {
    "text": "you a report to the users so obviously if you're doing this at scale those",
    "start": "2255410",
    "end": "2261680"
  },
  {
    "text": "output files become a big deal because like I mentioned you can do aggregation so therefore all these reports that",
    "start": "2261680",
    "end": "2267320"
  },
  {
    "text": "you're doing with static analysis like oh laughs you could pull them all into a central place to be able to do analysis on them to figure out how well your",
    "start": "2267320",
    "end": "2274070"
  },
  {
    "text": "applications are deploying and like I mentioned this actual orchestration executes directly to ECS in this example",
    "start": "2274070",
    "end": "2279950"
  },
  {
    "text": "it's ECS ec2 so eventually it's gonna push the change that I did in code commit all the way to ECS",
    "start": "2279950",
    "end": "2288310"
  },
  {
    "text": "and then this is the service that's deployed inside of ECS and you will see",
    "start": "2295630",
    "end": "2301520"
  },
  {
    "text": "I also have another service that's running which is the topic of mine it's the next area I'm going to focus on which is actually runtime analysis of an",
    "start": "2301520",
    "end": "2308240"
  },
  {
    "text": "actual app service deployed in a container if you notice here as a part of the as a part of the CI CD rollout",
    "start": "2308240",
    "end": "2315740"
  },
  {
    "text": "for this application it's actually taking advantage of the rolling deployments feature of EC EC S which is",
    "start": "2315740",
    "end": "2321260"
  },
  {
    "text": "when you have a new version of application available it actually allows you to and there's a bunch of different ways you can do this you can do blue",
    "start": "2321260",
    "end": "2327440"
  },
  {
    "text": "green you can do replacement you can do there's all sorts of things that dcs",
    "start": "2327440",
    "end": "2332870"
  },
  {
    "text": "allows you to do in terms of how you do deployments in this example what it's doing is doubling in which and this is",
    "start": "2332870",
    "end": "2339020"
  },
  {
    "text": "kind of the default debate behavior if you create a task inside of the console inside a VCS which is basically it adds",
    "start": "2339020",
    "end": "2345110"
  },
  {
    "text": "a container tasks and then doubles the amount of container tasks depending on the setting for you have for how many",
    "start": "2345110",
    "end": "2350990"
  },
  {
    "text": "tasks you want maximum and does connection draining on the old versions of the application and then eventually",
    "start": "2350990",
    "end": "2357050"
  },
  {
    "text": "the ones here he'll check pass it goes to the new version of the the service so",
    "start": "2357050",
    "end": "2362150"
  },
  {
    "text": "that's what's happening and then eventually you will see that the application will get updated to match the new library that's there and then",
    "start": "2362150",
    "end": "2368930"
  },
  {
    "text": "you can also look under the deployments tab and if you notice here there's gonna there's multiple versions of the",
    "start": "2368930",
    "end": "2374480"
  },
  {
    "text": "application running that's just because it's doing the rollout it's just something to get used to when you're doing deployments see ICD using",
    "start": "2374480",
    "end": "2381050"
  },
  {
    "text": "containers so the next portion on my task is about it's about actual runtime",
    "start": "2381050",
    "end": "2388970"
  },
  {
    "text": "analysis static analysis is it's a good pattern because it like I said you can",
    "start": "2388970",
    "end": "2394280"
  },
  {
    "text": "look for things like Secrets being deployed everything else but if you--if you're looking to get more information",
    "start": "2394280",
    "end": "2399320"
  },
  {
    "text": "especially more information on what's actually running in time data side of your containers there's a bunch of different technologies are available out",
    "start": "2399320",
    "end": "2406490"
  },
  {
    "text": "there the one I'm gonna highlight today is called twist lock and what twist lock does is it as you deploy your your",
    "start": "2406490",
    "end": "2412580"
  },
  {
    "text": "services out onto ECS whether that's ec2 or eks in this for example for the",
    "start": "2412580",
    "end": "2418370"
  },
  {
    "text": "example of twist lock you can actually deploy an agent service as well that runs on your containers and does runtime",
    "start": "2418370",
    "end": "2424490"
  },
  {
    "text": "analysis on your actual running contain and give you information similar to what alas does statically but it actually",
    "start": "2424490",
    "end": "2430640"
  },
  {
    "text": "gives you a lot more and it's actually in run time so that actually so this is what alas will give you for example",
    "start": "2430640",
    "end": "2436280"
  },
  {
    "text": "which is based off of just static analysis so based on the fact that you have library X like whatever the",
    "start": "2436280",
    "end": "2442790"
  },
  {
    "text": "libraries that you have it'll tell you these are the vulnerabilities these are the known issues for that specific",
    "start": "2442790",
    "end": "2447920"
  },
  {
    "text": "library if you notice this is kicked off by your CI CD pipeline so there's no work you have to do for security folks",
    "start": "2447920",
    "end": "2453740"
  },
  {
    "text": "to make sure that this testing happens so it's a key part of just trying to automate it and like I said our goal is",
    "start": "2453740",
    "end": "2459110"
  },
  {
    "text": "to have this completely automated so like I said you can aggregate this information across multiple accounts",
    "start": "2459110",
    "end": "2464570"
  },
  {
    "text": "multiple DevOps processes and then pull reporting off of it because like I said for the example of whoa laughs that",
    "start": "2464570",
    "end": "2469730"
  },
  {
    "text": "generates a single file and this is the type of detail I just wanted to",
    "start": "2469730",
    "end": "2475640"
  },
  {
    "text": "highlight the type of detail that you are getting from the this Jenkins plugin and it actually OS will even tell you",
    "start": "2475640",
    "end": "2482360"
  },
  {
    "text": "how to actually remediate the things that it finds so it'll tell you that hey if you're using this specific library",
    "start": "2482360",
    "end": "2488180"
  },
  {
    "text": "you perhaps want to use only these parameters because otherwise you may open yourself up to a vulnerability",
    "start": "2488180",
    "end": "2495070"
  },
  {
    "text": "so the next two so like I mentioned twistlock runs on your on your containers or on",
    "start": "2505030",
    "end": "2511540"
  },
  {
    "text": "your container host just like the services that you're going to deploy with ECS and it actually has a console",
    "start": "2511540",
    "end": "2516760"
  },
  {
    "text": "that you're able to access and that console will give you the information it has the agent is known as a defender",
    "start": "2516760",
    "end": "2522850"
  },
  {
    "text": "that's what twist locks Namie closure for it is and the defender runs on your services on your container",
    "start": "2522850",
    "end": "2528760"
  },
  {
    "text": "hosts and then pulls information things from inside your containers images and then figures out all of this some of the",
    "start": "2528760",
    "end": "2534580"
  },
  {
    "text": "information that's similar how you - how are you doing with OS but it does it at a runtime basis I mean you can already",
    "start": "2534580",
    "end": "2541090"
  },
  {
    "text": "think of the value of why you'd want to do something like it one is you get deeper information on what's happening",
    "start": "2541090",
    "end": "2547090"
  },
  {
    "text": "so for example if you're using static analysis and someone instead of using your package JSON or your docker file",
    "start": "2547090",
    "end": "2553630"
  },
  {
    "text": "for doing a change to your image actually SSH into the image and actually modifies it in runtime you would not be",
    "start": "2553630",
    "end": "2560200"
  },
  {
    "text": "able to be able to figure out those changes using static analysis however using runtime analysis using something",
    "start": "2560200",
    "end": "2565990"
  },
  {
    "text": "like twistlock you'd be able to figure that out and actually that's what I'm doing is jumping over to the twistlock",
    "start": "2565990",
    "end": "2571180"
  },
  {
    "text": "console to be able to show you how much more detail you can get from runtime analysis",
    "start": "2571180",
    "end": "2577740"
  },
  {
    "text": "so this is the twistlock console and as you get into the console I want to highlight a couple of things first off",
    "start": "2597430",
    "end": "2604390"
  },
  {
    "text": "it gives you an overview of all the defenders that it has running on the different container hosts so if your",
    "start": "2604390",
    "end": "2610030"
  },
  {
    "text": "cluster however many instances you have running on your ECS cluster you can",
    "start": "2610030",
    "end": "2616210"
  },
  {
    "text": "deploy defenders on all of them and then you can pull aggregate that information into here one thing I want to highlight",
    "start": "2616210",
    "end": "2621640"
  },
  {
    "text": "as well is it's this is a twist lock console it's separate from your container host so you could have this console looking at lots and lots of",
    "start": "2621640",
    "end": "2628210"
  },
  {
    "text": "different apps spread out all across your infrastructure so you could do this for every single app that you have",
    "start": "2628210",
    "end": "2633550"
  },
  {
    "text": "running in a container across lots of accounts lots of different of projects",
    "start": "2633550",
    "end": "2640650"
  },
  {
    "text": "so it gives you information similar to OS in terms of some static analysis but like I mentioned it does this at runtime",
    "start": "2640650",
    "end": "2647080"
  },
  {
    "text": "so it's actually looking at what's running inside of your container at the actual version that's running inside your container and not just what's in",
    "start": "2647080",
    "end": "2653500"
  },
  {
    "text": "your package JSON so in this example I'm",
    "start": "2653500",
    "end": "2658660"
  },
  {
    "text": "looking in on the app and you'll notice if you I know it's moving a little quickly but it actually shows the two different",
    "start": "2658660",
    "end": "2664870"
  },
  {
    "text": "versions of the app because remember how they did the deployment so because I had the twistlock agent deployed on the",
    "start": "2664870",
    "end": "2670480"
  },
  {
    "text": "different versions of the app when I run the CI CD pipeline it'll actually show the different versions that are there so",
    "start": "2670480",
    "end": "2675970"
  },
  {
    "text": "if you look here you'll see that there's multiple versions of my app being looked at by twistlock and then it'll show me once I click on",
    "start": "2675970",
    "end": "2682570"
  },
  {
    "text": "the different images that I have running it'll actually give me details on vulnerabilities and issues look",
    "start": "2682570",
    "end": "2687940"
  },
  {
    "text": "associated with those running images so",
    "start": "2687940",
    "end": "2693850"
  },
  {
    "text": "there's a lot of information in here and actually honestly we could do a whole talk on the all the vulnerabilities and",
    "start": "2693850",
    "end": "2700540"
  },
  {
    "text": "I'll just let this play out but it'll give you a lot of information like what's running there's even a feature in",
    "start": "2700540",
    "end": "2707860"
  },
  {
    "text": "this where you can establish a firewall in site using twistlock there's a bunch of different capabilities that twistlock has but at the fundamental level what it",
    "start": "2707860",
    "end": "2714910"
  },
  {
    "text": "allows you to do is to do runtime analysis on your container based application and pull back information",
    "start": "2714910",
    "end": "2720220"
  },
  {
    "text": "like this based on run time rather than just static analysis and like I said",
    "start": "2720220",
    "end": "2726430"
  },
  {
    "text": "similar to OS it'll give you like details on how to remediate some of the issue that it finds in the runtime containers",
    "start": "2726430",
    "end": "2733660"
  },
  {
    "text": "so that's about it great thank you n so",
    "start": "2734080",
    "end": "2746660"
  },
  {
    "text": "in summary we've seen the advantages of CI CD not just for getting your",
    "start": "2746660",
    "end": "2753200"
  },
  {
    "text": "applications and your infrastructure into production faster than possible but",
    "start": "2753200",
    "end": "2758510"
  },
  {
    "text": "doing it without losing your security and your compliance standards that you want across your organization in",
    "start": "2758510",
    "end": "2766390"
  },
  {
    "text": "addition to that what I wanted to do after summit go back to your organization's look at what security and",
    "start": "2766390",
    "end": "2772910"
  },
  {
    "text": "compliance tools you're using right now look at the api's think about creating",
    "start": "2772910",
    "end": "2778310"
  },
  {
    "text": "lambda scripts and your code pipelines through cloud formations so you can already have your compliance and your",
    "start": "2778310",
    "end": "2785330"
  },
  {
    "text": "security tools in a codified code pipeline that you can distribute across",
    "start": "2785330",
    "end": "2790970"
  },
  {
    "text": "your organization's so you have governance for your security across all applications and all of your",
    "start": "2790970",
    "end": "2797240"
  },
  {
    "text": "infrastructure going forward with that we don't want to say thank you we have",
    "start": "2797240",
    "end": "2802400"
  },
  {
    "text": "about three minutes for questions so maybe we can only take one or two if there are any questions there's mics",
    "start": "2802400",
    "end": "2807650"
  },
  {
    "text": "otherwise we are very dynamic duo with a huge height differential we will be outside the room also until around 12:00",
    "start": "2807650",
    "end": "2815030"
  },
  {
    "text": "or a little bit after to answer questions as well thank you",
    "start": "2815030",
    "end": "2823300"
  },
  {
    "text": "it was like it's our question yeah question for you as you've gone through a bunch of the teams or a bunch of the",
    "start": "2824059",
    "end": "2831439"
  },
  {
    "text": "tools in order to remain compliance with a lot of us that have FedRAMP compliance",
    "start": "2831439",
    "end": "2837999"
  },
  {
    "text": "how would you cover these tools that you've shown us when we have compliance",
    "start": "2837999",
    "end": "2845229"
  },
  {
    "text": "for FedRAMP and I'll leave it you know moderate or high it doesn't really matter in this context yeah you",
    "start": "2845229",
    "end": "2852890"
  },
  {
    "text": "definitely have to pick tools that are federally compliant and services that are FedRAMP compliant I hope one of the",
    "start": "2852890",
    "end": "2860509"
  },
  {
    "text": "big takeaways from this talk is that there are lots of different ways of accomplishing similar patterns for C ICD",
    "start": "2860509",
    "end": "2866299"
  },
  {
    "text": "process and what you'll find is that their solutions that are fed Ram compliant for example ec2 that you can",
    "start": "2866299",
    "end": "2873289"
  },
  {
    "text": "use to implement these solutions just as long as you still have a solution for two different parts of your pipeline and",
    "start": "2873289",
    "end": "2878719"
  },
  {
    "text": "that's just the big takeaways that you'll you'll just have to use and the marketplace is a great place to look for",
    "start": "2878719",
    "end": "2884569"
  },
  {
    "text": "that and and so that you can actually there is a market place specifically targeting certain levels of compliance",
    "start": "2884569",
    "end": "2890839"
  },
  {
    "text": "as well so yeah that's definitely something to look at in a marketplace and we always recommend talk to your",
    "start": "2890839",
    "end": "2896449"
  },
  {
    "text": "account management team and there's always new parts of the ecosystem happening specifically targeting",
    "start": "2896449",
    "end": "2901969"
  },
  {
    "text": "customers with compliance use cases Thanks okay if that see us outside the",
    "start": "2901969",
    "end": "2908539"
  },
  {
    "text": "door if you have any other questions and thank you again",
    "start": "2908539",
    "end": "2912429"
  }
]