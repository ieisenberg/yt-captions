[
  {
    "start": "0",
    "end": "38000"
  },
  {
    "text": "welcome everyone good afternoon hope you're having a good rain wind so far my",
    "start": "1399",
    "end": "8880"
  },
  {
    "text": "name is Prasad I'm a product manager with the AWS and today's topic is predictive scaling I will start with an",
    "start": "8880",
    "end": "16740"
  },
  {
    "text": "introduction to auto scaling and then jump right into predictive scaling at its benefits after that I have cal patel",
    "start": "16740",
    "end": "25590"
  },
  {
    "text": "from genesis joining me on stage just a reminder this session is being recorded",
    "start": "25590",
    "end": "31170"
  },
  {
    "text": "and will be posted on youtube and the slides will be on SlideShare so let's",
    "start": "31170",
    "end": "36930"
  },
  {
    "text": "get started so auto scaling is a free",
    "start": "36930",
    "end": "42030"
  },
  {
    "start": "38000",
    "end": "38000"
  },
  {
    "text": "service that has been designed to automate capacity provisioning and make",
    "start": "42030",
    "end": "50219"
  },
  {
    "text": "it as simple as possible so currently eight services are supported by auto",
    "start": "50219",
    "end": "56100"
  },
  {
    "text": "scaling ez 2ez SCM are easy to spot elite dynamodb or a sage maker and app",
    "start": "56100",
    "end": "63960"
  },
  {
    "text": "stream 2.0 since launch auto scaling has taken tens of billions of actions on",
    "start": "63960",
    "end": "70260"
  },
  {
    "text": "your behalf increasing your agility to respond to your customers changing",
    "start": "70260",
    "end": "75750"
  },
  {
    "text": "demands while saving you time and money",
    "start": "75750",
    "end": "79939"
  },
  {
    "text": "recently we launched custom resource scaling which enables you to scale any resource on AWS or off of it and",
    "start": "81049",
    "end": "88579"
  },
  {
    "text": "customers and partners are using custom resource scaling in interesting ways we have kenzan who's designed auto",
    "start": "88579",
    "end": "97200"
  },
  {
    "text": "scaling for Canisius using custom resource scaling to give you an overview",
    "start": "97200",
    "end": "105630"
  },
  {
    "text": "of auto scaling it can be used with in in three different ways if you can if",
    "start": "105630",
    "end": "111119"
  },
  {
    "text": "you will you can put a bunch of ec2 resources in an auto scaling group and scale them through ec2 auto scaling",
    "start": "111119",
    "end": "118500"
  },
  {
    "text": "which is accessible through API or the console or cloud formation and for the",
    "start": "118500",
    "end": "124770"
  },
  {
    "text": "other non ec2 services that I mentioned in the previous slide you can scale them",
    "start": "124770",
    "end": "130530"
  },
  {
    "text": "using application auto scaling which is available through the API or cloud formation it's also accessible through",
    "start": "130530",
    "end": "137470"
  },
  {
    "text": "the individual resource consoles for example dynamodb console can be used to",
    "start": "137470",
    "end": "142600"
  },
  {
    "text": "configure dynamodb auto-scaling AWS or scaling which is a third way it's been designed",
    "start": "142600",
    "end": "151260"
  },
  {
    "text": "to scale multiple resources at the same time so it allows you to search and",
    "start": "151260",
    "end": "156580"
  },
  {
    "text": "scale multiple resources with a single scaling plan the application can be",
    "start": "156580",
    "end": "162970"
  },
  {
    "text": "defined either through a cloud formation tag or simply odd formation stack or",
    "start": "162970",
    "end": "168040"
  },
  {
    "text": "simply through a tag and then you can group them together and create a scaling plan a scaling plan can have a mix of",
    "start": "168040",
    "end": "176320"
  },
  {
    "text": "ec2 and on ec2 resources or it could be a bunch of ec2 resources but put in",
    "start": "176320",
    "end": "181960"
  },
  {
    "text": "separate auto-scaling groups so the AWS",
    "start": "181960",
    "end": "187570"
  },
  {
    "text": "auto-scaling console has been specifically designed to make scaling simpler and easily accessible for",
    "start": "187570",
    "end": "194590"
  },
  {
    "text": "everyone with pre-configured options such as optimized forecasts optimized",
    "start": "194590",
    "end": "200530"
  },
  {
    "text": "for availability or balance of both so",
    "start": "200530",
    "end": "206950"
  },
  {
    "start": "205000",
    "end": "205000"
  },
  {
    "text": "let's talk about ec2 auto scaling because today's predictive scaling is about ec2 so before last week if you",
    "start": "206950",
    "end": "214420"
  },
  {
    "text": "wanted to scale ec2 you could do it in three different ways manual scaling which is about manually",
    "start": "214420",
    "end": "221050"
  },
  {
    "text": "changing the capacity of the auto scaling group it's the least automated in fact it's not automated at all when",
    "start": "221050",
    "end": "227650"
  },
  {
    "text": "it comes in handy if you if you have one of events that that you want to respond to then you have scheduled scaling it",
    "start": "227650",
    "end": "235720"
  },
  {
    "text": "allows you to set capacity based on a schedule so me you may have workloads",
    "start": "235720",
    "end": "240760"
  },
  {
    "text": "with say 9 to 5 patterns or weekday weekend patterns and schedule scaling",
    "start": "240760",
    "end": "246400"
  },
  {
    "text": "allows you to set the capacity in advance with a detailed schedule dynamic",
    "start": "246400",
    "end": "253060"
  },
  {
    "text": "scaling changes the capacity on dynamically as the name implies based on",
    "start": "253060",
    "end": "258459"
  },
  {
    "text": "the rules you set so here you have two options the first is step scaling we",
    "start": "258459",
    "end": "263919"
  },
  {
    "text": "changes the capacity in step functions so you could have a configuration such",
    "start": "263919",
    "end": "269199"
  },
  {
    "text": "as that that specifies adding five instances when the CPU utilization goes",
    "start": "269199",
    "end": "274990"
  },
  {
    "text": "beyond 60% for example or you could say at 10% more instances so that's step",
    "start": "274990",
    "end": "280060"
  },
  {
    "text": "scaling and then the second method of dynamic scaling is target tracking where it's which is which is like a thermostat",
    "start": "280060",
    "end": "286750"
  },
  {
    "text": "for your resource utilization you could set up the CPU utilization to be 60% and",
    "start": "286750",
    "end": "293229"
  },
  {
    "text": "then target tracking will automatically add and remove instances to keep that as",
    "start": "293229",
    "end": "298659"
  },
  {
    "text": "average CPU utilization at 60% for that auto scaling group so like I mentioned",
    "start": "298659",
    "end": "304479"
  },
  {
    "text": "before last week these were the three methods but there's always more we can do to further simplify capacity",
    "start": "304479",
    "end": "310810"
  },
  {
    "start": "306000",
    "end": "306000"
  },
  {
    "text": "management some of you have said well the current methods do a good job of",
    "start": "310810",
    "end": "316180"
  },
  {
    "text": "giving us capacity as the traffic changes but we actually want capacity",
    "start": "316180",
    "end": "322419"
  },
  {
    "text": "before the traffic changes so that's where we launched predictive scaling so there could be many reasons why you want",
    "start": "322419",
    "end": "329050"
  },
  {
    "text": "capacity before the traffic changes the first example could be that you have",
    "start": "329050",
    "end": "334479"
  },
  {
    "text": "spikes in traffic there are two steps to steep or you could have warm up times",
    "start": "334479",
    "end": "340930"
  },
  {
    "text": "for your instances that are too long so having capacity before the actual change in traffic can be very useful in these",
    "start": "340930",
    "end": "347620"
  },
  {
    "text": "cases so last week on November 20th we launched predictive scaling so as humans",
    "start": "347620",
    "end": "353860"
  },
  {
    "text": "we're always trying to predict what we can predict whether it be weather and",
    "start": "353860",
    "end": "359529"
  },
  {
    "text": "traffic that affect our day-to-day lives or resources that we consume like time electricity and water prediction always",
    "start": "359529",
    "end": "366909"
  },
  {
    "text": "results in better planning so why predictive scale there's a there's a few",
    "start": "366909",
    "end": "372490"
  },
  {
    "start": "369000",
    "end": "369000"
  },
  {
    "text": "reasons why why we should we could scale before impending change in application traffic so at Amazon when we looked at",
    "start": "372490",
    "end": "379930"
  },
  {
    "text": "our auto scaling groups and the traffic going into those auto scaling groups we we realized that 40 percent of the",
    "start": "379930",
    "end": "387370"
  },
  {
    "text": "traffic is cyclical and when we started talking to our customers he doubled his customers on on their auto scaling",
    "start": "387370",
    "end": "394180"
  },
  {
    "text": "groups the proportion was somewhat similar 40 to 50 percent of scaling groups out there have cyclical",
    "start": "394180",
    "end": "401350"
  },
  {
    "text": "traffic so when we know the nature of the traffic we can take advantage of it for managing capacity in fact many",
    "start": "401350",
    "end": "408940"
  },
  {
    "text": "customers that we talked to are already using schedule scaling to codify their",
    "start": "408940",
    "end": "415270"
  },
  {
    "text": "knowledge of their cyclicality in their auto scaling groups so it would be great to automate that something that is being",
    "start": "415270",
    "end": "421420"
  },
  {
    "text": "done manually to automate that then there are applications with long warm-up times that I mentioned earlier it could",
    "start": "421420",
    "end": "428380"
  },
  {
    "text": "be because of many reasons it could be because you have database servers that need data to be copied over from from",
    "start": "428380",
    "end": "435460"
  },
  {
    "text": "another place or you have a longer configuration times where many",
    "start": "435460",
    "end": "441280"
  },
  {
    "text": "applications may have to be loaded even after the OS is available for the instance instances to start taking",
    "start": "441280",
    "end": "447340"
  },
  {
    "text": "traffic so if we can predict the traffic in these cases we can have the capacity",
    "start": "447340",
    "end": "452650"
  },
  {
    "text": "beforehand another reason is how to control",
    "start": "452650",
    "end": "459150"
  },
  {
    "text": "controlling how auto scaling responds in the case of an a temporarily a temporary",
    "start": "459180",
    "end": "466660"
  },
  {
    "text": "external outage so as it is important for auto scaling groups to respond to",
    "start": "466660",
    "end": "472420"
  },
  {
    "text": "changing traffic it is just as important for them not to respond to short-lived",
    "start": "472420",
    "end": "477970"
  },
  {
    "text": "outages and cause unnecessary fluctuations in capacity so in all the",
    "start": "477970",
    "end": "483400"
  },
  {
    "text": "above cases knowing traffic patterns in advance can enhance your auto scaling",
    "start": "483400",
    "end": "488560"
  },
  {
    "text": "experience so let's look at the benefits of auto scaling how it can enhance your",
    "start": "488560",
    "end": "495010"
  },
  {
    "start": "490000",
    "end": "490000"
  },
  {
    "text": "auto scaling experience so it can make your scaling faster by scaling up in",
    "start": "495010",
    "end": "500920"
  },
  {
    "text": "advance so periodic spikes in traffic that have a daily or weekly pattern if",
    "start": "500920",
    "end": "506170"
  },
  {
    "text": "you have traffic like that you can set up predictive scaling to scale in advance of the spike having capacity",
    "start": "506170",
    "end": "511830"
  },
  {
    "text": "available and ready to take on more traffic before the spike occurs makes auto scaling faster than ever",
    "start": "511830",
    "end": "519659"
  },
  {
    "text": "auto scaling is becomes more accurate as well with with predictive scaling",
    "start": "519660",
    "end": "525360"
  },
  {
    "text": "knowing what the usual traffic for that day for anytime of that day is helpful",
    "start": "525360",
    "end": "531160"
  },
  {
    "text": "to recognize a new pattern and respond to it appropriately then the third the third benefit is that",
    "start": "531160",
    "end": "540139"
  },
  {
    "text": "predictive scaling makes auto scaling configuration simpler in many cases",
    "start": "540139",
    "end": "546100"
  },
  {
    "text": "customers are using scheduled scaling and dynamic scaling together for various",
    "start": "546100",
    "end": "552740"
  },
  {
    "text": "reasons suppose you have a weekly traffic pattern it might need hundred plus scheduled scaling actions to cover",
    "start": "552740",
    "end": "560629"
  },
  {
    "text": "the pattern and suppose you deploy that application in a new time zone or you",
    "start": "560629",
    "end": "566480"
  },
  {
    "text": "launch a new feature in that application that suddenly becomes popular in a particular time zone then your weekly",
    "start": "566480",
    "end": "572120"
  },
  {
    "text": "pattern changes and then you would have to manually configure all those hundred plus scaling actions to the new pattern",
    "start": "572120",
    "end": "577699"
  },
  {
    "text": "with predictive scaling you never have to do that again you you basically the",
    "start": "577699",
    "end": "583579"
  },
  {
    "text": "predictive scaling algorithms will learn the new pattern and change the scheduled scaling actions automatically going",
    "start": "583579",
    "end": "589699"
  },
  {
    "text": "forward every day and they do that every day we look at that in more detail so in that way",
    "start": "589699",
    "end": "595310"
  },
  {
    "text": "predictive scaling makes auto scaling configuration simpler I'd like to",
    "start": "595310",
    "end": "601939"
  },
  {
    "start": "600000",
    "end": "600000"
  },
  {
    "text": "present three use cases to discuss the benefits to showcase the benefits of predictive scaling in a in a practical",
    "start": "601939",
    "end": "609079"
  },
  {
    "text": "setting the first use case here's a micro service in amazon.com so here",
    "start": "609079",
    "end": "616550"
  },
  {
    "text": "we're showing four days worth of requests per minute metric as you can see there's there there are multiple",
    "start": "616550",
    "end": "623300"
  },
  {
    "text": "spikes in a day and in many cases a spike is immediately followed by another",
    "start": "623300",
    "end": "628850"
  },
  {
    "text": "spike so in this type of traffic if you have a 15-minute warmup time you might",
    "start": "628850",
    "end": "635720"
  },
  {
    "text": "have to have extra capacity in place in order to accommodate those spikes or you",
    "start": "635720",
    "end": "641300"
  },
  {
    "text": "might risk poor customer experience so let's see how predictive scaling handles",
    "start": "641300",
    "end": "646939"
  },
  {
    "text": "this kind of traffic so what we've done here is that we've taken 14 days worth",
    "start": "646939",
    "end": "653029"
  },
  {
    "text": "of historic traffic and predicted it into the future the forecasting",
    "start": "653029",
    "end": "658250"
  },
  {
    "text": "algorithms in predictive scaling forecast two days into the future so",
    "start": "658250",
    "end": "663410"
  },
  {
    "text": "we've overlaid multiple multiple forecasts here to show the",
    "start": "663410",
    "end": "668480"
  },
  {
    "text": "five-day forecast in this graph so as you can see the algorithms predicted the spikes fairly accurately so in this step",
    "start": "668480",
    "end": "676280"
  },
  {
    "text": "all we're doing is that we're we're taking the load metric and forecasting it in the future and the load metric is",
    "start": "676280",
    "end": "682310"
  },
  {
    "text": "is it's independent of the size of the auto scaling group it's an external metric now to be precise so now let's",
    "start": "682310",
    "end": "689000"
  },
  {
    "text": "see how our scaling takes this forecast and uses it for capacity so what the",
    "start": "689000",
    "end": "695150"
  },
  {
    "text": "algorithm algorithms do is that they take the the forecasted load and then",
    "start": "695150",
    "end": "700730"
  },
  {
    "text": "the forecast capacity based on that load excuse me and they do that for the next",
    "start": "700730",
    "end": "707960"
  },
  {
    "text": "48 hours so it's an hourly forecast for the next 48 hours so there's 48 pieces of forecast into the future so what we",
    "start": "707960",
    "end": "714590"
  },
  {
    "text": "see here is that the capacity which is the white line it's overlaid on top of the actual load and the forecasted load",
    "start": "714590",
    "end": "720920"
  },
  {
    "text": "and the scale for the capacity is shown on the right of the chart so with predictive scaling you can you you get",
    "start": "720920",
    "end": "727310"
  },
  {
    "text": "an automatically setup set of pretty sophisticated schedule scaling actions",
    "start": "727310",
    "end": "734420"
  },
  {
    "text": "in advance that that Mirror Mirror your traffic pattern now let's zoom in into",
    "start": "734420",
    "end": "739460"
  },
  {
    "start": "737000",
    "end": "737000"
  },
  {
    "text": "the spike and see what exactly is happening here during a spike this is the spike that has been blown up for in",
    "start": "739460",
    "end": "747590"
  },
  {
    "text": "terms of time the pink line is the actual load the green line is the",
    "start": "747590",
    "end": "753800"
  },
  {
    "text": "scaling response without predictive scaling and the white line is the response with predictive scaling",
    "start": "753800",
    "end": "759260"
  },
  {
    "text": "included so this particular auto scaling group had an instance warmup time of about 15 minutes so a couple of points",
    "start": "759260",
    "end": "766460"
  },
  {
    "text": "to note in steady-state both they're scaling response with with predictive",
    "start": "766460",
    "end": "772100"
  },
  {
    "text": "scaling and without predictive scaling are somewhat similar but with the 15",
    "start": "772100",
    "end": "777680"
  },
  {
    "text": "minute warmup time without predictive scaling the capacity takes time to catch up with the variations in the spike it's",
    "start": "777680",
    "end": "783800"
  },
  {
    "text": "pretty much a straight line but with predictive scaling we're able to see variations in capacity that mirror the",
    "start": "783800",
    "end": "791630"
  },
  {
    "text": "shape of the spike so so this illustrates how predictive scaling combined with dynamic scaling",
    "start": "791630",
    "end": "798339"
  },
  {
    "text": "makes auto-scaling faster especially during spiky traffic I'd like to",
    "start": "798339",
    "end": "805569"
  },
  {
    "start": "803000",
    "end": "803000"
  },
  {
    "text": "illustrate a second use case using another micro service in amazon.com this",
    "start": "805569",
    "end": "812050"
  },
  {
    "text": "one has daily daily and a bit of a weekly pattern as well as you can see",
    "start": "812050",
    "end": "817839"
  },
  {
    "text": "from higher traffic on certain days and the right side of the chart the orange",
    "start": "817839",
    "end": "822850"
  },
  {
    "text": "line shows the forecast overlaid on top of the actual traffic so if you see the",
    "start": "822850",
    "end": "828970"
  },
  {
    "text": "actual traffic there is a there is a certain dip for a brief period of time that recovers quite quite quickly but",
    "start": "828970",
    "end": "837519"
  },
  {
    "text": "the predictive scaling forecast traces the usual traffic pattern usual traffic pattern for that time of the day and day",
    "start": "837519",
    "end": "844509"
  },
  {
    "text": "of the week and so you see that you see that you see the forecast overlaid on",
    "start": "844509",
    "end": "850029"
  },
  {
    "text": "top of art of the actual traffic I'd like to zoom in on the capacity",
    "start": "850029",
    "end": "857199"
  },
  {
    "text": "overlaid on top of the the forecast the forecasted load and show you what",
    "start": "857199",
    "end": "863019"
  },
  {
    "text": "happens so what happens here is is interesting in the case of predictive",
    "start": "863019",
    "end": "869110"
  },
  {
    "text": "scaling it sets the the minimum value for the minimum capacity for the auto",
    "start": "869110",
    "end": "875050"
  },
  {
    "text": "scaling group so in this case the dynamic scaling doesn't take the capacity below the minimum and hence you",
    "start": "875050",
    "end": "882550"
  },
  {
    "text": "have this guardrail kind of a functionality that we can we can zoom in and see the pink line shows the actual",
    "start": "882550",
    "end": "889839"
  },
  {
    "text": "load the green line is the auto scaling without predictive scaling and the white line is the response with predictive",
    "start": "889839",
    "end": "898089"
  },
  {
    "text": "scaling included so a couple of things to note one is that without predictive",
    "start": "898089",
    "end": "903850"
  },
  {
    "text": "scaling the capacity takes longer to recover even after if even after the spike has recovered there's a bit of a",
    "start": "903850",
    "end": "910420"
  },
  {
    "text": "lag in obviously because of the warmup time etc to to recover from the from the",
    "start": "910420",
    "end": "916749"
  },
  {
    "text": "dip I mean but with the predictive scaling the untimely dip doesn't have any effect on the provision capacity so",
    "start": "916749",
    "end": "923139"
  },
  {
    "text": "in this case predictive scaling is acting as a guardrail for dynamic scaling and making it more",
    "start": "923139",
    "end": "930510"
  },
  {
    "text": "accurate the overall scaling more accurate let's look at another micro",
    "start": "930510",
    "end": "938370"
  },
  {
    "start": "935000",
    "end": "935000"
  },
  {
    "text": "service this is the third use case here we've taken a micro service and we",
    "start": "938370",
    "end": "943890"
  },
  {
    "text": "artificially increase the traffic week over week so week 1 week 2 traffic was",
    "start": "943890",
    "end": "948930"
  },
  {
    "text": "20% higher than week 1 and week 3 was 20% higher than week 2 we did that to",
    "start": "948930",
    "end": "956070"
  },
  {
    "text": "illustrate a service where over time due to either increase that option or increase usage any schedule scaling",
    "start": "956070",
    "end": "964230"
  },
  {
    "text": "actions that you might have configured will quickly become dated now this may be an extra example where traffic is",
    "start": "964230",
    "end": "970950"
  },
  {
    "text": "increasing week or week but it's it's it's intended to mimic deployments that",
    "start": "970950",
    "end": "977190"
  },
  {
    "text": "that will change your pattern you see that if you had set up a detailed",
    "start": "977190",
    "end": "982860"
  },
  {
    "text": "schedule scaling actions along with your dynamic scaling it would you pretty much have to be reset up again in this case",
    "start": "982860",
    "end": "989490"
  },
  {
    "text": "you could just increase them by 20% but but in the real world it's not as clean but the main point I want to make is",
    "start": "989490",
    "end": "996630"
  },
  {
    "text": "that with predictive scaling the forecast quickly catch up after about a day of showing a lower forecast even",
    "start": "996630",
    "end": "1004220"
  },
  {
    "text": "though the last two weeks forecast is considerably lower than this weeks after",
    "start": "1004220",
    "end": "1009260"
  },
  {
    "text": "a day of forecasting they catch up to the new levels that the actual traffic",
    "start": "1009260",
    "end": "1014960"
  },
  {
    "text": "is so in this case it's it's adding simplicity to your configuration by by",
    "start": "1014960",
    "end": "1020000"
  },
  {
    "text": "removing the need for doing manual schedule scaling actions let's look at",
    "start": "1020000",
    "end": "1030110"
  },
  {
    "text": "some of the key aspects of configuring predictive scaling the first key metric",
    "start": "1030110",
    "end": "1035540"
  },
  {
    "text": "is the load metric this is the incoming load into the auto scaling group we use",
    "start": "1035540",
    "end": "1041839"
  },
  {
    "text": "last two weeks of data for our prediction algorithms but predictions",
    "start": "1041839",
    "end": "1048199"
  },
  {
    "text": "can will be done with as little as one day worth of data and this load metric",
    "start": "1048199",
    "end": "1056540"
  },
  {
    "text": "is independent of the size of the auto scaling group because it's it's an external metric then you have the",
    "start": "1056540",
    "end": "1062060"
  },
  {
    "text": "scaling metric this is the metric that you would typically use with your target tracking to configure target tracking it",
    "start": "1062060",
    "end": "1069560"
  },
  {
    "text": "it denotes the the resource utilization",
    "start": "1069560",
    "end": "1074610"
  },
  {
    "text": "levels of this paragraph of the auto scaling group this scaling metric is",
    "start": "1074610",
    "end": "1080010"
  },
  {
    "text": "also used by predictive scaling not just target tracking because it uses this the",
    "start": "1080010",
    "end": "1085050"
  },
  {
    "text": "scaling metric to to figure out the capacity from the forecasted load we'll look at that in the next slide so the",
    "start": "1085050",
    "end": "1092100"
  },
  {
    "text": "scaling metric is used both by dynamic scaling or target tracking in this case and predictive scaling there are other",
    "start": "1092100",
    "end": "1101340"
  },
  {
    "start": "1099000",
    "end": "1099000"
  },
  {
    "text": "optional configurations that we hope are useful to you you can configure how much in advanced",
    "start": "1101340",
    "end": "1107820"
  },
  {
    "text": "you want the predictive scaling to scale your draft to scale your capacity before",
    "start": "1107820",
    "end": "1113100"
  },
  {
    "text": "traffic so you can say 20 minutes in advance so knowing the forecast it will have the predictive scaling will ensure",
    "start": "1113100",
    "end": "1119970"
  },
  {
    "text": "that you have capacity 20 minutes in advance so that it's the instances are up and running and ready to take on",
    "start": "1119970",
    "end": "1125670"
  },
  {
    "text": "traffic so that's a configurable parameter in predictive scaling you can",
    "start": "1125670",
    "end": "1131430"
  },
  {
    "text": "also configure how predictive scaling handles your max capacity so you could",
    "start": "1131430",
    "end": "1138420"
  },
  {
    "text": "have an externally configured max capacity for the auto scaling group but predictive scaling my predict that you",
    "start": "1138420",
    "end": "1144090"
  },
  {
    "text": "need a capacity that's higher than what you've already what you've configured and in such cases you can you can",
    "start": "1144090",
    "end": "1150300"
  },
  {
    "text": "specify both options you can say no stick to my max capacity that I've configured already or increase the max",
    "start": "1150300",
    "end": "1156930"
  },
  {
    "text": "capacity to what you predicted what predictive scaling is predicted so both options are possible",
    "start": "1156930",
    "end": "1161970"
  },
  {
    "text": "you could also in you know use predictive scaling or da SS auto scaling",
    "start": "1161970",
    "end": "1167330"
  },
  {
    "text": "scaling plan settings to configure whether you want to replace external",
    "start": "1167330",
    "end": "1173700"
  },
  {
    "text": "target tracking policies that you've set somewhere else so if there's already an existing target tracking policy you can",
    "start": "1173700",
    "end": "1179700"
  },
  {
    "text": "replace that with a new scaling plan that includes both predictive and target tracking policies together finally",
    "start": "1179700",
    "end": "1188130"
  },
  {
    "text": "there's also an option to do forecast only mode for",
    "start": "1188130",
    "end": "1193269"
  },
  {
    "text": "simulation of scheduled capacity so in this case the predictive scaling algorithms will generate the actual",
    "start": "1193269",
    "end": "1200860"
  },
  {
    "text": "capacity but they're not applied to the auto scaling group so you can use them for for for various things to understand",
    "start": "1200860",
    "end": "1207639"
  },
  {
    "text": "the pattern of your traffic for the next few days etc so how does it all work",
    "start": "1207639",
    "end": "1214210"
  },
  {
    "text": "behind the scenes so what we have is a model that has been trained on billions",
    "start": "1214210",
    "end": "1220389"
  },
  {
    "text": "of data points from amazon.com makes it a very effective forecasting model it",
    "start": "1220389",
    "end": "1227169"
  },
  {
    "text": "takes the load metric and forecast it for the next two days at the same time",
    "start": "1227169",
    "end": "1232179"
  },
  {
    "text": "predictive scaling performs regression analysis between your load metric and scaling metric and then schedule scaling",
    "start": "1232179",
    "end": "1238240"
  },
  {
    "text": "capacity for every hour for the next 48 hours and the whole process is repeated",
    "start": "1238240",
    "end": "1244019"
  },
  {
    "text": "every day so but and in the mean time dynamic scaling continues to make",
    "start": "1244019",
    "end": "1250749"
  },
  {
    "text": "adjustments on top of the schedule scaling kept a scheduled capacity to result in faster simpler and more",
    "start": "1250749",
    "end": "1257289"
  },
  {
    "text": "accurate auto scaling finally I want to",
    "start": "1257289",
    "end": "1262779"
  },
  {
    "start": "1261000",
    "end": "1261000"
  },
  {
    "text": "point out that you can use predictive scaling with or without target tracking so if when it's used with target",
    "start": "1262779",
    "end": "1270909"
  },
  {
    "text": "tracking predictive scaling sets the minimum capacity and target tracking will adjust the dynamic desired capacity",
    "start": "1270909",
    "end": "1278950"
  },
  {
    "text": "dynamically and without predict without target tracking predictive scaling only sets the minimum capacity so scaling in",
    "start": "1278950",
    "end": "1286869"
  },
  {
    "text": "has to be handled somewhere else outside of the scaling plan so we have been in",
    "start": "1286869",
    "end": "1292360"
  },
  {
    "text": "private beta for the last several weeks and genesis has been one of our beta",
    "start": "1292360",
    "end": "1298299"
  },
  {
    "text": "customers so it is my pleasure to invite kal Patel principal architect at Genesis",
    "start": "1298299",
    "end": "1304720"
  },
  {
    "text": "to join us on stage to talk about how predictive scaling benefits Genesis pure cloud thanks for sir",
    "start": "1304720",
    "end": "1312929"
  },
  {
    "text": "all right hope you guys are having fun and that's bright",
    "start": "1315629",
    "end": "1321429"
  },
  {
    "text": "alright so Genesis pure cloud Genesis",
    "start": "1321429",
    "end": "1327459"
  },
  {
    "text": "provides a contact center infrastructure we've been recognized 23 times by Gartner and in 2018 we were recognized",
    "start": "1327459",
    "end": "1334839"
  },
  {
    "text": "as the leader in context senator Al",
    "start": "1334839",
    "end": "1338669"
  },
  {
    "text": "Franken's pure cloud pure connect and pure engage actually let me go back so",
    "start": "1340019",
    "end": "1346690"
  },
  {
    "text": "pure cloud for this talk I'm going to focus mainly on pure cloud it's a hundred percent AWS deployment so this",
    "start": "1346690",
    "end": "1355959"
  },
  {
    "start": "1354000",
    "end": "1354000"
  },
  {
    "text": "is a very high-level bird's-eye view of pure cloud deployment single short cloud",
    "start": "1355959",
    "end": "1362079"
  },
  {
    "text": "deployment is contained within a single region and what you're seeing is each box there were presents micro service or",
    "start": "1362079",
    "end": "1369159"
  },
  {
    "text": "our data tiers and what the lines between them is the communication happening between those between the",
    "start": "1369159",
    "end": "1375369"
  },
  {
    "text": "micro services and the data tiers any given time to give you an idea of the",
    "start": "1375369",
    "end": "1381070"
  },
  {
    "text": "scale we're about 200 plus micro services were deployed in five AWS",
    "start": "1381070",
    "end": "1386289"
  },
  {
    "text": "regions we followed the DevOps philosophy all the way you build it you",
    "start": "1386289",
    "end": "1392320"
  },
  {
    "text": "own it all the way you own it and Prague you maintain it and prod everything all the way we're not less what I mean by",
    "start": "1392320",
    "end": "1399729"
  },
  {
    "text": "that is we don't have a NOC it's the service teams that get woken up in the middle of the night it's the service",
    "start": "1399729",
    "end": "1405519"
  },
  {
    "text": "teams that see the alerts and pages they're the ones who run to play books if they're anything needs to happen and",
    "start": "1405519",
    "end": "1410979"
  },
  {
    "text": "we're immutable so what I mean by immutable is we actually bake am eyes",
    "start": "1410979",
    "end": "1417940"
  },
  {
    "text": "and promote the same ami across environments and across all deployments so to give you an idea doing our build",
    "start": "1417940",
    "end": "1427329"
  },
  {
    "text": "process we actually before we release in am I in any environments it goes through all the validation security testing and",
    "start": "1427329",
    "end": "1435609"
  },
  {
    "text": "all other stuff before it gets released out and we are PCI and HIPAA compliant on top of that so to go more into",
    "start": "1435609",
    "end": "1443919"
  },
  {
    "text": "details we at any given point where 7,000 instances during peak hours we've",
    "start": "1443919",
    "end": "1449050"
  },
  {
    "text": "seen it passed about 10,000 we have about 3,000 aSG's and about 2500 ec2",
    "start": "1449050",
    "end": "1458020"
  },
  {
    "text": "images at any given point here's our pipeline there's a quick summary of our",
    "start": "1458020",
    "end": "1464200"
  },
  {
    "text": "weekly pipeline we do about 1500 deploys a day 500 in tests and about 350 in",
    "start": "1464200",
    "end": "1472600"
  },
  {
    "text": "production so when you think about it 350 deployed in production across 200",
    "start": "1472600",
    "end": "1478690"
  },
  {
    "text": "plus micro services it's quite a bit of churn on a weekly basis so when we",
    "start": "1478690",
    "end": "1484720"
  },
  {
    "text": "started talking about predictive scaling we started looking at what will you do",
    "start": "1484720",
    "end": "1490000"
  },
  {
    "text": "we want to get out of it and the first thing was we our main focus is to",
    "start": "1490000",
    "end": "1495610"
  },
  {
    "text": "provide a highly available platform while optimizing for cost second due to",
    "start": "1495610",
    "end": "1501040"
  },
  {
    "text": "security and compliance reasons we cannot failover across regions so every",
    "start": "1501040",
    "end": "1506110"
  },
  {
    "text": "region has its own or every deployment has its own unique patterns because",
    "start": "1506110",
    "end": "1511990"
  },
  {
    "text": "every deployment has a different set of customers and they all bring you each customer brings a unique set of patterns",
    "start": "1511990",
    "end": "1518410"
  },
  {
    "text": "with them all together and this year alone we have seen a double triple digit",
    "start": "1518410",
    "end": "1525550"
  },
  {
    "text": "growth in platform usage and as a result we spend quite a bit of time optimizing our capacity planning tweaking or auto",
    "start": "1525550",
    "end": "1533860"
  },
  {
    "text": "scaling groups and things like that so we were pretty excited to you know jump",
    "start": "1533860",
    "end": "1539920"
  },
  {
    "text": "on and play with predictive skill and when it became available so before we go",
    "start": "1539920",
    "end": "1545530"
  },
  {
    "text": "into detail actually here's a quick overview of a single micro service",
    "start": "1545530",
    "end": "1551890"
  },
  {
    "text": "across three deployments you can see in US East we have about 12,000 requests",
    "start": "1551890",
    "end": "1558670"
  },
  {
    "text": "per minute average in Tokyo we have about 3,000 and in Ireland we have about",
    "start": "1558670",
    "end": "1564420"
  },
  {
    "text": "31,000 requests per minute you would think Ireland's our busiest deployment",
    "start": "1564420",
    "end": "1570970"
  },
  {
    "text": "it's not it's actually us East is by far the busiest one in this specific case we",
    "start": "1570970",
    "end": "1576880"
  },
  {
    "text": "have a single customer that has a very unique usage pattern and that results into a very",
    "start": "1576880",
    "end": "1582670"
  },
  {
    "text": "different workload for this micro service and you can tell because service",
    "start": "1582670",
    "end": "1588940"
  },
  {
    "text": "teams on everything into and they spend a lot of time to stay ahead of this kind of changes and usage patterns and things",
    "start": "1588940",
    "end": "1595120"
  },
  {
    "text": "like that so to go further earlier this",
    "start": "1595120",
    "end": "1601210"
  },
  {
    "text": "year we had a we had a small incident or accident and I'm gonna talk through it a",
    "start": "1601210",
    "end": "1606910"
  },
  {
    "text": "little bit and I'm gonna talk about predictive scaling and tie it all together towards the end hopefully so",
    "start": "1606910",
    "end": "1614110"
  },
  {
    "text": "walk through it very quickly we know we normally deploy during off-peak hours",
    "start": "1614110",
    "end": "1620080"
  },
  {
    "text": "and we deploy across all regions when we'd roll out new changes in this specific case we did the roll out all",
    "start": "1620080",
    "end": "1626650"
  },
  {
    "text": "the tests pass everything looks great so we went home we came in in the morning realized we had we had some issues in",
    "start": "1626650",
    "end": "1634570"
  },
  {
    "text": "one of the regions and we decided we're gonna roll back we didn't only roll back",
    "start": "1634570",
    "end": "1640180"
  },
  {
    "text": "in that region but we decided we're gonna roll back across all regions so in",
    "start": "1640180",
    "end": "1645580"
  },
  {
    "text": "u.s. East we roll back and about a short period after that we saw a very a very",
    "start": "1645580",
    "end": "1652330"
  },
  {
    "text": "small spike in error rate if you notice it's less than 0.4% but some of in this",
    "start": "1652330",
    "end": "1660100"
  },
  {
    "text": "specific case it's very time sensitive and it happened right during the peak hours so it was enough for our customers",
    "start": "1660100",
    "end": "1667000"
  },
  {
    "text": "to notice and call us and we got quite a few support cases open because of the small pipe now because of the small",
    "start": "1667000",
    "end": "1674950"
  },
  {
    "text": "spike in this service we had multiple circuits open downstream as well so it",
    "start": "1674950",
    "end": "1680400"
  },
  {
    "text": "trickled down that solution quite a bit and as you can see we were covered",
    "start": "1680400",
    "end": "1686650"
  },
  {
    "text": "fairly quickly in this case so and then we deployed a fix very quickly after",
    "start": "1686650",
    "end": "1692140"
  },
  {
    "text": "that what I'm gonna do now is I'm going to replay the same incident from ASG",
    "start": "1692140",
    "end": "1699820"
  },
  {
    "text": "metrics in this specific case I'm using the total instance count every different",
    "start": "1699820",
    "end": "1705730"
  },
  {
    "text": "color is a different deployment on this picture so as you can see we had a",
    "start": "1705730",
    "end": "1711690"
  },
  {
    "text": "deployment off hours we'd roll back in the morning but one",
    "start": "1711690",
    "end": "1718929"
  },
  {
    "text": "thing I want to point out here is if you see we scaled up every day using schedule scaling and it's very static so",
    "start": "1718929",
    "end": "1726249"
  },
  {
    "text": "in in this specific scenario what happened is we had scaled up and then we",
    "start": "1726249",
    "end": "1731259"
  },
  {
    "text": "decided to roll back and when we roll back our schedule scaling did not reacts",
    "start": "1731259",
    "end": "1736360"
  },
  {
    "text": "acute because it was after the time period and as a result there were men values on the SES weren't set to what we",
    "start": "1736360",
    "end": "1743230"
  },
  {
    "text": "would expect them normally and because of that target tracking scaled us down",
    "start": "1743230",
    "end": "1750399"
  },
  {
    "text": "quite a bit and then when the morning spike came in the target tracking",
    "start": "1750399",
    "end": "1756279"
  },
  {
    "text": "decided hey you need to scale up to handle the capacity quite a bit so what",
    "start": "1756279",
    "end": "1761529"
  },
  {
    "text": "happened is we we tried to double if not triple in capacity very quickly our computer came up fairly fast however",
    "start": "1761529",
    "end": "1769960"
  },
  {
    "text": "over cashing and did it here were lagging behind so the air spike you saw in the previous picture was really us",
    "start": "1769960",
    "end": "1777340"
  },
  {
    "text": "not the data tier not being available fast enough and as a result we draw a few requests on the floor now during the",
    "start": "1777340",
    "end": "1786429"
  },
  {
    "text": "investigation we fixed the ASD and we were able to continue through just fine",
    "start": "1786429",
    "end": "1791759"
  },
  {
    "text": "so to give you an idea we started playing with predictive scaling and I'm",
    "start": "1791759",
    "end": "1798460"
  },
  {
    "start": "1792000",
    "end": "1792000"
  },
  {
    "text": "gonna walk through how our daily workloads or daily scallops have changed",
    "start": "1798460",
    "end": "1803649"
  },
  {
    "text": "with predictive scaling a little bit so as you noticed and normally we just",
    "start": "1803649",
    "end": "1810669"
  },
  {
    "text": "scale up and we plateau all the way through and then we scale back down on the second day you see we actually",
    "start": "1810669",
    "end": "1817779"
  },
  {
    "text": "enable predictive scaling and you could see the min values going up and down and it looks of much nicer curve the rest of",
    "start": "1817779",
    "end": "1825970"
  },
  {
    "text": "the graph so the bottom picture is actually grouped min size and service in",
    "start": "1825970",
    "end": "1834999"
  },
  {
    "text": "service instance count or desired capacity what's interesting here is it's",
    "start": "1834999",
    "end": "1840940"
  },
  {
    "text": "a combination of predictive updating the min size and dynamic updating that is",
    "start": "1840940",
    "end": "1847510"
  },
  {
    "text": "at capacity and you can see we actually tweet-tweet fairly well where we could handle the first half of the load fairly",
    "start": "1847510",
    "end": "1854680"
  },
  {
    "text": "easily and then during the second half we get quite a bit of spike and then",
    "start": "1854680",
    "end": "1860050"
  },
  {
    "text": "target tracking takes up and we scale what much higher than what we expect now",
    "start": "1860050",
    "end": "1867420"
  },
  {
    "text": "this was an able with a very small data set so this did not have two weeks of",
    "start": "1867420",
    "end": "1872470"
  },
  {
    "text": "data that Prasad talked about it was about 48 hours of data so it's a very",
    "start": "1872470",
    "end": "1877480"
  },
  {
    "text": "small data that we enabled and we were we were playing around with says do you",
    "start": "1877480",
    "end": "1883630"
  },
  {
    "text": "see on the second day the predictive decided we don't need to scale up as early and as a result the very first",
    "start": "1883630",
    "end": "1891400"
  },
  {
    "text": "bike in the morning we didn't have enough capacity and target tracking scaled us up pretty high interestingly",
    "start": "1891400",
    "end": "1901170"
  },
  {
    "text": "after that we handled the first spike target tracking tried to scale us down predictive had caught up and changed our",
    "start": "1901170",
    "end": "1908080"
  },
  {
    "text": "min value to the right capacity we didn't really scale them down any further we stayed at provision capacity",
    "start": "1908080",
    "end": "1914860"
  },
  {
    "text": "and then when we had the second spike we were able to scale up fairly well now",
    "start": "1914860",
    "end": "1921570"
  },
  {
    "text": "one thing I want to point out is the it's the sharp how is to scale up if you",
    "start": "1921570",
    "end": "1929050"
  },
  {
    "text": "look at the first scale up it straight up that's where we hit run into a lot of issues where your computer is it's very",
    "start": "1929050",
    "end": "1936910"
  },
  {
    "text": "easy to bring it up online and it's all available but your cache caching and",
    "start": "1936910",
    "end": "1942010"
  },
  {
    "text": "data tiers are always lagging behind and this situation also creates a lot of surface area for things to go bad you",
    "start": "1942010",
    "end": "1948910"
  },
  {
    "text": "run into a lot of race conditions and all kind of issues with it and if you look at the graph on 1115 predictive",
    "start": "1948910",
    "end": "1957550"
  },
  {
    "text": "adjusted the min value fairly well and that scale up is much more gradual and it actually was very much in line with",
    "start": "1957550",
    "end": "1964840"
  },
  {
    "text": "our data tier scaling up and whatnot so it was a much more controlled scale up",
    "start": "1964840",
    "end": "1971310"
  },
  {
    "text": "so in hindsight everything simple hindsight we always think we could have",
    "start": "1971310",
    "end": "1978040"
  },
  {
    "text": "avoided stuff but in this case I really think that if we have predictive scaling available to us",
    "start": "1978040",
    "end": "1984540"
  },
  {
    "text": "earlier and we had an enable we probably would have avoided an incident altogether so we've been playing with it",
    "start": "1984540",
    "end": "1994200"
  },
  {
    "start": "1992000",
    "end": "1992000"
  },
  {
    "text": "for a little while and here are some of the lessons we learn on our way with",
    "start": "1994200",
    "end": "1999420"
  },
  {
    "text": "predictive scaling first we use red black blue green deployments and as a result or aSG's never have enough data",
    "start": "1999420",
    "end": "2007900"
  },
  {
    "text": "if your deployment we frequently you never have enough data to actually enable it so we actually work with",
    "start": "2007900",
    "end": "2014570"
  },
  {
    "text": "Prasad and team to actually put some automation in place to carry you over custom metrics and historical data to",
    "start": "2014570",
    "end": "2020780"
  },
  {
    "text": "actually use custom metrics for forecasting and unable that second most",
    "start": "2020780",
    "end": "2028309"
  },
  {
    "text": "of our services were using ELB we found out yell B metrics are not supported so",
    "start": "2028309",
    "end": "2033650"
  },
  {
    "text": "we had to convert some of the micro services over it to Al B it's a",
    "start": "2033650",
    "end": "2039470"
  },
  {
    "text": "combination of predictive and dynamic we feel fairly comfortable to let it auto adjust our capacity but we still need to",
    "start": "2039470",
    "end": "2046850"
  },
  {
    "text": "monitor our their data tiers very closely and as a result we get pretty",
    "start": "2046850",
    "end": "2052700"
  },
  {
    "text": "close to a hundred percent autopilot but we're not quite there so what's next for",
    "start": "2052700",
    "end": "2060108"
  },
  {
    "text": "us rollout of predictive scaling so we're going to continue talking to more",
    "start": "2060109",
    "end": "2066230"
  },
  {
    "text": "teams and try to enable it as far in our solution as we can forecast only option",
    "start": "2066230",
    "end": "2072919"
  },
  {
    "text": "is a very interesting option we use it pretty we've been using more and more since we started playing with it we use",
    "start": "2072919",
    "end": "2080690"
  },
  {
    "text": "it not only to validate the plan of action before we enable it but we actually use that and it's create use",
    "start": "2080690",
    "end": "2087980"
  },
  {
    "text": "that to have a lot more cost optimization conversations especially around research reserved instance",
    "start": "2087980",
    "end": "2094340"
  },
  {
    "text": "capacity and things like that and third what it's really allowed us to do is",
    "start": "2094340",
    "end": "2100640"
  },
  {
    "text": "play around with custom metrics for adjusting our capacity so for example",
    "start": "2100640",
    "end": "2107210"
  },
  {
    "text": "you could use this upstream service load metric to scale a downstream service and",
    "start": "2107210",
    "end": "2112460"
  },
  {
    "text": "in the forecast only mode you could verify how close it is is it something you could actually",
    "start": "2112460",
    "end": "2118390"
  },
  {
    "text": "unable or not and you could experiment quite a bit with your custom metric for load and capacity adjustment so forecast",
    "start": "2118390",
    "end": "2127510"
  },
  {
    "text": "only has been pretty fun to play with I highly recommend it and I'm gonna hand it over to percent real quick Thank You",
    "start": "2127510",
    "end": "2144700"
  },
  {
    "text": "Cal so predictive scaling is available today in five regions Virginia Ohio",
    "start": "2144700",
    "end": "2149800"
  },
  {
    "text": "Oregon Singapore and Ireland and with more regions to come very soon so if",
    "start": "2149800",
    "end": "2156220"
  },
  {
    "text": "you'd like to get started you can go to aws.amazon.com slash auto-scaling you can start with creating a scaling plan",
    "start": "2156220",
    "end": "2162610"
  },
  {
    "text": "it's very simple to use the console and create a scaling plan so thank you very much for your time or we're gonna be",
    "start": "2162610",
    "end": "2169060"
  },
  {
    "text": "around hanging around here for a bit so if you have any questions we can we can address them on the side but thank you",
    "start": "2169060",
    "end": "2174850"
  },
  {
    "text": "for coming and please remember to complete the session survey in the mobile lab thank you [Applause]",
    "start": "2174850",
    "end": "2182690"
  }
]