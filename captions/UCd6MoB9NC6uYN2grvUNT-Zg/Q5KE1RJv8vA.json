[
  {
    "text": "hi welcome back to our coverage from AWS",
    "start": "30",
    "end": "2760"
  },
  {
    "text": "reinvent here in Las Vegas this is the",
    "start": "2760",
    "end": "5130"
  },
  {
    "text": "global user education conference for",
    "start": "5130",
    "end": "7109"
  },
  {
    "text": "Amazon Web Services and we're joined",
    "start": "7109",
    "end": "8970"
  },
  {
    "text": "live on the expo floor here in the sands",
    "start": "8970",
    "end": "11580"
  },
  {
    "text": "Expo by an expert guest and we're going",
    "start": "11580",
    "end": "13679"
  },
  {
    "text": "to bring you an announcement of a brand",
    "start": "13679",
    "end": "15089"
  },
  {
    "text": "new AWS service today and we're getting",
    "start": "15089",
    "end": "17460"
  },
  {
    "text": "towards the end of the day here which",
    "start": "17460",
    "end": "18960"
  },
  {
    "text": "means their energy levels can start to",
    "start": "18960",
    "end": "20640"
  },
  {
    "text": "drop a little bit but there are a couple",
    "start": "20640",
    "end": "22320"
  },
  {
    "text": "of things that are preventing that in",
    "start": "22320",
    "end": "24000"
  },
  {
    "text": "this case first of all I just discovered",
    "start": "24000",
    "end": "26340"
  },
  {
    "text": "that Ryan and I are 10-year twins we've",
    "start": "26340",
    "end": "28470"
  },
  {
    "text": "both been in AWS for four years 360 and",
    "start": "28470",
    "end": "33149"
  },
  {
    "text": "something days so we're both going to",
    "start": "33149",
    "end": "34680"
  },
  {
    "text": "hit our five-year anniversary AWS",
    "start": "34680",
    "end": "36420"
  },
  {
    "text": "together next week which is kind of nice",
    "start": "36420",
    "end": "37770"
  },
  {
    "text": "now secondly we're going to talk here",
    "start": "37770",
    "end": "39930"
  },
  {
    "text": "about a area of AWS which I consider to",
    "start": "39930",
    "end": "42750"
  },
  {
    "text": "be one of the most interesting areas",
    "start": "42750",
    "end": "45090"
  },
  {
    "text": "which is real-time analytics for",
    "start": "45090",
    "end": "46980"
  },
  {
    "text": "streaming data which is a super exciting",
    "start": "46980",
    "end": "48930"
  },
  {
    "text": "area but first of all before we do that",
    "start": "48930",
    "end": "51360"
  },
  {
    "text": "maybe both of our hosts I think the",
    "start": "51360",
    "end": "53010"
  },
  {
    "text": "first time on camera today so maybe you",
    "start": "53010",
    "end": "54750"
  },
  {
    "text": "can both introduce yourselves and then",
    "start": "54750",
    "end": "56100"
  },
  {
    "text": "we'll get going sure please okay hi I'm",
    "start": "56100",
    "end": "58980"
  },
  {
    "text": "Alex I'm a Technical Evangelist AWS I am",
    "start": "58980",
    "end": "62370"
  },
  {
    "text": "Briony nice I'm a senior technical",
    "start": "62370",
    "end": "64228"
  },
  {
    "text": "product manager at AWS great and what is",
    "start": "64229",
    "end": "66900"
  },
  {
    "text": "the surface cold that you work online so",
    "start": "66900",
    "end": "69330"
  },
  {
    "text": "I work on a set of services called",
    "start": "69330",
    "end": "71340"
  },
  {
    "text": "Amazon Kinesis Amazon Kinesis makes it",
    "start": "71340",
    "end": "74250"
  },
  {
    "text": "easy for customers to work with",
    "start": "74250",
    "end": "76259"
  },
  {
    "text": "real-time streaming data okay and we're",
    "start": "76259",
    "end": "78990"
  },
  {
    "text": "on twitch which means that a lot of our",
    "start": "78990",
    "end": "80610"
  },
  {
    "text": "viewers are likely to be interested in",
    "start": "80610",
    "end": "82320"
  },
  {
    "text": "gaming maybe you could talk about a",
    "start": "82320",
    "end": "84659"
  },
  {
    "text": "couple of illustrative use cases for the",
    "start": "84659",
    "end": "86580"
  },
  {
    "text": "existing Kinesis services I think you've",
    "start": "86580",
    "end": "88860"
  },
  {
    "text": "got at least one gaming customer of your",
    "start": "88860",
    "end": "90540"
  },
  {
    "text": "sleeve that you can probably talk about",
    "start": "90540",
    "end": "91650"
  },
  {
    "text": "absolutely customers use Kinesis yeah",
    "start": "91650",
    "end": "94140"
  },
  {
    "text": "absolutely I'm also a huge fan of gaming",
    "start": "94140",
    "end": "96420"
  },
  {
    "text": "and twitch so Amazon Kinesis is a set of",
    "start": "96420",
    "end": "100290"
  },
  {
    "text": "streaming data services one of our",
    "start": "100290",
    "end": "101970"
  },
  {
    "text": "customers that use this is a company",
    "start": "101970",
    "end": "103649"
  },
  {
    "text": "called Epic Games they ship a very",
    "start": "103649",
    "end": "105659"
  },
  {
    "text": "popular game called fortnight",
    "start": "105659",
    "end": "107579"
  },
  {
    "text": "Epic Games uses Amazon Kinesis to",
    "start": "107579",
    "end": "109920"
  },
  {
    "text": "capture game telemetry data and ingest",
    "start": "109920",
    "end": "112439"
  },
  {
    "text": "it and get real-time analytics on what's",
    "start": "112439",
    "end": "114750"
  },
  {
    "text": "going on with the game in order to",
    "start": "114750",
    "end": "115950"
  },
  {
    "text": "improve the game experience if you were",
    "start": "115950",
    "end": "117899"
  },
  {
    "text": "interested in learning more about how",
    "start": "117899",
    "end": "119579"
  },
  {
    "text": "Epic Games use AWS there's a talk that I",
    "start": "119579",
    "end": "121920"
  },
  {
    "text": "gave our AWS summit from new york early",
    "start": "121920",
    "end": "124140"
  },
  {
    "text": "this year you can find them YouTube",
    "start": "124140",
    "end": "125490"
  },
  {
    "text": "which kind of highlights one interesting",
    "start": "125490",
    "end": "127380"
  },
  {
    "text": "part of running gaming world clouds in",
    "start": "127380",
    "end": "128789"
  },
  {
    "text": "the cloud which is that",
    "start": "128789",
    "end": "130300"
  },
  {
    "text": "infrastructure that is concerned with",
    "start": "130300",
    "end": "132280"
  },
  {
    "text": "telemetry LAN in analytics it's probably",
    "start": "132280",
    "end": "134860"
  },
  {
    "text": "every bit as big as the infrastructure",
    "start": "134860",
    "end": "136270"
  },
  {
    "text": "involved you know having users to play",
    "start": "136270",
    "end": "137950"
  },
  {
    "text": "the game in real time is a huge amount",
    "start": "137950",
    "end": "139420"
  },
  {
    "text": "of technology involved in figuring out",
    "start": "139420",
    "end": "141460"
  },
  {
    "text": "how people are using the services right",
    "start": "141460",
    "end": "143020"
  },
  {
    "text": "absolutely",
    "start": "143020",
    "end": "143920"
  },
  {
    "text": "so like in massively multiplayer online",
    "start": "143920",
    "end": "147220"
  },
  {
    "text": "games like fortnight as well as with IOT",
    "start": "147220",
    "end": "149410"
  },
  {
    "text": "sensors AWS sorry Amazon ec2 instances",
    "start": "149410",
    "end": "153370"
  },
  {
    "text": "all of these generate a massive amounts",
    "start": "153370",
    "end": "155650"
  },
  {
    "text": "of data so the core problem that Amazon",
    "start": "155650",
    "end": "157690"
  },
  {
    "text": "Kinesis solves is ingesting capturing",
    "start": "157690",
    "end": "160330"
  },
  {
    "text": "that information and then making it",
    "start": "160330",
    "end": "161890"
  },
  {
    "text": "available to process in real time",
    "start": "161890",
    "end": "163830"
  },
  {
    "text": "yeah Griffin how do you talk that about",
    "start": "163830",
    "end": "166690"
  },
  {
    "text": "ingest so how do developers send data",
    "start": "166690",
    "end": "170080"
  },
  {
    "text": "into Kinesis today if I'm creating an",
    "start": "170080",
    "end": "172150"
  },
  {
    "text": "app or writing a video game maybe using",
    "start": "172150",
    "end": "174340"
  },
  {
    "text": "an existing engine how do I interact",
    "start": "174340",
    "end": "176830"
  },
  {
    "text": "with Kinesis in order to get my data set",
    "start": "176830",
    "end": "179620"
  },
  {
    "text": "up into the cloud using the service",
    "start": "179620",
    "end": "181390"
  },
  {
    "text": "absolutely so the most popular way to",
    "start": "181390",
    "end": "183970"
  },
  {
    "text": "ingested into Amazon Kinesis is to use",
    "start": "183970",
    "end": "186640"
  },
  {
    "text": "the AWS SDKs there's also another a",
    "start": "186640",
    "end": "190300"
  },
  {
    "text": "number of other open source libraries",
    "start": "190300",
    "end": "192370"
  },
  {
    "text": "that we ship to ingest data and Amazon",
    "start": "192370",
    "end": "194380"
  },
  {
    "text": "cases including the Amazon contains this",
    "start": "194380",
    "end": "196060"
  },
  {
    "text": "agent which works great for log files",
    "start": "196060",
    "end": "197860"
  },
  {
    "text": "the Amazon case producer library which",
    "start": "197860",
    "end": "200440"
  },
  {
    "text": "works for great for high throughput data",
    "start": "200440",
    "end": "202150"
  },
  {
    "text": "in addition to that there's a number of",
    "start": "202150",
    "end": "204730"
  },
  {
    "text": "managed solutions for ingesting data",
    "start": "204730",
    "end": "206590"
  },
  {
    "text": "into Amazon Canisius data streams they",
    "start": "206590",
    "end": "208990"
  },
  {
    "text": "include AWS IOT there's a way to send",
    "start": "208990",
    "end": "212320"
  },
  {
    "text": "data sent to Amazon CloudWatch before",
    "start": "212320",
    "end": "214360"
  },
  {
    "text": "that did the Amazon Kinesis and several",
    "start": "214360",
    "end": "216850"
  },
  {
    "text": "others great cool do you have something",
    "start": "216850",
    "end": "219280"
  },
  {
    "text": "new to announce so what is it that",
    "start": "219280",
    "end": "220480"
  },
  {
    "text": "you're announcing today here AWS",
    "start": "220480",
    "end": "222550"
  },
  {
    "text": "reinvent what's the new hotness that you",
    "start": "222550",
    "end": "224200"
  },
  {
    "text": "had to tell us about so I'm excited to",
    "start": "224200",
    "end": "225850"
  },
  {
    "text": "announce we have a service called Amazon",
    "start": "225850",
    "end": "227650"
  },
  {
    "text": "Kinesis data analytics which currently",
    "start": "227650",
    "end": "229720"
  },
  {
    "text": "allows sequel developers to build",
    "start": "229720",
    "end": "231550"
  },
  {
    "text": "real-time streaming applications so",
    "start": "231550",
    "end": "233890"
  },
  {
    "text": "today we're announcing Amazon Kinesis",
    "start": "233890",
    "end": "236080"
  },
  {
    "text": "data analytics for Java it allows",
    "start": "236080",
    "end": "238660"
  },
  {
    "text": "customers to build real-time streaming",
    "start": "238660",
    "end": "240490"
  },
  {
    "text": "applications and using their own custom",
    "start": "240490",
    "end": "242800"
  },
  {
    "text": "Java code what kind of capabilities",
    "start": "242800",
    "end": "244420"
  },
  {
    "text": "we'll listen good luck to Java",
    "start": "244420",
    "end": "246100"
  },
  {
    "text": "developers that what will I be able to",
    "start": "246100",
    "end": "247360"
  },
  {
    "text": "do by using the service that I can't do",
    "start": "247360",
    "end": "248950"
  },
  {
    "text": "today so a great question so Amazon can",
    "start": "248950",
    "end": "252220"
  },
  {
    "text": "use data analytics for Java allows",
    "start": "252220",
    "end": "253510"
  },
  {
    "text": "customers to build sophisticated java",
    "start": "253510",
    "end": "255250"
  },
  {
    "text": "applications",
    "start": "255250",
    "end": "256090"
  },
  {
    "text": "everything from continuously generating",
    "start": "256090",
    "end": "258190"
  },
  {
    "text": "business and operational metrics",
    "start": "258190",
    "end": "260290"
  },
  {
    "text": "doing streaming ETL into other analytics",
    "start": "260290",
    "end": "262420"
  },
  {
    "text": "services like redshift Amazon s3 the key",
    "start": "262420",
    "end": "265990"
  },
  {
    "text": "to offering Java code here is the",
    "start": "265990",
    "end": "267430"
  },
  {
    "text": "flexibility we try to provide a number",
    "start": "267430",
    "end": "269920"
  },
  {
    "text": "of things that also make it easy to",
    "start": "269920",
    "end": "271390"
  },
  {
    "text": "build applications what are those things",
    "start": "271390",
    "end": "273670"
  },
  {
    "text": "that make it easier to build",
    "start": "273670",
    "end": "274690"
  },
  {
    "text": "applications so the way you use this",
    "start": "274690",
    "end": "276820"
  },
  {
    "text": "service is you first start by",
    "start": "276820",
    "end": "278710"
  },
  {
    "text": "downloading a set of open source",
    "start": "278710",
    "end": "280000"
  },
  {
    "text": "libraries they include the AWS SDKs a",
    "start": "280000",
    "end": "282970"
  },
  {
    "text": "popular open source library called",
    "start": "282970",
    "end": "284650"
  },
  {
    "text": "Apache flink where you build your",
    "start": "284650",
    "end": "286690"
  },
  {
    "text": "application locally the focus is really",
    "start": "286690",
    "end": "288550"
  },
  {
    "text": "on a poor development experience once",
    "start": "288550",
    "end": "291190"
  },
  {
    "text": "you build your application you upload",
    "start": "291190",
    "end": "292720"
  },
  {
    "text": "the code to the service and we handle",
    "start": "292720",
    "end": "294460"
  },
  {
    "text": "everything else from scaling the",
    "start": "294460",
    "end": "296020"
  },
  {
    "text": "application up and down to durably",
    "start": "296020",
    "end": "298120"
  },
  {
    "text": "backing up the application and much more",
    "start": "298120",
    "end": "300000"
  },
  {
    "text": "great you mentioned open source project",
    "start": "300000",
    "end": "302890"
  },
  {
    "text": "they're called flink Apache flame I'm",
    "start": "302890",
    "end": "304720"
  },
  {
    "text": "kind of familiar with it but I'm going",
    "start": "304720",
    "end": "305980"
  },
  {
    "text": "to sing that a lot of the viewers on the",
    "start": "305980",
    "end": "307030"
  },
  {
    "text": "street might not be so familiar",
    "start": "307030",
    "end": "308560"
  },
  {
    "text": "in fact if there's anything here that",
    "start": "308560",
    "end": "309940"
  },
  {
    "text": "you want to learn more about which is",
    "start": "309940",
    "end": "311770"
  },
  {
    "text": "new to you do submit your questions",
    "start": "311770",
    "end": "313510"
  },
  {
    "text": "using twitch and Alex will put them to",
    "start": "313510",
    "end": "315760"
  },
  {
    "text": "us on the stage but can you tell our",
    "start": "315760",
    "end": "317410"
  },
  {
    "text": "viewers a little bit more about what",
    "start": "317410",
    "end": "319000"
  },
  {
    "text": "link is what kind of role does that play",
    "start": "319000",
    "end": "320500"
  },
  {
    "text": "in streaming data ecosystem why would it",
    "start": "320500",
    "end": "322960"
  },
  {
    "text": "developer choose the user absolutely so",
    "start": "322960",
    "end": "324970"
  },
  {
    "text": "Apache flink is the distributed",
    "start": "324970",
    "end": "326890"
  },
  {
    "text": "framework in engine for processing data",
    "start": "326890",
    "end": "329230"
  },
  {
    "text": "streams it comes with a very very simple",
    "start": "329230",
    "end": "331780"
  },
  {
    "text": "programming model that makes it an easy",
    "start": "331780",
    "end": "334810"
  },
  {
    "text": "for you to build very powerful",
    "start": "334810",
    "end": "336340"
  },
  {
    "text": "applications quickly it includes a set",
    "start": "336340",
    "end": "339010"
  },
  {
    "text": "of streaming operators that allow you to",
    "start": "339010",
    "end": "341590"
  },
  {
    "text": "solve common streaming data problems",
    "start": "341590",
    "end": "343420"
  },
  {
    "text": "relatively easily so as an example one",
    "start": "343420",
    "end": "346210"
  },
  {
    "text": "Operator would be a window operator",
    "start": "346210",
    "end": "347980"
  },
  {
    "text": "which allow you to bound your processing",
    "start": "347980",
    "end": "350200"
  },
  {
    "text": "on time using time semantics another",
    "start": "350200",
    "end": "353380"
  },
  {
    "text": "powerful operator is a key by operator",
    "start": "353380",
    "end": "355750"
  },
  {
    "text": "which allow you to logically change the",
    "start": "355750",
    "end": "357790"
  },
  {
    "text": "organization of your stream in real time",
    "start": "357790",
    "end": "360430"
  },
  {
    "text": "you mentioned time bound operations",
    "start": "360430",
    "end": "363160"
  },
  {
    "text": "there this is for things like running",
    "start": "363160",
    "end": "364540"
  },
  {
    "text": "totals yeah so I could say how many",
    "start": "364540",
    "end": "366610"
  },
  {
    "text": "events of this type have I seen over the",
    "start": "366610",
    "end": "368470"
  },
  {
    "text": "course of the last hour week or month I",
    "start": "368470",
    "end": "371050"
  },
  {
    "text": "imagine there's quite a lot of",
    "start": "371050",
    "end": "372430"
  },
  {
    "text": "complexity in maintaining state for",
    "start": "372430",
    "end": "374290"
  },
  {
    "text": "long-running calculations of that time",
    "start": "374290",
    "end": "376000"
  },
  {
    "text": "so is that something that it's made",
    "start": "376000",
    "end": "377920"
  },
  {
    "text": "simpler by using Amazon Canisius data",
    "start": "377920",
    "end": "380200"
  },
  {
    "text": "analytics that part of the surveys",
    "start": "380200",
    "end": "382360"
  },
  {
    "text": "absolutely so when you're performing",
    "start": "382360",
    "end": "384820"
  },
  {
    "text": "real time computations in",
    "start": "384820",
    "end": "386670"
  },
  {
    "text": "new performing computations in real time",
    "start": "386670",
    "end": "389100"
  },
  {
    "text": "one of the hard things about it is",
    "start": "389100",
    "end": "391110"
  },
  {
    "text": "making sure that your applications",
    "start": "391110",
    "end": "392910"
  },
  {
    "text": "automatically backed up so that if you",
    "start": "392910",
    "end": "394830"
  },
  {
    "text": "have a disruption you can quickly",
    "start": "394830",
    "end": "396360"
  },
  {
    "text": "restore to be again processing in real",
    "start": "396360",
    "end": "398310"
  },
  {
    "text": "time so if you use any of the operators",
    "start": "398310",
    "end": "400530"
  },
  {
    "text": "that we provide through a batch of link",
    "start": "400530",
    "end": "402060"
  },
  {
    "text": "will automatically backup your",
    "start": "402060",
    "end": "403890"
  },
  {
    "text": "application state so we do this in case",
    "start": "403890",
    "end": "406590"
  },
  {
    "text": "if you update your code we can",
    "start": "406590",
    "end": "407940"
  },
  {
    "text": "seamlessly restore your application",
    "start": "407940",
    "end": "409980"
  },
  {
    "text": "without any duplicates or anything like",
    "start": "409980",
    "end": "412380"
  },
  {
    "text": "that",
    "start": "412380",
    "end": "413430"
  },
  {
    "text": "additionally we also provide another",
    "start": "413430",
    "end": "415290"
  },
  {
    "text": "piece of functionality called",
    "start": "415290",
    "end": "416220"
  },
  {
    "text": "application snapshots these allow you to",
    "start": "416220",
    "end": "418800"
  },
  {
    "text": "create a point in time recovery point so",
    "start": "418800",
    "end": "421560"
  },
  {
    "text": "for example if you're doing your real",
    "start": "421560",
    "end": "423690"
  },
  {
    "text": "time processing later find out you made",
    "start": "423690",
    "end": "425820"
  },
  {
    "text": "a code error you can roll back and",
    "start": "425820",
    "end": "427980"
  },
  {
    "text": "rewind your application using one of",
    "start": "427980",
    "end": "429960"
  },
  {
    "text": "these snapshots with a simple API combo",
    "start": "429960",
    "end": "431970"
  },
  {
    "text": "you're playing back records from the",
    "start": "431970",
    "end": "433380"
  },
  {
    "text": "stream exactly right awesome something",
    "start": "433380",
    "end": "440190"
  },
  {
    "text": "else",
    "start": "440190",
    "end": "440460"
  },
  {
    "text": "drugs sorry guys a question from the",
    "start": "440460",
    "end": "442560"
  },
  {
    "text": "audience can you go a bit deeper into",
    "start": "442560",
    "end": "444420"
  },
  {
    "text": "why we are delivering this for Java",
    "start": "444420",
    "end": "446880"
  },
  {
    "text": "applications specifically we have user",
    "start": "446880",
    "end": "448830"
  },
  {
    "text": "anomie asking about why not Python what",
    "start": "448830",
    "end": "451350"
  },
  {
    "text": "was special about Java can you share",
    "start": "451350",
    "end": "452850"
  },
  {
    "text": "something about that so the reason why",
    "start": "452850",
    "end": "455340"
  },
  {
    "text": "we chose Java first to release is that",
    "start": "455340",
    "end": "458360"
  },
  {
    "text": "Java is the most popular and most",
    "start": "458360",
    "end": "461040"
  },
  {
    "text": "powerful language that customers use to",
    "start": "461040",
    "end": "463110"
  },
  {
    "text": "process data streams in real time we do",
    "start": "463110",
    "end": "465600"
  },
  {
    "text": "very commonly get Python applications",
    "start": "465600",
    "end": "467370"
  },
  {
    "text": "it's something that I think that we'll",
    "start": "467370",
    "end": "468930"
  },
  {
    "text": "be working on in the future but for now",
    "start": "468930",
    "end": "470850"
  },
  {
    "text": "we picked it because a lot of the",
    "start": "470850",
    "end": "472620"
  },
  {
    "text": "customers that use streaming data are",
    "start": "472620",
    "end": "474150"
  },
  {
    "text": "infrastructure engineers data engineers",
    "start": "474150",
    "end": "476280"
  },
  {
    "text": "who work with Java primarily but all",
    "start": "476280",
    "end": "478290"
  },
  {
    "text": "they're also other languages I think",
    "start": "478290",
    "end": "480750"
  },
  {
    "text": "you'll be looking forward to some other",
    "start": "480750",
    "end": "482610"
  },
  {
    "text": "announcement coming to us probably later",
    "start": "482610",
    "end": "484080"
  },
  {
    "text": "sometime in the future awesome Thanks",
    "start": "484080",
    "end": "485820"
  },
  {
    "text": "okay great what about things like",
    "start": "485820",
    "end": "489230"
  },
  {
    "text": "deploying my applications and also",
    "start": "489230",
    "end": "491790"
  },
  {
    "text": "scaling my stream processing application",
    "start": "491790",
    "end": "494730"
  },
  {
    "text": "today characteristics of the service you",
    "start": "494730",
    "end": "497400"
  },
  {
    "text": "talked about checkpointing for",
    "start": "497400",
    "end": "498600"
  },
  {
    "text": "deployment we can you talk a little bit",
    "start": "498600",
    "end": "499740"
  },
  {
    "text": "more about how deployment works and can",
    "start": "499740",
    "end": "501840"
  },
  {
    "text": "you also talk about how you handle",
    "start": "501840",
    "end": "503130"
  },
  {
    "text": "things like scaling extreme throughput",
    "start": "503130",
    "end": "504780"
  },
  {
    "text": "absolutely so starting out with scaling",
    "start": "504780",
    "end": "508680"
  },
  {
    "text": "by default your applications will",
    "start": "508680",
    "end": "511740"
  },
  {
    "text": "automatically scale",
    "start": "511740",
    "end": "512760"
  },
  {
    "text": "so we'll steal your applications up and",
    "start": "512760",
    "end": "515219"
  },
  {
    "text": "we do that providing more resources to",
    "start": "515220",
    "end": "516930"
  },
  {
    "text": "your applications in the form of what's",
    "start": "516930",
    "end": "518310"
  },
  {
    "text": "called a Kinesis processing unit which",
    "start": "518310",
    "end": "520320"
  },
  {
    "text": "is a unit of stream processing capacity",
    "start": "520320",
    "end": "523080"
  },
  {
    "text": "there's one VP see you and forget your",
    "start": "523080",
    "end": "525750"
  },
  {
    "text": "mites of memory so we'll scale you from",
    "start": "525750",
    "end": "527580"
  },
  {
    "text": "one",
    "start": "527580",
    "end": "528090"
  },
  {
    "text": "kpu eyesore one core if you could think",
    "start": "528090",
    "end": "530760"
  },
  {
    "text": "about it like that",
    "start": "530760",
    "end": "531390"
  },
  {
    "text": "to thousands of course in your",
    "start": "531390",
    "end": "533280"
  },
  {
    "text": "application alternatively if our",
    "start": "533280",
    "end": "535860"
  },
  {
    "text": "automatic scaling capabilities don't",
    "start": "535860",
    "end": "537480"
  },
  {
    "text": "work out for you or you'd like to",
    "start": "537480",
    "end": "538890"
  },
  {
    "text": "explicitly provision your capacity for",
    "start": "538890",
    "end": "542370"
  },
  {
    "text": "your application you can also do that so",
    "start": "542370",
    "end": "544170"
  },
  {
    "text": "you can specify the exact number of",
    "start": "544170",
    "end": "545820"
  },
  {
    "text": "resources that you'd like to scale your",
    "start": "545820",
    "end": "548100"
  },
  {
    "text": "application another cool aspect of the",
    "start": "548100",
    "end": "551010"
  },
  {
    "text": "service is managing an application and",
    "start": "551010",
    "end": "552630"
  },
  {
    "text": "monitoring it so the service is very",
    "start": "552630",
    "end": "554610"
  },
  {
    "text": "well integrated with Amazon CloudWatch",
    "start": "554610",
    "end": "555870"
  },
  {
    "text": "logs in Amazon Skywatch metrics allow",
    "start": "555870",
    "end": "558990"
  },
  {
    "text": "you to choose the granularity of",
    "start": "558990",
    "end": "561330"
  },
  {
    "text": "monitoring that you want from very high",
    "start": "561330",
    "end": "563550"
  },
  {
    "text": "level metrics and logs to very granular",
    "start": "563550",
    "end": "565860"
  },
  {
    "text": "detailed logging to debug what's going",
    "start": "565860",
    "end": "568200"
  },
  {
    "text": "on with your application right right and",
    "start": "568200",
    "end": "571140"
  },
  {
    "text": "up presumably that Kinesis throughput",
    "start": "571140",
    "end": "574200"
  },
  {
    "text": "unit that you talked about that is that",
    "start": "574200",
    "end": "575880"
  },
  {
    "text": "also the way in which this service is",
    "start": "575880",
    "end": "577620"
  },
  {
    "text": "bill do you build for the number of",
    "start": "577620",
    "end": "579300"
  },
  {
    "text": "those",
    "start": "579300",
    "end": "580329"
  },
  {
    "text": "correct so the service is built Java",
    "start": "580329",
    "end": "583000"
  },
  {
    "text": "applications are build at the same rate",
    "start": "583000",
    "end": "585010"
  },
  {
    "text": "that we build sequel applications so",
    "start": "585010",
    "end": "587230"
  },
  {
    "text": "you're built primarily based off of",
    "start": "587230",
    "end": "588699"
  },
  {
    "text": "Kinesis processing units at the u.s.",
    "start": "588699",
    "end": "591430"
  },
  {
    "text": "East one it's 11 cents per KP you our",
    "start": "591430",
    "end": "593820"
  },
  {
    "text": "Java applications come with some unique",
    "start": "593820",
    "end": "595990"
  },
  {
    "text": "capabilities though that don't come with",
    "start": "595990",
    "end": "598269"
  },
  {
    "text": "sequel applications namely storage",
    "start": "598269",
    "end": "601389"
  },
  {
    "text": "so with that KP we also charge based",
    "start": "601389",
    "end": "603820"
  },
  {
    "text": "office running application storage we",
    "start": "603820",
    "end": "606220"
  },
  {
    "text": "give you quite access to quite a lot of",
    "start": "606220",
    "end": "607899"
  },
  {
    "text": "disk for processing this is the nature",
    "start": "607899",
    "end": "609970"
  },
  {
    "text": "of like stateful processing so perc kpu",
    "start": "609970",
    "end": "612250"
  },
  {
    "text": "you have access to up to 50 gigabytes of",
    "start": "612250",
    "end": "614110"
  },
  {
    "text": "disk or running application storage and",
    "start": "614110",
    "end": "616660"
  },
  {
    "text": "then the final dimension is durable",
    "start": "616660",
    "end": "618310"
  },
  {
    "text": "application backups which is the",
    "start": "618310",
    "end": "619959"
  },
  {
    "text": "mechanism we use to charge for that",
    "start": "619959",
    "end": "621370"
  },
  {
    "text": "snapshot functionality I mentioned",
    "start": "621370",
    "end": "623199"
  },
  {
    "text": "previously great excellent so the last",
    "start": "623199",
    "end": "625269"
  },
  {
    "text": "question I've got is about extensibility",
    "start": "625269",
    "end": "627130"
  },
  {
    "text": "and how developers get started with the",
    "start": "627130",
    "end": "628870"
  },
  {
    "text": "service so there any options that",
    "start": "628870",
    "end": "630970"
  },
  {
    "text": "developers have to extend the",
    "start": "630970",
    "end": "632440"
  },
  {
    "text": "capabilities of this service and how do",
    "start": "632440",
    "end": "634510"
  },
  {
    "text": "you developers go about getting started",
    "start": "634510",
    "end": "636160"
  },
  {
    "text": "with this new feature absolutely so you",
    "start": "636160",
    "end": "639790"
  },
  {
    "text": "can go right now today W Amazon Kinesis",
    "start": "639790",
    "end": "642010"
  },
  {
    "text": "data analytics console to create an",
    "start": "642010",
    "end": "643389"
  },
  {
    "text": "application the way you get started you",
    "start": "643389",
    "end": "646060"
  },
  {
    "text": "downloads on open source libraries and",
    "start": "646060",
    "end": "647829"
  },
  {
    "text": "it comes with a number of connectors to",
    "start": "647829",
    "end": "649990"
  },
  {
    "text": "Kinesis data streams can you sustain if",
    "start": "649990",
    "end": "652029"
  },
  {
    "text": "I chose Amazon dinah be Amazon DynamoDB",
    "start": "652029",
    "end": "654790"
  },
  {
    "text": "are no sequel database and a couple",
    "start": "654790",
    "end": "657130"
  },
  {
    "text": "other AWS sources but beyond that if we",
    "start": "657130",
    "end": "659649"
  },
  {
    "text": "don't support a service AWS service or",
    "start": "659649",
    "end": "662889"
  },
  {
    "text": "maybe some custom run piece of software",
    "start": "662889",
    "end": "664779"
  },
  {
    "text": "that you want to integrate with you can",
    "start": "664779",
    "end": "666639"
  },
  {
    "text": "easily extend that both the where you",
    "start": "666639",
    "end": "669850"
  },
  {
    "text": "read data from in the application as",
    "start": "669850",
    "end": "671260"
  },
  {
    "text": "well as where you write to the framework",
    "start": "671260",
    "end": "674410"
  },
  {
    "text": "that we provide makes it easy to build",
    "start": "674410",
    "end": "676120"
  },
  {
    "text": "applications but we don't box you in you",
    "start": "676120",
    "end": "678250"
  },
  {
    "text": "really have the flexibility to build",
    "start": "678250",
    "end": "679389"
  },
  {
    "text": "what you want what about getting so",
    "start": "679389",
    "end": "681550"
  },
  {
    "text": "getting started is just as simple as",
    "start": "681550",
    "end": "682959"
  },
  {
    "text": "downloading knows exactly case compiling",
    "start": "682959",
    "end": "685750"
  },
  {
    "text": "your Java bytecode and then shipping up",
    "start": "685750",
    "end": "687699"
  },
  {
    "text": "to an important exactly so getting",
    "start": "687699",
    "end": "689079"
  },
  {
    "text": "started you download the set of SDKs you",
    "start": "689079",
    "end": "691300"
  },
  {
    "text": "work locally you build your application",
    "start": "691300",
    "end": "693699"
  },
  {
    "text": "once your application is built compile",
    "start": "693699",
    "end": "695800"
  },
  {
    "text": "it into a jar upload it to the service",
    "start": "695800",
    "end": "697930"
  },
  {
    "text": "and we take it from there great any",
    "start": "697930",
    "end": "699430"
  },
  {
    "text": "other questions from the stream I like",
    "start": "699430",
    "end": "700660"
  },
  {
    "text": "yes so we have naked one nice name that",
    "start": "700660",
    "end": "703690"
  },
  {
    "text": "is if there is any limitation as far as",
    "start": "703690",
    "end": "706240"
  },
  {
    "text": "volume or",
    "start": "706240",
    "end": "707230"
  },
  {
    "text": "depending on the sequel or Java so both",
    "start": "707230",
    "end": "711010"
  },
  {
    "text": "services were skip both sequel",
    "start": "711010",
    "end": "713050"
  },
  {
    "text": "applications and Java applications will",
    "start": "713050",
    "end": "714880"
  },
  {
    "text": "scale to process hundreds of thousands",
    "start": "714880",
    "end": "716500"
  },
  {
    "text": "or millions of events for a second Java",
    "start": "716500",
    "end": "718930"
  },
  {
    "text": "applications have a little bit more",
    "start": "718930",
    "end": "720160"
  },
  {
    "text": "flexibility with how the nature of Java",
    "start": "720160",
    "end": "722740"
  },
  {
    "text": "with how you scale an application so you",
    "start": "722740",
    "end": "725230"
  },
  {
    "text": "can process you know tens or even",
    "start": "725230",
    "end": "726850"
  },
  {
    "text": "hundreds of millions of records per",
    "start": "726850",
    "end": "730000"
  },
  {
    "text": "second it's like in the streaming world",
    "start": "730000",
    "end": "731560"
  },
  {
    "text": "that's like the throughput this how we",
    "start": "731560",
    "end": "733030"
  },
  {
    "text": "talk about scale so I will say that",
    "start": "733030",
    "end": "737080"
  },
  {
    "text": "there is like a soft limit of 8 KB use",
    "start": "737080",
    "end": "739270"
  },
  {
    "text": "but a simple limit increase form will",
    "start": "739270",
    "end": "741040"
  },
  {
    "text": "increase that to thousands or whatever",
    "start": "741040",
    "end": "742960"
  },
  {
    "text": "you need for your application yeah if",
    "start": "742960",
    "end": "745030"
  },
  {
    "text": "you're new to AWS many of our services",
    "start": "745030",
    "end": "747070"
  },
  {
    "text": "do have these soft limits and they're",
    "start": "747070",
    "end": "748600"
  },
  {
    "text": "really just intended to prevent well to",
    "start": "748600",
    "end": "751300"
  },
  {
    "text": "make the process of scaling of your",
    "start": "751300",
    "end": "753010"
  },
  {
    "text": "service usage a more conscious decision",
    "start": "753010",
    "end": "755710"
  },
  {
    "text": "so that if you have an application which",
    "start": "755710",
    "end": "757780"
  },
  {
    "text": "is unexpectedly using more AWS resources",
    "start": "757780",
    "end": "760450"
  },
  {
    "text": "than you anticipate you're not going to",
    "start": "760450",
    "end": "762910"
  },
  {
    "text": "end up with a big bill for that you will",
    "start": "762910",
    "end": "764260"
  },
  {
    "text": "be capped unless you make a limit",
    "start": "764260",
    "end": "766360"
  },
  {
    "text": "request through our support console and",
    "start": "766360",
    "end": "768730"
  },
  {
    "text": "with a soft limit those limit requests",
    "start": "768730",
    "end": "770320"
  },
  {
    "text": "can be processed very quickly and we can",
    "start": "770320",
    "end": "771670"
  },
  {
    "text": "actually elevate them to some very large",
    "start": "771670",
    "end": "773710"
  },
  {
    "text": "numbers in the majority of cases so if",
    "start": "773710",
    "end": "775900"
  },
  {
    "text": "you do have a substantial streaming app",
    "start": "775900",
    "end": "777520"
  },
  {
    "text": "that you want to deploy obviously can",
    "start": "777520",
    "end": "779200"
  },
  {
    "text": "test it a small scale and make one of",
    "start": "779200",
    "end": "781420"
  },
  {
    "text": "those limit increase requests when you",
    "start": "781420",
    "end": "782800"
  },
  {
    "text": "need to go big exactly great any other",
    "start": "782800",
    "end": "785980"
  },
  {
    "text": "questions yes would you recommend any",
    "start": "785980",
    "end": "787720"
  },
  {
    "text": "specific best practice about extending",
    "start": "787720",
    "end": "789790"
  },
  {
    "text": "or or migrating an existing sequel up",
    "start": "789790",
    "end": "792610"
  },
  {
    "text": "into the java new version so the sequel",
    "start": "792610",
    "end": "797760"
  },
  {
    "text": "basically Sustaita helix currently",
    "start": "797760",
    "end": "799840"
  },
  {
    "text": "supports sequel based applications it's",
    "start": "799840",
    "end": "801850"
  },
  {
    "text": "a very native sequel experience within",
    "start": "801850",
    "end": "804640"
  },
  {
    "text": "the java application service we also",
    "start": "804640",
    "end": "807070"
  },
  {
    "text": "support some sequel primitives so you",
    "start": "807070",
    "end": "808960"
  },
  {
    "text": "there is some mapping to that I'd",
    "start": "808960",
    "end": "811840"
  },
  {
    "text": "encourage a customer that had that",
    "start": "811840",
    "end": "813160"
  },
  {
    "text": "question to actually look at their use",
    "start": "813160",
    "end": "814390"
  },
  {
    "text": "case so some use cases are naturally",
    "start": "814390",
    "end": "816700"
  },
  {
    "text": "very good fits for sequel things like",
    "start": "816700",
    "end": "818770"
  },
  {
    "text": "group buys the stuff like that but if",
    "start": "818770",
    "end": "820780"
  },
  {
    "text": "you need to extend your processing might",
    "start": "820780",
    "end": "822610"
  },
  {
    "text": "first look at the primitives we built a",
    "start": "822610",
    "end": "824770"
  },
  {
    "text": "new sequel allocation and see if you can",
    "start": "824770",
    "end": "826510"
  },
  {
    "text": "map them to the Java based for universal",
    "start": "826510",
    "end": "828160"
  },
  {
    "text": "right there's usually a one-to-one",
    "start": "828160",
    "end": "829360"
  },
  {
    "text": "mapping there the principles at a high",
    "start": "829360",
    "end": "832300"
  },
  {
    "text": "level are the same",
    "start": "832300",
    "end": "833470"
  },
  {
    "text": "working with streams that continuously",
    "start": "833470",
    "end": "835450"
  },
  {
    "text": "process we were continuously processing",
    "start": "835450",
    "end": "838180"
  },
  {
    "text": "data streams in your application right",
    "start": "838180",
    "end": "839980"
  },
  {
    "text": "thank you great excellent so we'll wrap",
    "start": "839980",
    "end": "842500"
  },
  {
    "text": "up this segment here I'm excited to see",
    "start": "842500",
    "end": "844060"
  },
  {
    "text": "what you do with",
    "start": "844060",
    "end": "844810"
  },
  {
    "text": "Kenichi State and all it takes for job",
    "start": "844810",
    "end": "846700"
  },
  {
    "text": "replication I think it's a great launch",
    "start": "846700",
    "end": "847960"
  },
  {
    "text": "and thanks for joining us to talk about",
    "start": "847960",
    "end": "849520"
  },
  {
    "text": "if I don't really appreciate it we'll",
    "start": "849520",
    "end": "851260"
  },
  {
    "text": "see you soon we'll be back in just a few",
    "start": "851260",
    "end": "852670"
  },
  {
    "text": "minutes",
    "start": "852670",
    "end": "854790"
  }
]