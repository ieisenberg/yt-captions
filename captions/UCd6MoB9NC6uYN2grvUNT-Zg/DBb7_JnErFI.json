[
  {
    "start": "0",
    "end": "205000"
  },
  {
    "text": "good afternoon thank you for being still here so the idea of this session is to",
    "start": "5310",
    "end": "12480"
  },
  {
    "text": "put several s into a slightly different context to see how we can build highly",
    "start": "12480",
    "end": "18369"
  },
  {
    "text": "available active active multi-region architectures and just so I don't know",
    "start": "18369",
    "end": "27520"
  },
  {
    "text": "if everybody was here before so my name is Danilo I'm part of the evangelist team and I'm focused on several s",
    "start": "27520",
    "end": "33280"
  },
  {
    "text": "technologies and in this case we were looking into what availability means and",
    "start": "33280",
    "end": "38410"
  },
  {
    "text": "how we can improve availability with multi-region so I'd like to start with some fundamentals here and let's see",
    "start": "38410",
    "end": "45670"
  },
  {
    "text": "what availability means really means how much time during normally a year your",
    "start": "45670",
    "end": "51700"
  },
  {
    "text": "application is responsive for your customers normally we express availability with",
    "start": "51700",
    "end": "56980"
  },
  {
    "text": "the cellphone number of nine so 99% 99.99 and as you can see if we want on a",
    "start": "56980",
    "end": "64360"
  },
  {
    "text": "validity of two nines that means that we can be down in a year more than three days almost four days four nines is less",
    "start": "64360",
    "end": "72310"
  },
  {
    "text": "than one hour six nines is thirty seconds so it's as you can expect it's",
    "start": "72310",
    "end": "78820"
  },
  {
    "text": "much difficult to move from one step to the other but there are lots of tools that we can use to build availability",
    "start": "78820",
    "end": "85420"
  },
  {
    "text": "actually if we have an architecture that multiple components let's imagine this is my web application server and this is",
    "start": "85420",
    "end": "92710"
  },
  {
    "text": "my database server the overall availability if I have components that",
    "start": "92710",
    "end": "97930"
  },
  {
    "text": "are put in series would be the product of the availability of the single component and that usually means that my",
    "start": "97930",
    "end": "104770"
  },
  {
    "text": "availability is going down because if this product has an availability so X as my web server as an immediate",
    "start": "104770",
    "end": "111250"
  },
  {
    "text": "availability of a 99% to nines and my database has an availability of four nines if I do the product by default",
    "start": "111250",
    "end": "118630"
  },
  {
    "text": "this would be a number that is smaller because I'm multiplying two numbers below that one below one and the number",
    "start": "118630",
    "end": "125890"
  },
  {
    "text": "is going to shrink and shrink so putting components in insidious is always making your availability",
    "start": "125890",
    "end": "132240"
  },
  {
    "text": "worse what you can improve is if you can replicate your components so instead of",
    "start": "132240",
    "end": "138000"
  },
  {
    "text": "having a single web application server I put two web application servers in parallel and then the availability will",
    "start": "138000",
    "end": "144660"
  },
  {
    "text": "be making the hypothesis that a single web application server can sustain all",
    "start": "144660",
    "end": "150840"
  },
  {
    "text": "of the load then at least I need one of the two to be active so that way the overall former will be get this one so",
    "start": "150840",
    "end": "157440"
  },
  {
    "text": "that they probably not both are down at the same time and in this case the",
    "start": "157440",
    "end": "162750"
  },
  {
    "text": "variability grows up very quickly because if I have a component that has a quite low availability of two nines",
    "start": "162750",
    "end": "169820"
  },
  {
    "text": "if I put them in serious I get insert in parallel I get four nines of",
    "start": "169820",
    "end": "175890"
  },
  {
    "text": "availability so I'm increasing a lot from days to minutes by just putting the",
    "start": "175890",
    "end": "181260"
  },
  {
    "text": "components in parallel and if I do three normally we always say that for",
    "start": "181260",
    "end": "187020"
  },
  {
    "text": "availability 2 is not a good number 3 is much better one of the reason is because if you lose one then all the load goes",
    "start": "187020",
    "end": "194460"
  },
  {
    "text": "on the other components and then you have a single point of failure so if you can do three elements in parallel then",
    "start": "194460",
    "end": "199650"
  },
  {
    "text": "from two nines you go to six nines or lots lots of quite quite a good ability",
    "start": "199650",
    "end": "205340"
  },
  {
    "start": "205000",
    "end": "400000"
  },
  {
    "text": "so you see that redundancy is really key for increasing availability of your",
    "start": "205340",
    "end": "211500"
  },
  {
    "text": "architecture and that's why we have this globally distributed architecture with",
    "start": "211500",
    "end": "217140"
  },
  {
    "text": "us this is our global infrastructure those are all the regions that we have in orange and in green you see the new",
    "start": "217140",
    "end": "224820"
  },
  {
    "text": "regions that are coming actually I couldn't update the slides but during the night we launched the region in",
    "start": "224820",
    "end": "231090"
  },
  {
    "text": "Stockholm now in the SS console you can deploy in EU North one and in the in",
    "start": "231090",
    "end": "237720"
  },
  {
    "text": "Europe we have into 2020 the new region coming in Milan in amia",
    "start": "237720",
    "end": "242940"
  },
  {
    "text": "another region in Bahrain and in a cape town so it's it's growing a lot and each",
    "start": "242940",
    "end": "249000"
  },
  {
    "text": "of this region here you see as a number that's the number of the availability zones that's because as you probably",
    "start": "249000",
    "end": "256470"
  },
  {
    "text": "know our region's are not are never single data centers but each region is composed by at least two most frequently",
    "start": "256470",
    "end": "263820"
  },
  {
    "text": "three zones and each availability zone is a different cluster of data centers",
    "start": "263820",
    "end": "270360"
  },
  {
    "text": "usually built with a different security profile so that if one have abilities on",
    "start": "270360",
    "end": "276639"
  },
  {
    "text": "as a minimum risk of flooding the other abilities on can share the same kind of",
    "start": "276639",
    "end": "282220"
  },
  {
    "text": "risk and now that we see with this is exactly the physical equivalent of the",
    "start": "282220",
    "end": "287229"
  },
  {
    "text": "of spreading our architecture with parallel components we if I work in in",
    "start": "287229",
    "end": "293080"
  },
  {
    "text": "Ireland for example I have three availability zone I can distribute my architecture and build the the parallel",
    "start": "293080",
    "end": "298870"
  },
  {
    "text": "availability that was mentioning before so normally if I build a traditional architecture with ec2 or containers I",
    "start": "298870",
    "end": "307300"
  },
  {
    "text": "need to have a load balancer that somehow is distributing the load across different availability zones in my",
    "start": "307300",
    "end": "314289"
  },
  {
    "text": "region and then I have to deploy my application across multiple of abilities on so maybe I can use an auto scaling",
    "start": "314289",
    "end": "320590"
  },
  {
    "text": "group for that or I can manually choose which one I want to use if I go and the",
    "start": "320590",
    "end": "327370"
  },
  {
    "text": "next step is to go multi region so if I want I can also replicate my",
    "start": "327370",
    "end": "333070"
  },
  {
    "text": "architecture across two different regions for example Ireland or and Frankfurt if I want to stay within the U",
    "start": "333070",
    "end": "338919"
  },
  {
    "text": "or maybe I can do Ireland and Oregon and Singapore so I get a global coverage of",
    "start": "338919",
    "end": "346210"
  },
  {
    "text": "the world in that case I can use the DNS to send the user to the closest region",
    "start": "346210",
    "end": "351639"
  },
  {
    "text": "and and it starts to be quite interesting it's quite a complex architecture not money to maintain which",
    "start": "351639",
    "end": "358030"
  },
  {
    "text": "server listings are much easier because when you use high level services like",
    "start": "358030",
    "end": "363430"
  },
  {
    "text": "lambda or Amazon s3 or dynamodb you don't need to pick and choose the availability hit zone within the region",
    "start": "363430",
    "end": "369520"
  },
  {
    "text": "but automatically the service is distributing the lambda function the storage forestry the database for dynamo",
    "start": "369520",
    "end": "376210"
  },
  {
    "text": "across all the related zones so you just need to use the service already this",
    "start": "376210",
    "end": "381900"
  },
  {
    "text": "this availability that comes from having components distributed across multiple",
    "start": "381900",
    "end": "387070"
  },
  {
    "text": "data center comes out automatically and server less if you're still in this",
    "start": "387070",
    "end": "393310"
  },
  {
    "text": "truck probably you understood that there are some advantages so I'm not spending time here but there",
    "start": "393310",
    "end": "398889"
  },
  {
    "text": "lots of advantages and why you should build maybe a multi region architecture",
    "start": "398889",
    "end": "404319"
  },
  {
    "text": "with serverless and maybe you can build it active-active one probably the most",
    "start": "404319",
    "end": "411249"
  },
  {
    "text": "important reason to go multi region is latency let's imagine that you have a",
    "start": "411249",
    "end": "416949"
  },
  {
    "text": "user in Europe and you have your application you have your application in",
    "start": "416949",
    "end": "422139"
  },
  {
    "text": "Europe and you have users coming from the East Coast and from Australia there's nothing we can do against the",
    "start": "422139",
    "end": "427840"
  },
  {
    "text": "speed of light so you have hundreds and hundreds of milliseconds that are wasted here and normally when you go above 100",
    "start": "427840",
    "end": "434560"
  },
  {
    "text": "millisecond people starts to feel that the interface is not as fast as they expect above 300 milliseconds it really",
    "start": "434560",
    "end": "442779"
  },
  {
    "text": "feels bad so customers notice that the application is not working as they expect and also another reason can be",
    "start": "442779",
    "end": "450639"
  },
  {
    "text": "disaster recovery because when you deploy for example an application you can make mistake you can use canary",
    "start": "450639",
    "end": "456039"
  },
  {
    "text": "whatever you want but at some point a deployment can break our region regions are isolated so it's very difficult",
    "start": "456039",
    "end": "461199"
  },
  {
    "text": "unless you replicated the error that this error goes in another region but if you bring down all your application on",
    "start": "461199",
    "end": "467770"
  },
  {
    "text": "the US East then you can use for example the DNS to send all the users to the other region for some time and we will",
    "start": "467770",
    "end": "476199"
  },
  {
    "text": "simulate this environment briefly but it's probably one of the main reason together with latency for example",
    "start": "476199",
    "end": "482139"
  },
  {
    "text": "Netflix they have a multi region architecture and they deploy a region by region so they start with one region if",
    "start": "482139",
    "end": "487870"
  },
  {
    "text": "it were made the region with less traffic and then if it works then they replicate so the deployment is breaking",
    "start": "487870",
    "end": "493539"
  },
  {
    "text": "something they can quickly roll back by sending all the users to another region in fact Netflix was one of the first",
    "start": "493539",
    "end": "500830"
  },
  {
    "text": "customer was start to talk about building multi-region architecture they started to think about that in 2013 and",
    "start": "500830",
    "end": "508479"
  },
  {
    "text": "it took them three years to go muti to go to go multi region because it's it",
    "start": "508479",
    "end": "516159"
  },
  {
    "text": "was very complex now with some of the features that we launched over the last couple of years is much much easier and",
    "start": "516159",
    "end": "522399"
  },
  {
    "text": "then we can build a multi region architecture in less than one hour work so it's two dimensions from three years it now takes less than one hour what are",
    "start": "522399",
    "end": "530709"
  },
  {
    "start": "528000",
    "end": "730000"
  },
  {
    "text": "the prerequisites so the idea is that when you go multi-region and latency starts to be",
    "start": "530709",
    "end": "538420"
  },
  {
    "text": "important between the region there's nothing we can do against the speed of light so it's a distributed architecture",
    "start": "538420",
    "end": "543579"
  },
  {
    "text": "and whenever you have a distributed architecture [Music] you need to think about what features",
    "start": "543579",
    "end": "550569"
  },
  {
    "text": "what features you you can count on so there is a theorem it's called the cap theorem maybe we already heard about it",
    "start": "550569",
    "end": "557199"
  },
  {
    "text": "but the idea is if you have a distributed data store and most architecture at the end can be",
    "start": "557199",
    "end": "563110"
  },
  {
    "text": "assimilated to be a distributed data store when you distribute them across components then you can only guarantee",
    "start": "563110",
    "end": "569139"
  },
  {
    "text": "two out of those three characteristics so you have to choose two between consistency availability and partition",
    "start": "569139",
    "end": "576519"
  },
  {
    "text": "tolerance consistency means that that is always consistent across all the different partitions so can be for",
    "start": "576519",
    "end": "583930"
  },
  {
    "text": "example in this case the multiple regions availability means that every request is fulfilled and partition",
    "start": "583930",
    "end": "590440"
  },
  {
    "text": "tolerance means that if one of your you lose one of your partitions then you still able to respond as expected so",
    "start": "590440",
    "end": "597970"
  },
  {
    "text": "you're not losing data for example you can still work correctly so if you have a distributed architecture you have to",
    "start": "597970",
    "end": "606240"
  },
  {
    "text": "you have to disability texture like a multi region then you need to have",
    "start": "606240",
    "end": "611380"
  },
  {
    "text": "partition tolerance because that's a must you can't lose data you can't lose customer information so you need to",
    "start": "611380",
    "end": "618010"
  },
  {
    "text": "choose between consistency and availability what you would pick up",
    "start": "618010",
    "end": "623440"
  },
  {
    "text": "between the two who is voting for a consistency who's voting for",
    "start": "623440",
    "end": "629230"
  },
  {
    "text": "availability it was easy because the title of the recession is unavailability",
    "start": "629230",
    "end": "634779"
  },
  {
    "text": "so but there is really you should focus on be the consistency that a consistency",
    "start": "634779",
    "end": "641470"
  },
  {
    "text": "is something that we can work on in fact in fact we always talk in started to do",
    "start": "641470",
    "end": "648699"
  },
  {
    "text": "that in Amazon about thinking when you design an architecture to have your data to be event or consistent so that at",
    "start": "648699",
    "end": "655630"
  },
  {
    "text": "some point the data will converge across the different components of your architecture but you can't be sure that",
    "start": "655630",
    "end": "663639"
  },
  {
    "text": "this happens now or immediate there is an interesting what paper by Werner Vogel's the Amazon CTO I wrote",
    "start": "663639",
    "end": "671230"
  },
  {
    "text": "that in 2009 that exists claiming also how to think about an event wholly",
    "start": "671230",
    "end": "676809"
  },
  {
    "text": "consistent architecture if you think for example if you update the image of a",
    "start": "676809",
    "end": "682119"
  },
  {
    "text": "product catalog you can live with these images that take some time to be propagated across the network you can't",
    "start": "682119",
    "end": "689559"
  },
  {
    "text": "use event for consistency if you do a financial transaction because I can say okay I buy this product and maybe that",
    "start": "689559",
    "end": "695499"
  },
  {
    "text": "the money will arrive sometime in the future so the financial transaction is an exception so you can do that but for",
    "start": "695499",
    "end": "701559"
  },
  {
    "text": "lots of the information that we have with our application our websites we can definitely live with event our",
    "start": "701559",
    "end": "707799"
  },
  {
    "text": "consistency so that the data is going to propagate and take some time and it's something that you should think of",
    "start": "707799",
    "end": "714040"
  },
  {
    "text": "normally this brings you to have something like design architecture that are it important so that if the same",
    "start": "714040",
    "end": "720489"
  },
  {
    "text": "operation comes again and again you always get the same result and this is an idea that usually helps building",
    "start": "720489",
    "end": "727509"
  },
  {
    "text": "resilient distributed architectures and on top of that we need good good network",
    "start": "727509",
    "end": "735279"
  },
  {
    "start": "730000",
    "end": "843000"
  },
  {
    "text": "and starting from 2016 we started to describe how we are connecting our",
    "start": "735279",
    "end": "741069"
  },
  {
    "text": "regions with a network that we manage this is James M is Donna one of the",
    "start": "741069",
    "end": "746649"
  },
  {
    "text": "great minds behind the infrastructure that we use in AWS and this is the last",
    "start": "746649",
    "end": "752829"
  },
  {
    "text": "update from a few weeks ago so this is the Amazon global network so all of our",
    "start": "752829",
    "end": "757959"
  },
  {
    "text": "regions and each location with the exception of the two regions in China are connected by a redundant 100 Gigabit",
    "start": "757959",
    "end": "766419"
  },
  {
    "text": "Ethernet fiber based network and the",
    "start": "766419",
    "end": "772239"
  },
  {
    "text": "true boot that we can handle is very very high because there are thousands and thousands of fiber connections that we have for every connection and if you",
    "start": "772239",
    "end": "779589"
  },
  {
    "text": "look at this in if you look online you can find also some interesting stories because we work specifically really in",
    "start": "779589",
    "end": "786850"
  },
  {
    "text": "passing our own cables for example the cable that is connecting the west coast to the US through a Y to Australia is",
    "start": "786850",
    "end": "793539"
  },
  {
    "text": "something that it's a project we physically participate at all now we have some projects also to connect India with other islands if",
    "start": "793539",
    "end": "801240"
  },
  {
    "text": "it's clearly uninteresting a project and that means that if you move data from",
    "start": "801240",
    "end": "808389"
  },
  {
    "text": "one region to the other you don't use the internet anymore but you use an Amazon managed network that is highly",
    "start": "808389",
    "end": "814360"
  },
  {
    "text": "optimized and one of the advantages is also that if there is a problem with the",
    "start": "814360",
    "end": "820480"
  },
  {
    "text": "internet you know the public internet is composed but lots of network working together with routing tables that are",
    "start": "820480",
    "end": "827230"
  },
  {
    "text": "done dynamically computed if there is a problem then the global Internet can",
    "start": "827230",
    "end": "832449"
  },
  {
    "text": "take some time to readjust to a specific change in the network the network that",
    "start": "832449",
    "end": "838720"
  },
  {
    "text": "we manage we can react very fast because it's something we manage directly so",
    "start": "838720",
    "end": "844480"
  },
  {
    "text": "when we consider this then we need to think how can I send my customer to",
    "start": "844480",
    "end": "849579"
  },
  {
    "text": "different regions so they arrive to my DNS so you have your global DNS record",
    "start": "849579",
    "end": "854949"
  },
  {
    "text": "and then this can be instant customers to one region or the other to Ireland or US East for example and one interesting",
    "start": "854949",
    "end": "863350"
  },
  {
    "text": "way to do that that is one of the features of Amazon route 53 is latency based routing so we can automatically",
    "start": "863350",
    "end": "870579"
  },
  {
    "text": "look at the end point if they are a SS regions and send the user to the region that has the lowest",
    "start": "870579",
    "end": "877480"
  },
  {
    "text": "latency this can sometimes create strange results because the latency is",
    "start": "877480",
    "end": "883510"
  },
  {
    "text": "different than the traditional geography but it's very effective because we really sending customer to where they",
    "start": "883510",
    "end": "890380"
  },
  {
    "text": "work better we can also do geo based routing where you can specify",
    "start": "890380",
    "end": "895899"
  },
  {
    "text": "country by country this is normally useful if you have like digital rights or you have to expose different services",
    "start": "895899",
    "end": "902680"
  },
  {
    "text": "depending on the geography because in some countries you can do something different that in order and here you can",
    "start": "902680",
    "end": "907839"
  },
  {
    "text": "send users based on the country where were coming from and you can also we can",
    "start": "907839",
    "end": "916269"
  },
  {
    "text": "also do adjust a weighted round robin between regions so in case for example you distribute your architecture between",
    "start": "916269",
    "end": "922509"
  },
  {
    "text": "Ireland and Frankfurt maybe latency is not a problem within Europe",
    "start": "922509",
    "end": "927639"
  },
  {
    "text": "but you still want to have their availability of the two regions and you can use and you can use the avoided run roaming",
    "start": "927639",
    "end": "934430"
  },
  {
    "text": "to some customer on one side or the other and of course",
    "start": "934430",
    "end": "939650"
  },
  {
    "text": "Ruff's 53 can monitor the end points and do DNS failover so if the application is not working on one of the two sides and",
    "start": "939650",
    "end": "946430"
  },
  {
    "text": "this works with latency based will and other techniques we send all the users",
    "start": "946430",
    "end": "952310"
  },
  {
    "text": "to the other end point you can configure health checks that check that the service is responding and if there is a",
    "start": "952310",
    "end": "958100"
  },
  {
    "text": "problem we send all users to the others to the other side so now we can start to",
    "start": "958100",
    "end": "964640"
  },
  {
    "text": "see that we can design a multi region service architecture so with let's use",
    "start": "964640",
    "end": "971450"
  },
  {
    "text": "for example us East so US East and I in u.s. west here so and we can put our",
    "start": "971450",
    "end": "980510"
  },
  {
    "text": "business logic in in lambda functions and we replicate the lambda function at the deployment nothing really complex to",
    "start": "980510",
    "end": "987290"
  },
  {
    "text": "do as I said I would probably not deploy concurrently across all regions I would",
    "start": "987290",
    "end": "992510"
  },
  {
    "text": "start with one region and then event redo the other one then we can use the API gateway the API gateway as three",
    "start": "992510",
    "end": "998660"
  },
  {
    "text": "ways to build api's you can build what the original way of the API gate is now",
    "start": "998660",
    "end": "1005140"
  },
  {
    "text": "we call it edge optimized API and edge optimized they are designed for an internet scale distributed population of",
    "start": "1005140",
    "end": "1012970"
  },
  {
    "text": "user they embed our content delivery network CloudFront and the side effect",
    "start": "1012970",
    "end": "1019300"
  },
  {
    "text": "is that you can't do loaded latency based with those api's because every",
    "start": "1019300",
    "end": "1025060"
  },
  {
    "text": "customer will reach the closest edge location and then go to the to the api gateway so you need to create a regional",
    "start": "1025060",
    "end": "1031780"
  },
  {
    "text": "API endpoint if you create a regional API endpoint the again we will get out at regional level so you get out in",
    "start": "1031780",
    "end": "1037689"
  },
  {
    "text": "Dublin or in Frankfort for example and then the API endpoint has a custom",
    "start": "1037690",
    "end": "1042790"
  },
  {
    "text": "domain name and then you can use route 53 with a globe your global public domain to do latency based routing on on",
    "start": "1042790",
    "end": "1050920"
  },
  {
    "text": "the - and custom domain names of the two regional API endpoints so in this way we can have a business logic that is",
    "start": "1050920",
    "end": "1057730"
  },
  {
    "text": "distributed across region and the latency to the driver for data we can",
    "start": "1057730",
    "end": "1064540"
  },
  {
    "start": "1062000",
    "end": "1135000"
  },
  {
    "text": "use DynamoDB so last year we launched them with the big global tables that means that you can create a table in one region and",
    "start": "1064540",
    "end": "1070690"
  },
  {
    "text": "then replicate across multiple regions and we will synchronize the content of those tables we can't fight the speed of",
    "start": "1070690",
    "end": "1077440"
  },
  {
    "text": "light so it normally takes less than one second to have all the data at sync that's why I went for consistency is",
    "start": "1077440",
    "end": "1083409"
  },
  {
    "text": "important but it's it's it's a very simple way to have a distributed data set so to have this working active",
    "start": "1083409",
    "end": "1091450"
  },
  {
    "text": "activity you need to think about how you use your data so if for example each customer is using their own data set",
    "start": "1091450",
    "end": "1097870"
  },
  {
    "text": "then if the custom customer go in one region and some custom goes another region and then that I synchronized",
    "start": "1097870",
    "end": "1103179"
  },
  {
    "text": "everything works if you have multiple customer working on the same items and this item is in different region then",
    "start": "1103179",
    "end": "1109510"
  },
  {
    "text": "concurrency will not work because this one second on average of of latency we",
    "start": "1109510",
    "end": "1115390"
  },
  {
    "text": "will not create anything that works for example dynamodb transactions don't work on global table so you can have",
    "start": "1115390",
    "end": "1121690"
  },
  {
    "text": "transactions within a region and with the best account but of course you can't work in a region because otherwise we",
    "start": "1121690",
    "end": "1127720"
  },
  {
    "text": "would need to lock the record for one second and wait for the round-trip with the other region so it would not be",
    "start": "1127720",
    "end": "1133929"
  },
  {
    "text": "something scalable so at this point we can set up a demo and see how this works",
    "start": "1133929",
    "end": "1141000"
  },
  {
    "start": "1135000",
    "end": "1456000"
  },
  {
    "text": "we can do the DNS based solution the DNS based solution is we create a ton of the",
    "start": "1141000",
    "end": "1146919"
  },
  {
    "text": "big global table in one in two or more regions then we deploy lambda functions",
    "start": "1146919",
    "end": "1152830"
  },
  {
    "text": "in those regions we put the API gateway with a regional API endpoint and then we use route 53 with latency routing to",
    "start": "1152830",
    "end": "1159789"
  },
  {
    "text": "balance across all the different regions and this is the overall architecture that we get the customer here is",
    "start": "1159789",
    "end": "1168640"
  },
  {
    "text": "redirected by route 52 the closest region but the user to go to the region will use the public internet if the",
    "start": "1168640",
    "end": "1175120"
  },
  {
    "text": "closest regional will use the public Internet and to manage failover route 53 will change the result of the",
    "start": "1175120",
    "end": "1182890"
  },
  {
    "text": "DNS and and normally DNS results they have a TTL a time to live and route 53",
    "start": "1182890",
    "end": "1190929"
  },
  {
    "text": "has a very short time to live I think it's 30 seconds I don't know if we reduce that I didn't check recently that",
    "start": "1190929",
    "end": "1197560"
  },
  {
    "text": "that after 30 said on the client will refresh the DNS if in one region is not working the new DNS answer will send the",
    "start": "1197560",
    "end": "1205000"
  },
  {
    "text": "customer to the other region it's not super fast because you need to wait for the DNS refresh of the client if you",
    "start": "1205000",
    "end": "1211300"
  },
  {
    "text": "have clients that don't respect DNS refresh and TTL some sometimes this",
    "start": "1211300",
    "end": "1216700"
  },
  {
    "text": "happens with IOT and embedded devices because they have simplified operating system then this architecture will not",
    "start": "1216700",
    "end": "1223000"
  },
  {
    "text": "work because they will maybe cache the DNS result for four hours and they will",
    "start": "1223000",
    "end": "1229000"
  },
  {
    "text": "not move from one region to the other to create a DynamoDB table is like normally",
    "start": "1229000",
    "end": "1236080"
  },
  {
    "text": "you created and I'm gonna be table you only have to choose the primary key of the table everything else is flexible",
    "start": "1236080",
    "end": "1241270"
  },
  {
    "text": "with dynamodb and then you need to we have a global table pan panel you can",
    "start": "1241270",
    "end": "1248200"
  },
  {
    "text": "only enable global table when the table is empty so at creation time if you",
    "start": "1248200",
    "end": "1253510"
  },
  {
    "text": "already up data in a table you can't create a global table and then you can enable streams streams is dynamodb",
    "start": "1253510",
    "end": "1261730"
  },
  {
    "text": "streams that means that every time there is an activity on the table we create an order at stream of data that tells all",
    "start": "1261730",
    "end": "1268030"
  },
  {
    "text": "the updates and the rights on the table and this is something that you can listen to with a lambda function but",
    "start": "1268030",
    "end": "1273700"
  },
  {
    "text": "it's the same technology that we use for the replication of global tables so you need to enable streams and then you can",
    "start": "1273700",
    "end": "1281950"
  },
  {
    "text": "start adding regions and you can add multiple regions for example I have here",
    "start": "1281950",
    "end": "1288190"
  },
  {
    "text": "Frankfurt and Ireland as two region in with in which the table is replicated",
    "start": "1288190",
    "end": "1293800"
  },
  {
    "text": "even if you plan to create a distributed architecture with only two regions since",
    "start": "1293800",
    "end": "1299410"
  },
  {
    "text": "you can only add the regions at creation time maybe it can be a good practice to add a third region so that in the future",
    "start": "1299410",
    "end": "1305350"
  },
  {
    "text": "if you want to add a third region is already there the cost will be slightly limited because you only pay for the",
    "start": "1305350",
    "end": "1310660"
  },
  {
    "text": "database and then keeping the database updated and you create also disaster",
    "start": "1310660",
    "end": "1315670"
  },
  {
    "text": "recovery outside of the two production regions on rough 53 you can define a",
    "start": "1315670",
    "end": "1322120"
  },
  {
    "text": "traffic policy where you map the global public dns name with rules can be",
    "start": "1322120",
    "end": "1328720"
  },
  {
    "text": "weighted roulette based rules and this will go as an endpoint to the Public DNS name of the",
    "start": "1328720",
    "end": "1335749"
  },
  {
    "text": "original API gateway endpoint and since",
    "start": "1335749",
    "end": "1342200"
  },
  {
    "text": "this will probably be HTTP you have to be careful because HTTP brings a",
    "start": "1342200",
    "end": "1347629"
  },
  {
    "text": "certificate with it so that means that if you have if you're using a domain here the certificate for that domain",
    "start": "1347629",
    "end": "1353720"
  },
  {
    "text": "must also be installed on the two API gateways if you use the Amazon",
    "start": "1353720",
    "end": "1359019"
  },
  {
    "text": "certificate manager there is no cost you can create a certificate and then assign it to the endpoint if you have your own",
    "start": "1359019",
    "end": "1364970"
  },
  {
    "text": "certificate you can load them but it's important because otherwise each day when the HTTP requests reach this",
    "start": "1364970",
    "end": "1370369"
  },
  {
    "text": "endpoint if you don't change that it's expecting this DNS name that will probably be different from your public",
    "start": "1370369",
    "end": "1377059"
  },
  {
    "text": "dns name so you need to add certificates and then you can define L tracks with",
    "start": "1377059",
    "end": "1384019"
  },
  {
    "text": "route 53 and L checks can really really can be defined in different ways but the most effective way is to just do an HTTP",
    "start": "1384019",
    "end": "1391070"
  },
  {
    "text": "request at some specific part and then you can monitor also the result these",
    "start": "1391070",
    "end": "1396350"
  },
  {
    "text": "are two hundred okay and then you can do also string matching optionally to see that you contain some specific string in",
    "start": "1396350",
    "end": "1402499"
  },
  {
    "text": "your answer and you can do standard health check every 30 seconds or",
    "start": "1402499",
    "end": "1407840"
  },
  {
    "text": "superfast every 10 seconds this will be a request that you get in your application but are used by our 53",
    "start": "1407840",
    "end": "1414350"
  },
  {
    "text": "globally to check if the different regions work there is also a threshold here and if the threshold if you get an",
    "start": "1414350",
    "end": "1422299"
  },
  {
    "text": "error for in you reach the number as number of consecutive error this threshold then we will disable that",
    "start": "1422299",
    "end": "1427940"
  },
  {
    "text": "region at DNS level and all the user will be sent to the other region even this number small will make moving users",
    "start": "1427940",
    "end": "1435440"
  },
  {
    "text": "from one region to the other at faster but it can also create false positives because sometimes small errors can",
    "start": "1435440",
    "end": "1442369"
  },
  {
    "text": "happen by this is a test run on the internet so don't go to too low because",
    "start": "1442369",
    "end": "1448119"
  },
  {
    "text": "having a full switch from Mara tertunian where I know there is still something that you want to avoid if you really",
    "start": "1448119",
    "end": "1454669"
  },
  {
    "text": "don't need it starting from this rain bank so three weeks ago two weeks ago",
    "start": "1454669",
    "end": "1462110"
  },
  {
    "start": "1456000",
    "end": "1784000"
  },
  {
    "text": "we now have other features that we can use so we launched this new service is",
    "start": "1462110",
    "end": "1467540"
  },
  {
    "text": "called the WS global accelerator and the purpose of this service is to leverage on the global network that we have so",
    "start": "1467540",
    "end": "1474920"
  },
  {
    "text": "that if you want to accelerate access to your application running in a region you",
    "start": "1474920",
    "end": "1481160"
  },
  {
    "text": "can use the global accelerator the customer will enter in the closest edge location and then we use our fully",
    "start": "1481160",
    "end": "1487430"
  },
  {
    "text": "managed network to reach the endpoint and this can work with a single region",
    "start": "1487430",
    "end": "1493010"
  },
  {
    "text": "so if you want to distribute your application globally with a single region it will still help customers go",
    "start": "1493010",
    "end": "1498710"
  },
  {
    "text": "through this global actor network or you can work with multiple regions with failover similar to what we saw with",
    "start": "1498710",
    "end": "1504800"
  },
  {
    "text": "route 53 so now the architecture is in the backend is the same so we have DynamoDB global tables our lambda",
    "start": "1504800",
    "end": "1511790"
  },
  {
    "text": "functions this can be replicated across multiple region then we can use the",
    "start": "1511790",
    "end": "1517820"
  },
  {
    "text": "global accelerator as an entry point and the global accelerator supports the application load balancer as an entry",
    "start": "1517820",
    "end": "1524210"
  },
  {
    "text": "point in the region and if you follow my presentation from early this morning the",
    "start": "1524210",
    "end": "1531290"
  },
  {
    "text": "about the application of balancer can now route traffic to our lambda function",
    "start": "1531290",
    "end": "1537110"
  },
  {
    "text": "so this integration alb to lambda function is new and the global accelerator is new and now you can build",
    "start": "1537110",
    "end": "1543530"
  },
  {
    "text": "this architecture that is similar to what we saw before but awesome some differences so this is the",
    "start": "1543530",
    "end": "1550190"
  },
  {
    "text": "resulting architecture so similar to what we saw before but we have the application balancer instead of the API",
    "start": "1550190",
    "end": "1555650"
  },
  {
    "text": "gateway and we have the global accelerator so what are the main difference differences with this",
    "start": "1555650",
    "end": "1562010"
  },
  {
    "text": "architecture so the global accelerator first of all works at IP level so can",
    "start": "1562010",
    "end": "1567050"
  },
  {
    "text": "accelerate UDP we can accelerate HTTP",
    "start": "1567050",
    "end": "1572060"
  },
  {
    "text": "TCP and it's exposing not a DNS C name",
    "start": "1572060",
    "end": "1577190"
  },
  {
    "text": "but exposing to any cast IPS any cast IPS are IP address for now we support",
    "start": "1577190",
    "end": "1583130"
  },
  {
    "text": "ipv4 and these two IP address are the same globally and depending on where you",
    "start": "1583130",
    "end": "1589070"
  },
  {
    "text": "are Ruff's 53 we resolve those names so the global dns when they reach our",
    "start": "1589070",
    "end": "1596630"
  },
  {
    "text": "reach our resolver will resolve that into the closest at edge location so if",
    "start": "1596660",
    "end": "1603300"
  },
  {
    "text": "you have use cases were DNS refresher DNS respecting the DNS dat TTL can be",
    "start": "1603300",
    "end": "1610080"
  },
  {
    "text": "complex you can solve this with the global accelerator because it's IP based so it works a little bit at a lower",
    "start": "1610080",
    "end": "1616320"
  },
  {
    "text": "level and the communication from the closest edge location to the region now",
    "start": "1616320",
    "end": "1621990"
  },
  {
    "text": "is happening on the global net on the Amazon global network so it's it's",
    "start": "1621990",
    "end": "1627540"
  },
  {
    "text": "better because this traffic here is not going through the internet you enter in the edge location and then you go",
    "start": "1627540",
    "end": "1633810"
  },
  {
    "text": "through the global network another DIF",
    "start": "1633810",
    "end": "1639330"
  },
  {
    "text": "will see the difference afterwards so then the multi they actually accelerate or you can create your accelerator the",
    "start": "1639330",
    "end": "1646470"
  },
  {
    "text": "accelerator can accept different listener for different protocols for example I here I have TCP on 4 for 8 and",
    "start": "1646470",
    "end": "1654840"
  },
  {
    "text": "80 so the HTTP and HTTPS and then you can attach to a listener multiple and",
    "start": "1654840",
    "end": "1661220"
  },
  {
    "text": "endpoint groups like I have an endpoint groups in a US East in an endpoint group",
    "start": "1661220",
    "end": "1667370"
  },
  {
    "text": "an endpoint group here in Ireland and then each endpoint group can have a list",
    "start": "1667370",
    "end": "1673110"
  },
  {
    "text": "of endpoints in this case I have a single endpoint and with a weight and I",
    "start": "1673110",
    "end": "1679470"
  },
  {
    "text": "can send for example people customer to this load balancer then then will",
    "start": "1679470",
    "end": "1684780"
  },
  {
    "text": "trigger the lambda function so just to go back when at regional level we have a",
    "start": "1684780",
    "end": "1690150"
  },
  {
    "text": "traffic dial so normally if you keep everything at 100% with just balance based on the location but let's imagine",
    "start": "1690150",
    "end": "1696360"
  },
  {
    "text": "that you want to do some maintenance on u.s. East one you can just change the traffic dial bring this law or or to",
    "start": "1696360",
    "end": "1703620"
  },
  {
    "text": "zero and all the user would go to another region and then you can so these diets are for your management not for",
    "start": "1703620",
    "end": "1710970"
  },
  {
    "text": "failover that we do that we do that automatically and then inside each region you can define weights so that",
    "start": "1710970",
    "end": "1716340"
  },
  {
    "text": "for example if you want to do blue green deployment within a region you can create another load balancer and then",
    "start": "1716340",
    "end": "1721500"
  },
  {
    "text": "you can move weight from one load balancer to the order to move cost from one version of your application to",
    "start": "1721500",
    "end": "1727290"
  },
  {
    "text": "the other so if we look at the two",
    "start": "1727290",
    "end": "1733020"
  },
  {
    "text": "architecture the difference is here so this 1253 this is dns-based is using the",
    "start": "1733020",
    "end": "1738090"
  },
  {
    "text": "public internet to reach the api gateway and then everything is okay you have lots of functionality for API management",
    "start": "1738090",
    "end": "1744810"
  },
  {
    "text": "here that you don't have in the alb here you reach the closest edge location then",
    "start": "1744810",
    "end": "1749820"
  },
  {
    "text": "you use the Amazon global network to reach the region so the network is optimized is IP based the cost model is",
    "start": "1749820",
    "end": "1756600"
  },
  {
    "text": "different here as I said also the beginning the application load balancer is a little bit cheaper if you have lots",
    "start": "1756600",
    "end": "1762180"
  },
  {
    "text": "of very small API calls talking of millions and millions and so sometimes",
    "start": "1762180",
    "end": "1771180"
  },
  {
    "text": "can be cheaper here the global accelerator is probably a little bit more expensive the route 53 but also a",
    "start": "1771180",
    "end": "1776490"
  },
  {
    "text": "fixity if you enable health check you have a cost for all those health checks that you get so cost wise they're not so",
    "start": "1776490",
    "end": "1782820"
  },
  {
    "text": "different oops before the thank you I just want to show",
    "start": "1782820",
    "end": "1788370"
  },
  {
    "start": "1784000",
    "end": "1936000"
  },
  {
    "text": "you the the how this works actually in real time so I we have a little bit of",
    "start": "1788370",
    "end": "1794430"
  },
  {
    "text": "time so let's start with testing things so I have here a few endpoints that I",
    "start": "1794430",
    "end": "1800400"
  },
  {
    "text": "created so so this is this is the deck",
    "start": "1800400",
    "end": "1811110"
  },
  {
    "text": "so when I implemented those this architecture here I played a little bit",
    "start": "1811110",
    "end": "1817170"
  },
  {
    "text": "and I'm using the same lambda function the API gateway in the application box that they have basically has very",
    "start": "1817170",
    "end": "1822990"
  },
  {
    "text": "similar syntax when they call the lambda function and they have a slightly different syntax in the response that",
    "start": "1822990",
    "end": "1828960"
  },
  {
    "text": "the lambda function must give back but it's not so different so I created a single lambda function that can work transparently with both and basically",
    "start": "1828960",
    "end": "1836310"
  },
  {
    "text": "the from the function is recognizing if it is an API call or a load balancer call and then is customizing so if we go",
    "start": "1836310",
    "end": "1847009"
  },
  {
    "text": "if I run this command I can test this multi region and point this is using the",
    "start": "1847009",
    "end": "1853309"
  },
  {
    "text": "API gateway and I'm just reading a record from DynamoDB and we see that the",
    "start": "1853309",
    "end": "1862009"
  },
  {
    "text": "answer is this is the item on dynamodb this is from an API call so this is the",
    "start": "1862009",
    "end": "1868190"
  },
  {
    "text": "lambda function writing that it recognized this is an API goal and this is the region where the lambda was",
    "start": "1868190",
    "end": "1875539"
  },
  {
    "text": "executed it was executed in in Ireland of course I'm here and latency based",
    "start": "1875539",
    "end": "1881359"
  },
  {
    "text": "routing sent me to Ireland this other information that you see here is is",
    "start": "1881359",
    "end": "1887929"
  },
  {
    "text": "attributes that are automatically added by global tables that tell you that this original write came from Ireland",
    "start": "1887929",
    "end": "1894950"
  },
  {
    "text": "actually and has been replicated in other in other in other region this was",
    "start": "1894950",
    "end": "1901429"
  },
  {
    "text": "the time of the update in unix time and also if we are going are planning to",
    "start": "1901429",
    "end": "1907279"
  },
  {
    "text": "delete this record since the deletion can take some time this is marked as",
    "start": "1907279",
    "end": "1913100"
  },
  {
    "text": "false so there is no deletion of these records that is prompt if I copy this",
    "start": "1913100",
    "end": "1918559"
  },
  {
    "text": "other URL here I can do the same on the load balancer so this was run through",
    "start": "1918559",
    "end": "1925460"
  },
  {
    "text": "the load balancer using the global accelerator again I'm sent to to Ireland",
    "start": "1925460",
    "end": "1931009"
  },
  {
    "text": "because I'm in our land but this was coming from the LB to see if this",
    "start": "1931009",
    "end": "1937190"
  },
  {
    "start": "1936000",
    "end": "2027000"
  },
  {
    "text": "actually works we can we can use an",
    "start": "1937190",
    "end": "1942739"
  },
  {
    "text": "instance for example so using ec2 instances where this kind of test is not perfect because is it",
    "start": "1942739",
    "end": "1948710"
  },
  {
    "text": "resistances are still inside the region when you use the global accelerator normally this is optimized for customer",
    "start": "1948710",
    "end": "1954350"
  },
  {
    "text": "distributed across the world so do you go to the edge location if you're inside the region basically you get from the region you go to a next location then",
    "start": "1954350",
    "end": "1960889"
  },
  {
    "text": "you go back to a region so it's not optimal part but for some fun testing it can be good so I have an instance in",
    "start": "1960889",
    "end": "1968629"
  },
  {
    "text": "Oregon I think yeah this one so let's",
    "start": "1968629",
    "end": "1974419"
  },
  {
    "text": "log into this distance so this is in Oregon I should have a key",
    "start": "1974419",
    "end": "1984800"
  },
  {
    "text": "[Music] u.s. West - is it - you sir",
    "start": "1984800",
    "end": "1992440"
  },
  {
    "text": "okay now I'm in the instance so let's copy the same commands that I run here",
    "start": "1993850",
    "end": "1999640"
  },
  {
    "text": "so this is the the the API so route 53",
    "start": "1999640",
    "end": "2008770"
  },
  {
    "text": "and the API gateway and the second one is using global accelerator and as you",
    "start": "2008770",
    "end": "2015550"
  },
  {
    "text": "see now the region I'm run and going to is US East one and in the global table I",
    "start": "2015550",
    "end": "2023350"
  },
  {
    "text": "found the same data because it was coming from Ireland and it was updated from icon so let's have a bit of a look",
    "start": "2023350",
    "end": "2030940"
  },
  {
    "start": "2027000",
    "end": "2319000"
  },
  {
    "text": "of how this works better so let's go let's start from lamda let's start from",
    "start": "2030940",
    "end": "2036730"
  },
  {
    "text": "DynamoDB and then we go to lambda so this is the back end that is the common",
    "start": "2036730",
    "end": "2041800"
  },
  {
    "text": "common to both so this is my in Oregon for example my multi-region table and",
    "start": "2041800",
    "end": "2048550"
  },
  {
    "text": "it's being replicated across four",
    "start": "2048550",
    "end": "2055540"
  },
  {
    "text": "regions so if anybody tries to build a globally replicated data base you know",
    "start": "2055540",
    "end": "2062169"
  },
  {
    "text": "the number is something complex this is really a few clicks in the console now so the data is replicated across Ireland",
    "start": "2062169",
    "end": "2067179"
  },
  {
    "text": "Frankfort North Virginia and Oregon here you have the capacity unit now all those",
    "start": "2067179",
    "end": "2074169"
  },
  {
    "text": "tables are on the band if you followed my presentation before on-demand means that I don't need to setup provisioning",
    "start": "2074169",
    "end": "2080138"
  },
  {
    "text": "I pay by the request but if you want you can still use provisional throughput",
    "start": "2080139",
    "end": "2087898"
  },
  {
    "text": "when I switched my one of the tables to on demand automatically all the tables",
    "start": "2087899",
    "end": "2093280"
  },
  {
    "text": "were switched to on demand you can imagine what why we do that why we move",
    "start": "2093280",
    "end": "2102580"
  },
  {
    "text": "if you let's say that this were all at 1,000 writes per seat per second and now",
    "start": "2102580",
    "end": "2108880"
  },
  {
    "text": "I switch one table to undermanned so it can support tens of thousands of",
    "start": "2108880",
    "end": "2113960"
  },
  {
    "text": "rights per second yeah all they need to be at least with the same capacity",
    "start": "2113960",
    "end": "2119900"
  },
  {
    "text": "because if any of these tables as a higher higher throughput and then I start using that either throughput",
    "start": "2119900",
    "end": "2126110"
  },
  {
    "text": "writing in that table then the other tables will not be able to catch up because they don't have the capacity to write at the same speed so it's very",
    "start": "2126110",
    "end": "2133340"
  },
  {
    "text": "important that you keep the capacity at the same level otherwise one region can start to lag behind and and this usually",
    "start": "2133340",
    "end": "2140360"
  },
  {
    "text": "can be a big problem especially if you have lots of throughput so this is something that we do automatically if",
    "start": "2140360",
    "end": "2145940"
  },
  {
    "text": "you change the throughput is not automatic but you will get like a big warning here saying hey you have true",
    "start": "2145940",
    "end": "2151640"
  },
  {
    "text": "butit is not the same in all the tables you need to synchronize the true put otherwise this cannot work can create",
    "start": "2151640",
    "end": "2159320"
  },
  {
    "text": "big problems so this is the table and actually the table are almost empty so this is the record that we were seen",
    "start": "2159320",
    "end": "2165530"
  },
  {
    "text": "before there are four records if we look at the lambda function so let's go back",
    "start": "2165530",
    "end": "2173360"
  },
  {
    "text": "to Ireland the multi-region function and",
    "start": "2173360",
    "end": "2179060"
  },
  {
    "text": "then so this is a function again I wrote",
    "start": "2179060",
    "end": "2187910"
  },
  {
    "text": "it it in in not Jes and basically if we",
    "start": "2187910",
    "end": "2194510"
  },
  {
    "text": "look at the main part and we don't look at all the functions I just look in the",
    "start": "2194510",
    "end": "2199640"
  },
  {
    "text": "let's zoom a little bit more in this",
    "start": "2199640",
    "end": "2205700"
  },
  {
    "text": "part here I'm looking at the input event and both the API gateway and and the",
    "start": "2205700",
    "end": "2212630"
  },
  {
    "text": "load balancer they send you a request context but inside the different context in case of the application run balancer",
    "start": "2212630",
    "end": "2219410"
  },
  {
    "text": "there is an e lb component that gives you some information so I look at this if there is an e lb in the request",
    "start": "2219410",
    "end": "2226100"
  },
  {
    "text": "context then is a load balancer otherwise is an API and then I have this as the event source then I look if there",
    "start": "2226100",
    "end": "2232760"
  },
  {
    "text": "is an operation is a read over of write this is and what I need to do with my",
    "start": "2232760",
    "end": "2238090"
  },
  {
    "text": "read from dynamodb and then when I read them right from the node",
    "start": "2238090",
    "end": "2243910"
  },
  {
    "text": "I get the response here and then I have this response for function that",
    "start": "2243910",
    "end": "2250510"
  },
  {
    "text": "depending on the event source will format the output for the load balancer or the API gateway and the response",
    "start": "2250510",
    "end": "2257319"
  },
  {
    "text": "format is this one so the sorry this is",
    "start": "2257319",
    "end": "2262390"
  },
  {
    "text": "the generic one and then it's calling the API and the load balancer that just above so this one is the syntax of the",
    "start": "2262390",
    "end": "2271750"
  },
  {
    "text": "API gateway so the API gateway needs to have a status code so 200 of KFOR HTTP",
    "start": "2271750",
    "end": "2277089"
  },
  {
    "text": "normally and then you can optionally give a body that is what I'm passing by",
    "start": "2277089",
    "end": "2282369"
  },
  {
    "text": "and header saying that this JSON but this is not mandatory the application of",
    "start": "2282369",
    "end": "2288460"
  },
  {
    "text": "balancer syntax is more strict so that you always have to tell them if the application will balance if this is",
    "start": "2288460",
    "end": "2294520"
  },
  {
    "text": "base64 encoded the status code you also have to provide a status description typical of HTTP so 200 of K then headers",
    "start": "2294520",
    "end": "2302980"
  },
  {
    "text": "and the only optional component here is the body but since this is all designed to pass a body of course I have the body",
    "start": "2302980",
    "end": "2309309"
  },
  {
    "text": "also in my function so with these two simple functions I can create a lambda function that can pass information both",
    "start": "2309309",
    "end": "2316000"
  },
  {
    "text": "to the API get you into the alb if we",
    "start": "2316000",
    "end": "2321099"
  },
  {
    "start": "2319000",
    "end": "2584000"
  },
  {
    "text": "have a look at route 53 we can see how",
    "start": "2321099",
    "end": "2329829"
  },
  {
    "text": "that works so I have a hosted zone that is my demo the nil optusnet and here I",
    "start": "2329829",
    "end": "2337180"
  },
  {
    "text": "have both the multi-region and multi-region lb dns so the multi region",
    "start": "2337180",
    "end": "2342900"
  },
  {
    "text": "this one is this a cname that is managed by a traffic policy so this is for the",
    "start": "2342900",
    "end": "2348579"
  },
  {
    "text": "API gateway if I go on traffic on traffic in traffic policy I see that I",
    "start": "2348579",
    "end": "2355150"
  },
  {
    "text": "have my multi-region policy that has different version and the latest version is this one that is similar to what was",
    "start": "2355150",
    "end": "2365109"
  },
  {
    "text": "in the slides but basically I have the cname is mapped with a latency rule to",
    "start": "2365109",
    "end": "2371920"
  },
  {
    "text": "us east and to Ireland in this case I want to enable the health checks",
    "start": "2371920",
    "end": "2377020"
  },
  {
    "text": "here and then each one is routed to the DNS name so this is something you need to put yourself of the API gateway in",
    "start": "2377020",
    "end": "2385540"
  },
  {
    "text": "fact if we go to the API gateway console",
    "start": "2385540",
    "end": "2391110"
  },
  {
    "text": "and we are for example in Ireland I have my multi-region API and and that is",
    "start": "2393210",
    "end": "2400510"
  },
  {
    "text": "using my lambda function and here I have",
    "start": "2400510",
    "end": "2405880"
  },
  {
    "text": "the custom domain names and this is this is where you get this is the domain name",
    "start": "2405880",
    "end": "2412660"
  },
  {
    "text": "that is automatically generated by the API gateway with original API and then I have to tell what is the domain the",
    "start": "2412660",
    "end": "2418900"
  },
  {
    "text": "public domain that I want to use so multi-region and then I need to install a certificate that can cover this domain",
    "start": "2418900",
    "end": "2426100"
  },
  {
    "text": "so I have a star certificate that is covering all the name of the needle tot net domain sub domain but if you don't",
    "start": "2426100",
    "end": "2433780"
  },
  {
    "text": "have these certificates and if you don't have this the API gateway will receive a request that it cannot interpret",
    "start": "2433780",
    "end": "2438820"
  },
  {
    "text": "correctly so you will get an error so this is a little bit the probably the most complex bit to set up if we look at",
    "start": "2438820",
    "end": "2447670"
  },
  {
    "text": "the global accelerator things are a little bit easier so the global",
    "start": "2447670",
    "end": "2457120"
  },
  {
    "text": "accelerator I have this configuration with US and US east and then I have the",
    "start": "2457120",
    "end": "2465580"
  },
  {
    "text": "two endpoint groups though for us east and for Ireland let's go into the one in",
    "start": "2465580",
    "end": "2471370"
  },
  {
    "text": "Ireland and here if you want to add an endpoint the void endpoint now our are",
    "start": "2471370",
    "end": "2481090"
  },
  {
    "text": "this so this is a new service so it may change in the future so now you can use the global accelerator with the",
    "start": "2481090",
    "end": "2487360"
  },
  {
    "text": "application load balancer the network a load balancer and or an elastic IP that you attach to a single instance so the",
    "start": "2487360",
    "end": "2494530"
  },
  {
    "text": "API gateways is not here that's the reason why I have this different architecture and if we go in the ec2",
    "start": "2494530",
    "end": "2504790"
  },
  {
    "text": "console something oops I'm downloading the Institute console",
    "start": "2504790",
    "end": "2509950"
  },
  {
    "text": "if we go in the ec2 console let's go in Ireland I have here the load balancers",
    "start": "2509950",
    "end": "2523180"
  },
  {
    "text": "and here you have my multi-region load balancer the does a listener the",
    "start": "2523750",
    "end": "2530570"
  },
  {
    "text": "listener is forwarding all the HTTP traffic to a target group the target",
    "start": "2530570",
    "end": "2537290"
  },
  {
    "text": "group is as a configuration we're sending everything to this lambda",
    "start": "2537290",
    "end": "2543110"
  },
  {
    "text": "function and this is the new part the new bit that comes from REM vent now you can put into a target group a lambda",
    "start": "2543110",
    "end": "2549530"
  },
  {
    "text": "function similarly to what you would normally do with a an application with an auto scaling group or an ec2 instance",
    "start": "2549530",
    "end": "2557860"
  },
  {
    "text": "so this is the overall description of this architecture there are pros and",
    "start": "2557860",
    "end": "2564620"
  },
  {
    "text": "cons in both so not one is better than the other it depends on your use case normally the most important thing is to",
    "start": "2564620",
    "end": "2570650"
  },
  {
    "text": "decide if you want to work with IP address or a DNS based solution if you need Network acceleration or if you okay",
    "start": "2570650",
    "end": "2577310"
  },
  {
    "text": "with your customer going to the closest region using the public internet thank",
    "start": "2577310",
    "end": "2583550"
  },
  {
    "text": "you we have some time if you want to ask",
    "start": "2583550",
    "end": "2591110"
  },
  {
    "text": "any question on these or things that we saw today and and then we have a short",
    "start": "2591110",
    "end": "2596690"
  },
  {
    "text": "break of 15 minutes and at 45 we started a final session that is probably the",
    "start": "2596690",
    "end": "2602900"
  },
  {
    "text": "most opposite topic after this session is how to build several backends using",
    "start": "2602900",
    "end": "2608000"
  },
  {
    "text": "graph QL any Western ok",
    "start": "2608000",
    "end": "2619120"
  },
  {
    "text": "so transactions by default are enabled for all non global tables if you have a",
    "start": "2630420",
    "end": "2637390"
  },
  {
    "text": "global table transaction by default are disabled because we we can assure we",
    "start": "2637390",
    "end": "2644470"
  },
  {
    "text": "can't assure that that transaction is all or nothing on a replicated table",
    "start": "2644470",
    "end": "2649780"
  },
  {
    "text": "because there's too much latency between so that means that by default you can't",
    "start": "2649780",
    "end": "2655840"
  },
  {
    "text": "use transaction if you want in a global table you can enable transaction but if you apply the instruction on one table",
    "start": "2655840",
    "end": "2662010"
  },
  {
    "text": "here in Ireland and at the same time you do a done section in u.s. East",
    "start": "2662010",
    "end": "2667990"
  },
  {
    "text": "we can't assure that the two transaction work seamless as as you would expect so",
    "start": "2667990",
    "end": "2673030"
  },
  {
    "text": "you normally the use case for enabling transaction with global tables is disaster recovery so it's not active",
    "start": "2673030",
    "end": "2679210"
  },
  {
    "text": "active but you have another region where you know that there is no activity or you are sure that you are not working on",
    "start": "2679210",
    "end": "2686620"
  },
  {
    "text": "the same records as the other region and then you can use this feature but you need to enable it at table level because",
    "start": "2686620",
    "end": "2692860"
  },
  {
    "text": "by default global tables have transactions did I say this ended yeah",
    "start": "2692860",
    "end": "2703330"
  },
  {
    "text": "yeah the denim will be transaction are fully asset compliant transactions and they work across a single or multiple",
    "start": "2703330",
    "end": "2709030"
  },
  {
    "text": "tables but they must be in the same region and in the same AWS account do",
    "start": "2709030",
    "end": "2714880"
  },
  {
    "text": "you do that when across region is is is too low it's impossible because when the",
    "start": "2714880",
    "end": "2720880"
  },
  {
    "text": "latency goes both I think 20 milliseconds 30 milliseconds synchronous",
    "start": "2720880",
    "end": "2728110"
  },
  {
    "text": "activities like this are too slow and doesn't make sense any other question",
    "start": "2728110",
    "end": "2738810"
  },
  {
    "text": "okay we we see we meet again I hope in 20 minutes so we start at 45 and then",
    "start": "2739620",
    "end": "2745990"
  },
  {
    "text": "the last session of the day on a completely different topic as I said we",
    "start": "2745990",
    "end": "2751450"
  },
  {
    "text": "will talk more about graph QL and how graphical works and how to use that with mobile and web applications",
    "start": "2751450",
    "end": "2759450"
  }
]