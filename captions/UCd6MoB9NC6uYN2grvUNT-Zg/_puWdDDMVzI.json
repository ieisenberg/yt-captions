[
  {
    "text": "rate should be here with you again this is Giulio from AWS we're going to",
    "start": "30",
    "end": "5370"
  },
  {
    "text": "continue our conversation about the ada blasts well architected framework today",
    "start": "5370",
    "end": "10980"
  },
  {
    "text": "so if this is the first time you're joining AWS well architected framework",
    "start": "10980",
    "end": "16980"
  },
  {
    "text": "is designed to help you guys build applications that are called ready and",
    "start": "16980",
    "end": "24210"
  },
  {
    "text": "that comply with the best practices and design principles that we've seen",
    "start": "24210",
    "end": "30590"
  },
  {
    "text": "successful in many customers and then we can establish as good things for",
    "start": "30590",
    "end": "37020"
  },
  {
    "text": "everyone so this is divided into five pillars in you can download this white",
    "start": "37020",
    "end": "44789"
  },
  {
    "text": "paper the AWS well expected white paper from the from the website and the idea",
    "start": "44789",
    "end": "51570"
  },
  {
    "text": "here is this it's divided in security",
    "start": "51570",
    "end": "57170"
  },
  {
    "text": "reliability performance efficiency cost optimization and operational excellence",
    "start": "57170",
    "end": "63589"
  },
  {
    "text": "so the in the previous episodes we've",
    "start": "63589",
    "end": "69420"
  },
  {
    "text": "been talking about security reliability performance efficiency and now we're",
    "start": "69420",
    "end": "76380"
  },
  {
    "text": "going to talk about cost optimization so today's episode is all about saving money on the cloud so let's jump right",
    "start": "76380",
    "end": "84330"
  },
  {
    "text": "into that so it starts on page 30 of",
    "start": "84330",
    "end": "89479"
  },
  {
    "text": "documents here in the bottom you can see the cost optimization pillar and let's",
    "start": "89479",
    "end": "95520"
  },
  {
    "text": "just review the design principles before we jump into the questions so the first",
    "start": "95520",
    "end": "101220"
  },
  {
    "text": "thing is adopting a consumption model and designing your that church you pay",
    "start": "101220",
    "end": "108899"
  },
  {
    "text": "for only the compute resources and the storage resources that you're actually",
    "start": "108899",
    "end": "114420"
  },
  {
    "text": "going to use and benefiting from the economies of scale and price reductions",
    "start": "114420",
    "end": "120210"
  },
  {
    "text": "and many other things that are only possible in the cloud and yes and stop spending money on data",
    "start": "120210",
    "end": "129729"
  },
  {
    "text": "center operations I know you guys don't like to spend too much money on tin cans",
    "start": "129729",
    "end": "138490"
  },
  {
    "text": "so we're all going to leverage the best of the cloud and it's not just about",
    "start": "138490",
    "end": "144459"
  },
  {
    "text": "spending less but being able to analyze and dissect and understand better our",
    "start": "144459",
    "end": "151330"
  },
  {
    "text": "billing so we're going to take a look at that aspect of costs today as well and",
    "start": "151330",
    "end": "157050"
  },
  {
    "text": "of course using the management services can help to reduce our total cost of",
    "start": "157050",
    "end": "162850"
  },
  {
    "text": "infrastructure so this is the general ideas that we'll go through every",
    "start": "162850",
    "end": "169360"
  },
  {
    "text": "question starting with the first question and the cost optimization pillars the",
    "start": "169360",
    "end": "177940"
  },
  {
    "text": "fingers are you considering costs when you select AWS services for your",
    "start": "177940",
    "end": "183610"
  },
  {
    "text": "solution and the idea here is that different services will have different",
    "start": "183610",
    "end": "190450"
  },
  {
    "text": "price criterion and in many cases you can do very simple steps to make take",
    "start": "190450",
    "end": "198580"
  },
  {
    "text": "advantage of one specific service for example in storage services this gets",
    "start": "198580",
    "end": "205150"
  },
  {
    "text": "pretty clear if we take a look in the s3s three pricing we can see that it",
    "start": "205150",
    "end": "215350"
  },
  {
    "text": "starts from 2.3 cents for the per gigabyte on standard storage and this is",
    "start": "215350",
    "end": "224200"
  },
  {
    "text": "object storage you know you you don't have a file system on s3 Frey s R is not",
    "start": "224200",
    "end": "233459"
  },
  {
    "text": "hierarchy not like a traditional file system at least so this is a bit",
    "start": "233459",
    "end": "241090"
  },
  {
    "text": "different you will you can't just a connect system app and say hey use s3",
    "start": "241090",
    "end": "246720"
  },
  {
    "text": "instead of my file system but you can use fourth party software for example in",
    "start": "246720",
    "end": "252760"
  },
  {
    "text": "WordPress there are many plugins to write directly to us three and the difference is that",
    "start": "252760",
    "end": "260049"
  },
  {
    "text": "instead of having a file system for example IO file our file system as a",
    "start": "260050",
    "end": "265810"
  },
  {
    "text": "service EFS will charge you 30 cents per per gig per month so does this ten times",
    "start": "265810",
    "end": "274530"
  },
  {
    "text": "more than you would pay for s3 and just a difference of perhaps installing a",
    "start": "274530",
    "end": "281920"
  },
  {
    "text": "plug-in or instead of writing to local disks right into s3 so selecting the",
    "start": "281920",
    "end": "288220"
  },
  {
    "text": "right cost structure and perhaps just in your app to leverage the best service",
    "start": "288220",
    "end": "294580"
  },
  {
    "text": "for your costs will be pretty important and I have to think about this in every",
    "start": "294580",
    "end": "300940"
  },
  {
    "text": "tier of your app right and select the price that sounds right so this is what",
    "start": "300940",
    "end": "307330"
  },
  {
    "text": "this first question is all about like how for each tier in your app you should",
    "start": "307330",
    "end": "314080"
  },
  {
    "text": "describe what is the service that you're looking for and how it makes sense to",
    "start": "314080",
    "end": "320800"
  },
  {
    "text": "use that for it and this happens in many many other cases for example let's take",
    "start": "320800",
    "end": "326650"
  },
  {
    "text": "a look at databases if we take a look at RDS pricing we can see somehow this can",
    "start": "326650",
    "end": "336930"
  },
  {
    "text": "can go on in in literally any service take for example my sequel if we are",
    "start": "336930",
    "end": "345370"
  },
  {
    "text": "running on an on demand instance on my sequel and we get to a certain size say",
    "start": "345370",
    "end": "354010"
  },
  {
    "text": "for example our three large this costs",
    "start": "354010",
    "end": "359080"
  },
  {
    "text": "24 cents per per hour and this is just single AZ if we go to Mori",
    "start": "359080",
    "end": "367180"
  },
  {
    "text": "AZ and that's probably what you want for production to have synchronous",
    "start": "367180",
    "end": "372700"
  },
  {
    "text": "replication in different locations the same instance type will cost you forty",
    "start": "372700",
    "end": "380200"
  },
  {
    "text": "eight cents so keep this number in mind for now because if we change a database",
    "start": "380200",
    "end": "387580"
  },
  {
    "text": "to Aurora it is come my sicko compatible so we got we can",
    "start": "387580",
    "end": "396270"
  },
  {
    "text": "probably switch from the app without any code change just point the app to Aurora",
    "start": "396270",
    "end": "401550"
  },
  {
    "text": "and have it running and if we check the",
    "start": "401550",
    "end": "406640"
  },
  {
    "text": "DPR three largest on our RS starts on twenty nine cents and it already",
    "start": "406640",
    "end": "412440"
  },
  {
    "text": "includes like six times forty six replicas out of the box so this is way",
    "start": "412440",
    "end": "418230"
  },
  {
    "text": "more cost-effective than running your own my sequel on RDS and the things will",
    "start": "418230",
    "end": "426180"
  },
  {
    "text": "even more dramatic if you consider my sequel on their own instances and sure",
    "start": "426180",
    "end": "435470"
  },
  {
    "text": "let me get the PDF so we are talking about well architected this PDF you can",
    "start": "435470",
    "end": "442260"
  },
  {
    "text": "get it on well architect the framework",
    "start": "442260",
    "end": "448790"
  },
  {
    "text": "it'll s this is the the page and the",
    "start": "449420",
    "end": "460290"
  },
  {
    "text": "link is right here so let me paste this for you guys so this is the this is the",
    "start": "460290",
    "end": "466620"
  },
  {
    "text": "documents that you're talking about and feel free to ask questions and if",
    "start": "466620",
    "end": "473670"
  },
  {
    "text": "anything I say it doesn't make sense either because of my weird English or",
    "start": "473670",
    "end": "479510"
  },
  {
    "text": "anything at all just comment and it would be great dive deeper or explain",
    "start": "479510",
    "end": "486300"
  },
  {
    "text": "anything better okay so let's get back to the to our document its own page 33",
    "start": "486300",
    "end": "493680"
  },
  {
    "text": "and the second thing is heavy cite your sources to meet your cost targets so the",
    "start": "493680",
    "end": "501540"
  },
  {
    "text": "thing is I see on many customers this problem of how to start and if you don't",
    "start": "501540",
    "end": "507960"
  },
  {
    "text": "know I highly recommend starting with the memo if you're on ec2 for example on",
    "start": "507960",
    "end": "514919"
  },
  {
    "text": "on-demand pricing you can see that we have a range of lots and lots of instances that goes",
    "start": "514919",
    "end": "521890"
  },
  {
    "text": "from less than one cent per hour up to dozens of dollars perhaps and well if",
    "start": "521890",
    "end": "530050"
  },
  {
    "text": "you if you can get away with a teaching nano or a teacher micro why not so",
    "start": "530050",
    "end": "535920"
  },
  {
    "text": "you're going to have to experiment and try different instance types and take a",
    "start": "535920",
    "end": "541300"
  },
  {
    "text": "look how those things works to make the appropriate selection for your costs and",
    "start": "541300",
    "end": "547900"
  },
  {
    "text": "the idea here is taking a measure of performance and cost and seeing like",
    "start": "547900",
    "end": "553330"
  },
  {
    "text": "what's the sweet sweet spot for for your app and we're gonna take a better look",
    "start": "553330",
    "end": "560590"
  },
  {
    "text": "at this in the form in the following the following questions so this is the idea",
    "start": "560590",
    "end": "565930"
  },
  {
    "text": "for picking the appropriate price model to meet your cost targets because we",
    "start": "565930",
    "end": "573220"
  },
  {
    "text": "have lots of options for example let's talk about compute about AWS compute",
    "start": "573220",
    "end": "579970"
  },
  {
    "text": "services we have we start we can start with ec2 and this let's take a look at",
    "start": "579970",
    "end": "587800"
  },
  {
    "text": "easy to pricing we have four options on easy to on demand reserved instances",
    "start": "587800",
    "end": "594730"
  },
  {
    "text": "spot instances and dedicated hosts so on demand pricing is the simple pricing",
    "start": "594730",
    "end": "601420"
  },
  {
    "text": "that you will get when you spin up an instance and just pay by the hour so if",
    "start": "601420",
    "end": "608020"
  },
  {
    "text": "you don't do anything special or different this is simply what you pay is",
    "start": "608020",
    "end": "614020"
  },
  {
    "text": "what you use per second in fact so the prices are listed per",
    "start": "614020",
    "end": "619210"
  },
  {
    "text": "hour but the actual billing charges are now per second so here if you you can",
    "start": "619210",
    "end": "625990"
  },
  {
    "text": "just pay for a very small fraction of what your compute times would be in most",
    "start": "625990",
    "end": "634000"
  },
  {
    "text": "other circumstances you can page exactly for the instance time that you use but",
    "start": "634000",
    "end": "640630"
  },
  {
    "text": "there are other instances are there options as well for example all reserved",
    "start": "640630",
    "end": "646660"
  },
  {
    "text": "instances we can get some discount by just paying in advance",
    "start": "646660",
    "end": "653350"
  },
  {
    "text": "making a commitment of usage with AWS let's pick one instance type to work",
    "start": "653350",
    "end": "659470"
  },
  {
    "text": "today as an example so let's say that we've done some experiments we've talked",
    "start": "659470",
    "end": "667120"
  },
  {
    "text": "about co2 pride performance and how to make performance experiments on the last",
    "start": "667120",
    "end": "672430"
  },
  {
    "text": "episode and let's say that we arrived at the decision that we need an m4 x-large",
    "start": "672430",
    "end": "679150"
  },
  {
    "text": "that's the this is the idea for our app and it's very easy to make the math",
    "start": "679150",
    "end": "685180"
  },
  {
    "text": "because it's 2 cents per hour on demand so let's say that we have this for a",
    "start": "685180",
    "end": "692650"
  },
  {
    "text": "full month how much does it cost two cents per hour for a full month well one",
    "start": "692650",
    "end": "698080"
  },
  {
    "text": "way to solve this is using the Ida blast calculator calculator that",
    "start": "698080",
    "end": "703300"
  },
  {
    "text": "AWS handles on the phone or AWS talk",
    "start": "703300",
    "end": "709060"
  },
  {
    "text": "later if you can't die tonight me so this is how we can estimate our ada press",
    "start": "709060",
    "end": "717880"
  },
  {
    "text": "charges by the end of the month so if we have one instance that's use it 100% of",
    "start": "717880",
    "end": "724120"
  },
  {
    "text": "the time and it's an in for extra-large on this region we can expect our bill on",
    "start": "724120",
    "end": "734080"
  },
  {
    "text": "demand to be around of 150 bucks per month okay and this changes a bit if we",
    "start": "734080",
    "end": "741220"
  },
  {
    "text": "both reserved so on the reserved instances model let's take a look at the",
    "start": "741220",
    "end": "749920"
  },
  {
    "text": "reserve it costs 4 M for dot X large and",
    "start": "749920",
    "end": "760230"
  },
  {
    "text": "pricing details pricing page oops this is it the ri pricing page and and",
    "start": "761490",
    "end": "772690"
  },
  {
    "text": "for dot X large so this is the this is",
    "start": "772690",
    "end": "778570"
  },
  {
    "text": "the deal right here and there so one thing one thing that I like about this",
    "start": "778570",
    "end": "784150"
  },
  {
    "text": "there's no special pricing or special deals it's all very straightforward and",
    "start": "784150",
    "end": "790750"
  },
  {
    "text": "public on the web page and here's the thing the more you commit to AWS the",
    "start": "790750",
    "end": "797320"
  },
  {
    "text": "more you'll get a discount so if you don't make any commitment and just pay",
    "start": "797320",
    "end": "803530"
  },
  {
    "text": "by the second the cost is two cents per hour but if you go to if you can commit",
    "start": "803530",
    "end": "813210"
  },
  {
    "text": "in for example for one year you can pay",
    "start": "813210",
    "end": "818980"
  },
  {
    "text": "five hundred and seventeen dollars upfront it's immediately after you",
    "start": "818980",
    "end": "825670"
  },
  {
    "text": "commit and after that per month you pay forty three dollars an effective hourly",
    "start": "825670",
    "end": "831820"
  },
  {
    "text": "rate of one point one eight if you divide which would be a significant",
    "start": "831820",
    "end": "837430"
  },
  {
    "text": "discount forty one percent over the 2.2 cents 20 cents per hour that you would",
    "start": "837430",
    "end": "843130"
  },
  {
    "text": "have otherwise but if you can do a dream ear commit upfront and for many",
    "start": "843130",
    "end": "851890"
  },
  {
    "text": "enterprises this is ideal as you can just pay up front and don't worry about",
    "start": "851890",
    "end": "858510"
  },
  {
    "text": "how much it will vary it's more predictable and this may be interesting",
    "start": "858510",
    "end": "864250"
  },
  {
    "text": "in some cases you can just pay 2 grand almost 2,000 bucks and your monthly",
    "start": "864250",
    "end": "871990"
  },
  {
    "text": "costs goes to zero so you only pay upfront and this is an effective hourly",
    "start": "871990",
    "end": "878350"
  },
  {
    "text": "hate rate of seven cents it's a 62 percent discount so the idea here is",
    "start": "878350",
    "end": "885850"
  },
  {
    "text": "that if you know that you're going to need this capacity for example you need",
    "start": "885850",
    "end": "892270"
  },
  {
    "text": "a minimum capacity to keep the website up even if it's at night you need to",
    "start": "892270",
    "end": "897580"
  },
  {
    "text": "stay up 24/7 you can take this capacity and reserve it and the other the other",
    "start": "897580",
    "end": "905530"
  },
  {
    "text": "traffic that you might have occasionally you can spin up and spin down instances on demand and just adapt to your",
    "start": "905530",
    "end": "913120"
  },
  {
    "text": "circumstances so let's see what kind of difference this can make so instead of",
    "start": "913120",
    "end": "920200"
  },
  {
    "text": "let's see with two instances instead of just buying two instances that would be",
    "start": "920200",
    "end": "926080"
  },
  {
    "text": "almost 300 dollars you can get say hey",
    "start": "926080",
    "end": "931990"
  },
  {
    "text": "wait I'm going to take one of this that I'm going to need and reserve it and I",
    "start": "931990",
    "end": "937840"
  },
  {
    "text": "will use one on demand because I don't need it 100% of the time so say you have",
    "start": "937840",
    "end": "945850"
  },
  {
    "text": "a high traffic on the day usage as it's very typical you know people get into",
    "start": "945850",
    "end": "952510"
  },
  {
    "text": "work during the morning and leave at 9:00 and by this time it's a third of the day 33% you get more usage so this",
    "start": "952510",
    "end": "963700"
  },
  {
    "text": "can be on demand but the ordering for large and for X large you would have you",
    "start": "963700",
    "end": "972700"
  },
  {
    "text": "can use it on three-year all upfront and just pay in advance and this would bring",
    "start": "972700",
    "end": "981550"
  },
  {
    "text": "your your monthly costs to a much much lower rate that you would have otherwise",
    "start": "981550",
    "end": "988600"
  },
  {
    "text": "all right I hope this makes sense and this is how you can select if this is",
    "start": "988600",
    "end": "995410"
  },
  {
    "text": "what this question means right what are you using on demand what are you using reserved and now let's talk a bit about",
    "start": "995410",
    "end": "1003510"
  },
  {
    "text": "spot instances so the idea of spot instances is having a fluctuating price",
    "start": "1003510",
    "end": "1011510"
  },
  {
    "text": "so here on the ec2 let's just go for spot instances and see how this works",
    "start": "1011510",
    "end": "1018630"
  },
  {
    "text": "trying to spin a few of them and here in the spot requests by the way reservation",
    "start": "1018630",
    "end": "1026550"
  },
  {
    "text": "and spot you can do everything here from the console you don't need to call anyone on AWS just follow the wizard and",
    "start": "1026550",
    "end": "1033420"
  },
  {
    "text": "that's it and I'm gonna submit a request for our and for x-large",
    "start": "1033420",
    "end": "1042350"
  },
  {
    "text": "here I can set this is the this is the",
    "start": "1044120",
    "end": "1049380"
  },
  {
    "text": "big difference I can set a max bit I can set a max price that I can that I'm",
    "start": "1049380",
    "end": "1055350"
  },
  {
    "text": "willing to pay for this instance say I'm not willing to pay 20 cents I will offer",
    "start": "1055350",
    "end": "1062190"
  },
  {
    "text": "at best 15 and the idea here is if an instance if the current market price is",
    "start": "1062190",
    "end": "1069890"
  },
  {
    "text": "less than 50 cents a word simply spam cents I will pay 10 cents I'll pay the",
    "start": "1069890",
    "end": "1075360"
  },
  {
    "text": "current market flight price if it fluctuates up to 15 cents I will pay",
    "start": "1075360",
    "end": "1081090"
  },
  {
    "text": "this amount but if it goes over such as 80 18 cents or even 25 or $1 it can go",
    "start": "1081090",
    "end": "1089280"
  },
  {
    "text": "way above the spot on demand price then your instance is just terminated so this",
    "start": "1089280",
    "end": "1097710"
  },
  {
    "text": "is important and to consider like how your application behaves if one instance",
    "start": "1097710",
    "end": "1104130"
  },
  {
    "text": "is terminated if it's consuming for a message queue or doing a big data batch",
    "start": "1104130",
    "end": "1109440"
  },
  {
    "text": "it's probably not gonna be a big thing because it have other instances consuming work and they will be fine but",
    "start": "1109440",
    "end": "1116940"
  },
  {
    "text": "if you're taking web requests you know perhaps you want to take this instance out of the load balancer first and",
    "start": "1116940",
    "end": "1123840"
  },
  {
    "text": "things like this and you to have we do have the resources to automate that but",
    "start": "1123840",
    "end": "1129450"
  },
  {
    "text": "you really need to to consider your application air detector but if you can",
    "start": "1129450",
    "end": "1135390"
  },
  {
    "text": "handle termination and/or stop and start of instances then you can take a lot of",
    "start": "1135390",
    "end": "1142110"
  },
  {
    "text": "advantage of the spot market see let's pick from this month on one",
    "start": "1142110",
    "end": "1150420"
  },
  {
    "text": "specific AZ say this remedy here or just a green one so we can see that",
    "start": "1150420",
    "end": "1160409"
  },
  {
    "text": "most of the period most of the time our spot market was in this range you know",
    "start": "1160409",
    "end": "1167220"
  },
  {
    "text": "just above six cents five cents and here",
    "start": "1167220",
    "end": "1172289"
  },
  {
    "text": "a bit more five point five so here for this whole duration of the month up to",
    "start": "1172289",
    "end": "1179039"
  },
  {
    "text": "this point you've been using an instance that would cost up to 20 cents on demand",
    "start": "1179039",
    "end": "1186690"
  },
  {
    "text": "and now we're using it for five and six cents except for this peak here where we reach",
    "start": "1186690",
    "end": "1194070"
  },
  {
    "text": "its top price off it's like around",
    "start": "1194070",
    "end": "1202860"
  },
  {
    "text": "nearly eight cents 10 cents some somewhere around here but you get the",
    "start": "1202860",
    "end": "1208650"
  },
  {
    "text": "idea and if we go to a higher range of time and for all the other",
    "start": "1208650",
    "end": "1214530"
  },
  {
    "text": "Easy's we can see a very different scenario for example in u.s. is one a",
    "start": "1214530",
    "end": "1219980"
  },
  {
    "text": "the market price actually went up almost above two dollars so way above the",
    "start": "1219980",
    "end": "1228470"
  },
  {
    "text": "thanks.thanks during Opio this can be helpful we are going to talk a lot about",
    "start": "1228470",
    "end": "1233789"
  },
  {
    "text": "many cost optimization tips today so this is sure to save some guys are off",
    "start": "1233789",
    "end": "1239429"
  },
  {
    "text": "money in this case of spot for example one thing to consider what would be",
    "start": "1239429",
    "end": "1246150"
  },
  {
    "text": "better for you if you need to buy let's say that on average here we would be you",
    "start": "1246150",
    "end": "1252539"
  },
  {
    "text": "know 10 cents or 8 cents let's say it's free it's four times cheaper for example",
    "start": "1252539",
    "end": "1258360"
  },
  {
    "text": "on average what would be better do you think it's better to buy 100",
    "start": "1258360",
    "end": "1265289"
  },
  {
    "text": "on-demand instances for sure or 400 spot instances with a chance of variation so",
    "start": "1265289",
    "end": "1273210"
  },
  {
    "text": "you can see that probably the sweet spot would be to get 50 instances on demand",
    "start": "1273210",
    "end": "1279960"
  },
  {
    "text": "and 200 spot for the same amount of money on average and this is how you can",
    "start": "1279960",
    "end": "1287470"
  },
  {
    "text": "save him a lot of money on spot and we have a lot of customers going to us let me show you guys one very cool example",
    "start": "1287470",
    "end": "1294100"
  },
  {
    "text": "is from a company called psycho computing and they built the",
    "start": "1294100",
    "end": "1301679"
  },
  {
    "text": "supercomputer cluster and when you have HPC clusters or distributed computing",
    "start": "1301679",
    "end": "1308350"
  },
  {
    "text": "you you kind of need redundancy because computers are going to fail all the time",
    "start": "1308350",
    "end": "1314679"
  },
  {
    "text": "if you have enough of them and it's no different with them but let's see what",
    "start": "1314679",
    "end": "1320140"
  },
  {
    "text": "they did so their case is for simulations they did material simulation",
    "start": "1320140",
    "end": "1327250"
  },
  {
    "text": "and to simulate 200,000 different materials and they had at peak a hundred",
    "start": "1327250",
    "end": "1336220"
  },
  {
    "text": "and fifty thousand core clusters so this is probably one of the largest computers",
    "start": "1336220",
    "end": "1341980"
  },
  {
    "text": "in the world and the cool thing is if they were to build it from the start it",
    "start": "1341980",
    "end": "1348730"
  },
  {
    "text": "would be an environment worth 68 million by their estimates and they just ran the",
    "start": "1348730",
    "end": "1355659"
  },
  {
    "text": "simulation on for 18 hours and it costed 33,000 on spots so this is kind of huge",
    "start": "1355659",
    "end": "1364090"
  },
  {
    "text": "savings for them and for many customers that need this kind of this kind of",
    "start": "1364090",
    "end": "1369850"
  },
  {
    "text": "scale so sure sure this is the this is the link for the psycho computing",
    "start": "1369850",
    "end": "1376890"
  },
  {
    "text": "article and we're going to talk a lot more about this so this is a spot and we",
    "start": "1376890",
    "end": "1385990"
  },
  {
    "text": "are going to have a full episode on spot to understand the differences in the requests but I'm just showing how",
    "start": "1385990",
    "end": "1393370"
  },
  {
    "text": "different compute can be and the final the final cost income issue is we talked",
    "start": "1393370",
    "end": "1402010"
  },
  {
    "text": "about autumn and spot reserved and dedicated hosts dedicated hosts allows",
    "start": "1402010",
    "end": "1408039"
  },
  {
    "text": "you to know which host is serving each instance so you can license Windows",
    "start": "1408039",
    "end": "1415299"
  },
  {
    "text": "software or any software that requires you to know the exact number of course physical core",
    "start": "1415299",
    "end": "1421420"
  },
  {
    "text": "and things like this this is just for mostly for licensing and for busy",
    "start": "1421420",
    "end": "1429070"
  },
  {
    "text": "neighbors and things like this you may have unshared confute if you need",
    "start": "1429070",
    "end": "1434350"
  },
  {
    "text": "dedicated host by any reason another one is compliance so some",
    "start": "1434350",
    "end": "1439600"
  },
  {
    "text": "compliance standards doesn't allow you to share Hardware so you may need dedicated hosts for this and this is",
    "start": "1439600",
    "end": "1445960"
  },
  {
    "text": "available it actually costs a bit more not less but it's good that there you can use it and again it's all per second",
    "start": "1445960",
    "end": "1455110"
  },
  {
    "text": "now everything is a reserved spot everything works the same it's just the",
    "start": "1455110",
    "end": "1461680"
  },
  {
    "text": "same the same price per hour but billed per second on ec2 okay so this this is",
    "start": "1461680",
    "end": "1473860"
  },
  {
    "text": "just for easy too but we have to consider other models of compute for",
    "start": "1473860",
    "end": "1479590"
  },
  {
    "text": "example we have to think that this is per hour per second but on lambda does",
    "start": "1479590",
    "end": "1485830"
  },
  {
    "text": "is pretty much cheaper because on lambda",
    "start": "1485830",
    "end": "1491110"
  },
  {
    "text": "you're not spinning instances it's serverless instances are managed by AWS",
    "start": "1491110",
    "end": "1497230"
  },
  {
    "text": "I just upload your function and go you",
    "start": "1497230",
    "end": "1502330"
  },
  {
    "text": "want it pay for this weird unit of costs",
    "start": "1502330",
    "end": "1507480"
  },
  {
    "text": "called gigabyte second it's zero point zero zero zero zero one six six seven",
    "start": "1507480",
    "end": "1514180"
  },
  {
    "text": "per gigabyte second so if your function stays up for one second and consumes on",
    "start": "1514180",
    "end": "1520930"
  },
  {
    "text": "gig of ram you paid this fraction of a cent and if that's all it took to",
    "start": "1520930",
    "end": "1527230"
  },
  {
    "text": "respond to HTTP requests for example or to your dynamodb entry or for a new s3",
    "start": "1527230",
    "end": "1533860"
  },
  {
    "text": "file whatever triggers your function you can your you pay for only this if your",
    "start": "1533860",
    "end": "1540880"
  },
  {
    "text": "idle for the rest of the night you don't have to have the instance up so you",
    "start": "1540880",
    "end": "1546040"
  },
  {
    "text": "don't pay anything else and you can this is this is huge word for cost savings",
    "start": "1546040",
    "end": "1554740"
  },
  {
    "text": "I were trying to get at least one customer example for each one of those",
    "start": "1554740",
    "end": "1560470"
  },
  {
    "text": "and first survey was the best example I have is this is this talk from lean",
    "start": "1560470",
    "end": "1570400"
  },
  {
    "text": "language I really highly recommend to check her out on Twitter she's one of my favorite speakers and he did talk from",
    "start": "1570400",
    "end": "1577690"
  },
  {
    "text": "NDC Oslo serverless reality or BS she tells the story of the Australian census",
    "start": "1577690",
    "end": "1586900"
  },
  {
    "text": "and it was a project dude by a government contractor and they spent",
    "start": "1586900",
    "end": "1593650"
  },
  {
    "text": "nine million dollars trying to get they Spanish the Australian census online and",
    "start": "1593650",
    "end": "1600960"
  },
  {
    "text": "they failed like it couldn't handle the load on the first date went down and it",
    "start": "1600960",
    "end": "1606670"
  },
  {
    "text": "was terrible and a week later choose students at a hackathon did a screen",
    "start": "1606670",
    "end": "1614650"
  },
  {
    "text": "scraping of the website and did the exact same thing using serverless and",
    "start": "1614650",
    "end": "1619900"
  },
  {
    "text": "lambda for five hundred dollars so we are seeing many cases of customers that",
    "start": "1619900",
    "end": "1627250"
  },
  {
    "text": "had costs in the dozens of hundreds of",
    "start": "1627250",
    "end": "1633520"
  },
  {
    "text": "dollars going to the dozens of dollars because they just can adapt to demand",
    "start": "1633520",
    "end": "1640330"
  },
  {
    "text": "and only pay for the time that compute is actually happening so this is you can",
    "start": "1640330",
    "end": "1647410"
  },
  {
    "text": "use this for answering HTTP requests building cold responding to events",
    "start": "1647410",
    "end": "1654720"
  },
  {
    "text": "scheduling tasks and anything that we can run on lambda so this makes costs",
    "start": "1654720",
    "end": "1662200"
  },
  {
    "text": "very interesting let me paste the link here so this is main Spock I recommended",
    "start": "1662200",
    "end": "1669780"
  },
  {
    "text": "and you have to think that compute is not the only cost here you have network",
    "start": "1669780",
    "end": "1677320"
  },
  {
    "text": "and bandwidth as well so usually data",
    "start": "1677320",
    "end": "1682360"
  },
  {
    "text": "transfer cost it's nothing for data coming in from",
    "start": "1682360",
    "end": "1687490"
  },
  {
    "text": "the Internet - AWS but for data going out from ec2 to the Internet it starts",
    "start": "1687490",
    "end": "1695710"
  },
  {
    "text": "at well nine cents per gigabyte they'll transfer out from DC - to the Internet",
    "start": "1695710",
    "end": "1702580"
  },
  {
    "text": "you have a gig free but after that it's 9% so there are a couple ways to make",
    "start": "1702580",
    "end": "1711220"
  },
  {
    "text": "that easier and if you're really starting and all you need is one",
    "start": "1711220",
    "end": "1717040"
  },
  {
    "text": "instance we have lightsail that's a bit more predictable because we have this",
    "start": "1717040",
    "end": "1722620"
  },
  {
    "text": "packets so light sale is pretty much like easy - but instead of paying per",
    "start": "1722620",
    "end": "1728530"
  },
  {
    "text": "second you're paying per month so if you want just a virtual private server for",
    "start": "1728530",
    "end": "1735070"
  },
  {
    "text": "$5 a month you get one terabyte of data transfer and you no more predictable",
    "start": "1735070",
    "end": "1742570"
  },
  {
    "text": "pricing if all you need is that single WordPress instance and just make it",
    "start": "1742570",
    "end": "1748210"
  },
  {
    "text": "quite cheap all right but other than",
    "start": "1748210",
    "end": "1753730"
  },
  {
    "text": "that the only other ways to reduce costs are one well one way would be to use the",
    "start": "1753730",
    "end": "1764490"
  },
  {
    "text": "direct connect so we have we have the service call Direct Connect that you can",
    "start": "1764490",
    "end": "1770110"
  },
  {
    "text": "connect the right way to your data center and of course if you're not going through the internet this would reduce",
    "start": "1770110",
    "end": "1775750"
  },
  {
    "text": "your bandwidth cost because you don't need to go for the VPN and things like this you can just connect directly to",
    "start": "1775750",
    "end": "1783010"
  },
  {
    "text": "our data center but I'd like to talk about the most important service for",
    "start": "1783010",
    "end": "1789490"
  },
  {
    "text": "cost optimization and that is called front for sure and what cloud front",
    "start": "1789490",
    "end": "1796780"
  },
  {
    "text": "allows you to do is use a global network of edge locations to cache and response",
    "start": "1796780",
    "end": "1803559"
  },
  {
    "text": "directly from the edge what is not only more efficient in terms of performance",
    "start": "1803559",
    "end": "1808710"
  },
  {
    "text": "but in terms of cost efficiency as well so let me show you guys what it is all",
    "start": "1808710",
    "end": "1817240"
  },
  {
    "text": "about so this is definitely the high point of",
    "start": "1817240",
    "end": "1822590"
  },
  {
    "text": "today's episode does this I think the",
    "start": "1822590",
    "end": "1828230"
  },
  {
    "text": "most dramatic cost optimization we can have and I will go from the very start",
    "start": "1828230",
    "end": "1834200"
  },
  {
    "text": "make sure that everyone gets it so here's the map of AWS that you can see",
    "start": "1834200",
    "end": "1841220"
  },
  {
    "text": "on a degress amazon.com slash products and here you see two different kinds of",
    "start": "1841220",
    "end": "1849260"
  },
  {
    "text": "infrastructure we have this yellow dots those are the AWS regions and we have",
    "start": "1849260",
    "end": "1857270"
  },
  {
    "text": "these yellow dots that are the AWS edge locations and the difference is that",
    "start": "1857270",
    "end": "1865370"
  },
  {
    "text": "only the services that required minimal latency runs on edge locations most",
    "start": "1865370",
    "end": "1872600"
  },
  {
    "text": "specifically in this case called front our content delivery network so the I",
    "start": "1872600",
    "end": "1880130"
  },
  {
    "text": "just make sure everyone gets it that's gold step parent step-by-step here and",
    "start": "1880130",
    "end": "1886880"
  },
  {
    "text": "ask this simple question what is the ideal AWS regions for you guys to pick",
    "start": "1886880",
    "end": "1894649"
  },
  {
    "text": "you know if you're building an AWS app today right now what is the the AWS",
    "start": "1894649",
    "end": "1903110"
  },
  {
    "text": "region that you should keep and it's kind of a difficult question to answer",
    "start": "1903110",
    "end": "1908360"
  },
  {
    "text": "because the first thing that comes to mind is distance and latency right you",
    "start": "1908360",
    "end": "1915080"
  },
  {
    "text": "pick the one that's closer to you because you would have the least latency so if we take this called pin but in",
    "start": "1915080",
    "end": "1923059"
  },
  {
    "text": "fold this is a fourth party website that you guys can use here's the link on the twitch chat to measure the latency",
    "start": "1923059",
    "end": "1930380"
  },
  {
    "text": "between your your current network and the newer and all AWS regions so here",
    "start": "1930380",
    "end": "1939140"
  },
  {
    "text": "you can see that from my current location I have around 100 to 200",
    "start": "1939140",
    "end": "1945500"
  },
  {
    "text": "milliseconds up to the US and nine seconds",
    "start": "1945500",
    "end": "1952070"
  },
  {
    "text": "nine milliseconds of latency to some bottle region guess where I am right now so I'm I'm",
    "start": "1952070",
    "end": "1960470"
  },
  {
    "text": "not at the data center I'm in another location I swear but nine milliseconds",
    "start": "1960470",
    "end": "1965780"
  },
  {
    "text": "is pretty good so should I use some baller region is this what I should pick",
    "start": "1965780",
    "end": "1972190"
  },
  {
    "text": "but this may be a good idea but not so fast because let's go back to a3 pricing",
    "start": "1972190",
    "end": "1978830"
  },
  {
    "text": "for example and here on a street we have standard storage on plan 2.3 cents per",
    "start": "1978830",
    "end": "1987260"
  },
  {
    "text": "gigabyte we have infrequent access storage for 1.25 and the idea here is that you have",
    "start": "1987260",
    "end": "1997420"
  },
  {
    "text": "one line less of availability the SLA for infrequent access so this is the",
    "start": "1997420",
    "end": "2004600"
  },
  {
    "text": "best for backups and things that you don't need to be accessing like hot",
    "start": "2004600",
    "end": "2012640"
  },
  {
    "text": "online on your web app you only want to archive some data on s3 this and use it",
    "start": "2012640",
    "end": "2019240"
  },
  {
    "text": "for example for big data processing or batch tasks or things like this this may",
    "start": "2019240",
    "end": "2024310"
  },
  {
    "text": "be our backup this may be ideal and for cold data for data that you really hope",
    "start": "2024310",
    "end": "2031660"
  },
  {
    "text": "that you're never going to use such as data for auditing purposes or even back",
    "start": "2031660",
    "end": "2038680"
  },
  {
    "text": "very old backups you can use glacier and as this is the cheapest we have at point",
    "start": "2038680",
    "end": "2045490"
  },
  {
    "text": "four cents per gigabyte and the hard",
    "start": "2045490",
    "end": "2050500"
  },
  {
    "text": "thing here is that when we change this to two different regions - for example",
    "start": "2050500",
    "end": "2060550"
  },
  {
    "text": "in in Brazil this changes a bit so I'm",
    "start": "2060550",
    "end": "2065620"
  },
  {
    "text": "going to swap here for Brazil and you're",
    "start": "2065620",
    "end": "2070780"
  },
  {
    "text": "gonna see that we have a four cents point zero five price point in Brazil",
    "start": "2070780",
    "end": "2076870"
  },
  {
    "text": "and we don't have glacier yet so the",
    "start": "2076870",
    "end": "2082899"
  },
  {
    "text": "price and there beauty is different per region and this is the problem this is one of the",
    "start": "2082900",
    "end": "2089730"
  },
  {
    "text": "problems that called front soaps because if you hear if you have your content ash",
    "start": "2089730",
    "end": "2095839"
  },
  {
    "text": "around all these edge locations around the globe yeah you don't need to go back to the",
    "start": "2095839",
    "end": "2103680"
  },
  {
    "text": "region in every request because most of them should be coming directly from the edge locations so you can for example",
    "start": "2103680",
    "end": "2110640"
  },
  {
    "text": "use the that region in the US and use",
    "start": "2110640",
    "end": "2116940"
  },
  {
    "text": "the global network including the two edge locations in Brazil to deliver content at local latency so you would",
    "start": "2116940",
    "end": "2124140"
  },
  {
    "text": "have the best of both worlds the best of latencies and the best of core of costs except or on that first request so if",
    "start": "2124140",
    "end": "2132900"
  },
  {
    "text": "someone in Brazil asks for the content and it's not on the cache it would fetch",
    "start": "2132900",
    "end": "2138869"
  },
  {
    "text": "on the remote location but even though the network links between the edge",
    "start": "2138869",
    "end": "2145109"
  },
  {
    "text": "locations and the regions are more efficient than the internet links that you would have otherwise that could go",
    "start": "2145109",
    "end": "2152220"
  },
  {
    "text": "through the weirdest routes and this makes it much more efficient to go",
    "start": "2152220",
    "end": "2159240"
  },
  {
    "text": "through 12 front how much so you have to think that for every request that is",
    "start": "2159240",
    "end": "2167309"
  },
  {
    "text": "responded directly by CloudFront it will not reach our load balancer it",
    "start": "2167309",
    "end": "2172829"
  },
  {
    "text": "will not reach our instances or lambda functions or databases and this can save",
    "start": "2172829",
    "end": "2179250"
  },
  {
    "text": "a lot of money so I have a chart from a customer from the that can give us a",
    "start": "2179250",
    "end": "2188339"
  },
  {
    "text": "better idea of how this works let me just find it just second s",
    "start": "2188339",
    "end": "2197119"
  },
  {
    "text": "and",
    "start": "2200700",
    "end": "2203700"
  },
  {
    "text": "justice in a bit I have this file somewhere",
    "start": "2209310",
    "end": "2214800"
  },
  {
    "text": "I know so here it is so here is the bite",
    "start": "2214800",
    "end": "2226140"
  },
  {
    "text": "strength transferred to viewers graph from CloudFront from one customer this",
    "start": "2226140",
    "end": "2232020"
  },
  {
    "text": "is real production traffic thank you for strategic um pursue as a customer",
    "start": "2232020",
    "end": "2237480"
  },
  {
    "text": "that lands us this demonstration and here you can see they are sending to",
    "start": "2237480",
    "end": "2244260"
  },
  {
    "text": "their viewers about 7.5 gigs every day sometimes less sometimes more",
    "start": "2244260",
    "end": "2250320"
  },
  {
    "text": "but on average seven point five gig seven seven terabytes and a half in fact",
    "start": "2250320",
    "end": "2256500"
  },
  {
    "text": "so in the end of this month we had like",
    "start": "2256500",
    "end": "2262050"
  },
  {
    "text": "91 terabytes of traffic delivered in total right but you see that from misses",
    "start": "2262050",
    "end": "2271080"
  },
  {
    "text": "like the the cache misses that requests the traffic that actually were not found",
    "start": "2271080",
    "end": "2279480"
  },
  {
    "text": "in the cache and had to hit the back end it was 5% of that so 91 terabytes of",
    "start": "2279480",
    "end": "2289080"
  },
  {
    "text": "total traffic only five from misses that were not in the cache and had to go to",
    "start": "2289080",
    "end": "2295770"
  },
  {
    "text": "the origin so you can see this is a huge improvement you can serve I have seen",
    "start": "2295770",
    "end": "2305220"
  },
  {
    "text": "customers serving dozens of thousands on micro and small instances just because",
    "start": "2305220",
    "end": "2311700"
  },
  {
    "text": "most of the traffic doesn't even reach instances anyway and queries are cached",
    "start": "2311700",
    "end": "2317370"
  },
  {
    "text": "and if you think the caches in all layers from the CDN layer and in your",
    "start": "2317370",
    "end": "2324030"
  },
  {
    "text": "web server and your elastic cash or memcache D or rad is wherever using as a",
    "start": "2324030",
    "end": "2329310"
  },
  {
    "text": "database cache and if you optimize those layers of cash in your architecture this",
    "start": "2329310",
    "end": "2336000"
  },
  {
    "text": "can make this very big difference and this first layer the CDN is really",
    "start": "2336000",
    "end": "2341730"
  },
  {
    "text": "crucial for that or this so you you you get the benefits",
    "start": "2341730",
    "end": "2347460"
  },
  {
    "text": "of being hosted you don't pay for most of the requests for the request that",
    "start": "2347460",
    "end": "2354180"
  },
  {
    "text": "actually go to the origin it can be the most cost efficient origin for your app",
    "start": "2354180",
    "end": "2360960"
  },
  {
    "text": "so this may make again a big deal right",
    "start": "2360960",
    "end": "2366660"
  },
  {
    "text": "and so I hope this gives us an idea how to select the appropriate model how do",
    "start": "2366660",
    "end": "2375269"
  },
  {
    "text": "you make sure your capacity matches but does not substantially exceed what you",
    "start": "2375269",
    "end": "2381839"
  },
  {
    "text": "need so this is pretty important to understand and to demonstrate it I'm",
    "start": "2381839",
    "end": "2387269"
  },
  {
    "text": "gonna show on elastic Beanstalk so let's create a beanstalk app just to see how",
    "start": "2387269",
    "end": "2395730"
  },
  {
    "text": "we can adjust this so if you don't know elastic Beanstalk it's a very easy",
    "start": "2395730",
    "end": "2402239"
  },
  {
    "text": "surface to large applications you can will create a new one from the start",
    "start": "2402239",
    "end": "2407960"
  },
  {
    "text": "well I will just use the wizard and spin up a new Java app for example with the",
    "start": "2407960",
    "end": "2413910"
  },
  {
    "text": "full settings and this is all it takes it will spin up a new environment and",
    "start": "2413910",
    "end": "2419579"
  },
  {
    "text": "create everything I need and it makes very easy to change the configurations",
    "start": "2419579",
    "end": "2425759"
  },
  {
    "text": "for example changing instance types and things like this but for this cost",
    "start": "2425759",
    "end": "2431119"
  },
  {
    "text": "operation what we need to take a lot is scaling so really try to understand your",
    "start": "2431119",
    "end": "2437670"
  },
  {
    "text": "application behavior and pick the appropriate trigger if your app is CPU",
    "start": "2437670",
    "end": "2443190"
  },
  {
    "text": "intensive or memory intensive or if you have latency you can create monitors and",
    "start": "2443190",
    "end": "2449700"
  },
  {
    "text": "auto scale for that but if you have a seasonal app you can also trigger",
    "start": "2449700",
    "end": "2455539"
  },
  {
    "text": "time-based scale scheduler scheduling and specify in which periods of the day",
    "start": "2455539",
    "end": "2462720"
  },
  {
    "text": "or with recurrent schedule with cron expressions you can spin up and spin",
    "start": "2462720",
    "end": "2468119"
  },
  {
    "text": "down instances as you need them excuse me",
    "start": "2468119",
    "end": "2473400"
  },
  {
    "text": "and this is how you can adjust if you are",
    "start": "2473400",
    "end": "2480910"
  },
  {
    "text": "handling services yourself like auto-scaling built with triggers or",
    "start": "2480910",
    "end": "2486069"
  },
  {
    "text": "time-based scaling and of course a much better idea would be to adapt to server",
    "start": "2486069",
    "end": "2492160"
  },
  {
    "text": "less and lat AWS take care of it as events Bowl these functions are executed",
    "start": "2492160",
    "end": "2498339"
  },
  {
    "text": "and you don't even need to care about the underlying instances and that's",
    "start": "2498339",
    "end": "2503549"
  },
  {
    "text": "probably much more and more efficient than you would be able to do yourself so",
    "start": "2503549",
    "end": "2509410"
  },
  {
    "text": "this is the idea for answering this",
    "start": "2509410",
    "end": "2514499"
  },
  {
    "text": "matching costs ok so the next the next",
    "start": "2514499",
    "end": "2519969"
  },
  {
    "text": "part is this is about has been about cost planning so we've been talking",
    "start": "2519969",
    "end": "2526390"
  },
  {
    "text": "about budgeting we saw the how to use the calculator to create budgets and how",
    "start": "2526390",
    "end": "2533769"
  },
  {
    "text": "to compare prices across services and especially how to leverage the global",
    "start": "2533769",
    "end": "2540519"
  },
  {
    "text": "infrastructure and the CDN and the network services to reduce costs but we",
    "start": "2540519",
    "end": "2546519"
  },
  {
    "text": "have to also think on the other side of this how to measure expenses and how to",
    "start": "2546519",
    "end": "2552999"
  },
  {
    "text": "take have visibility into those accounts and first considering their data",
    "start": "2552999",
    "end": "2560409"
  },
  {
    "text": "transfer charges as we saw on the we discussed this the the kinds of network",
    "start": "2560409",
    "end": "2567099"
  },
  {
    "text": "traffic and the network traffic costs and if we take a look at the cloud front",
    "start": "2567099",
    "end": "2573519"
  },
  {
    "text": "costs ones one special thing about cold front pricing is it is the only service",
    "start": "2573519",
    "end": "2584140"
  },
  {
    "text": "that you have reserved and volume",
    "start": "2584140",
    "end": "2589719"
  },
  {
    "text": "discounts for network traffic so here you can see the the transfer costs on",
    "start": "2589719",
    "end": "2596140"
  },
  {
    "text": "cold front per region and you can see that for high volumes of traffic we have",
    "start": "2596140",
    "end": "2603369"
  },
  {
    "text": "significant discounts it's the cheapest service river traffic and you can reserve",
    "start": "2603369",
    "end": "2610780"
  },
  {
    "text": "capacity so if you need 10 terabytes per month for example you can make a do n",
    "start": "2610780",
    "end": "2617950"
  },
  {
    "text": "commit to that in advance and we offer volume deals for that so if you have",
    "start": "2617950",
    "end": "2624119"
  },
  {
    "text": "high volumes I highly recommend everyone to go to confront and even if you don't",
    "start": "2624119",
    "end": "2631930"
  },
  {
    "text": "just to think about it from a security standpoint just to think that an",
    "start": "2631930",
    "end": "2637540"
  },
  {
    "text": "attacker for example on the Doss would have to take down the whole network of",
    "start": "2637540",
    "end": "2643740"
  },
  {
    "text": "edge locations before reaching my my instances it's it's a no-brainer use",
    "start": "2643740",
    "end": "2653770"
  },
  {
    "text": "cold front that's it and well this is it",
    "start": "2653770",
    "end": "2660850"
  },
  {
    "text": "for data transfer charges and how you're monitoring your usage and spending so",
    "start": "2660850",
    "end": "2668230"
  },
  {
    "text": "one key aspect here is a trusted advisor",
    "start": "2668230",
    "end": "2674109"
  },
  {
    "text": "we've been free trusted advisor in other episodes if you go to support and I'm",
    "start": "2674109",
    "end": "2680380"
  },
  {
    "text": "sorry but this is just for those of you who have premium support so check if you",
    "start": "2680380",
    "end": "2686800"
  },
  {
    "text": "have business support plan and this costs about 100 bucks per month and I",
    "start": "2686800",
    "end": "2691990"
  },
  {
    "text": "highly recommend it you have better and faster answers and better highly check out the page for",
    "start": "2691990",
    "end": "2700510"
  },
  {
    "text": "more information but the the killer feature for me is trusted advisor because you have",
    "start": "2700510",
    "end": "2707160"
  },
  {
    "text": "automatic cost optimization tips so if we go to my account here I have checks",
    "start": "2707160",
    "end": "2714609"
  },
  {
    "text": "being automatically executed and I can see that I could be saving 200 bucks",
    "start": "2714609",
    "end": "2722470"
  },
  {
    "text": "here because I have easy to instances that are not being utilized and it even",
    "start": "2722470",
    "end": "2730090"
  },
  {
    "text": "shows me what are they AWS instances that are not being utilized purely I",
    "start": "2730090",
    "end": "2738040"
  },
  {
    "text": "have other utilize underutilized EBS volumes and you can our DSS you",
    "start": "2738040",
    "end": "2746740"
  },
  {
    "text": "check us for everything so make a habit of going through trusted advisor and",
    "start": "2746740",
    "end": "2752430"
  },
  {
    "text": "checking at least understanding why it's complaining and saying that you probably",
    "start": "2752430",
    "end": "2759280"
  },
  {
    "text": "could use a smaller instance type or tune your auto scanning groups and things like this and another important",
    "start": "2759280",
    "end": "2766540"
  },
  {
    "text": "tool to understand spending is your bidding dashboard so in your billing",
    "start": "2766540",
    "end": "2772630"
  },
  {
    "text": "dashboard we can see smarts monthly spanned by service spent summaries",
    "start": "2772630",
    "end": "2780100"
  },
  {
    "text": "create budgets see tags and perform cost",
    "start": "2780100",
    "end": "2785440"
  },
  {
    "text": "analytics on our accounts and one device that I recommend everyone to Turney is",
    "start": "2785440",
    "end": "2793060"
  },
  {
    "text": "billing alerts so I have to peel alerts here I will create one more",
    "start": "2793060",
    "end": "2798160"
  },
  {
    "text": "this will show everyone how to do it so just create an alarm and get it on",
    "start": "2798160",
    "end": "2805360"
  },
  {
    "text": "billing so I will just say that when I",
    "start": "2805360",
    "end": "2811930"
  },
  {
    "text": "have unexpected ethnic charges of I don't know how much tiny bucks per month",
    "start": "2811930",
    "end": "2819520"
  },
  {
    "text": "let's say that call me on planning and when I go over",
    "start": "2819520",
    "end": "2829900"
  },
  {
    "text": "there is amount I will send on this to a new list to Herman J at amazon.com for",
    "start": "2829900",
    "end": "2838570"
  },
  {
    "text": "example and this is the admins the cost",
    "start": "2838570",
    "end": "2843670"
  },
  {
    "text": "admins and this is all it takes so I have to confirm on my email address",
    "start": "2843670",
    "end": "2852040"
  },
  {
    "text": "but as soon as I do I will be notified every time that I go over this amount",
    "start": "2852040",
    "end": "2858340"
  },
  {
    "text": "and it is all it takes and another very important thing is to make sure that",
    "start": "2858340",
    "end": "2865480"
  },
  {
    "text": "you're using tags so in every part of AWS infrastructure you can set tags and",
    "start": "2865480",
    "end": "2874420"
  },
  {
    "text": "hey I need this to be to be different let's see I cannot add it after they are",
    "start": "2874420",
    "end": "2882519"
  },
  {
    "text": "and they're done let let me see if I can do this on their ec2 instance directly so here let's see if I have have one",
    "start": "2882519",
    "end": "2895210"
  },
  {
    "text": "instance Ronnie and I can go to tags and",
    "start": "2895210",
    "end": "2900569"
  },
  {
    "text": "add tags and the idea here is that I can say this is from the posts enter any key",
    "start": "2900569",
    "end": "2909789"
  },
  {
    "text": "value pair is all right so that well or for example that the owner of this is",
    "start": "2909789",
    "end": "2918400"
  },
  {
    "text": "Giulio or the environment is fraud and",
    "start": "2918400",
    "end": "2923440"
  },
  {
    "text": "then you can see on the on the cost allocation that reports you can activate",
    "start": "2923440",
    "end": "2932200"
  },
  {
    "text": "here on my Mona I am user but I would be able to come to",
    "start": "2932200",
    "end": "2938559"
  },
  {
    "text": "fetch those twos data and see how am i doing poor owner or per cost center or",
    "start": "2938559",
    "end": "2947349"
  },
  {
    "text": "per environment and break my bill as a trace and of course on the cost Explorer",
    "start": "2947349",
    "end": "2953529"
  },
  {
    "text": "we can see the monthly spent by service by account by view and dive deeper and",
    "start": "2953529",
    "end": "2961470"
  },
  {
    "text": "understand how much its service is costing and filter by surface by account",
    "start": "2961470",
    "end": "2967660"
  },
  {
    "text": "by region and and group or even download this data into Excel or in choose Apache",
    "start": "2967660",
    "end": "2976119"
  },
  {
    "text": "spark or whatever our or whatever you want to use to analyze or spend so this",
    "start": "2976119",
    "end": "2983650"
  },
  {
    "text": "is a that make sure you use the called the billing dashboard and here is where",
    "start": "2983650",
    "end": "2990819"
  },
  {
    "text": "you can see all this information and there are certainly many partners in",
    "start": "2990819",
    "end": "2996910"
  },
  {
    "text": "this space so with cost tools and things that you can run one simple one just as",
    "start": "2996910",
    "end": "3004290"
  },
  {
    "text": "an example is Netflix ice so Netflix ice is an open-source project to track usage",
    "start": "3004290",
    "end": "3013380"
  },
  {
    "text": "and see how a different cost dashboard",
    "start": "3013380",
    "end": "3023850"
  },
  {
    "text": "lets say so Netflix ice I guess so",
    "start": "3023850",
    "end": "3031920"
  },
  {
    "text": "it's tivity ice for hands now so we will give you like this kind of feel this",
    "start": "3031920",
    "end": "3038100"
  },
  {
    "text": "kind of users dashboard so it will just parse the same CSV the same data that we",
    "start": "3038100",
    "end": "3045390"
  },
  {
    "text": "are throwing in your buckets and just see it from there right and be the",
    "start": "3045390",
    "end": "3052770"
  },
  {
    "text": "Commission resources that we need to stop or they're temporarily not needed and this is pretty important and there",
    "start": "3052770",
    "end": "3060480"
  },
  {
    "text": "are many ways to do it automatically one that I highly recommend is the janitor",
    "start": "3060480",
    "end": "3065880"
  },
  {
    "text": "monkey so a net fluid Netflix has this open source monkey is to test for",
    "start": "3065880",
    "end": "3072660"
  },
  {
    "text": "resiliency and test for fault tolerance and one of the least known BOTS they",
    "start": "3072660",
    "end": "3081420"
  },
  {
    "text": "have is the janitor monkey so let's search for Netflix and here's the here's",
    "start": "3081420",
    "end": "3089910"
  },
  {
    "text": "the idea it can look for resources that are not being utilized and just queue",
    "start": "3089910",
    "end": "3096420"
  },
  {
    "text": "them and especially if you're using containers for example and you have some",
    "start": "3096420",
    "end": "3102270"
  },
  {
    "text": "flexibility on the underlying hosts as horsepower and divider containers as in",
    "start": "3102270",
    "end": "3110520"
  },
  {
    "text": "feet you can use you can just for example scale up move workloads to new",
    "start": "3110520",
    "end": "3116760"
  },
  {
    "text": "services and shut down containers and have the janitor monkey automatically",
    "start": "3116760",
    "end": "3122580"
  },
  {
    "text": "clean the instances and things like this or even other resources you know and",
    "start": "3122580",
    "end": "3128280"
  },
  {
    "text": "this is just an idea you can probably automate with the AWS tools and SDKs should be the same and",
    "start": "3128280",
    "end": "3135680"
  },
  {
    "text": "you again use auto-scaling groups not only to skill up but also to scale down and",
    "start": "3135680",
    "end": "3142619"
  },
  {
    "text": "this would be how to the Commission resource is that you no longer need one",
    "start": "3142619",
    "end": "3148660"
  },
  {
    "text": "very special case on this is that I'm test so if you think about that and test it's not 24/7 so if you only use that a",
    "start": "3148660",
    "end": "3158230"
  },
  {
    "text": "test for the weak base and for the weak work hours your you dummy you really can",
    "start": "3158230",
    "end": "3167309"
  },
  {
    "text": "save a lot of money just for I'm shutting it down on the nights and weekends",
    "start": "3167309",
    "end": "3172420"
  },
  {
    "text": "so the non-working hours can be one half",
    "start": "3172420",
    "end": "3178210"
  },
  {
    "text": "to two thirds of the time and two days a week is also significant percentage that",
    "start": "3178210",
    "end": "3185319"
  },
  {
    "text": "money you can not spend just by sitting chilling down that in past when they are",
    "start": "3185319",
    "end": "3190960"
  },
  {
    "text": "not being musing right what access",
    "start": "3190960",
    "end": "3196900"
  },
  {
    "text": "controls and procedures you have to place and burn at the brass usage and",
    "start": "3196900",
    "end": "3202200"
  },
  {
    "text": "here is two different services on that a depress config and it was called trail",
    "start": "3202200",
    "end": "3210480"
  },
  {
    "text": "so it address config is a way to monitor the configuration and inventory of",
    "start": "3210480",
    "end": "3217900"
  },
  {
    "text": "resources so here you're gonna get and notified every time a resource changes",
    "start": "3217900",
    "end": "3225549"
  },
  {
    "text": "and the configuration changes if the network changes and you can make sure",
    "start": "3225549",
    "end": "3231539"
  },
  {
    "text": "that's adequate to your cost constraints and only the blue ass call trail you get",
    "start": "3231539",
    "end": "3240130"
  },
  {
    "text": "not the extinct vision the defense vision you have one entry one Lord for",
    "start": "3240130",
    "end": "3247779"
  },
  {
    "text": "every eight blasts API call your apps and users do so you get a record of",
    "start": "3247779",
    "end": "3254019"
  },
  {
    "text": "everything that happens on your account and you could possibly reconstruct this",
    "start": "3254019",
    "end": "3260440"
  },
  {
    "text": "into called config but you don't need you have Amazon doing",
    "start": "3260440",
    "end": "3266600"
  },
  {
    "text": "automatically but if you use AWS config for the config view and the breast call",
    "start": "3266600",
    "end": "3272960"
  },
  {
    "text": "trail for the trail for the advanced view this would be make it easy to",
    "start": "3272960",
    "end": "3278240"
  },
  {
    "text": "control usage because those resources can trigger lambda functions so you can",
    "start": "3278240",
    "end": "3285620"
  },
  {
    "text": "trigger a limit the function every time a new instance is a spin up or every time all these scaling group changes or",
    "start": "3285620",
    "end": "3293650"
  },
  {
    "text": "anything that's cost sensitive and you want to know about it for example if you",
    "start": "3293650",
    "end": "3300080"
  },
  {
    "text": "have on one particular or the skinning group that's growing too big or for",
    "start": "3300080",
    "end": "3306650"
  },
  {
    "text": "lambda functions that are growing getting near your limit and things like this you can understand it in real time",
    "start": "3306650",
    "end": "3315200"
  },
  {
    "text": "by triggering those lambda functions in response so this is this is how you",
    "start": "3315200",
    "end": "3322880"
  },
  {
    "text": "govern the and of doing this in real time you have to always be looking into",
    "start": "3322880",
    "end": "3331640"
  },
  {
    "text": "new services and on AWS slash new because it changes a lot especially with",
    "start": "3331640",
    "end": "3340610"
  },
  {
    "text": "cost reductions so we've done many of those for these years and they are",
    "start": "3340610",
    "end": "3349010"
  },
  {
    "text": "always up on the blog the last one was middle of this year but here you can see that we are frequently reducing the cost",
    "start": "3349010",
    "end": "3357730"
  },
  {
    "text": "and this is part of this AWS wheel of costs right the more we drive down costs",
    "start": "3357730",
    "end": "3366530"
  },
  {
    "text": "by efficiency and scale and automation we grow and get more efficient and",
    "start": "3366530",
    "end": "3373460"
  },
  {
    "text": "handling.this and the more and we pass this to customers through a cost reductions and when we do that we",
    "start": "3373460",
    "end": "3381710"
  },
  {
    "text": "attract lots more of customers and become work becoming more attractive we need to get more scale and reduced costs",
    "start": "3381710",
    "end": "3389750"
  },
  {
    "text": "and spinning this wheel over and over again and I guess this is why this is",
    "start": "3389750",
    "end": "3396380"
  },
  {
    "text": "how the code works and it can see how it's ate so much so much",
    "start": "3396380",
    "end": "3402260"
  },
  {
    "text": "money right I guess that this is pretty",
    "start": "3402260",
    "end": "3407690"
  },
  {
    "text": "much it I hope that next time we're going to talk about operational",
    "start": "3407690",
    "end": "3413600"
  },
  {
    "text": "excellence and just as a takeaway",
    "start": "3413600",
    "end": "3419200"
  },
  {
    "text": "probably the most important tips let's go over the the take over let's see the",
    "start": "3419200",
    "end": "3426920"
  },
  {
    "text": "the three most important things in my opinion would be number one use",
    "start": "3426920",
    "end": "3432880"
  },
  {
    "text": "CloudFront so on AWS Amazon products we always remember this map you can have",
    "start": "3432880",
    "end": "3440360"
  },
  {
    "text": "local latency and the best latency and the best costs using cold front and",
    "start": "3440360",
    "end": "3446570"
  },
  {
    "text": "offload your backends and be more secure and this is the best cost advice I can",
    "start": "3446570",
    "end": "3452390"
  },
  {
    "text": "have the second is picking up the most effective model of cost so if you can",
    "start": "3452390",
    "end": "3459680"
  },
  {
    "text": "use block storage in several file systems if you can go server less instead of servers and if you're doing",
    "start": "3459680",
    "end": "3466520"
  },
  {
    "text": "servers use with a composition of spot reserve it and on-demand to make sure",
    "start": "3466520",
    "end": "3472700"
  },
  {
    "text": "you only pay for what you're using and the third would be to monitor your costs",
    "start": "3472700",
    "end": "3480800"
  },
  {
    "text": "and take advantage of trusted advisor and the beeping dashboard to help you",
    "start": "3480800",
    "end": "3489640"
  },
  {
    "text": "and everyone in the company especially be as actives to understand how much",
    "start": "3489640",
    "end": "3495710"
  },
  {
    "text": "money cost the grass is serving them and as a bonus a fourth the the thing that I",
    "start": "3495710",
    "end": "3504110"
  },
  {
    "text": "believe saves the the most is in human terms for example in RDS we were",
    "start": "3504110",
    "end": "3511550"
  },
  {
    "text": "speaking earlier about Maury AZ just or for example machine learning is",
    "start": "3511550",
    "end": "3518810"
  },
  {
    "text": "even better you don't need to be a PhD machine learning or higher one just",
    "start": "3518810",
    "end": "3524510"
  },
  {
    "text": "cheaper data and have predictions so if this is all you need you can use the higher levels of management services",
    "start": "3524510",
    "end": "3531690"
  },
  {
    "text": "go on adding value to your app but if you care enough to go deeper you can do",
    "start": "3531690",
    "end": "3538140"
  },
  {
    "text": "a spark on EMR you can do FPGA you can type as to the lower levels for sure but",
    "start": "3538140",
    "end": "3546530"
  },
  {
    "text": "the more you use the extract servers and the management services the more",
    "start": "3546530",
    "end": "3552289"
  },
  {
    "text": "cost-efficient your architecture is going to be so this is it form cost",
    "start": "3552289",
    "end": "3560609"
  },
  {
    "text": "optimization it was a pretty quick broadcast but those are really the the",
    "start": "3560609",
    "end": "3567329"
  },
  {
    "text": "most important things and next time see you for operational excellence and we're",
    "start": "3567329",
    "end": "3575640"
  },
  {
    "text": "gonna see how to be unbreakable okay all",
    "start": "3575640",
    "end": "3581190"
  },
  {
    "text": "right thank you guys if you have any questions or anything at all that you",
    "start": "3581190",
    "end": "3586410"
  },
  {
    "text": "would like to see on the future broadcast in this channel please ping me",
    "start": "3586410",
    "end": "3591420"
  },
  {
    "text": "on teetered or here on chime any time let me just paste you mine mjm ephemeral",
    "start": "3591420",
    "end": "3601890"
  },
  {
    "text": "like this on twitter or here and from NJ",
    "start": "3601890",
    "end": "3607260"
  },
  {
    "text": "at amazon oops at comm anytime i just let us know what",
    "start": "3607260",
    "end": "3616289"
  },
  {
    "text": "you think and what she would like to see on this new stocks and we are here to",
    "start": "3616289",
    "end": "3622230"
  },
  {
    "text": "help you guys be successful with the blasts keep to me thank you very much",
    "start": "3622230",
    "end": "3627539"
  },
  {
    "text": "for watching see you next time",
    "start": "3627539",
    "end": "3631010"
  }
]