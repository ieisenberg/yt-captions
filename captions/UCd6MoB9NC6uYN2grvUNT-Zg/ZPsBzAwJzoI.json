[
  {
    "start": "0",
    "end": "32000"
  },
  {
    "text": "Welcome to 'This is My Architecture'.",
    "start": "6644",
    "end": "8515"
  },
  {
    "text": "My name is Christian\nand today I am joined by \nJean-Paul from NAGRA.",
    "start": "8515",
    "end": "11861"
  },
  {
    "text": "Welcome Jean-Paul. ",
    "start": "11861",
    "end": "13312"
  },
  {
    "text": "Hello Christian, thanks for having me.",
    "start": "13312",
    "end": "15099"
  },
  {
    "text": "Tell us a little bit about NAGRA.",
    "start": "15099",
    "end": "17107"
  },
  {
    "text": "NAGRA provides security \nand multiscreen user experience solutions",
    "start": "17107",
    "end": "21448"
  },
  {
    "text": "for the monetization of digital media. ",
    "start": "21448",
    "end": "23800"
  },
  {
    "text": "I am in charge of the NexGuard B2C team \nthat works on forensic watermarking products,",
    "start": "23800",
    "end": "29619"
  },
  {
    "text": "including on demand and live that we will discuss today.",
    "start": "29619",
    "end": "32873"
  },
  {
    "start": "32000",
    "end": "57000"
  },
  {
    "text": "Very good. \nSo maybe you want to quickly explain what watermarking is.",
    "start": "32873",
    "end": "36696"
  },
  {
    "text": "Yes, so watermarking is a process \nof adding an imperceptible mark ",
    "start": "36696",
    "end": "41314"
  },
  {
    "text": "to audio or video contents. ",
    "start": "41314",
    "end": "43513"
  },
  {
    "text": "Its goal is to make it traceable",
    "start": "43513",
    "end": "45740"
  },
  {
    "text": "such that when it leaks, \nit can be traced back to where it came from.",
    "start": "45740",
    "end": "49352"
  },
  {
    "text": "A typical example is around piracy \nas seen for the movie or sports industry.",
    "start": "49352",
    "end": "54861"
  },
  {
    "text": "With other industries they face similar challenges.",
    "start": "54861",
    "end": "57264"
  },
  {
    "start": "57000",
    "end": "227000"
  },
  {
    "text": "I'm curious to learn more about this architecture. ",
    "start": "57874",
    "end": "59906"
  },
  {
    "text": "Maybe you can start walking us through\nand what we have here. ",
    "start": "59906",
    "end": "62700"
  },
  {
    "text": "Yes, so the architecture consists of different blocks. ",
    "start": "62701",
    "end": "65450"
  },
  {
    "text": "The first block is the watermark preprocessing. ",
    "start": "65451",
    "end": "68761"
  },
  {
    "text": "In this part we create two variants of the content; A and B.",
    "start": "68762",
    "end": "74981"
  },
  {
    "text": "These variants, they are visually identical,\nbut they contain a distinct watermark. ",
    "start": "74981",
    "end": "80571"
  },
  {
    "text": "The second part is the watermark embedding.",
    "start": "81515",
    "end": "85145"
  },
  {
    "text": "At that part we leverage the fact that content, \nwhen distributed over the internet ",
    "start": "85145",
    "end": "90757"
  },
  {
    "text": "is typically chunked in small pieces of like two seconds. ",
    "start": "90757",
    "end": "94639"
  },
  {
    "text": "For each piece we select either the A or the B variants. ",
    "start": "94639",
    "end": "98399"
  },
  {
    "text": "Over time this builds a sequence \nthat's possible to uniquely identify the session. ",
    "start": "98399",
    "end": "103587"
  },
  {
    "text": "These two elements, \nwe typically deploy that in a customer environment. ",
    "start": "103587",
    "end": "109056"
  },
  {
    "text": "We have some CloudFormation to make that very easy.",
    "start": "109056",
    "end": "111710"
  },
  {
    "text": "There is a third component that is Detection Service. ",
    "start": "111710",
    "end": "115011"
  },
  {
    "text": "This is really a service offered by NAGRA ",
    "start": "115011",
    "end": "118222"
  },
  {
    "text": "and this allows you to provide content to the service",
    "start": "118222",
    "end": "122781"
  },
  {
    "text": "and extract the A/B sequence inserted.",
    "start": "122781",
    "end": "124894"
  },
  {
    "text": "Can you please explain how you identify \nthese different players with these A/B versions?",
    "start": "124894",
    "end": "130276"
  },
  {
    "text": "So let me give you an example. ",
    "start": "130276",
    "end": "131979"
  },
  {
    "text": "Let's say we have two players, \nfor example a mobile device, your PC or connected TV.",
    "start": "131979",
    "end": "137763"
  },
  {
    "text": "They will first connect to a CMS,\ncontent management system, ",
    "start": "137763",
    "end": "141195"
  },
  {
    "text": "and this content management system \nwill actually grant access ",
    "start": "141195",
    "end": "144695"
  },
  {
    "text": "and the player will select a content to watch.",
    "start": "144695",
    "end": "147940"
  },
  {
    "text": "At this point the content management system\nwill also select the A/B sequence for each player",
    "start": "147940",
    "end": "153150"
  },
  {
    "text": "that will be used for that session. ",
    "start": "153150",
    "end": "155847"
  },
  {
    "text": "For example, the first player gets A-B-A-B,",
    "start": "155847",
    "end": "158897"
  },
  {
    "text": "the second player gets A-B-B-A.",
    "start": "158897",
    "end": "162274"
  },
  {
    "text": "This information is provided as a token ",
    "start": "162274",
    "end": "164779"
  },
  {
    "text": "and will go into the request to CloudFront.",
    "start": "164779",
    "end": "169346"
  },
  {
    "text": "For each request, each segment, \nCloudFront will use the Lambda@Edge ",
    "start": "169346",
    "end": "174172"
  },
  {
    "text": "to insert a sequence that is encoded in that token.",
    "start": "174172",
    "end": "178000"
  },
  {
    "text": "Okay, so by using CloudFront and Lambda@Edge",
    "start": "178706",
    "end": "182357"
  },
  {
    "text": "you select which sequences of these A/B versions",
    "start": "182357",
    "end": "185418"
  },
  {
    "text": "are being delivered to the different players to identify them.",
    "start": "185419",
    "end": "188206"
  },
  {
    "text": "So why did you choose this package\nof CloudFront and Lambda@Edge",
    "start": "188206",
    "end": "192133"
  },
  {
    "text": "and what are the benefits of that?",
    "start": "192133",
    "end": "193889"
  },
  {
    "text": "We were looking for a scalable solution",
    "start": "193889",
    "end": "196001"
  },
  {
    "text": "to apply this A/B sequence during the screening session.",
    "start": "196001",
    "end": "199196"
  },
  {
    "text": "Lambda@Edge was a good fit \nand it also allowed us to leverage the CDN caching.",
    "start": "199196",
    "end": "204086"
  },
  {
    "text": "Other solutions like container \nor regular Lambda we basically not fast enough ",
    "start": "204086",
    "end": "208563"
  },
  {
    "text": "because they were not close enough to the Edge.",
    "start": "208563",
    "end": "211013"
  },
  {
    "text": "Another thing is that the Lambda@Edge \nwe have a, basically, very efficient execution ",
    "start": "211758",
    "end": "217364"
  },
  {
    "text": "so that we add also minimal latency \nwhich is also great for live content.",
    "start": "217364",
    "end": "221927"
  },
  {
    "text": "For that one we're also looking now into \nCloudFront Functions that will scale even better than Lambda@Edge.",
    "start": "221927",
    "end": "227094"
  },
  {
    "start": "227000",
    "end": "284000"
  },
  {
    "text": "I can imagine that latency is a very critical factor\nalso in regards to user experience here. ",
    "start": "227094",
    "end": "232875"
  },
  {
    "text": "We are having DynamoDB in this space over here ",
    "start": "232875",
    "end": "237238"
  },
  {
    "text": "so maybe you can tell us a little bit \nwhat you're using it for. ",
    "start": "237238",
    "end": "240721"
  },
  {
    "text": "So, DynamoDB is actually for a \nvery specific feature that we call blacklisting. ",
    "start": "240721",
    "end": "245008"
  },
  {
    "text": "The idea is that when the detection service\n finds basically a certain sequence, ",
    "start": "245009",
    "end": "250688"
  },
  {
    "text": "for example A-B-A-B, \nit can decide to populate DynamoDB with the session information.",
    "start": "250688",
    "end": "256656"
  },
  {
    "text": "At that point, the Lambda@Edge \nwhen it is queryingg the database,",
    "start": "256656",
    "end": "262669"
  },
  {
    "text": "when it's processing the request, \ncan actually decide to block a certain session. ",
    "start": "262669",
    "end": "266818"
  },
  {
    "text": "So as a result, the play-out for that player, \nin this case player one, would stop. ",
    "start": "266818",
    "end": "272363"
  },
  {
    "text": "So it terminates the session. ",
    "start": "272364",
    "end": "274422"
  },
  {
    "text": "So you have a mechanism to identify \nif a breach has happened ",
    "start": "274422",
    "end": "278543"
  },
  {
    "text": "but you can also shut down the session \nonce it has been identified. ",
    "start": "278543",
    "end": "282258"
  },
  {
    "text": "-Exactly.\n-Perfect. ",
    "start": "282258",
    "end": "283487"
  },
  {
    "text": "So, we've been learning about how you \ndistribute the content out to the different players ",
    "start": "283487",
    "end": "287884"
  },
  {
    "start": "284000",
    "end": "429000"
  },
  {
    "text": "and the different end users.",
    "start": "287884",
    "end": "289957"
  },
  {
    "text": "How do you prepare that content \nwith these A and B versions?",
    "start": "289957",
    "end": "293218"
  },
  {
    "text": "So the content preparation \ndepends a little bit on the type of content, ",
    "start": "293721",
    "end": "296896"
  },
  {
    "text": "if it's VOD - on demand or if it's live.",
    "start": "296896",
    "end": "299531"
  },
  {
    "text": "In principal it's very similar \nand from CloudFront point of view it's identical. ",
    "start": "299531",
    "end": "304222"
  },
  {
    "text": "If we look at VOD, the input is actually a file \nthat will go into an S3 bucket. ",
    "start": "304222",
    "end": "310724"
  },
  {
    "text": "This file will then go into MediaConvert.",
    "start": "310724",
    "end": "315038"
  },
  {
    "text": "MediaConvert is actually the part where \nthe A/B watermark with the variants are created.",
    "start": "315038",
    "end": "320582"
  },
  {
    "text": "The output of MediaConvert will be those A and B versions.",
    "start": "320582",
    "end": "325160"
  },
  {
    "text": "This goes into the S3 bucket \nthat then be the origin to CloudFront. ",
    "start": "325160",
    "end": "331104"
  },
  {
    "text": "Of course there are different options.",
    "start": "331104",
    "end": "334012"
  },
  {
    "text": "You could use some scripting \nor FFMPEG.",
    "start": "334012",
    "end": "336878"
  },
  {
    "text": "But the benefit of this solution \nis that it's based in many services ",
    "start": "336878",
    "end": "340248"
  },
  {
    "text": "that are easier to deploy and use. ",
    "start": "340248",
    "end": "342667"
  },
  {
    "text": "And also, because you mentioned, \nyou're deploying this via CloudFormation",
    "start": "342667",
    "end": "345610"
  },
  {
    "text": "automated into the customer accounts \nthat's maybe also an easier approach ",
    "start": "345610",
    "end": "349623"
  },
  {
    "text": "to use those managed services \ninstead of having a complex set-up. ",
    "start": "349623",
    "end": "352810"
  },
  {
    "text": "Exactly. ",
    "start": "352810",
    "end": "353858"
  },
  {
    "text": "So, that was for the video on demand content,\nhow does it work for live?",
    "start": "353858",
    "end": "357152"
  },
  {
    "text": "For live it's very similar\nbut the input will be live feed. ",
    "start": "357152",
    "end": "361346"
  },
  {
    "text": "So it will go to MediaConnect \nthat will split the feed into two.",
    "start": "361346",
    "end": "366851"
  },
  {
    "text": "And then MediaLive where the encoding takes place.",
    "start": "366851",
    "end": "369953"
  },
  {
    "text": "We have two channels. ",
    "start": "369953",
    "end": "371256"
  },
  {
    "text": "One channel will be the A variant, \nand the other channel will be the B variant. ",
    "start": "371256",
    "end": "375093"
  },
  {
    "text": "So it's here where we insert the watermark. ",
    "start": "375093",
    "end": "378203"
  },
  {
    "text": "Then MediaPackage will prepare it for internet distribution.",
    "start": "378204",
    "end": "381496"
  },
  {
    "text": "It will then be the origin for the CloudFront. ",
    "start": "381496",
    "end": "385202"
  },
  {
    "text": "Great, so that is very interesting. ",
    "start": "386708",
    "end": "389090"
  },
  {
    "text": "What are your plans for the future \nor how are you evolving this architecture?",
    "start": "389090",
    "end": "393682"
  },
  {
    "text": "We are currently looking into data analytics\nto identify early on if a session is used for piracy.",
    "start": "393683",
    "end": "399761"
  },
  {
    "text": "For example, a session that doesn't terminate \nand is a live channel continuously, ",
    "start": "399761",
    "end": "403266"
  },
  {
    "text": "that's suspicious. ",
    "start": "403266",
    "end": "405016"
  },
  {
    "text": "Another area is audio watermarking,",
    "start": "405016",
    "end": "409209"
  },
  {
    "text": "to not only protect the video content \nbut to offer the same for the audio. ",
    "start": "409209",
    "end": "412930"
  },
  {
    "text": "Very very interesting. ",
    "start": "412930",
    "end": "414953"
  },
  {
    "text": "Thank you so much Jean-Paul \nfor sharing this architecture with us today.",
    "start": "414953",
    "end": "418564"
  },
  {
    "text": "Thanks again for having me. ",
    "start": "418564",
    "end": "420100"
  },
  {
    "text": "And thank you for watching 'This is My Architecture'.",
    "start": "420100",
    "end": "422666"
  }
]