[
  {
    "text": "[Music]",
    "start": "0",
    "end": "2560"
  },
  {
    "text": "hello",
    "start": "2560",
    "end": "3120"
  },
  {
    "text": "and thank you for watching this video on",
    "start": "3120",
    "end": "4720"
  },
  {
    "text": "how to securely store.net application",
    "start": "4720",
    "end": "6799"
  },
  {
    "text": "configuration in secrets",
    "start": "6799",
    "end": "8639"
  },
  {
    "text": "in the aws systems manager parameter",
    "start": "8639",
    "end": "10639"
  },
  {
    "text": "store",
    "start": "10639",
    "end": "11679"
  },
  {
    "text": "my name is carlos santos and i'm a",
    "start": "11679",
    "end": "13440"
  },
  {
    "text": "microsoft specialist solutions architect",
    "start": "13440",
    "end": "15440"
  },
  {
    "text": "at aws in this video we'll change an",
    "start": "15440",
    "end": "19119"
  },
  {
    "text": "existing asp.net core",
    "start": "19119",
    "end": "20720"
  },
  {
    "text": "mvc application and create a brand new",
    "start": "20720",
    "end": "23039"
  },
  {
    "text": "aws lambda function",
    "start": "23039",
    "end": "24640"
  },
  {
    "text": "and have them both use parameter store",
    "start": "24640",
    "end": "26400"
  },
  {
    "text": "for their configuration information",
    "start": "26400",
    "end": "28800"
  },
  {
    "text": "aw assistance manager parameter store",
    "start": "28800",
    "end": "30800"
  },
  {
    "text": "allows you to improve your security",
    "start": "30800",
    "end": "32320"
  },
  {
    "text": "posture",
    "start": "32320",
    "end": "33040"
  },
  {
    "text": "by separating your application",
    "start": "33040",
    "end": "34480"
  },
  {
    "text": "configuration and secrets from your code",
    "start": "34480",
    "end": "37120"
  },
  {
    "text": "it does this by providing secure",
    "start": "37120",
    "end": "39040"
  },
  {
    "text": "hierarchical storage where you can keep",
    "start": "39040",
    "end": "40800"
  },
  {
    "text": "data such as passwords that do not need",
    "start": "40800",
    "end": "42719"
  },
  {
    "text": "automatic rotation",
    "start": "42719",
    "end": "44239"
  },
  {
    "text": "configuration information such as amazon",
    "start": "44239",
    "end": "46960"
  },
  {
    "text": "machine image ids",
    "start": "46960",
    "end": "48480"
  },
  {
    "text": "or license codes you can store these",
    "start": "48480",
    "end": "51039"
  },
  {
    "text": "values as either plain text or encrypted",
    "start": "51039",
    "end": "53199"
  },
  {
    "text": "data",
    "start": "53199",
    "end": "54079"
  },
  {
    "text": "using aws key management service and",
    "start": "54079",
    "end": "56399"
  },
  {
    "text": "maintain a history of up to 100 versions",
    "start": "56399",
    "end": "58719"
  },
  {
    "text": "of a parameter",
    "start": "58719",
    "end": "60160"
  },
  {
    "text": "what i mean by hierarchical storage is",
    "start": "60160",
    "end": "62000"
  },
  {
    "text": "that instead of having a flat list of",
    "start": "62000",
    "end": "63600"
  },
  {
    "text": "parameters",
    "start": "63600",
    "end": "64478"
  },
  {
    "text": "you can model a hierarchy by using a",
    "start": "64479",
    "end": "66880"
  },
  {
    "text": "parameter name that includes forward",
    "start": "66880",
    "end": "68479"
  },
  {
    "text": "slashes as a delimiter for each level",
    "start": "68479",
    "end": "71119"
  },
  {
    "text": "for example say you wanted to model a",
    "start": "71119",
    "end": "72960"
  },
  {
    "text": "hierarchy where the top of the hierarchy",
    "start": "72960",
    "end": "74960"
  },
  {
    "text": "is the application name",
    "start": "74960",
    "end": "76479"
  },
  {
    "text": "followed by the environment name and",
    "start": "76479",
    "end": "78320"
  },
  {
    "text": "then the parameter itself",
    "start": "78320",
    "end": "79840"
  },
  {
    "text": "the parameter would be forward slash my",
    "start": "79840",
    "end": "82320"
  },
  {
    "text": "application",
    "start": "82320",
    "end": "83600"
  },
  {
    "text": "forward slash development forward slash",
    "start": "83600",
    "end": "86240"
  },
  {
    "text": "license code",
    "start": "86240",
    "end": "87920"
  },
  {
    "text": "we'll take a closer look at this during",
    "start": "87920",
    "end": "89360"
  },
  {
    "text": "the demonstration you can use this",
    "start": "89360",
    "end": "91520"
  },
  {
    "text": "hierarchy not only for retrieving values",
    "start": "91520",
    "end": "94000"
  },
  {
    "text": "but also for controlling access to",
    "start": "94000",
    "end": "95600"
  },
  {
    "text": "parameters identity and access",
    "start": "95600",
    "end": "97439"
  },
  {
    "text": "management policies can be used to not",
    "start": "97439",
    "end": "99200"
  },
  {
    "text": "only control which api actions",
    "start": "99200",
    "end": "101119"
  },
  {
    "text": "a user has access to but also which",
    "start": "101119",
    "end": "103920"
  },
  {
    "text": "levels of the hierarchy",
    "start": "103920",
    "end": "105360"
  },
  {
    "text": "continuing with the previous example you",
    "start": "105360",
    "end": "107040"
  },
  {
    "text": "could limit a developer's access to only",
    "start": "107040",
    "end": "108960"
  },
  {
    "text": "parameters that begin with forward slash",
    "start": "108960",
    "end": "111040"
  },
  {
    "text": "my application",
    "start": "111040",
    "end": "112479"
  },
  {
    "text": "for slash development so they can only",
    "start": "112479",
    "end": "115040"
  },
  {
    "text": "access parameters for the development",
    "start": "115040",
    "end": "116719"
  },
  {
    "text": "environment",
    "start": "116719",
    "end": "117920"
  },
  {
    "text": "you can also auto access the parameters",
    "start": "117920",
    "end": "119840"
  },
  {
    "text": "using aws cloudtrail",
    "start": "119840",
    "end": "121759"
  },
  {
    "text": "and using aws cloudwatch you can",
    "start": "121759",
    "end": "123680"
  },
  {
    "text": "configure change notifications",
    "start": "123680",
    "end": "125520"
  },
  {
    "text": "and trigger automated actions when",
    "start": "125520",
    "end": "127600"
  },
  {
    "text": "changes do occur",
    "start": "127600",
    "end": "129119"
  },
  {
    "text": "integration with other aws services goes",
    "start": "129119",
    "end": "131599"
  },
  {
    "text": "beyond just iem cloudwatch",
    "start": "131599",
    "end": "133360"
  },
  {
    "text": "and cloudtrail you can reference",
    "start": "133360",
    "end": "135200"
  },
  {
    "text": "parameters directly from management",
    "start": "135200",
    "end": "136560"
  },
  {
    "text": "tools such as aws cloudformation",
    "start": "136560",
    "end": "138720"
  },
  {
    "text": "and developer tools like aws code build",
    "start": "138720",
    "end": "140800"
  },
  {
    "text": "aws code pipeline",
    "start": "140800",
    "end": "142480"
  },
  {
    "text": "and aws code deploy and also compute",
    "start": "142480",
    "end": "145040"
  },
  {
    "text": "services like amazon elastic compute",
    "start": "145040",
    "end": "146959"
  },
  {
    "text": "cloud",
    "start": "146959",
    "end": "147599"
  },
  {
    "text": "amazon elastic container service and aws",
    "start": "147599",
    "end": "150400"
  },
  {
    "text": "landa",
    "start": "150400",
    "end": "151360"
  },
  {
    "text": "there are two available tiers standard",
    "start": "151360",
    "end": "153760"
  },
  {
    "text": "and advanced",
    "start": "153760",
    "end": "154800"
  },
  {
    "text": "which affects features such as the",
    "start": "154800",
    "end": "156239"
  },
  {
    "text": "maximum value size and the number of",
    "start": "156239",
    "end": "158319"
  },
  {
    "text": "parameters that can be stored",
    "start": "158319",
    "end": "160160"
  },
  {
    "text": "there are also two different throughput",
    "start": "160160",
    "end": "161680"
  },
  {
    "text": "configurations standard and high",
    "start": "161680",
    "end": "164000"
  },
  {
    "text": "which affects the number of transactions",
    "start": "164000",
    "end": "165680"
  },
  {
    "text": "per second that parameters",
    "start": "165680",
    "end": "167200"
  },
  {
    "text": "can process parameter store starts at no",
    "start": "167200",
    "end": "169519"
  },
  {
    "text": "additional charge if you select both",
    "start": "169519",
    "end": "171120"
  },
  {
    "text": "standard tier",
    "start": "171120",
    "end": "171920"
  },
  {
    "text": "and standard throughput the aws.net",
    "start": "171920",
    "end": "174560"
  },
  {
    "text": "configuration extension for systems",
    "start": "174560",
    "end": "176400"
  },
  {
    "text": "manager nuget package",
    "start": "176400",
    "end": "177680"
  },
  {
    "text": "simplifies using parameter store as a",
    "start": "177680",
    "end": "179840"
  },
  {
    "text": "source for configuration information",
    "start": "179840",
    "end": "182080"
  },
  {
    "text": "the nuget package does that by providing",
    "start": "182080",
    "end": "184080"
  },
  {
    "text": "a.net configuration provider",
    "start": "184080",
    "end": "185920"
  },
  {
    "text": "that pulls configuration data from",
    "start": "185920",
    "end": "187519"
  },
  {
    "text": "parameter store on your behalf",
    "start": "187519",
    "end": "189519"
  },
  {
    "text": "you do not need to worry about making",
    "start": "189519",
    "end": "190879"
  },
  {
    "text": "the api calls yourself the sdk does all",
    "start": "190879",
    "end": "193440"
  },
  {
    "text": "of the heavy lifting for you",
    "start": "193440",
    "end": "194879"
  },
  {
    "text": "so rather than storing data in config",
    "start": "194879",
    "end": "196720"
  },
  {
    "text": "files or referencing",
    "start": "196720",
    "end": "198159"
  },
  {
    "text": "them in plain text you can store and",
    "start": "198159",
    "end": "200239"
  },
  {
    "text": "obtain this information in your",
    "start": "200239",
    "end": "201599"
  },
  {
    "text": "application or scripts",
    "start": "201599",
    "end": "202879"
  },
  {
    "text": "using this.net configuration provider",
    "start": "202879",
    "end": "205280"
  },
  {
    "text": "the provider allows for caching values",
    "start": "205280",
    "end": "207280"
  },
  {
    "text": "and automatic reload",
    "start": "207280",
    "end": "208879"
  },
  {
    "text": "you can also specify whether",
    "start": "208879",
    "end": "210319"
  },
  {
    "text": "configuration data is optional or not",
    "start": "210319",
    "end": "212319"
  },
  {
    "text": "and if you have multiple configuration",
    "start": "212319",
    "end": "214000"
  },
  {
    "text": "parameters you can load all of them just",
    "start": "214000",
    "end": "216080"
  },
  {
    "text": "by specifying the prefix",
    "start": "216080",
    "end": "217760"
  },
  {
    "text": "and you can also optionally provide",
    "start": "217760",
    "end": "219360"
  },
  {
    "text": "filters this nuget package supports",
    "start": "219360",
    "end": "221680"
  },
  {
    "text": "both the.net generic host and the web",
    "start": "221680",
    "end": "223840"
  },
  {
    "text": "host let's take a look at the nuget",
    "start": "223840",
    "end": "225440"
  },
  {
    "text": "package in",
    "start": "225440",
    "end": "226000"
  },
  {
    "text": "action i have opened a sample asp.net",
    "start": "226000",
    "end": "228640"
  },
  {
    "text": "core application",
    "start": "228640",
    "end": "229760"
  },
  {
    "text": "that stores configuration information in",
    "start": "229760",
    "end": "231840"
  },
  {
    "text": "a local configuration file",
    "start": "231840",
    "end": "234480"
  },
  {
    "text": "we're going to walk through how to",
    "start": "234480",
    "end": "235599"
  },
  {
    "text": "change this application to start using",
    "start": "235599",
    "end": "237519"
  },
  {
    "text": "systems manager parameter store for",
    "start": "237519",
    "end": "239360"
  },
  {
    "text": "these values",
    "start": "239360",
    "end": "241599"
  },
  {
    "text": "let me first run the application and",
    "start": "241599",
    "end": "243280"
  },
  {
    "text": "walk you through the user interface",
    "start": "243280",
    "end": "245120"
  },
  {
    "text": "and where configuration values are used",
    "start": "245120",
    "end": "249120"
  },
  {
    "text": "here we see the unicorn bike sale site",
    "start": "249120",
    "end": "251280"
  },
  {
    "text": "which is written using asp.net core mvc",
    "start": "251280",
    "end": "254560"
  },
  {
    "text": "and nad framework core both the header",
    "start": "254560",
    "end": "258160"
  },
  {
    "text": "and the database connection string used",
    "start": "258160",
    "end": "259840"
  },
  {
    "text": "to retrieve the lists",
    "start": "259840",
    "end": "261040"
  },
  {
    "text": "such as components and clothing are read",
    "start": "261040",
    "end": "263759"
  },
  {
    "text": "from the app settings file",
    "start": "263759",
    "end": "265520"
  },
  {
    "text": "we'll switch both of these to get the",
    "start": "265520",
    "end": "267199"
  },
  {
    "text": "values from parameter store instead",
    "start": "267199",
    "end": "270000"
  },
  {
    "text": "let's look at the app settings file so",
    "start": "270000",
    "end": "271759"
  },
  {
    "text": "you can see where these values are",
    "start": "271759",
    "end": "273040"
  },
  {
    "text": "coming from",
    "start": "273040",
    "end": "275520"
  },
  {
    "text": "we use dot net core's standard",
    "start": "275520",
    "end": "277199"
  },
  {
    "text": "connection string element",
    "start": "277199",
    "end": "278560"
  },
  {
    "text": "for our database connection string named",
    "start": "278560",
    "end": "280479"
  },
  {
    "text": "default connection",
    "start": "280479",
    "end": "283680"
  },
  {
    "text": "and a custom one for the title as you",
    "start": "283680",
    "end": "286880"
  },
  {
    "text": "can see",
    "start": "286880",
    "end": "287759"
  },
  {
    "text": "both of these configuration settings use",
    "start": "287759",
    "end": "289680"
  },
  {
    "text": "a hierarchy within the json document",
    "start": "289680",
    "end": "292160"
  },
  {
    "text": "and will mimic this in parameter store",
    "start": "292160",
    "end": "294160"
  },
  {
    "text": "as well",
    "start": "294160",
    "end": "295360"
  },
  {
    "text": "the header eraser component uses this",
    "start": "295360",
    "end": "297120"
  },
  {
    "text": "configuration value for the header text",
    "start": "297120",
    "end": "299759"
  },
  {
    "text": "let's go there next",
    "start": "299759",
    "end": "302800"
  },
  {
    "text": "here you can see the eye configuration",
    "start": "303039",
    "end": "304639"
  },
  {
    "text": "interface being injected",
    "start": "304639",
    "end": "306240"
  },
  {
    "text": "as the configuration variable",
    "start": "306240",
    "end": "309360"
  },
  {
    "text": "this lets us access the configuration",
    "start": "309360",
    "end": "311039"
  },
  {
    "text": "providers within the body",
    "start": "311039",
    "end": "314240"
  },
  {
    "text": "we use the configuration variable to",
    "start": "314560",
    "end": "316400"
  },
  {
    "text": "navigate the configuration hierarchy",
    "start": "316400",
    "end": "318400"
  },
  {
    "text": "to get to the title",
    "start": "318400",
    "end": "321360"
  },
  {
    "text": "the connection string is used during",
    "start": "321440",
    "end": "323039"
  },
  {
    "text": "startup when we register the db context",
    "start": "323039",
    "end": "325360"
  },
  {
    "text": "in the configure services method",
    "start": "325360",
    "end": "328960"
  },
  {
    "text": "here you can see the call to adddb",
    "start": "331280",
    "end": "332800"
  },
  {
    "text": "context and the call to",
    "start": "332800",
    "end": "334960"
  },
  {
    "text": "getconnectionstring",
    "start": "334960",
    "end": "336160"
  },
  {
    "text": "using the name default connection from",
    "start": "336160",
    "end": "338160"
  },
  {
    "text": "our app settings file",
    "start": "338160",
    "end": "340000"
  },
  {
    "text": "ok let's get started with making a",
    "start": "340000",
    "end": "341919"
  },
  {
    "text": "change as needed to use parameter store",
    "start": "341919",
    "end": "345039"
  },
  {
    "text": "let's go ahead and go to the aws",
    "start": "345039",
    "end": "346639"
  },
  {
    "text": "management console and create the",
    "start": "346639",
    "end": "348479"
  },
  {
    "text": "parameters",
    "start": "348479",
    "end": "350400"
  },
  {
    "text": "we will select aws systems manager from",
    "start": "350400",
    "end": "352560"
  },
  {
    "text": "the list of services",
    "start": "352560",
    "end": "355360"
  },
  {
    "text": "we'll go to parameter store using the",
    "start": "355360",
    "end": "356800"
  },
  {
    "text": "navigation menu on the left",
    "start": "356800",
    "end": "360080"
  },
  {
    "text": "we'll use a very simple naming",
    "start": "360080",
    "end": "361440"
  },
  {
    "text": "convention of application name",
    "start": "361440",
    "end": "363520"
  },
  {
    "text": "forward slash environment for this",
    "start": "363520",
    "end": "366000"
  },
  {
    "text": "example",
    "start": "366000",
    "end": "366720"
  },
  {
    "text": "we'll use forward slash unicorn dash",
    "start": "366720",
    "end": "369039"
  },
  {
    "text": "bikes",
    "start": "369039",
    "end": "369919"
  },
  {
    "text": "forward slash development as the prefix",
    "start": "369919",
    "end": "372400"
  },
  {
    "text": "for all of our parameters",
    "start": "372400",
    "end": "374160"
  },
  {
    "text": "the forward slashes are separators that",
    "start": "374160",
    "end": "376080"
  },
  {
    "text": "allow us to represent a hierarchy",
    "start": "376080",
    "end": "379120"
  },
  {
    "text": "after that prefix we'll use the same",
    "start": "379120",
    "end": "381360"
  },
  {
    "text": "hierarchy that we saw in the app",
    "start": "381360",
    "end": "382720"
  },
  {
    "text": "settings file",
    "start": "382720",
    "end": "384880"
  },
  {
    "text": "we'll start with the title information",
    "start": "384880",
    "end": "387440"
  },
  {
    "text": "so we'll use titles",
    "start": "387440",
    "end": "388880"
  },
  {
    "text": "forward slash main we will leave the",
    "start": "388880",
    "end": "392240"
  },
  {
    "text": "tier as standard",
    "start": "392240",
    "end": "394000"
  },
  {
    "text": "the type as string and copy the value",
    "start": "394000",
    "end": "396720"
  },
  {
    "text": "from the app settings file",
    "start": "396720",
    "end": "398319"
  },
  {
    "text": "but add v2 so that we can tell that the",
    "start": "398319",
    "end": "401039"
  },
  {
    "text": "value is coming from parameter store",
    "start": "401039",
    "end": "404000"
  },
  {
    "text": "since we don't need automatic password",
    "start": "404000",
    "end": "405759"
  },
  {
    "text": "rotation we've chosen to use parameter",
    "start": "405759",
    "end": "408319"
  },
  {
    "text": "store to keep the connection string",
    "start": "408319",
    "end": "411360"
  },
  {
    "text": "we'll create another parameter and use",
    "start": "411360",
    "end": "413440"
  },
  {
    "text": "the same prefix",
    "start": "413440",
    "end": "415520"
  },
  {
    "text": "this time we'll follow.net core's",
    "start": "415520",
    "end": "417120"
  },
  {
    "text": "connection string structure for the",
    "start": "417120",
    "end": "418639"
  },
  {
    "text": "parameter name",
    "start": "418639",
    "end": "420479"
  },
  {
    "text": "starting with connection strings",
    "start": "420479",
    "end": "422560"
  },
  {
    "text": "followed by the name of",
    "start": "422560",
    "end": "423759"
  },
  {
    "text": "default connection",
    "start": "423759",
    "end": "426639"
  },
  {
    "text": "we will leave the tier as standard but",
    "start": "432240",
    "end": "434240"
  },
  {
    "text": "this time we use secure string as the",
    "start": "434240",
    "end": "436000"
  },
  {
    "text": "type",
    "start": "436000",
    "end": "437440"
  },
  {
    "text": "once we do that we'll be prompted for",
    "start": "437440",
    "end": "439280"
  },
  {
    "text": "the aws key management service key",
    "start": "439280",
    "end": "441360"
  },
  {
    "text": "information",
    "start": "441360",
    "end": "443440"
  },
  {
    "text": "we'll use the aws manage customer master",
    "start": "443440",
    "end": "445759"
  },
  {
    "text": "key that systems manager automatically",
    "start": "445759",
    "end": "447759"
  },
  {
    "text": "creates to encrypt the value",
    "start": "447759",
    "end": "450639"
  },
  {
    "text": "and take the connection string from the",
    "start": "450639",
    "end": "452000"
  },
  {
    "text": "app settings file and paste it here",
    "start": "452000",
    "end": "455840"
  },
  {
    "text": "now that we have the secrets created",
    "start": "456319",
    "end": "458240"
  },
  {
    "text": "let's make the changes to the project",
    "start": "458240",
    "end": "461840"
  },
  {
    "text": "first thing we have to do is add the",
    "start": "463120",
    "end": "465000"
  },
  {
    "text": "aws.net",
    "start": "465000",
    "end": "466319"
  },
  {
    "text": "configuration extension for systems",
    "start": "466319",
    "end": "468000"
  },
  {
    "text": "manager nuget package",
    "start": "468000",
    "end": "471199"
  },
  {
    "text": "the name of the package is",
    "start": "472160",
    "end": "475199"
  },
  {
    "text": "amazon.extensions.configuration.systems",
    "start": "476520",
    "end": "477520"
  },
  {
    "text": "manager",
    "start": "477520",
    "end": "479520"
  },
  {
    "text": "we'll install the package and that will",
    "start": "479520",
    "end": "481520"
  },
  {
    "text": "also install its dependencies",
    "start": "481520",
    "end": "484879"
  },
  {
    "text": "once it's installed all we need to do to",
    "start": "484879",
    "end": "487440"
  },
  {
    "text": "start using parameter store",
    "start": "487440",
    "end": "489199"
  },
  {
    "text": "is add the configuration provider",
    "start": "489199",
    "end": "490960"
  },
  {
    "text": "included in the nuget package",
    "start": "490960",
    "end": "493360"
  },
  {
    "text": "we do that by modifying the create web",
    "start": "493360",
    "end": "495440"
  },
  {
    "text": "host builder method",
    "start": "495440",
    "end": "496639"
  },
  {
    "text": "in the program class",
    "start": "496639",
    "end": "499680"
  },
  {
    "text": "we'll add a call to configure app",
    "start": "500319",
    "end": "502160"
  },
  {
    "text": "configuration",
    "start": "502160",
    "end": "503440"
  },
  {
    "text": "after the create default builder method",
    "start": "503440",
    "end": "505280"
  },
  {
    "text": "call",
    "start": "505280",
    "end": "507280"
  },
  {
    "text": "as you can see we're just simply adding",
    "start": "507280",
    "end": "509280"
  },
  {
    "text": "a call to add systems manager",
    "start": "509280",
    "end": "511360"
  },
  {
    "text": "specifying the prefix we use when",
    "start": "511360",
    "end": "513200"
  },
  {
    "text": "creating the parameters",
    "start": "513200",
    "end": "516240"
  },
  {
    "text": "we construct the prefix using the",
    "start": "516479",
    "end": "518479"
  },
  {
    "text": "environment name property of the hosting",
    "start": "518479",
    "end": "520640"
  },
  {
    "text": "environment",
    "start": "520640",
    "end": "522640"
  },
  {
    "text": "this will load all of the parameters",
    "start": "522640",
    "end": "524240"
  },
  {
    "text": "with that prefix and since we provided a",
    "start": "524240",
    "end": "526560"
  },
  {
    "text": "value for reload after",
    "start": "526560",
    "end": "528480"
  },
  {
    "text": "the parameters will be cached for a",
    "start": "528480",
    "end": "530000"
  },
  {
    "text": "period of five minutes",
    "start": "530000",
    "end": "533120"
  },
  {
    "text": "let's delete the values from the app",
    "start": "533279",
    "end": "534640"
  },
  {
    "text": "settings file so that we aren't picking",
    "start": "534640",
    "end": "536720"
  },
  {
    "text": "them up from there",
    "start": "536720",
    "end": "539439"
  },
  {
    "text": "those are all the changes needed notice",
    "start": "539920",
    "end": "542320"
  },
  {
    "text": "that we didn't have a change",
    "start": "542320",
    "end": "543519"
  },
  {
    "text": "any of our code as a result of using the",
    "start": "543519",
    "end": "545760"
  },
  {
    "text": "parameter store configuration provider",
    "start": "545760",
    "end": "548080"
  },
  {
    "text": "even the call to get connection strings",
    "start": "548080",
    "end": "550160"
  },
  {
    "text": "is now using the secrets stored in",
    "start": "550160",
    "end": "551839"
  },
  {
    "text": "parameter store",
    "start": "551839",
    "end": "554399"
  },
  {
    "text": "now that we've made the necessary",
    "start": "554399",
    "end": "555760"
  },
  {
    "text": "changes we can go ahead and run the",
    "start": "555760",
    "end": "557680"
  },
  {
    "text": "application again",
    "start": "557680",
    "end": "560240"
  },
  {
    "text": "and here you can see the new title",
    "start": "560240",
    "end": "562160"
  },
  {
    "text": "coming from parameter store",
    "start": "562160",
    "end": "564640"
  },
  {
    "text": "and the list can still be populated from",
    "start": "564640",
    "end": "566320"
  },
  {
    "text": "the database",
    "start": "566320",
    "end": "568959"
  },
  {
    "text": "we're going to take a slightly different",
    "start": "569120",
    "end": "570480"
  },
  {
    "text": "approach and see how we can integrate aw",
    "start": "570480",
    "end": "572720"
  },
  {
    "text": "assistance manager parameter store",
    "start": "572720",
    "end": "575040"
  },
  {
    "text": "with aws lambda using a brand new",
    "start": "575040",
    "end": "577519"
  },
  {
    "text": "project",
    "start": "577519",
    "end": "579760"
  },
  {
    "text": "first we'll close this solution and",
    "start": "579760",
    "end": "582240"
  },
  {
    "text": "select aws serverless application",
    "start": "582240",
    "end": "584800"
  },
  {
    "text": "from the project templates",
    "start": "584800",
    "end": "590000"
  },
  {
    "text": "we'll go ahead and give the project a",
    "start": "590000",
    "end": "591440"
  },
  {
    "text": "name and click create",
    "start": "591440",
    "end": "595040"
  },
  {
    "text": "this brings up the blueprint selection",
    "start": "595680",
    "end": "597279"
  },
  {
    "text": "window",
    "start": "597279",
    "end": "599680"
  },
  {
    "text": "we'll select asp.net core web api for",
    "start": "599760",
    "end": "602480"
  },
  {
    "text": "this sample",
    "start": "602480",
    "end": "605839"
  },
  {
    "text": "first we'll go ahead and set up the app",
    "start": "610320",
    "end": "611760"
  },
  {
    "text": "settings file to reference our aws",
    "start": "611760",
    "end": "613760"
  },
  {
    "text": "profile",
    "start": "613760",
    "end": "615440"
  },
  {
    "text": "i am using the us east 1 region and the",
    "start": "615440",
    "end": "618560"
  },
  {
    "text": "default profile",
    "start": "618560",
    "end": "621440"
  },
  {
    "text": "the rest of the steps are pretty similar",
    "start": "626160",
    "end": "627680"
  },
  {
    "text": "to before we'll add the aws.net",
    "start": "627680",
    "end": "630399"
  },
  {
    "text": "configuration extension for systems",
    "start": "630399",
    "end": "632160"
  },
  {
    "text": "manager new kit package",
    "start": "632160",
    "end": "635279"
  },
  {
    "text": "once it's installed all we need to do to",
    "start": "635440",
    "end": "638000"
  },
  {
    "text": "start using parameter store",
    "start": "638000",
    "end": "639600"
  },
  {
    "text": "is add the configuration provider",
    "start": "639600",
    "end": "641200"
  },
  {
    "text": "included in the nuget package",
    "start": "641200",
    "end": "644480"
  },
  {
    "text": "we do that by modifying the host builder",
    "start": "644480",
    "end": "646240"
  },
  {
    "text": "setup methods in both the lambda entry",
    "start": "646240",
    "end": "648480"
  },
  {
    "text": "point",
    "start": "648480",
    "end": "649440"
  },
  {
    "text": "and the local entry point classes to add",
    "start": "649440",
    "end": "651760"
  },
  {
    "text": "systems manager",
    "start": "651760",
    "end": "653200"
  },
  {
    "text": "let's start with the lambda entry point",
    "start": "653200",
    "end": "654800"
  },
  {
    "text": "class",
    "start": "654800",
    "end": "656560"
  },
  {
    "text": "this is the lambda function's entry",
    "start": "656560",
    "end": "658079"
  },
  {
    "text": "point when our code is executed by",
    "start": "658079",
    "end": "659839"
  },
  {
    "text": "lambda",
    "start": "659839",
    "end": "661360"
  },
  {
    "text": "it is recommended that we configure the",
    "start": "661360",
    "end": "662880"
  },
  {
    "text": "host builder in the init method",
    "start": "662880",
    "end": "665279"
  },
  {
    "text": "so let's go ahead and add systems",
    "start": "665279",
    "end": "666800"
  },
  {
    "text": "manager there",
    "start": "666800",
    "end": "675120"
  },
  {
    "text": "once we do that let's go ahead and move",
    "start": "675120",
    "end": "677040"
  },
  {
    "text": "on to the local entry point class",
    "start": "677040",
    "end": "679040"
  },
  {
    "text": "and configure the host builder",
    "start": "679040",
    "end": "682399"
  },
  {
    "text": "this is the entry point when we execute",
    "start": "682959",
    "end": "684640"
  },
  {
    "text": "the landing function locally",
    "start": "684640",
    "end": "686079"
  },
  {
    "text": "using the kestrel web server",
    "start": "686079",
    "end": "689839"
  },
  {
    "text": "now that we have ssm configured let's",
    "start": "690000",
    "end": "692320"
  },
  {
    "text": "change the values controller's get",
    "start": "692320",
    "end": "693680"
  },
  {
    "text": "method",
    "start": "693680",
    "end": "694399"
  },
  {
    "text": "so that it returns the title name",
    "start": "694399",
    "end": "698000"
  },
  {
    "text": "we will leave the default route of api",
    "start": "698160",
    "end": "700160"
  },
  {
    "text": "controller alone but take a note of it",
    "start": "700160",
    "end": "702880"
  },
  {
    "text": "so that we know how to invoke the method",
    "start": "702880",
    "end": "706079"
  },
  {
    "text": "first we have to inject eye",
    "start": "706079",
    "end": "707839"
  },
  {
    "text": "configuration so that we can reference",
    "start": "707839",
    "end": "709920"
  },
  {
    "text": "the configuration provider",
    "start": "709920",
    "end": "713040"
  },
  {
    "text": "we'll do this by creating a constructor",
    "start": "713040",
    "end": "714880"
  },
  {
    "text": "and saving a reference",
    "start": "714880",
    "end": "716079"
  },
  {
    "text": "as a field next",
    "start": "716079",
    "end": "719680"
  },
  {
    "text": "we'll change the get method to return",
    "start": "719680",
    "end": "721200"
  },
  {
    "text": "the main title",
    "start": "721200",
    "end": "723279"
  },
  {
    "text": "before we do that though we do have to",
    "start": "723279",
    "end": "725279"
  },
  {
    "text": "keep in mind that in aws landa",
    "start": "725279",
    "end": "728240"
  },
  {
    "text": "background tasks are paused after",
    "start": "728240",
    "end": "730399"
  },
  {
    "text": "processing a lambda event",
    "start": "730399",
    "end": "732480"
  },
  {
    "text": "given that we use the reload after",
    "start": "732480",
    "end": "734160"
  },
  {
    "text": "parameter when we added systems manager",
    "start": "734160",
    "end": "736480"
  },
  {
    "text": "as a configuration provider",
    "start": "736480",
    "end": "738639"
  },
  {
    "text": "this could prevent the provider from",
    "start": "738639",
    "end": "740160"
  },
  {
    "text": "retrieving the latest configuration data",
    "start": "740160",
    "end": "742639"
  },
  {
    "text": "from parameter store to ensure the",
    "start": "742639",
    "end": "745519"
  },
  {
    "text": "reload is performed within a lambda",
    "start": "745519",
    "end": "747200"
  },
  {
    "text": "event",
    "start": "747200",
    "end": "747920"
  },
  {
    "text": "we recommend calling the extension",
    "start": "747920",
    "end": "749600"
  },
  {
    "text": "method wait for systems manager reload",
    "start": "749600",
    "end": "752240"
  },
  {
    "text": "to complete",
    "start": "752240",
    "end": "753279"
  },
  {
    "text": "of the eye configuration object in your",
    "start": "753279",
    "end": "755519"
  },
  {
    "text": "lambda function",
    "start": "755519",
    "end": "756959"
  },
  {
    "text": "this method will immediately return",
    "start": "756959",
    "end": "759200"
  },
  {
    "text": "unless a reload is currently being",
    "start": "759200",
    "end": "760720"
  },
  {
    "text": "performed",
    "start": "760720",
    "end": "761920"
  },
  {
    "text": "we have to import the",
    "start": "761920",
    "end": "765120"
  },
  {
    "text": "amazon.extensions.configuration.systems",
    "start": "765240",
    "end": "766240"
  },
  {
    "text": "manager namespace",
    "start": "766240",
    "end": "767839"
  },
  {
    "text": "and specify a timeout value which",
    "start": "767839",
    "end": "770160"
  },
  {
    "text": "represents the maximum amount of time",
    "start": "770160",
    "end": "771920"
  },
  {
    "text": "we'll wait for the reload to complete",
    "start": "771920",
    "end": "774079"
  },
  {
    "text": "next we'll change the get method to use",
    "start": "774079",
    "end": "776240"
  },
  {
    "text": "the configuration field to traverse the",
    "start": "776240",
    "end": "778000"
  },
  {
    "text": "parameter hierarchy",
    "start": "778000",
    "end": "779440"
  },
  {
    "text": "and retrieve the parameter title",
    "start": "779440",
    "end": "782639"
  },
  {
    "text": "that's it let's go ahead and run the",
    "start": "782639",
    "end": "784839"
  },
  {
    "text": "code",
    "start": "784839",
    "end": "786399"
  },
  {
    "text": "i'll change the address of the api's",
    "start": "786399",
    "end": "788160"
  },
  {
    "text": "route to invoke the value controller's",
    "start": "788160",
    "end": "790000"
  },
  {
    "text": "get method",
    "start": "790000",
    "end": "791519"
  },
  {
    "text": "as you can see the value from parameter",
    "start": "791519",
    "end": "793760"
  },
  {
    "text": "store is returned",
    "start": "793760",
    "end": "796320"
  },
  {
    "text": "you can visit the project's github page",
    "start": "796320",
    "end": "798399"
  },
  {
    "text": "at github.com",
    "start": "798399",
    "end": "800079"
  },
  {
    "text": "forward slash aws forward slash",
    "start": "800079",
    "end": "803519"
  },
  {
    "text": "aws dash dot net dash",
    "start": "803519",
    "end": "806880"
  },
  {
    "text": "extensions dash configuration",
    "start": "806880",
    "end": "810399"
  },
  {
    "text": "where you will find more information on",
    "start": "810399",
    "end": "812240"
  },
  {
    "text": "getting started",
    "start": "812240",
    "end": "814880"
  },
  {
    "text": "even more samples",
    "start": "814880",
    "end": "818000"
  },
  {
    "text": "and how to contribute to the project",
    "start": "819040",
    "end": "822560"
  },
  {
    "text": "in this video we saw how you can use the",
    "start": "823040",
    "end": "824920"
  },
  {
    "text": "aws.net configuration extension for",
    "start": "824920",
    "end": "827440"
  },
  {
    "text": "systems manager nuget package",
    "start": "827440",
    "end": "829360"
  },
  {
    "text": "to add support for aws assistance",
    "start": "829360",
    "end": "831279"
  },
  {
    "text": "manager parameter store",
    "start": "831279",
    "end": "833279"
  },
  {
    "text": "as a source for configuration data",
    "start": "833279",
    "end": "836399"
  },
  {
    "text": "i hope you enjoyed this video and found",
    "start": "836399",
    "end": "838160"
  },
  {
    "text": "it informative",
    "start": "838160",
    "end": "839519"
  },
  {
    "text": "thank you for watching",
    "start": "839519",
    "end": "842510"
  },
  {
    "text": "[Music]",
    "start": "842510",
    "end": "845659"
  }
]