[
  {
    "text": "a look into storm runner load on AWS as",
    "start": "0",
    "end": "4640"
  },
  {
    "text": "an application developer your goal is to",
    "start": "4640",
    "end": "7620"
  },
  {
    "text": "ensure good customer experience and",
    "start": "7620",
    "end": "9540"
  },
  {
    "text": "prevent downtime before it happens as",
    "start": "9540",
    "end": "11719"
  },
  {
    "text": "you move your apps to the cloud you need",
    "start": "11719",
    "end": "14309"
  },
  {
    "text": "to test them for performance and have",
    "start": "14309",
    "end": "16020"
  },
  {
    "text": "insights into cloud utilization all",
    "start": "16020",
    "end": "18119"
  },
  {
    "text": "while being able to simulate enough",
    "start": "18119",
    "end": "20189"
  },
  {
    "text": "users to avoid downtime for your",
    "start": "20189",
    "end": "22140"
  },
  {
    "text": "customers to ensure a smooth experience",
    "start": "22140",
    "end": "24930"
  },
  {
    "text": "you must prevent application failure in",
    "start": "24930",
    "end": "27990"
  },
  {
    "text": "production meet customer expectations",
    "start": "27990",
    "end": "30330"
  },
  {
    "text": "and ensure there is no performance",
    "start": "30330",
    "end": "32340"
  },
  {
    "text": "degradation between updates be they",
    "start": "32340",
    "end": "34170"
  },
  {
    "text": "on-premises or cloud-based you need an",
    "start": "34170",
    "end": "38399"
  },
  {
    "text": "elastic and scalable solution for your",
    "start": "38399",
    "end": "40739"
  },
  {
    "text": "continuous integration process to ensure",
    "start": "40739",
    "end": "43140"
  },
  {
    "text": "that your application can handle the",
    "start": "43140",
    "end": "44610"
  },
  {
    "text": "number of expected users all while using",
    "start": "44610",
    "end": "46950"
  },
  {
    "text": "analytics and root cause analysis to",
    "start": "46950",
    "end": "49260"
  },
  {
    "text": "interpret results and resolve issues",
    "start": "49260",
    "end": "51289"
  },
  {
    "text": "storm runner load on Amazon Web Services",
    "start": "51289",
    "end": "54449"
  },
  {
    "text": "or AWS helps with its ability to quickly",
    "start": "54449",
    "end": "57629"
  },
  {
    "text": "spin up load generators in multiple",
    "start": "57629",
    "end": "59850"
  },
  {
    "text": "geographical regions to simulate user",
    "start": "59850",
    "end": "61949"
  },
  {
    "text": "capacity and interpret and compare",
    "start": "61949",
    "end": "64018"
  },
  {
    "text": "results measured against a previous",
    "start": "64019",
    "end": "65729"
  },
  {
    "text": "version of the application",
    "start": "65729",
    "end": "67430"
  },
  {
    "text": "storm runner load lets you upload",
    "start": "67430",
    "end": "69570"
  },
  {
    "text": "scripts select users determine types and",
    "start": "69570",
    "end": "72570"
  },
  {
    "text": "run tests with just a few clicks",
    "start": "72570",
    "end": "74729"
  },
  {
    "text": "what's more the ability to run tests",
    "start": "74729",
    "end": "77670"
  },
  {
    "text": "concurrently add users on-the-fly",
    "start": "77670",
    "end": "79890"
  },
  {
    "text": "and scale to simulate over five million",
    "start": "79890",
    "end": "82439"
  },
  {
    "text": "users all without needing to manage your",
    "start": "82439",
    "end": "85140"
  },
  {
    "text": "own infrastructure differentiates storm",
    "start": "85140",
    "end": "87689"
  },
  {
    "text": "runner load from the rest learn more",
    "start": "87689",
    "end": "91350"
  },
  {
    "text": "about storm run or load in AWS",
    "start": "91350",
    "end": "93479"
  },
  {
    "text": "marketplace",
    "start": "93479",
    "end": "95659"
  },
  {
    "text": "storm runner load a simple smart and",
    "start": "96430",
    "end": "99670"
  },
  {
    "text": "scalable solution for performance",
    "start": "99670",
    "end": "101500"
  },
  {
    "text": "testing",
    "start": "101500",
    "end": "103920"
  }
]