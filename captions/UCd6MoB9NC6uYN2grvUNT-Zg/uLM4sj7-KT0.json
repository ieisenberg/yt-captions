[
  {
    "start": "0",
    "end": "31000"
  },
  {
    "text": "let's go with the next presentation so I",
    "start": "30",
    "end": "5640"
  },
  {
    "text": "think we all deserved a few minutes of break and some oxygen now we can move to",
    "start": "5640",
    "end": "11969"
  },
  {
    "text": "the new section this is a little bit again different so we saw the technical",
    "start": "11969",
    "end": "18510"
  },
  {
    "text": "building blocks we saw some architectural patterns now let's see how we can manage availability with the",
    "start": "18510",
    "end": "25199"
  },
  {
    "text": "surveillance architecture especially if you want to go global so in this session",
    "start": "25199",
    "end": "32219"
  },
  {
    "start": "31000",
    "end": "66000"
  },
  {
    "text": "idea is to start with some definitions to understand what we mean by reliability and availability of a system",
    "start": "32219",
    "end": "39329"
  },
  {
    "text": "then we will see why we may need to build multi-region architecture so region that is going outside of a single",
    "start": "39329",
    "end": "46590"
  },
  {
    "text": "region then we will see how to build an active active architecture where we have",
    "start": "46590",
    "end": "53520"
  },
  {
    "text": "multiple regions working together and finally we do a demo now to do that with",
    "start": "53520",
    "end": "59160"
  },
  {
    "text": "using dynamodb global tables it's super easy so it will give you an idea of how",
    "start": "59160",
    "end": "64650"
  },
  {
    "text": "you can build it so let's start with the reliability and availability parts so",
    "start": "64650",
    "end": "70799"
  },
  {
    "start": "66000",
    "end": "98000"
  },
  {
    "text": "this is bernhard Vogel's our the Amazon CTO and he said something a few years",
    "start": "70799",
    "end": "77189"
  },
  {
    "text": "ago that is very important so you shouldn't fight failures you shouldn't spend money and time to try to avoid",
    "start": "77189",
    "end": "83400"
  },
  {
    "text": "failures because failures will always happen it's something that is part of the way we live so you need to embrace",
    "start": "83400",
    "end": "89430"
  },
  {
    "text": "failures and find a way where your application can survive and work in an",
    "start": "89430",
    "end": "94710"
  },
  {
    "text": "acceptable way when a failure of course and this is a diagram that gives you",
    "start": "94710",
    "end": "100259"
  },
  {
    "start": "98000",
    "end": "143000"
  },
  {
    "text": "ready of the possible errors and failures that you can receive normally from anything can be digital or physical",
    "start": "100259",
    "end": "106460"
  },
  {
    "text": "objects so normally you get early failures so stuff that is pretty new you",
    "start": "106460",
    "end": "112290"
  },
  {
    "text": "start to have some failures and then they stabilize you can have wear out failures things that of course wears out",
    "start": "112290",
    "end": "118799"
  },
  {
    "text": "after lots of use you have random failures that happen all the time and",
    "start": "118799",
    "end": "124610"
  },
  {
    "text": "and then you have the result of this tree that is the observed values that",
    "start": "124610",
    "end": "130590"
  },
  {
    "text": "gives you like a you curve where you normally have failures at the beginning then the mainly there are no mirrors and then you",
    "start": "130590",
    "end": "137640"
  },
  {
    "text": "see an increase when you start to wear out the components of your architecture and to help you design robust",
    "start": "137640",
    "end": "145469"
  },
  {
    "start": "143000",
    "end": "169000"
  },
  {
    "text": "architecture we developed over the year the well architects framework so it's a collection of white papers on our",
    "start": "145469",
    "end": "150870"
  },
  {
    "text": "website and it goes through different pillars so we look in operational",
    "start": "150870",
    "end": "156359"
  },
  {
    "text": "excellence of your architecture the security the reliability the cost optimization and also the performance so",
    "start": "156359",
    "end": "163019"
  },
  {
    "text": "look into this there is the ability part if you're interested in understanding how to build reliable architectures and",
    "start": "163019",
    "end": "170000"
  },
  {
    "start": "169000",
    "end": "208000"
  },
  {
    "text": "what we define as reliable is an infrastructure that is capable of",
    "start": "170000",
    "end": "176639"
  },
  {
    "text": "recovering when something disrupts the service when you need to increase the",
    "start": "176639",
    "end": "182639"
  },
  {
    "text": "resources automatically because what you have is not enough to serve your customer and also that is able to",
    "start": "182639",
    "end": "189989"
  },
  {
    "text": "mitigate disruption if the disruption happened like a Mis configuration or a trans just some errors on the network",
    "start": "189989",
    "end": "197639"
  },
  {
    "text": "you should be able to recover quickly from this so you should think that your infrastructure was you build your",
    "start": "197639",
    "end": "203579"
  },
  {
    "text": "building can support this and recover from this kind of errors and then we",
    "start": "203579",
    "end": "209310"
  },
  {
    "start": "208000",
    "end": "289000"
  },
  {
    "text": "enter into the availability availability is the time your application is available and normally we express",
    "start": "209310",
    "end": "214379"
  },
  {
    "text": "availability using some percentage of the time and not always you think about what this means in reality so if you go",
    "start": "214379",
    "end": "221129"
  },
  {
    "text": "for ninety five percent of our ability that means that you can stay down eighteen days of a year so not so middie",
    "start": "221129",
    "end": "229769"
  },
  {
    "text": "difficult to obtain 99% it's three days then you start to go into the hours the",
    "start": "229769",
    "end": "235620"
  },
  {
    "text": "minutes and six nines it means that you have 31 seconds per year so it's",
    "start": "235620",
    "end": "241349"
  },
  {
    "text": "mission-critical and I have a few examples of mission critical application up to the most critical ones that is",
    "start": "241349",
    "end": "246629"
  },
  {
    "text": "when your loved ones calls you really need to be very fast and reliable in in our dream back I'm joking",
    "start": "246629",
    "end": "253290"
  },
  {
    "text": "so when you build availability you can mix different parts that have different",
    "start": "253290",
    "end": "258630"
  },
  {
    "text": "availability together and that's something that happens when you build an architecture so if you put different",
    "start": "258630",
    "end": "263789"
  },
  {
    "text": "components in a serious so they button it to work for your application to serve your customer you are actually multiplying",
    "start": "263789",
    "end": "270620"
  },
  {
    "text": "their availability so that means that if Part A Part X as an availability and",
    "start": "270620",
    "end": "276620"
  },
  {
    "text": "part Y as another availability you are multiplying those so if one is 99 percent and the other one is 4/9",
    "start": "276620",
    "end": "282830"
  },
  {
    "text": "you get something that is slightly below 99 percent because it's the multiplication of the two good story is",
    "start": "282830",
    "end": "290480"
  },
  {
    "start": "289000",
    "end": "398000"
  },
  {
    "text": "that if you put things in parallel it's much better so in parallel means that your service works if at least one of",
    "start": "290480",
    "end": "297320"
  },
  {
    "text": "the two parts is still working correctly and in this case the you have a",
    "start": "297320",
    "end": "303710"
  },
  {
    "text": "reliability issue if both the two parts are done at the same time so now the form of the formula is quite different",
    "start": "303710",
    "end": "310310"
  },
  {
    "text": "and you can increase your availability very easily if you look at this table",
    "start": "310310",
    "end": "315350"
  },
  {
    "text": "now if component X as two nines of availability if you put two of those in",
    "start": "315350",
    "end": "320660"
  },
  {
    "text": "parallel and then you multiply you get four nines so you move from three days to 52 minutes and then if you put three",
    "start": "320660",
    "end": "327640"
  },
  {
    "text": "it's even better you go into the seconds range in fact in AWS we always say that",
    "start": "327640",
    "end": "333290"
  },
  {
    "text": "we don't like to when we have ability we like three it's much better number because with two if one Falls then you",
    "start": "333290",
    "end": "340670"
  },
  {
    "text": "only have like 50% of the power so it can be difficult to recover from a fault",
    "start": "340670",
    "end": "346490"
  },
  {
    "text": "three is much much better option and this is how you link availability to the",
    "start": "346490",
    "end": "352640"
  },
  {
    "text": "main time to repair and the mean time between failures so basically the availability is the normal operation",
    "start": "352640",
    "end": "359060"
  },
  {
    "text": "time over the total time so if you have a mean time between different failures",
    "start": "359060",
    "end": "364100"
  },
  {
    "text": "and then when there is a failure we have a mean time to repair this is the form of the links that we values together and",
    "start": "364100",
    "end": "370700"
  },
  {
    "text": "you can see that if you can automate the repair part of your architecture so if a fault of course this part here the mean",
    "start": "370700",
    "end": "377300"
  },
  {
    "text": "time to repair is very small then the formula get close to 1 and 1 is 100% so",
    "start": "377300",
    "end": "382880"
  },
  {
    "text": "that's a good way to approach it so you maybe instead of focusing too much on reducing the failure that it's good but",
    "start": "382880",
    "end": "388970"
  },
  {
    "text": "sometimes it's out of your control if you can automate recovery even if the failure is a relatively big number you",
    "start": "388970",
    "end": "395030"
  },
  {
    "text": "can approach 100% and to tell this this formula in towards",
    "start": "395030",
    "end": "401889"
  },
  {
    "text": "redundancy increase the availability significantly so redundancy is the way to go so inside our region each region has",
    "start": "401889",
    "end": "409819"
  },
  {
    "start": "406000",
    "end": "435000"
  },
  {
    "text": "multiple availability zones and each availability zone is a different cluster of data centers one or more data centers",
    "start": "409819",
    "end": "416449"
  },
  {
    "text": "that are connected with low latency and redundant networking that means that inside the region you can already do",
    "start": "416449",
    "end": "422780"
  },
  {
    "text": "lots of redundancy so when you deploy an application you can use multiple data centers by just using for example an",
    "start": "422780",
    "end": "429050"
  },
  {
    "text": "auto scaling group with ec2 instances and a lot balancer that can distribute this workload across multiple data",
    "start": "429050",
    "end": "434659"
  },
  {
    "text": "centers and depending on the service you're using this can be automatic or",
    "start": "434659",
    "end": "439969"
  },
  {
    "start": "435000",
    "end": "476000"
  },
  {
    "text": "not so if you use a regional level service like s3 or dynamo DB or EFS and",
    "start": "439969",
    "end": "445580"
  },
  {
    "text": "order we automatically give you an endpoint at a region and we will automatically replicate the data across",
    "start": "445580",
    "end": "451430"
  },
  {
    "text": "multiple data centers you don't need to do anything it's managed by us inside a single region if you use a service like",
    "start": "451430",
    "end": "458300"
  },
  {
    "text": "ec2 RDS elastic cache or elastic search you are in charge or creating replicas",
    "start": "458300",
    "end": "464389"
  },
  {
    "text": "you are in charge of maintaining replicas across different availability zones so you need to be proactive on that we give you the tools but you need",
    "start": "464389",
    "end": "471740"
  },
  {
    "text": "to design correct the correct multi availability zones deployment with",
    "start": "471740",
    "end": "477319"
  },
  {
    "start": "476000",
    "end": "504000"
  },
  {
    "text": "service is better because with serverless by definition everything is managed so when you deploy this little",
    "start": "477319",
    "end": "484069"
  },
  {
    "text": "function on lambda maybe you didn't think of that but it's automatically replicated across multiple data centers",
    "start": "484069",
    "end": "489830"
  },
  {
    "text": "so when we created the hello world examples four lines of code there were in Ireland three different data centers",
    "start": "489830",
    "end": "496789"
  },
  {
    "text": "running that application in high availability so something that is maybe not that easy to build automatically so",
    "start": "496789",
    "end": "505219"
  },
  {
    "text": "you have to think about regional services because with service that's the way to go and this is an overview of the",
    "start": "505219",
    "end": "512120"
  },
  {
    "text": "region's we have across the world and in Europe now we have four regions now London Ireland Frankfurt and Paris and",
    "start": "512120",
    "end": "519800"
  },
  {
    "text": "this year we add another one in Sweden the one that we already have they all",
    "start": "519800",
    "end": "525350"
  },
  {
    "text": "have three availability zones so if we added an availability zone in London a few weeks ago and last year we added one",
    "start": "525350",
    "end": "532820"
  },
  {
    "text": "Frankfurt so that means that you have at least three data centers in each region it's lots of redundancy sometimes you",
    "start": "532820",
    "end": "540800"
  },
  {
    "text": "want to go past the availability of a single region why because maybe you want to be distributed across the world",
    "start": "540800",
    "end": "546350"
  },
  {
    "text": "problem is that what happens with availability is that if you want to increase availability past a certain",
    "start": "546350",
    "end": "551870"
  },
  {
    "text": "point the cost doesn't grow linearly but start to explode and you have to find",
    "start": "551870",
    "end": "557600"
  },
  {
    "text": "the right point depending on how much is cost and how much you need availability for your application",
    "start": "557600",
    "end": "563030"
  },
  {
    "start": "563000",
    "end": "571000"
  },
  {
    "text": "so why you need to build a multi region application on AWS since we already have",
    "start": "563030",
    "end": "568130"
  },
  {
    "text": "the availability zone concept inside the region one is to improve the latency of",
    "start": "568130",
    "end": "573830"
  },
  {
    "start": "571000",
    "end": "609000"
  },
  {
    "text": "your customer so maybe you have customers and but we as a ws can fight",
    "start": "573830",
    "end": "579200"
  },
  {
    "text": "the laws of physics so since the speed of light is limited and then there's",
    "start": "579200",
    "end": "584270"
  },
  {
    "text": "lots of networking and switching in the internet if you're in the UK you want to",
    "start": "584270",
    "end": "589880"
  },
  {
    "text": "reach the west coast of the US or the east coast of Australia the latency is",
    "start": "589880",
    "end": "596240"
  },
  {
    "text": "in the hundreds of milliseconds so usually when you go above 100 milliseconds the customer can experience",
    "start": "596240",
    "end": "602750"
  },
  {
    "text": "a lag in an interactive application so this can be a reason why you want to go",
    "start": "602750",
    "end": "608480"
  },
  {
    "text": "beyond that the second one is disaster recovery so maybe you have applications in two regions and if in one region your",
    "start": "608480",
    "end": "616460"
  },
  {
    "start": "609000",
    "end": "647000"
  },
  {
    "text": "application maybe it's our fault maybe it's your fault because you did the wrong deployment in the region",
    "start": "616460",
    "end": "622640"
  },
  {
    "text": "something doesn't work the world uswest deployment of your application is not",
    "start": "622640",
    "end": "628070"
  },
  {
    "text": "working you can just redirect all the users to u.s. East for some time while you recovery regions are completely",
    "start": "628070",
    "end": "635420"
  },
  {
    "text": "independent one from the other so it's it's much more easy that you don't have anything that is in the map in the",
    "start": "635420",
    "end": "642770"
  },
  {
    "text": "middle so that you have shared components when you work at separate regions level sometimes you just have",
    "start": "642770",
    "end": "648530"
  },
  {
    "start": "647000",
    "end": "658000"
  },
  {
    "text": "business requirements so maybe you need to store your data at with a copy at least 300 kilometers 700 kilometers so",
    "start": "648530",
    "end": "656180"
  },
  {
    "text": "that you just forced to do that so in the past doing active-active multi-region deployment was quite",
    "start": "656180",
    "end": "662360"
  },
  {
    "start": "658000",
    "end": "694000"
  },
  {
    "text": "complex this is Netflix in 2013 this to talk about that they wanted to embrace this architecture they develop",
    "start": "662360",
    "end": "669679"
  },
  {
    "text": "lost lots of tools that are open-source and usable to do that and last two years",
    "start": "669679",
    "end": "676670"
  },
  {
    "text": "ago around 2000 2016 they actually said that they build it it was probably a great effort on their side but now they",
    "start": "676670",
    "end": "685160"
  },
  {
    "text": "can run and they can switch uses across region and since they have a global presence they also have better latency",
    "start": "685160",
    "end": "691429"
  },
  {
    "text": "because each user is connected to the closest to region they also developed a series of tool that started with cows",
    "start": "691429",
    "end": "699019"
  },
  {
    "start": "694000",
    "end": "746000"
  },
  {
    "text": "monkey that was it could kill a single bill to a server a single ec2 instance in your account randomly up to the cows",
    "start": "699019",
    "end": "706670"
  },
  {
    "text": "gorillas that can bring down a variability honor and terrorism so they invented what it's now called cows in",
    "start": "706670",
    "end": "713389"
  },
  {
    "text": "engineering so the idea is that if you have a very complex architecture is impossible to understand all the",
    "start": "713389",
    "end": "718579"
  },
  {
    "text": "possible flows everything that happens so the best way to do that is to run experiments and force small faults in",
    "start": "718579",
    "end": "725899"
  },
  {
    "text": "your architecture to test the hypothesis of reliability that you put into your application and there's a very nice book",
    "start": "725899",
    "end": "732649"
  },
  {
    "text": "there's a free ebook from O'Reilly where the people from Netflix they share this",
    "start": "732649",
    "end": "737779"
  },
  {
    "text": "idea and how they use cows engineering to to solve this to increase the",
    "start": "737779",
    "end": "743199"
  },
  {
    "text": "understand better how their architecture works so let's say okay I want to build",
    "start": "743199",
    "end": "748939"
  },
  {
    "start": "746000",
    "end": "755000"
  },
  {
    "text": "this architecture I want to do that on AWS Netflix they took three years to do that I still need three years we will see",
    "start": "748939",
    "end": "756769"
  },
  {
    "start": "755000",
    "end": "838000"
  },
  {
    "text": "that it's much faster now but first we have to think about the data so when you start to go globally and you start to",
    "start": "756769",
    "end": "763579"
  },
  {
    "text": "deploy across multiple data centers or in this case or multiple regions there",
    "start": "763579",
    "end": "768679"
  },
  {
    "text": "is one limit that is the speed of light and the speed of network the when you",
    "start": "768679",
    "end": "774470"
  },
  {
    "text": "have data the data is the complex parts that you need to replicate and normally you can have synchronous or asynchronous",
    "start": "774470",
    "end": "779779"
  },
  {
    "text": "data replication with synchronous replication you can have both copies",
    "start": "779779",
    "end": "785720"
  },
  {
    "text": "that you have read and write and nobody noticed that there is some distance because everything is synchronous with a",
    "start": "785720",
    "end": "793549"
  },
  {
    "text": "synchronous replication you have a lag so maybe you can have conflicts or overrides you have to",
    "start": "793549",
    "end": "798620"
  },
  {
    "text": "and that from our understanding if you have less than five milliseconds of latency you can go synchronous with the",
    "start": "798620",
    "end": "805280"
  },
  {
    "text": "database for example and that's what we do for example with RDS inside a single",
    "start": "805280",
    "end": "811010"
  },
  {
    "text": "region so you have multiple availability zones here in London they are a few kilometers apart so we can go and we are",
    "start": "811010",
    "end": "818690"
  },
  {
    "text": "in the single millisecond range there if you want to go across different regions",
    "start": "818690",
    "end": "824420"
  },
  {
    "text": "you probably are in the ten 15 milliseconds that the list for two",
    "start": "824420",
    "end": "829700"
  },
  {
    "text": "regions so you can go synchronous you can have synchronous replication you have to embrace that any data",
    "start": "829700",
    "end": "835460"
  },
  {
    "text": "replication would be a synchronous across our regions this is maybe",
    "start": "835460",
    "end": "841670"
  },
  {
    "start": "838000",
    "end": "875000"
  },
  {
    "text": "something that not everybody knows we don't use the public Internet we have our own Amazon global network that we",
    "start": "841670",
    "end": "847400"
  },
  {
    "text": "created over the years there is a nice video from James Hamilton DS VP and distinguished engineer from AWS that",
    "start": "847400",
    "end": "854120"
  },
  {
    "text": "describes how we created this global network we literally pass cables across",
    "start": "854120",
    "end": "860390"
  },
  {
    "text": "the oceans that are dedicated to a ws to connect all the regions with a very fast",
    "start": "860390",
    "end": "865790"
  },
  {
    "text": "and private networking so that any communication across regions and the",
    "start": "865790",
    "end": "872600"
  },
  {
    "text": "edge location is is optimized we also released some features that can help you",
    "start": "872600",
    "end": "878300"
  },
  {
    "start": "875000",
    "end": "917000"
  },
  {
    "text": "play with these architectures at a more enterprise level so if you're comfortable with the concept of VP C so",
    "start": "878300",
    "end": "885230"
  },
  {
    "text": "the vp c de villefort product route is the virtual data center that you can create inside a region we recently",
    "start": "885230",
    "end": "890420"
  },
  {
    "text": "launched the possibility to connect V PC with peer to peer with peer connectivity across different regions so that means",
    "start": "890420",
    "end": "897590"
  },
  {
    "text": "that you can have two different data centers with four data centers one in the u.s. one Europe and then you can",
    "start": "897590",
    "end": "904310"
  },
  {
    "text": "connect them with a private network of EPC peering so that they can exchange network and we can't overcome latency",
    "start": "904310",
    "end": "911300"
  },
  {
    "text": "but from networking experiences like they do at the center of a direct connectivity and we also have that",
    "start": "911300",
    "end": "918500"
  },
  {
    "start": "917000",
    "end": "966000"
  },
  {
    "text": "features to lots of services so that you can replicate the data across regions in an easy way",
    "start": "918500",
    "end": "923780"
  },
  {
    "text": "for example s3 as the possibility to enable cross region replication so you",
    "start": "923780",
    "end": "929660"
  },
  {
    "text": "can choose a target region and automatically all the changes that you do on one market will be replicated on the other bucket and you",
    "start": "929660",
    "end": "936149"
  },
  {
    "text": "can also enable versioning so that the target bucket keeps all the versions and the updates from the Seuss bucket so if",
    "start": "936149",
    "end": "942540"
  },
  {
    "text": "you have like a simple requirement of you need to have a copy of your data at least at 500 kilometers and your data is",
    "start": "942540",
    "end": "949680"
  },
  {
    "text": "on s3 is just a feature if you want to have your application use multiple",
    "start": "949680",
    "end": "955410"
  },
  {
    "text": "buckets in this way you can still read from all the buckets and write only in",
    "start": "955410",
    "end": "960420"
  },
  {
    "text": "the master bucket that is the one that is where the rights are propagated",
    "start": "960420",
    "end": "966050"
  },
  {
    "start": "966000",
    "end": "1029000"
  },
  {
    "text": "similarly we have a feature for RDS so this works for the open source engines",
    "start": "966050",
    "end": "972839"
  },
  {
    "text": "like my sequel Postgres moriah DB and aurora our engine so you can have a",
    "start": "972839",
    "end": "978000"
  },
  {
    "text": "master in one region and you can create read replicas in other regions and we will replicate a synchronously but",
    "start": "978000",
    "end": "984149"
  },
  {
    "text": "fairly fast the data changes to the read replicas and that means that you can for",
    "start": "984149",
    "end": "989490"
  },
  {
    "text": "example have a global deployment of your application when you read locally on the",
    "start": "989490",
    "end": "994709"
  },
  {
    "text": "database close to where you are but if you need to write you still need to write on the master database because",
    "start": "994709",
    "end": "1000950"
  },
  {
    "text": "it's the only one that is propagated and the other database are not open for reads in a in a disaster recovery",
    "start": "1000950",
    "end": "1007850"
  },
  {
    "text": "situation those with replicas can be promoted to masters so if for example this master database Falls completely",
    "start": "1007850",
    "end": "1015740"
  },
  {
    "text": "you can promote one of the replicas to master and change the flaws so in it's an API something that I still remember",
    "start": "1015740",
    "end": "1022700"
  },
  {
    "text": "it was probably one year of project a few years ago now it's just a configuration with Aurora specifically",
    "start": "1022700",
    "end": "1031850"
  },
  {
    "text": "so I'm laura is our own database engine that can is 100% compatible with my",
    "start": "1031850",
    "end": "1036890"
  },
  {
    "text": "sequel and now also with Postgres we are going we are currently in preview with our a multi master inside the region so",
    "start": "1036890",
    "end": "1044540"
  },
  {
    "text": "you can have a multi master database inside the region across multiple availability zone and this year we are",
    "start": "1044540",
    "end": "1050540"
  },
  {
    "text": "working to have a multi region multi master so that means that you can go past what I just show you can have",
    "start": "1050540",
    "end": "1056420"
  },
  {
    "text": "multiple masters that are kept in sync a synchronously in that case but",
    "start": "1056420",
    "end": "1062160"
  },
  {
    "text": "globally but we are already there for another database that's the database I",
    "start": "1062160",
    "end": "1067559"
  },
  {
    "start": "1063000",
    "end": "1077000"
  },
  {
    "text": "talk to more today it's DynamoDB our fully managed no sequel database so DynamoDB is a no",
    "start": "1067559",
    "end": "1073950"
  },
  {
    "text": "sequel database where you can control the throughput and we launched and we use it a lot in Amazon actually just to",
    "start": "1073950",
    "end": "1081059"
  },
  {
    "start": "1077000",
    "end": "1108000"
  },
  {
    "text": "give you an idea of the possibility of what you can achieve with DynamoDB this is from the prime day prime days like",
    "start": "1081059",
    "end": "1087390"
  },
  {
    "text": "the Black Friday for Amazon that we launched in the US and I think also we're right now and at peak during that",
    "start": "1087390",
    "end": "1094590"
  },
  {
    "text": "day we had almost 15 million of access per seconds to the database so it gives",
    "start": "1094590",
    "end": "1100770"
  },
  {
    "text": "you the scale that it's possible to reach with DynamoDB so it's incredible",
    "start": "1100770",
    "end": "1105840"
  },
  {
    "text": "that the sides that you can achieve and for dynamodb we launched this feature",
    "start": "1105840",
    "end": "1111330"
  },
  {
    "start": "1108000",
    "end": "1147000"
  },
  {
    "text": "that is generally available for everybody that is called global tables so with global tables you can create a",
    "start": "1111330",
    "end": "1116909"
  },
  {
    "text": "table in multiple regions and we we will keep all the tables synchronized with",
    "start": "1116909",
    "end": "1122429"
  },
  {
    "text": "each other with the length HC of the speed of light so it's not synchronous but it's slightly a synchronous it's",
    "start": "1122429",
    "end": "1130289"
  },
  {
    "text": "designed to be disaster-proof so that if one lags behind then you will synchronize and it's designed to be very",
    "start": "1130289",
    "end": "1135720"
  },
  {
    "text": "fast performance and it's easy to set up you don't need to change anything it's",
    "start": "1135720",
    "end": "1141360"
  },
  {
    "text": "just dynamodb but you can read them right from multiple regions so you can start the blowing your application across multiple regions the technology",
    "start": "1141360",
    "end": "1148590"
  },
  {
    "start": "1147000",
    "end": "1185000"
  },
  {
    "text": "we use is dynamodb streams so dynamodb already has the concept of streams where",
    "start": "1148590",
    "end": "1154110"
  },
  {
    "text": "streams it's similar to a Kinesis stream and it contains all the sequence of",
    "start": "1154110",
    "end": "1159659"
  },
  {
    "text": "activities that are done on the database as kinases we preserve the order so you",
    "start": "1159659",
    "end": "1165000"
  },
  {
    "text": "know the updates the insert and delete on the database are sent us as order at stream of event and this can normally be",
    "start": "1165000",
    "end": "1172230"
  },
  {
    "text": "processed by a lambda function if you want now you don't need even to use a",
    "start": "1172230",
    "end": "1177270"
  },
  {
    "text": "lambda function you can just use streams to enable this multi region replication",
    "start": "1177270",
    "end": "1182640"
  },
  {
    "text": "and we will enter the replication for you what's the missing point is the DNS",
    "start": "1182640",
    "end": "1188039"
  },
  {
    "start": "1185000",
    "end": "1228000"
  },
  {
    "text": "so if you start to deploy globally you want to have a DNS service that is globally with the presence global",
    "start": "1188039",
    "end": "1195120"
  },
  {
    "text": "global presence and also capable of distributing the traffic to the correct regions so a SS The Rock CVT is designed",
    "start": "1195120",
    "end": "1203730"
  },
  {
    "text": "to be really highly available it does an SLA of 100 percent and it a feature is",
    "start": "1203730",
    "end": "1210480"
  },
  {
    "text": "called traffic flow where you can define different flows and recovery path so that you can get a DNS entry globally",
    "start": "1210480",
    "end": "1216570"
  },
  {
    "text": "and this DNS entry can be mapped depending on different use cases and can react and send the user different",
    "start": "1216570",
    "end": "1222810"
  },
  {
    "text": "different location on depending on the on the events that happen and it's designed to be very highly available so",
    "start": "1222810",
    "end": "1228750"
  },
  {
    "start": "1228000",
    "end": "1252000"
  },
  {
    "text": "you can do latency based routing so if you have for example our sourcing one region and another resource in another",
    "start": "1228750",
    "end": "1234690"
  },
  {
    "text": "region you can say send the user to the region where the latency is lower so if",
    "start": "1234690",
    "end": "1239910"
  },
  {
    "text": "you have US and Europe all the you user in Europe will be sent to the Europe region all the users in the US to the US",
    "start": "1239910",
    "end": "1247380"
  },
  {
    "text": "1 and then depending on the latency the other users worldwide will go accordingly you can do geo DNS so this",
    "start": "1247380",
    "end": "1254760"
  },
  {
    "start": "1252000",
    "end": "1302000"
  },
  {
    "text": "is normally more for licensing similarly to CloudFront so you can go specify the",
    "start": "1254760",
    "end": "1260580"
  },
  {
    "text": "country code where you want the users to go normally you do that more for licensing that for optimization you have",
    "start": "1260580",
    "end": "1267030"
  },
  {
    "text": "weighted round robin so you can say okay normally send users once in one part and",
    "start": "1267030",
    "end": "1274410"
  },
  {
    "text": "the other time in the other with weights that you can choose and you can define failover so if something goes wrong in",
    "start": "1274410",
    "end": "1281730"
  },
  {
    "text": "any of those scenarios you can have a recovery fault the recovery part that",
    "start": "1281730",
    "end": "1287340"
  },
  {
    "text": "sends the users in order parcel maybe this is a low latency I go to the US but",
    "start": "1287340",
    "end": "1292980"
  },
  {
    "text": "then the US is not answering anymore I can I'm sent to the EU while the US part",
    "start": "1292980",
    "end": "1299820"
  },
  {
    "text": "of my application is recovering so now we can put everything together with the",
    "start": "1299820",
    "end": "1305870"
  },
  {
    "text": "custom domain name of a regional API and a point of the API gateway so when I use",
    "start": "1305870",
    "end": "1310980"
  },
  {
    "text": "the API gateway I can use an regional API endpoint I can use the same custom domain name in all the region and then I",
    "start": "1310980",
    "end": "1318360"
  },
  {
    "text": "can use the DNS using what it's called the cname it's a sort of an alias for the DNS that tells depending on those",
    "start": "1318360",
    "end": "1324540"
  },
  {
    "text": "rules and either in one region or in the region the custom domain name it's very",
    "start": "1324540",
    "end": "1331440"
  },
  {
    "text": "important because if you have a an endpoint for your API you have so the",
    "start": "1331440",
    "end": "1336509"
  },
  {
    "text": "user are using a DNS name you and you're using HTTP HTTP you need to have the",
    "start": "1336509",
    "end": "1341970"
  },
  {
    "text": "right certificate here otherwise of course everything fails so you need to have regional level certificates so that",
    "start": "1341970",
    "end": "1348450"
  },
  {
    "text": "you can deploy the same certificate in multiple regions and this is at now just",
    "start": "1348450",
    "end": "1353970"
  },
  {
    "start": "1351000",
    "end": "1443000"
  },
  {
    "text": "hands on to show how this work so I",
    "start": "1353970",
    "end": "1362549"
  },
  {
    "text": "don't have the console I close it so this is the the console so the first thing is I want to show how easy is to",
    "start": "1362549",
    "end": "1368759"
  },
  {
    "text": "create dynamic big global table so let's",
    "start": "1368759",
    "end": "1374940"
  },
  {
    "text": "go in in Ireland for example I want to",
    "start": "1374940",
    "end": "1381240"
  },
  {
    "text": "let's make it a little bit bigger I'll create a table with DynamoDB and let's",
    "start": "1381240",
    "end": "1387570"
  },
  {
    "text": "call it build day and then I with",
    "start": "1387570",
    "end": "1394230"
  },
  {
    "text": "Dunwoody B you have a flexible schema you only have to define the primary key that can be a single key or a compost",
    "start": "1394230",
    "end": "1401009"
  },
  {
    "text": "key with two variables let's go for a single key let's say that here we have a an ID that is a string or example and",
    "start": "1401009",
    "end": "1408539"
  },
  {
    "text": "then all the other attributes and fields are dynamic and each record each item can be different I can use the default",
    "start": "1408539",
    "end": "1415950"
  },
  {
    "text": "setting so we enabled if you don't know how to scaling for dynamodb so basically it will automatically scale the throughput and you pay by the throughput",
    "start": "1415950",
    "end": "1422490"
  },
  {
    "text": "so that also optimizing your cost depending on how much you use the table",
    "start": "1422490",
    "end": "1428570"
  },
  {
    "text": "so now we are I'm creating the the table and the table usually takes a few a few",
    "start": "1428570",
    "end": "1434519"
  },
  {
    "text": "seconds to be finished and cheering the console you see you have multiple tabs where I can see the items the matrix and",
    "start": "1434519",
    "end": "1440399"
  },
  {
    "text": "so on and there is the new tab is the global tables and the first things that assess me if you want to create a global",
    "start": "1440399",
    "end": "1446730"
  },
  {
    "start": "1443000",
    "end": "1544000"
  },
  {
    "text": "table you have to enable dynamodb streams it is this technology that gives you a stream of changes from the",
    "start": "1446730",
    "end": "1453059"
  },
  {
    "text": "database and we will use this stream of changes to propagate the changes so let's enable the streams and now I can",
    "start": "1453059",
    "end": "1460230"
  },
  {
    "text": "add multiple regions to this so for now we support this five regions",
    "start": "1460230",
    "end": "1467100"
  },
  {
    "text": "so yeah Ireland Frankfort and these three in the US and we are going to extend this this feature to other",
    "start": "1467100",
    "end": "1474420"
  },
  {
    "text": "regions so let's create a replica in Oregon the region is okay I just click",
    "start": "1474420",
    "end": "1481320"
  },
  {
    "text": "and now the table is being created in Oregon and Oregon with with Ireland as",
    "start": "1481320",
    "end": "1487620"
  },
  {
    "text": "probably 200 milliseconds this is not 300 mil 250 milliseconds of latency on",
    "start": "1487620",
    "end": "1494610"
  },
  {
    "text": "the internet I can click here and go on the table and this is dynamodb in Oregon",
    "start": "1494610",
    "end": "1501020"
  },
  {
    "text": "and we see that the builders table has been created so this table is now empty",
    "start": "1501020",
    "end": "1507180"
  },
  {
    "text": "there's no item and this table is also empty ear if I want I can add multiple",
    "start": "1507180",
    "end": "1513270"
  },
  {
    "text": "regions so that it's not just for two regions I can add for example North Virginia and as many region as I want",
    "start": "1513270",
    "end": "1522240"
  },
  {
    "text": "and we will replicate across all of them so you can create two regions consider",
    "start": "1522240",
    "end": "1527370"
  },
  {
    "text": "that in each region DynamoDB is storing the data in three different data centers so basically the data data store now is",
    "start": "1527370",
    "end": "1533250"
  },
  {
    "text": "storing three different continents with three different data center in each consonant so it's it's quite highly",
    "start": "1533250",
    "end": "1539910"
  },
  {
    "text": "durable the architecture we're creating so now we have the three regions so",
    "start": "1539910",
    "end": "1546120"
  },
  {
    "text": "let's start and see if it works and x dynamo do streams as a slow start as I call it but this is my table let's",
    "start": "1546120",
    "end": "1553290"
  },
  {
    "text": "create an ID that is Danilo and then I can add another string that is my role",
    "start": "1553290",
    "end": "1562380"
  },
  {
    "text": "I'm an evangelist and I think it's modern enough for this demo so now I",
    "start": "1562380",
    "end": "1568080"
  },
  {
    "text": "have created this record and it's here in in Ireland and if I go here I'm in",
    "start": "1568080",
    "end": "1574050"
  },
  {
    "text": "Oregon and I reload we see the same record and if I click we see that we",
    "start": "1574050",
    "end": "1581370"
  },
  {
    "text": "have the same information and we have this metadata that is automatically added that tells you the update region",
    "start": "1581370",
    "end": "1586920"
  },
  {
    "text": "and the update time so that if you want to add additional logic since this is not synchronous you can use this",
    "start": "1586920",
    "end": "1592830"
  },
  {
    "text": "information for example conflict resolutions in kado our varieties so we created a global table",
    "start": "1592830",
    "end": "1599050"
  },
  {
    "text": "in just a few seconds I already did that previously so let's go back to Ireland",
    "start": "1599050",
    "end": "1604390"
  },
  {
    "text": "if not because it's a little bit faster so this multi-region table is something",
    "start": "1604390",
    "end": "1609550"
  },
  {
    "text": "that I already created and there's a record with ID 1 2 3 and and test 1 2 3",
    "start": "1609550",
    "end": "1615400"
  },
  {
    "text": "so you see the fantasy I put in my in demos is is incredible and what what I",
    "start": "1615400",
    "end": "1621730"
  },
  {
    "start": "1619000",
    "end": "1682000"
  },
  {
    "text": "did here so I created the table and then the next level is to create a lambda function so I created a lambda function so if you",
    "start": "1621730",
    "end": "1629410"
  },
  {
    "text": "search for a multi this is the multi region function and since I'm a very lazy person and but they say that",
    "start": "1629410",
    "end": "1636250"
  },
  {
    "text": "laziness is good for development because brings you to do to don't redo the same thing again and again I use the same",
    "start": "1636250",
    "end": "1642280"
  },
  {
    "text": "function that we saw today with express or the read write from dynamodb but I deploy I change the target table and I",
    "start": "1642280",
    "end": "1648970"
  },
  {
    "text": "deploy this function across multiple regions so this function is now here in Ireland and it should be also if we go",
    "start": "1648970",
    "end": "1657370"
  },
  {
    "text": "in US East one so in North Virginia and",
    "start": "1657370",
    "end": "1662890"
  },
  {
    "text": "we go on functions and we have here the",
    "start": "1662890",
    "end": "1668740"
  },
  {
    "text": "same multi-region function so this is Ireland this is not Virginia for both I",
    "start": "1668740",
    "end": "1674380"
  },
  {
    "text": "enable the API gateway nice when you do",
    "start": "1674380",
    "end": "1679630"
  },
  {
    "text": "the demo something always happens so I think it's not working because I changed",
    "start": "1679630",
    "end": "1685060"
  },
  {
    "start": "1682000",
    "end": "1728000"
  },
  {
    "text": "the DNA so it's I went past the default in so I created this from the console",
    "start": "1685060",
    "end": "1691240"
  },
  {
    "text": "API gateway from the console so it was an edge optimized an optimized API but",
    "start": "1691240",
    "end": "1697660"
  },
  {
    "text": "then I change it to regional and I don't think the console is aware of that here but let's go on the API gateway because",
    "start": "1697660",
    "end": "1704350"
  },
  {
    "text": "that's what I wanted to show",
    "start": "1704350",
    "end": "1707820"
  },
  {
    "text": "and the API gateway here so this is the API get we in in Ireland and I have this",
    "start": "1710040",
    "end": "1717000"
  },
  {
    "text": "multi region API that it's calling the the lambda function so if we call here",
    "start": "1717000",
    "end": "1724650"
  },
  {
    "text": "it's using the multi region function and if we go here with a custom domain names",
    "start": "1724650",
    "end": "1731040"
  },
  {
    "start": "1728000",
    "end": "1813000"
  },
  {
    "text": "so first of all if we go at API level you can see that this API is a regional",
    "start": "1731040",
    "end": "1737790"
  },
  {
    "text": "endpoint so it's not distributed to the content delivery network then if I go on",
    "start": "1737790",
    "end": "1743580"
  },
  {
    "text": "custom domain names okay this is the the one so I have multi region dot demo dot",
    "start": "1743580",
    "end": "1749160"
  },
  {
    "text": "Danilo's net this is my domain and then I have this in a blood for the multi",
    "start": "1749160",
    "end": "1757020"
  },
  {
    "text": "region API so basically if I go on this DNA what is here saying is saying that",
    "start": "1757020",
    "end": "1763250"
  },
  {
    "text": "if the API gateway receives a request with this domain name it should be",
    "start": "1763250",
    "end": "1769080"
  },
  {
    "text": "routed to this API and since the API Godot is working in HTTP it needs also a",
    "start": "1769080",
    "end": "1777120"
  },
  {
    "text": "certificate so I deploy it this certificate so this API can receive request with this domain name and it the",
    "start": "1777120",
    "end": "1784350"
  },
  {
    "text": "SSL certificate would be correct if your if you know how that works",
    "start": "1784350",
    "end": "1789480"
  },
  {
    "text": "we're using SNI because the same IP address are used by multiple certificates so basically you receive",
    "start": "1789480",
    "end": "1796680"
  },
  {
    "text": "the connection you the the client tells I want to connect in HTTP for this domain and the packet we will check that",
    "start": "1796680",
    "end": "1803250"
  },
  {
    "text": "the domain is a domain where the certificate is installed and then we say okay and then just the SSL handshake",
    "start": "1803250",
    "end": "1809910"
  },
  {
    "text": "with the right certificate but no dns",
    "start": "1809910",
    "end": "1814920"
  },
  {
    "start": "1813000",
    "end": "1880000"
  },
  {
    "text": "configuration is done here this is just to tell to API gateway if you receive the request with this domain you have",
    "start": "1814920",
    "end": "1820530"
  },
  {
    "text": "the certificate and you can answer those requests DNS is completely not affected by this configuration and of course we",
    "start": "1820530",
    "end": "1827640"
  },
  {
    "text": "have the same configuration here in North Virginia here I just have this one where I have the same the target",
    "start": "1827640",
    "end": "1834150"
  },
  {
    "text": "endpoint is different so you see that the target point in the here is in US East one and the target point here was",
    "start": "1834150",
    "end": "1841620"
  },
  {
    "text": "in EU West one so to different regions and they both can answer to the same domain so the next",
    "start": "1841620",
    "end": "1848059"
  },
  {
    "text": "step is the DNS so let's go to route 53 so the DNS is it's a different service",
    "start": "1848059",
    "end": "1855830"
  },
  {
    "text": "from the others as you see here is global because when you configure a DNS it doesn't make sense to configure it in",
    "start": "1855830",
    "end": "1861110"
  },
  {
    "text": "Ireland or in the US that's a single DNS service for all the internet and we want",
    "start": "1861110",
    "end": "1866270"
  },
  {
    "text": "to be part of that service so you have a global configuration and if I go here I see the hosted zones and I have this",
    "start": "1866270",
    "end": "1873160"
  },
  {
    "text": "domain so demo dot danilo dotnet is my zone where I can create different",
    "start": "1873160",
    "end": "1879140"
  },
  {
    "text": "records and here I have this multi region dot demo dot need up the net that",
    "start": "1879140",
    "end": "1885740"
  },
  {
    "start": "1880000",
    "end": "1926000"
  },
  {
    "text": "is a traffic policy record so it's not a normal record so it's not mapping to a single endpoint I'm using a traffic",
    "start": "1885740",
    "end": "1891980"
  },
  {
    "text": "policy here so if I go on traffic policy I can see that I have a multi region policy that I can select and basically",
    "start": "1891980",
    "end": "1899690"
  },
  {
    "text": "I'm saying that you receive a cname and this rename must be mapped into two",
    "start": "1899690",
    "end": "1906620"
  },
  {
    "text": "regions using a latency rule so here you can graphically design the rules that we",
    "start": "1906620",
    "end": "1911780"
  },
  {
    "text": "saw before so way it's latency country based lots of different rules in this",
    "start": "1911780",
    "end": "1917780"
  },
  {
    "text": "case I used lesson C so if it's coming from the redundancy is lower for the u.s. you go here if it's lower for the",
    "start": "1917780",
    "end": "1924440"
  },
  {
    "text": "EU you go here this should be enabled then I can double check otherwise we can",
    "start": "1924440",
    "end": "1930890"
  },
  {
    "start": "1926000",
    "end": "1987000"
  },
  {
    "text": "edit yeah so I have you can I want to",
    "start": "1930890",
    "end": "1936020"
  },
  {
    "text": "enable target health so that means that I can check that this region is working and if one of the two is not working the",
    "start": "1936020",
    "end": "1943040"
  },
  {
    "text": "rule will be disabled so all the users will be sent to the other region and then rule is linked to a single endpoint",
    "start": "1943040",
    "end": "1950330"
  },
  {
    "text": "that is the regional endpoint of the of the API gateway so the same target",
    "start": "1950330",
    "end": "1955640"
  },
  {
    "text": "domain that we see here so that means",
    "start": "1955640",
    "end": "1961130"
  },
  {
    "text": "that this auth will receive the the request the request will come with the multi region domain and the multi region",
    "start": "1961130",
    "end": "1969770"
  },
  {
    "text": "domain will be mapped correctly to a local certificate so the SSL handshake will work it's a little bit",
    "start": "1969770",
    "end": "1976610"
  },
  {
    "text": "flex but that's the tricky part you need to be careful when you build this kind of globally distributed architecture",
    "start": "1976610",
    "end": "1981730"
  },
  {
    "text": "because if the DNS is not working then the client will fail so let's save us a",
    "start": "1981730",
    "end": "1988850"
  },
  {
    "start": "1987000",
    "end": "2033000"
  },
  {
    "text": "new version so this is version 6 and then we can go into the policy record",
    "start": "1988850",
    "end": "1994280"
  },
  {
    "text": "this is my policy record and go to version 6 so you link a policy record to others so",
    "start": "1994280",
    "end": "2000790"
  },
  {
    "text": "now we have this domain that the DNS is mapping to the this workflow and it's",
    "start": "2000790",
    "end": "2006970"
  },
  {
    "text": "sending from one part to the other so let's see what happens if I okay let's interrupt this let's see if I try to do",
    "start": "2006970",
    "end": "2016419"
  },
  {
    "text": "the most basic things ons look up this is how to check a DNS and we see that we",
    "start": "2016419",
    "end": "2023610"
  },
  {
    "text": "I'm getting this translated to the different multiple IP address that are",
    "start": "2023610",
    "end": "2029140"
  },
  {
    "text": "all in the EU West one so from here I'm sent to Ireland if I'm not mistaken",
    "start": "2029140",
    "end": "2035260"
  },
  {
    "start": "2033000",
    "end": "2116000"
  },
  {
    "text": "yesterday I left an ec2 instance running in the US just for this purpose",
    "start": "2035260",
    "end": "2042090"
  },
  {
    "text": "so in North Virginia or in Oregon I think I went as far as Oregon no that's",
    "start": "2042090",
    "end": "2053290"
  },
  {
    "text": "because I since us is two so in Ohio",
    "start": "2053290",
    "end": "2058960"
  },
  {
    "text": "sorry so you know IO we have a running",
    "start": "2058960",
    "end": "2064060"
  },
  {
    "text": "instance that I started yesterday and now we can just connect so I'll use SSH",
    "start": "2064060",
    "end": "2071260"
  },
  {
    "text": "to connect now I'm in Ohio so we can",
    "start": "2071260",
    "end": "2077590"
  },
  {
    "text": "just copy the same command that I did before and of course now the resolution",
    "start": "2077590",
    "end": "2084970"
  },
  {
    "text": "is different I'm sent to us East one to North Virginia so this is just to show that it works and now what I can do I",
    "start": "2084970",
    "end": "2093368"
  },
  {
    "text": "can we can do that in Ohio this is see URL it's just to simulate",
    "start": "2093369",
    "end": "2102369"
  },
  {
    "text": "the API endpoint and I get the item from the nmo DB and if I take this I can even",
    "start": "2102369",
    "end": "2108820"
  },
  {
    "text": "run this in my Ross browser and of course here I'm sent to the west so we have a multi regional",
    "start": "2108820",
    "end": "2118480"
  },
  {
    "start": "2116000",
    "end": "2178000"
  },
  {
    "text": "endpoint what can I do I can go for example in Europe and I can kill a",
    "start": "2118480",
    "end": "2125380"
  },
  {
    "text": "lambda function so what can I kill a lambda function as I said before you can kill a lambda function by moving the",
    "start": "2125380",
    "end": "2136300"
  },
  {
    "text": "concurrency to zero so if this is the",
    "start": "2136300",
    "end": "2142180"
  },
  {
    "text": "DNS console so in the in the l check you",
    "start": "2142180",
    "end": "2148210"
  },
  {
    "text": "can define multiple L check so this is the L check that I define but for a West",
    "start": "2148210",
    "end": "2154780"
  },
  {
    "text": "and us East there are different speeds so I use now the first ones here this is",
    "start": "2154780",
    "end": "2162220"
  },
  {
    "text": "something normally tricky with demos so when you want to do a demo you want to be very fast but this is a production architecture before doing disaster",
    "start": "2162220",
    "end": "2169660"
  },
  {
    "text": "recovery from one region to another probably you want to wait a few minutes before doing the disaster recovery so I",
    "start": "2169660",
    "end": "2175720"
  },
  {
    "text": "meant that the faster rule so what we can do we can go here on lambda and say",
    "start": "2175720",
    "end": "2181359"
  },
  {
    "start": "2178000",
    "end": "2249000"
  },
  {
    "text": "ok this lambda function in Ireland has zero concurrency I can save it so now",
    "start": "2181359",
    "end": "2188710"
  },
  {
    "text": "this lambda function is not working anymore so if I try to go here now I should get an error because currently is",
    "start": "2188710",
    "end": "2195550"
  },
  {
    "text": "too fast for the switch of the region and if we go here we see that is still",
    "start": "2195550",
    "end": "2202119"
  },
  {
    "text": "everything healthy because it takes always a little bit of time but if we select the EU fast we should start to",
    "start": "2202119",
    "end": "2210099"
  },
  {
    "text": "see that the we start to get failures you see the DNS started to get failure",
    "start": "2210099",
    "end": "2217390"
  },
  {
    "text": "so I think it's configured with like 30 seconds 1 minute of failover and then there's the DNS propagation that is",
    "start": "2217390",
    "end": "2224470"
  },
  {
    "text": "roughly 60 seconds so in a Matt in less than 2 minutes this DNS will start to",
    "start": "2224470",
    "end": "2231040"
  },
  {
    "text": "send all the users to the other to the other region so let's see if still still",
    "start": "2231040",
    "end": "2238390"
  },
  {
    "text": "LT and we can maybe come back in so let's just quickly review what we",
    "start": "2238390",
    "end": "2245210"
  },
  {
    "text": "just did and then we can check the failover of the region so that's the",
    "start": "2245210",
    "end": "2250670"
  },
  {
    "start": "2249000",
    "end": "2315000"
  },
  {
    "text": "architecture we built we started with creating a global table with dynamodb s",
    "start": "2250670",
    "end": "2255920"
  },
  {
    "text": "or something that in the past was not so easy to do now you can create a global table across two or more regions and",
    "start": "2255920",
    "end": "2262790"
  },
  {
    "text": "this is the step so we just I have this screen shot so you can see the slides afterwards so we just added enable the",
    "start": "2262790",
    "end": "2270320"
  },
  {
    "text": "stream then you can add one or more regions and then it works then we added",
    "start": "2270320",
    "end": "2275570"
  },
  {
    "text": "the lambda function in each region so you can automate that transformation as",
    "start": "2275570",
    "end": "2280640"
  },
  {
    "text": "a specific global deployment policies where you can create global deployments across multiple regions so if you want",
    "start": "2280640",
    "end": "2286820"
  },
  {
    "text": "you can still use confirmation to manage across multiple regions a single deployments then I configure the API",
    "start": "2286820",
    "end": "2293540"
  },
  {
    "text": "gateway and then I need to have the same SSL certificate by used by all the API",
    "start": "2293540",
    "end": "2300950"
  },
  {
    "text": "gateways otherwise my SSL handshake would fail so I use the regional endpoint and then I use the DNS to",
    "start": "2300950",
    "end": "2307250"
  },
  {
    "text": "balance I chose latency balancing and enable health checks so that if one region is",
    "start": "2307250",
    "end": "2313100"
  },
  {
    "text": "not working it will fail over on the other and this is an example of the policy that we just did here instead of",
    "start": "2313100",
    "end": "2319580"
  },
  {
    "start": "2315000",
    "end": "2406000"
  },
  {
    "text": "latency I'm using musing latency wait wait so instead of lettuce I'm using",
    "start": "2319580",
    "end": "2325220"
  },
  {
    "text": "weights probably doesn't make sense if you go regional but it's just another example and we reach in the conclusion",
    "start": "2325220",
    "end": "2333440"
  },
  {
    "text": "for this part so this was I think a slightly different presentation from the",
    "start": "2333440",
    "end": "2339800"
  },
  {
    "text": "one before us we talked a little bit about what reliability and availability means how those numbers can be",
    "start": "2339800",
    "end": "2345080"
  },
  {
    "text": "implemented in practice we saw how we can use resiliency inside a single",
    "start": "2345080",
    "end": "2350660"
  },
  {
    "text": "region with multi availability zones and if you go fully managed with surveillance you can even go further and",
    "start": "2350660",
    "end": "2356420"
  },
  {
    "text": "start to go multi region with global tables from dynamodb and we saw how to",
    "start": "2356420",
    "end": "2362720"
  },
  {
    "text": "build it how to design it and usually the tricky part it's the DNS and SSL part because you",
    "start": "2362720",
    "end": "2369410"
  },
  {
    "text": "need to keep all those in sync otherwise you get security errors and that's good",
    "start": "2369410",
    "end": "2374780"
  },
  {
    "text": "because the the of course this is exactly",
    "start": "2374780",
    "end": "2379999"
  },
  {
    "text": "similar to a man-in-the-middle attack no because I have two similar service and I can go in one or two the order when you",
    "start": "2379999",
    "end": "2386390"
  },
  {
    "text": "see the man in the middle attack is someone is trying to pretend to be another website so the only way to overcome that is to have the same",
    "start": "2386390",
    "end": "2392539"
  },
  {
    "text": "certificate so to generate those certificates I'm the domain owner I need to enable",
    "start": "2392539",
    "end": "2398029"
  },
  {
    "text": "all those certificates otherwise if you want to enable a certificate we don't we can produce a certificate if you don't",
    "start": "2398029",
    "end": "2404450"
  },
  {
    "text": "get the okay from the domain owner so let's go quickly back here and see if I okay now you see that EU s both the fast",
    "start": "2404450",
    "end": "2412819"
  },
  {
    "start": "2406000",
    "end": "2464000"
  },
  {
    "text": "and the slow one are an LT so if we go back here so let's exit from the virtual",
    "start": "2412819",
    "end": "2418999"
  },
  {
    "text": "machine so I'm back on my local computer and now if I do an S lookup I'm sent in",
    "start": "2418999",
    "end": "2426170"
  },
  {
    "text": "the u.s. not in Ireland anymore but if I do the I don't maybe let's okay I lost",
    "start": "2426170",
    "end": "2436940"
  },
  {
    "text": "it so let's copy and paste let if I do there I call the API again for me it's",
    "start": "2436940",
    "end": "2442400"
  },
  {
    "text": "transparent now I still get an answer probably slightly slower than before because I'm going to Virginia instead of",
    "start": "2442400",
    "end": "2448970"
  },
  {
    "text": "of Ireland but it works transparently for me and it usually takes like a",
    "start": "2448970",
    "end": "2454579"
  },
  {
    "text": "couple of minutes and most of the time is DNS propagation because of course this is something that as fast as you go",
    "start": "2454579",
    "end": "2460880"
  },
  {
    "text": "you usually have 60 seconds of invalidation of a DNS record and with",
    "start": "2460880",
    "end": "2466039"
  },
  {
    "start": "2464000",
    "end": "2503000"
  },
  {
    "text": "this we're almost there there's still another another presentation but we're a",
    "start": "2466039",
    "end": "2472700"
  },
  {
    "text": "little bit early so let me just double check on the schedule so the process the next presentation is 344 so we have 15",
    "start": "2472700",
    "end": "2482630"
  },
  {
    "text": "minutes of break wet it's almost Alphen hour so I'm happy to get some questions",
    "start": "2482630",
    "end": "2488049"
  },
  {
    "text": "and and then we do the break",
    "start": "2488049",
    "end": "2492579"
  },
  {
    "text": "why you see names instead of so alyas",
    "start": "2496280",
    "end": "2504420"
  },
  {
    "start": "2503000",
    "end": "2916000"
  },
  {
    "text": "record you can look use alias records with the API gateway locally so",
    "start": "2504420",
    "end": "2511650"
  },
  {
    "text": "basically with an alias record you can map a single value so with alias you can create the the traffic flow but for",
    "start": "2511650",
    "end": "2519090"
  },
  {
    "text": "example for this other configuration that I have so I created another local",
    "start": "2519090",
    "end": "2526350"
  },
  {
    "text": "regional endpoint and I use analogous but you can use the alias only for without the traffic policy there is a",
    "start": "2526350",
    "end": "2533100"
  },
  {
    "text": "trick so if you create an alias normally you you create alias in your own account so analyst for a cloud food distribution",
    "start": "2533100",
    "end": "2540480"
  },
  {
    "text": "or an ELB that you manage with the API gateway the API gateway is managing the",
    "start": "2540480",
    "end": "2547920"
  },
  {
    "text": "the load balancer that is used by the API gateway and the resources so there is a procedure in the documentation",
    "start": "2547920",
    "end": "2554460"
  },
  {
    "text": "where you need to link the awliyas with a different account and there's a",
    "start": "2554460",
    "end": "2559920"
  },
  {
    "text": "procedure to do that so basically you need in the DNS to give access to a different hosted zone that is managed by",
    "start": "2559920",
    "end": "2566040"
  },
  {
    "text": "the zone idea is managed by the API gateway but you can do that but if you",
    "start": "2566040",
    "end": "2572100"
  },
  {
    "text": "need to define a traffic flow then you need to user alias",
    "start": "2572100",
    "end": "2578869"
  },
  {
    "text": "what's the fault Allah the question is",
    "start": "2590990",
    "end": "2602060"
  },
  {
    "text": "with global tables you can do read and writes what's the default config resolution so by default we just",
    "start": "2602060",
    "end": "2608640"
  },
  {
    "text": "overwrite so the last will overwrite a last write will overwrite you get the time so you can use that to to",
    "start": "2608640",
    "end": "2616320"
  },
  {
    "text": "eventually take decisions and the second question is if I already have a table so currently you can enable global tables",
    "start": "2616320",
    "end": "2623430"
  },
  {
    "text": "only for an empty table like the one that I created so you would need to",
    "start": "2623430",
    "end": "2628440"
  },
  {
    "text": "migrate the data from a table to the new global table but since lots of customer is asking for this feature I can tell",
    "start": "2628440",
    "end": "2634860"
  },
  {
    "text": "you that we are working on this but I can give you an expectation on the date for now",
    "start": "2634860",
    "end": "2640050"
  },
  {
    "text": "but we're working on this so if you have a very large table that you want to transform to global my suggestion is",
    "start": "2640050",
    "end": "2645930"
  },
  {
    "text": "reached to me or to the solution architect and then we can work together I understand if the the time frame is",
    "start": "2645930",
    "end": "2651420"
  },
  {
    "text": "compatible with your business case otherwise you can you need to move the data manually so for the question is on",
    "start": "2651420",
    "end": "2667740"
  },
  {
    "text": "the Geo policies of route 53 that we also have the similar in cloud front we I think we have all the country codes",
    "start": "2667740",
    "end": "2674580"
  },
  {
    "text": "that are set by the United Nations something like that and we make it as much accurate as possible so IP address",
    "start": "2674580",
    "end": "2682800"
  },
  {
    "text": "is not perfect so depending on on your licensing issues we can check if what we",
    "start": "2682800",
    "end": "2688350"
  },
  {
    "text": "do is compatible or not for China I'm",
    "start": "2688350",
    "end": "2694980"
  },
  {
    "text": "not aware of this detail maybe we can see this offline but we try to be as accurate as possible but IP address are",
    "start": "2694980",
    "end": "2702180"
  },
  {
    "text": "not always accurate by themselves but normally this is enough for normal licensing for example and there are",
    "start": "2702180",
    "end": "2709860"
  },
  {
    "text": "questions yeah",
    "start": "2709860",
    "end": "2714350"
  },
  {
    "text": "yes yes yes but sorry I was not clear so",
    "start": "2719430",
    "end": "2734319"
  },
  {
    "text": "the question is the replication is all - all yes with mutti mutti region what",
    "start": "2734319",
    "end": "2739779"
  },
  {
    "text": "happens is that you can write in any table and we will replicate in any in",
    "start": "2739779",
    "end": "2744880"
  },
  {
    "text": "all the other tables and then you get those metadata that we add that tells you the origin and the origin point so",
    "start": "2744880",
    "end": "2754630"
  },
  {
    "text": "you can overwrite if you want to overwrite you can use like a sort key -",
    "start": "2754630",
    "end": "2760170"
  },
  {
    "text": "together with the ID key so that for example the source key can be a timestamp and then you don't have a",
    "start": "2760170",
    "end": "2765369"
  },
  {
    "text": "right but you append so that could be a good way to get more information and",
    "start": "2765369",
    "end": "2772109"
  },
  {
    "text": "this typically this happens a lot with distributed architecture you should",
    "start": "2772109",
    "end": "2778150"
  },
  {
    "text": "start to embrace event where consistency instead of straight consistency with the",
    "start": "2778150",
    "end": "2785619"
  },
  {
    "text": "stree for example if you update the same object we have we don't have sweet consistency you get a ventral",
    "start": "2785619",
    "end": "2791049"
  },
  {
    "text": "consistency of data and in Amazon we use that a lot so you should start to think",
    "start": "2791049",
    "end": "2796119"
  },
  {
    "text": "that data may not be consistent globally in any point of time but it will at some point in time so if you think in that",
    "start": "2796119",
    "end": "2801849"
  },
  {
    "text": "way your architecture it's much more robust and I think it that would should be the way to go for a distributed",
    "start": "2801849",
    "end": "2807430"
  },
  {
    "text": "architecture yeah",
    "start": "2807430",
    "end": "2813859"
  },
  {
    "text": "without loyalty if I said if I subscribe do we DynamoDB table stream if they're",
    "start": "2813859",
    "end": "2819499"
  },
  {
    "text": "not creates a global table and then let's say I put backgrounds three regions like nine table if I'm",
    "start": "2819499",
    "end": "2826549"
  },
  {
    "text": "subscribing to the stream is the still just one stream the stream is still regional so you subscribed through this",
    "start": "2826549",
    "end": "2832670"
  },
  {
    "text": "to a stream at original level so you get the stream from the table in one of the regions so you will get the updates from",
    "start": "2832670",
    "end": "2838339"
  },
  {
    "text": "that table in the tree John so you will see all the updates but with the perspective the point of view of the",
    "start": "2838339",
    "end": "2844069"
  },
  {
    "text": "region where you create the stream yes",
    "start": "2844069",
    "end": "2856219"
  },
  {
    "text": "of course if you write two counters in global with the two with three tables to",
    "start": "2856219",
    "end": "2864109"
  },
  {
    "text": "you you can get so normally a use case",
    "start": "2864109",
    "end": "2869359"
  },
  {
    "text": "where this works very well is where each customer has their own data so depending on where they are they access their own",
    "start": "2869359",
    "end": "2875509"
  },
  {
    "text": "data through in this way so they access the private the local data very quickly they can update it and this is",
    "start": "2875509",
    "end": "2881660"
  },
  {
    "text": "propagated if you start to have like a single counter that can be accessed by two customers that can be in two",
    "start": "2881660",
    "end": "2886789"
  },
  {
    "text": "different regions then this architect the eventual consistency in that case will not work well so you need to change",
    "start": "2886789",
    "end": "2893690"
  },
  {
    "text": "the data model any other question",
    "start": "2893690",
    "end": "2899959"
  },
  {
    "text": "otherwise we can take like 20 minutes and the final session here and also in",
    "start": "2899959",
    "end": "2906739"
  },
  {
    "text": "the other room will start at 45 thank you [Applause]",
    "start": "2906739",
    "end": "2918320"
  }
]