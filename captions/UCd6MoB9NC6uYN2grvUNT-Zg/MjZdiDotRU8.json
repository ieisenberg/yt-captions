[
  {
    "text": "all right well good afternoon everyone we're going to go ahead and get started with the scalable media processing session my",
    "start": "799",
    "end": "7919"
  },
  {
    "text": "name is david syed i'm the product manager for the amazon elastic transcoder service",
    "start": "7919",
    "end": "14160"
  },
  {
    "text": "which we released at the end of january this year so i was here at re invent last year and",
    "start": "14160",
    "end": "19439"
  },
  {
    "text": "was giving a talk on scalable media processing and wasn't unfortunately able to tell anyone about the new service that",
    "start": "19439",
    "end": "26000"
  },
  {
    "text": "that we were building at that time but the service is out now and hopefully some of you are actually using it",
    "start": "26000",
    "end": "31519"
  },
  {
    "text": "i'll be joined later on by phil clough from the bbc who will be talking about",
    "start": "31519",
    "end": "36719"
  },
  {
    "text": "how they are using aws to do scalable media processing in the cloud",
    "start": "36719",
    "end": "42160"
  },
  {
    "text": "media here in this session really refers to to video and audio content so perhaps you're a media and entertainment",
    "start": "42160",
    "end": "49120"
  },
  {
    "text": "company maybe a broadcaster a movie studio a post-production house",
    "start": "49120",
    "end": "54399"
  },
  {
    "text": "or perhaps you build applications and websites that work with user generated content so that's the",
    "start": "54399",
    "end": "59680"
  },
  {
    "text": "context for media media could also be images as well but i'm primarily",
    "start": "59680",
    "end": "65280"
  },
  {
    "text": "focusing on video and audio content i want to get a quick feel for the",
    "start": "65280",
    "end": "71760"
  },
  {
    "text": "audience um i'd love to if you could raise your hand and let me know if you do media processing in the cloud today",
    "start": "71760",
    "end": "79200"
  },
  {
    "text": "all right i would say that's probably about a third of you um and then for how many of you actually",
    "start": "79200",
    "end": "85040"
  },
  {
    "text": "write code every day okay that's probably about another third",
    "start": "85040",
    "end": "90479"
  },
  {
    "text": "as well okay so for those of you are hardcore developers you can have a nap for a few minutes and",
    "start": "90479",
    "end": "95920"
  },
  {
    "text": "phil will wake you up with a with a lively video and then we'll get in he'll actually get",
    "start": "95920",
    "end": "101119"
  },
  {
    "text": "into some of the underlying architecture and so on what i wanted to do first is to give you",
    "start": "101119",
    "end": "107280"
  },
  {
    "text": "some overall context around media workflows and really talk about media workflows and the main point of this slide is just",
    "start": "107280",
    "end": "113520"
  },
  {
    "text": "to say that there are many media workflows many different kinds uh many different requirements as well",
    "start": "113520",
    "end": "119520"
  },
  {
    "text": "you use media workflows to go from what's on the left hand side of the screen to what's on the right hand side of the screen so you have lots of",
    "start": "119520",
    "end": "125520"
  },
  {
    "text": "different kinds of content over on the left going to lots of different types of output formats and",
    "start": "125520",
    "end": "130640"
  },
  {
    "text": "requirements over on the right hand side some of you will probably be quite familiar with some of these",
    "start": "130640",
    "end": "136160"
  },
  {
    "text": "and the challenge is that there generally isn't one particular type of workflow that fits all of these requirements you have",
    "start": "136160",
    "end": "142000"
  },
  {
    "text": "a variety of them you have a mishmash of them some of them are completely on premise some of them are hardware related some",
    "start": "142000",
    "end": "148080"
  },
  {
    "text": "of them have lots of human interaction some of them have moved into the cloud in some way",
    "start": "148080",
    "end": "153840"
  },
  {
    "text": "the steps themselves though are fairly straightforward you know it's generally moving something from this location to that location",
    "start": "153840",
    "end": "160319"
  },
  {
    "text": "performing some operations on it moving it across and so on so the workflow itself the steps are relatively",
    "start": "160319",
    "end": "165440"
  },
  {
    "text": "straightforward but there are some industry trends that are making workflows more complicated",
    "start": "165440",
    "end": "171440"
  },
  {
    "text": "and i'll share with you four that i'm observing at the moment first of all there's there's a lot more content um at the professional end of",
    "start": "171440",
    "end": "179280"
  },
  {
    "text": "the market so if you're a broadcaster or uh or making movies and so on",
    "start": "179280",
    "end": "184480"
  },
  {
    "text": "what you tend to find is that there's just a large amount of content",
    "start": "184480",
    "end": "189599"
  },
  {
    "text": "sources that you need to deal with not just the actual show content itself different versions of the show content",
    "start": "189599",
    "end": "196720"
  },
  {
    "text": "there might be additional material like interviews feature ads value-added content that is all used to enable different",
    "start": "196720",
    "end": "204400"
  },
  {
    "text": "versions of the content as well as different monetization options at the consumer end",
    "start": "204400",
    "end": "212879"
  },
  {
    "text": "of the market everyone is carrying around a 1080p camcorder it's in your phone and in fact when you",
    "start": "212879",
    "end": "220159"
  },
  {
    "text": "look at the the market statistics you know a typical hollywood studio does about nine movies a year let's say",
    "start": "220159",
    "end": "227200"
  },
  {
    "text": "and you multiply out that out by the number of studios you multiply that out by the number of tv shows that are shot",
    "start": "227200",
    "end": "233680"
  },
  {
    "text": "you look at that amount of content and compare it to the amount of content that's being filmed by",
    "start": "233680",
    "end": "238959"
  },
  {
    "text": "people on their phones and it's a drop in the ocean amazingly so that user generated content is absolutely massive",
    "start": "238959",
    "end": "246239"
  },
  {
    "text": "i look at my kids i have a seven year old and a nine-year-old my nine-year-old will quite happily fill up my ipad with",
    "start": "246239",
    "end": "252879"
  },
  {
    "text": "videos that she's shot of playing with dolls and so on and so forth and i always wonder why on earth is my ipad",
    "start": "252879",
    "end": "258079"
  },
  {
    "text": "out of memory that's why so there's all this content that's being generated and the more content there is there's a greater",
    "start": "258079",
    "end": "264080"
  },
  {
    "text": "opportunity to monetize it the second trend is that content is",
    "start": "264080",
    "end": "269600"
  },
  {
    "text": "getting bigger so the industry is moving to some combination of more pixels faster pixels and better",
    "start": "269600",
    "end": "277199"
  },
  {
    "text": "pixels and if we break that down a little bit more pixels really refers to 4k",
    "start": "277199",
    "end": "282320"
  },
  {
    "text": "and beyond so generally we're dealing with 720 1080p content 4k four times the amount of",
    "start": "282320",
    "end": "288639"
  },
  {
    "text": "pixels that you're dealing with so all of a sudden your file sizes have just mushroomed",
    "start": "288639",
    "end": "294720"
  },
  {
    "text": "faster pixels refers to the concept of high frame rates so some of you might",
    "start": "294720",
    "end": "300240"
  },
  {
    "text": "have seen the hobbit recently which was shot at 48 frames per second that's twice what a normal theatrical",
    "start": "300240",
    "end": "305840"
  },
  {
    "text": "production would be shot at so now instead of having instead of having 24 frames per second you've got twice",
    "start": "305840",
    "end": "312240"
  },
  {
    "text": "that number and so again the file sizes have become bigger and then the third factor is you've got",
    "start": "312240",
    "end": "318240"
  },
  {
    "text": "better pixels so there's a trend right now to actually give you increased dynamic",
    "start": "318240",
    "end": "323440"
  },
  {
    "text": "range of those pixels and we're looking at bigger color spaces different kinds of color spaces",
    "start": "323440",
    "end": "329440"
  },
  {
    "text": "previously you might have shot everything with an 8-bit with an 8-bit resolution now that's",
    "start": "329440",
    "end": "334880"
  },
  {
    "text": "going to 10 12 16 and so on and you tend to find that that's going to be another you know 30 40 extra in terms of",
    "start": "334880",
    "end": "343120"
  },
  {
    "text": "in terms of size that you're that you're dealing with so when you add all of those um all of those pixel dynamics together",
    "start": "343120",
    "end": "351120"
  },
  {
    "text": "you suddenly get much larger file sizes in fact if you look at a professional camera you're generally getting you know",
    "start": "351120",
    "end": "357520"
  },
  {
    "text": "20 megabytes sorry 20 yeah 20 megabytes a second out of it without any problem",
    "start": "357520",
    "end": "365039"
  },
  {
    "text": "the next trend is that you have more processing so the amount of processing that's going on with what's being shot is actually going",
    "start": "365199",
    "end": "372400"
  },
  {
    "text": "up rather than going down at the high end whether it's a commercial or a tv show or a movie",
    "start": "372400",
    "end": "378319"
  },
  {
    "text": "there are visual effects pretty much everything contains some kind of visual effect and i'm sure um you saw in the keynote",
    "start": "378319",
    "end": "384479"
  },
  {
    "text": "this morning some of the work that atomic fiction is doing and just the amazing things that they're doing in terms of taking",
    "start": "384479",
    "end": "390639"
  },
  {
    "text": "a scene that was shot on a on a beach in iceland i think it was or in norway and",
    "start": "390639",
    "end": "396160"
  },
  {
    "text": "turning it into this alien landscape so you have that but even at the uh the more",
    "start": "396160",
    "end": "401759"
  },
  {
    "text": "middle end of the market the pros tumor enter the market if you like corporate video you know there's a huge",
    "start": "401759",
    "end": "407039"
  },
  {
    "text": "volume of content is generated through corporate video color correction is is the norm in",
    "start": "407039",
    "end": "412080"
  },
  {
    "text": "corporate video these days which a few years ago would have only been used in in much higher end productions",
    "start": "412080",
    "end": "417599"
  },
  {
    "text": "and then at the consumer end when you're happily shooting your content and applying those instagram type filters that's processing",
    "start": "417599",
    "end": "424800"
  },
  {
    "text": "as well whether it's happening down on the phone or whether it's happening somewhere else so there's more processing and all of",
    "start": "424800",
    "end": "430400"
  },
  {
    "text": "that requires steps in the workflow finally there's more output formats as you can see on",
    "start": "430400",
    "end": "435919"
  },
  {
    "text": "the right hand side and it's not just the different renditions that are required for the the different devices the tvs the smaller screens",
    "start": "435919",
    "end": "443360"
  },
  {
    "text": "the different types of connectivity um but it's also different versions versions for tv release for theatrical",
    "start": "443360",
    "end": "450479"
  },
  {
    "text": "release for release in different markets and so forth in fact one uh a well-known industry",
    "start": "450479",
    "end": "455599"
  },
  {
    "text": "figure recently told me that if you think of a single piece of finished content so a show",
    "start": "455599",
    "end": "460960"
  },
  {
    "text": "in its lifetime it will have been converted into a thousand different versions and that's just a finished",
    "start": "460960",
    "end": "466319"
  },
  {
    "text": "product versus what's actually going into making it so all of these trends have a dramatic",
    "start": "466319",
    "end": "472479"
  },
  {
    "text": "impact on media workflows especially when you factor in constrained budgets and",
    "start": "472479",
    "end": "477680"
  },
  {
    "text": "constraints timelines you know everyone needs to be able to do things cheaper and everyone needs to be able to do",
    "start": "477680",
    "end": "483680"
  },
  {
    "text": "things quicker it would seem so to give you some context for what",
    "start": "483680",
    "end": "489919"
  },
  {
    "text": "follows in phil's session i thought i'd cover where aws fits into media processing",
    "start": "489919",
    "end": "495599"
  },
  {
    "text": "and then look at some approaches that we've seen for doing media processing at scale in the cloud",
    "start": "495599",
    "end": "501520"
  },
  {
    "text": "so as you know amazon web services we provide infrastructure services networking compute database storage and",
    "start": "501520",
    "end": "508240"
  },
  {
    "text": "delivery and so on we also provide application services deployment services and management",
    "start": "508240",
    "end": "513760"
  },
  {
    "text": "services so using these services as your software defined data center you can build media workflows",
    "start": "513760",
    "end": "521360"
  },
  {
    "text": "so i have my little vertical boxes here that show some typical media operation type",
    "start": "521360",
    "end": "527519"
  },
  {
    "text": "components that you might run on top of aws and these could be either components that you've built yourselves",
    "start": "527519",
    "end": "533600"
  },
  {
    "text": "they could be components that are coming from third parties so ingest maybe using aspara technology uh qc using the",
    "start": "533600",
    "end": "541360"
  },
  {
    "text": "tektronix serify product which has recently become available on on aws and then on top of all of that",
    "start": "541360",
    "end": "550000"
  },
  {
    "text": "you can actually build your media solutions and these might be your actual workflows",
    "start": "550000",
    "end": "555200"
  },
  {
    "text": "whether it's something like media asset management or whether it's going up a level into analytics and monetization",
    "start": "555200",
    "end": "562560"
  },
  {
    "text": "so some examples of these might be an online video platform could be a production management application a digital daily system",
    "start": "562560",
    "end": "569519"
  },
  {
    "text": "really you name it and you can build it on top of the underlying infrastructure",
    "start": "569519",
    "end": "574800"
  },
  {
    "text": "so that's where aws fits why don't we take a look at some of the approaches in terms of moving what you're doing",
    "start": "574800",
    "end": "581040"
  },
  {
    "text": "today on-prem into um into aws so a useful way that",
    "start": "581040",
    "end": "586480"
  },
  {
    "text": "i think about any kind of processing in the cloud is that there's really three phases or three approaches to getting",
    "start": "586480",
    "end": "591839"
  },
  {
    "text": "there so we start with phase one and phase one is simply taking what you do today",
    "start": "591839",
    "end": "598000"
  },
  {
    "text": "and deploying it on aws this is the way that a lot of people get started we've probably heard the term lift and",
    "start": "598000",
    "end": "603839"
  },
  {
    "text": "shift and this is really what lift and shift is so you start you take your on-premise",
    "start": "603839",
    "end": "609519"
  },
  {
    "text": "deployment of your of your software which is on your left-hand side so you have some kind of media processing operation",
    "start": "609519",
    "end": "616160"
  },
  {
    "text": "it's running on top of an operating system it's running on top of some storage and you move that lock stock and barrel",
    "start": "616160",
    "end": "622480"
  },
  {
    "text": "onto aws onto an ec2 instance and this is really your monolithic media processing",
    "start": "622480",
    "end": "628720"
  },
  {
    "text": "operation that's sitting there running on top of ec2 you can spin up additional instances the",
    "start": "628720",
    "end": "634160"
  },
  {
    "text": "arrow going off the edge of the screen is supposed to represent additional instances that that you can",
    "start": "634160",
    "end": "640240"
  },
  {
    "text": "spin up and the point here is that by doing this it's a way that you can get scale and",
    "start": "640240",
    "end": "645440"
  },
  {
    "text": "it's a way that you can get redundancy but if we look at that actual media",
    "start": "645440",
    "end": "651440"
  },
  {
    "text": "processing operation in other words the thing that you're running on that ec2 instance it's a black box so let's see what's",
    "start": "651440",
    "end": "657680"
  },
  {
    "text": "inside it's essentially this monolithic media processing operation um it's not in any way componentized and",
    "start": "657680",
    "end": "664079"
  },
  {
    "text": "what's inside it generally are these sorts of operations so you've got your ingest actually getting content in you might",
    "start": "664079",
    "end": "671120"
  },
  {
    "text": "have the media processing operation itself maybe it's transcoding maybe it's qc maybe it's packaging uh it",
    "start": "671120",
    "end": "677600"
  },
  {
    "text": "could be any of those types of things you might have some post processing operation uh you've got some export so you're",
    "start": "677600",
    "end": "683279"
  },
  {
    "text": "actually getting the content out and you've got some workflow that's maybe managing orchestrating all of that",
    "start": "683279",
    "end": "688880"
  },
  {
    "text": "and some parameters that perhaps you're feeding into it so that you tell it what to do what to get from where and so on",
    "start": "688880",
    "end": "695920"
  },
  {
    "text": "so one of the things that you can ask yourself is is there some kind of opportunity to break apart this black box and derive",
    "start": "696000",
    "end": "702480"
  },
  {
    "text": "some benefit by doing so and that brings us to phase two which is about refactoring or breaking things apart and putting",
    "start": "702480",
    "end": "709040"
  },
  {
    "text": "them back together in a slightly different way in order to benefit from some of the cloud services",
    "start": "709040",
    "end": "715040"
  },
  {
    "text": "so in a um in a traditional enterprise type of example um i would say you know let's say you",
    "start": "715040",
    "end": "720800"
  },
  {
    "text": "have an app a web application and it's running on a database you know one approach would be",
    "start": "720800",
    "end": "726320"
  },
  {
    "text": "you just install that database on an ec2 instance manage it yourself but the phase two and that",
    "start": "726320",
    "end": "731920"
  },
  {
    "text": "would be phase one your phase two approach would be to maybe use something like rds and manage database service",
    "start": "731920",
    "end": "738000"
  },
  {
    "text": "and transition to using rds for the database functionality that frees you up from worrying about",
    "start": "738000",
    "end": "743120"
  },
  {
    "text": "scalability from backups patching etc etc for a media processing operation it's a",
    "start": "743120",
    "end": "748639"
  },
  {
    "text": "little different what you might you might find some better ways to use some of the features of aws",
    "start": "748639",
    "end": "754079"
  },
  {
    "text": "by breaking apart some of that monolithic application and so here's",
    "start": "754079",
    "end": "760079"
  },
  {
    "text": "an example which we'll come on to in a second you really want to think about do those atomic do those operations inside",
    "start": "761680",
    "end": "768800"
  },
  {
    "text": "that monolithic application need to happen together or is there some benefit in terms of breaking them",
    "start": "768800",
    "end": "775440"
  },
  {
    "text": "apart for example why does every ec2 instance need to do its own ingest why how why do you have to have workflow",
    "start": "775440",
    "end": "782480"
  },
  {
    "text": "inside each instance because you essentially have these islands of workflows that are happening",
    "start": "782480",
    "end": "787920"
  },
  {
    "text": "so instead maybe we could look at something like uh like this kind of architecture",
    "start": "787920",
    "end": "793120"
  },
  {
    "text": "so here's my refactored example a very simple one what hasn't changed is that we're still going to have our media",
    "start": "793120",
    "end": "798800"
  },
  {
    "text": "processing operation but instead what i've done is i'm doing in i'm using s3 in this in this",
    "start": "798800",
    "end": "804720"
  },
  {
    "text": "particular instance and i'm doing all of my ingest and export into s3 so i've taken that",
    "start": "804720",
    "end": "810160"
  },
  {
    "text": "out of that monolithic application so we're using s3 to store the input as well as the output content",
    "start": "810160",
    "end": "815760"
  },
  {
    "text": "then i'm going to use something like simple workflow workflow engine to actually orchestrate the various operations",
    "start": "815760",
    "end": "823279"
  },
  {
    "text": "and now i've got my media processing operation but it's really the atomic media",
    "start": "823279",
    "end": "828480"
  },
  {
    "text": "processing operation so if it were transcoding i'm just doing transcoding here if i'm doing packaging",
    "start": "828480",
    "end": "834000"
  },
  {
    "text": "i'm just doing packaging here if i'm doing rendering that's what i'm doing there rather than all of that other stuff",
    "start": "834000",
    "end": "839440"
  },
  {
    "text": "that's around it and very often you can either wrap an existing application and expose apis that enable",
    "start": "839440",
    "end": "847519"
  },
  {
    "text": "you to talk to it and in some cases the applications themselves would have will have apis that are available",
    "start": "847519",
    "end": "854160"
  },
  {
    "text": "and what i can do is i can add more than one of these and have simple workflow in this case actually",
    "start": "854160",
    "end": "859920"
  },
  {
    "text": "orchestrate the workflows between those different instances so if i have a job that needs to come in",
    "start": "859920",
    "end": "865680"
  },
  {
    "text": "simple workflows orchestrating that it sends it to a ready willing and available uh worker one of",
    "start": "865680",
    "end": "872240"
  },
  {
    "text": "these ec2 and ebs instances to go off and do the processing you can do other cool things too for",
    "start": "872240",
    "end": "877760"
  },
  {
    "text": "example you know you can you can use other aws technologies like",
    "start": "877760",
    "end": "883199"
  },
  {
    "text": "formation uh to actually determine whether or not you have enough uh instances in your",
    "start": "883199",
    "end": "889519"
  },
  {
    "text": "fleet that are available if an instance goes down or fails in some way you can watch you can use cloudwatch to manage that so",
    "start": "889519",
    "end": "896320"
  },
  {
    "text": "in other words there's a whole set of associated services that you can leverage to give you more resiliency more",
    "start": "896320",
    "end": "902160"
  },
  {
    "text": "redundancy and more scalability",
    "start": "902160",
    "end": "906319"
  },
  {
    "text": "the third phase then builds on that second phase and and decomposes that architecture still further so you're now at the point where",
    "start": "907519",
    "end": "914240"
  },
  {
    "text": "you're really primarily writing or wrapping atomic pieces of code that perform very specific operations",
    "start": "914240",
    "end": "921199"
  },
  {
    "text": "and this is something phil will go into in more detail and then you're leveraging the over the aws infrastructure",
    "start": "921199",
    "end": "927120"
  },
  {
    "text": "for everything else for all of the infrastructure type um heavy lifting sorts of operations",
    "start": "927120",
    "end": "935360"
  },
  {
    "text": "so some ways to do this are to to decouple everything you want to understand which parts of",
    "start": "935519",
    "end": "941440"
  },
  {
    "text": "the architecture that actually need to know about implementation details of another part of the architecture and",
    "start": "941440",
    "end": "948560"
  },
  {
    "text": "there's a good chance that they actually don't you also want to make sure that if an",
    "start": "948560",
    "end": "953680"
  },
  {
    "text": "operation fails somewhere the job itself doesn't get lost and that this is where the workflow management",
    "start": "953680",
    "end": "960000"
  },
  {
    "text": "comes in and messages and cues come in as well and again this is something full we'll talk about",
    "start": "960000",
    "end": "969839"
  },
  {
    "text": "this is also a great time to think about how you're going to manage for certain essential essential attributes",
    "start": "972639",
    "end": "980079"
  },
  {
    "text": "like capacity how are you going to manip where are the bottlenecks in your architecture and what are you actually going to do about",
    "start": "980079",
    "end": "985759"
  },
  {
    "text": "them for redundancy what happens if a piece of your architecture actually fails for latency figure out you know",
    "start": "985759",
    "end": "992160"
  },
  {
    "text": "generally latency is fairly important in a media processing workflow so understand what your latency is",
    "start": "992160",
    "end": "998000"
  },
  {
    "text": "understand what you can do to minimize it or at least make it predictable because if you can make it predictable that usually is a good enough way",
    "start": "998000",
    "end": "1004480"
  },
  {
    "text": "uh to mitigate the situation and then finally security making sure that you've adopted security",
    "start": "1004480",
    "end": "1010800"
  },
  {
    "text": "best practices at all of the different components and levels within your architecture",
    "start": "1010800",
    "end": "1016399"
  },
  {
    "text": "so that concludes my brief overview of approaches to running media processing workflows on aws",
    "start": "1016399",
    "end": "1022240"
  },
  {
    "text": "now i'd like to welcome phil clough who's the team lead for taking the bbc iplayer video on",
    "start": "1022240",
    "end": "1027438"
  },
  {
    "text": "demand service into the cloud he's going to show you how they moved their broadcast playouts to vod system",
    "start": "1027439",
    "end": "1033438"
  },
  {
    "text": "into aws which gives them scalability reliability and elasticity thank you phil",
    "start": "1033439",
    "end": "1041839"
  },
  {
    "text": "thank you very much guys so as david said my name is phil clough i'm a principal engineer working at bbc",
    "start": "1046959",
    "end": "1053919"
  },
  {
    "text": "i've been there for a few years and over the last 18 months we've gone from a completely on-premise solution",
    "start": "1053919",
    "end": "1059440"
  },
  {
    "text": "for our video on demand service to a complete system that's in the cloud so some of you might not actually have",
    "start": "1059440",
    "end": "1065120"
  },
  {
    "text": "heard of what bbc iplayer is hopefully you've heard of the bbc so bbc iplayer is the uk's biggest video",
    "start": "1065120",
    "end": "1070960"
  },
  {
    "text": "and audio on demand service and it's completely free we get about seven million requests a day",
    "start": "1070960",
    "end": "1076400"
  },
  {
    "text": "and that's about represents about two percent of the bbc's complete consumption of that media",
    "start": "1076400",
    "end": "1081520"
  },
  {
    "text": "and to give you an idea of what that is in terms of the population the uk has a population about 40 million",
    "start": "1081520",
    "end": "1086960"
  },
  {
    "text": "which is about the same size of california we put about 500 unique hours of content",
    "start": "1086960",
    "end": "1092559"
  },
  {
    "text": "onto bbc iplayer every week and that's available immediately after broadcast for at least seven days",
    "start": "1092559",
    "end": "1098480"
  },
  {
    "text": "in a lot of cases that's 30 days up to 45 days it's available in over a thousand devices that includes pc",
    "start": "1098480",
    "end": "1105360"
  },
  {
    "text": "ios android smart tvs cable boxes connected tvs and that's both in a streaming capacity",
    "start": "1105360",
    "end": "1112240"
  },
  {
    "text": "and also in a download capacity so on your ios phone you can download some video and you can watch that on your train",
    "start": "1112240",
    "end": "1118160"
  },
  {
    "text": "without an internet connection we have an install base of about 20 million apps which is quite high especially when you consider there's",
    "start": "1118160",
    "end": "1124320"
  },
  {
    "text": "about 40 40 million people in the uk so that's about half of the people in the uk and if you",
    "start": "1124320",
    "end": "1129679"
  },
  {
    "text": "account for those who don't have a smartphone like young people we think that's a really big install base so that's an idea of where iplayer is at",
    "start": "1129679",
    "end": "1136080"
  },
  {
    "text": "the moment i'm going to show you a quick video which outlines where our directory general think iplayer is going in the",
    "start": "1136080",
    "end": "1141280"
  },
  {
    "text": "next couple of years",
    "start": "1141280",
    "end": "1144160"
  },
  {
    "text": "use ipad to watch any programs i've missed or the news or the sports used it for catching up with sport on tv",
    "start": "1148960",
    "end": "1155679"
  },
  {
    "text": "watch any program anytime we want so i really like it just even things that i might not see on tv browse around which is",
    "start": "1155679",
    "end": "1162880"
  },
  {
    "text": "it's good fun i think you know i can't live without it now we're going to reinvent bbc iplayer for",
    "start": "1162880",
    "end": "1169120"
  },
  {
    "text": "the next decade what if it could be more than just tv online",
    "start": "1169120",
    "end": "1176160"
  },
  {
    "text": "what if it gave you an even greater range of brilliant content made exclusively for bbc iplayer yeah",
    "start": "1177360",
    "end": "1184160"
  },
  {
    "text": "you play tune for like five minutes we're like two minutes in bang mix it mix it mix it yeah even more channels with the",
    "start": "1184160",
    "end": "1192160"
  },
  {
    "text": "content you love all in one place",
    "start": "1192160",
    "end": "1196480"
  },
  {
    "text": "you worry about the future what'll come will come and personalized for you we've got all",
    "start": "1197200",
    "end": "1203520"
  },
  {
    "text": "your favorites here what if bbc iplayer transformed the way you enjoyed tv",
    "start": "1203520",
    "end": "1209520"
  },
  {
    "text": "so you could dive deeper control what you see and get closer to the action it won't be",
    "start": "1209520",
    "end": "1217039"
  },
  {
    "text": "easy to look at giraffes in the same way again and offered",
    "start": "1217039",
    "end": "1222159"
  },
  {
    "text": "not just seven days to catch up but 30. what if you could watch things before",
    "start": "1222159",
    "end": "1229039"
  },
  {
    "text": "they were even on tv and create your own evening schedule so we could go backwards in time in space",
    "start": "1229039",
    "end": "1234400"
  },
  {
    "text": "yes performance in time space totally so where do you want to go hey and your favorite shows fitted to",
    "start": "1234400",
    "end": "1240400"
  },
  {
    "text": "the time you've got starting on one screen and finishing on another",
    "start": "1240400",
    "end": "1245600"
  },
  {
    "text": "wherever you are making the most of your time with the bbc bbc iplayer",
    "start": "1245600",
    "end": "1252720"
  },
  {
    "text": "we want to make it the best tv service in the world",
    "start": "1252720",
    "end": "1263600"
  },
  {
    "text": "so there's one thing there that really is key to what our directory generals talk about which is that there's growth and we want",
    "start": "1263600",
    "end": "1270400"
  },
  {
    "text": "even more growth we want to be bigger we want to get more renditions out there we want to go to 4k we want to make it really exciting so",
    "start": "1270400",
    "end": "1277679"
  },
  {
    "text": "with this in mind we designed to build something called video factory video factory is our complete in-house",
    "start": "1277679",
    "end": "1283360"
  },
  {
    "text": "rebuild of the ingest transcode and delivery for bbc iplayer it's completely scalable completely",
    "start": "1283360",
    "end": "1290000"
  },
  {
    "text": "elastic and it's a mesh and message driven architecture um to last us for the next 10 years",
    "start": "1290000",
    "end": "1296480"
  },
  {
    "text": "it's a result of about a year's development by 18 engineers i started about 18 months ago building betas for",
    "start": "1296480",
    "end": "1302000"
  },
  {
    "text": "this and here are the wonderful people who built the actual system a few of them are down here",
    "start": "1302000",
    "end": "1307760"
  },
  {
    "text": "so about a year ago this week i started building some of the components came back from re invent last year and",
    "start": "1307760",
    "end": "1313280"
  },
  {
    "text": "we had our first set of components out there in production and that was our clip publishing system in the bbc and i'm going to be showing",
    "start": "1313280",
    "end": "1319600"
  },
  {
    "text": "you a bit more of that later on why did we build video factory well our",
    "start": "1319600",
    "end": "1324880"
  },
  {
    "text": "old system is pretty monolithic pretty slow um really couldn't cope with spikes",
    "start": "1324880",
    "end": "1330799"
  },
  {
    "text": "and it had a very mixed ownership of a third party and the idea of video factory was to",
    "start": "1330799",
    "end": "1335840"
  },
  {
    "text": "bring that all in house allow ourselves to make changes very quickly react to the changing industry because",
    "start": "1335840",
    "end": "1342000"
  },
  {
    "text": "as i'm sure a lot of you know this industry changes constantly you have new delivery techniques new profiles new devices to support",
    "start": "1342000",
    "end": "1348799"
  },
  {
    "text": "you've got to be able to get that out there quickly one of the key things with what we did is we wanted a completely elastic",
    "start": "1348799",
    "end": "1353919"
  },
  {
    "text": "transcode resource we always wanted to be able to scale up as much transcode resource as we needed for what programs were on",
    "start": "1353919",
    "end": "1360080"
  },
  {
    "text": "air at any time and as i said got complete ownership of the system",
    "start": "1360080",
    "end": "1365200"
  },
  {
    "text": "and why do we think this is a good idea in the cloud well i've got a great a great graph here i really like this graph this is our off air trans codes",
    "start": "1365200",
    "end": "1371919"
  },
  {
    "text": "for one week so you can see every night but one we have a massive peak of transcode requests so in the bbc we have",
    "start": "1371919",
    "end": "1379360"
  },
  {
    "text": "about 20 regional news programs that go on air every night at the same time across",
    "start": "1379360",
    "end": "1384720"
  },
  {
    "text": "country and of course we want to get those out for as quickly as possible the previous system that could have taken nine ten hours before",
    "start": "1384720",
    "end": "1391840"
  },
  {
    "text": "all those transcodes were available so the design of the new system had to be such that all those transcodes could happen in",
    "start": "1391840",
    "end": "1397520"
  },
  {
    "text": "parallel and be delivered at the same time and now we're down to about 20 to 30 minutes to deliver",
    "start": "1397520",
    "end": "1403600"
  },
  {
    "text": "those news programs as opposed to nine hours and what use is yesterday's news anyway",
    "start": "1403600",
    "end": "1410080"
  },
  {
    "text": "so how do we design the architecture uh it's all based off amazon sqs and amazon sns we use that for our eventing",
    "start": "1410080",
    "end": "1416320"
  },
  {
    "text": "framework and i'll talk a bit more about that later again we use a load of classic messaging patterns which i'll come into as well",
    "start": "1416320",
    "end": "1422720"
  },
  {
    "text": "we designed around 20 small components that's evolved from where we started and they all have a really singular",
    "start": "1422720",
    "end": "1428240"
  },
  {
    "text": "responsibility the idea is you do one thing and we do it absolutely fantastically and one thing we learned very quickly",
    "start": "1428240",
    "end": "1435200"
  },
  {
    "text": "was if you've got a component that looks like it's doing something another component is doing don't get too tempted to put those",
    "start": "1435200",
    "end": "1440880"
  },
  {
    "text": "together share a library don't necessarily share the component it controls your bloat and these",
    "start": "1440880",
    "end": "1446799"
  },
  {
    "text": "components have contracts of behavior with each other and that makes them really easy to test you can write",
    "start": "1446799",
    "end": "1452559"
  },
  {
    "text": "integration level tests and behavioral tests that test the interfaces between the components",
    "start": "1452559",
    "end": "1459840"
  },
  {
    "text": "so here it is video factory in a slide it's a very simplified but so we've got two parts to this",
    "start": "1459840",
    "end": "1465840"
  },
  {
    "text": "diagram we've got the on-premise part of the diagram which is in the orange box and we've got everything else which is",
    "start": "1465840",
    "end": "1472240"
  },
  {
    "text": "uh in the cloud so our on-premise component is hooked directly into our broadcast architecture at the bbc",
    "start": "1472240",
    "end": "1478320"
  },
  {
    "text": "and this is what's referred to as our mezzanine video capture our mezzanine video is a very high",
    "start": "1478320",
    "end": "1483840"
  },
  {
    "text": "quality video which we capture all the time 24 7 so we've got a massive archive video",
    "start": "1483840",
    "end": "1489360"
  },
  {
    "text": "if we need it to transcode and how that works is we actually cut up an rtp multicast into little chunks",
    "start": "1489360",
    "end": "1495200"
  },
  {
    "text": "and still had an s3 i'll talk a bit more about how that works later on that will get stored in s3 as i said and",
    "start": "1495200",
    "end": "1501279"
  },
  {
    "text": "then we've got some transcode partners who we use to actually transcode that video we use a transcode abstraction layer to",
    "start": "1501279",
    "end": "1507679"
  },
  {
    "text": "extract away how the transcode actually works so that you're not tied to one supplier again i'm going to come into that in a",
    "start": "1507679",
    "end": "1513760"
  },
  {
    "text": "bit more detail we've got a load of our distribution renditions in s3 as well and that actually sits behind",
    "start": "1513760",
    "end": "1519039"
  },
  {
    "text": "our core network for video distribution now um as you can see we've also got lots of",
    "start": "1519039",
    "end": "1524240"
  },
  {
    "text": "little components to deal with things like drm qc clipping and media asset management",
    "start": "1524240",
    "end": "1529840"
  },
  {
    "text": "they're all built in the exact same way i'm going to dig into a bit of detail on",
    "start": "1529840",
    "end": "1535440"
  },
  {
    "text": "a couple of these areas and then show you it in in real life working so first area we're going to dig into is our mezzanine",
    "start": "1535440",
    "end": "1541440"
  },
  {
    "text": "video capture so as i said what we've got coming in is some sdi feeds now we've actually got 24",
    "start": "1541440",
    "end": "1546960"
  },
  {
    "text": "of those and that's three gigabits a second for hd and one gigabit a second for sd those go into a broadcast grade encoder",
    "start": "1546960",
    "end": "1554400"
  },
  {
    "text": "along with some sumpty time code which gets embedded and we have an mpeg-2 transport stream on a multicast network coming out the",
    "start": "1554400",
    "end": "1560960"
  },
  {
    "text": "back of that and that goes down to about 30 megabits and 10 megabits for sd",
    "start": "1560960",
    "end": "1566159"
  },
  {
    "text": "that's h264 and mpeg-2 transport stream then the next piece we've got is an rtp",
    "start": "1566159",
    "end": "1571440"
  },
  {
    "text": "chunker which sits off the back of that piece of network we have several of these on the same multicast network so we're always",
    "start": "1571440",
    "end": "1576880"
  },
  {
    "text": "capturing redundantly and what we do is we chop up those that transport stream to little chunks",
    "start": "1576880",
    "end": "1582640"
  },
  {
    "text": "now this is a real-time application it has to be pretty quick and pretty reactive and get those chunks onto disk as quick",
    "start": "1582640",
    "end": "1588559"
  },
  {
    "text": "as possible but its responsibility is just to get them onto a local disk cache from there we've got a shrunk uploader",
    "start": "1588559",
    "end": "1594240"
  },
  {
    "text": "which is slightly less real-time it picks up those chunks when they're written to disk and stores them straight into s3 now the",
    "start": "1594240",
    "end": "1600400"
  },
  {
    "text": "really cute thing about these chunks is you can literally just cap them back together linux utility capped on the command line",
    "start": "1600400",
    "end": "1606400"
  },
  {
    "text": "cap the files back together you've got a playable video the start of the video may not be playable due to a missing iframe",
    "start": "1606400",
    "end": "1612159"
  },
  {
    "text": "but it's good enough and of course embedded in that you've got your time code so you know you can find the video you want when you want it back",
    "start": "1612159",
    "end": "1619120"
  },
  {
    "text": "we've then got a really cute bit of technology which i'm going to go on to now which is our chunk concatenator so this is how we put video back",
    "start": "1619120",
    "end": "1625200"
  },
  {
    "text": "together in the cloud so we actually never touch the video",
    "start": "1625200",
    "end": "1630240"
  },
  {
    "text": "itself we only use s3 api calls now there's a session later this week which talks quite in depth about how to",
    "start": "1630240",
    "end": "1635760"
  },
  {
    "text": "do this and so effectively use multi-part build multi-part requests to build your file",
    "start": "1635760",
    "end": "1641520"
  },
  {
    "text": "based on the multi-part components of another file and s3 this means you can build about 10 gigs of mes",
    "start": "1641520",
    "end": "1647360"
  },
  {
    "text": "in about 10 seconds it's really quick so we run this on an m1 small instance",
    "start": "1647360",
    "end": "1653760"
  },
  {
    "text": "it's absolutely plenty for what we're doing and we have no performance issues there at all so one thing you do have to be careful",
    "start": "1653760",
    "end": "1659840"
  },
  {
    "text": "with is that s3 isn't immediately consistent it will eventually be consistent so once you've put together your file",
    "start": "1659840",
    "end": "1665520"
  },
  {
    "text": "that's made of many components you can then have to wait a couple of seconds before it's actually available",
    "start": "1665520",
    "end": "1670640"
  },
  {
    "text": "for you to work with now this is really easily mitigated in any queue-based application by rolling back your message and",
    "start": "1670640",
    "end": "1676720"
  },
  {
    "text": "retrying how much of it do we do quite a lot as i",
    "start": "1676720",
    "end": "1682000"
  },
  {
    "text": "said 24 channels 6 hd 18 sd that's 16 terabytes of mezzanine per day",
    "start": "1682000",
    "end": "1687760"
  },
  {
    "text": "per capture point and we capture it many times in many locations to ensure redundancy",
    "start": "1687760",
    "end": "1693440"
  },
  {
    "text": "that works out about 200 000 chunks per day and that's 2 billion uk billion not u.s",
    "start": "1693440",
    "end": "1700000"
  },
  {
    "text": "billion rtp packets per day now it is worth mentioning we do sometimes lose the occasional rtp",
    "start": "1700000",
    "end": "1705679"
  },
  {
    "text": "packet but we don't lose them across two zones at once if we miss a caption one place we can use it from one of our other",
    "start": "1705679",
    "end": "1711919"
  },
  {
    "text": "capture points so that's our how we get the video in so",
    "start": "1711919",
    "end": "1717440"
  },
  {
    "text": "now how do we transcode i'm going to talk about transcode abstraction this is something that's really important so why do you want to abstract",
    "start": "1717440",
    "end": "1723679"
  },
  {
    "text": "your transcode well you don't want to be locked into a single transcode supplier especially in the sas or pause model you",
    "start": "1723679",
    "end": "1730320"
  },
  {
    "text": "want to avoid locking wherever possible and choose suppliers based on performance quality and we chosen based on",
    "start": "1730320",
    "end": "1737200"
  },
  {
    "text": "broadcaster friendly features and in our case we ended up on elemental cloud which is a gpu accelerated product",
    "start": "1737200",
    "end": "1744080"
  },
  {
    "text": "very high performance and elastic transcoder we also ended up building our own solution for subtitles",
    "start": "1744080",
    "end": "1751120"
  },
  {
    "text": "what one of the other advantages you get here is um smart routing and smart bundling so you can",
    "start": "1751120",
    "end": "1756240"
  },
  {
    "text": "save money and performance on non-time critical transcodes so if you've got a transcode backend",
    "start": "1756240",
    "end": "1761600"
  },
  {
    "text": "that's less performant but an awful lot cheaper if you've got your video in advance you can route it off to that back end to",
    "start": "1761600",
    "end": "1767840"
  },
  {
    "text": "save time and money and one of the other cute things is many transcode partners let you",
    "start": "1767840",
    "end": "1773440"
  },
  {
    "text": "group together like transcodes for example elemental if you're decoding video once it's incredibly cheap to put many encodes off",
    "start": "1773440",
    "end": "1780399"
  },
  {
    "text": "the back of that decode so the net result is you can get maybe 10 or 15 outputs of very little extra",
    "start": "1780399",
    "end": "1785600"
  },
  {
    "text": "cost in our case we actually do about 15 h264 encodes off one decode so it really does",
    "start": "1785600",
    "end": "1792159"
  },
  {
    "text": "save a lot of time on your encode cycle it's actually really hybrid cloud-friendly approach as well if",
    "start": "1792159",
    "end": "1797440"
  },
  {
    "text": "you've got a really predictable baseline of transcode you can route that to an on-premise set of transcoders some tin somewhere",
    "start": "1797440",
    "end": "1803440"
  },
  {
    "text": "and then spike into the cloud if you need to and the really key thing is here you've got no idea who's got the next game",
    "start": "1803440",
    "end": "1809360"
  },
  {
    "text": "changing transcode platform be it quality or performance or cost if someone comes to you tomorrow",
    "start": "1809360",
    "end": "1814480"
  },
  {
    "text": "and says i can half your transcode cost double performance you want to be able to jump on that and not have to completely rewrite your",
    "start": "1814480",
    "end": "1820480"
  },
  {
    "text": "transcode architecture how does this look when you put it together it's it's really quite simple",
    "start": "1820480",
    "end": "1826080"
  },
  {
    "text": "you've got a transcode router which is your business logic around timeliness and what particular bundles",
    "start": "1826080",
    "end": "1832080"
  },
  {
    "text": "can be done where and then you've got your distinct back end so in our case bbc's case we have",
    "start": "1832080",
    "end": "1837440"
  },
  {
    "text": "three which is a subtitle extraction back end which was in-house and as you can see that's pulling the mezzanine directly from s3",
    "start": "1837440",
    "end": "1844000"
  },
  {
    "text": "and working on it on its own nodes we've got an elastic transcoder back end which effectively talks rest calls over",
    "start": "1844000",
    "end": "1850159"
  },
  {
    "text": "to elastic transcoder and we've got a elemental back end as well which does much the same",
    "start": "1850159",
    "end": "1856480"
  },
  {
    "text": "as you can see in those cases the mezzanine is actually pulled by the specific transcoder products themselves",
    "start": "1856480",
    "end": "1862320"
  },
  {
    "text": "be it elastic transcoder or elemental cloud and in all cases that goes back into another bucket for the distribution",
    "start": "1862320",
    "end": "1869039"
  },
  {
    "text": "transitions which is where we serve from and here's what it looks like in the future i don't know some of the",
    "start": "1869039",
    "end": "1875200"
  },
  {
    "text": "transcode backend is going to come along and we're going to just want to engineer that now the great thing here is when",
    "start": "1875200",
    "end": "1880240"
  },
  {
    "text": "that transcode back-end does come along all you've got to do is add in that extra back end and change your routing",
    "start": "1880240",
    "end": "1885679"
  },
  {
    "text": "logic very slightly and if you're doing it right then your routing logic will be a configuration file somewhere you change that and off you go you route",
    "start": "1885679",
    "end": "1892320"
  },
  {
    "text": "one percent of your transcodes to a new back end let's have a look what",
    "start": "1892320",
    "end": "1897600"
  },
  {
    "text": "one of these things looks like inside it's actually really simple as i say we use sqs so we've got an",
    "start": "1897600",
    "end": "1903279"
  },
  {
    "text": "incoming transcode request in our case that's xml and the first thing we do is get it off a queue then we unmarch and validate",
    "start": "1903279",
    "end": "1909760"
  },
  {
    "text": "that message we initially initialize the transcode so in this case this example is for elastic",
    "start": "1909760",
    "end": "1914960"
  },
  {
    "text": "transcoder so we do a post into elastic transcoder then what we do with elastic transcoders",
    "start": "1914960",
    "end": "1920240"
  },
  {
    "text": "we actually set up a little http listener on the application itself and wait for a call back bridged across from sns",
    "start": "1920240",
    "end": "1926960"
  },
  {
    "text": "when we get that we're going to emit a transcode status message say hey it was successful or hey it failed",
    "start": "1926960",
    "end": "1933519"
  },
  {
    "text": "as you can see actually that message transaction runs throughout the length of the transcode so in sqs you need to renew your message",
    "start": "1933519",
    "end": "1941120"
  },
  {
    "text": "transaction um i'll go into a bit more detail on better ways of doing that at a later point",
    "start": "1941120",
    "end": "1946159"
  },
  {
    "text": "so that's pretty good that's a pretty good start i'm quite happy with that but what happens if things go wrong well",
    "start": "1946159",
    "end": "1951919"
  },
  {
    "text": "we've got some message patterns that can help us here some error handling so in this case we've got a dead letter q pattern a bad message queue fasten",
    "start": "1951919",
    "end": "1959200"
  },
  {
    "text": "and a fail cue pattern as well and i'll go into those in a bit more detail in a minute so that's pretty good we've got some",
    "start": "1959200",
    "end": "1964960"
  },
  {
    "text": "error handling now so the next thing to add into that is some monitoring some eventing so we've got a great eventing framework",
    "start": "1964960",
    "end": "1970799"
  },
  {
    "text": "at the bbc which i'll talk about and so we've got monitor events coming out all the time all the stages",
    "start": "1970799",
    "end": "1976240"
  },
  {
    "text": "of this processing emit monitoring events that we can then string together and understand how our applications",
    "start": "1976240",
    "end": "1981519"
  },
  {
    "text": "are behaving and if they're being performed or not so monitoring infrastructure it's called",
    "start": "1981519",
    "end": "1987440"
  },
  {
    "text": "i spy it's an eventing framework filled with lists of key value pairs which then get pushed into splunk and",
    "start": "1987440",
    "end": "1993679"
  },
  {
    "text": "i'll show you it a bit later and they come at two levels mainly mainly business level and system level",
    "start": "1993679",
    "end": "1999120"
  },
  {
    "text": "so a business level event maybe i've consumed a message or i've started a transcode or transcodes failed whereas the system",
    "start": "1999120",
    "end": "2005760"
  },
  {
    "text": "level event might be the detail of hey this http call over to ets took",
    "start": "2005760",
    "end": "2010960"
  },
  {
    "text": "20 milliseconds and it returned to 200 or it might be things like the application's heat size emitted",
    "start": "2010960",
    "end": "2017279"
  },
  {
    "text": "periodically or an unhandled exception we've got a fixed model for context data inside our",
    "start": "2017279",
    "end": "2023200"
  },
  {
    "text": "model which means that you can string together transactions and workflows while the components are still very",
    "start": "2023200",
    "end": "2029440"
  },
  {
    "text": "distinct and have complete separation you can always string together the information back in the splunk",
    "start": "2029440",
    "end": "2035679"
  },
  {
    "text": "and it saves us a huge amount of time diagnosing failures very rarely now do you have to go to a box look at logs it's all in the",
    "start": "2035679",
    "end": "2042399"
  },
  {
    "text": "eventing data if you've done it correctly in general how do we design these things",
    "start": "2042399",
    "end": "2048320"
  },
  {
    "text": "so this is where the guys who actually write code can wake up again so these are all java applications in our case um they all run in tomcat",
    "start": "2048320",
    "end": "2055599"
  },
  {
    "text": "and in our case we use an overwhelming amount of m1 small instances for a couple of micros or a couple of",
    "start": "2055599",
    "end": "2060878"
  },
  {
    "text": "slightly bigger instances depending on what the applications are doing we run at least three of",
    "start": "2060879",
    "end": "2066720"
  },
  {
    "text": "everything so we're in all three of three regions inside the availability zone in the eu",
    "start": "2066720",
    "end": "2072000"
  },
  {
    "text": "and we auto scale on queue depth now one of the words there is worth mentioning you you don't",
    "start": "2072000",
    "end": "2077679"
  },
  {
    "text": "necessarily have to auto scale in queue depth we started out without it and it worked absolutely fine you've got the three",
    "start": "2077679",
    "end": "2083760"
  },
  {
    "text": "levels of redundancy with your availability zones but on top of that you don't want to auto scale prematurely",
    "start": "2083760",
    "end": "2089679"
  },
  {
    "text": "if you auto scale premature you can actually waste money you can end up throwing away half finished transcoders if you don't do it right",
    "start": "2089679",
    "end": "2095520"
  },
  {
    "text": "it's worth waiting till you actually need to do it before you invest the time and effort in actually getting that set up correctly we build on top of the",
    "start": "2095520",
    "end": "2103359"
  },
  {
    "text": "apache camel framework so this is a infrastructure for building message driven applications",
    "start": "2103359",
    "end": "2108560"
  },
  {
    "text": "it has a great dsl language in java so that you can write really readable",
    "start": "2108560",
    "end": "2113599"
  },
  {
    "text": "code that even your bas or your testers can understand exactly what the application is doing",
    "start": "2113599",
    "end": "2119200"
  },
  {
    "text": "it's got a really reliable well tested sqs back end in it we should know we had to write a lot of it and that's where your message renewal",
    "start": "2119200",
    "end": "2126720"
  },
  {
    "text": "comes in so long as you've got transactionality on your sqs message within camel you'll still be",
    "start": "2126720",
    "end": "2132400"
  },
  {
    "text": "renewing that message in sqs so these are as i said full of messaging patterns again i'll go into that in a second",
    "start": "2132400",
    "end": "2139839"
  },
  {
    "text": "and we developed these with behavior-driven development and test driven development so we start out by writing especially",
    "start": "2139839",
    "end": "2145280"
  },
  {
    "text": "given these contracts we have with these applications we start out by writing behavioral tests",
    "start": "2145280",
    "end": "2150320"
  },
  {
    "text": "where you write actually throw a message onto an sqs queue and wait and see if the appropriate message comes out the other",
    "start": "2150320",
    "end": "2156160"
  },
  {
    "text": "end and you start with writing that test of course it's going to fail in the first instance until you've finished writing your application",
    "start": "2156160",
    "end": "2162079"
  },
  {
    "text": "and then we developed the actual application in a kind of a test-driven development manner so we're writing junit tests which then",
    "start": "2162079",
    "end": "2168560"
  },
  {
    "text": "will actually implement and hopefully all the tests will start passing we actually use cucumber for our",
    "start": "2168560",
    "end": "2174160"
  },
  {
    "text": "behavioral tests we find as a big advantage to having your test written a different language to your component",
    "start": "2174160",
    "end": "2180000"
  },
  {
    "text": "at the component level just from a perspective of it stops you having any opportunity to cheat",
    "start": "2180000",
    "end": "2185280"
  },
  {
    "text": "if you're inside the same jvm you can kind of be tempted to cheat and maybe just manipulate something or mock",
    "start": "2185280",
    "end": "2191119"
  },
  {
    "text": "something nope you want to write it completely separately and we deploy continuously much like amazon we try and deploy many times a",
    "start": "2191119",
    "end": "2198240"
  },
  {
    "text": "day many times a week every day of a week and of course the net resort factor sometimes you will get a bad deployment",
    "start": "2198240",
    "end": "2203920"
  },
  {
    "text": "but so long as you're confident in your rollback process and hopefully with some sort of blue-green deployment as well you can",
    "start": "2203920",
    "end": "2210240"
  },
  {
    "text": "keep rolling and especially with message patterns anything that ends up on an unhappy queue is very easy to replay",
    "start": "2210240",
    "end": "2216800"
  },
  {
    "text": "so talking of message happen message patterns rather so which ones do we use well we use two very traditional ones",
    "start": "2216800",
    "end": "2222480"
  },
  {
    "text": "and one which is a bit less common so the bad message queue and the dead letter q are very common and we also use something we refer to as",
    "start": "2222480",
    "end": "2228720"
  },
  {
    "text": "a fail queue or a fault cue which is a slightly less common pattern i'll explain in a bit now the key",
    "start": "2228720",
    "end": "2233839"
  },
  {
    "text": "concept here is you never want to lose a message a message is always either done in flight or on air queue somewhere",
    "start": "2233839",
    "end": "2240880"
  },
  {
    "text": "and all of these scenarios actually require human intervention when there is an error now that's not something to be scared of sometimes",
    "start": "2240880",
    "end": "2247760"
  },
  {
    "text": "you can get scared of designing in behavior that requires human intervention don't be it's just a fact of how",
    "start": "2247760",
    "end": "2253280"
  },
  {
    "text": "messaging tends to work so let's start with a bad message queue it's a really simple one the message",
    "start": "2253280",
    "end": "2259760"
  },
  {
    "text": "doesn't unmarshal to the object it should the message might not actually even be xml might be some json or something that",
    "start": "2259760",
    "end": "2264960"
  },
  {
    "text": "you're trying to unmarshal from xml or we could unmarshal the object but it doesn't meet our validation rules",
    "start": "2264960",
    "end": "2271200"
  },
  {
    "text": "for example you've asked me to do a transcode but haven't given me a source url um so that's one of the scenarios there",
    "start": "2271200",
    "end": "2278079"
  },
  {
    "text": "these messages are actually wrapped up in a wrapper which have put onto the bad message queue with that gives context",
    "start": "2278079",
    "end": "2284160"
  },
  {
    "text": "information so it's things like where it came from possibly the actual stack trace it calls",
    "start": "2284160",
    "end": "2289359"
  },
  {
    "text": "exactly which bit of validation maybe blew up and then every tried there's no point in",
    "start": "2289359",
    "end": "2294400"
  },
  {
    "text": "retrying these failures they're guaranteed not to be transient usually it gives you an indication that",
    "start": "2294400",
    "end": "2299440"
  },
  {
    "text": "someone's misdeployed something or one bit of software doesn't quite match another one in your architecture",
    "start": "2299440",
    "end": "2305119"
  },
  {
    "text": "and these are pretty rare in production systems they do happen but as i say tend to follow a dodgy deployment",
    "start": "2305119",
    "end": "2311839"
  },
  {
    "text": "uh in camel we've implemented these exception handlers on the route builder so effectively when we try to marshal",
    "start": "2311839",
    "end": "2317280"
  },
  {
    "text": "we'll throw a particular exception then the route builder will have a rule for that exception that says hey when you see this",
    "start": "2317280",
    "end": "2322640"
  },
  {
    "text": "wrap it up in this wrapper and produce it off to a bad message queue and one of a word on this one it's",
    "start": "2322640",
    "end": "2328960"
  },
  {
    "text": "always going to require developer level intervention um and one of the other causes can actually be people playing in manual",
    "start": "2328960",
    "end": "2335359"
  },
  {
    "text": "messages but you hopefully avoiding that at all costs next up dead letter q so this is very",
    "start": "2335359",
    "end": "2341920"
  },
  {
    "text": "traditional it means we tried to process a message several times and something we weren't expecting went",
    "start": "2341920",
    "end": "2347359"
  },
  {
    "text": "wrong every time now it isn't necessarily the same thing that went wrong every time but it is something that went wrong",
    "start": "2347359",
    "end": "2353280"
  },
  {
    "text": "every time and a message in this case an exact copy of the input message it goes straight onto a dead letter",
    "start": "2353280",
    "end": "2358480"
  },
  {
    "text": "queue onto a different queue and you'll retry this several times usually three to five is a good number",
    "start": "2358480",
    "end": "2364079"
  },
  {
    "text": "if you find yourself going much above that you probably want to worry about what other system is causing failures in your",
    "start": "2364079",
    "end": "2369920"
  },
  {
    "text": "system so generally this means some of the systems some dependent system has gone down",
    "start": "2369920",
    "end": "2375040"
  },
  {
    "text": "for example it could be that s3 has suddenly become completely unavailable or s simple transcode services become",
    "start": "2375040",
    "end": "2383440"
  },
  {
    "text": "unavailable as well um so that's the sort of things that can cause this and now the idea is here really that the",
    "start": "2383440",
    "end": "2389599"
  },
  {
    "text": "people who are your first line support should be able to look at this and go oh i can see that system x is",
    "start": "2389599",
    "end": "2396160"
  },
  {
    "text": "down they fix system x and then just replay the messages straight on so it should be really easy",
    "start": "2396160",
    "end": "2401200"
  },
  {
    "text": "for people to deal with these failures and they absolutely can be very common in production systems",
    "start": "2401200",
    "end": "2406640"
  },
  {
    "text": "that's again not something you need to worry about it's just an artifact of other systems not being stable enough if they could become very",
    "start": "2406640",
    "end": "2413040"
  },
  {
    "text": "common though it's certainly worth realizing you may need to invest time somewhere else",
    "start": "2413040",
    "end": "2418400"
  },
  {
    "text": "to improve those other systems in the case of sqs this is actually implementers of being on the route",
    "start": "2418400",
    "end": "2424079"
  },
  {
    "text": "builder so you get a header on all sqs messages it's the approximate delivery count",
    "start": "2424079",
    "end": "2429359"
  },
  {
    "text": "it's about how many times the message has tried to been consumed by someone connected to the broker and you",
    "start": "2429359",
    "end": "2434640"
  },
  {
    "text": "can count that have a look at that if it's more than your configured number put it straight on to the dead letter",
    "start": "2434640",
    "end": "2440000"
  },
  {
    "text": "queue some brokers have this built in active mq is a good example you can configure it at broken side",
    "start": "2440000",
    "end": "2445760"
  },
  {
    "text": "so when a message gets rolled back it'll check that for you and move it on to the dead letter queue",
    "start": "2445760",
    "end": "2452000"
  },
  {
    "text": "this is a more interesting one the fail cue something i knew could go wrong went wrong so this often evolves from an",
    "start": "2452000",
    "end": "2459200"
  },
  {
    "text": "understanding of why your system is deal cueing messages so you learn hey this scenario wasn't something i expected",
    "start": "2459200",
    "end": "2465119"
  },
  {
    "text": "oh okay i'm going to have to program around that um it's this particular scenario so much like bad message pattern this",
    "start": "2465119",
    "end": "2471440"
  },
  {
    "text": "has a wrapper around the object so you can always go in and find out exactly what",
    "start": "2471440",
    "end": "2476800"
  },
  {
    "text": "went wrong there's no digging no investigation to figure out what and wrong it's going to tell you on the message",
    "start": "2476800",
    "end": "2481839"
  },
  {
    "text": "and usually it may need second line support to actually look into what's going on here",
    "start": "2481839",
    "end": "2487440"
  },
  {
    "text": "with a really good runbook that might be first line support and they really do evolve from understanding dlq messages",
    "start": "2487440",
    "end": "2494319"
  },
  {
    "text": "and again we implement as an exception handler on the root builder we write specific exception class for each time you have a fail",
    "start": "2494319",
    "end": "2501119"
  },
  {
    "text": "scenario and then you have a handler for each of those or a subclass of those",
    "start": "2501119",
    "end": "2509280"
  },
  {
    "text": "so i'm going to show you the eventing framework now and hopefully the network will allow me to do that so we're going to",
    "start": "2509280",
    "end": "2514640"
  },
  {
    "text": "dive into splunk hey here we go so um what we're looking",
    "start": "2514640",
    "end": "2522240"
  },
  {
    "text": "at here is we're just looking at our splunk system we're actually looking at some stuff from our test environment we'll also look at some stuff from our",
    "start": "2522240",
    "end": "2527760"
  },
  {
    "text": "live environment in a second so here we have our raw events our events that i said are all key value",
    "start": "2527760",
    "end": "2534000"
  },
  {
    "text": "pairs so we can see the event name here is a transcode status event and we can see that it's for some audio",
    "start": "2534000",
    "end": "2540000"
  },
  {
    "text": "content and we can see somewhere down here hopefully that it's completed there we go we've got a completed status",
    "start": "2540000",
    "end": "2545920"
  },
  {
    "text": "and the progress was 100 when this happened you can see all sorts of other information in there like the duration of the media",
    "start": "2545920",
    "end": "2552160"
  },
  {
    "text": "what profile we're transcoding to and what back end that actually got routed to so if we take a scroll down we",
    "start": "2552160",
    "end": "2558560"
  },
  {
    "text": "should see there's a load of different event names like ets encode completed successfully telling you rather than surprisingly",
    "start": "2558560",
    "end": "2565040"
  },
  {
    "text": "that the ets transcode completed successfully if we take a look down here and have a",
    "start": "2565040",
    "end": "2570240"
  },
  {
    "text": "actually change our query to have a look at exactly what events were produced we can see we've got a set of them",
    "start": "2570240",
    "end": "2576400"
  },
  {
    "text": "so this has actually gone through two components this has gone through our routing logic and then gone into our actual back end",
    "start": "2576400",
    "end": "2581760"
  },
  {
    "text": "that deals with ets so we can see down here we've got the gti router translating things",
    "start": "2581760",
    "end": "2587200"
  },
  {
    "text": "head checking making sure file's there that actually gives us a file size which we add to that message and then route it",
    "start": "2587200",
    "end": "2593280"
  },
  {
    "text": "off to the appropriate back end then we've got some generic status events now these are transmit these are emitted at kind of a top level",
    "start": "2593280",
    "end": "2600800"
  },
  {
    "text": "name space such that you can correlate from across different backends as well as a single back end",
    "start": "2600800",
    "end": "2606000"
  },
  {
    "text": "and then we've got the encode starting and the end code completing successfully now in case of audio this is always done",
    "start": "2606000",
    "end": "2612240"
  },
  {
    "text": "for etfs for us we were very early adopter of elastic transcoder so we've actually",
    "start": "2612240",
    "end": "2618160"
  },
  {
    "text": "started using that back in january this year so we're very happy with that service now if we look at a elemental",
    "start": "2618160",
    "end": "2625359"
  },
  {
    "text": "encode for example a video encode in our case we can see the event names are slightly different it's actually gone off to a different back end",
    "start": "2625359",
    "end": "2631280"
  },
  {
    "text": "so the routing was exactly the same and the actual back end that we routed it to is",
    "start": "2631280",
    "end": "2636480"
  },
  {
    "text": "completely different so we've got gti elemental encode completed success i should say that gti is our internal code name for",
    "start": "2636480",
    "end": "2643200"
  },
  {
    "text": "our transcode abstraction layer stands for generic transcode interface which is a good name as far as i'm",
    "start": "2643200",
    "end": "2648640"
  },
  {
    "text": "concerned so if we take this a bit further and think about all the information we've",
    "start": "2648640",
    "end": "2654240"
  },
  {
    "text": "got buried in these events we can start to use those events and correlate them together to look at workflows",
    "start": "2654240",
    "end": "2659440"
  },
  {
    "text": "or we can group all that information to figure out more detail about how our transcode backends are performing",
    "start": "2659440",
    "end": "2665760"
  },
  {
    "text": "so here's a quick look this is real data straight off of the straight off of live about two minutes ago",
    "start": "2665760",
    "end": "2670800"
  },
  {
    "text": "so we've got some trans codes going on here and he and we can see down the left side each of our profiles this is the last 24 hours from our sd",
    "start": "2670800",
    "end": "2677920"
  },
  {
    "text": "transcode source so as i said we've got hd sd mezzanine this is rsd now average transcode factor for most of the sd",
    "start": "2677920",
    "end": "2684720"
  },
  {
    "text": "profiles bounced around 0.2 to 0.3 so that means of the duration of the video it's taken",
    "start": "2684720",
    "end": "2690319"
  },
  {
    "text": "0.2 times that duration of video to encode which is pretty good you'll notice hd slightly",
    "start": "2690319",
    "end": "2696640"
  },
  {
    "text": "large that's because our hd mezzanine is larger and there's a lot more transcoding work to do there",
    "start": "2696640",
    "end": "2703839"
  },
  {
    "text": "we can actually see uh the raw data here kind of so these are the particular piece of information we've",
    "start": "2703839",
    "end": "2709119"
  },
  {
    "text": "picked out and used to calculate this so we've obviously got the incoming",
    "start": "2709119",
    "end": "2714400"
  },
  {
    "text": "profile that was requested what source resolution that was the duration of the media itself",
    "start": "2714400",
    "end": "2720240"
  },
  {
    "text": "and the duration of the transcode we obviously use those to figure out what the transcode factor there was so this is a",
    "start": "2720240",
    "end": "2726400"
  },
  {
    "text": "raw data that's actually constructing our transcode factors and of course this data you can make pretty",
    "start": "2726400",
    "end": "2731680"
  },
  {
    "text": "graphs so here's the last 24 hours of our clip publishing system within the bbc",
    "start": "2731680",
    "end": "2737200"
  },
  {
    "text": "so uh always a good one you can spot what time people go to lunch which is around 12 o'clock here because the throughput always drops off",
    "start": "2737200",
    "end": "2744160"
  },
  {
    "text": "um and we can see here in the last hour we haven't actually had any transcode it's the middle of the night back home",
    "start": "2744160",
    "end": "2749760"
  },
  {
    "text": "and we've had 196 transcodes yesterday just for clips and 97 of those were successful now",
    "start": "2749760",
    "end": "2756079"
  },
  {
    "text": "interestingly we used to have a fairly unreliable clip publishing system and our new system we've discovered the",
    "start": "2756079",
    "end": "2761520"
  },
  {
    "text": "only failures we get is where people put dodgy input video in that's how reliable our system now is we",
    "start": "2761520",
    "end": "2767280"
  },
  {
    "text": "used to lose a lot of the transcodes because we weren't very good at transactionality inside our applications",
    "start": "2767280",
    "end": "2772400"
  },
  {
    "text": "now using camel and sqs our transactionality is very good we never lose a never lose a message",
    "start": "2772400",
    "end": "2779680"
  },
  {
    "text": "we can see some performance figures at the bottom there they're not particularly useful without um some duration values that's about it",
    "start": "2780160",
    "end": "2788079"
  },
  {
    "text": "okay so jumping back in for powerpoint i'm going to skip over that slide because that's the just in case slide",
    "start": "2788079",
    "end": "2795599"
  },
  {
    "text": "okay so i'll hand back to david um if you've got any questions really",
    "start": "2796640",
    "end": "2802000"
  },
  {
    "text": "now we're doing time well not bad no problem so a couple of things before we do",
    "start": "2802000",
    "end": "2807599"
  },
  {
    "text": "questions we'll have a few minutes left for questions um first of all hope this give gave you um a flavor both at a high level and",
    "start": "2807599",
    "end": "2814160"
  },
  {
    "text": "then a much more detailed level about the types of media processing that you can actually do",
    "start": "2814160",
    "end": "2819760"
  },
  {
    "text": "with aws the the second thing is i wanted to draw your attention to the fact that this is",
    "start": "2819760",
    "end": "2825040"
  },
  {
    "text": "um the second session in the media track there are five more sessions four of which are",
    "start": "2825040",
    "end": "2830160"
  },
  {
    "text": "tomorrow um and if you're interested in live transcoding for instance",
    "start": "2830160",
    "end": "2835520"
  },
  {
    "text": "and uh digital asset management there are some great sessions about that there's also a session on",
    "start": "2835520",
    "end": "2840960"
  },
  {
    "text": "thursday as well uh i'm sorry on friday because thursday is tomorrow on friday",
    "start": "2840960",
    "end": "2846559"
  },
  {
    "text": "about media",
    "start": "2846559",
    "end": "2850240"
  }
]