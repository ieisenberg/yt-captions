[
  {
    "text": "welcome back to the OPA on AWS video",
    "start": "80",
    "end": "2159"
  },
  {
    "text": "series I'm Anthony Watson a prototyping",
    "start": "2159",
    "end": "4600"
  },
  {
    "text": "Solutions architect and a contributing",
    "start": "4600",
    "end": "6720"
  },
  {
    "text": "developer on the OPA project in this",
    "start": "6720",
    "end": "9120"
  },
  {
    "text": "video we will explore Opus cicd pipeline",
    "start": "9120",
    "end": "12440"
  },
  {
    "text": "solutions to get the most out of this",
    "start": "12440",
    "end": "14599"
  },
  {
    "text": "video please make sure that you have",
    "start": "14599",
    "end": "16278"
  },
  {
    "text": "already watched the prior videos in this",
    "start": "16279",
    "end": "18039"
  },
  {
    "text": "series before continuing we'll start",
    "start": "18039",
    "end": "20240"
  },
  {
    "text": "with a brief primer on cicd which I",
    "start": "20240",
    "end": "22519"
  },
  {
    "text": "still recommend watching even if you are",
    "start": "22519",
    "end": "24400"
  },
  {
    "text": "already familiar with cicd Concepts then",
    "start": "24400",
    "end": "27000"
  },
  {
    "text": "we'll do a deep dive into opa's cicd",
    "start": "27000",
    "end": "29519"
  },
  {
    "text": "approach as a quick review cicd is an",
    "start": "29519",
    "end": "32439"
  },
  {
    "text": "automated process for building",
    "start": "32439",
    "end": "34000"
  },
  {
    "text": "application code preparing it for",
    "start": "34000",
    "end": "35920"
  },
  {
    "text": "release and possibly actually performing",
    "start": "35920",
    "end": "38040"
  },
  {
    "text": "the release to an environment cicd is an",
    "start": "38040",
    "end": "40640"
  },
  {
    "text": "acronym that stands for continuous",
    "start": "40640",
    "end": "43039"
  },
  {
    "text": "integration continuous delivery it's",
    "start": "43039",
    "end": "45520"
  },
  {
    "text": "called continuous because the process is",
    "start": "45520",
    "end": "47600"
  },
  {
    "text": "usually executed automatically every",
    "start": "47600",
    "end": "49760"
  },
  {
    "text": "time changes are merged into a version",
    "start": "49760",
    "end": "51559"
  },
  {
    "text": "control system like git the word",
    "start": "51559",
    "end": "54000"
  },
  {
    "text": "integration means that the automated",
    "start": "54000",
    "end": "56239"
  },
  {
    "text": "process uses a branch of the repository",
    "start": "56239",
    "end": "59120"
  },
  {
    "text": "that has all the ch changes from all",
    "start": "59120",
    "end": "60760"
  },
  {
    "text": "application developers integrated into",
    "start": "60760",
    "end": "63039"
  },
  {
    "text": "it the word delivery means that the code",
    "start": "63039",
    "end": "65680"
  },
  {
    "text": "is packaged up and staged in some",
    "start": "65680",
    "end": "67640"
  },
  {
    "text": "fashion so that it is ready to be",
    "start": "67640",
    "end": "69720"
  },
  {
    "text": "deployed using cicd is considered a best",
    "start": "69720",
    "end": "72479"
  },
  {
    "text": "practice because it saves Time by",
    "start": "72479",
    "end": "74439"
  },
  {
    "text": "removing the need for the application",
    "start": "74439",
    "end": "76240"
  },
  {
    "text": "team to manually perform builds and",
    "start": "76240",
    "end": "78600"
  },
  {
    "text": "releases it also reduces the potential",
    "start": "78600",
    "end": "81000"
  },
  {
    "text": "for mistakes and can be used as an early",
    "start": "81000",
    "end": "83439"
  },
  {
    "text": "form of quality control by automating",
    "start": "83439",
    "end": "85920"
  },
  {
    "text": "the execution of unit and functional",
    "start": "85920",
    "end": "88000"
  },
  {
    "text": "tests as well as running static code",
    "start": "88000",
    "end": "90320"
  },
  {
    "text": "analysis tools finally continuously",
    "start": "90320",
    "end": "93240"
  },
  {
    "text": "running a cicd process can ensure that",
    "start": "93240",
    "end": "95840"
  },
  {
    "text": "your application environments are",
    "start": "95840",
    "end": "97560"
  },
  {
    "text": "running the most up-to-date version of",
    "start": "97560",
    "end": "99280"
  },
  {
    "text": "your software there are typically two",
    "start": "99280",
    "end": "101119"
  },
  {
    "text": "highlevel components to structuring a",
    "start": "101119",
    "end": "102880"
  },
  {
    "text": "cicd process first we have a stage which",
    "start": "102880",
    "end": "106000"
  },
  {
    "text": "is a logical grouping of steps that Mak",
    "start": "106000",
    "end": "108040"
  },
  {
    "text": "sense for your use case the stages don't",
    "start": "108040",
    "end": "110520"
  },
  {
    "text": "actually contain any logic they are just",
    "start": "110520",
    "end": "112320"
  },
  {
    "text": "a highlevel step that can group together",
    "start": "112320",
    "end": "114360"
  },
  {
    "text": "multiple actions under a meaningful name",
    "start": "114360",
    "end": "117119"
  },
  {
    "text": "stages usually run one right after the",
    "start": "117119",
    "end": "119039"
  },
  {
    "text": "other as opposed to to concurrently you",
    "start": "119039",
    "end": "121159"
  },
  {
    "text": "can Define as many stages as you want",
    "start": "121159",
    "end": "123520"
  },
  {
    "text": "and typical stages could be a build",
    "start": "123520",
    "end": "125200"
  },
  {
    "text": "stage where code is compiled a test",
    "start": "125200",
    "end": "127399"
  },
  {
    "text": "stage or a stage that updates the",
    "start": "127399",
    "end": "129319"
  },
  {
    "text": "application in a given environment next",
    "start": "129319",
    "end": "132200"
  },
  {
    "text": "we have jobs which contain the actual",
    "start": "132200",
    "end": "134680"
  },
  {
    "text": "commands and scripts to run jobs can be",
    "start": "134680",
    "end": "137400"
  },
  {
    "text": "executed in a series or in parallel jobs",
    "start": "137400",
    "end": "140599"
  },
  {
    "text": "are typically implemented by spinning up",
    "start": "140599",
    "end": "142800"
  },
  {
    "text": "a new Docker container creating the",
    "start": "142800",
    "end": "145040"
  },
  {
    "text": "container is taken care of for you but",
    "start": "145040",
    "end": "147200"
  },
  {
    "text": "typically you will need to configure",
    "start": "147200",
    "end": "148720"
  },
  {
    "text": "which image to use",
    "start": "148720",
    "end": "150319"
  },
  {
    "text": "such as a new boont image or a more",
    "start": "150319",
    "end": "152840"
  },
  {
    "text": "specific one that already has some of",
    "start": "152840",
    "end": "154440"
  },
  {
    "text": "the software installed that your job",
    "start": "154440",
    "end": "156239"
  },
  {
    "text": "will need using containers ensures that",
    "start": "156239",
    "end": "158519"
  },
  {
    "text": "your pipeline is always starting fresh",
    "start": "158519",
    "end": "160440"
  },
  {
    "text": "jobs receive a copy of your application",
    "start": "160440",
    "end": "162360"
  },
  {
    "text": "source code upon startup and then",
    "start": "162360",
    "end": "164280"
  },
  {
    "text": "download the tools they need such as the",
    "start": "164280",
    "end": "166080"
  },
  {
    "text": "AWS CLI before running their commands",
    "start": "166080",
    "end": "168440"
  },
  {
    "text": "and scripts jobs can output artifacts",
    "start": "168440",
    "end": "170800"
  },
  {
    "text": "like zip files into a shared space that",
    "start": "170800",
    "end": "173319"
  },
  {
    "text": "can be input by subsequent jobs cicd is",
    "start": "173319",
    "end": "176319"
  },
  {
    "text": "often represented as a pipeline because",
    "start": "176319",
    "end": "178400"
  },
  {
    "text": "it runs a series of steps in the order",
    "start": "178400",
    "end": "180599"
  },
  {
    "text": "that you define and the output of one",
    "start": "180599",
    "end": "182599"
  },
  {
    "text": "step can be used as the input into a",
    "start": "182599",
    "end": "184840"
  },
  {
    "text": "subsequent step here we have an example",
    "start": "184840",
    "end": "186879"
  },
  {
    "text": "Pipeline with two stages stage one has",
    "start": "186879",
    "end": "190159"
  },
  {
    "text": "two jobs where job one must execute to",
    "start": "190159",
    "end": "193400"
  },
  {
    "text": "completion before job two starts and job",
    "start": "193400",
    "end": "196319"
  },
  {
    "text": "two creates an output artifact that is",
    "start": "196319",
    "end": "198599"
  },
  {
    "text": "used by job 3 and there is a fourth job",
    "start": "198599",
    "end": "201720"
  },
  {
    "text": "that runs in parallel with job 3 some",
    "start": "201720",
    "end": "204200"
  },
  {
    "text": "cicd solution vendors take a very static",
    "start": "204200",
    "end": "206440"
  },
  {
    "text": "approach to defining pipelines While",
    "start": "206440",
    "end": "208519"
  },
  {
    "text": "others support dynamic capabilities for",
    "start": "208519",
    "end": "211200"
  },
  {
    "text": "example some vendors require a pipeline",
    "start": "211200",
    "end": "213480"
  },
  {
    "text": "to have a single hard-coded Branch name",
    "start": "213480",
    "end": "215959"
  },
  {
    "text": "While others allow the same pipeline",
    "start": "215959",
    "end": "217560"
  },
  {
    "text": "definition to apply to multiple code",
    "start": "217560",
    "end": "220319"
  },
  {
    "text": "branches another difference is that some",
    "start": "220319",
    "end": "222519"
  },
  {
    "text": "vendors allow cicd pipelines to receive",
    "start": "222519",
    "end": "225159"
  },
  {
    "text": "input parameters that affect pipeline",
    "start": "225159",
    "end": "227280"
  },
  {
    "text": "Behavior While others do not finally",
    "start": "227280",
    "end": "230480"
  },
  {
    "text": "some vendor pipelines have the list of",
    "start": "230480",
    "end": "232319"
  },
  {
    "text": "jobs that will be run set statically by",
    "start": "232319",
    "end": "234439"
  },
  {
    "text": "the pipeline definition whereas others",
    "start": "234439",
    "end": "236519"
  },
  {
    "text": "can dynamically decide whether or not to",
    "start": "236519",
    "end": "238920"
  },
  {
    "text": "include a job in the pipeline based upon",
    "start": "238920",
    "end": "241280"
  },
  {
    "text": "the evaluation of some conditional rules",
    "start": "241280",
    "end": "244120"
  },
  {
    "text": "as of this recording Opa comes out of",
    "start": "244120",
    "end": "246360"
  },
  {
    "text": "the box with a cicd solution that",
    "start": "246360",
    "end": "248840"
  },
  {
    "text": "utilizes gitlab CI gitlab's",
    "start": "248840",
    "end": "251720"
  },
  {
    "text": "implementation allows for very flexible",
    "start": "251720",
    "end": "253879"
  },
  {
    "text": "and dynamic pipelines so let's talk",
    "start": "253879",
    "end": "255959"
  },
  {
    "text": "about how this flexibility can be put to",
    "start": "255959",
    "end": "258079"
  },
  {
    "text": "good use here we have a developer who",
    "start": "258079",
    "end": "259959"
  },
  {
    "text": "pushes code changes to a git repository",
    "start": "259959",
    "end": "262720"
  },
  {
    "text": "the cicd service detects this and loads",
    "start": "262720",
    "end": "265320"
  },
  {
    "text": "the application's cicd pipeline",
    "start": "265320",
    "end": "267479"
  },
  {
    "text": "definition in this example our",
    "start": "267479",
    "end": "269919"
  },
  {
    "text": "definition has a single stage that",
    "start": "269919",
    "end": "271960"
  },
  {
    "text": "contains three jobs but these jobs are",
    "start": "271960",
    "end": "274400"
  },
  {
    "text": "configured to only be included in the",
    "start": "274400",
    "end": "276199"
  },
  {
    "text": "pipeline if their conditions are met job",
    "start": "276199",
    "end": "279360"
  },
  {
    "text": "one only runs if the commit was pushed",
    "start": "279360",
    "end": "281639"
  },
  {
    "text": "to the main branch and the commit",
    "start": "281639",
    "end": "283800"
  },
  {
    "text": "message text is the phrase initial",
    "start": "283800",
    "end": "286199"
  },
  {
    "text": "commit job two runs only if the commit",
    "start": "286199",
    "end": "289280"
  },
  {
    "text": "was made on the developed branch and job",
    "start": "289280",
    "end": "291560"
  },
  {
    "text": "three is only included in the event that",
    "start": "291560",
    "end": "293600"
  },
  {
    "text": "a new poll request was created the cicd",
    "start": "293600",
    "end": "296840"
  },
  {
    "text": "service will now need to evaluate the",
    "start": "296840",
    "end": "298840"
  },
  {
    "text": "incoming event and decide which jobs to",
    "start": "298840",
    "end": "300919"
  },
  {
    "text": "run it makes several variables available",
    "start": "300919",
    "end": "303720"
  },
  {
    "text": "to the conditional evaluation process",
    "start": "303720",
    "end": "306080"
  },
  {
    "text": "such as the commit message Branch stage",
    "start": "306080",
    "end": "308680"
  },
  {
    "text": "name job name and how the pipeline was",
    "start": "308680",
    "end": "310960"
  },
  {
    "text": "started by comparing the variables to",
    "start": "310960",
    "end": "313360"
  },
  {
    "text": "job conditions the cicd service will",
    "start": "313360",
    "end": "316160"
  },
  {
    "text": "select the jobs to include in the",
    "start": "316160",
    "end": "318080"
  },
  {
    "text": "pipeline we can see that only job one is",
    "start": "318080",
    "end": "320600"
  },
  {
    "text": "applicable to run in response to the",
    "start": "320600",
    "end": "322759"
  },
  {
    "text": "developer commit so the dynamically",
    "start": "322759",
    "end": "325160"
  },
  {
    "text": "created pipeline will only contain job",
    "start": "325160",
    "end": "327880"
  },
  {
    "text": "one we've now con included our cicd",
    "start": "327880",
    "end": "330639"
  },
  {
    "text": "primer I hope you have your swimsuit on",
    "start": "330639",
    "end": "332919"
  },
  {
    "text": "since we're about to dive into opa's",
    "start": "332919",
    "end": "334880"
  },
  {
    "text": "cicd implementations as of this",
    "start": "334880",
    "end": "337160"
  },
  {
    "text": "recording team Opa chose to utilize",
    "start": "337160",
    "end": "339840"
  },
  {
    "text": "gitlab CI for its outof the-box cicd",
    "start": "339840",
    "end": "342639"
  },
  {
    "text": "Solutions so does this mean that your",
    "start": "342639",
    "end": "344680"
  },
  {
    "text": "company can't use Opa if you don't use",
    "start": "344680",
    "end": "346720"
  },
  {
    "text": "gitlab not at all you can use Opa with",
    "start": "346720",
    "end": "349560"
  },
  {
    "text": "other providers like GitHub but it will",
    "start": "349560",
    "end": "351600"
  },
  {
    "text": "take a little bit more work either way",
    "start": "351600",
    "end": "354479"
  },
  {
    "text": "understanding the details of opa cicd",
    "start": "354479",
    "end": "356639"
  },
  {
    "text": "solution will be very helpful to you",
    "start": "356639",
    "end": "358800"
  },
  {
    "text": "when you install Opa it will create a",
    "start": "358800",
    "end": "360960"
  },
  {
    "text": "small temporary gitlab service that runs",
    "start": "360960",
    "end": "363479"
  },
  {
    "text": "on ec2s which is useful for",
    "start": "363479",
    "end": "365440"
  },
  {
    "text": "demonstration purposes the first ec2",
    "start": "365440",
    "end": "368599"
  },
  {
    "text": "runs a free community edition of gitlab",
    "start": "368599",
    "end": "371599"
  },
  {
    "text": "from the AWS Marketplace gitlab cicd",
    "start": "371599",
    "end": "374880"
  },
  {
    "text": "pipelines are executed on a separate ec2",
    "start": "374880",
    "end": "377639"
  },
  {
    "text": "instance this solution is not intended",
    "start": "377639",
    "end": "379800"
  },
  {
    "text": "for production use to use gitlab in a",
    "start": "379800",
    "end": "382360"
  },
  {
    "text": "production environment you would want to",
    "start": "382360",
    "end": "384479"
  },
  {
    "text": "either host it on AWS in a scalable and",
    "start": "384479",
    "end": "387039"
  },
  {
    "text": "highly available way or pay for get",
    "start": "387039",
    "end": "389560"
  },
  {
    "text": "lab's SAS solution or host gitlab on",
    "start": "389560",
    "end": "392319"
  },
  {
    "text": "premises if you are using gitlab you may",
    "start": "392319",
    "end": "394840"
  },
  {
    "text": "find these links helpful if you want to",
    "start": "394840",
    "end": "396680"
  },
  {
    "text": "use GitHub instead of gitlab here are",
    "start": "396680",
    "end": "399000"
  },
  {
    "text": "some equivalent links to those provided",
    "start": "399000",
    "end": "400720"
  },
  {
    "text": "on the previous slide in this section",
    "start": "400720",
    "end": "402880"
  },
  {
    "text": "we'll examine how Opa application cicd",
    "start": "402880",
    "end": "405479"
  },
  {
    "text": "pipelines work we'll talk about the",
    "start": "405479",
    "end": "407479"
  },
  {
    "text": "choices that team Opa made when",
    "start": "407479",
    "end": "409479"
  },
  {
    "text": "implementing our out-of-the-box solution",
    "start": "409479",
    "end": "411880"
  },
  {
    "text": "as well as ways that you can customize",
    "start": "411880",
    "end": "413840"
  },
  {
    "text": "the implementation for your needs every",
    "start": "413840",
    "end": "416479"
  },
  {
    "text": "business has its own processes and tool",
    "start": "416479",
    "end": "418759"
  },
  {
    "text": "sets that it uses for cicd the intent",
    "start": "418759",
    "end": "421960"
  },
  {
    "text": "behind opa's cicd implementation is not",
    "start": "421960",
    "end": "424919"
  },
  {
    "text": "to imply that there's one right way to",
    "start": "424919",
    "end": "427360"
  },
  {
    "text": "do cicd or that Opa requires a specific",
    "start": "427360",
    "end": "430759"
  },
  {
    "text": "cicd implementation instead think of",
    "start": "430759",
    "end": "434240"
  },
  {
    "text": "opa's cicd solution as a reference",
    "start": "434240",
    "end": "436759"
  },
  {
    "text": "implementation or a 90% solution that",
    "start": "436759",
    "end": "440000"
  },
  {
    "text": "lays down a framework that you can then",
    "start": "440000",
    "end": "442160"
  },
  {
    "text": "add to or alter to meet your needs",
    "start": "442160",
    "end": "444960"
  },
  {
    "text": "before you can customize it though",
    "start": "444960",
    "end": "446680"
  },
  {
    "text": "you'll need to understand it so let's",
    "start": "446680",
    "end": "448560"
  },
  {
    "text": "get into the detail",
    "start": "448560",
    "end": "450000"
  },
  {
    "text": "we'll start by discussing the OPA cicd",
    "start": "450000",
    "end": "452240"
  },
  {
    "text": "pipeline flow at a high level and how",
    "start": "452240",
    "end": "454560"
  },
  {
    "text": "git branching strategies impact this",
    "start": "454560",
    "end": "456800"
  },
  {
    "text": "flow Opus outof thebox application cicd",
    "start": "456800",
    "end": "459720"
  },
  {
    "text": "pipelines are based on four design",
    "start": "459720",
    "end": "462120"
  },
  {
    "text": "choices first each application",
    "start": "462120",
    "end": "464680"
  },
  {
    "text": "environment will get a dedicated stage",
    "start": "464680",
    "end": "466319"
  },
  {
    "text": "in the pipeline second the pipeline will",
    "start": "466319",
    "end": "469080"
  },
  {
    "text": "include all environment stages one right",
    "start": "469080",
    "end": "471240"
  },
  {
    "text": "after the other third the entire",
    "start": "471240",
    "end": "473759"
  },
  {
    "text": "pipeline will run using the source code",
    "start": "473759",
    "end": "475960"
  },
  {
    "text": "from a single commit in a single Branch",
    "start": "475960",
    "end": "478840"
  },
  {
    "text": "finally the pipeline does not actually",
    "start": "478840",
    "end": "481080"
  },
  {
    "text": "deploy the new version of the app it",
    "start": "481080",
    "end": "483440"
  },
  {
    "text": "just builds the app and stages it to",
    "start": "483440",
    "end": "485680"
  },
  {
    "text": "make it available for deployment this is",
    "start": "485680",
    "end": "487840"
  },
  {
    "text": "because Opa provides the ability to",
    "start": "487840",
    "end": "489879"
  },
  {
    "text": "actually deploy from the UI instead of",
    "start": "489879",
    "end": "492319"
  },
  {
    "text": "the pipeline this is one of the design",
    "start": "492319",
    "end": "494479"
  },
  {
    "text": "choices you may choose to change you may",
    "start": "494479",
    "end": "497240"
  },
  {
    "text": "want the pipeline to do the deployment",
    "start": "497240",
    "end": "499919"
  },
  {
    "text": "if so you can modify the pipeline to run",
    "start": "499919",
    "end": "502520"
  },
  {
    "text": "the additional commands to deploy the",
    "start": "502520",
    "end": "504280"
  },
  {
    "text": "application after it has been staged and",
    "start": "504280",
    "end": "506919"
  },
  {
    "text": "you can modify the OPA UI to dis able to",
    "start": "506919",
    "end": "509800"
  },
  {
    "text": "deploy button putting the idea of",
    "start": "509800",
    "end": "512360"
  },
  {
    "text": "customizations aside for now let's look",
    "start": "512360",
    "end": "514880"
  },
  {
    "text": "at a visual representation of Opus cicd",
    "start": "514880",
    "end": "518080"
  },
  {
    "text": "design choices to gain a better",
    "start": "518080",
    "end": "520159"
  },
  {
    "text": "understanding here we see that a",
    "start": "520159",
    "end": "522000"
  },
  {
    "text": "developer is merging a code change to a",
    "start": "522000",
    "end": "524200"
  },
  {
    "text": "particular Branch let's assume this is",
    "start": "524200",
    "end": "526360"
  },
  {
    "text": "the main branch the pipeline will",
    "start": "526360",
    "end": "528519"
  },
  {
    "text": "automatically kick off when the commit",
    "start": "528519",
    "end": "530000"
  },
  {
    "text": "is merged the pipeline will first build",
    "start": "530000",
    "end": "532360"
  },
  {
    "text": "and Stage the application release",
    "start": "532360",
    "end": "533920"
  },
  {
    "text": "artifacts for the dev environment then",
    "start": "533920",
    "end": "535920"
  },
  {
    "text": "it will do the same for QA and prod if",
    "start": "535920",
    "end": "538320"
  },
  {
    "text": "an error happens at any stage the",
    "start": "538320",
    "end": "540360"
  },
  {
    "text": "pipeline will stop and it will not",
    "start": "540360",
    "end": "542000"
  },
  {
    "text": "attempt to proceed to the next stage",
    "start": "542000",
    "end": "544800"
  },
  {
    "text": "let's drill down a little deeper and see",
    "start": "544800",
    "end": "546320"
  },
  {
    "text": "what happens in a stage remember that an",
    "start": "546320",
    "end": "549120"
  },
  {
    "text": "Opa environment can can be associated",
    "start": "549120",
    "end": "551440"
  },
  {
    "text": "with one or more environment providers",
    "start": "551440",
    "end": "553839"
  },
  {
    "text": "while an environment is just metadata",
    "start": "553839",
    "end": "555959"
  },
  {
    "text": "environment providers are a",
    "start": "555959",
    "end": "557560"
  },
  {
    "text": "representation of an AWS account and",
    "start": "557560",
    "end": "560120"
  },
  {
    "text": "region where the application will run",
    "start": "560120",
    "end": "562720"
  },
  {
    "text": "when environment providers are created",
    "start": "562720",
    "end": "564839"
  },
  {
    "text": "they create resources in an AWS account",
    "start": "564839",
    "end": "567519"
  },
  {
    "text": "and region that support app applications",
    "start": "567519",
    "end": "570600"
  },
  {
    "text": "if you want your application to utilize",
    "start": "570600",
    "end": "572320"
  },
  {
    "text": "multiple regions your platform engineer",
    "start": "572320",
    "end": "574839"
  },
  {
    "text": "can configure Opa environments that are",
    "start": "574839",
    "end": "576959"
  },
  {
    "text": "associated with multiple environment",
    "start": "576959",
    "end": "579079"
  },
  {
    "text": "providers where each provider relates to",
    "start": "579079",
    "end": "581480"
  },
  {
    "text": "a different region for our diagram we'll",
    "start": "581480",
    "end": "584279"
  },
  {
    "text": "keep it simple and assume that each",
    "start": "584279",
    "end": "586160"
  },
  {
    "text": "environment has only one environment",
    "start": "586160",
    "end": "588160"
  },
  {
    "text": "provider just remember that each",
    "start": "588160",
    "end": "590120"
  },
  {
    "text": "environment stage in our pipeline would",
    "start": "590120",
    "end": "592279"
  },
  {
    "text": "execute steps for all providers that are",
    "start": "592279",
    "end": "594800"
  },
  {
    "text": "associated with the environment let's",
    "start": "594800",
    "end": "597560"
  },
  {
    "text": "continue drilling down and see see what",
    "start": "597560",
    "end": "599480"
  },
  {
    "text": "jobs run in each stage out of the box an",
    "start": "599480",
    "end": "602920"
  },
  {
    "text": "Opa application has two jobs that must",
    "start": "602920",
    "end": "605640"
  },
  {
    "text": "be run per environment the first is to",
    "start": "605640",
    "end": "608920"
  },
  {
    "text": "execute an infrastructure as code script",
    "start": "608920",
    "end": "611440"
  },
  {
    "text": "that will create resources that are",
    "start": "611440",
    "end": "613040"
  },
  {
    "text": "needed by the application these",
    "start": "613040",
    "end": "615399"
  },
  {
    "text": "resources are application specific which",
    "start": "615399",
    "end": "617880"
  },
  {
    "text": "is why they are not created as part of",
    "start": "617880",
    "end": "620160"
  },
  {
    "text": "the environment provider construction an",
    "start": "620160",
    "end": "622200"
  },
  {
    "text": "example of when you would need an",
    "start": "622200",
    "end": "623680"
  },
  {
    "text": "application specific resource is if your",
    "start": "623680",
    "end": "626160"
  },
  {
    "text": "application is containerized you would",
    "start": "626160",
    "end": "628399"
  },
  {
    "text": "want your pipeline to be able to build",
    "start": "628399",
    "end": "629760"
  },
  {
    "text": "the container image of your application",
    "start": "629760",
    "end": "631880"
  },
  {
    "text": "but once it does it needs a place to",
    "start": "631880",
    "end": "633720"
  },
  {
    "text": "store that image this is where",
    "start": "633720",
    "end": "635760"
  },
  {
    "text": "application infrastructure as code comes",
    "start": "635760",
    "end": "637639"
  },
  {
    "text": "in handy the IAC scripts run before the",
    "start": "637639",
    "end": "640959"
  },
  {
    "text": "image is built and the IAC script could",
    "start": "640959",
    "end": "643600"
  },
  {
    "text": "create a container image repository",
    "start": "643600",
    "end": "646079"
  },
  {
    "text": "using the elastic container registry",
    "start": "646079",
    "end": "647920"
  },
  {
    "text": "service to give you a place to store",
    "start": "647920",
    "end": "649839"
  },
  {
    "text": "your application's container images the",
    "start": "649839",
    "end": "652120"
  },
  {
    "text": "next job of our pipeline after executing",
    "start": "652120",
    "end": "654720"
  },
  {
    "text": "the application's IAC scripts is to",
    "start": "654720",
    "end": "657360"
  },
  {
    "text": "Stage the release I apologize for the",
    "start": "657360",
    "end": "660120"
  },
  {
    "text": "overloaded use of the word stage here",
    "start": "660120",
    "end": "662880"
  },
  {
    "text": "pipelines have stages and we are also",
    "start": "662880",
    "end": "665160"
  },
  {
    "text": "trying to Stage our new application",
    "start": "665160",
    "end": "667079"
  },
  {
    "text": "version for each environment so that it",
    "start": "667079",
    "end": "669440"
  },
  {
    "text": "is ready for deployment examples of",
    "start": "669440",
    "end": "671959"
  },
  {
    "text": "staging an application could be creating",
    "start": "671959",
    "end": "674399"
  },
  {
    "text": "a container image and storing it in a",
    "start": "674399",
    "end": "677040"
  },
  {
    "text": "registry or zipping up our built",
    "start": "677040",
    "end": "679360"
  },
  {
    "text": "application and storing that somewhere",
    "start": "679360",
    "end": "681480"
  },
  {
    "text": "such as an S3 bucket there's one missing",
    "start": "681480",
    "end": "683959"
  },
  {
    "text": "piece to our pipeline puzzle that we",
    "start": "683959",
    "end": "685880"
  },
  {
    "text": "still need to talk about from our",
    "start": "685880",
    "end": "687800"
  },
  {
    "text": "diagram it appears is that every code",
    "start": "687800",
    "end": "689880"
  },
  {
    "text": "change that is merged by a developer to",
    "start": "689880",
    "end": "692160"
  },
  {
    "text": "the main branch would eventually result",
    "start": "692160",
    "end": "694440"
  },
  {
    "text": "in updating the prod environment this",
    "start": "694440",
    "end": "697040"
  },
  {
    "text": "could be what you want if you do",
    "start": "697040",
    "end": "698600"
  },
  {
    "text": "multiple application releases a day and",
    "start": "698600",
    "end": "701000"
  },
  {
    "text": "you have sufficient automations to",
    "start": "701000",
    "end": "703160"
  },
  {
    "text": "validate each release many organizations",
    "start": "703160",
    "end": "706480"
  },
  {
    "text": "choose not to automatically send changes",
    "start": "706480",
    "end": "708519"
  },
  {
    "text": "to production instead they want to have",
    "start": "708519",
    "end": "711160"
  },
  {
    "text": "a formal approval process before code",
    "start": "711160",
    "end": "713720"
  },
  {
    "text": "changes can be deployed to certain",
    "start": "713720",
    "end": "715279"
  },
  {
    "text": "environments like production the outof",
    "start": "715279",
    "end": "717560"
  },
  {
    "text": "the-box OPA cicd solution supports the",
    "start": "717560",
    "end": "720560"
  },
  {
    "text": "idea of protected environments that",
    "start": "720560",
    "end": "722920"
  },
  {
    "text": "require an approval before being updated",
    "start": "722920",
    "end": "725839"
  },
  {
    "text": "in our diagram we can see that the dev",
    "start": "725839",
    "end": "728560"
  },
  {
    "text": "and QA environments will be updated",
    "start": "728560",
    "end": "730959"
  },
  {
    "text": "automatically when changes are merged to",
    "start": "730959",
    "end": "732880"
  },
  {
    "text": "the main branch but that the production",
    "start": "732880",
    "end": "735240"
  },
  {
    "text": "environment requires manual approval",
    "start": "735240",
    "end": "738079"
  },
  {
    "text": "opa's solution is simply to Mark jobs in",
    "start": "738079",
    "end": "740720"
  },
  {
    "text": "the protected environment stage as",
    "start": "740720",
    "end": "742959"
  },
  {
    "text": "requiring manual approval when the",
    "start": "742959",
    "end": "745480"
  },
  {
    "text": "pipeline sees that manual approval is",
    "start": "745480",
    "end": "747279"
  },
  {
    "text": "needed it pauses exec ution and waits",
    "start": "747279",
    "end": "750040"
  },
  {
    "text": "for a person to click a button in the",
    "start": "750040",
    "end": "752040"
  },
  {
    "text": "pipeline UI before it will continue",
    "start": "752040",
    "end": "754839"
  },
  {
    "text": "remember that it is the platform",
    "start": "754839",
    "end": "756519"
  },
  {
    "text": "engineers's responsibility to configure",
    "start": "756519",
    "end": "759160"
  },
  {
    "text": "which environments require approvals the",
    "start": "759160",
    "end": "761480"
  },
  {
    "text": "out-of-the-box solution may not be",
    "start": "761480",
    "end": "763279"
  },
  {
    "text": "enough for your company remember that",
    "start": "763279",
    "end": "765320"
  },
  {
    "text": "you can update the pipelines to do",
    "start": "765320",
    "end": "767440"
  },
  {
    "text": "things like create a service now ticket",
    "start": "767440",
    "end": "769600"
  },
  {
    "text": "for the release or ensure that only",
    "start": "769600",
    "end": "772079"
  },
  {
    "text": "members of a certain group have the",
    "start": "772079",
    "end": "774120"
  },
  {
    "text": "authority to approve deployments the OPA",
    "start": "774120",
    "end": "777279"
  },
  {
    "text": "cicd solution works but it is intended",
    "start": "777279",
    "end": "780199"
  },
  {
    "text": "to be customized to suit your company's",
    "start": "780199",
    "end": "782680"
  },
  {
    "text": "best practices and tool sets looking at",
    "start": "782680",
    "end": "785279"
  },
  {
    "text": "the design overall let's examine its",
    "start": "785279",
    "end": "787760"
  },
  {
    "text": "pros and cons on the positive side this",
    "start": "787760",
    "end": "791120"
  },
  {
    "text": "design has several benefits firstly it",
    "start": "791120",
    "end": "793440"
  },
  {
    "text": "guarantees that the same git commit is",
    "start": "793440",
    "end": "795920"
  },
  {
    "text": "used in every environment this is",
    "start": "795920",
    "end": "798279"
  },
  {
    "text": "important because it allows you to test",
    "start": "798279",
    "end": "800160"
  },
  {
    "text": "and validate the application in lower",
    "start": "800160",
    "end": "802120"
  },
  {
    "text": "environments before promoting those",
    "start": "802120",
    "end": "803959"
  },
  {
    "text": "changes up to the next environment with",
    "start": "803959",
    "end": "806519"
  },
  {
    "text": "this design there's no possibility that",
    "start": "806519",
    "end": "808959"
  },
  {
    "text": "code changes could make it into the",
    "start": "808959",
    "end": "810800"
  },
  {
    "text": "production environment that have not had",
    "start": "810800",
    "end": "812639"
  },
  {
    "text": "a chance to be validated in lower",
    "start": "812639",
    "end": "814720"
  },
  {
    "text": "environments another benefit of this",
    "start": "814720",
    "end": "816839"
  },
  {
    "text": "design is that it removes the need for",
    "start": "816839",
    "end": "818959"
  },
  {
    "text": "managing and syncing across multiple git",
    "start": "818959",
    "end": "821320"
  },
  {
    "text": "branches which can be a tedious and",
    "start": "821320",
    "end": "823480"
  },
  {
    "text": "error prone manual process a drawback of",
    "start": "823480",
    "end": "826560"
  },
  {
    "text": "this design is that we won't allow it to",
    "start": "826560",
    "end": "828760"
  },
  {
    "text": "run to completion most of the time this",
    "start": "828760",
    "end": "831079"
  },
  {
    "text": "is because not every commit is",
    "start": "831079",
    "end": "832959"
  },
  {
    "text": "releasable to production some commits",
    "start": "832959",
    "end": "835240"
  },
  {
    "text": "may contain bugs or incomplete",
    "start": "835240",
    "end": "837480"
  },
  {
    "text": "functionality let's let's see a visual",
    "start": "837480",
    "end": "839440"
  },
  {
    "text": "example of such a scenario here we see a",
    "start": "839440",
    "end": "841680"
  },
  {
    "text": "pipeline execution that runs as a result",
    "start": "841680",
    "end": "844040"
  },
  {
    "text": "of commit one being merged during the",
    "start": "844040",
    "end": "846519"
  },
  {
    "text": "dev stage the pipeline fails due to some",
    "start": "846519",
    "end": "849160"
  },
  {
    "text": "error in this case the pipeline stops",
    "start": "849160",
    "end": "851920"
  },
  {
    "text": "and never runs to QA and prod stages now",
    "start": "851920",
    "end": "854720"
  },
  {
    "text": "we have a second commit being merged",
    "start": "854720",
    "end": "856680"
  },
  {
    "text": "that fixes the bug but contains an",
    "start": "856680",
    "end": "858959"
  },
  {
    "text": "incomplete implementation of a key",
    "start": "858959",
    "end": "860920"
  },
  {
    "text": "feature assuming we are not using",
    "start": "860920",
    "end": "863160"
  },
  {
    "text": "feature Flags to hide the incomplete",
    "start": "863160",
    "end": "865160"
  },
  {
    "text": "feature will decline to manually approve",
    "start": "865160",
    "end": "867800"
  },
  {
    "text": "the pipeline to continue to the prod",
    "start": "867800",
    "end": "870079"
  },
  {
    "text": "stage in commit three we finally have a",
    "start": "870079",
    "end": "872800"
  },
  {
    "text": "non- buggy and complete implementation",
    "start": "872800",
    "end": "875000"
  },
  {
    "text": "of our code we will approve this",
    "start": "875000",
    "end": "877079"
  },
  {
    "text": "pipeline to run completely so that prod",
    "start": "877079",
    "end": "879519"
  },
  {
    "text": "is updated looking at all three of these",
    "start": "879519",
    "end": "882519"
  },
  {
    "text": "pipeline executions we can see that only",
    "start": "882519",
    "end": "885160"
  },
  {
    "text": "one of the three ran the full pipeline",
    "start": "885160",
    "end": "888199"
  },
  {
    "text": "the incomplete pipelines will continue",
    "start": "888199",
    "end": "890360"
  },
  {
    "text": "to show up as incomplete and this can",
    "start": "890360",
    "end": "892560"
  },
  {
    "text": "cause confusion to remedy this we can",
    "start": "892560",
    "end": "895560"
  },
  {
    "text": "set pipelines to expire if they have not",
    "start": "895560",
    "end": "898120"
  },
  {
    "text": "completed with within a certain amount",
    "start": "898120",
    "end": "899399"
  },
  {
    "text": "of time or manually cancel pipelines",
    "start": "899399",
    "end": "902160"
  },
  {
    "text": "that have changes that we know should",
    "start": "902160",
    "end": "903920"
  },
  {
    "text": "never get promoted to the prod",
    "start": "903920",
    "end": "905560"
  },
  {
    "text": "environment let's briefly explore some",
    "start": "905560",
    "end": "907560"
  },
  {
    "text": "alternatives to the outof the-box cicd",
    "start": "907560",
    "end": "910120"
  },
  {
    "text": "design that you could use by customizing",
    "start": "910120",
    "end": "912279"
  },
  {
    "text": "Opa for this discussion we'll assume",
    "start": "912279",
    "end": "915120"
  },
  {
    "text": "that your cic technology vendors",
    "start": "915120",
    "end": "917600"
  },
  {
    "text": "implementation supports dynamically",
    "start": "917600",
    "end": "920000"
  },
  {
    "text": "determining if a job should be included",
    "start": "920000",
    "end": "921920"
  },
  {
    "text": "in the pipeline if it does not you can",
    "start": "921920",
    "end": "924600"
  },
  {
    "text": "still create multiple static pipelines",
    "start": "924600",
    "end": "926920"
  },
  {
    "text": "that do different things but you also",
    "start": "926920",
    "end": "929120"
  },
  {
    "text": "have to customize Opa so that it knows",
    "start": "929120",
    "end": "931680"
  },
  {
    "text": "when to call which pipeline let's",
    "start": "931680",
    "end": "934120"
  },
  {
    "text": "revisit our last example and discuss a",
    "start": "934120",
    "end": "936319"
  },
  {
    "text": "way that we could prevent having cicd",
    "start": "936319",
    "end": "938440"
  },
  {
    "text": "executions that never complete because",
    "start": "938440",
    "end": "940639"
  },
  {
    "text": "the code is not ready to be deployed to",
    "start": "940639",
    "end": "942440"
  },
  {
    "text": "production to prevent this you could",
    "start": "942440",
    "end": "945040"
  },
  {
    "text": "customize the production environment",
    "start": "945040",
    "end": "946680"
  },
  {
    "text": "cicd job so that it is only included in",
    "start": "946680",
    "end": "949800"
  },
  {
    "text": "the pipeline if the most recent git",
    "start": "949800",
    "end": "951959"
  },
  {
    "text": "commit message contains some special",
    "start": "951959",
    "end": "953759"
  },
  {
    "text": "string such as release candidate equals",
    "start": "953759",
    "end": "956160"
  },
  {
    "text": "true or something like that this would",
    "start": "956160",
    "end": "958600"
  },
  {
    "text": "would make it so that the pipeline would",
    "start": "958600",
    "end": "960519"
  },
  {
    "text": "usually only deploy to the dev",
    "start": "960519",
    "end": "962279"
  },
  {
    "text": "environment and QA environment and the",
    "start": "962279",
    "end": "964519"
  },
  {
    "text": "whole pipeline instance would complete",
    "start": "964519",
    "end": "966600"
  },
  {
    "text": "if no errors occur the pipeline would",
    "start": "966600",
    "end": "968920"
  },
  {
    "text": "only include the production deployment",
    "start": "968920",
    "end": "970759"
  },
  {
    "text": "stage if the get commit message",
    "start": "970759",
    "end": "973040"
  },
  {
    "text": "indicated that it should our next",
    "start": "973040",
    "end": "974880"
  },
  {
    "text": "possible customization is to use a two-",
    "start": "974880",
    "end": "976920"
  },
  {
    "text": "Branch strategy the first branch is a",
    "start": "976920",
    "end": "979360"
  },
  {
    "text": "development Branch our Dev and QA",
    "start": "979360",
    "end": "981759"
  },
  {
    "text": "deployment jobs will only trigger when",
    "start": "981759",
    "end": "983880"
  },
  {
    "text": "commits are made to the development",
    "start": "983880",
    "end": "985399"
  },
  {
    "text": "Branch we then add the concept of a",
    "start": "985399",
    "end": "987800"
  },
  {
    "text": "release branch and our prod deployment",
    "start": "987800",
    "end": "989880"
  },
  {
    "text": "jobs will run only when that branch is",
    "start": "989880",
    "end": "992199"
  },
  {
    "text": "updated Opa is perfectly compliant with",
    "start": "992199",
    "end": "994839"
  },
  {
    "text": "this strategy all you need to do to",
    "start": "994839",
    "end": "997000"
  },
  {
    "text": "implement it is to update the job",
    "start": "997000",
    "end": "999079"
  },
  {
    "text": "conditionals so that they reference the",
    "start": "999079",
    "end": "1001000"
  },
  {
    "text": "right Branch instead of always",
    "start": "1001000",
    "end": "1002600"
  },
  {
    "text": "triggering based on commits to a single",
    "start": "1002600",
    "end": "1004600"
  },
  {
    "text": "Branch the last alternative cicd",
    "start": "1004600",
    "end": "1006759"
  },
  {
    "text": "branching strategy we'll discuss is that",
    "start": "1006759",
    "end": "1008839"
  },
  {
    "text": "you could choose to create a branch per",
    "start": "1008839",
    "end": "1010680"
  },
  {
    "text": "environment the benefit of this is that",
    "start": "1010680",
    "end": "1013160"
  },
  {
    "text": "you have complete and independent",
    "start": "1013160",
    "end": "1014959"
  },
  {
    "text": "control of what goes into each",
    "start": "1014959",
    "end": "1016680"
  },
  {
    "text": "environment the downside is that it",
    "start": "1016680",
    "end": "1019120"
  },
  {
    "text": "relies upon having multiple longli",
    "start": "1019120",
    "end": "1021279"
  },
  {
    "text": "branches which is considered an",
    "start": "1021279",
    "end": "1023160"
  },
  {
    "text": "anti-pattern by many the problems",
    "start": "1023160",
    "end": "1025400"
  },
  {
    "text": "include the fact that a change could",
    "start": "1025400",
    "end": "1027360"
  },
  {
    "text": "make it into production that was never",
    "start": "1027360",
    "end": "1029360"
  },
  {
    "text": "deployed or validated in a lower",
    "start": "1029360",
    "end": "1031360"
  },
  {
    "text": "environment and that syncing between",
    "start": "1031360",
    "end": "1033880"
  },
  {
    "text": "branches can be an error prone and",
    "start": "1033880",
    "end": "1035720"
  },
  {
    "text": "tedious process now that we understand",
    "start": "1035720",
    "end": "1037839"
  },
  {
    "text": "Opus outof thebox cicd flow as well as",
    "start": "1037839",
    "end": "1040760"
  },
  {
    "text": "some Alternatives let's move on to",
    "start": "1040760",
    "end": "1043000"
  },
  {
    "text": "discuss how Opa pipelines can deploy to",
    "start": "1043000",
    "end": "1045558"
  },
  {
    "text": "multiple AWS accounts and regions before",
    "start": "1045559",
    "end": "1048520"
  },
  {
    "text": "Opa cicd job can deploy anything to an",
    "start": "1048520",
    "end": "1050960"
  },
  {
    "text": "AWS account it first has to know what",
    "start": "1050960",
    "end": "1053760"
  },
  {
    "text": "account and region is associated with",
    "start": "1053760",
    "end": "1055960"
  },
  {
    "text": "the environment provider it is currently",
    "start": "1055960",
    "end": "1058280"
  },
  {
    "text": "processing since the running pipeline",
    "start": "1058280",
    "end": "1060440"
  },
  {
    "text": "job already has all of the application",
    "start": "1060440",
    "end": "1062520"
  },
  {
    "text": "source code files it can look there to",
    "start": "1062520",
    "end": "1065360"
  },
  {
    "text": "find the provider's settings this is",
    "start": "1065360",
    "end": "1067840"
  },
  {
    "text": "because a provider settings file is",
    "start": "1067840",
    "end": "1070160"
  },
  {
    "text": "added to the application repository when",
    "start": "1070160",
    "end": "1072760"
  },
  {
    "text": "the application is associated with a new",
    "start": "1072760",
    "end": "1075320"
  },
  {
    "text": "environment the pipeline job will look",
    "start": "1075320",
    "end": "1077559"
  },
  {
    "text": "for the provider provider properties",
    "start": "1077559",
    "end": "1079159"
  },
  {
    "text": "files under the AWS deployment providers",
    "start": "1079159",
    "end": "1082960"
  },
  {
    "text": "directory the provider properties file",
    "start": "1082960",
    "end": "1085400"
  },
  {
    "text": "contains not only the AWS account number",
    "start": "1085400",
    "end": "1088200"
  },
  {
    "text": "and region but other valuable",
    "start": "1088200",
    "end": "1090080"
  },
  {
    "text": "information as well such as the ID of an",
    "start": "1090080",
    "end": "1093000"
  },
  {
    "text": "imim role that was created specifically",
    "start": "1093000",
    "end": "1095640"
  },
  {
    "text": "for this provider that has permissions",
    "start": "1095640",
    "end": "1097799"
  },
  {
    "text": "to create update and delete resources in",
    "start": "1097799",
    "end": "1100760"
  },
  {
    "text": "the provider account that are specific",
    "start": "1100760",
    "end": "1102880"
  },
  {
    "text": "to the application let's see what our",
    "start": "1102880",
    "end": "1105400"
  },
  {
    "text": "diagram looks like with these new pieces",
    "start": "1105400",
    "end": "1107679"
  },
  {
    "text": "added we can see that the pipeline has",
    "start": "1107679",
    "end": "1109919"
  },
  {
    "text": "an IM role to start with but it will",
    "start": "1109919",
    "end": "1112440"
  },
  {
    "text": "need to assume the provider's role so",
    "start": "1112440",
    "end": "1114880"
  },
  {
    "text": "that it has permissions to modify",
    "start": "1114880",
    "end": "1116679"
  },
  {
    "text": "resources in the provider account the",
    "start": "1116679",
    "end": "1119000"
  },
  {
    "text": "more applications you have the more cicd",
    "start": "1119000",
    "end": "1121679"
  },
  {
    "text": "pipelines you have to maintain often",
    "start": "1121679",
    "end": "1124159"
  },
  {
    "text": "organizations Implement a best practices",
    "start": "1124159",
    "end": "1126480"
  },
  {
    "text": "pipeline standard that they want all",
    "start": "1126480",
    "end": "1128640"
  },
  {
    "text": "application pipelines to adhere to this",
    "start": "1128640",
    "end": "1131480"
  },
  {
    "text": "standard may continue to improve and",
    "start": "1131480",
    "end": "1133280"
  },
  {
    "text": "evolve even after several application",
    "start": "1133280",
    "end": "1135679"
  },
  {
    "text": "pipelines have been configured with the",
    "start": "1135679",
    "end": "1137760"
  },
  {
    "text": "old standard",
    "start": "1137760",
    "end": "1139240"
  },
  {
    "text": "Opa accounts for updating cicd",
    "start": "1139240",
    "end": "1141360"
  },
  {
    "text": "configurations in a single place in a",
    "start": "1141360",
    "end": "1143919"
  },
  {
    "text": "way that will not only affect all",
    "start": "1143919",
    "end": "1145799"
  },
  {
    "text": "applications that are created in the",
    "start": "1145799",
    "end": "1147400"
  },
  {
    "text": "future but also all existing",
    "start": "1147400",
    "end": "1149760"
  },
  {
    "text": "applications let's see how this works",
    "start": "1149760",
    "end": "1152039"
  },
  {
    "text": "you might be surprised to find out that",
    "start": "1152039",
    "end": "1153840"
  },
  {
    "text": "the entire cicd pipeline configuration",
    "start": "1153840",
    "end": "1156240"
  },
  {
    "text": "file that is created for an Opa",
    "start": "1156240",
    "end": "1158159"
  },
  {
    "text": "application has very few lines of code",
    "start": "1158159",
    "end": "1160960"
  },
  {
    "text": "the reason is that it utilizes a feature",
    "start": "1160960",
    "end": "1163640"
  },
  {
    "text": "implemented by gitlab C that can import",
    "start": "1163640",
    "end": "1166480"
  },
  {
    "text": "files from other repositories as part of",
    "start": "1166480",
    "end": "1169080"
  },
  {
    "text": "the pipeline definition let's study this",
    "start": "1169080",
    "end": "1171440"
  },
  {
    "text": "example of an application's pipeline",
    "start": "1171440",
    "end": "1174039"
  },
  {
    "text": "configuration it states that the",
    "start": "1174039",
    "end": "1175840"
  },
  {
    "text": "pipeline should include three additional",
    "start": "1175840",
    "end": "1178080"
  },
  {
    "text": "files from the main branch of another",
    "start": "1178080",
    "end": "1180679"
  },
  {
    "text": "repository these three files contain",
    "start": "1180679",
    "end": "1183360"
  },
  {
    "text": "implementations of configurations and",
    "start": "1183360",
    "end": "1185840"
  },
  {
    "text": "jobs that the application pipeline will",
    "start": "1185840",
    "end": "1188320"
  },
  {
    "text": "use every time the application pipeline",
    "start": "1188320",
    "end": "1190840"
  },
  {
    "text": "runs it will download a fresh copy of",
    "start": "1190840",
    "end": "1193280"
  },
  {
    "text": "these files in this way Opa allows for",
    "start": "1193280",
    "end": "1196440"
  },
  {
    "text": "platform Engineers to update the job",
    "start": "1196440",
    "end": "1198600"
  },
  {
    "text": "definitions in a single place by",
    "start": "1198600",
    "end": "1201080"
  },
  {
    "text": "modifying the files in a repository that",
    "start": "1201080",
    "end": "1203520"
  },
  {
    "text": "is separate from the application you may",
    "start": "1203520",
    "end": "1205720"
  },
  {
    "text": "be wondering why does the pipeline",
    "start": "1205720",
    "end": "1207720"
  },
  {
    "text": "import three files instead of just a",
    "start": "1207720",
    "end": "1209640"
  },
  {
    "text": "single file the answer is that the",
    "start": "1209640",
    "end": "1211919"
  },
  {
    "text": "reusable implementation files are",
    "start": "1211919",
    "end": "1214000"
  },
  {
    "text": "written in a modular fashion some files",
    "start": "1214000",
    "end": "1216760"
  },
  {
    "text": "are actually shared across multiple",
    "start": "1216760",
    "end": "1218320"
  },
  {
    "text": "application types whereas others are",
    "start": "1218320",
    "end": "1220520"
  },
  {
    "text": "specific to a particular application",
    "start": "1220520",
    "end": "1222799"
  },
  {
    "text": "template in the example shown the first",
    "start": "1222799",
    "end": "1225760"
  },
  {
    "text": "file imported is named gitlab C I job",
    "start": "1225760",
    "end": "1228679"
  },
  {
    "text": "default cdk this file includes",
    "start": "1228679",
    "end": "1231440"
  },
  {
    "text": "implementation details for executing",
    "start": "1231440",
    "end": "1233760"
  },
  {
    "text": "infrastructures code that is written",
    "start": "1233760",
    "end": "1235799"
  },
  {
    "text": "with AWS cdk the this file won't include",
    "start": "1235799",
    "end": "1239880"
  },
  {
    "text": "any details outside of that scope that",
    "start": "1239880",
    "end": "1242400"
  },
  {
    "text": "means the various types of applications",
    "start": "1242400",
    "end": "1244400"
  },
  {
    "text": "that use cdk can reuse this file for",
    "start": "1244400",
    "end": "1247799"
  },
  {
    "text": "example a serverless app could use the",
    "start": "1247799",
    "end": "1250280"
  },
  {
    "text": "same cdk config file as an app that runs",
    "start": "1250280",
    "end": "1253280"
  },
  {
    "text": "on the elastic container service by",
    "start": "1253280",
    "end": "1255799"
  },
  {
    "text": "breaking down cicd configurations into",
    "start": "1255799",
    "end": "1258720"
  },
  {
    "text": "separate files Opa maximizes the ReUse",
    "start": "1258720",
    "end": "1261880"
  },
  {
    "text": "of those configurations across a wider",
    "start": "1261880",
    "end": "1264480"
  },
  {
    "text": "variety of applications all of the",
    "start": "1264480",
    "end": "1266520"
  },
  {
    "text": "centrally managed cicd job definitions",
    "start": "1266520",
    "end": "1269600"
  },
  {
    "text": "can be found in opa's public repository",
    "start": "1269600",
    "end": "1271720"
  },
  {
    "text": "on GitHub under this directory platform",
    "start": "1271720",
    "end": "1274799"
  },
  {
    "text": "Engineers can customize pipeline",
    "start": "1274799",
    "end": "1276919"
  },
  {
    "text": "Behavior by copying these files and then",
    "start": "1276919",
    "end": "1279440"
  },
  {
    "text": "modifying them to meet your company's",
    "start": "1279440",
    "end": "1281679"
  },
  {
    "text": "standards it's important to note that",
    "start": "1281679",
    "end": "1284440"
  },
  {
    "text": "after the files are modified they would",
    "start": "1284440",
    "end": "1286440"
  },
  {
    "text": "need to be pushed out to the git rep",
    "start": "1286440",
    "end": "1288080"
  },
  {
    "text": "repository that holds all of opa's",
    "start": "1288080",
    "end": "1290240"
  },
  {
    "text": "template files known as the reference",
    "start": "1290240",
    "end": "1292279"
  },
  {
    "text": "repo this will allow application",
    "start": "1292279",
    "end": "1294799"
  },
  {
    "text": "pipelines to refer to them earlier in",
    "start": "1294799",
    "end": "1297120"
  },
  {
    "text": "this video we talked about how cicd",
    "start": "1297120",
    "end": "1299480"
  },
  {
    "text": "pipelines can be dynamically created",
    "start": "1299480",
    "end": "1301480"
  },
  {
    "text": "based on events Opa uses this technique",
    "start": "1301480",
    "end": "1304520"
  },
  {
    "text": "to configure an application to run in",
    "start": "1304520",
    "end": "1306799"
  },
  {
    "text": "multiple environments let's see how this",
    "start": "1306799",
    "end": "1309000"
  },
  {
    "text": "works a developer can add a new",
    "start": "1309000",
    "end": "1310840"
  },
  {
    "text": "environment for her application through",
    "start": "1310840",
    "end": "1312440"
  },
  {
    "text": "the OPA UI in this example the developer",
    "start": "1312440",
    "end": "1315559"
  },
  {
    "text": "is adding a QA environment the OPA U UI",
    "start": "1315559",
    "end": "1318360"
  },
  {
    "text": "will call a backend API that adds an",
    "start": "1318360",
    "end": "1321279"
  },
  {
    "text": "environment provider properties file to",
    "start": "1321279",
    "end": "1323799"
  },
  {
    "text": "the application's G repository it will",
    "start": "1323799",
    "end": "1326440"
  },
  {
    "text": "commit this change with a commit message",
    "start": "1326440",
    "end": "1328400"
  },
  {
    "text": "of generate cicd stages when this commit",
    "start": "1328400",
    "end": "1332000"
  },
  {
    "text": "is made it triggers the application cic",
    "start": "1332000",
    "end": "1334919"
  },
  {
    "text": "pipeline which has a job that is",
    "start": "1334919",
    "end": "1337279"
  },
  {
    "text": "configured to run when that exact commit",
    "start": "1337279",
    "end": "1339440"
  },
  {
    "text": "message is used the job will accomplish",
    "start": "1339440",
    "end": "1341880"
  },
  {
    "text": "the task of adding a new application",
    "start": "1341880",
    "end": "1344360"
  },
  {
    "text": "environment by updating the",
    "start": "1344360",
    "end": "1346480"
  },
  {
    "text": "application's backstage ENT file to add",
    "start": "1346480",
    "end": "1349080"
  },
  {
    "text": "a relationship with the new environment",
    "start": "1349080",
    "end": "1351480"
  },
  {
    "text": "secondly creating a new cicd",
    "start": "1351480",
    "end": "1354039"
  },
  {
    "text": "configuration file that contains the QA",
    "start": "1354039",
    "end": "1356600"
  },
  {
    "text": "environment deployment jobs and finally",
    "start": "1356600",
    "end": "1359679"
  },
  {
    "text": "configuring the pipeline to include that",
    "start": "1359679",
    "end": "1361880"
  },
  {
    "text": "new jobs configuration file we've",
    "start": "1361880",
    "end": "1364360"
  },
  {
    "text": "covered a lot in this video we saw Opus",
    "start": "1364360",
    "end": "1366880"
  },
  {
    "text": "cicd strategy and how it can deploy to",
    "start": "1366880",
    "end": "1369480"
  },
  {
    "text": "multiple AWS accounts and regions we",
    "start": "1369480",
    "end": "1371840"
  },
  {
    "text": "also learned a lot about various ways",
    "start": "1371840",
    "end": "1373640"
  },
  {
    "text": "that your company can customize opa's",
    "start": "1373640",
    "end": "1375720"
  },
  {
    "text": "out-of-the-box solution thank you for",
    "start": "1375720",
    "end": "1377760"
  },
  {
    "text": "watching in and stay tuned for our next",
    "start": "1377760",
    "end": "1379799"
  },
  {
    "text": "video in the OPA on AWS video",
    "start": "1379799",
    "end": "1382960"
  },
  {
    "text": "series",
    "start": "1382960",
    "end": "1385960"
  }
]