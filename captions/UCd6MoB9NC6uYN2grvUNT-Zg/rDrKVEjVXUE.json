[
  {
    "text": "thanks for coming to mov 301 my name is Michael Parris and I'm gonna be talking about how you can build mobile and web",
    "start": "0",
    "end": "7170"
  },
  {
    "text": "apps on AWS simpler by using some new tools that we've been working on over the past year and even more in the past",
    "start": "7170",
    "end": "14009"
  },
  {
    "text": "few months so what are we going to talk about first we're going to talk about some high-level ideas of what web and",
    "start": "14009",
    "end": "20640"
  },
  {
    "text": "mobile apps are what you need in order to implement web and mobile apps and specifically how to do that on AWS we're",
    "start": "20640",
    "end": "27000"
  },
  {
    "text": "then going to talk about one new product offering that we launched last year at reinvent that has gotten a lot of new features called AWS apps Inc will then",
    "start": "27000",
    "end": "35130"
  },
  {
    "text": "go into a new set of tools called AWS amplify that are really a few things",
    "start": "35130",
    "end": "40379"
  },
  {
    "text": "there's a service there's also a set of open source tools that you download to your machine and that you can contribute to on github and then finally we're",
    "start": "40379",
    "end": "47850"
  },
  {
    "text": "going to talk about how it all fits together and then at my own risk of my own health I'm gonna switch over to my computer and I'm gonna try to build an",
    "start": "47850",
    "end": "53969"
  },
  {
    "text": "app in front of you so what does every app need these are just a few things",
    "start": "53969",
    "end": "60480"
  },
  {
    "text": "there's there's more but one of the first things you have to think about is user Management and authorization that",
    "start": "60480",
    "end": "66780"
  },
  {
    "text": "includes things like how are your users going to log in as well as how are you gonna authorize users to access certain",
    "start": "66780",
    "end": "72960"
  },
  {
    "text": "subsets of data that you operate on in your application in this instance we're",
    "start": "72960",
    "end": "78930"
  },
  {
    "text": "gonna be building an app with a real-time API that implies that we're pushing data down to the client and not just doing the request response model",
    "start": "78930",
    "end": "86600"
  },
  {
    "text": "we're gonna need client SDKs and tooling these will be things that may help you connect to the cloud from your",
    "start": "86600",
    "end": "93030"
  },
  {
    "text": "application as well as see lies and other things to help you spin up those those projects and then to manipulate",
    "start": "93030",
    "end": "99180"
  },
  {
    "text": "the infrastructure in your application and then on the other side we're gonna be talking about more deployment and",
    "start": "99180",
    "end": "104310"
  },
  {
    "text": "operations things such as multiple environments you are likely operating as",
    "start": "104310",
    "end": "109380"
  },
  {
    "text": "a member of a team every team member needs to have their own isolated environment so that you're not stepping on each other's toes and then those need",
    "start": "109380",
    "end": "116040"
  },
  {
    "text": "to be distinct from the environments that you're launching in testing production we're then going to talk about hosting so this is just simple web",
    "start": "116040",
    "end": "122280"
  },
  {
    "text": "hosting there's a new tool in AWS that we just launched last Sunday that's going to help you to do this we'll be",
    "start": "122280",
    "end": "127500"
  },
  {
    "text": "talking about continuous integration and deployment this is really around the when I make a change",
    "start": "127500",
    "end": "133920"
  },
  {
    "text": "my code I want to be able to push it to get and I want to see my my application get built and deployed to my",
    "start": "133920",
    "end": "139170"
  },
  {
    "text": "infrastructure without having to do much else and then we'll be talking a little bit about analytics and how you can",
    "start": "139170",
    "end": "144540"
  },
  {
    "text": "instrument your applications with analytics using certain aw services so",
    "start": "144540",
    "end": "150330"
  },
  {
    "text": "how do we get there there's a lot of services there's over 100 services in AWS now we have Amazon Cognito user",
    "start": "150330",
    "end": "157770"
  },
  {
    "text": "pools that is gonna basically fill in that user management an authorization role for us we've got AWS app sync that",
    "start": "157770",
    "end": "164220"
  },
  {
    "text": "both is a request response model but also provides real-time data publishing",
    "start": "164220",
    "end": "169890"
  },
  {
    "text": "through a pub sub and it acts as a data broker for you we've got the AWS amplify",
    "start": "169890",
    "end": "175049"
  },
  {
    "text": "framework the framework itself is going to help you both spin up applications",
    "start": "175049",
    "end": "182549"
  },
  {
    "text": "using a CLI it's going to help you connect to the cloud and it's also going to help you to you'll see do see sed",
    "start": "182549",
    "end": "189090"
  },
  {
    "text": "we've got the amplify CLI that again it's part of the amplifi offering it's going to help you spin out the project",
    "start": "189090",
    "end": "196170"
  },
  {
    "text": "primarily as well as manage multiple environments the amplify console is a new offering that does CI CD and web",
    "start": "196170",
    "end": "202650"
  },
  {
    "text": "hosting for web apps and Amazon pinpoint which is analytics and user demagoguing",
    "start": "202650",
    "end": "208829"
  },
  {
    "text": "service that you can use both to get information about how your applications being used but you can also create",
    "start": "208829",
    "end": "214680"
  },
  {
    "text": "groups of users and target them with push notifications and other things so",
    "start": "214680",
    "end": "220620"
  },
  {
    "text": "first we're going to look at AWS app sync so what is app sync app sync is a managed server let's graph QL gateway on",
    "start": "220620",
    "end": "226890"
  },
  {
    "text": "AWS it allows you to define the shape of your API using the graphical schema",
    "start": "226890",
    "end": "232019"
  },
  {
    "text": "definition language or SDL for short it allows you to attach data sources that reference data stores that live in your",
    "start": "232019",
    "end": "238500"
  },
  {
    "text": "AWS account and also associates that data source with a role that you have control of so that you can limit what",
    "start": "238500",
    "end": "245310"
  },
  {
    "text": "operations appsync has permission to call on your behalf and then you write resolvers using a templating language",
    "start": "245310",
    "end": "252750"
  },
  {
    "text": "that allows you to basically manipulate information from the graph QL domain into the native language of whatever",
    "start": "252750",
    "end": "259859"
  },
  {
    "text": "that back-end data source is whether it's the dynamo DB or elasticsearch or others and it's also a real-time data",
    "start": "259859",
    "end": "267330"
  },
  {
    "text": "broker so this basically just serves as a pubsub engine that you get without having to configure anything else and it",
    "start": "267330",
    "end": "273550"
  },
  {
    "text": "makes real-time information really easy to implement on top of app sync and that uses mqtt over WebSockets so here's a",
    "start": "273550",
    "end": "282220"
  },
  {
    "text": "diagram of what a basic app sync api looks like there's a lot of blocks but the things to notice or that there's the",
    "start": "282220",
    "end": "288430"
  },
  {
    "text": "app sync where you've got your there's three important concepts there's your schema that is the shape of your data",
    "start": "288430",
    "end": "293620"
  },
  {
    "text": "there's resolvers that is basically the business logic that tells us how to manipulate the information that lives in",
    "start": "293620",
    "end": "300370"
  },
  {
    "text": "your AWS account and then as I mentioned there are data sources which you can think of as a container that points us",
    "start": "300370",
    "end": "305800"
  },
  {
    "text": "to a resource in your account and then associates it with a role so that we can access information and you still have all the security you have all the power",
    "start": "305800",
    "end": "312610"
  },
  {
    "text": "to strip down security and access that you don't give us access power that you don't want us to have so something else",
    "start": "312610",
    "end": "321070"
  },
  {
    "text": "that's really important in this whole conversation is a new technology called graph QL this is the definition of graph",
    "start": "321070",
    "end": "326470"
  },
  {
    "text": "QL from graph QL org so graph QL is a query language for api's in a runtime",
    "start": "326470",
    "end": "331810"
  },
  {
    "text": "for fulfilling those queries with your existing data graph QL provides a complete and understandable description",
    "start": "331810",
    "end": "336880"
  },
  {
    "text": "of the data in your API it gives clients the power to ask for exactly what they need and nothing more makes it easier to",
    "start": "336880",
    "end": "342670"
  },
  {
    "text": "evolve api's over time and it enables powerful developer tools so I'm just gonna quickly jump into this and we'll",
    "start": "342670",
    "end": "349810"
  },
  {
    "text": "go into this in more detail so what does it mean for a graph to be a query language for api's it gives us a",
    "start": "349810",
    "end": "356860"
  },
  {
    "text": "strongly typed language that we can use to interact with information on our server this is different than a pattern",
    "start": "356860",
    "end": "363550"
  },
  {
    "text": "that you might see in restful api is where you use resources you are a URIs in order to denote what resources are in",
    "start": "363550",
    "end": "370270"
  },
  {
    "text": "your API and then you just use HTTP concepts in order to access those things graph QL is actually a full-fledged",
    "start": "370270",
    "end": "376480"
  },
  {
    "text": "language and it has three base operation types there's queries that read data you can think of it like a get request",
    "start": "376480",
    "end": "382210"
  },
  {
    "text": "there's mutations that augment data there you're put in your patch and your posts and you've got subscriptions that",
    "start": "382210",
    "end": "387730"
  },
  {
    "text": "stream data which there's no real concept and rest but you think of it as a WebSocket connection so next it's a",
    "start": "387730",
    "end": "395740"
  },
  {
    "text": "runtime for fulfilling those queries with your existing data so there's the query language that you use to access",
    "start": "395740",
    "end": "401169"
  },
  {
    "text": "them from to request information from your client apps there's also a runtime component that basically defines how a graph QL",
    "start": "401169",
    "end": "408010"
  },
  {
    "text": "server should run and then it defines the logic for how you resolve information from back-end data sources",
    "start": "408010",
    "end": "414040"
  },
  {
    "text": "the cool part about this is that it doesn't actually imply that you're using any particular data source so you can",
    "start": "414040",
    "end": "419830"
  },
  {
    "text": "put a graph QL API in front of pretty much anything you could store information in and then you have the",
    "start": "419830",
    "end": "425710"
  },
  {
    "text": "common interface from the client that you're talking graph QL well then graph QL can talk to DynamoDB or you know",
    "start": "425710",
    "end": "431860"
  },
  {
    "text": "Neptune or RDS or elasticsearch or any old or API that you guys are maintaining",
    "start": "431860",
    "end": "438790"
  },
  {
    "text": "and it'll just work out of the box and then you can see that the query comes in it runs through the runtime the runtime",
    "start": "438790",
    "end": "445090"
  },
  {
    "text": "stitches all the information together and then it returns a response in exactly the same shape that you're expecting it the next piece it's a",
    "start": "445090",
    "end": "453130"
  },
  {
    "text": "complete and understandable description of the data in your API so this is the schema so this you can see here is an",
    "start": "453130",
    "end": "459610"
  },
  {
    "text": "example of the schema definition language at the root of it you have you define the types that handle your root",
    "start": "459610",
    "end": "465790"
  },
  {
    "text": "operations so at the top you see schema and you see lower case Q query points to capital Q query that capital Q query is",
    "start": "465790",
    "end": "472990"
  },
  {
    "text": "just an object type in your schema that you can define however you want you can change the name of you if you want but",
    "start": "472990",
    "end": "478000"
  },
  {
    "text": "it basically is defining what is the root of your applications graph from there you've got straw you strongly type",
    "start": "478000",
    "end": "484120"
  },
  {
    "text": "you have fields and object types types can take argument our fields can take arguments and they return different",
    "start": "484120",
    "end": "490510"
  },
  {
    "text": "shapes of data whether it be in a num or an object type an interface or a Union and then this is strongly typed so as",
    "start": "490510",
    "end": "496750"
  },
  {
    "text": "you're writing your queries you're gonna see that graph two all do validation based off this type system it gives",
    "start": "496750",
    "end": "503740"
  },
  {
    "text": "clients the power to act for exactly what they want nothing more this is a",
    "start": "503740",
    "end": "508870"
  },
  {
    "text": "basically response to over fetching so what this does for you is it makes it so",
    "start": "508870",
    "end": "514030"
  },
  {
    "text": "you don't have to over fetch so traditionally in a REST API you might ask for some amount of information if you've got like a master",
    "start": "514030",
    "end": "520419"
  },
  {
    "text": "detail view you might only need to show the title of something but you might get back twenty fields for every single",
    "start": "520419",
    "end": "525730"
  },
  {
    "text": "object which is going to add a lot of overhead to your network so graph QL is really optimized to work and low network",
    "start": "525730",
    "end": "531610"
  },
  {
    "text": "or you know lesser network availability and that's part of its design another",
    "start": "531610",
    "end": "537279"
  },
  {
    "text": "part of this is that it's explicit and you every client has to ask for exactly what they want and this becomes",
    "start": "537279",
    "end": "544329"
  },
  {
    "text": "important later when you talk about evolving api's because you can build analytics and figure out exactly what",
    "start": "544329",
    "end": "549639"
  },
  {
    "text": "fields in your API are being used and when you know exactly what fields are being used you can deprecated fields with a lot more confidence it makes API",
    "start": "549639",
    "end": "558220"
  },
  {
    "text": "is easier to evolve over time this is pretty much what I was just talking about but they actually have support baked in for you can see here there's at",
    "start": "558220",
    "end": "565600"
  },
  {
    "text": "sign that's called a directive the at deprecated directive is actually came with the first version of graph QL when",
    "start": "565600",
    "end": "571870"
  },
  {
    "text": "it was open sourced and it's just a common way that people use to express information down to clients saying hey",
    "start": "571870",
    "end": "577060"
  },
  {
    "text": "we want you to move off this field and then you can watch as the number of clients that are consuming that field",
    "start": "577060",
    "end": "582250"
  },
  {
    "text": "tick down to zero once those number of clients took down to zero you can remove that field of confidence and know that you're not",
    "start": "582250",
    "end": "587380"
  },
  {
    "text": "going to break any clients and the last one is it enables powerful developer",
    "start": "587380",
    "end": "592839"
  },
  {
    "text": "tools and this is why we're here so we're going to show you some cool developer tools that we've been working on there's a number of other open-source",
    "start": "592839",
    "end": "599199"
  },
  {
    "text": "tools one is called one of the most popular ones is called graphical it's an IDE for graph QL and it's something that",
    "start": "599199",
    "end": "605709"
  },
  {
    "text": "almost everybody that works with graph qaul uses so next we're going to talk",
    "start": "605709",
    "end": "611290"
  },
  {
    "text": "about amplify so amplify has really become hold on",
    "start": "611290",
    "end": "622390"
  },
  {
    "text": "so I'm being told I should up reopen my slide deck let's see open this one sorry",
    "start": "622390",
    "end": "637959"
  },
  {
    "text": "about that okay let me jump ahead back to where we were",
    "start": "637959",
    "end": "642480"
  },
  {
    "text": "okay all right we're back so what is",
    "start": "647720",
    "end": "653700"
  },
  {
    "text": "amplify amplify is really a set of technologies there's amplify framework",
    "start": "653700",
    "end": "659070"
  },
  {
    "text": "that is a set of client tools that you actually download to your device that make it easy for you to consume it AWS",
    "start": "659070",
    "end": "666089"
  },
  {
    "text": "services from your Weber mobile app there is cloud the cloud service which is amplify console that's what we just",
    "start": "666089",
    "end": "672690"
  },
  {
    "text": "launched on Sunday it's a it's a kind of no-nonsense CI CD and web hosting solution for Web Apps and amplify and",
    "start": "672690",
    "end": "680010"
  },
  {
    "text": "projects that use amplify backends and there's a set of developer tools that",
    "start": "680010",
    "end": "685290"
  },
  {
    "text": "are basically kind of encompassed in the CLI where the CLI is going to help",
    "start": "685290",
    "end": "690720"
  },
  {
    "text": "coordinate all of the moving parts of this and it's going to make it really easy for you to a jump start projects",
    "start": "690720",
    "end": "695880"
  },
  {
    "text": "manage those multiple environments and deploy that information to the cloud to deploy your infrastructure to the cloud",
    "start": "695880",
    "end": "703759"
  },
  {
    "text": "so what does that look like here's an example flow and we're gonna see this in",
    "start": "703880",
    "end": "708959"
  },
  {
    "text": "the demo later but it's a couple of simple commands you'd say amplify an it that's gonna initialize an amplify",
    "start": "708959",
    "end": "714360"
  },
  {
    "text": "project for you you then say amplify add off that'll add an Amazon cut media user pool and it'll have all these best",
    "start": "714360",
    "end": "720480"
  },
  {
    "text": "practices baked in so you don't really need to think so much at the onset about what are all the fine-tuning that I can",
    "start": "720480",
    "end": "725910"
  },
  {
    "text": "do and then there are scape patches later that you can use to fine-tune things once you have gotten started there's amplify ad storage this will do",
    "start": "725910",
    "end": "733260"
  },
  {
    "text": "things like create s3 buckets it'll create dynamodb tables for you and you've got another one called add",
    "start": "733260",
    "end": "738630"
  },
  {
    "text": "analytics that'll add that pinpoint project at API is going to create a graph QL API on Apps Inc it also",
    "start": "738630",
    "end": "745170"
  },
  {
    "text": "supports API gateway and then amplify push is what you use to basically",
    "start": "745170",
    "end": "750270"
  },
  {
    "text": "compile all of those resources together and then a little deploy those resources to the cloud using cloud formation so",
    "start": "750270",
    "end": "759600"
  },
  {
    "text": "the graphic you'll transform this is a new project that came along with the amplifi CLI that we've been building",
    "start": "759600",
    "end": "765149"
  },
  {
    "text": "that is all about allowing you to rapidly build in prototype applications",
    "start": "765149",
    "end": "770160"
  },
  {
    "text": "on AWS and it allows you to declaratively define data models using the same graphical schema language that",
    "start": "770160",
    "end": "776670"
  },
  {
    "text": "you would use to define your your api's data model but it's got some cool tricks that'll make it really easy to kind of",
    "start": "776670",
    "end": "783299"
  },
  {
    "text": "generate code really fast in the way that we do this is through using",
    "start": "783299",
    "end": "788459"
  },
  {
    "text": "graphical directives so this project is open-source I'll show you it on github but what you do is you'd write things",
    "start": "788459",
    "end": "794879"
  },
  {
    "text": "called transformers a transformer implement or defines a single directive in this case we have some that come",
    "start": "794879",
    "end": "801179"
  },
  {
    "text": "baked in but you can build your own like app model at off at connection at version in that searchable and then",
    "start": "801179",
    "end": "807269"
  },
  {
    "text": "those transformers manipulate a context in the tool chain that then when you see those directives in an input document",
    "start": "807269",
    "end": "813779"
  },
  {
    "text": "it's going to transform it and spit out a cloud formation document that implements that data model so that was a",
    "start": "813779",
    "end": "819329"
  },
  {
    "text": "lot of words let's look at a few examples here's the first one it's the",
    "start": "819329",
    "end": "825269"
  },
  {
    "text": "simplest of them basically what this is gonna do is when I run amplify add API it's gonna say hey do you have a schema",
    "start": "825269",
    "end": "832079"
  },
  {
    "text": "I'd say either yes or no it'll open up that schema document in my terminal or in my code editor and then if I put this",
    "start": "832079",
    "end": "838679"
  },
  {
    "text": "type post app model with two fields of ID and title what it's actually gonna do is it's gonna spin up a whole back-end",
    "start": "838679",
    "end": "845069"
  },
  {
    "text": "that just has one type in it which is going to be stored in dynamo dB so once you add this to your API you'd",
    "start": "845069",
    "end": "852389"
  },
  {
    "text": "run amplify push and then you're gonna get that same application architecture",
    "start": "852389",
    "end": "857729"
  },
  {
    "text": "that I showed you at the beginning or you've got a new dynamo DB table that's there to hold your posts it's gonna automatically configure that data source",
    "start": "857729",
    "end": "864119"
  },
  {
    "text": "with a scope down role that only gives us the minimal amount of access that we need in order to do common operations",
    "start": "864119",
    "end": "870269"
  },
  {
    "text": "it's also going to go ahead and generate code to implement crud resolvers that",
    "start": "870269",
    "end": "875939"
  },
  {
    "text": "allow you to create objects update objects delete objects get objects and list objects and then it's gonna put all",
    "start": "875939",
    "end": "881639"
  },
  {
    "text": "of the the schema in place that you need in order to get things like pagination filtering ordering and such and things",
    "start": "881639",
    "end": "888809"
  },
  {
    "text": "like that where all you had to do is say type post app model and it's going to generate all of the more advanced stuff",
    "start": "888809",
    "end": "894600"
  },
  {
    "text": "that you would otherwise need to have done yourself so once you've done that this is what you can do so your API is",
    "start": "894600",
    "end": "901529"
  },
  {
    "text": "ready I just had that one simple type annotation then I'm able to create objects using Create post mutations it's",
    "start": "901529",
    "end": "908399"
  },
  {
    "text": "are the input arguments are gonna be generated for on your behalf by looking at the type declaration that",
    "start": "908399",
    "end": "913720"
  },
  {
    "text": "gave in this case it's just good I'm just giving it a title it's gonna allow you to get objects by ID",
    "start": "913720",
    "end": "919930"
  },
  {
    "text": "that's a get single object it's also going to allow you to list and paginate",
    "start": "919930",
    "end": "926350"
  },
  {
    "text": "objects so if you when I first put that type post I never told it that I needed",
    "start": "926350",
    "end": "931569"
  },
  {
    "text": "pagination I never told it how to implement pagination it's just gonna go ahead and compile out a really common",
    "start": "931569",
    "end": "936970"
  },
  {
    "text": "pattern that allows you to do pagination where you can get ten objects and then you can move through using cursor based",
    "start": "936970",
    "end": "942100"
  },
  {
    "text": "pagination it'll also generate an update post resolver that allows you to",
    "start": "942100",
    "end": "947529"
  },
  {
    "text": "basically do a patch operation where you're not going to overwrite everything but you're just gonna update certain fields in that object if you have a",
    "start": "947529",
    "end": "954310"
  },
  {
    "text": "hundred fields in your object and you just want to update one this is how you do it and it's also gonna allow you to",
    "start": "954310",
    "end": "960610"
  },
  {
    "text": "delete objects and this one would delete the object with ID one that we just created so that's the model directive",
    "start": "960610",
    "end": "968019"
  },
  {
    "text": "the model directive allows you to basically define types that you want to have as first-class entities and your",
    "start": "968019",
    "end": "973209"
  },
  {
    "text": "API it's gonna create the table to store it it's gonna configure all the things you need in order to interact with it from app sink and then you can actually",
    "start": "973209",
    "end": "979540"
  },
  {
    "text": "configure things like you can rename the names of the mutations you can turn mutations off and turn subscriptions off",
    "start": "979540",
    "end": "984670"
  },
  {
    "text": "or queries off and you I can show you that later but it's it's more fine-grain than just saying app model the next",
    "start": "984670",
    "end": "993069"
  },
  {
    "text": "directive we'll talk about is the author Ekta v' so the author active is basically designed to work for",
    "start": "993069",
    "end": "998860"
  },
  {
    "text": "particular use cases that we've seen that customers have that they deal with often when they're building applications",
    "start": "998860",
    "end": "1004350"
  },
  {
    "text": "and the first type of off that we've implemented was called static group authorization so this is a type of",
    "start": "1004350",
    "end": "1010230"
  },
  {
    "text": "authorization where you can just say I've got users in my user pool I have a certain subset of those users that are",
    "start": "1010230",
    "end": "1015959"
  },
  {
    "text": "in some special admin group and I know them and I'm the admin so I'm able to add them to that group and then you can",
    "start": "1015959",
    "end": "1021660"
  },
  {
    "text": "just say type post is able to be operated on by the admin group so this",
    "start": "1021660",
    "end": "1026668"
  },
  {
    "text": "is one where every object in that table is now going to have acts that person in the admin group will have access to that",
    "start": "1026669",
    "end": "1031770"
  },
  {
    "text": "object so this is basically table level authorization the way that it's implemented is it actually goes and when",
    "start": "1031770",
    "end": "1038339"
  },
  {
    "text": "we're running we do a lot of code generation in this tool where we're gonna go gen the resolve our code and",
    "start": "1038339",
    "end": "1043918"
  },
  {
    "text": "it's actually going to code gen the authorization check into the resolver without you having to think about it the",
    "start": "1043919",
    "end": "1051210"
  },
  {
    "text": "next type of authorization is dynamic group authorization dynamic group authorization as opposed to static group",
    "start": "1051210",
    "end": "1057330"
  },
  {
    "text": "authorization says that every individual record is able to define the set of groups that are able to access it and",
    "start": "1057330",
    "end": "1063390"
  },
  {
    "text": "then we're actually doing row level authorization instead of just a table level authorization again this is going",
    "start": "1063390",
    "end": "1069090"
  },
  {
    "text": "to be implemented as resolve our code and you can designate which field in your model type you want to hold that",
    "start": "1069090",
    "end": "1075630"
  },
  {
    "text": "information so that as you're creating objects you can say these add are these",
    "start": "1075630",
    "end": "1080700"
  },
  {
    "text": "groups are able to access this particular object and then if you're trying to for example create an object and say I'm not in the admin group and",
    "start": "1080700",
    "end": "1087720"
  },
  {
    "text": "I'm saying that this particular post should be able to be edited by an admin user it's actually going to reject you",
    "start": "1087720",
    "end": "1093690"
  },
  {
    "text": "and say hey you can't create that thing because you're not in the admin group",
    "start": "1093690",
    "end": "1098600"
  },
  {
    "text": "the next is ownership authorization so there's ownership authorization and there's two types of ownership",
    "start": "1098840",
    "end": "1104580"
  },
  {
    "text": "authorization there's single owner authorization and there's multi owner authorization in this instance you're",
    "start": "1104580",
    "end": "1110040"
  },
  {
    "text": "seeing multiple owner authorization this operates similar to dynamic group but",
    "start": "1110040",
    "end": "1115110"
  },
  {
    "text": "instead of it being based on the group it's actually based on the individual users credential and you can actually",
    "start": "1115110",
    "end": "1120300"
  },
  {
    "text": "overwrite what that credential is so if you're using Cognito user pools you can have a custom credential that you use or",
    "start": "1120300",
    "end": "1127110"
  },
  {
    "text": "that you you've somehow fill in from an a database lambda function or otherwise and then you can basically implement",
    "start": "1127110",
    "end": "1132390"
  },
  {
    "text": "your own authorization schemes using this ownership authorization and this again is gonna be a row level",
    "start": "1132390",
    "end": "1137760"
  },
  {
    "text": "authorization tactic and then you can combine these rules so currently it's",
    "start": "1137760",
    "end": "1143790"
  },
  {
    "text": "there's only support for ORS so this is going to say that either you're an admin group or you're in the",
    "start": "1143790",
    "end": "1149190"
  },
  {
    "text": "editors group but we'll have support for Anne's and other more complex combinations of these coming soon but",
    "start": "1149190",
    "end": "1154530"
  },
  {
    "text": "you can add these things in in series and then you can also specify which",
    "start": "1154530",
    "end": "1159570"
  },
  {
    "text": "mutations in which queries you want to protect with these so I could say that admins are able to have full access",
    "start": "1159570",
    "end": "1165900"
  },
  {
    "text": "but then editors are able to create an update and that's it",
    "start": "1165900",
    "end": "1172130"
  },
  {
    "text": "the next one is connection so this one's really interesting because what it allows you to do is it allows you to add",
    "start": "1173620",
    "end": "1179260"
  },
  {
    "text": "relational capabilities to otherwise non-relational data stores and eventually it'll allow you to connect",
    "start": "1179260",
    "end": "1184270"
  },
  {
    "text": "different to add relational capabilities between data stores so what this is doing is it's supporting for it has",
    "start": "1184270",
    "end": "1190600"
  },
  {
    "text": "support for DynamoDB so I've got my type post it is itself a model that's seeing that it's the top-level entity we then",
    "start": "1190600",
    "end": "1197230"
  },
  {
    "text": "have type comment which is itself a model and then if you see that there they have two connection fields in that",
    "start": "1197230",
    "end": "1202630"
  },
  {
    "text": "they share the same name what that's doing is saying that those fields are either side of the same relationship so",
    "start": "1202630",
    "end": "1210010"
  },
  {
    "text": "the post comments field is going to list all of the comments for that post and then the put the comment post field is",
    "start": "1210010",
    "end": "1216340"
  },
  {
    "text": "going to go find the parent post that owns that comment the way that this is implemented under the hood is in this",
    "start": "1216340",
    "end": "1222669"
  },
  {
    "text": "instance two one-to-many relationship when we see a one-to-many relationship we're actually going to go ahead and",
    "start": "1222669",
    "end": "1227980"
  },
  {
    "text": "create a global secondary index on that comment table that's hat that has the hash key of the post ID so that we're",
    "start": "1227980",
    "end": "1234640"
  },
  {
    "text": "able to efficiently query that index to find all of the comments for a particular post you can optionally",
    "start": "1234640",
    "end": "1240250"
  },
  {
    "text": "provide a sort key so that you can say I want these comments to be ordered by the Creator that timestamp or and then you",
    "start": "1240250",
    "end": "1247330"
  },
  {
    "text": "can move forwards and backwards throughout that relationship and then you can see what's actually happening is",
    "start": "1247330",
    "end": "1252789"
  },
  {
    "text": "it's going to add new resolver so before we had the mutations and the queries for the entities themselves this is actually",
    "start": "1252789",
    "end": "1259270"
  },
  {
    "text": "gonna add a resolver to the post comments field and to the comment dot post field that know how to go query the",
    "start": "1259270",
    "end": "1266529"
  },
  {
    "text": "other table and in the instance of post comments it's going to use a dynamo DB query operation on the GSI and in the",
    "start": "1266529",
    "end": "1273220"
  },
  {
    "text": "comment that post field it's gonna do a dynamo DB get item operation against the post table so how do you use connections",
    "start": "1273220",
    "end": "1281260"
  },
  {
    "text": "it's just like everything else here you can say I want to get a post by ID that comments field has a resolver on it now",
    "start": "1281260",
    "end": "1288190"
  },
  {
    "text": "so it knows how to go fetch all that data and then we're also going to add pagination to that without you having to",
    "start": "1288190",
    "end": "1293500"
  },
  {
    "text": "think about it so if you look back here it's just I'm saying comments is a list of comment once that schema is compiled",
    "start": "1293500",
    "end": "1300460"
  },
  {
    "text": "out it's actually gonna return a comment connection type that you don't have to worry about but it's going to implement",
    "start": "1300460",
    "end": "1305799"
  },
  {
    "text": "that connection for you and allow you to be pad nation you can also provide filter arguments here",
    "start": "1305799",
    "end": "1310840"
  },
  {
    "text": "that I'm not showing and then you'd be able to paginate through this set until the next token returns null at which",
    "start": "1310840",
    "end": "1316299"
  },
  {
    "text": "case you're at the end of the set the next one is the version directive so the",
    "start": "1316299",
    "end": "1322840"
  },
  {
    "text": "version directive is particularly useful when you're trying to build offline use cases the reason for the version directive is that it's going to",
    "start": "1322840",
    "end": "1328779"
  },
  {
    "text": "implement contact detection and resolution for you so what this means is if I'm gonna go create a post I'd have",
    "start": "1328779",
    "end": "1335860"
  },
  {
    "text": "input title a new post it's gonna have the ID the title version and then if you",
    "start": "1335860",
    "end": "1341799"
  },
  {
    "text": "see that versions automatically going to be ticked to 1 when I run the create mutation I can then go ahead and run an",
    "start": "1341799",
    "end": "1348490"
  },
  {
    "text": "update post and when I'm doing an update post there's a new required input field called expected version I have to",
    "start": "1348490",
    "end": "1355840"
  },
  {
    "text": "provide that version field from my client and if that version field is the same it's gonna be great and then you",
    "start": "1355840",
    "end": "1361450"
  },
  {
    "text": "see that the version field is automatically ticked up to 2 because I ran that update post operation now",
    "start": "1361450",
    "end": "1368889"
  },
  {
    "text": "meanwhile after I was running that update operation there was a second user that fetched the object right before the",
    "start": "1368889",
    "end": "1375309"
  },
  {
    "text": "update but that then went offline and then after coming back online he tries",
    "start": "1375309",
    "end": "1380889"
  },
  {
    "text": "to run that update that he did while offline and what's gonna happen is he's gonna have that old version of that",
    "start": "1380889",
    "end": "1387159"
  },
  {
    "text": "expected version he's gonna try to be updating that same object but the expected version is gonna be one while",
    "start": "1387159",
    "end": "1392380"
  },
  {
    "text": "in the backend it's actually already been updated to two and what it's gonna throw is a conditional update failed exception so that your client can",
    "start": "1392380",
    "end": "1399130"
  },
  {
    "text": "actually handle that and then either decide to update the version and then commit it and that in that case would be",
    "start": "1399130",
    "end": "1404470"
  },
  {
    "text": "basically the last right wins but you can also use a lambda function and other",
    "start": "1404470",
    "end": "1409809"
  },
  {
    "text": "logic if you want to basically handle that conflict and then merge the two results back without endangering",
    "start": "1409809",
    "end": "1416559"
  },
  {
    "text": "overwriting something that you don't want to overwrite the next one is",
    "start": "1416559",
    "end": "1422860"
  },
  {
    "text": "searchable so this one is is more advanced what this does is it takes a",
    "start": "1422860",
    "end": "1428350"
  },
  {
    "text": "model and it will actually stream data of that model type into an elastic search cluster running on Amazon Elastic",
    "start": "1428350",
    "end": "1435070"
  },
  {
    "text": "search service the way that it does that is it's going to create it's going to create a dynamo DB stream off",
    "start": "1435070",
    "end": "1440950"
  },
  {
    "text": "dynamodb table that's holding your model object its then we're gonna provision a lambda function that listens to that",
    "start": "1440950",
    "end": "1447040"
  },
  {
    "text": "dynamodb stream and it's gonna move that information into a into an elastic search instance that was actually",
    "start": "1447040",
    "end": "1452500"
  },
  {
    "text": "provisioned for you as well then it's gonna create one more resolver in this",
    "start": "1452500",
    "end": "1457600"
  },
  {
    "text": "case the query dot search posts field that is going to use an elastic search query that can be parameterized from the",
    "start": "1457600",
    "end": "1463960"
  },
  {
    "text": "client so we'll see an example how to use it but it's gonna allow your client to do full-text search and eventually analytics analytical",
    "start": "1463960",
    "end": "1470740"
  },
  {
    "text": "queries against that elastic search cluster and here's how that would work so after you know I'd create an object",
    "start": "1470740",
    "end": "1478000"
  },
  {
    "text": "as soon as I create that object it's gonna get fired through the DynamoDB stream it's gonna be handled by lambda and then indexed using a lots of",
    "start": "1478000",
    "end": "1484360"
  },
  {
    "text": "structure index operations into the elastic search cluster and then from the client you can just run this search post",
    "start": "1484360",
    "end": "1489400"
  },
  {
    "text": "that has a filter input that was generated for you based off of the shape of your object type so because our post",
    "start": "1489400",
    "end": "1495340"
  },
  {
    "text": "type had a title in it we went ahead and added a specific strongly typed filter for that title field into the in this",
    "start": "1495340",
    "end": "1503020"
  },
  {
    "text": "the search posts filter input type here you can then say title and there's a few",
    "start": "1503020",
    "end": "1508060"
  },
  {
    "text": "operations that are supported in this case I'm going to use the match operation and I'm gonna be able to find all of the posts that match the that use",
    "start": "1508060",
    "end": "1515260"
  },
  {
    "text": "the elasticsearch match operation where the the argument is new and it's going to give me all of the posts that contain",
    "start": "1515260",
    "end": "1521140"
  },
  {
    "text": "that new term so the next piece is that",
    "start": "1521140",
    "end": "1529330"
  },
  {
    "text": "was absent in the graphical transform support in the amplify CLI we're now gonna look more at the amplify library",
    "start": "1529330",
    "end": "1535870"
  },
  {
    "text": "and the other amplified offerings so like we said it's a simple declarative configuration you do the you design your",
    "start": "1535870",
    "end": "1541990"
  },
  {
    "text": "model that then pushes it into cloud using cloud formation and you can just say that model it's searchable all those things it works seamlessly with the",
    "start": "1541990",
    "end": "1549190"
  },
  {
    "text": "amplifi framework so this is actually bundled as a part of the amplifi CLI and then all the data is stored in your AWS",
    "start": "1549190",
    "end": "1555340"
  },
  {
    "text": "account and that's great because then you can use all of the other things that you have access to within the AWS",
    "start": "1555340",
    "end": "1560470"
  },
  {
    "text": "offering to manipulate that data you can do ETL you can do all the other things that you think of and there's you have",
    "start": "1560470",
    "end": "1566140"
  },
  {
    "text": "complete ownership of your data so now we'll talk about the amplifi library",
    "start": "1566140",
    "end": "1573580"
  },
  {
    "text": "so the amplifi library allows you to easily connect services to web and mobile apps and there's a number of",
    "start": "1573580",
    "end": "1579200"
  },
  {
    "text": "categories so we've seen the API category a little bit analytics is how you can add a pinpoint project and then",
    "start": "1579200",
    "end": "1584810"
  },
  {
    "text": "easily instrument your application to use that pinpoint project off while the Candido user Poole and has built-in",
    "start": "1584810",
    "end": "1591410"
  },
  {
    "text": "components that will implement basically your sign in sign up an MFA flows for you there's function which can create lambda",
    "start": "1591410",
    "end": "1597950"
  },
  {
    "text": "function in storage which is both s3 and DynamoDB and more there's interaction base categories and other ones and they",
    "start": "1597950",
    "end": "1604640"
  },
  {
    "text": "continue to roll out so the amplifi library is all about creating simple abstractions for common customer use",
    "start": "1604640",
    "end": "1611150"
  },
  {
    "text": "cases so part of that is that it's an opinionated implementation of those",
    "start": "1611150",
    "end": "1616970"
  },
  {
    "text": "common use cases and we'll see kind of how that works and then there's another piece that it is it started as a jsm",
    "start": "1616970",
    "end": "1623030"
  },
  {
    "text": "plantasia we actually have support for iOS and Android now and then within the jsm plantation we also have special",
    "start": "1623030",
    "end": "1629240"
  },
  {
    "text": "support and special wrappers that are specifically meant for react react native ionic and angular so here's an",
    "start": "1629240",
    "end": "1637640"
  },
  {
    "text": "example of how you get started with it the first thing you do is you import that amplify library you get the AWS",
    "start": "1637640",
    "end": "1643940"
  },
  {
    "text": "config file so when you run amplify push it's actually going to create that AWS - exports JSON file in the root of your",
    "start": "1643940",
    "end": "1650900"
  },
  {
    "text": "project directory and then all you have to do is run configure that's gonna tell amplify how to find your user pool how",
    "start": "1650900",
    "end": "1656420"
  },
  {
    "text": "to find your pinpoint project how to find your graph QL API and all of that with one line and then once you've run",
    "start": "1656420",
    "end": "1662480"
  },
  {
    "text": "that amplify configure command you're able to start using the other parts of the amplify library so here's one that",
    "start": "1662480",
    "end": "1669020"
  },
  {
    "text": "is pretty cool and we'll see this later but it's just an Authenticator component so this is an example of how the",
    "start": "1669020",
    "end": "1675640"
  },
  {
    "text": "frameworks specific wrapper for react would work is I can just import this Authenticator component and there's a",
    "start": "1675640",
    "end": "1681380"
  },
  {
    "text": "similar concept for angular and then I can just render that Authenticator component and because I ran amplify",
    "start": "1681380",
    "end": "1686990"
  },
  {
    "text": "configure this Authenticator component is going to know how to how to configure that that UI in order to work with the",
    "start": "1686990",
    "end": "1693590"
  },
  {
    "text": "particular settings of my user pool so if you have if you have MFA turned on it's going to handle MFA if you have",
    "start": "1693590",
    "end": "1700040"
  },
  {
    "text": "email as your primary mode of logging in it's going to know how to show that and then it's going to implement a really",
    "start": "1700040",
    "end": "1705110"
  },
  {
    "text": "easy to use user flow are really easy to use log and user flow and then there's a lot of",
    "start": "1705110",
    "end": "1710179"
  },
  {
    "text": "customization options so here you can see that I'm having a specific handler for doing the on state change this is",
    "start": "1710179",
    "end": "1716389"
  },
  {
    "text": "when I'm after a user is logged in I might want to take that logged in credential and then put it into some",
    "start": "1716389",
    "end": "1721639"
  },
  {
    "text": "read up store or into a context of my react applications but other components in my in my application can use that",
    "start": "1721639",
    "end": "1728029"
  },
  {
    "text": "logged in user session you can see that it's got an amplified config that's the same Aida best exports you can even do",
    "start": "1728029",
    "end": "1734080"
  },
  {
    "text": "custom error messaging so this is just a function that when a specific error is thrown if you want to put provide",
    "start": "1734080",
    "end": "1740629"
  },
  {
    "text": "special branding around those error messages you can basically intercept those error messages and then show what",
    "start": "1740629",
    "end": "1745669"
  },
  {
    "text": "you want and there's more here as well you can do custom styling and there's a lot more docks on the aw amplify",
    "start": "1745669",
    "end": "1752350"
  },
  {
    "text": "documentation site the next component is the connect component so this is a",
    "start": "1752350",
    "end": "1759049"
  },
  {
    "text": "really easy way to connect application data from your graph duo API into your",
    "start": "1759049",
    "end": "1764059"
  },
  {
    "text": "react application there's similar concepts for angular and for iOS and ionic but basically what this is doing",
    "start": "1764059",
    "end": "1769639"
  },
  {
    "text": "is its allowing us to provide a query that query is gonna be basically the base query that says give me all of the",
    "start": "1769639",
    "end": "1775879"
  },
  {
    "text": "records that I'm going to need to render this view you can also provide a subscription query so a subscription",
    "start": "1775879",
    "end": "1781700"
  },
  {
    "text": "query you would give is in this case you can see I have my get conversation query that's running and then I'm getting I'm",
    "start": "1781700",
    "end": "1787909"
  },
  {
    "text": "providing my on create message subscription the reason for this is that on create message subscription is",
    "start": "1787909",
    "end": "1793490"
  },
  {
    "text": "actually only going to yield new messages for the particular conversation that I fetched so once I fetched the",
    "start": "1793490",
    "end": "1798679"
  },
  {
    "text": "conversation it's gonna open a subscription and then as new messages appear that are being pushed down to the",
    "start": "1798679",
    "end": "1804440"
  },
  {
    "text": "client I'm gonna be able to merge those new messages into my conversation without Rieff etching the conversation",
    "start": "1804440",
    "end": "1810529"
  },
  {
    "text": "which is great for a network then you can see it's using render props in order to provide that data to your application",
    "start": "1810529",
    "end": "1816409"
  },
  {
    "text": "you can see it's gonna have nice handlers for a loading message saying hey this base query is still running you",
    "start": "1816409",
    "end": "1823009"
  },
  {
    "text": "can render a spinner or if something goes wrong and an error is thrown from your API it's going to give you an easy",
    "start": "1823009",
    "end": "1828769"
  },
  {
    "text": "escape hatch and then allow you to render that error and then once the data is there that data is just going to be",
    "start": "1828769",
    "end": "1834379"
  },
  {
    "text": "available you can go find the data that you need and then you can the messages so this is actually how implemented a chat message view in a",
    "start": "1834379",
    "end": "1842830"
  },
  {
    "text": "demo that I built another useful function is this is just importing the",
    "start": "1842830",
    "end": "1849760"
  },
  {
    "text": "API category from 8os amplify this is a lower level implementation of the",
    "start": "1849760",
    "end": "1854890"
  },
  {
    "text": "graphical client in this case we're not using any special react specific wrapper it's just allowing us to take a query",
    "start": "1854890",
    "end": "1861790"
  },
  {
    "text": "that we have in this case it's the create message mutation and then we can call that operation get a response back",
    "start": "1861790",
    "end": "1867250"
  },
  {
    "text": "and do anything else that we need and then you can provide the input as you can see here and then finally we'll look",
    "start": "1867250",
    "end": "1875530"
  },
  {
    "text": "at analytics so this is the analytics category of AWS amplify library it",
    "start": "1875530",
    "end": "1881170"
  },
  {
    "text": "allows you to it's more use case driven so a common thing people need are start session and stop session that's",
    "start": "1881170",
    "end": "1887170"
  },
  {
    "text": "implemented as a timer but you don't necessarily need to think about how to parameterize that timer and this is just another easy way of adding",
    "start": "1887170",
    "end": "1892750"
  },
  {
    "text": "instrumentation and instrumenting analytics to your app there's a lot more options here you can have custom events and others and all of these things are",
    "start": "1892750",
    "end": "1899830"
  },
  {
    "text": "going to be pushed into your pinpoint project so you can start targeting your demographic users as well as seeing",
    "start": "1899830",
    "end": "1904930"
  },
  {
    "text": "usage data and usage patterns within your application another cool part of",
    "start": "1904930",
    "end": "1912610"
  },
  {
    "text": "the amplifi offering is amplify code gen so this is really important for applications that are using strongly",
    "start": "1912610",
    "end": "1918580"
  },
  {
    "text": "typed languages like like swift for iOS and Java for Android and even for",
    "start": "1918580",
    "end": "1923980"
  },
  {
    "text": "typescript and for flow if you're using a job if you're trying to put typing on top of your JavaScript and how this",
    "start": "1923980",
    "end": "1929230"
  },
  {
    "text": "works is once you've defined your applications schema either using the graph field transform or just other",
    "start": "1929230",
    "end": "1935260"
  },
  {
    "text": "means you can just add code gen to your project and then when you run the code",
    "start": "1935260",
    "end": "1940840"
  },
  {
    "text": "gen utility from the amplified CLI it's gonna go introspect or graph QL schema and it's gonna create strongly typed",
    "start": "1940840",
    "end": "1946950"
  },
  {
    "text": "native types within your client app so that you can start using the strongly",
    "start": "1946950",
    "end": "1952060"
  },
  {
    "text": "typed nature of Swift to figure out what you know it's gonna map the database objects to objects in your application",
    "start": "1952060",
    "end": "1958390"
  },
  {
    "text": "and then you don't necessarily have to think about writing graph to all queries as much you can just say I know that",
    "start": "1958390",
    "end": "1964330"
  },
  {
    "text": "there's a list posts query in there will generate that type for you and then you can operate using traditional",
    "start": "1964330",
    "end": "1970809"
  },
  {
    "text": "sdks that you'd think of if you were gonna be using swifter or Android in the",
    "start": "1970809",
    "end": "1977679"
  },
  {
    "text": "last thing before the demo is we'll talk a little bit about multi environment support so this is a new feature it's in",
    "start": "1977679",
    "end": "1983890"
  },
  {
    "text": "beta it's you can get it today if you get the multi in it's multi at multi M",
    "start": "1983890",
    "end": "1988900"
  },
  {
    "text": "of the amplifi CLI live CLI and what its gonna do is it's gonna allow you to have",
    "start": "1988900",
    "end": "1994300"
  },
  {
    "text": "multiple environments so that different users on the same team can operate on the different basically completely",
    "start": "1994300",
    "end": "2000600"
  },
  {
    "text": "separated environments in their own AWS accounts you can then have an environment for test and prod and you",
    "start": "2000600",
    "end": "2006150"
  },
  {
    "text": "can even map those environments to get branches and then deploy those things through the amplify console and then",
    "start": "2006150",
    "end": "2014880"
  },
  {
    "text": "with that I'm gonna dive into a demo and show you basically everything we just",
    "start": "2014880",
    "end": "2020760"
  },
  {
    "text": "talked about so I'm gonna part of this is gonna unit this bear with me because",
    "start": "2020760",
    "end": "2025860"
  },
  {
    "text": "I am gonna do some cloud formation provisioning and we're gonna be digging around but it does take a few minutes so here what I'm gonna do is I've got a",
    "start": "2025860",
    "end": "2032160"
  },
  {
    "text": "base application this is just a react application that I started with create react app there's nothing special you",
    "start": "2032160",
    "end": "2038190"
  },
  {
    "text": "can see in the package.json there's almost no dependencies outside of react and the amplifi database amplify library",
    "start": "2038190",
    "end": "2045150"
  },
  {
    "text": "and then the a double just react our amplify react wrapper for react so",
    "start": "2045150",
    "end": "2050310"
  },
  {
    "text": "what I'm just going to do is I'm just gonna go ahead and run amplify an it you guys here to see this so when I run",
    "start": "2050310",
    "end": "2058888"
  },
  {
    "text": "amplify in it it's gonna ask me for a name for my application and I'll do check UO react demo and then it's gonna ask for",
    "start": "2058889",
    "end": "2067980"
  },
  {
    "text": "an environment so this is my local environment this is something that I want to be able to operate on and change",
    "start": "2067980",
    "end": "2073200"
  },
  {
    "text": "without interrupting anybody else so I'm just gonna call it personal it's then going to ask what is your code editor of",
    "start": "2073200",
    "end": "2078658"
  },
  {
    "text": "choice I tend to use Visual Studio code now it's gonna say what are you building it in I'm building this application in",
    "start": "2078659",
    "end": "2084030"
  },
  {
    "text": "plain JavaScript and then it actually already knows that it's a react application because it looked at my package JSON and saw that we depended on",
    "start": "2084030",
    "end": "2090300"
  },
  {
    "text": "react it's then gonna say where's your source that's fine that's fine what's my build command my start command and then",
    "start": "2090300",
    "end": "2097050"
  },
  {
    "text": "it's gonna ask me what profile do I want to use and this is the same type of profile that you'd be used to if you had the normal AWS CLI",
    "start": "2097050",
    "end": "2104130"
  },
  {
    "text": "and I'm just gonna have one I have one amplify that's that's scoped for this and I'm gonna go ahead and use it so",
    "start": "2104130",
    "end": "2110249"
  },
  {
    "text": "what's happening now is it's actually deploying a root stack into my cloud formation into my cloud formation",
    "start": "2110249",
    "end": "2115940"
  },
  {
    "text": "service in my AWS account and that root stack is basically going to be the entry point for all of the other resources",
    "start": "2115940",
    "end": "2121920"
  },
  {
    "text": "that I create through this tool the reason that we have a root stack is just because of cloud formation stack limits",
    "start": "2121920",
    "end": "2127950"
  },
  {
    "text": "and we so we use nested stacks in order to add a lot of different resources without running into this so you can see",
    "start": "2127950",
    "end": "2135930"
  },
  {
    "text": "here create an unlimited it's going to use to push assets to and then just the",
    "start": "2135930",
    "end": "2142259"
  },
  {
    "text": "stack itself so the next thing I'm gonna do is I'm going to start an ad off so",
    "start": "2142259",
    "end": "2148380"
  },
  {
    "text": "amplify a dog poops ad off is gonna go ahead and provision that kognito user",
    "start": "2148380",
    "end": "2154619"
  },
  {
    "text": "pool for me and it's gonna either ask do I want to use the default configuration which I'm gonna say yes",
    "start": "2154619",
    "end": "2159660"
  },
  {
    "text": "but you can say no and then you can tweak this thing out of your heart's content and that went ahead and added a",
    "start": "2159660",
    "end": "2166410"
  },
  {
    "text": "new category to my amplified back-end directory so you can see off right here I'm gonna do the same for analytics so",
    "start": "2166410",
    "end": "2175079"
  },
  {
    "text": "this is going to go ahead and provision and or at least configure the pinpoint API and then it's gonna ask for some",
    "start": "2175079",
    "end": "2185700"
  },
  {
    "text": "smart defaults I'm gonna go ahead and say yes and then last thing I'm gonna do is I'm gonna add an API so this is where",
    "start": "2185700",
    "end": "2192960"
  },
  {
    "text": "things get a little bit more interesting because we're gonna start seeing the graphical transform but here it's asking",
    "start": "2192960",
    "end": "2197969"
  },
  {
    "text": "would you like to graph QL API or a REST API I'm going to choose graph QL it's gonna want a name so I'm gonna give it",
    "start": "2197969",
    "end": "2204539"
  },
  {
    "text": "that and then it's gonna say how do you want to authorize this API because I already added my user pool it's gonna",
    "start": "2204539",
    "end": "2210779"
  },
  {
    "text": "know how to configure that so I'm just gonna say I want this API to be to be authorized with my user pool and then",
    "start": "2210779",
    "end": "2216239"
  },
  {
    "text": "it's gonna say do you have an annotated graph to a schema I do but I'm gonna say no just to show you it's gonna say do",
    "start": "2216239",
    "end": "2222059"
  },
  {
    "text": "you want a guided schema creation I'm gonna say yes and then it's gonna give me a few default options here I'll",
    "start": "2222059",
    "end": "2228299"
  },
  {
    "text": "just start with a simple one to show you what it does it's gonna say do you want to edit it now I'll say yes and then I",
    "start": "2228299",
    "end": "2234359"
  },
  {
    "text": "just open that file in my text editor that file is right here you can see it under the API category",
    "start": "2234359",
    "end": "2239640"
  },
  {
    "text": "under the project name and I just created in this simple schema that graph QL file with a single model declaration",
    "start": "2239640",
    "end": "2245190"
  },
  {
    "text": "so what I'm gonna do is actually take this more advanced one that I've already built and then we'll look at it and I'm",
    "start": "2245190",
    "end": "2250770"
  },
  {
    "text": "gonna go ahead and start it because it will take a few minutes to deploy this to cloud formation so I'm just now gonna run amplify push and then it's gonna say",
    "start": "2250770",
    "end": "2260550"
  },
  {
    "text": "create create create I'm gonna say yes and now it's going to start deploying that all of those cloud formation",
    "start": "2260550",
    "end": "2268079"
  },
  {
    "text": "resources into my AWS account so while that's deploying we can kind of take a look at our schema I hope I saved that",
    "start": "2268079",
    "end": "2279230"
  },
  {
    "text": "it's gonna take a look at the schema of where you can see I've got type user I've got this type conversation I've got",
    "start": "2279349",
    "end": "2285839"
  },
  {
    "text": "type message and I've got type combo link so what this is doing is I've got",
    "start": "2285839",
    "end": "2291000"
  },
  {
    "text": "users users are gonna have the ID that is equivalent to their username incognito I have conversations",
    "start": "2291000",
    "end": "2297319"
  },
  {
    "text": "conversations act as a parent type to messages and they also have an",
    "start": "2297319",
    "end": "2303119"
  },
  {
    "text": "Associated list of convo links so the reason we have this list of convo links instead of just lists of users is that",
    "start": "2303119",
    "end": "2309540"
  },
  {
    "text": "we're actually going to implement a many-to-many relationship here between users and our conversations so that you",
    "start": "2309540",
    "end": "2314819"
  },
  {
    "text": "can implement group chat if you would like we then have this message model",
    "start": "2314819",
    "end": "2320579"
  },
  {
    "text": "that allows the owner to off to create basically only only the owner of a message is able to to change that that",
    "start": "2320579",
    "end": "2327420"
  },
  {
    "text": "message you can see I'm turning off subscriptions and turning off queries because I don't want to be able to read messages directly I should only be able",
    "start": "2327420",
    "end": "2333540"
  },
  {
    "text": "to read messages through conversations and then I've got this combo link type which is basically implementing the join",
    "start": "2333540",
    "end": "2340319"
  },
  {
    "text": "table that we'll be using to associate many conversations with many users and you can see here we're using the",
    "start": "2340319",
    "end": "2346680"
  },
  {
    "text": "connection field to do that and then finally we've got this subscription at implementation at the bottom so what",
    "start": "2346680",
    "end": "2352200"
  },
  {
    "text": "this is doing is allowing me to define more fine-grained subscription logics so in this case I have an on create combo",
    "start": "2352200",
    "end": "2358680"
  },
  {
    "text": "link in an on create message and then the arguments that I'm passing to these subscriptions are actually really",
    "start": "2358680",
    "end": "2364380"
  },
  {
    "text": "important so if you'll notice this combo link user ID is the same name as a field",
    "start": "2364380",
    "end": "2369900"
  },
  {
    "text": "in my combo link type the absent implementation of subscriptions in order to there's a",
    "start": "2369900",
    "end": "2376359"
  },
  {
    "text": "problem in subscriptions if you're in naive implantations where if you have a million connected clients and a million messages being published and you want to",
    "start": "2376359",
    "end": "2383350"
  },
  {
    "text": "be able to authorize those messages and route the messages only to the connected clients that are looking for those",
    "start": "2383350",
    "end": "2388720"
  },
  {
    "text": "messages if you had to run logic per message per client you'd see that that's obviously problematic so Apps Inc has a",
    "start": "2388720",
    "end": "2395710"
  },
  {
    "text": "clever way of when you provide these arguments it's gonna once you run that",
    "start": "2395710",
    "end": "2400990"
  },
  {
    "text": "subscription query it's actually gonna return an empty TT topic that's already pre authorized at Connect time and that",
    "start": "2400990",
    "end": "2407890"
  },
  {
    "text": "scoped down to only give you the messages that you care about based off of the arguments that you pass to the",
    "start": "2407890",
    "end": "2412960"
  },
  {
    "text": "subscription when you first created the connection so in this instance you'd see on create message I'm passing this",
    "start": "2412960",
    "end": "2418420"
  },
  {
    "text": "message conversation ID this message conversation ID is on the message model and then we're that's gonna be doing an",
    "start": "2418420",
    "end": "2424770"
  },
  {
    "text": "equality statement to say I should only be getting the messages for that particular conversation which is how",
    "start": "2424770",
    "end": "2431050"
  },
  {
    "text": "we're going to implement the chat view in our app so while it's going on to show you the cloud formation so that you",
    "start": "2431050",
    "end": "2438460"
  },
  {
    "text": "can see what's going on so here you can",
    "start": "2438460",
    "end": "2446470"
  },
  {
    "text": "see I've got a new stack create react demo this was the nest it's the route stack that was created when I ran",
    "start": "2446470",
    "end": "2452530"
  },
  {
    "text": "amplify in it I then have a stack for my this one is for off I believe yep so",
    "start": "2452530",
    "end": "2460750"
  },
  {
    "text": "this one is for off this stack is going to be implementing my analytics which is going to be creating a pinpoint project",
    "start": "2460750",
    "end": "2466060"
  },
  {
    "text": "and then this is my API category so this is where it's gonna be creating my absent API all of the data sources that",
    "start": "2466060",
    "end": "2472720"
  },
  {
    "text": "associate the new tables that I created it'll actually create the dynamodb tables for me as well it'll create the i''m roles that are",
    "start": "2472720",
    "end": "2479050"
  },
  {
    "text": "scoped down with a trust policy that allow app sync to invoke operations against the DynamoDB tables that we're",
    "start": "2479050",
    "end": "2484990"
  },
  {
    "text": "creating on your behalf but then you have full control of this if you so",
    "start": "2484990",
    "end": "2490480"
  },
  {
    "text": "choose and then as this when this finish is just a few more minutes you can see what's happening here you can see it's",
    "start": "2490480",
    "end": "2497020"
  },
  {
    "text": "creating some the data sources the resolvers it created the API key is",
    "start": "2497020",
    "end": "2502570"
  },
  {
    "text": "graph QL schema the Oh tables almost done you know what I",
    "start": "2502570",
    "end": "2511719"
  },
  {
    "text": "don't think I've saved this I'm gonna have to do one more update watch this so I'll show you how to update to so it turns out when I copied that schema in I",
    "start": "2511719",
    "end": "2517989"
  },
  {
    "text": "forgot to click Save and I'll show you how you how you change your schema then - so right now what this is going to",
    "start": "2517989",
    "end": "2523569"
  },
  {
    "text": "have implemented if you go to app sync is gonna be that simple to do model see",
    "start": "2523569",
    "end": "2533069"
  },
  {
    "text": "so it's gonna be this one you can see the schema here so this is the to do",
    "start": "2533069",
    "end": "2538960"
  },
  {
    "text": "what I'm gonna do is now I'm just gonna do this I'm gonna say amplify API push",
    "start": "2538960",
    "end": "2545279"
  },
  {
    "text": "it's gonna know that that thing updated",
    "start": "2545279",
    "end": "2549930"
  },
  {
    "text": "won't let me change one thing then will do I'll just make this okay just a bit",
    "start": "2553229",
    "end": "2561609"
  },
  {
    "text": "one more time I'm gonna push my API there we go and then that's gonna",
    "start": "2561609",
    "end": "2568539"
  },
  {
    "text": "compile it and now it's actually going to rerun just the update on that one cloud formation stack so it's going to",
    "start": "2568539",
    "end": "2575380"
  },
  {
    "text": "do the base and then this is going to start updating and we're gonna be able to see our scheme has been created so",
    "start": "2575380",
    "end": "2582910"
  },
  {
    "text": "yeah this is gonna take just a few more minutes it's gonna go do this same thing it's gonna create the DynamoDB tables",
    "start": "2582910",
    "end": "2588249"
  },
  {
    "text": "and then we'll continue going so while that's going I'll show you it running on",
    "start": "2588249",
    "end": "2594519"
  },
  {
    "text": "my local box but what I'm gonna do now is I'm actually going to start top I'm gonna start preparing for our CI CD so I",
    "start": "2594519",
    "end": "2602109"
  },
  {
    "text": "have an empty git repo here there's nothing in it what I'm gonna do is I'm gonna go ahead and add all of my files",
    "start": "2602109",
    "end": "2607539"
  },
  {
    "text": "to it and then what I'm gonna do is I'm going to make a few branches so first",
    "start": "2607539",
    "end": "2615819"
  },
  {
    "text": "I'll make a dev branch then I'm gonna make a prod branch I'm then gonna check",
    "start": "2615819",
    "end": "2621670"
  },
  {
    "text": "out that dev branch and I'm gonna go into my header and I'm just going to change one piece of text so that we can",
    "start": "2621670",
    "end": "2627849"
  },
  {
    "text": "see that things are changing so in my app nav I'm gonna go in here this is",
    "start": "2627849",
    "end": "2633009"
  },
  {
    "text": "just react I'm gonna say check ul in development I'm gonna add that and then I'm gonna go",
    "start": "2633009",
    "end": "2644119"
  },
  {
    "text": "and check out my prod branch and I'm going to change this to production",
    "start": "2644119",
    "end": "2651518"
  },
  {
    "text": "so now I'm gonna go ahead and push this into my github so I'm gonna say git push origin prod and then I'll do the same",
    "start": "2656710",
    "end": "2664029"
  },
  {
    "text": "for my dev in just a minute there we go",
    "start": "2664029",
    "end": "2673150"
  },
  {
    "text": "and then what we'll see is that we now have this project in this fresh repo",
    "start": "2673150",
    "end": "2678730"
  },
  {
    "text": "with two branches we have dev and we have prod so now let's see how this guy",
    "start": "2678730",
    "end": "2687369"
  },
  {
    "text": "is doing this looks like it'll just take a few more minutes as soon as this dot",
    "start": "2687369",
    "end": "2694180"
  },
  {
    "text": "is done I'll run my front-end and we can see it working on my localhost to show",
    "start": "2694180",
    "end": "2699430"
  },
  {
    "text": "you what the application looks like let's see almost there",
    "start": "2699430",
    "end": "2705900"
  },
  {
    "text": "there we go cool so now almost there if we go back to app",
    "start": "2710609",
    "end": "2719789"
  },
  {
    "text": "sync I'm gonna refresh this page and we're gonna see that our schemas actually changed so now you can see",
    "start": "2719789",
    "end": "2725880"
  },
  {
    "text": "here's the schema that I actually wanted I've got my combo link type there's create conversation input create",
    "start": "2725880",
    "end": "2731249"
  },
  {
    "text": "conversation create combo link input create message input all these things that I didn't necessarily need to think about but oh that our best practices and",
    "start": "2731249",
    "end": "2738029"
  },
  {
    "text": "then you can see on the right we have resolvers that were generated so I can go to my query we have get user list",
    "start": "2738029",
    "end": "2743759"
  },
  {
    "text": "user get get combo we have mutations create user update user delete user and",
    "start": "2743759",
    "end": "2751109"
  },
  {
    "text": "then you can even see that in here there's been this is the templating language that you can use and these are",
    "start": "2751109",
    "end": "2756809"
  },
  {
    "text": "the authorization checks that were automatically cogent on your behalf in order to implement that ownership authorization that we put on the user",
    "start": "2756809",
    "end": "2763109"
  },
  {
    "text": "type so now I'll jump back and this",
    "start": "2763109",
    "end": "2768390"
  },
  {
    "text": "guy's just about done and I'm just gonna go ahead yep and I'm gonna go ahead and run my application locally and then",
    "start": "2768390",
    "end": "2777089"
  },
  {
    "text": "while that's running locally I'll show you how we're gonna start pushing that into production as well so I'm just gonna say NPM run start this is gonna",
    "start": "2777089",
    "end": "2783569"
  },
  {
    "text": "start the reactive element server it's gonna open that in my browser and then",
    "start": "2783569",
    "end": "2791009"
  },
  {
    "text": "while that's loading I'll show you so now we have this is gonna be running locally once we have that thing running",
    "start": "2791009",
    "end": "2796769"
  },
  {
    "text": "locally the next step is going to be how to deploy that to the cloud the way you do that is using the amplifi console",
    "start": "2796769",
    "end": "2801989"
  },
  {
    "text": "here I'm gonna show you how that works I'll click deploy I'm actually gonna connect my github I'm gonna click Next",
    "start": "2801989",
    "end": "2808009"
  },
  {
    "text": "I'm gonna say it's gonna then list my github repositories I'm gonna select my",
    "start": "2808009",
    "end": "2814289"
  },
  {
    "text": "check UL demo that I just added I'm gonna select my dev branch first I'll click Next and then what this is going",
    "start": "2814289",
    "end": "2821219"
  },
  {
    "text": "to do is have it's gonna already know how to deploy this thing so because it's an amplified project and it knows it's that it's react it's got a build script",
    "start": "2821219",
    "end": "2828269"
  },
  {
    "text": "that's already there to run react applications to package it using the production build it's then going to know how to upload it to s3 deploy that",
    "start": "2828269",
    "end": "2835170"
  },
  {
    "text": "through cloud from CDN and then it's actually going to use lambda at edge in order to do atomic deployments so I'm",
    "start": "2835170",
    "end": "2840869"
  },
  {
    "text": "going to go ahead and give it a service role I'll click next save and deploy and then what's",
    "start": "2840869",
    "end": "2845910"
  },
  {
    "text": "gonna happen is this thing's gonna start building in the cloud it's gonna upload that thing to s3 and then we're gonna",
    "start": "2845910",
    "end": "2851850"
  },
  {
    "text": "have a fully hosted web app with a live HTTP domain that we can hit immediately",
    "start": "2851850",
    "end": "2857460"
  },
  {
    "text": "and then from there you can start doing more advanced things like using rewrite rules if you wanted to nest static blog",
    "start": "2857460",
    "end": "2863580"
  },
  {
    "text": "under your site you can also use you can also provide your own route 53 record if",
    "start": "2863580",
    "end": "2868710"
  },
  {
    "text": "you want to change your domain and you have full control of that and it's really just no nonsense CI CD and and",
    "start": "2868710",
    "end": "2876450"
  },
  {
    "text": "hosting for you so here we've got our dev environment it's going to provision this is going to create a container in order to run our build it's then going",
    "start": "2876450",
    "end": "2883380"
  },
  {
    "text": "to go through the build step which is gonna build both our amplify back-end it's what I'm gonna deploy that amplify",
    "start": "2883380",
    "end": "2888930"
  },
  {
    "text": "back-end using cloud formation it's gonna build our react application using a production build it'll upload that to",
    "start": "2888930",
    "end": "2895080"
  },
  {
    "text": "s3 it'll then use the lambda at edge to swap the pointers to go to the new build every single time it happens and then",
    "start": "2895080",
    "end": "2901140"
  },
  {
    "text": "all I have to do subsequently is do a git push so when I change my application I'm just gonna check it in to get I'm",
    "start": "2901140",
    "end": "2907590"
  },
  {
    "text": "gonna do a git push github gonna fire a web hook to the amplify console and it's gonna start a new version of that build",
    "start": "2907590",
    "end": "2913140"
  },
  {
    "text": "and we're gonna be able to see it in just a few minutes after it's gone so now we can jump back to our local check",
    "start": "2913140",
    "end": "2919260"
  },
  {
    "text": "you all react just to show you so this here is the Authenticator component I can show you in our home directory",
    "start": "2919260",
    "end": "2926450"
  },
  {
    "text": "in our home here this is this I did not have to implement any of this at all I",
    "start": "2926450",
    "end": "2931920"
  },
  {
    "text": "just put this Authenticator in there and now I can just go ahead and create a component or create a user I'm gonna",
    "start": "2931920",
    "end": "2940560"
  },
  {
    "text": "give it an email this has MFA turned on by art makes you confirm your signup by default that was",
    "start": "2940560",
    "end": "2946980"
  },
  {
    "text": "part of the default configuration so I just got a verification message through my email on my phone I'll click confirm",
    "start": "2946980",
    "end": "2955080"
  },
  {
    "text": "and then I'm gonna log in with that user and then I'll also actually open this in",
    "start": "2955080",
    "end": "2963060"
  },
  {
    "text": "a new tab I'm not logged in yet I'm",
    "start": "2963060",
    "end": "2968640"
  },
  {
    "text": "gonna log in as a different user",
    "start": "2968640",
    "end": "2971660"
  },
  {
    "text": "yeah we are nope gotta create it first and then I'll",
    "start": "2974670",
    "end": "2982390"
  },
  {
    "text": "use another email I'm gonna then get",
    "start": "2982390",
    "end": "2987880"
  },
  {
    "text": "this push to my phone again",
    "start": "2987880",
    "end": "2991768"
  },
  {
    "text": "I'll update with this here we go there",
    "start": "2996990",
    "end": "3002390"
  },
  {
    "text": "we go just got it I'm then gonna go ahead and do eight seven seven nine one two I'll login as Zach this time and",
    "start": "3002390",
    "end": "3013069"
  },
  {
    "text": "then what we're gonna see is I'll open these things left to right you can see that this just already knew that Zach",
    "start": "3013069",
    "end": "3018559"
  },
  {
    "text": "was there that was pushed an update over a subscription I'm gonna click on here open a conversation between Michael and",
    "start": "3018559",
    "end": "3023630"
  },
  {
    "text": "Zach you can see in the bottom left that was pushed to conversation in real-time I'll open this and I'll open this and",
    "start": "3023630",
    "end": "3029240"
  },
  {
    "text": "then we can start chatting there we go",
    "start": "3029240",
    "end": "3039010"
  },
  {
    "text": "so there's just a really simple that's graphed well subscriptions using the connect component and then at this point",
    "start": "3039010",
    "end": "3045140"
  },
  {
    "text": "what we can do is jump back to the amplifi console and see how our builds doing so here we can step through it",
    "start": "3045140",
    "end": "3053480"
  },
  {
    "text": "we've got our provision step is done we first cloned the repository from github we're now building our back-end so what",
    "start": "3053480",
    "end": "3061220"
  },
  {
    "text": "this is doing is when I said that this is the dev branch it's actually going to that created a new amplify environment",
    "start": "3061220",
    "end": "3067460"
  },
  {
    "text": "so this is gonna be a completely distinct set of resources that doesn't share the same user pool it has its own entirely different set of DynamoDB",
    "start": "3067460",
    "end": "3074000"
  },
  {
    "text": "tables and then those are also going to be deployed through cloud formation so if I jump here you're gonna see that",
    "start": "3074000",
    "end": "3079160"
  },
  {
    "text": "there's now another set of check you all react demo and this is gonna be my development environment so if you go",
    "start": "3079160",
    "end": "3085760"
  },
  {
    "text": "here and you can look into the parameters this is gonna pass an environment this one is dev but then",
    "start": "3085760",
    "end": "3091069"
  },
  {
    "text": "back here this one is going to be personal so then the only thing that's really changing is this environment variable and then that's gonna create a",
    "start": "3091069",
    "end": "3098030"
  },
  {
    "text": "completely distinct set of resources so you can see this is gonna take another minute but as soon as this is done we're",
    "start": "3098030",
    "end": "3104329"
  },
  {
    "text": "gonna have at this URL our our application hosted so this is just",
    "start": "3104329",
    "end": "3109940"
  },
  {
    "text": "before we haven't gotten to the front and deployment step but then as soon as this is finished we're gonna have a full website on this dev dot and then if I",
    "start": "3109940",
    "end": "3117230"
  },
  {
    "text": "wanted to go add my production branch what I would do is go back to my apps IDE connect a new branch I choose prod I already have a dev one",
    "start": "3117230",
    "end": "3124520"
  },
  {
    "text": "so it's not showing it I click next it's going to be able to do the same thing with the build script",
    "start": "3124520",
    "end": "3130430"
  },
  {
    "text": "I'll click Next and save and deploy so now that's gonna start building my production branch and then as I want to",
    "start": "3130430",
    "end": "3136339"
  },
  {
    "text": "move things from my development into production all I have to do is merge my feature branches into dev I then merge",
    "start": "3136339",
    "end": "3141440"
  },
  {
    "text": "my dev branch into my production branch I do a git push and then your website's gonna get updated automatically ok so",
    "start": "3141440",
    "end": "3151819"
  },
  {
    "text": "this is going to take a few more minutes but I hope that helped help show the",
    "start": "3151819",
    "end": "3156859"
  },
  {
    "text": "power of this anti console and the amplifi framework as well as the amplify CLI this application other than the part",
    "start": "3156859",
    "end": "3163819"
  },
  {
    "text": "of writing the react application was totally fresh we had no back-end resources and I hope that kind of showed",
    "start": "3163819",
    "end": "3169069"
  },
  {
    "text": "the power you can see that there's more here on the left and since this is just gonna take a few more minutes",
    "start": "3169069",
    "end": "3177170"
  },
  {
    "text": "I might just open up the floor to questions",
    "start": "3177170",
    "end": "3181510"
  },
  {
    "text": "yep so we can go look at dynamo so if we go look at dynamo DB I have a ton of",
    "start": "3189390",
    "end": "3200500"
  },
  {
    "text": "tables but you can see here we've got a number of them and you can see the names",
    "start": "3200500",
    "end": "3206970"
  },
  {
    "text": "some messages for example so we've got message and I've got a couple dead but",
    "start": "3207869",
    "end": "3213130"
  },
  {
    "text": "we'll look at personal because I know this is when I created just now if you look here it's gonna have these GS eyes",
    "start": "3213130",
    "end": "3219609"
  },
  {
    "text": "already created oh those global tables",
    "start": "3219609",
    "end": "3226930"
  },
  {
    "text": "sorry I click on the wrong thing indexes there we go so here you can see there's actually two there's two GS is",
    "start": "3226930",
    "end": "3233230"
  },
  {
    "text": "that have been created and the reason for that is if I go back to my schema",
    "start": "3233230",
    "end": "3238170"
  },
  {
    "text": "the relationship between a message in a conversation is a one-to-many and the relationship between a message in a user",
    "start": "3239490",
    "end": "3246310"
  },
  {
    "text": "is also a one of many you can then see even on the convo link the combo link would not have it actually know what so",
    "start": "3246310",
    "end": "3253750"
  },
  {
    "text": "if I go look at combo link the same thing so all of these are the same but",
    "start": "3253750",
    "end": "3260590"
  },
  {
    "text": "you can see here there's GS is created on the combo link this is what's implementing the many to many relationship between the conversations",
    "start": "3260590",
    "end": "3267100"
  },
  {
    "text": "and the users and then again as you can see on one of these you can provide a",
    "start": "3267100",
    "end": "3272770"
  },
  {
    "text": "sort field as well so our messages in a conversation are gonna be automatically sorted by the Creator that timestamp and",
    "start": "3272770",
    "end": "3278170"
  },
  {
    "text": "all I have to say is this is the sort field and then also there is so there's",
    "start": "3278170",
    "end": "3285070"
  },
  {
    "text": "a limit of five DynamoDB global secondary indexes on a table we're also looking into using a different pattern",
    "start": "3285070",
    "end": "3290830"
  },
  {
    "text": "that will provide less filtering ability but it'll it'll get past that limit so you can have any number of relationships",
    "start": "3290830",
    "end": "3297970"
  },
  {
    "text": "using an association map model instead of having this global secondary index query pattern and then you can use batch",
    "start": "3297970",
    "end": "3303369"
  },
  {
    "text": "gets cool any other questions",
    "start": "3303369",
    "end": "3309809"
  },
  {
    "text": "yep so this is this is still this is basically a tool the graphical transform in particular is a tool for getting you",
    "start": "3318710",
    "end": "3325070"
  },
  {
    "text": "there quickly and kind of starting from the graphical schema but you can turn this off just by removing the directives so once you remove the directives you",
    "start": "3325070",
    "end": "3331820"
  },
  {
    "text": "have the full power to have like normal app sync capability where you can just say I already have a dynamo DB table I",
    "start": "3331820",
    "end": "3337370"
  },
  {
    "text": "don't want you to provision one for me then you can just add the data source and then that's also part of the CLI you",
    "start": "3337370",
    "end": "3342530"
  },
  {
    "text": "just you'll be able to basically take tables that you already have you can provision tables yourself using your own",
    "start": "3342530",
    "end": "3348200"
  },
  {
    "text": "cloud formation stacks and then and then talk to those tables using app sink as well so yeah yep same with RDS so RDS",
    "start": "3348200",
    "end": "3358730"
  },
  {
    "text": "support launched in beta also this past week basically there's a new if you go to app sync there is a new type of data",
    "start": "3358730",
    "end": "3365600"
  },
  {
    "text": "source so if I go to data sources I can create a data source and then now you'll",
    "start": "3365600",
    "end": "3371120"
  },
  {
    "text": "see that there is a relational database option here this is technically in beta because the the support from the RDS",
    "start": "3371120",
    "end": "3379370"
  },
  {
    "text": "team is very new but here that it basically allow you to run sequel queries from app sync against RDS",
    "start": "3379370",
    "end": "3385550"
  },
  {
    "text": "serverless arora and it uses a new HTTP interface that was just launched last week and then the other new part of the",
    "start": "3385550",
    "end": "3393740"
  },
  {
    "text": "absent console is you'll see that we released a new feature called pipeline resolvers pipeline resolvers if you've",
    "start": "3393740",
    "end": "3399380"
  },
  {
    "text": "used app sync traditionally a resolver was a single operation against a single data source pipeline resolvers allow you",
    "start": "3399380",
    "end": "3404960"
  },
  {
    "text": "to run multiple what we would have previously called resolvers but are now called functions that allow you to have",
    "start": "3404960",
    "end": "3410300"
  },
  {
    "text": "multiple operations against multiple data sources and the one of the most common use cases for this is if you're",
    "start": "3410300",
    "end": "3416570"
  },
  {
    "text": "imagining that you have this create message mutation you likely want to have an authorization check that says only",
    "start": "3416570",
    "end": "3423410"
  },
  {
    "text": "users that are a part of a conversation are able to create that message before",
    "start": "3423410",
    "end": "3428450"
  },
  {
    "text": "you had to do a little bit of hacking or use a lambda function to do that now you can actually run in the same resolver",
    "start": "3428450",
    "end": "3434270"
  },
  {
    "text": "you can say go look up whether this particularly logged in user is a member of the conversation in question if they",
    "start": "3434270",
    "end": "3441050"
  },
  {
    "text": "are a member of the conversation then you can you can allow the operation to happen and it'll move into that create",
    "start": "3441050",
    "end": "3446210"
  },
  {
    "text": "message step but if you want to stop the flow because that user doesn't have permission you can stop it beforehand",
    "start": "3446210",
    "end": "3451640"
  },
  {
    "text": "and do more complex authorization strategies and then we'll use that in the graphical transform as well so basically implement",
    "start": "3451640",
    "end": "3457700"
  },
  {
    "text": "that out of the box so you'll be able to have a some point in the future be able to say like I want that exact use case",
    "start": "3457700",
    "end": "3464150"
  },
  {
    "text": "you should only be able to create this message if you are a member of its parent conversation yep and that's the",
    "start": "3464150",
    "end": "3470900"
  },
  {
    "text": "functions tab cool let's see if this is finished now just there we go",
    "start": "3470900",
    "end": "3477860"
  },
  {
    "text": "okay so we've got deploy we've got our back-end beta this is deploying the app",
    "start": "3477860",
    "end": "3484580"
  },
  {
    "text": "sync resources are the amplify resources this is then gonna do our production",
    "start": "3484580",
    "end": "3489620"
  },
  {
    "text": "build this is just using react scripts build and it's gonna have the production flag turned on and then it's going to",
    "start": "3489620",
    "end": "3495920"
  },
  {
    "text": "deploy that's deploying a test three and then the verify step actually uses a headless browser to basically take",
    "start": "3495920",
    "end": "3502340"
  },
  {
    "text": "screenshots of your application on various form factors and then it's just gonna show those to you every time you deploy so you can see what your app",
    "start": "3502340",
    "end": "3508730"
  },
  {
    "text": "looks like on an iPad or an iPhone or an Android phone or your desktop yeah and",
    "start": "3508730",
    "end": "3514340"
  },
  {
    "text": "then I can go to that site again so if I go here we now have check you up cool",
    "start": "3514340",
    "end": "3522850"
  },
  {
    "text": "okay any other questions",
    "start": "3522850",
    "end": "3527650"
  },
  {
    "text": "yep so this in this back-end step it's all through cloud formations so the same thing that I did when I ran amplify push",
    "start": "3533859",
    "end": "3540489"
  },
  {
    "text": "it it is itself running an amplify push and it did that by default because it knew that I had an amplify project but",
    "start": "3540489",
    "end": "3547119"
  },
  {
    "text": "you can actually do any kind of back-end deployment here it's just part of that build spec it knew that it was amplify",
    "start": "3547119",
    "end": "3552130"
  },
  {
    "text": "so it you use the amplify push but you can deploy you know your own cloud formation stack here you can deploy your",
    "start": "3552130",
    "end": "3557469"
  },
  {
    "text": "own kind of whatever you need and there's there's more advanced this check",
    "start": "3557469",
    "end": "3562509"
  },
  {
    "text": "UL example is a pure amplify version of it but there's actually another version of it that is built by an SI at AWS that",
    "start": "3562509",
    "end": "3569200"
  },
  {
    "text": "adds AI services and lambda and then it will also deploy that I'm using Sam so",
    "start": "3569200",
    "end": "3576009"
  },
  {
    "text": "then you can you can do more advanced stuff here it's just up to you yeah this was just the default cuz in new I was",
    "start": "3576009",
    "end": "3581769"
  },
  {
    "text": "using amplifier",
    "start": "3581769",
    "end": "3584430"
  },
  {
    "text": "relationship so that you so the there's no like formal relationship between apps",
    "start": "3589990",
    "end": "3595820"
  },
  {
    "text": "Inc and API gateway but we have so what people will often do is people actually have API gateway api's and then a lot of",
    "start": "3595820",
    "end": "3602630"
  },
  {
    "text": "them will proxy their API gateway API through app sync and the way that you do that is absent has support for any HTTP",
    "start": "3602630",
    "end": "3609920"
  },
  {
    "text": "data source so again if you go here you can just see an HTTP endpoint you can then use HTTP to proxy API gateway and",
    "start": "3609920",
    "end": "3617300"
  },
  {
    "text": "you can actually even turn on sig before signing so you can actually proxy AWS",
    "start": "3617300",
    "end": "3623800"
  },
  {
    "text": "API itself yeah yeah and this is really",
    "start": "3623800",
    "end": "3629180"
  },
  {
    "text": "common especially if you want to run like a lambda and a V PC so we don't have native support for V PC lambda yet",
    "start": "3629180",
    "end": "3634400"
  },
  {
    "text": "but API gateway does so you can have API gateway call your API V PC and then you can access internal resources in a V PC",
    "start": "3634400",
    "end": "3640730"
  },
  {
    "text": "through API gateway if they're absent yeah okay well thank you guys thanks for",
    "start": "3640730",
    "end": "3649670"
  },
  {
    "text": "coming I hope you enjoy I hope you learned something [Applause]",
    "start": "3649670",
    "end": "3653830"
  }
]