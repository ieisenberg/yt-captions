[
  {
    "start": "0",
    "end": "23000"
  },
  {
    "text": "hey everyone I'm vineet from benchlink",
    "start": "30",
    "end": "1770"
  },
  {
    "text": "and I'm an engineering manager here for",
    "start": "1770",
    "end": "4200"
  },
  {
    "text": "those of you who haven't heard about",
    "start": "4200",
    "end": "5220"
  },
  {
    "text": "benchlink we are and recent Horowitz",
    "start": "5220",
    "end": "7230"
  },
  {
    "text": "spec startup based here in San Francisco",
    "start": "7230",
    "end": "9450"
  },
  {
    "text": "and our mission is to accelerate the",
    "start": "9450",
    "end": "11190"
  },
  {
    "text": "pace of life science research today I'm",
    "start": "11190",
    "end": "14040"
  },
  {
    "text": "going to be talking about scaling the",
    "start": "14040",
    "end": "15870"
  },
  {
    "text": "new gene editing technique CRISPR and",
    "start": "15870",
    "end": "17580"
  },
  {
    "text": "how we used AWS lambda to do that now",
    "start": "17580",
    "end": "21779"
  },
  {
    "text": "before I get into that let's talk a",
    "start": "21779",
    "end": "24720"
  },
  {
    "start": "23000",
    "end": "72000"
  },
  {
    "text": "little bit about Benchley potentially",
    "start": "24720",
    "end": "26849"
  },
  {
    "text": "was founded in 2012 out of MIT and we've",
    "start": "26849",
    "end": "29460"
  },
  {
    "text": "come a long way since we have over 70",
    "start": "29460",
    "end": "31740"
  },
  {
    "text": "enterprise deployments a presence at",
    "start": "31740",
    "end": "33600"
  },
  {
    "text": "several of the top ten pharma companies",
    "start": "33600",
    "end": "35219"
  },
  {
    "text": "and over a hundred and thirty thousand",
    "start": "35219",
    "end": "37050"
  },
  {
    "text": "scientists using us worldwide now what",
    "start": "37050",
    "end": "40200"
  },
  {
    "text": "we're trying to build is a platform a",
    "start": "40200",
    "end": "41610"
  },
  {
    "text": "platform to unify all the different",
    "start": "41610",
    "end": "44219"
  },
  {
    "text": "types of data that scientists are using",
    "start": "44219",
    "end": "46440"
  },
  {
    "text": "in a lab and on top of this platform we",
    "start": "46440",
    "end": "49200"
  },
  {
    "text": "have a number of different custom",
    "start": "49200",
    "end": "50309"
  },
  {
    "text": "applications from our molecular biology",
    "start": "50309",
    "end": "52739"
  },
  {
    "text": "suite which allows people to work with",
    "start": "52739",
    "end": "54809"
  },
  {
    "text": "DNA and protein sequences to sample",
    "start": "54809",
    "end": "57210"
  },
  {
    "text": "tracking for people who are working with",
    "start": "57210",
    "end": "58789"
  },
  {
    "text": "containers and plates in their lab and",
    "start": "58789",
    "end": "61170"
  },
  {
    "text": "we think by unifying all of this data",
    "start": "61170",
    "end": "63449"
  },
  {
    "text": "and making it easy to use and query we",
    "start": "63449",
    "end": "66479"
  },
  {
    "text": "can streamline the way researchers done",
    "start": "66479",
    "end": "67920"
  },
  {
    "text": "and make it get done a little faster as",
    "start": "67920",
    "end": "70170"
  },
  {
    "text": "we heard about in the keynote iteration",
    "start": "70170",
    "end": "71850"
  },
  {
    "text": "speed is really important and we think",
    "start": "71850",
    "end": "73590"
  },
  {
    "text": "by making iteration speed faster we can",
    "start": "73590",
    "end": "75659"
  },
  {
    "text": "affect how fast progress is done in",
    "start": "75659",
    "end": "77340"
  },
  {
    "text": "science how long does it take you to go",
    "start": "77340",
    "end": "80460"
  },
  {
    "text": "through a trial and error workflow how",
    "start": "80460",
    "end": "81780"
  },
  {
    "text": "long does it take you to test a",
    "start": "81780",
    "end": "83310"
  },
  {
    "text": "hypothesis this isn't true just for",
    "start": "83310",
    "end": "85680"
  },
  {
    "text": "science this is true in basically every",
    "start": "85680",
    "end": "87420"
  },
  {
    "text": "domain let's take programming as an",
    "start": "87420",
    "end": "88920"
  },
  {
    "text": "example how long does it take you to run",
    "start": "88920",
    "end": "90990"
  },
  {
    "text": "your tests how long does it take you to",
    "start": "90990",
    "end": "92729"
  },
  {
    "text": "refresh your page when you're building",
    "start": "92729",
    "end": "94530"
  },
  {
    "text": "that new front-end component or deploy",
    "start": "94530",
    "end": "96450"
  },
  {
    "text": "your code to production now all of these",
    "start": "96450",
    "end": "98549"
  },
  {
    "text": "things take minutes if not seconds but",
    "start": "98549",
    "end": "102000"
  },
  {
    "text": "your developers are still gonna complain",
    "start": "102000",
    "end": "103259"
  },
  {
    "text": "if they're a little bit too slow if your",
    "start": "103259",
    "end": "105210"
  },
  {
    "text": "front-end page takes five seconds to",
    "start": "105210",
    "end": "106590"
  },
  {
    "text": "reload instead of one second because it",
    "start": "106590",
    "end": "108329"
  },
  {
    "text": "affects how fast they can work but now",
    "start": "108329",
    "end": "111030"
  },
  {
    "text": "imagine this as a biologist if you want",
    "start": "111030",
    "end": "113850"
  },
  {
    "text": "to grow a new cell culture that's going",
    "start": "113850",
    "end": "115170"
  },
  {
    "text": "to take you three days you want to",
    "start": "115170",
    "end": "116909"
  },
  {
    "text": "express a new protein they're gonna be",
    "start": "116909",
    "end": "118560"
  },
  {
    "text": "waiting two weeks for that to happen now",
    "start": "118560",
    "end": "120719"
  },
  {
    "text": "you're going a new strain of mice you",
    "start": "120719",
    "end": "123240"
  },
  {
    "text": "need to make eight weeks before those",
    "start": "123240",
    "end": "124979"
  },
  {
    "text": "mice are going to go up now we're not in",
    "start": "124979",
    "end": "127439"
  },
  {
    "text": "the business of making mice go up faster",
    "start": "127439",
    "end": "129179"
  },
  {
    "text": "our cell cultures go off faster but what",
    "start": "129179",
    "end": "131640"
  },
  {
    "text": "we can do is prevent you from",
    "start": "131640",
    "end": "132750"
  },
  {
    "text": "mistakes we can make sure that you're",
    "start": "132750",
    "end": "135060"
  },
  {
    "text": "not going to spend eight weeks",
    "start": "135060",
    "end": "135840"
  },
  {
    "text": "needlessly when you need to run your",
    "start": "135840",
    "end": "137550"
  },
  {
    "text": "experiment again and we can do that",
    "start": "137550",
    "end": "139440"
  },
  {
    "text": "using software so today what I'm going",
    "start": "139440",
    "end": "141510"
  },
  {
    "start": "140000",
    "end": "387000"
  },
  {
    "text": "to talk about is how we did that for",
    "start": "141510",
    "end": "143010"
  },
  {
    "text": "CRISPR how many of you guys have heard",
    "start": "143010",
    "end": "144630"
  },
  {
    "text": "of CRISPR before alright basically the",
    "start": "144630",
    "end": "146910"
  },
  {
    "text": "entire room so I'm going to talk a",
    "start": "146910",
    "end": "148890"
  },
  {
    "text": "little bit about history of gene editing",
    "start": "148890",
    "end": "150750"
  },
  {
    "text": "and CRISPR and then dive into the meat",
    "start": "150750",
    "end": "152970"
  },
  {
    "text": "of this stock which will be the problem",
    "start": "152970",
    "end": "155040"
  },
  {
    "text": "we're actually solving and the algorithm",
    "start": "155040",
    "end": "156480"
  },
  {
    "text": "and infrastructure that we use to solve",
    "start": "156480",
    "end": "158070"
  },
  {
    "text": "that let's start with gene editing gene",
    "start": "158070",
    "end": "160920"
  },
  {
    "text": "editing I start with some brief",
    "start": "160920",
    "end": "162720"
  },
  {
    "text": "vocabulary you all are familiar with",
    "start": "162720",
    "end": "165270"
  },
  {
    "text": "this picture the double helix this is",
    "start": "165270",
    "end": "167160"
  },
  {
    "text": "DNA the basic building block of life it",
    "start": "167160",
    "end": "169800"
  },
  {
    "text": "controls everything that happens in your",
    "start": "169800",
    "end": "171240"
  },
  {
    "text": "site inside your body the DNA is just a",
    "start": "171240",
    "end": "173790"
  },
  {
    "text": "long string of nucleotides or basis or",
    "start": "173790",
    "end": "176250"
  },
  {
    "text": "in programming terms a long string of",
    "start": "176250",
    "end": "178110"
  },
  {
    "text": "characters and this DNA makes up what",
    "start": "178110",
    "end": "182100"
  },
  {
    "text": "are called genes these genes in your",
    "start": "182100",
    "end": "183390"
  },
  {
    "text": "body have various functions from the",
    "start": "183390",
    "end": "185130"
  },
  {
    "text": "color of your hair to how could your",
    "start": "185130",
    "end": "186720"
  },
  {
    "text": "eyesight is to whether or not you have",
    "start": "186720",
    "end": "188580"
  },
  {
    "text": "Huntington's disease in your genomes",
    "start": "188580",
    "end": "191010"
  },
  {
    "text": "just the collection of all the DNA in a",
    "start": "191010",
    "end": "193170"
  },
  {
    "text": "single organism like a human could gene",
    "start": "193170",
    "end": "195780"
  },
  {
    "text": "editing is exactly what it sounds like",
    "start": "195780",
    "end": "197850"
  },
  {
    "text": "it's can we actually make edits to these",
    "start": "197850",
    "end": "200610"
  },
  {
    "text": "genes to add functionality just have to",
    "start": "200610",
    "end": "202290"
  },
  {
    "text": "remove functionality to turn it on or",
    "start": "202290",
    "end": "204000"
  },
  {
    "text": "off let's go through maybe a specific",
    "start": "204000",
    "end": "205980"
  },
  {
    "text": "example so one way you can use gene",
    "start": "205980",
    "end": "208739"
  },
  {
    "text": "editing as to just completely break a",
    "start": "208739",
    "end": "210570"
  },
  {
    "text": "gene or turn it off now why would you",
    "start": "210570",
    "end": "212760"
  },
  {
    "text": "want to do that well maybe maybe I don't",
    "start": "212760",
    "end": "215400"
  },
  {
    "text": "know what the HTT gene does so maybe I",
    "start": "215400",
    "end": "217739"
  },
  {
    "text": "turn it off I test it in some bacteria",
    "start": "217739",
    "end": "219300"
  },
  {
    "text": "and I see what happens I can try and",
    "start": "219300",
    "end": "222209"
  },
  {
    "text": "figure out what that gene is actually",
    "start": "222209",
    "end": "223019"
  },
  {
    "text": "doing in this case the hdt gene is",
    "start": "223019",
    "end": "225750"
  },
  {
    "text": "actually the huntingtin gene and maybe",
    "start": "225750",
    "end": "227519"
  },
  {
    "text": "you have a mutation in that and maybe by",
    "start": "227519",
    "end": "229950"
  },
  {
    "text": "turning that gene off we can actually",
    "start": "229950",
    "end": "231480"
  },
  {
    "text": "prevent you from getting Huntington",
    "start": "231480",
    "end": "232739"
  },
  {
    "text": "disease when you when you get to 35 this",
    "start": "232739",
    "end": "235769"
  },
  {
    "text": "is just one application of gene editing",
    "start": "235769",
    "end": "237180"
  },
  {
    "text": "it's a lot of different applications",
    "start": "237180",
    "end": "238489"
  },
  {
    "text": "what gene editing existed before CRISPR",
    "start": "238489",
    "end": "241880"
  },
  {
    "text": "people have been doing this since 1991",
    "start": "241880",
    "end": "244049"
  },
  {
    "text": "and the problem was that it didn't not",
    "start": "244049",
    "end": "246090"
  },
  {
    "text": "that it didn't work the problem was that",
    "start": "246090",
    "end": "247650"
  },
  {
    "text": "it was just too slow we've taken months",
    "start": "247650",
    "end": "249120"
  },
  {
    "text": "to actually make these genes out of it's",
    "start": "249120",
    "end": "250980"
  },
  {
    "text": "their entire PhD projects of people",
    "start": "250980",
    "end": "253620"
  },
  {
    "text": "trying to make these edits I'm told",
    "start": "253620",
    "end": "255390"
  },
  {
    "text": "Christopher came out in 2012 and this",
    "start": "255390",
    "end": "257850"
  },
  {
    "text": "completely revolutionized how people",
    "start": "257850",
    "end": "259320"
  },
  {
    "text": "were doing gene editing because now you",
    "start": "259320",
    "end": "261090"
  },
  {
    "text": "could do this in days a high school",
    "start": "261090",
    "end": "262680"
  },
  {
    "text": "student could get trained",
    "start": "262680",
    "end": "264300"
  },
  {
    "text": "and I could order a kit from a company",
    "start": "264300",
    "end": "266310"
  },
  {
    "text": "and start using CRISPR immediately and",
    "start": "266310",
    "end": "267990"
  },
  {
    "text": "that completely changes the iteration",
    "start": "267990",
    "end": "269610"
  },
  {
    "text": "speed that these scientists are working",
    "start": "269610",
    "end": "271349"
  },
  {
    "text": "out now unfortunately software didn't",
    "start": "271349",
    "end": "275039"
  },
  {
    "text": "quite catch up so this came out in 2012",
    "start": "275039",
    "end": "276509"
  },
  {
    "text": "and in 2014 scientists were starting to",
    "start": "276509",
    "end": "278550"
  },
  {
    "text": "use CRISPR but even in 2014",
    "start": "278550",
    "end": "281539"
  },
  {
    "text": "actually planning these experiments was",
    "start": "281539",
    "end": "283680"
  },
  {
    "text": "taking hours or days some of our",
    "start": "283680",
    "end": "285810"
  },
  {
    "text": "customers mentioned it was take weeks to",
    "start": "285810",
    "end": "287069"
  },
  {
    "text": "actually plan out a CRISPR experiment",
    "start": "287069",
    "end": "288599"
  },
  {
    "text": "now why do you actually need software to",
    "start": "288599",
    "end": "290490"
  },
  {
    "text": "do this well let's take a look at a more",
    "start": "290490",
    "end": "292680"
  },
  {
    "text": "realistic example instead of just one",
    "start": "292680",
    "end": "294330"
  },
  {
    "text": "gene it's actually sorry excuse me",
    "start": "294330",
    "end": "297120"
  },
  {
    "text": "before that let's talk about how Chris",
    "start": "297120",
    "end": "298620"
  },
  {
    "text": "were actually works so as I mentioned",
    "start": "298620",
    "end": "300270"
  },
  {
    "text": "we're trying to break a gene here so how",
    "start": "300270",
    "end": "303330"
  },
  {
    "text": "does how does this these scissors",
    "start": "303330",
    "end": "304680"
  },
  {
    "text": "actually know where to go in the genome",
    "start": "304680",
    "end": "306270"
  },
  {
    "text": "to break",
    "start": "306270",
    "end": "306870"
  },
  {
    "text": "well we guide those scissors using",
    "start": "306870",
    "end": "308729"
  },
  {
    "text": "what's called a guide this guide is just",
    "start": "308729",
    "end": "310319"
  },
  {
    "text": "a short piece of DNA maybe 20 characters",
    "start": "310319",
    "end": "312810"
  },
  {
    "text": "long and that guide is going to find a",
    "start": "312810",
    "end": "315180"
  },
  {
    "text": "region in the genome that's a match to",
    "start": "315180",
    "end": "317129"
  },
  {
    "text": "that guide and the scissors are gonna",
    "start": "317129",
    "end": "319110"
  },
  {
    "text": "make a cut there and if that cut happens",
    "start": "319110",
    "end": "320969"
  },
  {
    "text": "to be in a location that's in a gene we",
    "start": "320969",
    "end": "323129"
  },
  {
    "text": "can break that gene well let's take a",
    "start": "323129",
    "end": "327599"
  },
  {
    "text": "look at a more realistic example of why",
    "start": "327599",
    "end": "328889"
  },
  {
    "text": "we actually need software to do this",
    "start": "328889",
    "end": "330180"
  },
  {
    "text": "let's say I have two genes here and I'm",
    "start": "330180",
    "end": "332490"
  },
  {
    "text": "trying to target this hdt gene and in",
    "start": "332490",
    "end": "335159"
  },
  {
    "text": "this toy example I'm using a four",
    "start": "335159",
    "end": "336930"
  },
  {
    "text": "character guide of Ag CT so we're gonna",
    "start": "336930",
    "end": "340229"
  },
  {
    "text": "guide our CRISPR there it's gonna make a",
    "start": "340229",
    "end": "342029"
  },
  {
    "text": "cut and maybe everything will work fine",
    "start": "342029",
    "end": "343909"
  },
  {
    "text": "unfortunately I didn't notice that",
    "start": "343909",
    "end": "345539"
  },
  {
    "text": "there's also this AG CT somewhere else",
    "start": "345539",
    "end": "347880"
  },
  {
    "text": "in my genome and we accidentally made a",
    "start": "347880",
    "end": "349770"
  },
  {
    "text": "cut and is Braca to gene and",
    "start": "349770",
    "end": "352099"
  },
  {
    "text": "unfortunately for me that's actually a",
    "start": "352099",
    "end": "354000"
  },
  {
    "text": "tumor suppressor gene and that prevents",
    "start": "354000",
    "end": "356370"
  },
  {
    "text": "things like breast cancer so when we're",
    "start": "356370",
    "end": "358259"
  },
  {
    "text": "using CRISPR we need to make sure that",
    "start": "358259",
    "end": "360419"
  },
  {
    "text": "we're targeting the regions that we care",
    "start": "360419",
    "end": "362129"
  },
  {
    "text": "about and not targeting anything else",
    "start": "362129",
    "end": "363830"
  },
  {
    "text": "and this is where software comes in we",
    "start": "363830",
    "end": "366479"
  },
  {
    "text": "can find guides that match the region",
    "start": "366479",
    "end": "368699"
  },
  {
    "text": "and the genes that you care about and",
    "start": "368699",
    "end": "370490"
  },
  {
    "text": "specifically don't match anywhere else",
    "start": "370490",
    "end": "372719"
  },
  {
    "text": "in your genome now back in 2014 the",
    "start": "372719",
    "end": "375180"
  },
  {
    "text": "solutions did the software solutions to",
    "start": "375180",
    "end": "377279"
  },
  {
    "text": "do this for taking hours or days and we",
    "start": "377279",
    "end": "379409"
  },
  {
    "text": "saw this as an opportunity to help",
    "start": "379409",
    "end": "381419"
  },
  {
    "text": "science move a little bit faster",
    "start": "381419",
    "end": "383350"
  },
  {
    "text": "so now we have a problem statement a",
    "start": "383350",
    "end": "385300"
  },
  {
    "text": "scientist is gonna come to bench Lane",
    "start": "385300",
    "end": "387040"
  },
  {
    "start": "387000",
    "end": "510000"
  },
  {
    "text": "and they're gonna ask how do we knock",
    "start": "387040",
    "end": "388480"
  },
  {
    "text": "out this particular gene and we know",
    "start": "388480",
    "end": "391630"
  },
  {
    "text": "what they mean now where they're trying",
    "start": "391630",
    "end": "392890"
  },
  {
    "text": "to target usually the beginning of that",
    "start": "392890",
    "end": "394300"
  },
  {
    "text": "gene to break it and we want to find",
    "start": "394300",
    "end": "396490"
  },
  {
    "text": "guides that match that region and don't",
    "start": "396490",
    "end": "398710"
  },
  {
    "text": "match anywhere else in the genome so how",
    "start": "398710",
    "end": "400900"
  },
  {
    "text": "does bench thing actually answer this",
    "start": "400900",
    "end": "401890"
  },
  {
    "text": "well we find a bunch of potential guides",
    "start": "401890",
    "end": "404530"
  },
  {
    "text": "in this region and then we test all of",
    "start": "404530",
    "end": "407380"
  },
  {
    "text": "those guys against the rest of the",
    "start": "407380",
    "end": "408490"
  },
  {
    "text": "genome to see do any of these guides cut",
    "start": "408490",
    "end": "410650"
  },
  {
    "text": "anywhere else most of them probably",
    "start": "410650",
    "end": "411790"
  },
  {
    "text": "aren't going to work and we're gonna",
    "start": "411790",
    "end": "412930"
  },
  {
    "text": "find the best candidates for those to",
    "start": "412930",
    "end": "414610"
  },
  {
    "text": "present flows to the user now what does",
    "start": "414610",
    "end": "416860"
  },
  {
    "text": "match actually mean here I've been",
    "start": "416860",
    "end": "417970"
  },
  {
    "text": "saying the guide needs to match in this",
    "start": "417970",
    "end": "419410"
  },
  {
    "text": "region and not match somewhere else what",
    "start": "419410",
    "end": "421720"
  },
  {
    "text": "turns out we're not looking just for",
    "start": "421720",
    "end": "423040"
  },
  {
    "text": "exact matches crisper my cut even if",
    "start": "423040",
    "end": "424840"
  },
  {
    "text": "these guys are close and empirically",
    "start": "424840",
    "end": "427380"
  },
  {
    "text": "crisper might cut up to an edit distance",
    "start": "427380",
    "end": "429820"
  },
  {
    "text": "of 4 so in this case the guide might",
    "start": "429820",
    "end": "432610"
  },
  {
    "text": "match this location in the genome even",
    "start": "432610",
    "end": "434800"
  },
  {
    "text": "with just 3 mismatches here so this is a",
    "start": "434800",
    "end": "437650"
  },
  {
    "text": "little bit harder of a search problem",
    "start": "437650",
    "end": "438700"
  },
  {
    "text": "we're not just looking for exact matches",
    "start": "438700",
    "end": "440080"
  },
  {
    "text": "we're looking for approximate matches so",
    "start": "440080",
    "end": "442870"
  },
  {
    "text": "let's raise this more as an algorithmic",
    "start": "442870",
    "end": "444370"
  },
  {
    "text": "problem given a genome and instead of",
    "start": "444370",
    "end": "447040"
  },
  {
    "text": "maybe 200 guides we want to find all the",
    "start": "447040",
    "end": "449470"
  },
  {
    "text": "locations in the genome that actually we",
    "start": "449470",
    "end": "451930"
  },
  {
    "text": "are within an added distance of 4 of one",
    "start": "451930",
    "end": "454300"
  },
  {
    "text": "of these guides now this isn't just a",
    "start": "454300",
    "end": "457300"
  },
  {
    "text": "theoretical problem this is a real",
    "start": "457300",
    "end": "458620"
  },
  {
    "text": "problem we need to solve so what kind of",
    "start": "458620",
    "end": "460060"
  },
  {
    "text": "numbers are we looking at well the human",
    "start": "460060",
    "end": "463000"
  },
  {
    "text": "genome is around 3 billion bases long",
    "start": "463000",
    "end": "465790"
  },
  {
    "text": "and that's around that's a longer end of",
    "start": "465790",
    "end": "467770"
  },
  {
    "text": "the genomes we want to target a guide",
    "start": "467770",
    "end": "470260"
  },
  {
    "text": "length of around 20 and typically we're",
    "start": "470260",
    "end": "472360"
  },
  {
    "text": "going to be looking at around 200 guides",
    "start": "472360",
    "end": "473800"
  },
  {
    "text": "at a time remember most of these guys",
    "start": "473800",
    "end": "475420"
  },
  {
    "text": "aren't going to work so we're gonna test",
    "start": "475420",
    "end": "476740"
  },
  {
    "text": "a bunch of them to try and find",
    "start": "476740",
    "end": "478120"
  },
  {
    "text": "something that worked for our use case",
    "start": "478120",
    "end": "480420"
  },
  {
    "text": "so as we're building out this",
    "start": "480420",
    "end": "482170"
  },
  {
    "text": "infrastructure what kind of goals are we",
    "start": "482170",
    "end": "483370"
  },
  {
    "text": "trying to hit we want this to be fast",
    "start": "483370",
    "end": "485100"
  },
  {
    "text": "remember I said this was taking hours or",
    "start": "485100",
    "end": "487360"
  },
  {
    "text": "days to compute before well we have a",
    "start": "487360",
    "end": "489700"
  },
  {
    "text": "web application we want people to be",
    "start": "489700",
    "end": "491560"
  },
  {
    "text": "able to click a button say run a CRISPR",
    "start": "491560",
    "end": "493360"
  },
  {
    "text": "analysis and get them a response",
    "start": "493360",
    "end": "495070"
  },
  {
    "text": "immediately",
    "start": "495070",
    "end": "496260"
  },
  {
    "text": "second things we want this to be",
    "start": "496260",
    "end": "497700"
  },
  {
    "text": "scalable there's gonna be millions of",
    "start": "497700",
    "end": "499200"
  },
  {
    "text": "searches a month and we also want it to",
    "start": "499200",
    "end": "501960"
  },
  {
    "text": "be cheap we're a start-up as many of you",
    "start": "501960",
    "end": "504120"
  },
  {
    "text": "are and we care that this isn't",
    "start": "504120",
    "end": "505700"
  },
  {
    "text": "affecting our bottom line too much all",
    "start": "505700",
    "end": "509340"
  },
  {
    "text": "right so now let's get into the fun part",
    "start": "509340",
    "end": "510540"
  },
  {
    "start": "510000",
    "end": "980000"
  },
  {
    "text": "the actual algorithm infrastructure that",
    "start": "510540",
    "end": "511890"
  },
  {
    "text": "we used to solve this so naively we have",
    "start": "511890",
    "end": "514770"
  },
  {
    "text": "a pretty straightforward search problem",
    "start": "514770",
    "end": "516590"
  },
  {
    "text": "we couldn't iterate over the entire",
    "start": "516590",
    "end": "518909"
  },
  {
    "text": "genome and for every location maybe we",
    "start": "518910",
    "end": "521580"
  },
  {
    "text": "can find whether it's a match or not if",
    "start": "521580",
    "end": "523710"
  },
  {
    "text": "we can do that every time and that",
    "start": "523710",
    "end": "525270"
  },
  {
    "text": "sounds like a pretty parallelizable",
    "start": "525270",
    "end": "526440"
  },
  {
    "text": "problem we could divide this genome into",
    "start": "526440",
    "end": "527970"
  },
  {
    "text": "several chunks and do them all at once",
    "start": "527970",
    "end": "529470"
  },
  {
    "text": "on the other hand we could index the",
    "start": "529470",
    "end": "532200"
  },
  {
    "text": "genome look at store or some sort of",
    "start": "532200",
    "end": "534330"
  },
  {
    "text": "Korea bull format so that when queries",
    "start": "534330",
    "end": "536190"
  },
  {
    "text": "come in we can answer those even faster",
    "start": "536190",
    "end": "537810"
  },
  {
    "text": "so let's go through some possible",
    "start": "537810",
    "end": "539280"
  },
  {
    "text": "solutions here then the naive approach",
    "start": "539280",
    "end": "542310"
  },
  {
    "text": "here and take a look at the the code I",
    "start": "542310",
    "end": "544020"
  },
  {
    "text": "have a fear but just for every guide go",
    "start": "544020",
    "end": "546210"
  },
  {
    "text": "through the entire genome check the Edit",
    "start": "546210",
    "end": "548130"
  },
  {
    "text": "distance between my guide and the",
    "start": "548130",
    "end": "549690"
  },
  {
    "text": "location of the genome if the Edit",
    "start": "549690",
    "end": "551880"
  },
  {
    "text": "distance is lesson 4 we found a match",
    "start": "551880",
    "end": "553680"
  },
  {
    "text": "great turns out this actually isn't that",
    "start": "553680",
    "end": "555900"
  },
  {
    "text": "slow it takes three and a half hours but",
    "start": "555900",
    "end": "558360"
  },
  {
    "text": "if we're running this a million times a",
    "start": "558360",
    "end": "559830"
  },
  {
    "text": "month three and a half hours is gonna be",
    "start": "559830",
    "end": "561660"
  },
  {
    "text": "really expensive so how can we make this",
    "start": "561660",
    "end": "564750"
  },
  {
    "text": "a little bit faster well we were",
    "start": "564750",
    "end": "567600"
  },
  {
    "text": "iterating over the genome 200 times",
    "start": "567600",
    "end": "569340"
  },
  {
    "text": "before so maybe we can find a way to do",
    "start": "569340",
    "end": "571260"
  },
  {
    "text": "that a little bit last murmur this",
    "start": "571260",
    "end": "572220"
  },
  {
    "text": "genome is 3 billion characters long so",
    "start": "572220",
    "end": "575550"
  },
  {
    "text": "instead let's take our input 200 guides",
    "start": "575550",
    "end": "578400"
  },
  {
    "text": "and find every possible 20 character",
    "start": "578400",
    "end": "581250"
  },
  {
    "text": "string that's within an edit distance of",
    "start": "581250",
    "end": "582720"
  },
  {
    "text": "4 we'll find all of our potential",
    "start": "582720",
    "end": "584190"
  },
  {
    "text": "matches all up at the beginning so",
    "start": "584190",
    "end": "586770"
  },
  {
    "text": "there's four hundred and twenty five",
    "start": "586770",
    "end": "587820"
  },
  {
    "text": "thousand or so possible matches for any",
    "start": "587820",
    "end": "590040"
  },
  {
    "text": "particular guide so we're gonna end up",
    "start": "590040",
    "end": "591900"
  },
  {
    "text": "with 85 million possible matches at the",
    "start": "591900",
    "end": "594270"
  },
  {
    "text": "beginning but now we can just iterate it",
    "start": "594270",
    "end": "596100"
  },
  {
    "text": "over the genome once we can take a given",
    "start": "596100",
    "end": "598290"
  },
  {
    "text": "location check if it's in our giant hash",
    "start": "598290",
    "end": "600510"
  },
  {
    "text": "set if it is we found a match but now",
    "start": "600510",
    "end": "602820"
  },
  {
    "text": "we're only iterating once and we have a",
    "start": "602820",
    "end": "604440"
  },
  {
    "text": "solution that only takes one hour means",
    "start": "604440",
    "end": "607020"
  },
  {
    "text": "around two gigs of memory if we're gonna",
    "start": "607020",
    "end": "608490"
  },
  {
    "text": "store these 85 million strings not too",
    "start": "608490",
    "end": "610410"
  },
  {
    "text": "bad again one hour is still pretty slow",
    "start": "610410",
    "end": "612960"
  },
  {
    "text": "it's gonna cost us a lot every month and",
    "start": "612960",
    "end": "615330"
  },
  {
    "text": "it's still not really parallelizable",
    "start": "615330",
    "end": "616860"
  },
  {
    "text": "down to one second and stole a little",
    "start": "616860",
    "end": "618450"
  },
  {
    "text": "bit too slow but we have a couple of",
    "start": "618450",
    "end": "620580"
  },
  {
    "text": "other tricks up our sleeve",
    "start": "620580",
    "end": "622260"
  },
  {
    "text": "the first one is we know what space",
    "start": "622260",
    "end": "624600"
  },
  {
    "text": "you're in we're working with DNA and DNA",
    "start": "624600",
    "end": "627330"
  },
  {
    "text": "is only four possible characters we can",
    "start": "627330",
    "end": "629250"
  },
  {
    "text": "represent each of these characters",
    "start": "629250",
    "end": "630420"
  },
  {
    "text": "instead of as letter as two bits we can",
    "start": "630420",
    "end": "634170"
  },
  {
    "text": "map in this case a a at a 2 0 0 and we",
    "start": "634170",
    "end": "637590"
  },
  {
    "text": "can convert our 20 character guide into",
    "start": "637590",
    "end": "639540"
  },
  {
    "text": "just 40 bits now I can represent those",
    "start": "639540",
    "end": "641970"
  },
  {
    "text": "40 bits in a 64-bit integer with 24 bits",
    "start": "641970",
    "end": "645600"
  },
  {
    "text": "to spare in fact now why is that helpful",
    "start": "645600",
    "end": "648030"
  },
  {
    "text": "well instead of working with 20",
    "start": "648030",
    "end": "649920"
  },
  {
    "text": "character strings I cannot work with",
    "start": "649920",
    "end": "651300"
  },
  {
    "text": "64-bit integers and that's gonna make a",
    "start": "651300",
    "end": "653430"
  },
  {
    "text": "lot of things faster before I had a half",
    "start": "653430",
    "end": "655080"
  },
  {
    "text": "set of 20 85 million 20 character",
    "start": "655080",
    "end": "657330"
  },
  {
    "text": "strings now this hash that is a lot",
    "start": "657330",
    "end": "658920"
  },
  {
    "text": "smaller hashing on these integers is",
    "start": "658920",
    "end": "660810"
  },
  {
    "text": "going to be a little bit faster than on",
    "start": "660810",
    "end": "662010"
  },
  {
    "text": "those strings as we're iterating over",
    "start": "662010",
    "end": "663930"
  },
  {
    "text": "the genome instead of keeping track of",
    "start": "663930",
    "end": "665400"
  },
  {
    "text": "20 character string of where I am and",
    "start": "665400",
    "end": "667260"
  },
  {
    "text": "appending and prepending to that string",
    "start": "667260",
    "end": "668910"
  },
  {
    "text": "I can actually use bit shifting",
    "start": "668910",
    "end": "670860"
  },
  {
    "text": "operations on my 64-bit integer or",
    "start": "670860",
    "end": "672810"
  },
  {
    "text": "what's called a rolling hash as I'm",
    "start": "672810",
    "end": "674460"
  },
  {
    "text": "going through and that's gonna be a lot",
    "start": "674460",
    "end": "675570"
  },
  {
    "text": "faster in this case it turns out to be 5",
    "start": "675570",
    "end": "677670"
  },
  {
    "text": "times faster or all the way down to 13",
    "start": "677670",
    "end": "679830"
  },
  {
    "text": "minutes and using a lot less memory",
    "start": "679830",
    "end": "681480"
  },
  {
    "text": "because integers are smaller 30 minutes",
    "start": "681480",
    "end": "684810"
  },
  {
    "text": "isn't bad it's still gonna cost us a",
    "start": "684810",
    "end": "687180"
  },
  {
    "text": "little bit more than we were comfortable",
    "start": "687180",
    "end": "688350"
  },
  {
    "text": "with so what else can we do well it",
    "start": "688350",
    "end": "692340"
  },
  {
    "text": "turns out that when you're iterating",
    "start": "692340",
    "end": "693960"
  },
  {
    "text": "over a three billion character string",
    "start": "693960",
    "end": "695940"
  },
  {
    "text": "and checking existence in a hash set top",
    "start": "695940",
    "end": "699150"
  },
  {
    "text": "sets end up being pretty expensive that",
    "start": "699150",
    "end": "700620"
  },
  {
    "text": "actually just doing the hashing",
    "start": "700620",
    "end": "702060"
  },
  {
    "text": "operation takes a long time if you're",
    "start": "702060",
    "end": "703680"
  },
  {
    "text": "doing a three billion times over and",
    "start": "703680",
    "end": "705630"
  },
  {
    "text": "over again so how can we avoid that well",
    "start": "705630",
    "end": "708330"
  },
  {
    "text": "maybe we can represent the hash set as",
    "start": "708330",
    "end": "709710"
  },
  {
    "text": "an array instead so we take our hash set",
    "start": "709710",
    "end": "712590"
  },
  {
    "text": "of twenty character guides now remember",
    "start": "712590",
    "end": "715710"
  },
  {
    "text": "we're representing these as integers now",
    "start": "715710",
    "end": "717150"
  },
  {
    "text": "so in this case let's imagine that I",
    "start": "717150",
    "end": "719670"
  },
  {
    "text": "have hash set of 1 3 5 & 6 now I can",
    "start": "719670",
    "end": "722970"
  },
  {
    "text": "represent that as an a boolean array",
    "start": "722970",
    "end": "724410"
  },
  {
    "text": "instead where the value is true if that",
    "start": "724410",
    "end": "728490"
  },
  {
    "text": "index is in the hash set so in this case",
    "start": "728490",
    "end": "730620"
  },
  {
    "text": "is the largest element is 6 so our",
    "start": "730620",
    "end": "732480"
  },
  {
    "text": "arrays of size 6 this ends up being a",
    "start": "732480",
    "end": "735600"
  },
  {
    "text": "lot faster I can do an array look up",
    "start": "735600",
    "end": "737400"
  },
  {
    "text": "instead of hashing the integer and then",
    "start": "737400",
    "end": "739230"
  },
  {
    "text": "checking the existence in the hash set",
    "start": "739230",
    "end": "740570"
  },
  {
    "text": "but if this is so much faster why",
    "start": "740570",
    "end": "743160"
  },
  {
    "text": "doesn't everybody use boolean arrays",
    "start": "743160",
    "end": "744540"
  },
  {
    "text": "instead of hash that's well turns out it",
    "start": "744540",
    "end": "746700"
  },
  {
    "text": "has a couple of problems one we need to",
    "start": "746700",
    "end": "749100"
  },
  {
    "text": "have integer keys in the first voice in",
    "start": "749100",
    "end": "750960"
  },
  {
    "text": "this case we do so that's that's fine",
    "start": "750960",
    "end": "753230"
  },
  {
    "text": "the major problem though is the size of",
    "start": "753230",
    "end": "755090"
  },
  {
    "text": "our hats that needs to be as large it's",
    "start": "755090",
    "end": "756740"
  },
  {
    "text": "the largest possible element and in this",
    "start": "756740",
    "end": "758660"
  },
  {
    "text": "case it's just six so we have an element",
    "start": "758660",
    "end": "760340"
  },
  {
    "text": "of an array of size six but if I had an",
    "start": "760340",
    "end": "762680"
  },
  {
    "text": "element here that was ten million my",
    "start": "762680",
    "end": "764510"
  },
  {
    "text": "array would now needs to be ten million",
    "start": "764510",
    "end": "766190"
  },
  {
    "text": "elements long for our problem how many",
    "start": "766190",
    "end": "769670"
  },
  {
    "text": "what's the maximum possible number well",
    "start": "769670",
    "end": "771680"
  },
  {
    "text": "we have four characters at each position",
    "start": "771680",
    "end": "773390"
  },
  {
    "text": "we have twenty characters so we're gonna",
    "start": "773390",
    "end": "775760"
  },
  {
    "text": "need four to the 20 spaces in our out in",
    "start": "775760",
    "end": "778100"
  },
  {
    "text": "our array a one trillion elements in our",
    "start": "778100",
    "end": "780470"
  },
  {
    "text": "array that's quite a lot we're gonna",
    "start": "780470",
    "end": "782780"
  },
  {
    "text": "need a terabyte of memory to run this",
    "start": "782780",
    "end": "784220"
  },
  {
    "text": "algorithm and even just making those",
    "start": "784220",
    "end": "786470"
  },
  {
    "text": "memory accesses is not gonna be slow",
    "start": "786470",
    "end": "787970"
  },
  {
    "text": "because I can't fit it cache but how can",
    "start": "787970",
    "end": "790520"
  },
  {
    "text": "we use this approach to use array",
    "start": "790520",
    "end": "793880"
  },
  {
    "text": "lookups instead of hash that's well what",
    "start": "793880",
    "end": "796070"
  },
  {
    "text": "if we split it into two arrays instead",
    "start": "796070",
    "end": "798260"
  },
  {
    "text": "of one array so we started with this",
    "start": "798260",
    "end": "800720"
  },
  {
    "text": "hash that we have these 64-bit integers",
    "start": "800720",
    "end": "803210"
  },
  {
    "text": "each of these is representing a twenty",
    "start": "803210",
    "end": "805040"
  },
  {
    "text": "character string now to split it into",
    "start": "805040",
    "end": "807590"
  },
  {
    "text": "two I'm just going to split every string",
    "start": "807590",
    "end": "810260"
  },
  {
    "text": "Institute take the first half put it in",
    "start": "810260",
    "end": "812270"
  },
  {
    "text": "half step number one and take the second",
    "start": "812270",
    "end": "814370"
  },
  {
    "text": "half and put it into half step number",
    "start": "814370",
    "end": "815450"
  },
  {
    "text": "two so in this case the first I'm here",
    "start": "815450",
    "end": "817880"
  },
  {
    "text": "I'm using eight characters but you can",
    "start": "817880",
    "end": "819140"
  },
  {
    "text": "present but done this was twenty you see",
    "start": "819140",
    "end": "822530"
  },
  {
    "text": "the cgta in the first hash - you see",
    "start": "822530",
    "end": "824660"
  },
  {
    "text": "this gcta in second half side okay so we",
    "start": "824660",
    "end": "827750"
  },
  {
    "text": "split one hash into - why is that",
    "start": "827750",
    "end": "829310"
  },
  {
    "text": "helpful well before the size of our",
    "start": "829310",
    "end": "831830"
  },
  {
    "text": "array needed to be four to the twenty",
    "start": "831830",
    "end": "833810"
  },
  {
    "text": "because there were twenty characters in",
    "start": "833810",
    "end": "835670"
  },
  {
    "text": "each string now our array only needs to",
    "start": "835670",
    "end": "838460"
  },
  {
    "text": "be four to the 10 because is only 10",
    "start": "838460",
    "end": "839840"
  },
  {
    "text": "characters any string so we've now",
    "start": "839840",
    "end": "841100"
  },
  {
    "text": "dropped from one trillion elements in",
    "start": "841100",
    "end": "843350"
  },
  {
    "text": "our array the two arrays that just need",
    "start": "843350",
    "end": "845390"
  },
  {
    "text": "1 million elements just one megabyte",
    "start": "845390",
    "end": "847040"
  },
  {
    "text": "each for each of those each of those",
    "start": "847040",
    "end": "848420"
  },
  {
    "text": "arrays so it's a massive improvement in",
    "start": "848420",
    "end": "850490"
  },
  {
    "text": "memory how do we actually do a query",
    "start": "850490",
    "end": "852220"
  },
  {
    "text": "well let's say this was this was our",
    "start": "852220",
    "end": "854960"
  },
  {
    "text": "query at the bottom I take the input",
    "start": "854960",
    "end": "856790"
  },
  {
    "text": "string I divided into to check if the",
    "start": "856790",
    "end": "859190"
  },
  {
    "text": "first half exists in my first hash set",
    "start": "859190",
    "end": "860990"
  },
  {
    "text": "check of the second half exists in my",
    "start": "860990",
    "end": "862580"
  },
  {
    "text": "second hash set if it does great we",
    "start": "862580",
    "end": "864800"
  },
  {
    "text": "found a match again this seems too good",
    "start": "864800",
    "end": "868220"
  },
  {
    "text": "to be true what's the catch as I'm sure",
    "start": "868220",
    "end": "870290"
  },
  {
    "text": "many of you guys noticed we might need",
    "start": "870290",
    "end": "872720"
  },
  {
    "text": "to deal with false positives here I can",
    "start": "872720",
    "end": "874370"
  },
  {
    "text": "mix and match the first half of one",
    "start": "874370",
    "end": "876230"
  },
  {
    "text": "string with the second half of a",
    "start": "876230",
    "end": "877370"
  },
  {
    "text": "different string and now we might think",
    "start": "877370",
    "end": "880040"
  },
  {
    "text": "there's a match when there's actually",
    "start": "880040",
    "end": "881180"
  },
  {
    "text": "not",
    "start": "881180",
    "end": "882040"
  },
  {
    "text": "it turns out that false positives is",
    "start": "882040",
    "end": "883839"
  },
  {
    "text": "actually a real problem we need to deal",
    "start": "883839",
    "end": "885130"
  },
  {
    "text": "with I don't have as much time to talk",
    "start": "885130",
    "end": "886899"
  },
  {
    "text": "about the tricks there but basically the",
    "start": "886899",
    "end": "889209"
  },
  {
    "text": "summary is instead of representing this",
    "start": "889209",
    "end": "890649"
  },
  {
    "text": "as a boolean array we can represent this",
    "start": "890649",
    "end": "892690"
  },
  {
    "text": "as an integer array and that integer is",
    "start": "892690",
    "end": "895149"
  },
  {
    "text": "now the Edit distance between that half",
    "start": "895149",
    "end": "898329"
  },
  {
    "text": "of the guy to the closest guide in our",
    "start": "898329",
    "end": "899920"
  },
  {
    "text": "original set so instead of checking if",
    "start": "899920",
    "end": "902079"
  },
  {
    "text": "both boolean's were true we can add up",
    "start": "902079",
    "end": "903910"
  },
  {
    "text": "the two added distances if those are",
    "start": "903910",
    "end": "905860"
  },
  {
    "text": "greater than four we know this is not a",
    "start": "905860",
    "end": "907569"
  },
  {
    "text": "match and we actually avoided 50x of our",
    "start": "907569",
    "end": "910029"
  },
  {
    "text": "false positives and got this algorithm",
    "start": "910029",
    "end": "911829"
  },
  {
    "text": "all the way down to eight seconds this",
    "start": "911829",
    "end": "913180"
  },
  {
    "text": "is a hundred X improvement from where we",
    "start": "913180",
    "end": "914589"
  },
  {
    "text": "were before",
    "start": "914589",
    "end": "915190"
  },
  {
    "text": "now this episodes is somewhat incredible",
    "start": "915190",
    "end": "918040"
  },
  {
    "text": "we're iterating over three billion",
    "start": "918040",
    "end": "919540"
  },
  {
    "text": "character string searching for 200",
    "start": "919540",
    "end": "921670"
  },
  {
    "text": "guides and we can compute the C really",
    "start": "921670",
    "end": "923470"
  },
  {
    "text": "in eight seconds with just two megabytes",
    "start": "923470",
    "end": "925899"
  },
  {
    "text": "of memory and this is just our iterative",
    "start": "925899",
    "end": "928240"
  },
  {
    "text": "solution and we can paralyze this if we",
    "start": "928240",
    "end": "931060"
  },
  {
    "text": "want to we can split up a genome into",
    "start": "931060",
    "end": "932560"
  },
  {
    "text": "two or four and make this four seconds",
    "start": "932560",
    "end": "934660"
  },
  {
    "text": "two seconds we can get it all the way",
    "start": "934660",
    "end": "935709"
  },
  {
    "text": "down to one second now this is the",
    "start": "935709",
    "end": "939310"
  },
  {
    "text": "iterative solution can we do better with",
    "start": "939310",
    "end": "940930"
  },
  {
    "text": "our indexing solution well we know that",
    "start": "940930",
    "end": "944290"
  },
  {
    "text": "each genome is gonna be around three",
    "start": "944290",
    "end": "945639"
  },
  {
    "text": "billion bases you want to be able to",
    "start": "945639",
    "end": "947800"
  },
  {
    "text": "support around a thousand genomes if",
    "start": "947800",
    "end": "949300"
  },
  {
    "text": "we're not just dealing with human",
    "start": "949300",
    "end": "950199"
  },
  {
    "text": "genomes we're dealing with plant genomes",
    "start": "950199",
    "end": "951639"
  },
  {
    "text": "bacterial genomes animal genomes so this",
    "start": "951639",
    "end": "953980"
  },
  {
    "text": "is gonna be just three terabytes at the",
    "start": "953980",
    "end": "955360"
  },
  {
    "text": "start and we played around with some",
    "start": "955360",
    "end": "957970"
  },
  {
    "text": "simple indexing solutions that we could",
    "start": "957970",
    "end": "959620"
  },
  {
    "text": "use and anything even basic required at",
    "start": "959620",
    "end": "962889"
  },
  {
    "text": "least 30 terabytes of space we actually",
    "start": "962889",
    "end": "965470"
  },
  {
    "text": "weren't able to come up with any",
    "start": "965470",
    "end": "967060"
  },
  {
    "text": "indexing solution that was faster than",
    "start": "967060",
    "end": "968889"
  },
  {
    "text": "our iterative solution and used less",
    "start": "968889",
    "end": "970750"
  },
  {
    "text": "than several petabytes of space and even",
    "start": "970750",
    "end": "974290"
  },
  {
    "text": "the 30 terabytes the cost was gonna be",
    "start": "974290",
    "end": "976449"
  },
  {
    "text": "somewhat of a factor here so let's talk",
    "start": "976449",
    "end": "978519"
  },
  {
    "text": "about cost a little bit",
    "start": "978519",
    "end": "980300"
  },
  {
    "start": "980000",
    "end": "1060000"
  },
  {
    "text": "so before I get into cost let's figure",
    "start": "980300",
    "end": "982460"
  },
  {
    "text": "out the infrastructure so we can",
    "start": "982460",
    "end": "983510"
  },
  {
    "text": "actually analyze that for our iterative",
    "start": "983510",
    "end": "985640"
  },
  {
    "text": "solution it's pretty simple nothing",
    "start": "985640",
    "end": "987680"
  },
  {
    "text": "nothing crazy here we have a tiles come",
    "start": "987680",
    "end": "989870"
  },
  {
    "text": "in a genome and some guides we put it",
    "start": "989870",
    "end": "991580"
  },
  {
    "text": "into an ec2 instance that instance",
    "start": "991580",
    "end": "993740"
  },
  {
    "text": "decides how many times you want to",
    "start": "993740",
    "end": "994940"
  },
  {
    "text": "paralyze this we know it's gonna take 8",
    "start": "994940",
    "end": "996680"
  },
  {
    "text": "seconds so maybe we paralyze it eight",
    "start": "996680",
    "end": "998420"
  },
  {
    "text": "times so we send those two different",
    "start": "998420",
    "end": "1000100"
  },
  {
    "text": "worker instances who process those",
    "start": "1000100",
    "end": "1002800"
  },
  {
    "text": "particular regions of a genome they",
    "start": "1002800",
    "end": "1004390"
  },
  {
    "text": "download that that part of the genome",
    "start": "1004390",
    "end": "1006250"
  },
  {
    "text": "from s3 they do an analysis they return",
    "start": "1006250",
    "end": "1008710"
  },
  {
    "text": "the response we now have a solution that",
    "start": "1008710",
    "end": "1011410"
  },
  {
    "text": "works and we actually use this",
    "start": "1011410",
    "end": "1012340"
  },
  {
    "text": "architecture for about a year and this",
    "start": "1012340",
    "end": "1015220"
  },
  {
    "text": "ran in and under a second but we notice",
    "start": "1015220",
    "end": "1018340"
  },
  {
    "text": "some problems with cost and this is",
    "start": "1018340",
    "end": "1020170"
  },
  {
    "text": "nothing different than most web",
    "start": "1020170",
    "end": "1021820"
  },
  {
    "text": "applications where we were paying for",
    "start": "1021820",
    "end": "1023860"
  },
  {
    "text": "time for these ec2 instances when we",
    "start": "1023860",
    "end": "1025720"
  },
  {
    "text": "weren't really using them nights",
    "start": "1025720",
    "end": "1026890"
  },
  {
    "text": "weekends during the day so what's the",
    "start": "1026890",
    "end": "1030760"
  },
  {
    "text": "common solution for this well let's",
    "start": "1030760",
    "end": "1032410"
  },
  {
    "text": "throw an auto scaling group on these",
    "start": "1032410",
    "end": "1033970"
  },
  {
    "text": "worker instances without all the scaling",
    "start": "1033970",
    "end": "1036670"
  },
  {
    "text": "groups this ends up costing maybe 30k a",
    "start": "1036670",
    "end": "1038949"
  },
  {
    "text": "year we only need around tenants this is",
    "start": "1038950",
    "end": "1040600"
  },
  {
    "text": "just abort what we need without a",
    "start": "1040600",
    "end": "1042520"
  },
  {
    "text": "scaling groups this cuts down in half to",
    "start": "1042520",
    "end": "1044380"
  },
  {
    "text": "around 15k perfect scale is really hard",
    "start": "1044380",
    "end": "1047709"
  },
  {
    "text": "here we can solve this problem and on",
    "start": "1047709",
    "end": "1050320"
  },
  {
    "text": "nights and weekends but during the day",
    "start": "1050320",
    "end": "1051840"
  },
  {
    "text": "54 seconds out of every minute might not",
    "start": "1051840",
    "end": "1054730"
  },
  {
    "text": "be we might not be doing a CRISPR",
    "start": "1054730",
    "end": "1056200"
  },
  {
    "text": "analysis but we're still gonna be paying",
    "start": "1056200",
    "end": "1057460"
  },
  {
    "text": "for that time so as I mentioned at the",
    "start": "1057460",
    "end": "1061510"
  },
  {
    "text": "beginning of the talk instead of using",
    "start": "1061510",
    "end": "1062950"
  },
  {
    "text": "auto scaling groups what if we replaced",
    "start": "1062950",
    "end": "1064870"
  },
  {
    "text": "these workers with lambda functions I",
    "start": "1064870",
    "end": "1066790"
  },
  {
    "text": "can define a function that just runs our",
    "start": "1066790",
    "end": "1069280"
  },
  {
    "text": "algorithm and takes a part of the genome",
    "start": "1069280",
    "end": "1071140"
  },
  {
    "text": "to analyze downloads that from s3 ones",
    "start": "1071140",
    "end": "1073960"
  },
  {
    "text": "the algorithm returns the response this",
    "start": "1073960",
    "end": "1076330"
  },
  {
    "text": "is basically just a drop-in replacement",
    "start": "1076330",
    "end": "1077440"
  },
  {
    "text": "for what we're using ec2 before but it",
    "start": "1077440",
    "end": "1080140"
  },
  {
    "text": "actually solves all of our auto scaling",
    "start": "1080140",
    "end": "1081580"
  },
  {
    "text": "problems we know we no longer need to",
    "start": "1081580",
    "end": "1083590"
  },
  {
    "text": "pay for time that we're not really using",
    "start": "1083590",
    "end": "1085680"
  },
  {
    "text": "we don't need to maintain an ec2 fleet",
    "start": "1085680",
    "end": "1088360"
  },
  {
    "text": "anymore and this is gonna end up costing",
    "start": "1088360",
    "end": "1090910"
  },
  {
    "text": "a lot less money for us let's take a",
    "start": "1090910",
    "end": "1092770"
  },
  {
    "text": "look at the actual cost here so I",
    "start": "1092770",
    "end": "1094840"
  },
  {
    "text": "mentioned we couldn't come up with an",
    "start": "1094840",
    "end": "1096100"
  },
  {
    "text": "indexing solution but let's pretend that",
    "start": "1096100",
    "end": "1097900"
  },
  {
    "text": "we did let's pretend that we actually",
    "start": "1097900",
    "end": "1099460"
  },
  {
    "text": "missed a solution here and there was",
    "start": "1099460",
    "end": "1101170"
  },
  {
    "text": "some indexing solution that is so fast",
    "start": "1101170",
    "end": "1103480"
  },
  {
    "text": "that we wouldn't need to pay for compute",
    "start": "1103480",
    "end": "1104830"
  },
  {
    "text": "at all for so we're just paying for",
    "start": "1104830",
    "end": "1106120"
  },
  {
    "text": "storage well at 30 terabytes",
    "start": "1106120",
    "end": "1109850"
  },
  {
    "text": "at 30 terabytes this is gonna come in at",
    "start": "1109850",
    "end": "1112290"
  },
  {
    "text": "around 100 K per year",
    "start": "1112290",
    "end": "1114080"
  },
  {
    "text": "that's pretty expensive and we need to",
    "start": "1114080",
    "end": "1117030"
  },
  {
    "text": "store that in some queryable format",
    "start": "1117030",
    "end": "1118320"
  },
  {
    "text": "maybe Dinamo are already s or something",
    "start": "1118320",
    "end": "1119940"
  },
  {
    "text": "but that's pretty expensive so let's",
    "start": "1119940",
    "end": "1121980"
  },
  {
    "text": "compare that to our easy to solution",
    "start": "1121980",
    "end": "1123330"
  },
  {
    "text": "here which was only costing 15k per year",
    "start": "1123330",
    "end": "1125280"
  },
  {
    "text": "that we were mainly paying for a compute",
    "start": "1125280",
    "end": "1128060"
  },
  {
    "text": "but now when we switch to lambda we cut",
    "start": "1128060",
    "end": "1130800"
  },
  {
    "text": "that by a factor of five because we're",
    "start": "1130800",
    "end": "1132900"
  },
  {
    "text": "only paying for the time that we're",
    "start": "1132900",
    "end": "1133980"
  },
  {
    "text": "using and now we're just paying 3k per",
    "start": "1133980",
    "end": "1136170"
  },
  {
    "text": "year to run a million searches of",
    "start": "1136170",
    "end": "1137430"
  },
  {
    "text": "crisper a month even better we don't",
    "start": "1137430",
    "end": "1141300"
  },
  {
    "text": "need to manage an ec2 fleet so not only",
    "start": "1141300",
    "end": "1142920"
  },
  {
    "text": "is the cheaper it's also less effort",
    "start": "1142920",
    "end": "1144990"
  },
  {
    "text": "from our developers so going back to our",
    "start": "1144990",
    "end": "1147600"
  },
  {
    "text": "original goals we now have an algorithm",
    "start": "1147600",
    "end": "1149550"
  },
  {
    "text": "that's eight seconds we can paralyze to",
    "start": "1149550",
    "end": "1152130"
  },
  {
    "text": "basically as fast as we need is it",
    "start": "1152130",
    "end": "1154830"
  },
  {
    "text": "scalable",
    "start": "1154830",
    "end": "1155340"
  },
  {
    "text": "well we're using lambda it's about a",
    "start": "1155340",
    "end": "1157200"
  },
  {
    "text": "scalable as we can get and lastly it's",
    "start": "1157200",
    "end": "1160230"
  },
  {
    "text": "cheap",
    "start": "1160230",
    "end": "1160830"
  },
  {
    "text": "we're playing 3k a year it's at the",
    "start": "1160830",
    "end": "1162450"
  },
  {
    "text": "point where it doesn't make sense to",
    "start": "1162450",
    "end": "1164490"
  },
  {
    "text": "invest any more time trying to make it",
    "start": "1164490",
    "end": "1165870"
  },
  {
    "text": "faster because we're not really paying",
    "start": "1165870",
    "end": "1167850"
  },
  {
    "text": "any any money and we can already make it",
    "start": "1167850",
    "end": "1169530"
  },
  {
    "text": "as fast as we want so CRISPR is just one",
    "start": "1169530",
    "end": "1173040"
  },
  {
    "text": "example of technology that scientists",
    "start": "1173040",
    "end": "1175980"
  },
  {
    "text": "are using today but we felt that this",
    "start": "1175980",
    "end": "1178320"
  },
  {
    "text": "was an opportunity for us to use our",
    "start": "1178320",
    "end": "1179730"
  },
  {
    "text": "software skills and use technology to",
    "start": "1179730",
    "end": "1181680"
  },
  {
    "text": "help move science forward but we're also",
    "start": "1181680",
    "end": "1183960"
  },
  {
    "text": "really excited about all the new",
    "start": "1183960",
    "end": "1185460"
  },
  {
    "text": "technologies that are coming out in",
    "start": "1185460",
    "end": "1186690"
  },
  {
    "text": "science from gene therapy to cell",
    "start": "1186690",
    "end": "1188460"
  },
  {
    "text": "therapy antibody engineering synthetic",
    "start": "1188460",
    "end": "1190650"
  },
  {
    "text": "biology all these areas have a lot of",
    "start": "1190650",
    "end": "1192600"
  },
  {
    "text": "innovation going on in them and we are",
    "start": "1192600",
    "end": "1195570"
  },
  {
    "text": "really excited to help we're excited to",
    "start": "1195570",
    "end": "1197520"
  },
  {
    "text": "figure out how we can use our technology",
    "start": "1197520",
    "end": "1199520"
  },
  {
    "text": "to make these move a little bit faster",
    "start": "1199520",
    "end": "1201780"
  },
  {
    "text": "to help them draw conclusions faster to",
    "start": "1201780",
    "end": "1204690"
  },
  {
    "text": "help them go to market with their drugs",
    "start": "1204690",
    "end": "1206070"
  },
  {
    "text": "to cure cancer and here Huntington's",
    "start": "1206070",
    "end": "1207690"
  },
  {
    "text": "disease a little bit faster let me know",
    "start": "1207690",
    "end": "1210600"
  },
  {
    "text": "if you have any questions I'm happy to",
    "start": "1210600",
    "end": "1212070"
  },
  {
    "text": "talk about any of this or if you're",
    "start": "1212070",
    "end": "1213450"
  },
  {
    "text": "interested in working on any of these",
    "start": "1213450",
    "end": "1214950"
  },
  {
    "text": "problems we're really excited about the",
    "start": "1214950",
    "end": "1217050"
  },
  {
    "text": "future of biology and our mission is to",
    "start": "1217050",
    "end": "1218820"
  },
  {
    "text": "accelerate the pace of this research",
    "start": "1218820",
    "end": "1220230"
  },
  {
    "text": "over the next 10 years thank you",
    "start": "1220230",
    "end": "1223860"
  },
  {
    "text": "[Applause]",
    "start": "1223860",
    "end": "1227210"
  }
]