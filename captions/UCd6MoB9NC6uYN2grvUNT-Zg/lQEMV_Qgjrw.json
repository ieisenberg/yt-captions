[
  {
    "start": "0",
    "end": "178000"
  },
  {
    "text": "hi everybody my name is Gerren Brisbane and as we are in the last section I know",
    "start": "2060",
    "end": "10349"
  },
  {
    "text": "that the vanish off - Lita saga English Mita",
    "start": "10349",
    "end": "15360"
  },
  {
    "text": "so I'm gonna stick with English instead of my terrible German and thank you for",
    "start": "15360",
    "end": "20430"
  },
  {
    "text": "living with my my failure to speak your language as I visit your country so in",
    "start": "20430",
    "end": "26040"
  },
  {
    "text": "this section we're gonna talk about relational databases now this is",
    "start": "26040",
    "end": "31500"
  },
  {
    "text": "supposed to be an advanced session so I'm not gonna explain what a table or a row where a column is everybody knows",
    "start": "31500",
    "end": "36840"
  },
  {
    "text": "what that means right yes you've heard of a table this will be a really tough",
    "start": "36840",
    "end": "43380"
  },
  {
    "text": "section on you if you don't know what a table is okay good so everyone here",
    "start": "43380",
    "end": "49170"
  },
  {
    "text": "using some relational database right now okay which ones hello let's do a common",
    "start": "49170",
    "end": "55500"
  },
  {
    "text": "ones so who's using Oracle okay how about Microsoft sequel server",
    "start": "55500",
    "end": "61850"
  },
  {
    "text": "okay DB - one lonely db2 user okay how",
    "start": "61850",
    "end": "69150"
  },
  {
    "text": "about Postgres there we go my seat okay",
    "start": "69150",
    "end": "74490"
  },
  {
    "text": "something I didn't name yell it out what are using dynamo DB is not a relational",
    "start": "74490",
    "end": "83130"
  },
  {
    "text": "database ámoreá DB absolutely you can argue whether or not that's a variant of",
    "start": "83130",
    "end": "88860"
  },
  {
    "text": "my sequel right but which today it is but I think over the next few years they're going to diverge we'll talk a",
    "start": "88860",
    "end": "94680"
  },
  {
    "text": "bit about that okay so relational databases are popular for a number of",
    "start": "94680",
    "end": "100619"
  },
  {
    "text": "reasons for me personally 21 years ago when I was a junior architect at IBM I",
    "start": "100619",
    "end": "108869"
  },
  {
    "text": "got to work with dr. Ted cod who's a person actually invented relational databases and my first question for him",
    "start": "108869",
    "end": "117270"
  },
  {
    "text": "is why did you call this normalization it's a very strange word and I did not",
    "start": "117270",
    "end": "122640"
  },
  {
    "text": "expect the answer he gave me which is when he was inventing the relational database what was in the news was",
    "start": "122640",
    "end": "129690"
  },
  {
    "text": "President Nixon normalizing relationships with China so he said if America and China can",
    "start": "129690",
    "end": "135420"
  },
  {
    "text": "normalize the data can normalize and that's why we have normalization and de normalization and the relational",
    "start": "135420",
    "end": "141060"
  },
  {
    "text": "databases so there's good and bad things about relational databases later today",
    "start": "141060",
    "end": "147330"
  },
  {
    "text": "we'll talk about the non-relational Revolution but you know there's argument that the best thing about a relational",
    "start": "147330",
    "end": "153209"
  },
  {
    "text": "database is also the worst thing about a relational database and that's the joint right joins are great because they let",
    "start": "153209",
    "end": "159930"
  },
  {
    "text": "you do flexible things joints are horrible because they add a lot of complexity so is a joint a good thing or",
    "start": "159930",
    "end": "166769"
  },
  {
    "text": "a bad thing yes it depends all right those who were here earlier know that if",
    "start": "166769",
    "end": "173700"
  },
  {
    "text": "you're an architect you can answer any question with it depends and usually be right so in the Amazon world when we",
    "start": "173700",
    "end": "181890"
  },
  {
    "text": "started doing this it gets back to kind of the roots of AWS there is a rumor",
    "start": "181890",
    "end": "187650"
  },
  {
    "text": "that AWS was created because we had extra compute capacity and we just wanted to find a way to sell it",
    "start": "187650",
    "end": "192750"
  },
  {
    "text": "not true where AWS came from was when Amazon started growing in a really big",
    "start": "192750",
    "end": "199079"
  },
  {
    "text": "pace around 2003 2004 2005 it was really",
    "start": "199079",
    "end": "204480"
  },
  {
    "text": "hard for us to get hardware and systems and equipment to match our growth the",
    "start": "204480",
    "end": "211560"
  },
  {
    "text": "vendors were not able to keep up with our pace and they weren't able to give us what we needed quickly enough we",
    "start": "211560",
    "end": "217980"
  },
  {
    "text": "ended up having to create a lot of our own processes and procedures and we were thinking hmmm well maybe we can make it",
    "start": "217980",
    "end": "224400"
  },
  {
    "text": "easier for the next people who want to grow really fast so web services developed deliberately and it was",
    "start": "224400",
    "end": "231090"
  },
  {
    "text": "developed in order to get rid of what we call undifferentiated heavy lifting the",
    "start": "231090",
    "end": "236489"
  },
  {
    "text": "things that are a lot of work but really are every company has to do that don't really make you different than anyone",
    "start": "236489",
    "end": "241590"
  },
  {
    "text": "else so we started putting out services that did that here's a good question is",
    "start": "241590",
    "end": "247799"
  },
  {
    "text": "anyone know the very first AWS service sqs yes why did sqs come out before ec2 because",
    "start": "247799",
    "end": "255930"
  },
  {
    "text": "that team finished on time and ec2 was late so when we first launched sqs the whole industry said why is this",
    "start": "255930",
    "end": "261900"
  },
  {
    "text": "bookstore selling a queueing on demand that makes no sense but then we had ec2 and then we",
    "start": "261900",
    "end": "268370"
  },
  {
    "text": "had ask three unit started making sense and then we started getting questions around in a base and people said okay",
    "start": "268370",
    "end": "274460"
  },
  {
    "text": "what is the undifferentiated heavy lifting I mean there's some things that are very specific to your database like",
    "start": "274460",
    "end": "280370"
  },
  {
    "text": "schema and query but what is the stuff that you spend a lot of time and effort on that you just have to do well back up",
    "start": "280370",
    "end": "288730"
  },
  {
    "text": "right and restore but especially back up and high availability high availability",
    "start": "288730",
    "end": "297200"
  },
  {
    "text": "is hard anybody here been a DBA ever done high availability right I mean what",
    "start": "297200",
    "end": "302690"
  },
  {
    "text": "makes it hard is that there's a thousand little details and what happens if you get 999 details right and you get one",
    "start": "302690",
    "end": "308990"
  },
  {
    "text": "wrong doesn't work right because oh I forgot to upgrade the drive the the new",
    "start": "308990",
    "end": "315020"
  },
  {
    "text": "the the new driver on the failover side and then when it fails over it doesn't fail over another good piece of that is",
    "start": "315020",
    "end": "323120"
  },
  {
    "text": "patching and upgrading particularly the low level system so you know keeping your Linux version or your Windows",
    "start": "323120",
    "end": "328640"
  },
  {
    "text": "version whatever up to speed these are all the things that don't really add value but are necessary to make it work so our customers came to us and said can",
    "start": "328640",
    "end": "336710"
  },
  {
    "text": "you do that for us in the database get rid of that that low level stuff so we originally started doing that with my",
    "start": "336710",
    "end": "343310"
  },
  {
    "text": "sequel because in the early days of Amazon Web Services our single largest",
    "start": "343310",
    "end": "348500"
  },
  {
    "text": "customer Amazon had a lot of my sequel and many of our other customers were",
    "start": "348500",
    "end": "354560"
  },
  {
    "text": "startups so like rocket in Germany or Airbnb or Netflix and such and they wanted not my sequel so we introduced",
    "start": "354560",
    "end": "361070"
  },
  {
    "text": "this my sequel relational database service which has all of those things we just talked about it does installation",
    "start": "361070",
    "end": "367700"
  },
  {
    "text": "it does patching it does upgrades it does high availability it does backup and recovery so since we've introduced",
    "start": "367700",
    "end": "374450"
  },
  {
    "text": "my sequel we introduced some more entrants we introduced Oracle we introduced Microsoft sequel server we",
    "start": "374450",
    "end": "379669"
  },
  {
    "text": "introduced Postgres most recently Marya DB so we have these five different engines that we can run to automate and",
    "start": "379669",
    "end": "387860"
  },
  {
    "text": "make scalability easy now we also since then have added aurora but a roar is",
    "start": "387860",
    "end": "393350"
  },
  {
    "text": "kind of special so we'll get its own conversation a little later so",
    "start": "393350",
    "end": "399080"
  },
  {
    "start": "398000",
    "end": "474000"
  },
  {
    "text": "one of the things that we're trying to do here is eliminate the need for",
    "start": "399080",
    "end": "407169"
  },
  {
    "text": "specialists if you do DevOps and you want to have small teams that own and",
    "start": "407169",
    "end": "413479"
  },
  {
    "text": "manage services you can't have three people on that team having to do nothing but database backups all day it's not",
    "start": "413479",
    "end": "420259"
  },
  {
    "text": "going to be effective so these kind of mounted services let you focus on what's important this has been critical to",
    "start": "420259",
    "end": "428240"
  },
  {
    "text": "Amazon's use of micro services in many of our and many of our customers so you'd get more leverage from your team",
    "start": "428240",
    "end": "434569"
  },
  {
    "text": "you focus on the things that matter one that really shocked me when I learned this is is I recently visited Airbnb in",
    "start": "434569",
    "end": "441289"
  },
  {
    "text": "San Francisco they are currently running nine hundred and forty databases no DBAs",
    "start": "441289",
    "end": "448719"
  },
  {
    "text": "they have a small service team whose job it is is to advise other service teams on schema optimization and query",
    "start": "448719",
    "end": "454789"
  },
  {
    "text": "advancement but each service team can handle their own stuff because they",
    "start": "454789",
    "end": "459860"
  },
  {
    "text": "don't need to do the kind of traditional DBA work so yeah I've heard does this mean Amazon once and put DBS out of",
    "start": "459860",
    "end": "465770"
  },
  {
    "text": "business no we want to quit boring work at a business we want DBAs to be able to do data engineering and data analysis",
    "start": "465770",
    "end": "472310"
  },
  {
    "text": "and things that had a lot of value so what do I have in here high availability",
    "start": "472310",
    "end": "479569"
  },
  {
    "start": "474000",
    "end": "523000"
  },
  {
    "text": "cross region replication and then the other piece this is something you've really found interesting even a start-up",
    "start": "479569",
    "end": "488659"
  },
  {
    "text": "of two people in an office now I have access to the same kind of database capability that it used to be only the",
    "start": "488659",
    "end": "495620"
  },
  {
    "text": "largest organizations have I'm starting to watch this change the world it's not",
    "start": "495620",
    "end": "501770"
  },
  {
    "text": "that long ago that if you wanted to do a start-up you had to go to Berlin or",
    "start": "501770",
    "end": "506990"
  },
  {
    "text": "London or San Francisco or New York or someplace like that it's not true anymore we're starting to see a lot more",
    "start": "506990",
    "end": "512328"
  },
  {
    "text": "startups in places like Darmstadt in hamburg and you know middle of Iowa in",
    "start": "512329",
    "end": "518390"
  },
  {
    "text": "the US and other places that historically I couldn't do it but now I can because of the cloud so which engine",
    "start": "518390",
    "end": "524029"
  },
  {
    "start": "523000",
    "end": "596000"
  },
  {
    "text": "should use well price is the same no matter which one you use for Amazon but",
    "start": "524029",
    "end": "531529"
  },
  {
    "text": "if you use one of the commercial energy you get to give extra money to either Oracle or Microsoft they all have their advantages and",
    "start": "531529",
    "end": "538380"
  },
  {
    "text": "disadvantages but the truth is there's not huge differences between them it's a",
    "start": "538380",
    "end": "545339"
  },
  {
    "text": "lot of small differences Oracle is a hugely capable database when I'm running",
    "start": "545339",
    "end": "551130"
  },
  {
    "text": "Oracle on RDS you have two choices you can buy your own Oracle license and",
    "start": "551130",
    "end": "556380"
  },
  {
    "text": "apply it into the RDS environment they call that bring your own license or you can do what's called license included",
    "start": "556380",
    "end": "562140"
  },
  {
    "text": "which means you pay by the hour and you'll be able to see for each instance size here's how much for being Amazon",
    "start": "562140",
    "end": "567269"
  },
  {
    "text": "and here's much for being Oracle and for license included so we're bringing your own license you could use pretty much",
    "start": "567269",
    "end": "573149"
  },
  {
    "text": "any Oracle license for license included we don't support Enterprise Edition but you can do the standard edition or sp1",
    "start": "573149",
    "end": "580170"
  },
  {
    "text": "or SC two versions of Oracle Microsoft has chosen to only work with us with",
    "start": "580170",
    "end": "585329"
  },
  {
    "text": "license included so again I have many different versions of Microsoft sequel server and I can again pay each by the",
    "start": "585329",
    "end": "592800"
  },
  {
    "text": "hour excuse me certain amount Microsoft certain amount of Amazon the open source",
    "start": "592800",
    "end": "600690"
  },
  {
    "text": "engines there's a little bigger differentiation I think so my sequel was designed about 20 years ago to be a",
    "start": "600690",
    "end": "607199"
  },
  {
    "text": "lightweight database for the Internet it's designed to be easy to manage it's",
    "start": "607199",
    "end": "612480"
  },
  {
    "text": "designed to not do some of the things the other databases do it deliberately has a weak stored procedure language",
    "start": "612480",
    "end": "618529"
  },
  {
    "text": "it's designed to just be a datastore and and and in the you know in the internet",
    "start": "618529",
    "end": "624390"
  },
  {
    "text": "world you should be putting your logic not in the database but outside the database in the application layer it is",
    "start": "624390",
    "end": "632100"
  },
  {
    "text": "very scalable and we have a lot of people running very large environments on my sequel now my sequel took a kind",
    "start": "632100",
    "end": "638910"
  },
  {
    "text": "of interesting turn because it was originally created by Monty Whedon else",
    "start": "638910",
    "end": "643920"
  },
  {
    "text": "and a team of developers and they had a company that owned the the copyright",
    "start": "643920",
    "end": "649920"
  },
  {
    "text": "it's called my sequel link and my sequel ain't got purchased by Sun Microsystems",
    "start": "649920",
    "end": "655310"
  },
  {
    "text": "and they looked what happening at Sun Microsystems I said you know this is not quite the direction we wanted to go and",
    "start": "655310",
    "end": "661819"
  },
  {
    "text": "so they the team pretty much left Sun Microsystems shortly after they left sun microsystems",
    "start": "661819",
    "end": "668050"
  },
  {
    "text": "sun was purchased by oracle so my sequel is now actually property of oracle and",
    "start": "668050",
    "end": "673390"
  },
  {
    "text": "be honest with you oracle has not done that much to advance it since they purchased it now recently oracle has",
    "start": "673390",
    "end": "679150"
  },
  {
    "text": "announced that they're going to be putting a lot of new features in so the current version of my sequel is 5.7",
    "start": "679150",
    "end": "685150"
  },
  {
    "text": "oracle has announced that they will soon be shipping my sequel version 8 because",
    "start": "685150",
    "end": "690400"
  },
  {
    "text": "that's how oracle does math right 5 6 5 7 & 8 ok but my sequel 8 does have some",
    "start": "690400",
    "end": "697060"
  },
  {
    "text": "interesting new functionality that they promised meanwhile by the way the reason was called my sequel is Monty's first",
    "start": "697060",
    "end": "703360"
  },
  {
    "start": "699000",
    "end": "979000"
  },
  {
    "text": "daughter's name is my so when they formed a new company guess what his",
    "start": "703360",
    "end": "710260"
  },
  {
    "text": "second daughter's name is Maria as Marty's foot out I only have two",
    "start": "710260",
    "end": "715420"
  },
  {
    "text": "daughters I can't do this again and when they founded Maria DB they did the same",
    "start": "715420",
    "end": "720490"
  },
  {
    "text": "thing that Postgres had done earlier neither post Krishna Maria DB are owned by companies they're owned by foundations so nobody can come and buy",
    "start": "720490",
    "end": "728320"
  },
  {
    "text": "them and take them off the market or crush them way things have happened so the Maria DB foundation owns Maria",
    "start": "728320",
    "end": "734860"
  },
  {
    "text": "there's also Maria DB Inc a company that makes a living providing support and and development for Maria DB and they're a",
    "start": "734860",
    "end": "741760"
  },
  {
    "text": "great AWS partner so Maria is you could think of it as a fork from isequal it's",
    "start": "741760",
    "end": "748690"
  },
  {
    "text": "had a lot of innovation last three years and added all sorts of interesting things like GT IDs in order to make",
    "start": "748690",
    "end": "755230"
  },
  {
    "text": "transactions independent or in recovery operations it recovers from failure much faster than my sequel it has a client",
    "start": "755230",
    "end": "763150"
  },
  {
    "text": "that's much faster than my sequel is fully compatible with my sequel so if you're using my sequel you might",
    "start": "763150",
    "end": "768850"
  },
  {
    "text": "consider using the Maria DB client in your code instead of the my sequel client they work together nicely we see",
    "start": "768850",
    "end": "774880"
  },
  {
    "text": "a lot of people using my sequel database Maria DB client then there's Postgres so",
    "start": "774880",
    "end": "781210"
  },
  {
    "text": "Postgres was a group of developers who are working on a commercial project called ingress which got sold to ca and",
    "start": "781210",
    "end": "787120"
  },
  {
    "text": "pretty much shut down so they went and made their own version of it which is Postgres get it this is about as good as",
    "start": "787120",
    "end": "794560"
  },
  {
    "text": "the jokes are going to get in the in the linux world so so Postgres is",
    "start": "794560",
    "end": "799649"
  },
  {
    "text": "oh that's from the mid-1980s and Mike Stonebreaker and the team on that are pretty much the same people now who were",
    "start": "799649",
    "end": "806759"
  },
  {
    "text": "writing at 30 years ago so you actually have a very mature team who have been developing it over time because it's a",
    "start": "806759",
    "end": "812490"
  },
  {
    "text": "mid-80s database like Oracle like Microsoft well Microsoft's really based on Sybase which also comes to the",
    "start": "812490",
    "end": "818970"
  },
  {
    "text": "mid-80s it's similar semantically so one of the things we see a lot is when",
    "start": "818970",
    "end": "824610"
  },
  {
    "text": "people are using Oracle or Microsoft or db2 and they want to move to open source the one that makes the most sense to",
    "start": "824610",
    "end": "831029"
  },
  {
    "text": "move to is Postgres because it's the most similar in terms of procedural language and stored procedures and",
    "start": "831029",
    "end": "837379"
  },
  {
    "text": "functions in the way that it operates so one thing I'm not going to talk a lot about today but I'll mention on the side",
    "start": "837379",
    "end": "843660"
  },
  {
    "text": "is AWS database migration service so that's the service we have that lets you move one database to another now you can",
    "start": "843660",
    "end": "851970"
  },
  {
    "text": "use that just to do major version upgrades without taking downtime so for",
    "start": "851970",
    "end": "857639"
  },
  {
    "text": "example if you're on my sequel 5.6 we don't recommend upgrading in place to 5.7 because that'll probably break your",
    "start": "857639",
    "end": "864300"
  },
  {
    "text": "code so we say take the 5.6 use database migration service to synchronize it to a",
    "start": "864300",
    "end": "870480"
  },
  {
    "text": "5.7 copy let it automatically keep those two in sync so you can test the new one and then once you're sure that your code",
    "start": "870480",
    "end": "877439"
  },
  {
    "text": "is has any changes it needs and you can turn off the old one okay great well of",
    "start": "877439",
    "end": "882569"
  },
  {
    "text": "course a lot of our customers came to us and said okay great but what if instead of going from my sequel five six two",
    "start": "882569",
    "end": "888899"
  },
  {
    "text": "five seven I want to go from say Oracle 10 to 11 all right we support that all",
    "start": "888899",
    "end": "894420"
  },
  {
    "text": "right what if I want to go from work 11 to Postgres don't we support that too so in the database migration service it can",
    "start": "894420",
    "end": "900870"
  },
  {
    "text": "either be the same engine or it can be different engines and we support a whole bunch of sources and targets so the",
    "start": "900870",
    "end": "906720"
  },
  {
    "text": "sources include Oracle and Sybase and Microsoft in db2 and and green",
    "start": "906720",
    "end": "913980"
  },
  {
    "text": "plum and cherry data and a whole bunch of others and the targets as you would",
    "start": "913980",
    "end": "920339"
  },
  {
    "text": "expect include various sort of things you can do with the club I would also point out that these go both ways so if",
    "start": "920339",
    "end": "926160"
  },
  {
    "text": "you are currently running say Postgres on the cloud you say I don't like this cloud thing I think it's a passing fad I",
    "start": "926160",
    "end": "932189"
  },
  {
    "text": "want to move all my stuff from the clouds Oracle on my own data center you can use our tools to do",
    "start": "932189",
    "end": "937259"
  },
  {
    "text": "that so occasionally had people say why would you make it easy for people to move off of Amazon and our answer is we",
    "start": "937259",
    "end": "945809"
  },
  {
    "text": "are not trying to lock you in we're trying to make sure you get what's right for your organization and if the right",
    "start": "945809",
    "end": "952290"
  },
  {
    "text": "thing for you to do is move off of Amazon that's right gonna move off of Amazon and we'll help you get there cuz we figure you'll come back when we're",
    "start": "952290",
    "end": "957929"
  },
  {
    "text": "the right thing to do or to quote Jeff Bezos always like the same Amazon",
    "start": "957929",
    "end": "963540"
  },
  {
    "text": "customers are loyal to Amazon until one second after they find a better deal we",
    "start": "963540",
    "end": "970439"
  },
  {
    "text": "like it this way this means we have to wake up every day and say how am I the better deal today this is how we've been",
    "start": "970439",
    "end": "976110"
  },
  {
    "text": "able to grow to the size we have and still act like a startup alright so back here I have all of these engines are all",
    "start": "976110",
    "end": "982170"
  },
  {
    "text": "good one key difference between them is commercial versus open-source okay first",
    "start": "982170",
    "end": "990540"
  },
  {
    "text": "of all open source is a very attractive license price right 0 what's more",
    "start": "990540",
    "end": "996540"
  },
  {
    "text": "important is the elasticity and this is the biggest reason I see people move off of the commercial databases I have never",
    "start": "996540",
    "end": "1003769"
  },
  {
    "text": "had a customer come to me and say Oracle's technology doesn't work well enough I don't want to use Oracle I've",
    "start": "1003769",
    "end": "1009709"
  },
  {
    "text": "had many customers say that the price or the limitations or the licensing of Oracle they're not working for us the",
    "start": "1009709",
    "end": "1016189"
  },
  {
    "text": "same thing with Microsoft because why do you use the cloud one of the key reasons",
    "start": "1016189",
    "end": "1021439"
  },
  {
    "text": "you want to use the cloud is elasticity right so I can use more when I need it unless when I need it if I'm an open",
    "start": "1021439",
    "end": "1027260"
  },
  {
    "text": "source no problem if I'm gonna commercial I'm limited I'm locked into my license so if you need more I got to",
    "start": "1027260",
    "end": "1033139"
  },
  {
    "text": "go buy a more expensive license and then when I need less I still have to pay for the more expensive license when we so",
    "start": "1033139",
    "end": "1039889"
  },
  {
    "text": "when you use RDS with license included that gives you that flexibility with the commercial but when you get onto open",
    "start": "1039889",
    "end": "1045589"
  },
  {
    "text": "source completely you get rid of that commercial problem so almost all of our customers are gonna say I'd rather use",
    "start": "1045589",
    "end": "1051320"
  },
  {
    "text": "open source if I can but use commercial if I must so why are cases people have",
    "start": "1051320",
    "end": "1057350"
  },
  {
    "text": "to use commercial well one reason is you might be using a packaged application that only supports Oracle or Microsoft",
    "start": "1057350",
    "end": "1063010"
  },
  {
    "text": "another reason could be that you've written a whole lot of code and it's just too hard to change your",
    "start": "1063010",
    "end": "1068630"
  },
  {
    "text": "code especially if you use things like OCI and Oracle or a lot of the.net",
    "start": "1068630",
    "end": "1073720"
  },
  {
    "text": "constructions okay we're gonna support these four well I've got a joking",
    "start": "1073720",
    "end": "1079790"
  },
  {
    "text": "forever because in our industry forever means about three years but we have no plans to ever stop supporting these on",
    "start": "1079790",
    "end": "1086630"
  },
  {
    "text": "this side why would I use Postgres versus my sequel Oh Maria there are a",
    "start": "1086630",
    "end": "1093380"
  },
  {
    "text": "couple of technical differences Postgres as I mentioned has a really powerful stored procedure engine which will run",
    "start": "1093380",
    "end": "1099380"
  },
  {
    "text": "both native stored procedures and lots of languages inherently about twelve different languages so Java even Perl",
    "start": "1099380",
    "end": "1106790"
  },
  {
    "text": "for I don't know why you'd want to run perl in your database but if you do you can do it with Postgres it also has",
    "start": "1106790",
    "end": "1111980"
  },
  {
    "text": "really powerful geographic information system so if you're doing stuff that requires complex boundary boxes or stuff",
    "start": "1111980",
    "end": "1119330"
  },
  {
    "text": "with latitude and longitude and Postgres is a really good choice Postgres uses",
    "start": "1119330",
    "end": "1124520"
  },
  {
    "text": "something unusual in databases called MVCC which means it's not log based",
    "start": "1124520",
    "end": "1132350"
  },
  {
    "text": "still has some logs but instead of pushing everything off of a log instead of Postgres you get what's called an",
    "start": "1132350",
    "end": "1138470"
  },
  {
    "text": "immutable row so whenever I write something in Postgres I get a row if I update that row it doesn't really update",
    "start": "1138470",
    "end": "1145880"
  },
  {
    "text": "the row it marks the row for deletion and writes a new row when I delete a row it doesn't really delete the row it",
    "start": "1145880",
    "end": "1151820"
  },
  {
    "text": "marks it for deletion this has a good side and a bad side the good side is when I have a failure and I have to",
    "start": "1151820",
    "end": "1158420"
  },
  {
    "text": "failover Postgres is much faster because it doesn't have to do redo logs the rows already there you can pull them back",
    "start": "1158420",
    "end": "1164840"
  },
  {
    "text": "quickly the bad news is let's say I have 50 I have a 5 terabyte of hose grass",
    "start": "1164840",
    "end": "1172190"
  },
  {
    "text": "environment and I delete half of my rows I'm still using five terabytes of disk just I've got all these rows that are",
    "start": "1172190",
    "end": "1178820"
  },
  {
    "text": "marked for deletion but not gone yet and actually get rid of them and Postgres",
    "start": "1178820",
    "end": "1185570"
  },
  {
    "text": "you have to run a vacuum function and vacuum like garbage collection Java does have an impact on performance so if you",
    "start": "1185570",
    "end": "1193670"
  },
  {
    "text": "have a database that does a lot of update Postgres might not be a good choice",
    "start": "1193670",
    "end": "1199820"
  },
  {
    "text": "but just regular insert and delete it works great alright that's as deep as",
    "start": "1199820",
    "end": "1204980"
  },
  {
    "text": "I'm gonna get for now into the differences for the databases if I'm gonna run it RDS I've got to make some",
    "start": "1204980",
    "end": "1210470"
  },
  {
    "text": "other choices at a choice I got to choose what instance type now the",
    "start": "1210470",
    "end": "1216470"
  },
  {
    "text": "instance types are the same as ec2 instance type and the main difference is instead of being say m4 dot large it'll",
    "start": "1216470",
    "end": "1223910"
  },
  {
    "text": "be database or DB m4 dot large and the difference of course is now it's under our management now what does that mean",
    "start": "1223910",
    "end": "1230720"
  },
  {
    "text": "it means a couple of things one means you will never get the root password it's a managed service the root password",
    "start": "1230720",
    "end": "1236570"
  },
  {
    "text": "is only accessible by the Amazon management but it also means that we're",
    "start": "1236570",
    "end": "1242330"
  },
  {
    "text": "gonna take care of it and keep the Linux updated keep all the software to up-to-date and so on so one family the",
    "start": "1242330",
    "end": "1248390"
  },
  {
    "text": "family that we most commonly see in databases is the our family the our family is high memory if you look at the",
    "start": "1248390",
    "end": "1254990"
  },
  {
    "text": "our family it's 8 gigabytes of memory per CPU so for example if I do an R for",
    "start": "1254990",
    "end": "1261290"
  },
  {
    "text": "large it's 2 CPUs and 16 gig of memory this goes all the way up to the crazy",
    "start": "1261290",
    "end": "1268400"
  },
  {
    "text": "big R for 8 extra la8 extra large which",
    "start": "1268400",
    "end": "1274100"
  },
  {
    "text": "is 64 by 4 tired 16 extra large just 64 by 4 88 now why 48 instead of 512 we",
    "start": "1274100",
    "end": "1282260"
  },
  {
    "text": "hold a little bit back for management and other pieces so that's actually how much remember you have for the database so that we're all ready we're ready",
    "start": "1282260",
    "end": "1290210"
  },
  {
    "text": "not counting the memory we're gonna use for the operating system and swap space and so on so the M family is good for",
    "start": "1290210",
    "end": "1299090"
  },
  {
    "text": "small databases or things that need more compute power because you're doing complex aggregates so in M you have 4",
    "start": "1299090",
    "end": "1306050"
  },
  {
    "text": "gig for CPU so if I look at a m4 large instead of 2 by 16 it's 2 by 8 and so on",
    "start": "1306050",
    "end": "1316340"
  },
  {
    "text": "in that world and then the T family T stands for tests are small and this is a big deal shared all of the other",
    "start": "1316340",
    "end": "1324380"
  },
  {
    "text": "environments if I'm using that are four large nobody else will ever know other user gets those that memory those",
    "start": "1324380",
    "end": "1331040"
  },
  {
    "text": "processors are only mine in a tea you're sharing among others you're in a pooled of resource so your",
    "start": "1331040",
    "end": "1337630"
  },
  {
    "text": "performance will be a little bit unpredictable so we really don't recommend them for poor production",
    "start": "1337630",
    "end": "1343780"
  },
  {
    "text": "environments but they're great for non production and they're really cheap and indeed if you want to play with this",
    "start": "1343780",
    "end": "1349240"
  },
  {
    "text": "without paying for it you can use the free tier and the free tier will let you run a t2 micro which is one processor",
    "start": "1349240",
    "end": "1356830"
  },
  {
    "text": "and 512 megabytes you get 750 hours a month ok the longest month has 730 hours",
    "start": "1356830",
    "end": "1364870"
  },
  {
    "text": "in it so why do we allow 750 well you can run 25 of them if you want to for 5",
    "start": "1364870",
    "end": "1370870"
  },
  {
    "text": "hours each you know that's that's over 50 hours each that's up to you but you could run one of those indefinitely for",
    "start": "1370870",
    "end": "1376360"
  },
  {
    "text": "free to test things just don't expect a lot of performance because it's half a gigabyte of memory which is not going to be a very big database so you pick your",
    "start": "1376360",
    "end": "1383920"
  },
  {
    "text": "instance type so again if you don't the other limitation of the R is the smallest R is large for the MS I get",
    "start": "1383920",
    "end": "1391840"
  },
  {
    "text": "down to smalls and mediums so you pick your date your instance type then you",
    "start": "1391840",
    "end": "1397000"
  },
  {
    "text": "pick your storage type so we support three types of storage one type is magnetic that's only there for legacy",
    "start": "1397000",
    "end": "1403540"
  },
  {
    "text": "reasons don't use it won't save you any money you know perform horribly so why",
    "start": "1403540",
    "end": "1409300"
  },
  {
    "text": "do we not turn it off because we don't like to deprecate things and we have some customers who do ten years ago or",
    "start": "1409300",
    "end": "1415510"
  },
  {
    "text": "nine years ago when we first launched the service turned on a copy of my sequel on magnetic storage and it's",
    "start": "1415510",
    "end": "1420970"
  },
  {
    "text": "still running so ok we won't force them to change so usually you can use",
    "start": "1420970",
    "end": "1426640"
  },
  {
    "text": "general-purpose so what is general-purpose its SSD it's fairly high",
    "start": "1426640",
    "end": "1432520"
  },
  {
    "text": "speed and you get three uh ops three I ops per gigabyte so if you have a",
    "start": "1432520",
    "end": "1439600"
  },
  {
    "text": "terabyte you get three thousand i off some pretty good performance for most databases it never goes above 3000",
    "start": "1439600",
    "end": "1446710"
  },
  {
    "text": "IHOP's though so if you have two terabytes you still get three thousand the maximum size is 16 terabytes which",
    "start": "1446710",
    "end": "1453520"
  },
  {
    "text": "is the largest size will support under the relational database service if",
    "start": "1453520",
    "end": "1460270"
  },
  {
    "text": "you're below a terabyte it will actually burst I",
    "start": "1460270",
    "end": "1466269"
  },
  {
    "text": "if you used them up to 3000 but if you need more IAP so that you can use",
    "start": "1466269",
    "end": "1472419"
  },
  {
    "text": "provisioned IHOP's cost a little bit more but provision die ops you pick the size and you pick the I ops",
    "start": "1472419",
    "end": "1477549"
  },
  {
    "text": "and as noted here you can pick any level of AI ops up to 40,000 unless you're",
    "start": "1477549",
    "end": "1483099"
  },
  {
    "text": "using Microsoft sequel server because Windows has a limit so Windows can only handle 20,000 so you pick how many I ops",
    "start": "1483099",
    "end": "1490359"
  },
  {
    "text": "you want to do and let it run so how do you decide which one to use if you don't",
    "start": "1490359",
    "end": "1495369"
  },
  {
    "text": "know use GP to by the way why is it a - it's just the second generation of this so use general purpose if that doesn't",
    "start": "1495369",
    "end": "1502690"
  },
  {
    "text": "give you enough performance and go ahead and use the the AI ops the provisioned high ops you can change these out quite",
    "start": "1502690",
    "end": "1508929"
  },
  {
    "text": "quickly so what if I want to change my",
    "start": "1508929",
    "end": "1514570"
  },
  {
    "text": "instance well I might want to make the",
    "start": "1514570",
    "end": "1519609"
  },
  {
    "text": "instance bigger I might want to make the instance smaller so the disk size the",
    "start": "1519609",
    "end": "1524709"
  },
  {
    "text": "disks are elastic I can make that bigger or smaller while it's running and the only limit is I can't make it bigger",
    "start": "1524709",
    "end": "1530529"
  },
  {
    "text": "than 16 terabytes and I can't make it smaller than the actual amount of data I have right if I've got 5 terabytes of",
    "start": "1530529",
    "end": "1537700"
  },
  {
    "text": "data I can't make it smaller than 5 terabytes won't let me keep in mind if using Postgres might need to do some",
    "start": "1537700",
    "end": "1543820"
  },
  {
    "text": "vacuuming to get rid of data that's not really there if I want to change my",
    "start": "1543820",
    "end": "1549999"
  },
  {
    "text": "instance so the actual the compute instance then",
    "start": "1549999",
    "end": "1557739"
  },
  {
    "text": "I can do that very quickly because I don't have to copy any data it's an elastic block but it will have to take a",
    "start": "1557739",
    "end": "1564309"
  },
  {
    "text": "brief outage so I'll have to shut down my database and then start it up in",
    "start": "1564309",
    "end": "1569889"
  },
  {
    "text": "another instance connect to that block you can almost always do this in less than 5 minutes",
    "start": "1569889",
    "end": "1575489"
  },
  {
    "text": "worst case for really big environments might take 7 to 10 minutes but in a very",
    "start": "1575489",
    "end": "1581139"
  },
  {
    "text": "short outage I can say ok I'm using a a m4 with 2 processors and an 8 gig and I",
    "start": "1581139",
    "end": "1590019"
  },
  {
    "text": "know I got some extra of capacity I'm going to need I want to skip to say a r4",
    "start": "1590019",
    "end": "1596109"
  },
  {
    "text": "to extra large with a processors and 60 sorry four processors and 32 gig so I'll just",
    "start": "1596109",
    "end": "1603990"
  },
  {
    "text": "shut this down and bring this up now there are ways to do that even faster if",
    "start": "1603990",
    "end": "1610260"
  },
  {
    "text": "you want to but this does let me move this stuff dynamically storage height misari with a short outage storage I can",
    "start": "1610260",
    "end": "1617250"
  },
  {
    "text": "do dynamically and if I'm using PI ops they can change the number of i/o ops dynamically okay how do I do a high",
    "start": "1617250",
    "end": "1625830"
  },
  {
    "text": "availability it's really easy you check the boxes has multiple availability zone",
    "start": "1625830",
    "end": "1631050"
  },
  {
    "text": "that's it when you do that it will set up another server and another",
    "start": "1631050",
    "end": "1636270"
  },
  {
    "text": "availability zone now does everybody know what an availability zone is in Amazon ok not everyone is nodding",
    "start": "1636270",
    "end": "1644300"
  },
  {
    "text": "doesn't mean I'm putting you all to sleep I'm hoping yes cuz that way I get to go home early if you all fall asleep",
    "start": "1644300",
    "end": "1651050"
  },
  {
    "text": "no all right so let's describe that so AWS has regions a region is a place",
    "start": "1651050",
    "end": "1659100"
  },
  {
    "text": "in the world frankfort dublin paris london virginia oregon in each region",
    "start": "1659100",
    "end": "1668490"
  },
  {
    "start": "1667000",
    "end": "1829000"
  },
  {
    "text": "i have multiple availability zones availability zone is one or more facilities that are all within one",
    "start": "1668490",
    "end": "1675660"
  },
  {
    "text": "millisecond time from each other so some of the availability zones are three or four or five or six buildings but",
    "start": "1675660",
    "end": "1681570"
  },
  {
    "text": "they're all clustered together so they act like one large data center each availability zone has isolated power and",
    "start": "1681570",
    "end": "1688710"
  },
  {
    "text": "isolated network from other availability zones and the other availability zones are usually between two and three",
    "start": "1688710",
    "end": "1695460"
  },
  {
    "text": "milliseconds away that that's a couple hundred kilometres usually so the idea",
    "start": "1695460",
    "end": "1701250"
  },
  {
    "text": "is i don't have a single storm or a single flood or a single problem or single fire that will take out more than",
    "start": "1701250",
    "end": "1707040"
  },
  {
    "text": "one availability zone so we have in the you know occasionally had things like",
    "start": "1707040",
    "end": "1713040"
  },
  {
    "text": "tornadoes or floods that have had impacted availability zone so when i do this i have availability so in this case",
    "start": "1713040",
    "end": "1721170"
  },
  {
    "text": "i'll just choose a and b and i've got another copy of the data and the server",
    "start": "1721170",
    "end": "1727470"
  },
  {
    "text": "in b and all rights are synchronous so whenever i write something",
    "start": "1727470",
    "end": "1733380"
  },
  {
    "text": "doesn't come back to the client as written until that successfully written in both availability zones now this does",
    "start": "1733380",
    "end": "1739260"
  },
  {
    "text": "mean that your rates will get a little slower when you turn this on right because now for every rate I'm adding",
    "start": "1739260",
    "end": "1745170"
  },
  {
    "text": "about four milliseconds round-trip to go into my local availability zone right it",
    "start": "1745170",
    "end": "1750210"
  },
  {
    "text": "remotely get the confirmation that it's written and then go out so turning this on will make your writes a little slower",
    "start": "1750210",
    "end": "1755790"
  },
  {
    "text": "won't affect your read time but that but of course the upside is what if something happens is own a it will",
    "start": "1755790",
    "end": "1762690"
  },
  {
    "text": "automatically detect this automatically do a crash recovery and come back and Zumbi okay how long's crash recovery",
    "start": "1762690",
    "end": "1768690"
  },
  {
    "text": "take and we're back to that architect answer it depends I mentioned earlier",
    "start": "1768690",
    "end": "1777090"
  },
  {
    "text": "that Postgres is really fast in crash recovery a really big really busy Postgres environment you know 15 to 16",
    "start": "1777090",
    "end": "1784320"
  },
  {
    "text": "terabytes and lots of open transactions that'll take about two minutes to do its crash recovery a smaller more like one",
    "start": "1784320",
    "end": "1791760"
  },
  {
    "text": "terabyte size I should be able to do that only a few seconds my sequel Oracle",
    "start": "1791760",
    "end": "1796980"
  },
  {
    "text": "can take minutes or even hours depending on how many transactions are in process and how long it takes around the redo",
    "start": "1796980",
    "end": "1802230"
  },
  {
    "text": "logs but the good news is this is all totally automated you don't need to do anything as soon as one goes down the",
    "start": "1802230",
    "end": "1808830"
  },
  {
    "text": "other one that's going to automatically promote itself to primary and as long as",
    "start": "1808830",
    "end": "1813960"
  },
  {
    "text": "you're using endpoints that are DNS addresses so using a DNS endpoint",
    "start": "1813960",
    "end": "1821130"
  },
  {
    "text": "not an IP address it will automatically change the endpoint so clients will be",
    "start": "1821130",
    "end": "1826200"
  },
  {
    "text": "able to reattach once it becomes available again but this takes all of the headache out of high availability",
    "start": "1826200",
    "end": "1831540"
  },
  {
    "text": "all you do is click the box it's done for you so each host is going to manage",
    "start": "1831540",
    "end": "1838110"
  },
  {
    "text": "its own set of elastic lock storage of EBS volumes and then there's an external",
    "start": "1838110",
    "end": "1843660"
  },
  {
    "text": "observer that watches all of this which is itself redundant and then through DNS",
    "start": "1843660",
    "end": "1849390"
  },
  {
    "text": "that will make sure to send information to the new primary and then of course the first one is replaced but it will be",
    "start": "1849390",
    "end": "1857820"
  },
  {
    "text": "replaced as the secondary as the mirror so how long does it take that to happen",
    "start": "1857820",
    "end": "1864420"
  },
  {
    "text": "well if the failure is just that inst failed this doesn't happen much but you",
    "start": "1864420",
    "end": "1869970"
  },
  {
    "text": "know easy two instances are occasionally gonna fail they're machines that'll take about five minutes for it",
    "start": "1869970",
    "end": "1875190"
  },
  {
    "text": "to get provision and come back on the other hand if the whole availability zone was lost it might take us you know",
    "start": "1875190",
    "end": "1881220"
  },
  {
    "text": "a while to rebuild the datacenter solski how long that goes I would point out",
    "start": "1881220",
    "end": "1887670"
  },
  {
    "text": "that one of the guarantees that we make at AWS is that in every region every",
    "start": "1887670",
    "end": "1894770"
  },
  {
    "text": "availability zone has enough surplus capacity so that if I lose an availability zone there's enough extra",
    "start": "1894770",
    "end": "1901440"
  },
  {
    "text": "capacity the other availability zones to cover it so we do so for example the",
    "start": "1901440",
    "end": "1907890"
  },
  {
    "text": "Frankfort region has three availability zones which means each availability zone has at least 150 percent of its current",
    "start": "1907890",
    "end": "1915000"
  },
  {
    "text": "capacity so that I have extra to go in case I lose one does that make sense everybody by the way anybody ever use",
    "start": "1915000",
    "end": "1922830"
  },
  {
    "text": "ec2 spot so this lets you use ec2 at about eighty percent off but with the",
    "start": "1922830",
    "end": "1930300"
  },
  {
    "text": "warning that in two minutes warning we can take it back that's what that is that's that excess capacity right it",
    "start": "1930300",
    "end": "1936930"
  },
  {
    "text": "sits there in case of an emergency but while it's just sitting there we'll let you use it but that's also why we might",
    "start": "1936930",
    "end": "1942240"
  },
  {
    "text": "say but with two minutes warning I might have to take that back because well I live in Oregon",
    "start": "1942240",
    "end": "1947460"
  },
  {
    "text": "I love Oregon it's a beautiful place I wake up in the morning and look at the beautiful snowcapped volcanoes out my",
    "start": "1947460",
    "end": "1952650"
  },
  {
    "text": "window and one day one of those volcanoes will erupt and take out one of our availability zones in Oregon so we",
    "start": "1952650",
    "end": "1961020"
  },
  {
    "text": "know it's gonna happen sooner or later all right so my failover is all taken care of I",
    "start": "1961020",
    "end": "1968550"
  },
  {
    "start": "1967000",
    "end": "2067000"
  },
  {
    "text": "have another option in here that's really useful which is called a Reid replicas so Reid replicas is I need the",
    "start": "1968550",
    "end": "1976680"
  },
  {
    "text": "data more local or I need faster read so",
    "start": "1976680",
    "end": "1981750"
  },
  {
    "text": "when you do a read replicas it's an asynchronous copy that can be in the Sam",
    "start": "1981750",
    "end": "1987150"
  },
  {
    "text": "availability zone as your primary or a different availability zone this is the fun run in a different region so that I",
    "start": "1987150",
    "end": "1994230"
  },
  {
    "text": "can have another copy of the data someplace so one reason is to just hire read/write I need I need to be able to",
    "start": "1994230",
    "end": "2000710"
  },
  {
    "text": "have higher number of transactions for second reading so I can add a read replica or a couple of read replicas another reason",
    "start": "2000710",
    "end": "2007470"
  },
  {
    "text": "is I want things to be lower latency so I might have some processing and Frankfurt and some processing in Dublin",
    "start": "2007470",
    "end": "2013230"
  },
  {
    "text": "so I'll put a read replica in Dublin and it'll work off the Dublin copy third",
    "start": "2013230",
    "end": "2018630"
  },
  {
    "text": "reason to do this is I want my developers to have their own copy the database to play with because here's an",
    "start": "2018630",
    "end": "2023970"
  },
  {
    "text": "interesting thing you can write to a read replica but things you write on the",
    "start": "2023970",
    "end": "2029340"
  },
  {
    "text": "replica don't get replicated everyone with me so here's my primary here's my replica if I give this replica to my",
    "start": "2029340",
    "end": "2036090"
  },
  {
    "text": "developers they can go add their own stuff it just won't get but it only replicates one way so that way they",
    "start": "2036090",
    "end": "2042360"
  },
  {
    "text": "always have the most common current data for the production system but they can be adding or testing their own things",
    "start": "2042360",
    "end": "2047540"
  },
  {
    "text": "now warning if they drop a table here then it's not going to auto recreate it but I do have the way to play it around",
    "start": "2047540",
    "end": "2054179"
  },
  {
    "text": "play around with it so I have a number of uses for doing this we could only do the read replicas with the open-source",
    "start": "2054179",
    "end": "2059970"
  },
  {
    "text": "engines we don't do this with the Oracle or the Microsoft if this give me a number of capabilities so sometimes they",
    "start": "2059970",
    "end": "2067620"
  },
  {
    "start": "2067000",
    "end": "2244000"
  },
  {
    "text": "get people get confused and say well why would I use one or the other or should I use both well the when I'm doing the",
    "start": "2067620",
    "end": "2076230"
  },
  {
    "text": "multi is a it's synchronous read replicas asynchronous but is very scalable each primary can have five read",
    "start": "2076230",
    "end": "2083730"
  },
  {
    "text": "replicas each read replicas can have five read replicas so I can repeat this",
    "start": "2083730",
    "end": "2088980"
  },
  {
    "text": "infinitely and have a crazy number of replicas if I want to but it's asynchronous because we allow it to be",
    "start": "2088980",
    "end": "2094919"
  },
  {
    "text": "in other regions and if I'm gonna have you know a primary in Frankfurt and a replica in Singapore I don't want to",
    "start": "2094919",
    "end": "2100800"
  },
  {
    "text": "have to wait for that round-trip and every write takes a long time actually I think the most distant region from here",
    "start": "2100800",
    "end": "2106710"
  },
  {
    "text": "would be Sydney in Australia it's about 230 milliseconds one-way and sorry I",
    "start": "2106710",
    "end": "2114030"
  },
  {
    "text": "can't make that any faster actually had a customer asked me once why do we drill straight through the earth to get a",
    "start": "2114030",
    "end": "2119040"
  },
  {
    "text": "shorter distance I didn't want to tell him that I thought he was an idiot so I",
    "start": "2119040",
    "end": "2124290"
  },
  {
    "text": "said well we'll look into that there may be an engineering problem there but okay",
    "start": "2124290",
    "end": "2130010"
  },
  {
    "text": "one of the fun things about living in Oregon is sometimes people do construction projects and",
    "start": "2130010",
    "end": "2135109"
  },
  {
    "text": "set off small volcanic eruptions when they dig too deeply into this down another reason here is in multi easy",
    "start": "2135109",
    "end": "2144769"
  },
  {
    "text": "only the primary instance is active the secondary instance is basically only does two things one is wait for a",
    "start": "2144769",
    "end": "2151489"
  },
  {
    "text": "failover and then the other is when you do your backups it goes off the",
    "start": "2151489",
    "end": "2157400"
  },
  {
    "text": "secondary because hey it's sitting there it's not otherwise busy it's a good place for the backup source on the other",
    "start": "2157400",
    "end": "2165469"
  },
  {
    "text": "hand with read replicas all the replicas are active and can be used for read scaling read replicas don't normally do",
    "start": "2165469",
    "end": "2173930"
  },
  {
    "text": "our automated backup although you could run a manual backup off of them multi",
    "start": "2173930",
    "end": "2179180"
  },
  {
    "text": "easy of course is always in to AZ's and in the same region while read replicas the replicas can be wherever you want it",
    "start": "2179180",
    "end": "2185390"
  },
  {
    "text": "to be and when the engine upgrades are",
    "start": "2185390",
    "end": "2192529"
  },
  {
    "text": "independent from the source instance on read replicas so if I upgrade a engine",
    "start": "2192529",
    "end": "2198349"
  },
  {
    "text": "instance usually this is a minor upgrade right so this is going from say Postgres",
    "start": "2198349",
    "end": "2203709"
  },
  {
    "text": "972 to Postgres 973 that's actually going to be sorry 9 6 2 2 9 6 3 there's",
    "start": "2203709",
    "end": "2210650"
  },
  {
    "text": "no 97 that is something that I would normally do in in the multi easy it's",
    "start": "2210650",
    "end": "2216650"
  },
  {
    "text": "going to happen on the primary and then flip over and happen on the other side read replicas are independent and of",
    "start": "2216650",
    "end": "2223039"
  },
  {
    "text": "course a multi easy I have automatic failover now if my primary fails and I",
    "start": "2223039",
    "end": "2228109"
  },
  {
    "text": "don't have multi I can choose to manually promote a read replica so I could use those for height or sort of",
    "start": "2228109",
    "end": "2234829"
  },
  {
    "text": "high availability some people will do that all right so there's uses for both",
    "start": "2234829",
    "end": "2241219"
  },
  {
    "text": "of these what I find most interesting",
    "start": "2241219",
    "end": "2246680"
  },
  {
    "start": "2244000",
    "end": "2382000"
  },
  {
    "text": "here though is this other piece that we talked about which is backup when every running RDS the backup is completely",
    "start": "2246680",
    "end": "2253309"
  },
  {
    "text": "automatic it does a full backup once a day you pick when that happens by",
    "start": "2253309",
    "end": "2260390"
  },
  {
    "text": "default it's at midnight UTC right so a 100 mile European time but you can",
    "start": "2260390",
    "end": "2266900"
  },
  {
    "text": "change that if there's a better time for you if he using Malta's he it takes that off the secondary if not it's exempt the",
    "start": "2266900",
    "end": "2273560"
  },
  {
    "text": "primary in addition it backs up all the logs every five minutes so anytime you",
    "start": "2273560",
    "end": "2279560"
  },
  {
    "text": "want to it keeps all of those for as long as you tell it the default is seven",
    "start": "2279560",
    "end": "2284750"
  },
  {
    "text": "days the maximum is 35 days so this means I can recover to any point in the",
    "start": "2284750",
    "end": "2290960"
  },
  {
    "text": "last 35 days so when I want to do a recovery it's pretty simple you set up a",
    "start": "2290960",
    "end": "2296569"
  },
  {
    "text": "new database cluster and as part of the process of setting it up it says you want to recover from a backup and if you",
    "start": "2296569",
    "end": "2302599"
  },
  {
    "text": "say yes it'll give you a list of all your backups and then when you pick one of those backups it says when do you want it you want the most recent or do",
    "start": "2302599",
    "end": "2309589"
  },
  {
    "text": "you want any five-minute point going back to last month and pick that point in recover this is sometimes useful when",
    "start": "2309589",
    "end": "2316190"
  },
  {
    "text": "you have data corruption and you need to recover to the point before it or when something else strange has happened so",
    "start": "2316190",
    "end": "2323240"
  },
  {
    "text": "we call that a point in time recovery there is no performance penalty for",
    "start": "2323240",
    "end": "2328400"
  },
  {
    "text": "backups we have designed this in such a way that when you're backing up you will not see an impact on read or write",
    "start": "2328400",
    "end": "2334339"
  },
  {
    "text": "performance and of course it's storing it in s3 like I like most of your",
    "start": "2334339",
    "end": "2340280"
  },
  {
    "text": "backups would now you can also do this manually on demand by taking what's",
    "start": "2340280",
    "end": "2345530"
  },
  {
    "text": "called a snapshot they'll go ahead and make another backup so you might wonder hmm how can I do this with no",
    "start": "2345530",
    "end": "2353150"
  },
  {
    "text": "performance penalty and the answer is that's why it's managed service we do this for you so I that automated ones I",
    "start": "2353150",
    "end": "2362810"
  },
  {
    "text": "can specify the retention window and keep them in support of point in time with manual staff shots I can do that",
    "start": "2362810",
    "end": "2369980"
  },
  {
    "text": "whenever I want it and they'll stay until I delete them well of course the automated backup will timeout after 35",
    "start": "2369980",
    "end": "2376130"
  },
  {
    "text": "days or whatever the appropriate number is so I could use both of these they're",
    "start": "2376130",
    "end": "2382609"
  },
  {
    "start": "2382000",
    "end": "2432000"
  },
  {
    "text": "both effective and then restoring it as I said you create a new environment and",
    "start": "2382609",
    "end": "2387859"
  },
  {
    "text": "just tell it I want to restore from the backup so finally I do I just secure that well secure by default it's",
    "start": "2387859",
    "end": "2396470"
  },
  {
    "text": "normally running inside a virtual private cloud so therefore all of the traffic going in and out is going to be",
    "start": "2396470",
    "end": "2401999"
  },
  {
    "text": "LS HTTP you can turn encryption on or",
    "start": "2401999",
    "end": "2407069"
  },
  {
    "text": "off there's no good reason to turn encryption off you should always be running encrypted when you run on",
    "start": "2407069",
    "end": "2413249"
  },
  {
    "text": "database when you do that on the open source engine it will be encrypted and",
    "start": "2413249",
    "end": "2418379"
  },
  {
    "text": "it'll use the Amazon key management system if you're using Oracle or Microsoft you could use Amazon or you",
    "start": "2418379",
    "end": "2424289"
  },
  {
    "text": "could use their native TDE so as",
    "start": "2424289",
    "end": "2429499"
  },
  {
    "text": "transparent encryption and data encryption engine and of course running",
    "start": "2429499",
    "end": "2434999"
  },
  {
    "start": "2432000",
    "end": "2499000"
  },
  {
    "text": "inside of EPC means that I have all of the database protection and turn off",
    "start": "2434999",
    "end": "2440339"
  },
  {
    "text": "public accessibility and so on because normally there's no reason for anyone on the internet to access your database",
    "start": "2440339",
    "end": "2445589"
  },
  {
    "text": "right database should only be accessible by applications in the V PC the only",
    "start": "2445589",
    "end": "2451409"
  },
  {
    "text": "exception would be an administrator and if you're an administrator you should have a way to tunnel him through about",
    "start": "2451409",
    "end": "2456839"
  },
  {
    "text": "to a bastion server now a little bit of a warning here I can control access to",
    "start": "2456839",
    "end": "2462719"
  },
  {
    "text": "the database through I am so I can use the Amazon Identity and Access",
    "start": "2462719",
    "end": "2468479"
  },
  {
    "text": "Management to say who's allowed to write who's allowed to read right down to a table level I can also issue grants from",
    "start": "2468479",
    "end": "2475349"
  },
  {
    "text": "the database right I can use Postgres or my sequel or Oracle or Maria or Microsoft to say who's allowed to write",
    "start": "2475349",
    "end": "2481289"
  },
  {
    "text": "who is allowed to read what happens if you do both the most restrictive one",
    "start": "2481289",
    "end": "2487169"
  },
  {
    "text": "RINs so if I'm going to do both systems be careful that you don't lock people out by accident because you granted",
    "start": "2487169",
    "end": "2493229"
  },
  {
    "text": "information of the database but didn't give them permission with I am or the other way around",
    "start": "2493229",
    "end": "2498889"
  },
  {
    "text": "then finally encryption I just click the I click the button that says encryption you will pay no penalty for encrypting",
    "start": "2498889",
    "end": "2505739"
  },
  {
    "start": "2499000",
    "end": "2568000"
  },
  {
    "text": "the data how do we do that with no penalty we offload the encryption because hey we've got a really big cloud",
    "start": "2505739",
    "end": "2511589"
  },
  {
    "text": "with a lot of machines in it so we can use some of those extra machines to offload your encryption load so you",
    "start": "2511589",
    "end": "2516779"
  },
  {
    "text": "won't pay a computational price for it so it should always be encrypted when you use the key management system you",
    "start": "2516779",
    "end": "2523619"
  },
  {
    "text": "own the master key without the master key there can be no access or no way to",
    "start": "2523619",
    "end": "2528929"
  },
  {
    "text": "decrypt or understand or get to the data the we automatically do six-month",
    "start": "2528929",
    "end": "2534680"
  },
  {
    "text": "rotation and other pieces the big world I have to give you here is don't lose the master key we don't keep a backup",
    "start": "2534680",
    "end": "2541989"
  },
  {
    "text": "the master key is yours we don't want the copy when a government comes to us",
    "start": "2541989",
    "end": "2547069"
  },
  {
    "text": "and says give me his data we want to be able to say sorry I don't have the key go talk to him because it's your data we",
    "start": "2547069",
    "end": "2554569"
  },
  {
    "text": "shouldn't see it either it's none of our business so we strongly believe in our customers privacy so that means you have to manage",
    "start": "2554569",
    "end": "2561650"
  },
  {
    "text": "the keys or at least the master key will manage all the other keys for you which are indeed encrypted by the master key",
    "start": "2561650",
    "end": "2567289"
  },
  {
    "text": "and then how do I know what's going on well I could use cloud watch so and I",
    "start": "2567289",
    "end": "2573380"
  },
  {
    "start": "2568000",
    "end": "2595000"
  },
  {
    "text": "should use cloud watch cloud watch will let me both see what's happening on the instances and be able to set alerts so",
    "start": "2573380",
    "end": "2579170"
  },
  {
    "text": "like anything don't run out of CPU don't run out of memory you don't run out of disk space right what do you do if you",
    "start": "2579170",
    "end": "2584509"
  },
  {
    "text": "run out of space or if you're running out of disk space add more what if I'm running out of memory yeah well then",
    "start": "2584509",
    "end": "2592160"
  },
  {
    "text": "I'll have to switch to a bigger instance or I need to go wait a minute why am i running out of memory so then I could",
    "start": "2592160",
    "end": "2598309"
  },
  {
    "start": "2595000",
    "end": "2712000"
  },
  {
    "text": "use performance insight performance insight lets me see what's happening per query so I can look in here and say in",
    "start": "2598309",
    "end": "2606709"
  },
  {
    "text": "this case I'm looking at by sequel so you can see specific queries and see what's causing it so in this case I'm",
    "start": "2606709",
    "end": "2613339"
  },
  {
    "text": "getting some high performance and it's all in the blue when I go down my to big blue queries are doing these big insert",
    "start": "2613339",
    "end": "2618559"
  },
  {
    "text": "insert into statements so that I can decide do I want to rewrite those statements so do I want to slow them",
    "start": "2618559",
    "end": "2624559"
  },
  {
    "text": "down or otherwise throttle them but I could also be looking at this by host or by users or by other things",
    "start": "2624559",
    "end": "2629869"
  },
  {
    "text": "so this actually gives me that low level understanding of my sequel and Postgres and of course where we will soon be",
    "start": "2629869",
    "end": "2636650"
  },
  {
    "text": "extending this as well to a sequel server and oracle so this gives you the ability to get a really low level",
    "start": "2636650",
    "end": "2642650"
  },
  {
    "text": "understanding of what's really happening inside the database this uh this gives me memories cuz my first job is a data",
    "start": "2642650",
    "end": "2648679"
  },
  {
    "text": "scientist I worked for NASA and JAXA and my nickname was doctor heat death because I would put queries that would",
    "start": "2648679",
    "end": "2655519"
  },
  {
    "text": "not complete until the heat death of the universe and in NASA IT they had this flow chart for troubleshooting and one",
    "start": "2655519",
    "end": "2662689"
  },
  {
    "text": "of the trees on the flow chart said is dr. brisk when running a query if he s killed the query did that fix the",
    "start": "2662689",
    "end": "2668950"
  },
  {
    "text": "performance problem I guess it's good to be known for something but today we could actually",
    "start": "2668950",
    "end": "2675640"
  },
  {
    "text": "see those things and through performance insights give the information need to actually pick specific queries and kill",
    "start": "2675640",
    "end": "2681130"
  },
  {
    "text": "them and of course when service events are going to happen I can report that out of cloud watch or directly out of",
    "start": "2681130",
    "end": "2686799"
  },
  {
    "text": "RDS for things like 17 different things",
    "start": "2686799",
    "end": "2693130"
  },
  {
    "text": "here around availability or backup or deletion or so on and then have it sent alerts so the alert can be an SNS alert",
    "start": "2693130",
    "end": "2699369"
  },
  {
    "text": "sending a text or an email or it can be a lambda and actually run some code whatever you want to happen when things",
    "start": "2699369",
    "end": "2704799"
  },
  {
    "text": "go on and of course all of this goes into cloud trail or audit system so I have an audit trace of what's happening",
    "start": "2704799",
    "end": "2710529"
  },
  {
    "text": "in my database and then it gets then it gets maintained so you define a",
    "start": "2710529",
    "end": "2719140"
  },
  {
    "start": "2712000",
    "end": "2787000"
  },
  {
    "text": "maintenance window typically two to three times a year we're gonna have to do maintenance that will require an",
    "start": "2719140",
    "end": "2724839"
  },
  {
    "text": "outage usually that means changing the minor version of your database if you do",
    "start": "2724839",
    "end": "2730390"
  },
  {
    "text": "not want us to do that you can tell us don't change the minor version and we won't if you're on anything other than",
    "start": "2730390",
    "end": "2739029"
  },
  {
    "text": "Microsoft we can do all the operating system changes without a reboot yes we're now all entirely on linux kernel",
    "start": "2739029",
    "end": "2745420"
  },
  {
    "text": "for so we can do all changes dynamically remember the meltdown virus or meltdown",
    "start": "2745420",
    "end": "2750759"
  },
  {
    "text": "flaw and in gel we were able to update all of our millions of RDS users within",
    "start": "2750759",
    "end": "2756369"
  },
  {
    "text": "24 hours with no downtime except for the ones who were running on Microsoft because I required a little downtime but",
    "start": "2756369",
    "end": "2763809"
  },
  {
    "text": "on those you'll get an alert now we do",
    "start": "2763809",
    "end": "2772119"
  },
  {
    "text": "occasionally deprecated versions will usually deprecated minor versions when they're more than 5 or 6 years old so",
    "start": "2772119",
    "end": "2779349"
  },
  {
    "text": "you will get many weeks or months of notice that that's coming and then we'll we'll help you get up to a current",
    "start": "2779349",
    "end": "2785140"
  },
  {
    "text": "version that you can use all right and finally how you charge for this now it's",
    "start": "2785140",
    "end": "2790869"
  },
  {
    "start": "2787000",
    "end": "2819000"
  },
  {
    "text": "by the hour by instance and for storage like most other things but two tricks you can do to save money one of them is",
    "start": "2790869",
    "end": "2797410"
  },
  {
    "text": "reserved instances reserved instance essentially says if I prepay for a year I get 30% off if I",
    "start": "2797410",
    "end": "2803980"
  },
  {
    "text": "prepay for three years they get about 55 for self your option this is a flexible",
    "start": "2803980",
    "end": "2809829"
  },
  {
    "text": "RI so if I prepay for say an R for large and I discover I really need an hour for",
    "start": "2809829",
    "end": "2814930"
  },
  {
    "text": "extra-large well that you flexibly move that prepayment over this it's hard to predict a year in advance or three years",
    "start": "2814930",
    "end": "2820960"
  },
  {
    "start": "2819000",
    "end": "2915000"
  },
  {
    "text": "in advance but my favorite trick in this is stop so when you're done with the",
    "start": "2820960",
    "end": "2826390"
  },
  {
    "text": "database one choice you have is to go do hit delete so to leave will wipe that database out and wipe the disk and it's",
    "start": "2826390",
    "end": "2831970"
  },
  {
    "text": "gone but often a better choices stop stop is like hyphenating your laptop",
    "start": "2831970",
    "end": "2837009"
  },
  {
    "text": "when he hit stop it'll write the memory on to disk and then turn off the processing so you're still paying for",
    "start": "2837009",
    "end": "2843430"
  },
  {
    "text": "the storage but storage is cheap and you're not paying for the database anymore and when I need it again I get",
    "start": "2843430",
    "end": "2849910"
  },
  {
    "text": "it start and in less than a minute I'll have that database back at a running State this is great for test",
    "start": "2849910",
    "end": "2855190"
  },
  {
    "text": "systems it's great for development systems you know or anytime you have you know times that people are not using the",
    "start": "2855190",
    "end": "2861759"
  },
  {
    "text": "system hibernate it stop it and stop paying for it all right so it's the",
    "start": "2861759",
    "end": "2868660"
  },
  {
    "text": "basic piece on RDS it's a useful service it's one of our biggest services you have a huge number of customers that are",
    "start": "2868660",
    "end": "2875200"
  },
  {
    "text": "running their businesses on it but we had a problem we got a lot of customers come to us and say you know what I love",
    "start": "2875200",
    "end": "2880839"
  },
  {
    "text": "open source it's flexible it's got a good price I love Oracle or Microsoft",
    "start": "2880839",
    "end": "2886420"
  },
  {
    "text": "and IBM they're really reliable they don't go down so could you give me",
    "start": "2886420",
    "end": "2891430"
  },
  {
    "text": "something Amazon that has the same reliability as IBM pure scale or Oracle RAC but still has the same price point",
    "start": "2891430",
    "end": "2898239"
  },
  {
    "text": "it's open source so we went yeah that's a tough problem okay so if we're gonna",
    "start": "2898239",
    "end": "2907359"
  },
  {
    "text": "do that we're gonna have to redesign how a database works so we did we call that",
    "start": "2907359",
    "end": "2913630"
  },
  {
    "text": "Amazon Arora we redesigned the storage level of a database in order to let us",
    "start": "2913630",
    "end": "2919239"
  },
  {
    "start": "2915000",
    "end": "2927000"
  },
  {
    "text": "get to enterprise level availability reliability and performance while still",
    "start": "2919239",
    "end": "2925059"
  },
  {
    "text": "at open source so how do we do that well I could say we did to have three billion",
    "start": "2925059",
    "end": "2931089"
  },
  {
    "start": "2927000",
    "end": "2987000"
  },
  {
    "text": "engineering I could say we did that by cheating and how we cheated is we created a new storage",
    "start": "2931089",
    "end": "2936280"
  },
  {
    "text": "layer the storage layer is a shared storage volume that has thousands I'm",
    "start": "2936280",
    "end": "2943330"
  },
  {
    "text": "actually more than thousands of processors in it as well as dedicated storage and it means that I'm able to do",
    "start": "2943330",
    "end": "2952270"
  },
  {
    "text": "things much much faster and much more effectively so one trick is unlike RDS",
    "start": "2952270",
    "end": "2957790"
  },
  {
    "text": "when you use Aurora you do pick so that white thing up at the top which is doing",
    "start": "2957790",
    "end": "2963580"
  },
  {
    "text": "sequel n transactions that's an image so that might be again and are for large an hour for for extra-large whatever you'll",
    "start": "2963580",
    "end": "2970960"
  },
  {
    "text": "pick one of those you don't have to pick the storage cus will dynamically do the storage for you and it's actually",
    "start": "2970960",
    "end": "2977200"
  },
  {
    "text": "storing six copies it's going to do two copies of the storage and each of three availability zones it'll do that on a",
    "start": "2977200",
    "end": "2984130"
  },
  {
    "text": "common caching layer and that lets us get five times the three-putted my",
    "start": "2984130",
    "end": "2989770"
  },
  {
    "start": "2987000",
    "end": "3044000"
  },
  {
    "text": "sequel or three times a through photo Postgres now wait a minute that was that even possible well let me make this the",
    "start": "2989770",
    "end": "2995590"
  },
  {
    "text": "first clear it's not five times faster five times more throughput a query that",
    "start": "2995590",
    "end": "3000780"
  },
  {
    "text": "takes five sub milliseconds will still take five milliseconds but a thousand queries that take ten minutes will now",
    "start": "3000780",
    "end": "3006660"
  },
  {
    "text": "happen in two minutes why is it not as much of improvement in Postgres cuz Postgres is more efficient",
    "start": "3006660",
    "end": "3013530"
  },
  {
    "text": "than my sequel it's not as much room to improve but when we look at some actual benchmarks we get numbers like this so",
    "start": "3013530",
    "end": "3022080"
  },
  {
    "text": "using in this case the same are 3/8 extra-large that's 32 by 244 you might",
    "start": "3022080",
    "end": "3027990"
  },
  {
    "text": "notice the rate performance on the Aurora is up there above 110,000 well with my sequel on RDS it's down around",
    "start": "3027990",
    "end": "3035220"
  },
  {
    "text": "20,000 the read performance on a were I'm getting 600,000 said of 100,000 now",
    "start": "3035220",
    "end": "3041490"
  },
  {
    "text": "how do we do this by doing less work we're cheating here's how we're cheating",
    "start": "3041490",
    "end": "3047880"
  },
  {
    "start": "3044000",
    "end": "3143000"
  },
  {
    "text": "I'll use my sequel cuz it's a good illustration but Postgres is similar on the left is how old my sequel works so",
    "start": "3047880",
    "end": "3055410"
  },
  {
    "text": "whenever I do a transaction on my sequel it has to write five things to the disk it's got to write binary log the bin log",
    "start": "3055410",
    "end": "3061980"
  },
  {
    "text": "and it's gonna write the log there's got to write the actual data and then it's got to do what's called",
    "start": "3061980",
    "end": "3067080"
  },
  {
    "text": "the double right which is making sure the data matches the log and finally it's got to do the the metadata of the",
    "start": "3067080",
    "end": "3072870"
  },
  {
    "text": "frm so it's got to write all that to the disk that's step one and then of course if I'm using mirrored disks which of",
    "start": "3072870",
    "end": "3079140"
  },
  {
    "text": "course I am in production it's got to write down all to the mirror and then if I'm in high availability it's got to write all that to the replicas again and",
    "start": "3079140",
    "end": "3086580"
  },
  {
    "text": "again so even ignoring the high availability each transaction of my sequel requires seven I Hobson because I",
    "start": "3086580",
    "end": "3094560"
  },
  {
    "text": "got to do all these rights now in Aurora I can cheat I only write the log wait am",
    "start": "3094560",
    "end": "3101340"
  },
  {
    "text": "i what happens all the other stuff all those processors down on the storage layer they then take the log and convert",
    "start": "3101340",
    "end": "3107280"
  },
  {
    "text": "it into the bin log of the data the frm and and the right double right so I",
    "start": "3107280",
    "end": "3113520"
  },
  {
    "text": "still get the full my sequel semantics but most of the work is done at that lower level rather than up at the top",
    "start": "3113520",
    "end": "3119160"
  },
  {
    "text": "and then the other right is that what's his Amazon s3 that's back up so it's",
    "start": "3119160",
    "end": "3125100"
  },
  {
    "text": "writing a continuous full backup at all times so this is how I get more three plate I need less ions because of the",
    "start": "3125100",
    "end": "3132750"
  },
  {
    "text": "tricks we're doing here on Aurora I only need one I up for transaction set of seven and that's why I get higher",
    "start": "3132750",
    "end": "3138870"
  },
  {
    "text": "throughput so we've seen this across my sequel we see this across Postgres we",
    "start": "3138870",
    "end": "3144750"
  },
  {
    "start": "3143000",
    "end": "3180000"
  },
  {
    "text": "have lock management really simple whenever it writes it doesn't come back as written until it's written to four",
    "start": "3144750",
    "end": "3151080"
  },
  {
    "text": "different storage clusters and whenever it reads it checks three and if the",
    "start": "3151080",
    "end": "3157050"
  },
  {
    "text": "three don't give it the same answer it'll use the one with the newest timestamp so if I always write to four",
    "start": "3157050",
    "end": "3163020"
  },
  {
    "text": "and always read to three I'm always going to pick up the new one so that way I have reliable acid transactions not",
    "start": "3163020",
    "end": "3170010"
  },
  {
    "text": "eventual because there's some eventual consistency underneath right I write to four eventually writes to the fifth on",
    "start": "3170010",
    "end": "3175380"
  },
  {
    "text": "the sixth but for any given transaction it's immediately consistent so a whole",
    "start": "3175380",
    "end": "3183210"
  },
  {
    "text": "bunch of things that we do in there for we do a whole bunch of tricks like smart selectors and for read performance",
    "start": "3183210",
    "end": "3188820"
  },
  {
    "text": "and my favorite one that we recently introduced is parallel query which means when I'm doing a complex query instead",
    "start": "3188820",
    "end": "3194910"
  },
  {
    "text": "of running it up at the top level that pushes it down to my thousands of processors shared layer so for some things we can",
    "start": "3194910",
    "end": "3201609"
  },
  {
    "text": "get ten or twenty or a hundred times the throughput if it's a highly parallel query we also do some tricks for write",
    "start": "3201609",
    "end": "3207730"
  },
  {
    "text": "performance and for multi data access and we allow read replicas to have",
    "start": "3207730",
    "end": "3215859"
  },
  {
    "text": "higher speed read and we've now announced and are currently in preview which means you can use if you want to",
    "start": "3215859",
    "end": "3222040"
  },
  {
    "text": "it's kind of a beta program for what's called multi master which amounts I can have multiple write masters as well so I",
    "start": "3222040",
    "end": "3228910"
  },
  {
    "text": "can have up to fifteen read replicas and fifty and write replicas so my cluster can be up to thirty one systems the",
    "start": "3228910",
    "end": "3235869"
  },
  {
    "text": "original primary plus up to fifteen plus up to fifteen so that gives me the available the ability to have really",
    "start": "3235869",
    "end": "3241450"
  },
  {
    "text": "high scalability for performance total data I can store 64 terabytes if you",
    "start": "3241450",
    "end": "3248080"
  },
  {
    "text": "need more than that we can actually increase it on request up to 256 terabytes so should you have a 256 terabyte single",
    "start": "3248080",
    "end": "3255490"
  },
  {
    "text": "database and probably not but some of our customers do it anyway so on the other hand no matter how fast",
    "start": "3255490",
    "end": "3264040"
  },
  {
    "text": "it is if the database is down so how do we make sure the database is always up well that's why we have so many copies",
    "start": "3264040",
    "end": "3270280"
  },
  {
    "start": "3268000",
    "end": "3313000"
  },
  {
    "text": "of the data six-way replicated storage so the volume is across hundreds of",
    "start": "3270280",
    "end": "3276250"
  },
  {
    "text": "storage nodes so let's say availability zone three completely fails no problem still running let's say zone three fails",
    "start": "3276250",
    "end": "3283210"
  },
  {
    "text": "and another storage cluster fails okay I haven't lost any data but since I no",
    "start": "3283210",
    "end": "3289060"
  },
  {
    "text": "longer have for running storage clusters I can't write anymore still let you read I lose another storage cluster now it's",
    "start": "3289060",
    "end": "3295900"
  },
  {
    "text": "gonna turn the database off because we don't want to lose data but of course",
    "start": "3295900",
    "end": "3301600"
  },
  {
    "text": "these things get replaced underneath also think about failover I don't have to do any crash recovery because all the",
    "start": "3301600",
    "end": "3309400"
  },
  {
    "text": "data is still integrity all I have to do is switch the master so when I'm doing",
    "start": "3309400",
    "end": "3314530"
  },
  {
    "start": "3313000",
    "end": "3377000"
  },
  {
    "text": "crash recovery on Postgres I'm picky on Postgres just some of the best performance as I said about two minutes",
    "start": "3314530",
    "end": "3320080"
  },
  {
    "text": "if it's really big 30 gigs of redo you know about nineteen seconds if it's just",
    "start": "3320080",
    "end": "3325330"
  },
  {
    "text": "three gigs of redo when I'm running it on Aurora the number is way down over",
    "start": "3325330",
    "end": "3331780"
  },
  {
    "text": "here in the lower right corner no redo you",
    "start": "3331780",
    "end": "3337060"
  },
  {
    "text": "always recover in three seconds or less if you have multi-master you recover in",
    "start": "3337060",
    "end": "3342730"
  },
  {
    "text": "100 milliseconds or less because there's one endpoint going against all the masters so all it has to do is figure",
    "start": "3342730",
    "end": "3349300"
  },
  {
    "text": "out to deprecate one so a lot of our",
    "start": "3349300",
    "end": "3354400"
  },
  {
    "text": "customers say I need a relation over database that never goes down that's what this is designed for I can have as",
    "start": "3354400",
    "end": "3363580"
  },
  {
    "text": "I said up to fifteen promotable read replicas what does that mean well but I said that three second recovery I got to",
    "start": "3363580",
    "end": "3369850"
  },
  {
    "text": "have at least one read replicas I have something to recover with but of course I can read from them when they're live",
    "start": "3369850",
    "end": "3376350"
  },
  {
    "text": "and as mentioned I can do cross region read replicas those will be asynchronous",
    "start": "3376350",
    "end": "3384690"
  },
  {
    "start": "3384000",
    "end": "3422000"
  },
  {
    "text": "all right so availability is where the hardware failing we can do zero downtime",
    "start": "3384690",
    "end": "3391390"
  },
  {
    "text": "patching so when I need to change my database version not major upgrades but minor ones I can do that with zero",
    "start": "3391390",
    "end": "3396670"
  },
  {
    "text": "downtime in Aurora when I want to do large reorganizations it does a trick",
    "start": "3396670",
    "end": "3402430"
  },
  {
    "text": "called fast cloning which means I can do large DDL almost instantly so using open",
    "start": "3402430",
    "end": "3407620"
  },
  {
    "text": "source say my sequel RDS my sequel a large DDL change to could take hours with a warrior what happened in seconds",
    "start": "3407620",
    "end": "3413590"
  },
  {
    "text": "that's I'm able to do that parallelization and we are continuously",
    "start": "3413590",
    "end": "3420220"
  },
  {
    "text": "backing it up and I can recover that back up to any point in time as needed again out to the last 35 days but we",
    "start": "3420220",
    "end": "3427660"
  },
  {
    "start": "3422000",
    "end": "3482000"
  },
  {
    "text": "have a neat trick called backtrack so I can recover it and say hey I wanted to recover to this point yeah I want to",
    "start": "3427660",
    "end": "3433540"
  },
  {
    "text": "recover it at that point and it's non-disruptive so you can play around with where you're",
    "start": "3433540",
    "end": "3438760"
  },
  {
    "text": "recovering it to the one thing you can't do recovery to is is the future of the backup it's like it's not actual time",
    "start": "3438760",
    "end": "3446350"
  },
  {
    "text": "travel does let you pick a spot was working with one of our German financial customers who fortunately in a non",
    "start": "3446350",
    "end": "3452920"
  },
  {
    "text": "production system somebody managed to put a bad piece of code that replaced all the fives with sevens okay you can't",
    "start": "3452920",
    "end": "3461230"
  },
  {
    "text": "like they know okay just make all the sevens five so that that won't work I don't know they did this piece of code it was interesting and they realized it about",
    "start": "3461230",
    "end": "3469010"
  },
  {
    "text": "half an hour later so this was really useful too okay we need to restore to right when that happened and kind of",
    "start": "3469010",
    "end": "3475070"
  },
  {
    "text": "moved around a bit until they found something that had a seven and meet at",
    "start": "3475070",
    "end": "3480170"
  },
  {
    "text": "the right spot and of course they still have performance insights I also have",
    "start": "3480170",
    "end": "3486710"
  },
  {
    "start": "3482000",
    "end": "3563000"
  },
  {
    "text": "this cool trick about fast database cloning which is on demand I can do",
    "start": "3486710",
    "end": "3491900"
  },
  {
    "text": "what's called a copy-on-write clone so I've got my running database and I say",
    "start": "3491900",
    "end": "3497330"
  },
  {
    "text": "make a clone of it so it's gonna make another copy of that database instantly sub second I want to have a fully",
    "start": "3497330",
    "end": "3504350"
  },
  {
    "text": "functional database to use totally separate from the first one with the same data initially it's the first one",
    "start": "3504350",
    "end": "3509620"
  },
  {
    "text": "now how do I do that in a second even if it's a 60 terabyte or a hundred terabyte database didn't really copy the data",
    "start": "3509620",
    "end": "3515930"
  },
  {
    "text": "just made a whole list of pointers so this is why this is called copy-on-write let's say I delete a row from the",
    "start": "3515930",
    "end": "3522320"
  },
  {
    "text": "original database well the pointer won't work if I do that so before I delete the row I'll write",
    "start": "3522320",
    "end": "3527510"
  },
  {
    "text": "the row over here and then I'll delete it and let's say I update a row over",
    "start": "3527510",
    "end": "3532520"
  },
  {
    "text": "here well I'll write the old version over here and then I'll update it changes over here don't need to be replicated this makes sense I know I",
    "start": "3532520",
    "end": "3540200"
  },
  {
    "text": "have another copy of the database it's great that's a test copy it's a development copy and of course I use it",
    "start": "3540200",
    "end": "3545990"
  },
  {
    "text": "as long as I need it and then drop it so this gives me a really effective way to do test copies earlier I said wait don't",
    "start": "3545990",
    "end": "3552890"
  },
  {
    "text": "I want to use a replica for the test copy both are good do you want your chest people to have a point-in-time",
    "start": "3552890",
    "end": "3558320"
  },
  {
    "text": "copy of the data or console the upgraded copy of the data depending on the model you use one one approach to the other so",
    "start": "3558320",
    "end": "3565070"
  },
  {
    "text": "that I have ways to do tests in dev environments so combining these together",
    "start": "3565070",
    "end": "3570230"
  },
  {
    "text": "it gives me a full way in order to manage my environments across a number",
    "start": "3570230",
    "end": "3575480"
  },
  {
    "text": "of different use cases for almost anything you need to do with relational databases this is our goal this is what",
    "start": "3575480",
    "end": "3582620"
  },
  {
    "text": "we try to get to and this is something that we're very happy that people can do now normally I would ask if you have any",
    "start": "3582620",
    "end": "3589070"
  },
  {
    "text": "questions but I can't do that cuz I use the whole hour talking so",
    "start": "3589070",
    "end": "3596369"
  },
  {
    "start": "3590000",
    "end": "3600000"
  },
  {
    "text": "double check my time here yes so I would say go visit our sponsors they're really",
    "start": "3596369",
    "end": "3602430"
  },
  {
    "text": "nice people we're helping us out including the ones that I somehow left off this slide unbelievable machine and all cloud and I",
    "start": "3602430",
    "end": "3610859"
  },
  {
    "text": "will be here during the next break if you have any questions so I do have one request for you go out there and do",
    "start": "3610859",
    "end": "3616680"
  },
  {
    "text": "really interesting stuff as a relational database thanks for your time",
    "start": "3616680",
    "end": "3621710"
  }
]