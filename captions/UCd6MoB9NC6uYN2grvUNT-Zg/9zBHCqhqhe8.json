[
  {
    "text": "Hi, I’m Even Zhang and welcome \nto ‘Back to Basics’.",
    "start": "5000",
    "end": "8000"
  },
  {
    "text": "Today we are going to talk about \nhosting static websites on AWS.",
    "start": "8000",
    "end": "11000"
  },
  {
    "text": "Before the Cloud, hosting a website often \nmeant setting up a",
    "start": "11000",
    "end": "14000"
  },
  {
    "text": "web server and serving content out of \na network connected storage.",
    "start": "14000",
    "end": "18000"
  },
  {
    "text": "This was the case even if you just \nwanted to serve static web assets",
    "start": "18000",
    "end": "22000"
  },
  {
    "text": "such as CSS, HTML, and JavaScript files.",
    "start": "22000",
    "end": "25000"
  },
  {
    "text": "Not only did you have to provision a server, \nbut you had to patch the server,",
    "start": "25000",
    "end": "30000"
  },
  {
    "text": "scale resources to meet demand, \nmanaging complex deployment processes, ",
    "start": "30000",
    "end": "35000"
  },
  {
    "text": "and making sure SSL certificates are renewed\nand valid.",
    "start": "35000",
    "end": "39000"
  },
  {
    "text": "What if I told you that you don't have to \ndo any of that today?",
    "start": "39000",
    "end": "43000"
  },
  {
    "text": "Simply leverage some AWS services to have \na highly performant and scalable ",
    "start": "43000",
    "end": "47000"
  },
  {
    "text": "way of hosting a static website, \nall without having to manage a single server.",
    "start": "47000",
    "end": "52000"
  },
  {
    "text": "Let’s dive into the most common \narchitecture pattern to do this with.",
    "start": "52500",
    "end": "56500"
  },
  {
    "text": "To start, you can store all your web assets such as \nyour CSS, HTML and Javascript files on ",
    "start": "57500",
    "end": "62500"
  },
  {
    "text": "Amazon Simple Storage Service \nor otherwise known as S3.",
    "start": "62500",
    "end": "65500"
  },
  {
    "text": "By storing your web assets on Amazon S3, ",
    "start": "65500",
    "end": "68500"
  },
  {
    "text": "you have immediate access to four nines \nof availability and eleven nines of durability.",
    "start": "68500",
    "end": "73500"
  },
  {
    "text": "S3 will also scale automatically to help you to meet the \nfluctuating demands of requests.",
    "start": "73500",
    "end": "78500"
  },
  {
    "text": "And since there are no servers, \nyou won’t have to worry about patching or scaling anything.",
    "start": "78500",
    "end": "82000"
  },
  {
    "text": "Although you can configure S3 to use \nits out of the box functionality ",
    "start": "82000",
    "end": "85000"
  },
  {
    "text": "to host a static website, \nit does come with two limitations:",
    "start": "85000",
    "end": "90000"
  },
  {
    "text": "One, you must grant public read access to the \nS3 bucket that is hosting your website, ",
    "start": "90000",
    "end": "94500"
  },
  {
    "text": "which may be challenging in situations \nwhere you have blocked public access to all of your S3 buckets.",
    "start": "94500",
    "end": "100500"
  },
  {
    "text": "Two, S3’s out of box hosting does not \nsupport HTTPS for custom domains",
    "start": "101500",
    "end": "106500"
  },
  {
    "text": "So instead, it is best to use Amazon CloudFront, \na cloud CDN service",
    "start": "106500",
    "end": "111500"
  },
  {
    "text": "that allows you serve content out of S3 \nwithout having to enable any public access.",
    "start": "111500",
    "end": "117500"
  },
  {
    "text": "By fronting your S3 bucket with a \nCloudFront distribution",
    "start": "117500",
    "end": "120500"
  },
  {
    "text": "you will also be able to distribute your website \nto over 225 points of presence globally,",
    "start": "120500",
    "end": "125500"
  },
  {
    "text": "so that your users can access your \nwebsite with ultra-low latency.",
    "start": "125500",
    "end": "128500"
  },
  {
    "text": "Furthermore, through CloudFront you’ll also \nhave access to CloudFront functions,",
    "start": "128500",
    "end": "133500"
  },
  {
    "text": "a lightweight serverless compute option that \nruns at edge locations for CDN customizations.",
    "start": "133500",
    "end": "138000"
  },
  {
    "text": "For example, you can append \nHTTP headers to your responses",
    "start": "138000",
    "end": "142500"
  },
  {
    "text": "such as content security policies to enhance \nthe security posture of your website.",
    "start": "142500",
    "end": "146500"
  },
  {
    "text": "Or you can route different user sessions to \ndifferent builds of your website for A/B testing.",
    "start": "146500",
    "end": "150500"
  },
  {
    "text": "Once you have the storage and CDN sorted,",
    "start": "150500",
    "end": "153500"
  },
  {
    "text": "the next thing you will need is a custom domain \nname and a SSL certificate to go with it.",
    "start": "153500",
    "end": "157500"
  },
  {
    "text": "You can create a custom domain \nname through Amazon Route 53,",
    "start": "157500",
    "end": "160500"
  },
  {
    "text": "a cloud DNS service and a SSL certificate through \nAmazon Certificate Manager or ACM.",
    "start": "160500",
    "end": "166500"
  },
  {
    "text": "Both of these services integrate seamlessly with CloudFront,",
    "start": "166500",
    "end": "170000"
  },
  {
    "text": "making it extremely simple to map a custom domain\n to a CloudFront distribution.",
    "start": "170000",
    "end": "174500"
  },
  {
    "text": "To make it even easier, you no longer have to worry \nabout renewing your SSL certificates anymore,",
    "start": "174500",
    "end": "179500"
  },
  {
    "text": "because when used with CloudFront, \nACM will do the hard-work",
    "start": "179500",
    "end": "183500"
  },
  {
    "text": "and automatically renew the SSL certificates for you.",
    "start": "183500",
    "end": "186500"
  },
  {
    "text": "And with just these few components \nyou already have a functional website,",
    "start": "186500",
    "end": "190500"
  },
  {
    "text": "but we mustn’t forget about the deployment process.",
    "start": "190500",
    "end": "193000"
  },
  {
    "text": "With access to S3’s rich APIs, \ndeployment process is also simplified.",
    "start": "193000",
    "end": "197000"
  },
  {
    "text": "The best way to securely upload your web assets \nis using the S3 sync command",
    "start": "197000",
    "end": "201500"
  },
  {
    "text": "of the AWS CLI which will upload any \nnew and updated files to a S3.",
    "start": "201500",
    "end": "206000"
  },
  {
    "text": "One thing to keep in mind though, \nif you are deploying a single page application",
    "start": "206000",
    "end": "210500"
  },
  {
    "text": "such as a React application, make sure you upload \nthe index.html file last after syncing all the other assets.",
    "start": "210500",
    "end": "217500"
  },
  {
    "text": "This can be easily done via excluding the index.html file",
    "start": "217500",
    "end": "220500"
  },
  {
    "text": "initially and then running a subsequent sync commit \nincluding the index.html file.",
    "start": "220500",
    "end": "226500"
  },
  {
    "text": "That way, your users won’t be loading a \nbroken website during mid-deployment.",
    "start": "226500",
    "end": "231500"
  },
  {
    "text": "Your whole deployment process can \nbe as simple as two CLI commands",
    "start": "231500",
    "end": "234500"
  },
  {
    "text": "and this can be easily incorporated \ninto your CICD pipeline.",
    "start": "234500",
    "end": "238500"
  },
  {
    "text": "Lastly, observability is key to running any software applications",
    "start": "238500",
    "end": "241500"
  },
  {
    "text": "and a static website is no exception.",
    "start": "241500",
    "end": "244500"
  },
  {
    "text": "CloudFront publishes a number of operational metrics to CloudWatch",
    "start": "244500",
    "end": "248000"
  },
  {
    "text": "such as the rate of 500 errors and \nthe number of requests received.",
    "start": "248000",
    "end": "252500"
  },
  {
    "text": "Using these metrics you can create a CloudWatch Alarm",
    "start": "252500",
    "end": "255500"
  },
  {
    "text": "to alert yourself when something has gone wrong,",
    "start": "255500",
    "end": "258500"
  },
  {
    "text": "for example alerting you when there is \nan unusually high rate of 500 errors.",
    "start": "258500",
    "end": "261500"
  },
  {
    "text": "But what if you just want some insights on your CloudFront activity?",
    "start": "261500",
    "end": "265500"
  },
  {
    "text": "Well, you are in luck,",
    "start": "265500",
    "end": "267500"
  },
  {
    "text": "because CloudFront also publishes a variety of reports \nsuch as top referrer reports and popular object reports.",
    "start": "267500",
    "end": "274500"
  },
  {
    "text": "Using these reports can gain some\ninsights into how your users are interacting with your website, ",
    "start": "274500",
    "end": "279500"
  },
  {
    "text": "without the need to install or manage any extra software.",
    "start": "279500",
    "end": "283000"
  },
  {
    "text": "To conclude, using S3, CloudFront, Route53 and ACM",
    "start": "283000",
    "end": "288000"
  },
  {
    "text": "will allow you to host highly performant and \nscalable static websites on AWS",
    "start": "288000",
    "end": "291500"
  },
  {
    "text": "while removing the need to manage any servers.",
    "start": "291500",
    "end": "294500"
  },
  {
    "text": "You can also leverage additional functionalities",
    "start": "294500",
    "end": "296500"
  },
  {
    "text": "to improve your security and observability posture, \nor even run AB tests.",
    "start": "296500",
    "end": "301500"
  },
  {
    "text": "This architecture pattern has been a \ngame-changer for many of my customers,",
    "start": "301500",
    "end": "305000"
  },
  {
    "text": "and I hope it will be for you as well.",
    "start": "305000",
    "end": "308000"
  },
  {
    "text": "Click the links in the description below for more details, ",
    "start": "308000",
    "end": "311000"
  },
  {
    "text": "and see you next time.",
    "start": "311000",
    "end": "312000"
  }
]