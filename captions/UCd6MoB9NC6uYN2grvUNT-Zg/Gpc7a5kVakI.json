[
  {
    "text": "in this video you'll see how to",
    "start": "640",
    "end": "2080"
  },
  {
    "text": "integrate aws systems manager ops center",
    "start": "2080",
    "end": "4640"
  },
  {
    "text": "with amazon cloudwatch alarms",
    "start": "4640",
    "end": "7040"
  },
  {
    "text": "with this capability you can",
    "start": "7040",
    "end": "8480"
  },
  {
    "text": "automatically create ops items when an",
    "start": "8480",
    "end": "10240"
  },
  {
    "text": "alarm is triggered",
    "start": "10240",
    "end": "11440"
  },
  {
    "text": "allowing you to centrally manage",
    "start": "11440",
    "end": "12880"
  },
  {
    "text": "operational issues and simplify the",
    "start": "12880",
    "end": "14799"
  },
  {
    "text": "remediation process",
    "start": "14799",
    "end": "17119"
  },
  {
    "text": "ops center can integrate with cloudwatch",
    "start": "17119",
    "end": "18880"
  },
  {
    "text": "alarms by generating an operational work",
    "start": "18880",
    "end": "21039"
  },
  {
    "text": "item or ops item when the alarm triggers",
    "start": "21039",
    "end": "23840"
  },
  {
    "text": "to see how let's start by navigating to",
    "start": "23840",
    "end": "25840"
  },
  {
    "text": "cloudwatch",
    "start": "25840",
    "end": "28400"
  },
  {
    "text": "for the purposes of this example let's",
    "start": "29039",
    "end": "30880"
  },
  {
    "text": "create an alarm for an amazon elastic",
    "start": "30880",
    "end": "32800"
  },
  {
    "text": "compute cloud or amazon ec2",
    "start": "32800",
    "end": "34719"
  },
  {
    "text": "instance that will trigger whenever cpu",
    "start": "34719",
    "end": "36960"
  },
  {
    "text": "utilization is above a certain threshold",
    "start": "36960",
    "end": "44000"
  },
  {
    "text": "we'll set our threshold value at greater",
    "start": "44000",
    "end": "46000"
  },
  {
    "text": "than 60 of maximum cpu utilization",
    "start": "46000",
    "end": "49760"
  },
  {
    "text": "next let's configure the actions for our",
    "start": "49760",
    "end": "51600"
  },
  {
    "text": "alarm we'll first remove the",
    "start": "51600",
    "end": "53600"
  },
  {
    "text": "notification action",
    "start": "53600",
    "end": "54879"
  },
  {
    "text": "and then add the op center ops item",
    "start": "54879",
    "end": "56840"
  },
  {
    "text": "action",
    "start": "56840",
    "end": "59840"
  },
  {
    "text": "next we'll define the severity level and",
    "start": "63039",
    "end": "65119"
  },
  {
    "text": "category of our ops item",
    "start": "65119",
    "end": "68560"
  },
  {
    "text": "we'll give the alarm a name",
    "start": "71360",
    "end": "74560"
  },
  {
    "text": "we have successfully created our",
    "start": "82640",
    "end": "84080"
  },
  {
    "text": "cloudwatch alarm with an op center ops",
    "start": "84080",
    "end": "86159"
  },
  {
    "text": "item attached",
    "start": "86159",
    "end": "87600"
  },
  {
    "text": "let's fast forward to when a second",
    "start": "87600",
    "end": "89280"
  },
  {
    "text": "alarm has been created for a different",
    "start": "89280",
    "end": "90799"
  },
  {
    "text": "metric",
    "start": "90799",
    "end": "93200"
  },
  {
    "text": "now that we have two cloud watch alarms",
    "start": "93439",
    "end": "95280"
  },
  {
    "text": "we can create a composite alarm",
    "start": "95280",
    "end": "97280"
  },
  {
    "text": "let's retain these settings which",
    "start": "97280",
    "end": "98880"
  },
  {
    "text": "specify that the composite alarm will be",
    "start": "98880",
    "end": "100720"
  },
  {
    "text": "triggered if either of its two child",
    "start": "100720",
    "end": "102560"
  },
  {
    "text": "alarms are triggered",
    "start": "102560",
    "end": "105438"
  },
  {
    "text": "again let's remove the notification and",
    "start": "106240",
    "end": "108159"
  },
  {
    "text": "add the ops item action",
    "start": "108159",
    "end": "110479"
  },
  {
    "text": "let's retain the default severity level",
    "start": "110479",
    "end": "112399"
  },
  {
    "text": "and change the category",
    "start": "112399",
    "end": "115840"
  },
  {
    "text": "now let's see what happens when one of",
    "start": "128640",
    "end": "130000"
  },
  {
    "text": "our alarms reaches its alarm state",
    "start": "130000",
    "end": "133920"
  },
  {
    "text": "the cpu utilization alarm has triggered",
    "start": "134000",
    "end": "136319"
  },
  {
    "text": "causing the composite alarm to trigger",
    "start": "136319",
    "end": "138000"
  },
  {
    "text": "as well",
    "start": "138000",
    "end": "139280"
  },
  {
    "text": "let's head to systems manager op center",
    "start": "139280",
    "end": "143840"
  },
  {
    "text": "we can see two ops items in ops center",
    "start": "144160",
    "end": "148160"
  },
  {
    "text": "let's open the ops item associated with",
    "start": "148480",
    "end": "150400"
  },
  {
    "text": "our ec2 cpu utilization alarm to view",
    "start": "150400",
    "end": "153120"
  },
  {
    "text": "more details",
    "start": "153120",
    "end": "156319"
  },
  {
    "text": "the overview tab includes ops item",
    "start": "156319",
    "end": "158239"
  },
  {
    "text": "details",
    "start": "158239",
    "end": "160720"
  },
  {
    "text": "we can see a description of the event",
    "start": "160959",
    "end": "162640"
  },
  {
    "text": "the date it was created its status",
    "start": "162640",
    "end": "164879"
  },
  {
    "text": "and metadata of the ops item we can also",
    "start": "164879",
    "end": "167440"
  },
  {
    "text": "edit it",
    "start": "167440",
    "end": "168239"
  },
  {
    "text": "instead let's move on",
    "start": "168239",
    "end": "171519"
  },
  {
    "text": "in the related resources section we can",
    "start": "171519",
    "end": "173760"
  },
  {
    "text": "see the cloudwatch alarm we created",
    "start": "173760",
    "end": "175680"
  },
  {
    "text": "and the ec2 instance being tracked by",
    "start": "175680",
    "end": "177599"
  },
  {
    "text": "the cloudwatch alarm",
    "start": "177599",
    "end": "179519"
  },
  {
    "text": "we can add edit or remove any aws",
    "start": "179519",
    "end": "181920"
  },
  {
    "text": "resources related to the ops item",
    "start": "181920",
    "end": "184000"
  },
  {
    "text": "as well as run any automation documents",
    "start": "184000",
    "end": "185920"
  },
  {
    "text": "we have available",
    "start": "185920",
    "end": "188640"
  },
  {
    "text": "the related resource details tab",
    "start": "190480",
    "end": "192319"
  },
  {
    "text": "provides in-depth information about both",
    "start": "192319",
    "end": "194159"
  },
  {
    "text": "the cloudwatch alarm and any associated",
    "start": "194159",
    "end": "196840"
  },
  {
    "text": "resources",
    "start": "196840",
    "end": "199840"
  },
  {
    "text": "right now the cloudwatch alarm is",
    "start": "199920",
    "end": "201519"
  },
  {
    "text": "selected and we can view timeline graphs",
    "start": "201519",
    "end": "203840"
  },
  {
    "text": "and logs related to the metric being",
    "start": "203840",
    "end": "205599"
  },
  {
    "text": "tracked",
    "start": "205599",
    "end": "207920"
  },
  {
    "text": "for instance this graph shows exactly",
    "start": "209920",
    "end": "211920"
  },
  {
    "text": "when our resource has passed our alarm",
    "start": "211920",
    "end": "213680"
  },
  {
    "text": "state threshold",
    "start": "213680",
    "end": "214799"
  },
  {
    "text": "as well as information about its current",
    "start": "214799",
    "end": "216480"
  },
  {
    "text": "state and other resource information",
    "start": "216480",
    "end": "220239"
  },
  {
    "text": "in the history pane we can view the",
    "start": "222080",
    "end": "223760"
  },
  {
    "text": "events that correspond to our cloudwatch",
    "start": "223760",
    "end": "225519"
  },
  {
    "text": "alarm entering or leaving the triggered",
    "start": "225519",
    "end": "227360"
  },
  {
    "text": "state",
    "start": "227360",
    "end": "228959"
  },
  {
    "text": "we can view diagnostic information from",
    "start": "228959",
    "end": "230799"
  },
  {
    "text": "enabled services such as aws config or",
    "start": "230799",
    "end": "233200"
  },
  {
    "text": "aws cloudtrail without switching",
    "start": "233200",
    "end": "237040"
  },
  {
    "text": "consoles",
    "start": "238840",
    "end": "241840"
  },
  {
    "text": "let's filter the page to see details for",
    "start": "248239",
    "end": "250080"
  },
  {
    "text": "the ec2 instance that's being tracked by",
    "start": "250080",
    "end": "252159"
  },
  {
    "text": "our cloudwatch alarm",
    "start": "252159",
    "end": "255360"
  },
  {
    "text": "as you can see details are tailored to",
    "start": "255360",
    "end": "257359"
  },
  {
    "text": "the resource type currently being viewed",
    "start": "257359",
    "end": "261120"
  },
  {
    "text": "similarly we can also view metadata",
    "start": "262800",
    "end": "264800"
  },
  {
    "text": "related to the ec2 instance",
    "start": "264800",
    "end": "267040"
  },
  {
    "text": "notice that the instance type is",
    "start": "267040",
    "end": "268680"
  },
  {
    "text": "t2.micro",
    "start": "268680",
    "end": "271680"
  },
  {
    "text": "here we can view any cloudwatch alarms",
    "start": "274639",
    "end": "276639"
  },
  {
    "text": "that are tracking metrics of the ec2",
    "start": "276639",
    "end": "280400"
  },
  {
    "text": "instance",
    "start": "280840",
    "end": "283840"
  },
  {
    "text": "we saw above that the ec2 instance is",
    "start": "295120",
    "end": "297240"
  },
  {
    "text": "t2.micro",
    "start": "297240",
    "end": "298720"
  },
  {
    "text": "to resolve the cpu utilization we will",
    "start": "298720",
    "end": "300960"
  },
  {
    "text": "resize the instance to t2.large",
    "start": "300960",
    "end": "303600"
  },
  {
    "text": "let's run an automation to do that and",
    "start": "303600",
    "end": "305360"
  },
  {
    "text": "resolve the issue",
    "start": "305360",
    "end": "308240"
  },
  {
    "text": "let's go back and view the automation",
    "start": "308400",
    "end": "310080"
  },
  {
    "text": "status",
    "start": "310080",
    "end": "312560"
  },
  {
    "text": "our automation has successfully",
    "start": "313280",
    "end": "314639"
  },
  {
    "text": "completed and our instance has been",
    "start": "314639",
    "end": "316240"
  },
  {
    "text": "resized",
    "start": "316240",
    "end": "317520"
  },
  {
    "text": "by creating an op center action in",
    "start": "317520",
    "end": "319199"
  },
  {
    "text": "cloudwatch we were able to diagnose and",
    "start": "319199",
    "end": "321280"
  },
  {
    "text": "remediate this operational issue",
    "start": "321280",
    "end": "322960"
  },
  {
    "text": "entirely within op center without having",
    "start": "322960",
    "end": "324880"
  },
  {
    "text": "to switch consoles",
    "start": "324880",
    "end": "327759"
  },
  {
    "text": "to learn more about ops items or ops",
    "start": "328560",
    "end": "330560"
  },
  {
    "text": "center you can click either the learn",
    "start": "330560",
    "end": "332240"
  },
  {
    "text": "more link in the blue banner at the top",
    "start": "332240",
    "end": "333919"
  },
  {
    "text": "of the page",
    "start": "333919",
    "end": "334800"
  },
  {
    "text": "or the configure sources button in the",
    "start": "334800",
    "end": "336639"
  },
  {
    "text": "ops items pane",
    "start": "336639",
    "end": "339840"
  },
  {
    "text": "the learn more link in the cloudwatch",
    "start": "340479",
    "end": "342160"
  },
  {
    "text": "alarms pane opens the relevant aws",
    "start": "342160",
    "end": "344320"
  },
  {
    "text": "documentation",
    "start": "344320",
    "end": "346400"
  },
  {
    "text": "you've just seen how to integrate aws",
    "start": "346400",
    "end": "348479"
  },
  {
    "text": "systems manager ops center with amazon",
    "start": "348479",
    "end": "350479"
  },
  {
    "text": "cloudwatch alarms",
    "start": "350479",
    "end": "352639"
  },
  {
    "text": "thanks for watching now it's your turn",
    "start": "352639",
    "end": "354160"
  },
  {
    "text": "to try",
    "start": "354160",
    "end": "358560"
  }
]