[
  {
    "start": "0",
    "end": "23000"
  },
  {
    "text": "In this video, you’ll see how to increase application visibility\nand   governance using AWS Service Catalog AppRegistry.",
    "start": "480",
    "end": "6560"
  },
  {
    "text": "With this feature, you can create an application \nrepository with associated resources,",
    "start": "7280",
    "end": "11840"
  },
  {
    "text": "define and manage your application metadata, \nand group applications by specific attributes.",
    "start": "11840",
    "end": "16497"
  },
  {
    "text": "To get started, let’s navigate to Service \nCatalog to create an AppRegistry application.",
    "start": "17526",
    "end": "21828"
  },
  {
    "start": "23000",
    "end": "181000"
  },
  {
    "text": "AppRegistry lets you natively build an \nAWS resources inventory,",
    "start": "23440",
    "end": "27105"
  },
  {
    "text": "allowing you to understand the context of your\napplications and resources across your environments.",
    "start": "27105",
    "end": "31457"
  },
  {
    "text": "AppRegistry apps and associations can be \ncreated and managed in several different ways.",
    "start": "32149",
    "end": "36320"
  },
  {
    "text": "To begin, we’ll use the AWS console.",
    "start": "36511",
    "end": "38671"
  },
  {
    "text": "An AppRegistry application can be associated with provisioned\nService Catalog products or a CloudFormation stack ARN.",
    "start": "42274",
    "end": "48392"
  },
  {
    "text": "For the purposes of this example, we have two CloudFormation stacks\nalready set up for a sample back end, so we’ll provide their ARNs.",
    "start": "49193",
    "end": "55960"
  },
  {
    "text": "By creating this app, we’re hoping to gain \ninsight into our running services’ metadata",
    "start": "56750",
    "end": "60735"
  },
  {
    "text": "and define their relation to other \nresources in our organization.",
    "start": "60735",
    "end": "63705"
  },
  {
    "text": "Now that we’ve defined the CloudFormation stacks to be associated\nwith our application, we can define attribute groups for it.",
    "start": "66553",
    "end": "72169"
  },
  {
    "text": "Attribute groups can be shared among different AppRegistry apps,\nunlike resources, which can only be mapped to one AppRegistry app each.",
    "start": "72649",
    "end": "79655"
  },
  {
    "text": "Attribute groups provide metadata and relational information\namong different resources and environments in an account.",
    "start": "80320",
    "end": "85681"
  },
  {
    "text": "We’ll define a new attribute group that specifies information\nabout our “Operations” CloudFormation stack.",
    "start": "88377",
    "end": "93331"
  },
  {
    "text": "Attribute groups consist of JSON text \ndata provided by the creator of the group.",
    "start": "94006",
    "end": "97766"
  },
  {
    "text": "When the attribute group is updated, it applies \nto every application associated with the group.",
    "start": "98693",
    "end": "102853"
  },
  {
    "text": "Tags can be added to apps and attribute groups \nto further organize and manage information.",
    "start": "108886",
    "end": "112966"
  },
  {
    "text": "For our purposes, let’s finish \ncreating the application.",
    "start": "113583",
    "end": "115903"
  },
  {
    "text": "We can see the resources that define the \nAppRegistry application on the Resources tab.",
    "start": "118674",
    "end": "122754"
  },
  {
    "text": "Let’s take a quick look at the \nattribute group we created.",
    "start": "123343",
    "end": "125743"
  },
  {
    "text": "Now that we’ve seen how to create an \napplication using the console interface,",
    "start": "127314",
    "end": "130754"
  },
  {
    "text": "let's see how to add an attribute \ngroup to an existing application.",
    "start": "130754",
    "end": "133583"
  },
  {
    "text": "This group will be for our “Core \nServices” CloudFormation stack.",
    "start": "135760",
    "end": "138802"
  },
  {
    "text": "Again, we’ll provide JSON text to \nspecify the stack’s metadata schema.",
    "start": "141280",
    "end": "144962"
  },
  {
    "text": "Assigning an attribute group to an \napplication in the AppRegistry is optional.",
    "start": "148640",
    "end": "152171"
  },
  {
    "text": "We’ll assign this attribute group to the app we created\nso we have both of our CloudFormation stacks covered.",
    "start": "152674",
    "end": "157314"
  },
  {
    "text": "After creating the attribute \ngroup, we’re taken to its page,",
    "start": "160480",
    "end": "163650"
  },
  {
    "text": "where we can see the JSON metadata we \nprovided and any tags the group might have.",
    "start": "163650",
    "end": "167512"
  },
  {
    "text": "Let’s make sure this attribute group is\nassociated with the application we created.",
    "start": "168000",
    "end": "171545"
  },
  {
    "text": "The second attribute group is \nnow associated with our app.",
    "start": "175968",
    "end": "178629"
  },
  {
    "start": "181000",
    "end": "417000"
  },
  {
    "text": "Next, let’s create AppRegistry applications and associations\nusing the AWS Command Line Interface (CLI).",
    "start": "181657",
    "end": "188101"
  },
  {
    "text": "We’ll use Cloud9 to simulate a local environment.",
    "start": "188815",
    "end": "191397"
  },
  {
    "text": "For the purposes of this example, we’ll run a script that automates the process we saw in the AWS console",
    "start": "191645",
    "end": "197077"
  },
  {
    "text": "and displays the CLI input and output\nof each successive command.",
    "start": "197077",
    "end": "200584"
  },
  {
    "text": "First, our script reads and prints out the JSON metadata\ncorresponding to our “Operations” CloudFormation stack.",
    "start": "201280",
    "end": "206817"
  },
  {
    "text": "Next, our script creates the \nOperations attribute group.",
    "start": "208400",
    "end": "211278"
  },
  {
    "text": "Next, our script repeats the process to create \nthe Core Services stack and attribute group.",
    "start": "212880",
    "end": "217137"
  },
  {
    "text": "Next, we create the actual AppRegistry application \nin Service Catalog, with the name my-app-cli.",
    "start": "218960",
    "end": "224689"
  },
  {
    "text": "Now we associate the two attribute \ngroups with the new application.",
    "start": "226486",
    "end": "229381"
  },
  {
    "text": "Now, we associate both CloudFormation \nstacks with the application.",
    "start": "231625",
    "end": "234728"
  },
  {
    "text": "A third way to create Service Catalog AppRegistry applications\nand attribute groupings is through the AWS SDK.",
    "start": "237183",
    "end": "243399"
  },
  {
    "text": "Let’s look at an example Python application that performs\nthe same actions we’ve seen in the AWS console and CLI.",
    "start": "244266",
    "end": "250177"
  },
  {
    "text": "First, we can see that the Boto3 Python \npackage installed and imported our script.",
    "start": "252387",
    "end": "256350"
  },
  {
    "text": "Note that only Python 3.6 and \nabove is currently supported.",
    "start": "257065",
    "end": "260161"
  },
  {
    "text": "This Python script calls Service Catalog \nprogrammatically through the Boto3 client.",
    "start": "261714",
    "end": "265499"
  },
  {
    "text": "We first create the AppRegistry application.",
    "start": "266101",
    "end": "268230"
  },
  {
    "text": "Next, we create the Core Services and Operations attribute\ngroups and associate them with the application.",
    "start": "269002",
    "end": "273579"
  },
  {
    "text": "Finally, we associate our CloudFormation \nresources with the application.",
    "start": "274425",
    "end": "277776"
  },
  {
    "text": "The Python script has completed \nexecution without errors.",
    "start": "285135",
    "end": "288065"
  },
  {
    "text": "Let’s check the AppRegistry console for updates.",
    "start": "288511",
    "end": "290854"
  },
  {
    "text": "As you can see, both the CLI workflow and the Python script using\nthe AWS SDK successfully created applications in our account.",
    "start": "292396",
    "end": "299410"
  },
  {
    "text": "Let’s take a closer look at them.",
    "start": "299858",
    "end": "301157"
  },
  {
    "text": "As expected, the resource associations and attribute\ngroups were successfully created by each method.",
    "start": "305356",
    "end": "310220"
  },
  {
    "text": "Finally, let’s take a look at a CloudFormation template we can use as a\nfourth method of deploying AppRegistry applications and attribute groups.",
    "start": "315200",
    "end": "321763"
  },
  {
    "text": "This YAML file defines a CloudFormation template that, when deployed,\nprovisions the same set of AppRegistry resources we saw before.",
    "start": "324853",
    "end": "331557"
  },
  {
    "text": "The template deploys two attribute groups,\ntwo resource associations, and the AppRegistry app.",
    "start": "332795",
    "end": "337545"
  },
  {
    "text": "Let’s use it to create a stack.",
    "start": "337999",
    "end": "339511"
  },
  {
    "text": "Now that we’ve created the stack, \nlet’s see what was deployed.",
    "start": "366000",
    "end": "368680"
  },
  {
    "text": "As you can see, the application and corresponding resource associations\nand attribute groups have been created successfully.",
    "start": "377855",
    "end": "383717"
  },
  {
    "text": "Lastly, let's return to our Applications to see the integration between\nAppRegistry and Systems Manager Applications Manager.",
    "start": "384593",
    "end": "390817"
  },
  {
    "text": "With Application Manager, you can view any operational metrics and alarms that you may have running for your application,",
    "start": "391600",
    "end": "397280"
  },
  {
    "text": "remediate potential issues with runbooks, and manage\nany necessary work items for your application.",
    "start": "397280",
    "end": "402206"
  },
  {
    "text": "You’ve just seen how to increase application visibility\nand governance using AWS Service Catalog AppRegistry.",
    "start": "403131",
    "end": "408632"
  },
  {
    "text": "You can learn more about this topic in \nthe description and links for this video.",
    "start": "409800",
    "end": "413001"
  },
  {
    "text": "Thanks for watching.\nNow it’s your turn to try.",
    "start": "413202",
    "end": "415212"
  }
]