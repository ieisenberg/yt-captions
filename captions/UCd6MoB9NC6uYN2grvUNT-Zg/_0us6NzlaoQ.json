[
  {
    "text": "hi everybody my name is Oliver Klein and",
    "start": "0",
    "end": "3030"
  },
  {
    "text": "I'm a Solutions Architect with AWS",
    "start": "3030",
    "end": "4770"
  },
  {
    "text": "focusing on emerging technologies today",
    "start": "4770",
    "end": "7890"
  },
  {
    "text": "I want to talk about how AWS and",
    "start": "7890",
    "end": "10380"
  },
  {
    "text": "specifically AWS IOT can be used to",
    "start": "10380",
    "end": "13349"
  },
  {
    "text": "build smart devices so what is the",
    "start": "13349",
    "end": "16980"
  },
  {
    "text": "Internet of Things so IOT in short",
    "start": "16980",
    "end": "19230"
  },
  {
    "text": "really about it allows us to build",
    "start": "19230",
    "end": "21600"
  },
  {
    "text": "products that slowly get smarter over",
    "start": "21600",
    "end": "23699"
  },
  {
    "text": "time as we are able to sense the",
    "start": "23699",
    "end": "26099"
  },
  {
    "text": "physical world and fine-tune products to",
    "start": "26099",
    "end": "28500"
  },
  {
    "text": "end customers needs as a result of",
    "start": "28500",
    "end": "31410"
  },
  {
    "text": "having better ways of continuously",
    "start": "31410",
    "end": "32850"
  },
  {
    "text": "measuring and interacting with the",
    "start": "32850",
    "end": "34620"
  },
  {
    "text": "physical world we can also use this to",
    "start": "34620",
    "end": "37230"
  },
  {
    "text": "make any processes more efficient and",
    "start": "37230",
    "end": "39329"
  },
  {
    "text": "predictable and then in effect this will",
    "start": "39329",
    "end": "42450"
  },
  {
    "text": "also drive a closer relationship with",
    "start": "42450",
    "end": "44670"
  },
  {
    "text": "our end customer and maybe even allow us",
    "start": "44670",
    "end": "47460"
  },
  {
    "text": "to produce new product offerings that",
    "start": "47460",
    "end": "49469"
  },
  {
    "text": "weren't even possible before today we",
    "start": "49469",
    "end": "53430"
  },
  {
    "text": "will focus on AWS IOT AWS IOT allows you",
    "start": "53430",
    "end": "57930"
  },
  {
    "text": "to securely connect billions of devices",
    "start": "57930",
    "end": "60239"
  },
  {
    "text": "to AWS so that they can interact with",
    "start": "60239",
    "end": "62820"
  },
  {
    "text": "applications and other devices let's",
    "start": "62820",
    "end": "66030"
  },
  {
    "text": "zoom into the details of this service",
    "start": "66030",
    "end": "69380"
  },
  {
    "text": "AWS IOT is comprised of different",
    "start": "69380",
    "end": "71909"
  },
  {
    "text": "elements the device gateway that allows",
    "start": "71909",
    "end": "74280"
  },
  {
    "text": "you to connect devices securely in an",
    "start": "74280",
    "end": "76590"
  },
  {
    "text": "authenticated and authorized manner the",
    "start": "76590",
    "end": "79979"
  },
  {
    "text": "ability to register devices and have",
    "start": "79979",
    "end": "82229"
  },
  {
    "text": "those talk to AWS IOT using our device",
    "start": "82229",
    "end": "85320"
  },
  {
    "text": "SDKs the rules engine to transform any",
    "start": "85320",
    "end": "89040"
  },
  {
    "text": "message based on rules and route them to",
    "start": "89040",
    "end": "91979"
  },
  {
    "text": "other devices AWS services or even",
    "start": "91979",
    "end": "94970"
  },
  {
    "text": "third-party services and lastly the",
    "start": "94970",
    "end": "98579"
  },
  {
    "text": "device Shadow which allows you to",
    "start": "98579",
    "end": "100890"
  },
  {
    "text": "persist think state during intermittent",
    "start": "100890",
    "end": "103380"
  },
  {
    "text": "connectivity the device gateway uses",
    "start": "103380",
    "end": "107820"
  },
  {
    "text": "standard protocols to talk to the",
    "start": "107820",
    "end": "109500"
  },
  {
    "text": "devices you can choose from mqtt an",
    "start": "109500",
    "end": "112500"
  },
  {
    "text": "extremely lightweight protocol which",
    "start": "112500",
    "end": "114750"
  },
  {
    "text": "works well on lower bandwidth",
    "start": "114750",
    "end": "116280"
  },
  {
    "text": "connectivities HTTP or WebSockets the",
    "start": "116280",
    "end": "121020"
  },
  {
    "text": "device gateway is designed as highly",
    "start": "121020",
    "end": "123240"
  },
  {
    "text": "scalable pub/sub broker so that you can",
    "start": "123240",
    "end": "126210"
  },
  {
    "text": "subscribe to various topics and publish",
    "start": "126210",
    "end": "128940"
  },
  {
    "text": "messages to others the topics can be",
    "start": "128940",
    "end": "132450"
  },
  {
    "text": "freely defined",
    "start": "132450",
    "end": "133750"
  },
  {
    "text": "just the one example given on the left",
    "start": "133750",
    "end": "135580"
  },
  {
    "text": "with things / thing two / color lastly",
    "start": "135580",
    "end": "140440"
  },
  {
    "text": "any communication between the device and",
    "start": "140440",
    "end": "142360"
  },
  {
    "text": "the device gateway will be authenticated",
    "start": "142360",
    "end": "145180"
  },
  {
    "text": "and secured using an x.509 certificate",
    "start": "145180",
    "end": "149140"
  },
  {
    "text": "and TLS 1.2 mutual authentication as",
    "start": "149140",
    "end": "153930"
  },
  {
    "text": "messages are coming in through the",
    "start": "153930",
    "end": "155890"
  },
  {
    "text": "device gateway they can be manipulated",
    "start": "155890",
    "end": "158020"
  },
  {
    "text": "and rerouted using the rules engine the",
    "start": "158020",
    "end": "161650"
  },
  {
    "text": "rules engine uses a sequel like syntax",
    "start": "161650",
    "end": "164380"
  },
  {
    "text": "to select messages from topics and",
    "start": "164380",
    "end": "166270"
  },
  {
    "text": "filter them before defining the rule",
    "start": "166270",
    "end": "168459"
  },
  {
    "text": "action the syntax also allows for more",
    "start": "168459",
    "end": "172270"
  },
  {
    "text": "specific selects with advanced JSON",
    "start": "172270",
    "end": "174459"
  },
  {
    "text": "support or mathematical functions let's",
    "start": "174459",
    "end": "177250"
  },
  {
    "text": "have a closer look at the syntax the",
    "start": "177250",
    "end": "179880"
  },
  {
    "text": "idea is that you select certain data",
    "start": "179880",
    "end": "182500"
  },
  {
    "text": "from any other topics and filter out",
    "start": "182500",
    "end": "184630"
  },
  {
    "text": "only certain messages the Select",
    "start": "184630",
    "end": "188739"
  },
  {
    "text": "statement can select all data fields in",
    "start": "188739",
    "end": "191800"
  },
  {
    "text": "a message payload or only select certain",
    "start": "191800",
    "end": "194980"
  },
  {
    "text": "properties such as for example only",
    "start": "194980",
    "end": "197560"
  },
  {
    "text": "picking out device ID or temperature or",
    "start": "197560",
    "end": "200590"
  },
  {
    "text": "even return an md5 hash of the device ID",
    "start": "200590",
    "end": "205140"
  },
  {
    "text": "where are we selecting this data from",
    "start": "205140",
    "end": "207580"
  },
  {
    "text": "well from the topics that we sent",
    "start": "207580",
    "end": "210100"
  },
  {
    "text": "messages to the from statement helps us",
    "start": "210100",
    "end": "213280"
  },
  {
    "text": "to select messages on from certain",
    "start": "213280",
    "end": "215170"
  },
  {
    "text": "topics it also allows for wildcards in",
    "start": "215170",
    "end": "218410"
  },
  {
    "text": "between to provide flexibility around",
    "start": "218410",
    "end": "221080"
  },
  {
    "text": "carrying multiple topics at the same",
    "start": "221080",
    "end": "223510"
  },
  {
    "text": "time so it's just like scanning a",
    "start": "223510",
    "end": "226180"
  },
  {
    "text": "database table but with wild cards",
    "start": "226180",
    "end": "229500"
  },
  {
    "text": "lastly when it comes to filtering we can",
    "start": "229500",
    "end": "232390"
  },
  {
    "text": "use the usual kind of tokens to filter",
    "start": "232390",
    "end": "234790"
  },
  {
    "text": "out messages with certain properties",
    "start": "234790",
    "end": "237150"
  },
  {
    "text": "logical operators parantesis are",
    "start": "237150",
    "end": "240070"
  },
  {
    "text": "agnostic or mathematical comparators are",
    "start": "240070",
    "end": "242560"
  },
  {
    "text": "available lastly as we defined these",
    "start": "242560",
    "end": "246850"
  },
  {
    "text": "rules we can select which actions we",
    "start": "246850",
    "end": "249700"
  },
  {
    "text": "want to take we can forward these",
    "start": "249700",
    "end": "252430"
  },
  {
    "text": "filtered messages to other devices send",
    "start": "252430",
    "end": "255430"
  },
  {
    "text": "it to our Amazon s3 storage service or",
    "start": "255430",
    "end": "258250"
  },
  {
    "text": "have it evaluated by an AWS laminate",
    "start": "258250",
    "end": "260410"
  },
  {
    "text": "function or maybe just forward it to our",
    "start": "260410",
    "end": "262900"
  },
  {
    "text": "simple notification service oh and by",
    "start": "262900",
    "end": "266470"
  },
  {
    "text": "the way you",
    "start": "266470",
    "end": "267500"
  },
  {
    "text": "can define as many rules as you wish and",
    "start": "267500",
    "end": "269990"
  },
  {
    "text": "they are always evaluated and processed",
    "start": "269990",
    "end": "272060"
  },
  {
    "text": "simultaneously no matter how many you",
    "start": "272060",
    "end": "274310"
  },
  {
    "text": "have another great element of AWS IOT is",
    "start": "274310",
    "end": "279050"
  },
  {
    "text": "the thing shadow the things shadow is a",
    "start": "279050",
    "end": "282410"
  },
  {
    "text": "virtual state representation in the AWS",
    "start": "282410",
    "end": "285530"
  },
  {
    "text": "cloud environment this is useful when",
    "start": "285530",
    "end": "288500"
  },
  {
    "text": "you have devices that might have",
    "start": "288500",
    "end": "290060"
  },
  {
    "text": "intermittent connectivity devices can",
    "start": "290060",
    "end": "293510"
  },
  {
    "text": "report their state to the things Shadow",
    "start": "293510",
    "end": "295520"
  },
  {
    "text": "and other applications can read or",
    "start": "295520",
    "end": "297740"
  },
  {
    "text": "manipulate this state in the cloud",
    "start": "297740",
    "end": "299900"
  },
  {
    "text": "environment",
    "start": "299900",
    "end": "300680"
  },
  {
    "text": "if the device goes offline other",
    "start": "300680",
    "end": "303290"
  },
  {
    "text": "applications can still modify the state",
    "start": "303290",
    "end": "305570"
  },
  {
    "text": "of a device and then when the device",
    "start": "305570",
    "end": "308120"
  },
  {
    "text": "comes back online it will synchronize",
    "start": "308120",
    "end": "310520"
  },
  {
    "text": "with the thing shadow to get you started",
    "start": "310520",
    "end": "315350"
  },
  {
    "text": "quickly with connecting a device to AWS",
    "start": "315350",
    "end": "317780"
  },
  {
    "text": "IOT we also offer various AWS IOT device",
    "start": "317780",
    "end": "322520"
  },
  {
    "text": "SDKs we have an embedded C SDK available",
    "start": "322520",
    "end": "327230"
  },
  {
    "text": "which is great for chips that have an",
    "start": "327230",
    "end": "329030"
  },
  {
    "text": "embedded OS or heavily",
    "start": "329030",
    "end": "331160"
  },
  {
    "text": "resource-constrained if you have devices",
    "start": "331160",
    "end": "333890"
  },
  {
    "text": "that come with embedded Linux platforms",
    "start": "333890",
    "end": "336169"
  },
  {
    "text": "then you might be happier with the C++",
    "start": "336169",
    "end": "339010"
  },
  {
    "text": "JavaScript Java or Python SDK if you own",
    "start": "339010",
    "end": "344390"
  },
  {
    "text": "an Arduino yen we also have a device SDK",
    "start": "344390",
    "end": "347270"
  },
  {
    "text": "specifically forward and lastly for",
    "start": "347270",
    "end": "350060"
  },
  {
    "text": "mobile devices or tablets you can use",
    "start": "350060",
    "end": "352490"
  },
  {
    "text": "the mobile SDKs alright let's try to see",
    "start": "352490",
    "end": "357320"
  },
  {
    "text": "this in action let's use an Intel Edison",
    "start": "357320",
    "end": "359600"
  },
  {
    "text": "with the Arduino breakout board and have",
    "start": "359600",
    "end": "362810"
  },
  {
    "text": "some sensors and actuators connected to",
    "start": "362810",
    "end": "365300"
  },
  {
    "text": "it we then use AWS IOT to read some of",
    "start": "365300",
    "end": "369680"
  },
  {
    "text": "those sensor information and interact",
    "start": "369680",
    "end": "372290"
  },
  {
    "text": "with the buzzer the server and LCD",
    "start": "372290",
    "end": "375169"
  },
  {
    "text": "screen attached to this board alright so",
    "start": "375169",
    "end": "379700"
  },
  {
    "text": "what we've got now here is the Intel",
    "start": "379700",
    "end": "382100"
  },
  {
    "text": "Edison with the Arduino breakout board",
    "start": "382100",
    "end": "383870"
  },
  {
    "text": "we're going to try to understand a",
    "start": "383870",
    "end": "385550"
  },
  {
    "text": "little bit how we connect this to AWS",
    "start": "385550",
    "end": "387950"
  },
  {
    "text": "IOT look at some pieces of code and play",
    "start": "387950",
    "end": "390800"
  },
  {
    "text": "a little bit around with the console and",
    "start": "390800",
    "end": "392570"
  },
  {
    "text": "see how we can interact with some of",
    "start": "392570",
    "end": "394280"
  },
  {
    "text": "those sensors and actuators that are",
    "start": "394280",
    "end": "396800"
  },
  {
    "text": "attached to it so first let's have a",
    "start": "396800",
    "end": "399260"
  },
  {
    "text": "look at our AWS eye",
    "start": "399260",
    "end": "401070"
  },
  {
    "text": "tea console here here we see a dashboard",
    "start": "401070",
    "end": "403350"
  },
  {
    "text": "and you see that I already have some",
    "start": "403350",
    "end": "405060"
  },
  {
    "text": "connections coming true now let's have a",
    "start": "405060",
    "end": "407280"
  },
  {
    "text": "look how we would have to say that at",
    "start": "407280",
    "end": "408930"
  },
  {
    "text": "Intel Edison connected to AWS IOT to do",
    "start": "408930",
    "end": "412800"
  },
  {
    "text": "that we're gonna click here on registry",
    "start": "412800",
    "end": "415710"
  },
  {
    "text": "and then under things we will see the",
    "start": "415710",
    "end": "418200"
  },
  {
    "text": "different things that are connected to",
    "start": "418200",
    "end": "420210"
  },
  {
    "text": "AWS IOT and as you already see here the",
    "start": "420210",
    "end": "424170"
  },
  {
    "text": "Intel Edison has already been connected",
    "start": "424170",
    "end": "426210"
  },
  {
    "text": "let's have a quick look at this now",
    "start": "426210",
    "end": "428640"
  },
  {
    "text": "after we create a thing in AWS IOT it",
    "start": "428640",
    "end": "431550"
  },
  {
    "text": "will provide us with this individual",
    "start": "431550",
    "end": "433470"
  },
  {
    "text": "thing a iron name it will also allow us",
    "start": "433470",
    "end": "437160"
  },
  {
    "text": "to create a security certificate that we",
    "start": "437160",
    "end": "440250"
  },
  {
    "text": "attach to this thing let's have a look",
    "start": "440250",
    "end": "442320"
  },
  {
    "text": "at this here we see there's an",
    "start": "442320",
    "end": "444650"
  },
  {
    "text": "certificate attached to the AWS IOT",
    "start": "444650",
    "end": "447630"
  },
  {
    "text": "thing if we click on this in more detail",
    "start": "447630",
    "end": "449610"
  },
  {
    "text": "it will provide us with information of",
    "start": "449610",
    "end": "452100"
  },
  {
    "text": "that certificate now this certificate is",
    "start": "452100",
    "end": "455880"
  },
  {
    "text": "important because this is a certificate",
    "start": "455880",
    "end": "457800"
  },
  {
    "text": "as we generated we will push it to the",
    "start": "457800",
    "end": "460920"
  },
  {
    "text": "Intel Edison device and this will hook",
    "start": "460920",
    "end": "463140"
  },
  {
    "text": "up the Intel Edison device securely with",
    "start": "463140",
    "end": "465960"
  },
  {
    "text": "the AWS IOT service which will allow it",
    "start": "465960",
    "end": "468690"
  },
  {
    "text": "to use the mutual authentication of TLS",
    "start": "468690",
    "end": "470940"
  },
  {
    "text": "1.2 and of course encrypt also the",
    "start": "470940",
    "end": "474660"
  },
  {
    "text": "communication in between let's have a",
    "start": "474660",
    "end": "477150"
  },
  {
    "text": "quick look on how we could load this up",
    "start": "477150",
    "end": "478980"
  },
  {
    "text": "into our Intel Edison device what you",
    "start": "478980",
    "end": "482160"
  },
  {
    "text": "see here is one of the sample codes that",
    "start": "482160",
    "end": "484230"
  },
  {
    "text": "I will run in just a bit on my Intel",
    "start": "484230",
    "end": "486540"
  },
  {
    "text": "Edison device as you can see in the",
    "start": "486540",
    "end": "489330"
  },
  {
    "text": "first line I will actually use the AWS",
    "start": "489330",
    "end": "492180"
  },
  {
    "text": "IOT device SDK this will make it very",
    "start": "492180",
    "end": "495390"
  },
  {
    "text": "easy for us to connect this until Edison",
    "start": "495390",
    "end": "497820"
  },
  {
    "text": "device with AWS IOT now where do we",
    "start": "497820",
    "end": "501750"
  },
  {
    "text": "connect it to AWS IOT well it's as",
    "start": "501750",
    "end": "504120"
  },
  {
    "text": "simple as one single line of code as you",
    "start": "504120",
    "end": "507030"
  },
  {
    "text": "see here",
    "start": "507030",
    "end": "508490"
  },
  {
    "text": "AWS RT dot device and we indicate the",
    "start": "508490",
    "end": "511800"
  },
  {
    "text": "certificate that we just received",
    "start": "511800",
    "end": "513390"
  },
  {
    "text": "earlier and this will bind those things",
    "start": "513390",
    "end": "515669"
  },
  {
    "text": "together the next thing that we can then",
    "start": "515669",
    "end": "518520"
  },
  {
    "text": "do is to listen and subscribe onto",
    "start": "518520",
    "end": "522960"
  },
  {
    "text": "certain topics so as soon as we have",
    "start": "522960",
    "end": "524850"
  },
  {
    "text": "successfully connected to AWS IOT we",
    "start": "524850",
    "end": "528630"
  },
  {
    "text": "will",
    "start": "528630",
    "end": "529080"
  },
  {
    "text": "subscribe to a topic called Edison slash",
    "start": "529080",
    "end": "532200"
  },
  {
    "text": "commands we",
    "start": "532200",
    "end": "534620"
  },
  {
    "text": "then also publish a message to Edison",
    "start": "534620",
    "end": "537170"
  },
  {
    "text": "slash messages and say hey our Edison",
    "start": "537170",
    "end": "540529"
  },
  {
    "text": "just came online now let's try to put",
    "start": "540529",
    "end": "543950"
  },
  {
    "text": "this in action let's first go back here",
    "start": "543950",
    "end": "546560"
  },
  {
    "text": "to the AWS IOT console and click on the",
    "start": "546560",
    "end": "549860"
  },
  {
    "text": "test element here in the menu this will",
    "start": "549860",
    "end": "552650"
  },
  {
    "text": "allow us to actually run an MQTT client",
    "start": "552650",
    "end": "555200"
  },
  {
    "text": "here in my browser to listen on to",
    "start": "555200",
    "end": "557330"
  },
  {
    "text": "certain topics and also send certain",
    "start": "557330",
    "end": "559130"
  },
  {
    "text": "messages onto topics which will allow me",
    "start": "559130",
    "end": "561710"
  },
  {
    "text": "to the buck what's going on in my",
    "start": "561710",
    "end": "563330"
  },
  {
    "text": "addison device and also via my browser",
    "start": "563330",
    "end": "565490"
  },
  {
    "text": "talk to this thing now so the first",
    "start": "565490",
    "end": "569089"
  },
  {
    "text": "thing that we're going to do is we're",
    "start": "569089",
    "end": "570320"
  },
  {
    "text": "going to listen to every possible Edison",
    "start": "570320",
    "end": "573230"
  },
  {
    "text": "slash topic we're going to subscribe to",
    "start": "573230",
    "end": "575570"
  },
  {
    "text": "this now if I'm going to now open an SSH",
    "start": "575570",
    "end": "579020"
  },
  {
    "text": "connection to my Edison which I have",
    "start": "579020",
    "end": "580850"
  },
  {
    "text": "done here in my terminal I can now run",
    "start": "580850",
    "end": "585080"
  },
  {
    "text": "this demo code by saying node demo dachi",
    "start": "585080",
    "end": "587839"
  },
  {
    "text": "yes which will then connect to AWS IOT",
    "start": "587839",
    "end": "592490"
  },
  {
    "text": "and should subscribe and publish to",
    "start": "592490",
    "end": "595160"
  },
  {
    "text": "these topics and as we see voila here",
    "start": "595160",
    "end": "597620"
  },
  {
    "text": "already",
    "start": "597620",
    "end": "598580"
  },
  {
    "text": "the first message came true and says hey",
    "start": "598580",
    "end": "600740"
  },
  {
    "text": "your Edison is online great now as you",
    "start": "600740",
    "end": "605720"
  },
  {
    "text": "see now some of the LCD screen went",
    "start": "605720",
    "end": "607850"
  },
  {
    "text": "online and we slowly now get temperature",
    "start": "607850",
    "end": "610190"
  },
  {
    "text": "reading that we sense here from this",
    "start": "610190",
    "end": "612050"
  },
  {
    "text": "temperature sensor and display it the",
    "start": "612050",
    "end": "614510"
  },
  {
    "text": "humidity and the temperature on the",
    "start": "614510",
    "end": "616430"
  },
  {
    "text": "screen itself now let's see how we can",
    "start": "616430",
    "end": "619100"
  },
  {
    "text": "interact with this Edison device I",
    "start": "619100",
    "end": "621520"
  },
  {
    "text": "subscribe to an Edison / commands topic",
    "start": "621520",
    "end": "625220"
  },
  {
    "text": "now what am i sent certain information",
    "start": "625220",
    "end": "628160"
  },
  {
    "text": "to that Edison / commands topic now let",
    "start": "628160",
    "end": "631010"
  },
  {
    "text": "me take this sample here we're just",
    "start": "631010",
    "end": "634100"
  },
  {
    "text": "adjacent string I consent to send",
    "start": "634100",
    "end": "636529"
  },
  {
    "text": "certain action to my Intel Edison device",
    "start": "636529",
    "end": "639230"
  },
  {
    "text": "and we're going to send that to Edison",
    "start": "639230",
    "end": "641660"
  },
  {
    "text": "/ commands and let's start off with a",
    "start": "641660",
    "end": "645290"
  },
  {
    "text": "beep there's a buzzer attached here and",
    "start": "645290",
    "end": "647750"
  },
  {
    "text": "we want to understand if this if we can",
    "start": "647750",
    "end": "649670"
  },
  {
    "text": "remotely make this buzzer beep I click",
    "start": "649670",
    "end": "652730"
  },
  {
    "text": "on publish topic and there we go nearly",
    "start": "652730",
    "end": "656089"
  },
  {
    "text": "immediately the buzzer went off we try",
    "start": "656089",
    "end": "658040"
  },
  {
    "text": "this again we immediately get the beep",
    "start": "658040",
    "end": "661250"
  },
  {
    "text": "sound true now let's have some fun with",
    "start": "661250",
    "end": "663380"
  },
  {
    "text": "that LCD screen over there shall we if I",
    "start": "663380",
    "end": "665839"
  },
  {
    "text": "change this action message to LCD",
    "start": "665839",
    "end": "668300"
  },
  {
    "text": "and I say hello AWS as a message and I",
    "start": "668300",
    "end": "672020"
  },
  {
    "text": "published this topic we now see that we",
    "start": "672020",
    "end": "674780"
  },
  {
    "text": "see hello",
    "start": "674780",
    "end": "675560"
  },
  {
    "text": "AWS on the screen I can also go ahead",
    "start": "675560",
    "end": "680210"
  },
  {
    "text": "and change the color off the screen and",
    "start": "680210",
    "end": "683210"
  },
  {
    "text": "maybe make it red or how about green",
    "start": "683210",
    "end": "688430"
  },
  {
    "text": "let's change this color to green sent a",
    "start": "688430",
    "end": "691370"
  },
  {
    "text": "message true and here we go we changed",
    "start": "691370",
    "end": "694850"
  },
  {
    "text": "it to green now we also have a little",
    "start": "694850",
    "end": "698360"
  },
  {
    "text": "servo here which could be interesting if",
    "start": "698360",
    "end": "700670"
  },
  {
    "text": "you want to deploy certain Edison devise",
    "start": "700670",
    "end": "702650"
  },
  {
    "text": "and unlock or lock a log of a door for",
    "start": "702650",
    "end": "704810"
  },
  {
    "text": "example or operate a certain machinery",
    "start": "704810",
    "end": "706520"
  },
  {
    "text": "well we have a little small server here",
    "start": "706520",
    "end": "708620"
  },
  {
    "text": "could we spin that and actuate it",
    "start": "708620",
    "end": "710720"
  },
  {
    "text": "remotely from AWS IOT well again I could",
    "start": "710720",
    "end": "714320"
  },
  {
    "text": "take here servo and set the angle of the",
    "start": "714320",
    "end": "717440"
  },
  {
    "text": "server to 180 publish it to the topic",
    "start": "717440",
    "end": "720200"
  },
  {
    "text": "and we see our server is spinning",
    "start": "720200",
    "end": "722480"
  },
  {
    "text": "publish it back as an angle to zero and",
    "start": "722480",
    "end": "725440"
  },
  {
    "text": "our server is spinning again now if you",
    "start": "725440",
    "end": "729230"
  },
  {
    "text": "want to build a smart home appliance at",
    "start": "729230",
    "end": "731150"
  },
  {
    "text": "home you might want to connect a light",
    "start": "731150",
    "end": "732920"
  },
  {
    "text": "to an Intel Edison device one easy way",
    "start": "732920",
    "end": "735290"
  },
  {
    "text": "to do that would be via a relay switch",
    "start": "735290",
    "end": "737840"
  },
  {
    "text": "and what you see here is a small little",
    "start": "737840",
    "end": "740210"
  },
  {
    "text": "relay relay that would allow me to cut",
    "start": "740210",
    "end": "742280"
  },
  {
    "text": "off or cut on push put on a certain",
    "start": "742280",
    "end": "744920"
  },
  {
    "text": "power cable that we push through it so",
    "start": "744920",
    "end": "748310"
  },
  {
    "text": "one thing that I could do is to say I",
    "start": "748310",
    "end": "750380"
  },
  {
    "text": "want to take this relay and put the",
    "start": "750380",
    "end": "752300"
  },
  {
    "text": "state to off now the state is off now",
    "start": "752300",
    "end": "755030"
  },
  {
    "text": "how about switching that state to on and",
    "start": "755030",
    "end": "759430"
  },
  {
    "text": "if you have a close look at it this now",
    "start": "759430",
    "end": "762550"
  },
  {
    "text": "we see that to relate clicked its Mitch",
    "start": "762550",
    "end": "765110"
  },
  {
    "text": "Don and current can now pass through and",
    "start": "765110",
    "end": "767690"
  },
  {
    "text": "would switch on the light if you would",
    "start": "767690",
    "end": "769160"
  },
  {
    "text": "have connected it to it vice put the",
    "start": "769160",
    "end": "771500"
  },
  {
    "text": "state back to off our relay will switch",
    "start": "771500",
    "end": "775340"
  },
  {
    "text": "off again so we now have the ability to",
    "start": "775340",
    "end": "777440"
  },
  {
    "text": "use AWS IOT to remotely control one or",
    "start": "777440",
    "end": "780770"
  },
  {
    "text": "many or millions of those devices that",
    "start": "780770",
    "end": "782660"
  },
  {
    "text": "are now connected to a cc or T so this",
    "start": "782660",
    "end": "785780"
  },
  {
    "text": "would be talking to the device itself",
    "start": "785780",
    "end": "788240"
  },
  {
    "text": "now we also have certain information",
    "start": "788240",
    "end": "790460"
  },
  {
    "text": "that this device is collecting",
    "start": "790460",
    "end": "792500"
  },
  {
    "text": "specifically the temperature reading",
    "start": "792500",
    "end": "794300"
  },
  {
    "text": "here and humidity now can we send that",
    "start": "794300",
    "end": "796730"
  },
  {
    "text": "back to AWS this is a perfect example",
    "start": "796730",
    "end": "799640"
  },
  {
    "text": "for something like the",
    "start": "799640",
    "end": "802100"
  },
  {
    "text": "thing shadow now let's go back to",
    "start": "802100",
    "end": "804110"
  },
  {
    "text": "registry here and look at our Edison",
    "start": "804110",
    "end": "806509"
  },
  {
    "text": "thing if I look at my Dyson thing I will",
    "start": "806509",
    "end": "810350"
  },
  {
    "text": "also find a valley of shadow here let's",
    "start": "810350",
    "end": "812839"
  },
  {
    "text": "click on shadow and we now see that my",
    "start": "812839",
    "end": "815389"
  },
  {
    "text": "Intel Edison is currently reporting back",
    "start": "815389",
    "end": "818839"
  },
  {
    "text": "a certain temperature that temperature",
    "start": "818839",
    "end": "821720"
  },
  {
    "text": "is coming from this temperature sensor",
    "start": "821720",
    "end": "823399"
  },
  {
    "text": "here that reading is both displayed here",
    "start": "823399",
    "end": "825709"
  },
  {
    "text": "on the LCD screen",
    "start": "825709",
    "end": "826940"
  },
  {
    "text": "and as well sent back to the thing",
    "start": "826940",
    "end": "829130"
  },
  {
    "text": "shadow which is what we're seeing right",
    "start": "829130",
    "end": "830990"
  },
  {
    "text": "here in the console now let's see if",
    "start": "830990",
    "end": "834019"
  },
  {
    "text": "this is actually live shall we so I got",
    "start": "834019",
    "end": "836029"
  },
  {
    "text": "a little lighter here I'm gonna hold",
    "start": "836029",
    "end": "837680"
  },
  {
    "text": "this slider against my temperature",
    "start": "837680",
    "end": "840110"
  },
  {
    "text": "sensor and if I hold is relatively close",
    "start": "840110",
    "end": "842449"
  },
  {
    "text": "we should see that the temperature will",
    "start": "842449",
    "end": "845360"
  },
  {
    "text": "immediately spark up on both the display",
    "start": "845360",
    "end": "847550"
  },
  {
    "text": "and of course also here in my AWS IOT",
    "start": "847550",
    "end": "852380"
  },
  {
    "text": "thing shadow console so we now we",
    "start": "852380",
    "end": "855410"
  },
  {
    "text": "demonstrate it how we can effectively",
    "start": "855410",
    "end": "857000"
  },
  {
    "text": "with one line of code connect an Intel",
    "start": "857000",
    "end": "859490"
  },
  {
    "text": "Edison device to AWS IOT remotely",
    "start": "859490",
    "end": "862399"
  },
  {
    "text": "control it by our aw IOT service by",
    "start": "862399",
    "end": "865670"
  },
  {
    "text": "publishing certain messages true and at",
    "start": "865670",
    "end": "868040"
  },
  {
    "text": "the same time subscribing to certain",
    "start": "868040",
    "end": "869540"
  },
  {
    "text": "messages to get information out of this",
    "start": "869540",
    "end": "871759"
  },
  {
    "text": "device out of this thing back into the",
    "start": "871759",
    "end": "873709"
  },
  {
    "text": "AWS IOT service and then we can process",
    "start": "873709",
    "end": "876589"
  },
  {
    "text": "it there next up let's have a look at",
    "start": "876589",
    "end": "880790"
  },
  {
    "text": "the device called Amazon echo Amazon",
    "start": "880790",
    "end": "884420"
  },
  {
    "text": "echo allows us to talk to the Alexa",
    "start": "884420",
    "end": "886790"
  },
  {
    "text": "voice services whenever we are calling",
    "start": "886790",
    "end": "889100"
  },
  {
    "text": "its wake wood the default wake word",
    "start": "889100",
    "end": "892040"
  },
  {
    "text": "would be Alexa so we can for example say",
    "start": "892040",
    "end": "895730"
  },
  {
    "text": "say hello Alexa and she will respond to",
    "start": "895730",
    "end": "899420"
  },
  {
    "text": "us now the Alexa voice services are open",
    "start": "899420",
    "end": "902630"
  },
  {
    "text": "echo system where every developer can",
    "start": "902630",
    "end": "904759"
  },
  {
    "text": "extend the capabilities of what Alexa",
    "start": "904759",
    "end": "907279"
  },
  {
    "text": "can do let's have a look at that the",
    "start": "907279",
    "end": "910639"
  },
  {
    "text": "Alexa voice services can be extended by",
    "start": "910639",
    "end": "913069"
  },
  {
    "text": "creating an Alexis skill this Alexa",
    "start": "913069",
    "end": "916699"
  },
  {
    "text": "skill will call your piece of code to",
    "start": "916699",
    "end": "919399"
  },
  {
    "text": "respond to a user's request this piece",
    "start": "919399",
    "end": "923329"
  },
  {
    "text": "of code can run on your own web service",
    "start": "923329",
    "end": "926029"
  },
  {
    "text": "or alternatively what we would recommend",
    "start": "926029",
    "end": "928819"
  },
  {
    "text": "in an AWS lambda function in this piece",
    "start": "928819",
    "end": "933110"
  },
  {
    "text": "of code you can call other systems to",
    "start": "933110",
    "end": "935300"
  },
  {
    "text": "full",
    "start": "935300",
    "end": "935870"
  },
  {
    "text": "and then returned back a response to the",
    "start": "935870",
    "end": "939110"
  },
  {
    "text": "user alternatively you can even handle a",
    "start": "939110",
    "end": "943130"
  },
  {
    "text": "continuous conversation with Alexa using",
    "start": "943130",
    "end": "946100"
  },
  {
    "text": "your function code alright let's try",
    "start": "946100",
    "end": "948890"
  },
  {
    "text": "this out so here we got the Amazon echo",
    "start": "948890",
    "end": "952430"
  },
  {
    "text": "dot which is the smaller sister of",
    "start": "952430",
    "end": "954260"
  },
  {
    "text": "brother off the Amazon echo now let's",
    "start": "954260",
    "end": "956570"
  },
  {
    "text": "see what we can do with this",
    "start": "956570",
    "end": "957770"
  },
  {
    "text": "Alexa say hello hello Alexa how are you",
    "start": "957770",
    "end": "965030"
  },
  {
    "text": "today I'm great I hope you are too I am",
    "start": "965030",
    "end": "970240"
  },
  {
    "text": "Alexa where are you right now I'm here",
    "start": "970240",
    "end": "975350"
  },
  {
    "text": "in my head is in the cloud awesome which",
    "start": "975350",
    "end": "978050"
  },
  {
    "text": "allows us to extend the ecosystem of",
    "start": "978050",
    "end": "979850"
  },
  {
    "text": "what is possible here for example I can",
    "start": "979850",
    "end": "982760"
  },
  {
    "text": "write a skill that would allow me to",
    "start": "982760",
    "end": "984500"
  },
  {
    "text": "connect to my Intel Edison device",
    "start": "984500",
    "end": "986090"
  },
  {
    "text": "earlier so that I can change the color",
    "start": "986090",
    "end": "988460"
  },
  {
    "text": "of the Intel Edison device Alexa asked",
    "start": "988460",
    "end": "993200"
  },
  {
    "text": "Edison to change color to red I change",
    "start": "993200",
    "end": "998360"
  },
  {
    "text": "this color to red now since this is an",
    "start": "998360",
    "end": "1001420"
  },
  {
    "text": "open ecosystem anyone can integrate",
    "start": "1001420",
    "end": "1003520"
  },
  {
    "text": "their own skills against it and allow",
    "start": "1003520",
    "end": "1006010"
  },
  {
    "text": "anyone to use their skills so for",
    "start": "1006010",
    "end": "1007750"
  },
  {
    "text": "example Spotify integrates with it let's",
    "start": "1007750",
    "end": "1010060"
  },
  {
    "text": "have a look at that Alexa play you give",
    "start": "1010060",
    "end": "1013120"
  },
  {
    "text": "love a bad name from Spotify you give",
    "start": "1013120",
    "end": "1016870"
  },
  {
    "text": "love a bad name by Bon Jovi from Spotify",
    "start": "1016870",
    "end": "1021210"
  },
  {
    "text": "[Music]",
    "start": "1023330",
    "end": "1024850"
  },
  {
    "text": "Alexa stop okay how about having a bit",
    "start": "1024850",
    "end": "1030110"
  },
  {
    "text": "of fun with robots shall we",
    "start": "1030110",
    "end": "1031600"
  },
  {
    "text": "you might have heard of a company called",
    "start": "1031600",
    "end": "1034668"
  },
  {
    "text": "Sphero they produce small toy robots and",
    "start": "1034669",
    "end": "1039110"
  },
  {
    "text": "one of them is called sprk plus they",
    "start": "1039110",
    "end": "1042709"
  },
  {
    "text": "also build a sour specific version which",
    "start": "1042709",
    "end": "1044959"
  },
  {
    "text": "was called bb-8 and became really",
    "start": "1044959",
    "end": "1047329"
  },
  {
    "text": "popular now this robot can be controlled",
    "start": "1047329",
    "end": "1050929"
  },
  {
    "text": "via bluetooth our Intel Edison board",
    "start": "1050929",
    "end": "1053570"
  },
  {
    "text": "actually has a Bluetooth functionality",
    "start": "1053570",
    "end": "1055960"
  },
  {
    "text": "so what we can do is to connect our",
    "start": "1055960",
    "end": "1058820"
  },
  {
    "text": "sphere a robot to the Intel Edison and",
    "start": "1058820",
    "end": "1061279"
  },
  {
    "text": "have the Intel Edison connect to a ws",
    "start": "1061279",
    "end": "1064429"
  },
  {
    "text": "IOT this will allow us to remotely",
    "start": "1064429",
    "end": "1068750"
  },
  {
    "text": "control our robot from our AWS cloud",
    "start": "1068750",
    "end": "1071799"
  },
  {
    "text": "environment in addition to that let's",
    "start": "1071799",
    "end": "1075470"
  },
  {
    "text": "create an Amazon Alexa skill so we can",
    "start": "1075470",
    "end": "1078919"
  },
  {
    "text": "also use our voice to change our IOT",
    "start": "1078919",
    "end": "1082190"
  },
  {
    "text": "thing shadow and as such have the",
    "start": "1082190",
    "end": "1085460"
  },
  {
    "text": "ability to use our voice to change the",
    "start": "1085460",
    "end": "1088070"
  },
  {
    "text": "color of the robot remotely alright",
    "start": "1088070",
    "end": "1091760"
  },
  {
    "text": "let's try this so here we get our sphere",
    "start": "1091760",
    "end": "1095269"
  },
  {
    "text": "a robot and now we're going to try to",
    "start": "1095269",
    "end": "1096799"
  },
  {
    "text": "connect this via robot by a bluetooth to",
    "start": "1096799",
    "end": "1099649"
  },
  {
    "text": "my Intel Edison and our Intel Edison",
    "start": "1099649",
    "end": "1101510"
  },
  {
    "text": "will be connected to AWS IOT so that we",
    "start": "1101510",
    "end": "1105350"
  },
  {
    "text": "can remotely control the robot but also",
    "start": "1105350",
    "end": "1108230"
  },
  {
    "text": "senses environment and detect collisions",
    "start": "1108230",
    "end": "1111279"
  },
  {
    "text": "now let's try this out first we're going",
    "start": "1111279",
    "end": "1114980"
  },
  {
    "text": "to switch over to our AWS IOT console",
    "start": "1114980",
    "end": "1117919"
  },
  {
    "text": "here now let's again listen to the",
    "start": "1117919",
    "end": "1120830"
  },
  {
    "text": "Sphero topics that we have so I'm going",
    "start": "1120830",
    "end": "1122600"
  },
  {
    "text": "to click here on to my MQTT client now",
    "start": "1122600",
    "end": "1127010"
  },
  {
    "text": "I'm gonna listen to a topic which I call",
    "start": "1127010",
    "end": "1129139"
  },
  {
    "text": "Sphero and I'm going to listen to both",
    "start": "1129139",
    "end": "1130850"
  },
  {
    "text": "the action and commands by using this",
    "start": "1130850",
    "end": "1133760"
  },
  {
    "text": "plus sign here the next thing that I'm",
    "start": "1133760",
    "end": "1137059"
  },
  {
    "text": "going to do is power up the little",
    "start": "1137059",
    "end": "1139070"
  },
  {
    "text": "JavaScript that are run on the Intel",
    "start": "1139070",
    "end": "1140840"
  },
  {
    "text": "Edison to connect the Edison with AWS",
    "start": "1140840",
    "end": "1143210"
  },
  {
    "text": "IOT and also connect the Sphero via",
    "start": "1143210",
    "end": "1146179"
  },
  {
    "text": "bluetooth to the Edison let's try this",
    "start": "1146179",
    "end": "1148970"
  },
  {
    "text": "out let's power it up and now what the",
    "start": "1148970",
    "end": "1151669"
  },
  {
    "text": "Intel Edison will do is it talks to the",
    "start": "1151669",
    "end": "1153919"
  },
  {
    "text": "Sphero activates it and the light came",
    "start": "1153919",
    "end": "1156380"
  },
  {
    "text": "on",
    "start": "1156380",
    "end": "1156830"
  },
  {
    "text": "now it also connected",
    "start": "1156830",
    "end": "1158630"
  },
  {
    "text": "- AWS IOT so let's see if we can",
    "start": "1158630",
    "end": "1162200"
  },
  {
    "text": "remotely control this alright let's keep",
    "start": "1162200",
    "end": "1165020"
  },
  {
    "text": "rolling and here we go we start now",
    "start": "1165020",
    "end": "1168020"
  },
  {
    "text": "sending messages as you see in my screen",
    "start": "1168020",
    "end": "1169880"
  },
  {
    "text": "which are Jason messages that basically",
    "start": "1169880",
    "end": "1172460"
  },
  {
    "text": "say that it's rolling now as we're doing",
    "start": "1172460",
    "end": "1177830"
  },
  {
    "text": "quick movement changes here we also see",
    "start": "1177830",
    "end": "1179929"
  },
  {
    "text": "slight collisions coming true now let's",
    "start": "1179929",
    "end": "1182720"
  },
  {
    "text": "try to simulate that a little bit better",
    "start": "1182720",
    "end": "1184309"
  },
  {
    "text": "how about having a little wall and now",
    "start": "1184309",
    "end": "1189169"
  },
  {
    "text": "rolling our robot with a little bit more",
    "start": "1189169",
    "end": "1191630"
  },
  {
    "text": "speed into this block and here we go and",
    "start": "1191630",
    "end": "1194419"
  },
  {
    "text": "try this again and we see a collision",
    "start": "1194419",
    "end": "1196640"
  },
  {
    "text": "slowly coming true here if we go back to",
    "start": "1196640",
    "end": "1200419"
  },
  {
    "text": "our irt dashboard here we see that",
    "start": "1200419",
    "end": "1202850"
  },
  {
    "text": "collisions are coming in after we rolled",
    "start": "1202850",
    "end": "1205159"
  },
  {
    "text": "true",
    "start": "1205159",
    "end": "1205760"
  },
  {
    "text": "so we now have the ability to not only",
    "start": "1205760",
    "end": "1208490"
  },
  {
    "text": "remotely control our robot here but we",
    "start": "1208490",
    "end": "1211610"
  },
  {
    "text": "also have the ability to sense our",
    "start": "1211610",
    "end": "1213860"
  },
  {
    "text": "environment now lastly we also have a",
    "start": "1213860",
    "end": "1217610"
  },
  {
    "text": "certain thing shadow set for our robot",
    "start": "1217610",
    "end": "1220220"
  },
  {
    "text": "onto Intel Edison device now that shadow",
    "start": "1220220",
    "end": "1223220"
  },
  {
    "text": "is specifically the color so what we can",
    "start": "1223220",
    "end": "1226280"
  },
  {
    "text": "do is use our voice together with Alexa",
    "start": "1226280",
    "end": "1229159"
  },
  {
    "text": "to change the color of our sphere robot",
    "start": "1229159",
    "end": "1231860"
  },
  {
    "text": "let's try this",
    "start": "1231860",
    "end": "1233830"
  },
  {
    "text": "Alexa asked Sphero to change color to",
    "start": "1233830",
    "end": "1237500"
  },
  {
    "text": "green I changed Speros color to green",
    "start": "1237500",
    "end": "1243460"
  },
  {
    "text": "communicated that message to lambda",
    "start": "1243460",
    "end": "1245630"
  },
  {
    "text": "function talk to the Intel Edison",
    "start": "1245630",
    "end": "1247210"
  },
  {
    "text": "updated the thing shadow via AWS IOT and",
    "start": "1247210",
    "end": "1250309"
  },
  {
    "text": "communicated that message by a Bluetooth",
    "start": "1250309",
    "end": "1252559"
  },
  {
    "text": "let's try this one more time",
    "start": "1252559",
    "end": "1253970"
  },
  {
    "text": "Alexa asked Sphero to change color to",
    "start": "1253970",
    "end": "1257419"
  },
  {
    "text": "blue I changed",
    "start": "1257419",
    "end": "1261590"
  },
  {
    "text": "eros color to blue and here we go we",
    "start": "1261590",
    "end": "1263960"
  },
  {
    "text": "changed the color to blue so what we've",
    "start": "1263960",
    "end": "1266539"
  },
  {
    "text": "achieved now is we took an animate",
    "start": "1266539",
    "end": "1268250"
  },
  {
    "text": "object here that we connected via",
    "start": "1268250",
    "end": "1270049"
  },
  {
    "text": "bluetooth and via AWS IOT to a cloud",
    "start": "1270049",
    "end": "1273380"
  },
  {
    "text": "environment so we can remotely control",
    "start": "1273380",
    "end": "1275179"
  },
  {
    "text": "it sense our physical world bring it",
    "start": "1275179",
    "end": "1278450"
  },
  {
    "text": "back into our virtual world and also",
    "start": "1278450",
    "end": "1281030"
  },
  {
    "text": "control it using natural language",
    "start": "1281030",
    "end": "1282980"
  },
  {
    "text": "processing alright I hope you enjoyed",
    "start": "1282980",
    "end": "1286280"
  },
  {
    "text": "the demos but remember a full IOT",
    "start": "1286280",
    "end": "1289429"
  },
  {
    "text": "product doesn't stop after connecting",
    "start": "1289429",
    "end": "1292190"
  },
  {
    "text": "things to a cloud environment but don't",
    "start": "1292190",
    "end": "1294889"
  },
  {
    "text": "sweat it",
    "start": "1294889",
    "end": "1295429"
  },
  {
    "text": "AWS has all the necessary services to",
    "start": "1295429",
    "end": "1298220"
  },
  {
    "text": "build highly available and scalable IOT",
    "start": "1298220",
    "end": "1301250"
  },
  {
    "text": "solutions may it be your storage or at",
    "start": "1301250",
    "end": "1304039"
  },
  {
    "text": "service requirement companion apps and",
    "start": "1304039",
    "end": "1306769"
  },
  {
    "text": "mobile devices or tablets or any of you",
    "start": "1306769",
    "end": "1310429"
  },
  {
    "text": "analytical or machine learning needs so",
    "start": "1310429",
    "end": "1313700"
  },
  {
    "text": "go and built we would love to see your",
    "start": "1313700",
    "end": "1316220"
  },
  {
    "text": "next interesting connected thing now if",
    "start": "1316220",
    "end": "1319519"
  },
  {
    "text": "after today you're wanting to take your",
    "start": "1319519",
    "end": "1321710"
  },
  {
    "text": "AWS knowledge to the next level you have",
    "start": "1321710",
    "end": "1324350"
  },
  {
    "text": "several options available to you to gain",
    "start": "1324350",
    "end": "1327679"
  },
  {
    "text": "more confidence and hence an experience",
    "start": "1327679",
    "end": "1329570"
  },
  {
    "text": "with AWS watch our instructional videos",
    "start": "1329570",
    "end": "1332059"
  },
  {
    "text": "and explore the self-paced labs",
    "start": "1332059",
    "end": "1334870"
  },
  {
    "text": "additionally you can attend our",
    "start": "1334870",
    "end": "1337100"
  },
  {
    "text": "instructor-led classes by qualified AWS",
    "start": "1337100",
    "end": "1340220"
  },
  {
    "text": "instructors and learn how to design",
    "start": "1340220",
    "end": "1342399"
  },
  {
    "text": "deploy and operate highly available",
    "start": "1342399",
    "end": "1345970"
  },
  {
    "text": "cost-effective and secure applications",
    "start": "1345970",
    "end": "1348799"
  },
  {
    "text": "on AWS and finally don't forget to",
    "start": "1348799",
    "end": "1351950"
  },
  {
    "text": "validate your technical expertise with",
    "start": "1351950",
    "end": "1353809"
  },
  {
    "text": "AWS and use practice exams to help you",
    "start": "1353809",
    "end": "1356330"
  },
  {
    "text": "prepare for AWS certifications and also",
    "start": "1356330",
    "end": "1360440"
  },
  {
    "text": "finally I would like to thank you for",
    "start": "1360440",
    "end": "1362000"
  },
  {
    "text": "attending this session today and",
    "start": "1362000",
    "end": "1363409"
  },
  {
    "text": "sticking it out to the very end of the",
    "start": "1363409",
    "end": "1365539"
  },
  {
    "text": "presentation please take the time to",
    "start": "1365539",
    "end": "1367700"
  },
  {
    "text": "provide feedback on today's events so",
    "start": "1367700",
    "end": "1370039"
  },
  {
    "text": "that we can improve the event experience",
    "start": "1370039",
    "end": "1372019"
  },
  {
    "text": "for you in the future thank you very",
    "start": "1372019",
    "end": "1374210"
  },
  {
    "text": "much for your attention",
    "start": "1374210",
    "end": "1376929"
  },
  {
    "text": "you",
    "start": "1383140",
    "end": "1385200"
  }
]