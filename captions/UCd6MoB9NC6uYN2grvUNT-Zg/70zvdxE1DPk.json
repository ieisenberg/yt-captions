[
  {
    "start": "0",
    "end": "25000"
  },
  {
    "text": "hey my name is Byron cook I'm director of automated reasoning group I'm really",
    "start": "0",
    "end": "5730"
  },
  {
    "text": "excited to introduce mark and Aaron from millennium who are gonna speak about",
    "start": "5730",
    "end": "11610"
  },
  {
    "text": "their use of some tools that come from my team I thought I'd just provide a few",
    "start": "11610",
    "end": "16740"
  },
  {
    "text": "moments of context about where this work is coming from to help mark and Aaron",
    "start": "16740",
    "end": "22500"
  },
  {
    "text": "and pitch it so so my team builds tools",
    "start": "22500",
    "end": "27810"
  },
  {
    "start": "25000",
    "end": "44000"
  },
  {
    "text": "in the space of what we call provable security so this is the application of mathematical logic to prove properties",
    "start": "27810",
    "end": "34770"
  },
  {
    "text": "about the AWS systems and also to provide tools to customers to prove",
    "start": "34770",
    "end": "41520"
  },
  {
    "text": "properties about about their systems so we we we develop tools that answer",
    "start": "41520",
    "end": "49140"
  },
  {
    "text": "questions about the future behavior of systems so software or so source code",
    "start": "49140",
    "end": "54559"
  },
  {
    "text": "policies networks protocols etc and we talk about what those systems might do",
    "start": "54559",
    "end": "59820"
  },
  {
    "text": "what they will do what they can never do we work on tools both that are customer",
    "start": "59820",
    "end": "66720"
  },
  {
    "start": "63000",
    "end": "120000"
  },
  {
    "text": "facing and also internal so so a customer facing we have we we we have a couple tools one called teres one called",
    "start": "66720",
    "end": "73979"
  },
  {
    "text": "zelkova that's gonna be mentioned today and those power a number of features in AWS services so for example s3's block",
    "start": "73979",
    "end": "81780"
  },
  {
    "text": "public access also inspector's network reachability analysis also IOT device",
    "start": "81780",
    "end": "87390"
  },
  {
    "text": "defender and config rules has a number of cell Cova based managed rule so the list goes on so these are these are",
    "start": "87390",
    "end": "93979"
  },
  {
    "text": "engines that use mathematical logic to reason about networks to reason about policies and then below the line of the",
    "start": "93979",
    "end": "101790"
  },
  {
    "text": "shared security model we're also doing a number of proofs about the crypto about the virtualization storage you name it",
    "start": "101790",
    "end": "109619"
  },
  {
    "text": "so we're proving properties related to security durability and also using these",
    "start": "109619",
    "end": "115799"
  },
  {
    "text": "tools to reduce our internal costs for compliance on it the big idea is that",
    "start": "115799",
    "end": "124640"
  },
  {
    "start": "120000",
    "end": "165000"
  },
  {
    "text": "reasoning about programs formally is undecidable the halting problem for",
    "start": "124640",
    "end": "130140"
  },
  {
    "text": "example is undecidable or reasoning about for example the the sat",
    "start": "130140",
    "end": "137270"
  },
  {
    "text": "problem for propositional logic is actually np-complete but we have techniques that may that in practice",
    "start": "137270",
    "end": "142460"
  },
  {
    "text": "make those problems feel decidable or P time and so we there are there are some",
    "start": "142460",
    "end": "147580"
  },
  {
    "text": "practical tools that for for non the for for applications that come from",
    "start": "147580",
    "end": "154100"
  },
  {
    "text": "developers and industrial applications we can make NP feel like P time often or make the undecidable feel decidable and",
    "start": "154100",
    "end": "160700"
  },
  {
    "text": "we apply those apply those tools to practical problems so said that talked",
    "start": "160700",
    "end": "167450"
  },
  {
    "start": "165000",
    "end": "209000"
  },
  {
    "text": "about that if you want to know more information in provable security",
    "start": "167450",
    "end": "175310"
  },
  {
    "text": "there's the AWS security provable security web page that has blog posts",
    "start": "175310",
    "end": "180860"
  },
  {
    "text": "and it has scientific papers it has a podcast that I'm running etc so and",
    "start": "180860",
    "end": "189320"
  },
  {
    "text": "there's also recorded talks and including a number of recorded talks from reinforced which was a couple of a",
    "start": "189320",
    "end": "196900"
  },
  {
    "text": "couple of weeks ago so with that I'm gonna hand over control of the slides",
    "start": "196900",
    "end": "205100"
  },
  {
    "text": "and to our friends from millennium and they'll tell us all about their work thank you bar hello everyone my name is",
    "start": "205100",
    "end": "214070"
  },
  {
    "text": "Mark kurta I'm the head of cloud engineering for millennium management today we're gonna talk about a system we",
    "start": "214070",
    "end": "220430"
  },
  {
    "text": "develop internally to manage a.m. rolls on permissions at the enterprise scale",
    "start": "220430",
    "end": "226570"
  },
  {
    "text": "but more importantly we're going to talk to you about how we leverage some of the tools that byron mention and",
    "start": "226570",
    "end": "233530"
  },
  {
    "text": "specifically how we leverage AWS l Cova to achieve provable security within our",
    "start": "233530",
    "end": "239840"
  },
  {
    "text": "infrastructure within our cloud environments and to get confidence on the rolls on the things that we're doing",
    "start": "239840",
    "end": "245930"
  },
  {
    "text": "in the cloud first let's talk a little bit about millennium so we're a global",
    "start": "245930",
    "end": "251180"
  },
  {
    "start": "247000",
    "end": "343000"
  },
  {
    "text": "management firm investment management firm roughly around thirty eight billion on their assets in management and twenty",
    "start": "251180",
    "end": "259940"
  },
  {
    "text": "eight hundred employees across offices of the United in the United States Asia and Europe",
    "start": "259940",
    "end": "265310"
  },
  {
    "text": "we have a large number of specialized trading teams which don't necessarily",
    "start": "265310",
    "end": "270800"
  },
  {
    "text": "talk to each other they're very very specialized and their use cases are very very unique which makes our job the",
    "start": "270800",
    "end": "277340"
  },
  {
    "text": "public cloud team a little bit more difficult than some of the other use cases that you might seem as a result we",
    "start": "277340",
    "end": "283400"
  },
  {
    "text": "have within the public cloud team we have two sub teams one of them is the enablement team and these are the girls",
    "start": "283400",
    "end": "289340"
  },
  {
    "text": "and the guys will actually do all the work for the public cloud they're amazing they actually partner with this",
    "start": "289340",
    "end": "296510"
  },
  {
    "text": "customers they learn about the use cases they learn about their environment and",
    "start": "296510",
    "end": "301640"
  },
  {
    "text": "then they go out and build all of this architecture in a cloud native way then",
    "start": "301640",
    "end": "307669"
  },
  {
    "text": "we have the engineering team and the engineering team is just simply our",
    "start": "307669",
    "end": "313160"
  },
  {
    "text": "responsibilities to build this tooling this framework this ecosystem of cloud",
    "start": "313160",
    "end": "318820"
  },
  {
    "text": "cloud tooling that allows the not only the enablement team but all of the other",
    "start": "318820",
    "end": "324890"
  },
  {
    "text": "application teams to unboard on to AWS easily and the goal was just really to",
    "start": "324890",
    "end": "329900"
  },
  {
    "text": "make it very simple very developers friendly and also also not add a lot of",
    "start": "329900",
    "end": "337010"
  },
  {
    "text": "friction into a daily work so we tried to be as frictionless as possible in our tooling the motivation for getting into",
    "start": "337010",
    "end": "345830"
  },
  {
    "start": "343000",
    "end": "436000"
  },
  {
    "text": "AWS was simple we needed elasticity we needed time to market we want all these independent teams to innovate quickly",
    "start": "345830",
    "end": "352729"
  },
  {
    "text": "right that's just the typical cloud use case security is primary concern for us",
    "start": "352729",
    "end": "359000"
  },
  {
    "text": "so we build security into every component into every resource that we've",
    "start": "359000",
    "end": "364100"
  },
  {
    "text": "that we create and it's a first-class citizen within everything that we do at",
    "start": "364100",
    "end": "369440"
  },
  {
    "text": "Millennium including our tooling or frameworks or C HDD pipelines we start with the security requirements first and",
    "start": "369440",
    "end": "376610"
  },
  {
    "text": "then work backwards until we get a component or resource that we feel confident that meets our security",
    "start": "376610",
    "end": "383240"
  },
  {
    "text": "policies we also make it very easy for new application teams to onboard by",
    "start": "383240",
    "end": "389630"
  },
  {
    "text": "creating this application templates and an application template is typical",
    "start": "389630",
    "end": "395200"
  },
  {
    "text": "canonical implementation of a particular use case let's say for example that you want to",
    "start": "395200",
    "end": "400220"
  },
  {
    "text": "build a three-tier web app then you know that you're gonna need an elastic load balancer you're gonna need or the",
    "start": "400220",
    "end": "405860"
  },
  {
    "text": "scaling group launch configure 53 DNS entries you're gonna need an RDS all of",
    "start": "405860",
    "end": "411980"
  },
  {
    "text": "that is made in a automated function and deploy into their account via pipelines",
    "start": "411980",
    "end": "418610"
  },
  {
    "text": "using the application templates from that point on then it's up to the development team to actually expand on",
    "start": "418610",
    "end": "424700"
  },
  {
    "text": "that particular use case they could tweak a they could add different things but you know the starting point is is",
    "start": "424700",
    "end": "430910"
  },
  {
    "text": "there and it's well defined and proven",
    "start": "430910",
    "end": "435790"
  },
  {
    "start": "436000",
    "end": "484000"
  },
  {
    "text": "we have hundreds of accounts within millennium we operating a multi account",
    "start": "436600",
    "end": "442670"
  },
  {
    "text": "strategy so it's up to the development team or this the new customer one day on",
    "start": "442670",
    "end": "449150"
  },
  {
    "text": "board to decide what the deployment strategy should be and it depends on the number of environments that they want",
    "start": "449150",
    "end": "455180"
  },
  {
    "text": "sometimes they might want just a dev QA UAT alpha beta prod you know they define",
    "start": "455180",
    "end": "463400"
  },
  {
    "text": "that and then within those definition of those environment then they further define whether they want one account per",
    "start": "463400",
    "end": "469460"
  },
  {
    "text": "environment or they want def & QA in the same account within the same VPC dev and",
    "start": "469460",
    "end": "475190"
  },
  {
    "text": "QA in the same account but in separate VPC so it's all driven by a frame",
    "start": "475190",
    "end": "480200"
  },
  {
    "text": "without that we've built internally",
    "start": "480200",
    "end": "483460"
  },
  {
    "start": "484000",
    "end": "520000"
  },
  {
    "text": "we're using AWS extensively on millenium our primary use case is compute and big",
    "start": "485710",
    "end": "492950"
  },
  {
    "text": "data but over the last six months or so we've starting to see a lot more of the machine learning use cases heavy users",
    "start": "492950",
    "end": "502400"
  },
  {
    "text": "of eks of AWS bash lambda and of course",
    "start": "502400",
    "end": "508310"
  },
  {
    "text": "EMR spark sage maker is coming into the",
    "start": "508310",
    "end": "513469"
  },
  {
    "text": "picture now athena s3 of course nobody can use AWS without using s3 we have our",
    "start": "513470",
    "end": "522680"
  },
  {
    "start": "520000",
    "end": "558000"
  },
  {
    "text": "own internal cloud framework we started to build two years ago we actually showcase this framework at reinvent last",
    "start": "522680",
    "end": "529760"
  },
  {
    "text": "year in 2018 and basically all we're doing with this with this framework is adding all of the",
    "start": "529760",
    "end": "536060"
  },
  {
    "text": "guardrails to protect these development teams from from doing something that we're not comfortable in the cloud right",
    "start": "536060",
    "end": "544329"
  },
  {
    "text": "so it is very very opinionated but within that we give you enough",
    "start": "544329",
    "end": "551600"
  },
  {
    "text": "flexibility to just turn enough knobs to get it optimized for your particular use",
    "start": "551600",
    "end": "556790"
  },
  {
    "text": "case we also have our own internal security framework and it's actually",
    "start": "556790",
    "end": "563779"
  },
  {
    "start": "558000",
    "end": "637000"
  },
  {
    "text": "called piranha and I bet you guys know why it's called piranha because it's very aggressive it's looking for blood",
    "start": "563779",
    "end": "571310"
  },
  {
    "text": "and it attacks it when she sees it everybody has been heard by piranha in",
    "start": "571310",
    "end": "576829"
  },
  {
    "text": "our organization that's for sure but but it's it's it's based on the traditional",
    "start": "576829",
    "end": "582860"
  },
  {
    "text": "methods for validating security right with the we employ all of this all of",
    "start": "582860",
    "end": "590300"
  },
  {
    "text": "these detective controls into into our account so we man or monitor everything and we have we look in iCloud trail",
    "start": "590300",
    "end": "597500"
  },
  {
    "text": "we're looking at cloud watch we AWS config for example once we see an event",
    "start": "597500",
    "end": "603410"
  },
  {
    "text": "we will fire a lambda function in some cases it might be as simple as I just",
    "start": "603410",
    "end": "608480"
  },
  {
    "text": "saying let me send you a warning in other cases we'll try to remediate the",
    "start": "608480",
    "end": "613519"
  },
  {
    "text": "issue and if we can remediate that we're gonna kill the resource immediately that's just as ECS as it is but another",
    "start": "613519",
    "end": "622430"
  },
  {
    "text": "thing is like as Byron was mentioning a lot of these tools already like AWS config for example guard duty s3 they're",
    "start": "622430",
    "end": "629329"
  },
  {
    "text": "already been powered by AWS elk over so that's why we started to look into into",
    "start": "629329",
    "end": "634910"
  },
  {
    "text": "implementing this ourselves the business challenge was see see we",
    "start": "634910",
    "end": "640220"
  },
  {
    "start": "637000",
    "end": "729000"
  },
  {
    "text": "have a multi accounting structure we want to take away the ability for",
    "start": "640220",
    "end": "645410"
  },
  {
    "text": "customers to create RM roles so we wanted to centralize that and create a service that did that for you by doing",
    "start": "645410",
    "end": "652309"
  },
  {
    "text": "so we are getting guarantee consistency across all of our accounts we know that",
    "start": "652309",
    "end": "658699"
  },
  {
    "text": "when we deploy a role it is it is actually across all of our accounts and and then we added version",
    "start": "658699",
    "end": "664970"
  },
  {
    "text": "to those roles so when we deploy a role when we deploy a policy it is version",
    "start": "664970",
    "end": "670460"
  },
  {
    "text": "and by virtue of the inversion that I gave us the capabilities of doing roll backs so in the event that we deploy",
    "start": "670460",
    "end": "677030"
  },
  {
    "text": "something that was a mistake it's very easy to roll back to a previous state something that we couldn't do before and",
    "start": "677030",
    "end": "684980"
  },
  {
    "text": "also as we mentioned we have over 200 development teams and we wanted to reduce the complexities of building",
    "start": "684980",
    "end": "692270"
  },
  {
    "text": "I am policies it's very very difficult to build a good I am policy it's not a",
    "start": "692270",
    "end": "697400"
  },
  {
    "text": "trivial thing to do even for us who are like cloud security engineers that'sthat's very time-consuming and",
    "start": "697400",
    "end": "704030"
  },
  {
    "text": "complicated thing there are a lot of attributes in anion policy and sometimes",
    "start": "704030",
    "end": "709040"
  },
  {
    "text": "when you combine them together you get a policy evaluation that it's not necessarily what you were thinking you",
    "start": "709040",
    "end": "715010"
  },
  {
    "text": "were gonna get right so you get something that is not expected we wanted to eliminate that as well so we created",
    "start": "715010",
    "end": "720560"
  },
  {
    "text": "sort of like another language internally that allows you to sort of craft these policies in a much easier and secure way",
    "start": "720560",
    "end": "729370"
  },
  {
    "start": "729000",
    "end": "812000"
  },
  {
    "text": "but then we started as we got deeper and deeper in in building this this service",
    "start": "729370",
    "end": "737240"
  },
  {
    "text": "we started to to ask yourself a question wait a minute you know on AWS policy is",
    "start": "737240",
    "end": "745460"
  },
  {
    "text": "not just for I am right there's there's many different resources where you have resource based policies so what are we",
    "start": "745460",
    "end": "751910"
  },
  {
    "text": "doing with that do we know what we're doing with those with an extra market policy with a VPC endpoint policy so we",
    "start": "751910",
    "end": "757850"
  },
  {
    "text": "started to look at that as well so well might as well employ the same thing that we're doing for REM policies with all of",
    "start": "757850",
    "end": "763760"
  },
  {
    "text": "the other resource based policies right we're virtually in rolls but how do we",
    "start": "763760",
    "end": "768770"
  },
  {
    "text": "know that the new version is more permissive or more restrictive it could be that it should be more permissive",
    "start": "768770",
    "end": "775160"
  },
  {
    "text": "because we're adding functionality to the system but we by hand you really can't tell so this system is allowing us",
    "start": "775160",
    "end": "782660"
  },
  {
    "text": "to figure this out and understand this type of thing right and then how do we prove it how do we ensure that these",
    "start": "782660",
    "end": "788960"
  },
  {
    "text": "policies are correct right yeah we could use an IM policy static analyzer but",
    "start": "788960",
    "end": "795770"
  },
  {
    "text": "they mainly do like heuristic checks not gonna do much more we could hire a team of you 80 people that goes out and",
    "start": "795770",
    "end": "804770"
  },
  {
    "text": "checks every single policy manually that doesn't scale that doesn't scale under the enterprise level so we needed",
    "start": "804770",
    "end": "811340"
  },
  {
    "text": "something else right and that's what awl Kovac came into the picture right",
    "start": "811340",
    "end": "816590"
  },
  {
    "start": "812000",
    "end": "867000"
  },
  {
    "text": "what is a WS l cover simply simply put a WS l cover is a service from AWS that",
    "start": "816590",
    "end": "824960"
  },
  {
    "text": "allows you to validate an IM policy and its properties that's basically what it",
    "start": "824960",
    "end": "831590"
  },
  {
    "text": "does there's no magic it doesn't do any magic tricks it doesn't do anything crazy but it does",
    "start": "831590",
    "end": "837650"
  },
  {
    "text": "use proven mathematical methods and semantics based reasoning to accomplish that that is the key right it's based on",
    "start": "837650",
    "end": "844970"
  },
  {
    "text": "mathematical proofs so what we are getting out of it at the end is provable security in the cloud another thing is",
    "start": "844970",
    "end": "854990"
  },
  {
    "text": "that things we're started to use this system I hear that our cloud security engineers are sleeping better at night",
    "start": "854990",
    "end": "860660"
  },
  {
    "text": "just because we have this provable security so I would recommend that there'll be your friends so what what",
    "start": "860660",
    "end": "869840"
  },
  {
    "start": "867000",
    "end": "925000"
  },
  {
    "text": "you know yeah so we started to build the system what was the main goal the main goal was that we wanted to remove I am",
    "start": "869840",
    "end": "876950"
  },
  {
    "text": "api's from every single customer and every single user we don't want you to",
    "start": "876950",
    "end": "882110"
  },
  {
    "text": "create or have any access to I am rules or I am api's so we did that we've",
    "start": "882110",
    "end": "887720"
  },
  {
    "text": "removed them from every account then we needed to say well there's still that risk of privileged escalation right",
    "start": "887720",
    "end": "894140"
  },
  {
    "text": "because you have assumed role and you have passed role so how do we do that well we deploy tighter controls on the",
    "start": "894140",
    "end": "899930"
  },
  {
    "text": "roles that you can assume and the roles that you can pass and we we added all of these conditions to make sure that you",
    "start": "899930",
    "end": "906050"
  },
  {
    "text": "can only pass certain roles to certain services when they made sense and that's how we started to tie down the system",
    "start": "906050",
    "end": "912860"
  },
  {
    "text": "and then we're using silk over to validate what we're doing the cloud",
    "start": "912860",
    "end": "918110"
  },
  {
    "text": "security on the cloud on the public cloud team when we built and deploy these roles into your account of course",
    "start": "918110",
    "end": "927440"
  },
  {
    "start": "925000",
    "end": "981000"
  },
  {
    "text": "we we we have a large ecosystem of of cloud tools with millennium and we needed to make sure",
    "start": "927440",
    "end": "933890"
  },
  {
    "text": "that the services that we were creating seamlessly integrated into that",
    "start": "933890",
    "end": "939170"
  },
  {
    "text": "ecosystem and these are some of the integration points that I'll go into a few minutes but the main thing that we",
    "start": "939170",
    "end": "945470"
  },
  {
    "text": "got from this exercise is that we were able to shift this iron policy validation all the way to the left all",
    "start": "945470",
    "end": "951680"
  },
  {
    "text": "the way to the beginning so we're now instead of being reactive with the",
    "start": "951680",
    "end": "956870"
  },
  {
    "text": "piranha Network for iron policy we're now being very proactive because we're",
    "start": "956870",
    "end": "962089"
  },
  {
    "text": "not going to deploy a role unless SEL kava tells us that that role is compliant and we'll go into really deep",
    "start": "962089",
    "end": "969410"
  },
  {
    "text": "details into how we do that you know in the next few slides and as a result now",
    "start": "969410",
    "end": "975560"
  },
  {
    "text": "we're achieving you know provable security within our within our account so let's let's look at some of this",
    "start": "975560",
    "end": "983060"
  },
  {
    "start": "981000",
    "end": "1033000"
  },
  {
    "text": "architecture that we have doing account creation we would send a message to the",
    "start": "983060",
    "end": "989959"
  },
  {
    "text": "account provisioning service and this is a service that is responsible for not only creating the account but setting",
    "start": "989959",
    "end": "995839"
  },
  {
    "text": "all the the guardrails and the controls enable cloud trail write all the good stuff that you guys do already this is",
    "start": "995839",
    "end": "1002050"
  },
  {
    "text": "the service that is doing it for us we built it in internally but as part of",
    "start": "1002050",
    "end": "1008079"
  },
  {
    "text": "that now we're calling the role creation service the role creation service then is going to deploy or create every",
    "start": "1008079",
    "end": "1014680"
  },
  {
    "text": "single role that is needed by that particular target account to operate successfully going forward before that",
    "start": "1014680",
    "end": "1022269"
  },
  {
    "text": "was done either manually or the cloud security guys had to have to do that",
    "start": "1022269",
    "end": "1027640"
  },
  {
    "text": "manually which was a pain and it's error-prone now we've eliminated that aspect right next we say okay now",
    "start": "1027640",
    "end": "1035048"
  },
  {
    "start": "1033000",
    "end": "1132000"
  },
  {
    "text": "imagine if you're a development team you're going to start creating application roles service roles right so",
    "start": "1035049",
    "end": "1041829"
  },
  {
    "text": "through our framework when you create a pull request and that pull request is merged we automatically create or kick",
    "start": "1041829",
    "end": "1051640"
  },
  {
    "text": "off a code pipeline and that code pipeline has a stage which is the code bill and within code bill you'll do all",
    "start": "1051640",
    "end": "1060190"
  },
  {
    "text": "of the typical things that you do in an application run your unit tests compile do this do that but one of the things",
    "start": "1060190",
    "end": "1065830"
  },
  {
    "text": "that we're doing in there is we're reaching out to the role creation service because we see that you want to create a role or",
    "start": "1065830",
    "end": "1071920"
  },
  {
    "text": "that you want to update or modified an existing role right the role creation service then reaches out to sell cover",
    "start": "1071920",
    "end": "1079150"
  },
  {
    "text": "sense sell cover to individual a control policy and the policy that you're trying",
    "start": "1079150",
    "end": "1085240"
  },
  {
    "text": "to create and then very simply Sarkoja would tell us whether that role is actually compliant or non-compliant if",
    "start": "1085240",
    "end": "1092110"
  },
  {
    "text": "it is compliant we'll go ahead and deploy that role into your target account via CloudFormation and then",
    "start": "1092110",
    "end": "1099130"
  },
  {
    "text": "contact code bill saying hey go ahead and continue through the pipeline and then of course since we're using",
    "start": "1099130",
    "end": "1105220"
  },
  {
    "text": "CloudFormation now those roles are available for other CloudFormation stacks via imports and",
    "start": "1105220",
    "end": "1111930"
  },
  {
    "text": "you know again the the this happens when you're actually doing a pull request so",
    "start": "1111930",
    "end": "1119850"
  },
  {
    "text": "imagine that we're doing validation like code time you're not gonna be able to merge that if this doesn't if this",
    "start": "1119850",
    "end": "1127270"
  },
  {
    "text": "doesn't if the role that you're trying to do is not compliant and the last one",
    "start": "1127270",
    "end": "1133240"
  },
  {
    "start": "1132000",
    "end": "1204000"
  },
  {
    "text": "that we integrated and this is actually still in the work but we use it internally it's through a rest endpoint",
    "start": "1133240",
    "end": "1140170"
  },
  {
    "text": "so develop imagine a developer that is just onboarding onto onto our system or",
    "start": "1140170",
    "end": "1147310"
  },
  {
    "text": "even an existing developer that wants to use a new service like lake formation",
    "start": "1147310",
    "end": "1152980"
  },
  {
    "text": "for example a stage maker something that we haven't implemented yet well they start they could start crafting those",
    "start": "1152980",
    "end": "1159490"
  },
  {
    "text": "iron policies where you're from before they write a single line of code and then we go through the same process",
    "start": "1159490",
    "end": "1165160"
  },
  {
    "text": "right we'll go ahead and call the role creation servers cause serkova and then you get immediate feedback",
    "start": "1165160",
    "end": "1171910"
  },
  {
    "text": "whether the policy that you're trying to craft actually it's compliant or it's",
    "start": "1171910",
    "end": "1177400"
  },
  {
    "text": "non-compliant and furthermore you'll get details as to why that role is not",
    "start": "1177400",
    "end": "1183220"
  },
  {
    "text": "compliant it will tell you this API is being blocked by this SCP by the service control policy so now you know that you",
    "start": "1183220",
    "end": "1189460"
  },
  {
    "text": "have to go ahead and contact info second say hey why do I have this as you know API being blocked by the service control",
    "start": "1189460",
    "end": "1197020"
  },
  {
    "text": "policy very powerful this is my favor integration point actually now I'm going",
    "start": "1197020",
    "end": "1204570"
  },
  {
    "start": "1204000",
    "end": "1238000"
  },
  {
    "text": "to bring Aaron Fagan to the stage and he's going to show you everything about",
    "start": "1204570",
    "end": "1210799"
  },
  {
    "text": "Sal kava and policies on everything else thank you thanks mark",
    "start": "1210799",
    "end": "1222389"
  },
  {
    "text": "my name is Aaron Fagan principal cloud security engineer with millennium Management and I'm gonna take you",
    "start": "1222389",
    "end": "1227700"
  },
  {
    "text": "through the details of the solution my goal at the end of this is that you have all the building blocks that you need if",
    "start": "1227700",
    "end": "1233820"
  },
  {
    "text": "you want to go out and create the service yourselves internally so how do",
    "start": "1233820",
    "end": "1240690"
  },
  {
    "text": "we go about creating and validating all of these disparate I am roles at scale",
    "start": "1240690",
    "end": "1247049"
  },
  {
    "text": "across hundreds of accounts and different use cases what are some methods that we could use to validate",
    "start": "1247049",
    "end": "1253830"
  },
  {
    "text": "those roles and policies so there are some traditional methods I'm sure many",
    "start": "1253830",
    "end": "1258899"
  },
  {
    "text": "of you have used these you can do manual code reviews so maybe someone from the cloud security team or InfoSec sits down",
    "start": "1258899",
    "end": "1266700"
  },
  {
    "text": "with a developer and it's a very high bandwidth communication the developer knows exactly which api's are going to",
    "start": "1266700",
    "end": "1272999"
  },
  {
    "text": "be approved or not approved for their particular role but it's very time-consuming we can do static code",
    "start": "1272999",
    "end": "1280559"
  },
  {
    "text": "inspection as as Mark alluded to set up some some rules codify those and perhaps",
    "start": "1280559",
    "end": "1286049"
  },
  {
    "text": "call those as part of your CI CD pipeline we can put in detective",
    "start": "1286049",
    "end": "1292619"
  },
  {
    "text": "controls that look at the configurations of these policies inspect them after the",
    "start": "1292619",
    "end": "1297720"
  },
  {
    "text": "fact and potentially automatically remediate them and we can use service",
    "start": "1297720",
    "end": "1304109"
  },
  {
    "text": "control policies so we can get a nice warm and fuzzy feeling about the security of our account because it",
    "start": "1304109",
    "end": "1310470"
  },
  {
    "text": "limits the API is that any principal in the account can execute including root so it's very powerful and as Mark said",
    "start": "1310470",
    "end": "1319379"
  },
  {
    "text": "helps helps the cloud security engineer sleep at night but we can also use some",
    "start": "1319379",
    "end": "1324960"
  },
  {
    "text": "provable methods and this is what what Byron talked about with AWS cell Cova",
    "start": "1324960",
    "end": "1331140"
  },
  {
    "text": "one of these is I am boundaries which is powered by cell Cova so we can attach an ion policy to a role and we can limit",
    "start": "1331140",
    "end": "1338730"
  },
  {
    "text": "the API so that that rule can execute regardless of what's in its I am policy so if we attach a boundary to a role",
    "start": "1338730",
    "end": "1345690"
  },
  {
    "text": "that has administrative access it's still going to be limited by that boundary we can use the compare policies",
    "start": "1345690",
    "end": "1354150"
  },
  {
    "text": "API and I'm going to dig into this quite a bit more later and there's the policy checker API from",
    "start": "1354150",
    "end": "1361230"
  },
  {
    "text": "zelkova and so you can spot check certain configurations and attributes of policies as part of that API now we're",
    "start": "1361230",
    "end": "1369600"
  },
  {
    "text": "going to focus primarily on I am but zelkova does support evaluating resource",
    "start": "1369600",
    "end": "1375450"
  },
  {
    "text": "based policies so think of services like s3 sqs SNS very powerful and so when we",
    "start": "1375450",
    "end": "1383850"
  },
  {
    "text": "take these high bandwidth communications traditional methods where we get",
    "start": "1383850",
    "end": "1390690"
  },
  {
    "text": "feedback about what api's are approved and not approved and we combine those",
    "start": "1390690",
    "end": "1395790"
  },
  {
    "text": "with the high confidence provable methods that we can get from zelkova we",
    "start": "1395790",
    "end": "1400970"
  },
  {
    "text": "achieve what we like to call informative provable security and the reason why",
    "start": "1400970",
    "end": "1406530"
  },
  {
    "text": "that's important is we need to get feedback to our developers so that they can iterate on their policies without",
    "start": "1406530",
    "end": "1411990"
  },
  {
    "text": "having to necessarily interact with another team or at least if we can reduce those interactions so they can",
    "start": "1411990",
    "end": "1417570"
  },
  {
    "text": "iterate on their own it increases their agility and they can deploy that much faster all right so let's get into the",
    "start": "1417570",
    "end": "1424890"
  },
  {
    "start": "1423000",
    "end": "1606000"
  },
  {
    "text": "what what we're actually doing here there's two types of roles that we need",
    "start": "1424890",
    "end": "1430260"
  },
  {
    "text": "to create to support this service and mark alluded to these earlier one set of",
    "start": "1430260",
    "end": "1436169"
  },
  {
    "text": "roles we call CI CD pipeline roles and they support the service in the target",
    "start": "1436169",
    "end": "1442169"
  },
  {
    "text": "account we'll be creating I am resources in okay so we need certain hooks into that account to be",
    "start": "1442169",
    "end": "1448440"
  },
  {
    "text": "able to deploy roles and these are some of those that we need to stage as part of that account provisioning process so",
    "start": "1448440",
    "end": "1455760"
  },
  {
    "text": "we create an AWS CloudFormation role and so this role gets used by the developers",
    "start": "1455760",
    "end": "1460950"
  },
  {
    "text": "to create any I am resources for their applications",
    "start": "1460950",
    "end": "1468240"
  },
  {
    "text": "there's a nativist code billed role that the users passed the code built and an AWS code pipeline role that users pass",
    "start": "1468240",
    "end": "1475260"
  },
  {
    "text": "to code pipeline we also create a role creation service deployment role now",
    "start": "1475260",
    "end": "1480900"
  },
  {
    "text": "this is the role that creates the I am resources but the users don't have access to that it's leverage by our",
    "start": "1480900",
    "end": "1486600"
  },
  {
    "text": "service from the centralized services account but ultimately what we're trying",
    "start": "1486600",
    "end": "1492059"
  },
  {
    "text": "to create our application service roles and what we mean here are these are roles that are passed to AWS services as",
    "start": "1492059",
    "end": "1500909"
  },
  {
    "text": "part of developer applications so thank two instance roles lamda service roles",
    "start": "1500909",
    "end": "1506640"
  },
  {
    "text": "things of that nature again those are created by the role creation service deployment role and then they're",
    "start": "1506640",
    "end": "1513809"
  },
  {
    "text": "referenced in user applications as CloudFormation imports ok so just",
    "start": "1513809",
    "end": "1522770"
  },
  {
    "text": "putting some more detail behind what Mark had shown earlier we have those rules there and then we also need to",
    "start": "1522770",
    "end": "1528780"
  },
  {
    "text": "grant the users permissions to leverage those roles that we staged in the accounts so let's take a look at how we",
    "start": "1528780",
    "end": "1536429"
  },
  {
    "text": "do some of that what we're looking at here is the representation of the step",
    "start": "1536429",
    "end": "1544080"
  },
  {
    "text": "function branch that's responsible for creating the CI CD pipeline roles and",
    "start": "1544080",
    "end": "1549600"
  },
  {
    "text": "also updating those user permissions as they talked about so let's look at this lambda function that actually creates",
    "start": "1549600",
    "end": "1556710"
  },
  {
    "text": "the roles and and just look at a high level what it's doing so from the centralized services account we generate",
    "start": "1556710",
    "end": "1565890"
  },
  {
    "text": "a prescribed policy for each of these roles and then we do a cross account role assumption into the target account",
    "start": "1565890",
    "end": "1572370"
  },
  {
    "text": "create those CI CD roles and then create a table us parameter store parameters so",
    "start": "1572370",
    "end": "1579809"
  },
  {
    "text": "that we can version those roles after",
    "start": "1579809",
    "end": "1584850"
  },
  {
    "text": "that's done we wait for I am eventual consistency we do a verification that",
    "start": "1584850",
    "end": "1590850"
  },
  {
    "text": "the role was created successfully and it has the policy that we intended to apply to that rule",
    "start": "1590850",
    "end": "1596560"
  },
  {
    "text": "and once that's done we move on to the last step which is to update the user permissions so let's take a look at that",
    "start": "1596560",
    "end": "1603670"
  },
  {
    "text": "lambda function inside of there what",
    "start": "1603670",
    "end": "1609670"
  },
  {
    "start": "1606000",
    "end": "1716000"
  },
  {
    "text": "we're looking at here is the the user permissions I am policy where we're going to grant access to that CloudFormation role we've",
    "start": "1609670",
    "end": "1617160"
  },
  {
    "text": "staged in the account and so what we need to do is allow them to to pass that",
    "start": "1617160",
    "end": "1622330"
  },
  {
    "text": "role to CloudFormation but the IM pass role permission is very sensitive so unrestricted you could potentially",
    "start": "1622330",
    "end": "1629110"
  },
  {
    "text": "escalate your privileges by passing perhaps like an administrative role to NEC to instance and using that to",
    "start": "1629110",
    "end": "1635370"
  },
  {
    "text": "escalate your privileges and we certainly don't want that as part of our service so we put a resource restriction",
    "start": "1635370",
    "end": "1641500"
  },
  {
    "text": "because we created this role so that they can only pass the confirmation role",
    "start": "1641500",
    "end": "1646590"
  },
  {
    "text": "we also add a condition so they can only pass that role to the CloudFormation",
    "start": "1646590",
    "end": "1652570"
  },
  {
    "text": "service similarly on the CloudFormation role itself we restrict the assumed role",
    "start": "1652570",
    "end": "1661120"
  },
  {
    "text": "api to only the CloudFormation service and so assume role is just as sensitive",
    "start": "1661120",
    "end": "1666880"
  },
  {
    "text": "as the pass role so we need to secure that side as well all right so we're",
    "start": "1666880",
    "end": "1673210"
  },
  {
    "text": "ready to start creating application service roles in target accounts we've staged our CI CD pipeline roles we've",
    "start": "1673210",
    "end": "1679990"
  },
  {
    "text": "updated the user permissions so let's look at what what this process looks like so just to remind you this is this",
    "start": "1679990",
    "end": "1687580"
  },
  {
    "text": "is the workflow and this is a representation of the step function",
    "start": "1687580",
    "end": "1693100"
  },
  {
    "text": "branch of the role creation service that creates these application service roles",
    "start": "1693100",
    "end": "1698260"
  },
  {
    "text": "the first thing I want to talk about is how we've taken a working backwards",
    "start": "1698260",
    "end": "1704110"
  },
  {
    "text": "approach to the requests that go into the developers send in to the service in",
    "start": "1704110",
    "end": "1713290"
  },
  {
    "text": "order to request these roles so let's take a look at what that looks like so using our framework the developer",
    "start": "1713290",
    "end": "1721810"
  },
  {
    "text": "creates the mo file similar to what you would see here so we're creating an ec2 role the",
    "start": "1721810",
    "end": "1727980"
  },
  {
    "text": "be passed to the ec2 service and we've provided some baseline policies so there",
    "start": "1727980",
    "end": "1735900"
  },
  {
    "text": "are certain api's that we noticed many",
    "start": "1735900",
    "end": "1741059"
  },
  {
    "text": "developers are using innocuous api's things like being able to utilize the",
    "start": "1741059",
    "end": "1747030"
  },
  {
    "text": "kms keys that we staged in the account like like burner spoke about today the bring your own key model being able to",
    "start": "1747030",
    "end": "1754710"
  },
  {
    "text": "write to cloud watch logs and so the the one line of code here where we're",
    "start": "1754710",
    "end": "1760320"
  },
  {
    "text": "listening the default role policies for an ec2 instance was actually a hundred and seventy four lines of json and we",
    "start": "1760320",
    "end": "1766679"
  },
  {
    "text": "didn't see any reason why developers needed to write that over and over and over again they can they can just add",
    "start": "1766679",
    "end": "1771840"
  },
  {
    "text": "that one line and and they get those baseline policies but of course the",
    "start": "1771840",
    "end": "1776940"
  },
  {
    "text": "baseline policies aren't going to fulfill every use case and you don't want to make those too generic and so we",
    "start": "1776940",
    "end": "1784590"
  },
  {
    "text": "have a simple way to request additional AP is you can list actions and resources",
    "start": "1784590",
    "end": "1789690"
  },
  {
    "text": "and conditions just like in a normal eye on policy there are certain services",
    "start": "1789690",
    "end": "1797790"
  },
  {
    "text": "that will require AWS managed policy errands to be attached and so we have a",
    "start": "1797790",
    "end": "1805669"
  },
  {
    "text": "section here where you can do that one of those is Amazon eks and so here we're",
    "start": "1805669",
    "end": "1812600"
  },
  {
    "text": "requesting the Amazon eks worker node policy also be attached to this role and",
    "start": "1812600",
    "end": "1817980"
  },
  {
    "text": "so you can see this is very simple it's very easy to read and it helps developers out quite a bit when trying",
    "start": "1817980",
    "end": "1825299"
  },
  {
    "text": "to put together and construct these ion policies alright so we've sent in our",
    "start": "1825299",
    "end": "1832770"
  },
  {
    "text": "request and now we're really going to get to the heart of the service which is the evaluate service rule policy lambda",
    "start": "1832770",
    "end": "1839370"
  },
  {
    "text": "function okay so the inputs to this are",
    "start": "1839370",
    "end": "1845220"
  },
  {
    "text": "the the requested role and the lambda then looks at our rules engine and",
    "start": "1845220",
    "end": "1851400"
  },
  {
    "text": "generates a control policy for that role type so for requesting an ec2 instance",
    "start": "1851400",
    "end": "1856500"
  },
  {
    "text": "role or a lamb barrel there's going to be a control policy that limits the",
    "start": "1856500",
    "end": "1861650"
  },
  {
    "text": "missions that are allowed for that particular functionality we send both of",
    "start": "1861650",
    "end": "1867380"
  },
  {
    "text": "these into zelkova we compare the requested role against the control policy and if zelkova determines that",
    "start": "1867380",
    "end": "1875450"
  },
  {
    "text": "that is a compliant policy we go ahead and create that role we just move on in",
    "start": "1875450",
    "end": "1881600"
  },
  {
    "text": "the event that that role is determined to be non-compliant we do some additional logic on that to generate why",
    "start": "1881600",
    "end": "1888740"
  },
  {
    "text": "that role is non-compliant right because we want to get that fast feedback to the developers so they can iterate on their",
    "start": "1888740",
    "end": "1894830"
  },
  {
    "text": "roles because ultimately we want them to be able to deploy their applications and so we use the I am simulate principal",
    "start": "1894830",
    "end": "1903170"
  },
  {
    "text": "policy API which I will talk about more later we also have our own custom logic",
    "start": "1903170",
    "end": "1908390"
  },
  {
    "text": "secret sauce that we supplement that simulation with and then we send those",
    "start": "1908390",
    "end": "1914570"
  },
  {
    "text": "results to the policy compliance result and get it back to the developer okay so",
    "start": "1914570",
    "end": "1922100"
  },
  {
    "text": "so let's look more at how we use zelkova and some examples of how to use that API",
    "start": "1922100",
    "end": "1930909"
  },
  {
    "start": "1931000",
    "end": "1963000"
  },
  {
    "text": "so as I mentioned before we use the compare policies API and it's very",
    "start": "1931390",
    "end": "1937070"
  },
  {
    "text": "similar to the diagram I just showed you you you it accepts in a policy to evaluate and a control policy to",
    "start": "1937070",
    "end": "1943580"
  },
  {
    "text": "evaluate it against send those in as inputs and we get some sort of comparison result there's a few",
    "start": "1943580",
    "end": "1950570"
  },
  {
    "text": "different states that that result can have more permissive less permissive and",
    "start": "1950570",
    "end": "1955760"
  },
  {
    "text": "comparable and equivalent and we'll walk through some examples to illustrate some",
    "start": "1955760",
    "end": "1960830"
  },
  {
    "text": "of those states okay so here's a sample",
    "start": "1960830",
    "end": "1966130"
  },
  {
    "start": "1963000",
    "end": "2185000"
  },
  {
    "text": "policy request so you can imagine this is coming in from a developer now these are extremely simple policies just meant",
    "start": "1966130",
    "end": "1973700"
  },
  {
    "text": "to illustrate the the functionality as L Cova and there's only so much room on the slide for for a policy but I think",
    "start": "1973700",
    "end": "1981350"
  },
  {
    "text": "it illustrates the point so in the requested policy we have an allow put object and s3 get object with a resource",
    "start": "1981350",
    "end": "1988190"
  },
  {
    "text": "of star anyone has anyone ever seen like",
    "start": "1988190",
    "end": "1993410"
  },
  {
    "text": "s3 star in your your policies just a show of hands anyone who's yes many that's kind of",
    "start": "1993410",
    "end": "2003339"
  },
  {
    "text": "what we're trying to avoid here now in this case we have a resource of star in",
    "start": "2003339",
    "end": "2008889"
  },
  {
    "text": "the control policy we haven't allow put object s3 get object for a particular",
    "start": "2008889",
    "end": "2014440"
  },
  {
    "text": "resource my bucket if we send these into zelkova we're going to get a result of",
    "start": "2014440",
    "end": "2020499"
  },
  {
    "text": "more permissive and so what this is telling us is that the requested policy that was sent in as more permissions is",
    "start": "2020499",
    "end": "2028179"
  },
  {
    "text": "more permissive than the control policy so in this case in the rule creation service we would not create that rule",
    "start": "2028179",
    "end": "2037200"
  },
  {
    "text": "let's look at another example in this case the requested policy is allow s3",
    "start": "2037559",
    "end": "2044019"
  },
  {
    "text": "put object now we have a resource restriction for my bucket our control",
    "start": "2044019",
    "end": "2050230"
  },
  {
    "text": "policy is allow s3 put object and s3 get object for the resource my bucket if we",
    "start": "2050230",
    "end": "2058690"
  },
  {
    "text": "send these into zelkova we get a comparison result of less permissive and",
    "start": "2058690",
    "end": "2063849"
  },
  {
    "text": "so what this is saying is that the requested policy has fewer permissions than the control policy and that's",
    "start": "2063849",
    "end": "2071408"
  },
  {
    "text": "because the get object API appears in the control policy but not in the requested policy this is good right it's",
    "start": "2071409",
    "end": "2078700"
  },
  {
    "text": "less permissive and so in this case we'd go ahead and create that role ok one",
    "start": "2078700",
    "end": "2086408"
  },
  {
    "text": "more example this is a tricky one so so follow along our requested policy is",
    "start": "2086409",
    "end": "2094480"
  },
  {
    "text": "effect allow for s3 delete object API for my bucket the control policy is",
    "start": "2094480",
    "end": "2102329"
  },
  {
    "text": "again allow s3 put object and s3 get object for the resource of my bucket so",
    "start": "2102329",
    "end": "2109750"
  },
  {
    "text": "if we send these into zelkova we get a result of incomparable ok so what does",
    "start": "2109750",
    "end": "2115539"
  },
  {
    "text": "this mean so if I look at the control policy it's allowing for s3 put object",
    "start": "2115539",
    "end": "2122859"
  },
  {
    "text": "in s3 get object but those api's don't appear in the Weston policy and so in that way the",
    "start": "2122859",
    "end": "2129309"
  },
  {
    "text": "requested policy is less permissive that's good we want less permissive but",
    "start": "2129309",
    "end": "2134520"
  },
  {
    "text": "the requested policy includes the delete object API and it does that does not",
    "start": "2134520",
    "end": "2140859"
  },
  {
    "text": "appear in the control policy and so in that way the requested policy is also more permissive if it's more permissive",
    "start": "2140859",
    "end": "2148030"
  },
  {
    "text": "at all in any way than the control policy we're not going to create that rule okay so now we have our zelkova",
    "start": "2148030",
    "end": "2160240"
  },
  {
    "text": "result in the cases where that policy is determined to be non-compliant we want",
    "start": "2160240",
    "end": "2167859"
  },
  {
    "text": "to generate as a mention the feedback for the developer so that they know how to modify their policy in order to be",
    "start": "2167859",
    "end": "2175030"
  },
  {
    "text": "compliant and so let's take a look at the simulate principal policy API and",
    "start": "2175030",
    "end": "2180579"
  },
  {
    "text": "how we use that to generate some some of that feedback and you'll notice that the",
    "start": "2180579",
    "end": "2186910"
  },
  {
    "start": "2185000",
    "end": "2421000"
  },
  {
    "text": "inputs to the simulate principal policy API are very similar to zelkova it",
    "start": "2186910",
    "end": "2192220"
  },
  {
    "text": "accepts in a proposed action list and a resource list so this would be like our",
    "start": "2192220",
    "end": "2198010"
  },
  {
    "text": "requested policy and so we decompose that in the code and into these lists it",
    "start": "2198010",
    "end": "2203440"
  },
  {
    "text": "also like steps in the the same control policy and then it attaches that control",
    "start": "2203440",
    "end": "2208960"
  },
  {
    "text": "policy to the role and evaluates each of those actions and resources against that",
    "start": "2208960",
    "end": "2215349"
  },
  {
    "text": "policy to see if they would be permitted or not and the result that it kicks back is are the the evaluation results and",
    "start": "2215349",
    "end": "2222670"
  },
  {
    "text": "we'll take a look at what exactly these look like so so we have more examples so",
    "start": "2222670",
    "end": "2229559"
  },
  {
    "text": "here we have an action list of ec to create volume with a resource list of",
    "start": "2229559",
    "end": "2235450"
  },
  {
    "text": "star our control policy is allow ec2 instances star and if we send this into",
    "start": "2235450",
    "end": "2243400"
  },
  {
    "text": "the simulate principal policy API we're going to get a JSON result like like",
    "start": "2243400",
    "end": "2251890"
  },
  {
    "text": "this and so what this is saying is we have an a valid decision of an implicit deny basically what that's saying is the",
    "start": "2251890",
    "end": "2259599"
  },
  {
    "text": "create Volume API that we requested doesn't appear in the control policy and so it's",
    "start": "2259599",
    "end": "2265800"
  },
  {
    "text": "being implicitly denied so you can imagine the developer when they get this feedback they can remove that from their",
    "start": "2265800",
    "end": "2272880"
  },
  {
    "text": "policy if it's not really needed and then they can move forward if it is needed then they may need to take a",
    "start": "2272880",
    "end": "2277920"
  },
  {
    "text": "different action reach out to the clutter Numa team or the cloud security team",
    "start": "2277920",
    "end": "2283849"
  },
  {
    "text": "another example here we have ec2 creating at Gateway as our action requested action and a resource list of",
    "start": "2285230",
    "end": "2292920"
  },
  {
    "text": "star in our control policy we have again allow ec2 described instances we send",
    "start": "2292920",
    "end": "2298950"
  },
  {
    "text": "this into the simulated principal policy API call and I know you all know that we're gonna get an implicit deny that",
    "start": "2298950",
    "end": "2304890"
  },
  {
    "text": "you could tell that creating that gateway is not in the list of the control policy but this is interesting",
    "start": "2304890",
    "end": "2310710"
  },
  {
    "text": "because there's some additional information in the evaluation results",
    "start": "2310710",
    "end": "2315750"
  },
  {
    "text": "JSON so we see there's this organization decision detail allowed by organizations",
    "start": "2315750",
    "end": "2322260"
  },
  {
    "text": "is false okay so what this is saying is not only does it not appear in the control policy but we're also denying",
    "start": "2322260",
    "end": "2328350"
  },
  {
    "text": "this by service control policy at the organization's level and so perhaps there's a different team that you would",
    "start": "2328350",
    "end": "2334470"
  },
  {
    "text": "need to interact with in order to whitelist that API and so we can give that information to the developers as",
    "start": "2334470",
    "end": "2341010"
  },
  {
    "text": "well one more example here we're",
    "start": "2341010",
    "end": "2346410"
  },
  {
    "text": "requesting an action of s3 put object for the resource my bucket love that my",
    "start": "2346410",
    "end": "2353340"
  },
  {
    "text": "bucket in the control policy we have an",
    "start": "2353340",
    "end": "2358830"
  },
  {
    "text": "effect allow of s3 put object on the court bucket send those in and our",
    "start": "2358830",
    "end": "2364710"
  },
  {
    "text": "evaluation results come back again we're getting an implicit denied here but we",
    "start": "2364710",
    "end": "2369840"
  },
  {
    "text": "have some additional information again the resource specific results indicate",
    "start": "2369840",
    "end": "2374880"
  },
  {
    "text": "that we're getting an implicit deny on a particular resource my bucket and so if the developer has this information",
    "start": "2374880",
    "end": "2381150"
  },
  {
    "text": "perhaps they can modify this to use a compliant bucket alright so we have all",
    "start": "2381150",
    "end": "2389910"
  },
  {
    "text": "this valuable feedback gonna manipulate it in code to make it look very nice and really readable and",
    "start": "2389910",
    "end": "2395490"
  },
  {
    "text": "pretty so what does that feedback look like to the developer there's three",
    "start": "2395490",
    "end": "2402119"
  },
  {
    "text": "different ways they can get this feedback as Mark mentioned they can do ad hoc submission of these these",
    "start": "2402119",
    "end": "2407550"
  },
  {
    "text": "policies to the API gateway they can get it on merge in github and of course",
    "start": "2407550",
    "end": "2413700"
  },
  {
    "text": "we're going to enforce this in the CI CD pipelines where the applications are being deployed and so here's an example",
    "start": "2413700",
    "end": "2421920"
  },
  {
    "start": "2421000",
    "end": "2467000"
  },
  {
    "text": "of the code build logs for a particular request for indicates there we're",
    "start": "2421920",
    "end": "2428849"
  },
  {
    "text": "creating a stack for the roles called uks cluster we're creating three different roles",
    "start": "2428849",
    "end": "2433859"
  },
  {
    "text": "the eks I am cluster all the eks I am worker role and the ec2 role we would",
    "start": "2433859",
    "end": "2441720"
  },
  {
    "text": "list the event that was sent into the service and also the the response",
    "start": "2441720",
    "end": "2446790"
  },
  {
    "text": "there's just only so much space in here and what we're really interested in is",
    "start": "2446790",
    "end": "2452040"
  },
  {
    "text": "the green text which indicates that yes we were successful in creating each of these three roles and then that code",
    "start": "2452040",
    "end": "2458520"
  },
  {
    "text": "pipeline would proceed on to deploy those application templates that reference those roles happy green",
    "start": "2458520",
    "end": "2467040"
  },
  {
    "start": "2467000",
    "end": "2533000"
  },
  {
    "text": "checkmark and away we go another example of how about a non-complying api so",
    "start": "2467040",
    "end": "2473069"
  },
  {
    "text": "we're requesting something that an API that doesn't appear in the control policy and so this is what the developer",
    "start": "2473069",
    "end": "2479369"
  },
  {
    "text": "sees okay your API EC to create volume was denied because it's not in the approved API list that that's valuable",
    "start": "2479369",
    "end": "2486660"
  },
  {
    "text": "feedback we're even telling them who they need to contact if they don't want to remove that API you can imagine again",
    "start": "2486660",
    "end": "2494730"
  },
  {
    "text": "if I have a very large and complex I am policy there could be several of",
    "start": "2494730",
    "end": "2501750"
  },
  {
    "text": "these api's so one of the things that I just want to mention is we evaluate the",
    "start": "2501750",
    "end": "2506880"
  },
  {
    "text": "entire policy we don't find the first failure and then exit out this is no not",
    "start": "2506880",
    "end": "2513240"
  },
  {
    "text": "really helpful for the developer right so we evaluate every API we put all of those results in and they would get all",
    "start": "2513240",
    "end": "2519990"
  },
  {
    "text": "of these for the roles so if they're going to remediate they can remediate all of those things and then there Paul she should be compliant they they do it",
    "start": "2519990",
    "end": "2527340"
  },
  {
    "text": "once and they move on",
    "start": "2527340",
    "end": "2530450"
  },
  {
    "start": "2533000",
    "end": "2574000"
  },
  {
    "text": "here's what the feedback looks like if we're missing a resource restriction or",
    "start": "2533600",
    "end": "2539130"
  },
  {
    "text": "there's an incorrect resource restriction on one of those AP is so ap",
    "start": "2539130",
    "end": "2544410"
  },
  {
    "text": "is three put object was to nine because the API is approved but not for the following resources right so we're",
    "start": "2544410",
    "end": "2551340"
  },
  {
    "text": "telling them is if they can just modify that resource to the to the to one of",
    "start": "2551340",
    "end": "2556380"
  },
  {
    "text": "the approved buckets they should be should be good to go similarly for it for like a kms request that they request decrypt for a key",
    "start": "2556380",
    "end": "2563940"
  },
  {
    "text": "they're not authorized we're telling them that in who again who to contact for assistance and here's an example of",
    "start": "2563940",
    "end": "2575810"
  },
  {
    "start": "2574000",
    "end": "2631000"
  },
  {
    "text": "the feedback that they would get if an API is denied by a service control policy here were we're blocking the API",
    "start": "2575810",
    "end": "2584040"
  },
  {
    "text": "easy to create Internet gateway by service control policy certainly that's",
    "start": "2584040",
    "end": "2590010"
  },
  {
    "text": "an avenue for data exfiltration and so it looks like here that's being denied",
    "start": "2590010",
    "end": "2595110"
  },
  {
    "text": "at the account level okay now I think",
    "start": "2595110",
    "end": "2602730"
  },
  {
    "text": "you can see how we've taken the provable methods the compare policies API of",
    "start": "2602730",
    "end": "2609120"
  },
  {
    "text": "zelkova it gives us high confidence that the rules were deploying our secure but",
    "start": "2609120",
    "end": "2614820"
  },
  {
    "text": "we're combining that with some of the more traditional methods of static code inspection and feedback to the",
    "start": "2614820",
    "end": "2620370"
  },
  {
    "text": "developers because they're our customers and we want them to be able to deploy applications and we want to help them",
    "start": "2620370",
    "end": "2625710"
  },
  {
    "text": "deploy applications securely so what are",
    "start": "2625710",
    "end": "2633990"
  },
  {
    "start": "2631000",
    "end": "2786000"
  },
  {
    "text": "some lessons learned from from this process the first one would be scale",
    "start": "2633990",
    "end": "2639690"
  },
  {
    "text": "your security team so so if you if you haven't run into this yet you will if",
    "start": "2639690",
    "end": "2646500"
  },
  {
    "text": "you're doing manual code reviews and that can be very very time-consuming and",
    "start": "2646500",
    "end": "2653670"
  },
  {
    "text": "it's an arduous process and so if you find some way to codify those rules",
    "start": "2653670",
    "end": "2659530"
  },
  {
    "text": "it'll go a long way to to allowing your cloud security engineers to move on to other parts of your infrastructure that",
    "start": "2659530",
    "end": "2665540"
  },
  {
    "text": "they can secure if you build it they will come and comply and so this really",
    "start": "2665540",
    "end": "2672800"
  },
  {
    "text": "gets to its it's relatively easy to create very restrictive policies right",
    "start": "2672800",
    "end": "2678560"
  },
  {
    "text": "you we can lock down using service control policies we can make every API unavailable and will be very secure but",
    "start": "2678560",
    "end": "2684770"
  },
  {
    "text": "it's like to be very functional and so what we really tried to do is design the",
    "start": "2684770",
    "end": "2691820"
  },
  {
    "text": "service from the developers perspective but make it secure right so if we make",
    "start": "2691820",
    "end": "2697190"
  },
  {
    "text": "it easier for them to comply than not comply they'll comply right so if we do",
    "start": "2697190",
    "end": "2704000"
  },
  {
    "text": "things like simplifying the way that they construct these policies if we give them feedback that allows them to",
    "start": "2704000",
    "end": "2710090"
  },
  {
    "text": "iterate on those policies without having to meet with us to tell them basically what it says in the code bill Boggs",
    "start": "2710090",
    "end": "2716230"
  },
  {
    "text": "they're gonna be happy we're gonna be happy everyone's gonna move faster the business is happy everybody's happy it's",
    "start": "2716230",
    "end": "2724550"
  },
  {
    "text": "the way to go finally leverage zelkova to ensure",
    "start": "2724550",
    "end": "2730880"
  },
  {
    "text": "provable security I can't stress this enough having gone down the path of",
    "start": "2730880",
    "end": "2736300"
  },
  {
    "text": "static code inspection and you know trying to verify every attribute in",
    "start": "2736300",
    "end": "2741650"
  },
  {
    "text": "every different portion of these very very complex policies it can be very",
    "start": "2741650",
    "end": "2750830"
  },
  {
    "text": "very challenging and inevitably inevitably they're going to be gaps there are new services released all the time",
    "start": "2750830",
    "end": "2756590"
  },
  {
    "text": "it's just really incredibly difficult to design these rules to be that dynamic",
    "start": "2756590",
    "end": "2761840"
  },
  {
    "text": "and zelkova makes it extremely easy you saw what we do you take a policy you",
    "start": "2761840",
    "end": "2767930"
  },
  {
    "text": "have another policy you compare them you send them into the API it takes two inputs I mean it doesn't get any easier",
    "start": "2767930",
    "end": "2773869"
  },
  {
    "text": "than that and it's just it's been a fantastic way to simplify how we verify",
    "start": "2773869",
    "end": "2781700"
  },
  {
    "text": "that the rules were creating are what we intended so with that I'll turn it back",
    "start": "2781700",
    "end": "2788180"
  },
  {
    "text": "over to mark to talk a little bit about our roadmap and what's coming up next thank you so",
    "start": "2788180",
    "end": "2800500"
  },
  {
    "text": "if you want to learn a lot more about Selleck over that's actually a great white paper on the website that byron",
    "start": "2800500",
    "end": "2807940"
  },
  {
    "text": "alluded to before that i'm sure you can find it in Google - it's called semantic",
    "start": "2807940",
    "end": "2813759"
  },
  {
    "text": "based reasoning for AWS access policies using SM T's and it goes into great",
    "start": "2813759",
    "end": "2820750"
  },
  {
    "text": "details behind the SMT resolvers and all of the open source tools and the way",
    "start": "2820750",
    "end": "2826329"
  },
  {
    "text": "they actually do the math on the proving within serkova and if you like math plenty of greek",
    "start": "2826329",
    "end": "2832869"
  },
  {
    "text": "letters in there as well so what's up for next day for us what's next for us",
    "start": "2832869",
    "end": "2840750"
  },
  {
    "start": "2835000",
    "end": "2978000"
  },
  {
    "text": "we I guess address the problem of I am policies but now as I was mentioning",
    "start": "2840750",
    "end": "2849730"
  },
  {
    "text": "before there's a lot more than just I am policies a lot of resource-based policies within AWS that we want to",
    "start": "2849730",
    "end": "2856059"
  },
  {
    "text": "tackle next so we're going to extend our use of cell cover to all of the VPC endpoints there's actually another API",
    "start": "2856059",
    "end": "2863019"
  },
  {
    "text": "call the policy shaker API that we have not been using and that's actually a really great API because it comes with a",
    "start": "2863019",
    "end": "2870549"
  },
  {
    "text": "lot of rules built in into it already but also gives you an extension point",
    "start": "2870549",
    "end": "2876190"
  },
  {
    "text": "that you can build your own rules so we're looking to use that extensively in the next iteration of this service and",
    "start": "2876190",
    "end": "2883059"
  },
  {
    "text": "then additionally we want to use theorists we we're now doing very good at I am policies will implement Sequoia",
    "start": "2883059",
    "end": "2890650"
  },
  {
    "text": "in other areas but still the networking it's not something that we can say we",
    "start": "2890650",
    "end": "2896589"
  },
  {
    "text": "have provable security we really have to do a lot of detective controls to make sure that when we deploy a DC to",
    "start": "2896589",
    "end": "2903640"
  },
  {
    "text": "instance it's not reachable from from the outside of the company and that's what Tiras comes into play so we want to",
    "start": "2903640",
    "end": "2909940"
  },
  {
    "text": "leverage the other tools from the Arg group which is called terrors into our",
    "start": "2909940",
    "end": "2915549"
  },
  {
    "text": "other services that we have we have many many services one of them is the V PC provisioning service for example that",
    "start": "2915549",
    "end": "2922480"
  },
  {
    "text": "basically creates V pcs for our clients on all of the networking we want to make",
    "start": "2922480",
    "end": "2927519"
  },
  {
    "text": "sure that Tyrus is backing that service so that we can feel more comfortable with the resources that we're deploying",
    "start": "2927519",
    "end": "2935319"
  },
  {
    "text": "onto those V pcs or not actually are secure and are not reachable from outside of the company from outside the",
    "start": "2935319",
    "end": "2942130"
  },
  {
    "text": "internet or the other way around as well and that's about it I would recommend",
    "start": "2942130",
    "end": "2948039"
  },
  {
    "text": "that you guys use I'll cover it is a service that is already being used",
    "start": "2948039",
    "end": "2953609"
  },
  {
    "text": "internally at Amazon and an AWS to power all of their security so it is a win-win",
    "start": "2953609",
    "end": "2961509"
  },
  {
    "text": "situation as you saw from Aaron is extremely easy to use it doesn't require",
    "start": "2961509",
    "end": "2966750"
  },
  {
    "text": "that much effort to get onboard and these guys are coming up with more and",
    "start": "2966750",
    "end": "2972730"
  },
  {
    "text": "more rules that will make you feel more comfortable when you go to bed at night",
    "start": "2972730",
    "end": "2977849"
  },
  {
    "text": "we'll take questions and questions now I",
    "start": "2977849",
    "end": "2984250"
  },
  {
    "start": "2978000",
    "end": "3013000"
  },
  {
    "text": "guess later here on the side of the on the side of the of the stage thank you",
    "start": "2984250",
    "end": "2992950"
  },
  {
    "text": "for coming and so please fill out the surveys oh yes yeah yeah you got to do",
    "start": "2992950",
    "end": "3001680"
  },
  {
    "text": "that cannot you cannot leave unless you do that yeah we'll take questions over",
    "start": "3001680",
    "end": "3007019"
  },
  {
    "text": "on the side here okay thank you everybody thank you",
    "start": "3007019",
    "end": "3011630"
  }
]