[
  {
    "start": "0",
    "end": "80000"
  },
  {
    "text": "how are your doing I don't need to shout do I you're all wearing headphones forget it's a strangest experience I've",
    "start": "800",
    "end": "6359"
  },
  {
    "text": "ever had possibly um my name is Martin BB I'm a developer evangelist at AWS and I'm here",
    "start": "6359",
    "end": "13110"
  },
  {
    "text": "to talk to you about AWS and dotnet specifically this is an important slide",
    "start": "13110",
    "end": "19050"
  },
  {
    "text": "for me this is called my inception slide you'll notice that on the on the right hand side there's a picture of me giving",
    "start": "19050",
    "end": "25410"
  },
  {
    "text": "a talk in front of this slide deck that currently goes back that's in front of a slide deck in front of the slide deck 11",
    "start": "25410",
    "end": "31710"
  },
  {
    "text": "times now so if anyone's got a phone and wants to take a picture then I'll include it in my next talk so I'm going to go a 12 levels deep in Inception um",
    "start": "31710",
    "end": "39090"
  },
  {
    "text": "I'm a software developer and I've been a software developer since I was 16 years of age I've been developing now for over",
    "start": "39090",
    "end": "46379"
  },
  {
    "text": "20 years I'll do the math on that that makes me 21 years old I work at Amazon",
    "start": "46379",
    "end": "54809"
  },
  {
    "text": "Web Services I had a small stint Oracle and then before that I was at Microsoft",
    "start": "54809",
    "end": "60390"
  },
  {
    "text": "for eight years as an evangelist and software engineer not always in the",
    "start": "60390",
    "end": "66689"
  },
  {
    "text": "dotnet space but predominately the Nautilus basement before that I was a full-time dotnet software engineer I",
    "start": "66689",
    "end": "72600"
  },
  {
    "text": "like to say engineer I was a web developer but I like to say engineer could it makes me feel impressive so",
    "start": "72600",
    "end": "80090"
  },
  {
    "start": "80000",
    "end": "210000"
  },
  {
    "text": "at last year's reinvent they were saying that it was ten years of innovation for",
    "start": "80760",
    "end": "89070"
  },
  {
    "text": "for AWS using Windows and so we've been",
    "start": "89070",
    "end": "94240"
  },
  {
    "text": "running Windows workloads since 2008 and there's a lot of stuff which has",
    "start": "94240",
    "end": "99310"
  },
  {
    "text": "happened since our very first you know ec2 instance was made available with",
    "start": "99310",
    "end": "104590"
  },
  {
    "text": "Windows Server 2003 and there's lots of innovation that's happened over that 10 years I've actually added one because",
    "start": "104590",
    "end": "109870"
  },
  {
    "text": "it's nearly 11 years of innovation for Windows on AWS but huge companies like Autodesk and and many many others are",
    "start": "109870",
    "end": "117070"
  },
  {
    "text": "using dotnet and Windows and running that on on Amazon and have been doing",
    "start": "117070",
    "end": "122470"
  },
  {
    "text": "that for 11 years so we've got a lot of experience and running Windows workloads",
    "start": "122470",
    "end": "127540"
  },
  {
    "text": "and dotnet and what's happened over time is not only if we had good support for",
    "start": "127540",
    "end": "132820"
  },
  {
    "text": "the foundational services like ec2 and the servers and the instance types and the machine images what we've tried to",
    "start": "132820",
    "end": "139180"
  },
  {
    "text": "do is also innovate with sequel server giving you the best performance for sequel server but not only that also",
    "start": "139180",
    "end": "145510"
  },
  {
    "text": "providing managed services so providing with RDS - so you can run sequel workloads easily and simply and with",
    "start": "145510",
    "end": "153790"
  },
  {
    "text": "dotnet we've also been adding support not only just making dotnet run but how",
    "start": "153790",
    "end": "159489"
  },
  {
    "text": "do we make that net delightful how do we make it run the best it can possibly run on AWS how can we make it faster how can",
    "start": "159489",
    "end": "165459"
  },
  {
    "text": "make it easier how can make the development experience easier I'm a principal dotnet evangelist that's my",
    "start": "165459",
    "end": "170860"
  },
  {
    "text": "whole role is dotnet evangelism so I am my whole entire job is trying to make",
    "start": "170860",
    "end": "176380"
  },
  {
    "text": "this developer experience for dotnet for AWS people on know better and easier and",
    "start": "176380",
    "end": "182560"
  },
  {
    "text": "also enabling dotnet developers to access all of those different services that we offer in AWS beyond dotnet so",
    "start": "182560",
    "end": "188860"
  },
  {
    "text": "all the different database types that we have now all the different machine learning services artificial",
    "start": "188860",
    "end": "194500"
  },
  {
    "text": "intelligence all those different features surfacing them so dotnet developers can take advantage of those and modernize their own applications and",
    "start": "194500",
    "end": "202110"
  },
  {
    "text": "there's been you know a great deal of support that's been added over the years",
    "start": "202110",
    "end": "209850"
  },
  {
    "start": "210000",
    "end": "270000"
  },
  {
    "text": "the starting point for most people if their a.net developer on AWS will be to install the ADA bits toolkit for visual",
    "start": "210830",
    "end": "217290"
  },
  {
    "text": "studio it's easy to wait to get up and running to understand how it works and it's quite straightforward to get so we",
    "start": "217290",
    "end": "222810"
  },
  {
    "text": "go to the Microsoft Visual Studio marketplace and you type in AWS",
    "start": "222810",
    "end": "228680"
  },
  {
    "text": "and from there the AWS toolkit you'll see this how-to over over a 1.2 million",
    "start": "232110",
    "end": "239500"
  },
  {
    "text": "downloads there's lots of people to choose this it supports 2017 to 2019 and we supported 2019 the Day 2019 was",
    "start": "239500",
    "end": "246610"
  },
  {
    "text": "released and in preview as well we downloaded the PhysX which is the add-in",
    "start": "246610",
    "end": "252040"
  },
  {
    "text": "for Visual Studio we run that up and what happens now is that Visual Studio has integrated an integrated experience",
    "start": "252040",
    "end": "258489"
  },
  {
    "text": "with AWS once that physics is installed",
    "start": "258489",
    "end": "263970"
  },
  {
    "text": "we're going to be able to access all the different services see all of the different services from within Visual",
    "start": "263970",
    "end": "271660"
  },
  {
    "start": "270000",
    "end": "443000"
  },
  {
    "text": "Studio and it's kind of it's loads of little places inside of Visual Studio now which will come alive because of",
    "start": "271660",
    "end": "277780"
  },
  {
    "text": "that one add-on and I'm trying to sort of highlight some of those for you now so one of the first ones is if we go",
    "start": "277780",
    "end": "286389"
  },
  {
    "text": "into the View menu you will see there's an AWS Explorer and this gives us",
    "start": "286389",
    "end": "292120"
  },
  {
    "text": "information about the profile that we're using on our AWS account I've got two on my machine default and work we can add",
    "start": "292120",
    "end": "297940"
  },
  {
    "text": "profiles for different accounts that we might use or manage or want to deploy to and once we've got a profile set up the",
    "start": "297940",
    "end": "305740"
  },
  {
    "text": "left hand side we can switch between the different regions and so forth but we can see all the different services that",
    "start": "305740",
    "end": "312970"
  },
  {
    "text": "are available through that SD through the SDK but also through Visual Studio so this is DynamoDB i've got a table",
    "start": "312970",
    "end": "317979"
  },
  {
    "text": "called the Beeb's it's a basic table it's got a name property on at the moment I'm going to add another attribute called Jeff because I've never",
    "start": "317979",
    "end": "326020"
  },
  {
    "text": "been good at database schemas we put the name in is Martin and",
    "start": "326020",
    "end": "332250"
  },
  {
    "text": "is Martin Jeff no he's not I'll commit",
    "start": "333540",
    "end": "338760"
  },
  {
    "text": "that that's editing basically a live DynamoDB DynamoDB table I can put",
    "start": "338760",
    "end": "344250"
  },
  {
    "text": "another name in there is this Jeff yes and commit that change and I've got two",
    "start": "344250",
    "end": "352410"
  },
  {
    "text": "rows in my DynamoDB table I could add more attributes like age so Jeff is 35",
    "start": "352410",
    "end": "362280"
  },
  {
    "text": "and Martin is we've already discussed this 21 commit those changes doing it",
    "start": "362280",
    "end": "370290"
  },
  {
    "text": "all from within visual studio I can look at these DynamoDB tables I can scan these tables the scan is basically a",
    "start": "370290",
    "end": "375480"
  },
  {
    "text": "search so I had a scan condition I can say where the name is equal to Jeff",
    "start": "375480",
    "end": "387680"
  },
  {
    "text": "or if it contains and you get the point basically most of the services inside of",
    "start": "397319",
    "end": "404159"
  },
  {
    "text": "the SD from from the the add-in allow you to kind of interact with them create them modify them it's not just a view",
    "start": "404159",
    "end": "410550"
  },
  {
    "text": "only situation here so all of the different services RDS s3 even I am like",
    "start": "410550",
    "end": "417300"
  },
  {
    "text": "with users and groups and roles we can manage all from within visual studio if we so wish and it's not doing anything",
    "start": "417300",
    "end": "422999"
  },
  {
    "text": "particularly clever it's just calling out from visual studio into the SDK into our accounts using the credentials that",
    "start": "422999",
    "end": "428309"
  },
  {
    "text": "we've we set up so we're able to set up users groups access key all from within",
    "start": "428309",
    "end": "434339"
  },
  {
    "text": "visual studio and view stuff which is happening get information on instances remote desktop into instances all the",
    "start": "434339",
    "end": "441599"
  },
  {
    "text": "sorts of things you'd expect to be able to do when I first came to AWS and one of the first services that I I started",
    "start": "441599",
    "end": "447809"
  },
  {
    "start": "443000",
    "end": "645000"
  },
  {
    "text": "using and running was elastic beanstalk because it's possibly the easiest way to get started you've got a dotnet",
    "start": "447809",
    "end": "452939"
  },
  {
    "text": "application already to get it up and running an elastic beanstalk is basically a managed service which will",
    "start": "452939",
    "end": "460999"
  },
  {
    "text": "allow you to very easily quickly set up a number of instances and it will manage those instances and make sure they're",
    "start": "460999",
    "end": "466949"
  },
  {
    "text": "alive you'll say I want at least three and maybe up to 5 let's say instances",
    "start": "466949",
    "end": "472830"
  },
  {
    "text": "and it's up to elastic Beanstalk to make sure that you always have three and if",
    "start": "472830",
    "end": "477899"
  },
  {
    "text": "you're if you have a scaling requirement if there's a lot of traffic coming into your to your application then it will scale up to whatever parameters you",
    "start": "477899",
    "end": "485069"
  },
  {
    "text": "specified all that scaling is obviously something you can define but it's up to",
    "start": "485069",
    "end": "491639"
  },
  {
    "text": "elastic Beanstalk to manage that and make sure that you've always got the instances available and and it's very",
    "start": "491639",
    "end": "497009"
  },
  {
    "text": "easy to deploy too you can deploy pretty much any language on there and but it's particularly useful with with dotnet and",
    "start": "497009",
    "end": "503939"
  },
  {
    "text": "Windows workloads because you can deploy any kind of dotnet application from a legacy 2.0 asp.net application to you",
    "start": "503939",
    "end": "510779"
  },
  {
    "text": "know the latest and greatest Donette core stuff under the hood it's just managing ec2 instances so if those",
    "start": "510779",
    "end": "516930"
  },
  {
    "text": "instances are Windows instances or Linux instances they're just being managed on your behalf and you can access all the",
    "start": "516930",
    "end": "522839"
  },
  {
    "text": "information about what those instances are and what they're doing very easily so if we say file create a new project",
    "start": "522839",
    "end": "528740"
  },
  {
    "text": "you'll see that a dub u.s. is in we've integrated into the the file new project system so I can say I",
    "start": "528740",
    "end": "536760"
  },
  {
    "text": "would like a a well I'm not going to use",
    "start": "536760",
    "end": "543630"
  },
  {
    "text": "it a nativist project what I'm going to do is just start with a standard net core web application web application six",
    "start": "543630",
    "end": "551960"
  },
  {
    "text": "will create that thing we won't choose empty empties never empty in Visual",
    "start": "551960",
    "end": "557490"
  },
  {
    "text": "Studio we'll choose web application instead it just has a little bit more stuff in it in it I don't know wine empty is never",
    "start": "557490",
    "end": "562740"
  },
  {
    "text": "empty they never it's never empty it's always gots loads of stuff in it and so",
    "start": "562740",
    "end": "567960"
  },
  {
    "text": "we create an SP Donette core web application nothing special or nothing specific AWS about it but now we can",
    "start": "567960",
    "end": "573300"
  },
  {
    "text": "right-click that and publish to AWS elastic Beanstalk and from here we've got a wizard which allows us to create",
    "start": "573300",
    "end": "578850"
  },
  {
    "text": "an elastic beanstalk environment if we don't have one we don't have any in this account so we're going to create some",
    "start": "578850",
    "end": "585680"
  },
  {
    "text": "basically our infrastructure we're gonna give the environment a name so this is going to be my dev dev area we're gonna",
    "start": "585680",
    "end": "594810"
  },
  {
    "text": "choose the container type I'm going to choose window server running is 10 and",
    "start": "594810",
    "end": "600380"
  },
  {
    "text": "we're going to choose the instant type as well you could use any kind of ec2 instance type will choose micro and then",
    "start": "600380",
    "end": "609480"
  },
  {
    "text": "the key value pair the key pair are security key pair which is important for",
    "start": "609480",
    "end": "614900"
  },
  {
    "text": "if you actually want to access these machines we're going to need this this key to actually get access to those",
    "start": "614900",
    "end": "620790"
  },
  {
    "text": "machines we're not going to be distributing passwords you're going to need this key to actually access your",
    "start": "620790",
    "end": "625980"
  },
  {
    "text": "your if you want to get into the actual instance so we create that there's a load of different settings which we can",
    "start": "625980",
    "end": "631710"
  },
  {
    "text": "alter and change we could add load balances in there and the numbers of instances that we want to create but this is just a single instance",
    "start": "631710",
    "end": "636870"
  },
  {
    "text": "environment I'm creating here very straightforward and ultimately we then will deploy that once it's deployed",
    "start": "636870",
    "end": "646620"
  },
  {
    "start": "645000",
    "end": "755000"
  },
  {
    "text": "which takes about 4 minutes we then have that website live on on a URL and it's",
    "start": "646620",
    "end": "652260"
  },
  {
    "text": "just a dotnet application and it's fundamentally a dotnet application that's running inside of an ec2 instance",
    "start": "652260",
    "end": "659850"
  },
  {
    "text": "running Windows Server so if I want to connect to that I can open remote desktop and connect the problem is port 3389 is closed on",
    "start": "659850",
    "end": "668100"
  },
  {
    "text": "this machine so to enable that to add access to port 3 3 9 we're going to have",
    "start": "668100",
    "end": "673770"
  },
  {
    "text": "to go to the security group which manages these ec2 instances and open that that poor it's quite",
    "start": "673770",
    "end": "681660"
  },
  {
    "text": "straightforward to do so we can in fact do it all from within Visual Studio we",
    "start": "681660",
    "end": "686970"
  },
  {
    "text": "go into the ec2 section go to security groups that's the security group which is attached to my elastic Beanstalk",
    "start": "686970",
    "end": "693330"
  },
  {
    "text": "environment and then I'll just say I'll add an inbound permission on port 3389",
    "start": "693330",
    "end": "698790"
  },
  {
    "text": "on RDP I'm not suggesting that you",
    "start": "698790",
    "end": "705420"
  },
  {
    "text": "Remote Desktop into your instances to manage them it's a really bad idea but just to show you that it's actually just",
    "start": "705420",
    "end": "710970"
  },
  {
    "text": "is under the hood that's wallet all it really is it's Windows machines running is it's just that we're managing it it",
    "start": "710970",
    "end": "716190"
  },
  {
    "text": "for you ok so I have the permission and then from within Visual Studio I can",
    "start": "716190",
    "end": "721980"
  },
  {
    "text": "right click connect to instance I'll use the easy to keep air that I've previously so there won't be any requirement for a password or username",
    "start": "721980",
    "end": "728310"
  },
  {
    "text": "because it's using that key pair that we set up and now I'm being able to log directly into that Windows machine and",
    "start": "728310",
    "end": "734730"
  },
  {
    "text": "it's just is under the hood so if you want to switch on any is features like enable WebSockets you could do that",
    "start": "734730",
    "end": "741420"
  },
  {
    "text": "manually here you also have the ability to run PowerShell scripts when ec2 instances are created and so at the root",
    "start": "741420",
    "end": "748830"
  },
  {
    "text": "of your project you can add PowerShell crypt scripts which will be initialized and start up when you deploy your",
    "start": "748830",
    "end": "754260"
  },
  {
    "text": "application so I write a little application allistic Beanstalk it's a",
    "start": "754260",
    "end": "759540"
  },
  {
    "start": "755000",
    "end": "850000"
  },
  {
    "text": "voting application it's very straightforward it's a standard dotnet application it uses signal are though",
    "start": "759540",
    "end": "765810"
  },
  {
    "text": "that's the one sort of difference I guess about it and in the signal application when you vote in the",
    "start": "765810",
    "end": "771720"
  },
  {
    "text": "application which we'll do in a moment it will call this function called send response that says a single signal our",
    "start": "771720",
    "end": "777060"
  },
  {
    "text": "request to all the connected clients which are connected to my application and also I do a little bit of",
    "start": "777060",
    "end": "782520"
  },
  {
    "text": "integration where I log what the responses have been and I log all my responses inside of dynamo DB I use",
    "start": "782520",
    "end": "790800"
  },
  {
    "text": "x-ray which is an AW service to trace my my the timings of how long these things",
    "start": "790800",
    "end": "797160"
  },
  {
    "text": "functions are taking to run and also if there's any exceptions and also I'm just calling",
    "start": "797160",
    "end": "802500"
  },
  {
    "text": "using the AWS SDK directly to create a new document inside of this question",
    "start": "802500",
    "end": "807840"
  },
  {
    "text": "responses table in dynamo DB and this sort of application doesn't really",
    "start": "807840",
    "end": "813240"
  },
  {
    "text": "require a relational database it's a very straightforward bit of logic I want to store it traditionally I would",
    "start": "813240",
    "end": "818610"
  },
  {
    "text": "definitely a view sequel because it would've been easier but you know DynamoDB is a very straightforward way",
    "start": "818610",
    "end": "823680"
  },
  {
    "text": "you know a few lines of code I can write to that database I can retrieve from that database very simply and for this",
    "start": "823680",
    "end": "828990"
  },
  {
    "text": "kind of unstructured database it's great i right-click the project publish it to elastic beanstalk because i've already",
    "start": "828990",
    "end": "835140"
  },
  {
    "text": "created my environment here it's going to it's deploying to an existing environment it's much quicker because",
    "start": "835140",
    "end": "841500"
  },
  {
    "text": "the instances are already up and running and what happens is it creates a chain set I creates a new version of your",
    "start": "841500",
    "end": "846510"
  },
  {
    "text": "application and deploys that to the elastic Beanstalk environment which you created so a brief demo hopefully this",
    "start": "846510",
    "end": "854580"
  },
  {
    "start": "850000",
    "end": "945000"
  },
  {
    "text": "will work let me see so if you go to that URL",
    "start": "854580",
    "end": "861709"
  },
  {
    "text": "let's see if this works",
    "start": "862280",
    "end": "865880"
  },
  {
    "text": "what should happen",
    "start": "869680",
    "end": "872820"
  },
  {
    "text": "you should see it please wait and now as I click my slide a signal our request got sent to everyone which was connected",
    "start": "877490",
    "end": "883490"
  },
  {
    "text": "on the system it logged that information to dynamo DB and people should be able to start voting so I what drink do you",
    "start": "883490",
    "end": "890360"
  },
  {
    "text": "want to choose I'm assuming there isn't great internet connectivity or either",
    "start": "890360",
    "end": "895670"
  },
  {
    "text": "that or you're really cruel so you'll see that as as people are voting",
    "start": "895670",
    "end": "902559"
  },
  {
    "text": "currently saying that more people are wanting to drink beer than drink coffee that's a great thing and here's another",
    "start": "902559",
    "end": "910220"
  },
  {
    "text": "one tabs and spaces so you say as I cycled the slide it's an it's a",
    "start": "910220",
    "end": "915829"
  },
  {
    "text": "basically a slide is web application written in net it sends a signal are requests on your phones to change the to",
    "start": "915829",
    "end": "923779"
  },
  {
    "text": "change the question and then people vote and as they vote for things it adds up and there's a little graph in the middle",
    "start": "923779",
    "end": "930139"
  },
  {
    "text": "there which shows how people are voted and where they're voted so",
    "start": "930139",
    "end": "941199"
  },
  {
    "text": "I talked a lot about some integrations and stuff that there I use Cognito I use",
    "start": "943490",
    "end": "950569"
  },
  {
    "start": "945000",
    "end": "995000"
  },
  {
    "text": "x-ray I use DynamoDB all of the new get packages or the SDK can be found over on",
    "start": "950569",
    "end": "957889"
  },
  {
    "text": "our github page its github comm /e AWS forward slash and not only will this",
    "start": "957889",
    "end": "964339"
  },
  {
    "text": "give you all the information about where you can get new stuff for information about dotnet on AWS we show all of the",
    "start": "964339",
    "end": "971240"
  },
  {
    "text": "libraries that we build for dotnet AWS SDK for dotnet being the largest one of",
    "start": "971240",
    "end": "976249"
  },
  {
    "text": "course but we also have very specific ones database logging for dotnet called",
    "start": "976249",
    "end": "981439"
  },
  {
    "text": "Neto middleware and extensions that you can add into applications secret manager",
    "start": "981439",
    "end": "986769"
  },
  {
    "text": "parameter ElastiCache cluster management all sorts of things that you can you can absolutely use in your applications if",
    "start": "986769",
    "end": "992839"
  },
  {
    "text": "you so wish",
    "start": "992839",
    "end": "995199"
  },
  {
    "start": "995000",
    "end": "1151000"
  },
  {
    "text": "sorry",
    "start": "1004850",
    "end": "1007628"
  },
  {
    "text": "so when you're using elastic beanstalk and i'm using signal are there I had to",
    "start": "1014870",
    "end": "1021209"
  },
  {
    "text": "have to have an open connection on WebSockets between every client which is connected and all of the server's so it",
    "start": "1021209",
    "end": "1029130"
  },
  {
    "text": "goes through an elastic load balancer at this front but then once it's connected to an individual server I have sticky session switched on on the",
    "start": "1029130",
    "end": "1036270"
  },
  {
    "text": "blode balancer so the user will go back to the same server for their future requests they'll open up an a WebSocket",
    "start": "1036270",
    "end": "1042178"
  },
  {
    "text": "connection with that server and this is where a problem arises with signal R or this sort of messaging or infrastructure",
    "start": "1042179",
    "end": "1048538"
  },
  {
    "text": "in is that is that if I as the presenter send a message that the slides have changed on one ec2 instance the other",
    "start": "1048539",
    "end": "1055530"
  },
  {
    "text": "ec2 instance doesn't know about it because it's running a different application it's running signal Arbor on a different application and likewise if",
    "start": "1055530",
    "end": "1061710"
  },
  {
    "text": "a user votes on the on the presentation then and that information doesn't get fed through to the presenters node or",
    "start": "1061710",
    "end": "1068549"
  },
  {
    "text": "the system that they're on and so if you have like a cluster of six machines messages only happen between the user",
    "start": "1068549",
    "end": "1075179"
  },
  {
    "text": "and their machine that doesn't happen between all of the different machines now obviously this is a problem which faces every signal are.net application",
    "start": "1075179",
    "end": "1082260"
  },
  {
    "text": "so to solve this problem what you use is what they call a black plane and it's a",
    "start": "1082260",
    "end": "1087750"
  },
  {
    "text": "Redis cluster register clusters have and this ability to do sub pub so you when you pass a message between or messages",
    "start": "1087750",
    "end": "1094770"
  },
  {
    "text": "sent to signal are then it's actually distributed back across the backplane I've used the AWS elastic cache service",
    "start": "1094770",
    "end": "1103110"
  },
  {
    "text": "here to implement this and that's what I use in my application and what it means is there anyone which is communicating",
    "start": "1103110",
    "end": "1108240"
  },
  {
    "text": "with one server it gets repeated across all of the different servers and that work so we have a full backplane service",
    "start": "1108240",
    "end": "1114570"
  },
  {
    "text": "which is built-in and now we can scale the front end to you know ten as many different instances as we want and the",
    "start": "1114570",
    "end": "1121140"
  },
  {
    "text": "messages get passed back and forth this wouldn't be a problem if it was just a regular kind of web application but",
    "start": "1121140",
    "end": "1126330"
  },
  {
    "text": "because we're using WebSockets it's particularly more complicated and I would say if you are trying to do this",
    "start": "1126330",
    "end": "1132840"
  },
  {
    "text": "though and there's a new feature in the API gateway which has WebSockets support and I'm currently writing a blog post at",
    "start": "1132840",
    "end": "1138780"
  },
  {
    "text": "the moment where I describe how I build that application but using entirely serverless technology rather than least",
    "start": "1138780",
    "end": "1144840"
  },
  {
    "text": "instances so go to my blog the bbcode at UK and you'll see how to do that if you're interested so to add and reddest",
    "start": "1144840",
    "end": "1153960"
  },
  {
    "start": "1151000",
    "end": "1215000"
  },
  {
    "text": "capabilities to my signal are all I have to do is go into the configure services section of my website and if the",
    "start": "1153960",
    "end": "1161130"
  },
  {
    "text": "websites in production then I just go and add Stack Exchange Redis which is a",
    "start": "1161130",
    "end": "1166830"
  },
  {
    "text": "new get package library I add a connection string to my AWS Redis",
    "start": "1166830",
    "end": "1172490"
  },
  {
    "text": "elastic last cut ElastiCache cluster I'm just putting the connection string in",
    "start": "1172490",
    "end": "1177899"
  },
  {
    "text": "there for the moment it's bad practice and then I can set up some options what",
    "start": "1177899",
    "end": "1184799"
  },
  {
    "text": "I'm doing here is putting any options in to use a specific channel on Redis for my particular application because you",
    "start": "1184799",
    "end": "1190830"
  },
  {
    "text": "could run many applications on a single Redis cluster if you wished to do that",
    "start": "1190830",
    "end": "1196970"
  },
  {
    "text": "so just giving a channel prefix of Boeing application [Applause]",
    "start": "1198169",
    "end": "1204990"
  },
  {
    "text": "so a very easy way to get an existing Net Applications get it published on our on elastic",
    "start": "1204990",
    "end": "1211659"
  },
  {
    "text": "Beanstalk load balance its scale it it all works really well but often you",
    "start": "1211659",
    "end": "1217330"
  },
  {
    "start": "1215000",
    "end": "1296000"
  },
  {
    "text": "might want to take your application and start deconstructing it maybe put it inside in containers maybe breaking apart some of the things into",
    "start": "1217330",
    "end": "1223330"
  },
  {
    "text": "micro-services we also have support for for containers obviously in AWS and",
    "start": "1223330",
    "end": "1228940"
  },
  {
    "text": "there's a lot of container support built directly into the tools for visual studio as well so if I go into that same application and right-click right click",
    "start": "1228940",
    "end": "1236860"
  },
  {
    "text": "the project file and go into add docker",
    "start": "1236860",
    "end": "1248500"
  },
  {
    "text": "support that's actually a visual studio feature it asked me if I want to use a docker for windows or docker for Linux",
    "start": "1248500",
    "end": "1254380"
  },
  {
    "text": "I choose Linux because I'm using dotnet core I can run this on Linux it adds a docker file to my application and that's",
    "start": "1254380",
    "end": "1262390"
  },
  {
    "text": "all that our tooling needs to know that this is now a containerized application or this application could run inside of",
    "start": "1262390",
    "end": "1268029"
  },
  {
    "text": "the container that's the basic docker file so now when I right-click the project I get this option to publish",
    "start": "1268029",
    "end": "1274169"
  },
  {
    "text": "container to AWS and I can publish it directly to one of our AWS container services but more likely I'm going to",
    "start": "1274169",
    "end": "1280570"
  },
  {
    "text": "publish it to a registry so we have a container registry which is a place which can store bit like docker hub",
    "start": "1280570",
    "end": "1286360"
  },
  {
    "text": "where you can store all of your container images for other systems to perhaps deploy those containers or what",
    "start": "1286360",
    "end": "1294190"
  },
  {
    "text": "however you manage your deployment but it's a very simple way of containing content taking a container and",
    "start": "1294190",
    "end": "1300010"
  },
  {
    "text": "application build it into containers and then deploying it we have a number of ways that you can run containers we have",
    "start": "1300010",
    "end": "1307289"
  },
  {
    "text": "Amazon ECS which is basically the is an",
    "start": "1307289",
    "end": "1312909"
  },
  {
    "text": "Orchestrator which Amazon provides and it has support for dotnet core and windows.net core on Linux and also",
    "start": "1312909",
    "end": "1319720"
  },
  {
    "text": "dotnet frameworks built for docker for Windows you can run those docker for Windows containers on ECS as well we",
    "start": "1319720",
    "end": "1326470"
  },
  {
    "text": "have eks as well you can run net call for Linux net core for Windows you can also now support there's a public",
    "start": "1326470",
    "end": "1332559"
  },
  {
    "text": "preview of using docker for Windows on our eks system as well that's our man",
    "start": "1332559",
    "end": "1338260"
  },
  {
    "text": "kupah Nettie service so both of those are good orchestrators you can choose one or the other and if you want to use",
    "start": "1338260",
    "end": "1343990"
  },
  {
    "text": "fire gate which is our service container platform you can also run net core for",
    "start": "1343990",
    "end": "1349390"
  },
  {
    "text": "Linux on there as well and it won't support dotnet framework or dot whit",
    "start": "1349390",
    "end": "1355240"
  },
  {
    "text": "window docker containers but it will support dotnet Korn Linux containers and just to break there and just to invite",
    "start": "1355240",
    "end": "1362470"
  },
  {
    "text": "up on stage Dean Garvey North he comes from gbg and he's going to be talking about his journey with with Ada where's company's",
    "start": "1362470",
    "end": "1369580"
  },
  {
    "text": "journey with AWS and dotnet so please welcome Dean thank you so much can",
    "start": "1369580",
    "end": "1383860"
  },
  {
    "start": "1374000",
    "end": "1494000"
  },
  {
    "text": "everybody hear me it's really good hi so",
    "start": "1383860",
    "end": "1389950"
  },
  {
    "text": "I'm Dean Garvey north from a company called Gee Bee Gee Gee Bee Gees head of",
    "start": "1389950",
    "end": "1396730"
  },
  {
    "text": "IT infrastructure not many of you have probably ever heard of gbg what we do or",
    "start": "1396730",
    "end": "1402940"
  },
  {
    "text": "who we are so I'll explain to you a bit about who we are and a bit about the application that we're writing within AWS so gbg",
    "start": "1402940",
    "end": "1412870"
  },
  {
    "text": "we're a global specialist in data identity intelligence put simply",
    "start": "1412870",
    "end": "1420340"
  },
  {
    "text": "basically what we do is we allow our customers to onboard as many good customers as quickly as possible a",
    "start": "1420340",
    "end": "1428160"
  },
  {
    "text": "really good fact of ours is that we actually verify over half the world's population",
    "start": "1428160",
    "end": "1433690"
  },
  {
    "text": "so we've validating about 4.4 billion people at the moment and that ranges",
    "start": "1433690",
    "end": "1439480"
  },
  {
    "text": "from location intelligence actually people's ID and we also prevent fraud so",
    "start": "1439480",
    "end": "1447190"
  },
  {
    "text": "a lot of the big tough customers and companies we work in right range so we",
    "start": "1447190",
    "end": "1453040"
  },
  {
    "text": "work with some of the e-commerce giants over in the u.s. some of Asia's biggest banks and a load of household names here",
    "start": "1453040",
    "end": "1460000"
  },
  {
    "text": "in the UK one of our key things is that you've probably used one of our services today without even knowing it we've probably",
    "start": "1460000",
    "end": "1467260"
  },
  {
    "text": "validated most of you in the room through one way or another so that's little about us you will see",
    "start": "1467260",
    "end": "1474909"
  },
  {
    "text": "us on Liverpool Street and a few other stations some of our ID scan posters",
    "start": "1474909",
    "end": "1481570"
  },
  {
    "text": "about and also the late-night gambling shows for anyone that stays up past midnight channel 5 it's now gambling",
    "start": "1481570",
    "end": "1488740"
  },
  {
    "text": "shows didn't used to me you'll see that all date is validated by gbg so how do",
    "start": "1488740",
    "end": "1496210"
  },
  {
    "text": "we identify you or your customers well we have four methods so there's",
    "start": "1496210",
    "end": "1502809"
  },
  {
    "text": "biometrics so we use DNA we use fingerprints retinal our facial voice so",
    "start": "1502809",
    "end": "1509020"
  },
  {
    "text": "you've probably used a number of those services and in apps applications today or if not sometime this week attributes",
    "start": "1509020",
    "end": "1516429"
  },
  {
    "text": "so name address Passport the usual kind of stuff when registering for anything online digital so this is",
    "start": "1516429",
    "end": "1525399"
  },
  {
    "text": "where we're really going and really pushing the boundaries so device ID most people now are identified by the device",
    "start": "1525399",
    "end": "1531399"
  },
  {
    "text": "that they have in their pocket or in front of them it's what we use more than anything these days so when using that",
    "start": "1531399",
    "end": "1536890"
  },
  {
    "text": "to identify who people are there are IP address their social ID their cookies",
    "start": "1536890",
    "end": "1542760"
  },
  {
    "text": "and finally behavior so interest likes dislikes these are the things that",
    "start": "1542760",
    "end": "1549070"
  },
  {
    "text": "you're doing on social media everyday things that you're posting we can use that data to validate who people are so",
    "start": "1549070",
    "end": "1557110"
  },
  {
    "text": "you have to excuse my voice anyone that's a football fan that watched last night that's to blame so a bit about our",
    "start": "1557110",
    "end": "1565510"
  },
  {
    "start": "1563000",
    "end": "2131000"
  },
  {
    "text": "application itself so this particular dotnet application that we we moved into",
    "start": "1565510",
    "end": "1571510"
  },
  {
    "text": "AWS we've got the real-time validation of landline phone numbers so seems like",
    "start": "1571510",
    "end": "1578200"
  },
  {
    "text": "a standard thing but it's pioneered by gbg we're the first business to ever do",
    "start": "1578200",
    "end": "1584200"
  },
  {
    "text": "this and successfully do it and we've rolled that out about around a number of our services so it's not so integral",
    "start": "1584200",
    "end": "1590919"
  },
  {
    "text": "part of validating people's identity and integral parts of a lot of gbg services",
    "start": "1590919",
    "end": "1596100"
  },
  {
    "text": "hence why it was key that we made this a core micro services for GBG daily it's",
    "start": "1596100",
    "end": "1601960"
  },
  {
    "text": "doing around 200,000 telephone verifications a day and just put your ease that's not",
    "start": "1601960",
    "end": "1607630"
  },
  {
    "text": "bringing you on making sure your numbers alive we have some data intelligence that does that forest and make sure the",
    "start": "1607630",
    "end": "1613240"
  },
  {
    "text": "phone's alive but like say we built this internally many years ago and it's still",
    "start": "1613240",
    "end": "1621730"
  },
  {
    "text": "integral part of our our business so",
    "start": "1621730",
    "end": "1627580"
  },
  {
    "text": "running this dotnet application in in AWS so DB G's actually gonna turn 30 in",
    "start": "1627580",
    "end": "1633610"
  },
  {
    "text": "in August so as you can imagine technology has changed hugely over those 30 years now we've not been doing",
    "start": "1633610",
    "end": "1640000"
  },
  {
    "text": "everything in AWS since it started and not all of our applications are kind of cloud native one thing gbg did want to",
    "start": "1640000",
    "end": "1647529"
  },
  {
    "text": "do was actually change the way that we architect our solutions so we didn't just do a lift and shift we actually",
    "start": "1647529",
    "end": "1653200"
  },
  {
    "text": "looked at our applications what they can do and the power of AWS and how we can make those better so some of",
    "start": "1653200",
    "end": "1665880"
  },
  {
    "text": "trigger-happy that so some of our issues faced with our own Prem so like say this",
    "start": "1665880",
    "end": "1671500"
  },
  {
    "text": "is an old application used by many of our applications so we had the traditional issues I'm sure many of you",
    "start": "1671500",
    "end": "1678100"
  },
  {
    "text": "have got these so we got down to are needed for maintenance sounds like a simple and archaic thing but we've got",
    "start": "1678100",
    "end": "1686350"
  },
  {
    "text": "many of these services running or we used to have many of these services running on Prem to allow the the amount",
    "start": "1686350",
    "end": "1691480"
  },
  {
    "text": "of connections of validations as as as many as possible but we had to take",
    "start": "1691480",
    "end": "1696700"
  },
  {
    "text": "elements out to enable eyes to things raining yeah someone's standing outside",
    "start": "1696700",
    "end": "1704769"
  },
  {
    "text": "in the rain we had to take some of our services out to enable them to patch",
    "start": "1704769",
    "end": "1710139"
  },
  {
    "text": "them and get them updated furthermore it was an aging architecture with problems",
    "start": "1710139",
    "end": "1716830"
  },
  {
    "text": "with certain OS so we had big difficulties making it a micro services",
    "start": "1716830",
    "end": "1722370"
  },
  {
    "text": "so the whole point of this really is to give our customers and a rich service and that that's our main goal at gbg to",
    "start": "1722370",
    "end": "1729460"
  },
  {
    "text": "enrich the amount of data we can validate and give quality data back to our customers and we have a convoluted",
    "start": "1729460",
    "end": "1736620"
  },
  {
    "text": "data extract mechanism so we actually extract data to make sure it's valid and we do",
    "start": "1736620",
    "end": "1742210"
  },
  {
    "text": "that in real time now so it was very convoluted and there was a many steps to that process to ensure that we was given",
    "start": "1742210",
    "end": "1749020"
  },
  {
    "text": "quality data so how do we get rid of that in in AWS well one of the main",
    "start": "1749020",
    "end": "1756250"
  },
  {
    "text": "design mechanisms was let's try and reduce the amount of operational overhead we've got especially around this act extracted data and getting",
    "start": "1756250",
    "end": "1764350"
  },
  {
    "text": "real-time responses back to our applications because it's all about speed we expect everything now and we",
    "start": "1764350",
    "end": "1772450"
  },
  {
    "text": "need to make sure that was available for our customers so we use elastic",
    "start": "1772450",
    "end": "1777910"
  },
  {
    "text": "Beanstalk no idea what's going on outside by the way you can probably hear",
    "start": "1777910",
    "end": "1783940"
  },
  {
    "text": "me without your headphones if there's some background noise so we used elastic Beanstalk to ensure that we was getting",
    "start": "1783940",
    "end": "1792720"
  },
  {
    "text": "great scalability and great resiliency across the board so without that we had",
    "start": "1792720",
    "end": "1799780"
  },
  {
    "text": "a lot of virtual machines running but with elastic Beanstalk kind of took that element away so we could scale at pace",
    "start": "1799780",
    "end": "1806290"
  },
  {
    "text": "and scale on demand we moved up a space",
    "start": "1806290",
    "end": "1812320"
  },
  {
    "text": "user or a my sequel that was to give us rapid real-time responses so more so",
    "start": "1812320",
    "end": "1818830"
  },
  {
    "text": "than ever before we could get super fast responses to our customers queries so",
    "start": "1818830",
    "end": "1824590"
  },
  {
    "text": "there was a use be a little delay not much but now it's almost real-time",
    "start": "1824590",
    "end": "1830340"
  },
  {
    "text": "developers started using visual visual studio toolkit as mentioned earlier really really useful if you're thinking",
    "start": "1830340",
    "end": "1837760"
  },
  {
    "text": "about doing anything in dotnet on AWS we'd highly recommend that you use it it's great it's intuitive as you see",
    "start": "1837760",
    "end": "1844420"
  },
  {
    "text": "earlier and our developers absolutely loved it and as I said one of our things",
    "start": "1844420",
    "end": "1849880"
  },
  {
    "text": "was about operational efficiencies how can we get some of our time back how can we stop managing and maintaining and",
    "start": "1849880",
    "end": "1856600"
  },
  {
    "text": "start innovating and push now our product forward well we've decided to use some lambda functions for some",
    "start": "1856600",
    "end": "1862480"
  },
  {
    "text": "simple tasks updates self-healing patching maintenance all that is taken",
    "start": "1862480",
    "end": "1870070"
  },
  {
    "text": "care of if bios already built in AWS or some lamp lambda functions now because you've got",
    "start": "1870070",
    "end": "1875740"
  },
  {
    "text": "developers they know how to code they can easily ingest code into lambda they know their error codes are going to",
    "start": "1875740",
    "end": "1882880"
  },
  {
    "text": "come out you can make lambda respond to those error codes itself heal your own platform so it's a whole new way of",
    "start": "1882880",
    "end": "1889299"
  },
  {
    "text": "working",
    "start": "1889299",
    "end": "1891450"
  },
  {
    "text": "so as of everything you know everything",
    "start": "1895559",
    "end": "1900610"
  },
  {
    "text": "goes smoothly as much as we'd like it to and we did face issues with putting our not in",
    "start": "1900610",
    "end": "1907660"
  },
  {
    "text": "their application into AWS Thanks so one",
    "start": "1907660",
    "end": "1913510"
  },
  {
    "text": "of the key things was understanding elastic Beanstalk after the deployment",
    "start": "1913510",
    "end": "1918820"
  },
  {
    "text": "so we wanted to make this as automated as possible and use everything that we",
    "start": "1918820",
    "end": "1923919"
  },
  {
    "text": "could so it was a big paradigm shift for a lot of our developers likes a snap case has been around a long time we",
    "start": "1923919",
    "end": "1930850"
  },
  {
    "text": "didn't just get a bunch of young hipsters in their twenties to come in and start developing applications for us",
    "start": "1930850",
    "end": "1935919"
  },
  {
    "text": "we used our own internal team so understanding the way that AWS works and the tools available that was a really",
    "start": "1935919",
    "end": "1942640"
  },
  {
    "text": "big thing for us debugging deployments using visual studio again this was",
    "start": "1942640",
    "end": "1948520"
  },
  {
    "text": "something new for our team so it was a bit of a challenge understanding when things were gone wrong no more were",
    "start": "1948520",
    "end": "1953799"
  },
  {
    "text": "there having to log into servers no more with a toilet roll through logs it was a complete change for them so",
    "start": "1953799",
    "end": "1959650"
  },
  {
    "text": "understanding that is a different way of working but provides huge benefits was a",
    "start": "1959650",
    "end": "1964929"
  },
  {
    "text": "bit of a challenge and the third one was fear of change it's a common thing and",
    "start": "1964929",
    "end": "1972850"
  },
  {
    "text": "we certainly had it there is a fear of change there is a it's not broke don't fix it a GBG that doesn't matter it's",
    "start": "1972850",
    "end": "1979900"
  },
  {
    "text": "all about improving improvement and improving improving so there were some people that did didn't want to change or",
    "start": "1979900",
    "end": "1986590"
  },
  {
    "text": "didn't once go on this journey with us which was understandable but through",
    "start": "1986590",
    "end": "1991600"
  },
  {
    "text": "learning through knowledge share sessions we kind of got through that we",
    "start": "1991600",
    "end": "1996700"
  },
  {
    "text": "got we got small applications moved fast we run training sessions we gave people",
    "start": "1996700",
    "end": "2001890"
  },
  {
    "text": "access to to AWS and siloed environments to upskill their training to allow them",
    "start": "2001890",
    "end": "2006960"
  },
  {
    "text": "to get come and really sees benefits once you show a developer that they do not have to do",
    "start": "2006960",
    "end": "2012179"
  },
  {
    "text": "any more troubleshooting that a lot of that can be taken care of for them and they can just focus on making that",
    "start": "2012179",
    "end": "2017760"
  },
  {
    "text": "application better they soon swarm to it so why we migrate it well pretty obvious",
    "start": "2017760",
    "end": "2026340"
  },
  {
    "text": "from what I've said but platform stability was a major one uptime and",
    "start": "2026340",
    "end": "2031919"
  },
  {
    "text": "availability to our clients we know what longer wanted to degrade our service by",
    "start": "2031919",
    "end": "2037409"
  },
  {
    "text": "patching so EBS and auto scaling allowed us to make sure that we could keep our",
    "start": "2037409",
    "end": "2043529"
  },
  {
    "text": "system up to date we could do new releases without any degradation of service furthermore because we was using",
    "start": "2043529",
    "end": "2050970"
  },
  {
    "text": "PA's and lambda functions AWS took care of most of the operational tasks for us",
    "start": "2050970",
    "end": "2057419"
  },
  {
    "text": "no more did we have to manage and maintain infrastructure which sounds a bit harsh coming from a head of",
    "start": "2057419",
    "end": "2064349"
  },
  {
    "text": "infrastructure but to be honest the future of infrastructure is not managed and maintained Lee just use it consume",
    "start": "2064349",
    "end": "2071310"
  },
  {
    "text": "it from AWS throughput and capacity limits absolutely abolished we can now",
    "start": "2071310",
    "end": "2077220"
  },
  {
    "text": "take more throughput than ever before we had hardware or virtualization constraints before that is now",
    "start": "2077220",
    "end": "2083700"
  },
  {
    "text": "completely gone it actually pushes the problem further up and away from what we",
    "start": "2083700",
    "end": "2090210"
  },
  {
    "text": "what we can do or what AWS can do so that that means that our customers can",
    "start": "2090210",
    "end": "2095250"
  },
  {
    "text": "validate more addresses more numbers more often and more quickly so there's a",
    "start": "2095250",
    "end": "2101099"
  },
  {
    "text": "huge advantage for us and something that are barriers completely removed and then",
    "start": "2101099",
    "end": "2106530"
  },
  {
    "text": "thirdly there like say operational efficiencies where are big things at gbg they're save operational tasks let's get",
    "start": "2106530",
    "end": "2113250"
  },
  {
    "text": "people moving more to innovating get more to moving our products forward and",
    "start": "2113250",
    "end": "2118980"
  },
  {
    "text": "not managing to maintaining and by doing that like say 60% of our operational",
    "start": "2118980",
    "end": "2124740"
  },
  {
    "text": "tasks went overnight when we when we moved it was really that effective",
    "start": "2124740",
    "end": "2131130"
  },
  {
    "start": "2131000",
    "end": "2235000"
  },
  {
    "text": "so some of our lessons learn it is a business change so I know there's a lot",
    "start": "2131130",
    "end": "2138480"
  },
  {
    "text": "of developers that that love cloud technologies that love AWS and just want",
    "start": "2138480",
    "end": "2143850"
  },
  {
    "text": "to get on and do it what we found is a business that kind of is is globally",
    "start": "2143850",
    "end": "2150150"
  },
  {
    "text": "expanding we're about a thousand people now like nineteen thousand customers",
    "start": "2150150",
    "end": "2155210"
  },
  {
    "text": "across 79 countries so we know small start-up or no small business but it is",
    "start": "2155210",
    "end": "2161970"
  },
  {
    "text": "a business change it does affect it everybody in it and everyone from your",
    "start": "2161970",
    "end": "2167130"
  },
  {
    "text": "data team your legal team your finance team are probably gonna give give you the most heart you can call shocked",
    "start": "2167130",
    "end": "2173030"
  },
  {
    "text": "because how you purchased and require infrastructure now changes but it's more",
    "start": "2173030",
    "end": "2179250"
  },
  {
    "text": "effective you can reduce your cost because you pay for what you use so it's just preparing that it is a change for",
    "start": "2179250",
    "end": "2184740"
  },
  {
    "text": "everybody your team can do it a gbg like I said when we started our",
    "start": "2184740",
    "end": "2191160"
  },
  {
    "text": "AWS journey and when we started looking at this we was eight hundred strong we've grown since then but only five",
    "start": "2191160",
    "end": "2197310"
  },
  {
    "text": "people in that in our entire organization a good few of them here today change TBG thoughts on on AWS and",
    "start": "2197310",
    "end": "2205140"
  },
  {
    "text": "took us into the clouds we didn't have to go into any third parties we didn't have to have any big project budgets we",
    "start": "2205140",
    "end": "2212130"
  },
  {
    "text": "just dedicate the time for our people to learning and looking what what is the art of possible so your team can do it",
    "start": "2212130",
    "end": "2218780"
  },
  {
    "text": "we redefined operational release processes again that changes it's no",
    "start": "2218780",
    "end": "2223950"
  },
  {
    "text": "longer about upgrading you do no longer need to upgrade anything you do not need to add releases just redeploy start",
    "start": "2223950",
    "end": "2231930"
  },
  {
    "text": "testing early as well make sure you are testing other ones from us",
    "start": "2231930",
    "end": "2237500"
  },
  {
    "start": "2235000",
    "end": "2319000"
  },
  {
    "text": "there's no there is no limit to innovation within AWS it takes away so",
    "start": "2237500",
    "end": "2242880"
  },
  {
    "text": "many of your pains and concerns you just don't need to worry about it so use it",
    "start": "2242880",
    "end": "2247920"
  },
  {
    "text": "research it and the possibilities are endless Visual Studio code as I said",
    "start": "2247920",
    "end": "2254810"
  },
  {
    "text": "it's awesome I Bev's loved it I would recommend going and downloading it and",
    "start": "2254810",
    "end": "2260220"
  },
  {
    "text": "giving it a go the cloud is super secure a big concern",
    "start": "2260220",
    "end": "2265820"
  },
  {
    "text": "around the cloud is that it's not very secure you never be as secure as Amazon",
    "start": "2265820",
    "end": "2271450"
  },
  {
    "text": "or AWS in that fact just believe it and",
    "start": "2271450",
    "end": "2276890"
  },
  {
    "text": "and drive that message through lambda is extremely powerful we really see the",
    "start": "2276890",
    "end": "2283520"
  },
  {
    "text": "power of it through this whole process and that was our mate main benefit from",
    "start": "2283520",
    "end": "2288740"
  },
  {
    "text": "operational efficiencies so go and explore and go and enjoy yourselves",
    "start": "2288740",
    "end": "2293860"
  },
  {
    "text": "don't be afraid to fail and fail fast and that's what we did AWS allows you to do that and that is it",
    "start": "2293860",
    "end": "2301910"
  },
  {
    "text": "from me if you want to contact me feel free to drop me an email and that is gbg",
    "start": "2301910",
    "end": "2308060"
  },
  {
    "text": "so ladies gentlemen thanks very much I",
    "start": "2308060",
    "end": "2316300"
  },
  {
    "text": "look like a DJ now though so I'm not gonna drop any beats I promise so we",
    "start": "2316300",
    "end": "2321800"
  },
  {
    "start": "2319000",
    "end": "2546000"
  },
  {
    "text": "talk about lambda there it's being amazing and let's build st. amazing let's bill thing which is going to be",
    "start": "2321800",
    "end": "2327950"
  },
  {
    "text": "like give us the meaning of life the universe and everything and if you're not aware of that quote comes from the Hitchhiker's Guide to the galaxy the",
    "start": "2327950",
    "end": "2334550"
  },
  {
    "text": "almighty answer to the meaning of life the universe and everything was calculated by a computer deep thought for seven million years the answer was",
    "start": "2334550",
    "end": "2340940"
  },
  {
    "text": "42 so let's build an algorithm which gives us the answer to the meaning of life and everything so we're going to",
    "start": "2340940",
    "end": "2347660"
  },
  {
    "text": "into a file new project and we're going to build our lambda function using the",
    "start": "2347660",
    "end": "2353570"
  },
  {
    "text": "visual studio adding and we're just going to use a standard lambda dot net core app and we're going to choose an",
    "start": "2353570",
    "end": "2362540"
  },
  {
    "text": "empty function",
    "start": "2362540",
    "end": "2365200"
  },
  {
    "text": "in the function file there's a handler that handler at the bottom all it does",
    "start": "2372390",
    "end": "2378310"
  },
  {
    "text": "at the moment is does an input dot to upper we can do better than that what we can do is we can add a new algorithm which gives us the meaning of",
    "start": "2378310",
    "end": "2385119"
  },
  {
    "text": "everything if I can type those and then",
    "start": "2385119",
    "end": "2397680"
  },
  {
    "text": "once we've got that function which now it just returns 42 we can test it inside of our local environment using the mock",
    "start": "2397680",
    "end": "2404109"
  },
  {
    "text": "lambda test tool this is an open source testing tool which is integrated with",
    "start": "2404109",
    "end": "2409329"
  },
  {
    "text": "Visual Studio which means it we can we can debug lambdas or test lambdas locally without having to deploy to the",
    "start": "2409329",
    "end": "2415390"
  },
  {
    "text": "cloud so it's useful if you want a plane or a train and you're working trying to build a lambda so now if we ask a question what is the meaning of life we",
    "start": "2415390",
    "end": "2422380"
  },
  {
    "text": "can test that send that over to execute our function and it gives us information or a response back number 42 which is",
    "start": "2422380",
    "end": "2428500"
  },
  {
    "text": "cool but we might want to deploy that to an actual cloud because it is it's",
    "start": "2428500",
    "end": "2433930"
  },
  {
    "text": "probably more useful in that sense so what we can do is right-click the project and we say publish to AWS lambda",
    "start": "2433930",
    "end": "2439270"
  },
  {
    "text": "and then we get to some options to choose the the name of the function what",
    "start": "2439270",
    "end": "2445180"
  },
  {
    "text": "run time that were going to be using at the moment we're using dotnet core v2 one which is our latest release of major",
    "start": "2445180",
    "end": "2451060"
  },
  {
    "text": "supported runtimes we support one as version one of dotnet core as well we give it a roll name which is the",
    "start": "2451060",
    "end": "2457030"
  },
  {
    "text": "execution environment the security group that this function is going to be using to access other services and stuff we",
    "start": "2457030",
    "end": "2462880"
  },
  {
    "text": "upload that and we deploy that and ultimately that function will be",
    "start": "2462880",
    "end": "2469000"
  },
  {
    "text": "deployed and once it's deployed we can then and call that function from our for",
    "start": "2469000",
    "end": "2477010"
  },
  {
    "text": "our local environment so all it does is be packaging up that file it tips it",
    "start": "2477010",
    "end": "2482260"
  },
  {
    "text": "into a zip file it sends that a zip file over via the CLI because all the visual studio doing is wrapping our CLI and it",
    "start": "2482260",
    "end": "2489670"
  },
  {
    "text": "passes it puts it into the into the cloud for us and then we can test it from directly from within visual studio",
    "start": "2489670",
    "end": "2496060"
  },
  {
    "text": "but on towards the cloud by saying what's the meaning of life we will invoke this",
    "start": "2496060",
    "end": "2501880"
  },
  {
    "text": "and we get response back 42 from the actual live function on the server it also tells us on the log output some",
    "start": "2501880",
    "end": "2507460"
  },
  {
    "text": "information about how long that ran for how much we were charged the memory consumption as well of that function and",
    "start": "2507460",
    "end": "2512920"
  },
  {
    "text": "so forth lambdas evolved it incredibly but there's been lots of new features added all the time doc net supports been",
    "start": "2512920",
    "end": "2519370"
  },
  {
    "text": "around for a long time we've also added PowerShell support for IT administrators which might want to",
    "start": "2519370",
    "end": "2524950"
  },
  {
    "text": "run PowerShell scripts in in lamda and we've also added the capability called lambda layers this is useful for dynamic",
    "start": "2524950",
    "end": "2530260"
  },
  {
    "text": "languages but with net you can use this to cache NuGet packages or to share NuGet libraries across multiple",
    "start": "2530260",
    "end": "2536260"
  },
  {
    "text": "functions so you can keep your function very small but then use a lambda layer to maybe distribute or use a common",
    "start": "2536260",
    "end": "2543520"
  },
  {
    "text": "library in your in your application there's also this concept one of the",
    "start": "2543520",
    "end": "2549430"
  },
  {
    "start": "2546000",
    "end": "2832000"
  },
  {
    "text": "layers can be a runtime layer and what we can do is add a runtime which maybe we don't support in lambda you can do",
    "start": "2549430",
    "end": "2555190"
  },
  {
    "text": "this for anything so there's PHP that's how we've added PHP support to two lambda but we could also add support for",
    "start": "2555190",
    "end": "2560830"
  },
  {
    "text": "something which we don't support out of the box which is got net core 3 so if you want to test our net core 3 you",
    "start": "2560830",
    "end": "2566380"
  },
  {
    "text": "could do this using a custom runtime so we're going to Visual Studio 2019 create a new project and we're gonna say type",
    "start": "2566380",
    "end": "2573640"
  },
  {
    "text": "in AWS this will bring all the AWS blueprints or sorry not blueprints the project types we can create a custom",
    "start": "2573640",
    "end": "2581290"
  },
  {
    "text": "runtime function",
    "start": "2581290",
    "end": "2584640"
  },
  {
    "text": "create that we're going to use the custom runtime blueprint it just sets a few of few things in the.net core",
    "start": "2589040",
    "end": "2595830"
  },
  {
    "text": "project for us so that we can use a custom runtime the biggest change is the way the function file looks now we have",
    "start": "2595830",
    "end": "2601230"
  },
  {
    "text": "a main entry point it's just a program which is being run and that bootstraps the new framework for us but then",
    "start": "2601230",
    "end": "2606990"
  },
  {
    "text": "ultimately at the bottom we have a function which is going to be executed just like we had in our previous function example and that that version",
    "start": "2606990",
    "end": "2615300"
  },
  {
    "text": "underneath this this function here and that's just doing a to upper at the moment there well let's put in something",
    "start": "2615300",
    "end": "2621480"
  },
  {
    "text": "which is a little bit more complex something which you could only do internet core 3 will use a parameter a",
    "start": "2621480",
    "end": "2628770"
  },
  {
    "text": "tuple a parameter tuple which is basically you can pass in to a tuple to a switch and we're saying I'm passing",
    "start": "2628770",
    "end": "2635550"
  },
  {
    "text": "two values into a switch and then it's switching based upon those two values this is a new feature of c-sharp eight",
    "start": "2635550",
    "end": "2640710"
  },
  {
    "text": "so only supporting dotnet core 3 so what I'm gonna need to do to my project now is I'm gonna have to change the runtime",
    "start": "2640710",
    "end": "2646680"
  },
  {
    "text": "that it's running under so I'm gonna say I want to run this on dotnet 3 obviously got done a3 installed on my machine",
    "start": "2646680",
    "end": "2652730"
  },
  {
    "text": "install.net 3 and then one other change you'll need to make is go into the",
    "start": "2652730",
    "end": "2658440"
  },
  {
    "text": "project and remove this language version latest from it and in the function now",
    "start": "2658440",
    "end": "2668010"
  },
  {
    "text": "it should work then we just need to make one more change inside of the ADA is lambda tools default JSON file and in",
    "start": "2668010",
    "end": "2675210"
  },
  {
    "text": "here this is like the this is the information about how we're going to run our application so how we're going to",
    "start": "2675210",
    "end": "2680760"
  },
  {
    "text": "run our how the function gonna be run in",
    "start": "2680760",
    "end": "2686730"
  },
  {
    "text": "the cloud we'll just say the frameworks dotnet 3 0 and then I can run that oh",
    "start": "2686730",
    "end": "2692090"
  },
  {
    "text": "what I need to do first is just change this function handler now to actually call that rock/paper/scissors function",
    "start": "2692090",
    "end": "2697800"
  },
  {
    "text": "and so it needs to pass in two values of value 1 and value 2 and then that's going to be using the switch statement",
    "start": "2697800",
    "end": "2702960"
  },
  {
    "text": "so what I'll do is take the input a string input and I'll just do a really",
    "start": "2702960",
    "end": "2708300"
  },
  {
    "text": "simple split on I can catenate on the comma as a concatenate err so that",
    "start": "2708300",
    "end": "2716190"
  },
  {
    "text": "should give me an array of two strings now",
    "start": "2716190",
    "end": "2720440"
  },
  {
    "text": "[Music] object one obvi sorry sorry an object",
    "start": "2725540",
    "end": "2731210"
  },
  {
    "text": "one and now if I send this function a string with a comma delimited value or",
    "start": "2731210",
    "end": "2738500"
  },
  {
    "text": "well two values delimited by a comma then it should run so it's you see that",
    "start": "2738500",
    "end": "2745640"
  },
  {
    "text": "language language runtime is now custom dotnet core and I'm going to give it a",
    "start": "2745640",
    "end": "2750799"
  },
  {
    "text": "role again this is the service role that's running under and this is what provides missions to the lambda function",
    "start": "2750799",
    "end": "2756650"
  },
  {
    "text": "and what it can access in the cloud I'm uploading that function just as I did before and what will happen now is AWS",
    "start": "2756650",
    "end": "2765529"
  },
  {
    "text": "is taking this it's taking the same package we're also uploading the SDK the.net core 3 framework along with this",
    "start": "2765529",
    "end": "2771740"
  },
  {
    "text": "function obviously but now I can call this so it's a bigger package obviously",
    "start": "2771740",
    "end": "2777049"
  },
  {
    "text": "but now I can call it with rock comma paper invoke and the response I get back",
    "start": "2777049",
    "end": "2782839"
  },
  {
    "text": "will be from my to port the only way that that would work is if if lambda is supporting c-sharp a and dotnet core 3",
    "start": "2782839",
    "end": "2789430"
  },
  {
    "text": "so paper rock returns a different one as well so if you want to use that",
    "start": "2789430",
    "end": "2794690"
  },
  {
    "text": "particularly if you want to build scalable rock-paper-scissors you can absolutely do that with the new new features in c-sharp 8 and we're we're",
    "start": "2794690",
    "end": "2800809"
  },
  {
    "text": "there from day one supporting c-sharp and net the newest versions the preview",
    "start": "2800809",
    "end": "2806089"
  },
  {
    "text": "versions and when dotnet 5 comes out in November 2020 we'll be right there with support with it making you able to build",
    "start": "2806089",
    "end": "2813230"
  },
  {
    "text": "on that platform as well now I've got quite a few other demos but I've completely run out of time so what I'll",
    "start": "2813230",
    "end": "2820369"
  },
  {
    "text": "do instead is I'll put these on my blog and at the end of this session there's a some more lambda sort of stuff that we",
    "start": "2820369",
    "end": "2827630"
  },
  {
    "text": "could we wanted to show you and but I'll put on my blog and if you're interested in that then go take a look my blog is",
    "start": "2827630",
    "end": "2833839"
  },
  {
    "text": "the Beeb's co dot uk' and also if you're interested in in the.net space your AWS",
    "start": "2833839",
    "end": "2839450"
  },
  {
    "text": "look at our github page github.com for slash AWS for slash dotnet all of the",
    "start": "2839450",
    "end": "2844819"
  },
  {
    "text": "stuff that we do is done open source and in public and from the sdk to all of the different NuGet packages that we develop",
    "start": "2844819",
    "end": "2851079"
  },
  {
    "text": "please well as well if you could rate this session in the mobile",
    "start": "2851079",
    "end": "2857029"
  },
  {
    "text": "application I'd be extraordinarily grateful if you if you've loved the applet if you've loved this session if you've really found it useful and",
    "start": "2857029",
    "end": "2862910"
  },
  {
    "text": "helpful please tweet about it and please give me great feedback on the session application if you've hated it and you",
    "start": "2862910",
    "end": "2868670"
  },
  {
    "text": "think it's terrible and you think I'm rubbish please email me at my MBTA amazon.com thank you very much indeed",
    "start": "2868670",
    "end": "2874430"
  },
  {
    "text": "[Applause]",
    "start": "2874430",
    "end": "2878339"
  }
]