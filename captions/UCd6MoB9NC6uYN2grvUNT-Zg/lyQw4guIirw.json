[
  {
    "text": "I'll ready to start cool hey I'm Matt I",
    "start": "740",
    "end": "6359"
  },
  {
    "text": "am ever so slightly jet-lagged anyone else on the European timezone yeah my",
    "start": "6359",
    "end": "12870"
  },
  {
    "text": "God we're all gonna fall asleep are we at least out we've got we've got a buzzword to talk about",
    "start": "12870",
    "end": "18270"
  },
  {
    "text": "we've got nano services to talk about which is I think a really interesting",
    "start": "18270",
    "end": "24300"
  },
  {
    "text": "concept I'd love to hear your thoughts too on it it's it's basically saying in",
    "start": "24300",
    "end": "30330"
  },
  {
    "text": "this world where we have the cloud and we have all these services and we have large teams developing richer things and",
    "start": "30330",
    "end": "35579"
  },
  {
    "text": "ever is little way of working that's a bit different is there a way of architecting our software that could be a bit smaller than we usable or go into",
    "start": "35579",
    "end": "42480"
  },
  {
    "text": "that we'll also go into ElastiCache deep dive into that a little bit primarily",
    "start": "42480",
    "end": "48329"
  },
  {
    "text": "Redis because reddish is just the most phenomenally fast and flexible thing if you don't know it will look a bit at",
    "start": "48329",
    "end": "54420"
  },
  {
    "text": "that as well so two things to look at will easily get",
    "start": "54420",
    "end": "59789"
  },
  {
    "text": "food within the hour I think so plenty of time for coffee afterwards and do grab me for the week if you want to talk",
    "start": "59789",
    "end": "65070"
  },
  {
    "text": "about it because it's I think really cool and so I'm from the BBC I'm a head",
    "start": "65070",
    "end": "71010"
  },
  {
    "text": "of architecture for various bits um has anyone not heard of the BBC",
    "start": "71010",
    "end": "76820"
  },
  {
    "text": "just check-in I thought so the BBC's it will Kapadia describes it as the largest",
    "start": "76820",
    "end": "82759"
  },
  {
    "text": "broadcaster in the world I think the word broadcast is getting a bit tough nowadays isn't it everyone's a",
    "start": "82759",
    "end": "88470"
  },
  {
    "text": "broadcaster everyone everyone's in it but it is huge a lot of it is UK only",
    "start": "88470",
    "end": "94790"
  },
  {
    "text": "regrettably but there's an awful lot global as well as I'm sure you know and there's just a random set of some of the",
    "start": "94790",
    "end": "100680"
  },
  {
    "text": "websites as well as dozens of radio stations and TV channels and all that kind of things as well it's it's got",
    "start": "100680",
    "end": "105990"
  },
  {
    "text": "this wonderful mission to entertain educate and inform it's not",
    "start": "105990",
    "end": "112170"
  },
  {
    "text": "for profit it's you know it's just there to do those things and when the world",
    "start": "112170",
    "end": "117450"
  },
  {
    "text": "stops leading entertaining educating an informed it'll disappear but there's quite a lot of that required still right so it is it's a great organization and",
    "start": "117450",
    "end": "124560"
  },
  {
    "text": "just trying to make the world a better place and it's it wants to do as much as it can and",
    "start": "124560",
    "end": "130210"
  },
  {
    "text": "andum li and it tries to do as much as it can but it's got a fixed income until",
    "start": "130210",
    "end": "135550"
  },
  {
    "text": "the real challenge is how can you do that breath how can you let a reasonable",
    "start": "135550",
    "end": "141070"
  },
  {
    "text": "number of developers and learn all for a lot of people making content to be honest do such a wide variety of stuff",
    "start": "141070",
    "end": "147630"
  },
  {
    "text": "you know in an efficient way with a with a fixed resource fixed income that's",
    "start": "147630",
    "end": "153100"
  },
  {
    "text": "gold how to be efficient right velocity has a develop stuff there's a problem we all have and take for example the the",
    "start": "153100",
    "end": "159400"
  },
  {
    "text": "one on the right is BBC news in Korean primarily designed for the North Korean",
    "start": "159400",
    "end": "165070"
  },
  {
    "text": "market that's North Korea the one country that doesn't have the Internet",
    "start": "165070",
    "end": "170100"
  },
  {
    "text": "but you know that's how much the BBC's trying to do with a download button on there somewhere if you're wondering",
    "start": "170100",
    "end": "175840"
  },
  {
    "text": "maybe not go too much into that process but that you know there's so much going",
    "start": "175840",
    "end": "181300"
  },
  {
    "text": "on so much good stuff going on there um this is the most popular have you seen",
    "start": "181300",
    "end": "188200"
  },
  {
    "text": "this it's fantastic isn't it the comedy timing of this poor guy being interviewed on the rolling news channel",
    "start": "188200",
    "end": "194320"
  },
  {
    "text": "the BBC has when his kids and then his other kid and I love when the moment",
    "start": "194320",
    "end": "199330"
  },
  {
    "text": "comes sliding in to rescue them it's",
    "start": "199330",
    "end": "207310"
  },
  {
    "text": "just the perfect company timing isn't it hundreds of millions of shares around",
    "start": "207310",
    "end": "213160"
  },
  {
    "text": "the world that moment football guy it",
    "start": "213160",
    "end": "227770"
  },
  {
    "text": "was all choreographed by the way no not really it's been interviewed since as well he's",
    "start": "227770",
    "end": "233860"
  },
  {
    "text": "ashamed it's very funny and yes so we're here to talk about let's call it a",
    "start": "233860",
    "end": "239590"
  },
  {
    "text": "pattern nano services an idea which you could apply to what you're working on as well and we've done an implantation at",
    "start": "239590",
    "end": "245050"
  },
  {
    "text": "the BBC that's now powering some of the most important things we do with BBC online it's as you probably guessed",
    "start": "245050",
    "end": "253600"
  },
  {
    "text": "about making things small in units of logic that are kind of understandable",
    "start": "253600",
    "end": "260200"
  },
  {
    "text": "simple but also you know reasonable of themselves they do one thing well and they then could then be used in",
    "start": "260200",
    "end": "266920"
  },
  {
    "text": "all kinds of different ways like Lego bricks will come on to that and it works behind the scenes by something we've a",
    "start": "266920",
    "end": "272440"
  },
  {
    "text": "platform we built we'll go into all on AWS making really heavy use of",
    "start": "272440",
    "end": "277510"
  },
  {
    "text": "ElastiCache so what do a bit of background we will look at this nano service pattern we'll look at the BBC's",
    "start": "277510",
    "end": "284230"
  },
  {
    "text": "implementation that's where we go deep on ElastiCache for a few minutes and we'll end with the pros and cons because like everything there's good and",
    "start": "284230",
    "end": "290140"
  },
  {
    "text": "bad about this this way of working right so it's an option to choose all right good because I haven't got another plan",
    "start": "290140",
    "end": "297690"
  },
  {
    "text": "okay do we all know ElastiCache is hopefully basically our monsoon not from",
    "start": "297690",
    "end": "303880"
  },
  {
    "text": "the ElastiCache team but it's a managed service that basically runs your Redis",
    "start": "303880",
    "end": "309160"
  },
  {
    "text": "or your memcache on top of an ec2 fear for a slight extra cost I don't know a",
    "start": "309160",
    "end": "314890"
  },
  {
    "text": "lot of that memcache other than it's very basic and there's not a lot of reasons to use it reddit's on the other hand is brilliant",
    "start": "314890",
    "end": "322000"
  },
  {
    "text": "they ElastiCache automates a lot of the basic stuff it helps you with the replication and sharding a bit it can do",
    "start": "322000",
    "end": "329680"
  },
  {
    "text": "backups for you and they've obviously optimized quite a lot of service as well so those I can't think of a very good",
    "start": "329680",
    "end": "334810"
  },
  {
    "text": "reason why you wouldn't use ElastiCache if you wanted to run Redis unless you really wants it to be on the same box as your your and you know software but it's",
    "start": "334810",
    "end": "342880"
  },
  {
    "text": "very easy we've used it from day one of needing Redis and have on the back it's it's great for that different sizes are",
    "start": "342880",
    "end": "349960"
  },
  {
    "text": "available you can you very rarely CPU limited but memory our network is normally your pointer you can pick different size ones including the t2",
    "start": "349960",
    "end": "356230"
  },
  {
    "text": "instances the t2 ec2 instances we get you know percentage of a CPU which can be useful for local traffic ones and my",
    "start": "356230",
    "end": "363400"
  },
  {
    "text": "Redis itself is that its heart a key value store but has many different data types including lists and sets and that",
    "start": "363400",
    "end": "369880"
  },
  {
    "text": "kind of thing and you can do all kinds of rich stuff with it as we'll look at in a minute you can even do things like",
    "start": "369880",
    "end": "375370"
  },
  {
    "text": "queues yeah you can also do Lewis scripting so it's kind of the same as",
    "start": "375370",
    "end": "381810"
  },
  {
    "text": "the database stored procedures it can run lower on there on on the reddit",
    "start": "381810",
    "end": "387700"
  },
  {
    "text": "innocence has to be careful because all the ones throw the same same process so it'll block in the other calls it would be a good place to do some big",
    "start": "387700",
    "end": "393310"
  },
  {
    "text": "calculations but for kind of basic scripting and atomic calls favor useful and there's also pub/sub",
    "start": "393310",
    "end": "400080"
  },
  {
    "text": "SNS style notifications if you need to do that as well although you have to be a little bit careful how that scales",
    "start": "400080",
    "end": "406090"
  },
  {
    "text": "because if you have many hundreds of boxes again as a single process thing so it can take a while to do share that out",
    "start": "406090",
    "end": "411670"
  },
  {
    "text": "but there's all kinds of stuff you can do and there is sharding if you need to distribute over multiple boxes that",
    "start": "411670",
    "end": "417550"
  },
  {
    "text": "comes free Redis there's replication as well if you've got a read heavy environment you can read from the slaves it's always a single master model but",
    "start": "417550",
    "end": "425110"
  },
  {
    "text": "you can read from the slaves and it'll failover to the slave if the master fails as well and the elastic has to you",
    "start": "425110",
    "end": "431380"
  },
  {
    "text": "launched a few weeks ago the ability to grow and reduce the subtle of the size of your shard in cluster and for the",
    "start": "431380",
    "end": "438690"
  },
  {
    "text": "data to become a spread out automatically every period of time as well which is kind of cool if you've got you know low that increases over time so",
    "start": "438690",
    "end": "446140"
  },
  {
    "text": "we will we will delve into ElastiCache a bit more in a bit first a little bit of",
    "start": "446140",
    "end": "451390"
  },
  {
    "text": "background on the BBC they have a few hundred developers so your reasonable",
    "start": "451390",
    "end": "457510"
  },
  {
    "text": "size broken down into many small product teams and their journey over the past five years has been the same as everyone",
    "start": "457510",
    "end": "463630"
  },
  {
    "text": "else it's moved from their own data centers to the cloud Dom only Amazon of course that's over here it's gone from",
    "start": "463630",
    "end": "471070"
  },
  {
    "text": "fewer bigger releases because that's what you did in the old days right with your big data centers to continuous",
    "start": "471070",
    "end": "477490"
  },
  {
    "text": "delivery not quite continuous deployment normally but we've got things being released every few minutes during working hours as an awful lot of stuff",
    "start": "477490",
    "end": "483550"
  },
  {
    "text": "being continually updated all good healthy stuff right and we've also gone from these separate single disciplinary",
    "start": "483550",
    "end": "489520"
  },
  {
    "text": "teams to the wonderful world of DevOps where everything's multidisciplinary and you get that you get that flexibility to",
    "start": "489520",
    "end": "495220"
  },
  {
    "text": "do what you want a cloud can see the DevOps it's the bandwagon we're all one right all good stuff except there's",
    "start": "495220",
    "end": "503140"
  },
  {
    "text": "always dance fights right it's always pros and cons and particularly with continuous delivery in DevOps they can be quite expensive or let's just say",
    "start": "503140",
    "end": "510340"
  },
  {
    "text": "distracting right so it's fab that you can release something every five minutes but if you don't really get if you",
    "start": "510340",
    "end": "517150"
  },
  {
    "text": "haven't properly monitored it if you haven't got a really good build and test pipeline and so on it can become very",
    "start": "517150",
    "end": "522400"
  },
  {
    "text": "expensive and likewise with DevOps it's brilliantly you have that flexibility but when your developers realize they",
    "start": "522400",
    "end": "528310"
  },
  {
    "text": "now are networking engineers and security specialists and all the it can get quite tough right you",
    "start": "528310",
    "end": "534240"
  },
  {
    "text": "suddenly have to become a jack of all trades and sometimes the developer who",
    "start": "534240",
    "end": "539970"
  },
  {
    "text": "used to be brilliant to just writing CSS and making beautiful front-end web pages certainly finds themselves configuring",
    "start": "539970",
    "end": "545040"
  },
  {
    "text": "IP tables of understanding networking subnets you know it's quite a it's quite challenging that you can spread yourself",
    "start": "545040",
    "end": "551850"
  },
  {
    "text": "thin ly and the one of all my years of the BBC and elsewhere the one of all the",
    "start": "551850",
    "end": "557639"
  },
  {
    "text": "phrases we hear in all the buzz words the one I've always loved the best is this one make the common things easy and",
    "start": "557639",
    "end": "563129"
  },
  {
    "text": "the special things possible it's kind of come from a Clabby wall that was the",
    "start": "563129",
    "end": "568620"
  },
  {
    "text": "earliest reference to it with pill was only 15 years ago now and it's so",
    "start": "568620",
    "end": "575040"
  },
  {
    "text": "obvious as to kind of always not be worth it right but it's actually really hard to do you normally tend to either",
    "start": "575040",
    "end": "580259"
  },
  {
    "text": "the former the first line or the second right so our old data centre setup was",
    "start": "580259",
    "end": "586589"
  },
  {
    "text": "very much good for the first one we had a bunch of PHP boxes and Java boxes and people could write their stuff and",
    "start": "586589",
    "end": "591930"
  },
  {
    "text": "upload it and everything was fine that's great but as soon as you wanted to do something different sorry you know we don't have that",
    "start": "591930",
    "end": "598019"
  },
  {
    "text": "capability and so you didn't make my special things possible on the other hand the cloud as you very good at",
    "start": "598019",
    "end": "603899"
  },
  {
    "text": "making the special things possible right there's an awful lot of buttons in the AWS console doesn't mean it's impressive",
    "start": "603899",
    "end": "610680"
  },
  {
    "text": "all right he's very hard to become good at all of those things and sometimes all",
    "start": "610680",
    "end": "615689"
  },
  {
    "text": "of a sudden setting up a simple web server can't be quite hard right if you choose to do it by speeding up your own easy to use and what's a load balancer",
    "start": "615689",
    "end": "621839"
  },
  {
    "text": "and blah blah blah and before you know it you know you reinventing a lot of stuff that a lot of people have already",
    "start": "621839",
    "end": "627209"
  },
  {
    "text": "it's kind of really hard to get that balance right you really want to be solving every problem what's right no",
    "start": "627209",
    "end": "633209"
  },
  {
    "text": "matter how big your organization well somebody's worked out how to set up with a perfect build server or their ideal",
    "start": "633209",
    "end": "638309"
  },
  {
    "text": "test setup or you know them and the rest configured engine X or whatever you kind of want to go right bank that everyone",
    "start": "638309",
    "end": "644850"
  },
  {
    "text": "use that we want the next thing right in a large organization with dozens of different teams it can be really hard to",
    "start": "644850",
    "end": "651180"
  },
  {
    "text": "share that knowledge you say you want to start standardizing that not forcing it because you won't allow the specialist",
    "start": "651180",
    "end": "656730"
  },
  {
    "text": "to happen but forcing that stuff right which then lets you spend more time innovating on whatever it is you really want to be doing this difference which",
    "start": "656730",
    "end": "663120"
  },
  {
    "text": "leads to your better appearances on the other hand you do want to empower teams to do whatever they want right because you want that",
    "start": "663120",
    "end": "668980"
  },
  {
    "text": "freedom from which you can then go and pick the right tool for the job you want to press those buttons in the console because that lets you make better",
    "start": "668980",
    "end": "674499"
  },
  {
    "text": "products right so hard to find the right balance between those two things and",
    "start": "674499",
    "end": "680649"
  },
  {
    "text": "this is a screenshot from chart beat G that chart beats analytics tool used by",
    "start": "680649",
    "end": "687339"
  },
  {
    "text": "most journalistic websites around the world to track engagement every year",
    "start": "687339",
    "end": "693910"
  },
  {
    "text": "they summarize the most engaging sites that they saw on the Internet this is the most recent one from 2016 which was",
    "start": "693910",
    "end": "699489"
  },
  {
    "text": "quite a big news year number one five three 538 with a phenomenally popular",
    "start": "699489",
    "end": "706600"
  },
  {
    "text": "site of everyone looking at the US election results going Oh wasn't they",
    "start": "706600",
    "end": "712929"
  },
  {
    "text": "followed by a number to Britain Ferg away its economy with the BBC's coverage of the brig's at live blog there as well",
    "start": "712929",
    "end": "719619"
  },
  {
    "text": "and you can see the BBC is also in number seven and number eight we're in the top ten more than anyone else from top hundred I think more than anyone else as well we have a phenomenally",
    "start": "719619",
    "end": "726610"
  },
  {
    "text": "popular site is that a blessing or a curse as developers as a curse right",
    "start": "726610",
    "end": "732369"
  },
  {
    "text": "he's really hard to scale that far and we're using cloud friends and other CD ends and got all kinds of caching and",
    "start": "732369",
    "end": "738819"
  },
  {
    "text": "all this clever stuff in front of it but it's still very hard if you want to offer a really good experience that varies depending on the user and the",
    "start": "738819",
    "end": "745089"
  },
  {
    "text": "location and so on so not only do we have this desire to be efficient to do",
    "start": "745089",
    "end": "750819"
  },
  {
    "text": "reuse but we also have this large problem of needing to be extremely scalable as well as super reliable for",
    "start": "750819",
    "end": "757059"
  },
  {
    "text": "these big moments and you don't want that problems have to be solved several times over and over again right micro",
    "start": "757059",
    "end": "763929"
  },
  {
    "text": "services are fab my colleague Stephen Godwin talks about them this morning in another talk and they are of course very",
    "start": "763929",
    "end": "771040"
  },
  {
    "text": "flexible great ways of building things new you've read all the blog posts people the talks right everyone knows",
    "start": "771040",
    "end": "776079"
  },
  {
    "text": "it's great multiple teams and get involved each building their own micro service you can use different tech if you want if the ploys are smaller and say for",
    "start": "776079",
    "end": "782619"
  },
  {
    "text": "them the big model if because you've got these individual components and they can also be more shareable and more flexible",
    "start": "782619",
    "end": "787989"
  },
  {
    "text": "and scale their own way as well they are very powerful they also have a lot of",
    "start": "787989",
    "end": "795009"
  },
  {
    "text": "cons like everything in life they have that maintenance overhead because suddenly you've got all of these things that you're looking after you",
    "start": "795009",
    "end": "801279"
  },
  {
    "text": "have the comms overhead because if you're talking over say HTTP as most do there's that natural not just the",
    "start": "801279",
    "end": "806499"
  },
  {
    "text": "latency in happen and natural transaction of course but also the error",
    "start": "806499",
    "end": "811509"
  },
  {
    "text": "handling ones if one doesn't respond so on you know it can be quite expensive that multiple versioning can be a real",
    "start": "811509",
    "end": "817360"
  },
  {
    "text": "problem if you're making a breaking change to your micro service that's used by other micro services made by other teams always a challenge right you do",
    "start": "817360",
    "end": "824740"
  },
  {
    "text": "run to side by side double share your maintenance costs do you do you have some compatibility layer do you wait for",
    "start": "824740",
    "end": "831309"
  },
  {
    "text": "them to updates in large organizations it can take months years for your dependencies just to catch up with you",
    "start": "831309",
    "end": "837309"
  },
  {
    "text": "so this this can always be very big hardener big my was 18 and then harder to refactor as well because once you've",
    "start": "837309",
    "end": "843430"
  },
  {
    "text": "got these in place made by different teams coming along at a later point and saying that's not cut up right involve changing a lot of teams very very hard",
    "start": "843430",
    "end": "850209"
  },
  {
    "text": "to do in practice and there's an inevitably cost of running all these things as well so nothing new there and",
    "start": "850209",
    "end": "857499"
  },
  {
    "text": "the web the web full of people talking about this stuff for example on the Reilly sites and the Mac makes a point",
    "start": "857499",
    "end": "866259"
  },
  {
    "text": "as well talking about you know the fallacies a distributed computing that natural problems of latency and eventual",
    "start": "866259",
    "end": "871720"
  },
  {
    "text": "consistency and so on versioning configuration management nothing nothing new there the Wikipedia article",
    "start": "871720",
    "end": "879209"
  },
  {
    "text": "generally is more positive talking about all that although all the benefits of Micra services that's quite good but if",
    "start": "879209",
    "end": "884740"
  },
  {
    "text": "we do scroll down to the bottom there is a bit on minor services which goes Nano services are an anti-pattern yeah oops",
    "start": "884740",
    "end": "894639"
  },
  {
    "text": "that's the problem that's there I'll put it today's talk yeah well well if we",
    "start": "894639",
    "end": "901029"
  },
  {
    "text": "look to be precisely what the quote is it's where these the the problem is when the overhead the communication and",
    "start": "901029",
    "end": "908500"
  },
  {
    "text": "maintenance so it outweighs its benefit and so ok fair enough if we want to go smaller then we're gonna have to find",
    "start": "908500",
    "end": "914199"
  },
  {
    "text": "some way of getting rid of that overhead we'll get there so now what is a nano",
    "start": "914199",
    "end": "921790"
  },
  {
    "text": "service it is it was possible for a single thing it does one thing well the",
    "start": "921790",
    "end": "928329"
  },
  {
    "text": "UNIX philosophy if you know it it's a bit like kind of a UNIX came out come you said or grapple or whatever and they",
    "start": "928329",
    "end": "935260"
  },
  {
    "text": "do one thing really really well they're super powerful they're flexible it take lots of arguments but they do one thing",
    "start": "935260",
    "end": "941170"
  },
  {
    "text": "well and you'll know what they do and you don't really care how they work they're black box you just know when you",
    "start": "941170",
    "end": "946510"
  },
  {
    "text": "win you request something from it it'll do it - very very well that's a nano service so it's probably smaller than",
    "start": "946510",
    "end": "953320"
  },
  {
    "text": "the micro service and you know micro services are big and small right in general they don't get too small for the reason Wikipedia told us but but you",
    "start": "953320",
    "end": "960970"
  },
  {
    "text": "know there could be as small as this isn't it as no there's no hard and fast rule is about how big this thing how big these things are in general they are",
    "start": "960970",
    "end": "966910"
  },
  {
    "text": "smaller not a thousand times smaller whatever people just just a bit smaller",
    "start": "966910",
    "end": "975070"
  },
  {
    "text": "and they are almost certain to call other nano services because they",
    "start": "975070",
    "end": "980980"
  },
  {
    "text": "themselves are too small to do your whole system so they almost certainly come together to make something richer",
    "start": "980980",
    "end": "986470"
  },
  {
    "text": "just like micro services dauphin thing and they are perhaps what this is one of",
    "start": "986470",
    "end": "991480"
  },
  {
    "text": "the definitions they are the ideal size thing to change and then to release okay",
    "start": "991480",
    "end": "997120"
  },
  {
    "text": "I want to change this particularly bits of behavior and I want to get it out there and I want it to to see how that",
    "start": "997120",
    "end": "1003390"
  },
  {
    "text": "effect is maybe you know kind of blue greener or you know multi-variant it or something like that so that you can kind",
    "start": "1003390",
    "end": "1008910"
  },
  {
    "text": "of see the impact of that and then if it doesn't work you can roll it back or whatever and in the world just imagine a",
    "start": "1008910",
    "end": "1015660"
  },
  {
    "text": "world where there that cost of these things are so small you know you're not you you're not worried about having loads of different things changing going",
    "start": "1015660",
    "end": "1022650"
  },
  {
    "text": "on at once you know the cost of deploying them or running them you found some way to overcome that what how great",
    "start": "1022650",
    "end": "1028350"
  },
  {
    "text": "would this be if you've got these lovely small things that you can be working on and releasing and updating and so on a",
    "start": "1028350",
    "end": "1034069"
  },
  {
    "text": "really simple example say you're building some kind of e-commerce site",
    "start": "1034070",
    "end": "1039980"
  },
  {
    "text": "here's two things you might have get customer order history and place order yeah two basic commands you might have",
    "start": "1040010",
    "end": "1046550"
  },
  {
    "text": "they you might have put them in one microservice right because they're about order handling and you user handling",
    "start": "1046550",
    "end": "1052860"
  },
  {
    "text": "stuff you would probably put them in more microscopes but they definitely would be two separate nano services and",
    "start": "1052860",
    "end": "1058080"
  },
  {
    "text": "you know get a customer order history cooker some kind of data warehousing activity right so maybe you know quick",
    "start": "1058080",
    "end": "1064110"
  },
  {
    "text": "bring these in Big Data res query or something where it's place order it's probably more talking to your stock control system and delivery system so",
    "start": "1064110",
    "end": "1070140"
  },
  {
    "text": "they're the kind of a lady but they are different right so being able to treat them separately and on different days to",
    "start": "1070140",
    "end": "1075840"
  },
  {
    "text": "release them being sure you're only releasing one bit that's kind of ether that make sense right real-life example",
    "start": "1075840",
    "end": "1085049"
  },
  {
    "text": "we use nano services mainly for either making web pages or for making api's",
    "start": "1085049",
    "end": "1091470"
  },
  {
    "text": "that then go on to power web pages or apps or other things we have and so this",
    "start": "1091470",
    "end": "1098850"
  },
  {
    "text": "one for example the BBC News homepage them the highest profile page 3bc has the box that the first bit with a",
    "start": "1098850",
    "end": "1106080"
  },
  {
    "text": "British news in the evening and the links that that's that's that's been there for well as that doesn't come through but the whole bit you can see",
    "start": "1106080",
    "end": "1112230"
  },
  {
    "text": "beneath it all those headlines that is a nano service it isn't it is one nano",
    "start": "1112230",
    "end": "1118559"
  },
  {
    "text": "service but that would be too much for one to do so it then calls other nano services to get the bits so for example",
    "start": "1118559",
    "end": "1123960"
  },
  {
    "text": "the main headline will be a nano service that time line to a rice will be one the list of headlines on the right-hand side",
    "start": "1123960",
    "end": "1130110"
  },
  {
    "text": "that would be another one and so on and then behind that there will be more nano services doing the kind of data layer",
    "start": "1130110",
    "end": "1136559"
  },
  {
    "text": "the modelling to fetch that data from whatever database it is and to return that to make this page all in all I",
    "start": "1136559",
    "end": "1143549"
  },
  {
    "text": "think there's about 30 nano services responsible for making this page if you",
    "start": "1143549",
    "end": "1149460"
  },
  {
    "text": "feed all the bits we'll have a look at the demo in a while here's another example this is the page that happen to cover the Olympic Games",
    "start": "1149460",
    "end": "1155610"
  },
  {
    "text": "last year the Olympics are a massive thing for the BBC they spent just under a gazillion dollars on Rights it's you",
    "start": "1155610",
    "end": "1165600"
  },
  {
    "text": "know a mass it's the biggest event in the world is huge and just like the other dnews hand pays biggest page we",
    "start": "1165600",
    "end": "1173850"
  },
  {
    "text": "have is the biggest threat we have and again we've used nano services to do it so of how I didn't blew the whole page",
    "start": "1173850",
    "end": "1178919"
  },
  {
    "text": "is one nano service which happens to call other nano services that look one in yellow and these ones down here for",
    "start": "1178919",
    "end": "1184559"
  },
  {
    "text": "these different bits but even they were too much of the dense split up so for example on the right so that medals table is that would be a nano service",
    "start": "1184559",
    "end": "1191340"
  },
  {
    "text": "like why is that kind of video carousel on the right that would be a nano service and there's a few more on there",
    "start": "1191340",
    "end": "1196710"
  },
  {
    "text": "as well so so you kind of carry on like that that make sense but it's great because what you can do is say you found a bug",
    "start": "1196710",
    "end": "1202560"
  },
  {
    "text": "say in the middle of the Olympics you found a bug with that carousel you can fix it and release it and be sure you're",
    "start": "1202560",
    "end": "1208030"
  },
  {
    "text": "only affecting that bit um whereas I led the architecture of the previous Summer",
    "start": "1208030",
    "end": "1214870"
  },
  {
    "text": "Olympics in 2012 which was in London and so a massive for the BBC and by them about then we did have a monolith",
    "start": "1214870",
    "end": "1221100"
  },
  {
    "text": "architecture we didn't have this and we found bugs in the middle of the games and we didn't dare fix them because we're just so petrified of making that",
    "start": "1221100",
    "end": "1228190"
  },
  {
    "text": "change in the middle of the Olympic Games now not a problem which is quite happily that these things go out even during the major events because you're",
    "start": "1228190",
    "end": "1234310"
  },
  {
    "text": "only making such a small change let's look at that example to that that",
    "start": "1234310",
    "end": "1241060"
  },
  {
    "text": "Olympics page is actually a very generic page you can cover any event to be in an election or a music festival order so",
    "start": "1241060",
    "end": "1247060"
  },
  {
    "text": "it's a generic event page and do you remember how its split into bits you can kind of draw it as a graph this tree of",
    "start": "1247060",
    "end": "1253960"
  },
  {
    "text": "nano services so the various different bit to the page and you remember on the right hand side there was a medals table",
    "start": "1253960",
    "end": "1260310"
  },
  {
    "text": "so this is kind of what's going on behind the scenes these different nano services but the beauty of it is now",
    "start": "1260310",
    "end": "1265930"
  },
  {
    "text": "you've got these things that are services you can call them if you want",
    "start": "1265930",
    "end": "1271780"
  },
  {
    "text": "as a REST API you can get them and you can then even the other way so the medals table we then use on a dedicated",
    "start": "1271780",
    "end": "1276970"
  },
  {
    "text": "medals page they looked a bit like that we then made a multilingual medals which actually made by different",
    "start": "1276970",
    "end": "1285640"
  },
  {
    "text": "teams not all of these things are made by the same team of course so that will be specialists in multilingual sites",
    "start": "1285640",
    "end": "1291010"
  },
  {
    "text": "then made a variation that works in different languages such as Arabic and that appeared on the Arabic news homepage like that behind the scenes",
    "start": "1291010",
    "end": "1299440"
  },
  {
    "text": "that medals module so they always won so far have all been ones making chunks of HTML but there's no now no service can",
    "start": "1299440",
    "end": "1305980"
  },
  {
    "text": "do anything so it uses another one that returns JSON for the data of what medals have been won which of course is getting",
    "start": "1305980",
    "end": "1312670"
  },
  {
    "text": "it stuff from a database that knows how to do that and then once you've got that as a service here's a nice clean list of",
    "start": "1312670",
    "end": "1317830"
  },
  {
    "text": "all the medals that have been won you can start to do other things you can start to send mobile alerts push alerts to your app so what we do or you can",
    "start": "1317830",
    "end": "1325330"
  },
  {
    "text": "start to send it to we have apps for internet connected",
    "start": "1325330",
    "end": "1330460"
  },
  {
    "text": "I can send it to that like that during the Olympics last year so you have all of these nano services made by different",
    "start": "1330460",
    "end": "1337570"
  },
  {
    "text": "teams with different specialities but coming together bit like micro services but far more fine-grained and it works",
    "start": "1337570",
    "end": "1345550"
  },
  {
    "text": "rather well that is actually if you were to take our event page that one which",
    "start": "1345550",
    "end": "1354370"
  },
  {
    "text": "can cover Olympics and elections and music events anything else and actually show up theoretically all of the Nano",
    "start": "1354370",
    "end": "1360220"
  },
  {
    "text": "services could be called as a circles that's what you get and that's kind of",
    "start": "1360220",
    "end": "1365740"
  },
  {
    "text": "unreadable right so that's kind of a bit bonkers but we don't really draw it out",
    "start": "1365740",
    "end": "1372550"
  },
  {
    "text": "that way so it doesn't really matter and that's that's only what you know the the very worst case if there was a soccer match",
    "start": "1372550",
    "end": "1377890"
  },
  {
    "text": "on that happen to occlude and election results in the middle of a music festival you know my kind of it wouldn't you know you would be kind of impossible",
    "start": "1377890",
    "end": "1383470"
  },
  {
    "text": "to do that but it's theoretically there and so you have you know dozens of different teams building their",
    "start": "1383470",
    "end": "1389290"
  },
  {
    "text": "specialist bit in that I think we probably need to work on a diagramming",
    "start": "1389290",
    "end": "1395080"
  },
  {
    "text": "if we zoom in a bit you can't no chats are following those lines right it doesn't make any sense we probably could do a better job of improving our tooling",
    "start": "1395080",
    "end": "1400870"
  },
  {
    "text": "here but again it doesn't really matter because you've got these things that responsible for doing one thing well and they're well isolated and there's a lot",
    "start": "1400870",
    "end": "1406990"
  },
  {
    "text": "you know they behave as long as they behave correctly it all fits together and if you can read some of the words there's things like cricket in there the",
    "start": "1406990",
    "end": "1413440"
  },
  {
    "text": "fine sport of crickets if you know it things showing the results for that there's something around pagination",
    "start": "1413440",
    "end": "1418900"
  },
  {
    "text": "something around translations you know you get the idea things that you can kind of get what they do but are there",
    "start": "1418900",
    "end": "1426310"
  },
  {
    "text": "is a service for you to use and build stuff up in different ways so how's it",
    "start": "1426310",
    "end": "1431500"
  },
  {
    "text": "working all on Amazon basically if you're a developer anyone wanting to",
    "start": "1431500",
    "end": "1437200"
  },
  {
    "text": "make one of these nano services you simply stick it in an s3 bucket we've",
    "start": "1437200",
    "end": "1442420"
  },
  {
    "text": "actually built an API to help you do that but that's basically sticking it in an s3 bucket just as a zip guitar of",
    "start": "1442420",
    "end": "1448840"
  },
  {
    "text": "your source code and then when somebody needs to run your nano service it runs",
    "start": "1448840",
    "end": "1456700"
  },
  {
    "text": "on any platforms bunch of ec2 s we have do it basically that will low",
    "start": "1456700",
    "end": "1463970"
  },
  {
    "text": "in the code your code and we'll run it and chances are vast majority the time the codes already loaded in but if not",
    "start": "1463970",
    "end": "1470510"
  },
  {
    "text": "we've kept that we've managed to speed that up so it can load most things in wind within it comes to be under a second so there's not much about",
    "start": "1470510",
    "end": "1476540"
  },
  {
    "text": "whichever hits but most the time it's already loaded up and ready to go anyway so you have a favorite fast response time and when one nano service wants to",
    "start": "1476540",
    "end": "1483080"
  },
  {
    "text": "call another because it's all in one platform it's not a problem it can just burn it and we crash stuff this is where",
    "start": "1483080",
    "end": "1490400"
  },
  {
    "text": "the elastic hash comes in we cache the response of everything and often you",
    "start": "1490400",
    "end": "1497090"
  },
  {
    "text": "need to go off and make other calls to other things to get your data that powers it and so on not a problem we",
    "start": "1497090",
    "end": "1502280"
  },
  {
    "text": "also use elastic cash as a cue to track it all and we also use last cash to",
    "start": "1502280",
    "end": "1507650"
  },
  {
    "text": "store the metadata of what's going on so three different ways in which is which elastic cash is being used let's delve",
    "start": "1507650",
    "end": "1514730"
  },
  {
    "text": "deep into them so we store the output of",
    "start": "1514730",
    "end": "1521120"
  },
  {
    "text": "everything so you remember the tree of all those things we store everyone whether it was requested by a user or",
    "start": "1521120",
    "end": "1527210"
  },
  {
    "text": "not we store the whole lot why not it's so incredibly cheap just sig stuff in Redis stick it in there it might be",
    "start": "1527210",
    "end": "1532940"
  },
  {
    "text": "useful we just keep thinking of that I gets full up and then and then Redis will automatically discard the older",
    "start": "1532940",
    "end": "1538100"
  },
  {
    "text": "stuff nice and simple so a couple of screenshots of the most read on the news home page for example and then the the",
    "start": "1538100",
    "end": "1543770"
  },
  {
    "text": "data behind it that's powering that there are two different nano services that course work together we cache both",
    "start": "1543770",
    "end": "1549320"
  },
  {
    "text": "of them in ElastiCache because we can and that way is that data the data is not directly called but if it's used in",
    "start": "1549320",
    "end": "1554870"
  },
  {
    "text": "some other way you know on a different page or maybe by an app natively or something it's there and super fast",
    "start": "1554870",
    "end": "1562030"
  },
  {
    "text": "we're storing up to eight million items seems to be where we are we're charge it across for reasonable sized and for X",
    "start": "1562030",
    "end": "1570140"
  },
  {
    "text": "large boxes not a problem storing millions of items Redis if you don't know stores everything in memory it's",
    "start": "1570140",
    "end": "1576230"
  },
  {
    "text": "not it doesn't need disk to do it but you can it also depends on the size of",
    "start": "1576230",
    "end": "1582200"
  },
  {
    "text": "your stuff but you can easily store many hundreds of gigs in there no problem if",
    "start": "1582200",
    "end": "1588920"
  },
  {
    "text": "you need to or many millions of items depending on your size are some of our size is very up to go up we're not sort",
    "start": "1588920",
    "end": "1594290"
  },
  {
    "text": "of used if they go up to about 5 Meg our size is you kind of cool skelter and five hundred odd meg in",
    "start": "1594290",
    "end": "1599970"
  },
  {
    "text": "Redis but we don't quite get that for Apple we just shove it in there because it's just so quick and easy",
    "start": "1599970",
    "end": "1606080"
  },
  {
    "text": "so that's content next is the metadata so what we do is we also track every",
    "start": "1606080",
    "end": "1611160"
  },
  {
    "text": "call to a nano service and what's going on behind the scenes so this tree of the",
    "start": "1611160",
    "end": "1618480"
  },
  {
    "text": "relationships between it is also stored built up of course initially by the code",
    "start": "1618480",
    "end": "1624060"
  },
  {
    "text": "going I need to run this other one and so on but then remembered and what the cool thing about that is then weren't some",
    "start": "1624060",
    "end": "1629220"
  },
  {
    "text": "data changes to say a medal comes in this is back to the Rio example from a few slides ago say a medal comes in in",
    "start": "1629220",
    "end": "1635130"
  },
  {
    "text": "the middle of the games because we've got that we know what we'll be interested in that new medal so we're",
    "start": "1635130",
    "end": "1640350"
  },
  {
    "text": "kind of forward cash busting if you like so we can immediately update page or send the alert or whatever it is for",
    "start": "1640350",
    "end": "1647550"
  },
  {
    "text": "that event so we've got both the benefit of caching from millions of users hitting you but also that ability to",
    "start": "1647550",
    "end": "1653730"
  },
  {
    "text": "kind of cache bust and get stuff out there as quickly as possible yep said and that again that metadata is",
    "start": "1653730",
    "end": "1662040"
  },
  {
    "text": "just so incredibly simple because you have fuss with Redis you have the sets you have the keys that you can very quickly look up the cost is unbelievably",
    "start": "1662040",
    "end": "1668160"
  },
  {
    "text": "trivial servers all in there and it's there for multiple EC T's to access to get the state we store the relationship",
    "start": "1668160",
    "end": "1674910"
  },
  {
    "text": "between them both ways around you know ma e has requested b and b has been requested by a kind of modeling which is",
    "start": "1674910",
    "end": "1682890"
  },
  {
    "text": "one of those things that of course you need to get that right because if a thinks as B's using it and B's forgotten that they needed it then you can end it",
    "start": "1682890",
    "end": "1688800"
  },
  {
    "text": "with bugs so you have to remember this is not a relational database it doesn't have referential integrity or anything",
    "start": "1688800",
    "end": "1694950"
  },
  {
    "text": "like that but you if you get that right and you can use Lua to help you make sure that's atomic so you never have",
    "start": "1694950",
    "end": "1700080"
  },
  {
    "text": "warned and not the other then it can be very flexible in fact there are there is a whole section on the Redis website",
    "start": "1700080",
    "end": "1705900"
  },
  {
    "text": "about building a hexose store which is basically a graph DB where you basically",
    "start": "1705900",
    "end": "1710910"
  },
  {
    "text": "store all the permutations of relationships between things and it is",
    "start": "1710910",
    "end": "1716190"
  },
  {
    "text": "it is basically read this is very very powerful you can use in all kinds of ways such as such as to do relationships",
    "start": "1716190",
    "end": "1723270"
  },
  {
    "text": "between things and then Redis for kids we use Redis as",
    "start": "1723270",
    "end": "1729269"
  },
  {
    "text": "a cue reason why we use it as a curious because it's phenomenally fast no",
    "start": "1729269",
    "end": "1736230"
  },
  {
    "text": "offense to sqs but you can get comfortably under five milliseconds often much quicker than that end-to-end",
    "start": "1736230",
    "end": "1742769"
  },
  {
    "text": "from one client to another and when it's that quick you can even use it internally on one box right you can",
    "start": "1742769",
    "end": "1747929"
  },
  {
    "text": "begin to think about it as a way of as a way of paralyzing what's going on and no",
    "start": "1747929",
    "end": "1754110"
  },
  {
    "text": "problem at all doing 10,000 messages a second that we've got it on a taxi far too large a box because that's a box",
    "start": "1754110",
    "end": "1760649"
  },
  {
    "text": "it's very high memory and typically hughster use a lot of memory so both the already all ElastiCache",
    "start": "1760649",
    "end": "1767580"
  },
  {
    "text": "instances only use one process so it doesn't matter how many course they have it all use the same one so he presumes",
    "start": "1767580",
    "end": "1773460"
  },
  {
    "text": "you get such a similar level on on other boxes as well and then behind the scenes that's leading up to a hundred and",
    "start": "1773460",
    "end": "1779129"
  },
  {
    "text": "twenty thousand I think we saw a 20,000 individual commands a second because we've we've got some extra logic in",
    "start": "1779129",
    "end": "1785820"
  },
  {
    "text": "there it's very simple if you don't know your edit commands he's basically a list that's what IQ is isn't a list right and",
    "start": "1785820",
    "end": "1792389"
  },
  {
    "text": "you push something onto the front l push left push and then you can R pop right pop it off the end and the BR pop is is",
    "start": "1792389",
    "end": "1799519"
  },
  {
    "text": "telling it to hold the connection open until a message comes through social if it's not always something there it'll",
    "start": "1799519",
    "end": "1805470"
  },
  {
    "text": "like sqs it'll hold the connection open for a certain period and wait for a message to come through and what we do",
    "start": "1805470",
    "end": "1813779"
  },
  {
    "text": "is a bit more than that we also know me write to the list but also write to a set and the beat of a set is you can",
    "start": "1813779",
    "end": "1818789"
  },
  {
    "text": "kind of directly key into something so we can tell when there's a duplicate so this is now a deduplicating Q which is",
    "start": "1818789",
    "end": "1824879"
  },
  {
    "text": "the fairly advanced feature for Q's so if if you're worried about duplicate stuff to try and reduce the amount of repeat actually what he's done you can",
    "start": "1824879",
    "end": "1831480"
  },
  {
    "text": "very easily implement duplicate behaviour on there as well which is very cool don't forget before you start",
    "start": "1831480",
    "end": "1838409"
  },
  {
    "text": "throwing away all your sqs implementations that it's not a full Q",
    "start": "1838409",
    "end": "1844230"
  },
  {
    "text": "solution he it doesn't really work with Redis replication because both taking",
    "start": "1844230",
    "end": "1852299"
  },
  {
    "text": "putting something on a key or taking something off a write operations you don't get a lot of benefit with with application of maybe a little bit of a",
    "start": "1852299",
    "end": "1858090"
  },
  {
    "text": "zillion in case your master fails and it's inevitably lossy as well because as you",
    "start": "1858090",
    "end": "1864070"
  },
  {
    "text": "sure you know when you take something off a queue you have to acknowledge it otherwise the key will send it again assuming that you fail to process it",
    "start": "1864070",
    "end": "1869200"
  },
  {
    "text": "that doesn't happen by default with a list once you've taken something off the list Redis doesn't care there is if you want to kind of",
    "start": "1869200",
    "end": "1875350"
  },
  {
    "text": "emulate that behavior the best of all the 200 commands read it has this is the",
    "start": "1875350",
    "end": "1881289"
  },
  {
    "text": "best name on BR pople push blocking right pop and then left push so take",
    "start": "1881289",
    "end": "1889360"
  },
  {
    "text": "something off the queue and put it onto another queue straight away with the timeout being how many seconds you're",
    "start": "1889360",
    "end": "1894789"
  },
  {
    "text": "willing to wait for if there's nothing there but to get through it to wait to give you something the idea being you then have this in",
    "start": "1894789",
    "end": "1901960"
  },
  {
    "text": "progress queue that you can do something with which you can you can monitor so",
    "start": "1901960",
    "end": "1906970"
  },
  {
    "text": "zooming once you've done the work you then take it off the in progress queue because it's your way of tracking the things that perhaps need to be rerun if",
    "start": "1906970",
    "end": "1912639"
  },
  {
    "text": "if if your process crashed halfway through so you need to take it off once you're done and then you need another process to be watching that in progress",
    "start": "1912639",
    "end": "1918669"
  },
  {
    "text": "queue and after so many seconds decide that it needs to be rescheduled again so it is quite manual but it is possible to",
    "start": "1918669",
    "end": "1925450"
  },
  {
    "text": "do that if you need a few after they see the phenomenal performance of Redis another trade-off would be that metrics",
    "start": "1925450",
    "end": "1931389"
  },
  {
    "text": "aren't so obvious because the last Akash has plenty sorry cloud watch has plenty",
    "start": "1931389",
    "end": "1936730"
  },
  {
    "text": "of metrics about ElastiCache but it's not a queue so won't tell you how many things are on the key or how long have",
    "start": "1936730",
    "end": "1942490"
  },
  {
    "text": "been on the key or the classic queue metrics you would need to employ make yourself but it's not hard we've done",
    "start": "1942490",
    "end": "1948399"
  },
  {
    "text": "that and there's inevitably a scaling problem there as well because because you you haven't got the whole of sqs and",
    "start": "1948399",
    "end": "1955269"
  },
  {
    "text": "it's wonderfully paralyzed more scalable stuff going on there but as I said you can do 10,000 reads and writes a second so I make scaling probably isn't a",
    "start": "1955269",
    "end": "1962139"
  },
  {
    "text": "problem and you course you don't get all the advanced features of good queues either but if you just want something",
    "start": "1962139",
    "end": "1968379"
  },
  {
    "text": "that's incredibly quick it is a very interesting where this is a very interesting way of doing queues um",
    "start": "1968379",
    "end": "1975029"
  },
  {
    "text": "here's a listing once so we all know the good cross AZ behavior rate that you should always read to your instances",
    "start": "1975029",
    "end": "1981299"
  },
  {
    "text": "across availability zones so if one fails you don't have an outage a little",
    "start": "1981299",
    "end": "1986799"
  },
  {
    "text": "bit harder with a master cache because you have got one the Redis works it will automatically",
    "start": "1986799",
    "end": "1991849"
  },
  {
    "text": "failover to slaves if you've got replication so that's how you typically do it you have your slaves in a",
    "start": "1991849",
    "end": "1997789"
  },
  {
    "text": "different phase ET master all very good but one interesting thing is that if",
    "start": "1997789",
    "end": "2003669"
  },
  {
    "text": "you're using Redis a lot it can be four times slower to communicate to a Redis",
    "start": "2003669",
    "end": "2009969"
  },
  {
    "text": "in a different easy so since you've only got one master if you've got three AZ's and one master 2/3 of the time you're",
    "start": "2009969",
    "end": "2016719"
  },
  {
    "text": "going to be in a different AZ to that master right I've heard you can see the small bit the bomb and there's a simple",
    "start": "2016719",
    "end": "2022119"
  },
  {
    "text": "Redis benchmark you can do and if you say in serial do a series of get requests to an elastic ash box you get",
    "start": "2022119",
    "end": "2031649"
  },
  {
    "text": "1800 a sec if it's in a different 1800 get request a second if it's a different a Z in 7200 four times as much in the",
    "start": "2031649",
    "end": "2040450"
  },
  {
    "text": "same hazy now those numbers are still huge right 1800 messages there and back",
    "start": "2040450",
    "end": "2046779"
  },
  {
    "text": "a second across a ZZZ it's pretty phenomenal so it's not as if according at a problem with processor you",
    "start": "2046779",
    "end": "2051878"
  },
  {
    "text": "networking here but if you have got a very fast application that doing awful lot of Redis pools you can get up to on",
    "start": "2051879",
    "end": "2059470"
  },
  {
    "text": "this example 700,000 in messages within 1 AZ came to the last two cash box that",
    "start": "2059470",
    "end": "2066128"
  },
  {
    "text": "blows my mind that's seven messages every mili second there and back in",
    "start": "2066129",
    "end": "2071349"
  },
  {
    "text": "serial it's it's pretty incredible what what Redis can do so yeah",
    "start": "2071349",
    "end": "2078669"
  },
  {
    "text": "what is interesting then is if that performance is important to you and it's really easy to write applications that end up doing an awful lot of to inform",
    "start": "2078669",
    "end": "2085210"
  },
  {
    "text": "us with Redis is to actually have separate instances of your application within one AZ which is a different way",
    "start": "2085210",
    "end": "2091750"
  },
  {
    "text": "of recommending you know how you do a Z failover but what it means of course is that if you want a Z fails yeah one of",
    "start": "2091750",
    "end": "2098049"
  },
  {
    "text": "your whole instances go is and you alight on the other so you can I got two very independent things running knowing that one of them can do the job if the",
    "start": "2098049",
    "end": "2104349"
  },
  {
    "text": "other one isn't available okay so that's elastication it's quickly jump back to",
    "start": "2104349",
    "end": "2109930"
  },
  {
    "text": "nano services and as you may have guessed as a whole ecosystem around them they are these things that you develop",
    "start": "2109930",
    "end": "2116460"
  },
  {
    "text": "release test maintain independently so they have they're kind of all the things",
    "start": "2116460",
    "end": "2122559"
  },
  {
    "text": "around them they have thickened up multiple versions lots of problem they can have clear ownership they can have some files if they need around them",
    "start": "2122559",
    "end": "2129359"
  },
  {
    "text": "single click deploy becomes possible remember were just uploading to s3 and I didn't draw an architecture diagram but",
    "start": "2129359",
    "end": "2135160"
  },
  {
    "text": "there's also a concept of a versioning database that picks which version to use by default so you know bringing out a",
    "start": "2135160",
    "end": "2140859"
  },
  {
    "text": "new one just means copying it to s3 and updating one row in the database saying yep that's that's that's the one to use yeah none of servers are connected to",
    "start": "2140859",
    "end": "2147759"
  },
  {
    "text": "each other as we've seen you can Hanul it expecting how many times have called you can then from that derive how",
    "start": "2147759",
    "end": "2153069"
  },
  {
    "text": "expensive they are you can have multiple users multiple tests and code we've",
    "start": "2153069",
    "end": "2161109"
  },
  {
    "text": "written all of this in no js' both the platform itself and the Nano services but we'd have I can't think of any",
    "start": "2161109",
    "end": "2166299"
  },
  {
    "text": "reason why it has to be that I think would work with any language and we",
    "start": "2166299",
    "end": "2171789"
  },
  {
    "text": "happen to use react as well as the way of making the HTML components but it doesn't have to be so let's jump to a",
    "start": "2171789",
    "end": "2177910"
  },
  {
    "text": "quick demo it letters",
    "start": "2177910",
    "end": "2183538"
  },
  {
    "text": "okay so this is the BBC News homepage we",
    "start": "2191240",
    "end": "2196580"
  },
  {
    "text": "had a range of Prince Harry that he did announce his news just in time for this presentation to give you one",
    "start": "2196580",
    "end": "2202390"
  },
  {
    "text": "unfortunately North Korea launched a ballistic missiles take it off the top headline so Prince Harry's only number",
    "start": "2202390",
    "end": "2209900"
  },
  {
    "text": "two today and there's a brilliant have you seen this one about radioactive some people some guy has intentionally made",
    "start": "2209900",
    "end": "2215060"
  },
  {
    "text": "some playing cards radioactive so that you can spot them and cheat just give",
    "start": "2215060",
    "end": "2220609"
  },
  {
    "text": "them we're in Vegas if you need some help later and I think idea anyway here",
    "start": "2220609",
    "end": "2225650"
  },
  {
    "text": "is the BBC News homepage complete with a blocked pad for me how your uh block your own site as well isn't it and that",
    "start": "2225650",
    "end": "2232520"
  },
  {
    "text": "that's that and as I said that that bit you can see there he's a nano service if I flip here that is the Nano service",
    "start": "2232520",
    "end": "2239570"
  },
  {
    "text": "it's obviously lost its theming somewhat and the images have broken without the",
    "start": "2239570",
    "end": "2246050"
  },
  {
    "text": "kind of payment CSS and JavaScript in there but you get the idea that is that that is a rest api that you can call to",
    "start": "2246050",
    "end": "2252050"
  },
  {
    "text": "get that nano service and to pick",
    "start": "2252050",
    "end": "2257480"
  },
  {
    "text": "another example the one the next thing down here this must see shocking scale of UK us drinking water that's that one",
    "start": "2257480",
    "end": "2264290"
  },
  {
    "text": "that exists of some reason it's lost even more this time again that's under the nano service you get the idea and so",
    "start": "2264290",
    "end": "2269450"
  },
  {
    "text": "that you can carry on with this so another one most read that we haven't have on a slide earlier you may recall again where's that gone stylings gone",
    "start": "2269450",
    "end": "2276859"
  },
  {
    "text": "but that is that nano service right so you could then take that and put it in another page if you wanted to as well",
    "start": "2276859",
    "end": "2282410"
  },
  {
    "text": "without worrying about how it works where gets data from or anything like that it's just there as a service to use",
    "start": "2282410",
    "end": "2287780"
  },
  {
    "text": "if you want it and to have a look at the code we all our codes and github so",
    "start": "2287780",
    "end": "2293480"
  },
  {
    "text": "here's an example of that particular one and you can see it's kind of got a bit of a documentation an example of the",
    "start": "2293480",
    "end": "2298820"
  },
  {
    "text": "parameters it takes and so on if we quickly look at the code two files right",
    "start": "2298820",
    "end": "2304970"
  },
  {
    "text": "because it's really quite simple but this is this is the lovely thing about it it's simple enough that you could you",
    "start": "2304970",
    "end": "2309980"
  },
  {
    "text": "can understand it and you can develop it and change it you feel comfortable and if we look at the I think they they're very big this one's about forty odd",
    "start": "2309980",
    "end": "2315980"
  },
  {
    "text": "lines oops and this one things bit longer a couple hundred lines but you",
    "start": "2315980",
    "end": "2321349"
  },
  {
    "text": "get the idea I'm still flying for this but not a lot of code to do that this is",
    "start": "2321349",
    "end": "2327680"
  },
  {
    "text": "calling another nano service to get its data that was the most read you might recall this is the actual most read data",
    "start": "2327680",
    "end": "2332940"
  },
  {
    "text": "you can kind of see the North Korea thing up there 22,000 people is read that in the five minutes periods that's",
    "start": "2332940",
    "end": "2338460"
  },
  {
    "text": "what it's using to power itself and again that's another nano service if we look at that code standard node stuff",
    "start": "2338460",
    "end": "2345900"
  },
  {
    "text": "going on here you have your indexed at J s and you have to do in tests and build scripts and so on so it feels like you",
    "start": "2345900",
    "end": "2351450"
  },
  {
    "text": "know anything else but again one line one file with what and two underlines",
    "start": "2351450",
    "end": "2358560"
  },
  {
    "text": "you can kind of see you know what's going on there the various commands make the API call underneath then parse it",
    "start": "2358560",
    "end": "2365310"
  },
  {
    "text": "and check for various bits and blah blah blah and return it right so it wouldn't fly straight forward at these levels to",
    "start": "2365310",
    "end": "2372780"
  },
  {
    "text": "use it so what are the advantages then",
    "start": "2372780",
    "end": "2380310"
  },
  {
    "text": "they are these Lego bricks can clear these different things that you can share in different ways they're easy to",
    "start": "2380310",
    "end": "2386160"
  },
  {
    "text": "understand concepts sometimes we'll have third parties write code for us and",
    "start": "2386160",
    "end": "2391920"
  },
  {
    "text": "they'll be brought in house if you had that happen when we've tried to get internal teams to look after code",
    "start": "2391920",
    "end": "2398970"
  },
  {
    "text": "written by third parties there's normally a wall where is what we found with these nano services is they get",
    "start": "2398970",
    "end": "2405630"
  },
  {
    "text": "them because they're each things an understandable thing but you can work",
    "start": "2405630",
    "end": "2410910"
  },
  {
    "text": "out what it is and you don't mind looking after that bit of code and you can release and play with it and change if these become more shareable bits of",
    "start": "2410910",
    "end": "2416790"
  },
  {
    "text": "code it should be good valuable so a good value because you've got a highly cashable shared infrastructure going on",
    "start": "2416790",
    "end": "2422520"
  },
  {
    "text": "there it has a set platform from which you who looks after the operational site",
    "start": "2422520",
    "end": "2429810"
  },
  {
    "text": "so people can concentrate on building the thing they really want to build these nano services the deployments past",
    "start": "2429810",
    "end": "2435120"
  },
  {
    "text": "just copy into that s3 bucket and all of this they're always doing any of this is to just speed up at the rate of which we",
    "start": "2435120",
    "end": "2441570"
  },
  {
    "text": "can make new things challenges it's a single point of failure this platform although it's nicely distributed across",
    "start": "2441570",
    "end": "2448500"
  },
  {
    "text": "daisies and so on it is there's always that logical thing if you if you have a problem in how the thing works there's a",
    "start": "2448500",
    "end": "2454590"
  },
  {
    "text": "lot of Nano services that are gonna fail so it has to be a bit conservative as well because you can't have one hogging",
    "start": "2454590",
    "end": "2459910"
  },
  {
    "text": "up all the resources for all the rest that means it can be restrictive so this wouldn't be a good way to make a video",
    "start": "2459910",
    "end": "2465969"
  },
  {
    "text": "transcoding platform but is very good at making kinda relatively fast api's and webpages and that kind of thing it's not",
    "start": "2465969",
    "end": "2472569"
  },
  {
    "text": "very fast there's being a telex it is fast it is fast but of course you've",
    "start": "2472569",
    "end": "2477759"
  },
  {
    "text": "still got the overhead of talking to ElastiCache and and the shared platform and so on so if every millisecond count",
    "start": "2477759",
    "end": "2483009"
  },
  {
    "text": "if you perhaps wouldn't do this but it is still fast and you do need a really good tooling to understand what's going on because you remember that graph of",
    "start": "2483009",
    "end": "2489039"
  },
  {
    "text": "all those hundreds of nano services you do need to understand who's building what where when what's changing do you",
    "start": "2489039",
    "end": "2495609"
  },
  {
    "text": "remember this slide on the microservices we can compare it with nano services yes multiple teams can do it multiple tech",
    "start": "2495609",
    "end": "2502329"
  },
  {
    "text": "actually gets a bit harder to do multiple tech because you're sharing but I think it would be potential to do that so I put a question mark there the",
    "start": "2502329",
    "end": "2508989"
  },
  {
    "text": "deploys are definitely even smaller and safer is definitely very shareable and very flexible you can use these bits in",
    "start": "2508989",
    "end": "2514839"
  },
  {
    "text": "different ways and it is more scalable I'd argue as well because you've got this platform that can it can handle any",
    "start": "2514839",
    "end": "2521799"
  },
  {
    "text": "one of your nano services at any point which of course water scales like all good cloud stuff in terms the cons one",
    "start": "2521799",
    "end": "2528880"
  },
  {
    "text": "of the really big things roads is we've killed the maintenance overhead having to run all of these micro services because you've now got one shared",
    "start": "2528880",
    "end": "2534039"
  },
  {
    "text": "platform looking after it for you the comms overhead has gone as well because again that shared platform if one nano service needs to call another",
    "start": "2534039",
    "end": "2539829"
  },
  {
    "text": "not a problem it's just there in the same place there's no separate system",
    "start": "2539829",
    "end": "2545109"
  },
  {
    "text": "that needs to be called the multiple version challenges have kind of gone away because you can have as many versions as you'd like lying around in",
    "start": "2545109",
    "end": "2551049"
  },
  {
    "text": "the s3 bucket ready to be run which is nice we sit also makes for factoring easier because you can change the whole stuff and cost should be better put a",
    "start": "2551049",
    "end": "2558549"
  },
  {
    "text": "dotted line for cost because cloud cost engineering is the hardest thing now it's a man isn't it it's really hard to",
    "start": "2558549",
    "end": "2564279"
  },
  {
    "text": "keep things cheap we've we need to do some more work on that I had a little",
    "start": "2564279",
    "end": "2572549"
  },
  {
    "text": "bet with myself whether I get away with putting oh the cloud providers logos on",
    "start": "2572549",
    "end": "2578650"
  },
  {
    "text": "my deck and somehow it got through thee everything all three of them are of",
    "start": "2578650",
    "end": "2584140"
  },
  {
    "text": "course the service offerings lambda and as the BBC would say other cloud",
    "start": "2584140",
    "end": "2589840"
  },
  {
    "text": "providers are available and there well",
    "start": "2589840",
    "end": "2595000"
  },
  {
    "text": "we say well they're all fantastic but they're all perhaps early in the journey towards serverless right there's this",
    "start": "2595000",
    "end": "2601350"
  },
  {
    "text": "phenomenal potential in a service way of working and no doubt will be some",
    "start": "2601350",
    "end": "2607180"
  },
  {
    "text": "announcements this week but but this there's there's so much that could be done with them and why should they have",
    "start": "2607180",
    "end": "2613780"
  },
  {
    "text": "all the fun right the architects we just talked about is kind of like a service",
    "start": "2613780",
    "end": "2620080"
  },
  {
    "text": "way of working right that's obviously service behind the scenes but they have service behind the scenes as well to the",
    "start": "2620080",
    "end": "2626460"
  },
  {
    "text": "developers writing nano services it is service you upload your code and the magic happens so as I say it is we",
    "start": "2626460",
    "end": "2636760"
  },
  {
    "text": "didn't use lambda I think I suspect our architecture will evolve to eventually use lambda an awful lot maybe entirely",
    "start": "2636760",
    "end": "2642790"
  },
  {
    "text": "we did in today because we needed such fast response times we wanted to use Redis queues and there's no direct way",
    "start": "2642790",
    "end": "2649150"
  },
  {
    "text": "of calling and lambda from that so that you can make one and we were worried about there's a lot of api's we call",
    "start": "2649150",
    "end": "2654160"
  },
  {
    "text": "that can take a while and of course if you have a lambda calling an API that's then waiting for that API you're paying",
    "start": "2654160",
    "end": "2660070"
  },
  {
    "text": "for a number to do nothing so and that's why we haven't used amber so far but I as I say I think there's there's we",
    "start": "2660070",
    "end": "2666550"
  },
  {
    "text": "would probably move to that very much so in the longer term it could be hey do a lot of this but I do think it's interesting they call lambdas functions",
    "start": "2666550",
    "end": "2672820"
  },
  {
    "text": "and the other providers do as well right and they're great for those smaller you",
    "start": "2672820",
    "end": "2678010"
  },
  {
    "text": "know event-driven you know something off a queue or some triggered by some change in dynamo or whatever lambdas are",
    "start": "2678010",
    "end": "2683170"
  },
  {
    "text": "fantastic for that for larger systems are they yet fantastic do you know Simon",
    "start": "2683170",
    "end": "2689050"
  },
  {
    "text": "Wardley another Brit he's very good at kind of helping predict technology",
    "start": "2689050",
    "end": "2694120"
  },
  {
    "text": "changes and he talks about how serverless is going to fundamentally change how we do stuff expect to see the whole world",
    "start": "2694120",
    "end": "2702070"
  },
  {
    "text": "week overtaken by service within eight years that's amazing right that that is",
    "start": "2702070",
    "end": "2708180"
  },
  {
    "text": "think of all the server software we have for that we're making all being done",
    "start": "2708180",
    "end": "2713680"
  },
  {
    "text": "serving us within eight ten years that that's gonna take",
    "start": "2713680",
    "end": "2720210"
  },
  {
    "text": "pretty interesting thinking way about how we do that stuff and so this in this",
    "start": "2720210",
    "end": "2725640"
  },
  {
    "text": "world then where things are serviced and you don't need to worry so much about that practicalities of ruining stuff and",
    "start": "2725640",
    "end": "2732089"
  },
  {
    "text": "configuring stuff so much what why not design your suffer your really big software as a series of small logical",
    "start": "2732089",
    "end": "2739859"
  },
  {
    "text": "things that you can release and use in different ways right and so just a",
    "start": "2739859",
    "end": "2747060"
  },
  {
    "text": "thought could this nano services idea be a paradigm for us building really big",
    "start": "2747060",
    "end": "2753210"
  },
  {
    "text": "stuff on servitors Netflix wants to blog a few months ago",
    "start": "2753210",
    "end": "2758520"
  },
  {
    "text": "this all means exactly what I've just been talking about we think they must have a mold because they've the idea is",
    "start": "2758520",
    "end": "2764790"
  },
  {
    "text": "bizarrely the so the one they've really serverless like in their the one one thing they didn't do is use the word",
    "start": "2764790",
    "end": "2770190"
  },
  {
    "text": "nano services until they launched part two a few weeks ago and which they did use that word so it's quite scary and",
    "start": "2770190",
    "end": "2776820"
  },
  {
    "text": "we've also made a blog on it should you wish to be more so that is pretty much",
    "start": "2776820",
    "end": "2783030"
  },
  {
    "text": "it they have brought us that ability to share large teams to work together building things independently but still",
    "start": "2783030",
    "end": "2791190"
  },
  {
    "text": "allowing flexibility to make all kinds of different things in an efficient way all of which there to drive velocity the",
    "start": "2791190",
    "end": "2796890"
  },
  {
    "text": "speed at which we can release stuff so",
    "start": "2796890",
    "end": "2802609"
  },
  {
    "text": "if you didn't know already hopefully you've seen some examples of where reddit can be extremely flexible as",
    "start": "2802609",
    "end": "2808290"
  },
  {
    "text": "queues not just as a cache for your metadata as a way of communicating as a full message bus which can be really",
    "start": "2808290",
    "end": "2817050"
  },
  {
    "text": "interesting when building service like things because you can use that as a way of communicating between them and",
    "start": "2817050",
    "end": "2822170"
  },
  {
    "text": "orchestrating what they're doing and then the Nano servers pattern of basically saying small ish things that",
    "start": "2822170",
    "end": "2828630"
  },
  {
    "text": "are still clearly playing what they do and have it tested and released and so on could be a really interesting way of",
    "start": "2828630",
    "end": "2834150"
  },
  {
    "text": "working in order to allow lots of teams work on different things while still getting continuous delivery and all",
    "start": "2834150",
    "end": "2839760"
  },
  {
    "text": "those benefits that's it thank you [Applause]",
    "start": "2839760",
    "end": "2848449"
  }
]