[
  {
    "start": "0",
    "end": "39000"
  },
  {
    "text": "hello and welcome to getting started",
    "start": "880",
    "end": "3280"
  },
  {
    "text": "with amazon emr series",
    "start": "3280",
    "end": "5600"
  },
  {
    "text": "my name is din mandu prasad i'm a senior",
    "start": "5600",
    "end": "8400"
  },
  {
    "text": "analytics specialist at",
    "start": "8400",
    "end": "9840"
  },
  {
    "text": "aws focused on big data technologies",
    "start": "9840",
    "end": "13120"
  },
  {
    "text": "like amazon emr in this demo i am going",
    "start": "13120",
    "end": "16400"
  },
  {
    "text": "to walk you through",
    "start": "16400",
    "end": "17760"
  },
  {
    "text": "amazon emr and aws lake formation",
    "start": "17760",
    "end": "20880"
  },
  {
    "text": "integration",
    "start": "20880",
    "end": "22800"
  },
  {
    "text": "beginning with amazon emi 5.26",
    "start": "22800",
    "end": "26720"
  },
  {
    "text": "you can launch an emr cluster that",
    "start": "26720",
    "end": "28880"
  },
  {
    "text": "integrates with",
    "start": "28880",
    "end": "30400"
  },
  {
    "text": "aws lake formation this feature is",
    "start": "30400",
    "end": "33360"
  },
  {
    "text": "currently in public beta",
    "start": "33360",
    "end": "35280"
  },
  {
    "text": "now let's look at the topic we are going",
    "start": "35280",
    "end": "37360"
  },
  {
    "text": "to cover today",
    "start": "37360",
    "end": "39280"
  },
  {
    "start": "39000",
    "end": "234000"
  },
  {
    "text": "first of all i'll begin with an overview",
    "start": "39280",
    "end": "41680"
  },
  {
    "text": "of aws lake formation",
    "start": "41680",
    "end": "44000"
  },
  {
    "text": "then we will dive deep into how data",
    "start": "44000",
    "end": "46480"
  },
  {
    "text": "access",
    "start": "46480",
    "end": "47280"
  },
  {
    "text": "works in lake formation amazon emr",
    "start": "47280",
    "end": "51199"
  },
  {
    "text": "and aws leak formation support xaml 2.0",
    "start": "51199",
    "end": "54879"
  },
  {
    "text": "based federation with 3rd party",
    "start": "54879",
    "end": "56640"
  },
  {
    "text": "providers such as",
    "start": "56640",
    "end": "58320"
  },
  {
    "text": "microsoft active directory federation",
    "start": "58320",
    "end": "60320"
  },
  {
    "text": "services",
    "start": "60320",
    "end": "61440"
  },
  {
    "text": "auth0 and octa i will walk you through",
    "start": "61440",
    "end": "65760"
  },
  {
    "text": "this integration architecture and demo",
    "start": "65760",
    "end": "68560"
  },
  {
    "text": "using",
    "start": "68560",
    "end": "69200"
  },
  {
    "text": "apache zipline and octa as identity",
    "start": "69200",
    "end": "71760"
  },
  {
    "text": "provider",
    "start": "71760",
    "end": "73040"
  },
  {
    "text": "aws leak formation is a managed service",
    "start": "73040",
    "end": "76159"
  },
  {
    "text": "that simplifies setting up securing and",
    "start": "76159",
    "end": "78640"
  },
  {
    "text": "managing data lake",
    "start": "78640",
    "end": "80159"
  },
  {
    "text": "it helps you discover catalog claims and",
    "start": "80159",
    "end": "82960"
  },
  {
    "text": "secure data in amazon",
    "start": "82960",
    "end": "84960"
  },
  {
    "text": "s3 data lake other aws services",
    "start": "84960",
    "end": "88720"
  },
  {
    "text": "and third party application can also",
    "start": "88720",
    "end": "91360"
  },
  {
    "text": "access data",
    "start": "91360",
    "end": "92479"
  },
  {
    "text": "through the services shown integrating",
    "start": "92479",
    "end": "96320"
  },
  {
    "text": "amazon emr with aws lake formation",
    "start": "96320",
    "end": "99920"
  },
  {
    "text": "provides permission model",
    "start": "99920",
    "end": "101759"
  },
  {
    "text": "that enables fine-grained access to data",
    "start": "101759",
    "end": "104399"
  },
  {
    "text": "stored in data lake",
    "start": "104399",
    "end": "105920"
  },
  {
    "text": "through simple grant and revoke",
    "start": "105920",
    "end": "108320"
  },
  {
    "text": "mechanism",
    "start": "108320",
    "end": "110159"
  },
  {
    "text": "it enables federated single sign-on",
    "start": "110159",
    "end": "113360"
  },
  {
    "text": "to emr notebooks or apache zipline",
    "start": "113360",
    "end": "116960"
  },
  {
    "text": "from your enterprise identity system",
    "start": "116960",
    "end": "119840"
  },
  {
    "text": "that is compatible with",
    "start": "119840",
    "end": "121680"
  },
  {
    "text": "saml 2.0 to begin with",
    "start": "121680",
    "end": "125200"
  },
  {
    "text": "you set up and control user access to",
    "start": "125200",
    "end": "128399"
  },
  {
    "text": "resources",
    "start": "128399",
    "end": "129360"
  },
  {
    "text": "such as databases or tables using",
    "start": "129360",
    "end": "132720"
  },
  {
    "text": "aws lake formation policies when a",
    "start": "132720",
    "end": "136160"
  },
  {
    "text": "principal",
    "start": "136160",
    "end": "137120"
  },
  {
    "text": "attempt to run a query in amazon emr",
    "start": "137120",
    "end": "140560"
  },
  {
    "text": "on the data from lake formation amazon",
    "start": "140560",
    "end": "143680"
  },
  {
    "text": "emr",
    "start": "143680",
    "end": "144319"
  },
  {
    "text": "requests temporary credential for data",
    "start": "144319",
    "end": "147440"
  },
  {
    "text": "access",
    "start": "147440",
    "end": "148160"
  },
  {
    "text": "from aws lake formation lake formation",
    "start": "148160",
    "end": "151840"
  },
  {
    "text": "returns",
    "start": "151840",
    "end": "152800"
  },
  {
    "text": "temporary credential allowing data",
    "start": "152800",
    "end": "155120"
  },
  {
    "text": "access",
    "start": "155120",
    "end": "156560"
  },
  {
    "text": "amazon emr sends the query request to",
    "start": "156560",
    "end": "159519"
  },
  {
    "text": "obtain",
    "start": "159519",
    "end": "160080"
  },
  {
    "text": "the data from amazon s3",
    "start": "160080",
    "end": "164239"
  },
  {
    "text": "amazon emr filters and returns the",
    "start": "164319",
    "end": "166720"
  },
  {
    "text": "results",
    "start": "166720",
    "end": "167519"
  },
  {
    "text": "based on the user permission defined in",
    "start": "167519",
    "end": "170080"
  },
  {
    "text": "lake formation",
    "start": "170080",
    "end": "171599"
  },
  {
    "text": "now that you understand how emr and lake",
    "start": "171599",
    "end": "174959"
  },
  {
    "text": "formation provides",
    "start": "174959",
    "end": "176160"
  },
  {
    "text": "access to data let's look into",
    "start": "176160",
    "end": "179200"
  },
  {
    "text": "how integration with identity provider",
    "start": "179200",
    "end": "182840"
  },
  {
    "text": "works",
    "start": "182840",
    "end": "184239"
  },
  {
    "text": "first an unauthenticated user is",
    "start": "184239",
    "end": "186319"
  },
  {
    "text": "authenticated using organizations",
    "start": "186319",
    "end": "188959"
  },
  {
    "text": "identity provider sign on page identity",
    "start": "188959",
    "end": "192239"
  },
  {
    "text": "provider generates a saml authentication",
    "start": "192239",
    "end": "194640"
  },
  {
    "text": "response",
    "start": "194640",
    "end": "195680"
  },
  {
    "text": "that includes assertions that identify",
    "start": "195680",
    "end": "198319"
  },
  {
    "text": "the user",
    "start": "198319",
    "end": "199120"
  },
  {
    "text": "and includes attributes about the user",
    "start": "199120",
    "end": "203200"
  },
  {
    "text": "the proxy agent enables successful user",
    "start": "203200",
    "end": "206000"
  },
  {
    "text": "login",
    "start": "206000",
    "end": "206720"
  },
  {
    "text": "coordinating temporary credentials with",
    "start": "206720",
    "end": "209440"
  },
  {
    "text": "aws lake formation and secret agent",
    "start": "209440",
    "end": "213360"
  },
  {
    "text": "when the user runs a spark job by using",
    "start": "213360",
    "end": "215680"
  },
  {
    "text": "emr notebook or zipline",
    "start": "215680",
    "end": "217599"
  },
  {
    "text": "the record server calls the secret agent",
    "start": "217599",
    "end": "220000"
  },
  {
    "text": "to obtain",
    "start": "220000",
    "end": "220959"
  },
  {
    "text": "temporary user credential",
    "start": "220959",
    "end": "224080"
  },
  {
    "text": "the record server reads and filter data",
    "start": "224080",
    "end": "226879"
  },
  {
    "text": "from",
    "start": "226879",
    "end": "227360"
  },
  {
    "text": "amazon s3 based on the policies defined",
    "start": "227360",
    "end": "230159"
  },
  {
    "text": "in lake formation",
    "start": "230159",
    "end": "233200"
  },
  {
    "start": "234000",
    "end": "545000"
  },
  {
    "text": "here is an overview of the integration",
    "start": "234000",
    "end": "236480"
  },
  {
    "text": "step",
    "start": "236480",
    "end": "237439"
  },
  {
    "text": "firstly you need to register trust",
    "start": "237439",
    "end": "239519"
  },
  {
    "text": "relationship between",
    "start": "239519",
    "end": "240879"
  },
  {
    "text": "your identity provider and lake",
    "start": "240879",
    "end": "242720"
  },
  {
    "text": "formation",
    "start": "242720",
    "end": "244080"
  },
  {
    "text": "for this demo i am using octa as my",
    "start": "244080",
    "end": "246480"
  },
  {
    "text": "identity provider",
    "start": "246480",
    "end": "248400"
  },
  {
    "text": "then you grant permission to active",
    "start": "248400",
    "end": "251200"
  },
  {
    "text": "directory user to access tables and",
    "start": "251200",
    "end": "253439"
  },
  {
    "text": "columns",
    "start": "253439",
    "end": "254400"
  },
  {
    "text": "on data lake on s3 using lake formation",
    "start": "254400",
    "end": "257919"
  },
  {
    "text": "finally configure emi security",
    "start": "257919",
    "end": "261199"
  },
  {
    "text": "and launch emr with that security",
    "start": "261199",
    "end": "264160"
  },
  {
    "text": "configuration",
    "start": "264160",
    "end": "266560"
  },
  {
    "text": "using lake formation i'll grant fine",
    "start": "266560",
    "end": "269520"
  },
  {
    "text": "grain",
    "start": "269520",
    "end": "269919"
  },
  {
    "text": "access to select only limited columns",
    "start": "269919",
    "end": "272960"
  },
  {
    "text": "from customer table",
    "start": "272960",
    "end": "274400"
  },
  {
    "text": "and select all columns from web page and",
    "start": "274400",
    "end": "277040"
  },
  {
    "text": "web sales tables",
    "start": "277040",
    "end": "279040"
  },
  {
    "text": "this user will not have any access on",
    "start": "279040",
    "end": "281680"
  },
  {
    "text": "any other table",
    "start": "281680",
    "end": "282639"
  },
  {
    "text": "on data lake emi developer",
    "start": "282639",
    "end": "286000"
  },
  {
    "text": "will only be able to fetch",
    "start": "286000",
    "end": "289759"
  },
  {
    "text": "tables and columns on which they have",
    "start": "289759",
    "end": "292320"
  },
  {
    "text": "permission",
    "start": "292320",
    "end": "293759"
  },
  {
    "text": "they will get access denied exception",
    "start": "293759",
    "end": "297040"
  },
  {
    "text": "if they try to access tables on which",
    "start": "297040",
    "end": "300160"
  },
  {
    "text": "they don't have permission",
    "start": "300160",
    "end": "303440"
  },
  {
    "text": "now let's look at the database tables",
    "start": "304080",
    "end": "307120"
  },
  {
    "text": "and permission in lake formation using",
    "start": "307120",
    "end": "309280"
  },
  {
    "text": "aws console",
    "start": "309280",
    "end": "310800"
  },
  {
    "text": "i have registered my s3 data lake",
    "start": "310800",
    "end": "313039"
  },
  {
    "text": "location in lake formation",
    "start": "313039",
    "end": "316240"
  },
  {
    "text": "in this data lake i have defined a",
    "start": "316240",
    "end": "318320"
  },
  {
    "text": "database called tpc",
    "start": "318320",
    "end": "321120"
  },
  {
    "text": "for this demo we are going to focus on",
    "start": "321120",
    "end": "323680"
  },
  {
    "text": "top four tables",
    "start": "323680",
    "end": "326800"
  },
  {
    "text": "let's look at the permission for each of",
    "start": "327199",
    "end": "329360"
  },
  {
    "text": "these tables",
    "start": "329360",
    "end": "330479"
  },
  {
    "text": "emr developer is an ad user this user",
    "start": "330479",
    "end": "333840"
  },
  {
    "text": "has permission to select",
    "start": "333840",
    "end": "335280"
  },
  {
    "text": "all the columns in web page table",
    "start": "335280",
    "end": "338400"
  },
  {
    "text": "let's look at the other tables as well",
    "start": "338400",
    "end": "342639"
  },
  {
    "text": "on the item table emr developer",
    "start": "346479",
    "end": "349759"
  },
  {
    "text": "does not have any permission so when the",
    "start": "349759",
    "end": "352400"
  },
  {
    "text": "user try to select on this table",
    "start": "352400",
    "end": "354800"
  },
  {
    "text": "he will get an access denied exception",
    "start": "354800",
    "end": "357120"
  },
  {
    "text": "error",
    "start": "357120",
    "end": "359440"
  },
  {
    "text": "on web sales table emr developer user",
    "start": "361520",
    "end": "364319"
  },
  {
    "text": "has permission to select on",
    "start": "364319",
    "end": "366000"
  },
  {
    "text": "all the columns",
    "start": "366000",
    "end": "368800"
  },
  {
    "text": "on customer table emr developer has",
    "start": "371199",
    "end": "373759"
  },
  {
    "text": "permission to select on",
    "start": "373759",
    "end": "375280"
  },
  {
    "text": "only 4 columns now let's",
    "start": "375280",
    "end": "379120"
  },
  {
    "text": "test these permissions using apache",
    "start": "379120",
    "end": "381520"
  },
  {
    "text": "zipline",
    "start": "381520",
    "end": "382960"
  },
  {
    "text": "i have a emr cluster already running",
    "start": "382960",
    "end": "385360"
  },
  {
    "text": "with apache zip line",
    "start": "385360",
    "end": "387039"
  },
  {
    "text": "it is configured with leak formation",
    "start": "387039",
    "end": "389039"
  },
  {
    "text": "security using the emr",
    "start": "389039",
    "end": "391680"
  },
  {
    "text": "cluster master public dns dns",
    "start": "391680",
    "end": "394960"
  },
  {
    "text": "login to apache zipline you will be",
    "start": "394960",
    "end": "398479"
  },
  {
    "text": "redirected to your identity provider's",
    "start": "398479",
    "end": "402080"
  },
  {
    "text": "single sign-on provide the emi developer",
    "start": "402080",
    "end": "405600"
  },
  {
    "text": "username and password and you will be",
    "start": "405600",
    "end": "409120"
  },
  {
    "text": "authenticated using your identity",
    "start": "409120",
    "end": "411840"
  },
  {
    "text": "provider",
    "start": "411840",
    "end": "413120"
  },
  {
    "text": "once authenticated you will be",
    "start": "413120",
    "end": "415840"
  },
  {
    "text": "redirected",
    "start": "415840",
    "end": "417280"
  },
  {
    "text": "to apache zipline home page",
    "start": "417280",
    "end": "422080"
  },
  {
    "text": "i have a notebook already created with",
    "start": "422080",
    "end": "424880"
  },
  {
    "text": "apache",
    "start": "424880",
    "end": "426319"
  },
  {
    "text": "zipline let me clear the output from the",
    "start": "426319",
    "end": "429759"
  },
  {
    "text": "previous run",
    "start": "429759",
    "end": "430960"
  },
  {
    "text": "in this notebook i have sql statements",
    "start": "430960",
    "end": "433440"
  },
  {
    "text": "to demonstrate fine grain access control",
    "start": "433440",
    "end": "435440"
  },
  {
    "text": "permission",
    "start": "435440",
    "end": "436000"
  },
  {
    "text": "using lake formation in the first",
    "start": "436000",
    "end": "439039"
  },
  {
    "text": "statement",
    "start": "439039",
    "end": "440000"
  },
  {
    "text": "i am checking the databases on which emi",
    "start": "440000",
    "end": "442560"
  },
  {
    "text": "developer has permission",
    "start": "442560",
    "end": "445440"
  },
  {
    "text": "then i am doing a count on my",
    "start": "445440",
    "end": "448960"
  },
  {
    "text": "web page table",
    "start": "448960",
    "end": "452160"
  },
  {
    "text": "since i have the select permission on",
    "start": "453280",
    "end": "456160"
  },
  {
    "text": "web page table",
    "start": "456160",
    "end": "457440"
  },
  {
    "text": "i'll get the desired result",
    "start": "457440",
    "end": "461199"
  },
  {
    "text": "next i am",
    "start": "461440",
    "end": "464479"
  },
  {
    "text": "doing a join between the web page table",
    "start": "464479",
    "end": "466720"
  },
  {
    "text": "and the web sales table",
    "start": "466720",
    "end": "468160"
  },
  {
    "text": "to get a aggregation of the text paid by",
    "start": "468160",
    "end": "471840"
  },
  {
    "text": "site id",
    "start": "471840",
    "end": "473440"
  },
  {
    "text": "again i have the required permission",
    "start": "473440",
    "end": "477199"
  },
  {
    "text": "that is to select on all the columns on",
    "start": "477199",
    "end": "480400"
  },
  {
    "text": "both the tables",
    "start": "480400",
    "end": "481520"
  },
  {
    "text": "so i get the desired result",
    "start": "481520",
    "end": "485120"
  },
  {
    "text": "next i am trying to do a select on the",
    "start": "486720",
    "end": "489440"
  },
  {
    "text": "table",
    "start": "489440",
    "end": "490160"
  },
  {
    "text": "for which i don't have permission",
    "start": "490160",
    "end": "493840"
  },
  {
    "text": "as expected since i don't have",
    "start": "499199",
    "end": "501199"
  },
  {
    "text": "permission in lake formation on that",
    "start": "501199",
    "end": "503199"
  },
  {
    "text": "table",
    "start": "503199",
    "end": "504080"
  },
  {
    "text": "i'll get a access denied exception",
    "start": "504080",
    "end": "508400"
  },
  {
    "text": "finally in lake formation emi developer",
    "start": "517279",
    "end": "519760"
  },
  {
    "text": "has permission to select",
    "start": "519760",
    "end": "521360"
  },
  {
    "text": "only four columns from customer table so",
    "start": "521360",
    "end": "524000"
  },
  {
    "text": "when i execute query with a select all",
    "start": "524000",
    "end": "526240"
  },
  {
    "text": "columns",
    "start": "526240",
    "end": "527040"
  },
  {
    "text": "i only get those four columns in my",
    "start": "527040",
    "end": "529519"
  },
  {
    "text": "output",
    "start": "529519",
    "end": "531440"
  },
  {
    "text": "this concludes our demo today in this",
    "start": "531440",
    "end": "533760"
  },
  {
    "text": "demo i showed you how fine grain",
    "start": "533760",
    "end": "535760"
  },
  {
    "text": "access control works with amazon emr and",
    "start": "535760",
    "end": "538320"
  },
  {
    "text": "aws lake formation",
    "start": "538320",
    "end": "547200"
  }
]