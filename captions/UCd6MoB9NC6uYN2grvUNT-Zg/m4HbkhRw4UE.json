[
  {
    "start": "0",
    "end": "25000"
  },
  {
    "text": "- Hi, I'm Andrea with AWS.",
    "start": "360",
    "end": "2880"
  },
  {
    "text": "We hear a lot from our\ndeveloper community,",
    "start": "2880",
    "end": "5220"
  },
  {
    "text": "about serverless and\nAWS cloud technologies.",
    "start": "5220",
    "end": "8250"
  },
  {
    "text": "Here are some interesting\nways our customers,",
    "start": "8250",
    "end": "10410"
  },
  {
    "text": "are architecting serverless solutions.",
    "start": "10410",
    "end": "12780"
  },
  {
    "text": "Let's begin with FoodHub,",
    "start": "12780",
    "end": "14940"
  },
  {
    "text": "and see how they're handling\norder processing at scale.",
    "start": "14940",
    "end": "18033"
  },
  {
    "text": "(upbeat music)",
    "start": "18872",
    "end": "21455"
  },
  {
    "start": "25000",
    "end": "230000"
  },
  {
    "text": "- Hi, welcome to, \"This\nis My Architecture.\"",
    "start": "25770",
    "end": "28230"
  },
  {
    "text": "I'm Jasmine, and I have here with me,",
    "start": "28230",
    "end": "30300"
  },
  {
    "text": "Dinesh Durai from FoodHub.",
    "start": "30300",
    "end": "32430"
  },
  {
    "text": "Hi, Dinesh. Thanks for joining us.",
    "start": "32430",
    "end": "34740"
  },
  {
    "text": "- Thank you for hosting me today.",
    "start": "34740",
    "end": "36120"
  },
  {
    "text": "We use Rudolph Lambda resolvers.",
    "start": "36120",
    "end": "39510"
  },
  {
    "text": "So, basically for order syncing,",
    "start": "39510",
    "end": "42239"
  },
  {
    "text": "and notifications, dashboarding.",
    "start": "42240",
    "end": "45000"
  },
  {
    "text": "So Lambda resolvers helps us a lot,",
    "start": "45000",
    "end": "47250"
  },
  {
    "text": "and it helps us during scale as well.",
    "start": "47250",
    "end": "50310"
  },
  {
    "text": "And what we also do is\nbased on the Lambda,",
    "start": "50310",
    "end": "53460"
  },
  {
    "text": "in the past we used\nAurora as our database.",
    "start": "53460",
    "end": "56670"
  },
  {
    "text": "Now we moved into DynamoDB.",
    "start": "56670",
    "end": "58710"
  },
  {
    "text": "So what DynamoDB is gives us,",
    "start": "58710",
    "end": "61379"
  },
  {
    "text": "a length and breadth of\nservices, what it has.",
    "start": "61380",
    "end": "64410"
  },
  {
    "text": "And with AWS Managed Services,",
    "start": "64410",
    "end": "66990"
  },
  {
    "text": "it takes us to scale during a peak period.",
    "start": "66990",
    "end": "69329"
  },
  {
    "text": "- Okay, great.",
    "start": "69330",
    "end": "70590"
  },
  {
    "text": "And I see this is serverless architecture.",
    "start": "70590",
    "end": "73170"
  },
  {
    "text": "So how does that help you in",
    "start": "73170",
    "end": "75540"
  },
  {
    "text": "scaling as well as reducing\nyour operational overhead?",
    "start": "75540",
    "end": "79110"
  },
  {
    "text": "- Okay. so predominantly most of the",
    "start": "79110",
    "end": "81870"
  },
  {
    "text": "order placements happens\non a weekend, for example.",
    "start": "81870",
    "end": "85380"
  },
  {
    "text": "We also do on a weekend, right?",
    "start": "85380",
    "end": "86670"
  },
  {
    "text": "On a Friday.\n- Yeah.",
    "start": "86670",
    "end": "87659"
  },
  {
    "text": "- Say between five to seven\nis a peak period, right.",
    "start": "87660",
    "end": "90270"
  },
  {
    "text": "So where the orders are\ngetting placed by consumers.",
    "start": "90270",
    "end": "92880"
  },
  {
    "text": "And same way the clients,",
    "start": "92880",
    "end": "94920"
  },
  {
    "text": "the restaurant owners needs to",
    "start": "94920",
    "end": "96119"
  },
  {
    "text": "process those orders fast, right?",
    "start": "96120",
    "end": "98460"
  },
  {
    "text": "So with AWS Managed Services,",
    "start": "98460",
    "end": "100470"
  },
  {
    "text": "we could able to scale\nin breadth and length,",
    "start": "100470",
    "end": "102870"
  },
  {
    "text": "and we can able to maintain\nthe concept of speed.",
    "start": "102870",
    "end": "105750"
  },
  {
    "text": "- Great. So, basically on weekends,",
    "start": "105750",
    "end": "108510"
  },
  {
    "text": "you might see spikes, right?",
    "start": "108510",
    "end": "111060"
  },
  {
    "text": "And these are not gradual\nincrease of orders,",
    "start": "111060",
    "end": "113490"
  },
  {
    "text": "but a spike in particular period.",
    "start": "113490",
    "end": "116572"
  },
  {
    "text": "Right? And that's where something like",
    "start": "116572",
    "end": "119460"
  },
  {
    "text": "DynamoDB helps you which\nis a no SQL database.",
    "start": "119460",
    "end": "123240"
  },
  {
    "text": "- [Dinesh] Right.\n- Right.",
    "start": "123240",
    "end": "124170"
  },
  {
    "text": "And amazing that this is\ncompletely serverless.",
    "start": "124170",
    "end": "127530"
  },
  {
    "text": "That's great.",
    "start": "127530",
    "end": "129600"
  },
  {
    "text": "Now coming to, you know,",
    "start": "129600",
    "end": "131550"
  },
  {
    "text": "the insights that the\nrestaurant owners need",
    "start": "131550",
    "end": "135300"
  },
  {
    "text": "in terms of, you know, any metrics.",
    "start": "135300",
    "end": "138450"
  },
  {
    "text": "So how do you take care of that?",
    "start": "138450",
    "end": "140280"
  },
  {
    "text": "- Okay. So predominantly\nwhat happens in the day,",
    "start": "140280",
    "end": "142890"
  },
  {
    "text": "the restaurant owners wants\nto process the orders.",
    "start": "142890",
    "end": "146040"
  },
  {
    "text": "So they want to look at the stats,",
    "start": "146040",
    "end": "147569"
  },
  {
    "text": "and before closing the shop,",
    "start": "147570",
    "end": "149130"
  },
  {
    "text": "so that they know what they have got,",
    "start": "149130",
    "end": "150840"
  },
  {
    "text": "and how much they earned and\nso on and so forth, right?",
    "start": "150840",
    "end": "153090"
  },
  {
    "text": "So where insights becomes\na key component for them.",
    "start": "153090",
    "end": "156569"
  },
  {
    "text": "And what we do is, from\nthe DynamoDB streams,",
    "start": "156570",
    "end": "159420"
  },
  {
    "text": "we process the data to the Kinesis.",
    "start": "159420",
    "end": "161459"
  },
  {
    "text": "So where it can manage the state.",
    "start": "161460",
    "end": "163290"
  },
  {
    "text": "And from Kinesis, we push to S3.",
    "start": "163290",
    "end": "165659"
  },
  {
    "text": "So S3's three is our\ndata lake at this point,",
    "start": "165660",
    "end": "168090"
  },
  {
    "text": "where we store all the data,",
    "start": "168090",
    "end": "169739"
  },
  {
    "text": "and we run ETL's over it,",
    "start": "169740",
    "end": "171780"
  },
  {
    "text": "and we start computing the data.",
    "start": "171780",
    "end": "173880"
  },
  {
    "text": "So in the end of the day, right?",
    "start": "173880",
    "end": "175830"
  },
  {
    "text": "Say predominantly all the\nrestaurants closes at 11:00 PM,",
    "start": "175830",
    "end": "178860"
  },
  {
    "text": "and everybody wants to see the stats.",
    "start": "178860",
    "end": "180600"
  },
  {
    "text": "And you can assume the volume.",
    "start": "180600",
    "end": "181890"
  },
  {
    "text": "We have around 20,000 plus,",
    "start": "181890",
    "end": "183230"
  },
  {
    "text": "28,000 plus restaurants",
    "start": "183230",
    "end": "185819"
  },
  {
    "text": "who might eat at the same time.",
    "start": "185820",
    "end": "187230"
  },
  {
    "text": "- [Jasmine] Right.\n- So thus,",
    "start": "187230",
    "end": "188610"
  },
  {
    "text": "we serve it from S3,",
    "start": "188610",
    "end": "190050"
  },
  {
    "text": "and we use QuickSight",
    "start": "190050",
    "end": "191790"
  },
  {
    "text": "as our predominant dashboarding tool,",
    "start": "191790",
    "end": "196200"
  },
  {
    "text": "where we could able to see it.",
    "start": "196200",
    "end": "198030"
  },
  {
    "text": "Not only the restaurant owners,",
    "start": "198030",
    "end": "199950"
  },
  {
    "text": "the internal back office\npeople wants to know",
    "start": "199950",
    "end": "202379"
  },
  {
    "text": "how the restaurants is fed today,",
    "start": "202380",
    "end": "204210"
  },
  {
    "text": "or probably should I do\nsome campaigns for them.",
    "start": "204210",
    "end": "206310"
  },
  {
    "text": "So for all those insights,",
    "start": "206310",
    "end": "208170"
  },
  {
    "text": "S3, QuickSight provides\nus a lot of insight,",
    "start": "208170",
    "end": "211230"
  },
  {
    "text": "and, you know, we could able\nto (indistinct) the data,",
    "start": "211230",
    "end": "214500"
  },
  {
    "text": "and take data (indistinct).",
    "start": "214500",
    "end": "216300"
  },
  {
    "text": "- That's amazing.",
    "start": "216300",
    "end": "217590"
  },
  {
    "text": "- Now let's look at how\nFreightways is delivering",
    "start": "217590",
    "end": "220170"
  },
  {
    "text": "15 million packages with the\nserverless tracking solution.",
    "start": "220170",
    "end": "224166"
  },
  {
    "text": "(upbeat music)",
    "start": "224166",
    "end": "226749"
  },
  {
    "start": "230000",
    "end": "358000"
  },
  {
    "text": "- Welcome to, \"This is My\nArchitecture New Zealand.\"",
    "start": "231180",
    "end": "233489"
  },
  {
    "text": "I'm Ondrej, and who here, this\nis Dean, from Freightways.",
    "start": "233490",
    "end": "236520"
  },
  {
    "text": "- Hi. So API built in the Fargate service,",
    "start": "236520",
    "end": "240450"
  },
  {
    "text": "allows us to consume those scans",
    "start": "240450",
    "end": "242489"
  },
  {
    "text": "from the different sources,",
    "start": "242490",
    "end": "243750"
  },
  {
    "text": "and persist them within the DynamoDB,",
    "start": "243750",
    "end": "245490"
  },
  {
    "text": "so the driver goes to the Fargate,",
    "start": "245490",
    "end": "246990"
  },
  {
    "text": "and installs it in the DynamoDB.",
    "start": "246990",
    "end": "248793"
  },
  {
    "text": "- Hmm. And what made you choose Dynamo DB?",
    "start": "248793",
    "end": "251730"
  },
  {
    "text": "- It was easy to integrate with.",
    "start": "251730",
    "end": "253560"
  },
  {
    "text": "It's performant, I hope, copes with the",
    "start": "253560",
    "end": "255540"
  },
  {
    "text": "different loads during the day.",
    "start": "255540",
    "end": "258060"
  },
  {
    "text": "It's really cost effective,",
    "start": "258060",
    "end": "259709"
  },
  {
    "text": "and also allows us to feed\non through DynamoDB streams,",
    "start": "259710",
    "end": "262440"
  },
  {
    "text": "to down services downstream",
    "start": "262440",
    "end": "264390"
  },
  {
    "text": "that are interested in the scans.",
    "start": "264390",
    "end": "265770"
  },
  {
    "text": "- Oh, great to hear that it was a",
    "start": "265770",
    "end": "266849"
  },
  {
    "text": "good fit for your use case.",
    "start": "266850",
    "end": "268770"
  },
  {
    "text": "So at this point, you\nhave the scans stored.",
    "start": "268770",
    "end": "271770"
  },
  {
    "text": "How do you process them after that?",
    "start": "271770",
    "end": "273599"
  },
  {
    "text": "- So we have a Lambda,",
    "start": "273600",
    "end": "274830"
  },
  {
    "text": "that picks it outta the DynamoDB streams.",
    "start": "274830",
    "end": "277319"
  },
  {
    "text": "And in fact, then it passes it on to a,",
    "start": "277320",
    "end": "279993"
  },
  {
    "text": "down to SNS, which then fans it out to SQS",
    "start": "283590",
    "end": "288133"
  },
  {
    "text": "for the prices and viable services.",
    "start": "289838",
    "end": "292920"
  },
  {
    "text": "- I see. That's an interesting pattern",
    "start": "292920",
    "end": "295050"
  },
  {
    "text": "of having SNS versus multiple SQS cubes.",
    "start": "295050",
    "end": "298830"
  },
  {
    "text": "What made you arrive to this solution?",
    "start": "298830",
    "end": "301289"
  },
  {
    "text": "- Well, we have lots of different services",
    "start": "301290",
    "end": "302820"
  },
  {
    "text": "and this allows us to add\nnew features to our stack,",
    "start": "302820",
    "end": "306750"
  },
  {
    "text": "such as there's a service that processes",
    "start": "306750",
    "end": "309840"
  },
  {
    "text": "all images that comes\nthrough on the scans as well.",
    "start": "309840",
    "end": "311970"
  },
  {
    "text": "So that passes off to\nanother Fargate service",
    "start": "311970",
    "end": "314790"
  },
  {
    "text": "that does processes images.",
    "start": "314790",
    "end": "316860"
  },
  {
    "text": "- I see. So it enables your\nrapid feature development.",
    "start": "316860",
    "end": "320069"
  },
  {
    "text": "- Yes.\n- How did you",
    "start": "320070",
    "end": "321000"
  },
  {
    "text": "start on this journey?",
    "start": "321000",
    "end": "322050"
  },
  {
    "text": "Did you start it with this or\ndid you have evolution here?",
    "start": "322050",
    "end": "324810"
  },
  {
    "text": "- In fact, we started with Amazon MQ,",
    "start": "324810",
    "end": "327030"
  },
  {
    "text": "but that wasn't able to cope",
    "start": "327030",
    "end": "328920"
  },
  {
    "text": "with the 1500 scans per minute.",
    "start": "328920",
    "end": "330840"
  },
  {
    "text": "So we were able to pivot fairly easily",
    "start": "330840",
    "end": "333030"
  },
  {
    "text": "to SNS and SQS, which is also a",
    "start": "333030",
    "end": "336210"
  },
  {
    "text": "software as a service that\nwas quite attractive as well.",
    "start": "336210",
    "end": "338340"
  },
  {
    "text": "- Mm-hmm. Well I think\nthat's a great example",
    "start": "338340",
    "end": "340350"
  },
  {
    "text": "of whether you have been able to change",
    "start": "340350",
    "end": "341670"
  },
  {
    "text": "the integration of the services",
    "start": "341670",
    "end": "343260"
  },
  {
    "text": "when the business needs arrive.",
    "start": "343260",
    "end": "345390"
  },
  {
    "text": "- Lastly, let's check how\nVertex Pharmaceuticals",
    "start": "345390",
    "end": "348720"
  },
  {
    "text": "built a serverless\nmolecule search platform.",
    "start": "348720",
    "end": "352123"
  },
  {
    "text": "(upbeat music)",
    "start": "352123",
    "end": "354706"
  },
  {
    "start": "358000",
    "end": "516000"
  },
  {
    "text": "- Hi, welcome to, \"This\nis My Architecture.\"",
    "start": "359070",
    "end": "360840"
  },
  {
    "text": "I'm Sudipt, this is Roberto from Vertex.",
    "start": "360840",
    "end": "363060"
  },
  {
    "text": "Roberto, how are you today?",
    "start": "363060",
    "end": "364110"
  },
  {
    "text": "- Well, thanks.",
    "start": "364110",
    "end": "365039"
  },
  {
    "text": "There are tens of billions",
    "start": "365040",
    "end": "366210"
  },
  {
    "text": "of potential small molecules to evaluate.",
    "start": "366210",
    "end": "368610"
  },
  {
    "text": "So our computational chemistry team,",
    "start": "368610",
    "end": "370229"
  },
  {
    "text": "asked to work with us to create a platform",
    "start": "370230",
    "end": "372300"
  },
  {
    "text": "that would let them more intelligently",
    "start": "372300",
    "end": "373830"
  },
  {
    "text": "search that space to find molecules",
    "start": "373830",
    "end": "376229"
  },
  {
    "text": "to synthesize in the lab.\n- Excellent.",
    "start": "376230",
    "end": "377970"
  },
  {
    "text": "So these are probably made\nnon-technical users, right?",
    "start": "377970",
    "end": "380413"
  },
  {
    "text": "Chemists, still. So,\nmaybe you can talk through",
    "start": "380413",
    "end": "382169"
  },
  {
    "text": "how they're interacting with the platform.",
    "start": "382170",
    "end": "384420"
  },
  {
    "text": "- Sure. So our chemists have a client",
    "start": "384420",
    "end": "387240"
  },
  {
    "text": "that runs on their laptop,",
    "start": "387240",
    "end": "388560"
  },
  {
    "text": "that allows them to submit a request",
    "start": "388560",
    "end": "390810"
  },
  {
    "text": "to an Amazon API Gateway API.",
    "start": "390810",
    "end": "393960"
  },
  {
    "text": "They, in that payload,",
    "start": "393960",
    "end": "395460"
  },
  {
    "text": "submit a post request some JSON,",
    "start": "395460",
    "end": "397530"
  },
  {
    "text": "that includes the type\nof search they wanna run,",
    "start": "397530",
    "end": "400320"
  },
  {
    "text": "as well as the size of\nthe fleet of workers",
    "start": "400320",
    "end": "402510"
  },
  {
    "text": "they want to create for that search.",
    "start": "402510",
    "end": "404910"
  },
  {
    "text": "That request comes to\nan AWS Lambda function,",
    "start": "404910",
    "end": "408000"
  },
  {
    "text": "that enriches that search\nwith some additional details",
    "start": "408000",
    "end": "411360"
  },
  {
    "text": "from a relational database,",
    "start": "411360",
    "end": "412740"
  },
  {
    "text": "and then creates this\nenvironment on the fly,",
    "start": "412740",
    "end": "416190"
  },
  {
    "text": "in response to some of those parameters.",
    "start": "416190",
    "end": "418110"
  },
  {
    "text": "- Excellent. So we're\nactually dynamically creating",
    "start": "418110",
    "end": "420240"
  },
  {
    "text": "this environment based on two parameters",
    "start": "420240",
    "end": "422099"
  },
  {
    "text": "that were placed by the chemist.",
    "start": "422100",
    "end": "423270"
  },
  {
    "text": "- That's right.\n- Interesting.",
    "start": "423270",
    "end": "424680"
  },
  {
    "text": "- Okay, great. And I'm\nnoticing, so you've got,",
    "start": "424680",
    "end": "427169"
  },
  {
    "text": "you know, you've spinning up Fargate here,",
    "start": "427170",
    "end": "428820"
  },
  {
    "text": "which is also spinning up workers.",
    "start": "428820",
    "end": "430800"
  },
  {
    "text": "Elastic Container Service.",
    "start": "430800",
    "end": "432060"
  },
  {
    "text": "So maybe you can kind of talk through,",
    "start": "432060",
    "end": "434700"
  },
  {
    "text": "you know, how Fargate has spun up,",
    "start": "434700",
    "end": "436650"
  },
  {
    "text": "and what the worker nodes\nare actually querying.",
    "start": "436650",
    "end": "439050"
  },
  {
    "text": "- Sure. So as I mentioned,",
    "start": "439050",
    "end": "441030"
  },
  {
    "text": "the Lambda will spin up this environment",
    "start": "441030",
    "end": "442920"
  },
  {
    "text": "based on parameters of the search.",
    "start": "442920",
    "end": "444480"
  },
  {
    "text": "That includes the size\nof a Fargate spot fleet",
    "start": "444480",
    "end": "448350"
  },
  {
    "text": "over here on ECS.",
    "start": "448350",
    "end": "449940"
  },
  {
    "text": "It spins up one task that\nessentially drives the search.",
    "start": "449940",
    "end": "453540"
  },
  {
    "text": "We call this the orchestrator.",
    "start": "453540",
    "end": "455220"
  },
  {
    "text": "So, Lambda will spin up the orchestrator,",
    "start": "455220",
    "end": "457260"
  },
  {
    "text": "and the orchestrator communicates\nwith the search workers,",
    "start": "457260",
    "end": "461640"
  },
  {
    "text": "via RabbitMQ on Amazon MQ.",
    "start": "461640",
    "end": "464790"
  },
  {
    "text": "So, the orchestrator will tell",
    "start": "464790",
    "end": "467820"
  },
  {
    "text": "the search workers where to look next,",
    "start": "467820",
    "end": "469620"
  },
  {
    "text": "the workers pick up that\nwork and execute the search.",
    "start": "469620",
    "end": "472320"
  },
  {
    "text": "And this is actually\nan intelligent search.",
    "start": "472320",
    "end": "474330"
  },
  {
    "text": "So the workers will report back,",
    "start": "474330",
    "end": "476280"
  },
  {
    "text": "details of how their search is going.",
    "start": "476280",
    "end": "478800"
  },
  {
    "text": "That information comes\nback to the orchestrator,",
    "start": "478800",
    "end": "480930"
  },
  {
    "text": "who then further influences the search,",
    "start": "480930",
    "end": "483000"
  },
  {
    "text": "by telling them where to look next,",
    "start": "483000",
    "end": "484620"
  },
  {
    "text": "based on what they're hearing back",
    "start": "484620",
    "end": "486840"
  },
  {
    "text": "from the excellent the-\n- Excellent.",
    "start": "486840",
    "end": "487673"
  },
  {
    "text": "Also interesting use of MQ there.",
    "start": "487673",
    "end": "489330"
  },
  {
    "text": "Not just queuing requests,",
    "start": "489330",
    "end": "490530"
  },
  {
    "text": "but actually helping you",
    "start": "490530",
    "end": "491370"
  },
  {
    "text": "with that intelligent pattern detection.",
    "start": "491370",
    "end": "493530"
  },
  {
    "text": "- That's right.\n- Excellent.",
    "start": "493530",
    "end": "495360"
  },
  {
    "text": "- We hope you enjoyed watching",
    "start": "495360",
    "end": "496830"
  },
  {
    "text": "how these customers use serverless",
    "start": "496830",
    "end": "498750"
  },
  {
    "text": "in their AWS cloud solutions,",
    "start": "498750",
    "end": "500790"
  },
  {
    "text": "across a broad range of industries.",
    "start": "500790",
    "end": "503310"
  },
  {
    "text": "Find out more by watching\nthe full episodes",
    "start": "503310",
    "end": "505980"
  },
  {
    "text": "from the links in the description.",
    "start": "505980",
    "end": "507840"
  },
  {
    "text": "And keep watching, \"This\nis My Architecture.\"",
    "start": "507840",
    "end": "510477"
  }
]