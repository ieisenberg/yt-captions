[
  {
    "start": "0",
    "end": "36000"
  },
  {
    "text": "thanks for taking the time to join us here today my name is manish i'm a product manager with the amazon rds team also here is onorang",
    "start": "320",
    "end": "8160"
  },
  {
    "text": "gupta he's the vp of aurora i hope you guys all had a chance to see andy's keynote",
    "start": "8160",
    "end": "14320"
  },
  {
    "text": "this earlier this morning and he kind of talked a little bit about aurora but in this session we're going to spend a lot more time talking about aurora",
    "start": "14320",
    "end": "19840"
  },
  {
    "text": "we're going to dive in um we're going to talk about why and how we built aurora we'll also talk about",
    "start": "19840",
    "end": "25439"
  },
  {
    "text": "how the preview has been going and what we're going to be doing with the preview moving forward in the next couple of weeks and then honorable is going to",
    "start": "25439",
    "end": "31760"
  },
  {
    "text": "spend some time diving into the technical details and the architecture of aurora so let's uh let's start with",
    "start": "31760",
    "end": "37600"
  },
  {
    "start": "36000",
    "end": "64000"
  },
  {
    "text": "the motivations behind aurora when you look at current database architectures today",
    "start": "37600",
    "end": "42960"
  },
  {
    "text": "you can kind of think of them as a layer cake of functionality you have a sql layer a transaction layer a",
    "start": "42960",
    "end": "49039"
  },
  {
    "text": "caching layer and a storage layer and all those layers are tightly coupled onto one single box so if you want to",
    "start": "49039",
    "end": "56399"
  },
  {
    "text": "scale that or grow your throughput or performance characteristics one option is is you can get a bigger",
    "start": "56399",
    "end": "62719"
  },
  {
    "text": "box right another approach is you can take a sharding approach so instead of",
    "start": "62719",
    "end": "68640"
  },
  {
    "start": "64000",
    "end": "137000"
  },
  {
    "text": "getting a bigger box add another box and sharding works you can definitely grow your database load through sharding",
    "start": "68640",
    "end": "74880"
  },
  {
    "text": "but one of the big reasons you're using relational databases is because you want to be able to run your sql transactions across all of",
    "start": "74880",
    "end": "82720"
  },
  {
    "text": "your data you want to be able to get consistent transactions across all these things when you start to shard you lose that",
    "start": "82720",
    "end": "89360"
  },
  {
    "text": "functionality and it's up to your application to figure out where to send the data where to send the queries and so it adds some",
    "start": "89360",
    "end": "95759"
  },
  {
    "text": "complexity at your application layer another approach is you could take a shared nothing model something that was",
    "start": "95759",
    "end": "101680"
  },
  {
    "text": "pretty popular in the past what's interesting about this approach is at your application layer you don't have to",
    "start": "101680",
    "end": "106880"
  },
  {
    "text": "worry about uh sending your data to certain nodes anymore the the database nodes will",
    "start": "106880",
    "end": "112079"
  },
  {
    "text": "actually work together at the sql layer to route the query to the right node but what's interesting about this approach",
    "start": "112079",
    "end": "118640"
  },
  {
    "text": "is as you add more and more of these nodes since they're shared nothing if you lose one of those nodes well you",
    "start": "118640",
    "end": "125119"
  },
  {
    "text": "lost that data and so in aggregate your system availability actually goes down as you add more and more of these these",
    "start": "125119",
    "end": "132560"
  },
  {
    "text": "these uh these database instances similar story for sharding as well",
    "start": "132560",
    "end": "137680"
  },
  {
    "start": "137000",
    "end": "198000"
  },
  {
    "text": "another approach is the shared disk model and here the ideas is let's fuse the the caches together",
    "start": "137680",
    "end": "142879"
  },
  {
    "text": "and again the application doesn't have to worry about it you're sending your transactions to any of these nodes and the database is",
    "start": "142879",
    "end": "148319"
  },
  {
    "text": "going to handle that for you but what's interesting well actually what's very interesting here is you can actually",
    "start": "148319",
    "end": "153440"
  },
  {
    "text": "have one of those nodes fail and this is pretty cool right if one of them fails the database remains up and you can",
    "start": "153440",
    "end": "158480"
  },
  {
    "text": "continue to take transactions but one of the weaknesses of this approach is as you start to get a lot of",
    "start": "158480",
    "end": "164800"
  },
  {
    "text": "transactions coming in the the caching algorithm between those two caches becomes very chatty and as a",
    "start": "164800",
    "end": "170720"
  },
  {
    "text": "result you can deal with like hotkey index hotkey issues and things like that as a result your performance your database",
    "start": "170720",
    "end": "177040"
  },
  {
    "text": "can start to degrade or become more sensitive to the load that you're applying to the database",
    "start": "177040",
    "end": "183040"
  },
  {
    "text": "so these are common ways of scaling your relational databases today but what you'll notice with all of these",
    "start": "183040",
    "end": "188800"
  },
  {
    "text": "approaches is that the the fundamental database itself hasn't changed it's still",
    "start": "188800",
    "end": "194159"
  },
  {
    "text": "a layer cake on one big box and you're just adding multiple boxes and that is the problem it's a problem",
    "start": "194159",
    "end": "201680"
  },
  {
    "start": "198000",
    "end": "239000"
  },
  {
    "text": "for cost because when you want to scale up you have to get another bigger box instead of being able to scale out",
    "start": "201680",
    "end": "206879"
  },
  {
    "text": "horizontally where you can potentially do that at significantly lower cost it's a problem for flexibility because like if you want",
    "start": "206879",
    "end": "213599"
  },
  {
    "text": "more i o or more storage well you can't just get a little bit more i o or a little bit more storage or a little more",
    "start": "213599",
    "end": "219120"
  },
  {
    "text": "cpu you have to get a whole nother box it could be another you're adding another shard which means now you have another",
    "start": "219120",
    "end": "224400"
  },
  {
    "text": "entire database instance to manage and watch and adds that complexity and it's a problem for availability for what",
    "start": "224400",
    "end": "230319"
  },
  {
    "text": "we talked about earlier as you add more and more of these instances you're actually decreasing the availability of your system",
    "start": "230319",
    "end": "236879"
  },
  {
    "text": "in aggregate so what would we do if we were building a",
    "start": "236879",
    "end": "241920"
  },
  {
    "start": "239000",
    "end": "345000"
  },
  {
    "text": "database today well we definitely would want to keep the good stuff right the ability to run",
    "start": "241920",
    "end": "247040"
  },
  {
    "text": "sql so the ability to say hey i want this data versus having to tell the database how to go get the data",
    "start": "247040",
    "end": "252959"
  },
  {
    "text": "that's really cool it's very powerful and it's very easy and that's why like relational database has been very successful you also want the ability to have",
    "start": "252959",
    "end": "259919"
  },
  {
    "text": "concurrency and transactions so the ability to have lots and lots of activity on the database from lots lots of different users",
    "start": "259919",
    "end": "266240"
  },
  {
    "text": "and know that the database will go from one consistent state to the other you don't want to give that up either",
    "start": "266240",
    "end": "271919"
  },
  {
    "text": "but what you would do differently is that you wouldn't put everything on a single box what you",
    "start": "271919",
    "end": "276960"
  },
  {
    "text": "would do is you would build a scale out architecture you'd scale out the architecture you'd make it",
    "start": "276960",
    "end": "282479"
  },
  {
    "text": "fault tolerance so if any one of these nodes would fail it has the ability to self-heal and you'd also build it on",
    "start": "282479",
    "end": "288800"
  },
  {
    "text": "best of breed infrastructure like ec2 and s3 and so what we're looking to do with",
    "start": "288800",
    "end": "295040"
  },
  {
    "text": "aurora is we want to reimagine the relational database for the cloud and we want to deliver the speed and availability of high-end",
    "start": "295040",
    "end": "302240"
  },
  {
    "text": "commercial grade databases but at the simplicity and price point of open source databases",
    "start": "302240",
    "end": "308479"
  },
  {
    "text": "and we also don't want to make you guys have to change your applications it doesn't make sense to bring make a",
    "start": "308479",
    "end": "314240"
  },
  {
    "text": "brand new sql syntax where you have to go into your existing applications change things pull things out invest all that",
    "start": "314240",
    "end": "320479"
  },
  {
    "text": "effort so one of the core things we wanted to do with aurora was make it compatible with an existing",
    "start": "320479",
    "end": "325520"
  },
  {
    "text": "um popular database in this case we're compatible with mysql56 in odb so if you're using innodb",
    "start": "325520",
    "end": "332720"
  },
  {
    "text": "mysql56 you should be able to convert to aurora without having to change your application and we also wanted to keep",
    "start": "332720",
    "end": "338880"
  },
  {
    "text": "the pricing simple so no contracts no licensing no lock in you pay per hour and you pay as you go",
    "start": "338880",
    "end": "346080"
  },
  {
    "start": "345000",
    "end": "483000"
  },
  {
    "text": "and the way we did that is we brought a service oriented architecture to the database and so let me let me",
    "start": "346080",
    "end": "352880"
  },
  {
    "text": "spend a little bit of time talking about that so we talked about this layer kick that's on a single box",
    "start": "352880",
    "end": "357919"
  },
  {
    "text": "now imagine if we take those different layers of functionality and we push them into their own horizontally multi-tenant multi-tenant",
    "start": "357919",
    "end": "365520"
  },
  {
    "text": "tiers then you can imagine having a database that is no longer constrained to one",
    "start": "365520",
    "end": "370720"
  },
  {
    "text": "single box and so with aurora for our first version of aurora what we've done is we've moved out the logging and storage",
    "start": "370720",
    "end": "377039"
  },
  {
    "text": "of the database that used to be on that layer cake on the single box into a multi-tenant scale out database",
    "start": "377039",
    "end": "383360"
  },
  {
    "text": "optimized storage service so if you were to look at an existing mysql database",
    "start": "383360",
    "end": "389120"
  },
  {
    "text": "and it's writing to a dumb block device what my sql does is on that single multi sorry that single uh instance it",
    "start": "389120",
    "end": "396080"
  },
  {
    "text": "will write the redo log to the the to the the dumb block device it's then going to also generate the",
    "start": "396080",
    "end": "402319"
  },
  {
    "text": "data page and persist that to the the block device and it's going to do a bunch of other work like doing a",
    "start": "402319",
    "end": "407600"
  },
  {
    "text": "double buffer right to ensure that it can prevent torn pages as well as a bunch of metadata and all that used to be done",
    "start": "407600",
    "end": "414479"
  },
  {
    "text": "on that single box what aurora does is it actually just sends the redo log down to the storage tier",
    "start": "414479",
    "end": "420960"
  },
  {
    "text": "and the storage tier is really smart it knows what a redo log is it knows how to interpret that redo log it knows how to",
    "start": "420960",
    "end": "427120"
  },
  {
    "text": "persist that redo log it knows how to generate the data page from those logs and it also",
    "start": "427120",
    "end": "433280"
  },
  {
    "text": "knows how to send those logs to s3 for eleven nines of durability",
    "start": "433280",
    "end": "438639"
  },
  {
    "text": "and that's what we call the data plane that's the database itself that you interact with but the service is more than that it's also a control plane that manages",
    "start": "438639",
    "end": "445599"
  },
  {
    "text": "that database for you and so we also built a bunch of functionality on top of other services within aws including",
    "start": "445599",
    "end": "453680"
  },
  {
    "text": "amazon dynamodb for volume metadata um simple workflow service for when you",
    "start": "453680",
    "end": "460319"
  },
  {
    "text": "request a scale compute on your instance or to create an instance itself all done through workflows",
    "start": "460319",
    "end": "466879"
  },
  {
    "text": "as well as route 53 to do failover so the ability to have one dns endpoint that you point your",
    "start": "466879",
    "end": "473039"
  },
  {
    "text": "application to and when something bad happens to your database will fail you over to a hot standby",
    "start": "473039",
    "end": "478560"
  },
  {
    "text": "without you having to change your application and that happens in a one to two minute type of time frame so we've been",
    "start": "478560",
    "end": "485520"
  },
  {
    "start": "483000",
    "end": "562000"
  },
  {
    "text": "in we announced aurora at re invent um last year in november and so we've been in preview",
    "start": "485520",
    "end": "490720"
  },
  {
    "text": "for a couple of months we're still in preview so you can still sign up the link is there the presentation will be available as",
    "start": "490720",
    "end": "496240"
  },
  {
    "text": "well but one of the things that we heard from folks that were signing up for the preview was that",
    "start": "496240",
    "end": "501759"
  },
  {
    "text": "hey my my applications my infrastructure aws infrastructure is not in virginia which is where the preview is",
    "start": "501759",
    "end": "507759"
  },
  {
    "text": "only available today so one of the things that we're going to be announcing today is that we're going to be expanding the preview",
    "start": "507759",
    "end": "513839"
  },
  {
    "text": "to multiple environments multiple regions and so we'll be going into u.s west",
    "start": "513839",
    "end": "518959"
  },
  {
    "text": "oregon as well as eu ireland so if that was a reason why you weren't able to test",
    "start": "518959",
    "end": "524720"
  },
  {
    "text": "the aurora preview please sign up these environments will be coming up very soon and we'd love to get your feedback",
    "start": "524720",
    "end": "530880"
  },
  {
    "text": "we've also invited thousands of customers to the limited preview and one of the things that uh we're",
    "start": "530880",
    "end": "538000"
  },
  {
    "text": "looking to do today is in the next two to three weeks we're actually going to be moving from what we call a limited preview",
    "start": "538000",
    "end": "543760"
  },
  {
    "text": "to a unlimited preview so anyone that's asked for access to the preview",
    "start": "543760",
    "end": "548800"
  },
  {
    "text": "will get an invite in two to three weeks so definitely if you want to try it out sign up the preview is",
    "start": "548800",
    "end": "556480"
  },
  {
    "text": "free as we move towards our full service launch we will start",
    "start": "556480",
    "end": "561760"
  },
  {
    "text": "charging though and so the way the the store the way the service is charged is two",
    "start": "561760",
    "end": "568000"
  },
  {
    "start": "562000",
    "end": "672000"
  },
  {
    "text": "key pricing dimensions the first is the instance itself and then the storage and so on the",
    "start": "568000",
    "end": "574160"
  },
  {
    "text": "instant side of things you can have an r3 large all the way up to the r3 8 extra large",
    "start": "574160",
    "end": "579360"
  },
  {
    "text": "that's a pretty beefy box it's got 32 cores 244 gigabytes of ram so really big box the prices are about 20",
    "start": "579360",
    "end": "587279"
  },
  {
    "text": "higher than rds my sequel today the you pay an hourly rate so no licensing",
    "start": "587279",
    "end": "592720"
  },
  {
    "text": "no lock in you just pay for what you use if you do want to make a commitment we do have a one year and a three year",
    "start": "592720",
    "end": "600160"
  },
  {
    "text": "heavy ri option there you can get with a one year or 44 discount on those hourly rates and with",
    "start": "600160",
    "end": "606720"
  },
  {
    "text": "a three year you can get up to 63 discount rates on the storage side this",
    "start": "606720",
    "end": "612160"
  },
  {
    "text": "is pretty interesting when you go to an aurora instance and you want to create when you want to create an aurora",
    "start": "612160",
    "end": "617839"
  },
  {
    "text": "instance you don't actually tell aurora how much space you want to consume",
    "start": "617839",
    "end": "623760"
  },
  {
    "text": "and the reason for that is aurora storage will actually auto grow as you insert data so like in a traditional database you may have",
    "start": "623760",
    "end": "630079"
  },
  {
    "text": "a data set that's 200 gigabytes and you'll probably provision maybe a terabyte because you don't want to run out of storage",
    "start": "630079",
    "end": "635440"
  },
  {
    "text": "and you don't want to have to babysit that storage the days of paying for uh over provision storage don't exist in",
    "start": "635440",
    "end": "642160"
  },
  {
    "text": "aurora you'll pay for exactly the storage that you're actually consuming and that's billed at 10 cents per gigabyte month",
    "start": "642160",
    "end": "649760"
  },
  {
    "text": "you'll also pay for io so it's 20 cents per million i o as well this is the pricing",
    "start": "649760",
    "end": "656640"
  },
  {
    "text": "for virginia as well as oregon and when we bring the the eu dublin region online we'll also",
    "start": "656640",
    "end": "663920"
  },
  {
    "text": "announce pricing there will be slightly higher than the pricing that you see here",
    "start": "663920",
    "end": "669360"
  },
  {
    "start": "672000",
    "end": "685000"
  },
  {
    "text": "so we've been getting feedback from folks in the preview and one of the things that has really resonated",
    "start": "673600",
    "end": "678800"
  },
  {
    "text": "was that the preview folks were seeing that a lot of their tooling a lot of their existing applications were just working with",
    "start": "678800",
    "end": "684640"
  },
  {
    "text": "aurora and very recently we've been working with the mariadb folks and they've been testing their popular",
    "start": "684640",
    "end": "691200"
  },
  {
    "start": "685000",
    "end": "759000"
  },
  {
    "text": "connection drivers their odbc jdbc connection drivers and they're running their test suites against aurora and what they found",
    "start": "691200",
    "end": "697680"
  },
  {
    "text": "was that aurora passed their test suites seamlessly and it's really great news because one of our core things that we wanted to do",
    "start": "697680",
    "end": "703920"
  },
  {
    "text": "with aurora was make it so that it would be mysql compatible so that you guys didn't have to change anything with your existing applications",
    "start": "703920",
    "end": "710240"
  },
  {
    "text": "and this is a great sign that we're achieving that we've also seen a lot of the the mysql ecosystem embrace",
    "start": "710240",
    "end": "716639"
  },
  {
    "text": "aurora from the business intelligence side of things tableau and looker have already certified support",
    "start": "716639",
    "end": "722560"
  },
  {
    "text": "for aurora the popular data migration dave data movement tool talent has supported",
    "start": "722560",
    "end": "728880"
  },
  {
    "text": "aurora on the querying and monitoring side of things three of the most popular uh mysql query",
    "start": "728880",
    "end": "734720"
  },
  {
    "text": "tools have certified aurora um sql yog toad for my sequel as well as navi cat",
    "start": "734720",
    "end": "742320"
  },
  {
    "text": "and we've also been working with um system integrators and consultants and getting them into the preview so",
    "start": "742320",
    "end": "747839"
  },
  {
    "text": "that they can get some experience building aurora applications understanding how aurora works so that when we do go to full service",
    "start": "747839",
    "end": "754320"
  },
  {
    "text": "launch your tooling is going to work and you're going to have lots of people out there to support you the other thing that we've been",
    "start": "754320",
    "end": "760800"
  },
  {
    "start": "759000",
    "end": "769000"
  },
  {
    "text": "hearing is aurora has been very easy to use compared to some of the the existing databases that the preview",
    "start": "760800",
    "end": "767920"
  },
  {
    "text": "customers have been using one of the reasons is aurora is an engine managed by",
    "start": "767920",
    "end": "773200"
  },
  {
    "start": "769000",
    "end": "904000"
  },
  {
    "text": "the amazon rds service and so you get that simplification of database management and some of the things that rds does is",
    "start": "773200",
    "end": "780560"
  },
  {
    "text": "you have the ability to create a database in minutes so you no longer have to go and say okay i'm going to order some",
    "start": "780560",
    "end": "786240"
  },
  {
    "text": "database hardware i'm going to wait for it to get delivered i'm going to go install it i'm going to install the software on top",
    "start": "786240",
    "end": "791440"
  },
  {
    "text": "of that i'm going to debug it and then i'm ready to to actually use the database with rds you can go to a console",
    "start": "791440",
    "end": "797200"
  },
  {
    "text": "or our apis launch that instance and and have that instance in a few minutes so it's really powerful",
    "start": "797200",
    "end": "803680"
  },
  {
    "text": "also on the the back of the patching side of things you have the ability to turn on minor version patching automatically and",
    "start": "803680",
    "end": "810800"
  },
  {
    "text": "so what rds will do is when there is a minor patch available will automatically during your backup",
    "start": "810800",
    "end": "816639"
  },
  {
    "text": "window or sorry your maintenance window patch your instance and so now you no longer have to worry about upgrading your",
    "start": "816639",
    "end": "822639"
  },
  {
    "text": "software and keeping it up to date with security security issues or bugs that are happening",
    "start": "822639",
    "end": "828720"
  },
  {
    "text": "at the os level or at the database level similar to creating a database in minutes you can also scale your instance",
    "start": "828720",
    "end": "834480"
  },
  {
    "text": "so if you're running on an r3 large with a push of a button you can go to an r3 8 extra large all just by pushing that",
    "start": "834480",
    "end": "841519"
  },
  {
    "text": "api or calling that api backups are automatic they happen continuously behind the scenes",
    "start": "841519",
    "end": "847199"
  },
  {
    "text": "you can go one day to all the way to 35 days of backups what's neat about that is if you pick 35",
    "start": "847199",
    "end": "852560"
  },
  {
    "text": "days within that 35 day window you can restore your database to any second within that window",
    "start": "852560",
    "end": "858240"
  },
  {
    "text": "that's pretty cool right you get to if something happened to your database at a certain point you're not sure where it happened you can find a place where that",
    "start": "858240",
    "end": "863680"
  },
  {
    "text": "problem didn't happen and restore it and pull the data that you need and then one of the really powerful features with",
    "start": "863680",
    "end": "869760"
  },
  {
    "text": "rds is the ability to detect failures and do failovers and so what rds does is actually will",
    "start": "869760",
    "end": "875120"
  },
  {
    "text": "watch all of your database instances and when it detects that something bad has happened to your master",
    "start": "875120",
    "end": "880560"
  },
  {
    "text": "it will make a decision on whether or not to promote one of your replicas to become the new master",
    "start": "880560",
    "end": "886399"
  },
  {
    "text": "and that type of thing can take a lot of effort to kind of do right and there's a lot of situations where you may promote the instance and you may",
    "start": "886399",
    "end": "892480"
  },
  {
    "text": "end up with a split brain situation where you're taking rights on both instances we've been running multi-az for many years and we've tuned this so",
    "start": "892480",
    "end": "899360"
  },
  {
    "text": "that this never this doesn't happen",
    "start": "899360",
    "end": "903120"
  },
  {
    "text": "and then aurora builds on top of rds mysql's simplification of the database",
    "start": "904880",
    "end": "910240"
  },
  {
    "text": "model aurora simplifies storage management so one of the things you can think about is aurora has these replicas and what",
    "start": "910240",
    "end": "916959"
  },
  {
    "text": "these replicas do is they effectively connect to the same logical volume",
    "start": "916959",
    "end": "922240"
  },
  {
    "text": "that the master connects to and if anything happens to the master any of those read replicas can be",
    "start": "922240",
    "end": "928079"
  },
  {
    "text": "promoted to become the new master so what's cool about that is your replicas can be used for read traffic",
    "start": "928079",
    "end": "933839"
  },
  {
    "text": "and if anything happens you can have up to 15 of those guys spread across three az's and any one of them can become the",
    "start": "933839",
    "end": "939120"
  },
  {
    "text": "master depending on the scenario user snapshots",
    "start": "939120",
    "end": "944160"
  },
  {
    "text": "are instantaneous and have no performance impact on the database and the reason that's happening is you",
    "start": "944160",
    "end": "949440"
  },
  {
    "text": "think about it what we've done is instead of having that that single box with all of the layer",
    "start": "949440",
    "end": "954560"
  },
  {
    "text": "cake in there we've pushed a bunch of the storage out into this this scale out storage tier",
    "start": "954560",
    "end": "960240"
  },
  {
    "text": "the storage tier is the one that does the work in terms of doing those snapshots and now what that means is the database",
    "start": "960240",
    "end": "965920"
  },
  {
    "text": "doesn't have to worry about that and it's not impacted when snapshots are being taken very similar",
    "start": "965920",
    "end": "970959"
  },
  {
    "text": "for continuous and incremental backups as well and we talked a little bit about this but",
    "start": "970959",
    "end": "976079"
  },
  {
    "text": "the storage will auto scale on the fly for you but it would be terrible if it's auto scaling and you're seeing",
    "start": "976079",
    "end": "981360"
  },
  {
    "text": "performance issues when that's happening but with aurora just like creating",
    "start": "981360",
    "end": "986480"
  },
  {
    "text": "snapshots it's happening at this storage tier which is buffering any of that work away from the",
    "start": "986480",
    "end": "991519"
  },
  {
    "text": "actual database that's doing the reads and writes from your application and so your volume will grow and grow",
    "start": "991519",
    "end": "997519"
  },
  {
    "text": "without having any performance or availability impact on your database",
    "start": "997519",
    "end": "1002800"
  },
  {
    "text": "and then the last thing i'll talk about here is you can think of the aurora storage tier as like an enterprise san",
    "start": "1002800",
    "end": "1010240"
  },
  {
    "text": "appliance because what it's doing behind the scenes is a bunch of work that these sand appliances do",
    "start": "1010240",
    "end": "1015360"
  },
  {
    "text": "the first thing is it will automatically restripe your data and so when you're writing data it'll get striped across",
    "start": "1015360",
    "end": "1020480"
  },
  {
    "text": "lots and lots of different storage nodes spread in a wise way so that it's spread across three azs",
    "start": "1020480",
    "end": "1025839"
  },
  {
    "text": "two copies in each az if something bad happens to one of those",
    "start": "1025839",
    "end": "1031360"
  },
  {
    "text": "pieces of data those ten gigabyte segments that exist aurora storage here actually talks to",
    "start": "1031360",
    "end": "1036558"
  },
  {
    "text": "each other there's all these different storage nodes that talk to each other they'll actually detect that oh something bad happened here it'll",
    "start": "1036559",
    "end": "1042000"
  },
  {
    "text": "automatically repair and fix that making the storage self-healing another thing that the storage tier does",
    "start": "1042000",
    "end": "1048240"
  },
  {
    "text": "as well is it will detect hot spots so if there's a lot of i o or a lot of intensity on a certain ssd drive or a",
    "start": "1048240",
    "end": "1054240"
  },
  {
    "text": "certain segment what it will do is it will has the ability to take one of those segments and move it to a colder place so what",
    "start": "1054240",
    "end": "1060000"
  },
  {
    "text": "you can imagine is you have this huge heat map and you get to move things across to balance that heat very powerful it gives you great um",
    "start": "1060000",
    "end": "1067200"
  },
  {
    "text": "consistent performance and you also can get performance which is another thing we'll talk about here",
    "start": "1067200",
    "end": "1072480"
  },
  {
    "start": "1070000",
    "end": "1161000"
  },
  {
    "text": "is aurora does simplify data security as well one of the things that we're adding to the preview is by ga",
    "start": "1072480",
    "end": "1081039"
  },
  {
    "text": "will be encryption at rest so the ability to go into the aurora console and say hey",
    "start": "1081039",
    "end": "1086080"
  },
  {
    "text": "i'm going to take a kms key that i have and i'm going to ask aurora to encrypt",
    "start": "1086080",
    "end": "1091280"
  },
  {
    "text": "all of the data that's stored on any of the storage nodes as well as backups that are stored in s3 via that key and if you ever choose to",
    "start": "1091280",
    "end": "1098000"
  },
  {
    "text": "delete that key aurora no longer has the ability to read that data anymore we've also added ssl support to",
    "start": "1098000",
    "end": "1104559"
  },
  {
    "text": "the preview so now you have the ability to use rds's ssl cert to connect your",
    "start": "1104559",
    "end": "1109840"
  },
  {
    "text": "application to connect your application to the aurora database using ssl which means now you get to protect your data in transit as well",
    "start": "1109840",
    "end": "1117039"
  },
  {
    "text": "and aurora is built on um it's built on vpc so everything in the aurora architecture is living",
    "start": "1117039",
    "end": "1123840"
  },
  {
    "text": "within a vpc so you get the the network isolation and all the security benefits of vpc across all of the the nodes that you're",
    "start": "1123840",
    "end": "1131360"
  },
  {
    "text": "working with with aurora and since it's part of rds it also it comes locked down",
    "start": "1131360",
    "end": "1137039"
  },
  {
    "text": "so the only way to connect to an aurora instance is via the sql port so there's no sshing into the box",
    "start": "1137039",
    "end": "1142400"
  },
  {
    "text": "there's no other access so it allows the database to be very very secure",
    "start": "1142400",
    "end": "1148000"
  },
  {
    "text": "and it's also built on top of ec2 and s3 and rds so it gets some of the the",
    "start": "1148000",
    "end": "1154799"
  },
  {
    "text": "industry popular security and data data protection certifications as well like sock",
    "start": "1154799",
    "end": "1162000"
  },
  {
    "text": "so now i'd like to hand it off to honorable who's going to dive into some of the aurora technical details",
    "start": "1162000",
    "end": "1167919"
  },
  {
    "text": "thank you hey thanks manish so i'll just go through fly over some",
    "start": "1167919",
    "end": "1173840"
  },
  {
    "text": "tech details and try to leave maybe 15 20 minutes for uh questions and we'll",
    "start": "1173840",
    "end": "1179919"
  },
  {
    "text": "both be around afterwards if you want more time uh so let's spend some time talking about availability",
    "start": "1179919",
    "end": "1186799"
  },
  {
    "text": "so um manish mentioned we do six-way replication across three azs one thing",
    "start": "1186799",
    "end": "1192000"
  },
  {
    "start": "1187000",
    "end": "1284000"
  },
  {
    "text": "that's uh important to note is that when we talk about uh 10 cents per gigabyte month",
    "start": "1192000",
    "end": "1197200"
  },
  {
    "text": "that's the replicated data you're not paying for each of those copies of data that's the you know six-way replicated",
    "start": "1197200",
    "end": "1202400"
  },
  {
    "text": "data uh the reason we have six copies and we'll get into it in a little bit more detail is that we use",
    "start": "1202400",
    "end": "1207840"
  },
  {
    "text": "write and read quorums so that basically gives us protection against both latency outliers",
    "start": "1207840",
    "end": "1214320"
  },
  {
    "text": "which is important in a widespread network as well as a multi-tenant storage system as well as",
    "start": "1214320",
    "end": "1220400"
  },
  {
    "text": "dealing with failures and of course if you have a four out of six right form that implies a three out",
    "start": "1220400",
    "end": "1225760"
  },
  {
    "text": "of six read quorum we actually internally get to save a little bit of that work",
    "start": "1225760",
    "end": "1231120"
  },
  {
    "text": "because we have a knowledge in the head node the database node about which rights",
    "start": "1231120",
    "end": "1237520"
  },
  {
    "text": "have completed and so we can actually go directly to a node which where we know that that right where that data block is exists",
    "start": "1237520",
    "end": "1244320"
  },
  {
    "text": "rather than having to do a full quorum as we mentioned it's an ssd based scale out multi-tenant storage",
    "start": "1244320",
    "end": "1250640"
  },
  {
    "text": "it scales as you need you pay for what you use and it's log structured",
    "start": "1250640",
    "end": "1256400"
  },
  {
    "text": "and what that means really is that when you create a database volume let's say of a terabyte",
    "start": "1256480",
    "end": "1261600"
  },
  {
    "text": "or have grown to a terabyte in size what actually exists there is many segments each 10 gigs in",
    "start": "1261600",
    "end": "1268080"
  },
  {
    "text": "size each replicated six ways each with their own localized redo log",
    "start": "1268080",
    "end": "1275280"
  },
  {
    "text": "and locally we use the log pages to generate data pages",
    "start": "1275280",
    "end": "1280480"
  },
  {
    "text": "so that has a bunch of benefits let's go through those in a little bit of detail so the first thing that we benefit from",
    "start": "1280480",
    "end": "1288080"
  },
  {
    "text": "is that the rights become uh consistent and low latency so on the left hand side you're",
    "start": "1288080",
    "end": "1293679"
  },
  {
    "text": "basically you're seeing uh rds mysql with multi-az and so there are",
    "start": "1293679",
    "end": "1299200"
  },
  {
    "text": "a bunch of different types of writes that are going on from the primary instance there are logs there's bin log there's",
    "start": "1299200",
    "end": "1304880"
  },
  {
    "text": "data there's the double write buffer for data and then there are of course frm files and metadata if you're making",
    "start": "1304880",
    "end": "1310720"
  },
  {
    "text": "changes there and when you issue a write what's going to happen is that it goes to",
    "start": "1310720",
    "end": "1316320"
  },
  {
    "text": "ebs ebs copies it to their mirror then because it's multi-az we send it",
    "start": "1316320",
    "end": "1322640"
  },
  {
    "text": "over to a standby instance which has its own set of volumes it writes again writes again acts back so there are four sequential",
    "start": "1322640",
    "end": "1331440"
  },
  {
    "text": "uh rights that need to happen if you have jitter at any one of those point it gets amplified all the way back",
    "start": "1331440",
    "end": "1337120"
  },
  {
    "text": "and since rights are you know basically rights amplify all the way back to your application right so it matters",
    "start": "1337120",
    "end": "1344480"
  },
  {
    "text": "in aurora we're uh basically only writing log records from the head node",
    "start": "1344480",
    "end": "1349840"
  },
  {
    "text": "to the storage nodes and so that's a reduction of somewhere on the order of 90",
    "start": "1349840",
    "end": "1355120"
  },
  {
    "text": "95 so you know because logs are a small fraction of data pages in size",
    "start": "1355120",
    "end": "1362159"
  },
  {
    "text": "moreover we're only writing we only need to get an acknowledgement back from four out of",
    "start": "1362240",
    "end": "1367760"
  },
  {
    "text": "those six so if a node is an outlier because the volume is hot on that node or the disc is a little bit",
    "start": "1367760",
    "end": "1374080"
  },
  {
    "text": "slow or there maybe there's some network congestion on the path you know you basically don't have to care about that",
    "start": "1374080",
    "end": "1380640"
  },
  {
    "text": "in the background we'll actually do peer-to-peer replication to fill in the holes but you know you we act back",
    "start": "1380640",
    "end": "1388799"
  },
  {
    "text": "as soon as we get four acts back from the instance so so it's significantly more efficient",
    "start": "1388799",
    "end": "1395360"
  },
  {
    "text": "and it's significantly more tolerant of latency outliers",
    "start": "1395360",
    "end": "1402480"
  },
  {
    "start": "1402000",
    "end": "1506000"
  },
  {
    "text": "the reason four out of six is that we basically want to be able to lose two",
    "start": "1403440",
    "end": "1409919"
  },
  {
    "text": "copies of data or a z without impacting either reads or writes",
    "start": "1409919",
    "end": "1415039"
  },
  {
    "text": "and so and the reason for 10 gigabyte segments is much the same so if you think about it what we do is",
    "start": "1415039",
    "end": "1421279"
  },
  {
    "text": "we actually spread your data pretty widely so you know we have some large number of",
    "start": "1421279",
    "end": "1426799"
  },
  {
    "text": "nodes think in the thousands right each one with a fair number of disks on it and",
    "start": "1426799",
    "end": "1432400"
  },
  {
    "text": "what we're trying to do there is is that if we lose a node or we lose a disk we",
    "start": "1432400",
    "end": "1438320"
  },
  {
    "text": "basically need to replicate 10 gigs of data across a 10 gig network and so you know as you can do the math",
    "start": "1438320",
    "end": "1444960"
  },
  {
    "text": "on what the minimum of that is that's the second uh you assume that maybe that's uh",
    "start": "1444960",
    "end": "1450640"
  },
  {
    "text": "a few single digit seconds in order to get that thing replicated overall will automatically detect replicate and",
    "start": "1450640",
    "end": "1457200"
  },
  {
    "text": "repair in the background so that helps a great deal",
    "start": "1457200",
    "end": "1463279"
  },
  {
    "text": "one of the reasons why we need to have a lot of copies is that when you look at sort of the",
    "start": "1463279",
    "end": "1470080"
  },
  {
    "text": "you know formal papers around this stuff you know they basically treat failures as decorated",
    "start": "1470080",
    "end": "1475279"
  },
  {
    "text": "but they're not right um if you lose an a-z you've lost a lot of copies of data",
    "start": "1475279",
    "end": "1481200"
  },
  {
    "text": "right and you in particular if you have a large fleet the way we do you will end",
    "start": "1481200",
    "end": "1488080"
  },
  {
    "text": "up with a situation where some small subset of it you know point one percent something like that",
    "start": "1488080",
    "end": "1493279"
  },
  {
    "text": "has a version down for that brief period and uh then you suddenly have multiple",
    "start": "1493279",
    "end": "1499520"
  },
  {
    "text": "copies down right so you need to replicate in order to deal with that um",
    "start": "1499520",
    "end": "1506480"
  },
  {
    "start": "1506000",
    "end": "1663000"
  },
  {
    "text": "instant crash recovery so that's uh kind of a strange statement for anyone who's worked with databases for a while so if",
    "start": "1507360",
    "end": "1515039"
  },
  {
    "text": "as you'll you know anyone who's worked with databases for a while will know that look you write the log you can commit once",
    "start": "1515039",
    "end": "1520960"
  },
  {
    "text": "the logs out to disk and persistent data pages sit in the cache every so often we sweep all of the data pages out",
    "start": "1520960",
    "end": "1527440"
  },
  {
    "text": "to disk typically that's about a five minute interval if you have a crash you've got basically five minutes of",
    "start": "1527440",
    "end": "1534000"
  },
  {
    "text": "data that you might have to reapply log records to to get to a present version of data that you can read",
    "start": "1534000",
    "end": "1539360"
  },
  {
    "text": "right problem in my sql is is that that's running in a single thread and it's running against a cold",
    "start": "1539360",
    "end": "1545840"
  },
  {
    "text": "cache and you know single thread versus you know whatever 32 threads 64 threads a thousand threads depending",
    "start": "1545840",
    "end": "1552559"
  },
  {
    "text": "on the application um you know that's going to be you know anywhere from immediate to an hour right",
    "start": "1552559",
    "end": "1560240"
  },
  {
    "text": "so it's hard to manage and i'm sure you know many of the people in the room have waited a long time for an unexpected",
    "start": "1560240",
    "end": "1565840"
  },
  {
    "text": "crash to come back so one of the advantages of the fact that aurora's log structured and redo",
    "start": "1565840",
    "end": "1573039"
  },
  {
    "text": "log structured more to the point is is that we basically end up with segmenting that redo log in each of",
    "start": "1573039",
    "end": "1579120"
  },
  {
    "text": "these 10 gig segments that are out there and in our version",
    "start": "1579120",
    "end": "1584799"
  },
  {
    "text": "the rights are not destructive we have a more of a garbage collection kind of model and so",
    "start": "1584799",
    "end": "1590960"
  },
  {
    "text": "we write the log at some later point in the background we basically coalesce that log into a data page that",
    "start": "1590960",
    "end": "1597039"
  },
  {
    "text": "happens in the background as we have space so we can sort of defer that activity from the foreground right so we can deal",
    "start": "1597039",
    "end": "1602880"
  },
  {
    "text": "with peaks and valleys and when you read the block our responsibility is to make sure you're",
    "start": "1602880",
    "end": "1608720"
  },
  {
    "text": "getting the current version so we apply the log records that are necessary to give you the current version right typically recently modified data is",
    "start": "1608720",
    "end": "1615840"
  },
  {
    "text": "sitting in cache so we'll catch up right pretty easily after a crash that's more of a problem",
    "start": "1615840",
    "end": "1622640"
  },
  {
    "text": "but in this case since the log is distributed across all these nodes it's parallel",
    "start": "1622640",
    "end": "1627760"
  },
  {
    "text": "it's distributed more to the point it's asynchronous we don't have to wait for that log application to happen before we",
    "start": "1627760",
    "end": "1634480"
  },
  {
    "text": "can come up we can just apply the we can just read the pages and",
    "start": "1634480",
    "end": "1639679"
  },
  {
    "text": "read the pages in exactly the same manner as we do during a regular read which is",
    "start": "1639679",
    "end": "1644960"
  },
  {
    "text": "incredibly important when you're working on the database you want the recovery path to look exactly like the",
    "start": "1644960",
    "end": "1650640"
  },
  {
    "text": "normal read or write path because you know the recovery path needs to be i mean",
    "start": "1650640",
    "end": "1656480"
  },
  {
    "text": "it's your backstop for from a testability perspective so the fact that it's the same makes a big difference",
    "start": "1656480",
    "end": "1663200"
  },
  {
    "start": "1663000",
    "end": "1700000"
  },
  {
    "text": "caches themselves are survivable we move them out of the process so that means that let's say you have a",
    "start": "1664399",
    "end": "1670159"
  },
  {
    "text": "application deadlock you can you know shut down your database restart it the cache is still warm",
    "start": "1670159",
    "end": "1676399"
  },
  {
    "text": "and you know for any of you who have had to do prevent traffic onto your database until",
    "start": "1676399",
    "end": "1681600"
  },
  {
    "text": "the cache is warm this is a big deal right because uh especially as the caches get bigger",
    "start": "1681600",
    "end": "1687919"
  },
  {
    "text": "you know 244 on our largest instance now you know someday it'll be bigger than that you know that can take a while so that",
    "start": "1687919",
    "end": "1695760"
  },
  {
    "text": "helps particularly in combination with instant crash recovery",
    "start": "1695760",
    "end": "1701279"
  },
  {
    "start": "1700000",
    "end": "1830000"
  },
  {
    "text": "um multiple failover targets without data loss that's also interesting so um we talked",
    "start": "1701279",
    "end": "1708480"
  },
  {
    "text": "about how um multi-az works for rds where it's basically the synchronous copy",
    "start": "1708480",
    "end": "1715279"
  },
  {
    "text": "and let's say you instead wanted to use a read replica as you know so you're basically applying",
    "start": "1715279",
    "end": "1721360"
  },
  {
    "text": "bin logs onto the replica copy so if you have 70 right traffic on the master node you're",
    "start": "1721360",
    "end": "1727039"
  },
  {
    "text": "going to have 70 right traffic on the replica right there's nowhere around it double the volume storage as well",
    "start": "1727039",
    "end": "1734639"
  },
  {
    "text": "even worse that application is single threaded so you're generating that traffic across",
    "start": "1735840",
    "end": "1742399"
  },
  {
    "text": "an arbitrary number of cores or whatever 32 cores let's say in are in our versions and it's going to get",
    "start": "1742399",
    "end": "1749440"
  },
  {
    "text": "applied on one core by one thread so it's pretty harsh um",
    "start": "1749440",
    "end": "1754720"
  },
  {
    "text": "but aurora storage is multi-az and so we write to you know write log records",
    "start": "1754720",
    "end": "1761120"
  },
  {
    "text": "to that the replica has access to that self-same multi-ac storage",
    "start": "1761120",
    "end": "1766399"
  },
  {
    "text": "so it doesn't have to do any right it's only going to be doing reads and we have to do some bookkeeping in",
    "start": "1766399",
    "end": "1772320"
  },
  {
    "text": "the background because it's running behind a little bit so we need to make sure that we aren't garbage collecting any data and before",
    "start": "1772320",
    "end": "1778960"
  },
  {
    "text": "it you know all the replicas have advanced their point and we have to also send the same log",
    "start": "1778960",
    "end": "1784880"
  },
  {
    "text": "records over to the replicas so that we can apply them so that the caches uh are updated and so what that ends up",
    "start": "1784880",
    "end": "1791360"
  },
  {
    "text": "meaning is is that you know there's no log replay for one um you can we we tend to get like",
    "start": "1791360",
    "end": "1798159"
  },
  {
    "text": "10 millisecond replica line uh which is uh we'll see what the numbers are in a little bit and the main thing that we",
    "start": "1798159",
    "end": "1805600"
  },
  {
    "text": "were excited by is is that you rather than having a cold standby you have a hot standby you can use it for reads so",
    "start": "1805600",
    "end": "1810880"
  },
  {
    "text": "it actually carries value and if you fail over to it there's no data loss because the",
    "start": "1810880",
    "end": "1815919"
  },
  {
    "text": "the commit that happened happened to the data volume right it didn't happen to uh you aren't running an async model or",
    "start": "1815919",
    "end": "1823600"
  },
  {
    "text": "you know some some of those crazy semi-sync models that are available elsewhere",
    "start": "1823600",
    "end": "1829440"
  },
  {
    "text": "um you can prove this out for yourself by running some sql commands this is the only features we've added to the overall",
    "start": "1829440",
    "end": "1836320"
  },
  {
    "start": "1830000",
    "end": "1856000"
  },
  {
    "text": "surface area of the product to allow you to crash the system or simulate some number of failures or",
    "start": "1836320",
    "end": "1842159"
  },
  {
    "text": "you know simulate an az failure so on right so that lets you sort of validate for",
    "start": "1842159",
    "end": "1847840"
  },
  {
    "text": "yourselves that things work and you can sort of are getting the response and the latency and",
    "start": "1847840",
    "end": "1853279"
  },
  {
    "text": "all the rest of it that you kind of expect let's talk about performance a little",
    "start": "1853279",
    "end": "1860720"
  },
  {
    "start": "1856000",
    "end": "1865000"
  },
  {
    "text": "bit these are just going to be some viewpoints into things um so",
    "start": "1860720",
    "end": "1867360"
  },
  {
    "text": "these are the same slides i showed at re invent so this is an r38xl with 32 cores 244 gigs of ram running my sequel",
    "start": "1867360",
    "end": "1874080"
  },
  {
    "text": "sysbench in this case a write only workload with four client machines thousand threads each uh",
    "start": "1874080",
    "end": "1880159"
  },
  {
    "text": "running about a hundred thousand dml operations uh that would be an insert update or delete",
    "start": "1880159",
    "end": "1886640"
  },
  {
    "text": "uh per second at about what is it point three milliseconds",
    "start": "1886640",
    "end": "1891679"
  },
  {
    "text": "average latency now if you were running on a smaller instance type you're not going to see",
    "start": "1891679",
    "end": "1897519"
  },
  {
    "text": "the same degree of benefit right because the issue that's happening that where what we're solving for here is is",
    "start": "1897519",
    "end": "1904000"
  },
  {
    "text": "that on large hardware mysql currently is able to isn't able to take advantage of all of",
    "start": "1904000",
    "end": "1910399"
  },
  {
    "text": "it due to internal locking if you're running on a much smaller piece of hardware it probably can use",
    "start": "1910399",
    "end": "1915679"
  },
  {
    "text": "all of the machine and we're not going to have nearly the same kind of benefit of from a performance perspective all the",
    "start": "1915679",
    "end": "1921760"
  },
  {
    "text": "availability stuff carries of course right but it does give you headroom to",
    "start": "1921760",
    "end": "1927519"
  },
  {
    "text": "grow excuse me read performance in this case",
    "start": "1927519",
    "end": "1934399"
  },
  {
    "text": "a little over 500 selects per second these are fully cached in the results that cache uh",
    "start": "1934399",
    "end": "1941760"
  },
  {
    "text": "94 cpu nothing super interesting here read replica lag this is uh we're",
    "start": "1941760",
    "end": "1949200"
  },
  {
    "text": "running uh just under 14 000 uh dml statements per second seven milliseconds lag on the replica",
    "start": "1949200",
    "end": "1955840"
  },
  {
    "text": "and another a z um i think this one we did uh three replicas and",
    "start": "1955840",
    "end": "1960880"
  },
  {
    "text": "uh one in each of the other acs my sql 56 on the same hardware has a two second lag at 2k",
    "start": "1960880",
    "end": "1966640"
  },
  {
    "text": "updates per second if you run more than 2k updates per second it starts to fall behind sort of",
    "start": "1966640",
    "end": "1973279"
  },
  {
    "text": "and continue to fall behind i'm sure all of you have seen that um you know so benchmarks are only",
    "start": "1973279",
    "end": "1980559"
  },
  {
    "text": "useful for you know so much right i mean we all sort of want to show benchmarks and pound our chests but you know it doesn't",
    "start": "1980559",
    "end": "1987120"
  },
  {
    "text": "really matter so we've been getting a lot of benefit from people in the preview running their",
    "start": "1987120",
    "end": "1992559"
  },
  {
    "text": "workloads i mean databases have an enormous surface area people use them in lots of interesting",
    "start": "1992559",
    "end": "1997600"
  },
  {
    "text": "ways we've also been working on other areas that we know or have been areas of problems in mysql so for",
    "start": "1997600",
    "end": "2005600"
  },
  {
    "text": "example it doesn't scale well as you grow number of tables so in our case we",
    "start": "2005600",
    "end": "2010640"
  },
  {
    "text": "we're running relatively linear my sequel whether you're looking at local ssd ram disk or you",
    "start": "2010640",
    "end": "2016960"
  },
  {
    "text": "know an outrageous number of pi ops on a single lazy machine you know it starts to degrade",
    "start": "2016960",
    "end": "2025440"
  },
  {
    "text": "if you grow connections you see that our throughput is going up um if you",
    "start": "2026399",
    "end": "2032320"
  },
  {
    "text": "look at rds it's sort of a multi mysql it uh starts to go up and then starts to fall",
    "start": "2032320",
    "end": "2038000"
  },
  {
    "text": "down uh again a caveat on performance is that here we've been",
    "start": "2038000",
    "end": "2043519"
  },
  {
    "text": "talking about throughput all the way along right i mean if you run a single sql statement you're not going to see much of a difference right we",
    "start": "2043519",
    "end": "2049520"
  },
  {
    "text": "haven't changed the work in that area as yet the results that cache works you know",
    "start": "2049520",
    "end": "2056320"
  },
  {
    "start": "2052000",
    "end": "2107000"
  },
  {
    "text": "you can turn on the results that cache it improves these numbers are a little stale the 50 50 workload",
    "start": "2056320",
    "end": "2061919"
  },
  {
    "text": "actually improves as well so whereas in mysql they've actually turned",
    "start": "2061919",
    "end": "2068720"
  },
  {
    "text": "off by default the results that cache because it actually hinders performance even in a",
    "start": "2068720",
    "end": "2073919"
  },
  {
    "text": "pure read workload and the reason we care so much about result set caching is that we view it as",
    "start": "2073919",
    "end": "2080560"
  },
  {
    "text": "a fairly significant simplifier for our customers because what do you do if you don't have a result set cache you front end your",
    "start": "2080560",
    "end": "2086800"
  },
  {
    "text": "database with a bunch of memcached nodes and then you take responsibility for having to deal with the invalidation",
    "start": "2086800",
    "end": "2093200"
  },
  {
    "text": "and you know it's hard to deal with the invalidation because now you have to sort of single source all of that right and if",
    "start": "2093200",
    "end": "2099200"
  },
  {
    "text": "you have multiple clients that's hard the database knows the implications of a",
    "start": "2099200",
    "end": "2105839"
  },
  {
    "text": "change uh replicas have just",
    "start": "2105839",
    "end": "2111599"
  },
  {
    "text": "like much you know crazy less lag right single digit milliseconds",
    "start": "2111599",
    "end": "2118240"
  },
  {
    "text": "my sequel goes anywhere from half a second up to 300 on 10 000 updates per second and that",
    "start": "2119119",
    "end": "2126000"
  },
  {
    "text": "number would just keep going up actually if i measured it for longer",
    "start": "2126000",
    "end": "2132079"
  },
  {
    "start": "2131000",
    "end": "2150000"
  },
  {
    "text": "uh so that's really what i had to sort of just cover as i said we were just sort of flashing by on it",
    "start": "2132160",
    "end": "2138720"
  },
  {
    "text": "if you have questions on anything happy to answer them as best we can",
    "start": "2138720",
    "end": "2145839"
  },
  {
    "start": "2150000",
    "end": "2201000"
  },
  {
    "text": "i'll repeat the question so the uh the question was do we have any intention on supporting",
    "start": "2150880",
    "end": "2157760"
  },
  {
    "text": "engines other than my sequel oh other storage engines",
    "start": "2157760",
    "end": "2164960"
  },
  {
    "text": "uh unfortunately it's i don't think so not at this time",
    "start": "2165280",
    "end": "2170960"
  },
  {
    "text": "the problem is is that they're all inconsistent with each other in terms of their semantics and so it's it's pretty difficult to support them",
    "start": "2170960",
    "end": "2178480"
  },
  {
    "text": "more than one without well i'll just say it's pretty difficult to support more than one there",
    "start": "2178480",
    "end": "2184640"
  },
  {
    "text": "we've gone within odb right now i mean obviously we listen to our customer base and so",
    "start": "2184640",
    "end": "2189760"
  },
  {
    "text": "if it turns out that there's significant demand for it uh you know we'll take a hard look but",
    "start": "2189760",
    "end": "2196320"
  },
  {
    "text": "it's uh at least maya simon in particular is challenging",
    "start": "2196320",
    "end": "2201839"
  },
  {
    "start": "2201000",
    "end": "2269000"
  },
  {
    "text": "did you guys write this source code this thing from scratch or did you take pieces of other storage engines",
    "start": "2202160",
    "end": "2207839"
  },
  {
    "text": "and assemble it so the underlying multi-tenant scale out storage uh",
    "start": "2207839",
    "end": "2213920"
  },
  {
    "text": "system is from scratch uh you know it's a whole new service the control plane for",
    "start": "2213920",
    "end": "2219440"
  },
  {
    "text": "that is from scratch rds is rds it's been changed to support the new storage",
    "start": "2219440",
    "end": "2225839"
  },
  {
    "text": "so at least like the multi-az kind of aspects haven't changed that much which is a good thing on the database uh code base",
    "start": "2225839",
    "end": "2234880"
  },
  {
    "text": "we've changed i don't know maybe 20 25 of it we're you know we're reluctant to change",
    "start": "2234880",
    "end": "2241520"
  },
  {
    "text": "a lot of it just because we want to stay uh um basically surface area compatible",
    "start": "2241520",
    "end": "2247280"
  },
  {
    "text": "entirely um and of course that means that you know we want to do that into the future as well as best so you said you changed",
    "start": "2247280",
    "end": "2253040"
  },
  {
    "text": "20 25 relative to what relative i mean lines of code in the basis but starting from what from five six to",
    "start": "2253040",
    "end": "2260720"
  },
  {
    "text": "ten something like that no i mean from my sequel or from my sister yeah okay correct yes so",
    "start": "2260720",
    "end": "2270480"
  },
  {
    "start": "2269000",
    "end": "2362000"
  },
  {
    "text": "if we have a mysql database in the production mode what is it involved to uh transform to",
    "start": "2270480",
    "end": "2277839"
  },
  {
    "text": "uh you know uh so the question uh so i guess you're on speaker i have to",
    "start": "2277839",
    "end": "2284480"
  },
  {
    "text": "repeat so are you talking about an rds instance or a non-rds instance non-rds",
    "start": "2284480",
    "end": "2292720"
  },
  {
    "text": "so as of this point in time what you would have to do is move it migrate it over to rds there's",
    "start": "2292720",
    "end": "2298960"
  },
  {
    "text": "sort of standard models for that and then we have a model for binary conversion of the underlying ebs volume",
    "start": "2298960",
    "end": "2306079"
  },
  {
    "text": "into aurora storage which runs fairly fast one of the things that i",
    "start": "2306079",
    "end": "2312480"
  },
  {
    "text": "would love to do is basically point to basically arbitrary ebs volume or s3 volume and be able to",
    "start": "2312480",
    "end": "2320960"
  },
  {
    "text": "convert it myself assuming you're starting from a 5 6 instance um",
    "start": "2320960",
    "end": "2326320"
  },
  {
    "text": "don't have that yet so so what how much of a change will it do to the",
    "start": "2326320",
    "end": "2331440"
  },
  {
    "text": "application layer uh how much of a change should i anticipate for the application layer",
    "start": "2331440",
    "end": "2338160"
  },
  {
    "text": "um so our goal is for you to be able to run your application unchanged",
    "start": "2338160",
    "end": "2344720"
  },
  {
    "text": "and uh unchanged as it is in case of underlying mysql yeah mysql assuming",
    "start": "2344720",
    "end": "2350480"
  },
  {
    "text": "you're running my sql 56 in if you're running five one five five you",
    "start": "2350480",
    "end": "2355680"
  },
  {
    "text": "know yeah okay thanks",
    "start": "2355680",
    "end": "2361359"
  },
  {
    "start": "2362000",
    "end": "2482000"
  },
  {
    "text": "what is aurora's performance against some of the known sequel bottlenecks application developer",
    "start": "2362560",
    "end": "2368400"
  },
  {
    "text": "bottlenecks like joining you know huge numbers of tables or",
    "start": "2368400",
    "end": "2373599"
  },
  {
    "text": "creating views so view creation should look pretty much",
    "start": "2373599",
    "end": "2379839"
  },
  {
    "text": "the same as vanilla my sequel but i'm not i'm not looking for the same i'm looking for like much faster",
    "start": "2379839",
    "end": "2386000"
  },
  {
    "text": "of course yeah i'm just not telling you where it is and with the joins in particular yeah so yeah so we haven't done",
    "start": "2386000",
    "end": "2394000"
  },
  {
    "text": "meaningful changes to the query optimizer as yet in this version so i think the first",
    "start": "2394000",
    "end": "2400480"
  },
  {
    "text": "step towards making query optimization work you know far better in a mysql-based",
    "start": "2400480",
    "end": "2406160"
  },
  {
    "text": "system is to start moving towards hash joining and you know sort of you know commonplace statistics",
    "start": "2406160",
    "end": "2411839"
  },
  {
    "text": "and so forth and at that point you can start to do join orders in a proper way um so you know that's work that is not",
    "start": "2411839",
    "end": "2418720"
  },
  {
    "text": "in our first version and in part it's one of the rationale behind that is we wanted to work on",
    "start": "2418720",
    "end": "2424720"
  },
  {
    "text": "things that we could say like look this is dominates my sequel and the problem with changing that in uh query optimizers is that you can",
    "start": "2424720",
    "end": "2432240"
  },
  {
    "text": "be better for 99 of queries and there'll be certainly a percent that you are worse at",
    "start": "2432240",
    "end": "2437359"
  },
  {
    "text": "and so we didn't want to do that in an initial release are you planning on doing any extensions",
    "start": "2437359",
    "end": "2443920"
  },
  {
    "text": "that address some of these issues like materialized views so i would like to i plan to",
    "start": "2443920",
    "end": "2451599"
  },
  {
    "text": "at least in the near term future do changes that are that do manipulations below the",
    "start": "2451599",
    "end": "2459280"
  },
  {
    "text": "surface of the product so materialized views in particular if they require a change to sql",
    "start": "2459280",
    "end": "2464960"
  },
  {
    "text": "semantics like introduction of a new sql statement i'd probably be this time reluctant to",
    "start": "2464960",
    "end": "2470720"
  },
  {
    "text": "provide it if um you know but query optimization you know is fair game from my",
    "start": "2470720",
    "end": "2475920"
  },
  {
    "text": "perspective right because it isn't changing surface area yeah okay",
    "start": "2475920",
    "end": "2481838"
  },
  {
    "start": "2482000",
    "end": "2551000"
  },
  {
    "text": "all right you mentioned uh maria debbie and five six and then you said five six to",
    "start": "2482240",
    "end": "2487680"
  },
  {
    "text": "ten uh for future compatibility are you tracking",
    "start": "2487680",
    "end": "2493280"
  },
  {
    "text": "uh ready to be or my school uh at this point we're tracking my sequel",
    "start": "2493280",
    "end": "2498960"
  },
  {
    "text": "but when you mention 10 years speaking of being ready to be i i hate making statements about the",
    "start": "2498960",
    "end": "2504400"
  },
  {
    "text": "future okay and uh um can you sort millions of rows",
    "start": "2504400",
    "end": "2510480"
  },
  {
    "text": "i'm sorry can you sort millions of rows um that again is not meaningfully",
    "start": "2510480",
    "end": "2517599"
  },
  {
    "text": "different than my sequel the primary difference there is is that",
    "start": "2517599",
    "end": "2523920"
  },
  {
    "text": "what we have observed in admittedly limited testing is that if we are operating outside the",
    "start": "2523920",
    "end": "2531359"
  },
  {
    "text": "buffer cache data set that we get pretty significant performance improvements over vanilla",
    "start": "2531359",
    "end": "2538000"
  },
  {
    "text": "mysql as you'd expect inside if you're operating inside the",
    "start": "2538000",
    "end": "2544319"
  },
  {
    "text": "space of you know something that is fully cached on a small instance type it's not meaningfully different",
    "start": "2544319",
    "end": "2551838"
  },
  {
    "start": "2551000",
    "end": "2611000"
  },
  {
    "text": "do you have any available tools or planning to build any tools to move from",
    "start": "2552319",
    "end": "2558160"
  },
  {
    "text": "the different data multiple relational databases to aurora i mean like oracle or sql server",
    "start": "2558160",
    "end": "2564160"
  },
  {
    "text": "um we have heard that request in the past",
    "start": "2564160",
    "end": "2570560"
  },
  {
    "text": "and you know we're very customer-centric and you know we've be operating on it i can't really",
    "start": "2570560",
    "end": "2576000"
  },
  {
    "text": "comment on future things uh in the public forum so is there any",
    "start": "2576000",
    "end": "2581760"
  },
  {
    "text": "possibility to migrate the sql server to aura i mean like with the application code changes uh we have had uh customers do so",
    "start": "2581760",
    "end": "2589680"
  },
  {
    "text": "and uh so yeah inside our preview itself you want to talk to that at all yeah so we've seen a couple of sql",
    "start": "2589680",
    "end": "2595839"
  },
  {
    "text": "server customers actually move their applications to aurora it does require some",
    "start": "2595839",
    "end": "2601280"
  },
  {
    "text": "application redesign and changes right so there's different things they're doing with the schema changing some of the sql that aren't that's different between the",
    "start": "2601280",
    "end": "2607599"
  },
  {
    "text": "two but it's definitely something that we've seen done how do you handle the hotspots",
    "start": "2607599",
    "end": "2613760"
  },
  {
    "start": "2611000",
    "end": "2723000"
  },
  {
    "text": "i mean uh i know our i mean like the concurrent users connecting to the database and trying to insert a data",
    "start": "2613760",
    "end": "2619920"
  },
  {
    "text": "axing the same page how do you handle i'm like i see this problem with most of the oltp databases",
    "start": "2619920",
    "end": "2625760"
  },
  {
    "text": "but how it has been handled in aurora um it really depends on the problem",
    "start": "2625760",
    "end": "2632640"
  },
  {
    "text": "per se so one big difference in aurora is that we do thread pulling so if you want to run a",
    "start": "2632640",
    "end": "2639440"
  },
  {
    "text": "thousand connections you can't have a thousand threads right you're gonna you're underlying um you know",
    "start": "2639440",
    "end": "2646400"
  },
  {
    "text": "thread scheduling in the linux kernel is just going to get expensive so you know we do thread",
    "start": "2646400",
    "end": "2652560"
  },
  {
    "text": "pooling we do some interesting innovations around thread pooling so you know we can make more the threads",
    "start": "2652560",
    "end": "2658480"
  },
  {
    "text": "more typically available for user traffic than what you know",
    "start": "2658480",
    "end": "2663599"
  },
  {
    "text": "would be is there and sort of other thread pooling approaches that have been taken",
    "start": "2663599",
    "end": "2671040"
  },
  {
    "text": "then let's see other things that form issues in my sequel so my sequel if you're if",
    "start": "2671119",
    "end": "2678079"
  },
  {
    "text": "you take do a split on the b tree it ends up taking a overall lock on the overall system which",
    "start": "2678079",
    "end": "2683920"
  },
  {
    "text": "prevents reads from happening we don't have that contention at that point by",
    "start": "2683920",
    "end": "2689119"
  },
  {
    "text": "implementing b tree crabbing which is sort of a standard technique in other systems",
    "start": "2689119",
    "end": "2694400"
  },
  {
    "text": "the caches are a lot less hot simply because you know we don't actually have to do rights for checkpointing we just",
    "start": "2694400",
    "end": "2699760"
  },
  {
    "text": "can throw away old blocks if we want to um you know they're they're changes all",
    "start": "2699760",
    "end": "2705839"
  },
  {
    "text": "over but uh i can't promise i've hit all of them uh i can only say that you know like we're",
    "start": "2705839",
    "end": "2711040"
  },
  {
    "text": "super interested in performance and uh you know we look at stocks uh every day",
    "start": "2711040",
    "end": "2717119"
  },
  {
    "text": "and you know if you've got a particular workload we'd love to uh you know run it and see what's hot",
    "start": "2717119",
    "end": "2724400"
  },
  {
    "start": "2723000",
    "end": "2933000"
  },
  {
    "text": "i have a question regarding one of your slides explaining aurora recover",
    "start": "2724400",
    "end": "2733200"
  },
  {
    "text": "uh from the re we do log right that's asynchronous right so so that means uh uh the redo log will",
    "start": "2733200",
    "end": "2741920"
  },
  {
    "text": "be chopped uh into pieces right from the last checkpoint",
    "start": "2741920",
    "end": "2748960"
  },
  {
    "text": "uh not exactly and then and then uh with that when they apply a",
    "start": "2748960",
    "end": "2754440"
  },
  {
    "text": "synchronously and at the same time parallel right it speed up",
    "start": "2754440",
    "end": "2759680"
  },
  {
    "text": "but how do you resolve the uh some of the query right they have the dependency",
    "start": "2759680",
    "end": "2767280"
  },
  {
    "text": "agree going to the same table update to the same table and then however the time sequence is",
    "start": "2767280",
    "end": "2774079"
  },
  {
    "text": "different when there's we do log that chart into pieces and probably uh there is a supposedly",
    "start": "2774079",
    "end": "2782560"
  },
  {
    "text": "later update should go later right it could be update earlier yeah",
    "start": "2782560",
    "end": "2790319"
  },
  {
    "text": "how do you resolve that problem so the basic way you should think about it is um let",
    "start": "2790319",
    "end": "2796960"
  },
  {
    "text": "me simplify the problem for a second so i think we've all done some form of",
    "start": "2796960",
    "end": "2803359"
  },
  {
    "text": "segmentation of a volume into a bunch of disks right through you know some form of",
    "start": "2803359",
    "end": "2811440"
  },
  {
    "text": "striping and mirroring right and so you could in you know in a simple-minded way think",
    "start": "2811440",
    "end": "2817119"
  },
  {
    "text": "of aurora as doing a big stripe and mirror it's not really that because it's much more dynamic but",
    "start": "2817119",
    "end": "2822960"
  },
  {
    "text": "let's assume that so then what's happening is is that the log records are going to the portion of the stripe",
    "start": "2822960",
    "end": "2829359"
  },
  {
    "text": "set that they're relevant to so if block a has change a prime on it",
    "start": "2829359",
    "end": "2834800"
  },
  {
    "text": "then the log record for that is going to uh you know segment a if block b is going to segment b the",
    "start": "2834800",
    "end": "2841760"
  },
  {
    "text": "log records for b are going to segment b right so that's how it's separated out now the over so in",
    "start": "2841760",
    "end": "2849040"
  },
  {
    "text": "databases we talk about uh log sequence numbers right and so that's sequentializes all of the changes that",
    "start": "2849040",
    "end": "2856079"
  },
  {
    "text": "have happened to the system and so when you issue a query that's against a particular point in time",
    "start": "2856079",
    "end": "2861760"
  },
  {
    "text": "consistency point which is a log sequence number and so what i need to ensure when you",
    "start": "2861760",
    "end": "2866800"
  },
  {
    "text": "ask for that data is that i have well that i'm returning your data as of that",
    "start": "2866800",
    "end": "2873200"
  },
  {
    "text": "point in time minus things that are uncommitted and so what the way my sequel works or most databases work",
    "start": "2873200",
    "end": "2881200"
  },
  {
    "text": "is that we apply redo all the way to the current point in time and then we apply undo to remove the",
    "start": "2881200",
    "end": "2888319"
  },
  {
    "text": "changes that you're not allowed to see as of the point in time you're requesting and so that's the same thing",
    "start": "2888319",
    "end": "2893359"
  },
  {
    "text": "that's happening here it's just that it's happening spread out over many nodes the key underlying thing that is",
    "start": "2893359",
    "end": "2899680"
  },
  {
    "text": "required to make this work relative to a traditional database is that you can't do destructive writes",
    "start": "2899680",
    "end": "2906559"
  },
  {
    "text": "so you if you write a then a prime both copies of that data exist or a and",
    "start": "2906559",
    "end": "2912000"
  },
  {
    "text": "the log record for a exist a prime exist right and so",
    "start": "2912000",
    "end": "2917280"
  },
  {
    "text": "that means that if you need to access the value of a for example if your read replica is running at a prior point in time",
    "start": "2917280",
    "end": "2923920"
  },
  {
    "text": "it's still available does that make any sense sorry i can work it through it with you",
    "start": "2923920",
    "end": "2930160"
  },
  {
    "text": "and afterwards if you'd like uh quick question that is um redshift with",
    "start": "2930160",
    "end": "2936160"
  },
  {
    "start": "2933000",
    "end": "3026000"
  },
  {
    "text": "ridge if you chose to use a postgres interface yes and with aurora you went with my sequence i'm kind of curious why you chose to switch",
    "start": "2936160",
    "end": "2942800"
  },
  {
    "text": "uh so i mean there i think the advantage of a postgres",
    "start": "2942800",
    "end": "2948160"
  },
  {
    "text": "interface for doing something in the",
    "start": "2948160",
    "end": "2954078"
  },
  {
    "text": "data warehousing space is is that it starts with a better query optimizer okay and",
    "start": "2954319",
    "end": "2960880"
  },
  {
    "text": "it's uh so you know and that's really in large part why essentially all of the",
    "start": "2960880",
    "end": "2966240"
  },
  {
    "text": "columnar data warehouses that i can think of have started with postgres there",
    "start": "2966240",
    "end": "2972800"
  },
  {
    "text": "in the case of transaction processing i think what it comes down to",
    "start": "2972800",
    "end": "2978480"
  },
  {
    "text": "is you know i kind of think of the postgres community as sort of oriented towards upper half",
    "start": "2978480",
    "end": "2984960"
  },
  {
    "text": "database stuff you know in terms of optimization and functional improvement and i think of the mysql community is",
    "start": "2984960",
    "end": "2991280"
  },
  {
    "text": "oriented towards lower half concerns around throughput and latency",
    "start": "2991280",
    "end": "2996319"
  },
  {
    "text": "and locking and so forth um your mind your opinion may vary on that",
    "start": "2996319",
    "end": "3002640"
  },
  {
    "text": "right that's fine but uh you know and it's obviously a larger community as well so you know that it seemed like",
    "start": "3002640",
    "end": "3009440"
  },
  {
    "text": "the right thing to do um certainly the number one ask i had at",
    "start": "3009440",
    "end": "3014720"
  },
  {
    "text": "re invent was to provide a postgres version of aurora and you know so we'll see how that goes",
    "start": "3014720",
    "end": "3021040"
  },
  {
    "text": "i mean all features are delayed until we launch well i assume that basically if i wanted to put a postgres",
    "start": "3021040",
    "end": "3027760"
  },
  {
    "start": "3026000",
    "end": "3103000"
  },
  {
    "text": "database up on aurora today i'd basically be doing a postgresql my sql transform",
    "start": "3027760",
    "end": "3033200"
  },
  {
    "text": "i'm sorry say that again if i were going to do a postgres transition over to aurora i'd be basically like going doing",
    "start": "3033200",
    "end": "3039760"
  },
  {
    "text": "a port from postgres to my sequel exactly correct okay yeah i mean and of course there is a big",
    "start": "3039760",
    "end": "3046480"
  },
  {
    "text": "functional gap between the two which you know may or may not work for you yeah short procedures deploy my biggest",
    "start": "3046480",
    "end": "3051599"
  },
  {
    "text": "headache yeah certainly one of them thank you so i'm curious about uh schema",
    "start": "3051599",
    "end": "3058400"
  },
  {
    "text": "changes can i expect that with uh in terms of which which sort of ddl operations block",
    "start": "3058400",
    "end": "3064000"
  },
  {
    "text": "reads and writes that aurora performs the same as sequel five six are there some uh differences there",
    "start": "3064000",
    "end": "3070079"
  },
  {
    "text": "it's largely the same we've done a fair bit of improvements underneath the covers in terms of the contention that",
    "start": "3070079",
    "end": "3077040"
  },
  {
    "text": "occurs on in the b tree now if there's specific uh",
    "start": "3077040",
    "end": "3082720"
  },
  {
    "text": "things that you you know you're encountering and are concerned about you know love to talk with you that's more of an",
    "start": "3082720",
    "end": "3087760"
  },
  {
    "text": "issue of what triggers a table rebuild that actually completely locks the table you know right add column in multiple five five",
    "start": "3087760",
    "end": "3094559"
  },
  {
    "text": "and before used to block and five six it doesn't sound curious yeah so i mean they were similar to five sixteen five yeah",
    "start": "3094559",
    "end": "3099760"
  },
  {
    "text": "yeah exactly great thanks i i wasn't sure if this was answered or",
    "start": "3099760",
    "end": "3105440"
  },
  {
    "start": "3103000",
    "end": "3133000"
  },
  {
    "text": "i was just asked do you guys uh support the memcache plugin for aurora because then you guys have it in rds",
    "start": "3105440",
    "end": "3113040"
  },
  {
    "text": "yeah so in the preview right now it is disabled but it's something that we're going to be enabling okay the goal the goal with aurora is",
    "start": "3113040",
    "end": "3120000"
  },
  {
    "text": "that the things that you see in rds mysql we want to have those things with aurora as well okay so some of them may take a little",
    "start": "3120000",
    "end": "3126559"
  },
  {
    "text": "bit of time like cross region is going to be implemented differently so okay",
    "start": "3126559",
    "end": "3132880"
  },
  {
    "start": "3133000",
    "end": "3250000"
  },
  {
    "text": "uh i'm curious on the importance of s3 in your storage layer so so is the data stored in s3 and then",
    "start": "3133359",
    "end": "3141440"
  },
  {
    "text": "loaded into aurora how does it the pipeline works so the basic pipeline there is is that you let's talk about rights i",
    "start": "3141440",
    "end": "3149760"
  },
  {
    "text": "guess right so you issue a write you generate a log record that log record goes to the appropriate",
    "start": "3149760",
    "end": "3155839"
  },
  {
    "text": "set of segments in a four out of six uh it's available uh there at some point",
    "start": "3155839",
    "end": "3162960"
  },
  {
    "text": "subsequent to that we have to generate a data page at some point subsequent to",
    "start": "3162960",
    "end": "3169280"
  },
  {
    "text": "that we basically take any log pages and data pages that are sort of sitting",
    "start": "3169280",
    "end": "3176240"
  },
  {
    "text": "there that have not been backed up and we push them both we send both logs and data and our the thing that we are striving",
    "start": "3176240",
    "end": "3183680"
  },
  {
    "text": "for is to make sure that we have s3 sort of sweep uh we sweep up to s3",
    "start": "3183680",
    "end": "3189520"
  },
  {
    "text": "within five minutes i think of uh where you know it's been initially the",
    "start": "3189520",
    "end": "3194559"
  },
  {
    "text": "initial write happened and yeah before that you've got this you know so to speak window of",
    "start": "3194559",
    "end": "3199920"
  },
  {
    "text": "vulnerability where you only have six copies of your data as opposed to you know eleven nines of your data uh so",
    "start": "3199920",
    "end": "3205760"
  },
  {
    "text": "you know so it's i mean it's a database we you know it's a transaction database so you actually do want all of that durability there",
    "start": "3205760",
    "end": "3212400"
  },
  {
    "text": "and in our own in you know there's some fancy stuff behind the scenes around being able to actually reduce redundancy",
    "start": "3212400",
    "end": "3219040"
  },
  {
    "text": "if once with the backups there but uh you know that's like so in s3 is that the files in the",
    "start": "3219040",
    "end": "3224960"
  },
  {
    "text": "format where and i can use that s3 files and put it into redshift unfortunately not no okay no it's it's very binary and",
    "start": "3224960",
    "end": "3234240"
  },
  {
    "text": "different well it's it's basically you know sweeping data blocks and log",
    "start": "3234240",
    "end": "3239839"
  },
  {
    "text": "blocks and it's incomprehensible to anything other than uh you know",
    "start": "3239839",
    "end": "3245119"
  },
  {
    "text": "aurora itself oh okay okay thank you interesting feature though uh with this first version of",
    "start": "3245119",
    "end": "3252160"
  },
  {
    "start": "3250000",
    "end": "3291000"
  },
  {
    "text": "aura is there are there any workloads you would not recommend migrating from the existing rds mysql",
    "start": "3252160",
    "end": "3258720"
  },
  {
    "text": "so i would say that um very small instance types right so we",
    "start": "3258720",
    "end": "3264559"
  },
  {
    "text": "start at an r3 large and so certainly if you're running on a small or a micro or something like that",
    "start": "3264559",
    "end": "3271520"
  },
  {
    "text": "there's really i mean it's just going to cost you more right and if you're happy with those instances i",
    "start": "3271520",
    "end": "3276960"
  },
  {
    "text": "think that you know it doesn't make sense to migrate them i think",
    "start": "3276960",
    "end": "3282079"
  },
  {
    "text": "what else would perhaps not make sense",
    "start": "3282079",
    "end": "3287200"
  },
  {
    "text": "maybe on an r3 large if you're fully cached maybe so you're saying it's just based on the",
    "start": "3288240",
    "end": "3293839"
  },
  {
    "start": "3291000",
    "end": "3364000"
  },
  {
    "text": "size of the of the machine other otherwise i mean our intent is certainly",
    "start": "3293839",
    "end": "3299280"
  },
  {
    "text": "preferring more transactions any types of transactions that are would not or pretty much everything and of course you know there was an earlier question",
    "start": "3299280",
    "end": "3305280"
  },
  {
    "text": "about other uh storage engines right so certainly if you're running one of the other storage",
    "start": "3305280",
    "end": "3310400"
  },
  {
    "text": "engines or if you're running my eye salmon are happy then you know that's true there's no way right certainly you've",
    "start": "3310400",
    "end": "3316799"
  },
  {
    "text": "been trying to ask a question for a bit i mean for me when i talk about apps that use my sql",
    "start": "3316799",
    "end": "3323040"
  },
  {
    "text": "usually it's kind of a hodgepodge mix where they say these can be in you know i am led but",
    "start": "3323040",
    "end": "3329680"
  },
  {
    "text": "these are still in my isam and this other thing has to be a memory engine so it's usually a mix",
    "start": "3329680",
    "end": "3334799"
  },
  {
    "text": "so i guess my major question is where do you see this product fitting in the marketplace or what's",
    "start": "3334799",
    "end": "3340160"
  },
  {
    "text": "your vision because looking at your slides it looks like this fits into a classification of",
    "start": "3340160",
    "end": "3346319"
  },
  {
    "text": "web app that",
    "start": "3346319",
    "end": "3348960"
  },
  {
    "text": "so the question was where do we see the product fitting given that it's really talking about large scale",
    "start": "3364799",
    "end": "3370480"
  },
  {
    "text": "and high throughput and the observation was is that when the person asking the",
    "start": "3370480",
    "end": "3377680"
  },
  {
    "text": "question looks at his mysql applications they tend to be a hodgepodge between my isam and nodb",
    "start": "3377680",
    "end": "3384000"
  },
  {
    "text": "and you know the memory resident engine and so forth",
    "start": "3384000",
    "end": "3388799"
  },
  {
    "text": "so i think i see two things there one is we would like very much for people to be",
    "start": "3389440",
    "end": "3395040"
  },
  {
    "text": "able to use um mysql postgres you know those sorts",
    "start": "3395040",
    "end": "3401119"
  },
  {
    "text": "of engines and not be forced into what we view as relatively punitive",
    "start": "3401119",
    "end": "3406720"
  },
  {
    "text": "licensing terms and relationships for larger engines we'd like people to not have to",
    "start": "3406720",
    "end": "3413119"
  },
  {
    "text": "go to extraordinary engineering measures to do things around sharding and around sql generation and transactions",
    "start": "3413119",
    "end": "3420079"
  },
  {
    "text": "to the degree possible we think you know everybody cares about",
    "start": "3420079",
    "end": "3426240"
  },
  {
    "text": "availability and security and you know all of those things those aren't you know restricted to just the high end",
    "start": "3426240",
    "end": "3431920"
  },
  {
    "text": "of the market you know and so we think you know those are general purpose needs and you know shouldn't be things that require you",
    "start": "3431920",
    "end": "3438240"
  },
  {
    "text": "know like paying you know first for enterprise edition and then an option or some crazy",
    "start": "3438240",
    "end": "3444000"
  },
  {
    "text": "thing like that right so you know people for people to want security uh so or encryption if you will right",
    "start": "3444000",
    "end": "3451680"
  },
  {
    "text": "um so i do think that there is a low",
    "start": "3451680",
    "end": "3458319"
  },
  {
    "text": "end of the mysql market which is going to perhaps be best served by",
    "start": "3458319",
    "end": "3466480"
  },
  {
    "text": "you know the existing mysql community you know people still want management around that it's uh you know certainly would be our",
    "start": "3466640",
    "end": "3473359"
  },
  {
    "text": "desire over time to be able to support that community as well at bringing down our instance types you know our focus to start with was",
    "start": "3473359",
    "end": "3480799"
  },
  {
    "text": "that we saw this need for where people ran out of gas and then had to you know do strange",
    "start": "3480799",
    "end": "3486000"
  },
  {
    "text": "things to their applications we wanted to handle that and we do see a lot of opportunities in",
    "start": "3486000",
    "end": "3491839"
  },
  {
    "text": "the future to move more towards the so our architecture than a service-oriented",
    "start": "3491839",
    "end": "3498240"
  },
  {
    "text": "architecture than we have to date right right now we've really taken the first step which is to do storage",
    "start": "3498240",
    "end": "3503440"
  },
  {
    "text": "and you can imagine doing things like caching and sql and like blobs and you know like all sorts",
    "start": "3503440",
    "end": "3508960"
  },
  {
    "text": "of stuff",
    "start": "3508960",
    "end": "3517838"
  },
  {
    "start": "3519000",
    "end": "3563000"
  },
  {
    "text": "uh if your primary issue so the question was if is it is it that you move to this when you run",
    "start": "3520400",
    "end": "3526160"
  },
  {
    "text": "out of gas on rds mysql it's um well it's not so much about rds per se right it's about my sequel",
    "start": "3526160",
    "end": "3534000"
  },
  {
    "text": "yeah well i think you know it's a question of what your whether your primary concern is",
    "start": "3534559",
    "end": "3539599"
  },
  {
    "text": "something like availability or something like performance right if you need availability then you know you need",
    "start": "3539599",
    "end": "3545040"
  },
  {
    "text": "availability and having your data replicated many ways and all of that is a big benefit",
    "start": "3545040",
    "end": "3551119"
  },
  {
    "text": "right",
    "start": "3551119",
    "end": "3553359"
  },
  {
    "text": "managing your yeah to make sure they don't have the hodgepodge of engines",
    "start": "3557119",
    "end": "3563920"
  },
  {
    "start": "3563000",
    "end": "3599000"
  },
  {
    "text": "yeah i think that's true but um i i think the hodgepodge of engines is",
    "start": "3564319",
    "end": "3569680"
  },
  {
    "text": "something of a general anti-pattern anyway because it's you know",
    "start": "3569680",
    "end": "3575359"
  },
  {
    "text": "i think you know people use my isam because they have some performance constraints primarily",
    "start": "3575359",
    "end": "3580799"
  },
  {
    "text": "with nodb the memory resident engine for the same reason",
    "start": "3580799",
    "end": "3586319"
  },
  {
    "text": "you know so i think we're trying to eliminate the reasons why people have to make those choices and move towards a simpler model",
    "start": "3586319",
    "end": "3592880"
  },
  {
    "text": "no because the degree to which those different storage engines are",
    "start": "3592880",
    "end": "3598400"
  },
  {
    "text": "inconsistent with each other and for that matter inconsistent with the sql standard is i think a problem not a benefit",
    "start": "3598400",
    "end": "3606000"
  },
  {
    "text": "but if you're going for folks do you guys have comparison charts where",
    "start": "3606000",
    "end": "3611520"
  },
  {
    "text": "you could say",
    "start": "3611520",
    "end": "3615839"
  },
  {
    "text": "hodgepodge that has this thing like sessions as an example very commonly",
    "start": "3619359",
    "end": "3625440"
  },
  {
    "text": "we don't care about you need it in and out as fast as possible because it's a session right um so i mean and",
    "start": "3625520",
    "end": "3632640"
  },
  {
    "text": "and my own example is i've changed that cerebral thing from memory to ion before and the performance was terrible",
    "start": "3632640",
    "end": "3637920"
  },
  {
    "text": "and i had it back i understand would you guys be",
    "start": "3637920",
    "end": "3642960"
  },
  {
    "text": "we haven't done that yet but we should okay we have measured in odb against a ram",
    "start": "3648319",
    "end": "3653760"
  },
  {
    "text": "disk that's a different statement",
    "start": "3653760",
    "end": "3657838"
  },
  {
    "text": "uh briefly to follow up on the my isome question should we assume that you've converted the system tables in the mysql schema to",
    "start": "3660000",
    "end": "3667599"
  },
  {
    "text": "inodb i'm sorry the system tables to in to inodb",
    "start": "3667599",
    "end": "3673520"
  },
  {
    "text": "yes so one of the um big issues in the mysql product is from my perspective",
    "start": "3673520",
    "end": "3681359"
  },
  {
    "text": "is that you know the system well actually catalog generally sits in a file system",
    "start": "3681359",
    "end": "3687599"
  },
  {
    "text": "and doesn't uh have the same point in time characteristics around you know logs you know lsn's as uh",
    "start": "3687599",
    "end": "3694960"
  },
  {
    "text": "the rest of the system and that's you know it makes it really hard to come back to a consistent point in time and so yeah",
    "start": "3694960",
    "end": "3701440"
  },
  {
    "text": "we've pushed those uh into um uh aurora storage so that",
    "start": "3701440",
    "end": "3706720"
  },
  {
    "text": "they're also run against the same consistent point of time as everything else okay and one other question uh",
    "start": "3706720",
    "end": "3713599"
  },
  {
    "text": "one of the limitations of rds traditionally is the size of the redo log file being",
    "start": "3713599",
    "end": "3720319"
  },
  {
    "text": "fixed and not tunable which means you have a limitation in five six on the size of a",
    "start": "3720319",
    "end": "3725839"
  },
  {
    "text": "blob you can insert it kind of freaks out if you try to insert a blob that's more than one-tenth the size of the log file",
    "start": "3725839",
    "end": "3732160"
  },
  {
    "text": "because of the changes in the way you're handling redo log files have you worked around this limitation and is can you put in a long blob for",
    "start": "3732160",
    "end": "3739119"
  },
  {
    "text": "example i believe so i will have to go back and test that particular case for",
    "start": "3739119",
    "end": "3744240"
  },
  {
    "text": "sure but uh you know i i believe so there's no reason architecturally why",
    "start": "3744240",
    "end": "3750160"
  },
  {
    "text": "that should be the case i would say in you know like my you know fever dreams i would like to",
    "start": "3750160",
    "end": "3756000"
  },
  {
    "text": "actually behind the scenes store blobs in s3 and just have you insert them and yeah because why would you want a blob stored",
    "start": "3756000",
    "end": "3762160"
  },
  {
    "text": "in anything except something like s3 except you want it stored transactionally without having to",
    "start": "3762160",
    "end": "3767359"
  },
  {
    "text": "deal with the issues yeah so you can roll back a blob insert exactly right thank you",
    "start": "3767359",
    "end": "3773680"
  },
  {
    "text": "do you support tdf udf udf we support uh",
    "start": "3774000",
    "end": "3780319"
  },
  {
    "text": "you know what's in my sql yeah so the mysql udfs that are existing there we see people in the preview using them too so",
    "start": "3780319",
    "end": "3786720"
  },
  {
    "text": "we can use cell like on library in c c plus plus and how can we install it if there is no so my",
    "start": "3786720",
    "end": "3794480"
  },
  {
    "text": "sql has uh user-defined functions that you can use within uh that are sql based yeah for those we support but not but",
    "start": "3794480",
    "end": "3801200"
  },
  {
    "text": "not c no not not your own language coming in yeah and any plans to support these uh",
    "start": "3801200",
    "end": "3808319"
  },
  {
    "text": "c so it's something that we have heard nothing we can announce here right now but definitely something that we're",
    "start": "3808319",
    "end": "3814160"
  },
  {
    "text": "thinking about the challenge with c or c plus plus is is that you know i mean as you've",
    "start": "3814160",
    "end": "3819359"
  },
  {
    "text": "all seen how many security patches come out of the my sequel community right and if you are running a managed service",
    "start": "3819359",
    "end": "3825760"
  },
  {
    "text": "you know the challenge is that you get out onto the box and now you have access to a pretty broad network right and nobody",
    "start": "3825760",
    "end": "3832160"
  },
  {
    "text": "wants that right that's part of the reason why the aurora storage lives in a completely separate vpc",
    "start": "3832160",
    "end": "3838000"
  },
  {
    "text": "and has off control on it so that you know even if you break out of the box somehow you can't get to that um but you know",
    "start": "3838000",
    "end": "3845440"
  },
  {
    "text": "even so it can be challenging damaging etc right so um i think if and when we look at",
    "start": "3845440",
    "end": "3854240"
  },
  {
    "text": "language-based udfs other than sql it's much more likely that you're going to see something like python that can be containerized rather",
    "start": "3854240",
    "end": "3861039"
  },
  {
    "text": "than c which is you know challenging um in your preview uh what do people do",
    "start": "3861039",
    "end": "3868000"
  },
  {
    "text": "on local do they just run vanilla my sequel and that's good enough or is there are there plans for an aurora",
    "start": "3868000",
    "end": "3873200"
  },
  {
    "text": "local or does it exist um it doesn't exist and it's very hard i mean the whole point of this is to do",
    "start": "3873200",
    "end": "3879039"
  },
  {
    "text": "service-based architecture right so i would think you know my version of aurora local is my sequel okay",
    "start": "3879039",
    "end": "3884079"
  },
  {
    "text": "thanks so we have designed mysql not in rds but",
    "start": "3884079",
    "end": "3891119"
  },
  {
    "text": "my sequel itself a long time ago because of this size and",
    "start": "3891119",
    "end": "3896799"
  },
  {
    "text": "large database limitations we implemented sharding do i need to use sharding in aurora or",
    "start": "3896799",
    "end": "3902880"
  },
  {
    "text": "if i have to migrate oh you certainly can continue to use sharding in aurora it's really just a question of",
    "start": "3902880",
    "end": "3908240"
  },
  {
    "text": "headroom right so what we're trying to do is reduce the point into the future when uh you might need",
    "start": "3908240",
    "end": "3915599"
  },
  {
    "text": "to consider sharding and you know my own personal view is you know maybe it's just that i'm old but a hundred thousand",
    "start": "3915599",
    "end": "3921359"
  },
  {
    "text": "writes per second is a lot of rights you know i remember when the thousand was a big deal so yeah the one of the reason is we have",
    "start": "3921359",
    "end": "3928880"
  },
  {
    "text": "some tables which are two billion rows in the table so that's the reason why we had to shard in my sequel to get the performance but",
    "start": "3928880",
    "end": "3936480"
  },
  {
    "text": "since you aurora you you separated compute layer was from data layer as",
    "start": "3936480",
    "end": "3941520"
  },
  {
    "text": "this space storage layer and does it make sense to even shard if you're sharding for a table size that",
    "start": "3941520",
    "end": "3947839"
  },
  {
    "text": "tends to be a different set of concerns you're exactly right um it depends on the operations that are",
    "start": "3947839",
    "end": "3954240"
  },
  {
    "text": "slow i mean like things like add column or something like that might still be problematic we haven't dealt with those sorts of things but",
    "start": "3954240",
    "end": "3960960"
  },
  {
    "text": "you know it may be worth a separate conversation about which problems you run you caused you to shard thanks",
    "start": "3960960",
    "end": "3967839"
  },
  {
    "text": "one question actually true do you support table compression in unity b",
    "start": "3967839",
    "end": "3976318"
  },
  {
    "text": "so currently in the preview we don't we're actually working on some changes to the preview that's going to be rolled out that will do barracuda",
    "start": "3977039",
    "end": "3983599"
  },
  {
    "text": "format which will have compression i'm not sure what amount of compression is actually going to happen",
    "start": "3983599",
    "end": "3988799"
  },
  {
    "text": "there since the storage underneath is a bit different but you will have the ability to do dynamic row type and compression with",
    "start": "3988799",
    "end": "3994480"
  },
  {
    "text": "barracuda in the future what are you looking for with compression oh simply i we have noticed through testing",
    "start": "3994480",
    "end": "4002240"
  },
  {
    "text": "that enabling enabling compression we increased a lot uh ev writing uh",
    "start": "4002240",
    "end": "4010880"
  },
  {
    "text": "situation on earth yes so probably it's not it's not useful but",
    "start": "4010880",
    "end": "4017200"
  },
  {
    "text": "since it's already configured in our in our system it will require more work to change",
    "start": "4017200",
    "end": "4023680"
  },
  {
    "text": "the second question is regarding delete what we noticed is that if we have to delete a",
    "start": "4023680",
    "end": "4029440"
  },
  {
    "text": "lot of data because simply we keep only the transaction that are actual and the old one goes in the data",
    "start": "4029440",
    "end": "4036160"
  },
  {
    "text": "mining system usually mysql takes a lot of time simply a delete saying",
    "start": "4036160",
    "end": "4041520"
  },
  {
    "text": "from ide 1 to id 100 and it doesn't really empty the table so",
    "start": "4041520",
    "end": "4049440"
  },
  {
    "text": "the space that is used doesn't change this this is a big a big problem but the",
    "start": "4049440",
    "end": "4055440"
  },
  {
    "text": "time that requires the delete and the and it and the table that doesn't shrink",
    "start": "4055440",
    "end": "4061200"
  },
  {
    "text": "did your uh aurora changes this or no in part so part of the issue that you're",
    "start": "4061200",
    "end": "4067520"
  },
  {
    "text": "running into with mysql is something called the purge thread where you know we it basically purges the data in the",
    "start": "4067520",
    "end": "4073760"
  },
  {
    "text": "background and so we have made changes to purge thread",
    "start": "4073760",
    "end": "4078960"
  },
  {
    "text": "because it's a it's a huge point of contention for lots of people what we have not done as yet is really",
    "start": "4078960",
    "end": "4086079"
  },
  {
    "text": "made massive changes to the b3 code you know other than for performance",
    "start": "4086079",
    "end": "4091520"
  },
  {
    "text": "and concurrency and so what you kind of need us to start doing is",
    "start": "4091520",
    "end": "4096960"
  },
  {
    "text": "de-linking pages and making them available and then shrinking the",
    "start": "4096960",
    "end": "4102159"
  },
  {
    "text": "actual volume is yet a harder problem in some sense because databases don't like to give up space",
    "start": "4102159",
    "end": "4107838"
  },
  {
    "text": "and so you know having that available for something else is more is going to happen before having it",
    "start": "4107839",
    "end": "4114560"
  },
  {
    "text": "actually shrink in totality but you know it's definitely you know i think we're going",
    "start": "4114560",
    "end": "4120640"
  },
  {
    "text": "to write down a list of items out of this",
    "start": "4120640",
    "end": "4124238"
  },
  {
    "text": "do you support table partitioning because that it relies on storing the metadata for the",
    "start": "4127359",
    "end": "4132400"
  },
  {
    "text": "partitions in an external dot par file in the just like the dot frm file",
    "start": "4132400",
    "end": "4137440"
  },
  {
    "text": "yeah so the all of the files are actually going into underlying aurora storage but it you",
    "start": "4137440",
    "end": "4143679"
  },
  {
    "text": "know from the perspective of the upper level database it all just looks like file system",
    "start": "4143679",
    "end": "4149440"
  },
  {
    "text": "i mean think of it underneath the covers as we have a blob table for files i mean it's not what it",
    "start": "4149440",
    "end": "4154880"
  },
  {
    "text": "is but you know for all intents and purposes hi uh my concern is uh about how",
    "start": "4154880",
    "end": "4162000"
  },
  {
    "text": "production ready uh the system will be uh when you do go live uh for production workloads i know you guys are",
    "start": "4162000",
    "end": "4168080"
  },
  {
    "text": "you currently do have uh customers in production in the preview is that correct no uh we",
    "start": "4168080",
    "end": "4173838"
  },
  {
    "text": "do although we have told them that they can't yeah i mean it's it's preview right i",
    "start": "4173839",
    "end": "4179600"
  },
  {
    "text": "mean the whole point of preview is to find issues across a lot of things i mean it's uh",
    "start": "4179600",
    "end": "4185120"
  },
  {
    "text": "it's been a pretty long preview and right but since november correct i'm sorry since november correct",
    "start": "4185120",
    "end": "4190719"
  },
  {
    "text": "yes that's right how much longer do you anticipate preview will last um uh well",
    "start": "4190719",
    "end": "4197280"
  },
  {
    "text": "i'd love to have it end in q2 right okay okay and uh so with rds i think there",
    "start": "4197280",
    "end": "4202719"
  },
  {
    "text": "were some issues with um uh it was a failure to either uh switch over to uh promote a new",
    "start": "4202719",
    "end": "4209520"
  },
  {
    "text": "master or something like that i can't remember was a few years ago but um how i guess you know",
    "start": "4209520",
    "end": "4215120"
  },
  {
    "text": "my concern would be you know if we do migrate to something like aurora and you know it's an e-commerce site and",
    "start": "4215120",
    "end": "4220560"
  },
  {
    "text": "i'm you know we're down and we're losing money so um i guess how are you handling things differently",
    "start": "4220560",
    "end": "4226719"
  },
  {
    "text": "to prevent any sort of large scale um issues like that in touch on it yeah so i mean",
    "start": "4226719",
    "end": "4235280"
  },
  {
    "text": "everyone every every sort of llc that occurs we're analyzing what happened with multi-az",
    "start": "4235280",
    "end": "4240480"
  },
  {
    "text": "and so multi-az has been out there for i think almost six plus years now um and so we've been through a few other llc's",
    "start": "4240480",
    "end": "4246719"
  },
  {
    "text": "where multi-az now has been very rock-hard and solid obviously there could be things that could happen and those are things that",
    "start": "4246719",
    "end": "4253360"
  },
  {
    "text": "we'll learn but multi-az code has been very very solid over the past you know probably a year or two um and we also",
    "start": "4253360",
    "end": "4260480"
  },
  {
    "text": "have a dedicated team that does testing on the multi-az code to see okay what if these weird things happen",
    "start": "4260480",
    "end": "4265840"
  },
  {
    "text": "what what happens so we're investing very heavily and really solidifying the multi-easy",
    "start": "4265840",
    "end": "4271520"
  },
  {
    "text": "aspects of rds right so i mean beyond that multi-az i think the question is really more",
    "start": "4271520",
    "end": "4276960"
  },
  {
    "text": "in many ways turns into more about what has changed rather than what's the same because what's the same is actually",
    "start": "4276960",
    "end": "4283120"
  },
  {
    "text": "pretty solid at this point so from a what's changed perspective one of the things we're doing is internal lse",
    "start": "4283120",
    "end": "4289600"
  },
  {
    "text": "testing turn off an a-z and stuff like that and it's the uh that's also part of the reason why we're",
    "start": "4289600",
    "end": "4295120"
  },
  {
    "text": "exposing simulation commands for yourself to be able to validate and you know try things out",
    "start": "4295120",
    "end": "4301040"
  },
  {
    "text": "it's part of the reason the previous taking so long as well right that we just want to be able to run those things through and to ground",
    "start": "4301040",
    "end": "4307360"
  },
  {
    "text": "and deal with a lot of it i do think that some of the",
    "start": "4307360",
    "end": "4314400"
  },
  {
    "text": "issues that uh you know have plagued multi-az in the past have been",
    "start": "4314400",
    "end": "4320239"
  },
  {
    "text": "issues related to the fact that the underlying storage all has to be there all at the same time",
    "start": "4320239",
    "end": "4325920"
  },
  {
    "text": "right and whereas here you know we are a little bit more tolerant of um you know issues okay so which",
    "start": "4325920",
    "end": "4333040"
  },
  {
    "text": "helps and and so conversion from rds to aurora would be uh fairly straightforward it sounded",
    "start": "4333040",
    "end": "4338800"
  },
  {
    "text": "like yeah there's a command and yeah there's a there's a migration tool so you can go to the console",
    "start": "4338800",
    "end": "4345360"
  },
  {
    "text": "grab your rds mysql snapchat push a button and we'll actually go ahead and convert that to an aurora instance for",
    "start": "4345360",
    "end": "4350880"
  },
  {
    "text": "you and then you can use bin logs to do catch up between your existing rds my sequel and the new",
    "start": "4350880",
    "end": "4357440"
  },
  {
    "text": "aurora instance to get to nears out near zero downtime failover oh great okay that was alright because",
    "start": "4357440",
    "end": "4362800"
  },
  {
    "text": "near zero.time migration not failover i see okay so because yeah i was gonna ask about downtime because uh you know we",
    "start": "4362800",
    "end": "4367840"
  },
  {
    "text": "have a pretty large database you know take quite a while so it sounds like there's it's just kind of a blip yeah so",
    "start": "4367840",
    "end": "4373679"
  },
  {
    "text": "i mean the goal is to have it so i mean if you were using migrations in preview earlier we've",
    "start": "4373679",
    "end": "4379440"
  },
  {
    "text": "changed the code a lot in the last month or two and so now it's basically",
    "start": "4379440",
    "end": "4385199"
  },
  {
    "text": "a binary migration whereas previously it was more logical okay that's not physical migration thank",
    "start": "4385199",
    "end": "4390320"
  },
  {
    "text": "you so the question was are we supporting multi-regent ii are you talking about",
    "start": "4390320",
    "end": "4397120"
  },
  {
    "text": "multi-master multi-region okay so the answer is yes multi-master multi-region so that's the second thing",
    "start": "4397120",
    "end": "4403440"
  },
  {
    "text": "i hear about all the time right after postgres and so you know we aren't supporting it now it's",
    "start": "4403440",
    "end": "4409600"
  },
  {
    "text": "actually a pretty huge lift if you want to do that and maintain the kinds of throughput rates that people still want",
    "start": "4409600",
    "end": "4415760"
  },
  {
    "text": "and but you know it's certainly something that my team would love to go implement because you know",
    "start": "4415760",
    "end": "4421679"
  },
  {
    "text": "at core there are a bunch of database geeks and you know that's a big problem and so two we'll go work on but um you",
    "start": "4421679",
    "end": "4428080"
  },
  {
    "text": "know we have to launch first before we even start so as you said ira is mysql compatible",
    "start": "4428080",
    "end": "4435120"
  },
  {
    "text": "so all the sql limitations like windows functions are not available in aurora correct right and it does your does the",
    "start": "4435120",
    "end": "4441840"
  },
  {
    "text": "architecture of aurora will allow like can have that flexibility of let's say creating a windows function on",
    "start": "4441840",
    "end": "4448080"
  },
  {
    "text": "our rds or it's it will be a limitation for the future like always um so again it's",
    "start": "4448080",
    "end": "4454560"
  },
  {
    "text": "hard for me to talk too much uh with certainty about the future um at this point we don't want to change",
    "start": "4454560",
    "end": "4460320"
  },
  {
    "text": "the surface area because uh at core that's really about like we don't want people to feel like",
    "start": "4460320",
    "end": "4466000"
  },
  {
    "text": "they can go into aurora and then get locked in so i think you know that's really my primary motivation at",
    "start": "4466000",
    "end": "4471760"
  },
  {
    "text": "this point we want people to come in be able to leave you know evaluate you know without fear right um i get asked for a lot of",
    "start": "4471760",
    "end": "4479679"
  },
  {
    "text": "features because you know people just haven't added them in the straight my sequel side of the fence i think you know in",
    "start": "4479679",
    "end": "4486640"
  },
  {
    "text": "time we just have to evaluate and balance uh incompatible versus compatible you know one way we might",
    "start": "4486640",
    "end": "4492719"
  },
  {
    "text": "choose to do that is to add a command to say whether you want to run in compatible mode or not and in which",
    "start": "4492719",
    "end": "4498239"
  },
  {
    "text": "case those features disappear and you know otherwise they're available you know i haven't thought through all",
    "start": "4498239",
    "end": "4503760"
  },
  {
    "text": "of that but uh you know they're not there now okay",
    "start": "4503760",
    "end": "4510239"
  },
  {
    "text": "i have a simple question on pricing policy um yeah you're uh talking about the",
    "start": "4510239",
    "end": "4517520"
  },
  {
    "text": "the uh various places that you read and write from scattered out it's all very well and",
    "start": "4517520",
    "end": "4522840"
  },
  {
    "text": "good and it sounds like you've got multi-availability zone built in",
    "start": "4522840",
    "end": "4528159"
  },
  {
    "text": "does that mean you're going to be pricing it the same as multi-availability zones multi-ac",
    "start": "4528159",
    "end": "4533440"
  },
  {
    "text": "no so if you have a so the multi-ac is priced based on head nodes so if you are running a",
    "start": "4533440",
    "end": "4540560"
  },
  {
    "text": "single node my sequel aurora instance it would price at a 20",
    "start": "4540560",
    "end": "4546800"
  },
  {
    "text": "premium over give or take over a the equivalent rds multi-ac single a-z",
    "start": "4546800",
    "end": "4553199"
  },
  {
    "text": "thing the fact that and the storage is priced at 10 cents per gigabyte month uh you know plus 20 cents",
    "start": "4553199",
    "end": "4558640"
  },
  {
    "text": "per million aisles and so you know that's what you pay and the fact that it's uh you know doing multiple copies and all of that is",
    "start": "4558640",
    "end": "4565440"
  },
  {
    "text": "irrelevant to you yeah i mean you're paying one i o not six you're paying uh for one block not six okay that's good",
    "start": "4565440",
    "end": "4573199"
  },
  {
    "text": "because we're using rds now with a single availability zone it's been working quite well",
    "start": "4573199",
    "end": "4578840"
  },
  {
    "text": "um the availability zone is fine but uh it's double the price exactly and so",
    "start": "4578840",
    "end": "4585760"
  },
  {
    "text": "the thing that we're trying to do that helps with that is to at least make our read replicas",
    "start": "4585760",
    "end": "4590800"
  },
  {
    "text": "available as failover targets so even though you you know if you choose to go to a fast",
    "start": "4590800",
    "end": "4596159"
  },
  {
    "text": "failover kind of model using multi-ac at least you have read availability through that instance and as a",
    "start": "4596159",
    "end": "4602080"
  },
  {
    "text": "ongoing basis yeah well i would solve that problem very nicely at a very reasonable cost great yeah and of",
    "start": "4602080",
    "end": "4608080"
  },
  {
    "text": "course there's no extra storage for that second instance either okay well thank",
    "start": "4608080",
    "end": "4614080"
  },
  {
    "text": "you",
    "start": "4620840",
    "end": "4623840"
  },
  {
    "text": "so the question was uh his thought was is that going with an r3 large cuts his compute in half",
    "start": "4627840",
    "end": "4635840"
  },
  {
    "text": "relative to the compute optimized instance types so that's true i think",
    "start": "4635840",
    "end": "4643440"
  },
  {
    "text": "the question for us from a launch perspective was to try to provide simplicity so that people can just scale",
    "start": "4643440",
    "end": "4650640"
  },
  {
    "text": "up and down along one family because as soon as you start switching amongst families it gets complicated the other question",
    "start": "4650640",
    "end": "4658880"
  },
  {
    "text": "is how much you're reliant on memory versus compute and where the balance point lies and i",
    "start": "4658880",
    "end": "4664480"
  },
  {
    "text": "suspect that the balance point is going to change for you with aurora relative to uh",
    "start": "4664480",
    "end": "4671199"
  },
  {
    "text": "traditional my sequel i i can't exactly say how or where or how you know but",
    "start": "4671199",
    "end": "4679840"
  },
  {
    "text": "okay interesting so the statement was is that the bottleneck is almost always in the sorting process and",
    "start": "4682640",
    "end": "4688560"
  },
  {
    "text": "we'll go take a look maybe there's some optimizations available there",
    "start": "4688560",
    "end": "4694320"
  },
  {
    "text": "in a single head node deployment how long would it take to if if the head node was down to recover",
    "start": "4694320",
    "end": "4701760"
  },
  {
    "text": "two you mean to spin up a new instance yeah and so forth was that just a standard spin-up of an incident that's exactly it right so you'll",
    "start": "4701760",
    "end": "4707840"
  },
  {
    "text": "basically spin up a new instance i mean the advantage i mean the expensive part usually on that stuff is",
    "start": "4707840",
    "end": "4714480"
  },
  {
    "text": "having to restore data from s3 into an and spin up a new volume and at least you don't have to deal with that here",
    "start": "4714480",
    "end": "4720080"
  },
  {
    "text": "right if we uh",
    "start": "4720080",
    "end": "4724480"
  },
  {
    "text": "yeah so right now unfortunately that's going to be a dump and load type of scenario so",
    "start": "4730159",
    "end": "4735360"
  },
  {
    "text": "you know take a take a dump put it into uh oregon and then you can set up bin logs",
    "start": "4735360",
    "end": "4740400"
  },
  {
    "text": "between the two and replicate changes over right now sorry but um",
    "start": "4740400",
    "end": "4749840"
  },
  {
    "text": "uh so i think you're gonna have to we'll have to well when we go into unlimited preview everyone will get an invite so just",
    "start": "4753679",
    "end": "4759040"
  },
  {
    "text": "sign up with that account in on that link that's in the presentation we'll get that account access and if not",
    "start": "4759040",
    "end": "4764159"
  },
  {
    "text": "you can just send me an email you should have a concierge assigned to you so you can just reach out to them and we'll get you access",
    "start": "4764159",
    "end": "4777840"
  },
  {
    "text": "so the question was can uh if uh he choose to go to aurora can he",
    "start": "4789840",
    "end": "4795360"
  },
  {
    "text": "run his application on both my sequel and aurora at the same time and basically run them in parallel so that",
    "start": "4795360",
    "end": "4803120"
  },
  {
    "text": "he can you know switch one way or the other and so forth so what you're asking for makes sense um",
    "start": "4803120",
    "end": "4809360"
  },
  {
    "text": "we don't have any such support at this time you can do it through bin logs of course right where you",
    "start": "4809360",
    "end": "4815199"
  },
  {
    "text": "you know have your my sequel as your primary and then have bin log based replication into uh aurora and",
    "start": "4815199",
    "end": "4822239"
  },
  {
    "text": "you know that will work just fine it doesn't give you any sense of the performance characteristics right so and you know bin log",
    "start": "4822239",
    "end": "4829679"
  },
  {
    "text": "replication has its own set of problems right um so but",
    "start": "4829679",
    "end": "4837199"
  },
  {
    "text": "none of that that would work we don't have any way to like sort of send the driver into two locations it's",
    "start": "4837199",
    "end": "4843360"
  },
  {
    "text": "an interesting ask you know maybe it's something we can work on with the maria dp guys",
    "start": "4843360",
    "end": "4848800"
  },
  {
    "text": "i think that's oh sorry already ask that but just want to make sure if my database is",
    "start": "4850560",
    "end": "4856159"
  },
  {
    "text": "one terabyte when you have six replicas so i'm paying for one terabyte or six terabytes",
    "start": "4856159",
    "end": "4865040"
  }
]