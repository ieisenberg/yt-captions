[
  {
    "text": "everybody welcome to AWS his first ever security conference reinforced I hope",
    "start": "1730",
    "end": "7799"
  },
  {
    "text": "we're having a great time here in Boston now so I took this snapshot I took the",
    "start": "7799",
    "end": "15420"
  },
  {
    "text": "snapshot a couple months ago of our AWS management console this is the list of",
    "start": "15420",
    "end": "21350"
  },
  {
    "text": "services that you can navigate to in our console this is not a short list it",
    "start": "21350",
    "end": "28019"
  },
  {
    "text": "grows all in fact it has grown since I took this screenshot two months ago and",
    "start": "28019",
    "end": "33149"
  },
  {
    "text": "you're here at our first ever security conference for security minded builders",
    "start": "33149",
    "end": "38219"
  },
  {
    "text": "here at AWS and I wouldn't blame you if you looked at a list like this and your",
    "start": "38219",
    "end": "43410"
  },
  {
    "text": "job is to you know help your organization use the cloud securely if you look at a list like this and think",
    "start": "43410",
    "end": "48930"
  },
  {
    "text": "this is a really daunting task you know this is this is a lot of surface area to secure isn't it well I'm here with good",
    "start": "48930",
    "end": "57360"
  },
  {
    "text": "news for you because it's true this list is really long and it's gonna keep growing but there's really if you wanted",
    "start": "57360",
    "end": "63629"
  },
  {
    "text": "to see if you want to secure in a an AWS cloud environment which is presumably",
    "start": "63629",
    "end": "68640"
  },
  {
    "text": "why are all here there's really only although there's a triple digit number",
    "start": "68640",
    "end": "73770"
  },
  {
    "text": "of AWS services now there's only a small handful of what I'm going to call fundamental patterns that repeat over",
    "start": "73770",
    "end": "80880"
  },
  {
    "text": "and over and over again across all of our services that if you know how to do",
    "start": "80880",
    "end": "86909"
  },
  {
    "text": "them if you know how to recognize them if you know what to look for you can actually be very effective at securing",
    "start": "86909",
    "end": "93860"
  },
  {
    "text": "all of these services so you learn a few patterns and you're able to secure all of them you can see up here what we're",
    "start": "93860",
    "end": "99750"
  },
  {
    "text": "going to talk about here we're going to talk about permissions I'm gonna talk about encrypting your data we're going to talk about securing your network",
    "start": "99750",
    "end": "106049"
  },
  {
    "text": "connectivity and we are going to put the fun in cloud security fundamentals there",
    "start": "106049",
    "end": "112649"
  },
  {
    "text": "you go okay well so what this is here this is a talk this talk here is for",
    "start": "112649",
    "end": "118409"
  },
  {
    "text": "builders this talk is gonna be all practice and almost no theory we're",
    "start": "118409",
    "end": "123750"
  },
  {
    "text": "gonna focus very directly on these three fundamental patterns",
    "start": "123750",
    "end": "128810"
  },
  {
    "text": "and what you need to know in order to secure your cloud environment with them for each of them I'm going to give you a",
    "start": "128810",
    "end": "135530"
  },
  {
    "text": "quick 400 on one and what they are and why you care about it and then we're gonna go right into right into the right",
    "start": "135530",
    "end": "140840"
  },
  {
    "text": "into the details of how you use them and my goal is when you walk away from here when you go when you go back home when",
    "start": "140840",
    "end": "146390"
  },
  {
    "text": "you leave this beautiful city of Boston in June and you go back to wherever it isn't you came from the goal here is to",
    "start": "146390",
    "end": "153410"
  },
  {
    "text": "accelerate yourself as you go back and help your organization use the cloud",
    "start": "153410",
    "end": "158900"
  },
  {
    "text": "securely because you know we're not going to talk about every single service that you use rather we're going to talk",
    "start": "158900",
    "end": "164120"
  },
  {
    "text": "about the patterns you're gonna come away from here knowing what to look for and the rest will be details that you",
    "start": "164120",
    "end": "169489"
  },
  {
    "text": "can fill in all right we're ready to get started all right I am really like of",
    "start": "169489",
    "end": "176060"
  },
  {
    "text": "these three patterns if you know nothing else this is what you need to know to secure your environment I am identity",
    "start": "176060",
    "end": "182209"
  },
  {
    "text": "and access management in AWS okay so the four one one on this is this is",
    "start": "182209",
    "end": "187519"
  },
  {
    "text": "authentication and authorization in AWS the I stands for authentication and the a M stands for authorization identity",
    "start": "187519",
    "end": "194840"
  },
  {
    "text": "access management and why do you care about this you care about no matter what",
    "start": "194840",
    "end": "200239"
  },
  {
    "text": "you're doing an AWS you care about this because the WS an AWS stands for Web Services you reach all of our services",
    "start": "200239",
    "end": "207230"
  },
  {
    "text": "via API and these api's are authenticated and authorized this is how you grant entities permission to make",
    "start": "207230",
    "end": "214970"
  },
  {
    "text": "API calls on behalf of yourself in AWS so we're gonna give you sort of the",
    "start": "214970",
    "end": "221480"
  },
  {
    "text": "we're gonna give you sort of the quick primer on what you need to know here to be effective and I'm not gonna lie a lot",
    "start": "221480",
    "end": "227510"
  },
  {
    "text": "of I am is a lot of I am is just knowing how to look at the documentation knowing what the patterns are to apply and",
    "start": "227510",
    "end": "233780"
  },
  {
    "text": "knowing what to look for in the service that you're using so that's what we're gonna that's what we're gonna go after today so we're gonna learn how to read",
    "start": "233780",
    "end": "240350"
  },
  {
    "text": "and write these policies okay so first of all let's talk about the identity half of this if you've ever logged into",
    "start": "240350",
    "end": "247690"
  },
  {
    "text": "AWS using a username and a password you know you did something like this you",
    "start": "247690",
    "end": "253880"
  },
  {
    "text": "are an I am user that is one kind of identity for humans",
    "start": "253880",
    "end": "258959"
  },
  {
    "text": "that we have in AWS these are long-term credentials you also have you know",
    "start": "258959",
    "end": "264389"
  },
  {
    "text": "long-term programmatic credentials and I'm sure many of you have interacted with this is one possible identity for",
    "start": "264389",
    "end": "269910"
  },
  {
    "text": "humans in AWS you might hear me use the word I am principal and I am principal",
    "start": "269910",
    "end": "276180"
  },
  {
    "text": "is an identity in a I am it's somebody who can make calls so an I am user is a",
    "start": "276180",
    "end": "281550"
  },
  {
    "text": "principal you might hear me use the word principal and other way human beings can get into",
    "start": "281550",
    "end": "287100"
  },
  {
    "text": "AWS I'm not going to cover this topic in depth here but you might have if you're at a large enterprise organization you",
    "start": "287100",
    "end": "292979"
  },
  {
    "text": "might have seen this mode of getting into AWS you got your own corporate corporate directory like an active",
    "start": "292979",
    "end": "299789"
  },
  {
    "text": "Microsoft Active Directory or something like that and you are signing in to that",
    "start": "299789",
    "end": "305250"
  },
  {
    "text": "and then and then being federated is the word into AWS landing in not in I am",
    "start": "305250",
    "end": "311400"
  },
  {
    "text": "user but in I am role it's a different kind of principle and a federated role is another way that a human being could",
    "start": "311400",
    "end": "317970"
  },
  {
    "text": "have an identity in AWS against from which to make calls and then there are I",
    "start": "317970",
    "end": "324510"
  },
  {
    "text": "am also I am roles for this I mean this is I just put five things up here but a large number of AWS services especially",
    "start": "324510",
    "end": "332729"
  },
  {
    "text": "our various compute environments ec2 lambda ECS whole lot of others can",
    "start": "332729",
    "end": "340590"
  },
  {
    "text": "themselves have I am identities because if you think about it you're running a server list application on lambda you're",
    "start": "340590",
    "end": "346470"
  },
  {
    "text": "running an application on ec2 instances nearly everything you do is going to be",
    "start": "346470",
    "end": "351479"
  },
  {
    "text": "making API calls against AWS services and is gonna need an identity you know",
    "start": "351479",
    "end": "357419"
  },
  {
    "text": "to be authenticated as to make these calls so that's another that's another kind of identity in AWS also an I am",
    "start": "357419",
    "end": "364800"
  },
  {
    "text": "role also an I am principal but an identity for non-human applications so",
    "start": "364800",
    "end": "371789"
  },
  {
    "text": "all of these environments they have the ability to they have the ability to have roles and the nice thing about iam roles",
    "start": "371789",
    "end": "378599"
  },
  {
    "text": "and again this is all mostly taken care of for you under the hood they operate with short term credentials the security",
    "start": "378599",
    "end": "384539"
  },
  {
    "text": "people you should like to hear those words short term credentials so this is who you can be in in in I am",
    "start": "384539",
    "end": "390979"
  },
  {
    "text": "and in fact like you know on this role topic if you were gonna walk into the AWS console the I am console and go to",
    "start": "390979",
    "end": "397939"
  },
  {
    "text": "create a role this is the first thing you would see here the first the first choice you would have is what is this",
    "start": "397939",
    "end": "405469"
  },
  {
    "text": "role for and you see there's four options up top this first one is for your application and you see there's a",
    "start": "405469",
    "end": "411199"
  },
  {
    "text": "whole long list below of the various kinds of the various kinds of environments your application might be",
    "start": "411199",
    "end": "416779"
  },
  {
    "text": "running on ec2 and lambda being the most common choices so you know so those are up top roles are also we're going to",
    "start": "416779",
    "end": "424309"
  },
  {
    "text": "talk about this in a moment in a little bit later but roles are also how you grant access into your account from",
    "start": "424309",
    "end": "430639"
  },
  {
    "text": "outside your account we'll talk about that a little bit later you also use iam roles for that and then finally",
    "start": "430639",
    "end": "436579"
  },
  {
    "text": "Federation like we'd like to showed you before for human identities from various kinds of identity providers web identity",
    "start": "436579",
    "end": "442099"
  },
  {
    "text": "providers and sam'l identity providers so that's how you make a role those are",
    "start": "442099",
    "end": "447439"
  },
  {
    "text": "the options for what a role can be and I just want to say a couple of words on how authentication works in AWS again I",
    "start": "447439",
    "end": "453739"
  },
  {
    "text": "promised practice more than theory but just so you understand how this works",
    "start": "453739",
    "end": "459309"
  },
  {
    "text": "the fact of the matter is you don't need to know because almost like in only except in very exceptional use cases",
    "start": "459309",
    "end": "466599"
  },
  {
    "text": "you're going to be accessing AWS you go through the console through one of our many languages programming language SDKs",
    "start": "466599",
    "end": "473059"
  },
  {
    "text": "or through our command-line interface all the authentication stuffs going to be done under the hood for you but the",
    "start": "473059",
    "end": "478549"
  },
  {
    "text": "way this works is you have a pair of credentials a non secret part called the access key ID a secret part called the",
    "start": "478549",
    "end": "484279"
  },
  {
    "text": "secret access key and your API call is going to be authenticated by signing the",
    "start": "484279",
    "end": "491509"
  },
  {
    "text": "request an H Mac signature of the request with the secret key when you submit it to the service then the service is able to authenticate it",
    "start": "491509",
    "end": "497899"
  },
  {
    "text": "actually if you're curious about this what I would do is just look at you know",
    "start": "497899",
    "end": "503119"
  },
  {
    "text": "look at the look at the actual HTTP request that gets sent to an AWS service when you make the API call if you're",
    "start": "503119",
    "end": "509629"
  },
  {
    "text": "curious how that looks and you'll sort of figure it out but who you are is only half the story",
    "start": "509629",
    "end": "515300"
  },
  {
    "text": "right the other half of it is authorization now that we know who you are and that",
    "start": "515300",
    "end": "520310"
  },
  {
    "text": "actually you making this API call to say s3 what can you what are you allowed to",
    "start": "520310",
    "end": "525980"
  },
  {
    "text": "do and now that's where policies come in in order to be allowed to do something",
    "start": "525980",
    "end": "531200"
  },
  {
    "text": "to make any kind of request in AWS you have to have a permission policy that",
    "start": "531200",
    "end": "538670"
  },
  {
    "text": "gives you permission to do so well so we have a number of pre-canned this is in the policies pane of the IAM",
    "start": "538670",
    "end": "546200"
  },
  {
    "text": "console we have a number of pre-canned policies they have you know human readable names they sort of self they're",
    "start": "546200",
    "end": "552920"
  },
  {
    "text": "sort of self describing what they do and I would actually these are really useful for setting up permissions for human",
    "start": "552920",
    "end": "558620"
  },
  {
    "text": "roles that have like common sets of fairly coarse grained coarse grained actions that they want to do it's",
    "start": "558620",
    "end": "565130"
  },
  {
    "text": "actually probably worth your while if you're trying to learn and if you're someone who likes to sort of learn by looking at the details it's how I like",
    "start": "565130",
    "end": "571430"
  },
  {
    "text": "to learn I would actually you can look at how these policies are written to sort of get an idea of what these services do I",
    "start": "571430",
    "end": "577670"
  },
  {
    "text": "actually find that to be very a very useful way to learn about what a service does is to go look at its you know look",
    "start": "577670",
    "end": "583130"
  },
  {
    "text": "at its managed permission policy and get an idea of what kinds of permissions it needs but a lot of the time and",
    "start": "583130",
    "end": "589610"
  },
  {
    "text": "especially for especially for writing your own applications you're gonna want",
    "start": "589610",
    "end": "594920"
  },
  {
    "text": "to go finer grain than that and that means you're gonna need to learn how to read and write in iam policy now the",
    "start": "594920",
    "end": "601850"
  },
  {
    "text": "fundamentals of reading and writing I am policy are fairly straightforward again",
    "start": "601850",
    "end": "606920"
  },
  {
    "text": "repeatable patterns and whereas each service has different you know different kinds of conditions and actions that",
    "start": "606920",
    "end": "613070"
  },
  {
    "text": "they support really the patterns here if you learn them you're gonna be able to take our Docs and write a good policy so",
    "start": "613070",
    "end": "619430"
  },
  {
    "text": "here was about aside from a policy that just grants all access to everything",
    "start": "619430",
    "end": "624500"
  },
  {
    "text": "this was the simplest policy I could think of okay so what's going on here in",
    "start": "624500",
    "end": "629630"
  },
  {
    "text": "this policy alright well all statements and the policy has one or more statements all the ones I'm going to",
    "start": "629630",
    "end": "635630"
  },
  {
    "text": "show you here have one statement but they could have multiple alright so first off all of these statements are",
    "start": "635630",
    "end": "641180"
  },
  {
    "text": "gonna have an effective the effect is either gonna be a lower deny it you know that means what you think",
    "start": "641180",
    "end": "647269"
  },
  {
    "text": "actions you're gonna have one or more actions and these actions can be wildcard and so what this means here is",
    "start": "647269",
    "end": "653519"
  },
  {
    "text": "this means all actions in dynamo DB and then finally over here what canon can't",
    "start": "653519",
    "end": "660989"
  },
  {
    "text": "you take that action against and here at wildcard that and what this means is",
    "start": "660989",
    "end": "666119"
  },
  {
    "text": "that whoever has this policy attached whoever has this policy attached can do anything in dynamo DB so this will be an",
    "start": "666119",
    "end": "675569"
  },
  {
    "text": "appropriate role for spur up maybe like a this would be an appropriate permission for you know say a human",
    "start": "675569",
    "end": "680849"
  },
  {
    "text": "whose job it is to you know look after all of the DynamoDB tables in an account",
    "start": "680849",
    "end": "686779"
  },
  {
    "text": "okay well your security people you probably want to get a little bit more",
    "start": "686779",
    "end": "692369"
  },
  {
    "text": "granular than that well let's say it's gonna be writing a I am policy for a an",
    "start": "692369",
    "end": "698999"
  },
  {
    "text": "application that I'm writing maybe this is going to be an application I'm going to run a server list application I'm gonna run a lambda that needs to you",
    "start": "698999",
    "end": "705629"
  },
  {
    "text": "know read a bunch of things out of a dynamodb table as part of doing its job this is going to be this is going to be the permission for policy attached to",
    "start": "705629",
    "end": "712409"
  },
  {
    "text": "the role for the lambda function okay so you know I know a couple of specific",
    "start": "712409",
    "end": "718109"
  },
  {
    "text": "actions that I wanted to do batch get item get item query that's how you pretty much how you read things out of",
    "start": "718109",
    "end": "723359"
  },
  {
    "text": "DynamoDB there are a couple of other actions that also do that but if I know these are the actions I'm taking then can make it a little more specific hey",
    "start": "723359",
    "end": "730259"
  },
  {
    "text": "you know what I can make this even more specific what I could do here is you",
    "start": "730259",
    "end": "736019"
  },
  {
    "text": "notice here now I'm being specific about the resource so what's going on here what's different here is first of all",
    "start": "736019",
    "end": "743249"
  },
  {
    "text": "this notation here this notation here is called an Amazon resource name in a RN and you see it's it's got the service",
    "start": "743249",
    "end": "750869"
  },
  {
    "text": "name the region the it's a fully qualified name and I'm being very specific I'm saying this application I",
    "start": "750869",
    "end": "757709"
  },
  {
    "text": "know it's trying to read my table name I might have other tables in my account the applications not going to read them",
    "start": "757709",
    "end": "763679"
  },
  {
    "text": "so I'm giving it specific access to this table you'll notice I actually have two",
    "start": "763679",
    "end": "768769"
  },
  {
    "text": "resources here now why is that well that's because if you go and look",
    "start": "768769",
    "end": "773819"
  },
  {
    "text": "and I'll show you the documentation page in a couple of a couple of minutes if you go and look at the documentation for",
    "start": "773819",
    "end": "779189"
  },
  {
    "text": "how dynamodb does policy there'll be a big table we have a big table like this for every service and you'll see that for a",
    "start": "779189",
    "end": "785650"
  },
  {
    "text": "query dynamo DB query queries involves both the table and the index that you're",
    "start": "785650",
    "end": "792310"
  },
  {
    "text": "querying so I'm saying both the table and any index under the table is",
    "start": "792310",
    "end": "797440"
  },
  {
    "text": "queryable by my application so that's how one of these fine-grained policies",
    "start": "797440",
    "end": "803110"
  },
  {
    "text": "works I want to see more policies alright here's another one this one has",
    "start": "803110",
    "end": "808870"
  },
  {
    "text": "something new okay so this is a different service that we're talking about here secrets manager you've been a",
    "start": "808870",
    "end": "815440"
  },
  {
    "text": "familiar with secrets manager it's it's you know it's a way to securely store",
    "start": "815440",
    "end": "820630"
  },
  {
    "text": "your secret data and protect it with you know with with permissions in AWS you",
    "start": "820630",
    "end": "826270"
  },
  {
    "text": "know a way that you no longer need your developers handling the secret material themselves okay so get secret value",
    "start": "826270",
    "end": "832870"
  },
  {
    "text": "that's how you get the value underneath the secret so this is giving someone permission to look at the secret saying",
    "start": "832870",
    "end": "839160"
  },
  {
    "text": "star for the resource any secrets in the account but I'm adding this new thing",
    "start": "839160",
    "end": "844480"
  },
  {
    "text": "which is a condition in this condition and you look at this for a second you",
    "start": "844480",
    "end": "849520"
  },
  {
    "text": "can kind of figure out what it is saying here what it means here is secrets have",
    "start": "849520",
    "end": "854920"
  },
  {
    "text": "tags on them tags are a way of attaching attributes to items across AWS the",
    "start": "854920",
    "end": "861010"
  },
  {
    "text": "secrets manager supports tags so if I tag my secrets with the project it needs",
    "start": "861010",
    "end": "867130"
  },
  {
    "text": "to match the prot you can also tag iam principles like users and roles with tags so the project of the collar has to",
    "start": "867130",
    "end": "873460"
  },
  {
    "text": "match the project of the secret so that's what this policy means and so",
    "start": "873460",
    "end": "879580"
  },
  {
    "text": "that's what it means and in fact it's",
    "start": "879580",
    "end": "884740"
  },
  {
    "text": "attribute based access control right what this means is that people working on the read people tagged with the read",
    "start": "884740",
    "end": "889900"
  },
  {
    "text": "project can read the read secrets and people tagged with the blue project can read the blue secrets and so this is a",
    "start": "889900",
    "end": "895540"
  },
  {
    "text": "really useful way to segment groups of things in your account so that different groups of people have access to",
    "start": "895540",
    "end": "900940"
  },
  {
    "text": "different groups of things attribute based access control okay so how did I write how did I figure",
    "start": "900940",
    "end": "911230"
  },
  {
    "text": "out how to write all those policies we got a lot of services they do a lot of things you know there's a lot of",
    "start": "911230",
    "end": "916510"
  },
  {
    "text": "conditions available across these different services well this is my this is my favorite page of the AWS",
    "start": "916510",
    "end": "923320"
  },
  {
    "text": "documentation actions resources and condition the keys for AWS services",
    "start": "923320",
    "end": "928540"
  },
  {
    "text": "because along the left rail here is a full list of all of our services and for each of these there's going to be a",
    "start": "928540",
    "end": "934570"
  },
  {
    "text": "table a table that has a row for every action tells you what kinds of resources you might put you would put in the",
    "start": "934570",
    "end": "940810"
  },
  {
    "text": "resource field and then tells you what kinds of conditions you can specify against those resources so you take the",
    "start": "940810",
    "end": "946810"
  },
  {
    "text": "pattern you just saw go look at the documentation page for the service that you're using and you can apply this and",
    "start": "946810",
    "end": "952630"
  },
  {
    "text": "you can write a fine-grained permissions policy for anything that you're doing",
    "start": "952630",
    "end": "958590"
  },
  {
    "text": "now in an AWS enterprise environment it's often the case that we everything",
    "start": "958590",
    "end": "964150"
  },
  {
    "text": "we've talked about so far is about is for permissions within a given AWS account now those of you who work at",
    "start": "964150",
    "end": "971650"
  },
  {
    "text": "enterprises even those of you who work at smaller businesses you're probably aware of the fact that in reality you're",
    "start": "971650",
    "end": "978640"
  },
  {
    "text": "often working across multiple AWS accounts sometimes a small number sometimes a very large number in your",
    "start": "978640",
    "end": "984550"
  },
  {
    "text": "organization and you're trying to secure the cloud across all of these accounts and you got different groups of people",
    "start": "984550",
    "end": "991060"
  },
  {
    "text": "with different permitted permission levels to different accounts some of these accounts that you know these",
    "start": "991060",
    "end": "996700"
  },
  {
    "text": "accounts will have different security posture than others some accounts are for people science experiments some some",
    "start": "996700",
    "end": "1003210"
  },
  {
    "text": "are for your you know extra secure customer data these accounts are all different and yet you need to secure all",
    "start": "1003210",
    "end": "1009180"
  },
  {
    "text": "of them and you'll often find that it's the case when you're working across",
    "start": "1009180",
    "end": "1015720"
  },
  {
    "text": "accounts that you're in situations where somebody some principal from one account",
    "start": "1015720",
    "end": "1021680"
  },
  {
    "text": "needs to get at some resource like an s3 bucket in another account",
    "start": "1021680",
    "end": "1029319"
  },
  {
    "text": "okay so how do I do this well we just talked about how to write an ion policy right so okay let me write a policy like",
    "start": "1029319",
    "end": "1036290"
  },
  {
    "text": "this allow s3 get object and I'll put the s3 object say RN in there this is",
    "start": "1036290",
    "end": "1043308"
  },
  {
    "text": "gonna work what we think should this work no because think about it right why",
    "start": "1043309",
    "end": "1051110"
  },
  {
    "text": "should I over in that red account over in the account on the left why should I be able to write a policy that grants me",
    "start": "1051110",
    "end": "1058040"
  },
  {
    "text": "access to somebody else's thing like if I can do that then I could just grant myself access to your bucket right and",
    "start": "1058040",
    "end": "1063980"
  },
  {
    "text": "that's obviously not okay so when you have two accounts involved in an authorization you actually need it",
    "start": "1063980",
    "end": "1071270"
  },
  {
    "text": "allowed from both sides so this caller does need this does need this permission",
    "start": "1071270",
    "end": "1076490"
  },
  {
    "text": "because they're gonna be calling get object and so they need permission to call get object on this resource but you",
    "start": "1076490",
    "end": "1083179"
  },
  {
    "text": "also need something over on the bucket owner side that says that this account can come in so that's where something",
    "start": "1083179",
    "end": "1089270"
  },
  {
    "text": "called resource based policies comes in s3 bucket policies are an example of",
    "start": "1089270",
    "end": "1094970"
  },
  {
    "text": "resource based policies but a double digit number of our services support these on their resources and what they",
    "start": "1094970",
    "end": "1102110"
  },
  {
    "text": "are is they are there I am policy they look like all of the patterns that we've been seeing before but they're attached",
    "start": "1102110",
    "end": "1107840"
  },
  {
    "text": "to the resource like to the s3 bucket and not to the principle making the call",
    "start": "1107840",
    "end": "1114880"
  },
  {
    "text": "alright so you see over here we have a snippet of iam policy over here it's got",
    "start": "1114880",
    "end": "1119929"
  },
  {
    "text": "one new thing in here principle we weren't looking at that before because all of the policies we had before were",
    "start": "1119929",
    "end": "1125450"
  },
  {
    "text": "attached to a principle so you knew who the principle was but this bucket you can kind of see what it's saying it's saying I will let anybody from account 1",
    "start": "1125450",
    "end": "1136520"
  },
  {
    "text": "1 1 1 2 2 2 2 3 3 3 3 call get object on you know any object underneath this",
    "start": "1136520",
    "end": "1142610"
  },
  {
    "text": "bucket now you might be wondering if you're looking as you're looking at this s3 bucket you might be wondering what",
    "start": "1142610",
    "end": "1147950"
  },
  {
    "text": "that root thing is right maybe you've read somewhere that root is not something you should do in AWS you",
    "start": "1147950",
    "end": "1153500"
  },
  {
    "text": "should get rid of your root credentials you should always be an I in principle that's correct that's true what root means here",
    "start": "1153500",
    "end": "1159380"
  },
  {
    "text": "what it means precisely and again I told you this is more practice than theory I can give you a little bit of theory",
    "start": "1159380",
    "end": "1164419"
  },
  {
    "text": "right now you don't understand the next part it's okay what this means this resource policy the principle in this",
    "start": "1164419",
    "end": "1171529"
  },
  {
    "text": "resource policy it's actually what it's doing is it's trusting this role this",
    "start": "1171529",
    "end": "1177380"
  },
  {
    "text": "account to issue policies that give access so that's very technically what it's doing but in practice back in",
    "start": "1177380",
    "end": "1183890"
  },
  {
    "text": "reality what a policy like this means is that okay I trust that other account and anybody in that other account who has",
    "start": "1183890",
    "end": "1189830"
  },
  {
    "text": "permission to call to call this bucket they should be able to so that's what this does that's what this accomplishes",
    "start": "1189830",
    "end": "1195380"
  },
  {
    "text": "in practice so now we have two accounts involved the principal says they can make the call the resource says the",
    "start": "1195380",
    "end": "1202340"
  },
  {
    "text": "principal can make the call as it says that they trust the account to issue a principal for the resource to make for the principal to make the call and now",
    "start": "1202340",
    "end": "1209000"
  },
  {
    "text": "this call is allowed so that's what it takes when you're working across account both sides need to say yes when you're",
    "start": "1209000",
    "end": "1214700"
  },
  {
    "text": "getting an access denied when working across accounts when you're troubleshooting the first thing to look for is both sides okay now a lot of our",
    "start": "1214700",
    "end": "1223039"
  },
  {
    "text": "AWS services support resource based policies but some of them don't for example a dynamodb table what happens",
    "start": "1223039",
    "end": "1230450"
  },
  {
    "text": "when a principal in this account needs to call a dynamodb table in this account well DynamoDB tables don't have resource",
    "start": "1230450",
    "end": "1235850"
  },
  {
    "text": "based policies so there's another pattern you can use for cross account access if you're going to do that the",
    "start": "1235850",
    "end": "1241639"
  },
  {
    "text": "way it works create a role create a role right next to the resource in that same",
    "start": "1241639",
    "end": "1247039"
  },
  {
    "text": "account and like any other iam role we'll put a policy on it and that policy you know will look the way you expect",
    "start": "1247039",
    "end": "1253929"
  },
  {
    "text": "it'll allow let's say we're trying to allow getitem on this particular table so now you know that anybody who's in",
    "start": "1253929",
    "end": "1260450"
  },
  {
    "text": "this role can make getitem requests against this table now of course how do",
    "start": "1260450",
    "end": "1265610"
  },
  {
    "text": "you get into this role from over here well let's do I am calls it's a trust",
    "start": "1265610",
    "end": "1271880"
  },
  {
    "text": "policy but really it's another resource based policy like the one you just saw an s3 what does this say well this one",
    "start": "1271880",
    "end": "1279529"
  },
  {
    "text": "over here says assume role that's the action you take when you assume a role",
    "start": "1279529",
    "end": "1284889"
  },
  {
    "text": "I'm going to trust the root of this account again I'm going to trust this account to say who can get into this role so I'm gonna",
    "start": "1284889",
    "end": "1291170"
  },
  {
    "text": "trust this other account now the third leg of this is of course so this account",
    "start": "1291170",
    "end": "1296990"
  },
  {
    "text": "seems to say that they can get in but this account needs to as well so we'll put a policy on this caller principle",
    "start": "1296990",
    "end": "1304040"
  },
  {
    "text": "here not saying anything about DynamoDB but instead saying that they can get",
    "start": "1304040",
    "end": "1309050"
  },
  {
    "text": "this role can get into this role so now with all of those things together the",
    "start": "1309050",
    "end": "1315950"
  },
  {
    "text": "way the access is done is this role assumes the other role gets back some temporary credentials because now it can",
    "start": "1315950",
    "end": "1322400"
  },
  {
    "text": "be that role and then using those temporary credentials it makes the call to DynamoDB so those are your two",
    "start": "1322400",
    "end": "1328220"
  },
  {
    "text": "patterns for cross account access if you ever need to do that but still on this topic of multiple accounts in AWS when",
    "start": "1328220",
    "end": "1337850"
  },
  {
    "text": "you're working across multiple accounts in AWS the service to look for the service to help you to help you with",
    "start": "1337850",
    "end": "1344440"
  },
  {
    "text": "governance to help you with control to help you with security and variance across these accounts is AWS",
    "start": "1344440",
    "end": "1350750"
  },
  {
    "text": "organizations now at its most basic level what AWS organizations lets you do",
    "start": "1350750",
    "end": "1356000"
  },
  {
    "text": "is it lets you organize your accounts into a hierarchy of organizational units",
    "start": "1356000",
    "end": "1361400"
  },
  {
    "text": "you've got it's not pictured here but you've got a an administrative account that we call the master account that's",
    "start": "1361400",
    "end": "1367910"
  },
  {
    "text": "in charge of the organization you don't actually run any of your workloads in there that account is just there for administration of the rest of the",
    "start": "1367910",
    "end": "1374030"
  },
  {
    "text": "organization and you can do a lot of really useful things now this talk is not really focused on organizations but",
    "start": "1374030",
    "end": "1380570"
  },
  {
    "text": "I just wanted to point out a couple of a couple of really useful things that you can do here one thing you can do here",
    "start": "1380570",
    "end": "1387140"
  },
  {
    "text": "and this is especially relevant if you don't already have your own directory and Federation provider and you're",
    "start": "1387140",
    "end": "1393680"
  },
  {
    "text": "trying to manage human identities and ADA in into an AWS organization I would",
    "start": "1393680",
    "end": "1398840"
  },
  {
    "text": "look at AWS SSO our single sign-on product SSO lets you create users directly in",
    "start": "1398840",
    "end": "1405950"
  },
  {
    "text": "NASA so it can also integrate with a managed Microsoft Active Directory in your V PC if you have one of those and",
    "start": "1405950",
    "end": "1412790"
  },
  {
    "text": "what it lets you do is it lets you map users to access into access levels into",
    "start": "1412790",
    "end": "1418760"
  },
  {
    "text": "AWS accounts which gives you a nice way for your users to from one place into multiple accounts",
    "start": "1418760",
    "end": "1424830"
  },
  {
    "text": "rather than having them juggle a lot of passwords or assuming a lot of roles all over the place so it's it's a nice",
    "start": "1424830",
    "end": "1430710"
  },
  {
    "text": "simplifier for that but another thing that if you are another thing that if",
    "start": "1430710",
    "end": "1437460"
  },
  {
    "text": "you are and if you are working across multiple accounts working with an organization once you you know get to",
    "start": "1437460",
    "end": "1444780"
  },
  {
    "text": "really understand these patterns of I am you're gonna start to identify some what will call security invariance across",
    "start": "1444780",
    "end": "1452220"
  },
  {
    "text": "your organization things you just want to hold true everywhere and if they're expressible in iam policy you can use",
    "start": "1452220",
    "end": "1458190"
  },
  {
    "text": "something called a service control policy in your organization now what that is it's a policy that applies for",
    "start": "1458190",
    "end": "1465330"
  },
  {
    "text": "any principle anywhere under the organization making an API call that policy is going to become part of the",
    "start": "1465330",
    "end": "1471090"
  },
  {
    "text": "authorization so if it has denies statements if you just want to deny anybody from using certain regions you",
    "start": "1471090",
    "end": "1478470"
  },
  {
    "text": "would put that in your service control policy and in every authorization that policy would come into play and you know",
    "start": "1478470",
    "end": "1485190"
  },
  {
    "text": "a deny if we encounter a deny anywhere in your policies the action gets denied",
    "start": "1485190",
    "end": "1491220"
  },
  {
    "text": "so it's a good thing to know about as you start moving up a level if your job is to secure an entire organization you",
    "start": "1491220",
    "end": "1497040"
  },
  {
    "text": "know go look at service control policies and as a matter of fact we just launched we just launched the ability to to look",
    "start": "1497040",
    "end": "1506160"
  },
  {
    "text": "at your historical usage of various services across your organization that's",
    "start": "1506160",
    "end": "1511560"
  },
  {
    "text": "in the IAM console you look at the left rail organizations it's a good thing to look at is you're trying to figure out what service control policies - right",
    "start": "1511560",
    "end": "1519230"
  },
  {
    "text": "okay so that's what you need to know to do permissions on your cloud environment",
    "start": "1519230",
    "end": "1524930"
  },
  {
    "text": "let's talk about your data right because you know because your security people",
    "start": "1524930",
    "end": "1531480"
  },
  {
    "text": "you know that you should be encrypting your data and our service for doing that is called KMS key management service kms",
    "start": "1531480",
    "end": "1539210"
  },
  {
    "text": "for own one on that it encrypts and decrypts that's what it does all day long and as a matter of fact what you",
    "start": "1539210",
    "end": "1548460"
  },
  {
    "text": "need to know you don't even need to know how to do that because about I just counted this morning I",
    "start": "1548460",
    "end": "1555660"
  },
  {
    "text": "think it was like 50 ish AWS services have integrations with kms where you can",
    "start": "1555660",
    "end": "1560850"
  },
  {
    "text": "use kms to encrypt your data and the service takes care of all of the Mechanics for you so this is actually",
    "start": "1560850",
    "end": "1569610"
  },
  {
    "text": "pretty simple and I'm just gonna go through kind of what your is so really what you need to know is what you're",
    "start": "1569610",
    "end": "1575040"
  },
  {
    "text": "looking for is you're using a service that's going to hold some of your data look for the kms integration I'll show",
    "start": "1575040",
    "end": "1581160"
  },
  {
    "text": "you an example oh yeah a little bit about how kms works you can tune out the next slide if you don't want a bunch of",
    "start": "1581160",
    "end": "1587160"
  },
  {
    "text": "fiddly crypto stuff but the thing is kms has these two AP is encrypt and decrypt they can be used to encrypt up to 4k now",
    "start": "1587160",
    "end": "1596880"
  },
  {
    "text": "you know now you might be thinking okay 4k for encryption and unless you're kind",
    "start": "1596880",
    "end": "1603090"
  },
  {
    "text": "of I don't know unless you're kind of building the next Twitter or something you might have chunks of data that are bigger than 4k right and the pattern",
    "start": "1603090",
    "end": "1610200"
  },
  {
    "text": "that kms uses for it and again we offer like client SDKs if you're doing this yourself you often don't have to do the",
    "start": "1610200",
    "end": "1616260"
  },
  {
    "text": "heavy lifting we'll help you with that it's called envelope encryption kms will generate a data key for you a symmetric",
    "start": "1616260",
    "end": "1623250"
  },
  {
    "text": "key that you can use to encrypt your data you can store the encrypted symmetric key along with your data and",
    "start": "1623250",
    "end": "1628560"
  },
  {
    "text": "then when it's time to do time to decrypt it you decrypt the symmetric key so now you have the symmetric key and",
    "start": "1628560",
    "end": "1634320"
  },
  {
    "text": "then you can decrypt sort of the bulk of your data that's how this works the nice thing is that you don't didn't",
    "start": "1634320",
    "end": "1639840"
  },
  {
    "text": "actually need to understand any of this because the service does it for you so let me show you an example I'm creating",
    "start": "1639840",
    "end": "1645900"
  },
  {
    "text": "an s3 bucket over here and you'll notice as I create the s3 bucket I get asked a couple of questions about how to do the",
    "start": "1645900",
    "end": "1652110"
  },
  {
    "text": "encryption so default encryption I'm like yeah I want my data encrypted an s3",
    "start": "1652110",
    "end": "1659040"
  },
  {
    "text": "there's a couple of options here the first option here SS e s3 that is",
    "start": "1659040",
    "end": "1665010"
  },
  {
    "text": "encrypted with an encryption key that's managed by s3 that means I don't see it I don't interact with it hardly even",
    "start": "1665010",
    "end": "1672060"
  },
  {
    "text": "know it's there except s3 is using their own keys to encrypt my data at rest that's what SS s3 SS es 3 means I'm",
    "start": "1672060",
    "end": "1679770"
  },
  {
    "text": "going to talk though about SSE kms the kms integration because that's the pattern that you know that's that's the pattern",
    "start": "1679770",
    "end": "1685130"
  },
  {
    "text": "you'll see repeated across many of our services and you'll notice that I",
    "start": "1685130",
    "end": "1690590"
  },
  {
    "text": "actually if you if you do this you'll notice you actually get two options here you get a this AWS slash service name",
    "start": "1690590",
    "end": "1698419"
  },
  {
    "text": "key over here that's the that's the default that's what these service is",
    "start": "1698419",
    "end": "1703909"
  },
  {
    "text": "called the default kms key that's a key that just automatically gets created in your account it's got a policy on it",
    "start": "1703909",
    "end": "1709909"
  },
  {
    "text": "that unilaterally grants access to all principals in the account because the assumption is if you're using this key",
    "start": "1709909",
    "end": "1715580"
  },
  {
    "text": "that you want everybody inside the account to be able to decrypt it it's keys that are specifically to your account and then you have this other",
    "start": "1715580",
    "end": "1723080"
  },
  {
    "text": "option called a customer managed key a cmk there's another acronym that you",
    "start": "1723080",
    "end": "1729440"
  },
  {
    "text": "might see and a cmk you give it the gooood the identifier of a kms key in",
    "start": "1729440",
    "end": "1734450"
  },
  {
    "text": "your account and if you want sort of fine-grained control over encryption you might use that you would tell kms use",
    "start": "1734450",
    "end": "1741950"
  },
  {
    "text": "that key and then all of your by default all of your put objects will just automatically get encrypted by that key",
    "start": "1741950",
    "end": "1748880"
  },
  {
    "text": "and your get objects will automatically decrypt it on the way back so you don't need to think about the mechanics you",
    "start": "1748880",
    "end": "1754250"
  },
  {
    "text": "assign the key and s3 or any of these other services that integrates with s3 takes care of the rest okay so really it",
    "start": "1754250",
    "end": "1762919"
  },
  {
    "text": "all comes back to I am policy so I over here I've got a principal in my account",
    "start": "1762919",
    "end": "1768559"
  },
  {
    "text": "I've got a role I got permission to call get object against this bucket all right",
    "start": "1768559",
    "end": "1775940"
  },
  {
    "text": "and the bucket the objects in the bucket are encrypted we're encrypted with a customer managed key so what happens",
    "start": "1775940",
    "end": "1783740"
  },
  {
    "text": "here what happens is this gonna work raise your hand if you think it's gonna",
    "start": "1783740",
    "end": "1788809"
  },
  {
    "text": "work raise your everything it's not gonna work raise your hand if you knew that",
    "start": "1788809",
    "end": "1794149"
  },
  {
    "text": "the only reason I would be asking such a question is if it wasn't going to work and that's why you said no you guys are",
    "start": "1794149",
    "end": "1801080"
  },
  {
    "text": "great test takers and I'm so proud of you it is not going to work why won't it work well okay so when I make this API call",
    "start": "1801080",
    "end": "1808970"
  },
  {
    "text": "to s3 to get object well you know s3's first job is to authenticate the request",
    "start": "1808970",
    "end": "1814070"
  },
  {
    "text": "good it's me calling looks up my policies actual get of the wry encrypted bits",
    "start": "1814070",
    "end": "1819470"
  },
  {
    "text": "from s3 I got permission to do that good now s3 also is going to try to do a",
    "start": "1819470",
    "end": "1825800"
  },
  {
    "text": "decrypt operation under my identity in fact if you look at your cloud trail if you look at your audit log of calls",
    "start": "1825800",
    "end": "1831830"
  },
  {
    "text": "you'll see that that call was actually made by you even though you never directly initiated it we're gonna try to",
    "start": "1831830",
    "end": "1837980"
  },
  {
    "text": "make that call against that's three guess what this policy says nothing at all about us about kms right and you",
    "start": "1837980",
    "end": "1845840"
  },
  {
    "text": "know the rules of I am is that if I have a deny anywhere it's denied if there are",
    "start": "1845840",
    "end": "1851450"
  },
  {
    "text": "no denies and I have a low-low anywhere it's allowed and if nobody says anything about it it's denied well nobody said",
    "start": "1851450",
    "end": "1857930"
  },
  {
    "text": "anything about kms I don't have permission to decrypt it my get object is going to fail how do I fix this",
    "start": "1857930",
    "end": "1865220"
  },
  {
    "text": "well the color also needs to have permission to the specific key being",
    "start": "1865220",
    "end": "1871220"
  },
  {
    "text": "used here and now both of these calls are going to succeed and again s3 takes",
    "start": "1871220",
    "end": "1876230"
  },
  {
    "text": "care of the decryption mechanics for us the nice thing about that default key that AWS / s3 key is that you wouldn't",
    "start": "1876230",
    "end": "1882290"
  },
  {
    "text": "actually need that because the key is unilaterally granting you access but if you're using a customer manage key just remember that for anybody who's going to",
    "start": "1882290",
    "end": "1890240"
  },
  {
    "text": "read the data it needs permission not only to the original service but also to the key to decrypt the data that's",
    "start": "1890240",
    "end": "1897290"
  },
  {
    "text": "really all you need to know to encrypt your data in AWS finally we'll go into a",
    "start": "1897290",
    "end": "1902540"
  },
  {
    "text": "slightly different topic networking VPC virtual private cloud for one one on",
    "start": "1902540",
    "end": "1909920"
  },
  {
    "text": "this is whenever you are running infrastructure in AWS like your own applications databases other sorts of",
    "start": "1909920",
    "end": "1917900"
  },
  {
    "text": "other sorts of processes your own infrastructure in AWS is gonna run in this network called a V PC and from a",
    "start": "1917900",
    "end": "1925910"
  },
  {
    "text": "security standpoint your concern is you know least privileged for connectivity",
    "start": "1925910",
    "end": "1931520"
  },
  {
    "text": "essentially you want you you want the connectivity that your applications need that your infrastructure needs and you",
    "start": "1931520",
    "end": "1937130"
  },
  {
    "text": "don't want any other kind of connectivity because although you're also doing your also you also have good",
    "start": "1937130",
    "end": "1942590"
  },
  {
    "text": "security practices at your application level and all of your you know all of your services are you know all of your",
    "start": "1942590",
    "end": "1948530"
  },
  {
    "text": "services use T in order to talk to even though you're doing everything else right you also want to have least privilege at multiple",
    "start": "1948530",
    "end": "1954700"
  },
  {
    "text": "layers so that includes your network connectivity so what builders need to know here",
    "start": "1954700",
    "end": "1961510"
  },
  {
    "text": "actually networking I found with my customers that networking is can be sort",
    "start": "1961510",
    "end": "1966910"
  },
  {
    "text": "of a daunting can feel sort of like a daunting thing it feels like a domain unto itself the nice thing about VPC is",
    "start": "1966910",
    "end": "1974530"
  },
  {
    "text": "it makes these concepts very accessible especially the security parts of VPC they're quite straightforward and not",
    "start": "1974530",
    "end": "1981820"
  },
  {
    "text": "that hard to wrap your head around so let's do the builders 401 1 on V PC AWS",
    "start": "1981820",
    "end": "1987960"
  },
  {
    "text": "many regions around the world adding regions all the time and you know",
    "start": "1987960",
    "end": "1993700"
  },
  {
    "text": "if you work with AWS for a while you know that we take our regional isolation",
    "start": "1993700",
    "end": "1998799"
  },
  {
    "text": "very seriously so you know you're talking to a service like ec2 in the US one region our Dublin region and you're",
    "start": "1998799",
    "end": "2005790"
  },
  {
    "text": "talking to ec2 and say our ap southeast to Sydney region sure it's running the",
    "start": "2005790",
    "end": "2010799"
  },
  {
    "text": "same software it's the same ec2 but it's totally separate instances of that ec2 service so we have these regions they're",
    "start": "2010799",
    "end": "2017790"
  },
  {
    "text": "isolated from one another and the end these regions within each region we have",
    "start": "2017790",
    "end": "2023309"
  },
  {
    "text": "further levels of isolate of isolation called availability zones you may have heard us talk about that it's basically",
    "start": "2023309",
    "end": "2029520"
  },
  {
    "text": "a showing you a showing you kind of our fault domains within our region separate",
    "start": "2029520",
    "end": "2034770"
  },
  {
    "text": "separate data centers separate powers separate networking etc we show you this so that you can spread your eggs across",
    "start": "2034770",
    "end": "2041309"
  },
  {
    "text": "multiple baskets as you deploy into our network so you can use this information",
    "start": "2041309",
    "end": "2046650"
  },
  {
    "text": "to build for high availability so what's your V PC your V PC is your network in a",
    "start": "2046650",
    "end": "2052470"
  },
  {
    "text": "particular region and you have control over a lot of things in the V PC most notably the IP address range that your V",
    "start": "2052470",
    "end": "2058830"
  },
  {
    "text": "PC sits on so a very common IP address range to choose for V PC which we have done here is 10.000 slash 16 that's",
    "start": "2058830",
    "end": "2067290"
  },
  {
    "text": "networking ease classless inter-domain routing notation for 10.0 dots on thing that's something that's what this that's",
    "start": "2067290",
    "end": "2073290"
  },
  {
    "text": "what this IP range is and as you can see my V PC spans all of the availability",
    "start": "2073290",
    "end": "2078628"
  },
  {
    "text": "zones because this is how I can run in structure in my network using all of these availability zones in the region",
    "start": "2078629",
    "end": "2085450"
  },
  {
    "text": "now further subdividing my VP see I subdivide my VP C into sub Network",
    "start": "2085450",
    "end": "2091790"
  },
  {
    "text": "subnets sub ranges of this IP address space you'll notice that called some of",
    "start": "2091790",
    "end": "2097460"
  },
  {
    "text": "them private and some of them public I'll explain what those words mean in a little while but you'll see that these sub networks they exist each of them",
    "start": "2097460",
    "end": "2104360"
  },
  {
    "text": "exists within an availability zone I have multiple of them multiple within an availability zone and they're each carve",
    "start": "2104360",
    "end": "2110060"
  },
  {
    "text": "out a space in my in inside my V PC IP address range and now once I have",
    "start": "2110060",
    "end": "2116420"
  },
  {
    "text": "subnets I can deploy infrastructure in there and I'll tell you what I'm showing you over here I'm showing you a service",
    "start": "2116420",
    "end": "2122300"
  },
  {
    "text": "that has a network load balancer a layer for a load balancer that's publicly",
    "start": "2122300",
    "end": "2128390"
  },
  {
    "text": "accessible because I'm going to have I'm gonna have my customers out and out on the internet calling my service and they",
    "start": "2128390",
    "end": "2134750"
  },
  {
    "text": "and they get load balance to my application running on AC to instances and these ec2 instances to serve",
    "start": "2134750",
    "end": "2140480"
  },
  {
    "text": "requests they're querying a database also in my network that's that's what you're seeing here ok so that's what",
    "start": "2140480",
    "end": "2146390"
  },
  {
    "text": "goes in a V PC all this stuff is my infrastructure so it goes in my VP see it has IP address ranges in my V PC if",
    "start": "2146390",
    "end": "2155300"
  },
  {
    "text": "you understand nothing else about V PC networking as a security person I want",
    "start": "2155300",
    "end": "2163370"
  },
  {
    "text": "you to come away understanding security groups and how to do them it's a very straightforward concept so what is a",
    "start": "2163370",
    "end": "2171650"
  },
  {
    "text": "security group a security group for those of you with a little bit of network background and don't worry if you don't have it for the their stateful",
    "start": "2171650",
    "end": "2178190"
  },
  {
    "text": "firewalls that's what they are they have ingress rules they have egress rules they're stateful so they connect they",
    "start": "2178190",
    "end": "2183710"
  },
  {
    "text": "track connections if that didn't mean anything to you it's fine I'll give you an example so here is my application",
    "start": "2183710",
    "end": "2191510"
  },
  {
    "text": "that I just described to you and there's actually you know from a security standpoint from a connectivity",
    "start": "2191510",
    "end": "2196760"
  },
  {
    "text": "standpoint there's really sort of three classes of things in here three groups I've got the load balancers I've got the",
    "start": "2196760",
    "end": "2205550"
  },
  {
    "text": "application running on ec2 and I've got the database and each of these groups like in English",
    "start": "2205550",
    "end": "2212519"
  },
  {
    "text": "I can kind of describe to you what connectivity I expect on for each of these groups right the network load",
    "start": "2212519",
    "end": "2219059"
  },
  {
    "text": "balancer I want HTTP traffic from everywhere because my customers are everywhere so I want you know I want",
    "start": "2219059",
    "end": "2224880"
  },
  {
    "text": "their traffic on that specific port these ec2 instances well you know I",
    "start": "2224880",
    "end": "2230249"
  },
  {
    "text": "probably want access you know certainly need access on whatever port the application is running here from the",
    "start": "2230249",
    "end": "2235890"
  },
  {
    "text": "load balancer and you know what it probably also have some other rules like if I'm going to be allowing SSH access",
    "start": "2235890",
    "end": "2241769"
  },
  {
    "text": "from Bastian's maybe not in this picture I have a set of SSH bastions there in a security group with a you know that I'm",
    "start": "2241769",
    "end": "2248730"
  },
  {
    "text": "allowing traffic in their databases well the databases are expecting traffic on",
    "start": "2248730",
    "end": "2255089"
  },
  {
    "text": "you know let's say they're running my sequel so port 3306 they're expecting traffic from the application and maybe",
    "start": "2255089",
    "end": "2261239"
  },
  {
    "text": "for many other processes that are running in my network or elsewhere that need to get into the database okay so",
    "start": "2261239",
    "end": "2268289"
  },
  {
    "text": "what I just described in words those are your security groups and that's how you do least privilege you write groups",
    "start": "2268289",
    "end": "2274559"
  },
  {
    "text": "about the ingress traffic that you're expecting and that's pretty much it so over here for this first security group",
    "start": "2274559",
    "end": "2281489"
  },
  {
    "text": "I would write a rule that looks like this and each of these groups just for simplicity's sake I'm gonna give them only one rule but you're you can have",
    "start": "2281489",
    "end": "2288989"
  },
  {
    "text": "multiple rules you can too many rules on a security group and I'm showing you only ingress inbound rules but there's",
    "start": "2288989",
    "end": "2296249"
  },
  {
    "text": "also outbound rules are also available if you're trying to limit what kinds of outbound connections things can initiate",
    "start": "2296249",
    "end": "2301710"
  },
  {
    "text": "these are stateful and what that means is that if the connection was allowed in it's tracking the connection so the",
    "start": "2301710",
    "end": "2307349"
  },
  {
    "text": "replied traffic like the you know the act to the syn is allowed to is allowed to go back because the connections",
    "start": "2307349",
    "end": "2313289"
  },
  {
    "text": "already been established okay so HTTP for for port 443 I have this",
    "start": "2313289",
    "end": "2319890"
  },
  {
    "text": "open to the world 0 dot 0 dot 0 / 0 that's exactly my intention I don't have",
    "start": "2319890",
    "end": "2325319"
  },
  {
    "text": "other ports open but I am how I do have it open to the world so the groups at my",
    "start": "2325319",
    "end": "2330359"
  },
  {
    "text": "load balancers and that's how it looks okay what about these these instances on",
    "start": "2330359",
    "end": "2337589"
  },
  {
    "text": "which my application is running I'm expecting traffic on my application port let's say it's eight four four three I'm",
    "start": "2337589",
    "end": "2343740"
  },
  {
    "text": "expecting traffic only from the group that the load balancers are in so I can",
    "start": "2343740",
    "end": "2349050"
  },
  {
    "text": "refer to this other security group by reference I'm not trying to juggle a list of IP addresses here so one",
    "start": "2349050",
    "end": "2354990"
  },
  {
    "text": "security group can let in another security group and then finally the database the same exact story except",
    "start": "2354990",
    "end": "2360030"
  },
  {
    "text": "they're letting in the ec2 instances so always whenever you're launching so the",
    "start": "2360030",
    "end": "2367380"
  },
  {
    "text": "pattern would look for is whenever you're launching something that's going to go into your V PC the AWS service",
    "start": "2367380",
    "end": "2373859"
  },
  {
    "text": "that you're working with is going to ask you about security groups and that's a time for you to ask the question okay",
    "start": "2373859",
    "end": "2381960"
  },
  {
    "text": "what traffic am I expecting in and on what port and to write a specific security group for that and launch whatever infrastructure that is into",
    "start": "2381960",
    "end": "2388500"
  },
  {
    "text": "that group so that's the pattern to look for here okay so that was if you",
    "start": "2388500",
    "end": "2394830"
  },
  {
    "text": "understood one thing it was gonna be security groups big you want to understand two things about networking all right we'll do routing okay",
    "start": "2394830",
    "end": "2403160"
  },
  {
    "text": "routing honestly like honestly if you get your security groups right your network is secure because security",
    "start": "2403160",
    "end": "2409170"
  },
  {
    "text": "groups work right if you don't have an inbound rule for a connection and someone tries to initiate a connection",
    "start": "2409170",
    "end": "2414270"
  },
  {
    "text": "to you it's not going it's it's not going to succeed but it is often the",
    "start": "2414270",
    "end": "2419430"
  },
  {
    "text": "case that you want parts of your network to be what we call public and parts to be private now don't get the wrong idea",
    "start": "2419430",
    "end": "2424950"
  },
  {
    "text": "from the word public the word public doesn't mean that it is exposed to the Internet it doesn't it's not exposed to",
    "start": "2424950",
    "end": "2431339"
  },
  {
    "text": "the Internet unless you wrote a security group that exposes it to the Internet rather it has precisely it has a route",
    "start": "2431339",
    "end": "2439950"
  },
  {
    "text": "to the to an Internet gateway so but",
    "start": "2439950",
    "end": "2445109"
  },
  {
    "text": "let's start with these private subnets well private means in this terminology is does not have a route to the Internet",
    "start": "2445109",
    "end": "2451650"
  },
  {
    "text": "and you know and the infrastructure down here does not have publicly routable IP addresses it only has IP addresses that",
    "start": "2451650",
    "end": "2458070"
  },
  {
    "text": "are routable within the VPC so in VPC we have this construct called a route table",
    "start": "2458070",
    "end": "2463619"
  },
  {
    "text": "a route table is simply a list of rules that packets match as they're getting routed",
    "start": "2463619",
    "end": "2469260"
  },
  {
    "text": "and you'll notice that this route table for my private subnet it has only one rule here and this rule is present on",
    "start": "2469260",
    "end": "2474900"
  },
  {
    "text": "every this rule is present on every subnet everywhere it says ten dot 0 dot",
    "start": "2474900",
    "end": "2480060"
  },
  {
    "text": "0 slash 6070 traffic bound for my V PC local anything that happens in my V PC",
    "start": "2480060",
    "end": "2487230"
  },
  {
    "text": "stays in my V PC you'll notice that there are no other routes in this route table which means that anybody tries to",
    "start": "2487230",
    "end": "2492780"
  },
  {
    "text": "send a packet to anywhere else and it'll be black hold because there's no route for it if there's no route for it it has",
    "start": "2492780",
    "end": "2498570"
  },
  {
    "text": "nowhere to go ok so what that means is that you know I",
    "start": "2498570",
    "end": "2503820"
  },
  {
    "text": "don't expect anything down here to initiate a connection to the world or to even receive a connection from the world",
    "start": "2503820",
    "end": "2509640"
  },
  {
    "text": "and if they do that traffic will be black hold so that's a good sort of second layer of network security",
    "start": "2509640",
    "end": "2516119"
  },
  {
    "text": "protection now for my public subnets I actually do want that second route because my network load balancers I",
    "start": "2516119",
    "end": "2523380"
  },
  {
    "text": "intend for them to be on the internet so I have second route a second route here 1000 0/0 that means everything and that",
    "start": "2523380",
    "end": "2531810"
  },
  {
    "text": "traffic is going to go to an IG W Internet gateway internet gateway gateway to the internet with a route",
    "start": "2531810",
    "end": "2538589"
  },
  {
    "text": "like that anything in my public subnets that has a publicly routable IP address on it the network load balancers do can",
    "start": "2538589",
    "end": "2546330"
  },
  {
    "text": "get back and forth to the internet now there's actually a third option I'm not going to talk about in detail here but",
    "start": "2546330",
    "end": "2552210"
  },
  {
    "text": "one you should know about if you're doing this setting up public and private subnets if the private subnets need",
    "start": "2552210",
    "end": "2557339"
  },
  {
    "text": "outbound internet access just you don't want in about inbound internet access there's a third option here called a NAT",
    "start": "2557339",
    "end": "2562650"
  },
  {
    "text": "gateway you can look this up in our documentation it's very easy to set up we manage network address translation",
    "start": "2562650",
    "end": "2568290"
  },
  {
    "text": "NAT for you if you know what that means you can you know go and set that up but",
    "start": "2568290",
    "end": "2574349"
  },
  {
    "text": "you know what there's a lot of AWS resources a lot of AWS services that you're gonna find aren't running in your",
    "start": "2574349",
    "end": "2581400"
  },
  {
    "text": "V PC I have a couple of examples up here but actually lots and lots of AWS",
    "start": "2581400",
    "end": "2586440"
  },
  {
    "text": "services this endpoint that you call like if you if you go and resolve the DNS name like over here I've resolved",
    "start": "2586440",
    "end": "2593310"
  },
  {
    "text": "the DNS name for cloud watch logs so that's where anytime I make a request through our SDK through our command-line",
    "start": "2593310",
    "end": "2599780"
  },
  {
    "text": "interface that's where the request is going you'll notice that that IP address",
    "start": "2599780",
    "end": "2605119"
  },
  {
    "text": "is not in your V PC it doesn't start with 10.0 okay so how we're gonna get",
    "start": "2605119",
    "end": "2612770"
  },
  {
    "text": "connectivity to that from right we just got through talking about how in our private subnets there's no route to the",
    "start": "2612770",
    "end": "2618650"
  },
  {
    "text": "internet right now you can make a route to a NAT gateway and that'll work but you know you might reasonably ask the",
    "start": "2618650",
    "end": "2625550"
  },
  {
    "text": "question why do I need a route ability to the internet just to talk to my own my own stuff in AWS services so and you",
    "start": "2625550",
    "end": "2635690"
  },
  {
    "text": "know this comes up all the time for example here on this picture I'm running an application on ec2 cloud watch offers",
    "start": "2635690",
    "end": "2644210"
  },
  {
    "text": "this great agent that you can run on your ec2 agents that will just take slurp up your logs from a location on",
    "start": "2644210",
    "end": "2650150"
  },
  {
    "text": "disk and send it to cloud watch logs where you can do all kinds of advanced analytics to it it's it's really a great",
    "start": "2650150",
    "end": "2655400"
  },
  {
    "text": "way to do your application logging but of course that agent is gonna be making API calls to cloud watch logs so without",
    "start": "2655400",
    "end": "2661580"
  },
  {
    "text": "internet access how is it going to get there well the answer to that is VPC endpoint a long list of our AWS services",
    "start": "2661580",
    "end": "2670220"
  },
  {
    "text": "support this mode of connectivity and the way it works for the way it works for nearly all of them s3 and DynamoDB",
    "start": "2670220",
    "end": "2677119"
  },
  {
    "text": "work a little bit differently than what you're seeing in this picture but the effect is the same and you'll quickly get the hang of how those work as well",
    "start": "2677119",
    "end": "2683630"
  },
  {
    "text": "but you know cloud watch logs and all of our other VPC endpoint services except",
    "start": "2683630",
    "end": "2689119"
  },
  {
    "text": "for s3 and DynamoDB support what they'll do is they'll plant endpoints which sit",
    "start": "2689119",
    "end": "2695750"
  },
  {
    "text": "at IP addresses in your V PC so therefore now your local only route is going to work it's going to get the",
    "start": "2695750",
    "end": "2701180"
  },
  {
    "text": "packet there and in fact it even overrides the DNS name for cloud watch",
    "start": "2701180",
    "end": "2707570"
  },
  {
    "text": "logs so that it resolves to these addresses and so now when your cloud watch log agents is trying to slurp your",
    "start": "2707570",
    "end": "2713630"
  },
  {
    "text": "logs into cloud wash logs it's going to work and like everything else that launches in your interior VP so you get",
    "start": "2713630",
    "end": "2719540"
  },
  {
    "text": "asked about security groups and subnets so typically when I'm launching my V PC",
    "start": "2719540",
    "end": "2725510"
  },
  {
    "text": "endpoints I create a security group for them that allows typical the whole VPC access to port 443 right",
    "start": "2725510",
    "end": "2732680"
  },
  {
    "text": "because I want my whole VPC able to talk to cloud watch log so that's that's the single rule I would write and for for a",
    "start": "2732680",
    "end": "2739580"
  },
  {
    "text": "growing set currently 13 of our V PC endpoint services there's actually even",
    "start": "2739580",
    "end": "2744950"
  },
  {
    "text": "an integration with iam that works here what it lets what this integration lets you do is it lets you use your network",
    "start": "2744950",
    "end": "2751910"
  },
  {
    "text": "as a security perimeter it's called V PC endpoint policies so what I've done here which is what you're",
    "start": "2751910",
    "end": "2758030"
  },
  {
    "text": "looking at here is yet another iam policy except it's not attached to a principal and it's not attached to a",
    "start": "2758030",
    "end": "2763700"
  },
  {
    "text": "resource and it's not attached to an organization it's attached to a network this is network as security perimeter",
    "start": "2763700",
    "end": "2769400"
  },
  {
    "text": "here and what you see here now one thing you should know about this policy I'm",
    "start": "2769400",
    "end": "2774410"
  },
  {
    "text": "not granting access to anybody to do anything this is a this is a boundary this is a Mac what I'm saying is the",
    "start": "2774410",
    "end": "2780650"
  },
  {
    "text": "maximum permissions that can be obtained by anybody who calls cloud wash logs through this endpoint is this so what is",
    "start": "2780650",
    "end": "2788060"
  },
  {
    "text": "this doing here well this got a new condition that you haven't seen yet principal org ID that means the",
    "start": "2788060",
    "end": "2793160"
  },
  {
    "text": "principal must belong to this organization and what this policy means that in this network in this network the",
    "start": "2793160",
    "end": "2800060"
  },
  {
    "text": "only cloud watch logs calls that are gonna get made our principals in my",
    "start": "2800060",
    "end": "2805580"
  },
  {
    "text": "organization calling you know log groups that are calling log groups that are in",
    "start": "2805580",
    "end": "2811100"
  },
  {
    "text": "this particular account and you can hang all kinds of security invariants off of your network like this it helps to keep",
    "start": "2811100",
    "end": "2817700"
  },
  {
    "text": "them simple but this is a very common one you know where you limit where you say like I'm gonna make sure that in",
    "start": "2817700",
    "end": "2823160"
  },
  {
    "text": "this network it's only the set of colors that I expect to be using my network",
    "start": "2823160",
    "end": "2829030"
  },
  {
    "text": "alright so this kind of brings us to the end so what do we talk about here we talked about how you can learn a few",
    "start": "2829030",
    "end": "2834320"
  },
  {
    "text": "patterns and secure everything in AWS we talked about I am what that's for how",
    "start": "2834320",
    "end": "2841250"
  },
  {
    "text": "identities make AWS calls and how to read and write their policies over here we talked about how you protect your",
    "start": "2841250",
    "end": "2846530"
  },
  {
    "text": "data and how kind of how easy it is like what you look for in these AWS services that are integrated with kms and then",
    "start": "2846530",
    "end": "2852680"
  },
  {
    "text": "finally we talked about if you know nothing else about networking you know about security groups and routing now so",
    "start": "2852680",
    "end": "2857990"
  },
  {
    "text": "what I want you to do is go back go back home use these patterns",
    "start": "2857990",
    "end": "2865730"
  },
  {
    "text": "apply these patterns to secure your environment I hope you come away from here able to move a little bit faster on",
    "start": "2865730",
    "end": "2872119"
  },
  {
    "text": "security than you were before thank you so much for coming out here today I hope you have a great rest of the conference",
    "start": "2872119",
    "end": "2877849"
  },
  {
    "text": "here thank you so much",
    "start": "2877849",
    "end": "2880839"
  }
]