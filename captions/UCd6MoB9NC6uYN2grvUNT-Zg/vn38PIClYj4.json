[
  {
    "start": "0",
    "end": "25000"
  },
  {
    "text": "[Music]",
    "start": "650",
    "end": "8550"
  },
  {
    "text": "[Applause]",
    "start": "8550",
    "end": "9290"
  },
  {
    "text": "[Music]",
    "start": "9290",
    "end": "13650"
  },
  {
    "text": "most people call me hoots at Starbucks",
    "start": "13650",
    "end": "16650"
  },
  {
    "text": "for some reason they decided to call me",
    "start": "16650",
    "end": "18330"
  },
  {
    "text": "Steve I guess that's what you get for",
    "start": "18330",
    "end": "20430"
  },
  {
    "text": "ordering pumpkin spice lattes so first",
    "start": "20430",
    "end": "24600"
  },
  {
    "text": "of all what is fields great some people",
    "start": "24600",
    "end": "25890"
  },
  {
    "start": "25000",
    "end": "48000"
  },
  {
    "text": "don't know what that is we're",
    "start": "25890",
    "end": "27449"
  },
  {
    "text": "essentially an eyewear company that",
    "start": "27449",
    "end": "29400"
  },
  {
    "text": "sells glasses that mitigate the negative",
    "start": "29400",
    "end": "31679"
  },
  {
    "text": "effects of looking at your screen",
    "start": "31679",
    "end": "33750"
  },
  {
    "text": "we essentially filter the blue light",
    "start": "33750",
    "end": "35969"
  },
  {
    "text": "that comes from your devices and it",
    "start": "35969",
    "end": "38460"
  },
  {
    "text": "makes it easier for you to work on your",
    "start": "38460",
    "end": "39809"
  },
  {
    "text": "screen all day you don't get any blurry",
    "start": "39809",
    "end": "41550"
  },
  {
    "text": "vision headaches sleep disturbances and",
    "start": "41550",
    "end": "44760"
  },
  {
    "text": "they're actually really cool looking to",
    "start": "44760",
    "end": "46860"
  },
  {
    "text": "wear so I'm going to talk to you today",
    "start": "46860",
    "end": "49260"
  },
  {
    "text": "about why we decided to move to Aurora",
    "start": "49260",
    "end": "51719"
  },
  {
    "text": "and kind of the story behind how that",
    "start": "51719",
    "end": "54090"
  },
  {
    "text": "all happened the troubles that we went",
    "start": "54090",
    "end": "56309"
  },
  {
    "text": "through to the lessons that we learned",
    "start": "56309",
    "end": "59160"
  },
  {
    "text": "handling fail overs figuring out what",
    "start": "59160",
    "end": "61710"
  },
  {
    "text": "type of instances you need and then",
    "start": "61710",
    "end": "64290"
  },
  {
    "text": "finally going over and optimizing and",
    "start": "64290",
    "end": "67350"
  },
  {
    "text": "figuring out what a better way is of",
    "start": "67350",
    "end": "69360"
  },
  {
    "text": "making our infrastructure more reliable",
    "start": "69360",
    "end": "71810"
  },
  {
    "text": "so we decided to go to Aurora because it",
    "start": "71810",
    "end": "75509"
  },
  {
    "start": "73000",
    "end": "218000"
  },
  {
    "text": "was just by default much faster than my",
    "start": "75509",
    "end": "78210"
  },
  {
    "text": "sequel and we started to scale up and we",
    "start": "78210",
    "end": "80250"
  },
  {
    "text": "started to see our queries start to slow",
    "start": "80250",
    "end": "81930"
  },
  {
    "text": "down so we looked at other solutions",
    "start": "81930",
    "end": "83880"
  },
  {
    "text": "that would mitigate that effect we",
    "start": "83880",
    "end": "87420"
  },
  {
    "text": "looked at going to no sequel but our",
    "start": "87420",
    "end": "90150"
  },
  {
    "text": "data wasn't exactly very lookup oriented",
    "start": "90150",
    "end": "92460"
  },
  {
    "text": "it was very structured so going to",
    "start": "92460",
    "end": "95009"
  },
  {
    "text": "Aurora seemed like the next best option",
    "start": "95009",
    "end": "97070"
  },
  {
    "text": "it also was very nice with data sizes",
    "start": "97070",
    "end": "100890"
  },
  {
    "text": "you can pretty much provision any size",
    "start": "100890",
    "end": "103049"
  },
  {
    "text": "you want and the database size",
    "start": "103049",
    "end": "105509"
  },
  {
    "text": "increments by 10 gigabytes now my",
    "start": "105509",
    "end": "107880"
  },
  {
    "text": "favorite feature right now is backtrack",
    "start": "107880",
    "end": "110009"
  },
  {
    "text": "if you're doing testing is something you",
    "start": "110009",
    "end": "113159"
  },
  {
    "text": "could just roll back the database by",
    "start": "113159",
    "end": "114990"
  },
  {
    "text": "like X number of hours and go back to",
    "start": "114990",
    "end": "117810"
  },
  {
    "text": "the state that it was originally in so",
    "start": "117810",
    "end": "120780"
  },
  {
    "text": "you could run your tests then roll back",
    "start": "120780",
    "end": "122549"
  },
  {
    "text": "and now you're back to where you were",
    "start": "122549",
    "end": "124590"
  },
  {
    "text": "you don't have to go to a snapshot",
    "start": "124590",
    "end": "125790"
  },
  {
    "text": "reload it and then wait another 40",
    "start": "125790",
    "end": "128369"
  },
  {
    "text": "minutes for that instance to spin up",
    "start": "128369",
    "end": "131480"
  },
  {
    "text": "automatic snapshots",
    "start": "131480",
    "end": "133830"
  },
  {
    "text": "our TS by default has that but it's also",
    "start": "133830",
    "end": "135960"
  },
  {
    "text": "really cool zero downtime patching is",
    "start": "135960",
    "end": "138420"
  },
  {
    "text": "also really cool the asterisk there is",
    "start": "138420",
    "end": "140400"
  },
  {
    "text": "because it's not technically zero",
    "start": "140400",
    "end": "142170"
  },
  {
    "text": "downtime patching as I learned it does",
    "start": "142170",
    "end": "144600"
  },
  {
    "text": "go down for a few seconds depending on",
    "start": "144600",
    "end": "147090"
  },
  {
    "text": "what it's doing it tries to find the",
    "start": "147090",
    "end": "149010"
  },
  {
    "text": "window and where it can kind of figure",
    "start": "149010",
    "end": "151080"
  },
  {
    "text": "out to patch the system and it kind of",
    "start": "151080",
    "end": "153960"
  },
  {
    "text": "takes the system down for about two to",
    "start": "153960",
    "end": "155940"
  },
  {
    "text": "three seconds reloads it up and then it",
    "start": "155940",
    "end": "158430"
  },
  {
    "text": "kind of holds your queries while that is",
    "start": "158430",
    "end": "160320"
  },
  {
    "text": "happening it's extremely cost effective",
    "start": "160320",
    "end": "162660"
  },
  {
    "text": "especially if you're using reserved",
    "start": "162660",
    "end": "164550"
  },
  {
    "text": "instances that's my main key it point is",
    "start": "164550",
    "end": "167730"
  },
  {
    "text": "make sure you use reserved instances",
    "start": "167730",
    "end": "169500"
  },
  {
    "text": "once you figure out the size you need",
    "start": "169500",
    "end": "171120"
  },
  {
    "text": "because that saves you about 45% on your",
    "start": "171120",
    "end": "173850"
  },
  {
    "text": "AWS costs two new things that just came",
    "start": "173850",
    "end": "176790"
  },
  {
    "text": "out server list that's really cool if",
    "start": "176790",
    "end": "179130"
  },
  {
    "text": "you're trying to save on money and if",
    "start": "179130",
    "end": "180780"
  },
  {
    "text": "you have a application that doesn't need",
    "start": "180780",
    "end": "182460"
  },
  {
    "text": "to run 24 hours a day our website needs",
    "start": "182460",
    "end": "185700"
  },
  {
    "text": "to run like every second so I can't",
    "start": "185700",
    "end": "187590"
  },
  {
    "text": "really use doesn't make much sense to",
    "start": "187590",
    "end": "188880"
  },
  {
    "text": "service but if you're running an API or",
    "start": "188880",
    "end": "191220"
  },
  {
    "text": "something that people hit like every 10",
    "start": "191220",
    "end": "194010"
  },
  {
    "text": "minutes it's probably makes sense to try",
    "start": "194010",
    "end": "195660"
  },
  {
    "text": "your service configuration now parallel",
    "start": "195660",
    "end": "198030"
  },
  {
    "text": "queries that's really cool too if you",
    "start": "198030",
    "end": "200640"
  },
  {
    "text": "have something that you're doing a lot",
    "start": "200640",
    "end": "202590"
  },
  {
    "text": "of data analysis for parallel crease can",
    "start": "202590",
    "end": "204990"
  },
  {
    "text": "help you with that you could use you can",
    "start": "204990",
    "end": "206550"
  },
  {
    "text": "do it for like long or low running",
    "start": "206550",
    "end": "207780"
  },
  {
    "text": "queries you don't need to have like a",
    "start": "207780",
    "end": "209190"
  },
  {
    "text": "redshift instance that way you know it",
    "start": "209190",
    "end": "212460"
  },
  {
    "text": "makes it a lot easier for you to just",
    "start": "212460",
    "end": "213780"
  },
  {
    "text": "spin up a read replica and do parallel",
    "start": "213780",
    "end": "216480"
  },
  {
    "text": "queries so migrating to Aurora step one",
    "start": "216480",
    "end": "219690"
  },
  {
    "start": "218000",
    "end": "240000"
  },
  {
    "text": "I'm gonna kind of go through and show",
    "start": "219690",
    "end": "221850"
  },
  {
    "text": "you how easy it is to do this it only",
    "start": "221850",
    "end": "223890"
  },
  {
    "text": "takes about six steps and it takes about",
    "start": "223890",
    "end": "225810"
  },
  {
    "text": "five minutes normally except when I did",
    "start": "225810",
    "end": "229830"
  },
  {
    "text": "this about a year ago this was when",
    "start": "229830",
    "end": "232410"
  },
  {
    "text": "Amazon decided to change their user",
    "start": "232410",
    "end": "234600"
  },
  {
    "text": "interface at the point of me doing my",
    "start": "234600",
    "end": "237000"
  },
  {
    "text": "migration and I was doing this at 3:00",
    "start": "237000",
    "end": "240570"
  },
  {
    "start": "240000",
    "end": "286000"
  },
  {
    "text": "a.m. so when I got up to this step and I",
    "start": "240570",
    "end": "242550"
  },
  {
    "text": "could create instance nothing happened",
    "start": "242550",
    "end": "244800"
  },
  {
    "text": "so I waited about 10 minutes and I",
    "start": "244800",
    "end": "248100"
  },
  {
    "text": "realized that as I press refresh nothing",
    "start": "248100",
    "end": "250290"
  },
  {
    "text": "was still happening so I called up 80s",
    "start": "250290",
    "end": "252240"
  },
  {
    "text": "support and something interesting",
    "start": "252240",
    "end": "254070"
  },
  {
    "text": "happens when you call AWS support at",
    "start": "254070",
    "end": "255870"
  },
  {
    "text": "3:00 a.m. someone in Australia picks up",
    "start": "255870",
    "end": "257730"
  },
  {
    "text": "and the dude was like oh good I'm 8 and",
    "start": "257730",
    "end": "261030"
  },
  {
    "text": "I was like no it is not a good day I'm",
    "start": "261030",
    "end": "263850"
  },
  {
    "text": "talking to you right now",
    "start": "263850",
    "end": "266100"
  },
  {
    "text": "so we went through it and then he told",
    "start": "266100",
    "end": "268390"
  },
  {
    "text": "me that I have to go through the",
    "start": "268390",
    "end": "269920"
  },
  {
    "text": "terminal to actually do this migration",
    "start": "269920",
    "end": "271870"
  },
  {
    "text": "and unlike most developers I know this",
    "start": "271870",
    "end": "274900"
  },
  {
    "text": "is different for most people but I hate",
    "start": "274900",
    "end": "277450"
  },
  {
    "text": "the terminal I'm probably one of the",
    "start": "277450",
    "end": "279460"
  },
  {
    "text": "only people that uses github desktop and",
    "start": "279460",
    "end": "281620"
  },
  {
    "text": "a lot of my employees give me a lot of",
    "start": "281620",
    "end": "284200"
  },
  {
    "text": "slack for that so once you get through",
    "start": "284200",
    "end": "287830"
  },
  {
    "text": "that you'll see that it'll start",
    "start": "287830",
    "end": "290230"
  },
  {
    "text": "creating the instance for you and now",
    "start": "290230",
    "end": "293440"
  },
  {
    "text": "we're wait it takes about 30 to 35",
    "start": "293440",
    "end": "296020"
  },
  {
    "text": "minutes for this to happen so you're",
    "start": "296020",
    "end": "298000"
  },
  {
    "text": "gonna probably need to wait about 30",
    "start": "298000",
    "end": "299650"
  },
  {
    "text": "minutes but the good part about that is",
    "start": "299650",
    "end": "302230"
  },
  {
    "text": "that once that's happening your master",
    "start": "302230",
    "end": "303880"
  },
  {
    "text": "is still up so your application can",
    "start": "303880",
    "end": "305620"
  },
  {
    "text": "still be running you don't have to worry",
    "start": "305620",
    "end": "306970"
  },
  {
    "text": "about taking your application down and",
    "start": "306970",
    "end": "308800"
  },
  {
    "text": "then worrying about you know a downtime",
    "start": "308800",
    "end": "310720"
  },
  {
    "text": "or anything so the key factor here is",
    "start": "310720",
    "end": "314920"
  },
  {
    "start": "313000",
    "end": "331000"
  },
  {
    "text": "that make sure the lag is zero you'll",
    "start": "314920",
    "end": "316900"
  },
  {
    "text": "see that if you look up in log in the",
    "start": "316900",
    "end": "318790"
  },
  {
    "text": "cloud watch area of your thing make sure",
    "start": "318790",
    "end": "320980"
  },
  {
    "text": "that hits zero that's when you know your",
    "start": "320980",
    "end": "322360"
  },
  {
    "text": "replica has matched the master in lag so",
    "start": "322360",
    "end": "326080"
  },
  {
    "text": "it has the same amount of data and the",
    "start": "326080",
    "end": "328060"
  },
  {
    "text": "same rows and queries step four you go",
    "start": "328060",
    "end": "333400"
  },
  {
    "start": "331000",
    "end": "389000"
  },
  {
    "text": "and you select your master instance and",
    "start": "333400",
    "end": "336160"
  },
  {
    "text": "now you can stop it so step five here",
    "start": "336160",
    "end": "341710"
  },
  {
    "text": "you can take the sorry - take what I",
    "start": "341710",
    "end": "345700"
  },
  {
    "text": "meant to say is once you go here stop it",
    "start": "345700",
    "end": "347440"
  },
  {
    "text": "and then over here you can promote this",
    "start": "347440",
    "end": "350860"
  },
  {
    "text": "to the master promote the read replica",
    "start": "350860",
    "end": "354430"
  },
  {
    "text": "the button right over here and that will",
    "start": "354430",
    "end": "358540"
  },
  {
    "text": "make it into a master now a few caveats",
    "start": "358540",
    "end": "361030"
  },
  {
    "text": "to that is make sure you go into your",
    "start": "361030",
    "end": "364090"
  },
  {
    "text": "application and change the end point to",
    "start": "364090",
    "end": "366400"
  },
  {
    "text": "the aurora clusters writer endpoint not",
    "start": "366400",
    "end": "369370"
  },
  {
    "text": "the individual instance of Aurora",
    "start": "369370",
    "end": "371170"
  },
  {
    "text": "because Aurora has individual instances",
    "start": "371170",
    "end": "372880"
  },
  {
    "text": "you don't want to use that endpoint",
    "start": "372880",
    "end": "373900"
  },
  {
    "text": "because if there's a failover as I",
    "start": "373900",
    "end": "376150"
  },
  {
    "text": "learned the hard way it will actually",
    "start": "376150",
    "end": "379870"
  },
  {
    "text": "not change the endpoint for you so you",
    "start": "379870",
    "end": "382480"
  },
  {
    "text": "want to use the writers the Aurora",
    "start": "382480",
    "end": "384790"
  },
  {
    "text": "cluster endpoints and you could see that",
    "start": "384790",
    "end": "386590"
  },
  {
    "text": "in the menus so handling fail overs the",
    "start": "386590",
    "end": "391480"
  },
  {
    "start": "389000",
    "end": "459000"
  },
  {
    "text": "most important thing is make sure you",
    "start": "391480",
    "end": "393250"
  },
  {
    "text": "have your instances and multiple",
    "start": "393250",
    "end": "395230"
  },
  {
    "text": "availability zones and have at least one",
    "start": "395230",
    "end": "398290"
  },
  {
    "text": "or two",
    "start": "398290",
    "end": "398620"
  },
  {
    "text": "to read replicas in each zone now you",
    "start": "398620",
    "end": "400240"
  },
  {
    "text": "can actually do multi regions so it's a",
    "start": "400240",
    "end": "402970"
  },
  {
    "text": "good idea maybe to have another region",
    "start": "402970",
    "end": "404650"
  },
  {
    "text": "if your budget allows that and test this",
    "start": "404650",
    "end": "408580"
  },
  {
    "text": "by promoting one of your read replicas",
    "start": "408580",
    "end": "410680"
  },
  {
    "text": "to master and see what happens make sure",
    "start": "410680",
    "end": "412840"
  },
  {
    "text": "that you're ready for this failover and",
    "start": "412840",
    "end": "414520"
  },
  {
    "text": "another thing I learned the hard way is",
    "start": "414520",
    "end": "416530"
  },
  {
    "text": "that most drivers by default don't",
    "start": "416530",
    "end": "418720"
  },
  {
    "text": "support the Aurora failover",
    "start": "418720",
    "end": "420310"
  },
  {
    "text": "and the reason behind that is that the",
    "start": "420310",
    "end": "423449"
  },
  {
    "text": "the value the CE name of the the",
    "start": "423449",
    "end": "426190"
  },
  {
    "text": "database is still pointing to the master",
    "start": "426190",
    "end": "429040"
  },
  {
    "text": "instance so what you have to do is if",
    "start": "429040",
    "end": "432910"
  },
  {
    "text": "you're doing rails for example there is",
    "start": "432910",
    "end": "435220"
  },
  {
    "text": "a patch that you can use that kind of",
    "start": "435220",
    "end": "438250"
  },
  {
    "text": "goes through and checks the connections",
    "start": "438250",
    "end": "439960"
  },
  {
    "text": "and then tries to figure out what to do",
    "start": "439960",
    "end": "442210"
  },
  {
    "text": "next it'll give you about there will be",
    "start": "442210",
    "end": "444070"
  },
  {
    "text": "about five seconds of downtime but",
    "start": "444070",
    "end": "445570"
  },
  {
    "text": "you'll definitely be back up and running",
    "start": "445570",
    "end": "447250"
  },
  {
    "text": "if you're using go I believe they fix",
    "start": "447250",
    "end": "449590"
  },
  {
    "text": "the issue actually so if you're using",
    "start": "449590",
    "end": "451630"
  },
  {
    "text": "that language you're all set no js' I'm",
    "start": "451630",
    "end": "454240"
  },
  {
    "text": "not sure if they fixed it yet that's",
    "start": "454240",
    "end": "455860"
  },
  {
    "text": "still an issue there as well so you want",
    "start": "455860",
    "end": "459940"
  },
  {
    "text": "to figure out the instance size that",
    "start": "459940",
    "end": "461500"
  },
  {
    "text": "you're going to use because that's kind",
    "start": "461500",
    "end": "463780"
  },
  {
    "text": "of the best way of figuring out what",
    "start": "463780",
    "end": "465639"
  },
  {
    "text": "everything is going to cost and what",
    "start": "465639",
    "end": "466810"
  },
  {
    "text": "you're going to do so think about the",
    "start": "466810",
    "end": "468639"
  },
  {
    "text": "number of connections your database has",
    "start": "468639",
    "end": "471250"
  },
  {
    "text": "from your application most applications",
    "start": "471250",
    "end": "473710"
  },
  {
    "text": "in production environments have a",
    "start": "473710",
    "end": "475240"
  },
  {
    "text": "connection pool so figure out what your",
    "start": "475240",
    "end": "478539"
  },
  {
    "text": "connection pool size is so for example",
    "start": "478539",
    "end": "480820"
  },
  {
    "text": "if you have four application servers",
    "start": "480820",
    "end": "482440"
  },
  {
    "text": "each with a connection pool size of 15",
    "start": "482440",
    "end": "485919"
  },
  {
    "text": "how many connections do you think you",
    "start": "485919",
    "end": "488979"
  },
  {
    "text": "would have any answer is simple Matt 60",
    "start": "488979",
    "end": "492120"
  },
  {
    "text": "so here's the AWS formula for figuring",
    "start": "492120",
    "end": "495849"
  },
  {
    "start": "493000",
    "end": "509000"
  },
  {
    "text": "out the instance size based on the",
    "start": "495849",
    "end": "499120"
  },
  {
    "text": "number of connections you need just",
    "start": "499120",
    "end": "501550"
  },
  {
    "text": "kidding they actually have a nice table",
    "start": "501550",
    "end": "503080"
  },
  {
    "text": "at you could Google it takes about 30",
    "start": "503080",
    "end": "504970"
  },
  {
    "text": "minutes to Google and find that but it's",
    "start": "504970",
    "end": "506680"
  },
  {
    "text": "there now you'll see that T twos",
    "start": "506680",
    "end": "511330"
  },
  {
    "start": "509000",
    "end": "575000"
  },
  {
    "text": "only support a very limited number of",
    "start": "511330",
    "end": "513010"
  },
  {
    "text": "connection and you can go into the",
    "start": "513010",
    "end": "515469"
  },
  {
    "text": "parameter groups and change the max",
    "start": "515469",
    "end": "516940"
  },
  {
    "text": "connection size if you really need to",
    "start": "516940",
    "end": "519550"
  },
  {
    "text": "but I really don't recommend it these",
    "start": "519550",
    "end": "521229"
  },
  {
    "text": "are actually really good numbers to",
    "start": "521229",
    "end": "522909"
  },
  {
    "text": "support the load on the database and",
    "start": "522909",
    "end": "525580"
  },
  {
    "text": "that brings me to my next point is",
    "start": "525580",
    "end": "528550"
  },
  {
    "text": "always use our class instances in",
    "start": "528550",
    "end": "530680"
  },
  {
    "text": "production",
    "start": "530680",
    "end": "531650"
  },
  {
    "text": "they cost a little more but they",
    "start": "531650",
    "end": "533870"
  },
  {
    "text": "definitely support it if your",
    "start": "533870",
    "end": "535279"
  },
  {
    "text": "application starts the scale rapidly I",
    "start": "535279",
    "end": "538190"
  },
  {
    "text": "was being very frugal let's say and",
    "start": "538190",
    "end": "541250"
  },
  {
    "text": "decided to stick with t2 in production",
    "start": "541250",
    "end": "543290"
  },
  {
    "text": "for a while and then what really",
    "start": "543290",
    "end": "546170"
  },
  {
    "text": "happened is that really happens as new",
    "start": "546170",
    "end": "549320"
  },
  {
    "text": "instances started to auto scale they",
    "start": "549320",
    "end": "551860"
  },
  {
    "text": "started to fail and the reason I before",
    "start": "551860",
    "end": "555140"
  },
  {
    "text": "I even got the CloudWatch alerts",
    "start": "555140",
    "end": "558250"
  },
  {
    "text": "customer service started yelling and",
    "start": "558250",
    "end": "560870"
  },
  {
    "text": "screaming that the site is down and that",
    "start": "560870",
    "end": "563800"
  },
  {
    "text": "they can go home now so I was already I",
    "start": "563800",
    "end": "568070"
  },
  {
    "text": "already had two heart attacks and a",
    "start": "568070",
    "end": "569420"
  },
  {
    "text": "stroke by the time",
    "start": "569420",
    "end": "571100"
  },
  {
    "text": "the cloud watch alerts came in so make",
    "start": "571100",
    "end": "575510"
  },
  {
    "text": "sure you do that and what actually",
    "start": "575510",
    "end": "578060"
  },
  {
    "text": "happened is our our application auto",
    "start": "578060",
    "end": "580010"
  },
  {
    "text": "scale to ten ec2 instances and the",
    "start": "580010",
    "end": "582170"
  },
  {
    "text": "connection pool of each instance was",
    "start": "582170",
    "end": "583730"
  },
  {
    "text": "about ten t to only kind of doesn't",
    "start": "583730",
    "end": "587150"
  },
  {
    "text": "support that as you saw earlier and the",
    "start": "587150",
    "end": "589970"
  },
  {
    "text": "other problem was some of our pages",
    "start": "589970",
    "end": "592040"
  },
  {
    "text": "actually took about twenty to thirty",
    "start": "592040",
    "end": "593839"
  },
  {
    "text": "sequel queries to just load that is not",
    "start": "593839",
    "end": "597680"
  },
  {
    "text": "a good way to run a production scale",
    "start": "597680",
    "end": "599570"
  },
  {
    "text": "application it's something I wasn't",
    "start": "599570",
    "end": "600950"
  },
  {
    "text": "really paying attention to I kind of saw",
    "start": "600950",
    "end": "602750"
  },
  {
    "text": "that but it was just like alright we'll",
    "start": "602750",
    "end": "604100"
  },
  {
    "text": "deal with it later until later came",
    "start": "604100",
    "end": "606170"
  },
  {
    "text": "along and we had about two to three",
    "start": "606170",
    "end": "607400"
  },
  {
    "text": "thousand people on our site at one point",
    "start": "607400",
    "end": "610300"
  },
  {
    "text": "so finally performance bottlenecks",
    "start": "610300",
    "end": "612890"
  },
  {
    "start": "611000",
    "end": "644000"
  },
  {
    "text": "you're going to need to use a tool New",
    "start": "612890",
    "end": "615740"
  },
  {
    "text": "Relic is a really great tool they kind",
    "start": "615740",
    "end": "617779"
  },
  {
    "text": "of go through and they show you some of",
    "start": "617779",
    "end": "620630"
  },
  {
    "text": "your controllers and application areas",
    "start": "620630",
    "end": "623000"
  },
  {
    "text": "where it's kind of lagging and you'll",
    "start": "623000",
    "end": "624560"
  },
  {
    "text": "see for us it lags right now in the",
    "start": "624560",
    "end": "627140"
  },
  {
    "text": "production controller now that's kind of",
    "start": "627140",
    "end": "630020"
  },
  {
    "text": "this page where it kind of loads all the",
    "start": "630020",
    "end": "631610"
  },
  {
    "text": "glasses and you'll see they have",
    "start": "631610",
    "end": "633200"
  },
  {
    "text": "different colors so how can we fix that",
    "start": "633200",
    "end": "636050"
  },
  {
    "text": "well you'll see that if you click into",
    "start": "636050",
    "end": "638690"
  },
  {
    "text": "it there's a bunch of queries that",
    "start": "638690",
    "end": "640130"
  },
  {
    "text": "happen that are really slow now we have",
    "start": "640130",
    "end": "642290"
  },
  {
    "text": "two options if you know a query doesn't",
    "start": "642290",
    "end": "645260"
  },
  {
    "start": "644000",
    "end": "662000"
  },
  {
    "text": "change you should probably cache it so",
    "start": "645260",
    "end": "648380"
  },
  {
    "text": "if you're doing something like loading a",
    "start": "648380",
    "end": "650690"
  },
  {
    "text": "page with the same number of products",
    "start": "650690",
    "end": "652520"
  },
  {
    "text": "every time cache that query but if",
    "start": "652520",
    "end": "655640"
  },
  {
    "text": "you're loading a card that someone is",
    "start": "655640",
    "end": "657080"
  },
  {
    "text": "adding and removing things don't cache",
    "start": "657080",
    "end": "658670"
  },
  {
    "text": "that query that's a bad idea",
    "start": "658670",
    "end": "661660"
  },
  {
    "text": "so queries that",
    "start": "661930",
    "end": "664830"
  },
  {
    "start": "662000",
    "end": "682000"
  },
  {
    "text": "change here's a little code example in",
    "start": "664830",
    "end": "666390"
  },
  {
    "text": "rails you'll see that where cash each",
    "start": "666390",
    "end": "669650"
  },
  {
    "text": "individual property and individual",
    "start": "669650",
    "end": "672240"
  },
  {
    "text": "product value that way when the page",
    "start": "672240",
    "end": "674460"
  },
  {
    "text": "loads it just gets cached and it's a",
    "start": "674460",
    "end": "676560"
  },
  {
    "text": "quick query to our memcache servers it",
    "start": "676560",
    "end": "679440"
  },
  {
    "text": "doesn't even hit our RDS instance the",
    "start": "679440",
    "end": "682620"
  },
  {
    "start": "682000",
    "end": "744000"
  },
  {
    "text": "next step is if you can't cash something",
    "start": "682620",
    "end": "684930"
  },
  {
    "text": "and you really need to simplify it here",
    "start": "684930",
    "end": "687390"
  },
  {
    "text": "are some basic rules first of all every",
    "start": "687390",
    "end": "689700"
  },
  {
    "text": "time I see a select star I just I get",
    "start": "689700",
    "end": "691650"
  },
  {
    "text": "very nervous",
    "start": "691650",
    "end": "692630"
  },
  {
    "text": "don't use select star always restrict to",
    "start": "692630",
    "end": "695700"
  },
  {
    "text": "the number of columns that you really",
    "start": "695700",
    "end": "697140"
  },
  {
    "text": "need and then use aware whenever",
    "start": "697140",
    "end": "699330"
  },
  {
    "text": "possible to restrict the number of rows",
    "start": "699330",
    "end": "701520"
  },
  {
    "text": "that are returns sometimes it's easier",
    "start": "701520",
    "end": "704730"
  },
  {
    "text": "to get things done in multiple queries",
    "start": "704730",
    "end": "706920"
  },
  {
    "text": "and you especially if you could cache",
    "start": "706920",
    "end": "708360"
  },
  {
    "text": "one right if we can cache the cart for",
    "start": "708360",
    "end": "711600"
  },
  {
    "text": "example if we can't catch the whole",
    "start": "711600",
    "end": "712920"
  },
  {
    "text": "query we can't really do it but if we",
    "start": "712920",
    "end": "714420"
  },
  {
    "text": "could cache the product section and then",
    "start": "714420",
    "end": "716010"
  },
  {
    "text": "do a separate query then that kind of",
    "start": "716010",
    "end": "717870"
  },
  {
    "text": "offloads the database load don't use",
    "start": "717870",
    "end": "721110"
  },
  {
    "text": "temporary tables some people say you can",
    "start": "721110",
    "end": "723960"
  },
  {
    "text": "use them with special caveats I just say",
    "start": "723960",
    "end": "725790"
  },
  {
    "text": "don't do it it's a bad idea and then",
    "start": "725790",
    "end": "728850"
  },
  {
    "text": "finally create indexes on the columns",
    "start": "728850",
    "end": "730890"
  },
  {
    "text": "that you frequent the most it's really",
    "start": "730890",
    "end": "733050"
  },
  {
    "text": "important that to make sure that things",
    "start": "733050",
    "end": "735780"
  },
  {
    "text": "if queries that have like order by or",
    "start": "735780",
    "end": "737820"
  },
  {
    "text": "any sort of complex queries that you're",
    "start": "737820",
    "end": "739710"
  },
  {
    "text": "doing that you're constantly doing",
    "start": "739710",
    "end": "741000"
  },
  {
    "text": "lookups make sure to index those columns",
    "start": "741000",
    "end": "743840"
  },
  {
    "text": "other things to do that you could use to",
    "start": "743840",
    "end": "746310"
  },
  {
    "start": "744000",
    "end": "797000"
  },
  {
    "text": "optimize your service is a bunch of",
    "start": "746310",
    "end": "748230"
  },
  {
    "text": "other AWS services for I just talked",
    "start": "748230",
    "end": "750810"
  },
  {
    "text": "about caching alas the cache is a really",
    "start": "750810",
    "end": "753300"
  },
  {
    "text": "way is a really great way to do quick",
    "start": "753300",
    "end": "755070"
  },
  {
    "text": "lookups and cache your SQL queries",
    "start": "755070",
    "end": "758390"
  },
  {
    "text": "elasticsearch is if you have like a",
    "start": "758390",
    "end": "760440"
  },
  {
    "text": "search bar on your application for",
    "start": "760440",
    "end": "762000"
  },
  {
    "text": "example and you're doing a lot of",
    "start": "762000",
    "end": "763170"
  },
  {
    "text": "searching have elastic search kind of",
    "start": "763170",
    "end": "766710"
  },
  {
    "text": "take the information in your database",
    "start": "766710",
    "end": "767940"
  },
  {
    "text": "and store it in elastic search it's a",
    "start": "767940",
    "end": "769920"
  },
  {
    "text": "faster lookup and it also doesn't need",
    "start": "769920",
    "end": "772650"
  },
  {
    "text": "to touch your database and finally if",
    "start": "772650",
    "end": "774960"
  },
  {
    "text": "you're doing analytic stuff if you have",
    "start": "774960",
    "end": "777030"
  },
  {
    "text": "a data team you want to look through",
    "start": "777030",
    "end": "779370"
  },
  {
    "text": "queries that law that run for a long",
    "start": "779370",
    "end": "781230"
  },
  {
    "text": "long period of time I would recommend",
    "start": "781230",
    "end": "783120"
  },
  {
    "text": "using redshift and then obviously if",
    "start": "783120",
    "end": "786510"
  },
  {
    "text": "you're storing images don't put them in",
    "start": "786510",
    "end": "787800"
  },
  {
    "text": "your database that's just that's really",
    "start": "787800",
    "end": "789960"
  },
  {
    "text": "not the best place to put them s3 and",
    "start": "789960",
    "end": "792420"
  },
  {
    "text": "then store a link to s3 in your database",
    "start": "792420",
    "end": "796490"
  },
  {
    "text": "so if you were to actually kind of put",
    "start": "796810",
    "end": "799450"
  },
  {
    "start": "797000",
    "end": "830000"
  },
  {
    "text": "our infrastructure in a little simple",
    "start": "799450",
    "end": "801910"
  },
  {
    "text": "model this is kind of how it would look",
    "start": "801910",
    "end": "803140"
  },
  {
    "text": "like you have your ec2 instances",
    "start": "803140",
    "end": "807210"
  },
  {
    "text": "elasticsearch does all the searching and",
    "start": "807210",
    "end": "809530"
  },
  {
    "text": "that just grab stuff from one of the",
    "start": "809530",
    "end": "810940"
  },
  {
    "text": "read replicas elastic cache sits in",
    "start": "810940",
    "end": "813550"
  },
  {
    "text": "front of Aurora which grabs all the",
    "start": "813550",
    "end": "815470"
  },
  {
    "text": "queries that are don't change over time",
    "start": "815470",
    "end": "818530"
  },
  {
    "text": "and we store all of our images in s3 and",
    "start": "818530",
    "end": "821440"
  },
  {
    "text": "serve them through cloud fronts so",
    "start": "821440",
    "end": "822880"
  },
  {
    "text": "that's optimization that way and then",
    "start": "822880",
    "end": "825790"
  },
  {
    "text": "redshift is for database and analytics",
    "start": "825790",
    "end": "829740"
  },
  {
    "text": "another way you could optimize is kind",
    "start": "829740",
    "end": "832060"
  },
  {
    "start": "830000",
    "end": "871000"
  },
  {
    "text": "of at the edge of your application if",
    "start": "832060",
    "end": "834370"
  },
  {
    "text": "you are doing stuff on web web side of",
    "start": "834370",
    "end": "838360"
  },
  {
    "text": "things or if you're doing an API there's",
    "start": "838360",
    "end": "840790"
  },
  {
    "text": "cloud front and CloudFlare which is not",
    "start": "840790",
    "end": "843580"
  },
  {
    "text": "to be mistaken with cloud front this is",
    "start": "843580",
    "end": "845290"
  },
  {
    "text": "a third party service they are",
    "start": "845290",
    "end": "846850"
  },
  {
    "text": "technically free for like the first I",
    "start": "846850",
    "end": "849040"
  },
  {
    "text": "don't know how many usage but they don't",
    "start": "849040",
    "end": "851770"
  },
  {
    "text": "cost that much to run in a production",
    "start": "851770",
    "end": "853720"
  },
  {
    "text": "environment either I think it's about",
    "start": "853720",
    "end": "855130"
  },
  {
    "text": "100 or 200 hours a month and they kind",
    "start": "855130",
    "end": "857380"
  },
  {
    "text": "of manage all the security optimizations",
    "start": "857380",
    "end": "859930"
  },
  {
    "text": "and DNS for you it's really much easier",
    "start": "859930",
    "end": "862390"
  },
  {
    "text": "to use than cloud front Claflin it's",
    "start": "862390",
    "end": "864670"
  },
  {
    "text": "really cool too but there is a lot of",
    "start": "864670",
    "end": "866770"
  },
  {
    "text": "overhead and managing and faring out",
    "start": "866770",
    "end": "868510"
  },
  {
    "text": "what to do and what to use so after",
    "start": "868510",
    "end": "872830"
  },
  {
    "start": "871000",
    "end": "899000"
  },
  {
    "text": "going through all that you'll see that",
    "start": "872830",
    "end": "874300"
  },
  {
    "text": "our average response time from the",
    "start": "874300",
    "end": "877030"
  },
  {
    "text": "beginning when we first started to look",
    "start": "877030",
    "end": "878650"
  },
  {
    "text": "at all these database issues started to",
    "start": "878650",
    "end": "881050"
  },
  {
    "text": "slowly trickle down and now we're at",
    "start": "881050",
    "end": "883030"
  },
  {
    "text": "about 2 to 2.5 seconds so you can see",
    "start": "883030",
    "end": "886570"
  },
  {
    "text": "there's a huge improvement as you you",
    "start": "886570",
    "end": "889960"
  },
  {
    "text": "know start using other types of AWS",
    "start": "889960",
    "end": "891880"
  },
  {
    "text": "services to offload your workload and",
    "start": "891880",
    "end": "894610"
  },
  {
    "text": "figuring out what instance size you need",
    "start": "894610",
    "end": "898110"
  },
  {
    "text": "so overall the conclusion is migrated to",
    "start": "898110",
    "end": "901810"
  },
  {
    "start": "899000",
    "end": "926000"
  },
  {
    "text": "Aurora whenever possible always use your",
    "start": "901810",
    "end": "905260"
  },
  {
    "text": "art class instances in production",
    "start": "905260",
    "end": "908230"
  },
  {
    "text": "make sure your connections won't be",
    "start": "908230",
    "end": "910000"
  },
  {
    "text": "limited I know this can be a little",
    "start": "910000",
    "end": "912400"
  },
  {
    "text": "costly at first but it'll definitely",
    "start": "912400",
    "end": "914860"
  },
  {
    "text": "save you a lot of heartache and then",
    "start": "914860",
    "end": "916960"
  },
  {
    "text": "profile your application to file any",
    "start": "916960",
    "end": "918640"
  },
  {
    "text": "bottlenecks and use AWS services to",
    "start": "918640",
    "end": "921730"
  },
  {
    "text": "offload load on your database thank you",
    "start": "921730",
    "end": "926170"
  },
  {
    "start": "926000",
    "end": "955000"
  },
  {
    "text": "so the special thanks to the AWS loft",
    "start": "926170",
    "end": "928990"
  },
  {
    "text": "team for having me here",
    "start": "928990",
    "end": "930699"
  },
  {
    "text": "the migration blog post is here and",
    "start": "930699",
    "end": "932920"
  },
  {
    "text": "here's a 10% discount if anyone has any",
    "start": "932920",
    "end": "935889"
  },
  {
    "text": "questions now would be a time so we use",
    "start": "935889",
    "end": "945399"
  },
  {
    "text": "both we use memcache for the query side",
    "start": "945399",
    "end": "948369"
  },
  {
    "text": "of things and we use Redis for job and",
    "start": "948369",
    "end": "951100"
  },
  {
    "text": "background processing but it depends",
    "start": "951100",
    "end": "956199"
  },
  {
    "start": "955000",
    "end": "994000"
  },
  {
    "text": "what you're doing memcache for example",
    "start": "956199",
    "end": "958149"
  },
  {
    "text": "if you're doing something that's HIPAA",
    "start": "958149",
    "end": "959470"
  },
  {
    "text": "compliant or you need to store",
    "start": "959470",
    "end": "960939"
  },
  {
    "text": "information that's sensitive I would",
    "start": "960939",
    "end": "962799"
  },
  {
    "text": "recommend Redis because that you can",
    "start": "962799",
    "end": "964420"
  },
  {
    "text": "encrypt memcache you can't encrypt so",
    "start": "964420",
    "end": "967049"
  },
  {
    "text": "but memcache definitely is quicker and",
    "start": "967049",
    "end": "970179"
  },
  {
    "text": "easier to set up it's just like a few",
    "start": "970179",
    "end": "971980"
  },
  {
    "text": "menu options where Redis is about like a",
    "start": "971980",
    "end": "974649"
  },
  {
    "text": "little more especially if you're doing",
    "start": "974649",
    "end": "976269"
  },
  {
    "text": "encryption and things like that",
    "start": "976269",
    "end": "979410"
  },
  {
    "text": "any other questions you mean the ec2",
    "start": "980459",
    "end": "991600"
  },
  {
    "text": "instance for everybody so yeah usually",
    "start": "991600",
    "end": "996069"
  },
  {
    "start": "994000",
    "end": "1032000"
  },
  {
    "text": "we use so it's a combination of",
    "start": "996069",
    "end": "998139"
  },
  {
    "text": "different things it's it varies it's",
    "start": "998139",
    "end": "1000660"
  },
  {
    "text": "based on the network load the network",
    "start": "1000660",
    "end": "1003989"
  },
  {
    "text": "traffic that we get it's based on the",
    "start": "1003989",
    "end": "1007410"
  },
  {
    "text": "number of hits per second and then",
    "start": "1007410",
    "end": "1011939"
  },
  {
    "text": "there's like a third thing I don't",
    "start": "1011939",
    "end": "1013230"
  },
  {
    "text": "remember exactly but we have a",
    "start": "1013230",
    "end": "1015629"
  },
  {
    "text": "combination of things if any of those",
    "start": "1015629",
    "end": "1017519"
  },
  {
    "text": "trigger then scale up the incidence this",
    "start": "1017519",
    "end": "1023730"
  },
  {
    "text": "is did you guys think about using",
    "start": "1023730",
    "end": "1026329"
  },
  {
    "text": "Beanstalk yeah we do use Beanstalk",
    "start": "1026329",
    "end": "1029069"
  },
  {
    "text": "actually okay yeah it's it's it's a",
    "start": "1029069",
    "end": "1033029"
  },
  {
    "start": "1032000",
    "end": "1064000"
  },
  {
    "text": "Beanstalk configure we're actually",
    "start": "1033029",
    "end": "1033990"
  },
  {
    "text": "moving to containers soon if you're",
    "start": "1033990",
    "end": "1038250"
  },
  {
    "text": "actually a startup and you're trying to",
    "start": "1038250",
    "end": "1040110"
  },
  {
    "text": "start to do things I would recommend",
    "start": "1040110",
    "end": "1042389"
  },
  {
    "text": "starting small if you're doing a very",
    "start": "1042389",
    "end": "1043740"
  },
  {
    "text": "small application probably lightsail",
    "start": "1043740",
    "end": "1045418"
  },
  {
    "text": "then graduate to elastic Beanstalk and",
    "start": "1045419",
    "end": "1048480"
  },
  {
    "text": "then finally ECS I think that's the very",
    "start": "1048480",
    "end": "1051809"
  },
  {
    "text": "natural progression of things cuz",
    "start": "1051809",
    "end": "1053820"
  },
  {
    "text": "lightsail is like really simple to set",
    "start": "1053820",
    "end": "1055559"
  },
  {
    "text": "up takes like two seconds eb is a little",
    "start": "1055559",
    "end": "1057570"
  },
  {
    "text": "more complicated and ECS don't even get",
    "start": "1057570",
    "end": "1060270"
  },
  {
    "text": "me started",
    "start": "1060270",
    "end": "1062419"
  },
  {
    "text": "on the same topic what made you decide",
    "start": "1062810",
    "end": "1066450"
  },
  {
    "start": "1064000",
    "end": "1123000"
  },
  {
    "text": "to move to containers from two",
    "start": "1066450",
    "end": "1069240"
  },
  {
    "text": "containers a few things one is we need a",
    "start": "1069240",
    "end": "1074820"
  },
  {
    "text": "little more configurability in our setup",
    "start": "1074820",
    "end": "1077450"
  },
  {
    "text": "the second part is that EB kind of",
    "start": "1077450",
    "end": "1081480"
  },
  {
    "text": "doesn't handle all the things we need in",
    "start": "1081480",
    "end": "1084060"
  },
  {
    "text": "our current infrastructure it's hard to",
    "start": "1084060",
    "end": "1085620"
  },
  {
    "text": "describe without going through our",
    "start": "1085620",
    "end": "1086820"
  },
  {
    "text": "entire infrastructure and kind of",
    "start": "1086820",
    "end": "1088500"
  },
  {
    "text": "telling you but we also want to kind of",
    "start": "1088500",
    "end": "1092130"
  },
  {
    "text": "do builds and deploy easily without",
    "start": "1092130",
    "end": "1094830"
  },
  {
    "text": "having to create EB config files that",
    "start": "1094830",
    "end": "1097260"
  },
  {
    "text": "have to set up each instance every time",
    "start": "1097260",
    "end": "1100410"
  },
  {
    "text": "a new instance deploys so if you start",
    "start": "1100410",
    "end": "1104340"
  },
  {
    "text": "using elastic beanstalk you'll realize",
    "start": "1104340",
    "end": "1106020"
  },
  {
    "text": "that to configure the instance because",
    "start": "1106020",
    "end": "1107670"
  },
  {
    "text": "every time it auto scales and adds a new",
    "start": "1107670",
    "end": "1110430"
  },
  {
    "text": "instance it's essentially rebuilding a",
    "start": "1110430",
    "end": "1112230"
  },
  {
    "text": "new system for you so you have to tell",
    "start": "1112230",
    "end": "1114810"
  },
  {
    "text": "it what to do what items it needs so it",
    "start": "1114810",
    "end": "1117660"
  },
  {
    "text": "turns into a configuration nightmare so",
    "start": "1117660",
    "end": "1123900"
  },
  {
    "start": "1123000",
    "end": "1137000"
  },
  {
    "text": "how do you sync the data between my",
    "start": "1123900",
    "end": "1126510"
  },
  {
    "text": "sequel like or a cluster and redshift oh",
    "start": "1126510",
    "end": "1133220"
  },
  {
    "text": "that's a great question so long story is",
    "start": "1133220",
    "end": "1138780"
  },
  {
    "start": "1137000",
    "end": "1181000"
  },
  {
    "text": "there's no easy way of doing it there",
    "start": "1138780",
    "end": "1142140"
  },
  {
    "text": "are my actually they just released a",
    "start": "1142140",
    "end": "1144990"
  },
  {
    "text": "tool I think it's called AWS glue which",
    "start": "1144990",
    "end": "1147180"
  },
  {
    "text": "kind of goes through and takes all your",
    "start": "1147180",
    "end": "1150300"
  },
  {
    "text": "data puts it in s3 for you then loads it",
    "start": "1150300",
    "end": "1152820"
  },
  {
    "text": "into redshift there are a bunch of",
    "start": "1152820",
    "end": "1154620"
  },
  {
    "text": "third-party services that do this for",
    "start": "1154620",
    "end": "1156570"
  },
  {
    "text": "you and cost the small fee but there's",
    "start": "1156570",
    "end": "1160260"
  },
  {
    "text": "no like direct way of taking data from",
    "start": "1160260",
    "end": "1164310"
  },
  {
    "text": "RDS and putting it to redshift that's",
    "start": "1164310",
    "end": "1166560"
  },
  {
    "text": "why I was really looking into Aurora",
    "start": "1166560",
    "end": "1169140"
  },
  {
    "text": "parallel queries if you look into that",
    "start": "1169140",
    "end": "1171450"
  },
  {
    "text": "you'll see that they it's kind of like a",
    "start": "1171450",
    "end": "1173250"
  },
  {
    "text": "redshift type thing where it lets you do",
    "start": "1173250",
    "end": "1175350"
  },
  {
    "text": "a lot of the things that redshift is",
    "start": "1175350",
    "end": "1177390"
  },
  {
    "text": "supposed to do for you how do I deal",
    "start": "1177390",
    "end": "1181740"
  },
  {
    "start": "1181000",
    "end": "1198000"
  },
  {
    "text": "with security well I mean I encrypt",
    "start": "1181740",
    "end": "1183510"
  },
  {
    "text": "everything so that's how I deal with it",
    "start": "1183510",
    "end": "1185910"
  },
  {
    "text": "by d f-- but you don't have to encrypt",
    "start": "1185910",
    "end": "1188130"
  },
  {
    "text": "everything by default but I highly",
    "start": "1188130",
    "end": "1189600"
  },
  {
    "text": "recommend that and then make sure the",
    "start": "1189600",
    "end": "1191430"
  },
  {
    "text": "connection from your application to RDS",
    "start": "1191430",
    "end": "1193530"
  },
  {
    "text": "is encrypted and it uses the AWS",
    "start": "1193530",
    "end": "1195900"
  },
  {
    "text": "shirts I just want to jump in here for a",
    "start": "1195900",
    "end": "1199800"
  },
  {
    "start": "1198000",
    "end": "1226000"
  },
  {
    "text": "second actually if you need to get data",
    "start": "1199800",
    "end": "1202290"
  },
  {
    "text": "from an RDS instance Aurora in the",
    "start": "1202290",
    "end": "1205290"
  },
  {
    "text": "redshift there is an AWS service that",
    "start": "1205290",
    "end": "1207960"
  },
  {
    "text": "you could use if it fits your",
    "start": "1207960",
    "end": "1210420"
  },
  {
    "text": "circumstances the database migration",
    "start": "1210420",
    "end": "1212880"
  },
  {
    "text": "service will actually pull data out of",
    "start": "1212880",
    "end": "1216860"
  },
  {
    "text": "RDS instances and redshift is an actual",
    "start": "1216860",
    "end": "1220380"
  },
  {
    "text": "target of the service or it's something",
    "start": "1220380",
    "end": "1223320"
  },
  {
    "text": "new every day so we'll catch the poor",
    "start": "1223320",
    "end": "1227820"
  },
  {
    "start": "1226000",
    "end": "1275000"
  },
  {
    "text": "results how to choose between elastic",
    "start": "1227820",
    "end": "1229560"
  },
  {
    "text": "cache and the built-in cache of the well",
    "start": "1229560",
    "end": "1234780"
  },
  {
    "text": "we chose elastic cache because it was",
    "start": "1234780",
    "end": "1237660"
  },
  {
    "text": "the easiest thing to implement with",
    "start": "1237660",
    "end": "1239220"
  },
  {
    "text": "rails so you could just kind of load a",
    "start": "1239220",
    "end": "1242520"
  },
  {
    "text": "library and it kind of does everything",
    "start": "1242520",
    "end": "1243690"
  },
  {
    "text": "for you you can use the you can use",
    "start": "1243690",
    "end": "1246360"
  },
  {
    "text": "stored procedures and a bunch of things",
    "start": "1246360",
    "end": "1247710"
  },
  {
    "text": "you if your database supports it but",
    "start": "1247710",
    "end": "1249570"
  },
  {
    "text": "that takes a lot of time and effort EC",
    "start": "1249570",
    "end": "1252900"
  },
  {
    "text": "is kind of like very easy to set up and",
    "start": "1252900",
    "end": "1254670"
  },
  {
    "text": "easy to use",
    "start": "1254670",
    "end": "1256970"
  },
  {
    "text": "also I'll get everyone back to drinks",
    "start": "1257450",
    "end": "1259650"
  },
  {
    "text": "and food all right thanks everyone",
    "start": "1259650",
    "end": "1262740"
  },
  {
    "text": "[Applause]",
    "start": "1262740",
    "end": "1266160"
  },
  {
    "text": "[Music]",
    "start": "1266160",
    "end": "1276030"
  }
]