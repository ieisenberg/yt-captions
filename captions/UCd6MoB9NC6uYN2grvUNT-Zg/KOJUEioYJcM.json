[
  {
    "text": "hi everyone so we're going to start our talk on continuous integration",
    "start": "1760",
    "end": "7200"
  },
  {
    "text": "and deployment best practices uh so i'm leo just to give you uh some my",
    "start": "7200",
    "end": "12960"
  },
  {
    "text": "background that's me hugging the president i used to work for the obama campaign",
    "start": "12960",
    "end": "19199"
  },
  {
    "text": "so i started out the dnc and then kind of transitioned into the obama campaign and so we had almost all of our",
    "start": "19199",
    "end": "26240"
  },
  {
    "text": "infrastructure on amazon web services and so i worked with jp on the devops team there",
    "start": "26240",
    "end": "32480"
  },
  {
    "text": "and so this is just a tech talk so aws does not endorse political candidates",
    "start": "32480",
    "end": "39120"
  },
  {
    "text": "hi everybody i'm jp i'm from mozilla foundation like leo said started off with him at the",
    "start": "39360",
    "end": "45920"
  },
  {
    "text": "obama campaign for that i was at the crowdsourcing threadless and i want you to know that mozilla",
    "start": "45920",
    "end": "51600"
  },
  {
    "text": "foundation does endorse animated cats so what is continuous integration right",
    "start": "51600",
    "end": "59440"
  },
  {
    "text": "so traditionally you have these big monolithic deploys right you do a few deploys a month maybe",
    "start": "59440",
    "end": "65439"
  },
  {
    "text": "and they're kind of scary because you're changing a lot of code and a lot of things can go wrong so continuous integration is when",
    "start": "65439",
    "end": "72159"
  },
  {
    "text": "changes to your code in one of the branches and in your code so you know say like your main line branch",
    "start": "72159",
    "end": "77600"
  },
  {
    "text": "they're automatically deployed um and so but they're only automatically deployed after passing",
    "start": "77600",
    "end": "82880"
  },
  {
    "text": "unit and mock tests and so this makes your your code not have these monolithic",
    "start": "82880",
    "end": "88400"
  },
  {
    "text": "deploys you pick up bugs quickly you can develop rapidly and you can use it to automate your deployments",
    "start": "88400",
    "end": "94640"
  },
  {
    "text": "so typically what this looks like is you know you're the developer right and you've got your source code that you're working on in",
    "start": "94640",
    "end": "100479"
  },
  {
    "text": "you know in a git repo or something and you've got your project management server and the project management server has",
    "start": "100479",
    "end": "107200"
  },
  {
    "text": "your tasks that you're working on on it and then you've got your continuous integration server and there's a lot of software out there for that so",
    "start": "107200",
    "end": "113200"
  },
  {
    "text": "for example jenkins right that's what we use at mozilla foundation right now and then so you pick your tasks that",
    "start": "113200",
    "end": "119040"
  },
  {
    "text": "you're going to work on and you write your code for those tasks and then you schedule a build now you",
    "start": "119040",
    "end": "124880"
  },
  {
    "text": "could have just the fact that you committed something to your git repository you could have that automatically schedule a build",
    "start": "124880",
    "end": "130959"
  },
  {
    "text": "you could also have recurrent builds you can have builds that happen every day every hour just on a schedule",
    "start": "130959",
    "end": "136640"
  },
  {
    "text": "right and so it pulls the code that you just deployed to your source code repo and it runs a",
    "start": "136640",
    "end": "144160"
  },
  {
    "text": "bunch of tests and it saves the test results to your project management server and then there's a bunch of build output right and the build output is either",
    "start": "144160",
    "end": "151120"
  },
  {
    "text": "documentation it's binary packages it's def facing notifications and please",
    "start": "151120",
    "end": "157120"
  },
  {
    "text": "make sure it's documentation yes you should devops really appreciates it",
    "start": "157120",
    "end": "162400"
  },
  {
    "text": "so what does this typically look like on amazon right so on amazon web services what you would typically do is you host",
    "start": "162400",
    "end": "168480"
  },
  {
    "text": "your project management server your continuous integration server and your source code repository on ec2",
    "start": "168480",
    "end": "174319"
  },
  {
    "text": "instances and then you you put the output on s3 so you put your documentation and your packages you put all that stuff",
    "start": "174319",
    "end": "180319"
  },
  {
    "text": "on s3 and then you uh you know for the source code repo you could use",
    "start": "180319",
    "end": "185680"
  },
  {
    "text": "an instance you could use something like github like a hosted service it's really up to you and since project management",
    "start": "185680",
    "end": "191360"
  },
  {
    "text": "uh servers usually they involve databases and tasks so you rds will be a good fit for that and so",
    "start": "191360",
    "end": "198000"
  },
  {
    "text": "typically though there's some pain points right you have to make sure your unit tests are complete you have to make sure your mock",
    "start": "198000",
    "end": "203440"
  },
  {
    "text": "tests are good you have to make sure that your test environment is the same as your production environment this is really important",
    "start": "203440",
    "end": "209680"
  },
  {
    "text": "because it's not really a test environment if it's not the same as your production environment so you have to be able to do load tests against it",
    "start": "209680",
    "end": "215040"
  },
  {
    "text": "you have to see how it would react you know you want apples to apples uh you minimize all the variables when",
    "start": "215040",
    "end": "221599"
  },
  {
    "text": "you're doing this deployment and then by moving really quickly that's going to help you",
    "start": "221599",
    "end": "227360"
  },
  {
    "text": "ensure that once you get to production hopefully before you get to production all the",
    "start": "227360",
    "end": "233040"
  },
  {
    "text": "problems you found and so typically if you do this on a on-premises environment right",
    "start": "233040",
    "end": "238720"
  },
  {
    "text": "this this is kind of painful because that means you have to buy twice the amount of servers twice the amount of switches",
    "start": "238720",
    "end": "244319"
  },
  {
    "text": "all that kind of stuff but on amazon web services it's really easy so you pay for things on",
    "start": "244319",
    "end": "249439"
  },
  {
    "text": "demand uh you have elastic capacity and it's pay as you go so you can have a",
    "start": "249439",
    "end": "254799"
  },
  {
    "text": "test environment up for one two or three hours and then you only pay for one two or three hours you didn't just buy a bunch of servers",
    "start": "254799",
    "end": "261519"
  },
  {
    "text": "it's also programmable right so there's apis for all of our services so we have sdks in all kinds of",
    "start": "261519",
    "end": "268880"
  },
  {
    "text": "languages for all kinds of platforms we've got id toolkits we've got really",
    "start": "268880",
    "end": "274080"
  },
  {
    "text": "great command line utilities and i'd highly recommend we just came out with our unified aws cli recently",
    "start": "274080",
    "end": "279440"
  },
  {
    "text": "and i would highly recommend it it's really good so it's the same set of commands on windows and linux and",
    "start": "279440",
    "end": "284800"
  },
  {
    "text": "mac um and so and we've also got our old traditional command line utilities",
    "start": "284800",
    "end": "290240"
  },
  {
    "text": "uh they're uh they're for different services so if it's programmable that means you can automate it right but how do you",
    "start": "290240",
    "end": "296320"
  },
  {
    "text": "automate it there's a lot of different options out there and i'm not going to tell you which options are best",
    "start": "296320",
    "end": "301360"
  },
  {
    "text": "because i think they all work right so you should figure that out on your own but there's a bunch of different kind of",
    "start": "301360",
    "end": "307440"
  },
  {
    "text": "categories of options so first of all there's configuration management systems these systems they manage once your instance comes up",
    "start": "307440",
    "end": "313840"
  },
  {
    "text": "they manage you know bootstrapping your instance and getting your code and your application and your configurations on that so",
    "start": "313840",
    "end": "320080"
  },
  {
    "text": "there's puppet and chef and salt stack and a bunch of other configuration management systems out",
    "start": "320080",
    "end": "325440"
  },
  {
    "text": "there and then there's deployment frameworks so these help you deploy your code so there's aws elastic beanstalk where",
    "start": "325440",
    "end": "332400"
  },
  {
    "text": "you can just take your ruby or python or nodejs and a bunch of other languages you can take your code",
    "start": "332400",
    "end": "337440"
  },
  {
    "text": "and it'll just spin up a load balancer and a database and auto scaling group for you",
    "start": "337440",
    "end": "342560"
  },
  {
    "text": "there's also a device opsworks which is a sort of a devops platform where you can define layers",
    "start": "342560",
    "end": "348000"
  },
  {
    "text": "in your in your applications you can have an app layer and a web layer and a database layer and a load balancing layer and",
    "start": "348000",
    "end": "353520"
  },
  {
    "text": "then you put chef recipes in and define what's actually installed in those layers then there's tools like",
    "start": "353520",
    "end": "359120"
  },
  {
    "text": "ansible and fabric which in capistrano which just push code usually through ssh onto your instances",
    "start": "359120",
    "end": "364880"
  },
  {
    "text": "m collective is another really good one and then there's infrastructure management so",
    "start": "364880",
    "end": "370000"
  },
  {
    "text": "configuration management typically deals with like you know the actual things on the instance right",
    "start": "370000",
    "end": "375039"
  },
  {
    "text": "infrastructure management deals with how do you deploy load balancers and vpcs and uh instances programmatically so",
    "start": "375039",
    "end": "382880"
  },
  {
    "text": "there's aws cloud formation for that so within the json file what you can do is",
    "start": "382880",
    "end": "388319"
  },
  {
    "text": "you can define all that and just you know send the text file out to somebody and they'll launch your whole",
    "start": "388319",
    "end": "393840"
  },
  {
    "text": "architecture pretty quickly so it's really great so there's typically two schools of thought when you're bootstrapping an",
    "start": "393840",
    "end": "399919"
  },
  {
    "text": "instance right you either wanna you could either configure dynamically or you bake an ami so when you bake an ami it's time",
    "start": "399919",
    "end": "406800"
  },
  {
    "text": "consuming because you're configuring the ami usually you know manually but it also",
    "start": "406800",
    "end": "412319"
  },
  {
    "text": "means faster startup time because the ami comes up it doesn't have to bootstrap itself it doesn't have to do anything",
    "start": "412319",
    "end": "417440"
  },
  {
    "text": "it just comes up and it's ready it's a difference of being able to scale at 30 seconds versus two to five minutes",
    "start": "417440",
    "end": "425120"
  },
  {
    "text": "for configuring it dynamically and then configuring dynamically you",
    "start": "425120",
    "end": "430880"
  },
  {
    "text": "always have your latest code on your instances because um you know you could trigger for example a chef or a puppet run",
    "start": "430880",
    "end": "436800"
  },
  {
    "text": "with your continuous integration system and you can have easily have different instances run different environments but the downside",
    "start": "436800",
    "end": "443759"
  },
  {
    "text": "is that it'll sometimes take you know 10 minutes to bootstrap an instance and if you're scaling up and you want you know",
    "start": "443759",
    "end": "449120"
  },
  {
    "text": "you have a lot of traffic hitting your website uh you know that 10 minutes could be a problem so you kind of have to figure",
    "start": "449120",
    "end": "454160"
  },
  {
    "text": "out which one of these you want to do well and and really you can actually do both one of the neat tricks and one that we",
    "start": "454160",
    "end": "460560"
  },
  {
    "text": "used on the obama campaign quite a bit was to have both ami one auto scale group for um ami bakes",
    "start": "460560",
    "end": "468800"
  },
  {
    "text": "and that you know is our fast scaling group so when that starts ramping up on cpu",
    "start": "468800",
    "end": "474080"
  },
  {
    "text": "utilization it's going to be about 30 seconds but one of the ways that you can kind of",
    "start": "474080",
    "end": "480479"
  },
  {
    "text": "diversify your environment and protect against any type of ebs issues is to have two",
    "start": "480479",
    "end": "485759"
  },
  {
    "text": "auto scale groups you're able to configure those to scale into the same load balancer",
    "start": "485759",
    "end": "491199"
  },
  {
    "text": "and thus if there's ever an ebs issue or ever an instance or issue you've covered your bases you can scale",
    "start": "491199",
    "end": "496800"
  },
  {
    "text": "fast but you also have a baseline of instances up for making sure that when there's a",
    "start": "496800",
    "end": "502000"
  },
  {
    "text": "problem you don't wind up having to wake up so let's talk about a case study here",
    "start": "502000",
    "end": "507759"
  },
  {
    "text": "so obama for america you can go on this website awsofa.info and you can zoom in and view this",
    "start": "507759",
    "end": "513680"
  },
  {
    "text": "architecture it's really cool there's some easter eggs in there if you zoom in far enough there's some take five bars yeah",
    "start": "513680",
    "end": "519919"
  },
  {
    "text": "and see if you can find the kenny loggins so so what what let's do a little bit of a",
    "start": "519919",
    "end": "527120"
  },
  {
    "text": "deep dive into this architecture what do we have in there right so we had a lot of web scale applications",
    "start": "527120",
    "end": "533120"
  },
  {
    "text": "so www.barackobama.com had to scale oftentimes dramatically right so under",
    "start": "533120",
    "end": "539200"
  },
  {
    "text": "regular traffic regular traffic was you know a lot but then once in a while the president would say something on tv",
    "start": "539200",
    "end": "545440"
  },
  {
    "text": "or there'd be a story on you know some news network and there'd be a lot of traffic really fast and so it had to scale and",
    "start": "545440",
    "end": "551600"
  },
  {
    "text": "then there's other uh web scale applications like our payment processor which had to take",
    "start": "551600",
    "end": "556880"
  },
  {
    "text": "in donations and so you know that's something that's mission critical that has to be up all the time and then there's a bunch of",
    "start": "556880",
    "end": "562720"
  },
  {
    "text": "big database systems so there's an analytics system that we used that each one of those had like 15",
    "start": "562720",
    "end": "569040"
  },
  {
    "text": "provisioned iops ebs volumes on them i think 2000 was the limit at the time",
    "start": "569040",
    "end": "574800"
  },
  {
    "text": "we had some pretty big dynamo db tables with a 400 000 uh right capacity units on them i wish",
    "start": "574800",
    "end": "580959"
  },
  {
    "text": "we had redshift in those days yes redshift came out like a month after the election is demoralizing",
    "start": "580959",
    "end": "588080"
  },
  {
    "text": "so then we have services apis so we used uh service oriented architecture",
    "start": "588080",
    "end": "593200"
  },
  {
    "text": "so all of our different apps they talk to each other through apis so some of them were written in ruby some of them were written in python",
    "start": "593200",
    "end": "599200"
  },
  {
    "text": "some of them were node.js it really depended on the app and what made sense for that particular application but didn't matter because they all talk to",
    "start": "599200",
    "end": "605200"
  },
  {
    "text": "each other through apis a lot of you might have heard about an application called narwhal and all that was was an api to talk to",
    "start": "605200",
    "end": "611839"
  },
  {
    "text": "the database so if you ever logged into barackobama.com or payments processor if you ever logged",
    "start": "611839",
    "end": "618959"
  },
  {
    "text": "into any of our applications it all went through that narwhal application",
    "start": "618959",
    "end": "624640"
  },
  {
    "text": "so here's an example of some of the stuff that was built so there's the donate",
    "start": "624640",
    "end": "630160"
  },
  {
    "text": "tool and the call tool which would uh the call tool saw about a million calls uh the last day uh",
    "start": "630160",
    "end": "636240"
  },
  {
    "text": "an election day and so give you a script and it would tell you who to call and then you input you know your",
    "start": "636240",
    "end": "641839"
  },
  {
    "text": "feedback from the person that you called uh we had a social network for uh for organizers called dashboard",
    "start": "641839",
    "end": "648079"
  },
  {
    "text": "and there's canvassing tools so all the stuff about 200 apps total uh you know during the course of the",
    "start": "648079",
    "end": "654399"
  },
  {
    "text": "whole campaign ran on amazon web services and so this was a typical traffic chart for us",
    "start": "654399",
    "end": "660560"
  },
  {
    "text": "um so as you can see when started off when most of these apps were being built they didn't have that much traffic so it",
    "start": "660560",
    "end": "665680"
  },
  {
    "text": "starts off in july there and then all of a sudden that you know the last uh quadrant there is like just october",
    "start": "665680",
    "end": "672000"
  },
  {
    "text": "we would have crazy traffic yeah that was terrifying let me tell you it might have seemed like we kept it casual during",
    "start": "672000",
    "end": "677920"
  },
  {
    "text": "that entire campaign but we were biting our fingernails i uh had to really ramp up the rogaine since",
    "start": "677920",
    "end": "683279"
  },
  {
    "text": "the campaign so and here's another here's a tweet that just uh shows kind of",
    "start": "683279",
    "end": "689600"
  },
  {
    "text": "some more of our statistics uh on the campaign so how do we do that so we used just about everything every",
    "start": "689600",
    "end": "695519"
  },
  {
    "text": "technology that we could get our hands on uh we used it which makes deploying a",
    "start": "695519",
    "end": "700959"
  },
  {
    "text": "really good time so specifically for infrastructure and",
    "start": "700959",
    "end": "706000"
  },
  {
    "text": "configuration management and monitoring we also used a lot of stuff uh we had puppet and then we",
    "start": "706000",
    "end": "711279"
  },
  {
    "text": "used cloud in it and asgard and all kinds of stuff so we'll talk a little bit about it so",
    "start": "711279",
    "end": "717120"
  },
  {
    "text": "specifically let's do a little bit of a deep dive on puppet um so we had to make a decision as to",
    "start": "717120",
    "end": "722320"
  },
  {
    "text": "what configuration management system we were going to use in 2011 so we chose puppet it seemed like the best one at the time it",
    "start": "722320",
    "end": "729120"
  },
  {
    "text": "was pretty easy to scale the puppet masters and so you know we needed to make it",
    "start": "729120",
    "end": "734880"
  },
  {
    "text": "scale and we needed to make it work with a horizontally scalable infrastructure so the first thing is how do you bootstrap puppet right onto an instance",
    "start": "734880",
    "end": "741760"
  },
  {
    "text": "onto a clean instance so there's this thing called cloud init right and cloudant is just a subset",
    "start": "741760",
    "end": "747120"
  },
  {
    "text": "of the user data field that you put in when you launch an instance so cloud init is just it's a little bit",
    "start": "747120",
    "end": "752720"
  },
  {
    "text": "more structured it's not a shell script it's a it's a yamo format it's a little bit it's a little bit like a shell script",
    "start": "752720",
    "end": "758240"
  },
  {
    "text": "though you're able to run commands um for example injecting authorization keys or moving files",
    "start": "758240",
    "end": "763920"
  },
  {
    "text": "around yeah so in this example here we're just defining uh the puppet labs yum repos",
    "start": "763920",
    "end": "770079"
  },
  {
    "text": "to get those installed uh in the instance on boot and installing git and s3 cmd and puppet",
    "start": "770079",
    "end": "776000"
  },
  {
    "text": "right and so just some tips here don't store your creds in your puppet manifest",
    "start": "776000",
    "end": "782160"
  },
  {
    "text": "or ideally you know your github repos or your code because you won't sleep very",
    "start": "782160",
    "end": "787680"
  },
  {
    "text": "well so you want to the ideal thing is to store them in uh private s3 buckets right or you know",
    "start": "787680",
    "end": "795600"
  },
  {
    "text": "in chef for example there's a contract called an encrypted data bag you could put in one of those um so what we did at",
    "start": "795600",
    "end": "801600"
  },
  {
    "text": "the time this was uh we started before im rolls were around uh so we would inject uh ec or s3 credentials",
    "start": "801600",
    "end": "809760"
  },
  {
    "text": "into into the instances through cloud init and so that would then give that instance access to ns3 bucket which had all the",
    "start": "809760",
    "end": "816399"
  },
  {
    "text": "credentials it needed for all the applications that it used but what you can do today what's even better is just to give the instance an",
    "start": "816399",
    "end": "822399"
  },
  {
    "text": "im role and that role gives the instance access to that as three buckets so you don't have to store any credentials",
    "start": "822399",
    "end": "828160"
  },
  {
    "text": "on your instance so many new things came out that we didn't get to use then that looking back i just wish we had that",
    "start": "828160",
    "end": "834079"
  },
  {
    "text": "because of our fast pace of innovation indeed so the other",
    "start": "834079",
    "end": "839600"
  },
  {
    "text": "great thing about cloudinet is built-in puppet support right so you can just give it your puppet",
    "start": "839600",
    "end": "845279"
  },
  {
    "text": "master uh right your server and then you can give it your uh your cert name so since we used a lot of",
    "start": "845279",
    "end": "852160"
  },
  {
    "text": "auto scaling groups and we had instances coming in and out of service all the time we couldn't just you know we had to auto",
    "start": "852160",
    "end": "858240"
  },
  {
    "text": "sign right because we can manually approve uh instances with the puppet masters so what we ended up doing was",
    "start": "858240",
    "end": "864560"
  },
  {
    "text": "we would give each type of instance a unique certain name so it would be like the app name and then unique key for",
    "start": "864560",
    "end": "870160"
  },
  {
    "text": "security and then the instance id then we had auto sign turned on and then you can use security groups or network",
    "start": "870160",
    "end": "876000"
  },
  {
    "text": "access control lists to lock that down a little bit more on the network layer and then in the nodes.pp",
    "start": "876000",
    "end": "883519"
  },
  {
    "text": "file right where you define all your different types of nodes we do a regular expression match",
    "start": "883519",
    "end": "888560"
  },
  {
    "text": "based on that string now a quick note about auto scaling groups even if you have a",
    "start": "888560",
    "end": "894000"
  },
  {
    "text": "service like maybe you don't have that many servers to deploy to and you only need one puppet master you should still use auto scanning",
    "start": "894000",
    "end": "900399"
  },
  {
    "text": "groups what that does is when a note dies you're going to get a new one that comes in i've i've dreamed about that as an",
    "start": "900399",
    "end": "907760"
  },
  {
    "text": "operations person for 15 years just having an auto repair itself and that's even if you never need to horizontally",
    "start": "907760",
    "end": "914480"
  },
  {
    "text": "scale or you never think you're going to need to start out by using auto scale groups",
    "start": "914480",
    "end": "920079"
  },
  {
    "text": "self healing so another thing that's really good is you want to use a base class you don't have to in each node definition",
    "start": "920079",
    "end": "926880"
  },
  {
    "text": "redefine all the stuff that you're going to install in every single instance so ntp like sudo you know stuff that you're",
    "start": "926880",
    "end": "932720"
  },
  {
    "text": "going to have everywhere just define it right in your base instance and then inherit that",
    "start": "932720",
    "end": "937920"
  },
  {
    "text": "base instance class and your other in your other class types right and so the other thing",
    "start": "937920",
    "end": "944639"
  },
  {
    "text": "is use run stages so puppet's kind of weird about how it handles uh the order of",
    "start": "944639",
    "end": "950480"
  },
  {
    "text": "which manifests get applied but by using run stages you can you know you can divide how it does that",
    "start": "950480",
    "end": "956240"
  },
  {
    "text": "so what i typically would do is i have a run stage for installing your credentials for installing your gum repos because",
    "start": "956240",
    "end": "962320"
  },
  {
    "text": "before you know your credentials or yummy repos none of your other stuff is going to work so you want that to come first",
    "start": "962320",
    "end": "967519"
  },
  {
    "text": "so that's that's how you do it and again don't store your credentials in puppet store them in private what",
    "start": "967519",
    "end": "972880"
  },
  {
    "text": "we're doing at mozilla foundation right now we've actually all of the different configurations for",
    "start": "972880",
    "end": "977920"
  },
  {
    "text": "each environment whether it's staging or production for all of the different apps we store them in just a tech ops bucket",
    "start": "977920",
    "end": "986320"
  },
  {
    "text": "just there's a staging environment production environment and then our developers are actually able to go into s3 we grant them rights",
    "start": "986320",
    "end": "993440"
  },
  {
    "text": "using im and they can make configuration changes then next time puppet runs it's going to pick those up that's a lot",
    "start": "993440",
    "end": "1000320"
  },
  {
    "text": "nicer and a lot easier and a lot safer than storing those in github or storing those",
    "start": "1000320",
    "end": "1007440"
  },
  {
    "text": "actually in your puppet repos so the other thing is to scale your your",
    "start": "1007440",
    "end": "1012959"
  },
  {
    "text": "your pup masters uh you really only want to use puppet for configuration files and things that",
    "start": "1012959",
    "end": "1018240"
  },
  {
    "text": "differentiate your versions of your apps on your instances from themselves right so don't don't put",
    "start": "1018240",
    "end": "1025678"
  },
  {
    "text": "your rpm packages or your debian packages into puppet itself and have puppet serve those out because",
    "start": "1025679",
    "end": "1030798"
  },
  {
    "text": "that will stress uh your puppet masters so what you want to do is you want to put them in s3 backed rpm or so as through backed",
    "start": "1030799",
    "end": "1038640"
  },
  {
    "text": "or debian repositories for a public one it's really easy all you do is you just enable static hosting on your s3 bucket",
    "start": "1038640",
    "end": "1044480"
  },
  {
    "text": "uh you you know you sync up your actual repository up there and you're all set",
    "start": "1044480",
    "end": "1049600"
  },
  {
    "text": "for private ones there are plugins out there both for yum and for apt that just allow you to",
    "start": "1049600",
    "end": "1055520"
  },
  {
    "text": "you know insert your s3 secret key and access key or use im rolls and access a private s3 bucket",
    "start": "1055520",
    "end": "1064160"
  },
  {
    "text": "and s3 can handle some load yes a lot nicer than having to worry about that on your configuration management yeah so",
    "start": "1064160",
    "end": "1070559"
  },
  {
    "text": "you're also saving money by not running compute you're not running a web server for your repositories right you're just",
    "start": "1070559",
    "end": "1076720"
  },
  {
    "text": "putting up an s3 and s3 regularly does over 1.1 million concurrent",
    "start": "1076720",
    "end": "1082320"
  },
  {
    "text": "transactions so it takes care of the scaling part for you now if in order to",
    "start": "1082320",
    "end": "1088960"
  },
  {
    "text": "you know reduce the amount of times you have to actually change your manifests what you should do is just set the",
    "start": "1088960",
    "end": "1094240"
  },
  {
    "text": "version number to latest right uh so you ensure that you have the latest version of a package and um so what that allows you to do is",
    "start": "1094240",
    "end": "1101360"
  },
  {
    "text": "you just you know build a new package you put it up in your repositories and without touching your manifest puppet will just",
    "start": "1101360",
    "end": "1107440"
  },
  {
    "text": "bump it for you uh jp you want to talk about logging um i i don't want to talk about logging",
    "start": "1107440",
    "end": "1113360"
  },
  {
    "text": "but we should shouldn't we logging is one of those things that everybody um",
    "start": "1113360",
    "end": "1118640"
  },
  {
    "text": "back in the old it operations days before devops was actually a thing",
    "start": "1118640",
    "end": "1124240"
  },
  {
    "text": "that was one of the things that would keep us up at night people wanted logs and so you want to make sure that you're",
    "start": "1124240",
    "end": "1130559"
  },
  {
    "text": "not just logging your application but also logging things like your puppet run part of devops is knowing what changed",
    "start": "1130559",
    "end": "1137840"
  },
  {
    "text": "when and having that in a place where developers can access it means you get to go to sleep and",
    "start": "1137840",
    "end": "1145760"
  },
  {
    "text": "there's a lot of places out there to send your logs so you can have your own arsyslog uh you know instance you'd have gray log",
    "start": "1145760",
    "end": "1152960"
  },
  {
    "text": "which is what what mozilla uses uh there's hosted services out there like loggly there's also a lot of application",
    "start": "1152960",
    "end": "1159440"
  },
  {
    "text": "level monitoring services like relic and splunk out there right",
    "start": "1159440",
    "end": "1164640"
  },
  {
    "text": "so how do you actually scale your puppet masters so you want to have a minimum size of",
    "start": "1164640",
    "end": "1170000"
  },
  {
    "text": "two on your auto skill group for your puppet masters because you want to use multiple availability zones",
    "start": "1170000",
    "end": "1175039"
  },
  {
    "text": "and having two instances in the same availability zone costs the same as having two",
    "start": "1175039",
    "end": "1180240"
  },
  {
    "text": "instances and two availability zones so you should use two availability zones um so there's two ways to to actually",
    "start": "1180240",
    "end": "1186799"
  },
  {
    "text": "bootstrap your puppet masters right you're gonna have them just build off themselves so the new puppet",
    "start": "1186799",
    "end": "1192640"
  },
  {
    "text": "master instance will come up it'll run itself uh you know it'll run against the existing pup masters and",
    "start": "1192640",
    "end": "1199200"
  },
  {
    "text": "bootstrap itself or you can store all your manifests in s3 and uh then you can just",
    "start": "1199200",
    "end": "1204720"
  },
  {
    "text": "uh you can trap off that and then you have to worry about you know if you have no healthy uh instances in your pup",
    "start": "1204720",
    "end": "1210320"
  },
  {
    "text": "master availability group that gives you a lot of peace of mind and so",
    "start": "1210320",
    "end": "1215360"
  },
  {
    "text": "another thing that you know automation and continuous integration helps with it's really hard",
    "start": "1215360",
    "end": "1221120"
  },
  {
    "text": "to prepare for natural disasters right so this is this is the store map from hurricane sandy",
    "start": "1221120",
    "end": "1226320"
  },
  {
    "text": "and at the time all of our stuff was on u.s east which was almost right in the",
    "start": "1226320",
    "end": "1231520"
  },
  {
    "text": "middle of where we were at here so we were trying to be safe and we wanted to move or copy our stuff actually to one of the",
    "start": "1231520",
    "end": "1238720"
  },
  {
    "text": "west coast regions and so we had this built up about three months ahead of time most of the stuff",
    "start": "1238720",
    "end": "1243919"
  },
  {
    "text": "was already built up and then in nine hours we were able to copy everything",
    "start": "1243919",
    "end": "1249760"
  },
  {
    "text": "to the west coast region it felt like a lot longer than nine hours yeah we had i i don't have the slide on here",
    "start": "1249760",
    "end": "1255520"
  },
  {
    "text": "but we had a lot of caffeine yes a lot of caffeinated products so what we did was we we used puppet and",
    "start": "1255520",
    "end": "1263679"
  },
  {
    "text": "we used uh netflix's asgard tool and we used wine optimization software um so to to copy all that stuff and so",
    "start": "1263679",
    "end": "1271679"
  },
  {
    "text": "we basically had cross-continued fall tolerance on demand and so the hardest part was actually i think",
    "start": "1271679",
    "end": "1278159"
  },
  {
    "text": "we're creating auto scale groups is pretty easy you can script that um you know you can have puppet and",
    "start": "1278159",
    "end": "1283520"
  },
  {
    "text": "asgard uh you know copy your amount or run your amis and all that stuff it's really hard to",
    "start": "1283520",
    "end": "1288640"
  },
  {
    "text": "copy data across though so the we used um for example tsunami udp to copy about 27",
    "start": "1288640",
    "end": "1294240"
  },
  {
    "text": "terabytes of data in a few hours and so that was the real challenge for us that really helped",
    "start": "1294240",
    "end": "1299919"
  },
  {
    "text": "that was a long night yep so if you want to learn more about chef because this is public-centric",
    "start": "1299919",
    "end": "1306559"
  },
  {
    "text": "on thursday three's there's another session at lando 4303 about uh deploying the league of legends",
    "start": "1306559",
    "end": "1312559"
  },
  {
    "text": "uh data pipeline with chef so now jp is going to talk about mozilla",
    "start": "1312559",
    "end": "1318400"
  },
  {
    "text": "so maybe you've been to webmaker open badges but i was uh i hadn't been prior to",
    "start": "1318400",
    "end": "1325919"
  },
  {
    "text": "actually starting at mozilla open badges actually didn't have a product at the time and the webmaker team",
    "start": "1325919",
    "end": "1332480"
  },
  {
    "text": "had just really come out with a product in the last year you might have used butter or popcorn",
    "start": "1332480",
    "end": "1338720"
  },
  {
    "text": "you might have used thimble and so when i got there in december we were at a place where we were",
    "start": "1338720",
    "end": "1346880"
  },
  {
    "text": "not in standard uh i'm sorry not in soa architecture and there were about a total of 20",
    "start": "1346880",
    "end": "1353440"
  },
  {
    "text": "deploys during 2012. that was mostly on the webmaker side as i said open badges wasn't really",
    "start": "1353440",
    "end": "1359600"
  },
  {
    "text": "real yet what the interaction between operations and",
    "start": "1359600",
    "end": "1365840"
  },
  {
    "text": "development a lot of people know the analogy of throwing a pig over the wall",
    "start": "1365840",
    "end": "1371440"
  },
  {
    "text": "and saying like all right operations good luck that's our code works on my laptop",
    "start": "1371440",
    "end": "1376799"
  },
  {
    "text": "and so most of those deploys actually were done through tickets you had to contact the operations team",
    "start": "1376799",
    "end": "1383679"
  },
  {
    "text": "and all the hosting was done in physical data centers at mozilla right after i started we started moving",
    "start": "1383679",
    "end": "1390559"
  },
  {
    "text": "a little bit faster and started planning out how to build soa architecture if you recall that was just like narwhal",
    "start": "1390559",
    "end": "1397120"
  },
  {
    "text": "where it's just an api and so we had then weekly pushes",
    "start": "1397120",
    "end": "1403039"
  },
  {
    "text": "which which was moving a lot faster but still not as fast as we wanted",
    "start": "1403039",
    "end": "1408880"
  },
  {
    "text": "operations and development continued to interact in just bugs and tickets rather than",
    "start": "1408880",
    "end": "1415120"
  },
  {
    "text": "there being a lot of interaction i came from the op side a lot of you came from the developer",
    "start": "1415120",
    "end": "1420559"
  },
  {
    "text": "side those two need to get pushed together and so starting in april we moved to",
    "start": "1420559",
    "end": "1426880"
  },
  {
    "text": "cloud city aws they rebuilt the entire webmaker architecture into",
    "start": "1426880",
    "end": "1433840"
  },
  {
    "text": "soa and 12factor.net has a good write-up on this but 12-factor is a methodology to ensure",
    "start": "1433840",
    "end": "1441919"
  },
  {
    "text": "that you can horizontally scale the folks at heroku wrote it and it's a great piece will",
    "start": "1441919",
    "end": "1449039"
  },
  {
    "text": "probably teach you more than i'm going to be able to teach you in the time that i have and we started moving",
    "start": "1449039",
    "end": "1454640"
  },
  {
    "text": "all of these webmaker apps into amazon web services and started developing continuous",
    "start": "1454640",
    "end": "1460400"
  },
  {
    "text": "integration and so we had what 20 pushes during 2012",
    "start": "1460400",
    "end": "1466080"
  },
  {
    "text": "since april the two teams together have combined for 1",
    "start": "1466080",
    "end": "1471799"
  },
  {
    "text": "39 pushes obviously i wish i caught this two pushes earlier that",
    "start": "1471799",
    "end": "1477760"
  },
  {
    "text": "would have been pretty great but you can see the number of deploys per day compared to what we were doing where it",
    "start": "1477760",
    "end": "1483760"
  },
  {
    "text": "was maybe once a month or even once a week started making it so developers could move super fast",
    "start": "1483760",
    "end": "1491919"
  },
  {
    "text": "so when i say developers mozilla is a pretty unique community it's not just the paid developers like",
    "start": "1491919",
    "end": "1498400"
  },
  {
    "text": "it was on the ofa team we've got about 30 paid developers on the mozilla foundation side",
    "start": "1498400",
    "end": "1504559"
  },
  {
    "text": "working on these different apps but we also have hundreds of students who commit code who participate in the",
    "start": "1504559",
    "end": "1511760"
  },
  {
    "text": "process we have thousands of volunteers and contributors thank you if any of you are helping with that we have one devops",
    "start": "1511760",
    "end": "1518960"
  },
  {
    "text": "internet jedi and we've got multiple teams and so for",
    "start": "1518960",
    "end": "1524960"
  },
  {
    "text": "this team to have moved so quickly within less than six months with",
    "start": "1524960",
    "end": "1531440"
  },
  {
    "text": "all of those participants has been very impressive how did we do it well puppet jenkins",
    "start": "1531440",
    "end": "1536960"
  },
  {
    "text": "fabric my developers are able to just tag and go to jenkins",
    "start": "1536960",
    "end": "1542640"
  },
  {
    "text": "and that's going to use fabric and puppet to go through build a debian package and",
    "start": "1542640",
    "end": "1549520"
  },
  {
    "text": "push it out to stage i don't even have to be awake noticing a theme i like sleep",
    "start": "1549520",
    "end": "1556880"
  },
  {
    "text": "um how did we do that though really not just about tools it's about a culture shift",
    "start": "1556880",
    "end": "1562799"
  },
  {
    "text": "visible ops having real staging environments and having developers have a tight",
    "start": "1562799",
    "end": "1569520"
  },
  {
    "text": "feedback loop that's going to make a lot of brave developers which sometimes scares me but one of my",
    "start": "1569520",
    "end": "1577279"
  },
  {
    "text": "proudest days jay buck or john buckley he's",
    "start": "1577279",
    "end": "1582640"
  },
  {
    "text": "one of the lead developers for a webmaker actually asked me to remove the ability to push to production",
    "start": "1582640",
    "end": "1588720"
  },
  {
    "text": "because he was scared the developers had too much power i batted myself on the back and i went to sleep i did not",
    "start": "1588720",
    "end": "1594880"
  },
  {
    "text": "remove the ability to push to production though visible apps really makes it so that",
    "start": "1594880",
    "end": "1600240"
  },
  {
    "text": "feedback loop is really tight and that feedback loop",
    "start": "1600240",
    "end": "1605440"
  },
  {
    "text": "finds out what changed when we talked about you know server monitoring we talked a",
    "start": "1605840",
    "end": "1611679"
  },
  {
    "text": "little bit about log monitoring uh new relic is very heavily used at mozilla foundation now",
    "start": "1611679",
    "end": "1617600"
  },
  {
    "text": "we just started that thank you relic you guys are doing awesome uh and so a lot of times a developer",
    "start": "1617600",
    "end": "1623840"
  },
  {
    "text": "will change something and maybe there's just one route or one access point that gets messed up and",
    "start": "1623840",
    "end": "1630640"
  },
  {
    "text": "your overall app only goes up four or five milliseconds you don't really notice it",
    "start": "1630640",
    "end": "1635840"
  },
  {
    "text": "new relic using change management you're able to mark your deploys every time you do it and you can see jenkins every single",
    "start": "1635840",
    "end": "1643760"
  },
  {
    "text": "time there's a new deploy creates reports like this that's that's going to make brave",
    "start": "1643760",
    "end": "1651840"
  },
  {
    "text": "developers if you know how you're doing right now because you have graphs you have logs you know what changed",
    "start": "1651840",
    "end": "1658480"
  },
  {
    "text": "and when it changed and then right afterwards you know how you're doing that's going to give you the confidence",
    "start": "1658480",
    "end": "1663679"
  },
  {
    "text": "to move faster and use minimum viable planning you don't have to go through and plan as",
    "start": "1663679",
    "end": "1669760"
  },
  {
    "text": "much as we used to just to push one time to production so this is one of my favorite graphs you",
    "start": "1669760",
    "end": "1677600"
  },
  {
    "text": "can see this top box is the developer we use git annotated tagging and when",
    "start": "1677600",
    "end": "1685120"
  },
  {
    "text": "that goes through local qa they allege that this is a deployable",
    "start": "1685120",
    "end": "1691200"
  },
  {
    "text": "version and so we do a pull request to master we go ahead and then start building that",
    "start": "1691200",
    "end": "1698640"
  },
  {
    "text": "to go to staging perhaps there's configuration changes that have to happen either in puppet or",
    "start": "1698640",
    "end": "1704799"
  },
  {
    "text": "in the s3 buckets that have all of our configurations those happen at the same time because we said ensure latest um puppet",
    "start": "1704799",
    "end": "1713520"
  },
  {
    "text": "and we rev that version up every time so when someone deploys webmaker.org",
    "start": "1713520",
    "end": "1719279"
  },
  {
    "text": "that's going to go ahead and push that to to staging again you can see this is",
    "start": "1719279",
    "end": "1725279"
  },
  {
    "text": "developers pushing to staging not not jp and so",
    "start": "1725279",
    "end": "1730320"
  },
  {
    "text": "we go through a lot of load tests we go through performance tests most of the continuous integration unit",
    "start": "1730320",
    "end": "1736960"
  },
  {
    "text": "tests happen in those first two boxes but then there's a lot more to test once we get signed off on it the same",
    "start": "1736960",
    "end": "1744000"
  },
  {
    "text": "exact debian package that went to staging goes to production the only things that change are the configuration files",
    "start": "1744000",
    "end": "1750960"
  },
  {
    "text": "per environment again it's about minimizing variables it's about apples to apples testing i",
    "start": "1750960",
    "end": "1757200"
  },
  {
    "text": "would very much like for all of our problems to get caught in that second box",
    "start": "1757200",
    "end": "1762480"
  },
  {
    "text": "we all know that's not always going to happen though so if you want to learn about another",
    "start": "1762480",
    "end": "1768399"
  },
  {
    "text": "one of our customers about how they migrated to aws uh there's a session on friday at 1 30 about smug mugs zero",
    "start": "1768399",
    "end": "1775200"
  },
  {
    "text": "downtime migrations aws so let's talk a little bit about cloudformation so cloudformation",
    "start": "1775200",
    "end": "1781120"
  },
  {
    "text": "allows you to deploy your whole stack right so you have a cloudformation template and it's basically just a text file",
    "start": "1781120",
    "end": "1787840"
  },
  {
    "text": "written in json and allows you to define something like this so you can define rds instances and auto scale groups and",
    "start": "1787840",
    "end": "1795200"
  },
  {
    "text": "elbs and vpcs and most of the things that you can turn on on aws",
    "start": "1795200",
    "end": "1800799"
  },
  {
    "text": "and you can define that all the text files so it looks like this typically so you got your headers which just",
    "start": "1800799",
    "end": "1805840"
  },
  {
    "text": "define what a cloudformation template is and then you have your parameters right so the parameters are",
    "start": "1805840",
    "end": "1811600"
  },
  {
    "text": "inputs so you can have for example your key pair right or you can have instance sizes so you can you can it can",
    "start": "1811600",
    "end": "1818480"
  },
  {
    "text": "be a dynamic template even though it's just a file then you map your uh your amis because there's different am ids and different",
    "start": "1818480",
    "end": "1825200"
  },
  {
    "text": "aws regions so you want to map which ones you want to use then then you define your actual",
    "start": "1825200",
    "end": "1830240"
  },
  {
    "text": "resources so that's like your ec2 instances for example and then you have your outputs so the outputs just kind of",
    "start": "1830240",
    "end": "1836480"
  },
  {
    "text": "tell you whatever you want to define in the region so you could have it have the url of your website that it just built or what availability zone it",
    "start": "1836480",
    "end": "1843600"
  },
  {
    "text": "just deployed to so pretty flexible stuff here right so here's an example",
    "start": "1843600",
    "end": "1848960"
  },
  {
    "text": "of a cloudformation template that creates an rds instance and it defines that it's 500 gigs",
    "start": "1848960",
    "end": "1856080"
  },
  {
    "text": "it's an m1 small instance size it's using the mysql engine and it's 5.5 you can define a",
    "start": "1856080",
    "end": "1863120"
  },
  {
    "text": "username password here's a cloudformation template that defines how to initialize an instance",
    "start": "1863120",
    "end": "1870000"
  },
  {
    "text": "so it'll say okay install mysql and and apache and php and the php",
    "start": "1870000",
    "end": "1876559"
  },
  {
    "text": "mysql plugin and then also download the zip file and put in var www.html so install my website automatically and",
    "start": "1876559",
    "end": "1884880"
  },
  {
    "text": "like i said earlier for parameters so you can give it your ssh key or you know your instance size or",
    "start": "1884880",
    "end": "1891279"
  },
  {
    "text": "whatever you want to define as a parameter so cloudformation it allows you to do the procedural definition so you can",
    "start": "1891279",
    "end": "1898159"
  },
  {
    "text": "create things programmatically so you can deploy the same template over and over and over again and get the same result",
    "start": "1898159",
    "end": "1904159"
  },
  {
    "text": "you can store that template in your source code repository so you can track changes on it uh you can",
    "start": "1904159",
    "end": "1910399"
  },
  {
    "text": "easily collaborate because you can just give that template you know to one of your team members and then they'll",
    "start": "1910399",
    "end": "1915519"
  },
  {
    "text": "deploy the whole architecture and it's dynamic because you can give it parameters so we've got a whole uh",
    "start": "1915519",
    "end": "1921279"
  },
  {
    "text": "basically a whole library of uh you know of cloud formation templates that you can just download",
    "start": "1921279",
    "end": "1926480"
  },
  {
    "text": "and so they'll deploy drupal for you and uh wordpress and all kinds of stuff and",
    "start": "1926480",
    "end": "1931760"
  },
  {
    "text": "so you for some of them there's even uh you know different configurations you can have it all in one instance or you can have an auto scaling group with an",
    "start": "1931760",
    "end": "1938080"
  },
  {
    "text": "rds instance and you can you can launch them with one click which is great so now that you know you're not only",
    "start": "1938080",
    "end": "1944720"
  },
  {
    "text": "thinking about your application uh you're also thinking about your infrastructure and and kind of thinking",
    "start": "1944720",
    "end": "1949840"
  },
  {
    "text": "of that as code there's two separate things you have to manage right and so one of the ways to do that is just to",
    "start": "1949840",
    "end": "1955679"
  },
  {
    "text": "keep your cloudformation template in your in your continuous deployment system right and you can actually have",
    "start": "1955679",
    "end": "1960960"
  },
  {
    "text": "your continuous integration uh system deploy your cloudformation template and build a",
    "start": "1960960",
    "end": "1966720"
  },
  {
    "text": "whole new stack on every deploy if you wanted to and so every time you've got a fresh architecture",
    "start": "1966720",
    "end": "1972399"
  },
  {
    "text": "and so you you have to build a stack and then you fail over you know on your dns to that stack and if it doesn't work you just fail",
    "start": "1972399",
    "end": "1978640"
  },
  {
    "text": "back so it's pretty flexible stuff for anybody who's ever cut their hands up on data center racks",
    "start": "1978640",
    "end": "1984240"
  },
  {
    "text": "this is a lot easier isn't it so if you want to learn more about it",
    "start": "1984240",
    "end": "1990559"
  },
  {
    "text": "there's a talk on wednesday at 4 15 and it's about how adobe deploys",
    "start": "1990559",
    "end": "1995679"
  },
  {
    "text": "their whole stack every single time so let's talk about another case study so nasa the jet propulsion laboratory",
    "start": "1995679",
    "end": "2003279"
  },
  {
    "text": "so they were this was a few years ago they were they had to uh you know live",
    "start": "2003279",
    "end": "2009360"
  },
  {
    "text": "stream the the landing of the curiosity uh mars rover and so it was a 1080p stream it was a",
    "start": "2009360",
    "end": "2017279"
  },
  {
    "text": "hdd stream it's about one mega bit a second per viewer and they were expecting about a million viewers",
    "start": "2017279",
    "end": "2023279"
  },
  {
    "text": "uh and they had to support all uh you know these playback devices so it'd work on android and ios and flash",
    "start": "2023279",
    "end": "2030080"
  },
  {
    "text": "and it was a once in a lifetime moment so it really really had to work right you didn't have a second chance and then there's uh",
    "start": "2030080",
    "end": "2036880"
  },
  {
    "text": "some not so fun stuff that they had to deal with right so about six days uh before the landing uh nasa tells them",
    "start": "2036880",
    "end": "2043360"
  },
  {
    "text": "that they can't use their regular live streaming setup it's also the same week as the olympics so what that means is that",
    "start": "2043360",
    "end": "2049520"
  },
  {
    "text": "a lot of cdn capacity was across all cdn providers was being used up by the olympics and they had two people that were",
    "start": "2049520",
    "end": "2055839"
  },
  {
    "text": "available to build a solution to resolve this issue and so",
    "start": "2055839",
    "end": "2062480"
  },
  {
    "text": "they decided to just build their own cdn basically on amazon ec2 and so there's there's a",
    "start": "2062480",
    "end": "2068878"
  },
  {
    "text": "tricky part about streaming live video so you've got like two parts of it right you've got the hd video stream",
    "start": "2068879",
    "end": "2074398"
  },
  {
    "text": "and that's about four megabytes and it never changes so it just keeps adding four megabyte chunks onto it and so",
    "start": "2074399",
    "end": "2080000"
  },
  {
    "text": "that's easily cacheable but then there's the manifest file which tells your player which actual",
    "start": "2080000",
    "end": "2085280"
  },
  {
    "text": "file format file to point to that changes every four seconds so you don't want to cache that so they",
    "start": "2085280",
    "end": "2092079"
  },
  {
    "text": "decided uh to do this solution so they reserved s3 in one of our regions",
    "start": "2092079",
    "end": "2099520"
  },
  {
    "text": "for static images right and then they had to have low latency right so they had to deploy multiple regions",
    "start": "2099520",
    "end": "2104880"
  },
  {
    "text": "and they determined there's a maximum of six connections to each origin server so each flash media",
    "start": "2104880",
    "end": "2110400"
  },
  {
    "text": "server and then each cache node the talk to these origin servers they can have a maximum of 20 streams so",
    "start": "2110400",
    "end": "2116800"
  },
  {
    "text": "they did some math they tested it and you know they saw what happened so again it was just two guys",
    "start": "2116800",
    "end": "2122640"
  },
  {
    "text": "but one of them he's a rocket scientist and he works for us now so that helped so",
    "start": "2122640",
    "end": "2130000"
  },
  {
    "text": "what did they actually do right so they wrote cloud information templates and each template would spin up this",
    "start": "2130000",
    "end": "2136000"
  },
  {
    "text": "architecture so you had a laptop that was hooked up to the actual stream to nasa tv and that laptop would stream",
    "start": "2136000",
    "end": "2141920"
  },
  {
    "text": "to two adobe flash media servers and that would then go to some tier one caches and these caches were just",
    "start": "2141920",
    "end": "2147200"
  },
  {
    "text": "instances with nginx on them and then there'd be a second tier of caches with nginx on them",
    "start": "2147200",
    "end": "2152240"
  },
  {
    "text": "and then there'd be elbs in front of them right and so every time they could basically deploy",
    "start": "2152240",
    "end": "2158000"
  },
  {
    "text": "keep deploying these cloud formation stacks to get more and more capacity so how did they know how this was going",
    "start": "2158000",
    "end": "2164480"
  },
  {
    "text": "to perform they had to do load testing right so that's another thing that's great about cloudformation instead of testing",
    "start": "2164480",
    "end": "2170320"
  },
  {
    "text": "against production and you know breaking your production potentially you can spin up a cloud formation template which spins up a copy",
    "start": "2170320",
    "end": "2176880"
  },
  {
    "text": "of your stack it's exactly the same size and exactly the same as production and you can test against it and if it",
    "start": "2176880",
    "end": "2182480"
  },
  {
    "text": "breaks it that's okay because it's a test and so they use this tool called soasta which is a cloud",
    "start": "2182480",
    "end": "2189200"
  },
  {
    "text": "cloud benchmarking service and so i don't know if you can see there might not be sure but they tested it to uh 10 million users and so what they",
    "start": "2189200",
    "end": "2197359"
  },
  {
    "text": "found out was that um they got about 25.3 gigabits a second out of each one of these uh cloud",
    "start": "2197359",
    "end": "2204000"
  },
  {
    "text": "formation templates so if they needed more capacity they could just spin one up on demand now they had to test the actual uh you",
    "start": "2204000",
    "end": "2210320"
  },
  {
    "text": "know the origin was working i was actually caching so they use the cloudwatch uh you know to test this",
    "start": "2210320",
    "end": "2216000"
  },
  {
    "text": "and so they saw when they did the load test that there's only 42 megabits a second going to the origin so that means the",
    "start": "2216000",
    "end": "2221680"
  },
  {
    "text": "testing worked so ultimately everything worked another interesting tidbit from it is that",
    "start": "2221680",
    "end": "2228240"
  },
  {
    "text": "actually the that this was streaming of nasa tv they weren't streaming the actual landing because you know there's latency",
    "start": "2228240",
    "end": "2234880"
  },
  {
    "text": "going to and from mars and the resolution was kind of low at first but they did get the first image that",
    "start": "2234880",
    "end": "2240800"
  },
  {
    "text": "came back from the rover there's a little tiny image it wasn't this one and the total capacity of that image the",
    "start": "2240800",
    "end": "2247119"
  },
  {
    "text": "total bandwidth it used was more than the whole live stream and it was but that was just hosted on s3 and you know they didn't",
    "start": "2247119",
    "end": "2253200"
  },
  {
    "text": "really have to worry about scaling that and it worked so stay asleep yeah exactly so if you want to learn",
    "start": "2253200",
    "end": "2259839"
  },
  {
    "text": "more about building things at scale there's a session friday at 1 30 in this room actually and it is about",
    "start": "2259839",
    "end": "2267119"
  },
  {
    "text": "using apache kafka twitter storm and elasticsearch on aws so let's just summarize uh so continuous",
    "start": "2267119",
    "end": "2273760"
  },
  {
    "text": "deployment it means small frequent changes you're constantly integrating into production",
    "start": "2273760",
    "end": "2279200"
  },
  {
    "text": "and so the key here is that you're constantly iterating right so you're modifying the system all the time",
    "start": "2279200",
    "end": "2284400"
  },
  {
    "text": "to improve you know and to meet the expectations of your users so let's talk about deployments at",
    "start": "2284400",
    "end": "2290240"
  },
  {
    "text": "amazon so at amazon.com uh there's about an 11.6 second mean time between deployments",
    "start": "2290240",
    "end": "2296560"
  },
  {
    "text": "there are about a maximum of around 1079 deployments in a single hour",
    "start": "2296560",
    "end": "2301680"
  },
  {
    "text": "and about 10 000 average number of hosts receive a deployment at any given time",
    "start": "2301680",
    "end": "2307359"
  },
  {
    "text": "but they can go up to 30 000 sometimes so because you're iterating constantly it's not scary to do the deploy rate",
    "start": "2307359",
    "end": "2313920"
  },
  {
    "text": "because you're not doing one massive deploy a month so because it's not a software launch it's just a deploy",
    "start": "2313920",
    "end": "2320160"
  },
  {
    "text": "let's talk about another one uh use case here and that's etsy so etsy has a lot of traffic they",
    "start": "2320160",
    "end": "2326160"
  },
  {
    "text": "sell a lot of stuff and so they do 30 deploys a day that's about one deploy every 20 minutes",
    "start": "2326160",
    "end": "2333760"
  },
  {
    "text": "and so they think that production is really the only way that you can test your code and so this i think this is from their",
    "start": "2333760",
    "end": "2340400"
  },
  {
    "text": "which most of the devops people are probably freaking out a little bit right now",
    "start": "2340400",
    "end": "2345920"
  },
  {
    "text": "so how do they do that uh they actually they use feature flags so they just have a configuration file",
    "start": "2346560",
    "end": "2351760"
  },
  {
    "text": "right and they can turn features on and off on demand so for example if they're doing a new search",
    "start": "2351760",
    "end": "2357520"
  },
  {
    "text": "uh they just have a flag for it and if it's off it does the old search with grep if it's",
    "start": "2357520",
    "end": "2363280"
  },
  {
    "text": "on it does the new search with solar so you can easily if you see something doesn't work you can just turn it back off that's not a",
    "start": "2363280",
    "end": "2368960"
  },
  {
    "text": "disaster you also allows you to do a lot of a b tests and ramp ups right so you can",
    "start": "2368960",
    "end": "2374720"
  },
  {
    "text": "you can turn things on only for a subset of your users or you know you can you insert something",
    "start": "2374720",
    "end": "2380400"
  },
  {
    "text": "on for 10 of your users and see not only does it work but do people like it are people more",
    "start": "2380400",
    "end": "2385839"
  },
  {
    "text": "responsive to the changes so that's some of the stuff that you can do now another",
    "start": "2385839",
    "end": "2391040"
  },
  {
    "text": "one of our solutions is aws ops works so like i said before opsworks is basically an integrated",
    "start": "2391040",
    "end": "2396400"
  },
  {
    "text": "application management platform there's going to be a drill down session on thursday at 3 pm",
    "start": "2396400",
    "end": "2401440"
  },
  {
    "text": "and it's going to talk about how opsworks works under the hood and so a customer that uses opsworks is",
    "start": "2401440",
    "end": "2407040"
  },
  {
    "text": "so there's this game monster world they don't use a cache they have about",
    "start": "2407040",
    "end": "2412079"
  },
  {
    "text": "50 000 database updates per second and 14 billion requests a month",
    "start": "2412079",
    "end": "2417200"
  },
  {
    "text": "and uh these ops works to great success and so the other thing is you also want to",
    "start": "2417200",
    "end": "2422800"
  },
  {
    "text": "be data driven you don't want to be guessing things right you want to see how much what the statistics are so at etsy they",
    "start": "2422800",
    "end": "2429200"
  },
  {
    "text": "have all these big tvs on with all their deployment statistics and performance statistics",
    "start": "2429200",
    "end": "2434800"
  },
  {
    "text": "and at obama for america we use that we use this uh what was this application called jp",
    "start": "2434800",
    "end": "2440319"
  },
  {
    "text": "um i actually don't remember well what this shows well this i mean it was",
    "start": "2440319",
    "end": "2445680"
  },
  {
    "text": "graphite and statsd um and cubism cubism cubism is a",
    "start": "2445680",
    "end": "2451119"
  },
  {
    "text": "d3 compatible plug-in that demonstrates that data and you could see how easy it's going to be",
    "start": "2451119",
    "end": "2457280"
  },
  {
    "text": "to actually start correlating different events and different ways that pieces of your architecture are affected",
    "start": "2457280",
    "end": "2464800"
  },
  {
    "text": "and so you can see a lot of our applications they depend on each other so for example if the identity",
    "start": "2464800",
    "end": "2470160"
  },
  {
    "text": "management system was slow that would impact a lot of other apps so this is a you know a time series so",
    "start": "2470160",
    "end": "2476400"
  },
  {
    "text": "you can see exactly how applications interact with each other and it'll it would make it easier for you to figure out the cause of a certain",
    "start": "2476400",
    "end": "2482960"
  },
  {
    "text": "issue the other thing that you know cloud formation and deploying things programmatically",
    "start": "2482960",
    "end": "2488400"
  },
  {
    "text": "makes really easy is to figure out which architecture costs less because you don't have to buy servers",
    "start": "2488400",
    "end": "2493839"
  },
  {
    "text": "you can just spin a new architecture up and you can experiment so for example if i want to see is nginx and node.js",
    "start": "2493839",
    "end": "2499680"
  },
  {
    "text": "is that is that more uh you know economical than php and apache and varnish so what you can do is you can use amazon",
    "start": "2499680",
    "end": "2506839"
  },
  {
    "text": "route53 and so you can have two whole stacks to totally different stacks that serve the same application",
    "start": "2506839",
    "end": "2512240"
  },
  {
    "text": "and then you can send traffic to both of them and so you can see in production well how much does this scale versus how",
    "start": "2512240",
    "end": "2517440"
  },
  {
    "text": "much is that scale how much does this cost me so again you're continuously experimenting you're continuously",
    "start": "2517440",
    "end": "2524400"
  },
  {
    "text": "improving and this allows you to innovate so if you want to increase innovation you have",
    "start": "2524400",
    "end": "2529839"
  },
  {
    "text": "to make failure something that's not scary you want to be able to fail fast and iterate fast",
    "start": "2529839",
    "end": "2535440"
  },
  {
    "text": "so amazon web services allows you to experiment often allows you to fail at a low cost and",
    "start": "2535440",
    "end": "2540960"
  },
  {
    "text": "allows you to keep innovating one of the things we always tell people is being in devops isn't about",
    "start": "2540960",
    "end": "2546240"
  },
  {
    "text": "preventing all failures as much as that optimistic goal is is really nice",
    "start": "2546240",
    "end": "2551440"
  },
  {
    "text": "it's about making them not hurt so those are all of our slides uh but i",
    "start": "2551440",
    "end": "2558000"
  },
  {
    "text": "think we have time to take some questions so there's some microphones on either side of the room so if anybody's interested",
    "start": "2558000",
    "end": "2565839"
  },
  {
    "text": "and thanks everybody for coming by the way i can't believe how giant this room is thank you",
    "start": "2567440",
    "end": "2579838"
  },
  {
    "text": "you",
    "start": "2580160",
    "end": "2582240"
  }
]