[
  {
    "text": "- Welcome to \"Back to Basics\".",
    "start": "6600",
    "end": "8760"
  },
  {
    "text": "In this episode, we will explore",
    "start": "8760",
    "end": "11126"
  },
  {
    "text": "how developers can quickly build, deploy,",
    "start": "11126",
    "end": "14610"
  },
  {
    "text": "and run web applications",
    "start": "14610",
    "end": "16049"
  },
  {
    "text": "and APIs at scale without\nprior infrastructure",
    "start": "16050",
    "end": "19650"
  },
  {
    "text": "or container experience.",
    "start": "19650",
    "end": "21869"
  },
  {
    "text": "In my experience working\nwith a range of customers,",
    "start": "21870",
    "end": "25440"
  },
  {
    "text": "it is common for development teams to want",
    "start": "25440",
    "end": "27810"
  },
  {
    "text": "to focus on app development,",
    "start": "27810",
    "end": "29760"
  },
  {
    "text": "but run into several challenges\nthat hinder productivity.",
    "start": "29760",
    "end": "33840"
  },
  {
    "text": "These often include\ninfrastructure management being",
    "start": "33840",
    "end": "37860"
  },
  {
    "text": "a distraction for developers,",
    "start": "37860",
    "end": "39690"
  },
  {
    "text": "rather than focusing on innovation,",
    "start": "39690",
    "end": "42269"
  },
  {
    "text": "delivering high-quality features",
    "start": "42270",
    "end": "44040"
  },
  {
    "text": "and solving business challenges.",
    "start": "44040",
    "end": "46290"
  },
  {
    "text": "There is a steep learning\ncurve to become familiar",
    "start": "46290",
    "end": "49200"
  },
  {
    "text": "with infrastructure services to build",
    "start": "49200",
    "end": "51510"
  },
  {
    "text": "and run critical workloads.",
    "start": "51510",
    "end": "53820"
  },
  {
    "text": "And the last one is thinking\nabout security and scalability",
    "start": "53820",
    "end": "58080"
  },
  {
    "text": "beyond existing on-premise data centers.",
    "start": "58080",
    "end": "61053"
  },
  {
    "text": "The typical containerized\nweb application architecture",
    "start": "61890",
    "end": "65220"
  },
  {
    "text": "commences with a virtual machine",
    "start": "65220",
    "end": "67290"
  },
  {
    "text": "and a guest operating system.",
    "start": "67290",
    "end": "69480"
  },
  {
    "text": "The runtime language\nof choice is installed",
    "start": "69480",
    "end": "71880"
  },
  {
    "text": "and then the application is executed",
    "start": "71880",
    "end": "73799"
  },
  {
    "text": "on the runtime platform.",
    "start": "73800",
    "end": "75480"
  },
  {
    "text": "This stack is likely to have\nmultiple instances in order",
    "start": "75480",
    "end": "79140"
  },
  {
    "text": "to achieve scalability and redundancy.",
    "start": "79140",
    "end": "81960"
  },
  {
    "text": "Consequently, it is\nnecessary to preface it",
    "start": "81960",
    "end": "84570"
  },
  {
    "text": "with a load balancer\nto distribute request.",
    "start": "84570",
    "end": "87300"
  },
  {
    "text": "Then you need to deploy\nan auto scaling group",
    "start": "87300",
    "end": "90300"
  },
  {
    "text": "to enable the application",
    "start": "90300",
    "end": "91860"
  },
  {
    "text": "to dynamically adjusted\ncapacity in response",
    "start": "91860",
    "end": "94740"
  },
  {
    "text": "to traffic fluctuations.",
    "start": "94740",
    "end": "96479"
  },
  {
    "text": "Furthermore, it is probable that,",
    "start": "96480",
    "end": "99425"
  },
  {
    "text": "that exists as CICD pipeline to enable",
    "start": "99425",
    "end": "101490"
  },
  {
    "text": "the distribution of changes\nto this specific application.",
    "start": "101490",
    "end": "104340"
  },
  {
    "text": "AWS App Runner offers a highly abstracted",
    "start": "105570",
    "end": "108870"
  },
  {
    "text": "and simplified experience\nfor operating containers",
    "start": "108870",
    "end": "112080"
  },
  {
    "text": "and web applications at scale\nwith no prior AWS experience.",
    "start": "112080",
    "end": "116550"
  },
  {
    "text": "AWS App Runner is a managed service,",
    "start": "116550",
    "end": "119444"
  },
  {
    "text": "which does not require\nconfiguration of orchestrators,",
    "start": "119444",
    "end": "123810"
  },
  {
    "text": "build pipelines, optimization\nof load balances,",
    "start": "123810",
    "end": "127110"
  },
  {
    "text": "or rotation of TLS certificates.",
    "start": "127110",
    "end": "129720"
  },
  {
    "text": "Moreover, there are no servers to manage.",
    "start": "129720",
    "end": "132390"
  },
  {
    "text": "You only need to specify the CPU",
    "start": "132390",
    "end": "134550"
  },
  {
    "text": "and memory requirements\nfor your application.",
    "start": "134550",
    "end": "137580"
  },
  {
    "text": "App Runner intends to reduce\nthe complexity of learning",
    "start": "137580",
    "end": "141720"
  },
  {
    "text": "and maintaining all",
    "start": "141720",
    "end": "143460"
  },
  {
    "text": "of the various container\napplication infrastructure",
    "start": "143460",
    "end": "145740"
  },
  {
    "text": "services into a single service.",
    "start": "145740",
    "end": "148620"
  },
  {
    "text": "Now let's examine the process",
    "start": "148620",
    "end": "150780"
  },
  {
    "text": "of deploying container\narranged applications",
    "start": "150780",
    "end": "153390"
  },
  {
    "text": "and APIs using App Runner.",
    "start": "153390",
    "end": "156000"
  },
  {
    "text": "The first approach is to use\na source code repository.",
    "start": "156000",
    "end": "160050"
  },
  {
    "text": "Development teams engage in\ntheir designated development",
    "start": "160050",
    "end": "163680"
  },
  {
    "text": "environments thereafter committing\ntheir code changes to git",
    "start": "163680",
    "end": "167459"
  },
  {
    "text": "or any other source code repository.",
    "start": "167460",
    "end": "169593"
  },
  {
    "text": "Next step, you will need",
    "start": "170730",
    "end": "172080"
  },
  {
    "text": "to configure the Git connection\ndetails with AWS App Runner.",
    "start": "172080",
    "end": "176550"
  },
  {
    "text": "Then you configure the command required",
    "start": "176550",
    "end": "179640"
  },
  {
    "text": "to build the application and App Runner.",
    "start": "179640",
    "end": "182010"
  },
  {
    "text": "For an example, NPM\ninstall command is required",
    "start": "182010",
    "end": "184980"
  },
  {
    "text": "for a node JS based application.",
    "start": "184980",
    "end": "187290"
  },
  {
    "text": "In the second approach,",
    "start": "187290",
    "end": "188790"
  },
  {
    "text": "you construct the\napplication container images",
    "start": "188790",
    "end": "191849"
  },
  {
    "text": "using preexisting tooling",
    "start": "191850",
    "end": "193770"
  },
  {
    "text": "and push it to the Amazon\nElastic Container Registry",
    "start": "193770",
    "end": "196620"
  },
  {
    "text": "for deployment.",
    "start": "196620",
    "end": "197940"
  },
  {
    "text": "Once the application is deployed,",
    "start": "197940",
    "end": "199860"
  },
  {
    "text": "using the mentioned approach, the user is",
    "start": "199860",
    "end": "202500"
  },
  {
    "text": "provided with a secure URL,\nwhich is production ready.",
    "start": "202500",
    "end": "205980"
  },
  {
    "text": "App Runner automates\nthe process of building",
    "start": "205980",
    "end": "209220"
  },
  {
    "text": "and deploying container images,\nconfiguring load balancing,",
    "start": "209220",
    "end": "213330"
  },
  {
    "text": "implementing encryption,",
    "start": "213330",
    "end": "214890"
  },
  {
    "text": "and dynamically adjusting\nresource allocation",
    "start": "214890",
    "end": "217530"
  },
  {
    "text": "in response to incoming traffic request.",
    "start": "217530",
    "end": "220373"
  },
  {
    "text": "AWS App Runner accelerates innovation",
    "start": "220373",
    "end": "223560"
  },
  {
    "text": "by abstracting away infrastructure",
    "start": "223560",
    "end": "225870"
  },
  {
    "text": "and streamlining web\napplication development.",
    "start": "225870",
    "end": "229500"
  },
  {
    "text": "In this episode, we examined",
    "start": "229500",
    "end": "231780"
  },
  {
    "text": "how App Runner can effectively\naddress the various obstacles",
    "start": "231780",
    "end": "235319"
  },
  {
    "text": "encountered by development teams",
    "start": "235320",
    "end": "237360"
  },
  {
    "text": "by facilitating the efficient deployment",
    "start": "237360",
    "end": "240360"
  },
  {
    "text": "and execution of\ncontainerized web applications",
    "start": "240360",
    "end": "243450"
  },
  {
    "text": "on a large scale,",
    "start": "243450",
    "end": "244680"
  },
  {
    "text": "resulting in a significant\nreduction in time to market.",
    "start": "244680",
    "end": "248489"
  },
  {
    "text": "Check out the links in the description",
    "start": "248490",
    "end": "250260"
  },
  {
    "text": "below for more details.",
    "start": "250260",
    "end": "251879"
  },
  {
    "text": "Thank you for watching \"Back to Basics\".",
    "start": "251880",
    "end": "253890"
  },
  {
    "text": "See you next time.",
    "start": "253890",
    "end": "255390"
  }
]