[
  {
    "start": "0",
    "end": "60000"
  },
  {
    "text": "welcome back on the screen on the de stream that have been diverted enough to share a stare at",
    "start": "9980",
    "end": "16890"
  },
  {
    "text": "our schedule card for the last 30 minutes it's good of you to stick with us and if you're in the room hi my name",
    "start": "16890",
    "end": "22980"
  },
  {
    "text": "is Ian I lead a team at AWS working on developer relations technical evangelism",
    "start": "22980",
    "end": "29160"
  },
  {
    "text": "so helping developers understand how they can use edible us across quite a few different topics hatch later to",
    "start": "29160",
    "end": "35519"
  },
  {
    "text": "build apps in a different way and this afternoon I'm going to be talking about building intelligent chat BOTS with",
    "start": "35519",
    "end": "42300"
  },
  {
    "text": "Amazon Lakes which is service pronounced a little over a year ago now to simplify",
    "start": "42300",
    "end": "47519"
  },
  {
    "text": "the process for developers that wanted to use natural language in their applications or communicate with human",
    "start": "47519",
    "end": "53100"
  },
  {
    "text": "beings using human-like conversational interfaces actually a service that",
    "start": "53100",
    "end": "59909"
  },
  {
    "text": "shares some of the core concepts and core technology with another Amazon",
    "start": "59909",
    "end": "64920"
  },
  {
    "text": "product which a lot of you will be familiar with Alexa and the Amazon echo so many of the features and capabilities",
    "start": "64920",
    "end": "72890"
  },
  {
    "text": "and components within Amazon Lakes are common with features capabilities and",
    "start": "72890",
    "end": "78420"
  },
  {
    "text": "components that exist within the Amazon without within the Amazon echo and exists within the Alexa voice service",
    "start": "78420",
    "end": "84270"
  },
  {
    "text": "which is the cloud-based service that deals with speech recognition natural language understanding in ten entity",
    "start": "84270",
    "end": "92150"
  },
  {
    "text": "extraction from natural language in order to help you use information",
    "start": "92150",
    "end": "97440"
  },
  {
    "text": "systems using your voice ok and it's that I wanted to talk about first of all before we get on to the main part of",
    "start": "97440",
    "end": "103440"
  },
  {
    "text": "this session and it's important to say the main part of this session is predicated on one assumption ok and it's",
    "start": "103440",
    "end": "110490"
  },
  {
    "text": "very very important that this assumption is true or this session will fail ok and that assumption is you all have to have",
    "start": "110490",
    "end": "116070"
  },
  {
    "text": "facebook Messenger installed on your phones ok if you do not have facebook Messenger installed on your phones this",
    "start": "116070",
    "end": "122340"
  },
  {
    "text": "is going to be the worst demo'd you've ever seen in your life ok now goes for people watching on twitch as well",
    "start": "122340",
    "end": "127620"
  },
  {
    "text": "Facebook Messenger absolutely essential if you don't have it I'm gonna look so so bad when we get to the demo because nothing's going to",
    "start": "127620",
    "end": "132959"
  },
  {
    "text": "happen ok so please have that and when we get there you will be interacting with a Amazon legs chat bot live using",
    "start": "132959",
    "end": "140670"
  },
  {
    "text": "facebook Messenger be able to observe metrics gather some data about this session and actually",
    "start": "140670",
    "end": "146430"
  },
  {
    "text": "show you how one of these applications works in practice if you don't have facebook messenger everything that just",
    "start": "146430",
    "end": "151650"
  },
  {
    "text": "said it's gonna fail okay so please have that if you don't have it install it now you've got time okay so why did we",
    "start": "151650",
    "end": "157500"
  },
  {
    "text": "why do build Amazon Lex what is it and then we'll jump straight into the console and show you some getting started stuff so if you're old like me",
    "start": "157500",
    "end": "165260"
  },
  {
    "text": "you probably remember maybe there are some people in the room with this first",
    "start": "165260",
    "end": "170430"
  },
  {
    "text": "generation of completing this first generation of computing computing interfaces like to describe it is the",
    "start": "170430",
    "end": "176639"
  },
  {
    "text": "original asynchronous programming model okay not asynchronous because we're using callbacks asynchronous because you",
    "start": "176639",
    "end": "182069"
  },
  {
    "text": "give somebody your punch cards they take them away they run them on a machine somewhere and then a few hours or days",
    "start": "182069",
    "end": "188220"
  },
  {
    "text": "later they come back with the results okay that's really synchronous programming and of course what we're talking about here is really mainframes",
    "start": "188220",
    "end": "195480"
  },
  {
    "text": "batch processing simplistic algorithms that are used for data processing okay really at this stage computing was not",
    "start": "195480",
    "end": "201870"
  },
  {
    "text": "accessible information systems were not accessible they were only accessible to the small",
    "start": "201870",
    "end": "207060"
  },
  {
    "text": "group of wizards that were blessed with direct access to the machine and then by proxy to people that would you know",
    "start": "207060",
    "end": "212729"
  },
  {
    "text": "request time on the system in order to run their calculations and get their results so a long time in the past now",
    "start": "212729",
    "end": "219479"
  },
  {
    "text": "but that's actually where human-computer interaction all started ok it started actually with really poor interfaces",
    "start": "219479",
    "end": "226409"
  },
  {
    "text": "that only real experts could use what happened in the mid to late 70s was",
    "start": "226409",
    "end": "233310"
  },
  {
    "text": "research around alternative interfaces by this time the command line had been established as a primary mechanism for",
    "start": "233310",
    "end": "239939"
  },
  {
    "text": "interaction this is where visual analogues started to come into play so",
    "start": "239939",
    "end": "244979"
  },
  {
    "text": "we're thinking about a couple of things really the visual analogs that we're all very familiar with today like pointers",
    "start": "244979",
    "end": "251310"
  },
  {
    "text": "and sliders and folders menus ok but also things like skeuomorphism you know",
    "start": "251310",
    "end": "258720"
  },
  {
    "text": "the idea that when you open a notebook app on your iPad it has a fake wire spiral binding down the left-hand side",
    "start": "258720",
    "end": "265409"
  },
  {
    "text": "and it looks a little bit like an actual physical notepad that you might write on it's fallen from favor a little bit now",
    "start": "265409",
    "end": "271979"
  },
  {
    "text": "but there was definitely a belief that this kind of interface design would make machines more accessible to people that",
    "start": "271979",
    "end": "278969"
  },
  {
    "text": "work suitable with them so you saw traits like that creeping into interface design it's good",
    "start": "278969",
    "end": "284949"
  },
  {
    "text": "they made applications and services more accessible okay so you do have plenty of",
    "start": "284949",
    "end": "289960"
  },
  {
    "text": "examples for example of young children that are just super familiar with touch interfaces and really get how to",
    "start": "289960",
    "end": "296020"
  },
  {
    "text": "interact and manipulate the machine access information sources and drive",
    "start": "296020",
    "end": "301180"
  },
  {
    "text": "applications using this very natural gesture based interface model right we're all super comfy with that today",
    "start": "301180",
    "end": "306849"
  },
  {
    "text": "what you've seen over the course of the last three years really rise to",
    "start": "306849",
    "end": "312039"
  },
  {
    "text": "significant usage really driven predominantly by the adoption of the",
    "start": "312039",
    "end": "318909"
  },
  {
    "text": "echo of the physical device that Amazon created and that we sell today and was actually the most proper popular product",
    "start": "318909",
    "end": "325449"
  },
  {
    "text": "on the Amazon retail website in the u.s. in live and up to Christmas believe it or not the echo device was the most popular single product what we've seen",
    "start": "325449",
    "end": "332650"
  },
  {
    "text": "is a new generation of conversational interfaces that just makes information services and applications ubiquitously",
    "start": "332650",
    "end": "340210"
  },
  {
    "text": "available to anybody that can speak in a supported language okay this has had a really interesting effect the first",
    "start": "340210",
    "end": "346060"
  },
  {
    "text": "thing is it's broken down a few barriers to accessibility that still existed saw a customer user and customers speak at",
    "start": "346060",
    "end": "354130"
  },
  {
    "text": "an AWS user group event in Dublin over the course of the last couple of years somebody with a severe visual impairment",
    "start": "354130",
    "end": "360219"
  },
  {
    "text": "could hardly see anything okay but since they've got an echo in their home they",
    "start": "360219",
    "end": "365500"
  },
  {
    "text": "were able to access information sources that the rest of us with working vision",
    "start": "365500",
    "end": "370870"
  },
  {
    "text": "all take for granted imagine never been able to use Google never been able to see a list of search results and never",
    "start": "370870",
    "end": "377469"
  },
  {
    "text": "really being able to make a query against an information source like that how disadvantaged you would be if you",
    "start": "377469",
    "end": "383650"
  },
  {
    "text": "couldn't do things like that and one of the big changes that's been driven by the rise of these voice based interfaces",
    "start": "383650",
    "end": "389500"
  },
  {
    "text": "is that fact that now information systems they're very young with the touch yeah but now they're very old or",
    "start": "389500",
    "end": "396130"
  },
  {
    "text": "the disabled the impaired that might not be able to access systems due to those impairments are now able to do so the",
    "start": "396130",
    "end": "404800"
  },
  {
    "text": "other thing that you've got here is general-purpose voice interface if you",
    "start": "404800",
    "end": "411279"
  },
  {
    "text": "want to call it that so the device the system the election voice service does something called intent",
    "start": "411279",
    "end": "417699"
  },
  {
    "text": "resolution it can naturally distinguish between phrases like what's the weather going to be like tomorrow and how long",
    "start": "417699",
    "end": "423550"
  },
  {
    "text": "is it going to take me to get to the station okay and it figures out what you want to get out of that intent okay",
    "start": "423550",
    "end": "430900"
  },
  {
    "text": "called intent resolution works out how to route that to an information source",
    "start": "430900",
    "end": "435969"
  },
  {
    "text": "that can provide you with fulfillment to that particular intent generates natural language and provides it back to you",
    "start": "435969",
    "end": "442330"
  },
  {
    "text": "okay so when we're talking about general purpose voice interfaces it's that capability to do the intent resolution",
    "start": "442330",
    "end": "448360"
  },
  {
    "text": "that is really the big leap forward that we've taken in the last few years we've always had or for quite a while had the",
    "start": "448360",
    "end": "453849"
  },
  {
    "text": "capability to press the button in the car and say a name and have somebody called right but that's in a very narrow",
    "start": "453849",
    "end": "460469"
  },
  {
    "text": "namespace a very narrow scope it's the general-purpose resolution of these wide",
    "start": "460469",
    "end": "465669"
  },
  {
    "text": "intent spaces where we might support tens of thousands or hundreds of thousands of different use cases and",
    "start": "465669",
    "end": "471909"
  },
  {
    "text": "have the capability to very quickly use a classifier that kind of classification algorithm that Julian was talking about",
    "start": "471909",
    "end": "477370"
  },
  {
    "text": "in some of the earlier sessions to figure out what that particular collection of words means in terms of",
    "start": "477370",
    "end": "483159"
  },
  {
    "text": "the intent options that are available resolve it down and then move through the process to fulfill that intent for",
    "start": "483159",
    "end": "488620"
  },
  {
    "text": "the customer this is a you know probably starting to now take this for granted this is a big deal this is a really big",
    "start": "488620",
    "end": "495430"
  },
  {
    "text": "change in HCI in human-computer interfaces covered already I think so",
    "start": "495430",
    "end": "500550"
  },
  {
    "start": "500000",
    "end": "920000"
  },
  {
    "text": "with Lex it's not the Amazon echo and it's not a lek so it's a different",
    "start": "500550",
    "end": "506169"
  },
  {
    "text": "services but we're just worthwhile exploring why we built this and in what ways is it different from the echo and",
    "start": "506169",
    "end": "512560"
  },
  {
    "text": "what ways is it different from Alexa so one of the ways in which it's different is with legs you can plug different",
    "start": "512560",
    "end": "520630"
  },
  {
    "text": "channels or different applications consider these different front ends into the engine okay so I might have a mobile",
    "start": "520630",
    "end": "528430"
  },
  {
    "text": "app which is a travel booking app okay I want to allow my customers to search for and book hotels accommodation and car",
    "start": "528430",
    "end": "535089"
  },
  {
    "text": "hire okay I've already built that my objective might be to voice enable that",
    "start": "535089",
    "end": "541779"
  },
  {
    "text": "existing application so I don't want widen tenant resolute only one I have three intents that are",
    "start": "541779",
    "end": "547990"
  },
  {
    "text": "pertinent to the use case that I'm servicing with my app okay with Lex it's very simple to build a text or voice",
    "start": "547990",
    "end": "554980"
  },
  {
    "text": "based interface bolt light into an existing application using our Lex API our runtime api and accept calls against",
    "start": "554980",
    "end": "564009"
  },
  {
    "text": "that api and then resolve them down to one of those three or four intents that are required for our particular use case",
    "start": "564009",
    "end": "570730"
  },
  {
    "text": "so I could take my existing travel booking app add a button to it that says talk to me okay I have a customer press",
    "start": "570730",
    "end": "577930"
  },
  {
    "text": "that button and literally say I want to book a hotel and then enter into a dialogue with them just by using the Lex",
    "start": "577930",
    "end": "583930"
  },
  {
    "text": "API in combination with this existing mobile app very very simple for that",
    "start": "583930",
    "end": "588940"
  },
  {
    "text": "very targeted use case okay so that's one useful component of the service the",
    "start": "588940",
    "end": "595240"
  },
  {
    "text": "other thing is I might want to go where my customers already are we're going to talk about Facebook Messenger later so",
    "start": "595240",
    "end": "601540"
  },
  {
    "text": "don't forget that very important part of the demo okay but obviously there are chat platforms that have hundreds of",
    "start": "601540",
    "end": "607630"
  },
  {
    "text": "millions or billions of users on them already okay wouldn't it be nice if you could take your application or take your",
    "start": "607630",
    "end": "614110"
  },
  {
    "text": "intelligent agent out into one of these existing communities and interact with",
    "start": "614110",
    "end": "620230"
  },
  {
    "text": "your customers via one of these existing platforms one of these platforms where they're already present okay and that's",
    "start": "620230",
    "end": "625810"
  },
  {
    "text": "what you can do with Lex you can bolt it into Facebook slack Twilio you can build",
    "start": "625810",
    "end": "631209"
  },
  {
    "text": "your own web hooks based api edge to enable your clients to communicate with",
    "start": "631209",
    "end": "637589"
  },
  {
    "text": "Amazon Lex's conversational interface engine from wherever they happen to be",
    "start": "637589",
    "end": "642760"
  },
  {
    "text": "from whatever chat client they happen to be using whether that is Twitter direct messages Facebook's like Twilio or",
    "start": "642760",
    "end": "649930"
  },
  {
    "text": "something else that hasn't been invented yet and you can reuse the same chat bot engine across all of these different",
    "start": "649930",
    "end": "655600"
  },
  {
    "text": "channels okay you are hitting the API you are providing these utterances these fragments of text we are connecting that",
    "start": "655600",
    "end": "662649"
  },
  {
    "text": "with our natural language understanding engine resolving those intents down and generating utterances or conversational",
    "start": "662649",
    "end": "669610"
  },
  {
    "text": "fragments that go back to your customers to drive this conversational interface the back and forth of human conversation",
    "start": "669610",
    "end": "676389"
  },
  {
    "text": "okay so that's what we're trying to solve for simplicity okay and the ability to go wide across different platform types of",
    "start": "676389",
    "end": "682960"
  },
  {
    "text": "course different channels the other thing we're trying to solve for of course is hiding away abstracting away",
    "start": "682960",
    "end": "689620"
  },
  {
    "text": "some of the heavy lifting associated with building systems of this type already mentioning classifiers where we want to have our 10 or 12 different",
    "start": "689620",
    "end": "696940"
  },
  {
    "text": "intents maybe within our particular use case have our phrases there are",
    "start": "696940",
    "end": "703150"
  },
  {
    "text": "representative examples of those particular intents and have a pre trained deep learning model neural",
    "start": "703150",
    "end": "709450"
  },
  {
    "text": "network model that will allow us to quickly resolve the difference between I won a book a flight and I want to book a",
    "start": "709450",
    "end": "715720"
  },
  {
    "text": "car okay and that's one of the things we do in the service we allow you to provide representative examples of these",
    "start": "715720",
    "end": "722530"
  },
  {
    "text": "intents and then we enable you to simply use deep learning technology to do this",
    "start": "722530",
    "end": "728200"
  },
  {
    "text": "intent resolution and figure out what your customers asking for also in a similar vein we support entity",
    "start": "728200",
    "end": "735070"
  },
  {
    "text": "extraction and we call these entities slots in Lex peak in our service",
    "start": "735070",
    "end": "740800"
  },
  {
    "text": "terminology if you like and slots are useful pieces of information that we",
    "start": "740800",
    "end": "745990"
  },
  {
    "text": "need to conclude fulfillment of a particular intent if I say I want to book a flight well that's not quite",
    "start": "745990",
    "end": "751300"
  },
  {
    "text": "enough is it you know I just read this morning that you can fly to 180 destinations for Manchester Airport so",
    "start": "751300",
    "end": "756910"
  },
  {
    "text": "even if I said I want to book a flight from Manchester Airport it's still not enough to do anything meaningful and I",
    "start": "756910",
    "end": "761920"
  },
  {
    "text": "need to know where I want to go to when I want to travel what time of day which",
    "start": "761920",
    "end": "767380"
  },
  {
    "text": "carrier what class of travel some of that information is essential mandatory information to conclude that fulfilment",
    "start": "767380",
    "end": "773560"
  },
  {
    "text": "some of it might be considered optional and with legs can build a language model",
    "start": "773560",
    "end": "778630"
  },
  {
    "text": "for a particular intent that specifies these mandatory and optional slots and automatically generates the language",
    "start": "778630",
    "end": "785200"
  },
  {
    "text": "that is required to fulfill the intent by populating those slots so the system",
    "start": "785200",
    "end": "790780"
  },
  {
    "text": "will literally ask me where do I wish to travel to on what date and at what time",
    "start": "790780",
    "end": "796200"
  },
  {
    "text": "and if I specified them as mandatory with which airline and in what class",
    "start": "796200",
    "end": "801810"
  },
  {
    "text": "okay so those are conversational fragments that are generated automatically by the engine as a",
    "start": "801810",
    "end": "808920"
  },
  {
    "text": "developer I just specify the intent and the slots and then we use another",
    "start": "808920",
    "end": "814060"
  },
  {
    "text": "deep learning neural network a pre-trained model to generate appropriate language to gather this",
    "start": "814060",
    "end": "819129"
  },
  {
    "text": "additional information enabling that intent to be fulfilled with all of the required data so you don't have to build",
    "start": "819129",
    "end": "825430"
  },
  {
    "text": "the language models you don't have to build the intent resolution in the entity extraction technology you're just",
    "start": "825430",
    "end": "832059"
  },
  {
    "text": "defining a model for your particular intent the data that is important to you to that particular in 10 and then Lex",
    "start": "832059",
    "end": "838209"
  },
  {
    "text": "will do the rest okay but you can also you can also customize and I'll show you some more customization later you can",
    "start": "838209",
    "end": "845170"
  },
  {
    "text": "customize on slot validation so business logic or rules for example I can't book",
    "start": "845170",
    "end": "850779"
  },
  {
    "text": "a flight in the past can i but yesterday is a valid date so for that particular",
    "start": "850779",
    "end": "856269"
  },
  {
    "text": "use case I'd want slot validation and I can build that in a scalable way by essentially connecting my Amazon Lex",
    "start": "856269",
    "end": "864550"
  },
  {
    "text": "chat bot to lambda functions AWS lambda functions that encode the business logic required to do things like validate",
    "start": "864550",
    "end": "871300"
  },
  {
    "text": "Schloss okay in the same unfulfillment when it comes to fulfilling mice I intend I can link my chat bot to a",
    "start": "871300",
    "end": "878110"
  },
  {
    "text": "lambda function that encodes the business logic required to do the fulfillment in the case of flight",
    "start": "878110",
    "end": "883209"
  },
  {
    "text": "booking it might be reaching out to a flight booking API that exists on a legacy system and actually executing",
    "start": "883209",
    "end": "889089"
  },
  {
    "text": "that booking the speed receiving a confirmation code back and turning that confirmation code into a spoken",
    "start": "889089",
    "end": "894699"
  },
  {
    "text": "confirmation or written confirmation that a user receives so I can address some of these scaling security security",
    "start": "894699",
    "end": "902309"
  },
  {
    "text": "availability business logic challenges by using other AWS services actually a",
    "start": "902309",
    "end": "908470"
  },
  {
    "text": "broad range of different AWS services but AWS lambda is the glue that makes the stuff happen ok we'll explain",
    "start": "908470",
    "end": "914589"
  },
  {
    "text": "precisely how later on when we get into the demo and take a look at the docs okay so we've covered pretty much",
    "start": "914589",
    "end": "922300"
  },
  {
    "start": "920000",
    "end": "1065000"
  },
  {
    "text": "everything I wanted to cover on why we built this and what we've built just",
    "start": "922300",
    "end": "927550"
  },
  {
    "text": "talk a little bit about this this is important ok so I mentioned before I would just dive a little bit more into",
    "start": "927550",
    "end": "933279"
  },
  {
    "text": "language models here because this is one of the really interesting parts of the service in my view mentioned before that",
    "start": "933279",
    "end": "939519"
  },
  {
    "text": "you can hook on voice based access to these services or you can",
    "start": "939519",
    "end": "944579"
  },
  {
    "text": "with customers through text-based channels okay and that means that the language recognition the language model",
    "start": "944579",
    "end": "950699"
  },
  {
    "text": "is essentially split into two components the speech recognition which is basically what did I say and when I mean",
    "start": "950699",
    "end": "957329"
  },
  {
    "text": "what did I say I mean what sequence of words did I utter that's you utterance okay so that's the first thing we do if",
    "start": "957329",
    "end": "963239"
  },
  {
    "text": "you submit audio to the Lexx engine we will perform ASR or automated speech",
    "start": "963239",
    "end": "968489"
  },
  {
    "text": "recognition on the audio extract the words and then we'll send those words into an LL NLU engine this is the",
    "start": "968489",
    "end": "976230"
  },
  {
    "text": "natural language understanding engine and this is the thing that knows the difference between I want to book a flight and I want to book a car I want",
    "start": "976230",
    "end": "983939"
  },
  {
    "text": "to hire a car you know sit or figure out those intents and that's also the thing that will do that slot extraction and",
    "start": "983939",
    "end": "991309"
  },
  {
    "text": "generate on the outbound this phraseology to enable us to fill out our",
    "start": "991309",
    "end": "996720"
  },
  {
    "text": "data model okay to enable us to gather the information that we need to fill fulfill a particular intent or a",
    "start": "996720",
    "end": "1001939"
  },
  {
    "text": "particular use case within the bot okay so with that I normally just jump out",
    "start": "1001939",
    "end": "1007549"
  },
  {
    "text": "the slides here and show you a few things that's why anything to do intend to do today as well",
    "start": "1007549",
    "end": "1014410"
  },
  {
    "text": "okay so I'm in the AWS console here I'm not waiting in the North Virginia region",
    "start": "1022649",
    "end": "1029230"
  },
  {
    "text": "this service is available in two regions right now North oh Jenny OS East one and the US",
    "start": "1029230",
    "end": "1034269"
  },
  {
    "text": "one over in Ireland so you can run these endpoints locally it just so happens that when I started building on Lex",
    "start": "1034269",
    "end": "1040808"
  },
  {
    "text": "we haven't actually launched a service in EU West one so that's why my examples of running in North Virginia but there's",
    "start": "1040809",
    "end": "1046240"
  },
  {
    "text": "no other reason for it beyond that and I guess the fact that I sometimes like to experiment in integrating brand-new AWS",
    "start": "1046240",
    "end": "1053559"
  },
  {
    "text": "services into some of these demos which I'll show you one of later which is only available in that region could call it internationally but the latency is going",
    "start": "1053559",
    "end": "1060220"
  },
  {
    "text": "to be improved if I'm local to it that's one of the reasons that I operate there like most AWS services you'll find that",
    "start": "1060220",
    "end": "1067149"
  },
  {
    "start": "1065000",
    "end": "1180000"
  },
  {
    "text": "we have representative examples of the service that you can create directly within the console we call this the",
    "start": "1067149",
    "end": "1072760"
  },
  {
    "text": "first one experience if you're not familiar with that terminology so something that's intended to make it easier for the developers to get started",
    "start": "1072760",
    "end": "1078850"
  },
  {
    "text": "with this service and in this particular case we have several different examples okay these are templatized chat bots built",
    "start": "1078850",
    "end": "1086590"
  },
  {
    "text": "using lakes that you can choose to deploy directly into your account for demo purposes or as I've done myself as",
    "start": "1086590",
    "end": "1092380"
  },
  {
    "text": "the basis for other applications that you might build through customization starting with the framework a base",
    "start": "1092380",
    "end": "1098320"
  },
  {
    "text": "framework which includes certain helpful functions and helpers that have been",
    "start": "1098320",
    "end": "1103450"
  },
  {
    "text": "established to help you do things that you can then extend as the basis for you on applications and when I get to show",
    "start": "1103450",
    "end": "1108549"
  },
  {
    "text": "you my more involved example in a few minutes it's actually built off this book trip example you can see here okay",
    "start": "1108549",
    "end": "1114429"
  },
  {
    "text": "but for now we're going to put provision an exact copy of the template application which is called book trip",
    "start": "1114429",
    "end": "1120340"
  },
  {
    "text": "okay we're not going to target on children so we don't need to select that and we hit create and what's happening",
    "start": "1120340",
    "end": "1126519"
  },
  {
    "text": "now is the template application is being deployed into my own AWS account okay",
    "start": "1126519",
    "end": "1134470"
  },
  {
    "text": "and you'll see in the background in the",
    "start": "1134470",
    "end": "1139690"
  },
  {
    "text": "background you'll see a few things that I want to quickly talk about in the top part of the screen hidden behind this",
    "start": "1139690",
    "end": "1145539"
  },
  {
    "text": "modal dialog you'll see these example phrases here okay these are associated with the book our intent that you can",
    "start": "1145539",
    "end": "1152710"
  },
  {
    "text": "see top left so yeah so what i'm doing here is providing",
    "start": "1152710",
    "end": "1158559"
  },
  {
    "text": "these representative phrases that are examples of this particular intent or examples of the phraseology that users",
    "start": "1158559",
    "end": "1165850"
  },
  {
    "text": "might use if they wish to invoke this particular intent reserve a car make a car reservation book the car okay and",
    "start": "1165850",
    "end": "1173200"
  },
  {
    "text": "over time I can develop a longer list of examples using some reporting functionality that I'm going to show you in a second okay but there's three",
    "start": "1173200",
    "end": "1179350"
  },
  {
    "text": "examples there right now and then I have my slots some of the slots you'll",
    "start": "1179350",
    "end": "1185590"
  },
  {
    "start": "1180000",
    "end": "1310000"
  },
  {
    "text": "noticed start with Amazon dot RR built-ins ok these are potentially data",
    "start": "1185590",
    "end": "1192010"
  },
  {
    "text": "types that Amazon has already populated to simplify the process of using them",
    "start": "1192010",
    "end": "1197980"
  },
  {
    "text": "okay so these are language models for particular entities that have been pre",
    "start": "1197980",
    "end": "1203890"
  },
  {
    "text": "trained with training data which allows us to resolve them so for example in the",
    "start": "1203890",
    "end": "1209970"
  },
  {
    "text": "US City slot we're going to have pre-populated the language model there",
    "start": "1209970",
    "end": "1214990"
  },
  {
    "text": "with a large number of different US cities which will enable a natural language engine to resolve and pick",
    "start": "1214990",
    "end": "1220990"
  },
  {
    "text": "those cities out when someone saves them so if I say Detroit or Chicago or Los Angeles that will be in the training",
    "start": "1220990",
    "end": "1227649"
  },
  {
    "text": "data that will help our neural network pick out those particular entities from the spoken or written word ok we've also",
    "start": "1227649",
    "end": "1234520"
  },
  {
    "text": "got a custom slot at the bottom which you can see here for car type ok and we",
    "start": "1234520",
    "end": "1239860"
  },
  {
    "text": "can define custom slot types import our own data and train our own slots using",
    "start": "1239860",
    "end": "1246100"
  },
  {
    "text": "our own custom data sets ok those can be large or small in the case of car types it's not going to be a particularly big",
    "start": "1246100",
    "end": "1252250"
  },
  {
    "text": "training set probably luxury large mid size compact whatever our phrases are and we can",
    "start": "1252250",
    "end": "1258970"
  },
  {
    "text": "actually on the slot and restrict to a specific set of slot values and cinnamon",
    "start": "1258970",
    "end": "1265720"
  },
  {
    "text": "synonyms or we can allow the language modeling engine to automatically extend",
    "start": "1265720",
    "end": "1271000"
  },
  {
    "text": "the the values for that slot to a larger",
    "start": "1271000",
    "end": "1276370"
  },
  {
    "text": "pool using its knowledge of the English language train knowledge of the English language ok I'll show you an example of",
    "start": "1276370",
    "end": "1281919"
  },
  {
    "text": "up streaming custom slot creation later on where we're actually going to use a",
    "start": "1281919",
    "end": "1287080"
  },
  {
    "text": "publicly available data set to pre a custom slot with a large training set okay we can programmatically drive that",
    "start": "1287080",
    "end": "1293500"
  },
  {
    "text": "using a little bit of data science a little bit of data manipulation really I'd call it rather than data science",
    "start": "1293500",
    "end": "1298660"
  },
  {
    "text": "plus the Lexx model building API to import data sets and build slots automatically using that kind of",
    "start": "1298660",
    "end": "1304360"
  },
  {
    "text": "approach that's quite a powerful technique I've been experimenting with recently okay and then you know we have",
    "start": "1304360",
    "end": "1311020"
  },
  {
    "start": "1310000",
    "end": "1395000"
  },
  {
    "text": "our BOTS deployed essentially and we can talk to it we can say book a car in",
    "start": "1311020",
    "end": "1317710"
  },
  {
    "text": "which city do I want to invent a car what did I want to start my rental so",
    "start": "1317710",
    "end": "1326920"
  },
  {
    "text": "you see there's no validation there I can say I want to rent a car yesterday obviously it's impossible to do that and I should reject that shouldn't I but at",
    "start": "1326920",
    "end": "1333550"
  },
  {
    "text": "this stage there's nothing hooked be hooked in behind the language model code",
    "start": "1333550",
    "end": "1339910"
  },
  {
    "text": "to validate any of these entries it's just going to believe whatever I tell it accept whatever I tell it as long as",
    "start": "1339910",
    "end": "1345340"
  },
  {
    "text": "it's valid data but you'll notice for example I put yesterday right the pickup",
    "start": "1345340",
    "end": "1351010"
  },
  {
    "text": "date has been resolved to an ISO date again this is by virtue of the fact that we're using these built-ins it gives me",
    "start": "1351010",
    "end": "1357130"
  },
  {
    "text": "the capability to resolve spoken human dates into system representations into",
    "start": "1357130",
    "end": "1363250"
  },
  {
    "text": "ISO dates that can then work with programmatically of course I could say next Tuesday last Christmas Day two",
    "start": "1363250",
    "end": "1368530"
  },
  {
    "text": "weeks on Friday and it will essentially pick out the appropriate ISO date using that built-in language model it's quite",
    "start": "1368530",
    "end": "1374500"
  },
  {
    "text": "sophisticated it allows us to use natural language rather than having to say you know 2018 or two or six which",
    "start": "1374500",
    "end": "1382750"
  },
  {
    "text": "means something different in the US to what it means in the Europe okay so there's language nuances I've taken into",
    "start": "1382750",
    "end": "1388630"
  },
  {
    "text": "account by virtue of the fact that we can use natural language dates in interaction it's a really useful feature",
    "start": "1388630",
    "end": "1393790"
  },
  {
    "text": "so what about adding validation so you'll see that I've got the ability to hook in a lambda function for",
    "start": "1393790",
    "end": "1400570"
  },
  {
    "start": "1395000",
    "end": "1550000"
  },
  {
    "text": "initialization invalidation okay so to do that I was in need to provision a lambda function within my account which",
    "start": "1400570",
    "end": "1406510"
  },
  {
    "text": "I will do and if you're not familiar with lambda this is our service",
    "start": "1406510",
    "end": "1413020"
  },
  {
    "text": "computing service it allows us to execute code within a managed runtime",
    "start": "1413020",
    "end": "1418990"
  },
  {
    "text": "environment okay it uses containers for deployment but that is an distraction now that you don't really need to worry about essentially what",
    "start": "1418990",
    "end": "1425799"
  },
  {
    "text": "we're going to do is grab a lambda function which is in our blueprints the",
    "start": "1425799",
    "end": "1431350"
  },
  {
    "text": "repository here which is the book trip Python back-end function okay and we're",
    "start": "1431350",
    "end": "1437409"
  },
  {
    "text": "going to configure and deploy that",
    "start": "1437409",
    "end": "1440610"
  },
  {
    "text": "this roll just allows the function to run and record logging day two into",
    "start": "1450160",
    "end": "1455350"
  },
  {
    "text": "another service that we've got so we can gather metrics and do debugging okay and I'll just hit create function on that",
    "start": "1455350",
    "end": "1462690"
  },
  {
    "text": "okay that's it we deployed it already that's quick now if I go back to my legs console I",
    "start": "1467970",
    "end": "1473410"
  },
  {
    "text": "can specify I need to reload this actually to grab my list again I can",
    "start": "1473410",
    "end": "1483520"
  },
  {
    "text": "have my lambda function for initialization book trip back-end give",
    "start": "1483520",
    "end": "1489010"
  },
  {
    "text": "the Lexx permission to invoke and I'll do the same on the fulfillment as well it's the same back end function for both",
    "start": "1489010",
    "end": "1494820"
  },
  {
    "text": "save that intent and I can test again now if I go book a car",
    "start": "1494820",
    "end": "1500970"
  },
  {
    "text": "rent in London and I want to start yesterday okay we're doing here",
    "start": "1500970",
    "end": "1511920"
  },
  {
    "text": "okay bill sorry yeah my mistake got a rebuild so in rebuilding and refreshing",
    "start": "1518679",
    "end": "1526160"
  },
  {
    "text": "the configuration of the bot and also if I've made changes to the language model these will get propagated back into the",
    "start": "1526160",
    "end": "1532429"
  },
  {
    "text": "network into the neural network and those language model changes will then be reflected in the capabilities that",
    "start": "1532429",
    "end": "1538490"
  },
  {
    "text": "the bot from this point so I just need to do that very quickly sorry that will then replace the back end and initialize",
    "start": "1538490",
    "end": "1544370"
  },
  {
    "text": "the lambda function on interaction well that happens I'll just take a look at",
    "start": "1544370",
    "end": "1549860"
  },
  {
    "text": "the docs and explain a little bit more about what's happening here so when I",
    "start": "1549860",
    "end": "1557740"
  },
  {
    "start": "1550000",
    "end": "1720000"
  },
  {
    "text": "converse with the bot either by text or by voice if I have that initialization",
    "start": "1557740",
    "end": "1564740"
  },
  {
    "text": "invalidation checkbox checked and a specific lambda function nominated for",
    "start": "1564740",
    "end": "1569990"
  },
  {
    "text": "invocation on that event type every time I send an utterance to the bot my lambda",
    "start": "1569990",
    "end": "1577100"
  },
  {
    "text": "function will get invoked and my lambda function will receive a fixed format document that contains information data",
    "start": "1577100",
    "end": "1585679"
  },
  {
    "text": "about the utterance that I've just given okay in information post the Lexx",
    "start": "1585679",
    "end": "1592250"
  },
  {
    "text": "language engine having worked on the utterance okay so there's some pre-processing that",
    "start": "1592250",
    "end": "1597410"
  },
  {
    "text": "take pre-processing that takes place in the conversational engine and then my lambda function gets called and this is",
    "start": "1597410",
    "end": "1603770"
  },
  {
    "text": "the document format for those requests okay and you'll see that things like the",
    "start": "1603770",
    "end": "1609080"
  },
  {
    "text": "current intend aspect is specified the slots that I've populated are specified",
    "start": "1609080",
    "end": "1614440"
  },
  {
    "text": "the confirmation status the name of the bot the alias the user ID of the user",
    "start": "1614440",
    "end": "1620600"
  },
  {
    "text": "which can be used for session maintenance and also other data is passed into my lambda function in this",
    "start": "1620600",
    "end": "1627440"
  },
  {
    "text": "fixed format so in my lambda function I'm essentially going to write a handler that understands how to interpret that",
    "start": "1627440",
    "end": "1634100"
  },
  {
    "text": "document okay how to operate on that document how to extract slots for validation how to fulfill the intent if",
    "start": "1634100",
    "end": "1640820"
  },
  {
    "text": "the fault fulfil intent flag is set how to work with the input transcript for",
    "start": "1640820",
    "end": "1646370"
  },
  {
    "text": "example if that's something that I need to do so it's by writing a function it's capable of interpreting and",
    "start": "1646370",
    "end": "1652039"
  },
  {
    "text": "operating upon the data structure that is represented in that document that I do this n Richmond okay that I'd create",
    "start": "1652039",
    "end": "1657940"
  },
  {
    "text": "more sophistication in the validation I create things like random responses that",
    "start": "1657940",
    "end": "1663049"
  },
  {
    "text": "I build any advanced functionality beyond the functionality that is inherent within the front-end so it's",
    "start": "1663049",
    "end": "1668090"
  },
  {
    "text": "there there is where I introduced the richness and now if I test again here we",
    "start": "1668090",
    "end": "1678200"
  },
  {
    "text": "do not cover the support Londoners of our destination okay so my validation is now in play and the slot of pickup",
    "start": "1678200",
    "end": "1687440"
  },
  {
    "text": "location is it gone pickup city has been sent over to my validation function with the value London specified in it okay",
    "start": "1687440",
    "end": "1694639"
  },
  {
    "text": "my lambda function is reading that it's interpreting it validating it against the list of valid values and then it's",
    "start": "1694639",
    "end": "1701269"
  },
  {
    "text": "generating it's actually zeroing the slot and then this is generating a confirmation message a response message",
    "start": "1701269",
    "end": "1707899"
  },
  {
    "text": "which says that isn't a valid valid destination a valid pickup City and that's how I get the back-and-forth of",
    "start": "1707899",
    "end": "1713659"
  },
  {
    "text": "the rich conversational interface now I'd recommend of course taking a look at the code base for taking a look at the",
    "start": "1713659",
    "end": "1725809"
  },
  {
    "start": "1720000",
    "end": "1850000"
  },
  {
    "text": "code base for the validator it's a very interesting way to learn more about how to build systems of this type I can find",
    "start": "1725809",
    "end": "1733639"
  },
  {
    "text": "this",
    "start": "1733639",
    "end": "1735820"
  },
  {
    "text": "okay so this is our handler function you can see that we've got an intent Rooter",
    "start": "1745940",
    "end": "1751500"
  },
  {
    "text": "here so we receive our event which is the data structure that I've talked about which is represented in that",
    "start": "1751500",
    "end": "1757530"
  },
  {
    "text": "documentation set that I saw that I showed you from that we can extract the",
    "start": "1757530",
    "end": "1762600"
  },
  {
    "text": "current intent which you can see taking place here and then we can enter another function which is the target of this",
    "start": "1762600",
    "end": "1770280"
  },
  {
    "text": "intent router which you can see here so the book hotel or the book our intent and this is where we represent the logic",
    "start": "1770280",
    "end": "1776490"
  },
  {
    "text": "associated with validating generating responses okay and we have quite a few",
    "start": "1776490",
    "end": "1781830"
  },
  {
    "text": "different helper functions within this code base that as I mentioned earlier we can reuse in building our own backends",
    "start": "1781830",
    "end": "1789300"
  },
  {
    "text": "okay so if you're going to get into serious development on Lex really recommend taking a look at the way some",
    "start": "1789300",
    "end": "1794460"
  },
  {
    "text": "of these things that implemented there's some very interesting stuff here around response generation so if I need to",
    "start": "1794460",
    "end": "1800100"
  },
  {
    "text": "generate a utterance back out to the client to for example elicit a slot",
    "start": "1800100",
    "end": "1806070"
  },
  {
    "text": "I need a specific fixed format document for that okay where I set certain attributes in my response send back that",
    "start": "1806070",
    "end": "1812190"
  },
  {
    "text": "fixed format response the Lex engine will interpret that it will understand that the action is realistic a slot it",
    "start": "1812190",
    "end": "1818430"
  },
  {
    "text": "will generate the right context to the client in order to elicit that slot so",
    "start": "1818430",
    "end": "1823650"
  },
  {
    "text": "by using this elicit slot function here I can quickly build up those template",
    "start": "1823650",
    "end": "1828720"
  },
  {
    "text": "messages dispatch them back to Lex and have them returned back to my clients and therefore drive the conversational",
    "start": "1828720",
    "end": "1835500"
  },
  {
    "text": "back and forth that's required to build these kinds of interfaces okay so I recommend taking a look at that that's",
    "start": "1835500",
    "end": "1841830"
  },
  {
    "text": "probably enough on the built-ins sorry on those built-in demos next thing to do",
    "start": "1841830",
    "end": "1847950"
  },
  {
    "text": "I think is get you working in one of these systems so this is where we need",
    "start": "1847950",
    "end": "1853230"
  },
  {
    "start": "1850000",
    "end": "1940000"
  },
  {
    "text": "facebook messenger I don't forget that it's really important okay two things you can do here okay if you've got a",
    "start": "1853230",
    "end": "1859410"
  },
  {
    "text": "phone with facebook messenger on it you can open the facebook Messenger app you can go to the people button on the",
    "start": "1859410",
    "end": "1867210"
  },
  {
    "text": "bottom which is third from right from left on the right-hand side and you'll notice this very little-known feature",
    "start": "1867210",
    "end": "1872460"
  },
  {
    "text": "called second code okay if you hit that scan code feature you'll see a circle",
    "start": "1872460",
    "end": "1878160"
  },
  {
    "text": "appear on your screen looks like that okay try and get that picture of my face with the blue ring in the",
    "start": "1878160",
    "end": "1883559"
  },
  {
    "text": "circle if you're seeing at the middle of the room it might be difficult okay so if you are sitting at the middle of the room you can simply search for en masse",
    "start": "1883559",
    "end": "1892020"
  },
  {
    "text": "Ingham AWS in the search function and if you remote on twitch you can go to",
    "start": "1892020",
    "end": "1898280"
  },
  {
    "text": "facebook.com / en masse Ingham AWS and you'll see there's a message me button",
    "start": "1898280",
    "end": "1903480"
  },
  {
    "text": "in the web interface as well that you can use okay I'll just do the same of turn off mirroring for a second",
    "start": "1903480",
    "end": "1911150"
  },
  {
    "text": "okay so I'm gonna do this right and for those of you that aren't playing along",
    "start": "1935840",
    "end": "1941610"
  },
  {
    "start": "1940000",
    "end": "2030000"
  },
  {
    "text": "with the demo let me show you how this goes in dialog so what you've got here is a bar you can say help okay and it",
    "start": "1941610",
    "end": "1949200"
  },
  {
    "text": "will then give you some guidance about what it does and it says right now I can take feedback or rate sessions where",
    "start": "1949200",
    "end": "1955019"
  },
  {
    "text": "you've seen in massing speak just say I want to read a session or I want to leave feedback I need to know the date time location and session identifier",
    "start": "1955019",
    "end": "1961500"
  },
  {
    "text": "okay so if I say I want to rate a session and I could do this using voice",
    "start": "1961500",
    "end": "1966690"
  },
  {
    "text": "if I had a voice client act connected to a system I've got text via the Facebook channel okay it will ask me which",
    "start": "1966690",
    "end": "1972419"
  },
  {
    "text": "session I want to write I can say anything now pretty much say Lex okay it's today okay we are in London okay",
    "start": "1972419",
    "end": "1983009"
  },
  {
    "text": "and then it will ask me to provide a rating and I can give invalid data and that will be trapped and I'll be asked",
    "start": "1983009",
    "end": "1989399"
  },
  {
    "text": "to enter a valid score so there is validation here both on location date and on scores okay I'm going to rate",
    "start": "1989399",
    "end": "1994860"
  },
  {
    "text": "myself three probably not to skew the results too much don't want to submit this rating yes I do and that's it okay",
    "start": "1994860",
    "end": "2002990"
  },
  {
    "text": "so I've been through that slot elicitation process I've got some validation in there and I've captured at",
    "start": "2002990",
    "end": "2009169"
  },
  {
    "text": "the end of it a JSON object that contains session identifiers date",
    "start": "2009169",
    "end": "2015440"
  },
  {
    "text": "location and a score right just those four at abuse they get packaged up and using the fulfillment Cobell in my",
    "start": "2015440",
    "end": "2021950"
  },
  {
    "text": "function I see many people are talking to me okay okay I'm a hot and popular don't forget",
    "start": "2021950",
    "end": "2027200"
  },
  {
    "text": "to like my page as well okay and you'll see that in the backend we've got another one of those lambda functions",
    "start": "2027200",
    "end": "2034279"
  },
  {
    "start": "2030000",
    "end": "2450000"
  },
  {
    "text": "actually based off the book trip function okay but it's got a little bit more functionality in it okay first of",
    "start": "2034279",
    "end": "2040399"
  },
  {
    "text": "all you'll notice that the intent booter has a little bit more width in it there are a few different intents okay and",
    "start": "2040399",
    "end": "2045860"
  },
  {
    "text": "what I discovered in putting this demo into production in the early stages was",
    "start": "2045860",
    "end": "2051429"
  },
  {
    "text": "guess what users would do things that I didn't expect in using the demo so no",
    "start": "2051429",
    "end": "2056599"
  },
  {
    "text": "design ever survives first contact with an actual user right that's like no plan survives first contact with the enemy so",
    "start": "2056599",
    "end": "2062960"
  },
  {
    "text": "I found out that people like to say thank you quite a lot and I didn't have a",
    "start": "2062960",
    "end": "2068690"
  },
  {
    "text": "intent to answer people that said thank you so you can try saying thank you you'll get some random responses back",
    "start": "2068690",
    "end": "2074750"
  },
  {
    "text": "where the box says no problem or you're welcome or just let me know if I can help there anything else in the future which uses just a bit of randomization",
    "start": "2074750",
    "end": "2081050"
  },
  {
    "text": "in the response to try and make things feel a little bit more human-like I also discovered that without a cancel request",
    "start": "2081050",
    "end": "2086899"
  },
  {
    "text": "in ten there was no quick and easy way to let somebody quit a session so I created an intent for cancel requests as",
    "start": "2086900",
    "end": "2093050"
  },
  {
    "text": "well and this underlines reveals something about the way in which the Lexx language model works which is the",
    "start": "2093050",
    "end": "2099470"
  },
  {
    "text": "intent resolution is always active so even if you're in dialogue about",
    "start": "2099470",
    "end": "2104690"
  },
  {
    "text": "fulfilling slots for a particular intent that you've already acted activated which is your current intent okay in 10",
    "start": "2104690",
    "end": "2111740"
  },
  {
    "text": "resolution is still active so you can then say cancel or thank you you'll get kicked out of the intent that you're",
    "start": "2111740",
    "end": "2117110"
  },
  {
    "text": "currently in because the utterance that you give is more probable to resolve to",
    "start": "2117110",
    "end": "2122120"
  },
  {
    "text": "another intent than it is to fulfill a slot okay and this allows you to build these escape routes which wouldn't exist",
    "start": "2122120",
    "end": "2128330"
  },
  {
    "text": "if you were locked into a specific intent you have to wait for your session to expire so that's really a usability",
    "start": "2128330",
    "end": "2134690"
  },
  {
    "text": "feature but it's a usability feature that you need to know about because it can have unexpected consequences if",
    "start": "2134690",
    "end": "2140390"
  },
  {
    "text": "you're not aware of the fact that the intent resolution engine is constantly active within language model at the",
    "start": "2140390",
    "end": "2145460"
  },
  {
    "text": "front end okay so that's a kind of thing to know about in building systems and then I have a testing intent which",
    "start": "2145460",
    "end": "2151370"
  },
  {
    "text": "obviously used for certain test features and I'm just getting started with the new intent which is not implemented at the front end but is a sticker request",
    "start": "2151370",
    "end": "2157880"
  },
  {
    "text": "intent or you get a request DWS stickers and this is where my custom slot comes in for post could capture which I'll",
    "start": "2157880",
    "end": "2163520"
  },
  {
    "text": "show in a little while so I'm building other stuff into this system as well then we've got a fulfillment of various",
    "start": "2163520",
    "end": "2170360"
  },
  {
    "text": "intent types so thanks for example here you've got your random options no problem you're welcome happy to help that's fine thank you",
    "start": "2170360",
    "end": "2175760"
  },
  {
    "text": "da da da da okay pick one at random and we'll return it with a closed session",
    "start": "2175760",
    "end": "2181430"
  },
  {
    "text": "and fulfilled document type okay yeah",
    "start": "2181430",
    "end": "2187630"
  },
  {
    "text": "oh sorry can you only respond to text or can you respond to pauses so there's",
    "start": "2189480",
    "end": "2196420"
  },
  {
    "text": "timeout okay which is set in the bot at the front end so how long am I going to wait before we essentially clear down",
    "start": "2196420",
    "end": "2202480"
  },
  {
    "text": "the session and reset it but outside of that I guess there's a break point at",
    "start": "2202480",
    "end": "2208270"
  },
  {
    "text": "which we conclude an utterance so we consider that utterance complete we'll ship it off to the engine I don't think",
    "start": "2208270",
    "end": "2218170"
  },
  {
    "text": "you can do that actually I think the timeout is set in the language engine at the front end and that's a hard-coded value for each bot that you create okay",
    "start": "2218170",
    "end": "2225390"
  },
  {
    "text": "but you can offer up different options to customers if a customer gives a",
    "start": "2225390",
    "end": "2231309"
  },
  {
    "text": "response which is not definitive so a response which doesn't particularly resolve down you could have you know a",
    "start": "2231309",
    "end": "2237339"
  },
  {
    "text": "general-purpose capture message which says I'm not sure what you want okay and then allow the timer to run again until",
    "start": "2237339",
    "end": "2244270"
  },
  {
    "text": "the customer says something else and you have that in the front end as well okay so we have these intents and then we",
    "start": "2244270",
    "end": "2249280"
  },
  {
    "text": "have the more comprehensively implemented rate session intent okay",
    "start": "2249280",
    "end": "2254440"
  },
  {
    "text": "you may notice this delegate here okay so when we return this delegate document",
    "start": "2254440",
    "end": "2260440"
  },
  {
    "text": "type what we're saying there is flex for an end you decide what to do next okay",
    "start": "2260440",
    "end": "2266260"
  },
  {
    "text": "and that's essentially handing control back over to the language engine from the validation function and saying you",
    "start": "2266260",
    "end": "2273339"
  },
  {
    "text": "decide what to ask for okay then that's when we'll then elicit for another slot if a slot is currently vacant so you can",
    "start": "2273339",
    "end": "2279520"
  },
  {
    "text": "hand control back to the engine or you can retain fine fine grained control by doing your own elicitation for slots or",
    "start": "2279520",
    "end": "2286569"
  },
  {
    "text": "issuing your own specific messages for example okay so your functions need to work in concert with the front end",
    "start": "2286569",
    "end": "2292960"
  },
  {
    "text": "that's something that I've learned with working with the system actually and then I have my fulfillment action here",
    "start": "2292960",
    "end": "2298510"
  },
  {
    "text": "okay and I'm going to show you the overall system architecture because there's quite a few other AWS services that are involved in this beyond the",
    "start": "2298510",
    "end": "2305380"
  },
  {
    "text": "lambda function to try and make it really scalable and really slick in terms of the way in which it works the",
    "start": "2305380",
    "end": "2311079"
  },
  {
    "text": "way in which it works okay so I'll jump back onto the slides and just show you that first thing is this so this is the",
    "start": "2311079",
    "end": "2317710"
  },
  {
    "text": "overall architecture of the function okay with our intent router with our handlers",
    "start": "2317710",
    "end": "2322990"
  },
  {
    "text": "for our implemented intents thanks control requests help me help me is what prints out that message saying this is",
    "start": "2322990",
    "end": "2328330"
  },
  {
    "text": "what I do rate session and provide feedback rate session and provide feedback err will be triggered",
    "start": "2328330",
    "end": "2335369"
  },
  {
    "text": "recursively until we populate all of the slots through this slot of the solicitation loop that we go through so",
    "start": "2335369",
    "end": "2341650"
  },
  {
    "text": "we got a piece of data which is missing well whenever we receive a slot will validate it okay and if it's invalid",
    "start": "2341650",
    "end": "2347650"
  },
  {
    "text": "we'll clear it and then we'll check if all of our slots are populated and if they're not we'll realistic for ones that are empty so we'll go through that",
    "start": "2347650",
    "end": "2353710"
  },
  {
    "text": "validation loop clearing out the slots until we've got valid values everywhere that we need them then we post our rate",
    "start": "2353710",
    "end": "2360520"
  },
  {
    "text": "sessions directly to a Kinesis stream put the populated JSON object in this dream okay and then it goes somewhere else and if we're doing sentiment",
    "start": "2360520",
    "end": "2367480"
  },
  {
    "text": "enrichment for feedback for feedback we actually do send him an assessment of the comments so we don't you know we",
    "start": "2367480",
    "end": "2372700"
  },
  {
    "text": "care about the comments but we care more about whether the comments or positive or negative right so we can drive the metric from the comments so in that case",
    "start": "2372700",
    "end": "2380080"
  },
  {
    "text": "we use another AWS service which is in preview called Amazon comprehend it's a natural language processing engine",
    "start": "2380080",
    "end": "2385990"
  },
  {
    "text": "includes sentiment analysis we've packaged up the feedback text send it",
    "start": "2385990",
    "end": "2391150"
  },
  {
    "text": "over there get a positive negative or neutral back from that other API and rich that into our fulfillment object",
    "start": "2391150",
    "end": "2396700"
  },
  {
    "text": "and then package up all that and send all that into Kinesis so those are our two document types a feedback document",
    "start": "2396700",
    "end": "2401710"
  },
  {
    "text": "or a numerical rating document those are the two things that we capture and then at the backend once we've got the",
    "start": "2401710",
    "end": "2408540"
  },
  {
    "text": "sentiment analysis done drop that into a Kinesis stream we only use another",
    "start": "2408540",
    "end": "2413740"
  },
  {
    "text": "service called Kinesis firehose to reliably deliver those JSON objects into an elasticsearch cluster and from there",
    "start": "2413740",
    "end": "2419890"
  },
  {
    "text": "we have a simple visualization dashboard with cabaña at the backend okay that's it the whole thing is managed in code star",
    "start": "2419890",
    "end": "2426369"
  },
  {
    "text": "which is our CI CI c c d pipeline using Sam and cloud for mission ok and the",
    "start": "2426369",
    "end": "2432040"
  },
  {
    "text": "whole thing is instrumented with another new service that we've got called AWS x-ray which allows us to measure the",
    "start": "2432040",
    "end": "2438070"
  },
  {
    "text": "performance of our lambda functions observe the performance of dependent api's and actually observe things like",
    "start": "2438070",
    "end": "2444820"
  },
  {
    "text": "mean time to reply from the internal offered party API is that we might be using as well so it's a pretty good example of a fully built service",
    "start": "2444820",
    "end": "2452020"
  },
  {
    "start": "2450000",
    "end": "2715000"
  },
  {
    "text": "application so let's go here let's reload this possible my SSH tunnel",
    "start": "2452020",
    "end": "2462250"
  },
  {
    "text": "has dropped yes",
    "start": "2462250",
    "end": "2464910"
  },
  {
    "text": "it's gonna work for me or not",
    "start": "2485030",
    "end": "2488859"
  },
  {
    "text": "the whole dang world falls apart because my SSH tunnel doesn't work after all that no it isn't okay I think okay okay",
    "start": "2520760",
    "end": "2531140"
  },
  {
    "text": "good so we're gonna get our - burden that dashboard now of data okay and we're going to look at today obviously",
    "start": "2531140",
    "end": "2536359"
  },
  {
    "text": "cuz that's the scrub that we're looking at okay I want our dashboard okay so we've got 32 ratings that came in from",
    "start": "2536359",
    "end": "2543320"
  },
  {
    "text": "people interacted with the bots we got to neutral sorry three neutral and two",
    "start": "2543320",
    "end": "2550430"
  },
  {
    "text": "positive pieces of feedback so only five pieces of feedback in total we've got our distribution of scores here average",
    "start": "2550430",
    "end": "2556190"
  },
  {
    "text": "score was four point three one so our distribution this is our complete",
    "start": "2556190",
    "end": "2561380"
  },
  {
    "text": "feedback down here interesting brilliant and random numerical value is okay and",
    "start": "2561380",
    "end": "2566599"
  },
  {
    "text": "great so that is the raw feedback that a few of you either on the stream or in the room provided to the feedback intent",
    "start": "2566599",
    "end": "2572930"
  },
  {
    "text": "your scores are those numerical values thirty two of those was submitted and we've got the data streaming through",
    "start": "2572930",
    "end": "2579710"
  },
  {
    "text": "that Kinesis stream getting deposited in elasticsearch in the form of these documents that you can see here so",
    "start": "2579710",
    "end": "2585920"
  },
  {
    "text": "that's a session rating document just there okay and that person scored is four and this ID here is the unique ID",
    "start": "2585920",
    "end": "2594310"
  },
  {
    "text": "associated with that individuals Facebook account okay so we're not capturing personal data per se we do",
    "start": "2594310",
    "end": "2601220"
  },
  {
    "text": "have a session identifier a user identifier which can be used to link that user to their particular session in",
    "start": "2601220",
    "end": "2609140"
  },
  {
    "text": "facebook again it's worthwhile just talking about how this channel integration works because this is a",
    "start": "2609140",
    "end": "2614270"
  },
  {
    "text": "really interesting part of the service in my view so in integrating with services like Facebook thrilly oh and",
    "start": "2614270",
    "end": "2622220"
  },
  {
    "text": "slack that we have built an integration forward cake which is a new integration these work by using web hooks",
    "start": "2622220",
    "end": "2627920"
  },
  {
    "text": "okay so we're establishing two web hook API endpoints one in AWS that the",
    "start": "2627920",
    "end": "2633380"
  },
  {
    "text": "service provides okay where we receive messages from the facebook messenger api",
    "start": "2633380",
    "end": "2638510"
  },
  {
    "text": "each time you enter a message into my facebook page facebook packages that up into a JSON object and fire it over to",
    "start": "2638510",
    "end": "2644569"
  },
  {
    "text": "my API endpoint with some shared secrets for authentication okay that includes your session ID so I know that's how I",
    "start": "2644569",
    "end": "2650510"
  },
  {
    "text": "know who you are both for the session and for you unique user ID and then in Facebook's",
    "start": "2650510",
    "end": "2656610"
  },
  {
    "text": "messenger API they establish something the same in their infrastructure their web poke endpoint and when I want to",
    "start": "2656610",
    "end": "2662850"
  },
  {
    "text": "generate returns back to you Lex hits that API endpoint validates sends a",
    "start": "2662850",
    "end": "2668790"
  },
  {
    "text": "specific document format and that appears in messenger for you okay so that is something that we make it really",
    "start": "2668790",
    "end": "2674280"
  },
  {
    "text": "simple to create for Facebook kick slap and Twilio but you can also implement the same thing with third-party",
    "start": "2674280",
    "end": "2679830"
  },
  {
    "text": "messaging systems colleague in my team Randall Han has built exactly the same thing for Twitter using something called",
    "start": "2679830",
    "end": "2685890"
  },
  {
    "text": "the Twitter account activity API it's exactly the same architecture to web",
    "start": "2685890",
    "end": "2691020"
  },
  {
    "text": "hooks one into its infrastructure and morning hours when you send a direct message to a particular Twitter account",
    "start": "2691020",
    "end": "2696030"
  },
  {
    "text": "that hits our web hook we get that message content we can operate up on it using the bots and going back the same",
    "start": "2696030",
    "end": "2701820"
  },
  {
    "text": "way we hit a specific web hook in Twitter's infrastructure and that appears in your face in your Twitter DM",
    "start": "2701820",
    "end": "2707100"
  },
  {
    "text": "okay we've quit and shut the message which which drives that okay how we",
    "start": "2707100",
    "end": "2712230"
  },
  {
    "text": "doing for time fifteen minutes one thing I said I would show you there's two things I'm going to show you so one of them is response cards okay so the test",
    "start": "2712230",
    "end": "2722970"
  },
  {
    "start": "2715000",
    "end": "2955000"
  },
  {
    "text": "in ten okay so I can fulfill that using",
    "start": "2722970",
    "end": "2729600"
  },
  {
    "text": "a slot value of a four which feature to test I'll do that again okay and I put G",
    "start": "2729600",
    "end": "2737250"
  },
  {
    "text": "in there another letter of the alphabet you'll see that I get this card back",
    "start": "2737250",
    "end": "2742350"
  },
  {
    "text": "this response card back okay now these response cards are supported today on Facebook and on slack okay and they're",
    "start": "2742350",
    "end": "2748950"
  },
  {
    "text": "nice because if I was on my phone each one of those buttons would be touch enabled okay so I've got a small number",
    "start": "2748950",
    "end": "2755280"
  },
  {
    "text": "of options that I want to present to a client and I know that the client is likely to be on the touch enabled device",
    "start": "2755280",
    "end": "2761100"
  },
  {
    "text": "I can generate those response cards with those URL buttons in them and customers",
    "start": "2761100",
    "end": "2766410"
  },
  {
    "text": "can directly select an option without having to type it's really good for things like confirmation dialogues yes",
    "start": "2766410",
    "end": "2771930"
  },
  {
    "text": "or no you sure you want to do this yes or no just yes or no or I've got small",
    "start": "2771930",
    "end": "2777090"
  },
  {
    "text": "or medium or large available you want a medium or a large item M or L okay so that is a really neat feature for",
    "start": "2777090",
    "end": "2784640"
  },
  {
    "text": "integrating with the touch interface on devices like this so we support that and slack have similar cards you can",
    "start": "2784640",
    "end": "2790590"
  },
  {
    "text": "actually enrich them a little bit more we support that for slack as well the very details vary but the response",
    "start": "2790590",
    "end": "2796860"
  },
  {
    "text": "document format that we use is the same okay so create a card specify the value",
    "start": "2796860",
    "end": "2802080"
  },
  {
    "text": "options and we'll take care of the work of transcoding that into the right response format for the particular",
    "start": "2802080",
    "end": "2807630"
  },
  {
    "text": "platform the message is going to be delivered on that's pretty nice okay and then the other thing I was going to show is slop reloading okay in for slot pre",
    "start": "2807630",
    "end": "2816660"
  },
  {
    "text": "loading I've got a jupiter notebook here which is about UK post codes okay so one",
    "start": "2816660",
    "end": "2822390"
  },
  {
    "text": "of the things i want to do with my dispatch stickers intent is to automatically recognize post codes for",
    "start": "2822390",
    "end": "2829440"
  },
  {
    "text": "users turns out they're around a quarter of a million UK post codes and we don't have a default slot type for post codes",
    "start": "2829440",
    "end": "2834990"
  },
  {
    "text": "today so I started thinking about how could I resolve this issue okay so I found a publicly available post code",
    "start": "2834990",
    "end": "2841530"
  },
  {
    "text": "file which is available on the web ok which has a CSV file with this document",
    "start": "2841530",
    "end": "2847230"
  },
  {
    "text": "format in it and I got a bit of pandas data manipulation to extract those postcards sample a thousand post codes",
    "start": "2847230",
    "end": "2854580"
  },
  {
    "text": "how out of the quarter of a million post codes in the UK which is more than enough to train the model actually okay and then I use this to api's for Lex",
    "start": "2854580",
    "end": "2863400"
  },
  {
    "text": "okay we've got a runtime api which is where we send our utterances and get back our responses using the language",
    "start": "2863400",
    "end": "2869010"
  },
  {
    "text": "model but we've also got a control plane api if you want which is for updating",
    "start": "2869010",
    "end": "2874230"
  },
  {
    "text": "models creating models okay so for creating BOTS and updating BOTS and for that API there's a gets lock type okay",
    "start": "2874230",
    "end": "2882000"
  },
  {
    "text": "and a puts lock type method okay and there I can programmatically read and write data into slots so if I'm going to",
    "start": "2882000",
    "end": "2889740"
  },
  {
    "text": "build a pipeline that brings in a publicly available data set to use that data for training for a particular slot",
    "start": "2889740",
    "end": "2895470"
  },
  {
    "text": "type it's a really good way to do it so what I do here is sample a thousand use k-put UK postcodes out over the",
    "start": "2895470",
    "end": "2901680"
  },
  {
    "text": "publicly available data set and I push those in to a custom slot type for the UK postcode and I could build a pipeline",
    "start": "2901680",
    "end": "2907800"
  },
  {
    "text": "now which automated that process quite easily if I'm got a data set which I",
    "start": "2907800",
    "end": "2913080"
  },
  {
    "text": "might store inside a another database as part of my build pipeline for my box you can take out some of the stuff which is",
    "start": "2913080",
    "end": "2920310"
  },
  {
    "text": "is less simple to do in the console at scale and turn that into part of your",
    "start": "2920310",
    "end": "2925590"
  },
  {
    "text": "automated pipeline it's part of deploying my bot with my weekly build I could automatically rebuild my slots and",
    "start": "2925590",
    "end": "2931440"
  },
  {
    "text": "push them in using the API using that kind of approach actually really neat really neat way of doing it okay I think",
    "start": "2931440",
    "end": "2939620"
  },
  {
    "text": "that is everything I wanted to talk about it's just if we've got any more scores now two more people decided to",
    "start": "2939620",
    "end": "2945600"
  },
  {
    "text": "score me unfortunately those people did take the average up slightly so it keeps going me keeps going me at five okay",
    "start": "2945600",
    "end": "2950940"
  },
  {
    "text": "that's great thank you very much I think that's everything that I wanted to talk about does anybody have any questions",
    "start": "2950940",
    "end": "2957390"
  },
  {
    "start": "2955000",
    "end": "3385000"
  },
  {
    "text": "we've got a few minutes before before Julian's up yeah yeah so the question",
    "start": "2957390",
    "end": "2973350"
  },
  {
    "text": "here is actually it's a good point I didn't think of that but I should have done so how do we know whether we users going to type in the postcode in the",
    "start": "2973350",
    "end": "2979320"
  },
  {
    "text": "right format or not the answer is we don't okay so you're probably right that we do want to have in my dataset several",
    "start": "2979320",
    "end": "2987840"
  },
  {
    "text": "different variants of the postcode Capitals lowercase uppercase with and without spaces so I need to modify my",
    "start": "2987840",
    "end": "2994320"
  },
  {
    "text": "pipeline to build a bit of that human-like randomness into the value set but again that's something that probably",
    "start": "2994320",
    "end": "2999630"
  },
  {
    "text": "wouldn't want to do in the console it's actually something that would be quite simple to do using pandas where you could randomize and sample the dataset",
    "start": "2999630",
    "end": "3006170"
  },
  {
    "text": "randomly and create these different variants so that's a really good example for why you should autumn it's not building a scale yep any other questions",
    "start": "3006170",
    "end": "3013310"
  },
  {
    "text": "yes it's about",
    "start": "3013310",
    "end": "3015850"
  },
  {
    "text": "yeah so that's a perfect question but",
    "start": "3019489",
    "end": "3028319"
  },
  {
    "text": "the question is how easy is to pour chatbots between Lex and Alexa so between our system is intended for broad",
    "start": "3028319",
    "end": "3035369"
  },
  {
    "text": "usage and Alexa which is intended for deployment principally on the Amazon echo but you can use the Alexa voice",
    "start": "3035369",
    "end": "3042119"
  },
  {
    "text": "service under the devices as well that's a really good question didn't plan to it but I wish I had because in the last",
    "start": "3042119",
    "end": "3048690"
  },
  {
    "text": "quarter of last year we introduced model export so you can build a chatbot model in Amazon Lex and then export it",
    "start": "3048690",
    "end": "3056279"
  },
  {
    "text": "directly as an Alexa skill it's only unidirectional right now so you build in Lex you can export it and you can create",
    "start": "3056279",
    "end": "3062190"
  },
  {
    "text": "a template Alexa scale that you can import into the Alexa skill console and",
    "start": "3062190",
    "end": "3067230"
  },
  {
    "text": "start to use as the basis for building your echo or Alexa voice service specific version of that service the",
    "start": "3067230",
    "end": "3074430"
  },
  {
    "text": "built-ins by the way are consistent across both services so those data types that you saw Amazon US City date they're",
    "start": "3074430",
    "end": "3083069"
  },
  {
    "text": "the same that you'll have in the Alexa models as well so there's a lot of portability between the two you probably",
    "start": "3083069",
    "end": "3088829"
  },
  {
    "text": "going to want to test and debug on the other side but it's certainly simpler than it was where you had to previously build autonomously in both of the",
    "start": "3088829",
    "end": "3095190"
  },
  {
    "text": "systems Q here yeah if you've already",
    "start": "3095190",
    "end": "3103410"
  },
  {
    "text": "got what sorry okay yep",
    "start": "3103410",
    "end": "3114828"
  },
  {
    "text": "so the question is if you've already got Hugh BOTS in your infrastructure how do you integrate them nicely familiar with",
    "start": "3119270",
    "end": "3124560"
  },
  {
    "text": "that so I can't speak for the exact integration points that you would use as",
    "start": "3124560",
    "end": "3129600"
  },
  {
    "text": "I mentioned before you have essentially a decoupled system here you have Lex for",
    "start": "3129600",
    "end": "3135540"
  },
  {
    "text": "intent resolution entity extraction okay and the ability to do natural language generation to populate entities or slots",
    "start": "3135540",
    "end": "3143100"
  },
  {
    "text": "within a particular intent and then you have lambda which is your business logic okay so depending on what's in your",
    "start": "3143100",
    "end": "3148170"
  },
  {
    "text": "system you could take some of the business logic that you've got in that system and migrate it into lambda okay",
    "start": "3148170",
    "end": "3153480"
  },
  {
    "text": "but I suspect that Lex will be replacing some of the natural language understanding capability that's at the",
    "start": "3153480",
    "end": "3159540"
  },
  {
    "text": "front of that tool not very familiar with it but I suspect that it will replace some of that so that would be not overlapping and you would probably",
    "start": "3159540",
    "end": "3166020"
  },
  {
    "text": "replace the front-end with Lex okay yeah we've got your question yeah do we have",
    "start": "3166020",
    "end": "3180120"
  },
  {
    "text": "tools or features to test AWS lambda functions without having to rebuild yes we do there is a test",
    "start": "3180120",
    "end": "3185250"
  },
  {
    "text": "harness within the AWS lambda console so you could create your own Lex format",
    "start": "3185250",
    "end": "3192300"
  },
  {
    "text": "documents okay so your own requests using the document format that I showed",
    "start": "3192300",
    "end": "3197400"
  },
  {
    "text": "you earlier okay you could programmatically inject those into your lambda functions and you could monitor",
    "start": "3197400",
    "end": "3203070"
  },
  {
    "text": "the responses that you got back you can do that in the lambda console more likely to do it inside something like AWS cloud now and which is our new",
    "start": "3203070",
    "end": "3210470"
  },
  {
    "text": "cloud-based IDE which supports testing harnesses for lambda functions so you'd basically write your test cases as",
    "start": "3210470",
    "end": "3217140"
  },
  {
    "text": "request documents and issued them to your lambda functions and then monitor the responses that you got back I think",
    "start": "3217140",
    "end": "3223920"
  },
  {
    "text": "this one of the things I wanted to show actually other was there's one other thing that I forgot to show in the demo which she just reminded me about when",
    "start": "3223920",
    "end": "3230100"
  },
  {
    "text": "you started talking about optimization there so in monitoring here there's an",
    "start": "3230100",
    "end": "3237510"
  },
  {
    "text": "utterance a--'s capability so one of the things that you can observe jump on",
    "start": "3237510",
    "end": "3246210"
  },
  {
    "text": "Tamara the bot session feedback bot so one of the things that you can",
    "start": "3246210",
    "end": "3252230"
  },
  {
    "text": "observe is missed utterances okay so I've obviously got my intent resolution",
    "start": "3253370",
    "end": "3260130"
  },
  {
    "text": "and I've got my slot extraction models those are classification models so when",
    "start": "3260130",
    "end": "3267630"
  },
  {
    "text": "somebody says I want to book a flight what we were actually doing is establishing how likely that is that",
    "start": "3267630",
    "end": "3273480"
  },
  {
    "text": "that particular utterance maps into one of our specified intents okay if it falls below a probability threshold we",
    "start": "3273480",
    "end": "3280410"
  },
  {
    "text": "put it in this book it which is the missed utterance bucket okay and what we",
    "start": "3280410",
    "end": "3285930"
  },
  {
    "text": "can do then is say write that one is obviously associated with great session",
    "start": "3285930",
    "end": "3291150"
  },
  {
    "text": "right it's I'd like to leave a rating so we can go like this so we can quickly",
    "start": "3291150",
    "end": "3297510"
  },
  {
    "text": "add to our classification model or two answers that are falling below our probability threshold but should not",
    "start": "3297510",
    "end": "3303990"
  },
  {
    "text": "fall below it because that's a really useful tool in evolving your bot over",
    "start": "3303990",
    "end": "3310350"
  },
  {
    "text": "time to make it more accurate and you'll notice if you look at things like the providing feedback in 10 I'd like to",
    "start": "3310350",
    "end": "3317970"
  },
  {
    "text": "leave a rating is now added to the bottom of that but I only started with a scope with a couple of these and I",
    "start": "3317970",
    "end": "3323070"
  },
  {
    "text": "started with the idea of scoring I've observed that most people didn't say score they said rate so I was getting a",
    "start": "3323070",
    "end": "3329700"
  },
  {
    "text": "lot of missed deterrence is because having I want to score recession and I want to rate a session well you probably",
    "start": "3329700",
    "end": "3336240"
  },
  {
    "text": "wouldn't in first instance as a algorithm I think those were the same",
    "start": "3336240",
    "end": "3341340"
  },
  {
    "text": "thing so you can extend the coverage of your model and therefore extend the",
    "start": "3341340",
    "end": "3347070"
  },
  {
    "text": "probability model and get more of these prospective intents captured into the",
    "start": "3347070",
    "end": "3352590"
  },
  {
    "text": "right book it with the right degree of certainty so that they become resolved in tense and therefore drive the",
    "start": "3352590",
    "end": "3357600"
  },
  {
    "text": "intelligent nature of the system okay okay we're pretty much out of time I'm",
    "start": "3357600",
    "end": "3362790"
  },
  {
    "text": "going to give Jillian a few minutes to take over like my page on Facebook",
    "start": "3362790",
    "end": "3367920"
  },
  {
    "text": "facebook.com slash en masse en masse AWS and maybe if you get home later you can",
    "start": "3367920",
    "end": "3374100"
  },
  {
    "text": "give me a few more fives and if you're on the stream give me a few more fives okay thank you",
    "start": "3374100",
    "end": "3379170"
  },
  {
    "text": "I'm going to be here",
    "start": "3379170",
    "end": "3382069"
  }
]