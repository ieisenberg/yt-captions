[
  {
    "text": "all right guys uh thanks for coming my name is rick houlihan i'm a solutions architect here at aws uh we're going to",
    "start": "560",
    "end": "6480"
  },
  {
    "text": "talk to you a little bit today about some of the tools and services we offer to help you accelerate devops pipelines",
    "start": "6480",
    "end": "13120"
  },
  {
    "text": "now we hear a lot about devops everyone talks about it you know exactly what is it uh you know you got a lot of",
    "start": "13120",
    "end": "18560"
  },
  {
    "text": "definitions from a lot of people if you ask me what is devops i tell you it's about breaking down barriers right removing uh uh the",
    "start": "18560",
    "end": "26000"
  },
  {
    "text": "the traditional fences between your developments and your ops teams",
    "start": "26000",
    "end": "31679"
  },
  {
    "text": "now i've worn a lot of these hats and i'm sure probably advancing charts on there",
    "start": "31679",
    "end": "39280"
  },
  {
    "text": "i'm sure we all have worn many of these hats as well as a developer this is a pretty common thing you hear right",
    "start": "40000",
    "end": "45760"
  },
  {
    "text": "ops is slowing us down we can't get things done the ops people won't let us deploy they won't let us touch the host they won't let us touch",
    "start": "45760",
    "end": "51920"
  },
  {
    "text": "the servers and this is why we can't get things done on the timelines that we need on the",
    "start": "51920",
    "end": "57520"
  },
  {
    "text": "other hand of course the ops team's sitting there saying well you know devs are going to break things you know if i if i let them into my servers i i have",
    "start": "57520",
    "end": "64400"
  },
  {
    "text": "no guarantee that these things are going to be running right because the devs don't understand you know operations and",
    "start": "64400",
    "end": "69680"
  },
  {
    "text": "the management team on the other side is sitting there going well can't train everybody and everything so",
    "start": "69680",
    "end": "75439"
  },
  {
    "text": "we got to figure out how to make all this work so a little bit of background on some of this let's talk a little bit about the",
    "start": "75439",
    "end": "82159"
  },
  {
    "text": "the process that we're all relatively familiar with in one in in one way shape or form",
    "start": "82159",
    "end": "87280"
  },
  {
    "text": "and it kind of looks like this so we have this build server in the beginning in the middle of everything",
    "start": "87280",
    "end": "92880"
  },
  {
    "text": "and this workflow that's kind of built around it uh you know dev teams checking in code kicking off builds builds may",
    "start": "92880",
    "end": "99920"
  },
  {
    "text": "fail come right back to the dev team if they don't fail they get pushed out to integration environment",
    "start": "99920",
    "end": "105119"
  },
  {
    "text": "we have you know qa test folks look at it say hey this is good let's push it to stage everything works there we'll get it out to production",
    "start": "105119",
    "end": "112320"
  },
  {
    "text": "so we're pretty familiar with this process uh and it really is kind of circular process you have multiple environments you got",
    "start": "112320",
    "end": "119040"
  },
  {
    "text": "this build integration environment running and it's feeding the whole process now aws provides a whole pile of tools that",
    "start": "119040",
    "end": "125200"
  },
  {
    "text": "can help you with this things that can replace some of your existing systems or enhance your existing processes as well but",
    "start": "125200",
    "end": "131920"
  },
  {
    "text": "fundamentally this is kind of a circular process that we're talking about here right so we have uh qa integration",
    "start": "131920",
    "end": "138080"
  },
  {
    "text": "staging environments production environments again our build integration environments pushing artifacts into some sort of repo",
    "start": "138080",
    "end": "144239"
  },
  {
    "text": "on aws what we'll do is we'll kind of isolate these staging environments",
    "start": "144239",
    "end": "149360"
  },
  {
    "text": "into what we call virtual private clouds or vpc right so these are kind of your your private area",
    "start": "149360",
    "end": "155519"
  },
  {
    "text": "of the aws cloud you define your own ip address space you deploy resources into these things and what's nice about vpc",
    "start": "155519",
    "end": "161840"
  },
  {
    "text": "is it gives you the ability to separate these environments right so they operate in their own sandboxes",
    "start": "161840",
    "end": "167519"
  },
  {
    "text": "you push code you push deploy resources into these individual vpcs and you can maintain individual",
    "start": "167519",
    "end": "173040"
  },
  {
    "text": "environments for your qa integration test and staging",
    "start": "173040",
    "end": "178239"
  },
  {
    "text": "inside these environments we deploy ec2 resources lots of different things inside of a vpc you can deploy",
    "start": "179519",
    "end": "185920"
  },
  {
    "text": "just about anything that aws has to offer in the realm of ec2 instances",
    "start": "185920",
    "end": "192319"
  },
  {
    "text": "you can define your own subnets routing rules and whatnot and basically create these sandboxes",
    "start": "192319",
    "end": "198400"
  },
  {
    "text": "you can also push artifacts out into s3 and we'll talk a little bit about how this all works into this workflow but",
    "start": "198400",
    "end": "204480"
  },
  {
    "text": "suffice to say aws has a variety of tools and services that can comprise this entire chain of this this",
    "start": "204480",
    "end": "211120"
  },
  {
    "text": "devops pipeline that we're talking about your continuous integration continuous deployment environment",
    "start": "211120",
    "end": "218319"
  },
  {
    "text": "we can use sns and sqs to send notifications to push things along through the pipeline",
    "start": "218400",
    "end": "223519"
  },
  {
    "text": "again leveraging a full suite of aws services for this",
    "start": "223519",
    "end": "228400"
  },
  {
    "text": "in today's environments we have a lot of tools that we all use things we're all familiar with right so",
    "start": "229519",
    "end": "235360"
  },
  {
    "text": "you know from coding to managing deploying storing building your environment we all use various tools",
    "start": "235360",
    "end": "241680"
  },
  {
    "text": "along this tool chain things like bugzilla jenkins vagrant i would even argue that your",
    "start": "241680",
    "end": "248239"
  },
  {
    "text": "common application development frameworks belong over on the left-hand side java.net and the tooling associated",
    "start": "248239",
    "end": "254879"
  },
  {
    "text": "tooling visual studio and and eclipse and whatnot intellij these are all tools that we use in the",
    "start": "254879",
    "end": "260479"
  },
  {
    "text": "enterprise in various ways shapes or form there's lots of ways to build this pipeline there's no one perfect solution",
    "start": "260479",
    "end": "267600"
  },
  {
    "text": "you know every one of us has familiarity with some of the tools on this list and others that do all this function so",
    "start": "267600",
    "end": "273680"
  },
  {
    "text": "looking at aws do you want do we want to replace all this are we telling you that that's what you should do and the answer",
    "start": "273680",
    "end": "278800"
  },
  {
    "text": "there is absolutely not but what we can do is we integrate with many of these tools and we can provide",
    "start": "278800",
    "end": "284320"
  },
  {
    "text": "functionality that extends your existing tool chain into the cloud",
    "start": "284320",
    "end": "290400"
  },
  {
    "text": "so we get a little bit into what aws offers to do this some of the things that we've recently",
    "start": "292479",
    "end": "298400"
  },
  {
    "text": "announced at re invent last year for in this area are the code commit and",
    "start": "298400",
    "end": "304160"
  },
  {
    "text": "code pipeline services that are going to be coming out soon code commit is a managed private git repo fully managed",
    "start": "304160",
    "end": "310639"
  },
  {
    "text": "service for hosting private git repos so if any of any of you out there are dealing with hosting your own private",
    "start": "310639",
    "end": "316960"
  },
  {
    "text": "git repo even hosting your own source control systems you're aware of the overhead that goes",
    "start": "316960",
    "end": "322320"
  },
  {
    "text": "along with maintaining those systems managing the hosts the operating systems provisioning capacity planning all that",
    "start": "322320",
    "end": "329280"
  },
  {
    "text": "applies to your source code control code commit is a fully managed service that takes care of all that overhead for",
    "start": "329280",
    "end": "334479"
  },
  {
    "text": "you allowing you just to use the leverage the the source code control",
    "start": "334479",
    "end": "339680"
  },
  {
    "text": "capabilities of git code pipeline is in continuous integration build environment and you",
    "start": "339680",
    "end": "345600"
  },
  {
    "text": "know complex build processes are multi-step layered builds today and so",
    "start": "345600",
    "end": "351039"
  },
  {
    "text": "you know typically you'll see things like uh jenkins and what not being used to manage these build processes code",
    "start": "351039",
    "end": "356960"
  },
  {
    "text": "pipeline is a is an alternative technology a solution that you can use to do that the code pipeline actually",
    "start": "356960",
    "end": "362160"
  },
  {
    "text": "integrates with on-prem resources as well so you can use on-prem",
    "start": "362160",
    "end": "367280"
  },
  {
    "text": "repositories and pull artifacts from them with code pipeline including your builds",
    "start": "367280",
    "end": "372560"
  },
  {
    "text": "these are typically used on the development side agile integration development qa integration and test these are the tools that you would use",
    "start": "372560",
    "end": "379360"
  },
  {
    "text": "to code build and test your solutions when you're getting over on the off side",
    "start": "379360",
    "end": "385440"
  },
  {
    "text": "of the fence we look at things and these are orchestration provisioning systems for for pushing your apps out into",
    "start": "385440",
    "end": "392080"
  },
  {
    "text": "production elastic bean stock is a fully managed application deployment framework allows",
    "start": "392080",
    "end": "397520"
  },
  {
    "text": "developers to focus on the code so you build application development you build packages for your application you push",
    "start": "397520",
    "end": "403919"
  },
  {
    "text": "these into elastic bean stock we'll talk a little bit more about how this works but suffice to say the infrastructure is",
    "start": "403919",
    "end": "409120"
  },
  {
    "text": "fully managed at that point once the application developer publishes the code elastic beanstalk will provision the",
    "start": "409120",
    "end": "414960"
  },
  {
    "text": "amazon resources to actually run that code ec2 instances auto scaling groups load balancers elastic load balancers",
    "start": "414960",
    "end": "421840"
  },
  {
    "text": "are all managed and provisioned by elastic beanstalk ops works a little more complicated",
    "start": "421840",
    "end": "427680"
  },
  {
    "text": "allows you to build much more complicated applications than stacks you can use chef recipes inside of",
    "start": "427680",
    "end": "434240"
  },
  {
    "text": "opsworks to perform configuration operations across stack tiers or layers that are defined",
    "start": "434240",
    "end": "441280"
  },
  {
    "text": "in opsworks again we'll get into these services in a few charts here in a little bit more detail",
    "start": "441280",
    "end": "446960"
  },
  {
    "text": "code deploy a pretty neat service that basically pushes application code out to",
    "start": "446960",
    "end": "453039"
  },
  {
    "text": "ec2 instances or on-prem infrastructure so you can leverage code deploy to actually manage deployments in a hybrid",
    "start": "453039",
    "end": "459520"
  },
  {
    "text": "it environment you can also leverage code deploy to manage deployments on 100 on-prem infrastructure using the install",
    "start": "459520",
    "end": "466319"
  },
  {
    "text": "agents so it can integrate that way with your it operations we talked a little bit about cloud",
    "start": "466319",
    "end": "472240"
  },
  {
    "text": "formation and cloud formation is a great package that allows users to define service templates to deploy complex",
    "start": "472240",
    "end": "478879"
  },
  {
    "text": "infrastructure at the click of a button you can deploy you can create parameterized templates we'll talk a little bit about how that works",
    "start": "478879",
    "end": "485840"
  },
  {
    "text": "and you can deploy these elements or these these templates as as a service catalog offering within",
    "start": "485840",
    "end": "491360"
  },
  {
    "text": "your enterprise it organization and then cloudwatch everybody needs to monitor",
    "start": "491360",
    "end": "497440"
  },
  {
    "text": "the infrastructure cloudwatch is a a built-in service to aws that monitors a variety of dimensions and metrics on all",
    "start": "497440",
    "end": "504960"
  },
  {
    "text": "of our services these metrics include you know basic ec2",
    "start": "504960",
    "end": "511919"
  },
  {
    "text": "utilization metrics on instances they can also include application layer metrics",
    "start": "511919",
    "end": "516959"
  },
  {
    "text": "you can push any kind of custom metric data that you'd like into cloudwatch using the cloudwatch api",
    "start": "516959",
    "end": "523680"
  },
  {
    "text": "cloudwatch is well integrated with a variety of enterprise management solutions guys like xenos",
    "start": "523680",
    "end": "529760"
  },
  {
    "text": "all your big5 ibm hp microsoft bmc when not all their solutions integrate with cloudwatch and",
    "start": "529760",
    "end": "536320"
  },
  {
    "text": "they actually have bi-directional integrations to push data in and take data out",
    "start": "536320",
    "end": "541600"
  },
  {
    "text": "so these are typically your deployment technologies and this is where your traditional realm is in operations and",
    "start": "541600",
    "end": "547920"
  },
  {
    "text": "and in today's environment uh typically you see this fence you know being built we talked a",
    "start": "547920",
    "end": "554480"
  },
  {
    "text": "little bit about that does break things you know ops is slowing us down uh well with aws",
    "start": "554480",
    "end": "560640"
  },
  {
    "text": "and and and the services that we offer what we're trying to do is continue to blur that line right where developers",
    "start": "560640",
    "end": "566720"
  },
  {
    "text": "now have impact on the operations and the deployment side in a way that they haven't had before",
    "start": "566720",
    "end": "574760"
  },
  {
    "text": "so for those of us who've been in software development for some time i've been around quite a while you see a lot of these types of lists right",
    "start": "576399",
    "end": "582800"
  },
  {
    "text": "these things define the maturity of an organization uh you know everyone was into the software capability maturity",
    "start": "582800",
    "end": "588080"
  },
  {
    "text": "model not that long ago a lot of organizations still are what i like about this list and i",
    "start": "588080",
    "end": "593120"
  },
  {
    "text": "believe ibm actually uh you know put it was a significant contributor to this this is the devops version of the",
    "start": "593120",
    "end": "599440"
  },
  {
    "text": "capability maturity model okay and what you'll see in this what i like about this are the silos as you go down",
    "start": "599440",
    "end": "605839"
  },
  {
    "text": "you go from left to right you see these various functional silos of the organization and how mature you are in these various",
    "start": "605839",
    "end": "612399"
  },
  {
    "text": "silos and what i found is that organizations tend to evolve along this",
    "start": "612399",
    "end": "617680"
  },
  {
    "text": "path from left to right right as a startup or small company you're going to figure out your build",
    "start": "617680",
    "end": "623200"
  },
  {
    "text": "management continuous integration environments probably first right because you're building your code you're writing your application then",
    "start": "623200",
    "end": "629440"
  },
  {
    "text": "you'll deploy then you'll release then you'll figure out how to test right when the when your users come back",
    "start": "629440",
    "end": "636240"
  },
  {
    "text": "and tell you it's not working right so a lot of people tell me no rick shouldn't it be the other way around shouldn't testing come before releasing compliance",
    "start": "636240",
    "end": "642640"
  },
  {
    "text": "reality is not the way i've seen most organizations evolve right testing is usually one of",
    "start": "642640",
    "end": "647839"
  },
  {
    "text": "the last things people address and then of course data management on the back end you know",
    "start": "647839",
    "end": "653839"
  },
  {
    "text": "this can include a variety of information things about how how is my application built right how is it",
    "start": "653839",
    "end": "658880"
  },
  {
    "text": "compiled what are the artifacts that are put out what's the deployment pattern look like for this application uh you",
    "start": "658880",
    "end": "664640"
  },
  {
    "text": "know again it's it's kind of funny that a lot of these things that help your organization operate smoothly are",
    "start": "664640",
    "end": "670240"
  },
  {
    "text": "actually the last things that a development team actually worries about so the object here is obviously we want",
    "start": "670240",
    "end": "676720"
  },
  {
    "text": "to get up and to the right but what you'll typically see is an organization actually start to fill out from left to",
    "start": "676720",
    "end": "682399"
  },
  {
    "text": "right the various silos and you can actually use this list to kind of figure out where am i you know as an organization",
    "start": "682399",
    "end": "688880"
  },
  {
    "text": "right you know how how do we map uh to an efficient devops",
    "start": "688880",
    "end": "694240"
  },
  {
    "text": "type of process right and so you'll fill the silos from left to right and you'll start to still see those silos fill and",
    "start": "694240",
    "end": "700079"
  },
  {
    "text": "then go out and then eventually you want to fill up and and and fill this entire chart now again as with the capability maturity",
    "start": "700079",
    "end": "707040"
  },
  {
    "text": "model we all like the idea of a level five organization with nice repeatable process and all this beauty uh but the",
    "start": "707040",
    "end": "712640"
  },
  {
    "text": "reality is we all operate somewhere in the middle right so this is more more or less",
    "start": "712640",
    "end": "717680"
  },
  {
    "text": "at the top of the list we're talking about goals it's where we want to get to but the reality is somewhere in the",
    "start": "717680",
    "end": "722800"
  },
  {
    "text": "middle is where we're all going to operate so out of all this process this",
    "start": "722800",
    "end": "729040"
  },
  {
    "text": "automated continuous integration deployment environment we have all these code artifacts binaries containers all",
    "start": "729040",
    "end": "735440"
  },
  {
    "text": "kinds of stuff you know okay it's complex it's a big solution uh you know where do we go",
    "start": "735440",
    "end": "741040"
  },
  {
    "text": "and how do we and where do we how do we how do we even start well hopefully at this point we've gone",
    "start": "741040",
    "end": "746079"
  },
  {
    "text": "through the process and we're starting to decide that these are something we want to do as an organization we actually have some management buy-in",
    "start": "746079",
    "end": "752480"
  },
  {
    "text": "in making this happen and so we're going to talk about now are some of the core and you know basic steps you have to go through",
    "start": "752480",
    "end": "759200"
  },
  {
    "text": "as an organization to to actually start to look at leveraging aws you know for some of",
    "start": "759200",
    "end": "765040"
  },
  {
    "text": "these solutions so the first thing we do when we go through with customers and we talk to them about coming to aws and",
    "start": "765040",
    "end": "772320"
  },
  {
    "text": "using aws in any context i mean in the context i'm talking about is using aws tools for for your devops pipeline which",
    "start": "772320",
    "end": "778959"
  },
  {
    "text": "is really your continuous integration continuous deployment environment but pretty much any customer when they come to aws",
    "start": "778959",
    "end": "784880"
  },
  {
    "text": "they're going to be looking at doing a lot of these basic foundational things the first thing we're going to do is say define your users and roles right",
    "start": "784880",
    "end": "791519"
  },
  {
    "text": "you don't want to give everyone the keys to the car you only want to give the people the keys that need them right and",
    "start": "791519",
    "end": "797680"
  },
  {
    "text": "you only want to give them keys to the doors that they actually need and so we're going to find our users our super users our admins that have access",
    "start": "797680",
    "end": "804639"
  },
  {
    "text": "to everything our developers who only have access to certain things our operations people are testing our qa",
    "start": "804639",
    "end": "810480"
  },
  {
    "text": "testing team members uh that have access to different aspects of the aws api so",
    "start": "810480",
    "end": "817200"
  },
  {
    "text": "define all these iam users identity access management uh we'll define the privileges and the roles that",
    "start": "817200",
    "end": "823839"
  },
  {
    "text": "they have and then we'll associate them to their to those accounts the next thing you're going to do is you're going",
    "start": "823839",
    "end": "829040"
  },
  {
    "text": "to look at how do you want to be billed how do you want to control the billing in your organization this is a big",
    "start": "829040",
    "end": "834079"
  },
  {
    "text": "problem for a lot of companies uh you know because people start to what you want when you come to aws you want",
    "start": "834079",
    "end": "839519"
  },
  {
    "text": "strategy a lot of companies come to aws and people start to to run 100 miles an hour because you can but in the",
    "start": "839519",
    "end": "845839"
  },
  {
    "text": "enterprise that's a problem because where is all the billing coming to what p l does this roll up under right so",
    "start": "845839",
    "end": "851360"
  },
  {
    "text": "understanding how this works right you can create multiple accounts in aws you can link those all up into one account",
    "start": "851360",
    "end": "856800"
  },
  {
    "text": "so how do you want to do this as an enterprise do you want to have a single account in which you define all your im",
    "start": "856800",
    "end": "863040"
  },
  {
    "text": "users and roles and permissions do you want multiple accounts that are are paid by individual p ls",
    "start": "863040",
    "end": "869040"
  },
  {
    "text": "do you want multiple accounts uh with individual responsibilities that all roll up into one billing scheme so this",
    "start": "869040",
    "end": "874880"
  },
  {
    "text": "is one of the first things you need to take care of and the first things you need to think about when you come to aws or it can be a lot of headaches you know",
    "start": "874880",
    "end": "880000"
  },
  {
    "text": "for your accounting team and then the next thing we want to do is define how we're going to separate resources",
    "start": "880000",
    "end": "886160"
  },
  {
    "text": "right what do these various environments look like what is dev test and stage what is qa you know what is production",
    "start": "886160",
    "end": "892320"
  },
  {
    "text": "we define our vpcs and we'll put those resources out into those various",
    "start": "892320",
    "end": "897760"
  },
  {
    "text": "vpcs and and then we have full separation of resources",
    "start": "897760",
    "end": "903600"
  },
  {
    "text": "after that we turn on logging and auditing right so aws provides a set of tools to be able to assist in this cloud",
    "start": "903600",
    "end": "909519"
  },
  {
    "text": "trail cloud watch things that you can do to understand who's accessing your api your for your",
    "start": "909519",
    "end": "915600"
  },
  {
    "text": "account and what are they doing you know so change control when people want to know what changed when people want to know who did what right cloudtrail can",
    "start": "915600",
    "end": "922959"
  },
  {
    "text": "tell you that i'll tell you exactly what users hit what you know api commands and",
    "start": "922959",
    "end": "928560"
  },
  {
    "text": "exactly what they did so this foundational infrastructure we've all set up we've set up our user structure we set up our billing",
    "start": "928560",
    "end": "934560"
  },
  {
    "text": "structure we've defined what our resource our sandboxes look like for our integration environment and we've turned",
    "start": "934560",
    "end": "940320"
  },
  {
    "text": "on all of our logging audit trails and we set all our alerts and alarms once we've done all this",
    "start": "940320",
    "end": "945440"
  },
  {
    "text": "we roll it all up into a cloud formation script cloud formation is a great tool you can use cloud formation to define",
    "start": "945440",
    "end": "952240"
  },
  {
    "text": "every aspect of your aws deployment and the neat thing about this is if a meteor hits oregon and that's where you were",
    "start": "952240",
    "end": "959360"
  },
  {
    "text": "deployed right you can run that cloud formation script in san francisco or iad you can rebuild your entire application",
    "start": "959360",
    "end": "966839"
  },
  {
    "text": "infrastructure in minutes right so when we talk about code is infrastructure a lot of that is when we",
    "start": "966839",
    "end": "973519"
  },
  {
    "text": "talk about is cloud formation tools like cloud formation that allow you to use a declarative structure to define",
    "start": "973519",
    "end": "981120"
  },
  {
    "text": "your environment something that can be replayed on demand at any given time",
    "start": "981120",
    "end": "986800"
  },
  {
    "text": "all right so we talked a lot about tool change a little bit about tool change we talk a little bit about how people",
    "start": "988000",
    "end": "993199"
  },
  {
    "text": "actually bring these things and use aws uh you know to deploy a continuous integration",
    "start": "993199",
    "end": "999440"
  },
  {
    "text": "continuous deployment environment uh devops pipeline you know there's multiple ways to go about this right we",
    "start": "999440",
    "end": "1004880"
  },
  {
    "text": "have a series of aws services that can handle just about every aspect of that process but you can also do it yourself",
    "start": "1004880",
    "end": "1011920"
  },
  {
    "text": "self-service in in here it's bring your own server right so",
    "start": "1011920",
    "end": "1017519"
  },
  {
    "text": "you got a lot of flexibility you can deploy whatever tools you want but you have to manage it right",
    "start": "1017519",
    "end": "1023279"
  },
  {
    "text": "um so you know that's part of the reason why you know dependency issues things like this are the reason why uh people like",
    "start": "1023279",
    "end": "1030319"
  },
  {
    "text": "to use managed services uh and aws offers many managed services but we don't prevent people from doing anything",
    "start": "1030319",
    "end": "1035839"
  },
  {
    "text": "that they want so you can deploy anything you need one nice aspect about this is very compatible with lift and shift right so",
    "start": "1035839",
    "end": "1042880"
  },
  {
    "text": "you hear this a lot lift and shift move your applications to the cloud right you can gain a lot of cost savings just by",
    "start": "1042880",
    "end": "1048319"
  },
  {
    "text": "lifting and shifting your applications into the aws cloud then you can maximize that cost savings over time by",
    "start": "1048319",
    "end": "1053520"
  },
  {
    "text": "leveraging additional aws services and architecting those applications to take advantage of the cloud efficiency",
    "start": "1053520",
    "end": "1058640"
  },
  {
    "text": "you don't have to actually change anything to take advantage of some of the cost savings that you can get from cloud in almost every use case i've been",
    "start": "1058640",
    "end": "1064400"
  },
  {
    "text": "involved with customers when i break things down to the actual tco analysis what it comes down to is even taking",
    "start": "1064400",
    "end": "1070240"
  },
  {
    "text": "exactly their infrastructure and moving it right into aws still saves money it doesn't maximize the savings you want to",
    "start": "1070240",
    "end": "1076160"
  },
  {
    "text": "leverage auto scaling groups elastic load balancing to be able to get the power of that on-demand consumption",
    "start": "1076160",
    "end": "1081360"
  },
  {
    "text": "model but you can certainly lift and shift just about any workload into the cloud and see some of that",
    "start": "1081360",
    "end": "1087120"
  },
  {
    "text": "efficiency you can use any tool you want to do this",
    "start": "1087120",
    "end": "1093120"
  },
  {
    "text": "custom amis you build yourself these are amazon machine images if you don't if you're not familiar with that technology",
    "start": "1093120",
    "end": "1098720"
  },
  {
    "text": "it's basically an operating system instance uh you can configure it install whatever software you want you can run anything",
    "start": "1098720",
    "end": "1104480"
  },
  {
    "text": "you want on ec2 you can use marketplace amis marketing many of the vendors in the tool chain",
    "start": "1104480",
    "end": "1110240"
  },
  {
    "text": "slide we talked about if you go into the amazon marketplace the variety of those vendors have already provided amis with their",
    "start": "1110240",
    "end": "1116559"
  },
  {
    "text": "software pre-installed so you can actually bring up jenkins you can bring up ansible you can bring these things up",
    "start": "1116559",
    "end": "1122720"
  },
  {
    "text": "inside the ec2 infrastructure and you can run those on aws",
    "start": "1122720",
    "end": "1128000"
  },
  {
    "text": "using vendor supported vendor provided machine images",
    "start": "1128000",
    "end": "1133039"
  },
  {
    "text": "import your own vms so if you have a vm infrastructure already on-prem",
    "start": "1133039",
    "end": "1139600"
  },
  {
    "text": "uh you can certainly import your own vms what happened",
    "start": "1139600",
    "end": "1145600"
  },
  {
    "text": "okay uh and then you can all and again you can build uh cloud init scripts to configure things on the fly so you can",
    "start": "1146400",
    "end": "1152480"
  },
  {
    "text": "bring up uh servers on the fly configure those things into the role that they're that they're booted up into using user",
    "start": "1152480",
    "end": "1157760"
  },
  {
    "text": "data and cloud init uh whatnot and and actually configure that infrastructure on the fly",
    "start": "1157760",
    "end": "1164320"
  },
  {
    "text": "so that's kind of self-service models build your own i will talk a little bit about some of the amazon services that are offered",
    "start": "1164320",
    "end": "1170160"
  },
  {
    "text": "here some of the infrastructure services uh deployment orchestration beanstop beanstalk opsworks and cloud",
    "start": "1170160",
    "end": "1176720"
  },
  {
    "text": "formation and then again a little bit more about ec2",
    "start": "1176720",
    "end": "1181760"
  },
  {
    "text": "if you go from left to right what you'll see is that beanstalk and cloud and ops works are generally higher level right",
    "start": "1181760",
    "end": "1187520"
  },
  {
    "text": "they have a structure in which you operate you define parameters that govern the way the application is",
    "start": "1187520",
    "end": "1192799"
  },
  {
    "text": "deployed opsworks is a little bit more uh involved or configurable let's say",
    "start": "1192799",
    "end": "1198880"
  },
  {
    "text": "than beanstalk again it depends on what your use case is as to whether which tool is the right",
    "start": "1198880",
    "end": "1204400"
  },
  {
    "text": "one for you cloud formation ec2 much more do it yourself and if you look at",
    "start": "1204400",
    "end": "1210880"
  },
  {
    "text": "from left to right what you get is convenience obviously with beanstalk and ops works a lot more convenience and",
    "start": "1210880",
    "end": "1217600"
  },
  {
    "text": "you get a lot more control with cloud formation and ec2",
    "start": "1217600",
    "end": "1222880"
  },
  {
    "text": "so you see developers out there and they're using more of the high level tools they don't want to understand the op stuff inside outside backwards how to",
    "start": "1222880",
    "end": "1229440"
  },
  {
    "text": "configure operating systems install os is all this thing and you'll see ops working more in cloud",
    "start": "1229440",
    "end": "1234480"
  },
  {
    "text": "formation right these are guys that understand a lot more about the resources they're deployed how networks are configured and they're going to be",
    "start": "1234480",
    "end": "1240960"
  },
  {
    "text": "down there you know defining that information in themselves in cloud formation and everyone gets involved in",
    "start": "1240960",
    "end": "1246320"
  },
  {
    "text": "ec2 right at some point or other so elastic bean stock",
    "start": "1246320",
    "end": "1252880"
  },
  {
    "text": "okay this is really the framework for quick deployment managing the application infrastructure",
    "start": "1252880",
    "end": "1258080"
  },
  {
    "text": "taking the burden of understanding how to do capacity planning how to do sizing you know how to actually deploy that",
    "start": "1258080",
    "end": "1263919"
  },
  {
    "text": "infrastructure away you know from the developer it's very fast it's very simple simply upload your code",
    "start": "1263919",
    "end": "1270640"
  },
  {
    "text": "your application package your war files whatever they are and it and and it actually does",
    "start": "1270640",
    "end": "1276640"
  },
  {
    "text": "versioning for you right so whenever you install whenever you upload a new uh version of your application package uh",
    "start": "1276640",
    "end": "1283280"
  },
  {
    "text": "beanstalk will actually record that as a new version and you can roll forward roll back uh you can monitor the",
    "start": "1283280",
    "end": "1288400"
  },
  {
    "text": "deployments as these things go out there you can actually get reports on what how many instances are actually currently",
    "start": "1288400",
    "end": "1293600"
  },
  {
    "text": "running uh what the utilization of those instances are and as you version the application you can do it uh in in phases right so you",
    "start": "1293600",
    "end": "1301919"
  },
  {
    "text": "don't have to bring the entire application infrastructure down to do the upgrades right and beanstalk will handle all of that for you so developers",
    "start": "1301919",
    "end": "1307919"
  },
  {
    "text": "can focus on being productive on writing code not worrying about having to work",
    "start": "1307919",
    "end": "1313039"
  },
  {
    "text": "deploying infrastructure and it really is impossible to outgrow you know you can specify",
    "start": "1313039",
    "end": "1318960"
  },
  {
    "text": "any size application framework you want to deploy on beanstalk you specify the number of instances the",
    "start": "1318960",
    "end": "1324960"
  },
  {
    "text": "size of the instances the metrics that are used in the auto scaling groups when you fire new instances",
    "start": "1324960",
    "end": "1331120"
  },
  {
    "text": "those are all configurable and specified in the beanstalk you know templates i guess you can",
    "start": "1331120",
    "end": "1336799"
  },
  {
    "text": "complete control over your resources so you know you can you can decide how many instances you want to run",
    "start": "1336799",
    "end": "1343120"
  },
  {
    "text": "you can you can define maximums and minimums around that application infrastructure",
    "start": "1343120",
    "end": "1349520"
  },
  {
    "text": "this is what it looks like again just put your web application package",
    "start": "1350080",
    "end": "1355280"
  },
  {
    "text": "into beanstalk depending on how many times you've uploaded how many times you have",
    "start": "1355280",
    "end": "1360559"
  },
  {
    "text": "you know how many versions you've uploaded which version will run you specify and you specify some parameters around that so you can actually have",
    "start": "1360559",
    "end": "1367280"
  },
  {
    "text": "different deployments for tests staging and production with different parameters around the beanstalk configuration and then that",
    "start": "1367280",
    "end": "1374640"
  },
  {
    "text": "version will get deployed across the instances that you have specified common application stacks supported most",
    "start": "1374640",
    "end": "1380080"
  },
  {
    "text": "of the common ones you'll see net java php node.js you know there's a list of",
    "start": "1380080",
    "end": "1386720"
  },
  {
    "text": "supported application packaging frameworks out there and platforms you can go to aws.amazon.com",
    "start": "1386720",
    "end": "1393640"
  },
  {
    "text": "elasticbeanstalk and it'll give you a lot more information around what types of applications are supported so again",
    "start": "1393640",
    "end": "1399200"
  },
  {
    "text": "these are very very cookie cutter type applications right that you would deploy in in this type of",
    "start": "1399200",
    "end": "1405360"
  },
  {
    "text": "framework we're getting things that are a little bit more complex how you might actually implement an",
    "start": "1405360",
    "end": "1412000"
  },
  {
    "text": "application with bean stock in a complex enterprise environment now when i ran enterprise development teams a lot of times we were using",
    "start": "1412000",
    "end": "1418559"
  },
  {
    "text": "contractors right folks that you didn't necessarily want to give keys to the house right",
    "start": "1418559",
    "end": "1424080"
  },
  {
    "text": "and so with beanstalk what's interesting is you might not necessarily want the contractor to be able to go in there and",
    "start": "1424080",
    "end": "1429760"
  },
  {
    "text": "configure the beanstalk deployment you might want you might not want the contractor to even have access to your aws api to do anything right this is a",
    "start": "1429760",
    "end": "1437440"
  },
  {
    "text": "temporary resource this is not somebody's part of my organization i don't even want them to see what i have deployed in amazon so how do i do that",
    "start": "1437440",
    "end": "1443679"
  },
  {
    "text": "when they need access to the beanstalk api to publish their code right well one of the ways to get around",
    "start": "1443679",
    "end": "1449280"
  },
  {
    "text": "that is actually use containers that's what this chart's showing us so we've got a beanstalk deployment here with",
    "start": "1449280",
    "end": "1454320"
  },
  {
    "text": "multiple containers that are deployed within it and the beanstalk deployment process is to actually pull artifacts",
    "start": "1454320",
    "end": "1460320"
  },
  {
    "text": "out of s3 and then load them into these containers and push the containers out to the instances right that way the",
    "start": "1460320",
    "end": "1467919"
  },
  {
    "text": "only thing you need to give the contractor access to is the s3 bucket they can push their work into the s3 bucket you can pull it out using",
    "start": "1467919",
    "end": "1474480"
  },
  {
    "text": "beanstalk and you don't even have to give them access to your aws apis so that's one of the nice workflows that you can use containers for inside",
    "start": "1474480",
    "end": "1480799"
  },
  {
    "text": "beanstalk ops works a little bit more complicated again manage the model and manage the",
    "start": "1480799",
    "end": "1486880"
  },
  {
    "text": "entire stack so you define application stacks supports any application very complex environments that involve",
    "start": "1486880",
    "end": "1493200"
  },
  {
    "text": "application os dependencies that need to be set up against configuration is code so you use",
    "start": "1493200",
    "end": "1499200"
  },
  {
    "text": "chef behind the scenes um you know bash scripts configuration files",
    "start": "1499200",
    "end": "1504720"
  },
  {
    "text": "that can be changed and you specify all of this in the opsworks framework so it looks a little bit like this",
    "start": "1504720",
    "end": "1511919"
  },
  {
    "text": "you define a stack uh stack has layers uh it can include any types of",
    "start": "1511919",
    "end": "1517039"
  },
  {
    "text": "components in the aws infrastructure so elastic load balancers auto scaling groups what",
    "start": "1517039",
    "end": "1522159"
  },
  {
    "text": "not you might say this is relatively similar to beanstalk and it is except it's again more gives you a little bit",
    "start": "1522159",
    "end": "1528559"
  },
  {
    "text": "more control lets you deal with more uh complex situations that bean stock might not necessarily be suitable for",
    "start": "1528559",
    "end": "1536640"
  },
  {
    "text": "so you basically add your stack uh define your layers and define the apps and then manage it",
    "start": "1536640",
    "end": "1543520"
  },
  {
    "text": "looks very it's very straightforward actually ops works is really neat because it can work with your on-prem",
    "start": "1543520",
    "end": "1548640"
  },
  {
    "text": "resources as well it can consume artifacts out of your on-prem build environment and push those out to ec2",
    "start": "1548640",
    "end": "1554080"
  },
  {
    "text": "instances or on-prem hosts so as an install agent that you can actually push out there and you can manage your",
    "start": "1554080",
    "end": "1559120"
  },
  {
    "text": "on-prem infrastructure using aws os works along as well as the cloud",
    "start": "1559120",
    "end": "1565679"
  },
  {
    "text": "so it's full stack integration across your hybrid it environment being able to take the pieces of your",
    "start": "1567520",
    "end": "1573120"
  },
  {
    "text": "build process that you're using on-prem and be able to integrate those into aws workflows using aws tooling",
    "start": "1573120",
    "end": "1581360"
  },
  {
    "text": "this is one of the neatest things i think we offer at aws is cloud formation we'll talk you know a little bit about",
    "start": "1581360",
    "end": "1586720"
  },
  {
    "text": "this it's a declarative construct it's json syntax you define resources you define",
    "start": "1586720",
    "end": "1592799"
  },
  {
    "text": "parameters for the template you define how it will be deployed what the",
    "start": "1592799",
    "end": "1598880"
  },
  {
    "text": "dependencies on the template are you can you can manage complex deployment scenarios with cloud formation right so",
    "start": "1598880",
    "end": "1605200"
  },
  {
    "text": "you can create conditional deployments i want to deploy these instances to this particular vpc when these instances are",
    "start": "1605200",
    "end": "1611279"
  },
  {
    "text": "up fully configured and running then proceed right so it gives you constructs to be able to manage the deployment",
    "start": "1611279",
    "end": "1618240"
  },
  {
    "text": "workflow and synchronize the deployment workflow as a matter of fact we have many many many examples of cloud",
    "start": "1618240",
    "end": "1624720"
  },
  {
    "text": "formation templates available on the quick start uh portion of our website so if you go out to cloud formation and you",
    "start": "1624720",
    "end": "1630799"
  },
  {
    "text": "look at quick starts uh you'll see a lot of different common application stacks and you get an idea how this works uh",
    "start": "1630799",
    "end": "1636480"
  },
  {
    "text": "but if i say it's very straightforward you you create this document this json document one or more",
    "start": "1636480",
    "end": "1642640"
  },
  {
    "text": "templates can be dependent upon each other they can be linked to each other so you can create one large or multiple",
    "start": "1642640",
    "end": "1648240"
  },
  {
    "text": "small templates and then when you fire these there'll be some set of infrastructure that deploys",
    "start": "1648240",
    "end": "1654320"
  },
  {
    "text": "you know based on how you define those resources this is kind of what it looks like so we create this skeleton against",
    "start": "1654320",
    "end": "1659520"
  },
  {
    "text": "json skeleton you've got some description of what this thing is you define parameters parameters govern all",
    "start": "1659520",
    "end": "1665919"
  },
  {
    "text": "kinds of aspects of the deployment parameters can be how many instances do i want to deploy they can actually be",
    "start": "1665919",
    "end": "1671600"
  },
  {
    "text": "application level configuration information right some of the templates we have complex database no sql products",
    "start": "1671600",
    "end": "1676960"
  },
  {
    "text": "out there",
    "start": "1676960",
    "end": "1680120"
  },
  {
    "text": "but it you know these these these things uh take all kinds of input now this input is available for you to use in in",
    "start": "1684159",
    "end": "1691200"
  },
  {
    "text": "the user data and cloud init script so you can figure on your ec2 instances in the cloud formation template so some of",
    "start": "1691200",
    "end": "1696799"
  },
  {
    "text": "these applications that we have deployed they're not just about provisioning right because there's higher level",
    "start": "1696799",
    "end": "1702080"
  },
  {
    "text": "application configuration that needs to be done okay so when you deploy an osql database like a mongodb for example there's so",
    "start": "1702080",
    "end": "1709520"
  },
  {
    "text": "many different configuration options you have i can deploy a sharded configuration i can deploy a single replica set right i can deploy multiple",
    "start": "1709520",
    "end": "1716640"
  },
  {
    "text": " s instances i can deploy mongod multiple mongod instances per server right and create a micro sharding",
    "start": "1716640",
    "end": "1722320"
  },
  {
    "text": "configuration you can create cloud formation templates that allow users to param you know with",
    "start": "1722320",
    "end": "1727360"
  },
  {
    "text": "parameterized input that allow the users to specify exactly what that configuration looks like and then you",
    "start": "1727360",
    "end": "1732720"
  },
  {
    "text": "can put user data on those instances so when they boot up they will initialize themselves they will download the",
    "start": "1732720",
    "end": "1738399"
  },
  {
    "text": "packages they will install mongodb they will initialize mongodb add the replica",
    "start": "1738399",
    "end": "1743919"
  },
  {
    "text": "set members add the shards to the cluster and then come back and let you know yes i was successful and the cloud",
    "start": "1743919",
    "end": "1749679"
  },
  {
    "text": "formation template can can proceed",
    "start": "1749679",
    "end": "1754320"
  },
  {
    "text": "when you define resources again it's very straightforward json construct this example shows an ec2 instance",
    "start": "1755279",
    "end": "1761840"
  },
  {
    "text": "under resources that's been defined what type is it what kind of key what key pair you're going to use to log in",
    "start": "1761840",
    "end": "1768080"
  },
  {
    "text": "what's the size of this instance what's the operating system what's the ami id so you can specify your own custom amis",
    "start": "1768080",
    "end": "1773520"
  },
  {
    "text": "you can use marketplace amis you can use aws amis",
    "start": "1773520",
    "end": "1778799"
  },
  {
    "text": "and then you just execute the code uh and it can be dependent on other scripts right so i can pull down let's",
    "start": "1778799",
    "end": "1784159"
  },
  {
    "text": "say this particular example installs a chef agent but you can actually do anything you",
    "start": "1784159",
    "end": "1790080"
  },
  {
    "text": "want uh the outputs you can configure outputs from your cloud formation templates",
    "start": "1790080",
    "end": "1795679"
  },
  {
    "text": "those outputs are captured as a log stream and event stream on the template so when you look at the console and you watch the cloud formation template run",
    "start": "1795679",
    "end": "1802480"
  },
  {
    "text": "you can actually see those outputs you know right on the console error messages whatnot from your conditional statements",
    "start": "1802480",
    "end": "1807840"
  },
  {
    "text": "inside your template you can have output data from your user data that's reported up as well all specified in the template",
    "start": "1807840",
    "end": "1816240"
  },
  {
    "text": "cloud formation makes an excellent service catalog right again so i can define complex services in cloud formation",
    "start": "1816240",
    "end": "1823200"
  },
  {
    "text": "using you know parameterized input from the user you know what service do they want to launch what type of service how",
    "start": "1823200",
    "end": "1829360"
  },
  {
    "text": "large of a service these are all things that we can specify as part of a product catalog",
    "start": "1829360",
    "end": "1836159"
  },
  {
    "text": "you basically specify use cloud formation templates we provide an interface aws provides an",
    "start": "1836159",
    "end": "1841520"
  },
  {
    "text": "interface for you where you can use this interface for your service catalog we also integrate with a variety",
    "start": "1841520",
    "end": "1847440"
  },
  {
    "text": "of other self-service systems right so you know common service catalog technologies you know from your big five",
    "start": "1847440",
    "end": "1853919"
  },
  {
    "text": "uh your enterprise guys they can all leverage the cloud formation templates as well",
    "start": "1853919",
    "end": "1859679"
  },
  {
    "text": "so very straightforward usage process to be able to create those templates and again just",
    "start": "1861760",
    "end": "1867760"
  },
  {
    "text": "create the portfolio define your product",
    "start": "1867760",
    "end": "1873039"
  },
  {
    "text": "and attach the template and then it should be available for other users to come in and be able to",
    "start": "1873120",
    "end": "1878960"
  },
  {
    "text": "run that template you can add constraints who can run it when can they run it and what types of uh of rights and",
    "start": "1878960",
    "end": "1885520"
  },
  {
    "text": "privileges people need to be able to exercise these templates as well",
    "start": "1885520",
    "end": "1890559"
  },
  {
    "text": "so that's cloud formation so we'll talk a little bit about code services again code commit code pipeline",
    "start": "1890559",
    "end": "1896880"
  },
  {
    "text": "announced that uh re invent in 2014 and november should be out in the first half of this year so we're getting there",
    "start": "1896880",
    "end": "1903760"
  },
  {
    "text": "look for these things to come soon the code commit is really again it's a fully managed source control service hosting",
    "start": "1903760",
    "end": "1910080"
  },
  {
    "text": "your private git repositories and and take all that administrative overhead away right all",
    "start": "1910080",
    "end": "1916880"
  },
  {
    "text": "you need to worry about is it's my git repo it's just like github i check code in i and and i and i pull",
    "start": "1916880",
    "end": "1924480"
  },
  {
    "text": "it out and it just runs right so that's that's what we do with code commit",
    "start": "1924480",
    "end": "1929679"
  },
  {
    "text": "code pipeline is really continuous integration build environment it's modeled after our own",
    "start": "1929679",
    "end": "1934720"
  },
  {
    "text": "internal tooling so when you when code pipeline is here you can get a little glimpse at how aws runs",
    "start": "1934720",
    "end": "1941279"
  },
  {
    "text": "internally because we use the same tools and code deploy is a deployment technology that manages",
    "start": "1941279",
    "end": "1947120"
  },
  {
    "text": "that manages to push of application data to either on-prem or cloud instances so",
    "start": "1947120",
    "end": "1952799"
  },
  {
    "text": "a neat thing about all these tools these aren't aws specific right these",
    "start": "1952799",
    "end": "1958000"
  },
  {
    "text": "things can be used to manage application deployments across multiple cloud partners across hybrid i.t environments",
    "start": "1958000",
    "end": "1964720"
  },
  {
    "text": "right this is really about an integration deployment pipeline it is",
    "start": "1964720",
    "end": "1970159"
  },
  {
    "text": "it's cloud agnostic right you tell us what hosts do you want to push the data to those hosts can be either on-prem on",
    "start": "1970159",
    "end": "1976000"
  },
  {
    "text": "aws they can be on your own in your own data center they can be on any other cloud provider as well we just need to",
    "start": "1976000",
    "end": "1982159"
  },
  {
    "text": "know where the endpoints are it's a pretty straightforward usage if",
    "start": "1982159",
    "end": "1987919"
  },
  {
    "text": "you're familiar with git you'll be familiar with these interfaces",
    "start": "1987919",
    "end": "1993279"
  },
  {
    "text": "code pipeline is going to look something like this you specify on a layered build process what the steps of that build",
    "start": "1993279",
    "end": "1999279"
  },
  {
    "text": "what the artifacts of the build are where those artifacts will go and where they're pulled from",
    "start": "1999279",
    "end": "2004559"
  },
  {
    "text": "right again we can integrate with code pipeline can integrate with your on-prem resources as well so if you have on-prem",
    "start": "2004559",
    "end": "2010720"
  },
  {
    "text": "you know systems that are creating build artifacts that are part of your application",
    "start": "2010720",
    "end": "2015760"
  },
  {
    "text": "you can you can include those in a code pipeline workflow as well which is pretty cool",
    "start": "2015760",
    "end": "2022720"
  },
  {
    "text": "and then code deploy really straightforward what goes where right so you're specifying things like",
    "start": "2022720",
    "end": "2028559"
  },
  {
    "text": "you know here's the location here's the source location here's the destination in the target file system here's the",
    "start": "2028559",
    "end": "2033840"
  },
  {
    "text": "operating system that you're going to be attaching to what not very straightforward tooling",
    "start": "2033840",
    "end": "2039518"
  },
  {
    "text": "the implementation obviously gets a little bit more complex right so we're talking about a an environment that is",
    "start": "2040720",
    "end": "2047440"
  },
  {
    "text": "mixed in with your existing on-prem infrastructure that might be managing multiple cloud infrastructure provider",
    "start": "2047440",
    "end": "2053118"
  },
  {
    "text": "uh resources uh you know how exactly do we put this together and i think what you're getting if you've been here for a",
    "start": "2053119",
    "end": "2058960"
  },
  {
    "text": "while and you've been dealing with aws for any period of time what you start to get an understanding of is it's about flexibility right it's about choice",
    "start": "2058960",
    "end": "2065599"
  },
  {
    "text": "so we don't lock you into anything and we don't tell you what your process has to be we have some recommendations we",
    "start": "2065599",
    "end": "2072000"
  },
  {
    "text": "can tell you this is what we found to be a good best practice but one size doesn't fit all in the",
    "start": "2072000",
    "end": "2077358"
  },
  {
    "text": "enterprise and we know this so your tooling can integrate with our tooling in many many ways depending on what your",
    "start": "2077359",
    "end": "2083280"
  },
  {
    "text": "deployment model looks like right so in this particular case we might be looking at direct deployment out of s3 and say the example we just",
    "start": "2083280",
    "end": "2090480"
  },
  {
    "text": "talked about earlier contractors pushing code up without having access to your aws apis",
    "start": "2090480",
    "end": "2095520"
  },
  {
    "text": "so you have an s3 event that triggers a code deploy job and pushes things out into production staging qa whatever",
    "start": "2095520",
    "end": "2101119"
  },
  {
    "text": "phase of your pipeline you're in you might also see a soft source code management deploy right coming straight",
    "start": "2101119",
    "end": "2107119"
  },
  {
    "text": "from code commit this could be a php site doesn't need to be compiled right this is just you know straightforward",
    "start": "2107119",
    "end": "2113680"
  },
  {
    "text": "push from git you know through code deploy right out to your production",
    "start": "2113680",
    "end": "2119040"
  },
  {
    "text": "you can see artifacts coming back from code pipeline getting checked in to code commit right",
    "start": "2119040",
    "end": "2124800"
  },
  {
    "text": "see that all the time in a layered build one artifact of one part of the build process could be an input or requirement",
    "start": "2124800",
    "end": "2131200"
  },
  {
    "text": "or dependency of the next step right in which case we actually want those artifacts to come back and get checked",
    "start": "2131200",
    "end": "2136400"
  },
  {
    "text": "back in so you can absolutely do that and then we have in you know maybe interpreted code being pushed out",
    "start": "2136400",
    "end": "2142079"
  },
  {
    "text": "through a continuous deployment straight out into production this could be your html for your website you know for",
    "start": "2142079",
    "end": "2147520"
  },
  {
    "text": "example another thing we might see is code pipeline pushing package packages out",
    "start": "2147520",
    "end": "2153119"
  },
  {
    "text": "into s3 maybe we're not even using code deploy maybe what we've got is a lambda script that's actually doing our",
    "start": "2153119",
    "end": "2158960"
  },
  {
    "text": "continuous deployment fires is3 bucket event and pushes code out into your instances",
    "start": "2158960",
    "end": "2164640"
  },
  {
    "text": "you can actually do all kinds of stuff at that point you're off the grid as far as the tooling is concerned so lambda",
    "start": "2164640",
    "end": "2170400"
  },
  {
    "text": "can do you can do anything you want with lambda so again what you get the idea here is we have very very very flexible",
    "start": "2170400",
    "end": "2176000"
  },
  {
    "text": "model you can use the tools you want and you can integrate them with the tools you have right you can also do on-prem",
    "start": "2176000",
    "end": "2182640"
  },
  {
    "text": "deployments as we mentioned i think this is really powerful when you look at this model the ability to be able to manage both",
    "start": "2182640",
    "end": "2189040"
  },
  {
    "text": "your on-prem and your cloud resources with the same tooling is is a very powerful you know",
    "start": "2189040",
    "end": "2195440"
  },
  {
    "text": "value proposition for customers all right so",
    "start": "2195440",
    "end": "2201040"
  },
  {
    "text": "you take a few minutes and wrap up i might be running a little ahead of schedule maybe not",
    "start": "2201040",
    "end": "2206240"
  },
  {
    "text": "uh and just touch on a couple of things we miss and i'll take some questions uh",
    "start": "2206240",
    "end": "2211440"
  },
  {
    "text": "i mentioned briefly lambda and some of the s3 events what's nice about lambda if you're not familiar with it i'd",
    "start": "2211440",
    "end": "2216960"
  },
  {
    "text": "definitely go and recommend you look at it this is event driven code right when we talk about code as infrastructure",
    "start": "2216960",
    "end": "2222720"
  },
  {
    "text": "that's what it's all about right you don't there's no instance that code runs on you just drop code into lambda you",
    "start": "2222720",
    "end": "2228320"
  },
  {
    "text": "hook it up to an event when that event fires that code runs and we manage the code execution for you so you never",
    "start": "2228320",
    "end": "2233680"
  },
  {
    "text": "actually have to deploy instances and you can run a fully complex application fully interactive application using",
    "start": "2233680",
    "end": "2239280"
  },
  {
    "text": "using lambda aws config configuration management track changes to your infrastructure",
    "start": "2239280",
    "end": "2245520"
  },
  {
    "text": "obviously you can use this for auditing discovery troubleshooting this is a tool that you can use in addition to your existing file system integrity intrusion",
    "start": "2245520",
    "end": "2251599"
  },
  {
    "text": "detection software things like drip wire whatnot aws config can can be an",
    "start": "2251599",
    "end": "2257440"
  },
  {
    "text": "enhancement to that uh and then as well as a container service we talked about one single use case around containers but it's really",
    "start": "2257440",
    "end": "2264320"
  },
  {
    "text": "exciting offering uh with a lot of flexibility uh that is basically",
    "start": "2264320",
    "end": "2269520"
  },
  {
    "text": "a docker technology that's available on a pay-per-use basis so with that",
    "start": "2269520",
    "end": "2276800"
  },
  {
    "text": "i would say i'm hoping that you guys aren't going to be this guy he might be interesting",
    "start": "2276800",
    "end": "2283440"
  },
  {
    "text": "but uh i don't know if that's the kind of interesting i want to be and i think it's a better idea to actually establish a well a very sound",
    "start": "2283440",
    "end": "2290880"
  },
  {
    "text": "process for this continuous integration continuous deployment that involves test verification every step of the way and",
    "start": "2290880",
    "end": "2296560"
  },
  {
    "text": "hopefully in the conversation today you've gotten an idea some some flavor of the tooling that aws",
    "start": "2296560",
    "end": "2301680"
  },
  {
    "text": "offers for that and with that any questions you have i'd be happy to take a few",
    "start": "2301680",
    "end": "2309400"
  },
  {
    "text": "questions no questions",
    "start": "2319359",
    "end": "2323039"
  },
  {
    "text": "step up the microphone please hi uh so i wonder what's uh how would you compare the uh container service",
    "start": "2324960",
    "end": "2332640"
  },
  {
    "text": "and the beanstalk support for docker how to compare them i think one of the",
    "start": "2332640",
    "end": "2337680"
  },
  {
    "text": "examples i gave was an integration of the two right would be uh you know i don't think that there's really",
    "start": "2337680",
    "end": "2342720"
  },
  {
    "text": "necessarily a contrast you know container technology allows ice run time isolation of processes within a",
    "start": "2342720",
    "end": "2348960"
  },
  {
    "text": "single instance and bean stock deployments can leverage containers as well so i'd say they're actually",
    "start": "2348960",
    "end": "2355040"
  },
  {
    "text": "complementary technologies not necessarily something that conflicts with each other",
    "start": "2355040",
    "end": "2361440"
  },
  {
    "text": "anything else yeah with cloud formation how do you use that in the uh the pipeline like do you like",
    "start": "2362960",
    "end": "2369520"
  },
  {
    "text": "flip out vpcs for certain developers have their own vpcs or how would you use cloud formation and the code delivery",
    "start": "2369520",
    "end": "2375839"
  },
  {
    "text": "and the the pipeline for that and is confirmation part of beanstalk or is beanstalk kind of like work with one",
    "start": "2375839",
    "end": "2382240"
  },
  {
    "text": "single cloud okay that's good good question so cloud formation as part of code pipeline you",
    "start": "2382240",
    "end": "2388160"
  },
  {
    "text": "can call cloud formation templates to fire and deploy resources right so if part of your build requires deploying a",
    "start": "2388160",
    "end": "2393680"
  },
  {
    "text": "test staging environment and pushing the build into that you can absolutely do that with you know by including a cloud",
    "start": "2393680",
    "end": "2399119"
  },
  {
    "text": "formation template as part of that code pipeline build process uh and what was the second question",
    "start": "2399119",
    "end": "2406640"
  },
  {
    "text": "okay and the second question was how does cloud formation fit with elastic bean stock so yeah yeah so so they're actually",
    "start": "2407520",
    "end": "2413520"
  },
  {
    "text": "different constructs right so if you look at elastic bean straw bean stock it's a i guess it's much more constrained environment right you with",
    "start": "2413520",
    "end": "2420560"
  },
  {
    "text": "elastic bean stock you're taking an application package a war file or the output from you know the the compilation",
    "start": "2420560",
    "end": "2426640"
  },
  {
    "text": "of your of your web app and you're giving me this this this package and you're pushing it into bean stock you're",
    "start": "2426640",
    "end": "2431760"
  },
  {
    "text": "defining some parameters around how it will deploy and how it will run right things like what metrics should i watch",
    "start": "2431760",
    "end": "2437680"
  },
  {
    "text": "for my auto scaling groups when these and what levels should those metrics be hitting before i fire a new instance you",
    "start": "2437680",
    "end": "2443200"
  },
  {
    "text": "know what's the minimum number of instances i want deployed what's the maximum number of instances i want deployed so in beanstalk it's more like",
    "start": "2443200",
    "end": "2449040"
  },
  {
    "text": "general guidelines around how you want the application to run with cloud formation it's very detailed it's much",
    "start": "2449040",
    "end": "2454560"
  },
  {
    "text": "more specific you can get down in there and define any resource uh to any level of depth you can have conditional",
    "start": "2454560",
    "end": "2460000"
  },
  {
    "text": "deployment workflows uh so that you know if a certain configuration step fails then you back off and the entire st on",
    "start": "2460000",
    "end": "2465760"
  },
  {
    "text": "the entire deployment and roll back uh you know it's just it's a much more configurable framework for deploying",
    "start": "2465760",
    "end": "2471680"
  },
  {
    "text": "much more complex applications and involved more than just pushing a web application package",
    "start": "2471680",
    "end": "2478359"
  },
  {
    "text": "yeah yeah i mean i would say that a bean stock deployment in the cloud formation deployment they're just two different things one one's just is a lot more",
    "start": "2481599",
    "end": "2488240"
  },
  {
    "text": "simple straightforward application developers pushing code the other one is i've got complex environment i need to",
    "start": "2488240",
    "end": "2493920"
  },
  {
    "text": "set up with multiple application dependencies lots of hardware configuration needs to happen application layer synchronizations let's",
    "start": "2493920",
    "end": "2500720"
  },
  {
    "text": "do that in cloud formation absolutely yeah so i'm a little bit confused how do you",
    "start": "2500720",
    "end": "2507920"
  },
  {
    "text": "manage to speed up a devops pipeline with aws do you have any sort of",
    "start": "2507920",
    "end": "2513119"
  },
  {
    "text": "benchmark benchmark market data well i mean i wouldn't say benchmark data right but i",
    "start": "2513119",
    "end": "2518160"
  },
  {
    "text": "think that when you talk about what we do is we take a lot of the management overhead away from the customer right if",
    "start": "2518160",
    "end": "2523359"
  },
  {
    "text": "you look at services like code pipeline code commit these are managed service offerings so you don't need to have it",
    "start": "2523359",
    "end": "2529280"
  },
  {
    "text": "professionals inside on staff managing your svn repo for example doing capacity planning",
    "start": "2529280",
    "end": "2536079"
  },
  {
    "text": "around that worrying about am i running out of storage right these are things that we just managed for you in code",
    "start": "2536079",
    "end": "2541119"
  },
  {
    "text": "commit we have you know managed git repo so you don't need to unders you don't even know need to know what instance",
    "start": "2541119",
    "end": "2546240"
  },
  {
    "text": "it's running on the other thing that we do that accelerates devops pipelines is the tools like beanstalk and cloud formation",
    "start": "2546240",
    "end": "2552640"
  },
  {
    "text": "code deploy right these are tools that automate the build process right they they allow customers to do complex",
    "start": "2552640",
    "end": "2558400"
  },
  {
    "text": "configurations uh using declarative constructs right that don't require you to actually understand the apis of the",
    "start": "2558400",
    "end": "2564560"
  },
  {
    "text": "actual provider or code to those apis right you come into you come into cloud formation it's a json construct you",
    "start": "2564560",
    "end": "2571119"
  },
  {
    "text": "define a resource you don't actually have to go and exercise the ec2 api or",
    "start": "2571119",
    "end": "2576160"
  },
  {
    "text": "program the ec2 api deploy those resources that's all built into cloud formation so again it's a declarative",
    "start": "2576160",
    "end": "2581440"
  },
  {
    "text": "construct so i think those are the tools that really accelerate that pipeline right because if you look at having to",
    "start": "2581440",
    "end": "2586560"
  },
  {
    "text": "build that tooling and those deployment frameworks yourself that's a lot of work i think is a key issue is a",
    "start": "2586560",
    "end": "2592480"
  },
  {
    "text": "pipeline is a ci and cd and a lot of company if you look at the flag company i mean a stands for apple",
    "start": "2592480",
    "end": "2600160"
  },
  {
    "text": "they are pretty much a very perfect uh life cycle you know absolutely so i i mean you know uh",
    "start": "2600160",
    "end": "2606319"
  },
  {
    "text": "compelling against those companies state our other approaches absolutely what's their energy in us yeah yeah no",
    "start": "2606319",
    "end": "2612640"
  },
  {
    "text": "absolutely and this is one of the things that i i hope i got across in the presentation we're not suggesting that",
    "start": "2612640",
    "end": "2617839"
  },
  {
    "text": "you go to code pipeline code commit code deploy cloud formation or whatever and and throw away everything you have right",
    "start": "2617839",
    "end": "2624400"
  },
  {
    "text": "because if you've got tools that work then what we're going to do is we want to integrate with that tooling to make",
    "start": "2624400",
    "end": "2629520"
  },
  {
    "text": "the cloud experience a better experience for you aws is never",
    "start": "2629520",
    "end": "2634640"
  },
  {
    "text": "never going to tell you you got to rip and replace right i mean it if anything what our message message is",
    "start": "2634640",
    "end": "2640960"
  },
  {
    "text": "flexibility pick the pick the tool that's right for you so when we look at your devops pipeline if you're fully if",
    "start": "2640960",
    "end": "2647520"
  },
  {
    "text": "you have a devops pipeline is fully mature very sophisticated and running for you i wouldn't say change it i would say",
    "start": "2647520",
    "end": "2654160"
  },
  {
    "text": "extend it and maybe look at how do we take the output of that of that continuous integration continuous",
    "start": "2654160",
    "end": "2659839"
  },
  {
    "text": "deployment environment that you have that's currently built to be an on-prem facility and let's see how do we make",
    "start": "2659839",
    "end": "2666000"
  },
  {
    "text": "that work with cloud and that might mean bringing in code pipeline to take the output of your existing build process",
    "start": "2666000",
    "end": "2672800"
  },
  {
    "text": "and move it to the cloud or maybe code deploy or maybe like i said s3 direct deployment through a lambda script",
    "start": "2672800",
    "end": "2679280"
  },
  {
    "text": "whatever it might be it's a very flexible set of tools that allow you to to pick the ones that work for you",
    "start": "2679280",
    "end": "2685200"
  },
  {
    "text": "you initially touched on dev and ops how do we co-mingle",
    "start": "2685200",
    "end": "2691040"
  },
  {
    "text": "in terms of dev doing a lot of things dynamic and ops is more uh does now making sure these tools",
    "start": "2691040",
    "end": "2698480"
  },
  {
    "text": "gives you wide range of options sure how do you make sure you know where do you",
    "start": "2698480",
    "end": "2704720"
  },
  {
    "text": "put the balance sure you know just certainly you go on the cloud formation and then you give the",
    "start": "2704720",
    "end": "2710640"
  },
  {
    "text": "flexibility and but who's going to monitor that making sure when they do because they",
    "start": "2710640",
    "end": "2716400"
  },
  {
    "text": "can do everything in production from the start from scratch and other ones are a little bit more",
    "start": "2716400",
    "end": "2722000"
  },
  {
    "text": "restrictive what's the best way to do it how do we make sure it is operated in a right way",
    "start": "2722000",
    "end": "2729520"
  },
  {
    "text": "and pushed some of them gives you the the triggering factor to do dynamically",
    "start": "2729520",
    "end": "2734800"
  },
  {
    "text": "impact the production so how do we strike the balance of water on the yeah so this is kind of you put put in place",
    "start": "2734800",
    "end": "2742000"
  },
  {
    "text": "for just to work in a sure and and so just you know to answer that question it's really about education",
    "start": "2742000",
    "end": "2747520"
  },
  {
    "text": "right it's about uh and it's it gets to be those first three charts i talk to right the dev team says ops is going to",
    "start": "2747520",
    "end": "2753520"
  },
  {
    "text": "you know ops is slowing us down off steam says dev break stuff right what you need to do is you need to get your ops people comfortable with the",
    "start": "2753520",
    "end": "2760000"
  },
  {
    "text": "concept of code is infrastructure well you find with most operations people and trust me i'm an ops guy right i've been",
    "start": "2760000",
    "end": "2765599"
  },
  {
    "text": "a developer i've been opsk i've been a manager right so i i've worn all three of those hats and i've done it all the",
    "start": "2765599",
    "end": "2771440"
  },
  {
    "text": "ops guys love servers they love hosts matter of fact they hug them all the time right",
    "start": "2771440",
    "end": "2778720"
  },
  {
    "text": "as a former ops guy i got to tell you the most freeing thing for me in coming to aws is realizing that i never have to",
    "start": "2779040",
    "end": "2784720"
  },
  {
    "text": "log into a host again and i don't i never log into my servers because when they go bad i kill them and",
    "start": "2784720",
    "end": "2791280"
  },
  {
    "text": "i start another one right and and i have those things defined in my cloud formation templates to the nth degree",
    "start": "2791280",
    "end": "2796960"
  },
  {
    "text": "when these things come up when my servers come up they're they're raw amis and and it's the init scripts that build",
    "start": "2796960",
    "end": "2803200"
  },
  {
    "text": "them into the server into the role that they need to be in on the fly right and you know what when i'm done with that",
    "start": "2803200",
    "end": "2809040"
  },
  {
    "text": "server i shoot it okay and and what you need to do is you need to get your ops people comfortable with that and the way to be able to get",
    "start": "2809040",
    "end": "2815280"
  },
  {
    "text": "uncomfortable with that is get them familiar with the tools right let them start to dig around play with cloud formation and when they understand the",
    "start": "2815280",
    "end": "2821680"
  },
  {
    "text": "level of control that you have over the deployment with this tooling it's really going to open some eyes and",
    "start": "2821680",
    "end": "2827280"
  },
  {
    "text": "it'll take away a lot of the resistance and then what you'll find is you're going to get a much more of a collaborative effort between your",
    "start": "2827280",
    "end": "2833280"
  },
  {
    "text": "development your ops teams right because now all of a sudden your opposite jobs guys are crossing the line right they're writing some code right and and your",
    "start": "2833280",
    "end": "2840400"
  },
  {
    "text": "developers are going and they're getting involved in defining what the deployment infrastructure looks like and you know what this is good we want",
    "start": "2840400",
    "end": "2846560"
  },
  {
    "text": "cross-pollination in in if you want devops you need that right you need everybody in the",
    "start": "2846560",
    "end": "2852400"
  },
  {
    "text": "organization on your development operations team to be thinking about the product holistically and not just my",
    "start": "2852400",
    "end": "2857760"
  },
  {
    "text": "side of the fence throw it over the wall that's old school right we need everybody now interoperating together",
    "start": "2857760",
    "end": "2866599"
  },
  {
    "text": "okay so the question is how do you make sure that you're operating securely in a hybrid environment in this with",
    "start": "2874480",
    "end": "2881040"
  },
  {
    "text": "multiple people accessing uh well it gets down to roles and responsibilities",
    "start": "2881040",
    "end": "2886560"
  },
  {
    "text": "being able to define who has access to what areas of the aws api who has the ability to launch new instances and and",
    "start": "2886560",
    "end": "2893680"
  },
  {
    "text": "i'm sorry i'm actually over time so i'm going to have to cut it off but thank you all for attending i hope you learned",
    "start": "2893680",
    "end": "2899119"
  },
  {
    "text": "a little bit and i'll be available on the sidebar",
    "start": "2899119",
    "end": "2904200"
  }
]