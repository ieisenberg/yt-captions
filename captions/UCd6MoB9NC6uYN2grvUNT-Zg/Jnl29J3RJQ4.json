[
  {
    "start": "0",
    "end": "44000"
  },
  {
    "text": "all right thanks everybody for coming we're gonna go ahead and get started",
    "start": "0",
    "end": "5509"
  },
  {
    "text": "welcome to dev 317 this is a talk actually I'll fast-forward through this",
    "start": "5509",
    "end": "12030"
  },
  {
    "text": "is a talk on advanced continuous delivery best practices my name is Curtis Ricci I'm a senior Solutions Architect with the AWS my name is",
    "start": "12030",
    "end": "19230"
  },
  {
    "text": "Philippe Almeida I'm a senior an engineer we've called by blind so we want to welcome you to this talk thank you for giving us to your",
    "start": "19230",
    "end": "25500"
  },
  {
    "text": "time I appreciate you being here just a quick show of hands and it's a little hard with the how dim it just got but",
    "start": "25500",
    "end": "31470"
  },
  {
    "text": "quick show of hands how many of you are doing continuous delivery practices today pretty much all of you okay good I",
    "start": "31470",
    "end": "39120"
  },
  {
    "text": "want to make sure we set some some ground rules and help you understand what we're gonna go through today so",
    "start": "39120",
    "end": "44960"
  },
  {
    "start": "44000",
    "end": "44000"
  },
  {
    "text": "what I want to get what I want you to walk away from the session with is an understanding of some of the best",
    "start": "44960",
    "end": "50399"
  },
  {
    "text": "practices that we've learned over the years we want to help you understand how you can apply these practices yourself",
    "start": "50399",
    "end": "56640"
  },
  {
    "text": "and we want you to achieve continuous deployment Nirvana and so we'll get through a little bit of a definition in",
    "start": "56640",
    "end": "62399"
  },
  {
    "text": "a second but I want to make sure we understand what we're gonna cover in this talk so in this talk we're gonna talk about",
    "start": "62399",
    "end": "67950"
  },
  {
    "text": "various practices that we've learned to help you automate the safety of your deployments you want to make sure that",
    "start": "67950",
    "end": "74310"
  },
  {
    "text": "when you're releasing you're not just testing the application you're also ensuring that the business has continuity so that if something goes",
    "start": "74310",
    "end": "80820"
  },
  {
    "text": "wrong when you do a deploy you minimize the impact that you have on customers and you can minimize downtime and so we",
    "start": "80820",
    "end": "87270"
  },
  {
    "text": "want to employ improve the safety of your your deployments and then I also hopefully at the end of this if you if",
    "start": "87270",
    "end": "92880"
  },
  {
    "text": "you feel we've met your needs that you know leaving positive feedback is good and if you don't feel we've met your",
    "start": "92880",
    "end": "98700"
  },
  {
    "text": "needs please come by and talk to us I want to make sure that when you walk out of this room you've walked away with something valuable that's a very",
    "start": "98700",
    "end": "104310"
  },
  {
    "text": "important to me as a speaker and it's important to Philippe is a service team member so before we begin let's level",
    "start": "104310",
    "end": "110369"
  },
  {
    "text": "set on what continuous delivery at AWS means so we have a typical software",
    "start": "110369",
    "end": "116219"
  },
  {
    "start": "113000",
    "end": "113000"
  },
  {
    "text": "development lifecycle when we go from source to build to pretest to deploy and post-test continuous integration to us",
    "start": "116219",
    "end": "124079"
  },
  {
    "text": "is everything from source through pretest so basically taking your code building your artifacts running your",
    "start": "124079",
    "end": "130979"
  },
  {
    "text": "tests on that fact maybe running this in a pre-test environment continuous delivery and I hope I don't",
    "start": "130979",
    "end": "138330"
  },
  {
    "text": "stumble on this later in the talk but continuous delivery for us is taking",
    "start": "138330",
    "end": "143640"
  },
  {
    "text": "that continuous integration story and then adding on deploy and post testing but doing it with a manual gait if you",
    "start": "143640",
    "end": "151500"
  },
  {
    "text": "are very mature in these processes you can do what we call continuous deployment where this is a fully",
    "start": "151500",
    "end": "156959"
  },
  {
    "text": "automated end-to-end process this requires a lot of work a lot of time you",
    "start": "156959",
    "end": "162959"
  },
  {
    "text": "have to understand your risk appetite for you as a company it extends beyond just the technology portions of it",
    "start": "162959",
    "end": "169260"
  },
  {
    "text": "really diving into what level of trust you have with your processes so for the sake of this talk we're gonna cover the",
    "start": "169260",
    "end": "176100"
  },
  {
    "text": "continuous delivery portion of this where we have a manual approval gate before you go live",
    "start": "176100",
    "end": "181489"
  },
  {
    "text": "so continuous best delivery best practices for us we want you to have version source so we want you checking",
    "start": "181489",
    "end": "188400"
  },
  {
    "start": "182000",
    "end": "182000"
  },
  {
    "text": "your code into a version repository you can use whichever one works for you we have code commit that you can use and we",
    "start": "188400",
    "end": "194220"
  },
  {
    "text": "encourage you to use but if you want to use github or something else that's perfectly fine by us we want you to have",
    "start": "194220",
    "end": "199530"
  },
  {
    "text": "some form of automated build process so if developers check-in that code or do a",
    "start": "199530",
    "end": "205230"
  },
  {
    "text": "pull request we're triggering some kind of automated build process that will then go through and build your artifacts once those",
    "start": "205230",
    "end": "211440"
  },
  {
    "text": "artifacts are produced we want you to automate that deployment process so get that code out in a way that can be",
    "start": "211440",
    "end": "217140"
  },
  {
    "text": "tested in an automated fashion we want you to deploy that to more than one instance it's great if you deploy to one",
    "start": "217140",
    "end": "222870"
  },
  {
    "text": "instance and it works but we want you to deploy to a pool of instances in multiple regions or multiple",
    "start": "222870",
    "end": "228269"
  },
  {
    "text": "availability zones so you can test it and test it for load and availability as well we want you to perform things like",
    "start": "228269",
    "end": "235049"
  },
  {
    "text": "unit tests how many of you were doing unit tests today when you deploy your code good it should be all of you if",
    "start": "235049",
    "end": "241230"
  },
  {
    "text": "you're not great we'll talk a little bit about that later but we want you to be performing those unit tests because we want you to find",
    "start": "241230",
    "end": "247350"
  },
  {
    "text": "issues fast and you're gonna do that through things like unit tests and integration tests and then we want you",
    "start": "247350",
    "end": "253019"
  },
  {
    "text": "get to a kind of a continuous delivery process which is what we're gonna show you some of today and then the life",
    "start": "253019",
    "end": "258750"
  },
  {
    "text": "cycle doesn't end once it goes to production you know this is a flywheel as you're building these beads",
    "start": "258750",
    "end": "264390"
  },
  {
    "text": "applications you're building them to your customers needs and you're gonna hitter eight on those days you know AWS is a very customer focused company we're",
    "start": "264390",
    "end": "270800"
  },
  {
    "text": "constantly trying to iterate to deliver value to all of you as customers we assumed you were going to be doing the",
    "start": "270800",
    "end": "275990"
  },
  {
    "text": "same process so once these things are out in production we assume in hope that you're going through in setting up",
    "start": "275990",
    "end": "282260"
  },
  {
    "text": "operational dashboards to monitor them gather data and go through and complete that flywheel over and over again so",
    "start": "282260",
    "end": "288530"
  },
  {
    "text": "what this looks like in the form of a process is we've got this process off to",
    "start": "288530",
    "end": "293630"
  },
  {
    "text": "the side that shows source to build two deployments integration integration tests down to production deployments to",
    "start": "293630",
    "end": "299510"
  },
  {
    "text": "production we'll go through a little bit the tools that we're going to use in",
    "start": "299510",
    "end": "304730"
  },
  {
    "start": "301000",
    "end": "301000"
  },
  {
    "text": "this talk because we have to use something to use as an example we're gonna use AWS cloud watch for our",
    "start": "304730",
    "end": "309890"
  },
  {
    "text": "monitoring so the examples that Felipe's going to go through and show and the the stuff I have on the screen will be using",
    "start": "309890",
    "end": "315410"
  },
  {
    "text": "my cloud watch monitoring for software development we're gonna be using things like SNS to do notifications we're gonna",
    "start": "315410",
    "end": "321590"
  },
  {
    "text": "show heavy use of lambda so you can have service components of your your testing",
    "start": "321590",
    "end": "327110"
  },
  {
    "text": "to automate and reduce the amount of overhead but we're also gonna be using code deploy and code pipeline as",
    "start": "327110",
    "end": "333260"
  },
  {
    "text": "examples of continuous delivery and continuous appointment I don't want you to walk out of here thinking that this",
    "start": "333260",
    "end": "338990"
  },
  {
    "text": "is just a big sales pitch for code pipeline please don't take it as that you can use whatever tool is gonna be",
    "start": "338990",
    "end": "344600"
  },
  {
    "text": "effective for your system but for your applications for your team's our goal is to make you effective in doing",
    "start": "344600",
    "end": "350840"
  },
  {
    "text": "continuous delivery I prefer you use things like code pipeline I know Felipe does too he helps build it but",
    "start": "350840",
    "end": "358280"
  },
  {
    "text": "the reality is we have partners that we work with that integrate well with AWS companies like cloud bees we want you to",
    "start": "358280",
    "end": "364370"
  },
  {
    "text": "use the tool it's gonna be right for you so please don't walk away thinking this is just code pipeline these topics and",
    "start": "364370",
    "end": "370669"
  },
  {
    "text": "the things that we're gonna cover do translate to other systems but we have to use a basis for it for us to show you",
    "start": "370669",
    "end": "377180"
  },
  {
    "text": "so let's go back to that process flow so we've got the flow how does this map to",
    "start": "377180",
    "end": "383030"
  },
  {
    "text": "a code pipeline pipeline it's pretty much one-to-one as you can see we'll",
    "start": "383030",
    "end": "388490"
  },
  {
    "text": "dive into this a little bit so we've got the pipeline which is the end-to-end process we're gonna level set a little",
    "start": "388490",
    "end": "395570"
  },
  {
    "text": "bit so we understand we're all talking in the same page we've got what we call stages pipeline is broken up into stages each",
    "start": "395570",
    "end": "402020"
  },
  {
    "text": "stage can be comprised of various actions and there's what we call transitions which allow you to go",
    "start": "402020",
    "end": "408110"
  },
  {
    "text": "between stages so a lot of what we're going to show you is kind of built off of this structure because it's based off my code biplane so when a source code",
    "start": "408110",
    "end": "416360"
  },
  {
    "text": "change comes in it's going to start a run of your pipeline it's going to create an artifact it will go through the build process deployed oh testing",
    "start": "416360",
    "end": "422389"
  },
  {
    "text": "environments go to an integration environment and then hopefully go to production so this is kind of the high",
    "start": "422389",
    "end": "428090"
  },
  {
    "text": "level process of a code pipeline so we want to start this is like a maturity",
    "start": "428090",
    "end": "433729"
  },
  {
    "text": "process I know some of you like most of you said you're doing some form of this today hopefully you're doing all of this",
    "start": "433729",
    "end": "439219"
  },
  {
    "text": "but we're going to show you that if your net new to this you can start at an immature state and evolve this over time",
    "start": "439219",
    "end": "446150"
  },
  {
    "text": "to include more and more of these processes and grow these processes so they're more unique to you in your business so we're gonna start with a",
    "start": "446150",
    "end": "453229"
  },
  {
    "text": "little bit of a simple example of just a simple deploy to a production",
    "start": "453229",
    "end": "458539"
  },
  {
    "text": "environment we're gonna use code pipeline to push that deployment out to a couple of instances on ec2 so for the",
    "start": "458539",
    "end": "467060"
  },
  {
    "text": "sake of simplicity we're gonna be using ec2 today in our examples if any of you want to learn how to do this with",
    "start": "467060",
    "end": "472520"
  },
  {
    "text": "serverless technologies or containers we've got another talk if it's I think",
    "start": "472520",
    "end": "477650"
  },
  {
    "text": "we've already passed that but it'll be recorded and it'll be on YouTube so you can watch that you can download the deck on SlideShare or two days from now dev",
    "start": "477650",
    "end": "484639"
  },
  {
    "text": "3:09 where it's gonna dive much deeper into CI C d-four server lists and containerized applications for today",
    "start": "484639",
    "end": "490039"
  },
  {
    "text": "we're just going to focus on the simplicity of instances but again it will translate so step one where do we",
    "start": "490039",
    "end": "497360"
  },
  {
    "text": "get started well step one in this evolution is starting with automation so getting things off of simple operations",
    "start": "497360",
    "end": "505310"
  },
  {
    "text": "or developers hands and taking away that that that undifferentiated heavy lifting getting a script to do it automating",
    "start": "505310",
    "end": "512029"
  },
  {
    "text": "that process so an automated pipeline should be to find his code we want you",
    "start": "512029",
    "end": "517339"
  },
  {
    "start": "513000",
    "end": "513000"
  },
  {
    "text": "to build things as infrastructures code typically your pipeline should be infrastructures code so you can commit",
    "start": "517339",
    "end": "523578"
  },
  {
    "text": "it to a version control system so that we can track changes we can monitor it we can lock things down this is your",
    "start": "523579",
    "end": "530720"
  },
  {
    "text": "your pathway to production and so we want to make sure that we limit who has access to this and we'll talk about that a little bit later",
    "start": "530720",
    "end": "536470"
  },
  {
    "text": "we want it to be extensible we know that each of you is gonna have some kind of application that's gonna have some",
    "start": "536470",
    "end": "542509"
  },
  {
    "text": "unique testing capability if this were a containers environment we would want you running your images through something",
    "start": "542509",
    "end": "547550"
  },
  {
    "text": "like twistlock to scan the images for security we want you to go through unit testing UI testing selenium testing",
    "start": "547550",
    "end": "553850"
  },
  {
    "text": "things like that so we want it to be extensible so that you can use the tools and services you need to be your",
    "start": "553850",
    "end": "559910"
  },
  {
    "text": "requirements and so being able to call out to other AWS services is important but also being able to call it to",
    "start": "559910",
    "end": "565040"
  },
  {
    "text": "third-party tools is important as well and then the biggest thing that we want you to walk away with is feedback needs",
    "start": "565040",
    "end": "570680"
  },
  {
    "text": "to be fast there's nothing valuable about pushing out a change waiting three weeks for that change to provide that",
    "start": "570680",
    "end": "577279"
  },
  {
    "text": "feedback and having your developers have moved a move-on format so that their context switching what you want to do is",
    "start": "577279",
    "end": "584240"
  },
  {
    "text": "have a developer commit run through a pipeline immediately and get instant",
    "start": "584240",
    "end": "589939"
  },
  {
    "text": "immediate feedback as to whether their build was successful whether it was released successfully and then what",
    "start": "589939",
    "end": "595100"
  },
  {
    "text": "challenges or issues may have been Erised so we want to tighten that feedback loop some opportunities for",
    "start": "595100",
    "end": "602089"
  },
  {
    "start": "600000",
    "end": "600000"
  },
  {
    "text": "automation there's lots of different places for this again this is this is all level setting right now there's various opportunities for you to",
    "start": "602089",
    "end": "608180"
  },
  {
    "text": "implement automation so things like our build processes integration testing obvious most of you should be doing that",
    "start": "608180",
    "end": "614689"
  },
  {
    "text": "today health checks for another good place to start but when we start to get into more of the interesting things",
    "start": "614689",
    "end": "620990"
  },
  {
    "text": "around safety and building safety into your release portion we want you focusing on things like synthetic",
    "start": "620990",
    "end": "626959"
  },
  {
    "text": "testing testing more than just is my server up and returning a 200 is the",
    "start": "626959",
    "end": "631970"
  },
  {
    "text": "application actually responding the way it's spected to imagine you have a micro services based application where you've",
    "start": "631970",
    "end": "638569"
  },
  {
    "text": "got the UI of your application you've got the carts you've got specific buttons on your screen that are showing",
    "start": "638569",
    "end": "644660"
  },
  {
    "text": "prices imagine the pricing service fails your website's up it's presenting",
    "start": "644660",
    "end": "651350"
  },
  {
    "text": "everything but when they go to click that button that button has no text we want to be able to automate those types",
    "start": "651350",
    "end": "656509"
  },
  {
    "text": "of checks to make sure that yeah that that site may be returning at 200 but",
    "start": "656509",
    "end": "661850"
  },
  {
    "text": "it's not functioning as expected so we want you to automate that because having someone manually go through that is",
    "start": "661850",
    "end": "667139"
  },
  {
    "text": "is not going to be that the best use of your time and then we want to look at things opportunities for you to provide",
    "start": "667139",
    "end": "672480"
  },
  {
    "text": "notifications you know where your developers sitting where are their communication streams we want you to",
    "start": "672480",
    "end": "677759"
  },
  {
    "text": "take the time to blast those notifications to where they are so we're not getting delays in communication we",
    "start": "677759",
    "end": "684509"
  },
  {
    "text": "want them to be visible we want you to be able to use things like slack and paid your duty to automate these",
    "start": "684509",
    "end": "690779"
  },
  {
    "text": "processes so let's look at this in the form of building unit tests so we want",
    "start": "690779",
    "end": "696059"
  },
  {
    "start": "692000",
    "end": "692000"
  },
  {
    "text": "to trigger a pipeline so on source control on change we're gonna go through",
    "start": "696059",
    "end": "701249"
  },
  {
    "text": "trigger the pipeline we're then gonna automate that build that build will go through create tests so we'll deploy to",
    "start": "701249",
    "end": "708119"
  },
  {
    "text": "an integration environment and we're gonna run through various tests so we've got two tests here that are gonna go",
    "start": "708119",
    "end": "713160"
  },
  {
    "text": "through and test on Chrome and then we've got one that's an integration test that uses an end end testing solution so",
    "start": "713160",
    "end": "718980"
  },
  {
    "start": "718000",
    "end": "718000"
  },
  {
    "text": "the way this looks when we run this through a pipeline is that change will go through it'll go through to get",
    "start": "718980",
    "end": "725009"
  },
  {
    "text": "deployed and then it fails on one of the tests chrome tests so the browser test",
    "start": "725009",
    "end": "731040"
  },
  {
    "text": "isn't working so that browser test is gonna go through and notify cloud watch events that there was a failed action",
    "start": "731040",
    "end": "736079"
  },
  {
    "text": "and we're gonna use something like lambda to go through and send a notification to slack so our pipeline in",
    "start": "736079",
    "end": "743249"
  },
  {
    "text": "an automated fashion has now notified our development teams or operation team through slack we've got a great blog",
    "start": "743249",
    "end": "748319"
  },
  {
    "text": "post on how to set up this integration how many of you are using integrations like this today about half of you good",
    "start": "748319",
    "end": "755790"
  },
  {
    "text": "that's what we want to see the idea here is it's providing that fast feedback loop and a lot of this may not seem like",
    "start": "755790",
    "end": "762749"
  },
  {
    "text": "round breaking stuff but for some people it is and this is something that we we do consider to be an advanced",
    "start": "762749",
    "end": "767790"
  },
  {
    "text": "integration because you can evolve this to be very complex and so we're showing it to you in a very simplified manner",
    "start": "767790",
    "end": "774709"
  },
  {
    "text": "because the uniqueness of the complexity is going to be unique to each of you so",
    "start": "774709",
    "end": "779910"
  },
  {
    "text": "at least one of the foundation level have this and so say we go through and run this again and now the build fails",
    "start": "779910",
    "end": "785459"
  },
  {
    "text": "we can use that same cloud watch event and that same lambda function to go through and provide the same",
    "start": "785459",
    "end": "791459"
  },
  {
    "text": "notification so growing on this we want to take you to step two deployment health is the best practice so now we've",
    "start": "791459",
    "end": "797999"
  },
  {
    "text": "got some automation we want to go through and actually start focusing on deployment health what does that mean so this builds on our",
    "start": "797999",
    "end": "804660"
  },
  {
    "start": "803000",
    "end": "803000"
  },
  {
    "text": "foundational automation we want to validate that the service is working after a new deployment and we want to",
    "start": "804660",
    "end": "810870"
  },
  {
    "text": "make sure that we're avoiding and doing things manually so the idea here is not just testing that the application is up",
    "start": "810870",
    "end": "818450"
  },
  {
    "text": "but actually testing that it's working so if we look at this in the context of a rolling deployment with code deploy",
    "start": "818450",
    "end": "825120"
  },
  {
    "start": "822000",
    "end": "822000"
  },
  {
    "text": "we're gonna go through deploy version two of our application to all the instances in our pool it's gonna go",
    "start": "825120",
    "end": "832590"
  },
  {
    "text": "through if it works great we've successfully deployed our application but if we go through and run that again",
    "start": "832590",
    "end": "839610"
  },
  {
    "text": "if it fails on one it's going to fail on all by default so we have to introduce",
    "start": "839610",
    "end": "847740"
  },
  {
    "text": "some kind of complexity so if you're just using this out of the box this is the experience you're gonna get so we want to add safety to this how do we add",
    "start": "847740",
    "end": "854190"
  },
  {
    "start": "852000",
    "end": "852000"
  },
  {
    "text": "safety well we add safety by validating each host health we want to ensure a minimum",
    "start": "854190",
    "end": "859380"
  },
  {
    "text": "percentage of our fleet is healthy after a deploy and we want to roll back if things don't go through so say we get",
    "start": "859380",
    "end": "866370"
  },
  {
    "text": "through that process and one of them fails we wanted to roll that back potentially how do we do this",
    "start": "866370",
    "end": "872670"
  },
  {
    "start": "871000",
    "end": "871000"
  },
  {
    "text": "we're gonna implement some simple scripts so these can grow in complexity again we're starting with a base seems",
    "start": "872670",
    "end": "880530"
  },
  {
    "text": "very you know uneventful but it's it's actually a very powerful idea here we've",
    "start": "880530",
    "end": "886140"
  },
  {
    "text": "got this portion of our app specky animal this is part of our code build process or code deploy process part of",
    "start": "886140",
    "end": "892020"
  },
  {
    "text": "our apps Becky em well we specify after the application start we want to execute a shell script what is this shell script doing the",
    "start": "892020",
    "end": "897900"
  },
  {
    "text": "shell script is literally just validating our expected result of that application so making sure that after",
    "start": "897900",
    "end": "903510"
  },
  {
    "text": "we've taken that instance out of rotation after we've gone through stopped the the server deployed our code",
    "start": "903510",
    "end": "910740"
  },
  {
    "text": "and started back up again the health check will check to see if it's 200 we want more we want you to go through and",
    "start": "910740",
    "end": "917400"
  },
  {
    "text": "actually do the validation this is how you execute that validation so if we put this in place and we run this same",
    "start": "917400",
    "end": "923100"
  },
  {
    "text": "deployment again it'll go through it'll do this rolling deploy and if we get two",
    "start": "923100",
    "end": "930140"
  },
  {
    "text": "to one that fails what's the outcome how by a show of hands say that this is a",
    "start": "930140",
    "end": "936149"
  },
  {
    "text": "successful deploy good that's good I don't think any of your Adrienne yeah by",
    "start": "936149",
    "end": "942779"
  },
  {
    "text": "default this is a failed deploy and the reason for that is by default a hundred",
    "start": "942779",
    "end": "948690"
  },
  {
    "text": "percent of your instances have to be deployed to in order for it to be successful and this is where the idea of",
    "start": "948690",
    "end": "954000"
  },
  {
    "start": "953000",
    "end": "953000"
  },
  {
    "text": "bringing in minimum healthy host comes in so we can specify that for a deploy to be successful at least 70 percent or",
    "start": "954000",
    "end": "961140"
  },
  {
    "text": "some specified percentage has to be deployed to successfully so if we have ten hosts one of them fails we've got 90",
    "start": "961140",
    "end": "970200"
  },
  {
    "text": "percent healthy that is how we validate a successful deploy so not only in this scenario or we validating that the",
    "start": "970200",
    "end": "976680"
  },
  {
    "text": "application has been deployed to these instances and that they're working but the one the overall deploy has been",
    "start": "976680",
    "end": "981990"
  },
  {
    "text": "completed enough of it is healthy for us to be to consider this successful you're",
    "start": "981990",
    "end": "987149"
  },
  {
    "text": "gonna choose this based off of your own company's risk appetite some of you might choose a hundred percent some of",
    "start": "987149",
    "end": "992700"
  },
  {
    "text": "you might choose less it depends upon the nature of your application so the complexity is what you can introduce",
    "start": "992700",
    "end": "997950"
  },
  {
    "text": "here this is a starting point but it's very easy to implement you can grow so if we look at this again and that",
    "start": "997950",
    "end": "1004610"
  },
  {
    "text": "deployment goes down to six healthy instances we're now below that 70 percent and this is considered a failure",
    "start": "1004610",
    "end": "1011230"
  },
  {
    "text": "from here we can trigger a rollback we can automate that process itself so how",
    "start": "1011230",
    "end": "1017089"
  },
  {
    "text": "do you implement this very easy to implement a lot of you can get started with this today when you're configuring",
    "start": "1017089",
    "end": "1022579"
  },
  {
    "text": "your code of code deployment we have a deployment config portion are you're gonna specify 2/3 healthy hosts if",
    "start": "1022579",
    "end": "1028520"
  },
  {
    "text": "you're doing it via the API you can go through and specify this wonderful text",
    "start": "1028520",
    "end": "1033709"
  },
  {
    "text": "stream here we're using the type of fleet percentage and you can specify the fat percentage this is a great a great",
    "start": "1033709",
    "end": "1041058"
  },
  {
    "text": "process that a lot of people should be using but I would say not everybody actually does so something that we use",
    "start": "1041059",
    "end": "1047240"
  },
  {
    "start": "1045000",
    "end": "1045000"
  },
  {
    "text": "internally and the idea here is if you'd specify that minimum healthy host",
    "start": "1047240",
    "end": "1052490"
  },
  {
    "text": "there's a checkbox to actually automate the roll back so if the example that we used right now is a rolling deploy so",
    "start": "1052490",
    "end": "1058880"
  },
  {
    "text": "we're literally taking one of our existing instances out of rotation deploying the code to it putting it back in the example of the failed deploy four",
    "start": "1058880",
    "end": "1066650"
  },
  {
    "text": "of those instances failed so we're only at 60% of our instances or in our production",
    "start": "1066650",
    "end": "1072170"
  },
  {
    "text": "environment we have to get that back to 100 the way you do that is by automating the rollback so we want you to be",
    "start": "1072170",
    "end": "1078050"
  },
  {
    "text": "putting that in place so if we look at this in the form of our maturity and growth of our pipeline we've now added",
    "start": "1078050",
    "end": "1084700"
  },
  {
    "text": "validation on our specific coasts so this is this is great so we've got synthesis synthetic testing and through",
    "start": "1084700",
    "end": "1090830"
  },
  {
    "text": "our automation we've got validation of our hosts everything validates that deploy is successful now we want to do",
    "start": "1090830",
    "end": "1098270"
  },
  {
    "start": "1097000",
    "end": "1097000"
  },
  {
    "text": "this in a rolling blue-green deployment and so this is a great evolution Bluegreen deployments how many of you",
    "start": "1098270",
    "end": "1103760"
  },
  {
    "text": "are familiar with lou green departments nice this is much different than the crowd we had yesterday so thank you oh",
    "start": "1103760",
    "end": "1109750"
  },
  {
    "text": "it's good to see so a lot of you like a Bluegreen deployment at its base is the idea of spinning up a parallel",
    "start": "1109750",
    "end": "1116900"
  },
  {
    "text": "environment a green environment where you're going to deploy your application to validate the health and if it's",
    "start": "1116900",
    "end": "1123260"
  },
  {
    "text": "successful we're gonna cut over so in this example here we're deploying to our green environment it fails that builder",
    "start": "1123260",
    "end": "1130940"
  },
  {
    "text": "that the deploy is a failure but you'll note the elastic load balancer is still pointing to a so we have released a",
    "start": "1130940",
    "end": "1136550"
  },
  {
    "text": "failed deploy but it hasn't affected anybody this is something that we should all be exploring as a means to protect",
    "start": "1136550",
    "end": "1142610"
  },
  {
    "text": "our end users during deploys so if we go through and and fix that when we do this",
    "start": "1142610",
    "end": "1149330"
  },
  {
    "text": "deploy and it's kind of hard to see it's the version 2 is changing on our green if it goes through and everything's",
    "start": "1149330",
    "end": "1154940"
  },
  {
    "text": "successful the load balancer automates a swap and now we're cut over to our green",
    "start": "1154940",
    "end": "1160340"
  },
  {
    "text": "environment now based on your own appetite for risk we had some people come by yesterday and actually talked",
    "start": "1160340",
    "end": "1165800"
  },
  {
    "text": "about this how long do you keep that blue environment up well it's up to you it's it's really up to you the idea is",
    "start": "1165800",
    "end": "1172790"
  },
  {
    "text": "we want you to build fast tight cycles of your testing if it takes an hour to go through and do that testing keep them",
    "start": "1172790",
    "end": "1179390"
  },
  {
    "text": "up for at least an hour if it takes a day keep them up for a day the idea is you might miss something in your testing",
    "start": "1179390",
    "end": "1184760"
  },
  {
    "text": "and you're gonna have to iterate through those tests so if there's something you miss you update your tests we want to",
    "start": "1184760",
    "end": "1190160"
  },
  {
    "text": "keep that other environment available so that if you do notice something you can cut over to it quickly and you're not",
    "start": "1190160",
    "end": "1196640"
  },
  {
    "text": "affecting your end users very simple and straightforward so we're gonna go through a quick example of what this looks like so I",
    "start": "1196640",
    "end": "1203580"
  },
  {
    "text": "have a Philippe cut over so yeah talk up",
    "start": "1203580",
    "end": "1209489"
  },
  {
    "text": "or speak up okay better so in this demo I will show you a pipeline orchestrating",
    "start": "1209489",
    "end": "1215609"
  },
  {
    "text": "a bubbling deployment using code deployed for that I've recorded the demo because I don't want you to keep waiting",
    "start": "1215609",
    "end": "1222600"
  },
  {
    "text": "for things to complete here so this is a very simple application is just like an",
    "start": "1222600",
    "end": "1230549"
  },
  {
    "text": "HTML page and we have this pipeline this",
    "start": "1230549",
    "end": "1236399"
  },
  {
    "text": "is the pipeline that's orchestrating the deployment you can see it's a third section of build action and call deploy",
    "start": "1236399",
    "end": "1242519"
  },
  {
    "text": "action I am here modifying the app to increase the version and I will add this",
    "start": "1242519",
    "end": "1247799"
  },
  {
    "text": "bad deployment phrase here this will trigger our test failure okay so the",
    "start": "1247799",
    "end": "1262529"
  },
  {
    "text": "pipeline will pick the change or the tag that change was pushed to the repo so you can see the search stage starting",
    "start": "1262529",
    "end": "1268019"
  },
  {
    "text": "education I will escape this is code",
    "start": "1268019",
    "end": "1273960"
  },
  {
    "text": "build building my application and then the deployment starts dears this is where the interesting things is actually",
    "start": "1273960",
    "end": "1279869"
  },
  {
    "text": "happening so here in code deploy let me pause this so you can see there are like",
    "start": "1279869",
    "end": "1296129"
  },
  {
    "text": "four phase of the blue green deployment code deploy the first phase called deploy will provision an ulti scheme",
    "start": "1296129",
    "end": "1301710"
  },
  {
    "text": "group a new Altice can group it will install my application to the instance in that annuity scaling group undeterred",
    "start": "1301710",
    "end": "1309509"
  },
  {
    "text": "on the third step it will shift the load balancer to point to this new old",
    "start": "1309509",
    "end": "1315450"
  },
  {
    "text": "scaling group and remove the old old skinning group and finally on the fourth step it will tear down the old fleet so",
    "start": "1315450",
    "end": "1323549"
  },
  {
    "text": "what i'm doing here is every time a code deploy change phase in a deployment it",
    "start": "1323549",
    "end": "1329879"
  },
  {
    "text": "will trigger a cloud water event I have a lambda function listening for those events that loss the event advised",
    "start": "1329879",
    "end": "1338130"
  },
  {
    "text": "me the new fleet is ready my lambda function will get a new fleet we'll",
    "start": "1338130",
    "end": "1343410"
  },
  {
    "text": "attach the new fleet to a test load balancer and we'll run some integration",
    "start": "1343410",
    "end": "1349170"
  },
  {
    "text": "tests against that load balancer if the tests are failed we will not fire code deploy that the",
    "start": "1349170",
    "end": "1354960"
  },
  {
    "text": "deployments not good and that's what will happen here so you can see the deployment failing the application is",
    "start": "1354960",
    "end": "1362160"
  },
  {
    "text": "unchanged as expected so let me escape",
    "start": "1362160",
    "end": "1367460"
  },
  {
    "text": "here and then we will fix the version",
    "start": "1367460",
    "end": "1373490"
  },
  {
    "text": "here pipeline detects the change called",
    "start": "1373970",
    "end": "1380880"
  },
  {
    "text": "build starts building and called apoyo kicking again so this time when the",
    "start": "1380880",
    "end": "1390030"
  },
  {
    "text": "lambda function is triggered it will run the test the test will succeed lambda",
    "start": "1390030",
    "end": "1395430"
  },
  {
    "text": "function will call the lambda function will come on API I called the point P I to notify the deployment is actually",
    "start": "1395430",
    "end": "1400890"
  },
  {
    "text": "good so you can see Co deploy will proceed to step 3 and step 4",
    "start": "1400890",
    "end": "1407090"
  },
  {
    "text": "so step 3 I'll call the boys actually moving my new flee to the load balancer",
    "start": "1409910",
    "end": "1417200"
  },
  {
    "text": "ok and it will terminate the old out",
    "start": "1418880",
    "end": "1424080"
  },
  {
    "text": "scan group you can see here it's like deleting and the new version is live so",
    "start": "1424080",
    "end": "1437130"
  },
  {
    "text": "you actually don't need to keep hop around other selves to see this happening you can watch everything from",
    "start": "1437130",
    "end": "1442950"
  },
  {
    "text": "called pipeline I just want to you to have like some visibility on what's going on here thank you",
    "start": "1442950",
    "end": "1450770"
  },
  {
    "text": "and the reason we want to show you this is it's really simple to implement but you can grow this over time you can make",
    "start": "1450770",
    "end": "1458340"
  },
  {
    "text": "this as complex as needed and what we want to show you is that using code pipeline or whatever tool you're using",
    "start": "1458340",
    "end": "1464100"
  },
  {
    "text": "like jenkin or something else there is a corollary to this and we should be going through",
    "start": "1464100",
    "end": "1469740"
  },
  {
    "text": "and making these putting these tests in place to ensure that when we actually release something if there's a failure",
    "start": "1469740",
    "end": "1474840"
  },
  {
    "text": "we stop it from hitting production or we limit the blast radius once it does hit production and if we can go through and",
    "start": "1474840",
    "end": "1480990"
  },
  {
    "text": "automate the deploy or the the rollback we should do that it's very simple and straightforward but this is actually",
    "start": "1480990",
    "end": "1486450"
  },
  {
    "text": "very advanced for some people so step 3 will want to segment how we deploy so",
    "start": "1486450",
    "end": "1491880"
  },
  {
    "text": "we've shown you doing this in Bluegreen deployments we've shown you doing enrolling deployments we want to talk about how you actually do this via",
    "start": "1491880",
    "end": "1498210"
  },
  {
    "text": "segmentation so why segments well we want to minimize the the risk of impact",
    "start": "1498210",
    "end": "1504120"
  },
  {
    "text": "on our deployment so by breaking things up and deploying in smaller chunks we can limit the amount of traffic that's",
    "start": "1504120",
    "end": "1510150"
  },
  {
    "text": "actually being affected by it so if something goes wrong maybe you're only sending 2% of your traffic over to it",
    "start": "1510150",
    "end": "1516000"
  },
  {
    "text": "maybe you're sending just your synthetic tests over to it by breaking it up we can we can minimize that the idea here",
    "start": "1516000",
    "end": "1523140"
  },
  {
    "text": "is also to be able to help catch things that go awry before the users do you know you don't want to push this out to",
    "start": "1523140",
    "end": "1528930"
  },
  {
    "text": "100% of your fleet and suddenly people can't login we want to be able to test that and catch it early on and then we",
    "start": "1528930",
    "end": "1536490"
  },
  {
    "text": "want to be able to rollback quickly naturally so we want to break production",
    "start": "1536490",
    "end": "1543000"
  },
  {
    "start": "1538000",
    "end": "1538000"
  },
  {
    "text": "into chunks again we're just repeating the same thing over and over again so take both typical segmentations we want",
    "start": "1543000",
    "end": "1549030"
  },
  {
    "start": "1545000",
    "end": "1545000"
  },
  {
    "text": "to start by region so break it up by region within each region you can go through and break it up into",
    "start": "1549030",
    "end": "1554760"
  },
  {
    "text": "availability zones so breaking down that way dividing that up into two sub zonal",
    "start": "1554760",
    "end": "1560970"
  },
  {
    "text": "groups and then within its own have a canary so this is typically the approach we want you to take we'll get into the",
    "start": "1560970",
    "end": "1569370"
  },
  {
    "start": "1569000",
    "end": "1569000"
  },
  {
    "text": "regional aspects of it at the moment but a base production deploy should start with at minimum the canary so if you're",
    "start": "1569370",
    "end": "1576120"
  },
  {
    "text": "just starting this today start with a canary deploy and have the rest of your fleet as you're growing this break it up",
    "start": "1576120",
    "end": "1582480"
  },
  {
    "text": "into multiple AZ's and you can have a canary within each az2 if you want and the idea is you're going",
    "start": "1582480",
    "end": "1589740"
  },
  {
    "text": "to deploy to your canary first make sure everything works if it does deploy to",
    "start": "1589740",
    "end": "1596370"
  },
  {
    "text": "the first segment validate that it's working there and if that works then we'll go through and",
    "start": "1596370",
    "end": "1602059"
  },
  {
    "text": "roll the deploy in unison to the remaining segments and we'll do this region by region so to create this and",
    "start": "1602059",
    "end": "1611750"
  },
  {
    "text": "to target these you can use tags it's very simple you can use auto scaling groups the idea is you can very simply",
    "start": "1611750",
    "end": "1618350"
  },
  {
    "text": "go through and tag the instances that you want for your Canaries so you can target them with ease and the way this",
    "start": "1618350",
    "end": "1623420"
  },
  {
    "text": "looks when we modify our pipeline is just to go through and we've got additional actions on our production",
    "start": "1623420",
    "end": "1629420"
  },
  {
    "text": "deploy stage so we're gonna deployed in the smallest segment first we're gonna run our post deploy tests go through",
    "start": "1629420",
    "end": "1636559"
  },
  {
    "text": "again to the the first segment and do its testing and then go through and deploy to the remaining ones and then",
    "start": "1636559",
    "end": "1642710"
  },
  {
    "text": "what we have just introduced on thing on the 17th of this month was the ability to do this across multiple regions so",
    "start": "1642710",
    "end": "1648710"
  },
  {
    "text": "previously you had to have separate pipelines for separate regions now you can actually go through and have a single pipeline that can actually do",
    "start": "1648710",
    "end": "1654320"
  },
  {
    "text": "this across multiple regions so you have one place to go to and all of your deploys for your application the way we",
    "start": "1654320",
    "end": "1660860"
  },
  {
    "start": "1659000",
    "end": "1659000"
  },
  {
    "text": "test that things are valid is we want to go through and test enough data to ensure that things are working so we",
    "start": "1660860",
    "end": "1666170"
  },
  {
    "text": "want to leverage car wash metrics we can use lamb dough we want it we can use cloud watch alarms so we can make sure",
    "start": "1666170",
    "end": "1672470"
  },
  {
    "text": "no service alarms are being fired and we want to make sure that the testing hasn't timed out we can also use codes",
    "start": "1672470",
    "end": "1678590"
  },
  {
    "text": "for that but the idea is you don't want to just test one you want to have multi-faceted testing so you want to",
    "start": "1678590",
    "end": "1684080"
  },
  {
    "text": "make sure we're looking at your application from multiple angles and multiple vantage points to ensure that it's working properly and the way we",
    "start": "1684080",
    "end": "1690170"
  },
  {
    "start": "1688000",
    "end": "1688000"
  },
  {
    "text": "extend code pipeline to be able to accomplish this is we've got various types of actions and this is the same in",
    "start": "1690170",
    "end": "1695300"
  },
  {
    "text": "other solutions as well but the idea is some of this stuff only works for one",
    "start": "1695300",
    "end": "1700970"
  },
  {
    "text": "hour so test actions lamda invoke actions and custom actions have a one",
    "start": "1700970",
    "end": "1706040"
  },
  {
    "text": "hour timeout and the reality is some of your testing may take hours it could take you know a day or more I've seen",
    "start": "1706040",
    "end": "1712130"
  },
  {
    "text": "some companies that have actually had to two days of build processes and testing and so for that we recommend you use",
    "start": "1712130",
    "end": "1718190"
  },
  {
    "text": "approval actions which have a seven-day timeout and so we're going to show you how to leverage the approval action to",
    "start": "1718190",
    "end": "1723670"
  },
  {
    "text": "customize kind of a approval gained so using an",
    "start": "1723670",
    "end": "1729929"
  },
  {
    "text": "approval action we're gonna blast out an approval message to an SNS topic which will then trigger a lambda that will go",
    "start": "1729929",
    "end": "1736230"
  },
  {
    "text": "through do our validation and respond back as to whether that approval is is",
    "start": "1736230",
    "end": "1741270"
  },
  {
    "text": "good to go or not and so the way we set that up is when we create that approval approval action we're gonna specify the",
    "start": "1741270",
    "end": "1748290"
  },
  {
    "text": "AR n of our SNS notification so our topic is gonna go there and then we're",
    "start": "1748290",
    "end": "1753780"
  },
  {
    "text": "gonna use the comment field to provide some JSON strings so we're gonna have a JSON object here that's gonna have",
    "start": "1753780",
    "end": "1758850"
  },
  {
    "text": "specific information about that particular pipeline that particular approval action and then we'll use that",
    "start": "1758850",
    "end": "1764730"
  },
  {
    "text": "down stream when we go through and do a release so when we hit that approval it's gonna go through notify the SNS",
    "start": "1764730",
    "end": "1771660"
  },
  {
    "text": "topic we're just going to hit a lambda function that lambda function then goes through and logs that SNS kind of",
    "start": "1771660",
    "end": "1778140"
  },
  {
    "text": "package bundle into a dynamo DB table which then we have a cloud watch event monitoring via lamda which we'll go",
    "start": "1778140",
    "end": "1786030"
  },
  {
    "text": "through and do the actual testing and so the reason for that is we want your lambda to fire and shut down if it's",
    "start": "1786030",
    "end": "1792870"
  },
  {
    "text": "gonna take a day or more you can't do that with lambda we want to put it somewhere where it can be stored pulled",
    "start": "1792870",
    "end": "1797970"
  },
  {
    "text": "against and then once we know it's valid have it go through and provide that response so that release can continue so",
    "start": "1797970",
    "end": "1806130"
  },
  {
    "text": "looking at this and its components this lambda function is actually pretty straightforward it just has a very simple event which then goes through and",
    "start": "1806130",
    "end": "1813720"
  },
  {
    "text": "takes that SNS jason bundle and breaks it up and then basically just a simple",
    "start": "1813720",
    "end": "1820740"
  },
  {
    "text": "date about evey put so it's gonna store this data in the dynamodb so that that lambda polling can go through i'm not",
    "start": "1820740",
    "end": "1828570"
  },
  {
    "text": "gonna explain how this works because this aspect is gonna be unique to you in your application what type of testing",
    "start": "1828570",
    "end": "1834540"
  },
  {
    "text": "has to be done the durations the timing everything is really unique to you the important thing is that you do it what",
    "start": "1834540",
    "end": "1840420"
  },
  {
    "text": "I'll show you right now is that it's really easy to provide that response so that that approval can continue on and",
    "start": "1840420",
    "end": "1846120"
  },
  {
    "text": "it's just a simple code pipeline put approval method so you're gonna call that using the data from that dynamodb",
    "start": "1846120",
    "end": "1852000"
  },
  {
    "text": "table so that you can go back and mark it as approved pretty simple pretty straightforward but again the outcome is",
    "start": "1852000",
    "end": "1859169"
  },
  {
    "text": "very powerful seems almost anticlimactic looking at it this is actually pretty advanced and it",
    "start": "1859169",
    "end": "1865409"
  },
  {
    "text": "works really well it's stuff that we do internally and we look at Canaries so",
    "start": "1865409",
    "end": "1870989"
  },
  {
    "text": "we're going back to that conversation of breaking things up in segments Canaries should be a part of production they",
    "start": "1870989",
    "end": "1877590"
  },
  {
    "text": "should be having it they should have traffic serve to them they should be configured as just any other production",
    "start": "1877590",
    "end": "1882690"
  },
  {
    "text": "instance but we want them to participate in their own metric stream so imagine you have a thousand instances in your",
    "start": "1882690",
    "end": "1888179"
  },
  {
    "text": "production environment and they're all getting metrics you don't want your canary to get lost in that flood we want",
    "start": "1888179",
    "end": "1893700"
  },
  {
    "text": "it reporting back in just like any other instance but we also want it off to the side providing its own metric stream so",
    "start": "1893700",
    "end": "1900720"
  },
  {
    "text": "as you do your deploy you can test it that data isn't getting lost and the validations can go through and pass so",
    "start": "1900720",
    "end": "1907080"
  },
  {
    "text": "we want to mark those as is somewhat separate so in summary segment the",
    "start": "1907080",
    "end": "1912570"
  },
  {
    "start": "1910000",
    "end": "1910000"
  },
  {
    "text": "production so that we can reduce impacts of bad changes segment by region use canary deploys per region and then break",
    "start": "1912570",
    "end": "1919440"
  },
  {
    "text": "things up as you grow zonally and sub low zonally and then test each segment before moving forward so we also want to",
    "start": "1919440",
    "end": "1927929"
  },
  {
    "text": "call out step four of just deploying to multiple regions this is actually a really important thing that is new as of",
    "start": "1927929",
    "end": "1933479"
  },
  {
    "text": "November as I said the idea here is that you can deploy to multiple regions using",
    "start": "1933479",
    "end": "1938609"
  },
  {
    "text": "the same pipeline there's more reasons to do this than just the idea of getting it out to multiple locations this helps",
    "start": "1938609",
    "end": "1945330"
  },
  {
    "text": "alleviate things like latency for your end users it also increases high availability so your application is",
    "start": "1945330",
    "end": "1951929"
  },
  {
    "text": "being deployed in multiple places in the event that there is a failure it can be served locally to the end users or it",
    "start": "1951929",
    "end": "1957960"
  },
  {
    "text": "can be served as an D our site so having this be a part of your pipeline is important especially if it's just for dr",
    "start": "1957960",
    "end": "1964169"
  },
  {
    "text": "purposes only so if we look at how this looks as we evolve our our pipeline our",
    "start": "1964169",
    "end": "1971549"
  },
  {
    "text": "deployment actually I'm going to go back our deployment is going to be broken up into multiple stages at this point so",
    "start": "1971549",
    "end": "1977669"
  },
  {
    "text": "one stage for each region it's the same process for each region deploy to a canary validate roll through the rest of the",
    "start": "1977669",
    "end": "1985349"
  },
  {
    "text": "deployments so we'll show you a very quick demo of this one",
    "start": "1985349",
    "end": "1990370"
  },
  {
    "text": "so again this is a record at demo so it's a pipe it's a simple pipeline but",
    "start": "1990370",
    "end": "1996650"
  },
  {
    "text": "it's deploying to three regions and each deployment is preceded by a canary deployment in a validation action",
    "start": "1996650",
    "end": "2003760"
  },
  {
    "text": "so for these a pipeline I chose to use cold build for the validation action so",
    "start": "2003760",
    "end": "2009520"
  },
  {
    "text": "we can just start a cold build but instead of building something I am generating syntactic traffic and I also",
    "start": "2009520",
    "end": "2016300"
  },
  {
    "text": "I am also monitoring cloud watch matrix and if anything is all of what I expect",
    "start": "2016300",
    "end": "2022600"
  },
  {
    "text": "to see on the matrix I will fail the validation so I am changing these to",
    "start": "2022600",
    "end": "2030460"
  },
  {
    "text": "return 400 in every request we get let me you can see that pipeline will detect",
    "start": "2030460",
    "end": "2045850"
  },
  {
    "text": "chained build and you will see during the validation phase the validation will",
    "start": "2045850",
    "end": "2053200"
  },
  {
    "text": "fail and there are a lot of more than you can do with a failed validation for instance you could not only stop your",
    "start": "2053200",
    "end": "2061060"
  },
  {
    "text": "deployment from a proceeding but you can also remove the canary host from your load balance so you stop blast radius",
    "start": "2061060",
    "end": "2069760"
  },
  {
    "text": "right away and you can also page your engineers I think that's a good point",
    "start": "2069760",
    "end": "2078760"
  },
  {
    "text": "somebody asked that during your last session once how do we treat Canaries do we have to send traffic to them all the",
    "start": "2078760",
    "end": "2085179"
  },
  {
    "text": "time and the answer is no you don't have to send traffic to them all the time you can actually pull your canary out of rotation you can send your application",
    "start": "2085179",
    "end": "2091780"
  },
  {
    "text": "to it you can test it locally first before you actually open it up so you can further minimize that blast radius",
    "start": "2091780",
    "end": "2097630"
  },
  {
    "text": "but it is important to at least get it back into that production stream so that your test can can be it's pretty",
    "start": "2097630",
    "end": "2104320"
  },
  {
    "text": "interesting to have your canary receiving a customer traffic because the customers will do things that are your",
    "start": "2104320",
    "end": "2109840"
  },
  {
    "text": "test one so there are certain modes of failures that our tests won't ever get",
    "start": "2109840",
    "end": "2115030"
  },
  {
    "text": "so if you have a canary deployment it will only be impacting a small portion of your traffic but it will get the",
    "start": "2115030",
    "end": "2121450"
  },
  {
    "text": "deployment before it hates all the flea yep and that's that's important thing to note too is as your users do things",
    "start": "2121450",
    "end": "2127140"
  },
  {
    "text": "they're gonna do things that are unpredictable you need to be catching that and so you're updating your tests",
    "start": "2127140",
    "end": "2132930"
  },
  {
    "text": "over time and iterating them effectively another thing is we want to implement",
    "start": "2132930",
    "end": "2138600"
  },
  {
    "text": "pipeline governance so the idea here is we want to block non-compliant pipelines",
    "start": "2138600",
    "end": "2145040"
  },
  {
    "start": "2141000",
    "end": "2141000"
  },
  {
    "text": "everybody should be automatically deploying to production you should be deploying it but we want to minimize the",
    "start": "2145040",
    "end": "2152580"
  },
  {
    "text": "impact of say a developer creating a new pipeline skipping past tests skipping past different phases and pushing code",
    "start": "2152580",
    "end": "2159870"
  },
  {
    "text": "straight to production we don't want to go straight from version control out to production but one of the ways that we can do that is by implementing some form",
    "start": "2159870",
    "end": "2166440"
  },
  {
    "text": "of pipeline compliance the example that we're gonna use here is with AWS config so we're gonna build AWS config rules",
    "start": "2166440",
    "end": "2173010"
  },
  {
    "start": "2169000",
    "end": "2169000"
  },
  {
    "text": "that we'll go through actually validate pipe your pipelines validate any changes that happen to your pipelines and then",
    "start": "2173010",
    "end": "2179550"
  },
  {
    "text": "based on the outcome of that actually affect whether your pipeline can put can push code out to production and so we're",
    "start": "2179550",
    "end": "2186930"
  },
  {
    "text": "gonna build a pipeline that uses approvals to pause production deployments and we're gonna use lambda so we've got two examples we're going to",
    "start": "2186930",
    "end": "2192480"
  },
  {
    "text": "show one is just using native AWS config in database configural x' to go through",
    "start": "2192480",
    "end": "2197910"
  },
  {
    "text": "and automate the the stage transitions but one that we're gonna show is just using lambda using the same approval",
    "start": "2197910",
    "end": "2204060"
  },
  {
    "text": "action that we used before so the idea here is as you go through and have a change go through the pipeline once it",
    "start": "2204060",
    "end": "2212430"
  },
  {
    "start": "2207000",
    "end": "2207000"
  },
  {
    "text": "hits that safety check it'll call out using an SNS topic via that approval action which will then go through lambda",
    "start": "2212430",
    "end": "2218220"
  },
  {
    "text": "to validate through AWS config where you've got your pipeline config rules set up whether that's valid or not if it",
    "start": "2218220",
    "end": "2224850"
  },
  {
    "text": "comes back is passed that approval gate has passed and now you can release to production well that was a weird",
    "start": "2224850",
    "end": "2233100"
  },
  {
    "text": "transition so the idea here is we want to basically set up this safety check",
    "start": "2233100",
    "end": "2238140"
  },
  {
    "start": "2234000",
    "end": "2234000"
  },
  {
    "text": "and the way that you do this is you're going to go through create a new configure all this one we're going to create a lambda function that will go",
    "start": "2238140",
    "end": "2246270"
  },
  {
    "text": "through and specify the lambda function that we want to call anytime somebody updates sorry I jump through that really",
    "start": "2246270",
    "end": "2251400"
  },
  {
    "text": "quickly I want you to see this so this is the screen yeah it's not a limiter function it's not I don't fear oh yeah they tobias",
    "start": "2251400",
    "end": "2259340"
  },
  {
    "text": "configural so we specify data of is configurable through this configuration that we'll go through and actually do",
    "start": "2259340",
    "end": "2264500"
  },
  {
    "text": "the validation and then block the change at the end so the way this one works is",
    "start": "2264500",
    "end": "2270890"
  },
  {
    "text": "we're doing it at the stage level anytime we make a change to this pipeline AWS config will fire off a",
    "start": "2270890",
    "end": "2278030"
  },
  {
    "text": "cloud watch event that will go through and validate that pipeline which will then use a lambda function that we",
    "start": "2278030",
    "end": "2284600"
  },
  {
    "text": "specify to go through and block the stage transition so here that nothing",
    "start": "2284600",
    "end": "2290060"
  },
  {
    "text": "can go to that production environment so the difference here is one we had the lambda function doing it is approval",
    "start": "2290060",
    "end": "2295190"
  },
  {
    "text": "action code config here is actually doing it to block transitions and the",
    "start": "2295190",
    "end": "2301400"
  },
  {
    "text": "idea at the end of the day is just we want to make sure that we're blocking the releases to production so we prevent",
    "start": "2301400",
    "end": "2308300"
  },
  {
    "text": "any actions or issues that might be occurring at that level we want to be able to add common actions to all",
    "start": "2308300",
    "end": "2313640"
  },
  {
    "text": "pipelines so every pipeline should have some kind of validation check and the way we can accomplish that is by using",
    "start": "2313640",
    "end": "2319910"
  },
  {
    "text": "things like cloud formation to give development staff so as they're building out new applications we can give",
    "start": "2319910",
    "end": "2325460"
  },
  {
    "text": "development staff an example pipeline to start with and that pipeline can have that governance built in how many of you",
    "start": "2325460",
    "end": "2331340"
  },
  {
    "text": "today have some form of governance process through your release not very",
    "start": "2331340",
    "end": "2336980"
  },
  {
    "text": "many of you okay this is a very important thing and this is something that if you're in compliance and",
    "start": "2336980",
    "end": "2342260"
  },
  {
    "text": "auditing this is actually very important and powerful as well we want to make sure that we can audit and show who has",
    "start": "2342260",
    "end": "2347720"
  },
  {
    "text": "access to these things who can actually deploy to production and what are we doing to actually limit the releases to",
    "start": "2347720",
    "end": "2353630"
  },
  {
    "text": "production in the event that some kind of compliance is out of out of order so this is a really good way of doing that",
    "start": "2353630",
    "end": "2358730"
  },
  {
    "text": "and you want to basically using approval actions to go through so we're going to",
    "start": "2358730",
    "end": "2364310"
  },
  {
    "text": "show you just a really quick version of this in action so here we have this a",
    "start": "2364310",
    "end": "2370490"
  },
  {
    "text": "simple pipeline with three stage three stage and three action types and we will",
    "start": "2370490",
    "end": "2377030"
  },
  {
    "text": "use lambda function listening from listening for a SS config rules event so",
    "start": "2377030",
    "end": "2383630"
  },
  {
    "text": "this is the dashboard for our SS config rules I six pipelines in my account here as you",
    "start": "2383630",
    "end": "2389570"
  },
  {
    "text": "can see and all of them are compliant with the rules I have so here you can",
    "start": "2389570",
    "end": "2398750"
  },
  {
    "text": "see the rules I have configured so there are like two rules today one will check",
    "start": "2398750",
    "end": "2404360"
  },
  {
    "text": "for multiple deployments in your first deployment stage as safety feature we",
    "start": "2404360",
    "end": "2411020"
  },
  {
    "text": "don't consider a good practice to target multiple environments on your first deployment stage and the second rule",
    "start": "2411020",
    "end": "2418970"
  },
  {
    "text": "rule we have here is I will check for how quickly you're finding out your",
    "start": "2418970",
    "end": "2425630"
  },
  {
    "text": "deployment to mood Parisiennes you don't want to deploy to multiple regions at",
    "start": "2425630",
    "end": "2430640"
  },
  {
    "text": "home since you know your deployment is actually good so usually you go like one",
    "start": "2430640",
    "end": "2436160"
  },
  {
    "text": "region two or three region and then like for six or ten you can also create your",
    "start": "2436160",
    "end": "2444560"
  },
  {
    "text": "own rules it's actually pretty easy it's just a matter of writing a lambda function the console you can do that",
    "start": "2444560",
    "end": "2450440"
  },
  {
    "text": "from the console in a SS configure just ask you for the name of the lambda function that lambda function will",
    "start": "2450440",
    "end": "2456620"
  },
  {
    "text": "receive your pipeline definition every time your pipeline change because some only did it is green on the console or",
    "start": "2456620",
    "end": "2464060"
  },
  {
    "text": "or CLI or confirmation so let's see it",
    "start": "2464060",
    "end": "2469190"
  },
  {
    "text": "happening here so why we did this pipeline and I will add a second deployment stage a second deployment",
    "start": "2469190",
    "end": "2475160"
  },
  {
    "text": "action to this stage so the pipeline now",
    "start": "2475160",
    "end": "2487820"
  },
  {
    "text": "has a second deployment stage and we can see so this is act the actual lambda",
    "start": "2487820",
    "end": "2498320"
  },
  {
    "text": "function that I have in place you can see it's you probably can see can read the code but you can see it's a pretty",
    "start": "2498320",
    "end": "2503870"
  },
  {
    "text": "small function that I have and the reality is we'll be sharing this on SlideShare after the fact so if you have",
    "start": "2503870",
    "end": "2510140"
  },
  {
    "text": "trouble reading this you can actually see it on SlideShare later so what this lambda function is doing is it will be",
    "start": "2510140",
    "end": "2517280"
  },
  {
    "text": "triggered every time the compliance state of the pipeline chains",
    "start": "2517280",
    "end": "2522560"
  },
  {
    "text": "in the a SS config so it will know your pipeline became compliant or and",
    "start": "2522560",
    "end": "2527780"
  },
  {
    "text": "compliant and if your pipeline isn't compliant that lambda function will disable every stage transition your",
    "start": "2527780",
    "end": "2535430"
  },
  {
    "text": "pipeline so you can see one pipeline I",
    "start": "2535430",
    "end": "2542150"
  },
  {
    "text": "mark this and compliant now the rule that pipeline isn't compliant with and",
    "start": "2542150",
    "end": "2552410"
  },
  {
    "text": "now we can check the transitions are disabled you can also like set specific",
    "start": "2552410",
    "end": "2560330"
  },
  {
    "text": "message here like for the reason to these stations that the transition is disabled you can choose to page someone",
    "start": "2560330",
    "end": "2567140"
  },
  {
    "text": "or not find slack email whatever works for you thank you okay so if we look at",
    "start": "2567140",
    "end": "2578420"
  },
  {
    "text": "our process again going back to our NN lifecycle we've now added safety checks",
    "start": "2578420",
    "end": "2583940"
  },
  {
    "text": "here so there's additional safety checks that you can actually employed outside of just config so imagine that you're",
    "start": "2583940",
    "end": "2590270"
  },
  {
    "text": "doing something like Black Friday and you have a code freeze you can actually block your pipeline based off of lambda",
    "start": "2590270",
    "end": "2596630"
  },
  {
    "text": "functions so you can say you can have a release schedule or a code free schedule and based on that schedule you can",
    "start": "2596630",
    "end": "2603380"
  },
  {
    "text": "actually block releases through your pipelines so you can trigger those as gates so there's great opportunities",
    "start": "2603380",
    "end": "2609110"
  },
  {
    "text": "there to limit it to the time that staff is available maybe you have specific staff that's there 8:00 to 5:00 we only",
    "start": "2609110",
    "end": "2614150"
  },
  {
    "text": "want releases Veit to 5:00 Monday through Friday great you can actually go through and put those in place to limit when things can actually get released to",
    "start": "2614150",
    "end": "2621350"
  },
  {
    "text": "production so what we've learned so far is that we want to identify production",
    "start": "2621350",
    "end": "2627110"
  },
  {
    "text": "issues quickly we want to be able to do continuous production testing and automate the notification so that we're",
    "start": "2627110",
    "end": "2632360"
  },
  {
    "text": "getting feedback to our developers and our teams in the event that things have failed we want to deploy changes in a",
    "start": "2632360",
    "end": "2639320"
  },
  {
    "text": "managed way so we want to deploy based on the health of our systems we want to segment our environments to limit the",
    "start": "2639320",
    "end": "2646820"
  },
  {
    "text": "amount of potential risk that we have when we actually get things out to production and we want to improve latency and",
    "start": "2646820",
    "end": "2652579"
  },
  {
    "text": "availability of your applications so we want to be able to provide deployments to multiple regions and then we want to",
    "start": "2652579",
    "end": "2660349"
  },
  {
    "text": "I don't automatically decide one to release changes so whether we should be blocking things at specific times whether we should be blocking things",
    "start": "2660349",
    "end": "2666589"
  },
  {
    "text": "based on compliance these are things that these are all processes that we use internally I highly recommend you do",
    "start": "2666589",
    "end": "2672559"
  },
  {
    "text": "that and use it yourself if we look at it in the form of our ending point of the our pipeline and I think well we'll",
    "start": "2672559",
    "end": "2679549"
  },
  {
    "text": "talk a little bit more about a couple other things too we've grown it from automated testing to validating and",
    "start": "2679549",
    "end": "2686480"
  },
  {
    "text": "segmenting our deploys to growing our pipeline to include testing and with",
    "start": "2686480",
    "end": "2691579"
  },
  {
    "text": "Canaries and then also putting things in place we've got example code for all of",
    "start": "2691579",
    "end": "2696680"
  },
  {
    "text": "this on AWS labs on github so I highly recommend you go through and look at that there are additional talks that",
    "start": "2696680",
    "end": "2703040"
  },
  {
    "start": "2702000",
    "end": "2702000"
  },
  {
    "text": "dive deeper on this before I say thank you I do want to mention a few things that we other people brought up in our",
    "start": "2703040",
    "end": "2708619"
  },
  {
    "text": "previous talk things like database deployments so a lot of people came up and said look how do we handle database",
    "start": "2708619",
    "end": "2714950"
  },
  {
    "text": "deployments through this process do we deploy them at the same time do we deploy them staggered what's the process",
    "start": "2714950",
    "end": "2720440"
  },
  {
    "text": "there and the best right advice that I have and you might have different experience but the advice that I had for people was there are specific design",
    "start": "2720440",
    "end": "2727369"
  },
  {
    "text": "patterns that you can follow they're available online that there's an open source website they don't have handy right now but if you hit me up after",
    "start": "2727369",
    "end": "2734000"
  },
  {
    "text": "this on twitter my handle is boring geek and the only courtesy in the world to so",
    "start": "2734000",
    "end": "2739130"
  },
  {
    "text": "you can Google mean you'll find me if you hit me up I can give you the URL to it but the idea is there's specific",
    "start": "2739130",
    "end": "2744619"
  },
  {
    "text": "patterns that you follow when you do database deploys so I would actually stagger those releases between your code",
    "start": "2744619",
    "end": "2749900"
  },
  {
    "text": "and your actual database structure so that if you do a release that's maybe introducing a new structure in your",
    "start": "2749900",
    "end": "2756200"
  },
  {
    "text": "database you release that first get that out into production get it running in the production database and then as a",
    "start": "2756200",
    "end": "2763010"
  },
  {
    "text": "subsequent deploy once you've validated that everything's there then deploy the code that would make use of it if you",
    "start": "2763010",
    "end": "2769250"
  },
  {
    "text": "need to do a destructive change deploy the code first so that it's no longer using that structure and in a subsequent",
    "start": "2769250",
    "end": "2776690"
  },
  {
    "text": "deploy do the destruction and that's great for relational databases but here",
    "start": "2776690",
    "end": "2781730"
  },
  {
    "text": "at AWS I'll let you talk a little bit about how approach the database model yeah I think we do exactly what our couriers were",
    "start": "2781730",
    "end": "2788510"
  },
  {
    "text": "saying but we always make sure we have tests in the when you're deploying your code that will exercise the new",
    "start": "2788510",
    "end": "2795020"
  },
  {
    "text": "restructure in that way like if you're missing the deployment for the database the Col deployment will also fail you",
    "start": "2795020",
    "end": "2801920"
  },
  {
    "text": "and be rolled back so you don't have impact we also like to do we also do a",
    "start": "2801920",
    "end": "2807230"
  },
  {
    "text": "lot we have something that we call pre prod stage that's basically a prod host",
    "start": "2807230",
    "end": "2813170"
  },
  {
    "text": "it's like a canary host but it doesn't receive customer traffic it only receives test traffic so what we do is",
    "start": "2813170",
    "end": "2820820"
  },
  {
    "text": "well that way we will guarantee that before getting to the canary deployment",
    "start": "2820820",
    "end": "2825860"
  },
  {
    "text": "all the dependence for your code is already deploy to that region because your test would fail all the rice yep",
    "start": "2825860",
    "end": "2832910"
  },
  {
    "text": "another question we had was on how do you do dependent deploys so if you have a release that's going out that requires",
    "start": "2832910",
    "end": "2839420"
  },
  {
    "text": "a specific version of a subsequent service and the idea there is I would leverage something like git ops you",
    "start": "2839420",
    "end": "2845960"
  },
  {
    "text": "mentioned another option I think it's basically the same approach that we use for database database is just a specific",
    "start": "2845960",
    "end": "2852560"
  },
  {
    "text": "case of some dependence right so you can have again your pre prod stage make sure",
    "start": "2852560",
    "end": "2857930"
  },
  {
    "text": "you have some test case exercise and then you dependence path and you will be",
    "start": "2857930",
    "end": "2863030"
  },
  {
    "text": "fine because your call deployment won't each production if for your deployment if your dependence is not available yet",
    "start": "2863030",
    "end": "2869600"
  },
  {
    "text": "yeah and it's the same from the get-ups model your your code should define the dependencies and the versions that it's",
    "start": "2869600",
    "end": "2874910"
  },
  {
    "text": "expecting so that when you fire your tests your tests can actually go through and validate that those versions are out",
    "start": "2874910",
    "end": "2880730"
  },
  {
    "text": "there and if they aren't available or the version of the service that you're trying to call isn't released or is there's a mismatch your test will fail",
    "start": "2880730",
    "end": "2887900"
  },
  {
    "text": "which will prevent that code from going out and being an issue so there's lots of ways that you can grow this again I",
    "start": "2887900",
    "end": "2894890"
  },
  {
    "text": "do want to stress that we used code deploy and code pipeline heavily through this process you don't have to use that",
    "start": "2894890",
    "end": "2900740"
  },
  {
    "text": "we encourage you to use whatever tools are right for you we offer these as a capability and that's native to AWS and",
    "start": "2900740",
    "end": "2907580"
  },
  {
    "text": "we encourage you to use them but if you're using something like one of our partner solutions that we have deep integrations with you're going to be",
    "start": "2907580",
    "end": "2913070"
  },
  {
    "text": "successful as well and this isn't just something that's tied to Lenox if you're using your windows based on environment you're",
    "start": "2913070",
    "end": "2919590"
  },
  {
    "text": "using that stack you can go through that process as well there a lot of this our",
    "start": "2919590",
    "end": "2924900"
  },
  {
    "text": "base primitives that you can employ holistically through through your environment regardless of the platform",
    "start": "2924900",
    "end": "2931590"
  },
  {
    "text": "the important thing that I want you to walk away free that we want you to be",
    "start": "2931590",
    "end": "2936600"
  },
  {
    "text": "successful delivering capabilities to your customers and doing so in a way that minimizes any risk or impact on",
    "start": "2936600",
    "end": "2942000"
  },
  {
    "text": "them you can grow these over time you can evolve this the the key thing is to start with one and move through it and",
    "start": "2942000",
    "end": "2948750"
  },
  {
    "text": "maybe most of you 60% of you we're doing some of these I would I would assume probably 20% of you are already way",
    "start": "2948750",
    "end": "2955620"
  },
  {
    "text": "beyond this and looking at me going like that's not advanced congratulations you are already doing advanced things that's",
    "start": "2955620",
    "end": "2962610"
  },
  {
    "text": "good twenty percent of you this may be net new and so I encourage you to try this and as you go along the way if you",
    "start": "2962610",
    "end": "2968820"
  },
  {
    "text": "stumble or you have challenges find us online talk to us ask questions if you have an account",
    "start": "2968820",
    "end": "2974850"
  },
  {
    "text": "manager reach out to your camp manager if you have a team talk to your Tam we will help you along that way so I want",
    "start": "2974850",
    "end": "2982560"
  },
  {
    "text": "to say thank you we're opening will be available for ten minutes to answer questions and then if",
    "start": "2982560",
    "end": "2988800"
  },
  {
    "text": "there's additional questions we can go outside I appreciate again that you came and gave us your time of the day we're",
    "start": "2988800",
    "end": "2997380"
  },
  {
    "text": "also heavily focused on data we're a very data driven company so please",
    "start": "2997380",
    "end": "3003320"
  },
  {
    "text": "provide feedback and if you find yourself giving us a four or five thank you I really appreciate it I'm glad that",
    "start": "3003320",
    "end": "3009140"
  },
  {
    "text": "you walked out of here with something valuable if you find yourself giving us less than a three before you push that",
    "start": "3009140",
    "end": "3014690"
  },
  {
    "text": "button come talk to me come ask a question I want to be able to have you walk out of here with value and feeling",
    "start": "3014690",
    "end": "3021080"
  },
  {
    "text": "like you got something that was useful for you so please come to us before beforehand let me make it right so I appreciate it thank you so much I",
    "start": "3021080",
    "end": "3028040"
  },
  {
    "text": "wish you luck and and and a lot of enjoyment this week at reinvent so thank you thank you [Applause]",
    "start": "3028040",
    "end": "3038750"
  }
]