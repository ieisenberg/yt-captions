[
  {
    "start": "0",
    "end": "25000"
  },
  {
    "text": "This is My Architecture.\nMediaset: Achieving an Omni-Channel Broadcasting Voting System Near Realtime at Scale. ",
    "start": "0",
    "end": "4528"
  },
  {
    "text": "Welcome to This is My Architecture.",
    "start": "5368",
    "end": "7239"
  },
  {
    "text": "I am Hawn, and today I'm joined\nby Marco from Mediaset",
    "start": "7239",
    "end": "10118"
  },
  {
    "text": "Welcome.\nThank you for having me.",
    "start": "10119",
    "end": "11760"
  },
  {
    "text": "Tell us about Mediaset.",
    "start": "11840",
    "end": "13261"
  },
  {
    "text": "Mediaset is Italy top free broadcaster.",
    "start": "13261",
    "end": "16341"
  },
  {
    "text": "We have an average share of 40%",
    "start": "16342",
    "end": "19908"
  },
  {
    "text": "on our linear channels\nand more than 10 million views",
    "start": "20087",
    "end": "24059"
  },
  {
    "text": "on our digital channels daily.",
    "start": "24059",
    "end": "26051"
  },
  {
    "start": "25000",
    "end": "63000"
  },
  {
    "text": "Awesome.\nSo what problem are you trying to solve today?",
    "start": "27650",
    "end": "29553"
  },
  {
    "text": "Well, our most top talent show is Amici,",
    "start": "29553",
    "end": "32703"
  },
  {
    "text": "which is a game where a classroom of teenagers\ncompetes one against the other",
    "start": "32704",
    "end": "38416"
  },
  {
    "text": "by dancing and acting to win enter prize.",
    "start": "38416",
    "end": "40563"
  },
  {
    "text": "During the final episode of the show,\nthe winner is chosen by the public.",
    "start": "40563",
    "end": "44774"
  },
  {
    "text": "We are a voting system.",
    "start": "44774",
    "end": "46306"
  },
  {
    "text": "Last year we had the need\nto withstand a load",
    "start": "46721",
    "end": "49276"
  },
  {
    "text": "an increased load in traffic,\nin number of votes.",
    "start": "49276",
    "end": "52743"
  },
  {
    "text": "We expected a higher load,\nand we had expected a very spiky pattern.",
    "start": "52743",
    "end": "57549"
  },
  {
    "text": "So we decided to rebuild the infrastructure\nfrom scratch using AWS Services",
    "start": "57549",
    "end": "62146"
  },
  {
    "text": "in order to withstand this load.",
    "start": "62146",
    "end": "63533"
  },
  {
    "start": "63000",
    "end": "97000"
  },
  {
    "text": "Let's dive in. \nYeah, of course.",
    "start": "63533",
    "end": "65476"
  },
  {
    "text": "So the first step is open session.",
    "start": "65477",
    "end": "67724"
  },
  {
    "text": "So the show is broadcast from an on-prem.",
    "start": "67724",
    "end": "71431"
  },
  {
    "text": "So we have an on-prem system\nthat is being used by editorial teams to open the session.",
    "start": "71431",
    "end": "76889"
  },
  {
    "text": "This comment is rooted through a VPN",
    "start": "77079",
    "end": "80346"
  },
  {
    "text": "and goes to an ECS service on Fargate.",
    "start": "80620",
    "end": "84182"
  },
  {
    "text": "This service is not accessible\non the public network",
    "start": "84182",
    "end": "88098"
  },
  {
    "text": "and its responsibility is to open\nthe session on MemoryDB.",
    "start": "88098",
    "end": "91800"
  },
  {
    "text": "MemoryDB is being used to store\nwho the contestants are in a specific voting session",
    "start": "92517",
    "end": "98397"
  },
  {
    "start": "97000",
    "end": "179000"
  },
  {
    "text": "Cool.\nSo let's just say I'm ready to vote.",
    "start": "99315",
    "end": "101596"
  },
  {
    "text": "What happens?",
    "start": "101596",
    "end": "102178"
  },
  {
    "text": "Yeah, so the user has to choose\nfrom several different channels",
    "start": "102178",
    "end": "105691"
  },
  {
    "text": "that we're allowing to use to vote,",
    "start": "105691",
    "end": "107844"
  },
  {
    "text": "and we have SMS,",
    "start": "107844",
    "end": "109241"
  },
  {
    "text": "we have mobile application, both iOS and Android.",
    "start": "109241",
    "end": "111777"
  },
  {
    "text": "We have websites\nand we also have connected TVs.",
    "start": "111777",
    "end": "115099"
  },
  {
    "text": "Once the user is authenticated on this platform",
    "start": "115388",
    "end": "118635"
  },
  {
    "text": "and that he's a chosen who he wants to vote,",
    "start": "118635",
    "end": "120853"
  },
  {
    "text": "he will transmit his vote intention.",
    "start": "120853",
    "end": "123306"
  },
  {
    "text": "The first issue that we need to solve\nis being sure that users outside of Italy cannot vote.",
    "start": "123769",
    "end": "129013"
  },
  {
    "text": "We use WAF to perform this check.",
    "start": "129013",
    "end": "131417"
  },
  {
    "text": "So the votes come into WAF,\nand we make sure that location of the users is valid.",
    "start": "131417",
    "end": "138184"
  },
  {
    "text": "After that, the users go through ALB",
    "start": "138603",
    "end": "141612"
  },
  {
    "text": "and reaches a front end service on Fargate.",
    "start": "142205",
    "end": "144759"
  },
  {
    "text": "The service is completely separate\nfrom the Beacon Service that we talked about earlier.",
    "start": "144759",
    "end": "148575"
  },
  {
    "text": "And these two components\nare obviously being used",
    "start": "148575",
    "end": "151297"
  },
  {
    "text": "to withstand the Spiky load pattern\nthat we expect.",
    "start": "151297",
    "end": "154857"
  },
  {
    "text": "Fargate is being scaled\nwith an auto-scaling policies",
    "start": "154857",
    "end": "158346"
  },
  {
    "text": "and with the scheduled policies\nof auto-scaling",
    "start": "158346",
    "end": "161234"
  },
  {
    "text": "to make sure that we can absorb\nwhat we are expecting.",
    "start": "161234",
    "end": "165316"
  },
  {
    "text": "Fargate is being used also to validate\nthat the user is authenticated correctly",
    "start": "165866",
    "end": "170334"
  },
  {
    "text": "and we perform a first check\nthat the session has been opened",
    "start": "170334",
    "end": "173705"
  },
  {
    "text": "before the users is transmitting its vote.",
    "start": "173705",
    "end": "176069"
  },
  {
    "text": "If everything is okay, the vote\nis then transmitted on MemoryDB.",
    "start": "176069",
    "end": "180003"
  },
  {
    "start": "179000",
    "end": "225000"
  },
  {
    "text": "MemoryDB is where the core logic\nof our application is being served.",
    "start": "180938",
    "end": "186304"
  },
  {
    "text": "We use a Lua script to make sure\nthat no more than one vote is processed concurrently.",
    "start": "186612",
    "end": "193470"
  },
  {
    "text": "We double-check that the session is open",
    "start": "193470",
    "end": "196508"
  },
  {
    "text": "and we check that the users\nhave not exhausted the votes for one specific session.",
    "start": "196508",
    "end": "202560"
  },
  {
    "text": "If everything is okay,\nwe update the counters",
    "start": "203265",
    "end": "206171"
  },
  {
    "text": "so that we can know who is being voted\nand what are the new limits,",
    "start": "206171",
    "end": "210803"
  },
  {
    "text": "the new remaining votes. ",
    "start": "210803",
    "end": "213062"
  },
  {
    "text": "And we transmit the results back to the users\nso that we can provide feedback.",
    "start": "213063",
    "end": "217425"
  },
  {
    "text": "We can tell him if everything was okay, ",
    "start": "217425",
    "end": "219308"
  },
  {
    "text": "we can tell him if\nand how many votes he has left,",
    "start": "219308",
    "end": "223742"
  },
  {
    "text": "and if there was an error or not.",
    "start": "224095",
    "end": "226720"
  },
  {
    "start": "225000",
    "end": "291000"
  },
  {
    "text": "All of this in under than 10 milliseconds.",
    "start": "227132",
    "end": "230690"
  },
  {
    "text": "Wow.",
    "start": "230690",
    "end": "231315"
  },
  {
    "text": "And how many consumers or viewers \nyou're seeing?",
    "start": "231517",
    "end": "234576"
  },
  {
    "text": "Well, during last final episode",
    "start": "234576",
    "end": "237309"
  },
  {
    "text": "we had five voting sessions,",
    "start": "237309",
    "end": "239169"
  },
  {
    "text": "and we collected more than 5 million votes.",
    "start": "239169",
    "end": "243678"
  },
  {
    "text": "And is all processed in 10 milliseconds?",
    "start": "244798",
    "end": "246643"
  },
  {
    "text": "Yeah.",
    "start": "246643",
    "end": "247355"
  },
  {
    "text": "Super cool.",
    "start": "247355",
    "end": "248595"
  },
  {
    "text": "But how do you monitor all of this?",
    "start": "248595",
    "end": "250442"
  },
  {
    "text": "Well, basically we create a lot of logs.",
    "start": "251148",
    "end": "254349"
  },
  {
    "text": "Both ALB and Fargate create logs.",
    "start": "254845",
    "end": "258665"
  },
  {
    "text": "These logs are stored in CloudWatch",
    "start": "259410",
    "end": "262055"
  },
  {
    "text": "and this allows us to create dashboards",
    "start": "262055",
    "end": "265076"
  },
  {
    "text": "to make sure that everything is going\naccording to what we expect,",
    "start": "265076",
    "end": "269345"
  },
  {
    "text": "and we have no issues.",
    "start": "269346",
    "end": "271233"
  },
  {
    "text": "The same data is being streamed\nthrough Kinesis Firehose.",
    "start": "271733",
    "end": "276057"
  },
  {
    "text": "Obviously it's a lot of data,",
    "start": "276057",
    "end": "278171"
  },
  {
    "text": "but we can allow to stream it to Data Firehose",
    "start": "278171",
    "end": "281371"
  },
  {
    "text": "and persist it on S3 for long-term storage,\nfor certification purposes",
    "start": "281371",
    "end": "287418"
  },
  {
    "text": "and to integrate this with our other data\nthat we have with our other services.",
    "start": "287418",
    "end": "292214"
  },
  {
    "start": "291000",
    "end": "347000"
  },
  {
    "text": "Super cool.",
    "start": "293171",
    "end": "293810"
  },
  {
    "text": "So now that this session's open,\nusers are voting",
    "start": "293810",
    "end": "297780"
  },
  {
    "text": "and then we are able to visualize that,\nnow let's just say the show ends?",
    "start": "297780",
    "end": "302230"
  },
  {
    "text": "Yeah.\nThen what?",
    "start": "302230",
    "end": "303350"
  },
  {
    "text": "So as for the opening of the session",
    "start": "303350",
    "end": "306052"
  },
  {
    "text": "the editorial team will close the session. ",
    "start": "307045",
    "end": "309320"
  },
  {
    "text": "The flow is the same as before,",
    "start": "309320",
    "end": "310614"
  },
  {
    "text": "so the command will go through the VPN,\nwill go to Fargate.",
    "start": "310614",
    "end": "314751"
  },
  {
    "text": "Then will go to MemoryDB,\nwhich will close the session",
    "start": "315240",
    "end": "317884"
  },
  {
    "text": "so further words cannot be processed.",
    "start": "317885",
    "end": "320073"
  },
  {
    "text": "and the results will be streamed down on-prem",
    "start": "320073",
    "end": "323073"
  },
  {
    "text": "so that the conductor\nof the show can tell the public",
    "start": "323073",
    "end": "326438"
  },
  {
    "text": "who was the winner of this particular session\nor of the show.",
    "start": "326438",
    "end": "330534"
  },
  {
    "text": "Well, thank you so much\nfor going over your architecture,",
    "start": "331210",
    "end": "333634"
  },
  {
    "text": "that is truly game changing, that you're able to do\nthat near real time streaming of that voting.",
    "start": "333634",
    "end": "338160"
  },
  {
    "text": "So thank you.\nIt's been a pleasure.",
    "start": "338160",
    "end": "339632"
  },
  {
    "text": "And thank you for watching\nThis is My Architecture.",
    "start": "340102",
    "end": "342410"
  },
  {
    "text": "Thank you for Watching.",
    "start": "342904",
    "end": "345798"
  },
  {
    "text": "AWS. \naws.amazon.com/this-is-my-architecture",
    "start": "345799",
    "end": "349056"
  }
]