[
  {
    "start": "0",
    "end": "75000"
  },
  {
    "text": "how many of you are don't need all of us",
    "start": "230",
    "end": "2639"
  },
  {
    "text": "here oh that's interesting",
    "start": "2639",
    "end": "6319"
  },
  {
    "text": "in this session we are going to talk",
    "start": "6319",
    "end": "8429"
  },
  {
    "text": "about container Ising dotnet",
    "start": "8429",
    "end": "10320"
  },
  {
    "text": "applications and running them at scale",
    "start": "10320",
    "end": "12030"
  },
  {
    "text": "on AWS like you I was adorned in",
    "start": "12030",
    "end": "15179"
  },
  {
    "text": "developer for about seven years and in",
    "start": "15179",
    "end": "16980"
  },
  {
    "text": "last role as a Software Architect taken",
    "start": "16980",
    "end": "19650"
  },
  {
    "text": "care of about 80 plus developers helping",
    "start": "19650",
    "end": "21900"
  },
  {
    "text": "them writing great Microsoft",
    "start": "21900",
    "end": "23250"
  },
  {
    "text": "applications",
    "start": "23250",
    "end": "23939"
  },
  {
    "text": "I love dotnet programming we have been",
    "start": "23939",
    "end": "27330"
  },
  {
    "text": "running dotnet applications on virtual",
    "start": "27330",
    "end": "29550"
  },
  {
    "text": "machines for a long time Microsoft did a",
    "start": "29550",
    "end": "32488"
  },
  {
    "text": "bit late entry into the container world",
    "start": "32489",
    "end": "34410"
  },
  {
    "text": "but with the interaction of Windows",
    "start": "34410",
    "end": "36270"
  },
  {
    "text": "containers containers on our in the",
    "start": "36270",
    "end": "40410"
  },
  {
    "text": "introduction of Windows 2016 servers",
    "start": "40410",
    "end": "42329"
  },
  {
    "text": "containers are a first-class citizen on",
    "start": "42329",
    "end": "45210"
  },
  {
    "text": "Windows platform a lot of our customers",
    "start": "45210",
    "end": "47430"
  },
  {
    "text": "ask this question can we run containers",
    "start": "47430",
    "end": "50670"
  },
  {
    "text": "at scale on AWS Windows images are big",
    "start": "50670",
    "end": "53520"
  },
  {
    "text": "it's about 10 gigabyte for the Windows",
    "start": "53520",
    "end": "55350"
  },
  {
    "text": "Co image how about running them on",
    "start": "55350",
    "end": "57510"
  },
  {
    "text": "production environment can I do",
    "start": "57510",
    "end": "58890"
  },
  {
    "text": "continuous deliveries on them how about",
    "start": "58890",
    "end": "61649"
  },
  {
    "text": "the pooling support allow Visual Studio",
    "start": "61649",
    "end": "63750"
  },
  {
    "text": "allow Microsoft Team Foundation server",
    "start": "63750",
    "end": "66240"
  },
  {
    "text": "how can we integrate them with AWS in",
    "start": "66240",
    "end": "68850"
  },
  {
    "text": "this session what you are going to learn",
    "start": "68850",
    "end": "70470"
  },
  {
    "text": "is how you can easily containerize your",
    "start": "70470",
    "end": "72390"
  },
  {
    "text": "dotnet applications and run them at",
    "start": "72390",
    "end": "73950"
  },
  {
    "text": "scale on AWS so what I'm going to do now",
    "start": "73950",
    "end": "76950"
  },
  {
    "start": "75000",
    "end": "514000"
  },
  {
    "text": "is to first containerize a very simple",
    "start": "76950",
    "end": "78810"
  },
  {
    "text": "console application using Visual Studio",
    "start": "78810",
    "end": "80310"
  },
  {
    "text": "for the best interest of time because we",
    "start": "80310",
    "end": "82380"
  },
  {
    "text": "have about 30 minutes I have recorded",
    "start": "82380",
    "end": "84570"
  },
  {
    "text": "them cut them and just going to give",
    "start": "84570",
    "end": "86549"
  },
  {
    "text": "them only the what is needed because",
    "start": "86549",
    "end": "88829"
  },
  {
    "text": "image download upload cluster refresh",
    "start": "88829",
    "end": "91229"
  },
  {
    "text": "health checks takes time so here I'm in",
    "start": "91229",
    "end": "93540"
  },
  {
    "text": "my visual studio what I'm going to do",
    "start": "93540",
    "end": "95549"
  },
  {
    "text": "now is to create a very simple console",
    "start": "95549",
    "end": "97920"
  },
  {
    "text": "application a batch application give it",
    "start": "97920",
    "end": "100350"
  },
  {
    "text": "a name something like my batch",
    "start": "100350",
    "end": "101610"
  },
  {
    "text": "application created and then what I'm",
    "start": "101610",
    "end": "104729"
  },
  {
    "text": "going to do is to paste some code all",
    "start": "104729",
    "end": "106920"
  },
  {
    "text": "what that code is going to do is to spin",
    "start": "106920",
    "end": "109110"
  },
  {
    "text": "up multiple threads about 20 threads and",
    "start": "109110",
    "end": "112350"
  },
  {
    "text": "then print some random numbers into the",
    "start": "112350",
    "end": "114329"
  },
  {
    "text": "screen so this it's use the task",
    "start": "114329",
    "end": "118649"
  },
  {
    "text": "parallel to print these numbers so",
    "start": "118649",
    "end": "120840"
  },
  {
    "text": "naughty magic what I'm representing here",
    "start": "120840",
    "end": "123000"
  },
  {
    "text": "is a very classic batch application that",
    "start": "123000",
    "end": "125189"
  },
  {
    "text": "you can",
    "start": "125189",
    "end": "125490"
  },
  {
    "text": "containerize so once I run this all what",
    "start": "125490",
    "end": "129929"
  },
  {
    "text": "is going to do is to print some RAM",
    "start": "129929",
    "end": "131610"
  },
  {
    "text": "numbers into the screen right",
    "start": "131610",
    "end": "134280"
  },
  {
    "text": "so to containerize this all what you",
    "start": "134280",
    "end": "136530"
  },
  {
    "text": "need to do is to right-click and click",
    "start": "136530",
    "end": "138690"
  },
  {
    "text": "add docker support and it's going to add",
    "start": "138690",
    "end": "141450"
  },
  {
    "text": "this file called docker file which will",
    "start": "141450",
    "end": "144300"
  },
  {
    "text": "identify what kind of image that this",
    "start": "144300",
    "end": "146160"
  },
  {
    "text": "application is going to based on so if",
    "start": "146160",
    "end": "148320"
  },
  {
    "text": "you look at the first part of this code",
    "start": "148320",
    "end": "149760"
  },
  {
    "text": "it says hey base this one out of got",
    "start": "149760",
    "end": "152310"
  },
  {
    "text": "need framework image so Microsoft",
    "start": "152310",
    "end": "154110"
  },
  {
    "text": "regularly published this image in the",
    "start": "154110",
    "end": "156860"
  },
  {
    "text": "repositories like docker hub so once you",
    "start": "156860",
    "end": "159420"
  },
  {
    "text": "build this what will happen is if you",
    "start": "159420",
    "end": "161310"
  },
  {
    "text": "try to run it Visual Studio is going to",
    "start": "161310",
    "end": "163560"
  },
  {
    "text": "go there and then download the image if",
    "start": "163560",
    "end": "166380"
  },
  {
    "text": "you don't already have it let's say this",
    "start": "166380",
    "end": "169650"
  },
  {
    "text": "is happening in a continuous integration",
    "start": "169650",
    "end": "171000"
  },
  {
    "text": "system only Delta changes are being",
    "start": "171000",
    "end": "173370"
  },
  {
    "text": "pushed so what will happen is that it's",
    "start": "173370",
    "end": "176400"
  },
  {
    "text": "going to download this image with the",
    "start": "176400",
    "end": "178470"
  },
  {
    "text": "magic of video editing I'm not going to",
    "start": "178470",
    "end": "180720"
  },
  {
    "text": "wait until all this image continues",
    "start": "180720",
    "end": "183270"
  },
  {
    "text": "downloaded and so once you fast forward",
    "start": "183270",
    "end": "185850"
  },
  {
    "text": "what will happen is it will kick-start",
    "start": "185850",
    "end": "187860"
  },
  {
    "text": "this image and then run some remote",
    "start": "187860",
    "end": "191370"
  },
  {
    "text": "debug and you get your favor favorite",
    "start": "191370",
    "end": "193290"
  },
  {
    "text": "debug points heat so debug in the",
    "start": "193290",
    "end": "195390"
  },
  {
    "text": "console application is same as when you",
    "start": "195390",
    "end": "198090"
  },
  {
    "text": "containerize it using your favorite",
    "start": "198090",
    "end": "200130"
  },
  {
    "text": "Microsoft tools great if you start",
    "start": "200130",
    "end": "203670"
  },
  {
    "text": "PowerShell and then type dock appears to",
    "start": "203670",
    "end": "205620"
  },
  {
    "text": "get the running containers so behind the",
    "start": "205620",
    "end": "207780"
  },
  {
    "text": "scene the Visual Studio has built this",
    "start": "207780",
    "end": "209670"
  },
  {
    "text": "image spin up a new container and you",
    "start": "209670",
    "end": "212100"
  },
  {
    "text": "can use the same tool that you have been",
    "start": "212100",
    "end": "213540"
  },
  {
    "text": "using containerize in dotnet asp.net so",
    "start": "213540",
    "end": "216720"
  },
  {
    "text": "these are full dotnet full framework",
    "start": "216720",
    "end": "218100"
  },
  {
    "text": "applications is also easy just click and",
    "start": "218100",
    "end": "220920"
  },
  {
    "text": "then click add docker support and then",
    "start": "220920",
    "end": "224040"
  },
  {
    "text": "you can easily containerize this asp.net",
    "start": "224040",
    "end": "227400"
  },
  {
    "text": "web application so this could be your",
    "start": "227400",
    "end": "229410"
  },
  {
    "text": "Web API application or this could be",
    "start": "229410",
    "end": "231959"
  },
  {
    "text": "your SP dotnet MVC application so behind",
    "start": "231959",
    "end": "235980"
  },
  {
    "text": "the scene what it's going to do is to",
    "start": "235980",
    "end": "237360"
  },
  {
    "text": "base this solution out of asp.net image",
    "start": "237360",
    "end": "241650"
  },
  {
    "text": "which has a iOS install your dotnet",
    "start": "241650",
    "end": "244200"
  },
  {
    "text": "framework installed and it's going to",
    "start": "244200",
    "end": "246180"
  },
  {
    "text": "spin up a container start iOS and they",
    "start": "246180",
    "end": "249390"
  },
  {
    "text": "run the remote debug behind the scene",
    "start": "249390",
    "end": "251100"
  },
  {
    "text": "the interest in this is not going to run",
    "start": "251100",
    "end": "253290"
  },
  {
    "text": "on your localhost it's going to run on a",
    "start": "253290",
    "end": "255030"
  },
  {
    "text": "special net network so you can actually",
    "start": "255030",
    "end": "257190"
  },
  {
    "text": "like run multiple website if you want so",
    "start": "257190",
    "end": "262500"
  },
  {
    "text": "debugging of this application is also",
    "start": "262500",
    "end": "264479"
  },
  {
    "text": "super easy all what you need to do is to",
    "start": "264479",
    "end": "266460"
  },
  {
    "text": "let's say makes",
    "start": "266460",
    "end": "267150"
  },
  {
    "text": "modification and it'll get reflected as",
    "start": "267150",
    "end": "270000"
  },
  {
    "text": "long as you don't need to make any",
    "start": "270000",
    "end": "271770"
  },
  {
    "text": "modification that will end up in that",
    "start": "271770",
    "end": "274530"
  },
  {
    "text": "you need to compile if let's say you are",
    "start": "274530",
    "end": "277169"
  },
  {
    "text": "going to make some HTML changes style",
    "start": "277169",
    "end": "279240"
  },
  {
    "text": "changes or JavaScript changes and won't",
    "start": "279240",
    "end": "281250"
  },
  {
    "text": "get the image built and tested or what",
    "start": "281250",
    "end": "285120"
  },
  {
    "text": "you need to do is to make this change",
    "start": "285120",
    "end": "286410"
  },
  {
    "text": "and then refresh it and it will get",
    "start": "286410",
    "end": "288020"
  },
  {
    "text": "replay",
    "start": "288020",
    "end": "289350"
  },
  {
    "text": "represented in your web application so",
    "start": "289350",
    "end": "293310"
  },
  {
    "text": "the debug points you get heat and also",
    "start": "293310",
    "end": "295979"
  },
  {
    "text": "you get the changes that you want",
    "start": "295979",
    "end": "297300"
  },
  {
    "text": "without restarting iis or restarting",
    "start": "297300",
    "end": "299760"
  },
  {
    "text": "your container so what we learn here is",
    "start": "299760",
    "end": "302520"
  },
  {
    "text": "that you have this IRS website and there",
    "start": "302520",
    "end": "304949"
  },
  {
    "text": "are like three or four web application",
    "start": "304949",
    "end": "306840"
  },
  {
    "text": "running so this may be your multiple web",
    "start": "306840",
    "end": "309270"
  },
  {
    "text": "application your web api running on",
    "start": "309270",
    "end": "310949"
  },
  {
    "text": "different applications so this will",
    "start": "310949",
    "end": "313620"
  },
  {
    "text": "convert into different converter",
    "start": "313620",
    "end": "315090"
  },
  {
    "text": "different containers very likely so what",
    "start": "315090",
    "end": "317370"
  },
  {
    "text": "we'll have is that you have this the",
    "start": "317370",
    "end": "319770"
  },
  {
    "text": "Amazon ECR and you are going to get",
    "start": "319770",
    "end": "321539"
  },
  {
    "text": "these different applications into your",
    "start": "321539",
    "end": "323130"
  },
  {
    "text": "localhost and then run them if you have",
    "start": "323130",
    "end": "325830"
  },
  {
    "text": "different themes for example working you",
    "start": "325830",
    "end": "328080"
  },
  {
    "text": "can create a continuous integration",
    "start": "328080",
    "end": "329490"
  },
  {
    "text": "system that will build these containers",
    "start": "329490",
    "end": "331530"
  },
  {
    "text": "and publish into the test server and",
    "start": "331530",
    "end": "333270"
  },
  {
    "text": "then you will have you can point your",
    "start": "333270",
    "end": "335669"
  },
  {
    "text": "API proxy into this central location so",
    "start": "335669",
    "end": "339229"
  },
  {
    "text": "far what we study is how about running a",
    "start": "339229",
    "end": "342360"
  },
  {
    "text": "single container so running a single",
    "start": "342360",
    "end": "344280"
  },
  {
    "text": "content is super easy we can even run it",
    "start": "344280",
    "end": "347159"
  },
  {
    "text": "manually the challenge comes when you",
    "start": "347159",
    "end": "349860"
  },
  {
    "text": "try to run hundreds of containers or",
    "start": "349860",
    "end": "352710"
  },
  {
    "text": "thousands of containers you will think",
    "start": "352710",
    "end": "354599"
  },
  {
    "text": "about finding the right resources for",
    "start": "354599",
    "end": "358080"
  },
  {
    "text": "example if your container demands 200",
    "start": "358080",
    "end": "360330"
  },
  {
    "text": "megabyte of memory you need to find a",
    "start": "360330",
    "end": "362070"
  },
  {
    "text": "post with that amount of memory let's",
    "start": "362070",
    "end": "364860"
  },
  {
    "text": "say you have a situation where you need",
    "start": "364860",
    "end": "366270"
  },
  {
    "text": "to start 5 containers to aim in the",
    "start": "366270",
    "end": "369180"
  },
  {
    "text": "morning so how can you do that this is",
    "start": "369180",
    "end": "371340"
  },
  {
    "text": "where the challenge comes in and that's",
    "start": "371340",
    "end": "373949"
  },
  {
    "text": "why we built Amazon ECR and Amazon ECS",
    "start": "373949",
    "end": "376680"
  },
  {
    "text": "ECR is yet another container repository",
    "start": "376680",
    "end": "379620"
  },
  {
    "text": "like docker hub the only difference is",
    "start": "379620",
    "end": "382349"
  },
  {
    "text": "that you can easily integrate the",
    "start": "382349",
    "end": "385349"
  },
  {
    "text": "identities with AWS identity and access",
    "start": "385349",
    "end": "388229"
  },
  {
    "text": "management so you can say hey these are",
    "start": "388229",
    "end": "390000"
  },
  {
    "text": "my production repository only production",
    "start": "390000",
    "end": "392039"
  },
  {
    "text": "servers have access to it",
    "start": "392039",
    "end": "393150"
  },
  {
    "text": "and also the ECS is a orchestration",
    "start": "393150",
    "end": "395909"
  },
  {
    "text": "engine so there are a lot of focus",
    "start": "395909",
    "end": "397080"
  },
  {
    "text": "traction engine like kubernetes so ECS",
    "start": "397080",
    "end": "399479"
  },
  {
    "text": "is yet another orchestration energy",
    "start": "399479",
    "end": "401180"
  },
  {
    "text": "so how easiest works is that you have",
    "start": "401180",
    "end": "403280"
  },
  {
    "text": "this concept called a custom so Trust is",
    "start": "403280",
    "end": "405350"
  },
  {
    "text": "an abstraction or some kind of memory",
    "start": "405350",
    "end": "408620"
  },
  {
    "text": "CPU and storage and then you create this",
    "start": "408620",
    "end": "411650"
  },
  {
    "text": "thing called a task a task is something",
    "start": "411650",
    "end": "414620"
  },
  {
    "text": "where you define the set of containers",
    "start": "414620",
    "end": "416690"
  },
  {
    "text": "you want to run so it could be your iOS",
    "start": "416690",
    "end": "418280"
  },
  {
    "text": "web site your web api your SQL Server",
    "start": "418280",
    "end": "421220"
  },
  {
    "text": "SQL so it's now also available in",
    "start": "421220",
    "end": "423260"
  },
  {
    "text": "containers and the set of constraints so",
    "start": "423260",
    "end": "426410"
  },
  {
    "text": "it can be hey this is a super important",
    "start": "426410",
    "end": "428570"
  },
  {
    "text": "finance application I don't want to run",
    "start": "428570",
    "end": "430610"
  },
  {
    "text": "it in the same pass that the HR",
    "start": "430610",
    "end": "432800"
  },
  {
    "text": "application is running so you can define",
    "start": "432800",
    "end": "434480"
  },
  {
    "text": "those constraints so once you define",
    "start": "434480",
    "end": "436670"
  },
  {
    "text": "those constrain you can also define the",
    "start": "436670",
    "end": "438020"
  },
  {
    "text": "resource demand hey for this special",
    "start": "438020",
    "end": "440600"
  },
  {
    "text": "application I need half a CPU and I need",
    "start": "440600",
    "end": "443540"
  },
  {
    "text": "500 megabytes of memory so once you",
    "start": "443540",
    "end": "445820"
  },
  {
    "text": "define this task the next step is to",
    "start": "445820",
    "end": "447710"
  },
  {
    "text": "define something called a service so",
    "start": "447710",
    "end": "449570"
  },
  {
    "text": "service define things like how many",
    "start": "449570",
    "end": "452480"
  },
  {
    "text": "tasks to run let's say I have a web",
    "start": "452480",
    "end": "455960"
  },
  {
    "text": "application that I need to have two",
    "start": "455960",
    "end": "457970"
  },
  {
    "text": "tasks then you can define things like",
    "start": "457970",
    "end": "460280"
  },
  {
    "text": "what's the deployment strategy here do I",
    "start": "460280",
    "end": "462260"
  },
  {
    "text": "want to do blue green deployment canary",
    "start": "462260",
    "end": "464630"
  },
  {
    "text": "deployments some rolling deployments or",
    "start": "464630",
    "end": "466520"
  },
  {
    "text": "everything you can define in the service",
    "start": "466520",
    "end": "467990"
  },
  {
    "text": "and finally the auto scaling strategy",
    "start": "467990",
    "end": "470090"
  },
  {
    "text": "you can say hey once you reach 80% of",
    "start": "470090",
    "end": "472700"
  },
  {
    "text": "the CPU utilization spin up some more",
    "start": "472700",
    "end": "474650"
  },
  {
    "text": "tasks so ECS has the built-in",
    "start": "474650",
    "end": "477500"
  },
  {
    "text": "intelligence once you have this one to",
    "start": "477500",
    "end": "479330"
  },
  {
    "text": "deploy them for example in the case of",
    "start": "479330",
    "end": "481160"
  },
  {
    "text": "bin packing you can say hey first fill",
    "start": "481160",
    "end": "484340"
  },
  {
    "text": "one host with containers and go for the",
    "start": "484340",
    "end": "486620"
  },
  {
    "text": "next host in the case of balanced spread",
    "start": "486620",
    "end": "488750"
  },
  {
    "text": "you can say I have two hosting two",
    "start": "488750",
    "end": "490700"
  },
  {
    "text": "availability zones spread your",
    "start": "490700",
    "end": "492410"
  },
  {
    "text": "containers evenly across them so if one",
    "start": "492410",
    "end": "494480"
  },
  {
    "text": "host fails you still have some running",
    "start": "494480",
    "end": "496880"
  },
  {
    "text": "set of containers you can also define",
    "start": "496880",
    "end": "498860"
  },
  {
    "text": "your custom placement algorithms if you",
    "start": "498860",
    "end": "500630"
  },
  {
    "text": "want that's also available for you so",
    "start": "500630",
    "end": "503240"
  },
  {
    "text": "once you have this set of services you",
    "start": "503240",
    "end": "505880"
  },
  {
    "text": "may have something like HR application",
    "start": "505880",
    "end": "507740"
  },
  {
    "text": "my finance application marketing",
    "start": "507740",
    "end": "509480"
  },
  {
    "text": "application you can easily place them on",
    "start": "509480",
    "end": "511430"
  },
  {
    "text": "the cost and schedule in a manner on",
    "start": "511430",
    "end": "512840"
  },
  {
    "text": "them so what we are going to do now is",
    "start": "512840",
    "end": "516020"
  },
  {
    "start": "514000",
    "end": "866000"
  },
  {
    "text": "again",
    "start": "516020",
    "end": "517219"
  },
  {
    "text": "run deploy them into ecs and then see",
    "start": "517220",
    "end": "520370"
  },
  {
    "text": "how you can easily run these",
    "start": "520370",
    "end": "521690"
  },
  {
    "text": "applications on EEZs so here in my AWS",
    "start": "521690",
    "end": "524990"
  },
  {
    "text": "console for the best interest of time I",
    "start": "524990",
    "end": "527390"
  },
  {
    "text": "have recorded them I have the con solid",
    "start": "527390",
    "end": "529790"
  },
  {
    "text": "created the cluster so you got the",
    "start": "529790",
    "end": "531800"
  },
  {
    "text": "repositories and you create a sample",
    "start": "531800",
    "end": "534170"
  },
  {
    "text": "repository",
    "start": "534170",
    "end": "535070"
  },
  {
    "text": "so let's create a repository this is",
    "start": "535070",
    "end": "536360"
  },
  {
    "text": "nothing more different than creating a",
    "start": "536360",
    "end": "538100"
  },
  {
    "text": "docker hub repository so I give it",
    "start": "538100",
    "end": "539420"
  },
  {
    "text": "something like my batch application",
    "start": "539420",
    "end": "540889"
  },
  {
    "text": "repository and you create the repository",
    "start": "540889",
    "end": "542959"
  },
  {
    "text": "and gives you a set of commands that you",
    "start": "542959",
    "end": "545329"
  },
  {
    "text": "can execute to publish an image so all",
    "start": "545329",
    "end": "548660"
  },
  {
    "text": "what you need to do is to copy this",
    "start": "548660",
    "end": "550040"
  },
  {
    "text": "image repository URL and then go to your",
    "start": "550040",
    "end": "553459"
  },
  {
    "text": "powershell and then punch in some",
    "start": "553459",
    "end": "556759"
  },
  {
    "text": "commands so if I type docking images",
    "start": "556759",
    "end": "558440"
  },
  {
    "text": "behind the scene which your studio or",
    "start": "558440",
    "end": "560149"
  },
  {
    "text": "your continuous integration has built",
    "start": "560149",
    "end": "561769"
  },
  {
    "text": "this thing called my bad chap latest so",
    "start": "561769",
    "end": "564230"
  },
  {
    "text": "that comes as part of msbuild you login",
    "start": "564230",
    "end": "566690"
  },
  {
    "text": "into ECS you see our login is successful",
    "start": "566690",
    "end": "569600"
  },
  {
    "text": "you tag the visual studio built image",
    "start": "569600",
    "end": "571940"
  },
  {
    "text": "with the full URL of VCR and then you",
    "start": "571940",
    "end": "574480"
  },
  {
    "text": "called octopus important thing here is",
    "start": "574480",
    "end": "578060"
  },
  {
    "text": "that although Windows Server Co image is",
    "start": "578060",
    "end": "579980"
  },
  {
    "text": "about 10 gigabyte only the Delta changes",
    "start": "579980",
    "end": "582380"
  },
  {
    "text": "are being published so you don't need to",
    "start": "582380",
    "end": "583790"
  },
  {
    "text": "worry about a large upload time special",
    "start": "583790",
    "end": "586519"
  },
  {
    "text": "if you are doing continuous integration",
    "start": "586519",
    "end": "587480"
  },
  {
    "text": "so I have my image now in ECR the next",
    "start": "587480",
    "end": "591410"
  },
  {
    "text": "obvious step is to go and then create a",
    "start": "591410",
    "end": "593660"
  },
  {
    "text": "task definition that I discuss about so",
    "start": "593660",
    "end": "596060"
  },
  {
    "text": "go to task definition create a task",
    "start": "596060",
    "end": "597649"
  },
  {
    "text": "definition super easy give it a name you",
    "start": "597649",
    "end": "600620"
  },
  {
    "text": "can define a permission if you want",
    "start": "600620",
    "end": "602750"
  },
  {
    "text": "under all here in this case I'm not",
    "start": "602750",
    "end": "604790"
  },
  {
    "text": "going to define them on and then you add",
    "start": "604790",
    "end": "606620"
  },
  {
    "text": "containers",
    "start": "606620",
    "end": "607519"
  },
  {
    "text": "I didn't containers you can add multiple",
    "start": "607519",
    "end": "609170"
  },
  {
    "text": "containers your SQL Server you is sir if",
    "start": "609170",
    "end": "611449"
  },
  {
    "text": "you want so define the container name in",
    "start": "611449",
    "end": "613430"
  },
  {
    "text": "this case I'm going to run my batch",
    "start": "613430",
    "end": "614660"
  },
  {
    "text": "applications the famous exe application",
    "start": "614660",
    "end": "616459"
  },
  {
    "text": "that I created a moment ago you'd image",
    "start": "616459",
    "end": "618410"
  },
  {
    "text": "URL so that can be your private",
    "start": "618410",
    "end": "620000"
  },
  {
    "text": "repository docker hub or in this case",
    "start": "620000",
    "end": "622010"
  },
  {
    "text": "I'm using Amazon ECR URL you how much",
    "start": "622010",
    "end": "625160"
  },
  {
    "text": "memory you want so this will make sure",
    "start": "625160",
    "end": "627440"
  },
  {
    "text": "that easiest find a cluster resource",
    "start": "627440",
    "end": "629630"
  },
  {
    "text": "that can taste is container with that",
    "start": "629630",
    "end": "631190"
  },
  {
    "text": "amount of memory CPU units so one CPU",
    "start": "631190",
    "end": "634130"
  },
  {
    "text": "unit is thousand 24 so if you want to",
    "start": "634130",
    "end": "636440"
  },
  {
    "text": "give a fraction of a CPU let's say",
    "start": "636440",
    "end": "638269"
  },
  {
    "text": "quad of CPU you define something like",
    "start": "638269",
    "end": "640100"
  },
  {
    "text": "two five six so once you do that you can",
    "start": "640100",
    "end": "643699"
  },
  {
    "text": "define things like the command so in",
    "start": "643699",
    "end": "645649"
  },
  {
    "text": "this case I want to run my batch",
    "start": "645649",
    "end": "647060"
  },
  {
    "text": "application so in this case it's going",
    "start": "647060",
    "end": "648560"
  },
  {
    "text": "to be C app my batch app Exe so that's",
    "start": "648560",
    "end": "651889"
  },
  {
    "text": "what I won't run you may run iOS as part",
    "start": "651889",
    "end": "654350"
  },
  {
    "text": "of it so you define the command that you",
    "start": "654350",
    "end": "656660"
  },
  {
    "text": "want to run and then of course you can",
    "start": "656660",
    "end": "658790"
  },
  {
    "text": "define environment variables if you like",
    "start": "658790",
    "end": "660680"
  },
  {
    "text": "you can define your custom DNS servers",
    "start": "660680",
    "end": "663680"
  },
  {
    "text": "you can also define mount points for",
    "start": "663680",
    "end": "665810"
  },
  {
    "text": "example if you want to",
    "start": "665810",
    "end": "667650"
  },
  {
    "text": "found some data volumes which were",
    "start": "667650",
    "end": "670200"
  },
  {
    "text": "containers want maybe you want to have",
    "start": "670200",
    "end": "671850"
  },
  {
    "text": "some configurations shared across",
    "start": "671850",
    "end": "673110"
  },
  {
    "text": "multiple containers you can do that and",
    "start": "673110",
    "end": "674730"
  },
  {
    "text": "then of course you are going to define a",
    "start": "674730",
    "end": "676680"
  },
  {
    "text": "lot location now these containers are",
    "start": "676680",
    "end": "678930"
  },
  {
    "text": "not going to stay for a long time you",
    "start": "678930",
    "end": "680220"
  },
  {
    "text": "run the match application about five",
    "start": "680220",
    "end": "681810"
  },
  {
    "text": "minutes ten minutes and after that they",
    "start": "681810",
    "end": "683910"
  },
  {
    "text": "are going to die so you need to have",
    "start": "683910",
    "end": "685170"
  },
  {
    "text": "some mechanism in place to bring this",
    "start": "685170",
    "end": "687240"
  },
  {
    "text": "container the logs into a centralized",
    "start": "687240",
    "end": "689520"
  },
  {
    "text": "location in the case of AWS it's going",
    "start": "689520",
    "end": "691770"
  },
  {
    "text": "to be the cloud watch so define the",
    "start": "691770",
    "end": "694110"
  },
  {
    "text": "location and click Add if you want you",
    "start": "694110",
    "end": "697380"
  },
  {
    "text": "can add multiple containers in my case I",
    "start": "697380",
    "end": "699030"
  },
  {
    "text": "don't have any so just everything is",
    "start": "699030",
    "end": "701280"
  },
  {
    "text": "done click create once you click create",
    "start": "701280",
    "end": "703770"
  },
  {
    "text": "it's going to create a version of a task",
    "start": "703770",
    "end": "705930"
  },
  {
    "text": "so you can run multiple different",
    "start": "705930",
    "end": "708270"
  },
  {
    "text": "versions of the task on the same cluster",
    "start": "708270",
    "end": "710450"
  },
  {
    "text": "so I have the past definition now",
    "start": "710450",
    "end": "712890"
  },
  {
    "text": "created the next step is to abuse type",
    "start": "712890",
    "end": "714750"
  },
  {
    "text": "is to run it on my custom so I already",
    "start": "714750",
    "end": "717480"
  },
  {
    "text": "have two tasks running on my cluster so",
    "start": "717480",
    "end": "720330"
  },
  {
    "text": "next step is to go the end in schedule",
    "start": "720330",
    "end": "722580"
  },
  {
    "text": "these tasks on my cluster so go to the",
    "start": "722580",
    "end": "724560"
  },
  {
    "text": "task and click run new task so I already",
    "start": "724560",
    "end": "728340"
  },
  {
    "text": "have two tasks running so this may be a",
    "start": "728340",
    "end": "730770"
  },
  {
    "text": "different version of my previous",
    "start": "730770",
    "end": "732630"
  },
  {
    "text": "application run a new task and how many",
    "start": "732630",
    "end": "736260"
  },
  {
    "text": "tasks I won't run I won't run four of",
    "start": "736260",
    "end": "737910"
  },
  {
    "text": "these tasks",
    "start": "737910",
    "end": "738740"
  },
  {
    "text": "what's the placement algorithm so it can",
    "start": "738740",
    "end": "741240"
  },
  {
    "text": "be balanced spread or bin pack in which",
    "start": "741240",
    "end": "743190"
  },
  {
    "text": "we already discussed so in this case I'm",
    "start": "743190",
    "end": "745620"
  },
  {
    "text": "going to select balanced spread and then",
    "start": "745620",
    "end": "747660"
  },
  {
    "text": "run the task so this will kick start the",
    "start": "747660",
    "end": "751410"
  },
  {
    "text": "task so it wants to go there and then",
    "start": "751410",
    "end": "753300"
  },
  {
    "text": "download these images if the content",
    "start": "753300",
    "end": "755130"
  },
  {
    "text": "host does not already have it but here",
    "start": "755130",
    "end": "757380"
  },
  {
    "text": "in this case I has fast forwarded it so",
    "start": "757380",
    "end": "759330"
  },
  {
    "text": "the major Scot quickly downloaded and",
    "start": "759330",
    "end": "761430"
  },
  {
    "text": "after a while they will start so now you",
    "start": "761430",
    "end": "763920"
  },
  {
    "text": "have your batch applications running",
    "start": "763920",
    "end": "765390"
  },
  {
    "text": "behind the scene so there won't output",
    "start": "765390",
    "end": "768960"
  },
  {
    "text": "some content the console output how can",
    "start": "768960",
    "end": "771660"
  },
  {
    "text": "you collect it so if you go to the cloud",
    "start": "771660",
    "end": "773280"
  },
  {
    "text": "watch the console output I am now",
    "start": "773280",
    "end": "774990"
  },
  {
    "text": "capturing so if these containers die for",
    "start": "774990",
    "end": "777330"
  },
  {
    "text": "some reason you still have their logs",
    "start": "777330",
    "end": "779339"
  },
  {
    "text": "output so let's create a service now",
    "start": "779339",
    "end": "781589"
  },
  {
    "text": "creating a service is also super easy",
    "start": "781589",
    "end": "783360"
  },
  {
    "text": "give it a name how many tasks you want",
    "start": "783360",
    "end": "786060"
  },
  {
    "text": "to run in this case I'm going to run",
    "start": "786060",
    "end": "788030"
  },
  {
    "text": "four tasks so the service will make sure",
    "start": "788030",
    "end": "791040"
  },
  {
    "text": "that regardless of what happened to the",
    "start": "791040",
    "end": "792630"
  },
  {
    "text": "content horse that it will always start",
    "start": "792630",
    "end": "794220"
  },
  {
    "text": "these tasks in a different host",
    "start": "794220",
    "end": "795810"
  },
  {
    "text": "I'm not going to load balanced click",
    "start": "795810",
    "end": "797820"
  },
  {
    "text": "Next Next Next and create the service",
    "start": "797820",
    "end": "800910"
  },
  {
    "text": "so what will happen is that your desired",
    "start": "800910",
    "end": "803850"
  },
  {
    "text": "count of tasks is four but the running",
    "start": "803850",
    "end": "805590"
  },
  {
    "text": "count is zero service will understand",
    "start": "805590",
    "end": "807900"
  },
  {
    "text": "that there's a deviation from that",
    "start": "807900",
    "end": "809220"
  },
  {
    "text": "besides state and it's going to spin up",
    "start": "809220",
    "end": "810900"
  },
  {
    "text": "new containers automatically on the",
    "start": "810900",
    "end": "812280"
  },
  {
    "text": "cluster so after while these pending",
    "start": "812280",
    "end": "815310"
  },
  {
    "text": "containers will start at some point keep",
    "start": "815310",
    "end": "817320"
  },
  {
    "text": "refreshing so to have already started",
    "start": "817320",
    "end": "819840"
  },
  {
    "text": "and now you have the four running tasks",
    "start": "819840",
    "end": "821910"
  },
  {
    "text": "now this is a healthy state on the",
    "start": "821910",
    "end": "823440"
  },
  {
    "text": "cluster so you have the four batch apps",
    "start": "823440",
    "end": "825360"
  },
  {
    "text": "or your for web apps running now so to",
    "start": "825360",
    "end": "828120"
  },
  {
    "text": "simulate some kind of a failure let me",
    "start": "828120",
    "end": "830040"
  },
  {
    "text": "go there and then click I'm going to",
    "start": "830040",
    "end": "832830"
  },
  {
    "text": "stop them so this this is just",
    "start": "832830",
    "end": "834240"
  },
  {
    "text": "simulating a failure of containers so",
    "start": "834240",
    "end": "837240"
  },
  {
    "text": "I'm going to stops two containers or the",
    "start": "837240",
    "end": "839460"
  },
  {
    "text": "two tasks so that my desired State",
    "start": "839460",
    "end": "842280"
  },
  {
    "text": "deviate from my running state so if you",
    "start": "842280",
    "end": "845250"
  },
  {
    "text": "refresh now you have only two tasks",
    "start": "845250",
    "end": "846690"
  },
  {
    "text": "running so what will happen is the",
    "start": "846690",
    "end": "848730"
  },
  {
    "text": "service will identify hey there's some",
    "start": "848730",
    "end": "850350"
  },
  {
    "text": "deviation on my desired state and it's",
    "start": "850350",
    "end": "852120"
  },
  {
    "text": "going to spin up some new containers and",
    "start": "852120",
    "end": "853890"
  },
  {
    "text": "bring this cluster into a healthy state",
    "start": "853890",
    "end": "856980"
  },
  {
    "text": "so it's already started to task now they",
    "start": "856980",
    "end": "859560"
  },
  {
    "text": "are all in a healthy state so that's how",
    "start": "859560",
    "end": "861960"
  },
  {
    "text": "you manage this kind of special",
    "start": "861960",
    "end": "864360"
  },
  {
    "text": "deployments on AWS so far what we learn",
    "start": "864360",
    "end": "868140"
  },
  {
    "start": "866000",
    "end": "906000"
  },
  {
    "text": "is about deploying and running these",
    "start": "868140",
    "end": "870330"
  },
  {
    "text": "applications on AWS but you also need to",
    "start": "870330",
    "end": "873510"
  },
  {
    "text": "think about bringing the monolithic",
    "start": "873510",
    "end": "875070"
  },
  {
    "text": "application as it is into a ed abuse or",
    "start": "875070",
    "end": "877470"
  },
  {
    "text": "cloud net you a containerized",
    "start": "877470",
    "end": "878550"
  },
  {
    "text": "environment is not the best approach you",
    "start": "878550",
    "end": "880710"
  },
  {
    "text": "need to do a bit of refactoring and",
    "start": "880710",
    "end": "881910"
  },
  {
    "text": "modernization the reason for that is",
    "start": "881910",
    "end": "884630"
  },
  {
    "text": "your environments are different",
    "start": "884630",
    "end": "887070"
  },
  {
    "text": "sometimes the autoscale your web server",
    "start": "887070",
    "end": "889020"
  },
  {
    "text": "is going to live only for five minutes",
    "start": "889020",
    "end": "890640"
  },
  {
    "text": "your batch application may run for 10",
    "start": "890640",
    "end": "892440"
  },
  {
    "text": "minutes and go into time so you need to",
    "start": "892440",
    "end": "893760"
  },
  {
    "text": "apply certain architectural patterns and",
    "start": "893760",
    "end": "895680"
  },
  {
    "text": "design to make sure that you bring these",
    "start": "895680",
    "end": "898770"
  },
  {
    "text": "logs and to manage them in a proper way",
    "start": "898770",
    "end": "900900"
  },
  {
    "text": "so what are the best practices you can",
    "start": "900900",
    "end": "903120"
  },
  {
    "text": "use to in this kind of an environment",
    "start": "903120",
    "end": "906020"
  },
  {
    "start": "906000",
    "end": "978000"
  },
  {
    "text": "first thing the logging how can you do",
    "start": "906020",
    "end": "908550"
  },
  {
    "text": "the logging the good door/window cement",
    "start": "908550",
    "end": "911310"
  },
  {
    "text": "drugs you write into windows event logs",
    "start": "911310",
    "end": "913230"
  },
  {
    "text": "there's no magic code you use system",
    "start": "913230",
    "end": "915590"
  },
  {
    "text": "diagnostic namespace your application",
    "start": "915590",
    "end": "918300"
  },
  {
    "text": "right into that cloud watch agent can",
    "start": "918300",
    "end": "919980"
  },
  {
    "text": "read them and then pump them into cloud",
    "start": "919980",
    "end": "921390"
  },
  {
    "text": "watch me the number two performance",
    "start": "921390",
    "end": "923610"
  },
  {
    "text": "counters time series data right into a",
    "start": "923610",
    "end": "925560"
  },
  {
    "text": "performance counters called what you",
    "start": "925560",
    "end": "926880"
  },
  {
    "text": "agent reach them send them into kraube",
    "start": "926880",
    "end": "928410"
  },
  {
    "text": "Amazon Cloud watch Method number three",
    "start": "928410",
    "end": "930690"
  },
  {
    "text": "typical logging we allow these libraries",
    "start": "930690",
    "end": "933000"
  },
  {
    "text": "and log log",
    "start": "933000",
    "end": "933930"
  },
  {
    "text": "for that Microsoft Enterprise liability",
    "start": "933930",
    "end": "935339"
  },
  {
    "text": "who use them handsome wow that's great",
    "start": "935339",
    "end": "937770"
  },
  {
    "text": "so what we are going to do is write into",
    "start": "937770",
    "end": "940710"
  },
  {
    "text": "a log file",
    "start": "940710",
    "end": "941160"
  },
  {
    "text": "no no wonder you just Amazon CloudWatch",
    "start": "941160",
    "end": "943350"
  },
  {
    "text": "is going to read them and then pump them",
    "start": "943350",
    "end": "944880"
  },
  {
    "text": "into Amazon CloudWatch method number for",
    "start": "944880",
    "end": "947760"
  },
  {
    "text": "use called watch api or AWS api site for",
    "start": "947760",
    "end": "950640"
  },
  {
    "text": "expose a stock net framework just pump",
    "start": "950640",
    "end": "953279"
  },
  {
    "text": "them into a cloud watch use custom log",
    "start": "953279",
    "end": "955920"
  },
  {
    "text": "providers so if you are using any of",
    "start": "955920",
    "end": "957180"
  },
  {
    "text": "these libraries you can extend them with",
    "start": "957180",
    "end": "959250"
  },
  {
    "text": "your own provider just use our API",
    "start": "959250",
    "end": "961380"
  },
  {
    "text": "create your own provide and right",
    "start": "961380",
    "end": "962820"
  },
  {
    "text": "directly into Amazon Cloud watch if you",
    "start": "962820",
    "end": "965610"
  },
  {
    "text": "are too lazy you can still have you have",
    "start": "965610",
    "end": "967260"
  },
  {
    "text": "nougat packages available for these",
    "start": "967260",
    "end": "968670"
  },
  {
    "text": "libraries and also what we already saw",
    "start": "968670",
    "end": "971640"
  },
  {
    "text": "so things like capturing the console",
    "start": "971640",
    "end": "973680"
  },
  {
    "text": "output you can easily do with AWS",
    "start": "973680",
    "end": "976320"
  },
  {
    "text": "provided interfaces the next challenge",
    "start": "976320",
    "end": "979560"
  },
  {
    "start": "978000",
    "end": "1070000"
  },
  {
    "text": "is keeping data configurations and",
    "start": "979560",
    "end": "981870"
  },
  {
    "text": "sequence so let's say we have a Content",
    "start": "981870",
    "end": "985290"
  },
  {
    "text": "host so how I'm going to share the data",
    "start": "985290",
    "end": "986730"
  },
  {
    "text": "across multiple containers so I have",
    "start": "986730",
    "end": "988589"
  },
  {
    "text": "running containers on the content host",
    "start": "988589",
    "end": "989970"
  },
  {
    "text": "you expose share holding the container",
    "start": "989970",
    "end": "992790"
  },
  {
    "text": "host that you can share across multiple",
    "start": "992790",
    "end": "994440"
  },
  {
    "text": "containers same for the web config app",
    "start": "994440",
    "end": "997560"
  },
  {
    "text": "config your XML file your JSON file you",
    "start": "997560",
    "end": "999839"
  },
  {
    "text": "ulema ml file all the configurations can",
    "start": "999839",
    "end": "1001700"
  },
  {
    "text": "be shared across multiple containers",
    "start": "1001700",
    "end": "1003020"
  },
  {
    "text": "using this mounted wall volumes good",
    "start": "1003020",
    "end": "1006470"
  },
  {
    "text": "bowel environment variables are still",
    "start": "1006470",
    "end": "1007910"
  },
  {
    "text": "available you can keep your connection",
    "start": "1007910",
    "end": "1009290"
  },
  {
    "text": "string your passwords on that and access",
    "start": "1009290",
    "end": "1011750"
  },
  {
    "text": "to it if you want with the environmental",
    "start": "1011750",
    "end": "1014630"
  },
  {
    "text": "these libraries now keeping your",
    "start": "1014630",
    "end": "1017209"
  },
  {
    "text": "password is not the best way as an",
    "start": "1017209",
    "end": "1019040"
  },
  {
    "text": "environment variable so what can you do",
    "start": "1019040",
    "end": "1020630"
  },
  {
    "text": "that's where the simple system manager",
    "start": "1020630",
    "end": "1022459"
  },
  {
    "text": "comes in so you can define scopes in",
    "start": "1022459",
    "end": "1025010"
  },
  {
    "text": "that so example this is my production",
    "start": "1025010",
    "end": "1027110"
  },
  {
    "text": "database password and once you define",
    "start": "1027110",
    "end": "1029540"
  },
  {
    "text": "these secrets it will be encrypted and",
    "start": "1029540",
    "end": "1031188"
  },
  {
    "text": "kept the next step is of course to",
    "start": "1031189",
    "end": "1033530"
  },
  {
    "text": "access them so how can you access it so",
    "start": "1033530",
    "end": "1035780"
  },
  {
    "text": "you have this container on the task that",
    "start": "1035780",
    "end": "1037880"
  },
  {
    "text": "you want access them you define a policy",
    "start": "1037880",
    "end": "1039920"
  },
  {
    "text": "in the policy you say hey this is the",
    "start": "1039920",
    "end": "1042350"
  },
  {
    "text": "scope production database password and",
    "start": "1042350",
    "end": "1044589"
  },
  {
    "text": "anybody who has this permission can",
    "start": "1044589",
    "end": "1046970"
  },
  {
    "text": "access it and you attach this one into",
    "start": "1046970",
    "end": "1049130"
  },
  {
    "text": "that task and the task minute is running",
    "start": "1049130",
    "end": "1051800"
  },
  {
    "text": "it will assume that permission so you",
    "start": "1051800",
    "end": "1053840"
  },
  {
    "text": "can easily access it so you can access",
    "start": "1053840",
    "end": "1056210"
  },
  {
    "text": "it with PowerShell if you want as long",
    "start": "1056210",
    "end": "1058190"
  },
  {
    "text": "as it's running inside the container as",
    "start": "1058190",
    "end": "1059840"
  },
  {
    "text": "long as this course code segment is",
    "start": "1059840",
    "end": "1061820"
  },
  {
    "text": "running inside the container it will",
    "start": "1061820",
    "end": "1063110"
  },
  {
    "text": "have that permission automatically so",
    "start": "1063110",
    "end": "1064850"
  },
  {
    "text": "you don't need to do any magic to access",
    "start": "1064850",
    "end": "1066380"
  },
  {
    "text": "it if you don't have access",
    "start": "1066380",
    "end": "1068179"
  },
  {
    "text": "- an exception like this scaling and",
    "start": "1068179",
    "end": "1071090"
  },
  {
    "start": "1070000",
    "end": "1174000"
  },
  {
    "text": "service discoveries the next thing how",
    "start": "1071090",
    "end": "1072830"
  },
  {
    "text": "can you do that so I have these contours",
    "start": "1072830",
    "end": "1075710"
  },
  {
    "text": "of API and fabrikam API that I need to",
    "start": "1075710",
    "end": "1077899"
  },
  {
    "text": "expose you can do it two ways",
    "start": "1077899",
    "end": "1079610"
  },
  {
    "text": "- application load balancer or of 53",
    "start": "1079610",
    "end": "1081619"
  },
  {
    "text": "which is our DNS server so when the",
    "start": "1081619",
    "end": "1083629"
  },
  {
    "text": "container starts they can automatically",
    "start": "1083629",
    "end": "1085549"
  },
  {
    "text": "register against these services same",
    "start": "1085549",
    "end": "1088879"
  },
  {
    "text": "when the containers dies so in the",
    "start": "1088879",
    "end": "1090649"
  },
  {
    "text": "container dies it automatically D",
    "start": "1090649",
    "end": "1092389"
  },
  {
    "text": "register you don't need to write extra",
    "start": "1092389",
    "end": "1094309"
  },
  {
    "text": "code to do that so once it happens you",
    "start": "1094309",
    "end": "1097249"
  },
  {
    "text": "have your service working regardless of",
    "start": "1097249",
    "end": "1099499"
  },
  {
    "text": "how many contents are running behind the",
    "start": "1099499",
    "end": "1100909"
  },
  {
    "text": "scene to give you an example let me show",
    "start": "1100909",
    "end": "1104240"
  },
  {
    "text": "this is a demo again which I'll record",
    "start": "1104240",
    "end": "1106519"
  },
  {
    "text": "it takes about five six minutes to do",
    "start": "1106519",
    "end": "1108289"
  },
  {
    "text": "this so I pre-recorded it and then fast",
    "start": "1108289",
    "end": "1110749"
  },
  {
    "text": "forwarded in so I have two containers",
    "start": "1110749",
    "end": "1112340"
  },
  {
    "text": "registered against my DNS server out of",
    "start": "1112340",
    "end": "1114649"
  },
  {
    "text": "53 so what I'm going to do is to auto",
    "start": "1114649",
    "end": "1116899"
  },
  {
    "text": "scale this so instead of running two",
    "start": "1116899",
    "end": "1119840"
  },
  {
    "text": "containers I'm going to change the",
    "start": "1119840",
    "end": "1121639"
  },
  {
    "text": "service to run six containers so I type",
    "start": "1121639",
    "end": "1124789"
  },
  {
    "text": "six and then update the service next",
    "start": "1124789",
    "end": "1126980"
  },
  {
    "text": "let's next so this will the service",
    "start": "1126980",
    "end": "1129379"
  },
  {
    "text": "field is going to start six containers",
    "start": "1129379",
    "end": "1131029"
  },
  {
    "text": "and AWS automatically registers these",
    "start": "1131029",
    "end": "1134029"
  },
  {
    "text": "containers against your DNS server so",
    "start": "1134029",
    "end": "1136759"
  },
  {
    "text": "you can do the normal DNS lookup if you",
    "start": "1136759",
    "end": "1138379"
  },
  {
    "text": "want to find the IP addresses of these",
    "start": "1138379",
    "end": "1140119"
  },
  {
    "text": "containers especially if you are running",
    "start": "1140119",
    "end": "1141679"
  },
  {
    "text": "other than HTTP protocols on these",
    "start": "1141679",
    "end": "1144139"
  },
  {
    "text": "containers you may need to like have the",
    "start": "1144139",
    "end": "1145879"
  },
  {
    "text": "IP address access same for the load",
    "start": "1145879",
    "end": "1148610"
  },
  {
    "text": "balancers so if you go into your load",
    "start": "1148610",
    "end": "1150980"
  },
  {
    "text": "balancer you can find that the the",
    "start": "1150980",
    "end": "1152389"
  },
  {
    "text": "containers are automatically registered",
    "start": "1152389",
    "end": "1153619"
  },
  {
    "text": "here there are six healthy container",
    "start": "1153619",
    "end": "1156679"
  },
  {
    "text": "instances that are running behind the",
    "start": "1156679",
    "end": "1158210"
  },
  {
    "text": "scene so if you be commissioned or if",
    "start": "1158210",
    "end": "1161539"
  },
  {
    "text": "you change this one from six to two for",
    "start": "1161539",
    "end": "1164299"
  },
  {
    "text": "example and the next step what will",
    "start": "1164299",
    "end": "1167090"
  },
  {
    "text": "happen is the service will automatically",
    "start": "1167090",
    "end": "1168619"
  },
  {
    "text": "update and you only have like a few",
    "start": "1168619",
    "end": "1170720"
  },
  {
    "text": "healthy is there two healthy containers",
    "start": "1170720",
    "end": "1172940"
  },
  {
    "text": "and few draining one so so far so good",
    "start": "1172940",
    "end": "1177019"
  },
  {
    "start": "1174000",
    "end": "1290000"
  },
  {
    "text": "everything is working fine what will",
    "start": "1177019",
    "end": "1179090"
  },
  {
    "text": "happen if something fails so you are",
    "start": "1179090",
    "end": "1180889"
  },
  {
    "text": "going for this micro service design you",
    "start": "1180889",
    "end": "1182720"
  },
  {
    "text": "are going to these wonderful Web API",
    "start": "1182720",
    "end": "1186259"
  },
  {
    "text": "endpoints or este pais what if the",
    "start": "1186259",
    "end": "1188899"
  },
  {
    "text": "service happens when you are doing that",
    "start": "1188899",
    "end": "1190159"
  },
  {
    "text": "million-dollar transaction so there are",
    "start": "1190159",
    "end": "1192049"
  },
  {
    "text": "different ways you can handle it the",
    "start": "1192049",
    "end": "1193940"
  },
  {
    "text": "first approach is to use exponential",
    "start": "1193940",
    "end": "1196460"
  },
  {
    "text": "back-off",
    "start": "1196460",
    "end": "1196940"
  },
  {
    "text": "let's say you invoke your Web API",
    "start": "1196940",
    "end": "1199190"
  },
  {
    "text": "endpoint and then it fails",
    "start": "1199190",
    "end": "1202050"
  },
  {
    "text": "you can keep trying but it doesn't make",
    "start": "1202050",
    "end": "1204630"
  },
  {
    "text": "sense to keep adding load to a service",
    "start": "1204630",
    "end": "1206610"
  },
  {
    "text": "that is already failing so the best",
    "start": "1206610",
    "end": "1208470"
  },
  {
    "text": "approach in that case is you wait for",
    "start": "1208470",
    "end": "1210060"
  },
  {
    "text": "two seconds and then try it again",
    "start": "1210060",
    "end": "1211200"
  },
  {
    "text": "doesn't work wait for four seconds then",
    "start": "1211200",
    "end": "1213540"
  },
  {
    "text": "try it again",
    "start": "1213540",
    "end": "1214110"
  },
  {
    "text": "doesn't work wait for another 16 seconds",
    "start": "1214110",
    "end": "1216270"
  },
  {
    "text": "and try it so you can do that",
    "start": "1216270",
    "end": "1217200"
  },
  {
    "text": "exponential backup and then again try uh",
    "start": "1217200",
    "end": "1219720"
  },
  {
    "text": "try it again if you keep failing it",
    "start": "1219720",
    "end": "1222450"
  },
  {
    "text": "doesn't make sense to keep wait and then",
    "start": "1222450",
    "end": "1225480"
  },
  {
    "text": "fail so let's fail fast and that's where",
    "start": "1225480",
    "end": "1227790"
  },
  {
    "text": "the circuit breakers comes into picture",
    "start": "1227790",
    "end": "1228990"
  },
  {
    "text": "so I apply something called a circuit",
    "start": "1228990",
    "end": "1230820"
  },
  {
    "text": "breaker we are if you fail let's say ten",
    "start": "1230820",
    "end": "1232350"
  },
  {
    "text": "times okay fail fast throw an exception",
    "start": "1232350",
    "end": "1234860"
  },
  {
    "text": "even let's say you keep failing they say",
    "start": "1234860",
    "end": "1237930"
  },
  {
    "text": "there's a big problem and there's a",
    "start": "1237930",
    "end": "1239670"
  },
  {
    "text": "disaster it keeps failing forever let's",
    "start": "1239670",
    "end": "1242340"
  },
  {
    "text": "say you can direct that traffic into a",
    "start": "1242340",
    "end": "1244380"
  },
  {
    "text": "static webpage so that's where the",
    "start": "1244380",
    "end": "1245850"
  },
  {
    "text": "fallback plan comes into picture you can",
    "start": "1245850",
    "end": "1248130"
  },
  {
    "text": "code this with your Visual Studio C",
    "start": "1248130",
    "end": "1249660"
  },
  {
    "text": "sharp you can write all the thread",
    "start": "1249660",
    "end": "1251580"
  },
  {
    "text": "synchronization to do that but for",
    "start": "1251580",
    "end": "1253410"
  },
  {
    "text": "luckily for us you have a library called",
    "start": "1253410",
    "end": "1255330"
  },
  {
    "text": "dotnet poly library so this dotnet poly",
    "start": "1255330",
    "end": "1257970"
  },
  {
    "text": "library is not the same poly library",
    "start": "1257970",
    "end": "1259950"
  },
  {
    "text": "that err obvious Poly's",
    "start": "1259950",
    "end": "1261660"
  },
  {
    "text": "which is for the speech synthesis so",
    "start": "1261660",
    "end": "1263850"
  },
  {
    "text": "this is our open source project great",
    "start": "1263850",
    "end": "1265260"
  },
  {
    "text": "library where you can define things like",
    "start": "1265260",
    "end": "1267600"
  },
  {
    "text": "the retry policy you can say hey if this",
    "start": "1267600",
    "end": "1270390"
  },
  {
    "text": "fails four to two times just wait apply",
    "start": "1270390",
    "end": "1273750"
  },
  {
    "text": "this recycle this retry policy and then",
    "start": "1273750",
    "end": "1276840"
  },
  {
    "text": "try it again",
    "start": "1276840",
    "end": "1277380"
  },
  {
    "text": "you can define the circuit breaker",
    "start": "1277380",
    "end": "1279030"
  },
  {
    "text": "policy so it's a very fluent API you can",
    "start": "1279030",
    "end": "1281370"
  },
  {
    "text": "decorate you to define it and it's a",
    "start": "1281370",
    "end": "1283500"
  },
  {
    "text": "very small number of codes you can",
    "start": "1283500",
    "end": "1285510"
  },
  {
    "text": "easily define these microservices",
    "start": "1285510",
    "end": "1287010"
  },
  {
    "text": "or fail back policies within this",
    "start": "1287010",
    "end": "1288690"
  },
  {
    "text": "library go and try it so the other",
    "start": "1288690",
    "end": "1291840"
  },
  {
    "start": "1290000",
    "end": "1408000"
  },
  {
    "text": "approach is the challenge is doing",
    "start": "1291840",
    "end": "1293820"
  },
  {
    "text": "continuous deliveries so we discuss",
    "start": "1293820",
    "end": "1295650"
  },
  {
    "text": "about some best practices the other",
    "start": "1295650",
    "end": "1297450"
  },
  {
    "text": "thing is of course we want to do a quick",
    "start": "1297450",
    "end": "1299340"
  },
  {
    "text": "deployments so how can we do that so",
    "start": "1299340",
    "end": "1301590"
  },
  {
    "text": "let's say we have a very simple asp.net",
    "start": "1301590",
    "end": "1303570"
  },
  {
    "text": "web application running the version 1 of",
    "start": "1303570",
    "end": "1306390"
  },
  {
    "text": "the application so obviously as",
    "start": "1306390",
    "end": "1308190"
  },
  {
    "text": "developers we know things change so you",
    "start": "1308190",
    "end": "1311100"
  },
  {
    "text": "have the developer and the microsoft",
    "start": "1311100",
    "end": "1313230"
  },
  {
    "text": "visual studio they are running so",
    "start": "1313230",
    "end": "1314490"
  },
  {
    "text": "they're going to publish the new version",
    "start": "1314490",
    "end": "1315690"
  },
  {
    "text": "of the software so famous tools they",
    "start": "1315690",
    "end": "1319470"
  },
  {
    "text": "push this one into a big bucket or",
    "start": "1319470",
    "end": "1321720"
  },
  {
    "text": "Microsoft team foundation server I'm a",
    "start": "1321720",
    "end": "1323190"
  },
  {
    "text": "great fan of that tool on so once you",
    "start": "1323190",
    "end": "1325980"
  },
  {
    "text": "push that one the continuous integration",
    "start": "1325980",
    "end": "1327900"
  },
  {
    "text": "system is going to pick that changes",
    "start": "1327900",
    "end": "1329640"
  },
  {
    "text": "it's then going to call a built agent so",
    "start": "1329640",
    "end": "1332610"
  },
  {
    "text": "all these built agents build the systems",
    "start": "1332610",
    "end": "1335250"
  },
  {
    "text": "like Jiang",
    "start": "1335250",
    "end": "1335910"
  },
  {
    "text": "Kings team City Microsoft TFS bsts they",
    "start": "1335910",
    "end": "1339300"
  },
  {
    "text": "have this concept called built agent",
    "start": "1339300",
    "end": "1341010"
  },
  {
    "text": "that you can run on ever Macintosh on",
    "start": "1341010",
    "end": "1342660"
  },
  {
    "text": "Linux on Windows servers so you run this",
    "start": "1342660",
    "end": "1345390"
  },
  {
    "text": "a built agent which will have",
    "start": "1345390",
    "end": "1347130"
  },
  {
    "text": "permissions to publish the image to",
    "start": "1347130",
    "end": "1349320"
  },
  {
    "text": "Amazon ECR so we attach that permission",
    "start": "1349320",
    "end": "1351330"
  },
  {
    "text": "into that and the built agent is running",
    "start": "1351330",
    "end": "1353610"
  },
  {
    "text": "a mess build create the image and then",
    "start": "1353610",
    "end": "1355290"
  },
  {
    "text": "publish into Emma's an ECR and once it",
    "start": "1355290",
    "end": "1357300"
  },
  {
    "text": "publish its going to call Amazon ECS",
    "start": "1357300",
    "end": "1359580"
  },
  {
    "text": "let's say using PowerShell and then say",
    "start": "1359580",
    "end": "1361470"
  },
  {
    "text": "hey Amazon ECS I have a new image go",
    "start": "1361470",
    "end": "1364020"
  },
  {
    "text": "there and and render this image or go",
    "start": "1364020",
    "end": "1365700"
  },
  {
    "text": "there and then orchestrate this image in",
    "start": "1365700",
    "end": "1368250"
  },
  {
    "text": "Amazon ECS so it's going to go there and",
    "start": "1368250",
    "end": "1370530"
  },
  {
    "text": "then render this new version of the",
    "start": "1370530",
    "end": "1372210"
  },
  {
    "text": "image on Amazon ECS so after that",
    "start": "1372210",
    "end": "1375410"
  },
  {
    "text": "orchestration Lord balance is going to",
    "start": "1375410",
    "end": "1378300"
  },
  {
    "text": "go through some health checks once the",
    "start": "1378300",
    "end": "1379950"
  },
  {
    "text": "health check passes it's going to direct",
    "start": "1379950",
    "end": "1381870"
  },
  {
    "text": "the traffic into that the new set of",
    "start": "1381870",
    "end": "1384690"
  },
  {
    "text": "containers so that's how the continuous",
    "start": "1384690",
    "end": "1386880"
  },
  {
    "text": "delivery pipeline works it doesn't",
    "start": "1386880",
    "end": "1389490"
  },
  {
    "text": "matter what kind of operating system",
    "start": "1389490",
    "end": "1391110"
  },
  {
    "text": "what kind of a team build system that",
    "start": "1391110",
    "end": "1393540"
  },
  {
    "text": "you use as long as you have PowerShell",
    "start": "1393540",
    "end": "1395250"
  },
  {
    "text": "command line or dotnet framework support",
    "start": "1395250",
    "end": "1397020"
  },
  {
    "text": "you can easily integrate with existing",
    "start": "1397020",
    "end": "1398400"
  },
  {
    "text": "systems so let's go for a demo and then",
    "start": "1398400",
    "end": "1400920"
  },
  {
    "text": "see how this has been done as again this",
    "start": "1400920",
    "end": "1403950"
  },
  {
    "text": "the whole process of cluster refresh",
    "start": "1403950",
    "end": "1405960"
  },
  {
    "text": "takes time so I have recorded it and",
    "start": "1405960",
    "end": "1407370"
  },
  {
    "text": "then create some presentation so here I",
    "start": "1407370",
    "end": "1411390"
  },
  {
    "start": "1408000",
    "end": "1653000"
  },
  {
    "text": "have my asp.net web application it's",
    "start": "1411390",
    "end": "1413250"
  },
  {
    "text": "keeping track of the name of the owner",
    "start": "1413250",
    "end": "1414750"
  },
  {
    "text": "the name of the pit and how many steps",
    "start": "1414750",
    "end": "1417060"
  },
  {
    "text": "the pet took so it's like my cat in the",
    "start": "1417060",
    "end": "1419490"
  },
  {
    "text": "house they are not walking a lot so",
    "start": "1419490",
    "end": "1421590"
  },
  {
    "text": "that's why you have a few number of",
    "start": "1421590",
    "end": "1422760"
  },
  {
    "text": "steps and if you go into the info page",
    "start": "1422760",
    "end": "1426660"
  },
  {
    "text": "you will find the two containers back in",
    "start": "1426660",
    "end": "1430200"
  },
  {
    "text": "these so there's a lot balancer and it's",
    "start": "1430200",
    "end": "1432420"
  },
  {
    "text": "doing round-robin load balancing between",
    "start": "1432420",
    "end": "1434040"
  },
  {
    "text": "these two containers so the idea that",
    "start": "1434040",
    "end": "1435900"
  },
  {
    "text": "you see here are actually the container",
    "start": "1435900",
    "end": "1438480"
  },
  {
    "text": "IDs and it's running application version",
    "start": "1438480",
    "end": "1440550"
  },
  {
    "text": "number one so obviously like the",
    "start": "1440550",
    "end": "1443010"
  },
  {
    "text": "requirements changes so I'm going into",
    "start": "1443010",
    "end": "1444930"
  },
  {
    "text": "my build system this is how how define",
    "start": "1444930",
    "end": "1446820"
  },
  {
    "text": "it so this is Microsoft Team Foundation",
    "start": "1446820",
    "end": "1448620"
  },
  {
    "text": "server",
    "start": "1448620",
    "end": "1449250"
  },
  {
    "text": "I love the tool so if you have if you're",
    "start": "1449250",
    "end": "1451140"
  },
  {
    "text": "already using this kind of system you",
    "start": "1451140",
    "end": "1452400"
  },
  {
    "text": "can configure your system like this so",
    "start": "1452400",
    "end": "1454620"
  },
  {
    "text": "I'll define the build steps the first",
    "start": "1454620",
    "end": "1456900"
  },
  {
    "text": "step of course is to get all the content",
    "start": "1456900",
    "end": "1458820"
  },
  {
    "text": "from your repository it could be jit hub",
    "start": "1458820",
    "end": "1461250"
  },
  {
    "text": "I'm getting mine look at packages and",
    "start": "1461250",
    "end": "1463470"
  },
  {
    "text": "then I'm going to add another step that",
    "start": "1463470",
    "end": "1465660"
  },
  {
    "text": "will execute msbuild tasks and it's",
    "start": "1465660",
    "end": "1468360"
  },
  {
    "text": "going to occur on your",
    "start": "1468360",
    "end": "1469710"
  },
  {
    "text": "you need tears build it create the image",
    "start": "1469710",
    "end": "1471630"
  },
  {
    "text": "so once it built the image it's going to",
    "start": "1471630",
    "end": "1473760"
  },
  {
    "text": "be inside that built agent Mulder agent",
    "start": "1473760",
    "end": "1476220"
  },
  {
    "text": "has publication rights so it's going to",
    "start": "1476220",
    "end": "1478350"
  },
  {
    "text": "invoke this fear you I'm invoking a",
    "start": "1478350",
    "end": "1480690"
  },
  {
    "text": "PowerShell command to publish this image",
    "start": "1480690",
    "end": "1483000"
  },
  {
    "text": "all AWS API so expose in PowerShell so",
    "start": "1483000",
    "end": "1485730"
  },
  {
    "text": "you can easily integrate with your",
    "start": "1485730",
    "end": "1486779"
  },
  {
    "text": "existing build systems and then I'm",
    "start": "1486779",
    "end": "1489570"
  },
  {
    "text": "going to execute the command line so all",
    "start": "1489570",
    "end": "1491039"
  },
  {
    "text": "the AWS commands are executed in command",
    "start": "1491039",
    "end": "1492929"
  },
  {
    "text": "line nose so if you are not a PowerShell",
    "start": "1492929",
    "end": "1494429"
  },
  {
    "text": "fan you can still use command line so",
    "start": "1494429",
    "end": "1496710"
  },
  {
    "text": "I'm going to tell you CSA is yes go",
    "start": "1496710",
    "end": "1498299"
  },
  {
    "text": "there now render this new image on",
    "start": "1498299",
    "end": "1499860"
  },
  {
    "text": "Amazon easy s so what I'm going to do",
    "start": "1499860",
    "end": "1502919"
  },
  {
    "text": "now is to make some modification into",
    "start": "1502919",
    "end": "1504690"
  },
  {
    "text": "this web application so in this instead",
    "start": "1504690",
    "end": "1507000"
  },
  {
    "text": "of saying application version one I'm",
    "start": "1507000",
    "end": "1508590"
  },
  {
    "text": "going to say application version two",
    "start": "1508590",
    "end": "1511169"
  },
  {
    "text": "added a new feature so this is just a",
    "start": "1511169",
    "end": "1512909"
  },
  {
    "text": "simulation of a developer making some",
    "start": "1512909",
    "end": "1514679"
  },
  {
    "text": "changes and then trying to publish this",
    "start": "1514679",
    "end": "1516600"
  },
  {
    "text": "software so I make this change obvious",
    "start": "1516600",
    "end": "1519270"
  },
  {
    "text": "the next step is that you are going to",
    "start": "1519270",
    "end": "1520320"
  },
  {
    "text": "commit it so just commit it add some",
    "start": "1520320",
    "end": "1523980"
  },
  {
    "text": "comments like normally I don't know how",
    "start": "1523980",
    "end": "1526470"
  },
  {
    "text": "many developers sometimes and commence",
    "start": "1526470",
    "end": "1528000"
  },
  {
    "text": "when commit them so I push them so what",
    "start": "1528000",
    "end": "1532890"
  },
  {
    "text": "will happen is that it's going to go",
    "start": "1532890",
    "end": "1534990"
  },
  {
    "text": "into TFS it's going to run the build so",
    "start": "1534990",
    "end": "1537870"
  },
  {
    "text": "behind the scene it starts the build",
    "start": "1537870",
    "end": "1539100"
  },
  {
    "text": "process now I'm running the build",
    "start": "1539100",
    "end": "1540929"
  },
  {
    "text": "process you can find that my commands",
    "start": "1540929",
    "end": "1543600"
  },
  {
    "text": "are being executed I've got the nougat",
    "start": "1543600",
    "end": "1545789"
  },
  {
    "text": "package is running msbuild as part of",
    "start": "1545789",
    "end": "1548370"
  },
  {
    "text": "this msbuild if you have a very complex",
    "start": "1548370",
    "end": "1550049"
  },
  {
    "text": "build process you can still have cache",
    "start": "1550049",
    "end": "1551750"
  },
  {
    "text": "dhaka layers so you don't need to wait",
    "start": "1551750",
    "end": "1554549"
  },
  {
    "text": "for a long time specially when multiple",
    "start": "1554549",
    "end": "1556260"
  },
  {
    "text": "developers are coming to the same source",
    "start": "1556260",
    "end": "1557730"
  },
  {
    "text": "control system you will have like",
    "start": "1557730",
    "end": "1558899"
  },
  {
    "text": "thousands or hundreds of builds",
    "start": "1558899",
    "end": "1561029"
  },
  {
    "text": "happening and so once this image got",
    "start": "1561029",
    "end": "1563730"
  },
  {
    "text": "built it can sometimes use cache layers",
    "start": "1563730",
    "end": "1566039"
  },
  {
    "text": "so here you can find some cache layers",
    "start": "1566039",
    "end": "1567750"
  },
  {
    "text": "are already been used and so once you",
    "start": "1567750",
    "end": "1570390"
  },
  {
    "text": "have this image built it's going to tag",
    "start": "1570390",
    "end": "1573659"
  },
  {
    "text": "that image with the ECR URL and then",
    "start": "1573659",
    "end": "1575850"
  },
  {
    "text": "publishing so the publication is done if",
    "start": "1575850",
    "end": "1578010"
  },
  {
    "text": "you go into ECS what you'll find is that",
    "start": "1578010",
    "end": "1579779"
  },
  {
    "text": "you have the all deployment and the new",
    "start": "1579779",
    "end": "1582090"
  },
  {
    "text": "deployment so the new deployment of",
    "start": "1582090",
    "end": "1584159"
  },
  {
    "text": "course it you need to first start the",
    "start": "1584159",
    "end": "1585720"
  },
  {
    "text": "images in the cluster before you",
    "start": "1585720",
    "end": "1587220"
  },
  {
    "text": "directly in the traffic so at some point",
    "start": "1587220",
    "end": "1589200"
  },
  {
    "text": "in time still if you go to the web",
    "start": "1589200",
    "end": "1593070"
  },
  {
    "text": "application what the people will see is",
    "start": "1593070",
    "end": "1594690"
  },
  {
    "text": "the application version one number one",
    "start": "1594690",
    "end": "1596039"
  },
  {
    "text": "because this new deployment haven't",
    "start": "1596039",
    "end": "1597990"
  },
  {
    "text": "passed through some health checks so",
    "start": "1597990",
    "end": "1599669"
  },
  {
    "text": "this is the experience for a user so",
    "start": "1599669",
    "end": "1602250"
  },
  {
    "text": "they get the minimum down",
    "start": "1602250",
    "end": "1603330"
  },
  {
    "text": "time when you are running this kind of a",
    "start": "1603330",
    "end": "1604740"
  },
  {
    "text": "deployment behind the scene still",
    "start": "1604740",
    "end": "1606270"
  },
  {
    "text": "running version number one so far so",
    "start": "1606270",
    "end": "1607710"
  },
  {
    "text": "good if you go into your load balancer",
    "start": "1607710",
    "end": "1610710"
  },
  {
    "text": "what you'll find is that there are two",
    "start": "1610710",
    "end": "1612360"
  },
  {
    "text": "containers the new containers in initial",
    "start": "1612360",
    "end": "1614520"
  },
  {
    "text": "state and all containers one is draining",
    "start": "1614520",
    "end": "1616980"
  },
  {
    "text": "one is healthy so at some point in time",
    "start": "1616980",
    "end": "1619320"
  },
  {
    "text": "this new container is going to be",
    "start": "1619320",
    "end": "1621450"
  },
  {
    "text": "healthy and the load balance is going to",
    "start": "1621450",
    "end": "1623550"
  },
  {
    "text": "direct traffic into that so I can see",
    "start": "1623550",
    "end": "1626010"
  },
  {
    "text": "that one container is healthy so if you",
    "start": "1626010",
    "end": "1628290"
  },
  {
    "text": "go and refresh your page you should have",
    "start": "1628290",
    "end": "1630270"
  },
  {
    "text": "this web application refresh your",
    "start": "1630270",
    "end": "1632250"
  },
  {
    "text": "application version two I have phosphor",
    "start": "1632250",
    "end": "1634230"
  },
  {
    "text": "already it takes some time for the IRS",
    "start": "1634230",
    "end": "1635760"
  },
  {
    "text": "to get lured the DLS the normal refresh",
    "start": "1635760",
    "end": "1637740"
  },
  {
    "text": "cycle is still there and you now have",
    "start": "1637740",
    "end": "1640200"
  },
  {
    "text": "the version two of the application so",
    "start": "1640200",
    "end": "1643140"
  },
  {
    "text": "that's how easily you can integrate your",
    "start": "1643140",
    "end": "1645000"
  },
  {
    "text": "existing build system can be TFS Jenkins",
    "start": "1645000",
    "end": "1647910"
  },
  {
    "text": "or any other build system that you have",
    "start": "1647910",
    "end": "1649380"
  },
  {
    "text": "with AWS tools as long as you have",
    "start": "1649380",
    "end": "1651390"
  },
  {
    "text": "PowerShell you can do wonders so what do",
    "start": "1651390",
    "end": "1654810"
  },
  {
    "start": "1653000",
    "end": "1720000"
  },
  {
    "text": "we learn today we learn about Windows",
    "start": "1654810",
    "end": "1657030"
  },
  {
    "text": "containers you learn how although the",
    "start": "1657030",
    "end": "1659640"
  },
  {
    "text": "windows image size are big you can",
    "start": "1659640",
    "end": "1661440"
  },
  {
    "text": "easily containerize your dotnet",
    "start": "1661440",
    "end": "1662940"
  },
  {
    "text": "application and run them at scale",
    "start": "1662940",
    "end": "1664530"
  },
  {
    "text": "there are production-ready you can run",
    "start": "1664530",
    "end": "1666420"
  },
  {
    "text": "them on AWS platforms like e CS you",
    "start": "1666420",
    "end": "1669990"
  },
  {
    "text": "learn about Amazon SES and ECR why they",
    "start": "1669990",
    "end": "1673350"
  },
  {
    "text": "are important how they help you talk",
    "start": "1673350",
    "end": "1675570"
  },
  {
    "text": "straight containers on a large cluster",
    "start": "1675570",
    "end": "1677220"
  },
  {
    "text": "you also learn like how you can",
    "start": "1677220",
    "end": "1679050"
  },
  {
    "text": "integrate these permissions with easier",
    "start": "1679050",
    "end": "1681120"
  },
  {
    "text": "so that you can easily define hey these",
    "start": "1681120",
    "end": "1683850"
  },
  {
    "text": "are production images they should only",
    "start": "1683850",
    "end": "1685470"
  },
  {
    "text": "run on production environments we learn",
    "start": "1685470",
    "end": "1688860"
  },
  {
    "text": "about best practices like login",
    "start": "1688860",
    "end": "1692120"
  },
  {
    "text": "exponential back-off",
    "start": "1692120",
    "end": "1693570"
  },
  {
    "text": "so these are the things that you need to",
    "start": "1693570",
    "end": "1695550"
  },
  {
    "text": "apply when you are trying to modify your",
    "start": "1695550",
    "end": "1697410"
  },
  {
    "text": "application to run in a container or",
    "start": "1697410",
    "end": "1699450"
  },
  {
    "text": "Cloud Data environment finally we learn",
    "start": "1699450",
    "end": "1702030"
  },
  {
    "text": "about automation how you can integrate",
    "start": "1702030",
    "end": "1703710"
  },
  {
    "text": "your do ups tools like Team Foundation",
    "start": "1703710",
    "end": "1705810"
  },
  {
    "text": "server with AWS tools thank you",
    "start": "1705810",
    "end": "1708750"
  },
  {
    "text": "everybody",
    "start": "1708750",
    "end": "1709200"
  },
  {
    "text": "value your feedback give us some",
    "start": "1709200",
    "end": "1711420"
  },
  {
    "text": "feedback and we can include this kind of",
    "start": "1711420",
    "end": "1713100"
  },
  {
    "text": "dotnet sessions in this one thank you",
    "start": "1713100",
    "end": "1715400"
  },
  {
    "text": "this my contact details if you like to",
    "start": "1715400",
    "end": "1718380"
  },
  {
    "text": "have any questions feel free to call me",
    "start": "1718380",
    "end": "1721670"
  }
]