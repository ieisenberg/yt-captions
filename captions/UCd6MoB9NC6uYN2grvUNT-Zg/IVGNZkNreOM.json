[
  {
    "start": "0",
    "end": "26000"
  },
  {
    "text": "good afternoon everybody and welcome to today's E&Z Lunch and Learn seminar on",
    "start": "3140",
    "end": "8719"
  },
  {
    "text": "moving classic and emerging asp.net applications into AWS and we're going to",
    "start": "8719",
    "end": "14460"
  },
  {
    "text": "do it one docker container at a time hi I'm Peter stansky also known as dr. Pete",
    "start": "14460",
    "end": "19800"
  },
  {
    "text": "and with me I have Daniel zolteck with also an AWS solutions architect so today we're going to walk you through a",
    "start": "19800",
    "end": "26210"
  },
  {
    "start": "26000",
    "end": "93000"
  },
  {
    "text": "journey of moving your dotnet workloads both classic and green fields into AWS",
    "start": "26210",
    "end": "33059"
  },
  {
    "text": "so the debrief agenda for today is we're going to cover off a little bit around the history of Microsoft and the doctor",
    "start": "33059",
    "end": "39899"
  },
  {
    "text": "at run time and how it's evolved over the years and what Microsoft's been doing around emerging that technology",
    "start": "39899",
    "end": "45870"
  },
  {
    "text": "into the open source community and opening out for everybody to use we also did to focus on how the developer",
    "start": "45870",
    "end": "52289"
  },
  {
    "text": "experience may have changed and how that actually has been re-engineered for doing work outside of core Windows OS",
    "start": "52289",
    "end": "59460"
  },
  {
    "text": "development environments we're also going to demystify dotnet docker and what containers actually are so today is",
    "start": "59460",
    "end": "66090"
  },
  {
    "text": "going to be also hands-on we're going to show demos and we're going to go beyond the slide where and actually show you",
    "start": "66090",
    "end": "72659"
  },
  {
    "text": "how to work with docker and how to use dr. applications to get you there and it's a part of that we're going to walk",
    "start": "72659",
    "end": "78540"
  },
  {
    "text": "you through what AWS has in store in terms of support on taking and assisting",
    "start": "78540",
    "end": "83549"
  },
  {
    "text": "you on the cloud journey with your existing tools into the AWS environment",
    "start": "83549",
    "end": "89060"
  },
  {
    "text": "so let's talk about microsoft.net for those of you that have been around for a",
    "start": "89060",
    "end": "94710"
  },
  {
    "start": "93000",
    "end": "204000"
  },
  {
    "text": "while you may actually remember it was called the common language runtime as well so think of it as back into that",
    "start": "94710",
    "end": "101670"
  },
  {
    "text": "around circa 2000 Microsoft released the dotnet framework when it actually",
    "start": "101670",
    "end": "106890"
  },
  {
    "text": "shipped it shipped with over 20 different programming languages in other words this was the next generation of",
    "start": "106890",
    "end": "112920"
  },
  {
    "text": "virtual machines that would be able to take multiple different programming language called the common language",
    "start": "112920",
    "end": "118680"
  },
  {
    "text": "runtime and all these programming languages could be compiled to run on a single unified framework so whether that",
    "start": "118680",
    "end": "125610"
  },
  {
    "text": "was Pascal whether it's Haskell even COBOL and those are the traditional",
    "start": "125610",
    "end": "130860"
  },
  {
    "text": "languages like vb.net and c-sharp and also Jay Chou / Java also made their way to the dotnet",
    "start": "130860",
    "end": "137940"
  },
  {
    "text": "runtime and the idea of the docked at runtime was to the next generation runtime which also may develop his life",
    "start": "137940",
    "end": "144180"
  },
  {
    "text": "easier on the witness' platform if he ever had to build Microsoft applications",
    "start": "144180",
    "end": "149459"
  },
  {
    "text": "on Windows and this was around that time he possibly would have been writing them in C or C++ using the win32 api he also",
    "start": "149459",
    "end": "158459"
  },
  {
    "text": "would hopefully would have learned what com stands out is a component object model which was something else he had to",
    "start": "158459",
    "end": "164909"
  },
  {
    "text": "learn in order to be able to deliver quality applications and Windows all this stuff was really a black art for",
    "start": "164909",
    "end": "171180"
  },
  {
    "text": "building software so it was really convoluted really difficult and what that brought to the table was a much",
    "start": "171180",
    "end": "177329"
  },
  {
    "text": "simpler much more abstracted much more current environment for developers to be able to build rapid applications and",
    "start": "177329",
    "end": "184500"
  },
  {
    "text": "have them deployed not just on the desktop not the server and not just devices but a whole unified experience",
    "start": "184500",
    "end": "190620"
  },
  {
    "text": "and all this was wrapped up in visual studio.net which was the development environment was fully integrated to",
    "start": "190620",
    "end": "197190"
  },
  {
    "text": "allowed a developer to build applications really rapidly on the Windows operating environment Microsoft",
    "start": "197190",
    "end": "206519"
  },
  {
    "text": "also very early on realized that they had to standardize dotnet in order to make it successful so very early on they",
    "start": "206519",
    "end": "213810"
  },
  {
    "text": "were they approached the European computer machinery Association to standardize the.net libraries had known",
    "start": "213810",
    "end": "219959"
  },
  {
    "text": "one time and they also released a shared source version called rotor so the",
    "start": "219959",
    "end": "225569"
  },
  {
    "text": "shared sauce approach was it was an open source it was actually closed to certain",
    "start": "225569",
    "end": "230879"
  },
  {
    "text": "use cases which meant that you couldn't use the runtime for anything other than",
    "start": "230879",
    "end": "236639"
  },
  {
    "text": "academic or exploratory purposes it could is it commercially so this didn't get very far but it did actually allow a",
    "start": "236639",
    "end": "243299"
  },
  {
    "text": "lot of universities and a lot of language researchers to be able to play the platform so they code notice rotor",
    "start": "243299",
    "end": "248970"
  },
  {
    "text": "rotor was quite successful but again it was only successful within a very small community having said that a couple of",
    "start": "248970",
    "end": "256620"
  },
  {
    "text": "really clever engineers had a closer look at that and went hey we could potentially develop this because Rhoda",
    "start": "256620",
    "end": "262289"
  },
  {
    "text": "was at that point cross-platform he could actually work under BSD Linux",
    "start": "262289",
    "end": "267810"
  },
  {
    "text": "they thought wouldn't be great if we could take all the great things that the dotnet runtime does and move it into a",
    "start": "267810",
    "end": "274260"
  },
  {
    "text": "Linux and maybe even an OSX platform so hence mono was born was a great idea",
    "start": "274260",
    "end": "279870"
  },
  {
    "text": "of rebuilding the actual platform and it made its way into the open-source community",
    "start": "279870",
    "end": "285080"
  },
  {
    "text": "followed by it being evolved into the other development applications not just",
    "start": "285080",
    "end": "290460"
  },
  {
    "text": "on linux and on windows or mac OS but they also released mono touch which then",
    "start": "290460",
    "end": "296460"
  },
  {
    "text": "took mono to the next level which allowed developers to also develop mobile applications and both Android and",
    "start": "296460",
    "end": "302430"
  },
  {
    "text": "the apple iOS platform they've also added accreditors supported the visual studio they had their own idea called",
    "start": "302430",
    "end": "309330"
  },
  {
    "text": "monodevelop which was also integrated with xcode for those working on the Mac platform and eventually this company",
    "start": "309330",
    "end": "315690"
  },
  {
    "text": "called xamarin has now in 2016 been acquired by Microsoft so as you can",
    "start": "315690",
    "end": "321030"
  },
  {
    "text": "see there's been a great deal of open source ingestion into the Microsoft",
    "start": "321030",
    "end": "326120"
  },
  {
    "text": "organization which allows developers to benefit from that on the open source",
    "start": "326120",
    "end": "332729"
  },
  {
    "start": "330000",
    "end": "462000"
  },
  {
    "text": "efforts from Microsoft but those that have been paying attention you may have come across something called Roslyn now",
    "start": "332729",
    "end": "338580"
  },
  {
    "text": "Roslyn set of tools is again another open source initiative from Microsoft to",
    "start": "338580",
    "end": "343770"
  },
  {
    "text": "allow to open up the dotted compiler platform tools for other people to build upon so this essentially is a set of",
    "start": "343770",
    "end": "350850"
  },
  {
    "text": "compilers and code analyzers and api's that actually lets people build on top",
    "start": "350850",
    "end": "356100"
  },
  {
    "text": "of the c-sharp and vb.net compiler to allow them to reflect and better",
    "start": "356100",
    "end": "361500"
  },
  {
    "text": "understand all the bits that are hidden away from most developers which are in the realm of compiler developers and",
    "start": "361500",
    "end": "368250"
  },
  {
    "text": "that's a very important initiative because it actually now allows other open source communities to take the",
    "start": "368250",
    "end": "374039"
  },
  {
    "text": "dotnet language and the runtime and do some amazing things with it so having",
    "start": "374039",
    "end": "379410"
  },
  {
    "text": "said that around the same time Microsoft decided to go full open-source with",
    "start": "379410",
    "end": "385169"
  },
  {
    "text": "the.net runtime and they announced something called the dotnet core which is a much more streamlined much more",
    "start": "385169",
    "end": "392610"
  },
  {
    "text": "marginalized common language runtime that's available across multiple platforms they also evolved the dotnet",
    "start": "392610",
    "end": "400370"
  },
  {
    "text": "application components and assemblies that also evolved asp.net which they called",
    "start": "400370",
    "end": "406470"
  },
  {
    "text": "asp.net VV next or for those of the for those of you that have been paying attention again it's called asp.net five",
    "start": "406470",
    "end": "413370"
  },
  {
    "text": "and six and again more recently they've announced support for Microsoft Windows",
    "start": "413370",
    "end": "419190"
  },
  {
    "text": "and docker which is it again another big step towards being very open because dock has been around for quite a",
    "start": "419190",
    "end": "425310"
  },
  {
    "text": "while in the open source Linux community Microsoft just like AWS have made a commitment to working very closely with",
    "start": "425310",
    "end": "431670"
  },
  {
    "text": "the docker community to allow applications to be containerized and to be made more available for being able to",
    "start": "431670",
    "end": "438180"
  },
  {
    "text": "run cross-platform more on that later and finally something else to make you",
    "start": "438180",
    "end": "443310"
  },
  {
    "text": "aware of Microsoft has also created a dotnet foundation and this is a",
    "start": "443310",
    "end": "448980"
  },
  {
    "text": "community of that supports the open source in its initiatives to be able to",
    "start": "448980",
    "end": "454410"
  },
  {
    "text": "take all the open source projects in relation to Microsoft net and the runtime environments can take them to",
    "start": "454410",
    "end": "460590"
  },
  {
    "text": "the next level so it's a vision before",
    "start": "460590",
    "end": "467000"
  },
  {
    "text": "Visual Studio in the Microsoft operating system is the premier development vironment for for users Microsoft has",
    "start": "467000",
    "end": "475740"
  },
  {
    "text": "also been paying attention and having a closer look at how do people build software and a lot of software development is done through automation",
    "start": "475740",
    "end": "482130"
  },
  {
    "text": "which often ends up being done at the command line so as Microsoft has been evolving its",
    "start": "482130",
    "end": "487980"
  },
  {
    "text": "tools and its command line approach they've also provided now greater support for having command line tools",
    "start": "487980",
    "end": "496800"
  },
  {
    "text": "that will let you compile update and deploy your applications so you're not just doing it from the visual studio GUI",
    "start": "496800",
    "end": "503700"
  },
  {
    "text": "front end by clicking on buttons and going through Wizards you can essentially have the same functionality",
    "start": "503700",
    "end": "510330"
  },
  {
    "text": "available to you from the command line which now means that with the with the",
    "start": "510330",
    "end": "517020"
  },
  {
    "text": "release and moving towards asp.net core and ASP gonna be next you can now have a",
    "start": "517020",
    "end": "523020"
  },
  {
    "text": "very similar experience that you would have had on the Windows platform on a Linux or a Mac OS experience so",
    "start": "523020",
    "end": "530730"
  },
  {
    "text": "developers can can use tools like Visual Studio code which is a very much a a smaller version of the video Studio",
    "start": "530730",
    "end": "537640"
  },
  {
    "text": "IDE which run on both Linux and the Mac or perhaps you can use other third-party editors like sublime Emacs all of which",
    "start": "537640",
    "end": "545290"
  },
  {
    "text": "can also use intelligence and intelligence is that pop-up context additional information that you normally",
    "start": "545290",
    "end": "551950"
  },
  {
    "text": "get in your in your editor to be able to prompt the developer with you know additional information about the coder",
    "start": "551950",
    "end": "558339"
  },
  {
    "text": "trying to write so all this is available open source and if you visit Omni shop net you'll be able to download some",
    "start": "558339",
    "end": "565600"
  },
  {
    "text": "tools that plug into those editors in order to give you things like intelligence so just to recap this is a very big step",
    "start": "565600",
    "end": "573160"
  },
  {
    "text": "for Microsoft because traditionally this has been a Windows centric visual studio only mode of developing software so the",
    "start": "573160",
    "end": "581589"
  },
  {
    "text": "command line experience now being identical across Windows OSX and the lit",
    "start": "581589",
    "end": "586690"
  },
  {
    "text": "experience you can now integrate your application development much more tightly into continuous integration and",
    "start": "586690",
    "end": "594220"
  },
  {
    "text": "delivery mechanisms you can build your deployment pipelines fully scripted and allow yourselves to be able to take you",
    "start": "594220",
    "end": "601300"
  },
  {
    "text": "know from check-in of your application into a source repository to activate a whole bunch of automated scripts and",
    "start": "601300",
    "end": "607209"
  },
  {
    "text": "steps that allow you to deploy software very very rapidly the kind of stuff a lot of folks have been doing in the",
    "start": "607209",
    "end": "612610"
  },
  {
    "text": "open-source community for quite some time so here's an example of this is",
    "start": "612610",
    "end": "618220"
  },
  {
    "start": "615000",
    "end": "639000"
  },
  {
    "text": "what Visual Studio code on the Mac would look like so I'm going to Dan hop in now and take us through building an a an",
    "start": "618220",
    "end": "627040"
  },
  {
    "text": "asp.net application on a Mac operating system and he's going to actually show us some of the command tools as well as",
    "start": "627040",
    "end": "633670"
  },
  {
    "text": "show you what Visual Studio code looks like which is what we're currently showing so then over to you",
    "start": "633670",
    "end": "638970"
  },
  {
    "text": "okay let's take a look at the tools we can use to deploy an asp.net web",
    "start": "638970",
    "end": "645880"
  },
  {
    "start": "639000",
    "end": "1006000"
  },
  {
    "text": "application so the first tool is yeoman and yeoman generates our scaffolding for",
    "start": "645880",
    "end": "653860"
  },
  {
    "text": "web applications yeoman is an ojs application and can be installed using",
    "start": "653860",
    "end": "659800"
  },
  {
    "text": "the no package manager using the Europe package so let's go over to our terminal",
    "start": "659800",
    "end": "667620"
  },
  {
    "text": "and use yeoman in the asp net generator to generate out a basic web application",
    "start": "667620",
    "end": "674160"
  },
  {
    "text": "project as you can see yeoman provides different project types console",
    "start": "674160",
    "end": "680220"
  },
  {
    "text": "application right through to class libraries so let's go and select the basic web application it allows us to",
    "start": "680220",
    "end": "687120"
  },
  {
    "text": "name it will use the default web application basic you can see that yeoman has generated out all the",
    "start": "687120",
    "end": "693180"
  },
  {
    "text": "scaffolding so let's go over to Visual Studio code and have a look at what it's",
    "start": "693180",
    "end": "698790"
  },
  {
    "text": "generated so as you can see on the left",
    "start": "698790",
    "end": "705300"
  },
  {
    "text": "hand side we have our file view we can see that it's generated our controls so if you click on that file you can see",
    "start": "705300",
    "end": "712670"
  },
  {
    "text": "this syntax highlighting then the views the web root and the docker file and",
    "start": "712670",
    "end": "720300"
  },
  {
    "text": "some JSON files so let's take a look at the project JSON file in here you can",
    "start": "720300",
    "end": "725490"
  },
  {
    "text": "see that it lists all the dependencies that are required to run the project and it also provides some information on how",
    "start": "725490",
    "end": "732720"
  },
  {
    "text": "to run that project so here it's a web project and it requires the kestrel web",
    "start": "732720",
    "end": "738750"
  },
  {
    "text": "server so let's go back to our terminal and CD into the web application basic",
    "start": "738750",
    "end": "745830"
  },
  {
    "text": "folder and use the dotnet update tool to restore all the packages that are",
    "start": "745830",
    "end": "751500"
  },
  {
    "text": "required to run the web application as you can see we're using the mono runtime",
    "start": "751500",
    "end": "759800"
  },
  {
    "text": "for this demonstration so once the packages have been restored",
    "start": "759800",
    "end": "766490"
  },
  {
    "text": "we can then use the dotnet execution environment so DNX to run the web",
    "start": "766490",
    "end": "773760"
  },
  {
    "text": "application so we type DNX web to do that so once kestrels loaded it provides",
    "start": "773760",
    "end": "781530"
  },
  {
    "text": "the port to of the local port to access the web application on so here it's port 5000 so let's go over to our web browser",
    "start": "781530",
    "end": "788700"
  },
  {
    "text": "and visit port 5000 on the localhost and here you can see the basic asp.net 5 web",
    "start": "788700",
    "end": "796860"
  },
  {
    "text": "application if we go back to the console you can see kestrels output information so information about the",
    "start": "796860",
    "end": "805449"
  },
  {
    "text": "different content that's serving out so here we can see that it's invoked the controller and it's served out some",
    "start": "805449",
    "end": "812769"
  },
  {
    "text": "static content such as PNG s and JavaScript so let's let's break out of",
    "start": "812769",
    "end": "822490"
  },
  {
    "text": "the web server and take a look at another tool called the dotnet version manager and the dotnet version manager",
    "start": "822490",
    "end": "830910"
  },
  {
    "text": "allows us to measure different net runtimes on our system so let's take a look at what we have running here so we",
    "start": "830910",
    "end": "837610"
  },
  {
    "text": "can see that mono is the default so let's switch and use the core CLR instead so select the version and the",
    "start": "837610",
    "end": "845379"
  },
  {
    "text": "runtime is of course hero are you can see that's been updated our local path so if we then list the various runtimes",
    "start": "845379",
    "end": "853209"
  },
  {
    "text": "we can see Coursera is now the default and if we use the execution environment again it'll now",
    "start": "853209",
    "end": "862509"
  },
  {
    "text": "use the core see our rather than the mono runtime to run our web application",
    "start": "862509",
    "end": "867759"
  },
  {
    "text": "so let's now go back to our web browser and visit port 5000 and as you can see",
    "start": "867759",
    "end": "876240"
  },
  {
    "text": "if we go back it's invoking the controller and then serving out the various static assets and now our",
    "start": "876240",
    "end": "883240"
  },
  {
    "text": "websites up and running running on Coursera so let's do the same on Windows so over",
    "start": "883240",
    "end": "891189"
  },
  {
    "text": "here I've got a running Windows 2000 r2 instance running on ec2 let's open a",
    "start": "891189",
    "end": "897430"
  },
  {
    "text": "PowerShell command line and use dotnet version management let's list the",
    "start": "897430",
    "end": "903430"
  },
  {
    "text": "available runtimes so currently we don't have a default so let's use core CLR x86",
    "start": "903430",
    "end": "911589"
  },
  {
    "text": "64 under the course hello you can see",
    "start": "911589",
    "end": "917199"
  },
  {
    "text": "it's updated the path so now let's just take a look and see if it's our default which it is now we can use yeoman and",
    "start": "917199",
    "end": "925509"
  },
  {
    "text": "the asp net generator to create a basic web application so it's putting it again",
    "start": "925509",
    "end": "932800"
  },
  {
    "text": "in web application SiC folder it's generated out the scaffolding let's see it into that",
    "start": "932800",
    "end": "939380"
  },
  {
    "text": "folder and do a D nu restore to restore the dependencies that's just going",
    "start": "939380",
    "end": "945709"
  },
  {
    "text": "through and doing that it's reading the project JSON file you can see we're using cor cor as our runtime and then",
    "start": "945709",
    "end": "952190"
  },
  {
    "text": "we'll use the dotnet execution environment to start the web application",
    "start": "952190",
    "end": "959089"
  },
  {
    "text": "on the local server so let's bring up our web browser and go to the localhost",
    "start": "959089",
    "end": "966050"
  },
  {
    "text": "port 5000 so you can see that the web",
    "start": "966050",
    "end": "971630"
  },
  {
    "text": "apps load and if you just take a look at the console you can see that it's outputted information about the",
    "start": "971630",
    "end": "978500"
  },
  {
    "text": "different assets that have been served up so as you can see that the latest",
    "start": "978500",
    "end": "983779"
  },
  {
    "text": "dotnet tools provide a consistent developer experience across OS x linux",
    "start": "983779",
    "end": "989899"
  },
  {
    "text": "and windows thanks Dan it's great to see that",
    "start": "989899",
    "end": "996040"
  },
  {
    "text": "Microsoft developers can now have the same command-line development experience across multiple platforms like Windows",
    "start": "996040",
    "end": "1002350"
  },
  {
    "text": "Mac OS and Linux as well so billion went along we've already touched upon this",
    "start": "1002350",
    "end": "1009490"
  },
  {
    "text": "briefly in a demonstration when Daniel showed the DN vm command which is the dotnet version manager in on the windows",
    "start": "1009490",
    "end": "1018040"
  },
  {
    "text": "side you would have seen the classic dotnet framework which was running and the one that you've been using for many",
    "start": "1018040",
    "end": "1023350"
  },
  {
    "text": "many years and you also would have seen the doctor call runtime now this is currently available cross-platform",
    "start": "1023350",
    "end": "1030520"
  },
  {
    "text": "as opposed to classic which is very much our windows only framework in a dotnet core this is pretty much currently in",
    "start": "1030520",
    "end": "1037420"
  },
  {
    "text": "ic1 and heading towards release candidate 2 which now means it's in finally in stabilization phase Microsoft",
    "start": "1037420",
    "end": "1044678"
  },
  {
    "text": "recently announced that you can now have a go live license which means they can now use the dotnet core with ASP 5 in",
    "start": "1044679",
    "end": "1052900"
  },
  {
    "text": "production and at the moment it's being supported across a bunch of CentOS FreeBSD Mac and SUSE as well as Windows",
    "start": "1052900",
    "end": "1060960"
  },
  {
    "text": "if you were not to know more about what's available under the hood Microsoft has open sources as I",
    "start": "1060960",
    "end": "1067270"
  },
  {
    "text": "mentioned so if you head over to github to dotnet and course CLR you'll be able to clone",
    "start": "1067270",
    "end": "1073320"
  },
  {
    "text": "and have a closer inspection of the actual source code underneath you know",
    "start": "1073320",
    "end": "1078510"
  },
  {
    "text": "what's behind the runtime on the linux demo which you saw earlier then also had",
    "start": "1078510",
    "end": "1085650"
  },
  {
    "text": "the mono runtime available to him by the way mono can also be made to run on windows",
    "start": "1085650",
    "end": "1090809"
  },
  {
    "text": "so essentially you can very quickly swap between the various frameworks and runtimes that you're working towards but",
    "start": "1090809",
    "end": "1098100"
  },
  {
    "text": "just be aware of the the fact that some of these core runtime support different assemblies and different libraries on",
    "start": "1098100",
    "end": "1105120"
  },
  {
    "text": "those platforms so what does that mean for you well if you happen to be using Visual Studio you may actually be",
    "start": "1105120",
    "end": "1112410"
  },
  {
    "start": "1107000",
    "end": "1164000"
  },
  {
    "text": "experiencing this kind of an overloaded bit of intelligence which gives you some",
    "start": "1112410",
    "end": "1117840"
  },
  {
    "text": "indication that the string writer file class is actually not available on core",
    "start": "1117840",
    "end": "1124470"
  },
  {
    "text": "5 but on five and four point four point five frameworks so this is where it",
    "start": "1124470",
    "end": "1129900"
  },
  {
    "text": "becomes very interesting because now developers have to be more aware of the kind of code to writing because some of",
    "start": "1129900",
    "end": "1136800"
  },
  {
    "text": "those assemblies may not be available on the target runtime having said that if you are going to be focusing on the",
    "start": "1136800",
    "end": "1143309"
  },
  {
    "text": "Windows platform you can continue to use the same applications you have and assemblies as you have in the past but",
    "start": "1143309",
    "end": "1149250"
  },
  {
    "text": "if you are going to venture into the dotnet 5.0 ASP runtime environment and",
    "start": "1149250",
    "end": "1155040"
  },
  {
    "text": "you are going to go across platform certainly pay attention to some of the warnings you're going to get at compile",
    "start": "1155040",
    "end": "1161370"
  },
  {
    "text": "and development times so what's a difference between the various runtimes",
    "start": "1161370",
    "end": "1167850"
  },
  {
    "start": "1164000",
    "end": "1209000"
  },
  {
    "text": "and what is dotnet core got to do all this and fundamentally why should you care essentially when you look at the",
    "start": "1167850",
    "end": "1175200"
  },
  {
    "text": "traditional Microsoft applications in the runtime support that you were getting so for example if you had to",
    "start": "1175200",
    "end": "1180900"
  },
  {
    "text": "build my app which has everything in it potentially be compiled into a single DLL you would then be dependent upon",
    "start": "1180900",
    "end": "1187800"
  },
  {
    "text": "external dependencies such as system web and system core and traditionally in the past these have been very large",
    "start": "1187800",
    "end": "1194070"
  },
  {
    "text": "assemblies which has meant that Microsoft had to you know recompile the",
    "start": "1194070",
    "end": "1200220"
  },
  {
    "text": "entire assembly for example assistant web that assembly may contain additional frameworks and",
    "start": "1200220",
    "end": "1207299"
  },
  {
    "text": "additional systems such as system core i/o system file as well as under the web",
    "start": "1207299",
    "end": "1214470"
  },
  {
    "start": "1209000",
    "end": "1297000"
  },
  {
    "text": "you might have seen signal IR and/or session all these now in the core",
    "start": "1214470",
    "end": "1220110"
  },
  {
    "text": "runtime an ASP five have been broken down into much much smaller packages and the idea is that it's sort of building",
    "start": "1220110",
    "end": "1226769"
  },
  {
    "text": "large monolithic single DLL or a couple of the yellow applications this is the",
    "start": "1226769",
    "end": "1232289"
  },
  {
    "text": "now big move to use NuGet packages and for those of you who've used and you get you know these are essentially",
    "start": "1232289",
    "end": "1239600"
  },
  {
    "text": "self-contained application components that you can reuse and rapidly import into your application so now when you do",
    "start": "1239600",
    "end": "1246929"
  },
  {
    "text": "a build in dr core the command-line tools rd in you tool which is adopted up",
    "start": "1246929",
    "end": "1254610"
  },
  {
    "text": "data will actually produce you a new get package for your application so what's",
    "start": "1254610",
    "end": "1259980"
  },
  {
    "text": "the difference in summary microsoft has decided now to reduce the packages to",
    "start": "1259980",
    "end": "1265769"
  },
  {
    "text": "the smallest package sizes available which means that when they including you can now very rapidly iterate between",
    "start": "1265769",
    "end": "1272700"
  },
  {
    "text": "different versions of system components that make up your applications instead of building from very large dependencies",
    "start": "1272700",
    "end": "1279360"
  },
  {
    "text": "you now build your applications from much smaller packages as an example of that if you head over to github for",
    "start": "1279360",
    "end": "1285809"
  },
  {
    "text": "asp.net you will find there at least sixty different projects that make up asp.net these days so all of these can",
    "start": "1285809",
    "end": "1293490"
  },
  {
    "text": "be pulled in or excluded depending upon your requirement of your application now",
    "start": "1293490",
    "end": "1299429"
  },
  {
    "start": "1297000",
    "end": "1370000"
  },
  {
    "text": "docker this is a very popular topic for everybody microsoft like AWS has been a",
    "start": "1299429",
    "end": "1305250"
  },
  {
    "text": "commitment to the open source community some time ago to support docker what",
    "start": "1305250",
    "end": "1310350"
  },
  {
    "text": "docker essentially is is it's a way of packaging and applications so let me",
    "start": "1310350",
    "end": "1315870"
  },
  {
    "text": "explain a difference first so how is docker different from virtual machines on your left here for example if you",
    "start": "1315870",
    "end": "1321600"
  },
  {
    "text": "look at a virtual machine running on top of a hypervisor the virtual machine is",
    "start": "1321600",
    "end": "1327720"
  },
  {
    "text": "potentially a very large VMDK or a very large file that consists of the entire",
    "start": "1327720",
    "end": "1333510"
  },
  {
    "text": "guest operating system any associative binaries and libs and anything else required for your",
    "start": "1333510",
    "end": "1339450"
  },
  {
    "text": "application to execute contrary to that a dakka dakka dakka image in fact is a",
    "start": "1339450",
    "end": "1346050"
  },
  {
    "text": "much much lighter weight application essentially what it means is you package your application and the runtime",
    "start": "1346050",
    "end": "1351840"
  },
  {
    "text": "dependencies together which means these are much more lightweight they're highly",
    "start": "1351840",
    "end": "1357270"
  },
  {
    "text": "portable because a docker engine like I said earlier is now available not just on Windows but also a Linux so you now",
    "start": "1357270",
    "end": "1364800"
  },
  {
    "text": "have the ability to be able to take your applications and run them across operating system so a little bit more",
    "start": "1364800",
    "end": "1372300"
  },
  {
    "start": "1370000",
    "end": "1477000"
  },
  {
    "text": "about containers so anything about a container it simply contains all of the application components as dependencies",
    "start": "1372300",
    "end": "1379230"
  },
  {
    "text": "quite often developers build their applications on a local development machine they compile the app and they",
    "start": "1379230",
    "end": "1385860"
  },
  {
    "text": "ship it over onto the server or pass it on to somebody else potentially and the app may most likely for the first thing",
    "start": "1385860",
    "end": "1392310"
  },
  {
    "text": "we do is break because there are potentially additional dependencies in the environment or the operating system that have been that are that are",
    "start": "1392310",
    "end": "1399360"
  },
  {
    "text": "dependent on to execute so by running your application and package them into a",
    "start": "1399360",
    "end": "1404760"
  },
  {
    "text": "container the container can contain all the additional dependencies which makes life a little bit easier containers also",
    "start": "1404760",
    "end": "1412590"
  },
  {
    "text": "shoot a kernel in other words they are very lightweight processes which are isolated from each other within the",
    "start": "1412590",
    "end": "1419550"
  },
  {
    "text": "operating system so you can run multiple docker containers side-by-side which",
    "start": "1419550",
    "end": "1425400"
  },
  {
    "text": "will not interfere with each other the operating system and the runtime environment will isolate these which means that things like DLL hell which",
    "start": "1425400",
    "end": "1433350"
  },
  {
    "text": "you're traditionally have being a real big problem for a lot of developers and be able to multi tenant applications that share core OS dependencies all",
    "start": "1433350",
    "end": "1441300"
  },
  {
    "text": "those things have been challenging now you can actually get away from that and because docker is entitled docker",
    "start": "1441300",
    "end": "1450000"
  },
  {
    "text": "containers both on your laptop on your development machines and move them very quickly into the AWS cloud now when you",
    "start": "1450000",
    "end": "1459840"
  },
  {
    "text": "think about docker people often think about it on Linux because they are now supported on the Windows environment we",
    "start": "1459840",
    "end": "1467070"
  },
  {
    "text": "can think Microsoft for an opening app and supporting the opened open-source",
    "start": "1467070",
    "end": "1472370"
  },
  {
    "text": "community to allow greater cross-platform execution of your applications so why does it matter to",
    "start": "1472370",
    "end": "1479690"
  },
  {
    "start": "1477000",
    "end": "1597000"
  },
  {
    "text": "you for your applications so we've talked about dotnet and its evolution as",
    "start": "1479690",
    "end": "1486380"
  },
  {
    "text": "well as the idea of now putting those applications in containers so for",
    "start": "1486380",
    "end": "1492860"
  },
  {
    "text": "existing applications stuff that you've built many many years ago you're able to take these applications package them",
    "start": "1492860",
    "end": "1498740"
  },
  {
    "text": "into a self-contained environment aka the docker container and then be able to",
    "start": "1498740",
    "end": "1504560"
  },
  {
    "text": "run these using mono or potentially dot their core on different operating systems so can now extend the life of",
    "start": "1504560",
    "end": "1511250"
  },
  {
    "text": "your apps merely beyond just a platform they were built on you can certainly you",
    "start": "1511250",
    "end": "1516410"
  },
  {
    "text": "know we tend to prefer to renovate their applications and make them a little bit more portable thinking about a little",
    "start": "1516410",
    "end": "1521570"
  },
  {
    "text": "bit more life for greenfield applications and these are the pure asp.net 5 and you don't need core",
    "start": "1521570",
    "end": "1528320"
  },
  {
    "text": "centric applications which you may have to develop slightly different because they are now the next generation of",
    "start": "1528320",
    "end": "1534680"
  },
  {
    "text": "applications for those greenfield apps again you can develop within Visual Studio or at the command line across",
    "start": "1534680",
    "end": "1541640"
  },
  {
    "text": "different platforms and readily have those executing almost everywhere you can push a button run a script and",
    "start": "1541640",
    "end": "1548090"
  },
  {
    "text": "deploy them into docker either locally or on AWS and like I said earlier hash",
    "start": "1548090",
    "end": "1554120"
  },
  {
    "text": "step one is very briefly there's nothing also stopping you from being able to bring in applications into a very modern and agile development",
    "start": "1554120",
    "end": "1561140"
  },
  {
    "text": "world so DevOps is is very huge and rapidly going through various",
    "start": "1561140",
    "end": "1567170"
  },
  {
    "text": "organizations the idea of being able to repin and develop a code and have it shipped into production so the idea is",
    "start": "1567170",
    "end": "1573350"
  },
  {
    "text": "that you can very much automate from the moment someone builds the code to have it running in the cloud and if you move",
    "start": "1573350",
    "end": "1580070"
  },
  {
    "text": "your application into AWS of course you gain the agility that we are so well known for in terms of being able to",
    "start": "1580070",
    "end": "1586190"
  },
  {
    "text": "rapidly provide infrastructure and a very low cost and for those that need to do the emotive scale out and cope with",
    "start": "1586190",
    "end": "1592910"
  },
  {
    "text": "very large loads you certainly get that from our infrastructure so let's do a hands-on demo and",
    "start": "1592910",
    "end": "1599960"
  },
  {
    "start": "1597000",
    "end": "1608000"
  },
  {
    "text": "demonstrate how to develop an asp.net v5 application on Windows and run that in a",
    "start": "1599960",
    "end": "1606409"
  },
  {
    "text": "Linux container so what would it look like well before you showed demo there",
    "start": "1606409",
    "end": "1613460"
  },
  {
    "start": "1608000",
    "end": "1641000"
  },
  {
    "text": "going to be two virtual machines that were going to spin up we're going to have a Windows server running on ec2 on Amazon with Visual Studio as well as",
    "start": "1613460",
    "end": "1620630"
  },
  {
    "text": "docker extensions for visual studio bakka tools and then we're going to build the application just like we did",
    "start": "1620630",
    "end": "1626659"
  },
  {
    "text": "in the previous demo except we're gonna do it from visual studio same application framework and then we're",
    "start": "1626659",
    "end": "1633049"
  },
  {
    "text": "going to push a button and deploy it into a docker container running mono on",
    "start": "1633049",
    "end": "1638440"
  },
  {
    "text": "Ubuntu here you can see my Amazon web",
    "start": "1638440",
    "end": "1644090"
  },
  {
    "start": "1641000",
    "end": "1725000"
  },
  {
    "text": "console for cloud formation for this demonstration we've got a CloudFormation template as you can see here that",
    "start": "1644090",
    "end": "1651019"
  },
  {
    "text": "generates two virtual machines one is a Windows box and one is a Linux machine running docker to get this template",
    "start": "1651019",
    "end": "1659750"
  },
  {
    "text": "running we provided a couple of parameters such as a t-to medium sized virtual machines my public my key pair",
    "start": "1659750",
    "end": "1668720"
  },
  {
    "text": "as well as the Amazon machine images for both windows and docker and some",
    "start": "1668720",
    "end": "1674000"
  },
  {
    "text": "additional information about my V PC it takes about 10 minutes for this CloudFormation template to run once it's",
    "start": "1674000",
    "end": "1680840"
  },
  {
    "text": "actually complete the output parameters you can reference for both the windows",
    "start": "1680840",
    "end": "1687279"
  },
  {
    "text": "2012 instance which will be already peeing into the Ubuntu public and",
    "start": "1687279",
    "end": "1694759"
  },
  {
    "text": "private IP addresses for that same machine which will be able to access and remotely run docker on once it is",
    "start": "1694759",
    "end": "1702350"
  },
  {
    "text": "finally up and running you will find two virtual machines in your ec2 console",
    "start": "1702350",
    "end": "1708190"
  },
  {
    "text": "demonstrating the Ubuntu and Windows machines up and running with their",
    "start": "1708190",
    "end": "1714470"
  },
  {
    "text": "respective IP addresses so now that we've deployed the virtual machines in",
    "start": "1714470",
    "end": "1722210"
  },
  {
    "text": "AWS let's get developing so here is the",
    "start": "1722210",
    "end": "1728080"
  },
  {
    "start": "1725000",
    "end": "1827000"
  },
  {
    "text": "RDP session into my Windows 2012 server running Visual",
    "start": "1728080",
    "end": "1733520"
  },
  {
    "text": "Studio so let's kick that off first this Visual Studio is a Community",
    "start": "1733520",
    "end": "1738710"
  },
  {
    "text": "Edition along with the installed add-ons for docker this can be downloaded from",
    "start": "1738710",
    "end": "1744350"
  },
  {
    "text": "CodePlex and installed over Visual Studio from which you'll get support for docker so",
    "start": "1744350",
    "end": "1751100"
  },
  {
    "text": "here the traditional login screen so we were to start a new project let's select",
    "start": "1751100",
    "end": "1756830"
  },
  {
    "text": "a new project click and select an asp.net application let's call this",
    "start": "1756830",
    "end": "1764120"
  },
  {
    "text": "project dotnet on AWS click OK select",
    "start": "1764120",
    "end": "1777230"
  },
  {
    "text": "the asp.net 5 template for web application and click OK and what this",
    "start": "1777230",
    "end": "1783680"
  },
  {
    "text": "is doing behind the scenes right now is creating a Microsoft Visual Studio template for the classic asp.net 5",
    "start": "1783680",
    "end": "1791590"
  },
  {
    "text": "getting started project so if we were to click execute it'll go off and build the",
    "start": "1791590",
    "end": "1799370"
  },
  {
    "text": "project it so it pretty quickly it's fun up though I call is Express web",
    "start": "1799370",
    "end": "1804470"
  },
  {
    "text": "server on a custom port as you can see here and behind the scenes you are",
    "start": "1804470",
    "end": "1809690"
  },
  {
    "text": "running a application in your browser on your local development machine so that's",
    "start": "1809690",
    "end": "1817040"
  },
  {
    "text": "great but that's probably not what we wanted you might do this a couple of times while you're building and",
    "start": "1817040",
    "end": "1823040"
  },
  {
    "text": "developing your application now let's stop this and let's not have a go at maybe taking this to the next level and",
    "start": "1823040",
    "end": "1830120"
  },
  {
    "start": "1827000",
    "end": "2257000"
  },
  {
    "text": "then deploying it to our secondary machine which is a boon to Linux",
    "start": "1830120",
    "end": "1836300"
  },
  {
    "text": "operating system running docker on it so the way we actually get this project and then migrated over to dr. essentially",
    "start": "1836300",
    "end": "1842450"
  },
  {
    "text": "file is straightforward so in order to get your application running in a doctor",
    "start": "1842450",
    "end": "1848240"
  },
  {
    "text": "environment there are a couple of ways you can do that you can do it from visual studio which I'll show you how to do that shortly or you can actually do",
    "start": "1848240",
    "end": "1854780"
  },
  {
    "text": "it from the command line so let me quickly jump into the command line and give you some idea of what that would look like now Microsoft did a while ago",
    "start": "1854780",
    "end": "1862640"
  },
  {
    "text": "just like AWS commitment to the doctor community so when you install the Visual Studio",
    "start": "1862640",
    "end": "1868690"
  },
  {
    "text": "extensions for docker you end up getting also the docker command-line tool which",
    "start": "1868690",
    "end": "1875019"
  },
  {
    "text": "essentially looks like this for those of you who've used the docker environment",
    "start": "1875019",
    "end": "1882529"
  },
  {
    "text": "on a Linux platform this is exactly the same experience you can build images attached today the actual doctor",
    "start": "1882529",
    "end": "1888529"
  },
  {
    "text": "environment just the keyword on Linux so let's have a closer look at what the environment we currently have that's",
    "start": "1888529",
    "end": "1894529"
  },
  {
    "text": "been set up for us on Ubuntu so to do that we need to connect to the remote machine and that's the IP address that",
    "start": "1894529",
    "end": "1901369"
  },
  {
    "text": "you saw us created via CloudFormation template and what this command will give us is it'll lists the number of images",
    "start": "1901369",
    "end": "1908119"
  },
  {
    "text": "that have been deployed there so if we were to go bottom-up the first thing you see is the Microsoft asp.net image now",
    "start": "1908119",
    "end": "1915950"
  },
  {
    "text": "in this image we have the dotnet runtime environment as produced by Microsoft the",
    "start": "1915950",
    "end": "1922809"
  },
  {
    "text": "application web application 1 & 2 images are the ones that I've been playing around with is why not I built",
    "start": "1922809",
    "end": "1928970"
  },
  {
    "text": "six hour ago six hours ago it was one that I've also built about 33 minutes ago so we can also check what is",
    "start": "1928970",
    "end": "1936110"
  },
  {
    "text": "happening on that remote machine but one of the PS command the PS command which really just lists",
    "start": "1936110",
    "end": "1941539"
  },
  {
    "text": "the currently running and executing applications as you can see we have nothing running on the remote machine so",
    "start": "1941539",
    "end": "1948980"
  },
  {
    "text": "let's pop back into visual studio and let's take the application we've built and then deploy it over to the remote",
    "start": "1948980",
    "end": "1955879"
  },
  {
    "text": "machine so this is as simple as essentially right-clicking on your",
    "start": "1955879",
    "end": "1961149"
  },
  {
    "text": "project and clicking publish now there are a number of options here now we're",
    "start": "1961149",
    "end": "1966950"
  },
  {
    "text": "going to use the docker container deployment profile and we're being asked",
    "start": "1966950",
    "end": "1973429"
  },
  {
    "text": "for some geo Virtual Machine Records and entries but we're going to connect to a custom docker host which is exactly what",
    "start": "1973429",
    "end": "1980299"
  },
  {
    "text": "we've set up on our Bunton machine so order to do is simply provide the",
    "start": "1980299",
    "end": "1985789"
  },
  {
    "text": "endpoint to that docking mission so let's go back to the Katori come online let's just copy the",
    "start": "1985789",
    "end": "1993750"
  },
  {
    "text": "in point taste it back here give me the",
    "start": "1993750",
    "end": "2000769"
  },
  {
    "text": "image name the docker file will be automatically generated for us so that's our one of the nice perks of working in",
    "start": "2000769",
    "end": "2007490"
  },
  {
    "text": "Visual Studio let's select port 80 and port 80 for simplicity which means how this is how",
    "start": "2007490",
    "end": "2014360"
  },
  {
    "text": "we're going to expose the application to the outside world let's validate the connection that's",
    "start": "2014360",
    "end": "2019460"
  },
  {
    "text": "great we've been able to connect and let's publish and what you should be",
    "start": "2019460",
    "end": "2027049"
  },
  {
    "text": "seeing now is we've built the project it's remotely being executed so it's",
    "start": "2027049",
    "end": "2033019"
  },
  {
    "text": "being built right now and in fact it would be an executor just yet what's actually happening is we're actually",
    "start": "2033019",
    "end": "2038269"
  },
  {
    "text": "building the image at the moment so behind the scenes Visual Studio is",
    "start": "2038269",
    "end": "2046250"
  },
  {
    "text": "running a whole swag of command lines instructions which is going to take the",
    "start": "2046250",
    "end": "2053118"
  },
  {
    "text": "application we'll be building here and push it up to the rowing machine",
    "start": "2053119",
    "end": "2058819"
  },
  {
    "text": "now it's sending the chunks of the image over bit by bit it's going through the",
    "start": "2058819",
    "end": "2067118"
  },
  {
    "text": "docker file it's making a reference to the other image which contains the",
    "start": "2067119",
    "end": "2072500"
  },
  {
    "text": "Microsoft runtime environment telling what the entry point is and finally",
    "start": "2072500",
    "end": "2079579"
  },
  {
    "text": "cranking the application and running it for us so in a couple of seconds what",
    "start": "2079579",
    "end": "2088608"
  },
  {
    "text": "we're now seeing is it started up the web browser so this is the localhost",
    "start": "2088609",
    "end": "2093648"
  },
  {
    "text": "example which is no longer valid this will himat because is has been",
    "start": "2093649",
    "end": "2099500"
  },
  {
    "text": "destroyed it's got a timeout let's forget that but here is the IP address of the remote",
    "start": "2099500",
    "end": "2106550"
  },
  {
    "text": "machine this is the machine that's now received my application it's now running",
    "start": "2106550",
    "end": "2111700"
  },
  {
    "text": "it's running just as it did on my Windows Michel develop machine here so",
    "start": "2111700",
    "end": "2119750"
  },
  {
    "text": "to make sure that I'm truly running I can go back into my command line tools like the only PS command",
    "start": "2119750",
    "end": "2126829"
  },
  {
    "text": "what you're saying is here is the container ID here is the web application",
    "start": "2126829",
    "end": "2132650"
  },
  {
    "text": "that I've thought of that I'm running which have started all of 54 seconds ago so now go back to the way doing images",
    "start": "2132650",
    "end": "2140239"
  },
  {
    "text": "on it we will now find that we have the dotnet new image that we've just created which",
    "start": "2140239",
    "end": "2148219"
  },
  {
    "text": "is create less than a minute ago and that is the one that is extra running in the browser for us so this is the actual",
    "start": "2148219",
    "end": "2154999"
  },
  {
    "text": "experience we would have as a developer using visual studio and working directly",
    "start": "2154999",
    "end": "2160579"
  },
  {
    "text": "from the ADA based environment now having said that there's nothing stopping you going back to the",
    "start": "2160579",
    "end": "2166579"
  },
  {
    "text": "environment making changes and then republishing now what's also interesting about this project is that visual studio",
    "start": "2166579",
    "end": "2173930"
  },
  {
    "text": "when you create these projects create some custom publishing profiles so the thing you will just set up before you",
    "start": "2173930",
    "end": "2181160"
  },
  {
    "text": "saw me setting up earlier on how to connect through the remote machine it also creates if we look here it also",
    "start": "2181160",
    "end": "2188420"
  },
  {
    "text": "creates a batch script in other words you could actually rerun and develop",
    "start": "2188420",
    "end": "2193519"
  },
  {
    "text": "this entire application on a non microsoft environment such as using visual studio code and be able to run",
    "start": "2193519",
    "end": "2201739"
  },
  {
    "text": "this batch command line on a Mac or a Linux environment or any other variant",
    "start": "2201739",
    "end": "2207079"
  },
  {
    "text": "of Linux and it will actually run the docker command and also deploy that to that remote machine or if you were",
    "start": "2207079",
    "end": "2212930"
  },
  {
    "text": "working on a Windows environment so here is the PowerShell script this PowerShell",
    "start": "2212930",
    "end": "2218059"
  },
  {
    "text": "script again you could run locally on your machine from a reflector from the",
    "start": "2218059",
    "end": "2224180"
  },
  {
    "text": "command line so essentially if you were to build and integrate this project into the team",
    "start": "2224180",
    "end": "2230809"
  },
  {
    "text": "city or a continuous integration process that you may have in your organization you could run these scripts as they are",
    "start": "2230809",
    "end": "2236869"
  },
  {
    "text": "already pre generate for you to take your application and deploy it into a docker environment so I hope this has",
    "start": "2236869",
    "end": "2244219"
  },
  {
    "text": "demonstrated how easy it is to build a ASP done application and then deploy it",
    "start": "2244219",
    "end": "2249979"
  },
  {
    "text": "into a dock environment directly from Visual Studio and you can do it via GUI",
    "start": "2249979",
    "end": "2255589"
  },
  {
    "text": "or you can do it via the command line there are a number of options that are available to you if you would",
    "start": "2255589",
    "end": "2262099"
  },
  {
    "text": "like to take your dot applications and have them running inside docker and in particular on the AWS cloud so let's go",
    "start": "2262099",
    "end": "2268099"
  },
  {
    "text": "for a couple of these option one will be to raw your own so this is the selection",
    "start": "2268099",
    "end": "2273380"
  },
  {
    "text": "where you would run docker on ec2 as we have done in the previous demo it's",
    "start": "2273380",
    "end": "2278840"
  },
  {
    "text": "probably something that you may want to do on your local development machine there's nothing stopping you from going to docker and downloading documen and",
    "start": "2278840",
    "end": "2286160"
  },
  {
    "text": "running to docker locally on your machine as opposed to on a remote box as",
    "start": "2286160",
    "end": "2291470"
  },
  {
    "text": "we showed you previously another option that's available to you is to use a lot",
    "start": "2291470",
    "end": "2296690"
  },
  {
    "text": "of Amazon services such as elastic Beanstalk elastic Beanstalk supports both docker as well as Windows and IAS",
    "start": "2296690",
    "end": "2303560"
  },
  {
    "text": "so you can take green fields brand new docker contain applications or take your",
    "start": "2303560",
    "end": "2309349"
  },
  {
    "text": "legacy applications and deploy them via Beanstalk and Ben soap is really a great",
    "start": "2309349",
    "end": "2314359"
  },
  {
    "text": "service for developers who are not particularly too keen about worrying about the underlying infrastructure what",
    "start": "2314359",
    "end": "2320540"
  },
  {
    "text": "they want to do is to be able to get started quickly with deployment applications and getting it up and",
    "start": "2320540",
    "end": "2326869"
  },
  {
    "text": "running in the cloud and find the option 3 is for more of the advanced users who",
    "start": "2326869",
    "end": "2332450"
  },
  {
    "text": "potentially would like to use the Amazon ec2 container service or ECS which",
    "start": "2332450",
    "end": "2337700"
  },
  {
    "text": "supports Daka natively and what it does is it gives you a great deal of access for your engineers and IT ops teams to",
    "start": "2337700",
    "end": "2345530"
  },
  {
    "text": "be able to have full access to tinker with the underlying core infrastructure that's running a docker environment and",
    "start": "2345530",
    "end": "2350990"
  },
  {
    "text": "easy it has a lot of power for things such as scaling out and having me able",
    "start": "2350990",
    "end": "2356330"
  },
  {
    "text": "to restart and bring back to life any dr. containers I may have stopped or",
    "start": "2356330",
    "end": "2361490"
  },
  {
    "text": "have failed to launch I have potentially crashed so there are three options that are available to you each of these were really very depending",
    "start": "2361490",
    "end": "2369080"
  },
  {
    "text": "upon your level of interest in tinkering with the underlying infrastructure such as with ECS or potentially looking at it",
    "start": "2369080",
    "end": "2376280"
  },
  {
    "text": "from a more higher perspective when I hit a button and deploy your applications with things like Beanstalk",
    "start": "2376280",
    "end": "2381290"
  },
  {
    "text": "would come in so in summary it's really great to see that Microsoft",
    "start": "2381290",
    "end": "2386960"
  },
  {
    "start": "2383000",
    "end": "2493000"
  },
  {
    "text": "is making cross-platform development and execution easier for the typically Microsoft centric ecosystem",
    "start": "2386960",
    "end": "2393270"
  },
  {
    "text": "well I've got that developers have been tinkering with motto and having some varied experiences in that space right",
    "start": "2393270",
    "end": "2398790"
  },
  {
    "text": "now we've got that core an ASP 5 that exclus is becoming much much simpler it's also well more it's well documented",
    "start": "2398790",
    "end": "2405630"
  },
  {
    "text": "which means you can actually follow the guides that are also online to get you started and for those that are very keen",
    "start": "2405630",
    "end": "2412050"
  },
  {
    "text": "to better understand of what's happening in a runtime because everything's been an open source you are able to go into",
    "start": "2412050",
    "end": "2417060"
  },
  {
    "text": "the ditch check out the particular repo and be able to look at the runtime or any other 60 different asp.net 5 you know",
    "start": "2417060",
    "end": "2426020"
  },
  {
    "text": "libraries that you could potentially tinker with and modify yourself you can take an existing legacy apps that have",
    "start": "2426020",
    "end": "2432720"
  },
  {
    "text": "been built many many years ago or build them fresh on the brand new runtime the options already there for you so there's",
    "start": "2432720",
    "end": "2439290"
  },
  {
    "text": "no real restriction on being able to say I can't run my old legacy application and by the way this is a fail this is",
    "start": "2439290",
    "end": "2444840"
  },
  {
    "text": "only a little 200 presentations there are other ways where you can actually even take your applications decompile",
    "start": "2444840",
    "end": "2450480"
  },
  {
    "text": "them and recompile them for new runtimes it's a failure advanced topic but certainly it can be done now I didn't",
    "start": "2450480",
    "end": "2457050"
  },
  {
    "text": "also remember that any of us here is is here to support you on this journey there are a number of options or a",
    "start": "2457050",
    "end": "2462359"
  },
  {
    "text": "number of ways of getting and.net applications onto AWS and we have a wonderful team of very friendly solution",
    "start": "2462359",
    "end": "2468990"
  },
  {
    "text": "architects across Australia and New Zealand see if you need help please don't be shy reach out and we'll be able",
    "start": "2468990",
    "end": "2475410"
  },
  {
    "text": "to come in whiteboard and actually take you through a number of scenario of how you can actually take your applications to the AWS cloud",
    "start": "2475410",
    "end": "2482099"
  },
  {
    "text": "so remember I know this love swipes of Windows Server and we also love dr. and we have a lot of passionate people who",
    "start": "2482099",
    "end": "2487470"
  },
  {
    "text": "are really looking forward to seeing how this plays out in your cloud journey so",
    "start": "2487470",
    "end": "2494190"
  },
  {
    "start": "2493000",
    "end": "2560000"
  },
  {
    "text": "in closing I'd like to invite you all to the AWS summit in fact we're going to have a level 300 session of this topic",
    "start": "2494190",
    "end": "2501450"
  },
  {
    "text": "delivery we're going to do it much deeper dive in moving your dotnet applications to easy to AWS via docker",
    "start": "2501450",
    "end": "2509430"
  },
  {
    "text": "but don't just come for that session come for a whole bunch of them we have two days worth of presentations from aw",
    "start": "2509430",
    "end": "2516930"
  },
  {
    "text": "solution architects as well as some partners we have boot camps in total is going to be a great deal of session 60",
    "start": "2516930",
    "end": "2523320"
  },
  {
    "text": "in total so don't be shy come and register and come and say hi to these whooshing architecture team at the Sydney summit",
    "start": "2523320",
    "end": "2530750"
  },
  {
    "text": "if you can't wait that long we also have self-paced training labs you can also get certified and go",
    "start": "2530750",
    "end": "2537210"
  },
  {
    "text": "through the AWS instructor-led training sessions as well as listen to other webinars and a great deal of different",
    "start": "2537210",
    "end": "2543839"
  },
  {
    "text": "topics so in closing on behalf of myself dr. P and Daniel's also would like to",
    "start": "2543839",
    "end": "2551339"
  },
  {
    "text": "thank you for your attention and we wish you all the very best in moving a classic and emerging asp.net",
    "start": "2551339",
    "end": "2556440"
  },
  {
    "text": "applications into the AWS cloud one container at a time",
    "start": "2556440",
    "end": "2562099"
  }
]