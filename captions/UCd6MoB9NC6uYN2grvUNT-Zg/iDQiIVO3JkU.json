[
  {
    "text": "well good afternoon and it's great to see everybody here so good to see so many of you interested",
    "start": "2000",
    "end": "7200"
  },
  {
    "text": "in coming to hear about our services and it's really a privilege to be able to talk to you about that some of the sharpied amongst you may",
    "start": "7200",
    "end": "14000"
  },
  {
    "text": "have thought there's some kind of british conspiracy going on here at aws considering that matt",
    "start": "14000",
    "end": "19279"
  },
  {
    "text": "is a country man of mine but i'm pleased to inform you that there is no such conspiracy it's total coincidence and i've lived in",
    "start": "19279",
    "end": "25039"
  },
  {
    "text": "the states for quite a while at this point so my name is paul duffy i'm part of the solution architect team that's based here in new",
    "start": "25039",
    "end": "31439"
  },
  {
    "text": "york city and our job is basically to spend time with customers who are thinking about deploying applications",
    "start": "31439",
    "end": "37120"
  },
  {
    "text": "on the aws cloud and to help them do that in a way that they can take the best advantages of the capabilities",
    "start": "37120",
    "end": "42239"
  },
  {
    "text": "that that offers to them so with that what i'd like to talk to you about today is how you can use one particular aws",
    "start": "42239",
    "end": "49600"
  },
  {
    "text": "service elastic beanstalk to better deploy web applications in today's example we're",
    "start": "49600",
    "end": "55199"
  },
  {
    "text": "going to be talking about php applications so the format of this presentation is going to be a few slides",
    "start": "55199",
    "end": "60800"
  },
  {
    "text": "just to give an overview of what elastic bean stalk is is there anybody here who's used elastic beanstalk so far",
    "start": "60800",
    "end": "67040"
  },
  {
    "text": "so not very many of you so we'll start off giving an overview of what the elastic beanstalk service does what it",
    "start": "67040",
    "end": "72159"
  },
  {
    "text": "offers you go into something of an in-depth demonstration a little bit of a recap",
    "start": "72159",
    "end": "77520"
  },
  {
    "text": "and then we'll be around there are a bunch of solution architects from the new york team who are here today so if",
    "start": "77520",
    "end": "83280"
  },
  {
    "text": "you have any questions afterwards if you want to go into any of the depth like some of the questions we have at the end of matt's session",
    "start": "83280",
    "end": "88479"
  },
  {
    "text": "that's what we're here for we'll be very pleased to go through that stuff",
    "start": "88479",
    "end": "93680"
  },
  {
    "text": "so what is aws elastic beanstalk well it's a service to make it easier",
    "start": "94479",
    "end": "99520"
  },
  {
    "text": "for you to deploy applications on the aws platform one of the key things it does is automates the provisioning and",
    "start": "99520",
    "end": "105520"
  },
  {
    "text": "configuration of a lot of aws services so if you think about some of the things that matt was talking about in his talk",
    "start": "105520",
    "end": "111119"
  },
  {
    "text": "before he was giving examples of some of the things you might think about when you're deploying an application",
    "start": "111119",
    "end": "116320"
  },
  {
    "text": "how would you make sure that the application was highly available that was going to be able to scale out to meet the demand from",
    "start": "116320",
    "end": "121680"
  },
  {
    "text": "users things like that how would you configure monitoring using the services such as cloudwatch and so on",
    "start": "121680",
    "end": "127200"
  },
  {
    "text": "will receive notifications based on what's going on in your application so what elastic beanstalk",
    "start": "127200",
    "end": "132879"
  },
  {
    "text": "does is takes a lot of that heavy lifting away from you meaning that you can focus on building the best php applications in this case",
    "start": "132879",
    "end": "139920"
  },
  {
    "text": "or perhaps java applications and letting us think about that kind of automation whether it's things like snapshots for",
    "start": "139920",
    "end": "146000"
  },
  {
    "text": "application logs or letting you easily manage those configuration settings so elastic beanstalk along with",
    "start": "146000",
    "end": "152239"
  },
  {
    "text": "one of the themes that matt talked about at the end of his presentation it's really about taking away some of",
    "start": "152239",
    "end": "157599"
  },
  {
    "text": "that undifferentiated heavy lifting so if you want to take a php application we're going to show you this in the demo",
    "start": "157599",
    "end": "163040"
  },
  {
    "text": "with a sample one if you wanted to take a sample php application deploy it in a highly available way",
    "start": "163040",
    "end": "168640"
  },
  {
    "text": "very very straightforward how you can do that so what does it look like how does it work well you basically create your",
    "start": "168640",
    "end": "176239"
  },
  {
    "text": "application ultimately in the example we're doing with php we're going to use git to push it out",
    "start": "176239",
    "end": "181360"
  },
  {
    "text": "into realistic bean store and elastic beans taught provisions everything from a dns name a cname in in",
    "start": "181360",
    "end": "188879"
  },
  {
    "text": "the route 53 dns service to creating an elastic load balancer which is our managed load balancing",
    "start": "188879",
    "end": "194239"
  },
  {
    "text": "service so launching those ec2 instances that are going to actually run the php code that you've developed",
    "start": "194239",
    "end": "200000"
  },
  {
    "text": "and then doing all the kind of underlying things from a point of automatically scaling making sure you've always got the right",
    "start": "200000",
    "end": "205599"
  },
  {
    "text": "number of instances so that you can achieve the high availability that you require if you do require high availability of",
    "start": "205599",
    "end": "210720"
  },
  {
    "text": "your application and then other things like notifications and alarms so you know what's going on and you can be",
    "start": "210720",
    "end": "215920"
  },
  {
    "text": "communicated too very easy for you to change those parameters on the fly we'll look at that in the demonstration",
    "start": "215920",
    "end": "221360"
  },
  {
    "text": "and the other key thing is although this takes away a lot of the work for you it doesn't remove access so when we",
    "start": "221360",
    "end": "227599"
  },
  {
    "text": "create a when we upload an application we push it out with git you can still connect to that underlying ec2 instance and use the",
    "start": "227599",
    "end": "233519"
  },
  {
    "text": "same kind of commands you're used to using to manage that this just makes some of this stuff easier so you don't have to go and do",
    "start": "233519",
    "end": "239439"
  },
  {
    "text": "that autoscaling work yourself so if a picture tells a says it's worth",
    "start": "239439",
    "end": "245360"
  },
  {
    "text": "a thousand words a demo is worth somewhat more this is going to be something of a longish demo",
    "start": "245360",
    "end": "250799"
  },
  {
    "text": "so before i go into it i just want to recap what we're going to cover so we'll have a quick look in the",
    "start": "250799",
    "end": "256079"
  },
  {
    "text": "management console and specifically at the um the beanstalk part of the management console as with",
    "start": "256079",
    "end": "262479"
  },
  {
    "text": "many other aws services that you're used to everything that you do through the management console here you could also automate this using the",
    "start": "262479",
    "end": "268400"
  },
  {
    "text": "elastic beanstalk tools api kind of level we're then going to launch our initial application",
    "start": "268400",
    "end": "274000"
  },
  {
    "text": "and the focus of this session is not on an amazing php application i'm sure there are many of you in the audience who are much better at doing",
    "start": "274000",
    "end": "279759"
  },
  {
    "text": "that than i am the focus is how we can take this sample application launch it into our dev environment as we're going",
    "start": "279759",
    "end": "286240"
  },
  {
    "text": "to call it make some code changes that will push out there but then also going to launch",
    "start": "286240",
    "end": "291520"
  },
  {
    "text": "a production environment so showing how you can very easily have two environments we're gonna have a smaller one for development another one for our",
    "start": "291520",
    "end": "298720"
  },
  {
    "text": "production environment then we're gonna show you how we can customize that and then as we finish the demonstration show how we can very very",
    "start": "298720",
    "end": "304880"
  },
  {
    "text": "simply take an application that isn't highly available and make it highly available without having to do anything more than you know",
    "start": "304880",
    "end": "310960"
  },
  {
    "text": "a few mouse clicks in the console so without further ado we'll start the",
    "start": "310960",
    "end": "316560"
  },
  {
    "text": "demonstration now",
    "start": "316560",
    "end": "319440"
  },
  {
    "text": "let's just make sure you can see this so here we have the management console i've started off",
    "start": "321840",
    "end": "328479"
  },
  {
    "text": "in the ec2 tab i'm not running any instances at the moment because i've shut everything down in my account specifically for the purposes of this",
    "start": "328479",
    "end": "334080"
  },
  {
    "text": "demonstration we're going to go over here to the elastic beanstalk tab and that's where we're going to start",
    "start": "334080",
    "end": "339600"
  },
  {
    "text": "the demonstration so i don't have any beanstalk applications configured right now it's telling me",
    "start": "339600",
    "end": "345039"
  },
  {
    "text": "so we're going to start our first application and this is going to be a 64-bit amazon",
    "start": "345039",
    "end": "351039"
  },
  {
    "text": "linux 1 running php so the first thing we need to do is give the application a name so i'm going to",
    "start": "351039",
    "end": "356960"
  },
  {
    "text": "give it a fairly simple name here",
    "start": "356960",
    "end": "360479"
  },
  {
    "text": "aws nyc demo give it a description",
    "start": "362080",
    "end": "367840"
  },
  {
    "text": "confirm it's 64-bit running php we could upload an application here i'm just going to use the sample one which",
    "start": "368240",
    "end": "374240"
  },
  {
    "text": "is a kind of a you know slightly enhanced hello world one so once we've created the application",
    "start": "374240",
    "end": "379600"
  },
  {
    "text": "container itself the next thing it's going to ask us for is an environment name so if you think",
    "start": "379600",
    "end": "385120"
  },
  {
    "text": "in the context of this application that we're setting up we're also going to have multiple environments so we're going to have a",
    "start": "385120",
    "end": "390639"
  },
  {
    "text": "development environment where we might be doing our testing we're also going to have a production environment which we would later use",
    "start": "390639",
    "end": "396240"
  },
  {
    "text": "for production users coming in to our website so i'm going to call this",
    "start": "396240",
    "end": "401520"
  },
  {
    "text": "aws nyc demo dev and it gives me an option here to check",
    "start": "401520",
    "end": "406960"
  },
  {
    "text": "the availability of that cname luckily for us and the demo it's available we'll also give that a description",
    "start": "406960",
    "end": "414639"
  },
  {
    "text": "then it's going to ask me a few more questions so first of all what's the instance type i want to choose so i don't need anything particularly",
    "start": "420000",
    "end": "425599"
  },
  {
    "text": "large for my dev environment so i'm going to choose from this drop-down list here that i want an m1 small",
    "start": "425599",
    "end": "433039"
  },
  {
    "text": "i'm going to put my key pair in which is what i'll later use if i want to ssh into that instance to configure it",
    "start": "433039",
    "end": "440479"
  },
  {
    "text": "i'm going to put an email address in which we've got one configured here of aws nyc demo gmail",
    "start": "440479",
    "end": "448319"
  },
  {
    "text": "and the other really interesting thing here is we're going to give it an application health check url so this is",
    "start": "448319",
    "end": "453360"
  },
  {
    "text": "something that you would define based on how you've deployed your application you might have a best practice for making sure that that that health check",
    "start": "453360",
    "end": "459520"
  },
  {
    "text": "url is only going to be there when you've done some stuff to check the health of your application so we're going to give it a simple name here",
    "start": "459520",
    "end": "465680"
  },
  {
    "text": "of healthcheck.htm",
    "start": "465680",
    "end": "470479"
  },
  {
    "text": "so it's giving us an option here to verify what we what we've selected",
    "start": "473039",
    "end": "478400"
  },
  {
    "text": "i'm going to click finish it'll take a second and now it's starting to create the application",
    "start": "478400",
    "end": "486080"
  },
  {
    "text": "so what's it actually doing well one of the things that i spoke about with beanstalk before is this is taking away heavy lifting work",
    "start": "486080",
    "end": "492000"
  },
  {
    "text": "from you it's not taking away control and it's not totally abstracting those resources so that you lose control of",
    "start": "492000",
    "end": "497360"
  },
  {
    "text": "them so we look in the management console here it's giving us some status if we look at the",
    "start": "497360",
    "end": "502800"
  },
  {
    "text": "handy tab to look at here for the environment details is the events tab and that tells us exactly what's going",
    "start": "502800",
    "end": "508319"
  },
  {
    "text": "on here so we scroll down we can see an sns topic has been created we can see the auto scaling",
    "start": "508319",
    "end": "514000"
  },
  {
    "text": "activities have been done we can see ec2 instances are coming up",
    "start": "514000",
    "end": "519120"
  },
  {
    "text": "if i go into my inbox here i can see a notification that's come in",
    "start": "519120",
    "end": "524800"
  },
  {
    "text": "automatically being signed up to subscribe to this topic for notifications of what's going on in the environment so i'm going to confirm",
    "start": "524800",
    "end": "530720"
  },
  {
    "text": "my subscription for that",
    "start": "530720",
    "end": "535839"
  },
  {
    "text": "then back in the console if we went to look at the ec2 tab here we're going to see all the things that it's talking about those instances",
    "start": "536560",
    "end": "543120"
  },
  {
    "text": "security groups load balancers and so on are going to be created so we'll have a look at those in a second so we've got one",
    "start": "543120",
    "end": "550720"
  },
  {
    "text": "running instance we'll probably see the instances i was working with before no they've gone so we have our running instance that's",
    "start": "550720",
    "end": "556000"
  },
  {
    "text": "on the way up if we went to look at the load balancers here as well we would see here",
    "start": "556000",
    "end": "563279"
  },
  {
    "text": "a low balance has been created just for this application so i could have done those things manually i could have created the auto scaling launch config",
    "start": "563279",
    "end": "569839"
  },
  {
    "text": "i could have created the auto scaling groups myself but this has done that work for me and made it very very straightforward",
    "start": "569839",
    "end": "577200"
  },
  {
    "text": "so if we go back to elastic beanstalk let's see where that's got up to it's probably going to take a couple more minutes before that application's",
    "start": "577200",
    "end": "583920"
  },
  {
    "text": "ready for us to do any um demonstration with so in the meantime i'm going to talk a little bit more about what we're going to do from a",
    "start": "583920",
    "end": "589760"
  },
  {
    "text": "deployment point of view with the application so yeah this is still doing work with ec2 instance what i have on my local",
    "start": "589760",
    "end": "596560"
  },
  {
    "text": "machine here very very simple get repository set up",
    "start": "596560",
    "end": "602079"
  },
  {
    "text": "i'll just make sure we resize this",
    "start": "602560",
    "end": "606640"
  },
  {
    "text": "so into that repository i'm going to copy the sample php the kind of the base application which i'm going to modify a",
    "start": "613360",
    "end": "618480"
  },
  {
    "text": "little bit later on",
    "start": "618480",
    "end": "621360"
  },
  {
    "text": "so now i can see we've got a three couple of files all pretty basic stuff when you see this it's going to be a fairly simple hello world type of",
    "start": "628880",
    "end": "635200"
  },
  {
    "text": "application but then the other thing that's interesting is we're going to do a git aws.config",
    "start": "635200",
    "end": "641279"
  },
  {
    "text": "this is where we're going to configure git on my laptop to connect to the service that we're running as part of elastic beanstalk",
    "start": "641279",
    "end": "647760"
  },
  {
    "text": "so you've seen my keys here don't worry they're going to be invalidated by the end of the demonstration so you're not",
    "start": "647760",
    "end": "652800"
  },
  {
    "text": "going to be able to change my application we're going to have this in the us east region at this point",
    "start": "652800",
    "end": "659519"
  },
  {
    "text": "we don't need to change the host from an aws point of view but what we do need to do is first of all give it the application name we're going to use and",
    "start": "659519",
    "end": "665519"
  },
  {
    "text": "then secondly we'll give it the environment name so we'll verify that we're doing the right",
    "start": "665519",
    "end": "671120"
  },
  {
    "text": "thing here so the application it's got a p first initial of my name then it's aws nyc demo",
    "start": "671120",
    "end": "679519"
  },
  {
    "text": "and then we need the environment so right now we're going to be pushing our code into the dev environment",
    "start": "684320",
    "end": "691600"
  },
  {
    "text": "which is dev and we'll just go back in here to verify aws nyc demo dev which is right",
    "start": "695680",
    "end": "703839"
  },
  {
    "text": "and then once that's done when the environment comes up it's going to have",
    "start": "704000",
    "end": "709279"
  },
  {
    "text": "the application ready so it'll have the baseline thing there so we can push some updates to it which",
    "start": "709279",
    "end": "714560"
  },
  {
    "text": "we'll do in a second so we'll just see where where this environment has got to from a timing point of view",
    "start": "714560",
    "end": "722079"
  },
  {
    "text": "so it's still adding that instance and we can look at the events tab to see exactly what's going on",
    "start": "722160",
    "end": "728240"
  },
  {
    "text": "in the meantime i'm going to just add those files um do that in a second",
    "start": "728800",
    "end": "736560"
  },
  {
    "text": "so one thing we can do in parallel here so the demo environment we've got here it's giving us some status now let's see",
    "start": "736560",
    "end": "743120"
  },
  {
    "text": "if it sends us any emails just give us some notifications that",
    "start": "743120",
    "end": "748639"
  },
  {
    "text": "it's added ec2 instances to the environment we only want one at the moment we're not highly available yet we've just got one",
    "start": "748639",
    "end": "754959"
  },
  {
    "text": "m1 small ec2 instance that's running so it's telling us it's adding that particular",
    "start": "754959",
    "end": "760000"
  },
  {
    "text": "instance and we've got red now any idea why that",
    "start": "760000",
    "end": "765120"
  },
  {
    "text": "red icon's there yes very good someone said the health check so deliberately i don't want my",
    "start": "765120",
    "end": "771440"
  },
  {
    "text": "application to be exposed just yet because it's not ready so in the sample php application there",
    "start": "771440",
    "end": "777200"
  },
  {
    "text": "is no health check file built in and i haven't pushed one up there so the application health is red",
    "start": "777200",
    "end": "782399"
  },
  {
    "text": "because i said to it i want you to use healthcheck.htm as a health check and that file doesn't exist at this",
    "start": "782399",
    "end": "787680"
  },
  {
    "text": "point so our application isn't going to be exposed in any kind of half-baked way to people that we don't want to see it",
    "start": "787680",
    "end": "794480"
  },
  {
    "text": "before we we edit the health check i also just want to show you that if we looked at the ec2 tab of the",
    "start": "794480",
    "end": "800399"
  },
  {
    "text": "console and we went to look at this instance",
    "start": "800399",
    "end": "804399"
  },
  {
    "text": "we can see that instance is running let's see if we can connect to it",
    "start": "811440",
    "end": "817279"
  },
  {
    "text": "so we're going to connect with a standalone ssh client",
    "start": "818160",
    "end": "829839"
  },
  {
    "text": "so there's my ami there's the underlying ec2 instance which i can control the way i would do that normally if i went to",
    "start": "831040",
    "end": "836399"
  },
  {
    "text": "have a look in the um where the html is configured i can see",
    "start": "836399",
    "end": "842399"
  },
  {
    "text": "there's an index.php in info.php very much similar to what i have on my local repository it's not exposed yet because",
    "start": "842399",
    "end": "848800"
  },
  {
    "text": "the healthcheck file's not there so the next thing we're going to do is push out that healthcheck file",
    "start": "848800",
    "end": "856800"
  },
  {
    "text": "so i'm going to go into my um repository here there is no health check",
    "start": "856800",
    "end": "862240"
  },
  {
    "text": "file so we'll create one",
    "start": "862240",
    "end": "870000"
  },
  {
    "text": "need to put anything in it healthy for now",
    "start": "870000",
    "end": "874639"
  },
  {
    "text": "you know add all that to the repository and commit it",
    "start": "876959",
    "end": "884160"
  },
  {
    "text": "so right now if we go back into um elastic beanstalk just because i want you to see the interaction we're going to see between git",
    "start": "884160",
    "end": "890079"
  },
  {
    "text": "and beanstalk here's my environment it's still it's red someone said it was",
    "start": "890079",
    "end": "896560"
  },
  {
    "text": "it was the health check and we can also see if we look in here we've got an information message from beanstalk which is telling us that",
    "start": "896560",
    "end": "902800"
  },
  {
    "text": "our health check might be misconfigured in this case it's deliberately misconfigured because we haven't pushed the file up there",
    "start": "902800",
    "end": "908000"
  },
  {
    "text": "so let's change that",
    "start": "908000",
    "end": "913839"
  },
  {
    "text": "so we've pushed that up and if you look closely at the screen now you'll see that it's telling us an environment",
    "start": "918000",
    "end": "923199"
  },
  {
    "text": "update is starting so it knows that code's been pushed in and if we refresh this it'll tell us",
    "start": "923199",
    "end": "928560"
  },
  {
    "text": "first of all it's going to take a couple of seconds for all of the ec2 instances in my case there's only one",
    "start": "928560",
    "end": "934000"
  },
  {
    "text": "but it's going to take a few moments for the ec2 instances to pull that code down and then we'll at some point see the",
    "start": "934000",
    "end": "940240"
  },
  {
    "text": "application go healthy so i'll give it i'll give it a minute or so to oh it's gone green already",
    "start": "940240",
    "end": "945360"
  },
  {
    "text": "so we can look at the overview now start this link and here we have congratulations",
    "start": "945360",
    "end": "950480"
  },
  {
    "text": "the the basic health check page is there if we wanted to make a simple change to that",
    "start": "950480",
    "end": "956000"
  },
  {
    "text": "we go back into our repository edit the index file",
    "start": "956000",
    "end": "961600"
  },
  {
    "text": "edit this text here",
    "start": "961680",
    "end": "969839"
  },
  {
    "text": "push that up and again if we go back to the management console we'll see again the",
    "start": "979680",
    "end": "985199"
  },
  {
    "text": "same update sequence is happening it's telling us the update is on it'll take a couple of seconds for the um the instances to pull the code down",
    "start": "985199",
    "end": "992160"
  },
  {
    "text": "this is going to be slightly more quick than the health check file because there are some more dependencies for the health check than",
    "start": "992160",
    "end": "997839"
  },
  {
    "text": "just updating one um one piece of php this is green now and if we went back we'd see you know",
    "start": "997839",
    "end": "1005360"
  },
  {
    "text": "the one word changed that page so that's our first environment setup for dev so the next",
    "start": "1005360",
    "end": "1013519"
  },
  {
    "text": "thing we're going to do is launch another environment because we want something a little bit different for our production environment here",
    "start": "1013519",
    "end": "1019199"
  },
  {
    "text": "so we'll go back into the beanstalk environment here i'm going to say launch",
    "start": "1019199",
    "end": "1024480"
  },
  {
    "text": "a new environment so we have one application here that contains more one or more",
    "start": "1024480",
    "end": "1029678"
  },
  {
    "text": "environments this one we're going to call p aws nyc dash demo prod",
    "start": "1029679",
    "end": "1037280"
  },
  {
    "text": "for production we get the same thing to check the availability of the dns name it's available we're going to give it a",
    "start": "1037280",
    "end": "1043199"
  },
  {
    "text": "description and for now we'll choose this is going",
    "start": "1043199",
    "end": "1048960"
  },
  {
    "text": "to have the same first release piece of code and it's going to be php",
    "start": "1048960",
    "end": "1056320"
  },
  {
    "text": "we get some similar choices here about the instance size i'm going to choose here that i want this to be an m1 large because i've decided based",
    "start": "1056480",
    "end": "1063520"
  },
  {
    "text": "on analysis of my application that i want a larger instance size keypair is going to be the same not necessarily a best practice but",
    "start": "1063520",
    "end": "1070240"
  },
  {
    "text": "that's what we're going to do for the demo put the same email address in and the",
    "start": "1070240",
    "end": "1076799"
  },
  {
    "text": "same health check",
    "start": "1076799",
    "end": "1081840"
  },
  {
    "text": "so now we've got a second environment launching we could see the same kind of things if we went to the details there",
    "start": "1086080",
    "end": "1091919"
  },
  {
    "text": "the events that are going on it's created a load balancer it's created notifications if we go into our email",
    "start": "1091919",
    "end": "1097360"
  },
  {
    "text": "account here we see a bunch of notifications some of them were the results of the deployment",
    "start": "1097360",
    "end": "1102400"
  },
  {
    "text": "that we did before to the the dev environment others are going to ultimately be a subscription",
    "start": "1102400",
    "end": "1108240"
  },
  {
    "text": "notification so we've got another subscription here i'm using the same email address for both environments just because it's a",
    "start": "1108240",
    "end": "1113280"
  },
  {
    "text": "little bit simpler to demo not something that we would necessarily do in um in the real world and we're just going",
    "start": "1113280",
    "end": "1120160"
  },
  {
    "text": "to leave that environment cooking at this point but while we're doing that i want to show",
    "start": "1120160",
    "end": "1125200"
  },
  {
    "text": "you some other things in terms of what you can tweak and what you can configure with elastic beanstalk",
    "start": "1125200",
    "end": "1132480"
  },
  {
    "text": "so we know for the dev environment here pretty simple we've got one ec2 instance we've got a load balancer",
    "start": "1133039",
    "end": "1138480"
  },
  {
    "text": "created nothing to load balance across for from the point of view of more than one instance we'll show you",
    "start": "1138480",
    "end": "1144000"
  },
  {
    "text": "how you can do that from a high availability point of view in a few moments but what we can look at doing here",
    "start": "1144000",
    "end": "1151840"
  },
  {
    "text": "is editing the configuration so one of the things matt was talking about before were things like load balancers things",
    "start": "1151919",
    "end": "1158080"
  },
  {
    "text": "like auto scaling and so on you can do that i could have done everything i showed you today with with",
    "start": "1158080",
    "end": "1163120"
  },
  {
    "text": "elastic beanstalk myself but instead all i had to do was to tell it ultimately i wanted a php application",
    "start": "1163120",
    "end": "1168960"
  },
  {
    "text": "what size instances i want how many of them i potentially want from here and this will do all of that",
    "start": "1168960",
    "end": "1174160"
  },
  {
    "text": "work so on the first tab we have the ec2 instance types that are there so i could change that",
    "start": "1174160",
    "end": "1180559"
  },
  {
    "text": "and the environment will be resized for me i can choose ec2 security groups i could change the key pair",
    "start": "1180559",
    "end": "1187280"
  },
  {
    "text": "i could change the custom i could change the ami that's used so we have a default ami amis being our kind of template",
    "start": "1187280",
    "end": "1193440"
  },
  {
    "text": "machines that you launch from which you launch instances so we could have a custom ami if you had specific customizations related to your",
    "start": "1193440",
    "end": "1200320"
  },
  {
    "text": "application you could customize that ami and change that and if you were using the command line tools",
    "start": "1200320",
    "end": "1205760"
  },
  {
    "text": "you could do that when you create the environment instead of having to do it later some of the other things that we can configure here the load balancer",
    "start": "1205760",
    "end": "1212720"
  },
  {
    "text": "so we're not using https for this website because we don't need to we can choose our application health",
    "start": "1212720",
    "end": "1219039"
  },
  {
    "text": "check url here which is the same for both applications we could look at stickiness if we needed to do that for the application",
    "start": "1219039",
    "end": "1225840"
  },
  {
    "text": "one of the really interesting and really powerful things though is this auto scaling tab so here right now i've said the the",
    "start": "1225840",
    "end": "1233039"
  },
  {
    "text": "minimum number of instances i want is one so we're just going to go with one at any one point unless it scales up for a",
    "start": "1233039",
    "end": "1239280"
  },
  {
    "text": "particular reason i could choose to have a minimum of two if i perhaps wanted to have them balanced for high",
    "start": "1239280",
    "end": "1244880"
  },
  {
    "text": "availability across different availability zones so right now i've just chosen to have this",
    "start": "1244880",
    "end": "1250000"
  },
  {
    "text": "deployed in one availability zone and then we also have a scaling trigger",
    "start": "1250000",
    "end": "1256159"
  },
  {
    "text": "so this in the case of particular amount of load or demand on your your application the default",
    "start": "1256159",
    "end": "1261200"
  },
  {
    "text": "here is network out the whole bunch of different metrics you could choose you could base it on cpu utilization and so on",
    "start": "1261200",
    "end": "1267039"
  },
  {
    "text": "all those kind of things are going to be based on the profile of your application which you'll know through the development process",
    "start": "1267039",
    "end": "1274159"
  },
  {
    "text": "what we're going to demonstrate now particularly for here under this container tab we get some",
    "start": "1274159",
    "end": "1279840"
  },
  {
    "text": "fairly obvious settings like the document route the the memory limit for it and so on but",
    "start": "1279840",
    "end": "1285200"
  },
  {
    "text": "what's really interesting here is this environment properties section so say for example our php application",
    "start": "1285200",
    "end": "1291039"
  },
  {
    "text": "is going to connect to a back end database it might be a mysql database running on a standalone ec2 instance",
    "start": "1291039",
    "end": "1296480"
  },
  {
    "text": "it might be an rds mysql instance so how do you pass those kind of parameters through",
    "start": "1296480",
    "end": "1301600"
  },
  {
    "text": "so one of the things being stored does for you is let you put in some of these parameters here so i'm going to put in my access key",
    "start": "1301600",
    "end": "1311280"
  },
  {
    "text": "my secret key and here and this is you know",
    "start": "1311360",
    "end": "1316640"
  },
  {
    "text": "customizable you need to know how your application is going to handle that on the other side so i'm going to say that this is um",
    "start": "1316640",
    "end": "1322240"
  },
  {
    "text": "dev environment um and say this is the customer",
    "start": "1322240",
    "end": "1329840"
  },
  {
    "text": "database here's something interesting here so you can put those parameters in and",
    "start": "1329840",
    "end": "1335440"
  },
  {
    "text": "then later you can retrieve them from your application and take advantage of that dynamically so if we apply these changes",
    "start": "1335440",
    "end": "1343440"
  },
  {
    "text": "we'll see the same kind of update thing that's going on for the the dev environment there so that'll take a few",
    "start": "1344080",
    "end": "1349440"
  },
  {
    "text": "seconds to complete so how do we get those environment variables so here's a sample",
    "start": "1349440",
    "end": "1355360"
  },
  {
    "text": "bit of php and we describe this in our documentation so it's not it's not complicated",
    "start": "1355360",
    "end": "1360640"
  },
  {
    "text": "so we can do a get cfg verb in php with those names that we define and then",
    "start": "1360640",
    "end": "1365760"
  },
  {
    "text": "use those parameters as as however we might wish to do that here i've i've built",
    "start": "1365760",
    "end": "1371039"
  },
  {
    "text": "this simple php page that's just going to display them so let's see the environment let's see",
    "start": "1371039",
    "end": "1376640"
  },
  {
    "text": "if the environment's ready again so the environment's ready but i don't yet have any php that's going to do anything with those variables",
    "start": "1376640",
    "end": "1383440"
  },
  {
    "text": "so what i'm going to do is add a file up that file",
    "start": "1383440",
    "end": "1389840"
  },
  {
    "text": "oops",
    "start": "1405280",
    "end": "1407600"
  },
  {
    "text": "so we've add that push that out",
    "start": "1411520",
    "end": "1417840"
  },
  {
    "text": "we see the same update happening we'd be getting an email notification what's going on so take a couple of seconds for the ec2 in",
    "start": "1418480",
    "end": "1425039"
  },
  {
    "text": "this case the one ec2 instance to pick that up let's see if it's back ready",
    "start": "1425039",
    "end": "1431360"
  },
  {
    "text": "just take a moment and then once that's um once that's done let's see if we can",
    "start": "1431360",
    "end": "1436400"
  },
  {
    "text": "load the um environment file",
    "start": "1436400",
    "end": "1444080"
  },
  {
    "text": "and then we there we have it so there's a very very simple nothing no rocket science here from the php",
    "start": "1444080",
    "end": "1449520"
  },
  {
    "text": "point of view but this does mean it's very easy to pass dynamic configuration data straight from either the aws management",
    "start": "1449520",
    "end": "1456159"
  },
  {
    "text": "console or the elastic beanstalk command line tools to to then configure your application to talk to a particular database or do",
    "start": "1456159",
    "end": "1463039"
  },
  {
    "text": "do something a bit different um so now we've done that i'm going to do",
    "start": "1463039",
    "end": "1468159"
  },
  {
    "text": "another couple of other things in the in the console here so for my production environment i might not necessarily want",
    "start": "1468159",
    "end": "1474320"
  },
  {
    "text": "to use a cname that's pointing something to uh you know name that has elastic bean stalking i might want to use my regular",
    "start": "1474320",
    "end": "1479919"
  },
  {
    "text": "domain name so if i went in to look at the ec2 configuration here",
    "start": "1479919",
    "end": "1487840"
  },
  {
    "text": "i'll find that there's a load balancer that's being created for my production environment as well as my dev environment",
    "start": "1488720",
    "end": "1495440"
  },
  {
    "text": "so there are two load balancers now so if i go over to the route 53 i nearly said roots but",
    "start": "1496960",
    "end": "1503200"
  },
  {
    "text": "i've just about managed to kick that habit after seven years um if i went to look at these record",
    "start": "1503200",
    "end": "1508480"
  },
  {
    "text": "sets for this domain that i've got configured here i'm going to create a record which i'm",
    "start": "1508480",
    "end": "1514080"
  },
  {
    "text": "going to call nyc demo and i see hyphen demo for",
    "start": "1514080",
    "end": "1519840"
  },
  {
    "text": "consistency and say that this is an alias i'm going to target this to my production",
    "start": "1519840",
    "end": "1525120"
  },
  {
    "text": "load balancer so my customers coming in now if they typed in nyc.demo.gover.com",
    "start": "1525120",
    "end": "1530640"
  },
  {
    "text": "they will go there we'll create that record if we go back to elastic beanstalk",
    "start": "1530640",
    "end": "1537039"
  },
  {
    "text": "there's one more thing that we have to do before we're going to be healthy it's the health check for the production environment because that's ready in the",
    "start": "1537039",
    "end": "1543120"
  },
  {
    "text": "same way that the other one was so the first thing i have to do is just reconfigure my git repository so it's",
    "start": "1543120",
    "end": "1548480"
  },
  {
    "text": "going to um it's going to push the files out there so we'll just make some changes here",
    "start": "1548480",
    "end": "1557840"
  },
  {
    "text": "so i've created a health check file with different wording in in this case i also need to run the",
    "start": "1569440",
    "end": "1575919"
  },
  {
    "text": "config command so the keys are staying the same you know not necessarily a best practice but for the purposes of this demo i'm",
    "start": "1575919",
    "end": "1581600"
  },
  {
    "text": "using my my standard credentials for this same region same host here now remember the",
    "start": "1581600",
    "end": "1587919"
  },
  {
    "text": "application the container is the same here we have two environments inside the container so the application i'm going",
    "start": "1587919",
    "end": "1593840"
  },
  {
    "text": "to put here p aws dash nyc dash demo dash prod",
    "start": "1593840",
    "end": "1600480"
  },
  {
    "text": "i've got to commit",
    "start": "1606960",
    "end": "1613840"
  },
  {
    "text": "so now we see the same kind of thing that's going to happen in the um production environment those ec2 that one ec2 instance",
    "start": "1617520",
    "end": "1623760"
  },
  {
    "text": "is going to go and get that code then shortly we'll see that this environment is healthy",
    "start": "1623760",
    "end": "1629120"
  },
  {
    "text": "so in the meantime now that we've kind of got our dev environment and we've got the production environment ready as well and we've successfully pushed code out",
    "start": "1629120",
    "end": "1635279"
  },
  {
    "text": "there what we're going to do is change the configuration for the the dev environment because",
    "start": "1635279",
    "end": "1641039"
  },
  {
    "text": "i've decided now that we're not going to use small instance types for the level of testing that we're doing we've decided that micros are going to",
    "start": "1641039",
    "end": "1647200"
  },
  {
    "text": "be appropriate so i'm going to change that instance type there down to t1 micro",
    "start": "1647200",
    "end": "1652480"
  },
  {
    "text": "i'll warn us that you know there's going to be a little bit of a little bit of downtime while that instance is replaced",
    "start": "1652480",
    "end": "1660240"
  },
  {
    "text": "and it'll just take a few seconds for the um the production environment to go from red to green because when the health check file goes up",
    "start": "1663279",
    "end": "1668960"
  },
  {
    "text": "not only does that file have to be pushed and get to the instance but then the the propagation of the health check",
    "start": "1668960",
    "end": "1674960"
  },
  {
    "text": "has to happen so we'll come back to we'll come back to that if we need to if we looked in the ec2 tab right now",
    "start": "1674960",
    "end": "1682480"
  },
  {
    "text": "once i've made that change to the the dev environment again remembering that this although this takes away a lot of the the",
    "start": "1682480",
    "end": "1688399"
  },
  {
    "text": "undifferentiated heavy lifting from you it doesn't hide what's going on",
    "start": "1688399",
    "end": "1694080"
  },
  {
    "text": "so if we were going to see a change in what's going on from an instance point of view we would see that happening here so we'd",
    "start": "1694080",
    "end": "1700000"
  },
  {
    "text": "see an m1 dot small would eventually terminate and be replaced by a t1 micro and the m1 larges are what's running my",
    "start": "1700000",
    "end": "1707520"
  },
  {
    "text": "core applications let's see if the production environment has got healthy yet",
    "start": "1707520",
    "end": "1713600"
  },
  {
    "text": "yes no the health check the the health check should be pushed yeah the health checks put the health checks up here um so this application",
    "start": "1714799",
    "end": "1722159"
  },
  {
    "text": "the dev environment now has gone to yellow because the um the instance is being",
    "start": "1722159",
    "end": "1727520"
  },
  {
    "text": "replaced if we go back to the ec2 tab now",
    "start": "1727520",
    "end": "1731760"
  },
  {
    "text": "what we will see should probably see three we'll probably see three instances now one will be one will be shutting down",
    "start": "1734720",
    "end": "1742000"
  },
  {
    "text": "and one will probably be pending yeah so we've got one pending in fact the other one's been terminated already",
    "start": "1742000",
    "end": "1747760"
  },
  {
    "text": "so now out of those three instances the large one is the production environment single instance the the micro is the dev",
    "start": "1747760",
    "end": "1754799"
  },
  {
    "text": "environment one running instance and the terminated one is the one from the environment before",
    "start": "1754799",
    "end": "1759919"
  },
  {
    "text": "we've made the change",
    "start": "1759919",
    "end": "1767840"
  },
  {
    "text": "i'm just going to re-push out the health check um for the production environment because it should",
    "start": "1768559",
    "end": "1775600"
  },
  {
    "text": "yes i did add the health check let me just check what i called it",
    "start": "1775600",
    "end": "1781840"
  },
  {
    "text": "not sure why that's not there one thing i'll do before i am before that environment gets marked as",
    "start": "1784320",
    "end": "1789600"
  },
  {
    "text": "healthy is i also want to show how straightforward it is to make it highly available so right now",
    "start": "1789600",
    "end": "1795279"
  },
  {
    "text": "we've got one instance only running in the production environment if we go over here to auto scaling our",
    "start": "1795279",
    "end": "1802080"
  },
  {
    "text": "minimum instance count right now is one so we can never have we're not going to be able to have more",
    "start": "1802080",
    "end": "1807520"
  },
  {
    "text": "than one instance in there so we're now going to choose to have any two availability",
    "start": "1807520",
    "end": "1812960"
  },
  {
    "text": "zones in here so when i apply this now",
    "start": "1812960",
    "end": "1820559"
  },
  {
    "text": "the environment update is going to start if i go to look at the details of that environment",
    "start": "1820640",
    "end": "1828159"
  },
  {
    "text": "we'll see configuration is happening let's just see what's going on from the point of view of the health check url one way of",
    "start": "1830000",
    "end": "1835600"
  },
  {
    "text": "course i can debug this",
    "start": "1835600",
    "end": "1838720"
  },
  {
    "text": "is i went into the ec2 tab what we were saying before about being able to ssh into these instances",
    "start": "1840720",
    "end": "1847520"
  },
  {
    "text": "it means that if i find the production one that's relevant",
    "start": "1847919",
    "end": "1854080"
  },
  {
    "text": "you see by the way now going from one az to two ac's we now have two m1 large instances if we looked at the",
    "start": "1856080",
    "end": "1862240"
  },
  {
    "text": "properties for them we'd see that one of them is in us east 1a one of our availability zones and the",
    "start": "1862240",
    "end": "1869200"
  },
  {
    "text": "other large one is in us east 1d so with one parameter change that we've made in the console",
    "start": "1869200",
    "end": "1874880"
  },
  {
    "text": "we've been able to make that from having one instance in one availability zone to two which are low bounce across two",
    "start": "1874880",
    "end": "1880240"
  },
  {
    "text": "availability zones i'm just gonna have a quick look at this one here",
    "start": "1880240",
    "end": "1893840"
  },
  {
    "text": "yeah well i mean so we get what's happened here the health check file hasn't been propagated probably because i have done something",
    "start": "1915760",
    "end": "1921279"
  },
  {
    "text": "wrong with get here so let's see if we can fix that",
    "start": "1921279",
    "end": "1934480"
  },
  {
    "text": "interesting maybe that's what i forgot to do",
    "start": "1934480",
    "end": "1949840"
  },
  {
    "text": "so we're in a kind of slightly stuck environment here because we're just about going from one instance to having two in both",
    "start": "1961840",
    "end": "1967200"
  },
  {
    "text": "availability zones so we'd still be able to connect to one of them let's see if we can get to",
    "start": "1967200",
    "end": "1972399"
  },
  {
    "text": "the healthy instance probably not because it's still not healthy um i'm going to give it a second",
    "start": "1972399",
    "end": "1980159"
  },
  {
    "text": "but we're i don't want to run behind with the session that's following",
    "start": "1980159",
    "end": "1991840"
  },
  {
    "text": "fine so the environment update has been completed successfully so we do have two instances",
    "start": "1994799",
    "end": "2000399"
  },
  {
    "text": "my git skills are making sure that i can't get that file there i'm not going to try troubleshooting that on the fly but we did see with the other",
    "start": "2000399",
    "end": "2006399"
  },
  {
    "text": "environment how this is running successfully the health check was propagated there",
    "start": "2006399",
    "end": "2011919"
  },
  {
    "text": "we'll fix the thing later to show you during the the discussion that we have with the other",
    "start": "2011919",
    "end": "2017039"
  },
  {
    "text": "solution architects we just want to finish out by briefly talking about some of the key features",
    "start": "2017039",
    "end": "2022960"
  },
  {
    "text": "that uh elastic beam store offers so it supports both java as well as php now iim resource im",
    "start": "2022960",
    "end": "2030399"
  },
  {
    "text": "support for configuring access to resources in beanstalk and it supports all of that kind of configuration you store",
    "start": "2030399",
    "end": "2036240"
  },
  {
    "text": "you saw across a vc2 so managing instances managing auto scaling managing",
    "start": "2036240",
    "end": "2041519"
  },
  {
    "text": "elastic load balancing and some of the best practices we'd recommend if you're going to do it the ease with which you can deploy an",
    "start": "2041519",
    "end": "2047760"
  },
  {
    "text": "application across multiple availability zones is very very easy to do we saw that we had",
    "start": "2047760",
    "end": "2053358"
  },
  {
    "text": "another instance launch and another load balancer the once that health check file gets propagated those will both be live",
    "start": "2053359",
    "end": "2059280"
  },
  {
    "text": "and able to serve traffic so you might also want to consider terminating ssl connections at the elb",
    "start": "2059280",
    "end": "2065760"
  },
  {
    "text": "to take load off your applications and also depending on the nature of your application perhaps created custom ami",
    "start": "2065760",
    "end": "2071679"
  },
  {
    "text": "if there are specific configuration environments that you've got so if there are any questions or you want to see that final health check file",
    "start": "2071679",
    "end": "2078158"
  },
  {
    "text": "up there i'm here with a bunch of the other solution architects from new york we'll be in the the q a room at the end of the",
    "start": "2078159",
    "end": "2084320"
  },
  {
    "text": "presentation so please come and talk to us we'll happily continue the demo or show you any more things so",
    "start": "2084320",
    "end": "2089919"
  },
  {
    "text": "thanks for your time i'll hand over to radika for the next present thank you paul",
    "start": "2089919",
    "end": "2094960"
  },
  {
    "text": "can i just get a big round of applause for paul he actually coded live and demoed this live this is not easy",
    "start": "2096320",
    "end": "2101920"
  },
  {
    "text": "stuff thank you paul",
    "start": "2101920",
    "end": "2106640"
  }
]