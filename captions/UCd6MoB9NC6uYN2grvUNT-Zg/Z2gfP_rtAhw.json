[
  {
    "start": "0",
    "end": "78000"
  },
  {
    "text": "hello everybody and welcome to today's session on so you think you can architect",
    "start": "3360",
    "end": "9280"
  },
  {
    "text": "man this is huge have you seen we have more than 13 500 people at this conference it's a huge conference and",
    "start": "9280",
    "end": "16640"
  },
  {
    "text": "i'm very very glad to be here and uh introduce you to some interesting architectural concepts that my colleague",
    "start": "16640",
    "end": "22960"
  },
  {
    "text": "jan and i came up with so my name is constantin gonzalez i'm a solutions architect with aws in germany and in my",
    "start": "22960",
    "end": "29439"
  },
  {
    "text": "day-to-day job i help customers make the most out of our cloud services",
    "start": "29439",
    "end": "34640"
  },
  {
    "text": "so as constantine said my name is jan madsen i'm a solutions architect like constantine at aws in germany and we are",
    "start": "34640",
    "end": "42559"
  },
  {
    "text": "helping our customers architecting and implementing applications on aws",
    "start": "42559",
    "end": "50079"
  },
  {
    "text": "this is an architecting session so that actually before we can start architecting we need the system to",
    "start": "50079",
    "end": "56399"
  },
  {
    "text": "architect or whether we need a challenge to face and i'm very proud that we have",
    "start": "56399",
    "end": "61920"
  },
  {
    "text": "today here a customer of mine that faced some challenges and he will present to",
    "start": "61920",
    "end": "67439"
  },
  {
    "text": "you which challenges they faced and how they solved them welcome on stage michael",
    "start": "67439",
    "end": "74080"
  },
  {
    "start": "78000",
    "end": "135000"
  },
  {
    "text": "so today between the three of us we are going to show you how you can get some new ideas for your",
    "start": "78640",
    "end": "85759"
  },
  {
    "text": "architecture we'll give you some new ideas that you can employ in whatever architecture you you come up with",
    "start": "85759",
    "end": "91520"
  },
  {
    "text": "we're going to show you how to get more time by delegating away typical architecture problems",
    "start": "91520",
    "end": "98240"
  },
  {
    "text": "and we're going to help you worry less about security scalability and complexity",
    "start": "98240",
    "end": "104560"
  },
  {
    "text": "but before we dig into that let's give it over to michael well thanks constantine",
    "start": "104560",
    "end": "111040"
  },
  {
    "text": "thanks for having me here surprised to see so many fans of german television",
    "start": "111040",
    "end": "118320"
  },
  {
    "text": "so my name is michael i work for a company called poseem zadions which is a large german broadcaster and we did an",
    "start": "118719",
    "end": "124880"
  },
  {
    "text": "interesting show earlier this year now gonna tell you about that for a few minutes",
    "start": "124880",
    "end": "132080"
  },
  {
    "start": "135000",
    "end": "174000"
  },
  {
    "text": "so the show was called keep your light shining and before we speak about that let me",
    "start": "135840",
    "end": "141120"
  },
  {
    "text": "lose a few words on our company so presumes that is one of europe's largest broadcasters we're",
    "start": "141120",
    "end": "146160"
  },
  {
    "text": "doing lots of traditional linear stuff we have shows like the voice or germany's next top model which are i",
    "start": "146160",
    "end": "153120"
  },
  {
    "text": "guess quite known here in the u.s as well and we also do a lot of linear stuff and",
    "start": "153120",
    "end": "159920"
  },
  {
    "text": "in the last years we started combining linear programs with interactive online applications",
    "start": "159920",
    "end": "168000"
  },
  {
    "text": "and the show i'm talking about keep your eye shining was one of them",
    "start": "168000",
    "end": "173840"
  },
  {
    "text": "so the show the show was a live show and um we had nine candidates who would",
    "start": "174800",
    "end": "180640"
  },
  {
    "text": "perform one song everybody it's his own little piece of say 15 or 20 seconds",
    "start": "180640",
    "end": "186879"
  },
  {
    "text": "um eight rounds and after each round one candidate got kicked out",
    "start": "186879",
    "end": "192640"
  },
  {
    "text": "and the online voters were the only ones that could judge who would be knocked out",
    "start": "192640",
    "end": "200480"
  },
  {
    "start": "200000",
    "end": "240000"
  },
  {
    "text": "before we continue we'll have a quick look at the show",
    "start": "201200",
    "end": "207480"
  },
  {
    "text": "you can tonight",
    "start": "224640",
    "end": "231120"
  },
  {
    "text": "if i lose myself tonight",
    "start": "232560",
    "end": "237720"
  },
  {
    "start": "240000",
    "end": "265000"
  },
  {
    "text": "so what have you seen here uh so on first side it looks like a well",
    "start": "240560",
    "end": "247599"
  },
  {
    "text": "standard basic online voting right so it's a web application there's a facebook login you could give your vote",
    "start": "247599",
    "end": "255200"
  },
  {
    "text": "one vote per candidate and the result is somehow displayed as part of the live feed",
    "start": "255200",
    "end": "261280"
  },
  {
    "text": "so what's the big deal you might say well here it is first of all the whole show completely",
    "start": "261280",
    "end": "268080"
  },
  {
    "text": "depended on this live voting application so if the application doesn't work the show doesn't work either",
    "start": "268080",
    "end": "274720"
  },
  {
    "text": "then we're forced to develop and deliver the whole solution",
    "start": "274720",
    "end": "279840"
  },
  {
    "text": "within three months from the scratch and in parallel to that the whole tv show itself the whole show",
    "start": "279840",
    "end": "287199"
  },
  {
    "text": "concept was under heavy development so it was kind of a moving target that we",
    "start": "287199",
    "end": "292400"
  },
  {
    "text": "were aiming at and right before we were about to launch it",
    "start": "292400",
    "end": "297440"
  },
  {
    "text": "and do the first live session the live first live show a similar show in brazil uh",
    "start": "297440",
    "end": "303840"
  },
  {
    "text": "ended up in a complete disaster because the online voting uh couldn't stand uh",
    "start": "303840",
    "end": "309360"
  },
  {
    "text": "the traffic and right one week before we started the largest german public broadcaster",
    "start": "309360",
    "end": "315520"
  },
  {
    "text": "launched the show uh which also ended up in a sheer disaster again performance",
    "start": "315520",
    "end": "321440"
  },
  {
    "text": "issues so our guys uh in munich well got a bit nervous and and the pressure increased",
    "start": "321440",
    "end": "329840"
  },
  {
    "start": "331000",
    "end": "564000"
  },
  {
    "text": "and there is more challenges so one thing that is really specific for for these kinds of applications that",
    "start": "331440",
    "end": "338080"
  },
  {
    "text": "have to do with live and interactive tv is the so-called broadcast delays",
    "start": "338080",
    "end": "343680"
  },
  {
    "text": "those amongst you who still watch linear tv and i know the number is decreasing every day",
    "start": "343680",
    "end": "348960"
  },
  {
    "text": "i use this so when you see a live when you see a live game be it football whatever",
    "start": "348960",
    "end": "355039"
  },
  {
    "text": "sometimes it happens that your neighbor is cheering for for the goal",
    "start": "355039",
    "end": "360080"
  },
  {
    "text": "before you even haven't seen it right and um but so far so good but when it",
    "start": "360080",
    "end": "368400"
  },
  {
    "text": "comes to life interaction in terms of um voting for somebody something that is going on live and inserting those votes",
    "start": "368400",
    "end": "376000"
  },
  {
    "text": "into the live feed there's another issue because imagine when one of those candidates who is",
    "start": "376000",
    "end": "382080"
  },
  {
    "text": "performing his piece of the song that maybe takes 20 seconds starts singing it",
    "start": "382080",
    "end": "387280"
  },
  {
    "text": "takes seven seconds or even longer until you hear and see the first piece of sound on",
    "start": "387280",
    "end": "393520"
  },
  {
    "text": "your tv screen so then you listen you make up your mind then you decide to vote and then you",
    "start": "393520",
    "end": "399520"
  },
  {
    "text": "vote the performance is already over in the studio and the results have already been aired",
    "start": "399520",
    "end": "407039"
  },
  {
    "text": "right so you would have to send your vote back through time which is an issue",
    "start": "407039",
    "end": "413039"
  },
  {
    "text": "which would be a great service to build for amazon",
    "start": "413039",
    "end": "417199"
  },
  {
    "text": "then there is this load issue because you know in this use case",
    "start": "419440",
    "end": "426560"
  },
  {
    "text": "there is no such thing as auto scaling because when the show starts all the users are logging in",
    "start": "426560",
    "end": "433280"
  },
  {
    "text": "so it's from zero to well close to 100 percent performance and load so there is",
    "start": "433280",
    "end": "439520"
  },
  {
    "text": "no time to scale machine by machine you have to pre-warm and",
    "start": "439520",
    "end": "445440"
  },
  {
    "text": "you have to guess for how many people you have to pre-one because nobody knows you know it's in the ut tv format",
    "start": "445440",
    "end": "452960"
  },
  {
    "text": "it can be you know a huge success with millions of participants or disaster",
    "start": "452960",
    "end": "458319"
  },
  {
    "text": "with a few 10k so you can do calculations like okay might be 300 400k or something like that",
    "start": "458319",
    "end": "466080"
  },
  {
    "text": "but everybody you ask will tell you please prepare for a few millions",
    "start": "466080",
    "end": "474000"
  },
  {
    "text": "which is what we try to do and then there is this availability issue because in in traditional web",
    "start": "474000",
    "end": "480960"
  },
  {
    "text": "applications 99.999 whatsoever is is more than enough a few",
    "start": "480960",
    "end": "487039"
  },
  {
    "text": "minutes of downtime per month is fair even for especially for a new application right",
    "start": "487039",
    "end": "493120"
  },
  {
    "text": "but in this case it's tv it's broadcast so if the voting doesn't work the whole",
    "start": "493120",
    "end": "498240"
  },
  {
    "text": "show doesn't work you have to have a 100 availability there is no such thing as as build",
    "start": "498240",
    "end": "505360"
  },
  {
    "text": "measure learn improve in slight steps",
    "start": "505360",
    "end": "510000"
  },
  {
    "text": "so and and one thing that is also very specific and uh nearly broke our neck in this in this",
    "start": "510400",
    "end": "516959"
  },
  {
    "text": "in this project was the issue of connectivity",
    "start": "516959",
    "end": "522080"
  },
  {
    "text": "so when we had built this this whole application and we we set up this super",
    "start": "522080",
    "end": "527680"
  },
  {
    "text": "geo-redundant aws application then we went to the studio and we found",
    "start": "527680",
    "end": "534959"
  },
  {
    "text": "that the tv studio and the amazon cloud were linked together by one weak wi-fi connection",
    "start": "534959",
    "end": "545040"
  },
  {
    "text": "so the first thing we did was we went into a shop and bought an lte router",
    "start": "546800",
    "end": "553519"
  },
  {
    "text": "which saved our you know what because the wi-fi connection of course went down during the first show",
    "start": "553519",
    "end": "563000"
  },
  {
    "start": "564000",
    "end": "617000"
  },
  {
    "text": "so with all that in mind you may ask yourself how how would you build such an",
    "start": "564560",
    "end": "570480"
  },
  {
    "text": "application and um and the first and most important factor for me is and that's the my major",
    "start": "570480",
    "end": "575920"
  },
  {
    "text": "learning be as paranoid as you can be because as the famous vernier focal quote says",
    "start": "575920",
    "end": "583519"
  },
  {
    "text": "everything fails all the time whatever you build can potentially fail so",
    "start": "583519",
    "end": "589839"
  },
  {
    "text": "be prepared and keep it simple because if the application doesn't work on the ceo's blackberry and yes he's using a",
    "start": "589839",
    "end": "596399"
  },
  {
    "text": "blackberry then it's like it hasn't worked at all at least for you",
    "start": "596399",
    "end": "601920"
  },
  {
    "text": "as his employee and",
    "start": "601920",
    "end": "606959"
  },
  {
    "text": "after you have done all that then go to aws talk to these guys because they can do",
    "start": "606959",
    "end": "614000"
  },
  {
    "text": "the heavy lifting thanks when you've done all that",
    "start": "614000",
    "end": "619680"
  },
  {
    "start": "617000",
    "end": "629000"
  },
  {
    "text": "then it potentially works so thank you and over to you guys",
    "start": "619680",
    "end": "626399"
  },
  {
    "text": "thanks michael a lot now before we start we will dig a little bit",
    "start": "626399",
    "end": "633519"
  },
  {
    "start": "629000",
    "end": "650000"
  },
  {
    "text": "deeper in what such an application is doing and keep in mind a lot of what we are",
    "start": "633519",
    "end": "640399"
  },
  {
    "text": "talking about is not only available for such applications it will be available for everything what you're doing on the",
    "start": "640399",
    "end": "646880"
  },
  {
    "text": "aws cloud so let's recap what we heard in terms of",
    "start": "646880",
    "end": "652720"
  },
  {
    "start": "650000",
    "end": "724000"
  },
  {
    "text": "requirements and background we need to take care of the voting mechanics we need to make sure that",
    "start": "652720",
    "end": "657920"
  },
  {
    "text": "every user only gets one vote to cast and also we also need to figure out how to do vote aggregation how can we",
    "start": "657920",
    "end": "664560"
  },
  {
    "text": "aggregate those votes quickly so that the judges see the results in near real time",
    "start": "664560",
    "end": "669920"
  },
  {
    "text": "and also there's some time enforcement to take care about here because all of those votes are going to come in in the",
    "start": "669920",
    "end": "675360"
  },
  {
    "text": "small amount of time that the performer is singing their song which is only two and a half or three minutes",
    "start": "675360",
    "end": "682000"
  },
  {
    "text": "also keep in mind these are millions of users that's probably different from your typical web application not because",
    "start": "682000",
    "end": "688800"
  },
  {
    "text": "you have millions of users but because those millions of users are going to cast votes in a matter of minutes so",
    "start": "688800",
    "end": "694640"
  },
  {
    "text": "that poses some interesting scaling challenges and then there are the typical non-functional requirements everything",
    "start": "694640",
    "end": "701519"
  },
  {
    "text": "has to be secure again if you have millions of users knocking at your door you want to make sure that your",
    "start": "701519",
    "end": "706800"
  },
  {
    "text": "application better be bulletproof because you don't want anybody cheating on your voting statistics",
    "start": "706800",
    "end": "712480"
  },
  {
    "text": "it has to be very scalable and also has to be fault tolerant because you only have one shot at getting that tv short",
    "start": "712480",
    "end": "719200"
  },
  {
    "text": "show right so let's look at the functions of such",
    "start": "719200",
    "end": "726240"
  },
  {
    "start": "724000",
    "end": "777000"
  },
  {
    "text": "an application first of all you need authentication because you need to make sure that it is",
    "start": "726240",
    "end": "731360"
  },
  {
    "text": "a real user on the phone then you of course need to authorize all the calls on the back end",
    "start": "731360",
    "end": "738639"
  },
  {
    "text": "then well the quotes arrive so you need to collect all these words",
    "start": "738639",
    "end": "744800"
  },
  {
    "text": "then there's a voting mechanic which means okay i need to ensure that one",
    "start": "744800",
    "end": "750160"
  },
  {
    "text": "single user has only voted once then we need to aggregate the votes",
    "start": "750160",
    "end": "755519"
  },
  {
    "text": "together and we need to persist the boats and this is not only for the show but also a",
    "start": "755519",
    "end": "761760"
  },
  {
    "text": "few weeks later we need to be able to retrieve all votes to make clear hey this was legal",
    "start": "761760",
    "end": "768160"
  },
  {
    "text": "so we need our persistence not only in memory so we need it on disk and really",
    "start": "768160",
    "end": "774000"
  },
  {
    "text": "redundant so let's map those functions into",
    "start": "774000",
    "end": "779600"
  },
  {
    "start": "777000",
    "end": "825000"
  },
  {
    "text": "software architecture layers first of all we have the client these could be mobile phones ipads tablets who",
    "start": "779600",
    "end": "786320"
  },
  {
    "text": "are connected through the internet with our cloud backend infrastructure and the first point of contact which is",
    "start": "786320",
    "end": "792800"
  },
  {
    "text": "the end point is a good place to host the authentication bit and also the vote collection bit",
    "start": "792800",
    "end": "799360"
  },
  {
    "text": "then we can add another layer which we call the real back-end layer here and this is where the functions for the",
    "start": "799360",
    "end": "805839"
  },
  {
    "text": "boating mechanics and for the boat aggregation take place and finally for persistence we're going",
    "start": "805839",
    "end": "812320"
  },
  {
    "text": "to use a database that is going to store all the votes for the lawyers to check after the show that everything was right",
    "start": "812320",
    "end": "819279"
  },
  {
    "text": "and to document everything okay so",
    "start": "819279",
    "end": "825839"
  },
  {
    "start": "825000",
    "end": "861000"
  },
  {
    "text": "let's map this oh no let's first concentrate on the client okay",
    "start": "825920",
    "end": "832480"
  },
  {
    "text": "the client should be as simple as possible so kiss yeah keep it simple and stupid the problem is",
    "start": "832480",
    "end": "840560"
  },
  {
    "text": "you cannot update the client that's fast you need to be sure that the client that is out there in all the app stores will",
    "start": "840560",
    "end": "847360"
  },
  {
    "text": "work as it is so use a dynamic configuration so that on",
    "start": "847360",
    "end": "852639"
  },
  {
    "text": "the startup the client really uses a configuration that is done on the server side so that the",
    "start": "852639",
    "end": "859040"
  },
  {
    "text": "client knows which backend to call and then please use aws sdks as much as",
    "start": "859040",
    "end": "865360"
  },
  {
    "text": "possible these make sure that you can create such an application as easy as",
    "start": "865360",
    "end": "871680"
  },
  {
    "text": "possible so with amazon cognito with mobile analytics with sns push notification and",
    "start": "871680",
    "end": "878399"
  },
  {
    "text": "all the other services that are integrated in the mobile sdks this helps you a lot in creating a simple",
    "start": "878399",
    "end": "885360"
  },
  {
    "text": "application for mobile applications cool",
    "start": "885360",
    "end": "891360"
  },
  {
    "start": "890000",
    "end": "1067000"
  },
  {
    "text": "now that the client part is covered let's concentrate on the cloud architecture here",
    "start": "891360",
    "end": "897040"
  },
  {
    "text": "so let's start with the real architecting part now jan how would you start going about",
    "start": "897040",
    "end": "902800"
  },
  {
    "text": "putting this together here so first of all we can combine those functions into",
    "start": "902800",
    "end": "908160"
  },
  {
    "text": "our infrastructure pieces here so we can combine the authentication and we can combine the collection into a single",
    "start": "908160",
    "end": "913600"
  },
  {
    "text": "application that runs on a single hardware layer or a single piece of infrastructure we can do the same for",
    "start": "913600",
    "end": "919120"
  },
  {
    "text": "the back end we can combine the logic and we can combine the aggregation piece onto the second layer running on the",
    "start": "919120",
    "end": "925839"
  },
  {
    "text": "same infrastructure and of course we can stay with the database now how would you build this up jan",
    "start": "925839",
    "end": "932480"
  },
  {
    "text": "well we have these three pieces if we want to do this on aws side we",
    "start": "932480",
    "end": "940480"
  },
  {
    "text": "would map the end point to an elastic load balancer we would have an auto",
    "start": "940480",
    "end": "945519"
  },
  {
    "text": "scaling group with ec2 instances behind this one and then we have the back end also with an elastic load balancer with",
    "start": "945519",
    "end": "952639"
  },
  {
    "text": "an internal elastic load balancer with an auto scaling group and ec2 instances and then well we would probably just",
    "start": "952639",
    "end": "959519"
  },
  {
    "text": "boot an rds instance and well that's basic",
    "start": "959519",
    "end": "964880"
  },
  {
    "text": "the architecture by the book so if you go to our website to the architecting part this is the website this is the",
    "start": "964880",
    "end": "971279"
  },
  {
    "text": "architecture we recommend for web applications so normally you have your web servers",
    "start": "971279",
    "end": "978240"
  },
  {
    "text": "your application service and your storage so a new database okay cool so how does this stack up",
    "start": "978240",
    "end": "985279"
  },
  {
    "text": "against our requirements here first of all of course this is a scalable architecture we are using the",
    "start": "985279",
    "end": "991040"
  },
  {
    "text": "elastic load balancer which is elastic we're using auto scaling groups that's all good and it was also based on best practices",
    "start": "991040",
    "end": "998560"
  },
  {
    "text": "so who has been to an architecture class before can you have some okay so no surprises here this is easy",
    "start": "998560",
    "end": "1004880"
  },
  {
    "text": "to set up this is well understood these are the good points but there are some things in this architecture",
    "start": "1004880",
    "end": "1010480"
  },
  {
    "text": "by the book that are a little bit special that we need to take special consideration of and that is first of",
    "start": "1010480",
    "end": "1016480"
  },
  {
    "text": "all we want to make sure that the end points that we implement here is really secure and that means that whoever gets",
    "start": "1016480",
    "end": "1022399"
  },
  {
    "text": "to write that application running on the end point better make sure that it is completely bulletproof secure here",
    "start": "1022399",
    "end": "1029760"
  },
  {
    "text": "also as michael pointed out we are going to scale from zero to 100 percent in a matter of seconds so we better pre-warm",
    "start": "1029760",
    "end": "1036959"
  },
  {
    "text": "everything we better pre-allocate the auto-scaling group and make sure that it is big enough so that it can take all",
    "start": "1036959",
    "end": "1043199"
  },
  {
    "text": "the load at once and it also helps to pre-warm the elastic load balancer by working together with aws support",
    "start": "1043199",
    "end": "1051280"
  },
  {
    "text": "but now i have a little bit of headache with the database here because it is easy to scale in an autoscaling group",
    "start": "1051280",
    "end": "1057120"
  },
  {
    "text": "you just tell it how many nodes to have but it's a lot harder to scale a database so first of all we should take",
    "start": "1057120",
    "end": "1062240"
  },
  {
    "text": "a look at the database here so let's take a look at the database i",
    "start": "1062240",
    "end": "1068000"
  },
  {
    "start": "1067000",
    "end": "1172000"
  },
  {
    "text": "mean scaling a database should be easy on aws just use",
    "start": "1068000",
    "end": "1073679"
  },
  {
    "text": "amazon dynamodb it will scale infinite and you should not have any problems",
    "start": "1073679",
    "end": "1079760"
  },
  {
    "text": "with scalability on that and actually you can do more with amazon",
    "start": "1079760",
    "end": "1085039"
  },
  {
    "text": "dynamodb you can move back and logic to the database itself so with conditional",
    "start": "1085039",
    "end": "1091280"
  },
  {
    "text": "updates you could move the the requirement that a user should only vote once to the database and",
    "start": "1091280",
    "end": "1098640"
  },
  {
    "text": "actually the database is doing this and with atomic counters you can just be sure",
    "start": "1098640",
    "end": "1104960"
  },
  {
    "text": "that you aggregate all the votes so even this one is moved to the database and then",
    "start": "1104960",
    "end": "1111919"
  },
  {
    "text": "we have only the endpoint which collects all the votes and the database which which holds",
    "start": "1111919",
    "end": "1118400"
  },
  {
    "text": "everything which updates the counters and which ensures that a single user has only voted once",
    "start": "1118400",
    "end": "1126080"
  },
  {
    "text": "this is great because dynamodb is not just a nosql database that scales infinitely and is easy to",
    "start": "1126080",
    "end": "1132559"
  },
  {
    "text": "use it it also has these intelligent features that allow you to piece to put",
    "start": "1132559",
    "end": "1138080"
  },
  {
    "text": "pieces of your logic right into the database where they belong so i'm feeling comfortable now with the",
    "start": "1138080",
    "end": "1144320"
  },
  {
    "text": "scalability part here but as you remember the dynamodb model assumes that you pre-allocate capacity",
    "start": "1144320",
    "end": "1151360"
  },
  {
    "text": "units to the database so you need to know more or less how much capacity you're going to need and if you don't",
    "start": "1151360",
    "end": "1157840"
  },
  {
    "text": "provision enough capacity to dynamodb you may run into a situation where you get out of capacity errors and then",
    "start": "1157840",
    "end": "1164960"
  },
  {
    "text": "maybe a situation where votes are lost so what can we do here jan so there's a customer perhaps you know",
    "start": "1164960",
    "end": "1172080"
  },
  {
    "start": "1172000",
    "end": "1242000"
  },
  {
    "text": "him it's jazzan and they have found a cool solution for this this is from a blog post at jazen",
    "start": "1172080",
    "end": "1180880"
  },
  {
    "text": "what they are doing they will put a sql amazon sqsq besides the dynamodb and",
    "start": "1180880",
    "end": "1187600"
  },
  {
    "text": "when the dynamodb is out of capacity they will write the rights to the sqs",
    "start": "1187600",
    "end": "1193280"
  },
  {
    "text": "queue and they have an auto scaling group behind the sqsq that is reading the",
    "start": "1193280",
    "end": "1198320"
  },
  {
    "text": "rights out of the sqs queue and write it back to the dynamodb when there is capacity",
    "start": "1198320",
    "end": "1204240"
  },
  {
    "text": "so with this scenario uh the out of capacity problems from dynamo bd could",
    "start": "1204240",
    "end": "1209919"
  },
  {
    "text": "be solved cool thanks jan so that means that we don't need to worry too much about database capacity",
    "start": "1209919",
    "end": "1216880"
  },
  {
    "text": "and capacity provisioning we always have sqs as a buffer who can help us out in",
    "start": "1216880",
    "end": "1221919"
  },
  {
    "text": "case we didn't provision enough capacity here but now the architecture is kind of looking",
    "start": "1221919",
    "end": "1228000"
  },
  {
    "text": "a bit more complicated than i expected it we got rid of an autoscaling group and we were glad and now we introduce it",
    "start": "1228000",
    "end": "1234000"
  },
  {
    "text": "back again so is there a way to simplify this even further",
    "start": "1234000",
    "end": "1239600"
  },
  {
    "text": "so let's look a little bit on the client side because actually",
    "start": "1240320",
    "end": "1246960"
  },
  {
    "start": "1242000",
    "end": "1380000"
  },
  {
    "text": "amazon sqs is an aws service you can access sqs from outside the amazon cloud",
    "start": "1246960",
    "end": "1254000"
  },
  {
    "text": "actually you can access this directly from the client itself then we have amazon cognito",
    "start": "1254000",
    "end": "1260799"
  },
  {
    "text": "which is the authentication part which you need for accessing amazon sqs",
    "start": "1260799",
    "end": "1266960"
  },
  {
    "text": "and let's look on the client side how this is done on the client side because we said okay hey we need a real simple",
    "start": "1266960",
    "end": "1273440"
  },
  {
    "text": "client first of all you need to bring up a login screen so",
    "start": "1273440",
    "end": "1279760"
  },
  {
    "text": "for example with your favorite authentication provider via facebook for example this is the android code from",
    "start": "1279760",
    "end": "1285840"
  },
  {
    "text": "the facebook sdk to bring up the login screen you log in and in the background facebook will give you",
    "start": "1285840",
    "end": "1292640"
  },
  {
    "text": "a facebook token then you create a cognitive credentials provider",
    "start": "1292640",
    "end": "1298480"
  },
  {
    "text": "from our mobile sdk and this will handle all the authentication",
    "start": "1298480",
    "end": "1304080"
  },
  {
    "text": "underneath then you add the facebook token to the authentication provider",
    "start": "1304080",
    "end": "1310480"
  },
  {
    "text": "and underneath amazon cognito so our backend will provision temporary access",
    "start": "1310480",
    "end": "1316559"
  },
  {
    "text": "credentials for you and then we need to call the sqsq so",
    "start": "1316559",
    "end": "1321919"
  },
  {
    "text": "these are two lines of code to send a message to sqs and underneath cognito ensures that the",
    "start": "1321919",
    "end": "1330240"
  },
  {
    "text": "call is authorized and before that you have also",
    "start": "1330240",
    "end": "1335760"
  },
  {
    "text": "set up everything correctly so that you allow these users to access sqs and this",
    "start": "1335760",
    "end": "1341360"
  },
  {
    "text": "is very simple to just call sqs directly from the client",
    "start": "1341360",
    "end": "1347840"
  },
  {
    "text": "and well this is not only possible for amazon sqs you can use this for all the shared",
    "start": "1348720",
    "end": "1355440"
  },
  {
    "text": "services being s3 for example or perhaps some dynamo db stuff you can directly access",
    "start": "1355440",
    "end": "1362400"
  },
  {
    "text": "all the shared services from the mobile client together with the mobile sdk and",
    "start": "1362400",
    "end": "1368640"
  },
  {
    "text": "amazon cognito it is seamlessly integrated and only a few lines of code",
    "start": "1368640",
    "end": "1374559"
  },
  {
    "text": "you need only a few lines of code to do this cool so",
    "start": "1374559",
    "end": "1380559"
  },
  {
    "start": "1380000",
    "end": "1532000"
  },
  {
    "text": "i guess that now our problem got a lot simpler we can now directly put sqs in front of our whole",
    "start": "1380559",
    "end": "1388559"
  },
  {
    "text": "architecture we can use sqs as the endpoint for our stuff so we don't have to implement our own",
    "start": "1388559",
    "end": "1395360"
  },
  {
    "text": "endpoint we can just use what's already there from sqs and this is great because you can use this with mobile phones you",
    "start": "1395360",
    "end": "1402320"
  },
  {
    "text": "can use this with a website using the javascript sdk you can use any client",
    "start": "1402320",
    "end": "1407679"
  },
  {
    "text": "and teach them how to talk to our aws endpoints directly you don't need to implement your own protocol you need to",
    "start": "1407679",
    "end": "1414000"
  },
  {
    "text": "implement your own service here at the endpoint and the other great thing here is we",
    "start": "1414000",
    "end": "1419600"
  },
  {
    "text": "don't have to take care of endpoint security we don't have to worry that much because it's the sqs team job now",
    "start": "1419600",
    "end": "1426640"
  },
  {
    "text": "to make sure that the sqs endpoint is secure and they already did their work they have a lot more knowledge about how",
    "start": "1426640",
    "end": "1432400"
  },
  {
    "text": "to secure apis than i do and then any of our developers in in our customers do because that's the day-to-day job they",
    "start": "1432400",
    "end": "1439200"
  },
  {
    "text": "need to make sure that sqs is always secure and they also can make it so that sqs scales for us so",
    "start": "1439200",
    "end": "1447200"
  },
  {
    "text": "we don't need to pre-warm anything we don't need to pre-warm albs we need to pre don't need to pre-one auto-scaling",
    "start": "1447200",
    "end": "1452720"
  },
  {
    "text": "groups we just use sqs it's already pre-warmed it's already accepting millions of messages all the time so",
    "start": "1452720",
    "end": "1459279"
  },
  {
    "text": "that's great we we just made our life easier by just putting sqs in front of everything",
    "start": "1459279",
    "end": "1466000"
  },
  {
    "text": "and we like this architecture so much that we gave it a new name and we came up with this name q school",
    "start": "1466400",
    "end": "1472480"
  },
  {
    "text": "kind of like cloud school but with q's q square we are talking to marketing maybe we can trademark this name or something",
    "start": "1472480",
    "end": "1478320"
  },
  {
    "text": "like that um but we like this this architecture very much because it it takes away so much worry from our minds",
    "start": "1478320",
    "end": "1486480"
  },
  {
    "text": "and the other cool thing about this architecture here is it's a hundred percent decoupled",
    "start": "1486480",
    "end": "1492480"
  },
  {
    "text": "that means that the client sends messages into the queue and can then forget about everything and",
    "start": "1492480",
    "end": "1497600"
  },
  {
    "text": "concentrate on whatever clients do after they send their message and then we can consume those messages from the sqs",
    "start": "1497600",
    "end": "1503840"
  },
  {
    "text": "queue from our own backend here at any rate so if we didn't scale that back and",
    "start": "1503840",
    "end": "1510159"
  },
  {
    "text": "far enough then it's no problem because sqs will store all these messages for us",
    "start": "1510159",
    "end": "1515840"
  },
  {
    "text": "no message is going to be lost and we can always consume them lazily so this piece here can scale lazily it doesn't",
    "start": "1515840",
    "end": "1522000"
  },
  {
    "text": "have to be there all the time at the super high scalability here and it is much more forgiving in terms of of",
    "start": "1522000",
    "end": "1529279"
  },
  {
    "text": "operating so let me introduce you to my customer here which is a company called rtl",
    "start": "1529279",
    "end": "1535919"
  },
  {
    "start": "1532000",
    "end": "1690000"
  },
  {
    "text": "interactive it's another german large german european broadcaster",
    "start": "1535919",
    "end": "1541440"
  },
  {
    "text": "and they implemented the following architecture for one of their own tv",
    "start": "1541440",
    "end": "1546559"
  },
  {
    "text": "voting superstar shows so you will see that at the bottom is",
    "start": "1546559",
    "end": "1551679"
  },
  {
    "text": "our beloved qsql architecture so this is where the client talks to the sqs queue and then",
    "start": "1551679",
    "end": "1557200"
  },
  {
    "text": "there is an auto scaling group that processes the votes and then feeds them into the dynamodb database at the bottom",
    "start": "1557200",
    "end": "1563200"
  },
  {
    "text": "right and this is exactly how they did it back then they didn't have access to",
    "start": "1563200",
    "end": "1568720"
  },
  {
    "text": "cognito because we launched cognito only a couple months ago so when they designed this architecture they set up",
    "start": "1568720",
    "end": "1574559"
  },
  {
    "text": "their own elastic load balancer with an auto scaling group to generate credentials through the aws security",
    "start": "1574559",
    "end": "1580000"
  },
  {
    "text": "token service if they were to do it again today they would just use cognito instead of the pieces at the top of this",
    "start": "1580000",
    "end": "1586240"
  },
  {
    "text": "diagram here and they also used the security token service or the mechanism that jan",
    "start": "1586240",
    "end": "1591919"
  },
  {
    "text": "explained to you to teach the client to upload their own images into s3 so when",
    "start": "1591919",
    "end": "1597679"
  },
  {
    "text": "the user registers they upload a photo of themselves profile picture and the",
    "start": "1597679",
    "end": "1602880"
  },
  {
    "text": "client can upload the profile picture directly into s3 no more architecture required to do that",
    "start": "1602880",
    "end": "1609039"
  },
  {
    "text": "and in fact this customer liked sqsq so much that they use their own sqsq in the",
    "start": "1609039",
    "end": "1614080"
  },
  {
    "text": "backend to schedule some back-end task processing so whenever there is a new",
    "start": "1614080",
    "end": "1619600"
  },
  {
    "text": "user that registers or some other work to do they just push mesh messages into the queue and let those auto scaling",
    "start": "1619600",
    "end": "1625679"
  },
  {
    "text": "group process these messages kind of like a lightweight workflow system and when setting up such an architecture",
    "start": "1625679",
    "end": "1632159"
  },
  {
    "text": "it always pays off to use amazon elastic cache in this case the customer used elastic",
    "start": "1632159",
    "end": "1637520"
  },
  {
    "text": "to have a cache of the information whether a user has voted already so they",
    "start": "1637520",
    "end": "1643200"
  },
  {
    "text": "could offload some of the work from the dynamodb table saving them some money",
    "start": "1643200",
    "end": "1649039"
  },
  {
    "text": "okay keep in mind everything what you heard today uh you can use for any",
    "start": "1649520",
    "end": "1655840"
  },
  {
    "text": "applications out there it could be also a financial application or some other application it doesn't",
    "start": "1655840",
    "end": "1662399"
  },
  {
    "text": "need uh to be a mobile application it can be a web application or so you can directly access the services and amazon",
    "start": "1662399",
    "end": "1669360"
  },
  {
    "text": "cooking tool will authorize this and will get you a log in if needed or even",
    "start": "1669360",
    "end": "1675279"
  },
  {
    "text": "has support for unauthenticated users and you can directly attach all the services we have to your application",
    "start": "1675279",
    "end": "1682559"
  },
  {
    "text": "and yeah it makes it much easier to architect and implement an application",
    "start": "1682559",
    "end": "1687919"
  },
  {
    "text": "itself so let's look beyond the architecture",
    "start": "1687919",
    "end": "1693200"
  },
  {
    "start": "1690000",
    "end": "1701000"
  },
  {
    "text": "itself because the architecture is one thing but you need to take care for a lot of other stuff as",
    "start": "1693200",
    "end": "1700159"
  },
  {
    "text": "well so first of all please plan thoroughly",
    "start": "1700159",
    "end": "1705919"
  },
  {
    "start": "1701000",
    "end": "1753000"
  },
  {
    "text": "make the right assumptions you have heard from michael they prepared for",
    "start": "1705919",
    "end": "1711440"
  },
  {
    "text": "500 000 users but should be prepared for 3 million users these are large different differences but you need to",
    "start": "1711440",
    "end": "1719360"
  },
  {
    "text": "make sure that the application has the right scale try out very many",
    "start": "1719360",
    "end": "1725360"
  },
  {
    "text": "variants because you don't need at the beginning you don't know at the beginning which",
    "start": "1725360",
    "end": "1730960"
  },
  {
    "text": "would be the the best variant where you might have some problems or not so you need to try it out",
    "start": "1730960",
    "end": "1738480"
  },
  {
    "text": "and then think through your stuff think about the etched cases you might",
    "start": "1738480",
    "end": "1744000"
  },
  {
    "text": "face so that you know what's going on in your application itself",
    "start": "1744000",
    "end": "1751320"
  },
  {
    "text": "thing you can do is make sure you get an extra set of eyes on your architecture",
    "start": "1752240",
    "end": "1758080"
  },
  {
    "start": "1753000",
    "end": "1836000"
  },
  {
    "text": "never do it alone so in my case my customer they use the partner to get them up to speed in",
    "start": "1758080",
    "end": "1764480"
  },
  {
    "text": "programming sqs and programming aws so that they can concentrate on their own application much better",
    "start": "1764480",
    "end": "1770480"
  },
  {
    "text": "please talk to us aws solutions architects it's our day-to-day job to help you set this up to help you think",
    "start": "1770480",
    "end": "1775919"
  },
  {
    "text": "stuff through and to help you come up with new ideas on how you can simplify and make your architecture more powerful",
    "start": "1775919",
    "end": "1782880"
  },
  {
    "text": "use aws training i was very glad to see that so many people if you have visited already an architecture course take",
    "start": "1782880",
    "end": "1788720"
  },
  {
    "text": "advantage of aws training because a lot of the best practices are taught there and whenever you're doing these",
    "start": "1788720",
    "end": "1795520"
  },
  {
    "text": "complicated things where everything has to work right like during a tv show a big launch event when you buy some time",
    "start": "1795520",
    "end": "1802320"
  },
  {
    "text": "on the super bowl or whenever you do something that is really a little bit scary because it has to work please do",
    "start": "1802320",
    "end": "1807919"
  },
  {
    "text": "involve aws support there's a special service that they provide which is called infrastructure event management",
    "start": "1807919",
    "end": "1813520"
  },
  {
    "text": "which means that four weeks before you start you're going to get assigned your own technical account manager he's going",
    "start": "1813520",
    "end": "1819279"
  },
  {
    "text": "to go through everything with you he's going to prepare you for everything he's going to run benchmarks it's going to be there out and on the telephone while you",
    "start": "1819279",
    "end": "1826640"
  },
  {
    "text": "have your big lunch launch and and also help you whenever something comes up that may be unexpected",
    "start": "1826640",
    "end": "1835320"
  },
  {
    "start": "1836000",
    "end": "1855000"
  },
  {
    "text": "okay regarding testing please test early please test at least four weeks before",
    "start": "1836559",
    "end": "1842399"
  },
  {
    "text": "your event but actually you can test during the your development um do an end to end test both doing",
    "start": "1842399",
    "end": "1850640"
  },
  {
    "text": "functional tests and also a low test and if you want to do a load test i",
    "start": "1850640",
    "end": "1857360"
  },
  {
    "start": "1855000",
    "end": "1892000"
  },
  {
    "text": "would recommend wrk which is a perfect tool for doing http based load tests and",
    "start": "1857360",
    "end": "1864320"
  },
  {
    "text": "just boot up some ec2 instances install this tool on the instances and",
    "start": "1864320",
    "end": "1871919"
  },
  {
    "text": "start load testing your application and for example in this case i even tested sqs to show the customer that",
    "start": "1871919",
    "end": "1881039"
  },
  {
    "text": "sqs is able to handle so much votes in a few seconds and it is easy to test and",
    "start": "1881039",
    "end": "1887200"
  },
  {
    "text": "you get good results with it",
    "start": "1887200",
    "end": "1891559"
  },
  {
    "start": "1892000",
    "end": "1966000"
  },
  {
    "text": "now let's recap what we learned during these two projects and i would say",
    "start": "1892960",
    "end": "1898000"
  },
  {
    "text": "the one big outcome here is that the best architects are the lazy ones you may think that good architects come up",
    "start": "1898000",
    "end": "1903600"
  },
  {
    "text": "with these brilliant super complicated diagrams that only fit onto five to",
    "start": "1903600",
    "end": "1909039"
  },
  {
    "text": "seven slides or something like that but sometimes the best architectures are those that are super simple like our new",
    "start": "1909039",
    "end": "1914480"
  },
  {
    "text": "cusco architecture here and the lesson here is you can offload a lot",
    "start": "1914480",
    "end": "1920720"
  },
  {
    "text": "of your architecture work to the find people in the sqs team the fine people the s3 or other teams who put together",
    "start": "1920720",
    "end": "1927840"
  },
  {
    "text": "those combined services that you can just use and even teach your clients to use directly instead of putting",
    "start": "1927840",
    "end": "1933760"
  },
  {
    "text": "architecture in front of that so that means that aws is much more than just infrastructure it's about making",
    "start": "1933760",
    "end": "1940159"
  },
  {
    "text": "your lives easier also on the architecture side by giving you building blocks that are already very powerful",
    "start": "1940159",
    "end": "1946159"
  },
  {
    "text": "and that you just need to plug and play together in a very simple way and that gives you much more time to",
    "start": "1946159",
    "end": "1952720"
  },
  {
    "text": "concentrate on your innovation on your application on your invention on your",
    "start": "1952720",
    "end": "1958000"
  },
  {
    "text": "ways to differentiate yourself from the competition and maybe disrupt your market to your new idea",
    "start": "1958000",
    "end": "1965760"
  },
  {
    "start": "1966000",
    "end": "2001000"
  },
  {
    "text": "so thank you very much for listening we really hope that we could show you some new architectural approaches that will",
    "start": "1966159",
    "end": "1972080"
  },
  {
    "text": "make your life easier secure and also much more scalable and we're going to be available for some questions down here",
    "start": "1972080",
    "end": "1978960"
  },
  {
    "text": "at this stage yeah thank you very much some more thing um tomorrow is a mobile workshop so yes um if you want to play",
    "start": "1978960",
    "end": "1986480"
  },
  {
    "text": "around with the co-connect thing with sqs and so on please go there and try it out yourself",
    "start": "1986480",
    "end": "1994559"
  },
  {
    "text": "you will see how to implement such an application okay with that thank you very much and see you at the party",
    "start": "1994559",
    "end": "2002919"
  }
]