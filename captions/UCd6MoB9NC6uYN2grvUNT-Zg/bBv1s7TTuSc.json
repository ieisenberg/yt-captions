[
  {
    "start": "0",
    "end": "146000"
  },
  {
    "text": "all right we're gonna get started with our next speaker mr. John Pig nada is a",
    "start": "290",
    "end": "7400"
  },
  {
    "text": "solution architect extraordinaire and he's going to talk to us about how to save money that's one of the most",
    "start": "7400",
    "end": "14370"
  },
  {
    "text": "important pieces when starting a startup is keeping your burn rate low so John",
    "start": "14370",
    "end": "22109"
  },
  {
    "text": "has tons of awesome advice on what to watch for what to try and avoid and how",
    "start": "22109",
    "end": "30240"
  },
  {
    "text": "to keep your bill low cool take it away",
    "start": "30240",
    "end": "34759"
  },
  {
    "text": "our terms anything from companies with one or two people kind of working on an idea all the way up to you companies",
    "start": "40329",
    "end": "46629"
  },
  {
    "text": "that maybe have multiple rounds of funding you know through a venture capital firm or even in a private equity space and this talk is really it's",
    "start": "46629",
    "end": "55210"
  },
  {
    "text": "geared toward actionable advice like things you could do tomorrow in your AWS account to pay AWS less money",
    "start": "55210",
    "end": "62650"
  },
  {
    "text": "so I'm hoping you could take away at least one or two things that may be applicable to what you're building and what you're doing if not just take away",
    "start": "62650",
    "end": "68800"
  },
  {
    "text": "the fact that there are folks here on the payroll of AWS and our focus is to",
    "start": "68800",
    "end": "74410"
  },
  {
    "text": "save you money like we literally want you to pay us less because if you pay us less one if your startup that's going to",
    "start": "74410",
    "end": "81460"
  },
  {
    "text": "go right into your run right so it's like free funding you're gonna be able to use that money to spend it on things",
    "start": "81460",
    "end": "86590"
  },
  {
    "text": "that actually matter like engineers to implement what you're building maybe customer acquisition like things",
    "start": "86590",
    "end": "92470"
  },
  {
    "text": "that are more important than like servers running in some data center somewhere and to like we we want you to",
    "start": "92470",
    "end": "98080"
  },
  {
    "text": "make the most the best use of all the knobs and levers that we have now",
    "start": "98080",
    "end": "103810"
  },
  {
    "text": "frankly there are a lot of knobs and levers right if you log into like the AC to look at the ec2 pricing page you'll",
    "start": "103810",
    "end": "109300"
  },
  {
    "text": "notice there's a ton of different ways to acquire compute capacity for example but we want to help guide you through that so if you take nothing else away",
    "start": "109300",
    "end": "115869"
  },
  {
    "text": "from this talk take an item to call your account wrap tomorrow and say look I",
    "start": "115869",
    "end": "121149"
  },
  {
    "text": "can't wrap but figure out like here's my bill how do I save money or come here to the loft there's always someone sitting",
    "start": "121149",
    "end": "127330"
  },
  {
    "text": "standing at the at the architect booth who you know from my team that or",
    "start": "127330",
    "end": "132459"
  },
  {
    "text": "support that can help you dive into your bill and give you actionable recommendations to lower your spend cool",
    "start": "132459",
    "end": "138250"
  },
  {
    "text": "and there's not many slides so feel free to ask questions keep a conversational you know just let me know what I can",
    "start": "138250",
    "end": "144160"
  },
  {
    "text": "answer for you so lower costs with the AWS cloud so they're you know when we talk to",
    "start": "144160",
    "end": "150069"
  },
  {
    "start": "146000",
    "end": "146000"
  },
  {
    "text": "customers there's a ton of reasons why customers are moving to AWS or starting new applications on AWS you know",
    "start": "150069",
    "end": "156970"
  },
  {
    "text": "generally it's about agility the idea that you're no longer blocked by internal procurement processes or teams",
    "start": "156970",
    "end": "164500"
  },
  {
    "text": "you could just spin up resources as you need them and experiment and if an experiment fails you can just get rid of",
    "start": "164500",
    "end": "170230"
  },
  {
    "text": "those resources without any risk right pretty obvious that's the whole point of the there's a lot of pricing model choices",
    "start": "170230",
    "end": "177540"
  },
  {
    "text": "to find the right the right way to acquire resources for your particular",
    "start": "177540",
    "end": "183450"
  },
  {
    "text": "use case so AWS in general if you look at pricing on AWS there's a few",
    "start": "183450",
    "end": "189600"
  },
  {
    "text": "dimensions of pricing right we bill on compute storage networking data transfer but within all of these models there's a",
    "start": "189600",
    "end": "196380"
  },
  {
    "text": "few ways to save money automatically one their incentives for volume for volume",
    "start": "196380",
    "end": "201510"
  },
  {
    "text": "right so as you as you use more the per unit fee drops right so for example with",
    "start": "201510",
    "end": "207330"
  },
  {
    "text": "s3 you know it's something like with standard storage the first X amount of",
    "start": "207330",
    "end": "212610"
  },
  {
    "text": "terabytes is like two cents a gigabyte and then it drops down from there and it continues dropping so lower cost and",
    "start": "212610",
    "end": "221880"
  },
  {
    "start": "220000",
    "end": "220000"
  },
  {
    "text": "on-premises this is kind of obvious right so in the long long ago when you're starting a business the first",
    "start": "221880",
    "end": "227130"
  },
  {
    "text": "thing you would do one of the first things you would have to do is acquire you know the most expensive real estate",
    "start": "227130",
    "end": "232350"
  },
  {
    "text": "ever in a data center rack and stack some servers that you would buy at great expense from some hardware manufacturer",
    "start": "232350",
    "end": "238010"
  },
  {
    "text": "get them wired up and configured for power and ping and then you could actually deploy your application with",
    "start": "238010",
    "end": "243590"
  },
  {
    "text": "services like AWS all that cat a lot of that capital expenditure goes out the window right even if your virtualized",
    "start": "243590",
    "end": "250019"
  },
  {
    "text": "they're still capital expenditure that you can you know you can utilize those resources more efficiently but you're still purchasing those resources out of",
    "start": "250019",
    "end": "256530"
  },
  {
    "text": "pocket with AWS that's all op x and it's all usage based and you can start with every service on a utilization basis",
    "start": "256530",
    "end": "264710"
  },
  {
    "start": "265000",
    "end": "265000"
  },
  {
    "text": "yeah so capital expenditures meaning something you purchase physically that you buy and own versus operating",
    "start": "265640",
    "end": "272250"
  },
  {
    "text": "expenditures which is paying for services for example and you're gonna the slides they're gonna mail office",
    "start": "272250",
    "end": "278130"
  },
  {
    "text": "lives just yeah so you'll get you'll have a copy this to AWS is pricing",
    "start": "278130",
    "end": "283380"
  },
  {
    "text": "philosophy so Amazon itself is known for trying to lower prices as much as",
    "start": "283380",
    "end": "288750"
  },
  {
    "text": "possible to take economies of scale and take what we were able to deliver and",
    "start": "288750",
    "end": "294210"
  },
  {
    "text": "deliver it to customers at a lower price Y customers like saving money and Amazon",
    "start": "294210",
    "end": "299280"
  },
  {
    "text": "as a customer obsessed company wants to give customers what they want which is lower prices this is super outdated it's",
    "start": "299280",
    "end": "305010"
  },
  {
    "text": "not 62 price reductions I think it's 66 so if you look at AWS history throughout the last you know ten plus years drop",
    "start": "305010",
    "end": "312990"
  },
  {
    "text": "prices largely in the absence of any marketplace pressure to do so just simply because one as we grow our",
    "start": "312990",
    "end": "318509"
  },
  {
    "text": "customer base there are economies of scale to that right we have millions and millions of active customers a month using our services we're able to kind of",
    "start": "318509",
    "end": "326310"
  },
  {
    "text": "pool all those customers together and deliver services at lower cost too we",
    "start": "326310",
    "end": "331770"
  },
  {
    "text": "are internally every team is incentivized to wring cost out of their",
    "start": "331770",
    "end": "336780"
  },
  {
    "text": "own cost structure meaning teams have goals to do things like automate and",
    "start": "336780",
    "end": "342180"
  },
  {
    "text": "reduce the amount of you know toil and work and labor that comes in operating these services and we pass those savings",
    "start": "342180",
    "end": "348270"
  },
  {
    "text": "off to customers so we've done it a bunch of times we continue to do it we'll continue to do it in the future so",
    "start": "348270",
    "end": "354469"
  },
  {
    "text": "cost optimization tips and tricks this is the the meat of it so we're gonna go through I don't know I think it's like",
    "start": "354469",
    "end": "361139"
  },
  {
    "text": "ten different ways that you could potentially save money with AWS number",
    "start": "361139",
    "end": "367020"
  },
  {
    "start": "366000",
    "end": "366000"
  },
  {
    "text": "one so this is regarding our Elastic Compute cloud so ec2 choosing the right",
    "start": "367020",
    "end": "373650"
  },
  {
    "text": "instance type so often when startups start their journey you know build an application put it in the cloud they",
    "start": "373650",
    "end": "380460"
  },
  {
    "text": "don't have any users they don't have any traffic there's there's nothing to kind of guide these teams on what they should",
    "start": "380460",
    "end": "386880"
  },
  {
    "text": "be provisioning so often teams will just provision large sized amounts of compute in order to have it",
    "start": "386880",
    "end": "392819"
  },
  {
    "text": "in case they have a large glut of traffic so to start with the the first",
    "start": "392819",
    "end": "397830"
  },
  {
    "text": "thing we try to do when we look at a customer's account that's trying to reduce cost is to figure out are the",
    "start": "397830",
    "end": "404490"
  },
  {
    "text": "instances that are used in that account the right size so if you're you know one",
    "start": "404490",
    "end": "410669"
  },
  {
    "text": "of the things we'll do is pull up cloud watch metrics so if you look at cloud watch metrics most services dump metrics",
    "start": "410669",
    "end": "416219"
  },
  {
    "text": "into cloud watch you can use cloud watch metrics to get a sense for how utilized your instances are so for example you",
    "start": "416219",
    "end": "421979"
  },
  {
    "text": "can pull up a graph of CPU utilization and see okay so of my web server fleet",
    "start": "421979",
    "end": "427319"
  },
  {
    "text": "or a single web server what percentage of that web server is actually utilized on a CPU basis is it eighty percent most",
    "start": "427319",
    "end": "434430"
  },
  {
    "text": "of the time on average or is it two percent if it's two percent it's very possible that your oversized and you can",
    "start": "434430",
    "end": "440310"
  },
  {
    "text": "scale that instance so you'd start with things like memory and CPU and scale appropriately other",
    "start": "440310",
    "end": "447010"
  },
  {
    "text": "tools that we have to help you Armando mentioned trusted advisors trusted advisors essentially a console",
    "start": "447010",
    "end": "453910"
  },
  {
    "text": "that tries to give recommendations to customers based upon the data that's in your account so for example across the",
    "start": "453910",
    "end": "460510"
  },
  {
    "text": "pillars of security optimization reliability and and cost optimization so",
    "start": "460510",
    "end": "465700"
  },
  {
    "text": "you can log into trusted advisor into the AWS console click on trusted advisor and you'll see like one of the first",
    "start": "465700",
    "end": "472810"
  },
  {
    "text": "items you'll see is you have the potential to save X thousands of dollars and here are the recommendations to do that so that's a tool that you can use",
    "start": "472810",
    "end": "478960"
  },
  {
    "text": "today to figure out you know am i right sized with the instances I'm running both CloudWatch metrics which gives you",
    "start": "478960",
    "end": "486100"
  },
  {
    "text": "the raw data and trusted advisor and then deploying and scaling so you know",
    "start": "486100",
    "end": "491830"
  },
  {
    "text": "instead of having one large instance for many reasons cost being one dimension it's typically better to have multiple",
    "start": "491830",
    "end": "498100"
  },
  {
    "text": "instances and multiple availability zones so you know way back when for reliability you know if you were",
    "start": "498100",
    "end": "505240"
  },
  {
    "text": "building in a data center in the late 90s for example you were kind of lucky if you had one server at one side of the room and one server on the other side of",
    "start": "505240",
    "end": "511210"
  },
  {
    "text": "the room that was kind of high availability all right with AWS you can easily deploy with you know a couple of",
    "start": "511210",
    "end": "516820"
  },
  {
    "text": "API calls servers to multiple physical buildings right so in availability zones a physical discrete building that's",
    "start": "516820",
    "end": "523120"
  },
  {
    "text": "located some miles away from the other availability zones but connected to each other through low latency links so you",
    "start": "523120",
    "end": "529900"
  },
  {
    "text": "could very easily deploy your application across multiple availability zones and protect both reprove your",
    "start": "529900",
    "end": "537520"
  },
  {
    "text": "reliability and potentially reduce your cost assuming you're able to size those instances down that'll make sense okay",
    "start": "537520",
    "end": "546640"
  },
  {
    "text": "cool use auto scaling so one of the one",
    "start": "546640",
    "end": "554740"
  },
  {
    "start": "547000",
    "end": "547000"
  },
  {
    "text": "of the sort of revolutions of cloud computing is the idea that you no longer",
    "start": "554740",
    "end": "560620"
  },
  {
    "text": "have to provision the amount of capacity you need to handle your peak load right",
    "start": "560620",
    "end": "566950"
  },
  {
    "text": "so back in the old days you would have to buy ten servers with the understanding that in November you know",
    "start": "566950",
    "end": "572200"
  },
  {
    "text": "when shopping season ramped you're going to need those ten servers to fulfill your demand because it takes",
    "start": "572200",
    "end": "577320"
  },
  {
    "text": "eight to ten weeks to get a new server with AWS and other you know with cloud computing in general you could instead",
    "start": "577320",
    "end": "584250"
  },
  {
    "text": "use some of these tools like auto scaling to match the amount of resources you have provisioned to your actual",
    "start": "584250",
    "end": "590910"
  },
  {
    "text": "customer demand right so the way auto scaling works is it looks at metrics like metrics and cloud watch like I",
    "start": "590910",
    "end": "596820"
  },
  {
    "text": "mentioned before and it will scale the number of servers you have in and out based upon what's actually going on with",
    "start": "596820",
    "end": "603240"
  },
  {
    "text": "those servers so for example you can tell auto scaling I want a minimum of two servers at any given time across to",
    "start": "603240",
    "end": "609240"
  },
  {
    "text": "availability zones and at most I want ten just as a cost control measure you can cap it and you know throughout the",
    "start": "609240",
    "end": "617070"
  },
  {
    "text": "day watch this number if my server forum ever goes above 60 percent utilization",
    "start": "617070",
    "end": "622230"
  },
  {
    "text": "on CPU start scaling out add servers if once that traffic dies down and customer",
    "start": "622230",
    "end": "629790"
  },
  {
    "text": "demand dies down and that CPU load starts to drop well then start scaling back in right so auto scaling is kind of",
    "start": "629790",
    "end": "636510"
  },
  {
    "text": "a set it and forget it way too elastically scale the amount of compute resources you have provisioned without",
    "start": "636510",
    "end": "642800"
  },
  {
    "text": "metalic manually doing it right you don't have to manually scale up and down turn a crank you can set have auto",
    "start": "642800",
    "end": "648690"
  },
  {
    "text": "scaling handle that for you is anyone using auto scaling today is this just curious work okay cool all right so old",
    "start": "648690",
    "end": "655470"
  },
  {
    "text": "hat so auto scaling auto scaling group auto scaling also integrates with some",
    "start": "655470",
    "end": "661500"
  },
  {
    "text": "of the pricing features of ec2 like spot instances which we'll talk about later but there's ways to leverage auto",
    "start": "661500",
    "end": "667080"
  },
  {
    "text": "scaling both has a cost control to take advantage of the elasticity of AWS and also as a reliability measure to ensure",
    "start": "667080",
    "end": "673440"
  },
  {
    "text": "that if you know your two servers are in an availability zone that has a service disruption auto scaling will",
    "start": "673440",
    "end": "679320"
  },
  {
    "text": "automatically add two more servers in the other availability zones to compensate so here's an example of",
    "start": "679320",
    "end": "687930"
  },
  {
    "start": "686000",
    "end": "686000"
  },
  {
    "text": "utilization with auto scaling so here's like a traffic pattern this is like a 24-hour period for some reason we have a",
    "start": "687930",
    "end": "696230"
  },
  {
    "text": "large glut of traffic throughout the workday which you know it's pretty",
    "start": "696230",
    "end": "701310"
  },
  {
    "text": "common for like SAS applications oddly in the evening we have our zenith there",
    "start": "701310",
    "end": "707100"
  },
  {
    "text": "first reason but this is our traffic pattern so this is what we need to scale to so we want to make sure that the amount of",
    "start": "707100",
    "end": "712899"
  },
  {
    "text": "instances we have deployed could handle this load within the amount within the",
    "start": "712899",
    "end": "718209"
  },
  {
    "text": "time period that that load exists so in the old days you would probably like draw a line somewhere above like maybe",
    "start": "718209",
    "end": "724209"
  },
  {
    "text": "15% above that that zenith and you would say okay we're gonna provision to this amount so we could handle our daily load",
    "start": "724209",
    "end": "730559"
  },
  {
    "text": "all the scaling you don't have to do that all right so here's an example with M for large instances which are",
    "start": "730559",
    "end": "736209"
  },
  {
    "text": "something like 10 cents an hour anyway",
    "start": "736209",
    "end": "745809"
  },
  {
    "text": "so it cost some amount of money this I think this is wrong but in any event you have a number of",
    "start": "745809",
    "end": "751389"
  },
  {
    "text": "instances for some amount of money this is a pretty large sized instance a couple of virtual cores that's costing",
    "start": "751389",
    "end": "757689"
  },
  {
    "text": "you some amount of money per day and you're scaling auto scaling is adding new instances as your traffic increases",
    "start": "757689",
    "end": "765550"
  },
  {
    "text": "and importantly it scales it down scales it back up and it scales it down but you",
    "start": "765550",
    "end": "770680"
  },
  {
    "text": "could you know again getting back to right sizing you know there's a potential to use more smaller instances",
    "start": "770680",
    "end": "776740"
  },
  {
    "text": "so here's an example the same cost optimization the same kind of like cost dynamics and the same traffic curve",
    "start": "776740",
    "end": "783309"
  },
  {
    "text": "where we replace the M for larges with T two mediums and we we need more of them",
    "start": "783309",
    "end": "788800"
  },
  {
    "text": "right because there are less beefy machines but we have 70 of them and we tell auto scaling okay add and remove",
    "start": "788800",
    "end": "795100"
  },
  {
    "text": "them as need be just doing this just using a more appropriate instance size gets us a quarter saving so we're able",
    "start": "795100",
    "end": "801430"
  },
  {
    "text": "to save 26% on what we we had here with the M for largest so a couple things I",
    "start": "801430",
    "end": "808600"
  },
  {
    "text": "mean this ties in one and three auto scaling will add and remove capacity for you automatically and make sure that",
    "start": "808600",
    "end": "815889"
  },
  {
    "text": "your right sizing your instances to achieve the maximal savings possible",
    "start": "815889",
    "end": "821639"
  },
  {
    "start": "822000",
    "end": "822000"
  },
  {
    "text": "turn off unused instances okay so another thing we see often are you know a customer will come and say you know",
    "start": "822300",
    "end": "828790"
  },
  {
    "text": "trying to save money we'll look for instances that have no usage or have names like dev old or something like",
    "start": "828790",
    "end": "835389"
  },
  {
    "text": "that just stop them right so you're paying on demand",
    "start": "835389",
    "end": "840490"
  },
  {
    "text": "per minute or a second or you know how we're depending upon the license for that instance if you're not using it",
    "start": "840490",
    "end": "846790"
  },
  {
    "text": "just simply stop it and if a CT will stop billing you it's as simple as that if you use some of the newer services",
    "start": "846790",
    "end": "855130"
  },
  {
    "text": "we're gonna talk in the next talk about infrastructure as code but if your instances are being created by services",
    "start": "855130",
    "end": "861610"
  },
  {
    "text": "like cloud formation which is our infrastructure as code service maybe you're using a third party partner tool",
    "start": "861610",
    "end": "867250"
  },
  {
    "text": "like hasha corpse terraform maybe you're using ansible or some other configuration management package if",
    "start": "867250",
    "end": "872320"
  },
  {
    "text": "you're treating your infrastructure as code and it's easily reproducible then tearing down a server shouldn't be a big",
    "start": "872320",
    "end": "877540"
  },
  {
    "text": "decision right it should be a very easy decision to say ok I no longer need that server I'm gonna stop it so we're not paying for it and when I need it later",
    "start": "877540",
    "end": "884320"
  },
  {
    "text": "I'm going to execute that CloudFormation template and get that server back right",
    "start": "884320",
    "end": "889660"
  },
  {
    "text": "so you don't want that to be a big decision and you want to make sure that you don't just have server sitting around waiting for work",
    "start": "889660",
    "end": "894940"
  },
  {
    "text": "that's just costing you money for no reason and you know there are there are",
    "start": "894940",
    "end": "900910"
  },
  {
    "text": "tools and techniques to help you here I mentioned DevOps tools things like containerization helped a lot where",
    "start": "900910",
    "end": "907060"
  },
  {
    "text": "instead of having a single instance dedicated to a single application now you can utilize more of that instance",
    "start": "907060",
    "end": "912640"
  },
  {
    "text": "for multiple applications because containers will capture the environment",
    "start": "912640",
    "end": "917800"
  },
  {
    "text": "for single applications in a self-contained image usage tracking you know using cloud watch metrics just",
    "start": "917800",
    "end": "924430"
  },
  {
    "text": "keeping an eye on what instances and what resources you have in your account from time to time is super helpful okay",
    "start": "924430",
    "end": "933190"
  },
  {
    "text": "for use reserved instances so the next couple are about paying sticker price",
    "start": "933190",
    "end": "938410"
  },
  {
    "text": "so for ec2 specifically the one of the billing dimensions is compute time right",
    "start": "938410",
    "end": "945790"
  },
  {
    "text": "so depending upon the license you use if you're using lennox you're charged by the second if you're using some versions",
    "start": "945790",
    "end": "951520"
  },
  {
    "text": "of Linux or Windows it's by the hour but you're essentially given you're charged",
    "start": "951520",
    "end": "956620"
  },
  {
    "text": "a single fee for that by the hour reserved instance allows you to make a",
    "start": "956620",
    "end": "962760"
  },
  {
    "text": "reservation for a given capacity and for a given period of time and in in",
    "start": "962760",
    "end": "970240"
  },
  {
    "text": "exchange for that AWS will provide a lower rates for that instance so for example if you",
    "start": "970240",
    "end": "976130"
  },
  {
    "text": "have a database server maybe you're running MongoDB and you're running on ec2 you know that MongoDB each",
    "start": "976130",
    "end": "982100"
  },
  {
    "text": "production database server is going to be running 24 by 7 you want to pay the least amount that you can for that",
    "start": "982100",
    "end": "987440"
  },
  {
    "text": "database server you want to ensure that it's on all the time reserved instances allow you to purchase that block of",
    "start": "987440",
    "end": "994700"
  },
  {
    "text": "noodles at that block of compute for a different term it's one year or three years with different payment models",
    "start": "994700",
    "end": "1001450"
  },
  {
    "text": "within that so there's a lot of flexibility within reserved instances to either you know there are no upfront",
    "start": "1001450",
    "end": "1008170"
  },
  {
    "text": "models where you just say look I'm gonna use this for a year give me a lower rate by the hour or by",
    "start": "1008170",
    "end": "1013390"
  },
  {
    "text": "the second or I'm gonna use this for three years and I'm willing to give you all the money up front right and of",
    "start": "1013390",
    "end": "1019390"
  },
  {
    "text": "course that Nets out to be a lower amount of money but essentially what to take away from this is if you have instances running 24 by 7 and you know",
    "start": "1019390",
    "end": "1026260"
  },
  {
    "text": "they're not going away don't pay sticker price for those you use the reserved instance model to pay less for that",
    "start": "1026260",
    "end": "1031930"
  },
  {
    "text": "capacity make sense excuse me yeah there",
    "start": "1031930",
    "end": "1038620"
  },
  {
    "text": "are all upfront models but there are models where there's no upfront so there are models where instead of you just make the commitment for a year right",
    "start": "1038620",
    "end": "1045189"
  },
  {
    "text": "and you don't pay anything upfront but you do get a reduced monthly rate for that instance cool so here's an example",
    "start": "1045190",
    "end": "1055210"
  },
  {
    "start": "1053000",
    "end": "1053000"
  },
  {
    "text": "of RI pricing so if you go onto the ec2 pricing page you're gonna see a super long page with with all this stuff so an",
    "start": "1055210",
    "end": "1061960"
  },
  {
    "text": "example the on demand rate is about a about two and a half pennies an hour if",
    "start": "1061960",
    "end": "1067720"
  },
  {
    "text": "you opt for the the no upfront reservation model you get a 20% savings",
    "start": "1067720",
    "end": "1073690"
  },
  {
    "text": "off the bat so you pay more like you know two cents give or take and you'll see that the number goes down",
    "start": "1073690",
    "end": "1079630"
  },
  {
    "text": "as you either commit for longer periods of time or provide more of the purchase",
    "start": "1079630",
    "end": "1084760"
  },
  {
    "text": "price upfront",
    "start": "1084760",
    "end": "1087210"
  },
  {
    "text": "and reservations for capacity go beyond just ec2 right so ec2 is the canonical",
    "start": "1091020",
    "end": "1098070"
  },
  {
    "text": "example of where to reserve capacity but if you're using things like Amazon ElastiCache or redshift or RDS these",
    "start": "1098070",
    "end": "1106020"
  },
  {
    "text": "also have models where you can reserve nodes and likewise DynamoDB Amazon DynamoDB will allow you to reserve",
    "start": "1106020",
    "end": "1111600"
  },
  {
    "text": "capacity units so you can say look I you know my dynamodb table auto scales for me throughout the day but I know my base",
    "start": "1111600",
    "end": "1118080"
  },
  {
    "text": "utilization is you know whatever X units read and write you can reserve those for a given period of time for a reduced fee",
    "start": "1118080",
    "end": "1127429"
  },
  {
    "text": "okay use spot instances anyone using spot instances today okay cool",
    "start": "1127880",
    "end": "1134870"
  },
  {
    "start": "1128000",
    "end": "1128000"
  },
  {
    "text": "this is this so since reinvent last year this is my latest Bugaboo with customers",
    "start": "1134870",
    "end": "1141480"
  },
  {
    "text": "I like to approach cost optimization as a game because there's an easy way to keep score right so the first thing I",
    "start": "1141480",
    "end": "1147630"
  },
  {
    "text": "look for when I'm in a customer's account is how many on-demand instances do they have and how many of them can we",
    "start": "1147630",
    "end": "1153270"
  },
  {
    "text": "kill so spot instances allow you to use unused ec2 capacity at a service fuge",
    "start": "1153270",
    "end": "1160110"
  },
  {
    "text": "discount up to 90% says 92% there but basically for every instance you're",
    "start": "1160110",
    "end": "1165270"
  },
  {
    "text": "running you can get ten for that hourly price okay so what's the catch the catch is that there's a potential",
    "start": "1165270",
    "end": "1171090"
  },
  {
    "text": "for those instances to be interrupted so the spot market is unused capacity if the capacity changes right the capacity",
    "start": "1171090",
    "end": "1179250"
  },
  {
    "text": "demands change it's possible your spot instances can be reaped or terminated by",
    "start": "1179250",
    "end": "1184320"
  },
  {
    "text": "ec2 all right you'll get a two minute warning that you could monitor and you have two minutes to kind of get the heck",
    "start": "1184320",
    "end": "1190140"
  },
  {
    "text": "out of Dodge and get your work load off that sounds scary it's actually not that scary",
    "start": "1190140",
    "end": "1195330"
  },
  {
    "text": "there are lots and lots lots of different applications where that's totally fine right think about a web",
    "start": "1195330",
    "end": "1201059"
  },
  {
    "text": "application if you're running a web application web application on normal transaction whatever your 99th",
    "start": "1201059",
    "end": "1206490"
  },
  {
    "text": "percentile response time is like that's kind of what you have to plan for right that number is going to be like hundreds",
    "start": "1206490",
    "end": "1212160"
  },
  {
    "text": "of milliseconds at worst it's not going to be minutes so if you have a web application running on a spot instance",
    "start": "1212160",
    "end": "1217380"
  },
  {
    "text": "or more likely a fleet of spot instances and that web application gets interrupted by spot that's",
    "start": "1217380",
    "end": "1224940"
  },
  {
    "text": "it will you know you can drain the load balance or drain what's on there in that two-minute period and then you know that",
    "start": "1224940",
    "end": "1231030"
  },
  {
    "text": "capacity goes away spot through spot fleet which is a way to manage a group",
    "start": "1231030",
    "end": "1236970"
  },
  {
    "text": "of spot instances will spin up a new instance and your application can restart so there are ec2 there excuse me",
    "start": "1236970",
    "end": "1243570"
  },
  {
    "text": "there are AWS services that really shine with spots so for example the Amazon",
    "start": "1243570",
    "end": "1248730"
  },
  {
    "text": "Elastic container service ECS if you ever spin up a cluster of ECS instances",
    "start": "1248730",
    "end": "1254580"
  },
  {
    "text": "is just as a way to run docker containers in production if you ever spin that up there's an option in the",
    "start": "1254580",
    "end": "1259680"
  },
  {
    "text": "console it's a used spot if you select that it will essentially spin up a group of instances on spot for 90% off the",
    "start": "1259680",
    "end": "1266670"
  },
  {
    "text": "sticker price and any time that spot instance is interrupted it has code in",
    "start": "1266670",
    "end": "1271710"
  },
  {
    "text": "it that will automatically monitor that it'll tell us hey I'm about to go bye-bye move my processes somewhere else",
    "start": "1271710",
    "end": "1277440"
  },
  {
    "text": "and ECS will handle it for you all right so at reinvent last year a few things",
    "start": "1277440",
    "end": "1284700"
  },
  {
    "text": "changed with spot a lot of really really really cool changes so spot used to be a pretty volatile market right you can",
    "start": "1284700",
    "end": "1291360"
  },
  {
    "text": "like there I don't have the graph here but if you look at a graph like pre November you'll see that different",
    "start": "1291360",
    "end": "1298920"
  },
  {
    "text": "instances of different availability zones often spiked up and down right since reinvent they've smoothed out",
    "start": "1298920",
    "end": "1305550"
  },
  {
    "text": "pricing changes so pricing changes now happen over weeks period of time so the market is really really stable",
    "start": "1305550",
    "end": "1311130"
  },
  {
    "text": "another thing that they've that spot the spot team changed is that you could spin up spot instances just by running an",
    "start": "1311130",
    "end": "1316650"
  },
  {
    "text": "instance so when you run instances either through the CLI or an API or through the console you could say use",
    "start": "1316650",
    "end": "1322770"
  },
  {
    "text": "the spot market and it'll just spin up the same instance do the same API call that you used before but a fraction of",
    "start": "1322770",
    "end": "1328980"
  },
  {
    "text": "the cost and I see the fraction of it's like really striking I mean if you look at they can m5 large in US East - or",
    "start": "1328980",
    "end": "1336270"
  },
  {
    "text": "Ohio region cost about 20 cents an hour on spot today it's less than 2 cents so",
    "start": "1336270",
    "end": "1342000"
  },
  {
    "text": "you could have 10 of those for one on-demand price like that there's literally no reason not to use it and",
    "start": "1342000",
    "end": "1347820"
  },
  {
    "text": "the way to use it is to build big diversified pools of spot instances across all different kinds of instance",
    "start": "1347820",
    "end": "1354480"
  },
  {
    "text": "types across every available availability zone okay so spot is awesome I you know I",
    "start": "1354480",
    "end": "1361809"
  },
  {
    "text": "can't say it enough like if I think when I was a customer I was a little intimidated by spot because there was",
    "start": "1361809",
    "end": "1367690"
  },
  {
    "text": "some marketplace dynamics too and you had to bid all that's gone all you really have to do is say I want to save money and ect will charge you less make",
    "start": "1367690",
    "end": "1375820"
  },
  {
    "text": "sense so anyone running an on-demand instance for web application today is anyone in this room like tomorrow just",
    "start": "1375820",
    "end": "1380950"
  },
  {
    "text": "spin up a spot instance right move to a spot cluster no reason not so you'll save 90 percent so using spot for HPC",
    "start": "1380950",
    "end": "1390549"
  },
  {
    "start": "1388000",
    "end": "1388000"
  },
  {
    "text": "workloads there's a couple really cool HPC stories with spot there's one out of Clemson a couple of months ago so",
    "start": "1390549",
    "end": "1396789"
  },
  {
    "text": "Clemson University did a large-scale NLP project across like one point one a virtual course right so they were able",
    "start": "1396789",
    "end": "1404019"
  },
  {
    "text": "to 1.1 million virtual course they were able to get that capacity fully on spot and they didn't have to spin it up on",
    "start": "1404019",
    "end": "1410679"
  },
  {
    "text": "demand they were able to use spot they were able to do a fraction of the cost that they could have done it elsewhere",
    "start": "1410679",
    "end": "1415889"
  },
  {
    "text": "another thing that's important to keep in mind with spot and this is something that I don't think we tell enough",
    "start": "1415889",
    "end": "1421809"
  },
  {
    "text": "internally 95% of spot instances are terminated by customers so that means",
    "start": "1421809",
    "end": "1426820"
  },
  {
    "text": "only 5% of instances one out of 20 get reaped by the service so it's actually a the minority event where spot instances",
    "start": "1426820",
    "end": "1433840"
  },
  {
    "text": "get reaped so HPC is a great use case for spa data processing machine learning",
    "start": "1433840",
    "end": "1439450"
  },
  {
    "text": "model training web applications any application that's interruptible job processors that kind of thing okay it",
    "start": "1439450",
    "end": "1449200"
  },
  {
    "text": "all makes sense so far any questions ok cool make use of appropriate storage",
    "start": "1449200",
    "end": "1454990"
  },
  {
    "text": "classes so let's be on there's a ton of ways to store data on AWS right there's",
    "start": "1454990",
    "end": "1460000"
  },
  {
    "start": "1455000",
    "end": "1455000"
  },
  {
    "text": "a ton of different kinds of storage services there's block storage as object storage within that object storage there are many different kinds of storage",
    "start": "1460000",
    "end": "1466299"
  },
  {
    "text": "tiers so you have some decisions to make but remember that there are that's your",
    "start": "1466299",
    "end": "1474370"
  },
  {
    "text": "leverage that's your lever to save money on the data you're storing so knowing the data that you're knowing the",
    "start": "1474370",
    "end": "1480129"
  },
  {
    "text": "dynamics of the data you're storing you know how much data it is how its accessed how often its durability",
    "start": "1480129",
    "end": "1486039"
  },
  {
    "text": "requirements its temperature right how hot is it how often is it going to get just allows you to make some of these",
    "start": "1486039",
    "end": "1491870"
  },
  {
    "text": "decisions so for example Amazon s3",
    "start": "1491870",
    "end": "1497020"
  },
  {
    "text": "provides a couple of different storage tiers one is called you know one is the",
    "start": "1497020",
    "end": "1502130"
  },
  {
    "text": "standard tier that's where you give Amazon s3 an object a file it will",
    "start": "1502130",
    "end": "1507320"
  },
  {
    "text": "distribute that file across at least three facilities it's designed to deliver 11 nines of durability right so",
    "start": "1507320",
    "end": "1512660"
  },
  {
    "text": "that's like you know if you have 10,000 files over a hundred million years or something like that you won't lose you'll lose one file maybe so extremely",
    "start": "1512660",
    "end": "1520370"
  },
  {
    "text": "durable InDesign and pretty cheap right a couple cents a gigabyte and you know",
    "start": "1520370",
    "end": "1526280"
  },
  {
    "text": "s3 is kind of becoming the lingua franca of object storage it's a very well supported API that's supported in lots",
    "start": "1526280",
    "end": "1532790"
  },
  {
    "text": "of application languages and in a lot of client-side tools within s3 there are",
    "start": "1532790",
    "end": "1538309"
  },
  {
    "text": "different storage classes below standard right there's an infrequent access storage class where you tell s3 you know",
    "start": "1538309",
    "end": "1546110"
  },
  {
    "text": "I want you to store this data maybe it's a database backup maybe it's logs that I don't think I'll ever need or but mainly in the emergency",
    "start": "1546110",
    "end": "1553040"
  },
  {
    "text": "you can store it there and pay 50 percent less than you would pay on standard right just by basically",
    "start": "1553040",
    "end": "1559730"
  },
  {
    "text": "indicating that you want to use infrequent access on storage there's another storage cure tier called",
    "start": "1559730",
    "end": "1564860"
  },
  {
    "text": "infrequent access single zone where you say not only am I not going to access this data but you know what that whole",
    "start": "1564860",
    "end": "1570770"
  },
  {
    "text": "three facilities thing don't worry about it store it in one place if I lose that data that's a bummer but I could",
    "start": "1570770",
    "end": "1576290"
  },
  {
    "text": "regenerate it no big deal and you'll be charged less for that there's Amazon glacier which is cold cold cold storage",
    "start": "1576290",
    "end": "1583460"
  },
  {
    "text": "so the idea with glacier is think of it as like what you used to put on tape but in the cloud right so I have some data",
    "start": "1583460",
    "end": "1590090"
  },
  {
    "text": "maybe a database backup maybe something like that I want to store it in AWS but I don't",
    "start": "1590090",
    "end": "1596360"
  },
  {
    "text": "think I'm ever going to need it and if I need it I don't need it very quickly I could wait minutes or hours to get that data back Amazon glacier is perfect for that",
    "start": "1596360",
    "end": "1602660"
  },
  {
    "text": "it's great for compliant scenarios as well so if you're like a few financial compliance requirements and you need to",
    "start": "1602660",
    "end": "1609260"
  },
  {
    "text": "store data in the cloud glacier is a great way to do that because it has built in things like vault lock that allow you to ensure that those data",
    "start": "1609260",
    "end": "1616010"
  },
  {
    "text": "don't move for a given period of time 7 years so the point of this is so that",
    "start": "1616010",
    "end": "1621410"
  },
  {
    "text": "was a lot of detail the point of this is there are orange tears and you can choose from these storage tears to pick the exact",
    "start": "1621410",
    "end": "1627799"
  },
  {
    "text": "right place for your data for the least amount of money possible okay",
    "start": "1627799",
    "end": "1634850"
  },
  {
    "text": "this slide is out of date so this reduced you're done in the C storage don't use that that doesn't exist anymore in fact it's so Amazon AWS has",
    "start": "1634850",
    "end": "1643399"
  },
  {
    "text": "been very good about not deprecating services there are services like simple DB which you know most customers",
    "start": "1643399",
    "end": "1650450"
  },
  {
    "text": "probably don't even know about which was an old database service still up still supported still has lots of big",
    "start": "1650450",
    "end": "1655639"
  },
  {
    "text": "customers today reduce redundancy was a storage class that has been deprecated",
    "start": "1655639",
    "end": "1660740"
  },
  {
    "text": "it's still available but it's more expensive than standard so no point in using it excuse me",
    "start": "1660740",
    "end": "1669129"
  },
  {
    "text": "EBS is elastic block store so that's on the block storage side so you know EBS",
    "start": "1669129",
    "end": "1675980"
  },
  {
    "text": "allows you to attach a volume to an ec2 instance and that volume becomes persistent so if you have data that",
    "start": "1675980",
    "end": "1682370"
  },
  {
    "text": "you're storing like let's say a database server you may attach an EBS volume to store its data and that EBS volume is",
    "start": "1682370",
    "end": "1688759"
  },
  {
    "text": "like network-attached storage a single volume there's also EFS the elastic file storage which is essentially like a NFS",
    "start": "1688759",
    "end": "1697759"
  },
  {
    "text": "mount across multiple instances so and those had their own performance dynamics",
    "start": "1697759",
    "end": "1704720"
  },
  {
    "text": "they have their own cost dynamics so just about picking the right cheapest most efficient most performant store for",
    "start": "1704720",
    "end": "1712009"
  },
  {
    "text": "your workload yes ma'am no no go for it",
    "start": "1712009",
    "end": "1719049"
  },
  {
    "text": "totally yeah that's coming out the question was we talked about lamb doesn't in blue cost savings yeah and",
    "start": "1724930",
    "end": "1730180"
  },
  {
    "text": "that's great the best the best server is no server right so lambda is something",
    "start": "1730180",
    "end": "1735700"
  },
  {
    "text": "we're very excited about and frankly customers are excited about for that reason for cost all flowed from your",
    "start": "1735700",
    "end": "1741100"
  },
  {
    "text": "architecture okay so the less you have to do directly the less undifferentiated",
    "start": "1741100",
    "end": "1746950"
  },
  {
    "text": "heavy lifting you have to do the better so things like you know I think if you look at the way developers used the",
    "start": "1746950",
    "end": "1753820"
  },
  {
    "text": "cloud you know ten years ago there was lots of building our own web layers there you know our own load balancing",
    "start": "1753820",
    "end": "1760030"
  },
  {
    "text": "layers there was our you know a lot of you know kind of like building our own",
    "start": "1760030",
    "end": "1765220"
  },
  {
    "text": "mini kind of CD ends right with things like cloud front you can get that functionality kind of out of the box",
    "start": "1765220",
    "end": "1770740"
  },
  {
    "text": "right for every website with static content if you're serving that static",
    "start": "1770740",
    "end": "1776470"
  },
  {
    "text": "content through your main web server that has your business logic well every moment that it's throwing bits over the",
    "start": "1776470",
    "end": "1782830"
  },
  {
    "text": "wire of an image is a moment that it's not spending doing things that are",
    "start": "1782830",
    "end": "1788440"
  },
  {
    "text": "proprietary to your business like running your business logic servicing your API requests so things like Amazon",
    "start": "1788440",
    "end": "1793600"
  },
  {
    "text": "s3 which in addition to being an object store also acts as a static web host with Amazon CloudFront",
    "start": "1793600",
    "end": "1800020"
  },
  {
    "text": "kind of offload that allow you to scale your web server fleet more efficiently",
    "start": "1800020",
    "end": "1805210"
  },
  {
    "text": "right because it's no longer doing the task of just shoveling data over the wire and allows you to offload the",
    "start": "1805210",
    "end": "1812350"
  },
  {
    "text": "maintenance of monitoring of the static web serving system to AWS so use managed",
    "start": "1812350",
    "end": "1819070"
  },
  {
    "text": "services where possible offload things that your web servers don't have to do",
    "start": "1819070",
    "end": "1824440"
  },
  {
    "text": "that another service could do more efficiently and more cheaply take advantage of that yeah and use services",
    "start": "1824440",
    "end": "1832540"
  },
  {
    "start": "1830000",
    "end": "1830000"
  },
  {
    "text": "don't reinvent the wheel so AWS today I think is something like 125 different services you know what downside of that",
    "start": "1832540",
    "end": "1839890"
  },
  {
    "text": "is it's sometimes it's hard to keep up right so lean on us to help you solve the problems you're trying to solve with",
    "start": "1839890",
    "end": "1845920"
  },
  {
    "text": "the services that are in your toolbox here this can seem pretty overwhelming",
    "start": "1845920",
    "end": "1851710"
  },
  {
    "text": "at first and frankly even after a while it can seem a little bit overwhelming that's why there are teams of folks here",
    "start": "1851710",
    "end": "1856780"
  },
  {
    "text": "to help you navigate right and yeah avoid undifferentiated",
    "start": "1856780",
    "end": "1862090"
  },
  {
    "start": "1860000",
    "end": "1860000"
  },
  {
    "text": "lifting so just like with s3 things like Amazon relational database service RDS",
    "start": "1862090",
    "end": "1867880"
  },
  {
    "text": "instead of managing your own my sequel server and spending time on things like figure out how to do high availability",
    "start": "1867880",
    "end": "1873270"
  },
  {
    "text": "figuring out how to encrypt the volume figuring out you know database size",
    "start": "1873270",
    "end": "1879300"
  },
  {
    "text": "security patching etc you know you can lean on Amazon RDS to solve a lot of those problems for you yeah likewise so",
    "start": "1879300",
    "end": "1886510"
  },
  {
    "text": "a lot of these managed services are made to kind of dry up a single problem area across multiple customers into a single",
    "start": "1886510",
    "end": "1892990"
  },
  {
    "text": "managed service that's hopefully that's you know cheaper too cheaper to use and",
    "start": "1892990",
    "end": "1899170"
  },
  {
    "text": "more efficient for your infrastructure ok use consolidated billing so",
    "start": "1899170",
    "end": "1907500"
  },
  {
    "start": "1903000",
    "end": "1903000"
  },
  {
    "text": "consolidate billing helps in a couple of different ways there are lots of customers and startups even at the small",
    "start": "1907500",
    "end": "1913840"
  },
  {
    "text": "scale who have an account for development and account for production consolidate billing allows you to have a",
    "start": "1913840",
    "end": "1919510"
  },
  {
    "text": "global view of all these accounts it also allows you to share I discount so you can reserve instances in your master",
    "start": "1919510",
    "end": "1926380"
  },
  {
    "text": "account and those reservations rain down to your child accounts so this is a small thing it's much smaller than what",
    "start": "1926380",
    "end": "1931540"
  },
  {
    "text": "we've talked about but it really helps to kind of like uncover those hidden spends of you know there's a few thousand dollars of spend each month",
    "start": "1931540",
    "end": "1937270"
  },
  {
    "text": "here in this account that no one was looking at I was just digging a credit card using consolidate billing helps",
    "start": "1937270",
    "end": "1942520"
  },
  {
    "text": "unearth those and and take advantage of",
    "start": "1942520",
    "end": "1950650"
  },
  {
    "start": "1945000",
    "end": "1945000"
  },
  {
    "text": "AWS tools so I mentioned cloud watch there's AWS cost Explorer AWS trusted advisor these are services that are",
    "start": "1950650",
    "end": "1959530"
  },
  {
    "text": "geared toward helping you save money so trusted advisor especially is a service where when you log in it'll tell you",
    "start": "1959530",
    "end": "1965260"
  },
  {
    "text": "here's how much you can save and here are the steps you should take to save that money on using services so I just",
    "start": "1965260",
    "end": "1972190"
  },
  {
    "text": "want to go back to that because there's not a lot left in the deck so server",
    "start": "1972190",
    "end": "1977920"
  },
  {
    "text": "list I don't know how many folks using lambda today you're probably using lambda okay so lambda is a hosted compute",
    "start": "1977920",
    "end": "1984690"
  },
  {
    "text": "service that allows you to run services excuse me functions in the cloud without servers right so the entire kind of",
    "start": "1984690",
    "end": "1992309"
  },
  {
    "text": "server list thing is about giving you a platform where you can deploy your code and that code could run in response to",
    "start": "1992309",
    "end": "1999540"
  },
  {
    "text": "events an event can be an API call from one of your customers maybe it's an object being created in one of the",
    "start": "1999540",
    "end": "2005390"
  },
  {
    "text": "storage systems maybe it's a scheduled event that happens the great thing about",
    "start": "2005390",
    "end": "2011630"
  },
  {
    "text": "lambda is you don't scale anything right so that auto scaling stuff we were talking about before of you know how do",
    "start": "2011630",
    "end": "2018080"
  },
  {
    "text": "i scale up and down with lambda that happens automatically for you you don't pay for idle all right so even with this",
    "start": "2018080",
    "end": "2025070"
  },
  {
    "start": "2020000",
    "end": "2020000"
  },
  {
    "text": "auto scaling bit there's a little waste here right so you see these little this a little bit here that's capacity that's",
    "start": "2025070",
    "end": "2031280"
  },
  {
    "text": "really not being taken advantage of because the grain of scaling here is an entire instance with lambda you're",
    "start": "2031280",
    "end": "2038000"
  },
  {
    "text": "charged as functions executes 100 millisecond blocks and by request so you",
    "start": "2038000",
    "end": "2044179"
  },
  {
    "text": "pay a fraction of a penny for when your code is running as opposed to paying a per second fee for an entire instance so",
    "start": "2044179",
    "end": "2051590"
  },
  {
    "text": "it gives you a really does that all make sense okay it really gives you a very",
    "start": "2051590",
    "end": "2057108"
  },
  {
    "text": "granular way to scale so the gateway drug to lambda that I've seen with customers is the server everyone has",
    "start": "2057109",
    "end": "2064100"
  },
  {
    "text": "this server called like scheduler or cron or something like that that sits",
    "start": "2064100",
    "end": "2069169"
  },
  {
    "text": "out in the corner just waits for every 10 minutes to do something with lambda you can take that code that's running in",
    "start": "2069169",
    "end": "2075590"
  },
  {
    "text": "that server put it in AWS lambda and tell lambda hey I want you to run this every 10 minutes right",
    "start": "2075590",
    "end": "2080720"
  },
  {
    "text": "now instead of paying for that server to run you're just gonna pay lambda for a hundred millisecond 100 millisecond",
    "start": "2080720",
    "end": "2086570"
  },
  {
    "text": "execution blocks for when that code is actually running so it's a really great way to save money you know a lot of this presentation is geared toward how to",
    "start": "2086570",
    "end": "2094550"
  },
  {
    "text": "save money on ec2 instances and you know using RDS and all that but there are even higher level managed services like",
    "start": "2094550",
    "end": "2099859"
  },
  {
    "text": "lambda where you don't have to pay for idle you don't have to worry about scaling and you can just pay for what",
    "start": "2099859",
    "end": "2107690"
  },
  {
    "text": "your code is actually doing as opposed to paying for the entire resource out box does that mean that makes sense you",
    "start": "2107690",
    "end": "2115859"
  },
  {
    "text": "probably knew that but it was there anything specific you wanted to cover",
    "start": "2115859",
    "end": "2119809"
  },
  {
    "text": "yeah yeah so the question is like when do you make sure I got this right when when do I usually do is lambda",
    "start": "2130810",
    "end": "2137350"
  },
  {
    "text": "versus something like ad Bears for gate or the container service yeah yeah",
    "start": "2137350",
    "end": "2146680"
  },
  {
    "text": "so I mean what I've noticed is it's kind of like caching and relational databases right it's usually a lot of customers or",
    "start": "2146680",
    "end": "2153310"
  },
  {
    "text": "infrastructures have both right so they'll move some things into lambda where it makes sense like that scheduler they'll move that into lambda or they'll",
    "start": "2153310",
    "end": "2160090"
  },
  {
    "text": "move a high request rate API endpoint into lambda and then you know either",
    "start": "2160090",
    "end": "2165490"
  },
  {
    "text": "slowly move their entire application into lambda which we're seeing quite a lot or you know have a portion of their",
    "start": "2165490",
    "end": "2171340"
  },
  {
    "text": "application in containers in the portion on lambda it really depends yeah",
    "start": "2171340",
    "end": "2183600"
  },
  {
    "text": "the yeah I mean a couple things to keep in mind right so with the Adria lambda there's a five-minute execution time",
    "start": "2194020",
    "end": "2199869"
  },
  {
    "text": "timeout right so the ceiling is five minutes of execution which means you know customers either divvy up their",
    "start": "2199869",
    "end": "2205720"
  },
  {
    "text": "workload across many lambda functions scatter the work out and gather it and then report on it or they'll use a",
    "start": "2205720",
    "end": "2213430"
  },
  {
    "text": "different kind of compute model where there's no five minute kind of limit right so we launched it a reinvent",
    "start": "2213430",
    "end": "2218950"
  },
  {
    "text": "something called AWS Fargate which allows you to run docker containers on AWS managed hardware so you get a lot of those benefits of service like not",
    "start": "2218950",
    "end": "2225400"
  },
  {
    "text": "having to manage underlying instances you know you're still paying for idle right because I could you're charged for",
    "start": "2225400",
    "end": "2230560"
  },
  {
    "text": "the container running but it allows you to it accommodates a wide range of compute functions or compute tasks where",
    "start": "2230560",
    "end": "2237520"
  },
  {
    "text": "lambda may or may not work cool yes sir",
    "start": "2237520",
    "end": "2242760"
  },
  {
    "text": "yeah",
    "start": "2242760",
    "end": "2245760"
  },
  {
    "text": "yeah",
    "start": "2262070",
    "end": "2264670"
  },
  {
    "text": "yeah sure yeah so the question was or the comment was you know because you're",
    "start": "2268080",
    "end": "2275680"
  },
  {
    "text": "paying per function execution are there use cases where a situ might be a more",
    "start": "2275680",
    "end": "2281050"
  },
  {
    "text": "appropriate compute platform for that because it'll be more cost effective that was your question essentially right or a comment yeah the answer is yes",
    "start": "2281050",
    "end": "2287230"
  },
  {
    "text": "right there's so many different kinds of workloads you know millions and millions of different kinds of applications running on AWS and that's why all these",
    "start": "2287230",
    "end": "2292990"
  },
  {
    "text": "compute models exist together because there's no one answer right there's there's a lot of different kinds of",
    "start": "2292990",
    "end": "2298990"
  },
  {
    "text": "workloads and a lot are suitable for lambda some don't work and things like a TBS for arcane and ECS things like ec2",
    "start": "2298990",
    "end": "2306460"
  },
  {
    "text": "and and other computer models are there to kind of help out there yes sir okay",
    "start": "2306460",
    "end": "2317849"
  },
  {
    "text": "yeah",
    "start": "2321839",
    "end": "2324469"
  },
  {
    "text": "yeah yeah so the question was about p3",
    "start": "2327099",
    "end": "2334369"
  },
  {
    "text": "instances which is our processing instance which is essentially a GPU enabled instance this gentleman was",
    "start": "2334369",
    "end": "2339499"
  },
  {
    "text": "using it with spot and found it to be less than pleasurable because the availability was low and once he did get",
    "start": "2339499",
    "end": "2345499"
  },
  {
    "text": "instances they were starting and stopping on him with specialized",
    "start": "2345499",
    "end": "2350869"
  },
  {
    "text": "instances that's definitely possible let's talk after because I want to know more and we can kind of dig into it but",
    "start": "2350869",
    "end": "2356269"
  },
  {
    "text": "essentially I mean spot there's a there's an X amount of capacity in an",
    "start": "2356269",
    "end": "2361999"
  },
  {
    "text": "AWS region right and there's tools like spot fleet which help you build",
    "start": "2361999",
    "end": "2367819"
  },
  {
    "text": "diversified fleets of ec2 instances to prevent that case you're going for a single instance type it's going to be a",
    "start": "2367819",
    "end": "2374150"
  },
  {
    "text": "lot harder right so you're already starting with a smaller base and you only have a single kind of instance so",
    "start": "2374150",
    "end": "2380479"
  },
  {
    "text": "it's it's the marketplace dynamics will be a little tougher but let's talk about the specifics",
    "start": "2380479",
    "end": "2386349"
  },
  {
    "text": "that's about the limits yes yes so there are limits in place the limits are",
    "start": "2395359",
    "end": "2400589"
  },
  {
    "text": "really there to protect customers but there can be like a lag if just file a ticket sometimes it's a little bit of a",
    "start": "2400589",
    "end": "2406380"
  },
  {
    "text": "bummer but it's there to kind of protect you from like having a script that goes crazy and spins up 100 you know GPU",
    "start": "2406380",
    "end": "2411900"
  },
  {
    "text": "instances and gives you a bad day at Build time yeah let's talk after that all right yes sir yeah",
    "start": "2411900",
    "end": "2421640"
  },
  {
    "text": "yeah yeah so something to keep in mind is that like literally I mean we say",
    "start": "2435890",
    "end": "2441890"
  },
  {
    "text": "this little time but like 95% of what we build is just based upon like questions that customers ask us in conversations",
    "start": "2441890",
    "end": "2447799"
  },
  {
    "text": "and like hey I need this to do my job so you could expect that that's not the first time I've heard that question you",
    "start": "2447799",
    "end": "2453019"
  },
  {
    "text": "could expect there's something on roadmap somewhere across different teams to support GPUs across all of our compute models I don't have any",
    "start": "2453019",
    "end": "2458930"
  },
  {
    "text": "specifics of course but I would encourage you to ping your account manager and tell him or her hey I need this because that feedback will get to",
    "start": "2458930",
    "end": "2465109"
  },
  {
    "text": "the service teams enforcer all right",
    "start": "2465109",
    "end": "2472069"
  },
  {
    "text": "cool thanks everyone let's stretch and we'll be back here in half an hour thank you all right so we have a break at this",
    "start": "2472069",
    "end": "2478369"
  },
  {
    "text": "point 15 minutes and then we'll get started again so definitely if you have",
    "start": "2478369",
    "end": "2483410"
  },
  {
    "text": "more questions for John hit him up out of the ask an architect bar otherwise he'll be back in the room in about 15",
    "start": "2483410",
    "end": "2489890"
  },
  {
    "text": "minutes for the next talk",
    "start": "2489890",
    "end": "2492880"
  }
]