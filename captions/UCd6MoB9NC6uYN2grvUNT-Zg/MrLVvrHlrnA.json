[
  {
    "start": "0",
    "end": "21000"
  },
  {
    "text": "[Music]",
    "start": "120",
    "end": "1120"
  },
  {
    "text": "[Applause]",
    "start": "1120",
    "end": "3060"
  },
  {
    "text": "[Music]",
    "start": "3060",
    "end": "8160"
  },
  {
    "text": "hello I'm Dan a senior technical account",
    "start": "8160",
    "end": "10559"
  },
  {
    "text": "manager here at the AWS office in Denver",
    "start": "10559",
    "end": "13160"
  },
  {
    "text": "today I'm going to show you how to",
    "start": "13160",
    "end": "14719"
  },
  {
    "text": "configure cores in Amazon simple storage",
    "start": "14719",
    "end": "17000"
  },
  {
    "text": "service and then confirm the cores rule",
    "start": "17000",
    "end": "19160"
  },
  {
    "text": "using curl let's get started you can",
    "start": "19160",
    "end": "22240"
  },
  {
    "start": "21000",
    "end": "122000"
  },
  {
    "text": "apply cross origin resource sharing or",
    "start": "22240",
    "end": "24279"
  },
  {
    "text": "cores rules to your bucket either using",
    "start": "24279",
    "end": "26439"
  },
  {
    "text": "the Amazon S3 console or AWS command",
    "start": "26439",
    "end": "29119"
  },
  {
    "text": "line interface to test the Kors rules on",
    "start": "29119",
    "end": "31560"
  },
  {
    "text": "your Amazon S3 bucket use the corl",
    "start": "31560",
    "end": "33800"
  },
  {
    "text": "command Kors is a feature of HTTP that",
    "start": "33800",
    "end": "37000"
  },
  {
    "text": "uses headers to allow browsers to show",
    "start": "37000",
    "end": "38800"
  },
  {
    "text": "the content that a web server requested",
    "start": "38800",
    "end": "40879"
  },
  {
    "text": "from a different origin if you make a",
    "start": "40879",
    "end": "42960"
  },
  {
    "text": "cross origin request to an Amazon S3",
    "start": "42960",
    "end": "44960"
  },
  {
    "text": "bucket that isn't defined by a Coors",
    "start": "44960",
    "end": "46760"
  },
  {
    "text": "rule then the Coors header isn't",
    "start": "46760",
    "end": "48680"
  },
  {
    "text": "returned for example the following",
    "start": "48680",
    "end": "50879"
  },
  {
    "text": "command does not return the access",
    "start": "50879",
    "end": "52920"
  },
  {
    "text": "control headers when cores is not active",
    "start": "52920",
    "end": "55520"
  },
  {
    "text": "in this demo we'll be using cloudshell",
    "start": "55520",
    "end": "57280"
  },
  {
    "text": "in the console to execute the commands",
    "start": "57280",
    "end": "60160"
  },
  {
    "text": "as we can see in the below response no",
    "start": "60160",
    "end": "62199"
  },
  {
    "text": "cores headers are",
    "start": "62199",
    "end": "63519"
  },
  {
    "text": "present if a web server made a similar",
    "start": "63519",
    "end": "65960"
  },
  {
    "text": "request to a website then the content",
    "start": "65960",
    "end": "68000"
  },
  {
    "text": "retrieve from your bucket won't appear",
    "start": "68000",
    "end": "69640"
  },
  {
    "text": "in your browser to allow your content to",
    "start": "69640",
    "end": "72159"
  },
  {
    "text": "appear configure a course policy on your",
    "start": "72159",
    "end": "74360"
  },
  {
    "text": "Amazon S3 bucket proper configuration of",
    "start": "74360",
    "end": "76960"
  },
  {
    "text": "the Coors policy make sure the",
    "start": "76960",
    "end": "78920"
  },
  {
    "text": "appropriate headers are returned you can",
    "start": "78920",
    "end": "80960"
  },
  {
    "text": "configure a Coors rule on your bucket",
    "start": "80960",
    "end": "83079"
  },
  {
    "text": "using the Amazon S3 console or AWS",
    "start": "83079",
    "end": "86799"
  },
  {
    "text": "CLI let's validate that certain calls",
    "start": "86799",
    "end": "89200"
  },
  {
    "text": "are blocked to this bucket because Kors",
    "start": "89200",
    "end": "91159"
  },
  {
    "text": "is not active in this example we'll",
    "start": "91159",
    "end": "93799"
  },
  {
    "text": "perform a pre-flight check by seeing",
    "start": "93799",
    "end": "96040"
  },
  {
    "text": "which options are allowed for a given",
    "start": "96040",
    "end": "97880"
  },
  {
    "text": "URL using curl in addition we'll specify",
    "start": "97880",
    "end": "101280"
  },
  {
    "text": "get as the access control request method",
    "start": "101280",
    "end": "103759"
  },
  {
    "text": "header this example will fail because we",
    "start": "103759",
    "end": "106240"
  },
  {
    "text": "have not allowed this origin to make",
    "start": "106240",
    "end": "107680"
  },
  {
    "text": "calls to the bucket here you can see",
    "start": "107680",
    "end": "110680"
  },
  {
    "text": "that Amazon S3 returns a 403 Forbidden",
    "start": "110680",
    "end": "113320"
  },
  {
    "text": "error stating that Kors is not enabled",
    "start": "113320",
    "end": "115960"
  },
  {
    "text": "for this bucket to configure a Coors",
    "start": "115960",
    "end": "117960"
  },
  {
    "text": "rule on your bucket using the Amazon S3",
    "start": "117960",
    "end": "120119"
  },
  {
    "text": "console perform the following steps sign",
    "start": "120119",
    "end": "122600"
  },
  {
    "start": "122000",
    "end": "196000"
  },
  {
    "text": "in to the AWS Management console in this",
    "start": "122600",
    "end": "125320"
  },
  {
    "text": "demo we are already authenticated so",
    "start": "125320",
    "end": "127200"
  },
  {
    "text": "we'll skip that step open the Amazon S3",
    "start": "127200",
    "end": "131120"
  },
  {
    "text": "console select the bucket choose the",
    "start": "131120",
    "end": "134000"
  },
  {
    "text": "permissions tab scroll down and in the",
    "start": "134000",
    "end": "136920"
  },
  {
    "text": "cross origin resource sharing pane",
    "start": "136920",
    "end": "139640"
  },
  {
    "text": "choose edit in the text box enter the",
    "start": "139640",
    "end": "142599"
  },
  {
    "text": "Json cores rule that you want to",
    "start": "142599",
    "end": "144640"
  },
  {
    "text": "activate in this scenario we'll be",
    "start": "144640",
    "end": "146920"
  },
  {
    "text": "accepting get and head rest API calls",
    "start": "146920",
    "end": "150319"
  },
  {
    "text": "from",
    "start": "150319",
    "end": "151959"
  },
  {
    "text": "www.example.com select save changes to",
    "start": "151959",
    "end": "155440"
  },
  {
    "text": "save the course policy that you just",
    "start": "155440",
    "end": "157280"
  },
  {
    "text": "entered in your console execute the",
    "start": "157280",
    "end": "159840"
  },
  {
    "text": "previously run command to verify that it",
    "start": "159840",
    "end": "162120"
  },
  {
    "text": "is successful you can now see Access",
    "start": "162120",
    "end": "165040"
  },
  {
    "text": "Control headers in the response from",
    "start": "165040",
    "end": "168080"
  },
  {
    "text": "S3 to configure cores using the AWS CLI",
    "start": "168080",
    "end": "171560"
  },
  {
    "text": "you can use the following AWS S3 API",
    "start": "171560",
    "end": "174120"
  },
  {
    "text": "command if you receive any errors while",
    "start": "174120",
    "end": "176360"
  },
  {
    "text": "running this command make sure you are",
    "start": "176360",
    "end": "178000"
  },
  {
    "text": "running the most recent version of the",
    "start": "178000",
    "end": "179480"
  },
  {
    "text": "aw us CLI if the execution of the",
    "start": "179480",
    "end": "181959"
  },
  {
    "text": "command is successful you'll not see any",
    "start": "181959",
    "end": "185080"
  },
  {
    "text": "output you can verify the current cores",
    "start": "185080",
    "end": "187560"
  },
  {
    "text": "policy also using the AWS CLI use the",
    "start": "187560",
    "end": "190680"
  },
  {
    "text": "following AWS S3 API command to retrieve",
    "start": "190680",
    "end": "193680"
  },
  {
    "text": "the current cores rule for your",
    "start": "193680",
    "end": "196239"
  },
  {
    "start": "196000",
    "end": "345000"
  },
  {
    "text": "bucket if you encounter unexpected",
    "start": "196239",
    "end": "198560"
  },
  {
    "text": "behavior when you access buckets with",
    "start": "198560",
    "end": "200200"
  },
  {
    "text": "the cores configuration make sure that",
    "start": "200200",
    "end": "202280"
  },
  {
    "text": "your cores rule allows the correct",
    "start": "202280",
    "end": "203959"
  },
  {
    "text": "headers methods and Origins using the",
    "start": "203959",
    "end": "206760"
  },
  {
    "text": "options flag with curl as shown earlier",
    "start": "206760",
    "end": "209319"
  },
  {
    "text": "can be useful when trying to determine",
    "start": "209319",
    "end": "211080"
  },
  {
    "text": "which methods are allowed once cores is",
    "start": "211080",
    "end": "212959"
  },
  {
    "text": "configured we'll run the same command we",
    "start": "212959",
    "end": "215159"
  },
  {
    "text": "ran earlier but pay special attention to",
    "start": "215159",
    "end": "217319"
  },
  {
    "text": "the access control allow methods",
    "start": "217319",
    "end": "220360"
  },
  {
    "text": "header in the output we can see that the",
    "start": "220360",
    "end": "223080"
  },
  {
    "text": "access control allow methods header",
    "start": "223080",
    "end": "225000"
  },
  {
    "text": "allows for the get and head methods",
    "start": "225000",
    "end": "227080"
  },
  {
    "text": "which is what we defined earlier in our",
    "start": "227080",
    "end": "228680"
  },
  {
    "text": "cores rule for the bucket when",
    "start": "228680",
    "end": "231360"
  },
  {
    "text": "troubleshooting you can capture the",
    "start": "231360",
    "end": "232959"
  },
  {
    "text": "complete request in response using a",
    "start": "232959",
    "end": "234959"
  },
  {
    "text": "tool of your choice including curl for",
    "start": "234959",
    "end": "237640"
  },
  {
    "text": "each request the Amazon S3 received",
    "start": "237640",
    "end": "240319"
  },
  {
    "text": "With An Origin specified you must have a",
    "start": "240319",
    "end": "242400"
  },
  {
    "text": "cores rule that matches the data in your",
    "start": "242400",
    "end": "244360"
  },
  {
    "text": "request here are a few items you should",
    "start": "244360",
    "end": "246519"
  },
  {
    "text": "verify in your cores rule if you are",
    "start": "246519",
    "end": "248400"
  },
  {
    "text": "troubleshooting unexpected behavior when",
    "start": "248400",
    "end": "250480"
  },
  {
    "text": "making a cross origin call to Amazon S3",
    "start": "250480",
    "end": "253599"
  },
  {
    "text": "verify the request has the origin header",
    "start": "253599",
    "end": "255959"
  },
  {
    "text": "if the header is missing then Amazon S3",
    "start": "255959",
    "end": "258400"
  },
  {
    "text": "doesn't treat the request as a cross",
    "start": "258400",
    "end": "259880"
  },
  {
    "text": "origin request and doesn't send cor's",
    "start": "259880",
    "end": "262079"
  },
  {
    "text": "response headers in the response verify",
    "start": "262079",
    "end": "264720"
  },
  {
    "text": "the origin header in your request",
    "start": "264720",
    "end": "266479"
  },
  {
    "text": "matches at least one of the allowed",
    "start": "266479",
    "end": "268160"
  },
  {
    "text": "origin elements in the speciic speci",
    "start": "268160",
    "end": "269800"
  },
  {
    "text": "ified cores rule the scheme host and",
    "start": "269800",
    "end": "272759"
  },
  {
    "text": "Port values in the origin request must",
    "start": "272759",
    "end": "275360"
  },
  {
    "text": "match the allowed origin elements in the",
    "start": "275360",
    "end": "277840"
  },
  {
    "text": "cores rule for example suppose that you",
    "start": "277840",
    "end": "280360"
  },
  {
    "text": "set the cores rule to allow the origin",
    "start": "280360",
    "end": "282600"
  },
  {
    "text": "HTTP",
    "start": "282600",
    "end": "284759"
  },
  {
    "text": "col",
    "start": "284759",
    "end": "286560"
  },
  {
    "text": "www.example.com when you do this the",
    "start": "286560",
    "end": "290400"
  },
  {
    "text": "https",
    "start": "290400",
    "end": "292280"
  },
  {
    "text": "colon",
    "start": "292280",
    "end": "294360"
  },
  {
    "text": "www.example.com and HTTP",
    "start": "294360",
    "end": "298639"
  },
  {
    "text": "colon ww. example.com",
    "start": "298639",
    "end": "302039"
  },
  {
    "text": "80 origins in your request don't match",
    "start": "302039",
    "end": "305080"
  },
  {
    "text": "the allowed origin in your configuration",
    "start": "305080",
    "end": "307759"
  },
  {
    "text": "verify that the method in your request",
    "start": "307759",
    "end": "310400"
  },
  {
    "text": "or pre-flight request the method that's",
    "start": "310400",
    "end": "313080"
  },
  {
    "text": "specified in the access control request",
    "start": "313080",
    "end": "315360"
  },
  {
    "text": "method is one of the allowed methods",
    "start": "315360",
    "end": "317800"
  },
  {
    "text": "elements in the same cores rule if a",
    "start": "317800",
    "end": "320840"
  },
  {
    "text": "pre-flight request includes an access",
    "start": "320840",
    "end": "323720"
  },
  {
    "text": "control request headers header verify",
    "start": "323720",
    "end": "326560"
  },
  {
    "text": "that the cores rule includes the allowed",
    "start": "326560",
    "end": "328759"
  },
  {
    "text": "header entries for each value in the",
    "start": "328759",
    "end": "330960"
  },
  {
    "text": "access control request headers",
    "start": "330960",
    "end": "334160"
  },
  {
    "text": "header and now you know how to configure",
    "start": "334160",
    "end": "336560"
  },
  {
    "text": "cross origin resource sharing otherwise",
    "start": "336560",
    "end": "338720"
  },
  {
    "text": "known as cores in Amazon S3 and also",
    "start": "338720",
    "end": "341840"
  },
  {
    "text": "confirm cross origin resource sharing is",
    "start": "341840",
    "end": "343800"
  },
  {
    "text": "working using curl thanks for watching",
    "start": "343800",
    "end": "346880"
  },
  {
    "start": "345000",
    "end": "361000"
  },
  {
    "text": "and happy cloud computing from all of us",
    "start": "346880",
    "end": "348840"
  },
  {
    "text": "here at AWS",
    "start": "348840",
    "end": "350940"
  },
  {
    "text": "[Applause]",
    "start": "350940",
    "end": "353020"
  },
  {
    "text": "[Music]",
    "start": "353020",
    "end": "361160"
  }
]