[
  {
    "start": "0",
    "end": "171000"
  },
  {
    "text": "thank you everybody this is the third session in the services and offerings",
    "start": "650",
    "end": "7049"
  },
  {
    "text": "track thank you so much for coming I'm excited that Chad schmoozer and Chris",
    "start": "7049",
    "end": "13620"
  },
  {
    "text": "Malik are going to present amazon ecs chad is exceptionally deep in Linux and",
    "start": "13620",
    "end": "21570"
  },
  {
    "text": "dr. and similar technologies been a solutions architect for amazon web services for a few years now and chad",
    "start": "21570",
    "end": "28080"
  },
  {
    "text": "has been anchoring our solutions architecture for education in Southern California I'm also very excited that",
    "start": "28080",
    "end": "35969"
  },
  {
    "text": "Chris Malik is here to present Chris's Associate Director for academic",
    "start": "35969",
    "end": "41100"
  },
  {
    "text": "development at Caltech and he manages academic development services in the",
    "start": "41100",
    "end": "46530"
  },
  {
    "text": "information management systems and services department thank you so much for coming Chris I really appreciate it",
    "start": "46530",
    "end": "51590"
  },
  {
    "text": "that I'll hand it over to Chad thank you so much everybody thank you like so hi",
    "start": "51590",
    "end": "58050"
  },
  {
    "text": "everyone hear me okay I'm like on all right so thanks for coming today again",
    "start": "58050",
    "end": "63359"
  },
  {
    "text": "my name is Chad schmutz arama solutions architect with amazon web services based out of southern california my primary",
    "start": "63359",
    "end": "69390"
  },
  {
    "text": "customer base is our education customers and education technology customers so in",
    "start": "69390",
    "end": "74729"
  },
  {
    "text": "this session today I'm going to talk about Amazon ec2 container service with docker then I'll turn it over to Chris",
    "start": "74729",
    "end": "81540"
  },
  {
    "text": "and he'll talk about their the campus migration of their internet portal two",
    "start": "81540",
    "end": "86670"
  },
  {
    "text": "containers using ecs Chris and I worked together for many years at Caltech so I'm really thrilled to be here today",
    "start": "86670",
    "end": "92700"
  },
  {
    "text": "presenting with him all right so quick show of hands who in this room has heard",
    "start": "92700",
    "end": "97860"
  },
  {
    "text": "of containers or docker okay excellent excellent and and who is using docker or",
    "start": "97860",
    "end": "104130"
  },
  {
    "text": "containers okay so okay good amount of go about okay so that's fantastic so I'm going to quickly cover why you should",
    "start": "104130",
    "end": "110970"
  },
  {
    "text": "consider using containers give you a very high level overview of dr. itself and then I'll dive a bit more into the",
    "start": "110970",
    "end": "117840"
  },
  {
    "text": "ec2 container service itself and hopefully by the end of the session will be as excited about containers and dr.",
    "start": "117840",
    "end": "123270"
  },
  {
    "text": "as I am so all right so why containers let's think about why you should",
    "start": "123270",
    "end": "128520"
  },
  {
    "text": "consider moving to containers in urine alright so here's a very common scenario",
    "start": "128520",
    "end": "133640"
  },
  {
    "text": "that I imagine most of you in this room have encountered right so maybe you have a different group of develop development",
    "start": "133640",
    "end": "139250"
  },
  {
    "text": "teams that are developing on different application stacks maybe some of them use Python maybe some use Ruby others",
    "start": "139250",
    "end": "145310"
  },
  {
    "text": "use Java or maybe your dev tested environment runs on a different hardware platform than your production",
    "start": "145310",
    "end": "150799"
  },
  {
    "text": "environment because of budgetary concerns or reasons or legacy reasons or maybe your developers like to develop on",
    "start": "150799",
    "end": "157280"
  },
  {
    "text": "their mac laptops using bleeding edge libraries but the production environment",
    "start": "157280",
    "end": "162349"
  },
  {
    "text": "is a more conservative Linux environment with a different version of the web framework installed so does that sound familiar to any of you hopefully all",
    "start": "162349",
    "end": "170239"
  },
  {
    "text": "right so the solution to this I would like to tell you is that containers can",
    "start": "170239",
    "end": "175639"
  },
  {
    "start": "171000",
    "end": "171000"
  },
  {
    "text": "solve this problem so containers are essentially a unit of software delivery right with a benefit of being extremely",
    "start": "175639",
    "end": "181879"
  },
  {
    "text": "portable very lightweight and consistent they can be deployed and running in most current environments and you can deploy",
    "start": "181879",
    "end": "188900"
  },
  {
    "text": "and run anything you want inside the container itself all right so quick",
    "start": "188900",
    "end": "194239"
  },
  {
    "start": "193000",
    "end": "193000"
  },
  {
    "text": "difference between virtual machines and containers right so hypervisor virtualization usually means running",
    "start": "194239",
    "end": "200389"
  },
  {
    "text": "independent virtual machines on an intermediate abstraction layer either on top of an OS or directly on the hardware",
    "start": "200389",
    "end": "206090"
  },
  {
    "text": "containers are different in that they run in user space right so the memory dedicated to handling applications is",
    "start": "206090",
    "end": "211459"
  },
  {
    "text": "round on top of the OS is Colonel they're generally considered lighter than hypervisor virtualization and that",
    "start": "211459",
    "end": "217489"
  },
  {
    "text": "means there's a lot less overhead so the concept of containers themselves have been around for quite a while so think",
    "start": "217489",
    "end": "222680"
  },
  {
    "text": "to root freebsd jails solaris containers openvz lxc right with docker containers",
    "start": "222680",
    "end": "228139"
  },
  {
    "text": "are based on the native lib container library and dr. also takes advantage of C groups and Colonel Lane spaces to",
    "start": "228139",
    "end": "234379"
  },
  {
    "text": "provide isolation of processes resources network and file systems each container",
    "start": "234379",
    "end": "240019"
  },
  {
    "text": "has its own process environment virtual network interface and our root filesystem the file system itself is is",
    "start": "240019",
    "end": "245900"
  },
  {
    "text": "copy-on-write meaning it's layered it's very fast and it doesn't require much disk space standard in standard out and",
    "start": "245900",
    "end": "252440"
  },
  {
    "text": "standard air are collected logged and made available to you and you can also create a pseudo TTYL and log in with an",
    "start": "252440",
    "end": "259039"
  },
  {
    "text": "interactive shell on the container itself if you'd like all right so you might be thinking that sounds interesting but why should I",
    "start": "259039",
    "end": "266130"
  },
  {
    "start": "263000",
    "end": "263000"
  },
  {
    "text": "really use containers so there's four key advantages and benefits to using containers right the first is that containers are very portable the image",
    "start": "266130",
    "end": "274020"
  },
  {
    "text": "itself is consistent and immutable no matter where you run it where you started it's the same that makes the dev",
    "start": "274020",
    "end": "279630"
  },
  {
    "text": "lifecycle simpler right the image that works on the developers laptop also works in production whether I started",
    "start": "279630",
    "end": "285960"
  },
  {
    "text": "today or I started tomorrow or that I scale it's going to be the same exact thing there's no surprises the entire",
    "start": "285960",
    "end": "291420"
  },
  {
    "text": "application itself is self-contained right the images the version which makes deployment and scaling easier because",
    "start": "291420",
    "end": "296790"
  },
  {
    "text": "the image itself includes all of the dependencies and images are usually small in the tens of megabytes of size",
    "start": "296790",
    "end": "303870"
  },
  {
    "text": "and that makes them very very shareable containers are also very flexible or you can create clean reproducible and",
    "start": "303870",
    "end": "310410"
  },
  {
    "text": "modular environments so whereas in the past multiple processes would run on the same OS maybe you have a ruby layer a",
    "start": "310410",
    "end": "316200"
  },
  {
    "text": "caching layer a log pushing layer now containers make it very easy to decompose and happen to smaller chunks",
    "start": "316200",
    "end": "322560"
  },
  {
    "text": "things like micro services that allow you to reduce complexity and letting teams move faster while still running",
    "start": "322560",
    "end": "329190"
  },
  {
    "text": "processes on the same underlying host and that avoids issues like library conflicts and it streamlines both code",
    "start": "329190",
    "end": "335190"
  },
  {
    "text": "deployment and infrastructure management the third advantage is that docker",
    "start": "335190",
    "end": "340380"
  },
  {
    "text": "images are fast but saying that docker images themselves start fast sales of technologies short as speed is apparent",
    "start": "340380",
    "end": "347040"
  },
  {
    "text": "in both performance characteristics and in the application lifecycle and development of benefits right so yes",
    "start": "347040",
    "end": "352830"
  },
  {
    "text": "containers do start quickly because they're really just firing up a new process on the system but every container can be a single threaded",
    "start": "352830",
    "end": "358860"
  },
  {
    "text": "development stream with less interdependencies right so that means individual development teams can focus",
    "start": "358860",
    "end": "364590"
  },
  {
    "text": "on their own life cycle without worrying about conflicting with each other or with the base operating system and there",
    "start": "364590",
    "end": "370740"
  },
  {
    "text": "are also operation benefits right so for example if the central IT group maintains the base docker image the",
    "start": "370740",
    "end": "376860"
  },
  {
    "text": "developer can simply do a new docker build we can pull in that base image and then you can really get back to focusing on his app and making",
    "start": "376860",
    "end": "383330"
  },
  {
    "text": "the whole streamlined streamlining the whole process to be faster for the build and release cycle and finally containers",
    "start": "383330",
    "end": "391159"
  },
  {
    "text": "are efficient right so you can allocate exactly the resources you want the very specific amount of CPU RAM disk network",
    "start": "391159",
    "end": "398419"
  },
  {
    "text": "etc can all be very fine-grained and fine-tuned for your container insistence shares the same OS kernel and libraries",
    "start": "398419",
    "end": "405139"
  },
  {
    "text": "containers effectively use less resources than running the same processes on different virtual machines",
    "start": "405139",
    "end": "411340"
  },
  {
    "text": "all right so let's look at some common use cases for containers all right so containers make it easier to build and",
    "start": "411340",
    "end": "417080"
  },
  {
    "start": "412000",
    "end": "412000"
  },
  {
    "text": "deploy things more rapidly because the environment is the same building the container in in dev pushing it to task",
    "start": "417080",
    "end": "423979"
  },
  {
    "text": "releasing it to prod this can also be very useful for customers running in hybrid environments where you need to be",
    "start": "423979",
    "end": "429500"
  },
  {
    "text": "sure that you're deploying the same exact environment no matter where you're ultimately deploying two containers make",
    "start": "429500",
    "end": "435529"
  },
  {
    "text": "it easier to keep consistent environments for service-oriented architectures or micro services also",
    "start": "435529",
    "end": "440810"
  },
  {
    "text": "many of these services aren't very resource intensive so you can place them together on our shared single instance",
    "start": "440810",
    "end": "446349"
  },
  {
    "text": "sometimes customers have very short-lived workflows that need entire",
    "start": "446349",
    "end": "451550"
  },
  {
    "text": "environment setup for them maybe a queuing system a continuous integration system that doesn't always map too well",
    "start": "451550",
    "end": "457520"
  },
  {
    "text": "to the hourly / building model method of an ec2 instance right so docker can be one workaround for that allowing them to",
    "start": "457520",
    "end": "464419"
  },
  {
    "text": "push and pop containers on to the instance as necessary and then you can also build you know isolated execution",
    "start": "464419",
    "end": "470839"
  },
  {
    "text": "environments for testing code maybe a playground for a go environment or similar ok so let's take a second to",
    "start": "470839",
    "end": "478310"
  },
  {
    "text": "understand exactly what docker is right so doctor is a platform designed to help automate deployment and application",
    "start": "478310",
    "end": "484610"
  },
  {
    "text": "containers right so it provides tools to manage and deploy your applications with tools for such as dr. build dr. pol dr.",
    "start": "484610",
    "end": "492110"
  },
  {
    "text": "run etc essentially dr. came along and made it very easy to build use and to",
    "start": "492110",
    "end": "497120"
  },
  {
    "text": "manage containers so this is what a very common docker environment looks like so",
    "start": "497120",
    "end": "502669"
  },
  {
    "start": "500000",
    "end": "500000"
  },
  {
    "text": "you have docker running on the host environment which is effectively the docker demon the images themselves are",
    "start": "502669",
    "end": "509479"
  },
  {
    "text": "being stored in a doctor repository oh sorry dr. registry such as the ec2 container registry service or dr. hub",
    "start": "509479",
    "end": "516150"
  },
  {
    "text": "and then the docker client is used to build pull and run docker images on that host in this example you can see we have",
    "start": "516150",
    "end": "523229"
  },
  {
    "text": "multiple containers running different images with different based linux distributions all independent of the",
    "start": "523230",
    "end": "528600"
  },
  {
    "text": "host operating system which is a very powerful thing to think about all right so now let's talk about the ec2",
    "start": "528600",
    "end": "534660"
  },
  {
    "text": "container service and how it handles cluster management all right so scheduling resources on a cluster is",
    "start": "534660",
    "end": "541080"
  },
  {
    "text": "much like scheduling a meeting right you need to find an open availability and perhaps a meeting room with some",
    "start": "541080",
    "end": "546140"
  },
  {
    "text": "specific requirements maybe number of seats maybe a projector etc all right",
    "start": "546140",
    "end": "551840"
  },
  {
    "text": "the docker CLI itself is great if you want to run a single container on your laptop maybe you're just going to fire",
    "start": "551840",
    "end": "557310"
  },
  {
    "text": "off dr. run my image and your container has started in you and you're ready to go for that single container but what",
    "start": "557310",
    "end": "563550"
  },
  {
    "text": "happens when you do this right so scaling to hundreds of containers is a very challenging thing now you're",
    "start": "563550",
    "end": "569040"
  },
  {
    "start": "564000",
    "end": "564000"
  },
  {
    "text": "suddenly managing a cluster and cluster management is hard you need a way to intelligently place your containers and",
    "start": "569040",
    "end": "575160"
  },
  {
    "text": "instances that have resources and that means you know to know the state of the cluster at all times right you need to",
    "start": "575160",
    "end": "581280"
  },
  {
    "text": "know things like what instances have available resources like memory and ports available to me how do I know if",
    "start": "581280",
    "end": "586800"
  },
  {
    "text": "one of these containers dies how do I look hook into other resources like elastic load balancing can i extend",
    "start": "586800",
    "end": "592740"
  },
  {
    "text": "whatever system I currently use maybe my CD pipeline my third party schedulers into the environment do I need to",
    "start": "592740",
    "end": "598800"
  },
  {
    "text": "operate another piece of software so these are all questions and challenges that our customers had which led us to",
    "start": "598800",
    "end": "603960"
  },
  {
    "text": "build amazon ecs alright so the resource manager in ecs is responsible for",
    "start": "603960",
    "end": "609960"
  },
  {
    "start": "606000",
    "end": "606000"
  },
  {
    "text": "keeping track of resources like memory CPU storage and their availability at any given time within the cluster itself",
    "start": "609960",
    "end": "618200"
  },
  {
    "start": "618000",
    "end": "618000"
  },
  {
    "text": "the scheduler is responsible for scheduling containers for task execution right so the scheduler contains",
    "start": "618200",
    "end": "624810"
  },
  {
    "text": "algorithms for assigning tasks to nodes in the cluster based on the resources required to execute the task so to",
    "start": "624810",
    "end": "631740"
  },
  {
    "text": "properly schedule something you need to know your constraints like your memory and your CPU you need to find resources",
    "start": "631740",
    "end": "637500"
  },
  {
    "text": "from your cluster that meet those constraints you need to request that resource and then confirm that resource",
    "start": "637500",
    "end": "643110"
  },
  {
    "text": "is actually available to you so the scheduler is also responsible for task execution lifecycle",
    "start": "643110",
    "end": "648830"
  },
  {
    "text": "to monitor that task to check whether it's alive or dead and should that task be rescheduled so these are all",
    "start": "648830",
    "end": "654340"
  },
  {
    "text": "responsibilities of the scheduler within the the ecs environment so ecs provides",
    "start": "654340",
    "end": "659990"
  },
  {
    "start": "658000",
    "end": "658000"
  },
  {
    "text": "a simple solution to cluster management all right we have a cluster management engine that coordinates the cluster instances which is really just a pool of",
    "start": "659990",
    "end": "666950"
  },
  {
    "text": "CPU memory storage and networking resources at the end of the day the instances NECN in ecs cluster are just",
    "start": "666950",
    "end": "673430"
  },
  {
    "text": "ec2 instances running our agent that are then checked into your cluster right so",
    "start": "673430",
    "end": "679070"
  },
  {
    "text": "you own them there in your account you can ssh into them if you'd like ecs clusters are dynamically scalable so for",
    "start": "679070",
    "end": "685820"
  },
  {
    "text": "example you can use things like the native auto scale service within AWS and it's possible to have a cluster of a",
    "start": "685820",
    "end": "692600"
  },
  {
    "text": "single instance 10 100 or even a thousand instances within an ACS cluster and then you can also use ecs clusters",
    "start": "692600",
    "end": "699710"
  },
  {
    "text": "to separate or segment particular purposes like dev tested environments from production alright so on each ec2",
    "start": "699710",
    "end": "707090"
  },
  {
    "start": "705000",
    "end": "705000"
  },
  {
    "text": "instance we have an ecs agent that communicates with the the engine and processes the ecs commands and turns",
    "start": "707090",
    "end": "713150"
  },
  {
    "text": "them effectively into docker commands right so the ecs agent itself is really just another container running on the",
    "start": "713150",
    "end": "719180"
  },
  {
    "text": "ec2 host all right the agent itself instructs the instances to stop start containers and to monitor they used and",
    "start": "719180",
    "end": "726350"
  },
  {
    "text": "available resources and the agent itself is open source and on github and we",
    "start": "726350",
    "end": "731360"
  },
  {
    "text": "develop the agent completely in the open so we'd love to see your pull request and any contributions you would like to",
    "start": "731360",
    "end": "738200"
  },
  {
    "text": "make to the ecs agent itself that would be fantastic to hear from you on github",
    "start": "738200",
    "end": "743290"
  },
  {
    "text": "but really what is unique about ecs is that we decouple the container scheduling from the cluster management",
    "start": "743290",
    "end": "748550"
  },
  {
    "text": "right so we've opened up the ecs cluster manager through a set of API actions and that all allows you to have full access",
    "start": "748550",
    "end": "754520"
  },
  {
    "text": "to cluster state information about the key value storage within ecs right and",
    "start": "754520",
    "end": "760070"
  },
  {
    "text": "so this set of API actions forms the basis for solutions that customers can build on top of VCS right so if you want",
    "start": "760070",
    "end": "766490"
  },
  {
    "text": "to integrate your own CI CD environment or your own scheduler those can all be integrated via",
    "start": "766490",
    "end": "771750"
  },
  {
    "text": "powerful API so that API also allows you to connect different schedulers to ecs",
    "start": "771750",
    "end": "777630"
  },
  {
    "start": "774000",
    "end": "774000"
  },
  {
    "text": "right and a scheduler really just provides logic around how when and where and to start and stop containers within",
    "start": "777630",
    "end": "783240"
  },
  {
    "text": "your cluster and so the Amazon ecs architecture is designed to share the state of the cluster and allow customers",
    "start": "783240",
    "end": "789330"
  },
  {
    "text": "to run as many varieties of schedulers as you'd like so for example bin packing spread etc as needed for your own",
    "start": "789330",
    "end": "795180"
  },
  {
    "text": "application environment all right so what are the some of the benefits of ecs right so the reason we develop dcs was",
    "start": "795180",
    "end": "803460"
  },
  {
    "text": "because customers had already been running docker on ec2 for quite a while customers came to us and said it was",
    "start": "803460",
    "end": "809400"
  },
  {
    "text": "very difficult to run these containers at scale really generally involved managing and installing cluster",
    "start": "809400",
    "end": "815220"
  },
  {
    "text": "management software so ecs itself provides the following benefits it eliminates cluster management software",
    "start": "815220",
    "end": "821340"
  },
  {
    "text": "it manages the cluster state it manages containers it provides control and monitoring and it can help you scale",
    "start": "821340",
    "end": "828210"
  },
  {
    "text": "from one to 10 to hundreds to thousands of instances and containers on those instances so amazon EC accs itself has",
    "start": "828210",
    "end": "837480"
  },
  {
    "start": "834000",
    "end": "834000"
  },
  {
    "text": "two built-in schedulers for optimal instance placement right a scheduler for running long-term applications and",
    "start": "837480",
    "end": "843960"
  },
  {
    "text": "services and another for running short tasks and batch jobs so as discussed before ecs provides you a power set of",
    "start": "843960",
    "end": "850890"
  },
  {
    "text": "API is right allows you to integrate your own custom scheduler as well as other open source schedulers that you might be interested in using with ecs",
    "start": "850890",
    "end": "857610"
  },
  {
    "text": "and all this allows you to have a very flexible method for doing scheduling on top of VCS and all ccs is also built to",
    "start": "857610",
    "end": "865560"
  },
  {
    "text": "integrate and work with the other AWS services that you value right so you can set up each cluster in its own virtual",
    "start": "865560",
    "end": "871200"
  },
  {
    "text": "private cloud you can use security groups to control network access to your ec2 instances you can store persistent",
    "start": "871200",
    "end": "877920"
  },
  {
    "text": "information on abs and you can route traffic two containers using a load balancer with elb cloud trail",
    "start": "877920",
    "end": "883950"
  },
  {
    "text": "integration is in place to capture your API calls for a security analysis to record change tracking and for",
    "start": "883950",
    "end": "889920"
  },
  {
    "text": "compliance auditing which is critical alright so as discussed before ecs has a",
    "start": "889920",
    "end": "895140"
  },
  {
    "text": "very simple set of AP ice and that allows you to be to be very integrate with your existing environment and to",
    "start": "895140",
    "end": "900959"
  },
  {
    "text": "extend which you we have in your existing environments such as maybe a Jenkins build CDC I",
    "start": "900959",
    "end": "907190"
  },
  {
    "text": "process right and the CLI is also open source and available on github so not only is the agent but the CLI for ecs is",
    "start": "907190",
    "end": "914480"
  },
  {
    "text": "also on github so I highly encourage you to look at those those open source projects and contribute to us as you see",
    "start": "914480",
    "end": "920690"
  },
  {
    "text": "fit all right through to sum everything up ecs allows a reduction of amount of",
    "start": "920690",
    "end": "926990"
  },
  {
    "text": "code that you need to go from idea to implementation when building distributed systems right so rather than having to",
    "start": "926990",
    "end": "932300"
  },
  {
    "text": "run me so sore another classroom management software to manage your set of machines you can use ecs to manage",
    "start": "932300",
    "end": "938329"
  },
  {
    "text": "your instances in your containers directly so the ability to run multiple tasks on a shared pool of resources can",
    "start": "938329",
    "end": "944779"
  },
  {
    "text": "also lead to higher utilization and faster task completion all right so let's quickly walk through the basics of",
    "start": "944779",
    "end": "950990"
  },
  {
    "text": "running a service with ecs you can model your app using a file called the task definition this really defines your",
    "start": "950990",
    "end": "957709"
  },
  {
    "text": "containers that you want to run on ecs alright to create a task definition you go to the console you specify a docker",
    "start": "957709",
    "end": "964130"
  },
  {
    "start": "961000",
    "end": "961000"
  },
  {
    "text": "image you want to run you specify CPU memory ports volumes etc alright you can",
    "start": "964130",
    "end": "970670"
  },
  {
    "text": "also do all this in JSON if you'd like rather than having to use the GUI so",
    "start": "970670",
    "end": "976430"
  },
  {
    "text": "once your task definitions is created you schedule a task on to an instance with the available resources that you've",
    "start": "976430",
    "end": "982130"
  },
  {
    "text": "asked for for that task a task is really an instantiation of a task definition",
    "start": "982130",
    "end": "987439"
  },
  {
    "text": "you can have a task with just one container you even have 10 that work together on a single machine maybe",
    "start": "987439",
    "end": "992660"
  },
  {
    "text": "you've got engine X with Redis or rails in front of it or behind it and sometimes people ask me what about cross",
    "start": "992660",
    "end": "999920"
  },
  {
    "text": "hosts you can't do cross host linking all right if you need to do that you want to use multiple tasks and link them",
    "start": "999920",
    "end": "1005439"
  },
  {
    "text": "together to talk to the network via need be or something like this the ecs also",
    "start": "1005439",
    "end": "1012310"
  },
  {
    "start": "1010000",
    "end": "1010000"
  },
  {
    "text": "has a scheduler that's good for long running applications you can reference a task definition and the number of tasks",
    "start": "1012310",
    "end": "1018279"
  },
  {
    "text": "that you want to run and optionally place them behind an EOB automatically via deployment and the scheduler will",
    "start": "1018279",
    "end": "1024188"
  },
  {
    "text": "then launch the number of tasks that you've requested the scheduler will also maintain the number of tasks that you",
    "start": "1024189",
    "end": "1029770"
  },
  {
    "text": "want to run and have automatically load balance behind a little balanced or if you so choose so",
    "start": "1029770",
    "end": "1035159"
  },
  {
    "text": "scaling up and down is very simple you simply tell the schedule or how many tasks you need in the scheduler will automatically launch more tasks or",
    "start": "1035159",
    "end": "1041490"
  },
  {
    "text": "terminate tasks based on what you've asked for updating a service is equally",
    "start": "1041490",
    "end": "1046798"
  },
  {
    "text": "easy right so you deploy a new version of the scheduler was launched and the scheduler will launch tasks with the new",
    "start": "1046799",
    "end": "1052679"
  },
  {
    "text": "application version it will then drain the connections from the old containers and remove those containers and then",
    "start": "1052679",
    "end": "1058650"
  },
  {
    "text": "we'll leave the newest containers running behind your load balancer so that's all I have I'm going to now turn it over to Chris so thank you very much",
    "start": "1058650",
    "end": "1065460"
  },
  {
    "text": "for your time hello good afternoon",
    "start": "1065460",
    "end": "1076530"
  },
  {
    "text": "everybody so as Chad introduced me my name is Chris Malik I am the associate director of academic development at",
    "start": "1076530",
    "end": "1083460"
  },
  {
    "text": "Caltech so let me tell you a bit about Caltech I'm a Virginia boy and when I moved out there we didn't really know",
    "start": "1083460",
    "end": "1089940"
  },
  {
    "text": "anything about it if we think of technical schools we think of MIT but on the east on the west coast I assure you",
    "start": "1089940",
    "end": "1096360"
  },
  {
    "text": "were a big deal where in pasadena we're in beautiful Pasadena California it",
    "start": "1096360",
    "end": "1101520"
  },
  {
    "text": "doesn't quite look like that right now because there's a giant fire in the background we're a we're a top tier",
    "start": "1101520",
    "end": "1109470"
  },
  {
    "text": "University we are we've been number one in the times higher education ranking for the last five years in a row and",
    "start": "1109470",
    "end": "1116600"
  },
  {
    "text": "we're in the top ten of every other major ranking now I'm not telling you this to brag I'm telling you this",
    "start": "1116600",
    "end": "1123510"
  },
  {
    "text": "because this is the kind of people that I worked with these are world-class researchers and students and they have",
    "start": "1123510",
    "end": "1128580"
  },
  {
    "text": "very high expectations for their IT infrastructure on the other hand we're small we have only sixty four hundred",
    "start": "1128580",
    "end": "1135659"
  },
  {
    "text": "people total that's a thousand undergrads 1200 graduate students 300 faculty and 3900 staff it's a three to",
    "start": "1135659",
    "end": "1144150"
  },
  {
    "text": "one undergrad to faculty ratio it's the lowest in the country we also founded",
    "start": "1144150",
    "end": "1150090"
  },
  {
    "text": "JPL in the thirties son it's just up the road from Caltech we continue to manage",
    "start": "1150090",
    "end": "1155190"
  },
  {
    "text": "that for NASA so what do I do I run a group called",
    "start": "1155190",
    "end": "1160830"
  },
  {
    "start": "1156000",
    "end": "1156000"
  },
  {
    "text": "academic development services where part of imss information management systems",
    "start": "1160830",
    "end": "1166200"
  },
  {
    "text": "and services that's our central IT org we're small enough so that we do not we're it we have a few free agents out",
    "start": "1166200",
    "end": "1173460"
  },
  {
    "text": "and campus but really we do everything my group is pretty lean I actually have",
    "start": "1173460",
    "end": "1179790"
  },
  {
    "text": "seven people we just hired somebody last week but we're very experienced we have",
    "start": "1179790",
    "end": "1184890"
  },
  {
    "text": "35 years of systems administration experience between us and about 50 years of collective development experience you",
    "start": "1184890",
    "end": "1192030"
  },
  {
    "text": "can extrapolate how old we are all all are from that we run a lot of services",
    "start": "1192030",
    "end": "1197880"
  },
  {
    "text": "on campus about 130 websites that's about half the web sites on campus and",
    "start": "1197880",
    "end": "1203430"
  },
  {
    "text": "we also run a lot of the web applications and some big things we're",
    "start": "1203430",
    "end": "1208530"
  },
  {
    "text": "on the main campus website and the thing I'm going to talk to you about today the campus internet portal my main job in",
    "start": "1208530",
    "end": "1215490"
  },
  {
    "text": "our group is to help people solve their problems with custom software",
    "start": "1215490",
    "end": "1221550"
  },
  {
    "text": "development or with cloud services",
    "start": "1221550",
    "end": "1226340"
  },
  {
    "start": "1226000",
    "end": "1226000"
  },
  {
    "text": "Caltech is very Pro cloud when I first got Caltech 21 years ago I was",
    "start": "1226910",
    "end": "1235160"
  },
  {
    "text": "interested to hear visiting faculty come to us and say you do such great research",
    "start": "1235160",
    "end": "1241170"
  },
  {
    "text": "and you have such great instruction here but why does your IT infrastructure suck so bad and the reason was is that while",
    "start": "1241170",
    "end": "1249720"
  },
  {
    "text": "we have big needs we have a small budget and not a lot of people to do it well",
    "start": "1249720",
    "end": "1254760"
  },
  {
    "text": "the cloud has really changed all that and has put us from someone from a university where people wonder how we",
    "start": "1254760",
    "end": "1261690"
  },
  {
    "text": "get along at day to day to university that people are looking to 24 new ideas",
    "start": "1261690",
    "end": "1268520"
  },
  {
    "text": "so our upper management has seen that and we have a plan now to move all of",
    "start": "1268520",
    "end": "1275100"
  },
  {
    "text": "our on-premise services to the cloud within three years we've actually been in production AWS since 2010 when we put",
    "start": "1275100",
    "end": "1282810"
  },
  {
    "text": "our main campus website out we were one of the first universities to do that and now we have many production",
    "start": "1282810",
    "end": "1289600"
  },
  {
    "text": "workloads I want talking a little bit about the strategy of how we got to",
    "start": "1289600",
    "end": "1295480"
  },
  {
    "text": "where we are today I focused on the easy things to do first right so things that",
    "start": "1295480",
    "end": "1302260"
  },
  {
    "text": "were did not have a lot of dependencies on other services that nothing depended on that especially that had no data that",
    "start": "1302260",
    "end": "1310390"
  },
  {
    "text": "could be compromised we chose those first because that as you all know the cloud has a steep learning curve so we",
    "start": "1310390",
    "end": "1316330"
  },
  {
    "text": "wanted to get our chops and why did we choose the cloud my director and I from",
    "start": "1316330",
    "end": "1324790"
  },
  {
    "start": "1319000",
    "end": "1319000"
  },
  {
    "text": "the beginning knew that if we were going to succeed we had to focus on the thing",
    "start": "1324790",
    "end": "1329800"
  },
  {
    "text": "that we do that adds value and that's right software that no one else can write because we either have the domain",
    "start": "1329800",
    "end": "1336670"
  },
  {
    "text": "knowledge er we have access to the right resources anything else we need to",
    "start": "1336670",
    "end": "1341800"
  },
  {
    "text": "outsource so as soon as we we saw alice to someone who knew how to do things better and amazon just knows how to do a",
    "start": "1341800",
    "end": "1348940"
  },
  {
    "text": "lot of things better than us and we were happy to work with them and we got a lot of things like you know geograph",
    "start": "1348940",
    "end": "1355650"
  },
  {
    "text": "redundancy and with availability zones we use their api is heavily so forth so",
    "start": "1355650",
    "end": "1362890"
  },
  {
    "text": "this is a key part of our strategy so now i talked to about our preview",
    "start": "1362890",
    "end": "1368920"
  },
  {
    "text": "strategy which was get the low-hanging fruit well all the low-hanging fruit is gone so now we're into the hard parts",
    "start": "1368920",
    "end": "1375250"
  },
  {
    "text": "and one of the hardest part is to move is access Caltech that's our campus intranet portal this is a large",
    "start": "1375250",
    "end": "1382330"
  },
  {
    "start": "1381000",
    "end": "1381000"
  },
  {
    "text": "distributed system that we have hosted on Prem it's about 50 or 60 hosts its",
    "start": "1382330",
    "end": "1388120"
  },
  {
    "text": "fronted by an authenticating proxy server that based on who you are restricts what you can get to behind it",
    "start": "1388120",
    "end": "1395900"
  },
  {
    "text": "based on permission roles in our in our database about 90 of our key apps are",
    "start": "1395900",
    "end": "1403670"
  },
  {
    "text": "are sitting behind the behind axis caltech that's most of the academic and",
    "start": "1403670",
    "end": "1409760"
  },
  {
    "text": "administrative apps that people do data use day-to-day there's really two and there's two parts to this there's the",
    "start": "1409760",
    "end": "1415400"
  },
  {
    "text": "core system which is what my team maintains the the proxy server and it's supporting applications and then there's",
    "start": "1415400",
    "end": "1421460"
  },
  {
    "text": "all the proxy thats here's what it looks like so is the the login page this",
    "start": "1421460",
    "end": "1427910"
  },
  {
    "text": "allows people with a single set of credentials to get access to almost all the things that they need to do for their work during the day and when they",
    "start": "1427910",
    "end": "1435800"
  },
  {
    "text": "log in they see a list of applications that they personally are authorized to",
    "start": "1435800",
    "end": "1441010"
  },
  {
    "text": "to use now this is my what it looks like for me someone else login would look",
    "start": "1441010",
    "end": "1446570"
  },
  {
    "text": "completely different security is very important for this and we and we focus",
    "start": "1446570",
    "end": "1452000"
  },
  {
    "text": "heavily on access controls now some of the key requirements I want to cover when we're thinking about moving these",
    "start": "1452000",
    "end": "1458840"
  },
  {
    "start": "1453000",
    "end": "1453000"
  },
  {
    "text": "to the cloud all these things have to be covered it needs to be highly available like I said it access Cal Tech is in our",
    "start": "1458840",
    "end": "1466220"
  },
  {
    "text": "day-to-day work morning tonight when it's down Caltech work at Caltech stops",
    "start": "1466220",
    "end": "1471920"
  },
  {
    "text": "it has to be up all the time now interestingly it has to be performing at",
    "start": "1471920",
    "end": "1477740"
  },
  {
    "text": "variable loads people do use it but they don't use it but that heavily during the day except for three times a year that",
    "start": "1477740",
    "end": "1484430"
  },
  {
    "text": "we call the ten minutes of terror that's that's the three registrations the student systems are behind access",
    "start": "1484430",
    "end": "1491660"
  },
  {
    "text": "Caltech and at 8am on the start of each term they go in and register for their",
    "start": "1491660",
    "end": "1497090"
  },
  {
    "text": "classes and we can scale it we can hit up to 800 hits a second during those times so scalability and performance are",
    "start": "1497090",
    "end": "1504740"
  },
  {
    "text": "very important like I said in my previous strategy we chose public data",
    "start": "1504740",
    "end": "1511820"
  },
  {
    "text": "this is not public data these are our financial data people's personal data FERPA HIPAA you name it we've got it",
    "start": "1511820",
    "end": "1520190"
  },
  {
    "text": "behind here so security is going to be extremely important certain core",
    "start": "1520190",
    "end": "1525800"
  },
  {
    "text": "components of access context should stay up during after if we create our part of Caltech",
    "start": "1525800",
    "end": "1530920"
  },
  {
    "text": "we want people to be able to update their emergency contact info and so excess Caltech should stay up now my",
    "start": "1530920",
    "end": "1538600"
  },
  {
    "text": "knees are the last two we have a since it's so key to our business processes at",
    "start": "1538600",
    "end": "1545050"
  },
  {
    "text": "Caltech we have a lot of change requests that come into to the core so I need to be able to deploy software rattle easily",
    "start": "1545050",
    "end": "1553000"
  },
  {
    "text": "and continuously essentially we also have 90 like I said we have 90 apps",
    "start": "1553000",
    "end": "1558700"
  },
  {
    "text": "behind access Caltech well there's a lot of developers supporting those apps they all needed of tests and QA environments",
    "start": "1558700",
    "end": "1564880"
  },
  {
    "text": "there's a lot of them so I need to be able to build those in the cloud this is a little overview of what the",
    "start": "1564880",
    "end": "1570820"
  },
  {
    "text": "architecture is you can see right now user goes through our on-prem h a proxy",
    "start": "1570820",
    "end": "1577120"
  },
  {
    "text": "to get the load balance pair of proxy servers there's another set of servers that runs the apps that maintain the",
    "start": "1577120",
    "end": "1584050"
  },
  {
    "text": "proxy server and a lot of the authorization data is stored in ldap",
    "start": "1584050",
    "end": "1589110"
  },
  {
    "text": "then everything else is proxy through the proxy server two different services",
    "start": "1589110",
    "end": "1594400"
  },
  {
    "text": "in our own private data sector our plan I'd broken it into two phases or our end",
    "start": "1594400",
    "end": "1601210"
  },
  {
    "text": "phases really phase one we want to move the core stuff out that's this stuff",
    "start": "1601210",
    "end": "1606929"
  },
  {
    "text": "yeah so we're going to rebuild the core part of access Caltech and I say we're",
    "start": "1606929",
    "end": "1613420"
  },
  {
    "start": "1607000",
    "end": "1607000"
  },
  {
    "text": "going to we are all at it's not production yet I'm working hoping to go production in a few months it's in",
    "start": "1613420",
    "end": "1619090"
  },
  {
    "text": "testing right now so we have a VPC at an AWS i'm building a we on a continuous",
    "start": "1619090",
    "end": "1626559"
  },
  {
    "text": "deployment system based on Jenkins docker and console which is a service discovery service we can build dev and",
    "start": "1626559",
    "end": "1634030"
  },
  {
    "text": "test environments and other V pcs and we're going to go through a VPN tunnel",
    "start": "1634030",
    "end": "1639160"
  },
  {
    "text": "to get back to campus now different people do this differently I know you can use Amazon direct connect but",
    "start": "1639160",
    "end": "1644710"
  },
  {
    "text": "contact being on internet too we have a very fast connection to our local amazon",
    "start": "1644710",
    "end": "1650880"
  },
  {
    "text": "endpoints so we use a VPN tunnel and later we'll pick off individual apps",
    "start": "1650880",
    "end": "1656530"
  },
  {
    "text": "that move them the cloud as well we got now I've broken",
    "start": "1656530",
    "end": "1662190"
  },
  {
    "text": "things into to VP sees the BBC on the left is where all of my software lives",
    "start": "1662190",
    "end": "1667679"
  },
  {
    "text": "and the BBC on the right is where the ldap servers live now they're in their own VPC because they're going to be",
    "start": "1667679",
    "end": "1673649"
  },
  {
    "text": "shared with a lot of other services we didn't want other services coming into our the crown jewels here now the real",
    "start": "1673649",
    "end": "1681629"
  },
  {
    "text": "thing I want you to notice about this is the yellow things are all amazon",
    "start": "1681629",
    "end": "1688110"
  },
  {
    "text": "services and really the key to it is the two sets of green boxes proxy and coors",
    "start": "1688110",
    "end": "1694200"
  },
  {
    "text": "so they're they're sitting in their own subnets for protection so that we can authorize them back through the VPN to",
    "start": "1694200",
    "end": "1701249"
  },
  {
    "text": "get to the proxy dap's those are ecs clusters all right those are auto scaling ecs clusters so why did I choose",
    "start": "1701249",
    "end": "1711299"
  },
  {
    "start": "1709000",
    "end": "1709000"
  },
  {
    "text": "to go to docker well let me tell you I've I've been doing this for a long time and my big problem has been",
    "start": "1711299",
    "end": "1717690"
  },
  {
    "text": "deployment all right so we spend a long time writing our software but when it",
    "start": "1717690",
    "end": "1722909"
  },
  {
    "text": "comes to deployment and we always seem to fall on the floor so I've had about four or five different deployment",
    "start": "1722909",
    "end": "1728789"
  },
  {
    "text": "mechanisms have come up with and we we're stuck in a vicious cycle and it",
    "start": "1728789",
    "end": "1734639"
  },
  {
    "text": "all comes down to one problem I'm doing too much on live systems during",
    "start": "1734639",
    "end": "1739919"
  },
  {
    "text": "deployments right and i like to say this is about the raw vs the cooked so",
    "start": "1739919",
    "end": "1745889"
  },
  {
    "text": "currently we have our software we have a long checklist of things that we hand to the systems administrators to do to",
    "start": "1745889",
    "end": "1752460"
  },
  {
    "text": "deploy things and half the time it goes wrong either because we left some steps out or because prod was not quite the",
    "start": "1752460",
    "end": "1758759"
  },
  {
    "text": "same as test or because you know because something didn't quite work maybe a",
    "start": "1758759",
    "end": "1765419"
  },
  {
    "text": "service wasn't available and we were when we were deploying so what happens is that will fail the",
    "start": "1765419",
    "end": "1773230"
  },
  {
    "text": "deploy it will be pushed back two weeks to another maintenance window and then the deploy gets bigger because now more",
    "start": "1773230",
    "end": "1779769"
  },
  {
    "text": "changes have have accumulated and now the risk is higher and we have this vicious cycle I need to change this",
    "start": "1779769",
    "end": "1786070"
  },
  {
    "text": "docker does change this why because my main problem is again I'm doing too much",
    "start": "1786070",
    "end": "1791409"
  },
  {
    "text": "darker allows me to bake in much more into into my pre build so when I make a",
    "start": "1791409",
    "end": "1799629"
  },
  {
    "text": "docker image I'm packaging up the OS all the dependencies and my software that's",
    "start": "1799629",
    "end": "1804820"
  },
  {
    "text": "a lot of what we were doing during during deployment and you're going to treat that as a software artifact that's",
    "start": "1804820",
    "end": "1811330"
  },
  {
    "text": "version of all so yeah the second thing is you know I saw some people nodding",
    "start": "1811330",
    "end": "1816519"
  },
  {
    "text": "their heads of my said test wasn't exactly the same as prod well now I can I can't guarantee it because there's",
    "start": "1816519",
    "end": "1822039"
  },
  {
    "text": "still some environmental and architectural differences but you're a lot closer you're deploying it's very",
    "start": "1822039",
    "end": "1828249"
  },
  {
    "text": "much like anyone who's doing am i based deployments is it's very much like that I know what I'm getting when I roll it",
    "start": "1828249",
    "end": "1834549"
  },
  {
    "text": "out and the other thing that has always troubled me as my in my tenure as a",
    "start": "1834549",
    "end": "1839860"
  },
  {
    "text": "director and a manager is that I have a small team I have to be able to hand off software from developer to developer",
    "start": "1839860",
    "end": "1847570"
  },
  {
    "text": "easily with something like access Cal Tech which has so many moving parts to",
    "start": "1847570",
    "end": "1852580"
  },
  {
    "text": "get that set up on someone's desk top that's about 10 different services that have to be set up you're not you're not",
    "start": "1852580",
    "end": "1858460"
  },
  {
    "text": "doing that they're going to spend three weeks setting that up with docker it's it's two minutes you just pull the",
    "start": "1858460",
    "end": "1864909"
  },
  {
    "text": "containers down let's pin them up link them and you've got a completely working a development environment there's I'm",
    "start": "1864909",
    "end": "1874539"
  },
  {
    "start": "1873000",
    "end": "1873000"
  },
  {
    "text": "really interested in continuous deployment does anyone know what that means is anyone familiar with that term",
    "start": "1874539",
    "end": "1881879"
  },
  {
    "text": "yeah the key about the key problem with deployment is that since you don't do it",
    "start": "1881879",
    "end": "1887919"
  },
  {
    "text": "very often the environment is likely to drift and you forgot what you did last time so you never get to practice how do",
    "start": "1887919",
    "end": "1893499"
  },
  {
    "text": "we fix that we just do it a lot that way you and you have to automate it if you're",
    "start": "1893499",
    "end": "1898559"
  },
  {
    "text": "do it a lot and you're going to practice it all the time and shake the bugs out so that's what I'm very interested in",
    "start": "1898559",
    "end": "1903840"
  },
  {
    "text": "we're going to use docker bills to run our tests we're going to we build our containers run the test in the container",
    "start": "1903840",
    "end": "1910590"
  },
  {
    "text": "so that you know you always have your test environment setup right and then push to a test environment automatically",
    "start": "1910590",
    "end": "1916649"
  },
  {
    "text": "where people can vet things and then once we get the blessing it automatically its push to prod all based",
    "start": "1916649",
    "end": "1923249"
  },
  {
    "start": "1923000",
    "end": "1923000"
  },
  {
    "text": "on Jenkins so why ecs I can't say this enough this is sort of what was what",
    "start": "1923249",
    "end": "1930659"
  },
  {
    "text": "Chad was referring to earlier if you've ever looked at any of the other docker",
    "start": "1930659",
    "end": "1935999"
  },
  {
    "text": "orchestration or doctor clustering solutions they're very intimidating to set up I've looked at before we",
    "start": "1935999",
    "end": "1943169"
  },
  {
    "text": "considered easy before we started using ecsb strongly consider dr. swarm but you",
    "start": "1943169",
    "end": "1949499"
  },
  {
    "text": "really need a bunch of dedicated set of systems administrators to maintain this to have high availability and you're in",
    "start": "1949499",
    "end": "1955619"
  },
  {
    "text": "your swarm masters and you're going to have to replicate this for dev tests and proddin for different applications tax",
    "start": "1955619",
    "end": "1961289"
  },
  {
    "text": "who wants to do that I just want to write code and and even when you're done",
    "start": "1961289",
    "end": "1967799"
  },
  {
    "text": "you're not a cloud scale you're just that one others get whatever scale you could afford right so ecs is implicitly",
    "start": "1967799",
    "end": "1974879"
  },
  {
    "text": "at cloud scale and as Chad was saying it integrates beautifully with a lot of the key AWS resour services like elastic",
    "start": "1974879",
    "end": "1984119"
  },
  {
    "text": "load balancing is right in there a cloud trail cloud watch monitoring what's",
    "start": "1984119",
    "end": "1989549"
  },
  {
    "text": "going on inside your containers is not trivial if you don't have something built for you the API is beautiful we do",
    "start": "1989549",
    "end": "1997350"
  },
  {
    "text": "a lot of scripting for our deployments and it was almost painless the most painless I've done yet it was binding to",
    "start": "1997350",
    "end": "2004220"
  },
  {
    "text": "the AWS API for ecs deployments and I and one thing before so we're poor all",
    "start": "2004220",
    "end": "2011749"
  },
  {
    "text": "right so like I said we have a small school we don't have tons of money I can't afford to get doctor who stood",
    "start": "2011749",
    "end": "2017570"
  },
  {
    "text": "repository or private repository that's too much for us so I was before ecs repositories came out",
    "start": "2017570",
    "end": "2024070"
  },
  {
    "text": "or register dcs registry came out I was hosting it locally and what a pain that was so I really appreciate that we can",
    "start": "2024070",
    "end": "2031150"
  },
  {
    "text": "push all of our images out to the cloud like that so now so I didn't sound like",
    "start": "2031150",
    "end": "2037480"
  },
  {
    "text": "a total AWS fanboy I had to make a slide up about things I didn't like about ecs but I really had to struggle one thing",
    "start": "2037480",
    "end": "2045520"
  },
  {
    "text": "it is it is kind of painful to debug container launch fails it is somewhere",
    "start": "2045520",
    "end": "2051070"
  },
  {
    "text": "in the instant in the AWS console but it's not easy to find the second one is",
    "start": "2051070",
    "end": "2057040"
  },
  {
    "text": "just not true anymore since I'm of the slide they are up to current now the",
    "start": "2057040",
    "end": "2062230"
  },
  {
    "text": "third one is interesting and Chad alluded to it this in docker swarm there's a thing called the swarm overlay",
    "start": "2062230",
    "end": "2068800"
  },
  {
    "text": "Network where you have a bunch of machines and they make a virtual network layer on top of your regular networking",
    "start": "2068800",
    "end": "2075610"
  },
  {
    "text": "so that all of your containers can find each other easily I think it has its own DNS server and routing built in that's",
    "start": "2075610",
    "end": "2082120"
  },
  {
    "text": "that's fairly nice and also Chad address my last point when I was first looking",
    "start": "2082120",
    "end": "2088360"
  },
  {
    "text": "at it you really only had one scheduling option that was spread docker swarm has",
    "start": "2088360",
    "end": "2094060"
  },
  {
    "text": "a few other ones bin packed like pack your containers into one doctor machine",
    "start": "2094060",
    "end": "2100660"
  },
  {
    "text": "and fill that up before you move to the next one there are some use cases for that you can do all that through the",
    "start": "2100660",
    "end": "2106630"
  },
  {
    "text": "start ask API and then some scripting so it's really not a big deal so challenges",
    "start": "2106630",
    "end": "2114750"
  },
  {
    "text": "the things that I ran into it was a kind of a steep learning curve because you",
    "start": "2115410",
    "end": "2120520"
  },
  {
    "text": "have to think normal you're used to thinking of your software as your software and the OS as the thing that",
    "start": "2120520",
    "end": "2126610"
  },
  {
    "text": "supports your software when you go to docker you really have to start treating",
    "start": "2126610",
    "end": "2131620"
  },
  {
    "text": "the OS and the software all as a single version will solve or artifact now again",
    "start": "2131620",
    "end": "2137290"
  },
  {
    "text": "if you've done am i based builds where you never touch the",
    "start": "2137290",
    "end": "2143850"
  },
  {
    "text": "your instances in production you only build a new way am I and enroll in that out then you're familiar with some of",
    "start": "2143850",
    "end": "2149730"
  },
  {
    "text": "these things what that means is that your development team is going to have",
    "start": "2149730",
    "end": "2155130"
  },
  {
    "text": "to have systems experience in order to really take advantage of docker right",
    "start": "2155130",
    "end": "2160290"
  },
  {
    "text": "because now you're managing things in a in a UNIX system for us this was not a",
    "start": "2160290",
    "end": "2165750"
  },
  {
    "text": "such a big deal but I do have some younger staff that are not that familiar with it and that that's a challenge all",
    "start": "2165750",
    "end": "2171960"
  },
  {
    "text": "on its own or you're going to have to work closely with systems people to make sure you're setting up your containers",
    "start": "2171960",
    "end": "2177870"
  },
  {
    "text": "right and just running the Linux right right you're almost certainly going to have to remediate your code to get it",
    "start": "2177870",
    "end": "2184290"
  },
  {
    "text": "into docker the very least it's going to have to be able to take environment variables as configuration right and I",
    "start": "2184290",
    "end": "2191040"
  },
  {
    "text": "know my code didn't do that if I could read read its configuration out of the file system also things like logging",
    "start": "2191040",
    "end": "2198630"
  },
  {
    "text": "you're going to have to remediate your code to send the logs to a different place if you used to sending it to",
    "start": "2198630",
    "end": "2204000"
  },
  {
    "text": "syslog they don't you don't have syslog in your in your container and you're going to have to do something else and send it to stare down or standard error",
    "start": "2204000",
    "end": "2211400"
  },
  {
    "start": "2211000",
    "end": "2211000"
  },
  {
    "text": "the other thing is that containers are really disposable and they're nearly anonymous what I mean by disposable is",
    "start": "2211400",
    "end": "2219210"
  },
  {
    "text": "don't think that you can write anything to the file sir the file system these things are not going to probably live",
    "start": "2219210",
    "end": "2224460"
  },
  {
    "text": "very long and it's not easy to get into them you can't they're not running SSH so you can ssh into them you have to",
    "start": "2224460",
    "end": "2230370"
  },
  {
    "text": "think of them as little software appliances and also that means you need",
    "start": "2230370",
    "end": "2235920"
  },
  {
    "text": "to start rethinking about how you manage your software stack day to day when you're going to do debugging if you find",
    "start": "2235920",
    "end": "2242340"
  },
  {
    "text": "that your developers your systems administrators are going in to fix things in production you know there's no fix like the fix that works in",
    "start": "2242340",
    "end": "2248820"
  },
  {
    "text": "production you can't really do that anymore because this is a this is a",
    "start": "2248820",
    "end": "2253980"
  },
  {
    "text": "virgin software artifact next time you do a scaling your it's all gone and if",
    "start": "2253980",
    "end": "2259020"
  },
  {
    "text": "you were depending on reading images or writing logs to the file system again",
    "start": "2259020",
    "end": "2264050"
  },
  {
    "text": "you're going to have to rethink that monitoring it can be a little bit challenging because you're going to have",
    "start": "2264050",
    "end": "2271350"
  },
  {
    "text": "to write you're going to have to have although cloud watch does help you with that you do have to get inside the",
    "start": "2271350",
    "end": "2277070"
  },
  {
    "text": "Tanner and see what the container sees that's all I'd say thank you",
    "start": "2277070",
    "end": "2284650"
  },
  {
    "text": "yeah if you have any questions I'm happy to answer any questions anybody all",
    "start": "2292790",
    "end": "2303840"
  },
  {
    "text": "right well if you have any Oh",
    "start": "2303840",
    "end": "2307190"
  },
  {
    "text": "hello if you're popping up of a bunch of different containers possibly to do the",
    "start": "2337900",
    "end": "2343370"
  },
  {
    "text": "same or similar tasks and one falls over for some buddies and this is a reference ear they're difficult to monitor mm-hmm",
    "start": "2343370",
    "end": "2349820"
  },
  {
    "text": "you know what can you do about first of all realize that that one fell over and",
    "start": "2349820",
    "end": "2355010"
  },
  {
    "text": "hopefully we starting a new one to the state where it was when it fell over",
    "start": "2355010",
    "end": "2360200"
  },
  {
    "text": "yeah so it's a really good question so partly you're going to rely on ecs to",
    "start": "2360200",
    "end": "2366320"
  },
  {
    "text": "restart your containers so what's really an interesting question is when",
    "start": "2366320",
    "end": "2371420"
  },
  {
    "text": "something goes wrong with the container and and it doesn't fall over how do you know which one has the problem that's a",
    "start": "2371420",
    "end": "2380060"
  },
  {
    "text": "really interesting questions I was as I alluded to by and expand on containers are nearly anonymous they don't have a",
    "start": "2380060",
    "end": "2387800"
  },
  {
    "text": "host name so if you've ever if you have ever run docker and you go inside you're asking what its host name is you'll get",
    "start": "2387800",
    "end": "2393440"
  },
  {
    "text": "a hex string and it has its own network on the east on the docker machine so you",
    "start": "2393440",
    "end": "2398600"
  },
  {
    "text": "don't even know its IP address logging is going to be really really important there so we are exporting all logs from",
    "start": "2398600",
    "end": "2406100"
  },
  {
    "text": "the from the container to an elk stack with a bunch of tagging along the way so",
    "start": "2406100",
    "end": "2411530"
  },
  {
    "text": "that way i can i can look at my logs to see what went wrong and then trace that",
    "start": "2411530",
    "end": "2417680"
  },
  {
    "text": "back through the its path back to the ecs machine that that container was",
    "start": "2417680",
    "end": "2423020"
  },
  {
    "text": "running on and then go look at it does that answer anything it does although",
    "start": "2423020",
    "end": "2428720"
  },
  {
    "text": "you the other part of the question was if it was probably doing something when",
    "start": "2428720",
    "end": "2435170"
  },
  {
    "text": "it either failed or to stop for some reason I'd like to start a new container at that same place hmm yeah I'm that's",
    "start": "2435170",
    "end": "2441740"
  },
  {
    "text": "going to be up to your software right that's look that's sort of like software check",
    "start": "2441740",
    "end": "2447120"
  },
  {
    "text": "pointing in some sense anyone else",
    "start": "2447120",
    "end": "2454430"
  }
]