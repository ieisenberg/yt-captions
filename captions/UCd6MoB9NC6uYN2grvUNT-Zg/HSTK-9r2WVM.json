[
  {
    "text": "thank you for joining us today",
    "start": "1100",
    "end": "3330"
  },
  {
    "text": "my name is Carolyn Rossi and I'm a",
    "start": "3330",
    "end": "5339"
  },
  {
    "text": "Solutions Architect based out of Sydney",
    "start": "5339",
    "end": "7049"
  },
  {
    "text": "in the next 30 minutes I will be",
    "start": "7049",
    "end": "9420"
  },
  {
    "text": "covering Amazon sage maker and how to",
    "start": "9420",
    "end": "11580"
  },
  {
    "text": "build train and deploy machine and deep",
    "start": "11580",
    "end": "14099"
  },
  {
    "text": "learning models fast cost-effective",
    "start": "14099",
    "end": "16039"
  },
  {
    "text": "scalable and secure this is an advanced",
    "start": "16039",
    "end": "19410"
  },
  {
    "text": "level session and it is expected that",
    "start": "19410",
    "end": "21000"
  },
  {
    "text": "you're familiar with the basic data",
    "start": "21000",
    "end": "22500"
  },
  {
    "text": "science and machine learning concepts",
    "start": "22500",
    "end": "24150"
  },
  {
    "text": "however if you're not a data scientist",
    "start": "24150",
    "end": "26640"
  },
  {
    "text": "or a machine learning engineer I would",
    "start": "26640",
    "end": "28500"
  },
  {
    "text": "still encourage you to stick around as",
    "start": "28500",
    "end": "30150"
  },
  {
    "text": "I'm sure that this might be a good",
    "start": "30150",
    "end": "31890"
  },
  {
    "text": "starting point okay let's set the scene",
    "start": "31890",
    "end": "36059"
  },
  {
    "text": "for Sage maker by quickly reviewing a",
    "start": "36059",
    "end": "37800"
  },
  {
    "text": "typical machine learning pipeline from",
    "start": "37800",
    "end": "39390"
  },
  {
    "text": "an idea to production like any other",
    "start": "39390",
    "end": "42090"
  },
  {
    "text": "great project and machine learning",
    "start": "42090",
    "end": "43320"
  },
  {
    "text": "project starts with a business problem",
    "start": "43320",
    "end": "45170"
  },
  {
    "text": "the next step is for data analysts and",
    "start": "45170",
    "end": "47789"
  },
  {
    "text": "data scientists to confirm if the",
    "start": "47789",
    "end": "49320"
  },
  {
    "text": "solution can be implemented using",
    "start": "49320",
    "end": "50700"
  },
  {
    "text": "machine deep or reinforcement learning",
    "start": "50700",
    "end": "52579"
  },
  {
    "text": "this stage requires vast amounts of",
    "start": "52579",
    "end": "55140"
  },
  {
    "text": "domain knowledge to be captured by the",
    "start": "55140",
    "end": "56579"
  },
  {
    "text": "data scientist and business analyst and",
    "start": "56579",
    "end": "58710"
  },
  {
    "text": "also decisions to be made on what data",
    "start": "58710",
    "end": "60480"
  },
  {
    "text": "sets to use then to run this machine we",
    "start": "60480",
    "end": "63930"
  },
  {
    "text": "need field I cannot overstate the",
    "start": "63930",
    "end": "65970"
  },
  {
    "text": "importance of data and specifically",
    "start": "65970",
    "end": "67650"
  },
  {
    "text": "clean data in a successful machine",
    "start": "67650",
    "end": "69689"
  },
  {
    "text": "learning solution at the end of a day",
    "start": "69689",
    "end": "71700"
  },
  {
    "text": "your models are only as good as the data",
    "start": "71700",
    "end": "73890"
  },
  {
    "text": "you feed them garbage in garbage out",
    "start": "73890",
    "end": "76100"
  },
  {
    "text": "usually data is a spread across multiple",
    "start": "76100",
    "end": "78570"
  },
  {
    "text": "sources including internal external",
    "start": "78570",
    "end": "80580"
  },
  {
    "text": "public and even purchase data sets",
    "start": "80580",
    "end": "82650"
  },
  {
    "text": "basically the data needs to be collected",
    "start": "82650",
    "end": "84840"
  },
  {
    "text": "moved transformed and stored before",
    "start": "84840",
    "end": "87689"
  },
  {
    "text": "being utilized in machine learning AWS",
    "start": "87689",
    "end": "90509"
  },
  {
    "text": "has a wide range of services to move",
    "start": "90509",
    "end": "92280"
  },
  {
    "text": "transform and store data big data",
    "start": "92280",
    "end": "94619"
  },
  {
    "text": "services such as s3 redshift EMR glue",
    "start": "94619",
    "end": "97710"
  },
  {
    "text": "DynamoDB etc etc or out of scope of this",
    "start": "97710",
    "end": "100829"
  },
  {
    "text": "presentation but they are absolutely",
    "start": "100829",
    "end": "102630"
  },
  {
    "text": "crucial for the success of a machine",
    "start": "102630",
    "end": "105030"
  },
  {
    "text": "learning pipeline after we've created a",
    "start": "105030",
    "end": "107939"
  },
  {
    "text": "unified access method to our data the",
    "start": "107939",
    "end": "109860"
  },
  {
    "text": "data scientists start their work they",
    "start": "109860",
    "end": "111810"
  },
  {
    "text": "look deep into the datasets and engineer",
    "start": "111810",
    "end": "114299"
  },
  {
    "text": "features which best help the desired",
    "start": "114299",
    "end": "116579"
  },
  {
    "text": "prediction outcome when the features are",
    "start": "116579",
    "end": "119610"
  },
  {
    "text": "engineered the model training starts",
    "start": "119610",
    "end": "121469"
  },
  {
    "text": "this is usually a computer intensive",
    "start": "121469",
    "end": "123270"
  },
  {
    "text": "operation especially in deep earnest",
    "start": "123270",
    "end": "125100"
  },
  {
    "text": "case ideally data scientists will love",
    "start": "125100",
    "end": "127560"
  },
  {
    "text": "to train models as fast and obviously as",
    "start": "127560",
    "end": "129390"
  },
  {
    "text": "cost-effective as possible when training",
    "start": "129390",
    "end": "132030"
  },
  {
    "text": "is finished",
    "start": "132030",
    "end": "132599"
  },
  {
    "text": "the accuracy of the",
    "start": "132599",
    "end": "133950"
  },
  {
    "text": "we'll be measured by feeding some test",
    "start": "133950",
    "end": "135930"
  },
  {
    "text": "data and compare the results with the",
    "start": "135930",
    "end": "137760"
  },
  {
    "text": "labels of the test data if the model is",
    "start": "137760",
    "end": "140640"
  },
  {
    "text": "good enough as a solution we can deploy",
    "start": "140640",
    "end": "143370"
  },
  {
    "text": "it into production but if not you're",
    "start": "143370",
    "end": "145260"
  },
  {
    "text": "back to step one and repeat this process",
    "start": "145260",
    "end": "147239"
  },
  {
    "text": "until either ruling ad machine learning",
    "start": "147239",
    "end": "149790"
  },
  {
    "text": "as a viable solution or adding enough",
    "start": "149790",
    "end": "151650"
  },
  {
    "text": "data and features to get the right",
    "start": "151650",
    "end": "152970"
  },
  {
    "text": "outcome this step is usually the most",
    "start": "152970",
    "end": "155489"
  },
  {
    "text": "time-consuming portion of a machine",
    "start": "155489",
    "end": "157200"
  },
  {
    "text": "learning process and this is just the",
    "start": "157200",
    "end": "160050"
  },
  {
    "text": "beginning",
    "start": "160050",
    "end": "160590"
  },
  {
    "text": "adding machine learning capabilities to",
    "start": "160590",
    "end": "162630"
  },
  {
    "text": "an application is not a set and",
    "start": "162630",
    "end": "164010"
  },
  {
    "text": "forgetting by deploying models into",
    "start": "164010",
    "end": "166080"
  },
  {
    "text": "production your work has just begun you",
    "start": "166080",
    "end": "167910"
  },
  {
    "text": "will capture more data you'll feed more",
    "start": "167910",
    "end": "170069"
  },
  {
    "text": "data to your models and get more",
    "start": "170069",
    "end": "171450"
  },
  {
    "text": "accurate predictions and deployed better",
    "start": "171450",
    "end": "173069"
  },
  {
    "text": "versions to production so as you can",
    "start": "173069",
    "end": "174930"
  },
  {
    "text": "imagine a be testing your models in",
    "start": "174930",
    "end": "176880"
  },
  {
    "text": "production is vital to the success of an",
    "start": "176880",
    "end": "179069"
  },
  {
    "text": "ml project Amazon Sage Maker is a",
    "start": "179069",
    "end": "182549"
  },
  {
    "text": "managed service which enables data",
    "start": "182549",
    "end": "184110"
  },
  {
    "text": "scientists and developers to easily run",
    "start": "184110",
    "end": "185910"
  },
  {
    "text": "entire machine learning pipeline from",
    "start": "185910",
    "end": "187799"
  },
  {
    "text": "building models to training them and",
    "start": "187799",
    "end": "189569"
  },
  {
    "text": "then finally deploying them into",
    "start": "189569",
    "end": "191370"
  },
  {
    "text": "production in a single pane of glass",
    "start": "191370",
    "end": "192860"
  },
  {
    "text": "this drastically improves the time and",
    "start": "192860",
    "end": "195690"
  },
  {
    "text": "speed of ideato production for all the",
    "start": "195690",
    "end": "197459"
  },
  {
    "text": "parties involved",
    "start": "197459",
    "end": "198269"
  },
  {
    "text": "sage maker performs these three tasks in",
    "start": "198269",
    "end": "200970"
  },
  {
    "text": "a heavily paralyzed scalable and secure",
    "start": "200970",
    "end": "203700"
  },
  {
    "text": "fashion while it gives you the",
    "start": "203700",
    "end": "205440"
  },
  {
    "text": "flexibility of using whatever tool",
    "start": "205440",
    "end": "207120"
  },
  {
    "text": "method or framework you're comfortable",
    "start": "207120",
    "end": "208709"
  },
  {
    "text": "with without locking you into a specific",
    "start": "208709",
    "end": "210299"
  },
  {
    "text": "toolset or methodology let's have a",
    "start": "210299",
    "end": "212579"
  },
  {
    "text": "closer look if you have some experience",
    "start": "212579",
    "end": "215609"
  },
  {
    "text": "with machine learning and data science",
    "start": "215609",
    "end": "217350"
  },
  {
    "text": "you are quite familiar with the Jupiter",
    "start": "217350",
    "end": "218760"
  },
  {
    "text": "notebooks for those who are new to this",
    "start": "218760",
    "end": "220530"
  },
  {
    "text": "jupiter notebook is a web application",
    "start": "220530",
    "end": "222329"
  },
  {
    "text": "that allows you to create documents that",
    "start": "222329",
    "end": "224370"
  },
  {
    "text": "can have live code visualization and",
    "start": "224370",
    "end": "226620"
  },
  {
    "text": "narrative text this has become the de",
    "start": "226620",
    "end": "228810"
  },
  {
    "text": "facto standard for manipulating data and",
    "start": "228810",
    "end": "231030"
  },
  {
    "text": "running machine learning applications",
    "start": "231030",
    "end": "232640"
  },
  {
    "text": "sage maker right off the bat gives you a",
    "start": "232640",
    "end": "235440"
  },
  {
    "text": "jupiter notebook instance where you can",
    "start": "235440",
    "end": "236940"
  },
  {
    "text": "load your notebooks without the typical",
    "start": "236940",
    "end": "238500"
  },
  {
    "text": "hassles of SSH tunnels packages drivers",
    "start": "238500",
    "end": "241290"
  },
  {
    "text": "and source control",
    "start": "241290",
    "end": "242310"
  },
  {
    "text": "let me quickly show you how to start a",
    "start": "242310",
    "end": "244829"
  },
  {
    "text": "jupiter notebook instance",
    "start": "244829",
    "end": "247940"
  },
  {
    "text": "I have logged into my AWS console and",
    "start": "248180",
    "end": "251900"
  },
  {
    "text": "I'm using the Oregon region let's",
    "start": "251900",
    "end": "253849"
  },
  {
    "text": "quickly click on the Amazon sage maker",
    "start": "253849",
    "end": "255260"
  },
  {
    "text": "service in the dashboard you can see an",
    "start": "255260",
    "end": "259250"
  },
  {
    "text": "overview of the jobs I have in sage",
    "start": "259250",
    "end": "261380"
  },
  {
    "text": "maker let's click on the notebook",
    "start": "261380",
    "end": "263900"
  },
  {
    "text": "instances I have three notebook",
    "start": "263900",
    "end": "265850"
  },
  {
    "text": "instances 12 them are in stop mode and",
    "start": "265850",
    "end": "267919"
  },
  {
    "text": "one of them is in service let's go",
    "start": "267919",
    "end": "271220"
  },
  {
    "text": "through a wizard and create a notebook",
    "start": "271220",
    "end": "272389"
  },
  {
    "text": "instance I'll give it a name in the",
    "start": "272389",
    "end": "281090"
  },
  {
    "text": "instance type I can either select",
    "start": "281090",
    "end": "282440"
  },
  {
    "text": "between t2 instances m4 or if I need GPU",
    "start": "282440",
    "end": "285410"
  },
  {
    "text": "acceleration",
    "start": "285410",
    "end": "285979"
  },
  {
    "text": "I can select p2 instances you need to",
    "start": "285979",
    "end": "288770"
  },
  {
    "text": "give sage maker access to your resources",
    "start": "288770",
    "end": "290479"
  },
  {
    "text": "such as s3 buckets or ECS docker images",
    "start": "290479",
    "end": "292840"
  },
  {
    "text": "you can either pre create a role in I am",
    "start": "292840",
    "end": "295669"
  },
  {
    "text": "or go through a quick wizard here you",
    "start": "295669",
    "end": "303740"
  },
  {
    "text": "can specify certain s3 buckets or any s3",
    "start": "303740",
    "end": "309199"
  },
  {
    "text": "buckets in that account or alternatively",
    "start": "309199",
    "end": "311150"
  },
  {
    "text": "any any s3 bucket with the sage maker",
    "start": "311150",
    "end": "313550"
  },
  {
    "text": "stringing in the name or object with",
    "start": "313550",
    "end": "316039"
  },
  {
    "text": "sage maker in the name or any buckets",
    "start": "316039",
    "end": "318139"
  },
  {
    "text": "meet the sage maker tag and the value of",
    "start": "318139",
    "end": "320690"
  },
  {
    "text": "true while tentatively you can create a",
    "start": "320690",
    "end": "323030"
  },
  {
    "text": "bucket policy allowing sage maker access",
    "start": "323030",
    "end": "324800"
  },
  {
    "text": "to the data when it comes to networking",
    "start": "324800",
    "end": "329750"
  },
  {
    "text": "you have a couple of options",
    "start": "329750",
    "end": "331370"
  },
  {
    "text": "no VPC means that you want your instance",
    "start": "331370",
    "end": "334370"
  },
  {
    "text": "to run in the sage makers services back",
    "start": "334370",
    "end": "336979"
  },
  {
    "text": "in network or you can attach an en I to",
    "start": "336979",
    "end": "339530"
  },
  {
    "text": "the instance connecting your VPC subnets",
    "start": "339530",
    "end": "341870"
  },
  {
    "text": "to your notebook instance for direct",
    "start": "341870",
    "end": "343460"
  },
  {
    "text": "communication if you select VPC you have",
    "start": "343460",
    "end": "348800"
  },
  {
    "text": "to select subnets and security groups",
    "start": "348800",
    "end": "351349"
  },
  {
    "text": "accordingly",
    "start": "351349",
    "end": "353979"
  },
  {
    "text": "you can generate a key in kms and use",
    "start": "359439",
    "end": "362839"
  },
  {
    "text": "that to encrypt your EBS volumes",
    "start": "362839",
    "end": "366969"
  },
  {
    "text": "and to create the notebook instance we",
    "start": "376849",
    "end": "378860"
  },
  {
    "text": "just need to press on create notebook",
    "start": "378860",
    "end": "380569"
  },
  {
    "text": "instance let me quickly open a notebook",
    "start": "380569",
    "end": "387279"
  },
  {
    "text": "you",
    "start": "393490",
    "end": "395550"
  },
  {
    "text": "you can start a new notebook by",
    "start": "398940",
    "end": "401140"
  },
  {
    "text": "selecting what kernels run the available",
    "start": "401140",
    "end": "403690"
  },
  {
    "text": "canons our PI spark pie Spock 3 spark",
    "start": "403690",
    "end": "406030"
  },
  {
    "text": "spark our MX nitric Python 2 & 3 Conda",
    "start": "406030",
    "end": "409540"
  },
  {
    "text": "Python 2 and 3 and tensorflow wit Python",
    "start": "409540",
    "end": "411970"
  },
  {
    "text": "2 & 3 you can also upload your existing",
    "start": "411970",
    "end": "418870"
  },
  {
    "text": "notebooks to the sage maker sage maker",
    "start": "418870",
    "end": "423580"
  },
  {
    "text": "comes with a great number of sample",
    "start": "423580",
    "end": "425200"
  },
  {
    "text": "notebooks with details examples of how",
    "start": "425200",
    "end": "427270"
  },
  {
    "text": "to use sage maker using code we will",
    "start": "427270",
    "end": "429520"
  },
  {
    "text": "review some of these notebooks in the",
    "start": "429520",
    "end": "431110"
  },
  {
    "text": "following demos but to give you a quick",
    "start": "431110",
    "end": "433030"
  },
  {
    "text": "demo we will go to introduction to",
    "start": "433030",
    "end": "436060"
  },
  {
    "text": "Amazon algorithms folder and we will",
    "start": "436060",
    "end": "439720"
  },
  {
    "text": "look at for example the HG boost",
    "start": "439720",
    "end": "444730"
  },
  {
    "text": "multi-class classification using the M",
    "start": "444730",
    "end": "447280"
  },
  {
    "text": "nice handwritten digits data set let's",
    "start": "447280",
    "end": "450970"
  },
  {
    "text": "quickly open the notebook here is an",
    "start": "450970",
    "end": "453940"
  },
  {
    "text": "introduction and then we the notebooks",
    "start": "453940",
    "end": "457450"
  },
  {
    "text": "talking about how to ingest the data",
    "start": "457450",
    "end": "458770"
  },
  {
    "text": "converting the data to the final formats",
    "start": "458770",
    "end": "461050"
  },
  {
    "text": "and then starting the training job using",
    "start": "461050",
    "end": "463600"
  },
  {
    "text": "the sage maker training feature and then",
    "start": "463600",
    "end": "466300"
  },
  {
    "text": "finally deploying the model into",
    "start": "466300",
    "end": "468310"
  },
  {
    "text": "production",
    "start": "468310",
    "end": "471090"
  },
  {
    "text": "when feature engineering is completed",
    "start": "472480",
    "end": "474950"
  },
  {
    "text": "and you have created training test and",
    "start": "474950",
    "end": "476660"
  },
  {
    "text": "validation datasets",
    "start": "476660",
    "end": "477620"
  },
  {
    "text": "it's time for training the models there",
    "start": "477620",
    "end": "479780"
  },
  {
    "text": "are numerous algorithms being used to",
    "start": "479780",
    "end": "481730"
  },
  {
    "text": "train different models using different",
    "start": "481730",
    "end": "483590"
  },
  {
    "text": "supervised and unsupervised methods",
    "start": "483590",
    "end": "485170"
  },
  {
    "text": "after talking to many customers and",
    "start": "485170",
    "end": "487700"
  },
  {
    "text": "observing the data science world we've",
    "start": "487700",
    "end": "489410"
  },
  {
    "text": "integrated 11 commonly used and popular",
    "start": "489410",
    "end": "491840"
  },
  {
    "text": "algorithms in Amazon Sage Maker",
    "start": "491840",
    "end": "493820"
  },
  {
    "text": "there are heavily optimized for AWS and",
    "start": "493820",
    "end": "496040"
  },
  {
    "text": "orders of magnitude faster than their",
    "start": "496040",
    "end": "497810"
  },
  {
    "text": "implementations anywhere else if you are",
    "start": "497810",
    "end": "500870"
  },
  {
    "text": "interested in getting more details",
    "start": "500870",
    "end": "502160"
  },
  {
    "text": "around the Amazon stage makers pre build",
    "start": "502160",
    "end": "503810"
  },
  {
    "text": "algorithms please attend the next",
    "start": "503810",
    "end": "505520"
  },
  {
    "text": "session which will provide you with an",
    "start": "505520",
    "end": "507200"
  },
  {
    "text": "overview of the top 10 most common",
    "start": "507200",
    "end": "509750"
  },
  {
    "text": "algorithms",
    "start": "509750",
    "end": "511180"
  },
  {
    "text": "whether it's k-means clustering for data",
    "start": "511180",
    "end": "514130"
  },
  {
    "text": "segmentation PCA for dimensionality",
    "start": "514130",
    "end": "516380"
  },
  {
    "text": "reduction or factorization machines for",
    "start": "516380",
    "end": "518120"
  },
  {
    "text": "recommendation engines the popular XE",
    "start": "518120",
    "end": "520370"
  },
  {
    "text": "booth or a good old logistic and linear",
    "start": "520370",
    "end": "522229"
  },
  {
    "text": "regression algorithms on top of that",
    "start": "522229",
    "end": "524870"
  },
  {
    "text": "we've done a ton of work to optimize MX",
    "start": "524870",
    "end": "527180"
  },
  {
    "text": "net and tensor flow for Amazon sage",
    "start": "527180",
    "end": "528770"
  },
  {
    "text": "maker and we are working on Cafe 2.0 at",
    "start": "528770",
    "end": "531290"
  },
  {
    "text": "this stage it is important to understand",
    "start": "531290",
    "end": "533450"
  },
  {
    "text": "that it doesn't mean that you cannot use",
    "start": "533450",
    "end": "534860"
  },
  {
    "text": "any other frameworks and algorithms out",
    "start": "534860",
    "end": "536780"
  },
  {
    "text": "there we strongly believe that our",
    "start": "536780",
    "end": "538640"
  },
  {
    "text": "customers must have the freedom to",
    "start": "538640",
    "end": "540290"
  },
  {
    "text": "choose their own algorithms tools",
    "start": "540290",
    "end": "542270"
  },
  {
    "text": "frameworks and we continually optimize",
    "start": "542270",
    "end": "544460"
  },
  {
    "text": "the platform for all of those based on",
    "start": "544460",
    "end": "546710"
  },
  {
    "text": "the customer demand and feedback once",
    "start": "546710",
    "end": "549920"
  },
  {
    "text": "you've picked the algorithm training",
    "start": "549920",
    "end": "551390"
  },
  {
    "text": "yourself simple you sub media training",
    "start": "551390",
    "end": "553280"
  },
  {
    "text": "jobs and specify water instances and how",
    "start": "553280",
    "end": "555589"
  },
  {
    "text": "many of them you want and we will run",
    "start": "555589",
    "end": "557210"
  },
  {
    "text": "the training for you and at the end we",
    "start": "557210",
    "end": "559070"
  },
  {
    "text": "save your model artifacts in s3 let's",
    "start": "559070",
    "end": "562370"
  },
  {
    "text": "cover this in a bit more detail on how",
    "start": "562370",
    "end": "563900"
  },
  {
    "text": "you can stop me training jobs to Amazon",
    "start": "563900",
    "end": "565490"
  },
  {
    "text": "Sage Maker there are four main methods",
    "start": "565490",
    "end": "569480"
  },
  {
    "text": "of training using Amazon sage maker as",
    "start": "569480",
    "end": "571460"
  },
  {
    "text": "we've covered one of the most efficient",
    "start": "571460",
    "end": "573710"
  },
  {
    "text": "ways to train models is to use one of",
    "start": "573710",
    "end": "575780"
  },
  {
    "text": "the built-in and heavily optimized",
    "start": "575780",
    "end": "577100"
  },
  {
    "text": "algorithms in Amazon sage maker let's",
    "start": "577100",
    "end": "579320"
  },
  {
    "text": "have a closer look",
    "start": "579320",
    "end": "581860"
  },
  {
    "text": "okay to view the training jobs click on",
    "start": "581860",
    "end": "584980"
  },
  {
    "text": "jobs you can see a list of training jobs",
    "start": "584980",
    "end": "587350"
  },
  {
    "text": "I have previously ran in Amazon sage",
    "start": "587350",
    "end": "589060"
  },
  {
    "text": "maker we will go ahead and create a",
    "start": "589060",
    "end": "591910"
  },
  {
    "text": "training job give it a name and we've",
    "start": "591910",
    "end": "594160"
  },
  {
    "text": "covered the IAM role in the algorithms",
    "start": "594160",
    "end": "597100"
  },
  {
    "text": "drop down menu you can see a list of",
    "start": "597100",
    "end": "599440"
  },
  {
    "text": "algorithms the first 11 items are the",
    "start": "599440",
    "end": "601630"
  },
  {
    "text": "pre-built algorithms",
    "start": "601630",
    "end": "604590"
  },
  {
    "text": "let's select linear learner for binary",
    "start": "607630",
    "end": "610270"
  },
  {
    "text": "classification and linear regression for",
    "start": "610270",
    "end": "612280"
  },
  {
    "text": "example in the hyper parameter section",
    "start": "612280",
    "end": "614950"
  },
  {
    "text": "you have all the common hyper parameters",
    "start": "614950",
    "end": "617020"
  },
  {
    "text": "for both types of regressions if you",
    "start": "617020",
    "end": "619450"
  },
  {
    "text": "have experience with machine learning",
    "start": "619450",
    "end": "620920"
  },
  {
    "text": "you are quite familiar with those",
    "start": "620920",
    "end": "622120"
  },
  {
    "text": "settings for example the predictor type",
    "start": "622120",
    "end": "625270"
  },
  {
    "text": "could be binary classifier or a linear",
    "start": "625270",
    "end": "627640"
  },
  {
    "text": "regressor",
    "start": "627640",
    "end": "630090"
  },
  {
    "text": "or for optimizers you can select between",
    "start": "636019",
    "end": "638449"
  },
  {
    "text": "atom or stochastic gradient descent as I",
    "start": "638449",
    "end": "642559"
  },
  {
    "text": "said there are so many detailed",
    "start": "642559",
    "end": "645019"
  },
  {
    "text": "notebooks in your notebook instances",
    "start": "645019",
    "end": "646819"
  },
  {
    "text": "which covers all use cases with Amazon",
    "start": "646819",
    "end": "649819"
  },
  {
    "text": "sage maker",
    "start": "649819",
    "end": "652238"
  },
  {
    "text": "you",
    "start": "658420",
    "end": "660480"
  },
  {
    "text": "let's quickly show you the linear",
    "start": "675130",
    "end": "677320"
  },
  {
    "text": "learners notebook example",
    "start": "677320",
    "end": "680640"
  },
  {
    "text": "an intro to the Emily's time written",
    "start": "686180",
    "end": "689790"
  },
  {
    "text": "digits data set setting up roles and s3",
    "start": "689790",
    "end": "692730"
  },
  {
    "text": "buckets ingesting the data inspecting",
    "start": "692730",
    "end": "696240"
  },
  {
    "text": "the data sets uploading the data to s3",
    "start": "696240",
    "end": "698790"
  },
  {
    "text": "and this is where you start your",
    "start": "698790",
    "end": "701310"
  },
  {
    "text": "training here you are seeing the",
    "start": "701310",
    "end": "704100"
  },
  {
    "text": "locations of the linear learners docker",
    "start": "704100",
    "end": "706200"
  },
  {
    "text": "images that AWS publishes and maintains",
    "start": "706200",
    "end": "709040"
  },
  {
    "text": "you need them to run your training code",
    "start": "709040",
    "end": "712580"
  },
  {
    "text": "this is where you submit your train",
    "start": "712580",
    "end": "714960"
  },
  {
    "text": "sorry and this is where you submit your",
    "start": "714960",
    "end": "718950"
  },
  {
    "text": "training job import your libraries to",
    "start": "718950",
    "end": "721500"
  },
  {
    "text": "establish a session to Amazon sage maker",
    "start": "721500",
    "end": "723150"
  },
  {
    "text": "define the training parameters using",
    "start": "723150",
    "end": "725370"
  },
  {
    "text": "estimators for example the number of",
    "start": "725370",
    "end": "728070"
  },
  {
    "text": "instances in the cluster type of those",
    "start": "728070",
    "end": "731010"
  },
  {
    "text": "instances model output location and then",
    "start": "731010",
    "end": "734610"
  },
  {
    "text": "you define the hyper parameters in this",
    "start": "734610",
    "end": "736440"
  },
  {
    "text": "notebook we are using binary classifier",
    "start": "736440",
    "end": "738690"
  },
  {
    "text": "with a feature team of 784 which if you",
    "start": "738690",
    "end": "741150"
  },
  {
    "text": "are familiar with the M&E style set it",
    "start": "741150",
    "end": "742770"
  },
  {
    "text": "is the number of features in each image",
    "start": "742770",
    "end": "744360"
  },
  {
    "text": "and then the mini back size of 200",
    "start": "744360",
    "end": "749180"
  },
  {
    "text": "after defining all of this you simply",
    "start": "750339",
    "end": "753169"
  },
  {
    "text": "call fit and your training starts so you",
    "start": "753169",
    "end": "757759"
  },
  {
    "text": "might ask how about my existing models",
    "start": "757759",
    "end": "759470"
  },
  {
    "text": "how can i train models without using",
    "start": "759470",
    "end": "761359"
  },
  {
    "text": "those Amazon sage makers built-in",
    "start": "761359",
    "end": "762769"
  },
  {
    "text": "algorithms models you might have",
    "start": "762769",
    "end": "764629"
  },
  {
    "text": "developed using socket learn or port CNT",
    "start": "764629",
    "end": "767899"
  },
  {
    "text": "k tensorflow and AMEX net that is also",
    "start": "767899",
    "end": "771049"
  },
  {
    "text": "completely fine and super easy to do let",
    "start": "771049",
    "end": "773299"
  },
  {
    "text": "me show you how easy it is to bring your",
    "start": "773299",
    "end": "775129"
  },
  {
    "text": "own models",
    "start": "775129",
    "end": "777609"
  },
  {
    "text": "we'll go back to the training jobs menu",
    "start": "779260",
    "end": "781780"
  },
  {
    "text": "and create a training job in the",
    "start": "781780",
    "end": "783370"
  },
  {
    "text": "algorithms menu this time we select",
    "start": "783370",
    "end": "785470"
  },
  {
    "text": "custom",
    "start": "785470",
    "end": "787829"
  },
  {
    "text": "to bring your own custom model you need",
    "start": "790630",
    "end": "793420"
  },
  {
    "text": "to provide with the location of the",
    "start": "793420",
    "end": "795700"
  },
  {
    "text": "darker image which has your training",
    "start": "795700",
    "end": "797710"
  },
  {
    "text": "code for example in my easiest console",
    "start": "797710",
    "end": "800440"
  },
  {
    "text": "in the repository section I have an",
    "start": "800440",
    "end": "802930"
  },
  {
    "text": "image test which has the code I have",
    "start": "802930",
    "end": "805990"
  },
  {
    "text": "developed using placket learn for",
    "start": "805990",
    "end": "807580"
  },
  {
    "text": "example",
    "start": "807580",
    "end": "809610"
  },
  {
    "text": "I'll copy the URI and paste it here by",
    "start": "812090",
    "end": "817200"
  },
  {
    "text": "assigning a role I give Amazon sage",
    "start": "817200",
    "end": "819780"
  },
  {
    "text": "maker the permission to pull down that",
    "start": "819780",
    "end": "821850"
  },
  {
    "text": "docker image and start a training job",
    "start": "821850",
    "end": "823890"
  },
  {
    "text": "and then defining the instance type and",
    "start": "823890",
    "end": "826950"
  },
  {
    "text": "count stopping conditions and I will",
    "start": "826950",
    "end": "829920"
  },
  {
    "text": "cover input and output sections later on",
    "start": "829920",
    "end": "831990"
  },
  {
    "text": "in the demos",
    "start": "831990",
    "end": "834800"
  },
  {
    "text": "you",
    "start": "844010",
    "end": "846070"
  },
  {
    "text": "in the advanced functionality folder",
    "start": "851220",
    "end": "853379"
  },
  {
    "text": "under the sample notebooks in your",
    "start": "853379",
    "end": "855180"
  },
  {
    "text": "notebook instance we have a few sample",
    "start": "855180",
    "end": "857639"
  },
  {
    "text": "of notebooks on how to package up and",
    "start": "857639",
    "end": "859350"
  },
  {
    "text": "bring your own models you may have",
    "start": "859350",
    "end": "861149"
  },
  {
    "text": "developed in our socket learn and tensor",
    "start": "861149",
    "end": "863579"
  },
  {
    "text": "flow let's look at the cycle learn code",
    "start": "863579",
    "end": "867949"
  },
  {
    "text": "it is a decision tree notebook which",
    "start": "874370",
    "end": "877220"
  },
  {
    "text": "firstly goes through when you should",
    "start": "877220",
    "end": "879260"
  },
  {
    "text": "bring your own models gives an overview",
    "start": "879260",
    "end": "882260"
  },
  {
    "text": "of the darker packaging process",
    "start": "882260",
    "end": "885790"
  },
  {
    "text": "how your folder structure should look",
    "start": "888850",
    "end": "890769"
  },
  {
    "text": "like inside your container",
    "start": "890769",
    "end": "893670"
  },
  {
    "text": "and this is the doctor foil with all the",
    "start": "893850",
    "end": "896740"
  },
  {
    "text": "libraries and packages needed and",
    "start": "896740",
    "end": "898420"
  },
  {
    "text": "finally the env parameters to execute",
    "start": "898420",
    "end": "901540"
  },
  {
    "text": "your training code",
    "start": "901540",
    "end": "904230"
  },
  {
    "text": "this cell talks about how to push your",
    "start": "906630",
    "end": "908880"
  },
  {
    "text": "containers to Amazon Elastic container",
    "start": "908880",
    "end": "910500"
  },
  {
    "text": "service and eventually we get to the",
    "start": "910500",
    "end": "913860"
  },
  {
    "text": "training section establishing a session",
    "start": "913860",
    "end": "916110"
  },
  {
    "text": "to Amazon sage maker defining your",
    "start": "916110",
    "end": "918330"
  },
  {
    "text": "training parameters which is pretty much",
    "start": "918330",
    "end": "920010"
  },
  {
    "text": "like the previous example with the",
    "start": "920010",
    "end": "921840"
  },
  {
    "text": "difference of a custom docker image",
    "start": "921840",
    "end": "923850"
  },
  {
    "text": "location",
    "start": "923850",
    "end": "926180"
  },
  {
    "text": "now you can simply call fit and your",
    "start": "931590",
    "end": "934690"
  },
  {
    "text": "training jobs thoughts the third method",
    "start": "934690",
    "end": "937480"
  },
  {
    "text": "to Train tensorflow and MX and models is",
    "start": "937480",
    "end": "939610"
  },
  {
    "text": "to use Amazon sage makers Python is the",
    "start": "939610",
    "end": "941650"
  },
  {
    "text": "case which are basically an extension to",
    "start": "941650",
    "end": "943660"
  },
  {
    "text": "the normal tensor flow and MX net code",
    "start": "943660",
    "end": "945370"
  },
  {
    "text": "you can easily use functions to pass",
    "start": "945370",
    "end": "947770"
  },
  {
    "text": "training and evaluation data and call",
    "start": "947770",
    "end": "949690"
  },
  {
    "text": "feed functions to train your models in",
    "start": "949690",
    "end": "951910"
  },
  {
    "text": "Amazon sage maker this usually saves",
    "start": "951910",
    "end": "954370"
  },
  {
    "text": "your time and reduces the learning curve",
    "start": "954370",
    "end": "956230"
  },
  {
    "text": "of yet another machine learning tool and",
    "start": "956230",
    "end": "958390"
  },
  {
    "text": "lets you use what you're comfortable",
    "start": "958390",
    "end": "959950"
  },
  {
    "text": "with",
    "start": "959950",
    "end": "960750"
  },
  {
    "text": "there are many pre-built notebooks in",
    "start": "960750",
    "end": "962980"
  },
  {
    "text": "the Amazon sage maker notebook instance",
    "start": "962980",
    "end": "964570"
  },
  {
    "text": "which has great examples on how to use",
    "start": "964570",
    "end": "966250"
  },
  {
    "text": "tensorflow and MX net Amazon sage maker",
    "start": "966250",
    "end": "968530"
  },
  {
    "text": "SDKs let's have a quick look at these",
    "start": "968530",
    "end": "971950"
  },
  {
    "text": "notebooks",
    "start": "971950",
    "end": "974400"
  },
  {
    "text": "we folder of your",
    "start": "976050",
    "end": "977470"
  },
  {
    "text": "instance I there's a folder called sage",
    "start": "977470",
    "end": "979990"
  },
  {
    "text": "maker Python SDK in this folder we have",
    "start": "979990",
    "end": "984040"
  },
  {
    "text": "a bunch of examples on how to use",
    "start": "984040",
    "end": "985810"
  },
  {
    "text": "k-means MX net as well as tensorflow",
    "start": "985810",
    "end": "988840"
  },
  {
    "text": "code to use their high level SDKs to",
    "start": "988840",
    "end": "992170"
  },
  {
    "text": "submit training jobs to sage maker",
    "start": "992170",
    "end": "995320"
  },
  {
    "text": "service for example in the tensile flow",
    "start": "995320",
    "end": "998200"
  },
  {
    "text": "sort of things you have code examples on",
    "start": "998200",
    "end": "1001200"
  },
  {
    "text": "how to use Karis as the front-end how to",
    "start": "1001200",
    "end": "1003450"
  },
  {
    "text": "use layers have to do distributed",
    "start": "1003450",
    "end": "1005730"
  },
  {
    "text": "training on multiple machines or cluster",
    "start": "1005730",
    "end": "1007350"
  },
  {
    "text": "of machines intensive flow as well as",
    "start": "1007350",
    "end": "1009330"
  },
  {
    "text": "using estimators for an example here",
    "start": "1009330",
    "end": "1012420"
  },
  {
    "text": "let's quickly review the estimators",
    "start": "1012420",
    "end": "1015020"
  },
  {
    "text": "tensorflow notebook here this is a",
    "start": "1015020",
    "end": "1017820"
  },
  {
    "text": "familiar notebook if you've used tensor",
    "start": "1017820",
    "end": "1021480"
  },
  {
    "text": "flow you've definitely come across this",
    "start": "1021480",
    "end": "1024740"
  },
  {
    "text": "data set of iris flowers which uses it's",
    "start": "1024740",
    "end": "1028980"
  },
  {
    "text": "a it's in a QuickStart section of the TF",
    "start": "1028980",
    "end": "1031170"
  },
  {
    "text": "estimator in the tensor flow website so",
    "start": "1031170",
    "end": "1033569"
  },
  {
    "text": "we're using the same notebook with a bit",
    "start": "1033570",
    "end": "1035640"
  },
  {
    "text": "of a change on basically running the",
    "start": "1035640",
    "end": "1037829"
  },
  {
    "text": "training not on local machines but on",
    "start": "1037830",
    "end": "1039810"
  },
  {
    "text": "sage maker service so you looked at CSV",
    "start": "1039810",
    "end": "1042900"
  },
  {
    "text": "data said English and this is your are",
    "start": "1042900",
    "end": "1045480"
  },
  {
    "text": "you see any classifier Python code which",
    "start": "1045480",
    "end": "1047730"
  },
  {
    "text": "you can find them in the same folder as",
    "start": "1047730",
    "end": "1050010"
  },
  {
    "text": "your notebook which defines the",
    "start": "1050010",
    "end": "1053340"
  },
  {
    "text": "parameters for your training and then",
    "start": "1053340",
    "end": "1055770"
  },
  {
    "text": "you create a TF estimator in sage maker",
    "start": "1055770",
    "end": "1059460"
  },
  {
    "text": "with all the features and all the",
    "start": "1059460",
    "end": "1062070"
  },
  {
    "text": "parameters they're hyper parameters you",
    "start": "1062070",
    "end": "1063750"
  },
  {
    "text": "want to use for the training and at the",
    "start": "1063750",
    "end": "1067650"
  },
  {
    "text": "end when you want to train your models",
    "start": "1067650",
    "end": "1069720"
  },
  {
    "text": "all you can do is to establish a session",
    "start": "1069720",
    "end": "1072030"
  },
  {
    "text": "to the sage maker imports estimate",
    "start": "1072030",
    "end": "1074880"
  },
  {
    "text": "tensorflow extension SDKs and here's",
    "start": "1074880",
    "end": "1078840"
  },
  {
    "text": "your python code the roll name all the",
    "start": "1078840",
    "end": "1081780"
  },
  {
    "text": "good things that we've seen before the",
    "start": "1081780",
    "end": "1084270"
  },
  {
    "text": "parameters for training and the hyper",
    "start": "1084270",
    "end": "1086250"
  },
  {
    "text": "parameters for your model you'll say",
    "start": "1086250",
    "end": "1089910"
  },
  {
    "text": "where to get the data and so easy you",
    "start": "1089910",
    "end": "1093270"
  },
  {
    "text": "call fit as the fourth method of using",
    "start": "1093270",
    "end": "1098040"
  },
  {
    "text": "Amazon sage maker as a training platform",
    "start": "1098040",
    "end": "1099930"
  },
  {
    "text": "you can integrate Apaches part to stop",
    "start": "1099930",
    "end": "1102150"
  },
  {
    "text": "me do training jobs to Amazon sage maker",
    "start": "1102150",
    "end": "1103860"
  },
  {
    "text": "there are so many customers who already",
    "start": "1103860",
    "end": "1106020"
  },
  {
    "text": "use the powerful spark ecosystem to do",
    "start": "1106020",
    "end": "1108540"
  },
  {
    "text": "massive scale number crunching and data",
    "start": "1108540",
    "end": "1110720"
  },
  {
    "text": "raishin to enable those customers to run",
    "start": "1110720",
    "end": "1113240"
  },
  {
    "text": "training right from there a spark",
    "start": "1113240",
    "end": "1114770"
  },
  {
    "text": "environment we have created apache spark",
    "start": "1114770",
    "end": "1117380"
  },
  {
    "text": "libraries for both python and Scala",
    "start": "1117380",
    "end": "1119510"
  },
  {
    "text": "using your spark equal data frames okay",
    "start": "1119510",
    "end": "1124309"
  },
  {
    "text": "we glanced over a few important",
    "start": "1124309",
    "end": "1125840"
  },
  {
    "text": "configurations in the training section",
    "start": "1125840",
    "end": "1127490"
  },
  {
    "text": "in the previous demos let's review them",
    "start": "1127490",
    "end": "1129620"
  },
  {
    "text": "again",
    "start": "1129620",
    "end": "1131919"
  },
  {
    "text": "so we talked about algorithms and here",
    "start": "1132760",
    "end": "1135730"
  },
  {
    "text": "is the rest of the training",
    "start": "1135730",
    "end": "1136630"
  },
  {
    "text": "configuration",
    "start": "1136630",
    "end": "1139320"
  },
  {
    "text": "resource convict is quite",
    "start": "1139320",
    "end": "1141030"
  },
  {
    "text": "self-explanatory choosing between the",
    "start": "1141030",
    "end": "1143220"
  },
  {
    "text": "available instance types how many",
    "start": "1143220",
    "end": "1144810"
  },
  {
    "text": "instances and the size of the attached",
    "start": "1144810",
    "end": "1146490"
  },
  {
    "text": "DBS volume",
    "start": "1146490",
    "end": "1149240"
  },
  {
    "text": "cameras encryption key to encrypt the",
    "start": "1152320",
    "end": "1154419"
  },
  {
    "text": "EBS volume and here you define the",
    "start": "1154419",
    "end": "1157000"
  },
  {
    "text": "maximum runtime of a job in seconds",
    "start": "1157000",
    "end": "1159100"
  },
  {
    "text": "minutes hours and days input data",
    "start": "1159100",
    "end": "1163090"
  },
  {
    "text": "configuration is where you tell Amazon",
    "start": "1163090",
    "end": "1165700"
  },
  {
    "text": "say Jamaica from where you get the",
    "start": "1165700",
    "end": "1167529"
  },
  {
    "text": "training validation and test data sets",
    "start": "1167529",
    "end": "1169330"
  },
  {
    "text": "to fit to the algorithm",
    "start": "1169330",
    "end": "1172350"
  },
  {
    "text": "here we define the name content type",
    "start": "1176559",
    "end": "1179889"
  },
  {
    "text": "which is the mime type of the data",
    "start": "1179889",
    "end": "1182549"
  },
  {
    "text": "compression type is for when you are",
    "start": "1182549",
    "end": "1185080"
  },
  {
    "text": "feeding your data in the park mode",
    "start": "1185080",
    "end": "1187860"
  },
  {
    "text": "record wrapper if you're not familiar",
    "start": "1187860",
    "end": "1190389"
  },
  {
    "text": "with record i/o it's a data format",
    "start": "1190389",
    "end": "1192279"
  },
  {
    "text": "created by Apache MH net which works",
    "start": "1192279",
    "end": "1194590"
  },
  {
    "text": "best with machine and deep learning it",
    "start": "1194590",
    "end": "1197049"
  },
  {
    "text": "is much smaller in size much faster in",
    "start": "1197049",
    "end": "1199299"
  },
  {
    "text": "real-time and it allows you to pack data",
    "start": "1199299",
    "end": "1201460"
  },
  {
    "text": "in a parallel set up in general using",
    "start": "1201460",
    "end": "1204909"
  },
  {
    "text": "the data format log record IO will speed",
    "start": "1204909",
    "end": "1206950"
  },
  {
    "text": "up your training compared to the raw",
    "start": "1206950",
    "end": "1208389"
  },
  {
    "text": "file types such as JPEG for example here",
    "start": "1208389",
    "end": "1211299"
  },
  {
    "text": "in the configuration Amazon stage maker",
    "start": "1211299",
    "end": "1213220"
  },
  {
    "text": "can wrap your data in record are your",
    "start": "1213220",
    "end": "1215019"
  },
  {
    "text": "format if the data it's in its raw form",
    "start": "1215019",
    "end": "1217259"
  },
  {
    "text": "but your model requires record IO",
    "start": "1217259",
    "end": "1221940"
  },
  {
    "text": "and here is where you define for Amazon",
    "start": "1227180",
    "end": "1229520"
  },
  {
    "text": "stage maker where to find the objects in",
    "start": "1229520",
    "end": "1231440"
  },
  {
    "text": "an s3 bucket either in a manifest file",
    "start": "1231440",
    "end": "1233750"
  },
  {
    "text": "or under a typical key name the",
    "start": "1233750",
    "end": "1236600"
  },
  {
    "text": "distribution tab is for situations where",
    "start": "1236600",
    "end": "1238730"
  },
  {
    "text": "you're using more than one machine to",
    "start": "1238730",
    "end": "1240440"
  },
  {
    "text": "Train here it says a full copy of data",
    "start": "1240440",
    "end": "1244340"
  },
  {
    "text": "to be replicated to every host or to be",
    "start": "1244340",
    "end": "1247040"
  },
  {
    "text": "splitting n segments where n is the",
    "start": "1247040",
    "end": "1249080"
  },
  {
    "text": "number of machines in the training",
    "start": "1249080",
    "end": "1250730"
  },
  {
    "text": "plaster you can create up to eight of",
    "start": "1250730",
    "end": "1253520"
  },
  {
    "text": "these data channels and here is where",
    "start": "1253520",
    "end": "1256340"
  },
  {
    "text": "you specify the destination to save the",
    "start": "1256340",
    "end": "1258110"
  },
  {
    "text": "model after a successful training job",
    "start": "1258110",
    "end": "1261700"
  },
  {
    "text": "and optionally encrypting the model with",
    "start": "1264169",
    "end": "1266929"
  },
  {
    "text": "a kms key when the training is over the",
    "start": "1266929",
    "end": "1270559"
  },
  {
    "text": "data scientists spend a lot of time on",
    "start": "1270559",
    "end": "1272299"
  },
  {
    "text": "fine-tuning their models to get better",
    "start": "1272299",
    "end": "1273950"
  },
  {
    "text": "accuracy and to run faster this process",
    "start": "1273950",
    "end": "1276590"
  },
  {
    "text": "is also called hyper parameter",
    "start": "1276590",
    "end": "1278149"
  },
  {
    "text": "optimization or HBO HBO is usually a",
    "start": "1278149",
    "end": "1281059"
  },
  {
    "text": "painful and long process and require",
    "start": "1281059",
    "end": "1282799"
  },
  {
    "text": "lots of trial and errors in Amazon stage",
    "start": "1282799",
    "end": "1285289"
  },
  {
    "text": "maker we have built a feature which does",
    "start": "1285289",
    "end": "1287419"
  },
  {
    "text": "HP automatically by spinning up multiple",
    "start": "1287419",
    "end": "1289730"
  },
  {
    "text": "training jobs in parallel and run",
    "start": "1289730",
    "end": "1291379"
  },
  {
    "text": "hundreds of different combinations of",
    "start": "1291379",
    "end": "1293299"
  },
  {
    "text": "algorithm parameters a lot of our",
    "start": "1293299",
    "end": "1296029"
  },
  {
    "text": "customers are super excited about this",
    "start": "1296029",
    "end": "1297679"
  },
  {
    "text": "at this stage HBO is only available in",
    "start": "1297679",
    "end": "1300799"
  },
  {
    "text": "private beta and hopefully it becomes",
    "start": "1300799",
    "end": "1302570"
  },
  {
    "text": "generally available soon now let me tell",
    "start": "1302570",
    "end": "1305299"
  },
  {
    "text": "you all about the great deploy feature",
    "start": "1305299",
    "end": "1307009"
  },
  {
    "text": "of Amazon stage maker one of the common",
    "start": "1307009",
    "end": "1309320"
  },
  {
    "text": "bottlenecks of having a machine learning",
    "start": "1309320",
    "end": "1310759"
  },
  {
    "text": "solution in production is when the",
    "start": "1310759",
    "end": "1312679"
  },
  {
    "text": "project comes out of its data science",
    "start": "1312679",
    "end": "1314570"
  },
  {
    "text": "phase and now needs to be deployed in",
    "start": "1314570",
    "end": "1316340"
  },
  {
    "text": "production it is not fair to generalize",
    "start": "1316340",
    "end": "1319039"
  },
  {
    "text": "but usually creating running scaling and",
    "start": "1319039",
    "end": "1321320"
  },
  {
    "text": "securing low latency API endpoints in",
    "start": "1321320",
    "end": "1323299"
  },
  {
    "text": "production is not reading the core skill",
    "start": "1323299",
    "end": "1325399"
  },
  {
    "text": "set of a data scientist it takes a lot",
    "start": "1325399",
    "end": "1328070"
  },
  {
    "text": "of iterations and in-depth DevOps",
    "start": "1328070",
    "end": "1329960"
  },
  {
    "text": "knowledge to run a scalable API endpoint",
    "start": "1329960",
    "end": "1332749"
  },
  {
    "text": "which can serve millions of requests and",
    "start": "1332749",
    "end": "1334850"
  },
  {
    "text": "is capable of doing a/b testing of",
    "start": "1334850",
    "end": "1336739"
  },
  {
    "text": "different models to remove that friction",
    "start": "1336739",
    "end": "1339529"
  },
  {
    "text": "point for machine learning teams Amazon",
    "start": "1339529",
    "end": "1342019"
  },
  {
    "text": "Sage Maker enables you to put models in",
    "start": "1342019",
    "end": "1344029"
  },
  {
    "text": "production with a few clicks and even",
    "start": "1344029",
    "end": "1346279"
  },
  {
    "text": "set up a be testing of multiple models",
    "start": "1346279",
    "end": "1349690"
  },
  {
    "text": "it will set up it will set up always",
    "start": "1349690",
    "end": "1352940"
  },
  {
    "text": "carrying and load balancing across",
    "start": "1352940",
    "end": "1354409"
  },
  {
    "text": "multiple availability zones and handle",
    "start": "1354409",
    "end": "1356539"
  },
  {
    "text": "the traffic you throw at it",
    "start": "1356539",
    "end": "1357739"
  },
  {
    "text": "all without any manual work from your",
    "start": "1357739",
    "end": "1360289"
  },
  {
    "text": "developers or data science teams let's",
    "start": "1360289",
    "end": "1362899"
  },
  {
    "text": "quickly see how to put models in",
    "start": "1362899",
    "end": "1364249"
  },
  {
    "text": "production",
    "start": "1364249",
    "end": "1366730"
  },
  {
    "text": "a model in Amazon sage makers definition",
    "start": "1367420",
    "end": "1370330"
  },
  {
    "text": "is a combination of a model artifact",
    "start": "1370330",
    "end": "1372250"
  },
  {
    "text": "which is the outcome of a training job",
    "start": "1372250",
    "end": "1374050"
  },
  {
    "text": "plus the inference code that consumes",
    "start": "1374050",
    "end": "1376060"
  },
  {
    "text": "the model if you are using Amazon sage",
    "start": "1376060",
    "end": "1378250"
  },
  {
    "text": "makers built-in algorithms or Amazon",
    "start": "1378250",
    "end": "1380380"
  },
  {
    "text": "sage makers tensorflow and MX net Python",
    "start": "1380380",
    "end": "1382390"
  },
  {
    "text": "SDK you don't need to create an",
    "start": "1382390",
    "end": "1384220"
  },
  {
    "text": "inference called / container as the",
    "start": "1384220",
    "end": "1386710"
  },
  {
    "text": "Amazon sage maker service does it",
    "start": "1386710",
    "end": "1388210"
  },
  {
    "text": "automatically for you what if you're",
    "start": "1388210",
    "end": "1390250"
  },
  {
    "text": "bringing your own models or if you've",
    "start": "1390250",
    "end": "1392140"
  },
  {
    "text": "done training somewhere else and you",
    "start": "1392140",
    "end": "1393760"
  },
  {
    "text": "only want to use the hosting service you",
    "start": "1393760",
    "end": "1396340"
  },
  {
    "text": "need to containerize an inference code",
    "start": "1396340",
    "end": "1398050"
  },
  {
    "text": "and submit it along with the model",
    "start": "1398050",
    "end": "1401760"
  },
  {
    "text": "to create a model here is the inference",
    "start": "1406059",
    "end": "1409010"
  },
  {
    "text": "docker image location in ECR",
    "start": "1409010",
    "end": "1412809"
  },
  {
    "text": "and here you provide the location of the",
    "start": "1416130",
    "end": "1418830"
  },
  {
    "text": "model artifacts in s3 and optionally a",
    "start": "1418830",
    "end": "1421830"
  },
  {
    "text": "DNS name for the container",
    "start": "1421830",
    "end": "1424320"
  },
  {
    "text": "now that we have the model and the",
    "start": "1424320",
    "end": "1426420"
  },
  {
    "text": "inference called bundle together we need",
    "start": "1426420",
    "end": "1428490"
  },
  {
    "text": "to define how we would like to deploy it",
    "start": "1428490",
    "end": "1430650"
  },
  {
    "text": "in production",
    "start": "1430650",
    "end": "1433280"
  },
  {
    "text": "this is where you define configure",
    "start": "1437010",
    "end": "1439470"
  },
  {
    "text": "reduction deployment and a/b testing",
    "start": "1439470",
    "end": "1441620"
  },
  {
    "text": "give it a name",
    "start": "1441620",
    "end": "1444950"
  },
  {
    "text": "optionally an encryption key",
    "start": "1448710",
    "end": "1452520"
  },
  {
    "text": "add the model or models here select from",
    "start": "1453800",
    "end": "1458780"
  },
  {
    "text": "one of the previously saved models",
    "start": "1458780",
    "end": "1462429"
  },
  {
    "text": "as an example we add another model in a",
    "start": "1463040",
    "end": "1466610"
  },
  {
    "text": "scenario where for example I have",
    "start": "1466610",
    "end": "1468920"
  },
  {
    "text": "trained two models using the same data",
    "start": "1468920",
    "end": "1471410"
  },
  {
    "text": "set but with different hyper parameters",
    "start": "1471410",
    "end": "1473650"
  },
  {
    "text": "then we added the production variant of",
    "start": "1473650",
    "end": "1476240"
  },
  {
    "text": "each model a descriptive name instance",
    "start": "1476240",
    "end": "1480200"
  },
  {
    "text": "type",
    "start": "1480200",
    "end": "1482440"
  },
  {
    "text": "how many instances to be launched and",
    "start": "1484679",
    "end": "1487330"
  },
  {
    "text": "remember if you select two or more",
    "start": "1487330",
    "end": "1489070"
  },
  {
    "text": "instances Amazon sage maker launched",
    "start": "1489070",
    "end": "1491109"
  },
  {
    "text": "them in two separate availability zones",
    "start": "1491109",
    "end": "1492849"
  },
  {
    "text": "for high availability purposes",
    "start": "1492849",
    "end": "1496529"
  },
  {
    "text": "and then the traffic wait assigned to",
    "start": "1500100",
    "end": "1502320"
  },
  {
    "text": "this in this case we want 75 wait points",
    "start": "1502320",
    "end": "1505980"
  },
  {
    "text": "of the traffic to go to our main model",
    "start": "1505980",
    "end": "1509780"
  },
  {
    "text": "we repeat the same process for our",
    "start": "1511160",
    "end": "1513320"
  },
  {
    "text": "second model",
    "start": "1513320",
    "end": "1515950"
  },
  {
    "text": "this time with only one instance and the",
    "start": "1521080",
    "end": "1524030"
  },
  {
    "text": "initial weight of 25 so I have created",
    "start": "1524030",
    "end": "1528050"
  },
  {
    "text": "an endpoint config which has two models",
    "start": "1528050",
    "end": "1529880"
  },
  {
    "text": "in production producing the same",
    "start": "1529880",
    "end": "1531680"
  },
  {
    "text": "prediction with different hyper",
    "start": "1531680",
    "end": "1533780"
  },
  {
    "text": "parameters one is receiving 75 weight",
    "start": "1533780",
    "end": "1536390"
  },
  {
    "text": "point of the traffic on two instances",
    "start": "1536390",
    "end": "1538640"
  },
  {
    "text": "and the second one is receiving 25 grade",
    "start": "1538640",
    "end": "1540740"
  },
  {
    "text": "point of the traffic on one instance",
    "start": "1540740",
    "end": "1542740"
  },
  {
    "text": "your models are not yet live in",
    "start": "1542740",
    "end": "1545720"
  },
  {
    "text": "production to deploy them in production",
    "start": "1545720",
    "end": "1547490"
  },
  {
    "text": "you go to endpoint menu",
    "start": "1547490",
    "end": "1551410"
  },
  {
    "text": "and create an endpoint give it a name",
    "start": "1555730",
    "end": "1560580"
  },
  {
    "text": "select the recently created endpoint",
    "start": "1568040",
    "end": "1570360"
  },
  {
    "text": "config and click on create endpoint this",
    "start": "1570360",
    "end": "1574740"
  },
  {
    "text": "will take some time and then you have",
    "start": "1574740",
    "end": "1576450"
  },
  {
    "text": "your models ready to serve traffic",
    "start": "1576450",
    "end": "1579980"
  },
  {
    "text": "you",
    "start": "1585539",
    "end": "1587600"
  },
  {
    "text": "you get more info when you click on the",
    "start": "1591380",
    "end": "1593990"
  },
  {
    "text": "endpoint creation time last updated time",
    "start": "1593990",
    "end": "1596930"
  },
  {
    "text": "and there's a bunch of metrics around",
    "start": "1596930",
    "end": "1598490"
  },
  {
    "text": "the model performance and the underlying",
    "start": "1598490",
    "end": "1600560"
  },
  {
    "text": "container and instance",
    "start": "1600560",
    "end": "1604030"
  },
  {
    "text": "now that the models are in production",
    "start": "1604210",
    "end": "1606549"
  },
  {
    "text": "you can make inference calls using sage",
    "start": "1606549",
    "end": "1608830"
  },
  {
    "text": "maker runtime api calls available from",
    "start": "1608830",
    "end": "1611049"
  },
  {
    "text": "all of our SDKs in today's session we",
    "start": "1611049",
    "end": "1614950"
  },
  {
    "text": "have covered an overview of a typical",
    "start": "1614950",
    "end": "1616539"
  },
  {
    "text": "machine learning pipeline and then we",
    "start": "1616539",
    "end": "1618369"
  },
  {
    "text": "reviewed the three main capabilities of",
    "start": "1618369",
    "end": "1620139"
  },
  {
    "text": "Amazon sage maker which are built using",
    "start": "1620139",
    "end": "1622059"
  },
  {
    "text": "Jupiter notebook instances trained using",
    "start": "1622059",
    "end": "1624580"
  },
  {
    "text": "four different methods and then finally",
    "start": "1624580",
    "end": "1626769"
  },
  {
    "text": "deploying the models into production",
    "start": "1626769",
    "end": "1628299"
  },
  {
    "text": "using the service please note that each",
    "start": "1628299",
    "end": "1631029"
  },
  {
    "text": "of these three modules are completely",
    "start": "1631029",
    "end": "1632980"
  },
  {
    "text": "separable meaning that chicken for",
    "start": "1632980",
    "end": "1634600"
  },
  {
    "text": "example train your model somewhere else",
    "start": "1634600",
    "end": "1636249"
  },
  {
    "text": "but deploy them into production using",
    "start": "1636249",
    "end": "1638110"
  },
  {
    "text": "Amazon sage maker and vice versa now I'd",
    "start": "1638110",
    "end": "1641320"
  },
  {
    "text": "like you to take these two takeaways",
    "start": "1641320",
    "end": "1643240"
  },
  {
    "text": "from today's session get your QR code",
    "start": "1643240",
    "end": "1645220"
  },
  {
    "text": "scanners ready firstly go to Amazon",
    "start": "1645220",
    "end": "1648369"
  },
  {
    "text": "stage maker in AWS console and launch a",
    "start": "1648369",
    "end": "1650529"
  },
  {
    "text": "Jupiter notebook instance there are lots",
    "start": "1650529",
    "end": "1652480"
  },
  {
    "text": "of sample notebooks with detailed",
    "start": "1652480",
    "end": "1653980"
  },
  {
    "text": "explanations and instructions to use",
    "start": "1653980",
    "end": "1656259"
  },
  {
    "text": "different algorithms for a great number",
    "start": "1656259",
    "end": "1658179"
  },
  {
    "text": "of fun machine learning and deep",
    "start": "1658179",
    "end": "1659860"
  },
  {
    "text": "learning projects also with it the",
    "start": "1659860",
    "end": "1662139"
  },
  {
    "text": "Amazon sage maker documentation for",
    "start": "1662139",
    "end": "1663999"
  },
  {
    "text": "detailed explanations of what we will",
    "start": "1663999",
    "end": "1665590"
  },
  {
    "text": "discuss today second is the straight",
    "start": "1665590",
    "end": "1667899"
  },
  {
    "text": "dope if you haven't come across a",
    "start": "1667899",
    "end": "1669669"
  },
  {
    "text": "straight dope it is an open source",
    "start": "1669669",
    "end": "1671139"
  },
  {
    "text": "collection of notebooks to teach deep",
    "start": "1671139",
    "end": "1673059"
  },
  {
    "text": "learning from scratch to the advanced",
    "start": "1673059",
    "end": "1674950"
  },
  {
    "text": "levels using a mix net and the gluon",
    "start": "1674950",
    "end": "1676749"
  },
  {
    "text": "interface it has a huge number of",
    "start": "1676749",
    "end": "1678789"
  },
  {
    "text": "notebooks covering from the linear",
    "start": "1678789",
    "end": "1680619"
  },
  {
    "text": "regression to convolutional neural",
    "start": "1680619",
    "end": "1682809"
  },
  {
    "text": "networks and lsdm and performance",
    "start": "1682809",
    "end": "1684940"
  },
  {
    "text": "optimization if you are a data scientist",
    "start": "1684940",
    "end": "1687669"
  },
  {
    "text": "and once you contribute to this awesome",
    "start": "1687669",
    "end": "1689019"
  },
  {
    "text": "project we would love to hear from you",
    "start": "1689019",
    "end": "1693629"
  },
  {
    "text": "okay if after today your wanting to take",
    "start": "1693749",
    "end": "1696879"
  },
  {
    "text": "your AWS knowledge to the next level",
    "start": "1696879",
    "end": "1698710"
  },
  {
    "text": "you have several options available to",
    "start": "1698710",
    "end": "1700269"
  },
  {
    "text": "you to gain more confidence and hands-on",
    "start": "1700269",
    "end": "1702759"
  },
  {
    "text": "experience with AWS watch our",
    "start": "1702759",
    "end": "1704679"
  },
  {
    "text": "instructional videos and explore the",
    "start": "1704679",
    "end": "1706389"
  },
  {
    "text": "self-paced labs additionally you can",
    "start": "1706389",
    "end": "1708879"
  },
  {
    "text": "attend our instructor-led classes by",
    "start": "1708879",
    "end": "1710950"
  },
  {
    "text": "qualified AWS instructors and learn how",
    "start": "1710950",
    "end": "1713289"
  },
  {
    "text": "to design deploy and operate highly",
    "start": "1713289",
    "end": "1715450"
  },
  {
    "text": "available cost-effective and secure",
    "start": "1715450",
    "end": "1717249"
  },
  {
    "text": "applications on AWS and finally don't",
    "start": "1717249",
    "end": "1720369"
  },
  {
    "text": "forget to validate your technical",
    "start": "1720369",
    "end": "1721929"
  },
  {
    "text": "expertise with AWS and use practice",
    "start": "1721929",
    "end": "1724059"
  },
  {
    "text": "exams to help you prepare for AWS",
    "start": "1724059",
    "end": "1725980"
  },
  {
    "text": "certification finally I would like to",
    "start": "1725980",
    "end": "1728350"
  },
  {
    "text": "thank you for attending this session",
    "start": "1728350",
    "end": "1729730"
  },
  {
    "text": "today and sticking around until the very",
    "start": "1729730",
    "end": "1731799"
  },
  {
    "text": "end of the presentation please take the",
    "start": "1731799",
    "end": "1734109"
  },
  {
    "text": "time to provide feedback on today's",
    "start": "1734109",
    "end": "1735399"
  },
  {
    "text": "event so we can improve the event",
    "start": "1735399",
    "end": "1737109"
  },
  {
    "text": "experience for you",
    "start": "1737109",
    "end": "1737980"
  },
  {
    "text": "in the future thank you",
    "start": "1737980",
    "end": "1741360"
  }
]