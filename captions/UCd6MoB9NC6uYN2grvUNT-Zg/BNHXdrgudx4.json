[
  {
    "text": "hello everyone hi welcome back to life calling with a SS I'm Giulio happy to be",
    "start": "1190",
    "end": "8550"
  },
  {
    "text": "here with you guys again if this is your first time on the show this which series",
    "start": "8550",
    "end": "14160"
  },
  {
    "text": "is where we are sharing directly with you guys and our space to interact and",
    "start": "14160",
    "end": "21560"
  },
  {
    "text": "sort questions and whatever you guys want to do and we are here to make sure",
    "start": "21560",
    "end": "29810"
  },
  {
    "text": "developers have been tools and the knowledge they have to be successful with a bless and much of that is around",
    "start": "29810",
    "end": "39030"
  },
  {
    "text": "application architecture and making sure that your app is not only ready for the",
    "start": "39030",
    "end": "46680"
  },
  {
    "text": "cloud but in well architected as a software architecture and software",
    "start": "46680",
    "end": "54420"
  },
  {
    "text": "engineering sense in general so towards that we've built this in the process",
    "start": "54420",
    "end": "60000"
  },
  {
    "text": "well a textured framework and this is what I've been talking about recently",
    "start": "60000",
    "end": "65040"
  },
  {
    "text": "and the u.s. well effected framework is built around this five pillars the",
    "start": "65040",
    "end": "73170"
  },
  {
    "text": "security reliability performance cost optimization and operational excellence",
    "start": "73170",
    "end": "78720"
  },
  {
    "text": "and we've been covering the questions from each pillar and we are going to",
    "start": "78720",
    "end": "84240"
  },
  {
    "text": "dive deep and called each one and really build something that is completely",
    "start": "84240",
    "end": "90180"
  },
  {
    "text": "compliant with this with all of those pillars but there's a lot of design and",
    "start": "90180",
    "end": "97939"
  },
  {
    "text": "thinking and considerations for this that it wouldn't be much of a help if we",
    "start": "97939",
    "end": "105450"
  },
  {
    "text": "just shoot out some code to you and says that it runs it is what I detected",
    "start": "105450",
    "end": "111869"
  },
  {
    "text": "without explaining so this is what we are here for really understanding what",
    "start": "111869",
    "end": "118130"
  },
  {
    "text": "architectural application is and getting to code one together so let me know",
    "start": "118130",
    "end": "124979"
  },
  {
    "text": "anything that you guys want to build in I would be happy to talk about it here",
    "start": "124979",
    "end": "130869"
  },
  {
    "text": "and today we'll be focusing on the performance be learned and there is a",
    "start": "130869",
    "end": "137770"
  },
  {
    "text": "lot to that so let's jump to the security move to the performance pillar",
    "start": "137770",
    "end": "143980"
  },
  {
    "text": "section and their questions we did reliability last week so now we'll",
    "start": "143980",
    "end": "150070"
  },
  {
    "text": "address performance and just like you other pillars in the well architected",
    "start": "150070",
    "end": "157210"
  },
  {
    "text": "this one starts with this design principles and just lets goes over a",
    "start": "157210",
    "end": "162850"
  },
  {
    "text": "name and make sure we understand the basics of performance on AWS and the",
    "start": "162850",
    "end": "169300"
  },
  {
    "text": "things that we have to keep in mind while implementing these solutions so",
    "start": "169300",
    "end": "174310"
  },
  {
    "text": "the first thing is to democratize advanced technologies and this is not a",
    "start": "174310",
    "end": "180820"
  },
  {
    "text": "sales pitch or anything this is just meaning that in traditional IT it's hard",
    "start": "180820",
    "end": "186760"
  },
  {
    "text": "to optimize performance by adopting new technology for example and talking about",
    "start": "186760",
    "end": "193110"
  },
  {
    "text": "databases such as adopting hadoop arm spark or a big data solution this is",
    "start": "193110",
    "end": "201670"
  },
  {
    "text": "something that many companies have on their return to our easily but for many",
    "start": "201670",
    "end": "207459"
  },
  {
    "text": "others this is very hard to get through the doors you have to convince managers you have chaplet hardware and software",
    "start": "207459",
    "end": "214300"
  },
  {
    "text": "in place and do a lot of stuff and it'll us makes this much easier to just spin",
    "start": "214300",
    "end": "220690"
  },
  {
    "text": "up the service provision and go so this is pretty much it and the ability to go",
    "start": "220690",
    "end": "228430"
  },
  {
    "text": "go go in minutes we'll see that performance is very late at the location we using several loads might help we're",
    "start": "228430",
    "end": "236500"
  },
  {
    "text": "gonna see how and if you can reduce your load on servers dozens probably",
    "start": "236500",
    "end": "243300"
  },
  {
    "text": "interesting in many senses performance and all in all it allows you",
    "start": "243300",
    "end": "249239"
  },
  {
    "text": "to test and experiment more often and launch more environments and do what you",
    "start": "249239",
    "end": "255659"
  },
  {
    "text": "have to do to make sure performance is just right for your app and the last one",
    "start": "255659",
    "end": "264240"
  },
  {
    "text": "is mechanical sympathy just using them the trade-offs that make sense for your",
    "start": "264240",
    "end": "270120"
  },
  {
    "text": "environment so that's it and after those principles it goes directly to the",
    "start": "270120",
    "end": "276990"
  },
  {
    "text": "questions and it starts with this selection team and we're going to speak",
    "start": "276990",
    "end": "282570"
  },
  {
    "text": "a little about this because much of the performance benefits that you can do is",
    "start": "282570",
    "end": "287639"
  },
  {
    "text": "just by selecting the right software and the right services for you and it's",
    "start": "287639",
    "end": "294560"
  },
  {
    "text": "sometimes not so easy you know and we hear that a lot then customers if we go",
    "start": "294560",
    "end": "300449"
  },
  {
    "text": "to the AWS products page on slash product to the main site you'll see that",
    "start": "300449",
    "end": "307260"
  },
  {
    "text": "we have several computer versus several storage services and it's nearly a",
    "start": "307260",
    "end": "313080"
  },
  {
    "text": "hundred services and how do you choose among all those things and it's something that we hear a lot and we're",
    "start": "313080",
    "end": "319770"
  },
  {
    "text": "gonna cover a bit about this today because that's where it starts and the",
    "start": "319770",
    "end": "326190"
  },
  {
    "text": "first question is how are you selecting the best performing architecture and to",
    "start": "326190",
    "end": "333570"
  },
  {
    "text": "make it easier to share some thoughts and to record what we're doing here I",
    "start": "333570",
    "end": "341760"
  },
  {
    "text": "put together some notes in a guest and unfearing dancing the twitch chat right",
    "start": "341760",
    "end": "348180"
  },
  {
    "text": "now so this is the guest that we are",
    "start": "348180",
    "end": "353669"
  },
  {
    "text": "running today hey Tina nice to see you and everyone here let me know if their audio is not right if the video if you",
    "start": "353669",
    "end": "361349"
  },
  {
    "text": "can see what I'm cussing at all or have any should just be me here and we can",
    "start": "361349",
    "end": "367050"
  },
  {
    "text": "try to make things a bit better so in this theme of how do you select",
    "start": "367050",
    "end": "373260"
  },
  {
    "text": "the best performance architecture the most important thing as what edwards deming toners millions",
    "start": "373260",
    "end": "380670"
  },
  {
    "text": "and In God We Trust all others bring data so let's try to remove the guesswork and imprecise information as",
    "start": "380670",
    "end": "389340"
  },
  {
    "text": "much as we can and work more strict as",
    "start": "389340",
    "end": "395520"
  },
  {
    "text": "we're closing to close our to engineering and let's translate this",
    "start": "395520",
    "end": "403169"
  },
  {
    "text": "into more precise terms so performance is a pretty very general and subjective",
    "start": "403169",
    "end": "413100"
  },
  {
    "text": "term right there isn't it's a feeling take that so it's better to think of",
    "start": "413100",
    "end": "420180"
  },
  {
    "text": "performance specific terms for example latency latency is much better you can",
    "start": "420180",
    "end": "427410"
  },
  {
    "text": "measure the latency in milliseconds or in any unit of time it's the",
    "start": "427410",
    "end": "432570"
  },
  {
    "text": "responsiveness or the liveliness of the system or how long it takes for the",
    "start": "432570",
    "end": "437639"
  },
  {
    "text": "request to come back so latency is",
    "start": "437639",
    "end": "442860"
  },
  {
    "text": "always a trade-off with throughput mean if the amount of data that you can get",
    "start": "442860",
    "end": "449100"
  },
  {
    "text": "per second or per unit of time or how many transactions per second are your",
    "start": "449100",
    "end": "454890"
  },
  {
    "text": "either system able to achieve we're gonna see that those will be always in",
    "start": "454890",
    "end": "462870"
  },
  {
    "text": "conflict with each other you have to think if you're dealing for latency or",
    "start": "462870",
    "end": "468690"
  },
  {
    "text": "billing for a throughput or perhaps find somewhere in the middle where the solution is just right and more than",
    "start": "468690",
    "end": "476190"
  },
  {
    "text": "that this is not something that steady over time it's sometimes proportional to",
    "start": "476190",
    "end": "482520"
  },
  {
    "text": "other quantities for example latency is usually related to the concurrent users",
    "start": "482520",
    "end": "489000"
  },
  {
    "text": "because if you have for example many many concurrent users you may have more threads that your application servers or",
    "start": "489000",
    "end": "496289"
  },
  {
    "text": "many more connections that your application server is capable of handling and this may increase latency",
    "start": "496289",
    "end": "502919"
  },
  {
    "text": "so you may check this out or according to your their set size for example everything",
    "start": "502919",
    "end": "510290"
  },
  {
    "text": "works fine when you have hundreds of roles in our database but I'm going to get to millions or billions you're free",
    "start": "510290",
    "end": "517490"
  },
  {
    "text": "boots probably gonna be different and perhaps our latency as well so translating this",
    "start": "517490",
    "end": "524000"
  },
  {
    "text": "into actual measurements is really important and this is part of",
    "start": "524000",
    "end": "530570"
  },
  {
    "text": "eliminating all the guessing but it's not that simple you have to get some exploration and",
    "start": "530570",
    "end": "539870"
  },
  {
    "text": "we're going to do this today and see how performance looks like and trying to get",
    "start": "539870",
    "end": "545300"
  },
  {
    "text": "a sense of the performance percentiles because the average doesn't always means",
    "start": "545300",
    "end": "550310"
  },
  {
    "text": "a lot sometimes or average performance is good but when you look at the 99th",
    "start": "550310",
    "end": "557570"
  },
  {
    "text": "percentile you're going to see some things that you might not like so we should be a bit deeper on this in a few",
    "start": "557570",
    "end": "564860"
  },
  {
    "text": "minutes there is flaming graphs and a lot of work done by Brendan Gregg from Netflix",
    "start": "564860",
    "end": "573080"
  },
  {
    "text": "if you don't know who I'm talking about I believe it's Greg like this open on",
    "start": "573080",
    "end": "580850"
  },
  {
    "text": "the right person and you should check his work on systems performance all that",
    "start": "580850",
    "end": "588220"
  },
  {
    "text": "there are lots of talks and for those wanting to breath dive deep on performance in a highly recommended",
    "start": "588220",
    "end": "594410"
  },
  {
    "text": "track his work specially on Fame graphs and things like this it is than many",
    "start": "594410",
    "end": "600950"
  },
  {
    "text": "interesting tools and publications and decision makers it is sound bad what do",
    "start": "600950",
    "end": "608720"
  },
  {
    "text": "you mean bad like noise or not loud enough for threesome or if you I will",
    "start": "608720",
    "end": "615230"
  },
  {
    "text": "increase the the audio a bit a little more game here and hope we're",
    "start": "615230",
    "end": "623490"
  },
  {
    "text": "better but I hope this sounds better I",
    "start": "623490",
    "end": "628590"
  },
  {
    "text": "will try to speak more loudly and here just to make sure it is okay it's a",
    "start": "628590",
    "end": "636360"
  },
  {
    "text": " better a higher I hope this is much better now let me know if you",
    "start": "636360",
    "end": "642030"
  },
  {
    "text": "have any more issues Thank You Francis Thank You Phil this is you I hope this is just right for everyone it's a bit",
    "start": "642030",
    "end": "651150"
  },
  {
    "text": "hard depending on your setup but let me know and the most important tool for",
    "start": "651150",
    "end": "657600"
  },
  {
    "text": "making these decisions are going to build as decision matrices like this I",
    "start": "657600",
    "end": "662760"
  },
  {
    "text": "don't know everybody uses a different thing for this and this is how I justify",
    "start": "662760",
    "end": "668520"
  },
  {
    "text": "decisions in most projects and comes back in the time when I console I didn't",
    "start": "668520",
    "end": "674430"
  },
  {
    "text": "used to feel a lot though so to speak your results from your explorations so",
    "start": "674430",
    "end": "682950"
  },
  {
    "text": "for example if you found those great databases on the web and you were sure",
    "start": "682950",
    "end": "689670"
  },
  {
    "text": "how you compare it just establish as clear criteria as you can this is not so",
    "start": "689670",
    "end": "697230"
  },
  {
    "text": "good let's try to make this a bit better so for example when we talk about",
    "start": "697230",
    "end": "705680"
  },
  {
    "text": "latency instead of just assigning a score you can do a bit better and",
    "start": "705710",
    "end": "713310"
  },
  {
    "text": "specify for example that the target is 1",
    "start": "713310",
    "end": "718800"
  },
  {
    "text": "5 seconds as a reference or something like this well ever call don't do a bit",
    "start": "718800",
    "end": "727380"
  },
  {
    "text": "better as the idea is the more precise in the more info and more you can build",
    "start": "727380",
    "end": "735840"
  },
  {
    "text": "on your matrix the clearer it will be and these it will be to explain when someone",
    "start": "735840",
    "end": "742259"
  },
  {
    "text": "arises and says hey why did you pick this database instead of this other and",
    "start": "742259",
    "end": "748619"
  },
  {
    "text": "if your project is interesting enough this will happen a lot so it's always",
    "start": "748619",
    "end": "754079"
  },
  {
    "text": "good to say you said off well no I don't know it just was wanting to learn it or",
    "start": "754079",
    "end": "759329"
  },
  {
    "text": "found them my friends are using and want to be with the cool kids it is better to",
    "start": "759329",
    "end": "765779"
  },
  {
    "text": "have a decision matrix or something similar just to say hey you know we have",
    "start": "765779",
    "end": "773519"
  },
  {
    "text": "this requirement of latency and this database did better than that but we",
    "start": "773519",
    "end": "779459"
  },
  {
    "text": "really value documentation and support so there's waited on us to choose and",
    "start": "779459",
    "end": "784860"
  },
  {
    "text": "ended up choosing for dizzy be over this already be ok so all right this is how",
    "start": "784860",
    "end": "796199"
  },
  {
    "text": "you usually select technology and that's a little bit deeper on this I'd like to",
    "start": "796199",
    "end": "804209"
  },
  {
    "text": "talk a bit more about testing and making some exploration and understanding",
    "start": "804209",
    "end": "811309"
  },
  {
    "text": "latency and throughput of the system so let's build a simple app on elastic",
    "start": "811309",
    "end": "817410"
  },
  {
    "text": "Beanstalk for a start so we're going to use many services today I will try",
    "start": "817410",
    "end": "822800"
  },
  {
    "text": "elastic Beanstalk let's create a new app it seems we have one from last week here",
    "start": "822800",
    "end": "828379"
  },
  {
    "text": "let's see if it's up if it is we can probably use this so let me see yeah",
    "start": "828379",
    "end": "837959"
  },
  {
    "text": "it's up so we already have an app and we",
    "start": "837959",
    "end": "843959"
  },
  {
    "text": "can see here in the monitoring section we are in the health section sorry we",
    "start": "843959",
    "end": "849480"
  },
  {
    "text": "have some monitoring data not so much I hope we have more here and in a bit and",
    "start": "849480",
    "end": "857009"
  },
  {
    "text": "the section that I want to pay attention is this latency and Lourdes averages on",
    "start": "857009",
    "end": "864629"
  },
  {
    "text": "the system and especially this latency percentiles if we're going to",
    "start": "864629",
    "end": "872140"
  },
  {
    "text": "deeper on this when we talk about measurements and monitor active monitoring and passive monitoring but",
    "start": "872140",
    "end": "878560"
  },
  {
    "text": "from here we will understand how our",
    "start": "878560",
    "end": "884230"
  },
  {
    "text": "latency distribution is so we're gonna see how much takes the 10% of our",
    "start": "884230",
    "end": "890290"
  },
  {
    "text": "requests are below this number 50% are below this one and you will see that 99%",
    "start": "890290",
    "end": "896800"
  },
  {
    "text": "of her requests are below a given latency score and the load in one minute",
    "start": "896800",
    "end": "902620"
  },
  {
    "text": "the load in five minutes let's try to get some dates on you here alright and",
    "start": "902620",
    "end": "909399"
  },
  {
    "text": "this is a thing the finger to talk about monitoring we are going to talk about",
    "start": "909399",
    "end": "916930"
  },
  {
    "text": "how to generate load and understand this a bit better but it is great if you have",
    "start": "916930",
    "end": "924209"
  },
  {
    "text": "POW watch like we're having here in Beanstalk or other service such as other",
    "start": "924209",
    "end": "931180"
  },
  {
    "text": "monitoring services such as New Relic or data dog they will all but he should",
    "start": "931180",
    "end": "937149"
  },
  {
    "text": "provide you this kind of information it doesn't matter really much the tool I'm",
    "start": "937149",
    "end": "944050"
  },
  {
    "text": "just showing the kind of information that you need in order to build matrix a",
    "start": "944050",
    "end": "951370"
  },
  {
    "text": "good matrix not this crappy one that I have here but you should feel as more",
    "start": "951370",
    "end": "956740"
  },
  {
    "text": "the more precise information you have the better and something that is not always easy to do is measure like the",
    "start": "956740",
    "end": "964660"
  },
  {
    "text": "quality of documentation or the community strength but you should get at",
    "start": "964660",
    "end": "970480"
  },
  {
    "text": "least star rating for this like 1 to 5 I tend to normalize from 1 to 5 on",
    "start": "970480",
    "end": "978430"
  },
  {
    "text": "everything just because multiplication and sums gets easier and to interpret",
    "start": "978430",
    "end": "984940"
  },
  {
    "text": "and to calculate so there's people to 0 to 1 or 0 to 100 kind of depends but I",
    "start": "984940",
    "end": "993040"
  },
  {
    "text": "like going from 1 to find makes it quick and simple so this will change of course",
    "start": "993040",
    "end": "999279"
  },
  {
    "text": "from the complexity of your environment from simple project this may be enough for more complex you",
    "start": "999279",
    "end": "1006690"
  },
  {
    "text": "may build a spreadsheet application that takes a lot more into account but look at the ID addition as long as you have",
    "start": "1006690",
    "end": "1015810"
  },
  {
    "text": "an answer and it's not guessing it should be fine right Landon let's dive",
    "start": "1015810",
    "end": "1024720"
  },
  {
    "text": "into selection in specific terms so how do you select your computer Lucien and",
    "start": "1024720",
    "end": "1033058"
  },
  {
    "text": "here is the tricky one because we have three types of computer solutions on AWS",
    "start": "1033059",
    "end": "1040350"
  },
  {
    "text": "we have serverless compute we have containers compute and instances compute",
    "start": "1040350",
    "end": "1045839"
  },
  {
    "text": "so let's give a little bit more of a perspective on today's we've covered a",
    "start": "1045839",
    "end": "1052260"
  },
  {
    "text": "lot of surveillance before unser merliss is all around lambda so let's take a",
    "start": "1052260",
    "end": "1058920"
  },
  {
    "text": "quick look on the idea of lambda is that instead of having your code deployed and",
    "start": "1058920",
    "end": "1066179"
  },
  {
    "text": "into servers that you manage and you control you just give AWS a function",
    "start": "1066179",
    "end": "1073170"
  },
  {
    "text": "here we can see them the code of one of the function that I have it can be in",
    "start": "1073170",
    "end": "1080309"
  },
  {
    "text": "several languages in Python in JavaScript in Java and c-sharp and whatnot and once stored this function is",
    "start": "1080309",
    "end": "1089520"
  },
  {
    "text": "going to react to several triggers and events here it's responding to called",
    "start": "1089520",
    "end": "1095340"
  },
  {
    "text": "watch events but we could bind this trigger to a guys or to devices or to",
    "start": "1095340",
    "end": "1102540"
  },
  {
    "text": "schemas or anything like this and the great thing about lambda functions is",
    "start": "1102540",
    "end": "1110370"
  },
  {
    "text": "they charge by the only one they are actually being executed so the exact",
    "start": "1110370",
    "end": "1117559"
  },
  {
    "text": "price is a fraction of a cent per gigabyte seconds so here",
    "start": "1117559",
    "end": "1124410"
  },
  {
    "text": "in in lambda we can suggest or make sure",
    "start": "1124410",
    "end": "1129780"
  },
  {
    "text": "that I don't speak the wrong number it is zero point zero zero zero zero one",
    "start": "1129780",
    "end": "1136260"
  },
  {
    "text": "six six seven four gigabyte second being so that if we change the configuration",
    "start": "1136260",
    "end": "1143390"
  },
  {
    "text": "of our function which you have half a",
    "start": "1143390",
    "end": "1149370"
  },
  {
    "text": "gig and run at most for two seconds the",
    "start": "1149370",
    "end": "1154830"
  },
  {
    "text": "most it will two minutes the most it will cost this if it uses all those two",
    "start": "1154830",
    "end": "1161760"
  },
  {
    "text": "minutes it's going to be six hundred and twenty seconds times half again so it's",
    "start": "1161760",
    "end": "1168360"
  },
  {
    "text": "60 seconds times this discussed so this should this is a pretty strong reason",
    "start": "1168360",
    "end": "1174660"
  },
  {
    "text": "and costs to use lambda and servers in",
    "start": "1174660",
    "end": "1180900"
  },
  {
    "text": "general and unimportant detail when it comes to performance is that there are",
    "start": "1180900",
    "end": "1186750"
  },
  {
    "text": "there's smaller lines here your function is allocated CPU proportional to the",
    "start": "1186750",
    "end": "1193650"
  },
  {
    "text": "memory is configured so if you are running on server less you will see that",
    "start": "1193650",
    "end": "1201420"
  },
  {
    "text": "the CPU changes when it changes when you change this value so you you probably",
    "start": "1201420",
    "end": "1207660"
  },
  {
    "text": "want to provision different copies or in your load testing test different values",
    "start": "1207660",
    "end": "1214740"
  },
  {
    "text": "of memory and see how our function behaves because this can really help to",
    "start": "1214740",
    "end": "1221120"
  },
  {
    "text": "optimize for the ideal performance that you're looking for oh you know I would",
    "start": "1221120",
    "end": "1227310"
  },
  {
    "text": "say go to them lowest memory that fits our needs but make sure you test",
    "start": "1227310",
    "end": "1233720"
  },
  {
    "text": "properly and another thing that",
    "start": "1233720",
    "end": "1240230"
  },
  {
    "text": "influential is understanding the container reuse so there's this article understanding container reuse in AWS",
    "start": "1240230",
    "end": "1248430"
  },
  {
    "text": "lambda we're team banner shows the cases in which the containers go up and down as",
    "start": "1248430",
    "end": "1255700"
  },
  {
    "text": "led the functions are executed and the idea yes you have to think that when",
    "start": "1255700",
    "end": "1264460"
  },
  {
    "text": "you're gonna clamp the function is idle it's not being called a lot it's no",
    "start": "1264460",
    "end": "1269560"
  },
  {
    "text": "traffic perhaps it's during the night or things like this you don't need to your",
    "start": "1269560",
    "end": "1276400"
  },
  {
    "text": "container may go down so what will happen yes during those times when you",
    "start": "1276400",
    "end": "1282760"
  },
  {
    "text": "look at the your percentiles distribution you see that most of your",
    "start": "1282760",
    "end": "1289750"
  },
  {
    "text": "requests are okay perhaps ninety-nine percent of your requests are below a",
    "start": "1289750",
    "end": "1295480"
  },
  {
    "text": "certain number but in the high range you see spikes in latency because some",
    "start": "1295480",
    "end": "1301210"
  },
  {
    "text": "perhaps one percent of your requests are getting the the cold container orphan",
    "start": "1301210",
    "end": "1309280"
  },
  {
    "text": "and you have to both the container in the application so you want to make sure",
    "start": "1309280",
    "end": "1315490"
  },
  {
    "text": "that when you're upon lambda functions your startup time is really really small",
    "start": "1315490",
    "end": "1321670"
  },
  {
    "text": "so this is pretty different than between the age of server for when you put your",
    "start": "1321670",
    "end": "1328990"
  },
  {
    "text": "app java application server and this is going to stay on forever and you start this gigantic connection pool and things",
    "start": "1328990",
    "end": "1336790"
  },
  {
    "text": "like this this doesn't make much sense with transient compute solutions like lambda",
    "start": "1336790",
    "end": "1342160"
  },
  {
    "text": "but we do have limits right for example here you can't go above a gig and a half",
    "start": "1342160",
    "end": "1350620"
  },
  {
    "text": "of memory and you I believe you cannot go above five minutes if I'm correct so",
    "start": "1350620",
    "end": "1357310"
  },
  {
    "text": "if your computation is long-running and requires a lot of memory for example",
    "start": "1357310",
    "end": "1365490"
  },
  {
    "text": "compute and things like this and hitting that I wouldn't say that Java lemons are",
    "start": "1366000",
    "end": "1373930"
  },
  {
    "text": "very slow because of je T aime je T aime certainly adds to the to the startup",
    "start": "1373930",
    "end": "1379630"
  },
  {
    "text": "time but we take that into consideration in the container config so it doesn't go",
    "start": "1379630",
    "end": "1384850"
  },
  {
    "text": "down so often and your code this also plays a lot in that so Java code is",
    "start": "1384850",
    "end": "1391300"
  },
  {
    "text": "usually structured for application servers and that's not probably going to",
    "start": "1391300",
    "end": "1397600"
  },
  {
    "text": "leave Wellman doesn't have to think a bit about your core your pool size and",
    "start": "1397600",
    "end": "1402670"
  },
  {
    "text": "things like this your cred configuration but all in all Java is great and but it",
    "start": "1402670",
    "end": "1411160"
  },
  {
    "text": "certainly have it's it's issues like any other language it's a matter of of",
    "start": "1411160",
    "end": "1417010"
  },
  {
    "text": "trade-offs but I'm glad that all of them are supported I mean old Java biggert",
    "start": "1417010",
    "end": "1422230"
  },
  {
    "text": "but I've been moving my JavaScript as well also and any problem runs see and",
    "start": "1422230",
    "end": "1428850"
  },
  {
    "text": "we're gonna see how the mark birth in in a second but but yes just those things",
    "start": "1428850",
    "end": "1437050"
  },
  {
    "text": "make sure that your tests for different memory and capacities memory and timeout",
    "start": "1437050",
    "end": "1443550"
  },
  {
    "text": "make sure that you understand container reuse and make your load testing to see",
    "start": "1443550",
    "end": "1451900"
  },
  {
    "text": "that your application is startup time is right and things like this so this is",
    "start": "1451900",
    "end": "1458500"
  },
  {
    "text": "pretty much it for performance tips for our lambda and we can we can dive a bit",
    "start": "1458500",
    "end": "1466660"
  },
  {
    "text": "deeper on this if you guys would like but it's not so much choice because",
    "start": "1466660",
    "end": "1472600"
  },
  {
    "text": "after all in the end like the manages the underlying containers for you so you don't have to",
    "start": "1472600",
    "end": "1479650"
  },
  {
    "text": "think about how are those tasks being distributed hardened vents getting there how is the cool deployed it's all right",
    "start": "1479650",
    "end": "1488050"
  },
  {
    "text": "good to go so another option is when you have when you don't have the same",
    "start": "1488050",
    "end": "1495870"
  },
  {
    "text": "properties the same when you run outside for example if you if you want other",
    "start": "1495870",
    "end": "1503560"
  },
  {
    "text": "languages so lambda support c-sharp Java no Python but what if you want go or",
    "start": "1503560",
    "end": "1512620"
  },
  {
    "text": "Ruby or other languages well there are things you can do for example the apex",
    "start": "1512620",
    "end": "1519160"
  },
  {
    "text": "framework you can run gold you can run other languages on Java for example",
    "start": "1519160",
    "end": "1525810"
  },
  {
    "text": "Scala or groovy or JRuby or things like this you could run other languages on",
    "start": "1525810",
    "end": "1532390"
  },
  {
    "text": "c-sharp environments such as f-sharp and things like this but there's it gets to",
    "start": "1532390",
    "end": "1540310"
  },
  {
    "text": "a point where you better run within yourself and execute everything locally",
    "start": "1540310",
    "end": "1545680"
  },
  {
    "text": "and one other very important part is that you're not going to be able to",
    "start": "1545680",
    "end": "1551200"
  },
  {
    "text": "replicate exactly lambda in your own infrastructure so there is a Sam local",
    "start": "1551200",
    "end": "1558130"
  },
  {
    "text": "for testing and development but if you want the exact same runtime as you have",
    "start": "1558130",
    "end": "1564370"
  },
  {
    "text": "in in production you may want to use containers so we are pretty heavily",
    "start": "1564370",
    "end": "1571390"
  },
  {
    "text": "invested on containers and as that is a major trend and if you'd like to use containers and manage containers",
    "start": "1571390",
    "end": "1578380"
  },
  {
    "text": "directly does a certain mean interesting here you can see that we are",
    "start": "1578380",
    "end": "1584830"
  },
  {
    "text": "continuously launching new features on containers we recently added s es capaz",
    "start": "1584830",
    "end": "1591160"
  },
  {
    "text": "de CS is our container service for ec2 and now it can add remove couple linux",
    "start": "1591160",
    "end": "1599140"
  },
  {
    "text": "capabilities directly to containers and allow for direct access to privileged",
    "start": "1599140",
    "end": "1606280"
  },
  {
    "text": "and instructions and things like and syscalls and can make her containers",
    "start": "1606280",
    "end": "1613360"
  },
  {
    "text": "not only run faster but get any kind of capability so this is pretty we're",
    "start": "1613360",
    "end": "1620110"
  },
  {
    "text": "bringing new things every day and there's a lot of extension points on ECS and a lot of guys can do if you want to",
    "start": "1620110",
    "end": "1627730"
  },
  {
    "text": "know more about SES I highly recommend you see at the series hearing which",
    "start": "1627730",
    "end": "1633100"
  },
  {
    "text": "Abby's been talking a lot about containers and we have videos of all",
    "start": "1633100",
    "end": "1638380"
  },
  {
    "text": "that from nothing at all to containers scaling on the cloud so check this out",
    "start": "1638380",
    "end": "1644770"
  },
  {
    "text": "if you guys want to know more about containers and we can probably run just",
    "start": "1644770",
    "end": "1650830"
  },
  {
    "text": "from a more concrete example that speak doctor container or I believe there is",
    "start": "1650830",
    "end": "1658360"
  },
  {
    "text": "one for that game gives rate the doctor version and this should be pretty easy",
    "start": "1658360",
    "end": "1667230"
  },
  {
    "text": "to build so I can let me try to get the",
    "start": "1667230",
    "end": "1673120"
  },
  {
    "text": "his docker file",
    "start": "1673120",
    "end": "1676050"
  },
  {
    "text": "so I just want the the dockerfile let me",
    "start": "1678480",
    "end": "1686049"
  },
  {
    "text": "get the little one from here",
    "start": "1686049",
    "end": "1690269"
  },
  {
    "text": "so this would be enough",
    "start": "1695800",
    "end": "1700120"
  },
  {
    "text": "let's see let's see if being stalked human that directly so I'll go to",
    "start": "1709000",
    "end": "1714429"
  },
  {
    "text": "elastic beanstalk create a new app let's say it's round 48",
    "start": "1714429",
    "end": "1724440"
  },
  {
    "text": "and Jane this is probably all right for",
    "start": "1724440",
    "end": "1730150"
  },
  {
    "text": "web environment I will pick docker as an engine we can",
    "start": "1730150",
    "end": "1735250"
  },
  {
    "text": "do load balancing and all this gaming or a single instance to make it go a bit faster but blowed my own dockerfile",
    "start": "1735250",
    "end": "1743220"
  },
  {
    "text": "that's how it works and upload the version it's this",
    "start": "1743220",
    "end": "1749080"
  },
  {
    "text": "environment just go and run if it was a bit more invitations we could add",
    "start": "1749080",
    "end": "1755590"
  },
  {
    "text": "database add resources and whatever I'm just going with the full settings here",
    "start": "1755590",
    "end": "1761080"
  },
  {
    "text": "and let's see if it's enough to run and",
    "start": "1761080",
    "end": "1766179"
  },
  {
    "text": "behind the scenes Beanstalk is going to manage the deployments and execution of",
    "start": "1766179",
    "end": "1772630"
  },
  {
    "text": "the container so I'm just highlighting that you have two different options here",
    "start": "1772630",
    "end": "1778480"
  },
  {
    "text": "if you don't if you're not familiar with container management and container",
    "start": "1778480",
    "end": "1786220"
  },
  {
    "text": "placement and container networking and things like this I don't want to know you can just keep your docker file to be",
    "start": "1786220",
    "end": "1793960"
  },
  {
    "text": "installed and let it run or fade or you can go to ECS and they see two container",
    "start": "1793960",
    "end": "1800559"
  },
  {
    "text": "service and here you deploy create your cluster add your docker file manager",
    "start": "1800559",
    "end": "1807730"
  },
  {
    "text": "hosts your money bags and all of that so just two ways to go about containers",
    "start": "1807730",
    "end": "1816929"
  },
  {
    "text": "again use the one that makes more sense",
    "start": "1816929",
    "end": "1822039"
  },
  {
    "text": "for your for your application environment again this always gets us back to the decision matrix so should I",
    "start": "1822039",
    "end": "1830799"
  },
  {
    "text": "use ECS or Beanstalk to my environment which one is better",
    "start": "1830799",
    "end": "1835990"
  },
  {
    "text": "I don't know pick your weight the finer criteria see how those that's what I would advise",
    "start": "1835990",
    "end": "1842680"
  },
  {
    "text": "most people right because each environment is kind of different but",
    "start": "1842680",
    "end": "1848560"
  },
  {
    "text": "that being said when it's all containers",
    "start": "1848560",
    "end": "1853570"
  },
  {
    "text": "for serverless or lambda functions in the end of the day it runs on Harborne right and let's",
    "start": "1853570",
    "end": "1862120"
  },
  {
    "text": "talk about instances and instances should be seen at the bottom most like",
    "start": "1862120",
    "end": "1868810"
  },
  {
    "text": "horsepower of compute so those will be the basic elements that are going to",
    "start": "1868810",
    "end": "1877120"
  },
  {
    "text": "define the performance of your app so it's very important for performance",
    "start": "1877120",
    "end": "1882220"
  },
  {
    "text": "efficiency that you understand what instances are how they behave in every",
    "start": "1882220",
    "end": "1888550"
  },
  {
    "text": "minor detail so I'll be I will run the risk to be overly detailed in my",
    "start": "1888550",
    "end": "1895810"
  },
  {
    "text": "explanation now about instances but I really want everybody to get this right",
    "start": "1895810",
    "end": "1901450"
  },
  {
    "text": "and understand what instances are so when you fire us Chu instance when it",
    "start": "1901450",
    "end": "1908170"
  },
  {
    "text": "boots you have this you're actually renting from AWS if you will a couple of",
    "start": "1908170",
    "end": "1916630"
  },
  {
    "text": "different things so sorry about the ticking where you are hiring CPU memory",
    "start": "1916630",
    "end": "1924910"
  },
  {
    "text": "perhaps some disks perhaps GPUs perhaps FPGA and one or more network interfaces",
    "start": "1924910",
    "end": "1932260"
  },
  {
    "text": "so let's see how it all happens in easy to wire Beanstalk goes on with launching",
    "start": "1932260",
    "end": "1943000"
  },
  {
    "text": "our daughter environment and I hope that if that butterfly was good we should be",
    "start": "1943000",
    "end": "1949480"
  },
  {
    "text": "running in a couple moments but meanwhile let's keep talking about ec2",
    "start": "1949480",
    "end": "1955030"
  },
  {
    "text": "so here in easy to let me get a different region for us I got a couple",
    "start": "1955030",
    "end": "1962380"
  },
  {
    "text": "machines running over there and launch a new instance so I run the new",
    "start": "1962380",
    "end": "1969630"
  },
  {
    "text": "instance wizard there's a couple small letters that not everybody see here but",
    "start": "1969630",
    "end": "1975930"
  },
  {
    "text": "those are pretty important and they say about the route device type and the",
    "start": "1975930",
    "end": "1981870"
  },
  {
    "text": "virtualization type so the first thing is route device type and you have two",
    "start": "1981870",
    "end": "1988560"
  },
  {
    "text": "options here you have some volumes that are EBS on the route and some others",
    "start": "1988560",
    "end": "1994800"
  },
  {
    "text": "that are based on instance store so ISA",
    "start": "1994800",
    "end": "2001430"
  },
  {
    "text": "store is another kind of instance of storage that we have and the main",
    "start": "2001430",
    "end": "2007280"
  },
  {
    "text": "difference is that EPS is persistent and instances store goes down and it",
    "start": "2007280",
    "end": "2013160"
  },
  {
    "text": "disappears when the ec2 instance is a spot and started so we also say this as",
    "start": "2013160",
    "end": "2021830"
  },
  {
    "text": "the store is ephemeral in that sense that once our instance is stopped and started this data goes away and the",
    "start": "2021830",
    "end": "2029960"
  },
  {
    "text": "other thing is this virtualization type this one is 8 p.m. and this means it's",
    "start": "2029960",
    "end": "2035770"
  },
  {
    "text": "harder assisted virtualization so when you make a network system quadrants and",
    "start": "2035770",
    "end": "2043280"
  },
  {
    "text": "data from socket for example the hardware can know and safely and in a",
    "start": "2043280",
    "end": "2051560"
  },
  {
    "text": "very performant way help to deliver this package to this machine for example when",
    "start": "2051560",
    "end": "2057470"
  },
  {
    "text": "you have virtualization all over 20 different types we have part of virtual in some",
    "start": "2057470",
    "end": "2066530"
  },
  {
    "text": "cases and those will be like emulators when there is a piece of software or",
    "start": "2066530",
    "end": "2074629"
  },
  {
    "text": "driver in the operating system that translates virtual machine calls to",
    "start": "2074630",
    "end": "2079700"
  },
  {
    "text": "hybrid cause and this helps on disadvantages advantages but you know for new instance",
    "start": "2079700",
    "end": "2088190"
  },
  {
    "text": "types and new applications I advise everybody choose hvm so this would be",
    "start": "2088190",
    "end": "2093289"
  },
  {
    "text": "always look then make sure that you're using the APM virtualization type for",
    "start": "2093289",
    "end": "2099079"
  },
  {
    "text": "the latest features in ECG so oh well",
    "start": "2099079",
    "end": "2106400"
  },
  {
    "text": "there is a bit of a background noise here that's true sorry about that",
    "start": "2106400",
    "end": "2111440"
  },
  {
    "text": "I will try to do to the mic my way and see if the microderm nice gets a bit",
    "start": "2111440",
    "end": "2117799"
  },
  {
    "text": "better I hope this is better Thank You JB 4:11 this is this is really",
    "start": "2117799",
    "end": "2126619"
  },
  {
    "text": "helpful and I see the the discussion about Java on lambda and it's really",
    "start": "2126619",
    "end": "2134839"
  },
  {
    "text": "that this old is trouble is or not talk you know I I'm I wrote pretty perform",
    "start": "2134839",
    "end": "2142519"
  },
  {
    "text": "and sing pretty performant Java code on lambda but it's really different from",
    "start": "2142519",
    "end": "2147739"
  },
  {
    "text": "writing code to an application server that's going to be up forever so this",
    "start": "2147739",
    "end": "2153009"
  },
  {
    "text": "really Minds that so let's understand",
    "start": "2153009",
    "end": "2158029"
  },
  {
    "text": "exactly how the limits instances works especially because we have a bit more",
    "start": "2158029",
    "end": "2165380"
  },
  {
    "text": "options on that but all in all the important part is selecting a family and",
    "start": "2165380",
    "end": "2172219"
  },
  {
    "text": "the instance resources that make sense for your case so first CPUs all instances when they",
    "start": "2172219",
    "end": "2180170"
  },
  {
    "text": "say like Anna before that has to be CPUs those are dedicated to your virtual",
    "start": "2180170",
    "end": "2187130"
  },
  {
    "text": "machine and you are going to own those CPUs 100% as long as your VM is running",
    "start": "2187130",
    "end": "2196269"
  },
  {
    "text": "except for the Xu family teach you is first of all so t2 Micro is not actually",
    "start": "2196269",
    "end": "2204710"
  },
  {
    "text": "one CPU it's like 10% of the CPU is small you have those on the",
    "start": "2204710",
    "end": "2210650"
  },
  {
    "text": "documentation those rates but the thing is they speed up as you don't use the",
    "start": "2210650",
    "end": "2216559"
  },
  {
    "text": "capacity that you provisioned and when up to a certain time they burst and then",
    "start": "2216559",
    "end": "2224150"
  },
  {
    "text": "they fall back to the baseline performance so this is only for the teacher all other instance types one CPU",
    "start": "2224150",
    "end": "2231559"
  },
  {
    "text": "it is one CPU but on CPU performance you have to understand that those are not",
    "start": "2231559",
    "end": "2238039"
  },
  {
    "text": "equal right for example and for larges have juvey CPUs and c4 largest also have",
    "start": "2238039",
    "end": "2247519"
  },
  {
    "text": "to be CPUs so what is the difference what is the performance how performance",
    "start": "2247519",
    "end": "2252859"
  },
  {
    "text": "is different between and for large and see for a large well this is another",
    "start": "2252859",
    "end": "2258319"
  },
  {
    "text": "detail giving the UI if you see here up in this description B and for large can",
    "start": "2258319",
    "end": "2266150"
  },
  {
    "text": "provide you 6.5 ECU's Elastic Compute units and abstract unit defined by",
    "start": "2266150",
    "end": "2273589"
  },
  {
    "text": "Amazon so you can compare this types they have a better definition they are",
    "start": "2273589",
    "end": "2279589"
  },
  {
    "text": "like 1.0 giga head of processor from i don't know where but the idea is that",
    "start": "2279589",
    "end": "2286489"
  },
  {
    "text": "it's not important the important thing is that this one should offer 6.5 ECU's",
    "start": "2286489",
    "end": "2293479"
  },
  {
    "text": "and this one here is 8 is use so see",
    "start": "2293479",
    "end": "2302059"
  },
  {
    "text": "force are targeted as the name implies and compute optimize it so those are",
    "start": "2302059",
    "end": "2308619"
  },
  {
    "text": "faster CPUs for compute but and they can achieve a bit higher processing but",
    "start": "2308619",
    "end": "2316700"
  },
  {
    "text": "because they are this generation but if you see on the memory side this m4 large",
    "start": "2316700",
    "end": "2323660"
  },
  {
    "text": "has 8 gigs of memory and the C 4 has 3.75 so if your app is more CPU",
    "start": "2323660",
    "end": "2331999"
  },
  {
    "text": "intensive you made better off with a c4 or if you are",
    "start": "2331999",
    "end": "2338230"
  },
  {
    "text": "memory intensive you can pick our forces that they have the same two CPUs they",
    "start": "2338230",
    "end": "2345610"
  },
  {
    "text": "are those appeals will get you a bit better than em force but not as much as",
    "start": "2345610",
    "end": "2352950"
  },
  {
    "text": "c4 performance but you have 15 gigs instead of 3.75 so for memory intensive",
    "start": "2352950",
    "end": "2360970"
  },
  {
    "text": "apps this is important and you get a picture for CPU and memory that's all we",
    "start": "2360970",
    "end": "2368320"
  },
  {
    "text": "go up to then very neo x1 32 extra large",
    "start": "2368320",
    "end": "2374830"
  },
  {
    "text": "with 2 terabytes of memory here so we have 1 terabyte 2 terabytes 4 terabytes",
    "start": "2374830",
    "end": "2382720"
  },
  {
    "text": "of memory and when we announced I guess up just 16 to be coming soon and we",
    "start": "2382720",
    "end": "2390100"
  },
  {
    "text": "should be having that and this is a bit different according to your region so",
    "start": "2390100",
    "end": "2395770"
  },
  {
    "text": "not all instance types are available in all regions but if they are please check",
    "start": "2395770",
    "end": "2404770"
  },
  {
    "text": "that you have the instant sites that is appropriate for your app and this is another thing that based on helps so",
    "start": "2404770",
    "end": "2412330"
  },
  {
    "text": "here in the configuration of your being stopped at on the instance type you can",
    "start": "2412330",
    "end": "2418300"
  },
  {
    "text": "either change the instance type anytime and it will apply this automatically or",
    "start": "2418300",
    "end": "2425560"
  },
  {
    "text": "you can comb this environment using a different instance type so this should",
    "start": "2425560",
    "end": "2433240"
  },
  {
    "text": "be Czech clone and change its configuration or you can save the",
    "start": "2433240",
    "end": "2440170"
  },
  {
    "text": "configuration for later so it's config a and doing blue green or a big passing",
    "start": "2440170",
    "end": "2448690"
  },
  {
    "text": "and see how different configurations behave so this is brynan a helpful",
    "start": "2448690",
    "end": "2454840"
  },
  {
    "text": "feature of bezel this change of instance types because this is major in finding",
    "start": "2454840",
    "end": "2460240"
  },
  {
    "text": "out what performs better the next thing I would like to talk about is EBS and instance of storage",
    "start": "2460240",
    "end": "2468530"
  },
  {
    "text": "this is the second column here and you will see that in new instances and",
    "start": "2468530",
    "end": "2474950"
  },
  {
    "text": "compute instances EBS is them is usually the case and you don't even have",
    "start": "2474950",
    "end": "2481550"
  },
  {
    "text": "instance store in many many instances but in some cases we have and when you",
    "start": "2481550",
    "end": "2489020"
  },
  {
    "text": "say here for example that the our creep x-large has one disk of irrigates SSD or",
    "start": "2489020",
    "end": "2497210"
  },
  {
    "text": "these are three and x-large has two disks of 320 gigs SSD this means that",
    "start": "2497210",
    "end": "2505850"
  },
  {
    "text": "inside the same physical host you will see the you will see the connection you",
    "start": "2505850",
    "end": "2514190"
  },
  {
    "text": "see the this the devices so EBS is a remote service and SSD is the an Easter",
    "start": "2514190",
    "end": "2522950"
  },
  {
    "text": "story is a local service it's a local device so this is over the network this",
    "start": "2522950",
    "end": "2529010"
  },
  {
    "text": "is over the local bus so this has chromosomes in implications in latency",
    "start": "2529010",
    "end": "2535220"
  },
  {
    "text": "and purple but other again this will be the capacity of those disks",
    "start": "2535220",
    "end": "2542270"
  },
  {
    "text": "is predetermined here in this instance type there are two disks of 320 SSD and",
    "start": "2542270",
    "end": "2549410"
  },
  {
    "text": "this is it you can't have more you can't have less this is what it offers here on",
    "start": "2549410",
    "end": "2555650"
  },
  {
    "text": "EBS you can dial up and down as you please you can have more gigs less gigs",
    "start": "2555650",
    "end": "2563570"
  },
  {
    "text": "different performance characteristics that we're going to see in a minute so",
    "start": "2563570",
    "end": "2568670"
  },
  {
    "text": "does this this is pretty important that's mover that's the one so for the",
    "start": "2568670",
    "end": "2577730"
  },
  {
    "text": "last but the first thing I told you guys about EBS and",
    "start": "2577730",
    "end": "2583400"
  },
  {
    "text": "he's in charge that we must never forget is that Jesus's start when you stop and",
    "start": "2583400",
    "end": "2589039"
  },
  {
    "text": "start this data is gone EBS when you stop and start the data remains there so this is I had this in a",
    "start": "2589039",
    "end": "2597230"
  },
  {
    "text": "small table here just for me before for reference the instance of storage is",
    "start": "2597230",
    "end": "2603980"
  },
  {
    "text": "ephemeral es is durable this is a storage is a local device EBS is a",
    "start": "2603980",
    "end": "2609500"
  },
  {
    "text": "network service capacity is pretty terming by instance type on instance",
    "start": "2609500",
    "end": "2615559"
  },
  {
    "text": "store and then EBS supervision as you please and the cost in instance storage",
    "start": "2615559",
    "end": "2623180"
  },
  {
    "text": "it is included in the instance cost and EBS you have to pay extra so if you",
    "start": "2623180",
    "end": "2629000"
  },
  {
    "text": "stopped and started to instance this is the store is gone and you burn pay for",
    "start": "2629000",
    "end": "2634160"
  },
  {
    "text": "it for you because you pay for only what you use only WS but ApS you pay for what",
    "start": "2634160",
    "end": "2640569"
  },
  {
    "text": "you provisioned and is storied there forever until you delete the volume and",
    "start": "2640569",
    "end": "2647119"
  },
  {
    "text": "or the instance so does I hope this makes sense so next we have the other",
    "start": "2647119",
    "end": "2659440"
  },
  {
    "text": "resource type is EBS optimizer so here I",
    "start": "2659440",
    "end": "2665359"
  },
  {
    "text": "told you guys that we have one or",
    "start": "2665359",
    "end": "2671510"
  },
  {
    "text": "perhaps more than one network interface and when you select an EBS optimizing",
    "start": "2671510",
    "end": "2679609"
  },
  {
    "text": "instance searches for example it's big our let's go on with r2 r3 Forex large",
    "start": "2679609",
    "end": "2691279"
  },
  {
    "text": "because it has one drive SSD and it is EBS optimizer so the idea here is that",
    "start": "2691279",
    "end": "2698299"
  },
  {
    "text": "you have one one network interface",
    "start": "2698299",
    "end": "2704150"
  },
  {
    "text": "towards EBS and one network interface towards your app so if you have for",
    "start": "2704150",
    "end": "2712039"
  },
  {
    "text": "example a database server here you have a separate dedicated",
    "start": "2712039",
    "end": "2717470"
  },
  {
    "text": "interface towards EBS in the if you set this as a BS optimizer and so it will",
    "start": "2717470",
    "end": "2726210"
  },
  {
    "text": "not conflict there will be no network contention between your storage network",
    "start": "2726210",
    "end": "2732510"
  },
  {
    "text": "and your application network with your request responses database queries and so on and after that there is your",
    "start": "2732510",
    "end": "2741590"
  },
  {
    "text": "performance on the network how much you provision the yes here the last yes is",
    "start": "2741590",
    "end": "2753360"
  },
  {
    "text": "if this supports ipv6 so I hope this is",
    "start": "2753360",
    "end": "2758460"
  },
  {
    "text": "clear for everyone but let me let me show you guys something a bit",
    "start": "2758460",
    "end": "2764070"
  },
  {
    "text": "interesting so here we can I would like to ask you guys what is it worth this",
    "start": "2764070",
    "end": "2772950"
  },
  {
    "text": "instance storage disks like if this disk",
    "start": "2772950",
    "end": "2778140"
  },
  {
    "text": "that just sits there and disappears when you stop and start why the heck is that",
    "start": "2778140",
    "end": "2784680"
  },
  {
    "text": "useful to anybody right this is an",
    "start": "2784680",
    "end": "2791760"
  },
  {
    "text": "interesting question and the first thing that always comes to mind as cache like",
    "start": "2791760",
    "end": "2796950"
  },
  {
    "text": "your Apache cache or virtual memory and swap and things like this our temporary",
    "start": "2796950",
    "end": "2804270"
  },
  {
    "text": "files logs if you like this one because lots",
    "start": "2804270",
    "end": "2809460"
  },
  {
    "text": "are usually ship out of the server anyway so they may live here for a while",
    "start": "2809460",
    "end": "2815060"
  },
  {
    "text": "and this is all good and valid but it's a bit further than that if you check the",
    "start": "2815060",
    "end": "2822980"
  },
  {
    "text": "distort volumes here you're gonna see some instance types that are quite",
    "start": "2822980",
    "end": "2829470"
  },
  {
    "text": "peculiar for example this deegeu and x-large is this type it has 40 24 disks of two",
    "start": "2829470",
    "end": "2839160"
  },
  {
    "text": "terabytes each so why would someone want 48 terabyte",
    "start": "2839160",
    "end": "2846250"
  },
  {
    "text": "in a femoral memory right why does this",
    "start": "2846250",
    "end": "2853000"
  },
  {
    "text": "make sense so the idea here is if you have replication such as biosystem",
    "start": "2853000",
    "end": "2861640"
  },
  {
    "text": "replication such as plus RFS or red hat storage and things like this or database",
    "start": "2861640",
    "end": "2868330"
  },
  {
    "text": "replication such as how to loop or Cassandra if you have data more than once",
    "start": "2868330",
    "end": "2873849"
  },
  {
    "text": "Ryan replicated in tree or many nodes if once fall down and take its data with it",
    "start": "2873849",
    "end": "2881920"
  },
  {
    "text": "it's not a big deal someone else is going to pick up the the replication and copy the data again so",
    "start": "2881920",
    "end": "2888640"
  },
  {
    "text": "that you're safe so for those kinds of apps it may be much more efficient to",
    "start": "2888640",
    "end": "2895930"
  },
  {
    "text": "have 48 terabytes of local storage included in instance cost instead of",
    "start": "2895930",
    "end": "2902080"
  },
  {
    "text": "having to go for the trouble of provisioning this amount in abs and",
    "start": "2902080",
    "end": "2907349"
  },
  {
    "text": "adjusting performance and paying more and things like this so this may make",
    "start": "2907349",
    "end": "2913000"
  },
  {
    "text": "sense another thing is remember that EBS costs extra if your web servers for example",
    "start": "2913000",
    "end": "2920560"
  },
  {
    "text": "they just go up and down up and down as as they as requests and demand increases",
    "start": "2920560",
    "end": "2928900"
  },
  {
    "text": "and decreases you may not be permanent storage you store let's say you store",
    "start": "2928900",
    "end": "2935950"
  },
  {
    "text": "everything on the database anyway or somewhere else that's not on the App server and you may not even need EBS so",
    "start": "2935950",
    "end": "2944290"
  },
  {
    "text": "in those cases you may pick instance storm routes volume and just go with a",
    "start": "2944290",
    "end": "2953260"
  },
  {
    "text": "few Moreau instances for example and save a couple bucks right I hope this",
    "start": "2953260",
    "end": "2959470"
  },
  {
    "text": "makes sense next is configuration details and performance wise the the spins are",
    "start": "2959470",
    "end": "2967030"
  },
  {
    "text": "important here are detailed monitoring this would give you one minute metrics",
    "start": "2967030",
    "end": "2973540"
  },
  {
    "text": "instead of the default five minute metrics and here is that EBS of",
    "start": "2973540",
    "end": "2979490"
  },
  {
    "text": "massive instance and additional charges may apply because it's a separate",
    "start": "2979490",
    "end": "2984530"
  },
  {
    "text": "network interface but you got it esmie solve lots of issues and network",
    "start": "2984530",
    "end": "2990470"
  },
  {
    "text": "contention especially when we are talking databases or five systems this",
    "start": "2990470",
    "end": "2995720"
  },
  {
    "text": "is pretty much important in those cases and our own tendency that is a bit",
    "start": "2995720",
    "end": "3003570"
  },
  {
    "text": "debatable how much that influences on performance because if you're in a",
    "start": "3003570",
    "end": "3009730"
  },
  {
    "text": "shared environment your neighbors may be busy and you may see fluctuation in your",
    "start": "3009730",
    "end": "3017220"
  },
  {
    "text": "cpu throughput especially in t2 micros",
    "start": "3017220",
    "end": "3022900"
  },
  {
    "text": "and smaller instance types but you can have a dedicated host so you make sure",
    "start": "3022900",
    "end": "3028150"
  },
  {
    "text": "that you know where your instance is running if you select dedicated this",
    "start": "3028150",
    "end": "3035860"
  },
  {
    "text": "means that you're not sharing Harvard all applications OPM's are running on",
    "start": "3035860",
    "end": "3041950"
  },
  {
    "text": "the same harbor are yours but you can't say what ones where this is a software",
    "start": "3041950",
    "end": "3048670"
  },
  {
    "text": "environment in more strict guarantees dedicated hosts where you can launch",
    "start": "3048670",
    "end": "3055350"
  },
  {
    "text": "instances selecting in which host it lives exactly and this may be important",
    "start": "3055350",
    "end": "3061359"
  },
  {
    "text": "for both performance and compliance reasons so can have the life if you have two licensed software per host and",
    "start": "3061359",
    "end": "3068440"
  },
  {
    "text": "things like this this may be easier to run in this way so this is this is how a",
    "start": "3068440",
    "end": "3077200"
  },
  {
    "text": "system works a next storage and here is where EBS performance comes through the",
    "start": "3077200",
    "end": "3084310"
  },
  {
    "text": "table here we can see that the default setting is the general-purpose disk and",
    "start": "3084310",
    "end": "3091150"
  },
  {
    "text": "the general-purpose disks are JIT are very very simple they have free IO",
    "start": "3091150",
    "end": "3098560"
  },
  {
    "text": "operations per second so if I have 200 gigs in my root volume I will have a",
    "start": "3098560",
    "end": "3105369"
  },
  {
    "text": "baseline of 600 operations per second those are",
    "start": "3105369",
    "end": "3110740"
  },
  {
    "text": "64-bits firm per operation so this will give you it will give us this much fruit",
    "start": "3110740",
    "end": "3119630"
  },
  {
    "text": "but the idea here is that if you use",
    "start": "3119630",
    "end": "3127460"
  },
  {
    "text": "less than this 600 i hopes for example your app uses usually four to 500 the",
    "start": "3127460",
    "end": "3135380"
  },
  {
    "text": "extra you accumulate in a bucket and you can spend this bucket to burst up to",
    "start": "3135380",
    "end": "3142369"
  },
  {
    "text": "three thousand cups so does this interesting so let let's think here one",
    "start": "3142369",
    "end": "3155299"
  },
  {
    "text": "thing that makes sense is asking what about a race should i do right array",
    "start": "3155299",
    "end": "3161809"
  },
  {
    "text": "rate the race using this volumes does it make sense what performs better one volume of let's",
    "start": "3161809",
    "end": "3170660"
  },
  {
    "text": "say one terabyte like this or should i",
    "start": "3170660",
    "end": "3176990"
  },
  {
    "text": "use two volumes of 500 and use striping",
    "start": "3176990",
    "end": "3183980"
  },
  {
    "text": "to write simultaneous with each of those disks and and have the the load balances",
    "start": "3183980",
    "end": "3191900"
  },
  {
    "text": "between the the writes and reads balances across those disks well I hope you guys can see that it is a treat",
    "start": "3191900",
    "end": "3201950"
  },
  {
    "text": "better to have two volumes in this case because here they can burst up to three",
    "start": "3201950",
    "end": "3208190"
  },
  {
    "text": "thousand each so your combined it burst could be up to six thousand cups while",
    "start": "3208190",
    "end": "3214819"
  },
  {
    "text": "if you had only one volume of one terabyte you only have your you are",
    "start": "3214819",
    "end": "3221660"
  },
  {
    "text": "already at your max baseline so I hope this makes sense and it's pretty",
    "start": "3221660",
    "end": "3228410"
  },
  {
    "text": "important then to understand how bursting goes and it's not hard it's",
    "start": "3228410",
    "end": "3235069"
  },
  {
    "text": "that simple three apps per gig first of all up to",
    "start": "3235069",
    "end": "3240349"
  },
  {
    "text": "to 8,000 per volume so it may make sense in some cases to have striping and",
    "start": "3240349",
    "end": "3247549"
  },
  {
    "text": "arrays and do things like this and have them them separate",
    "start": "3247549",
    "end": "3252619"
  },
  {
    "text": "okay and when you add volumes you can add different kinds of volumes to those",
    "start": "3252619",
    "end": "3260029"
  },
  {
    "text": "instances so we can have volumes that you provision how much I although you",
    "start": "3260029",
    "end": "3266779"
  },
  {
    "text": "want so you can have here like provision the 500 but this says nothing about the",
    "start": "3266779",
    "end": "3275450"
  },
  {
    "text": "I ops I can have that if I could put them before or even higher for example",
    "start": "3275450",
    "end": "3280880"
  },
  {
    "text": "if I want 2000 operation iOS per second I could use I could configure my disks",
    "start": "3280880",
    "end": "3288589"
  },
  {
    "text": "like so but you have to check that in EBS performance in the EBS pricing those",
    "start": "3288589",
    "end": "3298309"
  },
  {
    "text": "volume types will have different costs so G Picchu is quite simple it's 10",
    "start": "3298309",
    "end": "3304369"
  },
  {
    "text": "cents per gig per month and that's it own provision and I ops you pay separately provision size and provision",
    "start": "3304369",
    "end": "3313579"
  },
  {
    "text": "throughput so make sure you do the math on this and next we can add cold storage",
    "start": "3313579",
    "end": "3325269"
  },
  {
    "text": "throughput optimizes magnetic and not let you dive deep around estes yes if",
    "start": "3325269",
    "end": "3332660"
  },
  {
    "text": "you are if you need other kinds of hard",
    "start": "3332660",
    "end": "3338479"
  },
  {
    "text": "disks those are hot those are both SSD but there are still use cases for hard",
    "start": "3338479",
    "end": "3344479"
  },
  {
    "text": "drives magnetic hard drives for cold storage archiving lots of data cheaply",
    "start": "3344479",
    "end": "3349910"
  },
  {
    "text": "or if we're going to make cereal reads from huge collections and you just",
    "start": "3349910",
    "end": "3355579"
  },
  {
    "text": "worried about the fruit put as its version in the case on Hadoop and things like this and magnetic if you only need",
    "start": "3355579",
    "end": "3364249"
  },
  {
    "text": "this more volume with predictable one cheaper io ops for small volumes",
    "start": "3364249",
    "end": "3372580"
  },
  {
    "text": "that would be the common case for magnetic and another volume that you can",
    "start": "3372580",
    "end": "3378010"
  },
  {
    "text": "add here as is the ephemeral volume so",
    "start": "3378010",
    "end": "3384130"
  },
  {
    "text": "here we of those are on EBS but if you remember this instance type is but one",
    "start": "3384130",
    "end": "3391210"
  },
  {
    "text": "is the story volume and you can change nothing about it it's that volume or of",
    "start": "3391210",
    "end": "3397500"
  },
  {
    "text": "if we choosing this type we've selected that where is that business time to let",
    "start": "3397500",
    "end": "3407530"
  },
  {
    "text": "me selected here they are three for X large it's got one desk 300 gigs and",
    "start": "3407530",
    "end": "3414130"
  },
  {
    "text": "that's it that's all we had on storage thanks for measurability let's add at",
    "start": "3414130",
    "end": "3420490"
  },
  {
    "text": "least the name and do it storage",
    "start": "3420490",
    "end": "3425670"
  },
  {
    "text": "performance the security group I will",
    "start": "3425670",
    "end": "3431650"
  },
  {
    "text": "just launch this as it is crazy okay their best compared something like this",
    "start": "3431650",
    "end": "3439510"
  },
  {
    "text": "just we can put this if we want to dive a bit further but the idea is you see",
    "start": "3439510",
    "end": "3448030"
  },
  {
    "text": "that from the perform from the instance perspective once they're bound those are",
    "start": "3448030",
    "end": "3454030"
  },
  {
    "text": "all disks and block devices and you will see the mineral instance and they will",
    "start": "3454030",
    "end": "3461140"
  },
  {
    "text": "have the the performance as we specified okay so",
    "start": "3461140",
    "end": "3469860"
  },
  {
    "text": "so yeah talking about the container code start this is dependent per pair",
    "start": "3473950",
    "end": "3480400"
  },
  {
    "text": "environment as we were talking and the size of your app is one thing because",
    "start": "3480400",
    "end": "3486460"
  },
  {
    "text": "this will be downloaded from s3 when you're at boots so beware that you don't",
    "start": "3486460",
    "end": "3491920"
  },
  {
    "text": "want like gigabytes of deployment packages it's better if you can deploy",
    "start": "3491920",
    "end": "3498099"
  },
  {
    "text": "not that one big fat huger but smaller jars for functions or per modules that",
    "start": "3498099",
    "end": "3505089"
  },
  {
    "text": "should help with improving the container boot for for Java applications in",
    "start": "3505089",
    "end": "3512020"
  },
  {
    "text": "particular but this is valid form for other runtimes as well that's it for for",
    "start": "3512020",
    "end": "3521500"
  },
  {
    "text": "ec2 performance and the couple of other details here are four special instance",
    "start": "3521500",
    "end": "3529390"
  },
  {
    "text": "types we have most instances that most apps will be fine with this but for some",
    "start": "3529390",
    "end": "3537130"
  },
  {
    "text": "in some cases excuse me you need a bit",
    "start": "3537130",
    "end": "3543700"
  },
  {
    "text": "of more features for example GPU is important not only for graphics and",
    "start": "3543700",
    "end": "3550480"
  },
  {
    "text": "gaming but for machine learning neural networks HPC everybody that on high",
    "start": "3550480",
    "end": "3557500"
  },
  {
    "text": "performance may want to use GPUs and we have instances in the g3 and beach.you",
    "start": "3557500",
    "end": "3564160"
  },
  {
    "text": "families that comes bundled with for",
    "start": "3564160",
    "end": "3569619"
  },
  {
    "text": "example 16 or many GPUs so for example",
    "start": "3569619",
    "end": "3574839"
  },
  {
    "text": "there's a nice post in the Netflix blog about GPU and neural networks so Netflix",
    "start": "3574839",
    "end": "3585309"
  },
  {
    "text": "is one customer that leverages this GPU with to make machine learning and run",
    "start": "3585309",
    "end": "3592869"
  },
  {
    "text": "their models on GPUs and get incredible",
    "start": "3592869",
    "end": "3598990"
  },
  {
    "text": "performance games from this I will leave it the reference for",
    "start": "3598990",
    "end": "3604109"
  },
  {
    "text": "guys who would like to know more check this and many other cases around GPU so",
    "start": "3604109",
    "end": "3610499"
  },
  {
    "text": "the thing is we got GPUs not only those that are fix it but we just announced it",
    "start": "3610499",
    "end": "3616589"
  },
  {
    "text": "something called elastic GPUs so if you're running on other business types",
    "start": "3616589",
    "end": "3627509"
  },
  {
    "text": "such as we are you can add a GPU at any time it's network basic GPU so it's a",
    "start": "3627509",
    "end": "3636239"
  },
  {
    "text": "bit it's like ABS volumes but for GPUs just plug in the GPUs that you need",
    "start": "3636239",
    "end": "3642390"
  },
  {
    "text": "while you need them and just compute on GPUs and when you don't need it anymore",
    "start": "3642390",
    "end": "3649289"
  },
  {
    "text": "you can remove the GPUs and pay less so this may be important for simulations",
    "start": "3649289",
    "end": "3656219"
  },
  {
    "text": "and many other kind of scientific Oh computes then you don't well you don't",
    "start": "3656219",
    "end": "3662009"
  },
  {
    "text": "need to change instance types to have GPUs that's the that's the idea and",
    "start": "3662009",
    "end": "3667160"
  },
  {
    "text": "another very special component is FPGAs so we have this f1 instances not here",
    "start": "3667160",
    "end": "3676349"
  },
  {
    "text": "but on Virginia I will show you guys some details around this f1 instances so",
    "start": "3676349",
    "end": "3686069"
  },
  {
    "text": "those instances have a special hardware component called FPGAs field",
    "start": "3686069",
    "end": "3691859"
  },
  {
    "text": "programmable gate arrays then what they are are basically an accelerator for any",
    "start": "3691859",
    "end": "3698549"
  },
  {
    "text": "kind of workload so they are very capable FPGA is they are like huge",
    "start": "3698549",
    "end": "3704039"
  },
  {
    "text": "refugees by any standard and what it does is write your hardware in your",
    "start": "3704039",
    "end": "3710549"
  },
  {
    "text": "hardware development kit deployed an FPGA will configure its logic mapping so",
    "start": "3710549",
    "end": "3718920"
  },
  {
    "text": "that it will run near that code as if it was a native circle 2 written guilt for",
    "start": "3718920",
    "end": "3726809"
  },
  {
    "text": "that so it's programmable harder and this is important for both reasons you can be on",
    "start": "3726809",
    "end": "3733739"
  },
  {
    "text": "the side of the persons who know harbour development and can want to share that with the world",
    "start": "3733739",
    "end": "3740670"
  },
  {
    "text": "through the marketplace so you just published uranium mine with f1 support and goal or you consume this",
    "start": "3740670",
    "end": "3749160"
  },
  {
    "text": "from other people that publish it FPGA solutions from for the marketplace so",
    "start": "3749160",
    "end": "3755280"
  },
  {
    "text": "desk and this is another component that may be important for your workload",
    "start": "3755280",
    "end": "3760620"
  },
  {
    "text": "especially if you're doing video transcoding and things like this this is",
    "start": "3760620",
    "end": "3765660"
  },
  {
    "text": "how it runs so this is huge for many",
    "start": "3765660",
    "end": "3771810"
  },
  {
    "text": "types of workloads I highly encourage everyone to take a look at FPGA is pretty hot these days but again this",
    "start": "3771810",
    "end": "3780120"
  },
  {
    "text": "requires some understanding of hybrid design and how this components work so",
    "start": "3780120",
    "end": "3786090"
  },
  {
    "text": "make this just to make sure that everyone understands how CPU memory",
    "start": "3786090",
    "end": "3792090"
  },
  {
    "text": "disks to people and patronized and networking works for is it true instances and here's the blog and how",
    "start": "3792090",
    "end": "3800340"
  },
  {
    "text": "you choose between them so another thing that may be interesting for everyone is",
    "start": "3800340",
    "end": "3806220"
  },
  {
    "text": "the other than the huge array of instance types that we offer is the",
    "start": "3806220",
    "end": "3812880"
  },
  {
    "text": "Intel features that we have so if you ax or single route I over 20 - everything",
    "start": "3812880",
    "end": "3822390"
  },
  {
    "text": "that Intel has or features we usually launch them within new instance types",
    "start": "3822390",
    "end": "3828120"
  },
  {
    "text": "will soon have AI 5c 5s and Static processors and elastic network",
    "start": "3828120",
    "end": "3834780"
  },
  {
    "text": "interfaces and whatever and if you're",
    "start": "3834780",
    "end": "3840810"
  },
  {
    "text": "into the CPU details are not for everyone with the difference between Broadway and skylake but this is very",
    "start": "3840810",
    "end": "3850050"
  },
  {
    "text": "work much worth checking it out for the bottom most layers of performance so",
    "start": "3850050",
    "end": "3856490"
  },
  {
    "text": "we've already talked about storage and this is the what we've done for box",
    "start": "3856490",
    "end": "3862260"
  },
  {
    "text": "storage I would just like to highlight that we also have file systems",
    "start": "3862260",
    "end": "3867410"
  },
  {
    "text": "an object storage and then the idea is that you can build your own file system",
    "start": "3867410",
    "end": "3874130"
  },
  {
    "text": "on ec2 if you probably for example using if you want global net distributed file",
    "start": "3874130",
    "end": "3881270"
  },
  {
    "text": "systems such as glossary fast or Hadoop you can just spin that but we do have a",
    "start": "3881270",
    "end": "3887150"
  },
  {
    "text": "service for that it's AFS so if you just want a shared file system that performs",
    "start": "3887150",
    "end": "3894049"
  },
  {
    "text": "reasonably and works well and it avoids man it's already have many of the NFS",
    "start": "3894049",
    "end": "3900410"
  },
  {
    "text": "problems you burn out so just go for elastic file system but one thing that",
    "start": "3900410",
    "end": "3907730"
  },
  {
    "text": "you have to be aware is pricing because it's very convenient to have a shared",
    "start": "3907730",
    "end": "3914059"
  },
  {
    "text": "file system but it does cost 30 cents per day per month while if we check in",
    "start": "3914059",
    "end": "3920480"
  },
  {
    "text": "the wireless s3 the pricing is dramatically lower so in s3 that's",
    "start": "3920480",
    "end": "3927049"
  },
  {
    "text": "object storage where you just store the whole file you just send them it's just",
    "start": "3927049",
    "end": "3935119"
  },
  {
    "text": "like this huge team value store so the the basic difference between one and",
    "start": "3935119",
    "end": "3940609"
  },
  {
    "text": "another is that this one is a three this one is a hashmap so elastic file system will be",
    "start": "3940609",
    "end": "3949630"
  },
  {
    "text": "hierarchical file system with directories and permissions NFS",
    "start": "3949630",
    "end": "3955480"
  },
  {
    "text": "mountable over the network and things like this s3 is going to be an API over",
    "start": "3955480",
    "end": "3962180"
  },
  {
    "text": "HTTP that you can ship your objects for a given key and it will start that and",
    "start": "3962180",
    "end": "3969230"
  },
  {
    "text": "return that over HTTP so it's a very different thing and it's scale smug but",
    "start": "3969230",
    "end": "3976579"
  },
  {
    "text": "it feels much better right as you you probably aware hashmaps course but",
    "start": "3976579",
    "end": "3982279"
  },
  {
    "text": "scales better deviltry right when you have map you can just grow and add nose and",
    "start": "3982279",
    "end": "3989759"
  },
  {
    "text": "have linear time operations or constant",
    "start": "3989759",
    "end": "3995380"
  },
  {
    "text": "time operations most of the times if the trees is a different thing a director",
    "start": "3995380",
    "end": "4001589"
  },
  {
    "text": "you can't they get slower as they scale there's a lot of AFS to help that but",
    "start": "4001589",
    "end": "4008490"
  },
  {
    "text": "they are still a bit harder and that's why they're more expensive if you see",
    "start": "4008490",
    "end": "4015329"
  },
  {
    "text": "there are ten times more than ten times more expensive than astray okay so s3 goes on standard storage for",
    "start": "4015329",
    "end": "4029269"
  },
  {
    "text": "turning true cents point three on infrequent access for backups and on",
    "start": "4029269",
    "end": "4036539"
  },
  {
    "text": "glacier storage if and they have different performance characteristics",
    "start": "4036539",
    "end": "4041900"
  },
  {
    "text": "for high performance I highly recommend people choose a standard storage and",
    "start": "4041900",
    "end": "4047960"
  },
  {
    "text": "because the others will have different characteristics of accessibility okay",
    "start": "4047960",
    "end": "4054289"
  },
  {
    "text": "that's it for the storage options that we have so this is storage selection and",
    "start": "4054289",
    "end": "4062809"
  },
  {
    "text": "on the and storage and storage understanding the different",
    "start": "4062809",
    "end": "4068460"
  },
  {
    "text": "characteristics between blob storage file system storage on the FS and object",
    "start": "4068460",
    "end": "4076289"
  },
  {
    "text": "storage on s3 right so make sure that",
    "start": "4076289",
    "end": "4081440"
  },
  {
    "text": "you understand those differences okay blob storage file system and object will",
    "start": "4081440",
    "end": "4088230"
  },
  {
    "text": "behave completely different and this is the whole team of mechanical sympathy",
    "start": "4088230",
    "end": "4093420"
  },
  {
    "text": "with all if you're at further now let's go to databases and how do you select",
    "start": "4093420",
    "end": "4101730"
  },
  {
    "text": "your database solution and this is pretty much all around capturing and if",
    "start": "4101730",
    "end": "4110068"
  },
  {
    "text": "you don't know care I will provide a bit initial introduction but the whole idea",
    "start": "4110069",
    "end": "4117420"
  },
  {
    "text": "in selecting databases is understanding this so let's let me show you guys what",
    "start": "4117420",
    "end": "4126270"
  },
  {
    "text": "I mean by ViCAP everything that we need",
    "start": "4126270",
    "end": "4132750"
  },
  {
    "text": "to start data in any distributed system at all we are faced with a very hard",
    "start": "4132750",
    "end": "4140219"
  },
  {
    "text": "choice and this is how it goes let's say",
    "start": "4140219",
    "end": "4148859"
  },
  {
    "text": "that we have a very small database that only stores one line one hectare one",
    "start": "4148859",
    "end": "4154258"
  },
  {
    "text": "record I will insert a and it will store",
    "start": "4154259",
    "end": "4161130"
  },
  {
    "text": "the value a right so that it will keep",
    "start": "4161130",
    "end": "4166469"
  },
  {
    "text": "the value there the insert command ran it's stored and someone queries it will",
    "start": "4166469",
    "end": "4172650"
  },
  {
    "text": "answer hey so this is pretty much how their base works right and the problem here with",
    "start": "4172650",
    "end": "4179488"
  },
  {
    "text": "this setup what is we saw in the reliability a part that we always need",
    "start": "4179489",
    "end": "4185370"
  },
  {
    "text": "redundancy if there's not crashes this will have a problem of a of availability",
    "start": "4185370",
    "end": "4192600"
  },
  {
    "text": "so we need to change this to a network",
    "start": "4192600",
    "end": "4198020"
  },
  {
    "text": "where we have two servers for redundancy and when someone puts bait for example",
    "start": "4198020",
    "end": "4205170"
  },
  {
    "text": "and this gets to be and it's replicated",
    "start": "4205170",
    "end": "4213030"
  },
  {
    "text": "here so here is B & B comes out when someone asks right and if this server",
    "start": "4213030",
    "end": "4221969"
  },
  {
    "text": "dies I can still answer B because I still have one server up right mix I",
    "start": "4221969",
    "end": "4229290"
  },
  {
    "text": "hope this makes sense for everyone the problem is when this network is down",
    "start": "4229290",
    "end": "4235320"
  },
  {
    "text": "so right now when you have this what",
    "start": "4235320",
    "end": "4240920"
  },
  {
    "text": "when someone updates this to see the network is down so this guy's",
    "start": "4240920",
    "end": "4247170"
  },
  {
    "text": "to get to be and what should we answer here we can either answer see and be",
    "start": "4247170",
    "end": "4256440"
  },
  {
    "text": "consistent and being available and have available okay but consistency not so",
    "start": "4256440",
    "end": "4265350"
  },
  {
    "text": "much right so this will not been a consistent answer or we can say well our",
    "start": "4265350",
    "end": "4273390"
  },
  {
    "text": "network is down so we don't know in this table what state we are so I can't",
    "start": "4273390",
    "end": "4278910"
  },
  {
    "text": "answer anything so I would be consistent I will I will not give bad answers or",
    "start": "4278910",
    "end": "4286860"
  },
  {
    "text": "inconsistent answers but this will not be available so the idea here is just",
    "start": "4286860",
    "end": "4294150"
  },
  {
    "text": "make it clear that there is no way around this issue that when you have a",
    "start": "4294150",
    "end": "4299790"
  },
  {
    "text": "network partition does this an offensive name for this when you are a participant",
    "start": "4299790",
    "end": "4306870"
  },
  {
    "text": "you have to choose between availability and consistency and modern databases",
    "start": "4306870",
    "end": "4313489"
  },
  {
    "text": "changes this this bird there's a bit by adding more nodes so right now most",
    "start": "4313489",
    "end": "4321449"
  },
  {
    "text": "databases work in distributed fashion so if we are going and just add more",
    "start": "4321449",
    "end": "4329790"
  },
  {
    "text": "computers so for example here we can add two more nodes say now that now we have",
    "start": "4329790",
    "end": "4338040"
  },
  {
    "text": "a cost larger cluster and this is very interesting for both performance and",
    "start": "4338040",
    "end": "4346140"
  },
  {
    "text": "availability and capacity because not right now we can for example say that",
    "start": "4346140",
    "end": "4353820"
  },
  {
    "text": "this is D and even if we have a partition here it will update update and",
    "start": "4353820",
    "end": "4360929"
  },
  {
    "text": "update until finally you get there but",
    "start": "4360929",
    "end": "4367080"
  },
  {
    "text": "it might take a while so this is what we say this is",
    "start": "4367080",
    "end": "4374730"
  },
  {
    "text": "eventually consistent because it may not be consistent for everybody and the same",
    "start": "4374730",
    "end": "4381790"
  },
  {
    "text": "at the same time so this guy married B while this very day but sometime in a",
    "start": "4381790",
    "end": "4389080"
  },
  {
    "text": "while when it gets there it will be eventually consistent so this is how it",
    "start": "4389080",
    "end": "4397239"
  },
  {
    "text": "works I hope that's pretty much simple for everyone just making sure that",
    "start": "4397239",
    "end": "4403510"
  },
  {
    "text": "everybody understand the whole idea behind the cap theorem and this is what",
    "start": "4403510",
    "end": "4409659"
  },
  {
    "text": "drivers our selection of databases if we go here on the database solutions panel",
    "start": "4409659",
    "end": "4419110"
  },
  {
    "text": "on ec2 on AWS here are the options that",
    "start": "4419110",
    "end": "4425980"
  },
  {
    "text": "we have so we have RDS dynamodb elastic",
    "start": "4425980",
    "end": "4435250"
  },
  {
    "text": "cash and redshift so redshift is for data warehousing it's for extracting",
    "start": "4435250",
    "end": "4441790"
  },
  {
    "text": "both moment of datas with the best free put but not necessarily the greatest",
    "start": "4441790",
    "end": "4447909"
  },
  {
    "text": "latency so here it will run a massively parallel system it will be sequel but",
    "start": "4447909",
    "end": "4455679"
  },
  {
    "text": "it's more targeted at better houses and business intelligence on elastic cash it",
    "start": "4455679",
    "end": "4462790"
  },
  {
    "text": "will run the distributed caches in memory caches memcache day or Redis",
    "start": "4462790",
    "end": "4470770"
  },
  {
    "text": "whatever you prefer let's focus on RDS and dynamodb because those are the more",
    "start": "4470770",
    "end": "4477429"
  },
  {
    "text": "important in this performance and and",
    "start": "4477429",
    "end": "4482880"
  },
  {
    "text": "availability and cap when we are on RDS or relational databases every instance",
    "start": "4484110",
    "end": "4491650"
  },
  {
    "text": "we launch is going to be a relational database with highly consistent or",
    "start": "4491650",
    "end": "4498610"
  },
  {
    "text": "atomic consistent features so when we launch a new instance you get to select",
    "start": "4498610",
    "end": "4506050"
  },
  {
    "text": "your bass engine type and performance is a lot determined by our selection here so",
    "start": "4506050",
    "end": "4513610"
  },
  {
    "text": "you can run on the default flavor of my sequel the regular my sequel or muriela",
    "start": "4513610",
    "end": "4521200"
  },
  {
    "text": "bear that DB that you can download them run on your computer or there is a special database Here I am",
    "start": "4521200",
    "end": "4529480"
  },
  {
    "text": "as an Aurora that's compatible with my sequel but behind the scenes it's Amazon",
    "start": "4529480",
    "end": "4538000"
  },
  {
    "text": "engineer and database for Amazon infrastructures and performs much better than the generic my sequence up to five",
    "start": "4538000",
    "end": "4547690"
  },
  {
    "text": "times the throughput of my sequel less lag in replicas and many many much more",
    "start": "4547690",
    "end": "4556300"
  },
  {
    "text": "security optimization that you would see anywhere else and this is for open",
    "start": "4556300",
    "end": "4563080"
  },
  {
    "text": "source databases if you prefer you can run on bosphorus if your your software",
    "start": "4563080",
    "end": "4568930"
  },
  {
    "text": "is probably already designed for one of those or even our Oracle and sequel server if you prefer that I hope it's",
    "start": "4568930",
    "end": "4577300"
  },
  {
    "text": "not the case I myself prefer the open source world but it's all available here",
    "start": "4577300",
    "end": "4583270"
  },
  {
    "text": "and as I said each one will be different for each case another option but again",
    "start": "4583270",
    "end": "4591940"
  },
  {
    "text": "here what are the implications here on consistency this will be atomically",
    "start": "4591940",
    "end": "4599110"
  },
  {
    "text": "consistent highly available but it may not have the same latency as you would",
    "start": "4599110",
    "end": "4605470"
  },
  {
    "text": "see on no sequel databases for example on DynamoDB its database a no sequel",
    "start": "4605470",
    "end": "4611380"
  },
  {
    "text": "database by Amazon that stores everything on SSD and superfast",
    "start": "4611380",
    "end": "4617250"
  },
  {
    "text": "instances and networks and really optimize it for this use case and the",
    "start": "4617250",
    "end": "4622480"
  },
  {
    "text": "good thing here is you can just say your table name for example event ID as a key",
    "start": "4622480",
    "end": "4629710"
  },
  {
    "text": "and this will be again this same idea the same relationships a",
    "start": "4629710",
    "end": "4637820"
  },
  {
    "text": "different data structure here then woody B will use shardene and store our data",
    "start": "4637820",
    "end": "4643880"
  },
  {
    "text": "in many notes to make sure you have the read capacity and write capacity that",
    "start": "4643880",
    "end": "4651650"
  },
  {
    "text": "you need so you can either use the default settings or pick your own read",
    "start": "4651650",
    "end": "4658670"
  },
  {
    "text": "capacity and write capacity this have this is defining how many reads and how",
    "start": "4658670",
    "end": "4664459"
  },
  {
    "text": "many rights you can do per second and you can change that or demo creation or",
    "start": "4664459",
    "end": "4671179"
  },
  {
    "text": "anytime at all and it will even always scale by the full to match what your",
    "start": "4671179",
    "end": "4677360"
  },
  {
    "text": "provision here so you can say that I want that start with 10 read capacities",
    "start": "4677360",
    "end": "4684099"
  },
  {
    "text": "20 write capacities and then we will provision as many nodes as it requires",
    "start": "4684099",
    "end": "4691389"
  },
  {
    "text": "to keep this disfrute put one idea here that's very",
    "start": "4691389",
    "end": "4699650"
  },
  {
    "text": "important and is that this is on average so you're not going to get then read",
    "start": "4699650",
    "end": "4708590"
  },
  {
    "text": "units or 20 read write units were every shirt on your every partition but",
    "start": "4708590",
    "end": "4716349"
  },
  {
    "text": "overall the expected throughput of the whole system is is this as long as we",
    "start": "4716349",
    "end": "4725599"
  },
  {
    "text": "don't have one key that's much harder than the others this would be fine and",
    "start": "4725599",
    "end": "4731539"
  },
  {
    "text": "we're going to see some workarounds for the for when you do have those hotkeys and on things and for example one news",
    "start": "4731539",
    "end": "4740030"
  },
  {
    "text": "or one product that's much bigger than much more requires much more throughput",
    "start": "4740030",
    "end": "4745749"
  },
  {
    "text": "so here you can set the auto scaling for your for your table when it goes up when",
    "start": "4745749",
    "end": "4752510"
  },
  {
    "text": "it goes down capacity and this is it just",
    "start": "4752510",
    "end": "4757520"
  },
  {
    "text": "what you need to create I already have this policy name so let's new roof for",
    "start": "4757520",
    "end": "4764390"
  },
  {
    "text": "dynamo and we're done okay and one thing",
    "start": "4764390",
    "end": "4769850"
  },
  {
    "text": "that's important to work around that case when we don't have you have your",
    "start": "4769850",
    "end": "4778400"
  },
  {
    "text": "foot put is fine on average but you have one record or one item that's too hot",
    "start": "4778400",
    "end": "4784970"
  },
  {
    "text": "that's being accessed a lot and causing you issues we usually do caching for",
    "start": "4784970",
    "end": "4790580"
  },
  {
    "text": "this you can use of course memcache or Radice on the lessee cache but now",
    "start": "4790580",
    "end": "4798110"
  },
  {
    "text": "Amazon has its own DynamoDB cache embedded in that movie beam so that's",
    "start": "4798110",
    "end": "4804410"
  },
  {
    "text": "the ax is your embedded cache sorry for",
    "start": "4804410",
    "end": "4810860"
  },
  {
    "text": "the Spanish here you think automatically so the idea is moving from maybe seconds",
    "start": "4810860",
    "end": "4818780"
  },
  {
    "text": "to microseconds the blast dynamo usually performed responds with single-digit",
    "start": "4818780",
    "end": "4827570"
  },
  {
    "text": "latency so 110 milliseconds of latency but if you want to dial down to the",
    "start": "4827570",
    "end": "4833090"
  },
  {
    "text": "microsecond you can just enable text and add cache notes it's charged per cache",
    "start": "4833090",
    "end": "4839840"
  },
  {
    "text": "mode it's just a memory caching or in front of your dime on you mate automatically so the same that as you",
    "start": "4839840",
    "end": "4847730"
  },
  {
    "text": "would have for many other kinds of as many people do with memcache P or read",
    "start": "4847730",
    "end": "4853250"
  },
  {
    "text": "is but automatically within AWS so that's thanks and this is the same",
    "start": "4853250",
    "end": "4859970"
  },
  {
    "text": "indeed bottom end of things when you think about performance and it's always",
    "start": "4859970",
    "end": "4865190"
  },
  {
    "text": "important to understand the why does it behave like the so RDS is a bit worker",
    "start": "4865190",
    "end": "4876410"
  },
  {
    "text": "what's fix the micro I would believe you're saying fix the mic I hope it's",
    "start": "4876410",
    "end": "4883940"
  },
  {
    "text": "not too bad and let us know what the issue is I would be happy to fix this as",
    "start": "4883940",
    "end": "4889910"
  },
  {
    "text": "quick as possible but what I was saying about the different things is here we",
    "start": "4889910",
    "end": "4897050"
  },
  {
    "text": "can see the very similar change to the difference between file systems and as",
    "start": "4897050",
    "end": "4902300"
  },
  {
    "text": "free block storage and object storage databases there are index sensor on the",
    "start": "4902300",
    "end": "4910460"
  },
  {
    "text": "end trees so database indexes are bit raised or other kinds of trees then what",
    "start": "4910460",
    "end": "4917660"
  },
  {
    "text": "eBay is a distributed hash map so it's of course that's more scalable and",
    "start": "4917660",
    "end": "4925490"
  },
  {
    "text": "better efficiency in performance but it you do have a consistent consistency",
    "start": "4925490",
    "end": "4933500"
  },
  {
    "text": "issues right and that would it be that",
    "start": "4933500",
    "end": "4939100"
  },
  {
    "text": "would be big consistency you can define this when you read data from the",
    "start": "4940870",
    "end": "4946520"
  },
  {
    "text": "DynamoDB so when DynamoDB on the read operations you can specify if you want",
    "start": "4946520",
    "end": "4953620"
  },
  {
    "text": "eventually consistent reads this will give you the first thing it can as fast",
    "start": "4953620",
    "end": "4960110"
  },
  {
    "text": "as it can even if it's not entirely consistent or you can request",
    "start": "4960110",
    "end": "4965330"
  },
  {
    "text": "strongly consistent reads they cost more then eventually consistent reads costs",
    "start": "4965330",
    "end": "4972350"
  },
  {
    "text": "have a strongly consistent but also you will wait until your cluster is",
    "start": "4972350",
    "end": "4977720"
  },
  {
    "text": "consistent before returning you and answer so this dynamo does give you the",
    "start": "4977720",
    "end": "4984970"
  },
  {
    "text": "this choice not when you're provisioning but when you're reading the data for",
    "start": "4984970",
    "end": "4990980"
  },
  {
    "text": "some data and you may read them strongly consistent for some other kind of data",
    "start": "4990980",
    "end": "4996080"
  },
  {
    "text": "you can run with them eventually consistently as it feature needs and",
    "start": "4996080",
    "end": "5002310"
  },
  {
    "text": "this is it for picking your database so we're done understand the capturing and",
    "start": "5002310",
    "end": "5010660"
  },
  {
    "text": "pick your database appropriately there is many customers other things such as Cassandra MongoDB",
    "start": "5010660",
    "end": "5018900"
  },
  {
    "text": "and a lot of stuff but if you're new to this I highly recommend you test RDS",
    "start": "5018900",
    "end": "5027440"
  },
  {
    "text": "especially with Aurora and my sequel and that movie B would be good candidates",
    "start": "5027440",
    "end": "5033780"
  },
  {
    "text": "for selecting your database solution and another important aspect of databases is",
    "start": "5033780",
    "end": "5041309"
  },
  {
    "text": "what people usually use it to think about databases recently is being",
    "start": "5041309",
    "end": "5046710"
  },
  {
    "text": "changed dramatically with those new instance types so if you think that we",
    "start": "5046710",
    "end": "5053429"
  },
  {
    "text": "will now have instances with four terabytes of RAM like for many people",
    "start": "5053429",
    "end": "5060659"
  },
  {
    "text": "this is a big data they call it big data so but it fits in RAM so how does this",
    "start": "5060659",
    "end": "5066479"
  },
  {
    "text": "work how does this change your database perhaps you could have to read his notes",
    "start": "5066479",
    "end": "5073349"
  },
  {
    "text": "of four terabytes of memory each and the one and just use memory",
    "start": "5073349",
    "end": "5079920"
  },
  {
    "text": "I don't know memories the new disk for some people so this is very those are",
    "start": "5079920",
    "end": "5085559"
  },
  {
    "text": "decisions that you have to understands the other things that we were talking",
    "start": "5085559",
    "end": "5091409"
  },
  {
    "text": "about selecting ec2 instances and database solutions with the right",
    "start": "5091409",
    "end": "5100010"
  },
  {
    "text": "characteristics of consistency availability and network partitioning that makes sense form for your app right",
    "start": "5100010",
    "end": "5109579"
  },
  {
    "text": "for the network question so the next thing that you have to select is your",
    "start": "5109579",
    "end": "5116729"
  },
  {
    "text": "network solution and this is all about ingestion so usually there's there's a",
    "start": "5116729",
    "end": "5124469"
  },
  {
    "text": "lot in network solutions I will not dive so deep on this one but",
    "start": "5124469",
    "end": "5130829"
  },
  {
    "text": "yeah the thing that you can do to maximize and it's a very low hanging",
    "start": "5130829",
    "end": "5138150"
  },
  {
    "text": "fruit is use the right service for ingestion so we have some services that",
    "start": "5138150",
    "end": "5146290"
  },
  {
    "text": "are designed to be the first hit point of network they're distributed ultimate",
    "start": "5146290",
    "end": "5153340"
  },
  {
    "text": "should be closer to your user because this network is all about location and",
    "start": "5153340",
    "end": "5160290"
  },
  {
    "text": "the first I would like to talk about is CloudFront so we did a lot of this",
    "start": "5160290",
    "end": "5167020"
  },
  {
    "text": "there's a whole that is all dedicated to this but in the products page this is",
    "start": "5167020",
    "end": "5173110"
  },
  {
    "text": "pretty clear right after the products we have this global map of infrastructure",
    "start": "5173110",
    "end": "5178570"
  },
  {
    "text": "and we have two kinds of infrastructure do the orange dots there are the regions",
    "start": "5178570",
    "end": "5185320"
  },
  {
    "text": "and the blue dots there are the edge locations so those edge vacations are a",
    "start": "5185320",
    "end": "5192640"
  },
  {
    "text": "different kind of infrastructure to have the services that are closer or the true",
    "start": "5192640",
    "end": "5198460"
  },
  {
    "text": "bit closer to the user for example if you have users in I don't know let me",
    "start": "5198460",
    "end": "5206110"
  },
  {
    "text": "let me see for example in Italy would be a good example they don't need to go all",
    "start": "5206110",
    "end": "5212650"
  },
  {
    "text": "the way to Frankfurt or to Ireland regions they can fetch contents directly",
    "start": "5212650",
    "end": "5219160"
  },
  {
    "text": "from the edge location in their country that should be much faster right for",
    "start": "5219160",
    "end": "5226390"
  },
  {
    "text": "example we have true in Brazil Rio and Sao Paulo and so on so forth so there",
    "start": "5226390",
    "end": "5231940"
  },
  {
    "text": "are many more applications then you have",
    "start": "5231940",
    "end": "5238740"
  },
  {
    "text": "regions so you should target the target your traffic to that and one way to do",
    "start": "5238740",
    "end": "5246850"
  },
  {
    "text": "it is for CloudFront so CloudFront will use this to distribute traffic and you",
    "start": "5246850",
    "end": "5253810"
  },
  {
    "text": "get to say what we want to do as the origin you could have an s3 bucket or",
    "start": "5253810",
    "end": "5260730"
  },
  {
    "text": "ec2 instance or even services in your data center as the origins of content",
    "start": "5260730",
    "end": "5266500"
  },
  {
    "text": "and when your application is hit first it will hit the database then the edge",
    "start": "5266500",
    "end": "5273400"
  },
  {
    "text": "location if it has the content cached it will return directly from the education if not it may go to",
    "start": "5273400",
    "end": "5280700"
  },
  {
    "text": "the origin fetch the content from the origin and bring it back this may take a little time but it will catch this",
    "start": "5280700",
    "end": "5287630"
  },
  {
    "text": "closer to the end user hi this is the whole key to the",
    "start": "5287630",
    "end": "5296410"
  },
  {
    "text": "infrastructure costs because you can see that you can have the best instance",
    "start": "5296410",
    "end": "5302570"
  },
  {
    "text": "types and the best cost and whatever you want the best of AWS on the region that",
    "start": "5302570",
    "end": "5309020"
  },
  {
    "text": "has everything and still distribute traffic throughout this global network",
    "start": "5309020",
    "end": "5314330"
  },
  {
    "text": "of edge locations and you can even use all regions and all applications if you",
    "start": "5314330",
    "end": "5320630"
  },
  {
    "text": "like there are certainly customers at that scale but for many many customers",
    "start": "5320630",
    "end": "5325820"
  },
  {
    "text": "it doesn't make sense to go cross region especially when they're starting so you can start in just one region and use all",
    "start": "5325820",
    "end": "5333950"
  },
  {
    "text": "the networks of Education with CloudFront to distribute content and but",
    "start": "5333950",
    "end": "5341900"
  },
  {
    "text": "fingers where'd certain content it's a bit different if this is static or dynamic and you can set most of that in",
    "start": "5341900",
    "end": "5349940"
  },
  {
    "text": "cold front but if you're not having static content you just want to publish",
    "start": "5349940",
    "end": "5355670"
  },
  {
    "text": "your api's we attack gateway can automatically use CloudFront so when you",
    "start": "5355670",
    "end": "5362780"
  },
  {
    "text": "publish your API for a gateway if we will use the same as locations but with",
    "start": "5362780",
    "end": "5369560"
  },
  {
    "text": "more targeted configurations at api's same idea for devices when you're",
    "start": "5369560",
    "end": "5376490"
  },
  {
    "text": "capturing data from devices you can use AWS IOT and it will direct should in",
    "start": "5376490",
    "end": "5384920"
  },
  {
    "text": "this case the region not the edible SOT lives in the region it's not an edge",
    "start": "5384920",
    "end": "5390500"
  },
  {
    "text": "service but its design it to be the the first point of ingestion for IOT devices",
    "start": "5390500",
    "end": "5397880"
  },
  {
    "text": "you can even use IOT in many regions and use CloudFront or even",
    "start": "5397880",
    "end": "5404900"
  },
  {
    "text": "only about 53 to disable among them another very important service for",
    "start": "5404900",
    "end": "5412040"
  },
  {
    "text": "ingestion these Kinesis so let me show",
    "start": "5412040",
    "end": "5417440"
  },
  {
    "text": "you guys a bit of Kinesis Kinesis is very simple it will have the same idea",
    "start": "5417440",
    "end": "5423290"
  },
  {
    "text": "of sharding as you have in that what we b-but Kinesis dreams allow you to adjust",
    "start": "5423290",
    "end": "5430690"
  },
  {
    "text": "fruits so you get we have three types of different Keynesian services dreams very",
    "start": "5430690",
    "end": "5438380"
  },
  {
    "text": "close in analytics let's sight with streams so kinases",
    "start": "5438380",
    "end": "5443720"
  },
  {
    "text": "streams are just pipes of data so big pipe - for example drink from the fire",
    "start": "5443720",
    "end": "5454490"
  },
  {
    "text": "hose of Twitter or anything that was that's throwing you a lot of data you",
    "start": "5454490",
    "end": "5460220"
  },
  {
    "text": "can just say that if you have for example one shard one chart can do one mag per second or thousand records and",
    "start": "5460220",
    "end": "5467930"
  },
  {
    "text": "out two Meg's per second this is important because you can have your",
    "start": "5467930",
    "end": "5473720"
  },
  {
    "text": "reading paused and resumed later so it's very important that reads faster than",
    "start": "5473720",
    "end": "5479450"
  },
  {
    "text": "writes but if some if one mag is not enough and you need 100 you can",
    "start": "5479450",
    "end": "5484790"
  },
  {
    "text": "provision other charts and Kinesis will take care of them of the distribution of",
    "start": "5484790",
    "end": "5492170"
  },
  {
    "text": "this graphic just as you would have similarly with storm and other streaming",
    "start": "5492170",
    "end": "5500300"
  },
  {
    "text": "solutions both kinases suffer less and handles everything for you automatically",
    "start": "5500300",
    "end": "5506560"
  },
  {
    "text": "sometimes you're processing this data with apps sometimes you just want to",
    "start": "5506560",
    "end": "5512120"
  },
  {
    "text": "throw it on redshift on s3 and process later so we have firehose that's just",
    "start": "5512120",
    "end": "5518660"
  },
  {
    "text": "that so if you're on fire hose you just point your cane is a stream to deliver",
    "start": "5518660",
    "end": "5525770"
  },
  {
    "text": "data on s3 or redshift and you don't have to worry about processing the pipe",
    "start": "5525770",
    "end": "5531740"
  },
  {
    "text": "in foods are stored in there for you Linux will read your data in real-time",
    "start": "5531740",
    "end": "5539900"
  },
  {
    "text": "see what's going through the pipes and you can make sequel query queries on it",
    "start": "5539900",
    "end": "5545850"
  },
  {
    "text": "so can his trainee Maps we have a whole episode dedicated to that so I'm not",
    "start": "5545850",
    "end": "5552930"
  },
  {
    "text": "drop diving too deep here just showing you guys how the it does look like when",
    "start": "5552930",
    "end": "5559440"
  },
  {
    "text": "you're create one but the whole idea here is that after a while we'll have an",
    "start": "5559440",
    "end": "5565470"
  },
  {
    "text": "application running on our behalf and we can do sequel queries such as give me",
    "start": "5565470",
    "end": "5572400"
  },
  {
    "text": "the average or the percentiles or any window function within this window of",
    "start": "5572400",
    "end": "5577740"
  },
  {
    "text": "time a tempering window a rolling wiggle anything that you want to run analytics",
    "start": "5577740",
    "end": "5584910"
  },
  {
    "text": "on a stream of data should be doable or",
    "start": "5584910",
    "end": "5590220"
  },
  {
    "text": "makinia streams so we can go to our sequel editor start this app that it",
    "start": "5590220",
    "end": "5598320"
  },
  {
    "text": "created for me this demo I will add sequel from the templates and for",
    "start": "5598320",
    "end": "5604230"
  },
  {
    "text": "example this here is just account so",
    "start": "5604230",
    "end": "5610290"
  },
  {
    "text": "with will fetch I can fetch the count",
    "start": "5610290",
    "end": "5615330"
  },
  {
    "text": "from a single or aggregate or key means",
    "start": "5615330",
    "end": "5621810"
  },
  {
    "text": "or any many algorithms to understand the data that is currently in your plate so",
    "start": "5621810",
    "end": "5628950"
  },
  {
    "text": "this could be the events that you're receiving from IOT telemetry or",
    "start": "5628950",
    "end": "5635330"
  },
  {
    "text": "analytics on your social data and things like this so yeah so if kissaki misses",
    "start": "5635330",
    "end": "5648690"
  },
  {
    "text": "is a full solution for all sorts of",
    "start": "5648690",
    "end": "5654030"
  },
  {
    "text": "streaming data applications and all those without managing the server so",
    "start": "5654030",
    "end": "5660120"
  },
  {
    "text": "this is premium attractive just to make sure",
    "start": "5660120",
    "end": "5665220"
  },
  {
    "text": "this is clear for everyone and they all Patrol you're talking about this if no",
    "start": "5665220",
    "end": "5670380"
  },
  {
    "text": "let me know but the idea behind Jesus yes we have canoes and streams for",
    "start": "5670380",
    "end": "5679020"
  },
  {
    "text": "streaming pipes of data that can go from small pipes to huge pipes and skillet as",
    "start": "5679020",
    "end": "5685350"
  },
  {
    "text": "units consume data firehose if you don't need to process just start the data and",
    "start": "5685350",
    "end": "5691620"
  },
  {
    "text": "start it on redshift on s3 and load it later for analytics analytics to run",
    "start": "5691620",
    "end": "5697620"
  },
  {
    "text": "sequel queries on the data that's currently on the pipes and run and",
    "start": "5697620",
    "end": "5702840"
  },
  {
    "text": "create things like dashboards or real time app so for example once someone",
    "start": "5702840",
    "end": "5709110"
  },
  {
    "text": "goes in the busses with the device in front of a store that has a promotion",
    "start": "5709110",
    "end": "5715020"
  },
  {
    "text": "you can alert or when it's more than 90",
    "start": "5715020",
    "end": "5720030"
  },
  {
    "text": "degrees in your thermometers for more than 10 minutes you may show fire an",
    "start": "5720030",
    "end": "5726000"
  },
  {
    "text": "alarm or trigger something like this so this is easy to make on genesis",
    "start": "5726000",
    "end": "5731940"
  },
  {
    "text": "analytics so this is streaming solutions",
    "start": "5731940",
    "end": "5737239"
  },
  {
    "text": "last but not least Direct Connect as a network has a pretty important network",
    "start": "5737270",
    "end": "5743430"
  },
  {
    "text": "in fact the idea here is that it can have your dedicated connection to",
    "start": "5743430",
    "end": "5749370"
  },
  {
    "text": "address so instead of going all the way through the internet and you will reach",
    "start": "5749370",
    "end": "5754890"
  },
  {
    "text": "an AWS region you can just have a fiber connection dedicated with consistent",
    "start": "5754890",
    "end": "5760770"
  },
  {
    "text": "network performance from your data centers straight to me the glass so you",
    "start": "5760770",
    "end": "5766860"
  },
  {
    "text": "don't need to go back and forth and this is pretty important if you have integration for example to have a",
    "start": "5766860",
    "end": "5773220"
  },
  {
    "text": "mainframe in your data center I hope not but well there's still some of those",
    "start": "5773220",
    "end": "5778590"
  },
  {
    "text": "around they're very hard to cue but they",
    "start": "5778590",
    "end": "5784260"
  },
  {
    "text": "shouldn't prevent your network migration you could move everything that you can to AWS and use direct connection",
    "start": "5784260",
    "end": "5792429"
  },
  {
    "text": "our own data center directly with predictable network bandwidth costs and",
    "start": "5792429",
    "end": "5800770"
  },
  {
    "text": "compatible with all solutions so and",
    "start": "5800770",
    "end": "5805980"
  },
  {
    "text": "this is it for the network solution so",
    "start": "5805980",
    "end": "5811980"
  },
  {
    "text": "we are near the end we have a few more questions to you to go and they are",
    "start": "5811980",
    "end": "5818710"
  },
  {
    "text": "pretty much more focused on the process so they're not as technical we're going",
    "start": "5818710",
    "end": "5825190"
  },
  {
    "text": "to be a bit lighter on this end but the next is how do you ensure that you",
    "start": "5825190",
    "end": "5830469"
  },
  {
    "text": "continue to have the most appropriate resource type as new things are introduced and one thing I would say is",
    "start": "5830469",
    "end": "5837280"
  },
  {
    "text": "keep up to date and always understanding what's coming on and coming along and",
    "start": "5837280",
    "end": "5842350"
  },
  {
    "text": "there's a lot of ways for that do join the meetups conferences and industry",
    "start": "5842350",
    "end": "5847480"
  },
  {
    "text": "resources that you have one that is particularly valuable for being is the word technology Raiders especially the",
    "start": "5847480",
    "end": "5854230"
  },
  {
    "text": "world from Fort Worth's does this hugely helpful so they classify techniques",
    "start": "5854230",
    "end": "5862480"
  },
  {
    "text": "those languages and frameworks and platforms in to adopt trial and as far",
    "start": "5862480",
    "end": "5869650"
  },
  {
    "text": "as sass so they are saying that for example Python 3 or import reacts or",
    "start": "5869650",
    "end": "5875350"
  },
  {
    "text": "reactive and Redux or for example in platform Linux security modules or",
    "start": "5875350",
    "end": "5883480"
  },
  {
    "text": "Apache measles so if you're taking a look in Devon's for example they",
    "start": "5883480",
    "end": "5888850"
  },
  {
    "text": "classify lambda as trial so they have their criterias everybody have a",
    "start": "5888850",
    "end": "5894400"
  },
  {
    "text": "different one you they even tell you how to build your own Raider and this may be",
    "start": "5894400",
    "end": "5899830"
  },
  {
    "text": "interesting and doom there is this explanation for why they rated like this",
    "start": "5899830",
    "end": "5906449"
  },
  {
    "text": "but the specific instance is not as important",
    "start": "5906449",
    "end": "5912199"
  },
  {
    "text": "the idea of using a rather yours or someone else's to keep up to date with",
    "start": "5912199",
    "end": "5918739"
  },
  {
    "text": "technology this really helps and about",
    "start": "5918739",
    "end": "5927679"
  },
  {
    "text": "the meet ups thanks for trying outs David MCO",
    "start": "5927679",
    "end": "5933050"
  },
  {
    "text": "sixty-five visit they are truly important and here in the bless slash",
    "start": "5933050",
    "end": "5940820"
  },
  {
    "text": "user groups we have a list of the meetups that will run we just had a",
    "start": "5940820",
    "end": "5946580"
  },
  {
    "text": "dream Cockroft speaking at the Madrid EV ops Meetup",
    "start": "5946580",
    "end": "5952160"
  },
  {
    "text": "we as evangelists are frequently there so if it's just as nice to hang out with",
    "start": "5952160",
    "end": "5959660"
  },
  {
    "text": "you guys on the meetups as it is here on Twitch but you get to throw things at me and",
    "start": "5959660",
    "end": "5965480"
  },
  {
    "text": "buy me a beer in the next one I hope yeah I see you guys there and we",
    "start": "5965480",
    "end": "5970910"
  },
  {
    "text": "do have lots and lots of those just eat your continent and you see the list of",
    "start": "5970910",
    "end": "5976670"
  },
  {
    "text": "the the meetups that we have right now we're in New Madrid so you mean we have",
    "start": "5976670",
    "end": "5984199"
  },
  {
    "text": "we do have those everywhere though join join contest meet up next is this is the",
    "start": "5984199",
    "end": "5995390"
  },
  {
    "text": "one side of monitoring performance the other part is actually monitoring in the",
    "start": "5995390",
    "end": "6004390"
  },
  {
    "text": "bugging so checking where are the the Basel max of your app and really make",
    "start": "6004390",
    "end": "6010360"
  },
  {
    "text": "sure you do but those diligently is important and one so for that another",
    "start": "6010360",
    "end": "6015850"
  },
  {
    "text": "tool for that is x-ray so x-ray will allow you to see through the for your",
    "start": "6015850",
    "end": "6023980"
  },
  {
    "text": "resources and give you overview of where you have the bottlenecks so it will will",
    "start": "6023980",
    "end": "6032560"
  },
  {
    "text": "trace requests across many AWS resources and show you",
    "start": "6032560",
    "end": "6039810"
  },
  {
    "text": "let me show you an example of a missus I",
    "start": "6041929",
    "end": "6047040"
  },
  {
    "text": "can get a screenshot I won't be able to get an app running meantime with x-ray",
    "start": "6047040",
    "end": "6052650"
  },
  {
    "text": "but here's the idea sorry it's not that real but you get them through many",
    "start": "6052650",
    "end": "6060840"
  },
  {
    "text": "service through all services and this boosts your services and our services",
    "start": "6060840",
    "end": "6066960"
  },
  {
    "text": "you can see who's a bottleneck who is running behind who needs more capacity",
    "start": "6066960",
    "end": "6072480"
  },
  {
    "text": "who is throwing errors and things like this so x-rays a huge tool to see what's",
    "start": "6072480",
    "end": "6079260"
  },
  {
    "text": "going on in each of the services and this is internal monitoring right this",
    "start": "6079260",
    "end": "6085560"
  },
  {
    "text": "is monitoring our tap from the inside and understanding how each component",
    "start": "6085560",
    "end": "6090659"
  },
  {
    "text": "behaves on performance 7 how you monitor",
    "start": "6090659",
    "end": "6095790"
  },
  {
    "text": "your resources for ma was large and ensure they're performing as expected you have this active and passive or",
    "start": "6095790",
    "end": "6103619"
  },
  {
    "text": "internal and external monitoring and this is internal how our application is",
    "start": "6103619",
    "end": "6109380"
  },
  {
    "text": "running from inside but it's also important to look how things are going",
    "start": "6109380",
    "end": "6114599"
  },
  {
    "text": "from the outside and there are many tools for that I'm a old Java dude so I",
    "start": "6114599",
    "end": "6120080"
  },
  {
    "text": "use it to doing this with jmeter so there's a can install and run jmeter",
    "start": "6120080",
    "end": "6127619"
  },
  {
    "text": "from cast from home Brio as I just did",
    "start": "6127619",
    "end": "6133280"
  },
  {
    "text": "once you launch the meter we can just create a new test plan I don't think I",
    "start": "6133280",
    "end": "6141210"
  },
  {
    "text": "can increase the the interface here a lot but I will create a new one a new",
    "start": "6141210",
    "end": "6148560"
  },
  {
    "text": "test plan and add threads as users so I",
    "start": "6148560",
    "end": "6153570"
  },
  {
    "text": "will create 10 threads and wait for 3 seconds for them to rev up and look 100",
    "start": "6153570",
    "end": "6161969"
  },
  {
    "text": "times you can schedule there's a bit of lots of tricks you can",
    "start": "6161969",
    "end": "6167400"
  },
  {
    "text": "do here to simulate your users and requests such as people an HTTP request",
    "start": "6167400",
    "end": "6174710"
  },
  {
    "text": "let's fire those requests our app so we",
    "start": "6174710",
    "end": "6180449"
  },
  {
    "text": "have that elastic being stopped running so let's use that as a target so this is",
    "start": "6180449",
    "end": "6187830"
  },
  {
    "text": "the URL there's a lot you can do and configure and just going the critique on",
    "start": "6187830",
    "end": "6196159"
  },
  {
    "text": "HTTP this is the default this is the path we should be good I know that we",
    "start": "6196159",
    "end": "6204810"
  },
  {
    "text": "have a request however the listener and Shion aggregate",
    "start": "6204810",
    "end": "6210360"
  },
  {
    "text": "reports for the for this data so here you can see how many samples the average",
    "start": "6210360",
    "end": "6217260"
  },
  {
    "text": "the medium the lines the percentiles minimum and Max so if I run this I",
    "start": "6217260",
    "end": "6224099"
  },
  {
    "text": "should be able to let me let's save it before so I'm those requests are going",
    "start": "6224099",
    "end": "6234179"
  },
  {
    "text": "through and let's zoom in a little bit I am performing nearly 8,000 HTTP requests",
    "start": "6234179",
    "end": "6242849"
  },
  {
    "text": "and you can see that on average they're taking this time but on the 90% 90% of",
    "start": "6242849",
    "end": "6251580"
  },
  {
    "text": "my requests are let's say that good for us is under 200 milliseconds so 90% of",
    "start": "6251580",
    "end": "6259739"
  },
  {
    "text": "our requests are good 95 percent perhaps ok but we have that 1% that is there are",
    "start": "6259739",
    "end": "6268980"
  },
  {
    "text": "being dramatic and this is where the bottlenecks lie so you mean when this",
    "start": "6268980",
    "end": "6275070"
  },
  {
    "text": "happens look at the x-ray see where the bottlenecks fix the bottlenecks run this again",
    "start": "6275070",
    "end": "6280610"
  },
  {
    "text": "and so and so far until you have your performance measurements measurements",
    "start": "6280610",
    "end": "6286670"
  },
  {
    "text": "done and safe that's not the loveliest",
    "start": "6286670",
    "end": "6292400"
  },
  {
    "text": "job in the world but somebody's got to do it and you will learn a lot about your system just by debugging those",
    "start": "6292400",
    "end": "6299989"
  },
  {
    "text": "bottlenecks and getting those numbers the best as you can so this will it's",
    "start": "6299989",
    "end": "6306230"
  },
  {
    "text": "really worth the while and finally using",
    "start": "6306230",
    "end": "6312380"
  },
  {
    "text": "print offs to improve performance is just fine where why you have this weird",
    "start": "6312380",
    "end": "6317960"
  },
  {
    "text": "things so we talked about many techniques I will update this gist just",
    "start": "6317960",
    "end": "6324619"
  },
  {
    "text": "on this table it's a bit better it's all about explaining why did you choose to",
    "start": "6324619",
    "end": "6333889"
  },
  {
    "text": "add caching for example wise decks there why are you using sharding or white does",
    "start": "6333889",
    "end": "6340489"
  },
  {
    "text": "a specific compression and buffering or a be deployments so those are all",
    "start": "6340489",
    "end": "6347739"
  },
  {
    "text": "architectural trade-offs they're harder to explain in other terms and harder to",
    "start": "6347739",
    "end": "6353659"
  },
  {
    "text": "be very precise but you should go as precise as you can not like this is a",
    "start": "6353659",
    "end": "6359960"
  },
  {
    "text": "bit sloppy saying that compression uses time and gains space but you can say that for example well we choose actually",
    "start": "6359960",
    "end": "6368179"
  },
  {
    "text": "use snappy compression because it does compress our data set to I don't know 50",
    "start": "6368179",
    "end": "6374510"
  },
  {
    "text": "percent and we gain a lot of space so it's Payless on s3 even though it takes",
    "start": "6374510",
    "end": "6380590"
  },
  {
    "text": "30% more to uncompress before an",
    "start": "6380590",
    "end": "6385810"
  },
  {
    "text": "analysis but it's worth it for example because it saves us this much money or",
    "start": "6385810",
    "end": "6391969"
  },
  {
    "text": "this much time and I do and you document at least in abstract",
    "start": "6391969",
    "end": "6400430"
  },
  {
    "text": "terms like this but as precisely as you can how you trade off to improve",
    "start": "6400430",
    "end": "6406370"
  },
  {
    "text": "performance and if possible what exactly the numbers as as everything that with",
    "start": "6406370",
    "end": "6414550"
  },
  {
    "text": "every measurement and the whole the most important part of today's broadcast is",
    "start": "6414550",
    "end": "6420740"
  },
  {
    "text": "this idea so I hope they show you guys some resources to not talk about",
    "start": "6420740",
    "end": "6427400"
  },
  {
    "text": "performance in so abstract terms let us understand document decisions especially",
    "start": "6427400",
    "end": "6435620"
  },
  {
    "text": "those selective decisions why do something instead of the other why you adopted one technique instead of the",
    "start": "6435620",
    "end": "6442040"
  },
  {
    "text": "other nineteen thirty's in abstract terms but and as precise and what did",
    "start": "6442040",
    "end": "6450140"
  },
  {
    "text": "give terms as possible some things are hard to grab quantitatively such as",
    "start": "6450140",
    "end": "6455360"
  },
  {
    "text": "documentation quality but you can get at least a quantitative sense such as this",
    "start": "6455360",
    "end": "6461330"
  },
  {
    "text": "time rating for that one two five or things like this for every solution that",
    "start": "6461330",
    "end": "6468980"
  },
  {
    "text": "you have especially compute storage database network those are the five big",
    "start": "6468980",
    "end": "6475850"
  },
  {
    "text": "areas in well architected but there is a lot more coming someday we're gonna see",
    "start": "6475850",
    "end": "6481640"
  },
  {
    "text": "machine learning and other things here but for most customers those are the ones that make sense and I hope you did",
    "start": "6481640",
    "end": "6489140"
  },
  {
    "text": "understand that on compute we have server less containers and instances we",
    "start": "6489140",
    "end": "6495740"
  },
  {
    "text": "drop down on the what is an instance and how it behaves on storage sinking block",
    "start": "6495740",
    "end": "6502340"
  },
  {
    "text": "storage EFS and s3 have very different performance characteristics we've",
    "start": "6502340",
    "end": "6508010"
  },
  {
    "text": "covered that but at the more we cover it's always very important to not take",
    "start": "6508010",
    "end": "6516380"
  },
  {
    "text": "this for granted I could go into the very detailed benchmarks and I thought",
    "start": "6516380",
    "end": "6523130"
  },
  {
    "text": "about doing so here but that's not the point the whole point is really you guys how you can do your",
    "start": "6523130",
    "end": "6529930"
  },
  {
    "text": "measurement because only your performance matters on your environment mine is nearly irrelevant here so for",
    "start": "6529930",
    "end": "6538900"
  },
  {
    "text": "this database solution do reveal the capture and how the different databases",
    "start": "6538900",
    "end": "6544360"
  },
  {
    "text": "perform and provide different availability performance and consistency",
    "start": "6544360",
    "end": "6551770"
  },
  {
    "text": "guarantees and the network solutions that we have for ingesting data they are",
    "start": "6551770",
    "end": "6557680"
  },
  {
    "text": "different for each kind of app and we covered those two and when they make",
    "start": "6557680",
    "end": "6563710"
  },
  {
    "text": "sense from IOT to static and APRs for",
    "start": "6563710",
    "end": "6570580"
  },
  {
    "text": "keeping up-to-date and monitoring that's question six and seven or those are two",
    "start": "6570580",
    "end": "6575890"
  },
  {
    "text": "sides of the same coin how do you make sure that the performance that your",
    "start": "6575890",
    "end": "6582820"
  },
  {
    "text": "fault was correct is to correct there are only two ways keep up with the new stuff because sometimes you do have huge",
    "start": "6582820",
    "end": "6590320"
  },
  {
    "text": "breakthroughs for example Amazon Aurora and their basis was huge so perhaps it's",
    "start": "6590320",
    "end": "6596470"
  },
  {
    "text": "worth taking a look and measure it to see if it makes better for your app's",
    "start": "6596470",
    "end": "6601890"
  },
  {
    "text": "latency and throughput debugging the bottlenecks and monitoring on the other",
    "start": "6601890",
    "end": "6607030"
  },
  {
    "text": "side to make sure that it's still valid so it's with AWS the idea is that you",
    "start": "6607030",
    "end": "6614650"
  },
  {
    "text": "can change your database configuration and even change your database tier run",
    "start": "6614650",
    "end": "6620350"
  },
  {
    "text": "your G meter or whatever you are using for load testing and see how it behaves",
    "start": "6620350",
    "end": "6626080"
  },
  {
    "text": "and document that and this is how you choose technology for based on",
    "start": "6626080",
    "end": "6631630"
  },
  {
    "text": "performance and not everything can be this this precise for some huge",
    "start": "6631630",
    "end": "6639940"
  },
  {
    "text": "architectural decisions and trade-offs there's a whole technique that for",
    "start": "6639940",
    "end": "6645490"
  },
  {
    "text": "example when you use charging you change a lot of things that many times",
    "start": "6645490",
    "end": "6650670"
  },
  {
    "text": "you have some gains and losses in different areas and this is how you",
    "start": "6650670",
    "end": "6656850"
  },
  {
    "text": "answer performance eight it's just how you document those those trade-offs so I",
    "start": "6656850",
    "end": "6663840"
  },
  {
    "text": "hope this gives you guys a good idea of what well architected performance efficiency",
    "start": "6663840",
    "end": "6669600"
  },
  {
    "text": "is all about and we've talked a lot about the performance characteristics of",
    "start": "6669600",
    "end": "6677460"
  },
  {
    "text": "the AWS services in general there was a it was a lot today don't worry if you",
    "start": "6677460",
    "end": "6684630"
  },
  {
    "text": "didn't pick it up everything I hope it was clear enough for everyone to understand but if it was not feel free",
    "start": "6684630",
    "end": "6692640"
  },
  {
    "text": "to call me here on twitch chat it was we had a very good chat today I'm sorry we",
    "start": "6692640",
    "end": "6700350"
  },
  {
    "text": "had some people that was not there not really contributed but I really like the",
    "start": "6700350",
    "end": "6707219"
  },
  {
    "text": "tech chat about container efficiency and Java startup times those are always",
    "start": "6707219",
    "end": "6714420"
  },
  {
    "text": "important and make sure you understand the difference here is it's not only",
    "start": "6714420",
    "end": "6721199"
  },
  {
    "text": "Chavez fault it's a different thing for designing for con servers that are going",
    "start": "6721199",
    "end": "6726719"
  },
  {
    "text": "to run forever and servers that are going to run for seconds it's totally",
    "start": "6726719",
    "end": "6731790"
  },
  {
    "text": "different design so keep that in mind and keep in touch I would love to hear",
    "start": "6731790",
    "end": "6738719"
  },
  {
    "text": "from you guys on Twitter I will share the links every feeling for this for",
    "start": "6738719",
    "end": "6744300"
  },
  {
    "text": "this session so you can refer back and see you next time we have cost",
    "start": "6744300",
    "end": "6749929"
  },
  {
    "text": "efficiency where we will learn how to save a lot of money on the glass stay",
    "start": "6749929",
    "end": "6756989"
  },
  {
    "text": "tuned",
    "start": "6756989",
    "end": "6759289"
  }
]