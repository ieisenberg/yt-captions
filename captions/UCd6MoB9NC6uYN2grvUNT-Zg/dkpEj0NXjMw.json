[
  {
    "text": "In this video, you’ll see how to send \nVPC flow logs to Amazon OpenSearch",
    "start": "0",
    "end": "4240"
  },
  {
    "text": "Serverless using Amazon \nKinesis Data Firehose.",
    "start": "4240",
    "end": "7255"
  },
  {
    "text": "With this solution, you can create an \nOpenSearch Serverless collection to",
    "start": "7789",
    "end": "11338"
  },
  {
    "text": "store VPC flow logs, create a Kinesis \nData Firehose pipeline to forward the",
    "start": "11338",
    "end": "16004"
  },
  {
    "text": "logs to OpenSearch Serverless, \nand examine the flow log data",
    "start": "16005",
    "end": "19449"
  },
  {
    "text": "using OpenSearch Dashboards.",
    "start": "19449",
    "end": "21300"
  },
  {
    "text": "This solution uses native integration of VPC \nflow logs streaming to Kinesis Data Firehose.",
    "start": "22719",
    "end": "28066"
  },
  {
    "text": "An AWS Lambda function transforms the \nlogs into to the required OpenSearch format.",
    "start": "28509",
    "end": "33269"
  },
  {
    "text": "A Firehose delivery stream then buffers \nthe streamed VPC flow logs and delivers",
    "start": "33893",
    "end": "38213"
  },
  {
    "text": "them to an OpenSearch Service \ndestination endpoint, where they",
    "start": "38213",
    "end": "41551"
  },
  {
    "text": "can be monitored in near real time.",
    "start": "41551",
    "end": "43552"
  },
  {
    "text": "Any failed data goes into \nan Amazon S3 bucket.",
    "start": "44120",
    "end": "47277"
  },
  {
    "text": "To get started, let’s navigate to the \nAmazon OpenSearch Service and",
    "start": "49536",
    "end": "53223"
  },
  {
    "text": "create a new Serverless collection.",
    "start": "53223",
    "end": "54935"
  },
  {
    "text": "Let’s give this collection a name.",
    "start": "55628",
    "end": "57092"
  },
  {
    "text": "Because we’re focusing on log analytics, we’ll \nleave the collection type set to “time series.”",
    "start": "60000",
    "end": "64921"
  },
  {
    "text": "We’ll also use an AWS owned \nkey rather than creating our own.",
    "start": "65853",
    "end": "69186"
  },
  {
    "text": "Let’s make this access collection \npublic and continue to the next step.",
    "start": "70162",
    "end": "73628"
  },
  {
    "text": "Next, we’ll select a previously created \nAWS Identity and Access Management",
    "start": "77284",
    "end": "81625"
  },
  {
    "text": "(IAM) user who’s authorized to \naccess OpenSearch Dashboards.",
    "start": "81625",
    "end": "85657"
  },
  {
    "text": "In this case, we’ll grant \nall available permissions.",
    "start": "89342",
    "end": "92050"
  },
  {
    "text": "We’ll create a new data \naccess policy for this collection.",
    "start": "97489",
    "end": "100292"
  },
  {
    "text": "Let’s review the settings \nand submit the collection.",
    "start": "102768",
    "end": "104996"
  },
  {
    "text": "While we wait for the collection to be created, \nlet’s navigate to the Amazon Kinesis console.",
    "start": "107381",
    "end": "112090"
  },
  {
    "text": "We’ll create a Kinesis Data \nFirehose delivery stream.",
    "start": "113078",
    "end": "115809"
  },
  {
    "text": "For the source, we’ll specify Direct PUT.",
    "start": "118000",
    "end": "120789"
  },
  {
    "text": "For the destination, we’ll specify \nAmazon OpenSearch Serverless.",
    "start": "122935",
    "end": "126501"
  },
  {
    "text": "Let’s enter a name for the stream.",
    "start": "129419",
    "end": "130944"
  },
  {
    "text": "Next, we’ll enable data transformation \nwith AWS Lambda and create a function.",
    "start": "132817",
    "end": "137533"
  },
  {
    "text": "We’ll use the Lambda blueprint called \nGeneral Kinesis Data Firehose Processing.",
    "start": "138453",
    "end": "142729"
  },
  {
    "text": "We’ll enter a name for the function \nand retain the default settings.",
    "start": "144841",
    "end": "147845"
  },
  {
    "text": "Now that we’ve created the \nfunction, we can edit its code.",
    "start": "152648",
    "end": "155344"
  },
  {
    "text": "For our purposes, we’ll \npaste in the updated code.",
    "start": "156185",
    "end": "158702"
  },
  {
    "text": "This code will decode the Kinesis data in\n the VPC flow logs from base 64 to JSON.",
    "start": "160303",
    "end": "165657"
  },
  {
    "text": "Then it splits the payload \nto give us a specific feed.",
    "start": "166589",
    "end": "169136"
  },
  {
    "text": "Let’s deploy this code change.",
    "start": "170000",
    "end": "171602"
  },
  {
    "text": "Next, let’s return to Kinesis Data Firehose and \nchoose this function for the delivery stream.",
    "start": "174066",
    "end": "178683"
  },
  {
    "text": "For the destination, we’ll specify the OpenSearch \nServerless collection we created earlier.",
    "start": "182680",
    "end": "187172"
  },
  {
    "text": "Let’s enter an index name.",
    "start": "191519",
    "end": "193075"
  },
  {
    "text": "We have an option to modify the \nbuffer hint settings. Let’s do that.",
    "start": "199663",
    "end": "203015"
  },
  {
    "text": "Let’s specify an S3 bucket \nto back up any failed data.",
    "start": "210869",
    "end": "214000"
  },
  {
    "text": "We’ve already set up a bucket for this purpose.",
    "start": "214852",
    "end": "216861"
  },
  {
    "text": "Let’s leave the rest of the settings \nas default and create the stream.",
    "start": "219757",
    "end": "222846"
  },
  {
    "text": "While the stream is being created, \nlet’s go to the VPC Management",
    "start": "224356",
    "end": "227496"
  },
  {
    "text": "Console and create a flow log.",
    "start": "227496",
    "end": "229342"
  },
  {
    "text": "We currently have two VPCs.",
    "start": "230115",
    "end": "231933"
  },
  {
    "text": "Let’s create a flow log \nwith data from both of them.",
    "start": "232375",
    "end": "234658"
  },
  {
    "text": "Let’s specify a name for the flow log.",
    "start": "237338",
    "end": "239375"
  },
  {
    "text": "We’ll reduce the maximum \naggregation interval to one minute.",
    "start": "241283",
    "end": "244475"
  },
  {
    "text": "We’ll send the flow log data to Kinesis \nData Firehose in the same account.",
    "start": "246417",
    "end": "250119"
  },
  {
    "text": "Next, we’ll select the delivery \nstream we just created.",
    "start": "250993",
    "end": "253722"
  },
  {
    "text": "We’ll leave the other settings as \ndefault and create the flow log.",
    "start": "255857",
    "end": "258867"
  },
  {
    "text": "We can verify that the flow log has been\n created by checking one of the VPCs.",
    "start": "260457",
    "end": "264422"
  },
  {
    "text": "Here’s the flow log.",
    "start": "266829",
    "end": "267909"
  },
  {
    "text": "Let’s go back to OpenSearch Serverless to see the \ncollection we created at the beginning of this video.",
    "start": "268205",
    "end": "272543"
  },
  {
    "text": "The Endpoint section includes \nan OpenSearch Dashboards URL.",
    "start": "276961",
    "end": "280157"
  },
  {
    "text": "Let’s use it to sign in to OpenSearch.",
    "start": "280702",
    "end": "282540"
  },
  {
    "text": "We’ll sign in as the IAM user we \nspecified when creating the collection.",
    "start": "284993",
    "end": "288610"
  },
  {
    "text": "First, we need a dashboard.",
    "start": "289587",
    "end": "290941"
  },
  {
    "text": "Let’s go to Stack Management \nand import a saved dashboard file.",
    "start": "291293",
    "end": "294499"
  },
  {
    "text": "Here’s the dashboard for our flow log metrics.",
    "start": "306768",
    "end": "309127"
  },
  {
    "text": "However, the stream does not have \npermission to write data to the",
    "start": "309343",
    "end": "312192"
  },
  {
    "text": "OpenSearch Serverless collection.",
    "start": "312192",
    "end": "313788"
  },
  {
    "text": "Let’s return to the Amazon \nKinesis Data Firehose to fix that.",
    "start": "314152",
    "end": "317320"
  },
  {
    "text": "The stream is still getting created.",
    "start": "320849",
    "end": "322438"
  },
  {
    "text": "Let’s look at the configuration and find \nthe IAM role associated with this stream.",
    "start": "323029",
    "end": "326932"
  },
  {
    "text": "We’ll copy the IAM role and add it to the access \npolicy for our OpenSearch Serverless collection.",
    "start": "330202",
    "end": "334935"
  },
  {
    "text": "Let’s go back to the stream.",
    "start": "358723",
    "end": "359926"
  },
  {
    "text": "The stream is now active.",
    "start": "363140",
    "end": "364429"
  },
  {
    "text": "Let’s wait a moment for \nsome data to be generated.",
    "start": "368199",
    "end": "370612"
  },
  {
    "text": "We’ve started to receive incoming \ndata through this delivery stream.",
    "start": "373110",
    "end": "376087"
  },
  {
    "text": "Our Lambda function is processing the \ndata, which is then being delivered to the",
    "start": "379460",
    "end": "382909"
  },
  {
    "text": "OpenSearch Serverless collection.",
    "start": "382909",
    "end": "384715"
  },
  {
    "text": "There are no failed events, so nothing has \nbeen logged into the Amazon S3 bucket.",
    "start": "385600",
    "end": "389549"
  },
  {
    "text": "Now, let’s go back to OpenSearch Dashboards.",
    "start": "390355",
    "end": "392814"
  },
  {
    "text": "Let’s refresh the view.",
    "start": "393677",
    "end": "394845"
  },
  {
    "text": "We can now use this dashboard to \nmonitor the activity in our VPCs.",
    "start": "396253",
    "end": "399910"
  },
  {
    "text": "It shows overall traffic, accepted and \nrejected traffic, bytes transmitted, and",
    "start": "400207",
    "end": "404544"
  },
  {
    "text": "some charts with the top \nsources and destinations.",
    "start": "404544",
    "end": "406890"
  },
  {
    "text": "You’ve just seen how to send VPC flow \nlogs to Amazon OpenSearch Serverless",
    "start": "410391",
    "end": "414284"
  },
  {
    "text": "using Amazon Kinesis Data Firehose.",
    "start": "414284",
    "end": "416680"
  },
  {
    "text": "You can learn more about this topic in \nthe description and links for this video.",
    "start": "417713",
    "end": "420893"
  },
  {
    "text": "Thanks for watching. Now it’s your turn to try.",
    "start": "421199",
    "end": "423352"
  }
]