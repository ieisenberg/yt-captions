[
  {
    "start": "0",
    "end": "6000"
  },
  {
    "text": "In this video, you’ll learn about Amazon \nKinesis Data Analytics, an Amazon",
    "start": "45",
    "end": "3908"
  },
  {
    "text": "managed service for Apache Flink.",
    "start": "3908",
    "end": "5841"
  },
  {
    "start": "6000",
    "end": "105000"
  },
  {
    "text": "Amazon Kinesis Data Analytics helps you \ngain actionable insights from streaming data.",
    "start": "7069",
    "end": "11240"
  },
  {
    "text": "To get started, let’s look \nat how data is streamed.",
    "start": "11484",
    "end": "13772"
  },
  {
    "text": "At a very basic level, all stream \nprocessing applications include five stages.",
    "start": "14659",
    "end": "18794"
  },
  {
    "text": "The process begins with data generated \nby multiple sources, or producers.",
    "start": "19744",
    "end": "23460"
  },
  {
    "text": "These sources may include mobile \n SDKs, IoT devices, click stream",
    "start": "24000",
    "end": "27712"
  },
  {
    "text": "products, or application logs that \nproduce real-time data at high velocity.",
    "start": "27712",
    "end": "31611"
  },
  {
    "text": "Second is stream ingestion, when data \nfrom tens of thousands of data sources",
    "start": "32561",
    "end": "36357"
  },
  {
    "text": "is collected and ingested in real time.",
    "start": "36357",
    "end": "38459"
  },
  {
    "text": "This stage may include value-add \nprocesses such as authentication or throttling.",
    "start": "39337",
    "end": "43278"
  },
  {
    "text": "This layer can also filter \nout data from poor sources.",
    "start": "43842",
    "end": "46573"
  },
  {
    "text": "The third stage is stream storage.",
    "start": "47559",
    "end": "49367"
  },
  {
    "text": "Data is stored in the order received \nfor a set duration, and can be replayed",
    "start": "49861",
    "end": "53340"
  },
  {
    "text": "indefinitely during that time.",
    "start": "53340",
    "end": "54971"
  },
  {
    "text": "The fourth stage, stream processing, is when \nthe stored data is analyzed to gain insights.",
    "start": "55903",
    "end": "60664"
  },
  {
    "text": "Records are always read in the \norder in which they are received,",
    "start": "61291",
    "end": "63935"
  },
  {
    "text": "which makes stream processing different \nfrom other types of processing.",
    "start": "63935",
    "end": "66625"
  },
  {
    "text": "The final stage is to send the processed\n data to a destination, such as a data",
    "start": "67638",
    "end": "71174"
  },
  {
    "text": "lake, data warehouse, or database,",
    "start": "71174",
    "end": "73336"
  },
  {
    "text": "where it can be held longer term for \nanalysis or auditing purposes.",
    "start": "73336",
    "end": "76548"
  },
  {
    "text": "Real-time streaming use cases \nfall into three broad categories.",
    "start": "77534",
    "end": "80776"
  },
  {
    "text": "Analytics applications produce metrics\nthat help with decision making in real time.",
    "start": "81422",
    "end": "85278"
  },
  {
    "text": "An example would be a dashboard that \nconstantly refreshes its information.",
    "start": "85816",
    "end": "89095"
  },
  {
    "text": "Streaming ETL applications transform, \naggregate, and filter streaming data for",
    "start": "90143",
    "end": "94254"
  },
  {
    "text": "analysis, and then send it to a destination.",
    "start": "94254",
    "end": "96656"
  },
  {
    "text": "Stateful event processing triggers an \nexternal action when a set of conditions is met.",
    "start": "97382",
    "end": "101498"
  },
  {
    "text": "Anomaly detection is an \nexample of this use case.",
    "start": "102206",
    "end": "104883"
  },
  {
    "start": "105000",
    "end": "164000"
  },
  {
    "text": "AWS offers various streaming data services \ndesigned to handle these different use cases.",
    "start": "106128",
    "end": "110849"
  },
  {
    "text": "Our focus is Amazon Kinesis Data Analytics.",
    "start": "111288",
    "end": "114075"
  },
  {
    "text": "Amazon Kinesis Data Analytics is a fully\n managed service that enables building",
    "start": "114926",
    "end": "118679"
  },
  {
    "text": "simple or sophisticated streaming \napplications using Apache Flink.",
    "start": "118679",
    "end": "122159"
  },
  {
    "text": "It supports millisecond latencies, is \ncompletely serverless, and provides",
    "start": "122831",
    "end": "126372"
  },
  {
    "text": "automatic scaling so you pay only for \nthe resources used per application.",
    "start": "126372",
    "end": "130153"
  },
  {
    "text": "Amazon Kinesis Data Analytics \nworks with Kinesis Data Streams,",
    "start": "130826",
    "end": "134134"
  },
  {
    "text": "Amazon Managed Streaming for \nApache Kafka (Amazon MSK),",
    "start": "134134",
    "end": "137587"
  },
  {
    "text": "and Apache Kafka as sources.",
    "start": "137587",
    "end": "139361"
  },
  {
    "text": "Before discussing the service, \nlet’s answer “why Apache Flink?”",
    "start": "140221",
    "end": "143372"
  },
  {
    "text": "Apache Flink supports a \ndiverse set of use cases.",
    "start": "143723",
    "end": "146262"
  },
  {
    "text": "Flink uses a layered API approach.",
    "start": "147015",
    "end": "149088"
  },
  {
    "text": "Each API offers a different balance \n between control and ease of use.",
    "start": "149545",
    "end": "153097"
  },
  {
    "text": "Flink processing guarantees exactly-\nonce state consistency, event-time",
    "start": "153849",
    "end": "157737"
  },
  {
    "text": "processing, and late data handling.",
    "start": "157737",
    "end": "159703"
  },
  {
    "text": "It is also easily scalable and is supported \nby a vibrant open source community.",
    "start": "160339",
    "end": "164223"
  },
  {
    "start": "164000",
    "end": "208000"
  },
  {
    "text": "Thanks to that community, there are \nmore than 200 integrations from AWS",
    "start": "165181",
    "end": "168552"
  },
  {
    "text": "services or to third-party SaaS providers.",
    "start": "168552",
    "end": "171125"
  },
  {
    "text": "All Apache Flink connectors are supported \non Kinesis Data Analytics as a managed service.",
    "start": "171905",
    "end": "176459"
  },
  {
    "text": "With Kinesis Data Analytics for Apache\n Flink, you can use Flink’s native APIs to",
    "start": "177319",
    "end": "181359"
  },
  {
    "text": "build any type of application you want \nusing SQL, Java, Python, or Scala.",
    "start": "181359",
    "end": "185592"
  },
  {
    "text": "The flexible APIs allow you to focus on \nyour business logic rather than worrying",
    "start": "186130",
    "end": "189698"
  },
  {
    "text": "about the infrastructure management \nthat goes into building stream",
    "start": "189698",
    "end": "192364"
  },
  {
    "text": "processing applications.",
    "start": "192364",
    "end": "193750"
  },
  {
    "text": "You also get high performance.",
    "start": "194342",
    "end": "195789"
  },
  {
    "text": "Built on AWS services, Kinesis Data \nAnalytics offers in-memory computing",
    "start": "196273",
    "end": "200450"
  },
  {
    "text": "with extremely low latency and \ngigabytes-per-second of throughput.",
    "start": "200451",
    "end": "203861"
  },
  {
    "text": "It also provides durable application \nstate saves and strong data integrity.",
    "start": "204300",
    "end": "208263"
  },
  {
    "text": "Kinesis Data Analytics Studio provides \na simple way to get started developing,",
    "start": "209258",
    "end": "213153"
  },
  {
    "text": "debugging, and running stream \nprocessing applications.",
    "start": "213154",
    "end": "215869"
  },
  {
    "text": "Its interactive notebook interface supports \n built-in visualizations, allowing you to",
    "start": "216711",
    "end": "221013"
  },
  {
    "text": "perform ad-hoc queries to inspect your \ndata stream and view results in seconds.",
    "start": "221013",
    "end": "225217"
  },
  {
    "text": "Here’s what Kinesis Data \nAnalytics does for you:",
    "start": "226185",
    "end": "228369"
  },
  {
    "text": "It makes it possible to rapidly create, \ntest, deploy, and scale real-time data",
    "start": "228961",
    "end": "233171"
  },
  {
    "text": "streaming applications.",
    "start": "233171",
    "end": "234450"
  },
  {
    "text": "It drives best practices through design, \ndefaults, and automation, allowing you",
    "start": "235059",
    "end": "239076"
  },
  {
    "text": "to focus more on application development \nand less on infrastructure management.",
    "start": "239076",
    "end": "242812"
  },
  {
    "text": "Finally, it enables monitoring of streaming \nFlink pipelines and powerful integrations",
    "start": "243846",
    "end": "247896"
  },
  {
    "text": "with other AWS services, including \nAmazon CloudWatch, so you can keep",
    "start": "247897",
    "end": "252291"
  },
  {
    "text": "an eye on applications without having \nto deal with any other external services.",
    "start": "252291",
    "end": "256157"
  },
  {
    "text": "You can learn more about this topic in \nthe description and links for this video.",
    "start": "257619",
    "end": "260794"
  },
  {
    "text": "Thanks for watching. Now it's your turn to try.",
    "start": "260992",
    "end": "262998"
  }
]