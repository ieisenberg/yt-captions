[
  {
    "start": "0",
    "end": "158000"
  },
  {
    "text": "all right cold thanks this is so exciting we've got a packed house standing room only thanks so much for",
    "start": "0",
    "end": "5819"
  },
  {
    "text": "making time at the beginning of the conference to come and see my talk and you thought you knew ec2 so my name is",
    "start": "5819",
    "end": "12599"
  },
  {
    "text": "Ben Whaley I'm the director of security and operations accountable which is a trade finance company in San Francisco",
    "start": "12599",
    "end": "19580"
  },
  {
    "text": "just to start up so this is one of the talks in the community track of reinvent",
    "start": "19580",
    "end": "25710"
  },
  {
    "text": "where people that are involved somehow in the community user group leaders people that are contributors on reddit",
    "start": "25710",
    "end": "31289"
  },
  {
    "text": "people that author blog articles the folks from a cloud guru were here talking so this is part of the community",
    "start": "31289",
    "end": "38280"
  },
  {
    "text": "day and the fact that you're here means you're part of the community so thanks for participating we really appreciate",
    "start": "38280",
    "end": "43950"
  },
  {
    "text": "it we being everybody in the community I'm not part of Amazon so I I wanted to",
    "start": "43950",
    "end": "52890"
  },
  {
    "text": "do a talk on ec2 because it's one of these services that is beloved by everybody it's got real breadth to it as",
    "start": "52890",
    "end": "58800"
  },
  {
    "text": "opposed to you know an example is IOT or green grass there's a bunch of services",
    "start": "58800",
    "end": "65070"
  },
  {
    "text": "that are specific niches and there's gonna be you're gonna get your fill of that throughout the week but ec2 is",
    "start": "65070",
    "end": "70170"
  },
  {
    "text": "beloved by all it's not the first AWS service the first one I believe the",
    "start": "70170",
    "end": "75180"
  },
  {
    "text": "owner goes to sqs s3 was also a predecessor but it is one of the oldest and I found that I tend to get stuck in",
    "start": "75180",
    "end": "82619"
  },
  {
    "text": "a little bit of a rut with a service that I know and love and I kind of assume I'm on cruise control I know",
    "start": "82619",
    "end": "88200"
  },
  {
    "text": "everything about it until one day I was browsing the ec2 console and I realized there's a bunch of links on the left",
    "start": "88200",
    "end": "94409"
  },
  {
    "text": "side of that console where all the different areas are and I never clicked on those links and I didn't even know what that stuff did and I thought maybe",
    "start": "94409",
    "end": "99960"
  },
  {
    "text": "it's time for a little refresher course on on what ec2 is and what some of the",
    "start": "99960",
    "end": "105060"
  },
  {
    "text": "new stuff that had been introduced is so that's kind of what inspired this talk now I'm gonna put my hat out in the ring",
    "start": "105060",
    "end": "110759"
  },
  {
    "text": "for the talk that is most likely to be completely out of date by the end of the week if you know how reinvent goes it",
    "start": "110759",
    "end": "117030"
  },
  {
    "text": "tends to there's lots of announcements and ec2 is one of these services that's iterated on rapidly so some of this",
    "start": "117030",
    "end": "123030"
  },
  {
    "text": "stuff is gonna be out of date but nonetheless I hope that this session will convince you that there's a lot of",
    "start": "123030",
    "end": "128910"
  },
  {
    "text": "innovation going on in ec2 even though it's one of these older services and there's a lot to talk about",
    "start": "128910",
    "end": "134250"
  },
  {
    "text": "a lot to love so we're gonna take this a little you know light-hearted less serious let's not take our tote selves",
    "start": "134250",
    "end": "140280"
  },
  {
    "text": "so seriously the rest of the week there's gonna be plenty of time for serious business let's just have a little fun so I'm gonna kind of review",
    "start": "140280",
    "end": "146520"
  },
  {
    "text": "the state of the art with ec2 kind of where things lie today I have a quick demo to show you and I'm gonna run",
    "start": "146520",
    "end": "152850"
  },
  {
    "text": "through some community source pro tips to wrap things up so let's get to it",
    "start": "152850",
    "end": "158570"
  },
  {
    "start": "158000",
    "end": "322000"
  },
  {
    "text": "so I actually put this talk together a version of this talk for Community Day in San Francisco back in June and I",
    "start": "158570",
    "end": "165330"
  },
  {
    "text": "thought you know I'll just do a quick catch-up to make sure I didn't miss anything and this is a list of all of",
    "start": "165330",
    "end": "170430"
  },
  {
    "text": "the blog post all of the titles that I read through just since June to catch my slides up to date I had to be really",
    "start": "170430",
    "end": "176550"
  },
  {
    "text": "choosy about what to include so you can see that the pace of innovation on such an old service is still so rapid it's",
    "start": "176550",
    "end": "182880"
  },
  {
    "text": "really exciting and what better place to start than with instance types there's lots of instance types there's something",
    "start": "182880",
    "end": "189180"
  },
  {
    "text": "like 14 different total instance types now these are some of the most recent ones the c-5s announced at reinvent last",
    "start": "189180",
    "end": "196050"
  },
  {
    "text": "year but only saw the light of day in the last month or so so these are the compute optimized intel skylake",
    "start": "196050",
    "end": "201900"
  },
  {
    "text": "processors great for compute intensive workloads somebody measured 1.4 teraflops on the cc5 18 XL instances so",
    "start": "201900",
    "end": "210840"
  },
  {
    "text": "really good instances to choose for those compute heavy workloads the p3",
    "start": "210840",
    "end": "216269"
  },
  {
    "text": "instance types these are next generation GPU instances with up to 8 GPUs on a on",
    "start": "216269",
    "end": "222239"
  },
  {
    "text": "a single instance great for machine learning high performance computing use cases we have a couple of memory",
    "start": "222239",
    "end": "228420"
  },
  {
    "text": "intensive instance types the are fours the x1 is x1 is capable of 3.8 terabytes",
    "start": "228420",
    "end": "235019"
  },
  {
    "text": "and 128 virtual CPUs V CPUs so great for those enterprise workloads like si P",
    "start": "235019",
    "end": "241170"
  },
  {
    "text": "HANA in-memory databases the i3 s these are my favorite are some of my favorites",
    "start": "241170",
    "end": "247730"
  },
  {
    "text": "these have local ephemeral SSDs and if you raid them all together on the",
    "start": "247730",
    "end": "252900"
  },
  {
    "text": "highest end you're capable of up to 300,000 I ops some super strong performance these are great for time",
    "start": "252900",
    "end": "259109"
  },
  {
    "text": "series databases I like this for influx DP or for no sequel databases like Cassandra so check these out for best",
    "start": "259109",
    "end": "266220"
  },
  {
    "text": "performance that type of use case and finally last but not least the D to s kind of the data warehouse instance with up to 43",
    "start": "266220",
    "end": "273650"
  },
  {
    "text": "terabytes of local storage so kind of cut up there with instance types but also there's all sorts of EBS volume",
    "start": "273650",
    "end": "280669"
  },
  {
    "text": "variety now kind of going from most to least expensive those IO ones these are the provisioned IAP CBS volumes that you",
    "start": "280669",
    "end": "288139"
  },
  {
    "text": "can kind of get guaranteed number of I ops for your volume and the GP twos are",
    "start": "288139",
    "end": "293780"
  },
  {
    "text": "my go to my go to drive this is what I choose on a day-to-day basis they're not",
    "start": "293780",
    "end": "299539"
  },
  {
    "text": "as expenses of those i/o ones but they still have great i/o and then we've got two spinning disk types of EBS volumes",
    "start": "299539",
    "end": "306229"
  },
  {
    "text": "we can attach to ec2 instances the ST ones the SC ones these these are",
    "start": "306229",
    "end": "311330"
  },
  {
    "text": "optimized for throughput much lower IO if you don't if you're not very concerned about performance for a",
    "start": "311330",
    "end": "317270"
  },
  {
    "text": "particular workload you can choose those SC ones for the most cost-effective approach so let's review quickly some of",
    "start": "317270",
    "end": "324680"
  },
  {
    "text": "the features that have launched in the past six to twelve months that may not be directly NEC to but they impact your",
    "start": "324680",
    "end": "331160"
  },
  {
    "text": "ec2 use cases a lot and for me the big one and I think probably for the community at large is ipv6 so for a long",
    "start": "331160",
    "end": "337699"
  },
  {
    "text": "time the community was clamoring for ipv6 support and now we have it it's not complete in the platform it's not",
    "start": "337699",
    "end": "345020"
  },
  {
    "text": "ubiquitous but there is support in a lot of places we have it in V pcs we can attach ipv6 addresses to ec2 instances",
    "start": "345020",
    "end": "351889"
  },
  {
    "text": "so if you have a use case where you need to integrate with an ipv6 network or if you're working with users and you need",
    "start": "351889",
    "end": "358130"
  },
  {
    "text": "to reach out to to their ipv6 machines maybe you're working in emerging markets like I do if countable this is an",
    "start": "358130",
    "end": "364280"
  },
  {
    "text": "important feature for you so just sort of as a best practice I enable all new V pcs I just enable ipv6 it can't really",
    "start": "364280",
    "end": "371120"
  },
  {
    "text": "hurt supported by security groups kind of has everything you need this one was",
    "start": "371120",
    "end": "376520"
  },
  {
    "text": "really a surprise so if you have any history with ec2 you know that it's been based on the Xen hypervisor and recently",
    "start": "376520",
    "end": "384710"
  },
  {
    "text": "with the c5 instance announcement they announced that the KVM has replaced Xen",
    "start": "384710",
    "end": "389930"
  },
  {
    "text": "for all new instance types so I was pretty caught off guard by that and it does make me wonder what the future of",
    "start": "389930",
    "end": "395210"
  },
  {
    "text": "the Zen project is since KVM of course is built into the Linux kernel I kind of wonder if Sens time is limited",
    "start": "395210",
    "end": "402070"
  },
  {
    "text": "AWS was clearly the largest user of that hypervisor and interestingly they have",
    "start": "402070",
    "end": "407920"
  },
  {
    "text": "since removed the KVM mentioned from the c5 article so if you go read the c5",
    "start": "407920",
    "end": "412930"
  },
  {
    "text": "announcement you won't see a mention of this now so I'm not sure why they removed it but what is clear is that as users of ec2 this doesn't impact us our",
    "start": "412930",
    "end": "420010"
  },
  {
    "text": "interface our use case of ec2 isn't going to change but under the hood that's what's happening and I think",
    "start": "420010",
    "end": "426460"
  },
  {
    "text": "that's interesting the elastic network adapter this isn't brand new I think",
    "start": "426460",
    "end": "431650"
  },
  {
    "text": "it's been around for at least 18 months or something but it is finally starting to get an uptick because all of the new",
    "start": "431650",
    "end": "436810"
  },
  {
    "text": "instance types support it capable of up to 25 gigabit so super good for moving",
    "start": "436810",
    "end": "441820"
  },
  {
    "text": "data around inside an AWS network make sure that you check the documentation of",
    "start": "441820",
    "end": "447220"
  },
  {
    "text": "course to make sure it's compatible with your instance type I normally steer",
    "start": "447220",
    "end": "452260"
  },
  {
    "text": "clear of cost issues I leave that to Corey Quinn and last week in AWS if you're not familiar you should check",
    "start": "452260",
    "end": "458080"
  },
  {
    "text": "that out last week in AWS comm I think it is it's a weekly feature release kind",
    "start": "458080",
    "end": "463450"
  },
  {
    "text": "of a blog he's really good at cop cost optimization he knows all about it but this one's just too good not to mention because now after 60 seconds your ec2",
    "start": "463450",
    "end": "471940"
  },
  {
    "text": "instance is billed per second that applies to all ec2 instances the spot market on-demand instances reserved",
    "start": "471940",
    "end": "478120"
  },
  {
    "text": "instances so you can really achieve achieve some nice cost savings by going with per second by this per second",
    "start": "478120",
    "end": "484330"
  },
  {
    "text": "billing change and you don't even have to do anything one optimization you could make is to really aggressively tune your auto",
    "start": "484330",
    "end": "490930"
  },
  {
    "text": "scaling groups so they you know they're more aggressive about starting and stopping instances somebody reported",
    "start": "490930",
    "end": "496270"
  },
  {
    "text": "that they save 30 percent thanks to the per second billing feature so that's awesome elastic GPUs were made generally",
    "start": "496270",
    "end": "504340"
  },
  {
    "text": "available sometime in October November first announced I think back in May ish so these lets you attach GPUs to any",
    "start": "504340",
    "end": "511480"
  },
  {
    "text": "type of or most types of ec2 instances so you get the flexibility of choosing the type of ec2 instance you want and",
    "start": "511480",
    "end": "518349"
  },
  {
    "text": "still attaching GPU for those kinds of workloads that need it now these are not going to be as performant as the p3",
    "start": "518349",
    "end": "525220"
  },
  {
    "text": "instances with the locally attached GPUs like I said you can get up to eight local GPUs on those and they also share",
    "start": "525220",
    "end": "531370"
  },
  {
    "text": "the network bandwidth much like an EBS volume does with your instance so kind of be aware with that if you're playing",
    "start": "531370",
    "end": "537190"
  },
  {
    "text": "with these but it is pretty cool to have an elastic you know network-attached GPU",
    "start": "537190",
    "end": "542700"
  },
  {
    "text": "this is a small feature but I thought it was worth mentioning if you can imagine",
    "start": "542700",
    "end": "547720"
  },
  {
    "text": "how you normally set up auto scaling groups you kind of need to scaling policies you need something to help you",
    "start": "547720",
    "end": "553300"
  },
  {
    "text": "scale out and something to help you scale in so imagine it's CPU usage you might add an instance at 80 percent CPU",
    "start": "553300",
    "end": "559330"
  },
  {
    "text": "you might remove an instance at 30 percent CPU usage to achieve some cost savings well now you can just set a",
    "start": "559330",
    "end": "564970"
  },
  {
    "text": "target I want to I want to have a sixty percent normal CPU usage and it will automatically adjust the number of",
    "start": "564970",
    "end": "571840"
  },
  {
    "text": "instances to to make that happen so kind of a simple automation fix last but not",
    "start": "571840",
    "end": "578260"
  },
  {
    "text": "least lots of new regions in 2016 AWS added five new regions Ohio Canada",
    "start": "578260",
    "end": "583360"
  },
  {
    "text": "London Mumbai and Seoul and each of those has at least two data centers so I just like to kind of ponder what is the",
    "start": "583360",
    "end": "589810"
  },
  {
    "text": "logistical effort that it takes to bring online a single data center let alone at least ten I think that's a real",
    "start": "589810",
    "end": "594910"
  },
  {
    "text": "achievement and there's a lot more on the way there's China Paris colm Hong Kong and Bahrain have been announced on",
    "start": "594910",
    "end": "600520"
  },
  {
    "text": "my personal wish list is a region in Africa anywhere in Africa will do I'll take Kenya please I would also love some",
    "start": "600520",
    "end": "606970"
  },
  {
    "text": "cloud front edge locations in Kenya there are none if you look at the region of the global map of AWS presence",
    "start": "606970",
    "end": "612970"
  },
  {
    "text": "there's nothing at all in Africa so as a person that works in the African market",
    "start": "612970",
    "end": "618550"
  },
  {
    "text": "frequently if there's anybody that's on the data center team out there I would like to see that so let's shift our",
    "start": "618550",
    "end": "625420"
  },
  {
    "start": "623000",
    "end": "685000"
  },
  {
    "text": "attention for a moment to cloud watch which is one of these services that is so interlinked with ec2 that I couldn't",
    "start": "625420",
    "end": "632230"
  },
  {
    "text": "I couldn't pass it by looks like we're getting a little of the site to cut off there sorry about that so there's a",
    "start": "632230",
    "end": "639040"
  },
  {
    "text": "bunch of areas of cloud watch kind of worth talking about the big one the thing that's seeing the most attention",
    "start": "639040",
    "end": "644140"
  },
  {
    "text": "recently is event handling so it serves as the glue between services you can",
    "start": "644140",
    "end": "649990"
  },
  {
    "text": "event can happen in one service and thanks to cloud watch events you can tie it and link it up to some other services",
    "start": "649990",
    "end": "655810"
  },
  {
    "text": "and I'm going to give an example about a minute metrics of course this is one of the central features of cloud watch a",
    "start": "655810",
    "end": "661600"
  },
  {
    "text": "place for you to ship up information about your ec2 instances and all of your other AWS services",
    "start": "661600",
    "end": "667059"
  },
  {
    "text": "and gather kind of real-time indications as to how your applications and services are performing scheduled tasks gives you",
    "start": "667059",
    "end": "674319"
  },
  {
    "text": "the ability to run jobs on a schedule a long missing feature and finally logs this is I think the first release of",
    "start": "674319",
    "end": "681249"
  },
  {
    "text": "cloud watch was logs it's a place to centralize all your logs so let's take a brief deeper look starting with",
    "start": "681249",
    "end": "686949"
  },
  {
    "start": "685000",
    "end": "845000"
  },
  {
    "text": "scheduled events because this is my favorite feature it gives you this distributed cron like ability to execute",
    "start": "686949",
    "end": "693609"
  },
  {
    "text": "an event some kind of task on a schedule and for a long time this was so such a",
    "start": "693609",
    "end": "699069"
  },
  {
    "text": "missing part of AWS and there was a stack overflow question add hundreds of buff votes and the solutions to achieve",
    "start": "699069",
    "end": "705909"
  },
  {
    "text": "a cron like experience in a distributed fashion were varied and sorted and it was very complicated you either had one",
    "start": "705909",
    "end": "712359"
  },
  {
    "text": "ec2 instance and then you had a single point of failure for all of your cron jobs to run on or you had to implement",
    "start": "712359",
    "end": "717729"
  },
  {
    "text": "some kind of complex software with locking to achieve a distributed cron to have some fault tolerance well now",
    "start": "717729",
    "end": "722769"
  },
  {
    "text": "thanks to the scheduled events you can give it a cron expression you can tell it to execute a lambda function or do",
    "start": "722769",
    "end": "728259"
  },
  {
    "text": "something else and it will do it on your schedule so that's been a super nice feature one of my favorites now we can",
    "start": "728259",
    "end": "733629"
  },
  {
    "text": "have cloud watch events interact with ec2 in all sorts of different ways a few of those one is the instance change",
    "start": "733629",
    "end": "739599"
  },
  {
    "text": "instance teak changes so when an ec2 instance goes from pending to running from running to stopping stopping to",
    "start": "739599",
    "end": "746559"
  },
  {
    "text": "terminated we can get notified and for the time each one of those things takes place and we can take some action in",
    "start": "746559",
    "end": "751689"
  },
  {
    "text": "response to that maybe we need our instance to be initialized in configuration management system or maybe",
    "start": "751689",
    "end": "757419"
  },
  {
    "text": "we mean to need to deep revision our instance somehow or perform some clean app cleanup act when the instance goes",
    "start": "757419",
    "end": "763209"
  },
  {
    "text": "away so we can have cloud watch events too to make that happen for us Systems Manager the ec2 Systems Manager is",
    "start": "763209",
    "end": "770019"
  },
  {
    "text": "another service I'm going to talk about in a minute we can tie in with all of the systems manager events when a run",
    "start": "770019",
    "end": "775719"
  },
  {
    "text": "command executes when we change parameters in the parameter store maintenance windows if you have an RDS",
    "start": "775719",
    "end": "781179"
  },
  {
    "text": "instance or an ec2 instance that's scheduled for maintenance we can be notified when that's going to happen and then we can cause some event to occur to",
    "start": "781179",
    "end": "788139"
  },
  {
    "text": "adjust for that maybe we need to expect lower performance maybe we need to launch some more capacity in response to",
    "start": "788139",
    "end": "793899"
  },
  {
    "text": "that we can subscribe to the ECS event stream so when tasks start and stop on",
    "start": "793899",
    "end": "799659"
  },
  {
    "text": "our ACS clusters things going on we can tune into that and adjust as needed same thing goes for EBS snapshots when a new one is created",
    "start": "799659",
    "end": "807220"
  },
  {
    "text": "when an encryption encryption or decryption event happens we can be notified about that and finally this",
    "start": "807220",
    "end": "812860"
  },
  {
    "text": "cross account event delivery gives us the ability to really expand our federated account solution it's which I",
    "start": "812860",
    "end": "819670"
  },
  {
    "text": "see more and more commonly where we have a central account and a bunch of sub accounts kind of linked together and",
    "start": "819670",
    "end": "825610"
  },
  {
    "text": "maybe everybody's using that central account for management and well now it can collect events from all of the other",
    "start": "825610",
    "end": "830950"
  },
  {
    "text": "accounts so in combination this makes for this really nice pipeline that it to me is one of the primary the underlying",
    "start": "830950",
    "end": "838089"
  },
  {
    "text": "features of AWS that's so critical is the tie-in integration between services and cloud watch event cloud or watch",
    "start": "838089",
    "end": "843910"
  },
  {
    "text": "events really brings that to life the other side of course is cloud watched telemetry so this is our logs and",
    "start": "843910",
    "end": "849220"
  },
  {
    "start": "845000",
    "end": "1033000"
  },
  {
    "text": "metrics from the longest time we had basic monitoring which gave us five minutes not nearly good enough and one",
    "start": "849220",
    "end": "856510"
  },
  {
    "text": "minute detailed monitoring for a higher cost well recently they've launched custom metrics with a high resolution",
    "start": "856510",
    "end": "862029"
  },
  {
    "text": "one second for three hours and corresponding with that high resolution alarms so any operations person will",
    "start": "862029",
    "end": "868870"
  },
  {
    "text": "tell you that 60 seconds not good enough resolution we really need to be notified kind of more frequently and know exactly",
    "start": "868870",
    "end": "875350"
  },
  {
    "text": "what's going on with applications and services running in our environment and thanks to this we're able to do that",
    "start": "875350",
    "end": "881430"
  },
  {
    "text": "collect D if you're not familiar is a daemon that runs it's I think it's just for Linux it's probably for some other",
    "start": "881430",
    "end": "887140"
  },
  {
    "text": "UNIX is - it collects all sorts of system metrics from your your instances so normally you'd use it for things like",
    "start": "887140",
    "end": "893680"
  },
  {
    "text": "CPU load memory utilization you know the state of TCP and UDP network sockets you",
    "start": "893680",
    "end": "899470"
  },
  {
    "text": "can collect any kind of data you want because you can execute an arbitrary script and as long as it writes out in the right format you're good to go",
    "start": "899470",
    "end": "905140"
  },
  {
    "text": "there's a built in cloud watch plugin for collecti so you can use collecti to ship data right into cloud watch I",
    "start": "905140",
    "end": "910990"
  },
  {
    "text": "really like that the dashboard features of cloud watch have gotten a lot better",
    "start": "910990",
    "end": "916360"
  },
  {
    "text": "there's a graphical interface to make dashboards out of the metrics that you have in cloud watch metrics you can use",
    "start": "916360",
    "end": "922570"
  },
  {
    "text": "a CLI to to manage your dashboards so this is a nice tool I think graph on ax",
    "start": "922570",
    "end": "928540"
  },
  {
    "text": "is still for me is still the winner probably for a lot of people but for simple needs I think you could pretty",
    "start": "928540",
    "end": "933820"
  },
  {
    "text": "much get away with just cloud watch dashboards which is a far cry from where it was a few years ago this was important for any metric",
    "start": "933820",
    "end": "940900"
  },
  {
    "text": "nerd out there you know that cloud watch for the longest time had only average so if you you know if you have a set of",
    "start": "940900",
    "end": "947260"
  },
  {
    "text": "users who are having a really great experience using your your application they have super fast performance but",
    "start": "947260",
    "end": "953590"
  },
  {
    "text": "then you have a whole chunk of users that are having a really bad time it's going really slow average doesn't expose",
    "start": "953590",
    "end": "958960"
  },
  {
    "text": "that to you right you wouldn't know that that's occurring so the introduction of these percentile statistics and in",
    "start": "958960",
    "end": "964180"
  },
  {
    "text": "particular the p99 statistic this gives you an idea of what most people are experiencing so ignore average and pay",
    "start": "964180",
    "end": "970990"
  },
  {
    "text": "attention to this p99 that was an important introduction logs is this the",
    "start": "970990",
    "end": "976510"
  },
  {
    "text": "central place to collect collect logs throughout throughout your AWS applications you know it integrates well",
    "start": "976510",
    "end": "982480"
  },
  {
    "text": "with with lambda functions with Beanstalk you can write it in easily into your own applications that run on",
    "start": "982480",
    "end": "988780"
  },
  {
    "text": "ec2 and thanks to metric filters you can actually parse the logs as they arrive and take some action on them maybe you",
    "start": "988780",
    "end": "996580"
  },
  {
    "text": "want to know if your web servers are seeing a spike in 500 status code responses or 400 status code responses",
    "start": "996580",
    "end": "1003300"
  },
  {
    "text": "you can parse out the information out of it and set up cloud watch alarms to alarm to alert you to that what I do",
    "start": "1003300",
    "end": "1009720"
  },
  {
    "text": "actually is send all my logs into sumo logic pick your favorite service it doesn't really matter what it is but",
    "start": "1009720",
    "end": "1015630"
  },
  {
    "text": "sumo logic provides a lambda function that will pick up cloud watch log groups and ship them over to sumo logic so",
    "start": "1015630",
    "end": "1021720"
  },
  {
    "text": "there's nothing for me to manage I don't have to install an agent I don't have to do any kind of custom configuration it",
    "start": "1021720",
    "end": "1027300"
  },
  {
    "text": "just works because of this kind of glue feature like I've been alluding to throughout shifting shifting focus again",
    "start": "1027300",
    "end": "1035400"
  },
  {
    "start": "1033000",
    "end": "1283000"
  },
  {
    "text": "to the ec2 container service I had the opportunity to look at this really early on in its life I think I was in the beta",
    "start": "1035400",
    "end": "1041760"
  },
  {
    "text": "it was around November December of 2014 and at the time container service with",
    "start": "1041760",
    "end": "1046829"
  },
  {
    "text": "just a set of primitives and it's come a really long way and so I want to touch on some of the most important feature",
    "start": "1046829",
    "end": "1053040"
  },
  {
    "text": "announcements that have happened in the past year so with the container service the first thing that came out this",
    "start": "1053040",
    "end": "1058350"
  },
  {
    "text": "wasn't actually present at the time that I was evaluating was the container registry so this provides you with a docker image registry hosted in AWS",
    "start": "1058350",
    "end": "1066000"
  },
  {
    "text": "integrated with I am there that word again integration it's all about the integrations right so this",
    "start": "1066000",
    "end": "1071400"
  },
  {
    "text": "really is the best docker registry to use on AWS otherwise you're going to be running it yourself this is fully",
    "start": "1071400",
    "end": "1076950"
  },
  {
    "text": "hands-off fully managed definitely recommend it whether using ECS or not",
    "start": "1076950",
    "end": "1082160"
  },
  {
    "text": "this was a recent adesh addition to ECS so a container task definition is a JSON",
    "start": "1082160",
    "end": "1088740"
  },
  {
    "text": "description of what you want a nice es task to look like it says here's the image I want to run here's how much CPU",
    "start": "1088740",
    "end": "1095280"
  },
  {
    "text": "and memory it needs here's the port's that it listens on and other like data about your container and so now we also",
    "start": "1095280",
    "end": "1100740"
  },
  {
    "text": "have the ability to pass in device flags so I could do something like attach an EBS volume to the host and then past",
    "start": "1100740",
    "end": "1107880"
  },
  {
    "text": "that EBS volume through to the container using the device flag and it also gives you the ability to execute a custom init",
    "start": "1107880",
    "end": "1113820"
  },
  {
    "text": "process in your container previously you would run into a situation where your process may be exited or got into some",
    "start": "1113820",
    "end": "1120090"
  },
  {
    "text": "kind of a zombie State and was still taking up CPU cycles from your cluster it wasn't dying properly what with if",
    "start": "1120090",
    "end": "1126480"
  },
  {
    "text": "you execute instead a custom init process it's gonna be sure that it's killed off and kind of save you some capacity there so these little",
    "start": "1126480",
    "end": "1133500"
  },
  {
    "text": "improvements make a big difference too we just talked about cloud watch metrics and it's fully integrated with VCS you",
    "start": "1133500",
    "end": "1140040"
  },
  {
    "text": "get your CPU and memory memory utilization across the cluster that way this was important for anybody in the",
    "start": "1140040",
    "end": "1146250"
  },
  {
    "text": "room interested in security for the longest time your ECS tasks shared the iam role with the host right so this",
    "start": "1146250",
    "end": "1153330"
  },
  {
    "text": "meant that any tasks you had running on a container container node was sharing all the permissions of the hosts so they",
    "start": "1153330",
    "end": "1159960"
  },
  {
    "text": "had to be overly permissive well now we can assign an iam real specific to a task giving it truly lease privilege",
    "start": "1159960",
    "end": "1165840"
  },
  {
    "text": "permissions so that's been a big security win I don't know if you remember github.com / blocks this was",
    "start": "1165840",
    "end": "1172980"
  },
  {
    "text": "announced last year at reinvents it is a open source scheduler for ECS you could",
    "start": "1172980",
    "end": "1178590"
  },
  {
    "text": "write your own custom scheduler using the hooks and libraries they provide for the first eight or nine months of the",
    "start": "1178590",
    "end": "1184080"
  },
  {
    "text": "project it kind of looked dead to me it wasn't seeing much activity but in the past two to three months it's really picked up there's a road map with",
    "start": "1184080",
    "end": "1191130"
  },
  {
    "text": "milestones it seems like they're headed towards a 1.0 release so you can see an example of how the open source scheduler",
    "start": "1191130",
    "end": "1196530"
  },
  {
    "text": "works and I wouldn't be surprised if we see some announcement just be just given kind of the timing on all",
    "start": "1196530",
    "end": "1201980"
  },
  {
    "text": "this activity some awesome third-party tooling has emerged con Vox is a tool",
    "start": "1201980",
    "end": "1207710"
  },
  {
    "text": "Heroku like pass tool for ECS that makes it much easier to interact with ECS services Empire kind of has similar",
    "start": "1207710",
    "end": "1215240"
  },
  {
    "text": "goals it's written by the folks that reminds if you're not familiar with reminds tooling you should check it out",
    "start": "1215240",
    "end": "1220460"
  },
  {
    "text": "they have some really great open source stuff I rely on their tool stacker all the time and so it's been great to see",
    "start": "1220460",
    "end": "1227030"
  },
  {
    "text": "some third-party tooling there integration with application load",
    "start": "1227030",
    "end": "1232309"
  },
  {
    "text": "balancer is deep and great actually so when you launch a task you can be sure that it's going to wire up to the right",
    "start": "1232309",
    "end": "1238400"
  },
  {
    "text": "port with the load balancer load balancer is going to be doing health checks no custom routing no custom",
    "start": "1238400",
    "end": "1244400"
  },
  {
    "text": "wiring required fully hands-off I've been a big fan of the load balancer I'd been waiting for a bunch of those",
    "start": "1244400",
    "end": "1249710"
  },
  {
    "text": "features for a long time thanks to those cloud watch events we can the scheduled events we can run",
    "start": "1249710",
    "end": "1255799"
  },
  {
    "text": "things on a schedule on our ECS cluster run a task like a batch job if we need to and we can also execute tasks in",
    "start": "1255799",
    "end": "1262789"
  },
  {
    "text": "response to some other event so it's once again reiterating this pipeline this integration with services ECS tasks",
    "start": "1262789",
    "end": "1269210"
  },
  {
    "text": "can run kind of on an ad-hoc basis in response to other events happening so the container service is really showing",
    "start": "1269210",
    "end": "1276020"
  },
  {
    "text": "some maturity and I think it's probably the fastest and easiest way to get started with container orchestration out",
    "start": "1276020",
    "end": "1281510"
  },
  {
    "text": "there let's move on to the Systems Manager which has had a lot of attention",
    "start": "1281510",
    "end": "1287059"
  },
  {
    "start": "1283000",
    "end": "1405000"
  },
  {
    "text": "recently I'd say that it gives super powers for ec2 instances and for your on-premises systems if you work in kind",
    "start": "1287059",
    "end": "1293510"
  },
  {
    "text": "of a hybrid environment so let's review some of the main features of the Systems Manager remote command execution using",
    "start": "1293510",
    "end": "1300350"
  },
  {
    "text": "run commands so the idea is that you can send you can tell the systems manager to run a command on your instances and it",
    "start": "1300350",
    "end": "1307429"
  },
  {
    "text": "will go and do that on the instances that you specify using a filter like based on tags or something and then",
    "start": "1307429",
    "end": "1313039"
  },
  {
    "text": "collect the output and show you what the output was so it lets you run commands on your boxes without logging into your boxes something we've all needed for a",
    "start": "1313039",
    "end": "1319640"
  },
  {
    "text": "long time the parameter store is a place to source store secrets and configuration data in a hierarchical",
    "start": "1319640",
    "end": "1326690"
  },
  {
    "text": "format so you can think of it similar to something like hash Eclipse console or",
    "start": "1326690",
    "end": "1331850"
  },
  {
    "text": "Etsy D although you know the the comparison is not perfect there but it is it does fill a nice gap and it",
    "start": "1331850",
    "end": "1338390"
  },
  {
    "text": "kind of closes the loop because today we can store a secret in the parameter store we can generate say we need a",
    "start": "1338390",
    "end": "1344000"
  },
  {
    "text": "password we can generate a password in memory store it in the parameters store in encrypted format downloaded it on our",
    "start": "1344000",
    "end": "1350090"
  },
  {
    "text": "instance as needed at boot and it never needs to live anywhere unencrypted you don't even need to know what it is and I",
    "start": "1350090",
    "end": "1355700"
  },
  {
    "text": "think that's really nice because this hasn't been a vulnerability for a long time having credentials in plaintext and",
    "start": "1355700",
    "end": "1360950"
  },
  {
    "text": "we're finally at a place where everybody agrees maybe that's not such a good idea we can run periodic tasks I'm gonna",
    "start": "1360950",
    "end": "1368000"
  },
  {
    "text": "breeze through these last couple ones periodic tasks with the state manager and with maintenance windows so you can",
    "start": "1368000",
    "end": "1374510"
  },
  {
    "text": "set up automation workflows for setting up new nodes for example you've got a new node booting up you can execute a",
    "start": "1374510",
    "end": "1381230"
  },
  {
    "text": "series of steps to join that node and kind of assimilate it into your environment and then finally there's",
    "start": "1381230",
    "end": "1386960"
  },
  {
    "text": "some compliance related features of the Systems Manager you can set up an inventory of your ec2 fleet and you can",
    "start": "1386960",
    "end": "1393140"
  },
  {
    "text": "collect patch status about your instances so you know kind of what kernel revision they're at this feature",
    "start": "1393140",
    "end": "1399110"
  },
  {
    "text": "for a long time was Windows only I'm actually not sure whether that's changed or not yet a couple of the key benefits",
    "start": "1399110",
    "end": "1407090"
  },
  {
    "start": "1405000",
    "end": "1511000"
  },
  {
    "text": "that you get from it a big one is that all the actions are recorded in cloud trail which means that you have an",
    "start": "1407090",
    "end": "1413090"
  },
  {
    "text": "immutable audit log of everything that happens so somebody execute a command using the run command you know exactly",
    "start": "1413090",
    "end": "1419870"
  },
  {
    "text": "when it was executed who executed it you can prove to an auditor or a compliance",
    "start": "1419870",
    "end": "1424880"
  },
  {
    "text": "officer that you have a nice trail so that's an that's important especially for enterprises you can get triggers too",
    "start": "1424880",
    "end": "1431450"
  },
  {
    "text": "with cloud front for Systems Manager events and you can also store command history and output in s3 so what this",
    "start": "1431450",
    "end": "1438529"
  },
  {
    "text": "means is you can execute in the response to something else happening in your AWS account you can execute an SNS",
    "start": "1438529",
    "end": "1445669"
  },
  {
    "text": "notification or a lambda function and when you run a run command the command history will be stored in s3 you can use",
    "start": "1445669",
    "end": "1452600"
  },
  {
    "text": "something like I am like Athena to analyze that output and just sort of",
    "start": "1452600",
    "end": "1457970"
  },
  {
    "text": "keep track of what your instances are up to importantly we now have fine-grained control over what people can run so",
    "start": "1457970",
    "end": "1464840"
  },
  {
    "text": "traditionally if you give people s each access it's kind of this unfettered you basically if I give somebody even",
    "start": "1464840",
    "end": "1471289"
  },
  {
    "text": "non root access I still assume that they have root right because the local privilege escalation exploits are really",
    "start": "1471289",
    "end": "1477799"
  },
  {
    "text": "common so you can assume if they have a shell probably they can elevate their privileges but not so with run commands",
    "start": "1477799",
    "end": "1483049"
  },
  {
    "text": "you can give somebody access to just a specific command you know when they ran it you know what the output was you can",
    "start": "1483049",
    "end": "1488989"
  },
  {
    "text": "control one group that has administrative access one group that has you know just permissions to restart a",
    "start": "1488989",
    "end": "1494719"
  },
  {
    "text": "service or something so set up some run commands and then specify the access control around that and then there's",
    "start": "1494719",
    "end": "1501559"
  },
  {
    "text": "integration with AWS config service more compliance related stuff so you can track changes to your instances over",
    "start": "1501559",
    "end": "1507559"
  },
  {
    "text": "time you can see how they have the states changing SSM works off the",
    "start": "1507559",
    "end": "1513829"
  },
  {
    "start": "1511000",
    "end": "1548000"
  },
  {
    "text": "concept of an agent being installed on your boxes it's an open source executable works in Linux and Windows",
    "start": "1513829",
    "end": "1518869"
  },
  {
    "text": "and importantly it works on your on-premises systems just as well as in the cloud so you can give an I am role",
    "start": "1518869",
    "end": "1525169"
  },
  {
    "text": "you can assume a role for the on-premises instances and all it needs is permission to X to interface with the",
    "start": "1525169",
    "end": "1530749"
  },
  {
    "text": "SSM API you can install it at boot you could install it at runtime you can you",
    "start": "1530749",
    "end": "1535999"
  },
  {
    "text": "could bake it into your image it doesn't matter how it gets there once it's running it just pulls the API for",
    "start": "1535999",
    "end": "1541369"
  },
  {
    "text": "commands and if it sees something it needs to do it executes and reports back home so it's really a pretty simple",
    "start": "1541369",
    "end": "1547729"
  },
  {
    "text": "model this is an example of what a run command document looks like if you're",
    "start": "1547729",
    "end": "1553759"
  },
  {
    "start": "1548000",
    "end": "1589000"
  },
  {
    "text": "familiar with cloud formation you know that you design a template you submit the template and then you tell cloud formation start up this stack using this",
    "start": "1553759",
    "end": "1560659"
  },
  {
    "text": "template and these parameters and this is exactly the same idea so to chunks to look at here the bottom section is",
    "start": "1560659",
    "end": "1565999"
  },
  {
    "text": "really really the meat of it it's saying hey this is a document to run a shell script and it passes one parameter of",
    "start": "1565999",
    "end": "1573289"
  },
  {
    "text": "the commands that you want to run so what you would do is create this document in a JSON file tell the SSM",
    "start": "1573289",
    "end": "1579289"
  },
  {
    "text": "that this is a document that you want and then you can invoke it and pass the parameters you want to do a directory",
    "start": "1579289",
    "end": "1585079"
  },
  {
    "text": "listing at a user account we start a service you just kind of pass it and invoke it and now I want to switch to a",
    "start": "1585079",
    "end": "1591709"
  },
  {
    "text": "quick demo so I got really excited about the parameters store you probably could tell like I'm excited to have this",
    "start": "1591709",
    "end": "1598129"
  },
  {
    "text": "closed-loop thing going on where I no longer have to have plaintext credentials but I found the interface to be a little clunky it's",
    "start": "1598129",
    "end": "1605309"
  },
  {
    "text": "fine you know it gets the job done but it's a bit verbose and I found some bugs in the ec2 console version of the",
    "start": "1605309",
    "end": "1611970"
  },
  {
    "text": "parameter store and so I started kind of fooling around with with this really simple shell it's nothing too crazy but",
    "start": "1611970",
    "end": "1618750"
  },
  {
    "text": "I want to do a quick demo before I jump into that I just want to show of hands from folks who knows the game of Thrones",
    "start": "1618750",
    "end": "1624320"
  },
  {
    "text": "to it to some extent who's familiar with it a good amount probably about half the",
    "start": "1624320",
    "end": "1630330"
  },
  {
    "text": "audience and and another 30% who didn't raise their hand probably that's totally fine so yes so you're about to get a",
    "start": "1630330",
    "end": "1638190"
  },
  {
    "text": "dose of Game of Thrones whether you like it or not for those that are familiar hopefully this is mildly any entertaining and for those that it's not",
    "start": "1638190",
    "end": "1645059"
  },
  {
    "text": "familiar sorry about that oh I have to",
    "start": "1645059",
    "end": "1651210"
  },
  {
    "text": "push a button let's see this button is that pretty visible to folks in the back",
    "start": "1651210",
    "end": "1658490"
  },
  {
    "start": "1654000",
    "end": "1880000"
  },
  {
    "text": "okay cool so so I can just open my shell and this drops me into the root of the",
    "start": "1658490",
    "end": "1666179"
  },
  {
    "text": "parameter store so you just get a slash indicating that I'm at the root and I'm",
    "start": "1666179",
    "end": "1671760"
  },
  {
    "text": "gonna start with just a long recursive listing of all the parameters using familiar Linux UNIX like commands I can",
    "start": "1671760",
    "end": "1678570"
  },
  {
    "text": "see a recursive listing and what I have here is the noble houses of Game of Thrones in parameter format and I'm",
    "start": "1678570",
    "end": "1685080"
  },
  {
    "text": "gonna explain what this means a little bit here in a minute it's kind of separated out but I can you know I can get a parameter like I can",
    "start": "1685080",
    "end": "1691289"
  },
  {
    "text": "I'm gonna go ahead and CD into the stark family the nobility of the stark family",
    "start": "1691289",
    "end": "1696299"
  },
  {
    "text": "and I can I'll clear the screen I can",
    "start": "1696299",
    "end": "1701340"
  },
  {
    "text": "see Eddard and Catelyn Stark and all of their children I can get Sansa Stark I",
    "start": "1701340",
    "end": "1707220"
  },
  {
    "text": "can see what her her value is I can see the history because parameter store keeps track of versions of a parameter",
    "start": "1707220",
    "end": "1713640"
  },
  {
    "text": "so Sansa Stark is just a parameter separated by slashes so I can see I was",
    "start": "1713640",
    "end": "1718890"
  },
  {
    "text": "the last one to modify her I know that she gets married to Tyrion at some point in the show so I can copy Sansa Stark to",
    "start": "1718890",
    "end": "1726690"
  },
  {
    "text": "house lannister noble and now she's she's present there",
    "start": "1726690",
    "end": "1732940"
  },
  {
    "text": "along with all the other lannister family and then that doesn't really work out between the two of them so she gets",
    "start": "1732940",
    "end": "1738880"
  },
  {
    "text": "removed and I can play with secrets too",
    "start": "1738880",
    "end": "1744130"
  },
  {
    "text": "so you can put new values like I could do put name is secret type is secure",
    "start": "1744130",
    "end": "1749740"
  },
  {
    "text": "string which means it's also case insensitive but I have that out of habit",
    "start": "1749740",
    "end": "1755170"
  },
  {
    "text": "and I can say like my my secrets and so",
    "start": "1755170",
    "end": "1760270"
  },
  {
    "text": "now if I get slash secret all I see is an encoded encrypted value if I turn on",
    "start": "1760270",
    "end": "1765730"
  },
  {
    "text": "decryption and I get it again now I can see that it's decrypted and of course I can remove it and I can do things like",
    "start": "1765730",
    "end": "1773080"
  },
  {
    "text": "recursive operations which as far as I know is not possible using other interfaces to this so I can do House",
    "start": "1773080",
    "end": "1781000"
  },
  {
    "text": "Stark to House Lannister and it will recursively copy all of the Starks into",
    "start": "1781000",
    "end": "1787600"
  },
  {
    "text": "the Lannisters and Esther Stark no",
    "start": "1787600",
    "end": "1793510"
  },
  {
    "text": "command completion yet unfortunately but that doesn't make any sense so I can recursively remove them - Lannister",
    "start": "1793510",
    "end": "1800980"
  },
  {
    "text": "start and then I can do in line commands",
    "start": "1800980",
    "end": "1806110"
  },
  {
    "text": "I can say pssh get I guess I'll type it out again Stark",
    "start": "1806110",
    "end": "1812460"
  },
  {
    "text": "no bow sounds so stark or I can type it",
    "start": "1812460",
    "end": "1819640"
  },
  {
    "text": "in a standard input so nothing groundbreaking there right",
    "start": "1819640",
    "end": "1825790"
  },
  {
    "text": "but just kind of a convenience for working with the parameter store so I was getting a little deep into the game",
    "start": "1825790",
    "end": "1832390"
  },
  {
    "text": "of Thrones at this time if you go and look at this open source project you'll see that the readme is like House Game",
    "start": "1832390",
    "end": "1838060"
  },
  {
    "text": "of Thrones did I say House of Cards I meant Game of Thrones it's Game of Thrones centric the test cases are Game of Thrones Tetrick",
    "start": "1838060",
    "end": "1844690"
  },
  {
    "text": "so I was really kind of thinking in this and I realized you know I could actually kind of mock the whole transition in the",
    "start": "1844690",
    "end": "1850780"
  },
  {
    "text": "whole series of events of Game of Thrones in the parameter store because if you think about Game of Thrones it's really just a bunch of things happening",
    "start": "1850780",
    "end": "1857860"
  },
  {
    "text": "to people in these noble houses somebody dies that house loses some power somebody becomes a king that perd",
    "start": "1857860",
    "end": "1864370"
  },
  {
    "text": "that house gains some power I decided to devise a little game that would show off some of the services that",
    "start": "1864370",
    "end": "1870830"
  },
  {
    "text": "I've been talking about so far so let's take a look at what that looks like I have to push a button again I think I",
    "start": "1870830",
    "end": "1877040"
  },
  {
    "text": "have to push this button yes yes so I called it the transfer of power and",
    "start": "1877040",
    "end": "1882850"
  },
  {
    "start": "1880000",
    "end": "1992000"
  },
  {
    "text": "let's let me visualize for you what what the outcome needs to be each house gets",
    "start": "1882850",
    "end": "1888800"
  },
  {
    "text": "a certain point value depending on the number of people in the house and the attributes of those people and in the",
    "start": "1888800",
    "end": "1895580"
  },
  {
    "text": "end what I want to see is a chart that shows kind of what the starting state is and what the end state was for the for",
    "start": "1895580",
    "end": "1902240"
  },
  {
    "text": "each house and kind of what their point value is and in theory based on changing events throughout the series you should",
    "start": "1902240",
    "end": "1908060"
  },
  {
    "text": "see the point's transition and so here's how I went about it we use pssh the tool I just demoed to batch load in the",
    "start": "1908060",
    "end": "1914450"
  },
  {
    "text": "events of the game of Thrones into the parameter store and then we subscribe to that using this cloud watch event",
    "start": "1914450",
    "end": "1920630"
  },
  {
    "text": "feature we see all of the changes to the parameters and we invoke a lambda function the lambda functions job is to",
    "start": "1920630",
    "end": "1926600"
  },
  {
    "text": "keep track of the score for the house and so it tracks the changes to the parameter store updates the score in a",
    "start": "1926600",
    "end": "1933260"
  },
  {
    "text": "Redis instance on ElastiCache and then sends the new value to a cloud watch metric and then we can use Graf onna to",
    "start": "1933260",
    "end": "1939680"
  },
  {
    "text": "watch the cloud watch metric so it's kind of fun I fully acknowledge that this is perhaps the most Kluge clunky",
    "start": "1939680",
    "end": "1946400"
  },
  {
    "text": "way to accomplish this thing that there is right you could do this whole task with just a spreadsheet it's a very",
    "start": "1946400",
    "end": "1952010"
  },
  {
    "text": "simple thing concept but that wouldn't demonstrate any of these fun features so that so that wasn't gonna do",
    "start": "1952010",
    "end": "1957350"
  },
  {
    "text": "unfortunately there is a fatal flaw in the design and the flaw is that cloud",
    "start": "1957350",
    "end": "1962360"
  },
  {
    "text": "watch events invoking lambda functions are unordered and it's pretty important to have the right order of events or the",
    "start": "1962360",
    "end": "1968060"
  },
  {
    "text": "score gets all out of whack right so I had to compensate this for this by introducing delays in this batch loading",
    "start": "1968060",
    "end": "1974270"
  },
  {
    "text": "process and I found 60 seconds to work pretty well if you have 60 seconds between events all the lambda functions",
    "start": "1974270",
    "end": "1980360"
  },
  {
    "text": "get invoked in the right time but unfortunately that means sadly I can't demonstrate the thing on stage because it would take too long but I did capture",
    "start": "1980360",
    "end": "1986660"
  },
  {
    "text": "the graph after the fact so before I show you the outcome I want to look at my scoring system so this is totally",
    "start": "1986660",
    "end": "1993230"
  },
  {
    "text": "arbitrary ad hoc invented by me at midnight in bed one night it's probably fine tunable you could think of a dozen",
    "start": "1993230",
    "end": "1999410"
  },
  {
    "text": "ways off top your head to do it better but this is what it is and let me explain it to you you get different points depending",
    "start": "1999410",
    "end": "2005500"
  },
  {
    "text": "on a property that applies to you most people in a noble house are noble right not everybody but most people are noble",
    "start": "2005500",
    "end": "2011289"
  },
  {
    "text": "so you get some points for being nobility you get you've got some extra power like people look up to you if",
    "start": "2011289",
    "end": "2016539"
  },
  {
    "text": "you're royal you get even more points because you have armies to commend and you have control of the coffers that's a",
    "start": "2016539",
    "end": "2023470"
  },
  {
    "text": "word isn't it I think that's a word magical is even better you get all sorts of bonuses for being magical on the",
    "start": "2023470",
    "end": "2029320"
  },
  {
    "text": "other hand there's some downsides if you're handicapped such as the case with bran stark or with Jaime Lannister when",
    "start": "2029320",
    "end": "2034809"
  },
  {
    "text": "he loses his hand that's bad you're like lose respect you lose some power or you could be an exile",
    "start": "2034809",
    "end": "2040960"
  },
  {
    "text": "which is the case with Daenerys Targaryen at the beginning of the show so you kind of lose power for that but",
    "start": "2040960",
    "end": "2046570"
  },
  {
    "text": "you can come back from that and then there's the special deceased case the deceased is important because normally if you're dead like you don't matter",
    "start": "2046570",
    "end": "2052780"
  },
  {
    "text": "that much to your family you're not in the running anymore but in Game of Thrones you can come back to life so we don't want to remove you completely so",
    "start": "2052780",
    "end": "2059589"
  },
  {
    "text": "with that said let's hop one over once again and look at the outcome yeah I",
    "start": "2059589",
    "end": "2067628"
  },
  {
    "text": "think that's it's a little fuzzy there and kind of confusing chart to look at it's not the most exciting chart but",
    "start": "2067629",
    "end": "2073780"
  },
  {
    "text": "let's just take a quick glance at it so we have is lines representing the different noble houses of Westeros the",
    "start": "2073780",
    "end": "2079720"
  },
  {
    "text": "yellow line is the Baratheon's right the Baratheon czar in control at the beginning of the show so it's separated",
    "start": "2079720",
    "end": "2085599"
  },
  {
    "text": "you can kind of draw it in half where the left half is initializing the world setting up all of the people in the game of Thrones and the right half is going",
    "start": "2085599",
    "end": "2092050"
  },
  {
    "text": "through season one I only got to the end of season one because I realized what a total waste of time it was to get through all the other seasons it",
    "start": "2092050",
    "end": "2098830"
  },
  {
    "text": "actually takes a long time to put something together meticulously re-enacting all of the events be a",
    "start": "2098830",
    "end": "2104260"
  },
  {
    "text": "parameter store so the Baratheon czar in",
    "start": "2104260",
    "end": "2109839"
  },
  {
    "text": "power they have all these kids Robert and Cersei are married they're in control houses Stark which is blue and Lannister",
    "start": "2109839",
    "end": "2117730"
  },
  {
    "text": "which is orange they're also quite powerful they're noble houses they are in control of their know their lords and",
    "start": "2117730",
    "end": "2124630"
  },
  {
    "text": "ladies and control of a great estate so they've got some power but they're not royalty they're still subservient to the Baratheon Jon Arryn and Aran family are",
    "start": "2124630",
    "end": "2132099"
  },
  {
    "text": "only represented here because they're important to the beginning of the show and the Targaryen of course are kind of in exile they've",
    "start": "2132099",
    "end": "2137830"
  },
  {
    "text": "been removed from power they're over overseas but they're still royal technically so they're kind of a player still so that's the that's the beginning",
    "start": "2137830",
    "end": "2144280"
  },
  {
    "text": "that's the setting up of Westeros and then commence season one Jon Arryn dies house Arryn loses power the Baratheon",
    "start": "2144280",
    "end": "2152250"
  },
  {
    "text": "Robert Baratheon dies and then the Lannisters kind of staged this takeover of the throne right so the Lannisters",
    "start": "2152250",
    "end": "2158140"
  },
  {
    "text": "gained power the Baratheon to lose power the Starks the bran stark falls from the tower right he gets handicapped so they",
    "start": "2158140",
    "end": "2165070"
  },
  {
    "text": "lose some points and then Eddard is murdered I mean I guess not murdered but technically he's murdered really so they",
    "start": "2165070",
    "end": "2171430"
  },
  {
    "text": "so they lose some power but the Targaryen gained power because she becomes the queen of the Dothraki the",
    "start": "2171430",
    "end": "2176619"
  },
  {
    "text": "mother of dragons so we can only see a kind of at the end of season one but the whole thing works we're seeing the",
    "start": "2176619",
    "end": "2181660"
  },
  {
    "text": "transition of power starting to occur so that is the demo I saw or I came up with",
    "start": "2181660",
    "end": "2187390"
  },
  {
    "text": "for parameter store cloud watch events lambda functions ElastiCache and cloud",
    "start": "2187390",
    "end": "2193210"
  },
  {
    "text": "watch metrics I hope that that was interesting [Applause]",
    "start": "2193210",
    "end": "2203550"
  },
  {
    "start": "2203000",
    "end": "2215000"
  },
  {
    "text": "so let's jump into some pro tips to wrap up the session these are sourced from myself and from",
    "start": "2203550",
    "end": "2209370"
  },
  {
    "text": "other folks in the community they're kind of like all over the place so take what you like like and leave the rest",
    "start": "2209370",
    "end": "2214880"
  },
  {
    "text": "we'll start with some low-hanging fruit maybe this is just like cliche at this point but it wasn't that long ago when",
    "start": "2214880",
    "end": "2221070"
  },
  {
    "start": "2215000",
    "end": "2251000"
  },
  {
    "text": "automated infrastructure was something we're all excited about it seems so fresh and new and today I consider it to",
    "start": "2221070",
    "end": "2227400"
  },
  {
    "text": "be stable stakes like if I'm approaching a brand new project unless it's just a quick prototype there's no way I'm gonna",
    "start": "2227400",
    "end": "2233610"
  },
  {
    "text": "be creating things in the console or like running commands manually using the CLI you need to have some tool whatever",
    "start": "2233610",
    "end": "2240390"
  },
  {
    "text": "tool you like terraform CloudFormation my choice is stacker use whatever tool you like but it should be checked in",
    "start": "2240390",
    "end": "2246660"
  },
  {
    "text": "version controlled so that you know exactly which what you're running this",
    "start": "2246660",
    "end": "2252210"
  },
  {
    "start": "2251000",
    "end": "2298000"
  },
  {
    "text": "is one of my favorite workflows for managing ec2 so probably everybody is familiar with hashing corpse packer it's",
    "start": "2252210",
    "end": "2257610"
  },
  {
    "text": "what we all like to use to build a Mis it's definitely the best tool for the job what I like to use is ansible as the",
    "start": "2257610",
    "end": "2263520"
  },
  {
    "text": "provisioner for packer right packers provisioners set up the image for you and if you use ansible for provisioning",
    "start": "2263520",
    "end": "2270660"
  },
  {
    "text": "then you can use the same set of playbooks for managing your ec2 instances over time so what I like to call fleet",
    "start": "2270660",
    "end": "2276360"
  },
  {
    "text": "control it's kind of nice to have a central code base for all of it and then I'm finding and you probably all are to",
    "start": "2276360",
    "end": "2282000"
  },
  {
    "text": "more and more use cases for lambdas as kind of the glue right like I use it for cleaning up EBS snapshots for removing",
    "start": "2282000",
    "end": "2290100"
  },
  {
    "text": "a.m. eyes when they're no longer needed there's lots of great occasions to use lambdas so this is a nice workflow that",
    "start": "2290100",
    "end": "2295710"
  },
  {
    "text": "I found to work really well maybe you're familiar with this model maybe or not single node auto scaling groups so the",
    "start": "2295710",
    "end": "2303360"
  },
  {
    "start": "2298000",
    "end": "2328000"
  },
  {
    "text": "example I like to use is like a bastion host where it's important to have one instance I don't need more than one but",
    "start": "2303360",
    "end": "2310500"
  },
  {
    "text": "I need at least one instance out there running and it's got to be running like all the time pretty much or some other",
    "start": "2310500",
    "end": "2315780"
  },
  {
    "text": "users might have a hard time accessing it so if that instance gets killed it's a single point of failure we'll throw it",
    "start": "2315780",
    "end": "2321000"
  },
  {
    "text": "in a single note in a single node auto scaling group with the min Max desired capacity of one and it'll replace itself",
    "start": "2321000",
    "end": "2328100"
  },
  {
    "start": "2328000",
    "end": "2355000"
  },
  {
    "text": "if you are not familiar with config rules it's a way to enforce compliance so if your site has specific",
    "start": "2328100",
    "end": "2335250"
  },
  {
    "text": "tagging schemes or if you need abs snapshots to be taken snapshots to be taken on a regular basis or you need to",
    "start": "2335250",
    "end": "2341520"
  },
  {
    "text": "make sure security group rules are not open to the world you can use configural 'he's not only to alert you to the fact",
    "start": "2341520",
    "end": "2347580"
  },
  {
    "text": "that maybe something is out of compliance but it can actually make the change for you right it can reverse changes that people have made this is a",
    "start": "2347580",
    "end": "2356580"
  },
  {
    "start": "2355000",
    "end": "2400000"
  },
  {
    "text": "word of warning these are ec2 actions in I am policy and",
    "start": "2356580",
    "end": "2362090"
  },
  {
    "text": "sometimes you can't be very granular with who has access to these things and that can be kind of risky for example",
    "start": "2362090",
    "end": "2367830"
  },
  {
    "text": "look at the create key pair delete key pair operations you can't restrict which",
    "start": "2367830",
    "end": "2373140"
  },
  {
    "text": "keys you can create and delete so if you give somebody access to these two actions then they have it kind of carte",
    "start": "2373140",
    "end": "2379170"
  },
  {
    "text": "blanche right so if you have a production key pair what would happen if somebody deleted it and created a new",
    "start": "2379170",
    "end": "2384240"
  },
  {
    "text": "one all subsequent instances created with that key pair would then be launched with the attackers key so be",
    "start": "2384240",
    "end": "2390630"
  },
  {
    "text": "careful who you give these permissions to this is by no means a definitive list the list is really long of actions that",
    "start": "2390630",
    "end": "2396060"
  },
  {
    "text": "are that don't support fine-grained resource control if you're using any of",
    "start": "2396060",
    "end": "2402300"
  },
  {
    "text": "those EBS volume types that I was talking about earlier except for the i/o one then you know you need to keep track",
    "start": "2402300",
    "end": "2408990"
  },
  {
    "text": "of the i/o balance that you have all the EBS volumes have a certain balance and if you exceed your balance your",
    "start": "2408990",
    "end": "2414600"
  },
  {
    "text": "throughput will start to be throttled there's a CloudWatch metric you can monitor the burst balance keep an eye on",
    "start": "2414600",
    "end": "2419790"
  },
  {
    "text": "that and you'll know whether you're being throttled similarly for the t2 instance types you might recall that",
    "start": "2419790",
    "end": "2425570"
  },
  {
    "start": "2422000",
    "end": "2439000"
  },
  {
    "text": "their credit based and so you have a certain baseline and you accumulate credits and overtime if you have a",
    "start": "2425570",
    "end": "2432210"
  },
  {
    "text": "certain heavy period it'll eat into those credits and you can track where you're at with your credit limit using",
    "start": "2432210",
    "end": "2437610"
  },
  {
    "text": "these two metrics so this is the same template as I used for the pssh-pssh is",
    "start": "2437610",
    "end": "2444840"
  },
  {
    "start": "2439000",
    "end": "2469000"
  },
  {
    "text": "like a little newborn baby toddler those are like three different things I think",
    "start": "2444840",
    "end": "2450320"
  },
  {
    "text": "compared to this AWS show which is really an awesome interactive shell for the for the AWS CLI it has command",
    "start": "2450320",
    "end": "2457470"
  },
  {
    "text": "completion it has supports the full gamut of ec2 or of AWS services it has",
    "start": "2457470",
    "end": "2463110"
  },
  {
    "text": "built-in documentation really a productivity enhancer so if you're not familiar with that you should check it out little-known fact or I",
    "start": "2463110",
    "end": "2471390"
  },
  {
    "start": "2469000",
    "end": "2498000"
  },
  {
    "text": "don't know maybe people know this I didn't know it for a long time that Network throughput increases quite a lot with each instance each step up in",
    "start": "2471390",
    "end": "2478619"
  },
  {
    "text": "instance type so if you go from an M for large to an M for X large you can effectively double your throughput so if",
    "start": "2478619",
    "end": "2484950"
  },
  {
    "text": "you think you're bumping up against network i/o limits don't spend a lot of time like analyzing exactly which",
    "start": "2484950",
    "end": "2489990"
  },
  {
    "text": "instance type you need necessarily if you need to just get a done just double your instance type and you'll know",
    "start": "2489990",
    "end": "2495180"
  },
  {
    "text": "whether you had a network bottleneck or not in cloud formation with certain",
    "start": "2495180",
    "end": "2500490"
  },
  {
    "start": "2498000",
    "end": "2524000"
  },
  {
    "text": "instance types if you don't explicitly request block device mappings for your instances you",
    "start": "2500490",
    "end": "2505859"
  },
  {
    "text": "might not get those drives at all for example with the III I three instance types they come with SSD ephemeral disks",
    "start": "2505859",
    "end": "2512130"
  },
  {
    "text": "like I was talking about earlier but you might spin it up and if you didn't request those ephemeral disks in your",
    "start": "2512130",
    "end": "2517200"
  },
  {
    "text": "block device mapping section they won't come especially if capacity is constrained so I always just write it",
    "start": "2517200",
    "end": "2522660"
  },
  {
    "text": "into my confirmation templates I've got a few SSH tips here I'm a real",
    "start": "2522660",
    "end": "2527940"
  },
  {
    "start": "2524000",
    "end": "2574000"
  },
  {
    "text": "at SSH advocate you know there's just a lot of power features for SSH I'm gonna",
    "start": "2527940",
    "end": "2533849"
  },
  {
    "text": "share a couple of those with you one is to enable mfa my favorite tool for this is duo SEC if you're not familiar with",
    "start": "2533849",
    "end": "2540059"
  },
  {
    "text": "them I think they're like an N Arbor Michigan based company and they have a really cool system where after you authenticate to your box use your public",
    "start": "2540059",
    "end": "2546660"
  },
  {
    "text": "key as usual it'll send you a push notification if you have a watch they have smart apps for the watch so I get a",
    "start": "2546660",
    "end": "2552720"
  },
  {
    "text": "notification on my Apple watch and I say approve and then I can log in so it's really seamless and integrated it's a",
    "start": "2552720",
    "end": "2558119"
  },
  {
    "text": "nice way to kind of add another layer of security if you're not familiar with failed to ban you can get even more security for those instances that are",
    "start": "2558119",
    "end": "2564960"
  },
  {
    "text": "exposed to the internet or exposed to really wide open network ranges use fail tube and to block servers that are",
    "start": "2564960",
    "end": "2570809"
  },
  {
    "text": "people that are trying to brute force their way in control persist is a",
    "start": "2570809",
    "end": "2576000"
  },
  {
    "start": "2574000",
    "end": "2592000"
  },
  {
    "text": "feature of SSH to let you reuse SSH connections so if you have an established connection to a server you",
    "start": "2576000",
    "end": "2582359"
  },
  {
    "text": "can enable control persist and subsequent connections to the same server will reuse the same connection so",
    "start": "2582359",
    "end": "2587579"
  },
  {
    "text": "you don't have to authenticate again latency is improved you'll have a better time guaranteed the minus D flag for SSH",
    "start": "2587579",
    "end": "2595349"
  },
  {
    "start": "2592000",
    "end": "2615000"
  },
  {
    "text": "this is one of my favorite kind of little tricks is to use minus D to enable a socks proxy and this",
    "start": "2595349",
    "end": "2601050"
  },
  {
    "text": "which he Omega Chrome extension to make it to make your browser use the socks proxy so that you can browse all of your",
    "start": "2601050",
    "end": "2607860"
  },
  {
    "text": "web services and private subnets as if they're local to your workstation really nice for developers that didn't know this trick if you this is really similar",
    "start": "2607860",
    "end": "2617040"
  },
  {
    "text": "to the IAM rules for ECS tasks if you have an instance that you're running several applications on rather than give",
    "start": "2617040",
    "end": "2623550"
  },
  {
    "text": "the host really broad permissions assign granular permissions to each one of your apps and then use assumed role to assume",
    "start": "2623550",
    "end": "2629910"
  },
  {
    "text": "those permissions and you can be more granular this is a lesson I learned from",
    "start": "2629910",
    "end": "2636350"
  },
  {
    "text": "pocket which is a sub feature of Firefox I think they had a compromise that",
    "start": "2636350",
    "end": "2641910"
  },
  {
    "text": "involved somebody stealing user data on their instances the user data had secrets like plaintext credentials or",
    "start": "2641910",
    "end": "2647820"
  },
  {
    "text": "something else that leaked information about their environment and if you have a redirect vulnerability in your web application and knowledgeable attacker",
    "start": "2647820",
    "end": "2655170"
  },
  {
    "text": "could redirect to the local metadata read your user data and see anything that it offered so lesson one don't keep",
    "start": "2655170",
    "end": "2661470"
  },
  {
    "text": "any sensitive data in your user data there's no reason to I can't think of a single good reason to and if you do have",
    "start": "2661470",
    "end": "2666750"
  },
  {
    "text": "a good reason encrypt it or do something to protect it little-known feature of",
    "start": "2666750",
    "end": "2672600"
  },
  {
    "start": "2671000",
    "end": "2706000"
  },
  {
    "text": "metadata is the instance identity document this is buried in the AWS documentation and you can take your",
    "start": "2672600",
    "end": "2678780"
  },
  {
    "text": "paranoia to the next level it allows you to validate that you're actually on an authentic ec2 instance so if you think",
    "start": "2678780",
    "end": "2685920"
  },
  {
    "text": "you're on an ec2 or if you if you come to an instance and you're not sure whether it's really ec2 instance there",
    "start": "2685920",
    "end": "2691500"
  },
  {
    "text": "were some attackers malicious instance you can get the metadata document which is signed by a certificate from Amazon",
    "start": "2691500",
    "end": "2697080"
  },
  {
    "text": "they publish the public key part of it and you can verify that it's a valid signature and that you're in fact on an",
    "start": "2697080",
    "end": "2703050"
  },
  {
    "text": "ec2 instance and not a bad guys instance Linux kernel version 4.4 is a little",
    "start": "2703050",
    "end": "2709560"
  },
  {
    "start": "2706000",
    "end": "2750000"
  },
  {
    "text": "older at this point but it still is worth mentioning that you really should be on this version or later you'll take",
    "start": "2709560",
    "end": "2716370"
  },
  {
    "text": "advantage of all the latest ec2 instance type features you'll get better performance fewer bugs from the nvme",
    "start": "2716370",
    "end": "2721890"
  },
  {
    "text": "SSDs from the elastic network adapters like I talked about so get 4.4 or later and in general it's",
    "start": "2721890",
    "end": "2728850"
  },
  {
    "text": "good practice to be able to replace your kernel pretty easily like it should be almost to the point",
    "start": "2728850",
    "end": "2734109"
  },
  {
    "text": "in your CI tool or whatever you do to run your jobs you should be able to push a button and start to replace instances",
    "start": "2734109",
    "end": "2740200"
  },
  {
    "text": "with a new with a new image like that's the that's kind of what I strive for that's my rule of thumb be able to",
    "start": "2740200",
    "end": "2745630"
  },
  {
    "text": "replace your kernels really easily because you know there's patches all the time so check IP Amazon AWS comm this may be",
    "start": "2745630",
    "end": "2753970"
  },
  {
    "start": "2750000",
    "end": "2768000"
  },
  {
    "text": "a service you've never heard of until right now so in which case you won't care but it is in fact HTTP only and",
    "start": "2753970",
    "end": "2759880"
  },
  {
    "text": "does not support HTTPS and hence it cannot be trusted so I recommend ICANN has IP which you",
    "start": "2759880",
    "end": "2764950"
  },
  {
    "text": "can trust because it supports SSL this is just a snippet of user data I like to",
    "start": "2764950",
    "end": "2770799"
  },
  {
    "start": "2768000",
    "end": "2788000"
  },
  {
    "text": "prepend this exact command to the beginning of my user data because every subsequent command executed in that",
    "start": "2770799",
    "end": "2777549"
  },
  {
    "text": "script will be captured in this log file and then if something goes wrong during hosts initialization you can review your",
    "start": "2777549",
    "end": "2783400"
  },
  {
    "text": "log file and see exactly what it was at a glance so I always have this in my user data last protip pace yourself",
    "start": "2783400",
    "end": "2790710"
  },
  {
    "start": "2788000",
    "end": "2797000"
  },
  {
    "text": "don't get too crazy tonight it's no fun to be hungover or tired all week long it's gonna be busy and exciting week I'm",
    "start": "2790710",
    "end": "2798220"
  },
  {
    "start": "2797000",
    "end": "2827000"
  },
  {
    "text": "a co-author of the UNIX and Linux system administration handbook we just have a new edition that came out this fall I'm",
    "start": "2798220",
    "end": "2804009"
  },
  {
    "text": "really proud of it we're doing a book signing and we'll give away a free free free copies at the Victor ops happy hour",
    "start": "2804009",
    "end": "2809799"
  },
  {
    "text": "on Wednesday I'd love to see you there maybe you can get a free copy so thanks again for your time there's a mic over",
    "start": "2809799",
    "end": "2815769"
  },
  {
    "text": "here anybody that has questions feel free to come up and ask Thanks",
    "start": "2815769",
    "end": "2823200"
  }
]