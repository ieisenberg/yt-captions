[
  {
    "text": "so good morning thank you for being here thank you for being this day of training",
    "start": "5740",
    "end": "12379"
  },
  {
    "text": "we prefer some technical content for you the first section of each track is more",
    "start": "12379",
    "end": "18380"
  },
  {
    "text": "high-level it's trying to give you an overview of what is happening in that space and then we are going to dive",
    "start": "18380",
    "end": "25700"
  },
  {
    "text": "deeper in the next sections into specific topics so my name is Danilo I'm",
    "start": "25700",
    "end": "30800"
  },
  {
    "text": "part of the venturi steam and I'm focused on Cerberus I always since 2014 since we launched a",
    "start": "30800",
    "end": "39260"
  },
  {
    "text": "SS lambda I've been interested in building event-driven surveillance architectures",
    "start": "39260",
    "end": "44510"
  },
  {
    "text": "with our customers and the idea today is to share some of these best practices",
    "start": "44510",
    "end": "49610"
  },
  {
    "text": "and some of the new things that we launched other event I also wrote a book on a de brest lambda that has been",
    "start": "49610",
    "end": "56149"
  },
  {
    "text": "translated to Chinese and Korean and I work with my publisher for to create a",
    "start": "56149",
    "end": "61219"
  },
  {
    "text": "free ebook so the last book that you see on the on the left here is a free ebook so you can just grab it it gives you the",
    "start": "61219",
    "end": "68420"
  },
  {
    "text": "foundational knowledge of what you need to know to set up an agile serverless team what is a web api",
    "start": "68420",
    "end": "73850"
  },
  {
    "text": "what serverless means and how you can use it so this is one of the mandatory",
    "start": "73850",
    "end": "80149"
  },
  {
    "text": "slides when you talk about several is to set the context so what do we mean by several s we mean an architecture where",
    "start": "80149",
    "end": "87709"
  },
  {
    "text": "you don't need to provision or manage servers storage and infrastructural",
    "start": "87709",
    "end": "92929"
  },
  {
    "text": "resource where scaling is automatic so you can build something that you use",
    "start": "92929",
    "end": "97969"
  },
  {
    "text": "once per month or thousands of times per seconds and you don't need to change",
    "start": "97969",
    "end": "103490"
  },
  {
    "text": "anything on a configuration everything is highly available and secure so we",
    "start": "103490",
    "end": "109969"
  },
  {
    "text": "have a session today on multi-region where we dive deeper into what availability means and how that works",
    "start": "109969",
    "end": "116689"
  },
  {
    "text": "for several architecture but the idea is that when you create even the most simple hello world function with lambda",
    "start": "116689",
    "end": "123739"
  },
  {
    "text": "everything is replicated across all the availability zones that we have in a region so for example here in Dublin we",
    "start": "123739",
    "end": "129890"
  },
  {
    "text": "have three availability zones each of those is one or more data centers so if",
    "start": "129890",
    "end": "135170"
  },
  {
    "text": "you say just you create just a tree function that says hello world this is replicated across three data centers and",
    "start": "135170",
    "end": "142210"
  },
  {
    "text": "then can scale automatically and then you should pay for value so for example",
    "start": "142210",
    "end": "148060"
  },
  {
    "text": "with lambda you only pay by the number of invocation by the hundreds of milliseconds of execution time with",
    "start": "148060",
    "end": "154660"
  },
  {
    "text": "storage like s3 you pay by the space that you use and also by the number of",
    "start": "154660",
    "end": "161140"
  },
  {
    "text": "time the shoe that you interact with this data the time that you read the data when you write the data so this is",
    "start": "161140",
    "end": "167500"
  },
  {
    "text": "really the approach that we see for a service architecture and the main advantages that we see are of course",
    "start": "167500",
    "end": "175450"
  },
  {
    "text": "cost reduction we've seen lots of customers that reduced the cost from 30 to 90 percent easily by moving from a",
    "start": "175450",
    "end": "182200"
  },
  {
    "text": "traditional architecture to a severus architecture built with building blocks like a de brest lambda Amazon s3 and an",
    "start": "182200",
    "end": "190270"
  },
  {
    "text": "dynamodb but we also see elasticity so the capacity to build something when you",
    "start": "190270",
    "end": "195850"
  },
  {
    "text": "are not aware of what will be the workload so maybe you are a startup or",
    "start": "195850",
    "end": "201280"
  },
  {
    "text": "maybe you're creating a new product for a company so you really don't know in advance how many users you will get how",
    "start": "201280",
    "end": "207040"
  },
  {
    "text": "fast your product will ramp up but probably the most important advantage is",
    "start": "207040",
    "end": "212380"
  },
  {
    "text": "agility and agility means that you are really able to build your idea faster",
    "start": "212380",
    "end": "218320"
  },
  {
    "text": "you can really go to market faster because you don't need to spend time thinking about everything that is",
    "start": "218320",
    "end": "224940"
  },
  {
    "text": "surrounding and supporting your building of your idea for example at our event",
    "start": "224940",
    "end": "230140"
  },
  {
    "text": "the conference that we had in Las Vegas just a couple of weeks ago Capital One a",
    "start": "230140",
    "end": "236530"
  },
  {
    "text": "large bank that is I'm not sure if it's if they operate in Ireland I don't think",
    "start": "236530",
    "end": "242020"
  },
  {
    "text": "so but they operate for example in the in the UK and they are quite big in the US and the team so the team of Capital",
    "start": "242020",
    "end": "249700"
  },
  {
    "text": "One was telling me that for them is like having 30% more time per week now that",
    "start": "249700",
    "end": "255489"
  },
  {
    "text": "they use server less so if you think 20% more time every week is it's really a lot and the idea is really to focus on",
    "start": "255489",
    "end": "264010"
  },
  {
    "text": "what is going to be different in your solution not on everything that is can",
    "start": "264010",
    "end": "269410"
  },
  {
    "text": "be easily shared across different implementations so normally we see that customers they spend maybe 60 70 percent",
    "start": "269410",
    "end": "276840"
  },
  {
    "text": "on the of their time in just repeating the same configuration in super managing databases managing compute clusters this",
    "start": "276840",
    "end": "284789"
  },
  {
    "text": "is these are things that maybe when you are developing are not so critical but when you're in production can really",
    "start": "284789",
    "end": "290099"
  },
  {
    "text": "suck your energy the idea when we think about these new products is to create an",
    "start": "290099",
    "end": "296669"
  },
  {
    "text": "environment where you can really focus most of your energy like 90 percent of your energy on building the unique",
    "start": "296669",
    "end": "302669"
  },
  {
    "text": "features that you want to create and just a little bit on managing that the",
    "start": "302669",
    "end": "307979"
  },
  {
    "text": "configuration and infrastructure that you need to support your application and the service portfolio has grown over the",
    "start": "307979",
    "end": "315840"
  },
  {
    "text": "years and it's quite broad so lots of services have some simplification that",
    "start": "315840",
    "end": "321419"
  },
  {
    "text": "we can use and we can think of them as server less because we don't need to think about the servers underneath some",
    "start": "321419",
    "end": "328740"
  },
  {
    "text": "of those are probably the one that come to mind easily when you think about several is like lamda API gateways the",
    "start": "328740",
    "end": "335729"
  },
  {
    "text": "functions the service application repository and today we will probably",
    "start": "335729",
    "end": "341219"
  },
  {
    "text": "dive deeper into those services but we will see also how the other services fit into this this landscape so let's see",
    "start": "341219",
    "end": "349169"
  },
  {
    "text": "what are the trends that we see in server less so we now have lots and lots",
    "start": "349169",
    "end": "355110"
  },
  {
    "text": "of customers hundreds of thousands of customers using for example lamda every",
    "start": "355110",
    "end": "360930"
  },
  {
    "text": "month and just at the event as I mentioned there were a couple of banks from Europe talking about how they use",
    "start": "360930",
    "end": "368310"
  },
  {
    "text": "service architecture in in the financial market that is one of the most regulated markets so capital wanted us speaking in",
    "start": "368310",
    "end": "375389"
  },
  {
    "text": "my in my session and also HSBC for example Capital One was describing how",
    "start": "375389",
    "end": "380969"
  },
  {
    "text": "they use lambda for building one of the most critical public API that they have",
    "start": "380969",
    "end": "386130"
  },
  {
    "text": "so they have lots of api's but only a few of those are public there are bank of course and one of those is called the",
    "start": "386130",
    "end": "393300"
  },
  {
    "text": "credit offer API it's an API that Capital One is using to advertise their",
    "start": "393300",
    "end": "398310"
  },
  {
    "text": "credit cards and those websites that do comparison and then suggest which is the",
    "start": "398310",
    "end": "403710"
  },
  {
    "text": "best a product for you they are using this API to suggest and advertise the credit",
    "start": "403710",
    "end": "409600"
  },
  {
    "text": "cards to their customers and then from this API they start the registration of a new customer of the new credit cards",
    "start": "409600",
    "end": "416680"
  },
  {
    "text": "so you can imagine how critical and how business critical is this interface for them and this was built with a",
    "start": "416680",
    "end": "422980"
  },
  {
    "text": "traditional architecture so they were deploying once per week of course it was",
    "start": "422980",
    "end": "428020"
  },
  {
    "text": "2 a.m. on Monday that's probably the moment of where there was less traffic and just that is probably burning energy",
    "start": "428020",
    "end": "436540"
  },
  {
    "text": "of a couple of people of your team that must be there every week for further further rollout they migrated to lambda",
    "start": "436540",
    "end": "442750"
  },
  {
    "text": "and and they start to use safety deployments is one of the feature that are part of the u.s. lambda where you",
    "start": "442750",
    "end": "450400"
  },
  {
    "text": "can automatically do canary deployments when you create a new version of a function and now they deploy in",
    "start": "450400",
    "end": "456220"
  },
  {
    "text": "production during work day roughly twelve two times per day and they don't",
    "start": "456220",
    "end": "462700"
  },
  {
    "text": "need to go out during the night anymore and this is probably one of the reason why they if they feel that it's much",
    "start": "462700",
    "end": "468400"
  },
  {
    "text": "more faster for them to iterate and add new features for their customers and",
    "start": "468400",
    "end": "474310"
  },
  {
    "text": "when we look at customers this is probably the standard adoption that we see we see lots of enterprises adopting",
    "start": "474310",
    "end": "480730"
  },
  {
    "text": "server lesson maybe leapfrogging all the evolution of the technology in the last",
    "start": "480730",
    "end": "486070"
  },
  {
    "text": "years and often they start with very simple scripts that they run on lambda",
    "start": "486070",
    "end": "493830"
  },
  {
    "text": "something that normally maybe you ran on a server to automate infrastructure management and then we great this to",
    "start": "493830",
    "end": "500800"
  },
  {
    "text": "lambda they can use features like called watch events to schedule those recurring",
    "start": "500800",
    "end": "506620"
  },
  {
    "text": "cron jobs that now are lambda functions are much more controlled and available",
    "start": "506620",
    "end": "511990"
  },
  {
    "text": "than before and in this way they start to understand how it works what are the advantages of this approach and then",
    "start": "511990",
    "end": "518770"
  },
  {
    "text": "they start to create auxiliary applications the idea here is that especially with micro services but even",
    "start": "518770",
    "end": "524740"
  },
  {
    "text": "if you have a big monolithic application when you need to add a new feature instead of changing the main application",
    "start": "524740",
    "end": "531220"
  },
  {
    "text": "you create something else they're not that many maybe is managing some interface for example",
    "start": "531220",
    "end": "536240"
  },
  {
    "text": "maybe your customer are uploading some documents on Amazon history you trigger a lambda function that is processing",
    "start": "536240",
    "end": "542630"
  },
  {
    "text": "these documents and maybe indexing the information in your current database so",
    "start": "542630",
    "end": "549170"
  },
  {
    "text": "this is a minimal change to your architecture but you start to have something serverless surrounding your traditional",
    "start": "549170",
    "end": "555790"
  },
  {
    "text": "architecture and then when they get the advantage here they move into business critical application like the examples",
    "start": "555790",
    "end": "562310"
  },
  {
    "text": "that I mention of Capital One where really things are a critical word",
    "start": "562310",
    "end": "567529"
  },
  {
    "text": "time-sensitive are having a time-sensitive answer is important high availability and probably processing",
    "start": "567529",
    "end": "574520"
  },
  {
    "text": "data at speed is really important so this is a very common maturity model",
    "start": "574520",
    "end": "581180"
  },
  {
    "text": "that we see with our customer especially enterprise customers and in this way we",
    "start": "581180",
    "end": "586339"
  },
  {
    "text": "seen lots of use cases that from Thomson Reuters that probably was one of the",
    "start": "586339",
    "end": "591529"
  },
  {
    "text": "early adopter of lambda they wanted to know how their customers were using",
    "start": "591529",
    "end": "597560"
  },
  {
    "text": "their products because when you give products to your customer you want to understand what features are used what",
    "start": "597560",
    "end": "602810"
  },
  {
    "text": "are not and they use Kinesis to collect this information and then lambda function to process this information in",
    "start": "602810",
    "end": "609440"
  },
  {
    "text": "almost real-time and in less than 10 seconds they update a dashboard that shows to their leadership how their",
    "start": "609440",
    "end": "615920"
  },
  {
    "text": "products are used in real time so this is quite an interesting use case again and and we have FINRA this is a",
    "start": "615920",
    "end": "623390"
  },
  {
    "text": "financial authority in the u.s. the amount or every stock transaction so",
    "start": "623390",
    "end": "629779"
  },
  {
    "text": "they now process half a trillion of validation every day using lambda",
    "start": "629779",
    "end": "634910"
  },
  {
    "text": "function and they are super happy because the stock market is is not stable in the number of transaction",
    "start": "634910",
    "end": "641959"
  },
  {
    "text": "there are days where there are very few transaction and moments in time where there is a huge peak of transaction so",
    "start": "641959",
    "end": "647450"
  },
  {
    "text": "managing this scalability for them was very complex in the past now this is managed by the platform for them and",
    "start": "647450",
    "end": "653390"
  },
  {
    "text": "they can focus on the logic of the validation that is really their core business another customer that is using",
    "start": "653390",
    "end": "661790"
  },
  {
    "text": "lambda an interesting way is financial engines they do portfolio management for customer but they do that not",
    "start": "661790",
    "end": "669710"
  },
  {
    "text": "just with humans they automate that with some computational process they use an",
    "start": "669710",
    "end": "675800"
  },
  {
    "text": "integral program linear programming optimizer on lambda and in this way they",
    "start": "675800",
    "end": "681620"
  },
  {
    "text": "were able to scale and manage lots and lots of new customers it's much easier",
    "start": "681620",
    "end": "687230"
  },
  {
    "text": "for them to manage and automate portfolio management with his new platform that they built probably you",
    "start": "687230",
    "end": "694910"
  },
  {
    "text": "know not National Geographic they have a huge catalog of multimedia content that",
    "start": "694910",
    "end": "701660"
  },
  {
    "text": "grew over the last 130 years and they wanted to make this portfolio of content",
    "start": "701660",
    "end": "707720"
  },
  {
    "text": "this multimedia content pictures movies available easily online and they built a",
    "start": "707720",
    "end": "715460"
  },
  {
    "text": "severus platform to do that and they also use features like Amazon recognition Amazon recognition is an AI",
    "start": "715460",
    "end": "721760"
  },
  {
    "text": "service that is fully managed so you don't need to do anything you just need to provide a video or an image and we",
    "start": "721760",
    "end": "728030"
  },
  {
    "text": "can extract features from this image what's the content what's the faces",
    "start": "728030",
    "end": "733400"
  },
  {
    "text": "what's the sentiment of the faces and they use this to augment the information",
    "start": "733400",
    "end": "738590"
  },
  {
    "text": "they have so that they upload the content to s3 this triggers a lambda function and they analyze the picture",
    "start": "738590",
    "end": "744290"
  },
  {
    "text": "and they extract more information that they already have on this picture and then they index this information on",
    "start": "744290",
    "end": "750080"
  },
  {
    "text": "DynamoDB that is their main online database for serving content Autodesk is",
    "start": "750080",
    "end": "757250"
  },
  {
    "text": "probably more of a case similar to use case that I showed before of internal",
    "start": "757250",
    "end": "762440"
  },
  {
    "text": "adoption you probably know them for software like AutoCAD and they are transitioning to a software-as-a-service",
    "start": "762440",
    "end": "768590"
  },
  {
    "text": "model and what they do is that they want to empower their users their developers",
    "start": "768590",
    "end": "775100"
  },
  {
    "text": "with an AWS account so that they can experiment and build things faster but",
    "start": "775100",
    "end": "781190"
  },
  {
    "text": "creating an internal @ss account a sort of sandbox that their developers could use was taking almost two weeks because",
    "start": "781190",
    "end": "788990"
  },
  {
    "text": "there were lots of human checks approvals so they built an internal tools that automates all the checks and",
    "start": "788990",
    "end": "794870"
  },
  {
    "text": "all the approvals so now in less than 10 minutes they can provision and a new account to one of their developers that",
    "start": "794870",
    "end": "800690"
  },
  {
    "text": "can immediately start and be productive on a new idea and build something that can possibly go in production and we also",
    "start": "800690",
    "end": "809610"
  },
  {
    "text": "have a growing ecosystem of partners so I'm not mentioning all of them because",
    "start": "809610",
    "end": "815010"
  },
  {
    "text": "there are a lot but we really work closely with our partners they usually add new features at new observable",
    "start": "815010",
    "end": "822720"
  },
  {
    "text": "capability for observability monitoring management to our platform and we work so closely with them that for example",
    "start": "822720",
    "end": "829620"
  },
  {
    "text": "when we launch some of the new features at reinvent we work with them before so they were able to add the support for",
    "start": "829620",
    "end": "836880"
  },
  {
    "text": "this new feature on date zero so immediately when this new feature was available they could manage and monitor",
    "start": "836880",
    "end": "844260"
  },
  {
    "text": "or process this new feature transparency for ID for our customers so after an",
    "start": "844260",
    "end": "850440"
  },
  {
    "text": "event we had a few launches so new features that we launched in the service",
    "start": "850440",
    "end": "855450"
  },
  {
    "text": "space and the idea for us was to try to cover those that are our main priorities",
    "start": "855450",
    "end": "863270"
  },
  {
    "text": "so first we of course do you want to continue in excelling in service fundamentals so for the core services we",
    "start": "863270",
    "end": "870720"
  },
  {
    "text": "want to add features that can Hannibal the fundamental characteristics are you",
    "start": "870720",
    "end": "876810"
  },
  {
    "text": "expected of availability latency security and scale we also want to enable new application development",
    "start": "876810",
    "end": "885120"
  },
  {
    "text": "partners patents we saw over the years that when we launch a new service or a new features new use cases became",
    "start": "885120",
    "end": "892170"
  },
  {
    "text": "possible and we started to see customers doing things differently so this is something again that we want to continue",
    "start": "892170",
    "end": "898530"
  },
  {
    "text": "we want to continue to minimize and differentiate that code so we our goal",
    "start": "898530",
    "end": "903930"
  },
  {
    "text": "our ultimate goal I would say as the brace is really to help you write just your own business logic everything else",
    "start": "903930",
    "end": "910560"
  },
  {
    "text": "that is not unique to you should be something that you can take off the shelf and integrate with your application and finally we want to",
    "start": "910560",
    "end": "918480"
  },
  {
    "text": "empower the developers and the operations team that is managing a service architecture so that they can",
    "start": "918480",
    "end": "925470"
  },
  {
    "text": "really sleep go in production and manage the application in production so let's",
    "start": "925470",
    "end": "932460"
  },
  {
    "text": "start with service fundamentals and during 2018 we work a lot on this",
    "start": "932460",
    "end": "939810"
  },
  {
    "text": "feature on core features one of those is service compliance so all the core",
    "start": "939810",
    "end": "945529"
  },
  {
    "text": "services of for a SS architectures like the API gateway or lambda are now",
    "start": "945529",
    "end": "951060"
  },
  {
    "text": "compliant with PCI DSS so they can be used for payments with the HIPAA for",
    "start": "951060",
    "end": "957089"
  },
  {
    "text": "healthcare and we added other services to those compliances last year",
    "start": "957089",
    "end": "964140"
  },
  {
    "text": "especially before May we were strictly focused on gdpr and all AWS services",
    "start": "964140",
    "end": "970589"
  },
  {
    "text": "were ready for gdpr in May when gdpr started to be enforced by the law in AU",
    "start": "970589",
    "end": "977760"
  },
  {
    "text": "and we also worked on core features of our services so AWS lambda now was an",
    "start": "977760",
    "end": "983040"
  },
  {
    "text": "SLA so that shows how much we are we are",
    "start": "983040",
    "end": "988800"
  },
  {
    "text": "really trusting this platform enables lambda is now what we call a tier one service because it's used by other",
    "start": "988800",
    "end": "995550"
  },
  {
    "text": "services in AWS when we build them so internally two other services we use lambda so Tier one services like lambda",
    "start": "995550",
    "end": "1002420"
  },
  {
    "text": "is three DynamoDB they must be in every region because it's it's really critical",
    "start": "1002420",
    "end": "1007820"
  },
  {
    "text": "because otherwise we can't deploy other services on top of them we also continue",
    "start": "1007820",
    "end": "1013250"
  },
  {
    "text": "to reduce the price so the API gateway we introduced a tiered pricing model so",
    "start": "1013250",
    "end": "1019399"
  },
  {
    "text": "with the API gateway the standard price was 350 dollars for 100 for 1 million of",
    "start": "1019399",
    "end": "1025130"
  },
  {
    "text": "API requests now we add the tiers and if you grow and you have lots of millions",
    "start": "1025130",
    "end": "1030350"
  },
  {
    "text": "of of API calls it goes down to 1.51 so",
    "start": "1030350",
    "end": "1035870"
  },
  {
    "text": "less than half of the original price this is of course only for high volumes",
    "start": "1035870",
    "end": "1041050"
  },
  {
    "text": "and we also improved internally some of our services for example step functions",
    "start": "1041050",
    "end": "1046790"
  },
  {
    "text": "step functions is a way to manage workflows in the cloud when you have some complex business logic you want to",
    "start": "1046790",
    "end": "1053600"
  },
  {
    "text": "map in what we call a state machine so if you studied computer science it's",
    "start": "1053600",
    "end": "1058640"
  },
  {
    "text": "really the idea of state machine in computer science where you have a state and transitions and this state evolves",
    "start": "1058640",
    "end": "1064669"
  },
  {
    "text": "towards a goal and we improved internally how step functions work and now they are much",
    "start": "1064669",
    "end": "1071669"
  },
  {
    "text": "faster they can have up to 1000 transactions per second so it's it can be used in use cases where they were not",
    "start": "1071669",
    "end": "1078570"
  },
  {
    "text": "thought it was not possible before an interesting lunch that was not only for",
    "start": "1078570",
    "end": "1084179"
  },
  {
    "text": "lamda but that we use for multiple services is firecracker so far cracker",
    "start": "1084179",
    "end": "1089490"
  },
  {
    "text": "is a what we call a micro VM so the idea",
    "start": "1089490",
    "end": "1095760"
  },
  {
    "text": "here is is quite simple so when we were executing lambda functions before firecracker and in the last four years I",
    "start": "1095760",
    "end": "1103289"
  },
  {
    "text": "would say we create sandbox environment where we run the lambda code of every",
    "start": "1103289",
    "end": "1108899"
  },
  {
    "text": "customer and to do that we use the same features that are used by containers to partition our servers like C groups for",
    "start": "1108899",
    "end": "1116039"
  },
  {
    "text": "example so these are operating systems Linux primitives that we use to enforce and create a sandbox but we were not",
    "start": "1116039",
    "end": "1122850"
  },
  {
    "text": "trusting this sandbox for security so even if it was not public we never run",
    "start": "1122850",
    "end": "1128600"
  },
  {
    "text": "two functions of two customers on the same virtual machine at the same time",
    "start": "1128600",
    "end": "1134130"
  },
  {
    "text": "because we were not trusting the security so it was quite inefficient for us to run lambda functions in this way",
    "start": "1134130",
    "end": "1139889"
  },
  {
    "text": "so that's why we developed internally firecracker that is used by lambda and it's used also by Fargate so the server",
    "start": "1139889",
    "end": "1146370"
  },
  {
    "text": "les container that it's in the other track so I just barely mentioning it but the idea of firecracker is micro VM that",
    "start": "1146370",
    "end": "1152880"
  },
  {
    "text": "now runs on ec2 bare-metal instances so where we are direct access to the bare",
    "start": "1152880",
    "end": "1158639"
  },
  {
    "text": "metal of the instances and those micro VM can start very fast so they start in less than 125 millisecond and of course",
    "start": "1158639",
    "end": "1167549"
  },
  {
    "text": "this is not affecting cold-start because we can pre provision the VMS before you",
    "start": "1167549",
    "end": "1172590"
  },
  {
    "text": "start the function they are ready for it to be used and we can start lots of VM",
    "start": "1172590",
    "end": "1177990"
  },
  {
    "text": "so we can start 150 micro VMS per per second and we can have thousands of",
    "start": "1177990",
    "end": "1184769"
  },
  {
    "text": "micro VMS in a single physical server so it's very it's much much more efficient for us to do that and firecracker that",
    "start": "1184769",
    "end": "1191880"
  },
  {
    "text": "is used by a double is lambda it's used by far gate it's open source so we",
    "start": "1191880",
    "end": "1197730"
  },
  {
    "text": "release it in open source with an Apache 2 license so if you're into there's a very nice page and github repo",
    "start": "1197730",
    "end": "1203510"
  },
  {
    "text": "with a with a slack channel also if you want to interact with core developers and we are not working to integrate for",
    "start": "1203510",
    "end": "1209990"
  },
  {
    "text": "cracker with other environments and other open-source projects so this is",
    "start": "1209990",
    "end": "1215780"
  },
  {
    "text": "really improving the way we can manage security with lambda functions at scale",
    "start": "1215780",
    "end": "1221420"
  },
  {
    "text": "in an efficient way what about new development partners",
    "start": "1221420",
    "end": "1227330"
  },
  {
    "text": "buttons so here we do in the year this year we integrated sqs as an event",
    "start": "1227330",
    "end": "1236000"
  },
  {
    "text": "source for lambda so our message queue it's a very efficient integration so if you need to process lots of message in a",
    "start": "1236000",
    "end": "1243110"
  },
  {
    "text": "queue synchronously with a lambda function it's definitely a new pattern that you can use we also improved the",
    "start": "1243110",
    "end": "1250490"
  },
  {
    "text": "integration with Kinesis our streaming platform previously since with Canisius",
    "start": "1250490",
    "end": "1257840"
  },
  {
    "text": "you you need to preserve order we were using only a single lambda function so",
    "start": "1257840",
    "end": "1264260"
  },
  {
    "text": "that could be a bottleneck and there were some pattern to overcome that but it was complexity on your side on the",
    "start": "1264260",
    "end": "1270590"
  },
  {
    "text": "customer side now you can have up to 20 lambda function consuming the data from",
    "start": "1270590",
    "end": "1276020"
  },
  {
    "text": "a single Kinesis data stream so it's much more efficient and we also now support the new HTTP 2 based interface",
    "start": "1276020",
    "end": "1283520"
  },
  {
    "text": "of Kinesis that is much faster than the previous HTTP 1.1 api so this is much",
    "start": "1283520",
    "end": "1291560"
  },
  {
    "text": "much faster to process we also saw over the last couple of years different kind",
    "start": "1291560",
    "end": "1298190"
  },
  {
    "text": "of workloads on lambda we've seen more heavy data analytics workloads being",
    "start": "1298190",
    "end": "1303560"
  },
  {
    "text": "moved into the server less world so that's why we increase the time out of",
    "start": "1303560",
    "end": "1308720"
  },
  {
    "text": "functions from 5 minutes to 15 minutes so that you can process more information and we also doubled the the maximum",
    "start": "1308720",
    "end": "1316160"
  },
  {
    "text": "payload that you can pass to a lambda function when you invoke it or synchronously so it's now 256 kilobyte",
    "start": "1316160",
    "end": "1322190"
  },
  {
    "text": "of course if you need more data you can still send store the data on s3 and give the link to a3 to the lambda function",
    "start": "1322190",
    "end": "1329060"
  },
  {
    "text": "this is still working but if you need speed you can now send more data directly in location of the function on the API we",
    "start": "1329060",
    "end": "1336879"
  },
  {
    "text": "also worked to improve how we you can create api's with the API gateway on the",
    "start": "1336879",
    "end": "1344259"
  },
  {
    "text": "policies on how you can use custom authorizes across accounts we increase",
    "start": "1344259",
    "end": "1349389"
  },
  {
    "text": "the limits and in the of the api's and we also introduced private api's so the",
    "start": "1349389",
    "end": "1355960"
  },
  {
    "text": "idea is that the api gateway now can be used really for lots of different use cases because it also supports private",
    "start": "1355960",
    "end": "1362679"
  },
  {
    "text": "api's so you can receive an api request from the internet and this is what we",
    "start": "1362679",
    "end": "1369159"
  },
  {
    "text": "call an edge optimized api that means that it's automatically optimized by using our content distribution network",
    "start": "1369159",
    "end": "1376929"
  },
  {
    "text": "with CloudFront or if you prefer to be regional so you don't want to have this kind of",
    "start": "1376929",
    "end": "1382929"
  },
  {
    "text": "optimization but you want to really get out of the internet specifically in one region for example you want to get out",
    "start": "1382929",
    "end": "1389469"
  },
  {
    "text": "in ireland or you want to get out in frankfurt you can use the original api's or you can now with private api's serve",
    "start": "1389469",
    "end": "1397539"
  },
  {
    "text": "private api's within a customer VPC between a virtual private cloud so in",
    "start": "1397539",
    "end": "1402609"
  },
  {
    "text": "between a willful data center that you bid on Allah bless so this is enabling a new use case when you build micro",
    "start": "1402609",
    "end": "1408580"
  },
  {
    "text": "services for example and you create internal api's you can serve them through the API gateway with all the advantage of API management that api",
    "start": "1408580",
    "end": "1415570"
  },
  {
    "text": "Gately provides and on the other side the destination can also be the internet",
    "start": "1415570",
    "end": "1420820"
  },
  {
    "text": "so you can call us the integration what we call so the implementation of the API",
    "start": "1420820",
    "end": "1427269"
  },
  {
    "text": "anything that is available on internet at regional level within AWS or within",
    "start": "1427269",
    "end": "1432369"
  },
  {
    "text": "our customers VDC so this really and you can have lots of these different",
    "start": "1432369",
    "end": "1438279"
  },
  {
    "text": "permutations here so it's opening lots of different use cases for one of the",
    "start": "1438279",
    "end": "1444879"
  },
  {
    "text": "launch that we had a dream vent was related to workflows managing business",
    "start": "1444879",
    "end": "1450489"
  },
  {
    "text": "were close I think is critical for companies in Amazon we have roughly 20 different workflow engines because",
    "start": "1450489",
    "end": "1456849"
  },
  {
    "text": "everybody is opinionated on how they want to manage their own api's even in AWS we have probably a",
    "start": "1456849",
    "end": "1463119"
  },
  {
    "text": "couple of services in the space but the most recent and probably the most easy to use is now step functions and with step",
    "start": "1463119",
    "end": "1470169"
  },
  {
    "text": "function you define this state machine where the state is transitioning through tasks and mainly tasks were lambda",
    "start": "1470169",
    "end": "1478900"
  },
  {
    "text": "functions or activities that run outside of the platform they can run on",
    "start": "1478900",
    "end": "1484720"
  },
  {
    "text": "containers on ec2 instances this was",
    "start": "1484720",
    "end": "1489940"
  },
  {
    "text": "before event but we saw that lots of the time there was similar integrations so",
    "start": "1489940",
    "end": "1495520"
  },
  {
    "text": "we launched native integration integration with lots of different services so you can now from a state",
    "start": "1495520",
    "end": "1500950"
  },
  {
    "text": "function of a task that starts and ECS tasks confer gate and this is normally",
    "start": "1500950",
    "end": "1508539"
  },
  {
    "text": "on a synchronous operation so you launch a task and it can take one second on or three hours and normally you need to",
    "start": "1508539",
    "end": "1515200"
  },
  {
    "text": "check for the state all these complexities now managed by the platform so you call those a synchronous",
    "start": "1515200",
    "end": "1521470"
  },
  {
    "text": "invocation like they were synchronous so you say start this task when it ends send me back the result and go to the",
    "start": "1521470",
    "end": "1527350"
  },
  {
    "text": "next step of my state machine and the same for AWS batch batch is a batch",
    "start": "1527350",
    "end": "1535090"
  },
  {
    "text": "engine for batch processing normally it's used heavily in industries like oil",
    "start": "1535090",
    "end": "1540460"
  },
  {
    "text": "gas oil and gas but anytime you have a large batch analytical work load that",
    "start": "1540460",
    "end": "1546280"
  },
  {
    "text": "you want to optimize and execute Attalus batch can help you provide you the necessary infrastructure is container",
    "start": "1546280",
    "end": "1553720"
  },
  {
    "text": "based it's very interesting management platform also Amazon Sage Maker it's the",
    "start": "1553720",
    "end": "1561850"
  },
  {
    "text": "platform that we created for developers to use and build and machine learning",
    "start": "1561850",
    "end": "1568570"
  },
  {
    "text": "models you can now start the training of a new machine learning model or apply a",
    "start": "1568570",
    "end": "1573909"
  },
  {
    "text": "machine learning model to a batch set of data set from a task in the state",
    "start": "1573909",
    "end": "1582340"
  },
  {
    "text": "function in a state function a state machine glue for managing ETL processes and you can also directly read them",
    "start": "1582340",
    "end": "1589840"
  },
  {
    "text": "right from dynamodb so for example if you want to read the configuration or update some",
    "start": "1589840",
    "end": "1595410"
  },
  {
    "text": "would it be as the result of your state step function and also you can publish a",
    "start": "1595410",
    "end": "1601920"
  },
  {
    "text": "notification on SNS our notification platform or you can insert a message in",
    "start": "1601920",
    "end": "1608340"
  },
  {
    "text": "at you so this to integration are really helpful if you want to integrate maybe a",
    "start": "1608340",
    "end": "1613950"
  },
  {
    "text": "step a state machine with an external product or external service using",
    "start": "1613950",
    "end": "1619500"
  },
  {
    "text": "traditional message queuing or publish and subscribe technologies so now step functions can use tasks from all of",
    "start": "1619500",
    "end": "1627090"
  },
  {
    "text": "those service natively so you can really reduce the number of lines of code and for all those they are synchronous",
    "start": "1627090",
    "end": "1632940"
  },
  {
    "text": "invocation we are managing their synchronous the synchronous call and waiting for the result so for example",
    "start": "1632940",
    "end": "1640350"
  },
  {
    "text": "this was a classical example of a state machine submitting a job somewhere maybe",
    "start": "1640350",
    "end": "1646440"
  },
  {
    "text": "another dress batch or own containers so you were to submit the job but then wait for some seconds check if this job is",
    "start": "1646440",
    "end": "1653820"
  },
  {
    "text": "still running and then if it is complete you go on otherwise you wait another second so this was the way of polling a",
    "start": "1653820",
    "end": "1660390"
  },
  {
    "text": "traditional a synchronous invocation now that those are integrated natively you just say start on a synchronous batch",
    "start": "1660390",
    "end": "1667830"
  },
  {
    "text": "job when it's finished if it's finished correctly do this if you get an error to that it's much much easier to visualize",
    "start": "1667830",
    "end": "1674730"
  },
  {
    "text": "the logic of your of your state machine",
    "start": "1674730",
    "end": "1679580"
  },
  {
    "text": "another integration that we launched at reinvent was with the four lambda with",
    "start": "1680570",
    "end": "1687510"
  },
  {
    "text": "the application load balancer so normally to provide an HTTP interface to a lambda function you were to use the",
    "start": "1687510",
    "end": "1694110"
  },
  {
    "text": "API gateway there is also an active lambda invoke API that you can use for",
    "start": "1694110",
    "end": "1700170"
  },
  {
    "text": "example but it's but you must use the SS API syntax now we also provide the",
    "start": "1700170",
    "end": "1707010"
  },
  {
    "text": "possibility to call a lambda function from an application load balancer and there are two main advantages here from",
    "start": "1707010",
    "end": "1715710"
  },
  {
    "text": "an enterprise or a company integration point the application of balancer is",
    "start": "1715710",
    "end": "1720930"
  },
  {
    "text": "supporting security groups and VPC networking so it's much easier for",
    "start": "1720930",
    "end": "1726210"
  },
  {
    "text": "unaccompanied he's already using VPC based infrastructure to integrate",
    "start": "1726210",
    "end": "1731790"
  },
  {
    "text": "the application load balancer and then eventually call along the function in the back so it's the integration is",
    "start": "1731790",
    "end": "1737550"
  },
  {
    "text": "simpler and if you want to migrate a workload from a traditional architecture to server less you can use the strangle",
    "start": "1737550",
    "end": "1744570"
  },
  {
    "text": "pattern so maybe you have your application or balancer that is calling a traditional infrastructure on ec2 or",
    "start": "1744570",
    "end": "1750000"
  },
  {
    "text": "on containers and then you can introduce lambda and move the workload to lambda without changing the interface for the",
    "start": "1750000",
    "end": "1756990"
  },
  {
    "text": "internal consumer of the application from a price standpoint I didn't do an",
    "start": "1756990",
    "end": "1762540"
  },
  {
    "text": "extensive comparison but the application load balancer you pay mostly by the time way by the time plus also the",
    "start": "1762540",
    "end": "1769470"
  },
  {
    "text": "computation of the that is required by the data so what I expect is if you have",
    "start": "1769470",
    "end": "1774810"
  },
  {
    "text": "a high volume of Web API calls and those API calls have a small payload because",
    "start": "1774810",
    "end": "1780510"
  },
  {
    "text": "maybe they are a lot of data then probably the application load balancer result can also be cheaper than the API",
    "start": "1780510",
    "end": "1787050"
  },
  {
    "text": "gateway so high volumes with small payloads it could be quite an interesting use case this is something",
    "start": "1787050",
    "end": "1795540"
  },
  {
    "text": "that we pre announce after event is still not available but we're working hard this week we also have a webinar in",
    "start": "1795540",
    "end": "1802440"
  },
  {
    "text": "the US and specifically on this topic topic so the idea is to provide an active server a web socket interface in",
    "start": "1802440",
    "end": "1810000"
  },
  {
    "text": "the to the Amazon API gateway so normally they play gator is receiving API call using the HTTP protocol but we",
    "start": "1810000",
    "end": "1817860"
  },
  {
    "text": "see lots of use cases where you need a real-time bi-directional communication",
    "start": "1817860",
    "end": "1823320"
  },
  {
    "text": "between the client consuming the API and then the API gateway normally you now",
    "start": "1823320",
    "end": "1829440"
  },
  {
    "text": "you can do that with some hacks for example custom customer they use AWS IOT without physical IOT resources to do",
    "start": "1829440",
    "end": "1836160"
  },
  {
    "text": "that but we think that this ways will be much easier so the idea is that the API",
    "start": "1836160",
    "end": "1841260"
  },
  {
    "text": "gate we will manage the stateful connection for us WebSockets with the",
    "start": "1841260",
    "end": "1847050"
  },
  {
    "text": "client so mobile app web application IOT devices and then they will there will be",
    "start": "1847050",
    "end": "1854160"
  },
  {
    "text": "the traditional stateless architecture in the backend the APA gate we can call depending on",
    "start": "1854160",
    "end": "1860190"
  },
  {
    "text": "the API call a lambda function or something running on ec2 or an external",
    "start": "1860190",
    "end": "1865409"
  },
  {
    "text": "API and in this case we will pass an endpoint that became for example the",
    "start": "1865409",
    "end": "1871980"
  },
  {
    "text": "lambda function can use to publish messages back so if we receive a message on the WebSocket we send it for example",
    "start": "1871980",
    "end": "1878129"
  },
  {
    "text": "to the lambda function and we also give the end point that the lambda function can use to publish messages back to the",
    "start": "1878129",
    "end": "1884850"
  },
  {
    "text": "platform so that they can push information using web service to the client so this is quite interesting",
    "start": "1884850",
    "end": "1890399"
  },
  {
    "text": "we're working on releasing that very soon and if you're interested as I said there is a webinar this week minimizing",
    "start": "1890399",
    "end": "1900299"
  },
  {
    "text": "the the code that is really not unique for you here we launched something that",
    "start": "1900299",
    "end": "1907860"
  },
  {
    "text": "probably one of my favorite lunches at reinvent its de la is lambda layers so",
    "start": "1907860",
    "end": "1913019"
  },
  {
    "text": "normally with lambda function you were to when you were to create a function or",
    "start": "1913019",
    "end": "1919619"
  },
  {
    "text": "update a function every time you need to build all that and take all the dependencies and put them in the zip",
    "start": "1919619",
    "end": "1924779"
  },
  {
    "text": "file that you use to upload your lambda function to AWS and even if the same",
    "start": "1924779",
    "end": "1930779"
  },
  {
    "text": "code is shared across function you were to do that for every lambda function now you can create these layers that provide",
    "start": "1930779",
    "end": "1937309"
  },
  {
    "text": "the usherette container that is referential but can be referenced by",
    "start": "1937309",
    "end": "1943080"
  },
  {
    "text": "multiple lambda functions and this is giving a couple of advantages because",
    "start": "1943080",
    "end": "1948450"
  },
  {
    "text": "now deployment of updates is much faster you just need to update the function code and don't upload the dependencies",
    "start": "1948450",
    "end": "1955080"
  },
  {
    "text": "and it's also creating new roles and responsibilities because maybe companies they can have standard layers that can",
    "start": "1955080",
    "end": "1961320"
  },
  {
    "text": "provide with management and security modules that you might need to use but",
    "start": "1961320",
    "end": "1966960"
  },
  {
    "text": "we will dive deeper into that in the next session so I just spending a few words here another interesting launch",
    "start": "1966960",
    "end": "1976580"
  },
  {
    "text": "was netted nested applications for the surveillance application 43 and the idea",
    "start": "1976580",
    "end": "1983369"
  },
  {
    "text": "here is that we created this repository where you can share whole service",
    "start": "1983369",
    "end": "1988649"
  },
  {
    "text": "applications that solve some specific problem and you can share this",
    "start": "1988649",
    "end": "1994080"
  },
  {
    "text": "application internally to your account within a company or you can share application publicly and what we see is",
    "start": "1994080",
    "end": "2001760"
  },
  {
    "text": "this customer they want to share also components that they can use together to simplify the implementation of any",
    "start": "2001760",
    "end": "2007850"
  },
  {
    "text": "application so now when you create a Severus application you can some point reference a whole application or",
    "start": "2007850",
    "end": "2017570"
  },
  {
    "text": "application component that is owned on the under repository and integrate that with your application with very like a",
    "start": "2017570",
    "end": "2023990"
  },
  {
    "text": "few lines of code and you don't need to copy and paste those application inside your code you just say here I want this",
    "start": "2023990",
    "end": "2029810"
  },
  {
    "text": "application solving this specifical problem and this is it any way to integrate this component with my",
    "start": "2029810",
    "end": "2035330"
  },
  {
    "text": "application this is quite a strange concept I understand so that's why at the end I have a better example that put",
    "start": "2035330",
    "end": "2041600"
  },
  {
    "text": "can put this into context but I think it's really up one of the most powerful announcements what about developers and",
    "start": "2041600",
    "end": "2050060"
  },
  {
    "text": "operations so here we worked this year to add support for new languages",
    "start": "2050060",
    "end": "2056990"
  },
  {
    "text": "ordering 2018 we had support for Go Go is quite an interesting platform for a",
    "start": "2056990",
    "end": "2063050"
  },
  {
    "text": "lambda functions for example Capital One the use case that I mentioned before",
    "start": "2063050",
    "end": "2068419"
  },
  {
    "text": "they started with Java mostly to recycle what they already did internally but then they migrated to go for two main",
    "start": "2068420",
    "end": "2075379"
  },
  {
    "text": "reason one was that they wanted to experiment with the new features of go and also they wanted to reduce the",
    "start": "2075380",
    "end": "2082220"
  },
  {
    "text": "effect of cold start that can be a little bit higher with the Java platform that JVM eight is not has not been",
    "start": "2082220",
    "end": "2089090"
  },
  {
    "text": "designed for short living process so they get better performance and they and",
    "start": "2089090",
    "end": "2094310"
  },
  {
    "text": "they also they also told me that the developers are much happier not because in large companies in the past you were",
    "start": "2094310",
    "end": "2100460"
  },
  {
    "text": "used to work always on the same stack now you work for a company that is using Java and you work with Java your whole",
    "start": "2100460",
    "end": "2106520"
  },
  {
    "text": "life now the idea that you create these smaller components like micro services with lambda functions and you can use",
    "start": "2106520",
    "end": "2113330"
  },
  {
    "text": "different toolkits different languages is really an interesting perspective for them we also",
    "start": "2113330",
    "end": "2119090"
  },
  {
    "text": "added updated support for dotnet core to version 2.0 we had the support native support for",
    "start": "2119090",
    "end": "2125440"
  },
  {
    "text": "powershell scripts we recently updated also the python engine to the latest version to version 2 to Python 3 point 7",
    "start": "2125440",
    "end": "2132990"
  },
  {
    "text": "and we also work to simplify the way you",
    "start": "2132990",
    "end": "2138010"
  },
  {
    "text": "use the API gateway so for example if you want to create a developer portal inside your company where you share your",
    "start": "2138010",
    "end": "2144490"
  },
  {
    "text": "api's you advertise the internal api's we created a framework that you can get",
    "start": "2144490",
    "end": "2149530"
  },
  {
    "text": "from github it's open source and you can use it off the shelf or customize it if",
    "start": "2149530",
    "end": "2155290"
  },
  {
    "text": "you need it we integrated the API gateway with the Web Application Firewall natively so it's much easier",
    "start": "2155290",
    "end": "2160630"
  },
  {
    "text": "now to protect at layer 7 your API from different kind of attacks we integrated",
    "start": "2160630",
    "end": "2167920"
  },
  {
    "text": "the APA gateway with a wi6 ray for tracing and monitoring of your service",
    "start": "2167920",
    "end": "2173650"
  },
  {
    "text": "architectures and we also work to improve tooling so for example if you",
    "start": "2173650",
    "end": "2178750"
  },
  {
    "text": "want to create a lambda function and expose the lambda function with the API gateway now you can do everything from",
    "start": "2178750",
    "end": "2184150"
  },
  {
    "text": "the lambda console you don't need to go to the API gateway console it's just really an easy configuration we",
    "start": "2184150",
    "end": "2190450"
  },
  {
    "text": "completely rewrote the old Sam local is now called the some CLI the same",
    "start": "2190450",
    "end": "2197350"
  },
  {
    "text": "disabled application model command-line interface it's open source and can now",
    "start": "2197350",
    "end": "2203290"
  },
  {
    "text": "the bug also other languages at the beginning for debugging not GS and M",
    "start": "2203290",
    "end": "2209260"
  },
  {
    "text": "Python and now we can debug also the languages such as go",
    "start": "2209260",
    "end": "2214530"
  },
  {
    "text": "and also we improved how you search application on the rails application",
    "start": "2214990",
    "end": "2220870"
  },
  {
    "text": "repository and we also added support for new components in the insider so now so",
    "start": "2220870",
    "end": "2228370"
  },
  {
    "text": "when we create when we created start we try to limit the number of things that you could use in an application that you",
    "start": "2228370",
    "end": "2234730"
  },
  {
    "text": "would share because of the security implication if you start a service application from SAR its installed",
    "start": "2234730",
    "end": "2241870"
  },
  {
    "text": "inside your account so it's it's something that we wanted to really understand the impact of and now that",
    "start": "2241870",
    "end": "2248740"
  },
  {
    "text": "we're getting more experience we had the support for other features that we think can really help the creation of",
    "start": "2248740",
    "end": "2255430"
  },
  {
    "text": "application service such as the functions who asked us and so on here",
    "start": "2255430",
    "end": "2263140"
  },
  {
    "text": "the big launch was probably the the support for lamda now for custom runtimes so we fear that a stand up the",
    "start": "2263140",
    "end": "2269800"
  },
  {
    "text": "runtime api and you can use this API to bring anything that can run on Linux as",
    "start": "2269800",
    "end": "2275650"
  },
  {
    "text": "a language that you won't like to use with lambda you can use this to add a new programming language or to add",
    "start": "2275650",
    "end": "2282160"
  },
  {
    "text": "specific version of programming languages that maybe we don't support and this is also the new API that we are",
    "start": "2282160",
    "end": "2288579"
  },
  {
    "text": "going to use for new languages that we support natively for example atrovent we added support for Ruby so now Ruby 2.5",
    "start": "2288579",
    "end": "2296079"
  },
  {
    "text": "is natively supported as a runtime with lambda and and this is based on the",
    "start": "2296079",
    "end": "2303369"
  },
  {
    "text": "runtime api so the same API that you can use to add support for other languages and we work with our partners to add",
    "start": "2303369",
    "end": "2309609"
  },
  {
    "text": "other platforms or a lot such as PHP air long and so on and we will that deep",
    "start": "2309609",
    "end": "2315490"
  },
  {
    "text": "into the runtime api in the next session and the idea is that you can also use",
    "start": "2315490",
    "end": "2320559"
  },
  {
    "text": "layers to distribute runtime so it's much easier to use also those to",
    "start": "2320559",
    "end": "2326890"
  },
  {
    "text": "simplify the management of and the development of application we now have an application view in the lambda",
    "start": "2326890",
    "end": "2332140"
  },
  {
    "text": "console that shows you the whole service application taken from transformation",
    "start": "2332140",
    "end": "2337359"
  },
  {
    "text": "all the components the functions they are the components that you use such as dynamodb tables or s3 buckets and you",
    "start": "2337359",
    "end": "2345579"
  },
  {
    "text": "also get the monitoring of your single applications so it's it's an interesting",
    "start": "2345579",
    "end": "2350650"
  },
  {
    "text": "panel if you have a service application that is built using transformations",
    "start": "2350650",
    "end": "2357359"
  },
  {
    "text": "information it's really a nice way of monitoring that application and we also",
    "start": "2357359",
    "end": "2363270"
  },
  {
    "text": "created new toolkits for IDs because every developer has their own favorite",
    "start": "2363270",
    "end": "2369490"
  },
  {
    "text": "favorite development environment so it's now generally available the toolkit for",
    "start": "2369490",
    "end": "2376450"
  },
  {
    "text": "a pycharm and we ever Developer Preview for IntelliJ and Visual Studio code",
    "start": "2376450",
    "end": "2381990"
  },
  {
    "text": "those developer previews are available on github because all those toolkits are open source",
    "start": "2381990",
    "end": "2388070"
  },
  {
    "text": "and the idea is that if you use PyCharm IntelliJ or visa studio code you really",
    "start": "2388070",
    "end": "2393170"
  },
  {
    "text": "want to file to help you have a integrated environment where you can mount or deploy debug locally run",
    "start": "2393170",
    "end": "2401240"
  },
  {
    "text": "locally or remotely severus applications easily what are other important launches",
    "start": "2401240",
    "end": "2411080"
  },
  {
    "text": "so there were a few other important countries that are relevant for the several space",
    "start": "2411080",
    "end": "2416560"
  },
  {
    "text": "the first one is DynamoDB on demand so anybody here using DynamoDB ok so you",
    "start": "2416560",
    "end": "2424340"
  },
  {
    "text": "know maybe normally you create you have to set the throughput per table you have to say how many reads and how many",
    "start": "2424340",
    "end": "2430130"
  },
  {
    "text": "writes you need for each table per second and then we will manage the infrastructure for you and then you pay",
    "start": "2430130",
    "end": "2436820"
  },
  {
    "text": "by this throughput the idea is that lots of customers they don't know exactly how",
    "start": "2436820",
    "end": "2442370"
  },
  {
    "text": "much throughput AF then maybe they have workload with spikes maybe periodic spikes and this was not",
    "start": "2442370",
    "end": "2448100"
  },
  {
    "text": "really easy to manage so now we introduce a new capacity mode so you can",
    "start": "2448100",
    "end": "2453980"
  },
  {
    "text": "now use the not just a standard provision edit mode but also the own",
    "start": "2453980",
    "end": "2460460"
  },
  {
    "text": "demand capacity mode if you choose on demand your table can scale to thousands",
    "start": "2460460",
    "end": "2465560"
  },
  {
    "text": "and thousands of transaction per second without any configuration and you pay by the exact number of reads and writes",
    "start": "2465560",
    "end": "2472160"
  },
  {
    "text": "that you have on your table so for from a management perspective you really",
    "start": "2472160",
    "end": "2477200"
  },
  {
    "text": "don't need to do capacity planning to give you an idea if you need to go the",
    "start": "2477200",
    "end": "2484180"
  },
  {
    "text": "limit that you having capacity is the limit of your account so if you go into your account you can see that the number",
    "start": "2484180",
    "end": "2490700"
  },
  {
    "text": "the maximum number of reads and writes per seconds that you can have with your DynamoDB table if you need more than that you can open at a standard limit",
    "start": "2490700",
    "end": "2498890"
  },
  {
    "text": "case with the WS to increase this limit but you really don't need to do capacity planning anymore from a price point of",
    "start": "2498890",
    "end": "2506150"
  },
  {
    "text": "view this is most of the time cheaper but if",
    "start": "2506150",
    "end": "2511900"
  },
  {
    "text": "you have a very stable worker also if you can get closer to the true put most of the time then the traditional",
    "start": "2511900",
    "end": "2517359"
  },
  {
    "text": "provisional approach is still cheaper but if you have anything like spikes or",
    "start": "2517359",
    "end": "2522460"
  },
  {
    "text": "you really don't know or you know don't consume most of your promotions throughput all of the time then probably",
    "start": "2522460",
    "end": "2529059"
  },
  {
    "text": "the capacity mod is cheaper good news is that you can enable and disable deep and",
    "start": "2529059",
    "end": "2534609"
  },
  {
    "text": "change this flag in your table a once per day so if you want to test you can",
    "start": "2534609",
    "end": "2541150"
  },
  {
    "text": "just enable it test it and then go back if you don't if you see the price is",
    "start": "2541150",
    "end": "2547270"
  },
  {
    "text": "higher or if you don't like it or you can stay on demand for as much time as",
    "start": "2547270",
    "end": "2552309"
  },
  {
    "text": "you want when I also tried for example",
    "start": "2552309",
    "end": "2558510"
  },
  {
    "text": "in the blog post here for than will be on the manic I built a civilized application with the API gateway lambda",
    "start": "2558510",
    "end": "2565480"
  },
  {
    "text": "functions providing a sort of rest interface to DynamoDB and then I started",
    "start": "2565480",
    "end": "2571150"
  },
  {
    "text": "1,000 lambda function in parallel for 60 second literally bombarding dynamodb",
    "start": "2571150",
    "end": "2576849"
  },
  {
    "text": "through the API gateway with requests each of those 1000 lambda function were running multiple requests in parallel",
    "start": "2576849",
    "end": "2584069"
  },
  {
    "text": "and I reached a throughput of four five thousand so for four thousand writes per",
    "start": "2584069",
    "end": "2591910"
  },
  {
    "text": "second and 1000 reads per seconds in 60 second and this is not a benchmark is something that just I started without",
    "start": "2591910",
    "end": "2598059"
  },
  {
    "text": "any ramp up so from zero all the all this function started at once run for 60",
    "start": "2598059",
    "end": "2604150"
  },
  {
    "text": "seconds and then they terminated so it gives you an idea of the flexibility that you get from the on-demand platform",
    "start": "2604150",
    "end": "2611549"
  },
  {
    "text": "another super interesting announcement announcement for dynamodb is the native",
    "start": "2611940",
    "end": "2617170"
  },
  {
    "text": "support for transactions I do believe that DynamoDB is I think really the only",
    "start": "2617170",
    "end": "2622599"
  },
  {
    "text": "no sequel database that has such an advanced support for transactions now and you can now create transactions",
    "start": "2622599",
    "end": "2629380"
  },
  {
    "text": "across different tables in the same region and in the same AWS account so",
    "start": "2629380",
    "end": "2635020"
  },
  {
    "text": "the only limit is the region and AWS account and you can create transactions within a single table or multiple tables",
    "start": "2635020",
    "end": "2641090"
  },
  {
    "text": "and the way it works you have something like transact write items where you say",
    "start": "2641090",
    "end": "2647900"
  },
  {
    "text": "I want to start a transaction then you can list the updates the inserts that you want to do if you need to in each of",
    "start": "2647900",
    "end": "2655850"
  },
  {
    "text": "these updates and inserts can also include conditional checks that must be valid for the transaction to succeed and",
    "start": "2655850",
    "end": "2662990"
  },
  {
    "text": "if you have a check on an item that is not updated in the transaction we",
    "start": "2662990",
    "end": "2668030"
  },
  {
    "text": "created a new statement that is a conditional check that you can run so for example if the value of this record",
    "start": "2668030",
    "end": "2673100"
  },
  {
    "text": "in this table is greater than this then update these other three records in this",
    "start": "2673100",
    "end": "2678740"
  },
  {
    "text": "other table this is an example that I built for a like the idea of a game",
    "start": "2678740",
    "end": "2683780"
  },
  {
    "text": "where you have an items table let me zoom a little bit here so that you can",
    "start": "2683780",
    "end": "2689960"
  },
  {
    "text": "see it a little bit better so the idea",
    "start": "2689960",
    "end": "2696470"
  },
  {
    "text": "here is that you have a table with items that players of this game can buy for",
    "start": "2696470",
    "end": "2701720"
  },
  {
    "text": "example and here what if you want to buy what I do I want to update the items table the condition is that the item is",
    "start": "2701720",
    "end": "2709250"
  },
  {
    "text": "available if it is available then set available to false and set the owned by",
    "start": "2709250",
    "end": "2715310"
  },
  {
    "text": "property with the player name and then in the players table I need to check",
    "start": "2715310",
    "end": "2721760"
  },
  {
    "text": "that the coins of the player is greater than the price of the item and if this",
    "start": "2721760",
    "end": "2726770"
  },
  {
    "text": "is true then set the coins equal to the coins minus the price and then append",
    "start": "2726770",
    "end": "2732320"
  },
  {
    "text": "this item to the inventory list because there would be a document support so you",
    "start": "2732320",
    "end": "2737840"
  },
  {
    "text": "create an inventory as a list of all the items that the players as both and for this transaction to 6 you need the item",
    "start": "2737840",
    "end": "2744650"
  },
  {
    "text": "to be available and the player to add enough money to buy the item so building the same things without transaction is",
    "start": "2744650",
    "end": "2751850"
  },
  {
    "text": "possible but puts lots of complexity in the clients development because you may need to do multiple steps and to to to",
    "start": "2751850",
    "end": "2758840"
  },
  {
    "text": "to coordinate these activities across tables so now it's much much easier so I'm really looking forward to see what",
    "start": "2758840",
    "end": "2765050"
  },
  {
    "text": "you're going to build with transactions from a cost point of view any",
    "start": "2765050",
    "end": "2771190"
  },
  {
    "text": "right in a transaction counts like two traditional rites from a true food",
    "start": "2771470",
    "end": "2776570"
  },
  {
    "text": "perspective or from a capacity perspective if you pay on demand this is because of course we need to like",
    "start": "2776570",
    "end": "2781910"
  },
  {
    "text": "prepare the value and then be update or rollback in case the transaction goes on",
    "start": "2781910",
    "end": "2787910"
  },
  {
    "text": "and this is a transaction so these two updates will either be successful at once or or they will or they will not",
    "start": "2787910",
    "end": "2795560"
  },
  {
    "text": "show neither of those it's really a big simplification for using DynamoDB for",
    "start": "2795560",
    "end": "2801610"
  },
  {
    "text": "complex processing if you need to do",
    "start": "2801610",
    "end": "2806690"
  },
  {
    "text": "financial transactions within DynamoDB now it's much much easier to build something really resilient and another",
    "start": "2806690",
    "end": "2812990"
  },
  {
    "text": "announcement that I think was interesting from the server space is is in preview currently you can apply to",
    "start": "2812990",
    "end": "2819710"
  },
  {
    "text": "the preview is the new s3 batch operation for object management so what",
    "start": "2819710",
    "end": "2825320"
  },
  {
    "text": "we saw is that sometimes customer they just don't adjust to react when you upload something to s3 maybe they want",
    "start": "2825320",
    "end": "2831710"
  },
  {
    "text": "to run something on data that is already on s3 they want to run a batch operation",
    "start": "2831710",
    "end": "2836960"
  },
  {
    "text": "on a large subset if not on all the objects that they have in an history bucket so that's what the new s3 batch",
    "start": "2836960",
    "end": "2844310"
  },
  {
    "text": "operation supports you can do different operations not just lambda function but the specific cases you can run a lambda",
    "start": "2844310",
    "end": "2851270"
  },
  {
    "text": "function for all the object or a large subset of objects it is a mystery you provide a list of files or s3 as",
    "start": "2851270",
    "end": "2858470"
  },
  {
    "text": "natively the support for inventory so you can during the night the s3 can",
    "start": "2858470",
    "end": "2864770"
  },
  {
    "text": "daily create an inventory of your item and then you can say apply this lambda function to all the objects in this",
    "start": "2864770",
    "end": "2870530"
  },
  {
    "text": "inventory or to all the objects in this list that I provide and we will manage all the execution for you and you can",
    "start": "2870530",
    "end": "2877700"
  },
  {
    "text": "process millions if not billions of items very easily something that normally requires lots of customization",
    "start": "2877700",
    "end": "2884600"
  },
  {
    "text": "on your side if you need to reprocess lots of objects so in this way if for example if you get an s3 bucket with",
    "start": "2884600",
    "end": "2890240"
  },
  {
    "text": "lots of documents or images and you want to process all of those to index them in the metadata you can really very very",
    "start": "2890240",
    "end": "2896240"
  },
  {
    "text": "easily do that with a new batch operation let's go back to the nested apps to give",
    "start": "2896240",
    "end": "2905019"
  },
  {
    "text": "you an idea why the nested apps for the service application repository is quite interesting so the idea now is that if",
    "start": "2905019",
    "end": "2911859"
  },
  {
    "text": "you have something requiring a recurring problem we can just create the component and reduce it for example a very common",
    "start": "2911859",
    "end": "2918549"
  },
  {
    "text": "use case is reacting to social media lots of customer they say if something happens for example on Twitter there is",
    "start": "2918549",
    "end": "2924700"
  },
  {
    "text": "this specific handle or this specific search on Twitter I want to do something and that something is custom some people",
    "start": "2924700",
    "end": "2931599"
  },
  {
    "text": "want to store the tweet or analyze it with sentiment analysis other people want to just automate and create a reply",
    "start": "2931599",
    "end": "2937660"
  },
  {
    "text": "on Twitter for the automatically so we created as an example of how you can use",
    "start": "2937660",
    "end": "2943690"
  },
  {
    "text": "nested application a component that is in the service application repository that is called the Twitter event source",
    "start": "2943690",
    "end": "2949809"
  },
  {
    "text": "up that is automatically implement implementing our polling using calvache",
    "start": "2949809",
    "end": "2955630"
  },
  {
    "text": "events so that for example every minute is this component starts search on",
    "start": "2955630",
    "end": "2961180"
  },
  {
    "text": "Twitter and it's also storing the the check point because it whitter api is like a stream so you need to store the",
    "start": "2961180",
    "end": "2967359"
  },
  {
    "text": "check point so that you are sure that every time you search from the previous Check Point and you don't miss messages",
    "start": "2967359",
    "end": "2973950"
  },
  {
    "text": "and and the idea is that this runs for example every minute search for some",
    "start": "2973950",
    "end": "2979539"
  },
  {
    "text": "strings and then if you find something you pass it to your own castle a custom lambda function that is doing what you",
    "start": "2979539",
    "end": "2985539"
  },
  {
    "text": "want to do with these tweets so the only custom code here is in this lambda function you don't need to rebuild this",
    "start": "2985539",
    "end": "2991930"
  },
  {
    "text": "every time we provide this as a component there will be a session where",
    "start": "2991930",
    "end": "2997089"
  },
  {
    "text": "we talked today about Sam and the syntax so if you're not familiar with Sam bear",
    "start": "2997089",
    "end": "3003420"
  },
  {
    "text": "with me I mean it's not important to understand all the details but the idea is that in your symptom plate where you",
    "start": "3003420",
    "end": "3009299"
  },
  {
    "text": "describe your service application and all the components so my functions my three buckets my dynamodb tables you can",
    "start": "3009299",
    "end": "3016469"
  },
  {
    "text": "include an our service application like this so twitch source is a service application it's not something that I",
    "start": "3016469",
    "end": "3022799"
  },
  {
    "text": "want to build but is referencing this application that is in the repository so you get in the repository they are and",
    "start": "3022799",
    "end": "3029160"
  },
  {
    "text": "the unique Amazon resource name that in this link to this application so I say I",
    "start": "3029160",
    "end": "3035350"
  },
  {
    "text": "want to use this application those are the parameters of the application you get the parameters from the description",
    "start": "3035350",
    "end": "3041320"
  },
  {
    "text": "of the application so you need to provide a search text and this is the syntax of the Twitter Search API so I",
    "start": "3041320",
    "end": "3048340"
  },
  {
    "text": "need to search for server less native tweets and retweets I want to run this",
    "start": "3048340",
    "end": "3053980"
  },
  {
    "text": "every minute the batch sides I want to get 15 tweets at the time and the result",
    "start": "3053980",
    "end": "3063820"
  },
  {
    "text": "must be passed to this Twitter processor function name and this is your function",
    "start": "3063820",
    "end": "3069520"
  },
  {
    "text": "that normal is declared before or after in the template so your template you",
    "start": "3069520",
    "end": "3075460"
  },
  {
    "text": "really need to say this is my function and this is the code of the function and then you say this is part of this",
    "start": "3075460",
    "end": "3080710"
  },
  {
    "text": "application and must be invoked when there are two it's available so you no need to copy paste anything you just in",
    "start": "3080710",
    "end": "3087040"
  },
  {
    "text": "your code reference and application like this in the repo and integrate that with your own custom function I don't know if",
    "start": "3087040",
    "end": "3092860"
  },
  {
    "text": "this is simplifying or making things more complex for you but to me this example really gave me give me the idea",
    "start": "3092860",
    "end": "3098740"
  },
  {
    "text": "of what you can build and we're going really looking forward to see what kind of components customers we're going to",
    "start": "3098740",
    "end": "3104920"
  },
  {
    "text": "build in the in the repository to be reusable in the in this way with this",
    "start": "3104920",
    "end": "3111000"
  },
  {
    "text": "this is the end of the first session we have a few minutes so I'm more questions",
    "start": "3111000",
    "end": "3118420"
  },
  {
    "text": "are more than welcome and after this session we will we have a short break of 30 minutes and then we start again at",
    "start": "3118420",
    "end": "3125140"
  },
  {
    "text": "11:30 so any question thank you",
    "start": "3125140",
    "end": "3131220"
  },
  {
    "text": "any question what we saw yeah so we have",
    "start": "3133720",
    "end": "3148730"
  },
  {
    "text": "a few machine learning services that are probably they can be defined servers",
    "start": "3148730",
    "end": "3154430"
  },
  {
    "text": "because you use them as an API Amazon recognition can analyze pictures and videos and can look for example what are",
    "start": "3154430",
    "end": "3162470"
  },
  {
    "text": "the objects in the picture of the video well you can also recognize faces and can look at the sentiment of the faces",
    "start": "3162470",
    "end": "3168680"
  },
  {
    "text": "so if the face is happy sad and so on we also have another service that is Amazon",
    "start": "3168680",
    "end": "3174200"
  },
  {
    "text": "comprehend that can analyze text so for example for tweets or articles you can",
    "start": "3174200",
    "end": "3179720"
  },
  {
    "text": "analyze the text you can find entities you can find also the structure of the text and we can find what are the main",
    "start": "3179720",
    "end": "3186350"
  },
  {
    "text": "topics and you can also look into the sentiment of the text so you can use you",
    "start": "3186350",
    "end": "3192050"
  },
  {
    "text": "can extract sentiment from visual information or from text information and so it's it's it's quite powerful and we",
    "start": "3192050",
    "end": "3201080"
  },
  {
    "text": "are adding support for multiple languages but probably most of the audience here is interested in English so that's that that's easier when I talk",
    "start": "3201080",
    "end": "3209150"
  },
  {
    "text": "in in other countries sometimes they say is this language support that is language supported so for English we",
    "start": "3209150",
    "end": "3215120"
  },
  {
    "text": "have full support also for Spanish and we added support for lots of other languages for example in comprehend and",
    "start": "3215120",
    "end": "3221300"
  },
  {
    "text": "we also have Translate so some customers they translate maybe from languages that we don't support in comprehend",
    "start": "3221300",
    "end": "3228790"
  },
  {
    "text": "for example from Polish you can translate to English and then do the sentiment analysis in English even if",
    "start": "3228790",
    "end": "3234050"
  },
  {
    "text": "you the transaction is not perfect to the automatics and section for sentiment analysis is more than enough any other",
    "start": "3234050",
    "end": "3242450"
  },
  {
    "text": "question yeah so the question is is",
    "start": "3242450",
    "end": "3249200"
  },
  {
    "text": "there any use case where you would not recommend lambda so I'm quite a big",
    "start": "3249200",
    "end": "3256430"
  },
  {
    "text": "advocate and sometimes I create maybe more complex things trying to use lambda than without but the idea is that",
    "start": "3256430",
    "end": "3263350"
  },
  {
    "text": "anything that is event-driven fits very well because you can react so that's the",
    "start": "3263350",
    "end": "3268810"
  },
  {
    "text": "native use case I was thinking now with a customer who wants to download stuff",
    "start": "3268810",
    "end": "3275050"
  },
  {
    "text": "on a street for example from X on our website so do that with lambda if you",
    "start": "3275050",
    "end": "3281140"
  },
  {
    "text": "have a very large object that can require more than 15 minutes you need to manage the state of the download so",
    "start": "3281140",
    "end": "3287170"
  },
  {
    "text": "everything that it's longer than 50 minutes must be partition above so if you can take an activity that takes a",
    "start": "3287170",
    "end": "3292780"
  },
  {
    "text": "few hours and you can partition that in chunks logical chunks then run the",
    "start": "3292780",
    "end": "3298120"
  },
  {
    "text": "minute then it's a good fit otherwise if you start to see that it's complex it's probably not a good fit for everything",
    "start": "3298120",
    "end": "3304030"
  },
  {
    "text": "that you see that it's not a good fit give us the feedback because as you saw one of the purpose of our features is to",
    "start": "3304030",
    "end": "3310060"
  },
  {
    "text": "help customers build new things another use case that maybe if you have a very",
    "start": "3310060",
    "end": "3316060"
  },
  {
    "text": "high volume website and you put it on the API gateway it can be expensive because it's not the same the API",
    "start": "3316060",
    "end": "3322990"
  },
  {
    "text": "gateway is very there's lots of features for API management it's not just a web",
    "start": "3322990",
    "end": "3328600"
  },
  {
    "text": "server so in that case look for maybe different architectures you can use lambda maybe",
    "start": "3328600",
    "end": "3334230"
  },
  {
    "text": "invoke directly from JavaScript in the page and not through the API gateway so there are other ways to do that there",
    "start": "3334230",
    "end": "3341380"
  },
  {
    "text": "was another question there okay",
    "start": "3341380",
    "end": "3345509"
  },
  {
    "text": "so what kind of partition are you referring to okay yeah so the question",
    "start": "3362860",
    "end": "3372020"
  },
  {
    "text": "is how you can manage kissy strings for example with partitions where you want to preserve order and have a synchronous",
    "start": "3372020",
    "end": "3378860"
  },
  {
    "text": "invocations so if you have a synchronous implication order by default is not granted so if you upload 1000 files on a",
    "start": "3378860",
    "end": "3385640"
  },
  {
    "text": "3 and this file is 1000 am the functions you can't understand which is the order for streaming or operations like penises",
    "start": "3385640",
    "end": "3393620"
  },
  {
    "text": "streams and DynamoDB streams we have a different setup that is we we manage it",
    "start": "3393620",
    "end": "3400280"
  },
  {
    "text": "internally to the lambda platform and we do the polling for you and we preserve",
    "start": "3400280",
    "end": "3405650"
  },
  {
    "text": "the order in that way so it's it's actually not an a synchronous invocation there are technically 3 way of invoking",
    "start": "3405650",
    "end": "3411740"
  },
  {
    "text": "a lambda function synchronously and you get the result like that yeah Gateway you caller and the function wait for the",
    "start": "3411740",
    "end": "3417800"
  },
  {
    "text": "result and then you get the result back a synchronously like s 3 you fire a lambda function to process something you",
    "start": "3417800",
    "end": "3424730"
  },
  {
    "text": "say this new object has been uploaded to s3 is3 don't care to get any result and",
    "start": "3424730",
    "end": "3430040"
  },
  {
    "text": "the third way is stream based where we add add we are adding logic inside the",
    "start": "3430040",
    "end": "3435410"
  },
  {
    "text": "SS they lambda service for Canisius streams and there are no DB streams and we use synchronous invocation but we",
    "start": "3435410",
    "end": "3442490"
  },
  {
    "text": "manage that for you and that's why now you can use up to 20 different lambda functions because we",
    "start": "3442490",
    "end": "3447830"
  },
  {
    "text": "use partitioning in that case so Kinesis streams as the concept of shards and 1",
    "start": "3447830",
    "end": "3455450"
  },
  {
    "text": "we preserve order we preserve order within a shard so normally if you have for example an IOT architecture which",
    "start": "3455450",
    "end": "3461810"
  },
  {
    "text": "device as a device ID and you want to get the message from a specific device ID in order you can't be interested in",
    "start": "3461810",
    "end": "3469610"
  },
  {
    "text": "the global order of 1 million of devices it doesn't make sense you want to receive it the message in order from a specific device so you use the device ID",
    "start": "3469610",
    "end": "3477080"
  },
  {
    "text": "as partition key with Kinesis so when you put the data into Kinesis you say",
    "start": "3477080",
    "end": "3482240"
  },
  {
    "text": "this device ID is your partition key in this way the same device ID will always",
    "start": "3482240",
    "end": "3487310"
  },
  {
    "text": "go in the same chart and then the lambda function will consume that shard in",
    "start": "3487310",
    "end": "3492950"
  },
  {
    "text": "order using our internal implementation and you can now subscribe up to 20",
    "start": "3492950",
    "end": "3499910"
  },
  {
    "text": "lambda functions in order because there is a new functionality in Kinesis that basically is micro batching and",
    "start": "3499910",
    "end": "3506390"
  },
  {
    "text": "preserving the order in all the the listener ok I think you deserve a little",
    "start": "3506390",
    "end": "3515480"
  },
  {
    "text": "break I'm here if anybody wants to ask me a question and we start with the next",
    "start": "3515480",
    "end": "3521180"
  },
  {
    "text": "section at 11:30 and it will be a dive deep into with live demos with for",
    "start": "3521180",
    "end": "3526310"
  },
  {
    "text": "lambda layers and the lambda runtime api thank you",
    "start": "3526310",
    "end": "3532030"
  }
]