[
  {
    "text": "good morning folks welcome to this session thanks for coming and attending this",
    "start": "30",
    "end": "5970"
  },
  {
    "text": "session hopefully you had a great party yesterday the music was great so good",
    "start": "5970",
    "end": "11849"
  },
  {
    "text": "morning again so in this session I'm",
    "start": "11849",
    "end": "18090"
  },
  {
    "text": "going to focus on how to develop enterprise applications specifically",
    "start": "18090",
    "end": "23250"
  },
  {
    "text": "mobile and web application using AWS I'm Rahul Sharma I'm general manager as part",
    "start": "23250",
    "end": "29609"
  },
  {
    "text": "of AWS mobile with me I have Rohith and Sudeep they are from New York Life labs",
    "start": "29609",
    "end": "36329"
  },
  {
    "text": "they'll talk about how as a customer of AWS they are using AWS to develop",
    "start": "36329",
    "end": "43920"
  },
  {
    "text": "various mobile applications as part of New York Life so let me get started so",
    "start": "43920",
    "end": "54530"
  },
  {
    "text": "AWS customers and lots of enterprises are already using AWS for a range of",
    "start": "54530",
    "end": "60840"
  },
  {
    "text": "applications like these are your web applications mobile applications media",
    "start": "60840",
    "end": "67049"
  },
  {
    "text": "entertainment healthcare in terms of business applications gaming like as we",
    "start": "67049",
    "end": "75180"
  },
  {
    "text": "talk to these customers we hear lots of requirements and priorities as these",
    "start": "75180",
    "end": "81600"
  },
  {
    "text": "enterprises are developing these applications so first of all it's all",
    "start": "81600",
    "end": "87750"
  },
  {
    "text": "about getting new unique and differentiated experiences to their end",
    "start": "87750",
    "end": "92970"
  },
  {
    "text": "users whether these application be business to user application business to consumer business to employ applications",
    "start": "92970",
    "end": "100710"
  },
  {
    "text": "or business-to-business applications it's about creating those compelling",
    "start": "100710",
    "end": "106049"
  },
  {
    "text": "again engaging experiences for your users agility is the key like getting",
    "start": "106049",
    "end": "114060"
  },
  {
    "text": "these applications faster to the market is a must being slow is less of an option or",
    "start": "114060",
    "end": "119610"
  },
  {
    "text": "almost like a not not an option anymore now in order to do so developers these",
    "start": "119610",
    "end": "126060"
  },
  {
    "text": "enterprises I need easier way to develop deploy manage scale their application",
    "start": "126060",
    "end": "133180"
  },
  {
    "text": "they want easier a programming model they want services that enable that they",
    "start": "133180",
    "end": "138790"
  },
  {
    "text": "also want tools to go with those services also for lots of these",
    "start": "138790",
    "end": "144280"
  },
  {
    "text": "applications integration with existing applications and data sources is a must as enterprises obviously you want to",
    "start": "144280",
    "end": "152200"
  },
  {
    "text": "leverage what you already have invested in and you want to ensure that as you continue your journey with AWS in",
    "start": "152200",
    "end": "159370"
  },
  {
    "text": "fullness of time as you adopt it fully you are able to leverage what you already have for enterprise applications",
    "start": "159370",
    "end": "167860"
  },
  {
    "text": "again whether it be B to C B to E or B to B the LEDs of the system are masked",
    "start": "167860",
    "end": "174160"
  },
  {
    "text": "so they are in terms of availability security reliability performance like",
    "start": "174160",
    "end": "180520"
  },
  {
    "text": "look at all the LEDs you don't want that to be an afterthought you'd want that to",
    "start": "180520",
    "end": "185920"
  },
  {
    "text": "be designed as part of your applications you don't want these to cause issues",
    "start": "185920",
    "end": "192580"
  },
  {
    "text": "that could have been avoided in the first place now for b2c application",
    "start": "192580",
    "end": "197710"
  },
  {
    "text": "Identity Management is a must and same for B to e applications for B to C",
    "start": "197710",
    "end": "203350"
  },
  {
    "text": "application you want your users to be able to log in via social identity",
    "start": "203350",
    "end": "209470"
  },
  {
    "text": "providers you want a secure scalable user directory that you can have your",
    "start": "209470",
    "end": "215110"
  },
  {
    "text": "users come in and sign up and sign in using email and phone number it's a directory you want to own now in",
    "start": "215110",
    "end": "222670"
  },
  {
    "text": "terms of B to e applications you want your users specifically the employees to",
    "start": "222670",
    "end": "228370"
  },
  {
    "text": "be able to log in using corporate credentials you don't want them to create yet another account when they get",
    "start": "228370",
    "end": "234310"
  },
  {
    "text": "access to the application and as these applications get launched as users start",
    "start": "234310",
    "end": "239860"
  },
  {
    "text": "using them you want to measure the engagement you want to get analytics around like how users are using the",
    "start": "239860",
    "end": "247810"
  },
  {
    "text": "application and the whole purpose there being again creating compelling engaging experiences for your users and iterating",
    "start": "247810",
    "end": "255190"
  },
  {
    "text": "on that through analytics and measuring the engagement as part of your applications so let's look at these",
    "start": "255190",
    "end": "262540"
  },
  {
    "text": "requirements and see what are the best architectural approaches design patterns",
    "start": "262540",
    "end": "268050"
  },
  {
    "text": "and specifically the applied design patterns and also best practices for",
    "start": "268050",
    "end": "275520"
  },
  {
    "text": "building applications on AWS now I say mobile application but increasingly it's",
    "start": "275520",
    "end": "281460"
  },
  {
    "text": "not about mobile versus web the architectural approaches and the design",
    "start": "281460",
    "end": "286590"
  },
  {
    "text": "patterns are very common whether you building clients that go for mobile application or whether they go for the",
    "start": "286590",
    "end": "293100"
  },
  {
    "text": "web applications it's increasingly becoming about one common back-end with",
    "start": "293100",
    "end": "298710"
  },
  {
    "text": "API strategy basically driving how you expose this back-end to various types of",
    "start": "298710",
    "end": "304260"
  },
  {
    "text": "clients that you are creating in fact on the mobile side itself you can create",
    "start": "304260",
    "end": "310560"
  },
  {
    "text": "native applications but at the same time you could create hybrid applications and",
    "start": "310560",
    "end": "316110"
  },
  {
    "text": "you can also create web applications that can be rolled out to these mobile",
    "start": "316110",
    "end": "321120"
  },
  {
    "text": "devices so as part of the presentation",
    "start": "321120",
    "end": "326430"
  },
  {
    "text": "first I'm going to focus on the backend and then talk more about the client side",
    "start": "326430",
    "end": "332220"
  },
  {
    "text": "so we have like a complete end-to-end equation as you develop these applications now over the years there",
    "start": "332220",
    "end": "339690"
  },
  {
    "text": "are multiple approaches that have come across and these are the choices that you have right you can start with a",
    "start": "339690",
    "end": "346440"
  },
  {
    "text": "traditional client-server approach not so much more nowadays or you could do",
    "start": "346440",
    "end": "353700"
  },
  {
    "text": "multi tier application so you can start with either a web or a mobile client and",
    "start": "353700",
    "end": "361260"
  },
  {
    "text": "now increasingly IOT workloads also and you could go to a web tier then an",
    "start": "361260",
    "end": "367500"
  },
  {
    "text": "application tier which has the business and the application logic and then get to the database tier a fairly common",
    "start": "367500",
    "end": "373560"
  },
  {
    "text": "approach that has evolved over multiple years you can also do services oriented",
    "start": "373560",
    "end": "379350"
  },
  {
    "text": "architecture where your back-end is a collection of loosely coupled and",
    "start": "379350",
    "end": "385020"
  },
  {
    "text": "orchestrated set of web services and again a fairly common approach that has",
    "start": "385020",
    "end": "390030"
  },
  {
    "text": "again evolved over multiple years now depending on the type of the application",
    "start": "390030",
    "end": "395280"
  },
  {
    "text": "or the workload you could also do messaging oriented middleware in combination with saw or with",
    "start": "395280",
    "end": "403030"
  },
  {
    "text": "multi-tier as part of a messaging oriented middleware you could do pub/sub",
    "start": "403030",
    "end": "408460"
  },
  {
    "text": "messaging or you could do queue based messaging now as we talk to developers",
    "start": "408460",
    "end": "414630"
  },
  {
    "text": "as we see more and more applications being built on AWS we are increasingly",
    "start": "414630",
    "end": "421450"
  },
  {
    "text": "seeing a shift towards server less micro-services approach so let me spend",
    "start": "421450",
    "end": "426460"
  },
  {
    "text": "some time to lay out what I mean by serving as micro services and then get into details of that so first of all",
    "start": "426460",
    "end": "434580"
  },
  {
    "text": "it's about the micro services a micro service is a self-contained atomic unit",
    "start": "434580",
    "end": "441670"
  },
  {
    "text": "of application code or some functionality now it follows a cloud",
    "start": "441670",
    "end": "448270"
  },
  {
    "text": "native programming model very simple programming model and we would look into details of that these micro services are",
    "start": "448270",
    "end": "456100"
  },
  {
    "text": "very easy to develop deploy scale and share as well so we are increasingly",
    "start": "456100",
    "end": "462670"
  },
  {
    "text": "getting to a place where they would be reusable micro services that you can either develop yourself or you can get",
    "start": "462670",
    "end": "470080"
  },
  {
    "text": "it from other developers now some of the examples of micro services as part of",
    "start": "470080",
    "end": "475180"
  },
  {
    "text": "enterprise applications so you could have a micro service that takes an image",
    "start": "475180",
    "end": "482770"
  },
  {
    "text": "or a video that has been uploaded to s3 and you can process that particular",
    "start": "482770",
    "end": "489550"
  },
  {
    "text": "video or image by an event that is triggered onto your micro service you",
    "start": "489550",
    "end": "494710"
  },
  {
    "text": "can extract the metadata or do the transcoding a micro service can create a",
    "start": "494710",
    "end": "499930"
  },
  {
    "text": "record in Salesforce a micro service can also process real-time streams or events",
    "start": "499930",
    "end": "508990"
  },
  {
    "text": "coming from various sources so fairly wide range of examples of types of micro",
    "start": "508990",
    "end": "514960"
  },
  {
    "text": "services you can create and the whole idea here is that instead of having monolithic applications that are harder",
    "start": "514960",
    "end": "522280"
  },
  {
    "text": "to develop fairly complex to deploy manage and scale this micro services",
    "start": "522280",
    "end": "528160"
  },
  {
    "text": "basically give you a fairly good amount of flexibly that allows you to do continuous",
    "start": "528160",
    "end": "533320"
  },
  {
    "text": "integration and deployment and also fit well into agility agile model of",
    "start": "533320",
    "end": "538810"
  },
  {
    "text": "development as you're developing range of applications and the backends for your application now in parallel server",
    "start": "538810",
    "end": "548770"
  },
  {
    "text": "less approach is also being used heavily by developers now as part of the",
    "start": "548770",
    "end": "554500"
  },
  {
    "text": "serverless approach you as a developer you focus on the application code like",
    "start": "554500",
    "end": "561910"
  },
  {
    "text": "in terms of developing these specifics of micro services you let the underlying",
    "start": "561910",
    "end": "567670"
  },
  {
    "text": "infrastructure the serverless infrastructure and the micro services containers take care of scaling",
    "start": "567670",
    "end": "574570"
  },
  {
    "text": "provisioning and managing the infrastructure so there is a separation of concern here where serverless",
    "start": "574570",
    "end": "581710"
  },
  {
    "text": "basically lets you innovate and develop your applications while the infrastructure takes care of the",
    "start": "581710",
    "end": "587410"
  },
  {
    "text": "complexity here so this combination of several s plus micro services is",
    "start": "587410",
    "end": "592450"
  },
  {
    "text": "increasingly the approach that we are seeing in terms of how the developers are developing the backend of them",
    "start": "592450",
    "end": "599170"
  },
  {
    "text": "mobile and web applications so let's go more into the details of that now on AWS",
    "start": "599170",
    "end": "608160"
  },
  {
    "text": "we have a wide range of services you can it's almost like 70 plus services plus",
    "start": "608160",
    "end": "616330"
  },
  {
    "text": "we announced a few more as part of this conference now in terms of developing",
    "start": "616330",
    "end": "623310"
  },
  {
    "text": "server less micro services there are three core services that you get started with these are lambda this is how you",
    "start": "623310",
    "end": "631930"
  },
  {
    "text": "develop micro services as lambda functions and we'll go deeper into that API gateway for how you create publish",
    "start": "631930",
    "end": "640780"
  },
  {
    "text": "manage secure and monitor your api's and then cognitive for user authentication",
    "start": "640780",
    "end": "646510"
  },
  {
    "text": "user authorization access control to your api's for identity management tied",
    "start": "646510",
    "end": "652330"
  },
  {
    "text": "to a directory and multiple scenarios around identity management now while I",
    "start": "652330",
    "end": "658600"
  },
  {
    "text": "say like these three services are the four pillars you can also use remaining",
    "start": "658600",
    "end": "663970"
  },
  {
    "text": "services as part of your survey last microservices infrastructure and",
    "start": "663970",
    "end": "669050"
  },
  {
    "text": "applications for example you could use dynamodb for no sequel you could use RDS",
    "start": "669050",
    "end": "675290"
  },
  {
    "text": "for relational databases Genesis so it's like you pick the services that you need",
    "start": "675290",
    "end": "681440"
  },
  {
    "text": "for your application functionality starting with these three services that sort of the core pillars of that so",
    "start": "681440",
    "end": "690320"
  },
  {
    "text": "let's look at each of these services I'll describe them with a quick overview",
    "start": "690320",
    "end": "695420"
  },
  {
    "text": "and then we look at specific patterns of using these services for your back-end of mobile and web applications now",
    "start": "695420",
    "end": "704000"
  },
  {
    "text": "lambda lets you run your code without managing any infrastructure so truly",
    "start": "704000",
    "end": "710660"
  },
  {
    "text": "server less so again you focus on your application code as lambda functions and",
    "start": "710660",
    "end": "716680"
  },
  {
    "text": "the lambda execution environment takes care of managing provisioning and",
    "start": "716680",
    "end": "722210"
  },
  {
    "text": "scaling those servers for you now with lambda it's very cost efficient you only",
    "start": "722210",
    "end": "728210"
  },
  {
    "text": "pay for the compute time that you use no paying for unused capacity and then",
    "start": "728210",
    "end": "733970"
  },
  {
    "text": "lambda also does this continuous monitoring and scaling of your lambda functions the server less micro services",
    "start": "733970",
    "end": "740090"
  },
  {
    "text": "so depending on your application load lambda would up or scale up your lambda",
    "start": "740090",
    "end": "748310"
  },
  {
    "text": "functions and depending on the load if it goes down it would scale it down also so you don't have to worry about scaling",
    "start": "748310",
    "end": "755630"
  },
  {
    "text": "monitoring lambda is taking care of that now lambda follows a very simple",
    "start": "755630",
    "end": "761750"
  },
  {
    "text": "programming model like as I said earlier like you have multiple architectural approaches that have evolved over the",
    "start": "761750",
    "end": "767570"
  },
  {
    "text": "time and some of these architectural approaches have gone fairly complex like",
    "start": "767570",
    "end": "772880"
  },
  {
    "text": "say if you're doing multi-tiered it's not really cloud native it's kind of a",
    "start": "772880",
    "end": "779750"
  },
  {
    "text": "lot of complexity in terms of developing the backend of your applications using these existing traditional approaches",
    "start": "779750",
    "end": "785770"
  },
  {
    "text": "now with the server less microservices approach using lambda you basically",
    "start": "785770",
    "end": "791600"
  },
  {
    "text": "write a handler which acts as a lambda function takes an input and a context",
    "start": "791600",
    "end": "798560"
  },
  {
    "text": "and then you process and the whole idea here is that you're only focusing on a specific unit of application code or",
    "start": "798560",
    "end": "805490"
  },
  {
    "text": "function so you try to keep these services fairly fine and grained and then you can have your back-end be a",
    "start": "805490",
    "end": "812150"
  },
  {
    "text": "collection of lots of these micro services that can be coordinated together or can be orchestrated to",
    "start": "812150",
    "end": "818900"
  },
  {
    "text": "basically provide the overall functionality of your application now you can develop your lambda functions",
    "start": "818900",
    "end": "826730"
  },
  {
    "text": "serverless micro services using Java Python and node.js yesterday we",
    "start": "826730",
    "end": "832670"
  },
  {
    "text": "announced support for c-sharp also so that's new so fairly wide range of applications that we support as part of",
    "start": "832670",
    "end": "839050"
  },
  {
    "text": "lambda sorry",
    "start": "839050",
    "end": "845140"
  },
  {
    "text": "now lambda I already mentioned part of it lambda is a function that is the unit",
    "start": "847759",
    "end": "856609"
  },
  {
    "text": "of application logic like I gave some earlier examples now these lambda",
    "start": "856609",
    "end": "861949"
  },
  {
    "text": "functions can be invoked as a synchronous request response or they can",
    "start": "861949",
    "end": "868369"
  },
  {
    "text": "be triggered by events and we look at some examples of that now in order to",
    "start": "868369",
    "end": "873619"
  },
  {
    "text": "scale up and scale down and let lambda execution environment take care of that",
    "start": "873619",
    "end": "879679"
  },
  {
    "text": "the typical programming model for lambda functions is stateless programming model",
    "start": "879679",
    "end": "885429"
  },
  {
    "text": "now while I say stateless you can still access se DynamoDB or you can invoke",
    "start": "885429",
    "end": "891589"
  },
  {
    "text": "api's whether these are API is on ec2 or API is that our private API endpoints",
    "start": "891589",
    "end": "898519"
  },
  {
    "text": "that are on premise for you you can do that from lambda functions but by itself",
    "start": "898519",
    "end": "903529"
  },
  {
    "text": "lambda is not caching or maintaining certain State as part of its",
    "start": "903529",
    "end": "908660"
  },
  {
    "text": "implementation so that's a must for other scalability now lambda functions",
    "start": "908660",
    "end": "915139"
  },
  {
    "text": "are independently packaged deployable units what it enables you to do is",
    "start": "915139",
    "end": "922279"
  },
  {
    "text": "because they are independent you can basically do a continuous integration and deployment of lambda functions and",
    "start": "922279",
    "end": "930819"
  },
  {
    "text": "the micro service is corresponding to each of these lambda functions and this has been like a very important attribute",
    "start": "930819",
    "end": "937009"
  },
  {
    "text": "of agile development you can also specify configuration and scaling",
    "start": "937009",
    "end": "943879"
  },
  {
    "text": "requirements for your lambda functions as part of the deployment model so for",
    "start": "943879",
    "end": "949519"
  },
  {
    "text": "example you can specify memory requirements you can specify permissions",
    "start": "949519",
    "end": "954739"
  },
  {
    "text": "and roles that are needed to access other services for example if your lambda function is gonna invoke dynamodb",
    "start": "954739",
    "end": "962929"
  },
  {
    "text": "you can define roles and permissions for invocation so access to other services",
    "start": "962929",
    "end": "968779"
  },
  {
    "text": "is secure and trusted now you can take these lambda functions and then you can",
    "start": "968779",
    "end": "975919"
  },
  {
    "text": "compose your back-end applications as a collection of those lambda functions",
    "start": "975919",
    "end": "982299"
  },
  {
    "text": "so yesterday we also announced AWS step functions so now if your application is",
    "start": "983240",
    "end": "992339"
  },
  {
    "text": "a collection of these lambda functions obviously the next question is always about like how do you do coordination",
    "start": "992339",
    "end": "999149"
  },
  {
    "text": "how do you do composition of your back-end using these lambda functions as",
    "start": "999149",
    "end": "1004190"
  },
  {
    "text": "you create your server less applications as the backend so AWS step functions",
    "start": "1004190",
    "end": "1010160"
  },
  {
    "text": "enables you to do a visual composition you can define visual workflows now",
    "start": "1010160",
    "end": "1016160"
  },
  {
    "text": "these could be sequential these could be like you could create branches you could",
    "start": "1016160",
    "end": "1022010"
  },
  {
    "text": "have a parallel execution of these lambda functions so fairly compelling way of doing this composition and again",
    "start": "1022010",
    "end": "1030050"
  },
  {
    "text": "you keeping it very fine-grained not creating like these monolithic backends that are hard to evolve and hard to",
    "start": "1030050",
    "end": "1035630"
  },
  {
    "text": "manage and scale we also recently",
    "start": "1035630",
    "end": "1040819"
  },
  {
    "text": "announced support for a server less application model or called Sam the",
    "start": "1040819",
    "end": "1047569"
  },
  {
    "text": "whole idea behind Sam is how you take your lambda functions api's that are",
    "start": "1047569",
    "end": "1054920"
  },
  {
    "text": "exposed using api gateway in front of those lambda functions and micro services and any dynamodb tables that",
    "start": "1054920",
    "end": "1062600"
  },
  {
    "text": "you're using as part of your micro services like how do you combine them into a declarative model and then you",
    "start": "1062600",
    "end": "1069260"
  },
  {
    "text": "can use cloud formation to deploy the resources corresponding to lambda as",
    "start": "1069260",
    "end": "1075110"
  },
  {
    "text": "well as API gateway and the dynamodb tables so it's a fairly simple",
    "start": "1075110",
    "end": "1081160"
  },
  {
    "text": "declarative configuration management and composition model for lambda functions",
    "start": "1081160",
    "end": "1087580"
  },
  {
    "text": "you can go to lambda console on AWS you can pick a particular lambda function",
    "start": "1087580",
    "end": "1093559"
  },
  {
    "text": "and then you can export the Sam file corresponding to that Sam files are very",
    "start": "1093559",
    "end": "1101390"
  },
  {
    "text": "similar to cloud formation temple templates like few extensions as I said then you can use cloud formation to",
    "start": "1101390",
    "end": "1108080"
  },
  {
    "text": "deploy the resources corresponding to these server less application model and",
    "start": "1108080",
    "end": "1113150"
  },
  {
    "text": "the files it also enables you to share your lambda functions so if I create a lambda",
    "start": "1113150",
    "end": "1120380"
  },
  {
    "text": "function I can export it as a Sam file with a deployment package and other",
    "start": "1120380",
    "end": "1125630"
  },
  {
    "text": "developers can use those particular lambda function so this is again",
    "start": "1125630",
    "end": "1130790"
  },
  {
    "text": "emphasizing the reusability of these micro-services and the sharing across the community and other developers now",
    "start": "1130790",
    "end": "1139190"
  },
  {
    "text": "let's look at some of the examples of how you use lambda specifically for your",
    "start": "1139190",
    "end": "1144890"
  },
  {
    "text": "backends so first of all very common pattern is to have API gateway front-end",
    "start": "1144890",
    "end": "1152330"
  },
  {
    "text": "your lambda functions API gateway would basically map these lambda functions to",
    "start": "1152330",
    "end": "1158060"
  },
  {
    "text": "rest api x' your mobile or web application can call these rest api s-- and do a synchronous request response on",
    "start": "1158060",
    "end": "1165590"
  },
  {
    "text": "the lambda function and depending on the scale you get two units of scaling here",
    "start": "1165590",
    "end": "1171170"
  },
  {
    "text": "you can do scaling at API gateway level as well as scaling at lambda level",
    "start": "1171170",
    "end": "1177580"
  },
  {
    "text": "lambda also supports an event push model typical example is with s 3 and s n SN s",
    "start": "1177580",
    "end": "1186430"
  },
  {
    "text": "in s 3 let's say from your mobile application you upload some content that",
    "start": "1186430",
    "end": "1193100"
  },
  {
    "text": "triggers an event on lambda through an event push model and you can basically",
    "start": "1193100",
    "end": "1198140"
  },
  {
    "text": "take action on the content that has been uploaded into a s 3 earlier I gave",
    "start": "1198140",
    "end": "1203390"
  },
  {
    "text": "example of like you could do transcoding you could extract metadata and lots of actions you could do in the lambda",
    "start": "1203390",
    "end": "1208460"
  },
  {
    "text": "function again in a micro-service fashion lambda also supports an event",
    "start": "1208460",
    "end": "1215600"
  },
  {
    "text": "pool model so kinases supports real time streams and then you can also use",
    "start": "1215600",
    "end": "1221590"
  },
  {
    "text": "dynamodb to put a stream on top of that so any events that are emanating from",
    "start": "1221590",
    "end": "1227060"
  },
  {
    "text": "Genesis or DynamoDB wire streams model you could basically process that as part",
    "start": "1227060",
    "end": "1232940"
  },
  {
    "text": "of your lambda function a very common example being let's say you get to see a",
    "start": "1232940",
    "end": "1238400"
  },
  {
    "text": "stream of events from Genesis you want to do certain business logic and then take an action on that you could do that",
    "start": "1238400",
    "end": "1245810"
  },
  {
    "text": "as part of your lambda lambda functions also support scheduled",
    "start": "1245810",
    "end": "1251750"
  },
  {
    "text": "events very similar to cron jobs so you can basically define a schedule for when",
    "start": "1251750",
    "end": "1256910"
  },
  {
    "text": "these lambda functions would be fired you can also invoke these lambda",
    "start": "1256910",
    "end": "1262040"
  },
  {
    "text": "functions using a custom event source as part of our Android SDK as an example",
    "start": "1262040",
    "end": "1268220"
  },
  {
    "text": "you could integrate it with your mobile application create a custom event source and then invoke the lambda function R",
    "start": "1268220",
    "end": "1274880"
  },
  {
    "text": "corresponding to that now lots of AWS services use lambda as a mechanism to",
    "start": "1274880",
    "end": "1282950"
  },
  {
    "text": "customize and extend the functionality of those AWS services to give you an example cognitive it is our identity",
    "start": "1282950",
    "end": "1289910"
  },
  {
    "text": "management solution uses lambda function to enable you to customize messages that",
    "start": "1289910",
    "end": "1298670"
  },
  {
    "text": "you send as part of the authentication flow so for example you're doing email or phone number verification or you're",
    "start": "1298670",
    "end": "1305360"
  },
  {
    "text": "doing multi-factor authentication you need to send email or text messages to",
    "start": "1305360",
    "end": "1310730"
  },
  {
    "text": "your users you can use lambda function to personalize customize those messages you can also do use lambda functions",
    "start": "1310730",
    "end": "1318200"
  },
  {
    "text": "incognito to do custom authentication flows for example you could implement a",
    "start": "1318200",
    "end": "1325070"
  },
  {
    "text": "password less authentication mechanism using the phone number using lambda",
    "start": "1325070",
    "end": "1330110"
  },
  {
    "text": "functions as part of cognitive so lots of scenarios that we see developers",
    "start": "1330110",
    "end": "1336260"
  },
  {
    "text": "using for lambda again it's a very important service for you depending on your application and the workloads you",
    "start": "1336260",
    "end": "1343070"
  },
  {
    "text": "have you use it the right way so next a",
    "start": "1343070",
    "end": "1348260"
  },
  {
    "text": "pillar as part of the server list microservices is Amazon API gateway API",
    "start": "1348260",
    "end": "1354710"
  },
  {
    "text": "gateway enables you to create publish secure or manage and monitor your api's",
    "start": "1354710",
    "end": "1360010"
  },
  {
    "text": "it supports a very simplified API development model so I can take a lambda",
    "start": "1360010",
    "end": "1365630"
  },
  {
    "text": "function or I can take an ec2 endpoint lets say running with Beanstalk or I can",
    "start": "1365630",
    "end": "1372230"
  },
  {
    "text": "take a private API endpoint and define API is using API gateway it does enable",
    "start": "1372230",
    "end": "1378830"
  },
  {
    "text": "you to do transformations on the payloads that are coming as part of the api's recently we announced support",
    "start": "1378830",
    "end": "1386690"
  },
  {
    "text": "for binary payloads as well so fairly rich model for mapping the api's now",
    "start": "1386690",
    "end": "1392780"
  },
  {
    "text": "another big advantage of API gateway is it really performs well at scale first",
    "start": "1392780",
    "end": "1400070"
  },
  {
    "text": "of all it does caching as they these api's are being invoked the advantage of",
    "start": "1400070",
    "end": "1406250"
  },
  {
    "text": "caching being in like you're not calling your API endpoints behind API gateway",
    "start": "1406250",
    "end": "1411320"
  },
  {
    "text": "unnecessarily then it also does throttling and metering so in order to",
    "start": "1411320",
    "end": "1418010"
  },
  {
    "text": "handle spikes or bursts you can use API gateway or to do rate limiting as well",
    "start": "1418010",
    "end": "1424100"
  },
  {
    "text": "as throttling and then API gateway is integrated with cloud front which",
    "start": "1424100",
    "end": "1429950"
  },
  {
    "text": "enables very low latency across the entire cloud front footprint that we have across the globe that means like",
    "start": "1429950",
    "end": "1437150"
  },
  {
    "text": "you get sixty pops as part of our two out front CDN and that gives you the",
    "start": "1437150",
    "end": "1442610"
  },
  {
    "text": "lowest latency across the globe now API gateway you're exposing your api's as I",
    "start": "1442610",
    "end": "1450230"
  },
  {
    "text": "mentioned for enterprises security is a must so you want to make sure like",
    "start": "1450230",
    "end": "1455300"
  },
  {
    "text": "access to these api's is properly authorized after the users have been authenticated and you do fine-grained",
    "start": "1455300",
    "end": "1461930"
  },
  {
    "text": "role based access control as well so using API gateway it provides a inbuilt",
    "start": "1461930",
    "end": "1469160"
  },
  {
    "text": "integration with AWS Identity and Access Management Service I am and also Cognito",
    "start": "1469160",
    "end": "1475580"
  },
  {
    "text": "our to do role based access control as well as authorization for access to",
    "start": "1475580",
    "end": "1480860"
  },
  {
    "text": "these api's and we look at some examples of that in a couple of slides later and",
    "start": "1480860",
    "end": "1486310"
  },
  {
    "text": "then API gateway also does monitoring and metering of the api's as part of the",
    "start": "1486310",
    "end": "1494030"
  },
  {
    "text": "AWS console so you can look at like how api's are being used you can define",
    "start": "1494030",
    "end": "1499220"
  },
  {
    "text": "usage limits and more functionality as part of that so fairly compelling as you",
    "start": "1499220",
    "end": "1504440"
  },
  {
    "text": "are exposing your micro services to be accessed weii api's so here are some",
    "start": "1504440",
    "end": "1511970"
  },
  {
    "text": "examples of using api gateway as I said you can front-end api gateway",
    "start": "1511970",
    "end": "1519100"
  },
  {
    "text": "to be in front of your lambda functions those are your server server less micro",
    "start": "1519100",
    "end": "1526340"
  },
  {
    "text": "services you can have your API endpoints on ec2 basically with elastic beanstalk",
    "start": "1526340",
    "end": "1533840"
  },
  {
    "text": "or rod deploy development that you're doing on a c2 or you can have any",
    "start": "1533840",
    "end": "1540190"
  },
  {
    "text": "publicly accessible endpoint and also private API endpoints and we'll look at",
    "start": "1540190",
    "end": "1545779"
  },
  {
    "text": "the private API endpoints in more detail in a couple of slides now the third",
    "start": "1545779",
    "end": "1552590"
  },
  {
    "text": "piece in the puzzle is about security and identity management cognitum is our",
    "start": "1552590",
    "end": "1558889"
  },
  {
    "text": "comprehensive identity management solution integrated tightly with the Identity and Access Management Service",
    "start": "1558889",
    "end": "1565970"
  },
  {
    "text": "as well as STS kognito supports user authentication user authorization",
    "start": "1565970",
    "end": "1573190"
  },
  {
    "text": "supports a full-fledged manage user directory and it also supports access",
    "start": "1573190",
    "end": "1579350"
  },
  {
    "text": "control for AWS resources that you're accessing as part of your micro services",
    "start": "1579350",
    "end": "1584510"
  },
  {
    "text": "or from your client application so with",
    "start": "1584510",
    "end": "1589850"
  },
  {
    "text": "cognitive if you are developing a b2c application you can integrate with multiple social identity providers it",
    "start": "1589850",
    "end": "1597230"
  },
  {
    "text": "supports Google Facebook Twitter any open idak connect provider as well as",
    "start": "1597230",
    "end": "1602360"
  },
  {
    "text": "Amazon you can also have for your B to e applications integrate with saml-based",
    "start": "1602360",
    "end": "1608840"
  },
  {
    "text": "identity providers ad FS being an example and you could have your users in",
    "start": "1608840",
    "end": "1615260"
  },
  {
    "text": "this case employees be able to log in into these identity providers using",
    "start": "1615260",
    "end": "1620779"
  },
  {
    "text": "their corporate credentials and then you can also federate with multiple identity",
    "start": "1620779",
    "end": "1627409"
  },
  {
    "text": "providers and we look at these specific scenarios in more detail now cognitive",
    "start": "1627409",
    "end": "1633799"
  },
  {
    "text": "supports both mobile and web application very easy to integrate it's truly server less again you don't",
    "start": "1633799",
    "end": "1639889"
  },
  {
    "text": "need to setup any servers any databases to Cognito takes care of that you",
    "start": "1639889",
    "end": "1645889"
  },
  {
    "text": "basically use our sdk Android and iOS SDKs and then you are",
    "start": "1645889",
    "end": "1652039"
  },
  {
    "text": "able to integrate that easily with your mobile application or you could use a JavaScript SDK to integrate it with your",
    "start": "1652039",
    "end": "1658009"
  },
  {
    "text": "web applications earlier this summer we",
    "start": "1658009",
    "end": "1663289"
  },
  {
    "text": "announced support for cognitive user pools it's a service that is already in",
    "start": "1663289",
    "end": "1669440"
  },
  {
    "text": "GA and very widely used by developers user pools gives you a full-fledged",
    "start": "1669440",
    "end": "1676279"
  },
  {
    "text": "managed user directory if you want to have your users come in and sign up and",
    "start": "1676279",
    "end": "1683360"
  },
  {
    "text": "sign in using email or phone number you can use cognitive user pools to enable",
    "start": "1683360",
    "end": "1689659"
  },
  {
    "text": "that for your applications now one of the big advantages of user pools is it's",
    "start": "1689659",
    "end": "1695779"
  },
  {
    "text": "your own user directory unlike say social identity providers where identities are owned by whoever is",
    "start": "1695779",
    "end": "1702769"
  },
  {
    "text": "providing the social identity provider this is your own directory you retain",
    "start": "1702769",
    "end": "1707960"
  },
  {
    "text": "full control of data user profiles that are that are part of user pools it's",
    "start": "1707960",
    "end": "1715519"
  },
  {
    "text": "secure any user profiles passwords that are you that you're putting in this user",
    "start": "1715519",
    "end": "1722179"
  },
  {
    "text": "directory they are encrypted at rest encrypted in transit we support secure and a password which",
    "start": "1722179",
    "end": "1730190"
  },
  {
    "text": "is how the passwords are basically secured end to end it supports",
    "start": "1730190",
    "end": "1736970"
  },
  {
    "text": "multi-factor authentication so if you want to put yet another factor of authentication as part of the user",
    "start": "1736970",
    "end": "1743539"
  },
  {
    "text": "sign-in you can enable multi-factor authentication it supports email and phone number",
    "start": "1743539",
    "end": "1750460"
  },
  {
    "text": "verification if you want to provide another level of validation and verification before our users are able",
    "start": "1750460",
    "end": "1756649"
  },
  {
    "text": "to sign up and then it scales to hundreds and hundreds of millions of users as your applications go big that's",
    "start": "1756649",
    "end": "1764990"
  },
  {
    "text": "a very good problem to have in fact like it's a first class problem this directory would scale to handle",
    "start": "1764990",
    "end": "1770809"
  },
  {
    "text": "that and then in terms of integration with the identity access management",
    "start": "1770809",
    "end": "1777350"
  },
  {
    "text": "service and STS secure token service it simplifies that for your applications so let's sorry let's",
    "start": "1777350",
    "end": "1788260"
  },
  {
    "text": "look at some examples of how to use Amazon cognitive so very typical",
    "start": "1788260",
    "end": "1794170"
  },
  {
    "text": "scenario for business to consumer application like whether you're building a game whether you're building a",
    "start": "1794170",
    "end": "1799570"
  },
  {
    "text": "consumer focused app is to have your users first start in by just coming in",
    "start": "1799570",
    "end": "1806140"
  },
  {
    "text": "unauthenticated and as guests because you want them to come in into your application start using it right now",
    "start": "1806140",
    "end": "1812170"
  },
  {
    "text": "once they become familiar with the application they have choice to step up",
    "start": "1812170",
    "end": "1817440"
  },
  {
    "text": "to authenticate using a social identity provider they could authenticate with",
    "start": "1817440",
    "end": "1824080"
  },
  {
    "text": "the Google Facebook Twitter or if they are high worth users in terms of like",
    "start": "1824080",
    "end": "1832900"
  },
  {
    "text": "how you wanna like they're performing a certain transaction you want them to have signed in and sign up and sign in",
    "start": "1832900",
    "end": "1840670"
  },
  {
    "text": "using email or phone number you can do that part of the equation so that you do",
    "start": "1840670",
    "end": "1845800"
  },
  {
    "text": "using cognate or user pools so you let the users basically step up sign up",
    "start": "1845800",
    "end": "1852760"
  },
  {
    "text": "using email or phone number you validate and verify the email or phone number you",
    "start": "1852760",
    "end": "1859870"
  },
  {
    "text": "could do password less authentication also you can turn on multi-factor authentication and then these users",
    "start": "1859870",
    "end": "1866800"
  },
  {
    "text": "would be in your own user directory as part of the user pools now for business",
    "start": "1866800",
    "end": "1872920"
  },
  {
    "text": "to employ application you can integrate with saml-based identity providers I",
    "start": "1872920",
    "end": "1879250"
  },
  {
    "text": "mentioned ad FS Active Directory Federation service as an example but they are multitude of sam'l providers",
    "start": "1879250",
    "end": "1885460"
  },
  {
    "text": "and the whole goal here is to let your users be able to sign in using their",
    "start": "1885460",
    "end": "1890920"
  },
  {
    "text": "corporate credentials using existing identity providers that you have already as part of your enterprise and remove",
    "start": "1890920",
    "end": "1898570"
  },
  {
    "text": "the friction they're now in business-to-business application scenarios you can have multiple identity",
    "start": "1898570",
    "end": "1906640"
  },
  {
    "text": "providers be federated in as part of cognitive and then depending on a",
    "start": "1906640",
    "end": "1912490"
  },
  {
    "text": "particular business partner and the user corresponding to business partner they can go to the corresponding",
    "start": "1912490",
    "end": "1918669"
  },
  {
    "text": "identity provider and use the credentials corresponding to that to login into the application now we are",
    "start": "1918669",
    "end": "1925090"
  },
  {
    "text": "also seeing developers and customers using cognitive for IOT scenarios very",
    "start": "1925090",
    "end": "1930850"
  },
  {
    "text": "common scenario is I have a set of IOT devices I as a user or I as a provider",
    "start": "1930850",
    "end": "1938529"
  },
  {
    "text": "of those IOT devices I can use a mobile or a web application to get secure",
    "start": "1938529",
    "end": "1944080"
  },
  {
    "text": "access to those IOT devices and the data corresponding to that now you can also",
    "start": "1944080",
    "end": "1949750"
  },
  {
    "text": "use cognitive with API gateway now API gateway you want to secure access to the",
    "start": "1949750",
    "end": "1957070"
  },
  {
    "text": "api's that are a front ended by API gateway API gateway supports notion of a",
    "start": "1957070",
    "end": "1963460"
  },
  {
    "text": "custom authorizer where you can inspect a particular token and then use the",
    "start": "1963460",
    "end": "1969370"
  },
  {
    "text": "claims in the token to actually map it to specific policies and permission and to access control so a very easy way to",
    "start": "1969370",
    "end": "1976570"
  },
  {
    "text": "develop that customer ties are using a lambda again very good application of",
    "start": "1976570",
    "end": "1982630"
  },
  {
    "text": "serverless microservices as applied to our services as well and then for access",
    "start": "1982630",
    "end": "1990100"
  },
  {
    "text": "control to AWS resources once the user is authenticated with let's say a social",
    "start": "1990100",
    "end": "1995890"
  },
  {
    "text": "identity provider or a sam'l based identity provider or user is even",
    "start": "1995890",
    "end": "2001049"
  },
  {
    "text": "unauthenticated you can basically get temporary secure AWS credentials from",
    "start": "2001049",
    "end": "2008760"
  },
  {
    "text": "cognitive and then you can use those credentials or to do access control on",
    "start": "2008760",
    "end": "2014880"
  },
  {
    "text": "AWS resources a very typical example is let's say a user is authenticated but",
    "start": "2014880",
    "end": "2021450"
  },
  {
    "text": "you only want to restrict the user to a specific s3 bucket or you want to",
    "start": "2021450",
    "end": "2026730"
  },
  {
    "text": "restrict the user to only a specific row in the database you could do those coat down policies using I am as well as",
    "start": "2026730",
    "end": "2034250"
  },
  {
    "text": "cognitive now I'm excited to announce",
    "start": "2034250",
    "end": "2040970"
  },
  {
    "text": "coming soon is the fine-grained role-based access control as part of",
    "start": "2040970",
    "end": "2046289"
  },
  {
    "text": "cognitive now for security Identity Management",
    "start": "2046289",
    "end": "2051490"
  },
  {
    "text": "fine-grained role based access control is a must masked requirement now in user",
    "start": "2051490",
    "end": "2057950"
  },
  {
    "text": "pools to support fine-grained role based access control we are going to introduce",
    "start": "2057950",
    "end": "2063440"
  },
  {
    "text": "support for groups so you can partition your users across multiple groups you",
    "start": "2063440",
    "end": "2070608"
  },
  {
    "text": "can associate each group with a specific role and that role basically has a set",
    "start": "2070609",
    "end": "2077089"
  },
  {
    "text": "of policies and permissions for this fine-grained role based access control",
    "start": "2077089",
    "end": "2083200"
  },
  {
    "text": "now also as part of cognitive so far we",
    "start": "2083200",
    "end": "2089118"
  },
  {
    "text": "only supported notion of one role for authenticated identities one role for",
    "start": "2089119",
    "end": "2094490"
  },
  {
    "text": "unauthenticated identities and customers told us that was sort of a bit of a",
    "start": "2094490",
    "end": "2100069"
  },
  {
    "text": "limitation that why couldn't they do more authenticated roles why can't they",
    "start": "2100069",
    "end": "2106309"
  },
  {
    "text": "do more in terms of fine grained role based access control so happy to announce that soon we would have support",
    "start": "2106309",
    "end": "2113269"
  },
  {
    "text": "for multiple roles for authenticated identities and the whole idea there is",
    "start": "2113269",
    "end": "2119329"
  },
  {
    "text": "like once an authenticated user comes in via cognitive you can use the role that",
    "start": "2119329",
    "end": "2125630"
  },
  {
    "text": "is assumed for that particular identity whether programmatically or by the group",
    "start": "2125630",
    "end": "2131000"
  },
  {
    "text": "that that user belongs to or via specific rules that you can create in",
    "start": "2131000",
    "end": "2137480"
  },
  {
    "text": "cognitive console you can narrow down that authenticated identity to a",
    "start": "2137480",
    "end": "2142490"
  },
  {
    "text": "specific role with corresponding policy and permissions and to access control on",
    "start": "2142490",
    "end": "2147859"
  },
  {
    "text": "AWS resources or your api's that are behind api gateway or your own API",
    "start": "2147859",
    "end": "2152990"
  },
  {
    "text": "endpoints as well so fairly rich flexible and secure way of doing role",
    "start": "2152990",
    "end": "2159950"
  },
  {
    "text": "based access control with that I want to invite Rohit and then Sudeep to talk",
    "start": "2159950",
    "end": "2166490"
  },
  {
    "text": "about like how they are using AWS for the mobile applications they have been",
    "start": "2166490",
    "end": "2172039"
  },
  {
    "text": "building and have them share some of the insights on why they made certain choices",
    "start": "2172039",
    "end": "2179140"
  },
  {
    "text": "my name is Ruth Katya I'm the CTO for New York Life labs joined by my teammate",
    "start": "2193180",
    "end": "2200000"
  },
  {
    "text": "Sudeep Kulkarni here Thank You Raoul for giving us the opportunity to share our experience with the AWS here for those",
    "start": "2200000",
    "end": "2208070"
  },
  {
    "text": "of you who do not know about New York Life New York life is a 170 plus year",
    "start": "2208070",
    "end": "2213740"
  },
  {
    "text": "old life insurance company headquartered in New York we are a primarily life",
    "start": "2213740",
    "end": "2219920"
  },
  {
    "text": "insurance company and New York Life ventures is essentially the corporate",
    "start": "2219920",
    "end": "2225410"
  },
  {
    "text": "venture arm of New York Life and we invest in technology companies that are",
    "start": "2225410",
    "end": "2230600"
  },
  {
    "text": "strategic to our business New York Life labs is a subsidiary of New York",
    "start": "2230600",
    "end": "2235850"
  },
  {
    "text": "Avengers and what it is is like a captive startup within the large organization going up to the best of",
    "start": "2235850",
    "end": "2242510"
  },
  {
    "text": "technology and we're also segmented from New York Life in in the sense that we",
    "start": "2242510",
    "end": "2248119"
  },
  {
    "text": "have our own office space and infrastructure so we are more focused on execution on new technologies so this is",
    "start": "2248119",
    "end": "2259670"
  },
  {
    "text": "about New York Life labs the way we go about product development is you know we",
    "start": "2259670",
    "end": "2265520"
  },
  {
    "text": "build Minimum Viable products so we don't take a Big Bang approach we you",
    "start": "2265520",
    "end": "2272840"
  },
  {
    "text": "know set aside smaller goals and then use cases to go after and you know which",
    "start": "2272840",
    "end": "2279410"
  },
  {
    "text": "turn into meaningful prototypes and then into products so that is how we go about",
    "start": "2279410",
    "end": "2284540"
  },
  {
    "text": "product development so one of the the problem we are trying to solve right so",
    "start": "2284540",
    "end": "2292420"
  },
  {
    "text": "from from the experiences that we have had in talking to different departments within New York life is that many of the",
    "start": "2292420",
    "end": "2299810"
  },
  {
    "text": "insurance processes that are there today are you know very fragmented and manual",
    "start": "2299810",
    "end": "2306260"
  },
  {
    "text": "in nature so we wanted to solve them and one of the examples who was claims so km",
    "start": "2306260",
    "end": "2312650"
  },
  {
    "text": "is essentially something that is filed with the insurance company when the insured person passes away and once it's",
    "start": "2312650",
    "end": "2319520"
  },
  {
    "text": "approved we pay out the beneficiary that has to be a simple process and it's because that is where you know we also",
    "start": "2319520",
    "end": "2326390"
  },
  {
    "text": "have some part linking into the customer experience right I mean the experience that the beneficiaries have with us but",
    "start": "2326390",
    "end": "2332720"
  },
  {
    "text": "that was totally fragmented and manual in nature and we wanted a technology",
    "start": "2332720",
    "end": "2339500"
  },
  {
    "text": "platform where we could reimagine the entire process and so how we did was you",
    "start": "2339500",
    "end": "2345140"
  },
  {
    "text": "know we used the services available on AWS which Sudeep will speak to you in a",
    "start": "2345140",
    "end": "2351109"
  },
  {
    "text": "second you know like Amazon simple workflow service SNS SQS and and many other",
    "start": "2351109",
    "end": "2360589"
  },
  {
    "text": "services for different processes but essentially to reimagine the entire process and you know make it really",
    "start": "2360589",
    "end": "2368270"
  },
  {
    "text": "streamlined because may over the years we had processes wherein we had different systems and each of these",
    "start": "2368270",
    "end": "2374780"
  },
  {
    "text": "systems had their own terminologies and we were doing things in a certain way because you know there were systems that",
    "start": "2374780",
    "end": "2380869"
  },
  {
    "text": "were built in a certain way so we we are going to talk about claims today and tell you what architecture we used how",
    "start": "2380869",
    "end": "2388220"
  },
  {
    "text": "you know how we use the different services available on AWS and kind of streamline the entire workflow so at",
    "start": "2388220",
    "end": "2395300"
  },
  {
    "text": "this point I would like to invite Sudeep to come on stage and take you through the remaining",
    "start": "2395300",
    "end": "2401859"
  },
  {
    "text": "Thank You Rohit and good morning everyone after having two coffees I hope my",
    "start": "2408000",
    "end": "2413380"
  },
  {
    "text": "head's in the game so this is the overview of claim processing in general",
    "start": "2413380",
    "end": "2419730"
  },
  {
    "text": "beneficially submits the claim online using a simple form claim is saved in a",
    "start": "2419730",
    "end": "2425080"
  },
  {
    "text": "dynamo DB table we are using lamda to trigger an SWF workflow process off of",
    "start": "2425080",
    "end": "2431020"
  },
  {
    "text": "it and that workflow takes care of the entire claim lifecycle an SNS is used to",
    "start": "2431020",
    "end": "2437890"
  },
  {
    "text": "send status updates to beneficiaries and all the other entities involved in claim",
    "start": "2437890",
    "end": "2443620"
  },
  {
    "text": "processing this is our application architecture we are hosting the portal",
    "start": "2443620",
    "end": "2452470"
  },
  {
    "text": "that's built for insurance as a service on the back end on a node.js deployment",
    "start": "2452470",
    "end": "2457540"
  },
  {
    "text": "on elastic beanstalk and I want to emphasize the fact that this server is he was only for hosting the website",
    "start": "2457540",
    "end": "2464650"
  },
  {
    "text": "there is no business logic there on the front end we are using angular 2 angular",
    "start": "2464650",
    "end": "2470740"
  },
  {
    "text": "2 was an easy choice for us because it's a framework so it offers a lot of functionality that's built in and it",
    "start": "2470740",
    "end": "2477820"
  },
  {
    "text": "maintains a clear distinction between the JavaScript that drives your application and the HTML template that's",
    "start": "2477820",
    "end": "2484630"
  },
  {
    "text": "being rendered on the back end we are using different AWS services so Cognito",
    "start": "2484630",
    "end": "2492130"
  },
  {
    "text": "for user authentication and authorization and we are also using it to protect our node.js API routes which",
    "start": "2492130",
    "end": "2498640"
  },
  {
    "text": "are mostly used for data accessing then we are using dynamo DB to store all of",
    "start": "2498640",
    "end": "2503740"
  },
  {
    "text": "our data as rahul said it scales really well it has virtually no latency and yes",
    "start": "2503740",
    "end": "2510850"
  },
  {
    "text": "it's no sequel and we are using lambda to perform most of our business logic and calculations lambdas are also used",
    "start": "2510850",
    "end": "2518950"
  },
  {
    "text": "as triggers in our workflow lambda that the trigger is fired off of the insert",
    "start": "2518950",
    "end": "2526450"
  },
  {
    "text": "event from dynamo DB and lastly we are using SNS to manage the notifications we",
    "start": "2526450",
    "end": "2533680"
  },
  {
    "text": "are keeping the beneficiary updated about the status of the claim and as of now we are using it coupled",
    "start": "2533680",
    "end": "2539530"
  },
  {
    "text": "with Apple notification system to send notifications to Apple devices next up",
    "start": "2539530",
    "end": "2547829"
  },
  {
    "text": "how we are using kognito so first of all let's go back to why which was called",
    "start": "2547829",
    "end": "2552910"
  },
  {
    "text": "neato our requirements like I imagine most of your requirements are simplicity",
    "start": "2552910",
    "end": "2558730"
  },
  {
    "text": "scalability and security so Cognito lets us easily access different AWS services",
    "start": "2558730",
    "end": "2566349"
  },
  {
    "text": "that we are using then it's supposed both authenticated and unauthenticated identities and we are using an",
    "start": "2566349",
    "end": "2573280"
  },
  {
    "text": "authenticated identities to enable the beneficiary to upload documents to an s3 bucket when the beneficiary is",
    "start": "2573280",
    "end": "2580569"
  },
  {
    "text": "submitting a claim then through the use of kognito identity pool we can map more",
    "start": "2580569",
    "end": "2587619"
  },
  {
    "text": "than one users to the pool and enable all the users to have same kind of access to different AWS services and",
    "start": "2587619",
    "end": "2594450"
  },
  {
    "text": "resources and last interesting requirement we had was to secure our",
    "start": "2594450",
    "end": "2600369"
  },
  {
    "text": "node.js api outs and this is where the custom authorizer lambda comes into picture so we are using the access token",
    "start": "2600369",
    "end": "2607750"
  },
  {
    "text": "that's returned by Cognito and we are passing it to the node server and using the custom authorizer to validate the",
    "start": "2607750",
    "end": "2615490"
  },
  {
    "text": "token and effectively secure the node.js route let's talk about user pools why",
    "start": "2615490",
    "end": "2624040"
  },
  {
    "text": "did we select user pools we wanted an easy and fully managed way to create and",
    "start": "2624040",
    "end": "2630010"
  },
  {
    "text": "manage our own user directories user will scale really well up to millions of",
    "start": "2630010",
    "end": "2635470"
  },
  {
    "text": "users they're completely managed by Amazon and they provide enhanced security in form of multi-factor",
    "start": "2635470",
    "end": "2642250"
  },
  {
    "text": "authentication and there's also ease of use for the end user because the user",
    "start": "2642250",
    "end": "2648730"
  },
  {
    "text": "can sign in using phone number or email address and as a start up this come the",
    "start": "2648730",
    "end": "2655599"
  },
  {
    "text": "offloading of the management to Amazon kognito was a critical factor for us and",
    "start": "2655599",
    "end": "2661710"
  },
  {
    "text": "I'm happy to share with you that we work closely with the kognito team as",
    "start": "2661710",
    "end": "2667780"
  },
  {
    "text": "early beta users of the user pools next",
    "start": "2667780",
    "end": "2673780"
  },
  {
    "text": "up we'll talk about lambdas and how we are using them as event processors in particular so as you can see from the",
    "start": "2673780",
    "end": "2681280"
  },
  {
    "text": "diagram the lamp the first lambda which is a signed claim and trigger workflow",
    "start": "2681280",
    "end": "2686770"
  },
  {
    "text": "that's triggered from a dynamo DB stream and in particular we are processing the",
    "start": "2686770",
    "end": "2692500"
  },
  {
    "text": "insert event to start a workflow for a claim that's been newly inserted and",
    "start": "2692500",
    "end": "2698430"
  },
  {
    "text": "lambdas are also used to perform some additional business logic in our workflow such as interest calculation",
    "start": "2698430",
    "end": "2705550"
  },
  {
    "text": "when we are ready to pay the beneficiary and document upload where the analyst",
    "start": "2705550",
    "end": "2712210"
  },
  {
    "text": "can request the beneficiary to upload more documents last service I would like",
    "start": "2712210",
    "end": "2718240"
  },
  {
    "text": "to talk about is SNS and again via SNS it's completely managed by Amazon it's",
    "start": "2718240",
    "end": "2725710"
  },
  {
    "text": "reliable it's scalable and it's secure because all your messages and all your",
    "start": "2725710",
    "end": "2731320"
  },
  {
    "text": "topics are completely protected it's cost effective because it has a",
    "start": "2731320",
    "end": "2737680"
  },
  {
    "text": "pay-as-you-go model you only pay for the messages that you are sending and the charges Amazon incurs for sending those",
    "start": "2737680",
    "end": "2744850"
  },
  {
    "text": "messages and it integrates well with other AWS services as well so the use",
    "start": "2744850",
    "end": "2751570"
  },
  {
    "text": "case we have here is publishing to the claims topic and the analysts who are",
    "start": "2751570",
    "end": "2758140"
  },
  {
    "text": "subscribed to the topic and receive the notifications and with that I'd like to",
    "start": "2758140",
    "end": "2763450"
  },
  {
    "text": "invite travel back onto the stage hope you are enjoying this session so far and thank you",
    "start": "2763450",
    "end": "2770130"
  },
  {
    "text": "so so far first thanks Rohit then Sudeep so so far we talked",
    "start": "2776990",
    "end": "2784200"
  },
  {
    "text": "more about the back end but then the other critical part of the equation is",
    "start": "2784200",
    "end": "2789690"
  },
  {
    "text": "how to build the clients specifically for mobile application so AWS mobile hub",
    "start": "2789690",
    "end": "2797280"
  },
  {
    "text": "is one of our services the goal behind AWS mobile hub is to make it easy for",
    "start": "2797280",
    "end": "2804480"
  },
  {
    "text": "developers to get started as they are creating mobile applications for their",
    "start": "2804480",
    "end": "2810660"
  },
  {
    "text": "users these mobile applications can be native applications so we have SDKs for",
    "start": "2810660",
    "end": "2817020"
  },
  {
    "text": "iOS and Android these can be hybrid applications where a",
    "start": "2817020",
    "end": "2822450"
  },
  {
    "text": "webview basically renders inside a container or they could be web",
    "start": "2822450",
    "end": "2828840"
  },
  {
    "text": "applications that are being targeted for mobile devices we have a range of SDKs",
    "start": "2828840",
    "end": "2836240"
  },
  {
    "text": "iOS Android JavaScript for web applications then unity xamarin unity",
    "start": "2836240",
    "end": "2845550"
  },
  {
    "text": "specifically focused on gaming developers as well as recently we",
    "start": "2845550",
    "end": "2851220"
  },
  {
    "text": "announced or launched react native SDK as well so you can use that SDK as part",
    "start": "2851220",
    "end": "2858540"
  },
  {
    "text": "of your react native applications also now the way you get started with AWS",
    "start": "2858540",
    "end": "2864450"
  },
  {
    "text": "mobile hub is go to the console it's an",
    "start": "2864450",
    "end": "2871110"
  },
  {
    "text": "easy getting started experience you create a application template you",
    "start": "2871110",
    "end": "2876480"
  },
  {
    "text": "get a collection of services as part of the console so for example if you want",
    "start": "2876480",
    "end": "2881490"
  },
  {
    "text": "to add sign-in to your application you pick up sign-in using cognitive you want to add cloud logic using lamda you pick",
    "start": "2881490",
    "end": "2888420"
  },
  {
    "text": "up that one or say you want no sequel database then pick up no sequel with",
    "start": "2888420",
    "end": "2895860"
  },
  {
    "text": "dynamodb once in a la carta manner you have picked up the services and the",
    "start": "2895860",
    "end": "2901320"
  },
  {
    "text": "features that you want in your application you have two choices you can basically generate application",
    "start": "2901320",
    "end": "2908730"
  },
  {
    "text": "code as samples so you can use these easy getting started samples to just",
    "start": "2908730",
    "end": "2914849"
  },
  {
    "text": "quickly get started for ios and android or you can follow step by step",
    "start": "2914849",
    "end": "2921420"
  },
  {
    "text": "instructions based on the features that you picked and then you can use the those instructions to integrate that",
    "start": "2921420",
    "end": "2927990"
  },
  {
    "text": "functionality into your application so for example if you picked up sign-in you",
    "start": "2927990",
    "end": "2933840"
  },
  {
    "text": "just get simple steps to integrate sign-in using social identity providers or sam'l or user pools as part of your",
    "start": "2933840",
    "end": "2941849"
  },
  {
    "text": "application we announced support for",
    "start": "2941849",
    "end": "2947820"
  },
  {
    "text": "custom connectors as part of mobile hub just couple of weeks back it's already available as I said one of the top",
    "start": "2947820",
    "end": "2955560"
  },
  {
    "text": "priorities and requirements for enterprise applications is ability to leverage what you already have these may",
    "start": "2955560",
    "end": "2963210"
  },
  {
    "text": "be your existing data sources systems of record enterprise applications private",
    "start": "2963210",
    "end": "2969750"
  },
  {
    "text": "API endpoints behind the firewall so you can use a custom connector as part of",
    "start": "2969750",
    "end": "2975839"
  },
  {
    "text": "AWS mobile hub to access these private API endpoints custom connector again",
    "start": "2975839",
    "end": "2984210"
  },
  {
    "text": "uses the server less micro-services pattern it's a lambda function that basically acts as a simple proxy for",
    "start": "2984210",
    "end": "2992190"
  },
  {
    "text": "api's that you're invoking from your client applications and maps them to the",
    "start": "2992190",
    "end": "2997980"
  },
  {
    "text": "private API endpoints that are behind the firewall its front ended by API gateway so it",
    "start": "2997980",
    "end": "3004280"
  },
  {
    "text": "gives you the scalability as well as all the capabilities I described earlier as part of API gateway we also have support",
    "start": "3004280",
    "end": "3013580"
  },
  {
    "text": "for SAS connectors as part of mobile hub increasingly enterprises are adopting",
    "start": "3013580",
    "end": "3020900"
  },
  {
    "text": "like this wide range of SAS applications Weatherby Salesforce Zendesk Microsoft",
    "start": "3020900",
    "end": "3027830"
  },
  {
    "text": "Dynamics and as you build mobile applications web applications you do",
    "start": "3027830",
    "end": "3033380"
  },
  {
    "text": "want to integrate with these SAS applications so we are happy to say we",
    "start": "3033380",
    "end": "3038390"
  },
  {
    "text": "have a set of connectors that we provide bundled in as part of AWS mobile hub the",
    "start": "3038390",
    "end": "3045569"
  },
  {
    "text": "SAS connector gives access to common objects in these SAS applications for",
    "start": "3045569",
    "end": "3050910"
  },
  {
    "text": "example accounts opportunities leads a customer record you get access to these",
    "start": "3050910",
    "end": "3058730"
  },
  {
    "text": "common objects as well as you can do queries on the custom objects as well so",
    "start": "3058730",
    "end": "3064260"
  },
  {
    "text": "fairly rich functionality and again follows the micro-services pattern these",
    "start": "3064260",
    "end": "3070980"
  },
  {
    "text": "SAS connectors are lambda functions that are front ended by API gateway so you",
    "start": "3070980",
    "end": "3076890"
  },
  {
    "text": "get REST API for each of these SAS connectors that you can invoke from your",
    "start": "3076890",
    "end": "3083760"
  },
  {
    "text": "mobile and web applications now one of the advantages of using API gateway and",
    "start": "3083760",
    "end": "3090000"
  },
  {
    "text": "lambda here is that and specifically the serverless micro-services pattern so you",
    "start": "3090000",
    "end": "3095490"
  },
  {
    "text": "get multiple advantages so first as your applications are invoking api's on these",
    "start": "3095490",
    "end": "3103289"
  },
  {
    "text": "SAS applications you can do metering and auditing you can control access to the",
    "start": "3103289",
    "end": "3108539"
  },
  {
    "text": "api's as well you can manage the performance of these api's through",
    "start": "3108539",
    "end": "3114210"
  },
  {
    "text": "integration with cloud front so a fairly low latency access so again all the advantages of using api gateway and",
    "start": "3114210",
    "end": "3120299"
  },
  {
    "text": "lambda apply here as well now what we have also done is that irrespective of",
    "start": "3120299",
    "end": "3126720"
  },
  {
    "text": "which SAS applications you're going to so for example by there are Salesforce or a Zen desk now each of them have a",
    "start": "3126720",
    "end": "3134520"
  },
  {
    "text": "notion of an account a customer as an example now what we have done is like we",
    "start": "3134520",
    "end": "3141660"
  },
  {
    "text": "have normalized api's to access these common objects across the SAS",
    "start": "3141660",
    "end": "3146940"
  },
  {
    "text": "application so an account is an account whether you go to one of these applications and you can use the same",
    "start": "3146940",
    "end": "3154200"
  },
  {
    "text": "REST API is to access across these multitude of applications you are",
    "start": "3154200",
    "end": "3159210"
  },
  {
    "text": "integrating with you also get pagination as well as like filtering a common",
    "start": "3159210",
    "end": "3166829"
  },
  {
    "text": "mechanism of doing that so fairly consistent api's and",
    "start": "3166829",
    "end": "3172309"
  },
  {
    "text": "in terms of these SAS connectors while we have built these initial six think of",
    "start": "3172309",
    "end": "3179670"
  },
  {
    "text": "it as a blueprint for you to build more SAS connectors or you can work with some",
    "start": "3179670",
    "end": "3185549"
  },
  {
    "text": "of our partners like we mentioned cloud elements is one of the partners so you could get some of these connectors from",
    "start": "3185549",
    "end": "3191039"
  },
  {
    "text": "our partners as well but we encourage you to use these blueprints look at how",
    "start": "3191039",
    "end": "3196470"
  },
  {
    "text": "these connectors are structured and then you can build your own or you could use the reusable set of connectors as well",
    "start": "3196470",
    "end": "3204769"
  },
  {
    "text": "now one of the exciting news as part of reinvent has been Amazon legs now Amazon",
    "start": "3205069",
    "end": "3214289"
  },
  {
    "text": "legs enables you to build voice enabled applications with natural language",
    "start": "3214289",
    "end": "3219660"
  },
  {
    "text": "understanding as well as build applications that are enabled with the",
    "start": "3219660",
    "end": "3225720"
  },
  {
    "text": "AI now the way you integrate Amazon legs",
    "start": "3225720",
    "end": "3233099"
  },
  {
    "text": "and its functionality with mobile application to create voice enabled",
    "start": "3233099",
    "end": "3239390"
  },
  {
    "text": "applications as well as applications that integrate with BOTS it's enabled",
    "start": "3239390",
    "end": "3245400"
  },
  {
    "text": "through AWS mobile hub the steps are very simple we have iOS and Android SDKs",
    "start": "3245400",
    "end": "3253099"
  },
  {
    "text": "for Amazon legs we also have custom controls that you can with a few lines",
    "start": "3253099",
    "end": "3259589"
  },
  {
    "text": "of code integrate into your mobile applications once you have done the",
    "start": "3259589",
    "end": "3265259"
  },
  {
    "text": "integration like as your applications are launched a typical scenario would be a user speaks into this application to",
    "start": "3265259",
    "end": "3271859"
  },
  {
    "text": "do a voice conversation or they could do chat through text interface as well the",
    "start": "3271859",
    "end": "3278549"
  },
  {
    "text": "whole idea here is to enable newer experiences newer unique compelling experiences and let's look at some",
    "start": "3278549",
    "end": "3285029"
  },
  {
    "text": "examples like I as a user I want to have a voice conversation with the customer",
    "start": "3285029",
    "end": "3291029"
  },
  {
    "text": "support agent maybe that's the most native way of doing so or a field sales",
    "start": "3291029",
    "end": "3296999"
  },
  {
    "text": "agent wants to check the latest on an opportunity or a customer record in",
    "start": "3296999",
    "end": "3303660"
  },
  {
    "text": "Salesforce or you could have an application that",
    "start": "3303660",
    "end": "3309430"
  },
  {
    "text": "lets you access either through text or voice a customer record in Salesforce and then create a trouble ticket in yet",
    "start": "3309430",
    "end": "3316089"
  },
  {
    "text": "another system so lots of possibilities as you look at let's in the context of mobile application for enterprise",
    "start": "3316089",
    "end": "3322720"
  },
  {
    "text": "scenarios now once the user speaks or types into",
    "start": "3322720",
    "end": "3328900"
  },
  {
    "text": "the mobile application enabled with legs the user input is processed by Amazon",
    "start": "3328900",
    "end": "3334780"
  },
  {
    "text": "legs with support for a natural language understanding it can respond back with a",
    "start": "3334780",
    "end": "3342640"
  },
  {
    "text": "stock response that you have configured as part of your Lam as Amazon legs application or it can invoke dynamo D",
    "start": "3342640",
    "end": "3352359"
  },
  {
    "text": "lambda functions for the fulfillment of the intent corresponding to the Amazon",
    "start": "3352359",
    "end": "3360460"
  },
  {
    "text": "legs application that you are building now these lambda functions again using",
    "start": "3360460",
    "end": "3366700"
  },
  {
    "text": "typical serverless micro-services pattern can respond back dynamically",
    "start": "3366700",
    "end": "3372660"
  },
  {
    "text": "based on the functionality that's contained in there or it can invoke",
    "start": "3372660",
    "end": "3378119"
  },
  {
    "text": "dynamo DB or some api's as part of its business logic right so lots of exciting",
    "start": "3378119",
    "end": "3384849"
  },
  {
    "text": "possibilities there for your enterprise applications now I mentioned about the",
    "start": "3384849",
    "end": "3393730"
  },
  {
    "text": "sass connectors whether it's a custom connector or a sass connector you can",
    "start": "3393730",
    "end": "3400900"
  },
  {
    "text": "use the same connectors as part of Amazon Lex as well you can do a",
    "start": "3400900",
    "end": "3406270"
  },
  {
    "text": "server-side fulfillment of your intents so once all the slots corresponding to",
    "start": "3406270",
    "end": "3411819"
  },
  {
    "text": "the intent for Amazon Lex interface are completed you can as I said earlier you",
    "start": "3411819",
    "end": "3418030"
  },
  {
    "text": "can invoke a lambda function you can also invoke a sass connector to go to one of the SAS applications as part of",
    "start": "3418030",
    "end": "3425440"
  },
  {
    "text": "the functionality or you could go to your private API endpoints using the",
    "start": "3425440",
    "end": "3430750"
  },
  {
    "text": "custom connector another option is to do a client-side fulfillment we're after",
    "start": "3430750",
    "end": "3436359"
  },
  {
    "text": "the intent and all the slots are filled you get access to the data corresponding to the intent and the slots on the",
    "start": "3436359",
    "end": "3443260"
  },
  {
    "text": "mobile application side you can use our REST API or our SDKs to invoke these",
    "start": "3443260",
    "end": "3449500"
  },
  {
    "text": "particular connectors to complete the logic behind the intent and the conversation that is going on with",
    "start": "3449500",
    "end": "3455920"
  },
  {
    "text": "Amazon Lex so all these pieces fit well together again depends on how you want",
    "start": "3455920",
    "end": "3462850"
  },
  {
    "text": "to use that as part of your applications now I want to summarize by saying as",
    "start": "3462850",
    "end": "3470580"
  },
  {
    "text": "part of AWS we have a rich set of services and a growing expanding set of",
    "start": "3470580",
    "end": "3478210"
  },
  {
    "text": "services this gives you a sample of services we see lots of our customers",
    "start": "3478210",
    "end": "3484540"
  },
  {
    "text": "and developers use for mobile applications and as well as the backend they range from mobile hub and SDKs for",
    "start": "3484540",
    "end": "3492010"
  },
  {
    "text": "client-side development for server less micro services we have lambda API",
    "start": "3492010",
    "end": "3497050"
  },
  {
    "text": "gateway identity management we have cognitive testing we have device form",
    "start": "3497050",
    "end": "3503020"
  },
  {
    "text": "then we have our code star family like code commit code deploy code pipeline for data management we have dynamo DB",
    "start": "3503020",
    "end": "3510190"
  },
  {
    "text": "RDS cognitive sync storage and content we have s3 cloud front mobile analytics",
    "start": "3510190",
    "end": "3517200"
  },
  {
    "text": "then analytics and big data we have set of services there then for email and",
    "start": "3517200",
    "end": "3522340"
  },
  {
    "text": "push we have SNS simple notification service as well as SES which is simple",
    "start": "3522340",
    "end": "3527470"
  },
  {
    "text": "email service so lots of services now first of all I want to thank you all for",
    "start": "3527470",
    "end": "3534160"
  },
  {
    "text": "all the feedback support that you give as we evolved when iterate on these services",
    "start": "3534160",
    "end": "3539400"
  },
  {
    "text": "hopefully you continue to create these amazing experiences applications using",
    "start": "3539400",
    "end": "3544930"
  },
  {
    "text": "these services those we all get to enjoy those applications so have fun enjoy and",
    "start": "3544930",
    "end": "3550830"
  },
  {
    "text": "thanks for attending the session",
    "start": "3550830",
    "end": "3554760"
  }
]