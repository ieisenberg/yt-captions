[
  {
    "start": "0",
    "end": "20000"
  },
  {
    "text": "all right so let's get started my name is Minh B I have been working with a two",
    "start": "30",
    "end": "6299"
  },
  {
    "text": "Bs for about two years now I work with ADA Boost Mobile so all your mobile SDKs with iOS Android xamarin etc of that",
    "start": "6299",
    "end": "14519"
  },
  {
    "text": "nature today we'll be looking at how to develop well architecture to Android apps with AWS",
    "start": "14519",
    "end": "19970"
  },
  {
    "text": "so little in Genda we'll go over what our app requirements are then look a little bit at the",
    "start": "19970",
    "end": "26310"
  },
  {
    "start": "20000",
    "end": "115000"
  },
  {
    "text": "architecture both local and on the cloud and then we'll look at AWS amplify CLI",
    "start": "26310",
    "end": "31320"
  },
  {
    "text": "which is what we'll be using as our tool chain to provision all these back-end resources and then we'll go into Android",
    "start": "31320",
    "end": "37739"
  },
  {
    "text": "architecture components and how that fits into the EDPs eco sphere then for",
    "start": "37739",
    "end": "44430"
  },
  {
    "text": "the functionality we'll be looking at sign-in we assign in your users a lot of them have usernames accounts etc then",
    "start": "44430",
    "end": "50850"
  },
  {
    "text": "you're gonna access the data and then further engage your users by collecting analytics about what they're clicking",
    "start": "50850",
    "end": "57149"
  },
  {
    "text": "what they're interested in etc things like that and what I what I mean is",
    "start": "57149",
    "end": "62190"
  },
  {
    "text": "we're gonna be building a social news app we're gonna have a news article feed so basically a list view with all the",
    "start": "62190",
    "end": "69689"
  },
  {
    "text": "news articles that we want to look at we'll be able to display this feed comment on the news articles so once you",
    "start": "69689",
    "end": "76320"
  },
  {
    "text": "click on one of these news articles it'll pop up with a more detailed view and then you can start adding comments",
    "start": "76320",
    "end": "82110"
  },
  {
    "text": "if you're signed in this is where authentication comes in once you're off to indicated you can start getting your",
    "start": "82110",
    "end": "88259"
  },
  {
    "text": "users elevated permissions in our case they have the ability to comment on the articles and once you have this great",
    "start": "88259",
    "end": "96240"
  },
  {
    "text": "and wonderful app up and running you'll start to wonder what to tweak and what to add to it so you need to start adding",
    "start": "96240",
    "end": "102509"
  },
  {
    "text": "analytics for us we'll be looking at when users sign in when users sign out and overall which news articles they're",
    "start": "102509",
    "end": "109590"
  },
  {
    "text": "interested in by collecting which news articles they're actually clicking on so",
    "start": "109590",
    "end": "115920"
  },
  {
    "start": "115000",
    "end": "260000"
  },
  {
    "text": "other app requirements we have are basically with with business driven goals it's always we need to display X",
    "start": "115920",
    "end": "122340"
  },
  {
    "text": "and make changes for y but there's an implicit requirement that is common for everyone that's building an app the app",
    "start": "122340",
    "end": "128849"
  },
  {
    "text": "needs to be responsive overall and we need to that through a few ways one is cash cash",
    "start": "128849",
    "end": "135270"
  },
  {
    "text": "not only gives you speed since disk is mad order of magnitude faster than Network it also gives you the ability",
    "start": "135270",
    "end": "141990"
  },
  {
    "text": "for your app to operate offline another is we want to use efficient Network so",
    "start": "141990",
    "end": "147930"
  },
  {
    "text": "we only want to download the amount of information that we need to download so for example the list view of the news",
    "start": "147930",
    "end": "154380"
  },
  {
    "text": "article you might only want to download the title and the synopsis of the news",
    "start": "154380",
    "end": "159660"
  },
  {
    "text": "article but once you actually click into the user article you want the full content all the comments on it and just",
    "start": "159660",
    "end": "166200"
  },
  {
    "text": "that would take more bandwidth but you want to delay that until your users are actually interested in that article and",
    "start": "166200",
    "end": "171900"
  },
  {
    "text": "then last is we have data driven UI updates so that our UI isn't fully aware",
    "start": "171900",
    "end": "177690"
  },
  {
    "text": "of what's underneath rather whenever the data changes we want an event to go up to the view and say here you should",
    "start": "177690",
    "end": "184380"
  },
  {
    "text": "update your textview with the latest and greatest text we'll be doing that",
    "start": "184380",
    "end": "189630"
  },
  {
    "text": "through live data and room so this is a little bit of the local architecture that we'll be using",
    "start": "189630",
    "end": "194640"
  },
  {
    "text": "basically the application will start with the activity up here the activity",
    "start": "194640",
    "end": "201270"
  },
  {
    "text": "will be our view it'll talk to the view model which holds a bunch of live data references these live data references",
    "start": "201270",
    "end": "207870"
  },
  {
    "text": "are being given by the repository the repository later will be communicating",
    "start": "207870",
    "end": "213900"
  },
  {
    "text": "with both the database layer on the left with the model in room and on the right",
    "start": "213900",
    "end": "220290"
  },
  {
    "text": "AWS and the database mobile SDKs for fetching this information from the cloud how the the repository will be",
    "start": "220290",
    "end": "226860"
  },
  {
    "text": "determining that by potentially is there something in the cache if not go to the",
    "start": "226860",
    "end": "231930"
  },
  {
    "text": "cloud and even if there is something in the cache maybe it's three or four days old so you'll want to show the maybe",
    "start": "231930",
    "end": "238940"
  },
  {
    "text": "more stale data maybe make a marker on it but at the same time send off an",
    "start": "238940",
    "end": "244200"
  },
  {
    "text": "asynchronous call to refresh that data and once that's available show that to the users with effortless updating the",
    "start": "244200",
    "end": "252959"
  },
  {
    "text": "database and then that database will automatically go to the view and say we have fresher data for you to see so",
    "start": "252959",
    "end": "260190"
  },
  {
    "start": "260000",
    "end": "360000"
  },
  {
    "text": "that's the local architecture for the cloud architecture we're going to be using a few services",
    "start": "260190",
    "end": "265740"
  },
  {
    "text": "the first will be Amazon kognito this will be a what we were using to signing our users not only signing our users but",
    "start": "265740",
    "end": "272610"
  },
  {
    "text": "also give them permissions to access the AWS resources that you might want to want them to access say for instance",
    "start": "272610",
    "end": "278849"
  },
  {
    "text": "being will view the article next is a Tobias app sync so that'll be our API",
    "start": "278849",
    "end": "285270"
  },
  {
    "text": "layer that's serving all the data that will be we'll be using today we can use",
    "start": "285270",
    "end": "291240"
  },
  {
    "text": "multiple data sources for our example today we'll be using Amazon DynamoDB the",
    "start": "291240",
    "end": "298080"
  },
  {
    "text": "third service that we'll be using is Amazon pin point that's what we be using to collect analytics about our users",
    "start": "298080",
    "end": "304440"
  },
  {
    "text": "once we collect analytics the other half of Amazon pin point is to be able to",
    "start": "304440",
    "end": "310110"
  },
  {
    "text": "engage them and what I mean is you can send push notifications you can send email notifications things like that",
    "start": "310110",
    "end": "316530"
  },
  {
    "text": "once you've gained a little understanding of what your users might be interested in for the news article",
    "start": "316530",
    "end": "322889"
  },
  {
    "text": "maybe the user is interested in pineapples and you've gotten a news new",
    "start": "322889",
    "end": "328080"
  },
  {
    "text": "news article that says there's a new strain of pineapple so you might want to send them a push notification and tell",
    "start": "328080",
    "end": "334469"
  },
  {
    "text": "them about that and maybe they'll click on that news article so how are we gonna do all this well the developer will be",
    "start": "334469",
    "end": "342630"
  },
  {
    "text": "using the AWS amplify CLI this will be what we'll be using to provision all of",
    "start": "342630",
    "end": "348960"
  },
  {
    "text": "these cloud resources but first let's take a look at a dubious app sync how",
    "start": "348960",
    "end": "354240"
  },
  {
    "text": "we're going to communicate with that and what overall the query language is it",
    "start": "354240",
    "end": "360870"
  },
  {
    "text": "abuse app sync will be using graphic you'll and right off the bat one of the things that you get is a dynamic",
    "start": "360870",
    "end": "367770"
  },
  {
    "text": "response shape and how that works is again the list view versus detailed view so the same API you can ask for certain",
    "start": "367770",
    "end": "375690"
  },
  {
    "text": "fields so with the query language you have this overall line one query get news on line two you have the actual",
    "start": "375690",
    "end": "382909"
  },
  {
    "text": "method called get news you're looking at for a ID of one two three and then on",
    "start": "382909",
    "end": "388259"
  },
  {
    "text": "line three and four you're asking for the ID and title back ID is a good",
    "start": "388259",
    "end": "393270"
  },
  {
    "text": "practice because you want to echo what arguments you want and title basically this",
    "start": "393270",
    "end": "398460"
  },
  {
    "text": "your ListView but the same API once you're looking at a detailed view you want to maybe you use a little bit more",
    "start": "398460",
    "end": "403979"
  },
  {
    "text": "bandwidth just so the users have information to look at the same API you",
    "start": "403979",
    "end": "409650"
  },
  {
    "text": "can ask for so many more fields on lines 5 through 24 on the right side you can",
    "start": "409650",
    "end": "415259"
  },
  {
    "text": "see you can ask for the image that's tied to the news article you can ask for the synopsis publish date and all the",
    "start": "415259",
    "end": "420360"
  },
  {
    "text": "comments attached to that so that's how you would use the query language with aw",
    "start": "420360",
    "end": "427919"
  },
  {
    "start": "424000",
    "end": "632000"
  },
  {
    "text": "saps Inc so what is aw saps Inc it is a managed service graphic UL service so we",
    "start": "427919",
    "end": "433919"
  },
  {
    "text": "managed all the queries mutations subscriptions that you would be using to get this data and we'll dive into that a",
    "start": "433919",
    "end": "441090"
  },
  {
    "text": "little more later on you can connect two data sources in your account multiple",
    "start": "441090",
    "end": "446490"
  },
  {
    "text": "data sources if you wish these can range from Amazon DynamoDB which we'll be using today we've also launched support",
    "start": "446490",
    "end": "453960"
  },
  {
    "text": "for Amazon Aurora then another feature would be that we're offering data sync",
    "start": "453960",
    "end": "461729"
  },
  {
    "text": "real-time and offline capabilities on your data source or API so we have subscriptions so this is another way",
    "start": "461729",
    "end": "468539"
  },
  {
    "text": "that you can reduce the network bandwidth subscriptions allow you to tell the service that you're interested",
    "start": "468539",
    "end": "473969"
  },
  {
    "text": "in certain events for us maybe a new comment has come in so if the user is",
    "start": "473969",
    "end": "479580"
  },
  {
    "text": "looking at an article they can open up a WebSocket to the service and the service will say ok this client is interested in",
    "start": "479580",
    "end": "486930"
  },
  {
    "text": "new comments on a certain news article and then once those comments come in the service will make that determination and",
    "start": "486930",
    "end": "493289"
  },
  {
    "text": "push down that Delta so the Delta will be relatively small and you can show that data automatically in your UI",
    "start": "493289",
    "end": "501710"
  },
  {
    "text": "multiple other things is that you can build graphical facades for any AWS service so this is basically just you",
    "start": "501830",
    "end": "508680"
  },
  {
    "text": "confront any service if you're using a service in a particular way that might take five operations but you're using it",
    "start": "508680",
    "end": "514680"
  },
  {
    "text": "consistently with fiber operations you can make a a to be a SAP sync API for",
    "start": "514680",
    "end": "521610"
  },
  {
    "text": "that specifically and that way it's a facade that one API call will intern in",
    "start": "521610",
    "end": "527459"
  },
  {
    "text": "the backend turn into five API calls the next is conflict detection so with all the datasets that",
    "start": "527459",
    "end": "534420"
  },
  {
    "text": "we're sending up if you choose to have a version then the service will take into",
    "start": "534420",
    "end": "541079"
  },
  {
    "text": "account that version if you have multiple actors acting on the same data at the same time so for instance if",
    "start": "541079",
    "end": "547410"
  },
  {
    "text": "there are two editors looking at the news article editor one makes a change on version one editor two is also",
    "start": "547410",
    "end": "555089"
  },
  {
    "text": "looking at at the same time and makes a change on version one well editor one has already pushed up version two editor",
    "start": "555089",
    "end": "561720"
  },
  {
    "text": "two is saying I want to make a change on version one the service says ok you're out of date it comes back with both of",
    "start": "561720",
    "end": "569249"
  },
  {
    "text": "the informations then tells editor too that there's a conflict with your data here's here's the latest version and",
    "start": "569249",
    "end": "575489"
  },
  {
    "text": "here's your version figure out what's changed and you can tell me the version 3 of the article instead of course we",
    "start": "575489",
    "end": "583860"
  },
  {
    "text": "support the next is enterprise security features we support a myriad of ways to",
    "start": "583860",
    "end": "589980"
  },
  {
    "text": "authenticate your calls one is a Tobias identity access management another is Amazon kognito this is through user",
    "start": "589980",
    "end": "596669"
  },
  {
    "text": "pools if your user is signed in then they can make calls to your service we",
    "start": "596669",
    "end": "601679"
  },
  {
    "text": "also support o ID C so you can bring your own o ADC as long as they here to",
    "start": "601679",
    "end": "608040"
  },
  {
    "text": "the protocol and of course if you're doing testing or just local",
    "start": "608040",
    "end": "613790"
  },
  {
    "text": "experimentation we also support API keys so this is the simplest of all the authentication modes it's basically one",
    "start": "613790",
    "end": "620309"
  },
  {
    "text": "string parameter that gets sent with your API calls and this is mainly for testing purposes and when you're not too",
    "start": "620309",
    "end": "627779"
  },
  {
    "text": "concerned about security at that time so this is a debut SAP sync there's a few",
    "start": "627779",
    "end": "635549"
  },
  {
    "text": "other things that we'll look at is the clients will receive the data they ask",
    "start": "635549",
    "end": "640739"
  },
  {
    "text": "for nothing more nothing less this is losing to the first article where listviews will only ask for the",
    "start": "640739",
    "end": "647100"
  },
  {
    "text": "title the detailed views will ask for comments etc you can actually aggregate many resources from many data sources",
    "start": "647100",
    "end": "653790"
  },
  {
    "text": "this is seen when you actually say get news article it returns you a news article with the comments but in reality",
    "start": "653790",
    "end": "659990"
  },
  {
    "text": "there is a news article table and a comments article table it was absent will be",
    "start": "659990",
    "end": "665010"
  },
  {
    "text": "going to both of these tables aggregating that information and then sending it to you back in one response",
    "start": "665010",
    "end": "671300"
  },
  {
    "text": "then a feature of graph QL is that the self-documenting ap is with",
    "start": "671300",
    "end": "676470"
  },
  {
    "text": "introspection if you make a code comment in the graphical schema then that automatically shows up as documentation",
    "start": "676470",
    "end": "682910"
  },
  {
    "text": "we have multiple support on react native android iOS web and j/s these are",
    "start": "682910",
    "end": "690089"
  },
  {
    "text": "through some of holographic UL clients that we've added some custom code on top of to support all of our use cases we",
    "start": "690089",
    "end": "696630"
  },
  {
    "text": "support data persistence across application research most of our clients i think all of our clients have a",
    "start": "696630",
    "end": "702300"
  },
  {
    "text": "internal caching mechanism so if you don't want to deal with cache yourselves you can rely on the internal caching",
    "start": "702300",
    "end": "708240"
  },
  {
    "text": "mechanism to save the data and save you and network calls whenever there is caching available another is right",
    "start": "708240",
    "end": "716250"
  },
  {
    "text": "through mutations with optimistic UI so if for instance your app is offline and",
    "start": "716250",
    "end": "722220"
  },
  {
    "text": "you're making a adit to the news article you can say that I do want to see this reflected in my app we will take that",
    "start": "722220",
    "end": "729120"
  },
  {
    "text": "data write it to the cache and then when your app reads that cache you'll actually see those edits then when you",
    "start": "729120",
    "end": "734910"
  },
  {
    "text": "come online those mutations are saved and basically queued up until you're",
    "start": "734910",
    "end": "740550"
  },
  {
    "text": "online then when you're online we replay these mutations these edits of the article and then the service will be",
    "start": "740550",
    "end": "746550"
  },
  {
    "text": "updated and your local copy will basically be reflecting that already",
    "start": "746550",
    "end": "753140"
  },
  {
    "text": "alright so at this point we went over a Tobias app sync let's see how we can",
    "start": "753290",
    "end": "760230"
  },
  {
    "text": "provision these with a dubious amplify CLI what is a CC amplify CLI we'll be",
    "start": "760230",
    "end": "767220"
  },
  {
    "start": "764000",
    "end": "819000"
  },
  {
    "text": "using a to provision back-end resources and later on we'll see that we can configure it as code where we'll be",
    "start": "767220",
    "end": "773880"
  },
  {
    "text": "doing today is modeling the data with graph QL this will get transpiled into AWS CloudFormation",
    "start": "773880",
    "end": "780720"
  },
  {
    "text": "and then deploy to your back-end it'll be creating the ADA based app sync API",
    "start": "780720",
    "end": "786269"
  },
  {
    "text": "is creating the DynamoDB tables behind that as well and overall there's minimal graphical",
    "start": "786269",
    "end": "792110"
  },
  {
    "text": "knowledge required so to get started we say amplify in it so inside of your",
    "start": "792110",
    "end": "799459"
  },
  {
    "text": "starid simple android app you'll see that a amplify folder is added this is",
    "start": "799459",
    "end": "806029"
  },
  {
    "text": "where we'll be keeping a lot of metadata and state for your progress project then",
    "start": "806029",
    "end": "813920"
  },
  {
    "text": "we'll look at how to actually provision these resources once your project is initialized you will call amplify ad off",
    "start": "813920",
    "end": "821089"
  },
  {
    "text": "so this will be provisioning both you or kognito user pools and Cognito identity",
    "start": "821089",
    "end": "826250"
  },
  {
    "text": "pools this will show up as a base configuration JSON file in your",
    "start": "826250",
    "end": "831920"
  },
  {
    "text": "resources folder basically the JSON that will be added at this point will include",
    "start": "831920",
    "end": "837259"
  },
  {
    "text": "your pool ID it will include your client ID client secrets the user pool will be used to keep track of your users the",
    "start": "837259",
    "end": "845149"
  },
  {
    "text": "identity pool will be the one that has the policies attached to it to allow your users access to your database",
    "start": "845149",
    "end": "851779"
  },
  {
    "text": "resources the next is analytics if you say amplify add analytics the same JSON",
    "start": "851779",
    "end": "858110"
  },
  {
    "text": "file will be updated with your analytics app ID and you're targeting region and",
    "start": "858110",
    "end": "863899"
  },
  {
    "text": "then the same pattern amplify add API the app sync a URL endpoint will be",
    "start": "863899",
    "end": "870740"
  },
  {
    "text": "added this is a custom endpoint for you and only you this will be hosting all your endpoint api's and also includes",
    "start": "870740",
    "end": "880790"
  },
  {
    "text": "your auth mode in our case API key since we want to keep it simple and it will include the API key itself all this JSON",
    "start": "880790",
    "end": "888079"
  },
  {
    "text": "will be read by the SDK automatically so this is just to show you what's happening but the SDK will be reading",
    "start": "888079",
    "end": "893959"
  },
  {
    "text": "that automatically and you don't have to deal with this overall I don't switch over to Lord",
    "start": "893959",
    "end": "903399"
  },
  {
    "text": "this one's asleep",
    "start": "905399",
    "end": "908910"
  },
  {
    "text": "okay so when you call amplify at API one of the one of the prompts will ask you",
    "start": "917259",
    "end": "924350"
  },
  {
    "text": "whether you have a annotated schema and this is where basically you'll be configuring will you have configuration is code with",
    "start": "924350",
    "end": "932149"
  },
  {
    "text": "our news social news app we basically have three objects that we want to look",
    "start": "932149",
    "end": "937639"
  },
  {
    "text": "at the first is a news object will annotate that with a at model saying",
    "start": "937639",
    "end": "943790"
  },
  {
    "text": "that we want all the crud operations create read update delete this will be",
    "start": "943790",
    "end": "948829"
  },
  {
    "text": "translated into queries which are the read operation the mutations for update",
    "start": "948829",
    "end": "954379"
  },
  {
    "text": "create and delete and then subscriptions for when you new ones are being created with or whenever they're updated or even",
    "start": "954379",
    "end": "961279"
  },
  {
    "text": "when they deleted you'll see on line two basically there is a ID",
    "start": "961279",
    "end": "967339"
  },
  {
    "text": "this tells the service that the ID field will be the one that's uniquely",
    "start": "967339",
    "end": "972430"
  },
  {
    "text": "identifying the news article basically like a primary key and then you'll see",
    "start": "972430",
    "end": "977870"
  },
  {
    "text": "this the fields that you'll be configuring such as the title synopsis",
    "start": "977870",
    "end": "984199"
  },
  {
    "text": "content image you'll see that most of these are strings but one thing right",
    "start": "984199",
    "end": "989389"
  },
  {
    "text": "after the string is the bank you can actually specify whether or not these",
    "start": "989389",
    "end": "994810"
  },
  {
    "text": "fields can be knowable so if you send a title that is no the service will reject",
    "start": "994810",
    "end": "1001000"
  },
  {
    "text": "it and then that translates into your client has to do less null checking so you can rely on certain fields being",
    "start": "1001000",
    "end": "1007630"
  },
  {
    "text": "there without having to worry about a null pointer exception another is that the image is doesn't have this bang so",
    "start": "1007630",
    "end": "1014920"
  },
  {
    "text": "sometimes news articles don't have images this special type is an s3 object",
    "start": "1014920",
    "end": "1021040"
  },
  {
    "text": "this gives you what we would call complex objects this equates to images",
    "start": "1021040",
    "end": "1026288"
  },
  {
    "text": "videos binary data things that you probably wouldn't store in a table that",
    "start": "1026289",
    "end": "1031329"
  },
  {
    "text": "is shown here as a type s3 object this basically includes the bucket key region",
    "start": "1031329",
    "end": "1037418"
  },
  {
    "text": "and the local URI that you might be uploading from and then mime type if you want to specify more details about it",
    "start": "1037419",
    "end": "1044589"
  },
  {
    "text": "but basically you have the news article type this has one extra Moorefield which is",
    "start": "1044589",
    "end": "1050649"
  },
  {
    "text": "the comments you can see that it's a list of the type comment and you can see down here we basically defined it as the",
    "start": "1050649",
    "end": "1057610"
  },
  {
    "text": "same unique it has an ID it has the commenter attached to it and the message that they've actually written the",
    "start": "1057610",
    "end": "1064720"
  },
  {
    "text": "they're also connected by the act connection so both of these have a connection the one up here basically",
    "start": "1064720",
    "end": "1072519"
  },
  {
    "text": "says that the news article can have many comments while the comment will be attached to only one news article and",
    "start": "1072519",
    "end": "1079960"
  },
  {
    "text": "then you'll have this name here to tie these two together representing the relationship between these the CLI will take basically these",
    "start": "1079960",
    "end": "1089019"
  },
  {
    "text": "three simple models transform it into cloud formation in the cloud formation",
    "start": "1089019",
    "end": "1095200"
  },
  {
    "text": "you have to worry about too much but it will be the one that's provisioning both the AWS amplify it abuse a app sync",
    "start": "1095200",
    "end": "1104070"
  },
  {
    "text": "api's for you as well as the backend DynamoDB tables that will be actually storing this acting as the datasource it",
    "start": "1104070",
    "end": "1111730"
  },
  {
    "text": "goes on and generates roughly a thousand five variants so does a lot of the heavy lifting for you as long as you know what",
    "start": "1111730",
    "end": "1118840"
  },
  {
    "text": "shape your data is actually in once that's created and deployed this y'all i",
    "start": "1118840",
    "end": "1124720"
  },
  {
    "text": "will do some cookie cutter code for you it'll generate the queries the queries again are the read operations so you can",
    "start": "1124720",
    "end": "1131470"
  },
  {
    "text": "pass in the ID one two three and get back all the information that you request here so for instance if you say",
    "start": "1131470",
    "end": "1137649"
  },
  {
    "text": "get and use you might want all these fields then you look at lists news okay we're asking for a lot of information",
    "start": "1137649",
    "end": "1144519"
  },
  {
    "text": "here so we can take away maybe all the way up to this point and say we only",
    "start": "1144519",
    "end": "1149889"
  },
  {
    "text": "want the ID title and synopsis and potentially if there's more than more",
    "start": "1149889",
    "end": "1156220"
  },
  {
    "text": "than fifty or something of that nature you can have a next token so that there's pagination involved all right",
    "start": "1156220",
    "end": "1164549"
  },
  {
    "text": "that's [Music] okay so that's what the amplify ad API",
    "start": "1164549",
    "end": "1173690"
  },
  {
    "text": "will be doing it'll be creating all these things and creating the graphical queries mutations",
    "start": "1173690",
    "end": "1179860"
  },
  {
    "text": "subscriptions that you can use in your code so let's start with something easy",
    "start": "1179860",
    "end": "1185930"
  },
  {
    "text": "so that means all the cloud backing has been provisioned so let's look at how to",
    "start": "1185930",
    "end": "1191050"
  },
  {
    "text": "interface with that with the SDKs on your app we'll take a look at Amazon",
    "start": "1191050",
    "end": "1196610"
  },
  {
    "text": "Cognito and how to sign in so why I sign in tough sign-in is tough because if you",
    "start": "1196610",
    "end": "1202400"
  },
  {
    "start": "1198000",
    "end": "1297000"
  },
  {
    "text": "were to do it by yourself you'd have to manage the entire directory of users their passwords and overall the security",
    "start": "1202400",
    "end": "1207950"
  },
  {
    "text": "protocol surrounding those with Amazon kognito you'll be able to easily identify your users provide them",
    "start": "1207950",
    "end": "1213830"
  },
  {
    "text": "elevated permissions in our case ability to comment on the articles and best of",
    "start": "1213830",
    "end": "1218840"
  },
  {
    "text": "all you'll be able to personalize their experience once you know who they are you can keep track of the articles that",
    "start": "1218840",
    "end": "1223850"
  },
  {
    "text": "they're looking at save for existence pineapples or their favorite band and you can send them push notifications",
    "start": "1223850",
    "end": "1229790"
  },
  {
    "text": "about those topics how do we do that so the code here is starts with a Davis",
    "start": "1229790",
    "end": "1236720"
  },
  {
    "text": "mobile client which is our solution for authentication you will call it is from",
    "start": "1236720",
    "end": "1242210"
  },
  {
    "text": "of a client get instance so this is a singleton you'll say show sign-in and this will bring up our drop in UI this",
    "start": "1242210",
    "end": "1248600"
  },
  {
    "text": "shows users a sign-in page where they can fill in their username password and",
    "start": "1248600",
    "end": "1254800"
  },
  {
    "text": "multiple and supports multiple flows like forgot password create account MFA so if there's security involved you can",
    "start": "1255130",
    "end": "1263090"
  },
  {
    "text": "ask the user for a SMS code or email code and they can sign in and if they choose to configure it and if you choose",
    "start": "1263090",
    "end": "1270590"
  },
  {
    "text": "configure it you can also have this sign in UI support social sign-in like Facebook or Google which is relatively",
    "start": "1270590",
    "end": "1278090"
  },
  {
    "text": "easier for a lot of our users the next",
    "start": "1278090",
    "end": "1283220"
  },
  {
    "text": "is how do we interact with aw stop sync so it's generated a bunch of graphical",
    "start": "1283220",
    "end": "1288440"
  },
  {
    "text": "queries mutations and subscriptions but that doesn't really work well with our",
    "start": "1288440",
    "end": "1293810"
  },
  {
    "text": "Java or Kotlin code so what the SDK does is it'll actually take these actions",
    "start": "1293810",
    "end": "1300470"
  },
  {
    "start": "1297000",
    "end": "1474000"
  },
  {
    "text": "and create the Java interfaces for them and by extension Colin will be able to use that as well",
    "start": "1300470",
    "end": "1306830"
  },
  {
    "text": "it'll take in the selection sets and then internally it'll have an offline cache and support for complex objects so",
    "start": "1306830",
    "end": "1314570"
  },
  {
    "text": "whenever you do a mutation to create a news article it will detect that you have this s3 object take that local URI",
    "start": "1314570",
    "end": "1321650"
  },
  {
    "text": "upload it to s3 and then that information will be there for you when you want to retrieve it from a query so",
    "start": "1321650",
    "end": "1329929"
  },
  {
    "text": "how does that look this is the query code you'll start here where it's a",
    "start": "1329929",
    "end": "1337220"
  },
  {
    "text": "builder pattern you can pass in the news ID that you want for example 1 2 3 it'll",
    "start": "1337220",
    "end": "1342289"
  },
  {
    "text": "get back this query object you'll pass it over to the client you'll say client query then on top of that you can say",
    "start": "1342289",
    "end": "1350000"
  },
  {
    "text": "that you want network only since we're not relying on the cache in this example we'll use network only otherwise you can",
    "start": "1350000",
    "end": "1357260"
  },
  {
    "text": "say cache and network and the response from the cache will be guaranteed to be first so you can show something from the",
    "start": "1357260",
    "end": "1362780"
  },
  {
    "text": "cache and then network will come later and then you can update that UI as well so for example network only it's",
    "start": "1362780",
    "end": "1369700"
  },
  {
    "text": "retreating as such and then since it is Network we don't want to run it on the",
    "start": "1369700",
    "end": "1376010"
  },
  {
    "text": "main thread so this will in queue it and then run it on a background thread when the response comes in you can take that",
    "start": "1376010",
    "end": "1382159"
  },
  {
    "text": "response and save it off into the database layer otherwise you can deal with the fit here with on failure and",
    "start": "1382159",
    "end": "1390049"
  },
  {
    "text": "similarly the subscription code which will be pushing you the deltas so that you can keep your information up to date",
    "start": "1390049",
    "end": "1395990"
  },
  {
    "text": "this also follows the Builder pattern in this case you can specify that you want to listen to create comments so in your",
    "start": "1395990",
    "end": "1403460"
  },
  {
    "text": "comments that are coming in you can see them streaming into your news article in",
    "start": "1403460",
    "end": "1410150"
  },
  {
    "text": "this case you take that subscription object you call subscribe and it returns you a subscription watcher on top of",
    "start": "1410150",
    "end": "1416270"
  },
  {
    "text": "that you want to call one extra method called execute so this tells the subscription to start listening and it",
    "start": "1416270",
    "end": "1422360"
  },
  {
    "text": "tells the app sync service to start pushing whenever the interesting events start coming through you'll see that on",
    "start": "1422360",
    "end": "1428030"
  },
  {
    "text": "response is the same as before but one thing different is that you'll be getting multiple",
    "start": "1428030",
    "end": "1433690"
  },
  {
    "text": "responses as new current comments are being created this will be fired multiple times and then if there's any",
    "start": "1433690",
    "end": "1440169"
  },
  {
    "text": "failures you'll be notified and on failure and then once you want to stop listening for example the user has",
    "start": "1440169",
    "end": "1446409"
  },
  {
    "text": "navigated away from the view you can say cancel and the oncomplete will be called",
    "start": "1446409",
    "end": "1454200"
  },
  {
    "text": "alright so that was a 2 B SAP sync I'll",
    "start": "1454500",
    "end": "1459940"
  },
  {
    "text": "see how to interact with Amazon pinpoint I with analytics you learn about your",
    "start": "1459940",
    "end": "1467649"
  },
  {
    "text": "users so you can push them information that you think is relevant to them further engaging them the analytics code",
    "start": "1467649",
    "end": "1476529"
  },
  {
    "start": "1474000",
    "end": "1582000"
  },
  {
    "text": "is relatively straightforward we're basically here getting the Analects client and calling record event then the",
    "start": "1476529",
    "end": "1483220"
  },
  {
    "text": "revenge that we're recording it can be generated with create event in our case it's a rule saying it that it's a UI",
    "start": "1483220",
    "end": "1489100"
  },
  {
    "text": "event and they've clicked on a certain use ID and we're going to pass that in and create that once all of this",
    "start": "1489100",
    "end": "1496659"
  },
  {
    "text": "information is collected you can run this simple command amplify analytics",
    "start": "1496659",
    "end": "1501909"
  },
  {
    "text": "console and this will show you the analytics from from any app runs so I've",
    "start": "1501909",
    "end": "1514960"
  },
  {
    "text": "just run amplify analytics come to console and it'll bring you to the pinpoint console and we can navigate to",
    "start": "1514960",
    "end": "1521259"
  },
  {
    "text": "events so I played with it a little bit you can start filtering your events we",
    "start": "1521259",
    "end": "1527320"
  },
  {
    "text": "only have UI events right now so we say we won't look at UI events look at what",
    "start": "1527320",
    "end": "1532360"
  },
  {
    "text": "people have been clicking so far and you can start seeing all the other events",
    "start": "1532360",
    "end": "1537789"
  },
  {
    "text": "that are coming through I've attached some for sign-in some for signing out you can see how many people how many",
    "start": "1537789",
    "end": "1545049"
  },
  {
    "text": "clicks I've been doing lately on sign out you can also see how which people",
    "start": "1545049",
    "end": "1552039"
  },
  {
    "text": "are how many clicks the news articles are getting for example you can see trends see if any news articles are",
    "start": "1552039",
    "end": "1558820"
  },
  {
    "text": "gaining popularity or nature and you can access that through",
    "start": "1558820",
    "end": "1565870"
  },
  {
    "text": "the console here if you want to do more analytics on these events you can always",
    "start": "1565870",
    "end": "1571840"
  },
  {
    "text": "export these and then run any queries that you would like to run on them so at",
    "start": "1571840",
    "end": "1584590"
  },
  {
    "start": "1582000",
    "end": "1906000"
  },
  {
    "text": "this point we've done all of the code to talk to the cloud let's look at how to",
    "start": "1584590",
    "end": "1589690"
  },
  {
    "text": "actually keep that in our local architecture or application architecture what we're trying to achieve is we're",
    "start": "1589690",
    "end": "1596080"
  },
  {
    "text": "want to store the data and keep the data up-to-date because stale data is not so",
    "start": "1596080",
    "end": "1601570"
  },
  {
    "text": "great but on top of that we want to prevent any memory leaks while we're updating you I were holding references",
    "start": "1601570",
    "end": "1608380"
  },
  {
    "text": "to the UI and we'll be looking at a clever way to use live data to prevent",
    "start": "1608380",
    "end": "1614980"
  },
  {
    "text": "any memory leaks and also live data to push updates to UI so again this local",
    "start": "1614980",
    "end": "1622390"
  },
  {
    "text": "architecture diagram we're gonna be starting on the bottom left with the model and room let's see how to actually",
    "start": "1622390",
    "end": "1628600"
  },
  {
    "text": "set that up so these are all Android architecture components if you don't you",
    "start": "1628600",
    "end": "1633850"
  },
  {
    "text": "can read more about them later on if you don't fully understand but just to",
    "start": "1633850",
    "end": "1639130"
  },
  {
    "text": "introduce you the room database this is one way that you could set it up we're using the add database annotation we're",
    "start": "1639130",
    "end": "1645550"
  },
  {
    "text": "saying that we have a news data object that we'll be using and the news Dao",
    "start": "1645550",
    "end": "1651760"
  },
  {
    "text": "that is going to come out of it that News Dao is defined here you can use the",
    "start": "1651760",
    "end": "1661900"
  },
  {
    "text": "query note query syntax that you're familiar with select star from news wear",
    "start": "1661900",
    "end": "1667000"
  },
  {
    "text": "ID equals the news article that you're looking for or maybe if you want to look for the newest articles you can use",
    "start": "1667000",
    "end": "1674050"
  },
  {
    "text": "order by these are all sequel syntaxes that are supported so you'll annotate these and then you can add any methods",
    "start": "1674050",
    "end": "1681670"
  },
  {
    "text": "that you want whether to load the articles whether to list articles and when you save it we're using replace",
    "start": "1681670",
    "end": "1687190"
  },
  {
    "text": "because we feel like the information that we have will be the latest the live data that's being returned here is a",
    "start": "1687190",
    "end": "1695460"
  },
  {
    "text": "observable data holder class so unlike regular observers live data is lifecycle",
    "start": "1695460",
    "end": "1700710"
  },
  {
    "text": "aware so once the activity is dismissed it'll say okay there's nobody else looking at me so I can stop updating my",
    "start": "1700710",
    "end": "1709230"
  },
  {
    "text": "code that I have references to and it'll respect that life cycle as well as any",
    "start": "1709230",
    "end": "1715169"
  },
  {
    "text": "activities that we're using so from the",
    "start": "1715169",
    "end": "1720450"
  },
  {
    "text": "dao we're gonna go over to the entity itself this is basically just a data",
    "start": "1720450",
    "end": "1726960"
  },
  {
    "text": "object so you see the same fields that we configured earlier in our model with",
    "start": "1726960",
    "end": "1732330"
  },
  {
    "text": "the ID title synopsis content publish state so that's very relatively straightforward and we're using ID as",
    "start": "1732330",
    "end": "1740399"
  },
  {
    "text": "our primary key which we annotate right at the top so the repository is what was",
    "start": "1740399",
    "end": "1747330"
  },
  {
    "text": "deciding whether where to get the data from whether from the cache of room or to go online and retrieve information so",
    "start": "1747330",
    "end": "1755279"
  },
  {
    "text": "the pattern is you here for get news is that we kick off that refresh and use that async call to the web to say we",
    "start": "1755279",
    "end": "1762809"
  },
  {
    "text": "want the latest and greatest of that news article and then right afterwards we say go to the database load this news",
    "start": "1762809",
    "end": "1769559"
  },
  {
    "text": "article if you have it this is what we have in our database show it to the user first so that they know that something's",
    "start": "1769559",
    "end": "1775830"
  },
  {
    "text": "loading and then afterwards when this async operation completes then it will go and update the user with through that",
    "start": "1775830",
    "end": "1783179"
  },
  {
    "text": "live data mechanism so here we see the refresh logic this is the same same",
    "start": "1783179",
    "end": "1788520"
  },
  {
    "text": "query syntax that we saw earlier except this is for lists so we do another list with the Builder pattern pass it to the",
    "start": "1788520",
    "end": "1794909"
  },
  {
    "text": "client and then when the response comes back we actually save that information to the news Dao",
    "start": "1794909",
    "end": "1800929"
  },
  {
    "text": "that News Dao go right to the database the database layer which originally returned the live data will now notify",
    "start": "1800929",
    "end": "1807690"
  },
  {
    "text": "that same live data with new information so you don't have to go back and write custom logic for that the view model",
    "start": "1807690",
    "end": "1814770"
  },
  {
    "text": "will be basically transitioning that live data upwards and then finally you",
    "start": "1814770",
    "end": "1820409"
  },
  {
    "text": "see in the view that with the view model you say get news list and you call",
    "start": "1820409",
    "end": "1825960"
  },
  {
    "text": "observe this observe is a math the live data so you're observing the live data the first time it comes",
    "start": "1825960",
    "end": "1831700"
  },
  {
    "text": "through it's taking that cached information and setting that information in the adapter the second time it comes",
    "start": "1831700",
    "end": "1837340"
  },
  {
    "text": "through it's coming from the network and you don't have to do any different anything different it'll just update the UI with the fresher data overall I",
    "start": "1837340",
    "end": "1844750"
  },
  {
    "text": "totally forgot we had high lighting so those are the two I was talking about the view model itself was basically from",
    "start": "1844750",
    "end": "1851799"
  },
  {
    "text": "here then you call get news list for your specific method and then you'll be",
    "start": "1851799",
    "end": "1857500"
  },
  {
    "text": "observing for that same UI code will be used for your cache information as well",
    "start": "1857500",
    "end": "1862600"
  },
  {
    "text": "as your network information so where did we learn today how to make something",
    "start": "1862600",
    "end": "1868900"
  },
  {
    "text": "responsive how we do that through caching we can cache for speed and we",
    "start": "1868900",
    "end": "1874659"
  },
  {
    "text": "can cache for offline usage as well we're looking for efficient network usage with graph QL you can use",
    "start": "1874659",
    "end": "1880809"
  },
  {
    "text": "basically selection sets to say I want just the title where I want the title and the content and the comments overall",
    "start": "1880809",
    "end": "1887919"
  },
  {
    "text": "and this will reduce the need for users to waste their bandwidth on certain",
    "start": "1887919",
    "end": "1894730"
  },
  {
    "text": "information and the data driven UI updates allow you to use the same code to update your UI without having to know",
    "start": "1894730",
    "end": "1902890"
  },
  {
    "text": "where it's coming from whether the cache or the network and the major messages",
    "start": "1902890",
    "end": "1909220"
  },
  {
    "start": "1906000",
    "end": "2129000"
  },
  {
    "text": "are that we're using server lists for scale all these services that we're using will grow with you whether you",
    "start": "1909220",
    "end": "1916240"
  },
  {
    "text": "have 10 users on your users or a million users all these services will scale with you we want to respect the users by",
    "start": "1916240",
    "end": "1922780"
  },
  {
    "text": "using as little bandwidth as possible until it gets to the point that they need that information and then overall",
    "start": "1922780",
    "end": "1929620"
  },
  {
    "text": "analytics on what the user is using the app for how are they interacting with",
    "start": "1929620",
    "end": "1934900"
  },
  {
    "text": "things and what are they interested with ok so thank you we can do a small demo",
    "start": "1934900",
    "end": "1941260"
  },
  {
    "text": "of the app running since we have some time [Music]",
    "start": "1941260",
    "end": "1948329"
  },
  {
    "text": "see myself",
    "start": "1948620",
    "end": "1957190"
  },
  {
    "text": "okay so you can see we're not signed in right now we can go to this there's a",
    "start": "1979070",
    "end": "1984600"
  },
  {
    "text": "short loading on the screen where it hadn't loaded at the actual contents of the article since in this view we don't",
    "start": "1984600",
    "end": "1991200"
  },
  {
    "text": "need that information it will do a short load and then it will cache that information for you",
    "start": "1991200",
    "end": "1996300"
  },
  {
    "text": "we can try to add comments here then it'll prompt you that you need to be",
    "start": "1996300",
    "end": "2001340"
  },
  {
    "text": "signed in so we can go back and do a sign in this at this point we do the",
    "start": "2001340",
    "end": "2006410"
  },
  {
    "text": "sign-in it's you're seeing the drop in UI so for users who are already signed",
    "start": "2006410",
    "end": "2012170"
  },
  {
    "text": "up they can go ahead and put in their username and password and then click Sign In if they need to create an",
    "start": "2012170",
    "end": "2018080"
  },
  {
    "text": "account they can do so with their username password email and go back and go ahead and sign up if they forgotten",
    "start": "2018080",
    "end": "2025490"
  },
  {
    "text": "their password they can put in their username in this field and get forgot password and be emailed the code on how",
    "start": "2025490",
    "end": "2032210"
  },
  {
    "text": "to reset their information and if you configure it on the bottom half the screen on this white space right here if",
    "start": "2032210",
    "end": "2039050"
  },
  {
    "text": "you configure the Facebook and Google buttons will show up to federate those",
    "start": "2039050",
    "end": "2044660"
  },
  {
    "text": "users who want to use their Facebook or Google account instead of creating a new account overall so we can go ahead and",
    "start": "2044660",
    "end": "2050510"
  },
  {
    "text": "sign in right so now the top right",
    "start": "2050510",
    "end": "2062990"
  },
  {
    "text": "corner the sign-in has now become sign out because we're in a signed in state will go here and we'll say you know what",
    "start": "2062990",
    "end": "2071240"
  },
  {
    "text": "is up with grapes something of that nature this will be sent to AB sync and",
    "start": "2071240",
    "end": "2078440"
  },
  {
    "text": "then I promise the information that's coming back you'll see that it's actually going through the subscriptions",
    "start": "2078440",
    "end": "2086570"
  },
  {
    "text": "and coming back on the top what is up with grapes I believe I've done this before but without the question mark as you see",
    "start": "2086570",
    "end": "2093889"
  },
  {
    "text": "here and as you all this information is up-to-date we can say ok let's see if",
    "start": "2093890",
    "end": "2101810"
  },
  {
    "text": "that works offline we come back we still are able to load this page we start able",
    "start": "2101810",
    "end": "2107090"
  },
  {
    "text": "to load the full information ok men this is also saved in memory",
    "start": "2107090",
    "end": "2112640"
  },
  {
    "text": "we can try killing the app opening it up again we still see the news articles we",
    "start": "2112640",
    "end": "2118039"
  },
  {
    "text": "still see the information in the comments that were added and we still don't know what is up with grapes so",
    "start": "2118039",
    "end": "2123920"
  },
  {
    "text": "thank you that's it for me [Applause]",
    "start": "2123920",
    "end": "2130989"
  }
]