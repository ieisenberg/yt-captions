[
  {
    "text": "[Music]",
    "start": "140",
    "end": "1160"
  },
  {
    "text": "[Applause]",
    "start": "1160",
    "end": "2910"
  },
  {
    "text": "[Music]",
    "start": "2910",
    "end": "6080"
  },
  {
    "text": "hi I'm Tjendra a cloud support engineer",
    "start": "8480",
    "end": "10800"
  },
  {
    "text": "here at the AWS office in Sydney today",
    "start": "10800",
    "end": "13759"
  },
  {
    "text": "let's review the Amazon Elastic",
    "start": "13759",
    "end": "15519"
  },
  {
    "text": "Container Registry permission error",
    "start": "15519",
    "end": "17119"
  },
  {
    "text": "message when creating a Lambda function",
    "start": "17119",
    "end": "19039"
  },
  {
    "text": "with a container image let's get",
    "start": "19039",
    "end": "22119"
  },
  {
    "text": "started how to troubleshoot the error",
    "start": "22119",
    "end": "24800"
  },
  {
    "text": "lambda does not have permission to",
    "start": "24800",
    "end": "26560"
  },
  {
    "text": "access the ECR image",
    "start": "26560",
    "end": "30160"
  },
  {
    "text": "creating a lambda function with a",
    "start": "30160",
    "end": "31840"
  },
  {
    "text": "container image requires permissions for",
    "start": "31840",
    "end": "34000"
  },
  {
    "text": "both Lambda and Amazon elastic container",
    "start": "34000",
    "end": "36559"
  },
  {
    "text": "registry when the role has full Lambda",
    "start": "36559",
    "end": "39040"
  },
  {
    "text": "access verify that it also includes the",
    "start": "39040",
    "end": "41520"
  },
  {
    "text": "necessary Amazon ECR permissions there",
    "start": "41520",
    "end": "44239"
  },
  {
    "text": "are two scenarios that we are going to",
    "start": "44239",
    "end": "47320"
  },
  {
    "text": "cover scenario one creating a Lambda",
    "start": "47320",
    "end": "50239"
  },
  {
    "text": "function from an Amazon ECR image URI in",
    "start": "50239",
    "end": "52800"
  },
  {
    "text": "the same AWS account first let's log",
    "start": "52800",
    "end": "55680"
  },
  {
    "text": "into the AWS management console and then",
    "start": "55680",
    "end": "58480"
  },
  {
    "text": "open the Amazon ECR",
    "start": "58480",
    "end": "62000"
  },
  {
    "text": "console select the repository that you",
    "start": "62120",
    "end": "64559"
  },
  {
    "text": "want to",
    "start": "64559",
    "end": "66200"
  },
  {
    "text": "use go to the permissions tab on the",
    "start": "66200",
    "end": "69040"
  },
  {
    "text": "left side from the permissions tab",
    "start": "69040",
    "end": "71760"
  },
  {
    "text": "choose edit policy JSON in the statement",
    "start": "71760",
    "end": "74880"
  },
  {
    "text": "editor add the following policy",
    "start": "74880",
    "end": "76960"
  },
  {
    "text": "statement this policy allows the Lambda",
    "start": "76960",
    "end": "80000"
  },
  {
    "text": "service to retrieve the container image",
    "start": "80000",
    "end": "82000"
  },
  {
    "text": "from this Amazon ECR repository choose",
    "start": "82000",
    "end": "85159"
  },
  {
    "text": "save we are then going to try again to",
    "start": "85159",
    "end": "88000"
  },
  {
    "text": "create the Lambda function as we can see",
    "start": "88000",
    "end": "90320"
  },
  {
    "text": "this time it's",
    "start": "90320",
    "end": "92840"
  },
  {
    "text": "successful scenario two creating a",
    "start": "92840",
    "end": "95439"
  },
  {
    "text": "Lambda function from an Amazon ECR image",
    "start": "95439",
    "end": "97840"
  },
  {
    "text": "URI in a different AWS account in this",
    "start": "97840",
    "end": "100640"
  },
  {
    "text": "scenario let's assume that the Lambda",
    "start": "100640",
    "end": "102880"
  },
  {
    "text": "function is in account A and the ECR",
    "start": "102880",
    "end": "105280"
  },
  {
    "text": "repository is in account B first we are",
    "start": "105280",
    "end": "108240"
  },
  {
    "text": "going to fetch the ECR repository",
    "start": "108240",
    "end": "110159"
  },
  {
    "text": "resource ARN that we are going to use in",
    "start": "110159",
    "end": "112640"
  },
  {
    "text": "the AWS identity and access management",
    "start": "112640",
    "end": "115200"
  },
  {
    "text": "policy we can fetch the resource ARN",
    "start": "115200",
    "end": "117920"
  },
  {
    "text": "from the Amazon ECR repository summary",
    "start": "117920",
    "end": "120520"
  },
  {
    "text": "section select summary on the",
    "start": "120520",
    "end": "123320"
  },
  {
    "text": "left select and copy the",
    "start": "123320",
    "end": "127439"
  },
  {
    "text": "ARM in account A we are going to create",
    "start": "128360",
    "end": "131680"
  },
  {
    "text": "an AM policy with the following",
    "start": "131680",
    "end": "133840"
  },
  {
    "text": "permissions and steps go to",
    "start": "133840",
    "end": "137800"
  },
  {
    "text": "IM select the user or role that we are",
    "start": "137800",
    "end": "142120"
  },
  {
    "text": "using click on add permissions and",
    "start": "142120",
    "end": "144959"
  },
  {
    "text": "choose create inline policy select JSON",
    "start": "144959",
    "end": "149440"
  },
  {
    "text": "paste this policy script choose next",
    "start": "149440",
    "end": "153440"
  },
  {
    "text": "provide the name and then choose create",
    "start": "153440",
    "end": "155760"
  },
  {
    "text": "policy",
    "start": "155760",
    "end": "158760"
  },
  {
    "text": "this policy is required for the user or",
    "start": "159920",
    "end": "162239"
  },
  {
    "text": "role to access the cross account Amazon",
    "start": "162239",
    "end": "164640"
  },
  {
    "text": "ECR",
    "start": "164640",
    "end": "167200"
  },
  {
    "text": "repository in account B edit the Amazon",
    "start": "168519",
    "end": "171840"
  },
  {
    "text": "ECR repository policy and then add the",
    "start": "171840",
    "end": "174640"
  },
  {
    "text": "following statements",
    "start": "174640",
    "end": "178040"
  },
  {
    "text": "the first statement allows account A to",
    "start": "184560",
    "end": "186959"
  },
  {
    "text": "access the Amazon ECR repository and the",
    "start": "186959",
    "end": "189599"
  },
  {
    "text": "second statement allows the Lambda",
    "start": "189599",
    "end": "191280"
  },
  {
    "text": "service from account A to retrieve the",
    "start": "191280",
    "end": "193360"
  },
  {
    "text": "container",
    "start": "193360",
    "end": "195760"
  },
  {
    "text": "image after setting the required",
    "start": "197400",
    "end": "199519"
  },
  {
    "text": "permissions we will test",
    "start": "199519",
    "end": "202720"
  },
  {
    "text": "again as you can see we can now create",
    "start": "203800",
    "end": "206640"
  },
  {
    "text": "the Lambda function using the container",
    "start": "206640",
    "end": "208400"
  },
  {
    "text": "image from the cross account Amazon ECR",
    "start": "208400",
    "end": "210640"
  },
  {
    "text": "repository successfully now you know how",
    "start": "210640",
    "end": "213120"
  },
  {
    "text": "to troubleshoot the Lambda does not have",
    "start": "213120",
    "end": "214879"
  },
  {
    "text": "permission to access the ECR image error",
    "start": "214879",
    "end": "217440"
  },
  {
    "text": "when creating a Lambda function with a",
    "start": "217440",
    "end": "219200"
  },
  {
    "text": "container",
    "start": "219200",
    "end": "220920"
  },
  {
    "text": "image thanks for watching and happy",
    "start": "220920",
    "end": "223360"
  },
  {
    "text": "cloud computing from all of us here at",
    "start": "223360",
    "end": "225200"
  },
  {
    "text": "AWS",
    "start": "225200",
    "end": "227160"
  },
  {
    "text": "[Applause]",
    "start": "227160",
    "end": "228910"
  },
  {
    "text": "[Music]",
    "start": "228910",
    "end": "232080"
  },
  {
    "text": "[Music]",
    "start": "234120",
    "end": "237299"
  }
]