[
  {
    "text": "hi and welcome to the snowball Edge demo",
    "start": "420",
    "end": "2820"
  },
  {
    "text": "in this demo I'll be showing how you can",
    "start": "2820",
    "end": "4560"
  },
  {
    "text": "deploy a pre-trained ml model on snow",
    "start": "4560",
    "end": "6299"
  },
  {
    "text": "devices this example is for offline",
    "start": "6299",
    "end": "8700"
  },
  {
    "text": "media analysis but it can also apply to",
    "start": "8700",
    "end": "10559"
  },
  {
    "text": "any modern workload requiring S3 like",
    "start": "10559",
    "end": "12780"
  },
  {
    "text": "data analytics or private 5G",
    "start": "12780",
    "end": "15000"
  },
  {
    "text": "here I've used three key Services",
    "start": "15000",
    "end": "16560"
  },
  {
    "text": "address Noble Edge Amazon ec2 compatible",
    "start": "16560",
    "end": "19920"
  },
  {
    "text": "instances an Amazon S3 compatible",
    "start": "19920",
    "end": "22199"
  },
  {
    "text": "storage although I also could have used",
    "start": "22199",
    "end": "24480"
  },
  {
    "text": "Amazon eks anywhere",
    "start": "24480",
    "end": "26699"
  },
  {
    "text": "on my stable Edge device I've enabled",
    "start": "26699",
    "end": "28740"
  },
  {
    "text": "the S3 service and launched a web app on",
    "start": "28740",
    "end": "30660"
  },
  {
    "text": "the ec2 instance I'll demo accessing the",
    "start": "30660",
    "end": "33180"
  },
  {
    "text": "web app over a lan connection using my",
    "start": "33180",
    "end": "34860"
  },
  {
    "text": "local machine I'll then upload racing",
    "start": "34860",
    "end": "37020"
  },
  {
    "text": "theme media which will save the images",
    "start": "37020",
    "end": "38460"
  },
  {
    "text": "as S3 objects and lastly I'll start the",
    "start": "38460",
    "end": "41160"
  },
  {
    "text": "analysis jobs to identify the images in",
    "start": "41160",
    "end": "43140"
  },
  {
    "text": "our media and store the labels as S3",
    "start": "43140",
    "end": "45420"
  },
  {
    "text": "object metadata tags",
    "start": "45420",
    "end": "48920"
  },
  {
    "text": "under the hood this is the architecture",
    "start": "49379",
    "end": "51600"
  },
  {
    "text": "running on the ec2 instance I have three",
    "start": "51600",
    "end": "54000"
  },
  {
    "text": "containers the react.js container which",
    "start": "54000",
    "end": "56280"
  },
  {
    "text": "provides a flexible and modern user",
    "start": "56280",
    "end": "57960"
  },
  {
    "text": "interface for handling the media files",
    "start": "57960",
    "end": "60180"
  },
  {
    "text": "the API container where I've implemented",
    "start": "60180",
    "end": "62160"
  },
  {
    "text": "The Core Business logic using the Python",
    "start": "62160",
    "end": "64140"
  },
  {
    "text": "3 SDK",
    "start": "64140",
    "end": "65338"
  },
  {
    "text": "and the object detection container which",
    "start": "65339",
    "end": "67439"
  },
  {
    "text": "serves a pre-trained model here I've",
    "start": "67439",
    "end": "69720"
  },
  {
    "text": "selected a vision Transformer from the",
    "start": "69720",
    "end": "71460"
  },
  {
    "text": "open source Community hugging face",
    "start": "71460",
    "end": "73380"
  },
  {
    "text": "I've also outlined an alternative option",
    "start": "73380",
    "end": "75360"
  },
  {
    "text": "to upload streaming media from IP",
    "start": "75360",
    "end": "76979"
  },
  {
    "text": "cameras to the ec2 instance",
    "start": "76979",
    "end": "80600"
  },
  {
    "text": "on the left is the react.js web page",
    "start": "82200",
    "end": "84240"
  },
  {
    "text": "that I've built and on the right is AWS",
    "start": "84240",
    "end": "86520"
  },
  {
    "text": "Ops hub Ado's Ops Hub here provides a",
    "start": "86520",
    "end": "89220"
  },
  {
    "text": "unified view of the AWS services that",
    "start": "89220",
    "end": "91140"
  },
  {
    "text": "are running on snow family devices and",
    "start": "91140",
    "end": "93240"
  },
  {
    "text": "automates operational tasks through AWS",
    "start": "93240",
    "end": "95159"
  },
  {
    "text": "systems manager",
    "start": "95159",
    "end": "96720"
  },
  {
    "text": "here I'm accessing the react.js site",
    "start": "96720",
    "end": "98759"
  },
  {
    "text": "over a local area connection on a",
    "start": "98759",
    "end": "100619"
  },
  {
    "text": "private Network disconnected from the",
    "start": "100619",
    "end": "102600"
  },
  {
    "text": "internet",
    "start": "102600",
    "end": "104159"
  },
  {
    "text": "I'll start by uploading a set of murder",
    "start": "104159",
    "end": "106380"
  },
  {
    "text": "racing images",
    "start": "106380",
    "end": "109040"
  },
  {
    "text": "which are all persisted from ec2 into S3",
    "start": "109380",
    "end": "114320"
  },
  {
    "text": "by clicking into the object you can see",
    "start": "118979",
    "end": "121200"
  },
  {
    "text": "I've stored the analysis status as S3",
    "start": "121200",
    "end": "123180"
  },
  {
    "text": "object tags to highlight that the media",
    "start": "123180",
    "end": "125460"
  },
  {
    "text": "has yet to be analyzed",
    "start": "125460",
    "end": "128459"
  },
  {
    "text": "these uploaded images can be",
    "start": "128459",
    "end": "130500"
  },
  {
    "text": "individually submitted for analysis or",
    "start": "130500",
    "end": "132660"
  },
  {
    "text": "batch process by the object detection",
    "start": "132660",
    "end": "134220"
  },
  {
    "text": "service",
    "start": "134220",
    "end": "135360"
  },
  {
    "text": "I'll start here with one image an image",
    "start": "135360",
    "end": "137340"
  },
  {
    "text": "of a racing car",
    "start": "137340",
    "end": "139980"
  },
  {
    "text": "and from the ml-powered analysis A car",
    "start": "139980",
    "end": "142440"
  },
  {
    "text": "is identified from the submitted image",
    "start": "142440",
    "end": "144480"
  },
  {
    "text": "and the analysis result is automatically",
    "start": "144480",
    "end": "146580"
  },
  {
    "text": "embedded into the S3 object metadata as",
    "start": "146580",
    "end": "149459"
  },
  {
    "text": "a tag under the key object's detection",
    "start": "149459",
    "end": "151739"
  },
  {
    "text": "by the application",
    "start": "151739",
    "end": "154940"
  },
  {
    "text": "we can also batch process the media",
    "start": "155040",
    "end": "158520"
  },
  {
    "text": "and here all the data you're seeing in",
    "start": "158520",
    "end": "160739"
  },
  {
    "text": "the UI on the left is powered by the S3",
    "start": "160739",
    "end": "163019"
  },
  {
    "text": "object tags",
    "start": "163019",
    "end": "165800"
  },
  {
    "text": "you can see in the other images the",
    "start": "166080",
    "end": "167879"
  },
  {
    "text": "applications are identified a motorbike",
    "start": "167879",
    "end": "169620"
  },
  {
    "text": "and people in the image as well",
    "start": "169620",
    "end": "173480"
  },
  {
    "text": "to build this demo my team used the same",
    "start": "177480",
    "end": "179459"
  },
  {
    "text": "Amazon S3 apis we used in region and",
    "start": "179459",
    "end": "182519"
  },
  {
    "text": "deployed this onto our snowballedge",
    "start": "182519",
    "end": "184200"
  },
  {
    "text": "device",
    "start": "184200",
    "end": "185160"
  },
  {
    "text": "this is just one way you can bring your",
    "start": "185160",
    "end": "187200"
  },
  {
    "text": "in-region applications to the edge with",
    "start": "187200",
    "end": "189540"
  },
  {
    "text": "Amazon ec2 compatible compute an Amazon",
    "start": "189540",
    "end": "192000"
  },
  {
    "text": "S3 compatible storage on snow",
    "start": "192000",
    "end": "194879"
  },
  {
    "text": "with the service compatibility you can",
    "start": "194879",
    "end": "196739"
  },
  {
    "text": "build develop and test with consistent",
    "start": "196739",
    "end": "198900"
  },
  {
    "text": "AWS apis that extends your Cloud",
    "start": "198900",
    "end": "201239"
  },
  {
    "text": "applications to the edge",
    "start": "201239",
    "end": "203459"
  },
  {
    "text": "to learn more about AWS no visit the",
    "start": "203459",
    "end": "205739"
  },
  {
    "text": "links in the description below thanks",
    "start": "205739",
    "end": "207300"
  },
  {
    "text": "for watching",
    "start": "207300",
    "end": "209780"
  }
]