[
  {
    "text": "hi my name is eugene stepanov i'm a senior database solution architect with aws",
    "start": "799",
    "end": "7120"
  },
  {
    "text": "here at aws i focus on sql server and postgres and today we will",
    "start": "7120",
    "end": "13599"
  },
  {
    "text": "take a careful look at the brand new feature that we launched on may 5th of this year",
    "start": "13599",
    "end": "20560"
  },
  {
    "text": "2020 and that is rds support for microsoft distributed transaction coordinator",
    "start": "20560",
    "end": "27760"
  },
  {
    "text": "now ms-dtc has been such an important part of microsoft ecosystem for",
    "start": "27760",
    "end": "32880"
  },
  {
    "text": "distributed applications where you need to execute a transaction across multiple instances",
    "start": "32880",
    "end": "39280"
  },
  {
    "text": "now prior to may 5th you could not have rds instance to be a participant",
    "start": "39280",
    "end": "46960"
  },
  {
    "text": "in the distributed transaction and now since may rds added support for",
    "start": "46960",
    "end": "54000"
  },
  {
    "text": "microsoft distributed transaction coordinator and today we will see how that can be done so with",
    "start": "54000",
    "end": "60640"
  },
  {
    "text": "that let's take a look at our agenda first we will take the prerequisites",
    "start": "60640",
    "end": "67840"
  },
  {
    "text": "then we will take uh take a look at the step-by-step instructions for this demo and then",
    "start": "67840",
    "end": "75520"
  },
  {
    "text": "right after that we will jump straight to the demo and we will end this discussion with",
    "start": "75520",
    "end": "82080"
  },
  {
    "text": "taking a look at some of these limitations limitations that this feature comes with",
    "start": "82080",
    "end": "87600"
  },
  {
    "text": "all right prerequisites from the very top msdtc must be enabled in the option",
    "start": "87600",
    "end": "92720"
  },
  {
    "text": "group those of you who already played with native restores or possibly tde or",
    "start": "92720",
    "end": "99280"
  },
  {
    "text": "bi like reporting services analysis services integration services know that these all these great features have to",
    "start": "99280",
    "end": "105759"
  },
  {
    "text": "be enabled in the option group first msdtc follows the same path you",
    "start": "105759",
    "end": "111119"
  },
  {
    "text": "and we will have it created and enabled um during our demo second one",
    "start": "111119",
    "end": "117920"
  },
  {
    "text": "in doubt transaction resolution must be set to 100 in a parameter group now without going into too much",
    "start": "117920",
    "end": "125680"
  },
  {
    "text": "theory about two-phase commit it's sufficient to say that in doubt transaction resolution setting",
    "start": "125680",
    "end": "133280"
  },
  {
    "text": "controls the default outcome of a transaction that cannot be resolved",
    "start": "133280",
    "end": "139040"
  },
  {
    "text": "by msdtc now if we jump to",
    "start": "139040",
    "end": "144319"
  },
  {
    "text": "microsoft documentation and i will include this link to my powerpoint for those of",
    "start": "144319",
    "end": "150319"
  },
  {
    "text": "you who need to understand it in in depth in detail but essentially",
    "start": "150319",
    "end": "156400"
  },
  {
    "text": "three values are supported zero no presumption one presume commit and two presumably",
    "start": "156400",
    "end": "164160"
  },
  {
    "text": "the reason why we don't support zero or no presumption is simple now if you own ec2",
    "start": "164160",
    "end": "172480"
  },
  {
    "text": "or you own on-prem you can always pull the list off in doubt transaction",
    "start": "172480",
    "end": "179680"
  },
  {
    "text": "review them manually and roll back or roll far forward manually since rds is a managed",
    "start": "179680",
    "end": "187360"
  },
  {
    "text": "service there is no ability to to use that gui and to you to pull that list",
    "start": "187360",
    "end": "193440"
  },
  {
    "text": "so we have to configure msdtc in a way that it can",
    "start": "193440",
    "end": "200599"
  },
  {
    "text": "deterministically um roll back or roll forward and that's",
    "start": "200599",
    "end": "207040"
  },
  {
    "text": "essentially the reason why we we support only one",
    "start": "207040",
    "end": "212400"
  },
  {
    "text": "and two or two all right going back to the powerpoint uh the last",
    "start": "212400",
    "end": "218799"
  },
  {
    "text": "one if in multi-iz 2016 and 2017 enterprise",
    "start": "218799",
    "end": "224480"
  },
  {
    "text": "edition only now let's talk about this for for a second um essentially for 2016",
    "start": "224480",
    "end": "232959"
  },
  {
    "text": "and for 2017 enterprise edition we rely on always on availability group",
    "start": "232959",
    "end": "240480"
  },
  {
    "text": "for multi-z for all other editions and older versions of enterprise we rely",
    "start": "240480",
    "end": "247599"
  },
  {
    "text": "on database mirroring and the limitation is that",
    "start": "247599",
    "end": "252799"
  },
  {
    "text": "there is no way to support distributed transaction transactions",
    "start": "252799",
    "end": "259199"
  },
  {
    "text": "when you are in database mirroring i'm repeating it's not limitation of rds",
    "start": "259199",
    "end": "265520"
  },
  {
    "text": "it is a limitation of msdtc and database mirroring so again",
    "start": "265520",
    "end": "272000"
  },
  {
    "text": "if you and multi-iz then essentially msdtc is supported for 2016 and 2017",
    "start": "272000",
    "end": "279840"
  },
  {
    "text": "enterprise edition only um if you're in single az then then then this limitation is is is not",
    "start": "279840",
    "end": "287040"
  },
  {
    "text": "applicable obviously all right step by step from the very top first",
    "start": "287040",
    "end": "294400"
  },
  {
    "text": "we're going to create our custom option group and we're going to enable msdtc second we'll create our custom parameter",
    "start": "294400",
    "end": "302080"
  },
  {
    "text": "group where we're going to modify in down transaction resolution setting we will set it to one",
    "start": "302080",
    "end": "308960"
  },
  {
    "text": "third we will launch two domain join rds instances",
    "start": "308960",
    "end": "314000"
  },
  {
    "text": "and then as you can see here steps number four and five marked as demo one and then stamps",
    "start": "314000",
    "end": "320800"
  },
  {
    "text": "number six seven and eight marked as demo 2. and essentially we're going to explore two very",
    "start": "320800",
    "end": "328000"
  },
  {
    "text": "different ways of configuring msdtc in the first demo we're going to set up",
    "start": "328000",
    "end": "334800"
  },
  {
    "text": "a linked server between the two rds instances and then we're gonna",
    "start": "334800",
    "end": "340160"
  },
  {
    "text": "execute our distributed transaction over that linked server in the second",
    "start": "340160",
    "end": "347039"
  },
  {
    "text": "demo we're gonna set up a c-sharp project where we're going to rely on the",
    "start": "347039",
    "end": "354880"
  },
  {
    "text": "transaction scope class and essentially we will control the transaction",
    "start": "354880",
    "end": "362160"
  },
  {
    "text": "from the application itself so let's jump to next slide and this is",
    "start": "362160",
    "end": "368400"
  },
  {
    "text": "this is the diagram architecture diagram for both of these um configurations",
    "start": "368400",
    "end": "376560"
  },
  {
    "text": "so as i mentioned in the first demo right here we're going to have two both of our rds",
    "start": "376560",
    "end": "383360"
  },
  {
    "text": "instances they both going to be",
    "start": "383360",
    "end": "388160"
  },
  {
    "text": "active directory joined and then we're going to have a client",
    "start": "388639",
    "end": "394639"
  },
  {
    "text": "application and we're going to make it simple it's just going to be ssms it's going to be sql server management",
    "start": "394639",
    "end": "400080"
  },
  {
    "text": "studio we're going to connect to one of our rds instances we're going",
    "start": "400080",
    "end": "405440"
  },
  {
    "text": "to initiate distributed transaction and distributed transactions gonna go",
    "start": "405440",
    "end": "410560"
  },
  {
    "text": "over the the linked server in this configuration in this",
    "start": "410560",
    "end": "417919"
  },
  {
    "text": "configuration in demo one the msdtc that's running",
    "start": "417919",
    "end": "425599"
  },
  {
    "text": "on the rds instance where we're going to connect to will be our transaction manager and it's",
    "start": "425599",
    "end": "433039"
  },
  {
    "text": "going to enlist the second instance as the resource manager yeah but but the point is that",
    "start": "433039",
    "end": "440800"
  },
  {
    "text": "the transaction manager a service that will coordinate the transaction will be",
    "start": "440800",
    "end": "448080"
  },
  {
    "text": "the msdtc service running on our first instance right so this is our first demo",
    "start": "448080",
    "end": "457360"
  },
  {
    "text": "now let's take a look at the second demo the second demo here involves setting up transaction scope",
    "start": "457360",
    "end": "464160"
  },
  {
    "text": "project configuring local msdtc service and then executing distributed transactions so",
    "start": "464160",
    "end": "470879"
  },
  {
    "text": "going back to the trend to our uh diagram um here's what our second demo gonna",
    "start": "470879",
    "end": "478879"
  },
  {
    "text": "look like we're gonna have all three of our instances the dev box",
    "start": "478879",
    "end": "488560"
  },
  {
    "text": "the first instance and the second instance bad joint again it's going to be managed",
    "start": "488560",
    "end": "495919"
  },
  {
    "text": "joint and we're going to set up our c sharp application",
    "start": "495919",
    "end": "503120"
  },
  {
    "text": "and we're going to configure that application to rely on the local msdtc service",
    "start": "503120",
    "end": "510400"
  },
  {
    "text": "in this configuration it's the local msdtc service that's running locally on",
    "start": "510400",
    "end": "517760"
  },
  {
    "text": "the client will assume the role of the transaction manager",
    "start": "517760",
    "end": "523440"
  },
  {
    "text": "in which case both of our rds instances will just become",
    "start": "523440",
    "end": "530000"
  },
  {
    "text": "a resource managers all right um so that's",
    "start": "530000",
    "end": "536880"
  },
  {
    "text": "that's step-by-step instructions and with that let's jump straight to our",
    "start": "536880",
    "end": "544399"
  },
  {
    "text": "our demo all right before we start building it",
    "start": "544399",
    "end": "549760"
  },
  {
    "text": "out let's explore and let's see what i already have in my account so here on ec2 dashboard i",
    "start": "549760",
    "end": "557920"
  },
  {
    "text": "have two instances running let's take a look at them first i have my jump box and again",
    "start": "557920",
    "end": "564560"
  },
  {
    "text": "jambox is nothing but a a windows instance that's sitting in the public",
    "start": "564560",
    "end": "571040"
  },
  {
    "text": "subnet and i also have this development box and that's where i installed all of my microsoft",
    "start": "571040",
    "end": "579600"
  },
  {
    "text": "development stack i have sql server i have visual studio i have data tools i have i have everything on this box now",
    "start": "579600",
    "end": "587760"
  },
  {
    "text": "that's ec2 on rds it's very simple i",
    "start": "587760",
    "end": "594560"
  },
  {
    "text": "don't have anything let's confirm that that's the fact all",
    "start": "594560",
    "end": "600160"
  },
  {
    "text": "right no instances found and also in my",
    "start": "600160",
    "end": "606399"
  },
  {
    "text": "directory service i have a directory mycorp2.com",
    "start": "606399",
    "end": "616079"
  },
  {
    "text": "which is a microsoft active directory of size standard deploy and when we",
    "start": "616079",
    "end": "622720"
  },
  {
    "text": "launched our rds instances we will be joining those rds instances to this domain to",
    "start": "622720",
    "end": "630839"
  },
  {
    "text": "mycorp2.com domain all right with that let's go to rds",
    "start": "630839",
    "end": "639040"
  },
  {
    "text": "and let's create our option group custom option group so here off of the",
    "start": "639040",
    "end": "647040"
  },
  {
    "text": "left nav we click on options group and we go ahead and we create a group",
    "start": "647040",
    "end": "654959"
  },
  {
    "text": "and let's call it ms gtc",
    "start": "656480",
    "end": "661600"
  },
  {
    "text": "enabled and i'm gonna say the same thing",
    "start": "661600",
    "end": "670959"
  },
  {
    "text": "in the description engine i'm going to go with enterprise edition",
    "start": "671279",
    "end": "677600"
  },
  {
    "text": "and i'm going to go with 2017 let's click create",
    "start": "677600",
    "end": "684640"
  },
  {
    "text": "here's our option group msdtc enabled and let's go ahead",
    "start": "686399",
    "end": "693040"
  },
  {
    "text": "and let's add an option all right the options the option install",
    "start": "693040",
    "end": "700720"
  },
  {
    "text": "obviously going to be msdtc now scrolling down we're coming up on the port uh 5000 is",
    "start": "700720",
    "end": "708640"
  },
  {
    "text": "the default but here you can see the range of allowed values i'm going to change it to 10 thousand",
    "start": "708640",
    "end": "716000"
  },
  {
    "text": "it's just gonna be easier for remember for me to remember this way and um and then there will be a security",
    "start": "716000",
    "end": "724720"
  },
  {
    "text": "group i'm gonna leave my private sql server security group just to remember that this security",
    "start": "724720",
    "end": "730399"
  },
  {
    "text": "group should allow any traffic going at the port 10 000 to come through there is another very important port",
    "start": "730399",
    "end": "737040"
  },
  {
    "text": "port 135 that also should be must be allowed um by your by a virtual firewall",
    "start": "737040",
    "end": "745680"
  },
  {
    "text": "all right um scrolling down we're coming up now on the authentication type and if you click on",
    "start": "745680",
    "end": "752560"
  },
  {
    "text": "that drop down there will be two options mutual and none essentially if you pick mutual then",
    "start": "752560",
    "end": "759440"
  },
  {
    "text": "the rds instances will authenticate each other using windows integrated off",
    "start": "759440",
    "end": "766800"
  },
  {
    "text": "which obviously means that both instances have to be managed adjoint now",
    "start": "766800",
    "end": "774880"
  },
  {
    "text": "if you pick none then no mutual authentication will be",
    "start": "774880",
    "end": "780959"
  },
  {
    "text": "performed between the two hosts and obviously this is not recommended it's very weak uh uh",
    "start": "780959",
    "end": "788800"
  },
  {
    "text": "security posture um so not recommended for production environment so i'm gonna go",
    "start": "788800",
    "end": "795120"
  },
  {
    "text": "with mutual and actually that's one of the reasons why i decided for my demo",
    "start": "795120",
    "end": "802240"
  },
  {
    "text": "to go with adjoint rds instances there is another reason",
    "start": "802240",
    "end": "810800"
  },
  {
    "text": "and we will talk about that reason when we talk about the limitation and it has to do with with the dns",
    "start": "810800",
    "end": "816399"
  },
  {
    "text": "resolution all right uh transaction log size as i'm sure you're aware",
    "start": "816399",
    "end": "822880"
  },
  {
    "text": "microsoft distributed transaction coordinator maintains its own transaction log so i'll say i",
    "start": "822880",
    "end": "829040"
  },
  {
    "text": "don't know 10 and this setting controls the size of that of that log",
    "start": "829040",
    "end": "834320"
  },
  {
    "text": "now we're coming up on the additional configurations let's click on that",
    "start": "834320",
    "end": "839600"
  },
  {
    "text": "here you can see ability to enable or disable inbound and outbound connections",
    "start": "839600",
    "end": "846639"
  },
  {
    "text": "now i will have both of my rds instances be associated with this option group",
    "start": "846639",
    "end": "855600"
  },
  {
    "text": "which means for me i'm gonna leave both of them checked now depending on your",
    "start": "855600",
    "end": "861279"
  },
  {
    "text": "configuration if you want to have one rds instance say only except inbound",
    "start": "861279",
    "end": "869839"
  },
  {
    "text": "and another rds generate only outbound connection then please know that this is where you",
    "start": "869839",
    "end": "876800"
  },
  {
    "text": "can control that in this case you would have obviously you would have to set up two separate options group but that's",
    "start": "876800",
    "end": "883920"
  },
  {
    "text": "fine that that works and here we're coming up on the allowed protocols there is xa",
    "start": "883920",
    "end": "890399"
  },
  {
    "text": "and then there is snalu i'm not gonna go into the details of those protocols if you need to know if",
    "start": "890399",
    "end": "897440"
  },
  {
    "text": "you're curious please look them up there's tons of tons of tons of stuff written about those",
    "start": "897440",
    "end": "904399"
  },
  {
    "text": "protocols and actually if you're curious where these settings come from",
    "start": "904399",
    "end": "912399"
  },
  {
    "text": "um let me show you here's the component services and if i'm",
    "start": "912399",
    "end": "919440"
  },
  {
    "text": "drilled down and here's my distributed transaction coordinator",
    "start": "919440",
    "end": "925199"
  },
  {
    "text": "here's local dtc and if i click on the properties and then go to",
    "start": "925199",
    "end": "932480"
  },
  {
    "text": "security you can see that the settings that we",
    "start": "932480",
    "end": "938720"
  },
  {
    "text": "just went through map pretty much one to one",
    "start": "938720",
    "end": "945440"
  },
  {
    "text": "to the security settings um of the of the dtc property so it's all",
    "start": "945440",
    "end": "951519"
  },
  {
    "text": "it's all right here allow the remote",
    "start": "951519",
    "end": "958560"
  },
  {
    "text": "inbound outbound connections it's right here and enable xa and enable",
    "start": "958560",
    "end": "966800"
  },
  {
    "text": "snalu protocol so it's all it's all right from this form all right",
    "start": "966800",
    "end": "973600"
  },
  {
    "text": "and let's go back to the form and here we're coming up on scheduling",
    "start": "973600",
    "end": "979839"
  },
  {
    "text": "and obviously i am going to click immediately and click modify all right",
    "start": "979839",
    "end": "987440"
  },
  {
    "text": "seems like our option group now has well it's been created and now msdtc",
    "start": "987440",
    "end": "994959"
  },
  {
    "text": "has been added as an option to our custom build option group now let's go to",
    "start": "994959",
    "end": "1001440"
  },
  {
    "text": "parameter groups and let's create a custom parameter group and we're going",
    "start": "1001440",
    "end": "1008399"
  },
  {
    "text": "to call it we're going to call it in doubt well first let's pick the right",
    "start": "1008399",
    "end": "1014880"
  },
  {
    "text": "engine we're going to do sql server enterprise 14",
    "start": "1014880",
    "end": "1021360"
  },
  {
    "text": "which is 2017. group name let me call it in doubt",
    "start": "1021360",
    "end": "1028480"
  },
  {
    "text": "modified and i'm gonna call it in doubt",
    "start": "1030480",
    "end": "1039839"
  },
  {
    "text": "transaction modified",
    "start": "1039919",
    "end": "1045199"
  },
  {
    "text": "let's create and here it is and let's now",
    "start": "1045199",
    "end": "1053440"
  },
  {
    "text": "let's click on that and let's find our inbound exact resolution so",
    "start": "1053440",
    "end": "1060320"
  },
  {
    "text": "currently this setting is set to zero and as you can see the allowed values it allows for zero",
    "start": "1060320",
    "end": "1068640"
  },
  {
    "text": "one and two now if you remember early on we said",
    "start": "1068640",
    "end": "1073679"
  },
  {
    "text": "that rds only supports one and two so i'm gonna added these",
    "start": "1073679",
    "end": "1079440"
  },
  {
    "text": "parameters and i'm gonna set it to one and i'm gonna save changes",
    "start": "1079440",
    "end": "1086480"
  },
  {
    "text": "all right and now it is one and now we're ready to launch our",
    "start": "1086480",
    "end": "1093440"
  },
  {
    "text": "our database instances so let's go ahead and let's create database sql server",
    "start": "1093440",
    "end": "1102559"
  },
  {
    "text": "enterprise we're going to fly real quick through this screen i'm going to go",
    "start": "1102559",
    "end": "1108400"
  },
  {
    "text": "ahead with def test it's going to be database 1. i'll leave bunch of these settings to",
    "start": "1108400",
    "end": "1114799"
  },
  {
    "text": "their defaults",
    "start": "1114799",
    "end": "1123840"
  },
  {
    "text": "database instant size let's leave it as the default storage default i'm going to uncheck auto scaling for",
    "start": "1128080",
    "end": "1136400"
  },
  {
    "text": "storage we're just not going to use it i'm going to leave it with single ac connectivity it's going to be",
    "start": "1136400",
    "end": "1142799"
  },
  {
    "text": "in the default vpc for the subnet group let's place it in the private subnet",
    "start": "1142799",
    "end": "1149520"
  },
  {
    "text": "group and i suggest you do the same putting it in the public putin any database engine",
    "start": "1149520",
    "end": "1155360"
  },
  {
    "text": "in the public uh subnet which is exposed to to the internet that's just a recipe for",
    "start": "1155360",
    "end": "1161360"
  },
  {
    "text": "disaster and here on the vpc security group i'm",
    "start": "1161360",
    "end": "1167200"
  },
  {
    "text": "going to pick my private sql server security group",
    "start": "1167200",
    "end": "1172640"
  },
  {
    "text": "uh let's remove default and let's add private sql server security group",
    "start": "1172640",
    "end": "1178559"
  },
  {
    "text": "default availability zone default database port here we're coming up on the windows auth",
    "start": "1178559",
    "end": "1183919"
  },
  {
    "text": "as i said before there is only one directory aws manage",
    "start": "1183919",
    "end": "1189440"
  },
  {
    "text": "directory that i have i'm going to choose that and here under additional configuration",
    "start": "1189440",
    "end": "1195440"
  },
  {
    "text": "i'm going to pick in doubt modify for the parameter group and msdtc enabled for the option group",
    "start": "1195440",
    "end": "1203520"
  },
  {
    "text": "i'm going to leave time zone collation alone i'm gonna leave backup i'm gonna disable",
    "start": "1203520",
    "end": "1210799"
  },
  {
    "text": "encryption i'm gonna disable performance insights i'm disabling all these great features",
    "start": "1210799",
    "end": "1216559"
  },
  {
    "text": "just to make it go faster and i'm going to create database all right that's going to take",
    "start": "1216559",
    "end": "1222960"
  },
  {
    "text": "a minute or two and i'm also going to go ahead and create",
    "start": "1222960",
    "end": "1228159"
  },
  {
    "text": "a second instance database 2 with exactly the same with exactly the same steps and i'm",
    "start": "1228159",
    "end": "1234640"
  },
  {
    "text": "going to come back when it's all done all right it's been about 10 minutes and",
    "start": "1234640",
    "end": "1239919"
  },
  {
    "text": "now seems like we have both of our instances database 1 and database 2 are ready up and running and available",
    "start": "1239919",
    "end": "1249120"
  },
  {
    "text": "all right we're back to our step-by-step instructions and let's see what we accomplished so far we",
    "start": "1249120",
    "end": "1255520"
  },
  {
    "text": "completed step number one we created our option group we completed step two we created our parameter group and we",
    "start": "1255520",
    "end": "1262480"
  },
  {
    "text": "completed step three we launched two domain join rds instances",
    "start": "1262480",
    "end": "1267679"
  },
  {
    "text": "and now we're coming up on step four and five which is a part of the demo one and that is executing distributed",
    "start": "1267679",
    "end": "1274840"
  },
  {
    "text": "transaction over a linked server so going back to our",
    "start": "1274840",
    "end": "1280799"
  },
  {
    "text": "diagram here this is what we're about to do we already have two",
    "start": "1280799",
    "end": "1287760"
  },
  {
    "text": "instances they both aws active directory joint uh but we're gonna set up a linked",
    "start": "1287760",
    "end": "1294480"
  },
  {
    "text": "server right here and then we're gonna have our client",
    "start": "1294480",
    "end": "1299600"
  },
  {
    "text": "application in which case it's gonna be sql server management studio we're going to connect to one of these",
    "start": "1299600",
    "end": "1304880"
  },
  {
    "text": "instances and that's where we're going to initiate our distributed transaction from in which case it's going to go over the",
    "start": "1304880",
    "end": "1312640"
  },
  {
    "text": "linked server in in this case the msdtc",
    "start": "1312640",
    "end": "1317679"
  },
  {
    "text": "running our on our first instance will become a transaction manager and the",
    "start": "1317679",
    "end": "1323679"
  },
  {
    "text": "second instance would be will be a resource manager all right with that let's jump straight to the",
    "start": "1323679",
    "end": "1331039"
  },
  {
    "text": "demo all right we're here on our development",
    "start": "1331039",
    "end": "1336480"
  },
  {
    "text": "box and here i'm connected to our database one instance as a master user sql",
    "start": "1336480",
    "end": "1343919"
  },
  {
    "text": "authenticated user now in here i also have",
    "start": "1343919",
    "end": "1349840"
  },
  {
    "text": "these two commands and what they do they essentially create a linked server now please remember you cannot create a",
    "start": "1349840",
    "end": "1357600"
  },
  {
    "text": "linked server using graphical interface gui requires s access so",
    "start": "1357600",
    "end": "1366000"
  },
  {
    "text": "creating it using the the explicit sql commands",
    "start": "1366000",
    "end": "1371039"
  },
  {
    "text": "is really the only option and by the way i have included this link this is the",
    "start": "1371039",
    "end": "1376240"
  },
  {
    "text": "very last link here at the bottom of the page where it gives",
    "start": "1376240",
    "end": "1381440"
  },
  {
    "text": "you step-by-step instructions on how to create a link server in in different in",
    "start": "1381440",
    "end": "1388080"
  },
  {
    "text": "different configurations all right so why don't we go ahead and execute these commands",
    "start": "1388080",
    "end": "1396080"
  },
  {
    "text": "all right so now it seems like we should have our linked server",
    "start": "1396080",
    "end": "1404880"
  },
  {
    "text": "created all right now we've got linked server to instance two all right and now essentially we're",
    "start": "1404880",
    "end": "1413520"
  },
  {
    "text": "ready to execute our distributed transaction so here's the very simple trivial script",
    "start": "1413520",
    "end": "1418640"
  },
  {
    "text": "what it's going to do it's going to create this database it's going to put single table in it it's going to be empty and then we're",
    "start": "1418640",
    "end": "1424799"
  },
  {
    "text": "going to execute a distributed transaction across two instances",
    "start": "1424799",
    "end": "1430720"
  },
  {
    "text": "all right so i am currently connected to instance database one let's go ahead and let's",
    "start": "1430720",
    "end": "1436559"
  },
  {
    "text": "create this part of the script that's database one let's now go ahead",
    "start": "1436559",
    "end": "1441760"
  },
  {
    "text": "and let's execute let's connect to instance 2",
    "start": "1441760",
    "end": "1448799"
  },
  {
    "text": "and let's build the same objects there",
    "start": "1450400",
    "end": "1455200"
  },
  {
    "text": "all right testdb testdb all right so both databases and tables",
    "start": "1455520",
    "end": "1462480"
  },
  {
    "text": "been created on both instances let's now switch connection back to database 1.",
    "start": "1462480",
    "end": "1473840"
  },
  {
    "text": "and now we should be able to execute our distributed transaction",
    "start": "1476080",
    "end": "1481600"
  },
  {
    "text": "let's point to testdb and here you go we just successfully",
    "start": "1483679",
    "end": "1490720"
  },
  {
    "text": "executed distributed transactions and we inserted one record",
    "start": "1490720",
    "end": "1496080"
  },
  {
    "text": "and in the table so if we were to check",
    "start": "1496080",
    "end": "1502960"
  },
  {
    "text": "table one here's one record if",
    "start": "1505200",
    "end": "1512000"
  },
  {
    "text": "we want to take a look maybe at the second instance",
    "start": "1512000",
    "end": "1518400"
  },
  {
    "text": "it's obviously going to be here as well all right all right",
    "start": "1518480",
    "end": "1526480"
  },
  {
    "text": "and then that brings us to the end of the our first demo let's go back to our um",
    "start": "1526480",
    "end": "1534000"
  },
  {
    "text": "step-by-step instructions so we've completed now steps four and five and now",
    "start": "1534000",
    "end": "1541200"
  },
  {
    "text": "we have we have demo two we're going to set up a transactions call project we're going to configure a local",
    "start": "1541200",
    "end": "1547840"
  },
  {
    "text": "msdtc service and then we're going to execute a distributed transaction that will be",
    "start": "1547840",
    "end": "1554400"
  },
  {
    "text": "controlled by our client application all right",
    "start": "1554400",
    "end": "1559600"
  },
  {
    "text": "we are here on my development box and to remind you this development box is",
    "start": "1559600",
    "end": "1566080"
  },
  {
    "text": "also a d managed joint it's part of the same mycorp2.com domain",
    "start": "1566080",
    "end": "1571679"
  },
  {
    "text": "i have visual studio installed here and um essentially this is very simple",
    "start": "1571679",
    "end": "1578159"
  },
  {
    "text": "this is console app c-sharp and the class that we're interested in",
    "start": "1578159",
    "end": "1585360"
  },
  {
    "text": "is transaction scope right so this class is defined in system.transactions",
    "start": "1585360",
    "end": "1593440"
  },
  {
    "text": "right here you obviously need to add the reference here",
    "start": "1593440",
    "end": "1599679"
  },
  {
    "text": "and then let's explore what i have here i have two connection",
    "start": "1599679",
    "end": "1606480"
  },
  {
    "text": "strings to both of my rds instances i'm using integrated security as you can",
    "start": "1606480",
    "end": "1614720"
  },
  {
    "text": "see here and here and i have a very simple trivial insert",
    "start": "1614720",
    "end": "1622400"
  },
  {
    "text": "statements against both of my tables",
    "start": "1622400",
    "end": "1627840"
  },
  {
    "text": "in this case i will be inserted value of 10 in both in both tables and then",
    "start": "1627840",
    "end": "1634960"
  },
  {
    "text": "let's scroll down essentially i'm gonna instantiate my transaction",
    "start": "1634960",
    "end": "1641840"
  },
  {
    "text": "scope and then after that i'm gonna",
    "start": "1641840",
    "end": "1647279"
  },
  {
    "text": "instantiate my connection object and i'm gonna open my connection um as soon as i open",
    "start": "1647279",
    "end": "1654880"
  },
  {
    "text": "my connection i'm gonna instantiate my command one and i'm gonna execute non-query",
    "start": "1654880",
    "end": "1663120"
  },
  {
    "text": "against against my um against my connection",
    "start": "1663120",
    "end": "1669840"
  },
  {
    "text": "as soon as that's done i'm gonna go ahead and i'm gonna instantiate my second",
    "start": "1670000",
    "end": "1677279"
  },
  {
    "text": "connection open the connection and execute and execute the second command",
    "start": "1677279",
    "end": "1685279"
  },
  {
    "text": "as non-query again and the point of all of these of all of that is that both of these",
    "start": "1685279",
    "end": "1693120"
  },
  {
    "text": "commands command 1 and command 2 are being executed within the bounds",
    "start": "1693120",
    "end": "1701360"
  },
  {
    "text": "of a single transaction scope so here's transaction scope and",
    "start": "1701360",
    "end": "1708000"
  },
  {
    "text": "here i complete my scope all right so we have set up",
    "start": "1708000",
    "end": "1715919"
  },
  {
    "text": "let's go here we have just set up our transaction scope project and now it's",
    "start": "1715919",
    "end": "1722559"
  },
  {
    "text": "time to configure our local msdtc service all right we are here on component",
    "start": "1722559",
    "end": "1729600"
  },
  {
    "text": "services let's expand let's find our distributor transaction coordinator",
    "start": "1729600",
    "end": "1735679"
  },
  {
    "text": "it's right here expand local dtc let's go to properties click on security",
    "start": "1735679",
    "end": "1743679"
  },
  {
    "text": "and let's enable network dtc access let's let's allow inbound",
    "start": "1743679",
    "end": "1751200"
  },
  {
    "text": "and outbound distributed transactions and let's set our authentication to mutual",
    "start": "1751200",
    "end": "1758000"
  },
  {
    "text": "authentication required right here and by the way if you look at this portion of the",
    "start": "1758000",
    "end": "1763039"
  },
  {
    "text": "screen you'll find that this this is a very very similar to",
    "start": "1763039",
    "end": "1768720"
  },
  {
    "text": "our msdtc option group all right all right and let's go ahead",
    "start": "1768720",
    "end": "1775520"
  },
  {
    "text": "and let's click apply it's going to restart the service",
    "start": "1775520",
    "end": "1780640"
  },
  {
    "text": "service has been restarted okay and click ok all right now",
    "start": "1780640",
    "end": "1787520"
  },
  {
    "text": "we all done and we are ready to execute our distributed transaction",
    "start": "1787520",
    "end": "1795600"
  },
  {
    "text": "one more thing very important and that is this this is built-in firewall rules",
    "start": "1795600",
    "end": "1803600"
  },
  {
    "text": "uh let's go to inbound rules and there are three rules here",
    "start": "1803600",
    "end": "1811520"
  },
  {
    "text": "in the distributed transaction coordinator group these three",
    "start": "1811520",
    "end": "1818080"
  },
  {
    "text": "very very important they need to be they need to be enabled um if you use a standard am army from",
    "start": "1818080",
    "end": "1826880"
  },
  {
    "text": "amazon they will be enabled i also believe that the the standard installation of windows",
    "start": "1826880",
    "end": "1833600"
  },
  {
    "text": "also have them enabled but but please make sure that they are enabled in your environment as well",
    "start": "1833600",
    "end": "1841120"
  },
  {
    "text": "and on the outbound rules",
    "start": "1841120",
    "end": "1846080"
  },
  {
    "text": "we have one built-in rule right here and that also needs to be",
    "start": "1846159",
    "end": "1853279"
  },
  {
    "text": "enabled that is it we all done and now let's go ahead and let's execute",
    "start": "1853279",
    "end": "1861519"
  },
  {
    "text": "our distributed transaction i'm back to my visual studio and let's",
    "start": "1861519",
    "end": "1868720"
  },
  {
    "text": "kick it off",
    "start": "1868720",
    "end": "1871360"
  },
  {
    "text": "all right and it seems like we have come to the scope completion step",
    "start": "1875679",
    "end": "1883518"
  },
  {
    "text": "and let me hit 5. all right it seems like we successfully",
    "start": "1884399",
    "end": "1893120"
  },
  {
    "text": "executed our distributed transaction that's been",
    "start": "1893120",
    "end": "1898720"
  },
  {
    "text": "controlled by the client application so let's go to",
    "start": "1898720",
    "end": "1906640"
  },
  {
    "text": "our management studio and let's see that indeed we have a second value of 10",
    "start": "1906640",
    "end": "1912720"
  },
  {
    "text": "inserted in our record and obviously if you look at the second instance you will",
    "start": "1912720",
    "end": "1918640"
  },
  {
    "text": "also see you'll also see number 10 there and that brings us to the end",
    "start": "1918640",
    "end": "1926159"
  },
  {
    "text": "of our second demo i hope that was beneficial but before we close on it i would like",
    "start": "1926159",
    "end": "1932880"
  },
  {
    "text": "to go back to our powerpoint and take a look at some of the limitations",
    "start": "1932880",
    "end": "1938640"
  },
  {
    "text": "that this support comes with from the very top and we've talked about this already",
    "start": "1938640",
    "end": "1944000"
  },
  {
    "text": "number one msdtc is not supported on instances using sql server database",
    "start": "1944000",
    "end": "1949440"
  },
  {
    "text": "mirroring so which means that if you essentially in multi-z you're in",
    "start": "1949440",
    "end": "1956799"
  },
  {
    "text": "standard edition or you are in the older versions of",
    "start": "1956799",
    "end": "1961840"
  },
  {
    "text": "enterprise editions msdtc is not supported in multi-z",
    "start": "1961840",
    "end": "1967440"
  },
  {
    "text": "you're pretty much limited to 2016 and 2017 enterprise edition and again it's not a limitation of our",
    "start": "1967440",
    "end": "1974480"
  },
  {
    "text": "gas this is limitation of msdtc and database mirroring number two",
    "start": "1974480",
    "end": "1981360"
  },
  {
    "text": "in doubt transaction resolution parameter must be set to one or zero again we've talked about this but we",
    "start": "1981360",
    "end": "1988240"
  },
  {
    "text": "need to provide deterministic way of resolving these in doubt transaction",
    "start": "1988240",
    "end": "1993919"
  },
  {
    "text": "and that's why we don't support uh value zero which is no presumption",
    "start": "1993919",
    "end": "2001360"
  },
  {
    "text": "number three you can read it yourself but essentially what it means it means",
    "start": "2001360",
    "end": "2007600"
  },
  {
    "text": "that if you are if you don't have your rds instances domain join then all the host names that",
    "start": "2007600",
    "end": "2015919"
  },
  {
    "text": "participate in in the distributed transactions would have to be resolvable using their net bias names",
    "start": "2015919",
    "end": "2023919"
  },
  {
    "text": "and that adds additional complexity it adds additional manual stab because",
    "start": "2023919",
    "end": "2029440"
  },
  {
    "text": "now you have to configure your dns entries so that",
    "start": "2029440",
    "end": "2034960"
  },
  {
    "text": "that resolution can take place and for domain join instances that just",
    "start": "2034960",
    "end": "2041519"
  },
  {
    "text": "automatically supported automatically maintained by rds and that's a second reason",
    "start": "2041519",
    "end": "2048158"
  },
  {
    "text": "why why i chose domain join instances for my for my demo",
    "start": "2048159",
    "end": "2055520"
  },
  {
    "text": "and to remind you the first reason was mutual authentication",
    "start": "2055520",
    "end": "2061118"
  },
  {
    "text": "and number four distributed transactions that depend on the custom built client dll",
    "start": "2061119",
    "end": "2068079"
  },
  {
    "text": "um are not supported on rds the you can find the full list follow",
    "start": "2068079",
    "end": "2074320"
  },
  {
    "text": "following that link down below and that brings us to the end of",
    "start": "2074320",
    "end": "2080000"
  },
  {
    "text": "this demo i hope that was beneficial i would like to",
    "start": "2080000",
    "end": "2086079"
  },
  {
    "text": "thank every single one of you for finding time and watching this video and at the end",
    "start": "2086079",
    "end": "2091440"
  },
  {
    "text": "i would like to wish all of you happy computing from all of us at aws thank you very much",
    "start": "2091440",
    "end": "2100400"
  }
]