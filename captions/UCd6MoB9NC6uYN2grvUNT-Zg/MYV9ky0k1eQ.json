[
  {
    "start": "0",
    "end": "44000"
  },
  {
    "text": "alright so we're going to get started right on time because we got a lot to cover thank you everyone for coming to",
    "start": "6740",
    "end": "12420"
  },
  {
    "text": "this session I know it's late in the summit but this is a good one I hope so",
    "start": "12420",
    "end": "19010"
  },
  {
    "text": "my name is Jed Sun wall I run the open data program at AWS and I'm going to talk a little bit about one of our",
    "start": "19010",
    "end": "25260"
  },
  {
    "text": "public data sets and how we use lambda both to sort of create the data set and then a demo that Ryan how do you take a",
    "start": "25260",
    "end": "33540"
  },
  {
    "text": "last name Ryan upset us he told me once I forgot down here but he built this",
    "start": "33540",
    "end": "39030"
  },
  {
    "text": "this demo but I'm going to talk about it but if you have questions about it after he'll be around to do this so so before",
    "start": "39030",
    "end": "45930"
  },
  {
    "start": "44000",
    "end": "148000"
  },
  {
    "text": "I start talking about lambda which I presume a lot of you are interested in several this architectures we might be",
    "start": "45930",
    "end": "51030"
  },
  {
    "text": "familiar with I'm going to talk a little bit about Landsat which not as many people know about so Landsat is a",
    "start": "51030",
    "end": "56070"
  },
  {
    "text": "satellite that's a satellite program that's been around for about 40 years run by the US Geological Survey and it",
    "start": "56070",
    "end": "63420"
  },
  {
    "text": "took me an embarrassingly long time to figure out that Landsat stands for land satellite it covers the entire planet",
    "start": "63420",
    "end": "70170"
  },
  {
    "text": "every 16 days and creates imagery of all all land on Earth and so that's a it's",
    "start": "70170",
    "end": "75299"
  },
  {
    "text": "an image of Seattle my hometown from I don't know sometime in the past year and",
    "start": "75299",
    "end": "80340"
  },
  {
    "text": "soul and side it's really valuable data it is very big so Landsat data is what what's called a raster data and so it's",
    "start": "80340",
    "end": "86909"
  },
  {
    "text": "data that is organized by pixels so every Landsat scene like the one I showed you before is made up of about",
    "start": "86909",
    "end": "94890"
  },
  {
    "text": "840 million pixels of data and so each each pixel represents a measurement of",
    "start": "94890",
    "end": "100979"
  },
  {
    "text": "light reflected off the planet and what's great about Landsat is that it includes visible light you know red blue",
    "start": "100979",
    "end": "106500"
  },
  {
    "text": "and green wavelengths of light as well as a variety of infrared wavelengths and other other kinds of data that we can",
    "start": "106500",
    "end": "112259"
  },
  {
    "text": "measure from space and we add about little over half a trillion pixels of",
    "start": "112259",
    "end": "117479"
  },
  {
    "text": "Landsat data to a public data set every day it's called Landsat on AWS so this",
    "start": "117479",
    "end": "123000"
  },
  {
    "text": "is just an example of some of the kinds of visualizations you can make with Landsat data so these are just three different combinations of different",
    "start": "123000",
    "end": "129539"
  },
  {
    "text": "wavelengths of light this is Wellington New Zealand a nice cloudless day and so we've got a",
    "start": "129539",
    "end": "136650"
  },
  {
    "text": "good natural color image one that highlights vegetation in red using some",
    "start": "136650",
    "end": "142290"
  },
  {
    "text": "infrared data and then another one that highlights urban areas also using infrared data so now so that's a little",
    "start": "142290",
    "end": "150989"
  },
  {
    "start": "148000",
    "end": "232000"
  },
  {
    "text": "brief overview of light side i'll be talking a little bit more about it so what does server list mean so first of",
    "start": "150989",
    "end": "156480"
  },
  {
    "text": "all it doesn't mean necessarily you know there are no servers are obviously is a server it's just a server you don't have to worry about so it's an approach to",
    "start": "156480",
    "end": "163230"
  },
  {
    "text": "software that eliminates the need for you as an application developer to worry about maintaining or administering",
    "start": "163230",
    "end": "169319"
  },
  {
    "text": "servers and your application design is facilitated through interaction with a",
    "start": "169319",
    "end": "174959"
  },
  {
    "text": "pis and services as well as self-created non-server base api so basically a bunch",
    "start": "174959",
    "end": "182010"
  },
  {
    "text": "of API is that you can create yourself and then they're also ap is like the lambda API and other AWS services that",
    "start": "182010",
    "end": "187530"
  },
  {
    "text": "you can interact with and you can build entire applications without ever having to choose what sort of instant size you",
    "start": "187530",
    "end": "193260"
  },
  {
    "text": "want operating system and maintain patches and things like that to keep the software running now lambda is really",
    "start": "193260",
    "end": "200519"
  },
  {
    "text": "cool so lambda is an event-driven computing service that responds to events automatically and runs code based",
    "start": "200519",
    "end": "206760"
  },
  {
    "text": "on events and you only pay for the execution time of the code when you use lambda so you can run code really at any",
    "start": "206760",
    "end": "215010"
  },
  {
    "text": "scale without ever thinking about servers and like I said you know the code is only run at execution time back",
    "start": "215010",
    "end": "223409"
  },
  {
    "text": "in the day when i first started hearing about the cloud this is actually how i imagined the cloud this is sort of like a place where code would run magically",
    "start": "223409",
    "end": "229680"
  },
  {
    "text": "and now today we actually have that it's really cool so i'm going to tell you a little bit about how we actually use",
    "start": "229680",
    "end": "235379"
  },
  {
    "start": "232000",
    "end": "336000"
  },
  {
    "text": "lambda with the landsat project and then talk about ryan's demo so first of all",
    "start": "235379",
    "end": "242659"
  },
  {
    "text": "you can sort of see up there wake up there this is the kind of this is the",
    "start": "242659",
    "end": "248819"
  },
  {
    "text": "the pipeline of how we get Landsat data and make it available to people so before I showed you how Landsat is made",
    "start": "248819",
    "end": "254819"
  },
  {
    "text": "up of several bands of data it's like 12 different bands of data typically the",
    "start": "254819",
    "end": "260190"
  },
  {
    "text": "way you get that data from USGS right now that produces it is you get a tar archive for each scene so like that set",
    "start": "260190",
    "end": "265950"
  },
  {
    "text": "that image of Seattle that I showed you or the image of New Zealand that I showed you you would get a gigabyte tar archive",
    "start": "265950",
    "end": "271900"
  },
  {
    "text": "just one object from from USGS and then you you download it you unpack and then",
    "start": "271900",
    "end": "276970"
  },
  {
    "text": "you figure out what you need and we talk to it when we started looking at building this public data set we talked a lot of users we found that they would",
    "start": "276970",
    "end": "283570"
  },
  {
    "text": "just throw away a ton of data all the time they download a gigabyte and be like well I only need the visible light and they just toss everything else out",
    "start": "283570",
    "end": "288670"
  },
  {
    "text": "so it's kind of redundant so what we do is we we kind of eliminate that pain for people by downloading everything we send",
    "start": "288670",
    "end": "294610"
  },
  {
    "text": "it to ec2 we unpack the tarball and then we make each tiff each image of the Landsat scene and some metadata",
    "start": "294610",
    "end": "300970"
  },
  {
    "text": "available as standalone objects in s3 and then what you'll see here we also",
    "start": "300970",
    "end": "306850"
  },
  {
    "text": "configured amazon simple notification service SNS to create notifications",
    "start": "306850",
    "end": "312430"
  },
  {
    "text": "anytime a new scene is added and available and like i said here's another",
    "start": "312430",
    "end": "317980"
  },
  {
    "text": "sort of visualization of the raster data like how an image comes together so what we're going to do with lambda is take",
    "start": "317980",
    "end": "325060"
  },
  {
    "text": "those images those those individual bands of data and turn them into a natural color image that anybody can see",
    "start": "325060",
    "end": "330430"
  },
  {
    "text": "and we're going to do this automatically and we're not going to use any servers that we administer for this so and as",
    "start": "330430",
    "end": "339040"
  },
  {
    "start": "336000",
    "end": "455000"
  },
  {
    "text": "you can see we're going to seamlessly integrate various services and what we're going to talk about today are lambda obviously I talked about us",
    "start": "339040",
    "end": "345160"
  },
  {
    "text": "through quite a bit DynamoDB and SNS so",
    "start": "345160",
    "end": "350410"
  },
  {
    "text": "this is basically what the architecture looks like and also if I'm going fast i",
    "start": "350410",
    "end": "355840"
  },
  {
    "text": "want to point out that after i talked about this and i should have said this in the beginning Matthew Hansen from development seed is going to tell an",
    "start": "355840",
    "end": "361720"
  },
  {
    "text": "even cooler story so I'm going fast because I want to give him plenty of time to talk about how they use lambda with them the Red Cross so just a little",
    "start": "361720",
    "end": "368680"
  },
  {
    "text": "interlude there so anyhow so this is this is basically what the architecture looks like I'm going to walk through it now so this is the SMS notification so",
    "start": "368680",
    "end": "377919"
  },
  {
    "text": "when whenever a new scene is added to the Landsat on AWS bucket it triggers a",
    "start": "377919",
    "end": "383890"
  },
  {
    "text": "notification that that sends out a message it looks like this it's just a big JSON blob and highlighted right",
    "start": "383890",
    "end": "389919"
  },
  {
    "text": "there off like asked you let me go back",
    "start": "389919",
    "end": "395620"
  },
  {
    "text": "actually is probable bit easier to see is that is the name so the key name that comes with it",
    "start": "395620",
    "end": "403270"
  },
  {
    "text": "so this key name says there is a new scene and this is the scene name okay so",
    "start": "403270",
    "end": "409210"
  },
  {
    "text": "that's what goes out to SNS and that is also what's available to lambda now once",
    "start": "409210",
    "end": "415960"
  },
  {
    "text": "we know that is seen is available we also know that all these different files are available this is what I said before we have all the different wavelengths of",
    "start": "415960",
    "end": "422230"
  },
  {
    "text": "light that are available and this is just a little index file that shows that off and so when it seemed comes in we",
    "start": "422230",
    "end": "428920"
  },
  {
    "text": "can see what's available and we can programmatically take whatever we want from the bucket and do whatever we want",
    "start": "428920",
    "end": "434530"
  },
  {
    "text": "with it so and then what we're going to do is we're going to take data we reuse",
    "start": "434530",
    "end": "439690"
  },
  {
    "text": "lambda to take data out of the metadata file that comes with a Landsat scene and",
    "start": "439690",
    "end": "445180"
  },
  {
    "text": "send it to DynamoDB and then based on that information on the metadata we're going to also deploy some more lambda",
    "start": "445180",
    "end": "451540"
  },
  {
    "text": "functions to do stuff with the scene based on the data that we know about it so this is what lambda this is what the",
    "start": "451540",
    "end": "457780"
  },
  {
    "text": "lambda code looks like and basically we've been able to code based on the structure of the Landsat data we can",
    "start": "457780",
    "end": "464140"
  },
  {
    "text": "programmatically access anything that we want so as soon as we get the message from from SNS we know where to find",
    "start": "464140",
    "end": "469840"
  },
  {
    "text": "everything else that we need so we can get in the just in the name alone of a",
    "start": "469840",
    "end": "476350"
  },
  {
    "text": "Landsat seen that the night one of the nice things about Landsat is that it's named quite well all the data is named",
    "start": "476350",
    "end": "481600"
  },
  {
    "text": "quite well so we can see in the name we can see the location of the scene we can also see the day that it was taken and",
    "start": "481600",
    "end": "488250"
  },
  {
    "text": "and then of course like I said we can find all the other files that we want from it so one of the first things we do",
    "start": "488250",
    "end": "495040"
  },
  {
    "text": "when we actually do this every time a new Landsat scene is added to the bucket is we take there's a what's called an MTL metadata file that USGS provides and",
    "start": "495040",
    "end": "502210"
  },
  {
    "text": "it's just a text file and it's a full of really great data but it's a space delimited file and it's kind of hard to",
    "start": "502210",
    "end": "508240"
  },
  {
    "text": "parse so it's kind of hard to get through so we wrote a script a guy named jeff layton might be in here I don't",
    "start": "508240",
    "end": "513520"
  },
  {
    "text": "know he's great he wrote a script in lambda to recognize every text file that",
    "start": "513520",
    "end": "519250"
  },
  {
    "text": "shows up in the bucket like every one of these metadata files and turn it into adjacent object that we can store in the",
    "start": "519250",
    "end": "524470"
  },
  {
    "text": "bucket as well so that's that's number one and it makes it a lot easier for us",
    "start": "524470",
    "end": "529540"
  },
  {
    "text": "to now see when a scene comes in is that is the JSON file there look at the JSON file and we can see in there we",
    "start": "529540",
    "end": "535780"
  },
  {
    "text": "can see is this scene very cloudy that's our USGS provides some really interesting data along with each scene like how cloudy is it and then also what",
    "start": "535780",
    "end": "542470"
  },
  {
    "text": "is the angle of the Sun and then based on those two bits of information we can tell if it's going to gonna look good",
    "start": "542470",
    "end": "548710"
  },
  {
    "text": "basically so that's like can we actually see the land and is the Sun at a nice angle that we can see the terrain to like Hill shades and stuff like that so",
    "start": "548710",
    "end": "556150"
  },
  {
    "text": "what we do then so we get the data out of Jason put it in a dynamo DB were then",
    "start": "556150",
    "end": "561160"
  },
  {
    "text": "able to search and we're able to say find us good looking scenes find a scenes that have less than you know say",
    "start": "561160",
    "end": "567040"
  },
  {
    "text": "like ten or twenty percent cloud cover and that have an appropriate angle of the Sun to produce a nice image now this",
    "start": "567040",
    "end": "574450"
  },
  {
    "text": "is the genius part that I have to give a shout out to Ryan force so Landsat scenes are pretty big the data its",
    "start": "574450",
    "end": "580030"
  },
  {
    "text": "lossless data so the files are quite large like I said there are a lot of pixels in there and so typically I was",
    "start": "580030",
    "end": "586210"
  },
  {
    "text": "always you know to scratch my head thing about why I'd love to do stuff with lambda and landsat beyond just like the",
    "start": "586210",
    "end": "591220"
  },
  {
    "text": "metadata files a world where we're working with but the tips are a little bit too big to like actually synthesize",
    "start": "591220",
    "end": "596380"
  },
  {
    "text": "and put into a composite image on their own and so ryan being the genius figured",
    "start": "596380",
    "end": "602620"
  },
  {
    "text": "out well what we can do is we can actually take each tiff and convert it into a jpeg first so compress it into",
    "start": "602620",
    "end": "608440"
  },
  {
    "text": "something that you know we're going to lose some of the like the data and data richness information but our goal here",
    "start": "608440",
    "end": "613780"
  },
  {
    "text": "is merely to produce a nice visual preview of the scene and so what we do is we use lambda to take each tiff",
    "start": "613780",
    "end": "619960"
  },
  {
    "text": "convert it into a jpeg which is quite a bit smaller and then we've got three JPEGs so we've got three JPEGs of each",
    "start": "619960",
    "end": "625960"
  },
  {
    "text": "band of data and then we can then compile those together using imagemagick which is an image processing library",
    "start": "625960",
    "end": "632320"
  },
  {
    "text": "that's native to lambda it just comes built in and produce a really nice true color image preview.jpg preview and then",
    "start": "632320",
    "end": "639550"
  },
  {
    "text": "we can then store that in our own s3 bucket and what Ryan did was you know",
    "start": "639550",
    "end": "645490"
  },
  {
    "text": "would ya send it to s3 and then we have a nice image and you can even use that to serve up on a website because I don't",
    "start": "645490",
    "end": "652210"
  },
  {
    "text": "want to cut into Matthews time but there's a you know basically Ryan created an HTML website that you can",
    "start": "652210",
    "end": "658300"
  },
  {
    "text": "click through and it's only sort of lancets greatest hits you know it's the data is coming in and we have the site",
    "start": "658300",
    "end": "664780"
  },
  {
    "text": "that just sort of ran really identifies good looking scenes and produces these previews and you can click through its super fast and it's",
    "start": "664780",
    "end": "670180"
  },
  {
    "text": "all done without running any servers it's awesome oh that's what I just said",
    "start": "670180",
    "end": "675400"
  },
  {
    "start": "675000",
    "end": "867000"
  },
  {
    "text": "so thank you very much so that's a brief overview of lambda how we use it with Landsat and I want to point out this is",
    "start": "675400",
    "end": "682480"
  },
  {
    "text": "just it's a demo we want to show off like really how powerful that this tool is matthew is going to show off how",
    "start": "682480",
    "end": "687970"
  },
  {
    "text": "development seed works with the Red Cross I believe is that right to work",
    "start": "687970",
    "end": "693460"
  },
  {
    "text": "with OpenStreetMap data using lambda",
    "start": "693460",
    "end": "696840"
  },
  {
    "text": "you all right Thank You Jed so Jed's",
    "start": "703440",
    "end": "708600"
  },
  {
    "text": "actually said that I was going to talk about something a lot cooler and I actually think that this is the cooler",
    "start": "708600",
    "end": "713699"
  },
  {
    "text": "stuff and it's primarily what I do most of the time is work with satellite",
    "start": "713699",
    "end": "719160"
  },
  {
    "text": "imagery such as Landsat and Sentinel and not what I'm going to talk about but i",
    "start": "719160",
    "end": "724589"
  },
  {
    "text": "would add since he talked about all these cool things with Landsat that we add development see to actually do have",
    "start": "724589",
    "end": "732500"
  },
  {
    "text": "written a variety of open source utilities for querying there's an API to",
    "start": "732500",
    "end": "738899"
  },
  {
    "text": "get to this to get to this data on s3 to query it and download it and process it",
    "start": "738899",
    "end": "745160"
  },
  {
    "text": "so you can you can check that out at our website or ping me on Twitter so but",
    "start": "745160",
    "end": "753149"
  },
  {
    "text": "this project is now what do I do here I just press a button when I want to",
    "start": "753149",
    "end": "758339"
  },
  {
    "text": "advance the slammer okay so this this",
    "start": "758339",
    "end": "763529"
  },
  {
    "text": "project is called osm stats and it was originally called osm gamification but",
    "start": "763529",
    "end": "769769"
  },
  {
    "text": "we didn't like the term gamification osm who's heard of openstreetmap okay less",
    "start": "769769",
    "end": "777120"
  },
  {
    "text": "than half so openstreetmap is anytime I",
    "start": "777120",
    "end": "782430"
  },
  {
    "text": "try and explain it I say it's like Google Maps only it's not as good in the",
    "start": "782430",
    "end": "788399"
  },
  {
    "text": "United States but it's generally a lot better when you get outside of the United States Open Street Map is a all",
    "start": "788399",
    "end": "796680"
  },
  {
    "text": "open map data and it's a platform for",
    "start": "796680",
    "end": "801800"
  },
  {
    "text": "making and tracing satellite imagery in order to generate this open data of",
    "start": "801800",
    "end": "808410"
  },
  {
    "text": "roads rivers hospitals it's primarily used in humanitarian efforts after",
    "start": "808410",
    "end": "814819"
  },
  {
    "text": "disasters such as the earthquake in Ecuador an army of volunteers would get",
    "start": "814819",
    "end": "820559"
  },
  {
    "text": "online and try and map as much as they could in the area so that humanitarian teams can get in there and provide",
    "start": "820559",
    "end": "826740"
  },
  {
    "text": "relief so the so openstreetmap is the",
    "start": "826740",
    "end": "834929"
  },
  {
    "text": "main platform for so I for mapping out regions of the",
    "start": "834929",
    "end": "840300"
  },
  {
    "text": "earth and a tasking manager is used to identify critical areas so you can all",
    "start": "840300",
    "end": "845850"
  },
  {
    "text": "go to openstreetmap and sign up for an account and get involved and just start mapping like something by your house",
    "start": "845850",
    "end": "851370"
  },
  {
    "text": "it's probably already mapped or you could go anywhere in the world but there's a tasking manager that that",
    "start": "851370",
    "end": "856860"
  },
  {
    "text": "points people in in the right direction to say hey we need more data in this",
    "start": "856860",
    "end": "862050"
  },
  {
    "text": "area of the world because this is this is really an area in need so the the top",
    "start": "862050",
    "end": "871110"
  },
  {
    "start": "867000",
    "end": "950000"
  },
  {
    "text": "of this is a little bit cut off but the missing maps is an initiative by the Red",
    "start": "871110",
    "end": "876270"
  },
  {
    "text": "Cross and Doctors Without Borders to encourage people to Matt Moore and they",
    "start": "876270",
    "end": "885300"
  },
  {
    "text": "one of the things that they do is this is an auto correct thing that happened to me it says organized marathons",
    "start": "885300",
    "end": "891570"
  },
  {
    "text": "they're not actually trying to get people to go out and run a lot these are mapathon so so the missing maps is a",
    "start": "891570",
    "end": "907190"
  },
  {
    "text": "they organized map of funds and what a map of fun is it's a army of volunteers",
    "start": "907190",
    "end": "912240"
  },
  {
    "text": "a group of volunteers and they all get together in one building or may perhaps virtually and they focus on an area and",
    "start": "912240",
    "end": "919740"
  },
  {
    "text": "they all for an hour hour and a half they focus on trying to map as much as",
    "start": "919740",
    "end": "925440"
  },
  {
    "text": "they can for that region and they had a web site of one of the things that the",
    "start": "925440",
    "end": "931530"
  },
  {
    "text": "missing maps project provided is a website of statistics of users to keep track of various people's contributions",
    "start": "931530",
    "end": "939440"
  },
  {
    "text": "so we got involved at development see oh here's a because the people who funded",
    "start": "939440",
    "end": "946290"
  },
  {
    "text": "it gratuitous plug here so we got",
    "start": "946290",
    "end": "953640"
  },
  {
    "text": "involved with Red Cross to come up with Oh what was originally called osm gamification and we said well we don't",
    "start": "953640",
    "end": "959550"
  },
  {
    "text": "like gamification we like the awesome stats better so what we did was to develop a website of statistics for",
    "start": "959550",
    "end": "966270"
  },
  {
    "text": "users and hashtags that they will use when actually making mapping updates so that",
    "start": "966270",
    "end": "973800"
  },
  {
    "text": "you can track different groups so when you make when you make a bunch of",
    "start": "973800",
    "end": "978839"
  },
  {
    "text": "changes to the map you make a commit when you're done and you could include a bunch of hashtags in there and that",
    "start": "978839",
    "end": "984569"
  },
  {
    "text": "identifies whatever it is that you want to include in there so the osm stats",
    "start": "984569",
    "end": "992100"
  },
  {
    "text": "website would offer a reward mechanism for encouraging people to Matt Moore and",
    "start": "992100",
    "end": "997860"
  },
  {
    "text": "you can earn badges and stuff like that just like all those little games do you play on Facebook and we'd have",
    "start": "997860",
    "end": "1004399"
  },
  {
    "text": "leaderboards for users and hashtags so this was the original idea and I just",
    "start": "1004399",
    "end": "1012170"
  },
  {
    "text": "wanted to show you the website really quick can you switch over here",
    "start": "1012170",
    "end": "1017889"
  },
  {
    "text": "okay just to put it in context here before I talk about how exactly we did",
    "start": "1025730",
    "end": "1030740"
  },
  {
    "text": "this so the goal again is to provide real-time up-to-date statistics of user",
    "start": "1030740",
    "end": "1037730"
  },
  {
    "text": "contributions to different parts of the world on openstreetmap so this is the",
    "start": "1037730",
    "end": "1043548"
  },
  {
    "text": "website for missing maps and we have a leaderboard page",
    "start": "1043549",
    "end": "1050919"
  },
  {
    "text": "okay well real-time demo they never work they never work I had just checked this",
    "start": "1066220",
    "end": "1072580"
  },
  {
    "text": "thing to this thing has been a farewell for a while okay so we have leaderboards you can switch back it's pointless I'm",
    "start": "1072580",
    "end": "1082360"
  },
  {
    "text": "not even gonna not even going to try to do that again all right well picture this really cool website all right",
    "start": "1082360",
    "end": "1089289"
  },
  {
    "text": "leaderboards what it gives is a is the top ranking users with the most commits",
    "start": "1089289",
    "end": "1094299"
  },
  {
    "text": "and the countries that they've committed in and you can also see the countries",
    "start": "1094299",
    "end": "1099539"
  },
  {
    "text": "that are most actively being contributed to as well as a list of different",
    "start": "1099539",
    "end": "1105909"
  },
  {
    "text": "hashtags so this way you could have in essence let's say dueling mapathon we're",
    "start": "1105909",
    "end": "1111909"
  },
  {
    "text": "Team a hash you know uses one hashtag",
    "start": "1111909",
    "end": "1116919"
  },
  {
    "text": "for their team and the other one has a hashtag for their team and so you can see on the leaderboard this tracking in",
    "start": "1116919",
    "end": "1123730"
  },
  {
    "text": "real time okay so that's the that's the",
    "start": "1123730",
    "end": "1129520"
  },
  {
    "text": "background in OpenStreetMap these",
    "start": "1129520",
    "end": "1136000"
  },
  {
    "text": "commits are published every minute and",
    "start": "1136000",
    "end": "1141120"
  },
  {
    "text": "its unfortunately a little bit more complicated than that because we don't have all the information available every",
    "start": "1141120",
    "end": "1146350"
  },
  {
    "text": "minute every minute the metadata from the users is published on the osm",
    "start": "1146350",
    "end": "1154539"
  },
  {
    "text": "website but it doesn't include any of the geometries well we want the g it",
    "start": "1154539",
    "end": "1159820"
  },
  {
    "text": "only contains a reference to the geometry so it has like a node ID or a road ID but it doesn't actually have the",
    "start": "1159820",
    "end": "1166390"
  },
  {
    "text": "geometry of that road that they eyes are added or perhaps even deleted or modified and we want that because we",
    "start": "1166390",
    "end": "1174760"
  },
  {
    "text": "want to do things like track I I would have shown you on the website but we want to do things like track kilometers",
    "start": "1174760",
    "end": "1181360"
  },
  {
    "text": "of roads so the people can earn badges like road builder and river builder and",
    "start": "1181360",
    "end": "1186490"
  },
  {
    "text": "whatever they may be called so there's statistics that we get from those geometries",
    "start": "1186490",
    "end": "1193180"
  },
  {
    "text": "so there's another site called overpass and what they do is they keep an",
    "start": "1193180",
    "end": "1198310"
  },
  {
    "text": "up-to-date database replication of all of openstreetmap and gets the geometries",
    "start": "1198310",
    "end": "1205170"
  },
  {
    "text": "published minute by minute so we have two sources that publish new data every",
    "start": "1205170",
    "end": "1212500"
  },
  {
    "text": "minute and we want to combine those and then make them available also by the",
    "start": "1212500",
    "end": "1219490"
  },
  {
    "text": "minute so what we came up with is this design really a micro services",
    "start": "1219490",
    "end": "1226990"
  },
  {
    "text": "architecture focusing on using lambda primarily but we do use an ec2 I'm not",
    "start": "1226990",
    "end": "1232120"
  },
  {
    "text": "sure really you can't really see this all that well but there's a cool laser pointer on here isn't there all right so",
    "start": "1232120",
    "end": "1240700"
  },
  {
    "text": "here's the two sources of data osm and an overpass and these are both so that",
    "start": "1240700",
    "end": "1247000"
  },
  {
    "text": "we have both these api's we have an ec2 instance running and this isn't the",
    "start": "1247000",
    "end": "1252040"
  },
  {
    "text": "focus of it but it's important to just point out how we get this we have a ec2",
    "start": "1252040",
    "end": "1257050"
  },
  {
    "text": "instance with a docker container running something called planet stream planet stream takes in both those data sources",
    "start": "1257050",
    "end": "1263140"
  },
  {
    "text": "it takes in the metadata it takes in the geometries it matches them up in Redis and then spits them out and where it",
    "start": "1263140",
    "end": "1271720"
  },
  {
    "text": "spits them out is into a Kinesis stream how do I so this is the Kinesis stream",
    "start": "1271720",
    "end": "1282120"
  },
  {
    "text": "so puts them in the Kinesis stream and the rest of this stuff isn't really important we make the geometries",
    "start": "1282120",
    "end": "1288250"
  },
  {
    "text": "available just so that it on the website it shows the last hundred geometries",
    "start": "1288250",
    "end": "1293740"
  },
  {
    "text": "that have been added to the database but this is this is",
    "start": "1293740",
    "end": "1299190"
  },
  {
    "text": "this is where it happens right here this stuff is each change that is entered into the Kinesis stream and we have a",
    "start": "1300540",
    "end": "1306510"
  },
  {
    "text": "lambda function that as these events are",
    "start": "1306510",
    "end": "1311700"
  },
  {
    "text": "added into the stream the lambda function okay so we have an AWS lambda",
    "start": "1311700",
    "end": "1324510"
  },
  {
    "text": "function within node it's maps to the Kinesis stream and when new events are",
    "start": "1324510",
    "end": "1331860"
  },
  {
    "text": "added it the lambda function gets them automatically and calculates a variety",
    "start": "1331860",
    "end": "1339900"
  },
  {
    "text": "of metrics from the geometries and from the metadata including like where where was this edited what countries were this",
    "start": "1339900",
    "end": "1345720"
  },
  {
    "text": "edit and then that gets added to a database that's running on RDS for",
    "start": "1345720",
    "end": "1353250"
  },
  {
    "text": "deployment we deploy this by using Python script in bodø 3 we first deploy",
    "start": "1353250",
    "end": "1361110"
  },
  {
    "text": "the database it's important to sort of get all these things in the right order first deploy the database and migrate",
    "start": "1361110",
    "end": "1368010"
  },
  {
    "text": "that and create a rule so that we can access this is a port for later create a",
    "start": "1368010",
    "end": "1374400"
  },
  {
    "text": "rule so that we can access it from anywhere then we create the Kinesis",
    "start": "1374400",
    "end": "1379680"
  },
  {
    "text": "stream just an empty stream at that point and a lambda function map it to",
    "start": "1379680",
    "end": "1384960"
  },
  {
    "text": "the Kinesis stream but nothing's going on of course at this time then finally what we do is we deploy the ec2 with",
    "start": "1384960",
    "end": "1391680"
  },
  {
    "text": "planets dream and now data starts going into our Kinesis stream and lambda",
    "start": "1391680",
    "end": "1399150"
  },
  {
    "text": "function automatically is now putting that into",
    "start": "1399150",
    "end": "1402800"
  },
  {
    "start": "1405000",
    "end": "1573000"
  },
  {
    "text": "so why lambda and Kinesis so we there's some real advantages to the",
    "start": "1406280",
    "end": "1411539"
  },
  {
    "text": "microservices architecture here of course these are generally general pros",
    "start": "1411539",
    "end": "1419549"
  },
  {
    "text": "for micro services is that you can replace these components this was particularly important to us because we",
    "start": "1419549",
    "end": "1425669"
  },
  {
    "text": "had we wanted to be able to replace planet stream somewhere down the line",
    "start": "1425669",
    "end": "1431309"
  },
  {
    "text": "with something that was a little bit more scalable and easier because right now we're relying on this other API to",
    "start": "1431309",
    "end": "1440100"
  },
  {
    "text": "provide the geometries that's not entirely stable and we also wanted to do some historical processing so planets",
    "start": "1440100",
    "end": "1447360"
  },
  {
    "text": "dream is focused on getting up to date minute by minute changes but we wanted to go back in time a few years at some",
    "start": "1447360",
    "end": "1455460"
  },
  {
    "text": "point and be able to update the database with data over over the last several years and so this was appealing to us",
    "start": "1455460",
    "end": "1464429"
  },
  {
    "text": "because we could replace the parts as needed and the lambda function and the Kinesis dream could stay exactly the",
    "start": "1464429",
    "end": "1470700"
  },
  {
    "text": "same as they were whatever we could whatever we wanted to add into the stream would automatically get processed",
    "start": "1470700",
    "end": "1476309"
  },
  {
    "text": "by lambda and added to our database so we could simultaneously be running planet stream to get these real",
    "start": "1476309",
    "end": "1481980"
  },
  {
    "text": "minute-by-minute as well as another script maybe that's going back and processing historical data and entering",
    "start": "1481980",
    "end": "1488400"
  },
  {
    "text": "that into the stream at the same time but the most important reason really for",
    "start": "1488400",
    "end": "1495179"
  },
  {
    "text": "going to lambda is that I think I have a plot here which doesn't come out very",
    "start": "1495179",
    "end": "1503549"
  },
  {
    "text": "well see but maybe you can see the general trend here which is this is a",
    "start": "1503549",
    "end": "1512280"
  },
  {
    "text": "plot of the invocations of lambda over time but it varies from a few thousand",
    "start": "1512280",
    "end": "1520830"
  },
  {
    "text": "per hour to may be zero because as I said before we have these mapathon so",
    "start": "1520830",
    "end": "1525870"
  },
  {
    "text": "the normal level of commits to openstreetmap for the project is I don't",
    "start": "1525870",
    "end": "1532440"
  },
  {
    "text": "know maybe somebody's adding something at one point so you might have a few commits here and there",
    "start": "1532440",
    "end": "1538880"
  },
  {
    "text": "but then you get all these people in a room together and now they're making thousands of change sets per hour and we",
    "start": "1538880",
    "end": "1546110"
  },
  {
    "text": "didn't want to have an ec2 up that was ready to process and we didn't want to have to worry about you know other",
    "start": "1546110",
    "end": "1551800"
  },
  {
    "text": "lambda was the perfect solution because it's low cost and when it's not",
    "start": "1551800",
    "end": "1557420"
  },
  {
    "text": "processing and doesn't cost us anything so that was that was key and then this",
    "start": "1557420",
    "end": "1563780"
  },
  {
    "text": "is the gerrate this is showing the duration down here of the lambda function which is generally less than a",
    "start": "1563780",
    "end": "1570260"
  },
  {
    "text": "second some some lessons learned we",
    "start": "1570260",
    "end": "1578540"
  },
  {
    "start": "1573000",
    "end": "1790000"
  },
  {
    "text": "didn't use a local testing framework for the lambda function but there are some out there I think that I would advise",
    "start": "1578540",
    "end": "1584390"
  },
  {
    "text": "anybody to look into into doing that if you want to use especially the more complex your project is I think this is",
    "start": "1584390",
    "end": "1591350"
  },
  {
    "text": "a pretty important thing to do is to have some sort of local testing framework so that you're not having to",
    "start": "1591350",
    "end": "1597020"
  },
  {
    "text": "push the lambda and test things out and the lambda logs they take this lambda",
    "start": "1597020",
    "end": "1604790"
  },
  {
    "text": "automatically gets the logs automatically have pushed a cloud watch which works great but it does take some",
    "start": "1604790",
    "end": "1611480"
  },
  {
    "text": "familiarity with figuring out how to how",
    "start": "1611480",
    "end": "1617990"
  },
  {
    "text": "to access those logs we use the AWS CLI which works pretty well but AWS logs is",
    "start": "1617990",
    "end": "1623930"
  },
  {
    "text": "a open source project that we ended up using and it works great for being able to just say give me all the logs within",
    "start": "1623930",
    "end": "1631220"
  },
  {
    "text": "the last hour from this lambda function and show it in my terminal with some",
    "start": "1631220",
    "end": "1638510"
  },
  {
    "text": "pretty colors so i can see see the different fields so i would suggest using that but the most important thing",
    "start": "1638510",
    "end": "1646010"
  },
  {
    "text": "I think that we learned when using lambda functions is the fact that error handling is exceedingly important very",
    "start": "1646010",
    "end": "1654860"
  },
  {
    "text": "important you do not want to push a lambda function of code that mostly",
    "start": "1654860",
    "end": "1661940"
  },
  {
    "text": "works you know that's something that you can get away with in other systems but",
    "start": "1661940",
    "end": "1668480"
  },
  {
    "text": "with lambda if you're and especially with regard to using it on it with a Kinesis stream because",
    "start": "1668480",
    "end": "1675740"
  },
  {
    "text": "if your lambda function errors out ill restart on the same event and it'll do",
    "start": "1675740",
    "end": "1682519"
  },
  {
    "text": "that over and over and over again until your data expires 24 hours later or",
    "start": "1682519",
    "end": "1688220"
  },
  {
    "text": "seven days later if you pay for the seven-day retention of your data so what",
    "start": "1688220",
    "end": "1695269"
  },
  {
    "text": "you want is an intelligent you need you want to be able to handle your errors in",
    "start": "1695269",
    "end": "1700460"
  },
  {
    "text": "an intelligent manner if it's a transient error such as maybe a website's down or something like that",
    "start": "1700460",
    "end": "1706879"
  },
  {
    "text": "then yeah in that case you'd want to you want your lambda function to start up and retry it again and that's fine but",
    "start": "1706879",
    "end": "1714529"
  },
  {
    "text": "if it's any sort of code base error you want to catch that and not return a",
    "start": "1714529",
    "end": "1720499"
  },
  {
    "text": "failure you want to return a success and the login so extra work on error",
    "start": "1720499",
    "end": "1728059"
  },
  {
    "text": "handling you really you really want to focus on them another issue that we ran",
    "start": "1728059",
    "end": "1735559"
  },
  {
    "text": "into was database connections using connects in in node with lambda and I'm",
    "start": "1735559",
    "end": "1744529"
  },
  {
    "text": "not sure of the actual details the specifics of the lambda container reuse",
    "start": "1744529",
    "end": "1750409"
  },
  {
    "text": "but lambda functions are there's a container that's running a lambda function and that container is reused",
    "start": "1750409",
    "end": "1757039"
  },
  {
    "text": "over time what we ran into was a case where we kept on getting these database",
    "start": "1757039",
    "end": "1762559"
  },
  {
    "text": "connection errors because we had our minimum pool size set to 1 and so it",
    "start": "1762559",
    "end": "1768440"
  },
  {
    "text": "tried to force keeping this database connection open in the same container",
    "start": "1768440",
    "end": "1774409"
  },
  {
    "text": "until the container expired and so it kept on failing so once we drop that",
    "start": "1774409",
    "end": "1780470"
  },
  {
    "text": "down to zero where which basically says okay we can we don't need to keep this",
    "start": "1780470",
    "end": "1785779"
  },
  {
    "text": "connection alive anymore",
    "start": "1785779",
    "end": "1788799"
  },
  {
    "start": "1790000",
    "end": "1880000"
  },
  {
    "text": "lamba security and VP sees another issue that we had run into so initially we had",
    "start": "1791450",
    "end": "1797340"
  },
  {
    "text": "this great idea that we would configure RDS to be closed within a VPC and the",
    "start": "1797340",
    "end": "1805650"
  },
  {
    "text": "way that you do that with lambda and this is a very new feature in the last several months that allows you to add a",
    "start": "1805650",
    "end": "1812340"
  },
  {
    "text": "lambda function to of the pc so we're like okay great add the lambda function",
    "start": "1812340",
    "end": "1817860"
  },
  {
    "text": "to a VPC give it a security group give a security group to your RDS and pair",
    "start": "1817860",
    "end": "1824580"
  },
  {
    "text": "those together so you give them permissions to see each other your lambda function should now be able to",
    "start": "1824580",
    "end": "1830880"
  },
  {
    "text": "see your database which worked it worked great it was fine unfortunately as soon",
    "start": "1830880",
    "end": "1838260"
  },
  {
    "text": "as you add your lambda function to a VPC they can't see any of the rest of the world it can only see what's in your VPC",
    "start": "1838260",
    "end": "1845400"
  },
  {
    "text": "there are solutions to that which we didn't end up trying to figure out we",
    "start": "1845400",
    "end": "1851940"
  },
  {
    "text": "instead just opened a hole on our database to the outside world and took",
    "start": "1851940",
    "end": "1859980"
  },
  {
    "text": "our lambda out of the VPC so if anybody has a elegant solution for how to how to",
    "start": "1859980",
    "end": "1866910"
  },
  {
    "text": "do that I have an idea for how that might be done but if you know how that might be done please let me know I think",
    "start": "1866910",
    "end": "1878370"
  },
  {
    "text": "that's I think that's pretty much it this all of our work is open source and",
    "start": "1878370",
    "end": "1883710"
  },
  {
    "text": "it's available on the github Red Cross github page and you can also see various",
    "start": "1883710",
    "end": "1891390"
  },
  {
    "text": "blog posts about this on our website at development sea org",
    "start": "1891390",
    "end": "1896600"
  },
  {
    "text": "yeah oh we also use lambda one more thing we do use lambda I mentioned before about the satellite API for",
    "start": "1899110",
    "end": "1905660"
  },
  {
    "text": "landsat we another application of lambda functions as we use lambda with API",
    "start": "1905660",
    "end": "1912260"
  },
  {
    "text": "gateway and that's how that API works so the API gateway provides endpoints and",
    "start": "1912260",
    "end": "1918530"
  },
  {
    "text": "that actually calls a lambda function which provides the actual data for querying what is available for our",
    "start": "1918530",
    "end": "1926330"
  },
  {
    "text": "Landsat data through there any questions",
    "start": "1926330",
    "end": "1933490"
  },
  {
    "text": "great talks really nice work I just wanted to ask in terms of the lambdas",
    "start": "1946920",
    "end": "1953290"
  },
  {
    "text": "scalability could you just talk a little bit more about maybe some pain points",
    "start": "1953290",
    "end": "1958930"
  },
  {
    "text": "that you ran into or solutions in terms of scaling let's say for you know",
    "start": "1958930",
    "end": "1964120"
  },
  {
    "text": "hundreds of thousands of concurrent executions of your lambda functions and",
    "start": "1964120",
    "end": "1969130"
  },
  {
    "text": "if you hit any pain points with that and how you worked around that I can answer",
    "start": "1969130",
    "end": "1974740"
  },
  {
    "text": "that because we didn't actually encounter any problems with that that",
    "start": "1974740",
    "end": "1980020"
  },
  {
    "text": "was what worked the best I mean let the beauty of lambda was that we we could",
    "start": "1980020",
    "end": "1987610"
  },
  {
    "text": "put whatever we wanted into the stream and lambda would automatically Fire up a",
    "start": "1987610",
    "end": "1993000"
  },
  {
    "text": "hundred lambda containers and just start going at it now if you had a much higher",
    "start": "1993000",
    "end": "2001490"
  },
  {
    "text": "so we were dealing with maybe a few thousand change sets per hour we never dealt had to deal with really really big",
    "start": "2001490",
    "end": "2008580"
  },
  {
    "text": "scale stuff and if you're familiar with Kinesis at all we only use one chart and",
    "start": "2008580",
    "end": "2016190"
  },
  {
    "text": "one shard was enough for our throughput to to write to that stream and it was",
    "start": "2016190",
    "end": "2023400"
  },
  {
    "text": "enough to you know for lambda to you can read it a lot faster than you right to it so yeah that was that was the that",
    "start": "2023400",
    "end": "2033240"
  },
  {
    "text": "required no work on our",
    "start": "2033240",
    "end": "2036290"
  },
  {
    "text": "sort of the piggyback on what on the last question this is either for you or",
    "start": "2047520",
    "end": "2054480"
  },
  {
    "text": "for the first presenter how do you deal with a database connections at a large",
    "start": "2054480",
    "end": "2063540"
  },
  {
    "text": "scale making sure that you keep you keep",
    "start": "2063540",
    "end": "2069148"
  },
  {
    "text": "the pool of connections low and then also handling outside providers I like",
    "start": "2069149",
    "end": "2078030"
  },
  {
    "text": "say I want to connect to redis through Redis labs instead of elastic ash but I",
    "start": "2078030",
    "end": "2084600"
  },
  {
    "text": "also want to have my lambda functions inside of a VPC and is the only way to",
    "start": "2084600",
    "end": "2091919"
  },
  {
    "text": "do that by creating a gnat gateway instance yeah so I think you're onto it",
    "start": "2091919",
    "end": "2100020"
  },
  {
    "text": "right there so that's the way if you want to put your lambda function in a VPC then you need to you need to set up",
    "start": "2100020",
    "end": "2106200"
  },
  {
    "text": "an appt gateway somehow in order to have that lambda function also access outside",
    "start": "2106200",
    "end": "2111500"
  },
  {
    "text": "outside areas with regard to the database connections you know I I really",
    "start": "2111500",
    "end": "2119850"
  },
  {
    "text": "maybe not the best person to ask about this I rely on next to manage database",
    "start": "2119850",
    "end": "2128820"
  },
  {
    "text": "connections and we set the parameters to have no more than 25 connections this",
    "start": "2128820",
    "end": "2135210"
  },
  {
    "text": "all seems to work well but again we didn't deal with really like it's it's",
    "start": "2135210",
    "end": "2140940"
  },
  {
    "text": "it's there's a lot of fluctuation in the amount of data but we didn't deal with like the tens of thousands like way on",
    "start": "2140940",
    "end": "2146910"
  },
  {
    "text": "the upper end where some of these things might require a lot a bit of a different",
    "start": "2146910",
    "end": "2153540"
  },
  {
    "text": "design on that and either you know more shards and probably something with the certainly a bigger RDS instance and more",
    "start": "2153540",
    "end": "2161700"
  },
  {
    "text": "connections available to it I guess",
    "start": "2161700",
    "end": "2164960"
  },
  {
    "text": "hey i'ma one question to to choose the name not just because you don't have to",
    "start": "2170640",
    "end": "2175799"
  },
  {
    "text": "manage service all you do a cost-benefit analysis that lambda service is a bit cheaper than setting about soil and",
    "start": "2175799",
    "end": "2182190"
  },
  {
    "text": "learning it yeah so our lambda our price to run lambda don't tell AWS this it's 0",
    "start": "2182190",
    "end": "2191510"
  },
  {
    "text": "it's effectively zero like that's how cheap lambda is it allows us to offload",
    "start": "2191510",
    "end": "2198210"
  },
  {
    "text": "that doesn't mean that you guys should raise the price on it either but we're",
    "start": "2198210",
    "end": "2205410"
  },
  {
    "text": "dealing with such a few number of invitations even if it's thousands per month it comes out to sense so yeah it",
    "start": "2205410",
    "end": "2214650"
  },
  {
    "text": "allows us to offload the ec2 without and still be able to get that scaling when",
    "start": "2214650",
    "end": "2220559"
  },
  {
    "text": "we need it without having to pay for it",
    "start": "2220559",
    "end": "2224750"
  },
  {
    "text": "near zero as well yeah",
    "start": "2232650",
    "end": "2236808"
  },
  {
    "text": "any other questions",
    "start": "2239380",
    "end": "2242730"
  },
  {
    "text": "processing intensive jobs for lambda I mean this is really what the landsat thing was was if you want to talk to",
    "start": "2246370",
    "end": "2253850"
  },
  {
    "text": "that Ryan but you know there's so the",
    "start": "2253850",
    "end": "2262850"
  },
  {
    "start": "2261000",
    "end": "2402000"
  },
  {
    "text": "the processing the Landsat imagery kind of involved having to appropriately",
    "start": "2262850",
    "end": "2268880"
  },
  {
    "text": "managed you know a synchronicity with the functions that I would write for the",
    "start": "2268880",
    "end": "2273980"
  },
  {
    "text": "for the demo and what we would do is make sure that we were you know that",
    "start": "2273980",
    "end": "2279650"
  },
  {
    "text": "what we were trying to do was within scope of what the lambda function was capable of doing because as you may or",
    "start": "2279650",
    "end": "2286940"
  },
  {
    "text": "may not know most any executable that you can build on Linux you can actually",
    "start": "2286940",
    "end": "2292730"
  },
  {
    "text": "deploy into a lambda function for example like if you want to use a CLI instead of one of the SDKs with in",
    "start": "2292730",
    "end": "2299660"
  },
  {
    "text": "Atlanta function you can do that there was also a open source image processing library that I originally tried to do",
    "start": "2299660",
    "end": "2307190"
  },
  {
    "text": "for the test case that we had called G del G gdal and what I was trying to do",
    "start": "2307190",
    "end": "2314900"
  },
  {
    "text": "with that was process the scenes that the tiff files and then be able to",
    "start": "2314900",
    "end": "2321590"
  },
  {
    "text": "maintain their original resolution and not have to downscale them because the",
    "start": "2321590",
    "end": "2326810"
  },
  {
    "text": "original kind of idea for the demo was that we would do true color images that",
    "start": "2326810",
    "end": "2332120"
  },
  {
    "text": "were pan sharpened and just maintain the original resolution and all the image fidelity but the third part of the open",
    "start": "2332120",
    "end": "2341120"
  },
  {
    "text": "source library the gdl library that we try to use would quickly max out the lambda function so it's kind of a",
    "start": "2341120",
    "end": "2348430"
  },
  {
    "text": "process of trying to make sure that what you're trying to achieve with the lambda function or multiple lambda functions in",
    "start": "2348430",
    "end": "2355430"
  },
  {
    "text": "tandem is within the scope of what is is ideal to do with the lambda function and",
    "start": "2355430",
    "end": "2361760"
  },
  {
    "text": "then where the boundary is between what you can do with the lambs of function versus what you'd actually have to run",
    "start": "2361760",
    "end": "2367880"
  },
  {
    "text": "on an ec2 instance",
    "start": "2367880",
    "end": "2371980"
  },
  {
    "text": "any other questions I'll be around and Matt will be as well for questions after if if anyone has anything I cannot",
    "start": "2373090",
    "end": "2384560"
  },
  {
    "text": "answer that question yet I'm just going to punt to reinvent and then they'll tell you then or maybe they will not I",
    "start": "2384560",
    "end": "2394640"
  },
  {
    "text": "don't but yes will be around for questions afterwards thank you",
    "start": "2394640",
    "end": "2404110"
  }
]