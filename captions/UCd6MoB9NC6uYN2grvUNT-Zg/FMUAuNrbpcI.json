[
  {
    "text": "[Music]",
    "start": "880",
    "end": "4400"
  },
  {
    "text": "hello i'm dola a cloud support engineer",
    "start": "12320",
    "end": "15040"
  },
  {
    "text": "here at the aws office in northern",
    "start": "15040",
    "end": "17680"
  },
  {
    "text": "virginia today i am going to show how we",
    "start": "17680",
    "end": "20240"
  },
  {
    "text": "can troubleshoot port status in amazon",
    "start": "20240",
    "end": "22880"
  },
  {
    "text": "elastic kubernetes service let's get",
    "start": "22880",
    "end": "24880"
  },
  {
    "text": "started",
    "start": "24880",
    "end": "26640"
  },
  {
    "text": "to get information from the events",
    "start": "26640",
    "end": "28480"
  },
  {
    "text": "history of your pod run the following",
    "start": "28480",
    "end": "30560"
  },
  {
    "text": "command",
    "start": "30560",
    "end": "31519"
  },
  {
    "text": "all the commands run below are in",
    "start": "31519",
    "end": "34000"
  },
  {
    "text": "default namespace if your resources",
    "start": "34000",
    "end": "36480"
  },
  {
    "text": "exist in another namespace",
    "start": "36480",
    "end": "38559"
  },
  {
    "text": "add the hyphen n",
    "start": "38559",
    "end": "40960"
  },
  {
    "text": "namespace flag",
    "start": "40960",
    "end": "42559"
  },
  {
    "text": "for the coupe ctl commands to work",
    "start": "42559",
    "end": "46399"
  },
  {
    "text": "based on the status of your port",
    "start": "46399",
    "end": "48320"
  },
  {
    "text": "complete the steps in one of the",
    "start": "48320",
    "end": "50320"
  },
  {
    "text": "following sections",
    "start": "50320",
    "end": "52640"
  },
  {
    "text": "your pod",
    "start": "52640",
    "end": "53760"
  },
  {
    "text": "is in the pending state",
    "start": "53760",
    "end": "55840"
  },
  {
    "text": "your pod is in pending and container is",
    "start": "55840",
    "end": "59199"
  },
  {
    "text": "in waiting state",
    "start": "59199",
    "end": "60879"
  },
  {
    "text": "your pod",
    "start": "60879",
    "end": "62079"
  },
  {
    "text": "is in the crash loop back off state",
    "start": "62079",
    "end": "66320"
  },
  {
    "text": "let's start with your pod is in the",
    "start": "66320",
    "end": "68720"
  },
  {
    "text": "pending state pods in the pending state",
    "start": "68720",
    "end": "71920"
  },
  {
    "text": "can't be scheduled onto a node we won't",
    "start": "71920",
    "end": "74880"
  },
  {
    "text": "see a node name on the output of the",
    "start": "74880",
    "end": "77600"
  },
  {
    "text": "describe port command",
    "start": "77600",
    "end": "79680"
  },
  {
    "text": "this can happen because",
    "start": "79680",
    "end": "81520"
  },
  {
    "text": "there are no nodes available",
    "start": "81520",
    "end": "84159"
  },
  {
    "text": "there are insufficient resources",
    "start": "84159",
    "end": "86400"
  },
  {
    "text": "on the available worker nodes nodes have",
    "start": "86400",
    "end": "89360"
  },
  {
    "text": "taints which pods can't tolerate",
    "start": "89360",
    "end": "92720"
  },
  {
    "text": "you have defined and occupied host port",
    "start": "92720",
    "end": "96240"
  },
  {
    "text": "on the pod",
    "start": "96240",
    "end": "98000"
  },
  {
    "text": "when any of these are true no nodes are",
    "start": "98000",
    "end": "100240"
  },
  {
    "text": "available",
    "start": "100240",
    "end": "101280"
  },
  {
    "text": "when we describe the port we will see",
    "start": "101280",
    "end": "103520"
  },
  {
    "text": "the no nodes available to schedule pods",
    "start": "103520",
    "end": "106079"
  },
  {
    "text": "message",
    "start": "106079",
    "end": "107119"
  },
  {
    "text": "to resolve this we must",
    "start": "107119",
    "end": "109200"
  },
  {
    "text": "add new worker nodes to the cluster",
    "start": "109200",
    "end": "112159"
  },
  {
    "text": "the join manage worker notes",
    "start": "112159",
    "end": "114799"
  },
  {
    "text": "log into the aws management console",
    "start": "114799",
    "end": "118640"
  },
  {
    "text": "select the cluster and go to the",
    "start": "118640",
    "end": "120479"
  },
  {
    "text": "configuration menu",
    "start": "120479",
    "end": "122079"
  },
  {
    "text": "choose the configurations and then",
    "start": "122079",
    "end": "124560"
  },
  {
    "text": "select compute setting",
    "start": "124560",
    "end": "126320"
  },
  {
    "text": "add node group enter a name for the node",
    "start": "126320",
    "end": "129599"
  },
  {
    "text": "group",
    "start": "129599",
    "end": "130720"
  },
  {
    "text": "add an aws",
    "start": "130720",
    "end": "132800"
  },
  {
    "text": "identity and access management role for",
    "start": "132800",
    "end": "136319"
  },
  {
    "text": "the node",
    "start": "136319",
    "end": "137440"
  },
  {
    "text": "select the instance type and size",
    "start": "137440",
    "end": "141120"
  },
  {
    "text": "select node group scaling configuration",
    "start": "141120",
    "end": "144879"
  },
  {
    "text": "choose next",
    "start": "144879",
    "end": "146239"
  },
  {
    "text": "select subnets and add an ssh key",
    "start": "146239",
    "end": "151360"
  },
  {
    "text": "choose next and then review it before",
    "start": "151360",
    "end": "153840"
  },
  {
    "text": "creating",
    "start": "153840",
    "end": "155040"
  },
  {
    "text": "choose create",
    "start": "155040",
    "end": "157440"
  },
  {
    "text": "insufficient resources on the available",
    "start": "157440",
    "end": "159920"
  },
  {
    "text": "worker nodes this can be due to not",
    "start": "159920",
    "end": "162720"
  },
  {
    "text": "enough available cpu disk",
    "start": "162720",
    "end": "165599"
  },
  {
    "text": "ram",
    "start": "165599",
    "end": "166480"
  },
  {
    "text": "pods on the worker node to accommodate",
    "start": "166480",
    "end": "169440"
  },
  {
    "text": "the bots below is an example of a port",
    "start": "169440",
    "end": "172480"
  },
  {
    "text": "stuck in pending state because of",
    "start": "172480",
    "end": "175040"
  },
  {
    "text": "insufficient cpu to check available",
    "start": "175040",
    "end": "177840"
  },
  {
    "text": "resources on the node let's run and",
    "start": "177840",
    "end": "180879"
  },
  {
    "text": "check the capacity and allocatable",
    "start": "180879",
    "end": "183200"
  },
  {
    "text": "fields of the described node output",
    "start": "183200",
    "end": "186959"
  },
  {
    "text": "below is a snippet of the output where",
    "start": "186959",
    "end": "190319"
  },
  {
    "text": "we can see the current capacity and",
    "start": "190319",
    "end": "193599"
  },
  {
    "text": "allocatable capacity of the node the",
    "start": "193599",
    "end": "196239"
  },
  {
    "text": "fields in the capacity block indicate",
    "start": "196239",
    "end": "198800"
  },
  {
    "text": "the total amount of resources that a",
    "start": "198800",
    "end": "201680"
  },
  {
    "text": "node has",
    "start": "201680",
    "end": "203280"
  },
  {
    "text": "the allocatable block indicates the",
    "start": "203280",
    "end": "205519"
  },
  {
    "text": "amount of resources on a node that is",
    "start": "205519",
    "end": "208640"
  },
  {
    "text": "available to be consumed by normal pods",
    "start": "208640",
    "end": "212080"
  },
  {
    "text": "because we have insufficient resources",
    "start": "212080",
    "end": "214319"
  },
  {
    "text": "on the available worker node",
    "start": "214319",
    "end": "216560"
  },
  {
    "text": "and the pod requires",
    "start": "216560",
    "end": "218319"
  },
  {
    "text": "more resources",
    "start": "218319",
    "end": "220959"
  },
  {
    "text": "we can try to delete unnecessary pods",
    "start": "220959",
    "end": "224560"
  },
  {
    "text": "and add more worker notes",
    "start": "224560",
    "end": "227440"
  },
  {
    "text": "for example",
    "start": "227440",
    "end": "229040"
  },
  {
    "text": "your worker node can run out of cpu and",
    "start": "229040",
    "end": "232239"
  },
  {
    "text": "memory",
    "start": "232239",
    "end": "234000"
  },
  {
    "text": "if this is a recurring issue",
    "start": "234000",
    "end": "236400"
  },
  {
    "text": "you can use kubernetes cluster auto",
    "start": "236400",
    "end": "239200"
  },
  {
    "text": "scaler to automatically scale your",
    "start": "239200",
    "end": "242000"
  },
  {
    "text": "worker node group",
    "start": "242000",
    "end": "243680"
  },
  {
    "text": "when the resources in your cluster are",
    "start": "243680",
    "end": "246319"
  },
  {
    "text": "scarce",
    "start": "246319",
    "end": "248000"
  },
  {
    "text": "nodes have taints",
    "start": "248000",
    "end": "250000"
  },
  {
    "text": "that pods can't tolerate taints are used",
    "start": "250000",
    "end": "253439"
  },
  {
    "text": "to restrict pods from being scheduled",
    "start": "253439",
    "end": "255920"
  },
  {
    "text": "onto a node the following example shows",
    "start": "255920",
    "end": "259519"
  },
  {
    "text": "the output of",
    "start": "259519",
    "end": "261359"
  },
  {
    "text": "the describe command for an nginx port",
    "start": "261359",
    "end": "265440"
  },
  {
    "text": "that is in the pending state the part is",
    "start": "265440",
    "end": "268720"
  },
  {
    "text": "unscheduled because of a taint",
    "start": "268720",
    "end": "271600"
  },
  {
    "text": "to check what taint is applied to the",
    "start": "271600",
    "end": "273680"
  },
  {
    "text": "node we must describe the node and check",
    "start": "273680",
    "end": "276320"
  },
  {
    "text": "for tens field",
    "start": "276320",
    "end": "278560"
  },
  {
    "text": "to fix this we must add a relevant",
    "start": "278560",
    "end": "281840"
  },
  {
    "text": "toleration",
    "start": "281840",
    "end": "283360"
  },
  {
    "text": "to the pods or remove paints from the",
    "start": "283360",
    "end": "285919"
  },
  {
    "text": "notes",
    "start": "285919",
    "end": "287120"
  },
  {
    "text": "to remove the taint run this command",
    "start": "287120",
    "end": "291680"
  },
  {
    "text": "or",
    "start": "293919",
    "end": "294720"
  },
  {
    "text": "add this toleration to your pod spec",
    "start": "294720",
    "end": "298000"
  },
  {
    "text": "you've defined an occupied host port on",
    "start": "298000",
    "end": "301520"
  },
  {
    "text": "the pod if you're defining a host port",
    "start": "301520",
    "end": "304479"
  },
  {
    "text": "for your port the port can be placed on",
    "start": "304479",
    "end": "307520"
  },
  {
    "text": "the node where the host port isn't in",
    "start": "307520",
    "end": "310800"
  },
  {
    "text": "use",
    "start": "310800",
    "end": "311759"
  },
  {
    "text": "that means we can have only one port per",
    "start": "311759",
    "end": "315280"
  },
  {
    "text": "node because the host port is unique for",
    "start": "315280",
    "end": "318639"
  },
  {
    "text": "the entire node",
    "start": "318639",
    "end": "320479"
  },
  {
    "text": "below is an example",
    "start": "320479",
    "end": "322880"
  },
  {
    "text": "for",
    "start": "322880",
    "end": "323759"
  },
  {
    "text": "a port stuck in pending state because of",
    "start": "323759",
    "end": "327280"
  },
  {
    "text": "the host port",
    "start": "327280",
    "end": "328960"
  },
  {
    "text": "if multiple replicas of the same pod",
    "start": "328960",
    "end": "331919"
  },
  {
    "text": "must be on the same node",
    "start": "331919",
    "end": "334000"
  },
  {
    "text": "then it is best",
    "start": "334000",
    "end": "336000"
  },
  {
    "text": "practice do not use host port",
    "start": "336000",
    "end": "339520"
  },
  {
    "text": "instead expose pods using service type",
    "start": "339520",
    "end": "342720"
  },
  {
    "text": "node port or load balancer",
    "start": "342720",
    "end": "346000"
  },
  {
    "text": "your pod is in pending state and the",
    "start": "346000",
    "end": "348560"
  },
  {
    "text": "container is in waiting state",
    "start": "348560",
    "end": "350880"
  },
  {
    "text": "in this state the pod is scheduled to a",
    "start": "350880",
    "end": "354160"
  },
  {
    "text": "worker node and can't go into running",
    "start": "354160",
    "end": "357440"
  },
  {
    "text": "state your port can be in waiting state",
    "start": "357440",
    "end": "360479"
  },
  {
    "text": "because of an incorrect docker image or",
    "start": "360479",
    "end": "364160"
  },
  {
    "text": "repository name",
    "start": "364160",
    "end": "365680"
  },
  {
    "text": "lack of permissions or because the image",
    "start": "365680",
    "end": "368960"
  },
  {
    "text": "doesn't exist",
    "start": "368960",
    "end": "370400"
  },
  {
    "text": "the following example shows a pod in",
    "start": "370400",
    "end": "374000"
  },
  {
    "text": "pending state",
    "start": "374000",
    "end": "375360"
  },
  {
    "text": "with the container in waiting state",
    "start": "375360",
    "end": "378240"
  },
  {
    "text": "because of an image pull error",
    "start": "378240",
    "end": "381440"
  },
  {
    "text": "in this example",
    "start": "381440",
    "end": "383120"
  },
  {
    "text": "the image nginx wrong image doesn't",
    "start": "383120",
    "end": "386080"
  },
  {
    "text": "exist",
    "start": "386080",
    "end": "387120"
  },
  {
    "text": "to fix this we must replace the image",
    "start": "387120",
    "end": "389440"
  },
  {
    "text": "with a valid name",
    "start": "389440",
    "end": "391120"
  },
  {
    "text": "as the part is a part of the deployment",
    "start": "391120",
    "end": "394720"
  },
  {
    "text": "named nginx hyphen wrong hyphen image",
    "start": "394720",
    "end": "398720"
  },
  {
    "text": "the image must be changed at the",
    "start": "398720",
    "end": "401280"
  },
  {
    "text": "deployment",
    "start": "401280",
    "end": "402479"
  },
  {
    "text": "please note if you are using",
    "start": "402479",
    "end": "404720"
  },
  {
    "text": "amazon",
    "start": "404720",
    "end": "406000"
  },
  {
    "text": "elastic container registry verify that",
    "start": "406000",
    "end": "409440"
  },
  {
    "text": "the repository policies allow image pull",
    "start": "409440",
    "end": "413120"
  },
  {
    "text": "for the node instance role or verify",
    "start": "413120",
    "end": "415919"
  },
  {
    "text": "that amazon ec2 container registry",
    "start": "415919",
    "end": "419280"
  },
  {
    "text": "read-only",
    "start": "419280",
    "end": "420479"
  },
  {
    "text": "role is attached to the policy your pod",
    "start": "420479",
    "end": "423440"
  },
  {
    "text": "is in crash loop back off state pods",
    "start": "423440",
    "end": "426400"
  },
  {
    "text": "stuck in crash loop back off are",
    "start": "426400",
    "end": "428720"
  },
  {
    "text": "repeatedly starting and crashing in a",
    "start": "428720",
    "end": "431360"
  },
  {
    "text": "loop the following example shows a port",
    "start": "431360",
    "end": "435039"
  },
  {
    "text": "in crash loopback of state",
    "start": "435039",
    "end": "437840"
  },
  {
    "text": "because the application",
    "start": "437840",
    "end": "439919"
  },
  {
    "text": "exits of the starting",
    "start": "439919",
    "end": "443680"
  },
  {
    "text": "we must check the logs of the port to",
    "start": "445199",
    "end": "447280"
  },
  {
    "text": "understand what is",
    "start": "447280",
    "end": "448840"
  },
  {
    "text": "failing after running the logs command",
    "start": "448840",
    "end": "452240"
  },
  {
    "text": "we identified that the error is",
    "start": "452240",
    "end": "455039"
  },
  {
    "text": "expecting",
    "start": "455039",
    "end": "456240"
  },
  {
    "text": "an extra argument which was missing and",
    "start": "456240",
    "end": "459280"
  },
  {
    "text": "to fix it we just need to make some edit",
    "start": "459280",
    "end": "462720"
  },
  {
    "text": "to the pod spec",
    "start": "462720",
    "end": "465599"
  },
  {
    "text": "to look for errors in the logs of",
    "start": "465599",
    "end": "468400"
  },
  {
    "text": "previous pods that crashed run the",
    "start": "468400",
    "end": "470960"
  },
  {
    "text": "following command",
    "start": "470960",
    "end": "473280"
  },
  {
    "text": "please note",
    "start": "473280",
    "end": "474479"
  },
  {
    "text": "for a multi-container port append the",
    "start": "474479",
    "end": "476879"
  },
  {
    "text": "container name at the end",
    "start": "476879",
    "end": "478960"
  },
  {
    "text": "thank you for watching and happy cloud",
    "start": "478960",
    "end": "481039"
  },
  {
    "text": "computing from all of us here at aws",
    "start": "481039",
    "end": "484290"
  },
  {
    "text": "[Music]",
    "start": "484290",
    "end": "490430"
  }
]