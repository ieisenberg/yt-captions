[
  {
    "text": "[Music]",
    "start": "0",
    "end": "2879"
  },
  {
    "text": "hello everyone this is the pair",
    "start": "2879",
    "end": "4480"
  },
  {
    "text": "microsoft tech specialist solution",
    "start": "4480",
    "end": "6160"
  },
  {
    "text": "architect in aws",
    "start": "6160",
    "end": "7680"
  },
  {
    "text": "in this video i'd like to show you how",
    "start": "7680",
    "end": "9519"
  },
  {
    "text": "you can use amazon's simple notification",
    "start": "9519",
    "end": "11440"
  },
  {
    "text": "service in your.net applications",
    "start": "11440",
    "end": "13759"
  },
  {
    "text": "the sns service helps you create",
    "start": "13759",
    "end": "15519"
  },
  {
    "text": "asynchronous applications",
    "start": "15519",
    "end": "17279"
  },
  {
    "text": "it's particularly useful in creating",
    "start": "17279",
    "end": "19359"
  },
  {
    "text": "scalable distributed applications",
    "start": "19359",
    "end": "21600"
  },
  {
    "text": "on one side you can have a simple and",
    "start": "21600",
    "end": "23760"
  },
  {
    "text": "small module that creates and publishes",
    "start": "23760",
    "end": "25760"
  },
  {
    "text": "messages",
    "start": "25760",
    "end": "26880"
  },
  {
    "text": "this module is called the publisher the",
    "start": "26880",
    "end": "29359"
  },
  {
    "text": "publisher",
    "start": "29359",
    "end": "30480"
  },
  {
    "text": "can be very small and simple or very",
    "start": "30480",
    "end": "32880"
  },
  {
    "text": "complex application on its own",
    "start": "32880",
    "end": "35040"
  },
  {
    "text": "however using sns service you don't have",
    "start": "35040",
    "end": "37600"
  },
  {
    "text": "to change or further complicate that",
    "start": "37600",
    "end": "39600"
  },
  {
    "text": "application",
    "start": "39600",
    "end": "40399"
  },
  {
    "text": "if there's need to add additional",
    "start": "40399",
    "end": "42960"
  },
  {
    "text": "functionality",
    "start": "42960",
    "end": "44719"
  },
  {
    "text": "instead you can simply have any number",
    "start": "44719",
    "end": "46960"
  },
  {
    "text": "of subscribers that respond and react",
    "start": "46960",
    "end": "49280"
  },
  {
    "text": "messages published by that publisher",
    "start": "49280",
    "end": "51199"
  },
  {
    "text": "application",
    "start": "51199",
    "end": "52480"
  },
  {
    "text": "amazon sns supports a variety of ways",
    "start": "52480",
    "end": "54879"
  },
  {
    "text": "that subscribers can receive messages",
    "start": "54879",
    "end": "57120"
  },
  {
    "text": "from the publisher",
    "start": "57120",
    "end": "58399"
  },
  {
    "text": "the subscriber can be an aws lambda",
    "start": "58399",
    "end": "60800"
  },
  {
    "text": "function running inside aws",
    "start": "60800",
    "end": "63280"
  },
  {
    "text": "it can also be an amazon simple q",
    "start": "63280",
    "end": "66320"
  },
  {
    "text": "service or sqs using sql as a subscriber",
    "start": "66320",
    "end": "70479"
  },
  {
    "text": "allows having multiple worker",
    "start": "70479",
    "end": "72400"
  },
  {
    "text": "applications to process sns",
    "start": "72400",
    "end": "74320"
  },
  {
    "text": "notifications",
    "start": "74320",
    "end": "75759"
  },
  {
    "text": "subscribers can also receive",
    "start": "75759",
    "end": "77680"
  },
  {
    "text": "notifications through email",
    "start": "77680",
    "end": "79680"
  },
  {
    "text": "or sms messages and if you have a custom",
    "start": "79680",
    "end": "83040"
  },
  {
    "text": "api",
    "start": "83040",
    "end": "83680"
  },
  {
    "text": "that can't use any of these protocols",
    "start": "83680",
    "end": "86240"
  },
  {
    "text": "you can simply create an http or https",
    "start": "86240",
    "end": "89439"
  },
  {
    "text": "interface",
    "start": "89439",
    "end": "90320"
  },
  {
    "text": "that receives sns notifications",
    "start": "90320",
    "end": "93840"
  },
  {
    "text": "in this video i'll show you a simple",
    "start": "93840",
    "end": "95680"
  },
  {
    "text": "case of using sns in a.net application",
    "start": "95680",
    "end": "99040"
  },
  {
    "text": "running inside aws lambda",
    "start": "99040",
    "end": "102079"
  },
  {
    "text": "we'll create a publisher application",
    "start": "102079",
    "end": "104799"
  },
  {
    "text": "that sends messages to an sms topic",
    "start": "104799",
    "end": "107759"
  },
  {
    "text": "and when we'll see how a lambda function",
    "start": "107759",
    "end": "111119"
  },
  {
    "text": "subscribed that sms topic receives and",
    "start": "111119",
    "end": "114079"
  },
  {
    "text": "processes",
    "start": "114079",
    "end": "115119"
  },
  {
    "text": "those messages so let's see how that",
    "start": "115119",
    "end": "117360"
  },
  {
    "text": "works in action",
    "start": "117360",
    "end": "119119"
  },
  {
    "text": "i need two projects one publisher and",
    "start": "119119",
    "end": "122320"
  },
  {
    "text": "one subscriber",
    "start": "122320",
    "end": "124399"
  },
  {
    "text": "so i'm open in visual studio i'll create",
    "start": "124399",
    "end": "127439"
  },
  {
    "text": "a new project",
    "start": "127439",
    "end": "130319"
  },
  {
    "text": "i'll select a simple console application",
    "start": "131120",
    "end": "134640"
  },
  {
    "text": "without the core",
    "start": "134640",
    "end": "137599"
  },
  {
    "text": "it could also be dotnet framework i'll",
    "start": "137599",
    "end": "140160"
  },
  {
    "text": "give it a name",
    "start": "140160",
    "end": "142640"
  },
  {
    "text": "sms publisher",
    "start": "142640",
    "end": "146400"
  },
  {
    "text": "and that creates the new project for me",
    "start": "147120",
    "end": "149120"
  },
  {
    "text": "it's a simple console application",
    "start": "149120",
    "end": "152879"
  },
  {
    "text": "i'll go to nuget package management",
    "start": "152959",
    "end": "157680"
  },
  {
    "text": "i'll browse for sns nuget package",
    "start": "157680",
    "end": "162879"
  },
  {
    "text": "and there it is aws sdk simple",
    "start": "164640",
    "end": "166879"
  },
  {
    "text": "notification service i'll install it",
    "start": "166879",
    "end": "171840"
  },
  {
    "text": "nougat is installed",
    "start": "174000",
    "end": "177200"
  },
  {
    "text": "now i need to add few lines of code",
    "start": "178239",
    "end": "181680"
  },
  {
    "text": "first of all i'm adding the reference to",
    "start": "181680",
    "end": "184840"
  },
  {
    "text": "amazon.simple notification service",
    "start": "184840",
    "end": "187760"
  },
  {
    "text": "and also amazon's simple notification",
    "start": "187760",
    "end": "190159"
  },
  {
    "text": "service",
    "start": "190159",
    "end": "190800"
  },
  {
    "text": "model these two namespaces",
    "start": "190800",
    "end": "193920"
  },
  {
    "text": "are required",
    "start": "193920",
    "end": "198159"
  },
  {
    "text": "adding a more descriptive",
    "start": "198159",
    "end": "201200"
  },
  {
    "text": "message please enter a key to send a",
    "start": "201200",
    "end": "205040"
  },
  {
    "text": "message to sns topic",
    "start": "205040",
    "end": "208720"
  },
  {
    "text": "so once the key is pressed",
    "start": "208720",
    "end": "212080"
  },
  {
    "text": "i want to send a message to an sns",
    "start": "212080",
    "end": "215280"
  },
  {
    "text": "topic for that i need a client so i'll",
    "start": "215280",
    "end": "218480"
  },
  {
    "text": "create a new client object",
    "start": "218480",
    "end": "220480"
  },
  {
    "text": "new amazon.simple notification service",
    "start": "220480",
    "end": "224840"
  },
  {
    "text": "client",
    "start": "224840",
    "end": "226400"
  },
  {
    "text": "i also need a request i'll create a new",
    "start": "226400",
    "end": "230000"
  },
  {
    "text": "request object new publish request",
    "start": "230000",
    "end": "234400"
  },
  {
    "text": "and from the constructor itself i can",
    "start": "234400",
    "end": "237280"
  },
  {
    "text": "pass",
    "start": "237280",
    "end": "237680"
  },
  {
    "text": "three parameters one is the topic arn so",
    "start": "237680",
    "end": "240720"
  },
  {
    "text": "i need to create",
    "start": "240720",
    "end": "242319"
  },
  {
    "text": "a topic first i'm going to the aws",
    "start": "242319",
    "end": "245040"
  },
  {
    "text": "explorer",
    "start": "245040",
    "end": "246319"
  },
  {
    "text": "and creating a new topic in the amazon",
    "start": "246319",
    "end": "249280"
  },
  {
    "text": "sns",
    "start": "249280",
    "end": "251840"
  },
  {
    "text": "and there it is if i double click on it",
    "start": "252239",
    "end": "254239"
  },
  {
    "text": "i can see the topic and i can get the",
    "start": "254239",
    "end": "256479"
  },
  {
    "text": "arn of the topic from there and that's",
    "start": "256479",
    "end": "259120"
  },
  {
    "text": "what i need as the first parameter",
    "start": "259120",
    "end": "261040"
  },
  {
    "text": "for the publish request",
    "start": "261040",
    "end": "264080"
  },
  {
    "text": "i'm also passing the message",
    "start": "264080",
    "end": "267520"
  },
  {
    "text": "so let's say this is a test message",
    "start": "267520",
    "end": "271199"
  },
  {
    "text": "passing that parameter and the third",
    "start": "271199",
    "end": "274479"
  },
  {
    "text": "parameter",
    "start": "274479",
    "end": "275600"
  },
  {
    "text": "can be the subject of the message",
    "start": "275600",
    "end": "278720"
  },
  {
    "text": "that we're publishing to the topic",
    "start": "278720",
    "end": "282720"
  },
  {
    "text": "now i can invoke the publish async",
    "start": "282720",
    "end": "285520"
  },
  {
    "text": "method",
    "start": "285520",
    "end": "286160"
  },
  {
    "text": "using the request i just created",
    "start": "286160",
    "end": "291120"
  },
  {
    "text": "and a message indicating the message has",
    "start": "291199",
    "end": "293600"
  },
  {
    "text": "been sent",
    "start": "293600",
    "end": "297280"
  },
  {
    "text": "all right so that's my publisher i also",
    "start": "297280",
    "end": "299840"
  },
  {
    "text": "need another",
    "start": "299840",
    "end": "301199"
  },
  {
    "text": "application which is going to be the",
    "start": "301199",
    "end": "303680"
  },
  {
    "text": "subscriber",
    "start": "303680",
    "end": "304720"
  },
  {
    "text": "receiving the messages that are sent to",
    "start": "304720",
    "end": "307280"
  },
  {
    "text": "that topic",
    "start": "307280",
    "end": "308400"
  },
  {
    "text": "for that i'm going to create another",
    "start": "308400",
    "end": "310479"
  },
  {
    "text": "project in visual studio this time i'm",
    "start": "310479",
    "end": "312639"
  },
  {
    "text": "selecting aws lambda",
    "start": "312639",
    "end": "316240"
  },
  {
    "text": "for the project name i'm choosing sns",
    "start": "320800",
    "end": "325840"
  },
  {
    "text": "subscriber function",
    "start": "326240",
    "end": "330240"
  },
  {
    "text": "and from the list of blueprints that are",
    "start": "331759",
    "end": "334639"
  },
  {
    "text": "available in visual studio i'm selecting",
    "start": "334639",
    "end": "336880"
  },
  {
    "text": "simple sns function",
    "start": "336880",
    "end": "340400"
  },
  {
    "text": "that's going to create a new project",
    "start": "340560",
    "end": "342800"
  },
  {
    "text": "with the boilerplate code required to",
    "start": "342800",
    "end": "346080"
  },
  {
    "text": "receive sms notifications",
    "start": "346080",
    "end": "349759"
  },
  {
    "text": "inside the lambda function so this is",
    "start": "349759",
    "end": "352400"
  },
  {
    "text": "the new project",
    "start": "352400",
    "end": "353759"
  },
  {
    "text": "you can see there's a function cs5 if i",
    "start": "353759",
    "end": "356800"
  },
  {
    "text": "open that there's a class",
    "start": "356800",
    "end": "359039"
  },
  {
    "text": "called function and there's a",
    "start": "359039",
    "end": "362639"
  },
  {
    "text": "function handler method",
    "start": "362639",
    "end": "365680"
  },
  {
    "text": "with two parameters one is sms event the",
    "start": "365680",
    "end": "368479"
  },
  {
    "text": "other one contacts and there's a for",
    "start": "368479",
    "end": "370479"
  },
  {
    "text": "each loop that's going through the",
    "start": "370479",
    "end": "372080"
  },
  {
    "text": "records inside",
    "start": "372080",
    "end": "373759"
  },
  {
    "text": "that and that and it's passing each",
    "start": "373759",
    "end": "375600"
  },
  {
    "text": "record to the process record async",
    "start": "375600",
    "end": "377919"
  },
  {
    "text": "and that's sending them to the log",
    "start": "377919",
    "end": "381919"
  },
  {
    "text": "functionality i can test this using the",
    "start": "381919",
    "end": "385039"
  },
  {
    "text": "mark lambda test tool",
    "start": "385039",
    "end": "386479"
  },
  {
    "text": "already running on my desktop i haven't",
    "start": "386479",
    "end": "388960"
  },
  {
    "text": "published it to aws yet",
    "start": "388960",
    "end": "390560"
  },
  {
    "text": "i just want to see if my function works",
    "start": "390560",
    "end": "393120"
  },
  {
    "text": "or not",
    "start": "393120",
    "end": "394319"
  },
  {
    "text": "so if i run it using the lambda mock",
    "start": "394319",
    "end": "397280"
  },
  {
    "text": "test tool",
    "start": "397280",
    "end": "398400"
  },
  {
    "text": "this is what i get uh this is my",
    "start": "398400",
    "end": "401600"
  },
  {
    "text": "function from the list of example",
    "start": "401600",
    "end": "404560"
  },
  {
    "text": "requests",
    "start": "404560",
    "end": "405360"
  },
  {
    "text": "i'm going to select the sample sns",
    "start": "405360",
    "end": "409759"
  },
  {
    "text": "request and this is the body",
    "start": "409759",
    "end": "413840"
  },
  {
    "text": "the message as you can see says hello",
    "start": "414240",
    "end": "416400"
  },
  {
    "text": "from sns",
    "start": "416400",
    "end": "417440"
  },
  {
    "text": "if i execute it from the log output i",
    "start": "417440",
    "end": "420080"
  },
  {
    "text": "can see the message",
    "start": "420080",
    "end": "421360"
  },
  {
    "text": "process record hello from sms",
    "start": "421360",
    "end": "426080"
  },
  {
    "text": "so if i change the message to something",
    "start": "426160",
    "end": "428560"
  },
  {
    "text": "else",
    "start": "428560",
    "end": "429199"
  },
  {
    "text": "or if i change the request any parts of",
    "start": "429199",
    "end": "432479"
  },
  {
    "text": "the request i can",
    "start": "432479",
    "end": "433680"
  },
  {
    "text": "test whether the output of the",
    "start": "433680",
    "end": "436880"
  },
  {
    "text": "request is going to be as expected or",
    "start": "436880",
    "end": "440080"
  },
  {
    "text": "not",
    "start": "440080",
    "end": "440800"
  },
  {
    "text": "as you can see the message is now",
    "start": "440800",
    "end": "442639"
  },
  {
    "text": "showing the log output",
    "start": "442639",
    "end": "446639"
  },
  {
    "text": "all right so now i know that my function",
    "start": "446720",
    "end": "449599"
  },
  {
    "text": "works",
    "start": "449599",
    "end": "450400"
  },
  {
    "text": "now i'm going to actually publish it to",
    "start": "450400",
    "end": "452240"
  },
  {
    "text": "aws",
    "start": "452240",
    "end": "453440"
  },
  {
    "text": "so it can run as a lambda function as a",
    "start": "453440",
    "end": "456240"
  },
  {
    "text": "server list lambda function",
    "start": "456240",
    "end": "459120"
  },
  {
    "text": "function name sms subscriber function",
    "start": "459120",
    "end": "465759"
  },
  {
    "text": "i also need to select a role for my",
    "start": "465759",
    "end": "468720"
  },
  {
    "text": "function to execute",
    "start": "468720",
    "end": "471280"
  },
  {
    "text": "i'm selecting full lambda role and now",
    "start": "471280",
    "end": "475039"
  },
  {
    "text": "the aws tools for visual studio",
    "start": "475039",
    "end": "478240"
  },
  {
    "text": "plug-in is uploading my lambda function",
    "start": "478240",
    "end": "481520"
  },
  {
    "text": "code",
    "start": "481520",
    "end": "482000"
  },
  {
    "text": "into aws lambda",
    "start": "482000",
    "end": "485759"
  },
  {
    "text": "once upload is completed i automatically",
    "start": "486080",
    "end": "488479"
  },
  {
    "text": "get the",
    "start": "488479",
    "end": "489280"
  },
  {
    "text": "lambda page opened in in my visual",
    "start": "489280",
    "end": "492800"
  },
  {
    "text": "studio",
    "start": "492800",
    "end": "494160"
  },
  {
    "text": "and from the event sources i can add a",
    "start": "494160",
    "end": "497280"
  },
  {
    "text": "new topic",
    "start": "497280",
    "end": "498479"
  },
  {
    "text": "as a trigger uh to my",
    "start": "498479",
    "end": "501520"
  },
  {
    "text": "application i'm selecting source type as",
    "start": "501520",
    "end": "503680"
  },
  {
    "text": "amazon sns",
    "start": "503680",
    "end": "504639"
  },
  {
    "text": "and selecting sms topic as the topic",
    "start": "504639",
    "end": "508160"
  },
  {
    "text": "that i",
    "start": "508160",
    "end": "508560"
  },
  {
    "text": "created now this topic is acting as a",
    "start": "508560",
    "end": "512240"
  },
  {
    "text": "trigger to my lambda function",
    "start": "512240",
    "end": "515680"
  },
  {
    "text": "if i go back to my publisher application",
    "start": "515680",
    "end": "519839"
  },
  {
    "text": "and execute it",
    "start": "519839",
    "end": "522880"
  },
  {
    "text": "it says press a key to send the message",
    "start": "524240",
    "end": "526480"
  },
  {
    "text": "i'm going to press the key",
    "start": "526480",
    "end": "528399"
  },
  {
    "text": "and now the message is published to the",
    "start": "528399",
    "end": "530560"
  },
  {
    "text": "topic",
    "start": "530560",
    "end": "532000"
  },
  {
    "text": "now i should see that in the log of",
    "start": "532000",
    "end": "535200"
  },
  {
    "text": "my lambda function so if i go to the",
    "start": "535200",
    "end": "537680"
  },
  {
    "text": "logs",
    "start": "537680",
    "end": "538560"
  },
  {
    "text": "these are the logs from cloudwatch",
    "start": "538560",
    "end": "540800"
  },
  {
    "text": "there's one entry here",
    "start": "540800",
    "end": "542000"
  },
  {
    "text": "if i download that as you can see the",
    "start": "542000",
    "end": "545760"
  },
  {
    "text": "message is there this is a test message",
    "start": "545760",
    "end": "548640"
  },
  {
    "text": "which indicates the application has been",
    "start": "548640",
    "end": "551519"
  },
  {
    "text": "executed just now",
    "start": "551519",
    "end": "554320"
  },
  {
    "text": "so if i go back to my publisher",
    "start": "554320",
    "end": "557040"
  },
  {
    "text": "application",
    "start": "557040",
    "end": "557760"
  },
  {
    "text": "and change the code a little bit",
    "start": "557760",
    "end": "561519"
  },
  {
    "text": "let's change the read key to read line",
    "start": "561519",
    "end": "565120"
  },
  {
    "text": "so i can receive a message from the",
    "start": "565120",
    "end": "566880"
  },
  {
    "text": "console",
    "start": "566880",
    "end": "569440"
  },
  {
    "text": "and instead of the hard-coded message",
    "start": "569680",
    "end": "571839"
  },
  {
    "text": "i'm going to pass",
    "start": "571839",
    "end": "573040"
  },
  {
    "text": "the message i received from the console",
    "start": "573040",
    "end": "575440"
  },
  {
    "text": "and also i have to change",
    "start": "575440",
    "end": "577360"
  },
  {
    "text": "the initial message to more meaningful",
    "start": "577360",
    "end": "581360"
  },
  {
    "text": "message enter message send",
    "start": "581360",
    "end": "584800"
  },
  {
    "text": "to the sms topic now if i execute this",
    "start": "584800",
    "end": "590000"
  },
  {
    "text": "prompting me to enter a message let's",
    "start": "590000",
    "end": "592160"
  },
  {
    "text": "say",
    "start": "592160",
    "end": "593440"
  },
  {
    "text": "this is awesome",
    "start": "593440",
    "end": "598720"
  },
  {
    "text": "i expect a message published i expect to",
    "start": "600560",
    "end": "602959"
  },
  {
    "text": "see that in the output of",
    "start": "602959",
    "end": "605120"
  },
  {
    "text": "my lambda function in cloudwatch logs",
    "start": "605120",
    "end": "609519"
  },
  {
    "text": "if i open that as you can see there's a",
    "start": "610880",
    "end": "613440"
  },
  {
    "text": "new entry",
    "start": "613440",
    "end": "614560"
  },
  {
    "text": "with the new message process record this",
    "start": "614560",
    "end": "617120"
  },
  {
    "text": "is awesome",
    "start": "617120",
    "end": "618880"
  },
  {
    "text": "thank you",
    "start": "618880",
    "end": "626720"
  }
]