[
  {
    "start": "0",
    "end": "26000"
  },
  {
    "text": "[Music]",
    "start": "650",
    "end": "1010"
  },
  {
    "text": "[Applause]",
    "start": "1010",
    "end": "4088"
  },
  {
    "text": "[Music]",
    "start": "4960",
    "end": "11240"
  },
  {
    "text": "hello I'm Jan a technical account",
    "start": "11240",
    "end": "13980"
  },
  {
    "text": "manager here at the AWS office in San",
    "start": "13980",
    "end": "17039"
  },
  {
    "text": "Jose Costa Rica today I'm going to show",
    "start": "17039",
    "end": "19380"
  },
  {
    "text": "you how to avoid DNS resolution failures",
    "start": "19380",
    "end": "21779"
  },
  {
    "text": "with an Amazon elastic compute Cloud",
    "start": "21779",
    "end": "23820"
  },
  {
    "text": "Linux instance let's get started",
    "start": "23820",
    "end": "27300"
  },
  {
    "start": "26000",
    "end": "166000"
  },
  {
    "text": "most Linux distributions do not use a",
    "start": "27300",
    "end": "30180"
  },
  {
    "text": "local DNS cache this means that all DNS",
    "start": "30180",
    "end": "33360"
  },
  {
    "text": "queries are forwarded directly to the",
    "start": "33360",
    "end": "35940"
  },
  {
    "text": "Amazon provided DNS resolver which has a",
    "start": "35940",
    "end": "38760"
  },
  {
    "text": "limit in how many queries it can answer",
    "start": "38760",
    "end": "40800"
  },
  {
    "text": "in a period of time when there are too",
    "start": "40800",
    "end": "43260"
  },
  {
    "text": "many queries you'll see DNS failures",
    "start": "43260",
    "end": "46140"
  },
  {
    "text": "to avoid DNS resolution failures and",
    "start": "46140",
    "end": "49140"
  },
  {
    "text": "decrease CPU and network usage let's see",
    "start": "49140",
    "end": "52079"
  },
  {
    "text": "how to set up a local DNS cache in",
    "start": "52079",
    "end": "54539"
  },
  {
    "text": "Amazon Linux when you use a DNS cache to",
    "start": "54539",
    "end": "57600"
  },
  {
    "text": "query external DNS resources such as",
    "start": "57600",
    "end": "60360"
  },
  {
    "text": "Amazon relational database service",
    "start": "60360",
    "end": "62640"
  },
  {
    "text": "Amazon elastic cache or Amazon simple",
    "start": "62640",
    "end": "65640"
  },
  {
    "text": "storage service the cache answers most",
    "start": "65640",
    "end": "68520"
  },
  {
    "text": "of the recurring DNS queries locally",
    "start": "68520",
    "end": "70680"
  },
  {
    "text": "without interacting with the DNS",
    "start": "70680",
    "end": "73080"
  },
  {
    "text": "resolver over the network these steps",
    "start": "73080",
    "end": "75840"
  },
  {
    "text": "can easily be adapted to other Linux",
    "start": "75840",
    "end": "78299"
  },
  {
    "text": "distributions",
    "start": "78299",
    "end": "79619"
  },
  {
    "text": "after logging into your ec2 Linux",
    "start": "79619",
    "end": "82439"
  },
  {
    "text": "instance install the DNS mask server by",
    "start": "82439",
    "end": "85920"
  },
  {
    "text": "running the following command",
    "start": "85920",
    "end": "89298"
  },
  {
    "text": "then create a dedicated system user to",
    "start": "92780",
    "end": "96360"
  },
  {
    "text": "run DNS mask using the following",
    "start": "96360",
    "end": "98939"
  },
  {
    "text": "commands",
    "start": "98939",
    "end": "101420"
  },
  {
    "text": "note that DNS mask typically runs as the",
    "start": "102659",
    "end": "106380"
  },
  {
    "text": "root user but drops root privileges",
    "start": "106380",
    "end": "108840"
  },
  {
    "text": "after startup by changing to another",
    "start": "108840",
    "end": "111119"
  },
  {
    "text": "user by default the user is nobody",
    "start": "111119",
    "end": "115560"
  },
  {
    "text": "create a copy of the dnsmask.com file",
    "start": "115560",
    "end": "119220"
  },
  {
    "text": "using the following command",
    "start": "119220",
    "end": "121680"
  },
  {
    "text": "then open the configuration file using a",
    "start": "121680",
    "end": "124560"
  },
  {
    "text": "text editor here I'm using Bim",
    "start": "124560",
    "end": "129259"
  },
  {
    "text": "edit the",
    "start": "129840",
    "end": "131459"
  },
  {
    "text": "ETC DNS mask.com file so that it's",
    "start": "131459",
    "end": "135599"
  },
  {
    "text": "similar to The Following",
    "start": "135599",
    "end": "137459"
  },
  {
    "text": "save and then quit",
    "start": "137459",
    "end": "140459"
  },
  {
    "text": "create the",
    "start": "140459",
    "end": "142319"
  },
  {
    "text": "ETC result.dns mask file and then set",
    "start": "142319",
    "end": "145980"
  },
  {
    "text": "the Amazon DNS server for your subnet",
    "start": "145980",
    "end": "149520"
  },
  {
    "text": "in this example I'm using 172.31.0.2",
    "start": "149520",
    "end": "154620"
  },
  {
    "text": "restart the DNS mask server and then set",
    "start": "156599",
    "end": "159599"
  },
  {
    "text": "the service to Startup on boot by using",
    "start": "159599",
    "end": "162239"
  },
  {
    "text": "the following commands for Amazon Linux",
    "start": "162239",
    "end": "164879"
  },
  {
    "text": "1 run these commands",
    "start": "164879",
    "end": "168360"
  },
  {
    "start": "166000",
    "end": "259000"
  },
  {
    "text": "since I'm running Amazon Linux 2. let me",
    "start": "168360",
    "end": "172019"
  },
  {
    "text": "show you an example running these",
    "start": "172019",
    "end": "174180"
  },
  {
    "text": "commands",
    "start": "174180",
    "end": "176459"
  },
  {
    "text": "now verify that DNS mask is working",
    "start": "176459",
    "end": "178800"
  },
  {
    "text": "correctly by using the dick command",
    "start": "178800",
    "end": "182040"
  },
  {
    "text": "if the response is similar to the",
    "start": "182040",
    "end": "184200"
  },
  {
    "text": "following then the DNS Mass cache is",
    "start": "184200",
    "end": "186720"
  },
  {
    "text": "working correctly",
    "start": "186720",
    "end": "188879"
  },
  {
    "text": "next set the DNS mask DNS cache as the",
    "start": "188879",
    "end": "192599"
  },
  {
    "text": "default DNS resolver",
    "start": "192599",
    "end": "195540"
  },
  {
    "text": "configure the default DNS resolver as a",
    "start": "195540",
    "end": "198239"
  },
  {
    "text": "fallback option by using the following",
    "start": "198239",
    "end": "200280"
  },
  {
    "text": "commands",
    "start": "200280",
    "end": "201780"
  },
  {
    "text": "as an example I'm using",
    "start": "201780",
    "end": "205459"
  },
  {
    "text": "172.31.0.2 to apply the change run the",
    "start": "205940",
    "end": "209459"
  },
  {
    "text": "DH client command or reboot your",
    "start": "209459",
    "end": "212280"
  },
  {
    "text": "instance",
    "start": "212280",
    "end": "214760"
  },
  {
    "text": "to verify that your instance is using",
    "start": "218879",
    "end": "221940"
  },
  {
    "text": "DNS cache from the dict command",
    "start": "221940",
    "end": "225540"
  },
  {
    "text": "if the response indicates that the",
    "start": "225540",
    "end": "227760"
  },
  {
    "text": "server replying to your DNS request is",
    "start": "227760",
    "end": "232459"
  },
  {
    "text": "127.0.0.1 then the DNS cache is working",
    "start": "232459",
    "end": "235920"
  },
  {
    "text": "correctly try again a second time to see",
    "start": "235920",
    "end": "238980"
  },
  {
    "text": "the changes in query time query time",
    "start": "238980",
    "end": "241500"
  },
  {
    "text": "should be lower meaning that the query",
    "start": "241500",
    "end": "243659"
  },
  {
    "text": "was responded by the cache",
    "start": "243659",
    "end": "247280"
  },
  {
    "text": "so now you know how to avoid DNS",
    "start": "252319",
    "end": "255299"
  },
  {
    "text": "resolution failures with an Amazon ec2",
    "start": "255299",
    "end": "257639"
  },
  {
    "text": "Linux instance",
    "start": "257639",
    "end": "259859"
  },
  {
    "start": "259000",
    "end": "274000"
  },
  {
    "text": "thanks for watching and happy cloud",
    "start": "259859",
    "end": "261660"
  },
  {
    "text": "computing from all of us here at AWS",
    "start": "261660",
    "end": "264780"
  },
  {
    "text": "[Applause]",
    "start": "264780",
    "end": "266590"
  },
  {
    "text": "[Music]",
    "start": "266590",
    "end": "269710"
  },
  {
    "text": "[Music]",
    "start": "271740",
    "end": "274949"
  }
]