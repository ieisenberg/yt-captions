[
  {
    "text": "hello and welcome thank you for coming my name is Pedro b√°ez and I'm a specialist Solutions Architect for",
    "start": "0",
    "end": "5850"
  },
  {
    "text": "machine learning and artificial intelligence here at AWS I'm based here",
    "start": "5850",
    "end": "11610"
  },
  {
    "text": "in Singapore okay and today what we're going to do is we're going to discuss how you can build train and deploy deep",
    "start": "11610",
    "end": "18210"
  },
  {
    "text": "learning models on Amazon Sage Maker okay now Amazon sage makers are machine learning platform and we'll get into the",
    "start": "18210",
    "end": "24539"
  },
  {
    "text": "details of how that works later on this slide right now just to give you an overview of what we're going to discuss",
    "start": "24539",
    "end": "30029"
  },
  {
    "text": "today we're going to start with some theory around deep learning models how they work and why are they such a",
    "start": "30029",
    "end": "37079"
  },
  {
    "text": "buzzword now okay we are going to follow that up with some deep dives on Amazon",
    "start": "37079",
    "end": "42210"
  },
  {
    "text": "sage maker and our ml services and we will finish with a demo of building some",
    "start": "42210",
    "end": "48030"
  },
  {
    "text": "really interesting use cases around computer vision all using sage maker okay before we start I'd like to invite",
    "start": "48030",
    "end": "54510"
  },
  {
    "text": "you to the rest of the breakout sessions on this ml track and if not if you're not able to see them live please go look",
    "start": "54510",
    "end": "60030"
  },
  {
    "text": "for them whenever they are available as recordings so let's start with a little theory around deep learning normally",
    "start": "60030",
    "end": "68340"
  },
  {
    "text": "when we talk about deep learning we also talk about machinery right and deep learning is actually just a subset of",
    "start": "68340",
    "end": "73350"
  },
  {
    "text": "machine learning okay now what is machine learning if you think about the traditional computational paradigm what we",
    "start": "73350",
    "end": "79680"
  },
  {
    "text": "traditionally did was we were pre configuring some functions embedding these functions into a computational",
    "start": "79680",
    "end": "85830"
  },
  {
    "text": "system the system would normally expect an input and then we as users would",
    "start": "85830",
    "end": "90900"
  },
  {
    "text": "expect an output from the system right so think about calculators right calculators have the function square",
    "start": "90900",
    "end": "96420"
  },
  {
    "text": "root embedded in the calculator the calculator expects a number from us so let's say number 16 and then we expect a",
    "start": "96420",
    "end": "103649"
  },
  {
    "text": "value for a return right so let's say number 4 all right 16 and 4 square roots with",
    "start": "103649",
    "end": "109500"
  },
  {
    "text": "machine learning we're actually going to turn this paradigm on its head and we're going to say is instead of me",
    "start": "109500",
    "end": "114689"
  },
  {
    "text": "giving you the function I am going to give you a bunch of examples of inputs and outputs X's and Y's and I want the",
    "start": "114689",
    "end": "120750"
  },
  {
    "text": "computer to learn to infer the underlying functional relationship between these X's and Y's inputs and",
    "start": "120750",
    "end": "127079"
  },
  {
    "text": "outputs ok so here's an example here we have two populations to datum two sets",
    "start": "127079",
    "end": "133620"
  },
  {
    "text": "of data points blew population and read population right and normally what we're trying to do in the traditional problem",
    "start": "133620",
    "end": "139620"
  },
  {
    "text": "that this is a more basic problem that we do in machine learning is to try to discriminate between these two classes",
    "start": "139620",
    "end": "144690"
  },
  {
    "text": "okay we're going to try to find a model that's able to discriminate between the population bulu and population rather so",
    "start": "144690",
    "end": "150330"
  },
  {
    "text": "normally what we do is we have a nice little simple function here and there's",
    "start": "150330",
    "end": "155550"
  },
  {
    "text": "a specific use case it's gonna be a straight function so what can we call a linear function that is going to be a",
    "start": "155550",
    "end": "160830"
  },
  {
    "text": "are we going to learn using these data points okay and what we're going to be able to do with this function and this",
    "start": "160830",
    "end": "166320"
  },
  {
    "text": "later be able to infer on and extrapolate on other types of data what represents a blue dot and what",
    "start": "166320",
    "end": "172380"
  },
  {
    "text": "represents a red dot okay so taken to it so let's take as an example sentiment analysis okay so normally you've heard",
    "start": "172380",
    "end": "179340"
  },
  {
    "text": "about this you want to do sentiment analysis on tweets well we have this historical data in this example let's",
    "start": "179340",
    "end": "184740"
  },
  {
    "text": "say the blue population represents positive sentiment tweets and the red population represents negative sentiment",
    "start": "184740",
    "end": "191130"
  },
  {
    "text": "tweets okay and here we find a small a nice linear function that is going to",
    "start": "191130",
    "end": "196170"
  },
  {
    "text": "help us that is going to be our model to determine whether a tweet is positive or negative okay so now when we have a new",
    "start": "196170",
    "end": "202110"
  },
  {
    "text": "tweets or a new data point if the tweet falls on the right side of the line we say that it's a positive sentiment tweet",
    "start": "202110",
    "end": "209540"
  },
  {
    "text": "and if it falls on the left side of the line we say that it's a pot a negative 10 cement tweet okay and we can do the",
    "start": "209540",
    "end": "215550"
  },
  {
    "text": "same thing with computer vision images right so let's say we want to create a model that's capable of detecting from",
    "start": "215550",
    "end": "222720"
  },
  {
    "text": "images whether the image is an image of a cat or an image of a dog so again we have historical data blue population",
    "start": "222720",
    "end": "229290"
  },
  {
    "text": "represents our historic historical data of cats red popular red population represents our historical data of dogs we create a model nice simple in your",
    "start": "229290",
    "end": "236850"
  },
  {
    "text": "model whenever you have an image that falls on the right side it's a cat if it falls on the left side we say it's a dog",
    "start": "236850",
    "end": "242790"
  },
  {
    "text": "okay but most real-life problems aren't this simple okay most real-life problems",
    "start": "242790",
    "end": "248000"
  },
  {
    "text": "including this computer vision cats and dogs problem it are very high-dimensional very complex very",
    "start": "248000",
    "end": "254400"
  },
  {
    "text": "nonlinear problems okay and just again there is a definite there's a specific there's this explicit definition",
    "start": "254400",
    "end": "260579"
  },
  {
    "text": "mathematical definition of what linear and nonlinear is but for layman's terms linear is usually simple nice and",
    "start": "260580",
    "end": "267630"
  },
  {
    "text": "and nonlinear is complex okay so here we have another example of nonlinear a nonlinear problem it's exact same",
    "start": "267630",
    "end": "274590"
  },
  {
    "text": "problem we had before two populations red and blue except in this case we can't really draw a nice linear function",
    "start": "274590",
    "end": "281100"
  },
  {
    "text": "to separate our two classes right now there are many ways of actually transforming this data to get a linear a",
    "start": "281100",
    "end": "288300"
  },
  {
    "text": "linear problem okay one of the ways is actually doing an explicit transformation here what I've done is",
    "start": "288300",
    "end": "294630"
  },
  {
    "text": "used something we'll call transformation for going between a Cartesian coordinate",
    "start": "294630",
    "end": "299850"
  },
  {
    "text": "space to a polar coordinate space and what you can see is once I've done the transformation now I can draw a simple",
    "start": "299850",
    "end": "305730"
  },
  {
    "text": "line down the middle and I have my separation between blue and red right now in real life like I said this is a",
    "start": "305730",
    "end": "312180"
  },
  {
    "text": "toy example most problems are going to be high dimensional very complex very nonlinear and very tangled okay and the",
    "start": "312180",
    "end": "319920"
  },
  {
    "text": "idea is that we want to transform these very nonlinear complex problems into linear simple problems okay and that's",
    "start": "319920",
    "end": "326010"
  },
  {
    "text": "what deep learning is actually really good at so what is deep learning deep learning is inspired by biological",
    "start": "326010",
    "end": "331710"
  },
  {
    "text": "learning okay so think about the brain right this is a very high-level analogy the brain you can think of the brain as",
    "start": "331710",
    "end": "338840"
  },
  {
    "text": "clusters of neurons right and neurons are just simple functional units they",
    "start": "338840",
    "end": "344940"
  },
  {
    "text": "receive an input and they react accordingly okay so what's interesting about this cluster",
    "start": "344940",
    "end": "350310"
  },
  {
    "text": "of neurons is that when we aggregate or stack a lot of neurons together in a specific configuration the brain is able",
    "start": "350310",
    "end": "356130"
  },
  {
    "text": "to understand or learn very complex tasks right so humans are able to learn new languages learn arts learn quantum",
    "start": "356130",
    "end": "364140"
  },
  {
    "text": "physics for example right and this is all kind of just derived from this very simple functional unit so we're going to",
    "start": "364140",
    "end": "370380"
  },
  {
    "text": "try to do with deep learning is we're going to try to emulate that our simple functional unit is we are going to be",
    "start": "370380",
    "end": "376110"
  },
  {
    "text": "called a perceptron and we're going to stack a bunch of perceptrons together in the hopes of finding very complex tasks",
    "start": "376110",
    "end": "382740"
  },
  {
    "text": "so there's a traditional deep learning architecture ok we go from left to right",
    "start": "382740",
    "end": "389640"
  },
  {
    "text": "the last most layer is what we call the input layer this is where our input data is going to come in this can be images",
    "start": "389640",
    "end": "396650"
  },
  {
    "text": "text sound bytes numerical data we're going to push that from left to right it's gonna flow",
    "start": "396650",
    "end": "403060"
  },
  {
    "text": "through this middle layer which is called the hidden layer and this is actually where our stack perceptrons are going to be these tacked perceptrons are",
    "start": "403060",
    "end": "409990"
  },
  {
    "text": "going to transform our data as we did before from a very complex high dimensional space to hopefully a more",
    "start": "409990",
    "end": "415960"
  },
  {
    "text": "nice simple space where finally in the output layer we will be able to make a nice simple decision like a linear",
    "start": "415960",
    "end": "422050"
  },
  {
    "text": "decision right and this what we call the last output data is going to be the discriminator okay",
    "start": "422050",
    "end": "427750"
  },
  {
    "text": "so initially actually these models are very dumb okay these models are actually",
    "start": "427750",
    "end": "433210"
  },
  {
    "text": "initiated as random weights so how do we learn we go from this dumb model to a",
    "start": "433210",
    "end": "438340"
  },
  {
    "text": "very performant complex model okay this is actually something that we call statistical learning and this is the",
    "start": "438340",
    "end": "444610"
  },
  {
    "text": "basis of machine learning okay so how does artistical learning look for deep learning so as we see here we have this",
    "start": "444610",
    "end": "450490"
  },
  {
    "text": "input data which is going to be very high dimensional very complex data it's going to flow from left to right through",
    "start": "450490",
    "end": "456520"
  },
  {
    "text": "our network of stacked perceptrons until finally at the end we make a decision",
    "start": "456520",
    "end": "462690"
  },
  {
    "text": "okay now this can be initiated again randomly right so the transformations aren't good",
    "start": "462690",
    "end": "468490"
  },
  {
    "text": "at this point we make a decision is this a cat or a dog if we make an error then",
    "start": "468490",
    "end": "474669"
  },
  {
    "text": "we're going to reevaluate our model we're going to change these model weights and this is something that we call back propagation with deep learning",
    "start": "474669",
    "end": "480390"
  },
  {
    "text": "okay so we reevaluate our weights and then we start all over and this is there a chariot of process of with new",
    "start": "480390",
    "end": "486729"
  },
  {
    "text": "examples learning to change our model and this is what we call again statistical learning okay but again some",
    "start": "486729",
    "end": "495460"
  },
  {
    "text": "general concepts of this process neural networks in general under certain",
    "start": "495460",
    "end": "500650"
  },
  {
    "text": "configurations is a mathematical result our general general function approximator so we're able to learn a",
    "start": "500650",
    "end": "506979"
  },
  {
    "text": "whole tasks of different types of functions okay but they are very complex to train ok and the training process is",
    "start": "506979",
    "end": "514330"
  },
  {
    "text": "something that in mathematics we call optimization optimization problem and this is actually something that's in the",
    "start": "514330",
    "end": "519760"
  },
  {
    "text": "most part and non convex optimization problem and what this means is that it's going to be very hard to find an optimal",
    "start": "519760",
    "end": "525010"
  },
  {
    "text": "solution and when it's hard to find an optimal solution that means that we're going this is going to be a computationally intensive task ok and",
    "start": "525010",
    "end": "532510"
  },
  {
    "text": "that's why we can't really separate all the massive Maddox and statistical nuances of",
    "start": "532510",
    "end": "537610"
  },
  {
    "text": "creating deep learning models from the resources required to actually train the model okay the difference between using",
    "start": "537610",
    "end": "543730"
  },
  {
    "text": "a GPU and the CPU is going to be the difference between training our model in the week and training a model in a couple of hours so that's where we come",
    "start": "543730",
    "end": "551230"
  },
  {
    "text": "to AWS so let's talk about AWS his approach to machine learning and deep learning this is what we call the three",
    "start": "551230",
    "end": "557379"
  },
  {
    "text": "layered approach okay so this is a map of our services we call it a three layer approach because we're separating our",
    "start": "557379",
    "end": "563290"
  },
  {
    "text": "services into three layers okay going from bottom to top our first layer is our ml frameworks and infrastructure",
    "start": "563290",
    "end": "569699"
  },
  {
    "text": "layer so the center of this is gonna be our deep learning Ami's so either basically Elastic Compute",
    "start": "569699",
    "end": "576309"
  },
  {
    "text": "instances that have already been pre-configured with all the necessary deep learning frameworks cuda drivers",
    "start": "576309",
    "end": "582009"
  },
  {
    "text": "GPU power for building deep learning applications okay there are some really nice innovations coming out of reinvent",
    "start": "582009",
    "end": "589029"
  },
  {
    "text": "including elastic inference these are very specific to inference and to infrastructure and for example are easy",
    "start": "589029",
    "end": "594699"
  },
  {
    "text": "to see five instances which are compute optimized instances that use Intel Xeon",
    "start": "594699",
    "end": "600149"
  },
  {
    "text": "processors for doing a lot of the hard work okay so a lot of lot of innovations",
    "start": "600149",
    "end": "605860"
  },
  {
    "text": "also coming out around the infrastructure side now when we want to build our deep our end-to-end data",
    "start": "605860",
    "end": "611619"
  },
  {
    "text": "science workflows and we don't want have to deal with all of the infrastructure management that that requires we come up",
    "start": "611619",
    "end": "617499"
  },
  {
    "text": "we come to the second layer and the second layer is basically our ml services and the center of this the heart of this is going to be Amazon",
    "start": "617499",
    "end": "622869"
  },
  {
    "text": "stage maker okay and we'll discuss Amazon stage maker in a little bit and then our higher level service so this is",
    "start": "622869",
    "end": "629199"
  },
  {
    "text": "our third layer is what we call our AI services okay and our a AI services are basically out",
    "start": "629199",
    "end": "634540"
  },
  {
    "text": "of the box API services for doing things like computer vision natural language processing building recommendation",
    "start": "634540",
    "end": "641199"
  },
  {
    "text": "engines ok and this is gonna be really nice because you're gonna get out of the box really sophisticated deep learning",
    "start": "641199",
    "end": "646860"
  },
  {
    "text": "technology ok but you can bet into your applications with little to no data",
    "start": "646860",
    "end": "651879"
  },
  {
    "text": "science experience now if your use case doesn't fit into one of these pre-configured models or use cases then",
    "start": "651879",
    "end": "659230"
  },
  {
    "text": "you're probably gonna have to be looking at building custom models ok and when we talk about building custom models that's",
    "start": "659230",
    "end": "664600"
  },
  {
    "text": "where we go back to stage maker so let's talk about Sage maker",
    "start": "664600",
    "end": "670709"
  },
  {
    "text": "let's get the sage maker oh there you go",
    "start": "672090",
    "end": "677230"
  },
  {
    "text": "okay so let's talk about sage maker so again sage maker is our end-to-end machine learning platform okay",
    "start": "677230",
    "end": "684580"
  },
  {
    "text": "sage maker any don't we as we understand that data science is basically made up",
    "start": "684580",
    "end": "689710"
  },
  {
    "text": "of three tasks data processing data exploration building and training your",
    "start": "689710",
    "end": "694960"
  },
  {
    "text": "models and then how you deploy your models into production okay and we're going to take this philosophy and we're",
    "start": "694960",
    "end": "700510"
  },
  {
    "text": "any of us we also understand that these three different tasks also require three different types of resources so you're",
    "start": "700510",
    "end": "706390"
  },
  {
    "text": "not going to use the same resources or infrastructure that you need for training a deep learning model like GPU instances to do data exploration right",
    "start": "706390",
    "end": "714010"
  },
  {
    "text": "are you not you might not even need those GPU instances for deploying your model into production right so we're",
    "start": "714010",
    "end": "719110"
  },
  {
    "text": "going to decouple these three tasks and allocate them their own types of resources okay and this is what we're",
    "start": "719110",
    "end": "724540"
  },
  {
    "text": "going to be able to manage and orchestrate with sage maker okay so let's talk a little bit about how I can",
    "start": "724540",
    "end": "730810"
  },
  {
    "text": "sketch started with sage maker okay first thing we have in sage maker does offer is something called P build",
    "start": "730810",
    "end": "735850"
  },
  {
    "text": "notebooks and the judge is gonna be a whole catalog of different tutorials on how to build computer vision problems",
    "start": "735850",
    "end": "741730"
  },
  {
    "text": "timeseriesforecasting using tensorflow using MX natch using spark okay okay",
    "start": "741730",
    "end": "747070"
  },
  {
    "text": "quickly started with one of these notebook examples okay now let's say you want to build in trainer model how do we",
    "start": "747070",
    "end": "754060"
  },
  {
    "text": "leverage sage maker to build and train models using high level compute instances okay so there are three ways",
    "start": "754060",
    "end": "759430"
  },
  {
    "text": "of actually leveraging sage th maker for doing this first way is you've seen the first party algorithms okay and the",
    "start": "759430",
    "end": "765880"
  },
  {
    "text": "first party algorithms are just basically pre-configured prepackaged very popular algorithms such as computer",
    "start": "765880",
    "end": "772000"
  },
  {
    "text": "vision algorithms unsupervised learning timeseriesforecasting that we've already optimized for using out of the box",
    "start": "772000",
    "end": "778780"
  },
  {
    "text": "within stage maker okay second way of using sage maker for building your",
    "start": "778780",
    "end": "783790"
  },
  {
    "text": "models is by using our high level sdk for deep learning frameworks or machine",
    "start": "783790",
    "end": "789160"
  },
  {
    "text": "learning frameworks okay so what we've done is we've natively embedded implemented a lot of these popular",
    "start": "789160",
    "end": "795100"
  },
  {
    "text": "frameworks are just tensorflow MX and that PI torch psych you learn within Sage Maker so that you're able to",
    "start": "795100",
    "end": "800860"
  },
  {
    "text": "leverage all the really nice features of sage maker by only bringing your normal tensorflow or MX that code for example",
    "start": "800860",
    "end": "807070"
  },
  {
    "text": "okay and to find a way of actually leveraging sage maker is by bringing your own",
    "start": "807070",
    "end": "812200"
  },
  {
    "text": "algorithms okay and this process requires a little bit more engineering but also offers a lot more flexibility",
    "start": "812200",
    "end": "818380"
  },
  {
    "text": "okay and the actual engineering involved in this is container rising do we know",
    "start": "818380",
    "end": "823600"
  },
  {
    "text": "creating a docker container with your at training algorithm okay before we finish",
    "start": "823600",
    "end": "829420"
  },
  {
    "text": "we also have a nice little feature called automatic hyper parameter tuning and this is a great feature because it",
    "start": "829420",
    "end": "835990"
  },
  {
    "text": "allows customers so again think about the when you're building deep learning networks these have a lot of parameters",
    "start": "835990",
    "end": "841360"
  },
  {
    "text": "and it's a really blocker it's a it's a real big obstacle for data scientists to actually hand manually fine-tune these",
    "start": "841360",
    "end": "849070"
  },
  {
    "text": "parameters right so normally there are some schemes for doing this automatically and sage maker has implemented a really nice scheme for",
    "start": "849070",
    "end": "856420"
  },
  {
    "text": "doing automatic hyper premier tuning meaning you get automatically the optimal configuration for your model great future for feature for data",
    "start": "856420",
    "end": "863680"
  },
  {
    "text": "scientists and finally I have my model how do I deploy deploy this model okay how do I get this in production that's",
    "start": "863680",
    "end": "870760"
  },
  {
    "text": "where we have this really nice feature called one-click deployment okay what you get here is by a simple API call you",
    "start": "870760",
    "end": "877840"
  },
  {
    "text": "get some really nice vertical and horizontal scalability of the resources",
    "start": "877840",
    "end": "882850"
  },
  {
    "text": "needed for deploying that endpoint okay you can deploy your endpoint in production as a restful api and you get",
    "start": "882850",
    "end": "888880"
  },
  {
    "text": "some really nice features out of it such as automatic scaling and a/b testing okay and this is all out-of-the-box some",
    "start": "888880",
    "end": "895060"
  },
  {
    "text": "really important customers already using sage maker for building their machine learning and deep learning applications",
    "start": "895060",
    "end": "900640"
  },
  {
    "text": "such as tinder snapchat Sony into it okay so let's talk about the deep",
    "start": "900640",
    "end": "907390"
  },
  {
    "text": "learning frameworks that are supported by AWS we normally say that AWS is framework agnostic okay and this means",
    "start": "907390",
    "end": "914320"
  },
  {
    "text": "that explicity are implicitly we do support all of the deep learning frameworks now natively sage maker for",
    "start": "914320",
    "end": "920650"
  },
  {
    "text": "example supports the more popular frameworks like tensorflow MX net pi torch chain ER care us okay and this",
    "start": "920650",
    "end": "927820"
  },
  {
    "text": "will be out of the box so why don't we talk about tensor field tensor flow is one of the most popular deep learning",
    "start": "927820",
    "end": "932980"
  },
  {
    "text": "frameworks okay a recent studies showed that 85% tensorflow workloads being run in the",
    "start": "932980",
    "end": "939099"
  },
  {
    "text": "cloud are actually being run on AWS okay another thing is that sage maker and the deep learning armies do support",
    "start": "939099",
    "end": "945189"
  },
  {
    "text": "tensorflow natively okay pi torch is",
    "start": "945189",
    "end": "950919"
  },
  {
    "text": "another very popular deep learning deep learning framework very popular amongst the research community especially coming",
    "start": "950919",
    "end": "957039"
  },
  {
    "text": "out of things like Facebook research it's a very versatile framework and because it is where it is a very popular",
    "start": "957039",
    "end": "964269"
  },
  {
    "text": "framework around the research community there is a very nice story about the transition from research to production",
    "start": "964269",
    "end": "969759"
  },
  {
    "text": "using sage maker with Python for example finally we have MX net MX it is another",
    "start": "969759",
    "end": "977139"
  },
  {
    "text": "very powerful deep learning framework and we'll actually talk about this during our demo okay so fighters have",
    "start": "977139",
    "end": "983229"
  },
  {
    "text": "some really nice functionalities and features such as glue on CV and glue on NLP libraries and these are just",
    "start": "983229",
    "end": "989249"
  },
  {
    "text": "high-level libraries for doing computer vision and natural language processing and you can really get accelerated with",
    "start": "989249",
    "end": "995409"
  },
  {
    "text": "these type of very advanced functionalities using this type of libraries ok another really interesting about about MX net is that it has a",
    "start": "995409",
    "end": "1002069"
  },
  {
    "text": "really nice integration with Kerris ok and this is really powerful because it allows developers and data scientists to",
    "start": "1002069",
    "end": "1008039"
  },
  {
    "text": "build architectures to build models with last of the verbosity that's that is",
    "start": "1008039",
    "end": "1013139"
  },
  {
    "text": "normally associated with these kind of low-level deep learning frameworks ok so",
    "start": "1013139",
    "end": "1018749"
  },
  {
    "text": "let's get started with our demo ok so what we're going to do now is we are going to build two different types of",
    "start": "1018749",
    "end": "1026938"
  },
  {
    "text": "neural networks this is going to be around computer vision we're going to use on one hand we're going to use one of the first party algorithms and we're",
    "start": "1026939",
    "end": "1032279"
  },
  {
    "text": "going to try to build an end-to-end deep learning framework and deploy it in production using the first party",
    "start": "1032279",
    "end": "1037709"
  },
  {
    "text": "algorithm and then on the other hand we're going to make some more complex applications bringing in some custom",
    "start": "1037709",
    "end": "1043649"
  },
  {
    "text": "code ok using MX net so let's okay so this is the AWS console",
    "start": "1043649",
    "end": "1050730"
  },
  {
    "text": "and we are going going to go into stage maker so you can see what stage maker looks like ok so this is the stage maker",
    "start": "1050730",
    "end": "1057779"
  },
  {
    "text": "console and as you can see remember I talked about decoupling the three tasks of data science right data exploration",
    "start": "1057779",
    "end": "1063869"
  },
  {
    "text": "that's where we represented by the notebooks model training and model deployment and you actually have a",
    "start": "1063869",
    "end": "1070720"
  },
  {
    "text": "to monitoring and controlling all of the resources that you're deploying within sage maker in this user interface okay",
    "start": "1070720",
    "end": "1077409"
  },
  {
    "text": "so let's get started let's spin up a notebook so that right now we're gonna spin up a project just want to show you",
    "start": "1077409",
    "end": "1083409"
  },
  {
    "text": "how this is done we are going to create a notebook instance okay we are going to",
    "start": "1083409",
    "end": "1090340"
  },
  {
    "text": "call it demo and what you see here is the vertical scalability of sage maker",
    "start": "1090340",
    "end": "1096909"
  },
  {
    "text": "right we can choose any type of infrastructure for actually building our project here we have something called permissions and permissions there is a",
    "start": "1096909",
    "end": "1103120"
  },
  {
    "text": "double yeses way of controlling and governing who has access to what resources and again as you see here we",
    "start": "1103120",
    "end": "1108640"
  },
  {
    "text": "have good integration so this is great for versioning and for collaboration of the data science projects we're not",
    "start": "1108640",
    "end": "1114429"
  },
  {
    "text": "actually going to use this what we're gonna use is a pre-built project that I did for this demo and what we're going",
    "start": "1114429",
    "end": "1121809"
  },
  {
    "text": "to do now is we are going to build that cats and dogs computer vision model okay so this is",
    "start": "1121809",
    "end": "1127780"
  },
  {
    "text": "actually the you put a notebook stage maker interface Jupiter notebooks is the",
    "start": "1127780",
    "end": "1133840"
  },
  {
    "text": "tool of choice very popular within data science community and we you can see here that we have pre-configured",
    "start": "1133840",
    "end": "1139350"
  },
  {
    "text": "environments for building things like tensorflow MX Net spark jobs okay and",
    "start": "1139350",
    "end": "1144549"
  },
  {
    "text": "this is out of the box you don't have to configure this an additional thing is that we do have access so shell control",
    "start": "1144549",
    "end": "1151270"
  },
  {
    "text": "over this instance meaning that developers and data scientists can't bring in any library any framework they",
    "start": "1151270",
    "end": "1156850"
  },
  {
    "text": "want to use using the shell control okay you can create for example virtual environments or additional kernels for",
    "start": "1156850",
    "end": "1163450"
  },
  {
    "text": "the Jupiter notebooks so let's go back and let's look at our example so again",
    "start": "1163450",
    "end": "1170289"
  },
  {
    "text": "this example what we're trying to do is we're gonna try to build a computer vision model that's able to discriminate between cats and dogs and this is a",
    "start": "1170289",
    "end": "1176320"
  },
  {
    "text": "complex deep learning model okay what we're going to do here is we're going to use our first party algorithm so this is",
    "start": "1176320",
    "end": "1182289"
  },
  {
    "text": "what you know how you normally use you created projects data science projects it's a jupiter notebook the first thing",
    "start": "1182289",
    "end": "1188080"
  },
  {
    "text": "we're going to do is we are going to configure the environment not a lot of code to things we have to do here is",
    "start": "1188080",
    "end": "1194169"
  },
  {
    "text": "define the role so the permissions that this notebook has that this project has it has access to what types of",
    "start": "1194169",
    "end": "1199630"
  },
  {
    "text": "directories for example and we are going to the final directory and this directory is going to be a bucket and as three in our simple storage service why",
    "start": "1199630",
    "end": "1206529"
  },
  {
    "text": "is it important because sage maker is going to use this direction for orchestrating the training and the",
    "start": "1206529",
    "end": "1211990"
  },
  {
    "text": "deployment our of our models second thing is we are going to import or invoke our first party algorithm in this",
    "start": "1211990",
    "end": "1218619"
  },
  {
    "text": "case we're going to do build an algorithm for doing image specification okay so we're going we're going to",
    "start": "1218619",
    "end": "1224080"
  },
  {
    "text": "invoke a prepackaged it's actually a docker container image of image",
    "start": "1224080",
    "end": "1229149"
  },
  {
    "text": "classification algorithm okay now again hopefully we'll build this in less than 10 minutes so you can see the results of",
    "start": "1229149",
    "end": "1235929"
  },
  {
    "text": "this second thing here what we are every downloaded data set and we're we're going to give the date that model is a",
    "start": "1235929",
    "end": "1242230"
  },
  {
    "text": "bunch of images of cats and dogs remember the original picture I showed you we have pictures of cats and dogs",
    "start": "1242230",
    "end": "1247960"
  },
  {
    "text": "and we want to draw a nice little line between the two to be able to have a model to discriminate between images of",
    "start": "1247960",
    "end": "1253360"
  },
  {
    "text": "cats and images and dogs okay so input data lots of images of cats and dogs we",
    "start": "1253360",
    "end": "1258850"
  },
  {
    "text": "have to do a little pre formatting for the algorithm and this is just the format the documentation of the algorithm requires this we have to give",
    "start": "1258850",
    "end": "1266340"
  },
  {
    "text": "annotation the text file okay basically what this says is give me the name of",
    "start": "1266340",
    "end": "1272230"
  },
  {
    "text": "the file the name of the image and tell me what type of class this represents okay so for example the first image",
    "start": "1272230",
    "end": "1278409"
  },
  {
    "text": "represents a dog and that's going to be mapped to a class number one second image represents a cat and that's going",
    "start": "1278409",
    "end": "1283929"
  },
  {
    "text": "to be mapped to cat class zero okay so cats equals what dogs equals one cat equals zero and now we're going to do is",
    "start": "1283929",
    "end": "1290139"
  },
  {
    "text": "we're going to upload our data set to s3 okay so we uploaded here to s3 and this",
    "start": "1290139",
    "end": "1297580"
  },
  {
    "text": "is where the magic happens in sage maker okay here in this snippet of code we are",
    "start": "1297580",
    "end": "1302919"
  },
  {
    "text": "actually encoding all of the vertical and horizontal scalability of sage maker so right now we're going to create is",
    "start": "1302919",
    "end": "1309789"
  },
  {
    "text": "something called an estimator object and this estimator object is going to allow us to actually build and trainer model we tell it that we're going to use the",
    "start": "1309789",
    "end": "1316419"
  },
  {
    "text": "image classification algorithm okay and these two lines are the really powerful lines okay in these two lines we have",
    "start": "1316419",
    "end": "1323019"
  },
  {
    "text": "the encoded vertical and horizontal scalability first line is going to give us horizontal scalability how many",
    "start": "1323019",
    "end": "1328990"
  },
  {
    "text": "instances do I want to use to actually train my model if the model is distributable then you can actually do",
    "start": "1328990",
    "end": "1334659"
  },
  {
    "text": "this tributed training for deep learning models okay you can go from 1 to 10 to a hundred by changing that number",
    "start": "1334659",
    "end": "1340259"
  },
  {
    "text": "second thing is vertical scalability okay just by changing a parameter in that line I get to use go from CPU instances",
    "start": "1340259",
    "end": "1347950"
  },
  {
    "text": "to working with GPUs okay so now right now I'm working locally on a CPU if I",
    "start": "1347950",
    "end": "1353110"
  },
  {
    "text": "want to use GPU for training deep learning models that's right well that's right that's a parameter I have to change right now we're glad we are going",
    "start": "1353110",
    "end": "1358509"
  },
  {
    "text": "to your P instance P instances are GPU empowered instances okay now one of the",
    "start": "1358509",
    "end": "1363610"
  },
  {
    "text": "nice things about this first party algorithm is that we can use something called transfer learning and transfer learning is basically you get to use pre",
    "start": "1363610",
    "end": "1369639"
  },
  {
    "text": "trained models to train your own personal models and this is nice because you don't have to start from scratch okay meaning I don't have to use as much",
    "start": "1369639",
    "end": "1377110"
  },
  {
    "text": "data as normally these models acquire and also I can only use ten epochs okay",
    "start": "1377110",
    "end": "1382570"
  },
  {
    "text": "normally these models require hundreds thousands of epochs to actually train the model here I'm only going to use ten epochs okay so this is very economical",
    "start": "1382570",
    "end": "1390450"
  },
  {
    "text": "okay next thing is I'm going to configure the input for my data tell the model where my input data is and what",
    "start": "1390450",
    "end": "1396940"
  },
  {
    "text": "type of date I'm going to push and finally what I'm going to do now is I am",
    "start": "1396940",
    "end": "1402970"
  },
  {
    "text": "going to push this data and call a training job ok so right now I'm gonna fit my model with my training data so",
    "start": "1402970",
    "end": "1409929"
  },
  {
    "text": "what's happening now saige maker is orchestrating at this point remember that data that we put in s3 for training",
    "start": "1409929",
    "end": "1416500"
  },
  {
    "text": "it's gonna have need that information it's gonna need the information of it for the type of algorithm I'm gonna use this again this is a docker container",
    "start": "1416500",
    "end": "1422350"
  },
  {
    "text": "and it's going to need the information for the infrastructure that you wants to build and what's H maker is going to do is going to put those ingredients",
    "start": "1422350",
    "end": "1428350"
  },
  {
    "text": "together it's gonna train a model it's going to output that model into s3 and then it's gonna kill all the",
    "start": "1428350",
    "end": "1434230"
  },
  {
    "text": "infrastructure that I spun up okay and this will all be transparent to you mean",
    "start": "1434230",
    "end": "1439330"
  },
  {
    "text": "that sage maker is managing all of the infrastructure required to spin up and train this model and you're not seeing",
    "start": "1439330",
    "end": "1444879"
  },
  {
    "text": "any of that okay what you are seeing is the output of this okay the iteration process the learning process of the",
    "start": "1444879",
    "end": "1451000"
  },
  {
    "text": "model through logs and finally we're going to have a final model output and when you can see here it took 538",
    "start": "1451000",
    "end": "1457809"
  },
  {
    "text": "seconds to train this model so that's roughly ten minutes and what I'm paying in terms of infrastructure is those five",
    "start": "1457809",
    "end": "1463330"
  },
  {
    "text": "hundred and thirty-eight seconds something that does not happen if I have to spin up that infrastructure myself okay so great now we have a model how do",
    "start": "1463330",
    "end": "1471730"
  },
  {
    "text": "I play this violence of production right the point is model to production is as simple as this one line of code okay and",
    "start": "1471730",
    "end": "1479230"
  },
  {
    "text": "if you see the parameters again we get the horizontal and horizontal and vertical scalability right I get to say",
    "start": "1479230",
    "end": "1485020"
  },
  {
    "text": "how many servers do I want to host my endpoint that's a parameter here I can go from 1 to 10 to 100 just by changing",
    "start": "1485020",
    "end": "1490870"
  },
  {
    "text": "the parameter what type of instances do I want to use maybe I don't have to use GPU instances now for I used GPUs for",
    "start": "1490870",
    "end": "1496990"
  },
  {
    "text": "training my model I don't need GPUs for deployment model right I can do that too now we have even more now it's not just",
    "start": "1496990",
    "end": "1502900"
  },
  {
    "text": "that simple you can always add more granularity to this configuration adding things like auto scaling strategies or a",
    "start": "1502900",
    "end": "1509200"
  },
  {
    "text": "be testing and now these things come out of the box ok so let's take a couple of minutes we've actually deployed a model",
    "start": "1509200",
    "end": "1515110"
  },
  {
    "text": "and what we have right now is a model being served live as an AP as a restful",
    "start": "1515110",
    "end": "1520720"
  },
  {
    "text": "api so again this is live right now it's been deployed this is in production so",
    "start": "1520720",
    "end": "1527890"
  },
  {
    "text": "what you see here you have access to your resources remember what I said before you have access to your endpoint",
    "start": "1527890",
    "end": "1533020"
  },
  {
    "text": "your training your testing and deploying resources and what we see here is the URL for this restful api ok so what have",
    "start": "1533020",
    "end": "1540970"
  },
  {
    "text": "they done so far I've started with data from scratch I've created a deep learning computer vision model and I've",
    "start": "1540970",
    "end": "1547510"
  },
  {
    "text": "deployed this modeling to print out in production and I've done it in less than 10 minutes ok so let's test out this endpoint what we",
    "start": "1547510",
    "end": "1554470"
  },
  {
    "text": "are going to do right now is we're going to look for an image of a puppy or a dog what's a dog actually already know",
    "start": "1554470",
    "end": "1559480"
  },
  {
    "text": "that's a puppy we're going to grab the first image again it's a puppy and we are going to push this image to our",
    "start": "1559480",
    "end": "1565600"
  },
  {
    "text": "model and ideally our model should have learned that this image represents a dog",
    "start": "1565600",
    "end": "1571510"
  },
  {
    "text": "so we are all here everyone here is able to understand that this image is an image of a dog or a puppy but we want",
    "start": "1571510",
    "end": "1577600"
  },
  {
    "text": "the model is to have learned that this is effectively an image of a dog so right now we're just going to download",
    "start": "1577600",
    "end": "1583210"
  },
  {
    "text": "the data set the image and we are going to push this image up to the up to the",
    "start": "1583210",
    "end": "1588220"
  },
  {
    "text": "Internet where my restful api is I'm going to do an HTTP request I'm going to do a post request send my image and I'm",
    "start": "1588220",
    "end": "1594520"
  },
  {
    "text": "going to get a result ok so let's see what the model has been able to do again we've done this in less than 10 minutes",
    "start": "1594520",
    "end": "1600490"
  },
  {
    "text": "right so let's see let's correct get that model that image into",
    "start": "1600490",
    "end": "1606960"
  },
  {
    "text": "our system and then we'll push it up into the web great so we haven't that nice little puppy and effectively the",
    "start": "1606960",
    "end": "1618510"
  },
  {
    "text": "model has been able to detect that it's a dog with confidence level of 99 percent okay so what have we done here",
    "start": "1618510",
    "end": "1625950"
  },
  {
    "text": "we've built an end-to-end solution within the same platform use different types of resources built a very",
    "start": "1625950",
    "end": "1631290"
  },
  {
    "text": "sophisticated computer vision model all in under ten minutes okay and this is using the first party algorithms okay",
    "start": "1631290",
    "end": "1637950"
  },
  {
    "text": "but again this is a very simple vanilla problem we can always do more sophisticated more complex things and",
    "start": "1637950",
    "end": "1643350"
  },
  {
    "text": "that's what we're going to see next we are going to build a more complex more interesting model you seeing",
    "start": "1643350",
    "end": "1648450"
  },
  {
    "text": "something that we call Gon's okay so these are generative adversarial networks very sophisticated models and",
    "start": "1648450",
    "end": "1653730"
  },
  {
    "text": "we are going to build this using our own algorithms we're going to bring actually a mex net code so what we're going to do",
    "start": "1653730",
    "end": "1660090"
  },
  {
    "text": "here is build something we call cycle Gantz and this is inspired on some really interesting research job research",
    "start": "1660090",
    "end": "1665940"
  },
  {
    "text": "work being done at Berkeley okay and this in this that the work mean that at",
    "start": "1665940",
    "end": "1671640"
  },
  {
    "text": "Berkeley was actually abstracted and implemented in the glue on CB library and what we've done is I've implemented",
    "start": "1671640",
    "end": "1677250"
  },
  {
    "text": "that glue on CV library information or those glue on CB modules to build that on sage maker okay and I won't lie it",
    "start": "1677250",
    "end": "1684210"
  },
  {
    "text": "took me maybe less than 10 minutes to move that MX net code onto Sage maker okay so the first thing we're going to",
    "start": "1684210",
    "end": "1690210"
  },
  {
    "text": "do same as before we configure our environment we're going to download the",
    "start": "1690210",
    "end": "1696270"
  },
  {
    "text": "data set and for this specific use case we're going to see how cycle ganzar allows us to go from image of type a to",
    "start": "1696270",
    "end": "1703050"
  },
  {
    "text": "image of type B and from image of type B to image of type a so what we're going to learn now are two different types of models and model that's going to help us",
    "start": "1703050",
    "end": "1709680"
  },
  {
    "text": "transform images of courses into images of zebras and another model is going to help us transform images of zebras to",
    "start": "1709680",
    "end": "1714930"
  },
  {
    "text": "images of horses okay that's what cycle against you so here we have what we're going to feed to the model is a bunch of",
    "start": "1714930",
    "end": "1721140"
  },
  {
    "text": "images of courses and a bunch of images of zebras and hopefully the model is going to learn to do the transition from",
    "start": "1721140",
    "end": "1727020"
  },
  {
    "text": "one to the other again these are very sophisticated cutting-edge research",
    "start": "1727020",
    "end": "1733010"
  },
  {
    "text": "problems that have been implemented in nice frameworks such as that max net you can",
    "start": "1733010",
    "end": "1738360"
  },
  {
    "text": "do with tensorflow as well okay so we have a smiling zebra there what we are going",
    "start": "1738360",
    "end": "1743820"
  },
  {
    "text": "to do as we did before we have our data set we're going to push this data set into s3 okay why because this is kind of",
    "start": "1743820",
    "end": "1751590"
  },
  {
    "text": "the convention that stage maker uses for building the models okay we've uploaded data we are going to",
    "start": "1751590",
    "end": "1759480"
  },
  {
    "text": "give some hyper parameters to give the context to our model okay and then what",
    "start": "1759480",
    "end": "1765030"
  },
  {
    "text": "we're going to do here again we have the scalability of our model by using we can use especially for this complex problem",
    "start": "1765030",
    "end": "1772020"
  },
  {
    "text": "we're going to need to use high level GPUs so we're invoking a p3 instance for this okay and instead of using the",
    "start": "1772020",
    "end": "1778500"
  },
  {
    "text": "height the estimator function we did before this estimator object when you use an MX net object okay",
    "start": "1778500",
    "end": "1783930"
  },
  {
    "text": "this could have been a tensorflow object okay and what we're going to do is instead of giving this MX net object the",
    "start": "1783930",
    "end": "1790140"
  },
  {
    "text": "first party algorithm we're going to give this MX net project some training script in MX net so it's gonna be a",
    "start": "1790140",
    "end": "1796440"
  },
  {
    "text": "Python script okay well so we'll see that in a second so again I'm mixing",
    "start": "1796440",
    "end": "1802680"
  },
  {
    "text": "that training script this is what I've implemented from Glu on CB based on this research work being done in Berkley this",
    "start": "1802680",
    "end": "1812370"
  },
  {
    "text": "is what the script looks like it's purely Python code MX net code first part of the code is actually just us",
    "start": "1812370",
    "end": "1818790"
  },
  {
    "text": "building the architecture really complex gonzo really complex architectures and these cycle games are even more complex",
    "start": "1818790",
    "end": "1824100"
  },
  {
    "text": "ok and if you want to talk about Gon's later after the after this session please feel free to come up to me and",
    "start": "1824100",
    "end": "1830610"
  },
  {
    "text": "then the last thing we're going to do is we're going to build some code for actually training the model okay again",
    "start": "1830610",
    "end": "1835620"
  },
  {
    "text": "this is this is code implemented by glue ANSI be inspired by this job this work being done at Berkeley that I've",
    "start": "1835620",
    "end": "1841620"
  },
  {
    "text": "implemented now in sage maker to run it on sage maker okay and what's really great about this is I get this really high very functional very sophisticated",
    "start": "1841620",
    "end": "1848630"
  },
  {
    "text": "architecture they can build custom models out of this okay so this is what",
    "start": "1848630",
    "end": "1854760"
  },
  {
    "text": "the code looks like and I'll share all the resources for this at the end of the",
    "start": "1854760",
    "end": "1860130"
  },
  {
    "text": "show at the end of the of session I run my training job ok that far way around",
    "start": "1860130",
    "end": "1865860"
  },
  {
    "text": "this training I won't lie it actually took several hours to run if I would have used cpu instances for this or CPU",
    "start": "1865860",
    "end": "1871260"
  },
  {
    "text": "power probably too would have taken a couple of weeks to run this model okay so what we get as an output is going to be a couple of",
    "start": "1871260",
    "end": "1877679"
  },
  {
    "text": "different objects the main objects of this output which I've downloaded from s3 the main object is of this output are",
    "start": "1877679",
    "end": "1883529"
  },
  {
    "text": "going to be two different models two different functions one model is going to be able to transform horse horse",
    "start": "1883529",
    "end": "1889169"
  },
  {
    "text": "horse pictures into zebra pictures and the other model is going to be able to transform zebra pictures into horse",
    "start": "1889169",
    "end": "1894510"
  },
  {
    "text": "pictures okay hopefully it will do that that's what that's what we were expecting the model to do okay so let's",
    "start": "1894510",
    "end": "1901020"
  },
  {
    "text": "take an example of our horse and zebra of our horse two zebra model have some",
    "start": "1901020",
    "end": "1906120"
  },
  {
    "text": "helper functions for visualizing the results okay first thing we're going to",
    "start": "1906120",
    "end": "1912929"
  },
  {
    "text": "do is we're going to take an image of three horses on the beach and we are going to see what the model has to say",
    "start": "1912929",
    "end": "1919620"
  },
  {
    "text": "about this image okay and we see that",
    "start": "1919620",
    "end": "1927899"
  },
  {
    "text": "effectively the model has learned to translate or to convert horse pictures",
    "start": "1927899",
    "end": "1933000"
  },
  {
    "text": "images into zebra images and what the model actually learned here is that the different RINs ik differentiable",
    "start": "1933000",
    "end": "1939570"
  },
  {
    "text": "functions or features here are the stripes right so the model has actually learned to draw stripes on the courses",
    "start": "1939570",
    "end": "1944789"
  },
  {
    "text": "height okay let's go the other way around how do we go from zebra images to",
    "start": "1944789",
    "end": "1950100"
  },
  {
    "text": "horse images we have a nice little smiling zebra here let's see what the model does to the transformation and",
    "start": "1950100",
    "end": "1957750"
  },
  {
    "text": "what you can see again it's not a fully performant model but it's learn to hide the stripes on the M on the zebra right",
    "start": "1957750",
    "end": "1962760"
  },
  {
    "text": "so it's actually learn some really interesting behavior about what makes what differentiates between a zebra and a horse so let's I've actually created a",
    "start": "1962760",
    "end": "1969570"
  },
  {
    "text": "gift here of that shows you the the process of learning of the model okay so",
    "start": "1969570",
    "end": "1975120"
  },
  {
    "text": "these are different iterations with time of the model on this picture of the zebras and you can see that initially",
    "start": "1975120",
    "end": "1981600"
  },
  {
    "text": "the model didn't know how to draw the stripes right now it doesn't even know how to draw stripes on the legs but",
    "start": "1981600",
    "end": "1986700"
  },
  {
    "text": "slowly it starts converging to an actual solution and you can see that by the end of the training process the model has",
    "start": "1986700",
    "end": "1993029"
  },
  {
    "text": "learned to draw really interesting stripes around the horses yeah like",
    "start": "1993029",
    "end": "1998429"
  },
  {
    "text": "that's a really interesting illustration of how the learning process works for deep learning so let's look at another",
    "start": "1998429",
    "end": "2003590"
  },
  {
    "text": "really interesting example we're going to use the exact same type of except now we're going to feed the algorithm images of French impressionist",
    "start": "2003590",
    "end": "2010240"
  },
  {
    "text": "palsies on and real-life pictures and what we're hoping to get is something that we call style transfer again",
    "start": "2010240",
    "end": "2016419"
  },
  {
    "text": "pictures of pulses on something that's called style transfer you might have seen this in social media applications",
    "start": "2016419",
    "end": "2021580"
  },
  {
    "text": "was something called filters right so the thing that normally things that you get here is that we're going to be able",
    "start": "2021580",
    "end": "2026950"
  },
  {
    "text": "to use saison style on real life pictures and we and by the same token we're gonna get these on pictures into",
    "start": "2026950",
    "end": "2033639"
  },
  {
    "text": "real life style okay so let's see what the model is done now again we've trained the same model same algorithm as",
    "start": "2033639",
    "end": "2038919"
  },
  {
    "text": "before but now we're feeding it images of French impressionist posies on and images of real-life pictures okay so",
    "start": "2038919",
    "end": "2045220"
  },
  {
    "text": "here we have an image of landscape by palsies on you can see that it has houses and a little road as well as some",
    "start": "2045220",
    "end": "2051460"
  },
  {
    "text": "of some trees now let's see what the model has done so you can do that the",
    "start": "2051460",
    "end": "2057490"
  },
  {
    "text": "model again these are design super form up forming models they have they can always learn more but you can see that",
    "start": "2057490",
    "end": "2062980"
  },
  {
    "text": "it's actually attenuated the colors to a more real lifelike colors right it's given some texture to the trees and it's",
    "start": "2062980",
    "end": "2069190"
  },
  {
    "text": "also given some texture to the rest of the landscape okay so I think it's actually done a really good job at",
    "start": "2069190",
    "end": "2074290"
  },
  {
    "text": "trying to convert this oil painting of an impressionist painter into an actual real life picture again this is",
    "start": "2074290",
    "end": "2080800"
  },
  {
    "text": "something I trained in a couple of days at my own at home right if you have time",
    "start": "2080800",
    "end": "2086050"
  },
  {
    "text": "to actually do some research you can get really interesting results now let's go the other way around this is the picture",
    "start": "2086050",
    "end": "2091480"
  },
  {
    "text": "of my beautiful wife she went out hiking in the early spring so a really nice",
    "start": "2091480",
    "end": "2097510"
  },
  {
    "text": "landscape of mountains and trees okay and we want to see how we're able to",
    "start": "2097510",
    "end": "2102790"
  },
  {
    "text": "transfer the style of this on on this picture so great what we can see is that",
    "start": "2102790",
    "end": "2110500"
  },
  {
    "text": "yes there is actually some type of style transfer right right there's some artistic artistic traces on the trees as",
    "start": "2110500",
    "end": "2116619"
  },
  {
    "text": "well as on the mountains and of course the picture of my the face of my wife has been blurred so there is some style",
    "start": "2116619",
    "end": "2123099"
  },
  {
    "text": "transfer but now I think this is a one of my favorite pictures this is my wife swimming with some sea turtles okay and",
    "start": "2123099",
    "end": "2131500"
  },
  {
    "text": "what I want to see now is what the model is a capable of doing with this M",
    "start": "2131500",
    "end": "2138480"
  },
  {
    "text": "and you see some really cool results right you see that the model has actually given some really artistic",
    "start": "2140319",
    "end": "2146150"
  },
  {
    "text": "traces around the water it's changed the color a little bit to have some really trippy dreamy kind of style you can see",
    "start": "2146150",
    "end": "2153140"
  },
  {
    "text": "around the turtle also it has changed sort of the style into more of an oil canvas and we didn't see before but we",
    "start": "2153140",
    "end": "2159140"
  },
  {
    "text": "did have this kind of two-dimensional texture going on with a picture right okay so that's for the demo so what have",
    "start": "2159140",
    "end": "2165740"
  },
  {
    "text": "we learned in the demos we've actually learned how to build from an end to end process of building deep learning",
    "start": "2165740",
    "end": "2172369"
  },
  {
    "text": "sophisticated deep learning models using first-party algorithms and bringing our own more complex code right the",
    "start": "2172369",
    "end": "2178609"
  },
  {
    "text": "references for all the work and all the code being used here is available with these links so thank you for having me",
    "start": "2178609",
    "end": "2186460"
  },
  {
    "text": "please if you have any questions specifically about deep learning machine learning and Gon's I'm always here for",
    "start": "2186460",
    "end": "2192490"
  },
  {
    "text": "how to have enough further conversation thank you again and have a good day",
    "start": "2192490",
    "end": "2197940"
  },
  {
    "text": "[Applause]",
    "start": "2197940",
    "end": "2203069"
  }
]