[
  {
    "start": "0",
    "end": "339000"
  },
  {
    "text": "and again welcome to the webcast today understanding database options on aws",
    "start": "399",
    "end": "6399"
  },
  {
    "text": "our presenter is miles watt senior solution architect at aws",
    "start": "6399",
    "end": "11840"
  },
  {
    "text": "miles you have the floor oh and thank you for the introduction and welcome everybody this morning to",
    "start": "11840",
    "end": "18480"
  },
  {
    "text": "our presentation i appreciate you taking the time uh i've worked for quite a while with",
    "start": "18480",
    "end": "25519"
  },
  {
    "text": "several different customers across several different industry verticals and",
    "start": "25519",
    "end": "30880"
  },
  {
    "text": "it doesn't really matter which kind of applications businesses are looking at deploying almost all of them depend in",
    "start": "30880",
    "end": "38160"
  },
  {
    "text": "one way or another on database technology what i'll present today is an overview of the really broad set of",
    "start": "38160",
    "end": "46559"
  },
  {
    "text": "database options that are available on aws the best practices and general overviews",
    "start": "46559",
    "end": "52480"
  },
  {
    "text": "for the right kinds of tools to use from us both from what we'll call an unmanaged or a",
    "start": "52480",
    "end": "58800"
  },
  {
    "text": "directly installed pattern on elastic compute cloud or ec2 as well as more",
    "start": "58800",
    "end": "64320"
  },
  {
    "text": "managed services from relational database service than",
    "start": "64320",
    "end": "71000"
  },
  {
    "text": "redshift and others so to give a quick sort of first view",
    "start": "77439",
    "end": "83280"
  },
  {
    "text": "recognize there are truly startling number of options",
    "start": "83280",
    "end": "88320"
  },
  {
    "text": "this is a simple subset but there are literally hundreds of different ways and types of database",
    "start": "88320",
    "end": "96079"
  },
  {
    "text": "software that are running today in production for hundreds of customers",
    "start": "96079",
    "end": "101360"
  },
  {
    "text": "on the aws system so to kind of go left to right on this view",
    "start": "101360",
    "end": "108799"
  },
  {
    "text": "i think probably the simplest and uh and typically the having the most in",
    "start": "108799",
    "end": "115040"
  },
  {
    "text": "common for the way that you would deploy databases maybe in an existing data center or",
    "start": "115040",
    "end": "121280"
  },
  {
    "text": "in your office or your own facilities would be to install relational database software on ec2 or the elastic compute",
    "start": "121280",
    "end": "128959"
  },
  {
    "text": "cloud so ec2 supports installation of any really windows or",
    "start": "128959",
    "end": "135360"
  },
  {
    "text": "linux x86 based database software so oracle or sql server or my sql or db2",
    "start": "135360",
    "end": "142800"
  },
  {
    "text": "there are literally hundreds of options at this tier we've heard from customers",
    "start": "142800",
    "end": "150080"
  },
  {
    "text": "that that that process that steps to installing databases the work of",
    "start": "150080",
    "end": "155599"
  },
  {
    "text": "managing those databases is complicated and time consuming and so we've offered",
    "start": "155599",
    "end": "161120"
  },
  {
    "text": "databases as a service we have three of those mysql sql server and oracle",
    "start": "161120",
    "end": "166720"
  },
  {
    "text": "database server 11g and 12c are available on aws",
    "start": "166720",
    "end": "173200"
  },
  {
    "text": "just like there are relational database services that handle transactional data",
    "start": "173200",
    "end": "178879"
  },
  {
    "text": "online transaction processing the ability to handle relational interconnections like joins",
    "start": "178879",
    "end": "185599"
  },
  {
    "text": "and unions inside of your data set there's a new model for development and",
    "start": "185599",
    "end": "190720"
  },
  {
    "text": "implementation against structured data that doesn't depend on the sql query paradigm so that idea is",
    "start": "190720",
    "end": "197840"
  },
  {
    "text": "called nosql and we have subfull litany of nosql database option",
    "start": "197840",
    "end": "203680"
  },
  {
    "text": "that can be installed on ec2 again maybe similar to the way that you might install",
    "start": "203680",
    "end": "209360"
  },
  {
    "text": "nosql database software in a data center or on your own environment that means that you download the software and",
    "start": "209360",
    "end": "215920"
  },
  {
    "text": "install it locally you get it set up to run on an ec2 instance potentially distribute that",
    "start": "215920",
    "end": "222480"
  },
  {
    "text": "software across multiple instances and we support things like and rioc and couch base and cassandra",
    "start": "222480",
    "end": "229760"
  },
  {
    "text": "there's again hundreds of those options as well we've heard from customers in the same",
    "start": "229760",
    "end": "235439"
  },
  {
    "text": "way that the complexity of implementation and setup and management for nosql databases",
    "start": "235439",
    "end": "242159"
  },
  {
    "text": "uh is the same as the complexity associated with the setup for relational databases so we've also built some",
    "start": "242159",
    "end": "248720"
  },
  {
    "text": "amazon managed services for nosql simple db and dynamodb gear2 examples",
    "start": "248720",
    "end": "255360"
  },
  {
    "text": "there we've also heard from customers that that some of the newest topology styles",
    "start": "255360",
    "end": "261359"
  },
  {
    "text": "where data stored entirely in memory is a model that provides a kind of",
    "start": "261359",
    "end": "267759"
  },
  {
    "text": "performance acceleration for systems that's that's very different than either the",
    "start": "267759",
    "end": "274000"
  },
  {
    "text": "nosql or the relational database model so memcached is kind of the first of the",
    "start": "274000",
    "end": "281040"
  },
  {
    "text": "entrance into that system you can certainly run memcached on ec2",
    "start": "281040",
    "end": "286080"
  },
  {
    "text": "or use commercial products like hana from sap or a managed service from amazon like",
    "start": "286080",
    "end": "292639"
  },
  {
    "text": "elasticash which is a d managed cluster on aws",
    "start": "292639",
    "end": "298800"
  },
  {
    "text": "a third really a fourth whole category of structured data services or database",
    "start": "298800",
    "end": "304320"
  },
  {
    "text": "services on aws is data warehouses applications focused on the olap online",
    "start": "304320",
    "end": "310479"
  },
  {
    "text": "application processing and analytical processing workloads so in the same pattern there are",
    "start": "310479",
    "end": "318000"
  },
  {
    "text": "the ability to directly install data warehouse software like vertica or teradata or hives uh hbase these other",
    "start": "318000",
    "end": "326000"
  },
  {
    "text": "systems it's not something that's available to install on ec2 and similarly we've heard from customers",
    "start": "326000",
    "end": "331919"
  },
  {
    "text": "that that's complicated it says we've built managed services like amazon's redshift system or hive",
    "start": "331919",
    "end": "339280"
  },
  {
    "start": "339000",
    "end": "598000"
  },
  {
    "text": "and hbase on elastic mapreduce that provide some more managed experience so",
    "start": "339280",
    "end": "345039"
  },
  {
    "text": "to kind of summarize that really rapid overview of what it is that",
    "start": "345039",
    "end": "351440"
  },
  {
    "text": "we have there are database services on aws a subset of which we would characterize as managed",
    "start": "351440",
    "end": "358400"
  },
  {
    "text": "services on aws so we'll go through in greater detail each of these different",
    "start": "358400",
    "end": "364080"
  },
  {
    "text": "options helps you understand the value propositions associated with the managed options what kinds of",
    "start": "364080",
    "end": "371840"
  },
  {
    "text": "values they add the things they make easier the complexity that they remove",
    "start": "371840",
    "end": "377759"
  },
  {
    "text": "and then also if there are any the places where implementation limits or",
    "start": "377759",
    "end": "384720"
  },
  {
    "text": "you know offer maximums for scale or other kinds of constraints may drive you",
    "start": "384720",
    "end": "389919"
  },
  {
    "text": "to one or the other kind of implementation so to jump in right at the top of the",
    "start": "389919",
    "end": "395840"
  },
  {
    "text": "list starting with sql or relational database deployment options on ec2 probably the first",
    "start": "395840",
    "end": "403600"
  },
  {
    "text": "example that makes sense is oracle database we have customers that are running",
    "start": "403600",
    "end": "409360"
  },
  {
    "text": "not only dev and test workloads but full production environments",
    "start": "409360",
    "end": "414720"
  },
  {
    "text": "oracle has you know has evaluated and allows the oracle 11g database running",
    "start": "414720",
    "end": "422639"
  },
  {
    "text": "on top of oracle enterprise linux for full production software support",
    "start": "422639",
    "end": "429039"
  },
  {
    "text": "the one of the big advantages to being able to run an oracle database in this way is that",
    "start": "429039",
    "end": "434800"
  },
  {
    "text": "like any application that runs on ec2 you're able to take advantage of that hourly pricing",
    "start": "434800",
    "end": "441360"
  },
  {
    "text": "so if you need to run say a short term very large oracle database to be able to",
    "start": "441360",
    "end": "449280"
  },
  {
    "text": "run an analytical process at the end of the month for end-of-month reporting",
    "start": "449280",
    "end": "454400"
  },
  {
    "text": "you could just turn that on the last couple of days of the month run it 24 7 those two days and you pay 1",
    "start": "454400",
    "end": "461199"
  },
  {
    "text": "15 of what you would pay if you ran that big machine all month long",
    "start": "461199",
    "end": "467039"
  },
  {
    "text": "we've pre-built amazon machine edges so getting started with oracle's very very",
    "start": "467039",
    "end": "472240"
  },
  {
    "text": "easy you can use not only our licenses for oracle where",
    "start": "472240",
    "end": "477759"
  },
  {
    "text": "you where you preside with us or you can port existing licenses that",
    "start": "477759",
    "end": "483520"
  },
  {
    "text": "you already own onto aws aws is the first",
    "start": "483520",
    "end": "489599"
  },
  {
    "text": "supported oracle certified cloud platform they've been able to certify us because",
    "start": "489599",
    "end": "497039"
  },
  {
    "text": "we've been able to launch the complete oracle stack so when you launch an",
    "start": "497039",
    "end": "502160"
  },
  {
    "text": "oracle amazon machine image on aws will actually deliver that image on top of",
    "start": "502160",
    "end": "508160"
  },
  {
    "text": "what's called ovm the oracle virtual machine image of their own certified",
    "start": "508160",
    "end": "513760"
  },
  {
    "text": "virtual machine stack so that ensures that your oracle systems that run on aws receive end-to-end",
    "start": "513760",
    "end": "521760"
  },
  {
    "text": "support from oracle this process is maybe a lot easier than",
    "start": "521760",
    "end": "527360"
  },
  {
    "text": "you'd expect you can really get started in about four steps",
    "start": "527360",
    "end": "532480"
  },
  {
    "text": "we already have pre-built amazon machine images that you can find through the management console so even if you've",
    "start": "532480",
    "end": "538880"
  },
  {
    "text": "never used aws before and the first thing you're going to do with us is try out an oracle database so the steps are",
    "start": "538880",
    "end": "545839"
  },
  {
    "text": "create an account log into our web console find one of the amis through the ec2",
    "start": "545839",
    "end": "553600"
  },
  {
    "text": "management console component where you search for amis and launch an instance of that ami",
    "start": "553600",
    "end": "559440"
  },
  {
    "text": "once the instance is up and running again that usually takes between five and ten minutes you'd be able to right",
    "start": "559440",
    "end": "565839"
  },
  {
    "text": "click on the running instance and select connect to instance and that would give you a dialog",
    "start": "565839",
    "end": "571839"
  },
  {
    "text": "for fsh access to the oracle database server so it's pretty straightforward something",
    "start": "571839",
    "end": "578800"
  },
  {
    "text": "we're seeing even new customers able to do inside of their lunch break",
    "start": "578800",
    "end": "583920"
  },
  {
    "text": "not something that should present a big impediment to even the highest scale deployment",
    "start": "583920",
    "end": "591680"
  },
  {
    "text": "so in terms of the next option the next kind of major relational database",
    "start": "591680",
    "end": "597519"
  },
  {
    "text": "service microsoft sql server fits effectively the same pattern we",
    "start": "597519",
    "end": "604240"
  },
  {
    "start": "598000",
    "end": "855000"
  },
  {
    "text": "work together with microsoft to build sql server amazon machine images and we",
    "start": "604240",
    "end": "610240"
  },
  {
    "text": "offer sql server software that's sql server express which is free",
    "start": "610240",
    "end": "616959"
  },
  {
    "text": "web which has a relatively low per hourly price for databases that back websites and web applications and sql",
    "start": "616959",
    "end": "624240"
  },
  {
    "text": "server standard for full application workloads each of those are available by",
    "start": "624240",
    "end": "629279"
  },
  {
    "text": "the hour so you start an ec2 instance that includes the sql server and windows",
    "start": "629279",
    "end": "635040"
  },
  {
    "text": "server license costs as an integrated part of the price so no need for you to",
    "start": "635040",
    "end": "640480"
  },
  {
    "text": "bring your own license or do any of your own installation or setup if you have",
    "start": "640480",
    "end": "646399"
  },
  {
    "text": "your own existing sql server of licenses you can use those you'd start a standard",
    "start": "646399",
    "end": "652160"
  },
  {
    "text": "windows ec2 instance and install your sql software and go forward from there",
    "start": "652160",
    "end": "658320"
  },
  {
    "text": "those pre-configured sql server instances offer that same benefit where",
    "start": "658320",
    "end": "664240"
  },
  {
    "text": "if you need to run a database for a short period of time you're you're only you only have to run them for the period",
    "start": "664240",
    "end": "670560"
  },
  {
    "text": "of time that you need them you also can change the size of ec2 instances by",
    "start": "670560",
    "end": "675600"
  },
  {
    "text": "rebooting databases so you could go from all the way down at the bottom on a on",
    "start": "675600",
    "end": "681519"
  },
  {
    "text": "an m1 small instance with 1.7 gigs of memory and restart that instance onto an",
    "start": "681519",
    "end": "687519"
  },
  {
    "text": "m24xl with 68 gigs of memory so really huge shift and scalability available",
    "start": "687519",
    "end": "695200"
  },
  {
    "text": "pretty quickly through our management console so those same deployment steps",
    "start": "695200",
    "end": "701440"
  },
  {
    "text": "creating a new account looking for sql server amis available now in sql server 2008 as well as sql",
    "start": "701440",
    "end": "710079"
  },
  {
    "text": "server 2012 and launching those instances from our console it gets you to a running",
    "start": "710079",
    "end": "716560"
  },
  {
    "text": "instance windows takes slightly longer to boot due to the fist prep process so in 10 or",
    "start": "716560",
    "end": "723200"
  },
  {
    "text": "15 minutes you'll be able to use the remote desktop protocol to get to the same windows desktop experience",
    "start": "723200",
    "end": "730560"
  },
  {
    "text": "as you're used to for managing existing servers so",
    "start": "730560",
    "end": "736800"
  },
  {
    "text": "each of these relational database systems also depends",
    "start": "736800",
    "end": "741839"
  },
  {
    "text": "on the storage system that you use and each of the pre-built amazon machine",
    "start": "741839",
    "end": "747120"
  },
  {
    "text": "images attaches an eds volume an elastic block store",
    "start": "747120",
    "end": "752720"
  },
  {
    "text": "disk for delivering block storage to the database interface",
    "start": "752720",
    "end": "758560"
  },
  {
    "text": "for each of these amazon machine images you have the option during the management console",
    "start": "758560",
    "end": "764720"
  },
  {
    "text": "launch wizard or when you create this instance from our command line tools of vr api",
    "start": "764720",
    "end": "772480"
  },
  {
    "text": "to enumerate additional disk resources both either standard evf",
    "start": "772480",
    "end": "778720"
  },
  {
    "text": "or provisioned ios edf higher performance storage system so with provision bios",
    "start": "778720",
    "end": "785839"
  },
  {
    "text": "you'd be able to deliver ebs single ebs volumes all the way up to 4 000 ios and",
    "start": "785839",
    "end": "791519"
  },
  {
    "text": "we very strongly recommend that relational database systems be deployed on top of provisioned ios",
    "start": "791519",
    "end": "798639"
  },
  {
    "text": "even if you intend to run them at relatively low i operate for 100 200 ions",
    "start": "798639",
    "end": "804800"
  },
  {
    "text": "still a system that was designed to support the database environment we'll",
    "start": "804800",
    "end": "810000"
  },
  {
    "text": "talk through more implementation tips that generally apply to all of these database options as we go along",
    "start": "810000",
    "end": "817200"
  },
  {
    "text": "so these are the uh the relational database services that are that are pre-built in and again",
    "start": "817200",
    "end": "823360"
  },
  {
    "text": "there are many more that we can cover certainly folks run my sequel and postgres and",
    "start": "823360",
    "end": "830880"
  },
  {
    "text": "uh and db2 and several others certainly recommend taking a look at",
    "start": "830880",
    "end": "837240"
  },
  {
    "text": "aws.amazon.com where we list out the full set of amazon machine images",
    "start": "837240",
    "end": "843199"
  },
  {
    "text": "for database products or relational database products but we've also built i want to make sure that we take the time",
    "start": "843199",
    "end": "849199"
  },
  {
    "text": "to review managed relational database or manage sql deployment options on ec2 so",
    "start": "849199",
    "end": "856959"
  },
  {
    "start": "855000",
    "end": "1086000"
  },
  {
    "text": "for relational databases that are managed we call that the relational database service so rds is fully managed",
    "start": "856959",
    "end": "865120"
  },
  {
    "text": "and allows you to deploy mysql or oracle or microsoft sql server",
    "start": "865120",
    "end": "871360"
  },
  {
    "text": "as a managed event what do i mean when i say that's a managed service so",
    "start": "871360",
    "end": "877279"
  },
  {
    "text": "we allow you to choose the database engine and app version that you want",
    "start": "877279",
    "end": "882959"
  },
  {
    "text": "but then beyond that we provide managed automated backups",
    "start": "882959",
    "end": "888800"
  },
  {
    "text": "automated disaster recovery tools significantly more detailed monitoring",
    "start": "888800",
    "end": "895279"
  },
  {
    "text": "and instance replacement direct management of storage configurations",
    "start": "895279",
    "end": "901199"
  },
  {
    "text": "and and for some of the versions of the database engines multiple az or multi-av deployments",
    "start": "901199",
    "end": "908959"
  },
  {
    "text": "we'll talk through what each of those different tools means so again rather than",
    "start": "908959",
    "end": "914399"
  },
  {
    "text": "imagine with the sql server or the oracle server that we just explained you install the software and then you remote",
    "start": "914399",
    "end": "920959"
  },
  {
    "text": "connect to the database server and use the built-in tools to sort of observe",
    "start": "920959",
    "end": "926720"
  },
  {
    "text": "that database or configure it with relational database service you can say",
    "start": "926720",
    "end": "932880"
  },
  {
    "text": "within the amazon web console and do all of the administrative work required to",
    "start": "932880",
    "end": "939600"
  },
  {
    "text": "set up and configure and launch the instance in a in a known good state",
    "start": "939600",
    "end": "945600"
  },
  {
    "text": "where we are the ones managing the back end of the database so that means that",
    "start": "945600",
    "end": "950720"
  },
  {
    "text": "you aren't able to remotely connect to the operating system that hosts that database we",
    "start": "950720",
    "end": "956959"
  },
  {
    "text": "create a subdivision where because we're in charge of managing the database system",
    "start": "956959",
    "end": "962320"
  },
  {
    "text": "we'll we'll keep that access control and you configure your system by web",
    "start": "962320",
    "end": "967600"
  },
  {
    "text": "services by remote access the advantage of that is what we heard from customers running",
    "start": "967600",
    "end": "973839"
  },
  {
    "text": "large-scale databases is that a big chunk of the time that's spent managing",
    "start": "973839",
    "end": "980639"
  },
  {
    "text": "running a database system it's very undifferentiated sort of heavy lifting you're constantly running backup",
    "start": "980639",
    "end": "987759"
  },
  {
    "text": "processes you're upgrading and patching and migrating to new versions there's",
    "start": "987759",
    "end": "993519"
  },
  {
    "text": "constant license those other pieces a lot of that work isn't any different from user to user",
    "start": "993519",
    "end": "1001040"
  },
  {
    "text": "and but at the same time you know it must be done and so rds",
    "start": "1001040",
    "end": "1007040"
  },
  {
    "text": "automates those parts of the work and makes it so that you simply set up backup schedules",
    "start": "1007040",
    "end": "1013120"
  },
  {
    "text": "we allow point in time restores of your database which are stored in f3 every",
    "start": "1013120",
    "end": "1018160"
  },
  {
    "text": "five minutes uh all of this sort of sophistication around",
    "start": "1018160",
    "end": "1023360"
  },
  {
    "text": "database so that you can focus your dba's time on the higher value higher benefit",
    "start": "1023360",
    "end": "1029760"
  },
  {
    "text": "work of performance tuning at the index and query tier at data modeling and",
    "start": "1029760",
    "end": "1036558"
  },
  {
    "text": "scripting and integration above the database tier so if you look at",
    "start": "1036559",
    "end": "1043199"
  },
  {
    "text": "backup and recovery and durability rds has really built some sophisticated tools there first you can",
    "start": "1043199",
    "end": "1050559"
  },
  {
    "text": "drive a snapshot of your database at any time say you're about to make a significant change in structure you can",
    "start": "1050559",
    "end": "1057039"
  },
  {
    "text": "back up the database on demand we also take automated backups at any point",
    "start": "1057039",
    "end": "1063280"
  },
  {
    "text": "that we're doing that on a daily basis at a schedule that you set we're also taking point in time restores",
    "start": "1063280",
    "end": "1069760"
  },
  {
    "text": "duplicates of the logs uh every five minutes into the f3 environment we",
    "start": "1069760",
    "end": "1074799"
  },
  {
    "text": "really enable very high durability uh and very",
    "start": "1074799",
    "end": "1079919"
  },
  {
    "text": "protected against logical failure kind of an environment if you accidentally delete a bunch of data being able to",
    "start": "1079919",
    "end": "1086400"
  },
  {
    "start": "1086000",
    "end": "1243000"
  },
  {
    "text": "restore from a recent point of time snapshots very powerful it's independent of the sort of manual",
    "start": "1086400",
    "end": "1093520"
  },
  {
    "text": "work of restoring from a database failure or something like that you also want to have high availability built",
    "start": "1093520",
    "end": "1100400"
  },
  {
    "text": "into the designs from the get go so rds in particular for",
    "start": "1100400",
    "end": "1105600"
  },
  {
    "text": "the mysql system allows what's called multi-az deployment so",
    "start": "1105600",
    "end": "1110880"
  },
  {
    "text": "we'll just with a single another option that you picked at instant startup time or",
    "start": "1110880",
    "end": "1116720"
  },
  {
    "text": "with a change in the configuration in any running rds database we're able to deploy a fully synchronous not as",
    "start": "1116720",
    "end": "1124000"
  },
  {
    "text": "international fully synchronous replica of your data into a separate",
    "start": "1124000",
    "end": "1129840"
  },
  {
    "text": "availability zone that's a different fault zone inside of aws so a totally separated facility",
    "start": "1129840",
    "end": "1136400"
  },
  {
    "text": "and that means that if there's a problem with the instance or the hard drive or the",
    "start": "1136400",
    "end": "1142240"
  },
  {
    "text": "network connections or even the whole building as a meteor strike takes out a",
    "start": "1142240",
    "end": "1147440"
  },
  {
    "text": "whole availability sense the other availability zone is very likely to still be online",
    "start": "1147440",
    "end": "1153039"
  },
  {
    "text": "so it can be a really powerful tool for delivering high availability",
    "start": "1153039",
    "end": "1159600"
  },
  {
    "text": "if you're deployed in this multi-av mode we won't even charge you full price for",
    "start": "1159600",
    "end": "1165360"
  },
  {
    "text": "that secondary copy and that enables a that enables a",
    "start": "1165360",
    "end": "1171600"
  },
  {
    "text": "an sla on durability or an sla on availability for the database service",
    "start": "1171600",
    "end": "1177360"
  },
  {
    "text": "which is pretty powerful for your design so another component that we hear from",
    "start": "1177360",
    "end": "1182640"
  },
  {
    "text": "customers all the time is they really are focused on the scalability of those databases so multi-av",
    "start": "1182640",
    "end": "1188799"
  },
  {
    "text": "uses synchronous replication that's used for h.a we also enable native mysql",
    "start": "1188799",
    "end": "1195360"
  },
  {
    "text": "asynchronous replication to allow you to send up what are called read replicas duplicates of the database that are kept",
    "start": "1195360",
    "end": "1202679"
  },
  {
    "text": "asynchronously aligned with the primary database to serve downstream leads this",
    "start": "1202679",
    "end": "1207840"
  },
  {
    "text": "allows you to grow your database system to accommodate even up to five",
    "start": "1207840",
    "end": "1213840"
  },
  {
    "text": "downstream league replicas so five times potentially as much weed traffic as the primary can handle",
    "start": "1213840",
    "end": "1220960"
  },
  {
    "text": "that also saves workload on the primary unpredicted workload on the primary",
    "start": "1220960",
    "end": "1227200"
  },
  {
    "text": "because it can spend most of its time focused receiving right and that that system uh can work",
    "start": "1227200",
    "end": "1234720"
  },
  {
    "text": "together with multi-av so there's no reason not to have a synchronous replica as well as asynchronous replicas or via",
    "start": "1234720",
    "end": "1241200"
  },
  {
    "text": "scalable so we've also listened to customers and heard from",
    "start": "1241200",
    "end": "1247280"
  },
  {
    "start": "1243000",
    "end": "1487000"
  },
  {
    "text": "them you know these these capabilities i want databases that i can grow whenever i want or frankly shrink",
    "start": "1247280",
    "end": "1254000"
  },
  {
    "text": "whenever i want i want the ability to remain highly available independent of whole data center",
    "start": "1254000",
    "end": "1259840"
  },
  {
    "text": "failures and i want to be able to you know scale when i need to scale particularly on the",
    "start": "1259840",
    "end": "1265840"
  },
  {
    "text": "read side we really built relational database service rds to handle each of",
    "start": "1265840",
    "end": "1270960"
  },
  {
    "text": "those pieces we also know uh you know and this is where elasticash fits into the pattern",
    "start": "1270960",
    "end": "1276559"
  },
  {
    "text": "we know that memcached by buffering the answers to your database queries and not the inputs that",
    "start": "1276559",
    "end": "1284000"
  },
  {
    "text": "are asked questions by your queries by buffering all the answers elasticache can make web applications and other",
    "start": "1284000",
    "end": "1290799"
  },
  {
    "text": "systems much much much much quicker and can really increase the scale of read",
    "start": "1290799",
    "end": "1296880"
  },
  {
    "text": "capacity for a given application so that's why we built the elastic service that allows you to even further multiply",
    "start": "1296880",
    "end": "1304240"
  },
  {
    "text": "the read capacity of your database environment so",
    "start": "1304240",
    "end": "1309520"
  },
  {
    "text": "it's another component of this make sure as you're evaluating licensing between systems",
    "start": "1309520",
    "end": "1316080"
  },
  {
    "text": "oracle rds is one of the options and will allow",
    "start": "1316080",
    "end": "1321600"
  },
  {
    "text": "oracle licensing systems you can use existing licenses from oracle or you can",
    "start": "1321600",
    "end": "1327440"
  },
  {
    "text": "purchase new oracle database licenses to use on amazon or you can use our",
    "start": "1327440",
    "end": "1333039"
  },
  {
    "text": "integrated licensing so recognize there are several different models there certainly important for any",
    "start": "1333039",
    "end": "1339200"
  },
  {
    "text": "of the database software that you're going to use that you clearly understand the software licensing",
    "start": "1339200",
    "end": "1344799"
  },
  {
    "text": "and take advantage of the pricing model or licensing system that fits best for",
    "start": "1344799",
    "end": "1350000"
  },
  {
    "text": "your workload so that's that's relational databases in a you know in a 15-minute were certainly",
    "start": "1350000",
    "end": "1357360"
  },
  {
    "text": "there's more data out there than that but but i think it makes a good overview for folks to understand both the",
    "start": "1357360",
    "end": "1365159"
  },
  {
    "text": "unmanaged and the managed options for relational databases on ec2",
    "start": "1365159",
    "end": "1371919"
  },
  {
    "text": "so now looking at the next style of database systems nosql system",
    "start": "1371919",
    "end": "1378080"
  },
  {
    "text": "there are similarly lots of deployment options and choices for nosql systems on ec2",
    "start": "1378080",
    "end": "1385919"
  },
  {
    "text": "we've heard from customers that the because each of these different systems use different terminology to describe",
    "start": "1385919",
    "end": "1392720"
  },
  {
    "text": "themselves because they were this is a market that's you know frankly much newer than the relational database",
    "start": "1392720",
    "end": "1399600"
  },
  {
    "text": "market which has you know i think oracle's been around for quite a while and mysql's been around for quite a",
    "start": "1399600",
    "end": "1404640"
  },
  {
    "text": "while and sql server has been around for quite a while several of these products have uh you know are relatively new",
    "start": "1404640",
    "end": "1410320"
  },
  {
    "text": "backed by startups uh have uh you know smaller user bases and represent kind of",
    "start": "1410320",
    "end": "1416400"
  },
  {
    "text": "cutting edge approaches to solving these problems so we work together with three",
    "start": "1416400",
    "end": "1421760"
  },
  {
    "text": "of them with mongodb that's that's powered by a company called tengen",
    "start": "1421760",
    "end": "1427120"
  },
  {
    "text": "with reoc powered by a company called basho and with couchface to capture their best practices for",
    "start": "1427120",
    "end": "1435279"
  },
  {
    "text": "installation implementation backup scalability",
    "start": "1435279",
    "end": "1440400"
  },
  {
    "text": "maintenance of their nosql systems we've written white papers that will help",
    "start": "1440400",
    "end": "1445919"
  },
  {
    "text": "folks digest the best and most efficient ways to deploy these nosql systems on top of aws so",
    "start": "1445919",
    "end": "1454559"
  },
  {
    "text": "those three we have manuals for it's not to say those are the only options and",
    "start": "1454559",
    "end": "1459679"
  },
  {
    "text": "this is one of the areas where there's there's really significant variability in the applications themselves so be",
    "start": "1459679",
    "end": "1466880"
  },
  {
    "text": "sure as you look at the specific workload that you have or the the programming experience of",
    "start": "1466880",
    "end": "1473840"
  },
  {
    "text": "your developers or your data analyst to evaluate carefully a database or a",
    "start": "1473840",
    "end": "1479760"
  },
  {
    "text": "nosql database that best fits your need they offer very different value proposition there are even some that",
    "start": "1479760",
    "end": "1487279"
  },
  {
    "start": "1487000",
    "end": "1563000"
  },
  {
    "text": "tread this line between nosql and relational or sql databases some of them",
    "start": "1487279",
    "end": "1493360"
  },
  {
    "text": "called new sql databases like nuodb or clostrix that are also potentially worth",
    "start": "1493360",
    "end": "1499600"
  },
  {
    "text": "evaluation so one of the most important things we've seen in the nosql environment may be",
    "start": "1499600",
    "end": "1506240"
  },
  {
    "text": "different than relational database environments where in relational database systems",
    "start": "1506240",
    "end": "1512000"
  },
  {
    "text": "there's certainly very heavy cpu and memory constraints on performance",
    "start": "1512000",
    "end": "1517679"
  },
  {
    "text": "many nosql systems have somewhat somewhat lower requirements for cpu",
    "start": "1517679",
    "end": "1524320"
  },
  {
    "text": "usage and as on the other side are very very bound by",
    "start": "1524320",
    "end": "1530559"
  },
  {
    "text": "uh storage performance so i want to spend a quick couple of minutes talking through the storage system options that",
    "start": "1530559",
    "end": "1536799"
  },
  {
    "text": "exist behind really sql and no sql data systems so um",
    "start": "1536799",
    "end": "1542720"
  },
  {
    "text": "you know if you look at your you know several different relational databases as well as nosql systems will use some",
    "start": "1542720",
    "end": "1549600"
  },
  {
    "text": "small block random operations to handle the individual",
    "start": "1549600",
    "end": "1555279"
  },
  {
    "text": "rights to and from storage so standard ebs you know we did a set of",
    "start": "1555279",
    "end": "1560480"
  },
  {
    "text": "testing using mongodb as as one representative application",
    "start": "1560480",
    "end": "1566880"
  },
  {
    "text": "uses 4k read sql server from microsoft uses 8k leads",
    "start": "1566880",
    "end": "1572320"
  },
  {
    "text": "and oracle is configurable for two or four or eight or larger kvs",
    "start": "1572320",
    "end": "1578159"
  },
  {
    "text": "mysql defaults to 16k read so important to keep track of what the correct block size is",
    "start": "1578159",
    "end": "1585600"
  },
  {
    "text": "for your database application but in this case using 4k reads using a single",
    "start": "1585600",
    "end": "1591279"
  },
  {
    "text": "eds volume you know we were able to extract on the order of 200 or so",
    "start": "1591279",
    "end": "1597600"
  },
  {
    "text": "operations per second um you know that's that's what the high end that's what i would call sort of",
    "start": "1597600",
    "end": "1603360"
  },
  {
    "text": "steady state performance of eds at more like a 125 to 100 ions um if you took an",
    "start": "1603360",
    "end": "1611279"
  },
  {
    "text": "ec2 instance and attached a bunch of evs volumes to it you could probably get into the thousand the iops range",
    "start": "1611279",
    "end": "1618880"
  },
  {
    "text": "again at the sort of 10 megabyte a second or so throughput to storage provision biops",
    "start": "1618880",
    "end": "1625279"
  },
  {
    "text": "offers much higher performance density up to 4 000 operations or about 4 000",
    "start": "1625279",
    "end": "1632240"
  },
  {
    "text": "iops for storage again with significantly lower variability sub 1",
    "start": "1632240",
    "end": "1638000"
  },
  {
    "text": "variability so a single volume in this case is easily",
    "start": "1638000",
    "end": "1643279"
  },
  {
    "text": "six times if not significantly faster than that compared to a standard ebs volume and if",
    "start": "1643279",
    "end": "1649039"
  },
  {
    "text": "you were to connect multiple ebs volumes to the ec2 instance that hosts your database you could go all the way to",
    "start": "1649039",
    "end": "1655120"
  },
  {
    "text": "saturating the network link that exists between ec2 and evs",
    "start": "1655120",
    "end": "1662399"
  },
  {
    "text": "you can optimize that link using a flag called eds optimized and on an m24 xl or",
    "start": "1662399",
    "end": "1669279"
  },
  {
    "text": "a c1 extra large or an n32 extra large that would be a",
    "start": "1669279",
    "end": "1674720"
  },
  {
    "text": "gigabit of throughput or about 120 megabytes a second as shown here",
    "start": "1674720",
    "end": "1680159"
  },
  {
    "text": "the the third option for these this that's becoming popular is our ec2 instances that have",
    "start": "1680159",
    "end": "1686640"
  },
  {
    "text": "solid state disks locally as their ephemeral storage so it's very important that you have a",
    "start": "1686640",
    "end": "1693120"
  },
  {
    "text": "duplicate of that data ephemeral volumes can be lost at any time if there's some kind of a problem with the instance but",
    "start": "1693120",
    "end": "1699840"
  },
  {
    "text": "the ios performance and the throughput is nothing to shake a stick at certainly",
    "start": "1699840",
    "end": "1704880"
  },
  {
    "text": "very very high performance one of the important measures to note is the difference between the very fastest",
    "start": "1704880",
    "end": "1712399"
  },
  {
    "text": "systems on aws the ssd hosts from high ones for excels",
    "start": "1712399",
    "end": "1717840"
  },
  {
    "text": "but provisioned ios of the system was designed for extremely consistent",
    "start": "1717840",
    "end": "1723279"
  },
  {
    "text": "performance so if you look at you know a single dbs volume you can see",
    "start": "1723279",
    "end": "1728559"
  },
  {
    "text": "pretty significant variability in the per second iop performance on provision",
    "start": "1728559",
    "end": "1734000"
  },
  {
    "text": "biopsy you're seeing less than one percent variability uh in many cases",
    "start": "1734000",
    "end": "1739200"
  },
  {
    "text": "it's only tenth of a percent variability on individual writes per second to storage",
    "start": "1739200",
    "end": "1745919"
  },
  {
    "start": "1744000",
    "end": "1892000"
  },
  {
    "text": "and the fft hosts while they're certainly able to deliver tens of thousands of iops to storage they still",
    "start": "1745919",
    "end": "1752399"
  },
  {
    "text": "exhibit higher variability in that you're interacting not with a managed",
    "start": "1752399",
    "end": "1757679"
  },
  {
    "text": "storage service but with the physical devices themselves so important as you design your database",
    "start": "1757679",
    "end": "1765200"
  },
  {
    "text": "system that you evaluate the right options for storage and that you incorporate that decision making into",
    "start": "1765200",
    "end": "1772080"
  },
  {
    "text": "your design this is probably one of the earliest and first sets of decisions you should make",
    "start": "1772080",
    "end": "1777520"
  },
  {
    "text": "and we found for most customers that that decision is complicated that there's",
    "start": "1777520",
    "end": "1782799"
  },
  {
    "text": "risk involved with making that choice incorrectly and that it can be difficult to stand up what many of these systems",
    "start": "1782799",
    "end": "1789360"
  },
  {
    "text": "recommend which is multi-node clusters distributed clusters of ec2 instances",
    "start": "1789360",
    "end": "1796080"
  },
  {
    "text": "for deploying the no sql database and as a result amazon has built a set of managed nosql",
    "start": "1796080",
    "end": "1803919"
  },
  {
    "text": "services so the first of those is a service called simpledb",
    "start": "1803919",
    "end": "1809120"
  },
  {
    "text": "simpledb is a is a unique system relatively one of the first amazon web",
    "start": "1809120",
    "end": "1815760"
  },
  {
    "text": "services designed to make the kinds of applications where you just need a",
    "start": "1815760",
    "end": "1821600"
  },
  {
    "text": "couple of rows of state data stored and accessible",
    "start": "1821600",
    "end": "1826799"
  },
  {
    "text": "and useful as a way to to get that data back and forth from",
    "start": "1826799",
    "end": "1833120"
  },
  {
    "text": "your application so simpledb is accessible over rest it doesn't expose",
    "start": "1833120",
    "end": "1839039"
  },
  {
    "text": "a a sql query string or an odbc or jdbc",
    "start": "1839039",
    "end": "1844480"
  },
  {
    "text": "connection set it's not designed to host your olap cubes or do any of maybe",
    "start": "1844480",
    "end": "1852640"
  },
  {
    "text": "the more standard things that that a relational database would do",
    "start": "1852640",
    "end": "1860000"
  },
  {
    "text": "um what simpledb does instead is provide a zero management zero",
    "start": "1860000",
    "end": "1867600"
  },
  {
    "text": "overhead zero configuration zero administration",
    "start": "1867600",
    "end": "1872640"
  },
  {
    "text": "service for delivering the kinds of back-end data that game applications and",
    "start": "1872640",
    "end": "1881600"
  },
  {
    "text": "you know we have a lot of services that are built for administering uh administering even easy too as a",
    "start": "1881600",
    "end": "1890080"
  },
  {
    "text": "metadata storage service you can use it as the index store for your s3 buckets it's a",
    "start": "1890080",
    "end": "1897120"
  },
  {
    "start": "1892000",
    "end": "2239000"
  },
  {
    "text": "great place for small application designers who don't want to deal with the work of setting up",
    "start": "1897120",
    "end": "1903519"
  },
  {
    "text": "a database to be able to to be able to have that service without",
    "start": "1903519",
    "end": "1908880"
  },
  {
    "text": "any of the headache so",
    "start": "1908880",
    "end": "1914880"
  },
  {
    "text": "we heard with simple bb one of the first places",
    "start": "1914880",
    "end": "1920000"
  },
  {
    "text": "from customers that that they wanted to get more features from aws",
    "start": "1920000",
    "end": "1926480"
  },
  {
    "text": "was was that simpledb has an upper maximum of 10 gigabytes",
    "start": "1926480",
    "end": "1932080"
  },
  {
    "text": "per simpledb table or or simple db data set and 10 gigs is plenty if you're",
    "start": "1932080",
    "end": "1939039"
  },
  {
    "text": "going to store if you're going to store data for",
    "start": "1939039",
    "end": "1946240"
  },
  {
    "text": "for you know a small application or a infrequently changing data type or something like that",
    "start": "1946240",
    "end": "1952240"
  },
  {
    "text": "um but if you have a huge amount of data or if you need the transactions to happen much more rapidly uh simpledb is",
    "start": "1952240",
    "end": "1960320"
  },
  {
    "text": "designed for you know double digit milliseconds inserts and retrievals of",
    "start": "1960320",
    "end": "1966240"
  },
  {
    "text": "data dynamodb is a new option from aws",
    "start": "1966240",
    "end": "1971840"
  },
  {
    "text": "that provides a managed nosql database this may sound familiar a little similar to simpledb but it's designed to be",
    "start": "1971840",
    "end": "1978640"
  },
  {
    "text": "extremely fast and decide designed to have unlimited potential storage and",
    "start": "1978640",
    "end": "1985200"
  },
  {
    "text": "throughput capacity so you tell us how fast you want dynamodb",
    "start": "1985200",
    "end": "1991120"
  },
  {
    "text": "to go and that's how fast we'll make it go you actually literally tell us i want",
    "start": "1991120",
    "end": "1996480"
  },
  {
    "text": "160 thousand ios on my dynamodb table we will configure it for 160 000 to file",
    "start": "1996480",
    "end": "2003519"
  },
  {
    "text": "those those transactions are metered both on the read and the right side so you can",
    "start": "2003519",
    "end": "2010080"
  },
  {
    "text": "build a database that's designed to accommodate huge bursts of reads and you only write a small number of changes at",
    "start": "2010080",
    "end": "2016960"
  },
  {
    "text": "a time or the opposite if you're capturing logs of data from remote systems it can support huge balloons of",
    "start": "2016960",
    "end": "2024399"
  },
  {
    "text": "writes and you can figure that literally by turning up and down the performance for read",
    "start": "2024399",
    "end": "2031279"
  },
  {
    "text": "at the table here and so that's really different than figuring out which kinds of hard drives and how many instances",
    "start": "2031279",
    "end": "2038080"
  },
  {
    "text": "and what kind of network setup and how many what kind of tunables of the operating system you don't have to deal with any",
    "start": "2038080",
    "end": "2044000"
  },
  {
    "text": "of that stuff you just tell us how fast you want it to go and we will make it that fast at whatever scale that you",
    "start": "2044000",
    "end": "2049760"
  },
  {
    "text": "need that service is built on solid-state storage so it's designed around and",
    "start": "2049760",
    "end": "2055760"
  },
  {
    "text": "built to take advantage of that storage topology and it really allows you",
    "start": "2055760",
    "end": "2061358"
  },
  {
    "text": "to build in a way that reduces risk in the assertive nosql system so one of the",
    "start": "2061359",
    "end": "2067358"
  },
  {
    "text": "core ideas behind the nosql model is",
    "start": "2067359",
    "end": "2072398"
  },
  {
    "text": "is looking at partition tolerance as a component of the cap theorem as a benefit and a focus",
    "start": "2072399",
    "end": "2080800"
  },
  {
    "text": "of the design of the system potentially at the expense of consistency so",
    "start": "2080800",
    "end": "2086000"
  },
  {
    "text": "dynamodb has a system that allows entirely consistent rights",
    "start": "2086000",
    "end": "2092638"
  },
  {
    "text": "and your ability to optionally elect for either",
    "start": "2092639",
    "end": "2098000"
  },
  {
    "text": "eventually consistent or consistent reads so you pay us",
    "start": "2098000",
    "end": "2103440"
  },
  {
    "text": "it's a double that costs you two iops basically or two operations right",
    "start": "2103440",
    "end": "2109760"
  },
  {
    "text": "or sorry two read operations per second to to do a consistent read versus one read",
    "start": "2109760",
    "end": "2117280"
  },
  {
    "text": "operation to do an eventually consistent read but again that's you just change the number and now you're able to do",
    "start": "2117280",
    "end": "2122640"
  },
  {
    "text": "consistent reads in a nosql data system that is distributed across multiple",
    "start": "2122640",
    "end": "2127680"
  },
  {
    "text": "availability zones within your region this is an entirely storage based",
    "start": "2127680",
    "end": "2134079"
  },
  {
    "text": "system so it's not an in-memory system if we lose power we don't lose data",
    "start": "2134079",
    "end": "2139119"
  },
  {
    "text": "and it's designed as a regional service continuously replicated again across",
    "start": "2139119",
    "end": "2144320"
  },
  {
    "text": "these multiple availability zones for high availability so",
    "start": "2144320",
    "end": "2149920"
  },
  {
    "text": "lots of different use cases make sense for dynamodb if you're looking at nosql databases at all dynamo is at least",
    "start": "2149920",
    "end": "2156000"
  },
  {
    "text": "worth a view and that consistent reading and writing structure is a is a commitment that's pretty",
    "start": "2156000",
    "end": "2162800"
  },
  {
    "text": "difficult for your average nosql system uh to meet so it's important to eyeball",
    "start": "2162800",
    "end": "2169119"
  },
  {
    "text": "that a constraint that exists today is it's important that your item sizes",
    "start": "2169119",
    "end": "2175440"
  },
  {
    "text": "remain relatively small so it's important that you know you can certainly keep any size",
    "start": "2175440",
    "end": "2182720"
  },
  {
    "text": "data that you need in aws you can store a five terabyte object in s3 and store",
    "start": "2182720",
    "end": "2188800"
  },
  {
    "text": "the pointer to it inside of a dv url to that s3 object but very very large",
    "start": "2188800",
    "end": "2194079"
  },
  {
    "text": "object inside of this database file one doesn't make a lot of sense and two aren't particularly efficient to store",
    "start": "2194079",
    "end": "2200160"
  },
  {
    "text": "an individual row won't tolerate that higher data size so",
    "start": "2200160",
    "end": "2205920"
  },
  {
    "text": "if you're looking at sort of making the choice between simpledb and dynamodb you",
    "start": "2205920",
    "end": "2211680"
  },
  {
    "text": "know an important part of this is you know simple db offers",
    "start": "2211680",
    "end": "2216800"
  },
  {
    "text": "automatic indexing across every column in the data set so",
    "start": "2216800",
    "end": "2221920"
  },
  {
    "text": "if you have a really widely varying range of data that sits in all in the",
    "start": "2221920",
    "end": "2227520"
  },
  {
    "text": "same table you can you can expect simpledb to make a best",
    "start": "2227520",
    "end": "2232800"
  },
  {
    "text": "effort at optimizing those tables and giving you good query performance independent of which",
    "start": "2232800",
    "end": "2239200"
  },
  {
    "text": "data element you choose to query on dynamodb offers a somewhat more",
    "start": "2239200",
    "end": "2244320"
  },
  {
    "text": "structured and more enumerated process for indexing it offers what's called a hash the",
    "start": "2244320",
    "end": "2252079"
  },
  {
    "text": "original id of the item so you can think of that as the typically the leftmost column",
    "start": "2252079",
    "end": "2257520"
  },
  {
    "text": "and then the range which is the maybe the data value that you'd want to sub select on so you know give me all of the",
    "start": "2257520",
    "end": "2263680"
  },
  {
    "text": "ids within uh you know the last 24 hour period or give me all of the ids uh that",
    "start": "2263680",
    "end": "2270560"
  },
  {
    "text": "you know have their integer values set you know greater than a billion something along those lines dynamodb",
    "start": "2270560",
    "end": "2277280"
  },
  {
    "text": "also supports secondary local indexes so you can elect to have additional tables",
    "start": "2277280",
    "end": "2285040"
  },
  {
    "text": "that are indexed for the purposes of querying and that consumes",
    "start": "2285040",
    "end": "2290800"
  },
  {
    "text": "write capacity and read capacity units as well to support that query model so a",
    "start": "2290800",
    "end": "2296480"
  },
  {
    "text": "little more upfront planning on the dynamodb side results in a higher scalability higher performance system in",
    "start": "2296480",
    "end": "2303839"
  },
  {
    "text": "the long term uh if you have that kind of predictable view so we also have some customers that kind of get started with",
    "start": "2303839",
    "end": "2310320"
  },
  {
    "text": "simplebp to learn the real patterns inside of their query model and then migrate data to dynamo",
    "start": "2310320",
    "end": "2317359"
  },
  {
    "text": "as they have a clear view at their index model so another tool we talked about a little",
    "start": "2317359",
    "end": "2323760"
  },
  {
    "text": "bit in the in the relational database side alasta cache offers this pre-configured",
    "start": "2323760",
    "end": "2330320"
  },
  {
    "text": "pre-deployable memcached caching environment one of the reasons that it also fits",
    "start": "2330320",
    "end": "2336960"
  },
  {
    "text": "here in this nosql model is there are lots of application development libraries that",
    "start": "2336960",
    "end": "2342560"
  },
  {
    "start": "2341000",
    "end": "2394000"
  },
  {
    "text": "are starting to use elasticache as a session data store as a as a temporary data store for uh",
    "start": "2342560",
    "end": "2350800"
  },
  {
    "text": "for interchanging data between applications it can be a good place to put",
    "start": "2350800",
    "end": "2356800"
  },
  {
    "text": "data that you want to store in memory rather than commit to a storage device like with",
    "start": "2356800",
    "end": "2362880"
  },
  {
    "text": "dynamodb or simple so we've also seen folks using elastic",
    "start": "2362880",
    "end": "2370320"
  },
  {
    "text": "cache in particular to pretty radically increase the performance",
    "start": "2370320",
    "end": "2375839"
  },
  {
    "text": "for applications that are read heavy so again imagine you know if the query",
    "start": "2375839",
    "end": "2382640"
  },
  {
    "text": "you know the query that you've written says you know in a relational database give me the count",
    "start": "2382640",
    "end": "2388160"
  },
  {
    "text": "of the number of users whose name is miles ward and whose job title is solutions",
    "start": "2388160",
    "end": "2394560"
  },
  {
    "text": "architect and your user database has every personal live on the planet some",
    "start": "2394560",
    "end": "2399680"
  },
  {
    "text": "seven odd billion people it might take a while for your relational database to scan through the whole table to find the",
    "start": "2399680",
    "end": "2406560"
  },
  {
    "text": "answer but if your application asks the question how many people named miles word are in",
    "start": "2406560",
    "end": "2412160"
  },
  {
    "text": "the database and it asks that a hundred times a minute if you just store the answers there's",
    "start": "2412160",
    "end": "2417520"
  },
  {
    "text": "only one miles board who's the solutions architect for amazon web services the count is one you store the one instead",
    "start": "2417520",
    "end": "2424319"
  },
  {
    "text": "of a compressed summary of that billion row table or anything else",
    "start": "2424319",
    "end": "2429440"
  },
  {
    "text": "serving up the one as an answer uh is going to be dramatically faster so an important part",
    "start": "2429440",
    "end": "2435920"
  },
  {
    "text": "of full stack application device so",
    "start": "2435920",
    "end": "2441359"
  },
  {
    "text": "beyond nosql and relational databases as the",
    "start": "2441359",
    "end": "2446400"
  },
  {
    "text": "sort of two primary paradigms for application interaction and user",
    "start": "2446400",
    "end": "2452319"
  },
  {
    "text": "interaction models and login blog outs all these other kinds of operations the far other end of the spectrum the",
    "start": "2452319",
    "end": "2459440"
  },
  {
    "text": "analytical processing the olap workloads is a very powerful use case for cloud",
    "start": "2459440",
    "end": "2466160"
  },
  {
    "text": "because we have the scale that allows you to analyze these petabyte data sets",
    "start": "2466160",
    "end": "2473280"
  },
  {
    "text": "so deploying data warehouse software software that's optimized around just",
    "start": "2473280",
    "end": "2478480"
  },
  {
    "text": "the analytical processing side of the workload not the transaction processing side it's pretty popular",
    "start": "2478480",
    "end": "2485200"
  },
  {
    "text": "there's a service called the aws marketplace and you'll see several links on this page to different data warehouse",
    "start": "2485200",
    "end": "2492480"
  },
  {
    "text": "systems that are built on top of the warehouse all right sorry excuse me on top of the",
    "start": "2492480",
    "end": "2498960"
  },
  {
    "text": "aws marketplace that allows you to quick deploy like for example scale arc or",
    "start": "2498960",
    "end": "2504240"
  },
  {
    "text": "treasure data or extreme data or bit yoda on top of aws",
    "start": "2504240",
    "end": "2511119"
  },
  {
    "text": "pre-configured pre-managed ready to run you don't have to do any sort of",
    "start": "2511119",
    "end": "2516960"
  },
  {
    "text": "installation you get to follow their process for for logins and making sure that that you",
    "start": "2516960",
    "end": "2523599"
  },
  {
    "text": "get access to database software there's also great how-to manuals on",
    "start": "2523599",
    "end": "2530000"
  },
  {
    "text": "running vertica and teradata express on ec2 that those companies maintain",
    "start": "2530000",
    "end": "2536560"
  },
  {
    "text": "again those are really straightforward processes for getting those software downloaded and",
    "start": "2536560",
    "end": "2542319"
  },
  {
    "text": "installed and configured similar to the discussion earlier around storage options it can be pretty",
    "start": "2542319",
    "end": "2548720"
  },
  {
    "text": "critical to ensure that the storage is configured properly for data warehouses uh depending on the",
    "start": "2548720",
    "end": "2554800"
  },
  {
    "text": "query model assuming a more sequential data access pattern",
    "start": "2554800",
    "end": "2560400"
  },
  {
    "text": "standard evs may offer at a price to performance ratio",
    "start": "2560400",
    "end": "2566800"
  },
  {
    "text": "a higher throughput to storage than provision bios was designed to offer on",
    "start": "2566800",
    "end": "2572240"
  },
  {
    "text": "the other side if you need very consistent access to storage for vision bias as always the first choice there",
    "start": "2572240",
    "end": "2579839"
  },
  {
    "text": "so data warehouse software another component that's going to be important",
    "start": "2579839",
    "end": "2584880"
  },
  {
    "text": "because in many cases you're putting very critical secure customer data",
    "start": "2584880",
    "end": "2591839"
  },
  {
    "text": "into the warehousing environment to do analytical processing you want to make sure that your security design",
    "start": "2591839",
    "end": "2598000"
  },
  {
    "text": "for these kinds of systems is is well built so not only does that mean",
    "start": "2598000",
    "end": "2603520"
  },
  {
    "text": "encryption in rest and transit you should be connecting to these data sources using ssl and there should be",
    "start": "2603520",
    "end": "2609440"
  },
  {
    "text": "some kind of encryption of the storage tier you also want to make sure that your backups are encrypted",
    "start": "2609440",
    "end": "2614640"
  },
  {
    "text": "and for access to these systems through the aws console you'll want to use",
    "start": "2614640",
    "end": "2620079"
  },
  {
    "text": "identity and access management to control and limit your users",
    "start": "2620079",
    "end": "2625440"
  },
  {
    "text": "potentially to only accessing you know the tools from aws that they need",
    "start": "2625440",
    "end": "2632240"
  },
  {
    "text": "and carefully controlling things like ssh keys or rdp passwords to ensure that",
    "start": "2632240",
    "end": "2637920"
  },
  {
    "text": "access to the individual servers is well managed we also offer a service for",
    "start": "2637920",
    "end": "2643119"
  },
  {
    "text": "identity and access management and aws called a multi-factor authentication",
    "start": "2643119",
    "end": "2648560"
  },
  {
    "text": "token that makes it easier to have a two-factor authentication when you log",
    "start": "2648560",
    "end": "2653760"
  },
  {
    "text": "in so all important tools we heard from customers that getting this kind of warehouse up and running particularly",
    "start": "2653760",
    "end": "2660240"
  },
  {
    "text": "one at scale was potentially complicated and so aws has built a managed cloud",
    "start": "2660240",
    "end": "2667200"
  },
  {
    "text": "data warehouse called redshift we designed this data warehouse with a",
    "start": "2667200",
    "end": "2672800"
  },
  {
    "text": "real focus on making sure that things were faster and cheaper and easier than",
    "start": "2672800",
    "end": "2678000"
  },
  {
    "text": "your standard sort of data warehouse implementation we've done that by building a lot of new",
    "start": "2678000",
    "end": "2683599"
  },
  {
    "text": "technology frankly we really wanted to focus on the enterprise core data warehouse the big data",
    "start": "2683599",
    "end": "2690480"
  },
  {
    "text": "challenge inside of these newest businesses and the oldest businesses that are built on ancient data warehouse",
    "start": "2690480",
    "end": "2697200"
  },
  {
    "text": "systems to get very very high performance access to all of their data",
    "start": "2697200",
    "end": "2702800"
  },
  {
    "text": "so we worked with like airbnb they're at a quarter of the cost",
    "start": "2702800",
    "end": "2708240"
  },
  {
    "text": "and some sometimes 20 times the performance in comparison uh to their",
    "start": "2708240",
    "end": "2713680"
  },
  {
    "text": "hive environment we worked with accordance they were able to cut down by 40",
    "start": "2713680",
    "end": "2719440"
  },
  {
    "text": "x the query time we were nokia they're able to cut their cost in half and double performance so very high",
    "start": "2719440",
    "end": "2726160"
  },
  {
    "text": "performance very low cost system for data warehousing and it's able to provide those benefits",
    "start": "2726160",
    "end": "2731839"
  },
  {
    "text": "because like many of the scale out mpp",
    "start": "2731839",
    "end": "2737359"
  },
  {
    "text": "columnar storage systems for data warehousing redshift compresses and optimizes data",
    "start": "2737359",
    "end": "2745119"
  },
  {
    "text": "around the storage topology to ensure that you're able to deliver queries at a",
    "start": "2745119",
    "end": "2750800"
  },
  {
    "text": "incredible high speed even though you've actually reduced the random i o to",
    "start": "2750800",
    "end": "2755839"
  },
  {
    "text": "storage so another part of the data warehouse topology that's",
    "start": "2755839",
    "end": "2761599"
  },
  {
    "text": "that's pretty convenient as a part of the redshift cluster we know that most systems are dependent",
    "start": "2761599",
    "end": "2767520"
  },
  {
    "text": "in cluster of mpp architectures on high performance networking as well as hyperfont storage",
    "start": "2767520",
    "end": "2773280"
  },
  {
    "text": "so we've built on top of our cluster compute network that's 10 gig full bisection non-blocking zero over",
    "start": "2773280",
    "end": "2780400"
  },
  {
    "text": "subscription ethernet and in the redshift architecture we deploy and manage the leader node in",
    "start": "2780400",
    "end": "2786240"
  },
  {
    "text": "that cluster so you only pay for the working compute nodes that are a part of your warehouse cluster",
    "start": "2786240",
    "end": "2794000"
  },
  {
    "start": "2789000",
    "end": "2912000"
  },
  {
    "text": "so that cluster allows you to interact using standard jdbc odbc tool",
    "start": "2794000",
    "end": "2801680"
  },
  {
    "text": "we'll talk through external tools that work great with us and then is natively",
    "start": "2801680",
    "end": "2806800"
  },
  {
    "text": "backing up and ingesting data and restoring data to and from s3 as its external storage location so",
    "start": "2806800",
    "end": "2814480"
  },
  {
    "text": "when you create a redshift cluster you can grow and shrink that cluster based",
    "start": "2814480",
    "end": "2820400"
  },
  {
    "text": "on your actual workplace we offer a smaller node set called an hs1x large",
    "start": "2820400",
    "end": "2826319"
  },
  {
    "text": "that has two terabytes of triple replicated data per node in the cluster",
    "start": "2826319",
    "end": "2831359"
  },
  {
    "text": "you can have up to 32 of those nodes or if you know you're going big you can",
    "start": "2831359",
    "end": "2836560"
  },
  {
    "text": "start with hs1 8x barges those instances have 16 terabytes",
    "start": "2836560",
    "end": "2842839"
  },
  {
    "text": "terabytes terabytes of data per node triple replicated uh and you can have up",
    "start": "2842839",
    "end": "2849599"
  },
  {
    "text": "to a hundred of those nodes in a cluster that means 1.6 petabytes of data in your",
    "start": "2849599",
    "end": "2855760"
  },
  {
    "text": "warehouse which we think is ready to go for even the biggest warehousing applications we've encountered each of",
    "start": "2855760",
    "end": "2863680"
  },
  {
    "text": "those nodes has 128 gigs of memory so that hundred node cluster offers",
    "start": "2863680",
    "end": "2869760"
  },
  {
    "text": "terabytes of ram for your application workload all of which you can monitor directly through the management console",
    "start": "2869760",
    "end": "2875760"
  },
  {
    "text": "you don't need to use externalized tools you can come straight to aws to look at that stuff and",
    "start": "2875760",
    "end": "2881440"
  },
  {
    "text": "it also allows you to observe you know optimize the queries that you use explore those queries and resize the",
    "start": "2881440",
    "end": "2889599"
  },
  {
    "text": "cluster to take advantage of you know higher performance by having additional nodes as you get more data into the work",
    "start": "2889599",
    "end": "2896480"
  },
  {
    "text": "system we've also heard with lots of customers that they have external data integration services",
    "start": "2896480",
    "end": "2903119"
  },
  {
    "text": "etl services that you need you know consultancy to make sure that you're using your warehouse correctly we've",
    "start": "2903119",
    "end": "2909040"
  },
  {
    "text": "really built a full end-to-end pattern with redshift to make it easy",
    "start": "2909040",
    "end": "2914480"
  },
  {
    "start": "2912000",
    "end": "2975000"
  },
  {
    "text": "for customers to use and easy for customers to get help with and then we've also integrated with several of",
    "start": "2914480",
    "end": "2921920"
  },
  {
    "text": "the different business intelligence tools jaspersoft burst microstrategy",
    "start": "2921920",
    "end": "2927839"
  },
  {
    "text": "to blow many of these connect using the standard postgres sql",
    "start": "2927839",
    "end": "2934319"
  },
  {
    "text": "jdbc and odbc connectors to allow all the good charts and graphs in fact we",
    "start": "2934319",
    "end": "2939760"
  },
  {
    "text": "found for most customers that's that's a lot easier if they're able to deploy those bi stacks",
    "start": "2939760",
    "end": "2946800"
  },
  {
    "text": "on ec2 so we've got several of those partners available through the aws",
    "start": "2946800",
    "end": "2952480"
  },
  {
    "text": "marketplace that means you can point and click and launch a jaspersoft or a",
    "start": "2952480",
    "end": "2957680"
  },
  {
    "text": "microstrategy or an attunity environment and then hook that up to your redshift data warehouse pretty powerful",
    "start": "2957680",
    "end": "2965280"
  },
  {
    "text": "another sort of note that really applies across all these different services in many cases one of the blockers we hear",
    "start": "2965280",
    "end": "2971280"
  },
  {
    "text": "from customers is all this stuff sounds awful great but how do i get my data up there how do i connect to my existing",
    "start": "2971280",
    "end": "2977520"
  },
  {
    "text": "environments we've built several different networking and data movement services so direct connect the rousey",
    "start": "2977520",
    "end": "2984319"
  },
  {
    "text": "allows you to run a private non-internet one gigabit or 10 gigabit multiple",
    "start": "2984319",
    "end": "2991200"
  },
  {
    "text": "10 gigabit linkages from your data centers directly to aws so that's not on",
    "start": "2991200",
    "end": "2996480"
  },
  {
    "text": "the internet allows very low latency high performance connectivity to the aws fleet we've also",
    "start": "2996480",
    "end": "3002800"
  },
  {
    "text": "built virtual private cloud that allows you to connect over dual ipsec bgp high security tunnels",
    "start": "3002800",
    "end": "3010000"
  },
  {
    "text": "back to your current data center environment over the internet but over an encrypted channel and then if you have terabytes",
    "start": "3010000",
    "end": "3017359"
  },
  {
    "text": "and terabytes of data to move back and forth and your local environment doesn't have quite the network performance for",
    "start": "3017359",
    "end": "3022880"
  },
  {
    "text": "that we have the import export service where you can literally mail us fisks and we'll load that data into aws",
    "start": "3022880",
    "end": "3031280"
  },
  {
    "text": "so if you look at across each of these different categories of options you'll hear from",
    "start": "3031280",
    "end": "3038400"
  },
  {
    "text": "amazon that we have a service offering that meets the needs of thousands tens of thousands hundreds of",
    "start": "3038400",
    "end": "3044960"
  },
  {
    "text": "thousands of customers today i'm really proud of the not only the faculty but the diversity",
    "start": "3044960",
    "end": "3052000"
  },
  {
    "text": "of these services because we know that everybody's applications are different and we want to make sure that you have all of the choices",
    "start": "3052000",
    "end": "3058960"
  },
  {
    "text": "available to make sure you make a good choice as you implement database services",
    "start": "3058960",
    "end": "3064079"
  },
  {
    "text": "we've got a bunch of questions in the q and a panel and i'm excited to jump into",
    "start": "3064079",
    "end": "3069680"
  },
  {
    "start": "3066000",
    "end": "3510000"
  },
  {
    "text": "those we have a couple of uh you know additional links here just to the product that we talked about today",
    "start": "3069680",
    "end": "3075760"
  },
  {
    "text": "but i'm going to take a minute to do some prioritizing here and then and then start answering questions",
    "start": "3075760",
    "end": "3083760"
  },
  {
    "text": "thank you miles um before i headed back to go over questions i'd like to remind everyone to please take a second to fill",
    "start": "3083760",
    "end": "3090400"
  },
  {
    "text": "out our survey the feedback that you provide helps us to improve our webcast so we do appreciate your feedback just",
    "start": "3090400",
    "end": "3097440"
  },
  {
    "text": "click on the survey button there at the bottom of the browser and it will open up in a new browser window please do",
    "start": "3097440",
    "end": "3103040"
  },
  {
    "text": "this before we close out the webcast so you have a chance to fill it out and with that i will hand it back to miles",
    "start": "3103040",
    "end": "3108640"
  },
  {
    "text": "to answer these questions perfect so there's a good question",
    "start": "3108640",
    "end": "3114319"
  },
  {
    "text": "virtual private cloud is a network environment that really represents the sort of",
    "start": "3114319",
    "end": "3120400"
  },
  {
    "text": "go forward future path for all production applications on aws it's",
    "start": "3120400",
    "end": "3125920"
  },
  {
    "text": "really the place that you should be running and so there's a good question here that asks can rds be a part of vpc",
    "start": "3125920",
    "end": "3132559"
  },
  {
    "text": "can i run amazon's rds service inside of vpc the answer that is absolutely yes",
    "start": "3132559",
    "end": "3139200"
  },
  {
    "text": "rds supports vpc totally no problems with deployment inside of there",
    "start": "3139200",
    "end": "3145440"
  },
  {
    "text": "there's a question here around you know is there a five limit on the sql server database for rds or",
    "start": "3145440",
    "end": "3152240"
  },
  {
    "text": "otherwise it's a great question we've recently increased the five limit",
    "start": "3152240",
    "end": "3157280"
  },
  {
    "text": "for the relational database service for all three of the database engine",
    "start": "3157280",
    "end": "3162319"
  },
  {
    "text": "we'll allow you to configure storage up to three terabytes and up to thirty",
    "start": "3162319",
    "end": "3167920"
  },
  {
    "text": "thousand ions of read write performance now each database engine",
    "start": "3167920",
    "end": "3174240"
  },
  {
    "text": "based on the way that it manages storage will actually deliver a different number of real iops in terms",
    "start": "3174240",
    "end": "3182000"
  },
  {
    "text": "of performance so the question here is sql server we're seeing for most customers even when provisioned at 30",
    "start": "3182000",
    "end": "3188319"
  },
  {
    "text": "000 real transactional performance is more at the 12 000 the high up range that",
    "start": "3188319",
    "end": "3194000"
  },
  {
    "text": "extra performance provisioning is more to do with providing adequate head room for the",
    "start": "3194000",
    "end": "3199359"
  },
  {
    "text": "application but but three terabytes is the is the upper size max today",
    "start": "3199359",
    "end": "3206240"
  },
  {
    "text": "so another question uh is there is there an ability to",
    "start": "3206240",
    "end": "3211920"
  },
  {
    "text": "replicate an on-site oracle rds database or sorry an on-site oracle database to",
    "start": "3211920",
    "end": "3217599"
  },
  {
    "text": "an amazon rds in principle so replication is available in lots of different",
    "start": "3217599",
    "end": "3224400"
  },
  {
    "text": "flavors using several different technologies so oracle has not only native replication",
    "start": "3224400",
    "end": "3232079"
  },
  {
    "text": "systems but they also have internal secondary tools like oracle's golden gate to create replication",
    "start": "3232079",
    "end": "3239359"
  },
  {
    "text": "streams between applications today because you can't log in to install",
    "start": "3239359",
    "end": "3246079"
  },
  {
    "text": "anything else on the database server for rds the replication options are limited",
    "start": "3246079",
    "end": "3252240"
  },
  {
    "text": "to the tools that work over the oracle database connection string without",
    "start": "3252240",
    "end": "3257920"
  },
  {
    "text": "on ton instance or on device services so make sure that",
    "start": "3257920",
    "end": "3263280"
  },
  {
    "text": "any of the models that typically is things like log shipping or other kinds",
    "start": "3263280",
    "end": "3268480"
  },
  {
    "text": "of query based synchronization those all work just fine so",
    "start": "3268480",
    "end": "3273760"
  },
  {
    "text": "there's a question here about a loaded instance we talked a little earlier around",
    "start": "3273760",
    "end": "3279920"
  },
  {
    "text": "around an instance that has lots of evs volumes as a sort of maximum performance",
    "start": "3279920",
    "end": "3285520"
  },
  {
    "text": "throughput for each workload and i'll spend a minute on this because it's an important concept so",
    "start": "3285520",
    "end": "3292400"
  },
  {
    "text": "if you have a thousand megabits per second of throughput to and from an ebs optimized ec2",
    "start": "3292400",
    "end": "3300240"
  },
  {
    "text": "instance and cvs you you can chop that thousand megabits",
    "start": "3300240",
    "end": "3305680"
  },
  {
    "text": "up quite a few different ways let's say that's 120 megabytes of rupees",
    "start": "3305680",
    "end": "3312079"
  },
  {
    "text": "if you're doing 16k operations for 8k or 4k operations",
    "start": "3312079",
    "end": "3319599"
  },
  {
    "text": "you can run a relatively high number of iops through that 120 megabyte channel",
    "start": "3319599",
    "end": "3326240"
  },
  {
    "text": "if they're you know 4k say that's on the order of 40 000 or 38 000 or something",
    "start": "3326240",
    "end": "3332000"
  },
  {
    "text": "along those lines as you go to larger operation you can run a smaller number of them",
    "start": "3332000",
    "end": "3339599"
  },
  {
    "text": "through the same channel so all the way the other direction you know at 120 megabytes if you are on",
    "start": "3339599",
    "end": "3346240"
  },
  {
    "text": "really large blocks uh 256k operations or or some of these other operations that",
    "start": "3346240",
    "end": "3352559"
  },
  {
    "text": "are popular with data warehouses you know or file system operations that's a megabyte sizes that's only 120",
    "start": "3352559",
    "end": "3359280"
  },
  {
    "text": "operations a second if you're doing a one megabyte operation so it's important that you establish a disk",
    "start": "3359280",
    "end": "3366480"
  },
  {
    "text": "subsystem and pick the right storage so that you don't either under provision or over provision against the actual",
    "start": "3366480",
    "end": "3373359"
  },
  {
    "text": "storage workload and the network throughput to and from your compute instances so in this",
    "start": "3373359",
    "end": "3379920"
  },
  {
    "text": "example a 4k loaded instance yes is an 8 disk raid 0.",
    "start": "3379920",
    "end": "3387440"
  },
  {
    "text": "mongodb in this specific case will also do the same read performance on an 8-disc rig",
    "start": "3387440",
    "end": "3394000"
  },
  {
    "text": "10 because it's optimized around reading from the rave 10 pattern style",
    "start": "3394000",
    "end": "3400400"
  },
  {
    "text": "each different database has its own best practices in terms of specific disk",
    "start": "3400400",
    "end": "3406559"
  },
  {
    "text": "configurations that again are bounded by those throughput capacities",
    "start": "3406559",
    "end": "3413040"
  },
  {
    "text": "so another question is you know there's a a mark in here that",
    "start": "3413040",
    "end": "3419839"
  },
  {
    "text": "says you know on the storage performance slide we talked about low variability",
    "start": "3419839",
    "end": "3425839"
  },
  {
    "text": "and less than one percent favorability which one is lower dbf standard eps is a more variable",
    "start": "3425839",
    "end": "3433440"
  },
  {
    "text": "service than provision to ios cbs so in this case low variability was higher",
    "start": "3433440",
    "end": "3438799"
  },
  {
    "text": "than less than one percent variability",
    "start": "3438799",
    "end": "3443440"
  },
  {
    "text": "uh there's another question here about setting up sql server clusters through amazon machine images so sql",
    "start": "3444400",
    "end": "3451440"
  },
  {
    "text": "server clustering uh requires uh the use of windows clustering",
    "start": "3451440",
    "end": "3457200"
  },
  {
    "text": "and we have a full detailed white paper that explains every",
    "start": "3457200",
    "end": "3462559"
  },
  {
    "text": "one of the steps required to build a functioning windows cluster and as a result of sql cluster which we can have",
    "start": "3462559",
    "end": "3469760"
  },
  {
    "text": "cloud formation scripts that allow you to pre-deploy all the different instances and to configure vpc in such a",
    "start": "3469760",
    "end": "3476240"
  },
  {
    "text": "way that that cluster will work that's a full always-on sql server cluster that",
    "start": "3476240",
    "end": "3481839"
  },
  {
    "text": "requires that you deploy this on ec2 that's not a feature of rds but that's available on on the aws",
    "start": "3481839",
    "end": "3489280"
  },
  {
    "text": "website uh just search for sql cluster and you'll see that instruction menu will come up",
    "start": "3489280",
    "end": "3496559"
  },
  {
    "text": "we're we're almost out of time and i really appreciate everybody's questions uh thanks for participating and if there",
    "start": "3496559",
    "end": "3503680"
  },
  {
    "text": "is any uh outstanding questions we'll jump on those after we're done with the webinar thanks everybody for taking the",
    "start": "3503680",
    "end": "3509599"
  },
  {
    "text": "time today",
    "start": "3509599",
    "end": "3512480"
  }
]