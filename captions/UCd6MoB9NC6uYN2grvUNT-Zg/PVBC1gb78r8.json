[
  {
    "start": "0",
    "end": "110000"
  },
  {
    "text": "good afternoon everyone I hope you're all enjoying reinvents so far this talk",
    "start": "260",
    "end": "5549"
  },
  {
    "text": "is DNS demystified where we'll be talking about red 53 amazon's dns service my name is Gavin McCullough I'm",
    "start": "5549",
    "end": "12870"
  },
  {
    "text": "a system development engineer in the red 53 team I've been in Amazon for about six years working on load balancers DNS",
    "start": "12870",
    "end": "20699"
  },
  {
    "text": "traffic management in general with us is Ron she who is a software development",
    "start": "20699",
    "end": "26820"
  },
  {
    "text": "engineer with mule soft one of our customers and he'll be explaining their use case for red 53 later on in the talk",
    "start": "26820",
    "end": "33020"
  },
  {
    "text": "in case you're wondering a system development engineer is in Amazon at least a system engineer who occasionally",
    "start": "33020",
    "end": "39600"
  },
  {
    "text": "does some development when the software developers aren't looking so and if you",
    "start": "39600",
    "end": "47789"
  },
  {
    "text": "saw DNS demystified last year at reinvent it was a 200 level talk this is a 300 level talk we're kind of stepping",
    "start": "47789",
    "end": "54390"
  },
  {
    "text": "up the level a little bit so and quickly what we'll be going through this is sort of a theme of looking at more large",
    "start": "54390",
    "end": "61079"
  },
  {
    "text": "scale DNS or more production sensitive DNS so the kinds of things you're doing we're making mistakes in this DNS is a",
    "start": "61079",
    "end": "68010"
  },
  {
    "text": "bad idea or you want to do it at very large scale very quickly so we'll have a very quick intro to DNS and the core",
    "start": "68010",
    "end": "75210"
  },
  {
    "text": "features of red 53 then we'll look at some DNS inside ec2 and we're going to",
    "start": "75210",
    "end": "82650"
  },
  {
    "text": "look at some of refugees new features and we'll have a case study from mule soft and then we look at some of our FTP",
    "start": "82650",
    "end": "89280"
  },
  {
    "text": "threes advanced traffic management features and finally there's a few little tips on DNS operational",
    "start": "89280",
    "end": "95100"
  },
  {
    "text": "excellence toward the end so let's start",
    "start": "95100",
    "end": "100110"
  },
  {
    "text": "with the rapid intro get that over with quickly I'm guessing most people here are reasonably familiar with DNS hands",
    "start": "100110",
    "end": "105270"
  },
  {
    "text": "up if you're familiar with DNS feel like you are okay we can go fairly quickly so I'm sure you all know what this picture",
    "start": "105270",
    "end": "112799"
  },
  {
    "start": "110000",
    "end": "110000"
  },
  {
    "text": "means it turns out that in order to connect to a service online you probably know the name you probably don't know",
    "start": "112799",
    "end": "118110"
  },
  {
    "text": "the IP address and we need some way to find out what the IP address is the way we solve it is the DNS resolver it's in",
    "start": "118110",
    "end": "124950"
  },
  {
    "text": "just about every network there's thousands of them across the internet and as a as a service owner when you are",
    "start": "124950",
    "end": "132360"
  },
  {
    "text": "building a web service you need to make sure that all of those DNS resolvers can answer the question so",
    "start": "132360",
    "end": "137940"
  },
  {
    "text": "what you need to know is how do the resolvers answer the question what turns out they talk to the authoritative servers and the authoritative servers",
    "start": "137940",
    "end": "144930"
  },
  {
    "start": "138000",
    "end": "138000"
  },
  {
    "text": "are arranged in a kind of a tree so initially the roots own everything every name in principle is owned by the roots",
    "start": "144930",
    "end": "151110"
  },
  {
    "text": "and what the roots do is to say well this is too much traffic set up some separate name service for comm I'll",
    "start": "151110",
    "end": "157020"
  },
  {
    "text": "delegate to them not some more name name servers for an org and we'll delegate to them and they in turn delegate further",
    "start": "157020",
    "end": "162990"
  },
  {
    "text": "down so the tree is distributed and management of it is distributed not",
    "start": "162990",
    "end": "168000"
  },
  {
    "text": "everybody wants to run their own DNS servers so this is one of the reasons I",
    "start": "168000",
    "end": "173220"
  },
  {
    "text": "read 53 exists so what a DNS resolver actually fundamentally has to do is to",
    "start": "173220",
    "end": "179160"
  },
  {
    "start": "176000",
    "end": "176000"
  },
  {
    "text": "know where the root servers are that's the one piece of information it must have and so it will start at the top",
    "start": "179160",
    "end": "184709"
  },
  {
    "text": "query the roots and basically all of the right information that's needed from there can be caught can be got by",
    "start": "184709",
    "end": "190860"
  },
  {
    "text": "querying down through the tree you're probably all familiar with this tool",
    "start": "190860",
    "end": "197280"
  },
  {
    "text": "it's called Digg and it will give you a trace which shows you exactly how the resolution path goes the first step is",
    "start": "197280",
    "end": "204060"
  },
  {
    "text": "we know what the root name servers are and we choose one which on this occasion is M root and we query it for www",
    "start": "204060",
    "end": "211739"
  },
  {
    "text": "re-invent 2017 comm and we get back no I don't have that talk to one of the comm",
    "start": "211739",
    "end": "217739"
  },
  {
    "text": "name servers you must use L arbitrarily when you ask the L root server for WWWE",
    "start": "217739",
    "end": "224610"
  },
  {
    "text": "invent 2017 com regretting that name already and the what you'll get back is",
    "start": "224610",
    "end": "231060"
  },
  {
    "text": "a further set of delegations to say oh that songs on these red 53 servers and so you query those red 53 servers and",
    "start": "231060",
    "end": "237690"
  },
  {
    "text": "you get back an answer and one thing that's interesting to point out here is you also get back the NS records this",
    "start": "237690",
    "end": "243750"
  },
  {
    "text": "happens at every delegation you get the NS set from both the party that's delegating and from the party that's",
    "start": "243750",
    "end": "249450"
  },
  {
    "text": "delegated - I won't go into that more here but it's let it's important later on in the talk it's a useful property so",
    "start": "249450",
    "end": "257130"
  },
  {
    "text": "you want a set of web service we have to create our zone the pink one there and we have to attach it to the tree so what",
    "start": "257130",
    "end": "265560"
  },
  {
    "start": "265000",
    "end": "265000"
  },
  {
    "text": "does red 53 provide in this space well we have zone hosting in particular",
    "start": "265560",
    "end": "271100"
  },
  {
    "text": "we have seventy six pups which are little small data centers around the world and so we are close to all of your",
    "start": "271100",
    "end": "277610"
  },
  {
    "text": "customers pretty much we provide a 100% availability SLA which is relatively",
    "start": "277610",
    "end": "283009"
  },
  {
    "text": "unusual but DNS is that kind of sensitive service that outages are really not acceptable and and so what",
    "start": "283009",
    "end": "291860"
  },
  {
    "text": "the Public DNS service does is allow you to establish your zone and have it hosted online without you doing anything",
    "start": "291860",
    "end": "296930"
  },
  {
    "text": "much so then you want to attach to the tree and the route 53 registrar is there",
    "start": "296930",
    "end": "303350"
  },
  {
    "text": "for that registrar's allow you to book a name and set up a delegation in in whatever the TLD zone is comm in this",
    "start": "303350",
    "end": "309350"
  },
  {
    "text": "case we also have private DNS as a service so if you've ever managed an",
    "start": "309350",
    "end": "315350"
  },
  {
    "text": "on-premises network you probably wanted to set up a whole lot of internal only DNS names that's a common enough",
    "start": "315350",
    "end": "321289"
  },
  {
    "text": "practice and it's common also in ec2 VP C's so what private DNS allows you is basically the ability to do that we also",
    "start": "321289",
    "end": "329120"
  },
  {
    "text": "have a health checking service and traffic management which I'll go into a bit more later and we have one of the",
    "start": "329120",
    "end": "335690"
  },
  {
    "text": "things thinking about DNS on a large scale that you should really be aware of is that everything we do has ap is",
    "start": "335690",
    "end": "342250"
  },
  {
    "text": "everything we do also has command-line tools that call the API so it's really straightforward to automate all of these",
    "start": "342250",
    "end": "348289"
  },
  {
    "text": "processes if you are doing DNS on a large scale and you're still doing it manually it's fine but eh it'll be slow",
    "start": "348289",
    "end": "356659"
  },
  {
    "text": "and more to the point actually you've still got a lot of human error there it's very easy to make mistakes and DNS",
    "start": "356659",
    "end": "362960"
  },
  {
    "text": "outages can be pretty severe so it's better to automate and all of these tools everything we show will have",
    "start": "362960",
    "end": "369010"
  },
  {
    "text": "relatively straightforward automation parts so very quickly we want to",
    "start": "369010",
    "end": "375979"
  },
  {
    "start": "373000",
    "end": "373000"
  },
  {
    "text": "register our domain so we can call the check check domain availability API call",
    "start": "375979",
    "end": "382340"
  },
  {
    "text": "and we get back and available for this domain so we register domain and then you can list operations there and we see",
    "start": "382340",
    "end": "387650"
  },
  {
    "text": "that it's in progress takes about an hour to register a domain the zone was created automatically if you didn't use",
    "start": "387650",
    "end": "394039"
  },
  {
    "start": "391000",
    "end": "391000"
  },
  {
    "text": "read 53's registrar you don't have to you can just pre create the zone and use a different registrar one thing to note",
    "start": "394039",
    "end": "400190"
  },
  {
    "text": "is that every zone has I D which is very important within the API you can have multiple copies of the",
    "start": "400190",
    "end": "406610"
  },
  {
    "text": "same zone so we need an ID to be able to distinguish between them so we create",
    "start": "406610",
    "end": "412490"
  },
  {
    "start": "411000",
    "end": "411000"
  },
  {
    "text": "some records quickly change resource record sets and you're passing it adjacent document there and saying in",
    "start": "412490",
    "end": "418580"
  },
  {
    "text": "that zone ID now an important thing to note here is that there's a status of pending on this so what that says is the",
    "start": "418580",
    "end": "425690"
  },
  {
    "text": "API has accepted your change we validated it's a sensible change and now we're propagating it so it isn't ready",
    "start": "425690",
    "end": "432590"
  },
  {
    "text": "for your use yet and we're given a change ID and what that allows you to do is to come back and query Polus and say",
    "start": "432590",
    "end": "439670"
  },
  {
    "text": "okay what is the status of that change usually within 30 seconds to a minute it",
    "start": "439670",
    "end": "444800"
  },
  {
    "text": "will change to in sync and what that tells you is that all 76 pups are now in sync with your change and no matter",
    "start": "444800",
    "end": "450620"
  },
  {
    "text": "where you query in the world you'll get the right answer what did the JSON",
    "start": "450620",
    "end": "457070"
  },
  {
    "text": "document look like it's an action of create and basically a simple description of the record that we created",
    "start": "457070",
    "end": "463390"
  },
  {
    "text": "so I mentioned DNS inside ec2 you don't necessarily always want to put all your",
    "start": "463390",
    "end": "468890"
  },
  {
    "text": "DNS records in Public DNS if they're private records why would you want to",
    "start": "468890",
    "end": "474320"
  },
  {
    "text": "tell everyone the Internet including every nefarious individual what your DNS structure is so inside ec2 if you need",
    "start": "474320",
    "end": "481790"
  },
  {
    "text": "DNS records to to allow your your services to connect to each other that's no problem when you set up a VPC by",
    "start": "481790",
    "end": "491150"
  },
  {
    "start": "488000",
    "end": "488000"
  },
  {
    "text": "default we automatically enable a DNS resolver for you and the DNS resolver includes host names automatically for",
    "start": "491150",
    "end": "499850"
  },
  {
    "text": "your for all of your instances if you want as I say to create arbitrary order",
    "start": "499850",
    "end": "505490"
  },
  {
    "text": "read 53 private private DNS entries you can do so so basically you call the same",
    "start": "505490",
    "end": "511250"
  },
  {
    "text": "API you say create a zone for me please oh and associate it with this VCC and so",
    "start": "511250",
    "end": "516260"
  },
  {
    "text": "you can create records you can change them all of the same in sync and pending statuses apply so how does private DNS",
    "start": "516260",
    "end": "525110"
  },
  {
    "start": "524000",
    "end": "524000"
  },
  {
    "text": "actually work the ec2 dns resolver classifies queries and it gets a little bit of extra data so when you send a",
    "start": "525110",
    "end": "532190"
  },
  {
    "text": "query from your V PC the ec2 DNS will receive the query along with some",
    "start": "532190",
    "end": "537440"
  },
  {
    "text": "extra metadata such as what VPC are you in and what features have you got enabled and is able to reason on that",
    "start": "537440",
    "end": "543830"
  },
  {
    "text": "basis that this name that you've queried is something that is within a private zone in this VPC so instead of",
    "start": "543830",
    "end": "549740"
  },
  {
    "text": "forwarding the query to the roots and going out and doing full recursion it will just send them to the private T&S",
    "start": "549740",
    "end": "555560"
  },
  {
    "text": "authorities so as a result none of these records are ever visible to anyone except in your V PC so a common enough",
    "start": "555560",
    "end": "563720"
  },
  {
    "text": "problem for people moving to the cloud is to be able we've already built a",
    "start": "563720",
    "end": "569270"
  },
  {
    "text": "large infrastructure on premises and you want to move into V pcs but you can't do",
    "start": "569270",
    "end": "574279"
  },
  {
    "text": "that overnight so typically what people do is to set up a VP C and direct connect your on-premises network to the",
    "start": "574279",
    "end": "581779"
  },
  {
    "text": "VP C and what that allows you to do is you've now got IP connectivity between instances and your hosts on-premise and",
    "start": "581779",
    "end": "590270"
  },
  {
    "text": "you may have a substantial number of services on both sides so what you now need to be able to do is to do dns",
    "start": "590270",
    "end": "596000"
  },
  {
    "text": "resolution across so the problem there is that well initially you just say okay",
    "start": "596000",
    "end": "602240"
  },
  {
    "text": "well I'll just forward queries between the two the only difficulty with that is that the ec2 DNS resolver is not a real",
    "start": "602240",
    "end": "608420"
  },
  {
    "text": "instance inside of e PC and it isn't routable across Direct Connect or VPNs",
    "start": "608420",
    "end": "614860"
  },
  {
    "text": "as it stands today we have the most standard solution to this problem is to",
    "start": "614860",
    "end": "621050"
  },
  {
    "text": "set up a couple of instances inside the V PC to do forwarding so they can obviously connect to AC to DNS directly",
    "start": "621050",
    "end": "627140"
  },
  {
    "text": "and you use them as kind of a bridge and we recently wrote a white paper on this",
    "start": "627140",
    "end": "632630"
  },
  {
    "text": "topic so if you are using a hybrid cloud and you're using you're trying to solve ec2 DNS or that an integrated DNS",
    "start": "632630",
    "end": "639380"
  },
  {
    "text": "between the two it's worth having a read of the paper so this is kind of the",
    "start": "639380",
    "end": "644690"
  },
  {
    "start": "643000",
    "end": "643000"
  },
  {
    "text": "picture I'm talking about you have on-premises clients using probably Active Directory or bind or",
    "start": "644690",
    "end": "650870"
  },
  {
    "text": "something on-premises and then you have your ec2 instances using ec2 DNS but what we've done instead here is we've",
    "start": "650870",
    "end": "656779"
  },
  {
    "text": "set up this highlighted forwarding resolver and so the ec2 instance is now talked to it directly and it has rules",
    "start": "656779",
    "end": "663260"
  },
  {
    "text": "to say these types of names all go to Amazon provided DNS the ec2 DNS",
    "start": "663260",
    "end": "668499"
  },
  {
    "text": "and all other names or some other names go to the on premises and so you can just set up rules to solve that equally",
    "start": "668499",
    "end": "675399"
  },
  {
    "text": "the unpromising is they are the on-premises dns resolver has similar forwarding rules that you just set all",
    "start": "675399",
    "end": "681099"
  },
  {
    "text": "of your ec2 names send them over to the forwarding dns resolver and at that point you pretty much have a single view of dns one of the things",
    "start": "681099",
    "end": "689049"
  },
  {
    "text": "that's brought up in the white paper that's worth noting is there is a limit on the number of queries that a single",
    "start": "689049",
    "end": "695349"
  },
  {
    "text": "instance can send to ec2 DNS and that is about a thousand per second which for a",
    "start": "695349",
    "end": "701109"
  },
  {
    "text": "small V PC is not really an issue but it is something to think about if your V PC is getting large or if for some reason",
    "start": "701109",
    "end": "706959"
  },
  {
    "text": "you make a really large number of DNS queries so what are the new features in",
    "start": "706959",
    "end": "712329"
  },
  {
    "text": "red 53 in 2017 one that I'll talk about in a bit more depth later is geo",
    "start": "712329",
    "end": "717939"
  },
  {
    "start": "715000",
    "end": "715000"
  },
  {
    "text": "proximity so this is a routing type to choose between different endpoints if",
    "start": "717939",
    "end": "724379"
  },
  {
    "text": "you're a public route 53 user we've launched query logging recently so if",
    "start": "724379",
    "end": "730509"
  },
  {
    "text": "you want to know who is querying your zone all around the world you can get your query logs back this is usually",
    "start": "730509",
    "end": "736659"
  },
  {
    "text": "useful for example in security processes maybe you want to know that people are doing large numbers of query to get",
    "start": "736659",
    "end": "743139"
  },
  {
    "text": "queries against your zone trying to find out what names are in there or maybe you are very careful when you go to delete",
    "start": "743139",
    "end": "749319"
  },
  {
    "text": "records to not create iota jiz the nice thing to do is to say well has anyone queried this record in the last week so",
    "start": "749319",
    "end": "756149"
  },
  {
    "text": "a further one is we use weighted round robin or we offer weighted round robin DNS which is essentially like a",
    "start": "756149",
    "end": "762819"
  },
  {
    "text": "poor-man's load bouncer and up to now you have had to use had to always return",
    "start": "762819",
    "end": "768399"
  },
  {
    "text": "a single record at a time but now we have launched multi rec multi record answers so you might have 10 or you",
    "start": "768399",
    "end": "775299"
  },
  {
    "text": "might have a hundred and entries in weighted round robin and you may it may not suit you to only return one answer",
    "start": "775299",
    "end": "781119"
  },
  {
    "text": "you can return ten answers and the benefit of that is that the dns resolver that caches it will rotate through them",
    "start": "781119",
    "end": "787329"
  },
  {
    "text": "in most cases and you can potentially in some situations get a better load bounds and another new feature we have is the",
    "start": "787329",
    "end": "796779"
  },
  {
    "text": "CA record support so CIA record supports is the CIA record at",
    "start": "796779",
    "end": "803059"
  },
  {
    "text": "least is for certificate authorities you can essentially create a record that says no certificate authorities should",
    "start": "803059",
    "end": "808939"
  },
  {
    "text": "create certificates from mine my domain except these ones and you're basically",
    "start": "808939",
    "end": "813980"
  },
  {
    "text": "present preventing someone else from impersonating you there finally there's a service limits API so if you've used",
    "start": "813980",
    "end": "820730"
  },
  {
    "text": "red 53 or perhaps any AWS API there's always some kind of limits to say you",
    "start": "820730",
    "end": "825859"
  },
  {
    "text": "can only have this many zones by default or this many records in your zones and this allows you to automatically query",
    "start": "825859",
    "end": "831649"
  },
  {
    "text": "this and find out how much of your limits you're using finally there's a a",
    "start": "831649",
    "end": "838389"
  },
  {
    "start": "836000",
    "end": "836000"
  },
  {
    "text": "beta feature we're going to talk about here so you can all feel very glad you came and so this is something that we've",
    "start": "838389",
    "end": "845839"
  },
  {
    "text": "not actually fully released yet but we're interested to get your feedback on",
    "start": "845839",
    "end": "850879"
  },
  {
    "text": "it so as it stands the I mentioned before that the DNS service itself has a",
    "start": "850879",
    "end": "857029"
  },
  {
    "text": "100% SLA so we we say that we will always answer your customers queries and",
    "start": "857029",
    "end": "863059"
  },
  {
    "text": "we use in order to do that we have this really distributed pub network around the world however we have the change",
    "start": "863059",
    "end": "870499"
  },
  {
    "text": "mechanism and API and the propagation mechanism are more centralized so they're built in u.s. East one and",
    "start": "870499",
    "end": "876939"
  },
  {
    "text": "occasionally you can have an issue where there's an issue with that and we will perhaps delay propagation it doesn't",
    "start": "876939",
    "end": "883160"
  },
  {
    "text": "affect the records actually resolving but the propagation is a bit slower for most customers that's not really that",
    "start": "883160",
    "end": "889100"
  },
  {
    "text": "big of a deal but there are actually a few customers for whom that's a big deal so I'll give you an example of ELB when",
    "start": "889100",
    "end": "895100"
  },
  {
    "text": "you ask for an EOB they one of their one part of their workflow is they have to create an DNS record for it and they",
    "start": "895100",
    "end": "901970"
  },
  {
    "text": "need to know that it's propagated before they will give it back to you so if we have a delay in propagation ELB",
    "start": "901970",
    "end": "909079"
  },
  {
    "text": "has a delay in creating elby's and that's unacceptable to them so for them and for other customers who use who have",
    "start": "909079",
    "end": "916009"
  },
  {
    "text": "that kind of synchronous workflow we've created a second API which is basically",
    "start": "916009",
    "end": "921289"
  },
  {
    "text": "a second largely independent propagation path there's some trade-offs in this",
    "start": "921289",
    "end": "927769"
  },
  {
    "text": "that I'll go into a minute in a minute and we'll also show a mule soft will explain how they've used it",
    "start": "927769",
    "end": "933250"
  },
  {
    "text": "so this is the current set up you have an API client it calls a US East one API",
    "start": "933250",
    "end": "938960"
  },
  {
    "start": "934000",
    "end": "934000"
  },
  {
    "text": "it's one API for the world and that propagates so so initially that will",
    "start": "938960",
    "end": "944060"
  },
  {
    "text": "return your change as pending will propagate it out to the world and then the API will switch to start saying that",
    "start": "944060",
    "end": "950900"
  },
  {
    "text": "it's in sync and what we're adding here is a second API and so now if you'll",
    "start": "950900",
    "end": "958880"
  },
  {
    "text": "notice that there are no lines that go between the US east one API and the EU west one API and the reason for that is",
    "start": "958880",
    "end": "965810"
  },
  {
    "text": "that we want to keep them very very separate the whole point of this of this exercise is to make sure that there are",
    "start": "965810",
    "end": "972200"
  },
  {
    "text": "almost no events that could impact on both so if we start shuffling data back and forward between them the possibility",
    "start": "972200",
    "end": "978200"
  },
  {
    "text": "for some contagion starts to arise so as a customer using this model you",
    "start": "978200",
    "end": "983720"
  },
  {
    "text": "essentially have two unsynchronized copies of your zone now what you",
    "start": "983720",
    "end": "989060"
  },
  {
    "text": "actually do in practice or what we recommend you do is you write all your changes to both sides and so you're",
    "start": "989060",
    "end": "996530"
  },
  {
    "text": "essentially maintaining two copies of the zone the when you make a change you",
    "start": "996530",
    "end": "1002050"
  },
  {
    "text": "include a version number on it and we propagate both of those data sets down onto the pups and so the pups look at",
    "start": "1002050",
    "end": "1010840"
  },
  {
    "text": "both sets and coalesce them into one view and where there is a distinction",
    "start": "1010840",
    "end": "1016180"
  },
  {
    "text": "between the u.s. East one API is answer and the EU west one API answer we choose",
    "start": "1016180",
    "end": "1021220"
  },
  {
    "text": "the highest version number so you're in control over which one will win so I'll",
    "start": "1021220",
    "end": "1028540"
  },
  {
    "text": "invite you on now to come up and explain their use case of red 53 Thank You Gavin",
    "start": "1028540",
    "end": "1041689"
  },
  {
    "text": "hey I'm shiny I am a senior software from your soft I'm going to talk about",
    "start": "1041690",
    "end": "1048030"
  },
  {
    "text": "how music to utilize the multi region of certificate services which is a property",
    "start": "1048030",
    "end": "1054410"
  },
  {
    "text": "propagation sensitivity user case I'm going to give you a brief introduction",
    "start": "1054410",
    "end": "1059910"
  },
  {
    "text": "on the architecture of our cloud platform first then show you how you use",
    "start": "1059910",
    "end": "1065240"
  },
  {
    "text": "registry service and then finally how the multi-region multitude with service",
    "start": "1065240",
    "end": "1070860"
  },
  {
    "text": "improves the resiliency of our cloud platform so first a little overview on",
    "start": "1070860",
    "end": "1076140"
  },
  {
    "text": "our company so we have been helping companies to build in a scale and application network of apps data and",
    "start": "1076140",
    "end": "1083520"
  },
  {
    "text": "devices through AP ice and integration we have been supporting customers in",
    "start": "1083520",
    "end": "1089250"
  },
  {
    "text": "over 60 countries so what do we offer to our customer so we offer a multi-tenant",
    "start": "1089250",
    "end": "1095280"
  },
  {
    "text": "integration platform for api vests and integration which provides high scalability and availability so our goal",
    "start": "1095280",
    "end": "1103500"
  },
  {
    "text": "is our customer can focus on their needs in their solutions in integration and we",
    "start": "1103500",
    "end": "1109710"
  },
  {
    "text": "take care of their infrastructure problem so we offer both premise and the public cloud solutions so today I'm",
    "start": "1109710",
    "end": "1117000"
  },
  {
    "text": "going to focus on the public cloud solutions so which is built on top of a",
    "start": "1117000",
    "end": "1122610"
  },
  {
    "start": "1121000",
    "end": "1121000"
  },
  {
    "text": "lot of interview services we provision instances in 82 for our custom",
    "start": "1122610",
    "end": "1127680"
  },
  {
    "text": "applications we're using sqs for messaging s3 for data storage and so",
    "start": "1127680",
    "end": "1133050"
  },
  {
    "text": "I'll just give you a rough idea on the scale of our platform we host around",
    "start": "1133050",
    "end": "1139820"
  },
  {
    "text": "25,000 we actually more than 25,000 custom applications in AWS cloud and",
    "start": "1139820",
    "end": "1146510"
  },
  {
    "text": "over 12 regions and we do around 9,000",
    "start": "1146510",
    "end": "1152130"
  },
  {
    "text": "like ec2 instance provision and termination daily and for each instance we also do a lot of this we DNS records",
    "start": "1152130",
    "end": "1160590"
  },
  {
    "text": "update and we try to create DNS records for each instance of our real applications so let's take a look at the",
    "start": "1160590",
    "end": "1172410"
  },
  {
    "text": "actual texture of our platform those are the mule applications running in the cloud which is a debris cloud",
    "start": "1172410",
    "end": "1178280"
  },
  {
    "text": "doing integrations for our customer we our any point platform provides a",
    "start": "1178280",
    "end": "1184440"
  },
  {
    "text": "manager Management Center which is a part of our customer to deploy applications into the cloud and we also",
    "start": "1184440",
    "end": "1192540"
  },
  {
    "text": "have a we have a lot of load balancers which was the entry point for those new applications so customer can hit their",
    "start": "1192540",
    "end": "1199770"
  },
  {
    "text": "applications through our load balancer or directly to the workers to those new applications so where are the DNS",
    "start": "1199770",
    "end": "1206640"
  },
  {
    "text": "operations in this architecture so the any point platform management Center is",
    "start": "1206640",
    "end": "1212610"
  },
  {
    "text": "responsible for creating all the DNS records for all those new applications and our load balancer and our customers",
    "start": "1212610",
    "end": "1220380"
  },
  {
    "text": "the consumer of those DNS records just",
    "start": "1220380",
    "end": "1225480"
  },
  {
    "text": "for example our customer can use the management center to create a new",
    "start": "1225480",
    "end": "1231600"
  },
  {
    "text": "application name the app it automatically gives a app table I owe domain which is routed to our load",
    "start": "1231600",
    "end": "1239340"
  },
  {
    "text": "balancer and our load balancer practices the request to the actual new",
    "start": "1239340",
    "end": "1245120"
  },
  {
    "text": "application which is rinse on a ec2 instance it has a another domain is mute",
    "start": "1245120",
    "end": "1251400"
  },
  {
    "text": "- worker - at the cloud diode so how do",
    "start": "1251400",
    "end": "1257550"
  },
  {
    "text": "we apply those DNS configuration we have a deployment transaction here is a",
    "start": "1257550",
    "end": "1266070"
  },
  {
    "text": "simplified flow chart of our departmental action we first provision a",
    "start": "1266070",
    "end": "1271200"
  },
  {
    "text": "instance in if you - we set up a lot of",
    "start": "1271200",
    "end": "1276600"
  },
  {
    "text": "meta info set up health monitoring we then launched a new application onto the",
    "start": "1276600",
    "end": "1282060"
  },
  {
    "text": "ec2 instance we run the new application and we make sure the app is up and running then we apply the network",
    "start": "1282060",
    "end": "1292080"
  },
  {
    "text": "configurations like apply the static IP on to the instance or apply the DNS configuration on the instance and",
    "start": "1292080",
    "end": "1298470"
  },
  {
    "text": "finally we verify it's working then we hand the application back to our customer for user testing or production",
    "start": "1298470",
    "end": "1304110"
  },
  {
    "text": "working so what exactly do we with the DNS configuration staff so we",
    "start": "1304110",
    "end": "1311669"
  },
  {
    "start": "1310000",
    "end": "1310000"
  },
  {
    "text": "have a DNS record we want to make sure it's somewhere is the domain is mail app",
    "start": "1311669",
    "end": "1317940"
  },
  {
    "text": "new worker app dr. up dial it is mapped to some IP address we make a change",
    "start": "1317940",
    "end": "1324720"
  },
  {
    "text": "resource records request to graphically to API then the Java has mentioned the",
    "start": "1324720",
    "end": "1329909"
  },
  {
    "text": "traffic to the API would then propagates the DNS record to all its agile",
    "start": "1329909",
    "end": "1335009"
  },
  {
    "text": "occasions then which make made them available to the rest of the world as",
    "start": "1335009",
    "end": "1340769"
  },
  {
    "text": "you can see the route 53 is very important to our platform so without the low 53 API services there",
    "start": "1340769",
    "end": "1348269"
  },
  {
    "text": "will be a challenger for us to apply all the DNS configurations for our our applications like properly so what can",
    "start": "1348269",
    "end": "1357240"
  },
  {
    "text": "let's see a scam I had mentioned likes it we'll see what can go wrong in this graph just basically even if it's a",
    "start": "1357240",
    "end": "1364500"
  },
  {
    "text": "short period of like an availability of the service it can be a huge impact on our service to our customer",
    "start": "1364500",
    "end": "1370799"
  },
  {
    "text": "so there are generally two kinds of failure mode first is API could be",
    "start": "1370799",
    "end": "1376649"
  },
  {
    "start": "1373000",
    "end": "1373000"
  },
  {
    "text": "unreachable or the DNS record the DNS records publication could be delayed so",
    "start": "1376649",
    "end": "1385159"
  },
  {
    "text": "the impact on us is our application cannot be deployed properly so have to",
    "start": "1385159",
    "end": "1390600"
  },
  {
    "text": "architect to tell our custom to do again oh the new application is not resolvable",
    "start": "1390600",
    "end": "1396480"
  },
  {
    "text": "so our customer cannot use their applications in the cloud so which we",
    "start": "1396480",
    "end": "1402120"
  },
  {
    "text": "don't want that to happen so instead of",
    "start": "1402120",
    "end": "1408090"
  },
  {
    "start": "1407000",
    "end": "1407000"
  },
  {
    "text": "the single poly point of failure in this graph the raffle story server in u.s. is the ref is the office we team is",
    "start": "1408090",
    "end": "1416279"
  },
  {
    "text": "providing a another API server in Ireland which also takes some class and",
    "start": "1416279",
    "end": "1422190"
  },
  {
    "text": "do the propagation and has some logic to figure out which DNS record to serve",
    "start": "1422190",
    "end": "1427340"
  },
  {
    "text": "this is this is a service they have been using and we are the first external",
    "start": "1427340",
    "end": "1433200"
  },
  {
    "text": "custom to try this out due to the due to our sensitivity on the propagation",
    "start": "1433200",
    "end": "1440179"
  },
  {
    "start": "1440000",
    "end": "1440000"
  },
  {
    "text": "so as mentioned all the features of this auto trader under multi-region traffic",
    "start": "1440870",
    "end": "1448039"
  },
  {
    "text": "services so there are two of them for us firstly the failover which is not really",
    "start": "1448039",
    "end": "1453500"
  },
  {
    "text": "recommended because that will result to two different sets of DNS records in two",
    "start": "1453500",
    "end": "1460730"
  },
  {
    "text": "servers and it's hard to maintain in a long run although it's simple to implement but we didn't use that load we",
    "start": "1460730",
    "end": "1467090"
  },
  {
    "text": "chose to use a redundantly as Gemma has mentioned we apply the identical request",
    "start": "1467090",
    "end": "1474080"
  },
  {
    "text": "we send the identical request to both servers and trial try our best to make",
    "start": "1474080",
    "end": "1479299"
  },
  {
    "text": "sure both servers has identical set of the us records so here is a the",
    "start": "1479299",
    "end": "1488450"
  },
  {
    "text": "implementation of our use of the multi-regional fits reservist so there",
    "start": "1488450",
    "end": "1493850"
  },
  {
    "text": "are two office to API servers were in u.s. East and one in us we during the",
    "start": "1493850",
    "end": "1503210"
  },
  {
    "text": "deployment there during one step in the deployment we send the request to both",
    "start": "1503210",
    "end": "1508760"
  },
  {
    "text": "servers and to insert either to insert a new DNS record for our application or",
    "start": "1508760",
    "end": "1514250"
  },
  {
    "text": "delete a record of your application which is being shut down if both requests are failed for some",
    "start": "1514250",
    "end": "1522919"
  },
  {
    "text": "reason we which has never happened so far we will have no option but to fail our deployed application deployment and",
    "start": "1522919",
    "end": "1530090"
  },
  {
    "text": "to tell custom to do it again if one of the request is successful we can",
    "start": "1530090",
    "end": "1535970"
  },
  {
    "text": "continue our app deployment and verified netbooks integration and have the",
    "start": "1535970",
    "end": "1541340"
  },
  {
    "text": "application back to our customer then the customer can start using their app and if they're the one who has failed we",
    "start": "1541340",
    "end": "1549049"
  },
  {
    "text": "we notify our internal synchronizer which will retry to reapply the DNS",
    "start": "1549049",
    "end": "1555169"
  },
  {
    "text": "record to one of the server in a later time asynchronously if there is a",
    "start": "1555169",
    "end": "1560929"
  },
  {
    "text": "deletion fail fail fail so we have a sweeper we will try to go through all the records",
    "start": "1560929",
    "end": "1566779"
  },
  {
    "text": "in both servers and try to remove any garbage records",
    "start": "1566779",
    "end": "1572770"
  },
  {
    "text": "it has been working great so far we we are we are with this we are able to",
    "start": "1572770",
    "end": "1579010"
  },
  {
    "start": "1574000",
    "end": "1574000"
  },
  {
    "text": "avoid the single point of failure it is much less likely to like to hit like to",
    "start": "1579010",
    "end": "1585280"
  },
  {
    "text": "like to have trouble to talk with delphine to see service so far has we",
    "start": "1585280",
    "end": "1590650"
  },
  {
    "text": "have never encountered any problem to apply those DNS records to our DNS records to our new applications there is",
    "start": "1590650",
    "end": "1599620"
  },
  {
    "text": "there dis there is something to to think about as on the road back plan so the new multi region roughly to service is",
    "start": "1599620",
    "end": "1607060"
  },
  {
    "text": "living on a newer version of API which is backwards compatible but lawful was",
    "start": "1607060",
    "end": "1612610"
  },
  {
    "text": "compatible meaning we need to prepare a complicated rollback plan in case",
    "start": "1612610",
    "end": "1618400"
  },
  {
    "text": "something goes around we want to switch back to the single region roughly to service there is to a small chance that",
    "start": "1618400",
    "end": "1627550"
  },
  {
    "text": "the DNS update could be delayed if the roughest post office new servers are",
    "start": "1627550",
    "end": "1632560"
  },
  {
    "text": "having some issues in visibility or and the publication respectively and",
    "start": "1632560",
    "end": "1637900"
  },
  {
    "text": "alternatively but it is recoverable by our by our implementation so as a",
    "start": "1637900",
    "end": "1645970"
  },
  {
    "text": "conclusion I will say though the multi-regional service has been really helpful we are able to avoid any",
    "start": "1645970",
    "end": "1652930"
  },
  {
    "start": "1646000",
    "end": "1646000"
  },
  {
    "text": "potential disaster and provide even better services to our customer with that I'll hand back state to government",
    "start": "1652930",
    "end": "1661650"
  },
  {
    "text": "Thank You chuan it's really interesting to get your point of view on it having having used this in production and so",
    "start": "1662220",
    "end": "1667900"
  },
  {
    "text": "the just as a recap on this so we've added a second API to give you a second",
    "start": "1667900",
    "end": "1674770"
  },
  {
    "start": "1672000",
    "end": "1672000"
  },
  {
    "text": "propagation path and to remove as as once as a single point of failure when best practice is very much to use both",
    "start": "1674770",
    "end": "1682210"
  },
  {
    "text": "api's and route 53 is quite particular about of its availability and one of the",
    "start": "1682210",
    "end": "1689110"
  },
  {
    "text": "things that we've learned in architecting services over the years is to try to always maintain constant work",
    "start": "1689110",
    "end": "1694180"
  },
  {
    "text": "so if you can envision a situation where this event might happen without event might happen what you want to be doing",
    "start": "1694180",
    "end": "1700180"
  },
  {
    "text": "is doing the full work all the time so that what you don't want is an occasional event where",
    "start": "1700180",
    "end": "1706300"
  },
  {
    "text": "suddenly you say oh well I'll switch to this endpoint and ramp the workload up because that's going to hit you with a",
    "start": "1706300",
    "end": "1712210"
  },
  {
    "text": "surprise at some point when it finally happens you'll hit a throttling limit or find some bottleneck you've never",
    "start": "1712210",
    "end": "1717340"
  },
  {
    "text": "discovered before so the the idea here is to always be doing the full level of work on both api's and I say it's not",
    "start": "1717340",
    "end": "1724420"
  },
  {
    "text": "currently released yet it's a private beta this is not to say that we're not confident in it I mean ELB and/or DSR",
    "start": "1724420",
    "end": "1730300"
  },
  {
    "text": "both using it so we're very confident with it and I guess the the beta status",
    "start": "1730300",
    "end": "1735550"
  },
  {
    "text": "is where we're not 100% sure that it's quite and polished enough in terms of",
    "start": "1735550",
    "end": "1740920"
  },
  {
    "text": "API and interfaces for customers to use and we have no console support for example and that being said if you are",
    "start": "1740920",
    "end": "1747880"
  },
  {
    "text": "decide if you have the kind of use case where this kind of synchronous and you'd be waiting on this propagation is",
    "start": "1747880",
    "end": "1753820"
  },
  {
    "text": "important you're absolutely welcome to talk to us we'll be here after this talk or in general and we would love to hear",
    "start": "1753820",
    "end": "1759670"
  },
  {
    "text": "from you and if you would like to use it we totally set up a meeting and discussed your use case so let's talk a",
    "start": "1759670",
    "end": "1767590"
  },
  {
    "text": "little bit about red 53s traffic management so DNS itself as I'm sure",
    "start": "1767590",
    "end": "1773350"
  },
  {
    "start": "1771000",
    "end": "1771000"
  },
  {
    "text": "you're aware is an abstraction layer we're doing translation of names into typically IPs sometimes mail mail",
    "start": "1773350",
    "end": "1778660"
  },
  {
    "text": "servers or the things and so there's an opportunity here to do something smarter than just giving static answers back and",
    "start": "1778660",
    "end": "1784980"
  },
  {
    "text": "so we'll look at some specific customer use cases that we've solved itself doing this and that are available to you and",
    "start": "1784980",
    "end": "1791290"
  },
  {
    "start": "1790000",
    "end": "1790000"
  },
  {
    "text": "so many years ago an online bookshop you may have heard of days to run things on",
    "start": "1791290",
    "end": "1797130"
  },
  {
    "text": "multiple data centers and the first question was well how do i balance load between these data centers I have load",
    "start": "1797130",
    "end": "1803290"
  },
  {
    "text": "bouncers in each data center but I need something outside to actually direct the traffic to each one so DNS was used for",
    "start": "1803290",
    "end": "1810550"
  },
  {
    "text": "that and we used weighted round robin and essentially what that is is we have all the DNS resolvers talking to DNS and",
    "start": "1810550",
    "end": "1817480"
  },
  {
    "text": "we direct them to one of the three or 10 or 200 endpoints and we can associate",
    "start": "1817480",
    "end": "1823870"
  },
  {
    "text": "weights with each one so that our authoritative DNS will hand out maybe 30% of one answer and 40% of another",
    "start": "1823870",
    "end": "1832770"
  },
  {
    "start": "1833000",
    "end": "1833000"
  },
  {
    "text": "related to that and again something that Amazon was looking for was the ability to",
    "start": "1834090",
    "end": "1839650"
  },
  {
    "text": "suppose something terrible happens in one of these data centers do you want to spend half an hour waiting for an",
    "start": "1839650",
    "end": "1846000"
  },
  {
    "text": "operator to join a conference call and make some changes in DNS no ideally not",
    "start": "1846000",
    "end": "1851710"
  },
  {
    "text": "please so we have an automated health checking facility and what that will do is pull all of the endpoints and maybe",
    "start": "1851710",
    "end": "1860530"
  },
  {
    "text": "it will make a guess against slash or against slash status or something like that and the answer must be somewhere",
    "start": "1860530",
    "end": "1869470"
  },
  {
    "text": "between the status code must be between 200 and 400 and if it's outside of that if you return to 500 or a 400 will mark",
    "start": "1869470",
    "end": "1877750"
  },
  {
    "text": "that as unhealthy and take it out of service and so essentially that's what's happened here you see the top endpoint has something",
    "start": "1877750",
    "end": "1883570"
  },
  {
    "text": "terrible happening in it apparently and it has temporarily got a weight of 0 and once it recovers we'll bring it back",
    "start": "1883570",
    "end": "1888970"
  },
  {
    "text": "into service again but in the event that this happens where you have multiple endpoints one of them fails you can",
    "start": "1888970",
    "end": "1894700"
  },
  {
    "text": "recover within if you have the TTL set reasonably low on this you can recover within two minutes so a kind of related",
    "start": "1894700",
    "end": "1904030"
  },
  {
    "start": "1902000",
    "end": "1902000"
  },
  {
    "text": "setup and we have a failover routing type in in ideal circumstances you do",
    "start": "1904030",
    "end": "1910030"
  },
  {
    "text": "want to run on a large scale with like multiple active endpoints all the time so that you're not kind of running a",
    "start": "1910030",
    "end": "1915790"
  },
  {
    "text": "cold standby but that isn't always possible so for example in some",
    "start": "1915790",
    "end": "1921640"
  },
  {
    "text": "situations where you just have a master and a cult standby we can deal with that this is the kind of setup and a typical",
    "start": "1921640",
    "end": "1928360"
  },
  {
    "text": "setup maybe maybe the secondary is a full-fledged service that can run or maybe it's like a read-only copy so it",
    "start": "1928360",
    "end": "1935680"
  },
  {
    "text": "will take over the customers will get a degraded but still useful service in the",
    "start": "1935680",
    "end": "1940720"
  },
  {
    "text": "meantime or maybe even just the second one is like an s3 book at website with a gun phishing page that says we'll be",
    "start": "1940720",
    "end": "1947590"
  },
  {
    "text": "back shortly but it's better than a failure so some things happen to the",
    "start": "1947590",
    "end": "1953710"
  },
  {
    "text": "primary now all traffic will shift off the primary or all DNS answers will shift off the primary to the standby and",
    "start": "1953710",
    "end": "1960070"
  },
  {
    "text": "typically customers will follow with it so very important in building Web",
    "start": "1960070",
    "end": "1966130"
  },
  {
    "text": "Services I'm sure you all know is latency and a common setup these days with so many cloud regions particularly",
    "start": "1966130",
    "end": "1972160"
  },
  {
    "text": "in AWS is how about I build my service in ten different regions and then that will",
    "start": "1972160",
    "end": "1978660"
  },
  {
    "text": "handle the latency right and the question is well how do you actually get your customers to go to the right region so what AWS is doing is keeping track of",
    "start": "1978660",
    "end": "1986870"
  },
  {
    "text": "we instrument a lot of Amazon's big web properties and so we actually have data",
    "start": "1986870",
    "end": "1993210"
  },
  {
    "text": "on all of the IPS in the world and what their latency is to the different AWS",
    "start": "1993210",
    "end": "1998430"
  },
  {
    "text": "regions and this allows us to on the data plane as the query comes in look at",
    "start": "1998430",
    "end": "2003500"
  },
  {
    "text": "the IP address that it's coming from and say that region is the quickest give them back that region so the picture is",
    "start": "2003500",
    "end": "2011480"
  },
  {
    "start": "2010000",
    "end": "2010000"
  },
  {
    "text": "something like this you may say well we have some people in the Far East near Tokyo we have a lot of people in the US",
    "start": "2011480",
    "end": "2017960"
  },
  {
    "text": "with some people in South America and some people in Australia so we'll build it like this and you set it up you basically say here's where am i and",
    "start": "2017960",
    "end": "2024500"
  },
  {
    "text": "here's where my endpoints are please just do it and we will look after the rest so what if your endpoints are not",
    "start": "2024500",
    "end": "2033980"
  },
  {
    "start": "2031000",
    "end": "2031000"
  },
  {
    "text": "actually an ec2 maybe you have your own data centers now that database is very",
    "start": "2033980",
    "end": "2038990"
  },
  {
    "text": "much aimed at ec2 regions so we don't really have data on every pair of IP",
    "start": "2038990",
    "end": "2044120"
  },
  {
    "text": "addresses in the world so you may want to have a look at geo proximity instead",
    "start": "2044120",
    "end": "2049220"
  },
  {
    "text": "this is the recently released one another thing that's kind of useful is to be able to get a little bit more flexibility in how the traffic is moved",
    "start": "2049220",
    "end": "2055730"
  },
  {
    "text": "around and this also provides that so the typical case what we're actually doing here is we have locations map",
    "start": "2055730",
    "end": "2063290"
  },
  {
    "text": "locations for the IP addresses and also for for your services so you picture a",
    "start": "2063290",
    "end": "2068870"
  },
  {
    "text": "situation where you've got an endpoint on the East Coast and an endpoint on the west coast and if you set up geo",
    "start": "2068870",
    "end": "2074210"
  },
  {
    "text": "proximity by default what will happen is the customers will be given the answer that's closest in distance to them that",
    "start": "2074210",
    "end": "2080929"
  },
  {
    "text": "isn't necessarily the closest in latency but it's not a terrible proxy for us and",
    "start": "2080929",
    "end": "2085940"
  },
  {
    "text": "so what you see here is everyone let west of that line will go to the",
    "start": "2085940",
    "end": "2091790"
  },
  {
    "text": "West Coast endpoint and everyone east of that line will go to the east coast endpoint and one of the things that",
    "start": "2091790",
    "end": "2098090"
  },
  {
    "text": "you'll notice looking at that picture is that the East Coast endpoint Israel is loaded more than the west coast endpoint",
    "start": "2098090",
    "end": "2103430"
  },
  {
    "text": "and that may or may not be a problem but if it is a problem you can address that here so I set a",
    "start": "2103430",
    "end": "2109320"
  },
  {
    "text": "bias on the west coast and point and what that's essentially doing is skewing the dead skewing the distance",
    "start": "2109320",
    "end": "2115470"
  },
  {
    "text": "calculation somewhat and essentially attracting more traffic to the west coast and now we've evened out our",
    "start": "2115470",
    "end": "2120869"
  },
  {
    "text": "traffic load so geo proximity gives you a bit more flexibility to maybe bend the",
    "start": "2120869",
    "end": "2127349"
  },
  {
    "text": "the pure latency rules to solve load problems another very common requirement",
    "start": "2127349",
    "end": "2136470"
  },
  {
    "start": "2134000",
    "end": "2134000"
  },
  {
    "text": "in DNS is to be able to say okay well I have different end points with different languages or different end points with",
    "start": "2136470",
    "end": "2141960"
  },
  {
    "text": "different content typically depending on where the customer is so geolocation offers you the ability to say based on",
    "start": "2141960",
    "end": "2149460"
  },
  {
    "text": "the continent the customers are or the country or within the US the even the state at which end point they will get",
    "start": "2149460",
    "end": "2156240"
  },
  {
    "text": "back so a typical picture is something like this you have a policy for the North America policy for South America a",
    "start": "2156240",
    "end": "2162330"
  },
  {
    "text": "policy for Europe and then a blanket policy that covers everyone else so I've",
    "start": "2162330",
    "end": "2167700"
  },
  {
    "start": "2167000",
    "end": "2167000"
  },
  {
    "text": "talked a lot about these kind of specific policies and it's very common to use a number of them together so you",
    "start": "2167700",
    "end": "2175080"
  },
  {
    "text": "would frequently say okay well I've got I want my website running I wanted low latency so I'll use lb or I want to",
    "start": "2175080",
    "end": "2181680"
  },
  {
    "text": "maintain health so I'll use health checks and it's multiple endpoints so I'll use way to round-robin as well and",
    "start": "2181680",
    "end": "2187619"
  },
  {
    "text": "it can become a little bit difficult in terms of a flat zone file layout to actually reason about what's going on",
    "start": "2187619",
    "end": "2193170"
  },
  {
    "text": "things can get a little bit complicated and the other thing is that when you have a complex policy like that you may",
    "start": "2193170",
    "end": "2199710"
  },
  {
    "text": "need to make multiple changes in one step and you don't want to go through some weird transition mode",
    "start": "2199710",
    "end": "2204930"
  },
  {
    "text": "so you want to be able to make atomic changes with two or three or four changes at once and finally if you're an",
    "start": "2204930",
    "end": "2212369"
  },
  {
    "text": "operator on a fairly big DNS service you should always have a rollback plan just",
    "start": "2212369",
    "end": "2218040"
  },
  {
    "text": "on the off-chance it doesn't do exactly what you thought you want to be able to rollback rapidly so for all of these",
    "start": "2218040",
    "end": "2223560"
  },
  {
    "text": "with all of this feedback we built read 50 trees traffic flow UI and api so this",
    "start": "2223560",
    "end": "2230369"
  },
  {
    "text": "is an example of the read 53 traffic flow UI and so what you can see here is this kind of like a logical picture of a",
    "start": "2230369",
    "end": "2236430"
  },
  {
    "text": "weighted round robin rule in this case the two endpoints one of them is an e one of them is just an a record they",
    "start": "2236430",
    "end": "2242610"
  },
  {
    "text": "don't have to be the same and to just show the kind of level of complexity we",
    "start": "2242610",
    "end": "2247740"
  },
  {
    "text": "ought we also have health checking set on those and if you want to see just the",
    "start": "2247740",
    "end": "2253620"
  },
  {
    "text": "level of complexity I mean I just I was at it for a little while and I thought okay well I'll have a I'll have a",
    "start": "2253620",
    "end": "2259890"
  },
  {
    "text": "geolocation and then I'll have a failover rule just in case this goes badly and I'll have a way to round-robin and things start to grow and this is a",
    "start": "2259890",
    "end": "2267150"
  },
  {
    "text": "much easier way to envision what's actually going on and to edit again as",
    "start": "2267150",
    "end": "2275370"
  },
  {
    "start": "2273000",
    "end": "2273000"
  },
  {
    "text": "an operator it is very useful to be able to get your colleague to code review something so traffic flow policies are",
    "start": "2275370",
    "end": "2281490"
  },
  {
    "text": "all standard JSON text documents relatively readable I don't want to spend too long reading this but",
    "start": "2281490",
    "end": "2287460"
  },
  {
    "text": "basically there's a section with end points in a section with rules so you can pass it to a colleague to have them code reviews if you went once you go to",
    "start": "2287460",
    "end": "2297120"
  },
  {
    "start": "2295000",
    "end": "2295000"
  },
  {
    "text": "create that policy one of the things about these traffic flow policies is that they're immutable so if you create",
    "start": "2297120",
    "end": "2304350"
  },
  {
    "text": "one you cannot overwrite it so what happens here is we've created we've recreated one or attempted - and what's",
    "start": "2304350",
    "end": "2310980"
  },
  {
    "text": "happened is we've got a version - and that means that the version 1 is still there for us so now let's apply version",
    "start": "2310980",
    "end": "2318660"
  },
  {
    "start": "2317000",
    "end": "2317000"
  },
  {
    "text": "2 it's a simple command and if anything should go wrong if we're not satisfied",
    "start": "2318660",
    "end": "2325020"
  },
  {
    "text": "with how this is working after a few minutes just roll it back to version 1 it's very simple okay so last section a",
    "start": "2325020",
    "end": "2334350"
  },
  {
    "start": "2328000",
    "end": "2328000"
  },
  {
    "text": "few DNS operational tips it sounds like everyone here is a DNS ninja so apologies if this is a this is lost on",
    "start": "2334350",
    "end": "2341490"
  },
  {
    "text": "you but working in Amazon for a few years we've kind of we've become very sensitive to DNS we've we've had little",
    "start": "2341490",
    "end": "2348500"
  },
  {
    "text": "lots of little tips that we have that we've kind of bring the new guys onto we thought we would explore one or two of",
    "start": "2348500",
    "end": "2353670"
  },
  {
    "text": "them here so TT ELLs are really really important to think of it it's very easy",
    "start": "2353670",
    "end": "2359280"
  },
  {
    "text": "to just take the default but as a general rule you should be thinking",
    "start": "2359280",
    "end": "2364860"
  },
  {
    "text": "about TTL this is one of the unsung really useful features in DNS so what a TTL is just very quickly is all of those",
    "start": "2364860",
    "end": "2372720"
  },
  {
    "text": "resolvers that are const accessing your DNS every time they get an answer they get Bukka and don't come back to me for this long you can just",
    "start": "2372720",
    "end": "2379890"
  },
  {
    "text": "keep using that for the next 60 seconds our two days and so it's important to",
    "start": "2379890",
    "end": "2387809"
  },
  {
    "text": "think about that how quickly do you want the world to change or to pick it up when you make a change so if you have",
    "start": "2387809",
    "end": "2395640"
  },
  {
    "text": "something like health check record or maybe weighted round robin where you want people constantly coming back in",
    "start": "2395640",
    "end": "2400950"
  },
  {
    "text": "case you're changing the weights or whatever you want to have a short TTL on that because that will give you the",
    "start": "2400950",
    "end": "2407849"
  },
  {
    "text": "responsiveness to be able to get a bad end point out of service quickly however as a general default unless you can",
    "start": "2407849",
    "end": "2415380"
  },
  {
    "text": "envision the situation where you want to change that record quickly you probably want quite a long TTL there's no great",
    "start": "2415380",
    "end": "2422069"
  },
  {
    "text": "cost to it it gives a better customer experience and when actual customers are",
    "start": "2422069",
    "end": "2428029"
  },
  {
    "text": "connecting to your service they will no longer see the latency of a DNS lookup they'll just talk to their local caching",
    "start": "2428029",
    "end": "2434219"
  },
  {
    "text": "resolver and it will just give them the answer straight away it also lowers your query volume which lowers your bill which is kind of nice",
    "start": "2434219",
    "end": "2441469"
  },
  {
    "text": "one exception to that for critical changes at the time you're making the change you want low TTLs so let's",
    "start": "2441469",
    "end": "2449699"
  },
  {
    "text": "suppose you have a record that has a two-hour TTL you make a change to it now",
    "start": "2449699",
    "end": "2455459"
  },
  {
    "text": "you want to roll back a whole load of resolvers around the world have now cashed that and they'll come back to you",
    "start": "2455459",
    "end": "2460949"
  },
  {
    "text": "in two hours to get the new version so your rollback is going to take forever so typically what we would do as a",
    "start": "2460949",
    "end": "2466709"
  },
  {
    "text": "matter of best practice is lower the TTL first give that some time and then make your change and make it with a low TTL",
    "start": "2466709",
    "end": "2474479"
  },
  {
    "text": "in order that if you don't like the result you could very quickly roll that",
    "start": "2474479",
    "end": "2479579"
  },
  {
    "text": "back and all the resolvers will will spot the change and move back and then at the end you raise your TTL back up",
    "start": "2479579",
    "end": "2485039"
  },
  {
    "text": "again so as sort of a particular example",
    "start": "2485039",
    "end": "2490859"
  },
  {
    "text": "of this isn't switching DNS providers I'm not it did this applies to every",
    "start": "2490859",
    "end": "2496920"
  },
  {
    "text": "vendor not just red 53 but I'll use moving to red 53 just as an example so",
    "start": "2496920",
    "end": "2502619"
  },
  {
    "text": "the simplest solution to move a zone on to red 53 is you export the zone data",
    "start": "2502619",
    "end": "2507630"
  },
  {
    "text": "you import it into a new zone in red 53 and you just change the Registrar settings and traffic will gradually",
    "start": "2507630",
    "end": "2513210"
  },
  {
    "text": "shift but the problem is that the TTL on a lot of these records is two days so if",
    "start": "2513210",
    "end": "2519650"
  },
  {
    "text": "maybe you've got a Geo Record on the old and the Geo record on the new and they don't quite line up the way you thought",
    "start": "2519650",
    "end": "2525390"
  },
  {
    "text": "or maybe you've made a mistake maybe the important exactly what they thought it was or there's some reason that this",
    "start": "2525390",
    "end": "2531000"
  },
  {
    "text": "isn't working how you thought you've now got a two day rollback time so there's a",
    "start": "2531000",
    "end": "2536760"
  },
  {
    "text": "way around this I mentioned before that there are two copies of the NS records",
    "start": "2536760",
    "end": "2541830"
  },
  {
    "text": "it turns out the DNS resolvers it's not that well specified in the RFC is exactly which one which which one of",
    "start": "2541830",
    "end": "2549150"
  },
  {
    "text": "these NS record sets matters most or which should be cached by DNS resolvers so the picture of it here that I showed",
    "start": "2549150",
    "end": "2556440"
  },
  {
    "start": "2554000",
    "end": "2554000"
  },
  {
    "text": "before the TLD gave us a set of NS records for this zone and then the in zone resolver gave the in zone name",
    "start": "2556440",
    "end": "2563010"
  },
  {
    "text": "server gave us a set of NS records as well and so the result is essentially",
    "start": "2563010",
    "end": "2569250"
  },
  {
    "text": "get to make a choice between the two it turns out that bind and unbound and a couple of the other popular ones tend to",
    "start": "2569250",
    "end": "2575280"
  },
  {
    "text": "use the in zone the authoritative name server records but there are some",
    "start": "2575280",
    "end": "2580710"
  },
  {
    "text": "significant name servers that use the other set now you don't get to control the TTL s on the top set you only get to",
    "start": "2580710",
    "end": "2586920"
  },
  {
    "text": "control the ones on the bottom the ones in the Commons own are two days that's it so here's our starting point we've",
    "start": "2586920",
    "end": "2595470"
  },
  {
    "text": "got two zones in production or rather two sets of NS records in production one in the coms own and one on our existing",
    "start": "2595470",
    "end": "2601410"
  },
  {
    "text": "provider now we've record we've created us a new zone for reinvent 2017 comm on route 53",
    "start": "2601410",
    "end": "2608370"
  },
  {
    "text": "and it has its NS records so the first thing you do is you lower the TTL s on",
    "start": "2608370",
    "end": "2614040"
  },
  {
    "start": "2612000",
    "end": "2612000"
  },
  {
    "text": "the old provider and on route 53 because both of those are going to be in service shortly the next thing we do is we",
    "start": "2614040",
    "end": "2623250"
  },
  {
    "text": "change the old providers reinvent 2017 dot-com zone to point at route 53 so you",
    "start": "2623250",
    "end": "2630360"
  },
  {
    "text": "can picture a bind resolver now it's worked its way through it down through the roof it's queried comm and cut back that long",
    "start": "2630360",
    "end": "2635670"
  },
  {
    "text": "set of TTL s and that point of the old provider and then it makes another query against the",
    "start": "2635670",
    "end": "2641190"
  },
  {
    "text": "the provider zone and what it gets back is the answer but it also gets back",
    "start": "2641190",
    "end": "2646560"
  },
  {
    "text": "these NS records for route 53 and it will go okay I prefer those stick them",
    "start": "2646560",
    "end": "2652859"
  },
  {
    "text": "in the cache so now for the next 10 minutes all of its queries for this domain will now go to read 53 this is",
    "start": "2652859",
    "end": "2659339"
  },
  {
    "text": "kind of called a sideways delegation occasionally so now you can having made",
    "start": "2659339",
    "end": "2666660"
  },
  {
    "text": "that change you sit and let it bake you watch your monitoring you watch your dashboards you see if there's any drop",
    "start": "2666660",
    "end": "2671970"
  },
  {
    "text": "in traffic you ask your support team have you had any calls and now when",
    "start": "2671970",
    "end": "2677280"
  },
  {
    "text": "you're confident you raise your TTLs back up and this is kind of solidifying that change but you've had some time",
    "start": "2677280",
    "end": "2682859"
  },
  {
    "text": "with the low TTL with a rollback plan and now finally you now go and go to the",
    "start": "2682859",
    "end": "2689579"
  },
  {
    "start": "2688000",
    "end": "2688000"
  },
  {
    "text": "registrar and make the change and so the benefit here is this was the change you were going to have to make all along but",
    "start": "2689579",
    "end": "2695520"
  },
  {
    "text": "you've been able to do so with a couple of steps to kind of bake it first with a quick roll back finally you're about to",
    "start": "2695520",
    "end": "2703710"
  },
  {
    "start": "2702000",
    "end": "2702000"
  },
  {
    "text": "turn off that other DNS provider there's a whole bunch of situations where you'll be surprised that there's still traffic",
    "start": "2703710",
    "end": "2710280"
  },
  {
    "text": "going to that there's a resolver that doesn't do what you think it does there's glue records sitting around",
    "start": "2710280",
    "end": "2715319"
  },
  {
    "text": "somewhere that might surprise you and generally speaking what you want to do",
    "start": "2715319",
    "end": "2721680"
  },
  {
    "text": "if you have to blind turn it off do it with a rollback like think about",
    "start": "2721680",
    "end": "2726900"
  },
  {
    "text": "it just in case this goes wrong how do I turn it back on again and if you have query logs on that provider go look at",
    "start": "2726900",
    "end": "2734040"
  },
  {
    "text": "the query logs see who's still querying it or what percentage at least so maybe there's a metric for it but ya have a",
    "start": "2734040",
    "end": "2741569"
  },
  {
    "text": "rollback plan and do your monitoring when you're turning that off as well really really important okay",
    "start": "2741569",
    "end": "2747329"
  },
  {
    "text": "so quick summary we've looked at red 53 which is our low cost higher value",
    "start": "2747329",
    "end": "2752339"
  },
  {
    "text": "availability DNS service we've looked at all the flexible traffic management features we have and some of EC 2 DNS",
    "start": "2752339",
    "end": "2759230"
  },
  {
    "text": "it's important to note that all of this stuff is fully automated all we have api's for everything you can code",
    "start": "2759230",
    "end": "2764520"
  },
  {
    "text": "everything the command-line tools for everything a lot of them are third-party command line tools as well and the thing",
    "start": "2764520",
    "end": "2771300"
  },
  {
    "text": "to keep in mind is it's both more efficient and it's much safer to do things way finally we are we had a case study",
    "start": "2771300",
    "end": "2778900"
  },
  {
    "text": "from Neal soft thank you very much run and we had some quick operational tips which hopefully",
    "start": "2778900",
    "end": "2785079"
  },
  {
    "text": "some of you will find useful okay and many thanks for listening we'll be",
    "start": "2785079",
    "end": "2791440"
  },
  {
    "text": "around after the talk if anyone would like to ask us questions about anything at all to do in red 53 we're told me here",
    "start": "2791440",
    "end": "2796840"
  },
  {
    "text": "[Applause]",
    "start": "2796840",
    "end": "2802619"
  }
]