[
  {
    "text": "[Music]",
    "start": "160",
    "end": "1180"
  },
  {
    "text": "[Applause]",
    "start": "1180",
    "end": "2930"
  },
  {
    "text": "[Music]",
    "start": "2930",
    "end": "6099"
  },
  {
    "text": "hello I'm Von a senior Cloud security",
    "start": "8559",
    "end": "11200"
  },
  {
    "text": "engineer at the AWS office in cap toown",
    "start": "11200",
    "end": "13839"
  },
  {
    "text": "today I'm going to show you how to",
    "start": "13839",
    "end": "16039"
  },
  {
    "text": "resolve validation exceptions for",
    "start": "16039",
    "end": "18080"
  },
  {
    "text": "inference parameters that are in",
    "start": "18080",
    "end": "20000"
  },
  {
    "text": "Foundation models on Amazon Bedrock",
    "start": "20000",
    "end": "22720"
  },
  {
    "text": "let's get",
    "start": "22720",
    "end": "24359"
  },
  {
    "text": "started inference parameters help you",
    "start": "24359",
    "end": "27519"
  },
  {
    "text": "adjust the behavior of large language",
    "start": "27519",
    "end": "29519"
  },
  {
    "text": "models provided by Amazon Bedrock to get",
    "start": "29519",
    "end": "32279"
  },
  {
    "text": "the desired output validation errors",
    "start": "32279",
    "end": "35040"
  },
  {
    "text": "occur when you use incorrect inference",
    "start": "35040",
    "end": "37520"
  },
  {
    "text": "parameters or value with a model let's",
    "start": "37520",
    "end": "40360"
  },
  {
    "text": "look at two common",
    "start": "40360",
    "end": "41760"
  },
  {
    "text": "examples the first one incorrect",
    "start": "41760",
    "end": "44559"
  },
  {
    "text": "inference parameters for entropic claw 3",
    "start": "44559",
    "end": "47480"
  },
  {
    "text": "Model once you are in AWS console let's",
    "start": "47480",
    "end": "50760"
  },
  {
    "text": "navigate to Amazon sagemaker let's go to",
    "start": "50760",
    "end": "53399"
  },
  {
    "text": "sagemaker studio and open a new notebook",
    "start": "53399",
    "end": "57079"
  },
  {
    "text": "I have already one notebook created here",
    "start": "57079",
    "end": "59000"
  },
  {
    "text": "with the name test",
    "start": "59000",
    "end": "60559"
  },
  {
    "text": "and here we can see the example of the",
    "start": "60559",
    "end": "62840"
  },
  {
    "text": "code for enthropy CLA 3 Model here we",
    "start": "62840",
    "end": "66080"
  },
  {
    "text": "are trying to use the top end parameter",
    "start": "66080",
    "end": "68560"
  },
  {
    "text": "with enthropy claw 3 model however the",
    "start": "68560",
    "end": "71320"
  },
  {
    "text": "parameter value here is incorrect it's",
    "start": "71320",
    "end": "74320"
  },
  {
    "text": "mentioned as top n now if we run this",
    "start": "74320",
    "end": "77560"
  },
  {
    "text": "model you can see that the parameter",
    "start": "77560",
    "end": "80040"
  },
  {
    "text": "validation has failed if we replace the",
    "start": "80040",
    "end": "83640"
  },
  {
    "text": "top and parameter value with the correct",
    "start": "83640",
    "end": "85840"
  },
  {
    "text": "value which is top p and try to run it",
    "start": "85840",
    "end": "88439"
  },
  {
    "text": "again we can see that it runs",
    "start": "88439",
    "end": "90840"
  },
  {
    "text": "successfully without any error So to",
    "start": "90840",
    "end": "93799"
  },
  {
    "text": "avoid the validation exception we must",
    "start": "93799",
    "end": "96079"
  },
  {
    "text": "use one of the valid parameters instead",
    "start": "96079",
    "end": "98560"
  },
  {
    "text": "of top",
    "start": "98560",
    "end": "101078"
  },
  {
    "text": "n let's take a look at the second",
    "start": "101119",
    "end": "103640"
  },
  {
    "text": "example incorrect temperature value for",
    "start": "103640",
    "end": "106240"
  },
  {
    "text": "mral 7B model in this example we are",
    "start": "106240",
    "end": "109360"
  },
  {
    "text": "passing temperature 2.0 value for mral",
    "start": "109360",
    "end": "112719"
  },
  {
    "text": "7B model however the temperature",
    "start": "112719",
    "end": "115280"
  },
  {
    "text": "parameter controls Randomness and the",
    "start": "115280",
    "end": "117759"
  },
  {
    "text": "value for the parameter must be between",
    "start": "117759",
    "end": "119520"
  },
  {
    "text": "0 and one I'll change the value to two",
    "start": "119520",
    "end": "122520"
  },
  {
    "text": "here and we'll try to run this code so",
    "start": "122520",
    "end": "125320"
  },
  {
    "text": "you can see here that an error occurred",
    "start": "125320",
    "end": "127920"
  },
  {
    "text": "validation error so if we pass 2.0 as a",
    "start": "127920",
    "end": "132239"
  },
  {
    "text": "value then we get a validation exception",
    "start": "132239",
    "end": "134640"
  },
  {
    "text": "we must use the value between 0 and 1",
    "start": "134640",
    "end": "137120"
  },
  {
    "text": "for the temperature parameter with this",
    "start": "137120",
    "end": "138959"
  },
  {
    "text": "model let's change the value to 0.1 here",
    "start": "138959",
    "end": "143319"
  },
  {
    "text": "and we'll rerun the",
    "start": "143319",
    "end": "146360"
  },
  {
    "text": "code and we can see that the successful",
    "start": "146400",
    "end": "149160"
  },
  {
    "text": "output is is",
    "start": "149160",
    "end": "151959"
  },
  {
    "text": "there for other models on Amazon Bedrock",
    "start": "151959",
    "end": "155080"
  },
  {
    "text": "refer to documentation to understand",
    "start": "155080",
    "end": "156920"
  },
  {
    "text": "more about the correct inference",
    "start": "156920",
    "end": "158640"
  },
  {
    "text": "parameters and valid value ranges note",
    "start": "158640",
    "end": "161519"
  },
  {
    "text": "that it is a best practice to use",
    "start": "161519",
    "end": "163519"
  },
  {
    "text": "correct inference parameter names and",
    "start": "163519",
    "end": "166239"
  },
  {
    "text": "values for each model to avoid",
    "start": "166239",
    "end": "168680"
  },
  {
    "text": "validation exception when invoking",
    "start": "168680",
    "end": "170840"
  },
  {
    "text": "models on Amazon",
    "start": "170840",
    "end": "173159"
  },
  {
    "text": "Bedrock so now you know how to resolve",
    "start": "173159",
    "end": "176040"
  },
  {
    "text": "validation exception in Amazon Bedrock",
    "start": "176040",
    "end": "178239"
  },
  {
    "text": "for inference parameters",
    "start": "178239",
    "end": "181840"
  },
  {
    "text": "thanks for watching and happy cloud",
    "start": "181879",
    "end": "183440"
  },
  {
    "text": "computing from all of us here at AWS",
    "start": "183440",
    "end": "186200"
  },
  {
    "text": "[Music]",
    "start": "186200",
    "end": "187220"
  },
  {
    "text": "[Applause]",
    "start": "187220",
    "end": "188980"
  },
  {
    "text": "[Music]",
    "start": "188980",
    "end": "192139"
  },
  {
    "text": "[Music]",
    "start": "194180",
    "end": "197359"
  }
]