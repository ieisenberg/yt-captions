[
  {
    "start": "0",
    "end": "35000"
  },
  {
    "text": "my name's James Bezeq I'm a senior",
    "start": "680",
    "end": "3290"
  },
  {
    "text": "developer advocate here at AWS service",
    "start": "3290",
    "end": "5689"
  },
  {
    "text": "today I'm going to show you the s3 2",
    "start": "5689",
    "end": "8360"
  },
  {
    "text": "lambda serverless design pattern and how",
    "start": "8360",
    "end": "10910"
  },
  {
    "text": "it can become a flexible core for your",
    "start": "10910",
    "end": "12800"
  },
  {
    "text": "service applications in this model you",
    "start": "12800",
    "end": "15530"
  },
  {
    "text": "configure s3 to notify lambda when",
    "start": "15530",
    "end": "17990"
  },
  {
    "text": "certain events happen in this video I'll",
    "start": "17990",
    "end": "20630"
  },
  {
    "text": "show how this works in detail review the",
    "start": "20630",
    "end": "23090"
  },
  {
    "text": "characteristics of both services and why",
    "start": "23090",
    "end": "25670"
  },
  {
    "text": "knowing these is useful I'll also",
    "start": "25670",
    "end": "27619"
  },
  {
    "text": "discuss how this is a really useful tool",
    "start": "27619",
    "end": "30080"
  },
  {
    "text": "for building highly scalable",
    "start": "30080",
    "end": "31609"
  },
  {
    "text": "applications s3 the lambda is a powerful",
    "start": "31609",
    "end": "36649"
  },
  {
    "start": "35000",
    "end": "35000"
  },
  {
    "text": "combination we're designing service",
    "start": "36649",
    "end": "38300"
  },
  {
    "text": "solutions and it can be important and as",
    "start": "38300",
    "end": "41030"
  },
  {
    "text": "a starting point in thinking about your",
    "start": "41030",
    "end": "42620"
  },
  {
    "text": "systems design when an object is created",
    "start": "42620",
    "end": "45230"
  },
  {
    "text": "copied or deleted in s/3 s/3 can invoke",
    "start": "45230",
    "end": "48739"
  },
  {
    "text": "lambda you can figure notification",
    "start": "48739",
    "end": "51290"
  },
  {
    "text": "settings on a bucket and grant s3",
    "start": "51290",
    "end": "53420"
  },
  {
    "text": "permission to invoke a function based",
    "start": "53420",
    "end": "55579"
  },
  {
    "text": "upon resource based permission policies",
    "start": "55579",
    "end": "57649"
  },
  {
    "text": "it invokes asynchronously with an event",
    "start": "57649",
    "end": "60410"
  },
  {
    "text": "containing details about the object and",
    "start": "60410",
    "end": "62450"
  },
  {
    "text": "can match on an object key prefix or",
    "start": "62450",
    "end": "65119"
  },
  {
    "text": "suffix and if you need to fan-out you",
    "start": "65119",
    "end": "67400"
  },
  {
    "text": "can also link this to SNS instead what",
    "start": "67400",
    "end": "72470"
  },
  {
    "start": "71000",
    "end": "71000"
  },
  {
    "text": "are the characteristics of these",
    "start": "72470",
    "end": "73520"
  },
  {
    "text": "services well s3 is object based and",
    "start": "73520",
    "end": "77000"
  },
  {
    "text": "provides 11 lines of durability and has",
    "start": "77000",
    "end": "79189"
  },
  {
    "text": "virtually limitless storage it provides",
    "start": "79189",
    "end": "81740"
  },
  {
    "text": "lifecycle management so you can expire",
    "start": "81740",
    "end": "83720"
  },
  {
    "text": "objects or move storage tiers based on",
    "start": "83720",
    "end": "85820"
  },
  {
    "text": "rules it supports encryption and",
    "start": "85820",
    "end": "88369"
  },
  {
    "text": "provides a fine-grained permission model",
    "start": "88369",
    "end": "91000"
  },
  {
    "text": "lambda is our functions as a service",
    "start": "91000",
    "end": "93320"
  },
  {
    "text": "offering at the heart of the AWS service",
    "start": "93320",
    "end": "95360"
  },
  {
    "text": "portfolio it provides 100 millisecond",
    "start": "95360",
    "end": "98180"
  },
  {
    "text": "billing so you're charged for the length",
    "start": "98180",
    "end": "99890"
  },
  {
    "text": "of time you use the service you can",
    "start": "99890",
    "end": "102170"
  },
  {
    "text": "configure memory which also controls the",
    "start": "102170",
    "end": "104000"
  },
  {
    "text": "amount of virtual CPU available to your",
    "start": "104000",
    "end": "106340"
  },
  {
    "text": "code it also supports a number of",
    "start": "106340",
    "end": "108409"
  },
  {
    "text": "runtimes including no js' Python dotnet",
    "start": "108409",
    "end": "111680"
  },
  {
    "text": "Go and Java and you can bring your own",
    "start": "111680",
    "end": "113869"
  },
  {
    "text": "runtime too we have people using PHP",
    "start": "113869",
    "end": "116119"
  },
  {
    "text": "Perl and even COBOL",
    "start": "116119",
    "end": "118189"
  },
  {
    "text": "it's stateless and scales automatically",
    "start": "118189",
    "end": "121220"
  },
  {
    "text": "and it's event-driven the reason for",
    "start": "121220",
    "end": "124130"
  },
  {
    "text": "highlighting these services main",
    "start": "124130",
    "end": "125360"
  },
  {
    "text": "capabilities and features is that it's",
    "start": "125360",
    "end": "127640"
  },
  {
    "text": "important when you combine these",
    "start": "127640",
    "end": "128779"
  },
  {
    "text": "services you can get the benefits of",
    "start": "128779",
    "end": "130879"
  },
  {
    "text": "both services in a single application",
    "start": "130879",
    "end": "134460"
  },
  {
    "start": "134000",
    "end": "134000"
  },
  {
    "text": "if you've worked with lambda in any way",
    "start": "134460",
    "end": "136870"
  },
  {
    "text": "or runs for any tutorials already you've",
    "start": "136870",
    "end": "139450"
  },
  {
    "text": "probably come across this example this",
    "start": "139450",
    "end": "141850"
  },
  {
    "text": "solution allows you to optimize images",
    "start": "141850",
    "end": "143740"
  },
  {
    "text": "stored an s3 at the point whether",
    "start": "143740",
    "end": "145510"
  },
  {
    "text": "written to the bucket it uses a lambda",
    "start": "145510",
    "end": "147820"
  },
  {
    "text": "function to process the image to",
    "start": "147820",
    "end": "149410"
  },
  {
    "text": "optimize the size and quality what",
    "start": "149410",
    "end": "152080"
  },
  {
    "text": "happens here is that nest 3 bucket",
    "start": "152080",
    "end": "154210"
  },
  {
    "text": "exists to receive the images a lambda",
    "start": "154210",
    "end": "156730"
  },
  {
    "text": "function is configured to resize or",
    "start": "156730",
    "end": "158740"
  },
  {
    "text": "optimize an image using a library like",
    "start": "158740",
    "end": "161080"
  },
  {
    "text": "image magic the s3 bucket triggers the",
    "start": "161080",
    "end": "164050"
  },
  {
    "text": "lambda function and after the image",
    "start": "164050",
    "end": "166150"
  },
  {
    "text": "operation the final image is stored in a",
    "start": "166150",
    "end": "168190"
  },
  {
    "text": "second s3 bucket there are many",
    "start": "168190",
    "end": "170890"
  },
  {
    "text": "implementations of this available online",
    "start": "170890",
    "end": "172540"
  },
  {
    "text": "for different runtimes using different",
    "start": "172540",
    "end": "174910"
  },
  {
    "text": "image libraries it's an often quoted",
    "start": "174910",
    "end": "176770"
  },
  {
    "text": "example so I won't rehash it here",
    "start": "176770",
    "end": "178900"
  },
  {
    "text": "extensively but it shows some of the",
    "start": "178900",
    "end": "180880"
  },
  {
    "text": "important ideas behind serverless",
    "start": "180880",
    "end": "184470"
  },
  {
    "start": "184000",
    "end": "184000"
  },
  {
    "text": "so why not just resize images using ec2",
    "start": "184470",
    "end": "188080"
  },
  {
    "text": "you could easily install a script on ec2",
    "start": "188080",
    "end": "190810"
  },
  {
    "text": "to crawl images and buckets and process",
    "start": "190810",
    "end": "193420"
  },
  {
    "text": "them in a similar fashion with the image",
    "start": "193420",
    "end": "196120"
  },
  {
    "text": "resizing example highlights and key",
    "start": "196120",
    "end": "198100"
  },
  {
    "text": "benefits of taking this problem and",
    "start": "198100",
    "end": "200110"
  },
  {
    "text": "approaching it server lessly",
    "start": "200110",
    "end": "201570"
  },
  {
    "text": "first is scalability we bring compute to",
    "start": "201570",
    "end": "204790"
  },
  {
    "text": "the data what do I mean by that well",
    "start": "204790",
    "end": "207670"
  },
  {
    "text": "it's less obvious when you observe the",
    "start": "207670",
    "end": "209170"
  },
  {
    "text": "image resizer function operating on a",
    "start": "209170",
    "end": "211510"
  },
  {
    "text": "single image but if thousands of images",
    "start": "211510",
    "end": "213700"
  },
  {
    "text": "arrive you can see how lambda responds",
    "start": "213700",
    "end": "215920"
  },
  {
    "text": "and scales up from the developer's",
    "start": "215920",
    "end": "217959"
  },
  {
    "text": "perspective if you only write the code",
    "start": "217959",
    "end": "219490"
  },
  {
    "text": "that would manipulate a single file and",
    "start": "219490",
    "end": "221950"
  },
  {
    "text": "don't need to worry about how it works",
    "start": "221950",
    "end": "223750"
  },
  {
    "text": "at scale",
    "start": "223750",
    "end": "225270"
  },
  {
    "text": "it shows how event-driven architectures",
    "start": "225270",
    "end": "228250"
  },
  {
    "text": "work in a distributed system lambda is",
    "start": "228250",
    "end": "231010"
  },
  {
    "text": "inactive until triggered by an event in",
    "start": "231010",
    "end": "233200"
  },
  {
    "text": "this case the arrival of a new object in",
    "start": "233200",
    "end": "235150"
  },
  {
    "text": "an s3 bucket this event invokes the",
    "start": "235150",
    "end": "238060"
  },
  {
    "text": "lambda function with a JSON payload",
    "start": "238060",
    "end": "239830"
  },
  {
    "text": "describing what just happened the lambda",
    "start": "239830",
    "end": "242260"
  },
  {
    "text": "function performs its work and then",
    "start": "242260",
    "end": "244060"
  },
  {
    "text": "terminates in terms of flow the control",
    "start": "244060",
    "end": "246910"
  },
  {
    "text": "is orchestrated by the event happening",
    "start": "246910",
    "end": "248770"
  },
  {
    "text": "cost is another consideration not only",
    "start": "248770",
    "end": "252430"
  },
  {
    "text": "are you paying per image resized both in",
    "start": "252430",
    "end": "255100"
  },
  {
    "text": "the storage and s3 and the invocation",
    "start": "255100",
    "end": "257140"
  },
  {
    "text": "cost of lambda but this also makes cost",
    "start": "257140",
    "end": "260079"
  },
  {
    "text": "more easily attributable if you're",
    "start": "260080",
    "end": "262479"
  },
  {
    "text": "building a SAS product or an application",
    "start": "262479",
    "end": "264250"
  },
  {
    "text": "for clients it's extremely easy to",
    "start": "264250",
    "end": "266530"
  },
  {
    "text": "calculate",
    "start": "266530",
    "end": "267040"
  },
  {
    "text": "cost by customer for security between",
    "start": "267040",
    "end": "271450"
  },
  {
    "text": "the access control lists on the objects",
    "start": "271450",
    "end": "274420"
  },
  {
    "text": "in the bucket the bucket policy and the",
    "start": "274420",
    "end": "276670"
  },
  {
    "text": "I am policies of the function if",
    "start": "276670",
    "end": "279070"
  },
  {
    "text": "configured with the principles of least",
    "start": "279070",
    "end": "280840"
  },
  {
    "text": "privilege it can create a highly secure",
    "start": "280840",
    "end": "283300"
  },
  {
    "text": "approach to the problem with minimal",
    "start": "283300",
    "end": "285310"
  },
  {
    "text": "ongoing security maintenance and finally",
    "start": "285310",
    "end": "288520"
  },
  {
    "text": "its service so that means there's no",
    "start": "288520",
    "end": "290350"
  },
  {
    "text": "operating assistance to patch instances",
    "start": "290350",
    "end": "292750"
  },
  {
    "text": "to scale or infrastructure to manage now",
    "start": "292750",
    "end": "296050"
  },
  {
    "text": "although the image resizer function is",
    "start": "296050",
    "end": "297820"
  },
  {
    "text": "definitely interesting and useful it's",
    "start": "297820",
    "end": "299950"
  },
  {
    "text": "only the beginning of the things you can",
    "start": "299950",
    "end": "301420"
  },
  {
    "text": "do when you attach a function to an s3",
    "start": "301420",
    "end": "303520"
  },
  {
    "text": "event this is also a good point to",
    "start": "303520",
    "end": "307900"
  },
  {
    "start": "306000",
    "end": "306000"
  },
  {
    "text": "introduce Sam the server list",
    "start": "307900",
    "end": "309610"
  },
  {
    "text": "application model Sam's also a squirrel",
    "start": "309610",
    "end": "312310"
  },
  {
    "text": "who's the mascot for our service as you",
    "start": "312310",
    "end": "316420"
  },
  {
    "start": "315000",
    "end": "315000"
  },
  {
    "text": "start to develop service applications",
    "start": "316420",
    "end": "318220"
  },
  {
    "text": "you'll be creating infrastructure lambda",
    "start": "318220",
    "end": "320950"
  },
  {
    "text": "functions and triggers invoking lambda",
    "start": "320950",
    "end": "322960"
  },
  {
    "text": "functions you can do all of this in the",
    "start": "322960",
    "end": "325090"
  },
  {
    "text": "console but it's much easier to automate",
    "start": "325090",
    "end": "327040"
  },
  {
    "text": "through code Sam is a CloudFormation",
    "start": "327040",
    "end": "329350"
  },
  {
    "text": "extension designed to make the service",
    "start": "329350",
    "end": "331330"
  },
  {
    "text": "application deployment that much easier",
    "start": "331330",
    "end": "333450"
  },
  {
    "text": "Sam simplifies the deployment in",
    "start": "333450",
    "end": "335710"
  },
  {
    "text": "configuration so you can deploy the",
    "start": "335710",
    "end": "337690"
  },
  {
    "text": "entire solution using simple commands",
    "start": "337690",
    "end": "339730"
  },
  {
    "text": "from the CLI once you have a template",
    "start": "339730",
    "end": "342310"
  },
  {
    "text": "you simply type Sam deploy on your",
    "start": "342310",
    "end": "344620"
  },
  {
    "text": "command line here is a simple - Sam",
    "start": "344620",
    "end": "347020"
  },
  {
    "text": "template that you'll see in one of the",
    "start": "347020",
    "end": "348490"
  },
  {
    "text": "future videos",
    "start": "348490",
    "end": "349680"
  },
  {
    "text": "this tells AWS CloudFormation that is a",
    "start": "349680",
    "end": "352810"
  },
  {
    "text": "Sam template that it needs to transform",
    "start": "352810",
    "end": "354750"
  },
  {
    "text": "it specifies an input parameter in this",
    "start": "354750",
    "end": "357580"
  },
  {
    "text": "case a bucket name in the resources",
    "start": "357580",
    "end": "360190"
  },
  {
    "text": "section",
    "start": "360190",
    "end": "360730"
  },
  {
    "text": "it creates an s3 bucket and also creates",
    "start": "360730",
    "end": "363520"
  },
  {
    "text": "a lambda function with the correct",
    "start": "363520",
    "end": "365470"
  },
  {
    "text": "iam policy specifying the language",
    "start": "365470",
    "end": "367810"
  },
  {
    "text": "runtime and memory required and where",
    "start": "367810",
    "end": "370270"
  },
  {
    "text": "the code can be found it also specifies",
    "start": "370270",
    "end": "372850"
  },
  {
    "text": "the event triggering the lambda function",
    "start": "372850",
    "end": "374890"
  },
  {
    "text": "in this case it says when new objects",
    "start": "374890",
    "end": "377050"
  },
  {
    "text": "arrive in the bucket it's looking for",
    "start": "377050",
    "end": "378970"
  },
  {
    "text": "objects ending with dot txt now when you",
    "start": "378970",
    "end": "384130"
  },
  {
    "start": "384000",
    "end": "384000"
  },
  {
    "text": "run Sam deploy on this template it",
    "start": "384130",
    "end": "386260"
  },
  {
    "text": "actually creates the infrastructure it",
    "start": "386260",
    "end": "387910"
  },
  {
    "text": "would create the s3 bucket the lambda",
    "start": "387910",
    "end": "389560"
  },
  {
    "text": "function a dynamodb table and a second",
    "start": "389560",
    "end": "392560"
  },
  {
    "text": "lambda function the s3 2 lambda pattern",
    "start": "392560",
    "end": "396669"
  },
  {
    "text": "is very powerful but actually very",
    "start": "396669",
    "end": "398169"
  },
  {
    "text": "simple the services handle",
    "start": "398169",
    "end": "400480"
  },
  {
    "text": "automatically is your custom business",
    "start": "400480",
    "end": "402490"
  },
  {
    "text": "logic only needs to focus on the tasks",
    "start": "402490",
    "end": "405070"
  },
  {
    "text": "that matter to your application users",
    "start": "405070",
    "end": "407130"
  },
  {
    "text": "using the server less application model",
    "start": "407130",
    "end": "409600"
  },
  {
    "text": "our friend Sam it's trivial to set up in",
    "start": "409600",
    "end": "412420"
  },
  {
    "text": "your service application using just a",
    "start": "412420",
    "end": "414220"
  },
  {
    "text": "few lines of Yama",
    "start": "414220",
    "end": "415440"
  },
  {
    "text": "since s3 buckets can contain a virtually",
    "start": "415440",
    "end": "418390"
  },
  {
    "text": "limitless amount of data and lambda",
    "start": "418390",
    "end": "420520"
  },
  {
    "text": "functions scale automatically when",
    "start": "420520",
    "end": "422200"
  },
  {
    "text": "triggered by s3 events this makes it",
    "start": "422200",
    "end": "424840"
  },
  {
    "text": "easy to build enterprise grade solutions",
    "start": "424840",
    "end": "426970"
  },
  {
    "text": "with minimal code in the next few videos",
    "start": "426970",
    "end": "429790"
  },
  {
    "text": "I'll walk through specific examples",
    "start": "429790",
    "end": "431890"
  },
  {
    "text": "showing how you can use this pattern to",
    "start": "431890",
    "end": "434020"
  },
  {
    "text": "provide useful functionality in your",
    "start": "434020",
    "end": "435670"
  },
  {
    "text": "business applications I'll show you how",
    "start": "435670",
    "end": "438400"
  },
  {
    "text": "you can do things like automated",
    "start": "438400",
    "end": "439750"
  },
  {
    "text": "language translation workflow management",
    "start": "439750",
    "end": "442390"
  },
  {
    "text": "and bringing sentiment analysis to audio",
    "start": "442390",
    "end": "444580"
  },
  {
    "text": "recordings thanks for joining me for",
    "start": "444580",
    "end": "447220"
  },
  {
    "text": "this brief introduction to learn more",
    "start": "447220",
    "end": "449170"
  },
  {
    "text": "about lambda visit aws.amazon.com",
    "start": "449170",
    "end": "451920"
  },
  {
    "text": "forward slash lambda I hope to see you",
    "start": "451920",
    "end": "454840"
  },
  {
    "text": "next time happy coding",
    "start": "454840",
    "end": "458070"
  }
]