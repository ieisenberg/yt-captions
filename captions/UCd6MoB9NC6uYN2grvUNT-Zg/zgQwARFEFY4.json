[
  {
    "start": "0",
    "end": "48000"
  },
  {
    "text": "I'd like to start by asking why",
    "start": "30",
    "end": "2520"
  },
  {
    "text": "streaming analytics has become more",
    "start": "2520",
    "end": "4110"
  },
  {
    "text": "popular over the last few years",
    "start": "4110",
    "end": "6440"
  },
  {
    "text": "fundamentally this trend is driven by",
    "start": "6440",
    "end": "8730"
  },
  {
    "text": "the realization across the business",
    "start": "8730",
    "end": "10110"
  },
  {
    "text": "community that real-time and near",
    "start": "10110",
    "end": "13019"
  },
  {
    "text": "real-time insights have greater value",
    "start": "13019",
    "end": "15120"
  },
  {
    "text": "when compared to insights that are",
    "start": "15120",
    "end": "16949"
  },
  {
    "text": "delayed by a few days or even hours and",
    "start": "16949",
    "end": "20189"
  },
  {
    "text": "this is in turn because businesses can",
    "start": "20189",
    "end": "23070"
  },
  {
    "text": "make higher-quality decisions with",
    "start": "23070",
    "end": "25140"
  },
  {
    "text": "fresher insights and on the flip side",
    "start": "25140",
    "end": "27680"
  },
  {
    "text": "the decision-making usefulness of",
    "start": "27680",
    "end": "30150"
  },
  {
    "text": "delayed insights is significantly",
    "start": "30150",
    "end": "31769"
  },
  {
    "text": "reduced and this is evident in the graph",
    "start": "31769",
    "end": "34230"
  },
  {
    "text": "that you see here as data becomes stale",
    "start": "34230",
    "end": "39110"
  },
  {
    "text": "over a period of days and months there's",
    "start": "39110",
    "end": "42180"
  },
  {
    "text": "not a whole lot of decision-making value",
    "start": "42180",
    "end": "44190"
  },
  {
    "text": "embedded in that intelligence now what",
    "start": "44190",
    "end": "51690"
  },
  {
    "start": "48000",
    "end": "48000"
  },
  {
    "text": "are the common real-time analytics use",
    "start": "51690",
    "end": "54180"
  },
  {
    "text": "cases out there one way to segment these",
    "start": "54180",
    "end": "57690"
  },
  {
    "text": "use cases is being is by looking at the",
    "start": "57690",
    "end": "60329"
  },
  {
    "text": "latency characteristics of these use",
    "start": "60329",
    "end": "62190"
  },
  {
    "text": "cases on the far left you have workloads",
    "start": "62190",
    "end": "66210"
  },
  {
    "text": "that need millisecond level and to end",
    "start": "66210",
    "end": "69119"
  },
  {
    "text": "latency in an example of applications",
    "start": "69119",
    "end": "74490"
  },
  {
    "text": "that need millisecond level latency is",
    "start": "74490",
    "end": "77030"
  },
  {
    "text": "using a messaging layer for",
    "start": "77030",
    "end": "80580"
  },
  {
    "text": "microservices communication so instead",
    "start": "80580",
    "end": "83189"
  },
  {
    "text": "of using synchronous communication",
    "start": "83189",
    "end": "84420"
  },
  {
    "text": "between micro services you can actually",
    "start": "84420",
    "end": "87299"
  },
  {
    "text": "use a streaming or stream storage layer",
    "start": "87299",
    "end": "92450"
  },
  {
    "text": "to hold messages and facilitate",
    "start": "92450",
    "end": "96180"
  },
  {
    "text": "asynchronous communication this has the",
    "start": "96180",
    "end": "99390"
  },
  {
    "text": "benefit of providing more robust",
    "start": "99390",
    "end": "101220"
  },
  {
    "text": "asynchronous communication where the",
    "start": "101220",
    "end": "103979"
  },
  {
    "text": "components that make up your micro",
    "start": "103979",
    "end": "105570"
  },
  {
    "text": "services and mesh are less brittle log",
    "start": "105570",
    "end": "112950"
  },
  {
    "text": "ingestion is something that most of you",
    "start": "112950",
    "end": "115219"
  },
  {
    "text": "are probably familiar with almost every",
    "start": "115219",
    "end": "118829"
  },
  {
    "text": "production workload needs to handle",
    "start": "118829",
    "end": "121290"
  },
  {
    "text": "application logs and surface analytics",
    "start": "121290",
    "end": "124619"
  },
  {
    "text": "weather is for debugging or for",
    "start": "124619",
    "end": "128429"
  },
  {
    "text": "performance tuning etc and and this type",
    "start": "128429",
    "end": "132270"
  },
  {
    "text": "of",
    "start": "132270",
    "end": "133080"
  },
  {
    "text": "a work load is necessary so this is",
    "start": "133080",
    "end": "137370"
  },
  {
    "text": "where you know having a few seconds of",
    "start": "137370",
    "end": "139940"
  },
  {
    "text": "latency can really make a difference",
    "start": "139940",
    "end": "142880"
  },
  {
    "text": "between identifying issues with an",
    "start": "142880",
    "end": "145890"
  },
  {
    "text": "application and being able to respond to",
    "start": "145890",
    "end": "147480"
  },
  {
    "text": "it very quickly",
    "start": "147480",
    "end": "148580"
  },
  {
    "text": "and lastly these days every workload",
    "start": "148580",
    "end": "155810"
  },
  {
    "text": "uses an online transaction processing",
    "start": "155810",
    "end": "158790"
  },
  {
    "text": "database and being able to export this",
    "start": "158790",
    "end": "161580"
  },
  {
    "text": "data into a data link and then",
    "start": "161580",
    "end": "164130"
  },
  {
    "text": "facilitating analytics in a matter of",
    "start": "164130",
    "end": "165840"
  },
  {
    "text": "minutes can make a big difference in how",
    "start": "165840",
    "end": "168960"
  },
  {
    "text": "businesses respond to customer demand",
    "start": "168960",
    "end": "173870"
  },
  {
    "text": "inventory issues etc so streaming ETL is",
    "start": "173870",
    "end": "178370"
  },
  {
    "text": "is kind of the last example there of",
    "start": "178370",
    "end": "181700"
  },
  {
    "text": "real-time analytics use case we can look",
    "start": "181700",
    "end": "190950"
  },
  {
    "start": "185000",
    "end": "185000"
  },
  {
    "text": "at streaming analytics by breaking down",
    "start": "190950",
    "end": "192959"
  },
  {
    "text": "the components that make up a streaming",
    "start": "192959",
    "end": "196470"
  },
  {
    "text": "analytics workload we'll start with on",
    "start": "196470",
    "end": "200489"
  },
  {
    "text": "the far left with the source sources can",
    "start": "200489",
    "end": "205410"
  },
  {
    "text": "be devices like mobile devices or",
    "start": "205410",
    "end": "208260"
  },
  {
    "text": "actually web applications that generate",
    "start": "208260",
    "end": "210360"
  },
  {
    "text": "clickstream data and this type of data",
    "start": "210360",
    "end": "213480"
  },
  {
    "text": "is generated at a high velocity and it",
    "start": "213480",
    "end": "215880"
  },
  {
    "text": "needs to be captured in a reliable",
    "start": "215880",
    "end": "217590"
  },
  {
    "text": "fashion and for that you would need",
    "start": "217590",
    "end": "220470"
  },
  {
    "text": "something like the stream ingestion",
    "start": "220470",
    "end": "222540"
  },
  {
    "text": "layer that is shown here the reliability",
    "start": "222540",
    "end": "225630"
  },
  {
    "text": "is important because if you if you lose",
    "start": "225630",
    "end": "228320"
  },
  {
    "text": "messages that are being generated from",
    "start": "228320",
    "end": "230459"
  },
  {
    "text": "the source then the analytics value on",
    "start": "230459",
    "end": "234120"
  },
  {
    "text": "the far right of this workflow is",
    "start": "234120",
    "end": "237290"
  },
  {
    "text": "reduced and once the stream ingestion",
    "start": "237290",
    "end": "242820"
  },
  {
    "text": "layer captures these messages it then",
    "start": "242820",
    "end": "245370"
  },
  {
    "text": "deposited deposits them into a stream",
    "start": "245370",
    "end": "248970"
  },
  {
    "text": "storage layer such as Kinesis data",
    "start": "248970",
    "end": "251790"
  },
  {
    "text": "streams following this you can have a",
    "start": "251790",
    "end": "256530"
  },
  {
    "text": "number of consumers that can read and",
    "start": "256530",
    "end": "260430"
  },
  {
    "text": "process the streaming data in near",
    "start": "260430",
    "end": "263550"
  },
  {
    "text": "real-time when",
    "start": "263550",
    "end": "266169"
  },
  {
    "text": "for streaming ETL or for aggregations",
    "start": "266169",
    "end": "269590"
  },
  {
    "text": "anomaly detection etc the last component",
    "start": "269590",
    "end": "274719"
  },
  {
    "text": "here is the destination so you can have",
    "start": "274719",
    "end": "278620"
  },
  {
    "text": "data simply being stored in a data Lake",
    "start": "278620",
    "end": "281379"
  },
  {
    "text": "for further analytics or you can then do",
    "start": "281379",
    "end": "284409"
  },
  {
    "text": "aggregations in the stream processing",
    "start": "284409",
    "end": "286270"
  },
  {
    "text": "layer and then store those aggregates in",
    "start": "286270",
    "end": "288669"
  },
  {
    "text": "a database",
    "start": "288669",
    "end": "291659"
  },
  {
    "start": "293000",
    "end": "293000"
  },
  {
    "text": "having looked at stream processing and",
    "start": "293390",
    "end": "296740"
  },
  {
    "text": "how stream processing offers benefits",
    "start": "296740",
    "end": "299810"
  },
  {
    "text": "for businesses let's look at an example",
    "start": "299810",
    "end": "302180"
  },
  {
    "text": "architecture we'll start with this and",
    "start": "302180",
    "end": "304250"
  },
  {
    "text": "we'll go over more details around",
    "start": "304250",
    "end": "306490"
  },
  {
    "text": "specific customer use cases that have",
    "start": "306490",
    "end": "309590"
  },
  {
    "text": "been made possible by stream processing",
    "start": "309590",
    "end": "314080"
  },
  {
    "text": "so we'll look at each of these layers",
    "start": "314080",
    "end": "316250"
  },
  {
    "text": "and provide you know some possible",
    "start": "316250",
    "end": "319700"
  },
  {
    "text": "approaches for source stream ingestion",
    "start": "319700",
    "end": "322490"
  },
  {
    "text": "stream storage stream processing and the",
    "start": "322490",
    "end": "325520"
  },
  {
    "text": "destination so let's say we're",
    "start": "325520",
    "end": "328880"
  },
  {
    "text": "collecting data from all of these",
    "start": "328880",
    "end": "331310"
  },
  {
    "text": "sources that are listed here all the way",
    "start": "331310",
    "end": "333170"
  },
  {
    "text": "from mobile devices to application logs",
    "start": "333170",
    "end": "335450"
  },
  {
    "text": "and here are some options for ingesting",
    "start": "335450",
    "end": "339950"
  },
  {
    "text": "this data you could use the Amazon",
    "start": "339950",
    "end": "342170"
  },
  {
    "text": "Kinesis agent this is something that you",
    "start": "342170",
    "end": "344600"
  },
  {
    "text": "install in your ec2 instances let's say",
    "start": "344600",
    "end": "348110"
  },
  {
    "text": "that's where your applications are",
    "start": "348110",
    "end": "349400"
  },
  {
    "text": "hosted and this is a great way to",
    "start": "349400",
    "end": "352840"
  },
  {
    "text": "without any code take application logs",
    "start": "352840",
    "end": "356090"
  },
  {
    "text": "and send them on to the stream storage",
    "start": "356090",
    "end": "358610"
  },
  {
    "text": "layer Kinesis in this case another",
    "start": "358610",
    "end": "360830"
  },
  {
    "text": "approach is if you're collecting strick",
    "start": "360830",
    "end": "363710"
  },
  {
    "text": "stream data or IOT sensor data you could",
    "start": "363710",
    "end": "366260"
  },
  {
    "text": "use the Canisius producer library to",
    "start": "366260",
    "end": "368810"
  },
  {
    "text": "send data on to Kinesis and then we have",
    "start": "368810",
    "end": "372530"
  },
  {
    "text": "a variety of SDKs for all the",
    "start": "372530",
    "end": "375050"
  },
  {
    "text": "programming languages out there from",
    "start": "375050",
    "end": "377560"
  },
  {
    "text": "Python Java c-sharp etc to send data to",
    "start": "377560",
    "end": "382040"
  },
  {
    "text": "Kinesis and as I've been mentioning all",
    "start": "382040",
    "end": "387680"
  },
  {
    "text": "along the stream storage layer is Amazon",
    "start": "387680",
    "end": "390290"
  },
  {
    "text": "cases data streams what about processing",
    "start": "390290",
    "end": "393980"
  },
  {
    "text": "so here we have a number of options",
    "start": "393980",
    "end": "396560"
  },
  {
    "text": "within the AWS family you can do",
    "start": "396560",
    "end": "400850"
  },
  {
    "text": "real-time processing in a matter of",
    "start": "400850",
    "end": "403340"
  },
  {
    "text": "seconds using Amazon Kinesis data",
    "start": "403340",
    "end": "406280"
  },
  {
    "text": "analytics we have two offerings there we",
    "start": "406280",
    "end": "409610"
  },
  {
    "text": "have Amazon Kinesis data analytics for",
    "start": "409610",
    "end": "411410"
  },
  {
    "text": "sequel and Amazon Kinesis data analytics",
    "start": "411410",
    "end": "413810"
  },
  {
    "text": "for Java you can also use the Amazon",
    "start": "413810",
    "end": "417830"
  },
  {
    "text": "Kinesis consumer library to help you",
    "start": "417830",
    "end": "421360"
  },
  {
    "text": "automatically adjust to the scale of",
    "start": "421360",
    "end": "425150"
  },
  {
    "text": "data that's coming",
    "start": "425150",
    "end": "426760"
  },
  {
    "text": "- your Kinesis stream and down below we",
    "start": "426760",
    "end": "431950"
  },
  {
    "text": "have a no code option with Amazon",
    "start": "431950",
    "end": "435100"
  },
  {
    "text": "Kinesis data firehose which lets you",
    "start": "435100",
    "end": "438480"
  },
  {
    "text": "essentially plug the data that's coming",
    "start": "438480",
    "end": "440860"
  },
  {
    "text": "through your Kinesis data streams to a",
    "start": "440860",
    "end": "445750"
  },
  {
    "text": "variety of destinations such as s3",
    "start": "445750",
    "end": "449790"
  },
  {
    "text": "redshift and Splunk so let's look at a",
    "start": "449790",
    "end": "456850"
  },
  {
    "start": "454000",
    "end": "454000"
  },
  {
    "text": "log ingestion example where you need to",
    "start": "456850",
    "end": "463330"
  },
  {
    "text": "collect logging data from all of your",
    "start": "463330",
    "end": "466600"
  },
  {
    "text": "applications and these applications",
    "start": "466600",
    "end": "467770"
  },
  {
    "text": "could be running on Amazon ec2 they",
    "start": "467770",
    "end": "470410"
  },
  {
    "text": "could be running on Amazon Elastic",
    "start": "470410",
    "end": "472780"
  },
  {
    "text": "container service or ECS or AWS Landa",
    "start": "472780",
    "end": "477270"
  },
  {
    "text": "these logs are being captured and sent",
    "start": "477270",
    "end": "481960"
  },
  {
    "text": "to Kinesis data streams from what from",
    "start": "481960",
    "end": "484750"
  },
  {
    "text": "where it can be processed using Kinesis",
    "start": "484750",
    "end": "489070"
  },
  {
    "text": "data analytics can you sustain a fire",
    "start": "489070",
    "end": "491200"
  },
  {
    "text": "hose and then also deposit it into s3 or",
    "start": "491200",
    "end": "495160"
  },
  {
    "text": "elasticsearch service and just as an",
    "start": "495160",
    "end": "498580"
  },
  {
    "text": "example through Kinesis data firehose",
    "start": "498580",
    "end": "501610"
  },
  {
    "text": "you can actually request that they to be",
    "start": "501610",
    "end": "505000"
  },
  {
    "text": "persistent on s3 in a columnar format",
    "start": "505000",
    "end": "507460"
  },
  {
    "text": "such as Parque or orosi which then makes",
    "start": "507460",
    "end": "511540"
  },
  {
    "text": "it easier to use Amazon athena to",
    "start": "511540",
    "end": "513760"
  },
  {
    "text": "process these logs another popular use",
    "start": "513760",
    "end": "520240"
  },
  {
    "text": "case is supply chain management and this",
    "start": "520240",
    "end": "526930"
  },
  {
    "text": "is important because you know supply",
    "start": "526930",
    "end": "530440"
  },
  {
    "text": "chain as a vertical involves data coming",
    "start": "530440",
    "end": "537700"
  },
  {
    "text": "and going at a very high rate so you",
    "start": "537700",
    "end": "540910"
  },
  {
    "text": "have supply chain employees making",
    "start": "540910",
    "end": "545080"
  },
  {
    "text": "changes on mobile clients desktops etc",
    "start": "545080",
    "end": "548740"
  },
  {
    "text": "and as the data is being updated you",
    "start": "548740",
    "end": "552130"
  },
  {
    "text": "know in warehouses and anywhere your",
    "start": "552130",
    "end": "556780"
  },
  {
    "text": "inventory is being kept all of this data",
    "start": "556780",
    "end": "559900"
  },
  {
    "text": "is being",
    "start": "559900",
    "end": "560680"
  },
  {
    "text": "streamed in through an application tier",
    "start": "560680",
    "end": "564250"
  },
  {
    "text": "which is represented by application AWS",
    "start": "564250",
    "end": "568180"
  },
  {
    "text": "application auto-scaling",
    "start": "568180",
    "end": "569740"
  },
  {
    "text": "in through Kinesis data streams and it",
    "start": "569740",
    "end": "574360"
  },
  {
    "text": "can then be processed in near-real-time",
    "start": "574360",
    "end": "576570"
  },
  {
    "text": "using AWS lambda and the results of that",
    "start": "576570",
    "end": "580720"
  },
  {
    "text": "processing can be stored in Amazon",
    "start": "580720",
    "end": "583899"
  },
  {
    "text": "Elastic storage service where it can",
    "start": "583899",
    "end": "585520"
  },
  {
    "text": "then be visualized using Cabana",
    "start": "585520",
    "end": "589560"
  }
]