[
  {
    "start": "0",
    "end": "21000"
  },
  {
    "text": "Welcome to 'This is My Architecture.'",
    "start": "5014",
    "end": "7220"
  },
  {
    "text": "I'm Boaz and I have here with me \nOpher from Nielsen Marketing Cloud.",
    "start": "7221",
    "end": "10642"
  },
  {
    "text": "Hi Opher. \n- Hi Boaz.",
    "start": "10642",
    "end": "12131"
  },
  {
    "text": "- Tell us about Nielsen \nMarketing Cloud.",
    "start": "12131",
    "end": "13865"
  },
  {
    "text": "- So Nielsen Marketing Cloud is a data \nmanagement platform.",
    "start": "13865",
    "end": "16622"
  },
  {
    "text": "We prepare marketing segmentation data \nthat can then be used for campaigns.",
    "start": "16622",
    "end": "20931"
  },
  {
    "text": "- So basically you're getting files \nfrom different resources",
    "start": "20931",
    "end": "23734"
  },
  {
    "start": "21000",
    "end": "86000"
  },
  {
    "text": "and then sending them to \nthe different networks?",
    "start": "23734",
    "end": "25995"
  },
  {
    "text": "- Right, so we basically create \nall the data in another part of the system",
    "start": "25996",
    "end": "30132"
  },
  {
    "text": "and then my system which is called \nDataOut",
    "start": "30132",
    "end": "33127"
  },
  {
    "text": "gets these files on this side \nand then processes them ",
    "start": "33127",
    "end": "38467"
  },
  {
    "text": "and uploads them to the ad networks \nthat are partners of ours.",
    "start": "38467",
    "end": "41732"
  },
  {
    "text": "- Okay, so let's walk through \nthe system, what it does.",
    "start": "41732",
    "end": "44066"
  },
  {
    "text": "- Okay, so I think the first thing \nI want to mention is that",
    "start": "44067",
    "end": "46595"
  },
  {
    "text": "this system runs a huge amount \nof data.",
    "start": "46595",
    "end": "49982"
  },
  {
    "text": "We process about 250 billion events \na day.",
    "start": "49982",
    "end": "53255"
  },
  {
    "text": "- That's a huge scale.",
    "start": "53799",
    "end": "54991"
  },
  {
    "text": "- Right, and these events \ncome in files",
    "start": "54991",
    "end": "57152"
  },
  {
    "text": "each file has a bunch of events in them, \nwhich are the segmentation data ",
    "start": "57152",
    "end": "60883"
  },
  {
    "text": "it gets processed and gets sent \nto the ad platforms.",
    "start": "60883",
    "end": "64775"
  },
  {
    "text": "The files pretty much come \ninto the system",
    "start": "64775",
    "end": "67663"
  },
  {
    "text": "and are written to an S3 bucket.",
    "start": "67664",
    "end": "69941"
  },
  {
    "text": "They get some processing like \ntransformations and formatting",
    "start": "69941",
    "end": "73316"
  },
  {
    "text": "using a Spark EMR cluster. ",
    "start": "73316",
    "end": "75687"
  },
  {
    "text": "Get written to another S3 bucket \nand from here,",
    "start": "75687",
    "end": "79563"
  },
  {
    "text": "they go to Lambda functions that do \nall the processing of last formatting ",
    "start": "79564",
    "end": "84978"
  },
  {
    "text": "and sending it to the ad platform.",
    "start": "84978",
    "end": "86544"
  },
  {
    "text": "- So you have your process data \nand then you're just",
    "start": "86544",
    "end": "89152"
  },
  {
    "text": "taking it and splitting it to the \nLambda functions?",
    "start": "89152",
    "end": "92164"
  },
  {
    "text": "- Yes, correct.",
    "start": "92164",
    "end": "92909"
  },
  {
    "text": "So the Lambda functions actually \ndo the last part of the work of",
    "start": "92909",
    "end": "96094"
  },
  {
    "text": "uploading it to all the platforms.",
    "start": "96095",
    "end": "98301"
  },
  {
    "text": "There is an additional layer of data here \nwhich is all the data about the files",
    "start": "98301",
    "end": "102685"
  },
  {
    "text": "and how to manage them. ",
    "start": "102685",
    "end": "104049"
  },
  {
    "text": "So this information goes through here \nand gets written to a Postgres RDS database",
    "start": "104050",
    "end": "110464"
  },
  {
    "text": "We have a little work manager Lambda \nthat reads the information,",
    "start": "110464",
    "end": "114400"
  },
  {
    "text": "makes decisions which files need \nto process in which way,",
    "start": "114401",
    "end": "117602"
  },
  {
    "text": "sends it to the Spark cluster,\nthat gets written back",
    "start": "117602",
    "end": "122795"
  },
  {
    "text": "to the database.",
    "start": "122795",
    "end": "125228"
  },
  {
    "start": "125000",
    "end": "163000"
  },
  {
    "text": "- So all your metadata is basically \nstoring RDS,",
    "start": "125228",
    "end": "127625"
  },
  {
    "text": "and you keep updating it to the flow? \n- Yes, correct.",
    "start": "127625",
    "end": "130644"
  },
  {
    "text": "We have a second work manager Lambda \nthat basically ",
    "start": "130644",
    "end": "134573"
  },
  {
    "text": "reads information about \nthe process files ",
    "start": "134573",
    "end": "136980"
  },
  {
    "text": "and then does like a fanout architecture \nof invoking many, many Lambdas",
    "start": "136980",
    "end": "142250"
  },
  {
    "text": "that then upload it to the networks.",
    "start": "142250",
    "end": "144829"
  },
  {
    "text": "In total we have over 100 networks \nwe upload data to.",
    "start": "144829",
    "end": "148931"
  },
  {
    "text": "Once these Lambdas are done, \nthey update back through an SQS queue",
    "start": "148932",
    "end": "154335"
  },
  {
    "text": "and this gets updated back \nto the database.",
    "start": "154335",
    "end": "157360"
  },
  {
    "text": "- Some status like 'process \nthis file.'",
    "start": "157360",
    "end": "159373"
  },
  {
    "text": "- Correct and if it needs to be retried \nand stuff like that.",
    "start": "159373",
    "end": "162506"
  },
  {
    "text": "- So this looks like a huge system, \n250 billion requests per day ",
    "start": "162506",
    "end": "166685"
  },
  {
    "start": "163000",
    "end": "261000"
  },
  {
    "text": "I assume you had some \nchallenges with it?",
    "start": "167262",
    "end": "169301"
  },
  {
    "text": "- Yeah, so I think the main,",
    "start": "169301",
    "end": "170728"
  },
  {
    "text": "the three things that are really \ninteresting about the system",
    "start": "170729",
    "end": "172997"
  },
  {
    "text": "are the following:",
    "start": "172997",
    "end": "174265"
  },
  {
    "text": "One is scale, the other one is \nrate limiting,",
    "start": "174266",
    "end": "178048"
  },
  {
    "text": "which is something surprising, \nwe didn't expect that we'd have to do.",
    "start": "178430",
    "end": "182801"
  },
  {
    "text": "And the last one which everybody \nis worried about always, is cost.",
    "start": "182802",
    "end": "186397"
  },
  {
    "text": "- Okay, so obviously 250 billion \nevents a day,",
    "start": "186397",
    "end": "189465"
  },
  {
    "text": "scale is very, very important.\nLet's talk about the scale of the system.",
    "start": "189465",
    "end": "192797"
  },
  {
    "text": "- Okay, so our top day ever, \nwe had 55 terabytes of data.",
    "start": "192797",
    "end": "197446"
  },
  {
    "text": "On that day we got \n17 million files ",
    "start": "197447",
    "end": "201172"
  },
  {
    "text": "and we had about 30 million \nLambda invocations.",
    "start": "202003",
    "end": "205744"
  },
  {
    "text": "- This is one day? \n- Yeah, in one day.",
    "start": "205744",
    "end": "207560"
  },
  {
    "text": "And the system basically managed it \nwithout any problems.",
    "start": "207560",
    "end": "210609"
  },
  {
    "text": "We were constantly following it \nand just surprised at how well it worked.",
    "start": "210609",
    "end": "213730"
  },
  {
    "text": "Some of the... \nin some minutes we had",
    "start": "213730",
    "end": "216698"
  },
  {
    "text": "something around like 3,000 Lambdas \nup in the air ",
    "start": "216698",
    "end": "219543"
  },
  {
    "text": "and concurrently running. \n- Okay.",
    "start": "219543",
    "end": "221652"
  },
  {
    "text": "- The interesting thing about it is that \non a normal day,",
    "start": "221652",
    "end": "225875"
  },
  {
    "text": "the lowest hour in the day has about \none terabyte of data,",
    "start": "225875",
    "end": "230066"
  },
  {
    "text": "but the peak hours have about \nsix terabytes of data.",
    "start": "230066",
    "end": "234708"
  },
  {
    "text": "So the system has to breath up and down \nas the data comes in ",
    "start": "234708",
    "end": "238038"
  },
  {
    "text": "and basically scale up and down \nthroughout the day constantly.",
    "start": "238038",
    "end": "241017"
  },
  {
    "text": "- Do you need to do anything \nto scale it up, scale it down?",
    "start": "241018",
    "end": "244043"
  },
  {
    "text": "- This is really the nice thing \nabout it, ",
    "start": "244043",
    "end": "245847"
  },
  {
    "text": "so because of the serverless Lambda \nfunction architecture, ",
    "start": "245848",
    "end": "249551"
  },
  {
    "text": "the system basically does it on its own, \nwe just invoke a lot of Lambdas ",
    "start": "249551",
    "end": "252881"
  },
  {
    "text": "and it scales up and as the data \ndwindles down, ",
    "start": "252881",
    "end": "256299"
  },
  {
    "text": "the amount of invocations go down. \nWe pretty much get it for free. ",
    "start": "256300",
    "end": "261039"
  },
  {
    "start": "261000",
    "end": "329000"
  },
  {
    "text": "- Out of the box? \n- Yeah.",
    "start": "261040",
    "end": "262096"
  },
  {
    "text": "- So I assume with 3,000 Lambdas \ninvocated at the same time ",
    "start": "262096",
    "end": "264900"
  },
  {
    "text": "rate limiting can be a challenge \nboth internally and externally?",
    "start": "264900",
    "end": "268403"
  },
  {
    "text": "Can you tell us about what you did \nto prevent those challenges?",
    "start": "268403",
    "end": "272133"
  },
  {
    "text": "- So originally, we didn't think \nthat's an issue,",
    "start": "272133",
    "end": "274546"
  },
  {
    "text": "but we got some emails from \nsome of our partners that,",
    "start": "274546",
    "end": "277789"
  },
  {
    "text": "\"Guys, what are you doing, \nyou're killing our servers.\"",
    "start": "277789",
    "end": "279874"
  },
  {
    "text": "And we started checking \nand obviously, ",
    "start": "279874",
    "end": "281809"
  },
  {
    "text": "we could handle any burst of data \nthat would come in -",
    "start": "281809",
    "end": "284236"
  },
  {
    "text": "we'd automatically just handle it.\nBut the world doesn't work like this.",
    "start": "284236",
    "end": "287535"
  },
  {
    "text": "So, some of the systems there \nthat you send so much data,",
    "start": "287536",
    "end": "291055"
  },
  {
    "text": "it's kind of like running a DDoS attack \nagainst them.",
    "start": "291055",
    "end": "293311"
  },
  {
    "text": "So we had to do something \nand just to be good neighbors,",
    "start": "293311",
    "end": "296918"
  },
  {
    "text": "and we introduced a rate limiting \nmechanism. ",
    "start": "296918",
    "end": "300170"
  },
  {
    "text": "So the way it works is, we have some \nsmarts in this work manager Lambda,",
    "start": "300170",
    "end": "304466"
  },
  {
    "text": "it basically invokes a lot of Lambdas, \nso it needs to know...",
    "start": "304466",
    "end": "307864"
  },
  {
    "text": "Yeah.",
    "start": "307864",
    "end": "308740"
  },
  {
    "text": "So it makes some intelligent decisions \nbased on the size of the files",
    "start": "308740",
    "end": "313278"
  },
  {
    "text": "and the more of the events in them \nand so forth.",
    "start": "313278",
    "end": "315138"
  },
  {
    "text": "And we could pretty much rate limit \non anything we want ",
    "start": "315138",
    "end": "319226"
  },
  {
    "text": "that really important to our partners. \n- Such as?",
    "start": "319226",
    "end": "321420"
  },
  {
    "text": "- We can limit on megabits \nper second,",
    "start": "321420",
    "end": "324065"
  },
  {
    "text": "the amount of http connections open, \nnumber of requests,",
    "start": "324065",
    "end": "327926"
  },
  {
    "text": "and a few other things like that.",
    "start": "327926",
    "end": "329745"
  },
  {
    "start": "329000",
    "end": "385000"
  },
  {
    "text": "- And can you actually limit those \nspecific networks?",
    "start": "329745",
    "end": "331978"
  },
  {
    "text": "- Yeah, so that's pretty much \nconfigured per network",
    "start": "331978",
    "end": "334493"
  },
  {
    "text": "and then we adhere to the limits \nthat we set.",
    "start": "334493",
    "end": "337266"
  },
  {
    "text": "So for example, if the limit, \nwe have one  network that limits...",
    "start": "337266",
    "end": "340703"
  },
  {
    "text": "we set a limit for 250 megabits \nper second",
    "start": "340704",
    "end": "343284"
  },
  {
    "text": "so that if we get more data than that \nit will just stay in the queue and wait",
    "start": "343284",
    "end": "348229"
  },
  {
    "text": "and then we'll just gradually \nsend it out.",
    "start": "348229",
    "end": "350522"
  },
  {
    "text": "The other interesting thing about it \nis that we had our own DDoS attack.",
    "start": "350522",
    "end": "354686"
  },
  {
    "text": "So, as the number of invocations \nof Lambdas grew,",
    "start": "354686",
    "end": "357564"
  },
  {
    "text": "originally we were writing back \nto the Postgres database,",
    "start": "357564",
    "end": "361009"
  },
  {
    "text": "but we ran into a limit of the number \nof connections ",
    "start": "361009",
    "end": "363624"
  },
  {
    "text": "you can open against a database \nand starting to have... ",
    "start": "363624",
    "end": "366573"
  },
  {
    "text": "it became a choke point. ",
    "start": "366573",
    "end": "367865"
  },
  {
    "text": "So we introduced another queue \nas a buffer",
    "start": "367865",
    "end": "370451"
  },
  {
    "text": "that all the Lambdas report \nback to the queue.",
    "start": "370451",
    "end": "372843"
  },
  {
    "text": "And we have one Lambda that picks it up \nin batches of events and writes it...",
    "start": "372843",
    "end": "377714"
  },
  {
    "text": "- And you don't need it in real-time, \nit can wait the for as long ...",
    "start": "377714",
    "end": "379964"
  },
  {
    "text": "- Usually it's a few seconds, \nbut it's fine, ",
    "start": "379964",
    "end": "382490"
  },
  {
    "text": "we just need an update if the file \nwas successful or not.",
    "start": "382490",
    "end": "385293"
  },
  {
    "start": "385000",
    "end": "544000"
  },
  {
    "text": "- Okay, so let's talk about costs, \nso I assume that size of a system,",
    "start": "385293",
    "end": "389231"
  },
  {
    "text": "many of our customers are looking \nat it and say,",
    "start": "389231",
    "end": "391039"
  },
  {
    "text": "\"This is pretty, this is probably \npretty expensive.\"",
    "start": "391040",
    "end": "393893"
  },
  {
    "text": "- Right, so I think the main thing \nwe worried about ",
    "start": "393893",
    "end": "397443"
  },
  {
    "text": "as we were building the system \nis making sure ",
    "start": "397443",
    "end": "399762"
  },
  {
    "text": "we have costs under control.",
    "start": "399762",
    "end": "401238"
  },
  {
    "text": "The system today costs us about \n$1,000 a day",
    "start": "401238",
    "end": "405116"
  },
  {
    "text": "so that's around $300,000 a year.",
    "start": "405116",
    "end": "408895"
  },
  {
    "text": "And as we were building this we really \nwanted to be in control of the costs",
    "start": "408895",
    "end": "414125"
  },
  {
    "text": "so we started measuring cost.",
    "start": "414125",
    "end": "416270"
  },
  {
    "text": "So the way we measure it, \nwe started out by ",
    "start": "416270",
    "end": "419500"
  },
  {
    "text": "the costs were about $7.7 \nper billion events ",
    "start": "419500",
    "end": "423866"
  },
  {
    "text": "and we had a goal to reduce this. \nIt took us about a year,",
    "start": "423866",
    "end": "428264"
  },
  {
    "text": "today we are at about $4.25 \nper billion events ",
    "start": "428265",
    "end": "432504"
  },
  {
    "text": "and still going.",
    "start": "432504",
    "end": "434047"
  },
  {
    "text": "- So can you tell us a bit, how did you \nget from this $7.7 to $4.25?",
    "start": "434047",
    "end": "439020"
  },
  {
    "text": "- Okay, so the nice thing about Lambda \nas opposed to other architecture",
    "start": "439020",
    "end": "442167"
  },
  {
    "text": "where you're paying for the servers \nand then if you improve your code,",
    "start": "442167",
    "end": "444979"
  },
  {
    "text": "you're still paying for the servers.",
    "start": "444980",
    "end": "446450"
  },
  {
    "text": "With Lambdas, the minute you \nimprove your code,",
    "start": "446450",
    "end": "450268"
  },
  {
    "text": "and the Lambdas are more efficient, \nit immediately translates to cost savings.",
    "start": "450269",
    "end": "453903"
  },
  {
    "text": "So we had a few initiatives \nto reduce cost,",
    "start": "453903",
    "end": "458786"
  },
  {
    "text": "one of them for example is that \nwe realized there is a trade-off between",
    "start": "458786",
    "end": "462203"
  },
  {
    "text": "how long the Lambda function runs,\nand the memory footprint.",
    "start": "462203",
    "end": "465669"
  },
  {
    "text": "If you reduce the memory footprint, \nyou save on the cost.",
    "start": "465669",
    "end": "469550"
  },
  {
    "text": "You might increase the length \nof the time it runs,",
    "start": "469550",
    "end": "472763"
  },
  {
    "text": "but it might still be worthwhile.\ndoing this...right.",
    "start": "472763",
    "end": "475952"
  },
  {
    "text": "So it's kind of like an optimization \nproblem.",
    "start": "475952",
    "end": "478211"
  },
  {
    "text": "So we wrote a simulator that could \nsimulate different loads on the Lambdas",
    "start": "478211",
    "end": "482919"
  },
  {
    "text": "with different memory sizes.",
    "start": "482919",
    "end": "484285"
  },
  {
    "text": "We experimented with it and run \na few hundred different combinations,",
    "start": "484285",
    "end": "488528"
  },
  {
    "text": "and found the exact sweet spot \nof where it's gonna be optimized",
    "start": "488528",
    "end": "493210"
  },
  {
    "text": "and then improved our code so it'll work \nexactly in that sweet spot,",
    "start": "493210",
    "end": "496742"
  },
  {
    "text": "and that drove the cost down.",
    "start": "496743",
    "end": "498415"
  },
  {
    "text": "Another thing we did is we played around \nwith the number of http connections,",
    "start": "498415",
    "end": "502636"
  },
  {
    "text": "or the request we send \nin each connection.",
    "start": "502636",
    "end": "505832"
  },
  {
    "text": "And we found that with, you know, \nthe sweet spot there",
    "start": "505832",
    "end": "508521"
  },
  {
    "text": "that, you know, if we send \nmore connections",
    "start": "508521",
    "end": "510416"
  },
  {
    "text": "we're waiting for all of them \nto complete.",
    "start": "510416",
    "end": "512998"
  },
  {
    "text": "And it's gonna take maybe longer, \nbut the total cost may be lower,",
    "start": "512998",
    "end": "516766"
  },
  {
    "text": "'cause we're sending more data \nat the same time.",
    "start": "516767",
    "end": "519521"
  },
  {
    "text": "- So we had a very interesting \nsystem here",
    "start": "519522",
    "end": "521396"
  },
  {
    "text": "with a huge scale of 250 billion \nevents per day.",
    "start": "521396",
    "end": "524897"
  },
  {
    "text": "Rate limits that actually solve\nsome of the problems you had",
    "start": "524897",
    "end": "527946"
  },
  {
    "text": "during the implementation of the system.\nAnd of course, the cost issue",
    "start": "527947",
    "end": "531421"
  },
  {
    "text": "that you solve very nicely. \nThank you very much Opher",
    "start": "531421",
    "end": "534430"
  },
  {
    "text": "and thank you very much for watching \n'This is My Architecture.'",
    "start": "534430",
    "end": "537173"
  }
]