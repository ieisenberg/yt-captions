[
  {
    "text": "In this video, we will see",
    "start": "333",
    "end": "1767"
  },
  {
    "text": "how Apache Flink can support",
    "start": "1768",
    "end": "3603"
  },
  {
    "text": "stateful stream",
    "start": "3603",
    "end": "4838"
  },
  {
    "text": "processing in a resilient way,",
    "start": "4838",
    "end": "7574"
  },
  {
    "text": "and we will follow the lifecycle",
    "start": "7574",
    "end": "9375"
  },
  {
    "text": "of your application",
    "start": "9376",
    "end": "10143"
  },
  {
    "text": "by introducing",
    "start": "10143",
    "end": "10844"
  },
  {
    "text": "some of the fundamental elements",
    "start": "10844",
    "end": "12812"
  },
  {
    "text": "of the Flink architecture.",
    "start": "12812",
    "end": "15782"
  },
  {
    "text": "In the previous video,",
    "start": "20053",
    "end": "21121"
  },
  {
    "text": "we have seen",
    "start": "21121",
    "end": "21888"
  },
  {
    "text": "how the logical graph of the application",
    "start": "21888",
    "end": "24691"
  },
  {
    "text": "is resolved into the physical graph",
    "start": "24691",
    "end": "27093"
  },
  {
    "text": "that actually does",
    "start": "27093",
    "end": "28228"
  },
  {
    "text": "the parallel processing of the data.",
    "start": "28228",
    "end": "31231"
  },
  {
    "text": "But what happens",
    "start": "31231",
    "end": "32032"
  },
  {
    "text": "if something goes wrong,",
    "start": "32032",
    "end": "33400"
  },
  {
    "text": "if the application crashes, or",
    "start": "33400",
    "end": "35402"
  },
  {
    "text": "if an hardware component fails?",
    "start": "35402",
    "end": "38405"
  },
  {
    "text": "We have seen",
    "start": "38438",
    "end": "38938"
  },
  {
    "text": "how the application",
    "start": "38938",
    "end": "39839"
  },
  {
    "text": "may keep state over time",
    "start": "39839",
    "end": "42042"
  },
  {
    "text": "the count of trips",
    "start": "42042",
    "end": "43309"
  },
  {
    "text": "to airport, for example.",
    "start": "43309",
    "end": "45177"
  },
  {
    "text": "And we have seen",
    "start": "45178",
    "end": "45979"
  },
  {
    "text": "how Flink sends all the records",
    "start": "45979",
    "end": "48615"
  },
  {
    "text": "with the same key,",
    "start": "48615",
    "end": "49816"
  },
  {
    "text": "or trips to the same airports,",
    "start": "49816",
    "end": "51785"
  },
  {
    "text": "to the same processing node.",
    "start": "51785",
    "end": "54054"
  },
  {
    "text": "This way,",
    "start": "54054",
    "end": "54687"
  },
  {
    "text": "we may keep",
    "start": "54687",
    "end": "55789"
  },
  {
    "text": "the state of a particular key,",
    "start": "55789",
    "end": "58224"
  },
  {
    "text": "or the count of the trips",
    "start": "58224",
    "end": "59993"
  },
  {
    "text": "to a particular airport stored directly",
    "start": "59993",
    "end": "63496"
  },
  {
    "text": "on the node that is receiving all the",
    "start": "64030",
    "end": "66566"
  },
  {
    "text": "records of that key.",
    "start": "66566",
    "end": "67567"
  },
  {
    "text": "We also know that",
    "start": "70203",
    "end": "71071"
  },
  {
    "text": "Flink distribute the application",
    "start": "71071",
    "end": "73306"
  },
  {
    "text": "or can distribute",
    "start": "73306",
    "end": "75108"
  },
  {
    "text": "the application across multiple machines.",
    "start": "75108",
    "end": "78244"
  },
  {
    "text": "And this is the way",
    "start": "78511",
    "end": "79245"
  },
  {
    "text": "Flink can scale horizontally.",
    "start": "79245",
    "end": "80980"
  },
  {
    "text": "Adding more smaller machine.",
    "start": "80980",
    "end": "83983"
  },
  {
    "text": "And let's pretend, for example,",
    "start": "85118",
    "end": "86985"
  },
  {
    "text": "that our application",
    "start": "86986",
    "end": "88221"
  },
  {
    "text": "is running on a cluster of four machine.",
    "start": "88221",
    "end": "91224"
  },
  {
    "text": "The state is stored in the memory",
    "start": "91991",
    "end": "94093"
  },
  {
    "text": "or on the disk of the nodes",
    "start": "94094",
    "end": "96429"
  },
  {
    "text": "that are actually",
    "start": "96429",
    "end": "97297"
  },
  {
    "text": "calculating the trip count.",
    "start": "97297",
    "end": "99132"
  },
  {
    "text": "And something very important",
    "start": "99132",
    "end": "101201"
  },
  {
    "text": "to understand",
    "start": "101201",
    "end": "102435"
  },
  {
    "text": "is that the state is per subtask.",
    "start": "102435",
    "end": "105738"
  },
  {
    "text": "So each subtask has its own",
    "start": "106306",
    "end": "109576"
  },
  {
    "text": "local state or the state of the keys.",
    "start": "109809",
    "end": "112946"
  },
  {
    "text": "The trip to the airport that that subtask",
    "start": "113546",
    "end": "116648"
  },
  {
    "text": "is handling,",
    "start": "116883",
    "end": "118651"
  },
  {
    "text": "and the state is not replicated",
    "start": "118651",
    "end": "121554"
  },
  {
    "text": "across subtasks or across the cluster.",
    "start": "121554",
    "end": "124557"
  },
  {
    "text": "Not replicating the state makes Flink",
    "start": "125758",
    "end": "127727"
  },
  {
    "text": "more efficient.",
    "start": "127727",
    "end": "129362"
  },
  {
    "text": "First of all,",
    "start": "129362",
    "end": "130063"
  },
  {
    "text": "because state can be partition.",
    "start": "130063",
    "end": "131664"
  },
  {
    "text": "So if you need to have more state",
    "start": "131664",
    "end": "134134"
  },
  {
    "text": "to hold more state,",
    "start": "134134",
    "end": "135168"
  },
  {
    "text": "you just add more machines.",
    "start": "135168",
    "end": "137569"
  },
  {
    "text": "But also because this reduce latency",
    "start": "137570",
    "end": "140373"
  },
  {
    "text": "if you are to increase the count",
    "start": "140373",
    "end": "142342"
  },
  {
    "text": "accessing an external database,",
    "start": "142342",
    "end": "144110"
  },
  {
    "text": "this might take only a few milliseconds",
    "start": "144110",
    "end": "146613"
  },
  {
    "text": "for each record, but latency adds up.",
    "start": "146613",
    "end": "149516"
  },
  {
    "text": "And if you want to scale",
    "start": "149516",
    "end": "150650"
  },
  {
    "text": "to big throughput",
    "start": "150650",
    "end": "152452"
  },
  {
    "text": "and process",
    "start": "152452",
    "end": "153119"
  },
  {
    "text": "millions of records per second,",
    "start": "153119",
    "end": "154921"
  },
  {
    "text": "the latency impact",
    "start": "154921",
    "end": "156122"
  },
  {
    "text": "would be very important.",
    "start": "156122",
    "end": "157724"
  },
  {
    "text": "And most importantly,",
    "start": "157724",
    "end": "159625"
  },
  {
    "text": "this would not scale.",
    "start": "159626",
    "end": "160693"
  },
  {
    "text": "But without replication",
    "start": "161828",
    "end": "164130"
  },
  {
    "text": "we might have a problem.",
    "start": "164130",
    "end": "165431"
  },
  {
    "text": "So if one of the nodes crashes",
    "start": "165431",
    "end": "168401"
  },
  {
    "text": "the state health on the particular",
    "start": "168601",
    "end": "171604"
  },
  {
    "text": "machine that we lost is also lost.",
    "start": "171604",
    "end": "174607"
  },
  {
    "text": "We literally",
    "start": "174807",
    "end": "175742"
  },
  {
    "text": "lost the count of the trip to the airport",
    "start": "175742",
    "end": "178945"
  },
  {
    "text": "that were handled by the failed node.",
    "start": "178945",
    "end": "181948"
  },
  {
    "text": "And if we replace node",
    "start": "182549",
    "end": "184717"
  },
  {
    "text": "and restart the application,",
    "start": "184717",
    "end": "185952"
  },
  {
    "text": "the count for those airport",
    "start": "185952",
    "end": "188054"
  },
  {
    "text": "will just restart from zero.",
    "start": "188054",
    "end": "190123"
  },
  {
    "text": "The output is no longer correct",
    "start": "190123",
    "end": "192358"
  },
  {
    "text": "and our application",
    "start": "192358",
    "end": "193993"
  },
  {
    "text": "is not really resilient.",
    "start": "193993",
    "end": "196996"
  },
  {
    "text": "Similarly, what happens",
    "start": "197864",
    "end": "199199"
  },
  {
    "text": "if we need to",
    "start": "199199",
    "end": "199933"
  },
  {
    "text": "restart or redeploy",
    "start": "199933",
    "end": "201768"
  },
  {
    "text": "the application to a different cluster?",
    "start": "201768",
    "end": "203636"
  },
  {
    "text": "For example, to scale?",
    "start": "203636",
    "end": "206639"
  },
  {
    "text": "If we shut down the entire application,",
    "start": "206773",
    "end": "208942"
  },
  {
    "text": "we shut down",
    "start": "208942",
    "end": "209676"
  },
  {
    "text": "all the processing nodes",
    "start": "209676",
    "end": "211110"
  },
  {
    "text": "and move them to different nodes,",
    "start": "211110",
    "end": "212946"
  },
  {
    "text": "for example, or the state of the nodes",
    "start": "212946",
    "end": "216683"
  },
  {
    "text": "is lost.",
    "start": "217817",
    "end": "218885"
  },
  {
    "text": "And when the application restarts,",
    "start": "218885",
    "end": "220920"
  },
  {
    "text": "all count will restart from zero.",
    "start": "220920",
    "end": "223022"
  },
  {
    "text": "And again after restarting,",
    "start": "223022",
    "end": "224891"
  },
  {
    "text": "our results are no longer correct.",
    "start": "224891",
    "end": "227160"
  },
  {
    "text": "We lost all the counts",
    "start": "227160",
    "end": "229095"
  },
  {
    "text": "and if Flink worked this way,",
    "start": "229095",
    "end": "231331"
  },
  {
    "text": "it would not be able to provide",
    "start": "231331",
    "end": "233131"
  },
  {
    "text": "any guarantees of correctness.",
    "start": "233132",
    "end": "236135"
  },
  {
    "text": "But do we know that Flink",
    "start": "236135",
    "end": "237370"
  },
  {
    "text": "promises exactly once semantics,",
    "start": "237370",
    "end": "240373"
  },
  {
    "text": "or more precisely, exactly once?",
    "start": "240840",
    "end": "243443"
  },
  {
    "text": "State consistency guarantees",
    "start": "243443",
    "end": "246446"
  },
  {
    "text": "the promises that each trip",
    "start": "246813",
    "end": "248881"
  },
  {
    "text": "is never counted twice or not counted,",
    "start": "248881",
    "end": "252452"
  },
  {
    "text": "even in case of failure",
    "start": "253019",
    "end": "254821"
  },
  {
    "text": "or application restart or redeployment.",
    "start": "254821",
    "end": "257824"
  },
  {
    "text": "So how does Flink provide",
    "start": "257857",
    "end": "259958"
  },
  {
    "text": "these guarantees",
    "start": "259959",
    "end": "260860"
  },
  {
    "text": "to prevent inconsistency",
    "start": "262462",
    "end": "263963"
  },
  {
    "text": "in case of failure?",
    "start": "263963",
    "end": "265231"
  },
  {
    "text": "Flink use a mechanism",
    "start": "265231",
    "end": "267000"
  },
  {
    "text": "called checkpointing.",
    "start": "267000",
    "end": "270003"
  },
  {
    "text": "While the application is running",
    "start": "270770",
    "end": "272371"
  },
  {
    "text": "and data is flowing,",
    "start": "272372",
    "end": "273806"
  },
  {
    "text": "Flink periodically saves the application",
    "start": "273806",
    "end": "276876"
  },
  {
    "text": "state or checkpoint it.",
    "start": "276876",
    "end": "279879"
  },
  {
    "text": "The state is copied to",
    "start": "280413",
    "end": "282382"
  },
  {
    "text": "an external persistent storage",
    "start": "282382",
    "end": "284584"
  },
  {
    "text": "like Amazon S3.",
    "start": "284584",
    "end": "286819"
  },
  {
    "text": "This is the storage",
    "start": "286819",
    "end": "288254"
  },
  {
    "text": "that is intrinsically redundant",
    "start": "288254",
    "end": "290690"
  },
  {
    "text": "and replicated, but most importantly,",
    "start": "290690",
    "end": "293726"
  },
  {
    "text": "a storage that is external to the machine",
    "start": "294160",
    "end": "297230"
  },
  {
    "text": "they are running.",
    "start": "297230",
    "end": "298031"
  },
  {
    "text": "The application",
    "start": "298031",
    "end": "299399"
  },
  {
    "text": "and checkpoints are a copy of the state.",
    "start": "299399",
    "end": "302702"
  },
  {
    "text": "The processing nodes are still",
    "start": "303236",
    "end": "305070"
  },
  {
    "text": "using the local state",
    "start": "305071",
    "end": "306372"
  },
  {
    "text": "to keep the counting.",
    "start": "306372",
    "end": "308608"
  },
  {
    "text": "Also, checkpoints are a snapshot",
    "start": "308608",
    "end": "311611"
  },
  {
    "text": "of the state",
    "start": "311611",
    "end": "312811"
  },
  {
    "text": "of the entire application",
    "start": "312812",
    "end": "314247"
  },
  {
    "text": "at a consistent point in time.",
    "start": "314247",
    "end": "317250"
  },
  {
    "text": "Flink executes checkpoints automatically",
    "start": "317550",
    "end": "319918"
  },
  {
    "text": "at a fixed period.",
    "start": "319919",
    "end": "321454"
  },
  {
    "text": "You can configure this period,",
    "start": "321454",
    "end": "322955"
  },
  {
    "text": "but these are usually quite frequent.",
    "start": "322955",
    "end": "324524"
  },
  {
    "text": "Let's say, for example, every minute.",
    "start": "324524",
    "end": "326858"
  },
  {
    "text": "But to provide",
    "start": "329162",
    "end": "330362"
  },
  {
    "text": "exactly once consistency guarantees",
    "start": "330363",
    "end": "333333"
  },
  {
    "text": "just copying",
    "start": "333533",
    "end": "334233"
  },
  {
    "text": "the state of the stateful operators",
    "start": "334233",
    "end": "337236"
  },
  {
    "text": "or the trip counts in our case",
    "start": "337470",
    "end": "339572"
  },
  {
    "text": "is not really sufficient",
    "start": "339572",
    "end": "341507"
  },
  {
    "text": "because the state,",
    "start": "341507",
    "end": "342741"
  },
  {
    "text": "the application",
    "start": "342742",
    "end": "343609"
  },
  {
    "text": "also has some hidden state",
    "start": "343609",
    "end": "345611"
  },
  {
    "text": "that has to be saved.",
    "start": "345611",
    "end": "347680"
  },
  {
    "text": "In particular,",
    "start": "347680",
    "end": "348613"
  },
  {
    "text": "Flink has to save the point.",
    "start": "348614",
    "end": "351050"
  },
  {
    "text": "The application is reading",
    "start": "351050",
    "end": "352685"
  },
  {
    "text": "from the source system at the moment.",
    "start": "352685",
    "end": "355955"
  },
  {
    "text": "The checkpoint was taken.",
    "start": "355955",
    "end": "358124"
  },
  {
    "text": "If we are reading from a Kafka topic,",
    "start": "358124",
    "end": "360126"
  },
  {
    "text": "for example,",
    "start": "360126",
    "end": "360893"
  },
  {
    "text": "these pointers are the offset",
    "start": "360893",
    "end": "363730"
  },
  {
    "text": "of the partition",
    "start": "363730",
    "end": "365031"
  },
  {
    "text": "and we also need to",
    "start": "365031",
    "end": "367100"
  },
  {
    "text": "save the partition assignment",
    "start": "367100",
    "end": "369302"
  },
  {
    "text": "to each subtask",
    "start": "369302",
    "end": "370703"
  },
  {
    "text": "to be able to restore the application",
    "start": "370703",
    "end": "372638"
  },
  {
    "text": "exactly as it was at the checkpoint.",
    "start": "372638",
    "end": "375641"
  },
  {
    "text": "Some sinks may also have state,",
    "start": "377510",
    "end": "380380"
  },
  {
    "text": "for example,",
    "start": "380380",
    "end": "380980"
  },
  {
    "text": "some scenes that are doing",
    "start": "380980",
    "end": "382048"
  },
  {
    "text": "micro batching",
    "start": "382048",
    "end": "383082"
  },
  {
    "text": "while writing to the destination system,",
    "start": "383082",
    "end": "385318"
  },
  {
    "text": "and this is a technique",
    "start": "385318",
    "end": "386386"
  },
  {
    "text": "to improve",
    "start": "386386",
    "end": "387586"
  },
  {
    "text": "throughput,",
    "start": "387587",
    "end": "388421"
  },
  {
    "text": "may keep the buffer",
    "start": "388421",
    "end": "389856"
  },
  {
    "text": "data into the Flink state,",
    "start": "389856",
    "end": "391624"
  },
  {
    "text": "the source",
    "start": "392592",
    "end": "393326"
  },
  {
    "text": "partition, and the sync buffer data.",
    "start": "393326",
    "end": "396595"
  },
  {
    "text": "They are all part of the Flink",
    "start": "396629",
    "end": "398498"
  },
  {
    "text": "application state,",
    "start": "398498",
    "end": "399599"
  },
  {
    "text": "along with",
    "start": "399599",
    "end": "401134"
  },
  {
    "text": "the state",
    "start": "401134",
    "end": "402435"
  },
  {
    "text": "of the actually stateful operation.",
    "start": "402435",
    "end": "404837"
  },
  {
    "text": "Like the trip count,",
    "start": "404837",
    "end": "407573"
  },
  {
    "text": "and the checkpoint mechanism",
    "start": "407573",
    "end": "409609"
  },
  {
    "text": "takes a consistent",
    "start": "409609",
    "end": "410977"
  },
  {
    "text": "snapshot of all of this",
    "start": "410977",
    "end": "413612"
  },
  {
    "text": "to the remote persistent storage.",
    "start": "413613",
    "end": "416315"
  },
  {
    "text": "And Flink does it automatically",
    "start": "416315",
    "end": "419318"
  },
  {
    "text": "and periodically retaining at least",
    "start": "419318",
    "end": "422988"
  },
  {
    "text": "the last successful checkpoint.",
    "start": "423222",
    "end": "426224"
  },
  {
    "text": "Something interesting to be noted is",
    "start": "426692",
    "end": "429662"
  },
  {
    "text": "Flink doesn't use",
    "start": "430196",
    "end": "431397"
  },
  {
    "text": "a naive",
    "start": "431397",
    "end": "432198"
  },
  {
    "text": "stop the word approach",
    "start": "432198",
    "end": "434133"
  },
  {
    "text": "to take the snapshot,",
    "start": "434133",
    "end": "435568"
  },
  {
    "text": "something like freeze",
    "start": "435568",
    "end": "437436"
  },
  {
    "text": "the application processing,",
    "start": "437437",
    "end": "439205"
  },
  {
    "text": "take the copy of the state,",
    "start": "439205",
    "end": "441440"
  },
  {
    "text": "and then restart.",
    "start": "441441",
    "end": "443109"
  },
  {
    "text": "This would be easy to implement,",
    "start": "443109",
    "end": "445545"
  },
  {
    "text": "but very inefficient.",
    "start": "445545",
    "end": "447246"
  },
  {
    "text": "Instead, Flink checkpoint",
    "start": "447246",
    "end": "448981"
  },
  {
    "text": "have been a synchronously,",
    "start": "448981",
    "end": "451317"
  },
  {
    "text": "so data processing is not really stopped",
    "start": "451317",
    "end": "453586"
  },
  {
    "text": "except for brief moments.",
    "start": "453586",
    "end": "456422"
  },
  {
    "text": "And we will deep dive in the Flink",
    "start": "456422",
    "end": "459525"
  },
  {
    "text": "checkpoint mechanism later in the series.",
    "start": "459525",
    "end": "462528"
  },
  {
    "text": "For now, let's switch to see how",
    "start": "462829",
    "end": "465531"
  },
  {
    "text": "Flink uses checkpoints to",
    "start": "465531",
    "end": "468134"
  },
  {
    "text": "restore the state.",
    "start": "468134",
    "end": "469368"
  },
  {
    "text": "So now we have a snapshot",
    "start": "471971",
    "end": "474607"
  },
  {
    "text": "of the application state",
    "start": "474607",
    "end": "476509"
  },
  {
    "text": "in a safe place",
    "start": "476509",
    "end": "477643"
  },
  {
    "text": "the persistent remote storage.",
    "start": "477643",
    "end": "480346"
  },
  {
    "text": "So what happens",
    "start": "480346",
    "end": "481214"
  },
  {
    "text": "if we need to restart the application",
    "start": "481214",
    "end": "483181"
  },
  {
    "text": "with that state.",
    "start": "483182",
    "end": "485151"
  },
  {
    "text": "So first Flink",
    "start": "485151",
    "end": "486953"
  },
  {
    "text": "deploys all subtasks",
    "start": "486953",
    "end": "488654"
  },
  {
    "text": "to the different nodes.",
    "start": "488654",
    "end": "490388"
  },
  {
    "text": "Then it restored the states",
    "start": "490389",
    "end": "493125"
  },
  {
    "text": "of all operator",
    "start": "493125",
    "end": "495428"
  },
  {
    "text": "from the latest checkpoint,",
    "start": "495428",
    "end": "497430"
  },
  {
    "text": "including the state of the sources",
    "start": "497430",
    "end": "499866"
  },
  {
    "text": "and including,",
    "start": "499866",
    "end": "501534"
  },
  {
    "text": "if present,",
    "start": "501534",
    "end": "502468"
  },
  {
    "text": "any buffer data in the sink",
    "start": "502468",
    "end": "504003"
  },
  {
    "text": "or any other saved state.",
    "start": "504003",
    "end": "507005"
  },
  {
    "text": "And finally, the application can restart.",
    "start": "507807",
    "end": "510810"
  },
  {
    "text": "Note that",
    "start": "511677",
    "end": "512844"
  },
  {
    "text": "storing not just the count of",
    "start": "512845",
    "end": "516081"
  },
  {
    "text": "the trip count,",
    "start": "516082",
    "end": "516915"
  },
  {
    "text": "but also the position",
    "start": "516916",
    "end": "518617"
  },
  {
    "text": "and the partition assignment",
    "start": "518618",
    "end": "520253"
  },
  {
    "text": "of the sources,",
    "start": "520253",
    "end": "521386"
  },
  {
    "text": "allows Flink to restart",
    "start": "521387",
    "end": "523021"
  },
  {
    "text": "exactly at the point",
    "start": "523022",
    "end": "525090"
  },
  {
    "text": "of the last checkpoint,",
    "start": "525091",
    "end": "526893"
  },
  {
    "text": "without missing any input record,",
    "start": "526893",
    "end": "529395"
  },
  {
    "text": "and without considering any record twice.",
    "start": "529395",
    "end": "532398"
  },
  {
    "text": "Practically, as we said, without counting",
    "start": "532798",
    "end": "535433"
  },
  {
    "text": "any trip twice",
    "start": "535434",
    "end": "536569"
  },
  {
    "text": "or missing any trip in the count.",
    "start": "536569",
    "end": "539571"
  },
  {
    "text": "And this is exactly the exactly once",
    "start": "539605",
    "end": "542274"
  },
  {
    "text": "consistency state",
    "start": "542275",
    "end": "543609"
  },
  {
    "text": "consistency guarantee that we mention.",
    "start": "543609",
    "end": "546512"
  },
  {
    "text": "Flink actually has two similar",
    "start": "546512",
    "end": "548514"
  },
  {
    "text": "but separate mechanism",
    "start": "548514",
    "end": "549615"
  },
  {
    "text": "for saving the state.",
    "start": "549615",
    "end": "551484"
  },
  {
    "text": "The mechanism have different goals.",
    "start": "551484",
    "end": "553519"
  },
  {
    "text": "The first one is the checkpoint",
    "start": "553519",
    "end": "555654"
  },
  {
    "text": "that we have seen so far.",
    "start": "555655",
    "end": "557890"
  },
  {
    "text": "Checkpoints are managed",
    "start": "557890",
    "end": "558991"
  },
  {
    "text": "automatically by Flink",
    "start": "558991",
    "end": "560560"
  },
  {
    "text": "and executed periodically.",
    "start": "560560",
    "end": "562628"
  },
  {
    "text": "For example, every minute.",
    "start": "562628",
    "end": "564630"
  },
  {
    "text": "Checkpoints are a fail over mechanism",
    "start": "564630",
    "end": "567633"
  },
  {
    "text": "that Flink uses",
    "start": "567633",
    "end": "568768"
  },
  {
    "text": "to automatically recover",
    "start": "568768",
    "end": "570469"
  },
  {
    "text": "the application state in case of failure.",
    "start": "570469",
    "end": "572838"
  },
  {
    "text": "The other mechanism",
    "start": "574540",
    "end": "575441"
  },
  {
    "text": "is called save points.",
    "start": "575441",
    "end": "577310"
  },
  {
    "text": "They are practically",
    "start": "577310",
    "end": "578678"
  },
  {
    "text": "on demand",
    "start": "578678",
    "end": "580112"
  },
  {
    "text": "checkpoints that trigger by the user,",
    "start": "580112",
    "end": "583082"
  },
  {
    "text": "and this is a backup mechanism",
    "start": "583583",
    "end": "585818"
  },
  {
    "text": "that Flink",
    "start": "585818",
    "end": "586385"
  },
  {
    "text": "can use",
    "start": "586385",
    "end": "586886"
  },
  {
    "text": "to restart the application from another",
    "start": "586886",
    "end": "590156"
  },
  {
    "text": "known position and state.",
    "start": "590256",
    "end": "593259"
  },
  {
    "text": "Or simply",
    "start": "593626",
    "end": "594660"
  },
  {
    "text": "you can use this to save the state",
    "start": "594660",
    "end": "596829"
  },
  {
    "text": "when you're stopping the application,",
    "start": "596829",
    "end": "598297"
  },
  {
    "text": "and then restore it",
    "start": "598297",
    "end": "599999"
  },
  {
    "text": "when you restart the application later.",
    "start": "599999",
    "end": "602101"
  },
  {
    "text": "So you can restart",
    "start": "602101",
    "end": "603336"
  },
  {
    "text": "exactly from the point where you stopped.",
    "start": "603336",
    "end": "606339"
  },
  {
    "text": "Users often schedule",
    "start": "607239",
    "end": "609141"
  },
  {
    "text": "periodic snapshot every hour,",
    "start": "609141",
    "end": "610910"
  },
  {
    "text": "every day, or whatever,",
    "start": "610910",
    "end": "612211"
  },
  {
    "text": "similarly to what they do",
    "start": "612211",
    "end": "614313"
  },
  {
    "text": "with periodic database",
    "start": "614313",
    "end": "616148"
  },
  {
    "text": "backup, for example.",
    "start": "616148",
    "end": "617850"
  },
  {
    "text": "And this is useful",
    "start": "617850",
    "end": "619584"
  },
  {
    "text": "because you will be able to restore",
    "start": "619585",
    "end": "621287"
  },
  {
    "text": "from a null point in time",
    "start": "621287",
    "end": "623522"
  },
  {
    "text": "in case something goes wrong.",
    "start": "623522",
    "end": "626459"
  },
  {
    "text": "Another difference between Savepoint",
    "start": "626459",
    "end": "628493"
  },
  {
    "text": "and checkpoint",
    "start": "628494",
    "end": "629328"
  },
  {
    "text": "is that",
    "start": "629328",
    "end": "630096"
  },
  {
    "text": "safe points are optimized",
    "start": "630096",
    "end": "631797"
  },
  {
    "text": "for portability,",
    "start": "631797",
    "end": "633865"
  },
  {
    "text": "so you can restore the save point",
    "start": "633866",
    "end": "636002"
  },
  {
    "text": "that was taken",
    "start": "636002",
    "end": "637069"
  },
  {
    "text": "with the previous Flink version",
    "start": "637069",
    "end": "639238"
  },
  {
    "text": "to a newer Flink version,",
    "start": "639238",
    "end": "641774"
  },
  {
    "text": "and these are useful",
    "start": "641774",
    "end": "642808"
  },
  {
    "text": "when you, for example,",
    "start": "642808",
    "end": "644410"
  },
  {
    "text": "have to upgrade your Flink runtime.",
    "start": "644410",
    "end": "647545"
  },
  {
    "text": "Conversely,",
    "start": "648414",
    "end": "649815"
  },
  {
    "text": "checkpoints are optimized for speed",
    "start": "649815",
    "end": "652018"
  },
  {
    "text": "and they are",
    "start": "652018",
    "end": "652585"
  },
  {
    "text": "not necessarily",
    "start": "652585",
    "end": "653386"
  },
  {
    "text": "compatible across different runtimes.",
    "start": "653386",
    "end": "656389"
  },
  {
    "text": "So we have learned how Flink runs",
    "start": "656622",
    "end": "659592"
  },
  {
    "text": "the application in power flow,",
    "start": "659592",
    "end": "662461"
  },
  {
    "text": "the physical graph,",
    "start": "662461",
    "end": "663429"
  },
  {
    "text": "and we have learned how",
    "start": "663429",
    "end": "665264"
  },
  {
    "text": "the process can be distributed across",
    "start": "665264",
    "end": "668000"
  },
  {
    "text": "multiple machines to scale horizontally.",
    "start": "668000",
    "end": "671003"
  },
  {
    "text": "Let's see how Flink deploys and runs",
    "start": "671504",
    "end": "674507"
  },
  {
    "text": "the application.",
    "start": "674807",
    "end": "675908"
  },
  {
    "text": "So Flink is a distributed",
    "start": "677977",
    "end": "679845"
  },
  {
    "text": "system",
    "start": "679845",
    "end": "680613"
  },
  {
    "text": "that can run application",
    "start": "680613",
    "end": "681946"
  },
  {
    "text": "in a cluster or multiple machine.",
    "start": "681947",
    "end": "683749"
  },
  {
    "text": "And a Flink",
    "start": "683749",
    "end": "685084"
  },
  {
    "text": "cluster is composed by one job manager",
    "start": "685084",
    "end": "688920"
  },
  {
    "text": "that is used for orchestration",
    "start": "689221",
    "end": "691190"
  },
  {
    "text": "and a number of task manager",
    "start": "691190",
    "end": "693759"
  },
  {
    "text": "that are actually doing the work.",
    "start": "693759",
    "end": "695727"
  },
  {
    "text": "They are actually processing the data.",
    "start": "695728",
    "end": "698731"
  },
  {
    "text": "The resources of the task manager",
    "start": "700199",
    "end": "702834"
  },
  {
    "text": "CPU memory are split into logical slots.",
    "start": "702835",
    "end": "706605"
  },
  {
    "text": "Slots have no physical",
    "start": "707506",
    "end": "709074"
  },
  {
    "text": "link to CPU or memory,",
    "start": "709075",
    "end": "711177"
  },
  {
    "text": "they're just logical units",
    "start": "711177",
    "end": "712745"
  },
  {
    "text": "that Flink uses to distribute the work",
    "start": "712745",
    "end": "715748"
  },
  {
    "text": "across task managers.",
    "start": "715981",
    "end": "718350"
  },
  {
    "text": "Let's see",
    "start": "718350",
    "end": "718717"
  },
  {
    "text": "what happens",
    "start": "718718",
    "end": "719285"
  },
  {
    "text": "when you deploy an application.",
    "start": "719285",
    "end": "722287"
  },
  {
    "text": "First, you submit your job to the job",
    "start": "722755",
    "end": "724990"
  },
  {
    "text": "manager.",
    "start": "724990",
    "end": "725990"
  },
  {
    "text": "The submission",
    "start": "725991",
    "end": "726625"
  },
  {
    "text": "includes the application code",
    "start": "726625",
    "end": "728394"
  },
  {
    "text": "and the runtime configuration,",
    "start": "728394",
    "end": "730229"
  },
  {
    "text": "including",
    "start": "730229",
    "end": "731097"
  },
  {
    "text": "and especially",
    "start": "731097",
    "end": "732230"
  },
  {
    "text": "the application parallelism.",
    "start": "732231",
    "end": "735134"
  },
  {
    "text": "Your code is executed on the job manager,",
    "start": "735134",
    "end": "738337"
  },
  {
    "text": "literally, the main method of your job",
    "start": "738704",
    "end": "741373"
  },
  {
    "text": "application, or the main function,",
    "start": "741373",
    "end": "742941"
  },
  {
    "text": "or your Python application is executed",
    "start": "742942",
    "end": "745711"
  },
  {
    "text": "at this stage on the job manager",
    "start": "745711",
    "end": "748714"
  },
  {
    "text": "and your code defined and built.",
    "start": "749148",
    "end": "752718"
  },
  {
    "text": "The logical graph",
    "start": "752718",
    "end": "754587"
  },
  {
    "text": "or the sequence of operators.",
    "start": "754587",
    "end": "756555"
  },
  {
    "text": "Then,",
    "start": "757556",
    "end": "758324"
  },
  {
    "text": "based on the parallelism",
    "start": "758324",
    "end": "759725"
  },
  {
    "text": "and the data flow that you define,",
    "start": "759725",
    "end": "762094"
  },
  {
    "text": "Flink generates the physical graph or",
    "start": "762094",
    "end": "765097"
  },
  {
    "text": "the subtask.",
    "start": "765097",
    "end": "765964"
  },
  {
    "text": "As we have seen in the previous video.",
    "start": "765965",
    "end": "768601"
  },
  {
    "text": "And these subtasks",
    "start": "768601",
    "end": "771070"
  },
  {
    "text": "are what Flink deploys",
    "start": "771070",
    "end": "773506"
  },
  {
    "text": "to the task manager.",
    "start": "773506",
    "end": "775141"
  },
  {
    "text": "And both Flink does is trying to",
    "start": "775141",
    "end": "778144"
  },
  {
    "text": "evenly, as evenly as possible",
    "start": "778410",
    "end": "780746"
  },
  {
    "text": "distribute them",
    "start": "780746",
    "end": "781613"
  },
  {
    "text": "across all the slots",
    "start": "781614",
    "end": "783182"
  },
  {
    "text": "and all the task manager.",
    "start": "783182",
    "end": "785518"
  },
  {
    "text": "And when the deployment is complete,",
    "start": "785518",
    "end": "788154"
  },
  {
    "text": "the application start processing.",
    "start": "788154",
    "end": "790389"
  },
  {
    "text": "And remember the state of your subtask",
    "start": "790389",
    "end": "793659"
  },
  {
    "text": "is stored",
    "start": "793859",
    "end": "794460"
  },
  {
    "text": "locally in the memory",
    "start": "794460",
    "end": "796262"
  },
  {
    "text": "and in the disk of the task manager",
    "start": "796262",
    "end": "799198"
  },
  {
    "text": "holding the subtask.",
    "start": "799198",
    "end": "802034"
  },
  {
    "text": "And finally, the checkpoint mechanism",
    "start": "802034",
    "end": "804570"
  },
  {
    "text": "periodically takes a consistent",
    "start": "804570",
    "end": "806505"
  },
  {
    "text": "snapshot of the state",
    "start": "806505",
    "end": "808040"
  },
  {
    "text": "from all the task manager, saving it",
    "start": "808040",
    "end": "810776"
  },
  {
    "text": "to the external persistent storage.",
    "start": "810776",
    "end": "813779"
  },
  {
    "text": "Checkpointing is coordinated",
    "start": "813813",
    "end": "815648"
  },
  {
    "text": "by the job manager,",
    "start": "815648",
    "end": "817082"
  },
  {
    "text": "but each task manager",
    "start": "817082",
    "end": "818884"
  },
  {
    "text": "and each subtask takes its own checkpoint",
    "start": "818884",
    "end": "823055"
  },
  {
    "text": "independently and in parallel,",
    "start": "823055",
    "end": "825623"
  },
  {
    "text": "and without stopping the data.",
    "start": "825624",
    "end": "827193"
  },
  {
    "text": "Let's review the concept and",
    "start": "828460",
    "end": "830162"
  },
  {
    "text": "terminology",
    "start": "830162",
    "end": "831397"
  },
  {
    "text": "that we have introduced so far.",
    "start": "831397",
    "end": "834332"
  },
  {
    "text": "A Flink",
    "start": "834333",
    "end": "834733"
  },
  {
    "text": "cluster is composed by two types of node.",
    "start": "834733",
    "end": "837837"
  },
  {
    "text": "You have a",
    "start": "838270",
    "end": "838838"
  },
  {
    "text": "job manager used for orchestration",
    "start": "838838",
    "end": "841273"
  },
  {
    "text": "and coordination,",
    "start": "841273",
    "end": "842641"
  },
  {
    "text": "and a number of task managers",
    "start": "842641",
    "end": "844610"
  },
  {
    "text": "that are actually doing",
    "start": "844610",
    "end": "845743"
  },
  {
    "text": "the data processing.",
    "start": "845744",
    "end": "847112"
  },
  {
    "text": "When the application is running.",
    "start": "847112",
    "end": "850082"
  },
  {
    "text": "When you start a job",
    "start": "850783",
    "end": "851851"
  },
  {
    "text": "or Python application,",
    "start": "851851",
    "end": "853686"
  },
  {
    "text": "you submit the code to the job manager.",
    "start": "853686",
    "end": "856688"
  },
  {
    "text": "The code in the main method",
    "start": "856789",
    "end": "858224"
  },
  {
    "text": "runs on the job manager",
    "start": "858224",
    "end": "859959"
  },
  {
    "text": "and defines the logical rough.",
    "start": "859959",
    "end": "862962"
  },
  {
    "text": "Along with the application code,",
    "start": "863128",
    "end": "864662"
  },
  {
    "text": "you also submit the application",
    "start": "864663",
    "end": "866131"
  },
  {
    "text": "configuration and in particular",
    "start": "866131",
    "end": "867967"
  },
  {
    "text": "the parallelism",
    "start": "867967",
    "end": "869701"
  },
  {
    "text": "and based on the pattern",
    "start": "869702",
    "end": "870736"
  },
  {
    "text": "is the job manager",
    "start": "870736",
    "end": "872004"
  },
  {
    "text": "resolved the physical graph",
    "start": "872004",
    "end": "873873"
  },
  {
    "text": "and create the subtasks.",
    "start": "873873",
    "end": "876842"
  },
  {
    "text": "Task managers are logically split",
    "start": "877276",
    "end": "879411"
  },
  {
    "text": "into lots,",
    "start": "879411",
    "end": "881080"
  },
  {
    "text": "and as lot is just a logical unit",
    "start": "881080",
    "end": "884283"
  },
  {
    "text": "that helps",
    "start": "884283",
    "end": "885384"
  },
  {
    "text": "Flink distributing the workload",
    "start": "885384",
    "end": "887452"
  },
  {
    "text": "across the task manager.",
    "start": "887453",
    "end": "889555"
  },
  {
    "text": "The job manager schedules the subtasks",
    "start": "889555",
    "end": "892524"
  },
  {
    "text": "to the task",
    "start": "892524",
    "end": "893524"
  },
  {
    "text": "manager,",
    "start": "893525",
    "end": "894260"
  },
  {
    "text": "distributing them across all slots,",
    "start": "894260",
    "end": "897263"
  },
  {
    "text": "and when data start flowing,",
    "start": "897863",
    "end": "899631"
  },
  {
    "text": "any information in the state",
    "start": "899632",
    "end": "901700"
  },
  {
    "text": "in the state of the application is stored",
    "start": "901700",
    "end": "903903"
  },
  {
    "text": "locally in the task manager memory.",
    "start": "903903",
    "end": "906872"
  },
  {
    "text": "The checkpoint system",
    "start": "907006",
    "end": "908107"
  },
  {
    "text": "takes a periodic snapshot",
    "start": "908107",
    "end": "909775"
  },
  {
    "text": "of the application state",
    "start": "909775",
    "end": "910776"
  },
  {
    "text": "and copy them",
    "start": "910776",
    "end": "912211"
  },
  {
    "text": "to an external persistence storage,",
    "start": "912211",
    "end": "915180"
  },
  {
    "text": "and this copy can be used",
    "start": "915281",
    "end": "916682"
  },
  {
    "text": "to restart the application",
    "start": "916682",
    "end": "918417"
  },
  {
    "text": "in case of failure.",
    "start": "918417",
    "end": "919652"
  },
  {
    "text": "And that's all for this video.",
    "start": "919652",
    "end": "921854"
  },
  {
    "text": "Join us for the next video",
    "start": "921854",
    "end": "923555"
  },
  {
    "text": "where we will start talking",
    "start": "923555",
    "end": "925123"
  },
  {
    "text": "about programing Flink applications.",
    "start": "925124",
    "end": "927993"
  },
  {
    "text": "As usual,",
    "start": "927993",
    "end": "928626"
  },
  {
    "text": "please leave a comment with any questions",
    "start": "928627",
    "end": "931063"
  },
  {
    "text": "and thank you for watching.",
    "start": "931063",
    "end": "932364"
  }
]