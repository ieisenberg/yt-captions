[
  {
    "text": "Welcome to 'This is My Architecture.'",
    "start": "7653",
    "end": "9242"
  },
  {
    "text": "I'm Yong Jin Cho from AWS.",
    "start": "9242",
    "end": "11406"
  },
  {
    "text": "Today, I have Gwonsoo Lee \nfrom beNX joining us.",
    "start": "11406",
    "end": "14655"
  },
  {
    "text": "Hi, Gwonsoo, thank you for joining.\nThank you for having me.",
    "start": "14655",
    "end": "17068"
  },
  {
    "text": "So can you tell me about beNX and your architecture?",
    "start": "17068",
    "end": "20179"
  },
  {
    "text": "Of course, beNX is an entertainment based",
    "start": "20179",
    "end": "22749"
  },
  {
    "text": "IT company behind many global artists",
    "start": "22749",
    "end": "25287"
  },
  {
    "text": "including BTS.",
    "start": "25287",
    "end": "27406"
  },
  {
    "text": "We are running two services:",
    "start": "27406",
    "end": "28823"
  },
  {
    "text": "Weverse and Weverse Shop.",
    "start": "28823",
    "end": "30263"
  },
  {
    "text": "Weverse is an official fan community",
    "start": "30263",
    "end": "32661"
  },
  {
    "text": "where global fans and artists interact,",
    "start": "32661",
    "end": "34769"
  },
  {
    "text": "and Weverse Shop is a global merchandise",
    "start": "34769",
    "end": "36973"
  },
  {
    "text": "shopping platform developed for our fans.",
    "start": "36973",
    "end": "39259"
  },
  {
    "text": "As you know, BTS has a huge fandom.",
    "start": "39945",
    "end": "42568"
  },
  {
    "text": "Because of that we have a special",
    "start": "42568",
    "end": "44912"
  },
  {
    "text": "traffic pattern.",
    "start": "44912",
    "end": "46003"
  },
  {
    "text": "When a member of BTS posted a message ",
    "start": "46004",
    "end": "48078"
  },
  {
    "text": "we have experienced up to 9 million ",
    "start": "48078",
    "end": "50573"
  },
  {
    "text": "TPM instantly. ",
    "start": "50574",
    "end": "52058"
  },
  {
    "text": "It's like hundred times higher than usual.",
    "start": "52058",
    "end": "55147"
  },
  {
    "text": "So, we needed to come up with a solution",
    "start": "55622",
    "end": "58241"
  },
  {
    "text": "to handle such traffic. ",
    "start": "58241",
    "end": "60211"
  },
  {
    "text": "OK, well, I think it's very interesting that ",
    "start": "60211",
    "end": "63090"
  },
  {
    "text": "a single message post can bring up to",
    "start": "63090",
    "end": "66485"
  },
  {
    "text": "9 million TPM, I think it's really huge,",
    "start": "66485",
    "end": "69039"
  },
  {
    "text": "and then you should come up with very flexible",
    "start": "69039",
    "end": "71939"
  },
  {
    "text": "and dynamic architecture.",
    "start": "71939",
    "end": "73140"
  },
  {
    "text": "Yes.\nCan you tell me about",
    "start": "73140",
    "end": "74201"
  },
  {
    "text": "the architecture of your platform?",
    "start": "74202",
    "end": "75808"
  },
  {
    "text": "We call this Event Driven ",
    "start": "75808",
    "end": "77667"
  },
  {
    "text": "Auto-scaling Architecture,",
    "start": "77667",
    "end": "79091"
  },
  {
    "text": "which enables us to handle sudden and massive",
    "start": "79091",
    "end": "81692"
  },
  {
    "text": "spikes in traffic. ",
    "start": "81692",
    "end": "83240"
  },
  {
    "text": "Of course, we may provision instances,",
    "start": "83240",
    "end": "85629"
  },
  {
    "text": "based on the peak traffic,",
    "start": "85629",
    "end": "87708"
  },
  {
    "text": "but it costs, it could cost a lot,",
    "start": "87708",
    "end": "89846"
  },
  {
    "text": "and actually it is not a proper way",
    "start": "89846",
    "end": "91492"
  },
  {
    "text": "to utilize cloud, so we adopt this",
    "start": "91492",
    "end": "94231"
  },
  {
    "text": "Event Driven Auto-scaling Architecture.",
    "start": "94232",
    "end": "96362"
  },
  {
    "text": "OK, so your architecture is",
    "start": "96362",
    "end": "99117"
  },
  {
    "text": "Event Driven Auto-scaling Architecture.",
    "start": "99117",
    "end": "101052"
  },
  {
    "text": "And I think that's why you have this Lambda",
    "start": "101588",
    "end": "104165"
  },
  {
    "text": "in the diagram, right?\nYeah.",
    "start": "104165",
    "end": "105525"
  },
  {
    "text": "So can you tell me more about your architecture?",
    "start": "105525",
    "end": "107258"
  },
  {
    "text": "Of course, actually, we have ",
    "start": "107258",
    "end": "109345"
  },
  {
    "text": "two event cases, but today I want to focus ",
    "start": "109345",
    "end": "112120"
  },
  {
    "text": "more on unexpected events. ",
    "start": "112120",
    "end": "114075"
  },
  {
    "text": "When the artist creates a new post",
    "start": "114075",
    "end": "116214"
  },
  {
    "text": "notifications are sent to millions of users",
    "start": "116214",
    "end": "119728"
  },
  {
    "text": "through a push server. ",
    "start": "119728",
    "end": "121386"
  },
  {
    "text": "At the same time, it calls an API Gateway endpoint,",
    "start": "121724",
    "end": "125472"
  },
  {
    "text": "which triggers a Lambda function. ",
    "start": "125472",
    "end": "127883"
  },
  {
    "text": "And this Lambda, it responds to the massive traffic, ",
    "start": "128543",
    "end": "131719"
  },
  {
    "text": "makes a change to the Auto-scaling group ",
    "start": "131719",
    "end": "134603"
  },
  {
    "text": "to meet the number of instances required.",
    "start": "134604",
    "end": "137231"
  },
  {
    "text": "OK, so, you provision any resources",
    "start": "137611",
    "end": "139974"
  },
  {
    "text": "in the Auto-scaling group using Lambda function, right?",
    "start": "139974",
    "end": "142292"
  },
  {
    "text": "Yes.\nOK, and I think this is about ",
    "start": "142292",
    "end": "145343"
  },
  {
    "text": "scaling up but sometimes you have to go",
    "start": "145343",
    "end": "147029"
  },
  {
    "text": "back to the original status, right?",
    "start": "147029",
    "end": "148845"
  },
  {
    "text": "So how do you do that?",
    "start": "148845",
    "end": "150063"
  },
  {
    "text": "When the artist activity is done",
    "start": "150063",
    "end": "152374"
  },
  {
    "text": "then traffic returns to normal.",
    "start": "152374",
    "end": "154911"
  },
  {
    "text": "And this is a time when we have to ",
    "start": "154911",
    "end": "157504"
  },
  {
    "text": "scale in instances.",
    "start": "157504",
    "end": "159512"
  },
  {
    "text": "So we trigger another Lambda",
    "start": "159512",
    "end": "161739"
  },
  {
    "text": "with AWS CloudWatch.  ",
    "start": "161740",
    "end": "164193"
  },
  {
    "text": "And it checks the number of API",
    "start": "164752",
    "end": "167718"
  },
  {
    "text": "and compares it to the normal state. ",
    "start": "167718",
    "end": "170770"
  },
  {
    "text": "And if the traffic is nearly normal,",
    "start": "170770",
    "end": "172788"
  },
  {
    "text": "then the Auto-scaling will return to its own capacity.",
    "start": "172788",
    "end": "176278"
  },
  {
    "text": "OK, this is great, so using CloudWatch",
    "start": "177106",
    "end": "179072"
  },
  {
    "text": "to monitor the traffic patterns, right?",
    "start": "179072",
    "end": "180750"
  },
  {
    "text": "Yes.\nAnd I just saw something ",
    "start": "180750",
    "end": "182646"
  },
  {
    "text": "very interesting here, so you're using",
    "start": "182646",
    "end": "184300"
  },
  {
    "text": "spot instances in our auto-scaling group.",
    "start": "184300",
    "end": "186362"
  },
  {
    "text": "And how do you use the spot instances?",
    "start": "186362",
    "end": "188316"
  },
  {
    "text": "Despite all this effort, intermittent delays exist.",
    "start": "188316",
    "end": "192588"
  },
  {
    "text": "It causes latency issues, because ",
    "start": "193037",
    "end": "195147"
  },
  {
    "text": "the time of incoming traffic received ",
    "start": "195147",
    "end": "197187"
  },
  {
    "text": "is way faster than the healthy new instances created.",
    "start": "197187",
    "end": "200972"
  },
  {
    "text": "This is inevitable because",
    "start": "201616",
    "end": "203520"
  },
  {
    "text": "EC2 itself needs to boot up",
    "start": "203520",
    "end": "205597"
  },
  {
    "text": "and have the application started and warmed up.",
    "start": "205597",
    "end": "208970"
  },
  {
    "text": "So, our team notices that we have to",
    "start": "209657",
    "end": "213287"
  },
  {
    "text": "provision instances in advance to handle ",
    "start": "213287",
    "end": "216641"
  },
  {
    "text": "all such event cases without any latency issue.",
    "start": "216641",
    "end": "220379"
  },
  {
    "text": "So we changed our architecture ",
    "start": "221108",
    "end": "223815"
  },
  {
    "text": "to utilize the spot instances. ",
    "start": "223815",
    "end": "226008"
  },
  {
    "text": "And currently 70% of our instances ",
    "start": "226650",
    "end": "229720"
  },
  {
    "text": "are provisioned as spot and eventually",
    "start": "229720",
    "end": "232967"
  },
  {
    "text": "we save the costs up to 50% in EC2.",
    "start": "232967",
    "end": "236058"
  },
  {
    "text": "OK, so, it's also a very clever thing that you can use",
    "start": "236465",
    "end": "239248"
  },
  {
    "text": "spot instances in the auto-scaling group, right?",
    "start": "239248",
    "end": "241244"
  },
  {
    "text": "So did you get any improvement in terms of latency ",
    "start": "241244",
    "end": "243746"
  },
  {
    "text": "with the spot instances?",
    "start": "243746",
    "end": "245842"
  },
  {
    "text": "Yes, since we adopt spot instances ",
    "start": "245842",
    "end": "248246"
  },
  {
    "text": "we've no longer experienced any delay ",
    "start": "248246",
    "end": "250889"
  },
  {
    "text": "by cold start.",
    "start": "250889",
    "end": "252429"
  },
  {
    "text": "OK, so you've completely solved the problem ",
    "start": "252790",
    "end": "255064"
  },
  {
    "text": "using the spot instances, right?",
    "start": "255065",
    "end": "257689"
  },
  {
    "text": "Yes. \nAnd I have another thing that",
    "start": "257689",
    "end": "259794"
  },
  {
    "text": "catches my eye here, this Goployer, ",
    "start": "259795",
    "end": "262420"
  },
  {
    "text": "so, I don't think this is an AWS service.",
    "start": "262420",
    "end": "264665"
  },
  {
    "text": "Can you tell me about Goployer?",
    "start": "264665",
    "end": "266038"
  },
  {
    "text": "Yes, Goployer is an open source deployment tool ",
    "start": "266524",
    "end": "269961"
  },
  {
    "text": "that uses AWS auto-scaling.",
    "start": "269962",
    "end": "272392"
  },
  {
    "text": "Our team made it to automate deployment process.",
    "start": "273299",
    "end": "277818"
  },
  {
    "text": "It runs based on the configurations ",
    "start": "278435",
    "end": "280622"
  },
  {
    "text": "in the manifest file, so that we can ",
    "start": "280622",
    "end": "282632"
  },
  {
    "text": "implement deployment as code.",
    "start": "282632",
    "end": "284543"
  },
  {
    "text": "Actually, Goployer supports most",
    "start": "285271",
    "end": "287268"
  },
  {
    "text": "auto-scaling group features, ",
    "start": "287268",
    "end": "289025"
  },
  {
    "text": "so anyone who is using auto-scaling group",
    "start": "289025",
    "end": "291482"
  },
  {
    "text": "can use our open source.",
    "start": "291482",
    "end": "293059"
  },
  {
    "text": "OK, so basically this Goployer ",
    "start": "293059",
    "end": "295452"
  },
  {
    "text": "dynamically provisions auto-scaling groups, right?",
    "start": "295452",
    "end": "298544"
  },
  {
    "text": "Yes.\nThis is great, I think this can be",
    "start": "298544",
    "end": "301019"
  },
  {
    "text": "a superstar in the CICD world.\nYes.",
    "start": "301019",
    "end": "303164"
  },
  {
    "text": "So thank you very much for the current architecture,",
    "start": "303164",
    "end": "305586"
  },
  {
    "text": "and I just want to ask you what's your future direction",
    "start": "305586",
    "end": "309130"
  },
  {
    "text": "of this architecture.",
    "start": "309130",
    "end": "310318"
  },
  {
    "text": "Absolutely, we're still in search for the best way ",
    "start": "310318",
    "end": "313468"
  },
  {
    "text": "to deal with a sudden and massive spike challenge.",
    "start": "313468",
    "end": "316577"
  },
  {
    "text": "So, we're considering now...",
    "start": "317181",
    "end": "319790"
  },
  {
    "text": "... we are considering EKS Fargate for EKS.",
    "start": "321071",
    "end": "324614"
  },
  {
    "text": "OK.",
    "start": "324855",
    "end": "325898"
  },
  {
    "text": "EKS alone requires more nodes",
    "start": "327953",
    "end": "330390"
  },
  {
    "text": "if I want to run more pods,",
    "start": "330867",
    "end": "332451"
  },
  {
    "text": "but with the Fargate we don't need to ",
    "start": "332451",
    "end": "335100"
  },
  {
    "text": "provision more nodes for additional pods. ",
    "start": "335101",
    "end": "338169"
  },
  {
    "text": "So we expect that this could help us",
    "start": "338169",
    "end": "340727"
  },
  {
    "text": "operate our services, more reliably,",
    "start": "340727",
    "end": "343623"
  },
  {
    "text": "and cost-efficient. ",
    "start": "343623",
    "end": "345281"
  },
  {
    "text": "OK, so, thank you very much for the explanation and ",
    "start": "345664",
    "end": "348591"
  },
  {
    "text": "I think you have a plan ",
    "start": "348591",
    "end": "350551"
  },
  {
    "text": "to make your life easier with ",
    "start": "350551",
    "end": "352204"
  },
  {
    "text": "AWS's management services, right?\nYes.",
    "start": "352204",
    "end": "353957"
  },
  {
    "text": "OK. ",
    "start": "354476",
    "end": "355583"
  },
  {
    "text": "Today we introduced highly flexible",
    "start": "356229",
    "end": "358633"
  },
  {
    "text": "architecture by beNX to handle",
    "start": "358633",
    "end": "360932"
  },
  {
    "text": "massive peak traffic. ",
    "start": "360933",
    "end": "362261"
  },
  {
    "text": "Thank you for joining us, Gwonsoo.",
    "start": "362261",
    "end": "363866"
  },
  {
    "text": "Thank you.\nThank you. ",
    "start": "363867",
    "end": "365196"
  }
]