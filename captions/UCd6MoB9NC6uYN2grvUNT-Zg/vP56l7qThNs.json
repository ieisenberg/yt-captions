[
  {
    "start": "0",
    "end": "84000"
  },
  {
    "text": "all right let's gonna get started hi everyone welcome thank you all for being",
    "start": "0",
    "end": "6210"
  },
  {
    "text": "here my name is James sorry Winnie I am a software development engineer at Amazon Web Services I work on the Python",
    "start": "6210",
    "end": "14309"
  },
  {
    "text": "SDK for AWS as well as the AWS command-line interface which is what I'm",
    "start": "14309",
    "end": "19439"
  },
  {
    "text": "going to be talking about today so we're going to look at advanced usage of the AWS CLI but more generally we're going",
    "start": "19439",
    "end": "27869"
  },
  {
    "text": "to try to get a well-rounded view of e AWS CLI so by advanced usage here I",
    "start": "27869",
    "end": "33840"
  },
  {
    "text": "don't just mean advanced features that we will cover that but I also mean we're going to try to look at common or core",
    "start": "33840",
    "end": "39930"
  },
  {
    "text": "usage scenarios and really try to explore them ask ourselves what else is there what else do I need to know what",
    "start": "39930",
    "end": "45629"
  },
  {
    "text": "else can help me because the end goal of all of this is to try to make us more proficient at using the AWS CLI better",
    "start": "45629",
    "end": "53129"
  },
  {
    "text": "we know the tools we use more productive we are and so hopefully you can take some of the things we talked about today and incorporate them into your",
    "start": "53129",
    "end": "60270"
  },
  {
    "text": "day-to-day usage of the AWS CLI now I'm going to be talking about three broad",
    "start": "60270",
    "end": "65729"
  },
  {
    "text": "categories here if you're not familiar with the AWS CLI that's ok I'm going to give it quick maybe five minute crash",
    "start": "65729",
    "end": "72060"
  },
  {
    "text": "course introduction and then we're going to cover some of the core common usage",
    "start": "72060",
    "end": "77369"
  },
  {
    "text": "scenarios and then finally we'll look at some more advanced topics some of these are fairly new to the CLI we'll take a",
    "start": "77369",
    "end": "82860"
  },
  {
    "text": "look at those so the first thing I want to cover is a quick crash course into the AWS CLI so if you've never heard of",
    "start": "82860",
    "end": "90360"
  },
  {
    "start": "84000",
    "end": "216000"
  },
  {
    "text": "it before the AWS CLI is a unified tool to manage your AWS services and by that",
    "start": "90360",
    "end": "98070"
  },
  {
    "text": "I just mean you have a single tool that you install when you configure and it gives you access to all the various AWS",
    "start": "98070",
    "end": "103740"
  },
  {
    "text": "services now we support three installation methods there is an MSI",
    "start": "103740",
    "end": "109409"
  },
  {
    "text": "installer for Windows and then there's a zip file or a bundled installer that's cross-platform and if there any Python",
    "start": "109409",
    "end": "115829"
  },
  {
    "text": "developers out here the AWS CLI is written in Python so it's just a Python package and if you're familiar with pip",
    "start": "115829",
    "end": "122130"
  },
  {
    "text": "which is a tool to install Python packages you just run aw our pip install",
    "start": "122130",
    "end": "127190"
  },
  {
    "text": "AWS CLI and you can install the CLI now once you've installed the CLI to",
    "start": "127190",
    "end": "133170"
  },
  {
    "text": "configure it the easiest ways just to run this configure command so you run AWS configure it asks",
    "start": "133170",
    "end": "138180"
  },
  {
    "text": "you for it asks you series of questions and you answer them and then you're all set up now one of the things you'll",
    "start": "138180",
    "end": "144989"
  },
  {
    "text": "notice when you start using the CLI is that there's a consistent calling pattern so every command has a similar",
    "start": "144989",
    "end": "151380"
  },
  {
    "text": "structure and that is every command starts with AWS and then you have a command + a sub command and generally in",
    "start": "151380",
    "end": "159569"
  },
  {
    "text": "the common case a command is the service name and then the sub command is the",
    "start": "159569",
    "end": "166049"
  },
  {
    "text": "operation name so in this case this is making a call to Amazon ec2 s described instances call and if I wanted to make a",
    "start": "166049",
    "end": "172920"
  },
  {
    "text": "call to another service you're going to see that same calling pattern again so that's how you can call the CLI in terms",
    "start": "172920",
    "end": "180660"
  },
  {
    "text": "of the output there's three that you have here by default when you run a command you'll get JSON output which",
    "start": "180660",
    "end": "186540"
  },
  {
    "text": "looks like this there's also a text output this is tab separated columns and",
    "start": "186540",
    "end": "191670"
  },
  {
    "text": "then you'll also have a table output and so depending on what your usage scenario is you might pick one format over the",
    "start": "191670",
    "end": "197040"
  },
  {
    "text": "other you can override this on a per invocation basis or set this as a default and so table outputs good to",
    "start": "197040",
    "end": "203940"
  },
  {
    "text": "visually parse JSON really lets you have programmatic access if you have a JSON tool that can manipulate JSON and then",
    "start": "203940",
    "end": "209959"
  },
  {
    "text": "the text output is good for tab separated output or if you want to use grep or sad or awk now I know I went",
    "start": "209959",
    "end": "217290"
  },
  {
    "start": "216000",
    "end": "401000"
  },
  {
    "text": "through that really fast and I do want to mention that all of this is on our getting started guide and there will be a link at the end but to help solidify",
    "start": "217290",
    "end": "224310"
  },
  {
    "text": "some of these contents I want to go ahead and just switch to the terminal and give you a quick overview to help",
    "start": "224310",
    "end": "229950"
  },
  {
    "text": "make sure we all understand that basic scenario for for the CLI usage so I have",
    "start": "229950",
    "end": "235319"
  },
  {
    "text": "a CLI installed I've gone ahead and installed that I just use pip so I ran pip install AWS CLI",
    "start": "235319",
    "end": "242239"
  },
  {
    "text": "and one of the first things you'll do as I mentioned is you'll run configure so I've already set this up so I can just",
    "start": "242720",
    "end": "248760"
  },
  {
    "text": "hit enter but I would normally fill these out with the values that I want and then when we want to make calls",
    "start": "248760",
    "end": "254549"
  },
  {
    "text": "it's that same calling format so AWS and then a command which is the service name",
    "start": "254549",
    "end": "259829"
  },
  {
    "text": "and then say for example describe regions and we'll have output here",
    "start": "259829",
    "end": "266370"
  },
  {
    "text": "that's going to be the regions oops switch to Wi-Fi here so",
    "start": "266370",
    "end": "284539"
  },
  {
    "text": "we would call described regions and we're gonna see a JSON output and once we see that JSON output we're gonna look",
    "start": "284539",
    "end": "290240"
  },
  {
    "text": "at some of the other outputs we can see so we're gonna look at text as well as table so we go ahead and run this we'll",
    "start": "290240",
    "end": "296389"
  },
  {
    "text": "see that we have a JSON output and so it has endpoints in region names and then",
    "start": "296389",
    "end": "302330"
  },
  {
    "text": "if I go ahead and add text output this gives me that tab-separated output so I can say things like you know give me all",
    "start": "302330",
    "end": "308960"
  },
  {
    "text": "the region names and then finally here there's a table output and you can see",
    "start": "308960",
    "end": "315949"
  },
  {
    "text": "here that this is just a little bit easier to visually parse and there's two",
    "start": "315949",
    "end": "321740"
  },
  {
    "text": "more things I want to cover for this basic crash course that were gonna see later on and that's for any command you",
    "start": "321740",
    "end": "328220"
  },
  {
    "text": "can put help and it will pull up a man page so in this man page you'll see things like description you'll see all",
    "start": "328220",
    "end": "335360"
  },
  {
    "text": "the arguments here for some of the parameters it'll give you a sample syntax here so there's a shorthand",
    "start": "335360",
    "end": "341750"
  },
  {
    "text": "syntax you can use or JSON document and then if we scroll down there'll be examples for how to use the",
    "start": "341750",
    "end": "350380"
  },
  {
    "text": "particular command and a number of scenarios and then if we go all the way to the bottom it'll document the output",
    "start": "350380",
    "end": "356150"
  },
  {
    "text": "so if you look at the output here it'll tell you the keys and some documentation so that's help the other thing that",
    "start": "356150",
    "end": "362780"
  },
  {
    "text": "we're going to run into is this part here so notice I have public key",
    "start": "362780",
    "end": "368990"
  },
  {
    "text": "material then I have this file colon slash slash and this is basically saying",
    "start": "368990",
    "end": "374389"
  },
  {
    "text": "instead of using this literal string file colon slash slash we're going to open the file and whatever contents are",
    "start": "374389",
    "end": "381289"
  },
  {
    "text": "in that file we're going to use as that value so I just want to mention that because we will see that later so in",
    "start": "381289",
    "end": "387050"
  },
  {
    "text": "this applies to any parameter if for example I put ID RSA in a file I could then reference it with you know temp and",
    "start": "387050",
    "end": "394099"
  },
  {
    "text": "then the file name so just something to keep in mind so that was a quick introduction to the",
    "start": "394099",
    "end": "402449"
  },
  {
    "start": "401000",
    "end": "697000"
  },
  {
    "text": "AWS CLI now that was quick and there's more information on our user guide but I want to now go over some of the more",
    "start": "402449",
    "end": "410659"
  },
  {
    "text": "foundation or core scenarios you would run into when you use the AWS CLI so the first thing we're going to look at is",
    "start": "410659",
    "end": "416520"
  },
  {
    "text": "configuration this is one of those things that every tool has the AWS CLI is included and we saw previously in the",
    "start": "416520",
    "end": "424439"
  },
  {
    "text": "terminal that you just run AWS configure you answer a bunch of questions and everything's set up for you but we want",
    "start": "424439",
    "end": "430110"
  },
  {
    "text": "to try to explore and see what's really going on under the hood and so probably less use is the fact that there are a",
    "start": "430110",
    "end": "437039"
  },
  {
    "text": "suite of sub commands and these sub commands there's three in particular list is good for helping you debug where",
    "start": "437039",
    "end": "444300"
  },
  {
    "text": "your credentials or various config files come from and then there's also a get and a set command I'm going to look at",
    "start": "444300",
    "end": "450839"
  },
  {
    "text": "those two in detail so if I run a command like this get region this is",
    "start": "450839",
    "end": "456029"
  },
  {
    "text": "going to print the currently configured region I have to standard out and so this is different from just the",
    "start": "456029",
    "end": "461819"
  },
  {
    "text": "configure command in the sense that it's not prompting me for values it's programmatic access and so in a similar",
    "start": "461819",
    "end": "468809"
  },
  {
    "text": "way I can set values now there's two things here that I'm showing with a set the first thing is that I'm saying",
    "start": "468809",
    "end": "475139"
  },
  {
    "text": "profile dot product region so this is saying set the region for the prod profile and the second thing I'm showing",
    "start": "475139",
    "end": "481740"
  },
  {
    "text": "here is profiles and if you're new user a profile is just a set of configuration",
    "start": "481740",
    "end": "487229"
  },
  {
    "text": "values and you can imagine I might have a development profile that has credentials with access to specific",
    "start": "487229",
    "end": "493259"
  },
  {
    "text": "resources and I might have a production profile and so the way you would normally use this is you can specify a",
    "start": "493259",
    "end": "498659"
  },
  {
    "text": "profile argument to configure and it's the same process but it creates a new profile I can then also a pen - -",
    "start": "498659",
    "end": "505199"
  },
  {
    "text": "profile to any command I would run and it'll run it with that profile that I specified now one of the things that",
    "start": "505199",
    "end": "512729"
  },
  {
    "text": "comes up fairly frequently if you want to either backup these files or edit the files and try to understand what the",
    "start": "512729",
    "end": "518729"
  },
  {
    "text": "configure command is doing we actually write out - two files there's this credentials file on the left and then",
    "start": "518729",
    "end": "524008"
  },
  {
    "text": "there's a config file now the shared credentials file you'll hear it commonly",
    "start": "524009",
    "end": "529170"
  },
  {
    "text": "referred to shared credentials file it only contains so access key secret key and enough",
    "start": "529170",
    "end": "534259"
  },
  {
    "text": "optional session token' and the nice thing about this is by default the AWS CLI will write all the credentials to",
    "start": "534259",
    "end": "541189"
  },
  {
    "text": "the shared credentials file and other AWS SDKs understand this format and so",
    "start": "541189",
    "end": "547160"
  },
  {
    "text": "if you use the CLI to configure credentials you'll now be configured in terms of credentials for the Python SDK",
    "start": "547160",
    "end": "553369"
  },
  {
    "text": "the Ruby SDK JavaScript Java all the various languages we support and the dot",
    "start": "553369",
    "end": "559459"
  },
  {
    "text": "AWS slash config file that's used only by the CLI and that has things that are CLI specific things like what output",
    "start": "559459",
    "end": "566059"
  },
  {
    "text": "format to use the three that we looked at or for example the region to configure that you want to use say",
    "start": "566059",
    "end": "571730"
  },
  {
    "text": "uswest two and the reason i want to highlight this is because the configure command",
    "start": "571730",
    "end": "577069"
  },
  {
    "text": "understands all of this and handles the details for you so for example if i were to run a command like we're gonna set",
    "start": "577069",
    "end": "582949"
  },
  {
    "text": "the access key it will know first that that needs to go into the credentials file because it is a credential variable",
    "start": "582949",
    "end": "589160"
  },
  {
    "text": "and it'll also know that there's no section that exists it'll also create the file if it doesn't exist and so",
    "start": "589160",
    "end": "594859"
  },
  {
    "text": "we'll write something out to the shared credentials file now if I also then write the secret access key it does the",
    "start": "594859",
    "end": "601069"
  },
  {
    "text": "same thing and I want to point out here also when you set a command when you set a configuration variable it won't it",
    "start": "601069",
    "end": "607999"
  },
  {
    "text": "won't parse it and then rewrite out all the values so if you have comments or a particular formatting or something that",
    "start": "607999",
    "end": "613819"
  },
  {
    "text": "you like it won't touch any of the existing lines so in this scenario here we'd see that there's a profile defined",
    "start": "613819",
    "end": "619519"
  },
  {
    "text": "for prod and the next lines taken and so we can write out the secret access key to this next line and then just for",
    "start": "619519",
    "end": "626059"
  },
  {
    "text": "completeness the other questions you get asked and configure are the region which goes in this section and then the output",
    "start": "626059",
    "end": "631699"
  },
  {
    "text": "which gets added to this section and a notice here also it knows the difference between the two formats the CLI has a",
    "start": "631699",
    "end": "637639"
  },
  {
    "text": "slightly different format for profiles that's because there are other sections you could have in the CLI that aren't",
    "start": "637639",
    "end": "642949"
  },
  {
    "text": "profiles so you have to denote profiles with that profile prefix so if we bring",
    "start": "642949",
    "end": "648199"
  },
  {
    "text": "this all together in an example we might look at something where you want to create an iamb user create credentials",
    "start": "648199",
    "end": "653720"
  },
  {
    "text": "and then have it configured with the new profile so we can use it in the AWS CLI and so walking through this code what",
    "start": "653720",
    "end": "659600"
  },
  {
    "text": "happens here is we're going to first create a user and then once we create",
    "start": "659600",
    "end": "664939"
  },
  {
    "text": "that user we're going to create credentials for it by default there are no credentials associated with a user we're gonna look",
    "start": "664939",
    "end": "670850"
  },
  {
    "text": "at this - - query thing and a little bit but we grab the access key and the secret key and then finally we use that",
    "start": "670850",
    "end": "677120"
  },
  {
    "text": "set command and we talked about to create a new profile and so this allows you to create a new profile in the CLI",
    "start": "677120",
    "end": "685370"
  },
  {
    "text": "entirely programmatically and so takeaway here is that if you need programmatic access to your",
    "start": "685370",
    "end": "691550"
  },
  {
    "text": "configuration values definitely check out the AWS configure suite of sub commands now the next thing I want to",
    "start": "691550",
    "end": "699080"
  },
  {
    "start": "697000",
    "end": "1134000"
  },
  {
    "text": "talk about is query one of the most common things you might do in the CLI is run a command and then you'll get",
    "start": "699080",
    "end": "706100"
  },
  {
    "text": "response back but you only want a subset of that data and so existing CI users",
    "start": "706100",
    "end": "711560"
  },
  {
    "text": "have hopefully seen this query option we're going to cover some of the new things we've added we've added a lot of capabilities that give you a lot more",
    "start": "711560",
    "end": "718010"
  },
  {
    "text": "control over the data that you want but if you're new to this and you haven't seen it to give you an idea of what this",
    "start": "718010",
    "end": "723860"
  },
  {
    "text": "does this is a very high-level overview of what happens when you run AWS and",
    "start": "723860",
    "end": "729410"
  },
  {
    "text": "easy to describe instances or something and you hit enter and we'll parse the",
    "start": "729410",
    "end": "734720"
  },
  {
    "text": "command will create an HTTP request and then we get a response back and that's the part that I want to look at in more",
    "start": "734720",
    "end": "739760"
  },
  {
    "text": "detail so what we'll do first is will parse that response body and then we apply this query expression and then",
    "start": "739760",
    "end": "746960"
  },
  {
    "text": "that query expression will then get sent to whatever the output renderer is table text JSON and then get printed to",
    "start": "746960",
    "end": "753080"
  },
  {
    "text": "standard out so to give you something more concrete imagine that I have an AWS",
    "start": "753080",
    "end": "758180"
  },
  {
    "text": "service response that has this XML body we parse it internally into some Python data structure so a dictionary of lists",
    "start": "758180",
    "end": "765020"
  },
  {
    "text": "of Python types and then from there we look if the query has been applied if the query has been applied we then",
    "start": "765020",
    "end": "770420"
  },
  {
    "text": "filter that data down and then we figure out how we can actually get that to a table format for example if it was a",
    "start": "770420",
    "end": "777710"
  },
  {
    "text": "table renderer now as for the language itself we use a language called james",
    "start": "777710",
    "end": "783590"
  },
  {
    "text": "path and there's a site here james path org it's a query language for json and",
    "start": "783590",
    "end": "788920"
  },
  {
    "text": "if you go over to the site here it's kind of hard to see it has a full",
    "start": "788920",
    "end": "796820"
  },
  {
    "text": "specification for all the low-level details in the if you're interested and it also has a tutorial here and you can click on this",
    "start": "796820",
    "end": "803480"
  },
  {
    "text": "tutorial and go through it has interactive JavaScript widgets that kind of help you learn the language and so",
    "start": "803480",
    "end": "809290"
  },
  {
    "text": "updates as I type notice on the right hand side it updates as I'm typing so it just gives you a lot of a lot more",
    "start": "809290",
    "end": "816710"
  },
  {
    "text": "information about how you can actually learn the language and it goes through all the various aspects here and I do want to go over some of the syntax here",
    "start": "816710",
    "end": "822890"
  },
  {
    "text": "but that is a browser and so we're in a CLI talk so the most logical thing to do",
    "start": "822890",
    "end": "830720"
  },
  {
    "text": "here is a porta to the terminal right so I have on the left hand side some sample",
    "start": "830720",
    "end": "837920"
  },
  {
    "text": "input and on the right hand side what that result will be and I just want to give a quick tour of some of the new",
    "start": "837920",
    "end": "842990"
  },
  {
    "text": "some of the things that we've added in addition to just some basic expressions",
    "start": "842990",
    "end": "848240"
  },
  {
    "text": "here so for example if I give it a key name you notice here there's common prefixes and matches what this value is",
    "start": "848240",
    "end": "855200"
  },
  {
    "text": "here and so I can also index it and give it further key so I can drill down if",
    "start": "855200",
    "end": "861110"
  },
  {
    "text": "you're familiar with Python at all there's also in addition to indexing elements here you can also slice from",
    "start": "861110",
    "end": "867170"
  },
  {
    "text": "the and herb index on the end of the list so this is the last key the next-to-last key in addition one of the",
    "start": "867170",
    "end": "874880"
  },
  {
    "text": "things that comes up very frequently in the CLI is saying I want all the elements but then I also for each of",
    "start": "874880",
    "end": "880220"
  },
  {
    "text": "those elements want to grab the key name so for example I should mention this is a sample output for what an s3 list",
    "start": "880220",
    "end": "886220"
  },
  {
    "text": "objects response might look like so these contents were all the key names and in addition the two other things",
    "start": "886220",
    "end": "893060"
  },
  {
    "text": "that come up fairly frequently are the ability to collect a subset so say I want the key the size and maybe the",
    "start": "893060",
    "end": "898700"
  },
  {
    "text": "owner ID and notice I have a list of lists here one thing you'll see in our",
    "start": "898700",
    "end": "904340"
  },
  {
    "text": "examples is sometimes there's just this left and right bracket and if you notice what happened there we took that list of",
    "start": "904340",
    "end": "910400"
  },
  {
    "text": "lists and flatten it down low level and the reason I mentioned that is because a lot of times you'll just see instead of",
    "start": "910400",
    "end": "916100"
  },
  {
    "text": "star you'll just see a left and a right bracket that's just saying grab the list flatten it down a level and so it means",
    "start": "916100",
    "end": "921740"
  },
  {
    "text": "if you keep traversing down you'll always just have a single list now the two other things that I want to show",
    "start": "921740",
    "end": "928790"
  },
  {
    "text": "here at first I can create a hash and these these keys can be any name so I'm gonna",
    "start": "928790",
    "end": "935200"
  },
  {
    "text": "call it maybe bytes and then ID and you",
    "start": "935200",
    "end": "942010"
  },
  {
    "text": "can see here now I have the list of hashes here and I can name the keys whatever I want one other thing that I",
    "start": "942010",
    "end": "947890"
  },
  {
    "text": "want to show here that we'll use in this next part is the ability to specify a literal string so if I say notice the",
    "start": "947890",
    "end": "953770"
  },
  {
    "text": "back ticks there s3 object every object has or every key has now a type that has",
    "start": "953770",
    "end": "959800"
  },
  {
    "text": "an s3 object and you can notice here again the key corresponds to the key the",
    "start": "959800",
    "end": "965680"
  },
  {
    "text": "bytes correspond to that size here then there's the size there and then ID is",
    "start": "965680",
    "end": "971020"
  },
  {
    "text": "the owner ID so these are common things that you might run into when you're making query expressions in the CLI as",
    "start": "971020",
    "end": "977410"
  },
  {
    "text": "far as some of the new things we've added one of the things we've added is the ability to filter down your list based on an expression so for example if",
    "start": "977410",
    "end": "984670"
  },
  {
    "text": "I wanted to grab all the objects where the size is say greater than 500 I can now do that and let me go ahead and grab",
    "start": "984670",
    "end": "990250"
  },
  {
    "text": "the size there so we can see what this is doing is saying I want the contents of this this hash here but I only want",
    "start": "990250",
    "end": "998890"
  },
  {
    "text": "to filter them and I only want the keys where this size here is greater than 500",
    "start": "998890",
    "end": "1004699"
  },
  {
    "text": "so there's a lot of things that you can do for filters in addition to greater than last time you have the typical you",
    "start": "1005120",
    "end": "1011640"
  },
  {
    "text": "know not equals and equals all that kind of things and another thing we've added are functions so if I wanted to say that",
    "start": "1011640",
    "end": "1023880"
  },
  {
    "text": "I want to sum all my s3 objects well for this particular response this has you",
    "start": "1023880",
    "end": "1030150"
  },
  {
    "text": "know 10 plus 100 plus all the other sizes there so I can use functions and again this is all in our tutorial but I",
    "start": "1030150",
    "end": "1035610"
  },
  {
    "text": "want to show one other example that comes up fairly frequently and that's the ability to sort so let's say I wanted to sort by and I wanted to grab",
    "start": "1035610",
    "end": "1042630"
  },
  {
    "text": "contents and we'll keep our running example of where all the objects are greater than 500 bytes and then from",
    "start": "1042630",
    "end": "1049140"
  },
  {
    "text": "there we're going to go ahead and grab sort it by the last modified date and I'll go ahead and actually grab all the",
    "start": "1049140",
    "end": "1055050"
  },
  {
    "text": "elements and then just print the key the size and the last modified so you can",
    "start": "1055050",
    "end": "1062280"
  },
  {
    "text": "see here what we've done is we've taken all the keys we made sure that there greater than 500 bytes but then we ordered them by time",
    "start": "1062280",
    "end": "1068520"
  },
  {
    "text": "so notice 904 919 929 1030 and this is using that sort by function and that",
    "start": "1068520",
    "end": "1076380"
  },
  {
    "text": "just gives an idea of some of the new things we've added to the language and the reason that we're going over all this is because that language you just",
    "start": "1076380",
    "end": "1082590"
  },
  {
    "text": "covered is that same thing that you can apply for a - - query option so for example if you actually take a list",
    "start": "1082590",
    "end": "1089460"
  },
  {
    "text": "objects response and say maybe just 50",
    "start": "1089460",
    "end": "1096350"
  },
  {
    "text": "but then I gave it that same expression we've been looking at say maybe size greater than 1024 and we'll grab just",
    "start": "1096350",
    "end": "1105929"
  },
  {
    "text": "the key in the size and so you can see",
    "start": "1105929",
    "end": "1113429"
  },
  {
    "text": "here we're grabbing the key and the size and we can use the exact same language",
    "start": "1113429",
    "end": "1118559"
  },
  {
    "text": "we are using for the query option so",
    "start": "1118559",
    "end": "1127260"
  },
  {
    "text": "that was an overview of the james path language some of the new things we've added again I encourage you to check out",
    "start": "1127260",
    "end": "1132270"
  },
  {
    "text": "the tutorial goes into a lot more detail but I want to go on to the next topic because one of the most common things",
    "start": "1132270",
    "end": "1138929"
  },
  {
    "text": "you do in the CLI in addition to filtering down your output is invoking some sort of command and then pulling",
    "start": "1138929",
    "end": "1145170"
  },
  {
    "text": "and waiting until it reaches a particular state so to give you a concrete example here let's say that I'm running an ec2 instance and so what I",
    "start": "1145170",
    "end": "1151710"
  },
  {
    "text": "want to do as soon as I launch it it goes into a pending state and it doesn't go into running right away and if it's",
    "start": "1151710",
    "end": "1157470"
  },
  {
    "text": "an EPS back instance I can stop it and in both cases I can terminate the instance but let's say I wanted to write",
    "start": "1157470",
    "end": "1162570"
  },
  {
    "text": "a script where I launched an ec2 instance and then I wait until it hits the running State and then I do something else and so if we have code",
    "start": "1162570",
    "end": "1169260"
  },
  {
    "text": "that does this might look something like this so we call run instances where we're now all familiar with the - -",
    "start": "1169260",
    "end": "1175440"
  },
  {
    "text": "query syntax here and then we get this state of the instance and then finally",
    "start": "1175440",
    "end": "1181530"
  },
  {
    "text": "we just have a while loop where we pull until the instance is in the running",
    "start": "1181530",
    "end": "1186720"
  },
  {
    "text": "state so while it's not we sleep for a little bit and then we make a describe instances call grab the state name and",
    "start": "1186720",
    "end": "1192210"
  },
  {
    "text": "we keep doing that and this code seems reasonable it's only ten lines of code it's not too bad it's fairly",
    "start": "1192210",
    "end": "1198060"
  },
  {
    "text": "straightforward there are a couple of issues with this code the first is that there's there's",
    "start": "1198060",
    "end": "1203130"
  },
  {
    "text": "no time outs so notice in that while loop it's entirely possible to get into an infinite loop if say the instance",
    "start": "1203130",
    "end": "1209460"
  },
  {
    "text": "never hits the running state or it gets into the running state and something comes along and terminates it before we make that next describe call you'll be",
    "start": "1209460",
    "end": "1216120"
  },
  {
    "text": "sending in an infinite loop it also doesn't have any fail fast failure states so if i if I'm waiting for an",
    "start": "1216120",
    "end": "1222299"
  },
  {
    "text": "instance to be running and I see it terminated I know that I can break out of that while loop because even if I had",
    "start": "1222299",
    "end": "1227460"
  },
  {
    "text": "timeouts there's no point in waiting it'll never go to the running state and then finally it is handwritten code it's",
    "start": "1227460",
    "end": "1232679"
  },
  {
    "text": "not a whole lot to handle the entire edge cases we talked about maybe it's a",
    "start": "1232679",
    "end": "1238320"
  },
  {
    "text": "double the lines of code but it's still not too bad but it's still handwritten code and so and the CLI there's a better",
    "start": "1238320",
    "end": "1245070"
  },
  {
    "text": "way to do this this was recently added but you can use this wait command and so it's still the same thing where you call",
    "start": "1245070",
    "end": "1250860"
  },
  {
    "text": "run instances and you grab a set of instance IDs but now you can use a wait command to block so what will happen",
    "start": "1250860",
    "end": "1256980"
  },
  {
    "text": "when I run this command it will block and it will not exit until all of the instances are in a running State and so",
    "start": "1256980",
    "end": "1263909"
  },
  {
    "text": "the syntax here is the service name so ec2 and then wait and then the later",
    "start": "1263909",
    "end": "1269549"
  },
  {
    "text": "name which in this case is instance running and then it supports all the arguments for that correspond to",
    "start": "1269549",
    "end": "1274770"
  },
  {
    "text": "describe instances call now if you want more information on the various waiters available for services you can use the",
    "start": "1274770",
    "end": "1281159"
  },
  {
    "text": "help command so that's the thing we looked at earlier in the talk you can run AWS ec2 wait help as well as AWS ec2",
    "start": "1281159",
    "end": "1287940"
  },
  {
    "text": "wait instance running help it'll give you a description of what query it's applying what operation it's calling a",
    "start": "1287940",
    "end": "1294240"
  },
  {
    "text": "lot more information on that and one other thing I want to mention here is that because it corresponds to a",
    "start": "1294240",
    "end": "1301140"
  },
  {
    "text": "describe call or whatever they polling call is to grab the status in this case with easy too it's actually a batch call",
    "start": "1301140",
    "end": "1307320"
  },
  {
    "text": "so if I run describe instances I give it a list of instance IDs and it tells me the state name so this also gives you",
    "start": "1307320",
    "end": "1313320"
  },
  {
    "text": "another capability where if I were to call run instances and then say - - count five I can now call the same",
    "start": "1313320",
    "end": "1319169"
  },
  {
    "text": "command and give it instance IDs with the five instance IDs and it will block until all of those five instances are in",
    "start": "1319169",
    "end": "1325590"
  },
  {
    "text": "the running State and so it understands it has the intelligence to understand about a list of results it can also do",
    "start": "1325590",
    "end": "1331620"
  },
  {
    "text": "fail fast failures day with the list of results so if any of those instances hit terminating it will",
    "start": "1331620",
    "end": "1336870"
  },
  {
    "text": "give you an error and say we weren't able to wait for all them to hit the running state so I encourage you to",
    "start": "1336870",
    "end": "1342000"
  },
  {
    "text": "check that out if you are pulling on resources now and finally I want to look",
    "start": "1342000",
    "end": "1348870"
  },
  {
    "text": "at some advanced scenarios so this is some of the new things we've added to the CLI and the first thing here is",
    "start": "1348870",
    "end": "1356820"
  },
  {
    "start": "1356000",
    "end": "1455000"
  },
  {
    "text": "templates so to understand what templates are we first need to look a",
    "start": "1356820",
    "end": "1361890"
  },
  {
    "text": "little bit into what goes on within the CLI particularly the fact that the AWS",
    "start": "1361890",
    "end": "1367830"
  },
  {
    "text": "CLI is data driven and so by that I mean we have a JSON model that describes all",
    "start": "1367830",
    "end": "1373320"
  },
  {
    "text": "of the inputs and all the outputs so for example and you don't need to understand",
    "start": "1373320",
    "end": "1380370"
  },
  {
    "text": "the format of this model here but what I do want to point out is that somewhere within this model we can introspect it",
    "start": "1380370",
    "end": "1387390"
  },
  {
    "text": "at runtime and map those to top-level parameters that we surface in the CLI",
    "start": "1387390",
    "end": "1393750"
  },
  {
    "text": "and because of that it's also quite easy for us to accept alternate input formats",
    "start": "1393750",
    "end": "1400740"
  },
  {
    "text": "so for example instead of having to specify each top-level parameter it's actually fairly straightforward to just",
    "start": "1400740",
    "end": "1406559"
  },
  {
    "text": "accept all the arguments from a single JSON document you can imagine maybe you're sharing input and you'd like to",
    "start": "1406559",
    "end": "1412200"
  },
  {
    "text": "just share a single file to show other people how you created a particular say",
    "start": "1412200",
    "end": "1417919"
  },
  {
    "text": "Amazon ec2 instance and you can now do this with the CLI if you run - - CLI",
    "start": "1417919",
    "end": "1423990"
  },
  {
    "text": "input JSON and this is that file colon slash slash syntax we looked at earlier notice in this case it's a relative path",
    "start": "1423990",
    "end": "1430080"
  },
  {
    "text": "so it's just arguments JSON and instead of specifying all the other parameters we just specify everything from a single",
    "start": "1430080",
    "end": "1436740"
  },
  {
    "text": "file and I think that's useful but there is still more that we can do here",
    "start": "1436740",
    "end": "1443220"
  },
  {
    "text": "because we have an input model that tells us exactly how the input structure needs to look like it would also be",
    "start": "1443220",
    "end": "1450090"
  },
  {
    "text": "great if it was possible to generate what that sample input looks like and you can do that using this generates",
    "start": "1450090",
    "end": "1457710"
  },
  {
    "start": "1455000",
    "end": "1695000"
  },
  {
    "text": "Eli's skeleton and what this will do is it will generate a sample JSON document",
    "start": "1457710",
    "end": "1464220"
  },
  {
    "text": "of all the input and then it will write that to standard out when",
    "start": "1464220",
    "end": "1469340"
  },
  {
    "text": "I give you an example of what that looks like so if I'm so using the dynamodb",
    "start": "1469340",
    "end": "1479470"
  },
  {
    "text": "create table command you notice here in the help it has output it has a description it has a number of",
    "start": "1479470",
    "end": "1486170"
  },
  {
    "text": "attributes here options and it shows me what the sample syntax looks like so I could specify each of these one by one",
    "start": "1486170",
    "end": "1493000"
  },
  {
    "text": "but another thing I can do now is just run generate CLI skeleton and it will",
    "start": "1493000",
    "end": "1499580"
  },
  {
    "text": "generate this JSON document for me and so what I can do here sorry save it to a file then go ahead",
    "start": "1499580",
    "end": "1509450"
  },
  {
    "text": "and open that file and notice here it has the structure of this file it has",
    "start": "1509450",
    "end": "1515270"
  },
  {
    "text": "all the input parameters in the correct nesting and all the names and everything correct and so now I can just go through",
    "start": "1515270",
    "end": "1520610"
  },
  {
    "text": "and fill in these values so for example let's say I wanted to have two",
    "start": "1520610",
    "end": "1527690"
  },
  {
    "text": "attributes foo that's a string bar that's a number the table name maybe",
    "start": "1527690",
    "end": "1533090"
  },
  {
    "text": "would be james test1 and as for the schema let's create a hash and a range key so hash and a range key and then",
    "start": "1533090",
    "end": "1543920"
  },
  {
    "text": "perhaps to keep it simple we don't want any local secondary indexes and we don't want any global secondary indexes but",
    "start": "1543920",
    "end": "1550310"
  },
  {
    "text": "we'll set the provision throughput to be 5 and 5 so you can see here this is just",
    "start": "1550310",
    "end": "1555950"
  },
  {
    "text": "an exercise of me going through and filling out the values I didn't really have to worry about the structure or the key names I just had to go and fill in",
    "start": "1555950",
    "end": "1562160"
  },
  {
    "text": "the values that I wanted so now if I",
    "start": "1562160",
    "end": "1567170"
  },
  {
    "text": "save this I can instead specify an input",
    "start": "1567170",
    "end": "1574610"
  },
  {
    "text": "JSON here to this file that we just",
    "start": "1574610",
    "end": "1580190"
  },
  {
    "text": "provided and if I make it I'll go ahead and describe that table",
    "start": "1580190",
    "end": "1586690"
  },
  {
    "text": "so we can see here it has all the parameters I specified table name of James test one has a foo in a bar",
    "start": "1593330",
    "end": "1599460"
  },
  {
    "text": "attribute it has a hash an arranged key it also has read capacity and write capacity of five so it has all the",
    "start": "1599460",
    "end": "1606869"
  },
  {
    "text": "values than I needed and I could do this all from a single JSON document now one of the other things that I want to",
    "start": "1606869",
    "end": "1612450"
  },
  {
    "text": "mention here is that well I've specified create table from a single JSON document let's say someone sends me this JSON",
    "start": "1612450",
    "end": "1619109"
  },
  {
    "text": "document and says here's how I created this DynamoDB table and I look at it I don't want to really edit the document",
    "start": "1619109",
    "end": "1624989"
  },
  {
    "text": "but I think this is useful I want to create a table just like this but instead I want to specify a new table",
    "start": "1624989",
    "end": "1630629"
  },
  {
    "text": "name and so what I can do here is specify overrides what will happen is it will load that baseline document from",
    "start": "1630629",
    "end": "1639029"
  },
  {
    "text": "table JSON and then anything I've specified on the command line it will apply as an override so if I do this and",
    "start": "1639029",
    "end": "1647039"
  },
  {
    "text": "I describe that table again you can see it's the exact same thing",
    "start": "1647039",
    "end": "1653129"
  },
  {
    "text": "that I had created previously I have foo in a bar and I still have the same hash and range key as well as the provision",
    "start": "1653129",
    "end": "1659399"
  },
  {
    "text": "throughput but now I've overwritten in that table name and so I can actually change this table name as well as any",
    "start": "1659399",
    "end": "1666090"
  },
  {
    "text": "other of the top-level parameters that I want and it makes it a lot easier for me to have this programmatic manipulation",
    "start": "1666090",
    "end": "1671849"
  },
  {
    "text": "for input parameters all right all right",
    "start": "1671849",
    "end": "1681239"
  },
  {
    "text": "so that was creating and using JSON templates something that again I encourage you to check out if you want to be able to generate these skeletons",
    "start": "1681239",
    "end": "1688049"
  },
  {
    "text": "and make it very easy for you to fill in values it makes a lot easier for certain types of input parameters so the next",
    "start": "1688049",
    "end": "1696570"
  },
  {
    "start": "1695000",
    "end": "1763000"
  },
  {
    "text": "thing I want to cover is credential providers and by that I just mean the mechanism in which we look up",
    "start": "1696570",
    "end": "1702330"
  },
  {
    "text": "credentials so when we go to make a request and we need to sign it we go through this lookup process you can",
    "start": "1702330",
    "end": "1708029"
  },
  {
    "text": "imagine I might have a credential locator here on the left hand side and",
    "start": "1708029",
    "end": "1713669"
  },
  {
    "text": "it's looking for credentials so in turn it asks each object do you have credentials and which everyone returns",
    "start": "1713669",
    "end": "1719580"
  },
  {
    "text": "something we go with those credentials so for example we asked the environment",
    "start": "1719580",
    "end": "1724919"
  },
  {
    "text": "credential provider you credentials and if we're following our example where we ran the AWS configure command we know that it goes in the",
    "start": "1724919",
    "end": "1731150"
  },
  {
    "text": "shared credentials files so the answer is no and then it asks the shared credentials provider if you have",
    "start": "1731150",
    "end": "1736970"
  },
  {
    "text": "credentials and it says yes gives us credentials and for the duration of the process it uses those credentials now",
    "start": "1736970",
    "end": "1744590"
  },
  {
    "text": "the reason that I want to point this out is because you can see that it's possible to just have new credential",
    "start": "1744590",
    "end": "1750440"
  },
  {
    "text": "providers inserted into this lookup process and I want to go over one that was added fairly recently to the AWS CLI",
    "start": "1750440",
    "end": "1756230"
  },
  {
    "text": "and that's this assumed role provider now to help illustrate this point we're",
    "start": "1756230",
    "end": "1763670"
  },
  {
    "start": "1763000",
    "end": "1892000"
  },
  {
    "text": "going to look at an example where we want to cross account access using I am roles and to show what's going on here",
    "start": "1763670",
    "end": "1773090"
  },
  {
    "text": "let's say that I have two accounts two separate AWS accounts one that has an s3 bucket in production that I would like",
    "start": "1773090",
    "end": "1779570"
  },
  {
    "text": "access to and then the other is a development account and it has two I'm users shown here and so what I'd like to",
    "start": "1779570",
    "end": "1785780"
  },
  {
    "text": "do is give the i.m user on the bottom access to that s3 bucket and so I could",
    "start": "1785780",
    "end": "1794390"
  },
  {
    "text": "create long term credentials from the IME user in the production account and then securely transmit them and create a",
    "start": "1794390",
    "end": "1800090"
  },
  {
    "text": "new profile using that script we saw earlier in that configuration section but also what I can do is create an IM",
    "start": "1800090",
    "end": "1807860"
  },
  {
    "text": "role so an IM role just has two components you'll need to say who can assume the role and once that person or",
    "start": "1807860",
    "end": "1815480"
  },
  {
    "text": "thing has assumed the role what permissions do they have and so what we're going to do here is create a role",
    "start": "1815480",
    "end": "1821300"
  },
  {
    "text": "and say that the the developer or that I am user on the bottom has access to this",
    "start": "1821300",
    "end": "1827000"
  },
  {
    "text": "s3 bucket once it's assumed the role and you would go through and you would normally set this up well once you set",
    "start": "1827000",
    "end": "1833060"
  },
  {
    "text": "this up you still have before the Asuman will provide you there's actually still a number of things you would have to do",
    "start": "1833060",
    "end": "1838430"
  },
  {
    "text": "so you would need to make a call to the AWS security token service saying you",
    "start": "1838430",
    "end": "1843830"
  },
  {
    "text": "want to assume the role and then it would check make sure that you have access to or permissions to assume that",
    "start": "1843830",
    "end": "1849800"
  },
  {
    "text": "role and then if you do it will give you a set of temporary credentials and then those temporary credentials can then be",
    "start": "1849800",
    "end": "1856400"
  },
  {
    "text": "used you assume the role now before the assumed Oh provider you had to manage",
    "start": "1856400",
    "end": "1862850"
  },
  {
    "text": "this yourself and why you could script this quite easily the other thing that makes it slightly complicated is the",
    "start": "1862850",
    "end": "1869000"
  },
  {
    "text": "fact that these are temporary credentials so they expired so you'll need to make sure that in addition to",
    "start": "1869000",
    "end": "1874340"
  },
  {
    "text": "creating a profile you're also checking that the credentials have been expired and if they have expired you need to",
    "start": "1874340",
    "end": "1879830"
  },
  {
    "text": "make a new assumed role call and then set those as your new configuration variables and so you can now have this",
    "start": "1879830",
    "end": "1888860"
  },
  {
    "text": "all automatically handled for you in the CLI that's using these two configuration values here so we're using the configure",
    "start": "1888860",
    "end": "1894950"
  },
  {
    "text": "set command again and I set the role Arn that I want to assume and then I set a",
    "start": "1894950",
    "end": "1899960"
  },
  {
    "text": "source profile now the source profile is pointing to another profile that has",
    "start": "1899960",
    "end": "1906500"
  },
  {
    "text": "credentials and that's because that initial assumed role call is an authenticated call so we still need credentials so notice that dev is",
    "start": "1906500",
    "end": "1913100"
  },
  {
    "text": "pointing to an existing profile somewhere and once you set this up it's",
    "start": "1913100",
    "end": "1918950"
  },
  {
    "text": "just like normal usage of a profile we will automatically handle assuming the",
    "start": "1918950",
    "end": "1925490"
  },
  {
    "text": "role if there's no initial credentials and then we will also cache those credentials and then if you make that",
    "start": "1925490",
    "end": "1930650"
  },
  {
    "text": "same call again it will use the cached credentials until they expire and once they are expired it will automatically",
    "start": "1930650",
    "end": "1936860"
  },
  {
    "text": "refresh it it also handles a scenario where if you're running a long process say an s3 sink or a copy with a lot of",
    "start": "1936860",
    "end": "1942860"
  },
  {
    "text": "files if their credentials expire mid transfer it will also assume the role",
    "start": "1942860",
    "end": "1948020"
  },
  {
    "text": "and grab a new set of credentials for you and so I want to show what this",
    "start": "1948020",
    "end": "1953300"
  },
  {
    "text": "looks like the terminal here so I went",
    "start": "1953300",
    "end": "1961640"
  },
  {
    "text": "ahead and already set up a role here and the first thing I did was I'm going to",
    "start": "1961640",
    "end": "1967670"
  },
  {
    "text": "create a role but I'm going to give it this policy document here and this policy document just says that a",
    "start": "1967670",
    "end": "1972770"
  },
  {
    "text": "particular user is allowed to assume this role so I make this call here and",
    "start": "1972770",
    "end": "1978400"
  },
  {
    "text": "then I'm going to give it access to an s3 bucket so this is just saying you can",
    "start": "1978400",
    "end": "1983750"
  },
  {
    "text": "list and get the bucket location you can do any operation within the bucket and then you can also list all the buckets",
    "start": "1983750",
    "end": "1989870"
  },
  {
    "text": "and then I make this put wool policy call and notice I give it a policy name",
    "start": "1989870",
    "end": "1995929"
  },
  {
    "text": "and then the document and so once I've done that it gives me the ability to",
    "start": "1995929",
    "end": "2002380"
  },
  {
    "text": "assume the role and so what I would need to do in the CLI is you can run those two commands that configure your set",
    "start": "2002380",
    "end": "2007480"
  },
  {
    "text": "commands and so I've gone ahead and already set that up I'm just to show you",
    "start": "2007480",
    "end": "2012640"
  },
  {
    "text": "what this looks like here this first one prod access noticed I've set the role Arn and I set the source profile and so now",
    "start": "2012640",
    "end": "2021610"
  },
  {
    "text": "that I have this set I can go ahead and run a command and we'll look at what's going on a little more detail here I'm",
    "start": "2021610",
    "end": "2034090"
  },
  {
    "text": "also going to create a debug log if you haven't seen this before you can specify - - debug and it prints",
    "start": "2034090",
    "end": "2039940"
  },
  {
    "text": "a lot of information that can help you troubleshoot any problems you might be running into so I'm going to go ahead",
    "start": "2039940",
    "end": "2045460"
  },
  {
    "text": "and save this and run this command so what's happening here is it's going to assume the role and then it's going to",
    "start": "2045460",
    "end": "2052148"
  },
  {
    "text": "go ahead and reuse those temporary credentials to make the s3 call and",
    "start": "2052149",
    "end": "2057490"
  },
  {
    "text": "notice here we see the output of the bucket and if we actually look at the",
    "start": "2057490",
    "end": "2063010"
  },
  {
    "text": "ste bug log here you can see two things happen first we're looking for credentials so that's that credential provider we looked at a few slides ago",
    "start": "2063010",
    "end": "2070060"
  },
  {
    "text": "and then it notices that it's going to assume a role so it retrieves the credentials via assumed role and then",
    "start": "2070060",
    "end": "2076690"
  },
  {
    "text": "you can kind of see here it's making a call to assume role with the appropriate parameters and then it gets credentials",
    "start": "2076690",
    "end": "2083320"
  },
  {
    "text": "back and then it makes a call to s3 which is here and notice it's again",
    "start": "2083320",
    "end": "2089679"
  },
  {
    "text": "making a call to this particular s3 bucket and so what's nice here is then if I run the same command again when we",
    "start": "2089679",
    "end": "2098619"
  },
  {
    "text": "look at the debug log again you see that I still have access to that s3 bucket but this time and see that it's assuming",
    "start": "2098619",
    "end": "2104410"
  },
  {
    "text": "the role the credentials are retrieved from the cache and then it goes ahead I went ahead and made the s3 call so",
    "start": "2104410",
    "end": "2112359"
  },
  {
    "text": "that's using assumed role again it's just like any other profile that you've created except it really gives you a lot",
    "start": "2112359",
    "end": "2118570"
  },
  {
    "text": "of flexibility here and there's one other thing that I want to cover and that's this prod full s3 access so",
    "start": "2118570",
    "end": "2127700"
  },
  {
    "text": "in addition to the roll our and I've also created another role here but notice this line at the end here it has",
    "start": "2127700",
    "end": "2133410"
  },
  {
    "text": "MFA serial and so this is the ability when you assume a role to require that",
    "start": "2133410",
    "end": "2138540"
  },
  {
    "text": "they also need to send a one-time password from an MFA device so what that looks like now is if I go ahead and try",
    "start": "2138540",
    "end": "2146490"
  },
  {
    "text": "to make call here in this case I'm just gonna list all the buckets and I specify",
    "start": "2146490",
    "end": "2153680"
  },
  {
    "text": "this new profile what's going to happen is it's going to see that it wants to assume the role but that MFA is required",
    "start": "2153680",
    "end": "2159690"
  },
  {
    "text": "and so it'll actually prompt me for the MFA token here and in this case I",
    "start": "2159690",
    "end": "2165030"
  },
  {
    "text": "actually have a virtual MFA device set up with my phone so if I go to my phone",
    "start": "2165030",
    "end": "2170300"
  },
  {
    "text": "then I enter the MFA code here it'll go",
    "start": "2170300",
    "end": "2181500"
  },
  {
    "text": "ahead and make the assumed role call with the appropriate parameters and then if you notice if I say list the contents",
    "start": "2181500",
    "end": "2187920"
  },
  {
    "text": "of the other bucket so this role has full access to anything in s3 in this product Cal and if I list the contents",
    "start": "2187920",
    "end": "2194190"
  },
  {
    "text": "here notice I'm not prompted again it just gives me the access because it's",
    "start": "2194190",
    "end": "2200130"
  },
  {
    "text": "using that cash credentials all right",
    "start": "2200130",
    "end": "2205970"
  },
  {
    "text": "and so that was using that was a look at the assumed role provider there is also",
    "start": "2205970",
    "end": "2211830"
  },
  {
    "text": "another parameter I didn't show here if you want to specify an external ID you can also specify that that's just",
    "start": "2211830",
    "end": "2217560"
  },
  {
    "text": "another thing you can add to a policy to require that that parameter is sent that's using assumed role provider and",
    "start": "2217560",
    "end": "2224960"
  },
  {
    "text": "the next thing I want to look at is Amazon s3 streaming this one's just a thing that I think is is not",
    "start": "2224960",
    "end": "2231030"
  },
  {
    "start": "2225000",
    "end": "2330000"
  },
  {
    "text": "particularly advanced but I think it can be useful so what this allows you to do",
    "start": "2231030",
    "end": "2236250"
  },
  {
    "text": "is normally if you run the s3 commands something like CP which allows you to",
    "start": "2236250",
    "end": "2241800"
  },
  {
    "text": "upload download and copy from s3 to s3 but say that you want to avoid disk i/o",
    "start": "2241800",
    "end": "2248360"
  },
  {
    "text": "so one of the things you can do now is specify the - and so what this is going",
    "start": "2248360",
    "end": "2254130"
  },
  {
    "text": "to say is instead of reading from a particular file stream from standard end and so it",
    "start": "2254130",
    "end": "2259740"
  },
  {
    "text": "has all this logic built-in to read from standard in also intelligently switch to multi-part upload at the file size or",
    "start": "2259740",
    "end": "2266130"
  },
  {
    "text": "the stream gets large enough so it handles all this for you and it also allows you to stream to standard out so",
    "start": "2266130",
    "end": "2272610"
  },
  {
    "text": "I can say I want to take this s3 object and download it but right the contents",
    "start": "2272610",
    "end": "2278910"
  },
  {
    "text": "to standard out and so it enables use cases like this where I want to take",
    "start": "2278910",
    "end": "2284220"
  },
  {
    "text": "something from an s3 bucket maybe download it compress it and re-upload it and let's say that it's a really large",
    "start": "2284220",
    "end": "2291420"
  },
  {
    "text": "file and bigger than the space that I have locally available to me and so I can use something like this",
    "start": "2291420",
    "end": "2299310"
  },
  {
    "text": "where I'm running the CP command I'm taking it and streaming it to",
    "start": "2299310",
    "end": "2304650"
  },
  {
    "text": "standard out and then piping it into a command here B sub-2 this is just a command that compresses data and then",
    "start": "2304650",
    "end": "2312330"
  },
  {
    "text": "I'm taking that and streaming it directly back up to s3 and so this can handle a file of any size it doesn't",
    "start": "2312330",
    "end": "2318300"
  },
  {
    "text": "matter how large the file is it'll just stream that from standard in to standard out and it allows a lot of interesting",
    "start": "2318300",
    "end": "2325020"
  },
  {
    "text": "scenarios where you don't necessarily need to write out temporary files and so",
    "start": "2325020",
    "end": "2330869"
  },
  {
    "text": "we're actually going to move on to topic this is kind of an extra thing here I want to talk about bow decor for a",
    "start": "2330869",
    "end": "2337410"
  },
  {
    "text": "couple reasons bow decor is a Python library that the CLI uses and it's a thing that handles",
    "start": "2337410",
    "end": "2344160"
  },
  {
    "text": "all the requests serialization and response parsing all of the credential",
    "start": "2344160",
    "end": "2349530"
  },
  {
    "text": "management all that stuff and the CLI uses it and it's meant as a building",
    "start": "2349530",
    "end": "2355290"
  },
  {
    "text": "library a building block library that other libraries can use one other example is boto 3 which is the new",
    "start": "2355290",
    "end": "2361230"
  },
  {
    "text": "version of the Python SDK for AWS and I want to show this an example for a",
    "start": "2361230",
    "end": "2367470"
  },
  {
    "text": "couple of reasons the the main one is that if you've installed the CLI with pip you already have this library",
    "start": "2367470",
    "end": "2373590"
  },
  {
    "text": "available to you and so if you want to start exploring what you can do in",
    "start": "2373590",
    "end": "2378780"
  },
  {
    "text": "Python for accessing AWS you can check out boto core and in this example here",
    "start": "2378780",
    "end": "2385440"
  },
  {
    "text": "we're creating a session and once we create that session we can create a client for any of this",
    "start": "2385440",
    "end": "2390540"
  },
  {
    "text": "services so in this example I'm creating an s3 client I'm then saying that I want it to be in the US west to region and",
    "start": "2390540",
    "end": "2397950"
  },
  {
    "text": "then in this case yes this is Python code but hopefully it's not it's not that that hard to follow for it for the",
    "start": "2397950",
    "end": "2405780"
  },
  {
    "text": "people who aren't Python developers here but we're calling the list buckets method here so every client has methods",
    "start": "2405780",
    "end": "2412770"
  },
  {
    "text": "mapped to operations so for s3 things like list buckets list objects get object put object so we're making that",
    "start": "2412770",
    "end": "2420060"
  },
  {
    "text": "call and then the data we get back is just a hash so it's just like a Python dictionary and so I can access the",
    "start": "2420060",
    "end": "2426780"
  },
  {
    "text": "buckets key I can iterate over it for each bucket it has a name and so I'm printing out all the names of my buckets",
    "start": "2426780",
    "end": "2432510"
  },
  {
    "text": "here and just to show you what this looks like again if you've installed via pip which in this example here I have",
    "start": "2432510",
    "end": "2439620"
  },
  {
    "start": "2433000",
    "end": "2488000"
  },
  {
    "text": "you have access to this already so again I can just type Python and right away I",
    "start": "2439620",
    "end": "2445140"
  },
  {
    "text": "can just start importing boto core and trying it out so I can get a session like we saw and then I can create a",
    "start": "2445140",
    "end": "2452250"
  },
  {
    "text": "client so in this case I'll create a DynamoDB client and say for us West two",
    "start": "2452250",
    "end": "2457790"
  },
  {
    "text": "and then I can call this tables and I get a response back and so this response",
    "start": "2457790",
    "end": "2464540"
  },
  {
    "text": "has a number of keys so I can say things like response table names and it's just",
    "start": "2464540",
    "end": "2471360"
  },
  {
    "text": "like accessing say a JSON document or so where I can then index it and whatever else so that's just an example I wanted",
    "start": "2471360",
    "end": "2478230"
  },
  {
    "text": "to show you because it does come included if you've installed it the CLI with pip",
    "start": "2478230",
    "end": "2484220"
  },
  {
    "text": "all right and so those are all the topics that I wanted to cover so just wrapping up here we looked at",
    "start": "2487000",
    "end": "2493530"
  },
  {
    "start": "2488000",
    "end": "2594000"
  },
  {
    "text": "configuration looked at really what goes on when you run the configure command we looked at waiters and we looked at query",
    "start": "2493530",
    "end": "2500620"
  },
  {
    "text": "both some of the new things that have been added and as well as waiters which allow you to pull on resource changes",
    "start": "2500620",
    "end": "2505840"
  },
  {
    "text": "and then we looked at templates which are a way for you to have a lot of programmatic manipulation over your",
    "start": "2505840",
    "end": "2511450"
  },
  {
    "text": "inputs and this new assumed role provider which makes cross account access much easier with the CLI and",
    "start": "2511450",
    "end": "2518080"
  },
  {
    "text": "finally an example of s3 streaming as well as an extra topic on boto core so",
    "start": "2518080",
    "end": "2525370"
  },
  {
    "text": "here's some of those links that was talking about the AWS CLI fully open source so we are on github if feel free",
    "start": "2525370",
    "end": "2533230"
  },
  {
    "text": "to file issues or send pull requests the library that I showed previously boto cours also one github as well there's a",
    "start": "2533230",
    "end": "2540460"
  },
  {
    "text": "link to our user guide there that goes over all the details of getting set up and all the links for the msi installers",
    "start": "2540460",
    "end": "2546220"
  },
  {
    "text": "and anything else so if you're a new user that would be the link to check out then we also have links to the forums",
    "start": "2546220",
    "end": "2551890"
  },
  {
    "text": "our reference Docs and then that james path org site and finally if the last",
    "start": "2551890",
    "end": "2557140"
  },
  {
    "text": "section I covered before was interesting to anyone and you want to learn more about the options you have for Python",
    "start": "2557140",
    "end": "2562570"
  },
  {
    "text": "development using the Python SDK there is a boto three talk tomorrow that I",
    "start": "2562570",
    "end": "2567790"
  },
  {
    "text": "have encourage you to check out in addition to looking at this low-level client that we just looked at it also goes over a higher-level object-oriented",
    "start": "2567790",
    "end": "2575680"
  },
  {
    "text": "interface based on resources that's really nice to use so I encourage you to check that out if you're interested and",
    "start": "2575680",
    "end": "2581850"
  },
  {
    "text": "once again I want to thank you all for being here it looks like we have a little bit of extra time for questions I",
    "start": "2581850",
    "end": "2588910"
  },
  {
    "text": "hope you all enjoy the rest of your conference and once again thank you",
    "start": "2588910",
    "end": "2594210"
  }
]