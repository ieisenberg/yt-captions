[
  {
    "start": "0",
    "end": "141000"
  },
  {
    "text": "hi everybody thanks for coming especially after last night so I appreciate it my name is or I'm a senior product",
    "start": "170",
    "end": "7620"
  },
  {
    "text": "manager on the lambda team and I'm here today to talk to you about authoring and deploying service applications with a",
    "start": "7620",
    "end": "14490"
  },
  {
    "text": "special focus on AWS Sam and so this is",
    "start": "14490",
    "end": "20189"
  },
  {
    "text": "a bit of about what we'll be covering today I'll start with a brief intro on what a service app is just to make sure",
    "start": "20189",
    "end": "25650"
  },
  {
    "text": "we're all on the same page all that going to the benefits of going service",
    "start": "25650",
    "end": "31380"
  },
  {
    "text": "tie those benefits back into real life with a couple of customer examples and then we'll get into what it takes to",
    "start": "31380",
    "end": "40739"
  },
  {
    "text": "author a service application author in deploy a service application from writing that first line of code to the",
    "start": "40739",
    "end": "47399"
  },
  {
    "text": "end goal which is safely deploying a service application to production and we'll do this by first going over the",
    "start": "47399",
    "end": "55410"
  },
  {
    "text": "various tools at our disposal for authoring testing and debugging service",
    "start": "55410",
    "end": "60719"
  },
  {
    "text": "applications and then we'll get into deploying service applications and will",
    "start": "60719",
    "end": "66390"
  },
  {
    "text": "briefly review existing tooling for automating service deployments and then",
    "start": "66390",
    "end": "72030"
  },
  {
    "text": "we'll get into something new that launched this week that can help you adhere to best practices minimize",
    "start": "72030",
    "end": "77369"
  },
  {
    "text": "deployment risk and reduce the blast radius so as I mentioned just really",
    "start": "77369",
    "end": "85170"
  },
  {
    "text": "quickly to make sure everybody's on the same page what is a service application so it starts with that component in the",
    "start": "85170",
    "end": "91710"
  },
  {
    "text": "middle over there your lambda function which is your compute and you can write a letter it runs your code you can write",
    "start": "91710",
    "end": "98159"
  },
  {
    "text": "it in any of our support languages today which is dotnet Java Python and nodejs",
    "start": "98159",
    "end": "105390"
  },
  {
    "text": "and very soon as was announced yesterday the go is going to join our family of supported languages which were pretty",
    "start": "105390",
    "end": "111780"
  },
  {
    "text": "excited about and your function is triggered by an event that event can",
    "start": "111780",
    "end": "118710"
  },
  {
    "text": "come either from an event source such as s3 or SNS it can also just be a lambda",
    "start": "118710",
    "end": "124560"
  },
  {
    "text": "invoke API call that you make directly to lambda once your function is invoked",
    "start": "124560",
    "end": "130289"
  },
  {
    "text": "the newer code runs and your code could do anything you'd like it to do so it could",
    "start": "130289",
    "end": "135330"
  },
  {
    "text": "call any downstream service you'd like",
    "start": "135330",
    "end": "138770"
  },
  {
    "text": "why are we all here today what are the benefits of going serving us well there",
    "start": "140900",
    "end": "146130"
  },
  {
    "start": "141000",
    "end": "141000"
  },
  {
    "text": "are four key benefits first there are no servers to provision or manage so no",
    "start": "146130",
    "end": "153240"
  },
  {
    "text": "capacity planning's no installing security patches we hear customers tell us that now they can take a large team",
    "start": "153240",
    "end": "159840"
  },
  {
    "text": "that was mostly focused on keeping infrastructure up and running and repurpose that team or a large portion",
    "start": "159840",
    "end": "166740"
  },
  {
    "text": "of it to efforts and projects that drive business value and I mentioned capacity",
    "start": "166740",
    "end": "173880"
  },
  {
    "text": "planning's so with lambda questions such as how many servers do I need am i",
    "start": "173880",
    "end": "180630"
  },
  {
    "text": "provision sufficiently for peak conversely am i under utilizing my fleet",
    "start": "180630",
    "end": "185960"
  },
  {
    "text": "those questions go away with lambda because data scales up and down based on",
    "start": "185960",
    "end": "191370"
  },
  {
    "text": "incoming traffic without you having to worry about it and that brings me to my",
    "start": "191370",
    "end": "197250"
  },
  {
    "text": "third point which is you never pay for idle you only pay for requests that are",
    "start": "197250",
    "end": "204450"
  },
  {
    "text": "coming in and for compute time so if your application is not doing something",
    "start": "204450",
    "end": "210570"
  },
  {
    "text": "that's valuable for your business you pay nothing and lastly lambda has fault tolerance",
    "start": "210570",
    "end": "218130"
  },
  {
    "text": "built-in which strips away the complexity of having to deal with architecting across availability zones",
    "start": "218130",
    "end": "225830"
  },
  {
    "text": "these benefits are becoming clearer and clearer and we're seeing more and more customers migrating to server less and",
    "start": "227030",
    "end": "233070"
  },
  {
    "text": "just to give you a couple of brief examples FINRA is processing over half a",
    "start": "233070",
    "end": "238350"
  },
  {
    "text": "trillion stock trades daily using lambda and since they went server less they",
    "start": "238350",
    "end": "243840"
  },
  {
    "text": "report lower processing time lower costs and most importantly for them",
    "start": "243840",
    "end": "248900"
  },
  {
    "text": "scalability is not an issue and they can scale three to four X this amount without them having to worry about it",
    "start": "248900",
    "end": "254880"
  },
  {
    "text": "without any action needed to be taken by the team another cool example is Thomson",
    "start": "254880",
    "end": "261269"
  },
  {
    "text": "Reuters product insights which is a web analytics platform that processes up to 4,000",
    "start": "261270",
    "end": "266810"
  },
  {
    "text": "per second they build the system in less than five months it requires very little",
    "start": "266810",
    "end": "272990"
  },
  {
    "text": "maintenance and again scalability is cited to be the main benefit for them with recent spiky events such as brexit",
    "start": "272990",
    "end": "281030"
  },
  {
    "text": "and the u.s. elections coming and going with no actions needed to be taken by the team we armed the lambda team as we",
    "start": "281030",
    "end": "290570"
  },
  {
    "text": "work with these customers help them build their service applications we learn more about what it takes to build",
    "start": "290570",
    "end": "296360"
  },
  {
    "text": "a service application what it takes to author and deploy a service application and last year on well on this stage but",
    "start": "296360",
    "end": "307220"
  },
  {
    "start": "305000",
    "end": "305000"
  },
  {
    "text": "in a similar stage somewhere in hotel nearby I was talking about application lifecycle management and I showed this",
    "start": "307220",
    "end": "314270"
  },
  {
    "text": "diagram that that you see now I talked about how you first have to author your",
    "start": "314270",
    "end": "319490"
  },
  {
    "text": "code which you could do in any idea you'd like you then have to package or build your deployment package your",
    "start": "319490",
    "end": "325940"
  },
  {
    "text": "lambda deployment package you then have to test your applications before eventually deploying it to multiple",
    "start": "325940",
    "end": "333140"
  },
  {
    "text": "environments or to production now realistically this flow encapsulates two",
    "start": "333140",
    "end": "339760"
  },
  {
    "text": "different flows within it the first flow is the author test debug loop and that's",
    "start": "339760",
    "end": "347030"
  },
  {
    "text": "when we write our code we think it's ready we test it it's not ready we debug",
    "start": "347030",
    "end": "352850"
  },
  {
    "text": "we rewrite it and we can go on and on with in this loop now we're usually very",
    "start": "352850",
    "end": "358310"
  },
  {
    "text": "well let me rephrase I remember from my days as a developer that I was extremely",
    "start": "358310",
    "end": "363560"
  },
  {
    "text": "intolerant towards any inefficiencies in this flow so we would like this flow or",
    "start": "363560",
    "end": "368840"
  },
  {
    "text": "our dev environment when we're immersed in this flow to be as tight as possible to be as quick as possible to provide us",
    "start": "368840",
    "end": "375410"
  },
  {
    "text": "with easy easy to consume feedback and what's going on and once we think we're",
    "start": "375410",
    "end": "382700"
  },
  {
    "text": "ready once we think our code is done that's when we check in and after we",
    "start": "382700",
    "end": "388850"
  },
  {
    "text": "check in and the second flow essentially kicks off and the second flow is the automated deployment process and that's",
    "start": "388850",
    "end": "395240"
  },
  {
    "text": "when we have some orchestration mechanism that picks up our code from a record",
    "start": "395240",
    "end": "400520"
  },
  {
    "text": "people and puts it through you know the build process where our code is packaged and/or built we then have to test our",
    "start": "400520",
    "end": "407569"
  },
  {
    "text": "code and that mechanism essentially after that also deploys our code to multiple environments and we'll start",
    "start": "407569",
    "end": "416629"
  },
  {
    "text": "with the first flow here so the first",
    "start": "416629",
    "end": "421669"
  },
  {
    "text": "thing we need to understand is that different tools for different use cases",
    "start": "421669",
    "end": "427069"
  },
  {
    "text": "and so just like I would use use scissors to cut paper and the chainsaw to cut wood and it's probably not a good",
    "start": "427069",
    "end": "434000"
  },
  {
    "text": "idea to mix those do I'd probably want to choose the appropriate tool for the",
    "start": "434000",
    "end": "439099"
  },
  {
    "text": "type of application that I'm trying to build so for example if I'm trying to",
    "start": "439099",
    "end": "444830"
  },
  {
    "text": "build something that's simple let's say a chatbot or an electro skill something that probably has one or just several",
    "start": "444830",
    "end": "451969"
  },
  {
    "text": "and functions I'm the only collaborator or I'm the only contributor there's no code people behind me",
    "start": "451969",
    "end": "458259"
  },
  {
    "text": "I'd like to ideally write my code somewhere that's close to the actual and",
    "start": "458259",
    "end": "463460"
  },
  {
    "text": "the environment something something that a Toula provides me with that quick and easy to consume feedback loop and so I'd",
    "start": "463460",
    "end": "470569"
  },
  {
    "text": "probably like to use something like the lambda console the only issue with the latter console is that up until this",
    "start": "470569",
    "end": "477650"
  },
  {
    "text": "week it's not more like an AWS console I felt less like a great place to write code in so I'm happy to introduce the",
    "start": "477650",
    "end": "487310"
  },
  {
    "start": "485000",
    "end": "485000"
  },
  {
    "text": "new and improved lambda console which we actually announced yesterday and this",
    "start": "487310",
    "end": "494349"
  },
  {
    "text": "new layout is actually optimized for that quick author test debug loop it's",
    "start": "494349",
    "end": "501440"
  },
  {
    "text": "optimized to give you that quick feedback and that's true for three reasons first the lambda editor has now",
    "start": "501440",
    "end": "509090"
  },
  {
    "text": "been overhauled to be powered by the newly announced AWS cloud 9 and so you",
    "start": "509090",
    "end": "514789"
  },
  {
    "text": "can now edit multiple files within your deployment package on the lambda console you can most importantly you can",
    "start": "514789",
    "end": "522260"
  },
  {
    "text": "actually immerse yourself in this IDE like experience and after your code run",
    "start": "522260",
    "end": "527720"
  },
  {
    "text": "it and view the execution results right without leaving the context that you're in",
    "start": "527720",
    "end": "532880"
  },
  {
    "text": "just like within an ID secondly we released released a function graph or",
    "start": "532880",
    "end": "539510"
  },
  {
    "text": "function designer and that's essentially a visualization of what flows into your",
    "start": "539510",
    "end": "545210"
  },
  {
    "text": "lambda function and what flows out of it so you can really easily see the event",
    "start": "545210",
    "end": "550970"
  },
  {
    "text": "sources that are set up to trigger your function and also the downstream resources that your function has",
    "start": "550970",
    "end": "556490"
  },
  {
    "text": "permissions to access and lastly we overhauled the monitoring view so now it",
    "start": "556490",
    "end": "565190"
  },
  {
    "text": "includes interactive graphs that allow you to zoom into and out of any time",
    "start": "565190",
    "end": "570410"
  },
  {
    "text": "frame and for each time frame you can actually jump to the logs or metrics for",
    "start": "570410",
    "end": "576740"
  },
  {
    "text": "that specific time frame that you chose and so again shortening that feedback loop allowing you to narrow the",
    "start": "576740",
    "end": "582290"
  },
  {
    "text": "information you need down scope it down to exactly what you're trying to consume and before we go any further let me just",
    "start": "582290",
    "end": "589430"
  },
  {
    "text": "quickly show you how that looks like",
    "start": "589430",
    "end": "593770"
  },
  {
    "text": "so we actually introduced this new land the console in a couple of waves in the",
    "start": "605170",
    "end": "610400"
  },
  {
    "text": "last two months and one thing we did was we completely reduced the time it takes",
    "start": "610400",
    "end": "615800"
  },
  {
    "text": "to create a land the function actually let me just call this Rhiannon demo I'll",
    "start": "615800",
    "end": "621920"
  },
  {
    "text": "create a new row from templates and I'll call it again reinvent row I'll just",
    "start": "621920",
    "end": "629270"
  },
  {
    "text": "choose recognition permissions here just for for fun and I click on create and so",
    "start": "629270",
    "end": "637940"
  },
  {
    "text": "again this is all I had to do to create a lambda function to quickly get started I just have to enter a name the run time",
    "start": "637940",
    "end": "644450"
  },
  {
    "text": "is not yes by default but you can obviously change that and select a row",
    "start": "644450",
    "end": "650920"
  },
  {
    "text": "now the first view I land on is that function function graph a function designer I mentioned so as you can see",
    "start": "651610",
    "end": "658940"
  },
  {
    "text": "my function is here on the middle on the left I can see triggers that are added to my",
    "start": "658940",
    "end": "664730"
  },
  {
    "text": "function currently there are none but if for example I click on a trigger here from the left let's select API gateway in this case",
    "start": "664730",
    "end": "673270"
  },
  {
    "text": "let's zoom in a little bit then API",
    "start": "673270",
    "end": "680360"
  },
  {
    "text": "gateways added as a trigger on the left and you'll notice that once API gateway",
    "start": "680360",
    "end": "686420"
  },
  {
    "text": "is selected here the panel below changes as well so this function graph actually",
    "start": "686420",
    "end": "691520"
  },
  {
    "text": "acts as a navigational construct on this page as well so once the trigger is selected I can actually scroll down here",
    "start": "691520",
    "end": "698030"
  },
  {
    "text": "and configure that trigger now in a specific case I I just want to remove",
    "start": "698030",
    "end": "704330"
  },
  {
    "text": "that trigger for now now on the right I have the resources that my function can",
    "start": "704330",
    "end": "709940"
  },
  {
    "text": "access and so we have recognition because we added that to our functions execution role we also have cloud wash",
    "start": "709940",
    "end": "717050"
  },
  {
    "text": "logs because any function any role created on the console will get these permissions by default so your function",
    "start": "717050",
    "end": "723080"
  },
  {
    "text": "can actually emit logs to cloud watch now the cool thing here if I click on",
    "start": "723080",
    "end": "728090"
  },
  {
    "text": "one of these so let's click on recognition for example and scroll down I can actually see in an easy to consume",
    "start": "728090",
    "end": "735170"
  },
  {
    "text": "man what kind of actions my function can perform and on which resources and I can",
    "start": "735170",
    "end": "741260"
  },
  {
    "text": "see that either by a resource or by or by action so I can I can see here the three actions that my function can can",
    "start": "741260",
    "end": "747800"
  },
  {
    "text": "perform and I can see the resources on which it can perform those actions now",
    "start": "747800",
    "end": "756310"
  },
  {
    "text": "let's go back to our function and jump into the new editor before we do that I",
    "start": "756310",
    "end": "762020"
  },
  {
    "text": "just like to upload quickly upload a deployment package this is a really",
    "start": "762020",
    "end": "768050"
  },
  {
    "text": "silly but that I built it's really simple all it does is essentially taking a question and give you an excuse and",
    "start": "768050",
    "end": "775070"
  },
  {
    "text": "why it can't answer that question and the excuses are can be interesting so",
    "start": "775070",
    "end": "782540"
  },
  {
    "text": "bear with me as we go through this okay so the first thing I the first thing I'd",
    "start": "782540",
    "end": "787970"
  },
  {
    "text": "like to show you is I can quickly go into full-screen mode and again get into that IDE like experience and I can see",
    "start": "787970",
    "end": "795440"
  },
  {
    "text": "all the files in my deployment package here on the left and so for example I",
    "start": "795440",
    "end": "801050"
  },
  {
    "text": "don't need this this package dot lock JSON files so let's just remove it I don't need this weird Mac OSX folder so",
    "start": "801050",
    "end": "809150"
  },
  {
    "text": "let's remove that as well and I'm left with my node module and with my end fjs",
    "start": "809150",
    "end": "815740"
  },
  {
    "text": "and now I also get quick feedback on what's going on here so this variable is",
    "start": "815740",
    "end": "821480"
  },
  {
    "text": "not defined so let's just quickly quickly define it once I change my code",
    "start": "821480",
    "end": "828080"
  },
  {
    "text": "I can actually save my deployment package right here deployment package has been saved and now let's just go",
    "start": "828080",
    "end": "836630"
  },
  {
    "text": "into the next phase which is testing my function so let's see what happens here once I click on test and this is another",
    "start": "836630",
    "end": "842630"
  },
  {
    "text": "improvement we added a couple I think a months ago a month ago you can actually create multiple test events and those",
    "start": "842630",
    "end": "849020"
  },
  {
    "text": "will get persisted so those will be carried along with you and any machine you use and so let's just quickly create",
    "start": "849020",
    "end": "856640"
  },
  {
    "text": "a a test event I'll call this time and I'll just ask what is the time now once",
    "start": "856640",
    "end": "864800"
  },
  {
    "text": "I do this I can simply create my test event and now as I click here I can actually",
    "start": "864800",
    "end": "871440"
  },
  {
    "text": "see my Testament that I created I can just click on test and I see my response",
    "start": "871440",
    "end": "879120"
  },
  {
    "text": "right here below so I get my response I get my my log information I actually get",
    "start": "879120",
    "end": "885960"
  },
  {
    "text": "visualization here on the right on the right hand side here and what actually happened and some important metrics like",
    "start": "885960",
    "end": "892380"
  },
  {
    "text": "like max memory used and a time of execution so I mentioned I could do",
    "start": "892380",
    "end": "899100"
  },
  {
    "text": "multiple events here so I can create a new one and let's call this we an event",
    "start": "899100",
    "end": "906890"
  },
  {
    "text": "unless let's ask what launched at reinvent and now I can see my two test",
    "start": "906890",
    "end": "917730"
  },
  {
    "text": "events I can actually switch between those and use those to invoke my function so I can run tests again yep",
    "start": "917730",
    "end": "929210"
  },
  {
    "text": "stupid excuses and again just",
    "start": "929210",
    "end": "934710"
  },
  {
    "text": "demonstrating really quickly how easy it is now to just go through that loop on the lambda console when that situation",
    "start": "934710",
    "end": "941430"
  },
  {
    "text": "arises one last thing I'd like to show you on the console",
    "start": "941430",
    "end": "948649"
  },
  {
    "text": "is the monitoring view I mentioned so just jumping to a function that has a",
    "start": "953500",
    "end": "958840"
  },
  {
    "text": "bunch of invocations here and as you can see now I can actually go over the graph I can see information really quickly",
    "start": "958840",
    "end": "964810"
  },
  {
    "text": "such as max average min time in this case this is a duration your function",
    "start": "964810",
    "end": "970060"
  },
  {
    "text": "took to execute and I could do things like essentially scroll into a specific",
    "start": "970060",
    "end": "975580"
  },
  {
    "text": "piece of the data but and I'm interested in and then jump directly to cloud watch",
    "start": "975580",
    "end": "980980"
  },
  {
    "text": "directly to the logs and so what I did here was essentially jump to this",
    "start": "980980",
    "end": "986040"
  },
  {
    "text": "two-and-a-half hour period and I can examine the laws for that specific",
    "start": "986040",
    "end": "991870"
  },
  {
    "text": "period really easily and I could do that for any time frame I choose",
    "start": "991870",
    "end": "997050"
  },
  {
    "text": "okay so that was the lambda console one",
    "start": "1004209",
    "end": "1009560"
  },
  {
    "start": "1009000",
    "end": "1009000"
  },
  {
    "text": "quick thing I'd like to make sure everybody's aware of is that again making sure that experience is convenient and quick we also added a",
    "start": "1009560",
    "end": "1016550"
  },
  {
    "text": "bunch of keyboard shortcuts for the important actions that you would need to take while you're in that loop so those",
    "start": "1016550",
    "end": "1023720"
  },
  {
    "text": "are all listed here on the screen the one thing I will call out though is the first one the fullscreen one which is",
    "start": "1023720",
    "end": "1030110"
  },
  {
    "text": "command shift F on Mac ctrl shift F on PC and that's the keyboard shortcut that brings you into that immersive",
    "start": "1030110",
    "end": "1036709"
  },
  {
    "text": "fullscreen experience that I just showed you so okay great we went through the",
    "start": "1036709",
    "end": "1047839"
  },
  {
    "text": "simple application that can be built on the lambda console that's nice but realistically most of us have more",
    "start": "1047839",
    "end": "1055100"
  },
  {
    "text": "complex applications most of us have collaborators quadruples behind us and most importantly most applications",
    "start": "1055100",
    "end": "1062210"
  },
  {
    "text": "actually comprised of dozens of resources and multiple lambda functions and not just one and the function and",
    "start": "1062210",
    "end": "1068090"
  },
  {
    "text": "one event source and so for these type of applications we actually have two",
    "start": "1068090",
    "end": "1074410"
  },
  {
    "text": "components that we would need to author the first one is our code which is",
    "start": "1074410",
    "end": "1079669"
  },
  {
    "text": "always going to be there and the second component is my is actually our application we need to have an easy way",
    "start": "1079669",
    "end": "1086540"
  },
  {
    "text": "to define our application define the resources within our application in a in",
    "start": "1086540",
    "end": "1093620"
  },
  {
    "text": "an easy manner and so for those of you",
    "start": "1093620",
    "end": "1098720"
  },
  {
    "text": "who haven't already meet Sam which is our server list application model and the server list application model is",
    "start": "1098720",
    "end": "1106870"
  },
  {
    "start": "1104000",
    "end": "1104000"
  },
  {
    "text": "essentially a specification that extends CloudFormation and is optimized for",
    "start": "1106870",
    "end": "1112460"
  },
  {
    "text": "service it lets you define three resource types that are commonly used in",
    "start": "1112460",
    "end": "1118090"
  },
  {
    "text": "service applications API gateway ap is lambda functions and dynamodb tables and",
    "start": "1118090",
    "end": "1125650"
  },
  {
    "text": "the important thing to note here is that Sam is essentially a CloudFormation",
    "start": "1125650",
    "end": "1131030"
  },
  {
    "text": "template under the covers and so you can define any cloud formation resource you'd like within",
    "start": "1131030",
    "end": "1136519"
  },
  {
    "text": "Sam template and that's simply going to work now I mentioned cloud formation so",
    "start": "1136519",
    "end": "1144289"
  },
  {
    "text": "I'll just briefly go over what confirmation is for those of you who are less familiar cloud formation is our",
    "start": "1144289",
    "end": "1149959"
  },
  {
    "text": "service for defining provisioning and managing defining provisioning and",
    "start": "1149959",
    "end": "1155989"
  },
  {
    "text": "managing a collection of related AWS resources in that collection and",
    "start": "1155989",
    "end": "1162080"
  },
  {
    "text": "Confirmation terms is referred to as a stack and a stack can be defined with a template that can be neither yama or",
    "start": "1162080",
    "end": "1169129"
  },
  {
    "text": "json and cloud formation can take that template that you wrote and essentially provision resources and then manage them",
    "start": "1169129",
    "end": "1175429"
  },
  {
    "text": "in your account information is a great and powerful resource the only issue is",
    "start": "1175429",
    "end": "1181909"
  },
  {
    "text": "is I was built years ago when server lists were was a live in a sparkle in",
    "start": "1181909",
    "end": "1187820"
  },
  {
    "text": "someone's eyes yet and so it's optimized for infrastructure left so for service",
    "start": "1187820",
    "end": "1194059"
  },
  {
    "text": "and that's the gap that Sarah is trying to to bridge so what what is the same",
    "start": "1194059",
    "end": "1201200"
  },
  {
    "start": "1199000",
    "end": "1199000"
  },
  {
    "text": "template essentially this is a really simple one and what I'm doing here is I have a lambda function defined here a",
    "start": "1201200",
    "end": "1208729"
  },
  {
    "text": "service function which is translated under the covers to a lambda function below that you can see I'm defining a",
    "start": "1208729",
    "end": "1214639"
  },
  {
    "text": "couple of lambda function properties so I have my link to the code I have my",
    "start": "1214639",
    "end": "1220070"
  },
  {
    "text": "handler I have a runtime and have some iam policies that my function is going to assume and below that I'm defining my",
    "start": "1220070",
    "end": "1228320"
  },
  {
    "text": "event source and the cool thing there is that you note I don't have to explicitly",
    "start": "1228320",
    "end": "1234349"
  },
  {
    "text": "define my API here the simplicity finition as an event source is enough for cloud",
    "start": "1234349",
    "end": "1240859"
  },
  {
    "text": "formation to be able to provision that API in my account and the line that",
    "start": "1240859",
    "end": "1246409"
  },
  {
    "text": "makes this all possible is the transform line this is what essentially tells",
    "start": "1246409",
    "end": "1252379"
  },
  {
    "text": "cloud formation to take this template and transform it into a full-blown CloudFormation template under the covers",
    "start": "1252379",
    "end": "1259879"
  },
  {
    "text": "and a full-blown CloudFormation template is what is what cloud formation is going",
    "start": "1259879",
    "end": "1266149"
  },
  {
    "text": "to use in order to provision resources in my come and if you're wondering what are",
    "start": "1266149",
    "end": "1273230"
  },
  {
    "text": "actually the resources that will get provision here then those are the",
    "start": "1273230",
    "end": "1278570"
  },
  {
    "text": "resources in this specific case we have a lambda function we have a couple of AP",
    "start": "1278570",
    "end": "1284510"
  },
  {
    "text": "a couple of I M resources we have some API resources and if you're thinking",
    "start": "1284510",
    "end": "1290080"
  },
  {
    "text": "these are actually a lot of resources to get provision from that short template then you're actually right and this is",
    "start": "1290080",
    "end": "1297440"
  },
  {
    "start": "1297000",
    "end": "1297000"
  },
  {
    "text": "how the full-blown CloudFormation template is going to look like I think there's some more under the the screen over here and so I don't know about you",
    "start": "1297440",
    "end": "1304820"
  },
  {
    "text": "but I definitely rather code in Sam when possible okay so we talked about",
    "start": "1304820",
    "end": "1315040"
  },
  {
    "text": "authoring we talked about authoring our application with Sam and then authoring",
    "start": "1315040",
    "end": "1320780"
  },
  {
    "text": "a code with any idea you'd like but yesterday we actually announced an IDE that's optimized for service development",
    "start": "1320780",
    "end": "1327890"
  },
  {
    "text": "and that idea is cloud 9 and cloud 9 is fully integrated cloud based environment",
    "start": "1327890",
    "end": "1335710"
  },
  {
    "start": "1329000",
    "end": "1329000"
  },
  {
    "text": "with dev environment with an editor a terminal and a debugger it's accessed",
    "start": "1335710",
    "end": "1342860"
  },
  {
    "text": "through your web browser and it comes prepackaged with all the tools you'd expect to find for your language of",
    "start": "1342860",
    "end": "1349400"
  },
  {
    "text": "choice and the really cool thing about cloud 9 is that it's optimized for server development in a few ways first",
    "start": "1349400",
    "end": "1357290"
  },
  {
    "text": "it's fully integrated with the lambda environment and so you can do things",
    "start": "1357290",
    "end": "1363800"
  },
  {
    "text": "like import functions from the lambda environment into cloud 9 you can do things like deploy your function from",
    "start": "1363800",
    "end": "1370040"
  },
  {
    "text": "Cloud 9 back into lambda it comes with native support for Sam so it allows you to generate these templates super easily",
    "start": "1370040",
    "end": "1377530"
  },
  {
    "text": "and it comes with a couple other tools that we'll we'll see in a few minutes so",
    "start": "1377530",
    "end": "1388660"
  },
  {
    "text": "again we can offer applications with Sam after code within the IDE combine those",
    "start": "1388660",
    "end": "1393890"
  },
  {
    "text": "two into cloud nine for for a great experience but what about the other two",
    "start": "1393890",
    "end": "1398930"
  },
  {
    "text": "nodes here in this diagram what about testing and the your service applications well testing",
    "start": "1398930",
    "end": "1408590"
  },
  {
    "text": "and debugging service applications presents a unique set of challenges and that's true because first and foremost",
    "start": "1408590",
    "end": "1416200"
  },
  {
    "start": "1413000",
    "end": "1413000"
  },
  {
    "text": "server lists means that you don't have to manage any servers right and so the",
    "start": "1416200",
    "end": "1422030"
  },
  {
    "text": "underlying infrastructure is abstracted away from you and is managed by AWS and",
    "start": "1422030",
    "end": "1428200"
  },
  {
    "text": "if that's the case then how do I make sure that the code that's running",
    "start": "1428200",
    "end": "1433580"
  },
  {
    "text": "successfully in my dev environment will actually run successfully in lambda as",
    "start": "1433580",
    "end": "1439190"
  },
  {
    "text": "well well ideally I'd like a few things do to happen I like my code to run in an",
    "start": "1439190",
    "end": "1447980"
  },
  {
    "text": "environment that essentially has the same run of runs on the same OS has the",
    "start": "1447980",
    "end": "1453500"
  },
  {
    "text": "same libraries has the same runtime that lambda has in production will be great",
    "start": "1453500",
    "end": "1460670"
  },
  {
    "text": "if configured limits such as memory and timeouts could be enforced locally because if my function takes 30 seconds",
    "start": "1460670",
    "end": "1467180"
  },
  {
    "text": "to run and my configured limit was three seconds then I'd rather find that out as",
    "start": "1467180",
    "end": "1472940"
  },
  {
    "text": "soon as possible and not find that out as I'm deploying to production for high",
    "start": "1472940",
    "end": "1478700"
  },
  {
    "text": "fidelity I'd also love it if my response object and logs would be essentially mimicked locally and lastly it would be",
    "start": "1478700",
    "end": "1488600"
  },
  {
    "text": "great to be able to generate test events in an easy fashion and the reason this",
    "start": "1488600",
    "end": "1494960"
  },
  {
    "text": "is less than straightforward is because lambda has over 15 events or sense and the itchin they each emit their own",
    "start": "1494960",
    "end": "1502450"
  },
  {
    "text": "specific event pattern to lambda and just to give you one example this is an",
    "start": "1502450",
    "end": "1508940"
  },
  {
    "text": "s3 event an event that s3 sent lambda and if I want to test this function",
    "start": "1508940",
    "end": "1515720"
  },
  {
    "text": "locally I'd have to retrieve this event save it and customize it for my testing",
    "start": "1515720",
    "end": "1520790"
  },
  {
    "text": "means this isn't the most complex thing in the world but nevertheless it can be",
    "start": "1520790",
    "end": "1525890"
  },
  {
    "text": "it can be time-consuming and a bit annoying if you have to do this over and over again for multiple event sources in",
    "start": "1525890",
    "end": "1532280"
  },
  {
    "text": "your service application and so I'd like to introduce a tool that",
    "start": "1532280",
    "end": "1540680"
  },
  {
    "text": "essentially bridges or helps you overcome all these challenges and that tool is Sam local and Sam local is a CLI",
    "start": "1540680",
    "end": "1549170"
  },
  {
    "start": "1545000",
    "end": "1545000"
  },
  {
    "text": "tool that helps you locally test your lambda functions or your service",
    "start": "1549170",
    "end": "1555410"
  },
  {
    "text": "applications it's going to allow you to quit more quickly iterate on your functions and it's going to maximize the",
    "start": "1555410",
    "end": "1562880"
  },
  {
    "text": "chances that your code will actually run as expected in production and that's",
    "start": "1562880",
    "end": "1568970"
  },
  {
    "text": "true for a few reasons first Sam local runs your code in a docker container",
    "start": "1568970",
    "end": "1574820"
  },
  {
    "text": "that mimics the lambda environment so it runs with the same runtime the same libraries that exist in lambda secondly",
    "start": "1574820",
    "end": "1583810"
  },
  {
    "text": "Sam local actually enforced this configuration limits things like memory and timeout if your function is fronted",
    "start": "1583810",
    "end": "1592850"
  },
  {
    "text": "by API gateway Sam local actually lets you ping your API which is going to",
    "start": "1592850",
    "end": "1597890"
  },
  {
    "text": "execute your function all on your local machine alternatively if your function",
    "start": "1597890",
    "end": "1603200"
  },
  {
    "text": "is triggered by a different event source then Sam local is going to allow you to",
    "start": "1603200",
    "end": "1608390"
  },
  {
    "text": "quickly generate test events for commonly used event sources in lambda so",
    "start": "1608390",
    "end": "1614240"
  },
  {
    "text": "one example is this command over here which helps you generate a test event for an s3 event all you need to provide",
    "start": "1614240",
    "end": "1621830"
  },
  {
    "text": "it is the bucket and key and you get your test event response objects and",
    "start": "1621830",
    "end": "1629240"
  },
  {
    "text": "logs are also emitted as they would be",
    "start": "1629240",
    "end": "1634550"
  },
  {
    "text": "in the lambda environment when you run your function in Sam local your response is essentially piped into STD out logs",
    "start": "1634550",
    "end": "1642950"
  },
  {
    "text": "or piped into STD air and you could actually pipe your logs to any file you'd like",
    "start": "1642950",
    "end": "1647960"
  },
  {
    "text": "which makes makes life easier when you're automating testing against Sam local and would actually like to persist",
    "start": "1647960",
    "end": "1655160"
  },
  {
    "text": "your logs for further inspection Sam local exposes a debugger port so you can",
    "start": "1655160",
    "end": "1660680"
  },
  {
    "text": "essentially debug it using any ID we'll see as a quick example of debugging with",
    "start": "1660680",
    "end": "1665840"
  },
  {
    "text": "Sam local later on it currently supports Java nodejs and",
    "start": "1665840",
    "end": "1671330"
  },
  {
    "text": "Python and the easiest way to install Sam local is just to run npm install and",
    "start": "1671330",
    "end": "1678160"
  },
  {
    "text": "Sam Rockwell's is completely open sourced and written go so you can just go on the github repo and download the",
    "start": "1678160",
    "end": "1685640"
  },
  {
    "text": "binaries we make those available over there or if you really want to you could always just download the code and compile it and I won't spend a lot of",
    "start": "1685640",
    "end": "1695690"
  },
  {
    "text": "time here just I just want to quickly go over a couple of important commands the",
    "start": "1695690",
    "end": "1701990"
  },
  {
    "text": "first one is the local command which we'll get to in the next slide but the second command that's interesting here",
    "start": "1701990",
    "end": "1708530"
  },
  {
    "text": "is sam validate and sam validate actually validates your Sam template",
    "start": "1708530",
    "end": "1714429"
  },
  {
    "text": "against the actual Sam specification on your local machine and so again giving",
    "start": "1714429",
    "end": "1720980"
  },
  {
    "text": "you that quick feedback loop because if I have a problem with my Sam template I have some bugs something is not",
    "start": "1720980",
    "end": "1726650"
  },
  {
    "text": "configured correctly I'd rather I'd rather find that out as soon as possible and not find that out as I'm deploying",
    "start": "1726650",
    "end": "1732890"
  },
  {
    "text": "or as my pipeline is in the works so",
    "start": "1732890",
    "end": "1739150"
  },
  {
    "text": "what command Sam local actually provides you the first command is start API and",
    "start": "1739150",
    "end": "1746890"
  },
  {
    "text": "start API starts local go HTTP server on your local machine and again just",
    "start": "1746890",
    "end": "1755240"
  },
  {
    "text": "explaining the power here if your Sam template defines 20 30 ap is that are",
    "start": "1755240",
    "end": "1761419"
  },
  {
    "text": "triggered just two that are set up to trigger different lambda functions you run one command start API and all these",
    "start": "1761419",
    "end": "1767419"
  },
  {
    "text": "api's are essentially available to you or for you to ping on your local machine",
    "start": "1767419",
    "end": "1774280"
  },
  {
    "text": "the second command here is invoke and that the command and essentially allows you to locally execute your lambda",
    "start": "1774280",
    "end": "1780590"
  },
  {
    "text": "function directly and thirdly we have the generate event command which is the command I showed you before and allows",
    "start": "1780590",
    "end": "1787309"
  },
  {
    "text": "you to generate a test event super quickly now the cool thing about all",
    "start": "1787309",
    "end": "1792710"
  },
  {
    "text": "this is that all of this is available to you in cloud 9 and it's not only",
    "start": "1792710",
    "end": "1799220"
  },
  {
    "text": "available in cloud 9 cloud 9 has actually stripped some of the complexity away and",
    "start": "1799220",
    "end": "1804230"
  },
  {
    "text": "provides easy-to-use UI on top of the Sam local commands so let's take a quick",
    "start": "1804230",
    "end": "1813140"
  },
  {
    "text": "look at how that looks like",
    "start": "1813140",
    "end": "1816430"
  },
  {
    "text": "okay so this is the cloud9 IDE on the",
    "start": "1825990",
    "end": "1833799"
  },
  {
    "text": "right here I just expanded this AWS resources panel and this gives me a",
    "start": "1833799",
    "end": "1839140"
  },
  {
    "text": "couple of options first I see my remote function so this is all the functions that I have an US East one I could click",
    "start": "1839140",
    "end": "1846490"
  },
  {
    "text": "on any of them and do things like import so essentially bring that function into my IDE and once",
    "start": "1846490",
    "end": "1855220"
  },
  {
    "text": "it's in my IDE I'll see it here under local functions and then I could do",
    "start": "1855220",
    "end": "1860710"
  },
  {
    "text": "seeing things like deploy it back to lambda edit my function or run it in",
    "start": "1860710",
    "end": "1866470"
  },
  {
    "text": "various different scenarios and I'll show you that in a second I can also convert it to the stand to be able to",
    "start": "1866470",
    "end": "1873460"
  },
  {
    "text": "generate that time template super quickly that's already happened so nothing to show here okay so I have one",
    "start": "1873460",
    "end": "1883630"
  },
  {
    "text": "simple function here let's just open my index J yes file a super easy super simple function I'm",
    "start": "1883630",
    "end": "1892870"
  },
  {
    "text": "requiring this github package all I'm doing is querying repos with this first",
    "start": "1892870",
    "end": "1899950"
  },
  {
    "text": "hearing string the inner blast and query string and sorting that by stars now",
    "start": "1899950",
    "end": "1905230"
  },
  {
    "text": "you'll notice that I'm using the github package and I don't have any node",
    "start": "1905230",
    "end": "1910240"
  },
  {
    "text": "modules here but now because I'm inside an IDE with four ID capabilities and I",
    "start": "1910240",
    "end": "1916059"
  },
  {
    "text": "mentioned tools are pre-installed for the pack for the language of your choice so obviously I have NPM here so I can",
    "start": "1916059",
    "end": "1922510"
  },
  {
    "text": "just do NPM install github and get my",
    "start": "1922510",
    "end": "1929080"
  },
  {
    "text": "package right here and so let's try to invoke this function",
    "start": "1929080",
    "end": "1937440"
  },
  {
    "text": "I can click on one over here",
    "start": "1937440",
    "end": "1941899"
  },
  {
    "text": "now once I click on run I actually have a couple of options I can invoke the",
    "start": "1944720",
    "end": "1951990"
  },
  {
    "text": "land function locally and this is essentially using Sam local under the covers if this function is fronted by",
    "start": "1951990",
    "end": "1959160"
  },
  {
    "text": "API gateway I could ping the API gateway local command which again is using Sam loco under the covers or I could run",
    "start": "1959160",
    "end": "1966570"
  },
  {
    "text": "these two options remotely so I could actually run my function in the actual and the environment from within cloud 9",
    "start": "1966570",
    "end": "1973880"
  },
  {
    "text": "let's stick to lambda local for now and run this function ok so I have an error",
    "start": "1973880",
    "end": "1986400"
  },
  {
    "text": "here cannot read project property map and the problem is at line 14 ok so",
    "start": "1986400",
    "end": "1995220"
  },
  {
    "text": "again as I mentioned Sam local allows you exposes the debugger port allows you to debug using any idea you'd like but",
    "start": "1995220",
    "end": "2001430"
  },
  {
    "text": "in this case again everything is abstracted away from you and provided in the UI so I can just set a breakpoint at",
    "start": "2001430",
    "end": "2008000"
  },
  {
    "text": "line 14 I need to click this cute little debug mode button and once they do and I",
    "start": "2008000",
    "end": "2017150"
  },
  {
    "text": "click on run my function runs and it stops at the breakpoint that I set and",
    "start": "2017150",
    "end": "2024380"
  },
  {
    "text": "at that point I get a debugger which has everything you would expect from a debugger so I have watch expressions I",
    "start": "2024380",
    "end": "2029930"
  },
  {
    "text": "have my cough stack and I also have local variables shown to me here",
    "start": "2029930",
    "end": "2036200"
  },
  {
    "text": "so let's take a look at the rest variable because that seems to be where the problem lies",
    "start": "2036200",
    "end": "2042309"
  },
  {
    "text": "so within the rest variable after you have a data object and that data object",
    "start": "2043540",
    "end": "2049010"
  },
  {
    "text": "is the one that has the items array so I'm missing the data object here ok",
    "start": "2049010",
    "end": "2054980"
  },
  {
    "text": "let's just continue this invocation I can add address the data items here that",
    "start": "2054980",
    "end": "2063350"
  },
  {
    "text": "should solve the problem I need to save my file okay so I get I",
    "start": "2063350",
    "end": "2076108"
  },
  {
    "text": "get a response back I can see the the same repo here fifteen hundred stars I",
    "start": "2076109",
    "end": "2081148"
  },
  {
    "text": "can see the same local repo thirteen hundred stars okay so this is running",
    "start": "2081149",
    "end": "2086760"
  },
  {
    "text": "that's cool and now I've tested this locally I can",
    "start": "2086760",
    "end": "2092069"
  },
  {
    "text": "actually super easily also deploy this back to lambda so just right-click on the function",
    "start": "2092069",
    "end": "2097470"
  },
  {
    "text": "click on deploy and this function is now deployed back to lambda now as I",
    "start": "2097470",
    "end": "2103440"
  },
  {
    "text": "mentioned before this is a fully customizable IDE so I could set I could set themes I could say it changed",
    "start": "2103440",
    "end": "2109500"
  },
  {
    "text": "keyboard shortcuts I could do anything you'd expect to be able to do in your local dev environment and my function",
    "start": "2109500",
    "end": "2119609"
  },
  {
    "text": "has now been deployed and now I can actually get back to my run window",
    "start": "2119609",
    "end": "2125390"
  },
  {
    "text": "change this tool and the remote and invoke my function again and this time",
    "start": "2125390",
    "end": "2132269"
  },
  {
    "text": "this function this response is actually being received from the actual lambda environment I'm not running this locally",
    "start": "2132269",
    "end": "2138690"
  },
  {
    "text": "I actually ran this in lambda remotely",
    "start": "2138690",
    "end": "2145410"
  },
  {
    "text": "not yet okay so",
    "start": "2145410",
    "end": "2152268"
  },
  {
    "text": "that was the cloud9 experience and so",
    "start": "2159460",
    "end": "2165579"
  },
  {
    "text": "quick quick recap Sam for building",
    "start": "2165579",
    "end": "2170630"
  },
  {
    "text": "applications any idea to use your code testing and debugging presents multiple",
    "start": "2170630",
    "end": "2177079"
  },
  {
    "text": "challenges that probably don't exist or exist in different forms and and other types of applications but luckily we",
    "start": "2177079",
    "end": "2184760"
  },
  {
    "text": "have we now have Sam local which helps you bridge those challenges or overcome those challenges and makes it helps you",
    "start": "2184760",
    "end": "2192020"
  },
  {
    "text": "make sure that you can produce high fidelity deployment packages and you can",
    "start": "2192020",
    "end": "2197660"
  },
  {
    "text": "bring all this together in cloud 9 that is optimized for service development and provides you with that easy experience",
    "start": "2197660",
    "end": "2205180"
  },
  {
    "text": "with Sam local and Sam Burton but the the title of this session is authoring",
    "start": "2205180",
    "end": "2212240"
  },
  {
    "text": "and deploying service applications so let's touch on the deploying part a bit this is the same diagram I showed",
    "start": "2212240",
    "end": "2220549"
  },
  {
    "start": "2219000",
    "end": "2219000"
  },
  {
    "text": "you before the CI CD diagram just kind of nicely visualized if my application",
    "start": "2220549",
    "end": "2227210"
  },
  {
    "text": "is built on top of Sam then I actually have and I've had I've have had for a",
    "start": "2227210",
    "end": "2233569"
  },
  {
    "text": "while all the tooling necessary to automate my deployment process so I can",
    "start": "2233569",
    "end": "2239240"
  },
  {
    "text": "orchestrate all of this with code pipeline which can essentially pull my code from my code repo once that it does",
    "start": "2239240",
    "end": "2247940"
  },
  {
    "text": "that it can essentially move my code on to the next stage which is code build",
    "start": "2247940",
    "end": "2253609"
  },
  {
    "text": "and code boot can pull down any packages package up my deployment package and build my application once that happens",
    "start": "2253609",
    "end": "2262039"
  },
  {
    "text": "then I can actually run tests either within code build or by using any of code pipelines third-party tools which",
    "start": "2262039",
    "end": "2271160"
  },
  {
    "text": "are natively supported I could do things like use ghost inspector for UI testing or use a pika for load testing and once",
    "start": "2271160",
    "end": "2281359"
  },
  {
    "text": "that happens I can use the confirmation combined with the power of Sam to actually deploy my application to",
    "start": "2281359",
    "end": "2287630"
  },
  {
    "text": "multiple environments but the",
    "start": "2287630",
    "end": "2292690"
  },
  {
    "text": "issue here or we have heard from a lot of customers is that there's something missing in this chain and the thing",
    "start": "2292690",
    "end": "2299950"
  },
  {
    "text": "that's missing is that at the end here we essentially have a binary switch we",
    "start": "2299950",
    "end": "2306220"
  },
  {
    "text": "have an instantaneous shift of traffic from the old version of code to the new",
    "start": "2306220",
    "end": "2311740"
  },
  {
    "text": "version and that's not usually how we deployed things usually we incrementally",
    "start": "2311740",
    "end": "2317680"
  },
  {
    "text": "roll out new versions to help reduce deployment risk and minimize blast radius and so all of you asked us and we",
    "start": "2317680",
    "end": "2328329"
  },
  {
    "text": "listened and so today or this week we actually introduced safe deployments in",
    "start": "2328329",
    "end": "2333940"
  },
  {
    "start": "2330000",
    "end": "2330000"
  },
  {
    "text": "lamda and there are three pieces to the puzzle here the first piece is that the",
    "start": "2333940",
    "end": "2341980"
  },
  {
    "text": "lambda L lambda aliases have been enhanced to enable traffic shifting and that essentially",
    "start": "2341980",
    "end": "2349030"
  },
  {
    "text": "means that they can now point to two different versions and shift traffic between them based on free assign",
    "start": "2349030",
    "end": "2355030"
  },
  {
    "text": "weights now on top of these lambda primitives we now have code deploy",
    "start": "2355030",
    "end": "2361060"
  },
  {
    "text": "integration and with code deploy you essentially have an automated deployment engine on top of the lambda primitives",
    "start": "2361060",
    "end": "2368470"
  },
  {
    "text": "to help you automate this whole deployment process and the third piece",
    "start": "2368470",
    "end": "2374410"
  },
  {
    "text": "of the puzzle here is Sam and with them Sam this is all natively supported and takes a few lines of code to define and",
    "start": "2374410",
    "end": "2383650"
  },
  {
    "text": "let's let's dive deeper a bit into each of these pieces so first lambda versions and aliases so",
    "start": "2383650",
    "end": "2392349"
  },
  {
    "text": "version is an immutable deployment unit it's essentially a snapshot of your code and configuration it's numbered and",
    "start": "2392349",
    "end": "2399310"
  },
  {
    "text": "sequenced and so version 5 is always little bit newer than version 4 and version 4 is gonna be newer than version",
    "start": "2399310",
    "end": "2405849"
  },
  {
    "text": "3 and you get the point and then alias is simply a pointer to a version I think that's best illustrated",
    "start": "2405849",
    "end": "2412630"
  },
  {
    "text": "with an example so let's say I have lambda function foo and that function",
    "start": "2412630",
    "end": "2418210"
  },
  {
    "text": "has an alias called live and that alias is serving production traffic it's",
    "start": "2418210",
    "end": "2424150"
  },
  {
    "text": "currently pointing to version number 5 for me to be able to deploy a new version of my code what I'd have to do",
    "start": "2424150",
    "end": "2430970"
  },
  {
    "text": "in this scenario is publish version number six and once version number six is published",
    "start": "2430970",
    "end": "2437150"
  },
  {
    "text": "I'd have to point the alias to the new version but again the issue here is that",
    "start": "2437150",
    "end": "2442490"
  },
  {
    "text": "all traffic is going to be shifted to the new version all at once so now with",
    "start": "2442490",
    "end": "2449060"
  },
  {
    "text": "weighted aliases what you could do is you could actually publish version 7",
    "start": "2449060",
    "end": "2454240"
  },
  {
    "text": "you could add version 7 to the alias and just define percentages on each version",
    "start": "2454240",
    "end": "2462020"
  },
  {
    "text": "and so I could share 5% of traffic to the new version and keep 95% of traffic",
    "start": "2462020",
    "end": "2468830"
  },
  {
    "text": "pointing to the old version and so obviously you have the primitives built",
    "start": "2468830",
    "end": "2474560"
  },
  {
    "text": "into lambda now you could either build your own automation system or integrate this into your existing automation",
    "start": "2474560",
    "end": "2480980"
  },
  {
    "text": "system or you could simply use code deploy and code deploy is built on top",
    "start": "2480980",
    "end": "2487520"
  },
  {
    "text": "of these primitives and helps you super easily and completely automatically shift traffic incremental e to new",
    "start": "2487520",
    "end": "2494750"
  },
  {
    "text": "versions and so you can do things it comes with pre-configured settings so",
    "start": "2494750",
    "end": "2499790"
  },
  {
    "text": "you could do things like do canary or linear deployments so for example I can",
    "start": "2499790",
    "end": "2505880"
  },
  {
    "text": "shift 10% of traffic to my new version and linearly increase traffic to that",
    "start": "2505880",
    "end": "2510950"
  },
  {
    "text": "you version as as time progresses code deploy also provides you with the",
    "start": "2510950",
    "end": "2517100"
  },
  {
    "text": "guardrails and validations needed for safe deployment so for example you could",
    "start": "2517100",
    "end": "2523100"
  },
  {
    "text": "do things like define alarms within your stamp template and for each of those",
    "start": "2523100",
    "end": "2529310"
  },
  {
    "text": "alarms if triggered they're going to prompt a rollback to the old version also you could define things like pre",
    "start": "2529310",
    "end": "2535340"
  },
  {
    "text": "and post traffic test hooks and those are essentially lambda functions that",
    "start": "2535340",
    "end": "2540500"
  },
  {
    "text": "run and tell as tests and can be run either before or after traffic has shifted to your new version and most",
    "start": "2540500",
    "end": "2549350"
  },
  {
    "text": "importantly all of this is supported and Sam and just to show you to show you how",
    "start": "2549350",
    "end": "2555260"
  },
  {
    "text": "easy it is to use and do within Sam I have this this simple simple Sam",
    "start": "2555260",
    "end": "2562280"
  },
  {
    "text": "template here which essentially just defines a lambda function and what I'd have to add here for safe deployments",
    "start": "2562280",
    "end": "2570620"
  },
  {
    "text": "are just these five lines of code this",
    "start": "2570620",
    "end": "2575690"
  },
  {
    "text": "first line is actually a new feature we introduced this week and what Global's",
    "start": "2575690",
    "end": "2582110"
  },
  {
    "text": "allows you to do is to essentially define function configurations for all",
    "start": "2582110",
    "end": "2587330"
  },
  {
    "text": "the functions in your Sam template so things like n bars tags runtime things",
    "start": "2587330",
    "end": "2594500"
  },
  {
    "text": "that you might have in common for all your functions you could now define within Global's and for each specific",
    "start": "2594500",
    "end": "2601400"
  },
  {
    "text": "function if needed you could also override these Global's so for example I could define the",
    "start": "2601400",
    "end": "2606890"
  },
  {
    "text": "runtime as nodejs for all the functions but one function there is Python so I can just override that within that",
    "start": "2606890",
    "end": "2611990"
  },
  {
    "text": "specific function and the reason this is powerful for safe deployments is because",
    "start": "2611990",
    "end": "2617780"
  },
  {
    "text": "most often they're not I probably want to define a deployment strategy for all the functions within my application as",
    "start": "2617780",
    "end": "2624680"
  },
  {
    "text": "opposed to having to define those for each function separately next I have the",
    "start": "2624680",
    "end": "2632210"
  },
  {
    "text": "auto publish alias line and what what that does is it essentially creates an alias named live and it auto publishes a",
    "start": "2632210",
    "end": "2640340"
  },
  {
    "text": "version with each deployment and those are the kind of underlying constructs",
    "start": "2640340",
    "end": "2645740"
  },
  {
    "text": "that allow code deploy to act and lastly I'm defining my deployment preference",
    "start": "2645740",
    "end": "2652790"
  },
  {
    "text": "and here I'm essentially selecting what type of deployment I'd like to happen for my functions here",
    "start": "2652790",
    "end": "2659210"
  },
  {
    "text": "and so in this specific case I'm defining Canary 10% 10 minutes which",
    "start": "2659210",
    "end": "2664340"
  },
  {
    "text": "means shift 10% of traffic to the new version and if everything goes well",
    "start": "2664340",
    "end": "2669460"
  },
  {
    "text": "after 10 minutes shift all traffic to this new version I also mentioned test",
    "start": "2669460",
    "end": "2676040"
  },
  {
    "text": "hooks and alarms so this is how those would be defined and Sam you can define",
    "start": "2676040",
    "end": "2684020"
  },
  {
    "text": "pre and post traffic hooks again these are just landed functions that run as tests once they succeed or fail they",
    "start": "2684020",
    "end": "2690770"
  },
  {
    "text": "need to talk back to code deploy and let Oh deeply no hey this tests failed or succeeded and so-called aplomb knows how",
    "start": "2690770",
    "end": "2697400"
  },
  {
    "text": "to act and alarms again could be super",
    "start": "2697400",
    "end": "2702800"
  },
  {
    "text": "easily defined using this alarms construct within Sam and for each of",
    "start": "2702800",
    "end": "2707839"
  },
  {
    "text": "these and arms if they're triggered during deployment then that's gonna prompt to roll back to my old version",
    "start": "2707839",
    "end": "2716710"
  },
  {
    "start": "2718000",
    "end": "2718000"
  },
  {
    "text": "all of this is super easy to monitor through the code deployed console so",
    "start": "2719500",
    "end": "2725240"
  },
  {
    "text": "questions such as how much traffic is currently shifted to my new version have",
    "start": "2725240",
    "end": "2732530"
  },
  {
    "text": "my test dip my tests run already and what was the result I can actually have it you actually have",
    "start": "2732530",
    "end": "2737630"
  },
  {
    "text": "a log of events and all the events that happened within your deployment so any question you have about your deployment",
    "start": "2737630",
    "end": "2744079"
  },
  {
    "text": "could be easily answered looking at the code deployed console so what what did",
    "start": "2744079",
    "end": "2759680"
  },
  {
    "start": "2752000",
    "end": "2752000"
  },
  {
    "text": "we do here today but what would I like you to take out of this first of all the",
    "start": "2759680",
    "end": "2765410"
  },
  {
    "text": "lambda console well first of all different tools fit different use cases the lambda console has been overhauled",
    "start": "2765410",
    "end": "2771520"
  },
  {
    "text": "it's now super easy to use has an immersive dev environment within it and",
    "start": "2771520",
    "end": "2777700"
  },
  {
    "text": "should be used for simple applications if you have a more complex application",
    "start": "2777700",
    "end": "2784000"
  },
  {
    "text": "define those will Sam once you define those with Sam you can take advantage of",
    "start": "2784000",
    "end": "2790220"
  },
  {
    "text": "tools that are built on top of Sam such as Sam local for local testing and",
    "start": "2790220",
    "end": "2795349"
  },
  {
    "text": "debugging you could use some local with any ID you'd like but as of yesterday we",
    "start": "2795349",
    "end": "2802910"
  },
  {
    "text": "now have one ID that's optimized for service development as Sam Sam local",
    "start": "2802910",
    "end": "2807980"
  },
  {
    "text": "bill 10 with UI on top of that so I highly encourage you to check it out for service development and we then touched",
    "start": "2807980",
    "end": "2817760"
  },
  {
    "text": "on deployment we we've had these deployment constructs for a while but there was one piece missing one",
    "start": "2817760",
    "end": "2823670"
  },
  {
    "text": "important piece for mission-critical applications which how do I incrementally roll out traffic to new versions that has again something",
    "start": "2823670",
    "end": "2832160"
  },
  {
    "text": "that's been released this week and with Co deeper integration built into Sam it's super easy to now incrementally",
    "start": "2832160",
    "end": "2839480"
  },
  {
    "text": "roll out new versions into production lastly I encourage you to take a look at",
    "start": "2839480",
    "end": "2846020"
  },
  {
    "text": "this page the surveillance developer developer tools page it has more information on Sam Sam local and also",
    "start": "2846020",
    "end": "2853400"
  },
  {
    "text": "other frameworks and tools that you could use for service development so",
    "start": "2853400",
    "end": "2861490"
  },
  {
    "text": "thank you very much for your time and don't forget to review this session thank you",
    "start": "2861490",
    "end": "2868090"
  }
]