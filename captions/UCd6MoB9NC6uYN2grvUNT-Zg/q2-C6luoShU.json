[
  {
    "text": "[Music]",
    "start": "0",
    "end": "3199"
  },
  {
    "text": "hello",
    "start": "3199",
    "end": "4319"
  },
  {
    "text": "this is ranit vishesh with amazon web",
    "start": "4319",
    "end": "6640"
  },
  {
    "text": "services",
    "start": "6640",
    "end": "7680"
  },
  {
    "text": "and in this session i'm going to talk",
    "start": "7680",
    "end": "10160"
  },
  {
    "text": "about",
    "start": "10160",
    "end": "11040"
  },
  {
    "text": "deploying containerized asp.net core web",
    "start": "11040",
    "end": "14320"
  },
  {
    "text": "applications",
    "start": "14320",
    "end": "15519"
  },
  {
    "text": "to amazon ecs using aws",
    "start": "15519",
    "end": "18560"
  },
  {
    "text": "developer tools in this session",
    "start": "18560",
    "end": "22160"
  },
  {
    "text": "i'm going to demonstrate setting up",
    "start": "22160",
    "end": "24000"
  },
  {
    "text": "continuous deployment pipeline",
    "start": "24000",
    "end": "26400"
  },
  {
    "text": "for a containerized asp.net core web",
    "start": "26400",
    "end": "29199"
  },
  {
    "text": "application",
    "start": "29199",
    "end": "30640"
  },
  {
    "text": "using aws developer tools such as code",
    "start": "30640",
    "end": "33600"
  },
  {
    "text": "commit",
    "start": "33600",
    "end": "34559"
  },
  {
    "text": "code build and code pipeline the",
    "start": "34559",
    "end": "37360"
  },
  {
    "text": "deployment environment for my",
    "start": "37360",
    "end": "38879"
  },
  {
    "text": "containerized application is amazon",
    "start": "38879",
    "end": "40960"
  },
  {
    "text": "elastic container service",
    "start": "40960",
    "end": "42800"
  },
  {
    "text": "or ecs amazon ecs",
    "start": "42800",
    "end": "46879"
  },
  {
    "text": "is a scalable container management",
    "start": "46879",
    "end": "48800"
  },
  {
    "text": "service",
    "start": "48800",
    "end": "49920"
  },
  {
    "text": "that supports docker containers and",
    "start": "49920",
    "end": "52960"
  },
  {
    "text": "allows you to easily run applications on",
    "start": "52960",
    "end": "55360"
  },
  {
    "text": "a managed cluster",
    "start": "55360",
    "end": "57760"
  },
  {
    "text": "amazon ecs eliminates the need for you",
    "start": "57760",
    "end": "60399"
  },
  {
    "text": "to install and operate your own cluster",
    "start": "60399",
    "end": "62719"
  },
  {
    "text": "management infrastructure",
    "start": "62719",
    "end": "65040"
  },
  {
    "text": "amazon ecs is integrated with",
    "start": "65040",
    "end": "68320"
  },
  {
    "text": "familiar features such as elastic load",
    "start": "68320",
    "end": "71760"
  },
  {
    "text": "balancing",
    "start": "71760",
    "end": "73280"
  },
  {
    "text": "ebs vpc and iam",
    "start": "73280",
    "end": "77680"
  },
  {
    "text": "amazon ecs integrates seamlessly with",
    "start": "77680",
    "end": "80560"
  },
  {
    "text": "amazon elastic container",
    "start": "80560",
    "end": "82159"
  },
  {
    "text": "registry or ecr amazon ecr",
    "start": "82159",
    "end": "86080"
  },
  {
    "text": "allows you to easily store run and",
    "start": "86080",
    "end": "88799"
  },
  {
    "text": "manage",
    "start": "88799",
    "end": "89759"
  },
  {
    "text": "container images for applications",
    "start": "89759",
    "end": "92000"
  },
  {
    "text": "running on",
    "start": "92000",
    "end": "92799"
  },
  {
    "text": "amazon ecs",
    "start": "92799",
    "end": "95840"
  },
  {
    "text": "amazon ecs supports aws for gate",
    "start": "95840",
    "end": "99360"
  },
  {
    "text": "which removes the requirement to",
    "start": "99360",
    "end": "101680"
  },
  {
    "text": "provision or manage ec2 instances",
    "start": "101680",
    "end": "104960"
  },
  {
    "text": "aws fargate is probably the easiest way",
    "start": "104960",
    "end": "107920"
  },
  {
    "text": "to launch",
    "start": "107920",
    "end": "108560"
  },
  {
    "text": "and run containers on aws customers who",
    "start": "108560",
    "end": "111840"
  },
  {
    "text": "require",
    "start": "111840",
    "end": "112320"
  },
  {
    "text": "greater control of the ec2 instances",
    "start": "112320",
    "end": "115920"
  },
  {
    "text": "to support compliance and governance",
    "start": "115920",
    "end": "117920"
  },
  {
    "text": "requirements",
    "start": "117920",
    "end": "119119"
  },
  {
    "text": "or for broader customization options can",
    "start": "119119",
    "end": "122159"
  },
  {
    "text": "choose to use",
    "start": "122159",
    "end": "123119"
  },
  {
    "text": "ecs with ec2 launch type",
    "start": "123119",
    "end": "126240"
  },
  {
    "text": "instead of aws forget launch type",
    "start": "126240",
    "end": "130720"
  },
  {
    "text": "aws developer tools and services",
    "start": "130720",
    "end": "133440"
  },
  {
    "text": "provides multiple options",
    "start": "133440",
    "end": "135280"
  },
  {
    "text": "to host code build test",
    "start": "135280",
    "end": "138640"
  },
  {
    "text": "and deploy your applications to aws",
    "start": "138640",
    "end": "142000"
  },
  {
    "text": "few of these tools and services that we",
    "start": "142000",
    "end": "143920"
  },
  {
    "text": "will use in this session are",
    "start": "143920",
    "end": "146160"
  },
  {
    "text": "aws code commit code build and code",
    "start": "146160",
    "end": "149120"
  },
  {
    "text": "pipeline",
    "start": "149120",
    "end": "150640"
  },
  {
    "text": "aws code commit is a fully managed",
    "start": "150640",
    "end": "153200"
  },
  {
    "text": "source control service",
    "start": "153200",
    "end": "154800"
  },
  {
    "text": "that hosts secure git based repositories",
    "start": "154800",
    "end": "158160"
  },
  {
    "text": "it makes it easy for teams to",
    "start": "158160",
    "end": "159760"
  },
  {
    "text": "collaborate on code",
    "start": "159760",
    "end": "161360"
  },
  {
    "text": "in a secure and highly scalable",
    "start": "161360",
    "end": "163280"
  },
  {
    "text": "ecosystem",
    "start": "163280",
    "end": "164959"
  },
  {
    "text": "aws code build is a fully managed",
    "start": "164959",
    "end": "167200"
  },
  {
    "text": "continuous integration service",
    "start": "167200",
    "end": "169200"
  },
  {
    "text": "that compiles source code runs tests and",
    "start": "169200",
    "end": "172239"
  },
  {
    "text": "produces software packages",
    "start": "172239",
    "end": "174239"
  },
  {
    "text": "that are ready to deploy with codeword",
    "start": "174239",
    "end": "177440"
  },
  {
    "text": "you don't need to provision",
    "start": "177440",
    "end": "179040"
  },
  {
    "text": "manage and scale your own build servers",
    "start": "179040",
    "end": "182640"
  },
  {
    "text": "aws code pipeline is a fully managed",
    "start": "182640",
    "end": "185040"
  },
  {
    "text": "continuous delivery service",
    "start": "185040",
    "end": "186879"
  },
  {
    "text": "that helps you automate your release",
    "start": "186879",
    "end": "188480"
  },
  {
    "text": "pipeline for fast",
    "start": "188480",
    "end": "190159"
  },
  {
    "text": "and reliable application and",
    "start": "190159",
    "end": "191760"
  },
  {
    "text": "infrastructure updates",
    "start": "191760",
    "end": "193840"
  },
  {
    "text": "based on the release model you choose",
    "start": "193840",
    "end": "196400"
  },
  {
    "text": "code pipeline",
    "start": "196400",
    "end": "197519"
  },
  {
    "text": "automates the release process every time",
    "start": "197519",
    "end": "199680"
  },
  {
    "text": "there is a code change",
    "start": "199680",
    "end": "202400"
  },
  {
    "text": "the very first thing that we're going to",
    "start": "202400",
    "end": "203920"
  },
  {
    "text": "need to work with amazon ecs",
    "start": "203920",
    "end": "206480"
  },
  {
    "text": "is an ecs cluster i have followed",
    "start": "206480",
    "end": "209599"
  },
  {
    "text": "this developer guide to create an ecs",
    "start": "209599",
    "end": "212400"
  },
  {
    "text": "cluster",
    "start": "212400",
    "end": "213360"
  },
  {
    "text": "of type ec2 linux and networking",
    "start": "213360",
    "end": "216640"
  },
  {
    "text": "this will give me a cluster with ec2",
    "start": "216640",
    "end": "220080"
  },
  {
    "text": "linux instances",
    "start": "220080",
    "end": "221519"
  },
  {
    "text": "and i can use this cluster to host both",
    "start": "221519",
    "end": "223920"
  },
  {
    "text": "forget",
    "start": "223920",
    "end": "224799"
  },
  {
    "text": "as well as easy to launch type i'm going",
    "start": "224799",
    "end": "228000"
  },
  {
    "text": "to share",
    "start": "228000",
    "end": "228879"
  },
  {
    "text": "the link to this developer guide towards",
    "start": "228879",
    "end": "231280"
  },
  {
    "text": "the end of this video",
    "start": "231280",
    "end": "234319"
  },
  {
    "text": "let us take a look at my ecs cluster",
    "start": "234720",
    "end": "238080"
  },
  {
    "text": "you can see i have a cluster here in aws",
    "start": "238080",
    "end": "240879"
  },
  {
    "text": "management console",
    "start": "240879",
    "end": "242400"
  },
  {
    "text": "this cluster is called demo cluster and",
    "start": "242400",
    "end": "245439"
  },
  {
    "text": "this one doesn't have any forget",
    "start": "245439",
    "end": "247360"
  },
  {
    "text": "services or tasks running",
    "start": "247360",
    "end": "249439"
  },
  {
    "text": "and it has one ec2 service with couple",
    "start": "249439",
    "end": "252239"
  },
  {
    "text": "of tasks",
    "start": "252239",
    "end": "253599"
  },
  {
    "text": "and has a couple of container instances",
    "start": "253599",
    "end": "258079"
  },
  {
    "text": "to prepare your application to run on",
    "start": "258079",
    "end": "260000"
  },
  {
    "text": "amazon ecs",
    "start": "260000",
    "end": "261359"
  },
  {
    "text": "you create a task definition the task",
    "start": "261359",
    "end": "263759"
  },
  {
    "text": "definition is a text file in json format",
    "start": "263759",
    "end": "267040"
  },
  {
    "text": "that describes one or more containers up",
    "start": "267040",
    "end": "269759"
  },
  {
    "text": "to a maximum of 10",
    "start": "269759",
    "end": "271280"
  },
  {
    "text": "that forms your application it can be",
    "start": "271280",
    "end": "273840"
  },
  {
    "text": "thought of as a blueprint",
    "start": "273840",
    "end": "275520"
  },
  {
    "text": "for your applications you can also",
    "start": "275520",
    "end": "278000"
  },
  {
    "text": "create task definition from aws console",
    "start": "278000",
    "end": "281040"
  },
  {
    "text": "by clicking on task definitions and",
    "start": "281040",
    "end": "283120"
  },
  {
    "text": "clicking on create new task definition",
    "start": "283120",
    "end": "285600"
  },
  {
    "text": "in my case i already have one task",
    "start": "285600",
    "end": "287680"
  },
  {
    "text": "definition here",
    "start": "287680",
    "end": "290320"
  },
  {
    "text": "i can click on this and i can look at",
    "start": "290320",
    "end": "292080"
  },
  {
    "text": "the details",
    "start": "292080",
    "end": "293360"
  },
  {
    "text": "or i can also go to the json tab and i",
    "start": "293360",
    "end": "296080"
  },
  {
    "text": "can see all the details of my task",
    "start": "296080",
    "end": "298000"
  },
  {
    "text": "definition",
    "start": "298000",
    "end": "299600"
  },
  {
    "text": "a task is the instantiation of",
    "start": "299600",
    "end": "302639"
  },
  {
    "text": "a task definition within a cluster after",
    "start": "302639",
    "end": "305759"
  },
  {
    "text": "you have created a task definition for",
    "start": "305759",
    "end": "307440"
  },
  {
    "text": "your application",
    "start": "307440",
    "end": "308720"
  },
  {
    "text": "you can specify the number of tasks",
    "start": "308720",
    "end": "311759"
  },
  {
    "text": "that will run on your cluster",
    "start": "311759",
    "end": "315360"
  },
  {
    "text": "you can see i have a service named",
    "start": "315360",
    "end": "319280"
  },
  {
    "text": "web app service in the active status",
    "start": "319280",
    "end": "322800"
  },
  {
    "text": "right now",
    "start": "322800",
    "end": "324240"
  },
  {
    "text": "ecs service enables you to run and",
    "start": "324240",
    "end": "326960"
  },
  {
    "text": "maintain",
    "start": "326960",
    "end": "328000"
  },
  {
    "text": "specific number of instances of a task",
    "start": "328000",
    "end": "330320"
  },
  {
    "text": "definition",
    "start": "330320",
    "end": "331560"
  },
  {
    "text": "simultaneously in an ecs cluster",
    "start": "331560",
    "end": "334720"
  },
  {
    "text": "if any of the tasks should fail or stop",
    "start": "334720",
    "end": "337039"
  },
  {
    "text": "for any reasons",
    "start": "337039",
    "end": "338479"
  },
  {
    "text": "the amazon ecs service scheduler",
    "start": "338479",
    "end": "341520"
  },
  {
    "text": "launches another instance of your task",
    "start": "341520",
    "end": "343280"
  },
  {
    "text": "definition",
    "start": "343280",
    "end": "344720"
  },
  {
    "text": "to replace it in order to maintain the",
    "start": "344720",
    "end": "347120"
  },
  {
    "text": "design number of tasks",
    "start": "347120",
    "end": "348800"
  },
  {
    "text": "in the service let's take a look at",
    "start": "348800",
    "end": "352560"
  },
  {
    "text": "my service named web app service i have",
    "start": "352560",
    "end": "355840"
  },
  {
    "text": "created this service using developer",
    "start": "355840",
    "end": "357759"
  },
  {
    "text": "guide",
    "start": "357759",
    "end": "358160"
  },
  {
    "text": "available online i will include a link",
    "start": "358160",
    "end": "361120"
  },
  {
    "text": "to this developer guide towards the end",
    "start": "361120",
    "end": "363039"
  },
  {
    "text": "of this video",
    "start": "363039",
    "end": "365759"
  },
  {
    "text": "back in aws console i have two desired",
    "start": "365840",
    "end": "369840"
  },
  {
    "text": "and two running tasks for my ecs service",
    "start": "369840",
    "end": "374000"
  },
  {
    "text": "let's take a look at this service",
    "start": "374000",
    "end": "380160"
  },
  {
    "text": "under the tasks tab you can see both the",
    "start": "380160",
    "end": "383199"
  },
  {
    "text": "tasks have",
    "start": "383199",
    "end": "384000"
  },
  {
    "text": "same task definition called web app task",
    "start": "384000",
    "end": "387120"
  },
  {
    "text": "definition",
    "start": "387120",
    "end": "389680"
  },
  {
    "text": "let me click on the task definition",
    "start": "389680",
    "end": "393280"
  },
  {
    "text": "task definition is required to run",
    "start": "393280",
    "end": "395039"
  },
  {
    "text": "docker containers in amazon ecs",
    "start": "395039",
    "end": "397440"
  },
  {
    "text": "task definition includes parameters like",
    "start": "397440",
    "end": "400400"
  },
  {
    "text": "docker image",
    "start": "400400",
    "end": "401520"
  },
  {
    "text": "cpu and memory allocation for each task",
    "start": "401520",
    "end": "406240"
  },
  {
    "text": "it also includes stars launch type",
    "start": "406560",
    "end": "409520"
  },
  {
    "text": "docker networking mode",
    "start": "409520",
    "end": "411280"
  },
  {
    "text": "and much more in the container",
    "start": "411280",
    "end": "414560"
  },
  {
    "text": "definition section",
    "start": "414560",
    "end": "416000"
  },
  {
    "text": "of my task definition you can see",
    "start": "416000",
    "end": "419440"
  },
  {
    "text": "that i am currently pointing to a docker",
    "start": "419440",
    "end": "422000"
  },
  {
    "text": "image hosted on ecr",
    "start": "422000",
    "end": "425199"
  },
  {
    "text": "amazon ecs has inbuilt integration with",
    "start": "425199",
    "end": "429199"
  },
  {
    "text": "amazon ecr but",
    "start": "429199",
    "end": "432240"
  },
  {
    "text": "ecs also supports other docker",
    "start": "432240",
    "end": "434639"
  },
  {
    "text": "repositories like docker hub",
    "start": "434639",
    "end": "438479"
  },
  {
    "text": "going back to my acs cluster",
    "start": "439440",
    "end": "443280"
  },
  {
    "text": "and looking at my ecs service properties",
    "start": "444000",
    "end": "449039"
  },
  {
    "text": "i can see that the two tasks that this",
    "start": "449120",
    "end": "452000"
  },
  {
    "text": "service is maintaining",
    "start": "452000",
    "end": "453599"
  },
  {
    "text": "are running behind an application load",
    "start": "453599",
    "end": "456319"
  },
  {
    "text": "balancer",
    "start": "456319",
    "end": "458479"
  },
  {
    "text": "accessible through target group name web",
    "start": "458479",
    "end": "460960"
  },
  {
    "text": "app tg",
    "start": "460960",
    "end": "462960"
  },
  {
    "text": "looking at the properties of the",
    "start": "462960",
    "end": "464319"
  },
  {
    "text": "application road balancer",
    "start": "464319",
    "end": "466639"
  },
  {
    "text": "i can see that this application load",
    "start": "466639",
    "end": "468800"
  },
  {
    "text": "balancer is",
    "start": "468800",
    "end": "469759"
  },
  {
    "text": "forwarding the request to my target",
    "start": "469759",
    "end": "471919"
  },
  {
    "text": "group called web app tg",
    "start": "471919",
    "end": "475199"
  },
  {
    "text": "i'm going to copy the dns name and open",
    "start": "475199",
    "end": "478000"
  },
  {
    "text": "it in the browser here",
    "start": "478000",
    "end": "480400"
  },
  {
    "text": "you can see that currently my",
    "start": "480400",
    "end": "482479"
  },
  {
    "text": "application is showing",
    "start": "482479",
    "end": "484000"
  },
  {
    "text": "coming soon page",
    "start": "484000",
    "end": "487039"
  },
  {
    "text": "my goal in next section is to set up a",
    "start": "487759",
    "end": "490639"
  },
  {
    "text": "deployment pipeline",
    "start": "490639",
    "end": "492479"
  },
  {
    "text": "using aws services",
    "start": "492479",
    "end": "495520"
  },
  {
    "text": "that are aws code commit for my",
    "start": "495520",
    "end": "498639"
  },
  {
    "text": "application code repo",
    "start": "498639",
    "end": "500879"
  },
  {
    "text": "and as soon as application code is",
    "start": "500879",
    "end": "502560"
  },
  {
    "text": "committed i want",
    "start": "502560",
    "end": "504479"
  },
  {
    "text": "aws code build to build the docker image",
    "start": "504479",
    "end": "508400"
  },
  {
    "text": "and push it to ecr wrapper",
    "start": "508400",
    "end": "511520"
  },
  {
    "text": "in the deploy stage i want the code",
    "start": "511520",
    "end": "514080"
  },
  {
    "text": "pipeline's",
    "start": "514080",
    "end": "515039"
  },
  {
    "text": "ecs provider to update the cs task",
    "start": "515039",
    "end": "518839"
  },
  {
    "text": "definition",
    "start": "518839",
    "end": "520000"
  },
  {
    "text": "an ecs service so that end users can",
    "start": "520000",
    "end": "522800"
  },
  {
    "text": "access the updated version of the",
    "start": "522800",
    "end": "524640"
  },
  {
    "text": "application",
    "start": "524640",
    "end": "525760"
  },
  {
    "text": "in place of existing coming soon page",
    "start": "525760",
    "end": "530480"
  },
  {
    "text": "i am back in aws console and to get",
    "start": "530880",
    "end": "533920"
  },
  {
    "text": "started with",
    "start": "533920",
    "end": "534880"
  },
  {
    "text": "aws code commit i'll scroll down",
    "start": "534880",
    "end": "538320"
  },
  {
    "text": "and go to developer tools and click on",
    "start": "538320",
    "end": "541360"
  },
  {
    "text": "code comment",
    "start": "541360",
    "end": "544000"
  },
  {
    "text": "the very first thing we have to do is to",
    "start": "544399",
    "end": "546240"
  },
  {
    "text": "create a code repository",
    "start": "546240",
    "end": "548560"
  },
  {
    "text": "for that click on create repository",
    "start": "548560",
    "end": "552480"
  },
  {
    "text": "give a repository a name",
    "start": "552480",
    "end": "555760"
  },
  {
    "text": "and click create",
    "start": "560320",
    "end": "564320"
  },
  {
    "text": "your repository is created and ready to",
    "start": "566160",
    "end": "568240"
  },
  {
    "text": "be used",
    "start": "568240",
    "end": "569360"
  },
  {
    "text": "you can use your existing git clients",
    "start": "569360",
    "end": "573279"
  },
  {
    "text": "and ides to connect to this repository",
    "start": "573279",
    "end": "576959"
  },
  {
    "text": "there are some prerequisites required",
    "start": "576959",
    "end": "579360"
  },
  {
    "text": "you will have to create your code commit",
    "start": "579360",
    "end": "581279"
  },
  {
    "text": "credentials",
    "start": "581279",
    "end": "582480"
  },
  {
    "text": "the steps to create these credentials",
    "start": "582480",
    "end": "584399"
  },
  {
    "text": "and use them from your git client",
    "start": "584399",
    "end": "586880"
  },
  {
    "text": "are included in the step one",
    "start": "586880",
    "end": "589440"
  },
  {
    "text": "prerequisites",
    "start": "589440",
    "end": "590560"
  },
  {
    "text": "and step two guides available in aws",
    "start": "590560",
    "end": "593279"
  },
  {
    "text": "console",
    "start": "593279",
    "end": "595839"
  },
  {
    "text": "with my code repository ready i am now",
    "start": "597680",
    "end": "601120"
  },
  {
    "text": "good to push my application code to my",
    "start": "601120",
    "end": "603200"
  },
  {
    "text": "code repo",
    "start": "603200",
    "end": "604800"
  },
  {
    "text": "in this example i've already pushed an",
    "start": "604800",
    "end": "607440"
  },
  {
    "text": "asp.net",
    "start": "607440",
    "end": "608560"
  },
  {
    "text": "core web application boilerplate code",
    "start": "608560",
    "end": "611920"
  },
  {
    "text": "which can be seen by clicking on the",
    "start": "611920",
    "end": "613519"
  },
  {
    "text": "repository",
    "start": "613519",
    "end": "615760"
  },
  {
    "text": "this is a standard boilerplate code",
    "start": "615760",
    "end": "619120"
  },
  {
    "text": "with the docker support only thing with",
    "start": "619120",
    "end": "621920"
  },
  {
    "text": "different or",
    "start": "621920",
    "end": "623519"
  },
  {
    "text": "the only file which i have added to this",
    "start": "623519",
    "end": "625920"
  },
  {
    "text": "project is",
    "start": "625920",
    "end": "627160"
  },
  {
    "text": "buildspec.yaml let's take a look at",
    "start": "627160",
    "end": "630839"
  },
  {
    "text": "buildspec.yml",
    "start": "630839",
    "end": "633600"
  },
  {
    "text": "this is my build spec.yaml a build spec",
    "start": "633600",
    "end": "636800"
  },
  {
    "text": "is a collection of build commands",
    "start": "636800",
    "end": "638560"
  },
  {
    "text": "and related settings in the aml format",
    "start": "638560",
    "end": "641839"
  },
  {
    "text": "that code build uses to run a build you",
    "start": "641839",
    "end": "644880"
  },
  {
    "text": "can include a build spec",
    "start": "644880",
    "end": "646320"
  },
  {
    "text": "as part of the source code or you can",
    "start": "646320",
    "end": "648480"
  },
  {
    "text": "define a build spec",
    "start": "648480",
    "end": "650640"
  },
  {
    "text": "when you create your build project let's",
    "start": "650640",
    "end": "652880"
  },
  {
    "text": "take a look at",
    "start": "652880",
    "end": "653680"
  },
  {
    "text": "couple of important sections of the",
    "start": "653680",
    "end": "655200"
  },
  {
    "text": "build spec",
    "start": "655200",
    "end": "656800"
  },
  {
    "text": "first one is pre-build in this stage",
    "start": "656800",
    "end": "660880"
  },
  {
    "text": "i am setting ecr uri an image name",
    "start": "660880",
    "end": "664800"
  },
  {
    "text": "then i am installing dotnet amazon ecs",
    "start": "664800",
    "end": "668480"
  },
  {
    "text": "tools",
    "start": "668480",
    "end": "670399"
  },
  {
    "text": "amazon ecs tools adds commands to",
    "start": "670399",
    "end": "673279"
  },
  {
    "text": "the.net cli",
    "start": "673279",
    "end": "674959"
  },
  {
    "text": "to deploy net core applications to",
    "start": "674959",
    "end": "677519"
  },
  {
    "text": "amazon",
    "start": "677519",
    "end": "678399"
  },
  {
    "text": "elastic container service next is the",
    "start": "678399",
    "end": "680880"
  },
  {
    "text": "weld stage",
    "start": "680880",
    "end": "682160"
  },
  {
    "text": "here i'm using ecs push image",
    "start": "682160",
    "end": "685680"
  },
  {
    "text": "this command encapsulates operations",
    "start": "685680",
    "end": "687839"
  },
  {
    "text": "like docker build",
    "start": "687839",
    "end": "688959"
  },
  {
    "text": "and docker push on our behalf",
    "start": "688959",
    "end": "692480"
  },
  {
    "text": "in the post build step code build will",
    "start": "692480",
    "end": "694959"
  },
  {
    "text": "create",
    "start": "694959",
    "end": "695519"
  },
  {
    "text": "a file called imagedefinition.json",
    "start": "695519",
    "end": "700560"
  },
  {
    "text": "this file will contain the container",
    "start": "700640",
    "end": "702480"
  },
  {
    "text": "name referred in the ecs task definition",
    "start": "702480",
    "end": "705839"
  },
  {
    "text": "and the uri of the ecr image this file",
    "start": "705839",
    "end": "708720"
  },
  {
    "text": "will be used",
    "start": "708720",
    "end": "709600"
  },
  {
    "text": "as an input by the deployment stage",
    "start": "709600",
    "end": "713839"
  },
  {
    "text": "with build spec created i'm ready to",
    "start": "714000",
    "end": "717200"
  },
  {
    "text": "create",
    "start": "717200",
    "end": "717839"
  },
  {
    "text": "a build project using code build",
    "start": "717839",
    "end": "720880"
  },
  {
    "text": "back in aws management console under",
    "start": "720880",
    "end": "723120"
  },
  {
    "text": "developer tools",
    "start": "723120",
    "end": "724079"
  },
  {
    "text": "i'll click on code build and click on",
    "start": "724079",
    "end": "728079"
  },
  {
    "text": "create build project",
    "start": "728079",
    "end": "731519"
  },
  {
    "text": "give your project a name",
    "start": "731519",
    "end": "734639"
  },
  {
    "text": "you can optionally give description in",
    "start": "740240",
    "end": "743120"
  },
  {
    "text": "my case",
    "start": "743120",
    "end": "745120"
  },
  {
    "text": "the source code provider is code commit",
    "start": "745120",
    "end": "747760"
  },
  {
    "text": "but it could be",
    "start": "747760",
    "end": "749600"
  },
  {
    "text": "github s3 or other git providers you may",
    "start": "749600",
    "end": "752480"
  },
  {
    "text": "choose",
    "start": "752480",
    "end": "754320"
  },
  {
    "text": "the positivity that i'm interested in",
    "start": "754320",
    "end": "757519"
  },
  {
    "text": "is the one that i've just created called",
    "start": "757519",
    "end": "759560"
  },
  {
    "text": "asp.netdemo1",
    "start": "759560",
    "end": "762560"
  },
  {
    "text": "i have to select a branch which in this",
    "start": "762800",
    "end": "764560"
  },
  {
    "text": "case is master",
    "start": "764560",
    "end": "767600"
  },
  {
    "text": "i'll scroll down and i have to select",
    "start": "768160",
    "end": "770720"
  },
  {
    "text": "the image which will be used",
    "start": "770720",
    "end": "772399"
  },
  {
    "text": "the operating system image that will be",
    "start": "772399",
    "end": "774240"
  },
  {
    "text": "used",
    "start": "774240",
    "end": "776560"
  },
  {
    "text": "to build my source code into binary",
    "start": "776639",
    "end": "779680"
  },
  {
    "text": "in this case i am choosing ubuntu",
    "start": "779680",
    "end": "783920"
  },
  {
    "text": "then for runtimes let's select standard",
    "start": "784639",
    "end": "789440"
  },
  {
    "text": "image go with the latest one standard",
    "start": "789440",
    "end": "792560"
  },
  {
    "text": "4.0",
    "start": "792560",
    "end": "795279"
  },
  {
    "text": "image version you can select to choose",
    "start": "796959",
    "end": "800480"
  },
  {
    "text": "use the latest image always or",
    "start": "800480",
    "end": "803519"
  },
  {
    "text": "you can specifically give the version",
    "start": "803519",
    "end": "805200"
  },
  {
    "text": "number in this case i'm choosing version",
    "start": "805200",
    "end": "807079"
  },
  {
    "text": "8.14",
    "start": "807079",
    "end": "808880"
  },
  {
    "text": "environment type is linux because i'm",
    "start": "808880",
    "end": "810800"
  },
  {
    "text": "building asp.net core web application",
    "start": "810800",
    "end": "813600"
  },
  {
    "text": "so linux environment time should be good",
    "start": "813600",
    "end": "815519"
  },
  {
    "text": "enough",
    "start": "815519",
    "end": "816639"
  },
  {
    "text": "i do need to enable this box or check",
    "start": "816639",
    "end": "818800"
  },
  {
    "text": "this box",
    "start": "818800",
    "end": "820000"
  },
  {
    "text": "which will give elevated privileges",
    "start": "820000",
    "end": "821839"
  },
  {
    "text": "during the build time",
    "start": "821839",
    "end": "823440"
  },
  {
    "text": "to run docker build and docker push",
    "start": "823440",
    "end": "825600"
  },
  {
    "text": "commands",
    "start": "825600",
    "end": "826880"
  },
  {
    "text": "this will be one of the requirements",
    "start": "826880",
    "end": "830639"
  },
  {
    "text": "select to choose new service role or you",
    "start": "831519",
    "end": "834160"
  },
  {
    "text": "can",
    "start": "834160",
    "end": "834959"
  },
  {
    "text": "choose an existing service role as well",
    "start": "834959",
    "end": "837279"
  },
  {
    "text": "in my case i have already created a role",
    "start": "837279",
    "end": "839120"
  },
  {
    "text": "so i'm going to go ahead and select that",
    "start": "839120",
    "end": "840839"
  },
  {
    "text": "one",
    "start": "840839",
    "end": "843839"
  },
  {
    "text": "now since i have defined my build",
    "start": "844000",
    "end": "846079"
  },
  {
    "text": "specifications in a build spec file",
    "start": "846079",
    "end": "848320"
  },
  {
    "text": "i am choosing this option else you can",
    "start": "848320",
    "end": "851199"
  },
  {
    "text": "give",
    "start": "851199",
    "end": "851680"
  },
  {
    "text": "your build commands here as well",
    "start": "851680",
    "end": "855680"
  },
  {
    "text": "and you can switch to the editor which",
    "start": "855680",
    "end": "857760"
  },
  {
    "text": "gives you option to write your own build",
    "start": "857760",
    "end": "859600"
  },
  {
    "text": "commands",
    "start": "859600",
    "end": "860399"
  },
  {
    "text": "in this case let's go with use build",
    "start": "860399",
    "end": "862560"
  },
  {
    "text": "spec file",
    "start": "862560",
    "end": "864720"
  },
  {
    "text": "with other settings left to default",
    "start": "864720",
    "end": "868000"
  },
  {
    "text": "i'm going to scroll down and click on",
    "start": "868000",
    "end": "870160"
  },
  {
    "text": "create build project",
    "start": "870160",
    "end": "872560"
  },
  {
    "text": "with my build project created",
    "start": "872560",
    "end": "874240"
  },
  {
    "text": "successfully i'm ready to create my code",
    "start": "874240",
    "end": "877120"
  },
  {
    "text": "pipeline",
    "start": "877120",
    "end": "879680"
  },
  {
    "text": "i'm expanding the pipeline option and",
    "start": "880240",
    "end": "882000"
  },
  {
    "text": "clicking on pipeline in the left menu",
    "start": "882000",
    "end": "884480"
  },
  {
    "text": "and then click on create pipeline",
    "start": "884480",
    "end": "887920"
  },
  {
    "text": "give it a name select the service role",
    "start": "887920",
    "end": "890959"
  },
  {
    "text": "or you can",
    "start": "890959",
    "end": "892959"
  },
  {
    "text": "allow code pipeline to create a new",
    "start": "892959",
    "end": "895040"
  },
  {
    "text": "service role for you in this case i'm",
    "start": "895040",
    "end": "896560"
  },
  {
    "text": "going with",
    "start": "896560",
    "end": "897120"
  },
  {
    "text": "new service role then click next",
    "start": "897120",
    "end": "901120"
  },
  {
    "text": "then choose the source provider in this",
    "start": "901120",
    "end": "903120"
  },
  {
    "text": "case my source code provider is code",
    "start": "903120",
    "end": "905120"
  },
  {
    "text": "commit",
    "start": "905120",
    "end": "907120"
  },
  {
    "text": "my repository is demo1",
    "start": "907120",
    "end": "910160"
  },
  {
    "text": "branch name is master then i'll click",
    "start": "910160",
    "end": "913120"
  },
  {
    "text": "next",
    "start": "913120",
    "end": "915519"
  },
  {
    "text": "my build provider is code build",
    "start": "916720",
    "end": "920000"
  },
  {
    "text": "and i will select the project that i",
    "start": "920000",
    "end": "921839"
  },
  {
    "text": "just created called asp.net demo project",
    "start": "921839",
    "end": "924839"
  },
  {
    "text": "one",
    "start": "924839",
    "end": "927199"
  },
  {
    "text": "and in this case i'm going to go with",
    "start": "927199",
    "end": "929839"
  },
  {
    "text": "the default single build option",
    "start": "929839",
    "end": "932079"
  },
  {
    "text": "click next",
    "start": "932079",
    "end": "934720"
  },
  {
    "text": "my deployment provider in this case",
    "start": "935680",
    "end": "938000"
  },
  {
    "text": "since i want to deploy to ecs",
    "start": "938000",
    "end": "940240"
  },
  {
    "text": "i can choose either amazon easiest or",
    "start": "940240",
    "end": "942480"
  },
  {
    "text": "amazon ecs blue green",
    "start": "942480",
    "end": "944720"
  },
  {
    "text": "blue green is a good option for blue and",
    "start": "944720",
    "end": "946800"
  },
  {
    "text": "green deployments",
    "start": "946800",
    "end": "948000"
  },
  {
    "text": "in this case i'm going with the",
    "start": "948000",
    "end": "950240"
  },
  {
    "text": "straightforward amazon ecs deployment",
    "start": "950240",
    "end": "952839"
  },
  {
    "text": "option",
    "start": "952839",
    "end": "955839"
  },
  {
    "text": "i have to select my ecs cluster which in",
    "start": "955920",
    "end": "958399"
  },
  {
    "text": "this case is demo cluster",
    "start": "958399",
    "end": "961759"
  },
  {
    "text": "then the service name i have only one",
    "start": "961759",
    "end": "964240"
  },
  {
    "text": "service called web",
    "start": "964240",
    "end": "965279"
  },
  {
    "text": "app service then my image definition",
    "start": "965279",
    "end": "968880"
  },
  {
    "text": "files i'm going to leave it",
    "start": "968880",
    "end": "970560"
  },
  {
    "text": "these are the optional settings along",
    "start": "970560",
    "end": "972480"
  },
  {
    "text": "with the deployment timeline",
    "start": "972480",
    "end": "974000"
  },
  {
    "text": "a timeout and then click next",
    "start": "974000",
    "end": "977920"
  },
  {
    "text": "with that review your settings and click",
    "start": "977920",
    "end": "979920"
  },
  {
    "text": "on create pipeline",
    "start": "979920",
    "end": "982000"
  },
  {
    "text": "as soon as the pipeline is created my",
    "start": "982000",
    "end": "985120"
  },
  {
    "text": "release will be pushed and it will go",
    "start": "985120",
    "end": "988399"
  },
  {
    "text": "through the",
    "start": "988399",
    "end": "989199"
  },
  {
    "text": "all the steps of building my code and",
    "start": "989199",
    "end": "992880"
  },
  {
    "text": "then",
    "start": "992880",
    "end": "993440"
  },
  {
    "text": "deploying it this is going gonna take a",
    "start": "993440",
    "end": "995440"
  },
  {
    "text": "minute uh maybe a couple of minutes so",
    "start": "995440",
    "end": "997759"
  },
  {
    "text": "i'm just gonna pause the video and come",
    "start": "997759",
    "end": "999519"
  },
  {
    "text": "back once we're done",
    "start": "999519",
    "end": "1002480"
  },
  {
    "text": "it took around five minutes but my code",
    "start": "1002480",
    "end": "1005199"
  },
  {
    "text": "pipeline has finished execution",
    "start": "1005199",
    "end": "1007920"
  },
  {
    "text": "uh all the steps were successful i can",
    "start": "1007920",
    "end": "1010880"
  },
  {
    "text": "look at more details for example for",
    "start": "1010880",
    "end": "1013120"
  },
  {
    "text": "aws code build i can click on the",
    "start": "1013120",
    "end": "1016320"
  },
  {
    "text": "details",
    "start": "1016320",
    "end": "1017120"
  },
  {
    "text": "and go to the details page i can scroll",
    "start": "1017120",
    "end": "1020000"
  },
  {
    "text": "down i can see all the commands that",
    "start": "1020000",
    "end": "1021920"
  },
  {
    "text": "were executed",
    "start": "1021920",
    "end": "1023360"
  },
  {
    "text": "by ecs.net tools",
    "start": "1023360",
    "end": "1026798"
  },
  {
    "text": "i can also go back to my alp",
    "start": "1026799",
    "end": "1030160"
  },
  {
    "text": "url and i can see that the updated",
    "start": "1030160",
    "end": "1032319"
  },
  {
    "text": "version of application is now",
    "start": "1032319",
    "end": "1034000"
  },
  {
    "text": "deployed to recap the session in this",
    "start": "1034000",
    "end": "1038160"
  },
  {
    "text": "session we created a git base",
    "start": "1038160",
    "end": "1040319"
  },
  {
    "text": "source code repository using code commit",
    "start": "1040319",
    "end": "1043120"
  },
  {
    "text": "we defined our build definition using",
    "start": "1043120",
    "end": "1045280"
  },
  {
    "text": "build spec rtml",
    "start": "1045280",
    "end": "1046880"
  },
  {
    "text": "which was stored at the root of the code",
    "start": "1046880",
    "end": "1049120"
  },
  {
    "text": "repository",
    "start": "1049120",
    "end": "1050799"
  },
  {
    "text": "in the build stage we created a code",
    "start": "1050799",
    "end": "1052960"
  },
  {
    "text": "build project",
    "start": "1052960",
    "end": "1054240"
  },
  {
    "text": "which used build spec to build the",
    "start": "1054240",
    "end": "1056400"
  },
  {
    "text": "docker image",
    "start": "1056400",
    "end": "1057280"
  },
  {
    "text": "and push that image to ecr we used aws",
    "start": "1057280",
    "end": "1061039"
  },
  {
    "text": "cli tools to encapsulate all the docker",
    "start": "1061039",
    "end": "1063440"
  },
  {
    "text": "operations",
    "start": "1063440",
    "end": "1064559"
  },
  {
    "text": "by the single push image command in the",
    "start": "1064559",
    "end": "1067360"
  },
  {
    "text": "end",
    "start": "1067360",
    "end": "1067679"
  },
  {
    "text": "we used ecs provider for code pipeline",
    "start": "1067679",
    "end": "1070480"
  },
  {
    "text": "to update",
    "start": "1070480",
    "end": "1071360"
  },
  {
    "text": "the task definition and ecs service",
    "start": "1071360",
    "end": "1075280"
  },
  {
    "text": "thank you for your time i hope you find",
    "start": "1075280",
    "end": "1077840"
  },
  {
    "text": "this session useful",
    "start": "1077840",
    "end": "1081070"
  },
  {
    "text": "[Music]",
    "start": "1081070",
    "end": "1084220"
  }
]