[
  {
    "start": "0",
    "end": "24000"
  },
  {
    "text": "hey this is kirk from the dynamodb team",
    "start": "1439",
    "end": "3120"
  },
  {
    "text": "and today we are talking about table",
    "start": "3120",
    "end": "4560"
  },
  {
    "text": "capacity modes so let's get going",
    "start": "4560",
    "end": "7279"
  },
  {
    "text": "table capacity modes are how your table",
    "start": "7279",
    "end": "9679"
  },
  {
    "text": "manages and scales read write operations",
    "start": "9679",
    "end": "12559"
  },
  {
    "text": "it also controls how you're charged for",
    "start": "12559",
    "end": "14960"
  },
  {
    "text": "read and write operations",
    "start": "14960",
    "end": "17039"
  },
  {
    "text": "table capacity modes come in two",
    "start": "17039",
    "end": "18880"
  },
  {
    "text": "different flavors provision capacity",
    "start": "18880",
    "end": "21039"
  },
  {
    "text": "mode the default and on-demand capacity",
    "start": "21039",
    "end": "23439"
  },
  {
    "text": "mode",
    "start": "23439",
    "end": "24880"
  },
  {
    "start": "24000",
    "end": "115000"
  },
  {
    "text": "provision capacity mode with auto",
    "start": "24880",
    "end": "26400"
  },
  {
    "text": "scaling is where you configure the upper",
    "start": "26400",
    "end": "28160"
  },
  {
    "text": "and lower boundaries of capacity on the",
    "start": "28160",
    "end": "30000"
  },
  {
    "text": "table and dynamodb continually monitors",
    "start": "30000",
    "end": "32640"
  },
  {
    "text": "your table's cloud watch metrics",
    "start": "32640",
    "end": "34960"
  },
  {
    "text": "with those metrics it knows when to add",
    "start": "34960",
    "end": "37200"
  },
  {
    "text": "capacity up to the configured ceiling",
    "start": "37200",
    "end": "39520"
  },
  {
    "text": "but will also remove capacity when it's",
    "start": "39520",
    "end": "41520"
  },
  {
    "text": "no longer needed down to the lower",
    "start": "41520",
    "end": "43280"
  },
  {
    "text": "setting if your table runs in provision",
    "start": "43280",
    "end": "45680"
  },
  {
    "text": "capacity mode it's best practice to have",
    "start": "45680",
    "end": "47600"
  },
  {
    "text": "auto scaling configured for more",
    "start": "47600",
    "end": "49760"
  },
  {
    "text": "information on this critical topic see",
    "start": "49760",
    "end": "52079"
  },
  {
    "text": "the links in the documentation in the",
    "start": "52079",
    "end": "53440"
  },
  {
    "text": "description",
    "start": "53440",
    "end": "55600"
  },
  {
    "text": "provision capacity mode is free tier",
    "start": "55600",
    "end": "57360"
  },
  {
    "text": "eligible this is an excellent way for",
    "start": "57360",
    "end": "59199"
  },
  {
    "text": "you to take dynamodb for a test drive",
    "start": "59199",
    "end": "61600"
  },
  {
    "text": "see the functionality it offers run your",
    "start": "61600",
    "end": "63760"
  },
  {
    "text": "apps for as long as you need and all",
    "start": "63760",
    "end": "65680"
  },
  {
    "text": "without paying just to do an evaluation",
    "start": "65680",
    "end": "68640"
  },
  {
    "text": "this is an example where you really need",
    "start": "68640",
    "end": "70240"
  },
  {
    "text": "to set the auto scaling capacity",
    "start": "70240",
    "end": "72000"
  },
  {
    "text": "settings very tightly",
    "start": "72000",
    "end": "74640"
  },
  {
    "text": "another feature is the ability to",
    "start": "74640",
    "end": "76159"
  },
  {
    "text": "purchase reserve capacity you can",
    "start": "76159",
    "end": "78240"
  },
  {
    "text": "pre-purchase a specific amount of",
    "start": "78240",
    "end": "79759"
  },
  {
    "text": "capacity you will need and therefore pay",
    "start": "79759",
    "end": "82000"
  },
  {
    "text": "a lower overall cost for that capacity",
    "start": "82000",
    "end": "84720"
  },
  {
    "text": "the second capacity mode is dynamodb",
    "start": "84720",
    "end": "86720"
  },
  {
    "text": "on-demand capacity mode in this case",
    "start": "86720",
    "end": "89520"
  },
  {
    "text": "there's no capacity planning no",
    "start": "89520",
    "end": "91360"
  },
  {
    "text": "provisioning and no reservations you",
    "start": "91360",
    "end": "93759"
  },
  {
    "text": "only pay for the reads and rates that",
    "start": "93759",
    "end": "95280"
  },
  {
    "text": "you perform the key benefits on this is",
    "start": "95280",
    "end": "97360"
  },
  {
    "text": "it eliminates the trade-offs of",
    "start": "97360",
    "end": "98640"
  },
  {
    "text": "over-provisioning or under provisioning",
    "start": "98640",
    "end": "100479"
  },
  {
    "text": "what you might need dynamodb",
    "start": "100479",
    "end": "102720"
  },
  {
    "text": "automatically allocates more capacity as",
    "start": "102720",
    "end": "104960"
  },
  {
    "text": "your traffic volume increases to help",
    "start": "104960",
    "end": "107040"
  },
  {
    "text": "ensure your workload does not experience",
    "start": "107040",
    "end": "109040"
  },
  {
    "text": "throttling however throttling can occur",
    "start": "109040",
    "end": "111680"
  },
  {
    "text": "if you exceed double your previous peak",
    "start": "111680",
    "end": "113439"
  },
  {
    "text": "within 30 minutes",
    "start": "113439",
    "end": "115119"
  },
  {
    "start": "115000",
    "end": "206000"
  },
  {
    "text": "now let's talk about selecting a",
    "start": "115119",
    "end": "116399"
  },
  {
    "text": "capacity mode and which one is right for",
    "start": "116399",
    "end": "118399"
  },
  {
    "text": "your table",
    "start": "118399",
    "end": "120000"
  },
  {
    "text": "you may want to use provision capacity",
    "start": "120000",
    "end": "121759"
  },
  {
    "text": "mode when you have predictable workloads",
    "start": "121759",
    "end": "123920"
  },
  {
    "text": "with traffic having gradual ramps up and",
    "start": "123920",
    "end": "126000"
  },
  {
    "text": "downs workloads with known traffic where",
    "start": "126000",
    "end": "128160"
  },
  {
    "text": "you can predict exactly what kind of",
    "start": "128160",
    "end": "129840"
  },
  {
    "text": "traffic you're going to have as well as",
    "start": "129840",
    "end": "131520"
  },
  {
    "text": "the times where you have monitoring in",
    "start": "131520",
    "end": "133520"
  },
  {
    "text": "amazon cloud watch tuned for what your",
    "start": "133520",
    "end": "135840"
  },
  {
    "text": "table is doing and you know when to add",
    "start": "135840",
    "end": "138239"
  },
  {
    "text": "and remove capacity manually",
    "start": "138239",
    "end": "140800"
  },
  {
    "text": "on demand mode is great for new",
    "start": "140800",
    "end": "142560"
  },
  {
    "text": "workloads where i don't know what i'm",
    "start": "142560",
    "end": "144640"
  },
  {
    "text": "going to be using capacity wise maybe i",
    "start": "144640",
    "end": "147200"
  },
  {
    "text": "need to run the workload for a while in",
    "start": "147200",
    "end": "148800"
  },
  {
    "text": "order to figure out what steady state",
    "start": "148800",
    "end": "150480"
  },
  {
    "text": "looks like then i have some data in",
    "start": "150480",
    "end": "152239"
  },
  {
    "text": "cloud watch to make a decision the next",
    "start": "152239",
    "end": "154400"
  },
  {
    "text": "example is when i have consistently",
    "start": "154400",
    "end": "156160"
  },
  {
    "text": "unpredictable or spiky workloads where",
    "start": "156160",
    "end": "158640"
  },
  {
    "text": "i'm not sure what's going to happen and",
    "start": "158640",
    "end": "160640"
  },
  {
    "text": "it may be over time that your workload",
    "start": "160640",
    "end": "162480"
  },
  {
    "text": "is always unpredictable i spike up",
    "start": "162480",
    "end": "164720"
  },
  {
    "text": "sometimes to 10 000 operations per",
    "start": "164720",
    "end": "166640"
  },
  {
    "text": "second and then 5 seconds later i'm back",
    "start": "166640",
    "end": "169280"
  },
  {
    "text": "down to five operations per second",
    "start": "169280",
    "end": "171519"
  },
  {
    "text": "another example is frequently idle",
    "start": "171519",
    "end": "173360"
  },
  {
    "text": "workloads my personal favorite for this",
    "start": "173360",
    "end": "175680"
  },
  {
    "text": "is development and test environments i",
    "start": "175680",
    "end": "177680"
  },
  {
    "text": "keep all my dev and test tables in",
    "start": "177680",
    "end": "179440"
  },
  {
    "text": "on-demand capacity mode therefore",
    "start": "179440",
    "end": "181360"
  },
  {
    "text": "they're not costing me any money outside",
    "start": "181360",
    "end": "183200"
  },
  {
    "text": "of storage costs because i'm not putting",
    "start": "183200",
    "end": "185280"
  },
  {
    "text": "any operations on them most times the",
    "start": "185280",
    "end": "187760"
  },
  {
    "text": "next example is events with unknown",
    "start": "187760",
    "end": "189680"
  },
  {
    "text": "traffic let's say marketing comes to you",
    "start": "189680",
    "end": "191760"
  },
  {
    "text": "and says hey in two days i need the",
    "start": "191760",
    "end": "194080"
  },
  {
    "text": "application to scale up to a hundred",
    "start": "194080",
    "end": "195840"
  },
  {
    "text": "thousand new users problem is how many",
    "start": "195840",
    "end": "199040"
  },
  {
    "text": "more operations on the database will",
    "start": "199040",
    "end": "200480"
  },
  {
    "text": "that be so this might be a good time to",
    "start": "200480",
    "end": "202560"
  },
  {
    "text": "use on-demand mode and let dynamodb take",
    "start": "202560",
    "end": "204879"
  },
  {
    "text": "care of this for me next up is the",
    "start": "204879",
    "end": "206959"
  },
  {
    "start": "206000",
    "end": "248000"
  },
  {
    "text": "ability to switch between capacity modes",
    "start": "206959",
    "end": "209760"
  },
  {
    "text": "have a new application and don't know",
    "start": "209760",
    "end": "211360"
  },
  {
    "text": "what your traffic profile will be like i",
    "start": "211360",
    "end": "213440"
  },
  {
    "text": "mentioned before you can start out in",
    "start": "213440",
    "end": "215200"
  },
  {
    "text": "on-demand capacity mode and figure out",
    "start": "215200",
    "end": "217280"
  },
  {
    "text": "what steady state looks like then you",
    "start": "217280",
    "end": "219280"
  },
  {
    "text": "have some data to go off of and can make",
    "start": "219280",
    "end": "221280"
  },
  {
    "text": "an educated decision as to which",
    "start": "221280",
    "end": "222879"
  },
  {
    "text": "capacity mode will work best for your",
    "start": "222879",
    "end": "224720"
  },
  {
    "text": "workloads you are not locked into any",
    "start": "224720",
    "end": "227200"
  },
  {
    "text": "capacity mode on your tables let's say",
    "start": "227200",
    "end": "229519"
  },
  {
    "text": "you have a big event coming up marketing",
    "start": "229519",
    "end": "232080"
  },
  {
    "text": "e-commerce or maybe new downloadable",
    "start": "232080",
    "end": "233840"
  },
  {
    "text": "content for a game coming out",
    "start": "233840",
    "end": "236080"
  },
  {
    "text": "if you normally run in provision",
    "start": "236080",
    "end": "237760"
  },
  {
    "text": "capacity mode you can now switch to on",
    "start": "237760",
    "end": "239920"
  },
  {
    "text": "demand mode for the duration of that big",
    "start": "239920",
    "end": "241760"
  },
  {
    "text": "event",
    "start": "241760",
    "end": "242720"
  },
  {
    "text": "when the event is over you can then",
    "start": "242720",
    "end": "244400"
  },
  {
    "text": "switch back to steady state of provision",
    "start": "244400",
    "end": "246720"
  },
  {
    "text": "capacity mode",
    "start": "246720",
    "end": "249120"
  },
  {
    "start": "248000",
    "end": "385000"
  },
  {
    "text": "all right it's demo time so we're",
    "start": "249120",
    "end": "251120"
  },
  {
    "text": "looking right here at the movies table",
    "start": "251120",
    "end": "252720"
  },
  {
    "text": "we're gonna look at the capacity",
    "start": "252720",
    "end": "253760"
  },
  {
    "text": "settings on this table right now we're",
    "start": "253760",
    "end": "255280"
  },
  {
    "text": "looking at the additional settings we",
    "start": "255280",
    "end": "257759"
  },
  {
    "text": "see that it's on on demand mode right",
    "start": "257759",
    "end": "259680"
  },
  {
    "text": "now so there really are no settings for",
    "start": "259680",
    "end": "261519"
  },
  {
    "text": "it dynamodb is taking care of everything",
    "start": "261519",
    "end": "263440"
  },
  {
    "text": "for us but we want to change this over",
    "start": "263440",
    "end": "265199"
  },
  {
    "text": "to provision mode real",
    "start": "265199",
    "end": "266840"
  },
  {
    "text": "quick go to edit we're going to",
    "start": "266840",
    "end": "269199"
  },
  {
    "text": "provision mode and it's going to give us",
    "start": "269199",
    "end": "271040"
  },
  {
    "text": "the default settings that come out right",
    "start": "271040",
    "end": "273440"
  },
  {
    "text": "out of the box for dynamodb minimum of 1",
    "start": "273440",
    "end": "276080"
  },
  {
    "text": "maximum of 10. this is that floor and",
    "start": "276080",
    "end": "277759"
  },
  {
    "text": "ceiling that i talked about earlier",
    "start": "277759",
    "end": "280240"
  },
  {
    "text": "and there's also so we set a target",
    "start": "280240",
    "end": "282400"
  },
  {
    "text": "utilization what is the utilization we",
    "start": "282400",
    "end": "284320"
  },
  {
    "text": "want dynamodb to use to make sure that",
    "start": "284320",
    "end": "286800"
  },
  {
    "text": "we have enough capacity going on and",
    "start": "286800",
    "end": "288560"
  },
  {
    "text": "then there's also the initial provision",
    "start": "288560",
    "end": "289919"
  },
  {
    "text": "units that we're going to set when we",
    "start": "289919",
    "end": "291759"
  },
  {
    "text": "make this change one thing to note here",
    "start": "291759",
    "end": "293919"
  },
  {
    "text": "is that there is a capacity calculator",
    "start": "293919",
    "end": "296240"
  },
  {
    "text": "let's say if you had an average size of",
    "start": "296240",
    "end": "297520"
  },
  {
    "text": "one kilobytes you can type in your reads",
    "start": "297520",
    "end": "299919"
  },
  {
    "text": "per second writes per second what level",
    "start": "299919",
    "end": "302000"
  },
  {
    "text": "of read consistency you're going to",
    "start": "302000",
    "end": "303360"
  },
  {
    "text": "potentially use right consistency and",
    "start": "303360",
    "end": "305759"
  },
  {
    "text": "it'll kick you out of price here now one",
    "start": "305759",
    "end": "307199"
  },
  {
    "text": "thing to keep in mind is that",
    "start": "307199",
    "end": "309120"
  },
  {
    "text": "this is not going to be exactly what",
    "start": "309120",
    "end": "311039"
  },
  {
    "text": "you're going to use because we have auto",
    "start": "311039",
    "end": "312720"
  },
  {
    "text": "scaling on here and dynamodb is going to",
    "start": "312720",
    "end": "314560"
  },
  {
    "text": "be changing our capacity between that",
    "start": "314560",
    "end": "316479"
  },
  {
    "text": "floor and that ceiling",
    "start": "316479",
    "end": "317919"
  },
  {
    "text": "we we might one hour be using a hundred",
    "start": "317919",
    "end": "320880"
  },
  {
    "text": "operations per second at that cost and",
    "start": "320880",
    "end": "323520"
  },
  {
    "text": "then the next hour we're using",
    "start": "323520",
    "end": "325680"
  },
  {
    "text": "three",
    "start": "325680",
    "end": "327120"
  },
  {
    "text": "so dynamodb will scale this up and down",
    "start": "327120",
    "end": "330000"
  },
  {
    "text": "it's not linear it's not like adding",
    "start": "330000",
    "end": "331680"
  },
  {
    "text": "servers to a database and then you're",
    "start": "331680",
    "end": "334320"
  },
  {
    "text": "paying for those servers for all time",
    "start": "334320",
    "end": "336080"
  },
  {
    "text": "dynamodb will actually remove capacity",
    "start": "336080",
    "end": "338960"
  },
  {
    "text": "and therefore save you money based off",
    "start": "338960",
    "end": "340639"
  },
  {
    "text": "of metrics that are in cloudwatch",
    "start": "340639",
    "end": "343360"
  },
  {
    "text": "so we're going to change that",
    "start": "343360",
    "end": "345520"
  },
  {
    "text": "and then hit save changes",
    "start": "345520",
    "end": "348880"
  },
  {
    "text": "and dynamodb in the background is now",
    "start": "348880",
    "end": "350720"
  },
  {
    "text": "changing this over",
    "start": "350720",
    "end": "352639"
  },
  {
    "text": "there is no downtime involved in this",
    "start": "352639",
    "end": "354479"
  },
  {
    "text": "changeover you won't see anything your",
    "start": "354479",
    "end": "356400"
  },
  {
    "text": "customers won't see anything dynamodb is",
    "start": "356400",
    "end": "358880"
  },
  {
    "text": "just changing this over to this new",
    "start": "358880",
    "end": "360560"
  },
  {
    "text": "billing method in the background",
    "start": "360560",
    "end": "362639"
  },
  {
    "text": "in summary dynamodb gives you two",
    "start": "362639",
    "end": "364960"
  },
  {
    "text": "options for capacity modes",
    "start": "364960",
    "end": "367120"
  },
  {
    "text": "choose which is right for your workloads",
    "start": "367120",
    "end": "369199"
  },
  {
    "text": "why it's right for your workloads and",
    "start": "369199",
    "end": "371120"
  },
  {
    "text": "when you might want to switch between",
    "start": "371120",
    "end": "372800"
  },
  {
    "text": "the two capacity modes",
    "start": "372800",
    "end": "375280"
  },
  {
    "text": "thanks to be on the lookout for more",
    "start": "375280",
    "end": "376560"
  },
  {
    "text": "core concept videos here and on our",
    "start": "376560",
    "end": "378479"
  },
  {
    "text": "twitter handle at dynamodb",
    "start": "378479",
    "end": "382520"
  }
]