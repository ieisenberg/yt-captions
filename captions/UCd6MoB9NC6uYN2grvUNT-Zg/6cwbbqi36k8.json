[
  {
    "start": "0",
    "end": "75000"
  },
  {
    "text": "afternoon everyone my name is Roy Ben Alta I'm business development manager at",
    "start": "0",
    "end": "5250"
  },
  {
    "text": "AWS and thank you for coming to our session the life of a clicker what to",
    "start": "5250",
    "end": "12059"
  },
  {
    "text": "expect from the session so how many of you are doing click stream analytics",
    "start": "12059",
    "end": "17910"
  },
  {
    "text": "today nice how many are using a dupe for that redshift Kinesis okay",
    "start": "17910",
    "end": "29039"
  },
  {
    "text": "how many are not doing it but they're looking it from business perspective how to do it interesting okay so we're going",
    "start": "29039",
    "end": "40200"
  },
  {
    "text": "to talk about common patterns for click stream analytics give you some tips how you utilize EMR Kinesis for doing this",
    "start": "40200",
    "end": "50190"
  },
  {
    "text": "type of workload on AWS and for a man entry will have Rick McFarland with the",
    "start": "50190",
    "end": "56850"
  },
  {
    "text": "vice president of data services at Hurst talk about their journey of clickstream",
    "start": "56850",
    "end": "62219"
  },
  {
    "text": "analytics at Hearst so click stream analytics it's really",
    "start": "62219",
    "end": "68549"
  },
  {
    "text": "means business value regardless which vertical you are working today whether it's consumer online e-commerce",
    "start": "68549",
    "end": "77570"
  },
  {
    "start": "75000",
    "end": "136000"
  },
  {
    "text": "can be banking if you heard Capital One today moving to AWS using their digital",
    "start": "77570",
    "end": "83729"
  },
  {
    "text": "platform Internet of Things we want to identify what our customers are doing on",
    "start": "83729",
    "end": "89880"
  },
  {
    "text": "our digital assets so when we say click stream it can be a click for advertising",
    "start": "89880",
    "end": "95850"
  },
  {
    "text": "that they using later on to aggregate data and analyze them looking about key",
    "start": "95850",
    "end": "104759"
  },
  {
    "text": "performance indicators that we are capturing and other type of use cases",
    "start": "104759",
    "end": "110100"
  },
  {
    "text": "that are more advanced are things like recommendation engine so I'm on the",
    "start": "110100",
    "end": "115920"
  },
  {
    "text": "website I buy something you want to do an upsell and suggest the next product",
    "start": "115920",
    "end": "122670"
  },
  {
    "text": "or put the right advertising promotion banner to the customer and",
    "start": "122670",
    "end": "129119"
  },
  {
    "text": "what customers are doing they analyze these collections of web logs or click",
    "start": "129119",
    "end": "134879"
  },
  {
    "text": "streams but there are some challenges and the challenges are around the",
    "start": "134879",
    "end": "142080"
  },
  {
    "start": "136000",
    "end": "168000"
  },
  {
    "text": "velocity of the data so some of you are familiar with Omniture web logs going to",
    "start": "142080",
    "end": "147599"
  },
  {
    "text": "web logs your homegrown web blogs that you generate it can be in different format it can be a JSON it can be it is",
    "start": "147599",
    "end": "156239"
  },
  {
    "text": "V CSV Avro you know many and there are many types of data that and the volume",
    "start": "156239",
    "end": "163890"
  },
  {
    "text": "is massive and you need to analyze it I always like to give this example how",
    "start": "163890",
    "end": "171810"
  },
  {
    "start": "168000",
    "end": "224000"
  },
  {
    "text": "many wrote may produce in their life when good so you remember this one hello",
    "start": "171810",
    "end": "178230"
  },
  {
    "text": "world first programming in Hadoop doing word count you have a nice 1 gigabyte of",
    "start": "178230",
    "end": "184799"
  },
  {
    "text": "text files you write your program you know how many words I have in my large object but this is really to understand",
    "start": "184799",
    "end": "192150"
  },
  {
    "text": "how my produce works during the search raffling but the real project or the",
    "start": "192150",
    "end": "198030"
  },
  {
    "text": "real first project that most of the customers that I worked with this is what they start they're a collection of",
    "start": "198030",
    "end": "203430"
  },
  {
    "text": "web blogs and they get really messy web logs you have cookies you have query you",
    "start": "203430",
    "end": "210810"
  },
  {
    "text": "need to do I pick config you need to clean that data and in the end of the day many of the customers what they do",
    "start": "210810",
    "end": "216629"
  },
  {
    "text": "they really not create nice visualization or aggregation and this is",
    "start": "216629",
    "end": "223530"
  },
  {
    "text": "really the basic thing I've seen with within the last six seven years that",
    "start": "223530",
    "end": "230519"
  },
  {
    "text": "customers are doing and I'm going to share with you how it evolved during the years so the first pattern and this is",
    "start": "230519",
    "end": "237930"
  },
  {
    "text": "very common use flume or Kafka landed data on HDFS we create five tables",
    "start": "237930",
    "end": "246060"
  },
  {
    "text": "accessing terabytes of data we run a query visualization tool over your",
    "start": "246060",
    "end": "253879"
  },
  {
    "text": "command line and you can go make yourself a coffee the query run for a long long time this is how it started",
    "start": "253879",
    "end": "261019"
  },
  {
    "text": "see people smiling you're familiar with that so the next phase was okay it's quite slow so let's",
    "start": "261019",
    "end": "269919"
  },
  {
    "text": "aggregate it we'll use big we'll run some ETL will build the aggregate data",
    "start": "269919",
    "end": "276160"
  },
  {
    "text": "and we'll push it back to our data warehouse we have customers that loading",
    "start": "276160",
    "end": "281740"
  },
  {
    "text": "this set so to redshift iso customers that loading it to Vertica and actually",
    "start": "281740",
    "end": "287470"
  },
  {
    "text": "the the load they get low latency when they retrieve this type of data and they",
    "start": "287470",
    "end": "292720"
  },
  {
    "text": "offload really the DTL to do it in two but the next generation is really using",
    "start": "292720",
    "end": "300639"
  },
  {
    "text": "HDFS now customers look okay I have web logs but I have some reference tables I",
    "start": "300639",
    "end": "307030"
  },
  {
    "text": "want to use scoop to push that also to HDFS and I don't really need to do",
    "start": "307030",
    "end": "314110"
  },
  {
    "text": "detail there are some really nice applications so Clara came up with Impala spark sequel presto last week",
    "start": "314110",
    "end": "322990"
  },
  {
    "text": "strata conference in New York I think there were over five companies that are doing the sequel engine on a dupe each",
    "start": "322990",
    "end": "330039"
  },
  {
    "text": "one of them said that they have the best performance which is funny but eventually we are like rewriting",
    "start": "330039",
    "end": "337449"
  },
  {
    "text": "databases in a nutshell so you have tears and different type of improvements",
    "start": "337449",
    "end": "344080"
  },
  {
    "text": "to query HDFS for further developments so how it looks in AWS what customers",
    "start": "344080",
    "end": "352060"
  },
  {
    "text": "and this is very common pattern that we see what customers are doing today we have the collection of the web logs",
    "start": "352060",
    "end": "358719"
  },
  {
    "text": "usually you have an agent sits on on a large server you collect all the data",
    "start": "358719",
    "end": "364469"
  },
  {
    "text": "you can use Kinesis stream and write a KCl and dump the data into s3 then we",
    "start": "364469",
    "end": "373930"
  },
  {
    "text": "run with VM are the cleanings we'll use it as an ETL grid we have really nice",
    "start": "373930",
    "end": "379270"
  },
  {
    "text": "data set and we can send it back to s3 because like for example if you are an advertising company all you do is the",
    "start": "379270",
    "end": "388240"
  },
  {
    "text": "output you send back to another agency or you have another customers that you need to push feeds today we see a lot of",
    "start": "388240",
    "end": "395930"
  },
  {
    "text": "integration between companies that instead of sending FTP they use bucket policy and they just give them access to",
    "start": "395930",
    "end": "402830"
  },
  {
    "text": "the output bucket when they generate the aggregated data set or you can have your",
    "start": "402830",
    "end": "409160"
  },
  {
    "text": "data warehouse using your bi and loaded aggregated data set to redshift for",
    "start": "409160",
    "end": "414350"
  },
  {
    "start": "412000",
    "end": "508000"
  },
  {
    "text": "analysis but it's not enough why it's not enough because as I said in the",
    "start": "414350",
    "end": "420950"
  },
  {
    "text": "beginning the the click stream has value and business wants to know the answers now so traditionally if you're looking on",
    "start": "420950",
    "end": "428090"
  },
  {
    "text": "web logs many customers move like once a week to once a day to maybe twice a day",
    "start": "428090",
    "end": "435680"
  },
  {
    "text": "but today we want to analyze it continuously you want to use the click",
    "start": "435680",
    "end": "441410"
  },
  {
    "text": "stream to create actions now and provide your business visibility of what are the",
    "start": "441410",
    "end": "447020"
  },
  {
    "text": "users are doing if you're advertising how you do like impressions",
    "start": "447020",
    "end": "452320"
  },
  {
    "text": "systemization in real time this type of algorithms that you want to know in a",
    "start": "452320",
    "end": "459980"
  },
  {
    "text": "near real-time and we use real time which is really near real-time we want to get to the minute second level of",
    "start": "459980",
    "end": "466130"
  },
  {
    "text": "what happens so from the time the customers click or run any transaction on your digital assets or when you get",
    "start": "466130",
    "end": "473600"
  },
  {
    "text": "the data you want to be able to analyze it and process it and really understand there is value of that so what are you",
    "start": "473600",
    "end": "480950"
  },
  {
    "text": "doing the micro batch aggregation or building at time windowing serious this",
    "start": "480950",
    "end": "487520"
  },
  {
    "text": "is where we see the industry moving from really batch and real-time to near",
    "start": "487520",
    "end": "492680"
  },
  {
    "text": "real-time but there is a hybrid approach you still have massive data that you",
    "start": "492680",
    "end": "497780"
  },
  {
    "text": "load once a month but really in the context of clique streams and web logs we see the trends of really moving into",
    "start": "497780",
    "end": "503810"
  },
  {
    "text": "that notion of near real-time so just to recap how you do that so we'll talk",
    "start": "503810",
    "end": "510260"
  },
  {
    "start": "508000",
    "end": "555000"
  },
  {
    "text": "about Amazon Kinesis streams as you heard today in this keynote Amazon",
    "start": "510260",
    "end": "516950"
  },
  {
    "text": "Kinesis streams is managed service that the streaming ingestion and provide you",
    "start": "516950",
    "end": "522560"
  },
  {
    "text": "continuous processing on your streams what unique with Kinesis that you can",
    "start": "522560",
    "end": "527900"
  },
  {
    "text": "have multiple applications that process the data on the process the",
    "start": "527900",
    "end": "533389"
  },
  {
    "text": "clickstream data or any data that is blob and you can have one application",
    "start": "533389",
    "end": "538509"
  },
  {
    "text": "loaded to s3 as your data Lake you can have one application that loaded to redshift one application can you can use",
    "start": "538509",
    "end": "546499"
  },
  {
    "text": "the Ammar to process the data or dynamodb or we have custom application that customers are building uses the",
    "start": "546499",
    "end": "553100"
  },
  {
    "text": "Kinesis client libraries another major component is the elastic MapReduce",
    "start": "553100",
    "end": "559089"
  },
  {
    "start": "555000",
    "end": "630000"
  },
  {
    "text": "amazonia mark it's a managed service that was introduced back in 2010 provide you a",
    "start": "559089",
    "end": "567259"
  },
  {
    "text": "dupe as a service we had major change within the product and we actually",
    "start": "567259",
    "end": "572569"
  },
  {
    "text": "reaaargh attacked and we're using the Apache big-top as the engine and Apache",
    "start": "572569",
    "end": "579290"
  },
  {
    "text": "spark is a first-class citizen within iam our recap on apache spark it's a",
    "start": "579290",
    "end": "586309"
  },
  {
    "text": "distributed energy in the transient memory and it has spark or it's written",
    "start": "586309",
    "end": "591800"
  },
  {
    "text": "in scala and and it has spark sequel and spark streaming that provides today to",
    "start": "591800",
    "end": "598100"
  },
  {
    "text": "customers to do different things with much better latency when they did with",
    "start": "598100",
    "end": "603949"
  },
  {
    "text": "hive or weave the paradigm of MapReduce or a Dupin and it really changed the economic so when you use spark if you're",
    "start": "603949",
    "end": "612079"
  },
  {
    "text": "having a MapReduce heavy i/o intensive you use the ephemeral storage of your",
    "start": "612079",
    "end": "617089"
  },
  {
    "text": "instances when you use spark job it's running in memory that means that you're doing much less IO and you're doing more",
    "start": "617089",
    "end": "624529"
  },
  {
    "text": "compute or memory intensive and this is where the benefits from cost of processing clickstream coming to the",
    "start": "624529",
    "end": "631459"
  },
  {
    "start": "630000",
    "end": "670000"
  },
  {
    "text": "picture how many are using spot instances with VM are how many are not",
    "start": "631459",
    "end": "636800"
  },
  {
    "text": "using at all ok good so spot instances",
    "start": "636800",
    "end": "642709"
  },
  {
    "text": "are the way for you to bid for compute hour and you can use it to VM R so if",
    "start": "642709",
    "end": "649699"
  },
  {
    "text": "you remember VM are you have the concept of master master core and task nodes",
    "start": "649699",
    "end": "655670"
  },
  {
    "text": "where the difference the core node has a ephemeral storage that IH DFS means if",
    "start": "655670",
    "end": "661339"
  },
  {
    "text": "the cluster if snow this down you're losing data if that's not you don't store anything he's",
    "start": "661339",
    "end": "667550"
  },
  {
    "text": "just giving your horsepower to your processing so if we do the math I'd say that you have 10 nodes cluster the",
    "start": "667550",
    "end": "673670"
  },
  {
    "start": "670000",
    "end": "749000"
  },
  {
    "text": "transfer 14 hours and it costs you 1 dollar per 1 hour means that for 14",
    "start": "673670",
    "end": "678920"
  },
  {
    "text": "hours you will pay $140 now we'll add 10 more nodes the training",
    "start": "678920",
    "end": "683930"
  },
  {
    "text": "on spot and we will be that for 50",
    "start": "683930",
    "end": "689300"
  },
  {
    "text": "Cent's that means that your cost for 20 nodes cluster for 7 hours because you",
    "start": "689300",
    "end": "694699"
  },
  {
    "text": "added additional 10 nodes you will pay $70 for the 20 core nodes and you will",
    "start": "694699",
    "end": "703339"
  },
  {
    "text": "pay $35 for the ones that running on spot instances total 105 dollars and",
    "start": "703339",
    "end": "709339"
  },
  {
    "text": "this is really rough math we have customers that save over 70% when using",
    "start": "709339",
    "end": "715550"
  },
  {
    "text": "the export instances in processing so less time less cost you spot especially",
    "start": "715550",
    "end": "721670"
  },
  {
    "text": "if you have spark jobs and especially if you are utilizing a job today and we",
    "start": "721670",
    "end": "726680"
  },
  {
    "text": "also found that many customers are using a dupe just as an ETL grid they clean the data and they load it to somewhere",
    "start": "726680",
    "end": "733069"
  },
  {
    "text": "else and why do you need the persistent to do cluster to do this type of activity when you can use s freeze your",
    "start": "733069",
    "end": "739220"
  },
  {
    "text": "HDFS or use your data Lake and have multiple EMR cluster processing the data",
    "start": "739220",
    "end": "745550"
  },
  {
    "text": "and really focusing on your insight so how it looks today and we talked about",
    "start": "745550",
    "end": "752180"
  },
  {
    "text": "batch and new real-time and interactive processing so you use Kinesis you use spark streaming with Amazon Kinesis and",
    "start": "752180",
    "end": "760339"
  },
  {
    "text": "I will give you some tips about how these two together really works nice and",
    "start": "760339",
    "end": "766279"
  },
  {
    "text": "you can have multiple EMR clusters for data scientists so today very common and",
    "start": "766279",
    "end": "772370"
  },
  {
    "text": "we see it in many occasions we have customers that they have a data science team and they have many analysts they",
    "start": "772370",
    "end": "778730"
  },
  {
    "text": "like to use R and different algorithms and they want to access all the data",
    "start": "778730",
    "end": "784430"
  },
  {
    "text": "because you want to have a data driven company and customer to access data so",
    "start": "784430",
    "end": "790399"
  },
  {
    "text": "the day of a life of a data scientist they come in the morning it would create his own cluster using spa",
    "start": "790399",
    "end": "796310"
  },
  {
    "text": "instances when he's done his job his work he can go home he terminate the cluster and that's it you pay for what",
    "start": "796310",
    "end": "801829"
  },
  {
    "text": "you use and you don't need a purchased impostor and have start having problem with one",
    "start": "801829",
    "end": "807139"
  },
  {
    "text": "cluster multiple users using the same jobs and get into some race condition etc so this is very common like you can",
    "start": "807139",
    "end": "814399"
  },
  {
    "text": "install a a notebook Jupiter Y Python and write additionally",
    "start": "814399",
    "end": "821389"
  },
  {
    "text": "if you need if you have a data warehouse bi needs you can load the aggregated data set into redshift and use",
    "start": "821389",
    "end": "827959"
  },
  {
    "text": "visualization you can use tableau or whatever your preference or what we just",
    "start": "827959",
    "end": "836569"
  },
  {
    "text": "introduced today and announced today that's something that you can use as",
    "start": "836569",
    "end": "841999"
  },
  {
    "text": "well the trick of the pixels so this is",
    "start": "841999",
    "end": "847910"
  },
  {
    "start": "842000",
    "end": "926000"
  },
  {
    "text": "quite interesting so when you use Kinesis and let's say that you have a webpage and you want to track some of",
    "start": "847910",
    "end": "854839"
  },
  {
    "text": "the transactions on on the page right one of the tricks that we see that many",
    "start": "854839",
    "end": "860029"
  },
  {
    "text": "advertising companies and I see our customers copying the same method they use the pixel HTTP GET how many are",
    "start": "860029",
    "end": "869000"
  },
  {
    "text": "familiar with this trick like okay we have many other guys here so what you do",
    "start": "869000",
    "end": "874790"
  },
  {
    "text": "is really you you create a small JavaScript that runs on your page and you request from the server give me a",
    "start": "874790",
    "end": "880970"
  },
  {
    "text": "pixel it can be less than one byte and what they do they concatenate all the",
    "start": "880970",
    "end": "887180"
  },
  {
    "text": "information that I want to capture of about the user like which browser is using up to which transaction and take",
    "start": "887180",
    "end": "895129"
  },
  {
    "text": "all that data and push it into your HTTP server and you will get a response but",
    "start": "895129",
    "end": "900529"
  },
  {
    "text": "you can capture the clickstream data how you do it with Kinesis so customers what",
    "start": "900529",
    "end": "906829"
  },
  {
    "text": "they do they use elastic beanstalk to create an application that it's like a Kinesis proxy and that will filter",
    "start": "906829",
    "end": "912679"
  },
  {
    "text": "because if you have scenarios that cost that someone crawl or you have bought so you can filter those but you can use",
    "start": "912679",
    "end": "919850"
  },
  {
    "text": "really to centralize your clickstream ingestion process and run it through Kinesis that's one trick because then",
    "start": "919850",
    "end": "927679"
  },
  {
    "start": "926000",
    "end": "1010000"
  },
  {
    "text": "it's a data record that you push and it's a blob and you can convert you to Jason if you'd like to work with Jason format or",
    "start": "927679",
    "end": "934130"
  },
  {
    "text": "any other format so I told you about some tips so Amazon Kinesis applications",
    "start": "934130",
    "end": "939530"
  },
  {
    "text": "when you build it so there are bricks they created in ASL for Canisius you can use maven and just build it but you can",
    "start": "939530",
    "end": "946970"
  },
  {
    "text": "use spark streaming with Kinesis we've very easy to process the data on your",
    "start": "946970",
    "end": "952730"
  },
  {
    "text": "stream using Scala or PI spark to process data on the stream the concept",
    "start": "952730",
    "end": "959630"
  },
  {
    "text": "of shards if you are not using Amazon Kinesis fire hose that we announce today",
    "start": "959630",
    "end": "965260"
  },
  {
    "text": "we always recommend that you'll have a head room for catching up with that tiny",
    "start": "965260",
    "end": "970700"
  },
  {
    "text": "stream so right now you know data in Kinesis stream you store up to 24 hours",
    "start": "970700",
    "end": "975980"
  },
  {
    "text": "so I'd say that you have yet to catch up so you want to have more shards just in",
    "start": "975980",
    "end": "981950"
  },
  {
    "text": "case you want to have a backlog and of course when you use KCl it uses DynamoDB",
    "start": "981950",
    "end": "989690"
  },
  {
    "text": "for checkpoint so give name that is unique to your application so you won't have any issues like because it's a one",
    "start": "989690",
    "end": "996200"
  },
  {
    "text": "to one it's a application X so that's the name of the table in Kinesis and of",
    "start": "996200",
    "end": "1001600"
  },
  {
    "text": "course provision the throughput now the table of dynamodb is created automatically it's not something that",
    "start": "1001600",
    "end": "1006850"
  },
  {
    "text": "you need to maintain or create it manually when music spark on EMR",
    "start": "1006850",
    "end": "1012460"
  },
  {
    "start": "1010000",
    "end": "1056000"
  },
  {
    "text": "so as I said Apache spark is a first-class citizen with Amazon EMR and",
    "start": "1012460",
    "end": "1018840"
  },
  {
    "text": "starting version free to take you don't need any more bootstrap to build spark",
    "start": "1018840",
    "end": "1023950"
  },
  {
    "text": "up and it's coming native with the new release of EMR last week EMR 4.1 dodgy",
    "start": "1023950",
    "end": "1031120"
  },
  {
    "text": "row we have spark 1.5 which is the latest release you can use yarn caster",
    "start": "1031120",
    "end": "1037240"
  },
  {
    "text": "of course if you have multiple nodes that you're running it and other tips like serialization use Kairo parameter",
    "start": "1037240",
    "end": "1045670"
  },
  {
    "text": "so that's some tips again this is a 300 level session so I didn't go and explain",
    "start": "1045670",
    "end": "1050980"
  },
  {
    "text": "like what is this we assume that you all know but I would like now to invite Rick",
    "start": "1050980",
    "end": "1057850"
  },
  {
    "text": "McFarland with vice-president Hurst that you will talk about there",
    "start": "1057850",
    "end": "1063059"
  },
  {
    "text": "experience we've clicked zoom analytics and learn about the life of the click it hurts thank you very much thanks Roy",
    "start": "1063059",
    "end": "1075889"
  },
  {
    "text": "no thanks Amazon thanks for joining me",
    "start": "1075889",
    "end": "1080940"
  },
  {
    "text": "today and yeah giving me the opportunity to share with you some of the stuff that Hearst is doing with AWS but in the",
    "start": "1080940",
    "end": "1089879"
  },
  {
    "text": "theme that Roy started let me start by asking how many of you have ever heard of Hearst before",
    "start": "1089879",
    "end": "1096230"
  },
  {
    "text": "how about Hearst the company lost some hands there how about Hearst before you saw that",
    "start": "1096230",
    "end": "1104100"
  },
  {
    "text": "this meeting was coming up good so I",
    "start": "1104100",
    "end": "1110429"
  },
  {
    "start": "1110000",
    "end": "1179000"
  },
  {
    "text": "think what I'll start with is a little background on Hearst because it does give us a nice context for how we",
    "start": "1110429",
    "end": "1118320"
  },
  {
    "text": "developed our clickstream so Hearst is actually a collection of 200 companies",
    "start": "1118320",
    "end": "1125820"
  },
  {
    "text": "in over a hundred countries we are a magazine publisher you may recognize",
    "start": "1125820",
    "end": "1133559"
  },
  {
    "text": "some of these brands we have 20 US titles and over 300 international editions we're a television broadcaster",
    "start": "1133559",
    "end": "1142950"
  },
  {
    "text": "we have 31 television stations across the country you may recognize a few of those we're a",
    "start": "1142950",
    "end": "1151529"
  },
  {
    "text": "newspaper publisher this is how we started 128 years ago some some pretty",
    "start": "1151529",
    "end": "1158460"
  },
  {
    "text": "cool brands like the San Francisco Chronicle and what's also interesting is",
    "start": "1158460",
    "end": "1164639"
  },
  {
    "text": "we're also a business-to-business data provider we provide business businesses",
    "start": "1164639",
    "end": "1171149"
  },
  {
    "text": "with data in the medical space the automotive space and the finance space",
    "start": "1171149",
    "end": "1178340"
  },
  {
    "text": "see if this works so a lot of us a lot of people refer to Hearst as a publisher",
    "start": "1178340",
    "end": "1184309"
  },
  {
    "start": "1179000",
    "end": "1225000"
  },
  {
    "text": "but I may be a little bit biased because I run the data team I actually think of Hearst as a data",
    "start": "1184309",
    "end": "1190710"
  },
  {
    "text": "creation company our data our creators of data are",
    "start": "1190710",
    "end": "1196530"
  },
  {
    "text": "create the data that fuels the apps and the tools that you use every day our",
    "start": "1196530",
    "end": "1202809"
  },
  {
    "text": "data creators give you the information you need to plan your day the weather at the school closings our data creators",
    "start": "1202809",
    "end": "1210160"
  },
  {
    "text": "give you the news they also give you the culture and some fashion advice and",
    "start": "1210160",
    "end": "1217020"
  },
  {
    "text": "everything you ever wanted to know about Kim Kardashian as well so Hurst is a",
    "start": "1217020",
    "end": "1228270"
  },
  {
    "start": "1225000",
    "end": "1350000"
  },
  {
    "text": "collection of companies and each of these companies operate independently and generate terabytes of data every",
    "start": "1228270",
    "end": "1236620"
  },
  {
    "text": "single day we actually have measured it we actually collect a petabyte of data a year from all of our different sites",
    "start": "1236620",
    "end": "1244320"
  },
  {
    "text": "three years ago Hurst established a central organization",
    "start": "1244320",
    "end": "1249880"
  },
  {
    "text": "called the data services team and we have a very simple mission our mission",
    "start": "1249880",
    "end": "1255030"
  },
  {
    "text": "is to ensure that Hurst as a corporation leverages all of this combined data that",
    "start": "1255030",
    "end": "1261940"
  },
  {
    "text": "it generates so our challenge our",
    "start": "1261940",
    "end": "1267220"
  },
  {
    "text": "challenge is or still is is actually unifying all of the data streams that",
    "start": "1267220",
    "end": "1273850"
  },
  {
    "text": "all of our individual companies create we also wanted to develop a platform for",
    "start": "1273850",
    "end": "1282070"
  },
  {
    "text": "analytics and and product creation for the rest of the company to use and we",
    "start": "1282070",
    "end": "1287950"
  },
  {
    "text": "did this using AWS resources and I'm going to share with you today the pipeline that we call it the data",
    "start": "1287950",
    "end": "1294490"
  },
  {
    "text": "pipeline that we generated in a very short amount of time and and I'll share",
    "start": "1294490",
    "end": "1300700"
  },
  {
    "text": "with you the experiences that we had along the way and hopefully if you're making one yourself you'll get some tips",
    "start": "1300700",
    "end": "1305740"
  },
  {
    "text": "or tricks and maybe be able to do it quicker than we were but sometimes it's",
    "start": "1305740",
    "end": "1312130"
  },
  {
    "text": "the journey that's important right before I get into the pipeline and give",
    "start": "1312130",
    "end": "1317860"
  },
  {
    "text": "you all the details on the Amazon architecture a lot of the pipeline's",
    "start": "1317860",
    "end": "1325150"
  },
  {
    "text": "that we design or have does motivated by products the products that actually are at the end of the pipeline",
    "start": "1325150",
    "end": "1331400"
  },
  {
    "text": "that used the data so I want to show you the one of the major motivators of our",
    "start": "1331400",
    "end": "1336920"
  },
  {
    "text": "pipeline which is a product that is used by our editors it's called buzzing at Hearst actually it's on display at our",
    "start": "1336920",
    "end": "1344570"
  },
  {
    "text": "booth one one five six in Hall C if you're curious and you want to play with it so imagine a yahoo for editors but it",
    "start": "1344570",
    "end": "1353000"
  },
  {
    "start": "1350000",
    "end": "1392000"
  },
  {
    "text": "has to be instantaneous and it has to be predictive and we've been using this",
    "start": "1353000",
    "end": "1358280"
  },
  {
    "text": "tool for the last six months and the results have been very interesting and",
    "start": "1358280",
    "end": "1364130"
  },
  {
    "text": "quite quite impressive based on the fact that we're incrementing our clicks our",
    "start": "1364130",
    "end": "1370010"
  },
  {
    "text": "number of page views by twenty five percent because what the editors use the tool to do is to actually take a piece",
    "start": "1370010",
    "end": "1375980"
  },
  {
    "text": "of content that's actually trending on one of their sites and circulate it and syndicated across to all the other sites",
    "start": "1375980",
    "end": "1381920"
  },
  {
    "text": "so we're actually leveraging the power of our three hundred and fifty sites to",
    "start": "1381920",
    "end": "1387440"
  },
  {
    "text": "circulate articles and get incremental click rates incremental pageviews at",
    "start": "1387440",
    "end": "1392600"
  },
  {
    "text": "twenty five to almost 30 percent which if you're if you're a revenue person",
    "start": "1392600",
    "end": "1398000"
  },
  {
    "text": "that that was those numbers translates to a nice increase on revenue I can't tell you how much that is but so",
    "start": "1398000",
    "end": "1405860"
  },
  {
    "text": "basically it's a very valuable tool which has some very distinct requirements that were brought back to",
    "start": "1405860",
    "end": "1411860"
  },
  {
    "text": "the data team and we as the data team we broke the requirements from the",
    "start": "1411860",
    "end": "1417050"
  },
  {
    "start": "1413000",
    "end": "1600000"
  },
  {
    "text": "developers down into our engineering requirements and these engineering requirements are the ones that actually",
    "start": "1417050",
    "end": "1422660"
  },
  {
    "text": "dictate the structure of our data pipeline and I've kind of highlighted",
    "start": "1422660",
    "end": "1427970"
  },
  {
    "text": "the main ones the number one the number one and two goals of this pipeline is it",
    "start": "1427970",
    "end": "1433910"
  },
  {
    "text": "has to have a throughput goal which is how much I always think of throughput and latency is how much money you can make and how fast you can get that first",
    "start": "1433910",
    "end": "1440360"
  },
  {
    "text": "dollar so the throughput goal is how much we have to be able to get all 350",
    "start": "1440360",
    "end": "1446660"
  },
  {
    "text": "websites to funnel their data to through this pipeline that's very important",
    "start": "1446660",
    "end": "1451670"
  },
  {
    "text": "because otherwise you're not leveraging your whole your whole capabilities we have a latency goal we need to get it",
    "start": "1451670",
    "end": "1458030"
  },
  {
    "text": "from clicked in five minutes and actually that requirements down to two minutes now so",
    "start": "1458030",
    "end": "1463970"
  },
  {
    "text": "that's how fast you can get a dollar latency it needs to be agile the tool",
    "start": "1463970",
    "end": "1469690"
  },
  {
    "text": "needs to be able to be easily and quickly the pipeline needs to be able to",
    "start": "1469690",
    "end": "1474770"
  },
  {
    "text": "be quickly changed if we add some variables or change things along the way as you know some data pipelines are very",
    "start": "1474770",
    "end": "1481400"
  },
  {
    "text": "brittle you get what you get and you'll like it but this one has to be agile so",
    "start": "1481400",
    "end": "1488840"
  },
  {
    "text": "you can easily add new elements at the beginning of the pipeline and they have to be able to quickly go through all the way to the end we have some very unique",
    "start": "1488840",
    "end": "1496520"
  },
  {
    "text": "metrics the data science team is focused not on lagging metrics on reporting page",
    "start": "1496520",
    "end": "1503180"
  },
  {
    "text": "views or clicks that happened yesterday or an hour ago we want to build some really cool funky functions or or models",
    "start": "1503180",
    "end": "1509990"
  },
  {
    "text": "that actually are predictive and actually say I think this article will be trending in an hour from now or in",
    "start": "1509990",
    "end": "1515990"
  },
  {
    "text": "two hours you know predict the future leading metrics we have data reporting windows",
    "start": "1515990",
    "end": "1523870"
  },
  {
    "text": "the editors want to see what happened in the last hour the last day and the last",
    "start": "1523870",
    "end": "1528920"
  },
  {
    "text": "week in the last month so it's not a real time tool like a lot of like a lot",
    "start": "1528920",
    "end": "1534290"
  },
  {
    "text": "of you may be thinking of it actually has to be able to look at a whole bunch of really big windows of time we have to",
    "start": "1534290",
    "end": "1543680"
  },
  {
    "text": "be able to our front-end developers are building this thing from scratch you can't just buy the YouTube the the Yahoo",
    "start": "1543680",
    "end": "1550340"
  },
  {
    "text": "website model out of the box so the end",
    "start": "1550340",
    "end": "1555410"
  },
  {
    "text": "of the pipeline which is an API has to be very flexible about what that API",
    "start": "1555410",
    "end": "1560860"
  },
  {
    "text": "endpoints can be or look like so that they can feed the requirements of the",
    "start": "1560860",
    "end": "1566150"
  },
  {
    "text": "front-end guys because they want their front ends to work as fast as possible and so their requirements on the API or",
    "start": "1566150",
    "end": "1573050"
  },
  {
    "text": "just give them me the data exactly this way now here's the big problem the",
    "start": "1573050",
    "end": "1578810"
  },
  {
    "text": "hardest problem so we have all these 350 web sites operating individually the",
    "start": "1578810",
    "end": "1584600"
  },
  {
    "text": "whole process the whole data pipeline has to be implemented without affecting any of those guys day to day operation",
    "start": "1584600",
    "end": "1592910"
  },
  {
    "text": "so that's actually kind of hard to do if you can't shut down a website or or tell",
    "start": "1592910",
    "end": "1600180"
  },
  {
    "start": "1600000",
    "end": "1649000"
  },
  {
    "text": "them to add things so let's look at the assets I had to work with three years ago when we first started off this",
    "start": "1600180",
    "end": "1606450"
  },
  {
    "text": "project we actually had a very static",
    "start": "1606450",
    "end": "1612090"
  },
  {
    "text": "clickstream collection process in place wouldn't be my static is that we had the",
    "start": "1612090",
    "end": "1618330"
  },
  {
    "text": "ability to collect data on some of our websites via clickstream but it happened",
    "start": "1618330",
    "end": "1624090"
  },
  {
    "text": "at a very at a daily basis as a daily batch and it would update and get put",
    "start": "1624090",
    "end": "1629400"
  },
  {
    "text": "into a Nativa data warehouse which we could query very nicely the Tees is great for that the",
    "start": "1629400",
    "end": "1636330"
  },
  {
    "text": "problem was is that we could do only ad-hoc queries and it wasn't production production Eliza ball and we're only",
    "start": "1636330",
    "end": "1643980"
  },
  {
    "text": "cranking about 30 gigabytes of data a day through there one other very",
    "start": "1643980",
    "end": "1650100"
  },
  {
    "start": "1649000",
    "end": "1701000"
  },
  {
    "text": "important asset that we had which is my first will be one of my first tips we",
    "start": "1650100",
    "end": "1656700"
  },
  {
    "text": "were able to implement on all of our websites a tag management system for",
    "start": "1656700",
    "end": "1662370"
  },
  {
    "text": "those of you not familiar the tag management system that's basically a container or a bucket or JavaScript that",
    "start": "1662370",
    "end": "1667620"
  },
  {
    "text": "goes on the webpage and it's a container where you put all of your tags that's",
    "start": "1667620",
    "end": "1673440"
  },
  {
    "text": "what it's traditionally known as but what a tag management system really is to me is this as data it's a district",
    "start": "1673440",
    "end": "1680520"
  },
  {
    "text": "it's a code distribution mechanism by putting this tag manager on every one of",
    "start": "1680520",
    "end": "1685650"
  },
  {
    "text": "our pages it centralizes the ability to distribute tags or JavaScript to all the",
    "start": "1685650",
    "end": "1693630"
  },
  {
    "text": "web pages instantaneously so I'll get",
    "start": "1693630",
    "end": "1699150"
  },
  {
    "text": "back to that here in a second so before",
    "start": "1699150",
    "end": "1704280"
  },
  {
    "start": "1701000",
    "end": "1860000"
  },
  {
    "text": "I show you the full data pipeline I'm going to take it apart because it didn't get created in one day it actually",
    "start": "1704280",
    "end": "1709440"
  },
  {
    "text": "rolled out over time the first part of the data pipeline if you're going to",
    "start": "1709440",
    "end": "1714780"
  },
  {
    "text": "build one is you got to start with ingest you have to be able to collect your data and the way I'm going to do",
    "start": "1714780",
    "end": "1721320"
  },
  {
    "text": "this the rest of the presentations I'm going to show you of the pipeline and then we're I'm gonna",
    "start": "1721320",
    "end": "1726580"
  },
  {
    "text": "give you a bit of code for those of you that are want to take something away I would want to have a little bit of cool",
    "start": "1726580",
    "end": "1732880"
  },
  {
    "text": "code snippets whenever I go to one of these we'll have a little bit of code snippets with some tips so the beginning",
    "start": "1732880",
    "end": "1740320"
  },
  {
    "text": "of our pipeline was the ingest and as I mentioned earlier well first of all we",
    "start": "1740320",
    "end": "1747309"
  },
  {
    "text": "have to implement the JavaScript and all the sites so Roy alluded to this earlier",
    "start": "1747309",
    "end": "1752410"
  },
  {
    "text": "the HTTP request we have to implement JavaScript on all the sites to be able to start transmitting data into our",
    "start": "1752410",
    "end": "1759400"
  },
  {
    "text": "click stream and we have to do this without interrupting their day-to-day so",
    "start": "1759400",
    "end": "1764470"
  },
  {
    "text": "because we had a tag manager on all of our web sites and that tag manager has a",
    "start": "1764470",
    "end": "1769510"
  },
  {
    "text": "has the ability to essentially I can give code to a one single person",
    "start": "1769510",
    "end": "1774970"
  },
  {
    "text": "centrally and that person can distribute the code without asking permission",
    "start": "1774970",
    "end": "1780419"
  },
  {
    "text": "necessarily we usually ask permission but you can actually put the code on the",
    "start": "1780419",
    "end": "1786040"
  },
  {
    "text": "page without the websites knowing it so the first tip is definitely if you have",
    "start": "1786040",
    "end": "1793780"
  },
  {
    "text": "a very big network of sites to implement a tag management solution the vendor we",
    "start": "1793780",
    "end": "1799240"
  },
  {
    "text": "used is insight and a good partner we",
    "start": "1799240",
    "end": "1805179"
  },
  {
    "text": "then do implemented an elastic Beanstalk with nodejs which exposes the HTTP",
    "start": "1805179",
    "end": "1810790"
  },
  {
    "text": "endpoint which roy alluded to earlier in his presentation so we're transmitting",
    "start": "1810790",
    "end": "1816370"
  },
  {
    "text": "that the data off of a page that we're interested in and staking out on an HTTP",
    "start": "1816370",
    "end": "1823390"
  },
  {
    "text": "request and transmitting it over via nodejs and that nodejs is putting it",
    "start": "1823390",
    "end": "1828850"
  },
  {
    "text": "onto a Kinesis stream and this was in the days before the announcement of",
    "start": "1828850",
    "end": "1835630"
  },
  {
    "text": "firehose so we had a KCl library also which pushed the data into an s3 bucket",
    "start": "1835630",
    "end": "1844360"
  },
  {
    "text": "so I'm basically trying to create a data Lake in s3 of all of our clickstream",
    "start": "1844360",
    "end": "1850480"
  },
  {
    "text": "data my first job is to get every action on every one of our websites stuck into",
    "start": "1850480",
    "end": "1856360"
  },
  {
    "text": "s3 here's a",
    "start": "1856360",
    "end": "1861520"
  },
  {
    "start": "1860000",
    "end": "1937000"
  },
  {
    "text": "nodejs snippet if I know it's hard to read but if you're this presentation",
    "start": "1861520",
    "end": "1868490"
  },
  {
    "text": "would be available later on the Internet and basically some key tips here I'm",
    "start": "1868490",
    "end": "1875179"
  },
  {
    "text": "gonna have to speed up I think it's important to get a good partition key so",
    "start": "1875179",
    "end": "1880370"
  },
  {
    "text": "that you evenly distribute all of your data across all the shards if in your",
    "start": "1880370",
    "end": "1886010"
  },
  {
    "text": "Kinesis stream you want to make sure you do a synchronous cycle so you don't",
    "start": "1886010",
    "end": "1891200"
  },
  {
    "text": "interrupt the loads on the page so you have to make sure you have that",
    "start": "1891200",
    "end": "1896299"
  },
  {
    "text": "asynchronous series call we also used the nodejs to put a server timestamp",
    "start": "1896299",
    "end": "1903309"
  },
  {
    "text": "into the stream because the web timestamp the stuff that comes off the web server is unreliable and finally one",
    "start": "1903309",
    "end": "1911540"
  },
  {
    "text": "of the most important things to do and this is an option but I highly recommend it is to use JSON formatting when you",
    "start": "1911540",
    "end": "1918320"
  },
  {
    "text": "push your stuff on the stream this will allow you maximum flexibility down the road as you add new elements at the",
    "start": "1918320",
    "end": "1925340"
  },
  {
    "text": "front of your pipeline which you inevitably will everybody's gonna actually want to add more variables by",
    "start": "1925340",
    "end": "1930500"
  },
  {
    "text": "using JSON you can easily expand that variable list without disrupting your pipeline later on the other kind of",
    "start": "1930500",
    "end": "1939980"
  },
  {
    "start": "1937000",
    "end": "1973000"
  },
  {
    "text": "speed up through these the other great thing that we have is the ability to monitor with AWS we can monitor each of",
    "start": "1939980",
    "end": "1946820"
  },
  {
    "text": "our elastic beam Strasse and beanstalks and our Kinesis streams they have nice",
    "start": "1946820",
    "end": "1951919"
  },
  {
    "text": "monitoring features here's an example of we have an auto scaling feature that triggers when we have more than 20",
    "start": "1951919",
    "end": "1959809"
  },
  {
    "text": "megabytes of data coming in it'll trigger an auto scale and actually grow our cluster so we can handle the load",
    "start": "1959809",
    "end": "1967780"
  },
  {
    "text": "but you can have really great monitoring via this these tools on AWS to keep an eye on spikes and stuff so",
    "start": "1967780",
    "end": "1976190"
  },
  {
    "start": "1973000",
    "end": "2019000"
  },
  {
    "text": "the summary of phase one use JSON we use the HTTP call requests to get the",
    "start": "1976190",
    "end": "1984679"
  },
  {
    "text": "minimal amount of code introduced on the page and we liked elastic Beanstalk in Kinesis",
    "start": "1984679",
    "end": "1991249"
  },
  {
    "text": "because its auto scalable so as we began to ramp up our sights and got them all on board those they would auto scale up",
    "start": "1991249",
    "end": "1998479"
  },
  {
    "text": "to handle the load and s3 was a great place to stick all the data for starters because it's reliable and of course all",
    "start": "1998479",
    "end": "2007509"
  },
  {
    "text": "of the other processes later on rely on s3 so now that we have ingest out of the way and you have to be able to have a",
    "start": "2007509",
    "end": "2013509"
  },
  {
    "text": "very nice confident ingest in your pipeline you can focus on ETL which is",
    "start": "2013509",
    "end": "2018849"
  },
  {
    "text": "the next phase of the pipeline the data that we got coming in from our websites is not clean and I'm sure if you have a",
    "start": "2018849",
    "end": "2027009"
  },
  {
    "start": "2019000",
    "end": "2101000"
  },
  {
    "text": "data pipeline you're you know whatever is put on the page is scraped and sent back and that can be have a lot of",
    "start": "2027009",
    "end": "2033039"
  },
  {
    "text": "mistakes on it so ETL is gonna gonna have to happen and our first phase of",
    "start": "2033039",
    "end": "2041139"
  },
  {
    "text": "ETL we were we decided to use EMR and we did Hadoop we decided to use EMR and and",
    "start": "2041139",
    "end": "2049539"
  },
  {
    "text": "the reasons for this is because we we knew Pig and so you know I think",
    "start": "2049539",
    "end": "2057220"
  },
  {
    "text": "sometimes that's that's how things evolve is that you use what your team can do and so we knew pig and so we",
    "start": "2057220",
    "end": "2065108"
  },
  {
    "text": "could code in pig latin so we created a Hadoop cluster that would grab the data that we were putting into the stream",
    "start": "2065109",
    "end": "2070118"
  },
  {
    "text": "from s3 clean it up and put it back into another s3 bucket and it would be the",
    "start": "2070119",
    "end": "2076868"
  },
  {
    "text": "cleaned and slightly and slightly aggregated data now if any of you",
    "start": "2076869",
    "end": "2082599"
  },
  {
    "text": "program with pig and you know you have to have a lot of UDF's to work with it because it doesn't have a lot of cool",
    "start": "2082599",
    "end": "2088510"
  },
  {
    "text": "functions out of the box we ended up having to make 50 UDF's in Python because again that's our coding language",
    "start": "2088510",
    "end": "2095049"
  },
  {
    "text": "of choice we could have done it in Java but we like Python and that is very",
    "start": "2095049",
    "end": "2102099"
  },
  {
    "start": "2101000",
    "end": "2134000"
  },
  {
    "text": "important and here's a snippet of our Pig script some tips on if you do any",
    "start": "2102099",
    "end": "2108130"
  },
  {
    "text": "coding in Pig I definitely recommend gzipping or getting your files gzipped",
    "start": "2108130",
    "end": "2113470"
  },
  {
    "text": "so we we you use these first two lines here to get compression the next section",
    "start": "2113470",
    "end": "2120430"
  },
  {
    "text": "down here is an example of how to call and the the UDF's and a lot of times reg X's scare",
    "start": "2120430",
    "end": "2128650"
  },
  {
    "text": "people in other languages but the Reg X's and pig aren't so bad version 2 of",
    "start": "2128650",
    "end": "2136600"
  },
  {
    "start": "2134000",
    "end": "2165000"
  },
  {
    "text": "our ETL so Along Came spark and one of",
    "start": "2136600",
    "end": "2143530"
  },
  {
    "text": "the neat things about spark is it allowed us to stream the data directly from Kinesis and remove the writing to",
    "start": "2143530",
    "end": "2149440"
  },
  {
    "text": "s3 and we could actually process it in real time and in memory the drawback",
    "start": "2149440",
    "end": "2155920"
  },
  {
    "text": "with spark or streaming spark is a Scala",
    "start": "2155920",
    "end": "2161670"
  },
  {
    "text": "that's a language that not a lot of people know so I'm here to try I'm a",
    "start": "2161670",
    "end": "2169540"
  },
  {
    "start": "2165000",
    "end": "2214000"
  },
  {
    "text": "convert because I'm actually convinced that Scala is not so bad and if you know",
    "start": "2169540",
    "end": "2175290"
  },
  {
    "text": "Python I think Scala will not be that bad and the way we got it rounded is a very",
    "start": "2175290",
    "end": "2180490"
  },
  {
    "text": "important little trick is we actually embedded sequel we took our existing pig",
    "start": "2180490",
    "end": "2186880"
  },
  {
    "text": "scripts converted them to sequel and embedded inside of Scala sequel so we",
    "start": "2186880",
    "end": "2193060"
  },
  {
    "text": "created a little sequel function right here's an example and it is called by",
    "start": "2193060",
    "end": "2198190"
  },
  {
    "text": "the Scala script and so basically we use Scala's a wrapper and just basically did",
    "start": "2198190",
    "end": "2204670"
  },
  {
    "text": "our ETL and sequel and this will become relevant later on and I think it's a",
    "start": "2204670",
    "end": "2209980"
  },
  {
    "text": "theme that I've got around sequel another thing is don't be intimidated by",
    "start": "2209980",
    "end": "2216970"
  },
  {
    "start": "2214000",
    "end": "2230000"
  },
  {
    "text": "this slide is here to show you a Python UDF and I seek Scala UDF basically the",
    "start": "2216970",
    "end": "2223120"
  },
  {
    "text": "argument is they're not that different here here's some commands that are in Scala and some commands in Python so I'm",
    "start": "2223120",
    "end": "2230590"
  },
  {
    "start": "2230000",
    "end": "2294000"
  },
  {
    "text": "trying to I guess speedily convince you that if you know a little bit of you know Python I think Scala is doable",
    "start": "2230590",
    "end": "2239010"
  },
  {
    "text": "once the ETL is done you've got the data cleaned up and munge down a little bit we got to come up with those funky",
    "start": "2239010",
    "end": "2245260"
  },
  {
    "text": "variables that are predictive and model-based and that's where I call the data science section phase 3 of the",
    "start": "2245260",
    "end": "2252160"
  },
  {
    "text": "pipeline and the way we started our data science is through an investigative",
    "start": "2252160",
    "end": "2257800"
  },
  {
    "text": "process where we used SAS on an ec2 note a single ec2 node and suck the data from",
    "start": "2257800",
    "end": "2265839"
  },
  {
    "text": "s3 using SAS and ran our stuff in SAS why SAS it's because our data science",
    "start": "2265839",
    "end": "2272380"
  },
  {
    "text": "folks are good at SAS everybody's if you're in data science most people know SAS and it's great for",
    "start": "2272380",
    "end": "2278740"
  },
  {
    "text": "guerrilla warfare and figuring out your models the problem was a single node of",
    "start": "2278740",
    "end": "2286210"
  },
  {
    "text": "SAS sucking the data from s3 processing and pushing it back takes three to five",
    "start": "2286210",
    "end": "2291550"
  },
  {
    "text": "minutes which breaks our two-minute time through SAS code example again I'm going",
    "start": "2291550",
    "end": "2298900"
  },
  {
    "text": "to speed through this really quickly another SAS code example we embedded sequel we used another tip I've got for",
    "start": "2298900",
    "end": "2306010"
  },
  {
    "text": "you if you're gonna do stuff in SAS I know there's a proc sequel camp versus a non proc sequel camp I definitely",
    "start": "2306010",
    "end": "2313510"
  },
  {
    "text": "recommend trying to do stuff in proc sequel because again sequels might theme through the pipeline all these",
    "start": "2313510",
    "end": "2319390"
  },
  {
    "text": "newfangled products that are coming out and if you try to interchange them the one nice commonality across all of them",
    "start": "2319390",
    "end": "2325150"
  },
  {
    "text": "is that you can usually take your code and sequel and re embed it inside that",
    "start": "2325150",
    "end": "2330400"
  },
  {
    "text": "new product so it was very easy if you did it in proc sequel to get us to the next step which I call the production",
    "start": "2330400",
    "end": "2337810"
  },
  {
    "start": "2336000",
    "end": "2387000"
  },
  {
    "text": "version of our model so now once we've figured out the models using SAS here on",
    "start": "2337810",
    "end": "2343359"
  },
  {
    "text": "the bottom what we can actually do is store those models those coefficients",
    "start": "2343359",
    "end": "2349180"
  },
  {
    "text": "are those model parameters in s3 and then since I wrote most of the the team",
    "start": "2349180",
    "end": "2356440"
  },
  {
    "text": "wrote most of the stuff in prop using proc sequel here comes redshift redshift can suck",
    "start": "2356440",
    "end": "2364000"
  },
  {
    "text": "data from s3 Postgres sequel take the proc sequel put it in Postgres grab the",
    "start": "2364000",
    "end": "2369220"
  },
  {
    "text": "models and we converted everything in our data science phase to use redshift",
    "start": "2369220",
    "end": "2374980"
  },
  {
    "text": "and suddenly our processing time our data science processing time is a",
    "start": "2374980",
    "end": "2380470"
  },
  {
    "text": "hundred seconds pretty impressive I think again I can't",
    "start": "2380470",
    "end": "2388530"
  },
  {
    "start": "2387000",
    "end": "2422000"
  },
  {
    "text": "say enough good things about how if you if you got something that you think is really fast or you and you don't think",
    "start": "2388530",
    "end": "2393990"
  },
  {
    "text": "that it can be beat I always recommend trying trying in redshift and see how fast you can get it going to redshift because it's always shocked me how fast",
    "start": "2393990",
    "end": "2401280"
  },
  {
    "text": "redshift is it's beaten some of our processes in Pais bark some of our processes in Scala redshift is it just",
    "start": "2401280",
    "end": "2408210"
  },
  {
    "text": "really great at sucking data in and processing it as long as you can get it all into sequel and now with the UDF",
    "start": "2408210",
    "end": "2413310"
  },
  {
    "text": "functions it's opened up a whole new set of things I'll skip my redshift code",
    "start": "2413310",
    "end": "2422370"
  },
  {
    "start": "2422000",
    "end": "2461000"
  },
  {
    "text": "example because I don't have any time finally once the pipeline has the data",
    "start": "2422370",
    "end": "2427830"
  },
  {
    "text": "science part done it's got these nice little neat files we now need to expose it through an API endpoint so the last",
    "start": "2427830",
    "end": "2434880"
  },
  {
    "text": "step is to push it into an elastic search cluster for indexing and an",
    "start": "2434880",
    "end": "2440070"
  },
  {
    "text": "elastic search is great for exposing stuff through and in through a through API endpoint and it's great for",
    "start": "2440070",
    "end": "2446040"
  },
  {
    "text": "searching data right the way we did it at first is since we had an EMR cluster",
    "start": "2446040",
    "end": "2451380"
  },
  {
    "text": "up and running we actually wrote a little Pig script to push the data from",
    "start": "2451380",
    "end": "2456930"
  },
  {
    "text": "s3 and EMR and that's because people might not know this the elastic search",
    "start": "2456930",
    "end": "2462540"
  },
  {
    "start": "2461000",
    "end": "2499000"
  },
  {
    "text": "has a really great jar that our Pig has a great jar that will read data directly",
    "start": "2462540",
    "end": "2468060"
  },
  {
    "text": "in elasticsearch and preserve the formatting of the date of the variables so your date times don't change I don't",
    "start": "2468060",
    "end": "2475980"
  },
  {
    "text": "know if they do having challenges reading data into elasticsearch but it can be challenging especially with",
    "start": "2475980",
    "end": "2481650"
  },
  {
    "text": "formatting so this is an example of the jar that is available",
    "start": "2481650",
    "end": "2487590"
  },
  {
    "text": "I think via Amazon and it's really simple just to define your your elasticsearch cluster and then read the",
    "start": "2487590",
    "end": "2494460"
  },
  {
    "text": "data into HDFS and then push it into elasticsearch all the formatting is",
    "start": "2494460",
    "end": "2499560"
  },
  {
    "start": "2499000",
    "end": "2529000"
  },
  {
    "text": "preserved so our final step that was slow because obviously spinning up an",
    "start": "2499560",
    "end": "2505950"
  },
  {
    "text": "EMR cluster and reading the data in HDFS and then removing it back is slowly slow",
    "start": "2505950",
    "end": "2512180"
  },
  {
    "text": "so we just decided why don't we push it directly from redshift",
    "start": "2512180",
    "end": "2517369"
  },
  {
    "text": "we had redshift was actually being run in an ec2 I'm being called via an ec2",
    "start": "2517369",
    "end": "2523009"
  },
  {
    "text": "node we just pushed the data from the ec2 node into elasticsearch directly and",
    "start": "2523009",
    "end": "2529690"
  },
  {
    "start": "2529000",
    "end": "2542000"
  },
  {
    "text": "this is a script example that we used and there's a couple of tips on there on",
    "start": "2529690",
    "end": "2537319"
  },
  {
    "text": "converting your JSON to the right format which is something that was a pain for us to figure out but this is our final",
    "start": "2537319",
    "end": "2543680"
  },
  {
    "start": "2542000",
    "end": "2581000"
  },
  {
    "text": "data pipeline and all of its all of its time latency and throughput so basically",
    "start": "2543680",
    "end": "2551589"
  },
  {
    "text": "we're ingesting about a hundred gigabytes a day of data throughout the pipeline it's being processed in",
    "start": "2551589",
    "end": "2557989"
  },
  {
    "text": "milliseconds with the spark and then we're doing our ETL in 30 seconds and",
    "start": "2557989",
    "end": "2564680"
  },
  {
    "text": "our data science is being run on redshift in a hundred seconds and being pushed out to elastic through an API and",
    "start": "2564680",
    "end": "2571190"
  },
  {
    "text": "the whole throughput is about a hundred and forty seconds from clique to it to a",
    "start": "2571190",
    "end": "2576789"
  },
  {
    "text": "to a table to an endpoint this is a more",
    "start": "2576789",
    "end": "2582440"
  },
  {
    "text": "visual representation of what's happening in our process so basically the bulldozers shoving the giant rock",
    "start": "2582440",
    "end": "2588469"
  },
  {
    "text": "and then kinesin our spark is smashing in a little pieces the data science",
    "start": "2588469",
    "end": "2594039"
  },
  {
    "text": "bulldozers scooping it up and processing it and creating a diamond at the end that's probably so to summarize the",
    "start": "2594039",
    "end": "2601579"
  },
  {
    "start": "2599000",
    "end": "2649000"
  },
  {
    "text": "lessons learned these are the couple of node does but it took us a while to",
    "start": "2601579",
    "end": "2607880"
  },
  {
    "text": "figure this out with our v1 you know we",
    "start": "2607880",
    "end": "2613069"
  },
  {
    "text": "had a lot of storage steps with s3 we kept writing the data if you can remove",
    "start": "2613069",
    "end": "2618109"
  },
  {
    "text": "the storage points speed up processing processing obviously within one of the",
    "start": "2618109",
    "end": "2624200"
  },
  {
    "text": "stages and then finally combining the stages which is hopefully down the road",
    "start": "2624200",
    "end": "2629529"
  },
  {
    "text": "will ultimately speed us up to even faster I think should we open it up",
    "start": "2629529",
    "end": "2637239"
  },
  {
    "text": "we'll be outside for after the presentation for more questions but if you want to stay we'll we'll open it up",
    "start": "2637239",
    "end": "2643549"
  },
  {
    "text": "for some questions if you have any",
    "start": "2643549",
    "end": "2647049"
  },
  {
    "start": "2649000",
    "end": "2654000"
  },
  {
    "text": "so we don't won't have time to talk about your data science so stupid yeah",
    "start": "2650020",
    "end": "2656030"
  },
  {
    "start": "2654000",
    "end": "2704000"
  },
  {
    "text": "so come meet us weekend Hearst booth but yeah we'll be at the booth one one five six hall C and",
    "start": "2656030",
    "end": "2665150"
  },
  {
    "text": "well we can talk about all this stuff and you can play with the demo tool that I didn't really get to show you very",
    "start": "2665150",
    "end": "2670339"
  },
  {
    "text": "much of yeah I think I think just like from conclusion when we worked on the",
    "start": "2670339",
    "end": "2676760"
  },
  {
    "text": "click streams think we provided you know we've Hearst with the technology to do",
    "start": "2676760",
    "end": "2683930"
  },
  {
    "text": "that type of journey this is the reason why we call it the life of the click it's really the journey of organization",
    "start": "2683930",
    "end": "2690170"
  },
  {
    "text": "enterprise organization when they start processing vast amount of data and you don't need an army of resources to do it",
    "start": "2690170",
    "end": "2696760"
  },
  {
    "text": "because most of the services are fully managed so using that really creativity",
    "start": "2696760",
    "end": "2703599"
  },
  {
    "text": "the pipeline and I don't know if today we announce some quick insight so now",
    "start": "2703599",
    "end": "2713660"
  },
  {
    "start": "2704000",
    "end": "2718000"
  },
  {
    "text": "you'll have end to end like I think my data flow and",
    "start": "2713660",
    "end": "2719210"
  },
  {
    "start": "2718000",
    "end": "2748000"
  },
  {
    "text": "visualization as well so that's your boot one one five six so if you want",
    "start": "2719210",
    "end": "2726410"
  },
  {
    "text": "more information and Hearst is hiring as well so so sorry that the demo didn't",
    "start": "2726410",
    "end": "2732710"
  },
  {
    "text": "work out we will fix and I like the the fact that you have the quick tip so you",
    "start": "2732710",
    "end": "2738170"
  },
  {
    "text": "can later on print or download this presentation and really use that for your day-to-day work so thank you very",
    "start": "2738170",
    "end": "2745250"
  },
  {
    "text": "much guys thank you",
    "start": "2745250",
    "end": "2748420"
  }
]