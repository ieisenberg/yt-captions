[
  {
    "start": "0",
    "end": "61000"
  },
  {
    "text": "[Applause]",
    "start": "1100",
    "end": "3170"
  },
  {
    "text": "[Music]",
    "start": "3170",
    "end": "7759"
  },
  {
    "text": "hello I'm thorad A Cloud support",
    "start": "7759",
    "end": "9920"
  },
  {
    "text": "engineer here at the AWS office in",
    "start": "9920",
    "end": "11840"
  },
  {
    "text": "Sydney today I'm going to show you how",
    "start": "11840",
    "end": "13799"
  },
  {
    "text": "to get information about CPU allocation",
    "start": "13799",
    "end": "15879"
  },
  {
    "text": "in Amazon elastic container service",
    "start": "15879",
    "end": "18320"
  },
  {
    "text": "let's get",
    "start": "18320",
    "end": "19600"
  },
  {
    "text": "started when creating an Amazon ECS Tas",
    "start": "19600",
    "end": "22480"
  },
  {
    "text": "definition you can specify CPU limits at",
    "start": "22480",
    "end": "24920"
  },
  {
    "text": "both the task and container level these",
    "start": "24920",
    "end": "27039"
  },
  {
    "text": "limits impact cluster performance and",
    "start": "27039",
    "end": "28599"
  },
  {
    "text": "should be tuned based on your use case",
    "start": "28599",
    "end": "30640"
  },
  {
    "text": "ECS measures CPU resources in units",
    "start": "30640",
    "end": "32758"
  },
  {
    "text": "where 1,24 units equals 1 vcpu for",
    "start": "32759",
    "end": "36280"
  },
  {
    "text": "example 248 CPU units is to",
    "start": "36280",
    "end": "40000"
  },
  {
    "text": "vcpu you have the option to Define CPU",
    "start": "40000",
    "end": "42719"
  },
  {
    "text": "limits in vcpu instead of CPU units in",
    "start": "42719",
    "end": "44840"
  },
  {
    "text": "the task definition ACS then converts it",
    "start": "44840",
    "end": "47000"
  },
  {
    "text": "into units when the task is registered",
    "start": "47000",
    "end": "49160"
  },
  {
    "text": "properly configuring these CPU values is",
    "start": "49160",
    "end": "51199"
  },
  {
    "text": "important to determine the right",
    "start": "51199",
    "end": "52320"
  },
  {
    "text": "allocation that meets your applications",
    "start": "52320",
    "end": "54120"
  },
  {
    "text": "workload requirements and optimize",
    "start": "54120",
    "end": "55879"
  },
  {
    "text": "cluster",
    "start": "55879",
    "end": "57480"
  },
  {
    "text": "performance let's begin with task level",
    "start": "57480",
    "end": "60000"
  },
  {
    "text": "CPU allocation Amazon ECS tasks can run",
    "start": "60000",
    "end": "62800"
  },
  {
    "start": "61000",
    "end": "154000"
  },
  {
    "text": "on AWS fargate or Amazon elastic compute",
    "start": "62800",
    "end": "65478"
  },
  {
    "text": "Cloud the CPU parameter at the task",
    "start": "65479",
    "end": "67520"
  },
  {
    "text": "level sets the required CPU needed for",
    "start": "67520",
    "end": "69759"
  },
  {
    "text": "the task as well as limits the maximum",
    "start": "69759",
    "end": "71640"
  },
  {
    "text": "CPU resources that the containers in the",
    "start": "71640",
    "end": "73640"
  },
  {
    "text": "task can use after logging into the AWS",
    "start": "73640",
    "end": "76360"
  },
  {
    "text": "Management console navigate to the",
    "start": "76360",
    "end": "78080"
  },
  {
    "text": "elastic container service",
    "start": "78080",
    "end": "79880"
  },
  {
    "text": "console then select the task definitions",
    "start": "79880",
    "end": "83640"
  },
  {
    "text": "page here you can create a new task",
    "start": "83640",
    "end": "87600"
  },
  {
    "text": "definition enter the task definition f",
    "start": "87600",
    "end": "89920"
  },
  {
    "text": "family name and make sure that AWS",
    "start": "89920",
    "end": "91880"
  },
  {
    "text": "fargate is",
    "start": "91880",
    "end": "93119"
  },
  {
    "text": "selected for fargate you can only select",
    "start": "93119",
    "end": "95640"
  },
  {
    "text": "a set combination of CPU and memory",
    "start": "95640",
    "end": "99200"
  },
  {
    "text": "limits note that the memory parameter",
    "start": "99200",
    "end": "102040"
  },
  {
    "text": "specifies the amount of memory in",
    "start": "102040",
    "end": "103399"
  },
  {
    "text": "gigabytes to present to the container",
    "start": "103399",
    "end": "105280"
  },
  {
    "text": "when using the ec2 launch type either a",
    "start": "105280",
    "end": "107520"
  },
  {
    "text": "task level memory value or a container",
    "start": "107520",
    "end": "109640"
  },
  {
    "text": "level memory value must be specified for",
    "start": "109640",
    "end": "112040"
  },
  {
    "text": "fargate a task level memory value must",
    "start": "112040",
    "end": "114320"
  },
  {
    "text": "be specified for ec2 you can select any",
    "start": "114320",
    "end": "116799"
  },
  {
    "text": "combination of ecpu and memory You' like",
    "start": "116799",
    "end": "119560"
  },
  {
    "text": "for CPU enter one vcpu and for memory 2",
    "start": "119560",
    "end": "126320"
  },
  {
    "text": "GB in container details enter the name",
    "start": "126439",
    "end": "129840"
  },
  {
    "text": "and image",
    "start": "129840",
    "end": "131560"
  },
  {
    "text": "URI scroll down to the bottom of the",
    "start": "131560",
    "end": "133879"
  },
  {
    "text": "page and click create the task",
    "start": "133879",
    "end": "136360"
  },
  {
    "text": "definitions page appears after it's",
    "start": "136360",
    "end": "138160"
  },
  {
    "text": "successfully created we can see here on",
    "start": "138160",
    "end": "140360"
  },
  {
    "text": "the containers tab that the task is24",
    "start": "140360",
    "end": "143400"
  },
  {
    "text": "CPU units or one vcpu this means that",
    "start": "143400",
    "end": "146760"
  },
  {
    "text": "ECS will schedule this on an instance",
    "start": "146760",
    "end": "148840"
  },
  {
    "text": "that has at least one vcpu available now",
    "start": "148840",
    "end": "151879"
  },
  {
    "text": "let's create a task definition for",
    "start": "151879",
    "end": "153319"
  },
  {
    "text": "container level allocation for launching",
    "start": "153319",
    "end": "155040"
  },
  {
    "start": "154000",
    "end": "212000"
  },
  {
    "text": "on ec2 when running tasks on Amazon ec2",
    "start": "155040",
    "end": "158360"
  },
  {
    "text": "the CPU parameter is optional choose the",
    "start": "158360",
    "end": "160560"
  },
  {
    "text": "task definitions page again now create a",
    "start": "160560",
    "end": "163360"
  },
  {
    "text": "new task",
    "start": "163360",
    "end": "165560"
  },
  {
    "text": "definition enter the task definition",
    "start": "165560",
    "end": "167800"
  },
  {
    "text": "family name and make sure that Amazon",
    "start": "167800",
    "end": "169560"
  },
  {
    "text": "ec2 instances is",
    "start": "169560",
    "end": "172319"
  },
  {
    "text": "selected here we can see that we can",
    "start": "172319",
    "end": "174440"
  },
  {
    "text": "edit the task CPU",
    "start": "174440",
    "end": "176280"
  },
  {
    "text": "field we will remove the pre-filled",
    "start": "176280",
    "end": "178760"
  },
  {
    "text": "values for this CPU and memory at the",
    "start": "178760",
    "end": "181040"
  },
  {
    "text": "task",
    "start": "181040",
    "end": "183159"
  },
  {
    "text": "level in container details enter the",
    "start": "183159",
    "end": "186080"
  },
  {
    "text": "name and the image",
    "start": "186080",
    "end": "188959"
  },
  {
    "text": "URI enter a CPU and hard memory",
    "start": "188959",
    "end": "192720"
  },
  {
    "text": "value scroll down to the bottom of the",
    "start": "192720",
    "end": "195080"
  },
  {
    "text": "page and click create the task",
    "start": "195080",
    "end": "197879"
  },
  {
    "text": "definitions page appears after it's",
    "start": "197879",
    "end": "199640"
  },
  {
    "text": "created successfully we can see here on",
    "start": "199640",
    "end": "201480"
  },
  {
    "text": "the containers tab that the task CPU is",
    "start": "201480",
    "end": "203519"
  },
  {
    "text": "blank we can see that the 1024 CPU units",
    "start": "203519",
    "end": "206879"
  },
  {
    "text": "are assigned to the container",
    "start": "206879",
    "end": "210840"
  },
  {
    "text": "now let's create a task definition",
    "start": "210920",
    "end": "212599"
  },
  {
    "start": "212000",
    "end": "578000"
  },
  {
    "text": "without specifying the CPU limits at the",
    "start": "212599",
    "end": "214680"
  },
  {
    "text": "task or container levels choose the task",
    "start": "214680",
    "end": "217120"
  },
  {
    "text": "definitions page again now create a new",
    "start": "217120",
    "end": "219920"
  },
  {
    "text": "task",
    "start": "219920",
    "end": "221080"
  },
  {
    "text": "definition enter the task definition",
    "start": "221080",
    "end": "223319"
  },
  {
    "text": "family name and make sure that Amazon E2",
    "start": "223319",
    "end": "225480"
  },
  {
    "text": "instances is selected here we can see",
    "start": "225480",
    "end": "228080"
  },
  {
    "text": "that we can edit the task CPU",
    "start": "228080",
    "end": "231879"
  },
  {
    "text": "field in container details enter the",
    "start": "232079",
    "end": "234840"
  },
  {
    "text": "name and the image",
    "start": "234840",
    "end": "237200"
  },
  {
    "text": "URI I'll scroll down to the bottom of",
    "start": "237200",
    "end": "239560"
  },
  {
    "text": "the page and click create the task",
    "start": "239560",
    "end": "242280"
  },
  {
    "text": "definitions page appears after it's",
    "start": "242280",
    "end": "244200"
  },
  {
    "text": "created successfully we can see here on",
    "start": "244200",
    "end": "246720"
  },
  {
    "text": "the containers tab that the task and the",
    "start": "246720",
    "end": "248519"
  },
  {
    "text": "container CPU are both blank when you",
    "start": "248519",
    "end": "251040"
  },
  {
    "text": "don't specify a CPU parameter at all",
    "start": "251040",
    "end": "253280"
  },
  {
    "text": "either at the task or container level in",
    "start": "253280",
    "end": "255280"
  },
  {
    "text": "your task definition Amazon ECS will",
    "start": "255280",
    "end": "257600"
  },
  {
    "text": "schedule the task on any instance",
    "start": "257600",
    "end": "259320"
  },
  {
    "text": "running this approach doesn't reduce the",
    "start": "259320",
    "end": "261400"
  },
  {
    "text": "available CPU units to your ECS",
    "start": "261400",
    "end": "263320"
  },
  {
    "text": "container",
    "start": "263320",
    "end": "265040"
  },
  {
    "text": "instance now let's demonstrate how this",
    "start": "265040",
    "end": "267400"
  },
  {
    "text": "works first create an easy s cluster go",
    "start": "267400",
    "end": "270840"
  },
  {
    "text": "to the ECS console and choose",
    "start": "270840",
    "end": "273120"
  },
  {
    "text": "clusters choose create cluster enter a",
    "start": "273120",
    "end": "276440"
  },
  {
    "text": "name for the cluster under",
    "start": "276440",
    "end": "278360"
  },
  {
    "text": "infrastructure uncheck AWS fargate",
    "start": "278360",
    "end": "280440"
  },
  {
    "text": "serverless and select Amazon E2",
    "start": "280440",
    "end": "283440"
  },
  {
    "text": "instances now choose create a new ASG on",
    "start": "283440",
    "end": "287120"
  },
  {
    "text": "demand and select the E2 instance type",
    "start": "287120",
    "end": "290080"
  },
  {
    "text": "M5 large which has 248 CPU",
    "start": "290080",
    "end": "294560"
  },
  {
    "text": "units for the purposes of this demo",
    "start": "294560",
    "end": "297440"
  },
  {
    "text": "we're going to limit our cluster to one",
    "start": "297440",
    "end": "299199"
  },
  {
    "text": "easy",
    "start": "299199",
    "end": "301639"
  },
  {
    "text": "instance under network settings for",
    "start": "302280",
    "end": "304720"
  },
  {
    "text": "Amazon is2 instances select the security",
    "start": "304720",
    "end": "307360"
  },
  {
    "text": "groups and subnets leave everything as",
    "start": "307360",
    "end": "310000"
  },
  {
    "text": "default when all the options are",
    "start": "310000",
    "end": "312160"
  },
  {
    "text": "selected click",
    "start": "312160",
    "end": "315479"
  },
  {
    "text": "create here we can see our container has",
    "start": "318520",
    "end": "321280"
  },
  {
    "text": "two vcpu available for tasks to be",
    "start": "321280",
    "end": "323759"
  },
  {
    "text": "scheduled",
    "start": "323759",
    "end": "325600"
  },
  {
    "text": "on now create and run an ECS task with",
    "start": "325600",
    "end": "328600"
  },
  {
    "text": "task level CPU application and run it on",
    "start": "328600",
    "end": "330639"
  },
  {
    "text": "the ECS cluster create a new task",
    "start": "330639",
    "end": "333039"
  },
  {
    "text": "definition with Amazon ec2 instances and",
    "start": "333039",
    "end": "335160"
  },
  {
    "text": "1 vcpu or 1024 CPU units select Amazon",
    "start": "335160",
    "end": "340160"
  },
  {
    "text": "E2 instances in the launch type and",
    "start": "340160",
    "end": "342120"
  },
  {
    "text": "enter one vcpu in CPU field of the Tas",
    "start": "342120",
    "end": "345039"
  },
  {
    "text": "size enter the container name and the",
    "start": "345039",
    "end": "347039"
  },
  {
    "text": "image URI leave everything else as",
    "start": "347039",
    "end": "349680"
  },
  {
    "text": "default and click",
    "start": "349680",
    "end": "352080"
  },
  {
    "text": "create in the ECS cluster that we",
    "start": "352080",
    "end": "354479"
  },
  {
    "text": "created in the previous step go to the",
    "start": "354479",
    "end": "356720"
  },
  {
    "text": "task section and choose run new task",
    "start": "356720",
    "end": "359280"
  },
  {
    "text": "choose the task definition that we",
    "start": "359280",
    "end": "360880"
  },
  {
    "text": "created in the previous",
    "start": "360880",
    "end": "363919"
  },
  {
    "text": "step and choose create verify that the",
    "start": "364319",
    "end": "367720"
  },
  {
    "text": "task is running on the ECS container",
    "start": "367720",
    "end": "369639"
  },
  {
    "text": "instance that we registered go to the",
    "start": "369639",
    "end": "371759"
  },
  {
    "text": "ECS cluster to view CPU utilization",
    "start": "371759",
    "end": "373919"
  },
  {
    "text": "under the infrastructure tab go to The",
    "start": "373919",
    "end": "375360"
  },
  {
    "text": "Container instances click on the",
    "start": "375360",
    "end": "377160"
  },
  {
    "text": "container instance and check under the",
    "start": "377160",
    "end": "378759"
  },
  {
    "text": "resources and networking tab the value",
    "start": "378759",
    "end": "381599"
  },
  {
    "text": "that you want to see is about 50% of the",
    "start": "381599",
    "end": "383599"
  },
  {
    "text": "container instances total resered CPU",
    "start": "383599",
    "end": "385840"
  },
  {
    "text": "capacity is available the actual CPU",
    "start": "385840",
    "end": "388039"
  },
  {
    "text": "usage might be higher or depending on",
    "start": "388039",
    "end": "390199"
  },
  {
    "text": "the task running at the time but the",
    "start": "390199",
    "end": "391759"
  },
  {
    "text": "important thing is that there's about",
    "start": "391759",
    "end": "393400"
  },
  {
    "text": "half of the full CPU reservation free",
    "start": "393400",
    "end": "395479"
  },
  {
    "text": "and ready to take on new tasks now let's",
    "start": "395479",
    "end": "398000"
  },
  {
    "text": "schedule additional",
    "start": "398000",
    "end": "400120"
  },
  {
    "text": "tasks you can set the vcpu allocation at",
    "start": "400120",
    "end": "402919"
  },
  {
    "text": "the container level ECS will combine all",
    "start": "402919",
    "end": "405240"
  },
  {
    "text": "the containers vcpu allocation set in",
    "start": "405240",
    "end": "407360"
  },
  {
    "text": "the task and use that to schedule the",
    "start": "407360",
    "end": "409400"
  },
  {
    "text": "task in this demo we'll create a task",
    "start": "409400",
    "end": "411599"
  },
  {
    "text": "that has two containers",
    "start": "411599",
    "end": "414400"
  },
  {
    "text": "running create a task definition with",
    "start": "414400",
    "end": "416840"
  },
  {
    "text": "container level CPU allocation in the CS",
    "start": "416840",
    "end": "419840"
  },
  {
    "text": "service create a new task",
    "start": "419840",
    "end": "423039"
  },
  {
    "text": "definition do not set the CP parameter",
    "start": "425400",
    "end": "428199"
  },
  {
    "text": "at the task level in the task definition",
    "start": "428199",
    "end": "430720"
  },
  {
    "text": "add two",
    "start": "430720",
    "end": "433360"
  },
  {
    "text": "containers for one container set the CPU",
    "start": "433879",
    "end": "436599"
  },
  {
    "text": "parameter to 0.5 vcpu enter the",
    "start": "436599",
    "end": "439520"
  },
  {
    "text": "container name and the image",
    "start": "439520",
    "end": "443000"
  },
  {
    "text": "URI for the other container set the CPU",
    "start": "444199",
    "end": "447000"
  },
  {
    "text": "parameter to",
    "start": "447000",
    "end": "448080"
  },
  {
    "text": "0.25 vcp",
    "start": "448080",
    "end": "451319"
  },
  {
    "text": "CPU enter the container name and the",
    "start": "451319",
    "end": "453879"
  },
  {
    "text": "image",
    "start": "453879",
    "end": "455520"
  },
  {
    "text": "URI leave everything else as",
    "start": "455520",
    "end": "458319"
  },
  {
    "text": "default click create to save the task",
    "start": "458319",
    "end": "463199"
  },
  {
    "text": "definition in the ECS cluster run a new",
    "start": "468080",
    "end": "471560"
  },
  {
    "text": "task using task definition that we just",
    "start": "471560",
    "end": "473599"
  },
  {
    "text": "created",
    "start": "473599",
    "end": "476599"
  },
  {
    "text": "review the task details to confirm the",
    "start": "487800",
    "end": "489560"
  },
  {
    "text": "CPU allocation for each",
    "start": "489560",
    "end": "492879"
  },
  {
    "text": "container verify that each container is",
    "start": "495280",
    "end": "497639"
  },
  {
    "text": "allocated to CPU units that we defined",
    "start": "497639",
    "end": "499479"
  },
  {
    "text": "at the container level even though there",
    "start": "499479",
    "end": "501039"
  },
  {
    "text": "is no task level CPU definition check",
    "start": "501039",
    "end": "504360"
  },
  {
    "text": "the CPU units in use you will see that",
    "start": "504360",
    "end": "507960"
  },
  {
    "text": "1,792 CPU units are in use or 1.75",
    "start": "507960",
    "end": "513760"
  },
  {
    "text": "vcpu CPU contention occurs when multiple",
    "start": "513760",
    "end": "516800"
  },
  {
    "text": "containers or processes on the host",
    "start": "516800",
    "end": "519039"
  },
  {
    "text": "simultaneously demand more CPU and",
    "start": "519039",
    "end": "521560"
  },
  {
    "text": "compete for more CPU time than is",
    "start": "521560",
    "end": "523919"
  },
  {
    "text": "available when contention happens",
    "start": "523920",
    "end": "526080"
  },
  {
    "text": "containers are throttled to the task",
    "start": "526080",
    "end": "528240"
  },
  {
    "text": "level CPU limit set if one task has one",
    "start": "528240",
    "end": "531600"
  },
  {
    "text": "vcpu and another has two vcpu the 2 vcpu",
    "start": "531600",
    "end": "535200"
  },
  {
    "text": "task will get twice as much CPU time as",
    "start": "535200",
    "end": "537560"
  },
  {
    "text": "the one vcpu task this spling ensures",
    "start": "537560",
    "end": "541000"
  },
  {
    "text": "Fair resource Distribution on set",
    "start": "541000",
    "end": "543120"
  },
  {
    "text": "allocations for each task based on the",
    "start": "543120",
    "end": "545720"
  },
  {
    "text": "set CPU allocations when the task CPU",
    "start": "545720",
    "end": "548839"
  },
  {
    "text": "limit is not set containers can use all",
    "start": "548839",
    "end": "551160"
  },
  {
    "text": "the CPU available on the host even",
    "start": "551160",
    "end": "553519"
  },
  {
    "text": "beyond what is set at the container",
    "start": "553519",
    "end": "555200"
  },
  {
    "text": "level containers may experience reduced",
    "start": "555200",
    "end": "557800"
  },
  {
    "text": "performance or increased latency when",
    "start": "557800",
    "end": "559519"
  },
  {
    "text": "throttled monitoring CPU usage across",
    "start": "559519",
    "end": "561920"
  },
  {
    "text": "containers helps identify contention",
    "start": "561920",
    "end": "563720"
  },
  {
    "text": "issues to address contention consider",
    "start": "563720",
    "end": "565760"
  },
  {
    "text": "adjusting CPU allocations scaling",
    "start": "565760",
    "end": "567800"
  },
  {
    "text": "resources or optimizing appli",
    "start": "567800",
    "end": "570279"
  },
  {
    "text": "code so now you know how to get",
    "start": "570279",
    "end": "572519"
  },
  {
    "text": "information about CPU allocation in",
    "start": "572519",
    "end": "574360"
  },
  {
    "text": "Amazon elastic container",
    "start": "574360",
    "end": "577519"
  },
  {
    "text": "service thanks for watching and happy",
    "start": "577519",
    "end": "579959"
  },
  {
    "start": "578000",
    "end": "593000"
  },
  {
    "text": "cloud computing from us all here at AWS",
    "start": "579959",
    "end": "583230"
  },
  {
    "text": "[Applause]",
    "start": "583230",
    "end": "585280"
  },
  {
    "text": "[Music]",
    "start": "585280",
    "end": "591679"
  }
]