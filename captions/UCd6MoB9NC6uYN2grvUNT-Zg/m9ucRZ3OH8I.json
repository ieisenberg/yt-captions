[
  {
    "text": "[Music] hello web summit thank you for coming",
    "start": "880",
    "end": "7649"
  },
  {
    "text": "today hopefully you're here because you're interested in learning about graph databases if you're not well maybe",
    "start": "7649",
    "end": "13349"
  },
  {
    "text": "you will be by the end of this presentation my name is Gabe hollandaise there's a little bit information about",
    "start": "13349",
    "end": "19050"
  },
  {
    "text": "me before we get started so I'm a Technical Evangelist with AWS all that means is I'm a software developer who",
    "start": "19050",
    "end": "26250"
  },
  {
    "text": "also likes getting up on stage and talking to people so I get to go learn about all kinds of cool things like craft databases and then share that with",
    "start": "26250",
    "end": "33840"
  },
  {
    "text": "you so thank you for letting me have the greatest job ever you're a part of that and I'm really grateful for you being",
    "start": "33840",
    "end": "39360"
  },
  {
    "text": "here today I have a long history of software development I've worked at all kinds of companies written all kinds of",
    "start": "39360",
    "end": "45510"
  },
  {
    "text": "code with a lot of different languages so real polyglot developer if you like what I have to say here today and you",
    "start": "45510",
    "end": "51449"
  },
  {
    "text": "want to hear more from me in the future that's my twitter handle it's just my name all smushed together so you can",
    "start": "51449",
    "end": "57000"
  },
  {
    "text": "follow me there also don't sweat about the slides we're gonna email you if we scanned your badge anyway we're gonna",
    "start": "57000",
    "end": "62520"
  },
  {
    "text": "email you all the slides for all the decks today so take a picture if you want but you definitely don't need to I",
    "start": "62520",
    "end": "67619"
  },
  {
    "text": "know in the back it's a little bit hard to see the bottom edge of the screen but you'll have access to the slides later",
    "start": "67619",
    "end": "73220"
  },
  {
    "text": "so before we get in the graph databases why should you care about this well this",
    "start": "73220",
    "end": "78900"
  },
  {
    "text": "is from DB engines calm this is a chart of database engine trends over time and",
    "start": "78900",
    "end": "85470"
  },
  {
    "text": "I took this screenshot from their website recently you can see at the bottom you might not be able to see the",
    "start": "85470",
    "end": "91110"
  },
  {
    "text": "the timeline in the bottom but on the left-hand side we've got January 2013 and on the right hand side we've got up",
    "start": "91110",
    "end": "96840"
  },
  {
    "text": "until basically now and that green circular dots the big one is a graph",
    "start": "96840",
    "end": "102000"
  },
  {
    "text": "databases so a lot of people were interested in graph databases for good reason there's a lot of hype a lot of",
    "start": "102000",
    "end": "108840"
  },
  {
    "text": "buzz about them I mean there's a lot of you here watching this today if you look around so I hope that today I can help",
    "start": "108840",
    "end": "114450"
  },
  {
    "text": "inform you about when you should care about graph databases what they're good for and what they're not good for and",
    "start": "114450",
    "end": "120450"
  },
  {
    "text": "how you can get started using craft databases on AWS so what is the graph",
    "start": "120450",
    "end": "125610"
  },
  {
    "text": "database it's really just a certain kind of data that's optimized for the efficient",
    "start": "125610",
    "end": "132050"
  },
  {
    "text": "storage and retrieval of highly connected data so there's a lot of",
    "start": "132050",
    "end": "137340"
  },
  {
    "text": "different use cases that fall into what is highly connected data here are some examples so the obvious one is social",
    "start": "137340",
    "end": "144239"
  },
  {
    "text": "networking right we talk about a social network graph and by the way when we talk about graphs why we don't we don't",
    "start": "144239",
    "end": "149910"
  },
  {
    "text": "mean drawings like the graph we saw in the first slide what we mean is a graph or a network of data and nodes so social",
    "start": "149910",
    "end": "157800"
  },
  {
    "text": "networking is an obvious example you have people people know each other it's how you can figure out you know how many",
    "start": "157800",
    "end": "164069"
  },
  {
    "text": "degrees hops away you are from that other person on LinkedIn recommendations",
    "start": "164069",
    "end": "169230"
  },
  {
    "text": "is another popular use case so this is the classic things I bought that other",
    "start": "169230",
    "end": "175200"
  },
  {
    "text": "people also bought that I rated high they rated them high what else did they rage similar to me that I haven't rated",
    "start": "175200",
    "end": "181680"
  },
  {
    "text": "yet that I might be interested in graph databases are really good at that kind of highly connected data set knowledge",
    "start": "181680",
    "end": "187680"
  },
  {
    "text": "graphs so knowledge graphs are ways to encode information about the world into",
    "start": "187680",
    "end": "195030"
  },
  {
    "text": "an ontology and represent that as a connected network of data right so you could think of you know Calum kingdom",
    "start": "195030",
    "end": "201810"
  },
  {
    "text": "phylum class order family genus species is a knowledge graph of you know how we all fit into the the Tree of Life but",
    "start": "201810",
    "end": "208650"
  },
  {
    "text": "you can do other kinds of knowledge graph so I'll give you an example of one a little bit later fraud detection is",
    "start": "208650",
    "end": "214590"
  },
  {
    "text": "another really key use case very popular people have been doing fraud detection graph databases for a long time an",
    "start": "214590",
    "end": "221340"
  },
  {
    "text": "example would be answering questions like I'm a payment gateway processor and",
    "start": "221340",
    "end": "227489"
  },
  {
    "text": "I want to say when a transaction comes in what are other transactions that look like this one right but you know",
    "start": "227489",
    "end": "234030"
  },
  {
    "text": "transactions that have the same IP or for the same shipping to the same address or Amina from the same username",
    "start": "234030",
    "end": "240260"
  },
  {
    "text": "or for the same products or combinations of those things right so finding similarities in a network between pieces",
    "start": "240260",
    "end": "247680"
  },
  {
    "text": "of data and because maybe that's fraudulent or not right like there are reasons why might be life sciences",
    "start": "247680",
    "end": "253920"
  },
  {
    "text": "there's a lot of things you can do where you're studying you know drug interactions with genes and",
    "start": "253920",
    "end": "259590"
  },
  {
    "text": "predictive analysis and those sorts of things and finally Network and IT operations",
    "start": "259590",
    "end": "264840"
  },
  {
    "text": "well the name like it's basically in the in the word right network we talk about computer networks or networks of",
    "start": "264840",
    "end": "270960"
  },
  {
    "text": "software and systems well these networks are a network is a graph and so you can do interesting",
    "start": "270960",
    "end": "276960"
  },
  {
    "text": "analysis things like impact analysis right so how many services depend on",
    "start": "276960",
    "end": "282120"
  },
  {
    "text": "this one service or that other one or which are the services that most of my other things depend on so if they if",
    "start": "282120",
    "end": "287970"
  },
  {
    "text": "those have a problem what are they going to be the cascading consequences so those types of use cases all lend themselves really well to graph database",
    "start": "287970",
    "end": "295080"
  },
  {
    "text": "applications let's look at a few more specific examples so here's a recommendation based on relationships so",
    "start": "295080",
    "end": "301830"
  },
  {
    "text": "in this kind of multi-dimensional setup we have people who have purchased",
    "start": "301830",
    "end": "308310"
  },
  {
    "text": "products and people also follow a particular like a support and then mostly have people who know each other",
    "start": "308310",
    "end": "314610"
  },
  {
    "text": "and so with this kind of network you can not only answer questions like people",
    "start": "314610",
    "end": "319770"
  },
  {
    "text": "who also follow sports purchase this stuff so you can do recommendation that way based not on just like your purchase",
    "start": "319770",
    "end": "325110"
  },
  {
    "text": "history but on other dimensions of commonality and you can also do things like well if the guy on the bottom our",
    "start": "325110",
    "end": "331950"
  },
  {
    "text": "guy on the top note on the bottom the guy on the top knows the gala on the Left I'm sorry on the right then maybe",
    "start": "331950",
    "end": "337110"
  },
  {
    "text": "we can do an introduction there by the way this is kind of like making a little triangle here it's called triadic",
    "start": "337110",
    "end": "343560"
  },
  {
    "text": "closure that's just a little bit of jargon for you and a triangle is the smallest fully connected graph that you",
    "start": "343560",
    "end": "348900"
  },
  {
    "text": "can make and so when you're trying to do these you know recommendation things uh do you know so-and-so that you see on",
    "start": "348900",
    "end": "355349"
  },
  {
    "text": "like LinkedIn and Facebook and stuff the way that works in part is by trying to find these new triangles in the graph",
    "start": "355349",
    "end": "361500"
  },
  {
    "text": "that you can form and using those to introduce people to each other on the",
    "start": "361500",
    "end": "366660"
  },
  {
    "text": "knowledge graph side unfortunately some of this screen doesn't show all the words perfectly but this says Eiffel",
    "start": "366660",
    "end": "372900"
  },
  {
    "text": "Tower and you know there's a user who's interested in in Paris etcetera but you can encode",
    "start": "372900",
    "end": "378200"
  },
  {
    "text": "different types of data together in a knowledge graph to answer questions like",
    "start": "378200",
    "end": "383920"
  },
  {
    "text": "who painted the Mona Lisa or what museums should Alice visit while she's",
    "start": "383920",
    "end": "389450"
  },
  {
    "text": "in Paris or what artists have paintings in the loop these kinds of questions and",
    "start": "389450",
    "end": "394910"
  },
  {
    "text": "many more can be answered if you have an ontology representing the data in the world and in different types of data -",
    "start": "394910",
    "end": "401680"
  },
  {
    "text": "now you can do everything I'm talking",
    "start": "401680",
    "end": "406790"
  },
  {
    "text": "about without a graph database you can do this all with a traditional relational database our DBMS ironically",
    "start": "406790",
    "end": "414140"
  },
  {
    "text": "though we call them relational databases but they're not very good at relations it's just it's the it's the legacy that",
    "start": "414140",
    "end": "421400"
  },
  {
    "text": "we've inherited for oftentimes trying to implement graphs on on relational databases because you know they've been",
    "start": "421400",
    "end": "427880"
  },
  {
    "text": "the workhorse for a lot of database workloads for many years just to give you an example here is a kind of",
    "start": "427880",
    "end": "435230"
  },
  {
    "text": "situation that you might have if you have people in a particular department that have built certain products and on",
    "start": "435230",
    "end": "443000"
  },
  {
    "text": "the left is a traditional relational database er D energy relationship diagram that you might have and on the",
    "start": "443000",
    "end": "449540"
  },
  {
    "text": "right is hugging my model in the graph the difference being in a graph the",
    "start": "449540",
    "end": "454730"
  },
  {
    "text": "relationships our first class citizens write in an our DBMS we have joined",
    "start": "454730",
    "end": "460640"
  },
  {
    "text": "tables and we have foreign keys but there's no semantics like naming in a",
    "start": "460640",
    "end": "466250"
  },
  {
    "text": "join table it's a table just like any other table you as the developer have to know all right this is the table I go to",
    "start": "466250",
    "end": "473330"
  },
  {
    "text": "to join these other tables together then find some metadata about this relationship and a graph database you",
    "start": "473330",
    "end": "480410"
  },
  {
    "text": "have a node like a circle there like employee and you can say from that node what relationships exist broadly and",
    "start": "480410",
    "end": "488180"
  },
  {
    "text": "it'll say in this case ok well the different this employee hasn't have skills this employee knows other",
    "start": "488180",
    "end": "493280"
  },
  {
    "text": "employees for example so I'll leave it up to you about which one looks more",
    "start": "493280",
    "end": "499880"
  },
  {
    "text": "comfortable at first I thought oh well I'm used to this once you know then the relational database method so I'm",
    "start": "499880",
    "end": "507280"
  },
  {
    "text": "I've been working this way a lot why do I need to change well because as you scale this stuff up relational databases",
    "start": "507280",
    "end": "513219"
  },
  {
    "text": "aren't meant for this kind of workload and that's where they fall over and you know if we were to talk about this domain that I've modeled on the right we",
    "start": "513219",
    "end": "520599"
  },
  {
    "text": "might go to the whiteboard and draw it out very similarly to the actual graph representation that as its depicted",
    "start": "520599",
    "end": "526840"
  },
  {
    "text": "there and so graph applications also have this nice benefit of we tend to",
    "start": "526840",
    "end": "532240"
  },
  {
    "text": "think about the world in the relationships between our data in a way that's more naturally expressed by a",
    "start": "532240",
    "end": "538390"
  },
  {
    "text": "graph than by joint Able's and foreign keys so you know I mentioned that",
    "start": "538390",
    "end": "546760"
  },
  {
    "text": "relational databases have some challenges well to get into more specifics there they're not really great",
    "start": "546760",
    "end": "551770"
  },
  {
    "text": "at querying graphs the types of workloads that they're good at are not",
    "start": "551770",
    "end": "557890"
  },
  {
    "text": "you know they can handle one or two or maybe three joins okay but when you get",
    "start": "557890",
    "end": "562900"
  },
  {
    "text": "it typical graph workloads might be doing five six seven eight joins or either you what you would do it in a",
    "start": "562900",
    "end": "568900"
  },
  {
    "text": "relational database that's joins and that's where you're not going to see the same performance characteristics out of",
    "start": "568900",
    "end": "575230"
  },
  {
    "text": "an AR DBMS they're just not built for those kinds of i/o workloads and furthermore graph databases tend to have",
    "start": "575230",
    "end": "582190"
  },
  {
    "text": "more flexible schemas so I'll talk about this a bit more but in general in a relational database give of your tables",
    "start": "582190",
    "end": "588760"
  },
  {
    "text": "we have a fixed schema with most relation or with most graph databases you have the option of saying I have two",
    "start": "588760",
    "end": "595060"
  },
  {
    "text": "different you know employee type nodes one of them has this metadata first-name lastname one has first-name lastname and",
    "start": "595060",
    "end": "601480"
  },
  {
    "text": "interest so you know and it's it's okay if all the the the schema is more like not rigid between each data type so let",
    "start": "601480",
    "end": "609850"
  },
  {
    "text": "me let's work through a quick example of relational versus graph and how you just might implement both so I talked about",
    "start": "609850",
    "end": "615460"
  },
  {
    "text": "recommendations and so if we say I want to do a product recommendation we might",
    "start": "615460",
    "end": "620830"
  },
  {
    "text": "the algorithm for answering and look like this find out what the customer already ordered and then from",
    "start": "620830",
    "end": "626770"
  },
  {
    "text": "that look and see who else ordered those same products and then say okay what",
    "start": "626770",
    "end": "632050"
  },
  {
    "text": "else did those people order now only look at the products that that first customer hasn't already ordered and then",
    "start": "632050",
    "end": "639100"
  },
  {
    "text": "get sort that in order by the most ordered products on top right there's",
    "start": "639100",
    "end": "644290"
  },
  {
    "text": "probably good things to recommend this is one algorithm that might work that's",
    "start": "644290",
    "end": "649660"
  },
  {
    "text": "what it looks like in sequel it's not awesome I think that's fair to say I had",
    "start": "649660",
    "end": "656980"
  },
  {
    "text": "to make the font size seven points for this which was lower than what the menu in PowerPoint even lets you pick from",
    "start": "656980",
    "end": "662770"
  },
  {
    "text": "the font size so to get it all nicely on one slide we had to go pretty small fun this is what it looks like in a graph",
    "start": "662770",
    "end": "670570"
  },
  {
    "text": "traversal language called Kremlin and we'll see more examples of Gremlin later in this talk this is how we might model",
    "start": "670570",
    "end": "676510"
  },
  {
    "text": "the domain on the right hand side and let's not we're not going to walk through exactly what this query does right now because I'll walk you through",
    "start": "676510",
    "end": "682270"
  },
  {
    "text": "a specific example like this later but which one would you rather maintain",
    "start": "682270",
    "end": "687730"
  },
  {
    "text": "right so there you can do it in both technologies one is going to work better",
    "start": "687730",
    "end": "694750"
  },
  {
    "text": "and maybe make your life happier Thompson Reuters is one example customer",
    "start": "694750",
    "end": "702130"
  },
  {
    "text": "who's doing interesting things with graph applications so they have a",
    "start": "702130",
    "end": "708580"
  },
  {
    "text": "product that they're working on that lets them navigate global tax policies and corporate structures and how those",
    "start": "708580",
    "end": "715990"
  },
  {
    "text": "two things relate together so that they can advise companies on what sort of tax",
    "start": "715990",
    "end": "721000"
  },
  {
    "text": "policies they need to be aware of based on the features of those companies themselves so you have highly connected",
    "start": "721000",
    "end": "727720"
  },
  {
    "text": "data in really complex ways because tax is never a simple thing and I've graphed",
    "start": "727720",
    "end": "733240"
  },
  {
    "text": "database is a really natural application for that kind of domain so now I want to",
    "start": "733240",
    "end": "739420"
  },
  {
    "text": "just get you a little bit more familiar with what the nuts and bolts of working with graph databases is like what does",
    "start": "739420",
    "end": "745690"
  },
  {
    "text": "it actually look like instead of just showing me a schema diagram of how data is related you know how do I query it",
    "start": "745690",
    "end": "751930"
  },
  {
    "text": "how do i model this data what does it look like and there are two leading graph models and frameworks that I'm going to talk about today one of them",
    "start": "751930",
    "end": "758860"
  },
  {
    "text": "the graph primer is called it's a property graph model and the other one is called the resource description",
    "start": "758860",
    "end": "765220"
  },
  {
    "text": "framework RDF I'm just curious from the crowd here how many people have experience with working with property",
    "start": "765220",
    "end": "771010"
  },
  {
    "text": "graphs can you put your hand up like good or just a handful and how about",
    "start": "771010",
    "end": "776040"
  },
  {
    "text": "yeah a bit more okay right so property graph is maybe a little bit more",
    "start": "776040",
    "end": "782680"
  },
  {
    "text": "familiar to those who come from a relational database background and tennis to the map a little bit easier to your brain",
    "start": "782680",
    "end": "788800"
  },
  {
    "text": "now there's a open source Apache project called tinker pop and tinker bop that",
    "start": "788800",
    "end": "794380"
  },
  {
    "text": "does a few different things but one of the things that does it offers a imperative graph traversal language",
    "start": "794380",
    "end": "799420"
  },
  {
    "text": "called gremlin and so I'll show you examples of using gremlin later on the RDF side of things so RDF is a w3c",
    "start": "799420",
    "end": "806170"
  },
  {
    "text": "standard world wide web consortium standard and they have a query language for querying data represented in RDF",
    "start": "806170",
    "end": "812589"
  },
  {
    "text": "called sparkle so we'll look into both of those so",
    "start": "812589",
    "end": "819120"
  },
  {
    "text": "RDF to go and do it first don't worry about the one on the left that slide on",
    "start": "819220",
    "end": "824690"
  },
  {
    "text": "the right that's really just to show you that this left hand side is like a zoomed in version of what we see on the right",
    "start": "824690",
    "end": "829700"
  },
  {
    "text": "so in RDF what you do is you model your data with what we call triples and so",
    "start": "829700",
    "end": "835910"
  },
  {
    "text": "it's a subject to predicate in an object and so what what I have here on the left is some work this is actually",
    "start": "835910",
    "end": "840920"
  },
  {
    "text": "representing Netflix so we have this note of the top here that says this this",
    "start": "840920",
    "end": "846740"
  },
  {
    "text": "is an organization it has a particular permanent ID everything in RDF by the way is is like there you are eyes right",
    "start": "846740",
    "end": "852350"
  },
  {
    "text": "all the IDS are are you are eyes and this makes it really easy to link data together from different data sources so",
    "start": "852350",
    "end": "857840"
  },
  {
    "text": "I have this URI per MIDI down org slash blah blah blah some number and that represents a company we can say they",
    "start": "857840",
    "end": "864530"
  },
  {
    "text": "have an organization name of Netflix they have a registered phone number of whatever that is and then they are",
    "start": "864530",
    "end": "870590"
  },
  {
    "text": "incorporated in some other node which has an attribute of an ISO country code of the US so the you are eyes are the",
    "start": "870590",
    "end": "879260"
  },
  {
    "text": "unique identifiers as you can see here so we have this one on the top that represents the company Netflix we have",
    "start": "879260",
    "end": "885650"
  },
  {
    "text": "this one on the right hand side the green one that represents the country USA and the relationship organization is",
    "start": "885650",
    "end": "892700"
  },
  {
    "text": "incorporated in identifies a relationship as well I mentioned there in triples and so every every edge in",
    "start": "892700",
    "end": "899300"
  },
  {
    "text": "the graph if you're working with RDF has a subject a predicate and an object so the subject is the thing that you're",
    "start": "899300",
    "end": "905480"
  },
  {
    "text": "talking about the predicate is like the relationship and the object is the thing it's related to so every every edge in",
    "start": "905480",
    "end": "914390"
  },
  {
    "text": "every line between the dots is represented by this a triple like this and you'll notice that the first one up",
    "start": "914390",
    "end": "922400"
  },
  {
    "text": "there was the object happened to be another URI but in this example we're",
    "start": "922400",
    "end": "928400"
  },
  {
    "text": "we're saying Netflix the organization name is Netflix it can be a literal value also right so you can say a",
    "start": "928400",
    "end": "934400"
  },
  {
    "text": "literal is like a sink in the graph it doesn't go on and point to some other value so they're like the",
    "start": "934400",
    "end": "940540"
  },
  {
    "text": "leaves of the tree structure but what is",
    "start": "940540",
    "end": "946870"
  },
  {
    "text": "a an object for one relation can also be the subject for another relation right so that entity representing the United",
    "start": "946870",
    "end": "955210"
  },
  {
    "text": "States is a subject for where something is incorporated I'm sorry an object for where something's incorporated in and",
    "start": "955210",
    "end": "960490"
  },
  {
    "text": "then there's a subject describing the country code give us so these four triples that we have here",
    "start": "960490",
    "end": "967690"
  },
  {
    "text": "describe the four edges that you see here in this graph now as I mentioned",
    "start": "967690",
    "end": "973540"
  },
  {
    "text": "the real power of already F and you know what it was born out of was this idea of the semantic web right this really cool",
    "start": "973540",
    "end": "979840"
  },
  {
    "text": "idea that if we could standardize how we represent data into certain schemas that",
    "start": "979840",
    "end": "986230"
  },
  {
    "text": "are semantically expressive then we can start linking disparate but related",
    "start": "986230",
    "end": "992590"
  },
  {
    "text": "datasets together in really powerful ways into bats if that kind of",
    "start": "992590",
    "end": "997840"
  },
  {
    "text": "application is interesting to you that's where you're gonna want to use an RDF",
    "start": "997840",
    "end": "1003360"
  },
  {
    "text": "style graph database instead of a property graph because that's what they excel at so an example here right what",
    "start": "1003360",
    "end": "1009420"
  },
  {
    "text": "we've been working with we've got like a wiki data is a data source that takes data from Wikipedia and makes it",
    "start": "1009420",
    "end": "1015930"
  },
  {
    "text": "available in a semantic context so you could take data from that and maybe from the geonames database which is the thing",
    "start": "1015930",
    "end": "1022890"
  },
  {
    "text": "that represents locations in the world as semantically dependent consistently ID'd structures and you can blend them",
    "start": "1022890",
    "end": "1029189"
  },
  {
    "text": "together to answer these queries and model data and across domain fashion so",
    "start": "1029190",
    "end": "1036089"
  },
  {
    "text": "what is querying look like an RDF so it's kind of like pattern matching you",
    "start": "1036090",
    "end": "1041160"
  },
  {
    "text": "describe this pattern and then the engine figures out what will resolve",
    "start": "1041160",
    "end": "1047040"
  },
  {
    "text": "that pattern in the way the us so here we have a question mark for name so we",
    "start": "1047040",
    "end": "1053190"
  },
  {
    "text": "say you're gonna see a lot of things it's a prefix and that's because as I mentioned these are all XML you know you",
    "start": "1053190",
    "end": "1059190"
  },
  {
    "text": "are eyes these namespaces and it would we would blow our brains out if we had to type these namespaces all the time",
    "start": "1059190",
    "end": "1064380"
  },
  {
    "text": "and our queries so at the top you can say here are the names I'm working with for this query I'm",
    "start": "1064380",
    "end": "1070560"
  },
  {
    "text": "gonna give them a little shorthand and reference them with that shorthand for the duration of the query so we say okay",
    "start": "1070560",
    "end": "1076230"
  },
  {
    "text": "here's a vCard prefix and now I want to say select something called name where and then I give a pattern here this is",
    "start": "1076230",
    "end": "1083070"
  },
  {
    "text": "an RDF triple pattern right where this perm ID has a organization name of question mark name so question mark name",
    "start": "1083070",
    "end": "1089280"
  },
  {
    "text": "is that variable and then what we get back is the result of that from the graph so it kind of looks like C cool I",
    "start": "1089280",
    "end": "1095970"
  },
  {
    "text": "mean there's a select statement there's a where it's all it's a little comforting in that way but from a",
    "start": "1095970",
    "end": "1102000"
  },
  {
    "text": "pattern matching perspective it's not exactly the same as sequel you can also say like I mentioned before give me all",
    "start": "1102000",
    "end": "1109290"
  },
  {
    "text": "the relationships about a node right this is like the key differentiator between a graph database and an our DBMS",
    "start": "1109290",
    "end": "1116310"
  },
  {
    "text": "from a data modeling perspective the fact that relationships are first-class data means we can say from a node select",
    "start": "1116310",
    "end": "1123500"
  },
  {
    "text": "property node like this pattern where and then we say that same perm ID again",
    "start": "1123500",
    "end": "1128520"
  },
  {
    "text": "and then throw in the second two parts of the three part of the triple and we'll get back all of the properties and",
    "start": "1128520",
    "end": "1134070"
  },
  {
    "text": "the notes that they talk about right so that's all the relationships for that node furthermore you can pull out other",
    "start": "1134070",
    "end": "1143100"
  },
  {
    "text": "things so if I said all right I know I'm interested in the company called Netflix but I don't know its perm ID you could",
    "start": "1143100",
    "end": "1151860"
  },
  {
    "text": "query it this way you could say all right give me the Oregon the phone number where the organization's the card name was Netflix and where the orgs",
    "start": "1151860",
    "end": "1158370"
  },
  {
    "text": "phone number is phone pattern so these kind of pattern matching are pretty pretty instinctual pretty comfortable to",
    "start": "1158370",
    "end": "1164940"
  },
  {
    "text": "work with once you wrap their head around them you can also hop from one",
    "start": "1164940",
    "end": "1171540"
  },
  {
    "text": "direction to another in this case we can say if you know from this org I want to",
    "start": "1171540",
    "end": "1177330"
  },
  {
    "text": "know the country that it's incorporated in and from that I want to know the ISO country code that's up we would get you",
    "start": "1177330",
    "end": "1182550"
  },
  {
    "text": "know the fact that that literal value us from the hop and you can even do really",
    "start": "1182550",
    "end": "1189780"
  },
  {
    "text": "interesting things where you blend data together from different data sets like I was saying",
    "start": "1189780",
    "end": "1195149"
  },
  {
    "text": "or so without reading this whole thing what this query does is it says find me",
    "start": "1195149",
    "end": "1200639"
  },
  {
    "text": "the companies that have greater than a certain number of employees and from",
    "start": "1200639",
    "end": "1206099"
  },
  {
    "text": "them give me the stock ticker names I'm sorry the the names of the organization in",
    "start": "1206099",
    "end": "1214589"
  },
  {
    "text": "English and in Chinese so and that's blending together data from you know wiki data set and feature said for where",
    "start": "1214589",
    "end": "1221580"
  },
  {
    "text": "companies are incorporated and how many people are in certain companies you can",
    "start": "1221580",
    "end": "1227099"
  },
  {
    "text": "also extract out sub graphs so you know in our original graph we didn't have the relationship between that organization",
    "start": "1227099",
    "end": "1233999"
  },
  {
    "text": "representing Netflix in the fact that it was in the US we had to go through that other node to get there so you can also",
    "start": "1233999",
    "end": "1239549"
  },
  {
    "text": "say construct me a graph where you know I want to know the org mapped into a",
    "start": "1239549",
    "end": "1246719"
  },
  {
    "text": "particular country code where the other pattern matching so that'll create that red line here which didn't exist before",
    "start": "1246719",
    "end": "1252330"
  },
  {
    "text": "but you can you can construct that stuff out of a graph that doesn't exist which might make sense for whatever queries",
    "start": "1252330",
    "end": "1257909"
  },
  {
    "text": "you're working with do also do mutations right so if I wanted to like to do an",
    "start": "1257909",
    "end": "1263789"
  },
  {
    "text": "insert into a thing to add a new relationship on to an entity again we don't need to get too hung up on all the",
    "start": "1263789",
    "end": "1270059"
  },
  {
    "text": "syntax but that's how we do RDF let's",
    "start": "1270059",
    "end": "1275789"
  },
  {
    "text": "talk about property graph now so in a property graph that's a very different model we have nodes or vertices which",
    "start": "1275789",
    "end": "1283349"
  },
  {
    "text": "are like the docks in your graph and we have edges which are the lines between the dots and the dots and the edges of",
    "start": "1283349",
    "end": "1291809"
  },
  {
    "text": "the nodes in the and the and the the nodes in the edges both have types so",
    "start": "1291809",
    "end": "1298529"
  },
  {
    "text": "for instance Paul McCartney's type is he's an artist and the United Kingdom's",
    "start": "1298529",
    "end": "1304289"
  },
  {
    "text": "type is a was the same place in area and the relationship is called from area and",
    "start": "1304289",
    "end": "1312889"
  },
  {
    "text": "nodes and edges can all have properties on them so in this example Paul McCartney has a gender in an age and the",
    "start": "1312889",
    "end": "1320429"
  },
  {
    "text": "United Kingdom has a of country and their relationship the",
    "start": "1320429",
    "end": "1326510"
  },
  {
    "text": "from area has a minute about it as well right so like Paul McCartney from the",
    "start": "1326510",
    "end": "1331670"
  },
  {
    "text": "United Kingdom since 1942 and so you can work with property graph",
    "start": "1331670",
    "end": "1337970"
  },
  {
    "text": "in a number of ways the pachi tinker bump is one of the most common so that's what I'm going to talk about so",
    "start": "1337970",
    "end": "1343120"
  },
  {
    "text": "particular pop and gremlin concern themselves with both the structure of the data how its represented and also",
    "start": "1343120",
    "end": "1348980"
  },
  {
    "text": "how you query it how you traverse the graph so tinker Bob is the open source graph computing framework",
    "start": "1348980",
    "end": "1355070"
  },
  {
    "text": "whereas gremlin is the graph traversal language that you use to answer questions and mutate the graph so",
    "start": "1355070",
    "end": "1363110"
  },
  {
    "text": "gremlin is an imperative language for traversing graphs so open source a lot",
    "start": "1363110",
    "end": "1368900"
  },
  {
    "text": "of different databases and database engines support gremlin querying of the data and the way it works is it's",
    "start": "1368900",
    "end": "1376520"
  },
  {
    "text": "composed of steps so you're you're very literally saying hey database engine",
    "start": "1376520",
    "end": "1383210"
  },
  {
    "text": "here's kind of what I want to do started this node go over this relationship where maybe some value find this other",
    "start": "1383210",
    "end": "1391220"
  },
  {
    "text": "one so you're explicitly saying here's how I want you to travel across the graph to give me the data I care about",
    "start": "1391220",
    "end": "1396340"
  },
  {
    "text": "you chain those steps together until you get your answer and there's a",
    "start": "1396340",
    "end": "1401360"
  },
  {
    "text": "number of different you know SDKs out there for working with gremlin in different languages as well so let's look at an example of this so we'll look",
    "start": "1401360",
    "end": "1408980"
  },
  {
    "text": "at it use the musicbrainz data set which describes the information about songs and composers and places so the graph",
    "start": "1408980",
    "end": "1417830"
  },
  {
    "text": "might look like this where we have artists there from different areas areas have labels and form areas a work could",
    "start": "1417830",
    "end": "1425300"
  },
  {
    "text": "be like a song or a poem or things like that I work as a composer lyricist a writer",
    "start": "1425300",
    "end": "1430790"
  },
  {
    "text": "artist can be members of bands with other artists and so from this maybe we",
    "start": "1430790",
    "end": "1437000"
  },
  {
    "text": "want to say show me the place where the writer of the song called I miss you happens to live and this is what that",
    "start": "1437000",
    "end": "1443930"
  },
  {
    "text": "query looks like in gremlin so we start out with GV so G is like your graph traversal object and so you say from",
    "start": "1443930",
    "end": "1451820"
  },
  {
    "text": "this Tanvi means give me the node give me the vertices that's why it's called V and then from that I wind it",
    "start": "1451820",
    "end": "1457970"
  },
  {
    "text": "only give me the vertices that have a label of work right till that type of work and then I furthermore want to look",
    "start": "1457970",
    "end": "1465110"
  },
  {
    "text": "for the type of this to be has a value of type called song and then where the",
    "start": "1465110",
    "end": "1471380"
  },
  {
    "text": "name is I miss you okay so all of that is just going to zoom in and find this work house type song has",
    "start": "1471380",
    "end": "1479030"
  },
  {
    "text": "name I miss you is going to find a particular node in our graph that meets those characteristics but next we're",
    "start": "1479030",
    "end": "1484580"
  },
  {
    "text": "going to say in writer what that means is where there was a relationship in to",
    "start": "1484580",
    "end": "1492560"
  },
  {
    "text": "this node from somewhere else where that relationship type was called writer so that all these graphs are directed right",
    "start": "1492560",
    "end": "1499190"
  },
  {
    "text": "it goes from one node to another so we're saying give me an incoming relationship that's about a writer okay",
    "start": "1499190",
    "end": "1506000"
  },
  {
    "text": "and then we'll say where the has the values of name",
    "start": "1506000",
    "end": "1511430"
  },
  {
    "text": "oh I've skipped a step I'm sorry well in writer and then we say out from area you",
    "start": "1511430",
    "end": "1516710"
  },
  {
    "text": "can't I didn't put that on the bottom of the slide so we'll say find me the ones where the",
    "start": "1516710",
    "end": "1523220"
  },
  {
    "text": "work is writer okay and then that's gonna give me this particular one to give me the writer it'll find the particular area than that",
    "start": "1523220",
    "end": "1529190"
  },
  {
    "text": "writers front up from and that we can say give me the name attribute on that area and that's how I'll know where the",
    "start": "1529190",
    "end": "1535280"
  },
  {
    "text": "composer for the song I miss you have happens to live you can use a lot of",
    "start": "1535280",
    "end": "1542180"
  },
  {
    "text": "different filters gremlin is a really really expressive language it there's a lot of different steps that you can do",
    "start": "1542180",
    "end": "1548750"
  },
  {
    "text": "if you look at the documentation but some of the basic ones or things like you know I can say has or has not to",
    "start": "1548750",
    "end": "1554240"
  },
  {
    "text": "which is like you know you're we're we're equals or we're is not equal we",
    "start": "1554240",
    "end": "1559310"
  },
  {
    "text": "can learn for specific types by saying if it has if the graph or the the note of the verge has this particular label",
    "start": "1559310",
    "end": "1565270"
  },
  {
    "text": "we can deduplicate or we can limit our search results we can also flip a coin",
    "start": "1565270",
    "end": "1570410"
  },
  {
    "text": "so that's a way of basically doing a randomized walk across your graph because you might not always want to go",
    "start": "1570410",
    "end": "1575810"
  },
  {
    "text": "in exactly the same fashion for depending on what your wearing and you can use boolean operations to combine things together",
    "start": "1575810",
    "end": "1581250"
  },
  {
    "text": "and even new projections to write so the top one is just saying if I know the",
    "start": "1581250",
    "end": "1587650"
  },
  {
    "text": "particular ID of a vertex of a node I can say go to that node and then just",
    "start": "1587650",
    "end": "1592960"
  },
  {
    "text": "give me its value now that means give me all the values that that node has or I can say one give me one property from",
    "start": "1592960",
    "end": "1600730"
  },
  {
    "text": "that map instead of giving me all of them or I can say find me all the artists or",
    "start": "1600730",
    "end": "1606280"
  },
  {
    "text": "all the nodes that have a label artists where they have the name of the Beatles follow the in relationship for members",
    "start": "1606280",
    "end": "1612010"
  },
  {
    "text": "of band and give me back the name of their gender so we can see you know George Harrison John Lennon Paul McCartney I don't know why Ringo Starr",
    "start": "1612010",
    "end": "1617260"
  },
  {
    "text": "isn't there don't worry Ringo I haven't forgotten about you and tell me the names of the",
    "start": "1617260",
    "end": "1622270"
  },
  {
    "text": "artists used to work together in a band so this is a really classic graph example right you might do something like that where you're doing self joins",
    "start": "1622270",
    "end": "1628420"
  },
  {
    "text": "as well so find me the artists as a so this is kind of putting a referential placeholder that we'll use later on in",
    "start": "1628420",
    "end": "1634960"
  },
  {
    "text": "the query so we say finding the labels finding the nodes with a label artist I'll call them a find out what nodes",
    "start": "1634960",
    "end": "1643210"
  },
  {
    "text": "were a member of that band so go out from those nodes and then back in so you're traversing that relationship out",
    "start": "1643210",
    "end": "1648310"
  },
  {
    "text": "and in we'll call those B and then we'll give me a and B by name where the age",
    "start": "1648310",
    "end": "1653650"
  },
  {
    "text": "does not equal B so that we don't see the link back to ourselves so you can that's a really classical way that you",
    "start": "1653650",
    "end": "1659560"
  },
  {
    "text": "would get a kind of collaborative Network result out of a graph",
    "start": "1659560",
    "end": "1667680"
  },
  {
    "text": "give me mutations to I'm not gonna walk you through all these you'll have access to the slides later but it's not just",
    "start": "1667680",
    "end": "1673630"
  },
  {
    "text": "about querying we can also insert updates we can add edges between nodes that already exist all those types of things you can drop nodes and edges",
    "start": "1673630",
    "end": "1680860"
  },
  {
    "text": "everything you would expect the question is which to use for your application to",
    "start": "1680860",
    "end": "1686950"
  },
  {
    "text": "use property graph or deer's already up this is my helpful guide you want to use",
    "start": "1686950",
    "end": "1693070"
  },
  {
    "text": "property graph for gremlin if attributes on relationships are valuable to you",
    "start": "1693070",
    "end": "1698350"
  },
  {
    "text": "because you can only do that in an there with worth property graph you can",
    "start": "1698350",
    "end": "1703460"
  },
  {
    "text": "do it sort of with RDF but it's you have to jump through a bit more hoops in order to express metadata about",
    "start": "1703460",
    "end": "1710360"
  },
  {
    "text": "relationships so property grab put somewhere natural fit there if you want different types of properties on the",
    "start": "1710360",
    "end": "1716720"
  },
  {
    "text": "same node types like a more flexible schema property graph this for you or if",
    "start": "1716720",
    "end": "1724429"
  },
  {
    "text": "you if you look at the RDF answers and none of those apply to you you might default some property craft so RDF when",
    "start": "1724429",
    "end": "1731059"
  },
  {
    "text": "you use that definitely if you're building a knowledge graph RDF is the natural weight framework and tooling to",
    "start": "1731059",
    "end": "1738410"
  },
  {
    "text": "use for that if you want to do inference well on that knowledge graph to answer questions again RDF and SPARQL or if",
    "start": "1738410",
    "end": "1746510"
  },
  {
    "text": "you're linking data together from the Semantic Web like I talked about before so great you're excited you're ready you",
    "start": "1746510",
    "end": "1754010"
  },
  {
    "text": "want to run a graph database how are you going to do it well there's a lot of",
    "start": "1754010",
    "end": "1760700"
  },
  {
    "text": "graph database options out there a number of them have some problems nothing is perfect right but a lot of",
    "start": "1760700",
    "end": "1766010"
  },
  {
    "text": "them out there have some issues some can be very difficult to scale so they might work really well for just as you're",
    "start": "1766010",
    "end": "1772760"
  },
  {
    "text": "getting started small data set solutions but when you put a lot of data in you might start having trouble scaling them",
    "start": "1772760",
    "end": "1778340"
  },
  {
    "text": "up or it could be difficult to set them up in a highly available fashion or",
    "start": "1778340",
    "end": "1784760"
  },
  {
    "text": "maybe it's not difficult or necessarily impossible to do that but maybe you can't use the open source version of a",
    "start": "1784760",
    "end": "1790820"
  },
  {
    "text": "particular tool for that you need to use the Enterprise Edition now if you want high availability and you know and",
    "start": "1790820",
    "end": "1795860"
  },
  {
    "text": "uptime guarantees that might be really expensive or you finally graph database",
    "start": "1795860",
    "end": "1801320"
  },
  {
    "text": "you like but there's limited support for these open standards I've talked about well there's another option available to",
    "start": "1801320",
    "end": "1806510"
  },
  {
    "text": "you we have a product AWS called Amazon Neptune and this is a fully managed graph database that was purpose-built",
    "start": "1806510",
    "end": "1813080"
  },
  {
    "text": "for this at AWS so Neptune is open we support both Patchi tinker pump and w3c",
    "start": "1813080",
    "end": "1820280"
  },
  {
    "text": "RDF graph models so some database engines are going to make you pick one or the other you can use you can run",
    "start": "1820280",
    "end": "1825890"
  },
  {
    "text": "either kind of workload on Neptune it's really fast so depending on the",
    "start": "1825890",
    "end": "1831190"
  },
  {
    "text": "types of transactions you're doing with Neptune if you're doing oil T P or more transactional workload you know where",
    "start": "1831190",
    "end": "1838090"
  },
  {
    "text": "you're doing parameterize graphed reversals less than three hops with",
    "start": "1838090",
    "end": "1844200"
  },
  {
    "text": "parameterize graphed patterns so more and more targeted queries the target",
    "start": "1844200",
    "end": "1849820"
  },
  {
    "text": "performance for Neptune is throughput up to 10,000 reads per server per second",
    "start": "1849820",
    "end": "1854950"
  },
  {
    "text": "with latency targets of less than 50 milliseconds so it's pretty pretty impressive targeting there of course for",
    "start": "1854950",
    "end": "1861070"
  },
  {
    "text": "OLAP or analytical type of workloads in queries things are gonna take a little bit longer these are meant to be traverses of three",
    "start": "1861070",
    "end": "1868330"
  },
  {
    "text": "or more hops on unbounded graph patterns with complex filters now depending on",
    "start": "1868330",
    "end": "1875260"
  },
  {
    "text": "your graph and your data set these queries could take a while to run but you know typically we see on the order",
    "start": "1875260",
    "end": "1880990"
  },
  {
    "text": "of so supporting targeting anyway support for hundreds of queries per second with lame G targets that vary",
    "start": "1880990",
    "end": "1887350"
  },
  {
    "text": "from hundreds of milliseconds up to minutes depending on the nature of your query in your data set well show me an",
    "start": "1887350",
    "end": "1893320"
  },
  {
    "text": "example of one that's not you know a simple hello world query later on and we",
    "start": "1893320",
    "end": "1898990"
  },
  {
    "text": "can see it will take a few seconds but its operating on quite a big graph Neptune as I mentioned is fully managed",
    "start": "1898990",
    "end": "1905680"
  },
  {
    "text": "I think this is really key you know AWS our goal is to handle all of the",
    "start": "1905680",
    "end": "1911440"
  },
  {
    "text": "undifferentiated heavy lifting when it comes to building apps so that you can focus on what matters for your problem",
    "start": "1911440",
    "end": "1917820"
  },
  {
    "text": "unless you are in the business of hosting graph databases you should",
    "start": "1917820",
    "end": "1923020"
  },
  {
    "text": "probably not be hosting your own graph database let another company like AWS handle that we have a lot of operational",
    "start": "1923020",
    "end": "1930790"
  },
  {
    "text": "experience in the industry we know what we're doing we know how to offer these things a fully managed fashion high",
    "start": "1930790",
    "end": "1936640"
  },
  {
    "text": "availability scalability and security baked right in so all those best practices you get just",
    "start": "1936640",
    "end": "1942940"
  },
  {
    "text": "for using a fully managed service Neptune supports 15 grade replicas I didn't mention that before so you can",
    "start": "1942940",
    "end": "1949570"
  },
  {
    "text": "achieve some pretty darn high query volumes through net and supports encryption at rest and in",
    "start": "1949570",
    "end": "1955960"
  },
  {
    "text": "transit as well so you can keep your stuff secure and even does backups with point and time recovery so everything",
    "start": "1955960",
    "end": "1962410"
  },
  {
    "text": "you would come to expect from a fully managed service you'll find it in Neptune the number of customers using",
    "start": "1962410",
    "end": "1968890"
  },
  {
    "text": "Amazon Neptune today Siemens they're using knowledge graphs for industrial",
    "start": "1968890",
    "end": "1974530"
  },
  {
    "text": "designs integrating with their support costs so they can figure out how to",
    "start": "1974530",
    "end": "1979780"
  },
  {
    "text": "price support contracts better AstraZeneca does drug discovery using Neptune and graph databases already",
    "start": "1979780",
    "end": "1986920"
  },
  {
    "text": "talked about Thomson Reuters Amazon Alexa uses Neptune right so you can ask Alexa for like facts about the world and",
    "start": "1986920",
    "end": "1994180"
  },
  {
    "text": "those could be answered through a knowledge graph application and so Neptune plays a role in that empowering",
    "start": "1994180",
    "end": "1999580"
  },
  {
    "text": "alexa i was recently in sydney at a AWS community day and i met with this",
    "start": "1999580",
    "end": "2005910"
  },
  {
    "text": "company called visi linux they do knowledge graph work for customers in",
    "start": "2005910",
    "end": "2011910"
  },
  {
    "text": "transportation tourism and economic development industries they have a city builder solution that powers things like",
    "start": "2011910",
    "end": "2018030"
  },
  {
    "text": "neighborhoods NYC this is really neat cuz I used to live in New York and there's a service in New York where you can call a phone number and kind of",
    "start": "2018030",
    "end": "2024270"
  },
  {
    "text": "complain about problems or things that need service there's graffiti here this fire hydrant is broken anything like that and neighborhoods to",
    "start": "2024270",
    "end": "2031860"
  },
  {
    "text": "NYC provides like a dashboard of insight on top of all of that data and so that was really neat too later on in life",
    "start": "2031860",
    "end": "2038220"
  },
  {
    "text": "meet a company that happened to be powering back style technology and you know happen to be using a graph for that",
    "start": "2038220",
    "end": "2044430"
  },
  {
    "text": "as well I was very excited about that so it's demo time before we wrap up let",
    "start": "2044430",
    "end": "2050929"
  },
  {
    "text": "me give you a demo here's what we're gonna do we're gonna do product recommendations but I wanted to get real",
    "start": "2050929",
    "end": "2056690"
  },
  {
    "text": "I didn't just want a little simple hello world so I thought okay there is something called the Amazon open data",
    "start": "2056690",
    "end": "2064040"
  },
  {
    "text": "registry this is a website that we have where we host large data sets with data",
    "start": "2064040",
    "end": "2069648"
  },
  {
    "text": "about Amazon and about other public data sets that are out there so I thought one of those data sets is Amazon reviews so",
    "start": "2069649",
    "end": "2076970"
  },
  {
    "text": "why don't I load some of that into Neptune and try and do that classic you craft recommendation query with real",
    "start": "2076970",
    "end": "2083540"
  },
  {
    "text": "data at Amazon scale so here's what it looks like the review data has basically",
    "start": "2083540",
    "end": "2091250"
  },
  {
    "text": "just a bunch of rows and those roads say this customer ID reviews reviewed this Product ID this is the Product ID had",
    "start": "2091250",
    "end": "2097550"
  },
  {
    "text": "this name they gave it this many stars so from that kind of data I extract out a graph that looks like this",
    "start": "2097550",
    "end": "2103610"
  },
  {
    "text": "we have customers and they give reviews to products you can get scoped review",
    "start": "2103610",
    "end": "2111650"
  },
  {
    "text": "data set from this Amazon review data set I play video games I'm a nerd so I thought I'm going to load the video",
    "start": "2111650",
    "end": "2117560"
  },
  {
    "text": "games recommendations or sorry review data sets specifically and just to give you an example here's two people and we",
    "start": "2117560",
    "end": "2125060"
  },
  {
    "text": "can't look at the whole network it's too big so particular example and I added this to the network because I don't",
    "start": "2125060",
    "end": "2130280"
  },
  {
    "text": "think my reviews and my friends reviews are in there we can say okay Gabe gave dota 2 5 stars",
    "start": "2130280",
    "end": "2135950"
  },
  {
    "text": "and daikatana 1 star cam gave dota 2 5 stars and World of Warcraft 3 stars and",
    "start": "2135950",
    "end": "2141680"
  },
  {
    "text": "counter-strike go five stars and daikatana five stars so given this network what we want to do",
    "start": "2141680",
    "end": "2147050"
  },
  {
    "text": "is basically say start with Gabe find all the things that he gave five stars",
    "start": "2147050",
    "end": "2153230"
  },
  {
    "text": "to okay that's just this fiying everybody else who gave five stars to this okay that's this guy what else did",
    "start": "2153230",
    "end": "2160040"
  },
  {
    "text": "he give five stars to that I haven't already reviewed okay five stars to that but I already reviewed it so no he gave",
    "start": "2160040",
    "end": "2165650"
  },
  {
    "text": "three stars to this ignore okay five stars to this so let's recommend that and so I'll do two queries for you in a",
    "start": "2165650",
    "end": "2172520"
  },
  {
    "text": "minute through Neptune one that only queries this little isolated sub car just so I can test out the sanity of my",
    "start": "2172520",
    "end": "2179340"
  },
  {
    "text": "query to make sure it works and then we'll run that same query on one customer that has a lot of reviews and will see a big graph traversal and a lot",
    "start": "2179340",
    "end": "2187050"
  },
  {
    "text": "of recommendations come back in only a few seconds all right so let's go to the",
    "start": "2187050",
    "end": "2192960"
  },
  {
    "text": "demo",
    "start": "2192960",
    "end": "2195109"
  },
  {
    "text": "great okay so hopefully this is still active let's",
    "start": "2199440",
    "end": "2204700"
  },
  {
    "text": "find out I've got a cloud9 IDE here this is our development environment that's in",
    "start": "2204700",
    "end": "2210310"
  },
  {
    "text": "the town on AWS what I like about it is I can do things like talk to my my",
    "start": "2210310",
    "end": "2215590"
  },
  {
    "text": "Neptune cluster is in a virtual private cloud of VPC that's not publicly",
    "start": "2215590",
    "end": "2220780"
  },
  {
    "text": "accessible so I can so it's super secure that way and I can only get at it from machines that sit inside that same VPC",
    "start": "2220780",
    "end": "2226960"
  },
  {
    "text": "and so this this instance that this cloud 9 is right instance is running off of is inside that BBC most are running",
    "start": "2226960",
    "end": "2233859"
  },
  {
    "text": "jupiter notebook tier i like Python and i think it's a good way to show code in demos and so from that i'm gonna pop",
    "start": "2233859",
    "end": "2240760"
  },
  {
    "text": "open my recommendation example and we'll see if this works so here i'm just",
    "start": "2240760",
    "end": "2249340"
  },
  {
    "text": "showing that i'm loading some dependencies to talk to gremlin touch to use gremlin from Python and here I'm",
    "start": "2249340",
    "end": "2256960"
  },
  {
    "text": "going to connect to this Neptune cluster",
    "start": "2256960",
    "end": "2262119"
  },
  {
    "text": "through a web socket interface and get that in a variable called G now I'm",
    "start": "2262119",
    "end": "2267369"
  },
  {
    "text": "gonna declare some variables or some sub functions and now we're gonna find Gabe",
    "start": "2267369",
    "end": "2274470"
  },
  {
    "text": "and I'm gonna ask for Gabe's recommendations so I got back csgo so how did that work well there's this is",
    "start": "2274470",
    "end": "2281380"
  },
  {
    "text": "the query in gremlin so from a particular customer ID find that node call it target then do a little side",
    "start": "2281380",
    "end": "2288790"
  },
  {
    "text": "quest go from that user and go out find all of that users reviews that he did at",
    "start": "2288790",
    "end": "2294580"
  },
  {
    "text": "all and just call that product products that target already reviewed ok that's",
    "start": "2294580",
    "end": "2299619"
  },
  {
    "text": "the end of the side effect so now we're still back at our original target node for Gabe so now walk out and find all of his reviews with a rating of 5 and go to",
    "start": "2299619",
    "end": "2306490"
  },
  {
    "text": "those go into those vectors are those rataxes then follow the the vectors are",
    "start": "2306490",
    "end": "2314080"
  },
  {
    "text": "the vertices that reviewed those same products with the rating of 5 that words",
    "start": "2314080",
    "end": "2319089"
  },
  {
    "text": "that we're not already equal to target and then for most people find everything they ready to 5 where that doesn't",
    "start": "2319089",
    "end": "2326380"
  },
  {
    "text": "include the things I already reviewed deduplicate any neighbors because more than one person might have raided the same thing so you need to",
    "start": "2326380",
    "end": "2332780"
  },
  {
    "text": "find my my resultset give me back the product titles and reapply that as a list so that I can see the result in",
    "start": "2332780",
    "end": "2338720"
  },
  {
    "text": "Python so ok what does this dataset look like just the video game reviews so",
    "start": "2338720",
    "end": "2344570"
  },
  {
    "text": "there's 65 thousand products in this graph there are 1 million just over 1",
    "start": "2344570",
    "end": "2352610"
  },
  {
    "text": "million customers in this graph and there are 1.78 million reviews in this",
    "start": "2352610",
    "end": "2360710"
  },
  {
    "text": "graph so it's it's not hello world it's not the biggest you could get I mean Neptune can handle a lot bigger than a",
    "start": "2360710",
    "end": "2366410"
  },
  {
    "text": "million but it's enough to show you something non-trivial so I found beforehand I found a user that had done",
    "start": "2366410",
    "end": "2371690"
  },
  {
    "text": "a lot of reviews because I figured that's going to be a combinatorially expensive query because we're gonna have to go out to a number of products find",
    "start": "2371690",
    "end": "2379040"
  },
  {
    "text": "all the people who reviewed those everything else those were viewed and that's gonna be a really large data set so we're gonna go out really big and",
    "start": "2379040",
    "end": "2384440"
  },
  {
    "text": "then go back in this will take a few seconds to run because this is more of an analytical style work load on a",
    "start": "2384440",
    "end": "2390020"
  },
  {
    "text": "really big graph but it only takes about a 5 7 seconds to return and you can see",
    "start": "2390020",
    "end": "2396560"
  },
  {
    "text": "we get back a lot of a lot of data here so that's probably another indication that a lot of people are probably giving",
    "start": "2396560",
    "end": "2402470"
  },
  {
    "text": "things 5 stars you know so you're gonna get back a lot of results here but the point is that worked it was pretty fast",
    "start": "2402470",
    "end": "2408050"
  },
  {
    "text": "on a pretty big data set and this is the lowest power of Neptune instance we have so it could it would be even faster of a",
    "start": "2408050",
    "end": "2415430"
  },
  {
    "text": "used to a more powerful box",
    "start": "2415430",
    "end": "2418630"
  },
  {
    "text": "so graph database all other things right like why not well you shouldn't right",
    "start": "2421780",
    "end": "2429330"
  },
  {
    "text": "like it should be a tool in your toolbox but just because you can represent everything in a graph doesn't mean you",
    "start": "2429330",
    "end": "2436710"
  },
  {
    "text": "should use graph databases when you want to find out how your entities are",
    "start": "2436710",
    "end": "2443940"
  },
  {
    "text": "related to each other or when you want to find relationships similarities between your entities or if you want to",
    "start": "2443940",
    "end": "2451470"
  },
  {
    "text": "discover centrality or influence scores between your entities like the impact analysis example I told you about before",
    "start": "2451470",
    "end": "2458000"
  },
  {
    "text": "probably not a good idea to use graph if you have things like I want to search",
    "start": "2458000",
    "end": "2463410"
  },
  {
    "text": "for all the entities with a specific attribute right and a graph database it's going to have to traverse and look",
    "start": "2463410",
    "end": "2468900"
  },
  {
    "text": "at all of the nodes for that in a really in a relational database you know you've",
    "start": "2468900",
    "end": "2474120"
  },
  {
    "text": "got indices that will work in a more efficient fashion for that what do you want to aggregate data from your",
    "start": "2474120",
    "end": "2479640"
  },
  {
    "text": "entities you know give me the average order amount for all my sales by month",
    "start": "2479640",
    "end": "2486150"
  },
  {
    "text": "for 2018 that kind of query is not good for graph and it's great for our",
    "start": "2486150",
    "end": "2491700"
  },
  {
    "text": "traditional already be a message so use the right tool for the right job okay we're at the end if you're excited by",
    "start": "2491700",
    "end": "2498990"
  },
  {
    "text": "this and you want to learn more I have a few references I want to point you to you can learn more about Neptune here so",
    "start": "2498990",
    "end": "2506190"
  },
  {
    "text": "there's some Neptune samples on github we have a nice recommendation example on our own github site there's a great book",
    "start": "2506190",
    "end": "2513150"
  },
  {
    "text": "called practical gremlin by Kelvin our Lauren's funny thing about this I was using this book to learn about gremlin",
    "start": "2513150",
    "end": "2519480"
  },
  {
    "text": "and then like two weeks later I was browsing our AWS orange structure and",
    "start": "2519480",
    "end": "2524820"
  },
  {
    "text": "looking at who's doing stuff with graph databases in AWS and Calvin Lorenz works",
    "start": "2524820",
    "end": "2530490"
  },
  {
    "text": "at AWS so it was a really nice that confluence that again that I found an amazing resource that's for free online",
    "start": "2530490",
    "end": "2536820"
  },
  {
    "text": "and lo and behold the guy who wrote it also works AWS doing graph stuff so it's",
    "start": "2536820",
    "end": "2543480"
  },
  {
    "text": "a good resource and you know it's by somebody who really knows to talks other conference talks I liked",
    "start": "2543480",
    "end": "2549480"
  },
  {
    "text": "that I learned from that I think are worth watching one is called graph databases will change your freaking life it's fun it's well presented I give you",
    "start": "2549480",
    "end": "2556770"
  },
  {
    "text": "more of an overview like what I've done today but from a different perspective another one is a practical guide to",
    "start": "2556770",
    "end": "2561870"
  },
  {
    "text": "graph databases those are both worth the watch finally the demo code for this talk I've already put up on github you",
    "start": "2561870",
    "end": "2567660"
  },
  {
    "text": "can get it there if we haven't scan your badge please make sure we do not only so",
    "start": "2567660",
    "end": "2573780"
  },
  {
    "text": "you can get two hundred dollars of AWS credits and all the slides but also because we're gonna ask you later what",
    "start": "2573780",
    "end": "2579900"
  },
  {
    "text": "you thought of all of the sessions that you attended today and over the next two days as well we care so much about that",
    "start": "2579900",
    "end": "2585270"
  },
  {
    "text": "feedback in our roadmap over 90% of our product roadmaps on our services is",
    "start": "2585270",
    "end": "2591180"
  },
  {
    "text": "derived directly from customer feedback and similarly you know in the presentations that we work on we care a",
    "start": "2591180",
    "end": "2596910"
  },
  {
    "text": "lot about what you thought about this and other presentations today so please let us know what you thought it's really valuable to help us continue to give you",
    "start": "2596910",
    "end": "2602910"
  },
  {
    "text": "great content thank you for your attention it's a real honor to get up here and share with you today have a",
    "start": "2602910",
    "end": "2608220"
  },
  {
    "text": "great day and I hope to see you around over the next two days [Applause]",
    "start": "2608220",
    "end": "2619609"
  }
]