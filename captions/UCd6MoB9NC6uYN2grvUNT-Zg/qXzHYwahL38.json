[
  {
    "text": "are you wondering how you can send",
    "start": "1620",
    "end": "3720"
  },
  {
    "text": "Enterprise data from increasingly",
    "start": "3720",
    "end": "5819"
  },
  {
    "text": "diverse new services in near real time",
    "start": "5819",
    "end": "8340"
  },
  {
    "text": "to Amazon open search and perform",
    "start": "8340",
    "end": "11040"
  },
  {
    "text": "searching",
    "start": "11040",
    "end": "12300"
  },
  {
    "text": "today I will demonstrate how can you set",
    "start": "12300",
    "end": "14759"
  },
  {
    "text": "up near real-time GitHub event log",
    "start": "14759",
    "end": "16859"
  },
  {
    "text": "streaming to Amazon open search with",
    "start": "16859",
    "end": "19859"
  },
  {
    "text": "Kinesis data fire hose and Amazon API",
    "start": "19859",
    "end": "23279"
  },
  {
    "text": "Gateway",
    "start": "23279",
    "end": "24359"
  },
  {
    "text": "hi everyone my name is rupesh tiwari I",
    "start": "24359",
    "end": "27359"
  },
  {
    "text": "am an analytics specialist Solutions",
    "start": "27359",
    "end": "29640"
  },
  {
    "text": "architect in AWS with a focus on Amazon",
    "start": "29640",
    "end": "33000"
  },
  {
    "text": "open search service",
    "start": "33000",
    "end": "35579"
  },
  {
    "text": "before jumping into the demo let's see",
    "start": "35579",
    "end": "38219"
  },
  {
    "text": "why you want to build this solution",
    "start": "38219",
    "end": "40739"
  },
  {
    "text": "if we look at the amount of data created",
    "start": "40739",
    "end": "43620"
  },
  {
    "text": "back in 2022 and much of this data is",
    "start": "43620",
    "end": "47100"
  },
  {
    "text": "log data we are talking 96 zettabytes",
    "start": "47100",
    "end": "51420"
  },
  {
    "text": "it's just a huge enormous amount of",
    "start": "51420",
    "end": "54420"
  },
  {
    "text": "information",
    "start": "54420",
    "end": "55980"
  },
  {
    "text": "our customers share their challenges to",
    "start": "55980",
    "end": "59160"
  },
  {
    "text": "us",
    "start": "59160",
    "end": "59879"
  },
  {
    "text": "we hear from companies all the time that",
    "start": "59879",
    "end": "62640"
  },
  {
    "text": "they are looking to extract more value",
    "start": "62640",
    "end": "64440"
  },
  {
    "text": "from that 96 data byte of data but they",
    "start": "64440",
    "end": "68460"
  },
  {
    "text": "struggle to capture store and analyze",
    "start": "68460",
    "end": "70799"
  },
  {
    "text": "all the generated data especially when",
    "start": "70799",
    "end": "73320"
  },
  {
    "text": "the data is coming from increasingly",
    "start": "73320",
    "end": "75299"
  },
  {
    "text": "diverse new sources such as websites CRM",
    "start": "75299",
    "end": "78299"
  },
  {
    "text": "tools chat Bots agile platforms GitHub",
    "start": "78299",
    "end": "80820"
  },
  {
    "text": "or other source control systems",
    "start": "80820",
    "end": "83520"
  },
  {
    "text": "constantly pulling real-time data at a",
    "start": "83520",
    "end": "86159"
  },
  {
    "text": "scale can exceed the system API called",
    "start": "86159",
    "end": "88740"
  },
  {
    "text": "limit restrictions and that is",
    "start": "88740",
    "end": "91320"
  },
  {
    "text": "restricting your further API calls there",
    "start": "91320",
    "end": "93540"
  },
  {
    "text": "is a need to move from pooling based to",
    "start": "93540",
    "end": "95880"
  },
  {
    "text": "push-based architecture",
    "start": "95880",
    "end": "97799"
  },
  {
    "text": "customer wants to build faster",
    "start": "97799",
    "end": "99659"
  },
  {
    "text": "responding systems such as workflow",
    "start": "99659",
    "end": "101939"
  },
  {
    "text": "automations",
    "start": "101939",
    "end": "103140"
  },
  {
    "text": "example whenever a new customer",
    "start": "103140",
    "end": "105479"
  },
  {
    "text": "registered you want to add them in the",
    "start": "105479",
    "end": "107820"
  },
  {
    "text": "subscribed user list and update the",
    "start": "107820",
    "end": "110280"
  },
  {
    "text": "dashboard in near real time",
    "start": "110280",
    "end": "112740"
  },
  {
    "text": "to build systems that fetches business",
    "start": "112740",
    "end": "114840"
  },
  {
    "text": "data from each diverse sources in near",
    "start": "114840",
    "end": "117119"
  },
  {
    "text": "real time at a scale can become costly",
    "start": "117119",
    "end": "119220"
  },
  {
    "text": "and finally the desire is to get the",
    "start": "119220",
    "end": "121860"
  },
  {
    "text": "right data to the right people to make",
    "start": "121860",
    "end": "124140"
  },
  {
    "text": "better more informed decisions and",
    "start": "124140",
    "end": "126420"
  },
  {
    "text": "automations",
    "start": "126420",
    "end": "127560"
  },
  {
    "text": "solving these problems requires that",
    "start": "127560",
    "end": "129720"
  },
  {
    "text": "your systems are up and running which is",
    "start": "129720",
    "end": "132720"
  },
  {
    "text": "challenging as Landscapes sprawl so here",
    "start": "132720",
    "end": "136560"
  },
  {
    "text": "is fully managed Amazon open search",
    "start": "136560",
    "end": "138599"
  },
  {
    "text": "service makes it easy for you to perform",
    "start": "138599",
    "end": "141300"
  },
  {
    "text": "interactive log analytics real-time",
    "start": "141300",
    "end": "143760"
  },
  {
    "text": "application monitoring website search",
    "start": "143760",
    "end": "145739"
  },
  {
    "text": "and much more you only focus on analysis",
    "start": "145739",
    "end": "148860"
  },
  {
    "text": "instead of spending time managing your",
    "start": "148860",
    "end": "151020"
  },
  {
    "text": "deployment it gives authentication",
    "start": "151020",
    "end": "153300"
  },
  {
    "text": "authorization encryption audit and",
    "start": "153300",
    "end": "155700"
  },
  {
    "text": "Regulatory Compliance deliver log",
    "start": "155700",
    "end": "157980"
  },
  {
    "text": "address analytics Solutions on data at",
    "start": "157980",
    "end": "160500"
  },
  {
    "text": "petabyte scale and most importantly",
    "start": "160500",
    "end": "162840"
  },
  {
    "text": "manage growing analytics cost all",
    "start": "162840",
    "end": "165720"
  },
  {
    "text": "features are included without upsell",
    "start": "165720",
    "end": "168420"
  },
  {
    "text": "with that let's jump into our",
    "start": "168420",
    "end": "170220"
  },
  {
    "text": "architecture for today's demo",
    "start": "170220",
    "end": "172379"
  },
  {
    "text": "where we will use Amazon API Gateway AWS",
    "start": "172379",
    "end": "175800"
  },
  {
    "text": "Lambda Amazon kindnesses Amazon open",
    "start": "175800",
    "end": "177780"
  },
  {
    "text": "search and Amazon S3 bucket in this demo",
    "start": "177780",
    "end": "181260"
  },
  {
    "text": "I will build a solution to stream GitHub",
    "start": "181260",
    "end": "183780"
  },
  {
    "text": "blogs to Amazon open search you can use",
    "start": "183780",
    "end": "186540"
  },
  {
    "text": "any data source that supports web hooks",
    "start": "186540",
    "end": "189540"
  },
  {
    "text": "so in this diagram if you notice we are",
    "start": "189540",
    "end": "191580"
  },
  {
    "text": "using webhook to integrate git events",
    "start": "191580",
    "end": "193560"
  },
  {
    "text": "where books are a way for one",
    "start": "193560",
    "end": "195840"
  },
  {
    "text": "application to provide other application",
    "start": "195840",
    "end": "197700"
  },
  {
    "text": "with real-time information whenever they",
    "start": "197700",
    "end": "199860"
  },
  {
    "text": "occurs rather than constantly pulling",
    "start": "199860",
    "end": "202260"
  },
  {
    "text": "for new data this can help save on",
    "start": "202260",
    "end": "205800"
  },
  {
    "text": "server resources and costs next git",
    "start": "205800",
    "end": "209040"
  },
  {
    "text": "webhook will invoke API Gateway that",
    "start": "209040",
    "end": "211680"
  },
  {
    "text": "will send the payload to the Lambda",
    "start": "211680",
    "end": "213300"
  },
  {
    "text": "function",
    "start": "213300",
    "end": "214200"
  },
  {
    "text": "which then transforms the data and add",
    "start": "214200",
    "end": "217140"
  },
  {
    "text": "to the Kinesis data stream that gets",
    "start": "217140",
    "end": "219959"
  },
  {
    "text": "delivered to the S3 bucket and at the",
    "start": "219959",
    "end": "222299"
  },
  {
    "text": "same time delivers to the open search in",
    "start": "222299",
    "end": "224819"
  },
  {
    "text": "near real time using Kinesis data fire",
    "start": "224819",
    "end": "227099"
  },
  {
    "text": "host",
    "start": "227099",
    "end": "228060"
  },
  {
    "text": "finally I will demo how to set up a",
    "start": "228060",
    "end": "231060"
  },
  {
    "text": "visualization in Amazon open search",
    "start": "231060",
    "end": "233099"
  },
  {
    "text": "dashboard to view the GitHub log counts",
    "start": "233099",
    "end": "235799"
  },
  {
    "text": "so go ahead and create the Amazon open",
    "start": "235799",
    "end": "238260"
  },
  {
    "text": "search Service First",
    "start": "238260",
    "end": "240000"
  },
  {
    "text": "so I will create the new domain and give",
    "start": "240000",
    "end": "242819"
  },
  {
    "text": "this domain a name",
    "start": "242819",
    "end": "244680"
  },
  {
    "text": "I will select the development and",
    "start": "244680",
    "end": "246239"
  },
  {
    "text": "testing for this demo",
    "start": "246239",
    "end": "249180"
  },
  {
    "text": "so first we will change the instance",
    "start": "249180",
    "end": "250860"
  },
  {
    "text": "type to T3 medium search for this demo",
    "start": "250860",
    "end": "254760"
  },
  {
    "text": "and we will select the single",
    "start": "254760",
    "end": "256859"
  },
  {
    "text": "availability zone change the number of",
    "start": "256859",
    "end": "259320"
  },
  {
    "text": "nodes to 1 and EBS store is size to 30.",
    "start": "259320",
    "end": "262380"
  },
  {
    "text": "I will select the public access for this",
    "start": "262380",
    "end": "265860"
  },
  {
    "text": "particular demo you can keep it VPC and",
    "start": "265860",
    "end": "269040"
  },
  {
    "text": "create the user so we'll give it a",
    "start": "269040",
    "end": "271979"
  },
  {
    "text": "username and password and use the fine",
    "start": "271979",
    "end": "274199"
  },
  {
    "text": "grain access control for our access",
    "start": "274199",
    "end": "276000"
  },
  {
    "text": "policy and create this cluster",
    "start": "276000",
    "end": "278940"
  },
  {
    "text": "so this cluster will take some time to",
    "start": "278940",
    "end": "281100"
  },
  {
    "text": "create so let's go ahead and create the",
    "start": "281100",
    "end": "283020"
  },
  {
    "text": "S3 bucket meanwhile",
    "start": "283020",
    "end": "284699"
  },
  {
    "text": "so go ahead and give the name of the S3",
    "start": "284699",
    "end": "287220"
  },
  {
    "text": "bucket and create the bucket next I will",
    "start": "287220",
    "end": "290520"
  },
  {
    "text": "go ahead and create the Kinesis data",
    "start": "290520",
    "end": "292979"
  },
  {
    "text": "streaming so select the data streams and",
    "start": "292979",
    "end": "295979"
  },
  {
    "text": "create the new data stream give it a",
    "start": "295979",
    "end": "298199"
  },
  {
    "text": "name and create it while it is creating",
    "start": "298199",
    "end": "300600"
  },
  {
    "text": "we will go ahead and create the Kinesis",
    "start": "300600",
    "end": "302880"
  },
  {
    "text": "data delivery stream which will deliver",
    "start": "302880",
    "end": "305100"
  },
  {
    "text": "the data from currency's data stream to",
    "start": "305100",
    "end": "307440"
  },
  {
    "text": "S3 bucket so create the delivery stream",
    "start": "307440",
    "end": "309720"
  },
  {
    "text": "select the data stream and S3 bucket as",
    "start": "309720",
    "end": "312660"
  },
  {
    "text": "the destination and Kinesis data stream",
    "start": "312660",
    "end": "315419"
  },
  {
    "text": "Source will select next we will give it",
    "start": "315419",
    "end": "318120"
  },
  {
    "text": "a new name and then for the destination",
    "start": "318120",
    "end": "321120"
  },
  {
    "text": "I will select the S3 bucket that we have",
    "start": "321120",
    "end": "323580"
  },
  {
    "text": "created let's change the buffer size",
    "start": "323580",
    "end": "326400"
  },
  {
    "text": "interval to 60 seconds so that it will",
    "start": "326400",
    "end": "329460"
  },
  {
    "text": "change the data after every 60 second",
    "start": "329460",
    "end": "331560"
  },
  {
    "text": "and create the delivery stream next we",
    "start": "331560",
    "end": "333900"
  },
  {
    "text": "will go ahead and create the Lambda",
    "start": "333900",
    "end": "335460"
  },
  {
    "text": "function so create Lambda and give it a",
    "start": "335460",
    "end": "338460"
  },
  {
    "text": "name change the runtime to Python 3.10",
    "start": "338460",
    "end": "340800"
  },
  {
    "text": "and create this function so this is our",
    "start": "340800",
    "end": "343500"
  },
  {
    "text": "demo code which is using put record API",
    "start": "343500",
    "end": "346080"
  },
  {
    "text": "to ingest the data to connect this is",
    "start": "346080",
    "end": "348720"
  },
  {
    "text": "the schema for that and there are",
    "start": "348720",
    "end": "351060"
  },
  {
    "text": "various languages that it supports I",
    "start": "351060",
    "end": "353280"
  },
  {
    "text": "will use pi API let's change the Lambda",
    "start": "353280",
    "end": "356820"
  },
  {
    "text": "function timeout to More Than 3 second",
    "start": "356820",
    "end": "358860"
  },
  {
    "text": "so that it will not frequently time out",
    "start": "358860",
    "end": "360900"
  },
  {
    "text": "before we update the code and now I'll",
    "start": "360900",
    "end": "363720"
  },
  {
    "text": "copy this code and paste it into our",
    "start": "363720",
    "end": "365759"
  },
  {
    "text": "Lambda function change this event to",
    "start": "365759",
    "end": "367620"
  },
  {
    "text": "data so that we will use the line number",
    "start": "367620",
    "end": "369660"
  },
  {
    "text": "7 dummy data to ingest into kinesis now",
    "start": "369660",
    "end": "373380"
  },
  {
    "text": "we have to add the permission to the",
    "start": "373380",
    "end": "375240"
  },
  {
    "text": "execution role so that it can add the",
    "start": "375240",
    "end": "377520"
  },
  {
    "text": "data to Kinesis data stream I'll open",
    "start": "377520",
    "end": "379860"
  },
  {
    "text": "the role of the Lambda function attach",
    "start": "379860",
    "end": "382319"
  },
  {
    "text": "the policy here for the Kinesis I'll",
    "start": "382319",
    "end": "385800"
  },
  {
    "text": "select full access for the currencies",
    "start": "385800",
    "end": "387660"
  },
  {
    "text": "and add the permission next I'll create",
    "start": "387660",
    "end": "390479"
  },
  {
    "text": "a API Gateway to invoke our Lambda",
    "start": "390479",
    "end": "393300"
  },
  {
    "text": "function so let's go ahead and create",
    "start": "393300",
    "end": "395400"
  },
  {
    "text": "the rest base API and give the API new",
    "start": "395400",
    "end": "400560"
  },
  {
    "text": "name and create this API next I will add",
    "start": "400560",
    "end": "403979"
  },
  {
    "text": "the resource give the resource a name",
    "start": "403979",
    "end": "406740"
  },
  {
    "text": "and once the resource is created I'll",
    "start": "406740",
    "end": "408660"
  },
  {
    "text": "add the method we need a post method",
    "start": "408660",
    "end": "411180"
  },
  {
    "text": "here and I need the Lambda function to",
    "start": "411180",
    "end": "414120"
  },
  {
    "text": "be invoked so copy the Lambda function",
    "start": "414120",
    "end": "415919"
  },
  {
    "text": "that we created and paste the name of",
    "start": "415919",
    "end": "418440"
  },
  {
    "text": "that so we need access to invoke the",
    "start": "418440",
    "end": "420960"
  },
  {
    "text": "Lambda function so let's hit OK after",
    "start": "420960",
    "end": "423240"
  },
  {
    "text": "this I will go ahead and deploy our API",
    "start": "423240",
    "end": "426000"
  },
  {
    "text": "so let's go ahead and deploy this API",
    "start": "426000",
    "end": "428639"
  },
  {
    "text": "into the new stage called it as a test",
    "start": "428639",
    "end": "431520"
  },
  {
    "text": "stage once it is there let's go ahead",
    "start": "431520",
    "end": "434280"
  },
  {
    "text": "and check our Amazon open search service",
    "start": "434280",
    "end": "436440"
  },
  {
    "text": "dashboard and configure it so I will go",
    "start": "436440",
    "end": "439319"
  },
  {
    "text": "to the dashboard enter the username and",
    "start": "439319",
    "end": "442740"
  },
  {
    "text": "password that we have created I will",
    "start": "442740",
    "end": "444840"
  },
  {
    "text": "explore my own data and keep this as a",
    "start": "444840",
    "end": "447300"
  },
  {
    "text": "global",
    "start": "447300",
    "end": "448199"
  },
  {
    "text": "so next we'll go ahead and create the",
    "start": "448199",
    "end": "450419"
  },
  {
    "text": "data delivery stream to stream the data",
    "start": "450419",
    "end": "453180"
  },
  {
    "text": "into Amazon open search service so let's",
    "start": "453180",
    "end": "455880"
  },
  {
    "text": "create the new delivery stream in the",
    "start": "455880",
    "end": "458580"
  },
  {
    "text": "source Kinesis data stream and in the",
    "start": "458580",
    "end": "460500"
  },
  {
    "text": "destination open search service we will",
    "start": "460500",
    "end": "463139"
  },
  {
    "text": "select the source as the data stream",
    "start": "463139",
    "end": "465479"
  },
  {
    "text": "that we have and change this data stream",
    "start": "465479",
    "end": "467940"
  },
  {
    "text": "name in the destination I will select",
    "start": "467940",
    "end": "470759"
  },
  {
    "text": "the open search cluster name and give",
    "start": "470759",
    "end": "473340"
  },
  {
    "text": "the index a name and change the buffer",
    "start": "473340",
    "end": "475860"
  },
  {
    "text": "interval to 60 seconds next for the",
    "start": "475860",
    "end": "478500"
  },
  {
    "text": "backup setting let's select the S3",
    "start": "478500",
    "end": "480780"
  },
  {
    "text": "bucket that we have created so that all",
    "start": "480780",
    "end": "482819"
  },
  {
    "text": "the failure record will come here and",
    "start": "482819",
    "end": "484680"
  },
  {
    "text": "you create the delivery stream after",
    "start": "484680",
    "end": "487020"
  },
  {
    "text": "that we have to map the role of the data",
    "start": "487020",
    "end": "490919"
  },
  {
    "text": "delivery stream with the Amazon open",
    "start": "490919",
    "end": "492780"
  },
  {
    "text": "search service backend role so that it",
    "start": "492780",
    "end": "495180"
  },
  {
    "text": "can index into Amazon open source so",
    "start": "495180",
    "end": "497580"
  },
  {
    "text": "copy the Arn of the role of the data",
    "start": "497580",
    "end": "500819"
  },
  {
    "text": "delivery stream and go to the dashboard",
    "start": "500819",
    "end": "503720"
  },
  {
    "text": "and security roles",
    "start": "503720",
    "end": "507000"
  },
  {
    "text": "and in the role let's select the all",
    "start": "507000",
    "end": "509580"
  },
  {
    "text": "access role",
    "start": "509580",
    "end": "511740"
  },
  {
    "text": "mapped users and manage mapping here in",
    "start": "511740",
    "end": "516659"
  },
  {
    "text": "this backend role we need to paste the",
    "start": "516659",
    "end": "518640"
  },
  {
    "text": "data delivery stream role and map it",
    "start": "518640",
    "end": "521940"
  },
  {
    "text": "with this it will be able to index into",
    "start": "521940",
    "end": "524580"
  },
  {
    "text": "the Amazon open search now let's go",
    "start": "524580",
    "end": "527100"
  },
  {
    "text": "ahead and attach the new policy the role",
    "start": "527100",
    "end": "530459"
  },
  {
    "text": "so we will attach the policy and we will",
    "start": "530459",
    "end": "532980"
  },
  {
    "text": "search for open search service I will",
    "start": "532980",
    "end": "535380"
  },
  {
    "text": "select the full access for Open Source",
    "start": "535380",
    "end": "537360"
  },
  {
    "text": "service",
    "start": "537360",
    "end": "538200"
  },
  {
    "text": "and now let's go ahead and test this",
    "start": "538200",
    "end": "540600"
  },
  {
    "text": "full path so in this testing I will not",
    "start": "540600",
    "end": "543180"
  },
  {
    "text": "put anybody and just hit on test so you",
    "start": "543180",
    "end": "546180"
  },
  {
    "text": "will notice that this is successfully",
    "start": "546180",
    "end": "548279"
  },
  {
    "text": "ingested into Kinesis so let's go ahead",
    "start": "548279",
    "end": "550680"
  },
  {
    "text": "and fetch the record in Kinesis to",
    "start": "550680",
    "end": "552899"
  },
  {
    "text": "confirm the record arrived and next I",
    "start": "552899",
    "end": "555899"
  },
  {
    "text": "will go ahead and check the Amazon open",
    "start": "555899",
    "end": "558240"
  },
  {
    "text": "search dashboard whether it is arrived",
    "start": "558240",
    "end": "560640"
  },
  {
    "text": "or not so let's create the new index",
    "start": "560640",
    "end": "562620"
  },
  {
    "text": "pattern called it as a git logs so that",
    "start": "562620",
    "end": "565740"
  },
  {
    "text": "we can fetch all the records now let's",
    "start": "565740",
    "end": "568680"
  },
  {
    "text": "go to the Discover section of the",
    "start": "568680",
    "end": "571380"
  },
  {
    "text": "dashboard to the logs so you can notice",
    "start": "571380",
    "end": "573959"
  },
  {
    "text": "all the logs that we have pushed from",
    "start": "573959",
    "end": "575580"
  },
  {
    "text": "Lambda API Gateway arrived so now let's",
    "start": "575580",
    "end": "578399"
  },
  {
    "text": "create the new visualization create a",
    "start": "578399",
    "end": "580740"
  },
  {
    "text": "Gorge and select the index that we had",
    "start": "580740",
    "end": "583560"
  },
  {
    "text": "and it will show all the count of the",
    "start": "583560",
    "end": "585600"
  },
  {
    "text": "number of data that is arrived save this",
    "start": "585600",
    "end": "588360"
  },
  {
    "text": "visualization and create the new",
    "start": "588360",
    "end": "590700"
  },
  {
    "text": "dashboard add an existing panel select",
    "start": "590700",
    "end": "593160"
  },
  {
    "text": "the data count that we have created as a",
    "start": "593160",
    "end": "595200"
  },
  {
    "text": "panel and save this dashboard so this",
    "start": "595200",
    "end": "597360"
  },
  {
    "text": "will show the records that arrived in",
    "start": "597360",
    "end": "599399"
  },
  {
    "text": "Amazon open service",
    "start": "599399",
    "end": "601380"
  },
  {
    "text": "now let me change the Lambda function to",
    "start": "601380",
    "end": "604260"
  },
  {
    "text": "pass the payload from API Gateway all",
    "start": "604260",
    "end": "606959"
  },
  {
    "text": "the way in connections so let's go ahead",
    "start": "606959",
    "end": "609300"
  },
  {
    "text": "and create a brand new repo here you can",
    "start": "609300",
    "end": "611459"
  },
  {
    "text": "use your existing GitHub repo so in this",
    "start": "611459",
    "end": "614279"
  },
  {
    "text": "GitHub repo I'll go to the settings and",
    "start": "614279",
    "end": "616260"
  },
  {
    "text": "go to the web hooks and add the web hook",
    "start": "616260",
    "end": "620220"
  },
  {
    "text": "in this webhook we need a payload URL I",
    "start": "620220",
    "end": "622980"
  },
  {
    "text": "will select the invoke URL of our rest",
    "start": "622980",
    "end": "625019"
  },
  {
    "text": "API as a payload URL post the data from",
    "start": "625019",
    "end": "628140"
  },
  {
    "text": "GitHub so select it as application Json",
    "start": "628140",
    "end": "630779"
  },
  {
    "text": "and send me everything is the option",
    "start": "630779",
    "end": "632820"
  },
  {
    "text": "that I will select and add this webhoop",
    "start": "632820",
    "end": "635279"
  },
  {
    "text": "in order to generate couple of events I",
    "start": "635279",
    "end": "637440"
  },
  {
    "text": "will start uninstall our repo and go to",
    "start": "637440",
    "end": "640860"
  },
  {
    "text": "the web hook and check the deliverables",
    "start": "640860",
    "end": "643200"
  },
  {
    "text": "so in the deliveries you notice we have",
    "start": "643200",
    "end": "645480"
  },
  {
    "text": "successful deliveries let's open one of",
    "start": "645480",
    "end": "647640"
  },
  {
    "text": "them and check the response and notice",
    "start": "647640",
    "end": "650040"
  },
  {
    "text": "here The Shard ID and sequence number is",
    "start": "650040",
    "end": "652079"
  },
  {
    "text": "showing so you notice the git event is",
    "start": "652079",
    "end": "654120"
  },
  {
    "text": "arrived to our Kinesis data stream",
    "start": "654120",
    "end": "656940"
  },
  {
    "text": "and let's go ahead and check the S3",
    "start": "656940",
    "end": "658920"
  },
  {
    "text": "bucket after that and notice all the git",
    "start": "658920",
    "end": "660959"
  },
  {
    "text": "events are arrived in our S3 bucket as",
    "start": "660959",
    "end": "662820"
  },
  {
    "text": "well let's query one of them to confirm",
    "start": "662820",
    "end": "665519"
  },
  {
    "text": "the kit event",
    "start": "665519",
    "end": "667740"
  },
  {
    "text": "next I will go ahead and check the",
    "start": "667740",
    "end": "669959"
  },
  {
    "text": "dashboard that we are showing the count",
    "start": "669959",
    "end": "671940"
  },
  {
    "text": "is four let's refresh it",
    "start": "671940",
    "end": "674160"
  },
  {
    "text": "notice the count is 15 now so let's go",
    "start": "674160",
    "end": "677399"
  },
  {
    "text": "ahead and discover this data so I'll go",
    "start": "677399",
    "end": "679620"
  },
  {
    "text": "ahead into discover and check the git",
    "start": "679620",
    "end": "681420"
  },
  {
    "text": "events arrived so this concludes our",
    "start": "681420",
    "end": "684240"
  },
  {
    "text": "demo of how to stream git events to",
    "start": "684240",
    "end": "686519"
  },
  {
    "text": "Amazon open search",
    "start": "686519",
    "end": "688260"
  },
  {
    "text": "you are responsible for the cost of the",
    "start": "688260",
    "end": "690839"
  },
  {
    "text": "AWS services and any third party license",
    "start": "690839",
    "end": "693480"
  },
  {
    "text": "is used while running this solution so",
    "start": "693480",
    "end": "696120"
  },
  {
    "text": "there is no additional cost for using",
    "start": "696120",
    "end": "698160"
  },
  {
    "text": "the solution our customer has been using",
    "start": "698160",
    "end": "700440"
  },
  {
    "text": "this solution to ingest their",
    "start": "700440",
    "end": "701880"
  },
  {
    "text": "increasingly diverse new sources such as",
    "start": "701880",
    "end": "704640"
  },
  {
    "text": "website microservices CRM tools chatbots",
    "start": "704640",
    "end": "707640"
  },
  {
    "text": "agile platforms GitHub or other source",
    "start": "707640",
    "end": "711420"
  },
  {
    "text": "control systems and I hope this is",
    "start": "711420",
    "end": "714000"
  },
  {
    "text": "helpful for your business as well if you",
    "start": "714000",
    "end": "716700"
  },
  {
    "text": "have any further queries please reach",
    "start": "716700",
    "end": "718920"
  },
  {
    "text": "out to us thank you",
    "start": "718920",
    "end": "722180"
  }
]