[
  {
    "start": "0",
    "end": "21000"
  },
  {
    "text": "hi everyone my name is de Padma I'm a product manager in the Container",
    "start": "60",
    "end": "5279"
  },
  {
    "text": "Services team I'm joined today by Aria and GAD from KPMG first of all thank you",
    "start": "5279",
    "end": "13230"
  },
  {
    "text": "for attending this session at this time of the day we truly have the container",
    "start": "13230",
    "end": "18960"
  },
  {
    "text": "faithful here so it's awesome to be here after a year we launched it obvious",
    "start": "18960",
    "end": "27180"
  },
  {
    "start": "21000",
    "end": "81000"
  },
  {
    "text": "Fargate at last reinvent and several of our customers have adopted it and in",
    "start": "27180",
    "end": "34829"
  },
  {
    "text": "this session we will share from a service perspective what are some of the",
    "start": "34829",
    "end": "41870"
  },
  {
    "text": "best practices as we see them when you manage your environments for deployment",
    "start": "41870",
    "end": "49620"
  },
  {
    "text": "how to do it safely how to maintain isolation and then we look at what KPMG",
    "start": "49620",
    "end": "55590"
  },
  {
    "text": "has built with Fargate for their customers this is a 300 level session so",
    "start": "55590",
    "end": "63409"
  },
  {
    "text": "the Assumption here is you know what containers are you know what ECS is and",
    "start": "63409",
    "end": "69900"
  },
  {
    "text": "Fargate is even if you may not have played around with it",
    "start": "69900",
    "end": "75470"
  },
  {
    "text": "otherwise you know a lot of the content that we go through may not make sense so",
    "start": "75470",
    "end": "82259"
  },
  {
    "start": "81000",
    "end": "110000"
  },
  {
    "text": "a couple of related breakouts actually the first one is happening you know right now in you know by like about an",
    "start": "82259",
    "end": "88650"
  },
  {
    "text": "hour say if someone wants to run to that one said I wouldn't mind and then we have another one which dives deeper into",
    "start": "88650",
    "end": "95189"
  },
  {
    "text": "how to do debugging for and and have visibility into your applications when",
    "start": "95189",
    "end": "101130"
  },
  {
    "text": "you deploy onto Fargate especially important as you think about you know",
    "start": "101130",
    "end": "106890"
  },
  {
    "text": "the level of abstraction that forget provides so this is our agenda today we",
    "start": "106890",
    "end": "114149"
  },
  {
    "start": "110000",
    "end": "141000"
  },
  {
    "text": "will quickly go over Fargate how it fits into the container service offerings at",
    "start": "114149",
    "end": "121079"
  },
  {
    "text": "AWS what are some of the key primitives you should understand before we dive deeper dive deeper into managing",
    "start": "121079",
    "end": "129989"
  },
  {
    "text": "multiple environments with a dub as far gate and some of the best practices and then we go into the KPMG",
    "start": "129989",
    "end": "137550"
  },
  {
    "text": "use cases here so here is a quick",
    "start": "137550",
    "end": "144060"
  },
  {
    "start": "141000",
    "end": "182000"
  },
  {
    "text": "overview of the container services landscape at Amazon at the orchestration",
    "start": "144060",
    "end": "150420"
  },
  {
    "text": "layer or container management layer we have two offerings one is Amazon ECS",
    "start": "150420",
    "end": "156239"
  },
  {
    "text": "build ground up in Amazon it's a multi tenant control plane where you which",
    "start": "156239",
    "end": "163500"
  },
  {
    "text": "manages containers for you across your ec2 instances and now forget as well and",
    "start": "163500",
    "end": "170400"
  },
  {
    "text": "as of last we went we also announced the preview of Amazon eks which has now gone",
    "start": "170400",
    "end": "176580"
  },
  {
    "text": "GA which is the kubernetes offering from AWS at the Hosting layer you still have",
    "start": "176580",
    "end": "185970"
  },
  {
    "start": "182000",
    "end": "216000"
  },
  {
    "text": "to run these container somewhere you can manage them at scale using the Amazon",
    "start": "185970",
    "end": "191130"
  },
  {
    "text": "ECS or eks but you need to run them somewhere that somewhere is either ec2",
    "start": "191130",
    "end": "197030"
  },
  {
    "text": "that you manage yourself or you just run them on Fargate which is several less",
    "start": "197030",
    "end": "202290"
  },
  {
    "text": "containers and lastly you need to store those images somewhere so that you can deploy across the different services",
    "start": "202290",
    "end": "208950"
  },
  {
    "text": "that you plan to deploy on and that's with Amazon ECR so before container",
    "start": "208950",
    "end": "219720"
  },
  {
    "start": "216000",
    "end": "256000"
  },
  {
    "text": "management you had to run containers across your instances but there's a",
    "start": "219720",
    "end": "225030"
  },
  {
    "text": "bunch of software you need to run along with it to be able to support your container so in this case the the orange",
    "start": "225030",
    "end": "232049"
  },
  {
    "text": "boxes that you see are our tasks tasks for essentially groups of containers which embodying your application and",
    "start": "232049",
    "end": "240380"
  },
  {
    "text": "we're on top of that you had to run your ec2 instances you had to pick the right",
    "start": "240380",
    "end": "245519"
  },
  {
    "text": "size of ec2 instances and you had to manage the operating system the docker",
    "start": "245519",
    "end": "250530"
  },
  {
    "text": "daemon because you're running docker containers and also an agent if you're running ECS ECS made it easy to run the",
    "start": "250530",
    "end": "258810"
  },
  {
    "start": "256000",
    "end": "309000"
  },
  {
    "text": "exact scale will large clusters launch thousands of containers on it it managed",
    "start": "258810",
    "end": "264390"
  },
  {
    "text": "from a cluster of respect if the cluster health which are the instances that with that are registered",
    "start": "264390",
    "end": "270289"
  },
  {
    "text": "and where can I place these containers using the placement engine with advanced",
    "start": "270289",
    "end": "275600"
  },
  {
    "text": "placement strategies but you still had these layers of management so with",
    "start": "275600",
    "end": "283039"
  },
  {
    "text": "Fargate you do now you do not have to worry about launching your containers on",
    "start": "283039",
    "end": "288740"
  },
  {
    "text": "ec2 instances you do not have to worry about patching updating managing enough Headroom in terms of capacity when you",
    "start": "288740",
    "end": "296720"
  },
  {
    "text": "want to launch your containers usage is simply an API to launch your containers",
    "start": "296720",
    "end": "301729"
  },
  {
    "text": "on demand AWS manages all the underlying infrastructure for you so as you see",
    "start": "301729",
    "end": "312110"
  },
  {
    "start": "309000",
    "end": "347000"
  },
  {
    "text": "over here in the previous diagram Fargate is the underlying layer so it",
    "start": "312110",
    "end": "319520"
  },
  {
    "text": "does not expose new primitives in itself it does not create new endpoints it you",
    "start": "319520",
    "end": "325520"
  },
  {
    "text": "do not have to learn yet another thing to be able to launch your several s containers the primitives that you use",
    "start": "325520",
    "end": "332780"
  },
  {
    "text": "are ECS primitives so for the rest of the stock you will be referring to these primitives so let's get acquainted with",
    "start": "332780",
    "end": "339260"
  },
  {
    "text": "them so that makes it makes sense the EGS primitives applied to both far gate",
    "start": "339260",
    "end": "344270"
  },
  {
    "text": "and the ec2 that you used to run before far gate as well the first is task definition this is how",
    "start": "344270",
    "end": "351530"
  },
  {
    "start": "347000",
    "end": "376000"
  },
  {
    "text": "I define my application a task definition specifies what are the number",
    "start": "351530",
    "end": "356659"
  },
  {
    "text": "of containers up to 10 is what you can have number of containers I'm going to have in this where are those images that",
    "start": "356659",
    "end": "363380"
  },
  {
    "text": "I'm going to pull for them what is the networking going to look like for those containers what are the ports I'm going",
    "start": "363380",
    "end": "369530"
  },
  {
    "text": "to expose and what is the size of these containers or the size of the task",
    "start": "369530",
    "end": "375289"
  },
  {
    "text": "itself so you define your application but these applications need to run",
    "start": "375289",
    "end": "381169"
  },
  {
    "start": "376000",
    "end": "391000"
  },
  {
    "text": "within a certain boundary and that is called a cluster a cluster used to",
    "start": "381169",
    "end": "386870"
  },
  {
    "text": "represent both a capacity as well as an administrative boundary with Fargate",
    "start": "386870",
    "end": "392900"
  },
  {
    "start": "391000",
    "end": "451000"
  },
  {
    "text": "that changes we'll talk about that a little bit later but within that cluster you run all your applications they can",
    "start": "392900",
    "end": "399590"
  },
  {
    "text": "either run as a stand-alone task just like you could run you know just ec2 VM",
    "start": "399590",
    "end": "405620"
  },
  {
    "text": "you just run it a tap and but that task is you you have to manage it you have to",
    "start": "405620",
    "end": "413150"
  },
  {
    "text": "manage its uptime if you just want to launch a number of tasks and not worry about managing for its availability you",
    "start": "413150",
    "end": "422150"
  },
  {
    "text": "can run it as a service it creates replicas of the tasks and it",
    "start": "422150",
    "end": "427700"
  },
  {
    "text": "can be fronted by a load balancer and you can have an ECS takes care of making",
    "start": "427700",
    "end": "433940"
  },
  {
    "text": "sure we run the desired number of tasks that you have specified and spawn new",
    "start": "433940",
    "end": "441530"
  },
  {
    "text": "tasks when it when the time is due to scale or scale down so these are the",
    "start": "441530",
    "end": "449120"
  },
  {
    "text": "constructs so now you can run far gate without having to modify our task",
    "start": "449120",
    "end": "455690"
  },
  {
    "text": "definition which means within ECS console itself this is the decision you",
    "start": "455690",
    "end": "460880"
  },
  {
    "text": "have to make do I launch I've defined I want to define my application will I",
    "start": "460880",
    "end": "466070"
  },
  {
    "text": "want to launch it on on ec2 instances or do I just launch them on Fargate as you",
    "start": "466070",
    "end": "472220"
  },
  {
    "text": "see in the command below here basically I've given a run task command and only",
    "start": "472220",
    "end": "479540"
  },
  {
    "text": "at the time of launching I'm saying well launch it as a type of Fargate I could have taken the same application run it",
    "start": "479540",
    "end": "485090"
  },
  {
    "text": "on easy - instead so it's great you know you get serverless containers you do not",
    "start": "485090",
    "end": "492020"
  },
  {
    "start": "487000",
    "end": "521000"
  },
  {
    "text": "have to worry about patching can I just run every application that I have on on",
    "start": "492020",
    "end": "497750"
  },
  {
    "text": "Fargate or do I have to make an either/or decision for all applications",
    "start": "497750",
    "end": "503180"
  },
  {
    "text": "within that particular cluster the answer is actually it really depends on",
    "start": "503180",
    "end": "509330"
  },
  {
    "text": "what assumptions your application is making on the underlying infrastructure",
    "start": "509330",
    "end": "514390"
  },
  {
    "text": "you may not be able to run all applications on target at least today",
    "start": "514390",
    "end": "521260"
  },
  {
    "start": "521000",
    "end": "604000"
  },
  {
    "text": "here are some examples this is not an exhaustive list by any means but if you",
    "start": "521260",
    "end": "527810"
  },
  {
    "text": "are you going to use GPUs that's not available on forget today if you're going to run",
    "start": "527810",
    "end": "533450"
  },
  {
    "text": "windows native containers you can undertand core but if you are going to run windows native you cannot run them on forget today",
    "start": "533450",
    "end": "540070"
  },
  {
    "text": "ECS provides a great integration with easy to spot fleet but that's available only with easy to launch type there's no",
    "start": "540070",
    "end": "546769"
  },
  {
    "text": "fur gate spot at this point again if you care about certain specificity around",
    "start": "546769",
    "end": "553279"
  },
  {
    "text": "instances you care about an instruction set that is only available on a certain",
    "start": "553279",
    "end": "558350"
  },
  {
    "text": "instance you should look at using ec2 instances for those applications because",
    "start": "558350",
    "end": "565820"
  },
  {
    "text": "Fargate manages the underlying infrastructure for you for all your servers you can there's a separation of",
    "start": "565820",
    "end": "572980"
  },
  {
    "text": "responsibilities but AWS manages the underlying infrastructure and therefore",
    "start": "572980",
    "end": "578420"
  },
  {
    "text": "there cannot be any privilege given to the containers so no privileged containers daemon sets are sort of",
    "start": "578420",
    "end": "585139"
  },
  {
    "text": "obsolete because daemon sets assume that it is a set of nodes that need to run",
    "start": "585139",
    "end": "591740"
  },
  {
    "text": "when you run your applications on Fargate there's no concept of a node there's just your application it's just",
    "start": "591740",
    "end": "600110"
  },
  {
    "text": "your task so the answer is to the to the",
    "start": "600110",
    "end": "609079"
  },
  {
    "start": "604000",
    "end": "628000"
  },
  {
    "text": "question I raised earlier around well whether it's an either/or decision for all of my applications the answer is you",
    "start": "609079",
    "end": "615050"
  },
  {
    "text": "can actually run them in the same administrative boundary within the same ECS cluster side-by-side so let's just",
    "start": "615050",
    "end": "623240"
  },
  {
    "text": "say I have an app I have multiple applications for my business and I want to run them across three",
    "start": "623240",
    "end": "629899"
  },
  {
    "start": "628000",
    "end": "636000"
  },
  {
    "text": "availability zones as a best practice for high availability they are you know",
    "start": "629899",
    "end": "635720"
  },
  {
    "text": "three different subnets in the same VPC and I have these applications but my",
    "start": "635720",
    "end": "641630"
  },
  {
    "start": "636000",
    "end": "659000"
  },
  {
    "text": "notifications application is not ready to move to far gate yet because it uses",
    "start": "641630",
    "end": "647079"
  },
  {
    "text": "it it uses EBS and forget does not support EBS yet so you but at the same",
    "start": "647079",
    "end": "654829"
  },
  {
    "text": "time you can still run your web and shopping application as far get launched type and you can run your notifications",
    "start": "654829",
    "end": "660949"
  },
  {
    "start": "659000",
    "end": "704000"
  },
  {
    "text": "applications on your ec2 launch type they will run in the same cluster boundary",
    "start": "660949",
    "end": "667040"
  },
  {
    "text": "in the same subnets and the same VPC that you own so it's not really a what",
    "start": "667040",
    "end": "673550"
  },
  {
    "text": "we call a one-way door where if you choose to migrate your application to Fargate or run it on target first",
    "start": "673550",
    "end": "680300"
  },
  {
    "text": "because it was easy and now you well you realize well I I have certain assumptions on instances that I want to",
    "start": "680300",
    "end": "687200"
  },
  {
    "text": "run it on and I want to move it back to easy - you can totally do that without really compromising on serve there your",
    "start": "687200",
    "end": "695510"
  },
  {
    "text": "your location of the service and how it affects the rest of the services that you may be running in your cluster and",
    "start": "695510",
    "end": "702440"
  },
  {
    "text": "your VPC but as far as Fargate is concerned the cluster is only an",
    "start": "702440",
    "end": "708710"
  },
  {
    "start": "704000",
    "end": "722000"
  },
  {
    "text": "administrative boundary you there's no capacity associated with your cluster anymore unless you're running ec2 and",
    "start": "708710",
    "end": "715730"
  },
  {
    "text": "four gates side-by-side you define the ECS cluster the same way and this is",
    "start": "715730",
    "end": "721190"
  },
  {
    "text": "important because you want to be able to have different environments here so",
    "start": "721190",
    "end": "726230"
  },
  {
    "text": "let's talk about how you enforce different kinds of permissions especially when you have different",
    "start": "726230",
    "end": "733760"
  },
  {
    "text": "environments and different applications to manage so the first level of permission is what we call clustered",
    "start": "733760",
    "end": "741410"
  },
  {
    "text": "permission cluster permission determines who can run C tasks or services or",
    "start": "741410",
    "end": "747320"
  },
  {
    "text": "perform certain describe actions within this particular particular cluster the",
    "start": "747320",
    "end": "752900"
  },
  {
    "text": "second is application permission it's the role under which the application",
    "start": "752900",
    "end": "758810"
  },
  {
    "text": "runs the Fargate tasks run and it determines what kind of eight of those",
    "start": "758810",
    "end": "764180"
  },
  {
    "text": "resources it is allowed to access for example only the payment app can write to a dynamo D dynamodb table right so",
    "start": "764180",
    "end": "772100"
  },
  {
    "text": "you run it and under a specific role which has access to that particular table right and lastly there's a bunch",
    "start": "772100",
    "end": "780050"
  },
  {
    "start": "778000",
    "end": "824000"
  },
  {
    "text": "of magic that needs to happen under the covers for Fargate for it to be seamless",
    "start": "780050",
    "end": "785480"
  },
  {
    "text": "for you from a service containers perspective but this is we make it explicit through a policy and you run it",
    "start": "785480",
    "end": "793550"
  },
  {
    "text": "under what we call a task execution role this is when Fargate does an image pull",
    "start": "793550",
    "end": "799670"
  },
  {
    "text": "for you or the nest needs to send your application logs to cloud wash logs in your own",
    "start": "799670",
    "end": "804810"
  },
  {
    "text": "account we need to send those logs to your account so you need to give us permissions for us to be able to do that",
    "start": "804810",
    "end": "810330"
  },
  {
    "text": "and also you need permission many permissions from a networking perspective to provision a networking",
    "start": "810330",
    "end": "817740"
  },
  {
    "text": "interface D provision them and so on so now you've set up your cluster",
    "start": "817740",
    "end": "824280"
  },
  {
    "start": "824000",
    "end": "899000"
  },
  {
    "text": "permissions so you can actually have a separation between your environments",
    "start": "824280",
    "end": "829500"
  },
  {
    "text": "let's just say here I have a prod and beta clusters for all my developers I've given you know they can spin up as many",
    "start": "829500",
    "end": "835920"
  },
  {
    "text": "in depth plus as they want ECS clusters are nothing but an understated boundary there's no control",
    "start": "835920",
    "end": "841560"
  },
  {
    "text": "plane there you have to run separately and then there's a QA cluster but I have hired some you know contractors to do QA",
    "start": "841560",
    "end": "850710"
  },
  {
    "text": "for me in the QA cluster I do not want them to describe or do anything on my prod or beta clusters so you can enforce",
    "start": "850710",
    "end": "857460"
  },
  {
    "text": "your boundary at the cluster level itself so another aspect of managing",
    "start": "857460",
    "end": "865500"
  },
  {
    "text": "these multiple environments from you know we covered compute from a computer",
    "start": "865500",
    "end": "871050"
  },
  {
    "text": "perspective by the way within your your cluster your tasks do not share the the",
    "start": "871050",
    "end": "878340"
  },
  {
    "text": "underlying kernel for example with other tasks so you have complete separation even among applications within the same",
    "start": "878340",
    "end": "885450"
  },
  {
    "text": "cluster as you as you sort of design your your cluster and the applications that need to run within it so the other",
    "start": "885450",
    "end": "893100"
  },
  {
    "text": "aspect is networking which is equally important so there are different aspects",
    "start": "893100",
    "end": "900330"
  },
  {
    "start": "899000",
    "end": "985000"
  },
  {
    "text": "here first cesare the task level how do you have this networking word for my applications just because you have you",
    "start": "900330",
    "end": "908430"
  },
  {
    "text": "know you have opted into Fargate and you're letting a SS take care of the underlying infrastructure does not mean",
    "start": "908430",
    "end": "915240"
  },
  {
    "text": "you give up control of the networking right so you we still have a dedicated I",
    "start": "915240",
    "end": "921270"
  },
  {
    "text": "and I for each forget tasks the target tasks run only in your VP C's and in the",
    "start": "921270",
    "end": "928470"
  },
  {
    "text": "subnets that you designate to us you have full control",
    "start": "928470",
    "end": "933670"
  },
  {
    "text": "of the network access you can apply your security groups just like you do for any and I with with the ec2 today and it has",
    "start": "933670",
    "end": "941830"
  },
  {
    "text": "public IP support so you really get a native V PC behavior between both of",
    "start": "941830",
    "end": "948250"
  },
  {
    "text": "argot tasks your ec2 instances it's you do not really have to think about well",
    "start": "948250",
    "end": "953470"
  },
  {
    "text": "how is my subnet routing going to work or how is my you know you know Knakal going to get going to work for example",
    "start": "953470",
    "end": "959650"
  },
  {
    "text": "and at the service level the way you",
    "start": "959650",
    "end": "964900"
  },
  {
    "text": "want to you know doing multi availability zone deployment is if you",
    "start": "964900",
    "end": "970900"
  },
  {
    "text": "want to do that as a as a best practice you want to map you want to actually",
    "start": "970900",
    "end": "976000"
  },
  {
    "text": "specify the subnets you want to run the Fargate service in and just by that you",
    "start": "976000",
    "end": "982720"
  },
  {
    "text": "actually achieve achieve a multi easy deployment now at the cluster level from",
    "start": "982720",
    "end": "989980"
  },
  {
    "start": "985000",
    "end": "1059000"
  },
  {
    "text": "a separation of of your different environments perspective we do not",
    "start": "989980",
    "end": "995530"
  },
  {
    "text": "enforce or even define at the cluster level that this cluster has to map to a",
    "start": "995530",
    "end": "1000900"
  },
  {
    "text": "particular V PC but we do recommend that you try to map you know a particular",
    "start": "1000900",
    "end": "1008340"
  },
  {
    "text": "cluster especially like a dev environment to its own V PC or at least its own cider range",
    "start": "1008340",
    "end": "1013860"
  },
  {
    "text": "do you do not want fate sharing between your different environments just because",
    "start": "1013860",
    "end": "1019640"
  },
  {
    "text": "you know someone someone's application scaled to have too much that which was not yours or it was",
    "start": "1019640",
    "end": "1025829"
  },
  {
    "text": "an indifferent cluster and suddenly you're out of IP space or someone change the configuration for the Internet",
    "start": "1025829",
    "end": "1031740"
  },
  {
    "text": "gateway and our subnet routing suddenly you're you're having unknown issues now",
    "start": "1031740",
    "end": "1036829"
  },
  {
    "text": "so definitely consider you know at least doing a V PCE to cluster mapping or or",
    "start": "1036829",
    "end": "1042660"
  },
  {
    "text": "maybe at least a Sai range so we talked about how networking works at the task",
    "start": "1042660",
    "end": "1048720"
  },
  {
    "text": "level a service level but how do how do my applications in these different",
    "start": "1048720",
    "end": "1055230"
  },
  {
    "text": "environments talk to each other so we have earlier this year launched service",
    "start": "1055230",
    "end": "1062940"
  },
  {
    "start": "1059000",
    "end": "1111000"
  },
  {
    "text": "discovery what service discovery enables you to do to maintain the same same code across",
    "start": "1062940",
    "end": "1072150"
  },
  {
    "text": "different environments and your services can address using a friendly cname and",
    "start": "1072150",
    "end": "1078450"
  },
  {
    "text": "it is built on route 53 Auto naming so this is two services highly available",
    "start": "1078450",
    "end": "1085010"
  },
  {
    "text": "AWS services like ECS and and and route 53 so you get a managed experience which",
    "start": "1085010",
    "end": "1092610"
  },
  {
    "text": "is highly available and there are no boundaries as such with respect to you",
    "start": "1092610",
    "end": "1098850"
  },
  {
    "text": "know how you can do your auto discovery if you want to do it across multiple environments you're welcome to do that but the key is that your applications",
    "start": "1098850",
    "end": "1107250"
  },
  {
    "text": "can can get can remain unchanged across these different environments we have as",
    "start": "1107250",
    "end": "1114480"
  },
  {
    "start": "1111000",
    "end": "1146000"
  },
  {
    "text": "part of the service discovery offering created route 53 api's for the name creation of the namespace first fall and",
    "start": "1114480",
    "end": "1121860"
  },
  {
    "text": "the cname creation for your services the for the ECS scheduler on its end what it",
    "start": "1121860",
    "end": "1128010"
  },
  {
    "text": "does is it whenever a new task comes up it registers with the service discovery",
    "start": "1128010",
    "end": "1133620"
  },
  {
    "text": "service as a potential back-end which it can now accept traffic once it's healthy",
    "start": "1133620",
    "end": "1139530"
  },
  {
    "text": "and it basically it registers a task IP at born so now we've talked about",
    "start": "1139530",
    "end": "1150770"
  },
  {
    "text": "networking let's talk about a concept which is specific to Fargate everything",
    "start": "1150770",
    "end": "1156780"
  },
  {
    "text": "we discussed so far applies to easy to launch type for gate launch type in case of far gate specifically we have a",
    "start": "1156780",
    "end": "1163380"
  },
  {
    "text": "notion of platform versions right now we have three platform versions that are",
    "start": "1163380",
    "end": "1170070"
  },
  {
    "start": "1165000",
    "end": "1351000"
  },
  {
    "text": "shipping today the way we look at platform versions is we want to provide",
    "start": "1170070",
    "end": "1176100"
  },
  {
    "text": "a reliable consistent environment once you have deployed your applications",
    "start": "1176100",
    "end": "1182190"
  },
  {
    "text": "in production so no new feature changes",
    "start": "1182190",
    "end": "1187470"
  },
  {
    "text": "there may be features that do not need a lot of changes in the underlying infrastructure in that case we just make",
    "start": "1187470",
    "end": "1193110"
  },
  {
    "text": "them available across all platforms but if there are any changes that have that have to happen they go into a new",
    "start": "1193110",
    "end": "1199830"
  },
  {
    "text": "version we roll out a new platform version for example as part of platform version 1.2 we launched access to",
    "start": "1199830",
    "end": "1207429"
  },
  {
    "text": "private registry authentication so if you are using something that's not Amazon ECR you can use that feature that",
    "start": "1207429",
    "end": "1215920"
  },
  {
    "text": "required some changes we do however patch and update and",
    "start": "1215920",
    "end": "1221920"
  },
  {
    "text": "manage the the the versions that are already out there for bug fixes and",
    "start": "1221920",
    "end": "1228400"
  },
  {
    "text": "security fixes to make sure your your environment is always secure now when a",
    "start": "1228400",
    "end": "1235419"
  },
  {
    "text": "new so one thing I do want to note that tends to sometimes you know throw people",
    "start": "1235419",
    "end": "1240730"
  },
  {
    "text": "off and I get questions on it's the latest pointer that we have so when you launch a service you want to",
    "start": "1240730",
    "end": "1245830"
  },
  {
    "text": "launch it on the latest because it has all the feature functionality but it does not mean that by picking that you",
    "start": "1245830",
    "end": "1253330"
  },
  {
    "text": "will all to automatically be upgraded across versions let's just say well today latest points to 1.2 when we",
    "start": "1253330",
    "end": "1260290"
  },
  {
    "text": "launch 1.3 for example you will not be moved automatically it's you know you",
    "start": "1260290",
    "end": "1266950"
  },
  {
    "text": "have control or when you want to move across versions and the way to do it is",
    "start": "1266950",
    "end": "1274600"
  },
  {
    "text": "you know you don't have to change your application definition or your count of how many tasks you need you do a sort of",
    "start": "1274600",
    "end": "1280780"
  },
  {
    "text": "a force deployment and it triggers a new deployment to the 1.3 for example so just wanted to clarify that so for",
    "start": "1280780",
    "end": "1288100"
  },
  {
    "text": "example here you know you know one one way to think about it is you know I want to test any new platform version in my",
    "start": "1288100",
    "end": "1294880"
  },
  {
    "text": "beta cluster first and by the way these versions are only service specific so",
    "start": "1294880",
    "end": "1301150"
  },
  {
    "text": "it's not really a cluster setting but you can you can make a directional",
    "start": "1301150",
    "end": "1306720"
  },
  {
    "text": "decision to say well this is this is what the production traffic will run off right and and your services can can",
    "start": "1306720",
    "end": "1313870"
  },
  {
    "text": "migrate and deploy to 1.2 and you can use the latest and greatest in beta to qualify make sure things are working as",
    "start": "1313870",
    "end": "1320500"
  },
  {
    "text": "expected before you move your production environment as well so you know your",
    "start": "1320500",
    "end": "1329940"
  },
  {
    "text": "with your platform versions we you know you can you can safely",
    "start": "1329940",
    "end": "1335350"
  },
  {
    "text": "deploy across different different environments with respect to compliance",
    "start": "1335350",
    "end": "1343570"
  },
  {
    "text": "all ECS compliances apply to both forget an easy to launch type so ECS is",
    "start": "1343570",
    "end": "1352240"
  },
  {
    "start": "1351000",
    "end": "1365000"
  },
  {
    "text": "compliant with sock 1 2 3 PCI HIPAA and ISO and we're also looking at some other",
    "start": "1352240",
    "end": "1360400"
  },
  {
    "text": "compliances in the future happy to talk about that later some of our customers",
    "start": "1360400",
    "end": "1365650"
  },
  {
    "start": "1365000",
    "end": "1396000"
  },
  {
    "text": "who have been using Fargate at scale in the year since we launched are over here",
    "start": "1365650",
    "end": "1371100"
  },
  {
    "text": "one of them is KPMG and we are really fortunate to have them on stage so I'll",
    "start": "1371100",
    "end": "1376990"
  },
  {
    "text": "just hand it over to our again hi",
    "start": "1376990",
    "end": "1384789"
  },
  {
    "text": "everyone thanks for being here today my name is Ari Angad I'm a DevOps engineer at KPMG so I'm gonna be discussing with",
    "start": "1384789",
    "end": "1398409"
  },
  {
    "text": "you today a use case where by KPMG deployed micro services to AWS Fargate",
    "start": "1398409",
    "end": "1405240"
  },
  {
    "text": "we're going to be discussing how we took an existing solution already running in AWS we we redeveloped Andry architecture",
    "start": "1405240",
    "end": "1413470"
  },
  {
    "start": "1406000",
    "end": "1451000"
  },
  {
    "text": "that so that it could be micro services which could be containerized and then",
    "start": "1413470",
    "end": "1418600"
  },
  {
    "text": "deployed out to AWS Fargate and how we manage that CI CD pipeline for deploying",
    "start": "1418600",
    "end": "1425679"
  },
  {
    "text": "out the infrastructure and application so we were looking at how we could take that existing solution in an AWS",
    "start": "1425679",
    "end": "1432520"
  },
  {
    "text": "optimize it for scalability resiliency and elasticity for ease of deployment",
    "start": "1432520",
    "end": "1437770"
  },
  {
    "text": "and management by migrating to micro services and containers so a little bit",
    "start": "1437770",
    "end": "1443679"
  },
  {
    "text": "about me and mike kami and my role at KPMG I work in a team called Kyle docks",
    "start": "1443679",
    "end": "1449530"
  },
  {
    "text": "in KPM in solutions in digital I joined four years ago and when I joined there",
    "start": "1449530",
    "end": "1458500"
  },
  {
    "start": "1451000",
    "end": "1501000"
  },
  {
    "text": "was only three of us in the team with one project running in AWS we're now up",
    "start": "1458500",
    "end": "1464230"
  },
  {
    "text": "to nearly a hundred engineer we've got 250 production workloads 90%",
    "start": "1464230",
    "end": "1471919"
  },
  {
    "text": "of which are in AWS we've also got another arm of cloud ops where we're",
    "start": "1471919",
    "end": "1477590"
  },
  {
    "text": "actually going out to our clients and advising them on their business cloud tragedies now so we're delivering",
    "start": "1477590",
    "end": "1484330"
  },
  {
    "text": "technology solutions to our clients and also advising on them on how they can build out in the cloud to meet",
    "start": "1484330",
    "end": "1492380"
  },
  {
    "text": "regulations and compliance we work across all sectors globally so we have",
    "start": "1492380",
    "end": "1497960"
  },
  {
    "text": "clients not just in the UK but all over the world so the main sector that we're",
    "start": "1497960",
    "end": "1504830"
  },
  {
    "text": "working in at the moment is the financial services sector the use case I'm going to discuss with you today as a bank and most of our transformation",
    "start": "1504830",
    "end": "1511549"
  },
  {
    "text": "projects are in the financial services sector but we also have projects running with the government civil service retail",
    "start": "1511549",
    "end": "1517820"
  },
  {
    "text": "sector and also we've delivered solutions for our colleagues internally",
    "start": "1517820",
    "end": "1523159"
  },
  {
    "text": "in the tax and audit functions at KPMG so the solution that we I'm going to",
    "start": "1523159",
    "end": "1531679"
  },
  {
    "start": "1526000",
    "end": "1603000"
  },
  {
    "text": "discuss with you today so two years ago we built a customer due diligence solution for a global international bank",
    "start": "1531679",
    "end": "1537649"
  },
  {
    "text": "it's sort of know your customer type thing it's about 24 25 different applications all integrated running in",
    "start": "1537649",
    "end": "1544640"
  },
  {
    "text": "AWS it's been successfully running for the past over the over the past year and",
    "start": "1544640",
    "end": "1551809"
  },
  {
    "text": "so recently earlier this year we sold it on to another large bank based in the UK but we thought how can we look at we are",
    "start": "1551809",
    "end": "1559279"
  },
  {
    "text": "connecting this solution and redesign it so to optimize it for being in the cloud",
    "start": "1559279",
    "end": "1564380"
  },
  {
    "text": "the initial solution was it's been running successfully I had a lot of pets so we were having sequel server 2008",
    "start": "1564380",
    "end": "1571789"
  },
  {
    "text": "running on AC 2 which meant the need for database administrators privileged access management to those servers",
    "start": "1571789",
    "end": "1577809"
  },
  {
    "text": "regular patching so we wanted to look at how we could really check that so it",
    "start": "1577809",
    "end": "1583370"
  },
  {
    "text": "would be immutable scalable highly available for the for the new project so",
    "start": "1583370",
    "end": "1588980"
  },
  {
    "text": "our developers read redesign redeveloped the application the front-end to a number of micro services which could",
    "start": "1588980",
    "end": "1596030"
  },
  {
    "text": "then be containerized one in AWS elastic container service so",
    "start": "1596030",
    "end": "1604190"
  },
  {
    "text": "we went from running dotnet c-sharp code on in Windows ec2 web servers to running",
    "start": "1604190",
    "end": "1613700"
  },
  {
    "text": "with AWS far gate and containerized with a mixture of Python nodejs dotnet core",
    "start": "1613700",
    "end": "1619580"
  },
  {
    "text": "we went from our existing C ICD pipeline which was teamcity and octopus deploy to",
    "start": "1619580",
    "end": "1625610"
  },
  {
    "text": "deploying that don't let code out to Windows website PC to web servers to using docker and docker and Jenkins and",
    "start": "1625610",
    "end": "1635990"
  },
  {
    "start": "1633000",
    "end": "1685000"
  },
  {
    "text": "finally we were using confirmation as our infrastructure as code pipeline and we moved from that to terraform and the",
    "start": "1635990",
    "end": "1643730"
  },
  {
    "text": "reason for that is not because we have terraform or anything over and above",
    "start": "1643730",
    "end": "1649100"
  },
  {
    "text": "CloudFormation but the main reason being was because we as we grew over the past",
    "start": "1649100",
    "end": "1655160"
  },
  {
    "text": "two years to a much larger team we needed to standardize our infrastructure",
    "start": "1655160",
    "end": "1660320"
  },
  {
    "text": "as code pipelines so we had multiple projects that were using all the same repository of terraform code and that",
    "start": "1660320",
    "end": "1667190"
  },
  {
    "text": "allowed us allows us to put a set of security controls around every environment so that things such as AWS",
    "start": "1667190",
    "end": "1673430"
  },
  {
    "text": "config cloud trail enabled in all regions but also now we could take the solution and deploy that out to other",
    "start": "1673430",
    "end": "1680600"
  },
  {
    "text": "now we've built the Fargate modules we can now deploy the same solution after other clients so this is the reference",
    "start": "1680600",
    "end": "1687890"
  },
  {
    "start": "1685000",
    "end": "1732000"
  },
  {
    "text": "architecture that we came up with for our new customer due diligence solution",
    "start": "1687890",
    "end": "1693920"
  },
  {
    "text": "so underpinning the entire solution we had a workflow management tool that was actually running on ec2 Linux all in",
    "start": "1693920",
    "end": "1700910"
  },
  {
    "text": "auto-scaling highly available but then the rest of it was running with ECS",
    "start": "1700910",
    "end": "1706130"
  },
  {
    "text": "Fargate so it's a number of different micro services all one Fargate cluster",
    "start": "1706130",
    "end": "1711290"
  },
  {
    "text": "each micro service is a different service a different Fargate service some",
    "start": "1711290",
    "end": "1716570"
  },
  {
    "text": "of them are talking to s3 some of them dynamodb or using easiest task execution",
    "start": "1716570",
    "end": "1721910"
  },
  {
    "text": "roles with permissions out to those tables or buckets and each of them behind an application load balancer as",
    "start": "1721910",
    "end": "1728480"
  },
  {
    "text": "well and we're using service discovery for the apps to talk to each other why did",
    "start": "1728480",
    "end": "1734250"
  },
  {
    "start": "1732000",
    "end": "1747000"
  },
  {
    "text": "we go with ETS Fargo over ec2 we wanted to go for a managed container service first of all for a mutability we didn't",
    "start": "1734250",
    "end": "1740909"
  },
  {
    "text": "want the ability our developers or our administrators to be able to log in to those servers the cluster resource",
    "start": "1740909",
    "end": "1748559"
  },
  {
    "start": "1747000",
    "end": "1756000"
  },
  {
    "text": "provisioning is all handled by AWS Fargate we didn't have to manage the patching of the operating system so that",
    "start": "1748559",
    "end": "1754409"
  },
  {
    "text": "overheads from our team would be a lot lower it also handles scalability and",
    "start": "1754409",
    "end": "1760110"
  },
  {
    "start": "1756000",
    "end": "1790000"
  },
  {
    "text": "succour the security is managed by AWS so there's a smaller surface area for",
    "start": "1760110",
    "end": "1765240"
  },
  {
    "text": "attacks so we've designed our solution we've designed the reference",
    "start": "1765240",
    "end": "1770850"
  },
  {
    "text": "architecture how we want to deploy it and our developers have started building out these micro services with doctor",
    "start": "1770850",
    "end": "1776279"
  },
  {
    "text": "files in order for us to build out images that could be containerized then we had to start thinking about our path",
    "start": "1776279",
    "end": "1781980"
  },
  {
    "text": "to production how are we going to get from what we wanted to build from development into production and manage",
    "start": "1781980",
    "end": "1788460"
  },
  {
    "text": "that CI CD pipeline we had a different AWS account for each environment so one",
    "start": "1788460",
    "end": "1796740"
  },
  {
    "start": "1790000",
    "end": "1868000"
  },
  {
    "text": "for development for UAT pre-production production and then we had separate AWS",
    "start": "1796740",
    "end": "1802230"
  },
  {
    "text": "accounts for central services we actually had two one for production one for non production and that was a",
    "start": "1802230",
    "end": "1807419"
  },
  {
    "text": "security reason stipulated by the bank and in those accounts we had shared",
    "start": "1807419",
    "end": "1812880"
  },
  {
    "text": "services by the environments things such as the ECR repositories which the the",
    "start": "1812880",
    "end": "1818190"
  },
  {
    "text": "images were deployed to and then with permissions on those ECR repose our repositories out to the relevant",
    "start": "1818190",
    "end": "1824760"
  },
  {
    "text": "accounts other things such as Active Directory workspaces SES route 53 and",
    "start": "1824760",
    "end": "1832110"
  },
  {
    "text": "our Jenkins slaves were also sitting in those environments so we had a Jenkins",
    "start": "1832110",
    "end": "1837600"
  },
  {
    "text": "pipeline for CI CD which would when the developers commit their code into a bitbucket repository the Jenkins job",
    "start": "1837600",
    "end": "1844799"
  },
  {
    "text": "would be triggered it would build that image deploy that to the ECF at the CI repository in the central services",
    "start": "1844799",
    "end": "1851399"
  },
  {
    "text": "account and then that would be that would trigger another step in the Jenkins pipeline which would deploy that",
    "start": "1851399",
    "end": "1858149"
  },
  {
    "text": "to the Fargate service relevant to the micro service using the yes deploy CLI for simplicity we decided",
    "start": "1858149",
    "end": "1867070"
  },
  {
    "text": "to go for two different pipelines one for infrastructure deployment one for",
    "start": "1867070",
    "end": "1872470"
  },
  {
    "start": "1868000",
    "end": "1916000"
  },
  {
    "text": "application deployment the the top line is the infrastructure deployment",
    "start": "1872470",
    "end": "1877510"
  },
  {
    "text": "pipeline so when we commit our terraform code to a bitbucket repository to the",
    "start": "1877510",
    "end": "1882910"
  },
  {
    "text": "master branch that would trigger a deployment that would trigger the deployment of the terraform code out to the environments we're also using vault",
    "start": "1882910",
    "end": "1890230"
  },
  {
    "text": "for secret management and then the bottom line is the application deployment which is a bit bucket",
    "start": "1890230",
    "end": "1896320"
  },
  {
    "text": "repository the developers would commit that code there trigger a Jenkins job to",
    "start": "1896320",
    "end": "1901900"
  },
  {
    "text": "build the docker image deploy that to easier easier repository which would then trigger that to be deployed to the",
    "start": "1901900",
    "end": "1908740"
  },
  {
    "text": "EECS Fargate service in each environment so now I'm going to actually show you",
    "start": "1908740",
    "end": "1913870"
  },
  {
    "text": "what that looks like in Jenkins pipeline what what what the actual code look like",
    "start": "1913870",
    "end": "1919000"
  },
  {
    "text": "so it's written in groovy very simple pipeline set of stages this is a snippet from the first step of the pipeline",
    "start": "1919000",
    "end": "1925900"
  },
  {
    "text": "which is to pull a base image from the ECR repository sorry to pull a base",
    "start": "1925900",
    "end": "1931420"
  },
  {
    "text": "image that it sits in our ECI repository and all of our doctoral files are built off that image then checks out the code",
    "start": "1931420",
    "end": "1939370"
  },
  {
    "text": "that's been pushed to the bitbucket repository by our developers and then it",
    "start": "1939370",
    "end": "1944530"
  },
  {
    "text": "builds the image and pushes that to the ECR repository it tags this image with a",
    "start": "1944530",
    "end": "1949930"
  },
  {
    "text": "Jenkins build number so for versioning so we can keep track of each each release and then the next step is to",
    "start": "1949930",
    "end": "1957550"
  },
  {
    "text": "deploy that to Fargate and we chose to go with the aw the ACS deploy CLI which",
    "start": "1957550",
    "end": "1963850"
  },
  {
    "text": "is available on github the reason we didn't go with AWS CLI was because I",
    "start": "1963850",
    "end": "1969280"
  },
  {
    "text": "went at the time of building this it didn't allow us to update an individual property in a task definition that meant",
    "start": "1969280",
    "end": "1976960"
  },
  {
    "text": "we had to create a whole new task definition and then force update the service which was actually three separate AWS CLI commands which got a",
    "start": "1976960",
    "end": "1984250"
  },
  {
    "text": "bit messy but the easiest deploy allowed us to update just one property in the",
    "start": "1984250",
    "end": "1990700"
  },
  {
    "text": "task definition so the in this case the image can take the container name of the image which is the latest revision",
    "start": "1990700",
    "end": "1997880"
  },
  {
    "text": "that we've just deployed to our ECR repository so with the with the tag of the build number so just one very simple",
    "start": "1997880",
    "end": "2004720"
  },
  {
    "text": "command what that does is it updates the task definition creates a new revision and then automatically the service then",
    "start": "2004720",
    "end": "2011639"
  },
  {
    "text": "picks up the new task definition deploys a new container with the latest image and once that's up and healthy it will",
    "start": "2011639",
    "end": "2019830"
  },
  {
    "text": "take down the previous version going back to our deployment pipeline",
    "start": "2019830",
    "end": "2025960"
  },
  {
    "text": "so that's we've just discussed the pipeline for the application deployment however in a minute we're gonna have a",
    "start": "2025960",
    "end": "2033190"
  },
  {
    "text": "look at the task definition Jason which is deployed by terraform and this has an image tag in that this ha that's in that",
    "start": "2033190",
    "end": "2040779"
  },
  {
    "text": "terraform state file so if we were to then go ahead and run our terraform pipeline it's going to roll back to the",
    "start": "2040779",
    "end": "2047919"
  },
  {
    "text": "tag on that task definition Jason and it was gonna roll back our image to whatever that is because that's what's",
    "start": "2047919",
    "end": "2053888"
  },
  {
    "text": "it within the state file so we had conflicting pipelines here we had to look at how we could manage this going",
    "start": "2053889",
    "end": "2059440"
  },
  {
    "text": "forward as we were starting to build more and more releases we couldn't keep updating the terraform each time so",
    "start": "2059440",
    "end": "2067179"
  },
  {
    "start": "2066000",
    "end": "2088000"
  },
  {
    "text": "looking at the itas definition Jason you can see here the image the tag there is latest so anything Tigers latest is what",
    "start": "2067179",
    "end": "2074530"
  },
  {
    "text": "terraform once the image to be in your container so if we're we're tagging it with that Jenkins build number as well",
    "start": "2074530",
    "end": "2080069"
  },
  {
    "text": "it's gonna roll back when we were on terraform what we did is I'm going to show you some snippets of our terraform",
    "start": "2080069",
    "end": "2085960"
  },
  {
    "text": "code now if we output a data source in our Fargate module which I'll put the",
    "start": "2085960",
    "end": "2092740"
  },
  {
    "text": "task definition family of the micro service and this man that every time terraform was run the Fargate service",
    "start": "2092740",
    "end": "2099190"
  },
  {
    "text": "resource would look for the the most recently deployed revision of the task definition rather than the task",
    "start": "2099190",
    "end": "2104829"
  },
  {
    "text": "definition defined in the tariff on state farm lastly we had to think about",
    "start": "2104829",
    "end": "2111970"
  },
  {
    "text": "how our services were going to talk to their the relevant s3 buckets DynamoDB",
    "start": "2111970",
    "end": "2118060"
  },
  {
    "text": "and each other so this is back to a reference architecture looking here you can see some of them are using different",
    "start": "2118060",
    "end": "2123450"
  },
  {
    "text": "services with the roles defined but we actually had to find environment variables in order for them to talk to",
    "start": "2123450",
    "end": "2130050"
  },
  {
    "text": "each other so for example as you would with da koat our games in Fargate you use environment variables so looking",
    "start": "2130050",
    "end": "2136200"
  },
  {
    "text": "back at the task definition JSON you can see here we've defined in that template file the environment variables that we",
    "start": "2136200",
    "end": "2142980"
  },
  {
    "text": "want that microservice to be talking to and then in our terraform resource",
    "start": "2142980",
    "end": "2147990"
  },
  {
    "text": "module that gets deployed out as part of our infrastructure as code to pipeline we reference the template file which is",
    "start": "2147990",
    "end": "2155370"
  },
  {
    "start": "2148000",
    "end": "2195000"
  },
  {
    "text": "the task definition JSON file and then we add there the required variables so",
    "start": "2155370",
    "end": "2162510"
  },
  {
    "text": "in this case you've got the service discovery employ the an s3 bucket and the good thing about this as well as we",
    "start": "2162510",
    "end": "2169080"
  },
  {
    "text": "can actually reference other modules that were deployed as part of our terraform infrastructure escrow pipeline",
    "start": "2169080",
    "end": "2174810"
  },
  {
    "text": "because so you can see here it's looking for an s3 bucket as part of another module so we don't have to run separate",
    "start": "2174810",
    "end": "2180630"
  },
  {
    "text": "separate hard coded s3 buckets here we can we can reference that so we we",
    "start": "2180630",
    "end": "2189030"
  },
  {
    "text": "wanted to deploy to the far gate we had our with deployed all of our CI CD",
    "start": "2189030",
    "end": "2194340"
  },
  {
    "text": "pipelines how did we convince the client of the bank to go with far gate and containers well containers the the banks",
    "start": "2194340",
    "end": "2202980"
  },
  {
    "text": "already understand the benefits of docker if it isn't deployment and scalability we found that far we were",
    "start": "2202980",
    "end": "2210540"
  },
  {
    "text": "able to convince them Fargate integrates very well with the other AWS services that we were planning on using for them",
    "start": "2210540",
    "end": "2215880"
  },
  {
    "text": "so in CCS ECR we could use the advanced existing tool sets and skill sets so",
    "start": "2215880",
    "end": "2223590"
  },
  {
    "text": "they were already using Jenkins and bit bucket so we could reuse that and then therefore we can use the skills that",
    "start": "2223590",
    "end": "2230250"
  },
  {
    "text": "they already had we actually found that there was a compared to running easy to",
    "start": "2230250",
    "end": "2235920"
  },
  {
    "text": "launch type the cost of ownership was actually lower than EC to EC SEC 2",
    "start": "2235920",
    "end": "2242510"
  },
  {
    "text": "because of thing overheads like managing patching and so on and obviously the AWS",
    "start": "2242510",
    "end": "2251490"
  },
  {
    "text": "stacks speak for themselves we had they've got the SLA and all compliance controls that with Fargate which actually worked out more secure",
    "start": "2251490",
    "end": "2257770"
  },
  {
    "text": "for going with Fargate than with ec2 which was obviously a very big positive",
    "start": "2257770",
    "end": "2263710"
  },
  {
    "text": "for the bank additionally we had to put additional security controls on it naturally",
    "start": "2263710",
    "end": "2270840"
  },
  {
    "start": "2268000",
    "end": "2330000"
  },
  {
    "text": "Fargate runs in your own VPC so all the networking and subnets is controlled by",
    "start": "2270840",
    "end": "2276010"
  },
  {
    "text": "you so we could ensure that we were putting it in private subnets we had those security group rules we had that control over the networking we have all",
    "start": "2276010",
    "end": "2284680"
  },
  {
    "text": "of the micro services behind an application load balancer which allows us to put a AWS wife in front of that",
    "start": "2284680",
    "end": "2290620"
  },
  {
    "text": "with SSL terminating on the load balancers we've got all logs enabled and",
    "start": "2290620",
    "end": "2296200"
  },
  {
    "text": "it's shipped to carwash logs the integration with ACS Fargo and cloud which looks and we also use a third-party tool called twist lock for",
    "start": "2296200",
    "end": "2303490"
  },
  {
    "text": "that for container security so we can create our own policies which ensure security right from the creation of that",
    "start": "2303490",
    "end": "2309220"
  },
  {
    "text": "image to the deployed contain their eyes to microservices in Fargate and finally",
    "start": "2309220",
    "end": "2315240"
  },
  {
    "text": "AWS managed service so we can be sure the security controls are in place at the server level with the automatic",
    "start": "2315240",
    "end": "2321220"
  },
  {
    "text": "scalability to mitigate in the event of any attacks so why did we go with AWS",
    "start": "2321220",
    "end": "2330090"
  },
  {
    "start": "2330000",
    "end": "2388000"
  },
  {
    "text": "well we've been using AWS now for 4 years and we found that it allows us to",
    "start": "2330090",
    "end": "2335560"
  },
  {
    "text": "significantly reduce our costs compared to running things on premise we're able to take advantage as a team wide wider",
    "start": "2335560",
    "end": "2343120"
  },
  {
    "text": "team where I'm able to take advantage of things like bring your own license with RDS and reserved instances we found that",
    "start": "2343120",
    "end": "2352540"
  },
  {
    "text": "we've already got our infrastructure as code there we've already built it we can deploy our environments incredibly quickly for new projects taking existing",
    "start": "2352540",
    "end": "2359560"
  },
  {
    "text": "solutions and deploying them to new clients so the speed of delivery is much quicker and finally we've already got",
    "start": "2359560",
    "end": "2365380"
  },
  {
    "text": "our existing CICP pipelines which lend themselves to AWS so we're allowed to collaborate with our developers that",
    "start": "2365380",
    "end": "2371260"
  },
  {
    "text": "have a developed culture get that application code deployed quickly iterate on that and get our new",
    "start": "2371260",
    "end": "2377320"
  },
  {
    "text": "iterations to our clients much faster so what's the future for KPMG and AWS",
    "start": "2377320",
    "end": "2386519"
  },
  {
    "text": "well as I mentioned we've got - we've got 90 percent of our production",
    "start": "2386519",
    "end": "2391559"
  },
  {
    "start": "2388000",
    "end": "2422000"
  },
  {
    "text": "workloads already in AWS we're hosting banks banking clients Compton's data in",
    "start": "2391559",
    "end": "2396930"
  },
  {
    "text": "AWS we've got a growing team of certified engineers so I would say elite",
    "start": "2396930",
    "end": "2403769"
  },
  {
    "text": "most of our team have at least one a degree or certification we've got an alliance partnership with AWS and as I",
    "start": "2403769",
    "end": "2411509"
  },
  {
    "text": "mentioned before we've been growing exponentially over the last four years and there's no science of that slowing",
    "start": "2411509",
    "end": "2416880"
  },
  {
    "text": "down so there's no science of our usage of AWS slowing down either thank you",
    "start": "2416880",
    "end": "2423420"
  },
  {
    "start": "2422000",
    "end": "2436000"
  },
  {
    "text": "very much all for listening any questions and just come find us at the end and please also give your feedback",
    "start": "2423420",
    "end": "2429779"
  },
  {
    "text": "on the app thanks all for coming [Applause]",
    "start": "2429779",
    "end": "2438420"
  }
]