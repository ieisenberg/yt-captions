[
  {
    "start": "0",
    "end": "16000"
  },
  {
    "text": "hello and welcome to this lightning talk",
    "start": "760",
    "end": "3199"
  },
  {
    "text": "on lazy loading container images on ads",
    "start": "3199",
    "end": "5960"
  },
  {
    "text": "fargate with seekable",
    "start": "5960",
    "end": "8760"
  },
  {
    "text": "OC my name is OE pomoy and I'm a senior",
    "start": "8760",
    "end": "12240"
  },
  {
    "text": "developer advocate here at",
    "start": "12240",
    "end": "15799"
  },
  {
    "start": "16000",
    "end": "57000"
  },
  {
    "text": "AWS ads fargate is a serverless computer",
    "start": "16439",
    "end": "19880"
  },
  {
    "text": "engine for",
    "start": "19880",
    "end": "22279"
  },
  {
    "text": "containers fargate removes the",
    "start": "22279",
    "end": "24680"
  },
  {
    "text": "undifferentiated heavy lifting of",
    "start": "24680",
    "end": "27119"
  },
  {
    "text": "maintaining Amis and managing the",
    "start": "27119",
    "end": "30000"
  },
  {
    "text": "underlying Amazon ec2",
    "start": "30000",
    "end": "33840"
  },
  {
    "text": "instances and far8 secures the",
    "start": "34760",
    "end": "37360"
  },
  {
    "text": "underlying infrastructure to run your",
    "start": "37360",
    "end": "39360"
  },
  {
    "text": "workloads because every container is run",
    "start": "39360",
    "end": "42280"
  },
  {
    "text": "on a single use single tenant ec2",
    "start": "42280",
    "end": "47718"
  },
  {
    "text": "instance with ad fargate you only pay",
    "start": "48440",
    "end": "51559"
  },
  {
    "text": "for what you use and your build by the",
    "start": "51559",
    "end": "56960"
  },
  {
    "start": "57000",
    "end": "124000"
  },
  {
    "text": "second when customers started adopting",
    "start": "57480",
    "end": "60600"
  },
  {
    "text": "containers people traditionally use them",
    "start": "60600",
    "end": "63039"
  },
  {
    "text": "for microservices or API and webbased",
    "start": "63039",
    "end": "66720"
  },
  {
    "text": "workloads but since then we've seen an",
    "start": "66720",
    "end": "69560"
  },
  {
    "text": "explosion in the use cases that people",
    "start": "69560",
    "end": "71960"
  },
  {
    "text": "use containers",
    "start": "71960",
    "end": "74479"
  },
  {
    "text": "for and in the past year or two on ads",
    "start": "74479",
    "end": "77680"
  },
  {
    "text": "fargate we have seen customers use",
    "start": "77680",
    "end": "81119"
  },
  {
    "text": "things like CPU based machine learning",
    "start": "81119",
    "end": "84439"
  },
  {
    "text": "training batch and parallel processing",
    "start": "84439",
    "end": "87759"
  },
  {
    "text": "and data processing pipeline work",
    "start": "87759",
    "end": "89920"
  },
  {
    "text": "workloads on AWS",
    "start": "89920",
    "end": "93680"
  },
  {
    "text": "fargate with these new workload types we",
    "start": "93880",
    "end": "97119"
  },
  {
    "text": "have seen an increase in the size of the",
    "start": "97119",
    "end": "99119"
  },
  {
    "text": "container images that people are",
    "start": "99119",
    "end": "101240"
  },
  {
    "text": "attempting to",
    "start": "101240",
    "end": "102920"
  },
  {
    "text": "run and on ads fargate the size of the",
    "start": "102920",
    "end": "106240"
  },
  {
    "text": "container image is directly proportional",
    "start": "106240",
    "end": "108920"
  },
  {
    "text": "to the time it takes to start your",
    "start": "108920",
    "end": "111399"
  },
  {
    "text": "workload and that's because we have to",
    "start": "111399",
    "end": "113640"
  },
  {
    "text": "download your container image every",
    "start": "113640",
    "end": "115880"
  },
  {
    "text": "single time because it is a single use",
    "start": "115880",
    "end": "118680"
  },
  {
    "text": "and single tenant",
    "start": "118680",
    "end": "120399"
  },
  {
    "text": "piece of easy to",
    "start": "120399",
    "end": "123399"
  },
  {
    "start": "124000",
    "end": "172000"
  },
  {
    "text": "infrastructure on behalf of our",
    "start": "125840",
    "end": "127600"
  },
  {
    "text": "customers we have been looking at ways",
    "start": "127600",
    "end": "129679"
  },
  {
    "text": "to reduce the time taken to launch",
    "start": "129679",
    "end": "131920"
  },
  {
    "text": "fargate",
    "start": "131920",
    "end": "133040"
  },
  {
    "text": "tasks and this led us on to Laz",
    "start": "133040",
    "end": "136840"
  },
  {
    "text": "loading now lazy loading is technology",
    "start": "136840",
    "end": "139680"
  },
  {
    "text": "that's traditionally used in web",
    "start": "139680",
    "end": "142239"
  },
  {
    "text": "development and here all of the data of",
    "start": "142239",
    "end": "145000"
  },
  {
    "text": "a website wouldn't be downloaded up",
    "start": "145000",
    "end": "146560"
  },
  {
    "text": "front instead would be downloaded when",
    "start": "146560",
    "end": "149239"
  },
  {
    "text": "the user",
    "start": "149239",
    "end": "150280"
  },
  {
    "text": "requests",
    "start": "150280",
    "end": "152280"
  },
  {
    "text": "it Translating that to container images",
    "start": "152280",
    "end": "156040"
  },
  {
    "text": "what we're able to do is we're able to",
    "start": "156040",
    "end": "158280"
  },
  {
    "text": "start a container almost",
    "start": "158280",
    "end": "161040"
  },
  {
    "text": "instantaneously and then when the",
    "start": "161040",
    "end": "163159"
  },
  {
    "text": "application requests a particular file",
    "start": "163159",
    "end": "165840"
  },
  {
    "text": "or binary we go and retrieve it from the",
    "start": "165840",
    "end": "169080"
  },
  {
    "text": "container",
    "start": "169080",
    "end": "171560"
  },
  {
    "start": "172000",
    "end": "204000"
  },
  {
    "text": "repository at the end of 2022 AWS",
    "start": "173959",
    "end": "177560"
  },
  {
    "text": "announced a new open- source project",
    "start": "177560",
    "end": "179800"
  },
  {
    "text": "called seekable",
    "start": "179800",
    "end": "181840"
  },
  {
    "text": "oci or SOI for",
    "start": "181840",
    "end": "185599"
  },
  {
    "text": "short and seekable oci is the underlying",
    "start": "185599",
    "end": "188920"
  },
  {
    "text": "technology that enables lazy",
    "start": "188920",
    "end": "192000"
  },
  {
    "text": "loading it provides the capability for",
    "start": "192000",
    "end": "195000"
  },
  {
    "text": "us to extract a subset of a existing",
    "start": "195000",
    "end": "198200"
  },
  {
    "text": "container image while it is stored",
    "start": "198200",
    "end": "200599"
  },
  {
    "text": "inside of the",
    "start": "200599",
    "end": "203239"
  },
  {
    "start": "204000",
    "end": "299000"
  },
  {
    "text": "repository it's able to do this because",
    "start": "205159",
    "end": "208599"
  },
  {
    "text": "you create a SOI index of your container",
    "start": "208599",
    "end": "213239"
  },
  {
    "text": "image the SOI index is a metadata file",
    "start": "213239",
    "end": "217400"
  },
  {
    "text": "that tells us exactly which files are in",
    "start": "217400",
    "end": "219720"
  },
  {
    "text": "your container image and where within",
    "start": "219720",
    "end": "222159"
  },
  {
    "text": "that container image they are",
    "start": "222159",
    "end": "225439"
  },
  {
    "text": "stored we are able to generate a SEI",
    "start": "225799",
    "end": "229120"
  },
  {
    "text": "index without modifying that existing",
    "start": "229120",
    "end": "231879"
  },
  {
    "text": "container image so your secure security",
    "start": "231879",
    "end": "234680"
  },
  {
    "text": "supply chain remains",
    "start": "234680",
    "end": "237959"
  },
  {
    "text": "intact SEI stores that index alongside",
    "start": "238680",
    "end": "242480"
  },
  {
    "text": "of the container image in the container",
    "start": "242480",
    "end": "247079"
  },
  {
    "text": "repository there are no changes to the",
    "start": "247400",
    "end": "249560"
  },
  {
    "text": "application code or the container image",
    "start": "249560",
    "end": "253159"
  },
  {
    "text": "or even the ECS task definition to use",
    "start": "253159",
    "end": "256479"
  },
  {
    "text": "seekable",
    "start": "256479",
    "end": "258959"
  },
  {
    "text": "oci once you've created that se sheet",
    "start": "259560",
    "end": "262320"
  },
  {
    "text": "index ads fargate will detect it in the",
    "start": "262320",
    "end": "265840"
  },
  {
    "text": "container",
    "start": "265840",
    "end": "267840"
  },
  {
    "text": "repository if it exists",
    "start": "267840",
    "end": "270280"
  },
  {
    "text": "fargate will lazy load your container",
    "start": "270280",
    "end": "272280"
  },
  {
    "text": "image reducing your launch",
    "start": "272280",
    "end": "275520"
  },
  {
    "text": "time if the index does not exist it",
    "start": "275520",
    "end": "279039"
  },
  {
    "text": "fargate will fail back and download your",
    "start": "279039",
    "end": "281280"
  },
  {
    "text": "container image in full as it has done",
    "start": "281280",
    "end": "285720"
  },
  {
    "text": "before SOI is available on ads fargate",
    "start": "286639",
    "end": "289600"
  },
  {
    "text": "at no additional cost and is available",
    "start": "289600",
    "end": "291880"
  },
  {
    "text": "for Linux tasks on platform version 1.4",
    "start": "291880",
    "end": "295160"
  },
  {
    "text": "or",
    "start": "295160",
    "end": "297440"
  },
  {
    "text": "newer",
    "start": "298560",
    "end": "300240"
  },
  {
    "start": "299000",
    "end": "583000"
  },
  {
    "text": "let's start the demonstration in the",
    "start": "300240",
    "end": "301840"
  },
  {
    "text": "Amazon ECS",
    "start": "301840",
    "end": "304479"
  },
  {
    "text": "console here you can see that I have no",
    "start": "304479",
    "end": "307160"
  },
  {
    "text": "running workloads there are no tasks",
    "start": "307160",
    "end": "310320"
  },
  {
    "text": "currently in my",
    "start": "310320",
    "end": "313199"
  },
  {
    "text": "cluster I have however created two task",
    "start": "314520",
    "end": "318960"
  },
  {
    "text": "definitions a task definition in Amazon",
    "start": "318960",
    "end": "321479"
  },
  {
    "text": "ECS is how we Define our",
    "start": "321479",
    "end": "324199"
  },
  {
    "text": "workloads here I have defined my",
    "start": "324199",
    "end": "326840"
  },
  {
    "text": "containers the container images and",
    "start": "326840",
    "end": "329919"
  },
  {
    "text": "various runtime",
    "start": "329919",
    "end": "333039"
  },
  {
    "text": "parameters I have created two task",
    "start": "333080",
    "end": "335800"
  },
  {
    "text": "definitions one called P to training and",
    "start": "335800",
    "end": "339560"
  },
  {
    "text": "a second called py to training no",
    "start": "339560",
    "end": "343880"
  },
  {
    "text": "index if we explore the raw file of that",
    "start": "344919",
    "end": "348039"
  },
  {
    "text": "first task definition you can see that I",
    "start": "348039",
    "end": "351039"
  },
  {
    "text": "have defined a single",
    "start": "351039",
    "end": "354639"
  },
  {
    "text": "container that container is called pyto",
    "start": "355560",
    "end": "358479"
  },
  {
    "text": "training and it is using a container",
    "start": "358479",
    "end": "362000"
  },
  {
    "text": "image that I have defined and stored in",
    "start": "362000",
    "end": "364720"
  },
  {
    "text": "my Amazon ECR",
    "start": "364720",
    "end": "368080"
  },
  {
    "text": "repository outside of that you can see",
    "start": "371120",
    "end": "373759"
  },
  {
    "text": "some entry point commands and some login",
    "start": "373759",
    "end": "376319"
  },
  {
    "text": "configuration has been",
    "start": "376319",
    "end": "379520"
  },
  {
    "text": "defined if you look in the second task",
    "start": "380120",
    "end": "382680"
  },
  {
    "text": "definition here you'll notice it's",
    "start": "382680",
    "end": "384800"
  },
  {
    "text": "labeled no index it is almost identical",
    "start": "384800",
    "end": "389639"
  },
  {
    "text": "the same runtime parameters the same",
    "start": "389639",
    "end": "392440"
  },
  {
    "text": "single container image but a slightly",
    "start": "392440",
    "end": "395599"
  },
  {
    "text": "different container image",
    "start": "395599",
    "end": "398960"
  },
  {
    "text": "name the first task definition is",
    "start": "399560",
    "end": "402360"
  },
  {
    "text": "pulling from a repository called pyo",
    "start": "402360",
    "end": "405919"
  },
  {
    "text": "training here you can see I have a",
    "start": "405919",
    "end": "407960"
  },
  {
    "text": "container image called latest as well as",
    "start": "407960",
    "end": "411440"
  },
  {
    "text": "a sear sheet",
    "start": "411440",
    "end": "413360"
  },
  {
    "text": "index a seet index is our metadata file",
    "start": "413360",
    "end": "417080"
  },
  {
    "text": "that we can use to find individual files",
    "start": "417080",
    "end": "420360"
  },
  {
    "text": "within our container",
    "start": "420360",
    "end": "423479"
  },
  {
    "text": "image we also have a second metadata",
    "start": "423479",
    "end": "426199"
  },
  {
    "text": "file that fargate uses to identify which",
    "start": "426199",
    "end": "429759"
  },
  {
    "text": "index to",
    "start": "429759",
    "end": "432400"
  },
  {
    "text": "use in my second ECR repository that I'm",
    "start": "433160",
    "end": "436560"
  },
  {
    "text": "using in the second task definition I",
    "start": "436560",
    "end": "439000"
  },
  {
    "text": "just have the container image there are",
    "start": "439000",
    "end": "441639"
  },
  {
    "text": "no SOI artifacts here but the container",
    "start": "441639",
    "end": "444360"
  },
  {
    "text": "image is identical to the last",
    "start": "444360",
    "end": "448159"
  },
  {
    "text": "one",
    "start": "448319",
    "end": "450280"
  },
  {
    "text": "next I'm going to start a number of",
    "start": "450280",
    "end": "453000"
  },
  {
    "text": "tasks on my Amazon ECS cluster and I'm",
    "start": "453000",
    "end": "456400"
  },
  {
    "text": "going to do so using the Run task",
    "start": "456400",
    "end": "460560"
  },
  {
    "text": "command I'm going to launch two",
    "start": "461000",
    "end": "464199"
  },
  {
    "text": "different commands each starting two ECS",
    "start": "464199",
    "end": "470199"
  },
  {
    "text": "tasks these tasks will use the launch",
    "start": "470280",
    "end": "473000"
  },
  {
    "text": "type fargate and Below you can see the",
    "start": "473000",
    "end": "476120"
  },
  {
    "text": "task definitions I have used so there'll",
    "start": "476120",
    "end": "478599"
  },
  {
    "text": "be two Tas tasks from the first task",
    "start": "478599",
    "end": "480639"
  },
  {
    "text": "definition there'll be two tasks from",
    "start": "480639",
    "end": "482879"
  },
  {
    "text": "the second task",
    "start": "482879",
    "end": "485120"
  },
  {
    "text": "definition outside of that I have",
    "start": "485120",
    "end": "487280"
  },
  {
    "text": "defined my cluster and the VPC",
    "start": "487280",
    "end": "491840"
  },
  {
    "text": "configuration I'll now execute that by",
    "start": "496639",
    "end": "499000"
  },
  {
    "text": "Script starting the four tasks on my",
    "start": "499000",
    "end": "503960"
  },
  {
    "text": "cluster a quick check back in the Amazon",
    "start": "504560",
    "end": "507440"
  },
  {
    "text": "ECS console and refresh of the page we",
    "start": "507440",
    "end": "510879"
  },
  {
    "text": "should now have our four tasks",
    "start": "510879",
    "end": "514640"
  },
  {
    "text": "provisioning this is the first state of",
    "start": "514640",
    "end": "516919"
  },
  {
    "text": "a task life",
    "start": "516919",
    "end": "519839"
  },
  {
    "text": "cycle you can see that I have my four",
    "start": "519839",
    "end": "522159"
  },
  {
    "text": "tasks two from each task",
    "start": "522159",
    "end": "526000"
  },
  {
    "text": "definition quick refresh of that page",
    "start": "527640",
    "end": "530040"
  },
  {
    "text": "has shown that tasks from the first task",
    "start": "530040",
    "end": "532399"
  },
  {
    "text": "definition pyto training have started",
    "start": "532399",
    "end": "535680"
  },
  {
    "text": "almost",
    "start": "535680",
    "end": "536839"
  },
  {
    "text": "instantly we haven't waited for a long",
    "start": "536839",
    "end": "539240"
  },
  {
    "text": "large multi- gigabyte container image to",
    "start": "539240",
    "end": "542000"
  },
  {
    "text": "be downloaded before we've moved those",
    "start": "542000",
    "end": "544240"
  },
  {
    "text": "tasks into the running",
    "start": "544240",
    "end": "547480"
  },
  {
    "text": "state if you refresh again you'll see",
    "start": "547720",
    "end": "551160"
  },
  {
    "text": "that the py toch training no index tasks",
    "start": "551160",
    "end": "553800"
  },
  {
    "text": "have finally",
    "start": "553800",
    "end": "555200"
  },
  {
    "text": "started these had to wait because we had",
    "start": "555200",
    "end": "558120"
  },
  {
    "text": "to download the container image in full",
    "start": "558120",
    "end": "561079"
  },
  {
    "text": "they were not using SOI and therefore",
    "start": "561079",
    "end": "563440"
  },
  {
    "text": "they were not lazy",
    "start": "563440",
    "end": "565800"
  },
  {
    "text": "loaded here remember I have not modified",
    "start": "565800",
    "end": "568360"
  },
  {
    "text": "my container image or my application in",
    "start": "568360",
    "end": "570880"
  },
  {
    "text": "any way I've just generated a SOI",
    "start": "570880",
    "end": "575480"
  },
  {
    "text": "index thank",
    "start": "575480",
    "end": "578680"
  },
  {
    "text": "you",
    "start": "582440",
    "end": "585440"
  }
]