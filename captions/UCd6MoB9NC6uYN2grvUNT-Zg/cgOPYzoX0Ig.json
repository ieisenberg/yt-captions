[
  {
    "start": "0",
    "end": "46000"
  },
  {
    "text": "- Welcome to \"Back To Basics\".",
    "start": "6930",
    "end": "9120"
  },
  {
    "text": "In this episode,",
    "start": "9120",
    "end": "10139"
  },
  {
    "text": "I will discuss patterns for securing",
    "start": "10140",
    "end": "12150"
  },
  {
    "text": "your Amazon Elastic Kubernetes\nService or EKS clusters.",
    "start": "12150",
    "end": "16260"
  },
  {
    "text": "When discussing security on AWS,",
    "start": "16260",
    "end": "18360"
  },
  {
    "text": "one of the first things to remember",
    "start": "18360",
    "end": "20010"
  },
  {
    "text": "is that security on AWS is\na shared responsibility.",
    "start": "20010",
    "end": "23790"
  },
  {
    "text": "The same also applies to EKS.",
    "start": "23790",
    "end": "26130"
  },
  {
    "text": "Whether you manage the\nEKS node group yourself",
    "start": "26130",
    "end": "29009"
  },
  {
    "text": "or use managed node groups.",
    "start": "29010",
    "end": "31290"
  },
  {
    "text": "However, you will notice",
    "start": "31290",
    "end": "33300"
  },
  {
    "text": "that as you move towards\nmore managed services,",
    "start": "33300",
    "end": "36371"
  },
  {
    "text": "AWS takes on more competence\nof responsibility.",
    "start": "36372",
    "end": "39676"
  },
  {
    "text": "Let's take one of the most\ncommon use cases as an example,",
    "start": "39676",
    "end": "43590"
  },
  {
    "text": "to host a web API in EKS.",
    "start": "43590",
    "end": "46410"
  },
  {
    "start": "46000",
    "end": "75000"
  },
  {
    "text": "Using a managed node group",
    "start": "46410",
    "end": "48180"
  },
  {
    "text": "will put you in between\nself-managed and EKS Fargate,",
    "start": "48180",
    "end": "52080"
  },
  {
    "text": "but enable you to offload\nthe responsibility",
    "start": "52080",
    "end": "54480"
  },
  {
    "text": "for the OS, Kubelet, CRI,\nand AMI configuration to AWS.",
    "start": "54480",
    "end": "59480"
  },
  {
    "text": "If using self-managed nodes,",
    "start": "60000",
    "end": "62160"
  },
  {
    "text": "you should keep working nodes OS updated",
    "start": "62160",
    "end": "64650"
  },
  {
    "text": "and minimize access to worker\nnodes by not enabling SSH",
    "start": "64650",
    "end": "68760"
  },
  {
    "text": "and using tools like SSM\nSession Manager instead",
    "start": "68760",
    "end": "72210"
  },
  {
    "text": "and have minimal IAM policies.",
    "start": "72210",
    "end": "74523"
  },
  {
    "start": "75000",
    "end": "165000"
  },
  {
    "text": "The first security pattern is\ndesigned for access control.",
    "start": "75750",
    "end": "79950"
  },
  {
    "text": "You should not use service account tokens",
    "start": "79950",
    "end": "82200"
  },
  {
    "text": "for authentication.",
    "start": "82200",
    "end": "84210"
  },
  {
    "text": "A service account token is a\nlong-lived static credential.",
    "start": "84210",
    "end": "87630"
  },
  {
    "text": "If it is compromised, lost or stolen,",
    "start": "87630",
    "end": "90540"
  },
  {
    "text": "an attacker may be able to perform",
    "start": "90540",
    "end": "92400"
  },
  {
    "text": "all the actions associated with that token",
    "start": "92400",
    "end": "95010"
  },
  {
    "text": "until the service account is deleted.",
    "start": "95010",
    "end": "97470"
  },
  {
    "text": "Instead, use role-based\naccess control or RBAC.",
    "start": "97470",
    "end": "101640"
  },
  {
    "text": "RBAC helps you adhere to least\nprivileged principle access",
    "start": "101640",
    "end": "105360"
  },
  {
    "text": "to AWS resources,",
    "start": "105360",
    "end": "107310"
  },
  {
    "text": "Role bindings and cluster role bindings",
    "start": "107310",
    "end": "109829"
  },
  {
    "text": "should be least privileged",
    "start": "109830",
    "end": "111240"
  },
  {
    "text": "and only have permissions necessary",
    "start": "111240",
    "end": "113400"
  },
  {
    "text": "to perform a specific function.",
    "start": "113400",
    "end": "115980"
  },
  {
    "text": "Instead of an IAM user,",
    "start": "115980",
    "end": "117720"
  },
  {
    "text": "create an entry in the AWS-auth config map",
    "start": "117720",
    "end": "121380"
  },
  {
    "text": "for that user to map to a\nspecific Kubernetes RBAC group.",
    "start": "121380",
    "end": "126119"
  },
  {
    "text": "Although API calls to the\ncluster need to be authorized,",
    "start": "126120",
    "end": "129899"
  },
  {
    "text": "you can enhance security",
    "start": "129900",
    "end": "131340"
  },
  {
    "text": "by making the cluster endpoint private.",
    "start": "131340",
    "end": "133860"
  },
  {
    "text": "It is also recommended to\nupdate the AWS-node DaemonSet",
    "start": "133860",
    "end": "138230"
  },
  {
    "text": "to use IRSA or an IAM\nrole for service account",
    "start": "138230",
    "end": "142470"
  },
  {
    "text": "to prevent all pods from\nhaving unnecessary permissions",
    "start": "142470",
    "end": "145650"
  },
  {
    "text": "to manage infrastructure.",
    "start": "145650",
    "end": "147540"
  },
  {
    "text": "When using IRSA, it is\nstrongly recommended",
    "start": "147540",
    "end": "150810"
  },
  {
    "text": "that you block access to instance metadata",
    "start": "150810",
    "end": "153390"
  },
  {
    "text": "to minimize the blast radius of a breach",
    "start": "153390",
    "end": "155700"
  },
  {
    "text": "and preventing the pod from inheriting",
    "start": "155700",
    "end": "157950"
  },
  {
    "text": "the instance profile\nrights of the worker nodes.",
    "start": "157950",
    "end": "161280"
  },
  {
    "text": "Finally, run the applications\nas a non-root user.",
    "start": "161280",
    "end": "165600"
  },
  {
    "start": "165000",
    "end": "328000"
  },
  {
    "text": "The second pattern deals with networking.",
    "start": "165600",
    "end": "168000"
  },
  {
    "text": "Again, start with the\nprinciple of least privilege.",
    "start": "168000",
    "end": "171330"
  },
  {
    "text": "You can start with a\ndeny all network policy",
    "start": "171330",
    "end": "174300"
  },
  {
    "text": "and start by allowing a rule",
    "start": "174300",
    "end": "176160"
  },
  {
    "text": "to allow DNS queries to the core DNS.",
    "start": "176160",
    "end": "179580"
  },
  {
    "text": "You can then incrementally allow",
    "start": "179580",
    "end": "181350"
  },
  {
    "text": "selective flow of traffic\nbetween namespace and pods",
    "start": "181350",
    "end": "185010"
  },
  {
    "text": "as the API may integrate with other APIs,",
    "start": "185010",
    "end": "188250"
  },
  {
    "text": "as is typical in a\nmicroservices architecture.",
    "start": "188250",
    "end": "191520"
  },
  {
    "text": "This helps manage attack surfaces.",
    "start": "191520",
    "end": "193833"
  },
  {
    "text": "Your API may require access to storage,",
    "start": "195300",
    "end": "198480"
  },
  {
    "text": "which leads us to our\nnext pattern, encryption.",
    "start": "198480",
    "end": "202019"
  },
  {
    "text": "Consider enabling\nencryption on your store.",
    "start": "202020",
    "end": "205080"
  },
  {
    "text": "You should also rotate",
    "start": "205080",
    "end": "206070"
  },
  {
    "text": "your customer managed key periodically.",
    "start": "206070",
    "end": "209190"
  },
  {
    "text": "Using KMS, you can rotate\nyour keys once a year.",
    "start": "209190",
    "end": "213180"
  },
  {
    "text": "You can also use KMS to\nencrypt Kubernetes Secrets.",
    "start": "213180",
    "end": "217200"
  },
  {
    "text": "You should audit secret\nusage and rotate periodically",
    "start": "217200",
    "end": "220349"
  },
  {
    "text": "using external stores\nlike AWS Secrets Manager.",
    "start": "220350",
    "end": "224490"
  },
  {
    "text": "Additionally, you should\nalso use separate namespaces",
    "start": "224490",
    "end": "228240"
  },
  {
    "text": "as a way to isolate secrets.",
    "start": "228240",
    "end": "230550"
  },
  {
    "text": "That way you can ensure that",
    "start": "230550",
    "end": "231960"
  },
  {
    "text": "secrets required by your API",
    "start": "231960",
    "end": "234090"
  },
  {
    "text": "are not visible to another application.",
    "start": "234090",
    "end": "236819"
  },
  {
    "text": "Use volume mounts instead\nof environment variables",
    "start": "236820",
    "end": "239550"
  },
  {
    "text": "so that sensitive messages\ndon't appear in logs.",
    "start": "239550",
    "end": "242940"
  },
  {
    "text": "It is recommended to enable audit logs",
    "start": "242940",
    "end": "245460"
  },
  {
    "text": "as part of the control plane.",
    "start": "245460",
    "end": "247560"
  },
  {
    "text": "This pattern helps to understand",
    "start": "247560",
    "end": "249390"
  },
  {
    "text": "your application's security risks.",
    "start": "249390",
    "end": "252000"
  },
  {
    "text": "You should also create alarms",
    "start": "252000",
    "end": "253590"
  },
  {
    "text": "for suspicious requests like\n403 and 401 error codes.",
    "start": "253590",
    "end": "258150"
  },
  {
    "text": "This will alert you in case\nthere have been repeated",
    "start": "258150",
    "end": "261060"
  },
  {
    "text": "unauthorized attempts for your cluster.",
    "start": "261060",
    "end": "263430"
  },
  {
    "text": "Be sure to regularly audit CloudTrail logs",
    "start": "263430",
    "end": "266580"
  },
  {
    "text": "and optionally use CloudTrail Insights.",
    "start": "266580",
    "end": "269310"
  },
  {
    "text": "Your API may be using many\ndifferent image layers,",
    "start": "269310",
    "end": "272520"
  },
  {
    "text": "including a base image.",
    "start": "272520",
    "end": "274349"
  },
  {
    "text": "You should run periodic\nvulnerability scanning",
    "start": "274350",
    "end": "277110"
  },
  {
    "text": "on your image to be alerted\nof any known vulnerabilities",
    "start": "277110",
    "end": "281009"
  },
  {
    "text": "that may have been\nintroduced from a layer.",
    "start": "281010",
    "end": "283860"
  },
  {
    "text": "Amazon ECR offers both\nbasic and enhanced scanning",
    "start": "283860",
    "end": "287939"
  },
  {
    "text": "for container images stored in ECR.",
    "start": "287940",
    "end": "291120"
  },
  {
    "text": "Use Amazon Inspector for\nhost exposure scanning,",
    "start": "291120",
    "end": "294479"
  },
  {
    "text": "vulnerability assessment, and\ndeviation from best practices.",
    "start": "294480",
    "end": "299010"
  },
  {
    "text": "In this episode, we discussed\nsome of the best practices",
    "start": "299010",
    "end": "302310"
  },
  {
    "text": "and recommended patterns\nfor security on EKS.",
    "start": "302310",
    "end": "306030"
  },
  {
    "text": "As a reminder, security is\na shared responsibility,",
    "start": "306030",
    "end": "309720"
  },
  {
    "text": "so do ensure you're\nsetting up your clusters",
    "start": "309720",
    "end": "312240"
  },
  {
    "text": "with recommendations and\nbest practices in mind.",
    "start": "312240",
    "end": "315419"
  },
  {
    "text": "Be sure to check out the links",
    "start": "315420",
    "end": "316620"
  },
  {
    "text": "in the description below to learn more.",
    "start": "316620",
    "end": "319320"
  },
  {
    "text": "Thanks for watching \"Back to\nBasics\", see you next time.",
    "start": "319320",
    "end": "323987"
  }
]