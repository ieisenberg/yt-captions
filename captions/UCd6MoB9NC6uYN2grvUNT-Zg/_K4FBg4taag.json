[
  {
    "start": "0",
    "end": "115000"
  },
  {
    "text": "hello everyone welcome to session uh 303 I guess um this is the session we talk",
    "start": "2639",
    "end": "8400"
  },
  {
    "text": "about Cloud connected device on a global scale uh it's the last days of uh",
    "start": "8400",
    "end": "13920"
  },
  {
    "text": "reinvent enjoy the last session and go party after so I will uh start off",
    "start": "13920",
    "end": "20359"
  },
  {
    "text": "talking uh about a company called banjo which I am working with and Brian from",
    "start": "20359",
    "end": "27800"
  },
  {
    "text": "Panasonic is going to talk about uh a little bit more in depth uh of technical",
    "start": "27800",
    "end": "33320"
  },
  {
    "text": "uh information from how they scale the Enterprise all right so start off by",
    "start": "33320",
    "end": "39559"
  },
  {
    "text": "banjo so scaling from0 to 6 million mobile users",
    "start": "39559",
    "end": "46480"
  },
  {
    "text": "globally all right let me first start off uh by introducing banjo if you don't",
    "start": "46480",
    "end": "51719"
  },
  {
    "text": "know it already so banjo is a real-time location based information aggregator",
    "start": "51719",
    "end": "58079"
  },
  {
    "text": "basically we bring um location and data together and show you in the app that",
    "start": "58079",
    "end": "64878"
  },
  {
    "text": "works uh to the way that you can digest information by location we engineering",
    "start": "64879",
    "end": "70159"
  },
  {
    "text": "Focus company we invest heavily on uh training and also um getting resources",
    "start": "70159",
    "end": "76600"
  },
  {
    "text": "for engineering um the app that we have done uh basically it uh shows you all the",
    "start": "76600",
    "end": "84439"
  },
  {
    "text": "events and recommend events for you and help you discover events and alert you when in real time time when there are",
    "start": "84439",
    "end": "91119"
  },
  {
    "text": "events that matters to you for example concerts sports events and also like AWS uh reinvent",
    "start": "91119",
    "end": "99840"
  },
  {
    "text": "conferences like this we named the top developer and editor choice in Google",
    "start": "99840",
    "end": "105000"
  },
  {
    "text": "Play and we have been features there a few times we also named the top 10 well",
    "start": "105000",
    "end": "110159"
  },
  {
    "text": "innovator in local by fast company so let's talk about some growth",
    "start": "110159",
    "end": "117119"
  },
  {
    "start": "115000",
    "end": "180000"
  },
  {
    "text": "factor how how big how fast and how how wide we grow so we grew from 0 to 5 plus",
    "start": "117119",
    "end": "123880"
  },
  {
    "text": "million users in 2 years there are users all around the globe including Europe",
    "start": "123880",
    "end": "129000"
  },
  {
    "text": "Asia and also uh United States we indexed over 700 million social profiles",
    "start": "129000",
    "end": "136120"
  },
  {
    "text": "worldwide meaning Facebook profile uh Twitter profile Instagram profiles and",
    "start": "136120",
    "end": "141360"
  },
  {
    "text": "your favorite vnes and everything posessed over billions of location based social postes since we",
    "start": "141360",
    "end": "149160"
  },
  {
    "text": "started so all these posts are indexable and searchable in real time we",
    "start": "149160",
    "end": "155879"
  },
  {
    "text": "geospatial indexed over 500k post per hour that's the number of post coming in",
    "start": "155879",
    "end": "161319"
  },
  {
    "text": "in real time and Al also categorize thousands of events types that matter",
    "start": "161319",
    "end": "166599"
  },
  {
    "text": "the most to all our users and lastly our back end is cranking hard to get the job",
    "start": "166599",
    "end": "171800"
  },
  {
    "text": "done so over 50 million back 15 million background jobs processed",
    "start": "171800",
    "end": "177120"
  },
  {
    "text": "daily so let's talk about a little bit about uh our stack we're a startup company we have a very uh slim stack um",
    "start": "177120",
    "end": "185200"
  },
  {
    "start": "180000",
    "end": "240000"
  },
  {
    "text": "so we start off basically saying okay Amazon is a good choice so we put a lot of things uh running on Amazon E2",
    "start": "185200",
    "end": "192239"
  },
  {
    "text": "elastic low Balan is a is a friend uh basically uh Amazon S3 elastic bean",
    "start": "192239",
    "end": "198280"
  },
  {
    "text": "stock and we use hero cool as well to scale our services with Ruby House ruby",
    "start": "198280",
    "end": "203480"
  },
  {
    "text": "on rail uh Rus mam cast we use uh Sidi for background jobs as well as",
    "start": "203480",
    "end": "210319"
  },
  {
    "text": "lastly the health monitoring and statistic mon monitoring with neic pager",
    "start": "210319",
    "end": "215360"
  },
  {
    "text": "Duty uh paper trail and graphi they all insensible to our company so let's talk",
    "start": "215360",
    "end": "220480"
  },
  {
    "text": "uh start about talk about how we start and how we scale to 16 million users so first six months we start from zero to a",
    "start": "220480",
    "end": "227439"
  },
  {
    "text": "million users in nine months actually so we start off by just have a front end",
    "start": "227439",
    "end": "233200"
  },
  {
    "text": "running on ec2 uh no background jobs and hosted uh uh instances with uh a",
    "start": "233200",
    "end": "240280"
  },
  {
    "text": "third third party provider and we have no devop support so the problem with that is we have limited engineering",
    "start": "240280",
    "end": "246799"
  },
  {
    "text": "resources no tap off support not too agile when we deploying with like a script that you have to run a long time",
    "start": "246799",
    "end": "253599"
  },
  {
    "text": "for deployment like rubber and we outre to host the mongod DP uh third party uh",
    "start": "253599",
    "end": "259239"
  },
  {
    "text": "providers uh limit basically so what do we do so gr from 1 million 2 million",
    "start": "259239",
    "end": "264880"
  },
  {
    "start": "262000",
    "end": "312000"
  },
  {
    "text": "users we start off by migrating our instances from single or 200 H E2 to",
    "start": "264880",
    "end": "270720"
  },
  {
    "text": "Hoku because we're running with limited resources Hoku allow us to easily deploy",
    "start": "270720",
    "end": "276080"
  },
  {
    "text": "and scale and scale up and down we also started having delay jobs meaning jobs running in background for example we",
    "start": "276080",
    "end": "282840"
  },
  {
    "text": "start off by in process um uh uh background processing with girls Friday",
    "start": "282840",
    "end": "289360"
  },
  {
    "text": "is a jam uh Ruby and to q and late with migr to pyi which is a little bit more",
    "start": "289360",
    "end": "296199"
  },
  {
    "text": "scalable uh in-house uh DB cluster which brought in uh a lot of instances",
    "start": "296199",
    "end": "302520"
  },
  {
    "text": "to support our growth in data as well as our social graphs increased to 300 million plus profiles just in within",
    "start": "302520",
    "end": "310160"
  },
  {
    "text": "that time frame so challenges of course we have explosion of social graph we have a lot",
    "start": "310160",
    "end": "316479"
  },
  {
    "start": "312000",
    "end": "338000"
  },
  {
    "text": "of data turning database a lot of cost to process background jobs to render",
    "start": "316479",
    "end": "322120"
  },
  {
    "text": "information to the users in real time as well as latency in order to pull information in real time we we process",
    "start": "322120",
    "end": "328360"
  },
  {
    "text": "all those social feeds coming in to uh everywhere in the world globally",
    "start": "328360",
    "end": "333639"
  },
  {
    "text": "so from that we also increase our user base to 4 million plus users we started",
    "start": "333639",
    "end": "340800"
  },
  {
    "start": "338000",
    "end": "398000"
  },
  {
    "text": "scaling uh the background jobs with our local we have like 100 times the amount of workers that since we start when we",
    "start": "340800",
    "end": "347319"
  },
  {
    "text": "have like 2 million users that's a lot of resources to put in uh social graph",
    "start": "347319",
    "end": "352400"
  },
  {
    "text": "also increases to uh 400 million plus profiles so most of the Facebook and",
    "start": "352400",
    "end": "357800"
  },
  {
    "text": "Twitter profile who has been um uh post uh publicly uh on internet we'll have a",
    "start": "357800",
    "end": "365000"
  },
  {
    "text": "copy of that um we also uh look at privacy very uh seriously so most of the",
    "start": "365000",
    "end": "370560"
  },
  {
    "text": "profiles that we have we will keep track on the privacy settings uh we index one month worth of",
    "start": "370560",
    "end": "377520"
  },
  {
    "text": "global location based post so we can search back everything within the month and our front end will render the",
    "start": "377520",
    "end": "385120"
  },
  {
    "text": "information to you in uh real time we also process one uh 10 million at that time 10 millions of background jobs",
    "start": "385120",
    "end": "391960"
  },
  {
    "text": "daily and still we only have one death up and uh Bas basically is aort database",
    "start": "391960",
    "end": "397080"
  },
  {
    "text": "as well so the challenges basically we are",
    "start": "397080",
    "end": "402280"
  },
  {
    "start": "398000",
    "end": "462000"
  },
  {
    "text": "limited by hello Dino memory limits is 512 at that time for the 1X",
    "start": "402280",
    "end": "407840"
  },
  {
    "text": "configuration and slower CPU because it's time shared by the a other processes running on the same ec2 host",
    "start": "407840",
    "end": "415680"
  },
  {
    "text": "that they're running the processes on so also hello routing latency becomes",
    "start": "415680",
    "end": "421199"
  },
  {
    "text": "obvious uh if you have used hu you know that there's a routing layer that route the increment traffic through the uh",
    "start": "421199",
    "end": "428120"
  },
  {
    "text": "routing layer to all the dinos that they have designed on E2 so and also when we have 4 million",
    "start": "428120",
    "end": "434479"
  },
  {
    "text": "users our Cod base becomes a rather large and then we cannot uh have a very",
    "start": "434479",
    "end": "440039"
  },
  {
    "text": "large concurrency processor running with limited memory and CPU well at that time fouron four",
    "start": "440039",
    "end": "446160"
  },
  {
    "text": "million users mean we have a lot more power power users coming in to uh use our system as well as consuming our",
    "start": "446160",
    "end": "453039"
  },
  {
    "text": "resources so we have a large increase of social graph due to the power users signing with millions and millions of",
    "start": "453039",
    "end": "459360"
  },
  {
    "text": "followers from Twitter and Instagram so now we have 6 million users",
    "start": "459360",
    "end": "466199"
  },
  {
    "text": "it's a good size I think um 700 million profile index in our",
    "start": "466199",
    "end": "471680"
  },
  {
    "text": "database we switch from hellu to uh elastic B stock partially on our back",
    "start": "471680",
    "end": "477560"
  },
  {
    "text": "end for much easier scaling uh managing memory CPU",
    "start": "477560",
    "end": "483360"
  },
  {
    "text": "utilization uh availability Zone and all those goodies it comes with elas bean",
    "start": "483360",
    "end": "489000"
  },
  {
    "text": "stock uh we also switch from just using pure hocol based unicorn uh process to",
    "start": "489000",
    "end": "494840"
  },
  {
    "text": "elas bean stock with um engine X and passenger combo it's a onew punch we",
    "start": "494840",
    "end": "501240"
  },
  {
    "text": "have 5 15 million background jobs running daily basically they we CH all",
    "start": "501240",
    "end": "506520"
  },
  {
    "text": "the data from social media and Rand the all the information to users in real time and we have scaled to hundreds of",
    "start": "506520",
    "end": "515080"
  },
  {
    "text": "ec2 instances with database redders mam cach as well as all the back",
    "start": "515080",
    "end": "520479"
  },
  {
    "text": "background jobs uh hoses to Rend the information for users before they come",
    "start": "520479",
    "end": "525600"
  },
  {
    "text": "into the app and yet we still have the same DPA same depop one",
    "start": "525600",
    "end": "530839"
  },
  {
    "text": "guide so what are the pros and cons because why why we switch from Hello to",
    "start": "530839",
    "end": "537080"
  },
  {
    "start": "531000",
    "end": "654000"
  },
  {
    "text": "uh AWS elastic be stock so so the pros for hellu to start with for startup is a",
    "start": "537080",
    "end": "542959"
  },
  {
    "text": "very brainless deploy very easy to manage by a simple command on command line or even a graphical interface and",
    "start": "542959",
    "end": "548920"
  },
  {
    "text": "also the rad back fold is very easy you can just click somewhere or execute a command and then your hold front end or",
    "start": "548920",
    "end": "555160"
  },
  {
    "text": "back end will be back to the previous version and the in the availability of dinos and workers are instantaneous you",
    "start": "555160",
    "end": "561880"
  },
  {
    "text": "don't have to spin up anything uh wait for the machine to be available they have everything available",
    "start": "561880",
    "end": "567680"
  },
  {
    "text": "already um to set up the the Repro is pretty much a zero setup and maintenance of course there's a cost to pay money to",
    "start": "567680",
    "end": "574760"
  },
  {
    "text": "get that conveniency but uh in terms of use usage is pretty easy and of course",
    "start": "574760",
    "end": "580160"
  },
  {
    "text": "there's no no dep off because they are the dep off okay the coins so why is it",
    "start": "580160",
    "end": "585200"
  },
  {
    "text": "that we move away from Hoku they have limited memory and CPU make available for us to make concurrent jobs the",
    "start": "585200",
    "end": "592040"
  },
  {
    "text": "routing layer latency becomes obvious when we have like seven uh six million",
    "start": "592040",
    "end": "597160"
  },
  {
    "text": "uh users 700 million profile worldwide indexed and there's no build-in Autos",
    "start": "597160",
    "end": "603480"
  },
  {
    "text": "scaling provided by H locu we have to manually scale or use them external third party uh provider to help a scale",
    "start": "603480",
    "end": "610440"
  },
  {
    "text": "uh Auto scale and also the limited available zones they only have Europe and uh",
    "start": "610440",
    "end": "617240"
  },
  {
    "text": "us and lastly when there issue on that platform on hu we can do much we just",
    "start": "617240",
    "end": "623959"
  },
  {
    "text": "have to wait until the data figure everything out at that time they could have locked the API and they would have",
    "start": "623959",
    "end": "630959"
  },
  {
    "text": "uh uh limited your access to your uh application that time so we start",
    "start": "630959",
    "end": "636120"
  },
  {
    "text": "looking at elastic pin stock elastic pin stock is uh a surfice available by AWS",
    "start": "636120",
    "end": "642160"
  },
  {
    "text": "the pros the choice of instant type you can select as much memory as large of instances or CPU as you want and also",
    "start": "642160",
    "end": "649839"
  },
  {
    "text": "increase the concurrency with the um use of Passenger and engine X and the auto",
    "start": "649839",
    "end": "655360"
  },
  {
    "start": "654000",
    "end": "795000"
  },
  {
    "text": "scaling support with comes to elas stock make it easy for us to detect any spikes",
    "start": "655360",
    "end": "660480"
  },
  {
    "text": "in the usage of a system and will scale automatically the latency of routing",
    "start": "660480",
    "end": "666560"
  },
  {
    "text": "layer with Amazon is much Superior to uh Hoku for sure because Hoku is built on",
    "start": "666560",
    "end": "672120"
  },
  {
    "text": "top of AWS as well and the elastic low balancing uh helps us to uh um make sure",
    "start": "672120",
    "end": "680079"
  },
  {
    "text": "our resources are utilized on all the hoses cor um in in a fair Manner and also it's cost",
    "start": "680079",
    "end": "686040"
  },
  {
    "text": "efficient the cons basically in order to to use this surface you have learned a little bit about elastic bin stock in",
    "start": "686040",
    "end": "693800"
  },
  {
    "text": "order to set it up you need to set up a bin stock container and also the environment that fits your uh system and",
    "start": "693800",
    "end": "700480"
  },
  {
    "text": "maybe your back end uh the container updates are by provided by elastic inin stock is rather",
    "start": "700480",
    "end": "706560"
  },
  {
    "text": "slow they are currently with 1.9 Ruby 1.9 uh passenger 3 and engine X 1.23",
    "start": "706560",
    "end": "714200"
  },
  {
    "text": "which is rather old version um and also it takes time to to",
    "start": "714200",
    "end": "719360"
  },
  {
    "text": "spin up new instances when you're ready deploy the next version of new code it",
    "start": "719360",
    "end": "724480"
  },
  {
    "text": "might take 15 minutes for us to plan and deploy accordingly um versus maybe hello cool",
    "start": "724480",
    "end": "730959"
  },
  {
    "text": "you can just deploy within one minute and also lastly there's some learning curve in order to map your",
    "start": "730959",
    "end": "737240"
  },
  {
    "text": "environment to bin stock so you have to tweak a little bit of your scripts to uh work with the AWS nicely provided Ruby",
    "start": "737240",
    "end": "745079"
  },
  {
    "text": "uh uh scripts and Bash scripts as well so that's the ca yet so let's talk",
    "start": "745079",
    "end": "752120"
  },
  {
    "text": "about how well it suit us all the instances on easy to manage right now by",
    "start": "752120",
    "end": "758279"
  },
  {
    "text": "uh easily so we have one DBA and devop to help managing all our instances what",
    "start": "758279",
    "end": "764120"
  },
  {
    "text": "hu uh sorry running um mongod DB hello elastic bean stock will manag by",
    "start": "764120",
    "end": "770519"
  },
  {
    "text": "engineering entirely so server team um will uh manage",
    "start": "770519",
    "end": "775560"
  },
  {
    "text": "everything hello co man uh Services uh running on the background we just keep",
    "start": "775560",
    "end": "780720"
  },
  {
    "text": "it around because it's easy to scale and deploy so the conclusion for us is El",
    "start": "780720",
    "end": "786079"
  },
  {
    "text": "spin stock and heral can be easily managed by small size agile engineering team in a startup environment so some",
    "start": "786079",
    "end": "793519"
  },
  {
    "text": "recommendation for startups if you're in a startup so start prototyping uh your product rapidly on a",
    "start": "793519",
    "end": "801160"
  },
  {
    "start": "795000",
    "end": "880000"
  },
  {
    "text": "small scale uh platform as a service provider that you can turn around your",
    "start": "801160",
    "end": "806560"
  },
  {
    "text": "product and PFF it very quickly make use of available addult resources",
    "start": "806560",
    "end": "812880"
  },
  {
    "text": "don't reinvent everything on your own I think it's it's major that you use available resources they are cost",
    "start": "812880",
    "end": "819800"
  },
  {
    "text": "effective they are they are just useful like paper trail consumer locks for you",
    "start": "819800",
    "end": "825760"
  },
  {
    "text": "neic hosted uh mongod DB to begin with maybe Rus Mam cach and metric system",
    "start": "825760",
    "end": "832240"
  },
  {
    "text": "that should you need and last also you need to set up pager alerts I know every",
    "start": "832240",
    "end": "839160"
  },
  {
    "text": "body will hate to get a page in the middle of the night but use make use of scout app pingdom and pag Dy they're",
    "start": "839160",
    "end": "845360"
  },
  {
    "text": "awesome they are just just wake you up but you you will you'll thankful for it",
    "start": "845360",
    "end": "850560"
  },
  {
    "text": "and make use of health and metrix dashboard you probably need to set it up but once you set it up put it on a big",
    "start": "850560",
    "end": "856959"
  },
  {
    "text": "screen TV inside your office you will be you will be uh glad that you find",
    "start": "856959",
    "end": "862320"
  },
  {
    "text": "something right away on your TV Rod than your customer is telling you and lastly deploy Fair frequently and scale up a",
    "start": "862320",
    "end": "868880"
  },
  {
    "text": "lot on the way and learn along the way and your product will just strike",
    "start": "868880",
    "end": "874160"
  },
  {
    "text": "so okay now uh we'll do Q&A after Brian has finished the presentation but I'm",
    "start": "874160",
    "end": "880040"
  },
  {
    "start": "880000",
    "end": "971000"
  },
  {
    "text": "going to hand the mic over to Brian uh here is we",
    "start": "880040",
    "end": "887399"
  },
  {
    "text": "move thank you Justin and let me Echo his uh thanks to all of you for joining",
    "start": "890800",
    "end": "896000"
  },
  {
    "text": "us on this last session I think we've got uh what 45 minutes left uh so we're",
    "start": "896000",
    "end": "901639"
  },
  {
    "text": "winding up my name is uh Bryant eastom and I",
    "start": "901639",
    "end": "908079"
  },
  {
    "text": "work in corporate R&D at Panasonic for my part of the session we're going to discuss how to integrate",
    "start": "908079",
    "end": "915160"
  },
  {
    "text": "small devices into the AWS Global cloud and particular we're going to talk about",
    "start": "915160",
    "end": "921959"
  },
  {
    "text": "a technique for managing uh IP",
    "start": "921959",
    "end": "927440"
  },
  {
    "text": "addresses we're also wanted to discuss about how puppet uh is part of this solution so this presentation is a story",
    "start": "927440",
    "end": "935440"
  },
  {
    "text": "of somewhat Divergent paths we're talking small devices on one hand and",
    "start": "935440",
    "end": "941759"
  },
  {
    "text": "we're talking Global clouds on the other bringing these two together requires",
    "start": "941759",
    "end": "947279"
  },
  {
    "text": "that we step somewhat onto the Less Traveled path the path of resource constrained",
    "start": "947279",
    "end": "953360"
  },
  {
    "text": "devices now when we're talking about uh Cloud computed computed connection",
    "start": "953360",
    "end": "959519"
  },
  {
    "text": "devices we're talking from an assumption that these devices are small and as",
    "start": "959519",
    "end": "965000"
  },
  {
    "text": "we're going to see AWS is going to add in the global Cloud",
    "start": "965000",
    "end": "970680"
  },
  {
    "start": "971000",
    "end": "1084000"
  },
  {
    "text": "perspective so let's uh let's talk about small small is a very relative term some",
    "start": "971120",
    "end": "976680"
  },
  {
    "text": "people are going to think my cell phone is small um in addition cloud is not a",
    "start": "976680",
    "end": "982759"
  },
  {
    "text": "very well-defined term so for our purposes small means divice prices that",
    "start": "982759",
    "end": "989440"
  },
  {
    "text": "have been extremely minimized for some purpose and usually that purpose is to",
    "start": "989440",
    "end": "995120"
  },
  {
    "text": "save money we all love Mo's law it means we get new laptops every year but we forget",
    "start": "995120",
    "end": "1003279"
  },
  {
    "text": "that as soon as an embedded device is integrated into the infrastructure Moors law becomes your enemy that device",
    "start": "1003279",
    "end": "1010759"
  },
  {
    "text": "immediately becomes Obsolete and at a pretty quick rate so for small devices",
    "start": "1010759",
    "end": "1017480"
  },
  {
    "text": "we're going to talk about kilobytes and we're going to talk about",
    "start": "1017480",
    "end": "1022800"
  },
  {
    "text": "megahertz where your typical phone now is either is gigahertz and G and",
    "start": "1022800",
    "end": "1029839"
  },
  {
    "text": "gigabytes when we talk about Cloud systems we're talking uh modern",
    "start": "1030520",
    "end": "1036520"
  },
  {
    "text": "Technologies we're talking HTML uh XML SSL these systems rarely take into",
    "start": "1036520",
    "end": "1044880"
  },
  {
    "text": "consideration the effect that they have on very small embedded devices and so we're going to try to",
    "start": "1044880",
    "end": "1051799"
  },
  {
    "text": "reconcile these two so besides just being small device",
    "start": "1051799",
    "end": "1059320"
  },
  {
    "text": "infrastructure has requirements that cause difficulties for cloud systems the",
    "start": "1059320",
    "end": "1065240"
  },
  {
    "text": "limited resources that these devices have mean that it departments have a LoveHate",
    "start": "1065240",
    "end": "1071039"
  },
  {
    "text": "relationship uh in some ways they fear them and that that leads to some interesting consequences one of them is",
    "start": "1071039",
    "end": "1079400"
  },
  {
    "text": "wh listing so let me ask how many people are familiar with the term whitelisting okay so yeah it still",
    "start": "1079400",
    "end": "1087679"
  },
  {
    "start": "1084000",
    "end": "1129000"
  },
  {
    "text": "happens um it departments can become very protective of these very small",
    "start": "1087679",
    "end": "1094360"
  },
  {
    "text": "devices uh whitelisting also leads to",
    "start": "1094360",
    "end": "1099840"
  },
  {
    "text": "these departments trying to get all of their communication going to the same",
    "start": "1099840",
    "end": "1105200"
  },
  {
    "text": "set of very very small or or small set of IP addresses and that may include",
    "start": "1105200",
    "end": "1111159"
  },
  {
    "text": "traffic that is not TCP based not all Protocols are TCP so if",
    "start": "1111159",
    "end": "1118400"
  },
  {
    "text": "you're going to try to do ntp and you've got a small device well that's a UDP",
    "start": "1118400",
    "end": "1123799"
  },
  {
    "text": "traffic set it's not going to go through your elastic load",
    "start": "1123799",
    "end": "1128520"
  },
  {
    "start": "1129000",
    "end": "1237000"
  },
  {
    "text": "balancer so let me go over some of the requirements for our Cloud systems we we",
    "start": "1130120",
    "end": "1137080"
  },
  {
    "text": "want to support whitelisting and again that means that I'm going to have a very restricted very small set of IP",
    "start": "1137080",
    "end": "1144039"
  },
  {
    "text": "addresses and I want all of my traffic to go to them I want to support UDP as well as",
    "start": "1144039",
    "end": "1151480"
  },
  {
    "text": "TCP and I don't want to pay a lot for uh a different load",
    "start": "1151480",
    "end": "1156559"
  },
  {
    "text": "balancer I still need to support autoscaling elastic load balancing everything that AWS is going to give me",
    "start": "1156559",
    "end": "1164240"
  },
  {
    "text": "to make my cloud Global but I also need uh off instance",
    "start": "1164240",
    "end": "1169799"
  },
  {
    "text": "logging and monitoring so I can't bury these devices away they need internet",
    "start": "1169799",
    "end": "1175520"
  },
  {
    "text": "access AWS is going to get us most of the way there and what we're going to",
    "start": "1175520",
    "end": "1180720"
  },
  {
    "text": "focus on now is getting that last",
    "start": "1180720",
    "end": "1184799"
  },
  {
    "text": "10% so now that we understand some of our requirements I'm going to present a",
    "start": "1186360",
    "end": "1191880"
  },
  {
    "text": "solution that is based on eips um but before we get there we need",
    "start": "1191880",
    "end": "1197799"
  },
  {
    "text": "to take a D2 into configuration we're going to talk about a solution for that as",
    "start": "1197799",
    "end": "1204880"
  },
  {
    "text": "well so our goal is deceptively simple uh we want to have a set of IP addresses",
    "start": "1205000",
    "end": "1212799"
  },
  {
    "text": "and we want those to be covered by a small set of instances those instances",
    "start": "1212799",
    "end": "1218240"
  },
  {
    "text": "are going to provide whatever Services we want on those IPS and our methodology is to reuse as",
    "start": "1218240",
    "end": "1225159"
  },
  {
    "text": "much as we can and invent only when it's necessary now the benefit for us is that AWS has",
    "start": "1225159",
    "end": "1232000"
  },
  {
    "text": "given us fantastic building blocks when we do have to",
    "start": "1232000",
    "end": "1237600"
  },
  {
    "start": "1237000",
    "end": "1323000"
  },
  {
    "text": "invent so the technique that we use is application managed IP",
    "start": "1237960",
    "end": "1244000"
  },
  {
    "text": "addresses standard EIP in this case is not enough there are a couple of reasons",
    "start": "1244000",
    "end": "1250720"
  },
  {
    "text": "first we have this address pool we need all of those addresses active all of the",
    "start": "1250720",
    "end": "1257600"
  },
  {
    "text": "time we just just don't want them in reserve we need them actually accepting",
    "start": "1257600",
    "end": "1263799"
  },
  {
    "text": "traffic we also are going to be scaling our instances and that means that this",
    "start": "1263799",
    "end": "1269679"
  },
  {
    "text": "set of IP addresses needs to move around if our scale group is scaling up then",
    "start": "1269679",
    "end": "1276200"
  },
  {
    "text": "some of those addresses are going to have to move if we scale down they're going to have to to move back to other",
    "start": "1276200",
    "end": "1282120"
  },
  {
    "text": "instances that are still running so by moving to an application",
    "start": "1282120",
    "end": "1288679"
  },
  {
    "text": "managed IP uh we can we can take care of these problems we can ensure that all of",
    "start": "1288679",
    "end": "1295000"
  },
  {
    "text": "our addresses are active and we can do that by monitoring and we can use the EIP",
    "start": "1295000",
    "end": "1302760"
  },
  {
    "text": "apis to take care of our scale events but this leads us to an",
    "start": "1302760",
    "end": "1308919"
  },
  {
    "text": "interesting problem uh only VPC instances allow multiple EIP assignments",
    "start": "1308919",
    "end": "1317080"
  },
  {
    "text": "so that means that all of our instan have to be inside of",
    "start": "1317080",
    "end": "1322400"
  },
  {
    "start": "1323000",
    "end": "1373000"
  },
  {
    "text": "EPC so our solution requires multiple eips and we want application control",
    "start": "1323919",
    "end": "1331360"
  },
  {
    "text": "which is going to at some level require some configuration I mentioned that vpcs are",
    "start": "1331360",
    "end": "1337799"
  },
  {
    "text": "required and we also want our solution to use puppet and we want to leverage",
    "start": "1337799",
    "end": "1345000"
  },
  {
    "text": "AWS so keep in mind AWS apis always require internet",
    "start": "1345000",
    "end": "1352120"
  },
  {
    "text": "access within a VPC that means that you've got to have a bridge you've got",
    "start": "1352120",
    "end": "1357200"
  },
  {
    "text": "to have an internet gateway or or some kind of bridge node and that requires additional",
    "start": "1357200",
    "end": "1364320"
  },
  {
    "text": "configuration so now we've got a loop we have configuration that requires having network access but that requires",
    "start": "1364320",
    "end": "1373039"
  },
  {
    "text": "configuration so we got a cycle we need to break it so on observation helps us",
    "start": "1373039",
    "end": "1380080"
  },
  {
    "text": "to uh pick a solution here we want to use puppet and we want to use VPC",
    "start": "1380080",
    "end": "1387240"
  },
  {
    "text": "security groups as well to control access to this puppet master so this",
    "start": "1387240",
    "end": "1393279"
  },
  {
    "text": "points to putting a puppet master inside each one of our",
    "start": "1393279",
    "end": "1399200"
  },
  {
    "text": "vpcs now we know that we also require a bridge node in each one of our vpcs so",
    "start": "1399320",
    "end": "1406559"
  },
  {
    "text": "there's no reason to run two instances if one instance will do and so we",
    "start": "1406559",
    "end": "1412080"
  },
  {
    "text": "actually merge our VPC bridge and our Puppet",
    "start": "1412080",
    "end": "1417520"
  },
  {
    "text": "Master means all of our instances are going to initially be configured to talk",
    "start": "1417520",
    "end": "1422799"
  },
  {
    "text": "to that bridge node so so here's our current",
    "start": "1422799",
    "end": "1428840"
  },
  {
    "text": "configuration we're going to use a VPC per availability Zone that we want to",
    "start": "1428840",
    "end": "1433880"
  },
  {
    "text": "deploy our solution in and we're going to bridge the VPC by by using our Puppet",
    "start": "1433880",
    "end": "1440080"
  },
  {
    "text": "Master uh however a global solution means lots of availability zones that",
    "start": "1440080",
    "end": "1446559"
  },
  {
    "text": "means lots of Puppet Masters and that's definitely not",
    "start": "1446559",
    "end": "1453640"
  },
  {
    "text": "ideal so what are we going to do with all these Puppet Masters well we know that we need multiple vpcs it's not an",
    "start": "1453640",
    "end": "1460840"
  },
  {
    "text": "option to put our entire solution in one bpc we want a global redundant",
    "start": "1460840",
    "end": "1466760"
  },
  {
    "text": "solution and we know know that each one of these vpcs is essentially going to",
    "start": "1466760",
    "end": "1471880"
  },
  {
    "text": "have the same networking requirements the same configuration and the same types of security groups so they're",
    "start": "1471880",
    "end": "1480440"
  },
  {
    "text": "really almost mirror images we've solved one problem we got our network access",
    "start": "1480440",
    "end": "1486000"
  },
  {
    "text": "but we've introduced another and so what we need is a common",
    "start": "1486000",
    "end": "1491840"
  },
  {
    "start": "1489000",
    "end": "1556000"
  },
  {
    "text": "configuration for all of our Puppet Masters this is where S3 can come in S3",
    "start": "1491840",
    "end": "1497960"
  },
  {
    "text": "is a great choice here it's it's Global it supports access control and we can",
    "start": "1497960",
    "end": "1504080"
  },
  {
    "text": "also share our S3 buckets among accounts so what we did is Implement a one-way",
    "start": "1504080",
    "end": "1510880"
  },
  {
    "text": "synchronization from S3 to all of our distributed Puppet",
    "start": "1510880",
    "end": "1516200"
  },
  {
    "text": "Masters in addition to synchronizing the puppet information for those who are",
    "start": "1516200",
    "end": "1521320"
  },
  {
    "text": "know about puppet we've got uh different scripts and files that we can deploy we",
    "start": "1521320",
    "end": "1527399"
  },
  {
    "text": "also centralized all of our RPM repositories and so this synchronization",
    "start": "1527399",
    "end": "1534679"
  },
  {
    "text": "from S3 to our Puppet Masters also takes care of all of our",
    "start": "1534679",
    "end": "1539840"
  },
  {
    "text": "RPMs and this means that we can just upload a few files to S3 and do a global software distribution",
    "start": "1539840",
    "end": "1547360"
  },
  {
    "text": "through puppet we can do all of our software updates uh within just a few",
    "start": "1547360",
    "end": "1554278"
  },
  {
    "start": "1556000",
    "end": "1606000"
  },
  {
    "text": "minutes so let's go back to where we uh started with our bridges and we've got a",
    "start": "1556840",
    "end": "1562960"
  },
  {
    "text": "performance problem now our our solution leaves these VPC nodes all going through",
    "start": "1562960",
    "end": "1569399"
  },
  {
    "text": "our puppet master or our Bridge well we don't want all of our traffic to always",
    "start": "1569399",
    "end": "1575200"
  },
  {
    "text": "go through the bridge and we also haven't actually assigned any real IP",
    "start": "1575200",
    "end": "1580360"
  },
  {
    "text": "addresses yet we're just talking about configuration so our solution doesn't stop here uh all we do at this point is",
    "start": "1580360",
    "end": "1589320"
  },
  {
    "text": "handle our node or instance",
    "start": "1589320",
    "end": "1593278"
  },
  {
    "text": "configuration our configuration is going to include the information about the",
    "start": "1595279",
    "end": "1600679"
  },
  {
    "text": "actual IP addresses that we want our application to",
    "start": "1600679",
    "end": "1606360"
  },
  {
    "start": "1606000",
    "end": "1654000"
  },
  {
    "text": "manage so to summarize where we are now we've got a configuration solution uh it",
    "start": "1606960",
    "end": "1613200"
  },
  {
    "text": "includes instance metadata now instance metadata comes in two flavors you've got",
    "start": "1613200",
    "end": "1618919"
  },
  {
    "text": "instance metadata that's always available your instance ID and your user data always available you don't have to",
    "start": "1618919",
    "end": "1626360"
  },
  {
    "text": "have really we don't have to have internet connectivity for that but we also have additional instance metadata",
    "start": "1626360",
    "end": "1633640"
  },
  {
    "text": "you're all familiar with your instant tags those you need network access in",
    "start": "1633640",
    "end": "1638760"
  },
  {
    "text": "order to get at those we've got our puppet configuration we can have our configuration rules and",
    "start": "1638760",
    "end": "1646640"
  },
  {
    "text": "uh we can distribute file and then we've got Amazon S3",
    "start": "1646640",
    "end": "1652879"
  },
  {
    "start": "1654000",
    "end": "1769000"
  },
  {
    "text": "access so our our little configuration detour is complete we've got a solution",
    "start": "1654600",
    "end": "1660559"
  },
  {
    "text": "now we can configure uh all of our instances and we're going to return to",
    "start": "1660559",
    "end": "1666240"
  },
  {
    "text": "our EIP management solution so our solution is going to require two host names in this case",
    "start": "1666240",
    "end": "1674200"
  },
  {
    "text": "we're going to host both of these through Route 53 the first first name is",
    "start": "1674200",
    "end": "1679519"
  },
  {
    "text": "a master name we're going to put every IP address that we want our solution to",
    "start": "1679519",
    "end": "1685840"
  },
  {
    "text": "use into that name we're going to configure a second",
    "start": "1685840",
    "end": "1692320"
  },
  {
    "text": "address which contains all of the addresses but is also latency based so",
    "start": "1692320",
    "end": "1698880"
  },
  {
    "text": "the first host name is used by our application internally the second",
    "start": "1698880",
    "end": "1704519"
  },
  {
    "text": "address is used by all of our devices so when the device queries it's going to",
    "start": "1704519",
    "end": "1709919"
  },
  {
    "text": "get uh a regional specific address well why don't we just use that for our",
    "start": "1709919",
    "end": "1717240"
  },
  {
    "text": "configuration um well it is interesting but a Route 53 latency query from with",
    "start": "1717240",
    "end": "1724080"
  },
  {
    "text": "in a region does not always give you the results for that region it's it's a",
    "start": "1724080",
    "end": "1731440"
  },
  {
    "text": "little strange but it's true so don't rely on using a Route 53 call from",
    "start": "1731440",
    "end": "1737000"
  },
  {
    "text": "inside a region thinking that you're going to get that Region's information so in this case each of our",
    "start": "1737000",
    "end": "1744640"
  },
  {
    "text": "instances knows this master name and we're going to use the EIP apis to",
    "start": "1744640",
    "end": "1752240"
  },
  {
    "text": "intersect that Master list of addresses with the addresses that it knows apply",
    "start": "1752240",
    "end": "1758480"
  },
  {
    "text": "to the region or the VPC that it's in and then each of these instances is",
    "start": "1758480",
    "end": "1764159"
  },
  {
    "text": "going to periodically check all of this information",
    "start": "1764159",
    "end": "1769640"
  },
  {
    "start": "1769000",
    "end": "1863000"
  },
  {
    "text": "so this a 300 level course so we get to talk about code or at least pseudo code",
    "start": "1770200",
    "end": "1776559"
  },
  {
    "text": "um so when one of our instances starts up remember that it does not yet have a",
    "start": "1776559",
    "end": "1783480"
  },
  {
    "text": "public address assigned to it so it cannot communicate to the Internet so",
    "start": "1783480",
    "end": "1789399"
  },
  {
    "text": "the first thing that it does is allocate an EIP it will repeat trying to do this",
    "start": "1789399",
    "end": "1795919"
  },
  {
    "text": "until it finally gets an address once it has the address then it can communicate with the rest of the AWS",
    "start": "1795919",
    "end": "1803320"
  },
  {
    "text": "infrastructure each instance is born with a single network interface and a",
    "start": "1803320",
    "end": "1810399"
  },
  {
    "text": "set of private addresses what we do is immediately",
    "start": "1810399",
    "end": "1816200"
  },
  {
    "text": "allocate as many network interfaces as we can and we populate all of the",
    "start": "1816200",
    "end": "1822600"
  },
  {
    "text": "private IP addresses for each of those network interfaces the number of",
    "start": "1822600",
    "end": "1828000"
  },
  {
    "text": "addresses that you can support depends on the instance type so it will try to fully populate all of its private",
    "start": "1828000",
    "end": "1836960"
  },
  {
    "text": "information now when it when it goes out and allocates these network interfaces",
    "start": "1837679",
    "end": "1843080"
  },
  {
    "text": "they may have public IP addresses already assigned to them and so we",
    "start": "1843080",
    "end": "1848919"
  },
  {
    "text": "notify the application right on Startup the set of public addresses that it's been assigned and that con the",
    "start": "1848919",
    "end": "1857360"
  },
  {
    "text": "application can then start whatever Services it wants on those",
    "start": "1857360",
    "end": "1863360"
  },
  {
    "start": "1863000",
    "end": "2071000"
  },
  {
    "text": "addresses this is only the initial configuration so what happens next is",
    "start": "1863480",
    "end": "1868960"
  },
  {
    "text": "the periodic checks so remember that it's not just",
    "start": "1868960",
    "end": "1874440"
  },
  {
    "text": "you uh or your application that has access to this configuration um unless you're",
    "start": "1874440",
    "end": "1880279"
  },
  {
    "text": "protecting against it any of your uh system administrators can launch it and remove uh one of your public IPS from an",
    "start": "1880279",
    "end": "1887639"
  },
  {
    "text": "ins instance and so the first thing that we do is we're going to use DNS and the",
    "start": "1887639",
    "end": "1895320"
  },
  {
    "text": "EIP apis and determine the current set of addresses for my region that means",
    "start": "1895320",
    "end": "1902080"
  },
  {
    "text": "I'm going to go to that global address I'm going to grab those and then I'm going to ask for all of the eips that",
    "start": "1902080",
    "end": "1908720"
  },
  {
    "text": "are assigned in my region in my VPC and I'll intersect",
    "start": "1908720",
    "end": "1914120"
  },
  {
    "text": "those the next thing is I'm going to validate my public IP if I've lost it then I don't have any",
    "start": "1914120",
    "end": "1922159"
  },
  {
    "text": "real API access anymore and I need to reallocate my private",
    "start": "1922159",
    "end": "1928600"
  },
  {
    "text": "IP now if any of my addresses has uh is no longer appropriate maybe they've",
    "start": "1928679",
    "end": "1935559"
  },
  {
    "text": "dropped some addresses from my master list if I have those I'm going to immediately release",
    "start": "1935559",
    "end": "1943080"
  },
  {
    "text": "them now I need to distribute the addresses fairly among all of my devices",
    "start": "1943080",
    "end": "1950200"
  },
  {
    "text": "so I'm going to look at the scale group that I'm in I'm going to count up the",
    "start": "1950200",
    "end": "1955960"
  },
  {
    "text": "number of active members in that scale group and I'll divide that by the total",
    "start": "1955960",
    "end": "1961039"
  },
  {
    "text": "number of addresses now remember we want to overcover our addresses so I'm going",
    "start": "1961039",
    "end": "1966080"
  },
  {
    "text": "to round up to get the number of addresses that I should have at any",
    "start": "1966080",
    "end": "1971399"
  },
  {
    "text": "time and then I'm going to release my addresses if I've got too many I will",
    "start": "1971399",
    "end": "1977279"
  },
  {
    "text": "release them one at a time if I've got too few I'm going to allocate the total",
    "start": "1977279",
    "end": "1983240"
  },
  {
    "text": "number uh that I should have the reason that we do this is we want to minimize",
    "start": "1983240",
    "end": "1988480"
  },
  {
    "text": "the amount of time that these addresses are not assigned if I gave them all away all at once then it will take longer for",
    "start": "1988480",
    "end": "1995519"
  },
  {
    "text": "them to get uh reabsorbed by the rest of the instances so I bleed them out slowly",
    "start": "1995519",
    "end": "2001559"
  },
  {
    "text": "but I allocate them quickly and then finally I'm going to look at all of the instances and see if",
    "start": "2001559",
    "end": "2007960"
  },
  {
    "text": "any of them don't have a public IP if any of them don't then I'm going to",
    "start": "2007960",
    "end": "2013279"
  },
  {
    "text": "release one but I don't want all of my instances releasing one and so I have to",
    "start": "2013279",
    "end": "2018720"
  },
  {
    "text": "come up with an ordering this is a very good uh chance to use instance IDs we",
    "start": "2018720",
    "end": "2024679"
  },
  {
    "text": "use instance IDs as our sort key and the lowest one in the list is the one that's",
    "start": "2024679",
    "end": "2030039"
  },
  {
    "text": "going to give up one of his addresses we have to do that because that new instance is sitting trying to allocate",
    "start": "2030039",
    "end": "2037440"
  },
  {
    "text": "his public IP is primary public IP in all of these cases whenever we are",
    "start": "2037440",
    "end": "2044639"
  },
  {
    "text": "going to release an address we do it in concert with the application so we will",
    "start": "2044639",
    "end": "2051000"
  },
  {
    "text": "actually ask the application which address would be best for me to give up",
    "start": "2051000",
    "end": "2056638"
  },
  {
    "text": "now he may just return any of them but he can look at for example the number of active connections on a particular",
    "start": "2056639",
    "end": "2063960"
  },
  {
    "text": "server and give me back the address that has the lowest",
    "start": "2063960",
    "end": "2069720"
  },
  {
    "start": "2071000",
    "end": "2142000"
  },
  {
    "text": "number then finally we have shutdown if this is the orderly shutdown",
    "start": "2071359",
    "end": "2077240"
  },
  {
    "text": "process if the shutdown just occurs somebody terminates the node then",
    "start": "2077240",
    "end": "2082440"
  },
  {
    "text": "eventually those eips uh that it was using will re uh will will be released",
    "start": "2082440",
    "end": "2088800"
  },
  {
    "text": "by AWS and they'll be picked up by the other nodes but if I'm going through an orderly shutdown first I'm going to",
    "start": "2088800",
    "end": "2096560"
  },
  {
    "text": "release all of my network interfaces everything except the one that I was",
    "start": "2096560",
    "end": "2101599"
  },
  {
    "text": "born with and that's going to release automatically all of the eips that are",
    "start": "2101599",
    "end": "2107520"
  },
  {
    "text": "assigned to those interfaces next I'm going to go through my my primary interface I'm going to",
    "start": "2107520",
    "end": "2114320"
  },
  {
    "text": "release every IP except my primary one I want to keep that last address because",
    "start": "2114320",
    "end": "2121160"
  },
  {
    "text": "that's where my internet access is coming from and I want to continue to be a able to log",
    "start": "2121160",
    "end": "2128320"
  },
  {
    "text": "and use AWS apis during my shutdown process and then finally the instance",
    "start": "2128320",
    "end": "2134400"
  },
  {
    "text": "itself is terminated and AWS is going to release that last primary",
    "start": "2134400",
    "end": "2141480"
  },
  {
    "start": "2142000",
    "end": "2180000"
  },
  {
    "text": "key okay so this is the final view of our managed IP address",
    "start": "2143280",
    "end": "2148960"
  },
  {
    "text": "solution uh we start off with just user data and we have our Bridge which is our",
    "start": "2148960",
    "end": "2155440"
  },
  {
    "text": "Puppet Master we have our configuration information in Route 53 that's our list",
    "start": "2155440",
    "end": "2161200"
  },
  {
    "text": "of ips and we've got information in S3 and in instance",
    "start": "2161200",
    "end": "2168560"
  },
  {
    "text": "data so we've got our our configuration and and IP solution now we need to get",
    "start": "2169880",
    "end": "2176359"
  },
  {
    "text": "back into having global scale so lucky for us all of the things",
    "start": "2176359",
    "end": "2184800"
  },
  {
    "text": "that we have done with these instances play very nicely with AWS first off we can bootstrap our",
    "start": "2184800",
    "end": "2191200"
  },
  {
    "text": "instances either through a custom Omi or by using cloud and nit autoscaling groups which are going",
    "start": "2191200",
    "end": "2198720"
  },
  {
    "text": "to be part of any Global redundant solution are very good at setting user",
    "start": "2198720",
    "end": "2204680"
  },
  {
    "text": "data and instance data we can have our elbs managed by our",
    "start": "2204680",
    "end": "2211079"
  },
  {
    "text": "autoscale groups and then we're going to end up with two sets of addresses first we're",
    "start": "2211079",
    "end": "2217680"
  },
  {
    "text": "going to have a latency based Route 53 uh address for our standard TCP",
    "start": "2217680",
    "end": "2225319"
  },
  {
    "text": "HTTP those addresses are likely going to point to our elbs and they're going to",
    "start": "2225319",
    "end": "2231680"
  },
  {
    "text": "have health check and everything else turned on but I can't control the IP",
    "start": "2231680",
    "end": "2237400"
  },
  {
    "text": "addresses of that set of elbs so I'm going to have another address it's also",
    "start": "2237400",
    "end": "2244560"
  },
  {
    "text": "latency based but this is pulling from a fixed set of addresses that is my white",
    "start": "2244560",
    "end": "2253920"
  },
  {
    "text": "list now I as soon as I have a public IP then I've got internet access I can",
    "start": "2253920",
    "end": "2259720"
  },
  {
    "text": "remotely log I can do everything that I want my node to do I've got Cloud watch",
    "start": "2259720",
    "end": "2265560"
  },
  {
    "text": "for monitoring so let's play through this",
    "start": "2265560",
    "end": "2271520"
  },
  {
    "start": "2269000",
    "end": "2372000"
  },
  {
    "text": "whole scenario we we start with our original goal we wanted a set of instances and we wanted a set of",
    "start": "2271520",
    "end": "2280359"
  },
  {
    "text": "addresses we're going to start these up inside a VPC and we've got our puppet uh",
    "start": "2280520",
    "end": "2288200"
  },
  {
    "text": "Puppet Master which is being used for our internet Bridge so next we're going to handle all",
    "start": "2288200",
    "end": "2294839"
  },
  {
    "text": "of our configuration our IP address set moves into Route 53 and we're going to add instance data",
    "start": "2294839",
    "end": "2301520"
  },
  {
    "text": "and Amazon S3 for the rest of our configuration now finally we need to",
    "start": "2301520",
    "end": "2308040"
  },
  {
    "text": "make this a cloud uh Global solution and so we're going to wrap each of these",
    "start": "2308040",
    "end": "2313720"
  },
  {
    "text": "vpcs inside our autoscale groups per region and we're going to put our",
    "start": "2313720",
    "end": "2319760"
  },
  {
    "text": "elastic load balancer back on the be on the front and with all of this we've got",
    "start": "2319760",
    "end": "2326640"
  },
  {
    "text": "Cloud watch that we can add for our monitoring uh Justin mentioned paper",
    "start": "2326640",
    "end": "2333839"
  },
  {
    "text": "trail we use the same we also use pager Duty uh I'll Echo",
    "start": "2333839",
    "end": "2340240"
  },
  {
    "text": "that the 2:00 calls aren't great but it's better than having your system down and then finally Route 53 with",
    "start": "2340240",
    "end": "2347520"
  },
  {
    "text": "latency based uh lookups and so we've got our goal",
    "start": "2347520",
    "end": "2354640"
  },
  {
    "text": "achieved we've got a set of instances a set of fixed IP addresses suitable for",
    "start": "2354640",
    "end": "2359800"
  },
  {
    "text": "whitelisting and we still have the global scale so thank you very much and and I",
    "start": "2359800",
    "end": "2367839"
  },
  {
    "text": "think that we are looks like maybe 10 minutes for questions",
    "start": "2367839",
    "end": "2374119"
  }
]