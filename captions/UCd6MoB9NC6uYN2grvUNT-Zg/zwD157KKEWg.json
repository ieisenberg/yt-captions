[
  {
    "start": "0",
    "end": "147000"
  },
  {
    "text": "so this last session is just to keep it simple and at the end to talk about",
    "start": "30",
    "end": "5040"
  },
  {
    "text": "advanced applications where you want to use other tools beyond lambda and what",
    "start": "5040",
    "end": "11759"
  },
  {
    "text": "their bigotry in what we saw today and use the SS step functions so I'm not",
    "start": "11759",
    "end": "19859"
  },
  {
    "text": "introducing me again probably most of the people was already here but I'm part of the Technical Evangelist team and",
    "start": "19859",
    "end": "25410"
  },
  {
    "text": "then elope and you can reach me on Danilo at amazon.com or on Twitter and",
    "start": "25410",
    "end": "30929"
  },
  {
    "text": "github I'm always Dani lop so very easy to find me so let's say that you liked",
    "start": "30929",
    "end": "37860"
  },
  {
    "text": "what you saw today you start building your service application you start creating your first lambda function and",
    "start": "37860",
    "end": "43260"
  },
  {
    "text": "it's doing something maybe something important and then you start to have other functions that are coordinated",
    "start": "43260",
    "end": "49590"
  },
  {
    "text": "with this function maybe they are invoked under some circumstances and then this lambda function will grow",
    "start": "49590",
    "end": "55920"
  },
  {
    "text": "today we were talking about you can keep this under management from a development perspective like with tools like a",
    "start": "55920",
    "end": "62640"
  },
  {
    "text": "service framework or a Sam but there's lots of complexity that it's in how you",
    "start": "62640",
    "end": "70560"
  },
  {
    "text": "really coordinate the flow of your lambda functions and this is actually similar to a problem the same problem",
    "start": "70560",
    "end": "77100"
  },
  {
    "text": "you would have if you have micro services and you have lots of micro service you need some way to coordinate",
    "start": "77100",
    "end": "82259"
  },
  {
    "text": "the flow understand the business logic how your business process are mapped in a flow that can go through different",
    "start": "82259",
    "end": "89540"
  },
  {
    "text": "building blocks lot different of the function or different microservices and probably at some point you have",
    "start": "89540",
    "end": "94799"
  },
  {
    "text": "databases or queues that need you need to interact with and maybe you can even",
    "start": "94799",
    "end": "101070"
  },
  {
    "text": "interact with legacy systems that may be around on-premise then they have a different speed boat in development and",
    "start": "101070",
    "end": "107579"
  },
  {
    "text": "they don't have the automatic scalability that you can get in the cloud that's lots of this was really",
    "start": "107579",
    "end": "115619"
  },
  {
    "text": "just the introduction for the people that was coming so when you have lots of lambda functions and lots of moving",
    "start": "115619",
    "end": "122490"
  },
  {
    "text": "parts there's lots of effort that you need to spend in coordinating these but as I like it was summarizing the rain",
    "start": "122490",
    "end": "129660"
  },
  {
    "text": "event in our city or key not invulnerable as keynote will would like to help developers only write",
    "start": "129660",
    "end": "136140"
  },
  {
    "text": "the business logic and we would like as Adam West's work over everything that is not business logic that is just a burden",
    "start": "136140",
    "end": "141930"
  },
  {
    "text": "for the developers so how can we make this simpler that's what what you need",
    "start": "141930",
    "end": "148110"
  },
  {
    "start": "147000",
    "end": "252000"
  },
  {
    "text": "when you start to move from functions to applications so I want my functions to run maybe in sequence or in some point I",
    "start": "148110",
    "end": "155220"
  },
  {
    "text": "want my functions to be executed in parallel maybe depending on the data",
    "start": "155220",
    "end": "160290"
  },
  {
    "text": "that I have I need to run different functions so at some point I want to choose one function instead of an order",
    "start": "160290",
    "end": "165720"
  },
  {
    "text": "instead of having a big function that can do multiple things maybe I won't",
    "start": "165720",
    "end": "171000"
  },
  {
    "text": "this is very important to retrieve function so that if there is a rare or from a function I want to find control",
    "start": "171000",
    "end": "176400"
  },
  {
    "text": "on what's happening catch the error maybe retry a few times I want maybe to",
    "start": "176400",
    "end": "183180"
  },
  {
    "text": "have the equivalent of a try catch finally syntax that I usually have from programming languages of lambda function",
    "start": "183180",
    "end": "190080"
  },
  {
    "text": "level so they didn't try a function catch the error and finally clean the state of the resources and maybe I don't",
    "start": "190080",
    "end": "196710"
  },
  {
    "text": "have I don't like the five minutes the limit of of the time out of the lambda",
    "start": "196710",
    "end": "202440"
  },
  {
    "text": "functions I want to run my business process four hours and so I need some",
    "start": "202440",
    "end": "208830"
  },
  {
    "text": "coordination layer and this coordination layer to work with several s technology needs to scale out because I can have",
    "start": "208830",
    "end": "216090"
  },
  {
    "text": "one or thousands concurrent executions I need to keep a state because usually the",
    "start": "216090",
    "end": "222000"
  },
  {
    "text": "problem when I have this distributed architecture is not just the same with the flow but keeping the state in a",
    "start": "222000",
    "end": "227520"
  },
  {
    "text": "robust manner across different results I want to deal with error and timeouts and",
    "start": "227520",
    "end": "235470"
  },
  {
    "text": "of course this must be easy to use otherwise we're just adding complexity to complexity and if I have some",
    "start": "235470",
    "end": "241850"
  },
  {
    "text": "execution some complex business process this must be auditable so it must be easy for me to understand what is",
    "start": "241850",
    "end": "248250"
  },
  {
    "text": "happening at any time in any business process running in a distributed architecture that's what we introduced",
    "start": "248250",
    "end": "254090"
  },
  {
    "start": "252000",
    "end": "378000"
  },
  {
    "text": "in 2006 a SS step functions a domestic",
    "start": "254090",
    "end": "260400"
  },
  {
    "text": "faction is relatively easy service if you if you look at how it works because it can help to define what we call a",
    "start": "260400",
    "end": "266970"
  },
  {
    "text": "state chin and if you studied computer science it's really the computers the state machines that you study in computer",
    "start": "266970",
    "end": "273080"
  },
  {
    "text": "science so it's a machine can have a state and change state we use address on",
    "start": "273080",
    "end": "279530"
  },
  {
    "text": "language that we created and we released in open-source so anybody can use it the",
    "start": "279530",
    "end": "285500"
  },
  {
    "text": "console will automatically take the language and visualize the flow of the state machine and then if you execute",
    "start": "285500",
    "end": "291680"
  },
  {
    "text": "the state machine with some input state you can monitor the execution see the flow where it goes and at any step in",
    "start": "291680",
    "end": "299000"
  },
  {
    "text": "the in the stay in the execution of the state machine you can understand what what is entering what is exiting and",
    "start": "299000",
    "end": "305690"
  },
  {
    "text": "also have direct access to the logs of the lambda function that was there so",
    "start": "305690",
    "end": "310850"
  },
  {
    "text": "this is the most basic hello world hello world is the team of the day at least in my presentations and this is a single",
    "start": "310850",
    "end": "318169"
  },
  {
    "text": "state single task state machine I have a start and an end so I can add the",
    "start": "318169",
    "end": "324139"
  },
  {
    "text": "comment then I have to say which is the starting state because the order of the JSON file can be different from the",
    "start": "324139",
    "end": "330590"
  },
  {
    "text": "execution state so I start from the state L Award then I have the list of states I have only one state here hello world",
    "start": "330590",
    "end": "336650"
  },
  {
    "text": "then I have different types of state this is a task a task is something that I want to execute and a task in this",
    "start": "336650",
    "end": "343039"
  },
  {
    "text": "case is a lambda function and here I can use the lambda Amazon resource name so if you use lambda we give a unique",
    "start": "343039",
    "end": "350599"
  },
  {
    "text": "identifier to any lambda function and it's called lambda R and actually are",
    "start": "350599",
    "end": "356120"
  },
  {
    "text": "nested it's Amazon resource name is a general concept that we use across most of our services to give unique names to",
    "start": "356120",
    "end": "362840"
  },
  {
    "text": "resources so that you can for example give permissions don't know what's happening so I execute this lambda for this task",
    "start": "362840",
    "end": "369410"
  },
  {
    "text": "that is a lambda function and then this is an ending state because and is true so the state machine ends and the",
    "start": "369410",
    "end": "375860"
  },
  {
    "text": "execution ends here and when I create a state machine I can execute one or up to",
    "start": "375860",
    "end": "382130"
  },
  {
    "text": "1 million at the same time this is the default limit that we give for state machine so it's very scalable and the",
    "start": "382130",
    "end": "389990"
  },
  {
    "text": "maximum execution time is slightly bigger than those of lambda function so we go from five minutes to one year so",
    "start": "389990",
    "end": "396710"
  },
  {
    "text": "you can have state machines that run for up to one year and we keep the state across all the state changes as I said you can",
    "start": "396710",
    "end": "404029"
  },
  {
    "text": "model the execution from the console and we color well if there are different branches choices or errors you can see",
    "start": "404029",
    "end": "411379"
  },
  {
    "text": "the flow of every execution where it goes and then for every step you can understand the input the output and and",
    "start": "411379",
    "end": "418580"
  },
  {
    "text": "have information on what is happening we will see this life in the console in a quick demo so each as I said each state",
    "start": "418580",
    "end": "426050"
  },
  {
    "text": "as can have a type and those are the the types that we support so a task is a",
    "start": "426050",
    "end": "432349"
  },
  {
    "text": "unit of work most often this is a lambda function but we will see that there is also at the concept of activity that",
    "start": "432349",
    "end": "438949"
  },
  {
    "text": "means that you can run code anywhere on on an ec2 instance in a container outside of Amazon something that runs in",
    "start": "438949",
    "end": "447439"
  },
  {
    "text": "a data center it can even be a human interaction that must approve or not a",
    "start": "447439",
    "end": "453529"
  },
  {
    "text": "single step so a task is a unit of work very generic concept you can have a choice a choice means that this this",
    "start": "453529",
    "end": "460309"
  },
  {
    "text": "state can have a choice and then go to different sub States parallel if you",
    "start": "460309",
    "end": "466999"
  },
  {
    "text": "want to execute multiple states in parallel like I want to do something and at the same time I want to do another",
    "start": "466999",
    "end": "472610"
  },
  {
    "text": "task wait if you need to wait for some time or for a specific time so you can",
    "start": "472610",
    "end": "478339"
  },
  {
    "text": "you either give a direction or a specific time to wait for a fail is a",
    "start": "478339",
    "end": "484069"
  },
  {
    "text": "state that has it says it explicitly fails the the current execution of the state machine succeed is the opposite is",
    "start": "484069",
    "end": "491689"
  },
  {
    "text": "a explicitly terminating state and pass is a state that doesn't do most but it",
    "start": "491689",
    "end": "499069"
  },
  {
    "text": "can be used to manipulate the input and the output of the of the state for example add or extract information from",
    "start": "499069",
    "end": "505219"
  },
  {
    "text": "the state and change the state for the next step so when we execute a task so",
    "start": "505219",
    "end": "512120"
  },
  {
    "start": "509000",
    "end": "575000"
  },
  {
    "text": "the task is probably the most important concept the unit of work we can have synchronous tasks and this is when you",
    "start": "512120",
    "end": "517758"
  },
  {
    "text": "use lambda function so this is for example I want to extract the metadata of the images using recognition like we",
    "start": "517759",
    "end": "524689"
  },
  {
    "text": "said today I execute the lambda function this is a task and it is my honor that I can get from the lambda console or from",
    "start": "524689",
    "end": "532160"
  },
  {
    "text": "the CLI this the a synchronous task the synchronous task is what we call an",
    "start": "532160",
    "end": "537560"
  },
  {
    "text": "activity task and it's similar if you use a simple workflow in the past it's",
    "start": "537560",
    "end": "543770"
  },
  {
    "text": "under service that we have it's a it's an activity that is polled by workers so you can create an activity that can be",
    "start": "543770",
    "end": "550190"
  },
  {
    "text": "for example I maybe I want to have people rate how how nice a picture is",
    "start": "550190",
    "end": "555800"
  },
  {
    "text": "from 1 to 10 something that computers start to be doing but probably in a different way I can create an activity",
    "start": "555800",
    "end": "562610"
  },
  {
    "text": "and then when I create an activity this will be polled by a pool of resources can be container soon as he too can be",
    "start": "562610",
    "end": "569920"
  },
  {
    "text": "resource is running in another data center and as an API for doing the polling so basically you register and",
    "start": "569920",
    "end": "576560"
  },
  {
    "start": "575000",
    "end": "652000"
  },
  {
    "text": "create the activity task then whenever the the code of the activity is running you just pull for a task and if there is",
    "start": "576560",
    "end": "584450"
  },
  {
    "text": "a task to be done we will give the input state to this task then the code can run",
    "start": "584450",
    "end": "589700"
  },
  {
    "text": "in your data center on an ec2 instance whenever you want and then you can give an API to report the success or the",
    "start": "589700",
    "end": "596810"
  },
  {
    "text": "failure of this activity and if this activity is long running maybe takes hours or days we also provide unhurt bit",
    "start": "596810",
    "end": "603620"
  },
  {
    "text": "API so that you can say the activity is still running everything is ok because if we see that you don't report the",
    "start": "603620",
    "end": "609680"
  },
  {
    "text": "heartbeat for some time we can see we can think that something is not running well is that solid about our control the",
    "start": "609680",
    "end": "616790"
  },
  {
    "text": "activity is running maybe in your data center and we will reschedule the same activity with another polar task this is",
    "start": "616790",
    "end": "624860"
  },
  {
    "text": "the Amazon state language so as I said is a an open source specification that",
    "start": "624860",
    "end": "632089"
  },
  {
    "text": "goes through all the things that I mentioned and with great detail and more information so I strongly suggest to",
    "start": "632089",
    "end": "639350"
  },
  {
    "text": "have a look at it and as I said it's open source so if you want to input if you thinking of building something similar or you need similar concepts you",
    "start": "639350",
    "end": "646640"
  },
  {
    "text": "can get it from here because it's a completely open source documentation that we provide the state machine can",
    "start": "646640",
    "end": "654529"
  },
  {
    "start": "652000",
    "end": "805000"
  },
  {
    "text": "integrate with other AWS services so you can create state machine and activities",
    "start": "654529",
    "end": "660649"
  },
  {
    "text": "without formation so you can have your symptom plate and CloudFormation template that describes also the",
    "start": "660649",
    "end": "665959"
  },
  {
    "text": "statement is the the of the state machine you can also execute a state machine from the API",
    "start": "665959",
    "end": "672680"
  },
  {
    "text": "gateway but this is on a synchronous operation because the state machine is not synchronous",
    "start": "672680",
    "end": "678020"
  },
  {
    "text": "so if you could invoke the execution the feedback of the API will only be okay the state machine execution has started",
    "start": "678020",
    "end": "684800"
  },
  {
    "text": "you can't get a result but this is useful if you have a business a complex business process it depends really",
    "start": "684800",
    "end": "691010"
  },
  {
    "text": "depends you can directly go from the AP gateway to the to invoke the execution",
    "start": "691010",
    "end": "696680"
  },
  {
    "text": "of a state machine or you can call a lambda function and then the lambda function can do different things start",
    "start": "696680",
    "end": "702110"
  },
  {
    "text": "the execution of the state machine and then maybe give back some graphics of some information in a more formatted way",
    "start": "702110",
    "end": "709570"
  },
  {
    "text": "usually the example that I give here is if you build an e-commerce website maybe",
    "start": "709570",
    "end": "714830"
  },
  {
    "text": "most of your website is built with lambda API if you go serverless but then if you purchase something then",
    "start": "714830",
    "end": "720800"
  },
  {
    "text": "you need to start a work flow because the purchase of the raishin is much more complex you need to start a workflow that will look effectively the payment",
    "start": "720800",
    "end": "728270"
  },
  {
    "text": "is correct the availability of the product is correct I start the delivery maybe this workflow can follow all the delivery of",
    "start": "728270",
    "end": "734990"
  },
  {
    "text": "the item to this shipped the customer so it can run for a few days and can send",
    "start": "734990",
    "end": "740029"
  },
  {
    "text": "the emails with the updates okay your status of their deliveries ship this in this warehouse is going to be delivered",
    "start": "740029",
    "end": "747320"
  },
  {
    "text": "tomorrow so you can really build a business process in this way and you can either start directly from from the a",
    "start": "747320",
    "end": "754130"
  },
  {
    "text": "gateway or a user a lambda function in the in between if that's integrated with",
    "start": "754130",
    "end": "759620"
  },
  {
    "text": "cloud which events so you can use events to trigger state machines or schedule",
    "start": "759620",
    "end": "765680"
  },
  {
    "text": "state machines so if you remember in my real session I said that lambda function",
    "start": "765680",
    "end": "771080"
  },
  {
    "text": "can replace those scripts that we all do in our data centers to to clean up the staff or take backups if it's something",
    "start": "771080",
    "end": "778370"
  },
  {
    "text": "more complex and we see an example you can trigger a state machine that can be much much more robust and then can",
    "start": "778370",
    "end": "784370"
  },
  {
    "text": "launch multiple lambda functions to apply the task retry the task get the result and working in a more robust way",
    "start": "784370",
    "end": "792640"
  },
  {
    "text": "you can log the calls to Cloud Drive so if you have any compliance this is very",
    "start": "792640",
    "end": "797930"
  },
  {
    "text": "useful and mostly you you can start state machine from a lambda function there's the normal use",
    "start": "797930",
    "end": "804539"
  },
  {
    "text": "case that we see the console will automatically write the the design that",
    "start": "804539",
    "end": "810689"
  },
  {
    "start": "805000",
    "end": "882000"
  },
  {
    "text": "the visual workflow for the from the JSON that you provide and this is what you do for the images that image the",
    "start": "810689",
    "end": "818459"
  },
  {
    "text": "recognition that we were talking to today I think I also like simple afterwards but the day you start then",
    "start": "818459",
    "end": "823949"
  },
  {
    "text": "you have a first task list is extracting the metadata from the pictures that you upload then you can have a choice if the",
    "start": "823949",
    "end": "830579"
  },
  {
    "text": "image format so you have a lambda function that checked the type of the images if it's supported you go on",
    "start": "830579",
    "end": "837479"
  },
  {
    "text": "otherwise you give an error that is not supported so you fail with the state fail and not supported image type",
    "start": "837479",
    "end": "843289"
  },
  {
    "text": "otherwise you store the image you launch imagined recognition in parallel with the generation of thumbnails because",
    "start": "843289",
    "end": "849479"
  },
  {
    "text": "these two things can happen in parallel and speed of the process then the generation of thumbnails ends you also",
    "start": "849479",
    "end": "859159"
  },
  {
    "text": "take the the tile the tags found by recognition and you store them for",
    "start": "859189",
    "end": "864689"
  },
  {
    "text": "example in dynamodb when both the branch the parallel branch ends then the whole process will end correctly if you have",
    "start": "864689",
    "end": "871409"
  },
  {
    "text": "an error you will intercept and the two things happening in parallel will not and so if you have multiple parallel",
    "start": "871409",
    "end": "878039"
  },
  {
    "text": "execution all the parallel execution must and correctly this is an example of",
    "start": "878039",
    "end": "884699"
  },
  {
    "start": "882000",
    "end": "951000"
  },
  {
    "text": "how you can use step functions to do a human approval task and basically you",
    "start": "884699",
    "end": "891179"
  },
  {
    "text": "can have for example a cloud watch that can schedule a lambda function a lambda function can on one side create an",
    "start": "891179",
    "end": "901499"
  },
  {
    "text": "activity task here and on one side send an email the email goes to the user that",
    "start": "901499",
    "end": "907499"
  },
  {
    "text": "has some decision to take you can approve or not approve something the two links succeed or fail go to the API",
    "start": "907499",
    "end": "914429"
  },
  {
    "text": "gateway and the API gate we can directly send the task successor task failure you remember the two of the API is for",
    "start": "914429",
    "end": "921179"
  },
  {
    "text": "activities back to step function and this will close the circle so in this way you can give this task will succeed",
    "start": "921179",
    "end": "929399"
  },
  {
    "text": "or not and then the state of your state machine you can have different branch if the state fails this is not been approved so maybe I",
    "start": "929399",
    "end": "936180"
  },
  {
    "text": "take some action it has been approved I go in another branch and do other actions and you have up to one year",
    "start": "936180",
    "end": "943590"
  },
  {
    "text": "between the thing you said the email and when you can have to take the decision so it's much more flexible than other",
    "start": "943590",
    "end": "950670"
  },
  {
    "text": "configuration this is the same as before so the image recognition this is the architecture that you saw today in a",
    "start": "950670",
    "end": "956400"
  },
  {
    "start": "951000",
    "end": "990000"
  },
  {
    "text": "couple of presentations for extracting the information this is the state machine diagram and I don't know to me",
    "start": "956400",
    "end": "966000"
  },
  {
    "text": "the the diagram on the left is much easier to understand then one on the right one on the right is really",
    "start": "966000",
    "end": "971760"
  },
  {
    "text": "architectural is telling you how all the building blocks s3 then I'm going to be are flowing this one is much more clear",
    "start": "971760",
    "end": "980160"
  },
  {
    "text": "on the flow of the operation is telling me that this either works or fails and",
    "start": "980160",
    "end": "985620"
  },
  {
    "text": "what are the different state that the data will go through I didn't mention",
    "start": "985620",
    "end": "993120"
  },
  {
    "start": "990000",
    "end": "1088000"
  },
  {
    "text": "but all those links at the bottom is because there are articles that you can then find and see in more detail this is",
    "start": "993120",
    "end": "1000730"
  },
  {
    "text": "an EBS snapshot management state machine so if you use EBS the elastic block",
    "start": "1000730",
    "end": "1008840"
  },
  {
    "text": "storage with is the storage that you can connect to ec2 instances you need to have some procedure to take the",
    "start": "1008840",
    "end": "1015950"
  },
  {
    "text": "snapshots the equivalent of the cops and this is a snapshot management state machine that will do four things first",
    "start": "1015950",
    "end": "1022490"
  },
  {
    "text": "will tag the snapshot with your information then will count the",
    "start": "1022490",
    "end": "1028040"
  },
  {
    "text": "snapshots it will copy so we go again in the multi-regional scenario from the",
    "start": "1028040",
    "end": "1033560"
  },
  {
    "text": "previous session the the snapshot in another region and then it will delete",
    "start": "1033560",
    "end": "1039260"
  },
  {
    "text": "the expired the snapshot so you only keep for example five ten snapshot for",
    "start": "1039260",
    "end": "1044360"
  },
  {
    "text": "every volume and not more than a number that you specify so in the first region",
    "start": "1044360",
    "end": "1049520"
  },
  {
    "text": "this starts it will replicate in the other region in the other region when the snapshot is replicated these",
    "start": "1049520",
    "end": "1056510"
  },
  {
    "text": "triggers are cloud watch events that can start the same state machine that will locally",
    "start": "1056510",
    "end": "1062030"
  },
  {
    "text": "check and eventually delete the oldest snapshot so that also in the target region you keep only the latest Phi",
    "start": "1062030",
    "end": "1068240"
  },
  {
    "text": "ten snapshot for every volume and not more than that so this is quite a complex workflow to manage manually you",
    "start": "1068240",
    "end": "1075410"
  },
  {
    "text": "can do scripts to do that but in this way is very clean and the state is managed completely by the platform and",
    "start": "1075410",
    "end": "1080420"
  },
  {
    "text": "there's a nice article here now this is the github repository so the describes how to set up this environment so let's",
    "start": "1080420",
    "end": "1089030"
  },
  {
    "start": "1088000",
    "end": "1267000"
  },
  {
    "text": "see how this works live so this is the",
    "start": "1089030",
    "end": "1094600"
  },
  {
    "text": "AWS console step functions are in the application integration section and we",
    "start": "1094600",
    "end": "1104570"
  },
  {
    "text": "can get started here we have you can auto from scratch similarly to lamda we",
    "start": "1104570",
    "end": "1112010"
  },
  {
    "text": "have a couple of projects we are going to add more that are tied to our tutorials so if you want to invest some",
    "start": "1112010",
    "end": "1118220"
  },
  {
    "text": "time you can follow these projects and we have a very few templates that are very basic but gives you an idea of what",
    "start": "1118220",
    "end": "1124550"
  },
  {
    "text": "you can build so let's have a look at those templates so the first one is DL award the same one that we saw before is",
    "start": "1124550",
    "end": "1131900"
  },
  {
    "text": "the single state state machine that starts at L Awards and then ends nothing",
    "start": "1131900",
    "end": "1138500"
  },
  {
    "text": "interesting second one is the weight state and the weight state is land we",
    "start": "1138500",
    "end": "1144050"
  },
  {
    "text": "see the diagram here so it's first starting a lambda function a task and",
    "start": "1144050",
    "end": "1149510"
  },
  {
    "text": "then there's a task at the end and in the middle is is waiting for some time in multiple ways so here we have the",
    "start": "1149510",
    "end": "1156920"
  },
  {
    "text": "same state so we start at first state and then there is the list of the states so this is the first state it's a task",
    "start": "1156920",
    "end": "1164270"
  },
  {
    "text": "it's a lambda function so typically this is the syntax of an arm so the function ID account and region",
    "start": "1164270",
    "end": "1170000"
  },
  {
    "text": "and when this task ends the next state is weight using seconds this is a name",
    "start": "1170000",
    "end": "1176540"
  },
  {
    "text": "of a state and this is the state and this is a state of type weight and it",
    "start": "1176540",
    "end": "1181670"
  },
  {
    "text": "will wait for ten seconds and then the next state is weight using time stamp",
    "start": "1181670",
    "end": "1186920"
  },
  {
    "text": "that as you can imagine is similar to the previous one but instead of having seconds as a full time stamp with this",
    "start": "1186920",
    "end": "1193100"
  },
  {
    "text": "syntax so it will wait exactly for this moment in time and then it will go to",
    "start": "1193100",
    "end": "1198320"
  },
  {
    "text": "the next state and these two states here are you the fact that you can manipulate the",
    "start": "1198320",
    "end": "1204200"
  },
  {
    "text": "state that is passed from one state to another so and we're using JSON pots so",
    "start": "1204200",
    "end": "1209660"
  },
  {
    "text": "JSON part I'm not entering into details but basically dollar means the root of the JSON document and then you can",
    "start": "1209660",
    "end": "1215870"
  },
  {
    "text": "navigate the the single components of the JSON document so basically here we're looking for an expiry date in the",
    "start": "1215870",
    "end": "1222950"
  },
  {
    "text": "state if there is an expiry date in the in the state we use that as a time stamped part - so our time stamp to wait",
    "start": "1222950",
    "end": "1233090"
  },
  {
    "text": "for before moving on and the second one is doing and is looking for a address on",
    "start": "1233090",
    "end": "1239950"
  },
  {
    "text": "probability this expiry seconds and then it will wait for those seconds so this is a number not a date",
    "start": "1239950",
    "end": "1246110"
  },
  {
    "text": "before going on to the next state so the idea is you can wait for a certain amount of duration or for an explicit",
    "start": "1246110",
    "end": "1253640"
  },
  {
    "text": "moment in time and this can be hardly put inside the state machine or can be part of the input output that one state",
    "start": "1253640",
    "end": "1260570"
  },
  {
    "text": "is passing to the next state so quite flexible and then the final state is running along the function is pending",
    "start": "1260570",
    "end": "1267880"
  },
  {
    "start": "1267000",
    "end": "1428000"
  },
  {
    "text": "this template is the retrieve failure and this is very important if you have a",
    "start": "1267880",
    "end": "1273260"
  },
  {
    "text": "lambda function that is doing something mission-critical maybe is manipulating money in some way and you want to be",
    "start": "1273260",
    "end": "1278540"
  },
  {
    "text": "sure that if there is an error you can catch it and maybe retry it's also useful issues maybe the lambda function",
    "start": "1278540",
    "end": "1285350"
  },
  {
    "text": "is calling an API that you don't control so maybe you can get failures you can get bottlenecks something that you can't",
    "start": "1285350",
    "end": "1292430"
  },
  {
    "text": "manage but you need to manage on your side and this is how you do that so basically you have a task that is in",
    "start": "1292430",
    "end": "1299450"
  },
  {
    "text": "this case a lambda function and then you can have a retry section and the retry section can catch errors so there are",
    "start": "1299450",
    "end": "1306620"
  },
  {
    "text": "different ways you can report errors and lambda is integrated with that so if you get a custom error that means an error",
    "start": "1306620",
    "end": "1313190"
  },
  {
    "text": "that you declare in the code then you wait after one second you do too much",
    "start": "1313190",
    "end": "1318620"
  },
  {
    "text": "attempts so you try four to four times and you have a back of rate of two so",
    "start": "1318620",
    "end": "1324320"
  },
  {
    "text": "the back of thread is something that we use a lot in AWS and in Amazon and the idea is that if the number one reason",
    "start": "1324320",
    "end": "1330170"
  },
  {
    "text": "when you don't get the when you get an error from an API is because",
    "start": "1330170",
    "end": "1335600"
  },
  {
    "text": "too much load and the backhoe Fred will erect will apply the interval second by",
    "start": "1335600",
    "end": "1341600"
  },
  {
    "text": "the back of freight so the first time you will try after one second the second time you multiply by two so if I offer",
    "start": "1341600",
    "end": "1348020"
  },
  {
    "text": "two seconds if this would go on you then you would retire after for eight seconds",
    "start": "1348020",
    "end": "1353090"
  },
  {
    "text": "16 seconds and this helps spread a peak of requests into a large amount of time",
    "start": "1353090",
    "end": "1358610"
  },
  {
    "text": "so it's something that we do a lot especially on the AP is that we don't expect customer to call us too much so",
    "start": "1358610",
    "end": "1365809"
  },
  {
    "text": "maybe creating a VPC shouldn't be on ipi that the customer is calling 1000 times per second so if you start to do this",
    "start": "1365809",
    "end": "1372380"
  },
  {
    "text": "then we we try to slow you down and thread one this maybe then you can understand what you're doing the second",
    "start": "1372380",
    "end": "1377840"
  },
  {
    "text": "one is getting these other errors the state's error error error managed by the",
    "start": "1377840",
    "end": "1383630"
  },
  {
    "text": "state machine platform so if the task failed then you retry after 30 seconds",
    "start": "1383630",
    "end": "1390110"
  },
  {
    "text": "for only for two times again with a Bic afraid of - so after 30 seconds and then after 60 seconds I retry",
    "start": "1390110",
    "end": "1397070"
  },
  {
    "text": "if I get any other error from the state machine platform then I retire after",
    "start": "1397070",
    "end": "1402200"
  },
  {
    "text": "five seconds for five times and every time I have a back off rate of - so five",
    "start": "1402200",
    "end": "1407390"
  },
  {
    "text": "seconds 10 seconds 20 seconds and so on so this is how you can really fine grain",
    "start": "1407390",
    "end": "1413179"
  },
  {
    "text": "how you catch the error and retry the function so if you're calling a third party API that you don't control and you",
    "start": "1413179",
    "end": "1419720"
  },
  {
    "text": "get an error or a very slow or a timeout then you can use this to catch that and",
    "start": "1419720",
    "end": "1424809"
  },
  {
    "text": "retry we will see a few examples afterwards parallel is is the the type of state",
    "start": "1424809",
    "end": "1432440"
  },
  {
    "start": "1428000",
    "end": "1497000"
  },
  {
    "text": "that has two or more branches there's no limiting the number of",
    "start": "1432440",
    "end": "1437809"
  },
  {
    "text": "branches if not in the length of the document so and is basically you have you start at this parallel state that is",
    "start": "1437809",
    "end": "1445220"
  },
  {
    "text": "type parallel when all the parallel branch in sides this state ends",
    "start": "1445220",
    "end": "1450260"
  },
  {
    "text": "correctly then you go to the final state and inside those branches you can have",
    "start": "1450260",
    "end": "1455570"
  },
  {
    "text": "again a list of state and each one as a starting state so this started wait 20",
    "start": "1455570",
    "end": "1461750"
  },
  {
    "text": "second and this is of course 20 seconds wait the second branch here is a pass state so it's not doing",
    "start": "1461750",
    "end": "1469340"
  },
  {
    "text": "anything but then is passing to another wait state that will wait for 10 seconds",
    "start": "1469340",
    "end": "1474860"
  },
  {
    "text": "so if we run this this will end after 10 seconds plus a few milliseconds for the",
    "start": "1474860",
    "end": "1480950"
  },
  {
    "text": "pass state and this we wait 20 seconds then both ends and then the final state",
    "start": "1480950",
    "end": "1486710"
  },
  {
    "text": "will be triggered this is something that it's very basic when you look it here but if you need to build that reliable",
    "start": "1486710",
    "end": "1492740"
  },
  {
    "text": "in software in a distributed architecture is is not so easy to implement catch failure is similar to",
    "start": "1492740",
    "end": "1501350"
  },
  {
    "text": "retry but it adds the possibility to catch an error and depending on their error starts different go to different",
    "start": "1501350",
    "end": "1508160"
  },
  {
    "text": "states so it's not really visible but the idea here is that I have an L oh whoops I have an arrow word the state",
    "start": "1508160",
    "end": "1518750"
  },
  {
    "text": "and then depending on the error I go to different tasks on the custom error",
    "start": "1518750",
    "end": "1524270"
  },
  {
    "text": "fallback we'll manage certain error this type the reserva type fallback will manage a different error and then I have",
    "start": "1524270",
    "end": "1531140"
  },
  {
    "text": "a catch-all that will catch all the other errors so here I again I start at",
    "start": "1531140",
    "end": "1536720"
  },
  {
    "text": "the hello world state the DISA task and this task as a catch and if the error is",
    "start": "1536720",
    "end": "1543410"
  },
  {
    "text": "custom error so some custom error that I explicitly generated in my code then I",
    "start": "1543410",
    "end": "1548570"
  },
  {
    "text": "go to the next state custom error fall back and then those are States error from the state machine and then I have",
    "start": "1548570",
    "end": "1555770"
  },
  {
    "text": "the three states that power to the the flow go depending on from the error that",
    "start": "1555770",
    "end": "1562580"
  },
  {
    "text": "I got and if there is no error this the first hello word will just end here",
    "start": "1562580",
    "end": "1571690"
  },
  {
    "text": "so the first one if there are no error would just end so the other word can also end directly and the final one is a",
    "start": "1572120",
    "end": "1581030"
  },
  {
    "start": "1579000",
    "end": "1627000"
  },
  {
    "text": "pure choice so similar to the catch but the choice is depending on the on the on the value of the state of this",
    "start": "1581030",
    "end": "1586310"
  },
  {
    "text": "pass so you can get the output of you have the first state that is doing something and then next you have a",
    "start": "1586310",
    "end": "1592760"
  },
  {
    "text": "choice state the choice state will look in the output of the state if there is the inside the JSON document a few",
    "start": "1592760",
    "end": "1599990"
  },
  {
    "text": "objects that is equal to one so in this case using numeric equals but there's also string comparison if you want or greater",
    "start": "1599990",
    "end": "1607580"
  },
  {
    "text": "than greater equal less than less than equal if it's 1 then I go to first match",
    "start": "1607580",
    "end": "1613909"
  },
  {
    "text": "state if it's 2 I go to 2nd match state otherwise the default state is this one and everything else goes there so this",
    "start": "1613909",
    "end": "1621260"
  },
  {
    "text": "is an example of a choice not on an error but on the value of the",
    "start": "1621260",
    "end": "1626390"
  },
  {
    "text": "parameter so let's try to build a very simple state machine and and let's go on",
    "start": "1626390",
    "end": "1633289"
  },
  {
    "start": "1627000",
    "end": "1702000"
  },
  {
    "text": "with the example of this morning so if you remember this morning I was creating this very simple function that you give the name and you get hello good morning",
    "start": "1633289",
    "end": "1640539"
  },
  {
    "text": "now I want to build a little bit of workflow so I want to validate the name I want to be sure that the name is",
    "start": "1640539",
    "end": "1646220"
  },
  {
    "text": "correct so maybe in a business process you validate the customer ID on your customer database or something complex",
    "start": "1646220",
    "end": "1653690"
  },
  {
    "text": "in my case I just do some basic name validation my name is valid and all the other names are not so that's the going",
    "start": "1653690",
    "end": "1661370"
  },
  {
    "text": "to implement and then if the name is valid I will greet the name if you the name is invalid I will process with some",
    "start": "1661370",
    "end": "1667820"
  },
  {
    "text": "other lambda function an invalid name in for example you can send an email or give more information to the user so how",
    "start": "1667820",
    "end": "1676460"
  },
  {
    "text": "can we build this so we need in this case I'm using lambda functions not activities so I need three lambda",
    "start": "1676460",
    "end": "1681919"
  },
  {
    "text": "functions that I already created so let's go on lambda let's put a name of",
    "start": "1681919",
    "end": "1693320"
  },
  {
    "text": "filter then we can see the three functions so we have greet sorry if name",
    "start": "1693320",
    "end": "1698960"
  },
  {
    "text": "is the final one in the workflow so we have a validate name so here I'm not",
    "start": "1698960",
    "end": "1705140"
  },
  {
    "start": "1702000",
    "end": "1820000"
  },
  {
    "text": "expecting an input from an API gateway so I'm expecting a very basic object so",
    "start": "1705140",
    "end": "1710960"
  },
  {
    "text": "the event as in the first example should contain name this is the list of valid",
    "start": "1710960",
    "end": "1717200"
  },
  {
    "text": "name Danilo Daniel and Danny although the names are not valid according to me and this is how you can declare a custom",
    "start": "1717200",
    "end": "1724460"
  },
  {
    "text": "error with the JavaScript syntax supported by state machine there are",
    "start": "1724460",
    "end": "1730480"
  },
  {
    "text": "infinite ways to declare custom errors in JavaScript this is the way we suggest that works with state",
    "start": "1730480",
    "end": "1735660"
  },
  {
    "text": "chintz and we have examples for other languages such as Java JavaScript Python",
    "start": "1735660",
    "end": "1741450"
  },
  {
    "text": "and so on c-sharp so what I do here I I look if the event contains a name if",
    "start": "1741450",
    "end": "1749160"
  },
  {
    "text": "there is no name I create the error or name error and the error can have a",
    "start": "1749160",
    "end": "1755100"
  },
  {
    "text": "message and I pass the message no name if the name is not in the list of my",
    "start": "1755100",
    "end": "1762210"
  },
  {
    "text": "valid names then I create another error same still a name error but I pass a",
    "start": "1762210",
    "end": "1768150"
  },
  {
    "text": "message wrong name and then if there are no errors I terminate correctly so null",
    "start": "1768150",
    "end": "1775290"
  },
  {
    "text": "means no error and then I pass the event without any manipulation so this is an example of a state that is acting as a",
    "start": "1775290",
    "end": "1782490"
  },
  {
    "text": "pass-through if everything works otherwise is rising an error in case the",
    "start": "1782490",
    "end": "1791220"
  },
  {
    "text": "the name is valid it's the same function as today so slightly different I think",
    "start": "1791220",
    "end": "1796560"
  },
  {
    "text": "so this is this is the validate the more",
    "start": "1796560",
    "end": "1808500"
  },
  {
    "text": "you zoom the more JavaScript fights back so let's go to valid no this is the",
    "start": "1808500",
    "end": "1816750"
  },
  {
    "text": "validate this is me not JavaScript I think so let's go to the grid name and",
    "start": "1816750",
    "end": "1822570"
  },
  {
    "start": "1820000",
    "end": "1850000"
  },
  {
    "text": "the grid name will of course just take the name now I can easy my constraints",
    "start": "1822570",
    "end": "1828660"
  },
  {
    "text": "because I expect that the error has been validated but I say hello plus the name if there is no name I say a and then I I",
    "start": "1828660",
    "end": "1835800"
  },
  {
    "text": "just say the greeting technically this check could be avoided because I added a",
    "start": "1835800",
    "end": "1843480"
  },
  {
    "text": "validation to the state machine but this depends on on the robustness that you want to put into your process and then",
    "start": "1843480",
    "end": "1850440"
  },
  {
    "start": "1850000",
    "end": "1897000"
  },
  {
    "text": "if the name is invalid I just look into the error and there is a standard way",
    "start": "1850440",
    "end": "1856860"
  },
  {
    "text": "where you get the message that you pass to there or you get it into the cause of the event and the cause can be a wrong",
    "start": "1856860",
    "end": "1863460"
  },
  {
    "text": "name or a no name and then I send back this message I don't know how to greet this time because it's not a supporter",
    "start": "1863460",
    "end": "1868860"
  },
  {
    "text": "name or please I need the name give me at least a name to greet or there is an unknown error so those are very simple",
    "start": "1868860",
    "end": "1875520"
  },
  {
    "text": "functions and the idea is that with state machine you can take a larger function and and easy the constrains the",
    "start": "1875520",
    "end": "1881460"
  },
  {
    "text": "checks and build smaller building blocks of code the smaller the code the issue is to manage and to extend and to add",
    "start": "1881460",
    "end": "1887520"
  },
  {
    "text": "functionality so that's the agility that you get from this kind of approach this is of course an extreme ization now but",
    "start": "1887520",
    "end": "1893940"
  },
  {
    "text": "it gives you the idea so okay we have the three functions we can go back on the state machine and and and start and",
    "start": "1893940",
    "end": "1901170"
  },
  {
    "start": "1897000",
    "end": "1935000"
  },
  {
    "text": "create our state machine from scratch let's call it dev days death days",
    "start": "1901170",
    "end": "1908090"
  },
  {
    "text": "Stockholm I already created a role but the first time it will automatically",
    "start": "1908090",
    "end": "1914310"
  },
  {
    "text": "create a role to give the permission to the state machine to invoke the lambda functions because otherwise if you don't",
    "start": "1914310",
    "end": "1919800"
  },
  {
    "text": "give permissions by default the safe functions can interact with other services and here I can start writing",
    "start": "1919800",
    "end": "1925890"
  },
  {
    "text": "the code lightly enough I already have a bare bone state machine here so I could",
    "start": "1925890",
    "end": "1933720"
  },
  {
    "text": "be here we just refresh the user workflow and we see that the wizard",
    "start": "1933720",
    "end": "1938820"
  },
  {
    "text": "workflow is what I wanted to build so ever start a validator name invalid name and grid name and here I have it but if",
    "start": "1938820",
    "end": "1946170"
  },
  {
    "text": "you see wasn't of a validator name I gave a task but there's no resource but if I click here the console will",
    "start": "1946170",
    "end": "1951360"
  },
  {
    "text": "automatically show me the the available functions in my region and this is the",
    "start": "1951360",
    "end": "1956400"
  },
  {
    "text": "validate name so I can add this this is the arm then the second task is invalid",
    "start": "1956400",
    "end": "1963120"
  },
  {
    "text": "the name and here I have the process invited names okay and then the greet",
    "start": "1963120",
    "end": "1970290"
  },
  {
    "text": "name I have the critter name here and now I linked to the three states and if",
    "start": "1970290",
    "end": "1977580"
  },
  {
    "text": "we see the first one is a task that will catch an error and if the error is a",
    "start": "1977580",
    "end": "1982770"
  },
  {
    "text": "name error will call invalid name otherwise will pass to the next grid",
    "start": "1982770",
    "end": "1987960"
  },
  {
    "text": "name so this is an example how you can build this now I can create the state",
    "start": "1987960",
    "end": "1993000"
  },
  {
    "text": "machine the state machine then you can copy to new or create a different",
    "start": "1993000",
    "end": "1998100"
  },
  {
    "text": "version or you can add it now this was not possible at the beginning now you can edit and now you start execution and the execution of a",
    "start": "1998100",
    "end": "2004679"
  },
  {
    "text": "state machine needs an input document a JSON document so let's give a valid name",
    "start": "2004679",
    "end": "2010110"
  },
  {
    "text": "to start the first execution of the state machine so Danilo and you see this",
    "start": "2010110",
    "end": "2018270"
  },
  {
    "text": "is starting I don't know why it wants to zoom validate name is is an execution",
    "start": "2018270",
    "end": "2025559"
  },
  {
    "text": "and now it's going to greet name because green means that the state is a executed",
    "start": "2025559",
    "end": "2031230"
  },
  {
    "text": "or in execution and then it ended and succeeded now you can see the input was named anillo and the output was of",
    "start": "2031230",
    "end": "2037500"
  },
  {
    "text": "course hello Danilo but if I go here I can see all the steps with the timing",
    "start": "2037500",
    "end": "2043160"
  },
  {
    "text": "how the function where scheduler they can see the lambda function the logs of each functions of each step in the state",
    "start": "2043160",
    "end": "2051628"
  },
  {
    "text": "transition and and if something goes wrong you can really dive deep here you",
    "start": "2051629",
    "end": "2057929"
  },
  {
    "text": "can also click here on the state and then you get to the state the tile so this state has this input and this",
    "start": "2057929",
    "end": "2063270"
  },
  {
    "text": "output because no error was raised and you remember it was not changing the state the second step was getting this",
    "start": "2063270",
    "end": "2068878"
  },
  {
    "text": "input and generating is output so here visually you can really navigate and see anything that is happening and let's try",
    "start": "2068879",
    "end": "2076290"
  },
  {
    "text": "a new execution and let's give a wrong",
    "start": "2076290",
    "end": "2081300"
  },
  {
    "text": "name so let's write down Hilo with the age okay you see that",
    "start": "2081300",
    "end": "2088530"
  },
  {
    "text": "now validate name is executed now the city is going on the invalid the name branch the time and the speed of the",
    "start": "2088530",
    "end": "2095970"
  },
  {
    "text": "state machine should not be it's not exactly the same that you see in the console because the console there's some like polling and it's designed to be",
    "start": "2095970",
    "end": "2104460"
  },
  {
    "text": "reliable but it's much faster than that in a few milliseconds everything was executed and I get the input was done",
    "start": "2104460",
    "end": "2111810"
  },
  {
    "text": "Hilo and the output of this was I don't know how to greet this name and then I",
    "start": "2111810",
    "end": "2117810"
  },
  {
    "text": "can click here and I see that there was this input and the error was in the",
    "start": "2117810",
    "end": "2123240"
  },
  {
    "text": "output was an error with the error message data wrong name and just to do",
    "start": "2123240",
    "end": "2128520"
  },
  {
    "text": "the final check oops we can do the final execution with no name so I'll pass",
    "start": "2128520",
    "end": "2136410"
  },
  {
    "text": "the JSON object and it already ended and",
    "start": "2136410",
    "end": "2142710"
  },
  {
    "text": "it's please give me a name to greet so and if I click here I can see that the input was the error and the output now",
    "start": "2142710",
    "end": "2149670"
  },
  {
    "text": "there was no name and not the wrong name in the error message so the output was giving a name to grid and again here I",
    "start": "2149670",
    "end": "2156059"
  },
  {
    "text": "have all the details so if I click here I can see all the logs I don't think I was longing too much from those",
    "start": "2156059",
    "end": "2161880"
  },
  {
    "text": "functions so I'm not sure if it makes sense so this is how you can build a state machine and if you want to add an",
    "start": "2161880",
    "end": "2170190"
  },
  {
    "start": "2167000",
    "end": "2357000"
  },
  {
    "text": "activity it's as I said it's a strange concept but just to give you an idea I'm",
    "start": "2170190",
    "end": "2175260"
  },
  {
    "text": "using the CLI here here so let's clear",
    "start": "2175260",
    "end": "2185210"
  },
  {
    "text": "so the WS CLI that runs anywhere because it's written in Python you have a WS",
    "start": "2185210",
    "end": "2191190"
  },
  {
    "text": "then you step functions and then I have activated outer complete so it will",
    "start": "2191190",
    "end": "2196289"
  },
  {
    "text": "automatically show all the possible sub comments and these maps in this case one",
    "start": "2196289",
    "end": "2201390"
  },
  {
    "text": "to one to the API so if you use Python Java whatever language you have the same methods or functions in your language",
    "start": "2201390",
    "end": "2208589"
  },
  {
    "text": "that you can use and here you have create activity and delete activity that can create activity it's just a name",
    "start": "2208589",
    "end": "2215190"
  },
  {
    "text": "because there's no lambda function in this case then you have the gate activity task here the gate activity",
    "start": "2215190",
    "end": "2221819"
  },
  {
    "text": "task means that this is the API that you use to poll so if you want for example",
    "start": "2221819",
    "end": "2228539"
  },
  {
    "text": "to have a human validation or an advanced machine learning validation on the name instead of having a lambda",
    "start": "2228539",
    "end": "2234630"
  },
  {
    "text": "function you can have some code running on it hc2 or on-premise in a container",
    "start": "2234630",
    "end": "2239730"
  },
  {
    "text": "whatever you want that will continuously call this maybe every 30 seconds this",
    "start": "2239730",
    "end": "2245910"
  },
  {
    "text": "api and say hey there is something to do for the activity validate name if there's something to do this API will",
    "start": "2245910",
    "end": "2252839"
  },
  {
    "text": "say yes there's actually this task this must be executed this is the input state so name the Nilo name the or no name",
    "start": "2252839",
    "end": "2260279"
  },
  {
    "text": "provided it will be the state that was in the transition of the state machine and then I can start any complex",
    "start": "2260279",
    "end": "2266940"
  },
  {
    "text": "business process I want that can go for hours days I have here the send task",
    "start": "2266940",
    "end": "2276250"
  },
  {
    "text": "heartbeat that can be used you can configure a heartbeat for example five",
    "start": "2276250",
    "end": "2281830"
  },
  {
    "text": "minutes every hour depends on on how often you want to be sure and this will tell that the activity is running if we",
    "start": "2281830",
    "end": "2288490"
  },
  {
    "text": "don't get the art beat in time then we assume the activity failed and we will schedule this automatically to another",
    "start": "2288490",
    "end": "2294490"
  },
  {
    "text": "polar and then you can call sent ask failure or some tasks success to report",
    "start": "2294490",
    "end": "2300640"
  },
  {
    "text": "the end of the task so okay this is a valid name or no this is a horrible name I will never greet this name because",
    "start": "2300640",
    "end": "2306990"
  },
  {
    "text": "it's something I don't like so in this way you can execute code outside of of",
    "start": "2306990",
    "end": "2315330"
  },
  {
    "text": "of lambda of serverless but it can be used also to easily integrate this with",
    "start": "2315330",
    "end": "2320620"
  },
  {
    "text": "a workflow that you already have so maybe you have a risk evaluation process in finance you just need to pass the",
    "start": "2320620",
    "end": "2328360"
  },
  {
    "text": "input of this comment to the step process eventually ad unhurt bit that can be a parallel process that checks",
    "start": "2328360",
    "end": "2334540"
  },
  {
    "text": "that everything works and then when the process ends you get the output from your current application you REM up it into the syntax the JSON syntax that we",
    "start": "2334540",
    "end": "2341590"
  },
  {
    "text": "expect and then you draw the failure of success so it's very easy to integrate application that you already have as an",
    "start": "2341590",
    "end": "2348400"
  },
  {
    "text": "activity task for a state machine any question here see that we're getting a",
    "start": "2348400",
    "end": "2356250"
  },
  {
    "text": "little bit tired so we saw how it works live with a very basic example how you",
    "start": "2356250",
    "end": "2363280"
  },
  {
    "start": "2357000",
    "end": "2612000"
  },
  {
    "text": "can extend it let's see a few use cases that maybe makes this a little bit more",
    "start": "2363280",
    "end": "2368460"
  },
  {
    "text": "understandable so the first one is coca-cola this all these case studies",
    "start": "2368460",
    "end": "2374950"
  },
  {
    "text": "have taken from our rain event in Vegas so they are from the beginning of December so they have this application I",
    "start": "2374950",
    "end": "2382150"
  },
  {
    "text": "think this is us only because bottom I never saw it in Europe where you can pay",
    "start": "2382150",
    "end": "2387700"
  },
  {
    "text": "at a vending machine at a coca-cola vending machine with an application and",
    "start": "2387700",
    "end": "2392770"
  },
  {
    "text": "basically if you buy coca-cola you get you get some tokens that then you can",
    "start": "2392770",
    "end": "2398530"
  },
  {
    "text": "spend for having free drinks and they were having this problem that some",
    "start": "2398530",
    "end": "2404349"
  },
  {
    "text": "even if the customer was maybe buying like three drinks and he was paying cash then every three drinks you should get a",
    "start": "2404349",
    "end": "2411099"
  },
  {
    "text": "free drink he was trying to get the free drink and it was giving an error not it was no credit so there was a problem",
    "start": "2411099",
    "end": "2417579"
  },
  {
    "text": "with the the credit being out of sync and this was of course giving a better better user experience because you",
    "start": "2417579",
    "end": "2425049"
  },
  {
    "text": "expected to be able to do that they did some analytics and then they realize that the old architecture was updating",
    "start": "2425049",
    "end": "2431980"
  },
  {
    "text": "the consumer database but the consumer database there is a legacy application that they have on-premise was simply",
    "start": "2431980",
    "end": "2437529"
  },
  {
    "text": "slower not fast enough to catch up with the speed of something running several s in the cloud so now what they do is that",
    "start": "2437529",
    "end": "2445059"
  },
  {
    "text": "when there is an a play so basically what's happening is that they were triggering a several a station saying",
    "start": "2445059",
    "end": "2450789"
  },
  {
    "text": "okay the consumer database has been updated but then this new value was taken and reported immediately but it",
    "start": "2450789",
    "end": "2457059"
  },
  {
    "text": "was still sometimes the old value because it was too fast so now they start using SNS a step function that",
    "start": "2457059",
    "end": "2463390"
  },
  {
    "text": "will wait for 90 seconds so and then after 90 seconds we read the state and",
    "start": "2463390",
    "end": "2468460"
  },
  {
    "text": "write the state in the in the in in a new modern fast application that is used",
    "start": "2468460",
    "end": "2473980"
  },
  {
    "text": "by the backend of the mobile app so it's just a simple trick but you can imagine that solving this normally is now would",
    "start": "2473980",
    "end": "2481329"
  },
  {
    "text": "have been quite complex but in this way it was very quick for them to fix and now they are looking at maybe better",
    "start": "2481329",
    "end": "2487299"
  },
  {
    "text": "solution for long-term this is Thomson Reuters and Thomson Reuters",
    "start": "2487299",
    "end": "2493299"
  },
  {
    "text": "they sell basically content and information to their customers at least most of of it because Thomson rather is",
    "start": "2493299",
    "end": "2500650"
  },
  {
    "text": "quite a diversified company and one part of their company they're selling videos",
    "start": "2500650",
    "end": "2505779"
  },
  {
    "text": "and the value of the information they provide is in the speed at which they can give the video to the customer",
    "start": "2505779",
    "end": "2511809"
  },
  {
    "text": "problem is that they need to dress code 350 clips per day in 14 different",
    "start": "2511809",
    "end": "2517420"
  },
  {
    "text": "formats because anybody can use a different device they use ffmpeg so we",
    "start": "2517420",
    "end": "2522579"
  },
  {
    "text": "have our own managed transcoding service but they use ffmpeg okay and normally",
    "start": "2522579",
    "end": "2528130"
  },
  {
    "text": "with ffmpeg that transcoding time is the same as the length of the video so that",
    "start": "2528130",
    "end": "2533680"
  },
  {
    "text": "means that if you have 30 minutes video it takes thirty minutes even if you run all the",
    "start": "2533680",
    "end": "2539160"
  },
  {
    "text": "transcoding imperil before you can give the video to the customer and if this is financial information it's probably not",
    "start": "2539160",
    "end": "2545790"
  },
  {
    "text": "what you want to do so they by themselves they created this solution so",
    "start": "2545790",
    "end": "2552390"
  },
  {
    "text": "they use a fan pack to look for all the keyframes in the video the keyframes are",
    "start": "2552390",
    "end": "2557550"
  },
  {
    "text": "the frames that in the video encoding are provided complete with complete resolution normally most video encoding",
    "start": "2557550",
    "end": "2562770"
  },
  {
    "text": "they have keyframes and then they have the Delta from the keyframes for like",
    "start": "2562770",
    "end": "2567840"
  },
  {
    "text": "half a second one second and then they have another keyframes so they look for all the keyframes and this is a very",
    "start": "2567840",
    "end": "2572850"
  },
  {
    "text": "fast operation with ffmpeg because there's very little i/o then they split the source video at all the keyframes so",
    "start": "2572850",
    "end": "2579330"
  },
  {
    "text": "that they have very small segments like alpha second an average and then they process all those small segments in",
    "start": "2579330",
    "end": "2586140"
  },
  {
    "text": "parallel with lambda functions so they prepare the splits then they perform the split and then",
    "start": "2586140",
    "end": "2594180"
  },
  {
    "text": "they prepare the the the rendering of all these small parts and from 20",
    "start": "2594180",
    "end": "2600030"
  },
  {
    "text": "minutes they go to roughly two minutes and mostly it's the time of looking for",
    "start": "2600030",
    "end": "2606390"
  },
  {
    "text": "the key frames and then assembling everything back again so if we look a little bit better so they have they",
    "start": "2606390",
    "end": "2613650"
  },
  {
    "start": "2612000",
    "end": "2947000"
  },
  {
    "text": "prepare this lip split and then when the split is completed they go to the split prepared state then they perform the",
    "start": "2613650",
    "end": "2620820"
  },
  {
    "text": "splitter and then they endure to split / format and then they decided to not",
    "start": "2620820",
    "end": "2626160"
  },
  {
    "text": "manage all the lambdas execution inside the activity here but they'd since the",
    "start": "2626160",
    "end": "2631980"
  },
  {
    "text": "split perform at will right roughly thousands or to thousands or thousands of small files on s3 each of this small",
    "start": "2631980",
    "end": "2639510"
  },
  {
    "text": "file will trigger a lambda function that will process this file so they don't need to coordinate this here and then",
    "start": "2639510",
    "end": "2646650"
  },
  {
    "text": "they just wait for the results to finish all those thousands of lambda function running in parallel will write their",
    "start": "2646650",
    "end": "2654090"
  },
  {
    "text": "output and they have a loop where they wait for all the results when they count that they gone to the results if all the",
    "start": "2654090",
    "end": "2660450"
  },
  {
    "text": "lambda function terminated and they have an exact number of output segments as they expect then they go to the segments",
    "start": "2660450",
    "end": "2668040"
  },
  {
    "text": "complete state and then they merge everything finish and then they have the video in",
    "start": "2668040",
    "end": "2673050"
  },
  {
    "text": "parallel so it's quite a strange setup by the way inside lambda if you remember",
    "start": "2673050",
    "end": "2679650"
  },
  {
    "text": "you only have memory and a relatively small /tmp it's 512 megabytes and the",
    "start": "2679650",
    "end": "2687000"
  },
  {
    "text": "spice of the /tmp doesn't change so they use some advanced features of our CLI",
    "start": "2687000",
    "end": "2693870"
  },
  {
    "text": "that are very handy with lambda so basically you can stream the output of ffmpeg straight to s3 without storing",
    "start": "2693870",
    "end": "2702000"
  },
  {
    "text": "the intermediate file inside the lambda function and basically the copy",
    "start": "2702000",
    "end": "2707130"
  },
  {
    "text": "operation so AWS s3 copy as the input and the output and both the input and",
    "start": "2707130",
    "end": "2712500"
  },
  {
    "text": "the output can be replaced by - that in UNIX means this is standard input or standard output so this means do the",
    "start": "2712500",
    "end": "2720090"
  },
  {
    "text": "encoding of the small segment send the output to the SS CLI that will take this",
    "start": "2720090",
    "end": "2725550"
  },
  {
    "text": "output and write the output into this object on s3 and there's no writing on",
    "start": "2725550",
    "end": "2731790"
  },
  {
    "text": "disk in the middle and you can use also the same to give the input so you can use the same syntax so you put the -",
    "start": "2731790",
    "end": "2738000"
  },
  {
    "text": "afterwards and you can have the input bucket and you can have everything happening in memory so no storing of the",
    "start": "2738000",
    "end": "2743640"
  },
  {
    "text": "data so that's why the three gigabytes are important because the three gigabyte",
    "start": "2743640",
    "end": "2748920"
  },
  {
    "text": "of memory for lambda function enable activities like this that don't need disk but are memory intensive and so as",
    "start": "2748920",
    "end": "2759660"
  },
  {
    "text": "I said when the wait for results will just wait for the s3 trigger a trigger in thousands of functions and then they",
    "start": "2759660",
    "end": "2765690"
  },
  {
    "text": "have created a loop and the loop is so let's see the state machine now it works",
    "start": "2765690",
    "end": "2770940"
  },
  {
    "text": "so they have an init operation they prepare the split and then they do all",
    "start": "2770940",
    "end": "2778860"
  },
  {
    "text": "the steps that we saw together and if we start if we have a look we can notice that it's always the same lambda",
    "start": "2778860",
    "end": "2785460"
  },
  {
    "text": "function and this is quite strange because you do completely different things but you always have the same",
    "start": "2785460",
    "end": "2790800"
  },
  {
    "text": "lambda functions so this is an architectural choice but basically if you look here there is this result",
    "start": "2790800",
    "end": "2796620"
  },
  {
    "text": "result path and result and this is a way to modify the state that is passed from",
    "start": "2796620",
    "end": "2802980"
  },
  {
    "text": "one state to the next state basically here they're saying take the the input object and add an an operation",
    "start": "2802980",
    "end": "2812460"
  },
  {
    "text": "property that contains proper split so the operation is prepare split so this lambda function will look in the event",
    "start": "2812460",
    "end": "2818820"
  },
  {
    "text": "for an operation and depending on the operation will execute different part of its codebase so do the proper split will",
    "start": "2818820",
    "end": "2825960"
  },
  {
    "text": "prepare the split operation is perform split and then you have the execution of",
    "start": "2825960",
    "end": "2831330"
  },
  {
    "text": "the same lambda function the lambda function in the event will find operation perform split and it will do",
    "start": "2831330",
    "end": "2836760"
  },
  {
    "text": "the split that's why we have this prepare split and split prepared and then you have performed sleep and sleep",
    "start": "2836760",
    "end": "2843840"
  },
  {
    "text": "perform at because one step is creating the the input object with the current",
    "start": "2843840",
    "end": "2849450"
  },
  {
    "text": "operation and the next one is executing the code on lambda and this goes on and",
    "start": "2849450",
    "end": "2855740"
  },
  {
    "text": "then they wait for for for the final",
    "start": "2855740",
    "end": "2861960"
  },
  {
    "text": "weight is using the same function again but if we see basically you go to the",
    "start": "2861960",
    "end": "2868620"
  },
  {
    "text": "weight result and then to the weight result if we go back here to the wait",
    "start": "2868620",
    "end": "2874500"
  },
  {
    "text": "for result you go with polar status submitted so you will go here wait for",
    "start": "2874500",
    "end": "2881460"
  },
  {
    "text": "result Pole status submitted next state loop weight using seconds loop wait",
    "start": "2881460",
    "end": "2887730"
  },
  {
    "text": "using seconds I wait three seconds and then I run the lambda function to count",
    "start": "2887730",
    "end": "2893090"
  },
  {
    "text": "the number of objects then then I go",
    "start": "2893090",
    "end": "2901920"
  },
  {
    "text": "back to wait for results and with the reason we look if the pole status is complete progressing or progressing",
    "start": "2901920",
    "end": "2908640"
  },
  {
    "text": "submitted with never probe is progressing and then you go there wait three second check again and then you go",
    "start": "2908640",
    "end": "2914880"
  },
  {
    "text": "here and it's progressing when this function will report the state complete you go to the segment complete state",
    "start": "2914880",
    "end": "2921890"
  },
  {
    "text": "where I say operation to comb cut and then lambda function will be executed",
    "start": "2921890",
    "end": "2926940"
  },
  {
    "text": "with operation Concord and will be terminating in in this state there are other information we don't see but like",
    "start": "2926940",
    "end": "2934140"
  },
  {
    "text": "the number of segments and information to process so this is quite a strange that to me but it's very robust and helps",
    "start": "2934140",
    "end": "2941670"
  },
  {
    "text": "them do all those transcoding a speed and this is I think the final example",
    "start": "2941670",
    "end": "2950190"
  },
  {
    "text": "that I want to talk about its frame that I are still in the video in the video",
    "start": "2950190",
    "end": "2955290"
  },
  {
    "text": "area so they do video review and collaboration and when they do the transcoding they sometimes think is",
    "start": "2955290",
    "end": "2962220"
  },
  {
    "text": "better to use lambda to do the transcoding especially if the file is smaller but if the file is big they just",
    "start": "2962220",
    "end": "2968369"
  },
  {
    "text": "use CCS our elastic container service so they run a container that does don't",
    "start": "2968369",
    "end": "2973619"
  },
  {
    "text": "have doesn't have the five minutes timeout so they were doing this with lots of complex code and then then",
    "start": "2973619",
    "end": "2980280"
  },
  {
    "text": "design a state machine do you have an encoder decider that will decide depending on the class statistics of the",
    "start": "2980280",
    "end": "2986550"
  },
  {
    "text": "file if they want to run on SES or on lambda if they run on lambda then they can either terminate correctly or fail",
    "start": "2986550",
    "end": "2993300"
  },
  {
    "text": "if they run on the Oni CS they wait a few seconds see if the task is being",
    "start": "2993300",
    "end": "2999690"
  },
  {
    "text": "executed that completed otherwise they can they have a couple of loops here I",
    "start": "2999690",
    "end": "3005359"
  },
  {
    "text": "will enter into that and then when the task completes they have a success or a failure and they of course they can",
    "start": "3005359",
    "end": "3012590"
  },
  {
    "text": "reuse all the code here this is independent from the fact they using lambda or ACS so if we look at the code",
    "start": "3012590",
    "end": "3022010"
  },
  {
    "text": "we see that the decider is looking at some information that is provided when you start the the machine that is there",
    "start": "3022010",
    "end": "3028369"
  },
  {
    "text": "set asides and they are set the duration in milliseconds so if it's less than two gigabyte in less than ten the ten",
    "start": "3028369",
    "end": "3037430"
  },
  {
    "text": "seconds then we go to run the lambda encoder otherwise we go to run ECS encoder and",
    "start": "3037430",
    "end": "3048400"
  },
  {
    "text": "we also realized that sometimes the faster we use default as keyword here is not very readable maybe we should have",
    "start": "3048400",
    "end": "3055010"
  },
  {
    "text": "called it else so this was something maybe we can create an alias and then",
    "start": "3055010",
    "end": "3060940"
  },
  {
    "text": "when the ECS encoder has a retry here",
    "start": "3060940",
    "end": "3066080"
  },
  {
    "text": "and we notice that they were trying every five seconds for an hour there are",
    "start": "3066080",
    "end": "3071600"
  },
  {
    "text": "700 20 attempts every five seconds and with at first we didn't understand why they",
    "start": "3071600",
    "end": "3076849"
  },
  {
    "text": "were doing this with ECS but the reason they told us is that they have a cluster that is in auto scaling and sometimes",
    "start": "3076849",
    "end": "3083060"
  },
  {
    "text": "they fill up all the resources so the container scheduler can find any instance that has the resources to run",
    "start": "3083060",
    "end": "3088460"
  },
  {
    "text": "the container but they are scaling in a few minutes normally it's going up and down and will grow so they added this",
    "start": "3088460",
    "end": "3095840"
  },
  {
    "text": "and then they basically if there is no rest there is no resource in cluster they will just loop here until the",
    "start": "3095840",
    "end": "3102920"
  },
  {
    "text": "cluster will Auto scale and usually takes like five ten minutes but they",
    "start": "3102920",
    "end": "3108680"
  },
  {
    "text": "added one hour just to be sure and and this is a way to retry until the auto",
    "start": "3108680",
    "end": "3114140"
  },
  {
    "text": "scaling cluster of the containers services is growing if you were at the",
    "start": "3114140",
    "end": "3120410"
  },
  {
    "text": "fare gate presentation today so we talked about forget is a new container scheduler that we launched well you",
    "start": "3120410",
    "end": "3125750"
  },
  {
    "text": "don't need to manage the cluster this will not happen because we that case we manage the classroom and you always get",
    "start": "3125750",
    "end": "3131240"
  },
  {
    "text": "the resources for containers and then when you finish this there is located the normal termination and this here is",
    "start": "3131240",
    "end": "3142480"
  },
  {
    "text": "that at the end they fire cloud watch events to notify if everything works or",
    "start": "3142480",
    "end": "3148130"
  },
  {
    "text": "not so that they can fire order logic or the state machine with these events so",
    "start": "3148130",
    "end": "3154730"
  },
  {
    "start": "3154000",
    "end": "3243000"
  },
  {
    "text": "these were a few examples not probably the most advanced use cases but I think very easy examples where you can very",
    "start": "3154730",
    "end": "3161000"
  },
  {
    "text": "easily connect to and here we have a few getting started guides with the example",
    "start": "3161000",
    "end": "3166880"
  },
  {
    "text": "of the image recognition and the snapshots and others that are going to be added and if you like something of",
    "start": "3166880",
    "end": "3174050"
  },
  {
    "text": "these step functions if you are planning to use them please share on on Twitter with this hashtag step functions is",
    "start": "3174050",
    "end": "3181040"
  },
  {
    "text": "something that the product team is really interested to and it's a good way we're monitoring the use cases in one of",
    "start": "3181040",
    "end": "3188990"
  },
  {
    "text": "the presentation we did our event we said that this is one of the those horizontal technologies that you create",
    "start": "3188990",
    "end": "3194810"
  },
  {
    "text": "you give to customers and then they do the completely opposite of what you were expecting when you design it like the",
    "start": "3194810",
    "end": "3200660"
  },
  {
    "text": "else the fault word that is used differently so we're looking forward to get feedback and see",
    "start": "3200660",
    "end": "3206270"
  },
  {
    "text": "what can be done with this platform thank you",
    "start": "3206270",
    "end": "3211930"
  },
  {
    "text": "of course I'm happy to take a few questions otherwise since it's quite",
    "start": "3216580",
    "end": "3224060"
  },
  {
    "text": "late again you know how to contact me and I hope you enjoyed the day it was",
    "start": "3224060",
    "end": "3229760"
  },
  {
    "text": "quite a dense day I think but it's this is part of the fieldwork you have to",
    "start": "3229760",
    "end": "3235460"
  },
  {
    "text": "provide if you prefer different approach we really try to put everything you wanted could be of interest for you here",
    "start": "3235460",
    "end": "3242150"
  },
  {
    "text": "in this event thank you",
    "start": "3242150",
    "end": "3245140"
  }
]