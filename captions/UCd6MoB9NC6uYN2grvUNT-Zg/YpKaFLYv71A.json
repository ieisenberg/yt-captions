[
  {
    "text": "but good morning my name is Arun Gupta I'm one of the principal open source technologies at Amazon today I'm very",
    "start": "860",
    "end": "8820"
  },
  {
    "text": "excited to have Sam talk about micro services on AWS Sam is definitely one of",
    "start": "8820",
    "end": "15809"
  },
  {
    "text": "the subject-matter experts on this topic and he brings that unique perspective from the community side of it on what",
    "start": "15809",
    "end": "23039"
  },
  {
    "text": "micro services are what are the different AWS offerings on it and how can you build your micro services Sam is",
    "start": "23039",
    "end": "29400"
  },
  {
    "text": "gonna be running most of the show today but towards the end of the talk now we will have a Q&A between him and I and",
    "start": "29400",
    "end": "34860"
  },
  {
    "text": "hopefully that'll be a lot of fun and interactive discussion all right Sam taken away thanks mate",
    "start": "34860",
    "end": "40379"
  },
  {
    "text": "okay so I'm going to keep my volume light if for any reason at any stage you can't hear me just wave your hands and",
    "start": "40379",
    "end": "47850"
  },
  {
    "text": "just hope it's not a point where I'm pausing because then that's going to get really confusing but thank you so much for coming along hey it's my first time",
    "start": "47850",
    "end": "54329"
  },
  {
    "text": "in Vegas I say that it's not entirely truthful I used to live up in San",
    "start": "54329",
    "end": "59460"
  },
  {
    "text": "Francisco I drove through Vegas very fast a couple of times we never stopped mostly because it's like it's like where",
    "start": "59460",
    "end": "67439"
  },
  {
    "text": "you're gonna stop on the strip it's so we just drove through so I have been through my first time in Vegas it is",
    "start": "67439",
    "end": "72540"
  },
  {
    "text": "insane I'll leave it at that I hope you're enjoying the event so far I am here to talk to you today about micro",
    "start": "72540",
    "end": "79049"
  },
  {
    "text": "services and about I'm going to talk very briefly about what they are and then I'm going to try and sort of talk",
    "start": "79049",
    "end": "84630"
  },
  {
    "text": "about the ethos behind both micro services and the whole AWS experience",
    "start": "84630",
    "end": "90540"
  },
  {
    "text": "really and show how these two things work really well together and then I'm going to take you through a few options about how you might deploy a micro",
    "start": "90540",
    "end": "97290"
  },
  {
    "text": "service solution on AWS and try and give you some sorts of my sense of of where I would be looking and investing and we'll",
    "start": "97290",
    "end": "103829"
  },
  {
    "text": "even talk about server lists because we have to talk about service even though this is technically the containers track",
    "start": "103829",
    "end": "110549"
  },
  {
    "text": "but we should push on I wrote a book about micro services a couple of years ago I'm in the process of working on a",
    "start": "110549",
    "end": "116880"
  },
  {
    "text": "second edition if you've read the book that's great the second edition won't be out for a while so you still go read it",
    "start": "116880",
    "end": "122040"
  },
  {
    "text": "I've also been lucky enough to be working with Amazon Web Services for",
    "start": "122040",
    "end": "128099"
  },
  {
    "text": "quite a long time sort of by accident I ended up helping create the first ever public",
    "start": "128099",
    "end": "133440"
  },
  {
    "text": "for AWS back in 2009 it was purely a being in the right place at the right",
    "start": "133440",
    "end": "139320"
  },
  {
    "text": "time so these two things have been a big part of my sort of or more always the last decade of my career and it's been",
    "start": "139320",
    "end": "146160"
  },
  {
    "text": "interesting in his talk trying to really bring these two strands together and see how they they lap up I also now also",
    "start": "146160",
    "end": "152130"
  },
  {
    "text": "work my own company doing consulting and training and all those sorts of things it's sort of named after myself because",
    "start": "152130",
    "end": "158340"
  },
  {
    "text": "I'm a narcissist but we are here to talk about micro services so I should do a",
    "start": "158340",
    "end": "164550"
  },
  {
    "text": "very very quick explanation as to what micro services are just at least from my",
    "start": "164550",
    "end": "169560"
  },
  {
    "text": "definition because there are different definitions out there this is what a micro service architecture looks like a quite simple one I draw them as hexagons",
    "start": "169560",
    "end": "177240"
  },
  {
    "text": "because if you spend all of your time looking at architecture diagrams rectangles get really boring and this is",
    "start": "177240",
    "end": "184650"
  },
  {
    "text": "a nicer shape all right we got names you know invoicing shipping customer service there is this idea that we use business",
    "start": "184650",
    "end": "191520"
  },
  {
    "text": "domains for how we find that the boundaries for our services I'm not going to why you can read the book more",
    "start": "191520",
    "end": "197940"
  },
  {
    "text": "talk to me afters about that maybe not the most important thing for today but there's a definition this is what I talk",
    "start": "197940",
    "end": "204030"
  },
  {
    "text": "about micro service being it's an independently deployable services that work together modeled around a business",
    "start": "204030",
    "end": "210360"
  },
  {
    "text": "domain we're going to focus a lot on this idea of independent deployability because it's a key thing that drives on",
    "start": "210360",
    "end": "216510"
  },
  {
    "text": "a lot of what we we see and perceive as the benefits of a micro service",
    "start": "216510",
    "end": "221610"
  },
  {
    "text": "architecture we do of course have to address the fact that micro services continue to ride high in the Gartner",
    "start": "221610",
    "end": "228930"
  },
  {
    "text": "hype cycle here they are right at the top which i think means good I haven't",
    "start": "228930",
    "end": "234480"
  },
  {
    "text": "yet worked out how that directly translates into money in my bank account but we're working on that one at the moment they also always find it quite",
    "start": "234480",
    "end": "241320"
  },
  {
    "text": "interesting we're up there there's micro services all the way up there and we see down in the trough of disillusionment we",
    "start": "241320",
    "end": "248010"
  },
  {
    "text": "see service-oriented architecture which I always find to be quite funny because micro services are just a type of",
    "start": "248010",
    "end": "254400"
  },
  {
    "text": "service-oriented architecture so in many ways this is more about this is the Gartner hype cycle this is more the",
    "start": "254400",
    "end": "259530"
  },
  {
    "text": "Gartner marketing term hype cycle because really micro services are just an opinionated form of service-oriented",
    "start": "259530",
    "end": "266490"
  },
  {
    "text": "architecture it sort of interesting to know way way back in the day both Google and Netflix",
    "start": "266490",
    "end": "271500"
  },
  {
    "text": "would talk about their architecture as being service-oriented architecture Asian Cockcroft if now is of course",
    "start": "271500",
    "end": "278430"
  },
  {
    "text": "working at AWS but here was the cloud architect at Netflix he referred to their architecture as being fine grained",
    "start": "278430",
    "end": "285770"
  },
  {
    "text": "service-oriented architecture now we sort of just use micro services as the term for that so don't worry too much",
    "start": "285770",
    "end": "292860"
  },
  {
    "text": "about those definitions but if people say the SOA and micro services are different things they're just wrong and",
    "start": "292860",
    "end": "298530"
  },
  {
    "text": "that's okay he's getting to buy my book called like five copies of my book that really really helped me out Christmas won't somebody please think of the",
    "start": "298530",
    "end": "305789"
  },
  {
    "text": "children so back on this so independently deployable services that work together modeled around a business",
    "start": "305789",
    "end": "312509"
  },
  {
    "text": "domain that's a definition I use and this is the thing I want to focus on for today and actually is the most important",
    "start": "312509",
    "end": "318000"
  },
  {
    "text": "characteristic of micro services and in fact the thing I think you need to optimize for when building these",
    "start": "318000",
    "end": "323370"
  },
  {
    "text": "architectures independent employability you should be able to make a change to a",
    "start": "323370",
    "end": "328530"
  },
  {
    "text": "service and deploy that service with a new change into production without",
    "start": "328530",
    "end": "333719"
  },
  {
    "text": "having to redeploy or change anything else this means letting go of the idea of lockstep releases this is all about",
    "start": "333719",
    "end": "341419"
  },
  {
    "text": "independent autonomy and independent replace ability of components and this",
    "start": "341419",
    "end": "347039"
  },
  {
    "text": "may be in one way is how micro services are different to de ditional SRA architectures in as much as this is very",
    "start": "347039",
    "end": "353909"
  },
  {
    "text": "much what we're trying to focus on this what very opinionated about this ability",
    "start": "353909",
    "end": "359190"
  },
  {
    "text": "to make change to services and deploy them independent of other changes as what's give them their power autonomy is",
    "start": "359190",
    "end": "367680"
  },
  {
    "text": "the word we keep coming back to it in a different sphere gets talked about a lot in the context of micro services",
    "start": "367680",
    "end": "373460"
  },
  {
    "text": "autonomy is all about reducing coordination and allowing people to work",
    "start": "373460",
    "end": "379169"
  },
  {
    "text": "autonomously from others reducing coordination allowing them to go quickly so we can ship software more quickly so",
    "start": "379169",
    "end": "385889"
  },
  {
    "text": "I'm gonna ask you how many people in this room here how many people here ship to production maybe you once a month or more okay so",
    "start": "385889",
    "end": "394250"
  },
  {
    "text": "probably about I'd say about 20% of the room are still pretty good right after that same question five years ago",
    "start": "394250",
    "end": "400350"
  },
  {
    "text": "got one or two people and ten years ago people will be shouting it's not possible what are you talking about are",
    "start": "400350",
    "end": "405510"
  },
  {
    "text": "you crazy we exist in a world now where we expect to be able to ship software to our customers more quickly because that's",
    "start": "405510",
    "end": "412230"
  },
  {
    "text": "what they expect it's what we expect to the software and and to achieve that a lot of it is about improving the",
    "start": "412230",
    "end": "417480"
  },
  {
    "text": "autonomy of our teams when we think about a team right you've got a few people in that team we have to communicate with each other we have to",
    "start": "417480",
    "end": "424020"
  },
  {
    "text": "coordinate to be on the same page about three people you can kind of mathematically think of it okay we've got three communication pathways of how",
    "start": "424020",
    "end": "430770"
  },
  {
    "text": "we go chat to each other okay that's not too bad we can stay on the same page and be aligned we had a fourth person only",
    "start": "430770",
    "end": "436860"
  },
  {
    "text": "one more person okay well now we've got like six communication pathways between those individuals we had another another",
    "start": "436860",
    "end": "443490"
  },
  {
    "text": "person okay now we've got like ten communication pathways I'm gonna get the masts wrong I stopped at this number of",
    "start": "443490",
    "end": "448650"
  },
  {
    "text": "people because the transitions get really complicated but we all know intrinsically that as we add more and",
    "start": "448650",
    "end": "454140"
  },
  {
    "text": "more people to the same problem as we add more and more people into a team coordinating communicating becomes",
    "start": "454140",
    "end": "460950"
  },
  {
    "text": "more of a challenge getting you know avoiding técnicos toes becomes more and more difficult if anyone here was trying",
    "start": "460950",
    "end": "468450"
  },
  {
    "text": "to have two hundred people all working on the same code base you will know it's not a fun experience and in the northern",
    "start": "468450",
    "end": "473460"
  },
  {
    "text": "amount of your time goes into efforts to avoid people getting in each other's ways I'm not the only person to spotted",
    "start": "473460",
    "end": "481680"
  },
  {
    "text": "this problem somebody a few years ago said no communication is terrible this was Jeff Bezos",
    "start": "481680",
    "end": "487140"
  },
  {
    "text": "a few years ago when some managers were talking about how they could improve communication between teams it's no no",
    "start": "487140",
    "end": "492750"
  },
  {
    "text": "no we want to eliminate or not eliminate but reduce communication what was actually referring to is the fact that",
    "start": "492750",
    "end": "498810"
  },
  {
    "text": "when you have to communicate and coordinate with other people that slows you down we've got to schedule a meeting",
    "start": "498810",
    "end": "504750"
  },
  {
    "text": "to have a chat to come up with an agreement now there are areas where you need to do that but we were trying to do",
    "start": "504750",
    "end": "510090"
  },
  {
    "text": "is limit how many of those places you do it in now when you've got 200 people 400 people a thousand people all trying to",
    "start": "510090",
    "end": "517830"
  },
  {
    "text": "coordinate around the same thing you have lots of points of coordination and those slowed you down and so this is",
    "start": "517830",
    "end": "525360"
  },
  {
    "text": "really why Amazon early on started looking at a model of having smaller autonomous teams the idea being that a",
    "start": "525360",
    "end": "532680"
  },
  {
    "text": "team working on a problem would just have fine-grained communication within that team but much more coarse-grained",
    "start": "532680",
    "end": "539220"
  },
  {
    "text": "coordination with other teams it's about finding that sweet spot of a small team that could work really closely together",
    "start": "539220",
    "end": "545200"
  },
  {
    "text": "and can afford to have that fine-grained communication without requiring loads and those a coordination so some of you",
    "start": "545200",
    "end": "553270"
  },
  {
    "text": "may have heard of Steve Iggy he moved to from Amazon to Google and he wrote what",
    "start": "553270",
    "end": "558700"
  },
  {
    "text": "became known as his infamous platform's rant at Google has now become public and what he was doing in this in this memo",
    "start": "558700",
    "end": "565240"
  },
  {
    "text": "was trying to articulate what it was the Amazon did that Google wasn't doing at the time in terms of how they thought",
    "start": "565240",
    "end": "571090"
  },
  {
    "text": "about server design trying to distill down how Amazon was thinking about creating software and he",
    "start": "571090",
    "end": "577630"
  },
  {
    "text": "was so pulling out the sort of the mantras that were being used at that time in terms of how Amazon software",
    "start": "577630",
    "end": "582700"
  },
  {
    "text": "should be built and evolved and saying things like this you know all teams will henceforth expose their data and",
    "start": "582700",
    "end": "588430"
  },
  {
    "text": "functionality through service interfaces so talking about the idea that services should communicate through service",
    "start": "588430",
    "end": "593860"
  },
  {
    "text": "interfaces which makes sense otherwise are not services you would argue and teams must communicate with each other",
    "start": "593860",
    "end": "599890"
  },
  {
    "text": "through these interfaces so sort of now talking about the human aspects not just the software aspects not just how's my",
    "start": "599890",
    "end": "606130"
  },
  {
    "text": "software talk to your software but how does my team talk to your team it's actually aligning the communication",
    "start": "606130",
    "end": "612400"
  },
  {
    "text": "pathways of your organization along your architectural pathways this is Conway's law so we think about a",
    "start": "612400",
    "end": "620500"
  },
  {
    "text": "team working on a problem a team that could probably co-located or can afford lots of tight fine-grained communication",
    "start": "620500",
    "end": "627220"
  },
  {
    "text": "they're working within that service boundary the communication they have with other teams is along those",
    "start": "627220",
    "end": "632950"
  },
  {
    "text": "boundaries with those other teams this is you know around API you know your your message formats this is your",
    "start": "632950",
    "end": "639100"
  },
  {
    "text": "coordination points this is coarse grained communication and coordination around the same API points and this",
    "start": "639100",
    "end": "646030"
  },
  {
    "text": "becomes really a really powerful idea of bringing these two things together and Steve Iggy was reflecting on the fact that this was one of the techniques that",
    "start": "646030",
    "end": "652390"
  },
  {
    "text": "Amazon were was of using to allow these sort of two Pizza autonomous teams to go",
    "start": "652390",
    "end": "657760"
  },
  {
    "text": "fast but still coordinate with other people without having all the downsides of being a large organization you start",
    "start": "657760",
    "end": "665650"
  },
  {
    "text": "getting little soft things and actually prop up in the Amazon AWS stack that help achieve this sort of autonomy and",
    "start": "665650",
    "end": "672250"
  },
  {
    "text": "it starts to me way back with accounts this was one of the things I remember back in 2009 we were hammering home for",
    "start": "672250",
    "end": "678550"
  },
  {
    "text": "people use different accounts it's not just a security point of view not just from a tracking point of view but it's",
    "start": "678550",
    "end": "683920"
  },
  {
    "text": "from an autonomy point of view you know that unit of control that you're given there's a building block of autonomy",
    "start": "683920",
    "end": "689140"
  },
  {
    "text": "that's right there in the AWS product stack here's another quote from the his",
    "start": "689140",
    "end": "695380"
  },
  {
    "text": "rant there will be no form of inter process communication allowed no direct",
    "start": "695380",
    "end": "701290"
  },
  {
    "text": "linking no direct reads or another of another team's data store some people's",
    "start": "701290",
    "end": "706750"
  },
  {
    "text": "ears prick up at this point no shared memory model no back doors whatsoever the only communication allowed is via",
    "start": "706750",
    "end": "713830"
  },
  {
    "text": "service interface calls over network service interfaces now practically in",
    "start": "713830",
    "end": "719320"
  },
  {
    "text": "terms of how we interpret that what that means is something like this I've got my service my service is storing some",
    "start": "719320",
    "end": "725110"
  },
  {
    "text": "information in the database and if somebody wants information that I have they should come and talk to me YC is an",
    "start": "725110",
    "end": "732400"
  },
  {
    "text": "outside party but obviously what we do a lot of the time as I think it's over and over again it's probably the single most",
    "start": "732400",
    "end": "738040"
  },
  {
    "text": "common service integration Pat and I see is the other service just reaches",
    "start": "738040",
    "end": "743620"
  },
  {
    "text": "straight into your database and grabs what it needs right this is going against what Steve was talking about",
    "start": "743620",
    "end": "748690"
  },
  {
    "text": "this is bypassing these well defined service boundaries and this is problematic on two levels firstly it's",
    "start": "748690",
    "end": "755410"
  },
  {
    "text": "like if you have a well-defined service interface which represents how you communicate with somebody else that",
    "start": "755410",
    "end": "761080"
  },
  {
    "text": "service interface also becomes the point of coordination between you and the other team it's actually quite well",
    "start": "761080",
    "end": "767680"
  },
  {
    "text": "defined and well well observed if you allow other parties to sort of just reaching around and go through your back",
    "start": "767680",
    "end": "774640"
  },
  {
    "text": "door it's like you've got a nice front door it's got like a security intercom system and you greet people in and you",
    "start": "774640",
    "end": "780130"
  },
  {
    "text": "offer them iced tea and then you find in someone's broken in your back gate and they're rummaging around in your Gardens",
    "start": "780130",
    "end": "785530"
  },
  {
    "text": "and they're knocking over the gnome all right it gets problematic right so you start bypassing those service interfaces",
    "start": "785530",
    "end": "792070"
  },
  {
    "text": "and the communication and coordination becomes much more problematic it's also because databases are actually quite",
    "start": "792070",
    "end": "797170"
  },
  {
    "text": "annoying to try and make consistent between releases so you know based on what Steve was",
    "start": "797170",
    "end": "802520"
  },
  {
    "text": "telling us and this is one of the big mantras in my book it's always coming back to this ideas if you want data or information you go and after service the",
    "start": "802520",
    "end": "809750"
  },
  {
    "text": "service then decides how it extracts that see your data storage as internal implementation detail not an external",
    "start": "809750",
    "end": "817250"
  },
  {
    "text": "API so logically we can start thinking of our services as being a box a black",
    "start": "817250",
    "end": "822380"
  },
  {
    "text": "box that has a service interface and if we have a data store that's required inside that that's an internal",
    "start": "822380",
    "end": "828290"
  },
  {
    "text": "implementation concern a nice thing with the AWS stack is again a very very simple primitive that we're provided is",
    "start": "828290",
    "end": "835460"
  },
  {
    "text": "the ability to deny external access to other things could be other accounts or",
    "start": "835460",
    "end": "840680"
  },
  {
    "text": "other entities and other security groups so for example if I don't want people reaching straight into my database what",
    "start": "840680",
    "end": "847100"
  },
  {
    "text": "I could just use a V PC to just turn off access to those parts of my system enforcing that constraint it's actually",
    "start": "847100",
    "end": "854450"
  },
  {
    "text": "good thing to make make things that are bad make them hard right don't make them easy ok and we get that that little",
    "start": "854450",
    "end": "860270"
  },
  {
    "text": "low-level building block ultimately we come back to this idea that micro services are an architecture which",
    "start": "860270",
    "end": "866750"
  },
  {
    "text": "optimizes around autonomy this comes all the way back to well what do we need to",
    "start": "866750",
    "end": "872300"
  },
  {
    "text": "do that well the building blocks we need to achieve autonomy back when Amazon were creating these autonomous teams",
    "start": "872300",
    "end": "879230"
  },
  {
    "text": "they had the problem where we want a small team they aren't a big team on a small team small teams can coordinate they can go fast and we want to reduce",
    "start": "879230",
    "end": "886880"
  },
  {
    "text": "the need for those teams to go and raise tickets with other people then if they ever have to ask other people to do",
    "start": "886880",
    "end": "892580"
  },
  {
    "text": "things they want to do things themselves but they need to deploy things to do they have to go and buy the machines and",
    "start": "892580",
    "end": "898940"
  },
  {
    "text": "rack those boxes up now we could go and get people with those skills and add them to our team but now suddenly our",
    "start": "898940",
    "end": "904370"
  },
  {
    "text": "small team now is a big team because it's got loads of people with different expertise so instead they said well we",
    "start": "904370",
    "end": "910430"
  },
  {
    "text": "can't have our team spending all their time racking up boxes I mean our small teams become big teams but we need to",
    "start": "910430",
    "end": "916460"
  },
  {
    "text": "improve things so where this isn't required so almost Amazon said well we need tools",
    "start": "916460",
    "end": "921710"
  },
  {
    "text": "that are now asked to self-service provision what we need so we need to self you know improve our autonomy with",
    "start": "921710",
    "end": "928910"
  },
  {
    "text": "through a mindset of self-service and this is what's led to ultimately why we're all here",
    "start": "928910",
    "end": "934250"
  },
  {
    "text": "right the need for Amazon internally to create tools to support autonomous teams",
    "start": "934250",
    "end": "939790"
  },
  {
    "text": "resulted ultimately in the development of the AWS product suite creating high",
    "start": "939790",
    "end": "945320"
  },
  {
    "text": "award abstractions over sort of the the you know the big three issues in infrastructure you know storage computer",
    "start": "945320",
    "end": "952430"
  },
  {
    "text": "networking it's what we talked about in fit you know infrastructure as a service this is all about empowering autonomous",
    "start": "952430",
    "end": "959720"
  },
  {
    "text": "teams to self-service what they need it's sort of really interesting to me to",
    "start": "959720",
    "end": "965150"
  },
  {
    "text": "think that you know we've had this sort of stuff comes come full circle in a way you know Amazon wanted to have small",
    "start": "965150",
    "end": "971120"
  },
  {
    "text": "autonomous teams so had to create software to support those autonomous teams and allow them to reduce the",
    "start": "971120",
    "end": "976910"
  },
  {
    "text": "coordination allow them to increase their autonomy which in turn provided things for other people to also do more",
    "start": "976910",
    "end": "984650"
  },
  {
    "text": "the same thing Amazon are far from the only people that have done this of course we will get to use AWS likewise",
    "start": "984650",
    "end": "991250"
  },
  {
    "text": "we think about an organization like Google so Google who develop their borg platform for running and managing large",
    "start": "991250",
    "end": "997460"
  },
  {
    "text": "scale applications at Google themselves right so teams can use Google to deploy",
    "start": "997460",
    "end": "1003339"
  },
  {
    "text": "their software and it manages at scale if you're interested in the dark details of how this is done I can thoroughly",
    "start": "1003339",
    "end": "1009100"
  },
  {
    "text": "recommend this paper if you hang out in these sorts of spaces it's really well written it goes into a lot of information about how it works and then",
    "start": "1009100",
    "end": "1015490"
  },
  {
    "text": "the Borg paper inspired a lot of other platforms like me sauce that you may have heard of now ball was an internal",
    "start": "1015490",
    "end": "1022660"
  },
  {
    "text": "product just like the precursors were to the AWS product suite and just like",
    "start": "1022660",
    "end": "1028870"
  },
  {
    "text": "Amazon Google thought well let's let's get these ideas out into the open as well they took a different route and of",
    "start": "1028870",
    "end": "1034780"
  },
  {
    "text": "course what the ideas and abstractions behind Bourg became behind kubernetes we're gonna come back to kubernetes and",
    "start": "1034780",
    "end": "1041230"
  },
  {
    "text": "the other stuff that amaz are doing into space a bit later on so we have this interesting interesting world where",
    "start": "1041230",
    "end": "1047319"
  },
  {
    "text": "teams that wanted autonomy ended up creating software and architectures based on autonomy independent deployable",
    "start": "1047319",
    "end": "1054730"
  },
  {
    "text": "services independent probable components out of that they created software they created tools they created technology",
    "start": "1054730",
    "end": "1060640"
  },
  {
    "text": "that allows those teams to be autonomous and independent which in turn makes the next generation of teams",
    "start": "1060640",
    "end": "1067809"
  },
  {
    "text": "even more efficient in how autonomous they are organizations like Netflix and lyft and slack for example of whom have",
    "start": "1067809",
    "end": "1074559"
  },
  {
    "text": "been using their examples Amazon to actually enable them to hit their next level of scale or level autonomy or next",
    "start": "1074559",
    "end": "1081879"
  },
  {
    "text": "level of speed and it keeps coming out all of those organizations have themselves and created more software",
    "start": "1081879",
    "end": "1087219"
  },
  {
    "text": "that helps us it's a lovely virtuous circle we've got going on here we should though start talking about",
    "start": "1087219",
    "end": "1092919"
  },
  {
    "text": "some specifics and here's where we get to one of the biggest problems with AWS I hope they haven't paved my hotel room",
    "start": "1092919",
    "end": "1099940"
  },
  {
    "text": "yet so I'm going to sugarcoat it a little bit but you know there's so much stuff there's loads of stuff right this",
    "start": "1099940",
    "end": "1106570"
  },
  {
    "text": "is a problem for me when I was taking those training courses every evening before a training course I would have to",
    "start": "1106570",
    "end": "1111759"
  },
  {
    "text": "go and check there hadn't launched anything subscribing to Jeff bars Bluff for God's sake Jeff what have you released now and I have to go and re",
    "start": "1111759",
    "end": "1118269"
  },
  {
    "text": "screenshot something on my applicant you know going all they've changed all this and then this has come out which",
    "start": "1118269",
    "end": "1123519"
  },
  {
    "text": "invalidated this whole section of content and they came exhaustive keep exhausting keeping up and when we have",
    "start": "1123519",
    "end": "1129519"
  },
  {
    "text": "something like a micro service architecture that even putting the technology to one side has so many",
    "start": "1129519",
    "end": "1134769"
  },
  {
    "text": "different options of how you can build them when you bring in a huge product suite like AWS there are so many",
    "start": "1134769",
    "end": "1140889"
  },
  {
    "text": "different options and how you can bring that to bear so I want to do is give you a few examples of how of different ways",
    "start": "1140889",
    "end": "1147369"
  },
  {
    "text": "in which you can use AWS to actually help implement a microsomes architecture this is by no means exhaustive because",
    "start": "1147369",
    "end": "1154119"
  },
  {
    "text": "if we try to go through all the options it would be exhausting but let's start with the basics let's start with the",
    "start": "1154119",
    "end": "1160179"
  },
  {
    "text": "simplest thing that could possibly work let's actually start with some of the lowest level primitives that the AWS",
    "start": "1160179",
    "end": "1166239"
  },
  {
    "text": "platform has provided us and has providers for many years we just start off with a single process it's the my",
    "start": "1166239",
    "end": "1172119"
  },
  {
    "text": "first service I want to launch it what see what's a really basic thing I could do what is it I'm going to launch it and",
    "start": "1172119",
    "end": "1179499"
  },
  {
    "text": "deploy it onto a single ec2 instance okay so far so good",
    "start": "1179499",
    "end": "1184690"
  },
  {
    "text": "right that's all I'm doing one process one instance ec2 instance that's fine but a compute and never heard anybody I",
    "start": "1184690",
    "end": "1191320"
  },
  {
    "text": "obviously want to store some state somewhere because my services are stateless and by that I mean they",
    "start": "1191320",
    "end": "1198609"
  },
  {
    "text": "actually hold state which is somewhere else so we could argue about that later so I store that state somewhere else and I",
    "start": "1198609",
    "end": "1206020"
  },
  {
    "text": "love RDS I've loved RDS as it came out when someone finds a great abstraction it just works really really well and RDS",
    "start": "1206020",
    "end": "1213520"
  },
  {
    "text": "has saved my bacon so many times so just a standard relational database none of this sort of hippie no sequel",
    "start": "1213520",
    "end": "1219250"
  },
  {
    "text": "nonsense for us good old-fashioned relational database sitting there at RDS okay so this is good and your RDS offers",
    "start": "1219250",
    "end": "1226390"
  },
  {
    "text": "me some some benefits but of course I have to recognize the fact that even if I have no load considerations of my",
    "start": "1226390",
    "end": "1233140"
  },
  {
    "text": "service that I I you know deploying a single node system on Amazon is",
    "start": "1233140",
    "end": "1238570"
  },
  {
    "text": "problematic because we have no SLA for compute within an availability zone right so you have to deploy across and",
    "start": "1238570",
    "end": "1246370"
  },
  {
    "text": "availability across all the availability zones to actually even get anything like the SLA around compute so that means I",
    "start": "1246370",
    "end": "1252730"
  },
  {
    "text": "need a couple more nodes at least okay I probably keep those nodes running so I",
    "start": "1252730",
    "end": "1258250"
  },
  {
    "text": "stick those things across firstly across different availability zones to get that SLA and I'll take it an auto scaling",
    "start": "1258250",
    "end": "1264370"
  },
  {
    "text": "group but we just want to keep it running okay just keep the three nodes I want three nodes and three even two availability zones that's fine and I'm",
    "start": "1264370",
    "end": "1271720"
  },
  {
    "text": "going to stick her and ELB on top okay this is a very very simple standard",
    "start": "1271720",
    "end": "1278169"
  },
  {
    "text": "vanilla horizontally scaled micro service and looks really boring and",
    "start": "1278169",
    "end": "1284200"
  },
  {
    "text": "guess what it probably works for 99% the stuff you're going to do so you know that's good but of course yeah this",
    "start": "1284200",
    "end": "1291250"
  },
  {
    "text": "logically they what we're looking at here is the physical topology of a single logical service but of course you",
    "start": "1291250",
    "end": "1297130"
  },
  {
    "text": "don't have one service do you because if you had one service that's not a service is it that's just a monolithic",
    "start": "1297130",
    "end": "1302830"
  },
  {
    "text": "application there's nothing I'm not saying there's anything wrong with monolithic applications at all they work really well for a large number of",
    "start": "1302830",
    "end": "1309070"
  },
  {
    "text": "companies but you're here to learn about micro services so this is by itself not",
    "start": "1309070",
    "end": "1314230"
  },
  {
    "text": "as much use and then we start hitting some of the issues that emerge once you start doing these things at scale so",
    "start": "1314230",
    "end": "1319809"
  },
  {
    "text": "I've got you know maybe I've got some scripts to manage this and I should be automating this stuff but then you start",
    "start": "1319809",
    "end": "1326919"
  },
  {
    "text": "realizing well this is just one logical service amongst many I've got multiple different like almost templates of",
    "start": "1326919",
    "end": "1333280"
  },
  {
    "text": "services multiple different services that have to be deployed and managed and they all might be variations",
    "start": "1333280",
    "end": "1339309"
  },
  {
    "text": "on a theme some might have more notes one might have fewer sub might have nodes that are more powerful than others",
    "start": "1339309",
    "end": "1344350"
  },
  {
    "text": "some might not require a database back-end but they're all kind of variations on a thing but they all need",
    "start": "1344350",
    "end": "1349929"
  },
  {
    "text": "to be managed almost like like a cookie cutter in a way just popping out new versions of these things and so managing",
    "start": "1349929",
    "end": "1357909"
  },
  {
    "text": "your stuff becomes a bit more problematic and this is when we start reaching for again a higher-order abstraction or something that allows us",
    "start": "1357909",
    "end": "1365080"
  },
  {
    "text": "to control these low-level primitives or something a higher order so typically people start reaching for things like",
    "start": "1365080",
    "end": "1370330"
  },
  {
    "text": "AWS CloudFormation I personally prefer prefer terraform from hashey corp partly",
    "start": "1370330",
    "end": "1377080"
  },
  {
    "text": "because I have just a visceral reaction to Jason I think it's the devil's work",
    "start": "1377080",
    "end": "1382440"
  },
  {
    "text": "and you can't argue me out of it there's no logic behind it it just is so I just move on with my life you know I'm",
    "start": "1382440",
    "end": "1389590"
  },
  {
    "text": "ambivalent about five versus Emacs but when it comes to Jason I have views so no no CloudFormation for us but both of",
    "start": "1389590",
    "end": "1396340"
  },
  {
    "text": "these tools are useful right they allow us to in text form effectively create",
    "start": "1396340",
    "end": "1402039"
  },
  {
    "text": "templates that are going to deform the the production or say that the deployment topology of our services",
    "start": "1402039",
    "end": "1407620"
  },
  {
    "text": "those things can be parameterised that's good right okay so that now allows us to very quickly spin up you know clusters",
    "start": "1407620",
    "end": "1415809"
  },
  {
    "text": "of our services as we need them we can do better is there something higher is there a higher level",
    "start": "1415809",
    "end": "1421809"
  },
  {
    "text": "abstraction we can work with again high level abstractions allow us to do more with the people we've got it allows us",
    "start": "1421809",
    "end": "1427629"
  },
  {
    "text": "to handle more moving parts so what else have we got well we've got elastic Beanstalk and it is elastic beanstalks a",
    "start": "1427629",
    "end": "1433570"
  },
  {
    "text": "bit of an interesting service it's of when it first came out it was Amazon's I suppose real first attempt at a platform",
    "start": "1433570",
    "end": "1441070"
  },
  {
    "text": "as a service and here really it's it's very much more focused on the idea of running an application when I saw",
    "start": "1441070",
    "end": "1447490"
  },
  {
    "text": "straightaway that the concepts they talked about there as an application you have so you've got a higher level or higher order construct you're not just",
    "start": "1447490",
    "end": "1454539"
  },
  {
    "text": "talking about an ec2 instance that you then have to configure yourself you're now saying no I have an application how",
    "start": "1454539",
    "end": "1460330"
  },
  {
    "text": "is that managed and so Beanstalk has some nice things it supports different runtimes and it can do nice things for",
    "start": "1460330",
    "end": "1466330"
  },
  {
    "text": "you like to say okay well you want your applique deployed this way in developed in your development environment and over here in",
    "start": "1466330",
    "end": "1472720"
  },
  {
    "text": "QA you're in it in this way and over here in production in a different way so we've got a high level abstraction that",
    "start": "1472720",
    "end": "1478150"
  },
  {
    "text": "starts talking more about the language of development and development of software rather than wiring together",
    "start": "1478150",
    "end": "1485400"
  },
  {
    "text": "operating primitives this is sort of better I think in practice I think",
    "start": "1485400",
    "end": "1490740"
  },
  {
    "text": "Beanstalk works really well when you're just getting started running something on AWS I think if you're running one or",
    "start": "1490740",
    "end": "1497409"
  },
  {
    "text": "two services it's fine but really it's more built I think for monolithic applications than service based",
    "start": "1497409",
    "end": "1503140"
  },
  {
    "text": "applications typically when I speak to my clients and setting my own experiences people start here but we'll",
    "start": "1503140",
    "end": "1509289"
  },
  {
    "text": "often then move on to something else but if you're just moving on to Amazon for the first time this might not be a bad place to look at they are adding",
    "start": "1509289",
    "end": "1516130"
  },
  {
    "text": "features to her being stock all the time which manager today with a platform for longer but I think ultimately most people go beyond it certainly for",
    "start": "1516130",
    "end": "1522520"
  },
  {
    "text": "services based setups ok so we need to take a brief aside now and talk about",
    "start": "1522520",
    "end": "1529000"
  },
  {
    "text": "containers because this is technically speaking the container track so we do",
    "start": "1529000",
    "end": "1534340"
  },
  {
    "text": "need to talk about what they are and why they might be useful and why they might be useful in the context of micro",
    "start": "1534340",
    "end": "1539860"
  },
  {
    "text": "services the first thing is is you know an old colleague of mine James Lewis says that micro services are an",
    "start": "1539860",
    "end": "1547419"
  },
  {
    "text": "architecture which buys you options it gives you loads of options to do all kinds of crazy stuff it allows you for",
    "start": "1547419",
    "end": "1554470"
  },
  {
    "text": "example to do things like very technology that you use we want teams to",
    "start": "1554470",
    "end": "1559630"
  },
  {
    "text": "be autonomous and be able to develop and evolve independently from other people we're communicating over service",
    "start": "1559630",
    "end": "1565210"
  },
  {
    "text": "interfaces therefore while we're working we might make decisions to use different technologies because locally that allows",
    "start": "1565210",
    "end": "1571600"
  },
  {
    "text": "us to go faster so I might have one team writing something in Java a different team writing something in Ruby and a",
    "start": "1571600",
    "end": "1577600"
  },
  {
    "text": "third team may be running something on c-sharp every dotnet core which is all the rage at the moment right this is",
    "start": "1577600",
    "end": "1583149"
  },
  {
    "text": "great this allows locally this is a local optimization but this can become a",
    "start": "1583149",
    "end": "1588159"
  },
  {
    "text": "global optimization problem because you start realizing oh I need a whole different tool chain for managing deployments of software here and here",
    "start": "1588159",
    "end": "1595330"
  },
  {
    "text": "and here so straightaway that becomes painful and actually increases the cost of having a polyglot environment",
    "start": "1595330",
    "end": "1601929"
  },
  {
    "text": "this is one area where containers or container ization can help with containers what you do is you have a",
    "start": "1601929",
    "end": "1608169"
  },
  {
    "text": "uniform format of packaging you can bundle up a running effectively a process and say this is this is a like a",
    "start": "1608169",
    "end": "1613990"
  },
  {
    "text": "virtual machine so this is my service I don't really care what's running inside the service but as a uniform deployment",
    "start": "1613990",
    "end": "1620230"
  },
  {
    "text": "model the idea being it's like the containers in shipping containers I have uniform connection points when one of",
    "start": "1620230",
    "end": "1625840"
  },
  {
    "text": "those container cranes or picks it up and drops it on a truck that can take containers you don't care as a car in it",
    "start": "1625840",
    "end": "1631330"
  },
  {
    "text": "or money in it or cocaine being smuggled across the border you probably care about that last one but you know but",
    "start": "1631330",
    "end": "1637480"
  },
  {
    "text": "from a point of view of the crane operator it's the same thing you're moving around and containers give us",
    "start": "1637480",
    "end": "1642879"
  },
  {
    "text": "that same unit of deployment to an extent you don't care what's happening inside the box as much that reduces",
    "start": "1642879",
    "end": "1648610"
  },
  {
    "text": "therefore the cost of having multiple different technologies typically this is where dock has done really well it's",
    "start": "1648610",
    "end": "1654429"
  },
  {
    "text": "giving us a lovely tool chain around managing those containers so docker is a",
    "start": "1654429",
    "end": "1659499"
  },
  {
    "text": "tool train on top of it the idea of containers I've been around actually for a very long time this idea of the shipping container is something they use",
    "start": "1659499",
    "end": "1666100"
  },
  {
    "text": "a lot it's a bit of a lie it's actually they reversed into that marketing terminology really because we were",
    "start": "1666100",
    "end": "1672129"
  },
  {
    "text": "talking about containers for years like only opensolaris zones and net bsd jails before the shipping containers everybody",
    "start": "1672129",
    "end": "1678820"
  },
  {
    "text": "thought of but anyway moving forward there are other areas and other reasons",
    "start": "1678820",
    "end": "1684309"
  },
  {
    "text": "why containers are useful in the context of microservices remember we want",
    "start": "1684309",
    "end": "1689440"
  },
  {
    "text": "independent deployability that means we also need to avoid causing problems for other people when we do our",
    "start": "1689440",
    "end": "1694629"
  },
  {
    "text": "deployments very early on when you start deploying services for the first time you're trying to keep your your sort of",
    "start": "1694629",
    "end": "1701169"
  },
  {
    "text": "management overhead costs low and so a very common pattern is to say well we'll just keep the same number of machines we",
    "start": "1701169",
    "end": "1707110"
  },
  {
    "text": "had in the past but we'll just deploy lots of services onto one machine so my",
    "start": "1707110",
    "end": "1712570"
  },
  {
    "text": "tears with an application container or a lot of different processes on different ports on the same ec2 instance for",
    "start": "1712570",
    "end": "1718690"
  },
  {
    "text": "example so I deploy my services and it's all fine right but you start realizing no certain places where these things can",
    "start": "1718690",
    "end": "1726519"
  },
  {
    "text": "gain each other way for example if someone had let me check in any code recently I could quite easily have",
    "start": "1726519",
    "end": "1732429"
  },
  {
    "text": "created a new version of your software which uses significantly more resources that used to use my speciality",
    "start": "1732429",
    "end": "1737860"
  },
  {
    "text": "is making slow Co slower and making fast code really slow it's like an order of",
    "start": "1737860",
    "end": "1743140"
  },
  {
    "text": "magnitude problem right so suddenly you deployed a new version of us and it's gobbling it's eating all of the resources on the rest of your machines",
    "start": "1743140",
    "end": "1750400"
  },
  {
    "text": "and those other services that are running on that box are severely impacted and potentially might even be",
    "start": "1750400",
    "end": "1757090"
  },
  {
    "text": "taken out this this becomes an issue like services starts getting each other",
    "start": "1757090",
    "end": "1762790"
  },
  {
    "text": "way it's also hard though who's in charge of the box who owns the box who configures that machine in appropriate",
    "start": "1762790",
    "end": "1768130"
  },
  {
    "text": "way it becomes like a multi-tenant environment but you you always want it to be a singleton environment you're",
    "start": "1768130",
    "end": "1773770"
  },
  {
    "text": "gonna own the whole machine as the person deploying it the issue is that once you start as this is why actually",
    "start": "1773770",
    "end": "1780010"
  },
  {
    "text": "that most organizations that have been using micro services for a while move away from this model and move towards a",
    "start": "1780010",
    "end": "1785710"
  },
  {
    "text": "model where they run services on their own isolated execution environment giving it its own operating system stack",
    "start": "1785710",
    "end": "1791080"
  },
  {
    "text": "its own set of resources now for some organizations that operate a sufficient scale that might well mean one ec2",
    "start": "1791080",
    "end": "1798610"
  },
  {
    "text": "instance one service so Netflix it sent used to be the case of virtually all of their running nose or either 64 or 32",
    "start": "1798610",
    "end": "1805720"
  },
  {
    "text": "gig Ram ec2 instances need one just one process because everyone in it sufficient volume that it's justifiable",
    "start": "1805720",
    "end": "1811860"
  },
  {
    "text": "for a lot of us though we don't have that those kind of load concerns and we",
    "start": "1811860",
    "end": "1816880"
  },
  {
    "text": "realize it actually becomes quite expensive provisioning lots of machines for all your services especially when",
    "start": "1816880",
    "end": "1822340"
  },
  {
    "text": "each of those services might not be using that many resources this is where containers can become useful because",
    "start": "1822340",
    "end": "1828130"
  },
  {
    "text": "containers allow you to much much more cost-effectively pack isolated execution environments onto the same underlying",
    "start": "1828130",
    "end": "1834370"
  },
  {
    "text": "hardware effectively it's like much cheaper virtual machines so you get loads more these things packed onto the",
    "start": "1834370",
    "end": "1840970"
  },
  {
    "text": "same operating environment and this actually is why micro services and containers have been working really well",
    "start": "1840970",
    "end": "1847660"
  },
  {
    "text": "together last several years because it makes it much cheaper to isolate them from each other which gives you a lot",
    "start": "1847660",
    "end": "1853330"
  },
  {
    "text": "more autonomy in terms of how you have deployment so let's think about how we",
    "start": "1853330",
    "end": "1858460"
  },
  {
    "text": "might make use of docker then to manage containers again on our sort of familiar",
    "start": "1858460",
    "end": "1864280"
  },
  {
    "text": "old ec2 based world I here I would launch a large ec2 instance",
    "start": "1864280",
    "end": "1869680"
  },
  {
    "text": "and it's quite good actually if I launch at like a big ec2 instance I get a lot more IO out of it that I would with a",
    "start": "1869680",
    "end": "1874870"
  },
  {
    "text": "smaller machine I run a docker engine which is the process which is going to allow me to manage the containers on that box and",
    "start": "1874870",
    "end": "1881290"
  },
  {
    "text": "then I can use that to provision and deploy docker images which are my",
    "start": "1881290",
    "end": "1886330"
  },
  {
    "text": "services so I start creating images that represent my deploy services and I'm",
    "start": "1886330",
    "end": "1891400"
  },
  {
    "text": "using the docket engine locally to deploy and manipulate those it's much much more cost-effective world so it's",
    "start": "1891400",
    "end": "1896950"
  },
  {
    "text": "really great cost effective isolation and it gives that uniform deployment model this is really nice it's a nice",
    "start": "1896950",
    "end": "1902710"
  },
  {
    "text": "world to be really fast turnaround as well these things provision very very fast you know you might wait for a couple of",
    "start": "1902710",
    "end": "1908560"
  },
  {
    "text": "minutes for dt2 instance to pop up containers should launch in a couple of seconds so also from a developer",
    "start": "1908560",
    "end": "1914020"
  },
  {
    "text": "feedback point of view and from a scaling point of view that can be really beneficial the problem is that this is a",
    "start": "1914020",
    "end": "1919870"
  },
  {
    "text": "single node solution this is one ec2 instance and I'm managing that ec2",
    "start": "1919870",
    "end": "1925720"
  },
  {
    "text": "instance in one place as I mentioned earlier you've got to have more you've got to spread your compute log across",
    "start": "1925720",
    "end": "1932050"
  },
  {
    "text": "all the availability zones in your region to actually be you know eligible for those SLA s so a single node",
    "start": "1932050",
    "end": "1938710"
  },
  {
    "text": "solution isn't going to cut it so what we need to be able to do is manage containers over lots of underlying ec2",
    "start": "1938710",
    "end": "1944980"
  },
  {
    "text": "instances across my Amazon set up and because I want to do things like say a",
    "start": "1944980",
    "end": "1951040"
  },
  {
    "text": "lot well I I need three copies of the blue service and I want them distributed to so they're resilient and I want like",
    "start": "1951040",
    "end": "1958240"
  },
  {
    "text": "four copies of the purple service and it's like well how do I make that stuff work now early days with docker what",
    "start": "1958240",
    "end": "1964660"
  },
  {
    "text": "people were doing was they were writing scripts on top of the low-level docker processes so they would actually go and",
    "start": "1964660",
    "end": "1969760"
  },
  {
    "text": "write run scripts that would go and actually shell into the boxes and run the docker commands on each node to bring those things up into a state of",
    "start": "1969760",
    "end": "1975790"
  },
  {
    "text": "being there's all kinds of issues with that it's quite a brittle process and it also doesn't do what's called design",
    "start": "1975790",
    "end": "1981730"
  },
  {
    "text": "state management because really you want some form of desire to date management you want to be able to say no I don't",
    "start": "1981730",
    "end": "1987640"
  },
  {
    "text": "just want three services running on these three instances today I want that forevermore until I tell you otherwise I",
    "start": "1987640",
    "end": "1993880"
  },
  {
    "text": "want you to maintain that state in case of something crashes so the question then is well how can I manage containers",
    "start": "1993880",
    "end": "2000270"
  },
  {
    "text": "over multiple machines one of my options here and this is where we get into the space of what's called container orchestration",
    "start": "2000270",
    "end": "2006620"
  },
  {
    "text": "or container scheduling so here in at in the context of AWS we have Amazon ECS so",
    "start": "2006620",
    "end": "2014990"
  },
  {
    "text": "I mentioned earlier on that sort of Borg which was Google's internal mechanism for running containers that ethos and",
    "start": "2014990",
    "end": "2021590"
  },
  {
    "text": "that mindset is what drove sort of the development of kubernetes and the abstractions that kubernetes now",
    "start": "2021590",
    "end": "2026720"
  },
  {
    "text": "provides so how Google sort of think about containers from a developer point of view became kubernetes and that's",
    "start": "2026720",
    "end": "2032510"
  },
  {
    "text": "exactly what's happened with Amazon ECS how Amazon think about containers internally has now kind of come out into",
    "start": "2032510",
    "end": "2038900"
  },
  {
    "text": "what Amazon SES is for us now this is a way of managing docker containers over underlying ec2 instances by giving you a",
    "start": "2038900",
    "end": "2046130"
  },
  {
    "text": "higher again another higher level of abstraction you see as we're going through we're going higher and higher up in our abstractions it's a higher level of",
    "start": "2046130",
    "end": "2052970"
  },
  {
    "text": "abstraction to allow you to deploy as applications over multiple machines so we get a whole bunch of stuff that's",
    "start": "2052970",
    "end": "2058879"
  },
  {
    "text": "quite useful we get the Amazon container registry so as part of the docker tool training you to thing called the image",
    "start": "2058880",
    "end": "2064070"
  },
  {
    "text": "registry which is where you store your docket images it's actually really interesting piece of technology but running them is a bit painful and so",
    "start": "2064070",
    "end": "2071149"
  },
  {
    "text": "quite a lot of people that use docker will actually just use a hosted provider to use those instances themselves in fact you can just use that container",
    "start": "2071150",
    "end": "2077240"
  },
  {
    "text": "registry without using the rest of UCS if you want to and some people do so you get that so they run them manage that",
    "start": "2077240",
    "end": "2082370"
  },
  {
    "text": "container registry for you this is probably one of the coolest things about UCS this is a sad thing to say it's it's",
    "start": "2082370",
    "end": "2089899"
  },
  {
    "text": "sort of 9 o'clock in the morning and I choosing one of the coolest things is identity and access management or",
    "start": "2089900",
    "end": "2095450"
  },
  {
    "text": "doesn't it get you going oh yeah I'm going to talk about Identity and Access Management it's a really dull subject",
    "start": "2095450",
    "end": "2101300"
  },
  {
    "text": "but it's one of the best things about the AWS Mac is the amount of control it gives you over resources and who can do",
    "start": "2101300",
    "end": "2106820"
  },
  {
    "text": "what and and you know I just talked about autonomy and doing what you want so why I am important well actually",
    "start": "2106820",
    "end": "2112370"
  },
  {
    "text": "cause I am gives you safety as well because you have I am you are able to let people do whatever they want in this",
    "start": "2112370",
    "end": "2118700"
  },
  {
    "text": "other space without having a security of I am you'd have to be much more controlling over it so that so these",
    "start": "2118700",
    "end": "2125600"
  },
  {
    "text": "Identity and Access Management rules are actually they're quite deep level and ECS and that's useful because then you",
    "start": "2125600",
    "end": "2130820"
  },
  {
    "text": "can run and ECS cluster as a multi-tenant type situation so you",
    "start": "2130820",
    "end": "2136880"
  },
  {
    "text": "I have ten different delivery teams but they could all work off the same production ECS cluster that makes it",
    "start": "2136880",
    "end": "2142369"
  },
  {
    "text": "much more cost-effective but then you could use the Identity and Access Management rule to control what teams can do what things within that cluster",
    "start": "2142369",
    "end": "2148700"
  },
  {
    "text": "and those are getting better all the time you also get stuff like auto scaling and",
    "start": "2148700",
    "end": "2153710"
  },
  {
    "text": "and these sorts of platforms these container orchestration platforms almost have two levels of scaling the first is",
    "start": "2153710",
    "end": "2161569"
  },
  {
    "text": "I need more containers and the second is I actually need more of the underlying machines in the cluster so that I can",
    "start": "2161569",
    "end": "2168500"
  },
  {
    "text": "put more containers on them and so ECS you can do both we get a service",
    "start": "2168500",
    "end": "2173599"
  },
  {
    "text": "abstractions with Beanstalk we had an application abstraction with cameras and ECS we start talking about service",
    "start": "2173599",
    "end": "2179630"
  },
  {
    "text": "abstractions so right there the language is starting to go our way these are people thinking about people",
    "start": "2179630",
    "end": "2185420"
  },
  {
    "text": "deploying services there's also a bunch of other stuff that's got like placement strategies this is a very common thing",
    "start": "2185420",
    "end": "2191660"
  },
  {
    "text": "all the tools in this space will have some full of placement strategy this is defining how your containers are",
    "start": "2191660",
    "end": "2199250"
  },
  {
    "text": "distributed so when you say I want ten of these you can give hints to the platform that tell it how they should be",
    "start": "2199250",
    "end": "2206119"
  },
  {
    "text": "spread around so for example a spread strategy would say distribute these ten",
    "start": "2206119",
    "end": "2211190"
  },
  {
    "text": "nodes evenly across all of my nodes all of my underlying instances and that",
    "start": "2211190",
    "end": "2216410"
  },
  {
    "text": "becomes really useful when what we're trying to do is load balance a service and ensure some improve resiliency you",
    "start": "2216410",
    "end": "2222140"
  },
  {
    "text": "also get things like bin packing where you can say look I want ten instances I don't really care where they're running",
    "start": "2222140",
    "end": "2228170"
  },
  {
    "text": "actually just try and densely pack them and then the underlying shredding platform will say well look I'm a trying",
    "start": "2228170",
    "end": "2233750"
  },
  {
    "text": "pack these as densely as possible to increase the utilization of the underlying machine and that might allow",
    "start": "2233750",
    "end": "2239450"
  },
  {
    "text": "you to I should turn off some underlying machine so that would be a strategy which is much more about reducing your costs and all of these platforms have",
    "start": "2239450",
    "end": "2246680"
  },
  {
    "text": "these hedging strategies and they're right there in ECS as well we also the context of health checking so ECS itself",
    "start": "2246680",
    "end": "2253279"
  },
  {
    "text": "can see if your nodes are up your containers are up and of course you need that right I sort of touched on this",
    "start": "2253279",
    "end": "2259220"
  },
  {
    "text": "idea earlier of desired state management these platforms and you're running like like 25 services those services are",
    "start": "2259220",
    "end": "2265970"
  },
  {
    "text": "running say five or ten instances each becomes quite difficult to keep on all that and one of the ways we",
    "start": "2265970",
    "end": "2272280"
  },
  {
    "text": "simplify that world is we start talking about desire to take management we start pushing work into the platform and say",
    "start": "2272280",
    "end": "2277560"
  },
  {
    "text": "look I want there to be 10 of these things your job is to make sure there's always 10 of these things for the",
    "start": "2277560",
    "end": "2283740"
  },
  {
    "text": "platform to be able to do that for you it needs to have some sense of health checking it needs to know ok that node",
    "start": "2283740",
    "end": "2289170"
  },
  {
    "text": "is dead I'm going to kill it and restart it and so we've got that again inside ETS so a higher abstraction managing",
    "start": "2289170",
    "end": "2297090"
  },
  {
    "text": "containers across multiple nodes deep integration with iam and other aspects of AWS quite a nice product this is also",
    "start": "2297090",
    "end": "2305010"
  },
  {
    "text": "the space but kubernetes place now kubernetes is sort of in a different space in a way the abstraction level is",
    "start": "2305010",
    "end": "2310290"
  },
  {
    "text": "about the same right we're talking at the level of deploying and managing containers on different machines the",
    "start": "2310290",
    "end": "2315780"
  },
  {
    "text": "abstractions are subtly different the kubernetes abstractions are based on the Borg abstractions kubernetes become very",
    "start": "2315780",
    "end": "2322800"
  },
  {
    "text": "very popular one of the things that people like about kubernetes is it gives you portability across vendors and that",
    "start": "2322800",
    "end": "2329130"
  },
  {
    "text": "might be sacrilege as I said they haven't paid my hotel yet but if you did want a multi cloud strategy kubernetes",
    "start": "2329130",
    "end": "2334800"
  },
  {
    "text": "allows you to target a kubernetes installed running here or here or here turns out a large amount of people",
    "start": "2334800",
    "end": "2340680"
  },
  {
    "text": "around kubernetes on Amazon this could well be because they just prefer the abstractions it might also be that maybe",
    "start": "2340680",
    "end": "2346500"
  },
  {
    "text": "they need to run kubernetes elsewhere perhaps on their own physical premises and want a uniform level of deployment so that's what kubernetes has got going",
    "start": "2346500",
    "end": "2353190"
  },
  {
    "text": "for it and a nice ecosystem around that platform the the flipside is a lot of",
    "start": "2353190",
    "end": "2358560"
  },
  {
    "text": "people I know that actually sticking with UCS unlike ecs even though they also like kubernetes they're using ECS",
    "start": "2358560",
    "end": "2364380"
  },
  {
    "text": "on amazon because they're already using AWS and they really like the control they get with the Identity and Access",
    "start": "2364380",
    "end": "2369720"
  },
  {
    "text": "Management at the moment I think still the killer feature for ECS versus kubernetes on AWS now we should probably",
    "start": "2369720",
    "end": "2378420"
  },
  {
    "text": "also touch on on how Amazon and kubernetes are working together the",
    "start": "2378420",
    "end": "2385470"
  },
  {
    "text": "moment so some of you may have heard of a thing called the cloud native computing foundation so collector CN CF",
    "start": "2385470",
    "end": "2391710"
  },
  {
    "text": "this is called is part of the Linux Foundation and it's a body that's been pulled together to try and make it",
    "start": "2391710",
    "end": "2396960"
  },
  {
    "text": "easier for people to build cloud and native applications and really what they do is they curate different products and",
    "start": "2396960",
    "end": "2403170"
  },
  {
    "text": "diff open-source products primarily the idea being say let's take all these great products these great open-source",
    "start": "2403170",
    "end": "2408840"
  },
  {
    "text": "products that are out there and try and find ways to help these things operate together more effectively and",
    "start": "2408840",
    "end": "2414120"
  },
  {
    "text": "efficiently rather than having to pull together 25 different things and find they don't all quite work in the same",
    "start": "2414120",
    "end": "2419340"
  },
  {
    "text": "way let's at least try and bring people together to share ideas from each other and help things integrate and work together in an efficient and effective",
    "start": "2419340",
    "end": "2425760"
  },
  {
    "text": "way all there are all kinds of products fall and projects that fall under the banner of the CNC F the kubernetes there",
    "start": "2425760",
    "end": "2432330"
  },
  {
    "text": "and the top layer field has also got things like Prometheus in the monitoring space two tools I really like and the",
    "start": "2432330",
    "end": "2439770"
  },
  {
    "text": "idea isn't that there should be only one to leave that the idea is there's there could be more than one tool for the same job so in this example here we've got",
    "start": "2439770",
    "end": "2447000"
  },
  {
    "text": "both linker D and envoi which are both types of service meshes they're really interesting type of product this thing's",
    "start": "2447000",
    "end": "2453480"
  },
  {
    "text": "been doing really well is be doing some excellent work in terms of trying to extract a lessons learned from this and",
    "start": "2453480",
    "end": "2459750"
  },
  {
    "text": "Amazon is now a part of the CNC F along with Microsoft and Google and everybody else",
    "start": "2459750",
    "end": "2465350"
  },
  {
    "text": "and this is being driven you know primarily because there are so many people using this stuff on Amazon and",
    "start": "2465350",
    "end": "2471180"
  },
  {
    "text": "Amazon like well let's join the CNC F or make that as easy as possible so I think your integral talk a bit more about that",
    "start": "2471180",
    "end": "2476490"
  },
  {
    "text": "with our Q&A if you are interested by the way on running kubernetes on AWS",
    "start": "2476490",
    "end": "2483180"
  },
  {
    "text": "there's a bunch of products out there projects out there that helps you things like cops and errands also put together",
    "start": "2483180",
    "end": "2489300"
  },
  {
    "text": "a workshop where you can find details here I think they're running some events",
    "start": "2489300",
    "end": "2494700"
  },
  {
    "text": "that reinvent you might I doubt you're going to get in but you could try but they're being run at the moment talking",
    "start": "2494700",
    "end": "2500190"
  },
  {
    "text": "all about how you run kubernetes on AWS are some great resources out there so you kind of get to have your cake and",
    "start": "2500190",
    "end": "2506310"
  },
  {
    "text": "eat it in that world you could do ECS as well but I'd be kind of crazy for me it's like an either/or situation if",
    "start": "2506310",
    "end": "2511530"
  },
  {
    "text": "you're on the AWS platform now of course we've we are or how far with 40 minutes",
    "start": "2511530",
    "end": "2517080"
  },
  {
    "text": "into this presentation and so far I haven't mentioned the bigger elephant in the room and I know where the containers",
    "start": "2517080",
    "end": "2523500"
  },
  {
    "text": "track but we so this is a bit edgy talking about it we should probably just talk about whip the plaster off and talk",
    "start": "2523500",
    "end": "2528630"
  },
  {
    "text": "about service now again on service I have views there are some people talk",
    "start": "2528630",
    "end": "2535500"
  },
  {
    "text": "about what server is and I just go back to the original",
    "start": "2535500",
    "end": "2540540"
  },
  {
    "text": "definition which as far as we can tell the first person that talked about service was Ken from back in 2012 that",
    "start": "2540540",
    "end": "2548670"
  },
  {
    "text": "dates important and he's sort of what he was trying to talk about a sort of a new",
    "start": "2548670",
    "end": "2554250"
  },
  {
    "text": "type of products that he was seeing that actually again a higher abstraction that",
    "start": "2554250",
    "end": "2559830"
  },
  {
    "text": "removed the concept of a server from the vocab that developers no longer needs to worry about servers the phrase service",
    "start": "2559830",
    "end": "2566250"
  },
  {
    "text": "doesn't mean servers are no longer involved it simply means that developers",
    "start": "2566250",
    "end": "2571680"
  },
  {
    "text": "no longer have to think that much about them that's what all abstractions are about hiding detail from us that we don't need to care about right and he",
    "start": "2571680",
    "end": "2578250"
  },
  {
    "text": "was reflecting on the fact there are new products that give us this stuff the reason I braised this is a lot of people",
    "start": "2578250",
    "end": "2583350"
  },
  {
    "text": "like to say our service that just means function as a service that means lambda know lambda was announced in 2014 the",
    "start": "2583350",
    "end": "2591570"
  },
  {
    "text": "term service was around for at least two years earlier than that a service product as anything where you're abstracted away from the underlying",
    "start": "2591570",
    "end": "2597990"
  },
  {
    "text": "service being used so lambda is definitely a type of service product it",
    "start": "2597990",
    "end": "2603060"
  },
  {
    "text": "absolutely isn't it's a fantastic example of one but there are others out there and there are others in the AWS",
    "start": "2603060",
    "end": "2608280"
  },
  {
    "text": "product suite they give us that higher level abstraction we've got things like dynamo DB and one could argue the mother",
    "start": "2608280",
    "end": "2615450"
  },
  {
    "text": "and father of all service products on AWS of Amazon s3 you know you're good",
    "start": "2615450",
    "end": "2621600"
  },
  {
    "text": "you know low to zero management cost you know I'm not worried about the servers",
    "start": "2621600",
    "end": "2627869"
  },
  {
    "text": "I'm only priced based on usage fits the bill of what service is so let's talk about how I might use service though in",
    "start": "2627869",
    "end": "2634710"
  },
  {
    "text": "the context of micro services and specifically how I would use something like lambda to build a micro service",
    "start": "2634710",
    "end": "2640050"
  },
  {
    "text": "architecture and this is pretty straightforward as I say most of the time we're taking an API call in and",
    "start": "2640050",
    "end": "2645869"
  },
  {
    "text": "maybe getting something out of a database and doing something with it and then sending some information back out",
    "start": "2645869",
    "end": "2651390"
  },
  {
    "text": "and that covers like 70% of what you're going to do we can make it sexier we can",
    "start": "2651390",
    "end": "2656400"
  },
  {
    "text": "work books about it but really it comes down to that right get a request get something on a database do something do",
    "start": "2656400",
    "end": "2661590"
  },
  {
    "text": "something else turns out lambda fits really well for that right so today you know I have an API gateway so the API gateways needed",
    "start": "2661590",
    "end": "2668430"
  },
  {
    "text": "to take inbound requests and launch invocation of a lambda function so that function",
    "start": "2668430",
    "end": "2673740"
  },
  {
    "text": "will be invoked when the call comes in and it will live for the lifetime with that request up to a cap of five minutes",
    "start": "2673740",
    "end": "2680550"
  },
  {
    "text": "I believe its current limit just be one that's five and the nice thing is is I",
    "start": "2680550",
    "end": "2685950"
  },
  {
    "text": "automatically spin up a function instance when requests come in so I'm",
    "start": "2685950",
    "end": "2691380"
  },
  {
    "text": "not worried about trying to define my scaling rules not trying to how many machines do my spin up at what time or",
    "start": "2691380",
    "end": "2696480"
  },
  {
    "text": "what load no it's very easy request comes in function launched so already my scaling abstractions become much simpler",
    "start": "2696480",
    "end": "2704060"
  },
  {
    "text": "and that's nice that's great obviously I can still go and get things to a database now a database is not a",
    "start": "2704060",
    "end": "2710040"
  },
  {
    "text": "function is the thing that's stateful I can fetch information from that and and the world is good of course you do start",
    "start": "2710040",
    "end": "2717359"
  },
  {
    "text": "to start getting some interesting problems here especially when you have these sort of hybrid architectures where you've got",
    "start": "2717359",
    "end": "2722550"
  },
  {
    "text": "some service I'm not serving us the scaling at the function levels is mostly",
    "start": "2722550",
    "end": "2728070"
  },
  {
    "text": "unbound a request comes in you log 2 invocation your captain look like about a foul you guys capture a thousand",
    "start": "2728070",
    "end": "2733680"
  },
  {
    "text": "instances or whatever but we used to have normal or applications to be able to find other points in our architecture",
    "start": "2733680",
    "end": "2739619"
  },
  {
    "text": "to throttle our load and reduce load and other parts of our system with a service",
    "start": "2739619",
    "end": "2745290"
  },
  {
    "text": "architecture like this where the in you know our front door is sort of unbounded in terms of how its scales we can start",
    "start": "2745290",
    "end": "2752310"
  },
  {
    "text": "having impairments mismatches between the functions and the backend stateful services for example the load comes in",
    "start": "2752310",
    "end": "2759300"
  },
  {
    "text": "and as the functions keep getting spun up that can create some enough load on my back end database a traditional RDS",
    "start": "2759300",
    "end": "2766260"
  },
  {
    "text": "instance to take that instance out and that could be quite problematic this does actually happen there's an",
    "start": "2766260",
    "end": "2772890"
  },
  {
    "text": "organization called bustled who make heavy use of AWS service stuff they run",
    "start": "2772890",
    "end": "2779640"
  },
  {
    "text": "about 60 million uniques a month here in the US or a media company there talked about as being all service they're not",
    "start": "2779640",
    "end": "2785910"
  },
  {
    "text": "they actually use Redis as a database in the backend and putting aside any concerns you might have about running",
    "start": "2785910",
    "end": "2791310"
  },
  {
    "text": "Redis as a database it works for them although they had this problem as the load came in more",
    "start": "2791310",
    "end": "2797369"
  },
  {
    "text": "functions were launched those functions cause sufficient load on their back-end databases to take those databases",
    "start": "2797369",
    "end": "2803190"
  },
  {
    "text": "so the hybrid world gets kind of interesting because we've lost those things like database connection pools to",
    "start": "2803190",
    "end": "2808680"
  },
  {
    "text": "manage that load and of course the solution is to then look at something like dynamo DB which again as a service",
    "start": "2808680",
    "end": "2815520"
  },
  {
    "text": "back end as a service should hopefully scale with that load this doesn't even with a bit of a puzzle because I really",
    "start": "2815520",
    "end": "2821579"
  },
  {
    "text": "like server stuff but you know typically when I'm working with customers and clients we're looking at how do we",
    "start": "2821579",
    "end": "2827099"
  },
  {
    "text": "incrementally adopt new technology and this does load me over a few puzzles of how do I incrementally move to a service",
    "start": "2827099",
    "end": "2834869"
  },
  {
    "text": "architecture when parts of my system don't have the same elasticity I almost",
    "start": "2834869",
    "end": "2839910"
  },
  {
    "text": "think we might start looking at things like service meshes to act as intermediary layers between ephemeral",
    "start": "2839910",
    "end": "2845339"
  },
  {
    "text": "functions and stateful backends to manage the performance of those systems",
    "start": "2845339",
    "end": "2850410"
  },
  {
    "text": "but now you know typically under this sink down especially the blank sheet of paper I'm often thinking how can i push",
    "start": "2850410",
    "end": "2856140"
  },
  {
    "text": "as much of this stuff into the platform as possible and ultimately that's using these higher abstractions like service",
    "start": "2856140",
    "end": "2862430"
  },
  {
    "text": "she also mentioned of course was service I think we like is if there's no requests coming in there's no function",
    "start": "2862430",
    "end": "2867780"
  },
  {
    "text": "running that's great from a cost and a security point of view so service functions can be cost effective because",
    "start": "2867780",
    "end": "2873750"
  },
  {
    "text": "you should only pay for what you use same for back into the service or any base you only charge based on your",
    "start": "2873750",
    "end": "2878970"
  },
  {
    "text": "storage and your ingress and egress that can also make calculation of running cost difficult and I do know some people",
    "start": "2878970",
    "end": "2886260"
  },
  {
    "text": "that have struggled with talking about service architecture implementations purely because they couldn't work out",
    "start": "2886260",
    "end": "2891690"
  },
  {
    "text": "what their costs were going to be their running costs and they stuck with good old-fashioned ec2 instances because at",
    "start": "2891690",
    "end": "2897270"
  },
  {
    "text": "least they get predictable costs from it even though they accept this cost might be higher but they can be much much",
    "start": "2897270",
    "end": "2903059"
  },
  {
    "text": "cheaper to run but they will be uncertain they are can also be more secure these are typically highly",
    "start": "2903059",
    "end": "2909030"
  },
  {
    "text": "sandbox products high-level abstractions often can give you some security benefits things like the functions aren't running if they aren't being",
    "start": "2909030",
    "end": "2914880"
  },
  {
    "text": "invoked I think it's a better abstraction for most developers I think this is the thing like we've been",
    "start": "2914880",
    "end": "2920190"
  },
  {
    "text": "building these applications for longer we've got better at working out what it is that our developers need to be able",
    "start": "2920190",
    "end": "2926220"
  },
  {
    "text": "to build systems more effectively I sort of looked back now at infrastructure as a service and feel that those are not really when you look at it now that",
    "start": "2926220",
    "end": "2933630"
  },
  {
    "text": "isn't really a developer friendly traction that's actually like a Savi ops friendly abstraction I think this is",
    "start": "2933630",
    "end": "2939990"
  },
  {
    "text": "starting to get closer to developer friendly abstractions on the AWS platform so when you think about service",
    "start": "2939990",
    "end": "2947760"
  },
  {
    "text": "just think about this as as a better developer friendly abstractions I think we're getting closer to what we need",
    "start": "2947760",
    "end": "2953910"
  },
  {
    "text": "what most developers need to be able to build applications and it's no surprise you are now seeing function as a service",
    "start": "2953910",
    "end": "2961010"
  },
  {
    "text": "implementations that run outside of the cloud vendors if you want to Google it you will probably find a new kubernetes",
    "start": "2961010",
    "end": "2968280"
  },
  {
    "text": "framework every 10 minutes being launched to run functions as a service on that particular platform I joke but I",
    "start": "2968280",
    "end": "2974580"
  },
  {
    "text": "did is for a talk recently I googled it and I found seven different implementations that all had lots of stars on github and it was all very",
    "start": "2974580",
    "end": "2981150"
  },
  {
    "text": "confusing but they are out there right because the idea is really good right although you know lambda you could argue",
    "start": "2981150",
    "end": "2987360"
  },
  {
    "text": "when it was first launched was much more about gluing different Amazon products together when it comes to service",
    "start": "2987360",
    "end": "2992430"
  },
  {
    "text": "developers is really useful it's also worth noting talking about extractions",
    "start": "2992430",
    "end": "2997800"
  },
  {
    "text": "certainly the functions of service stuff it's a wrapper over containers we know there are containers under there you",
    "start": "2997800",
    "end": "3003320"
  },
  {
    "text": "just don't need to worry about them anymore this is why you know I think containers are incredibly important and",
    "start": "3003320",
    "end": "3009170"
  },
  {
    "text": "also something that most of you should know nothing about probably next couple of years they will increasingly become",
    "start": "3009170",
    "end": "3015050"
  },
  {
    "text": "an incredibly useful implementation detail of higher order abstractions so",
    "start": "3015050",
    "end": "3020750"
  },
  {
    "text": "right now Webber's running around going dakka dakka dakka dakka dakka dakka and it's fantastic anyone knows going to",
    "start": "3020750",
    "end": "3025820"
  },
  {
    "text": "care in a few years because it's going to be hidden from you and the fat stuff is just the first example of that happening so hopefully I've tried to",
    "start": "3025820",
    "end": "3034190"
  },
  {
    "text": "sort of create a picture of you I mean it isn't just to say that you know you there are lots of options for micro services using the ABS platform but more",
    "start": "3034190",
    "end": "3040850"
  },
  {
    "text": "that the mindset of the ADA best platform itself was driven by an organization that wanted to increase the",
    "start": "3040850",
    "end": "3046730"
  },
  {
    "text": "autonomy of their teams make it easier for people to develop software as almost the ethos of the AWS platform is built",
    "start": "3046730",
    "end": "3053600"
  },
  {
    "text": "with that in mind and that's why these things go really well together yes it is very very daunting to all of you because",
    "start": "3053600",
    "end": "3060200"
  },
  {
    "text": "there's so many different options my general advice now for companies are starting off with Amazon and",
    "start": "3060200",
    "end": "3065860"
  },
  {
    "text": "microservices if you've got something simple I would just start off with being stork initially see how that goes I",
    "start": "3065860",
    "end": "3072349"
  },
  {
    "text": "think you will outgrow it and if you start getting to a certain level of complexity then you're going to start",
    "start": "3072349",
    "end": "3078529"
  },
  {
    "text": "looking at something like ECS or maybe kubernetes if you have to deploy elsewhere I probably wouldn't be",
    "start": "3078529",
    "end": "3085489"
  },
  {
    "text": "starting with putting together an ec2 instance and Annie he'll be any more right that for me is already a lower",
    "start": "3085489",
    "end": "3091429"
  },
  {
    "text": "level abstraction that you don't need to worry about but if you can start docker izing your application it will make it",
    "start": "3091429",
    "end": "3096499"
  },
  {
    "text": "easy for being stalk it'll make it easier for ECS and elsewhere as well thank you so much return I think we can",
    "start": "3096499",
    "end": "3101929"
  },
  {
    "text": "did a bit of Q&A now really yeah and I'm like yeah cool awesome thank you think",
    "start": "3101929",
    "end": "3107809"
  },
  {
    "text": "of that was a fantastic talk actually you know really enlightening now",
    "start": "3107809",
    "end": "3112719"
  },
  {
    "text": "so I truly feel like a kid in a candy store no there is containers there is serverless in containers there are so",
    "start": "3117140",
    "end": "3123800"
  },
  {
    "text": "many ways by which I can do containers or containers are required necessity or",
    "start": "3123800",
    "end": "3128810"
  },
  {
    "text": "evil necessity for micro services I want to talk a little bit about that so tell us you know I mean I'm a customer of EWS",
    "start": "3128810",
    "end": "3135530"
  },
  {
    "text": "and I'm running a monolith on classical AWS environment and we're looking to",
    "start": "3135530",
    "end": "3141680"
  },
  {
    "text": "migrate to micro-services I go in a store what am I looking what am i picking yeah that makes sense I mean",
    "start": "3141680",
    "end": "3148160"
  },
  {
    "text": "you've got a whole bunch of questions which is where what's the first thing you extract and there's stuff in the book about ask more than the non-id are",
    "start": "3148160",
    "end": "3153680"
  },
  {
    "text": "specific I probably would now adays especially on Amazon I would say okay I'm gonna pull out this functionality into a new service I would be looking to",
    "start": "3153680",
    "end": "3160970"
  },
  {
    "text": "containerize it as I did that move if I containerize it it's going to make it easy for me it's got an artifact",
    "start": "3160970",
    "end": "3166730"
  },
  {
    "text": "deployment make it easy be to run locally make it easier on AWS makes it easy to run on Beanstalk runs even on",
    "start": "3166730",
    "end": "3172640"
  },
  {
    "text": "ECS so even if I just containerize it I still open up a whole lot of options and give myself that nice easy uniform form",
    "start": "3172640",
    "end": "3178880"
  },
  {
    "text": "of deployment and so I'd at least get to that point and then you still have the choice of you know a beanstalk managing",
    "start": "3178880",
    "end": "3184760"
  },
  {
    "text": "your own docker engine eCos or coop right so the key part being you know take a look at your existing mono let's",
    "start": "3184760",
    "end": "3191030"
  },
  {
    "text": "rip them apart for the principles that are given in your book and then once you have identified the different services",
    "start": "3191030",
    "end": "3196640"
  },
  {
    "text": "containerize them and then look to the next path yeah I thought the one the one sort of exception aside that is if",
    "start": "3196640",
    "end": "3203690"
  },
  {
    "text": "you're already all lead on AWS and you don't have to be on other platforms is I probably would also be looking at you",
    "start": "3203690",
    "end": "3208940"
  },
  {
    "text": "know when I come out it's like this thing is could it be a function could I just embrace lambda now I think",
    "start": "3208940",
    "end": "3214160"
  },
  {
    "text": "there are some still there are still some some some gotchas around that it's all some interesting things about observability of those platforms but",
    "start": "3214160",
    "end": "3220790"
  },
  {
    "text": "you're increasingly I'm looking for opportunities to make heavy use of lambda just because the drastic reduction in my maintenance costs not",
    "start": "3220790",
    "end": "3227690"
  },
  {
    "text": "sorting aside the the money I pay you guys to run lovely events like this it's",
    "start": "3227690",
    "end": "3233000"
  },
  {
    "text": "actually at the maintenance con the admin costs much lower as well yeah absolutely so I think that made complete",
    "start": "3233000",
    "end": "3238340"
  },
  {
    "text": "sense now you can make it made a good point about server less versus containers per se but if I'm looking",
    "start": "3238340",
    "end": "3244850"
  },
  {
    "text": "with the containers landscape itself it the real necessity for doing micro-services I've made a huge",
    "start": "3244850",
    "end": "3250950"
  },
  {
    "text": "investment building my monoliths on ec2 instances it's not required",
    "start": "3250950",
    "end": "3256859"
  },
  {
    "text": "I think it's typically a scale play I think once you get to a certain number of these things containers become a",
    "start": "3256859",
    "end": "3263820"
  },
  {
    "text": "worthwhile investment because they reduce the cost of managing these things and so for me if you've got all the",
    "start": "3263820",
    "end": "3269190"
  },
  {
    "text": "thing that works right now is no reason to switch to it I would look to switch when you start having a large number of moving parts because then you can start",
    "start": "3269190",
    "end": "3275430"
  },
  {
    "text": "making use of platforms like ECS and like kubernetes that can manage those containers at scale not it now you had a",
    "start": "3275430",
    "end": "3282000"
  },
  {
    "text": "question for me as well well yeah so the thing I was interested in is I don't give you a hard time it took you a long",
    "start": "3282000",
    "end": "3287310"
  },
  {
    "text": "time to join the CNC F so I'm really interested is to what you see the role of Amazon because obviously if people",
    "start": "3287310",
    "end": "3293369"
  },
  {
    "text": "see I think simplistically see see the CNC F the cloud native computing foundation is just kubernetes which is",
    "start": "3293369",
    "end": "3299430"
  },
  {
    "text": "not it's only one of the things it does and of course amazon has ECS as well and",
    "start": "3299430",
    "end": "3304440"
  },
  {
    "text": "so i was really interested is to because i know what is the role of amazon on the CNC f what's it there to do and what",
    "start": "3304440",
    "end": "3309900"
  },
  {
    "text": "what's it trying to achieve is part of being a member yeah totally well if you think about you",
    "start": "3309900",
    "end": "3314970"
  },
  {
    "text": "know when Netflix started open sourcing now so Amazon has been helping customers building cloud native applications for",
    "start": "3314970",
    "end": "3321900"
  },
  {
    "text": "many many years this term cloud native you would think about it kind of became a fad two years ago and that's when the",
    "start": "3321900",
    "end": "3327570"
  },
  {
    "text": "CNC F essentially was funded so we have been helping our customers all along building those cloud native applications",
    "start": "3327570",
    "end": "3334190"
  },
  {
    "text": "yes it took us a long time I just barely join Amazon this year so I took it on me",
    "start": "3334190",
    "end": "3339210"
  },
  {
    "text": "personally and since then we have joins the ncf we are a Platinum Member that gives us a seat at the board so we're",
    "start": "3339210",
    "end": "3345810"
  },
  {
    "text": "definitely looking forward to while we are continuing to participate very actively in the CNC of different",
    "start": "3345810",
    "end": "3351300"
  },
  {
    "text": "activities as we talked about the kubernetes on AWS workshop if you look at the CN CF survey in a lot of our",
    "start": "3351300",
    "end": "3357420"
  },
  {
    "text": "features product roadmaps are heavily driven by customer obsession essentially",
    "start": "3357420",
    "end": "3362970"
  },
  {
    "text": "so if you look at the CN CF survey about two thirds of kubernetes",
    "start": "3362970",
    "end": "3368130"
  },
  {
    "text": "today runs on AWS that's the reason we build that workshop essentially completely out in the open source you",
    "start": "3368130",
    "end": "3374490"
  },
  {
    "text": "know icer github repo essentially anybody can contribute a feature of pull request whatever you want to do",
    "start": "3374490",
    "end": "3380430"
  },
  {
    "text": "and then not just cuban areas but we are looking a whole variety of projects across the cnc of ecosystem essentially",
    "start": "3380430",
    "end": "3387270"
  },
  {
    "text": "on like literally this morning somebody center pull request how do you use Jaeger with kubernetes on AWS right we",
    "start": "3387270",
    "end": "3395220"
  },
  {
    "text": "have like linker D and kubernetes on AWS we got like envoy on kubernetes on AWS",
    "start": "3395220",
    "end": "3401099"
  },
  {
    "text": "so we're looking at the entire C&C of landscape we definitely want to contribute more actively to kubernetes",
    "start": "3401099",
    "end": "3407730"
  },
  {
    "text": "upstream it make sure that experience for our customers stay absolutely relevant and you should go check out the",
    "start": "3407730",
    "end": "3413369"
  },
  {
    "text": "workshop this is the workshop yeah I mean well it is now in our AWS blessed repo and how I started this in my personal handle but now it's a AWS bless",
    "start": "3413369",
    "end": "3420900"
  },
  {
    "text": "repo but it will automatically be redirected to the right link for you guys cool I think if you have anything",
    "start": "3420900",
    "end": "3426780"
  },
  {
    "text": "else aside a couple questions from the crowd maybe yeah well go for it yeah to say thank you much for Aaron for inviting me and",
    "start": "3426780",
    "end": "3432980"
  },
  {
    "text": "paying for my flight I think he's pay for my flight and I take a couple question I'm gonna hang around after the day but I take a couple",
    "start": "3432980",
    "end": "3438750"
  },
  {
    "text": "of questions before we run out of time so I think you've had your arm up for a while there so go ahead yeah yeah well",
    "start": "3438750",
    "end": "3460410"
  },
  {
    "text": "it's it's actually bit worse than that so there are because we know that functions get pre-warmed to reduce pin",
    "start": "3460410",
    "end": "3466770"
  },
  {
    "text": "up time the the bus'll team actually found some really interesting stuff which was that their reddest instances",
    "start": "3466770",
    "end": "3473520"
  },
  {
    "text": "were topping out at 10,000 connections you can't have 10,000 functions running they unfortunately I don't have any",
    "start": "3473520",
    "end": "3479430"
  },
  {
    "text": "great answers for you right now so I don't work for Amazon so as well as it'd be really good so I'm being written on",
    "start": "3479430",
    "end": "3485099"
  },
  {
    "text": "this I'd say so what they were doing at that they were actually doing stuff on the are on the reddit instances",
    "start": "3485099",
    "end": "3491040"
  },
  {
    "text": "themselves around stuff at the TCP stack they were killing idle connections and things to throw those old connections",
    "start": "3491040",
    "end": "3497250"
  },
  {
    "text": "away there was actually a number of connections rather than the load problem now I think I could probably solve this",
    "start": "3497250",
    "end": "3504780"
  },
  {
    "text": "with a service mesh but I haven't done it and I want to talk to the teams that link addy and I know both our teams at",
    "start": "3504780",
    "end": "3510150"
  },
  {
    "text": "link D and at the ISTE a lot because I think that could be a solution so so especially people that don't know",
    "start": "3510150",
    "end": "3515730"
  },
  {
    "text": "it imagine it's like middleware for synchronous calls it's a bit of a simplification but it's basically when I",
    "start": "3515730",
    "end": "3521940"
  },
  {
    "text": "talk from one service to another I go via the service mesh the service mesh can handle routing traffic shaping",
    "start": "3521940",
    "end": "3527300"
  },
  {
    "text": "tracing and logging and so one of the things that that could actually be where effectively are you know our connection",
    "start": "3527300",
    "end": "3534240"
  },
  {
    "text": "pooling that used to be inside could start sitting in their service meshes now this is a theoretical idea that I've",
    "start": "3534240",
    "end": "3539580"
  },
  {
    "text": "started talking to some people about I would also imagine that there will we will start getting some controls around",
    "start": "3539580",
    "end": "3545520"
  },
  {
    "text": "these things I mean the answer at the moment is you just need to scale the stuff up way in advance of what your",
    "start": "3545520",
    "end": "3551820"
  },
  {
    "text": "your functions might be and potentially also try and you can actually also constrain things I think I'm right in",
    "start": "3551820",
    "end": "3557550"
  },
  {
    "text": "saying you have more control over controlling invocations at the API gateway level than you do at the lambda",
    "start": "3557550",
    "end": "3562560"
  },
  {
    "text": "level so that would be the other thing you can do would be to constrain it the API gateway I think these things will get better but I do wonder if the",
    "start": "3562560",
    "end": "3569940"
  },
  {
    "text": "service meshes might solve it and that's I've got outbound requests so there might be a blog post ooh cool I'll do a",
    "start": "3569940",
    "end": "3576720"
  },
  {
    "text": "question over here and then we'll do one over here so question over here yes",
    "start": "3576720",
    "end": "3587130"
  },
  {
    "text": "[Music] well so typically when you're trying to",
    "start": "3587130",
    "end": "3593760"
  },
  {
    "text": "compose so you might need to carry I might need five or six different things in order to carry out an operation",
    "start": "3593760",
    "end": "3599060"
  },
  {
    "text": "sometimes you might end up with a service which itself is that composition so I might so I might have a metadata",
    "start": "3599060",
    "end": "3608070"
  },
  {
    "text": "service which actually pulls information from my listing service and everything else that gives me those high-level",
    "start": "3608070",
    "end": "3613260"
  },
  {
    "text": "abstractions that's quite a common pattern they do specifically with Amazon but that just becomes like a higher order service in a way that pulls those",
    "start": "3613260",
    "end": "3619500"
  },
  {
    "text": "things together you also have a situation where you sometimes need to have multiple services work together to",
    "start": "3619500",
    "end": "3625470"
  },
  {
    "text": "carry out some kind of operation afterwards like a business process that might require multi different services",
    "start": "3625470",
    "end": "3630480"
  },
  {
    "text": "to be involved and they're typically we start talking about two different core approaches the first is what's called",
    "start": "3630480",
    "end": "3635970"
  },
  {
    "text": "orchestration where you have a central process manager that has effectively a representation of your business workflow",
    "start": "3635970",
    "end": "3642360"
  },
  {
    "text": "you might be able to do like a simple workflow manager from Amazon for that I don't I haven't tried it myself but traditionally where a business process",
    "start": "3642360",
    "end": "3648990"
  },
  {
    "text": "modeling tool would be used I personally preferred an approach called choreography where you basically have",
    "start": "3648990",
    "end": "3655950"
  },
  {
    "text": "you make heavy use of events and services react to events and understand what they need to do if you okay so you",
    "start": "3655950",
    "end": "3662970"
  },
  {
    "text": "don't have to read my book but if you go to the Safari bookshelf you can sign up for a 30-day free trial if you go to",
    "start": "3662970",
    "end": "3668940"
  },
  {
    "text": "there's a section called orchestration versus choreography it works very much by itself you can be that little section",
    "start": "3668940",
    "end": "3675090"
  },
  {
    "text": "by itself all for free and I sort of outlined the two different approaches choreography and orchestration and how",
    "start": "3675090",
    "end": "3680850"
  },
  {
    "text": "you make those two worlds work the other thing that might be of use is I did an article in things called backends for front-ends",
    "start": "3680850",
    "end": "3686370"
  },
  {
    "text": "which can work where you need to aggregate lots of calls for user interface requirements so if you search",
    "start": "3686370",
    "end": "3692760"
  },
  {
    "text": "with Sam Nieman BFF you don't become my best friend forever but you do get the article about back into front Tim's",
    "start": "3692760",
    "end": "3698990"
  },
  {
    "text": "alright I think that's about our last question yes if you have any more questions I'm gonna be hanging out in the hallway",
    "start": "3698990",
    "end": "3704340"
  },
  {
    "text": "come please talk to us over there they might have a few time [Applause]",
    "start": "3704340",
    "end": "3709479"
  }
]