[
  {
    "text": "[Music]",
    "start": "410",
    "end": "12320"
  },
  {
    "text": "hello i'm rina a cloud support engineer",
    "start": "12320",
    "end": "15360"
  },
  {
    "text": "here at the aws office in bangalore",
    "start": "15360",
    "end": "18320"
  },
  {
    "text": "today i am going to show you how we can",
    "start": "18320",
    "end": "20720"
  },
  {
    "text": "troubleshoot the 404 no such key error",
    "start": "20720",
    "end": "23760"
  },
  {
    "text": "from the amazon simple storage service",
    "start": "23760",
    "end": "26560"
  },
  {
    "text": "we will go through all the necessary",
    "start": "26560",
    "end": "28320"
  },
  {
    "text": "troubleshooting steps to help us",
    "start": "28320",
    "end": "30240"
  },
  {
    "text": "identify the root cause of 404 no such",
    "start": "30240",
    "end": "33520"
  },
  {
    "text": "key error returned by s3 let's get",
    "start": "33520",
    "end": "36239"
  },
  {
    "text": "started amazon s3 generally returns 404",
    "start": "36239",
    "end": "39760"
  },
  {
    "text": "errors if the requested object is",
    "start": "39760",
    "end": "41920"
  },
  {
    "text": "missing from the bucket before user make",
    "start": "41920",
    "end": "44559"
  },
  {
    "text": "get or head requests for an object make",
    "start": "44559",
    "end": "47039"
  },
  {
    "text": "sure that the object is created and",
    "start": "47039",
    "end": "48879"
  },
  {
    "text": "available in the s3 bucket so let's see",
    "start": "48879",
    "end": "51600"
  },
  {
    "text": "how to check if an object is available",
    "start": "51600",
    "end": "53600"
  },
  {
    "text": "in a bucket you can review the contents",
    "start": "53600",
    "end": "56000"
  },
  {
    "text": "of the bucket from the s3 console or you",
    "start": "56000",
    "end": "59039"
  },
  {
    "text": "can run the head object command using",
    "start": "59039",
    "end": "61199"
  },
  {
    "text": "the aws command line interface also make",
    "start": "61199",
    "end": "64320"
  },
  {
    "text": "sure that you are using the most recent",
    "start": "64320",
    "end": "66240"
  },
  {
    "text": "aws cli version so that you don't",
    "start": "66240",
    "end": "68640"
  },
  {
    "text": "receive errors when running the awcli",
    "start": "68640",
    "end": "70880"
  },
  {
    "text": "command amazon s3 delivers strong read",
    "start": "70880",
    "end": "73600"
  },
  {
    "text": "after write consistency for all",
    "start": "73600",
    "end": "75600"
  },
  {
    "text": "applications after a successful write of",
    "start": "75600",
    "end": "78080"
  },
  {
    "text": "a new object or an override or delete of",
    "start": "78080",
    "end": "81119"
  },
  {
    "text": "an existing object any subsequent read",
    "start": "81119",
    "end": "83600"
  },
  {
    "text": "request immediately receives the latest",
    "start": "83600",
    "end": "85759"
  },
  {
    "text": "version of the object s3 also provides",
    "start": "85759",
    "end": "88799"
  },
  {
    "text": "strong consistency for list operations",
    "start": "88799",
    "end": "91840"
  },
  {
    "text": "after a write you can list the objects",
    "start": "91840",
    "end": "94159"
  },
  {
    "text": "in a bucket",
    "start": "94159",
    "end": "95600"
  },
  {
    "text": "because the requested object is",
    "start": "95600",
    "end": "97360"
  },
  {
    "text": "available in the s3 bucket for some time",
    "start": "97360",
    "end": "100079"
  },
  {
    "text": "and we are still receiving a 404 no such",
    "start": "100079",
    "end": "102720"
  },
  {
    "text": "key error again let's check the",
    "start": "102720",
    "end": "104399"
  },
  {
    "text": "following troubleshooting steps",
    "start": "104399",
    "end": "107920"
  },
  {
    "text": "first let's confirm that the request",
    "start": "110960",
    "end": "113280"
  },
  {
    "text": "matches the object name exactly",
    "start": "113280",
    "end": "115759"
  },
  {
    "text": "including the capitalization of the",
    "start": "115759",
    "end": "117680"
  },
  {
    "text": "object name",
    "start": "117680",
    "end": "118799"
  },
  {
    "text": "request for s3 objects are case",
    "start": "118799",
    "end": "120719"
  },
  {
    "text": "sensitive for example if an object is",
    "start": "120719",
    "end": "123439"
  },
  {
    "text": "named myimage.jpg",
    "start": "123439",
    "end": "125920"
  },
  {
    "text": "but",
    "start": "125920",
    "end": "126840"
  },
  {
    "text": "myimage.jpg is requested",
    "start": "126840",
    "end": "129520"
  },
  {
    "text": "then the requester receives a 404 no",
    "start": "129520",
    "end": "132480"
  },
  {
    "text": "such key error",
    "start": "132480",
    "end": "135280"
  },
  {
    "text": "next we must confirm that the requested",
    "start": "137200",
    "end": "139680"
  },
  {
    "text": "path matches the path to the object",
    "start": "139680",
    "end": "142319"
  },
  {
    "text": "otherwise the requester receives a 404",
    "start": "142319",
    "end": "145520"
  },
  {
    "text": "no such key error",
    "start": "145520",
    "end": "147680"
  },
  {
    "text": "if the path to the object contains",
    "start": "147680",
    "end": "149440"
  },
  {
    "text": "spaces then be sure that the request",
    "start": "149440",
    "end": "152000"
  },
  {
    "text": "uses the correct syntax to recognize the",
    "start": "152000",
    "end": "154400"
  },
  {
    "text": "path for example if you are using the",
    "start": "154400",
    "end": "156959"
  },
  {
    "text": "aws cli to download an object to your",
    "start": "156959",
    "end": "159440"
  },
  {
    "text": "windows machine you must use quotation",
    "start": "159440",
    "end": "161760"
  },
  {
    "text": "mark around the object path the object",
    "start": "161760",
    "end": "164239"
  },
  {
    "text": "path must look like this",
    "start": "164239",
    "end": "167760"
  },
  {
    "text": "check the object name for any special",
    "start": "168400",
    "end": "170480"
  },
  {
    "text": "character or url encoded character that",
    "start": "170480",
    "end": "173519"
  },
  {
    "text": "are difficult to see such as carriage",
    "start": "173519",
    "end": "175840"
  },
  {
    "text": "returns or new lines for example the",
    "start": "175840",
    "end": "179040"
  },
  {
    "text": "object name test with a carriage return",
    "start": "179040",
    "end": "181519"
  },
  {
    "text": "at the end shows as test percentage 0a",
    "start": "181519",
    "end": "184640"
  },
  {
    "text": "in the amazon s3 console to check",
    "start": "184640",
    "end": "187360"
  },
  {
    "text": "object's name for special characters you",
    "start": "187360",
    "end": "189840"
  },
  {
    "text": "can run the list objects hyphen v2",
    "start": "189840",
    "end": "192319"
  },
  {
    "text": "command",
    "start": "192319",
    "end": "193280"
  },
  {
    "text": "fit the parameter hyphen hyphen output",
    "start": "193280",
    "end": "196080"
  },
  {
    "text": "json",
    "start": "196080",
    "end": "197200"
  },
  {
    "text": "the json output makes characters such as",
    "start": "197200",
    "end": "200159"
  },
  {
    "text": "returns slash r visible",
    "start": "200159",
    "end": "203040"
  },
  {
    "text": "if an object name has a special",
    "start": "203040",
    "end": "204799"
  },
  {
    "text": "character that's not always visible",
    "start": "204799",
    "end": "207599"
  },
  {
    "text": "remove the character from the object",
    "start": "207599",
    "end": "209280"
  },
  {
    "text": "name and then try accessing the object",
    "start": "209280",
    "end": "212319"
  },
  {
    "text": "again",
    "start": "212319",
    "end": "214640"
  },
  {
    "text": "optionally you can enable server access",
    "start": "216799",
    "end": "219120"
  },
  {
    "text": "logging to review request records in",
    "start": "219120",
    "end": "221200"
  },
  {
    "text": "further detail for issues that might be",
    "start": "221200",
    "end": "223200"
  },
  {
    "text": "causing the 404 no such key error",
    "start": "223200",
    "end": "225920"
  },
  {
    "text": "additionally note that if an object is",
    "start": "225920",
    "end": "228319"
  },
  {
    "text": "missing from the bucket and the",
    "start": "228319",
    "end": "229920"
  },
  {
    "text": "requester doesn't have s3 list bucket",
    "start": "229920",
    "end": "232319"
  },
  {
    "text": "access then the requester will receive a",
    "start": "232319",
    "end": "234799"
  },
  {
    "text": "403 access denied error if you receive a",
    "start": "234799",
    "end": "238080"
  },
  {
    "text": "403 access denied error resolve the",
    "start": "238080",
    "end": "240400"
  },
  {
    "text": "issue related to the missing object",
    "start": "240400",
    "end": "242400"
  },
  {
    "text": "thanks for watching and happy cloud",
    "start": "242400",
    "end": "244239"
  },
  {
    "text": "computing from all of us here at aws",
    "start": "244239",
    "end": "247570"
  },
  {
    "text": "[Music]",
    "start": "247570",
    "end": "252990"
  }
]