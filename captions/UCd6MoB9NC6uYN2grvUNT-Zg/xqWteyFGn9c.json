[
  {
    "start": "0",
    "end": "20000"
  },
  {
    "text": "all right welcome back this is day five of our in-depth Postgres training our",
    "start": "30",
    "end": "5100"
  },
  {
    "text": "last day and today we're going to jump into talking about migrations our last",
    "start": "5100",
    "end": "12870"
  },
  {
    "text": "topic migrations to Postgres alright but",
    "start": "12870",
    "end": "18420"
  },
  {
    "text": "before I do that just like everyday real quickly happy in a sense at this point",
    "start": "18420",
    "end": "24180"
  },
  {
    "text": "in time I think we've touched on everything right so multi a-z backups and logical export so we talked about",
    "start": "24180",
    "end": "30210"
  },
  {
    "text": "yesterday how that's your your safety kit your most important tools to make sure that you're not going to lose data",
    "start": "30210",
    "end": "36920"
  },
  {
    "text": "and and again these happiness since what this is is this the database engineering",
    "start": "36920",
    "end": "42930"
  },
  {
    "text": "team the Postgres database engineering team at AWS or an RDS specifically these",
    "start": "42930",
    "end": "48960"
  },
  {
    "text": "are the things that we don't really even debate with each other about we're just like oh yeah if it's a production system",
    "start": "48960",
    "end": "54210"
  },
  {
    "text": "it should have this and these are the the tools that make solving problems",
    "start": "54210",
    "end": "59489"
  },
  {
    "text": "easy when we work with customers when a couple when we work with a customer and they've done all of these things it yeah",
    "start": "59489",
    "end": "68010"
  },
  {
    "text": "it really shortens the time to resolve issues it's that we have everything that we need at our disposal and and you'd",
    "start": "68010",
    "end": "73409"
  },
  {
    "text": "find the same as well so multi a-z backups logical exports huge pages and",
    "start": "73409",
    "end": "78659"
  },
  {
    "text": "connection pooling we talked about yesterday and we were just talking a little bit",
    "start": "78659",
    "end": "83700"
  },
  {
    "text": "more about this morning auto vacuum logging talked about Auto vacuums some",
    "start": "83700",
    "end": "88770"
  },
  {
    "text": "more yesterday as well that's really and the logging here oh by the way there is",
    "start": "88770",
    "end": "94369"
  },
  {
    "text": "the idea of forcing auto vacuum logging is an RDS thing not a Postgres thing the",
    "start": "94369",
    "end": "102689"
  },
  {
    "text": "reason for that is that the auto vacuum daemon runs as super user",
    "start": "102689",
    "end": "108840"
  },
  {
    "text": "I so this this kind of comes back to the the the only you know the only changes",
    "start": "108840",
    "end": "114689"
  },
  {
    "text": "that we've made to Postgres is just kind of the bare essentials that we had to do just to offer it as a managed service",
    "start": "114689",
    "end": "121259"
  },
  {
    "text": "and largely what that means is things around the security model so that we could offer because we could offer",
    "start": "121259",
    "end": "128520"
  },
  {
    "text": "Postgres as a managed service and just not let you do anything you know very",
    "start": "128520",
    "end": "133740"
  },
  {
    "text": "little nothing that requires superuser but what we've found is that it's a lot more useful if we find a way to allow a",
    "start": "133740",
    "end": "142230"
  },
  {
    "text": "lot of these super user things that typically require a super user to create sort of an intermediate tier what we",
    "start": "142230",
    "end": "148650"
  },
  {
    "text": "call the RDS super user which allows you to do a lot of those things like whether it's the event triggers whether it's",
    "start": "148650",
    "end": "155900"
  },
  {
    "text": "whether it's this controlling the logging of auto vacuum things like that",
    "start": "155900",
    "end": "161460"
  },
  {
    "text": "so those are the sorts of things that those that's the only place where you'll find modifications I once there was one",
    "start": "161460",
    "end": "169110"
  },
  {
    "text": "time actually that I took I just pulled the get source code for the RDS Postgres",
    "start": "169110",
    "end": "175890"
  },
  {
    "text": "and I just I just did a DIF from the same version of community Postgres to",
    "start": "175890",
    "end": "182700"
  },
  {
    "text": "RDS Postgres and I just I just liked and then I just counted like the number of plus signs and minus signs to just see",
    "start": "182700",
    "end": "188460"
  },
  {
    "text": "how many lines of code were changed and what I found when I did that and then I",
    "start": "188460",
    "end": "194340"
  },
  {
    "text": "that's right after that I looked at a couple of different minor releases of",
    "start": "194340",
    "end": "200550"
  },
  {
    "text": "community Postgres okay and what I found out when I ran that comparison was that",
    "start": "200550",
    "end": "206190"
  },
  {
    "text": "there we changed less than the smallest minor version release of community Postgres",
    "start": "206190",
    "end": "212190"
  },
  {
    "text": "that I was able to find or that I looked at in all of my comparisons so that kind of gives you a sense of the scope but we",
    "start": "212190",
    "end": "218520"
  },
  {
    "text": "tweet that we really haven't changed much now that doesn't include what I was not just to be clear what I'm not",
    "start": "218520",
    "end": "224790"
  },
  {
    "text": "including there is like there's there are like security releases so there are some a couple of minor releases that were released just to address like a",
    "start": "224790",
    "end": "232620"
  },
  {
    "text": "certain CVE which you know those have like 10 lines of change so that I I'm",
    "start": "232620",
    "end": "237810"
  },
  {
    "text": "not saying we have like only one line of change I was looking at like the the",
    "start": "237810",
    "end": "242910"
  },
  {
    "text": "scheduled normal minor minor releases but I but you know it's a kind of a metric that's kind of telling and",
    "start": "242910",
    "end": "249210"
  },
  {
    "text": "helpful that's not a public thing right now anyway but I think it's a really",
    "start": "249210",
    "end": "256650"
  },
  {
    "text": "cool metric forcing Auto vacuum logging then over on the right-hand side are",
    "start": "256650",
    "end": "263820"
  },
  {
    "text": "more performance-oriented things like p IE m paying attention to please pay attention",
    "start": "263820",
    "end": "270000"
  },
  {
    "text": "to an enhance monitoring to the granularity that you collects things PG",
    "start": "270000",
    "end": "276060"
  },
  {
    "text": "SATs statements temp usage keeping track of in this class one of the great things",
    "start": "276060",
    "end": "281070"
  },
  {
    "text": "about this class is that you guys have taught me a few things and we made our list of alarms longer so we added those",
    "start": "281070",
    "end": "286530"
  },
  {
    "text": "last two this week starting up the last two the the middle one free and the last",
    "start": "286530",
    "end": "294210"
  },
  {
    "text": "one sort of meaning the locals calling out local storage on Aurora which I just",
    "start": "294210",
    "end": "299880"
  },
  {
    "text": "had a single line before and then adding in the replicas like okay had to do that",
    "start": "299880",
    "end": "306660"
  },
  {
    "text": "because this is the last time I'll have the slide up for the class for the context of you guys who I'm talking to",
    "start": "306660",
    "end": "314130"
  },
  {
    "text": "you right now too since you guys often are working with customers and not",
    "start": "314130",
    "end": "320400"
  },
  {
    "text": "necessarily the customer I mean when you are the customer yourself like when you're setting up your own systems of",
    "start": "320400",
    "end": "326640"
  },
  {
    "text": "course you follow these but I would also encourage you guys pay attention to this list as you're talking to customers as",
    "start": "326640",
    "end": "333030"
  },
  {
    "text": "well and like I said these are things that we don't debate about that we just",
    "start": "333030",
    "end": "338490"
  },
  {
    "text": "we kind of think these are good practices and this slide I'm this goes",
    "start": "338490",
    "end": "344070"
  },
  {
    "text": "in every single talk that I've posted on the internet so this is something that I'm kind of trying to get the message",
    "start": "344070",
    "end": "349169"
  },
  {
    "text": "out about like these are things that like you know at least me personally you know as a database engineer at Amazon",
    "start": "349169",
    "end": "356760"
  },
  {
    "text": "these are things that I consider about really best practices for your production databases on AWS Postgres",
    "start": "356760",
    "end": "365660"
  },
  {
    "text": "okay coming across to our topics for today",
    "start": "365660",
    "end": "374319"
  },
  {
    "text": "the first thing is as I said before we're going to talk about replication so",
    "start": "374319",
    "end": "382159"
  },
  {
    "text": "today is migration day and I'm going to",
    "start": "382159",
    "end": "390080"
  },
  {
    "start": "387000",
    "end": "505000"
  },
  {
    "text": "start with replication because I think that replication fits under the umbrella of migrations pretty cleanly I mean when",
    "start": "390080",
    "end": "402650"
  },
  {
    "text": "you're migrating to Postgres you've got a the implication there is you have an existing system you need to move the",
    "start": "402650",
    "end": "407719"
  },
  {
    "text": "data in some time somehow you need to move the data in now replication one",
    "start": "407719",
    "end": "413960"
  },
  {
    "text": "major use case is migration it's not the only one right so just what are a couple",
    "start": "413960",
    "end": "419120"
  },
  {
    "text": "other reasons that we would have multiple copies of our data and that's actually - just to restate replication",
    "start": "419120",
    "end": "425930"
  },
  {
    "text": "is the the sort of the word that we typically use what does a replication mean it just means more than one copy of",
    "start": "425930",
    "end": "432620"
  },
  {
    "text": "your data that's really what it means high availability would be another common reason for replication for having",
    "start": "432620",
    "end": "439039"
  },
  {
    "text": "multiple copies of data and we've talked about that earlier this week already",
    "start": "439039",
    "end": "444520"
  },
  {
    "text": "another reason is moving data closer to the customer so having so having your",
    "start": "444520",
    "end": "451190"
  },
  {
    "text": "data in your application maybe if have customer you if you have customers all over the world having a copy of your data and the application in the same",
    "start": "451190",
    "end": "458539"
  },
  {
    "text": "country or in the same region as those customers another reason would be for just compute power if the largest",
    "start": "458539",
    "end": "464569"
  },
  {
    "text": "instance that you have available if you need more compute power than the largest instance that's available to you being",
    "start": "464569",
    "end": "471860"
  },
  {
    "text": "able to to supplement it by having multiple copies of data in Postgres",
    "start": "471860",
    "end": "480069"
  },
  {
    "text": "thinking about so Postgres is not a new database it's been around for a long time it's been around for like what what",
    "start": "480069",
    "end": "487580"
  },
  {
    "text": "did we say 30 40 years or more so the idea of doing replication in Postgres is",
    "start": "487580",
    "end": "492740"
  },
  {
    "text": "nothing new either and in Postgres I think that there are sort of three is",
    "start": "492740",
    "end": "498919"
  },
  {
    "text": "helpful to me to think about three main categories of application and this is how I break it",
    "start": "498919",
    "end": "506080"
  },
  {
    "start": "505000",
    "end": "740000"
  },
  {
    "text": "down and the end the first category what",
    "start": "506080",
    "end": "512169"
  },
  {
    "text": "I'm going to do is I'm just gonna walk through all of these one at a time and the first category that I'm going to look at is is what I'm calling the",
    "start": "512169",
    "end": "518768"
  },
  {
    "text": "sequel based replication so the idea behind this is that there are ways of",
    "start": "518769",
    "end": "524290"
  },
  {
    "text": "doing replication and Postgres where you don't need anything outside of the sequel standard and the first way the",
    "start": "524290",
    "end": "533019"
  },
  {
    "text": "first way is this what's called this what's called the statement based replication here and what statement",
    "start": "533019",
    "end": "538660"
  },
  {
    "text": "based replication is is when you're managing it you're managing it entirely yourself like at the application level",
    "start": "538660",
    "end": "544839"
  },
  {
    "text": "so your application sends the son sequel down to two different systems and the",
    "start": "544839",
    "end": "550660"
  },
  {
    "text": "second way here is trigger based replication solutions and trigger base",
    "start": "550660",
    "end": "556889"
  },
  {
    "text": "the the earliest production replication solutions for Postgres which were well",
    "start": "556889",
    "end": "565089"
  },
  {
    "text": "over a decade ago we're trigger based solutions so these have been around for a long time now you",
    "start": "565089",
    "end": "571449"
  },
  {
    "text": "might be tempted to think since this is the original way of doing replication and Postgres and it's the oldest that it",
    "start": "571449",
    "end": "577540"
  },
  {
    "text": "would be obsolete but that's not the case so like even within this last year I've talked to customers in particular",
    "start": "577540",
    "end": "584079"
  },
  {
    "text": "like what comes to mind as a couple on our retail side who have been doing migrations from their existing platforms",
    "start": "584079",
    "end": "591490"
  },
  {
    "text": "over to Postgres and it made what made the most sense for them was in spite of",
    "start": "591490",
    "end": "597040"
  },
  {
    "text": "like the complexity and the difficulty of it for them to completely manage the",
    "start": "597040",
    "end": "602290"
  },
  {
    "text": "replication themselves so they they you know even within the past year I'm working with people and that's and",
    "start": "602290",
    "end": "609370"
  },
  {
    "text": "that's what made the most sense for them and trigger based solutions are absolutely still relevant one of I think",
    "start": "609370",
    "end": "616060"
  },
  {
    "text": "the most obvious use cases is for older versions of Postgres because with trigger based solutions you can work on",
    "start": "616060",
    "end": "622029"
  },
  {
    "text": "versions of Postgres that are over ten years old where that and that is the only solution that works there there are",
    "start": "622029",
    "end": "630550"
  },
  {
    "text": "however some drawbacks so as I was kind of alluding to a moment ago one of the drawback of sequel based replication",
    "start": "630550",
    "end": "637060"
  },
  {
    "text": "is that is that you really have the full responsibility for this so it's not",
    "start": "637060",
    "end": "642220"
  },
  {
    "text": "trivial there are like a lot of corner cases and edge cases that you need to take any consideration it is there there",
    "start": "642220",
    "end": "649120"
  },
  {
    "text": "are some advantages to it but you have full responsibility for it and the maintenance the monitoring everything",
    "start": "649120",
    "end": "655980"
  },
  {
    "text": "the trigger based solutions now the trigger based solutions have been around for the longest in Postgres there",
    "start": "655980",
    "end": "662980"
  },
  {
    "text": "they're probably the most well understood and I think it's pretty",
    "start": "662980",
    "end": "668230"
  },
  {
    "text": "widely acknowledged that there is a pretty significant overhead that comes along with trigger based replication",
    "start": "668230",
    "end": "674050"
  },
  {
    "text": "solutions in Postgres so the sequel",
    "start": "674050",
    "end": "679900"
  },
  {
    "text": "based replication pattern yes and so it's the thing about sequel based",
    "start": "679900",
    "end": "686050"
  },
  {
    "text": "replication in Postgres and I think the most important thing is that the the",
    "start": "686050",
    "end": "691620"
  },
  {
    "text": "downsides that I'm talking about here are not something that you can just change some kind of a configuration",
    "start": "691620",
    "end": "698200"
  },
  {
    "text": "parameter and tune and that makes them better because they're really inherent",
    "start": "698200",
    "end": "703240"
  },
  {
    "text": "to like the architecture and the design right",
    "start": "703240",
    "end": "707400"
  },
  {
    "text": "the complexity that you have to manage the write amplification that happens",
    "start": "711940",
    "end": "718300"
  },
  {
    "text": "that's just inherent to how it's done you have to do that you have to write you know with a trigger based solution you have to do these you have to",
    "start": "718300",
    "end": "724120"
  },
  {
    "text": "maintain an extra set of tables there's there's no way to solve that like inside",
    "start": "724120",
    "end": "730180"
  },
  {
    "text": "of that architecture now the post crust community knows that and the post crust",
    "start": "730180",
    "end": "736660"
  },
  {
    "text": "communities answer to that is actually something that a lot of databases do",
    "start": "736660",
    "end": "742330"
  },
  {
    "start": "740000",
    "end": "810000"
  },
  {
    "text": "which brings us to our next model which is physical or application so the idea",
    "start": "742330",
    "end": "748270"
  },
  {
    "text": "behind physical replication alright so this will probably be kind of repeat for",
    "start": "748270",
    "end": "753340"
  },
  {
    "text": "some of for some of you but yeah the basic idea behind physical replication is that what you end up with at the end",
    "start": "753340",
    "end": "758830"
  },
  {
    "text": "of the day is something very close to what you would get if you just literally copied the files from one server to",
    "start": "758830",
    "end": "764860"
  },
  {
    "text": "another I mean that's that's almost what it would look like now this is Postgres",
    "start": "764860",
    "end": "770280"
  },
  {
    "text": "Oracle's like this my sequel is not like this on RDS to be clear if you say but",
    "start": "770280",
    "end": "776410"
  },
  {
    "text": "for our purposes that's what this is by the way do you recognize the screenshot you probably do right yes in our labs in",
    "start": "776410",
    "end": "784870"
  },
  {
    "text": "this class we have that tool up so you were able to see that so yeah bit for",
    "start": "784870",
    "end": "791080"
  },
  {
    "text": "bit and this does this is page inspect I think we were able to look at that",
    "start": "791080",
    "end": "796870"
  },
  {
    "text": "yesterday in the lab so you guys have seen this before and I don't need to dig into it's really awesome I think it's 10 5 and up is",
    "start": "796870",
    "end": "803710"
  },
  {
    "text": "where you can get Postgres on RDS so that's really exciting so physical",
    "start": "803710",
    "end": "810610"
  },
  {
    "start": "810000",
    "end": "870000"
  },
  {
    "text": "replication and RDS there's actually I think it's worth mentioning multi a-z",
    "start": "810610",
    "end": "816370"
  },
  {
    "text": "here as well because multi AZ is another form of physical replication so multi AZ and read replicas these are your two",
    "start": "816370",
    "end": "822390"
  },
  {
    "text": "these are your two two forms of physical replication and post-arrest and physical",
    "start": "822390",
    "end": "829540"
  },
  {
    "text": "replication it solves the efficiency problem right it solves you no longer",
    "start": "829540",
    "end": "834580"
  },
  {
    "text": "have all that extra overhead of maintaining double copies it also solves the problem with the complexity of",
    "start": "834580",
    "end": "839860"
  },
  {
    "text": "managing it entirely yourself however there are still some downsides to it",
    "start": "839860",
    "end": "845020"
  },
  {
    "text": "which is that first of all with physical replication you can't replicate just",
    "start": "845020",
    "end": "850750"
  },
  {
    "text": "like one table or one schema right you only can replicate the entire database you can't you can't do different",
    "start": "850750",
    "end": "857830"
  },
  {
    "text": "versions you can't go across versions and the other thing is you cannot it's read-only",
    "start": "857830",
    "end": "863680"
  },
  {
    "text": "you can't create additional tables in the copy the copy is gonna be the same",
    "start": "863680",
    "end": "869410"
  },
  {
    "text": "so so we've solved the problems that we",
    "start": "869410",
    "end": "874630"
  },
  {
    "text": "had with sequel based replication however in the process of solving them we lost all of that flexibility that we",
    "start": "874630",
    "end": "880300"
  },
  {
    "text": "had so what is our answer to this the Postgres community knows this of course",
    "start": "880300",
    "end": "887380"
  },
  {
    "text": "and I would say kind of the that this is sort of an area that's been really thoroughly explored within kind of the",
    "start": "887380",
    "end": "894190"
  },
  {
    "text": "relational database field as well over the last decades so the answer to this",
    "start": "894190",
    "end": "901240"
  },
  {
    "text": "of course and this has been work something that the Postgres community has worked on for a long time this is",
    "start": "901240",
    "end": "906700"
  },
  {
    "text": "not something new however before I kind of dive into talking about logical replication what I'm actually going to",
    "start": "906700",
    "end": "912700"
  },
  {
    "text": "do is step back and it start at the bottom and kind of build up and look at how it works so the first thing that that you need",
    "start": "912700",
    "end": "921520"
  },
  {
    "start": "920000",
    "end": "987000"
  },
  {
    "text": "and the first thing where it all starts is the right ahead log and we've been we've talked about this a whole bunch",
    "start": "921520",
    "end": "926890"
  },
  {
    "text": "this week so you have the basic idea behind it by the way that LS walder command you can actually list out your",
    "start": "926890",
    "end": "934120"
  },
  {
    "text": "list of wall files that works in RDS that's it so you do have like again like",
    "start": "934120",
    "end": "939310"
  },
  {
    "text": "you have this level of probably more transparency than a lot of then a lot of people using RDS realize of how much",
    "start": "939310",
    "end": "945970"
  },
  {
    "text": "they can actually they themselves can see into the internal guts of the engine so I won't stay here for a long you guys",
    "start": "945970",
    "end": "953709"
  },
  {
    "text": "know what a wall log is so where you're putting your changes in now that's",
    "start": "953709",
    "end": "959410"
  },
  {
    "text": "that's like going to be the foundational thing that's you remember that like the",
    "start": "959410",
    "end": "964839"
  },
  {
    "text": "thing that gets us out of the trigger based solution the this this is the thing that gets us out of that every",
    "start": "964839",
    "end": "972010"
  },
  {
    "text": "database has some concept like this whether it's called a redo whether it's called a journal",
    "start": "972010",
    "end": "978329"
  },
  {
    "text": "this is kind of fundamentally this is the the like the missing piece of the puzzle this is the thing that we need to",
    "start": "978329",
    "end": "983670"
  },
  {
    "text": "avoid all the extra overhead so this is what we need to build on the next thing in Postgres which is sort of the next",
    "start": "983670",
    "end": "991230"
  },
  {
    "start": "987000",
    "end": "1135000"
  },
  {
    "text": "building block that we need to have logical replication is the idea of of replica is it's this little process",
    "start": "991230",
    "end": "998759"
  },
  {
    "text": "called the wall sender so this was added in Postgres 9/4 and the idea was to have",
    "start": "998759",
    "end": "1006980"
  },
  {
    "text": "a process which could sit there okay the problem that you have with the right ahead log all right the earliest",
    "start": "1006980",
    "end": "1013189"
  },
  {
    "text": "versions of Postgres physical replication were just built on this this was the original version but the problem",
    "start": "1013189",
    "end": "1020480"
  },
  {
    "text": "that you had was that you couldn't copy that wall log over to your far server until you were finished with it and",
    "start": "1020480",
    "end": "1026058"
  },
  {
    "text": "started on the next one so what that means is so you can't just copy it over right because if you copy a partial file",
    "start": "1026059",
    "end": "1032538"
  },
  {
    "text": "now what are you gonna do you know he doesn't have the whole thing when he starts trying to read it on the other",
    "start": "1032539",
    "end": "1037970"
  },
  {
    "text": "side and replay the changes so what that means is the old kind of the original",
    "start": "1037970",
    "end": "1043220"
  },
  {
    "text": "physical replication solutions for Postgres you know they would they had they just had to wait before they could",
    "start": "1043220",
    "end": "1049850"
  },
  {
    "text": "send the changes across and what this did with this this solved that problem so we just added a process that could",
    "start": "1049850",
    "end": "1056360"
  },
  {
    "text": "read those changes as they went into the wall log and immediately send them over the network to the farside and that's",
    "start": "1056360",
    "end": "1063559"
  },
  {
    "text": "that works beautifully and that with that little tiny change in Postgres the",
    "start": "1063559",
    "end": "1069409"
  },
  {
    "text": "next iteration of physical replication and Postgres was able to eliminate the",
    "start": "1069409",
    "end": "1074990"
  },
  {
    "text": "lag of the replicas so in this configuration right here Postgres can already now maintain a",
    "start": "1074990",
    "end": "1082610"
  },
  {
    "text": "physical copy which doesn't have any lag at all however you still have a problem and the problem now is like what if your",
    "start": "1082610",
    "end": "1090200"
  },
  {
    "text": "physical replicas you have a problem and it goes offline for a while or maybe it",
    "start": "1090200",
    "end": "1096460"
  },
  {
    "text": "pauses yeah let's say you have a problem it goes offline for a while well in the meantime",
    "start": "1096460",
    "end": "1102730"
  },
  {
    "text": "over here on the primary database you know you have vacuum you know you're you're working along and he finishes up",
    "start": "1102730",
    "end": "1109250"
  },
  {
    "text": "and he kind of Rises I don't need these old wall logs anymore so I'm and clean those up and send them to the backup system well then you bring your",
    "start": "1109250",
    "end": "1116470"
  },
  {
    "text": "standby backup and your standby you're your wall sender goes to look for the",
    "start": "1116470",
    "end": "1121810"
  },
  {
    "text": "changes sent across but now they're gone so now you're back in the situation where your stamp eye needs to pull the logs from the backup the old-fashioned",
    "start": "1121810",
    "end": "1128740"
  },
  {
    "text": "way start applying them from there which is which is back in the sort of slow inefficient place for rear before",
    "start": "1128740",
    "end": "1134770"
  },
  {
    "text": "Postgres is answer - that was the idea of sorry up there on the top replication",
    "start": "1134770",
    "end": "1141730"
  },
  {
    "start": "1135000",
    "end": "1225000"
  },
  {
    "text": "slots so the replication slots is just a little bit of metadata inside of the",
    "start": "1141730",
    "end": "1147280"
  },
  {
    "text": "catalog and and nothing more than that and all that is is it just a little bit of metadata that says hey somebody's",
    "start": "1147280",
    "end": "1152470"
  },
  {
    "text": "reading this wall data and so don't delete it yet that's all it is and again",
    "start": "1152470",
    "end": "1159370"
  },
  {
    "text": "that solves the problem now you do need to be careful with replication slots it",
    "start": "1159370",
    "end": "1164410"
  },
  {
    "text": "is something to watch because if if you have some replicas that never comes back",
    "start": "1164410",
    "end": "1169750"
  },
  {
    "text": "then you just you can never clean up wall and you start accumulating disk space so that's that is again that's",
    "start": "1169750",
    "end": "1175330"
  },
  {
    "text": "something you want to watch which is one of the reasons we have a happiness hint around alarming on your disk space",
    "start": "1175330",
    "end": "1181030"
  },
  {
    "text": "because that will that will catch these sorts of things before you fill the disk",
    "start": "1181030",
    "end": "1186360"
  },
  {
    "text": "so what's the next layer on top now that we have this wall sender the and we have",
    "start": "1186360",
    "end": "1193870"
  },
  {
    "text": "replication slots I now actually we're in a really good place with with",
    "start": "1193870",
    "end": "1200200"
  },
  {
    "text": "physical replication we have a great we have a great solution there but what if we can make that wall sender process a",
    "start": "1200200",
    "end": "1206890"
  },
  {
    "text": "little bit smarter what if we could take that wall sender process and the wall",
    "start": "1206890",
    "end": "1213250"
  },
  {
    "text": "center process instead of just blindly sending bits over the network what if it actually understood and could start to",
    "start": "1213250",
    "end": "1219880"
  },
  {
    "text": "start to interpret what it was reading in that wall log well that's the next",
    "start": "1219880",
    "end": "1226150"
  },
  {
    "start": "1225000",
    "end": "1424000"
  },
  {
    "text": "layer and that's exactly what Postgres did it again this is actually quite a while ago this is I think it's almost",
    "start": "1226150",
    "end": "1232660"
  },
  {
    "text": "been 10 years now since since version 9 for when they introduced this so logical",
    "start": "1232660",
    "end": "1239740"
  },
  {
    "text": "decoding was just a big upgrade to the brains of the wall center process and it means is that the wall sender can now",
    "start": "1239740",
    "end": "1247280"
  },
  {
    "text": "interpret the data that's in the wall log it understands and what it does it actually it does kind of what this",
    "start": "1247280",
    "end": "1253850"
  },
  {
    "text": "picture is showing so the wall sender process in memory and then it can like",
    "start": "1253850",
    "end": "1259190"
  },
  {
    "text": "spill to disk if it needs to actually every time it sees a change keeps track of which transaction that change was a",
    "start": "1259190",
    "end": "1265520"
  },
  {
    "text": "part of and then it keeps track of the status of those transactions and you can see here you can look transaction number",
    "start": "1265520",
    "end": "1272600"
  },
  {
    "text": "three on the right now aborted it has a rollback at the bottom see the last",
    "start": "1272600",
    "end": "1277760"
  },
  {
    "text": "command there in the bottom has a letter R for rollback so what does a wall Center do he just throws that away he",
    "start": "1277760",
    "end": "1283340"
  },
  {
    "text": "doesn't need to do anything with that here transaction number two and the wall sender this is where all everything's",
    "start": "1283340",
    "end": "1290120"
  },
  {
    "text": "happening the wall center process you know and you can look you can do a PS on a process list and you can see the wall",
    "start": "1290120",
    "end": "1296179"
  },
  {
    "text": "center process there on on your database he's tracking transaction number two and",
    "start": "1296179",
    "end": "1302440"
  },
  {
    "text": "transaction number two commits well once he sees that commit he knows okay I",
    "start": "1302440",
    "end": "1307460"
  },
  {
    "text": "could send this out now so then he sends transaction two he goes to ship that",
    "start": "1307460",
    "end": "1312950"
  },
  {
    "text": "over the network and de send it to somebody but he doesn't just do that this this is where the Postgres",
    "start": "1312950",
    "end": "1319040"
  },
  {
    "text": "community to something that I think was very very helpful in clever and also very much in the style of Postgres",
    "start": "1319040",
    "end": "1325970"
  },
  {
    "text": "rather than just writing a little bit of code descended over the network they made it pluggable so you they made it so",
    "start": "1325970",
    "end": "1332870"
  },
  {
    "text": "that similar to how people can write extensions for Postgres they can also write what we call logical decoding",
    "start": "1332870",
    "end": "1340010"
  },
  {
    "text": "plug-ins for Postgres anybody can write one and that plug-in is the piece that sends it over the network so what that",
    "start": "1340010",
    "end": "1347450"
  },
  {
    "text": "means the implication of that is that if I'm building a service and for my",
    "start": "1347450",
    "end": "1352610"
  },
  {
    "text": "service I want to consume I want just all the changes happening in my database and maybe I want to have those as JSON",
    "start": "1352610",
    "end": "1358400"
  },
  {
    "text": "because that's that's you know based on my language choice and how I'm working with data that would be really easy for",
    "start": "1358400",
    "end": "1365210"
  },
  {
    "text": "me to code well that means I can just use the JSON plugin and I will get all those changes over the network centum",
    "start": "1365210",
    "end": "1370970"
  },
  {
    "text": "use JSON or maybe I'm sending this to a different downstream data warehouse or",
    "start": "1370970",
    "end": "1376580"
  },
  {
    "text": "data lake system and you that system understands sequel so how what if I have it be great for me if I",
    "start": "1376580",
    "end": "1382820"
  },
  {
    "text": "could have those changes come to me just as simple sequel statements like inserts and updates and deletes well the wall",
    "start": "1382820",
    "end": "1388400"
  },
  {
    "text": "sender can do that too you just use a slightly different plugin and all of those statements now come out a sequel",
    "start": "1388400",
    "end": "1393740"
  },
  {
    "text": "statements which can just be applied on my downstream system so those are called logical decoding plugins and they're",
    "start": "1393740",
    "end": "1400820"
  },
  {
    "text": "there's a number of them that we support an RDS and you can find a list in the docs for that so that's the wall sender",
    "start": "1400820",
    "end": "1411350"
  },
  {
    "text": "process with all of this in place we're now finally like in in a position to to",
    "start": "1411350",
    "end": "1419240"
  },
  {
    "text": "introduce the very top layer of the stack which is the idea which is really",
    "start": "1419240",
    "end": "1424340"
  },
  {
    "start": "1424000",
    "end": "1580000"
  },
  {
    "text": "what we call logical replication and Postgres which is the publication's and subscriptions but the one really",
    "start": "1424340",
    "end": "1432530"
  },
  {
    "text": "important takeaway from this slide here is that so this was introduced about a",
    "start": "1432530",
    "end": "1437660"
  },
  {
    "text": "year ago now in Postgres 10 and it was a really big deal when they announced it Postgres 10 logical replication it the",
    "start": "1437660",
    "end": "1444830"
  },
  {
    "text": "that big announcement in Postgres 10 was not like this massive development effort",
    "start": "1444830",
    "end": "1450049"
  },
  {
    "text": "with like thousands of lines of code that were all merged into Postgres 10 and shipped as a new feature it was",
    "start": "1450049",
    "end": "1455360"
  },
  {
    "text": "actually just like the very top layer on top of a bunch of infrastructure that",
    "start": "1455360",
    "end": "1460790"
  },
  {
    "text": "have been built like well over 10 well over 10 years that had been slowly but this is the way the Postgres community",
    "start": "1460790",
    "end": "1467390"
  },
  {
    "text": "tends to work that they tend to like iterate slowly across multiple major versions and even this week we've seen",
    "start": "1467390",
    "end": "1473690"
  },
  {
    "text": "that we saw that with weight events when I talked about those how like the first bit went into 9 6 and then the larger",
    "start": "1473690",
    "end": "1479720"
  },
  {
    "text": "block went into 10 and there's continued to work in the future we see that with partitioning the sort of basic the sort",
    "start": "1479720",
    "end": "1488480"
  },
  {
    "text": "of essential foundational pieces for partitioning again a number of them came into 10 you give tuple routing things",
    "start": "1488480",
    "end": "1495230"
  },
  {
    "text": "like that 11 got a whole bunch more like the hash the hash partitioning model the",
    "start": "1495230",
    "end": "1500840"
  },
  {
    "text": "ability of foreign keys and you push down on the indexes things like that so",
    "start": "1500840",
    "end": "1505910"
  },
  {
    "text": "you see this all over the place in Postgres or they they iterate across major versions",
    "start": "1505910",
    "end": "1512029"
  },
  {
    "text": "and get like a core that's really stable and continue to harden and stabilize",
    "start": "1512029",
    "end": "1518359"
  },
  {
    "text": "that core and then put these layers and on top of it and improve on it it",
    "start": "1518359",
    "end": "1524779"
  },
  {
    "text": "doesn't always make for the best marketing but it makes for a really really well engineered piece of software",
    "start": "1524779",
    "end": "1530899"
  },
  {
    "text": "so I'm I'm a fan of this I think it's I think it's a great model I would say",
    "start": "1530899",
    "end": "1537200"
  },
  {
    "text": "that the publication and subscriptions when they finally got around to doing that there were kind of three big things",
    "start": "1537200",
    "end": "1542450"
  },
  {
    "text": "that were left to do there well three big or small however you look at it it",
    "start": "1542450",
    "end": "1548570"
  },
  {
    "text": "was mainly what you had left what with all of the infrastructure in place the the streaming replication replication",
    "start": "1548570",
    "end": "1555619"
  },
  {
    "text": "slots were there the logical decoding piece was there all that we really had",
    "start": "1555619",
    "end": "1560629"
  },
  {
    "text": "left was just work out the exact sequel syntax work out a security model and",
    "start": "1560629",
    "end": "1567279"
  },
  {
    "text": "then work out you needed something on the apply side that was the last big",
    "start": "1567279",
    "end": "1572570"
  },
  {
    "text": "piece so something to actually receive the changes and apply those on the other end of the connection a lot of the other",
    "start": "1572570",
    "end": "1578749"
  },
  {
    "text": "stuff was already done so reviewing",
    "start": "1578749",
    "end": "1584229"
  },
  {
    "start": "1580000",
    "end": "1702000"
  },
  {
    "text": "rehashing we talked about physical replication read replicas are basically",
    "start": "1584229",
    "end": "1589700"
  },
  {
    "text": "built on the right ahead logins streaming replication and and then slots right DMS as well as a whole whole bunch",
    "start": "1589700",
    "end": "1602119"
  },
  {
    "text": "of third-party replication solutions are all based on logical decoding which we got in version 9 for and then the",
    "start": "1602119",
    "end": "1610249"
  },
  {
    "text": "standard Postgres what we think of and what we call logical replication and Postgres is built on the publication and",
    "start": "1610249",
    "end": "1618559"
  },
  {
    "text": "subscription syntax which is the top layer of of everything that i've shown here so logical replication in Postgres",
    "start": "1618559",
    "end": "1631749"
  },
  {
    "text": "this if you're looking for or if you're",
    "start": "1631749",
    "end": "1637729"
  },
  {
    "text": "working with people who are looking for a logical replication and Postgres it makes all the sense in the world to",
    "start": "1637729",
    "end": "1643519"
  },
  {
    "text": "start here this it's it's stable it's solid it's built into core Postgres you don't need to",
    "start": "1643519",
    "end": "1649660"
  },
  {
    "text": "install an extension or do anything and this gives you a lot of what you need I would also say probably there's a lot of",
    "start": "1649660",
    "end": "1656620"
  },
  {
    "text": "development effort coalescing around this since it's in core right but there is kind of one other important thing",
    "start": "1656620",
    "end": "1662860"
  },
  {
    "text": "worth mentioning which is that in addition to this we also support an extension called PG illogical so PG",
    "start": "1662860",
    "end": "1670960"
  },
  {
    "text": "logical is it just has a couple of key",
    "start": "1670960",
    "end": "1677559"
  },
  {
    "text": "features that could be useful depending on what somebody's looking for in particular I would say sort of the one",
    "start": "1677559",
    "end": "1683620"
  },
  {
    "text": "that stands out to me the most is if you need to support older versions of Postgres before version 10 you have to",
    "start": "1683620",
    "end": "1691690"
  },
  {
    "text": "use PG logical for that so and I'm yep so that that would be sort of a key thing so that's logical replication",
    "start": "1691690",
    "end": "1704260"
  },
  {
    "start": "1702000",
    "end": "1856000"
  },
  {
    "text": "alright those are that was where the slides that I had pulled together for that and now that we've talked about",
    "start": "1704260",
    "end": "1718840"
  },
  {
    "text": "getting your data into Postgres the last thing is to talk about what to do with",
    "start": "1718840",
    "end": "1728169"
  },
  {
    "text": "your data now that you have it in so this brings us so I'm gonna spend the",
    "start": "1728169",
    "end": "1734830"
  },
  {
    "text": "rest of our time today just talking about a couple other migration related",
    "start": "1734830",
    "end": "1740350"
  },
  {
    "text": "topics things that so this is a well",
    "start": "1740350",
    "end": "1750280"
  },
  {
    "text": "first I've got a couple slides here just talking about motivations for migration so this is kind of this is kind of",
    "start": "1750280",
    "end": "1756070"
  },
  {
    "text": "talking through a couple of the motivators and okay and this is helpful I the phases that people go through",
    "start": "1756070",
    "end": "1761650"
  },
  {
    "text": "migration is not just like I copy my data from one database to another like you really need to have a and we should",
    "start": "1761650",
    "end": "1768130"
  },
  {
    "text": "expect people to have sort of a phased plan to migration and this is walking",
    "start": "1768130",
    "end": "1774910"
  },
  {
    "text": "through some of the major phases that you would do migration breakdown this is a breakdown of what this is kind",
    "start": "1774910",
    "end": "1781840"
  },
  {
    "text": "of showing is that the like the production cut over like that last phase that you think of is probably from a",
    "start": "1781840",
    "end": "1789520"
  },
  {
    "text": "timing perspective like where you spend the least amount of energy and effort it's it's an important step but it's",
    "start": "1789520",
    "end": "1796090"
  },
  {
    "text": "just a little small one at the end the bulk of your time actually goes into a couple of other things testing being a",
    "start": "1796090",
    "end": "1802690"
  },
  {
    "text": "huge chunk right but then schema and application migration also being a big",
    "start": "1802690",
    "end": "1808630"
  },
  {
    "text": "role so this is just kind of level setting and getting expectations set ahead of time it's when you look at",
    "start": "1808630",
    "end": "1820330"
  },
  {
    "text": "where you end up spending your time another the one sort of other important thing that's worth pointing out is",
    "start": "1820330",
    "end": "1826150"
  },
  {
    "text": "really the database piece tends to be the easiest piece to migrate so that's actually and I bet you guys would relate",
    "start": "1826150",
    "end": "1833410"
  },
  {
    "text": "to this a lot of the questions that you're going to get relate to migration if anything they're to be often sequel related you know like we'll get some",
    "start": "1833410",
    "end": "1840010"
  },
  {
    "text": "questions about things like tablespaces and schemas but for the the place where people are actually spending all of",
    "start": "1840010",
    "end": "1846130"
  },
  {
    "text": "their time is they're doing an awful lot of work on on their application side to",
    "start": "1846130",
    "end": "1852580"
  },
  {
    "text": "try to get their application to work well with a different database all right",
    "start": "1852580",
    "end": "1858010"
  },
  {
    "start": "1856000",
    "end": "2024000"
  },
  {
    "text": "the part that I'm most interested in is common mistakes and this is going to get into just things that things that people",
    "start": "1858010",
    "end": "1864550"
  },
  {
    "text": "often run into that are different on Postgres from other platforms so we",
    "start": "1864550",
    "end": "1873400"
  },
  {
    "text": "don't need to talk about why first and first of all kind of real simple one is just sort of the system defaults in",
    "start": "1873400",
    "end": "1879910"
  },
  {
    "text": "general and I it's not uncommon for people to sort of have something that",
    "start": "1879910",
    "end": "1886150"
  },
  {
    "text": "they were thinking from a different database system and then just try to do the same thing in Postgres and you don't",
    "start": "1886150",
    "end": "1892240"
  },
  {
    "text": "want to do that right Postgres is its own database it's different and it's",
    "start": "1892240",
    "end": "1897570"
  },
  {
    "text": "it's generally better yeah it's",
    "start": "1897570",
    "end": "1903430"
  },
  {
    "text": "generally better to sort of look at the way things are done in Post kosis learn Postgres from scratch and there's sort",
    "start": "1903430",
    "end": "1909610"
  },
  {
    "text": "of a key thing the key thing is that you should always go with the Postgres or the RDS Postgres defaults unless you",
    "start": "1909610",
    "end": "1917380"
  },
  {
    "text": "have a solid reason not to like what's the common thread in both of these is that somebody was choosing a default",
    "start": "1917380",
    "end": "1924400"
  },
  {
    "text": "because that was the default on the other system so we've we have carefully tuned the default values in RDS Postgres",
    "start": "1924400",
    "end": "1932380"
  },
  {
    "text": "to be the best of faults for Postgres so when you have a stab",
    "start": "1932380",
    "end": "1937630"
  },
  {
    "text": "if in side of your organization you established well you know it going to",
    "start": "1937630",
    "end": "1942820"
  },
  {
    "text": "60% of memory is the right practice for our our default shared buffers in oracle",
    "start": "1942820",
    "end": "1948900"
  },
  {
    "text": "you you should not take your what you figured out for your oracle systems and",
    "start": "1948900",
    "end": "1954640"
  },
  {
    "text": "just port that over as configuration settings for Postgres you really want to start from the defaults and then work",
    "start": "1954640",
    "end": "1961390"
  },
  {
    "text": "out from there so I could totally this is actually a very understandable thing",
    "start": "1961390",
    "end": "1968320"
  },
  {
    "text": "like when you've you know because because you did this with Oracle right you started with the oracle defaults but",
    "start": "1968320",
    "end": "1973750"
  },
  {
    "text": "then you spent years running your application on oracle and over those years i've done this to you you sort of",
    "start": "1973750",
    "end": "1979600"
  },
  {
    "text": "learn and you know this is how my application behaves and because of my particular application i have learned",
    "start": "1979600",
    "end": "1986650"
  },
  {
    "text": "that i can significantly improve the default settings in the database for",
    "start": "1986650",
    "end": "1991990"
  },
  {
    "text": "oracle and so it's very understandable to sort of just think that like well i already figured all that out that",
    "start": "1991990",
    "end": "1997540"
  },
  {
    "text": "knowledge would apply to Postgres too but it doesn't it does not apply the same to Postgres you need to start start",
    "start": "1997540",
    "end": "2003960"
  },
  {
    "text": "with the defaults and work from there and Postgres and prove out that your changes to the defaults are the right",
    "start": "2003960",
    "end": "2009480"
  },
  {
    "text": "thing that's that's looking at block size which is another example in",
    "start": "2009480",
    "end": "2016230"
  },
  {
    "text": "Postgres of course you can't set the block size in RDS Postgres but you can if you're managing on your on your own",
    "start": "2016230",
    "end": "2023820"
  },
  {
    "text": "system so outside of system tuning let's look at some some applications some more",
    "start": "2023820",
    "end": "2029970"
  },
  {
    "start": "2024000",
    "end": "2241000"
  },
  {
    "text": "application level specific things the first thing is case uppercase and lowercase so if you work on oracle the",
    "start": "2029970",
    "end": "2038870"
  },
  {
    "text": "thing to note here so i'm looking at a table and yeah i remember this",
    "start": "2038870",
    "end": "2045250"
  },
  {
    "text": "is that everything is uppercase an Oracle right so there's no quotes here",
    "start": "2045250",
    "end": "2051730"
  },
  {
    "text": "and these are all upper cases while there's no quotes there so that's an Oracle in Postgres if you want things to",
    "start": "2051730",
    "end": "2058868"
  },
  {
    "text": "be an uppercase you can do that but you have to double quote it and that's how you would get that's how you get",
    "start": "2058869",
    "end": "2064510"
  },
  {
    "text": "uppercase so if we took this schema here and we migrated this schema over to Postgres okay now this is what it would",
    "start": "2064510",
    "end": "2072310"
  },
  {
    "text": "look like by default right after name M name and first name middle name last name the same schema but if we were to",
    "start": "2072310",
    "end": "2080560"
  },
  {
    "text": "bring that over as was and there are migration tools some migration tools that do this you notice now I have to",
    "start": "2080560",
    "end": "2086679"
  },
  {
    "text": "double quote in order to get at the upper case whereas previously I didn't have to well I was lower case I didn't",
    "start": "2086679",
    "end": "2093340"
  },
  {
    "text": "need the double quotes the other thing is in addition to having double quote the table name I have to double quote",
    "start": "2093340",
    "end": "2098980"
  },
  {
    "text": "every single column name if I want to run a query off of there right that gets",
    "start": "2098980",
    "end": "2105609"
  },
  {
    "text": "to be really really annoying after a while if you're having to constantly do",
    "start": "2105609",
    "end": "2113170"
  },
  {
    "text": "that so the next so that's that's folding in that's case the next area that will jump into table spaces",
    "start": "2113170",
    "end": "2120300"
  },
  {
    "text": "okay so table spaces in Postgres the",
    "start": "2120300",
    "end": "2126369"
  },
  {
    "text": "purpose of table spaces in Postgres is really at the physical layer right not the logical layer it's it's there so",
    "start": "2126369",
    "end": "2134800"
  },
  {
    "text": "that you can control where files are laid out and the reason that that is important is especially if if you built",
    "start": "2134800",
    "end": "2142330"
  },
  {
    "text": "a server from Co yourself so you and you're putting hard drives in that server and then you're putting your",
    "start": "2142330",
    "end": "2147609"
  },
  {
    "text": "Postgres database on that server you want to control sort of how data is spread across the different disks in the",
    "start": "2147609",
    "end": "2154000"
  },
  {
    "text": "box so Postgres gives you table spaces in order to to be able to control the",
    "start": "2154000",
    "end": "2161680"
  },
  {
    "text": "layout of your things so that you can have used table spaces to map your files to different areas of storage and it's",
    "start": "2161680",
    "end": "2167770"
  },
  {
    "text": "very much related to the physical sort of storage architecture in Oracle same",
    "start": "2167770",
    "end": "2174849"
  },
  {
    "text": "kind of concept Oracle as table spaces as well same history same general purpose now in RDS okay",
    "start": "2174849",
    "end": "2186180"
  },
  {
    "text": "this is absolutely a true statement that we have on this slide here which is the",
    "start": "2186180",
    "end": "2191260"
  },
  {
    "text": "idea that there's okay it's not like schemas I think that's sort of the important thing is that you don't use",
    "start": "2191260",
    "end": "2197410"
  },
  {
    "text": "tablespaces for organization to like organize your objects that's not the",
    "start": "2197410",
    "end": "2203050"
  },
  {
    "text": "purpose of them schemas are for that schemas are for organizing objects and separating things but not table spaces",
    "start": "2203050",
    "end": "2210030"
  },
  {
    "text": "so yeah so there's no real benefit unless you spend multiple mount points",
    "start": "2210030",
    "end": "2215650"
  },
  {
    "text": "and an RDS there in particular there's really no benefit now we do support tables we the tablespace syntax will",
    "start": "2215650",
    "end": "2223150"
  },
  {
    "text": "work on RDS if you take say create tablespace in RDS in the background it's",
    "start": "2223150",
    "end": "2228880"
  },
  {
    "text": "just ignoring that because it's all stored in the same place so it doesn't actually do anything to use different",
    "start": "2228880",
    "end": "2234610"
  },
  {
    "text": "table spaces it won't break but it doesn't actually do anything yeah it",
    "start": "2234610",
    "end": "2242200"
  },
  {
    "start": "2241000",
    "end": "2457000"
  },
  {
    "text": "does yeah makes things a bit more cumbersome for using table spaces and",
    "start": "2242200",
    "end": "2247600"
  },
  {
    "text": "Postgres on ec2 okay has anybody ever heard of dual and Oracle you've heard of",
    "start": "2247600",
    "end": "2253750"
  },
  {
    "text": "it have you okay Oracle has this thing called a dual",
    "start": "2253750",
    "end": "2259150"
  },
  {
    "text": "table and all it is is like a basically an empty table with a single row and the",
    "start": "2259150",
    "end": "2264250"
  },
  {
    "text": "reason it's there is because in Oracle you cannot have a sequel statement",
    "start": "2264250",
    "end": "2269650"
  },
  {
    "text": "without a from clause you always must have from so what if you just want it like this and this is the perfect",
    "start": "2269650",
    "end": "2275740"
  },
  {
    "text": "example I just want to get the current time like the dates that's what this tells me well how do you do that in",
    "start": "2275740",
    "end": "2282220"
  },
  {
    "text": "Oracle is you have to have something so they made this table called dual which is I don't know where that name came",
    "start": "2282220",
    "end": "2287980"
  },
  {
    "text": "from I don't remember anymore probably heard the story once and that just",
    "start": "2287980",
    "end": "2294580"
  },
  {
    "text": "became a thing and it never went away and so like this is one of those weird things like Oracle culture like",
    "start": "2294580",
    "end": "2301090"
  },
  {
    "text": "everybody who's ever worked on Oracle knows about dual because it's like you have to use it all the time if you want",
    "start": "2301090",
    "end": "2307030"
  },
  {
    "text": "to run a call a function get the current date and time like there's all these things",
    "start": "2307030",
    "end": "2312400"
  },
  {
    "text": "so in Postgres you don't need a firm claws you've seen me do this this week a whole bunch of times so you don't need that the thing to look out for is that",
    "start": "2312400",
    "end": "2319390"
  },
  {
    "text": "is yet what they say here don't mock a dual table some people it doesn't mean",
    "start": "2319390",
    "end": "2324940"
  },
  {
    "text": "don't make fun of the dual table that's not you can make fun of the dual table that's completely okay what it means is to mock it up like to",
    "start": "2324940",
    "end": "2333430"
  },
  {
    "text": "make a to create a table in Postgres called dual so that your queries can",
    "start": "2333430",
    "end": "2338500"
  },
  {
    "text": "come across without having to change them you go change your queries is the point there all right exception handling",
    "start": "2338500",
    "end": "2349980"
  },
  {
    "text": "so what is accept what do what it what are exceptions exceptions look like this",
    "start": "2349980",
    "end": "2355559"
  },
  {
    "text": "it's it's in your procedural code so in your triggers and your functions or in",
    "start": "2355559",
    "end": "2361240"
  },
  {
    "text": "your just blocks of PL PG SQL he or other languages as well could have",
    "start": "2361240",
    "end": "2366549"
  },
  {
    "text": "something like this you can have an exception handler where if it throws an error the exception handler handles it",
    "start": "2366549",
    "end": "2373410"
  },
  {
    "text": "this is a very common thing to do in Oracle and this is the thing this bottom",
    "start": "2373410",
    "end": "2380260"
  },
  {
    "text": "point is the important one that there's a lot of tools SCT is one Amazon's schema conversion tool that will just",
    "start": "2380260",
    "end": "2386980"
  },
  {
    "text": "take your oracle p ovg SQL code and just try to translate that directly to Postgres and it's just going to be very",
    "start": "2386980",
    "end": "2392319"
  },
  {
    "text": "literal about bringing stuff across they generally don't well they can't factor out exceptions exception handling and",
    "start": "2392319",
    "end": "2399309"
  },
  {
    "text": "Postgres is more expensive than it is it's just not optimized as much as it is",
    "start": "2399309",
    "end": "2404710"
  },
  {
    "text": "and PL PG SQL I'm sorry in Oracle's PL sequel so in something that you want to",
    "start": "2404710",
    "end": "2411069"
  },
  {
    "text": "keep an eye on in Postgres because and",
    "start": "2411069",
    "end": "2416529"
  },
  {
    "text": "this is one of the reasons because Postgres is going to use sub transactions to handle these so every",
    "start": "2416529",
    "end": "2423910"
  },
  {
    "text": "time that you have an exception handler in your code Postgres has to create a",
    "start": "2423910",
    "end": "2429099"
  },
  {
    "text": "sub transaction to be able to roll back the sequel inside of there that's just how it's done that's yeah it's just it's",
    "start": "2429099",
    "end": "2436299"
  },
  {
    "text": "not optimized further than that that can be expensive I don't know if you remember when I was describing my",
    "start": "2436299",
    "end": "2442089"
  },
  {
    "text": "benchmark that I did to try to get into a transaction ID wrap around I was using I was actually using an",
    "start": "2442089",
    "end": "2448809"
  },
  {
    "text": "exception block just like this to do that and running as fast as I could to see if I could get faster than vacuum",
    "start": "2448809",
    "end": "2456900"
  },
  {
    "start": "2457000",
    "end": "2659000"
  },
  {
    "text": "all right differences here fine tuning queries hints are another sort of",
    "start": "2460529",
    "end": "2468819"
  },
  {
    "text": "difference that come up all the time between Oracle and Postgres we do have a",
    "start": "2468819",
    "end": "2474640"
  },
  {
    "text": "call-out up to those on the slide so you guys know PG hit plan there is an extension that gives you hints and",
    "start": "2474640",
    "end": "2481720"
  },
  {
    "text": "Postgres i've seen lots of people using that so I think that's that's fine but",
    "start": "2481720",
    "end": "2488829"
  },
  {
    "text": "it's not part of the the core code base",
    "start": "2488829",
    "end": "2493710"
  },
  {
    "text": "you definitely I would say you",
    "start": "2494130",
    "end": "2500529"
  },
  {
    "text": "definitely don't want it to bring all your hints over from Oracle to Postgres and you know you probably don't want to",
    "start": "2500529",
    "end": "2508029"
  },
  {
    "text": "bring any is the thing because given the",
    "start": "2508029",
    "end": "2514539"
  },
  {
    "text": "differences in the MVCC model I you know we talked about that so",
    "start": "2514539",
    "end": "2520900"
  },
  {
    "text": "Postgres is that that is super unique I don't know of any other databases that",
    "start": "2520900",
    "end": "2526539"
  },
  {
    "text": "that do the like multiple copies of rows like Postgres does not any other major",
    "start": "2526539",
    "end": "2531579"
  },
  {
    "text": "ones like that are you know sort of in wide broad use right most of the other ones use different models to do MVC see",
    "start": "2531579",
    "end": "2538380"
  },
  {
    "text": "when such a fundamental thing is different that's gonna impact I think",
    "start": "2538380",
    "end": "2544630"
  },
  {
    "text": "you have to throw all your assumptions about performance out the window when you migrate from one system to another right so even if you knew for sure that",
    "start": "2544630",
    "end": "2553329"
  },
  {
    "text": "on Oracle I always should use this particular index to run this query on",
    "start": "2553329",
    "end": "2560339"
  },
  {
    "text": "Postgres usually you shouldn't start with the same index start with no hints",
    "start": "2560339",
    "end": "2567819"
  },
  {
    "text": "just like you did on Oracle hopefully most people you start without the hints and the hints are basically something to",
    "start": "2567819",
    "end": "2574989"
  },
  {
    "text": "cover a deficiency in the optimizer that's what they exist for and you",
    "start": "2574989",
    "end": "2580480"
  },
  {
    "text": "you're gonna find every optimizer has deficiencies every there's always sort of circumstances where the optimizer",
    "start": "2580480",
    "end": "2586869"
  },
  {
    "text": "can't get the best plan and you're able to find one that's better but Postgres is optimizer is different",
    "start": "2586869",
    "end": "2593020"
  },
  {
    "text": "than Oracle's they're going to be optimized in tune differently and you're gonna find different holes in different",
    "start": "2593020",
    "end": "2598150"
  },
  {
    "text": "spots that need to be fixed so so that's",
    "start": "2598150",
    "end": "2603550"
  },
  {
    "text": "that's the slide on hints what do we have here I didn't index Postgres has a lot more index types so that's worth",
    "start": "2603550",
    "end": "2610300"
  },
  {
    "text": "pointing out Postgres yes this is",
    "start": "2610300",
    "end": "2616930"
  },
  {
    "text": "another really cool one in fact this is that I don't know into the gen trigram ops if you remember from Tuesday I kind",
    "start": "2616930",
    "end": "2623140"
  },
  {
    "text": "of introduced that and this is an example of something you can't do in Oracle by the way this is just kind of",
    "start": "2623140",
    "end": "2629320"
  },
  {
    "text": "cool tricks that Postgres has where they're doing a like a search with a percent sign on the front and the F on",
    "start": "2629320",
    "end": "2636369"
  },
  {
    "text": "the front and the end of that query before and after it and Postgres is",
    "start": "2636369",
    "end": "2641859"
  },
  {
    "text": "actually able to use this gin index to process that query Oracle has nothing it's not able to take that kind of a",
    "start": "2641859",
    "end": "2648640"
  },
  {
    "text": "query and use an index on it you'd have to use something a lot more sophisticated to get a similar type of",
    "start": "2648640",
    "end": "2656319"
  },
  {
    "text": "thing out of Oracle okay next up we talk",
    "start": "2656319",
    "end": "2662740"
  },
  {
    "start": "2659000",
    "end": "2827000"
  },
  {
    "text": "about native features and Postgres and this is true it is a lot more feature-rich or it has a lot of native",
    "start": "2662740",
    "end": "2669339"
  },
  {
    "text": "feature rich for developers in particular so a lot more stored procedures stored procedure languages",
    "start": "2669339",
    "end": "2676089"
  },
  {
    "text": "which are available it has things things like foreign data wrappers certainly a lot more data type support that's",
    "start": "2676089",
    "end": "2682270"
  },
  {
    "text": "another huge difference between Postgres and other databases most databases have a a small number of like core data types",
    "start": "2682270",
    "end": "2690369"
  },
  {
    "text": "and then the whole data and then you sort of build everything around those core data types if you want to store",
    "start": "2690369",
    "end": "2695890"
  },
  {
    "text": "data you have to decompose your application decompose this data down into that data type those core data",
    "start": "2695890",
    "end": "2701380"
  },
  {
    "text": "types and puts it in just your strings your dates your numbers and Postgres is very different you can create custom",
    "start": "2701380",
    "end": "2709329"
  },
  {
    "text": "data types you can create your own data types that's how we have like JSON as an a of datatype in Postgres and then the",
    "start": "2709329",
    "end": "2716989"
  },
  {
    "text": "spatial thing - is really rich so when you're coming over this is one again one",
    "start": "2716989",
    "end": "2722269"
  },
  {
    "text": "of those things it would not be uncommon at all like as there's a lot of people",
    "start": "2722269",
    "end": "2727759"
  },
  {
    "text": "migrating to Postgres so Postgres right now you know it's just climbing in popularity like crazy right those are",
    "start": "2727759",
    "end": "2733039"
  },
  {
    "text": "not that is definitely not all new users of databases right so a lot of these",
    "start": "2733039",
    "end": "2738259"
  },
  {
    "text": "people coming to Postgres have experienced prior experience on other databases and they're and they're going",
    "start": "2738259",
    "end": "2744769"
  },
  {
    "text": "to bring a lot of those assumptions so you know they know how to do things like",
    "start": "2744769",
    "end": "2750739"
  },
  {
    "text": "it's like okay I've been building an application that like you know figures that a route from you know I've know",
    "start": "2750739",
    "end": "2758299"
  },
  {
    "text": "from it figures out a route from this city to that city and it can figure the",
    "start": "2758299",
    "end": "2763880"
  },
  {
    "text": "streets in the turn so I know how to do that and I know how to do on this database so I you know this is how I",
    "start": "2763880",
    "end": "2769099"
  },
  {
    "text": "solve the problem there are lots and lots of opportunities when you're talking with people coming into Postgres to be like hey let me just",
    "start": "2769099",
    "end": "2775819"
  },
  {
    "text": "tell you about you know Postgres can actually solve your problem this way and this is like you know because it has",
    "start": "2775819",
    "end": "2782239"
  },
  {
    "text": "these features that maybe you just didn't know about so tons of opportunities to sort of like educate",
    "start": "2782239",
    "end": "2787880"
  },
  {
    "text": "about native features in Postgres because there's a lot there yeah also a",
    "start": "2787880",
    "end": "2794539"
  },
  {
    "text": "good reason to kind of just go through and get familiar with a lot of the a lot of the different native functionality that Postgres has and what do we what",
    "start": "2794539",
    "end": "2804619"
  },
  {
    "text": "are we demonstrating here this is",
    "start": "2804619",
    "end": "2810529"
  },
  {
    "text": "demonstrating where we wrote up we wrote a function in JavaScript it's what",
    "start": "2810529",
    "end": "2816259"
  },
  {
    "text": "that's doing which isn't something you can't do in many other places and that does work on RDS yeah okay this is huge",
    "start": "2816259",
    "end": "2828910"
  }
]