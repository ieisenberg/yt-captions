[
  {
    "start": "0",
    "end": "31000"
  },
  {
    "text": "In this video, you’ll see how to enable\nAmazon Virtual Private Cloud (Amazon VPC) access",
    "start": "400",
    "end": "5640"
  },
  {
    "text": "for AWS CodeBuild projects.",
    "start": "5640",
    "end": "7620"
  },
  {
    "text": "With this solution, you can increase the security\nof your build process, invoke CodeBuild privately,",
    "start": "8080",
    "end": "13139"
  },
  {
    "text": "and draw upon any resource hosted in your\nVPC for CodeBuild projects.",
    "start": "13140",
    "end": "17020"
  },
  {
    "text": "AWS CodeBuild is a fully managed\nbuild service in the cloud.",
    "start": "18000",
    "end": "21340"
  },
  {
    "text": "Ordinarily, CodeBuild cannot access resources in a VPC.",
    "start": "21820",
    "end": "25119"
  },
  {
    "text": "However, it’s possible to enable access through your VPC specifications and CodeBuild project configuration.",
    "start": "25700",
    "end": "31220"
  },
  {
    "start": "31000",
    "end": "113000"
  },
  {
    "text": "To get started, let’s head to CloudFormation to deploy a stack that bootstraps a VPC for use with CodeBuild.",
    "start": "31880",
    "end": "37320"
  },
  {
    "text": "The first step is to specify a template.",
    "start": "38280",
    "end": "40140"
  },
  {
    "text": "We’ll use a special CloudFormation YAML template\nthat deploys a VPC accessible by CodeBuild.",
    "start": "41060",
    "end": "45740"
  },
  {
    "text": "This template can be found in the AWS documentation.",
    "start": "46280",
    "end": "48960"
  },
  {
    "text": "The template deploys the VPC as well as its necessary private and public subnets and security groups.",
    "start": "51780",
    "end": "57120"
  },
  {
    "text": "Let’s return to CloudFormation to deploy the stack.",
    "start": "57700",
    "end": "60160"
  },
  {
    "text": "Upload the template and proceed through the\nrest of the stack creation process.",
    "start": "61760",
    "end": "65220"
  },
  {
    "text": "Let’s retain the default values for the\nsubnet IP ranges.",
    "start": "75640",
    "end": "78720"
  },
  {
    "text": "Review the settings and create the stack.",
    "start": "85480",
    "end": "87480"
  },
  {
    "text": "While the CloudFormation stack deploys, let’s\nreview some configurations that are necessary",
    "start": "92160",
    "end": "96340"
  },
  {
    "text": "to ensure CodeBuild can access the VPC.",
    "start": "96340",
    "end": "98859"
  },
  {
    "text": "You must have an AWS Identity and Access Management (IAM) role with a policy",
    "start": "101660",
    "end": "106140"
  },
  {
    "text": "that allows CodeBuild to read and write to the same Amazon Simple Storage Service (Amazon S3) bucket.",
    "start": "106140",
    "end": "111460"
  },
  {
    "start": "113000",
    "end": "167000"
  },
  {
    "text": "For the purposes of this example, we already\nhave an IAM role with the appropriate read",
    "start": "113360",
    "end": "117320"
  },
  {
    "text": "and write permissions.",
    "start": "117320",
    "end": "118320"
  },
  {
    "text": "Let’s look at the policy.",
    "start": "118480",
    "end": "119600"
  },
  {
    "text": "As you can see, this policy allows CodeBuild\nto retrieve source files and write output",
    "start": "124960",
    "end": "129240"
  },
  {
    "text": "build zip folders to an S3 bucket that was\npreviously created for this purpose.",
    "start": "129240",
    "end": "133160"
  },
  {
    "text": "Let’s return to CloudFormation.",
    "start": "134080",
    "end": "135660"
  },
  {
    "text": "The CloudFormation template has finished deploying.",
    "start": "138600",
    "end": "140900"
  },
  {
    "text": "It has created the VPC as well as its subnets\nand security groups.",
    "start": "141240",
    "end": "144840"
  },
  {
    "text": "Here, you can see the full list of resources\nproduced by the deployment.",
    "start": "147560",
    "end": "150440"
  },
  {
    "text": "Next, let’s review the Outputs.",
    "start": "151180",
    "end": "152739"
  },
  {
    "text": "As you can see, the stack produced two public\nand private subnets within a generated VPC,",
    "start": "156220",
    "end": "160980"
  },
  {
    "text": "as well as a security group.",
    "start": "160980",
    "end": "162379"
  },
  {
    "text": "Take note of the values for each of the outputs\nfor future use.",
    "start": "163080",
    "end": "166060"
  },
  {
    "start": "167000",
    "end": "228000"
  },
  {
    "text": "Next, let’s set up an environment within the VPC where we can use CodeBuild to build an application.",
    "start": "167100",
    "end": "171940"
  },
  {
    "text": "In this case, we’ll create a Cloud9 environment.",
    "start": "172360",
    "end": "174660"
  },
  {
    "text": "Proceed through the steps of creating a new\nenvironment.",
    "start": "175560",
    "end": "177760"
  },
  {
    "text": "Create the Cloud9 environment within the VPC\nwe just created.",
    "start": "186700",
    "end": "189980"
  },
  {
    "text": "Select the VPC ID shown in the CloudFormation\nstack output we saw earlier.",
    "start": "191640",
    "end": "195880"
  },
  {
    "text": "Select a public subnet of the VPC we created.",
    "start": "198720",
    "end": "201360"
  },
  {
    "text": "Proceed to the next step and create the environment.",
    "start": "203380",
    "end": "205740"
  },
  {
    "text": "We now have a Cloud9 environment on a new\nEC2 instance.",
    "start": "209420",
    "end": "212660"
  },
  {
    "text": "Next, we need to attach the IAM role with\nthe CodeBuild policy to this instance.",
    "start": "214080",
    "end": "218100"
  },
  {
    "text": "Before we can do so, we must turn off AWS\nmanaged temporary credentials,",
    "start": "218680",
    "end": "223099"
  },
  {
    "text": "which is an AWS setting that’s enabled by default.",
    "start": "223100",
    "end": "225760"
  },
  {
    "start": "228000",
    "end": "255000"
  },
  {
    "text": "Now let’s navigate to EC2 to attach the\nIAM role to this instance.",
    "start": "228580",
    "end": "232500"
  },
  {
    "text": "Select the role and apply the setting.",
    "start": "240000",
    "end": "241860"
  },
  {
    "text": "The Cloud9 environment is now set up with\nthe IAM role, and we have an S3 bucket that",
    "start": "248380",
    "end": "252620"
  },
  {
    "text": "will serve as the read and write folder for CodeBuild.",
    "start": "252620",
    "end": "254879"
  },
  {
    "start": "255000",
    "end": "390000"
  },
  {
    "text": "Let’s navigate to CodeBuild and create a\nbuild project with the necessary settings",
    "start": "255580",
    "end": "259140"
  },
  {
    "text": "to build from the Cloud9 environment in the VPC.",
    "start": "259140",
    "end": "261580"
  },
  {
    "text": "Specify a name for the project.",
    "start": "262520",
    "end": "264199"
  },
  {
    "text": "Next, specify the source location.",
    "start": "270360",
    "end": "272439"
  },
  {
    "text": "You can specify a Git repository or a zipped file in S3.",
    "start": "272900",
    "end": "276320"
  },
  {
    "text": "In this case, we’ll be saving the source\nfiles to our S3 bucket, so we’ll choose S3.",
    "start": "277060",
    "end": "281220"
  },
  {
    "text": "Choose the S3 bucket that has been created\nfor this project.",
    "start": "284040",
    "end": "286840"
  },
  {
    "text": "Next, provide the name of the source file.",
    "start": "288160",
    "end": "290200"
  },
  {
    "text": "Notice that the bucket does not contain this file yet.",
    "start": "290700",
    "end": "293080"
  },
  {
    "text": "We’ll specify Amazon Linux 2 as the operating system, and CodeBuild Standard 3.0 as the build runtime.",
    "start": "293540",
    "end": "299360"
  },
  {
    "text": "Under Additional configuration, specify the network details CodeBuild needs in order to build the project.",
    "start": "307680",
    "end": "313039"
  },
  {
    "text": "First, we’ll select the VPC we created earlier.",
    "start": "316640",
    "end": "319000"
  },
  {
    "text": "Next, select private subnets from the VPC\nto be used by CodeBuild.",
    "start": "321140",
    "end": "325100"
  },
  {
    "text": "We’ll select both of our private subnets\nto ensure high availability.",
    "start": "325840",
    "end": "329020"
  },
  {
    "text": "Next, select a security group.",
    "start": "330580",
    "end": "332340"
  },
  {
    "text": "We’ll choose the \"no-ingress\" security group,\nwhich prevents inbound traffic.",
    "start": "333180",
    "end": "336539"
  },
  {
    "text": "CodeBuild needs a build specification file to know\nwhich steps to take in the build process.",
    "start": "340980",
    "end": "345180"
  },
  {
    "text": "If a file name is not provided, CodeBuild will look for the buildspec.yml file in the source code root directory.",
    "start": "345700",
    "end": "351100"
  },
  {
    "text": "For our purposes, let’s leave this blank\nand use the default file.",
    "start": "351680",
    "end": "354620"
  },
  {
    "text": "Next, specify where to store the output artifacts\nfrom the build process.",
    "start": "357800",
    "end": "361659"
  },
  {
    "text": "We’ll choose S3 as the output location.",
    "start": "362220",
    "end": "364260"
  },
  {
    "text": "Once again, choose the CodeBuild bucket\ncreated for this purpose.",
    "start": "365140",
    "end": "368100"
  },
  {
    "text": "Specify the path within the bucket to the file or folder where CodeBuild should write the build output artifact.",
    "start": "369320",
    "end": "374600"
  },
  {
    "text": "Logs and metrics regarding the build process can optionally be uploaded to CloudWatch or S3.",
    "start": "376520",
    "end": "381080"
  },
  {
    "text": "For our purposes, let’s retain the default\nselection and create the build project.",
    "start": "381480",
    "end": "385220"
  },
  {
    "text": "The build project has been created.",
    "start": "387340",
    "end": "388940"
  },
  {
    "start": "390000",
    "end": "485000"
  },
  {
    "text": "Next, let’s navigate to the AWS VPC Management\nConsole to create interface endpoints within",
    "start": "390020",
    "end": "395280"
  },
  {
    "text": "the newly created VPC.",
    "start": "395280",
    "end": "396960"
  },
  {
    "text": "Interface VPC endpoints improve the security\nof your builds",
    "start": "397800",
    "end": "401220"
  },
  {
    "text": "and are needed for CodeBuild\nto access the resources it needs.",
    "start": "401220",
    "end": "404040"
  },
  {
    "text": "First, let’s create an endpoint for our S3 bucket.",
    "start": "404880",
    "end": "407460"
  },
  {
    "text": "Again, select the created VPC.",
    "start": "412840",
    "end": "414760"
  },
  {
    "text": "Let’s select the routing tables associated\nwith each of our subnets.",
    "start": "417520",
    "end": "420639"
  },
  {
    "text": "Now create the endpoint.",
    "start": "423160",
    "end": "424440"
  },
  {
    "text": "Now let’s create a VPC interface endpoint\nfor CodeBuild.",
    "start": "427880",
    "end": "430820"
  },
  {
    "text": "Select each private subnet in both Availability Zones.",
    "start": "440620",
    "end": "443620"
  },
  {
    "text": "The CodeBuild VPC interface must also be associated\nwith a security group.",
    "start": "447160",
    "end": "450940"
  },
  {
    "text": "Let’s retain the default security group in the VPC.",
    "start": "451500",
    "end": "454200"
  },
  {
    "text": "Now that both VPC endpoints have been created,\nlet’s navigate to EC2",
    "start": "461680",
    "end": "465740"
  },
  {
    "text": "and assign the default security group we just assigned to the CodeBuild VPC interface to the EC2 instance.",
    "start": "465740",
    "end": "471099"
  },
  {
    "text": "This assignment will allow communication between\nthe CodeBuild VPC interface and the EC2 instance",
    "start": "472800",
    "end": "477720"
  },
  {
    "text": "containing the Cloud9 environment.",
    "start": "477720",
    "end": "479480"
  },
  {
    "text": "Next, let’s return to the Cloud9 environment.",
    "start": "480260",
    "end": "482540"
  },
  {
    "text": "We are finally ready to prepare and build a project\nfrom our VPC-contained Cloud9 environment.",
    "start": "485220",
    "end": "489720"
  },
  {
    "text": "Let’s start by cloning a sample web app Java project.",
    "start": "490360",
    "end": "493120"
  },
  {
    "text": "Let’s add a build specification file with the default filename of buildspec.yml",
    "start": "496060",
    "end": "500120"
  },
  {
    "text": "in the root directory of the project.",
    "start": "500120",
    "end": "501660"
  },
  {
    "text": "Let’s create a build specification that simply installs\nthe project’s Maven dependencies",
    "start": "503880",
    "end": "508120"
  },
  {
    "text": "before generating the output artifact file.",
    "start": "508120",
    "end": "510300"
  },
  {
    "text": "Now let’s zip the project folder and write it to\nthe S3 bucket so it can be read by CodeBuild.",
    "start": "515200",
    "end": "519660"
  },
  {
    "text": "We’ll zip our project folder into samplewebapp.zip,",
    "start": "522100",
    "end": "524940"
  },
  {
    "text": "the name we specified for our build source\nwithin our S3 bucket.",
    "start": "524940",
    "end": "528000"
  },
  {
    "text": "Next, let’s copy this zip folder to the S3 bucket.",
    "start": "529960",
    "end": "532700"
  },
  {
    "text": "We are now ready to begin the build in CodeBuild.",
    "start": "535900",
    "end": "538140"
  },
  {
    "text": "Now that the build has started successfully,\nlet's head to CodeBuild to look at the build process.",
    "start": "539460",
    "end": "543920"
  },
  {
    "text": "The build has completed successfully.",
    "start": "548380",
    "end": "550100"
  },
  {
    "text": "Let’s take a look at the build details.",
    "start": "550480",
    "end": "552220"
  },
  {
    "text": "Here you can see the build logs.",
    "start": "556380",
    "end": "557980"
  },
  {
    "text": "Let’s look at the build details tab.",
    "start": "558700",
    "end": "560660"
  },
  {
    "text": "We can see that our build is properly configured\nto receive build commands from an environment",
    "start": "563900",
    "end": "567760"
  },
  {
    "text": "contained within a VPC.",
    "start": "567760",
    "end": "569060"
  },
  {
    "text": "Next, let’s head to S3 to ensure that the\nbuild artifact was created.",
    "start": "569640",
    "end": "573220"
  },
  {
    "text": "As expected, we can see the build artifact.",
    "start": "577680",
    "end": "579920"
  },
  {
    "text": "You’ve just seen how to enable Amazon VPC\naccess for AWS CodeBuild projects.",
    "start": "580800",
    "end": "585580"
  },
  {
    "text": "Thanks for watching.",
    "start": "586440",
    "end": "587300"
  },
  {
    "text": "Now it’s your turn to try.",
    "start": "587300",
    "end": "588480"
  }
]