[
  {
    "start": "0",
    "end": "170000"
  },
  {
    "text": "how to manage docker containers at scale",
    "start": "50",
    "end": "3179"
  },
  {
    "text": "while docker containers make it",
    "start": "3179",
    "end": "4799"
  },
  {
    "text": "extremely easy for you to package your",
    "start": "4799",
    "end": "6810"
  },
  {
    "text": "applications and realize greater",
    "start": "6810",
    "end": "9090"
  },
  {
    "text": "efficiencies in your overall coding life",
    "start": "9090",
    "end": "11519"
  },
  {
    "text": "cycles we're gonna our next speaker is",
    "start": "11519",
    "end": "15299"
  },
  {
    "text": "Jason o maker from AWS who's going to be",
    "start": "15299",
    "end": "18449"
  },
  {
    "text": "talking about how to do this at scale",
    "start": "18449",
    "end": "21289"
  },
  {
    "text": "possibly in a cross region across",
    "start": "21289",
    "end": "23970"
  },
  {
    "text": "multiple machines and across massively",
    "start": "23970",
    "end": "27449"
  },
  {
    "text": "huge setups and what are the learnings",
    "start": "27449",
    "end": "30449"
  },
  {
    "text": "from some of the customers that we've",
    "start": "30449",
    "end": "32070"
  },
  {
    "text": "seen on the field which go directly into",
    "start": "32070",
    "end": "34620"
  },
  {
    "text": "how well you can operate continuous at",
    "start": "34620",
    "end": "37079"
  },
  {
    "text": "scale thank you my name is Jason I'm a",
    "start": "37079",
    "end": "41100"
  },
  {
    "text": "Solutions Architect with Amazon and",
    "start": "41100",
    "end": "42989"
  },
  {
    "text": "Sydney and if you came to hear about",
    "start": "42989",
    "end": "44579"
  },
  {
    "text": "running containers at scale and AWS then",
    "start": "44579",
    "end": "46980"
  },
  {
    "text": "you came to the right place so there's a",
    "start": "46980",
    "end": "50969"
  },
  {
    "text": "number of reasons why our customers are",
    "start": "50969",
    "end": "52890"
  },
  {
    "text": "using containers the first and foremost",
    "start": "52890",
    "end": "58559"
  },
  {
    "text": "is speed they launch faster which means",
    "start": "58559",
    "end": "61440"
  },
  {
    "text": "that you can scale faster deploy faster",
    "start": "61440",
    "end": "64198"
  },
  {
    "text": "and your applications can heal faster",
    "start": "64199",
    "end": "65700"
  },
  {
    "text": "which is a key advantage they're more",
    "start": "65700",
    "end": "68430"
  },
  {
    "text": "efficient so you can make more complete",
    "start": "68430",
    "end": "71340"
  },
  {
    "text": "use of your underlying compute instances",
    "start": "71340",
    "end": "73470"
  },
  {
    "text": "and thereby save some money they have",
    "start": "73470",
    "end": "76470"
  },
  {
    "text": "easier packaging so with many other",
    "start": "76470",
    "end": "79259"
  },
  {
    "text": "runtimes these days like node and Python",
    "start": "79259",
    "end": "81600"
  },
  {
    "text": "packaging everything together in a way",
    "start": "81600",
    "end": "83070"
  },
  {
    "text": "that's consistent and that you know it's",
    "start": "83070",
    "end": "84689"
  },
  {
    "text": "going to run is a bit of a challenge and",
    "start": "84689",
    "end": "86159"
  },
  {
    "text": "containers really help here also because",
    "start": "86159",
    "end": "88740"
  },
  {
    "text": "it makes it easier to package",
    "start": "88740",
    "end": "90170"
  },
  {
    "text": "applications for developers I give them",
    "start": "90170",
    "end": "92430"
  },
  {
    "text": "a better of a better experience they",
    "start": "92430",
    "end": "93960"
  },
  {
    "text": "know that that running the application",
    "start": "93960",
    "end": "96180"
  },
  {
    "text": "on their laptop will be consistent with",
    "start": "96180",
    "end": "97500"
  },
  {
    "text": "production and finally because the",
    "start": "97500",
    "end": "100020"
  },
  {
    "text": "containers run on the laptop the same",
    "start": "100020",
    "end": "102600"
  },
  {
    "text": "way as in production your deployments",
    "start": "102600",
    "end": "104579"
  },
  {
    "text": "are less risky the main driver though",
    "start": "104579",
    "end": "108119"
  },
  {
    "text": "really is micro services so what used to",
    "start": "108119",
    "end": "110670"
  },
  {
    "text": "be one service that you were running",
    "start": "110670",
    "end": "111960"
  },
  {
    "text": "because in many cases become 20-30-40",
    "start": "111960",
    "end": "114329"
  },
  {
    "text": "services as it's decomposed from the big",
    "start": "114329",
    "end": "117570"
  },
  {
    "text": "monolith down to these micro services",
    "start": "117570",
    "end": "119100"
  },
  {
    "text": "and this doesn't just mean that we're",
    "start": "119100",
    "end": "120689"
  },
  {
    "text": "running 30 times the number of services",
    "start": "120689",
    "end": "122340"
  },
  {
    "text": "but it means that each of these services",
    "start": "122340",
    "end": "124500"
  },
  {
    "text": "need a pipeline to deploy it and this",
    "start": "124500",
    "end": "128129"
  },
  {
    "text": "increased scale of the number of",
    "start": "128129",
    "end": "130110"
  },
  {
    "text": "services being run has justified a new",
    "start": "130110",
    "end": "132239"
  },
  {
    "text": "approach",
    "start": "132239",
    "end": "133120"
  },
  {
    "text": "to how we do things that's containers",
    "start": "133120",
    "end": "135930"
  },
  {
    "text": "the other big constraint here is that",
    "start": "135930",
    "end": "139379"
  },
  {
    "text": "when it was one big service or monolith",
    "start": "139379",
    "end": "143010"
  },
  {
    "text": "the functions that were being called",
    "start": "143010",
    "end": "145690"
  },
  {
    "text": "within the monolith we're all happening",
    "start": "145690",
    "end": "147280"
  },
  {
    "text": "on the same machine in the same memory",
    "start": "147280",
    "end": "149319"
  },
  {
    "text": "and so they didn't really have a latency",
    "start": "149319",
    "end": "151930"
  },
  {
    "text": "constraint whereas as we decompose them",
    "start": "151930",
    "end": "154060"
  },
  {
    "text": "this requirement that they all",
    "start": "154060",
    "end": "156370"
  },
  {
    "text": "communicate with one another you need to",
    "start": "156370",
    "end": "158440"
  },
  {
    "text": "keep this in mind and this is something",
    "start": "158440",
    "end": "160420"
  },
  {
    "text": "that's been a bit of a challenge and as",
    "start": "160420",
    "end": "162519"
  },
  {
    "text": "we said earlier the packaging",
    "start": "162519",
    "end": "164590"
  },
  {
    "text": "particularly for some of the more modern",
    "start": "164590",
    "end": "166269"
  },
  {
    "text": "languages like node and Python has been",
    "start": "166269",
    "end": "168010"
  },
  {
    "text": "a challenge so well containers have",
    "start": "168010",
    "end": "172269"
  },
  {
    "start": "170000",
    "end": "170000"
  },
  {
    "text": "helped address many of these things they",
    "start": "172269",
    "end": "174280"
  },
  {
    "text": "have their own challenges that are new",
    "start": "174280",
    "end": "175510"
  },
  {
    "text": "to containers they're very transient",
    "start": "175510",
    "end": "177609"
  },
  {
    "text": "more transient than things have been in",
    "start": "177609",
    "end": "179109"
  },
  {
    "text": "the past they can come and go within",
    "start": "179109",
    "end": "181180"
  },
  {
    "text": "seconds and so keeping track of what's",
    "start": "181180",
    "end": "182980"
  },
  {
    "text": "happening and monitoring it is more",
    "start": "182980",
    "end": "185049"
  },
  {
    "text": "complex the container clusters that run",
    "start": "185049",
    "end": "188290"
  },
  {
    "text": "these things are more complex",
    "start": "188290",
    "end": "191049"
  },
  {
    "text": "distributed systems in their own right",
    "start": "191049",
    "end": "192549"
  },
  {
    "text": "that customers have been trying to run",
    "start": "192549",
    "end": "194500"
  },
  {
    "text": "so that's been a challenge and finally",
    "start": "194500",
    "end": "197530"
  },
  {
    "text": "the security of containers is enforced",
    "start": "197530",
    "end": "200349"
  },
  {
    "text": "at the kernel level that's where the",
    "start": "200349",
    "end": "202239"
  },
  {
    "text": "isolation between things happens and so",
    "start": "202239",
    "end": "203980"
  },
  {
    "text": "keeping your kernels secure and patched",
    "start": "203980",
    "end": "206260"
  },
  {
    "text": "has been a bit of a challenge as well",
    "start": "206260",
    "end": "207549"
  },
  {
    "text": "what this talk is about is how Amazon",
    "start": "207549",
    "end": "209950"
  },
  {
    "text": "can help you with these challenges they",
    "start": "209950",
    "end": "211180"
  },
  {
    "text": "all have solutions and we're going to",
    "start": "211180",
    "end": "213040"
  },
  {
    "text": "talk through some of them because this",
    "start": "213040",
    "end": "215889"
  },
  {
    "text": "is a container talk at an AWS summit I",
    "start": "215889",
    "end": "218290"
  },
  {
    "text": "think it's important to give you the",
    "start": "218290",
    "end": "219370"
  },
  {
    "text": "general strategy of Amazon when it comes",
    "start": "219370",
    "end": "222639"
  },
  {
    "text": "to containers and that strategy is one",
    "start": "222639",
    "end": "224680"
  },
  {
    "text": "of choice we give you the power to",
    "start": "224680",
    "end": "226449"
  },
  {
    "text": "choose not just between our traditional",
    "start": "226449",
    "end": "229239"
  },
  {
    "text": "scheduler the elastic container service",
    "start": "229239",
    "end": "231639"
  },
  {
    "text": "but also kubernetes and then for each of",
    "start": "231639",
    "end": "233980"
  },
  {
    "text": "these we're giving you a choice between",
    "start": "233980",
    "end": "235239"
  },
  {
    "text": "two modes for running them one where you",
    "start": "235239",
    "end": "237609"
  },
  {
    "text": "bring the ec2 instances and you have a",
    "start": "237609",
    "end": "239260"
  },
  {
    "text": "lot more control over what instances are",
    "start": "239260",
    "end": "241419"
  },
  {
    "text": "used and they're scaling and also their",
    "start": "241419",
    "end": "243190"
  },
  {
    "text": "operating system and then the new",
    "start": "243190",
    "end": "245260"
  },
  {
    "text": "Fargate mode will retake care of all of",
    "start": "245260",
    "end": "246609"
  },
  {
    "text": "these things for you today we're going",
    "start": "246609",
    "end": "249849"
  },
  {
    "text": "to be talking about ECS",
    "start": "249849",
    "end": "251440"
  },
  {
    "text": "because ECS is generally available in",
    "start": "251440",
    "end": "254260"
  },
  {
    "text": "all of our regions including Mumbai",
    "start": "254260",
    "end": "255780"
  },
  {
    "text": "whereas eks is in preview at the moment",
    "start": "255780",
    "end": "259030"
  },
  {
    "text": "and it's not yet generally available and",
    "start": "259030",
    "end": "260440"
  },
  {
    "text": "Fargate for ECS is generally available",
    "start": "260440",
    "end": "263349"
  },
  {
    "text": "in 4 of our regions Virginia Oregon Ohio",
    "start": "263349",
    "end": "265930"
  },
  {
    "text": "and I",
    "start": "265930",
    "end": "267500"
  },
  {
    "text": "and hopefully Mumbai soon whereas",
    "start": "267500",
    "end": "269180"
  },
  {
    "text": "Fargate for eks is not yet available in",
    "start": "269180",
    "end": "270980"
  },
  {
    "text": "its preview so the agenda for today's",
    "start": "270980",
    "end": "274430"
  },
  {
    "text": "talk is we're gonna have a brief",
    "start": "274430",
    "end": "275870"
  },
  {
    "text": "introduction to ECS we're going to talk",
    "start": "275870",
    "end": "278510"
  },
  {
    "text": "about some best practices that we've",
    "start": "278510",
    "end": "279860"
  },
  {
    "text": "seen in our customers on how to go big",
    "start": "279860",
    "end": "282740"
  },
  {
    "text": "with containers on ecs and in Amazon",
    "start": "282740",
    "end": "285380"
  },
  {
    "text": "we're going to hear a few customer case",
    "start": "285380",
    "end": "287720"
  },
  {
    "text": "studies for how this has been done well",
    "start": "287720",
    "end": "289490"
  },
  {
    "text": "by our customers and finally we're gonna",
    "start": "289490",
    "end": "291920"
  },
  {
    "text": "hear by hear from a local here in Mumbai",
    "start": "291920",
    "end": "294680"
  },
  {
    "text": "clever tap on their experiences with",
    "start": "294680",
    "end": "296420"
  },
  {
    "text": "containers and Francis will come up and",
    "start": "296420",
    "end": "298100"
  },
  {
    "text": "join us in a minute",
    "start": "298100",
    "end": "299650"
  },
  {
    "text": "so Amazon's elastic container service",
    "start": "299650",
    "end": "302830"
  },
  {
    "text": "this is a managed service for managing",
    "start": "302830",
    "end": "305660"
  },
  {
    "start": "304000",
    "end": "304000"
  },
  {
    "text": "your containers it's well integrated",
    "start": "305660",
    "end": "308480"
  },
  {
    "text": "with the platform highly scalable highly",
    "start": "308480",
    "end": "310880"
  },
  {
    "text": "available and it's a great way to run",
    "start": "310880",
    "end": "314600"
  },
  {
    "text": "your containers at scale with minimum",
    "start": "314600",
    "end": "316420"
  },
  {
    "text": "operational effort how it works in at a",
    "start": "316420",
    "end": "320390"
  },
  {
    "text": "high level is that you bring instances",
    "start": "320390",
    "end": "322130"
  },
  {
    "text": "that have docker installed as well as",
    "start": "322130",
    "end": "323840"
  },
  {
    "text": "our ECS agent installed that ECS agent",
    "start": "323840",
    "end": "326870"
  },
  {
    "text": "checks in with a control plane that we",
    "start": "326870",
    "end": "328490"
  },
  {
    "text": "run for you and that control plane tells",
    "start": "328490",
    "end": "331460"
  },
  {
    "text": "the agent to tell docker to run tasks",
    "start": "331460",
    "end": "334310"
  },
  {
    "text": "and these tasks can be one or more",
    "start": "334310",
    "end": "336230"
  },
  {
    "text": "containers that are run together on an",
    "start": "336230",
    "end": "338540"
  },
  {
    "text": "instance and have the same network and",
    "start": "338540",
    "end": "341000"
  },
  {
    "text": "security boundaries optionally they also",
    "start": "341000",
    "end": "344720"
  },
  {
    "text": "integrate with a load balancer to expose",
    "start": "344720",
    "end": "346520"
  },
  {
    "text": "these services either within your own",
    "start": "346520",
    "end": "348830"
  },
  {
    "text": "environment or out to the Internet",
    "start": "348830",
    "end": "352340"
  },
  {
    "text": "there's a lot of reasons why ECS is",
    "start": "352340",
    "end": "353900"
  },
  {
    "text": "great it's well integrated with the",
    "start": "353900",
    "end": "355790"
  },
  {
    "text": "platform it's got a great CLI an API to",
    "start": "355790",
    "end": "358540"
  },
  {
    "text": "you know making make running your",
    "start": "358540",
    "end": "360890"
  },
  {
    "text": "container is easy and automatable",
    "start": "360890",
    "end": "362270"
  },
  {
    "text": "and two of these features in particular",
    "start": "362270",
    "end": "364550"
  },
  {
    "text": "are recent additions we launched at",
    "start": "364550",
    "end": "367310"
  },
  {
    "text": "reinvent last year a new networking mode",
    "start": "367310",
    "end": "369110"
  },
  {
    "text": "where you can have a dedicated network",
    "start": "369110",
    "end": "370610"
  },
  {
    "text": "interface per task and also a new",
    "start": "370610",
    "end": "373130"
  },
  {
    "text": "service discovery mode whereby you can",
    "start": "373130",
    "end": "375500"
  },
  {
    "text": "more quickly update rel 53 to expose",
    "start": "375500",
    "end": "378740"
  },
  {
    "text": "your services in a way to quickly",
    "start": "378740",
    "end": "381760"
  },
  {
    "text": "integrate with other micro services and",
    "start": "381760",
    "end": "383960"
  },
  {
    "text": "these common micro services patterns",
    "start": "383960",
    "end": "385760"
  },
  {
    "text": "that we're seeing throughout the",
    "start": "385760",
    "end": "386600"
  },
  {
    "text": "industry whenever we talk about a",
    "start": "386600",
    "end": "389990"
  },
  {
    "text": "service in Amazon when you want to know",
    "start": "389990",
    "end": "391550"
  },
  {
    "text": "about its operational and security",
    "start": "391550",
    "end": "393020"
  },
  {
    "text": "characteristics we always look at it",
    "start": "393020",
    "end": "395300"
  },
  {
    "text": "through the lens of the shared",
    "start": "395300",
    "end": "396229"
  },
  {
    "text": "responsibility model",
    "start": "396229",
    "end": "397770"
  },
  {
    "text": "so in the case of traditional ECS this",
    "start": "397770",
    "end": "402300"
  },
  {
    "start": "400000",
    "end": "400000"
  },
  {
    "text": "is what that looks like so Amazon is",
    "start": "402300",
    "end": "404069"
  },
  {
    "text": "responsible for the ECS control plane",
    "start": "404069",
    "end": "406319"
  },
  {
    "text": "whereas the customers responsible for",
    "start": "406319",
    "end": "408389"
  },
  {
    "text": "bringing the instances thereby picking",
    "start": "408389",
    "end": "410910"
  },
  {
    "text": "the right instance type how many of the",
    "start": "410910",
    "end": "412349"
  },
  {
    "text": "instances they want to run across how",
    "start": "412349",
    "end": "414180"
  },
  {
    "text": "many availability zones they want to run",
    "start": "414180",
    "end": "415620"
  },
  {
    "text": "them also the operating system so you",
    "start": "415620",
    "end": "418110"
  },
  {
    "text": "could use Amazon Linux you could use Red",
    "start": "418110",
    "end": "419819"
  },
  {
    "text": "Hat Enterprise Linux and also the",
    "start": "419819",
    "end": "422520"
  },
  {
    "text": "patching of that operating system all of",
    "start": "422520",
    "end": "424020"
  },
  {
    "text": "these things are on the customer side of",
    "start": "424020",
    "end": "426030"
  },
  {
    "text": "the line here they're their",
    "start": "426030",
    "end": "427500"
  },
  {
    "text": "responsibility so far gate moves two of",
    "start": "427500",
    "end": "431550"
  },
  {
    "text": "these things down to being our",
    "start": "431550",
    "end": "432990"
  },
  {
    "text": "responsibility so you don't need to",
    "start": "432990",
    "end": "434280"
  },
  {
    "text": "worry about any of the scaling anymore",
    "start": "434280",
    "end": "435509"
  },
  {
    "text": "or instance type selection any of those",
    "start": "435509",
    "end": "437190"
  },
  {
    "text": "things",
    "start": "437190",
    "end": "438060"
  },
  {
    "text": "additionally we take care of the whole",
    "start": "438060",
    "end": "440069"
  },
  {
    "text": "operating system for you so you just",
    "start": "440069",
    "end": "441960"
  },
  {
    "text": "have to worry about your containers",
    "start": "441960",
    "end": "443610"
  },
  {
    "text": "what's in their images as well as the",
    "start": "443610",
    "end": "445500"
  },
  {
    "text": "configuration that you give ECS the",
    "start": "445500",
    "end": "447210"
  },
  {
    "text": "tasks and service definitions so this is",
    "start": "447210",
    "end": "450720"
  },
  {
    "text": "just a few of the logos of customers",
    "start": "450720",
    "end": "452430"
  },
  {
    "text": "that are using ECS happily at scale",
    "start": "452430",
    "end": "454849"
  },
  {
    "text": "missing from this is the customer you're",
    "start": "454849",
    "end": "456900"
  },
  {
    "text": "going to hear from in a moment clever",
    "start": "456900",
    "end": "458340"
  },
  {
    "text": "tap but we have also many customers in",
    "start": "458340",
    "end": "460680"
  },
  {
    "text": "India that are using it successfully too",
    "start": "460680",
    "end": "462949"
  },
  {
    "text": "and so now we're going to talk about",
    "start": "462949",
    "end": "465419"
  },
  {
    "text": "some general pest practices and patterns",
    "start": "465419",
    "end": "467520"
  },
  {
    "text": "that we've seen customers be successful",
    "start": "467520",
    "end": "469440"
  },
  {
    "text": "with when it comes to running their",
    "start": "469440",
    "end": "471539"
  },
  {
    "text": "containers at scale the first and",
    "start": "471539",
    "end": "475380"
  },
  {
    "text": "probably most important point is",
    "start": "475380",
    "end": "477630"
  },
  {
    "text": "security so security is critical and",
    "start": "477630",
    "end": "480060"
  },
  {
    "text": "everybody's responsibility both the",
    "start": "480060",
    "end": "481500"
  },
  {
    "text": "customers and Amazon's and some best",
    "start": "481500",
    "end": "484889"
  },
  {
    "text": "practices to maintain the security of",
    "start": "484889",
    "end": "486509"
  },
  {
    "text": "your containers are to leverage i''m",
    "start": "486509",
    "end": "488880"
  },
  {
    "text": "roles which basically delegates to",
    "start": "488880",
    "end": "491430"
  },
  {
    "text": "Amazon all of the things involved with",
    "start": "491430",
    "end": "494250"
  },
  {
    "text": "getting temporary access keys and",
    "start": "494250",
    "end": "497039"
  },
  {
    "text": "secrets to our api's and rotating them",
    "start": "497039",
    "end": "498840"
  },
  {
    "text": "so we take care of all of that for you",
    "start": "498840",
    "end": "500759"
  },
  {
    "text": "and help you to use services like",
    "start": "500759",
    "end": "502979"
  },
  {
    "text": "DynamoDB and s3 from the code in your",
    "start": "502979",
    "end": "505560"
  },
  {
    "text": "containers in a very easy and secure way",
    "start": "505560",
    "end": "507780"
  },
  {
    "text": "from a from a credential perspective for",
    "start": "507780",
    "end": "511620"
  },
  {
    "text": "those credentials that aren't our API",
    "start": "511620",
    "end": "514279"
  },
  {
    "text": "there's a number of Secrets managers we",
    "start": "514279",
    "end": "517169"
  },
  {
    "text": "offer to the parameter store which has",
    "start": "517169",
    "end": "519360"
  },
  {
    "text": "been around for quite some time now and",
    "start": "519360",
    "end": "520709"
  },
  {
    "text": "our new secrets manager which just",
    "start": "520709",
    "end": "522450"
  },
  {
    "text": "launched recently and there's",
    "start": "522450",
    "end": "524399"
  },
  {
    "text": "third-party solutions that can be used",
    "start": "524399",
    "end": "526290"
  },
  {
    "text": "here popular one is dashi corpse vault",
    "start": "526290",
    "end": "528900"
  },
  {
    "text": "so using these secrets managers to",
    "start": "528900",
    "end": "531540"
  },
  {
    "text": "make sure that your secrets are secure",
    "start": "531540",
    "end": "533850"
  },
  {
    "text": "and can be rotated it's very important",
    "start": "533850",
    "end": "536209"
  },
  {
    "text": "whether you choose our cloud formation",
    "start": "536209",
    "end": "539519"
  },
  {
    "text": "or hash Eclipse terraform making those",
    "start": "539519",
    "end": "543389"
  },
  {
    "text": "changes via pipelines rather than having",
    "start": "543389",
    "end": "545430"
  },
  {
    "text": "developers independently deploying the",
    "start": "545430",
    "end": "547440"
  },
  {
    "text": "changes from their laptop is critical in",
    "start": "547440",
    "end": "549240"
  },
  {
    "text": "the in the case of terraformer in",
    "start": "549240",
    "end": "551100"
  },
  {
    "text": "particular if you if they have enough",
    "start": "551100",
    "end": "553649"
  },
  {
    "text": "rights to invoke the terraform then they",
    "start": "553649",
    "end": "555149"
  },
  {
    "text": "have enough rights to change everything",
    "start": "555149",
    "end": "556500"
  },
  {
    "text": "in your environment and so limiting that",
    "start": "556500",
    "end": "559019"
  },
  {
    "text": "role to a pipeline which can be more",
    "start": "559019",
    "end": "562230"
  },
  {
    "text": "properly managed and changed controlled",
    "start": "562230",
    "end": "563699"
  },
  {
    "text": "is is key and finally I am let's you",
    "start": "563699",
    "end": "567000"
  },
  {
    "text": "have really secure policies but it also",
    "start": "567000",
    "end": "569430"
  },
  {
    "text": "can let you have very insecure policies",
    "start": "569430",
    "end": "571110"
  },
  {
    "text": "you can go and put asterisks azure stars",
    "start": "571110",
    "end": "573360"
  },
  {
    "text": "for all the resources and you can",
    "start": "573360",
    "end": "575220"
  },
  {
    "text": "quickly make things rather non granular",
    "start": "575220",
    "end": "578850"
  },
  {
    "text": "insecure so err on the side of least",
    "start": "578850",
    "end": "581790"
  },
  {
    "text": "privilege wherever you can and be very",
    "start": "581790",
    "end": "583500"
  },
  {
    "text": "specific in your ion policies to make",
    "start": "583500",
    "end": "585810"
  },
  {
    "text": "sure that things are secure one way to",
    "start": "585810",
    "end": "587970"
  },
  {
    "text": "do that is to have automation so that",
    "start": "587970",
    "end": "589800"
  },
  {
    "text": "everything gets created a role as it's",
    "start": "589800",
    "end": "591839"
  },
  {
    "text": "being progressed through a pipeline and",
    "start": "591839",
    "end": "593880"
  },
  {
    "text": "that kind of leads into our next point",
    "start": "593880",
    "end": "595470"
  },
  {
    "text": "which is when you're going big when",
    "start": "595470",
    "end": "597870"
  },
  {
    "text": "you're truly doing things at scale",
    "start": "597870",
    "end": "599100"
  },
  {
    "text": "everything needs to be automated and",
    "start": "599100",
    "end": "600959"
  },
  {
    "text": "that's an investment that pays dividends",
    "start": "600959",
    "end": "602550"
  },
  {
    "text": "so whether it's the building of your",
    "start": "602550",
    "end": "605069"
  },
  {
    "text": "code in containers your infrastructure",
    "start": "605069",
    "end": "607709"
  },
  {
    "text": "which is ideally done in an",
    "start": "607709",
    "end": "609720"
  },
  {
    "text": "infrastructure is code pattern your",
    "start": "609720",
    "end": "611850"
  },
  {
    "text": "deployments your healing or your",
    "start": "611850",
    "end": "613110"
  },
  {
    "text": "security automation is what allows you",
    "start": "613110",
    "end": "615690"
  },
  {
    "text": "to really move fast and to do it in a",
    "start": "615690",
    "end": "617639"
  },
  {
    "text": "way that's reproducible and secure and",
    "start": "617639",
    "end": "621000"
  },
  {
    "text": "the most important point is that you",
    "start": "621000",
    "end": "622980"
  },
  {
    "text": "should be striving to have your",
    "start": "622980",
    "end": "624510"
  },
  {
    "text": "automation make it fast and easy for",
    "start": "624510",
    "end": "626370"
  },
  {
    "text": "your staff to do the right thing we'll",
    "start": "626370",
    "end": "628709"
  },
  {
    "text": "come back to that point in a minute",
    "start": "628709",
    "end": "629959"
  },
  {
    "text": "another key to operating at scale is to",
    "start": "629959",
    "end": "633779"
  },
  {
    "text": "delegate whatever you can to AWS with",
    "start": "633779",
    "end": "635730"
  },
  {
    "text": "our higher level services when it comes",
    "start": "635730",
    "end": "637620"
  },
  {
    "text": "to running databases and cases and",
    "start": "637620",
    "end": "639839"
  },
  {
    "text": "streams these are difficult services to",
    "start": "639839",
    "end": "642899"
  },
  {
    "text": "run well and it's not really a",
    "start": "642899",
    "end": "644699"
  },
  {
    "text": "differentiator for your business unless",
    "start": "644699",
    "end": "646319"
  },
  {
    "text": "you're a cloud company like us to do it",
    "start": "646319",
    "end": "648540"
  },
  {
    "text": "well so delicate that responsibility to",
    "start": "648540",
    "end": "651180"
  },
  {
    "text": "Amazon so you can focus on the code",
    "start": "651180",
    "end": "652709"
  },
  {
    "text": "that's really adding value to your",
    "start": "652709",
    "end": "654269"
  },
  {
    "text": "customers and delivering on your",
    "start": "654269",
    "end": "656130"
  },
  {
    "text": "business outcomes when it comes to",
    "start": "656130",
    "end": "659399"
  },
  {
    "text": "containers smaller is better not only is",
    "start": "659399",
    "end": "662339"
  },
  {
    "text": "less is more secure",
    "start": "662339",
    "end": "664700"
  },
  {
    "text": "it's also more performant the smaller an",
    "start": "664700",
    "end": "666320"
  },
  {
    "text": "image is the faster it pulls so the",
    "start": "666320",
    "end": "668660"
  },
  {
    "text": "faster things deploy and heal and so",
    "start": "668660",
    "end": "671300"
  },
  {
    "text": "making a limiting the blast radius and",
    "start": "671300",
    "end": "673930"
  },
  {
    "text": "putting as little in there as is the the",
    "start": "673930",
    "end": "676670"
  },
  {
    "text": "goal as we said putting secrets in there",
    "start": "676670",
    "end": "679220"
  },
  {
    "text": "as a bad pattern that's what secrets",
    "start": "679220",
    "end": "680660"
  },
  {
    "text": "managers and I am roles are for used",
    "start": "680660",
    "end": "683030"
  },
  {
    "text": "trusted base images like the official",
    "start": "683030",
    "end": "685820"
  },
  {
    "text": "images on the docker hub or even better",
    "start": "685820",
    "end": "688190"
  },
  {
    "text": "yet get the docker file that corresponds",
    "start": "688190",
    "end": "690290"
  },
  {
    "text": "to that image and build it yourself so",
    "start": "690290",
    "end": "691790"
  },
  {
    "text": "you know exactly what's in it because",
    "start": "691790",
    "end": "693050"
  },
  {
    "text": "you're responsible for it and in this",
    "start": "693050",
    "end": "694670"
  },
  {
    "text": "model and finally use unique and",
    "start": "694670",
    "end": "697490"
  },
  {
    "text": "informative image tags so if instead of",
    "start": "697490",
    "end": "700160"
  },
  {
    "text": "saying like latest for your tag you have",
    "start": "700160",
    "end": "701720"
  },
  {
    "text": "a git commit ID you can search for that",
    "start": "701720",
    "end": "703880"
  },
  {
    "text": "git commit idea in your repo and work",
    "start": "703880",
    "end": "705620"
  },
  {
    "text": "out exactly what's changed and who",
    "start": "705620",
    "end": "707060"
  },
  {
    "text": "changed it and why they changed it at a",
    "start": "707060",
    "end": "708530"
  },
  {
    "text": "glance which is very important one of",
    "start": "708530",
    "end": "717680"
  },
  {
    "text": "the key benefits and micro services is",
    "start": "717680",
    "end": "719540"
  },
  {
    "text": "decoupling and I this picture I think is",
    "start": "719540",
    "end": "721910"
  },
  {
    "text": "truly apt because when you have a train",
    "start": "721910",
    "end": "723950"
  },
  {
    "text": "and all of the cars are coupled they",
    "start": "723950",
    "end": "725390"
  },
  {
    "text": "either are all moving or none of them",
    "start": "725390",
    "end": "726680"
  },
  {
    "text": "are moving and this is often what",
    "start": "726680",
    "end": "728360"
  },
  {
    "text": "happens within our organizations the",
    "start": "728360",
    "end": "730670"
  },
  {
    "text": "person who literally wrote the book on",
    "start": "730670",
    "end": "731840"
  },
  {
    "text": "this sam newman who wrote building micro",
    "start": "731840",
    "end": "734720"
  },
  {
    "text": "services put it can you make a change to",
    "start": "734720",
    "end": "736820"
  },
  {
    "text": "one thing and deploy it without changing",
    "start": "736820",
    "end": "739070"
  },
  {
    "text": "anything else and that's the goal",
    "start": "739070",
    "end": "740600"
  },
  {
    "text": "technically but I would go and step",
    "start": "740600",
    "end": "742310"
  },
  {
    "text": "further and say organizationally can one",
    "start": "742310",
    "end": "744470"
  },
  {
    "text": "team make a change without having to",
    "start": "744470",
    "end": "745970"
  },
  {
    "text": "tell anybody else and if you can hit",
    "start": "745970",
    "end": "748730"
  },
  {
    "text": "this then you can have faster and easier",
    "start": "748730",
    "end": "750320"
  },
  {
    "text": "changes and much more agility in your",
    "start": "750320",
    "end": "752060"
  },
  {
    "text": "business you could choose the right tool",
    "start": "752060",
    "end": "753740"
  },
  {
    "text": "for the job scale things independently",
    "start": "753740",
    "end": "755270"
  },
  {
    "text": "and let each team focus on doing one",
    "start": "755270",
    "end": "758480"
  },
  {
    "text": "thing and doing it well the other big",
    "start": "758480",
    "end": "761540"
  },
  {
    "start": "761000",
    "end": "761000"
  },
  {
    "text": "advantage of decoupling is to isolate",
    "start": "761540",
    "end": "763700"
  },
  {
    "text": "your failures so this image is actually",
    "start": "763700",
    "end": "765860"
  },
  {
    "text": "a World War 2 era battleship being",
    "start": "765860",
    "end": "769520"
  },
  {
    "text": "constructed and as you can see here",
    "start": "769520",
    "end": "771470"
  },
  {
    "text": "they're building watertight bulkheads to",
    "start": "771470",
    "end": "774080"
  },
  {
    "text": "make it so that if one part of the ship",
    "start": "774080",
    "end": "776570"
  },
  {
    "text": "is flooding the ship doesn't sink and",
    "start": "776570",
    "end": "778820"
  },
  {
    "text": "ideally the ship operates in a bit of a",
    "start": "778820",
    "end": "780770"
  },
  {
    "text": "degraded State maybe and can get back to",
    "start": "780770",
    "end": "783350"
  },
  {
    "text": "port and and fulfill its mission right",
    "start": "783350",
    "end": "786040"
  },
  {
    "text": "so in the case of micro-services this is",
    "start": "786040",
    "end": "789050"
  },
  {
    "text": "exactly what we're doing but instead of",
    "start": "789050",
    "end": "790520"
  },
  {
    "text": "watertight bulkheads we're introducing",
    "start": "790520",
    "end": "792800"
  },
  {
    "text": "either queues between services so an",
    "start": "792800",
    "end": "795110"
  },
  {
    "text": "asynchronous pattern or we have API",
    "start": "795110",
    "end": "797990"
  },
  {
    "text": "switch on",
    "start": "797990",
    "end": "798630"
  },
  {
    "text": "one hand throttle their subscribers and",
    "start": "798630",
    "end": "801870"
  },
  {
    "text": "on the other retry with exponential",
    "start": "801870",
    "end": "803910"
  },
  {
    "text": "back-off so if you follow these patterns",
    "start": "803910",
    "end": "805890"
  },
  {
    "text": "then one part of your wider application",
    "start": "805890",
    "end": "807600"
  },
  {
    "text": "can flood well the rest of the",
    "start": "807600",
    "end": "810330"
  },
  {
    "text": "application can continue to operate",
    "start": "810330",
    "end": "811590"
  },
  {
    "text": "perhaps in the degraded State doesn't",
    "start": "811590",
    "end": "813210"
  },
  {
    "text": "sink so there's a few different patterns",
    "start": "813210",
    "end": "816630"
  },
  {
    "text": "that are popular to do this the key here",
    "start": "816630",
    "end": "820110"
  },
  {
    "text": "is that you have different services each",
    "start": "820110",
    "end": "822360"
  },
  {
    "text": "of which have an API and that they own",
    "start": "822360",
    "end": "823980"
  },
  {
    "text": "their own data stores so if you have a",
    "start": "823980",
    "end": "826830"
  },
  {
    "text": "situation where two services need to",
    "start": "826830",
    "end": "828780"
  },
  {
    "start": "827000",
    "end": "827000"
  },
  {
    "text": "share a bit of data it's tempting to",
    "start": "828780",
    "end": "831870"
  },
  {
    "text": "just have those two services talk to the",
    "start": "831870",
    "end": "833370"
  },
  {
    "text": "same database however when you do that",
    "start": "833370",
    "end": "835230"
  },
  {
    "text": "you've coupled those services in a way",
    "start": "835230",
    "end": "836670"
  },
  {
    "text": "that's difficult to remediate and it",
    "start": "836670",
    "end": "838530"
  },
  {
    "text": "kind of leads to that you know coupling",
    "start": "838530",
    "end": "840900"
  },
  {
    "text": "and grinding things to a halt over time",
    "start": "840900",
    "end": "842550"
  },
  {
    "text": "so that the thing that to get out of the",
    "start": "842550",
    "end": "845190"
  },
  {
    "text": "slide is that wherever possible only",
    "start": "845190",
    "end": "847710"
  },
  {
    "text": "have one service own each data store and",
    "start": "847710",
    "end": "850350"
  },
  {
    "text": "then have it exposed that by an API to",
    "start": "850350",
    "end": "852420"
  },
  {
    "text": "the rest another really great pattern is",
    "start": "852420",
    "end": "855390"
  },
  {
    "start": "855000",
    "end": "855000"
  },
  {
    "text": "to do things asynchronously and I'd like",
    "start": "855390",
    "end": "858060"
  },
  {
    "text": "to think of this queue here as a shock",
    "start": "858060",
    "end": "859650"
  },
  {
    "text": "absorber or spring so when you decouple",
    "start": "859650",
    "end": "862110"
  },
  {
    "text": "things through an asynchronous pattern",
    "start": "862110",
    "end": "863760"
  },
  {
    "text": "you give yourself the flexibility and",
    "start": "863760",
    "end": "866160"
  },
  {
    "text": "time to scale a lot of problems and it's",
    "start": "866160",
    "end": "868320"
  },
  {
    "text": "a much more powerful mechanism for you",
    "start": "868320",
    "end": "871470"
  },
  {
    "text": "know allowing true decoupling in scale",
    "start": "871470",
    "end": "875000"
  },
  {
    "text": "so we have a bunch of material on how to",
    "start": "875000",
    "end": "878520"
  },
  {
    "text": "do micro service as well and how to do",
    "start": "878520",
    "end": "879930"
  },
  {
    "text": "them well on ECS one of our developer",
    "start": "879930",
    "end": "882300"
  },
  {
    "text": "advocates Nathan Peck is a lot of great",
    "start": "882300",
    "end": "884820"
  },
  {
    "text": "material here so these slides will be",
    "start": "884820",
    "end": "886830"
  },
  {
    "text": "may have made available to you afterward",
    "start": "886830",
    "end": "888300"
  },
  {
    "text": "but if you want to take it just a",
    "start": "888300",
    "end": "889380"
  },
  {
    "text": "picture of some of these URLs these are",
    "start": "889380",
    "end": "891060"
  },
  {
    "text": "some great content elaborating on this",
    "start": "891060",
    "end": "893250"
  },
  {
    "text": "some more so let's talk about some",
    "start": "893250",
    "end": "899220"
  },
  {
    "text": "customer case studies GoPro probably",
    "start": "899220",
    "end": "903060"
  },
  {
    "text": "needs no introduction they make not only",
    "start": "903060",
    "end": "904800"
  },
  {
    "text": "great cameras but now they make great",
    "start": "904800",
    "end": "906990"
  },
  {
    "text": "cloud services to go with their cameras",
    "start": "906990",
    "end": "908610"
  },
  {
    "text": "that let you store access edit and share",
    "start": "908610",
    "end": "911040"
  },
  {
    "text": "videos that you're taking with your",
    "start": "911040",
    "end": "912570"
  },
  {
    "text": "GoPro camera they truly are going big",
    "start": "912570",
    "end": "915900"
  },
  {
    "text": "they have more than 40 services running",
    "start": "915900",
    "end": "918180"
  },
  {
    "text": "on ECS in production and those take up",
    "start": "918180",
    "end": "920490"
  },
  {
    "text": "to a half-million api requests per",
    "start": "920490",
    "end": "922440"
  },
  {
    "text": "minute at peak so they are at a pretty",
    "start": "922440",
    "end": "925110"
  },
  {
    "text": "decent scale and they were also able to",
    "start": "925110",
    "end": "928230"
  },
  {
    "text": "be fast with ECS because moving this",
    "start": "928230",
    "end": "930839"
  },
  {
    "text": "process to a",
    "start": "930839",
    "end": "931860"
  },
  {
    "text": "and running in an ECS took them less",
    "start": "931860",
    "end": "933390"
  },
  {
    "text": "than a quarter to complete and it let",
    "start": "933390",
    "end": "935010"
  },
  {
    "text": "them reduce their ec2 footprint by 70%",
    "start": "935010",
    "end": "938060"
  },
  {
    "start": "938000",
    "end": "938000"
  },
  {
    "text": "so I'm gonna let them talk a little bit",
    "start": "938060",
    "end": "940470"
  },
  {
    "text": "about how they've done this so this is a",
    "start": "940470",
    "end": "941850"
  },
  {
    "text": "short video that we're gonna play and",
    "start": "941850",
    "end": "945120"
  },
  {
    "text": "I'll let GoPro explain how they've done",
    "start": "945120",
    "end": "947160"
  },
  {
    "text": "it okay and how does that come in as far",
    "start": "947160",
    "end": "957570"
  },
  {
    "text": "as the system we see up here if I want",
    "start": "957570",
    "end": "960060"
  },
  {
    "text": "to go in and start editing a video where",
    "start": "960060",
    "end": "962220"
  },
  {
    "text": "does it happen so it actually happens",
    "start": "962220",
    "end": "964740"
  },
  {
    "text": "with a combination of our back-end",
    "start": "964740",
    "end": "966959"
  },
  {
    "text": "services that are in ECS and SQS so all",
    "start": "966959",
    "end": "970500"
  },
  {
    "text": "the jobs are put into sqs and they're",
    "start": "970500",
    "end": "973470"
  },
  {
    "text": "picked up by containers that are running",
    "start": "973470",
    "end": "974880"
  },
  {
    "text": "in ec2 over here we have containers that",
    "start": "974880",
    "end": "978779"
  },
  {
    "text": "are pulling sqs queues and then they're",
    "start": "978779",
    "end": "981180"
  },
  {
    "text": "picking up jobs in a JSON based format",
    "start": "981180",
    "end": "983160"
  },
  {
    "text": "and then returning the results to the",
    "start": "983160",
    "end": "984810"
  },
  {
    "text": "user or to a different worker okay so",
    "start": "984810",
    "end": "986850"
  },
  {
    "text": "all your customer requests for",
    "start": "986850",
    "end": "988440"
  },
  {
    "text": "everything is first point of landing is",
    "start": "988440",
    "end": "990720"
  },
  {
    "text": "sqs and then the ECS cluster itself is",
    "start": "990720",
    "end": "993600"
  },
  {
    "text": "actually picking up off that queue and",
    "start": "993600",
    "end": "995459"
  },
  {
    "text": "giving up all the duties exactly how do",
    "start": "995459",
    "end": "998160"
  },
  {
    "text": "you handle the management of your ECS",
    "start": "998160",
    "end": "999930"
  },
  {
    "text": "cluster what do you do for scaling upon",
    "start": "999930",
    "end": "1002540"
  },
  {
    "text": "customer load or anything like that yeah",
    "start": "1002540",
    "end": "1004730"
  },
  {
    "text": "so we have all of our clusters in an",
    "start": "1004730",
    "end": "1006890"
  },
  {
    "text": "auto scaling group so they can scale",
    "start": "1006890",
    "end": "1009199"
  },
  {
    "text": "horizontally with instances so in the",
    "start": "1009199",
    "end": "1011660"
  },
  {
    "text": "case where we need to expand more",
    "start": "1011660",
    "end": "1013699"
  },
  {
    "text": "compute we can do that on the fly we",
    "start": "1013699",
    "end": "1015920"
  },
  {
    "text": "also have auto scaling at the ECE s",
    "start": "1015920",
    "end": "1018920"
  },
  {
    "text": "level with our tasks so so the services",
    "start": "1018920",
    "end": "1021589"
  },
  {
    "text": "themselves exactly so we have tasks run",
    "start": "1021589",
    "end": "1023779"
  },
  {
    "text": "in here in containers and they actually",
    "start": "1023779",
    "end": "1025668"
  },
  {
    "text": "scale up or down based on the size of",
    "start": "1025669",
    "end": "1028160"
  },
  {
    "text": "the queue so more messages in the queue",
    "start": "1028160",
    "end": "1029808"
  },
  {
    "text": "and more work more containers are",
    "start": "1029809",
    "end": "1031250"
  },
  {
    "text": "spawned",
    "start": "1031250",
    "end": "1033490"
  },
  {
    "text": "cool so let's talk about what they just",
    "start": "1038789",
    "end": "1042009"
  },
  {
    "start": "1040000",
    "end": "1040000"
  },
  {
    "text": "said and why it's great so they didn't",
    "start": "1042009",
    "end": "1044620"
  },
  {
    "text": "need to build and operate a container",
    "start": "1044620",
    "end": "1046139"
  },
  {
    "text": "Orchestrator or a queueing service which",
    "start": "1046139",
    "end": "1048399"
  },
  {
    "text": "were two pivotal parts of that when I",
    "start": "1048399",
    "end": "1050379"
  },
  {
    "text": "came to scaling they also used services",
    "start": "1050379",
    "end": "1053409"
  },
  {
    "text": "like s3 and elastic transcoder which",
    "start": "1053409",
    "end": "1055840"
  },
  {
    "text": "were key elements of that whole process",
    "start": "1055840",
    "end": "1057159"
  },
  {
    "text": "that once again we were responsible for",
    "start": "1057159",
    "end": "1059200"
  },
  {
    "text": "the scaling of and they weren't so that",
    "start": "1059200",
    "end": "1061419"
  },
  {
    "text": "that's always a win and they built it",
    "start": "1061419",
    "end": "1063879"
  },
  {
    "text": "with an asynchronous pattern where a",
    "start": "1063879",
    "end": "1065499"
  },
  {
    "text": "customer uploads a video asks for a",
    "start": "1065499",
    "end": "1068409"
  },
  {
    "text": "particular thing to be done and then",
    "start": "1068409",
    "end": "1069909"
  },
  {
    "text": "they're told when it's finished and so",
    "start": "1069909",
    "end": "1071320"
  },
  {
    "text": "that lets them have this asynchronous",
    "start": "1071320",
    "end": "1072369"
  },
  {
    "text": "pattern that decouples the application",
    "start": "1072369",
    "end": "1074559"
  },
  {
    "text": "on people's phones and the API from this",
    "start": "1074559",
    "end": "1076360"
  },
  {
    "text": "batch processing where the work is done",
    "start": "1076360",
    "end": "1077860"
  },
  {
    "text": "and that queue gives them a shock",
    "start": "1077860",
    "end": "1080470"
  },
  {
    "text": "absorber and the time to scale which is",
    "start": "1080470",
    "end": "1083110"
  },
  {
    "text": "a pivotal thing they speak in another",
    "start": "1083110",
    "end": "1086619"
  },
  {
    "text": "video that I'm going to link you to",
    "start": "1086619",
    "end": "1087940"
  },
  {
    "text": "about some lessons that they've learned",
    "start": "1087940",
    "end": "1089259"
  },
  {
    "text": "is in this process and one of those",
    "start": "1089259",
    "end": "1092110"
  },
  {
    "text": "lessons was that they left a buffer of",
    "start": "1092110",
    "end": "1094659"
  },
  {
    "text": "20% extra capacity on their ECS cluster",
    "start": "1094659",
    "end": "1098590"
  },
  {
    "text": "to let them start scaling well the",
    "start": "1098590",
    "end": "1101289"
  },
  {
    "text": "instances were coming up because",
    "start": "1101289",
    "end": "1102460"
  },
  {
    "text": "containers launch very quickly but the",
    "start": "1102460",
    "end": "1104619"
  },
  {
    "text": "instances take a little bit longer so",
    "start": "1104619",
    "end": "1106480"
  },
  {
    "text": "having that buffer allowed them to make",
    "start": "1106480",
    "end": "1108279"
  },
  {
    "text": "sure that they were never out of",
    "start": "1108279",
    "end": "1109899"
  },
  {
    "text": "capacity they talked about with",
    "start": "1109899",
    "end": "1112059"
  },
  {
    "text": "terraform how they needed to put that",
    "start": "1112059",
    "end": "1114970"
  },
  {
    "text": "into a pipeline rather than having",
    "start": "1114970",
    "end": "1116139"
  },
  {
    "text": "developers deploy it like we had said",
    "start": "1116139",
    "end": "1117700"
  },
  {
    "text": "earlier and finally they were able to",
    "start": "1117700",
    "end": "1119639"
  },
  {
    "text": "decoupled",
    "start": "1119639",
    "end": "1120850"
  },
  {
    "text": "butts of their terraform from each other",
    "start": "1120850",
    "end": "1122619"
  },
  {
    "text": "so instead of it's the bits of it that",
    "start": "1122619",
    "end": "1124899"
  },
  {
    "text": "didn't change very often were segregated",
    "start": "1124899",
    "end": "1126519"
  },
  {
    "text": "from the bits that changed all the time",
    "start": "1126519",
    "end": "1128080"
  },
  {
    "text": "and it made the blast radius of any one",
    "start": "1128080",
    "end": "1130299"
  },
  {
    "text": "change a bit more manageable so here's a",
    "start": "1130299",
    "end": "1133990"
  },
  {
    "text": "link to the video that you just saw that",
    "start": "1133990",
    "end": "1136539"
  },
  {
    "text": "was a short clip of a longer video and",
    "start": "1136539",
    "end": "1138399"
  },
  {
    "text": "then there's another video where they",
    "start": "1138399",
    "end": "1139990"
  },
  {
    "text": "speak in depth on their approach at our",
    "start": "1139990",
    "end": "1142450"
  },
  {
    "text": "container loft in San Francisco so",
    "start": "1142450",
    "end": "1144690"
  },
  {
    "text": "definitely go and and watch those this",
    "start": "1144690",
    "end": "1149740"
  },
  {
    "text": "is other customer expedia doesn't need",
    "start": "1149740",
    "end": "1152350"
  },
  {
    "text": "any introduction I would hope if you",
    "start": "1152350",
    "end": "1154330"
  },
  {
    "text": "booked travel you probably did it with",
    "start": "1154330",
    "end": "1155950"
  },
  {
    "text": "them which you may not have known though",
    "start": "1155950",
    "end": "1157480"
  },
  {
    "text": "is that at the last reinvent they",
    "start": "1157480",
    "end": "1158740"
  },
  {
    "text": "announced that they're going all-in on",
    "start": "1158740",
    "end": "1159999"
  },
  {
    "text": "Amazon which is we're thrilled to have",
    "start": "1159999",
    "end": "1163179"
  },
  {
    "text": "them as a customer and we're gonna talk",
    "start": "1163179",
    "end": "1165759"
  },
  {
    "text": "a little bit about what they've built on",
    "start": "1165759",
    "end": "1166929"
  },
  {
    "text": "top of ECS it's an entire platform for",
    "start": "1166929",
    "end": "1169330"
  },
  {
    "text": "running micro services called primer and",
    "start": "1169330",
    "end": "1171009"
  },
  {
    "text": "these numbers are true",
    "start": "1171009",
    "end": "1172090"
  },
  {
    "text": "the big you know we're talking about",
    "start": "1172090",
    "end": "1174580"
  },
  {
    "text": "over a thousand applications over 2500",
    "start": "1174580",
    "end": "1177640"
  },
  {
    "text": "ECS services 13,000 containers running",
    "start": "1177640",
    "end": "1181120"
  },
  {
    "text": "across you know 860 instances they've",
    "start": "1181120",
    "end": "1185230"
  },
  {
    "text": "deployed across five of our regions and",
    "start": "1185230",
    "end": "1187150"
  },
  {
    "text": "they're doing well over 500 deploys a",
    "start": "1187150",
    "end": "1189279"
  },
  {
    "text": "day to their test environment so so",
    "start": "1189279",
    "end": "1191679"
  },
  {
    "text": "truly you know great numbers and scale",
    "start": "1191679",
    "end": "1194340"
  },
  {
    "text": "I'm going to let Expedia talk a little",
    "start": "1194340",
    "end": "1196750"
  },
  {
    "text": "bit about what they built and and how",
    "start": "1196750",
    "end": "1198429"
  },
  {
    "text": "it's gone for them though so here's a",
    "start": "1198429",
    "end": "1199840"
  },
  {
    "text": "another video so we internally within",
    "start": "1199840",
    "end": "1209890"
  },
  {
    "text": "Expedia we've created a micro Service",
    "start": "1209890",
    "end": "1211870"
  },
  {
    "text": "generation platform we call it primer",
    "start": "1211870",
    "end": "1213510"
  },
  {
    "text": "and teams will go to the internal primer",
    "start": "1213510",
    "end": "1216970"
  },
  {
    "text": "tool into the UI and they'll click a",
    "start": "1216970",
    "end": "1219520"
  },
  {
    "text": "button I want to create an app and you",
    "start": "1219520",
    "end": "1222340"
  },
  {
    "text": "can choose from a number of different",
    "start": "1222340",
    "end": "1223330"
  },
  {
    "text": "templates some JVM you know drop wizard",
    "start": "1223330",
    "end": "1225700"
  },
  {
    "text": "spring boot templates and ruby based",
    "start": "1225700",
    "end": "1227649"
  },
  {
    "text": "templates Python PHP Scala whatever is",
    "start": "1227649",
    "end": "1230710"
  },
  {
    "text": "being created by the internal community",
    "start": "1230710",
    "end": "1232149"
  },
  {
    "text": "will be available to the developer will",
    "start": "1232149",
    "end": "1234309"
  },
  {
    "text": "go through a series of processes to",
    "start": "1234309",
    "end": "1236289"
  },
  {
    "text": "create the application the docker image",
    "start": "1236289",
    "end": "1238630"
  },
  {
    "text": "and the builds and within 10 minutes",
    "start": "1238630",
    "end": "1241210"
  },
  {
    "text": "they'll have an application repository",
    "start": "1241210",
    "end": "1243190"
  },
  {
    "text": "for their micro service with a",
    "start": "1243190",
    "end": "1244750"
  },
  {
    "text": "continuous delivery pipeline ready for",
    "start": "1244750",
    "end": "1246370"
  },
  {
    "text": "commits a docker repository the",
    "start": "1246370",
    "end": "1248500"
  },
  {
    "text": "application will be built as a docker",
    "start": "1248500",
    "end": "1250539"
  },
  {
    "text": "image and deploy to a prod like testing",
    "start": "1250539",
    "end": "1252399"
  },
  {
    "text": "environment so within 10 minutes they",
    "start": "1252399",
    "end": "1254049"
  },
  {
    "text": "can get started with with their",
    "start": "1254049",
    "end": "1255220"
  },
  {
    "text": "experiment all those things that could",
    "start": "1255220",
    "end": "1257049"
  },
  {
    "text": "possibly take you you 1010 two weeks or",
    "start": "1257049",
    "end": "1259570"
  },
  {
    "text": "a month to do within within an",
    "start": "1259570",
    "end": "1261490"
  },
  {
    "text": "enterprise our teams within Expedia do",
    "start": "1261490",
    "end": "1264669"
  },
  {
    "text": "this 20 times a day every business day",
    "start": "1264669",
    "end": "1266740"
  },
  {
    "text": "there's 20 new micro services created",
    "start": "1266740",
    "end": "1269260"
  },
  {
    "text": "just because the cost is looked so low",
    "start": "1269260",
    "end": "1271690"
  },
  {
    "text": "they're people one can easily make an",
    "start": "1271690",
    "end": "1273640"
  },
  {
    "text": "experiment they say I want to test out",
    "start": "1273640",
    "end": "1274960"
  },
  {
    "text": "this this particular idea that I have",
    "start": "1274960",
    "end": "1277270"
  },
  {
    "text": "you might be wondering what those",
    "start": "1277270",
    "end": "1278500"
  },
  {
    "text": "distracting spikes are hackathons people",
    "start": "1278500",
    "end": "1282640"
  },
  {
    "text": "are getting excited about hacking away",
    "start": "1282640",
    "end": "1285159"
  },
  {
    "text": "on some new ideas so going back to the",
    "start": "1285159",
    "end": "1287169"
  },
  {
    "text": "question how long does it take to create",
    "start": "1287169",
    "end": "1288340"
  },
  {
    "text": "a micro service if it takes more than a",
    "start": "1288340",
    "end": "1290020"
  },
  {
    "text": "few days to go through this process all",
    "start": "1290020",
    "end": "1291789"
  },
  {
    "text": "the approvals and everything then your",
    "start": "1291789",
    "end": "1293140"
  },
  {
    "text": "teams are unlikely to consider even even",
    "start": "1293140",
    "end": "1295090"
  },
  {
    "text": "doing this the time bones to great and",
    "start": "1295090",
    "end": "1297159"
  },
  {
    "text": "there's",
    "start": "1297159",
    "end": "1299309"
  },
  {
    "text": "so the benefits of what they've done is",
    "start": "1305170",
    "end": "1308570"
  },
  {
    "text": "they're making it fast and easy to do",
    "start": "1308570",
    "end": "1310460"
  },
  {
    "text": "the right thing and what we see in this",
    "start": "1310460",
    "end": "1311990"
  },
  {
    "text": "image is the classic kind of example of",
    "start": "1311990",
    "end": "1313640"
  },
  {
    "text": "human behavior if you put barriers in",
    "start": "1313640",
    "end": "1315590"
  },
  {
    "text": "front of people if you make something",
    "start": "1315590",
    "end": "1316790"
  },
  {
    "text": "difficult they just going to go around",
    "start": "1316790",
    "end": "1317690"
  },
  {
    "text": "with whatever you're doing and they're",
    "start": "1317690",
    "end": "1319190"
  },
  {
    "text": "gonna do it in a way that is probably",
    "start": "1319190",
    "end": "1320690"
  },
  {
    "text": "not what you want right so what the",
    "start": "1320690",
    "end": "1322520"
  },
  {
    "text": "right thing meant at Expedia was that",
    "start": "1322520",
    "end": "1324530"
  },
  {
    "text": "they wanted people to develop an",
    "start": "1324530",
    "end": "1326420"
  },
  {
    "text": "experiment in micro-services rather than",
    "start": "1326420",
    "end": "1327950"
  },
  {
    "text": "changing the code in their legacy",
    "start": "1327950",
    "end": "1329600"
  },
  {
    "text": "monoliths they wanted more control over",
    "start": "1329600",
    "end": "1331610"
  },
  {
    "text": "their changes and deployments and they",
    "start": "1331610",
    "end": "1333440"
  },
  {
    "text": "want to consistently deploy it",
    "start": "1333440",
    "end": "1334700"
  },
  {
    "text": "inoperable services so they built the",
    "start": "1334700",
    "end": "1336680"
  },
  {
    "text": "automation to make it easy for their",
    "start": "1336680",
    "end": "1338720"
  },
  {
    "text": "developers to do this so one of the most",
    "start": "1338720",
    "end": "1342380"
  },
  {
    "start": "1341000",
    "end": "1341000"
  },
  {
    "text": "critical times is when you're changing",
    "start": "1342380",
    "end": "1344120"
  },
  {
    "text": "things and so I'll let them talk a",
    "start": "1344120",
    "end": "1345380"
  },
  {
    "text": "little bit about their deployment",
    "start": "1345380",
    "end": "1346670"
  },
  {
    "text": "process which is higher than when it's",
    "start": "1346670",
    "end": "1351980"
  },
  {
    "text": "changing",
    "start": "1351980",
    "end": "1354370"
  },
  {
    "text": "and when it comes to deploying to ECS we",
    "start": "1360869",
    "end": "1365860"
  },
  {
    "text": "split down the deployment phase in the",
    "start": "1365860",
    "end": "1367869"
  },
  {
    "text": "release phase and what that means is",
    "start": "1367869",
    "end": "1369730"
  },
  {
    "text": "that we want to allow a way for teams to",
    "start": "1369730",
    "end": "1372909"
  },
  {
    "text": "test their container is working in the",
    "start": "1372909",
    "end": "1376179"
  },
  {
    "text": "target environment before they send live",
    "start": "1376179",
    "end": "1377919"
  },
  {
    "text": "production traffic to it what that looks",
    "start": "1377919",
    "end": "1380019"
  },
  {
    "text": "like is this so they have a service",
    "start": "1380019",
    "end": "1382450"
  },
  {
    "text": "already running their applications",
    "start": "1382450",
    "end": "1383980"
  },
  {
    "text": "running on version one in ECS the four",
    "start": "1383980",
    "end": "1387100"
  },
  {
    "text": "boxes there represent four tasks each",
    "start": "1387100",
    "end": "1388899"
  },
  {
    "text": "running its own copy of of the container",
    "start": "1388899",
    "end": "1390850"
  },
  {
    "text": "that they've built that service will be",
    "start": "1390850",
    "end": "1393820"
  },
  {
    "text": "behind a load balancer which was behind",
    "start": "1393820",
    "end": "1395649"
  },
  {
    "text": "around 53 C name we want to go to",
    "start": "1395649",
    "end": "1398590"
  },
  {
    "text": "version 2 so what we'll do is create as",
    "start": "1398590",
    "end": "1401409"
  },
  {
    "text": "separate a separate ECS service called",
    "start": "1401409",
    "end": "1404499"
  },
  {
    "text": "the canary service and will deploy a",
    "start": "1404499",
    "end": "1406509"
  },
  {
    "text": "single task just for testing that's",
    "start": "1406509",
    "end": "1408340"
  },
  {
    "text": "going to be on version 2 it's the exact",
    "start": "1408340",
    "end": "1410080"
  },
  {
    "text": "same application but then a newer",
    "start": "1410080",
    "end": "1412330"
  },
  {
    "text": "version of the image as well behind his",
    "start": "1412330",
    "end": "1414489"
  },
  {
    "text": "own load balancer and its own route 53 C",
    "start": "1414489",
    "end": "1416440"
  },
  {
    "text": "name and teams can begin testing against",
    "start": "1416440",
    "end": "1418509"
  },
  {
    "text": "that canary when it comes to we call",
    "start": "1418509",
    "end": "1421450"
  },
  {
    "text": "that the deploy and then when it comes",
    "start": "1421450",
    "end": "1422590"
  },
  {
    "text": "to release time after they've tested",
    "start": "1422590",
    "end": "1424840"
  },
  {
    "text": "their deploy we use the Amazon's ECS",
    "start": "1424840",
    "end": "1428820"
  },
  {
    "text": "update service command which says ok",
    "start": "1428820",
    "end": "1431619"
  },
  {
    "text": "take this live running service and do an",
    "start": "1431619",
    "end": "1433659"
  },
  {
    "text": "implicit blue-green deploy on that what",
    "start": "1433659",
    "end": "1436509"
  },
  {
    "text": "that does is basically treats it like an",
    "start": "1436509",
    "end": "1438669"
  },
  {
    "text": "implicit blue going deploy by saying I'm",
    "start": "1438669",
    "end": "1441489"
  },
  {
    "text": "gonna create or replacement tasks that",
    "start": "1441489",
    "end": "1444429"
  },
  {
    "text": "the green tasks there and then you've",
    "start": "1444429",
    "end": "1447340"
  },
  {
    "text": "gotta be in mixed mode that you both",
    "start": "1447340",
    "end": "1448600"
  },
  {
    "text": "both version 1 and version 2 running",
    "start": "1448600",
    "end": "1450190"
  },
  {
    "text": "behind the load balancer and then once",
    "start": "1450190",
    "end": "1452559"
  },
  {
    "text": "version 2 tasks are successfully placed",
    "start": "1452559",
    "end": "1454809"
  },
  {
    "text": "behind the load balancer it removes the",
    "start": "1454809",
    "end": "1456340"
  },
  {
    "text": "old blue tasks and then you're running",
    "start": "1456340",
    "end": "1458409"
  },
  {
    "text": "your life service purely on version 2",
    "start": "1458409",
    "end": "1460509"
  },
  {
    "text": "and then we go ahead and delete the",
    "start": "1460509",
    "end": "1462549"
  },
  {
    "text": "canary so that's the that's how we do",
    "start": "1462549",
    "end": "1466320"
  },
  {
    "text": "and finally they talked a little bit",
    "start": "1470370",
    "end": "1473560"
  },
  {
    "text": "about the benefits they've gotten from",
    "start": "1473560",
    "end": "1474760"
  },
  {
    "text": "having invested all this in the",
    "start": "1474760",
    "end": "1476320"
  },
  {
    "text": "automation and what they're doing and so",
    "start": "1476320",
    "end": "1478060"
  },
  {
    "text": "I'll let in one brief more clip and",
    "start": "1478060",
    "end": "1481510"
  },
  {
    "text": "we'll we'll hear about some of the",
    "start": "1481510",
    "end": "1482560"
  },
  {
    "text": "benefits they've gotten from this whole",
    "start": "1482560",
    "end": "1483790"
  },
  {
    "text": "thing so it's a reduced cost of",
    "start": "1483790",
    "end": "1495850"
  },
  {
    "text": "experimentation and a fast feedback the",
    "start": "1495850",
    "end": "1499270"
  },
  {
    "text": "deployment automation gives us that that",
    "start": "1499270",
    "end": "1501610"
  },
  {
    "text": "that speed and safety when it comes to",
    "start": "1501610",
    "end": "1503740"
  },
  {
    "text": "reducing a lot of manual steps down to",
    "start": "1503740",
    "end": "1505960"
  },
  {
    "text": "repeatable reliable steps the click of a",
    "start": "1505960",
    "end": "1508300"
  },
  {
    "text": "button will fully automated and then the",
    "start": "1508300",
    "end": "1510640"
  },
  {
    "text": "cluster management the investment we",
    "start": "1510640",
    "end": "1511930"
  },
  {
    "text": "have therein in keeping those CCS",
    "start": "1511930",
    "end": "1513730"
  },
  {
    "text": "clusters maintained it means that we've",
    "start": "1513730",
    "end": "1516160"
  },
  {
    "text": "got those pre-built instances they're",
    "start": "1516160",
    "end": "1518020"
  },
  {
    "text": "ready to receive docker workloads and",
    "start": "1518020",
    "end": "1519640"
  },
  {
    "text": "and give me the ultimate speed at",
    "start": "1519640",
    "end": "1521860"
  },
  {
    "text": "deployment and auto scaling time and",
    "start": "1521860",
    "end": "1524110"
  },
  {
    "text": "also the sharing of those docker layers",
    "start": "1524110",
    "end": "1526390"
  },
  {
    "text": "that I mentioned increases the speed the",
    "start": "1526390",
    "end": "1528490"
  },
  {
    "text": "immutable server approach no",
    "start": "1528490",
    "end": "1530170"
  },
  {
    "text": "configuration drift and the ability to",
    "start": "1530170",
    "end": "1532240"
  },
  {
    "text": "auto scale horizontally so that's just",
    "start": "1532240",
    "end": "1535750"
  },
  {
    "text": "summarize the benefits we get so did we",
    "start": "1535750",
    "end": "1538870"
  },
  {
    "text": "succeed I mentioned that our mission as",
    "start": "1538870",
    "end": "1541300"
  },
  {
    "text": "a cloud acceleration team is to speed up",
    "start": "1541300",
    "end": "1542920"
  },
  {
    "text": "developers lines to make to make their",
    "start": "1542920",
    "end": "1544690"
  },
  {
    "text": "lives faster and easier so our",
    "start": "1544690",
    "end": "1546550"
  },
  {
    "text": "hypothesis was going back two and a half",
    "start": "1546550",
    "end": "1549130"
  },
  {
    "text": "years now when we when we embarked on",
    "start": "1549130",
    "end": "1550900"
  },
  {
    "text": "this journey we thought that we could",
    "start": "1550900",
    "end": "1552910"
  },
  {
    "text": "make developers lives faster maybe",
    "start": "1552910",
    "end": "1555070"
  },
  {
    "text": "double the speed at which it takes to",
    "start": "1555070",
    "end": "1556570"
  },
  {
    "text": "deploy using using docker instead of",
    "start": "1556570",
    "end": "1559450"
  },
  {
    "text": "dedicated ec2 instances the initial",
    "start": "1559450",
    "end": "1563440"
  },
  {
    "text": "primer approach did use docker ec2",
    "start": "1563440",
    "end": "1565540"
  },
  {
    "text": "instances and that would use chef to",
    "start": "1565540",
    "end": "1566980"
  },
  {
    "text": "build a.m. eyes and it would take about",
    "start": "1566980",
    "end": "1568690"
  },
  {
    "text": "30 minutes to deploy because it needs to",
    "start": "1568690",
    "end": "1571080"
  },
  {
    "text": "used to spin up a new instance it needs",
    "start": "1571080",
    "end": "1573730"
  },
  {
    "text": "to pull down chef set up all the all",
    "start": "1573730",
    "end": "1576160"
  },
  {
    "text": "those configuration and software and it",
    "start": "1576160",
    "end": "1579010"
  },
  {
    "text": "needs to burn in a ami and then create a",
    "start": "1579010",
    "end": "1581680"
  },
  {
    "text": "cloud formation stack for our our 2.0",
    "start": "1581680",
    "end": "1586450"
  },
  {
    "text": "approach using docker with ECS it takes",
    "start": "1586450",
    "end": "1588490"
  },
  {
    "text": "three minutes to do that that sound",
    "start": "1588490",
    "end": "1590290"
  },
  {
    "text": "process since this is just talking about",
    "start": "1590290",
    "end": "1591760"
  },
  {
    "text": "the initial deploy to the initial",
    "start": "1591760",
    "end": "1593740"
  },
  {
    "text": "testing environment so to get production",
    "start": "1593740",
    "end": "1596470"
  },
  {
    "text": "like feedback so we received that",
    "start": "1596470",
    "end": "1598510"
  },
  {
    "text": "feedback as a developer every commit",
    "start": "1598510",
    "end": "1600460"
  },
  {
    "text": "you'll receive that feedback twenty",
    "start": "1600460",
    "end": "1602020"
  },
  {
    "text": "seven minutes faster",
    "start": "1602020",
    "end": "1603420"
  },
  {
    "text": "because it takes advantage of having",
    "start": "1603420",
    "end": "1604860"
  },
  {
    "text": "that shared UCS infrastructure and now",
    "start": "1604860",
    "end": "1608910"
  },
  {
    "text": "developers do on average 524 deploys per",
    "start": "1608910",
    "end": "1611880"
  },
  {
    "text": "day per business day to our initial",
    "start": "1611880",
    "end": "1614010"
  },
  {
    "text": "testing environment so if you multiply",
    "start": "1614010",
    "end": "1616200"
  },
  {
    "text": "that out as you go further right you'll",
    "start": "1616200",
    "end": "1618120"
  },
  {
    "text": "see that five hundred twenty four times",
    "start": "1618120",
    "end": "1620400"
  },
  {
    "text": "twenty seven minutes that that's a",
    "start": "1620400",
    "end": "1621960"
  },
  {
    "text": "saving of about twenty nine and a half",
    "start": "1621960",
    "end": "1624420"
  },
  {
    "text": "business days every day so that means",
    "start": "1624420",
    "end": "1626550"
  },
  {
    "text": "that we developers will receive that",
    "start": "1626550",
    "end": "1629700"
  },
  {
    "text": "feedback and this is the most critical",
    "start": "1629700",
    "end": "1631170"
  },
  {
    "text": "feedback right it's the will this will",
    "start": "1631170",
    "end": "1633990"
  },
  {
    "text": "this commit that I've made will this",
    "start": "1633990",
    "end": "1635130"
  },
  {
    "text": "change I've made actually work in a",
    "start": "1635130",
    "end": "1636720"
  },
  {
    "text": "production line can borrow some of the",
    "start": "1636720",
    "end": "1647370"
  },
  {
    "text": "lessons that they learned we're around",
    "start": "1647370",
    "end": "1649400"
  },
  {
    "text": "knowing and working around all your",
    "start": "1649400",
    "end": "1651810"
  },
  {
    "text": "limits so so Amazon is some soft limits",
    "start": "1651810",
    "end": "1654150"
  },
  {
    "text": "which you can ask to be increased in",
    "start": "1654150",
    "end": "1655350"
  },
  {
    "text": "some harder limits which are constraints",
    "start": "1655350",
    "end": "1657720"
  },
  {
    "text": "you need to work around and say they",
    "start": "1657720",
    "end": "1659010"
  },
  {
    "text": "speak a bit about this in the video i",
    "start": "1659010",
    "end": "1660840"
  },
  {
    "text": "would recommend kind of watching it for",
    "start": "1660840",
    "end": "1662220"
  },
  {
    "text": "more detail and they also recommend",
    "start": "1662220",
    "end": "1664260"
  },
  {
    "text": "being very careful with your auto",
    "start": "1664260",
    "end": "1665220"
  },
  {
    "text": "scaling they give an example where if",
    "start": "1665220",
    "end": "1667650"
  },
  {
    "text": "you scale on both CPU and memory they",
    "start": "1667650",
    "end": "1670110"
  },
  {
    "text": "saw this thing where they would scale up",
    "start": "1670110",
    "end": "1672450"
  },
  {
    "text": "due to their not being enough memory and",
    "start": "1672450",
    "end": "1674550"
  },
  {
    "text": "then it would scale back down again",
    "start": "1674550",
    "end": "1675750"
  },
  {
    "text": "immediately because they weren't using",
    "start": "1675750",
    "end": "1677250"
  },
  {
    "text": "very much CPU so being careful with",
    "start": "1677250",
    "end": "1678690"
  },
  {
    "text": "these is very important so once again",
    "start": "1678690",
    "end": "1682230"
  },
  {
    "text": "here's some links to that talk that you",
    "start": "1682230",
    "end": "1684600"
  },
  {
    "text": "saw as well as some other things from",
    "start": "1684600",
    "end": "1685740"
  },
  {
    "text": "Expedia if you if you wanted to watch",
    "start": "1685740",
    "end": "1688320"
  },
  {
    "text": "those I highly recommend these videos",
    "start": "1688320",
    "end": "1689760"
  },
  {
    "text": "they're great",
    "start": "1689760",
    "end": "1692090"
  }
]