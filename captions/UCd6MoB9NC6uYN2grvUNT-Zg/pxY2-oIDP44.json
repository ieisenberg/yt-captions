[
  {
    "start": "0",
    "end": "195000"
  },
  {
    "text": "thanks everyone for joining the webinar today so as Pauling said this is all",
    "start": "439",
    "end": "6509"
  },
  {
    "text": "about using AWS purpose-built databases to modernize your applications the",
    "start": "6509",
    "end": "12030"
  },
  {
    "text": "agenda for today what we're going to go through is how the database market is changing how application architecture is",
    "start": "12030",
    "end": "20340"
  },
  {
    "text": "changing look at the AWS database services and have a bit of an overview of those then look at some organization",
    "start": "20340",
    "end": "27810"
  },
  {
    "text": "paths and how you can take what you have today and what your options are with a",
    "start": "27810",
    "end": "32969"
  },
  {
    "text": "bit of a focus on relational database modernization because that's primarily what most customers have today and then",
    "start": "32969",
    "end": "40020"
  },
  {
    "text": "we're going to look at how easy it is to actually do database upgrades once you're in our relational database",
    "start": "40020",
    "end": "46110"
  },
  {
    "text": "service so we can do a demo of that and then we're gonna talk about migrating to AWS using the database migration service",
    "start": "46110",
    "end": "53129"
  },
  {
    "text": "and schema conversion tool if you're going to be looking at refactoring or react protecting your applications then",
    "start": "53129",
    "end": "60120"
  },
  {
    "text": "sometimes it can be a bit of a chore to decide what data store you're going to use so we're gonna have a look at a",
    "start": "60120",
    "end": "65729"
  },
  {
    "text": "couple of ways of deciding how to do that and then we're going to go through a step by step approach of how you can",
    "start": "65729",
    "end": "71820"
  },
  {
    "text": "modernize an applications data tier and then end with a summary so moving on to",
    "start": "71820",
    "end": "78330"
  },
  {
    "text": "the first one the database market is changing quite rapidly and if you think",
    "start": "78330",
    "end": "85080"
  },
  {
    "text": "back to the beginning of computing where there was punch cards and magnetic tape",
    "start": "85080",
    "end": "90720"
  },
  {
    "text": "then eventually people realize that they needed to store data in a bit more of a structured way and that's when we saw",
    "start": "90720",
    "end": "97110"
  },
  {
    "text": "the network databases and codasyl databases coming into the market and then in the 70s we had the introduction",
    "start": "97110",
    "end": "105000"
  },
  {
    "text": "of the relational model and you saw databases like IBM's db2 coming into",
    "start": "105000",
    "end": "112290"
  },
  {
    "text": "play as well as Oracle and sequel server Sybase etc on the commercial side and",
    "start": "112290",
    "end": "118920"
  },
  {
    "text": "then on the open-source side you started to see Postgres and my sequel come a bit",
    "start": "118920",
    "end": "124770"
  },
  {
    "text": "later and those databases since you know the you know 70's 80's 90's and up until",
    "start": "124770",
    "end": "131340"
  },
  {
    "text": "today have being the mainstay of majority of application development so relational",
    "start": "131340",
    "end": "136760"
  },
  {
    "text": "databases have been what has given us most of our applications over the last",
    "start": "136760",
    "end": "142040"
  },
  {
    "text": "few years now looking at what's happened recently and by recently I'm talking",
    "start": "142040",
    "end": "148550"
  },
  {
    "text": "about from say around the 2010 mark is we started to see a whole lot of different database options come out in",
    "start": "148550",
    "end": "155900"
  },
  {
    "text": "the market and this was around in-memory databases no sequel databases or even",
    "start": "155900",
    "end": "161240"
  },
  {
    "text": "new sequel as a term that you may have heard and there is a databases like MongoDB Riak Cassandra in-memory caches",
    "start": "161240",
    "end": "171290"
  },
  {
    "text": "like memcache and then Redis as well so all of a sudden the relational only kind",
    "start": "171290",
    "end": "177380"
  },
  {
    "text": "of world has changed into having not only relational but all these other options to you to build a different and",
    "start": "177380",
    "end": "184580"
  },
  {
    "text": "more modern data architecture for applications especially in the web page",
    "start": "184580",
    "end": "189920"
  },
  {
    "text": "and the cloud age so what has actually you know being the traditional approach",
    "start": "189920",
    "end": "195530"
  },
  {
    "start": "195000",
    "end": "195000"
  },
  {
    "text": "of how you build and database architecture or an application on top of",
    "start": "195530",
    "end": "200600"
  },
  {
    "text": "it is you have a client here which would be traditionally a thick client could be",
    "start": "200600",
    "end": "205790"
  },
  {
    "text": "you know Java client or dotnet client connecting to an application or web tier",
    "start": "205790",
    "end": "211489"
  },
  {
    "text": "and then a database below that and of course the client could also be a browser then what you're trying to do",
    "start": "211489",
    "end": "219080"
  },
  {
    "text": "there is say that hey we're going to put everything into this relational database and it has to become this massive Swiss",
    "start": "219080",
    "end": "226370"
  },
  {
    "text": "Army knife in terms of being able to do all these different capabilities inside it and turns into a huge monolithic",
    "start": "226370",
    "end": "233630"
  },
  {
    "text": "beast and that means that inside there you are expecting it to do key value",
    "start": "233630",
    "end": "238700"
  },
  {
    "text": "access complex queries and transactions analytics perhaps even graphing and so",
    "start": "238700",
    "end": "244040"
  },
  {
    "text": "on and that is not what we traditionally want to see is we move into cloud-based",
    "start": "244040",
    "end": "249920"
  },
  {
    "text": "applications so on a cloud data tier architecture we're still going to have",
    "start": "249920",
    "end": "255650"
  },
  {
    "start": "251000",
    "end": "251000"
  },
  {
    "text": "the clients and the application and the web tier but we want to use the best database for each workload so when you",
    "start": "255650",
    "end": "262130"
  },
  {
    "text": "look at your data tier you'll probably find that you have different types of use case is in there and the you should be using",
    "start": "262130",
    "end": "268640"
  },
  {
    "text": "different databases for those so if we look at something like no sequel well what's best suited for that is key value",
    "start": "268640",
    "end": "275210"
  },
  {
    "start": "272000",
    "end": "272000"
  },
  {
    "text": "and simple query if you have a lot of hot reads that are hitting you know couple of blocks inside a relational",
    "start": "275210",
    "end": "282050"
  },
  {
    "text": "data store or pages then that's clearly data that perhaps you could just move out into an end memory cache complex",
    "start": "282050",
    "end": "289460"
  },
  {
    "text": "queries and transactions well that still is best handled by a relational database and then you've got things like data",
    "start": "289460",
    "end": "295370"
  },
  {
    "text": "warehouses for analytics blobstore for logging we still see especially in applications that were developed in the",
    "start": "295370",
    "end": "301850"
  },
  {
    "text": "90s and early 2000s there's a lot of like application logging that actually goes into the database itself so we want",
    "start": "301850",
    "end": "308480"
  },
  {
    "text": "to take that out and then our research so looking at things like searching logs or even application search is very",
    "start": "308480",
    "end": "315440"
  },
  {
    "text": "important so if we look at this in a bit more detail and go through each of the",
    "start": "315440",
    "end": "321650"
  },
  {
    "start": "319000",
    "end": "319000"
  },
  {
    "text": "different types of database characteristics that we see on the relational side what you're getting",
    "start": "321650",
    "end": "327260"
  },
  {
    "text": "there is that strong referential integrity with strong consistency you're getting transactions and hardened scales",
    "start": "327260",
    "end": "333470"
  },
  {
    "text": "so you know this is tried and tested technology and from the Amazon side we have Amazon Aurora and Amazon RDS and",
    "start": "333470",
    "end": "340820"
  },
  {
    "text": "we're gonna go into each of these services a bit later so in more detail but we're just giving you a heads up of what's available for each of these",
    "start": "340820",
    "end": "346250"
  },
  {
    "text": "different types of characteristics on the key/value side this is where you've",
    "start": "346250",
    "end": "351290"
  },
  {
    "text": "got really low latency you just got a key that you're going to pull back some data and you want that to be very high",
    "start": "351290",
    "end": "356840"
  },
  {
    "text": "throughput in terms of getting data in and out and Amazon DynamoDB is a great",
    "start": "356840",
    "end": "362090"
  },
  {
    "text": "solution for that on the document side of things where you're indexing and storing documents and then you want to",
    "start": "362090",
    "end": "368540"
  },
  {
    "text": "be able to query any particular property inside that document Amazon DynamoDB also supports a document model there as",
    "start": "368540",
    "end": "376340"
  },
  {
    "text": "well on the graph side what we're seeing is that this is becoming more and more",
    "start": "376340",
    "end": "383240"
  },
  {
    "text": "popular so if you've got a lot of relations between different types of",
    "start": "383240",
    "end": "388760"
  },
  {
    "text": "data then this can be quite hard to represent in a relational model especially where it's recursively",
    "start": "388760",
    "end": "395470"
  },
  {
    "text": "related and this is where we see graph databases coming into play and a good example of",
    "start": "395470",
    "end": "401870"
  },
  {
    "text": "this is something that you probably all use in terms of social media where you've got strong relationships between",
    "start": "401870",
    "end": "407570"
  },
  {
    "text": "different people and different entities as you're going through that social",
    "start": "407570",
    "end": "412700"
  },
  {
    "text": "media graph now our Amazon Neptune is a new graph database that we have released",
    "start": "412700",
    "end": "418040"
  },
  {
    "text": "recently and is available for you to solve those problems in memory what",
    "start": "418040",
    "end": "424160"
  },
  {
    "text": "we're seeing now is that you know we really want to be able to provide super fast access to data and we've got to do",
    "start": "424160",
    "end": "430550"
  },
  {
    "text": "that in microsecond latency again ASCII based queries and sometimes you might have some specialized data structures",
    "start": "430550",
    "end": "436310"
  },
  {
    "text": "that you can put in here and we see that Amazon ElastiCache for reticent memcache are very good for these types of",
    "start": "436310",
    "end": "442220"
  },
  {
    "text": "workloads finally search so indexing and searching semi structured logs and data",
    "start": "442220",
    "end": "447740"
  },
  {
    "text": "that is really where Amazon Elastic search service comes into its own and the Edison I mentioned is something that",
    "start": "447740",
    "end": "454310"
  },
  {
    "text": "we often saw inside relational databases but is more and more being pulled out and into its own dedicated data store so",
    "start": "454310",
    "end": "462860"
  },
  {
    "text": "that's the the data base well changing and what we're going to talk about now",
    "start": "462860",
    "end": "468050"
  },
  {
    "text": "is the application architecture and how that is changing so this slide",
    "start": "468050",
    "end": "473210"
  },
  {
    "text": "represents micro services at Amazon in terms of how the amazon.com website",
    "start": "473210",
    "end": "478630"
  },
  {
    "start": "474000",
    "end": "474000"
  },
  {
    "text": "interacts and you can see that there is a bunch of tiny little dots on there some are blue some are red some of them",
    "start": "478630",
    "end": "486440"
  },
  {
    "text": "are correspond to services which customers interact with and other are internal services and all of these come",
    "start": "486440",
    "end": "492590"
  },
  {
    "text": "together to enable you to shop on amazon.com and these are all micro",
    "start": "492590",
    "end": "498500"
  },
  {
    "text": "services so it's based on the service orientated architecture concept and each",
    "start": "498500",
    "end": "503960"
  },
  {
    "text": "of these individual micro services are single purpose and you connect through them only through API so there's no",
    "start": "503960",
    "end": "510560"
  },
  {
    "text": "other way to get to them and you connect to them over HTTP so secure HTTP",
    "start": "510560",
    "end": "517729"
  },
  {
    "text": "connection and that's fundamentally what the micro services are all about at a very high level now if you're looking at",
    "start": "517729",
    "end": "525560"
  },
  {
    "start": "524000",
    "end": "524000"
  },
  {
    "text": "how we've moved along here we can see that we've got monolithic on the left",
    "start": "525560",
    "end": "531080"
  },
  {
    "text": "and that is still what large number of people are doing today where they're developing large",
    "start": "531080",
    "end": "536810"
  },
  {
    "text": "executables and deploying those into production then people have been looking",
    "start": "536810",
    "end": "542210"
  },
  {
    "text": "since the late 90s and early 2000s about breaking up those monoliths into service",
    "start": "542210",
    "end": "548630"
  },
  {
    "text": "orientated architecture applications where you can see here these are coarse-grained functions often held",
    "start": "548630",
    "end": "555170"
  },
  {
    "text": "together with something like an enterprise service bus and then finally the next stage is where these have been",
    "start": "555170",
    "end": "560450"
  },
  {
    "text": "broken down even further into micro services where they're very fine-grained now there's two main advantages that I",
    "start": "560450",
    "end": "568100"
  },
  {
    "text": "see with micro services the first one is what most people I think relate to them is being able to scale your applications",
    "start": "568100",
    "end": "575180"
  },
  {
    "text": "much further than what you could from a monolithic perspective and that's because each of those individual micro",
    "start": "575180",
    "end": "580520"
  },
  {
    "text": "services can be scaled independently depending on the workload that is coming towards them so you don't restricted by",
    "start": "580520",
    "end": "587180"
  },
  {
    "text": "having this one executable that can only scale to the biggest box you can now split that up and for all these individual different components that can",
    "start": "587180",
    "end": "593720"
  },
  {
    "text": "then scale up for the same size of those business biggest boxes so you've got great a greater scalability now that I",
    "start": "593720",
    "end": "600920"
  },
  {
    "text": "think is very important but it really is not as important as what I think the agility gains that you get from adopting",
    "start": "600920",
    "end": "606980"
  },
  {
    "text": "micro services is and this is that you're able to have each of these individual micro services being",
    "start": "606980",
    "end": "613100"
  },
  {
    "text": "developed by independent teams deciding on what makes sense for them and really accelerating their development and",
    "start": "613100",
    "end": "620150"
  },
  {
    "text": "having full control as long as they maintain their API then they can make",
    "start": "620150",
    "end": "625520"
  },
  {
    "text": "changes to the application and the technology at their own pace and deploy features whenever they like rather than",
    "start": "625520",
    "end": "631339"
  },
  {
    "text": "relying on this one monolithic single unit being ready for deployment and that really accelerates at time to market for",
    "start": "631339",
    "end": "638320"
  },
  {
    "text": "features and of course hopefully increases customer satisfaction and revenue opportunities so looking at",
    "start": "638320",
    "end": "646490"
  },
  {
    "start": "645000",
    "end": "645000"
  },
  {
    "text": "micro services more from another technology side of things it means that there's no real long term commitment to",
    "start": "646490",
    "end": "651980"
  },
  {
    "text": "a technology stack if you have a monolithic environment you've got to choose your technology stack and stick to it and everybody across the whole",
    "start": "651980",
    "end": "658310"
  },
  {
    "text": "organization has to use it because it is that one executable once you get into",
    "start": "658310",
    "end": "663380"
  },
  {
    "text": "micro services you get into a polyglot ecosystem and a polygon assistance so this means that each micro",
    "start": "663380",
    "end": "668520"
  },
  {
    "text": "service team can use whatever they like to actually implement and deploy their",
    "start": "668520",
    "end": "673950"
  },
  {
    "text": "particular micro service we see then that one of the other kind of patterns",
    "start": "673950",
    "end": "679530"
  },
  {
    "text": "is that databases get decomposed because we end up with a database per micro",
    "start": "679530",
    "end": "685170"
  },
  {
    "text": "service pattern and this doesn't necessarily lend us well lend itself well to commercial databases where you",
    "start": "685170",
    "end": "691200"
  },
  {
    "text": "have to pay licensing fee so you can imagine that if you had a monolithic",
    "start": "691200",
    "end": "696420"
  },
  {
    "text": "database and then you had to break that up into micro services and you were going to use commercial databases like Oracle database or sequel server you",
    "start": "696420",
    "end": "702330"
  },
  {
    "text": "have to pay for the licensing then we're seeing more and more interest of using open source databases because of the",
    "start": "702330",
    "end": "709260"
  },
  {
    "text": "additional costs in this particular model so we do find that this is forcing some",
    "start": "709260",
    "end": "717620"
  },
  {
    "text": "change on the way people think about modernizing their applications as well and but the last part there is that",
    "start": "717620",
    "end": "723290"
  },
  {
    "text": "allows easy use of canary and Bluegreen deployments and what they mean by this is that you can try all different",
    "start": "723290",
    "end": "728480"
  },
  {
    "text": "versions of your micro-services and enable that to be done quite easily so you can see if it does have a good",
    "start": "728480",
    "end": "734570"
  },
  {
    "text": "impact in terms of the business change that you've made so that means the the",
    "start": "734570",
    "end": "740690"
  },
  {
    "text": "database market is changing we're seeing the application architecture is changing and then you're saying okay well what",
    "start": "740690",
    "end": "746570"
  },
  {
    "text": "does AWS have to offer given that there's all these changes in terms of different data platforms and database",
    "start": "746570",
    "end": "752990"
  },
  {
    "text": "services so what I'm going to do now is go through and give you a quick overview of the database services that we have",
    "start": "752990",
    "end": "759050"
  },
  {
    "start": "759000",
    "end": "759000"
  },
  {
    "text": "available on our platform now this diagram represents them overall kind of",
    "start": "759050",
    "end": "765500"
  },
  {
    "text": "view of the core services there are actually more services than what's described here especially in the AI and",
    "start": "765500",
    "end": "772610"
  },
  {
    "text": "ml side of things but I'm gonna start from the bottom and then move up so we",
    "start": "772610",
    "end": "778339"
  },
  {
    "text": "look at data movement we've got the database migration service so this allows you to migrate and move data",
    "start": "778339",
    "end": "783980"
  },
  {
    "text": "between different databases and we're going to talk about that in more detail later we've got snow ball and snowmobile",
    "start": "783980",
    "end": "790130"
  },
  {
    "text": "which are physical devices that you can actually order from us and then we will",
    "start": "790130",
    "end": "795440"
  },
  {
    "text": "help you put data onto those particular devices and then retrieve them and insert them into AWS and snowball is",
    "start": "795440",
    "end": "802760"
  },
  {
    "text": "like a suitcase size device and snowmobiles actually requires a truck to deliver it so there's a lot of data you",
    "start": "802760",
    "end": "809660"
  },
  {
    "text": "can do there and then Kinesis data fire hose and Kinesis data streams are all about getting your data easily into AWS",
    "start": "809660",
    "end": "817190"
  },
  {
    "text": "and processing it on the network now where you better put all this data somewhere so moving up to the next layer",
    "start": "817190",
    "end": "822740"
  },
  {
    "text": "on the data lake what we see is s3 and glacier so these are our some of our",
    "start": "822740",
    "end": "828890"
  },
  {
    "text": "storage services and s3 is commonly where customers put their blog based",
    "start": "828890",
    "end": "834200"
  },
  {
    "text": "data and glacier is more for doing backups and archiving and then glue is",
    "start": "834200",
    "end": "841460"
  },
  {
    "text": "used for ETL functions and very importantly a data catalog because you need to be able to define where",
    "start": "841460",
    "end": "847310"
  },
  {
    "text": "data is and what it is so you can get hold of it again and then Macy is a data protection service that is constantly",
    "start": "847310",
    "end": "853490"
  },
  {
    "text": "monitoring things going on and for example if you leave an s3 bucket open and public then it will tell you that",
    "start": "853490",
    "end": "860329"
  },
  {
    "text": "you have done that to make sure that you're protecting your data and locking it away from prying eyes then moving up",
    "start": "860329",
    "end": "866420"
  },
  {
    "text": "to the next side on the Left we've got operational OLTP de databases we've got",
    "start": "866420",
    "end": "871819"
  },
  {
    "text": "dynamo DB Neptune ElastiCache Aurora and RDS and we're going to talk about these",
    "start": "871819",
    "end": "877430"
  },
  {
    "text": "more so these are primarily the databases that you would be building",
    "start": "877430",
    "end": "882620"
  },
  {
    "text": "your traditional operational applications around and then on the right-hand side analytics",
    "start": "882620",
    "end": "889220"
  },
  {
    "text": "we've got Ola in decision support Amazon redshift is our petabyte scale MPP",
    "start": "889220",
    "end": "896059"
  },
  {
    "text": "database for doing analytics and then EMR is our Hadoop platform so inside",
    "start": "896059",
    "end": "903709"
  },
  {
    "text": "that you've got the whole ecosystem around spark spark streaming presto and",
    "start": "903709",
    "end": "909800"
  },
  {
    "text": "so on so that's offered as a managed service and then athena allows you to query data directly on s3 through a",
    "start": "909800",
    "end": "917809"
  },
  {
    "text": "standard sequel interface without the need to provision any services or servers so it really is quite a powerful",
    "start": "917809",
    "end": "924500"
  },
  {
    "text": "thing you can actually go and just run a query and get the results directly from",
    "start": "924500",
    "end": "929930"
  },
  {
    "text": "the data on s3 and then you've got real time you've got elastic search service and Kinesis data analytics so can either",
    "start": "929930",
    "end": "937100"
  },
  {
    "text": "state Kinesis data analytics allows you to run sequel queries on data streaming through Kinesis and that's a really",
    "start": "937100",
    "end": "943040"
  },
  {
    "text": "powerful for that real-time results where you're trying to build things up like KPI monitors and those types of",
    "start": "943040",
    "end": "948920"
  },
  {
    "text": "things and talking to actually building up results then the next level up we've",
    "start": "948920",
    "end": "954500"
  },
  {
    "text": "got business intelligence and machine learning so Amazon quick site is our visualization tool and that allows you",
    "start": "954500",
    "end": "961490"
  },
  {
    "text": "to build reports and stories around your data and then machine learning behind the scenes there we've got a whole bunch",
    "start": "961490",
    "end": "967790"
  },
  {
    "text": "of tools such as sage at maker and then the AI side of things there are other",
    "start": "967790",
    "end": "974660"
  },
  {
    "text": "tools as well so they were not going to cover off those in today's session what we are actually going to focus on",
    "start": "974660",
    "end": "980840"
  },
  {
    "text": "is the operational side of things so I'm going to go through these in more detail so Amazon RDS the relational database",
    "start": "980840",
    "end": "988670"
  },
  {
    "start": "988000",
    "end": "988000"
  },
  {
    "text": "service gives you a list of six different databases that you choose as",
    "start": "988670",
    "end": "995660"
  },
  {
    "text": "your kind of engine and inside that there are different options so for example Amazon Aurora is our own take on",
    "start": "995660",
    "end": "1003520"
  },
  {
    "text": "my sequel and Postgres so there's two options for you inside that then we do have community edition of my sequel and",
    "start": "1003520",
    "end": "1010690"
  },
  {
    "text": "Postgres we've got Maria DB which is a database for those of you who don't know which is kind of a fork from my sequel",
    "start": "1010690",
    "end": "1017710"
  },
  {
    "text": "the original creators and people who are using that are concerned about say Oracle's ownership of my sequel and",
    "start": "1017710",
    "end": "1025510"
  },
  {
    "text": "prefer a more you know true open source approach if you like to database",
    "start": "1025510",
    "end": "1031360"
  },
  {
    "text": "software then on Microsoft sequel server and oracle side we support the major",
    "start": "1031360",
    "end": "1038500"
  },
  {
    "text": "additions that they offer so for example with sequel server you can use Express you can also use Standard Edition and Enterprise Edition",
    "start": "1038500",
    "end": "1045760"
  },
  {
    "text": "and we can provide licenses by the hour for those databases now on the Oracle",
    "start": "1045760",
    "end": "1051670"
  },
  {
    "text": "side of things we can provide licenses by the hour for Standard Edition 1 and Standard Edition 2 but for Enterprise",
    "start": "1051670",
    "end": "1057550"
  },
  {
    "text": "Edition you still have to bring your own license for that so you can still run Enterprise Edition on RDS but you need",
    "start": "1057550",
    "end": "1063280"
  },
  {
    "text": "to bring your own license so RDS is very easy to administer",
    "start": "1063280",
    "end": "1068440"
  },
  {
    "text": "it's very flexible so you can scale a database up and down with a few clicks",
    "start": "1068440",
    "end": "1073720"
  },
  {
    "text": "and that really is very hard to do on premise so it's quite easy to do that",
    "start": "1073720",
    "end": "1079750"
  },
  {
    "text": "with RDS it's also available and durable so multi a-z is our capability where we",
    "start": "1079750",
    "end": "1086050"
  },
  {
    "text": "can deploy a database across two physical data centers we will have a master in one data center and a standby",
    "start": "1086050",
    "end": "1092980"
  },
  {
    "text": "in another data center and these are kept synchronously up-to-date so if something goes wrong with the master we",
    "start": "1092980",
    "end": "1099220"
  },
  {
    "text": "will automatically failover to the standby and because they are automatically kept up-to-date there is",
    "start": "1099220",
    "end": "1105520"
  },
  {
    "text": "no data loss when that fell over occurs so there will be a short outage around 30 to 90 seconds and then your",
    "start": "1105520",
    "end": "1112180"
  },
  {
    "text": "application will be a keeper being able to run and you don't really have to do anything so what would happen",
    "start": "1112180",
    "end": "1118450"
  },
  {
    "text": "is let's say if this happened at 2:00 a.m. you would not even know from a business perspective if it was a",
    "start": "1118450",
    "end": "1124150"
  },
  {
    "text": "business hours application the users will come in in the morning and everything would still be running so it's a very good managed service to help",
    "start": "1124150",
    "end": "1131230"
  },
  {
    "text": "you with that it's also a fast because if we've got dual SSD back storage for",
    "start": "1131230",
    "end": "1136390"
  },
  {
    "text": "high-performance OLTP and we've got a large number of different types of instances with up to four Oracle 128 V",
    "start": "1136390",
    "end": "1144610"
  },
  {
    "text": "CPUs and four terabytes of RAM so some very large and file servers with good",
    "start": "1144610",
    "end": "1150400"
  },
  {
    "text": "storage to help you with your database performance Amazon Arora as I mentioned",
    "start": "1150400",
    "end": "1156490"
  },
  {
    "text": "is our take if you like on creating a database that is providing the",
    "start": "1156490",
    "end": "1162460"
  },
  {
    "start": "1157000",
    "end": "1157000"
  },
  {
    "text": "performance and availability of commercial grade databases but for one-tenth the cost now our performance",
    "start": "1162460",
    "end": "1168820"
  },
  {
    "text": "and scalability is something that we've rarely worked with on this database so you're going to see on the same hardware",
    "start": "1168820",
    "end": "1174340"
  },
  {
    "text": "at the very high end of throughput about five times more throughput compared with",
    "start": "1174340",
    "end": "1180340"
  },
  {
    "text": "standard my sequel and about three times more throughput when compared with",
    "start": "1180340",
    "end": "1186250"
  },
  {
    "text": "standard Postgres now the key thing here is this is not performance right you're not going to be able to run a single",
    "start": "1186250",
    "end": "1192550"
  },
  {
    "text": "query on your laptop and then go and run that a single query on Aurora my sequel",
    "start": "1192550",
    "end": "1198400"
  },
  {
    "text": "and get five times the performance this is all about three ports so being able to on the hard the same hardware doing",
    "start": "1198400",
    "end": "1204790"
  },
  {
    "text": "up to five times the amount of work and that's a really important distinction to make",
    "start": "1204790",
    "end": "1210070"
  },
  {
    "text": "so availability and durability another key factor here is the storage that we",
    "start": "1210070",
    "end": "1216610"
  },
  {
    "text": "built with Amazon Aurora it allows you to have six copies of your data across three availability zones and that is",
    "start": "1216610",
    "end": "1224170"
  },
  {
    "text": "continuously backed up to Amazon s3 now s3 alone has 11 nines of durability and",
    "start": "1224170",
    "end": "1229690"
  },
  {
    "text": "then you've got six copies of the actual live data across those three availability zones so the availability",
    "start": "1229690",
    "end": "1235990"
  },
  {
    "text": "and durability components of Amazon Aurora is exceedingly high then it is also secure so we've got network",
    "start": "1235990",
    "end": "1242860"
  },
  {
    "text": "isolation you don't actually have access to the storage nodes and then on the encryption side",
    "start": "1242860",
    "end": "1248200"
  },
  {
    "text": "we can do encryption at rest and in transit it is also fully managed just like a standard RDS environment the",
    "start": "1248200",
    "end": "1255100"
  },
  {
    "text": "interface is also very similar to RDS so there's no hardware provisioning you just go ahead and say I want this type",
    "start": "1255100",
    "end": "1262720"
  },
  {
    "text": "of instance and I'm going to have these patching arrangements and then you set everything up and the backups windows",
    "start": "1262720",
    "end": "1269169"
  },
  {
    "text": "and maintenance windows were all provisioned for you now on Amazon",
    "start": "1269169",
    "end": "1274509"
  },
  {
    "text": "DynamoDB so this is our no sequel service what we're looking at here is a tier 0",
    "start": "1274509",
    "end": "1281049"
  },
  {
    "start": "1275000",
    "end": "1275000"
  },
  {
    "text": "service for AWS and Amazon Amazon depends heavily on DynamoDB to run the",
    "start": "1281049",
    "end": "1287649"
  },
  {
    "text": "dot-com website as well as AWS itself so this is super important to us and",
    "start": "1287649",
    "end": "1294129"
  },
  {
    "text": "therefore is something that you can depend on for business critical applications it is also highly scalable",
    "start": "1294129",
    "end": "1300249"
  },
  {
    "text": "a single table can serve millions of requests per second and we can store hundreds of terabytes of data you also",
    "start": "1300249",
    "end": "1307899"
  },
  {
    "text": "get really good consistent performance and you can speed that up by adding a cache in front of DynamoDB as well and",
    "start": "1307899",
    "end": "1315489"
  },
  {
    "text": "then that's built into the product now through what we call dynamo DB accelerator or Dax it's fully managed it",
    "start": "1315489",
    "end": "1322899"
  },
  {
    "text": "really is very simple to use you simply specify a table and how many reads and writes you would like with that you can",
    "start": "1322899",
    "end": "1330249"
  },
  {
    "text": "also let it auto scale which is something that was added recently so talking about features that we have",
    "start": "1330249",
    "end": "1337149"
  },
  {
    "text": "added recently for dynamo DB going back to last year in February time to live",
    "start": "1337149",
    "end": "1343239"
  },
  {
    "text": "this is really important because there was a lot of customers who were ingesting data into DynamoDB and then",
    "start": "1343239",
    "end": "1348309"
  },
  {
    "text": "they didn't really need it after a period of time so now we automatically go and delete that data for them",
    "start": "1348309",
    "end": "1354009"
  },
  {
    "text": "previously as you would have known if you've used it you would have to actually pay for that deletion operation",
    "start": "1354009",
    "end": "1359859"
  },
  {
    "text": "with TTL you actually don't have to pay for that it just happens in the background so that's a great addition",
    "start": "1359859",
    "end": "1366700"
  },
  {
    "text": "with VPC endpoints you now don't have to go across the public Internet to access the dynamodb end points and then",
    "start": "1366700",
    "end": "1374919"
  },
  {
    "text": "dynamodb accelerator or dec as I mentioned is a cache there's in front of dynamodb to give you that microsecond",
    "start": "1374919",
    "end": "1381760"
  },
  {
    "text": "time and it is a right through cash so if you're writing you're still going to go back to DynamoDB to make sure the",
    "start": "1381760",
    "end": "1388390"
  },
  {
    "text": "data is persisted but if you're reading you're reading directly from the cache you don't need to go back to dynamodb",
    "start": "1388390",
    "end": "1393430"
  },
  {
    "text": "with auto-scaling what you can do is set some limits so you don't spend too much money and then dynamodb will Auto scale",
    "start": "1393430",
    "end": "1400300"
  },
  {
    "text": "from the minimum and maximum that you've provided we also last year introduced",
    "start": "1400300",
    "end": "1406030"
  },
  {
    "text": "global tables and this allows you to have a multi master applications where you're going to have let's say in a",
    "start": "1406030",
    "end": "1412570"
  },
  {
    "text": "Singapore region and then in the Mumbai region a single table view where you can",
    "start": "1412570",
    "end": "1418210"
  },
  {
    "text": "read and write to that across both regions so if you're deploying globally and you want to have consistent data",
    "start": "1418210",
    "end": "1424480"
  },
  {
    "text": "across these different regions then DynamoDB allows you to do global tables",
    "start": "1424480",
    "end": "1430960"
  },
  {
    "text": "on November we also announced backup and restore so even though DynamoDB is",
    "start": "1430960",
    "end": "1437230"
  },
  {
    "text": "stored across three different syllabus we are now have introduced a backup and restore to allow you to manage a",
    "start": "1437230",
    "end": "1443920"
  },
  {
    "text": "production environment and restore it create copies of it and so on and then",
    "start": "1443920",
    "end": "1449110"
  },
  {
    "text": "finally in February we introduced encryption at rest and this was really important for regulated environments",
    "start": "1449110",
    "end": "1456370"
  },
  {
    "text": "such as financial institutions government and telcos etc looking at",
    "start": "1456370",
    "end": "1463960"
  },
  {
    "text": "Amazon Neptune so this is our fully managed graph database it is fast you",
    "start": "1463960",
    "end": "1470230"
  },
  {
    "start": "1464000",
    "end": "1464000"
  },
  {
    "text": "can query billions of relationships with a millisecond latency it also adopts the",
    "start": "1470230",
    "end": "1475900"
  },
  {
    "text": "same model as Amazon Aurora with six replicas of your data across three availabilities availability zones with",
    "start": "1475900",
    "end": "1483160"
  },
  {
    "text": "full backup and restore it's powerful to it you can build powerful queries with",
    "start": "1483160",
    "end": "1489190"
  },
  {
    "text": "Gremlin and the sparkle query languages and these are some of the common and you",
    "start": "1489190",
    "end": "1495190"
  },
  {
    "text": "know easy to use languages to create graph based queries and it also is very open and supports apache tinker pop and",
    "start": "1495190",
    "end": "1502120"
  },
  {
    "text": "the w3c RDF graph models so you can really you know keep the data in a",
    "start": "1502120",
    "end": "1508720"
  },
  {
    "text": "fairly open format and bring that between different systems if you wish",
    "start": "1508720",
    "end": "1514140"
  },
  {
    "text": "now some people you know and say well what is this graph stuff and what are some of the different",
    "start": "1514140",
    "end": "1520060"
  },
  {
    "text": "scenarios that we can you use graph for well as I mentioned earlier on in the presentation",
    "start": "1520060",
    "end": "1525330"
  },
  {
    "text": "social newsfeed or a social network is a very graph based model where you have",
    "start": "1525330",
    "end": "1531730"
  },
  {
    "text": "friends you're related to who are also liking things and whether your friends",
    "start": "1531730",
    "end": "1537400"
  },
  {
    "text": "like something might be more important to you versus somebody else who's like something so there's all these kind of",
    "start": "1537400",
    "end": "1542950"
  },
  {
    "text": "different relationships in a social network that can be represented by a graph also on restaurant restaurant",
    "start": "1542950",
    "end": "1548760"
  },
  {
    "text": "recommendations if you have friends who like particular things and you can trust",
    "start": "1548760",
    "end": "1554110"
  },
  {
    "text": "those friends then you may find that you want to get recommendations more favored",
    "start": "1554110",
    "end": "1560590"
  },
  {
    "text": "from your friends rather than strangers again and that can help from a graph model to represent and weight the",
    "start": "1560590",
    "end": "1567180"
  },
  {
    "text": "recommendations based on those types of algorithms and then something that we're",
    "start": "1567180",
    "end": "1572530"
  },
  {
    "text": "seeing quite a lot of adoption of is around fraud detection whether it's in retail or banking or other industries",
    "start": "1572530",
    "end": "1579550"
  },
  {
    "text": "and if you look at what the different attributes that are on this particular slide you've got a person who has a",
    "start": "1579550",
    "end": "1585670"
  },
  {
    "text": "phone a credit card and address an IP you know an email address and then you can correlate that to an order and if",
    "start": "1585670",
    "end": "1592360"
  },
  {
    "text": "you see start start seeing anomalies where perhaps this is being used perhaps for this transaction from a different",
    "start": "1592360",
    "end": "1597910"
  },
  {
    "text": "phone then that might give you a score of something that you can calculate and",
    "start": "1597910",
    "end": "1603070"
  },
  {
    "text": "then if it's from a different IP then that could probably give you you you know another kind of point of difference",
    "start": "1603070",
    "end": "1611050"
  },
  {
    "text": "and you could start to say well from a scoring perspective that there's going to be some high probability of fraud",
    "start": "1611050",
    "end": "1616300"
  },
  {
    "text": "when these things differ too much over time and that is something that we're really seeing a strong usage model in",
    "start": "1616300",
    "end": "1623230"
  },
  {
    "text": "the graph database world with an Amazon Neptune with ElastiCache what we're",
    "start": "1623230",
    "end": "1630280"
  },
  {
    "start": "1629000",
    "end": "1629000"
  },
  {
    "text": "seeing here is a fully managed service for Redis or memcache and this is all",
    "start": "1630280",
    "end": "1636520"
  },
  {
    "text": "about in-memory data stores or caching so we really want to use this for extreme performance where you're getting",
    "start": "1636520",
    "end": "1644230"
  },
  {
    "text": "sub millisecond response times and it's secured in the harden so you've got your VPC endpoints",
    "start": "1644230",
    "end": "1649910"
  },
  {
    "text": "you've got +4 isolation you've got encryption at rest and entry in transit and like many of the other services that",
    "start": "1649910",
    "end": "1656000"
  },
  {
    "text": "there are different compliances that we have and HIPAA is mentioned here it's also available in most of our other",
    "start": "1656000",
    "end": "1661550"
  },
  {
    "text": "services as is PCI and others also very scalable so you can now do read scaling",
    "start": "1661550",
    "end": "1669140"
  },
  {
    "text": "with replicas and you can do sharding and have clusters and so on so a lot of flexibility and how you deploy and then",
    "start": "1669140",
    "end": "1676310"
  },
  {
    "text": "multi a-z for Redis where we can have a master with read replicas and if",
    "start": "1676310",
    "end": "1681770"
  },
  {
    "text": "something goes wrong we can failover to those 3 traffickers so where we see",
    "start": "1681770",
    "end": "1688010"
  },
  {
    "text": "these types of in memory data stores and caches being used is really when you are",
    "start": "1688010",
    "end": "1693950"
  },
  {
    "start": "1689000",
    "end": "1689000"
  },
  {
    "text": "scaling up applications to above and beyond what a relational database can do",
    "start": "1693950",
    "end": "1699050"
  },
  {
    "text": "and you know this has definitely been where we've seen problems with gaming",
    "start": "1699050",
    "end": "1705380"
  },
  {
    "text": "where gaming leaderboards are being hit all of the time and if you keep going back to a relational database that can",
    "start": "1705380",
    "end": "1710840"
  },
  {
    "text": "put heavy load on that so if you can offload that and put that into a cache you can protect your database at the",
    "start": "1710840",
    "end": "1717200"
  },
  {
    "text": "back end and if you're not needing as many cause of your database then that",
    "start": "1717200",
    "end": "1722420"
  },
  {
    "text": "can actually reduce cost especially if it is a commercial database like say Microsoft sequel server where you pay",
    "start": "1722420",
    "end": "1728480"
  },
  {
    "text": "per individual core so this allows customers to scale their applications",
    "start": "1728480",
    "end": "1734480"
  },
  {
    "text": "and to reduce costs and what we're seeing is that some customers can really",
    "start": "1734480",
    "end": "1739970"
  },
  {
    "text": "use this to great advantage so grab which is a ride-hailing company based",
    "start": "1739970",
    "end": "1745190"
  },
  {
    "text": "out of Singapore and focusing on Southeast Asia users ElastiCache heavily for their application and whether you're",
    "start": "1745190",
    "end": "1752750"
  },
  {
    "text": "using it in the Philippines or in Indonesia or Singapore etc you are depending on ElastiCache to deliver",
    "start": "1752750",
    "end": "1760790"
  },
  {
    "text": "those rate ride-hailing services so now",
    "start": "1760790",
    "end": "1766550"
  },
  {
    "text": "that you've understood that the database market is changing the application architecture is changing and we've got",
    "start": "1766550",
    "end": "1772100"
  },
  {
    "text": "all of these different services and AWS that you can use you need to start deciding well what my modernization",
    "start": "1772100",
    "end": "1779480"
  },
  {
    "text": "parts how can I take my applications I have today and what do I actually do with them so this next slide is called the six",
    "start": "1779480",
    "end": "1787370"
  },
  {
    "start": "1785000",
    "end": "1785000"
  },
  {
    "text": "hours of migration planning and you may have seen it on other AWS presentations",
    "start": "1787370",
    "end": "1792410"
  },
  {
    "text": "as well so let's go through the different options here so the first thing that you will have to do and this",
    "start": "1792410",
    "end": "1797540"
  },
  {
    "text": "is especially relevant for enterprise customers that have a large fleet of databases and applications you need to",
    "start": "1797540",
    "end": "1803600"
  },
  {
    "text": "go through and discover assess and prioritize what you're going to do with particular applications and then you're",
    "start": "1803600",
    "end": "1809810"
  },
  {
    "text": "going to have to decide do you retain those or retire them and in which case",
    "start": "1809810",
    "end": "1815630"
  },
  {
    "text": "there's not much modernization to do but the other options all have different aspects and turn them in terms of",
    "start": "1815630",
    "end": "1821540"
  },
  {
    "text": "modernization so the first one is Rijos that is just what we call lift and shift so you're going to take what you have",
    "start": "1821540",
    "end": "1828230"
  },
  {
    "text": "and move that in to AWS so at that point you're really not modernizing anything you're just taking what you have putting",
    "start": "1828230",
    "end": "1834500"
  },
  {
    "text": "it on new hardware so perhaps you're getting modernization from a hardware perspective but not the application side",
    "start": "1834500",
    "end": "1840110"
  },
  {
    "text": "of things on the replac form side that's where you can look at perhaps a new",
    "start": "1840110",
    "end": "1845240"
  },
  {
    "text": "operating system changing the operating system version upgrading the database to",
    "start": "1845240",
    "end": "1851150"
  },
  {
    "text": "a later version press changing the database and then the next one is repurchase so this could be you have a",
    "start": "1851150",
    "end": "1857600"
  },
  {
    "text": "packaged application and what you're going to do is go and buy a SAS version",
    "start": "1857600",
    "end": "1863360"
  },
  {
    "text": "of that that perhaps operates out of AWS or maybe you're going to get the next version and upgrade that modernize it",
    "start": "1863360",
    "end": "1869270"
  },
  {
    "text": "and then deploy that into AWS and then finally the last one there is the react",
    "start": "1869270",
    "end": "1875330"
  },
  {
    "text": "attack and refactor so this is where you get the opportunity to look at your existing application and say well this",
    "start": "1875330",
    "end": "1881240"
  },
  {
    "text": "really needs to be modernized we need to add some different components and capabilities to this it's no longer meeting business requirements and that's",
    "start": "1881240",
    "end": "1888260"
  },
  {
    "text": "where you get a chance to either completely rewrite it or perhaps break up some components and modernize some components of that application but this",
    "start": "1888260",
    "end": "1895490"
  },
  {
    "text": "is really a good example of the different options that you have now one",
    "start": "1895490",
    "end": "1900890"
  },
  {
    "text": "of the most common decision points you have to look out for most customers is that relational databases need to be",
    "start": "1900890",
    "end": "1907700"
  },
  {
    "text": "modernized and most applications of course as I mentioned are still using relational databases so there are a",
    "start": "1907700",
    "end": "1915020"
  },
  {
    "text": "number of concerns coming up for different Oracle databases sequel server databases as well as my sequel and",
    "start": "1915020",
    "end": "1921560"
  },
  {
    "text": "Postgres and this is all about keeping software current and making sure things are modern so I recall 11g r2 requires",
    "start": "1921560",
    "end": "1929420"
  },
  {
    "text": "additional extended support contracts and additional fees from January 1 2019",
    "start": "1929420",
    "end": "1935120"
  },
  {
    "text": "with support ending on December 31st 2020 so Oracle kindly wave some of the",
    "start": "1935120",
    "end": "1942920"
  },
  {
    "text": "extended support fees for 11g dr2 for the last couple years and unfortunately",
    "start": "1942920",
    "end": "1949490"
  },
  {
    "text": "they are going to charge for that from January 1 so if you forgot Oracle databases on 11 PR 2 you will have to",
    "start": "1949490",
    "end": "1957110"
  },
  {
    "text": "start paying additional support for that with Microsoft sequel server 2008 and",
    "start": "1957110",
    "end": "1962180"
  },
  {
    "text": "2008 r2 they are already in extended support with the support ending on July 9 2019",
    "start": "1962180",
    "end": "1970450"
  },
  {
    "text": "Microsoft can be run in AWS in fact we're one of the only platforms that",
    "start": "1970450",
    "end": "1977150"
  },
  {
    "text": "actually allows you to deploy 32-bit applications in the AWS platform so that",
    "start": "1977150",
    "end": "1983960"
  },
  {
    "text": "can really help with some of these older applications at least give you some time time to decide how you are going to",
    "start": "1983960",
    "end": "1990560"
  },
  {
    "text": "modernize those by deploying them on AWS with my sequel 5.5 the support ends on",
    "start": "1990560",
    "end": "1996290"
  },
  {
    "text": "December 2018 and then in Postgres 9.3 support actually just ended in September",
    "start": "1996290",
    "end": "2003300"
  },
  {
    "text": "2018 so with the RDS Postgres we've just been through a D suppose to upgrade to",
    "start": "2003300",
    "end": "2012370"
  },
  {
    "text": "the next or later editions of Postgres and that is something that we do do on the RDS environment because we need to",
    "start": "2012370",
    "end": "2019300"
  },
  {
    "text": "make sure that we can continue to provide security patches and other fixes for our customers and protect the",
    "start": "2019300",
    "end": "2025630"
  },
  {
    "text": "overall fleet so if you still want to run some of these older or unsupported environments so you can do that",
    "start": "2025630",
    "end": "2031750"
  },
  {
    "text": "definitely on AWS but you have to do that in ec2 not on RDS so what are your",
    "start": "2031750",
    "end": "2039460"
  },
  {
    "start": "2039000",
    "end": "2039000"
  },
  {
    "text": "options once you decide well yes we definitely need to do the upgrading how are we going to tackle this and get rid",
    "start": "2039460",
    "end": "2045580"
  },
  {
    "text": "of these databases that are now going to be end-of-life well you can upgrade on Prem and keep",
    "start": "2045580",
    "end": "2050860"
  },
  {
    "text": "things on-prem of you like but you can also do a new option on frame and that is upgrade on prem with amazon RDS on",
    "start": "2050860",
    "end": "2057990"
  },
  {
    "text": "vmware this is something that was just announced with vmware recently it's not available today but it will be available",
    "start": "2057990",
    "end": "2064570"
  },
  {
    "text": "soon but allows you to run the audio environment on-premise with vmware you",
    "start": "2064570",
    "end": "2070929"
  },
  {
    "text": "can also choose to migrate to AWS on vmware and then upgrade or migrate to",
    "start": "2070930",
    "end": "2076360"
  },
  {
    "text": "ec2 and RDS and then do the upgrade there or you can migrate directly to a",
    "start": "2076360",
    "end": "2082450"
  },
  {
    "text": "later version in AWS whether it's on ec2 or RDS or whatever you could also decide",
    "start": "2082450",
    "end": "2087850"
  },
  {
    "text": "to migrate to another database so for example you could go from oracle to my sequel and if it's on RDS you could use",
    "start": "2087850",
    "end": "2095919"
  },
  {
    "text": "the single click upgrade option which i'm going to show you now so imagine",
    "start": "2095920",
    "end": "2102670"
  },
  {
    "text": "what you have to do when you are actually going to go through an upgrade of say an oracle database it's quite an",
    "start": "2102670",
    "end": "2109270"
  },
  {
    "text": "involved process that requires a lot of testing and takes a long time so to help",
    "start": "2109270",
    "end": "2114460"
  },
  {
    "text": "you do that i'm going to show you now how we do that inside AWS so this is the",
    "start": "2114460",
    "end": "2121150"
  },
  {
    "text": "RDS interface and i've got a couple of databases here the upgrade me one is the",
    "start": "2121150",
    "end": "2126520"
  },
  {
    "text": "one I'm going to choose today so this is Oracle 11 to 0 for the V 16 justing is",
    "start": "2126520",
    "end": "2133600"
  },
  {
    "text": "our internal versioning that includes different patches and PS use that have been applied etc and then on the DB",
    "start": "2133600",
    "end": "2140200"
  },
  {
    "text": "instance class it's an R for to excel so what we're going to do here is just",
    "start": "2140200",
    "end": "2145510"
  },
  {
    "text": "modify this instance so we'll click on that and then down here we're simply",
    "start": "2145510",
    "end": "2152590"
  },
  {
    "text": "going to go to this drop-down and then choose the next version of Oracle that's",
    "start": "2152590",
    "end": "2159040"
  },
  {
    "text": "available and get the latest version so the default and that's all we're going to change just that one click to go and",
    "start": "2159040",
    "end": "2165550"
  },
  {
    "text": "select that and then we go down to the bottom and we want to continue and then",
    "start": "2165550",
    "end": "2173560"
  },
  {
    "text": "the modification here you see moving from this particular version to this one changing some parameter groups and then",
    "start": "2173560",
    "end": "2180310"
  },
  {
    "text": "the key point you need to do here is this says apply during the next scale maintenance window we don't want that we",
    "start": "2180310",
    "end": "2188089"
  },
  {
    "text": "want to apply immediately but if you do have a maintenance window you want to a here - then you just keep to that now",
    "start": "2188089",
    "end": "2194329"
  },
  {
    "text": "notice there's a potential unexpected downtime if you had other things that we're going to happen in your scheduled",
    "start": "2194329",
    "end": "2200240"
  },
  {
    "text": "maintenance window when you click apply immediately those things will also get done so for example maybe you allocated",
    "start": "2200240",
    "end": "2206450"
  },
  {
    "text": "another hungry gig of storage to the database that was going to happen in the maintenance window that would now happen at this time as well",
    "start": "2206450",
    "end": "2212210"
  },
  {
    "text": "so I click modify database instance and then that's now going to be upgrading so",
    "start": "2212210",
    "end": "2219140"
  },
  {
    "text": "if I go back to the database list you can see that this is now upgrading now we'll come back at the end but I think",
    "start": "2219140",
    "end": "2226849"
  },
  {
    "text": "this is going to take too long it takes I think about half an hour so we're probably not going to quite make it for the actual webinar period but I",
    "start": "2226849",
    "end": "2234320"
  },
  {
    "text": "conveniently do have another one I did last night and I can show you how long that takes you're looking at the logs when we come back so once you've decided",
    "start": "2234320",
    "end": "2246710"
  },
  {
    "text": "that ok we do want to actually migrate some of these databases to AWS how do you go about doing that well we need to",
    "start": "2246710",
    "end": "2255170"
  },
  {
    "text": "use the AWS database migration service so this is all about moving data between",
    "start": "2255170",
    "end": "2261190"
  },
  {
    "start": "2256000",
    "end": "2256000"
  },
  {
    "text": "different databases so the databases that are listed down below some of these",
    "start": "2261190",
    "end": "2266569"
  },
  {
    "text": "are sources and targets some of them are targets only and some of them are",
    "start": "2266569",
    "end": "2272060"
  },
  {
    "text": "sources only so for example DynamoDB is at the moment a target only MongoDB is a",
    "start": "2272060",
    "end": "2279770"
  },
  {
    "text": "saucer only and other databases like Postgres Oracle my sequel sequel server",
    "start": "2279770",
    "end": "2285970"
  },
  {
    "text": "Aurora Murray DB etc they are actually available as sources and targets now I",
    "start": "2285970",
    "end": "2293599"
  },
  {
    "text": "have included Cassandra on this slide but Cassandra is actually a combination of using the schema conversion tool and",
    "start": "2293599",
    "end": "2300770"
  },
  {
    "text": "EMS today but I just wanted to highlight as one of the databases that we do",
    "start": "2300770",
    "end": "2305960"
  },
  {
    "text": "support so this is the database migration service and then we do have",
    "start": "2305960",
    "end": "2311390"
  },
  {
    "text": "the schema conversion tool so why do we need these different tools well as I",
    "start": "2311390",
    "end": "2316430"
  },
  {
    "start": "2312000",
    "end": "2312000"
  },
  {
    "text": "mentioned the database migration services all about moving the data now the schema",
    "start": "2316430",
    "end": "2321650"
  },
  {
    "text": "conversion tool is all about moving the database definitions themselves so the code around the store procedures the",
    "start": "2321650",
    "end": "2327440"
  },
  {
    "text": "triggers the table definitions and data types and all these types of things so we support migration of different",
    "start": "2327440",
    "end": "2334340"
  },
  {
    "text": "databases to the open source engines and on the data warehouse side to Amazon",
    "start": "2334340",
    "end": "2340730"
  },
  {
    "text": "redshift now you can get quite good conversion rates even from say Oracle",
    "start": "2340730",
    "end": "2346910"
  },
  {
    "text": "databases with quite a bit of PL sequel in there and we are continuing to",
    "start": "2346910",
    "end": "2351950"
  },
  {
    "text": "improve the tool and improve the conversion rates as we go along as well so if you did look at this say a year",
    "start": "2351950",
    "end": "2359240"
  },
  {
    "text": "ago and you weren't happy with the conversion results please do have a look at it again and evaluate it and see what",
    "start": "2359240",
    "end": "2365960"
  },
  {
    "text": "has changed so how you use these tools together first you would either convert",
    "start": "2365960",
    "end": "2371990"
  },
  {
    "start": "2369000",
    "end": "2369000"
  },
  {
    "text": "or copy your schema with say a native tool or the schema conversion tool copying is all about taking something",
    "start": "2371990",
    "end": "2378800"
  },
  {
    "text": "that perhaps you don't have the schema CIM creation scripts for say an old Oracle database and you just need to",
    "start": "2378800",
    "end": "2384680"
  },
  {
    "text": "copy from the production system to a new database once that's been done you've got a new database with an empty schema",
    "start": "2384680",
    "end": "2390830"
  },
  {
    "text": "so you've got the table definitions the foreign key constraints the primary key",
    "start": "2390830",
    "end": "2397130"
  },
  {
    "text": "constraints the triggers store procedures all that stuff's defined but there's no data so at that point you",
    "start": "2397130",
    "end": "2402140"
  },
  {
    "text": "then need to move your data use it using either DMS to divert a standard database and the way DMS works is it's going to",
    "start": "2402140",
    "end": "2409850"
  },
  {
    "text": "keep transmitting that data while your production application is running and that allows you then once it's all caught up to switch over with minimal",
    "start": "2409850",
    "end": "2417080"
  },
  {
    "text": "downtime so it's using change data capture technology to do the migration and then you may want to migrate a data",
    "start": "2417080",
    "end": "2424640"
  },
  {
    "text": "warehouse and the schema conversion tool allows you to do that in a much more efficient way for large data sets by",
    "start": "2424640",
    "end": "2430790"
  },
  {
    "text": "taking data into text files putting that on necessary and then loading it into Amazon redshift now we do have no sequel",
    "start": "2430790",
    "end": "2439430"
  },
  {
    "text": "support as I mentioned so MongoDB is supported to go to DynamoDB or to RDS",
    "start": "2439430",
    "end": "2445370"
  },
  {
    "text": "and cassandra by default will just be supported through the automated way for",
    "start": "2445370",
    "end": "2450950"
  },
  {
    "text": "using the schema conversion tool in DMS to DynamoDB but if you're prepared to do some manual tasks then you can actually",
    "start": "2450950",
    "end": "2457010"
  },
  {
    "text": "take a Sandra data to a relational data with DMS as well now some people want to",
    "start": "2457010",
    "end": "2464089"
  },
  {
    "text": "move between you say relational databases to no sequels so we also support taking data from a relational",
    "start": "2464089",
    "end": "2471650"
  },
  {
    "text": "format into DynamoDB as well and this is",
    "start": "2471650",
    "end": "2477500"
  },
  {
    "text": "a really interesting feature so more and more customers are looking to build data lakes and putting that data into s3 as",
    "start": "2477500",
    "end": "2484549"
  },
  {
    "text": "the data repository so we now support putting data from operational data",
    "start": "2484549",
    "end": "2490520"
  },
  {
    "text": "stores into s3 continuously so as the applications are updating the data in",
    "start": "2490520",
    "end": "2496339"
  },
  {
    "text": "say a Postgres or call database that is constantly being streamed into s3 we can",
    "start": "2496339",
    "end": "2501619"
  },
  {
    "text": "also take data that is being streamed into s3 and then propagate that to databases using DMS as well so this",
    "start": "2501619",
    "end": "2509809"
  },
  {
    "text": "becomes a very powerful way to start building out that data lay strategy but using integration technologies using",
    "start": "2509809",
    "end": "2517369"
  },
  {
    "text": "change data capture with the DMS product now one of the great things that the",
    "start": "2517369",
    "end": "2523640"
  },
  {
    "text": "schema conversion tool does is it allows you to look at how hard a migration is going to be so it does this by assessing",
    "start": "2523640",
    "end": "2530900"
  },
  {
    "start": "2524000",
    "end": "2524000"
  },
  {
    "text": "the schema and what it will do is look at the database objects or the tables",
    "start": "2530900",
    "end": "2535910"
  },
  {
    "text": "and the constraints and indexes etc and that will tell you how hard it's going",
    "start": "2535910",
    "end": "2541130"
  },
  {
    "text": "to be to migrate those then it will also look at the code object so the triggers and the store procedures and tell you",
    "start": "2541130",
    "end": "2547250"
  },
  {
    "text": "how complicated those are so you get a nice graph view of how complicated the migration will be and then on the",
    "start": "2547250",
    "end": "2553339"
  },
  {
    "text": "right-hand side of this slide you'll see that we also list out all of the individual things that we found that are",
    "start": "2553339",
    "end": "2560270"
  },
  {
    "text": "going to be a problem as part of the migration and then you can go through this report and work out is this",
    "start": "2560270",
    "end": "2566540"
  },
  {
    "text": "something that you're going to be able to fix or is this something that is going to be so inherent to the",
    "start": "2566540",
    "end": "2571640"
  },
  {
    "text": "application that it's not doesn't make sense to do a migration and that's what this tool is all about so you don't",
    "start": "2571640",
    "end": "2577640"
  },
  {
    "text": "actually have to go and do the migration to figure out whether it's feasible or not",
    "start": "2577640",
    "end": "2584020"
  },
  {
    "text": "so we've had more than 90-thousand databases migrated with DMS so far and as you can see here from the customers",
    "start": "2584270",
    "end": "2590000"
  },
  {
    "text": "they are customers from all different types of countries and backgrounds industries etc and all having success",
    "start": "2590000",
    "end": "2597740"
  },
  {
    "text": "with the database migration service to migrate their databases so now we've",
    "start": "2597740",
    "end": "2605420"
  },
  {
    "text": "covered you know the different ways that you would look at bringing bringing existing applications into AWS but what",
    "start": "2605420",
    "end": "2612560"
  },
  {
    "text": "about if you were going to refactor or react attack their application and then",
    "start": "2612560",
    "end": "2618050"
  },
  {
    "text": "you have to decide well what are the data stores that you're going to use and how do you decide that well many",
    "start": "2618050",
    "end": "2624770"
  },
  {
    "text": "problems can be solved with no sequel relational database or even in-memory cache technologies so you could use any",
    "start": "2624770",
    "end": "2632150"
  },
  {
    "start": "2625000",
    "end": "2625000"
  },
  {
    "text": "of those to solve common problems so what we tend to go and use is non-functional requirements that can",
    "start": "2632150",
    "end": "2638420"
  },
  {
    "text": "help identify appropriate services and what we ask customers to do is classify your organization's non-functional",
    "start": "2638420",
    "end": "2645770"
  },
  {
    "text": "requirements and map them to service capability so we're going to go through and show you how to do that so here is a",
    "start": "2645770",
    "end": "2652130"
  },
  {
    "text": "list of non-functional requirements things like latency durability storage scale availability etc now this is our",
    "start": "2652130",
    "end": "2659900"
  },
  {
    "start": "2653000",
    "end": "2653000"
  },
  {
    "text": "only an example right you may have many more different requirements and your classifications could very well and",
    "start": "2659900",
    "end": "2665570"
  },
  {
    "text": "should be different than what we're saying here so please don't take this slide and say blared said that this is",
    "start": "2665570",
    "end": "2670670"
  },
  {
    "text": "what we need to do it's really a guideline and there will be other requirements such as regulatory",
    "start": "2670670",
    "end": "2676250"
  },
  {
    "text": "compliance as well so we really need to look at this as a guideline and build out your own but it's a good example of",
    "start": "2676250",
    "end": "2682580"
  },
  {
    "text": "the approach so you may find that for example a particular application could have very high latency requirements or",
    "start": "2682580",
    "end": "2689510"
  },
  {
    "text": "less than 20 milliseconds but the storage scale could be very low of less than 256 goodbye' gigabytes so for each",
    "start": "2689510",
    "end": "2695750"
  },
  {
    "text": "application you need to go through here and decide what makes more sense for your particular environment and once",
    "start": "2695750",
    "end": "2702560"
  },
  {
    "text": "you've done that and then you can actually map these requirements to our",
    "start": "2702560",
    "end": "2707660"
  },
  {
    "text": "services so here you can see that I've listed out some of the services and then mapped out what their capabilities are",
    "start": "2707660",
    "end": "2714920"
  },
  {
    "start": "2708000",
    "end": "2708000"
  },
  {
    "text": "on this particular site now I've just noticed an error which I'm going to have to fix on here but RDS the storage is actually",
    "start": "2714920",
    "end": "2723020"
  },
  {
    "text": "16 terabytes now for all engines not just sequel server so that's something",
    "start": "2723020",
    "end": "2728480"
  },
  {
    "text": "that I need to fix but fundamentally what we've done here is list out these services we've also combined some",
    "start": "2728480",
    "end": "2734510"
  },
  {
    "text": "services so Aurora plus ElastiCache that actually allows you to combine two",
    "start": "2734510",
    "end": "2740120"
  },
  {
    "text": "services to get a better latency requirement for your particular application when you've done this this",
    "start": "2740120",
    "end": "2746840"
  },
  {
    "text": "should hopefully then shorten the amount of services that you have that meet your",
    "start": "2746840",
    "end": "2752330"
  },
  {
    "text": "non-functional requirements and then you can start applying functional requirements such as geospatial spatial",
    "start": "2752330",
    "end": "2758420"
  },
  {
    "start": "2753000",
    "end": "2753000"
  },
  {
    "text": "data and query support and that will help you refine that list further so for example if you do fine I mean that a we",
    "start": "2758420",
    "end": "2765050"
  },
  {
    "text": "could use a raw in my sequel or a raw Postgres which one should we do and then you start getting to the geospatial data",
    "start": "2765050",
    "end": "2771680"
  },
  {
    "text": "requirements then Postgres has got a really great implementation around posters and that has highly regarded in",
    "start": "2771680",
    "end": "2779030"
  },
  {
    "text": "the industry so I would then favor going to the Postgres if both my sequel and",
    "start": "2779030",
    "end": "2785560"
  },
  {
    "text": "Postgres meet your functional i--sorry non-functional requirements you then may",
    "start": "2785560",
    "end": "2791090"
  },
  {
    "text": "look at instituting standards especially when you're into her service development so make sure it's easier for people to",
    "start": "2791090",
    "end": "2797930"
  },
  {
    "text": "move between those teams so for example if you have a micro service team which is focused on net with sequel server and",
    "start": "2797930",
    "end": "2804080"
  },
  {
    "text": "then another one which is perhaps using sage arvo with Postgres well then the",
    "start": "2804080",
    "end": "2809600"
  },
  {
    "text": "people on those teams are not necessary going to be able to move across and help each others out of there only know those",
    "start": "2809600",
    "end": "2814820"
  },
  {
    "text": "particular skills so in a large organization you might try and standardize some of those developments but fundamentally you should still allow",
    "start": "2814820",
    "end": "2822020"
  },
  {
    "text": "them to be overridden where it is justified and that's where we see that senior management can have a process in",
    "start": "2822020",
    "end": "2829160"
  },
  {
    "text": "place where you can apply to use a different technology and then get that approved where it makes sense now",
    "start": "2829160",
    "end": "2836840"
  },
  {
    "text": "looking at modernizing and application data tier step by step what we've done",
    "start": "2836840",
    "end": "2842750"
  },
  {
    "text": "here is taken an actual customer example and this is from a gaming customer and",
    "start": "2842750",
    "end": "2847780"
  },
  {
    "text": "showing the steps that they did to take a fairly stock standard location then add different components",
    "start": "2847780",
    "end": "2854240"
  },
  {
    "text": "to their data tier to help that application scale and modernize it as their requirements changed so looking at",
    "start": "2854240",
    "end": "2862460"
  },
  {
    "text": "this diagram here we have got a fairly standard application where it's got a",
    "start": "2862460",
    "end": "2869930"
  },
  {
    "text": "user at the top who is receiving DNS information from Amazon route 53 and then getting CloudFront",
    "start": "2869930",
    "end": "2876920"
  },
  {
    "text": "data that's cached at the edge from Amazon s3 and when they need to access",
    "start": "2876920",
    "end": "2882020"
  },
  {
    "text": "the application components it goes into ec2 with an auto scaling group and then",
    "start": "2882020",
    "end": "2887150"
  },
  {
    "text": "below that you've got a master instance running on RDS with a standby in another",
    "start": "2887150",
    "end": "2893090"
  },
  {
    "text": "availability zone so this is a stop standard environment and in this case it was actually a lamp stack now what the",
    "start": "2893090",
    "end": "2901430"
  },
  {
    "text": "customer wanted to do was to make sure they could scale this application so they started to introduce read replicas",
    "start": "2901430",
    "end": "2907430"
  },
  {
    "text": "and this allowed them to get some way forward and scale to more users but",
    "start": "2907430",
    "end": "2913190"
  },
  {
    "text": "fundamentally what would happen is that the marketing department would send out a lot of invites for promotions or for",
    "start": "2913190",
    "end": "2921980"
  },
  {
    "text": "this particular game and then they would get a logon storm so if you analyze your data tier and find out where are the",
    "start": "2921980",
    "end": "2928820"
  },
  {
    "text": "problems what you're going to find is that there are going to be components that get a lot of activity and of course",
    "start": "2928820",
    "end": "2934760"
  },
  {
    "text": "I would say a lot of users coming on creating a logon storm then you can take that component and put into something",
    "start": "2934760",
    "end": "2941420"
  },
  {
    "text": "else so in this component and this example what they did is they took out the user management and log on system",
    "start": "2941420",
    "end": "2947300"
  },
  {
    "text": "and put that into dynamo dB and because dynamo DB can scale infinitely and what",
    "start": "2947300",
    "end": "2952850"
  },
  {
    "text": "they are able to do is take that load off the relational system and protect the relational database that couldn't",
    "start": "2952850",
    "end": "2957860"
  },
  {
    "text": "handle that before and then they were able to able to get better performance",
    "start": "2957860",
    "end": "2963290"
  },
  {
    "text": "and scale for their game and better results for their customers they then also added memcache for session",
    "start": "2963290",
    "end": "2970550"
  },
  {
    "text": "management so that they could have that quickly available within memory performance and again taking more load",
    "start": "2970550",
    "end": "2976760"
  },
  {
    "text": "off the relational database and then for leaderboards they change to Redis so",
    "start": "2976760",
    "end": "2983450"
  },
  {
    "text": "this Redis actually has a que ability called ordered sets which is fantastic for things like leaderboards",
    "start": "2983450",
    "end": "2989910"
  },
  {
    "text": "which of course have to be ordered by scores and rankings and therefore what they're able to do is to use Redis to",
    "start": "2989910",
    "end": "2996660"
  },
  {
    "text": "automatically keep those leaderboards up to date and retrieve them as ordered sets now you would have noticed that I",
    "start": "2996660",
    "end": "3002900"
  },
  {
    "text": "also change down the bottom database here that has moved from a standard RDS instance to Aurora and I've removed the",
    "start": "3002900",
    "end": "3011660"
  },
  {
    "text": "standby and just have a replica there and the reason for that is that Aurora does not need a standby database that's",
    "start": "3011660",
    "end": "3018170"
  },
  {
    "text": "just sitting there not doing anything waiting for a failover event we actually failover to the read replicas so that",
    "start": "3018170",
    "end": "3025100"
  },
  {
    "text": "gives you a cost saving by using Amazon Aurora that's scale then on the far right",
    "start": "3025100",
    "end": "3030560"
  },
  {
    "text": "Amazon redshift has been introduced where you can now do analytics again taking more load off the relational",
    "start": "3030560",
    "end": "3036560"
  },
  {
    "text": "database and allowing you to do that deep analytics on a database which is designed to do that so taking it further",
    "start": "3036560",
    "end": "3046930"
  },
  {
    "start": "3046000",
    "end": "3046000"
  },
  {
    "text": "what are some of the things you would do to even modernize your applications well",
    "start": "3046930",
    "end": "3052220"
  },
  {
    "text": "the first thing as we've mentioned that a few times is adopt microservices and that is something that you don't have to",
    "start": "3052220",
    "end": "3058670"
  },
  {
    "text": "do completely you can actually have a journey on that where you start to take components which clearly need the",
    "start": "3058670",
    "end": "3064370"
  },
  {
    "text": "flexibility and the independent scalability that micro-services give you and start working on those first and",
    "start": "3064370",
    "end": "3070970"
  },
  {
    "text": "indeed if you were to look at other customers and there's plenty of examples on for example youtube recordings of",
    "start": "3070970",
    "end": "3077120"
  },
  {
    "text": "customers who've described their journey they will often start with a monolith and start picking off different",
    "start": "3077120",
    "end": "3082430"
  },
  {
    "text": "components until that monolith becomes an empty shell and then they're completely transitioned to a microservices environment so that is",
    "start": "3082430",
    "end": "3089150"
  },
  {
    "text": "something that you could definitely look at the other thing is looking at containers so especially once things go",
    "start": "3089150",
    "end": "3095810"
  },
  {
    "text": "into micro services you can then have containers all those micro services with Amazon Elastic container service Amazon",
    "start": "3095810",
    "end": "3102140"
  },
  {
    "text": "Elastic container service for kubernetes and then AWS Fargate as well moving",
    "start": "3102140",
    "end": "3108170"
  },
  {
    "text": "beyond micro services and containers and so on you could start looking at server lists",
    "start": "3108170",
    "end": "3114230"
  },
  {
    "text": "and we have AWS lambda where you can deploy service functions and then AWS batch to do batch jobs step",
    "start": "3114230",
    "end": "3122079"
  },
  {
    "text": "functions which allow you to build up business functionality with a series of lambda functions and then Amazon Aurora",
    "start": "3122079",
    "end": "3129099"
  },
  {
    "text": "my sequel server lists so what this is is actually a service database you",
    "start": "3129099",
    "end": "3134170"
  },
  {
    "text": "simply create a database and we will scale up behind the scenes the size of",
    "start": "3134170",
    "end": "3139660"
  },
  {
    "text": "the instance needed to run that my sequel database and will go up and down depending on the demand and especially",
    "start": "3139660",
    "end": "3146770"
  },
  {
    "text": "for dev test databases it will even go back to just having storage and and",
    "start": "3146770",
    "end": "3152680"
  },
  {
    "text": "removing the instance completely when you're not using that dev test environment so especially for dev test",
    "start": "3152680",
    "end": "3158170"
  },
  {
    "text": "some moments that are only used during the day and not used at night or over the weekends that's a great way to get",
    "start": "3158170",
    "end": "3163750"
  },
  {
    "text": "some significant savings now looking at what you could do beyond that you can also start integrating new functionality",
    "start": "3163750",
    "end": "3170770"
  },
  {
    "text": "for IOT artificial intelligence machine learning mobile assisted reality and",
    "start": "3170770",
    "end": "3178450"
  },
  {
    "text": "virtual reality and then easier integration and processing like transcoding for example and all of these",
    "start": "3178450",
    "end": "3185109"
  },
  {
    "text": "can be done through managed AWS services so looking at the summary remember we've",
    "start": "3185109",
    "end": "3195369"
  },
  {
    "text": "gone through and we have talked about the database market is changing we've had you know gone from punch cards and",
    "start": "3195369",
    "end": "3203410"
  },
  {
    "text": "magnetic tapes all the way through from CODIS all network databases into the",
    "start": "3203410",
    "end": "3208660"
  },
  {
    "text": "relational realm and now we've got all these other databases in no sequel new",
    "start": "3208660",
    "end": "3213849"
  },
  {
    "text": "sequel caches and so on that allow you to have much more variety about how you create your data tier in your",
    "start": "3213849",
    "end": "3220299"
  },
  {
    "text": "application and then application architecture is also changing remember we talked about going from a monolithic",
    "start": "3220299",
    "end": "3227109"
  },
  {
    "text": "environment to so and then adopting micro services and how micro services",
    "start": "3227109",
    "end": "3233049"
  },
  {
    "text": "can have that interdependent data tier associated with them so that you can choose what database you want with those",
    "start": "3233049",
    "end": "3239950"
  },
  {
    "text": "particular micro services that means that relational databases are not the best solutions for all workloads and you",
    "start": "3239950",
    "end": "3247720"
  },
  {
    "text": "know as I mentioned we're still seeing databases are databases that have heavy log being associated with applications that",
    "start": "3247720",
    "end": "3254410"
  },
  {
    "text": "when we removed that and modernized that and then put that logging into something like elasticsearch with a Cabana from",
    "start": "3254410",
    "end": "3260830"
  },
  {
    "text": "intend it can really take a massive load and extend the life of those relational systems and then allow you to start",
    "start": "3260830",
    "end": "3268030"
  },
  {
    "text": "modernizing the overall architecture as well so what we want you to do is to",
    "start": "3268030",
    "end": "3273460"
  },
  {
    "text": "choose the best database or data store for the job at hand you know it could be that you have data in the database today",
    "start": "3273460",
    "end": "3280060"
  },
  {
    "text": "that doesn't even need to be in a relational system at all it could be or",
    "start": "3280060",
    "end": "3285310"
  },
  {
    "text": "even most sequel for that matter it could simply be some data it could be a JSON object it could be even an image",
    "start": "3285310",
    "end": "3291630"
  },
  {
    "text": "that could be just put into s3 and then that could be served out to your users through cloud front so there's no need",
    "start": "3291630",
    "end": "3298930"
  },
  {
    "text": "for that to be stored in a traditional database at all and as you've hopefully seen from what we presented today AWS",
    "start": "3298930",
    "end": "3307480"
  },
  {
    "text": "has a comprehensive data management platform that enables you to modernize your applications whether you're looking",
    "start": "3307480",
    "end": "3313780"
  },
  {
    "text": "at the point new different data that databases for solving different problems with that like Amazon Neptune for graph",
    "start": "3313780",
    "end": "3320590"
  },
  {
    "text": "or using the tools to actually get data in an hour and do migrations as well we",
    "start": "3320590",
    "end": "3326380"
  },
  {
    "text": "do have the things to help you achieve those particular goals so just a reminder of that platform remember that",
    "start": "3326380",
    "end": "3335110"
  },
  {
    "text": "we did concentrate primarily on the operational OLTP databases DynamoDB",
    "start": "3335110",
    "end": "3340240"
  },
  {
    "text": "neptune ElastiCache aurora and RDS but there are plenty of other data related",
    "start": "3340240",
    "end": "3345760"
  },
  {
    "text": "services that you can look at from AWS to build out your solutions so I would",
    "start": "3345760",
    "end": "3352120"
  },
  {
    "text": "advise you to you want to know more to go to our website and to look for our",
    "start": "3352120",
    "end": "3357130"
  },
  {
    "text": "database and data related services to find out more about the things that we did not discuss today and if we you know",
    "start": "3357130",
    "end": "3366130"
  },
  {
    "text": "want to go and learn more about AWS there is a library of free courses online with AWS digital training and",
    "start": "3366130",
    "end": "3373240"
  },
  {
    "start": "3367000",
    "end": "3367000"
  },
  {
    "text": "there is a whole bunch of physical in-class training that you can go and attend as well now before I get to the",
    "start": "3373240",
    "end": "3379840"
  },
  {
    "text": "last slide I'm just going to jump out of the presentation and go back to the demo",
    "start": "3379840",
    "end": "3386240"
  },
  {
    "text": "and what we can see here is this is probably still going to be upgrading so we'll just click on this and see where",
    "start": "3386240",
    "end": "3391490"
  },
  {
    "text": "we're at yes it is still upgrading but I'll show you what's happening down the bottom here you can see what's going on so we",
    "start": "3391490",
    "end": "3398119"
  },
  {
    "text": "can see here that we started this at quarter to four I'm in Singapore so that",
    "start": "3398119",
    "end": "3404060"
  },
  {
    "text": "is the time and we started that and what's happening is we backed up the database we've had a couple of shutdowns",
    "start": "3404060",
    "end": "3409880"
  },
  {
    "text": "as it's been doing the upgrade process so let me go to the other one which I did last night",
    "start": "3409880",
    "end": "3415580"
  },
  {
    "text": "and show you just how long that took to do that upgrade now this is one is a",
    "start": "3415580",
    "end": "3421100"
  },
  {
    "text": "slightly different one it's a slightly small server is now on version 12 of Oracle and it is a multi AZ database so",
    "start": "3421100",
    "end": "3430340"
  },
  {
    "text": "this has got two servers so you can see here it is multi AZ and if I go down the bottom you can see that last night I was",
    "start": "3430340",
    "end": "3438050"
  },
  {
    "text": "working a bit late and I kicked off this at seven minutes to 11:00 and then you",
    "start": "3438050",
    "end": "3445940"
  },
  {
    "text": "can see if we go back up here that that was patched and then it was starting to",
    "start": "3445940",
    "end": "3452150"
  },
  {
    "text": "be backed up but basically it was ready at this time so 27 in minutes to do a",
    "start": "3452150",
    "end": "3458150"
  },
  {
    "text": "full upgrade from Oracle 11g r2 to Oracle 12c now imagine how long that",
    "start": "3458150",
    "end": "3465800"
  },
  {
    "text": "would take you to do on Prem let alone provision or even by the hardware to",
    "start": "3465800",
    "end": "3471740"
  },
  {
    "text": "provision before you are able to do that so that's something that is very very",
    "start": "3471740",
    "end": "3476840"
  },
  {
    "text": "compelling once you're in the RDS environment to help keep your databases modernized and up to date by being able",
    "start": "3476840",
    "end": "3483109"
  },
  {
    "text": "to use RDS to do the migrations for you so let me go back to the slides and the",
    "start": "3483109",
    "end": "3491840"
  },
  {
    "text": "last thing I would like to mention is that please fill in the survey and do",
    "start": "3491840",
    "end": "3499700"
  },
  {
    "text": "remember that we will be sending out the slides for you and thank you very much for attending this webinar and I look",
    "start": "3499700",
    "end": "3505820"
  },
  {
    "text": "forward to talking to you next time",
    "start": "3505820",
    "end": "3509109"
  },
  {
    "text": "you",
    "start": "3519900",
    "end": "3521960"
  }
]