[
  {
    "start": "0",
    "end": "14000"
  },
  {
    "text": "[Music]",
    "start": "2100",
    "end": "8000"
  },
  {
    "text": "welcome to what's new with aws",
    "start": "8000",
    "end": "10080"
  },
  {
    "text": "i'm jeff barr i've got three exciting",
    "start": "10080",
    "end": "12000"
  },
  {
    "text": "launches to share with you today",
    "start": "12000",
    "end": "14160"
  },
  {
    "start": "14000",
    "end": "88000"
  },
  {
    "text": "first let's talk about the new t4g",
    "start": "14160",
    "end": "16400"
  },
  {
    "text": "instances",
    "start": "16400",
    "end": "17680"
  },
  {
    "text": "as you might know the t-series instances",
    "start": "17680",
    "end": "19760"
  },
  {
    "text": "give you burstable performance and",
    "start": "19760",
    "end": "21199"
  },
  {
    "text": "they're great for applications that",
    "start": "21199",
    "end": "22480"
  },
  {
    "text": "don't need",
    "start": "22480",
    "end": "23039"
  },
  {
    "text": "full cpu power on a continuous basis we",
    "start": "23039",
    "end": "25760"
  },
  {
    "text": "launched t2 instances in 2014",
    "start": "25760",
    "end": "28240"
  },
  {
    "text": "and then the t3 in 2018 both of them",
    "start": "28240",
    "end": "30960"
  },
  {
    "text": "with a unique credits model",
    "start": "30960",
    "end": "32480"
  },
  {
    "text": "let you save up your performance for",
    "start": "32480",
    "end": "34079"
  },
  {
    "text": "when you need it the most",
    "start": "34079",
    "end": "35920"
  },
  {
    "text": "the new t4g instances continue this",
    "start": "35920",
    "end": "37920"
  },
  {
    "text": "model they're powered by custom built",
    "start": "37920",
    "end": "40079"
  },
  {
    "text": "aws graviton two processors",
    "start": "40079",
    "end": "42160"
  },
  {
    "text": "and the t4g instances give you a",
    "start": "42160",
    "end": "44079"
  },
  {
    "text": "performance benefit of up to forty",
    "start": "44079",
    "end": "45520"
  },
  {
    "text": "percent",
    "start": "45520",
    "end": "46160"
  },
  {
    "text": "at a twenty percent lower cost t4g",
    "start": "46160",
    "end": "49280"
  },
  {
    "text": "instances are available in seven sizes",
    "start": "49280",
    "end": "51280"
  },
  {
    "text": "with up to eight vcpus 32 gigabytes of",
    "start": "51280",
    "end": "53920"
  },
  {
    "text": "memory",
    "start": "53920",
    "end": "54480"
  },
  {
    "text": "and in seven aws regions multiple linux",
    "start": "54480",
    "end": "57920"
  },
  {
    "text": "omnis are available",
    "start": "57920",
    "end": "59199"
  },
  {
    "text": "including a set that are optimized for",
    "start": "59199",
    "end": "60640"
  },
  {
    "text": "container-based applications running on",
    "start": "60640",
    "end": "62239"
  },
  {
    "text": "ecs or",
    "start": "62239",
    "end": "63039"
  },
  {
    "text": "eks we're also working with the open",
    "start": "63039",
    "end": "65198"
  },
  {
    "text": "source community to optimize various",
    "start": "65199",
    "end": "66880"
  },
  {
    "text": "tools and services",
    "start": "66880",
    "end": "68080"
  },
  {
    "text": "for the arm architecture of the t4g all",
    "start": "68080",
    "end": "71119"
  },
  {
    "text": "aws customers are automatically enrolled",
    "start": "71119",
    "end": "73040"
  },
  {
    "text": "in a free trial of the t4g micro",
    "start": "73040",
    "end": "75200"
  },
  {
    "text": "and you can run one at no charge that's",
    "start": "75200",
    "end": "77360"
  },
  {
    "text": "750 hours per month",
    "start": "77360",
    "end": "79119"
  },
  {
    "text": "until december 31st of 2020. so go ahead",
    "start": "79119",
    "end": "82479"
  },
  {
    "text": "launch one for yourself take it for a",
    "start": "82479",
    "end": "84159"
  },
  {
    "text": "spin to learn more about the t4g",
    "start": "84159",
    "end": "86479"
  },
  {
    "text": "read danello's blog post all right so",
    "start": "86479",
    "end": "88799"
  },
  {
    "start": "88000",
    "end": "123000"
  },
  {
    "text": "next i want to tell you about a new s3",
    "start": "88799",
    "end": "90400"
  },
  {
    "text": "feature called the bucket owner",
    "start": "90400",
    "end": "92079"
  },
  {
    "text": "condition",
    "start": "92079",
    "end": "93040"
  },
  {
    "text": "here's how it works when you make a call",
    "start": "93040",
    "end": "95200"
  },
  {
    "text": "to the s3 api",
    "start": "95200",
    "end": "96720"
  },
  {
    "text": "you can now include an aws account id",
    "start": "96720",
    "end": "100079"
  },
  {
    "text": "if you include this id the call will",
    "start": "100079",
    "end": "102000"
  },
  {
    "text": "succeed only if the bucket is actually",
    "start": "102000",
    "end": "103759"
  },
  {
    "text": "owned by that account",
    "start": "103759",
    "end": "104799"
  },
  {
    "text": "and this gives you a way to verify that",
    "start": "104799",
    "end": "106159"
  },
  {
    "text": "you're actually accessing the proper",
    "start": "106159",
    "end": "107759"
  },
  {
    "text": "bucket",
    "start": "107759",
    "end": "109040"
  },
  {
    "text": "you can make these requests via the s3",
    "start": "109040",
    "end": "110799"
  },
  {
    "text": "api the cli",
    "start": "110799",
    "end": "112479"
  },
  {
    "text": "and also from the newest versions of the",
    "start": "112479",
    "end": "114079"
  },
  {
    "text": "aws sdk",
    "start": "114079",
    "end": "116159"
  },
  {
    "text": "this important feature is available in",
    "start": "116159",
    "end": "117759"
  },
  {
    "text": "all aws regions that includes the two",
    "start": "117759",
    "end": "119680"
  },
  {
    "text": "govcloud regions and the two regions in",
    "start": "119680",
    "end": "121600"
  },
  {
    "text": "china",
    "start": "121600",
    "end": "122479"
  },
  {
    "text": "to learn more read the what's new and",
    "start": "122479",
    "end": "124799"
  },
  {
    "start": "123000",
    "end": "178000"
  },
  {
    "text": "finally this is a cool new data api for",
    "start": "124799",
    "end": "127200"
  },
  {
    "text": "amazon redshift",
    "start": "127200",
    "end": "128640"
  },
  {
    "text": "as a quick reminder redshift is a fast",
    "start": "128640",
    "end": "131280"
  },
  {
    "text": "scalable",
    "start": "131280",
    "end": "131920"
  },
  {
    "text": "secure and fully managed cloud data",
    "start": "131920",
    "end": "134000"
  },
  {
    "text": "warehouse our customers use it to store",
    "start": "134000",
    "end": "136080"
  },
  {
    "text": "and process",
    "start": "136080",
    "end": "136720"
  },
  {
    "text": "exabytes of data every day so until now",
    "start": "136720",
    "end": "140239"
  },
  {
    "text": "you have to use specialized client",
    "start": "140239",
    "end": "141599"
  },
  {
    "text": "libraries to make redshift queries",
    "start": "141599",
    "end": "143599"
  },
  {
    "text": "these libraries had to be installed and",
    "start": "143599",
    "end": "145200"
  },
  {
    "text": "configured and they're only available",
    "start": "145200",
    "end": "146720"
  },
  {
    "text": "for select languages",
    "start": "146720",
    "end": "147840"
  },
  {
    "text": "environments within your data api you",
    "start": "147840",
    "end": "150959"
  },
  {
    "text": "don't need to use these libraries",
    "start": "150959",
    "end": "152319"
  },
  {
    "text": "and you don't need to pool or manage",
    "start": "152319",
    "end": "154000"
  },
  {
    "text": "database connections",
    "start": "154000",
    "end": "155519"
  },
  {
    "text": "you simply make calls to the endpoint",
    "start": "155519",
    "end": "157280"
  },
  {
    "text": "and the data api takes care of the rest",
    "start": "157280",
    "end": "159840"
  },
  {
    "text": "this includes executing your sql",
    "start": "159840",
    "end": "161519"
  },
  {
    "text": "commands asynchronously",
    "start": "161519",
    "end": "162959"
  },
  {
    "text": "and storing query results for 24 hours",
    "start": "162959",
    "end": "166000"
  },
  {
    "text": "all in all this is a great",
    "start": "166000",
    "end": "167519"
  },
  {
    "text": "simplification and a really good match",
    "start": "167519",
    "end": "169519"
  },
  {
    "text": "for almost",
    "start": "169519",
    "end": "170080"
  },
  {
    "text": "any kind of application including those",
    "start": "170080",
    "end": "172000"
  },
  {
    "text": "you build with lambda",
    "start": "172000",
    "end": "173200"
  },
  {
    "text": "appsync or cloud9 to learn more read the",
    "start": "173200",
    "end": "176319"
  },
  {
    "text": "what's new",
    "start": "176319",
    "end": "177920"
  },
  {
    "text": "so thanks for watching that's all for",
    "start": "177920",
    "end": "179519"
  },
  {
    "start": "178000",
    "end": "202000"
  },
  {
    "text": "today as always we look forward to your",
    "start": "179519",
    "end": "181840"
  },
  {
    "text": "feedback",
    "start": "181840",
    "end": "182640"
  },
  {
    "text": "send us an email a tweet or leave a",
    "start": "182640",
    "end": "184560"
  },
  {
    "text": "comment below",
    "start": "184560",
    "end": "185920"
  },
  {
    "text": "to see more subscribe to this channel",
    "start": "185920",
    "end": "188239"
  },
  {
    "text": "click the bell for notifications",
    "start": "188239",
    "end": "189840"
  },
  {
    "text": "also would love it if you share these",
    "start": "189840",
    "end": "191599"
  },
  {
    "text": "videos with your friends and your",
    "start": "191599",
    "end": "192800"
  },
  {
    "text": "colleagues",
    "start": "192800",
    "end": "193599"
  },
  {
    "text": "we'll see you again soon",
    "start": "193599",
    "end": "198620"
  },
  {
    "text": "[Music]",
    "start": "198620",
    "end": "202239"
  },
  {
    "text": "you",
    "start": "202239",
    "end": "204319"
  }
]