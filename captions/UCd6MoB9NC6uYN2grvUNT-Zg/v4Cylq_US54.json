[
  {
    "start": "0",
    "end": "79000"
  },
  {
    "text": "I hello everyone welcome to best",
    "start": "0",
    "end": "5250"
  },
  {
    "text": "practices for scalable monitoring my name is kevin skelter fairy I'm a software engineer at New Relic like to",
    "start": "5250",
    "end": "13230"
  },
  {
    "text": "just give people a quick summary of you know what we're going to be talking about just to make sure that you you",
    "start": "13230",
    "end": "19680"
  },
  {
    "text": "know don't feel like you're expecting one thing and got another so this is use",
    "start": "19680",
    "end": "24810"
  },
  {
    "text": "the word scalability here I'm not going to be particularly talking about scalability in the high volume or",
    "start": "24810",
    "end": "31050"
  },
  {
    "text": "high-performance sense in this talk rather this is going to be talk about scaling your monitoring to keep pace",
    "start": "31050",
    "end": "37020"
  },
  {
    "text": "with the growth of increasingly complex modern architectures so this is a talk",
    "start": "37020",
    "end": "42750"
  },
  {
    "text": "that I think the people who are going to get the most out of this are people who are in one way tasked with making their",
    "start": "42750",
    "end": "48539"
  },
  {
    "text": "organizations more effective during the sorts of growth so you might be a manager who's looking to reduce the toil",
    "start": "48539",
    "end": "55920"
  },
  {
    "text": "that your teams are experiencing as they try to effectively manage a host of micro services I you might be an",
    "start": "55920",
    "end": "63149"
  },
  {
    "text": "architect who's developing standards for your organization as they undergo a digital transformation or you might be a",
    "start": "63149",
    "end": "70470"
  },
  {
    "text": "DevOps engineer who's responsible for building the tools that are going to accelerate the velocity of your",
    "start": "70470",
    "end": "76020"
  },
  {
    "text": "organization so so why am I here talking",
    "start": "76020",
    "end": "83340"
  },
  {
    "start": "79000",
    "end": "204000"
  },
  {
    "text": "to you I'm actually not coming to you as a monitoring expert per se rather I'm",
    "start": "83340",
    "end": "90750"
  },
  {
    "text": "actually here to share with you some of the lessons that we learned at New Relic scaling a rapidly growing organization",
    "start": "90750",
    "end": "97340"
  },
  {
    "text": "so I'm going to use examples using New Relic but that's because that's what we",
    "start": "97340",
    "end": "104399"
  },
  {
    "text": "use at New Relic to to do our monitoring so and I think it is valuable to have some concrete examples so story of New",
    "start": "104399",
    "end": "113280"
  },
  {
    "text": "Relic we've been around about 10 years yeah and we started like a lot of",
    "start": "113280",
    "end": "118740"
  },
  {
    "text": "companies in 2008 with a monolithic Ruby on Rails application shortly after that",
    "start": "118740",
    "end": "126869"
  },
  {
    "text": "we spun out some of our back-end data ingest and data processing into the",
    "start": "126869",
    "end": "132690"
  },
  {
    "text": "monolith java application we were running single",
    "start": "132690",
    "end": "137700"
  },
  {
    "text": "monolithic relational database and we were running everything in a single geographic region a lot has changed over",
    "start": "137700",
    "end": "146879"
  },
  {
    "text": "those ten years though and today we manage dozens of front-end applications",
    "start": "146879",
    "end": "153560"
  },
  {
    "text": "those are backed by hundreds of microservices data is stored in hundreds",
    "start": "153560",
    "end": "159659"
  },
  {
    "text": "of small databases of various types and were deployed across multiple geographic regions and it's not just our production",
    "start": "159659",
    "end": "168120"
  },
  {
    "text": "infrastructure which has changed radically over this time it's also the structure of our engineering",
    "start": "168120",
    "end": "173400"
  },
  {
    "text": "organization so in 2008 it was just a single small team all located in the",
    "start": "173400",
    "end": "181590"
  },
  {
    "text": "same office talking with each other all the time having lunch together every day",
    "start": "181590",
    "end": "186780"
  },
  {
    "text": "and it was very easy for everyone to kind of stay on the same page about how they were going to do things but today",
    "start": "186780",
    "end": "193109"
  },
  {
    "text": "we have dozens of engineering teams and they're spread out all over the world and keeping that sort of consistency is",
    "start": "193109",
    "end": "201479"
  },
  {
    "text": "more challenging so back 10 years ago",
    "start": "201479",
    "end": "208370"
  },
  {
    "start": "204000",
    "end": "254000"
  },
  {
    "text": "these monolithic applications deciding to monitor them and going about",
    "start": "208370",
    "end": "214470"
  },
  {
    "text": "monitoring them was fairly easy I'm in fact most things about operating a",
    "start": "214470",
    "end": "219540"
  },
  {
    "text": "monolith are fairly easy because you only have to do them once and that's simplifying so you know you would pick a",
    "start": "219540",
    "end": "229639"
  },
  {
    "text": "monitoring provider that you wanted to use go head over to their install pages",
    "start": "229639",
    "end": "235819"
  },
  {
    "text": "download a jar install a ruby gem set up a basic config file and you would be up",
    "start": "235819",
    "end": "242099"
  },
  {
    "text": "and running with monitoring on in no time you go and you start poking around you eyes you've set up some dashboards",
    "start": "242099",
    "end": "248280"
  },
  {
    "text": "and set some alerts this is all pretty simple straightforward to get up and running in the microservices world",
    "start": "248280",
    "end": "256859"
  },
  {
    "start": "254000",
    "end": "333000"
  },
  {
    "text": "though you definitely don't want to be going through all of those steps all that manual process every time you",
    "start": "256859",
    "end": "263550"
  },
  {
    "text": "create a new service but if you don't monitor all of your services consistently there's going to",
    "start": "263550",
    "end": "270810"
  },
  {
    "text": "be pieces that you miss and you're going to have blind spots in your monitoring",
    "start": "270810",
    "end": "276080"
  },
  {
    "text": "this is really important because in the world of modern architectures distributed tracing is rapidly replacing",
    "start": "276320",
    "end": "283500"
  },
  {
    "text": "traditional profiling for understanding our systems we can no longer limit",
    "start": "283500",
    "end": "288900"
  },
  {
    "text": "ourselves to viewing just the internals of one application at a time instead we",
    "start": "288900",
    "end": "294930"
  },
  {
    "text": "need to be able to trace a request through all of our systems with views like this that are showing all of the",
    "start": "294930",
    "end": "301320"
  },
  {
    "text": "complex interactions and sub queries that are happening simultaneously just to service that one request and these",
    "start": "301320",
    "end": "308160"
  },
  {
    "text": "traces can get really big they can end up involving hundreds or even thousands of services and instances of those",
    "start": "308160",
    "end": "314760"
  },
  {
    "text": "services so if you don't have everything within your architecture monitored",
    "start": "314760",
    "end": "321800"
  },
  {
    "text": "consistently and set up for this sort of tracing that graphs going to fall apart and you're going to miss you know",
    "start": "321800",
    "end": "327690"
  },
  {
    "text": "essential pieces of what's going on during your requests so you're going to",
    "start": "327690",
    "end": "336600"
  },
  {
    "start": "333000",
    "end": "398000"
  },
  {
    "text": "have to be a lot more thoughtful about your monitoring strategy for modern applications in order to make sure that",
    "start": "336600",
    "end": "342870"
  },
  {
    "text": "everything's monitored and monitored consistently autonomy is is one of the",
    "start": "342870",
    "end": "350190"
  },
  {
    "text": "big themes in the industry today and at New Relic we are big fans of autonomous",
    "start": "350190",
    "end": "356310"
  },
  {
    "text": "teams but there are some places where you need to maybe put a damper on on",
    "start": "356310",
    "end": "362730"
  },
  {
    "text": "autonomy a little bit and this is one of those places where you may need to rein it in and establish some standards for",
    "start": "362730",
    "end": "369210"
  },
  {
    "text": "the sake of the greater good and so that all of your teams can work together successfully and when you're setting up",
    "start": "369210",
    "end": "378000"
  },
  {
    "text": "monitoring in a modern architecture it's going to end up touching all of the",
    "start": "378000",
    "end": "383280"
  },
  {
    "text": "parts of your software lifecycle so you're going to be incorporating it both you know as you're writing code in your",
    "start": "383280",
    "end": "390180"
  },
  {
    "text": "build systems in your deploy systems and then in of course the monitoring and alerting that you set up once it's in",
    "start": "390180",
    "end": "396630"
  },
  {
    "text": "production so in all of these cases what's really",
    "start": "396630",
    "end": "402860"
  },
  {
    "text": "essential is making the right thing to do the easy thing to do your engineers",
    "start": "402860",
    "end": "409280"
  },
  {
    "text": "are going to be doing this hundreds or thousands of times and that's a lot of opportunities for someone to either take",
    "start": "409280",
    "end": "415940"
  },
  {
    "text": "a short shortcut skip a step to make a mistake in one of those steps and to",
    "start": "415940",
    "end": "422210"
  },
  {
    "text": "avoid that automation and consistency is really crucial so we're going to walk",
    "start": "422210",
    "end": "429170"
  },
  {
    "text": "through some concrete examples and some recommendations in each of these areas about how to achieve that so let's start",
    "start": "429170",
    "end": "445040"
  },
  {
    "start": "443000",
    "end": "546000"
  },
  {
    "text": "by I'm talking a little bit about build systems modern build systems are",
    "start": "445040",
    "end": "451610"
  },
  {
    "text": "extremely powerful and you really want to take advantage of that power um this wasn't always the case you know",
    "start": "451610",
    "end": "459650"
  },
  {
    "text": "ten years ago I think most developers were writing their build files in",
    "start": "459650",
    "end": "466010"
  },
  {
    "text": "languages which were unrelated to the languages that they were actually writing their applications in and that",
    "start": "466010",
    "end": "473090"
  },
  {
    "text": "has is something which has really changed dramatically over time and today it's much more than norm that we",
    "start": "473090",
    "end": "479390"
  },
  {
    "text": "automate our build processes using the full power and expressiveness of the programming languages which we write our",
    "start": "479390",
    "end": "485720"
  },
  {
    "text": "applications in and what that means is that we should be managing the code in",
    "start": "485720",
    "end": "491270"
  },
  {
    "text": "our build scripts in the same ways that we would manage the code in our applications so an example of what this",
    "start": "491270",
    "end": "498590"
  },
  {
    "text": "means here's some instructions for how to upload source maps after you minify",
    "start": "498590",
    "end": "505250"
  },
  {
    "text": "your JavaScript when you're releasing a bundle and if you're not a JavaScript developer and you don't know exactly",
    "start": "505250",
    "end": "511070"
  },
  {
    "text": "what that means that's okay in all of these examples the specifics aren't going to be really essential more about",
    "start": "511070",
    "end": "517729"
  },
  {
    "text": "the general concepts of what we're talking about and so anytime you see a",
    "start": "517729",
    "end": "522979"
  },
  {
    "text": "set of examples like this what you should immediately be thinking is how do we do this automatically",
    "start": "522979",
    "end": "529310"
  },
  {
    "text": "because what you don't really want is to rely on your developers going and manually uploading these things by a UI",
    "start": "529310",
    "end": "536180"
  },
  {
    "text": "every time they do a release instead the approach you want is to find the API and",
    "start": "536180",
    "end": "541699"
  },
  {
    "text": "to code against that in your build system or better yet I pull in some",
    "start": "541699",
    "end": "551059"
  },
  {
    "text": "reusable code that someone else already wrote so in this case there's an NPM",
    "start": "551059",
    "end": "556339"
  },
  {
    "text": "module that you can get and that you can tie in to your build and release process with a little bit of code like this and",
    "start": "556339",
    "end": "562160"
  },
  {
    "text": "it will completely automate this task for you let's look at a little bit of a",
    "start": "562160",
    "end": "570709"
  },
  {
    "text": "more complex example so these are the same instructions they're on a previous slide about how do you install the new",
    "start": "570709",
    "end": "577100"
  },
  {
    "text": "relic agent into a java application so how would you go about automating this",
    "start": "577100",
    "end": "582589"
  },
  {
    "text": "process I'm going to use a Gradle as my",
    "start": "582589",
    "end": "588589"
  },
  {
    "start": "585000",
    "end": "675000"
  },
  {
    "text": "example build system here because this is what I'm what we use it a new relic but if you're not familiar with Gradle",
    "start": "588589",
    "end": "595490"
  },
  {
    "text": "again don't worry too much about the particulars you know in general I find",
    "start": "595490",
    "end": "602059"
  },
  {
    "text": "that you see a lot of build files where people just dump all sorts of stuff into",
    "start": "602059",
    "end": "607160"
  },
  {
    "text": "them willy-nilly without a whole lot of organization or thought about maintainability so in that approach if",
    "start": "607160",
    "end": "614329"
  },
  {
    "text": "we were going to do that here we would just start writing some Gradle DSL so we",
    "start": "614329",
    "end": "619970"
  },
  {
    "text": "would we would add in a couple of jars the the compile time jar the run time jar you'd write a little copy task that",
    "start": "619970",
    "end": "628730"
  },
  {
    "text": "puts stuff into the right place when you're packaging up for release you'd",
    "start": "628730",
    "end": "635420"
  },
  {
    "text": "you'd configure some extra arguments for when your your run command to start up",
    "start": "635420",
    "end": "641569"
  },
  {
    "text": "your JVM and then you would still need to do a little bit more with the config file but running out of room on this",
    "start": "641569",
    "end": "647089"
  },
  {
    "text": "slide and the point is you know though this is this is not horrendous this is",
    "start": "647089",
    "end": "652100"
  },
  {
    "text": "not a ton of code this is still not really the approach that you want to be taking where you're putting this into",
    "start": "652100",
    "end": "657649"
  },
  {
    "text": "all of the build files for all of your applications you don't want to make it so every time",
    "start": "657649",
    "end": "662710"
  },
  {
    "text": "that you started in your application you have to copy and paste this stuff if you think about it you know you would not go",
    "start": "662710",
    "end": "669160"
  },
  {
    "text": "about writing your application code in this way and you shouldn't be writing your build scripts like this either so",
    "start": "669160",
    "end": "676390"
  },
  {
    "start": "675000",
    "end": "779000"
  },
  {
    "text": "instead this is what we have build build system plug-ins for these days so",
    "start": "676390",
    "end": "681880"
  },
  {
    "text": "everything that was on that previous side cannon should be done in a plugin so you can go you can find there's a",
    "start": "681880",
    "end": "689500"
  },
  {
    "text": "couple of these album maven central or you can write your own as we saw it's not a whole lot of code to do this so",
    "start": "689500",
    "end": "697690"
  },
  {
    "text": "this is an improvement definitely improvement over the previous approach but this is still not ideal",
    "start": "697690",
    "end": "703600"
  },
  {
    "text": "um this is still some amount of boilerplate that you need in all of your applications and you know including",
    "start": "703600",
    "end": "710470"
  },
  {
    "text": "probably in those configuration sections that IV lighted and and that's you know",
    "start": "710470",
    "end": "715870"
  },
  {
    "text": "repeated repeated code that you don't want to have everywhere so you know if you want to change those things if you",
    "start": "715870",
    "end": "721810"
  },
  {
    "text": "want to change standards you're going to be stuck going and changing this stuff in config blocks and hundreds of build",
    "start": "721810",
    "end": "727720"
  },
  {
    "text": "files so that's not great to avoid that the approach that I like is to actually",
    "start": "727720",
    "end": "735250"
  },
  {
    "text": "create a mega plug-in that actually pulls together all the other plugins",
    "start": "735250",
    "end": "740380"
  },
  {
    "text": "that you want to use and you can provide them with sensible default configuration",
    "start": "740380",
    "end": "745540"
  },
  {
    "text": "and you can get to the point where individual services just apply that plug-in lists their build dependencies",
    "start": "745540",
    "end": "751930"
  },
  {
    "text": "and that's it so this creates a really nice-looking build script and it's",
    "start": "751930",
    "end": "757030"
  },
  {
    "text": "really like much more the approach that we would take if we were you know building a modular software in our",
    "start": "757030",
    "end": "763960"
  },
  {
    "text": "applications and now when you make improvements to your standard processes around monitoring or around anything",
    "start": "763960",
    "end": "770740"
  },
  {
    "text": "else teams just need to update their version of that plug-in and they get all of those updates so again I don't want",
    "start": "770740",
    "end": "782740"
  },
  {
    "start": "779000",
    "end": "822000"
  },
  {
    "text": "people to get too hung up on the particulars of specific languages or specific build tools but what I do want",
    "start": "782740",
    "end": "789850"
  },
  {
    "text": "you to do is to think about how in your systems do you make it really dead simple for application",
    "start": "789850",
    "end": "796300"
  },
  {
    "text": "copper's to make sure that their applications are monitored so you might get into this world we're monitoring is",
    "start": "796300",
    "end": "802180"
  },
  {
    "text": "just the default there's no effort that needs to go into it for any applications there to being deployed out into your",
    "start": "802180",
    "end": "808210"
  },
  {
    "text": "production environment let's talk a",
    "start": "808210",
    "end": "814840"
  },
  {
    "text": "little bit next about the role that deploy system is playing you're monitoring I'm in this section I'm going",
    "start": "814840",
    "end": "826360"
  },
  {
    "text": "to take it as a little bit of a given that you already have a common automated deploy process this doesn't necessarily",
    "start": "826360",
    "end": "833260"
  },
  {
    "text": "have to be a continuous deployment system but something that's standardized probably centralized way that you get",
    "start": "833260",
    "end": "840460"
  },
  {
    "text": "all of your code into production if that's not the case I would highly recommend that you look at addressing",
    "start": "840460",
    "end": "847090"
  },
  {
    "text": "that before you go any further if every team in your organization is pushing",
    "start": "847090",
    "end": "852160"
  },
  {
    "text": "code out with their own snowflake processes it's going to be very hard to successfully monitor across all of them",
    "start": "852160",
    "end": "861450"
  },
  {
    "start": "866000",
    "end": "1076000"
  },
  {
    "text": "the next thing that you want to do once you have something deploying your software is to be able to know what you",
    "start": "868530",
    "end": "876460"
  },
  {
    "text": "deployed and when when something changes in your monitored data the first question anyone asks is was this related",
    "start": "876460",
    "end": "883810"
  },
  {
    "text": "to a deploy of something and there's two general ways that you can track this information and deploy markers and",
    "start": "883810",
    "end": "890800"
  },
  {
    "text": "version tagging and they're both useful to have this isn't something you should consider an either/or choice and this is",
    "start": "890800",
    "end": "897130"
  },
  {
    "text": "really something that you want to have both of them available",
    "start": "897130",
    "end": "901410"
  },
  {
    "text": "so to explain the difference a deploy marker is a sort of an event log which",
    "start": "904030",
    "end": "910450"
  },
  {
    "text": "gets recorded somewhere off to the side of your primary Twyman tree data and they're nice because you can look at all",
    "start": "910450",
    "end": "916930"
  },
  {
    "text": "of them you can get a chronological record of everything that's changed across all of your systems and it's",
    "start": "916930",
    "end": "922960"
  },
  {
    "text": "fairly easy for charting libraries to go ahead and automatically display them on all your dashboards give you like those",
    "start": "922960",
    "end": "929140"
  },
  {
    "text": "little red lines or whatever format you like so you can see you get a hint that",
    "start": "929140",
    "end": "934270"
  },
  {
    "text": "there was a deploy that happened and recording them is generally a pretty straightforward matter of just making a",
    "start": "934270",
    "end": "941290"
  },
  {
    "text": "REST API call as part of your deploy process but there are a few things which",
    "start": "941290",
    "end": "948220"
  },
  {
    "text": "are a little bit difficult to figure out with just deploy markers so with",
    "start": "948220",
    "end": "954250"
  },
  {
    "text": "techniques like like Canary deploys and phased rollouts and blue-green deploys",
    "start": "954250",
    "end": "959320"
  },
  {
    "text": "becoming increasingly the norm for modern architectures it becomes a little more difficult to know exactly what a",
    "start": "959320",
    "end": "965890"
  },
  {
    "text": "deploy marker means is it indicating the start of a deploy or is it indicating",
    "start": "965890",
    "end": "973089"
  },
  {
    "text": "the end of a deploy how would you represent events like when you start a",
    "start": "973089",
    "end": "978100"
  },
  {
    "text": "deploy and you get halfway through it and discover a problem and then decide to abort and roll back that deploy so",
    "start": "978100",
    "end": "985930"
  },
  {
    "text": "for those sorts of situations version tags are there to help you out so this",
    "start": "985930",
    "end": "991330"
  },
  {
    "text": "is an example of a dashboard where we've taken all the telemetry data coming out",
    "start": "991330",
    "end": "996520"
  },
  {
    "text": "of one of our systems and and we add a dimensional attribute to tag on to all",
    "start": "996520",
    "end": "1003480"
  },
  {
    "text": "of them with the version number of the application running on each instance so",
    "start": "1003480",
    "end": "1009780"
  },
  {
    "text": "this lets us you know start by we just look at how many instances of an application are running and we can watch",
    "start": "1009780",
    "end": "1016080"
  },
  {
    "text": "that increase over time so this is a phased rollout that takes about 90 minutes and then while that's happening",
    "start": "1016080",
    "end": "1026390"
  },
  {
    "text": "we can be comparing performance metrics on our application and we'll see things",
    "start": "1026390",
    "end": "1031470"
  },
  {
    "text": "like this so we see that there was a little blip of warm-up time when the",
    "start": "1031470",
    "end": "1036510"
  },
  {
    "text": "when the new version first got deployed out but then after that the two-track",
    "start": "1036510",
    "end": "1041760"
  },
  {
    "text": "very close together from minute to minute even though the the value of this",
    "start": "1041760",
    "end": "1047010"
  },
  {
    "text": "metric is actually jumping around due to changing workload and this is an extremely valuable thing to be able to",
    "start": "1047010",
    "end": "1053130"
  },
  {
    "text": "do to overlay graphs like this particularly if you're running systems which are subject to large external",
    "start": "1053130",
    "end": "1060120"
  },
  {
    "text": "shifts and usage so when a metric changes in the middle of a multi-hour",
    "start": "1060120",
    "end": "1065190"
  },
  {
    "text": "rollout of a deploy you need to be able to tell the difference between one of those exogenous changes and it changed",
    "start": "1065190",
    "end": "1072330"
  },
  {
    "text": "it's caused by the code in your deploy",
    "start": "1072330",
    "end": "1076100"
  },
  {
    "start": "1076000",
    "end": "1199000"
  },
  {
    "text": "so you can and should use the same technique for other pieces of",
    "start": "1077750",
    "end": "1083190"
  },
  {
    "text": "information as well when we're called on",
    "start": "1083190",
    "end": "1090330"
  },
  {
    "text": "to respond to an incident or to a support request we frequently want to know the scale of a problem is it",
    "start": "1090330",
    "end": "1096570"
  },
  {
    "text": "restricted to a single scope or is it something that's widespread so depending",
    "start": "1096570",
    "end": "1101970"
  },
  {
    "text": "upon your architecture you'll likely want to be able to compare or to restrict data based on isolation zones",
    "start": "1101970",
    "end": "1108450"
  },
  {
    "text": "like clusters or cells or regions or availability zones we also frequently",
    "start": "1108450",
    "end": "1116390"
  },
  {
    "text": "inject host names into our containers because in the modern containerized",
    "start": "1116390",
    "end": "1122040"
  },
  {
    "text": "world our applications have generally lost the ability to actually introspect the the physical machine that they're",
    "start": "1122040",
    "end": "1128669"
  },
  {
    "text": "running on and you know this can be a problem if you know that you need to shut down a misbehaving instance but you",
    "start": "1128669",
    "end": "1135750"
  },
  {
    "text": "don't actually know where that container is running and then you know there may be other things that you want to track",
    "start": "1135750",
    "end": "1141570"
  },
  {
    "text": "for whatever reason within your system so for example we sometimes like to know what team owns an application because",
    "start": "1141570",
    "end": "1148530"
  },
  {
    "text": "this would let us do things like roll up CPU usage or other resource usage across",
    "start": "1148530",
    "end": "1153660"
  },
  {
    "text": "across teams regardless of the specifics",
    "start": "1153660",
    "end": "1159780"
  },
  {
    "text": "of your system and exactly what those valuable pieces of information are for you the critical role in your deploy",
    "start": "1159780",
    "end": "1165929"
  },
  {
    "text": "system is to make sure that you have all the information that you need to know exactly where your monitoring data",
    "start": "1165929",
    "end": "1171990"
  },
  {
    "text": "is coming from what version of what application running on what machines in",
    "start": "1171990",
    "end": "1177990"
  },
  {
    "text": "which region and so on so might seem",
    "start": "1177990",
    "end": "1186480"
  },
  {
    "text": "like we've gone a little bit out of order here but we now have some of the Foundation's that we need to actually",
    "start": "1186480",
    "end": "1191759"
  },
  {
    "text": "come back and talk about what it looks like to automate and scale monitoring within your applications themselves so",
    "start": "1191759",
    "end": "1201059"
  },
  {
    "start": "1199000",
    "end": "1316000"
  },
  {
    "text": "earlier I touched on the importance of eliminating as much boilerplate as you",
    "start": "1201059",
    "end": "1206370"
  },
  {
    "text": "can but the truth is you're never going to get rid of all of it so if you do",
    "start": "1206370",
    "end": "1212009"
  },
  {
    "text": "have to copy and paste some boilerplate to create a new service that's something that you should at least make a machine",
    "start": "1212009",
    "end": "1217889"
  },
  {
    "text": "do for you so you know this could be using something like maven archetypes or",
    "start": "1217889",
    "end": "1224129"
  },
  {
    "text": "rails app templates but really any templating system can be ready to work",
    "start": "1224129",
    "end": "1229230"
  },
  {
    "text": "for this and the big benefit that you get out of using bootstrap templates is",
    "start": "1229230",
    "end": "1234330"
  },
  {
    "text": "that if you keep them up to date with your current best practices your overall micro service architecture will tend to",
    "start": "1234330",
    "end": "1240960"
  },
  {
    "text": "drift in that direction and this is the opposite of what happens in the approach",
    "start": "1240960",
    "end": "1246419"
  },
  {
    "text": "where when teams want to create a new application they just copy everything from an old application and do some",
    "start": "1246419",
    "end": "1253350"
  },
  {
    "text": "search and replace and pull out the guts and put in new guts when you follow that",
    "start": "1253350",
    "end": "1258509"
  },
  {
    "text": "practice that tends to lead to teams getting further and further out of date from your current practices so we said a",
    "start": "1258509",
    "end": "1270360"
  },
  {
    "text": "little earlier that your deploy system should inject environment variables describing exactly what's running and",
    "start": "1270360",
    "end": "1276779"
  },
  {
    "text": "where it's running but that doesn't really do any good unless your application actually does something with",
    "start": "1276779",
    "end": "1282690"
  },
  {
    "text": "this information so this is an example of what we would typically do set up a",
    "start": "1282690",
    "end": "1288809"
  },
  {
    "text": "simple wrapper library around any monitoring that we do so those attributes get consistently attached to",
    "start": "1288809",
    "end": "1295230"
  },
  {
    "text": "all of the data that we collect so so in this case if we're recording a custom",
    "start": "1295230",
    "end": "1300389"
  },
  {
    "text": "monitoring of we would take you know the attributes specific to that event but then we go",
    "start": "1300389",
    "end": "1306310"
  },
  {
    "text": "and we just pull out of those environment variables all that standard information that we want to be to have",
    "start": "1306310",
    "end": "1312280"
  },
  {
    "text": "available later when we're looking at this data now modern architectures have",
    "start": "1312280",
    "end": "1321100"
  },
  {
    "start": "1316000",
    "end": "1459000"
  },
  {
    "text": "a lot of moving pieces and a lot of connections between those pieces and that's a lot of places where you can",
    "start": "1321100",
    "end": "1328000"
  },
  {
    "text": "potentially have a bottleneck but if you're going to successfully operate these systems it's really critical that",
    "start": "1328000",
    "end": "1334780"
  },
  {
    "text": "you be able to identify and monitor those bottlenecks when they happen so",
    "start": "1334780",
    "end": "1340290"
  },
  {
    "text": "you know I think that it's it's more or less a given that everyone monitors high-level utilization metrics like CPU",
    "start": "1340290",
    "end": "1347380"
  },
  {
    "text": "and memory usage right now but that's really far from the end of potential",
    "start": "1347380",
    "end": "1352450"
  },
  {
    "text": "bottlenecks to keep an eye on and really the critical point is that any",
    "start": "1352450",
    "end": "1357790"
  },
  {
    "text": "potentially exhaustible resource within one of your applications or in your infrastructure needs to be monitored",
    "start": "1357790",
    "end": "1364030"
  },
  {
    "text": "so inside applications the common examples of this are things like thread",
    "start": "1364030",
    "end": "1369220"
  },
  {
    "text": "pools our connection pools or memory pools or anything else which ends in the",
    "start": "1369220",
    "end": "1375100"
  },
  {
    "text": "word pool and then the other big general class of exhaustible resources queues",
    "start": "1375100",
    "end": "1381780"
  },
  {
    "text": "and that can get a little bit tricky sometimes because queues are often hiding in modern frameworks and places",
    "start": "1381780",
    "end": "1388240"
  },
  {
    "text": "that aren't obvious so in reactive or actor based frameworks we generally end",
    "start": "1388240",
    "end": "1395320"
  },
  {
    "text": "up replacing traditional thread pools with queues or mailboxes and to the",
    "start": "1395320",
    "end": "1401110"
  },
  {
    "text": "essential that you keep an eye on those as well in some cases this might be made",
    "start": "1401110",
    "end": "1406420"
  },
  {
    "text": "really easily available for you to plug into your monitoring systems and in other cases you might need to create",
    "start": "1406420",
    "end": "1412270"
  },
  {
    "text": "some wrappers like we saw before either way it's really essential to keep an eye on these you know sort of like looking",
    "start": "1412270",
    "end": "1419980"
  },
  {
    "text": "for your keys somehow the bottlenecks always seem to end up in the place where you haven't actually put any monitoring",
    "start": "1419980",
    "end": "1427420"
  },
  {
    "text": "yet so yeah and the approach that we've",
    "start": "1427420",
    "end": "1432520"
  },
  {
    "text": "generally taken to this again to create sort of a standard structure that we're going to use to record all of",
    "start": "1432520",
    "end": "1439300"
  },
  {
    "text": "our utilization metrics and how how much how much they're being used at any given",
    "start": "1439300",
    "end": "1444460"
  },
  {
    "text": "moment and then we allow libraries to plug into that to provide to provide",
    "start": "1444460",
    "end": "1450490"
  },
  {
    "text": "that data and then we can go and we can view across a whole system what the most constrained resources are at any given",
    "start": "1450490",
    "end": "1457120"
  },
  {
    "text": "time so the big goal there and in all of",
    "start": "1457120",
    "end": "1464020"
  },
  {
    "start": "1459000",
    "end": "1534000"
  },
  {
    "text": "this to strive for in the code in your applications is consistent monitoring so",
    "start": "1464020",
    "end": "1469120"
  },
  {
    "text": "consistently tracking resource utilization so you can easily see where your bottlenecks are consistently",
    "start": "1469120",
    "end": "1476020"
  },
  {
    "text": "tagging all of your telemetry with the attributes that you'll need to locate where problems are happening and keeping",
    "start": "1476020",
    "end": "1484180"
  },
  {
    "text": "a general enough structure across your applications to enable you to make fair comparisons of the data that you're",
    "start": "1484180",
    "end": "1490810"
  },
  {
    "text": "collecting across your entire architecture so now we're at a point",
    "start": "1490810",
    "end": "1502290"
  },
  {
    "text": "where we have monitoring data coming out of all of our services but that's not",
    "start": "1502290",
    "end": "1508960"
  },
  {
    "text": "going to actually do you much good unless someone's looking at them so back",
    "start": "1508960",
    "end": "1514390"
  },
  {
    "text": "in the monolith days it was mostly good enough you could jump into the UI's and start creating dashboards and setting up",
    "start": "1514390",
    "end": "1520600"
  },
  {
    "text": "alerts from there but that's not going to scale well for for large modern micro service architectures it's too",
    "start": "1520600",
    "end": "1527200"
  },
  {
    "text": "repetitive it's too error-prone and it's too hard to keep everything up to date across all these systems so in the",
    "start": "1527200",
    "end": "1536350"
  },
  {
    "start": "1534000",
    "end": "1592000"
  },
  {
    "text": "modern world generally people gun on board with api's as first-class alternatives to those UIs and from there",
    "start": "1536350",
    "end": "1543960"
  },
  {
    "text": "inspired by the infrastructure as code movement we've started to explore what it might mean to have a concept of",
    "start": "1543960",
    "end": "1550390"
  },
  {
    "text": "monitoring and alerting as code so that means taking those api's that you have",
    "start": "1550390",
    "end": "1555930"
  },
  {
    "text": "whether they're for creating dashboards or for defining synthetic monitors or",
    "start": "1555930",
    "end": "1564430"
  },
  {
    "text": "for creating alert conditions and going and building higher level control structures on top",
    "start": "1564430",
    "end": "1570400"
  },
  {
    "text": "of them because if you think about you an API by itself isn't really an improvement over",
    "start": "1570400",
    "end": "1576880"
  },
  {
    "text": "a UI I mean obviously we don't want people to be manually typing out JSON",
    "start": "1576880",
    "end": "1582490"
  },
  {
    "text": "payloads and sending them in with with Carrell commands either that's actually more error-prone than going in and using",
    "start": "1582490",
    "end": "1589540"
  },
  {
    "text": "the UIs so this is where dsls",
    "start": "1589540",
    "end": "1596350"
  },
  {
    "start": "1592000",
    "end": "1738000"
  },
  {
    "text": "domain-specific languages start to come into the picture I mean DSL is one of those terms that",
    "start": "1596350",
    "end": "1601930"
  },
  {
    "text": "can describe a lot of things essentially what we're saying here is just anything which is capable of driving an API in an",
    "start": "1601930",
    "end": "1609250"
  },
  {
    "text": "automated fashion whether that's a collection of scripts some sort of templating and config language which has",
    "start": "1609250",
    "end": "1616090"
  },
  {
    "text": "limits on its expressive power or a full-blown turing-complete programming",
    "start": "1616090",
    "end": "1621220"
  },
  {
    "text": "languages and we're going to now take a look at a couple examples of all of",
    "start": "1621220",
    "end": "1626380"
  },
  {
    "text": "those sorts of dsls so this first one is",
    "start": "1626380",
    "end": "1633130"
  },
  {
    "text": "an example of the the scripting approach so this is a command-line tool that IBM",
    "start": "1633130",
    "end": "1639690"
  },
  {
    "text": "built and put up on up on github which they use to help manage their monitoring",
    "start": "1639690",
    "end": "1645760"
  },
  {
    "text": "and alerting and this gives you a slightly nicer interface than curling raw HTTP commands and it's something",
    "start": "1645760",
    "end": "1653080"
  },
  {
    "text": "that you can use to start building more complicated workflows on top of something which i think is really",
    "start": "1653080",
    "end": "1659200"
  },
  {
    "text": "valuable here is it it can also download all of your existing configuration so",
    "start": "1659200",
    "end": "1665010"
  },
  {
    "text": "IBM initially created this functionality for backup and restore processes but it",
    "start": "1665010",
    "end": "1671230"
  },
  {
    "text": "also means that you can easily bootstrap monitoring your alerting programmatically and that you don't have",
    "start": "1671230",
    "end": "1676660"
  },
  {
    "text": "to start completely from scratch when you're doing this we do something",
    "start": "1676660",
    "end": "1685620"
  },
  {
    "text": "internally at New Relic to manage our our synthetic monitoring scripts this way I mean this starts to get us into",
    "start": "1685620",
    "end": "1693370"
  },
  {
    "text": "into the subject of templating so synthetic monitors are just little JavaScript programs",
    "start": "1693370",
    "end": "1700020"
  },
  {
    "text": "but they're going to need to notice some things like URLs or API keys which might be different if you're monitoring across",
    "start": "1700020",
    "end": "1706380"
  },
  {
    "text": "several clusters they're providing a service so in this case we decided that",
    "start": "1706380",
    "end": "1718830"
  },
  {
    "text": "we would make these scripts into ARB templates which would allow us to to do substitutions and now we can have",
    "start": "1718830",
    "end": "1725670"
  },
  {
    "text": "something that drives this where we loop over all of our configurations generate a version of the script for each of them",
    "start": "1725670",
    "end": "1732270"
  },
  {
    "text": "and then upload that automatically via the API we do something very similar",
    "start": "1732270",
    "end": "1741630"
  },
  {
    "start": "1738000",
    "end": "1862000"
  },
  {
    "text": "with our dashboard management so we'll start with the JSON representation of",
    "start": "1741630",
    "end": "1748110"
  },
  {
    "text": "the dashboard in the API in this case we've gone and we've enhanced that using",
    "start": "1748110",
    "end": "1753900"
  },
  {
    "text": "the the twig templating language although you know the details of the format or which specific templating",
    "start": "1753900",
    "end": "1760380"
  },
  {
    "text": "system that you use aren't aren't super important but I want to let you see how this lets us iterate over sets of",
    "start": "1760380",
    "end": "1767220"
  },
  {
    "text": "substitutions in order to maintain multiple dashboards with a similar structure so in this case the team that",
    "start": "1767220",
    "end": "1773400"
  },
  {
    "text": "created this particular template they wanted to have separate dashboards for each of the clusters of their system if",
    "start": "1773400",
    "end": "1783570"
  },
  {
    "text": "you're wondering about how we make use of all those other attributes that we tagged the data with this little section",
    "start": "1783570",
    "end": "1790770"
  },
  {
    "text": "here is what lets us take advantage of those so this is just something that creates a general filtering control on",
    "start": "1790770",
    "end": "1797940"
  },
  {
    "text": "the dashboard where you can now go in and you can you can filter down on any of those attributes that you set",
    "start": "1797940",
    "end": "1803760"
  },
  {
    "text": "previously so if I wanted to take a dashboard that's looking across our systems globally I could go and I could",
    "start": "1803760",
    "end": "1810300"
  },
  {
    "text": "filter it down to just the blue cluster in the US east one region for example",
    "start": "1810300",
    "end": "1816740"
  },
  {
    "text": "this terraform is my next example and this is an example of a configuration language so this is a little bit",
    "start": "1820890",
    "end": "1830559"
  },
  {
    "text": "different from the template languages that we were just looking at because now we we no longer work with the raw API",
    "start": "1830559",
    "end": "1836770"
  },
  {
    "text": "format instead we're working with something which is abstracting away what the underlying configuration uses",
    "start": "1836770",
    "end": "1843520"
  },
  {
    "text": "whether it was JSON or yamo or XML instead terraform uses is a declarative",
    "start": "1843520",
    "end": "1850240"
  },
  {
    "text": "config it's got the hashing or configuring rich or HCl which gives you",
    "start": "1850240",
    "end": "1855429"
  },
  {
    "text": "this fairly clean way of configuring your alerts along with your other infrastructure some curiosity are many",
    "start": "1855429",
    "end": "1865630"
  },
  {
    "start": "1862000",
    "end": "1953000"
  },
  {
    "text": "people using terraform already yeah pretty good pretty good number terraform is a pretty nice system it's very high",
    "start": "1865630",
    "end": "1873429"
  },
  {
    "text": "quality it's well maintained it's well documented and it has a lot of integrations like this and this is used",
    "start": "1873429",
    "end": "1880059"
  },
  {
    "text": "by a lot of our teams at New Relic particularly the ones who are already using terraform in order to manage you",
    "start": "1880059",
    "end": "1887799"
  },
  {
    "text": "know to manage their infrastructures of the operational teams for them it makes a great deal of sense to also use the",
    "start": "1887799",
    "end": "1894730"
  },
  {
    "text": "terraform provider in order to monitor that infrastructure we do find you know",
    "start": "1894730",
    "end": "1903280"
  },
  {
    "text": "that one or two downsides with terraform one thing that's just a little gotcha to",
    "start": "1903280",
    "end": "1909490"
  },
  {
    "text": "watch out for is it not all the terraform resources support importing existing configuration so you know I",
    "start": "1909490",
    "end": "1917020"
  },
  {
    "text": "double-check that if you're trying to migrate from existing monitoring and alerting into in to terraform you might",
    "start": "1917020",
    "end": "1922690"
  },
  {
    "text": "have to start some stuff from scratch unfortunately and then the other thing",
    "start": "1922690",
    "end": "1928120"
  },
  {
    "text": "that there can be a little bit of an annoyance is that while terraform does have some functionality for reuse via",
    "start": "1928120",
    "end": "1934360"
  },
  {
    "text": "modules at the moment there's no support for loop control structures that is",
    "start": "1934360",
    "end": "1939490"
  },
  {
    "text": "about to change when terraform 0.12 ships so but at the moment if you're",
    "start": "1939490",
    "end": "1945940"
  },
  {
    "text": "trying to configure large numbers of applications in clusters you're terraform config can get",
    "start": "1945940",
    "end": "1951520"
  },
  {
    "text": "but repetitive so for that reason are",
    "start": "1951520",
    "end": "1956980"
  },
  {
    "start": "1953000",
    "end": "2170000"
  },
  {
    "text": "some of our teams at New Relic you who aren't operations teams but are more traditional application development",
    "start": "1956980",
    "end": "1963010"
  },
  {
    "text": "teams they typically prefer to use a Ruby DSL which we've developed for",
    "start": "1963010",
    "end": "1969100"
  },
  {
    "text": "managing alerts so here's a simple example of what this looks like this is",
    "start": "1969100",
    "end": "1977080"
  },
  {
    "text": "Ruby code but you know at this level it doesn't look very very different from the the terraform HCl it's a very",
    "start": "1977080",
    "end": "1984300"
  },
  {
    "text": "straightforward declarative configuration where things start to get",
    "start": "1984300",
    "end": "1991270"
  },
  {
    "text": "a little more interesting is an examples like this so because this is all Ruby",
    "start": "1991270",
    "end": "1997420"
  },
  {
    "text": "code we can add loops and we can add function calls and so on so in this case",
    "start": "1997420",
    "end": "2003030"
  },
  {
    "text": "we're looping over all of our clusters and then we use that cluster identity in",
    "start": "2003030",
    "end": "2008220"
  },
  {
    "text": "a couple of different ways in the alerts that we generate so the simplest one is that we're just inserting the customer",
    "start": "2008220",
    "end": "2015420"
  },
  {
    "text": "name into the alert policy but things things get a little more interesting from there we can also do things like",
    "start": "2015420",
    "end": "2023240"
  },
  {
    "text": "selecting notification channels based upon what cluster and the reason you'd",
    "start": "2023240",
    "end": "2028740"
  },
  {
    "text": "want to do that is that when something goes wrong in one of my production clusters I want that to go to Pedro duty",
    "start": "2028740",
    "end": "2035280"
  },
  {
    "text": "and and page someone but if something's going wrong in a pre-production cluster I would typically only want to get an",
    "start": "2035280",
    "end": "2042120"
  },
  {
    "text": "email or a slack message or something like that in the name of the cluster and",
    "start": "2042120",
    "end": "2051060"
  },
  {
    "text": "there's another interesting thing that that we're doing so one of the things that we've learned over time is that",
    "start": "2051060",
    "end": "2057929"
  },
  {
    "text": "when someone gets woken up by a page at 3:00 in the morning sometimes it takes a few minutes for",
    "start": "2057929",
    "end": "2063300"
  },
  {
    "text": "them to remember exactly how severe that particular alert might be so like a lot",
    "start": "2063300",
    "end": "2069030"
  },
  {
    "text": "of companies we have an established set of criteria for determining the severity of an instance or of an incident we use",
    "start": "2069030",
    "end": "2076500"
  },
  {
    "text": "a scale from from one to five and a trick that we've adopted in our alerting",
    "start": "2076500",
    "end": "2082020"
  },
  {
    "text": "is to go through in advance and determine that you know for example if this alert triggers that's indicating",
    "start": "2082020",
    "end": "2089450"
  },
  {
    "text": "that we're in a severity 3 incident so now we can put that embed that into the",
    "start": "2089450",
    "end": "2095300"
  },
  {
    "text": "message that the that the on-call responder gets when their page and they know immediately what severity of",
    "start": "2095300",
    "end": "2101840"
  },
  {
    "text": "incident to declare and they just get a little head start on the response in that way again you know we actually make",
    "start": "2101840",
    "end": "2109970"
  },
  {
    "text": "this a function and feed in the cluster name because in pre-production environments we it's not actually a",
    "start": "2109970",
    "end": "2116060"
  },
  {
    "text": "severity 3 it would just be a warning or something like that and then just",
    "start": "2116060",
    "end": "2123020"
  },
  {
    "text": "another little kindness to your on call responders that I wanted to point out in here is the runbook link so it used to",
    "start": "2123020",
    "end": "2130370"
  },
  {
    "text": "be the case that when someone would get paged they would go and they would have to look at which application was",
    "start": "2130370",
    "end": "2135890"
  },
  {
    "text": "alerting then they'd have to go and find the docs for that application find the",
    "start": "2135890",
    "end": "2141530"
  },
  {
    "text": "instructions for responding to alerts try to match up the alert that they just",
    "start": "2141530",
    "end": "2146570"
  },
  {
    "text": "received with a list on that page hopefully it's actually there and then",
    "start": "2146570",
    "end": "2152420"
  },
  {
    "text": "follow the link to the run book for how to respond to that so that's a lot of steps again when you've just gotten",
    "start": "2152420",
    "end": "2158960"
  },
  {
    "text": "woken up by a page at 3:00 in the morning so we try to make that a little bit easier for people today by including",
    "start": "2158960",
    "end": "2164720"
  },
  {
    "text": "a direct link to the relevant run book in every alert if you want to take even",
    "start": "2164720",
    "end": "2173900"
  },
  {
    "start": "2170000",
    "end": "2289000"
  },
  {
    "text": "a little more toil out of the process of setting up your alerting you can consider making the machines work for us",
    "start": "2173900",
    "end": "2180140"
  },
  {
    "text": "again and applying some machine learning techniques to creating creating alert",
    "start": "2180140",
    "end": "2185330"
  },
  {
    "text": "conditions so I'm just gonna show examples here so this this is an example",
    "start": "2185330",
    "end": "2190760"
  },
  {
    "text": "of a baseline alert so in this case rather than going and you know traditionally you would set an explicit",
    "start": "2190760",
    "end": "2197450"
  },
  {
    "text": "fixed threshold for an alert to go off in your condition in this case we just we pick a metric",
    "start": "2197450",
    "end": "2204650"
  },
  {
    "text": "that we're going to alert on and we pick a sensitivity and then it's going to go",
    "start": "2204650",
    "end": "2210500"
  },
  {
    "text": "and apply some machine learning algorithms and automatically detect when there's an abnormal value of that Met",
    "start": "2210500",
    "end": "2216940"
  },
  {
    "text": "and this it really aids in removing some toy from your teams because this base",
    "start": "2216940",
    "end": "2223360"
  },
  {
    "text": "line you know will automatically take into account seasonal variation and organic trends in the metric so you",
    "start": "2223360",
    "end": "2230740"
  },
  {
    "text": "don't have to be going and sort of constantly periodically recalibrating those alert thresholds outlier detection",
    "start": "2230740",
    "end": "2241120"
  },
  {
    "text": "is something similar because one step further to pick out a single instance of",
    "start": "2241120",
    "end": "2247210"
  },
  {
    "text": "a service or a single piece of hardware which is out of line with the rest and this is really valuable because in a",
    "start": "2247210",
    "end": "2254080"
  },
  {
    "text": "large modern deployment a signal like this might be completely washed out if we were just looking at the average over",
    "start": "2254080",
    "end": "2260380"
  },
  {
    "text": "all entities so these last two slides I've hopped back into showing you you",
    "start": "2260380",
    "end": "2267820"
  },
  {
    "text": "eyes simply because it makes it much easier to explain what what these types of alerting conditions are but you want",
    "start": "2267820",
    "end": "2274390"
  },
  {
    "text": "to say like these are still things that you can manage programmatically and I would you know recommend that as the",
    "start": "2274390",
    "end": "2279910"
  },
  {
    "text": "long-term scalable approach once you sort of get a sense for those sensitivities that you want to use again",
    "start": "2279910",
    "end": "2290910"
  },
  {
    "text": "what's important here really isn't the exact details of how you go about doing this which one of these approaches that",
    "start": "2290910",
    "end": "2298300"
  },
  {
    "text": "you want to use it's the general principle of really automating your your",
    "start": "2298300",
    "end": "2304690"
  },
  {
    "text": "alerting across all of your system because there's really nothing that you know keeps your ops and devops teams up",
    "start": "2304690",
    "end": "2311470"
  },
  {
    "text": "at night like wondering if everything is actually being monitored or if there's something that might be silently",
    "start": "2311470",
    "end": "2316750"
  },
  {
    "text": "breaking and they don't know about it so regardless of what techniques you use having a consistent approach to",
    "start": "2316750",
    "end": "2323650"
  },
  {
    "text": "generating and alerting on monitoring telemetry gives your teams the confidence that they need to be able to",
    "start": "2323650",
    "end": "2329770"
  },
  {
    "text": "keep moving quickly these sorts of infrastructure as code inspired approaches are exactly what you need in",
    "start": "2329770",
    "end": "2336670"
  },
  {
    "text": "order to give your teams that boost one more thing that's really important to do",
    "start": "2336670",
    "end": "2342040"
  },
  {
    "text": "to keep that confidence up is that you should probably be on a regular basis",
    "start": "2342040",
    "end": "2348040"
  },
  {
    "text": "actually making these configurations up to up to",
    "start": "2348040",
    "end": "2353099"
  },
  {
    "text": "your system up to production and the reason for that is if you really don't want to get into one of these situations",
    "start": "2353099",
    "end": "2359309"
  },
  {
    "text": "where someone went and like turned off an alert in the UI one day for whatever",
    "start": "2359309",
    "end": "2364890"
  },
  {
    "text": "reason they probably had a good reason that day but then they forget to turn it back on and then it turns out that",
    "start": "2364890",
    "end": "2370859"
  },
  {
    "text": "you're flying blind again so so you know once you've got these these you're",
    "start": "2370859",
    "end": "2376200"
  },
  {
    "text": "you're monitoring encode setup something that you know maybe once a day or so on",
    "start": "2376200",
    "end": "2381690"
  },
  {
    "text": "it goes and checks that you've actually still got the alerts and monitoring that",
    "start": "2381690",
    "end": "2386790"
  },
  {
    "text": "you were expecting okay so start",
    "start": "2386790",
    "end": "2393930"
  },
  {
    "text": "wrapping things up now so we've walked through how monitoring for modern architectures at scale impacts your",
    "start": "2393930",
    "end": "2400770"
  },
  {
    "text": "entire DevOps process writing and building code packaging and deploying",
    "start": "2400770",
    "end": "2406980"
  },
  {
    "text": "those applications to production and monitoring and alerting on those systems across all of these areas the common",
    "start": "2406980",
    "end": "2414690"
  },
  {
    "text": "pattern boils down to three things planning automation and simplicity you",
    "start": "2414690",
    "end": "2423359"
  },
  {
    "text": "want to start by thinking about the questions that you're going to need to ask about your systems this won't",
    "start": "2423359",
    "end": "2428490"
  },
  {
    "text": "necessarily be a one-time activity you'll undoubtedly end up revisiting this over time as your systems evolve",
    "start": "2428490",
    "end": "2435329"
  },
  {
    "text": "but each time you do you want to ask yourself about what information you'll need for your operations for doing",
    "start": "2435329",
    "end": "2442589"
  },
  {
    "text": "capacity planning for responding to support requests and Incident Response",
    "start": "2442589",
    "end": "2447660"
  },
  {
    "text": "and for making business decisions then you want to automate the collection of",
    "start": "2447660",
    "end": "2454500"
  },
  {
    "text": "that data through tools and libraries and automate being able to view an alert",
    "start": "2454500",
    "end": "2460319"
  },
  {
    "text": "on that data finally make sure that all",
    "start": "2460319",
    "end": "2465869"
  },
  {
    "text": "of your processes support doing the right thing to the point that it's easier to do the right thing than to do",
    "start": "2465869",
    "end": "2472170"
  },
  {
    "text": "the wrong thing because once you reach that point you're going to unlock a",
    "start": "2472170",
    "end": "2477690"
  },
  {
    "text": "freedom for your development teams to know that they're supported by the monitoring and learning that they need and that they",
    "start": "2477690",
    "end": "2483760"
  },
  {
    "text": "can stop worrying about that and that they can focus on building products instead I'd so thank you all for coming",
    "start": "2483760",
    "end": "2494020"
  },
  {
    "text": "this afternoon once again my name is Kevin scaled offeri I you'll find me at",
    "start": "2494020",
    "end": "2499720"
  },
  {
    "text": "kase Gowda F at most places on the Internet I know people might need a little bit of",
    "start": "2499720",
    "end": "2505630"
  },
  {
    "text": "travel time if they're heading to another venue after this so I'm not going to hold everyone in the room doing",
    "start": "2505630",
    "end": "2511180"
  },
  {
    "text": "audience questions but if you'd like to talk further I will hang out until we",
    "start": "2511180",
    "end": "2516640"
  },
  {
    "text": "need to clear the room for the next talk so feel free to come up and chat Thanks [Applause]",
    "start": "2516640",
    "end": "2524410"
  }
]