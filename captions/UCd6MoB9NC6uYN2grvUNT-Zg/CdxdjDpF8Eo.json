[
  {
    "start": "0",
    "end": "19000"
  },
  {
    "text": "I'd like to thank you guys all for being here today we're super excited to share what we've built with you my name is Dan",
    "start": "0",
    "end": "5549"
  },
  {
    "text": "Curtis Mayer I'm the software development manager for a TBS Fargate and to my left here I have Archana",
    "start": "5549",
    "end": "10980"
  },
  {
    "text": "srikanta a senior software engineer for 80 West Fargo we have a lot to cover in our presentation today so we're just",
    "start": "10980",
    "end": "16410"
  },
  {
    "text": "gonna go ahead and dive right in the goal of this talk is really to provide",
    "start": "16410",
    "end": "21750"
  },
  {
    "start": "19000",
    "end": "19000"
  },
  {
    "text": "you with information that you need to know to give able to get started with Fargate right away in order for us to cover all the details that we want to",
    "start": "21750",
    "end": "27720"
  },
  {
    "text": "cover and to make them tangible we have structured this talk as a progression in this progression what's going to step",
    "start": "27720",
    "end": "33630"
  },
  {
    "text": "through building a tic-tac-toe web app called score keep that takes advantage of many of the EECS and Fargate features",
    "start": "33630",
    "end": "39290"
  },
  {
    "text": "the application is made up of two containers a front and container that uses angular and nginx for all the page",
    "start": "39290",
    "end": "45690"
  },
  {
    "text": "elements as well as a back-end java spring container that uses restful api requests that are forwarded on from",
    "start": "45690",
    "end": "50910"
  },
  {
    "text": "nginx the front end container is responsible for user interface and the API container is responsible for all the",
    "start": "50910",
    "end": "56879"
  },
  {
    "text": "business logic as well as integrating in with dynamo DB for stateful storage and SNS to notify of game completion if",
    "start": "56879",
    "end": "64920"
  },
  {
    "text": "you'd like to run through the setup yourself this package will be available shortly after this talk on github under our a Tobias labs project we've broken",
    "start": "64920",
    "end": "74790"
  },
  {
    "text": "down this talk into five steps and each of these steps will provide an overview of how it works with Fargate walk",
    "start": "74790",
    "end": "80430"
  },
  {
    "text": "through the configuration options that are available regardless of if you use it in this application as well as select the configuration option that sort of",
    "start": "80430",
    "end": "86939"
  },
  {
    "text": "best fits our use case at the very end we'll demonstrate the application running on Fargate we'll pull it up in",
    "start": "86939",
    "end": "92159"
  },
  {
    "text": "the AWS CLI show you the repository and then go into the ECS console to watch the tasks and the service but before we",
    "start": "92159",
    "end": "101520"
  },
  {
    "text": "get start with that let's go ahead and do a quick overview of the constructs in Fargate as Fargate is exposed through",
    "start": "101520",
    "end": "107700"
  },
  {
    "start": "106000",
    "end": "106000"
  },
  {
    "text": "Amazon ECS the constructs are going to be identical that those that are used to today in Amazon ECS we build it in a way",
    "start": "107700",
    "end": "114180"
  },
  {
    "text": "to enable the migration between bringing your own ec2 instances and utilizing",
    "start": "114180",
    "end": "119340"
  },
  {
    "text": "Fargate based on the level of control that you need so the first construct is the task definition the task definition",
    "start": "119340",
    "end": "125430"
  },
  {
    "text": "is like a blueprint or a recipe for your task it's where you can figure all the relevant parameters for the container",
    "start": "125430",
    "end": "131069"
  },
  {
    "text": "set that you want to run now after the task definition we have the the cluster construct and now you",
    "start": "131069",
    "end": "137639"
  },
  {
    "text": "may notice that we are still defining a cluster despite not needing a cluster of instances however this construct is",
    "start": "137639",
    "end": "143310"
  },
  {
    "text": "still very useful as it serves both as a logical abstraction to organize your tasks together into collections as well",
    "start": "143310",
    "end": "149519"
  },
  {
    "text": "as as a boundary for permissions in isolation you can set up ion policies on your cluster to prevent users from being",
    "start": "149519",
    "end": "156450"
  },
  {
    "text": "able to run tasks in a particular cluster and you can permission it down to a limited scope of resources in ECS",
    "start": "156450",
    "end": "163530"
  },
  {
    "text": "clusters have the ability to run both tasks in Fargate and tasks lying on ec2",
    "start": "163530",
    "end": "168870"
  },
  {
    "text": "instances that you bring simultaneously and so this offers you flexibility to organize your resources regardless of if",
    "start": "168870",
    "end": "174959"
  },
  {
    "text": "you want to run it on Fargate or on top of an ec2 instance that you're bringing next we have the task which is simply an",
    "start": "174959",
    "end": "181829"
  },
  {
    "text": "instantiation of your task definition once you launch you may override parameters in the task definition as",
    "start": "181829",
    "end": "186930"
  },
  {
    "text": "well as specify runtime specific parameters and it is here that you're going to specify Fargate as your launch",
    "start": "186930",
    "end": "192299"
  },
  {
    "text": "type in order to take use of our gate and now tasks are great however",
    "start": "192299",
    "end": "199169"
  },
  {
    "text": "oftentimes you need multiple copies of a task and you don't want to worry about a particular task failing so that there is",
    "start": "199169",
    "end": "205199"
  },
  {
    "text": "so that's why we have a construct of services services are very similar to the ec2 auto-scaling concept and allows",
    "start": "205199",
    "end": "211290"
  },
  {
    "text": "ECS to keep multiple copies of your Fargate tasks running you can use your services with an optional load balancer",
    "start": "211290",
    "end": "217979"
  },
  {
    "text": "to load bounce between the tasks for Fargate we support both the alb and the NLB load balancer and services are also",
    "start": "217979",
    "end": "224939"
  },
  {
    "text": "valuable for updating copies of your tasks with a single API call now that",
    "start": "224939",
    "end": "233129"
  },
  {
    "text": "we've reviewed those constructs let's jump back in to configure your ask or keep application you remember that attach definition is like a blueprint or",
    "start": "233129",
    "end": "239579"
  },
  {
    "text": "a recipe for your tasks by specifying information about your containers up front it makes it easy for this",
    "start": "239579",
    "end": "244799"
  },
  {
    "text": "configuration to be shared and have reproducible task launches to the left",
    "start": "244799",
    "end": "250799"
  },
  {
    "text": "you will see that we have a start of our task definition for the school keep application that the first thing we",
    "start": "250799",
    "end": "256169"
  },
  {
    "text": "define is the family as a task definition urns are immutable version documents the family provides a friendly",
    "start": "256169",
    "end": "261719"
  },
  {
    "text": "way to reference a set of versions next we have the container definitions block which finds the containers that we want to run",
    "start": "261719",
    "end": "267760"
  },
  {
    "text": "as part of this task note the containers defining tasks will be started at the same time and will be collocated on the",
    "start": "267760",
    "end": "273670"
  },
  {
    "text": "same host for a score keep application we have configured our front-end container talking to our API container",
    "start": "273670",
    "end": "279220"
  },
  {
    "text": "on localhost and so we've put them in the same task definition so they can communicate over that localhost interface however if you're a building",
    "start": "279220",
    "end": "286510"
  },
  {
    "text": "an application and you wanted to have the scales the containers be able to scale or deploy it independently you could also split these two containers",
    "start": "286510",
    "end": "292480"
  },
  {
    "text": "out into task definitions and talk to them through a load balancer or through an IP address when using ApS when using",
    "start": "292480",
    "end": "300190"
  },
  {
    "text": "AWS for gate you can specify the images from an Amazon Elastic container registry which uses I am permissions to",
    "start": "300190",
    "end": "306550"
  },
  {
    "text": "perform the image pull operation or you can use it with a any public repository and so this snippet here represents the",
    "start": "306550",
    "end": "312880"
  },
  {
    "text": "core of any task definition it's all required information that you need to get started and you're going to find it no matter what container management",
    "start": "312880",
    "end": "319180"
  },
  {
    "text": "solution that you use so let's first add in compute to this for those familiar",
    "start": "319180",
    "end": "325900"
  },
  {
    "start": "324000",
    "end": "324000"
  },
  {
    "text": "with UCS the units have been kept the same you can specify CPU and CPU units and you can specify memory and megabytes",
    "start": "325900",
    "end": "332220"
  },
  {
    "text": "however we have introduced a new concept known as task level resources and these task level resources that you allows you",
    "start": "332220",
    "end": "340570"
  },
  {
    "text": "to set a ceiling for the total amount of resources that your task can consume and so this gives for gate information it",
    "start": "340570",
    "end": "345790"
  },
  {
    "text": "needs to be able to allocate the correct capacity on your behalf when launching your task task level resources are the",
    "start": "345790",
    "end": "351460"
  },
  {
    "text": "only required resource parameters with AWS Fargate and now you may notice here that on the left hand side of the screen",
    "start": "351460",
    "end": "357910"
  },
  {
    "text": "I have them units in CPU units and megabytes but in the right-half I'm",
    "start": "357910",
    "end": "363490"
  },
  {
    "text": "specifying it in V CPU and gigabyte with task level resources we support the ability to specify alternate units so",
    "start": "363490",
    "end": "369310"
  },
  {
    "text": "you can write them in a way that feels natural to you for those of you familiar",
    "start": "369310",
    "end": "374830"
  },
  {
    "text": "with dcs container level resources are still available to a TBR gate but these resources are now made optional when",
    "start": "374830",
    "end": "380380"
  },
  {
    "text": "using task level resources and so to get an idea about how all this works together in practice let's go through it",
    "start": "380380",
    "end": "387130"
  },
  {
    "start": "386000",
    "end": "386000"
  },
  {
    "text": "step by step and so let's first start with CPU as previously mentioned the CPU is a total",
    "start": "387130",
    "end": "393610"
  },
  {
    "text": "amount of CPU allocated to your task by default each container is given an equal share of the available CPU when",
    "start": "393610",
    "end": "400330"
  },
  {
    "text": "contention if there is no contention the containers can then burst up to the total amount of CPU specified at the",
    "start": "400330",
    "end": "406360"
  },
  {
    "text": "task level occasionally sharing is not a desirable behavior or equal sharing is",
    "start": "406360",
    "end": "413289"
  },
  {
    "text": "not a desirable behavior sometimes you when you have a task that behaves poorly when it's not given enough CPU and you",
    "start": "413289",
    "end": "420009"
  },
  {
    "text": "want to be all to allocate additional units to it other times you have a sidecar task that is performing offline prom processing and you don't want to be",
    "start": "420009",
    "end": "427210"
  },
  {
    "text": "able to give it as many units and you want to specify a smaller amount in both these config cases you can configure a",
    "start": "427210",
    "end": "433150"
  },
  {
    "text": "ratio of the CPU units given to each task up to the amount given in the task",
    "start": "433150",
    "end": "438430"
  },
  {
    "text": "level CPU well this is not necessary for our score keep application we've decided",
    "start": "438430",
    "end": "443590"
  },
  {
    "text": "to configure a CPU for this purpose of illustration this way we've allocated three-quarters of the shares to our more",
    "start": "443590",
    "end": "449409"
  },
  {
    "text": "resource hungry API container and while we've allocated 1/4 of the shares to our nginx front and container and we do this",
    "start": "449409",
    "end": "455770"
  },
  {
    "text": "by specifying the values of 256 and 758 in the respective container definitions",
    "start": "455770",
    "end": "462810"
  },
  {
    "start": "462000",
    "end": "462000"
  },
  {
    "text": "so moving on to task memory so task memory is the total amount of memory allocated to your container when you use",
    "start": "462930",
    "end": "468460"
  },
  {
    "text": "your task if you just specify task memory the memory will be allocated based on the behavior of the Linux",
    "start": "468460",
    "end": "474639"
  },
  {
    "text": "memory allocator up to the task maximum and so it's a little bit of a first-come first-serve model to customize this",
    "start": "474639",
    "end": "480879"
  },
  {
    "text": "behavior further we have two container level parameters that you can specify one is called memory and one is called",
    "start": "480879",
    "end": "485889"
  },
  {
    "text": "memory reservation and these can be used in conjunction with task memory the first one we'll go over is memory",
    "start": "485889",
    "end": "491379"
  },
  {
    "text": "reservation so a memory reservation is a soft lower bound for the container to operate in the lower bound is used as",
    "start": "491379",
    "end": "498400"
  },
  {
    "text": "metadata to the to the memory allocator and that metadata is used to signal the kernel to reclaim memory down to that",
    "start": "498400",
    "end": "504460"
  },
  {
    "text": "level when memory is under contention and so in this example here if the score keep API container were using up a large",
    "start": "504460",
    "end": "511690"
  },
  {
    "text": "amount of memory and memory were to be full at the task level the kernel would prompt the memory allocator to look at",
    "start": "511690",
    "end": "518440"
  },
  {
    "text": "opportunities to bring the score keep api container back down to a respectable level the other container option that we",
    "start": "518440",
    "end": "526839"
  },
  {
    "text": "have is memory and memory when specified at the container level is similar to memory when specified at the task level",
    "start": "526839",
    "end": "532329"
  },
  {
    "text": "it serves as a hard upper bed where the container will be killed if it goes tries to go beyond this value the",
    "start": "532329",
    "end": "538450"
  },
  {
    "text": "typical use case you have here is that you have a non-essential container that when packaged with your task you would",
    "start": "538450",
    "end": "546280"
  },
  {
    "text": "like for it to be killed rather than bringing down the entire task and so let's say that you had a log driver",
    "start": "546280",
    "end": "552130"
  },
  {
    "text": "where the logs were not business-critical and so you'd like the logs to be sent out but if for some",
    "start": "552130",
    "end": "557530"
  },
  {
    "text": "reason this log container were to be taking up too much memory you would rather have the task continue running without it then for the entire task to",
    "start": "557530",
    "end": "563950"
  },
  {
    "text": "be crashing so putting us all together",
    "start": "563950",
    "end": "569290"
  },
  {
    "start": "567000",
    "end": "567000"
  },
  {
    "text": "this slide shows all the available task level resource configurations available for Fargate there's over 50",
    "start": "569290",
    "end": "574870"
  },
  {
    "text": "configurations here to allow you to affect efficiently allocate the resources to your Fargate tasks ranging",
    "start": "574870",
    "end": "581440"
  },
  {
    "text": "all the way from one virtual CPU and 512 megabytes of memory all the way up to four virtual CPUs and 30 gigabytes of",
    "start": "581440",
    "end": "587740"
  },
  {
    "text": "memory to find a task size that fits for your use case and when you pick these sizes here you paid just for the",
    "start": "587740",
    "end": "594340"
  },
  {
    "text": "resources that you're provisioning at this task level on a per second basis with a one minute minimum now before I",
    "start": "594340",
    "end": "603790"
  },
  {
    "start": "601000",
    "end": "601000"
  },
  {
    "text": "hand it over to Archana to talk about networking I'd like to take the time to talk about platform versions as it has",
    "start": "603790",
    "end": "609400"
  },
  {
    "text": "some relation to the CPU memory concepts that we just went through so a platform version is a new concept into the ECS",
    "start": "609400",
    "end": "614830"
  },
  {
    "text": "api with a DBMS far gate and platform version refers to the runtime environment outside your tasks this",
    "start": "614830",
    "end": "620710"
  },
  {
    "text": "includes things like the container runtime and the Linux kernel now you may be thinking great but why do I care",
    "start": "620710",
    "end": "626800"
  },
  {
    "text": "about this isn't everything just packaged inside my container and while it is true that all your dependent",
    "start": "626800",
    "end": "632530"
  },
  {
    "text": "libraries may be packaged inside your task your application interfaces directly with the Linux kernel to make system calls and utilizes underlying",
    "start": "632530",
    "end": "639400"
  },
  {
    "text": "file systems provided by the platform and the host and so as we make improvements to Fargate some of these",
    "start": "639400",
    "end": "645190"
  },
  {
    "text": "will change and we want to provide the transparency into the details as well as enable control to be able to test and",
    "start": "645190",
    "end": "651520"
  },
  {
    "text": "validate before you adopt any new platform version in case there's any adverse side effects just specify a",
    "start": "651520",
    "end": "656890"
  },
  {
    "text": "platform version at launch you can either specify it with - - platform version and the version at the",
    "start": "656890",
    "end": "663130"
  },
  {
    "text": "end you can specify it with the tag of latest which will always pull the latest platform version or you can leave it blink which",
    "start": "663130",
    "end": "669610"
  },
  {
    "text": "will just give you the latest platform version platform versions are backwards compatible for the vast majority of",
    "start": "669610",
    "end": "675520"
  },
  {
    "text": "workloads so we do recommend adopting the latest version to always stay up to date with the latest features and fixes and to only go back to previous platform",
    "start": "675520",
    "end": "682210"
  },
  {
    "text": "versions if you experience any sort of issue so with that I would like to turn",
    "start": "682210",
    "end": "688360"
  },
  {
    "text": "it over to our channal Kanta it will talk to you a little bit about the remaining configuration options and",
    "start": "688360",
    "end": "693370"
  },
  {
    "text": "features of our game alright hi everybody",
    "start": "693370",
    "end": "698410"
  },
  {
    "text": "thank you Dan so I'm going to talk to you now about networking and some of the other features that we've built for",
    "start": "698410",
    "end": "703840"
  },
  {
    "text": "Fargate from dan you heard about how you can configure CPU and memory resources for your Fargate tasks but in most cases",
    "start": "703840",
    "end": "712300"
  },
  {
    "text": "just giving your application compute resources is not enough you need some kind of network connectivity to your",
    "start": "712300",
    "end": "717520"
  },
  {
    "text": "task so in this section we're gonna step through one step at a time exactly how",
    "start": "717520",
    "end": "723250"
  },
  {
    "text": "you can configure the network around your Fargate task so all things",
    "start": "723250",
    "end": "729310"
  },
  {
    "start": "728000",
    "end": "728000"
  },
  {
    "text": "networking with an AWS always starts with the V PC and many of you are probably already familiar with V pcs",
    "start": "729310",
    "end": "736240"
  },
  {
    "text": "it's very widely used across many AWS services that also need networking like",
    "start": "736240",
    "end": "741610"
  },
  {
    "text": "ec2 ELB RDS etc but for those of you that are not aware what a V PC is V PC",
    "start": "741610",
    "end": "747430"
  },
  {
    "text": "stands for virtual private cloud and its AWS is way of giving you your own",
    "start": "747430",
    "end": "752560"
  },
  {
    "text": "private network on the AWS cloud and what this means is that your V PC is",
    "start": "752560",
    "end": "758230"
  },
  {
    "text": "associated with a set of private IP addresses that are not exposed on the internet that get allocated to the",
    "start": "758230",
    "end": "764410"
  },
  {
    "text": "various AWS entities that you may launch into this V PC so in our example here we",
    "start": "764410",
    "end": "770830"
  },
  {
    "text": "have a V PC that's associated with an address range of 170 to 3100 slash 16",
    "start": "770830",
    "end": "776860"
  },
  {
    "text": "which is the Sider notation for all IP addresses that start with 170 2.31",
    "start": "776860",
    "end": "781950"
  },
  {
    "text": "the next thing you would do is create a subnet inside of this V PC subnet as the",
    "start": "781950",
    "end": "787690"
  },
  {
    "text": "name suggests is a sub network within your V PC and it gives you a way to carve out your V PC into smaller",
    "start": "787690",
    "end": "794110"
  },
  {
    "text": "networks so in this case our subnet is associated with an IP address range of 172 31 1z",
    "start": "794110",
    "end": "800920"
  },
  {
    "text": "which is a subset of the IP address ranges of your V PC so now you have a",
    "start": "800920",
    "end": "806320"
  },
  {
    "text": "network set up on AWS and you're ready to launch some Fargate tasks in here so when you launch a Fargate task using the",
    "start": "806320",
    "end": "814150"
  },
  {
    "text": "run tasks API you're going to launch it into one of these subnets that you just created much like you would launch ec2",
    "start": "814150",
    "end": "820330"
  },
  {
    "text": "instances into subnets and what happens underneath the hood is that we create an",
    "start": "820330",
    "end": "827140"
  },
  {
    "text": "elastic network interface in the subnet that you pick this elastic network",
    "start": "827140",
    "end": "832330"
  },
  {
    "text": "interface gets a private IP address from the address range associated with your subnet and then we attach that eni to",
    "start": "832330",
    "end": "840250"
  },
  {
    "text": "your task so now your task has a private IP address from your V PC and all the",
    "start": "840250",
    "end": "845410"
  },
  {
    "text": "containers within this task can use that IP address to interface with other",
    "start": "845410",
    "end": "851080"
  },
  {
    "text": "private entities in your V PC without having to go over the internet but you",
    "start": "851080",
    "end": "858160"
  },
  {
    "text": "can also choose to assign public IP addresses to your tasks if you want your tasks to be addressable on the internet",
    "start": "858160",
    "end": "864670"
  },
  {
    "text": "and we'll go through the details of exactly how you can configure these things you can also use security group",
    "start": "864670",
    "end": "871270"
  },
  {
    "text": "rules and define fine-grained inbound and outbound rules to control exactly",
    "start": "871270",
    "end": "877420"
  },
  {
    "text": "what kind of traffic is allowed to and from your tasks again that's a VPC feature that's been available with ec2",
    "start": "877420",
    "end": "883540"
  },
  {
    "text": "it's now available with your Fargate tasks and one last thing about subnets",
    "start": "883540",
    "end": "889360"
  },
  {
    "text": "before we move on is when you create a subnet it lives in a specific",
    "start": "889360",
    "end": "894610"
  },
  {
    "text": "availability zone and as many of you may be aware each of AWS is geographic",
    "start": "894610",
    "end": "900130"
  },
  {
    "text": "regions are divided into availability zones and these availability zones are designed from the ground up to have",
    "start": "900130",
    "end": "907300"
  },
  {
    "text": "independent fault characteristics from one another so we highly recommend that you create a subnet in multiple",
    "start": "907300",
    "end": "914080"
  },
  {
    "text": "availability zones and spread your tasks across these subnets so you can build that redundancy into your application",
    "start": "914080",
    "end": "922500"
  },
  {
    "text": "all right so what does the API experience look like around networking so this is the task definition that Dan",
    "start": "922500",
    "end": "929530"
  },
  {
    "start": "923000",
    "end": "923000"
  },
  {
    "text": "already has gone through and we're going to start to layer in some networking parameters here the first thing that you need to",
    "start": "929530",
    "end": "936190"
  },
  {
    "text": "set is a network mode parameter in the task definition and you will set it to",
    "start": "936190",
    "end": "941290"
  },
  {
    "text": "AWS VPC and that's what tells us that all the tasks that you will run against",
    "start": "941290",
    "end": "946540"
  },
  {
    "text": "this task definition you intend to run it inside of your own VPC and then on",
    "start": "946540",
    "end": "952390"
  },
  {
    "text": "the run tasks API call itself you give us a pointer to your task definition which is similar to the ECS experience",
    "start": "952390",
    "end": "959290"
  },
  {
    "text": "and then there's a network configuration parameter on here and in this parameter you give us the subnets and the security",
    "start": "959290",
    "end": "966670"
  },
  {
    "text": "groups that you want to associate with the Fargate task that you're going to launch and as you can see here you can",
    "start": "966670",
    "end": "973630"
  },
  {
    "text": "provide us with the list of subnets and if you do provide us with more than one",
    "start": "973630",
    "end": "978810"
  },
  {
    "text": "we will automatically pick a subnet from that list to launch your tasks into in a",
    "start": "978810",
    "end": "985060"
  },
  {
    "text": "manner that optimizes that availability zone spread that I talked about across all the tasks that are running against",
    "start": "985060",
    "end": "991240"
  },
  {
    "text": "that specific task definition family alright so now we know how to launch a",
    "start": "991240",
    "end": "999280"
  },
  {
    "start": "996000",
    "end": "996000"
  },
  {
    "text": "task we know how to have your tasks be associated with the private IP address from your V PC and all the network",
    "start": "999280",
    "end": "1006660"
  },
  {
    "text": "traffic to and from your application that's running within the Fargate task is going to go over this task E and I",
    "start": "1006660",
    "end": "1012720"
  },
  {
    "text": "that got attached to it and oftentimes a common access pattern with many",
    "start": "1012720",
    "end": "1018450"
  },
  {
    "text": "applications is that it requires either inbound or outbound or both access inbound or outbound access to the",
    "start": "1018450",
    "end": "1025860"
  },
  {
    "text": "Internet and that requires a few additional steps that we're going to go through in this section and one more",
    "start": "1025860",
    "end": "1034020"
  },
  {
    "text": "thing you should know about your task E&I is that in addition to your applications network traffic there are a",
    "start": "1034020",
    "end": "1040439"
  },
  {
    "text": "few other activities that happen over your task eni and those are the pulling",
    "start": "1040440",
    "end": "1045750"
  },
  {
    "text": "of the image from either ECR or the public registry that you have stored your images in and also we have a",
    "start": "1045750",
    "end": "1053430"
  },
  {
    "text": "feature where we can push logs from your application into cloud watch and that",
    "start": "1053430",
    "end": "1058470"
  },
  {
    "text": "communication also happens over your task eni so when you configure the network around your task make sure that",
    "start": "1058470",
    "end": "1065220"
  },
  {
    "text": "these endpoints are accessible from your task and in most cases I mean",
    "start": "1065220",
    "end": "1070650"
  },
  {
    "text": "ECR and cloud watch our public endpoints on the Internet and in most cases public repositories are also public endpoints",
    "start": "1070650",
    "end": "1077220"
  },
  {
    "text": "on the Internet so in most cases you probably will need outbound internet access from your task",
    "start": "1077220",
    "end": "1082980"
  },
  {
    "text": "over the Eni so there are two common modes of setup that we think most",
    "start": "1082980",
    "end": "1089820"
  },
  {
    "text": "applications will sort of fit into the first one is where your task is private",
    "start": "1089820",
    "end": "1095640"
  },
  {
    "text": "in that it does not allow any inbound internet access but it still allows outbound internet access either for the",
    "start": "1095640",
    "end": "1102840"
  },
  {
    "text": "applications use case or for the image pull or logs pushing and the second set up is a public task where it allows both",
    "start": "1102840",
    "end": "1110700"
  },
  {
    "text": "inbound and outbound internet access over the ena so let's go through how you",
    "start": "1110700",
    "end": "1116700"
  },
  {
    "text": "would go about setting up each of these scenarios so private tasks set up so",
    "start": "1116700",
    "end": "1123929"
  },
  {
    "start": "1121000",
    "end": "1121000"
  },
  {
    "text": "this is a set up that we've previously introduced you have a V PC you have a subnet you have a task that has an en I",
    "start": "1123929",
    "end": "1129929"
  },
  {
    "text": "with the private IP address from your V PC you now want this task to not be able",
    "start": "1129929",
    "end": "1135690"
  },
  {
    "text": "to take any inbound internet traffic but still be able to send outbound Internet traffic so the first thing you will do",
    "start": "1135690",
    "end": "1143480"
  },
  {
    "text": "for any traffic that needs to leave your V PC and go out to the Internet the first thing you need is an internet",
    "start": "1143480",
    "end": "1149130"
  },
  {
    "text": "gateway so you'll have to attach an Internet gateway to your V PC and now",
    "start": "1149130",
    "end": "1154679"
  },
  {
    "text": "we're going to create a second subnet and our V PC and we're going to call it the public subnet because we're going to",
    "start": "1154679",
    "end": "1159870"
  },
  {
    "text": "put all the entities that interface with the Internet in this subnet so it can be segregated from other",
    "start": "1159870",
    "end": "1166110"
  },
  {
    "text": "private entities that don't interface with with the internet now we need a way",
    "start": "1166110",
    "end": "1172049"
  },
  {
    "text": "for things in your public subnet to then send traffic to the Internet gateway that will send it out to the internet",
    "start": "1172049",
    "end": "1177539"
  },
  {
    "text": "for that you need a route so we associate a route table with this public",
    "start": "1177539",
    "end": "1182880"
  },
  {
    "text": "subnet with the following rules there and what the rules there are saying is that any network packet that's destined",
    "start": "1182880",
    "end": "1191190"
  },
  {
    "text": "for 117 or 3100 which is the private IP address space of the V PC stays within",
    "start": "1191190",
    "end": "1197159"
  },
  {
    "text": "the V PC but any other address any other destination address will be routed to the Internet gateway so now we",
    "start": "1197159",
    "end": "1205760"
  },
  {
    "text": "have a route for things in your public subnet to send traffic out to the Internet we need to put something in",
    "start": "1205760",
    "end": "1211130"
  },
  {
    "text": "there that actually forwards the traffic out to the Internet gateway and what we're going to add in here now is an ADD",
    "start": "1211130",
    "end": "1216590"
  },
  {
    "text": "gateway this is a weak VPC construct that allows exactly what we need it",
    "start": "1216590",
    "end": "1223250"
  },
  {
    "text": "allows private entities in your private subnets to forward traffic out to the Internet using network address",
    "start": "1223250",
    "end": "1229310"
  },
  {
    "text": "translation so in this case we have an a gateway NAT Gateway itself has a public",
    "start": "1229310",
    "end": "1234710"
  },
  {
    "text": "IP and it now has a route to send traffic out through the Internet gateway into the Internet the other piece that",
    "start": "1234710",
    "end": "1240860"
  },
  {
    "text": "that's needed here is to now allow private entities in your private VPC to",
    "start": "1240860",
    "end": "1247520"
  },
  {
    "text": "forward traffic out into to the NAT gateway which is then wired to send traffic out into the Internet and we'll",
    "start": "1247520",
    "end": "1254030"
  },
  {
    "text": "do that with another route table that's attached to your private subnet and the",
    "start": "1254030",
    "end": "1260210"
  },
  {
    "text": "rules in this drought table look similar to the rules in the public subnet the",
    "start": "1260210",
    "end": "1265880"
  },
  {
    "text": "only difference is the local traffic still stays local within the VPC the only difference is that for all other",
    "start": "1265880",
    "end": "1272900"
  },
  {
    "text": "addresses that are non VPC addresses we're now going to forward the traffic to the NAT gateway in the in the public",
    "start": "1272900",
    "end": "1280220"
  },
  {
    "text": "subnet so traffic goes from your task that has a private IP to the NAT gateway",
    "start": "1280220",
    "end": "1285680"
  },
  {
    "text": "that's in your public subnet and out into the Internet gateway and out to the Internet all right and one other thing",
    "start": "1285680",
    "end": "1295100"
  },
  {
    "text": "that you have to remember to do is the security groups that you pass in on the run tasks API you have to remember to",
    "start": "1295100",
    "end": "1302210"
  },
  {
    "text": "allow outbound traffic on your security group in order to allow your task to",
    "start": "1302210",
    "end": "1308000"
  },
  {
    "text": "talk out to the Internet all right so what does the public task setup look",
    "start": "1308000",
    "end": "1314540"
  },
  {
    "start": "1311000",
    "end": "1311000"
  },
  {
    "text": "like and public task remember is it both inbound and outbound access for the task",
    "start": "1314540",
    "end": "1320810"
  },
  {
    "text": "with the internet so you still need the internet gateway that we talked about you you still need a public subnet with",
    "start": "1320810",
    "end": "1327860"
  },
  {
    "text": "the route that routes to the Internet gateway but this time instead of launching the Fargate task",
    "start": "1327860",
    "end": "1333530"
  },
  {
    "text": "into the private subnet we're going to go ahead and launch it directly into our public subnet because it's it needs to",
    "start": "1333530",
    "end": "1339770"
  },
  {
    "text": "be addressable from the internet and now",
    "start": "1339770",
    "end": "1345470"
  },
  {
    "text": "you also need to give your task a public IP address if it needs to be addressed from the internet so we have another",
    "start": "1345470",
    "end": "1350810"
  },
  {
    "text": "field in the network configuration parameter of run task to assign a public",
    "start": "1350810",
    "end": "1356540"
  },
  {
    "text": "IP to your task now this is a new feature that we launched for AWS Fargate so please take note of that and what",
    "start": "1356540",
    "end": "1364370"
  },
  {
    "text": "this does is yuri and i that we create will get a public an ipv4 public IP address that your task can then use to",
    "start": "1364370",
    "end": "1371870"
  },
  {
    "text": "interface with the internet outside and the security groups again remember",
    "start": "1371870",
    "end": "1379520"
  },
  {
    "text": "security groups that you pass in in this scenario will have to allow outbound traffic to the internet as before but",
    "start": "1379520",
    "end": "1385130"
  },
  {
    "text": "also it will need to allow the requisite inbound traffic that you expect your task to take in from the internet and",
    "start": "1385130",
    "end": "1394420"
  },
  {
    "text": "once you actually run the task make the api call get a response in order to",
    "start": "1394420",
    "end": "1399860"
  },
  {
    "text": "discover the public IP address that was assigned to your task you will describe",
    "start": "1399860",
    "end": "1406190"
  },
  {
    "text": "the eni that's been attached to your task and that's how you'll know the public IP address that got allocated to",
    "start": "1406190",
    "end": "1411590"
  },
  {
    "text": "your task alright before we wrap up the",
    "start": "1411590",
    "end": "1417770"
  },
  {
    "text": "networking section I think another very common use case is to keep your tasks private in your",
    "start": "1417770",
    "end": "1424790"
  },
  {
    "text": "private subnet but allow things on the internet to interact with your tasks through a load balancer that's public so",
    "start": "1424790",
    "end": "1432020"
  },
  {
    "text": "we're going to go through that set up very quickly and as Dan mentioned on a",
    "start": "1432020",
    "end": "1438050"
  },
  {
    "text": "previous slide ELB integration is automatically and natively supported with ECS services that's still true with",
    "start": "1438050",
    "end": "1445040"
  },
  {
    "text": "Fargate we do support and alb and NLB and just a few pointers before we move",
    "start": "1445040",
    "end": "1455270"
  },
  {
    "text": "on into the networking setup before you actually create the service with DCs you",
    "start": "1455270",
    "end": "1460850"
  },
  {
    "text": "will have to go into the EOB console and create your load balancer and set that up and just a few pointers when you're",
    "start": "1460850",
    "end": "1465920"
  },
  {
    "text": "doing that alb requires you to pick at least two subnets in two different availability",
    "start": "1465920",
    "end": "1471480"
  },
  {
    "text": "zones that's a requirement of alb again so that you can build redundancy into your load balancer and ensure that the",
    "start": "1471480",
    "end": "1480269"
  },
  {
    "text": "two AZ's that you pick for your load balancer line up with the AZ's of the subnet that you're gonna launch your",
    "start": "1480269",
    "end": "1486120"
  },
  {
    "text": "tasks into that's what makes the routing work between the load balancer and the tasks and also the target group type",
    "start": "1486120",
    "end": "1495990"
  },
  {
    "text": "that you will use with alb will be an IP based target not the instance based target because because in this case",
    "start": "1495990",
    "end": "1502470"
  },
  {
    "text": "we're gonna be registering your task IP into the load balancer alright so how",
    "start": "1502470",
    "end": "1510299"
  },
  {
    "start": "1508000",
    "end": "1508000"
  },
  {
    "text": "does the task definition change to tell us that you want to use a load balancer",
    "start": "1510299",
    "end": "1515570"
  },
  {
    "text": "you have to tell us about your port mappings so in this case our front-end",
    "start": "1516019",
    "end": "1524000"
  },
  {
    "text": "container is listening on container port 8080 and our back-end or our API",
    "start": "1524000",
    "end": "1530519"
  },
  {
    "text": "container is listening on port 5,000 and you need to put that into your task definition so we know exactly what port",
    "start": "1530519",
    "end": "1536399"
  },
  {
    "text": "to register into your load balancer and now this is the create service API call",
    "start": "1536399",
    "end": "1542159"
  },
  {
    "text": "which is similar to the run task API call that we've been seeing it it takes a task definition takes the same network",
    "start": "1542159",
    "end": "1549120"
  },
  {
    "text": "configuration parameter and it also takes a load balancers parameter where you give us an Arn to the target group",
    "start": "1549120",
    "end": "1555029"
  },
  {
    "text": "that you've created with ELB and you tell us which container amongst all the containers in your task definition do",
    "start": "1555029",
    "end": "1561299"
  },
  {
    "text": "you want us to register into the load balancer and what port is it listening on so in this case we're going to",
    "start": "1561299",
    "end": "1566580"
  },
  {
    "text": "register our front-end container in our task definition into our alb alright so back to our network",
    "start": "1566580",
    "end": "1575460"
  },
  {
    "start": "1573000",
    "end": "1573000"
  },
  {
    "text": "picture here the setup is very similar to the private task setup that we saw",
    "start": "1575460",
    "end": "1582059"
  },
  {
    "text": "with the NAD gateway you want to keep your tasks in the private subnet it has",
    "start": "1582059",
    "end": "1587070"
  },
  {
    "text": "a private IP address it doesn't have a public IP address in this case and in",
    "start": "1587070",
    "end": "1592679"
  },
  {
    "text": "your public subnet instead of an add gateway you put a load balancer your portrayal be in there right and your alb",
    "start": "1592679",
    "end": "1599490"
  },
  {
    "text": "if you are using an internet facing alb it gets a public IP address and notice",
    "start": "1599490",
    "end": "1606059"
  },
  {
    "text": "the ports in this case our far gate task has a container that's listening on 8080",
    "start": "1606059",
    "end": "1611250"
  },
  {
    "text": "to accept incoming traffic from the load balancer and the load balancer itself has a listener that's listening on port",
    "start": "1611250",
    "end": "1617600"
  },
  {
    "text": "84 to accept incoming traffic from the internet again remember the the",
    "start": "1617600",
    "end": "1624570"
  },
  {
    "text": "availability zones on these two subnets need to match up and then security GroupWise your load balancer is",
    "start": "1624570",
    "end": "1632460"
  },
  {
    "text": "associated with the security group and load balancer has an inbound rule the",
    "start": "1632460",
    "end": "1637470"
  },
  {
    "text": "load balancer security group has an inbound rule that allows HTTP traffic into port 80 and your task itself as",
    "start": "1637470",
    "end": "1645960"
  },
  {
    "text": "another security group associated with it we don't want to associate it with the same security group because we don't want to allow inbound traffic from the",
    "start": "1645960",
    "end": "1652380"
  },
  {
    "text": "internet on the task itself so we associate it with another security group and this security group has an inbound",
    "start": "1652380",
    "end": "1658710"
  },
  {
    "text": "rule that accepts traffic from the alb security group so that's what allows traffic between the load balancer and",
    "start": "1658710",
    "end": "1665570"
  },
  {
    "text": "your task that's running in the private subnet alright so that could lose the",
    "start": "1665570",
    "end": "1673380"
  },
  {
    "text": "networking and we now know how we can launch a task into our V PC configure the network and really secure the",
    "start": "1673380",
    "end": "1680340"
  },
  {
    "text": "network around your Fargate task using all the rich features that V PC makes",
    "start": "1680340",
    "end": "1686010"
  },
  {
    "text": "available and continuing along the lines of security I now want to talk about",
    "start": "1686010",
    "end": "1692820"
  },
  {
    "text": "Identity and Access Management and how you can use Identity and Access",
    "start": "1692820",
    "end": "1698340"
  },
  {
    "text": "Management as our AWS is authentication and authorization service and talk about",
    "start": "1698340",
    "end": "1703950"
  },
  {
    "text": "the integration points that Fargate has with the service - how you can really secure the applications running inside",
    "start": "1703950",
    "end": "1710190"
  },
  {
    "text": "of your Fargate tasks and we have a",
    "start": "1710190",
    "end": "1715470"
  },
  {
    "start": "1713000",
    "end": "1713000"
  },
  {
    "text": "number of tiers of integration with iam and we'll go through each of them at the",
    "start": "1715470",
    "end": "1721800"
  },
  {
    "text": "very top layer we have cluster permissions and what this lets you do is",
    "start": "1721800",
    "end": "1727110"
  },
  {
    "text": "control exactly who can launch stop describe tasks within your cluster",
    "start": "1727110",
    "end": "1733410"
  },
  {
    "text": "and you can define policies on a cluster by cluster basis as Dan mentioned previously using I am and then you have",
    "start": "1733410",
    "end": "1741720"
  },
  {
    "text": "your application itself that's running inside your task and the application may",
    "start": "1741720",
    "end": "1747900"
  },
  {
    "text": "need to access other AWS resources so for example in our score keep application as Dan mentioned we're",
    "start": "1747900",
    "end": "1754230"
  },
  {
    "text": "accessing a dynamo DB table or we're accessing SNS notifications and each of",
    "start": "1754230",
    "end": "1759270"
  },
  {
    "text": "these interactions need AWS credentials and that also can be set up as we will",
    "start": "1759270",
    "end": "1766110"
  },
  {
    "text": "see in future slides using I am very easily on Fargate and finally there are",
    "start": "1766110",
    "end": "1772410"
  },
  {
    "text": "a lot of activities that we perform on your behalf just so you don't have to be bothered doing it like the ECR image",
    "start": "1772410",
    "end": "1779460"
  },
  {
    "text": "pull to actually get your containers running pushing of logs to cloud watch so you can actually see what your",
    "start": "1779460",
    "end": "1784590"
  },
  {
    "text": "application is logging the eni creation and management for networking the registry registration D registration of",
    "start": "1784590",
    "end": "1791730"
  },
  {
    "text": "targets into your load balancer these are all activities that we do on your behalf and we require permissions from",
    "start": "1791730",
    "end": "1798660"
  },
  {
    "text": "you in order to perform these activities and that's also done via iam as we're going to see in in the next few slides",
    "start": "1798660",
    "end": "1805470"
  },
  {
    "text": "so now I'm just going to step through each of these sort of in a little more detail so you get a more concrete idea",
    "start": "1805470",
    "end": "1811800"
  },
  {
    "text": "of how this works so cluster permissions allowing specific actors to do specific",
    "start": "1811800",
    "end": "1819480"
  },
  {
    "start": "1814000",
    "end": "1814000"
  },
  {
    "text": "actions within a cluster and here is an example policy so this is an iam policy",
    "start": "1819480",
    "end": "1825810"
  },
  {
    "text": "format that is essentially saying only allow run tasks API action against that",
    "start": "1825810",
    "end": "1834690"
  },
  {
    "text": "specific cluster and that specific task definition family or here is another I",
    "start": "1834690",
    "end": "1840570"
  },
  {
    "text": "am policy that you may author and this is a read-only policy that says only allow list tasks and describe tasks",
    "start": "1840570",
    "end": "1847470"
  },
  {
    "text": "against that specific cluster and these aren't the only policies you can author there are many many other examples but I",
    "start": "1847470",
    "end": "1854190"
  },
  {
    "text": "just wanted to give you a feel for the fine-grained policies cluster level",
    "start": "1854190",
    "end": "1860010"
  },
  {
    "text": "policies that you can author and assigned to various iam roles or users that you've created to really",
    "start": "1860010",
    "end": "1867330"
  },
  {
    "text": "ensure that you're giving the minimum set of permissions to various actors in your organization to do their job on far",
    "start": "1867330",
    "end": "1873900"
  },
  {
    "text": "game all right application level permissions",
    "start": "1873900",
    "end": "1879660"
  },
  {
    "start": "1876000",
    "end": "1876000"
  },
  {
    "text": "and again this is a pure application is accessing AWS resources it needs AWS",
    "start": "1879660",
    "end": "1885750"
  },
  {
    "text": "credentials how do these credentials get passed down to your tasks we certainly",
    "start": "1885750",
    "end": "1891390"
  },
  {
    "text": "don't want you to hard-code any AWS credentials into your container images we also don't want you to be burdened",
    "start": "1891390",
    "end": "1899309"
  },
  {
    "text": "with building orchestration software that sort of injects credentials into your containers at runtime and so we",
    "start": "1899309",
    "end": "1906809"
  },
  {
    "text": "solved that for you using an iam task role and how you would use this is you",
    "start": "1906809",
    "end": "1914160"
  },
  {
    "text": "go into the iam console create an iamb role attach the requisite permissions",
    "start": "1914160",
    "end": "1919320"
  },
  {
    "text": "that your application needs so in our case we would attach DynamoDB nsns permissions into the role and you",
    "start": "1919320",
    "end": "1927120"
  },
  {
    "text": "establish a trust relationship with ECS and what this trust relationship does is",
    "start": "1927120",
    "end": "1934049"
  },
  {
    "text": "that it allows us to assume that role on your behalf and do the credential management for you and why are your",
    "start": "1934049",
    "end": "1940140"
  },
  {
    "text": "credentials down into into the tasks in the secure manner and then in your task",
    "start": "1940140",
    "end": "1945360"
  },
  {
    "text": "definition there's another new parameter there where you pass us the role Arn that you've created and then that's all",
    "start": "1945360",
    "end": "1953820"
  },
  {
    "text": "you need to do any AWS SDK CLI calls that you make from your application will",
    "start": "1953820",
    "end": "1960540"
  },
  {
    "text": "then automatically use credentials from your task I am role and also these credentials",
    "start": "1960540",
    "end": "1966929"
  },
  {
    "text": "it's a feature of I am their temporary credentials they're automatically rotated periodically for you all right",
    "start": "1966929",
    "end": "1976080"
  },
  {
    "start": "1975000",
    "end": "1975000"
  },
  {
    "text": "housekeeping permissions housekeeping permissions as I mentioned before allows us to perform management activities",
    "start": "1976080",
    "end": "1983070"
  },
  {
    "text": "during the life cycle of your tasks and there are two ways in which you give us these permissions to do our job to keep",
    "start": "1983070",
    "end": "1990870"
  },
  {
    "text": "your tasks running the first one is an execution role and the execution role",
    "start": "1990870",
    "end": "1997470"
  },
  {
    "text": "gives us permissions to pull your image and push your cloud cloud watch logs so if you are",
    "start": "1997470",
    "end": "2002600"
  },
  {
    "text": "using an ECR image or if you are configuring logging to push to cloud watch you need to follow the steps in in",
    "start": "2002600",
    "end": "2010399"
  },
  {
    "text": "the execution role section that we're going to go through next the other role in play here is an ECS service linked",
    "start": "2010399",
    "end": "2018109"
  },
  {
    "text": "role and we'll go through the details of that but the service linked role gives us the ability to manage your Eni and",
    "start": "2018109",
    "end": "2024590"
  },
  {
    "text": "your ELB so looking at the execution role first I this again execution role",
    "start": "2024590",
    "end": "2036049"
  },
  {
    "start": "2027000",
    "end": "2027000"
  },
  {
    "text": "used for ECR image pull cloud watch logs pushing similar to the task role",
    "start": "2036049",
    "end": "2043309"
  },
  {
    "text": "experience you'll go into the iam console create an iamb role add the",
    "start": "2043309",
    "end": "2048378"
  },
  {
    "text": "necessary permissions to read from ECR if you're using an easy CR image or to",
    "start": "2048379",
    "end": "2054770"
  },
  {
    "text": "push to cloud watch if you're using cloud watch logging configuration and",
    "start": "2054770",
    "end": "2059980"
  },
  {
    "text": "again you need to establish that trust relationship with ECS so we can assume the role and perform those activities on",
    "start": "2059980",
    "end": "2066200"
  },
  {
    "text": "your behalf and in your task definition there's a second role parameter called",
    "start": "2066200",
    "end": "2072349"
  },
  {
    "text": "execution role Arn that you will have to set with this role that you created",
    "start": "2072349",
    "end": "2077799"
  },
  {
    "start": "2077000",
    "end": "2077000"
  },
  {
    "text": "service linked role a service linked role some of you may be familiar it's a",
    "start": "2079179",
    "end": "2085658"
  },
  {
    "text": "newish iam construct it's essentially a managed I am role that's directly linked",
    "start": "2085659",
    "end": "2092628"
  },
  {
    "text": "to a service and in this case it's ECS it's very hands-off it has a predefined",
    "start": "2092629",
    "end": "2100369"
  },
  {
    "text": "policy you don't have to actually go into the am I am console and create it yourself you don't have to do any of",
    "start": "2100369",
    "end": "2107569"
  },
  {
    "text": "these steps I'm just going through it so you're aware it has a predefined policy policy is immutable it already has a",
    "start": "2107569",
    "end": "2114079"
  },
  {
    "text": "trust relationship with ECS so we can assume the role and it's automatically",
    "start": "2114079",
    "end": "2119089"
  },
  {
    "text": "created in your account when you create a cluster so if you don't already have one of these it will get automatically",
    "start": "2119089",
    "end": "2124309"
  },
  {
    "text": "created when you create a cluster so really you don't explicitly interact with this role the only thing is you may",
    "start": "2124309",
    "end": "2131119"
  },
  {
    "text": "see it in the IM console and if you you stumble upon it you know what it's used for all right",
    "start": "2131119",
    "end": "2141770"
  },
  {
    "text": "logging and debugging so with Fargate your application is running on",
    "start": "2141770",
    "end": "2147150"
  },
  {
    "text": "infrastructure that's hosted by AWS so how do you actually see the logs or",
    "start": "2147150",
    "end": "2152190"
  },
  {
    "text": "debug application problems with AWS for",
    "start": "2152190",
    "end": "2157530"
  },
  {
    "start": "2156000",
    "end": "2156000"
  },
  {
    "text": "gain we have native integration with cloud watch logs and as we've talked about before you can configure your task",
    "start": "2157530",
    "end": "2164550"
  },
  {
    "text": "definition to send any standard out messages that your application is emitting to cloud watch logs so you can",
    "start": "2164550",
    "end": "2170910"
  },
  {
    "text": "then go into cloud watch and view the logs or pull it down from cloud watch as you please so how do you go about",
    "start": "2170910",
    "end": "2176550"
  },
  {
    "text": "configuring this in your task definition you have to use we have an AWS logs",
    "start": "2176550",
    "end": "2184710"
  },
  {
    "text": "driver that's already available with ECS today and that continues to work with",
    "start": "2184710",
    "end": "2189810"
  },
  {
    "text": "AWS Fargate the setup steps that you will have to perform is you will have to",
    "start": "2189810",
    "end": "2194970"
  },
  {
    "text": "create a log group in cloud watch for your application and then in your task",
    "start": "2194970",
    "end": "2200070"
  },
  {
    "text": "definition there's a log configuration section where log driver has to be",
    "start": "2200070",
    "end": "2205470"
  },
  {
    "text": "specified as AWS logs and in the options section you tell us the log group name",
    "start": "2205470",
    "end": "2211050"
  },
  {
    "text": "that you just created the region and a simple prefix just so you can easily",
    "start": "2211050",
    "end": "2216900"
  },
  {
    "text": "identify in the cloud watch console what logs are coming from which application",
    "start": "2216900",
    "end": "2222000"
  },
  {
    "text": "that you may be running on Fargate and this is a screenshot of what it looks",
    "start": "2222000",
    "end": "2229080"
  },
  {
    "text": "like in the ECS console if you drill down into the tasks detail page in the",
    "start": "2229080",
    "end": "2236010"
  },
  {
    "text": "AWS management console we have a logs tab and in that logs tab you can",
    "start": "2236010",
    "end": "2241890"
  },
  {
    "text": "essentially pick the container that's running within the task and view all the logs for that task within the ECS",
    "start": "2241890",
    "end": "2249089"
  },
  {
    "text": "console itself you obviously can also go into the cloud watch console and view the logs in cloud watch as well metrics",
    "start": "2249089",
    "end": "2258830"
  },
  {
    "start": "2257000",
    "end": "2257000"
  },
  {
    "text": "we also have cloud watch metrics integration for ECS services and",
    "start": "2258830",
    "end": "2266550"
  },
  {
    "text": "this is also viewable in the console in the ECS console on the metrics tab of",
    "start": "2266550",
    "end": "2271800"
  },
  {
    "text": "the services page and the metrics that we emit are CPU and memory utilization for your service what this means is",
    "start": "2271800",
    "end": "2280850"
  },
  {
    "text": "we're basically telling you for the entire amount of CPU and memory resources that you've configured at the",
    "start": "2280850",
    "end": "2287580"
  },
  {
    "text": "task definition level for all the tasks in your service how much of it is your application actually using so you get a",
    "start": "2287580",
    "end": "2294630"
  },
  {
    "text": "good sense by looking in these metrics of have you over provisioned or under",
    "start": "2294630",
    "end": "2300000"
  },
  {
    "text": "provisioned the resources in your task definition for the kind of application that you're running in it it's also an",
    "start": "2300000",
    "end": "2305400"
  },
  {
    "text": "important sort of visibility tool debugging tips all right so the logging",
    "start": "2305400",
    "end": "2312740"
  },
  {
    "start": "2309000",
    "end": "2309000"
  },
  {
    "text": "viewing of your application logs helps to debug things if your application has",
    "start": "2312740",
    "end": "2318630"
  },
  {
    "text": "already come up and is running and is actually emitting logs but if you're",
    "start": "2318630",
    "end": "2324120"
  },
  {
    "text": "having problems even getting your application running what kind of tools do you have to debug startup problems",
    "start": "2324120",
    "end": "2330540"
  },
  {
    "text": "with your application and just a few pointers here this is a console snapshot",
    "start": "2330540",
    "end": "2336870"
  },
  {
    "text": "for an application that I intentionally I made fails or so I can show you how it looks like in the console first thing is",
    "start": "2336870",
    "end": "2344730"
  },
  {
    "text": "you will see that your tasks never went into the running State it will go or it may have gone into the run it it will go",
    "start": "2344730",
    "end": "2351300"
  },
  {
    "text": "directly into the stop state from the pending and provisioning States and",
    "start": "2351300",
    "end": "2357470"
  },
  {
    "text": "there's status messages in the console for each container as to why the",
    "start": "2357470",
    "end": "2363420"
  },
  {
    "text": "container exited and in this case you can see it's telling me that Mike my",
    "start": "2363420",
    "end": "2370530"
  },
  {
    "text": "task couldn't start up because it couldn't pull the image and that's because if you see the image section",
    "start": "2370530",
    "end": "2375720"
  },
  {
    "text": "right next to it I've misconfigured the name of the ECR repository with like xxx and something like that so that the",
    "start": "2375720",
    "end": "2383060"
  },
  {
    "text": "inspecting the container stop treason will give you your first clue into why",
    "start": "2383060",
    "end": "2388230"
  },
  {
    "text": "your application is not starting up on par gained another common another",
    "start": "2388230",
    "end": "2395070"
  },
  {
    "text": "scenario that may occur is that your services may not be scaling as expected",
    "start": "2395070",
    "end": "2400110"
  },
  {
    "text": "and how do you go about debugging that so in the service page on the console",
    "start": "2400110",
    "end": "2406970"
  },
  {
    "text": "there is an events tab and this is kind of like an activity log if some of you",
    "start": "2406970",
    "end": "2412200"
  },
  {
    "text": "have used auto-scaling they have an activity log that tells you exactly what auto-scaling is doing to scale your your",
    "start": "2412200",
    "end": "2417330"
  },
  {
    "text": "instances up and down we have a similar concept we have an events tab in the in the service detail page that tells us",
    "start": "2417330",
    "end": "2425340"
  },
  {
    "text": "exactly what activity we're taking and if you inspect the messages here you see",
    "start": "2425340",
    "end": "2431340"
  },
  {
    "text": "that you know there's few messages there tells you exactly what tasks were started at what time you can even drill",
    "start": "2431340",
    "end": "2437490"
  },
  {
    "text": "down into the task detail page it's soft link so you can look at each tasks details as they are started by the",
    "start": "2437490",
    "end": "2443400"
  },
  {
    "text": "service and then the very top one for instance tells you gives you some",
    "start": "2443400",
    "end": "2449280"
  },
  {
    "text": "details about why it was unable to start a task all right finally I just wanted",
    "start": "2449280",
    "end": "2457770"
  },
  {
    "text": "to touch upon storage with AWS Fargate we do give you ephemeral storage for",
    "start": "2457770",
    "end": "2465390"
  },
  {
    "start": "2459000",
    "end": "2459000"
  },
  {
    "text": "your tasks it's backed by EBS volumes that we own you do get 10 gigabytes per",
    "start": "2465390",
    "end": "2473720"
  },
  {
    "text": "task of layer storage for your containers and then we also make",
    "start": "2473720",
    "end": "2479430"
  },
  {
    "text": "available volume storage you get 4 gigabytes of volume storage per task and",
    "start": "2479430",
    "end": "2484950"
  },
  {
    "text": "I don't want to go into the details here to leave Dan some time for the demo but the task definition has volume specific",
    "start": "2484950",
    "end": "2492120"
  },
  {
    "text": "fields in there as well where you can specify mount points and you can also share this volume across the multiple",
    "start": "2492120",
    "end": "2499740"
  },
  {
    "text": "containers in your task definition all right now we're finally into the demo",
    "start": "2499740",
    "end": "2506700"
  },
  {
    "text": "part and you guys ready to see some action here yeah all right so this is",
    "start": "2506700",
    "end": "2513420"
  },
  {
    "start": "2513000",
    "end": "2513000"
  },
  {
    "text": "what our final score keep task definition looks like it's basically it",
    "start": "2513420",
    "end": "2520050"
  },
  {
    "text": "you should be able to recognize all the fields in here it split up into three pages one for the tasks level",
    "start": "2520050",
    "end": "2526440"
  },
  {
    "text": "configuration and then each of your containers we've gone through each of",
    "start": "2526440",
    "end": "2531450"
  },
  {
    "text": "these settings so you should now recognize of these the only additions here is the the compatibilities field in blue on the",
    "start": "2531450",
    "end": "2538960"
  },
  {
    "text": "first page and that's essentially as Dan mentioned earlier we have retained all",
    "start": "2538960",
    "end": "2545830"
  },
  {
    "text": "the same constructs between the ec2 mode and Fargate mode within ECS so there the",
    "start": "2545830",
    "end": "2552910"
  },
  {
    "text": "task definition is also very similar between the two but there are some fine",
    "start": "2552910",
    "end": "2558160"
  },
  {
    "text": "rules there that not all fields and the task definition are supported on Fargate",
    "start": "2558160",
    "end": "2563170"
  },
  {
    "text": "for example privileged mode etc is not supported on Fargate so this field tells",
    "start": "2563170",
    "end": "2569140"
  },
  {
    "text": "us if you're intending to run this task definition exclusively on Fargate you",
    "start": "2569140",
    "end": "2574840"
  },
  {
    "text": "can specify a compatibilities check that we will perform at the time of registering your task definition to tell",
    "start": "2574840",
    "end": "2581020"
  },
  {
    "text": "you if it's compatible with Fargate or not and if it's not you'll know at task definition time rather than finding out",
    "start": "2581020",
    "end": "2587650"
  },
  {
    "text": "at tasks run time you can also specify ec2 if you want to check compatibility",
    "start": "2587650",
    "end": "2593290"
  },
  {
    "text": "with ec2 if you want the task definition to run on both Fargate an ec2 you can",
    "start": "2593290",
    "end": "2598330"
  },
  {
    "text": "specify both of them and if either of them fail we'll let you know and I think",
    "start": "2598330",
    "end": "2603550"
  },
  {
    "text": "at this point I'm gonna hand it back to Dan to go over the demo so we have gone",
    "start": "2603550",
    "end": "2611500"
  },
  {
    "text": "over quite a bit today and you know the one thing I do want to point out is we've gone over a lot to really give you background about everything that's going",
    "start": "2611500",
    "end": "2617770"
  },
  {
    "text": "on around your Fargate tasks your cluster your VPC and so you can understand exactly what you need to set up however after setting it up it is",
    "start": "2617770",
    "end": "2625450"
  },
  {
    "text": "very easy to then go from having a cloud formation stack that just sets everything up for you to then spawning",
    "start": "2625450",
    "end": "2630460"
  },
  {
    "text": "new tasks new services modifying your task definition and making changes so",
    "start": "2630460",
    "end": "2636420"
  },
  {
    "text": "I'm gonna switch this over really quick and hopefully you can see so I have here",
    "start": "2636420",
    "end": "2644490"
  },
  {
    "text": "a console view this is the score keep repository and so I wanted to start there just to introduce you to the",
    "start": "2644490",
    "end": "2650910"
  },
  {
    "text": "project if you can't plan and take checking it out later in the project",
    "start": "2650910",
    "end": "2655920"
  },
  {
    "text": "there is a configuration file called a WS M this reference is a region a 48 is",
    "start": "2655920",
    "end": "2663180"
  },
  {
    "text": "available currently in u.s. East 1 and so that is set in the repository as well as an account ID and so this is the",
    "start": "2663180",
    "end": "2669000"
  },
  {
    "text": "account ID that I'm using for the demonstration and I can verify that by doing AWS I am get user and I can see",
    "start": "2669000",
    "end": "2678360"
  },
  {
    "text": "that that account ID there matches and so the scripts in the repository take advantage of this configuration file for",
    "start": "2678360",
    "end": "2685200"
  },
  {
    "text": "pushing images to ECR and creating your CloudFormation stack and so what i've done before the demo is i have a cloud",
    "start": "2685200",
    "end": "2690870"
  },
  {
    "text": "formation stack in the cloud formation folder there's a make file to make it easy to just create this CloudFormation stack so i can say make stack it's gonna",
    "start": "2690870",
    "end": "2698220"
  },
  {
    "text": "fail here saying the stack already exists because i've already created in my account i could then go back up this",
    "start": "2698220",
    "end": "2704520"
  },
  {
    "text": "root directory is going to be our API containers build process it uses Gradle it uses a docker image to do the build",
    "start": "2704520",
    "end": "2711450"
  },
  {
    "text": "it then packages it up in a docker image with Java and pushes it to ECR and we can do this really quick with make",
    "start": "2711450",
    "end": "2717030"
  },
  {
    "text": "publish I've already built it the job of file and I've already published it to UCR so there should be fairly quick to",
    "start": "2717030",
    "end": "2722970"
  },
  {
    "text": "complete and then next I have the score keep front end and the score keep front",
    "start": "2722970",
    "end": "2728400"
  },
  {
    "text": "end has again that engine next configuration file as well as all the public files that's the JavaScript and HTML for the",
    "start": "2728400",
    "end": "2734820"
  },
  {
    "text": "application and here as well I can do and make publish and I can push that container out to ECR and so it's all",
    "start": "2734820",
    "end": "2741030"
  },
  {
    "text": "there and next I'm going to go into the task definition folder and the task",
    "start": "2741030",
    "end": "2746760"
  },
  {
    "text": "definition folder is going to be the task definition we created there under the task definition folder I have a",
    "start": "2746760",
    "end": "2752940"
  },
  {
    "text": "template here so I have a parameterised account ID in region and so that from any AWS account you can run generate",
    "start": "2752940",
    "end": "2759000"
  },
  {
    "text": "task definition and we'll substitute in those parameters that we configure it in that a TBM file there and so now I have",
    "start": "2759000",
    "end": "2765240"
  },
  {
    "text": "this task definition created I can go ahead and register it so I can AWS CCS",
    "start": "2765240",
    "end": "2770870"
  },
  {
    "text": "register task definition and I'm going to do the COI input JSON",
    "start": "2770870",
    "end": "2776710"
  },
  {
    "text": "mode and so I've configured all my parameters in this task definition JP JSON file and so I'm just gonna pass it straight to the input like that I will",
    "start": "2776710",
    "end": "2785559"
  },
  {
    "text": "go ahead and copy and paste and that registers my task definition with",
    "start": "2785559",
    "end": "2791170"
  },
  {
    "text": "Fargate and with ECS you'll see at the bottom here this is revision five I have ran this a few times before and so I do",
    "start": "2791170",
    "end": "2797800"
  },
  {
    "text": "have four previous revisions in my account like I said this is a the family here is the score keep application so",
    "start": "2797800",
    "end": "2803290"
  },
  {
    "text": "this is gonna be the fifth revision of it with that let's go ahead and jump back over to the AWS console and I'll",
    "start": "2803290",
    "end": "2811510"
  },
  {
    "text": "refresh it all I have a default cluster created here and that CloudFormation",
    "start": "2811510",
    "end": "2817059"
  },
  {
    "text": "stacked created the VPC the log group in the configuration that Archana mentioned so I'm using a knock gateway and I have",
    "start": "2817059",
    "end": "2823690"
  },
  {
    "text": "a alb setup I'm gonna go here I'm gonna say create service I'm gonna select my",
    "start": "2823690",
    "end": "2828910"
  },
  {
    "text": "score keep five that task definition that we just pushed I'm gonna say that my launch type is Fargate and then",
    "start": "2828910",
    "end": "2835540"
  },
  {
    "text": "you'll see the reference to the platform version I just want the latest platform version the cluster we're launching it",
    "start": "2835540",
    "end": "2842079"
  },
  {
    "text": "into the default cluster that we just clicked into I'm gonna name the service score keep demo and I'm gonna put four",
    "start": "2842079",
    "end": "2849460"
  },
  {
    "text": "tasks and so these four tasks can be balanced between two different availability zones because I'm using it",
    "start": "2849460",
    "end": "2854500"
  },
  {
    "text": "I'll be like Archana said you want a elby's to be spread across two different availability zones and so I'm gonna say",
    "start": "2854500",
    "end": "2861280"
  },
  {
    "text": "next and that's where it's gonna prompt me to select the V PC that I want to launch it into as well as the subnets here the is",
    "start": "2861280",
    "end": "2869589"
  },
  {
    "text": "the score keep VP see the my CloudFormation traded and it tagged it with the name score keep so it appears nicely on the side and the in this",
    "start": "2869589",
    "end": "2876160"
  },
  {
    "text": "drop-down menu and then I get prompted for the subnets within that V PC I want",
    "start": "2876160",
    "end": "2881380"
  },
  {
    "text": "to put this in the private subnets and I've tagged the names as part of the CloudFormation template to score keep private in public to make it easy to see",
    "start": "2881380",
    "end": "2887349"
  },
  {
    "text": "and understand and so here's one private subnet that I have and here is the second private subnet that I have I'm",
    "start": "2887349",
    "end": "2894069"
  },
  {
    "text": "gonna select security groups I know I've already created a security group and so I have here the default security group",
    "start": "2894069",
    "end": "2899170"
  },
  {
    "text": "for my V PC which is the one I'm going to select in it as allowing ingress traffic to port 8080 from the alb so I",
    "start": "2899170",
    "end": "2907119"
  },
  {
    "text": "can select that and press save because I'm in the private the private part private subnet and I'm",
    "start": "2907119",
    "end": "2913330"
  },
  {
    "text": "using an al B I don't need to sign a public IP so I'm going to go ahead and disable that but I am going to select I",
    "start": "2913330",
    "end": "2918670"
  },
  {
    "text": "want to use an application load balancer for the load balancer I have the scorekeeper lb it's the only",
    "start": "2918670",
    "end": "2924310"
  },
  {
    "text": "load balancer that I have created and so it's is set up there and I have my two",
    "start": "2924310",
    "end": "2929350"
  },
  {
    "text": "containers here and I want to balance the one that's on 8080 that nginx container it's gonna say adds a load",
    "start": "2929350",
    "end": "2934660"
  },
  {
    "text": "balancer I don't have any listeners configured on my load balancer and so I can create a new one straight here from the ECS console the listener port I'm",
    "start": "2934660",
    "end": "2942790"
  },
  {
    "text": "going to put on port 80 and so this is telling that when I hit port 80 on the load bouncer it's gonna afford all the traffic to port 8080 in this target",
    "start": "2942790",
    "end": "2950320"
  },
  {
    "text": "group I'm just gonna use HTTP I don't have any certificates the name of it generated is fine I don't have a health",
    "start": "2950320",
    "end": "2958360"
  },
  {
    "text": "check path or none of a slash ping that's just an empty page and so I'm just going to help check on the route page which should return success and so",
    "start": "2958360",
    "end": "2965860"
  },
  {
    "text": "I'm gonna say next up I don't want auto scaling so next step and create service",
    "start": "2965860",
    "end": "2970930"
  },
  {
    "text": "so this is going to go ahead and create the service and create the listener for the load balancer and I can view it here",
    "start": "2970930",
    "end": "2976660"
  },
  {
    "text": "in the console so the tasks are going to start up now the tasks take about an order of tens of seconds to start up so",
    "start": "2976660",
    "end": "2982870"
  },
  {
    "text": "it's going to be attaching the network interface and then it's going to be downloading my docker containers to the machine and then the Java process is",
    "start": "2982870",
    "end": "2988720"
  },
  {
    "text": "gonna start up and it will be accessible so while it goes and does that let's go ahead and just peek a little bit into",
    "start": "2988720",
    "end": "2994720"
  },
  {
    "text": "some of the VPC configuration so I'm gonna go to the V PC console really quick and just show you a little bit",
    "start": "2994720",
    "end": "3000300"
  },
  {
    "text": "more about what I talked about with the subnets and the route tables and so in my V PC here I have this private subnet",
    "start": "3000300",
    "end": "3006870"
  },
  {
    "text": "I can click on it I can go to the route table I can see that I'm using my Knock gateway I can go to the public one and I",
    "start": "3006870",
    "end": "3012990"
  },
  {
    "text": "can see that the public one is using the route table that routes traffic to the Internet through my igw here you can",
    "start": "3012990",
    "end": "3019200"
  },
  {
    "text": "also see on the knot Gateway tab the subnet for the nat gateways and the public and it has an elastic IP address",
    "start": "3019200",
    "end": "3026370"
  },
  {
    "text": "assigned to it so that it can access inbound traffic from the internet and now my tasks are most likely started up",
    "start": "3026370",
    "end": "3033240"
  },
  {
    "text": "before going back to the ECS console I would like to go to the ec2 console really quick and show you on the",
    "start": "3033240",
    "end": "3041630"
  },
  {
    "text": "network interfaces tab I remember the",
    "start": "3041640",
    "end": "3049140"
  },
  {
    "text": "Fargate task is creating network interfaces into your V PC and so here on this particular screen you'll see all",
    "start": "3049140",
    "end": "3054870"
  },
  {
    "text": "the network interfaces that are currently in my V PC and so I have the EOB network interface as well as I have",
    "start": "3054870",
    "end": "3061110"
  },
  {
    "text": "these other network interfaces and the to the description here is AWS ECS you see it us use one and so this is the arm",
    "start": "3061110",
    "end": "3069060"
  },
  {
    "text": "of the attachment ID for a network interface for our tasks and so we see we have these four tasks using the default",
    "start": "3069060",
    "end": "3076410"
  },
  {
    "text": "security group with the arn and that they are in use in the are available and so they are started up if",
    "start": "3076410",
    "end": "3082350"
  },
  {
    "text": "you were using public IP addresses you could see the public IP address that was given to the network interface here",
    "start": "3082350",
    "end": "3088230"
  },
  {
    "text": "since we're just using private IP addresses it was only allocated a private IP address so we can pop back to",
    "start": "3088230",
    "end": "3094590"
  },
  {
    "text": "the ECS console really quick go back to our service and all our tasks are all",
    "start": "3094590",
    "end": "3101580"
  },
  {
    "text": "running and so let's go ahead and see if we can hit these and so I'm going to go to my load balancer so I'll click on",
    "start": "3101580",
    "end": "3107490"
  },
  {
    "text": "that link I have it open here so I can just grab that DNS name and put it in",
    "start": "3107490",
    "end": "3114000"
  },
  {
    "text": "the browser and I have my scorekeeper app and so I can type my name in I can create a new game session and then I can",
    "start": "3114000",
    "end": "3127140"
  },
  {
    "text": "give a name to my game I'll just name it foo I want to play tic-tac-toe and go ahead and create it and I can play that",
    "start": "3127140",
    "end": "3134070"
  },
  {
    "text": "tic-tac-toe game this game is multiplayer so you can use multiple browser sessions to interact and have",
    "start": "3134070",
    "end": "3139320"
  },
  {
    "text": "multiple users join I am just gonna play against myself really quick and win I",
    "start": "3139320",
    "end": "3144330"
  },
  {
    "text": "can't lose playing against yourself and so we see now that X wins but you know",
    "start": "3144330",
    "end": "3150630"
  },
  {
    "text": "let's go ahead and take a look back at our ECS tasks and so we have this logs and so I can pull up the logs here I can",
    "start": "3150630",
    "end": "3157410"
  },
  {
    "text": "click on the front end container and if I go through here you'll see all the log statements and so all those actions I",
    "start": "3157410",
    "end": "3163260"
  },
  {
    "text": "just don't on the web page you can see the engine next logs doing the API request for making the moves that I did",
    "start": "3163260",
    "end": "3168450"
  },
  {
    "text": "for creating the game as well as you see some health check logs but from he'll be",
    "start": "3168450",
    "end": "3173520"
  },
  {
    "text": "hitting to make sure that my task is Elfi on the backend I can switch it over to my API server and I could see my API",
    "start": "3173520",
    "end": "3179730"
  },
  {
    "text": "server logs and I can see the tic-tac-toe statement moves I can see my java application booting up and all the",
    "start": "3179730",
    "end": "3186030"
  },
  {
    "text": "information about it if I go over to the metrics tab they're not quite available",
    "start": "3186030",
    "end": "3192030"
  },
  {
    "text": "yet but you can use the metrics here to see your CPU utilization and your memory utilization of all your tasks so you can",
    "start": "3192030",
    "end": "3197910"
  },
  {
    "text": "use this to help guide and make sure that your task is actually sized correctly and so if you are a really low",
    "start": "3197910",
    "end": "3203730"
  },
  {
    "text": "on memory utilization updating it to a smaller target test size is as simple as going your task definition reducing the",
    "start": "3203730",
    "end": "3210900"
  },
  {
    "text": "size and then calling update service with a new copy of the task definition you'll then see that reflected in your memory utilization and you'll be able to",
    "start": "3210900",
    "end": "3217380"
  },
  {
    "text": "then save money by using smaller task sizes and that's all I had for the demo",
    "start": "3217380",
    "end": "3224160"
  },
  {
    "text": "today we have a few minutes before we get kicked out to take any questions but we'll be taking them on the side of the",
    "start": "3224160",
    "end": "3230280"
  },
  {
    "text": "stage up here afterwards we'll also be waiting out in the the back if you guys want to stick around and have any",
    "start": "3230280",
    "end": "3235860"
  },
  {
    "text": "questions to ask we thank you guys all for coming today really enjoyed",
    "start": "3235860",
    "end": "3241260"
  },
  {
    "text": "[Applause]",
    "start": "3241260",
    "end": "3243749"
  }
]