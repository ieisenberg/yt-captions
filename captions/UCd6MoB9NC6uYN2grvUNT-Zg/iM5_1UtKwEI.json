[
  {
    "text": "in this video you'll see how to",
    "start": "399",
    "end": "1760"
  },
  {
    "text": "integrate octa with aws single sign-on",
    "start": "1760",
    "end": "4160"
  },
  {
    "text": "or aws sso in an aws control tower",
    "start": "4160",
    "end": "7279"
  },
  {
    "text": "environment",
    "start": "7279",
    "end": "8480"
  },
  {
    "text": "with this solution you can manage users",
    "start": "8480",
    "end": "10320"
  },
  {
    "text": "and groups in octa replicate their",
    "start": "10320",
    "end": "12320"
  },
  {
    "text": "access into aws sso using system for",
    "start": "12320",
    "end": "15040"
  },
  {
    "text": "cross domain identity management or skim",
    "start": "15040",
    "end": "17600"
  },
  {
    "text": "and automatically synchronize users and",
    "start": "17600",
    "end": "19359"
  },
  {
    "text": "roles between octa and aws",
    "start": "19359",
    "end": "22560"
  },
  {
    "text": "for the purposes of this example our",
    "start": "22560",
    "end": "24400"
  },
  {
    "text": "control tower enabled environment with",
    "start": "24400",
    "end": "26160"
  },
  {
    "text": "accounts structured with aws",
    "start": "26160",
    "end": "27760"
  },
  {
    "text": "organizations has already been set up",
    "start": "27760",
    "end": "29519"
  },
  {
    "text": "and is ready to integrate with octa",
    "start": "29519",
    "end": "33040"
  },
  {
    "text": "as you can see we've already subscribed",
    "start": "33040",
    "end": "34640"
  },
  {
    "text": "to octa in aws marketplace",
    "start": "34640",
    "end": "38320"
  },
  {
    "text": "in order to integrate octa and control",
    "start": "38320",
    "end": "40160"
  },
  {
    "text": "tower with automatic user provisioning",
    "start": "40160",
    "end": "42079"
  },
  {
    "text": "we must first configure aws sso to use",
    "start": "42079",
    "end": "44800"
  },
  {
    "text": "octa as an external identity provider",
    "start": "44800",
    "end": "48800"
  },
  {
    "text": "we'll use these aws sso metadata values",
    "start": "50640",
    "end": "53360"
  },
  {
    "text": "as credentials when we integrate with",
    "start": "53360",
    "end": "54879"
  },
  {
    "text": "our octa app",
    "start": "54879",
    "end": "58360"
  },
  {
    "text": "let's use saml 2.0 as the sign in method",
    "start": "60480",
    "end": "64800"
  },
  {
    "text": "we'll name the app and proceed",
    "start": "65199",
    "end": "68560"
  },
  {
    "text": "next we'll paste in the relevant",
    "start": "70400",
    "end": "71680"
  },
  {
    "text": "metadata from aws sso to configure the",
    "start": "71680",
    "end": "74320"
  },
  {
    "text": "integration",
    "start": "74320",
    "end": "77320"
  },
  {
    "text": "let's use email address as the name id",
    "start": "86080",
    "end": "88080"
  },
  {
    "text": "format and complete the setup process",
    "start": "88080",
    "end": "91920"
  },
  {
    "text": "next let's find this application's",
    "start": "98079",
    "end": "99600"
  },
  {
    "text": "identity provider metadata",
    "start": "99600",
    "end": "103040"
  },
  {
    "text": "let's save this data in notepad and",
    "start": "110399",
    "end": "112079"
  },
  {
    "text": "upload it to aws sso",
    "start": "112079",
    "end": "115840"
  },
  {
    "text": "we'll accept the consequences and change",
    "start": "124640",
    "end": "126399"
  },
  {
    "text": "the identity source to octa",
    "start": "126399",
    "end": "129840"
  },
  {
    "text": "next let's enable automatic provisioning",
    "start": "131680",
    "end": "135520"
  },
  {
    "text": "we'll copy the skim endpoint and access",
    "start": "135520",
    "end": "137440"
  },
  {
    "text": "token for use in octa and paste these",
    "start": "137440",
    "end": "139360"
  },
  {
    "text": "values in a file for easy retrieval",
    "start": "139360",
    "end": "141040"
  },
  {
    "text": "later",
    "start": "141040",
    "end": "143840"
  },
  {
    "text": "let's browse the octa app integration",
    "start": "146080",
    "end": "147920"
  },
  {
    "text": "catalog for a skim application that",
    "start": "147920",
    "end": "149760"
  },
  {
    "text": "automatically pushes users and groups",
    "start": "149760",
    "end": "151519"
  },
  {
    "text": "from octa to aws sso",
    "start": "151519",
    "end": "155959"
  },
  {
    "text": "let's add this one",
    "start": "158000",
    "end": "160879"
  },
  {
    "text": "we'll label the application select each",
    "start": "162400",
    "end": "164239"
  },
  {
    "text": "of these options and complete the",
    "start": "164239",
    "end": "165760"
  },
  {
    "text": "initial setup process",
    "start": "165760",
    "end": "169480"
  },
  {
    "text": "now let's go to the provisioning tab and",
    "start": "174879",
    "end": "176480"
  },
  {
    "text": "configure the api integration",
    "start": "176480",
    "end": "180159"
  },
  {
    "text": "we'll paste in the skim endpoint and",
    "start": "182879",
    "end": "184640"
  },
  {
    "text": "access token we copied from the aws sso",
    "start": "184640",
    "end": "187120"
  },
  {
    "text": "portal",
    "start": "187120",
    "end": "189519"
  },
  {
    "text": "let's enable the option to create",
    "start": "193040",
    "end": "196480"
  },
  {
    "text": "users next let's create a rule to push",
    "start": "196840",
    "end": "199599"
  },
  {
    "text": "groups to aws sso through skim",
    "start": "199599",
    "end": "203920"
  },
  {
    "text": "let's name the rule and apply it to any",
    "start": "206640",
    "end": "208319"
  },
  {
    "text": "groups beginning with aws sso",
    "start": "208319",
    "end": "213000"
  },
  {
    "text": "next let's navigate to the directory tab",
    "start": "216480",
    "end": "218640"
  },
  {
    "text": "and create a new group for aws users",
    "start": "218640",
    "end": "223400"
  },
  {
    "text": "let's drill down into this new group and",
    "start": "227280",
    "end": "228959"
  },
  {
    "text": "assign apps to it",
    "start": "228959",
    "end": "231920"
  },
  {
    "text": "we'll assign aws sso and the skim app",
    "start": "233680",
    "end": "239400"
  },
  {
    "text": "next let's create another group called",
    "start": "242159",
    "end": "243840"
  },
  {
    "text": "aws sso power users",
    "start": "243840",
    "end": "248519"
  },
  {
    "text": "here's the group we just made",
    "start": "254879",
    "end": "256799"
  },
  {
    "text": "since its name begins with aws sso it",
    "start": "256799",
    "end": "259440"
  },
  {
    "text": "should automatically be pushed to aws",
    "start": "259440",
    "end": "261440"
  },
  {
    "text": "sso through skim by the rule we created",
    "start": "261440",
    "end": "263680"
  },
  {
    "text": "earlier let's check",
    "start": "263680",
    "end": "267720"
  },
  {
    "text": "as you can see the group is here as well",
    "start": "270479",
    "end": "272320"
  },
  {
    "text": "and it has been pushed",
    "start": "272320",
    "end": "273840"
  },
  {
    "text": "let's make sure we can find it in aws",
    "start": "273840",
    "end": "275759"
  },
  {
    "text": "sso",
    "start": "275759",
    "end": "278320"
  },
  {
    "text": "here's the aws sso power users group we",
    "start": "279120",
    "end": "281680"
  },
  {
    "text": "created in octa let's drill down",
    "start": "281680",
    "end": "285680"
  },
  {
    "text": "notice that there are currently no users",
    "start": "285919",
    "end": "287600"
  },
  {
    "text": "in the group",
    "start": "287600",
    "end": "288560"
  },
  {
    "text": "before adding users let's navigate to",
    "start": "288560",
    "end": "290560"
  },
  {
    "text": "our aws accounts to assign a permission",
    "start": "290560",
    "end": "292560"
  },
  {
    "text": "set to this group",
    "start": "292560",
    "end": "295360"
  },
  {
    "text": "let's select all the accounts and assign",
    "start": "295600",
    "end": "297360"
  },
  {
    "text": "the aws sso power users group to them",
    "start": "297360",
    "end": "301840"
  },
  {
    "text": "we'll give the group the aws power user",
    "start": "308160",
    "end": "310479"
  },
  {
    "text": "access permission set",
    "start": "310479",
    "end": "313520"
  },
  {
    "text": "now that we've assigned permissions",
    "start": "315919",
    "end": "317440"
  },
  {
    "text": "let's return to octa to create a user",
    "start": "317440",
    "end": "319199"
  },
  {
    "text": "for the group",
    "start": "319199",
    "end": "322440"
  },
  {
    "text": "this user will belong to both of the",
    "start": "328479",
    "end": "330080"
  },
  {
    "text": "groups we created",
    "start": "330080",
    "end": "333478"
  },
  {
    "text": "let's return to aws sso and find the",
    "start": "345680",
    "end": "348000"
  },
  {
    "text": "user there",
    "start": "348000",
    "end": "351320"
  },
  {
    "text": "here's the user we created let's drill",
    "start": "352160",
    "end": "354240"
  },
  {
    "text": "down",
    "start": "354240",
    "end": "356479"
  },
  {
    "text": "as you can see the user was created by",
    "start": "357360",
    "end": "359280"
  },
  {
    "text": "skim",
    "start": "359280",
    "end": "361280"
  },
  {
    "text": "let's confirm that the user is",
    "start": "361280",
    "end": "362560"
  },
  {
    "text": "authenticated and has access to the aws",
    "start": "362560",
    "end": "364880"
  },
  {
    "text": "sso portal",
    "start": "364880",
    "end": "367840"
  },
  {
    "text": "the portal url connects to the octa",
    "start": "368000",
    "end": "369919"
  },
  {
    "text": "portal because it's using an external",
    "start": "369919",
    "end": "371600"
  },
  {
    "text": "identity",
    "start": "371600",
    "end": "372720"
  },
  {
    "text": "let's log in as this user",
    "start": "372720",
    "end": "376080"
  },
  {
    "text": "here we can see that the user has",
    "start": "376880",
    "end": "378160"
  },
  {
    "text": "permissions for our three aws accounts",
    "start": "378160",
    "end": "382240"
  },
  {
    "text": "let's confirm that the user can log into",
    "start": "383759",
    "end": "385520"
  },
  {
    "text": "them",
    "start": "385520",
    "end": "387680"
  },
  {
    "text": "as you can see this user has",
    "start": "389680",
    "end": "390880"
  },
  {
    "text": "successfully accessed aws using",
    "start": "390880",
    "end": "392960"
  },
  {
    "text": "federated login",
    "start": "392960",
    "end": "395840"
  },
  {
    "text": "you've just seen how to integrate octa",
    "start": "396639",
    "end": "398240"
  },
  {
    "text": "with aws sso in an aws control tower",
    "start": "398240",
    "end": "401440"
  },
  {
    "text": "environment",
    "start": "401440",
    "end": "403039"
  },
  {
    "text": "you can learn more about this topic in",
    "start": "403039",
    "end": "404560"
  },
  {
    "text": "the description and links for this video",
    "start": "404560",
    "end": "406639"
  },
  {
    "text": "thanks for watching now it's your turn",
    "start": "406639",
    "end": "408080"
  },
  {
    "text": "to try",
    "start": "408080",
    "end": "411240"
  }
]