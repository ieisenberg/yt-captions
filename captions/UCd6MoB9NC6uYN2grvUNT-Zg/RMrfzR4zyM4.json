[
  {
    "start": "0",
    "end": "0"
  },
  {
    "text": "good afternoon everybody my name is Glen gore chief architect for AWS welcome",
    "start": "1070",
    "end": "7170"
  },
  {
    "text": "bright lights so just want to go through what the session objectives are for you in this session what we're going to see",
    "start": "7170",
    "end": "14040"
  },
  {
    "text": "is a little bit of context at the start there's a lot of interest around multi-region availability but well I",
    "start": "14040",
    "end": "20039"
  },
  {
    "text": "talk to customers every week around this it's kind of the key point here is actually knowing when to use it and when",
    "start": "20039",
    "end": "27330"
  },
  {
    "text": "not to use it because multi-region why it's really good from a increasing the availability of an application it does",
    "start": "27330",
    "end": "34050"
  },
  {
    "text": "come with some significant costs complexity and we know let's go through some of those design decisions you make",
    "start": "34050",
    "end": "40590"
  },
  {
    "text": "as you go through with this I need to talk a little bit about some of the services and how we make them",
    "start": "40590",
    "end": "45719"
  },
  {
    "text": "available as well Multi a-z multi-region and go through some of the trade-offs so you wouldn't",
    "start": "45719",
    "end": "53250"
  },
  {
    "text": "really understand how you think about availability when I talk to customers",
    "start": "53250",
    "end": "58620"
  },
  {
    "text": "everybody says their application is absolutely mission-critical and I love hearing that because it means you use a",
    "start": "58620",
    "end": "63719"
  },
  {
    "text": "lot of different services the reality is though you really need to understand availability modeling behind that and so",
    "start": "63719",
    "end": "71430"
  },
  {
    "text": "one of the ways we like to think about this within Amazon is through the well architected framework there's five",
    "start": "71430",
    "end": "78150"
  },
  {
    "text": "pillars and in this session we're really focusing on the reliability pillar here okay reliability availability durability",
    "start": "78150",
    "end": "85470"
  },
  {
    "text": "they're all covered within this and there's some calculations you should be aware of when you're trying to model",
    "start": "85470",
    "end": "92040"
  },
  {
    "start": "88000",
    "end": "88000"
  },
  {
    "text": "availability there's some key concepts used to use these way back decades ago",
    "start": "92040",
    "end": "97350"
  },
  {
    "text": "when you're building on premise equipment you think about you know mean time between failure mtbf mean time to",
    "start": "97350",
    "end": "102689"
  },
  {
    "text": "repair remember doing those calculations and so as you do this particularly in",
    "start": "102689",
    "end": "108899"
  },
  {
    "text": "the modern cloud world where you starting to introduce things like microservices an organization suddenly",
    "start": "108899",
    "end": "113939"
  },
  {
    "text": "have hundreds of individual components all working together to create a application that works and to end you're",
    "start": "113939",
    "end": "121170"
  },
  {
    "text": "introducing more components and normally in an availability model the more components you introduce the",
    "start": "121170",
    "end": "127110"
  },
  {
    "text": "availability actually goes down for example and so we've got three dependencies and they've been modeled on",
    "start": "127110",
    "end": "132930"
  },
  {
    "text": "different availability ones at 99% the other ones at 95% and ones at 90% what's the",
    "start": "132930",
    "end": "140190"
  },
  {
    "text": "overall availability of the system going to be 90% or less okay",
    "start": "140190",
    "end": "149269"
  },
  {
    "text": "the chain is only is we as strong as its weakest link and so you can do a lot",
    "start": "149269",
    "end": "155700"
  },
  {
    "text": "within cruising the availability of an application by putting into a high",
    "start": "155700",
    "end": "162180"
  },
  {
    "start": "158000",
    "end": "158000"
  },
  {
    "text": "availability environment for example if I have two components exactly the same",
    "start": "162180",
    "end": "168030"
  },
  {
    "text": "ones in one easy ones and the other each one designed to be 90% available what's",
    "start": "168030",
    "end": "175200"
  },
  {
    "text": "the overall availability going to be 99%",
    "start": "175200",
    "end": "180599"
  },
  {
    "text": "this is the important thing to know is why parallelization distributed architecture is so important when you're",
    "start": "180599",
    "end": "186360"
  },
  {
    "text": "running the cloud okay and these understanding the mathematics behind what actually drives availability is",
    "start": "186360",
    "end": "192750"
  },
  {
    "text": "critical as you design things what I see is a common mistake in the industries we take component one and we try to make it",
    "start": "192750",
    "end": "199380"
  },
  {
    "text": "five nines on its own absolutely bulletproof and while a lot of the focus is put on the underlying infrastructure",
    "start": "199380",
    "end": "206220"
  },
  {
    "text": "and the component that we can control we often forget about the quality of the software those they should be rid of",
    "start": "206220",
    "end": "211799"
  },
  {
    "text": "what about the test use cases what about your juice things like chaos engineering where we're deliberately going to break",
    "start": "211799",
    "end": "216840"
  },
  {
    "text": "things to ensure that that availability works under stress these are things you need to do if you really want to be true",
    "start": "216840",
    "end": "223620"
  },
  {
    "text": "about achieving things like five nines of availability where you get five minutes of downtime and yeah you also",
    "start": "223620",
    "end": "230489"
  },
  {
    "text": "get instantaneous failover this goes back to mean time between failure can be",
    "start": "230489",
    "end": "236400"
  },
  {
    "text": "a low number if your mean time to repair it is really really quick this is an interesting concept as well so it goes",
    "start": "236400",
    "end": "244530"
  },
  {
    "text": "through we know animations here as it fails so component redundancy increases",
    "start": "244530",
    "end": "251910"
  },
  {
    "text": "your availability significantly so really be aware of what you're doing",
    "start": "251910",
    "end": "257160"
  },
  {
    "text": "here's the good old chart of the nines of availability ninety-nine percent three eight days 15 hours all the way",
    "start": "257160",
    "end": "263159"
  },
  {
    "text": "through to five nines five minutes the costs increased dramatically as you",
    "start": "263159",
    "end": "270900"
  },
  {
    "text": "go up the number of nines that you're supporting you talked about the quality",
    "start": "270900",
    "end": "279060"
  },
  {
    "text": "and the availability isn't just based on the AWS services for example what is the",
    "start": "279060",
    "end": "286590"
  },
  {
    "text": "network connectivity between the end-users and the application is it distributed is it going to a single link",
    "start": "286590",
    "end": "292970"
  },
  {
    "text": "devices the software quality control people I like organizations you've heard about",
    "start": "292970",
    "end": "301020"
  },
  {
    "text": "chaos monkey and chaos gorilla go out working instances and some companies use",
    "start": "301020",
    "end": "307260"
  },
  {
    "text": "that for people they literally have a lottery where they just send somebody home for the day you get a day off from",
    "start": "307260",
    "end": "312360"
  },
  {
    "text": "work that's awesome but you're not allowed to check your email or contact your phone what they do is they see what breaks in the organization when someone",
    "start": "312360",
    "end": "318660"
  },
  {
    "text": "disappears you'll be surprised what has happened if you don't get a free holiday",
    "start": "318660",
    "end": "325020"
  },
  {
    "text": "in that you should go back and talk to your managers about it so as you think about these nines of availability as you",
    "start": "325020",
    "end": "331440"
  },
  {
    "text": "start getting into you know 99.95% and above this is where you want to start",
    "start": "331440",
    "end": "338160"
  },
  {
    "text": "considering a multi region deployment and there are different ways that you",
    "start": "338160",
    "end": "343890"
  },
  {
    "text": "can do motor region which the team is going to go through as they go through this considering doesn't mean doing just",
    "start": "343890",
    "end": "352500"
  },
  {
    "text": "means just have a conscious thought as to whether you're consciously wanting to go down this path or not now part of",
    "start": "352500",
    "end": "358890"
  },
  {
    "text": "this is certainly need to understand how we make our services highly available we all know how a region works is made up",
    "start": "358890",
    "end": "364290"
  },
  {
    "text": "of availability zones there's redundant transit in and out of",
    "start": "364290",
    "end": "369900"
  },
  {
    "text": "those availability zones each AZ is made up of one or more data centers connected",
    "start": "369900",
    "end": "377270"
  },
  {
    "text": "if you use the availability zones each availability zone is containment of the",
    "start": "377480",
    "end": "383580"
  },
  {
    "text": "blast radius we try to do everything we can to architect and engineer that an",
    "start": "383580",
    "end": "389490"
  },
  {
    "text": "availability zone is as resilient as we possibly can make it though there are",
    "start": "389490",
    "end": "395160"
  },
  {
    "text": "some situations where an availability zone can still be a single point of failure",
    "start": "395160",
    "end": "400560"
  },
  {
    "text": "control plane for example within an AZ therefore what do we do you have multiple a Z's you put the component in",
    "start": "400560",
    "end": "408180"
  },
  {
    "text": "AZ ABC to protect against that we also",
    "start": "408180",
    "end": "415380"
  },
  {
    "start": "414000",
    "end": "414000"
  },
  {
    "text": "have region-wide services that span those daisies often in a transparent way too you don't have to worry about it for",
    "start": "415380",
    "end": "421530"
  },
  {
    "text": "example using s3 you don't think about what AZ is in it's spread across three",
    "start": "421530",
    "end": "426900"
  },
  {
    "text": "or more OFS SQS Kinesis dynamodb there's a lot of them there where you'd go",
    "start": "426900",
    "end": "434820"
  },
  {
    "text": "through some of these are default you don't have to worry about it some of their configurable there are different",
    "start": "434820",
    "end": "441360"
  },
  {
    "text": "costs involved as you do this for example deploying elastic hash maybe",
    "start": "441360",
    "end": "446850"
  },
  {
    "text": "that you just need one case server in one AZ it's perfectly okay if it's for tests and EV or something that's not",
    "start": "446850",
    "end": "452940"
  },
  {
    "text": "critical to the organization but if it is critical you can choose how many replicas you need across as many a Z's",
    "start": "452940",
    "end": "460290"
  },
  {
    "text": "as you require it's about giving you choice even within an availability zone there are techniques to help protect",
    "start": "460290",
    "end": "466980"
  },
  {
    "start": "463000",
    "end": "463000"
  },
  {
    "text": "against single points of failure within the AZ for example with ec2 instance recovery instance ID if it fails just",
    "start": "466980",
    "end": "476060"
  },
  {
    "text": "spin up another one where you go another way of increasing or actually decreasing",
    "start": "476060",
    "end": "483090"
  },
  {
    "text": "that mean time to repair as you go through",
    "start": "483090",
    "end": "487129"
  },
  {
    "start": "489000",
    "end": "489000"
  },
  {
    "text": "high availability auto-scaling or it's going groups across the available so these are all tools to allow you to hit",
    "start": "489220",
    "end": "497260"
  },
  {
    "text": "pretty high levels availability within the same region still we don't think",
    "start": "497260",
    "end": "503320"
  },
  {
    "text": "that you can hit four nines by the way within a region quite easily if you follow a lot of these techniques so you",
    "start": "503320",
    "end": "510070"
  },
  {
    "text": "what are the reasons you may want to use a region active active architecture one",
    "start": "510070",
    "end": "518979"
  },
  {
    "text": "of the most common reasons that I see that is defensible really independent of",
    "start": "518979",
    "end": "524020"
  },
  {
    "text": "the availability modeling actually is if you have geographically distributed customer base you know if you've got customers in the US in Europe in Asia",
    "start": "524020",
    "end": "532020"
  },
  {
    "text": "you want to have them using their closest region this helps with latency",
    "start": "532020",
    "end": "538320"
  },
  {
    "text": "but when you're doing this you've got to thing about each service",
    "start": "538320",
    "end": "543700"
  },
  {
    "text": "within each region so for example here you can see there's users in San Francisco uses New York using Western",
    "start": "543700",
    "end": "550030"
  },
  {
    "text": "East and they're using a number of different AWS services there what happens if one of the services fails",
    "start": "550030",
    "end": "556450"
  },
  {
    "text": "within a region well this is also kind of is how you should think about failure",
    "start": "556450",
    "end": "561490"
  },
  {
    "text": "often customers talk to me about what happens if the region fails well that's",
    "start": "561490",
    "end": "567250"
  },
  {
    "text": "not really actually what happens what happens is it's normally a component within the region for us it's a partial",
    "start": "567250",
    "end": "572830"
  },
  {
    "text": "failure and those of you who work a lot in operations know that partial failures are the worst ones to do detect and",
    "start": "572830",
    "end": "579280"
  },
  {
    "text": "actually work because it's not entirely broken it's just broken a little bit should I keep it running and hope it",
    "start": "579280",
    "end": "584650"
  },
  {
    "text": "resolves itself or do I pull the trigger and fail the entire application over until the boss yeah I took out the other",
    "start": "584650",
    "end": "591100"
  },
  {
    "text": "70% that was working so I could get it were flipped over to the other site which is a hundred percent working doing",
    "start": "591100",
    "end": "598240"
  },
  {
    "text": "that in a stressful situation it's not always as easy as it sounds so service has failed we're going to",
    "start": "598240",
    "end": "604720"
  },
  {
    "text": "therefore fail the region from the application perspective and we're going to direct all the users to the other",
    "start": "604720",
    "end": "610000"
  },
  {
    "text": "region the other region is still working for the majority of servers it's just at one service that's having a little bit",
    "start": "610000",
    "end": "616300"
  },
  {
    "text": "of a hiccup this is how you get high levels of availability where our",
    "start": "616300",
    "end": "622150"
  },
  {
    "text": "cost-effective do you know this is a another area where you see customers picker been doing lift",
    "start": "622150",
    "end": "628779"
  },
  {
    "text": "and shift migrations legacy applications is I'm going to put the application in one region I'm going to stage it in",
    "start": "628779",
    "end": "636310"
  },
  {
    "text": "another region but it's kind of cold or warm standby well we all know the",
    "start": "636310",
    "end": "642339"
  },
  {
    "text": "problems of that they fall out of sync in that moment of need when you actually need it the most what happens it doesn't",
    "start": "642339",
    "end": "651220"
  },
  {
    "text": "work meanwhile you're also paying a lot of money for it to sit there idle so where you ever you can get away with",
    "start": "651220",
    "end": "657430"
  },
  {
    "text": "using active active you want it you're not wasting money it's forcing you to be",
    "start": "657430",
    "end": "662620"
  },
  {
    "text": "in sync particularly you start doing things like more frequent code updates release cycles you're just forced to do",
    "start": "662620",
    "end": "668650"
  },
  {
    "text": "good behavior and when you do need to switch from region to region you know",
    "start": "668650",
    "end": "674380"
  },
  {
    "text": "it's going to work because I was already working for a subset of your customer base so I just wanted to set a little",
    "start": "674380",
    "end": "679660"
  },
  {
    "text": "bit that context upfront for you around how to think about it there are use",
    "start": "679660",
    "end": "685360"
  },
  {
    "text": "cases for region region active active deployments but for the vast majority of",
    "start": "685360",
    "end": "691089"
  },
  {
    "text": "cases I don't see customers architecting all that well within the region using",
    "start": "691089",
    "end": "697240"
  },
  {
    "text": "the availability zones and having the code quality and the testing around it and the methodologies to ensure it's",
    "start": "697240",
    "end": "702700"
  },
  {
    "text": "going to work when it's most needed there so with that I'm going to hand",
    "start": "702700",
    "end": "708490"
  },
  {
    "text": "over to Daren he's going to talk through some of the key technology requirements you want to think about as you start using some of these services thank you",
    "start": "708490",
    "end": "714970"
  },
  {
    "text": "all right thanks Glen all right let's",
    "start": "714970",
    "end": "720430"
  },
  {
    "text": "give so hi my name is Darren Brisbane I have",
    "start": "720430",
    "end": "727420"
  },
  {
    "text": "been doing about gosh I'm old thirty-five years of this stuff dealing",
    "start": "727420",
    "end": "732759"
  },
  {
    "text": "with developing multi-region architectures and deploying them all over the world so 30 years ago that made",
    "start": "732759",
    "end": "739389"
  },
  {
    "text": "mainframes and global distributed parallel sysplex those of you I can't I can't see whether any of you are old",
    "start": "739389",
    "end": "745839"
  },
  {
    "text": "enough to know what I'm talking about when I talk about that mainframe stuff but today we have lots of new ways to do",
    "start": "745839",
    "end": "751179"
  },
  {
    "text": "it but having done this for three decades I've learned one important secret about",
    "start": "751179",
    "end": "756309"
  },
  {
    "text": "doing active active multi reach in architectures ready here it is don't do",
    "start": "756309",
    "end": "761889"
  },
  {
    "text": "it don't it's hard it has complexity complexity leads to",
    "start": "761889",
    "end": "767949"
  },
  {
    "text": "failure half the time I've seen people do this they end up with lower availability because they created a more complex environment that they can't run",
    "start": "767949",
    "end": "775470"
  },
  {
    "text": "you people do this for the stupidest reasons they just think well it sounds cooler to be active active so let's make",
    "start": "775470",
    "end": "781869"
  },
  {
    "text": "our jobs ten times harder and set it up that way all right have I convinced anyone here not to do active active all",
    "start": "781869",
    "end": "789699"
  },
  {
    "text": "right fine having said that let's talk about how to do it but keep this in mind if you remember only one thing today",
    "start": "789699",
    "end": "795579"
  },
  {
    "text": "it's don't do this unless you really need it because multi-region active active put it in the same category like",
    "start": "795579",
    "end": "802209"
  },
  {
    "text": "chemotherapy or great or brain surgery it's a really powerful tool but don't use it unless you really need it right",
    "start": "802209",
    "end": "808569"
  },
  {
    "text": "don't do chemotherapy if you have a cold save it for the really deadly diseases that it needs to treat so that said what",
    "start": "808569",
    "end": "816160"
  },
  {
    "start": "816000",
    "end": "816000"
  },
  {
    "text": "are the requirements to do this well first one of course is a network that you can trust right I need my network to",
    "start": "816160",
    "end": "822069"
  },
  {
    "text": "be reliable and you might network to be secure I need to have a good backbone well of course if you're using AWS we",
    "start": "822069",
    "end": "829389"
  },
  {
    "text": "have a fairly good backbone that is connecting together the AZ is and connecting the regions back and forth to",
    "start": "829389",
    "end": "834819"
  },
  {
    "text": "one another if you're all in the cloud",
    "start": "834819",
    "end": "840670"
  },
  {
    "text": "that's great and we've got a lot of great customers you know Netflix air B&B",
    "start": "840670",
    "end": "845759"
  },
  {
    "text": "not all of them Internet companies places like a Penske hotels in Europe or Time Inc that are all",
    "start": "845759",
    "end": "851279"
  },
  {
    "text": "cloud but most of you are not right you know we're in a world especially if you're with a large enterprise that you",
    "start": "851279",
    "end": "857249"
  },
  {
    "text": "know you're not entire than the cloud so I'm going to have to have some way to talk back and forth to the cloud and",
    "start": "857249",
    "end": "862980"
  },
  {
    "text": "then of course I'm gonna have clients that are not sitting in the cloud I need to communicate at some level so I need",
    "start": "862980",
    "end": "868170"
  },
  {
    "text": "to have some sort of VPN or encrypted SSL or some way to communicate over IP and think about ways to make that",
    "start": "868170",
    "end": "874470"
  },
  {
    "text": "reliable so point out my job is to give you all the questions the next week we'll talk about the answers data",
    "start": "874470",
    "end": "881850"
  },
  {
    "text": "replication that can be synchronous or it can be a synchronous if I'm doing multi region data replication doing it",
    "start": "881850",
    "end": "887790"
  },
  {
    "text": "synchronous I just introduced a huge lag in AWS the",
    "start": "887790",
    "end": "893189"
  },
  {
    "text": "two regions that are closest to each other in millisecond terms or us East one and us each - all right that's",
    "start": "893189",
    "end": "898800"
  },
  {
    "text": "Virginian Ohio that's still a 12 millisecond one-way trip so if I'm for",
    "start": "898800",
    "end": "905069"
  },
  {
    "text": "example doing multi region synchronous on a database right what would have been",
    "start": "905069",
    "end": "910319"
  },
  {
    "text": "a 1 millisecond insert if it was in one region just turned into a 25 millisecond",
    "start": "910319",
    "end": "915959"
  },
  {
    "text": "insert because it has to go to one region right into the other region confirm that back to the first region",
    "start": "915959",
    "end": "921019"
  },
  {
    "text": "now what if I'm doing say Virginia and Singapore it's a lot more than 12",
    "start": "921019",
    "end": "927480"
  },
  {
    "text": "milliseconds right it's usually somewhere around 200 to 300 depending on what's going on I actually had somebody",
    "start": "927480",
    "end": "932939"
  },
  {
    "text": "asked why don't you just drill a cable straight through the earth in order to shorten to that engineering is working",
    "start": "932939",
    "end": "939540"
  },
  {
    "text": "on that there's some challenges there so you can do synchronous but there's a latency cost right and you know you",
    "start": "939540",
    "end": "947250"
  },
  {
    "text": "might think well 25 milliseconds isn't that long yeah but that's per insert right this adds up very quickly when you",
    "start": "947250",
    "end": "952980"
  },
  {
    "text": "start doing these things or you can do asynchronous so part of that complexity",
    "start": "952980",
    "end": "958350"
  },
  {
    "text": "and you'll be seeing this is whenever we're doing true multi-region stuff you've got to be able to deal with a synchronicity you've got to be able to",
    "start": "958350",
    "end": "965160"
  },
  {
    "text": "deal with eventual consistency and learn to embrace it and design around it this is one of those the things the",
    "start": "965160",
    "end": "971370"
  },
  {
    "text": "complexity that makes this hard because very few applications are written with this in mind so you end up having you",
    "start": "971370",
    "end": "978300"
  },
  {
    "text": "can't just take an existing application set say I'm going to deploy this multi-region well you can but then",
    "start": "978300",
    "end": "983399"
  },
  {
    "text": "you're gonna so you're gonna have to do some significant changes so asynchronous is useful there's lots of ways to do a",
    "start": "983399",
    "end": "990330"
  },
  {
    "text": "synchronous replication Girish will walk through a good number of them but of course the issue have with asynchronous",
    "start": "990330",
    "end": "995580"
  },
  {
    "text": "is if I'm writing to one part of the world and reading for another part of the world am I getting current data or",
    "start": "995580",
    "end": "1000800"
  },
  {
    "text": "stale data so one thing to think about is do I care does it matter if the data",
    "start": "1000800",
    "end": "1006650"
  },
  {
    "text": "is a second or two seconds or ten seconds out of date for many applications that's fine right but for",
    "start": "1006650",
    "end": "1012410"
  },
  {
    "text": "some applications especially things dealing with say actual say wire transfers or financial transactions or",
    "start": "1012410",
    "end": "1019840"
  },
  {
    "text": "one that I saw somebody are playing with was autonomous driving and you really don't want to wait for you don't really",
    "start": "1019840",
    "end": "1024949"
  },
  {
    "text": "want to wait for the car to communicate to the cloud to figure out whether to stop you know when it's on the road so",
    "start": "1024949",
    "end": "1030640"
  },
  {
    "text": "you know we're gonna have to have some way to deal with a synchronicity and then deal with that is that is it nearly",
    "start": "1030640",
    "end": "1036350"
  },
  {
    "text": "continuous am i shipping it with a delay how am i doing a batch and I sending things over once in a while then of",
    "start": "1036350",
    "end": "1044000"
  },
  {
    "start": "1043000",
    "end": "1043000"
  },
  {
    "text": "course we have synchronizing the code so three basic ways to do this right when I",
    "start": "1044000",
    "end": "1050420"
  },
  {
    "text": "stage deployment across regions because now I have the issue is one region has",
    "start": "1050420",
    "end": "1055790"
  },
  {
    "text": "very one version of the code the other region has another version of the code so one way to do this is the rolling or",
    "start": "1055790",
    "end": "1061610"
  },
  {
    "text": "canary deployment right canary deployment I stick a few servers or containers or land of functions or",
    "start": "1061610",
    "end": "1066890"
  },
  {
    "text": "whatever on the new code see if it works if the canary dies roll it back if the canary lives roll out more can your applications survive",
    "start": "1066890",
    "end": "1074450"
  },
  {
    "text": "that depends on the application if your application can't survive with some on one and some of the other then you're",
    "start": "1074450",
    "end": "1081140"
  },
  {
    "text": "probably going to have to do blue green so blue green means I have the existing environment which is blue the new",
    "start": "1081140",
    "end": "1086570"
  },
  {
    "text": "environment which is green and at some point I switch out all the IP addresses and DNS addresses and whatever and so",
    "start": "1086570",
    "end": "1093110"
  },
  {
    "text": "now everything was running blue now it's running green and what do you do with the blue you leave it there for at least for a little while so that if something",
    "start": "1093110",
    "end": "1098600"
  },
  {
    "text": "goes wrong you can switch it back some people like Netflix calls this red black instead of blue green I don't know why",
    "start": "1098600",
    "end": "1107390"
  },
  {
    "text": "same concept though so if you ever see people talk about red-black de plan it's the same thing and then of course the",
    "start": "1107390",
    "end": "1113390"
  },
  {
    "text": "idea of parameterize localization so if I'm running the code part of that I'm assuming you put in multi region for a",
    "start": "1113390",
    "end": "1120230"
  },
  {
    "text": "reason one of those reasons usually is to do some sort of localization and to try to reduce the end-user latency by",
    "start": "1120230",
    "end": "1126260"
  },
  {
    "text": "having to say the users in Asia I hit an Asian data center instead of having to go across the Pacific every time they do something so that gets the traffic",
    "start": "1126260",
    "end": "1134180"
  },
  {
    "start": "1132000",
    "end": "1132000"
  },
  {
    "text": "segregation and management so there's a couple of options that we can do this you can explicitly do this by having",
    "start": "1134180",
    "end": "1139670"
  },
  {
    "text": "different URLs or different approaches different end points so you know East out something or West out something you",
    "start": "1139670",
    "end": "1147350"
  },
  {
    "text": "could do this with implicit route 53 does this really nicely so I you know",
    "start": "1147350",
    "end": "1153230"
  },
  {
    "text": "have the same URL but it will get automatically routed and I can do some tricks in the traffic management",
    "start": "1153230",
    "end": "1158840"
  },
  {
    "text": "infrastructure so I can throttle things I can do internal redirect I can do external redirect the issue you have the",
    "start": "1158840",
    "end": "1168200"
  },
  {
    "text": "redirect is what do you do when somebody gets sent to the wrong region and then how do you define wrong region right and",
    "start": "1168200",
    "end": "1176180"
  },
  {
    "text": "and then how one lives with that because sometimes the wrong region isn't a problem I'll give an example of a",
    "start": "1176180",
    "end": "1184520"
  },
  {
    "text": "ride-sharing service that I use frequently and I live in Portland Oregon and they have a couple of distributes",
    "start": "1184520",
    "end": "1190670"
  },
  {
    "text": "places that they have regions that they're running this in and I always end up logging through Portland now what if",
    "start": "1190670",
    "end": "1197330"
  },
  {
    "text": "I happen to be in Miami that day still logs through Portland it said a little bit inefficient yeah",
    "start": "1197330",
    "end": "1203420"
  },
  {
    "text": "but I'm using a mobile device am I kind of noticed as an end user in a mobile device a few hundred extra milliseconds",
    "start": "1203420",
    "end": "1209080"
  },
  {
    "text": "probably not so for that it's the wrong reason but it's okay so again things to",
    "start": "1209080",
    "end": "1215180"
  },
  {
    "text": "think about and then of course the whole idea of monitoring this becomes",
    "start": "1215180",
    "end": "1221140"
  },
  {
    "text": "exponentially more difficult in multi region environments because I have more things I need to track and more I need to pay attention to you always need to",
    "start": "1221140",
    "end": "1228050"
  },
  {
    "text": "pay attention application infrastructure health I'm hoping that all of you are doing some sort of log analytics on any",
    "start": "1228050",
    "end": "1233630"
  },
  {
    "text": "critical application I'm regularly amazed by how many people have critical applications so they don't do log",
    "start": "1233630",
    "end": "1239300"
  },
  {
    "text": "analytics or one that I ran into well yeah we we keep the logs in s3 and then when something breaks we spin up",
    "start": "1239300",
    "end": "1245130"
  },
  {
    "text": "elasticsearch to see what broke okay yeah it's yeah that's putting on a seatbelt after the car crash",
    "start": "1245130",
    "end": "1251880"
  },
  {
    "text": "right you want to be using a log analytics system to see what's going on as it's happening and then of course",
    "start": "1251880",
    "end": "1257640"
  },
  {
    "text": "deal with the monitoring of things like replication lag and code sync and so on and making sure I'm understanding these",
    "start": "1257640",
    "end": "1263940"
  },
  {
    "text": "globally for how they happen when you have multi-tenancy it's what is",
    "start": "1263940",
    "end": "1270570"
  },
  {
    "start": "1266000",
    "end": "1266000"
  },
  {
    "text": "multi-tenancy well a tenant is a unit so sometimes it's a business unit sometimes",
    "start": "1270570",
    "end": "1278070"
  },
  {
    "text": "it's a technical definition but it's the",
    "start": "1278070",
    "end": "1284160"
  },
  {
    "text": "idea that I have multiple independent pieces so here's an example of doing it",
    "start": "1284160",
    "end": "1289620"
  },
  {
    "text": "based on States so so one of the lessons that we're learning here is white on",
    "start": "1289620",
    "end": "1295350"
  },
  {
    "text": "blue might not have been the best color scheme that we could choose so if you can't read that US West has a Texas in a",
    "start": "1295350",
    "end": "1301350"
  },
  {
    "text": "California box us as in New York in a Pennsylvania box and of course the whole idea here is as I move things around",
    "start": "1301350",
    "end": "1309450"
  },
  {
    "text": "over my backbone I'm I could have the I could move the Texas stuff into u.s.",
    "start": "1309450",
    "end": "1315930"
  },
  {
    "text": "East if I need to for load purposes or other reasons so the whole idea here is",
    "start": "1315930",
    "end": "1321900"
  },
  {
    "text": "to be able to have that unit as a tenant that I can decide where it goes and that",
    "start": "1321900",
    "end": "1327180"
  },
  {
    "text": "gets down to the whole idea of static consistency when I'm doing multi region I really want to make sure that each",
    "start": "1327180",
    "end": "1333480"
  },
  {
    "text": "region can handle my entire workload maybe not my entire peak workload but at least my entire average workload great",
    "start": "1333480",
    "end": "1340770"
  },
  {
    "text": "thing about being on the cloud instead of using AWS changing that sizing is a",
    "start": "1340770",
    "end": "1346260"
  },
  {
    "text": "matter of somewhere between zero and a few minutes depending on whether your auto scaling or whether you have to do",
    "start": "1346260",
    "end": "1351420"
  },
  {
    "text": "it manually and then we have the whole idea of direction of replication right",
    "start": "1351420",
    "end": "1356970"
  },
  {
    "text": "so I might have Texas with its core data in one side and then start replicating",
    "start": "1356970",
    "end": "1363240"
  },
  {
    "text": "it in the other direction and we see that yeah fairly often because one of",
    "start": "1363240",
    "end": "1370620"
  },
  {
    "text": "the things that you generally want to avoid in a database is having true active-active database where people are writing into multiple",
    "start": "1370620",
    "end": "1376810"
  },
  {
    "text": "masters especially at the same time now as you'll hear today we've gotten as you",
    "start": "1376810",
    "end": "1382060"
  },
  {
    "text": "may have heard from Andy Jesse this morning we're developing more services to make that easy but if you create",
    "start": "1382060",
    "end": "1387220"
  },
  {
    "text": "yourself in a world where lots of people are writing in to different regions that could collide with each other you're gonna create complexity and failure so",
    "start": "1387220",
    "end": "1394930"
  },
  {
    "text": "usually you want any given set of users to only be writing to one side with it replicating to the other side but it",
    "start": "1394930",
    "end": "1400690"
  },
  {
    "text": "becomes active active because as we discussed back over here I've got some users that are active on one end some",
    "start": "1400690",
    "end": "1407260"
  },
  {
    "text": "users that are active on the other end so they're active active at the system level that is a much safer and easier",
    "start": "1407260",
    "end": "1413620"
  },
  {
    "text": "way to design this than try to make every database active active at every transaction and so if you have to do",
    "start": "1413620",
    "end": "1420010"
  },
  {
    "text": "active active please don't try to make your databases active active active unless you really need to and then even",
    "start": "1420010",
    "end": "1426130"
  },
  {
    "text": "if you really need to try to minimize it well you already pointed out you're not gonna listen to me so all right failover",
    "start": "1426130",
    "end": "1435190"
  },
  {
    "text": "scripts and then I have to have some way to failover I need to reroute traffic for a tenant I need to change direction",
    "start": "1435190",
    "end": "1440410"
  },
  {
    "text": "of replication right all of these are critical alright so what are the",
    "start": "1440410",
    "end": "1448000"
  },
  {
    "start": "1448000",
    "end": "1448000"
  },
  {
    "text": "architectural considerations in here one I need to have tolerance for network partitioning I need to be able to have a",
    "start": "1448000",
    "end": "1454390"
  },
  {
    "text": "way that if I fail in one region the application doesn't fail in another region I want to make sure that API",
    "start": "1454390",
    "end": "1461920"
  },
  {
    "text": "calls never go cross regions that each region is independent from the other regions I particularly want to think",
    "start": "1461920",
    "end": "1470290"
  },
  {
    "text": "about the worst possible failure mode which is a split brain which is not when a region fails but when the network",
    "start": "1470290",
    "end": "1477100"
  },
  {
    "text": "connection fails so each region thinks the other side failed that works great",
    "start": "1477100",
    "end": "1482590"
  },
  {
    "text": "how do you fix it afterwards you now got two different versions of the truth they're not easy things to reconcile so",
    "start": "1482590",
    "end": "1488800"
  },
  {
    "text": "I don't have an easy answer for that that's one of the things to think about those kind of the complexity that I'm fearing when the backbone breaks now in",
    "start": "1488800",
    "end": "1497260"
  },
  {
    "text": "the AWS world does that ever happen well it's incredibly rare but that's the",
    "start": "1497260",
    "end": "1502480"
  },
  {
    "text": "whole point of this sort of disaster recovery thinking is think about those incredibly events one of our great customers is the",
    "start": "1502480",
    "end": "1511070"
  },
  {
    "text": "Church of Jesus Christ of latter-day saints it's the only custom ever dealt with that that not only plans for",
    "start": "1511070",
    "end": "1517280"
  },
  {
    "text": "catastrophic failure but cataclysmic failure which means the end of literally they put some of the family history",
    "start": "1517280",
    "end": "1524510"
  },
  {
    "text": "records on to nickel sheets in salt caves to survive the end of civilization",
    "start": "1524510",
    "end": "1530980"
  },
  {
    "text": "most of us are working in organizations that catastrophic failure is kind of the worst level that we want to pay",
    "start": "1530980",
    "end": "1536570"
  },
  {
    "text": "attention to but think about catastrophic failure so to give my own example I am a proud citizen of Portland",
    "start": "1536570",
    "end": "1542750"
  },
  {
    "text": "Oregon I love living important than I love watching the Sun Rise over the beautiful cascade volcanoes one day they're",
    "start": "1542750",
    "end": "1548810"
  },
  {
    "text": "probably gonna kill me and in theory if",
    "start": "1548810",
    "end": "1554210"
  },
  {
    "text": "we have one of those really big events like the Yellowstone and Cascades opening up it could wipe out not just",
    "start": "1554210",
    "end": "1559730"
  },
  {
    "text": "the US west to region but most of the people living in the north western US",
    "start": "1559730",
    "end": "1564790"
  },
  {
    "text": "that's a catastrophic failure is that likely to happen no but if you care",
    "start": "1564790",
    "end": "1570110"
  },
  {
    "text": "enough about your applications you got a plan for it see what that will happen all right minimal data replication only replicate",
    "start": "1570110",
    "end": "1578390"
  },
  {
    "start": "1574000",
    "end": "1574000"
  },
  {
    "text": "we need to replicate all right there's all data need to be replicated probably not it doesn't need to be replicated",
    "start": "1578390",
    "end": "1584660"
  },
  {
    "text": "synchronously probably not right do I need to replicate my backups yes do I",
    "start": "1584660",
    "end": "1589850"
  },
  {
    "text": "need to replicate my backups synchronously probably not there's all data need to be replicated continuously",
    "start": "1589850",
    "end": "1595730"
  },
  {
    "text": "or can they be things that happen in batches so things to think about this",
    "start": "1595730",
    "end": "1600950"
  },
  {
    "start": "1600000",
    "end": "1600000"
  },
  {
    "text": "kind of gets back to to a great saying that I've heard from many people because I've heard Winston Churchill and Eydie",
    "start": "1600950",
    "end": "1606590"
  },
  {
    "text": "Grove quote of this which is don't worry about the hard decisions they're hard decisions because both both choices are",
    "start": "1606590",
    "end": "1612860"
  },
  {
    "text": "probably pretty good you could flip a coin you'll be ok worried about the easy decisions we're about the ones that nobody is questioning go back in",
    "start": "1612860",
    "end": "1619850"
  },
  {
    "text": "question should I be replicating this data do I need to replicate this data classify the data so I've got data that",
    "start": "1619850",
    "end": "1627110"
  },
  {
    "text": "is transactions right this is stuff like purchase records I've got data that is",
    "start": "1627110",
    "end": "1632540"
  },
  {
    "text": "catalog information this is stuff like product data I've got events and objects like",
    "start": "1632540",
    "end": "1638450"
  },
  {
    "text": "clickstream I've got server logs and data like that so that first category is low volume but",
    "start": "1638450",
    "end": "1644240"
  },
  {
    "text": "pretty critical right the other end is",
    "start": "1644240",
    "end": "1649820"
  },
  {
    "text": "high volume but less critical we ever looked at how many logs your stuff generates in a day it's a big number",
    "start": "1649820",
    "end": "1656450"
  },
  {
    "text": "those are the reason you need things like elasticsearch is part of that solution I don't know about you I'm not smart enough to look at 10 terabytes of",
    "start": "1656450",
    "end": "1662539"
  },
  {
    "text": "JSON and figure out where the problem is so that's why you need to visualize these things but you do need to do some",
    "start": "1662539",
    "end": "1668330"
  },
  {
    "text": "level of classification and have different rules for the different classes and then of course think about",
    "start": "1668330",
    "end": "1674990"
  },
  {
    "start": "1673000",
    "end": "1673000"
  },
  {
    "text": "am i doing synchronous or asynchronous replication so when I move stuff across from A to B how is that going to how is",
    "start": "1674990",
    "end": "1682700"
  },
  {
    "text": "that going to work so I can have I write my application to a database and have it",
    "start": "1682700",
    "end": "1688309"
  },
  {
    "text": "replicates and then have it acknowledged and then acknowledge back that works",
    "start": "1688309",
    "end": "1694340"
  },
  {
    "text": "pretty well right the problem there is as we said before where Network dependent but it does guarantee",
    "start": "1694340",
    "end": "1699620"
  },
  {
    "text": "consistency or eventually it times out and the transaction rolls back or I can",
    "start": "1699620",
    "end": "1706309"
  },
  {
    "text": "do the right and replicate an ACK but the danger here you might have noticed I",
    "start": "1706309",
    "end": "1713059"
  },
  {
    "text": "did the acknowledge before the replicate is that they can go out of sync if there's a problem but that radically reduces that latency on the other end so",
    "start": "1713059",
    "end": "1720169"
  },
  {
    "text": "basically here you have two bad choices you have to decide which bad choice is less bad for your application and your",
    "start": "1720169",
    "end": "1725960"
  },
  {
    "text": "environment although as you'll hear today some of the things that we're doing with dynamodb and elsewhere",
    "start": "1725960",
    "end": "1731299"
  },
  {
    "text": "help make this less of a problem and as you may have heard we are this morning was announced that we'll be dealing with",
    "start": "1731299",
    "end": "1736970"
  },
  {
    "text": "both with multi master Aurora as well that minimizes these problems it means",
    "start": "1736970",
    "end": "1742610"
  },
  {
    "text": "AWS takes care of some of it for you but as you probably know no matter how good the services are poorly designed",
    "start": "1742610",
    "end": "1748820"
  },
  {
    "text": "applications can still fail no matter how good the services are underneath so",
    "start": "1748820",
    "end": "1754279"
  },
  {
    "start": "1753000",
    "end": "1753000"
  },
  {
    "text": "we'd like to think of it as a replication Lane I got a sink lane and a nearly",
    "start": "1754279",
    "end": "1759889"
  },
  {
    "text": "continuous Lane a batch lane and the one that off the bottom which is they don't bother Lane right like do you really",
    "start": "1759889",
    "end": "1767450"
  },
  {
    "text": "need to replicate your logs probably not they're kind of huge",
    "start": "1767450",
    "end": "1772670"
  },
  {
    "text": "plus if you're sticking them in something like s3 yeah they're only going to get lost they might get lost",
    "start": "1772670",
    "end": "1778370"
  },
  {
    "text": "temporarily if we lose a network conductivity but the durability of s3 is ludicrously high right it's eleven nines",
    "start": "1778370",
    "end": "1785390"
  },
  {
    "text": "synchronous is the hardest to manage the batch is easiest to manage but they all have to be managed and watched so",
    "start": "1785390",
    "end": "1792620"
  },
  {
    "text": "transactions in that Lane catalog in that Lane events in that Lane logs falling off the bottom so it takes us to",
    "start": "1792620",
    "end": "1799790"
  },
  {
    "start": "1798000",
    "end": "1798000"
  },
  {
    "text": "our ideal replication system so the basic minimum here is I have a source",
    "start": "1799790",
    "end": "1805630"
  },
  {
    "text": "data here we say database that's how to be database right could be a data set all right but I've got a source chunko",
    "start": "1805630",
    "end": "1812870"
  },
  {
    "text": "data that's going to go into some sort of replicator into its target so it should report the replication lag one",
    "start": "1812870",
    "end": "1820310"
  },
  {
    "text": "way to know how far is that target behind the source so the it's like a good non database example of this is s3",
    "start": "1820310",
    "end": "1826270"
  },
  {
    "text": "replication and you can get the lag in there but you know s3 does not guarantee",
    "start": "1826270",
    "end": "1831320"
  },
  {
    "text": "a delivery time so sometimes it's very fast but if you have like giant multimedia objects that could take a",
    "start": "1831320",
    "end": "1837050"
  },
  {
    "text": "long time for the s3 it could take minutes for the s3 to replicate to a remote region but you need to report",
    "start": "1837050",
    "end": "1843440"
  },
  {
    "text": "that lag it should record offset right how far off is the target from the source so have an idea of the record",
    "start": "1843440",
    "end": "1851390"
  },
  {
    "text": "offset should be able to retry replication if the if it fails and it",
    "start": "1851390",
    "end": "1858110"
  },
  {
    "text": "should keep trying until it's successful now many AWS services as Girish will",
    "start": "1858110",
    "end": "1863630"
  },
  {
    "text": "walk through will do those steps for you but you need to make sure that every piece of data that you're doing active",
    "start": "1863630",
    "end": "1869330"
  },
  {
    "text": "active has these steps in it that you are having a way to report on it and",
    "start": "1869330",
    "end": "1874610"
  },
  {
    "text": "monitor it keep trying if it fails and keep trying again if it fails for the",
    "start": "1874610",
    "end": "1879920"
  },
  {
    "text": "right amount of time so I'll finish with a few best practices and these are the",
    "start": "1879920",
    "end": "1886790"
  },
  {
    "start": "1882000",
    "end": "1882000"
  },
  {
    "text": "best practices a little bit in computer science terms so if you're not familiar with idempotency idempotency means for",
    "start": "1886790",
    "end": "1893720"
  },
  {
    "text": "things that are not changing you should get the result every time so for example for database that I'm not doing any",
    "start": "1893720",
    "end": "1899510"
  },
  {
    "text": "inserts or updates on every select statement should give you the same answer right when I run the same select",
    "start": "1899510",
    "end": "1904820"
  },
  {
    "text": "statement I should get this answer idempotency is the idea that no matter how many times I try the same",
    "start": "1904820",
    "end": "1910170"
  },
  {
    "text": "piece if it's an idempotent operation it should remain consistent this needs to",
    "start": "1910170",
    "end": "1915660"
  },
  {
    "text": "be item potent across regions if you're gonna be active active I want to make sure that when I run the same code in one region it runs the same way in the",
    "start": "1915660",
    "end": "1921900"
  },
  {
    "text": "other agent eventual consistency this is the tough part learn to embrace and",
    "start": "1921900",
    "end": "1927180"
  },
  {
    "text": "virtual consistency of writing code for eventual consistency is hard it's",
    "start": "1927180",
    "end": "1932430"
  },
  {
    "text": "probably the biggest piece of complexity it's the only way to scale at Amazon",
    "start": "1932430",
    "end": "1938220"
  },
  {
    "text": "we have spent most of the last ten years rewriting the monolithic applications we",
    "start": "1938220",
    "end": "1943380"
  },
  {
    "text": "wrote in the 90s when we launched into micro services applications designer and eventual consistency it's been expensive",
    "start": "1943380",
    "end": "1949830"
  },
  {
    "text": "it's been difficult it's been frustrating and it's lettuce grown from a ten billion dollar company to 180",
    "start": "1949830",
    "end": "1955110"
  },
  {
    "text": "billion dollar company right these are the kind of things you have to do in order to get to these large scales",
    "start": "1955110",
    "end": "1961430"
  },
  {
    "text": "static stability it's another way of saying as I said before if I lose if I",
    "start": "1961430",
    "end": "1967230"
  },
  {
    "text": "lose a region the other region should operate the same way so it should be stable from the point of view of the",
    "start": "1967230",
    "end": "1972960"
  },
  {
    "text": "code which means they all have the same code they're all running the same way exponential back-off is part of the",
    "start": "1972960",
    "end": "1978750"
  },
  {
    "text": "coding this is how you do try again right I'm presuming you're familiar with this pattern especially if you're a developer right you write it times out",
    "start": "1978750",
    "end": "1985140"
  },
  {
    "text": "you wait 10 milliseconds try again wait a hundred milliseconds try again wait a thousand milliseconds try again how far",
    "start": "1985140",
    "end": "1991470"
  },
  {
    "text": "does this go that depends on your environment and what that application can survive in most of the AWS services",
    "start": "1991470",
    "end": "1998370"
  },
  {
    "text": "if I have a database primary failure and I'm set up for high availability my downtime will be somewhere between 30",
    "start": "1998370",
    "end": "2004700"
  },
  {
    "text": "seconds and 5 minutes depending on what I'm using so I need to make sure that my can my back off survive that long and if",
    "start": "2004700",
    "end": "2011450"
  },
  {
    "text": "not will a timeout in a way that lets a user survive and deal with it throttling how do I deal with the cases",
    "start": "2011450",
    "end": "2018320"
  },
  {
    "text": "that data doesn't always come in at the same rate this is when we use caching systems and and other things in order to",
    "start": "2018320",
    "end": "2023690"
  },
  {
    "text": "be able to throttle and pull in the data and finally circuit breaking this is another thing that you need to write in",
    "start": "2023690",
    "end": "2029150"
  },
  {
    "text": "code that you didn't need if you were before your active active which is when I'm doing things that go across the",
    "start": "2029150",
    "end": "2034700"
  },
  {
    "text": "regions and something's not working how long do I let it hile up with other things depending on",
    "start": "2034700",
    "end": "2041480"
  },
  {
    "text": "it waiting before I break that circuit and say this is going to fail so this is another place where you have to do some",
    "start": "2041480",
    "end": "2046790"
  },
  {
    "text": "monitoring and some automation so TLDR",
    "start": "2046790",
    "end": "2051800"
  },
  {
    "text": "don't do it but if you have to do it do it carefully and monitor everything now",
    "start": "2051800",
    "end": "2059030"
  },
  {
    "text": "the good news is we have ways to make this a little bit easier Girish come tell us about nice so Darren",
    "start": "2059030",
    "end": "2077840"
  },
  {
    "text": "laid out all the architectural principles I'm going to now discuss specifics of various services that help",
    "start": "2077840",
    "end": "2084530"
  },
  {
    "text": "you implement this architecture and we are also going to see how we do how we",
    "start": "2084530",
    "end": "2089720"
  },
  {
    "text": "keep you know those trade-offs that didn't discussed in mind when we are using those services and their features",
    "start": "2089720",
    "end": "2098170"
  },
  {
    "text": "so I got this slide from last year's presentation by James Hamilton but there",
    "start": "2098170",
    "end": "2104180"
  },
  {
    "text": "was Tuesday night live as well this year and you would have seen that all AWS regions across the globe are connected",
    "start": "2104180",
    "end": "2111170"
  },
  {
    "text": "with each other using a very fat backbone right so network has been taken",
    "start": "2111170",
    "end": "2116330"
  },
  {
    "text": "care for you so when a server in one AWS region tries to talk to server in",
    "start": "2116330",
    "end": "2122330"
  },
  {
    "text": "another AWS region without you having to tell it the traffic is going to route over these high quality backbone so you",
    "start": "2122330",
    "end": "2129890"
  },
  {
    "text": "get the benefit of this even without knowing that you are using it so this is pretty cool one less thing to worry",
    "start": "2129890",
    "end": "2137270"
  },
  {
    "text": "about so backbone is fine right it's going to",
    "start": "2137270",
    "end": "2142970"
  },
  {
    "text": "route your traffic what about the security of your data when it is flowing over the backbone okay",
    "start": "2142970",
    "end": "2148580"
  },
  {
    "text": "so people use VPN right so you can use",
    "start": "2148580",
    "end": "2153980"
  },
  {
    "text": "VPN there are variety of ways to configure VPN so either you can route your VPN data wire your corporate data",
    "start": "2153980",
    "end": "2160970"
  },
  {
    "text": "center right that time you can benefit from a WSS hardware based VPN which is extremely high throughput or you can",
    "start": "2160970",
    "end": "2169310"
  },
  {
    "text": "have a direct into an VPN using software based peon techniques right so there are a Mis",
    "start": "2169310",
    "end": "2176060"
  },
  {
    "text": "from various partners like photogate which provide you VPN connectivity there",
    "start": "2176060",
    "end": "2181700"
  },
  {
    "text": "is one downside of this though that you get limited by the instance bandwidth because now you are using instances to",
    "start": "2181700",
    "end": "2188630"
  },
  {
    "text": "run your VPN software so there is a lot of complexity in doing this right it's",
    "start": "2188630",
    "end": "2194660"
  },
  {
    "text": "quite doable there is a white paper that we have published as well as CloudFormation template also which can",
    "start": "2194660",
    "end": "2200360"
  },
  {
    "text": "help you do the setup but wouldn't it be nice for AWS to take care of even encryption of your data when it is",
    "start": "2200360",
    "end": "2207020"
  },
  {
    "text": "passing over the network so we heard customers the thing that we do all the",
    "start": "2207020",
    "end": "2214250"
  },
  {
    "text": "time and we launched something new so",
    "start": "2214250",
    "end": "2224840"
  },
  {
    "text": "people love VPC peering because it allows them to connect one VPC to another VPC in a very secure way and it",
    "start": "2224840",
    "end": "2232910"
  },
  {
    "text": "always works but it used to work within a given region but now it works",
    "start": "2232910",
    "end": "2238190"
  },
  {
    "text": "across the regions so this is a small diagram that shows two V pieces in two",
    "start": "2238190",
    "end": "2245900"
  },
  {
    "text": "different regions so being connected so it takes care of a lot of your headache",
    "start": "2245900",
    "end": "2251240"
  },
  {
    "text": "it's a free service ok so no VPN charges",
    "start": "2251240",
    "end": "2256850"
  },
  {
    "text": "for you the only thing you pay for is the amount of data transfer at the rate",
    "start": "2256850",
    "end": "2262280"
  },
  {
    "text": "of intelligent data transfer so that's pretty cool you have to keep in mind one",
    "start": "2262280",
    "end": "2269630"
  },
  {
    "text": "thing though since it will form a single network by connecting them by VPN you should not use overlapping IP addresses",
    "start": "2269630",
    "end": "2276520"
  },
  {
    "text": "they should be non overlapping IP address ranges and yeah as I mentioned",
    "start": "2276520",
    "end": "2282680"
  },
  {
    "text": "all the traffic is by default encrypted so you're also once you do this so",
    "start": "2282680",
    "end": "2287750"
  },
  {
    "text": "highly recommend it go for this whenever you want to connect two regions yeah",
    "start": "2287750",
    "end": "2294830"
  },
  {
    "start": "2293000",
    "end": "2293000"
  },
  {
    "text": "these are some of the key benefits presented as bullet points it works just like intra region BPC data always stays",
    "start": "2294830",
    "end": "2303110"
  },
  {
    "text": "on backbone it's always encrypted for you there is no need to use gateways",
    "start": "2303110",
    "end": "2308390"
  },
  {
    "text": "third party VPN solutions saving you lot of cost right and no additional charges as I said for V PC peering all you pay",
    "start": "2308390",
    "end": "2315650"
  },
  {
    "text": "for is data transfer at standard rates so now let us look into individual",
    "start": "2315650",
    "end": "2323780"
  },
  {
    "text": "services so s3 is one of the first services that we launched and people put",
    "start": "2323780",
    "end": "2331700"
  },
  {
    "text": "a lot of their important data in s3 because it is just so reliable right 11 lines of durability s3 now has this",
    "start": "2331700",
    "end": "2340130"
  },
  {
    "text": "feature for quite some time which is cross region replication which very reliably replicates data at one end to",
    "start": "2340130",
    "end": "2347390"
  },
  {
    "text": "the other end so whatever you are storing in s3 bit your files documents",
    "start": "2347390",
    "end": "2353870"
  },
  {
    "text": "or your database backups all are automatically copied from one into the other end and it is done in",
    "start": "2353870",
    "end": "2360050"
  },
  {
    "text": "a windy reliable way and since this is a AWS service all the security and things like that are taken care by AWS you",
    "start": "2360050",
    "end": "2365720"
  },
  {
    "text": "don't have to worry about it it just works this is pretty cool now",
    "start": "2365720",
    "end": "2371720"
  },
  {
    "text": "let us take a look at another place where you store your important data that's IDs and as Glen said in the",
    "start": "2371720",
    "end": "2377900"
  },
  {
    "text": "morning not morning just half an hour back that before you think to do things",
    "start": "2377900",
    "end": "2386450"
  },
  {
    "text": "cross region right or multi-region first learn to use a given region in the right",
    "start": "2386450",
    "end": "2392420"
  },
  {
    "text": "way because you can derive a lot of benefits very easily there are a lot of low-hanging fruits and one of the",
    "start": "2392420",
    "end": "2398750"
  },
  {
    "text": "low-hanging fruits is deploying a standby server for your master in another easy which is independent of",
    "start": "2398750",
    "end": "2406520"
  },
  {
    "text": "first AZ which has got its own data centers power supplies network and everything and there is extremely low",
    "start": "2406520",
    "end": "2412010"
  },
  {
    "text": "latency synchronous data copy that is happening from master to standby so if master is going to fail ever you always",
    "start": "2412010",
    "end": "2419359"
  },
  {
    "text": "have a standby to rely on and you can switch over from master to standby within a minutes time the DNS rerouting",
    "start": "2419359",
    "end": "2426440"
  },
  {
    "text": "happens automatically without you having to do anything so this is pretty cool you should always take advantage of this",
    "start": "2426440",
    "end": "2433670"
  },
  {
    "text": "feature whenever you are going to store critical data in RDS now IDs has a neat",
    "start": "2433670",
    "end": "2442099"
  },
  {
    "text": "feature which helps you with multi region architecture should you decide to go down that route and it makes sense in",
    "start": "2442099",
    "end": "2448520"
  },
  {
    "text": "many many use cases so in such cases you benefit from a feature called as cross",
    "start": "2448520",
    "end": "2454880"
  },
  {
    "text": "region read replicas by RDS so you can create a replica in a region of your",
    "start": "2454880",
    "end": "2460670"
  },
  {
    "text": "choice and that replica is set up and managed by a W AWS management systems it",
    "start": "2460670",
    "end": "2466700"
  },
  {
    "text": "works extremely reliably so currently the database engines that we support for cross region read replicas are my sequel",
    "start": "2466700",
    "end": "2472849"
  },
  {
    "text": "Maria DB post gray and Aurora if you use sequel server or Oracle there are tools",
    "start": "2472849",
    "end": "2479300"
  },
  {
    "text": "specific to those engines which you are free to use some of them are available in the marketplace but these are some of",
    "start": "2479300",
    "end": "2484910"
  },
  {
    "text": "the most common database engines that we have seen people using so we support out-of-the-box",
    "start": "2484910",
    "end": "2490339"
  },
  {
    "text": "Crossley replication you just have to turn it on yeah this is a very important thing okay",
    "start": "2490339",
    "end": "2497140"
  },
  {
    "start": "2494000",
    "end": "2494000"
  },
  {
    "text": "so whenever you are setting up a cross region read replicas you need to be",
    "start": "2497140",
    "end": "2502180"
  },
  {
    "text": "monitoring a replication lag and AWS provides you that information all the time to you through cloud watch so it's",
    "start": "2502180",
    "end": "2509109"
  },
  {
    "text": "very easy to monitor you can set up Allah alerts and all that thing that you",
    "start": "2509109",
    "end": "2514869"
  },
  {
    "text": "would want to do what is important here is to note that whenever you are creating your read replica in another",
    "start": "2514869",
    "end": "2520750"
  },
  {
    "text": "region make sure that it has got enough capacity so that it doesn't fall behind",
    "start": "2520750",
    "end": "2526630"
  },
  {
    "text": "the master it should be at least as big as the master that's what we recommend and if",
    "start": "2526630",
    "end": "2531730"
  },
  {
    "text": "it ever falls behind there are some steps that you have to take to bring it in sync with the master but ideally you",
    "start": "2531730",
    "end": "2538450"
  },
  {
    "text": "should tear away from that zone you should never have to do that so now once",
    "start": "2538450",
    "end": "2544750"
  },
  {
    "text": "we decide to implement a cross region or you know an active-active multi-region",
    "start": "2544750",
    "end": "2550809"
  },
  {
    "text": "system how do we use masters and read replicas of RDS so here is a very simple",
    "start": "2550809",
    "end": "2557349"
  },
  {
    "text": "scheme so I have shown three regions up is Virginia then Ireland and then Tokyo",
    "start": "2557349",
    "end": "2565690"
  },
  {
    "text": "okay master is only sitting in Virginia and read replicas are represent in the",
    "start": "2565690",
    "end": "2572890"
  },
  {
    "text": "other two regions locally and servers in all the regions are writing to the Masters in Virginia it looks like a plan",
    "start": "2572890",
    "end": "2581980"
  },
  {
    "text": "that is not going to work because the geographical distance is large but many a times all those read/write operations from",
    "start": "2581980",
    "end": "2589150"
  },
  {
    "text": "remote regions finish in a second or so which is acceptable in many many use cases yeah it may not be acceptable in",
    "start": "2589150",
    "end": "2595059"
  },
  {
    "text": "all the use cases but there are going to be many use cases where it is going to be acceptable and data is immediately",
    "start": "2595059",
    "end": "2600730"
  },
  {
    "text": "replicated back to the read replicas so that it is available for real operations locally and in most systems you know you",
    "start": "2600730",
    "end": "2607059"
  },
  {
    "text": "perform 100 reads for every write so this scheme of things however simple it",
    "start": "2607059",
    "end": "2612819"
  },
  {
    "text": "may look it does work but yeah right traffic goes up read replicas traffic",
    "start": "2612819",
    "end": "2620289"
  },
  {
    "text": "comes down and you can live happily but there are going to be some",
    "start": "2620289",
    "end": "2626470"
  },
  {
    "text": "challenges there is going to be a little higher latency and there is going to be Network dependency what if the network",
    "start": "2626470",
    "end": "2632560"
  },
  {
    "text": "breaks down so in such cases you can choose another design if you can't",
    "start": "2632560",
    "end": "2638470"
  },
  {
    "text": "tolerate those situations okay so what you do is as Darien discussed you have",
    "start": "2638470",
    "end": "2643810"
  },
  {
    "text": "different tenants in different regions right we have got region a B and C and they have got different denims being",
    "start": "2643810",
    "end": "2649990"
  },
  {
    "text": "served from there each tenant has its own master to which it is writing",
    "start": "2649990",
    "end": "2655030"
  },
  {
    "text": "locally okay and each master for reliability reasons",
    "start": "2655030",
    "end": "2662250"
  },
  {
    "text": "it is going to have a standby which is synchronously replicated so that not a single transaction is lost and it also",
    "start": "2662250",
    "end": "2669310"
  },
  {
    "text": "is going to have read replicas to which it is going to copy data or synchronously so that you have options",
    "start": "2669310",
    "end": "2675460"
  },
  {
    "text": "ready should region a become unusable for whatever reason for you okay the",
    "start": "2675460",
    "end": "2681790"
  },
  {
    "text": "thing that is going to happen though is that since the replicas are or sync in",
    "start": "2681790",
    "end": "2687310"
  },
  {
    "text": "the other regions it they may lag one or two second behind the primary master right so some committed transactions may",
    "start": "2687310",
    "end": "2695140"
  },
  {
    "text": "not have made to the other side when it is time for you to switch over because of whatever region but your transactions",
    "start": "2695140",
    "end": "2702850"
  },
  {
    "text": "are always safe in the standby okay so you can use data reconciliation",
    "start": "2702850",
    "end": "2707920"
  },
  {
    "text": "techniques which are very commonly known to you know reconcile the data if some star transactions were left behind",
    "start": "2707920",
    "end": "2714220"
  },
  {
    "text": "you can always retrieve them later and make the system consistent again now",
    "start": "2714220",
    "end": "2722940"
  },
  {
    "text": "multi master Aurora okay so we always recommend you having a master and a",
    "start": "2722940",
    "end": "2731470"
  },
  {
    "text": "standby or read replicas we generally advise not going for multi master",
    "start": "2731470",
    "end": "2736990"
  },
  {
    "text": "designs because it is very difficult for you to manage multi master replication",
    "start": "2736990",
    "end": "2742350"
  },
  {
    "text": "both sides simultaneously replicating data to one another but we believe that",
    "start": "2742350",
    "end": "2748390"
  },
  {
    "text": "there are some good use cases for multi master design one of them is extremely",
    "start": "2748390",
    "end": "2753700"
  },
  {
    "text": "high throughput applications so we today announced a multi-master service it has right moves",
    "start": "2753700",
    "end": "2763730"
  },
  {
    "text": "in all ages and you can write to any of the nodes in 2018 we will also be coming",
    "start": "2763730",
    "end": "2769760"
  },
  {
    "text": "out with multi master Aurora cross regions so that's going to be pretty",
    "start": "2769760",
    "end": "2775130"
  },
  {
    "text": "cool for you that's a lot of engineering work generally you will find it",
    "start": "2775130",
    "end": "2781670"
  },
  {
    "text": "difficult to do it yourself but there are AWS engineers that are going to do it for you it will be available in 2018",
    "start": "2781670",
    "end": "2787849"
  },
  {
    "text": "so should you consider to do that architecture you know this is a service that will help you a lot",
    "start": "2787849",
    "end": "2792859"
  },
  {
    "text": "Oh what happened okay yeah so right now",
    "start": "2792859",
    "end": "2801829"
  },
  {
    "start": "2799000",
    "end": "2799000"
  },
  {
    "text": "I so far I was talking about the default replication of RDS but you also can use",
    "start": "2801829",
    "end": "2806930"
  },
  {
    "text": "DMA service the difference being with DMS you can replicate selectively the",
    "start": "2806930",
    "end": "2812240"
  },
  {
    "text": "default replication will replicate everything but sometimes that is what you don't want you want only certain",
    "start": "2812240",
    "end": "2817609"
  },
  {
    "text": "tables to be replicated so DMS gives you that granular control and DMS is able to",
    "start": "2817609",
    "end": "2822619"
  },
  {
    "text": "continuously replicate data because it works with change data capture technologies which allow you to just",
    "start": "2822619",
    "end": "2829609"
  },
  {
    "text": "detect the changes and replicate them from one side to the other so this feature has been it's being supported",
    "start": "2829609",
    "end": "2834859"
  },
  {
    "text": "for my sequel MariaDB Aurora and push for a sequel so yeah if you are using",
    "start": "2834859",
    "end": "2840319"
  },
  {
    "text": "those technologies consider using DMS if you are doing you know granular",
    "start": "2840319",
    "end": "2846589"
  },
  {
    "text": "replication now dynamically B is one of",
    "start": "2846589",
    "end": "2852500"
  },
  {
    "text": "the most common services that people use to meet their new sequel requirements",
    "start": "2852500",
    "end": "2857839"
  },
  {
    "text": "and so far you know dynamic Dubey's in two regions used to work independently so if you",
    "start": "2857839",
    "end": "2865130"
  },
  {
    "text": "wanted to keep them in sync you had to do some engineering work yourself so random ODB is pretty popular because it",
    "start": "2865130",
    "end": "2871910"
  },
  {
    "text": "is highly scalable it is fast it is fully managed and it provides you",
    "start": "2871910",
    "end": "2877010"
  },
  {
    "text": "business-critical reliability so there are many many large organizations including amazon.com which deployed",
    "start": "2877010",
    "end": "2883460"
  },
  {
    "text": "DynamoDB for their critical workloads so you would want to have die Namibia also replicated so today we announced one",
    "start": "2883460",
    "end": "2891020"
  },
  {
    "text": "more feature dynamic global tables so now you can have DynamoDB tables spread across the",
    "start": "2891020",
    "end": "2897440"
  },
  {
    "text": "globe and you can keep writing to any of the tables and they will be working in",
    "start": "2897440",
    "end": "2903500"
  },
  {
    "text": "multi-master more from one end data will be copied replicated instantaneously to the other end and vice versa and all the",
    "start": "2903500",
    "end": "2910339"
  },
  {
    "text": "tables across the globe will be in sync for you so these are some of the benefits but rather than me talking",
    "start": "2910339",
    "end": "2916970"
  },
  {
    "text": "about it we have product manager for this service going who is going to show",
    "start": "2916970",
    "end": "2923960"
  },
  {
    "text": "you the demo so what do you so if you're",
    "start": "2923960",
    "end": "2935119"
  },
  {
    "text": "at the keynote this morning now you probably heard any of jazz you talk to you about global tables global tables is",
    "start": "2935119",
    "end": "2941170"
  },
  {
    "text": "DynamoDB s fully managed multi-region multi master database solution just",
    "start": "2941170",
    "end": "2949039"
  },
  {
    "text": "spent are quite some time sharing wisdom about why you should be highly wary of active active database setups I'm here",
    "start": "2949039",
    "end": "2956359"
  },
  {
    "text": "to show you how easy it is to do active active replication in dynamo dB",
    "start": "2956359",
    "end": "2962150"
  },
  {
    "text": "so why would you use mobile tables we really think it's about you know first if you have massively scaled",
    "start": "2962150",
    "end": "2968299"
  },
  {
    "text": "applications that have users around the world you want to deliver you know the best possible and fastest performance to",
    "start": "2968299",
    "end": "2974690"
  },
  {
    "text": "all of those users which means processing the requests in the most local region possible",
    "start": "2974690",
    "end": "2980000"
  },
  {
    "text": "so essentially data locality and secondly it provides a new level of regional fault tolerance right because",
    "start": "2980000",
    "end": "2986779"
  },
  {
    "text": "with global tables your dad has synced across multiple a devious regions and therefore it's able your application can",
    "start": "2986779",
    "end": "2993710"
  },
  {
    "text": "withstand you know in a region outage or degradation of service and your app keeps on just chugging away now dynamodb",
    "start": "2993710",
    "end": "3001930"
  },
  {
    "text": "global tables handles the difficult work of replication for you it propagates changes from any one region to all the",
    "start": "3001930",
    "end": "3007539"
  },
  {
    "text": "other regions and it handles any conflicts using lash writer wins reconciliation between conflicting",
    "start": "3007539",
    "end": "3013180"
  },
  {
    "text": "updates so let me go now to my laptop and I'll give you a brief demonstration",
    "start": "3013180",
    "end": "3019390"
  },
  {
    "text": "of global tables",
    "start": "3019390",
    "end": "3022470"
  },
  {
    "text": "great so we're sorry we're starting here in the the dynamodb console hopefully many",
    "start": "3026870",
    "end": "3034440"
  },
  {
    "text": "of you are familiar with this page we'll go to our tables and let's first take a",
    "start": "3034440",
    "end": "3039540"
  },
  {
    "text": "look at a global table that I created you know before this before this so now what you can see here is that you know",
    "start": "3039540",
    "end": "3046950"
  },
  {
    "text": "this table has some items in it it's got auto scaling on and what you'll you'll",
    "start": "3046950",
    "end": "3054450"
  },
  {
    "text": "see that it's new is this global table tab and in this case you can see that I've created a global table that spans",
    "start": "3054450",
    "end": "3060930"
  },
  {
    "text": "several regions it spans Ireland Ohio as well as Oregon and that means that any",
    "start": "3060930",
    "end": "3066900"
  },
  {
    "text": "rights to any one of those regions will be propagated within about a second to all of those other regions so now let's",
    "start": "3066900",
    "end": "3074460"
  },
  {
    "text": "try doing this from scratch I'll go create a table I will call it global",
    "start": "3074460",
    "end": "3083700"
  },
  {
    "text": "table example one we'll give it a primary key and you know rather than",
    "start": "3083700",
    "end": "3090810"
  },
  {
    "text": "fiddle with all of the configuration details on throughput and capacity we'll",
    "start": "3090810",
    "end": "3096810"
  },
  {
    "text": "just use the default settings for DynamoDB so this will take a moment it creates",
    "start": "3096810",
    "end": "3103820"
  },
  {
    "text": "what was that oh yeah that happened to this morning so",
    "start": "3110970",
    "end": "3118290"
  },
  {
    "text": "you can also back up and restore your DynamoDB tables so we created a global",
    "start": "3118290",
    "end": "3125230"
  },
  {
    "text": "table example one it looks like it's ready so now let's go make this a global table so I go to the global tables tab",
    "start": "3125230",
    "end": "3132730"
  },
  {
    "text": "it tells me that you know in order to use mobile tables I need to turn on streams that's because global tables works by",
    "start": "3132730",
    "end": "3139690"
  },
  {
    "text": "using this DynamoDB stream to propagate all item level changes out to other regions so I'll click enable stream and that'll",
    "start": "3139690",
    "end": "3148840"
  },
  {
    "text": "just take a moment to turn on",
    "start": "3148840",
    "end": "3151890"
  },
  {
    "text": "and that's ready now let's start adding regions so I'm in Oregon but I want you",
    "start": "3160190",
    "end": "3166039"
  },
  {
    "text": "know I let's say for example that my application serves customers in the u.s. west coast the US East Coast and Europe",
    "start": "3166039",
    "end": "3172180"
  },
  {
    "text": "so let's go extend the global table to Ireland click continue dynamodb will work its",
    "start": "3172180",
    "end": "3180799"
  },
  {
    "text": "magic in the background and create a replica for you in Ireland they'll apply",
    "start": "3180799",
    "end": "3187849"
  },
  {
    "text": "some global table configuration settings we'll close out and then let's do this",
    "start": "3187849",
    "end": "3194240"
  },
  {
    "text": "exercise one more time for for Ohio for the u.s. East Coast",
    "start": "3194240",
    "end": "3199838"
  },
  {
    "text": "close out of there now let's just you know insert a little bit of data I'll create an item let's",
    "start": "3213650",
    "end": "3222180"
  },
  {
    "text": "say this is item one and DynamoDB is you know offers a flexible schema so you can",
    "start": "3222180",
    "end": "3228660"
  },
  {
    "text": "add whatever attributes you want and let's call this one hello from Oregon",
    "start": "3228660",
    "end": "3235260"
  },
  {
    "text": "will click Save and now this item is",
    "start": "3235260",
    "end": "3241410"
  },
  {
    "text": "written now if you just take a moment to do a brief refresh you'll notice that",
    "start": "3241410",
    "end": "3246720"
  },
  {
    "text": "these two new attributes have appeared AWS rep updates it says update region as",
    "start": "3246720",
    "end": "3255870"
  },
  {
    "text": "well as AWS ret update time now these are fields that the global table service",
    "start": "3255870",
    "end": "3261780"
  },
  {
    "text": "writes on your behalf it tells you where the atom was written and it also tells you where it tells the system rather",
    "start": "3261780",
    "end": "3267090"
  },
  {
    "text": "when this update occurred and these update timestamps are used in order to reconcile between conflicts to the same",
    "start": "3267090",
    "end": "3274140"
  },
  {
    "text": "item so now if we go to another region we go to Ireland we can see that this",
    "start": "3274140",
    "end": "3280890"
  },
  {
    "text": "table global table ax 1 was created for us and then we now see that oh look at",
    "start": "3280890",
    "end": "3287580"
  },
  {
    "text": "that hello from Oregon and if we do the same thing now this is in Ireland and",
    "start": "3287580",
    "end": "3294150"
  },
  {
    "text": "now we go to the Ohio version we see this replica table appear and hello from",
    "start": "3294150",
    "end": "3303720"
  },
  {
    "text": "Oregon and you know if I get if I can say write another one let's say this",
    "start": "3303720",
    "end": "3311190"
  },
  {
    "text": "will call this item 2 you know we'll",
    "start": "3311190",
    "end": "3317520"
  },
  {
    "text": "call this one as well say message hello from Ohio",
    "start": "3317520",
    "end": "3324740"
  },
  {
    "text": "you'll see it adds the fields and then it'll get replicated over to these other",
    "start": "3329190",
    "end": "3335550"
  },
  {
    "text": "regions as soon as you refresh your your screen so this is all well and good if",
    "start": "3335550",
    "end": "3341730"
  },
  {
    "text": "you're doing you know kind of like TOI writes using the management console but what if you actually wanted to do you",
    "start": "3341730",
    "end": "3347430"
  },
  {
    "text": "know more rights than that let's say for example that you're doing several you",
    "start": "3347430",
    "end": "3353490"
  },
  {
    "text": "know several hundred rights so in this case I've got a couple Python scripts one of them is going to insert items",
    "start": "3353490",
    "end": "3358740"
  },
  {
    "text": "into the Dublin table and another one is going to insert items into the Oregon table hopefully this works and here we",
    "start": "3358740",
    "end": "3372420"
  },
  {
    "text": "go you'll notice that the the inserts to the Dublin table are going faster than",
    "start": "3372420",
    "end": "3377730"
  },
  {
    "text": "the ones going to Dublin that's just because you know we're going across the ocean here if you were to do this in you",
    "start": "3377730",
    "end": "3384480"
  },
  {
    "text": "know real-life production you probably wouldn't be issuing the request from your laptop you'd be issuing them from an ec2 instance in Dublin so now we can",
    "start": "3384480",
    "end": "3393210"
  },
  {
    "text": "start seeing these items we're starting to get inserted and we can go now to you",
    "start": "3393210",
    "end": "3399180"
  },
  {
    "text": "know let's go to the Oregon table and we'll refresh and you can see now that",
    "start": "3399180",
    "end": "3407730"
  },
  {
    "text": "there's all these transactions coming in and they're coming from multiple places some are being written you know in the",
    "start": "3407730",
    "end": "3413819"
  },
  {
    "text": "u.s. to this table and others are being written from Ireland that are getting replicated over and if we go for example",
    "start": "3413819",
    "end": "3420089"
  },
  {
    "text": "the Ohio table which is a passive participant in this it wasn't doing any of the writes we refresh here and we see",
    "start": "3420089",
    "end": "3429780"
  },
  {
    "text": "that all of these rights have been replicated from Dublin and from Oregon into Ohio",
    "start": "3429780",
    "end": "3434970"
  },
  {
    "text": "so that's Lobel tables for you",
    "start": "3434970",
    "end": "3440060"
  },
  {
    "text": "oh yes one less thing and to clarify",
    "start": "3443010",
    "end": "3453330"
  },
  {
    "text": "global tables is available today in five regions it's in u.s. West or US West or",
    "start": "3453330",
    "end": "3460530"
  },
  {
    "text": "US West Oregon u.s. East Ohio us east Northern Virginia EU Ireland and EU",
    "start": "3460530",
    "end": "3467100"
  },
  {
    "text": "Frankfort with more regions coming soon in 2018 thank you yeah so guys I'm aware",
    "start": "3467100",
    "end": "3478650"
  },
  {
    "text": "that I'm the last guy standing between you and pub crawl so I'll make it quick",
    "start": "3478650",
    "end": "3483870"
  },
  {
    "text": "I'll need another 10 minutes to finish all the slides and there is a lot of meaty stuff ahead so this dynamically replication it",
    "start": "3483870",
    "end": "3491730"
  },
  {
    "text": "solves a lot of problems for you but if as of now there is a region where a",
    "start": "3491730",
    "end": "3497370"
  },
  {
    "text": "dynamic global table is not available that feature is not available what you could do is you could use what is known",
    "start": "3497370",
    "end": "3503400"
  },
  {
    "text": "as dynamic streams so streams is basically a place where a log of changes",
    "start": "3503400",
    "end": "3509040"
  },
  {
    "text": "comes it is something similar to my sequel bin law so every change gets reported into stream so you can pick up",
    "start": "3509040",
    "end": "3516270"
  },
  {
    "text": "the changes from the stream in one region you can have a lambda function picking it up and writing it to the",
    "start": "3516270",
    "end": "3522840"
  },
  {
    "text": "other region so why we use lambda because it is just so easy you just define a lambda function and you hook it",
    "start": "3522840",
    "end": "3529650"
  },
  {
    "text": "into a stream you can write it in so many different languages like Java dotnet node.js Python whatever you like",
    "start": "3529650",
    "end": "3535650"
  },
  {
    "text": "and all the execution happens as many as time Records arrive in the stream and it",
    "start": "3535650",
    "end": "3540990"
  },
  {
    "text": "is all managed by AWS all you have to do is you define your logic to handle that",
    "start": "3540990",
    "end": "3546020"
  },
  {
    "text": "stream record whether you want to post it to another region or you want to do something else like write it into",
    "start": "3546020",
    "end": "3551790"
  },
  {
    "text": "elasticsearch and all that so lambda is pretty cool lambda needs no more introduction it's a",
    "start": "3551790",
    "end": "3557940"
  },
  {
    "text": "nice slide that shows how lambda works so basically it picks records one by one from stream it can also batch the",
    "start": "3557940",
    "end": "3564150"
  },
  {
    "text": "records and it writes to the other end and that other end could be anything so",
    "start": "3564150",
    "end": "3569480"
  },
  {
    "text": "there is one nice thing about lambda that I want to know that is highlighted in yellow okay",
    "start": "3569480",
    "end": "3576340"
  },
  {
    "text": "whenever it is Raeleen from the streams say for example the target is not available what does it do okay in such",
    "start": "3576340",
    "end": "3583930"
  },
  {
    "text": "cases the exception is treated as blocking and a WS lambda will not read",
    "start": "3583930",
    "end": "3589810"
  },
  {
    "text": "any new records from the stream until the failed batch of records either expires or it has been processed",
    "start": "3589810",
    "end": "3596050"
  },
  {
    "text": "successfully okay this is a very important thing right this is one of the",
    "start": "3596050",
    "end": "3602260"
  },
  {
    "text": "features of the ideal replicators it shouldn't skip some records right it should wait until the target system is",
    "start": "3602260",
    "end": "3607930"
  },
  {
    "text": "up and the moment the target system is up it should start processing from the",
    "start": "3607930",
    "end": "3613150"
  },
  {
    "text": "place where it got halted right so it introduces a lot of reliability in your replication process now let us see how",
    "start": "3613150",
    "end": "3621370"
  },
  {
    "text": "to replicate data across other popular products like elastic search and redshift all you have to do is your",
    "start": "3621370",
    "end": "3627040"
  },
  {
    "text": "source post data to Kinesis firehose in both the regions and kinases fire rows gets this data efficiently into either",
    "start": "3627040",
    "end": "3633250"
  },
  {
    "text": "elastic search or you know into redshift you have to take one care here though",
    "start": "3633250",
    "end": "3640000"
  },
  {
    "text": "since you want to go same data to both the places your source needs to have tracking to make sure that the postings",
    "start": "3640000",
    "end": "3646540"
  },
  {
    "text": "have happened successfully since you are writing the source you can always do that so this is how very easily you can",
    "start": "3646540",
    "end": "3652240"
  },
  {
    "text": "get data replicated across elasticsearch clusters as well as redshift which are some of the most popular products that",
    "start": "3652240",
    "end": "3658030"
  },
  {
    "text": "people use now this is probably one of the most important things that you will",
    "start": "3658030",
    "end": "3663670"
  },
  {
    "text": "need to do when you are deploying a multi region architecture you will have to route traffic to appropriate region",
    "start": "3663670",
    "end": "3671770"
  },
  {
    "text": "for a given user so new york user should consistently land on east coast you know excess users who are closer to you know",
    "start": "3671770",
    "end": "3679450"
  },
  {
    "text": "west coast they should probably land on west coast so how do you do that right so route 53 is amazon's managed dns",
    "start": "3679450",
    "end": "3687280"
  },
  {
    "text": "service which is fully configurable using a pas which allows you to do this in a very elegant way so let us take a",
    "start": "3687280",
    "end": "3694810"
  },
  {
    "text": "quick look at the scenario you have got three different regions and then each region has got some users which are",
    "start": "3694810",
    "end": "3700570"
  },
  {
    "text": "closer to it and would want to route each user to that region but sometimes that region is going to fail and at that",
    "start": "3700570",
    "end": "3707230"
  },
  {
    "text": "time when I mean to say region is going to fail I mean to say from the applications",
    "start": "3707230",
    "end": "3712660"
  },
  {
    "text": "perspective not AWS regions perspective whenever a particular region is going to be unavailable you would want to",
    "start": "3712660",
    "end": "3718660"
  },
  {
    "text": "redirect users to other region so how do you manage that in a very efficient and elegant way so you use a technology of",
    "start": "3718660",
    "end": "3725920"
  },
  {
    "text": "route 53 which is known as practic flow so what is the kind of endpoints it supports it supports routing to IP",
    "start": "3725920",
    "end": "3732220"
  },
  {
    "text": "addresses load balancers s3 website CloudFront distributions and elastic beanstalk almost pretty much anything",
    "start": "3732220",
    "end": "3738790"
  },
  {
    "text": "that you want to put behind your systems so what is that traffic flow does",
    "start": "3738790",
    "end": "3746200"
  },
  {
    "text": "exactly for you okay so traffic flow is a system that implements dns base two rules for you",
    "start": "3746200",
    "end": "3753880"
  },
  {
    "text": "okay so you can have a simple routing policy right you can have a failover",
    "start": "3753880",
    "end": "3760270"
  },
  {
    "text": "routing policy what it means is go to a all the time but if a fails go to be okay then you could have Joel location",
    "start": "3760270",
    "end": "3768880"
  },
  {
    "text": "based routing policy where you say that people from Florida should be routed to",
    "start": "3768880",
    "end": "3774550"
  },
  {
    "text": "one region and people from you know Arkansas should be routed to another region then it could be geo proximity",
    "start": "3774550",
    "end": "3783190"
  },
  {
    "text": "based policy you don't care which state people belong to just calculate the geographical distance and based on that",
    "start": "3783190",
    "end": "3789250"
  },
  {
    "text": "do the routing the next one is latency based routing okay latency based routing",
    "start": "3789250",
    "end": "3794650"
  },
  {
    "text": "allows you to pick a region for a given user based on latency so say for example",
    "start": "3794650",
    "end": "3800260"
  },
  {
    "text": "if you are a streaming service you could always make sure that people land up in a region which is the closest to them",
    "start": "3800260",
    "end": "3806080"
  },
  {
    "text": "with latency wise and last is multi-value answering policy which I will not speak much about for now so I",
    "start": "3806080",
    "end": "3813550"
  },
  {
    "text": "have a question for you which of these policies you will use for multi region",
    "start": "3813550",
    "end": "3818860"
  },
  {
    "text": "architecture which is the best policy is it Joe proximity is it geolocation is it",
    "start": "3818860",
    "end": "3823930"
  },
  {
    "text": "latency based or you should have like static rules what is the best policy",
    "start": "3823930",
    "end": "3830970"
  },
  {
    "text": "okay so one answer you can never be wrong with is it depends right so every",
    "start": "3831030",
    "end": "3838630"
  },
  {
    "text": "customer is going to have a different scenario sometimes geolocation is going make sense sometimes the content is",
    "start": "3838630",
    "end": "3845740"
  },
  {
    "text": "going to be jury stricted right so you want to make sure that people from a certain part can see the content",
    "start": "3845740",
    "end": "3852640"
  },
  {
    "text": "and certain part can't see the content for whatever requirements so your scenarios are going to be extremely",
    "start": "3852640",
    "end": "3857800"
  },
  {
    "text": "varied okay so people typically want to have a combination of all these rules a",
    "start": "3857800",
    "end": "3863380"
  },
  {
    "text": "cocktail right can you do that okay so",
    "start": "3863380",
    "end": "3868540"
  },
  {
    "text": "the nice thing is yeah the answer is going to be yes because I'm asking that question and it reflects positively on",
    "start": "3868540",
    "end": "3874720"
  },
  {
    "text": "us so the answer is yes of course and you get this very elegant beautiful",
    "start": "3874720",
    "end": "3881550"
  },
  {
    "text": "graphical design to design your policies if this do that if this do that okay and",
    "start": "3881550",
    "end": "3888630"
  },
  {
    "text": "you can't just define very simple policies but you can also define much",
    "start": "3888630",
    "end": "3894190"
  },
  {
    "text": "more complex policies let me jump to the next slide okay so here there is a much",
    "start": "3894190",
    "end": "3900910"
  },
  {
    "text": "more complex policy so there is a failover rule under that failover rule there is a geolocation rule under that",
    "start": "3900910",
    "end": "3906490"
  },
  {
    "text": "rule there is a again failover rule and like that you can have a hierarchy rules right first of all oh this policy if",
    "start": "3906490",
    "end": "3913630"
  },
  {
    "text": "that policy is not appropriate for whatever reason then follow this policy and so on so route 53 in my you know",
    "start": "3913630",
    "end": "3923440"
  },
  {
    "text": "research is probably the most indispensable tool that you have when",
    "start": "3923440",
    "end": "3930849"
  },
  {
    "text": "you are going to implement multi-region architecture pretty neat I love it so",
    "start": "3930849",
    "end": "3937530"
  },
  {
    "text": "now we saw how we like segregate the traffic right let us now take a look at",
    "start": "3937530",
    "end": "3944440"
  },
  {
    "text": "some other operational things how do you do cross region code deployment so as",
    "start": "3944440",
    "end": "3952329"
  },
  {
    "text": "Darian spoke in detail right you should either do blue green deployment right",
    "start": "3952329",
    "end": "3958540"
  },
  {
    "text": "create another environment or make sure that it is working fine and switch all the traffic over to it or then you could",
    "start": "3958540",
    "end": "3966220"
  },
  {
    "text": "base your approach on canary principles where you have a new version and rather than switching over all the",
    "start": "3966220",
    "end": "3973780"
  },
  {
    "text": "traffic to that new version of your application you switch 1% user then 2 percent than 3",
    "start": "3973780",
    "end": "3979640"
  },
  {
    "text": "percent and so on so these techniques you are going to follow in multi-region world as well right but you will have to",
    "start": "3979640",
    "end": "3987680"
  },
  {
    "text": "do it at two places right but it is not generally nice to do deployments at two",
    "start": "3987680",
    "end": "3995480"
  },
  {
    "text": "region at one place because if you do something wrong both regions are going",
    "start": "3995480",
    "end": "4001060"
  },
  {
    "text": "to be unavailable all at once and what is then benefit of having multi-region architecture right so never do",
    "start": "4001060",
    "end": "4009040"
  },
  {
    "text": "simultaneous deployments to both the regions you should always do one region at a time deployments that is bad second",
    "start": "4009040",
    "end": "4017350"
  },
  {
    "text": "is good okay now how do you do it in terms of AWS services so we have",
    "start": "4017350",
    "end": "4024250"
  },
  {
    "text": "published this very nice solution which is ready to use you can spin it up as a CloudFormation template and it is very",
    "start": "4024250",
    "end": "4030490"
  },
  {
    "text": "well explained on that link this deck is going to be shared so in this system we",
    "start": "4030490",
    "end": "4038470"
  },
  {
    "text": "see that code is placed in an s3 bucket in region a there is a whole pipeline",
    "start": "4038470",
    "end": "4044380"
  },
  {
    "text": "service from AWS that gets triggered it does the deployment testing and",
    "start": "4044380",
    "end": "4049390"
  },
  {
    "text": "everything whether you are doing blue green deployment canary deployment whatever and once it is done it invokes",
    "start": "4049390",
    "end": "4055960"
  },
  {
    "text": "a lambda function which copies the code to you know second region basically it",
    "start": "4055960",
    "end": "4063250"
  },
  {
    "text": "places it in a certain place from there using cross region s3 copy the or gets",
    "start": "4063250",
    "end": "4069820"
  },
  {
    "text": "copied to the other region then the moment it arrives in the other region",
    "start": "4069820",
    "end": "4075360"
  },
  {
    "text": "you know s3 sends out notification when new files arrive if you configure it to the core pipeline get triggered in the",
    "start": "4075360",
    "end": "4082660"
  },
  {
    "text": "second region it does canary deep lament Bluegreen deployment whatever you like in the second region and if all things",
    "start": "4082660",
    "end": "4089050"
  },
  {
    "text": "look good in the second region it works in the third region it's pretty cool very easy to do it please do take a look",
    "start": "4089050",
    "end": "4095500"
  },
  {
    "text": "at this blog as well as the CloudFormation template now this is very",
    "start": "4095500",
    "end": "4102549"
  },
  {
    "text": "important parameter localization so this is a rolled brace practice that people",
    "start": "4102550",
    "end": "4108029"
  },
  {
    "text": "always ignore the don't hardcore things in your code right so you should have a philosophy of",
    "start": "4108030",
    "end": "4115369"
  },
  {
    "text": "storing parameters outside because you're owed ideally is going to be the same even in multi region world you want",
    "start": "4115369",
    "end": "4122900"
  },
  {
    "text": "to deploy the same code in one region and the other your parameters are going to change based on the location so you",
    "start": "4122900",
    "end": "4129830"
  },
  {
    "text": "should have some kind of a parameter DB where applications can query their parameters from and then you should have",
    "start": "4129830",
    "end": "4135409"
  },
  {
    "text": "a need to ID to allow you to configure that parameter DB so either you can do",
    "start": "4135409",
    "end": "4141258"
  },
  {
    "text": "this all by yourself or there are some customers who are kind enough to share",
    "start": "4141259",
    "end": "4146540"
  },
  {
    "text": "their solutions like you can take a look at this open source product from Netflix called as Arceus which helps you do that",
    "start": "4146540",
    "end": "4153440"
  },
  {
    "text": "right why reinvent the wheel whenever heal is available now cross",
    "start": "4153440",
    "end": "4161088"
  },
  {
    "text": "region monitoring we routed the traffic we ensure the code deployments are happening properly but now we want to",
    "start": "4161089",
    "end": "4168798"
  },
  {
    "text": "you know keep monitoring it how do we do that so first of all let us ponder how",
    "start": "4168799",
    "end": "4177290"
  },
  {
    "text": "multi-region you know monitoring is going to be different from a single region so first of all you are going to",
    "start": "4177290",
    "end": "4184310"
  },
  {
    "text": "be required to monitor few more things one of the most important thing is replication lag you need to know exactly",
    "start": "4184310",
    "end": "4191238"
  },
  {
    "text": "how much you know data is yet to be replicated and you need to know the",
    "start": "4191239",
    "end": "4197179"
  },
  {
    "text": "record offset basically how many records are yet to be copied so that you fully know the state of your system right you",
    "start": "4197179",
    "end": "4203420"
  },
  {
    "text": "can't live without knowing these things ok but last but not least you want to",
    "start": "4203420",
    "end": "4210110"
  },
  {
    "text": "have a single monitoring system which helps you see what is going on in both the regions so you can compare and",
    "start": "4210110",
    "end": "4217159"
  },
  {
    "text": "contrast and take decisions yeah so let us take a deeper look into each of these",
    "start": "4217159",
    "end": "4224960"
  },
  {
    "text": "aspects so replication log if you are using AWS services like RDS and all it",
    "start": "4224960",
    "end": "4231500"
  },
  {
    "text": "is directly available in cloud watch so your life is easy if you are using something like s3 file replication which",
    "start": "4231500",
    "end": "4238070"
  },
  {
    "text": "automatically replicates fire from one side to the other at this time you will have to develop",
    "start": "4238070",
    "end": "4243150"
  },
  {
    "text": "simple custom solution so s3 whenever a file is added to it sends out the SNS notification right and when the file",
    "start": "4243150",
    "end": "4250320"
  },
  {
    "text": "gets right written to the other side also it sends out notification so in this solution what you are basically",
    "start": "4250320",
    "end": "4255449"
  },
  {
    "text": "going to do is you are going to observe all those SNS notification based on that you know you know things like ten files",
    "start": "4255449",
    "end": "4262260"
  },
  {
    "text": "were returned to region a I received ten notifications but I received only eight notifications from the other region so",
    "start": "4262260",
    "end": "4269250"
  },
  {
    "text": "probably two files are yet to be copied that simple map you can implement using this system it may look like it is",
    "start": "4269250",
    "end": "4276989"
  },
  {
    "text": "having multiple blocks and difficult to implement implement but as always there is a cloud formation template to do this",
    "start": "4276989",
    "end": "4282810"
  },
  {
    "text": "just follow this blog you will know how to do it it is very easy to setup and monitor it in a server list fashion okay",
    "start": "4282810",
    "end": "4291090"
  },
  {
    "text": "so taking it a little further if you want to monitor you are now applications",
    "start": "4291090",
    "end": "4296340"
  },
  {
    "text": "what are what is what are the tools and techniques that you have at your hand so we see these days that Amazon Elastic",
    "start": "4296340",
    "end": "4303570"
  },
  {
    "text": "search has become one of the most popular ways to monitor your logs right so so many sources can forward of the",
    "start": "4303570",
    "end": "4310560"
  },
  {
    "text": "logs to it right you can have a cloud watch agent running on the server which can forward the logs by a lambda then",
    "start": "4310560",
    "end": "4318690"
  },
  {
    "text": "there are other services that generate logs like VPC which server is talking to each server which ports are being used in that communication so all these logs",
    "start": "4318690",
    "end": "4326010"
  },
  {
    "text": "can also be forwarded to elasticsearch through this path okay then there are",
    "start": "4326010",
    "end": "4331350"
  },
  {
    "text": "still more services like s3 ELB CloudFront that provide you logs to monitor so these are various paths that",
    "start": "4331350",
    "end": "4340800"
  },
  {
    "text": "lead you to elastic search then there are still more services that make your",
    "start": "4340800",
    "end": "4346860"
  },
  {
    "text": "life further easier by reporting you various things again you can get all this data into elastic search and if you",
    "start": "4346860",
    "end": "4353159"
  },
  {
    "text": "are writing some applications and you want to monitor the custom matrices also like the number of purchases that happen",
    "start": "4353159",
    "end": "4359790"
  },
  {
    "text": "and things like that you can have a REST API client that can directly post to elastic search so you can also monitor",
    "start": "4359790",
    "end": "4365850"
  },
  {
    "text": "business transactions there and this is one of my most favorite right you can",
    "start": "4365850",
    "end": "4371670"
  },
  {
    "text": "install a Kinesis agent on the server you keep on writing logs locally you",
    "start": "4371670",
    "end": "4376679"
  },
  {
    "text": "don't worry about shipping the logs right this Canisius agent which is a very reliable component which works extremely efficiently will",
    "start": "4376679",
    "end": "4383830"
  },
  {
    "text": "keep a watch on your log files pick up all those records and post them to firehose in a very reliable way and",
    "start": "4383830",
    "end": "4390310"
  },
  {
    "text": "firewalls in a very efficient manner we load them to elasticsearch so this is all arsenal",
    "start": "4390310",
    "end": "4397000"
  },
  {
    "text": "that you will need and you have at your disposal to build a very efficient monitoring system yeah and last but not",
    "start": "4397000",
    "end": "4405400"
  },
  {
    "text": "least elasticsearch can be deployed across multiple Easy's so it works in a",
    "start": "4405400",
    "end": "4410530"
  },
  {
    "text": "very reliable way because your monitoring systems by itself should be highly available so you have to again",
    "start": "4410530",
    "end": "4418960"
  },
  {
    "text": "apply the principles of data classification even to your logs okay the principle that Darien spoke about",
    "start": "4418960",
    "end": "4425469"
  },
  {
    "text": "all data is not created equal similarly all metrics are not created equal there are going to be some high level",
    "start": "4425469",
    "end": "4431110"
  },
  {
    "text": "metrics like user experience metrics user count metrics transaction count how much business happen what is the",
    "start": "4431110",
    "end": "4437800"
  },
  {
    "text": "replication status of your databases so these are very critical elements okay and then there are some low level",
    "start": "4437800",
    "end": "4444219"
  },
  {
    "text": "matrices such that HTTP request count really versus write throughput cache hit",
    "start": "4444219",
    "end": "4449500"
  },
  {
    "text": "vs cache miss rate so all metrics are not simple some matrix is higher impact",
    "start": "4449500",
    "end": "4455320"
  },
  {
    "text": "or you want to monitor is much more closely right and some matrix is just too much so what we recommend you is",
    "start": "4455320",
    "end": "4464500"
  },
  {
    "text": "that low level matrices be monitored using local systems and high level",
    "start": "4464500",
    "end": "4469780"
  },
  {
    "text": "matrices also be monitored using local system in the other region also you do the same thing right but what you do in",
    "start": "4469780",
    "end": "4476199"
  },
  {
    "text": "addition for high level metrics is you send them to the other region as well",
    "start": "4476199",
    "end": "4482908"
  },
  {
    "text": "right so should region a become unavailable all those high level",
    "start": "4483000",
    "end": "4489760"
  },
  {
    "text": "matrices which are much more important matrices they're also available to you in region B just ship those matrices",
    "start": "4489760",
    "end": "4498100"
  },
  {
    "text": "with region tags and you know you'll be fine so this also reduces the cross",
    "start": "4498100",
    "end": "4506110"
  },
  {
    "text": "region traffic because high level matrices are low in volume whereas low level metrics",
    "start": "4506110",
    "end": "4511210"
  },
  {
    "text": "which are like HTTP logs they're high in volume you don't want to shipping you don't want to be shipping everything to",
    "start": "4511210",
    "end": "4516489"
  },
  {
    "text": "everywhere okay this is the last part there are some",
    "start": "4516489",
    "end": "4522219"
  },
  {
    "text": "open source projects which are contributed by other organizations that I personally feel you should take a look",
    "start": "4522219",
    "end": "4529000"
  },
  {
    "text": "at one of them or rather two of them are jewel and if must I don't know what is",
    "start": "4529000",
    "end": "4535719"
  },
  {
    "text": "the right way to pronounce it so what these products basically do is sometimes",
    "start": "4535719",
    "end": "4541180"
  },
  {
    "text": "what happens is your users because of whatever region they end up in a wrong",
    "start": "4541180",
    "end": "4546910"
  },
  {
    "text": "region so the user who was supposed to go to us west he lands up in u.s. East",
    "start": "4546910",
    "end": "4552930"
  },
  {
    "text": "okay so these projects under such operations they allow you to route the",
    "start": "4552930",
    "end": "4559450"
  },
  {
    "text": "users request internally to the other region where it should have gone in the first place and they also help you in",
    "start": "4559450",
    "end": "4567700"
  },
  {
    "text": "the failover scenarios so it's beyond the scope of this article to this",
    "start": "4567700",
    "end": "4573130"
  },
  {
    "text": "session to go in more details of those products I highly recommend you take articles by Netflix on that there one",
    "start": "4573130",
    "end": "4580810"
  },
  {
    "text": "more product which I like from Netflix it's called as Eevee cache so if you want to keep your caches servers also in",
    "start": "4580810",
    "end": "4587200"
  },
  {
    "text": "both the regions in sync Eevee cache can do it for you it can make sure that it writes to cache of both the regions so",
    "start": "4587200",
    "end": "4594070"
  },
  {
    "text": "that you have the cache also in the you know almost the same state so being open",
    "start": "4594070",
    "end": "4600430"
  },
  {
    "text": "source they're available for you to use please do take a look at them so now the conclusion you can leave in a",
    "start": "4600430",
    "end": "4607600"
  },
  {
    "text": "couple of minutes avoid synchronous replication and",
    "start": "4607600",
    "end": "4612660"
  },
  {
    "text": "simultaneous deployments as much as possible okay synchronous replication cannot be",
    "start": "4612660",
    "end": "4617920"
  },
  {
    "text": "avoided in certain rare cases but simultaneous deployment should be",
    "start": "4617920",
    "end": "4623040"
  },
  {
    "text": "avoided all the time okay design applications for idempotency and",
    "start": "4623040",
    "end": "4628630"
  },
  {
    "text": "eventual consistency what that means is even if data is written twice right it doesn't corrupt your system or if there",
    "start": "4628630",
    "end": "4635800"
  },
  {
    "text": "is some lag for data to arrive in the other region the application still is not bothered and it continues to",
    "start": "4635800",
    "end": "4641650"
  },
  {
    "text": "function closely monitor your replication drags and synchronization delays how push buttons",
    "start": "4641650",
    "end": "4648050"
  },
  {
    "text": "ready to switch the traffic so for whatever reason you believe that you can't handle Texas traffic in West Coast and you want",
    "start": "4648050",
    "end": "4654860"
  },
  {
    "text": "to route it to the east coast you should have a push button or a script ready to do it because it might involve multiple",
    "start": "4654860",
    "end": "4660800"
  },
  {
    "text": "operations like changing making some route 53 API calls changing the",
    "start": "4660800",
    "end": "4666140"
  },
  {
    "text": "direction of replication data traffic and all that so you should have push buttons ready should you wish to do such",
    "start": "4666140",
    "end": "4671840"
  },
  {
    "text": "failures the next one is make your high level metrics monitoring systems also",
    "start": "4671840",
    "end": "4677240"
  },
  {
    "text": "multi-region otherwise if a region becomes inaccessible you completely lose",
    "start": "4677240",
    "end": "4683140"
  },
  {
    "text": "history or track of what happened in that region okay so these are too many",
    "start": "4683140",
    "end": "4690050"
  },
  {
    "text": "details because of which we went 15 minutes overtime so it is definitely an involved exercise even when you go to",
    "start": "4690050",
    "end": "4696950"
  },
  {
    "text": "implement it so yeah it requires a lot of careful planning but we have services",
    "start": "4696950",
    "end": "4702890"
  },
  {
    "text": "like VPC peering cross region dynamic global tables ideas replication s3",
    "start": "4702890",
    "end": "4709550"
  },
  {
    "text": "replication route 53 for you know traffic routing so these things help you",
    "start": "4709550",
    "end": "4715100"
  },
  {
    "text": "achieve the goal of a multi region deployment which are unavoidable if you have a global streaming business or",
    "start": "4715100",
    "end": "4720980"
  },
  {
    "text": "global ride-sharing business there are many new scenarios which requires this",
    "start": "4720980",
    "end": "4726230"
  },
  {
    "text": "architecture to be implemented and we make your life as easy as possible last",
    "start": "4726230",
    "end": "4731570"
  },
  {
    "text": "slide I promise okay so while it is very complex exercise and it requires a lot",
    "start": "4731570",
    "end": "4739460"
  },
  {
    "text": "of planning and thought it can be",
    "start": "4739460",
    "end": "4744730"
  },
  {
    "text": "performing ly beneficial if you have users which are spread across the globe and you cannot tolerate much downtime",
    "start": "4744730",
    "end": "4752870"
  },
  {
    "text": "right so you should definitely consider that if your business case justifies it and if you think your business is of",
    "start": "4752870",
    "end": "4760640"
  },
  {
    "text": "this type consider designing applications for multi region active active from day one okay but as we say",
    "start": "4760640",
    "end": "4771110"
  },
  {
    "text": "in Amazon today's day one thank you [Applause]",
    "start": "4771110",
    "end": "4781219"
  }
]