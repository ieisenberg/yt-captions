[
  {
    "text": "all right thanks everybody uh for coming today I really appreciate it uh my name is Nate Slater I'm a solution architect",
    "start": "1640",
    "end": "7399"
  },
  {
    "text": "at Amazon web services I work uh in the San Francisco uh bay area and uh today",
    "start": "7399",
    "end": "12639"
  },
  {
    "text": "I'm really happy uh to introduce uh Co deep from Expedia who is going to be",
    "start": "12639",
    "end": "17720"
  },
  {
    "text": "talking about how Expedia has uh delivered microservices using uh the ECS",
    "start": "17720",
    "end": "23640"
  },
  {
    "text": "service and with that I'll turn it over thanks Nate",
    "start": "23640",
    "end": "28960"
  },
  {
    "text": "um",
    "start": "28960",
    "end": "31960"
  },
  {
    "text": "um hi everyone I'm Kul Chan I'm a principal engineer at xedia I'm work in",
    "start": "36120",
    "end": "41920"
  },
  {
    "text": "the cloud platform team predominantly in xedia I've have been working in the cloud space for about four years now uh",
    "start": "41920",
    "end": "50480"
  },
  {
    "text": "prior to working at xedia I worked at Shell Oil and Gas and before that I was at Microsoft as well um I'm here to talk",
    "start": "50480",
    "end": "57079"
  },
  {
    "text": "about two things one how do we enable teams to go and deploy to uh AWS uh we",
    "start": "57079",
    "end": "62600"
  },
  {
    "text": "built a platform as a service internal tool that's a wrapper around um how",
    "start": "62600",
    "end": "68600"
  },
  {
    "text": "things how people can provision the boxes in AWS and then how how they can go and",
    "start": "68600",
    "end": "73880"
  },
  {
    "text": "deploy uh my talk is this like the tool can do so many other things right than",
    "start": "73880",
    "end": "81000"
  },
  {
    "text": "uh just ECS my focus of this particular talk is is uh around ECS so the second",
    "start": "81000",
    "end": "87960"
  },
  {
    "text": "thing that I'm going to talk about is how we actually manage the uh clusters the ECS",
    "start": "87960",
    "end": "94079"
  },
  {
    "text": "clusters um with that as I said I'm from Expedia um xedia is one of the world's",
    "start": "94079",
    "end": "100720"
  },
  {
    "text": "largest travel companies and if you don't know what xedia is I'm pretty sure most of you already know um you are",
    "start": "100720",
    "end": "108000"
  },
  {
    "text": "missing out on a lot of deals and travel packages um um so as you can see it's it's a big",
    "start": "108000",
    "end": "115479"
  },
  {
    "text": "brand we do have a lot of uh travel uh sites under the same uh",
    "start": "115479",
    "end": "121840"
  },
  {
    "text": "um and uh we we are about we have about more than 100 points of sale across 60",
    "start": "122320",
    "end": "128280"
  },
  {
    "text": "different countries so that's how big our uh site is and we are passionate",
    "start": "128280",
    "end": "134879"
  },
  {
    "text": "about travel and we want to make sure all of our customers and partners also have a a great travel",
    "start": "134879",
    "end": "142440"
  },
  {
    "text": "experience with that I I wanted to show how our current AWS uh infrastructure",
    "start": "142440",
    "end": "149200"
  },
  {
    "text": "looks like um so we do have our own data centers um so you can see mostly it is in uh us uh",
    "start": "149200",
    "end": "158560"
  },
  {
    "text": "but we do our we our presence is across the globe right now uh not everything",
    "start": "158560",
    "end": "163680"
  },
  {
    "text": "but there are few pieces of our site that's deployed across different regions",
    "start": "163680",
    "end": "169159"
  },
  {
    "text": "and that arrows are just to do a representation that it's a mesh Network",
    "start": "169159",
    "end": "174599"
  },
  {
    "text": "that everything connects to each other and everything also connects back to our data center um that we have in us um we",
    "start": "174599",
    "end": "182519"
  },
  {
    "text": "do use a lot of AWS services but I'm going to focus on primarily ECS load",
    "start": "182519",
    "end": "188720"
  },
  {
    "text": "balancers and a little bit Route",
    "start": "188720",
    "end": "193080"
  },
  {
    "text": "53 so as I mentioned about ECS we are running ECS in production we have more",
    "start": "195879",
    "end": "201440"
  },
  {
    "text": "than 200 uh microservices that are running in AWS this is just our production cluster uh",
    "start": "201440",
    "end": "210040"
  },
  {
    "text": "uh visualization U so one of the tools that you can see there is a link in the bottom we we buil this tool called as C3",
    "start": "210040",
    "end": "216760"
  },
  {
    "text": "ws and we upload we open source open sourced it uh it it can be used for any",
    "start": "216760",
    "end": "223480"
  },
  {
    "text": "of the ECS clusters out there and we do use it a lot to see how our clusters are",
    "start": "223480",
    "end": "230879"
  },
  {
    "text": "performing um so you can see that it's",
    "start": "230879",
    "end": "235599"
  },
  {
    "text": "a yeah we have about five different regions where we run our clusters and",
    "start": "235920",
    "end": "242280"
  },
  {
    "text": "this is only some of them um that's the reason you don't see all the 200 microservices that I mentioned we are",
    "start": "242280",
    "end": "248040"
  },
  {
    "text": "our clusters are across different regions as well uh we do have different environments we have our test",
    "start": "248040",
    "end": "253159"
  },
  {
    "text": "environment we have our uh different production environments and then we have our like a staging environment as well",
    "start": "253159",
    "end": "260199"
  },
  {
    "text": "so ECS is used widely this is just showing our production",
    "start": "260199",
    "end": "266280"
  },
  {
    "text": "usage so as I mentioned I'm I was I'm going to talk about what we built for teams to go and deploy to AWS uh our",
    "start": "268440",
    "end": "276520"
  },
  {
    "text": "journey started close to 4 years uh ago when we wanted to go and see try to see",
    "start": "276520",
    "end": "282800"
  },
  {
    "text": "if we can deploy to AWS of our services that we have and we picked one service",
    "start": "282800",
    "end": "288000"
  },
  {
    "text": "one of our services um that was also a brand new service that was picked and then we invested into Chef uh to do our",
    "start": "288000",
    "end": "296680"
  },
  {
    "text": "uh uh deployment Automation and then we treated everything that we deployed as infrastructure as a code so there are a",
    "start": "296680",
    "end": "302759"
  },
  {
    "text": "lot of APs that Amazon provides you right so we we Define our subnets what subnets to use what security groups to",
    "start": "302759",
    "end": "308919"
  },
  {
    "text": "use and then and then we also do auto scaling uh with with traditional cloud",
    "start": "308919",
    "end": "315120"
  },
  {
    "text": "formation uh Stacks as well and for that also we we have configuration uh",
    "start": "315120",
    "end": "320639"
  },
  {
    "text": "information to say um how many instances do you want as the minimum how many do",
    "start": "320639",
    "end": "326000"
  },
  {
    "text": "you want as maximum um so we we build a lot of tools across this last 3 years um",
    "start": "326000",
    "end": "332560"
  },
  {
    "text": "so it has evolved over a period and then uh by 2015 sorry 2014 of uh May",
    "start": "332560",
    "end": "339479"
  },
  {
    "text": "2014 we had only like 12 microservices if you will uh deployed to production uh",
    "start": "339479",
    "end": "345840"
  },
  {
    "text": "because there were so many things that teams have to do before they can start deploying into AWS one to use our",
    "start": "345840",
    "end": "353199"
  },
  {
    "text": "internal microservice architecture so we have lot of libraries that we build for teams to use so they have to use those",
    "start": "353199",
    "end": "359680"
  },
  {
    "text": "those like basically understand how to wire them up then write a chef cookbook write all these files that I mentioned",
    "start": "359680",
    "end": "365759"
  },
  {
    "text": "like the infrastructure config file and then the deployment config file and once those two are there then",
    "start": "365759",
    "end": "372280"
  },
  {
    "text": "they have to check it in and then uh figure out basically we we do we did had",
    "start": "372280",
    "end": "378160"
  },
  {
    "text": "automation uh to create one instance or a stack but it was not Autos scaling enabled and all all this St so there was",
    "start": "378160",
    "end": "385800"
  },
  {
    "text": "a a barrier to entry right so there are people needs to do some work but it is the same work that everyone has to do",
    "start": "385800",
    "end": "392440"
  },
  {
    "text": "it's nothing different there are few things that are different of course uh but most of those things that I talked",
    "start": "392440",
    "end": "397720"
  },
  {
    "text": "are almost the same so what we did in uh 2014 we built a tool called as primer uh",
    "start": "397720",
    "end": "404280"
  },
  {
    "text": "we called as primer internally um it's a tool that bootstraps all these things that I mentioned right now for teams to",
    "start": "404280",
    "end": "411039"
  },
  {
    "text": "go and deploy to AWS all they have to go is basically go and enter few things",
    "start": "411039",
    "end": "416520"
  },
  {
    "text": "saying I I'll actually I have a demo as well I'm going to do a live demo uh is to go",
    "start": "416520",
    "end": "422120"
  },
  {
    "text": "and enter few details tell what is the app the micros service name and then",
    "start": "422120",
    "end": "427680"
  },
  {
    "text": "some of their contact details like what is the app team name uh where do I send hip chat notifications to what email to",
    "start": "427680",
    "end": "434240"
  },
  {
    "text": "send notifications um uh it does few things but we started only with um what do you",
    "start": "434240",
    "end": "441440"
  },
  {
    "text": "call Spring MVC Tomcat based applications that's what we started",
    "start": "441440",
    "end": "446520"
  },
  {
    "text": "right now we have about 26 different types of templates uh that have been built around them all an as a open",
    "start": "446520",
    "end": "453840"
  },
  {
    "text": "source model there is nothing that there is not one team that controls who who can build these templates teams can make",
    "start": "453840",
    "end": "459840"
  },
  {
    "text": "those change issue a pull request and then those gets uh available in",
    "start": "459840",
    "end": "465039"
  },
  {
    "text": "primer um again the same thing as I mentioned there are different types that we support um this is internal dashboard",
    "start": "465039",
    "end": "470639"
  },
  {
    "text": "that we are building uh to to have these information available um it's it's in a",
    "start": "470639",
    "end": "475960"
  },
  {
    "text": "transition mode I'll show the existing one but this is the new one that we are building uh to go a little bit into the",
    "start": "475960",
    "end": "483240"
  },
  {
    "text": "primer architecture um as I mentioned someone goes to a web page says hey I I",
    "start": "483240",
    "end": "488639"
  },
  {
    "text": "want a new app right and then the app goes and creates a GitHub repo we use",
    "start": "488639",
    "end": "495280"
  },
  {
    "text": "GitHub Enterprise which is behind our firewall and then um and then there is a",
    "start": "495280",
    "end": "500919"
  },
  {
    "text": "template project that we use like let's as I said tomcat has a template project",
    "start": "500919",
    "end": "506039"
  },
  {
    "text": "spring board has a template project drop visard has a template project and then once we do that we create a Docker file",
    "start": "506039",
    "end": "513080"
  },
  {
    "text": "for them once generating the template uh reper create the docker file and then",
    "start": "513080",
    "end": "518320"
  },
  {
    "text": "check them in and we use Jenkins for our cicd so what we do is automatically create them two different jobs um",
    "start": "518320",
    "end": "525720"
  },
  {
    "text": "earlier they has they had to contact someone to say hey can you create me a job or there was a self-service portal",
    "start": "525720",
    "end": "532040"
  },
  {
    "text": "as well but most of the times it is the same thing that people have to do it's nothing different either run M clean",
    "start": "532040",
    "end": "538320"
  },
  {
    "text": "install or if it is knowde it is npm install um so those that's also",
    "start": "538320",
    "end": "544760"
  },
  {
    "text": "automated for them and then we we use plun for our log management we automatically create them uh configs um",
    "start": "544760",
    "end": "552560"
  },
  {
    "text": "like the whatever is the input conf that you need to use what what log file to look for so that's also done for them",
    "start": "552560",
    "end": "558600"
  },
  {
    "text": "for free and then we push our metrics to graphite uh we use grafana uh for",
    "start": "558600",
    "end": "564519"
  },
  {
    "text": "visualization so we automatically create them there are few libraries that have",
    "start": "564519",
    "end": "569839"
  },
  {
    "text": "been built um to send the let's say for Java right send all the jmx counters",
    "start": "569839",
    "end": "575600"
  },
  {
    "text": "automatically to uh to graphite and then the notifications we use hip chat a lot",
    "start": "575600",
    "end": "581680"
  },
  {
    "text": "of course email is still there um there there are some teams who use slack as",
    "start": "581680",
    "end": "587839"
  },
  {
    "text": "well um so this is this is what primer the first part was creation of the app",
    "start": "587839",
    "end": "593640"
  },
  {
    "text": "right someone went to a page they created a app that's what they they got a g report right now so typically what",
    "start": "593640",
    "end": "600920"
  },
  {
    "text": "happens is after you enter within 7 Minutes uh close to you get an email saying that hey uh your app is ready for",
    "start": "600920",
    "end": "609320"
  },
  {
    "text": "development so basically you can clone the repo locally and start making your changes so this is what happens after",
    "start": "609320",
    "end": "614560"
  },
  {
    "text": "the fact right like you make a change in your repo you push it to GitHub again once you push it back then we have",
    "start": "614560",
    "end": "621480"
  },
  {
    "text": "a we use the GitHub web hooks there is a GitHub webbook that triggers the job um",
    "start": "621480",
    "end": "626880"
  },
  {
    "text": "then we create a we use the docker U sorry uh Jenkins plugin for Docker build",
    "start": "626880",
    "end": "632480"
  },
  {
    "text": "um nothing fancy there there was some issues with that plugin we issued pool request as well to do retrice uh but the",
    "start": "632480",
    "end": "640079"
  },
  {
    "text": "basic Docker plug-in out there use that to do a to build the docker image and then push it to a private registry that",
    "start": "640079",
    "end": "647519"
  },
  {
    "text": "we have um and then um that calls another job which actually goes and",
    "start": "647519",
    "end": "653639"
  },
  {
    "text": "deploys all of our the philosophy most of these jobs are the same job that",
    "start": "653639",
    "end": "659880"
  },
  {
    "text": "everyone uses in Jenkins for deployment there nothing not not everyone has a different deploy job right those are all",
    "start": "659880",
    "end": "666680"
  },
  {
    "text": "controlled by parameters it just you tell what version you want to deploy you",
    "start": "666680",
    "end": "671800"
  },
  {
    "text": "tell the app name and then what region you want to go and deploy and then the deploy job takes care of it and on top",
    "start": "671800",
    "end": "678240"
  },
  {
    "text": "of ECS we wrote Our Own Ruby scripts so that's basically that is calling a ruby uh script that say wrapper around ECS so",
    "start": "678240",
    "end": "686120"
  },
  {
    "text": "it goes and creates task definitions in ECS it creates a service in ECS it",
    "start": "686120",
    "end": "691760"
  },
  {
    "text": "creates a load balancer and then it it says how many tasks you want and then it wires up all of them um and we heavily",
    "start": "691760",
    "end": "699839"
  },
  {
    "text": "use uh Route 53 so most every app gets a Route 53 C name when it gets created and",
    "start": "699839",
    "end": "706800"
  },
  {
    "text": "then um the way that we send different notifications is and and we we follow we",
    "start": "706800",
    "end": "712360"
  },
  {
    "text": "have been following this serverless architecture for a while now so when when the deploy happens that",
    "start": "712360",
    "end": "717760"
  },
  {
    "text": "ruis script actually sends a notific ification to SNS uh saying that we actually send multiple multiple",
    "start": "717760",
    "end": "723959"
  },
  {
    "text": "notifications not just sending a a a deploy succeeded or something succeeded",
    "start": "723959",
    "end": "730040"
  },
  {
    "text": "we actually send every individual piece as well someday you could do something",
    "start": "730040",
    "end": "736040"
  },
  {
    "text": "with it right uh so we have lambdas which are listening on that SNS topic and they they look for different types",
    "start": "736040",
    "end": "743519"
  },
  {
    "text": "of events that we sent so one of them being here sending it to email so that it sends to email there is a Lambda",
    "start": "743519",
    "end": "750279"
  },
  {
    "text": "that's listening for hip chat so it sends it and do we we we have another tool I'll will save it for another",
    "start": "750279",
    "end": "757160"
  },
  {
    "text": "presentation that actually gathers all these metrics and shows how many deploys did we do uh over a period of time there",
    "start": "757160",
    "end": "764399"
  },
  {
    "text": "are a lot of other uh details that it shows but this is very high level this is what our ECS platform does um and as",
    "start": "764399",
    "end": "773519"
  },
  {
    "text": "I mentioned earlier right uh we have our own registry this is the docker trusted registry we hosted it in AWS and then",
    "start": "773519",
    "end": "782279"
  },
  {
    "text": "um when I walk through the demo I will uh this will come into picture but we we",
    "start": "782279",
    "end": "787600"
  },
  {
    "text": "have the there is a structure that we follow the same thing right like you have a node Docker",
    "start": "787600",
    "end": "793959"
  },
  {
    "text": "image that you have and then you define what you want to Define so we created base Docker images for each type of app",
    "start": "793959",
    "end": "801000"
  },
  {
    "text": "type it says spring boot has one nodejs has one so and so um actually maybe this",
    "start": "801000",
    "end": "808360"
  },
  {
    "text": "one right so this is a simple nodejs one that we built right this is the Bas",
    "start": "808360",
    "end": "813519"
  },
  {
    "text": "Docker image that everyone uses at least all the nodejs apps the first one as you can see it is just getting it from the",
    "start": "813519",
    "end": "820120"
  },
  {
    "text": "open source uh node uh 6.2.1 and then we add uh few things to",
    "start": "820120",
    "end": "828519"
  },
  {
    "text": "it like you can see Dum in it and and most of our deployment uh yeah and and every Docker image has",
    "start": "828519",
    "end": "837120"
  },
  {
    "text": "its own uh type of docker image has its own entrypoint.sh file",
    "start": "837120",
    "end": "842320"
  },
  {
    "text": "which says how to run it for if it is Java it has a Java like Java command line I always know it has an npm command",
    "start": "842320",
    "end": "850040"
  },
  {
    "text": "or forever command with that I'll switch to a demo mode and hope that the demo goes fine",
    "start": "850040",
    "end": "857959"
  },
  {
    "text": "let's say still on",
    "start": "857959",
    "end": "865240"
  },
  {
    "text": "network",
    "start": "868040",
    "end": "871040"
  },
  {
    "text": "so I went to the portal the very first thing that I get is asking me what is the app name I'm just going to put AWS",
    "start": "876600",
    "end": "883240"
  },
  {
    "text": "Summit here um team name we call it as Stratus our internal Cloud engineering",
    "start": "883240",
    "end": "890680"
  },
  {
    "text": "team um going to put my email I'll leave it as default there is",
    "start": "890680",
    "end": "897199"
  },
  {
    "text": "a default room where it is going it is an option optional field and then this is where as I mentioned these are the different types of template types that",
    "start": "897199",
    "end": "903720"
  },
  {
    "text": "we support as you can see the list goes on and is a new type that gets added uh",
    "start": "903720",
    "end": "910199"
  },
  {
    "text": "I'm going to do the uh first one the web MVC and as we are transitioning from a",
    "start": "910199",
    "end": "915480"
  },
  {
    "text": "cloud formation uh uh deployments to Docker there are a lot of things that",
    "start": "915480",
    "end": "921320"
  },
  {
    "text": "teams have to understand how Docker works right like it's not always that you have a resource to go and figure out",
    "start": "921320",
    "end": "927959"
  },
  {
    "text": "um what's what's going wrong with it and what not so we when someone selects a",
    "start": "927959",
    "end": "933560"
  },
  {
    "text": "type of primer app that's supported by ECS uh we give them a page where they",
    "start": "933560",
    "end": "940639"
  },
  {
    "text": "can go and uh look for Docker guidelines basically um it it talks about what is",
    "start": "940639",
    "end": "945959"
  },
  {
    "text": "uh like basically scaling your application horizontally um so there are few guidelines that we put",
    "start": "945959",
    "end": "952759"
  },
  {
    "text": "together and this is all for internal tracking uh tracking",
    "start": "952759",
    "end": "957920"
  },
  {
    "text": "um this is to visualize um who is spending",
    "start": "957920",
    "end": "963279"
  },
  {
    "text": "what um inside the company so that's all it",
    "start": "963279",
    "end": "968199"
  },
  {
    "text": "is okay so yeah it's going to take about 7",
    "start": "974399",
    "end": "979759"
  },
  {
    "text": "Minutes in the meantime I'll walk through few things that uh wanted to",
    "start": "979759",
    "end": "985600"
  },
  {
    "text": "show so as you can see the repo doesn't exist",
    "start": "987920",
    "end": "993839"
  },
  {
    "text": "at this point because primer hasn't gotten at that point to create the primary repo it is just again plain",
    "start": "993839",
    "end": "1001360"
  },
  {
    "text": "plain old Jenkins here",
    "start": "1001360",
    "end": "1005399"
  },
  {
    "text": "um and this is the one that I mentioned earlier about the tool um so which which",
    "start": "1009240",
    "end": "1014319"
  },
  {
    "text": "is open source people can uh look at it uh and you can use it for your ECS",
    "start": "1014319",
    "end": "1019880"
  },
  {
    "text": "cluster management okay when I want it to be faster it's",
    "start": "1019880",
    "end": "1027000"
  },
  {
    "text": "not",
    "start": "1027000",
    "end": "1030000"
  },
  {
    "text": "okay so most of our Chef cookbooks and all these AWS infrastructure that we have is in public GitHub uh which is",
    "start": "1035000",
    "end": "1042240"
  },
  {
    "text": "again a private report that we have but everything else all our source code everything it actually gets it actually",
    "start": "1042240",
    "end": "1048120"
  },
  {
    "text": "resides inside uh our",
    "start": "1048120",
    "end": "1052360"
  },
  {
    "text": "firewall so as I mentioned we create a file for every type of app that gets created and we do it today with like per",
    "start": "1059520",
    "end": "1067120"
  },
  {
    "text": "per Zone as well and and you can see there is this particular file that talks about few things like what subnet to use",
    "start": "1067120",
    "end": "1073760"
  },
  {
    "text": "and uh different types of instance types again this is not that much relevant in",
    "start": "1073760",
    "end": "1079000"
  },
  {
    "text": "a Docker infrastructure right so Docker I don't have a concept of a subnet I don't have a concept of um uh security",
    "start": "1079000",
    "end": "1086520"
  },
  {
    "text": "groups that's at the cluster manager level um I'll log into my AWS",
    "start": "1086520",
    "end": "1093000"
  },
  {
    "text": "portal so primer already created the repo by now again it's it's empty there",
    "start": "1098600",
    "end": "1104480"
  },
  {
    "text": "isn't much anything in it by the time it completes the creation it will have more stuff there uh and I'll just log in this",
    "start": "1104480",
    "end": "1112960"
  },
  {
    "text": "in the meantime as I mentioned earlier we have our own repo where we create all these",
    "start": "1112960",
    "end": "1119720"
  },
  {
    "text": "base Docker images for example the one that I showed you earlier was uh nodejs",
    "start": "1119720",
    "end": "1125960"
  },
  {
    "text": "one um and and you can see that this one basically uh talks about the same file",
    "start": "1125960",
    "end": "1134080"
  },
  {
    "text": "that I showed you right but for an application when you see for an application that's using",
    "start": "1134080",
    "end": "1139960"
  },
  {
    "text": "this",
    "start": "1139960",
    "end": "1142720"
  },
  {
    "text": "um all they have is just one line here right there isn't much anything here",
    "start": "1147480",
    "end": "1153400"
  },
  {
    "text": "apart from this one line because they don't have to again create uh like",
    "start": "1153400",
    "end": "1159799"
  },
  {
    "text": "download from node or do uh Dum in it into it or run forever we automatically",
    "start": "1159799",
    "end": "1165799"
  },
  {
    "text": "take care of it for them if people want to override this they are more than happy to overwrite but they don't have",
    "start": "1165799",
    "end": "1171159"
  },
  {
    "text": "to typically um so similarly we have for",
    "start": "1171159",
    "end": "1176320"
  },
  {
    "text": "different types of app that we support again not every type that we support through uh primer currently has that",
    "start": "1176320",
    "end": "1182880"
  },
  {
    "text": "support um but there are few that we do today okay let me refresh",
    "start": "1182880",
    "end": "1190159"
  },
  {
    "text": "this yeah so you can see that it's creating these files so let's go back",
    "start": "1190159",
    "end": "1195320"
  },
  {
    "text": "here um so as I mentioned we we",
    "start": "1195320",
    "end": "1200639"
  },
  {
    "text": "something is not done okay it hasn't checked in yet so",
    "start": "1205960",
    "end": "1211440"
  },
  {
    "text": "that's",
    "start": "1211440",
    "end": "1213720"
  },
  {
    "text": "why we should have started this",
    "start": "1220440",
    "end": "1224879"
  },
  {
    "text": "before",
    "start": "1227640",
    "end": "1230640"
  },
  {
    "text": "so as we go to ECS um that I mentioned earlier this is our test",
    "start": "1233280",
    "end": "1240320"
  },
  {
    "text": "environment a test environment predominantly is in organ and as you can see there are there are different",
    "start": "1242720",
    "end": "1248440"
  },
  {
    "text": "clusters that we are running and and the biggest one being the test one here",
    "start": "1248440",
    "end": "1253799"
  },
  {
    "text": "where we have about 37 actually e ECS host running behind the scenes",
    "start": "1253799",
    "end": "1259240"
  },
  {
    "text": "and we do have about what 400 task running under it right so there looks",
    "start": "1259240",
    "end": "1265120"
  },
  {
    "text": "like there is a deployment that's happening at this point good that's the reason it shows as one pending task um",
    "start": "1265120",
    "end": "1272000"
  },
  {
    "text": "let's see if I can come back to",
    "start": "1272000",
    "end": "1275559"
  },
  {
    "text": "my right so this this is where it creates some of the infrastructure that we need saying how many number of",
    "start": "1278840",
    "end": "1285919"
  },
  {
    "text": "instances do you want uh what is the min minimum what is the maximum what regions can we go and deploy our uh ECS",
    "start": "1285919",
    "end": "1294440"
  },
  {
    "text": "uh task to be so this is this test environment so you will see usually one zone but all our production deployments",
    "start": "1294440",
    "end": "1301480"
  },
  {
    "text": "are multi- a it's like not one a they just a test",
    "start": "1301480",
    "end": "1307080"
  },
  {
    "text": "environment and think I had",
    "start": "1307080",
    "end": "1313840"
  },
  {
    "text": "these so this as I mentioned earlier right this is what we use for sending our notification",
    "start": "1314000",
    "end": "1319640"
  },
  {
    "text": "um how many of you have already used uh ECS um if you are already familiar with",
    "start": "1319640",
    "end": "1326520"
  },
  {
    "text": "it you can you are you might be you might know this by default you don't have to provide how much CPU you want",
    "start": "1326520",
    "end": "1333400"
  },
  {
    "text": "how much memory you want but most of the times what happens is if you don't do it",
    "start": "1333400",
    "end": "1339880"
  },
  {
    "text": "you get whatever is left on the box but when you have 20 containers running on the box and some let's say someone some",
    "start": "1339880",
    "end": "1346919"
  },
  {
    "text": "service uses all the the CPU so all the other containers get affected so what we",
    "start": "1346919",
    "end": "1353080"
  },
  {
    "text": "do is every app that gets created by default micro service um it gets half",
    "start": "1353080",
    "end": "1359840"
  },
  {
    "text": "CPU and then 1.5 GB of memory and what",
    "start": "1359840",
    "end": "1364960"
  },
  {
    "text": "we do here is this is some someone said hey I I don't want the defaults but I do",
    "start": "1364960",
    "end": "1370039"
  },
  {
    "text": "want something else so this is what this app particular app needs uh but that",
    "start": "1370039",
    "end": "1375120"
  },
  {
    "text": "that's how people can customize what they really want and if I switch",
    "start": "1375120",
    "end": "1383039"
  },
  {
    "text": "back yeah as you can see this is all done for the application so I'll come",
    "start": "1392840",
    "end": "1398679"
  },
  {
    "text": "back to this later once the app gets created and everything is deployed um but in the meantime I will go over the",
    "start": "1398679",
    "end": "1405039"
  },
  {
    "text": "docker um the cluster management uh how we actually do cluster management with",
    "start": "1405039",
    "end": "1410440"
  },
  {
    "text": "ECS and what are the issues that we ran into",
    "start": "1410440",
    "end": "1416000"
  },
  {
    "text": "um so this is how our base image looks like for the docker ECS host that I",
    "start": "1418200",
    "end": "1425559"
  },
  {
    "text": "showed you earlier right those were 37 of those so this is basically what gets",
    "start": "1425559",
    "end": "1431080"
  },
  {
    "text": "added so you have a uh Amazon base Ami",
    "start": "1431080",
    "end": "1436120"
  },
  {
    "text": "that's ECS optimized and then on",
    "start": "1436120",
    "end": "1440440"
  },
  {
    "text": "[Music]",
    "start": "1541470",
    "end": "1544559"
  },
  {
    "text": "and then uh there was some config information that I mentioned earlier right let's say",
    "start": "1559679",
    "end": "1564919"
  },
  {
    "text": "um I I change some OS hardening script let's say like there's some other setting that I need to do um we used to",
    "start": "1564919",
    "end": "1572000"
  },
  {
    "text": "use user data um on the actual instance then we used to apply",
    "start": "1572000",
    "end": "1578000"
  },
  {
    "text": "that so it's all good when you want to do an update on this uh",
    "start": "1578000",
    "end": "1583720"
  },
  {
    "text": "so what updating this actually does it it goes and updates let's say there are 20 box it goes and updates all 20 at",
    "start": "1583720",
    "end": "1590039"
  },
  {
    "text": "once it doesn't do one box at a time so we ran into some issues uh with that",
    "start": "1590039",
    "end": "1595320"
  },
  {
    "text": "approach um I'll talk about that when I talk about the Lessons Learned but this is the current approach that we do today",
    "start": "1595320",
    "end": "1602440"
  },
  {
    "text": "uh for our zero downtime instance replacement so let's say a new ECS Ami",
    "start": "1602440",
    "end": "1608200"
  },
  {
    "text": "comes out or or something that we need to upgrade right like there is or at least there is ECS uh new a Ami or an",
    "start": "1608200",
    "end": "1617480"
  },
  {
    "text": "agent or something else that a Docker version as well so this is how this tack actually",
    "start": "1617480",
    "end": "1623279"
  },
  {
    "text": "looks like uh when when we are aboveo to do this so the very first thing that",
    "start": "1623279",
    "end": "1628320"
  },
  {
    "text": "happens and what we do with this is we don't we no longer do an update the",
    "start": "1628320",
    "end": "1633760"
  },
  {
    "text": "update concept has been totally taken out we just do a replace instance there's always a new instance that comes",
    "start": "1633760",
    "end": "1639320"
  },
  {
    "text": "out even for a small user data change as well so a new instance comes",
    "start": "1639320",
    "end": "1647320"
  },
  {
    "text": "online and then e autoscaling groups looks uh",
    "start": "1647320",
    "end": "1653440"
  },
  {
    "text": "starts terminating that instance right so what we do is we we use uh AWS Lambda",
    "start": "1653440",
    "end": "1659520"
  },
  {
    "text": "and then issue we change something on the autoscaling group to say do it wait",
    "start": "1659520",
    "end": "1664559"
  },
  {
    "text": "wait on the terminating state so it's basically terminate waiting rather than actually terminating so it actually",
    "start": "1664559",
    "end": "1670760"
  },
  {
    "text": "Waits until 30 minutes before it gets terminated what it does for us is it",
    "start": "1670760",
    "end": "1676039"
  },
  {
    "text": "allows the uh and and after doing that we actually issue a command to ECS",
    "start": "1676039",
    "end": "1682600"
  },
  {
    "text": "saying that this instance deregister it from uh ECS once we do that we as I said",
    "start": "1682600",
    "end": "1689760"
  },
  {
    "text": "we wait 30 minutes so 30 minutes is a lot of time um I'll explain why 30",
    "start": "1689760",
    "end": "1694799"
  },
  {
    "text": "minutes is a lot of time but this gives us the option to for ECS to move those task to a different instance right it's",
    "start": "1694799",
    "end": "1702919"
  },
  {
    "text": "not guaranteed that th that task will go onto the new instance that we created it it could be any of the other remaining",
    "start": "1702919",
    "end": "1709640"
  },
  {
    "text": "task so as you can see example here it goes to the second two uh the third and",
    "start": "1709640",
    "end": "1715919"
  },
  {
    "text": "fourth one and then the new instance comes same approach right the next the",
    "start": "1715919",
    "end": "1721120"
  },
  {
    "text": "the old instance gets terminated and then the the task may get onto all of",
    "start": "1721120",
    "end": "1726200"
  },
  {
    "text": "them get onto the new one and they can go into the old one as well so this cycle repeats right so we slowly repeat",
    "start": "1726200",
    "end": "1733399"
  },
  {
    "text": "this and then there's a new instance that's coming up and then again it's",
    "start": "1733399",
    "end": "1738919"
  },
  {
    "text": "uh sending those updates same process goes on right",
    "start": "1738919",
    "end": "1747120"
  },
  {
    "text": "so at this point we have all the tasks that have been moved onto the new one so the old one is still there the old",
    "start": "1747120",
    "end": "1754480"
  },
  {
    "text": "instances are there but the task have been already been moved away so once then we slowly start",
    "start": "1754480",
    "end": "1762559"
  },
  {
    "text": "terminating the instances actually and then slowly all are uh uh Stacks",
    "start": "1762559",
    "end": "1770840"
  },
  {
    "text": "more right there are downsides right we have to wait 30 minutes for a cluster",
    "start": "1771200",
    "end": "1776919"
  },
  {
    "text": "upgrade to happen but uh this saves us with our production outage we had a",
    "start": "1776919",
    "end": "1781960"
  },
  {
    "text": "production outage running e doing an update to our cluster uh ECS cluster uh",
    "start": "1781960",
    "end": "1787559"
  },
  {
    "text": "upgrade uh we about like 5 minutes down time for our applications and we want to avoid that when we do this cluster",
    "start": "1787559",
    "end": "1793760"
  },
  {
    "text": "upgrade again ECS takes care of running the cluster for you right for you don't",
    "start": "1793760",
    "end": "1799120"
  },
  {
    "text": "have to do anything Amazon will take care of you but there is always an operational cost associated with running",
    "start": "1799120",
    "end": "1805720"
  },
  {
    "text": "these things that is where we have we are investing a lot of our time to figure out how we do upgrades and",
    "start": "1805720",
    "end": "1811760"
  },
  {
    "text": "whatnot um like the master and the slave workers all that stuff Amazon takes care but this is where you you manage the",
    "start": "1811760",
    "end": "1818960"
  },
  {
    "text": "your cluster itself um and then how we detect the broken instances right uh",
    "start": "1818960",
    "end": "1825320"
  },
  {
    "text": "there have been uh issues for for us where we had either uh Docker timing out",
    "start": "1825320",
    "end": "1834039"
  },
  {
    "text": "when we do a Docker PS or Docker was not able to even pull up images from uh the",
    "start": "1834039",
    "end": "1840200"
  },
  {
    "text": "registry that I showed earlier there there were multiple reasons for it but we also want to do it",
    "start": "1840200",
    "end": "1847279"
  },
  {
    "text": "as a proactive monitoring rather than being reactive so what we do um again",
    "start": "1847279",
    "end": "1852640"
  },
  {
    "text": "it's not fully automated yet but this is where we we basically uh pump we we look",
    "start": "1852640",
    "end": "1859559"
  },
  {
    "text": "for these uh commands that I mentioned here Docker images and Docker uh PS and",
    "start": "1859559",
    "end": "1865559"
  },
  {
    "text": "then we send that data to cloudwatch and then using cloudwatch we create an alarm and then that alarm sends we we get an",
    "start": "1865559",
    "end": "1871919"
  },
  {
    "text": "email uh to our uh to our team and I think we also look for if ECS agent is",
    "start": "1871919",
    "end": "1878480"
  },
  {
    "text": "running once that email comes right now uh we have a script that we run um next",
    "start": "1878480",
    "end": "1884000"
  },
  {
    "text": "step is to fully automate it uh we we look at it and if it is a known issue that we already know and if if there is",
    "start": "1884000",
    "end": "1890360"
  },
  {
    "text": "a small fix that we can do we do it if not uh we actually run the script evict",
    "start": "1890360",
    "end": "1895760"
  },
  {
    "text": "instance basically it is taking out from autoscaling group using the same concept that I mentioned earlier is Lambda but",
    "start": "1895760",
    "end": "1902840"
  },
  {
    "text": "we run it from our local laptops and then that takes care of it uh how do we analyze cluster wide",
    "start": "1902840",
    "end": "1910080"
  },
  {
    "text": "issues again there are logs on the disk uh that cloud formation generates that ECS generates we we pipe them into",
    "start": "1910080",
    "end": "1916799"
  },
  {
    "text": "Splunk so we use spunk heavily um and as you can see uh and then we can query for",
    "start": "1916799",
    "end": "1922919"
  },
  {
    "text": "different states whatever state this is where it couldn't transition for some reason but you you get the feeling right",
    "start": "1922919",
    "end": "1929440"
  },
  {
    "text": "like you you can query for anything that you want that is generated part of the log um the actual ECS host instances",
    "start": "1929440",
    "end": "1938200"
  },
  {
    "text": "that I showed earlier um they also they scale up and down right now I mean the auto scaling",
    "start": "1938200",
    "end": "1944919"
  },
  {
    "text": "support at the task level was introduced only recently in ECS but this is at the",
    "start": "1944919",
    "end": "1949960"
  },
  {
    "text": "host level so we scale up based on the CPU reservations and as I mentioned",
    "start": "1949960",
    "end": "1955399"
  },
  {
    "text": "earlier we actually Reserve every app a particular CPU a particular memory U we",
    "start": "1955399",
    "end": "1961519"
  },
  {
    "text": "can't we we don't create any task definition without anything reserved so",
    "start": "1961519",
    "end": "1966639"
  },
  {
    "text": "we already know how much we are going to use so we scale up and scale down there are some some downsides that we had with",
    "start": "1966639",
    "end": "1973360"
  },
  {
    "text": "this this R condition uh when we are doing scale down um I'll talk about about it uh when I talk about the",
    "start": "1973360",
    "end": "1979760"
  },
  {
    "text": "Lessons Learned but we we scale most of the time",
    "start": "1979760",
    "end": "1986360"
  },
  {
    "text": "at the memory because most of the times apps uh go very high on asking they want",
    "start": "1986360",
    "end": "1991760"
  },
  {
    "text": "more memory than more CPU um I we use C3 4 extra large as our",
    "start": "1991760",
    "end": "1998320"
  },
  {
    "text": "base instance type um we found that it has the right balance between the CPU",
    "start": "1998320",
    "end": "2004279"
  },
  {
    "text": "and memory and was also cost effective so that's the instance type that we use",
    "start": "2004279",
    "end": "2009559"
  },
  {
    "text": "uh for most of our uh ECS host so I talked about how we do these",
    "start": "2009559",
    "end": "2015080"
  },
  {
    "text": "things but now I'm wanted to mention what did we learn with with the how we",
    "start": "2015080",
    "end": "2021200"
  },
  {
    "text": "were using ECS um as I mentioned Docker uh see cloud formation and autoscaling",
    "start": "2021200",
    "end": "2026600"
  },
  {
    "text": "group are two different Services they are not the same service right like you you issue a update cloud formation can",
    "start": "2026600",
    "end": "2034000"
  },
  {
    "text": "go and update all the instances that are behind that uh the the back or you can",
    "start": "2034000",
    "end": "2039760"
  },
  {
    "text": "run cloud formation and then Auto scaling is doing something else so there is not a lot of con uh communication",
    "start": "2039760",
    "end": "2046799"
  },
  {
    "text": "between them uh there is but there are few things that still missing um here when the first one as I",
    "start": "2046799",
    "end": "2053599"
  },
  {
    "text": "mentioned use immutable servers with cloud formation uh earlier we used to do an update of the existing instance um",
    "start": "2053599",
    "end": "2061280"
  },
  {
    "text": "think version uh maybe 6 months ago or maybe 4 months ago there was a new",
    "start": "2061280",
    "end": "2067000"
  },
  {
    "text": "version of ECS image that came out uh that attached a EBS volume uh so there",
    "start": "2067000",
    "end": "2073878"
  },
  {
    "text": "were two EBS volumes rather than being one EBS volume and the docker was the",
    "start": "2073879",
    "end": "2079760"
  },
  {
    "text": "change was to have that Docker run on the second EBS volume than on the first one so we typically went ahead and doing",
    "start": "2079760",
    "end": "2086040"
  },
  {
    "text": "a Docker uh the cloud formation update uh what happened was as as I mentioned",
    "start": "2086040",
    "end": "2091320"
  },
  {
    "text": "it runs across the board so it it changed it updated it across the board",
    "start": "2091320",
    "end": "2096839"
  },
  {
    "text": "but with the change that was introduced with this ECS Ami update it means that there is a downtime",
    "start": "2096839",
    "end": "2103440"
  },
  {
    "text": "Associated when it is doing an update so we all across the cluster we were down",
    "start": "2103440",
    "end": "2108839"
  },
  {
    "text": "so it was about 5 minutes before we uh recovered so that's the reason we changed it completely there is no more",
    "start": "2108839",
    "end": "2114960"
  },
  {
    "text": "an update even for a small change we just do an uh replace",
    "start": "2114960",
    "end": "2120640"
  },
  {
    "text": "instance um actually uh the other one uh is so as you are already aware we we",
    "start": "2120640",
    "end": "2128520"
  },
  {
    "text": "mentioned cloud formation and Autos scaling group go hand in hand for us um",
    "start": "2128520",
    "end": "2135320"
  },
  {
    "text": "there was a about I think four or five months ago was multi a support that was added to ECS and we started to enable",
    "start": "2135320",
    "end": "2142560"
  },
  {
    "text": "that at our Autos scaling group level for our uh for actual instances as well",
    "start": "2142560",
    "end": "2148560"
  },
  {
    "text": "because at that point we were just doing one but later on as this say was also supporting multi-az we started to",
    "start": "2148560",
    "end": "2154359"
  },
  {
    "text": "support multi-az at our container instances as as well so as autoc scaling",
    "start": "2154359",
    "end": "2160000"
  },
  {
    "text": "saw that there was two A's that it needs to go and operate on uh it tried to go",
    "start": "2160000",
    "end": "2166520"
  },
  {
    "text": "and spin up the new boxes on the new azs and try to rebalance it uh cloud",
    "start": "2166520",
    "end": "2171760"
  },
  {
    "text": "formation update policy did not have something uh the a rebalance um so what happened was Auto",
    "start": "2171760",
    "end": "2179720"
  },
  {
    "text": "scaling just timed out because sorry cloud formation just timed out because it was uh it was taking more time for",
    "start": "2179720",
    "end": "2185599"
  },
  {
    "text": "auto scaling to spin up new boxes on the new a and then rebalance it um so which",
    "start": "2185599",
    "end": "2193280"
  },
  {
    "text": "basically caused an uh so cloud formation went back into a roll back mode and then it uh then we had to talk",
    "start": "2193280",
    "end": "2201240"
  },
  {
    "text": "to the AWS support to understand what happened and then we went back so what we do is um when we do a cloud formation",
    "start": "2201240",
    "end": "2208520"
  },
  {
    "text": "update make sure you understand all the policies that you want as the update policy there is an update policy that",
    "start": "2208520",
    "end": "2214640"
  },
  {
    "text": "you can Define when you do a cloud formation update uh what we did in this particular case was to do",
    "start": "2214640",
    "end": "2220599"
  },
  {
    "text": "a we we basically suspend cloud formation whenever it is doing a AZ",
    "start": "2220599",
    "end": "2225760"
  },
  {
    "text": "rebalance so that way cloud formation is actually literally waiting until Autos",
    "start": "2225760",
    "end": "2231079"
  },
  {
    "text": "scaling says hey I'm done with my AZ rebalance or even the uh cloud formation",
    "start": "2231079",
    "end": "2236960"
  },
  {
    "text": "saying I'm done so that's what we did and the other one was the scaling down",
    "start": "2236960",
    "end": "2242200"
  },
  {
    "text": "um as I mentioned earlier we we we scale up very efficiently uh but most of the",
    "start": "2242200",
    "end": "2247880"
  },
  {
    "text": "what happens is we scale up too fast and someone asked more memory but the scale",
    "start": "2247880",
    "end": "2254240"
  },
  {
    "text": "down policy said if the CP is less then you also scale down so what happened was",
    "start": "2254240",
    "end": "2259680"
  },
  {
    "text": "we scaled up on we on one hand but we scaled down as well on the other hand because of the CPU so be very careful on",
    "start": "2259680",
    "end": "2267359"
  },
  {
    "text": "what type of policies that you define most of the times it could be an an situation rather than an our",
    "start": "2267359",
    "end": "2274319"
  },
  {
    "text": "situation and I think the other one one that I'm this is the uh ones that I had what we",
    "start": "2274400",
    "end": "2280960"
  },
  {
    "text": "are planning to add at the cluster management level uh is to basically add autoscaling support at the task level we",
    "start": "2280960",
    "end": "2287720"
  },
  {
    "text": "don't have it at this point uh we we will we are planning to add that soon to our Automation and then instead of",
    "start": "2287720",
    "end": "2294440"
  },
  {
    "text": "spinning one instance at a time you can actually spin up let's say if there are six clust instances in the cluster um",
    "start": "2294440",
    "end": "2302440"
  },
  {
    "text": "you basically go and create six different uh six more instances and then",
    "start": "2302440",
    "end": "2308280"
  },
  {
    "text": "update make deregister the existing one so that all of them move to the new cluster and then you can delete them at",
    "start": "2308280",
    "end": "2313920"
  },
  {
    "text": "once so that's something that we are planning to do and ECS doesn't have a",
    "start": "2313920",
    "end": "2320040"
  },
  {
    "text": "concept of a profile so you have a ec2 instance as a small large medium extra",
    "start": "2320040",
    "end": "2326280"
  },
  {
    "text": "large right uh because most of the times as I showed earlier there was a different CPU it's a different memory",
    "start": "2326280",
    "end": "2331839"
  },
  {
    "text": "that people can Define but we are planning to support actually like a workload profile so that our team",
    "start": "2331839",
    "end": "2338160"
  },
  {
    "text": "microservice can tell us how much what type they want whether it's a medium large and we determine where to place",
    "start": "2338160",
    "end": "2345319"
  },
  {
    "text": "them so we could have a different cluster for different workload profiles so that everyone doesn't have to work in",
    "start": "2345319",
    "end": "2351119"
  },
  {
    "text": "the same profile so the same cluster that we have um and again make right now",
    "start": "2351119",
    "end": "2357200"
  },
  {
    "text": "we are not at a point where we can treat clusters as cattle right some amount of",
    "start": "2357200",
    "end": "2363000"
  },
  {
    "text": "uh effort that we are putting and they are waiting so we basically we want to be place where we can just delete the",
    "start": "2363000",
    "end": "2369760"
  },
  {
    "text": "whole cluster and be still be able to run our infrastructure so with this I'll go back",
    "start": "2369760",
    "end": "2375640"
  },
  {
    "text": "to My Demo uh presentation hopefully",
    "start": "2375640",
    "end": "2380440"
  },
  {
    "text": "completed right so as I mentioned earlier uh it created a job for the same service uh and not only it created a job",
    "start": "2388839",
    "end": "2396359"
  },
  {
    "text": "it actually created a Docker image and it pushed uh so it did a m clean install",
    "start": "2396359",
    "end": "2403680"
  },
  {
    "text": "basically right they have War file that was created locally and then um we did a",
    "start": "2403680",
    "end": "2409000"
  },
  {
    "text": "Docker push to our registry and uh the docker image at this point is available",
    "start": "2409000",
    "end": "2415680"
  },
  {
    "text": "uh for us to use",
    "start": "2415680",
    "end": "2420520"
  },
  {
    "text": "um right so this is the docker image that we pushed and",
    "start": "2426440",
    "end": "2433520"
  },
  {
    "text": "um and you can see the tag that was showed here as well the same",
    "start": "2433520",
    "end": "2438560"
  },
  {
    "text": "tag uh like we we follow G sha like there is there is no file that where we",
    "start": "2438560",
    "end": "2444440"
  },
  {
    "text": "put all versions gsha is our version so whatever is the gsha version that's the same version that we use and same the",
    "start": "2444440",
    "end": "2451520"
  },
  {
    "text": "561 is the same version that you can see that was pushed to uh Docker registry as well",
    "start": "2451520",
    "end": "2458240"
  },
  {
    "text": "and that's that's good now let's see if I can um so this is the job that I mentioned",
    "start": "2458240",
    "end": "2466040"
  },
  {
    "text": "so once this job completes once it is uh once it has actually pushed the image to",
    "start": "2466040",
    "end": "2472280"
  },
  {
    "text": "our Docker registry this actually also calls our deployment jobs so this is our",
    "start": "2472280",
    "end": "2479160"
  },
  {
    "text": "deployment job for our test environment um looks like it already",
    "start": "2479160",
    "end": "2485160"
  },
  {
    "text": "completed right so it took about 3 minutes you could ask me why did it take 3 minutes Docker doesn't it doesn't it",
    "start": "2485160",
    "end": "2493240"
  },
  {
    "text": "should start in like few seconds rather than taking minutes uh one of the drawbacks that I",
    "start": "2493240",
    "end": "2500520"
  },
  {
    "text": "see at least in this um uh in the cluster managers and what",
    "start": "2500520",
    "end": "2505680"
  },
  {
    "text": "not even uh is we there is no concept of a blue green deployments if you will um",
    "start": "2505680",
    "end": "2510920"
  },
  {
    "text": "where you want to deploy a new version of your service micros service be able to do some kind of a testing before you",
    "start": "2510920",
    "end": "2517640"
  },
  {
    "text": "actually make it live ECS does provide you the option to say hey I have a new version you apply that change and then",
    "start": "2517640",
    "end": "2525839"
  },
  {
    "text": "ECS will take care upgrading the uh containers to the new version the",
    "start": "2525839",
    "end": "2532520"
  },
  {
    "text": "problem is there is no way that you can actually test the new version before it actually goes what we do is we we create",
    "start": "2532520",
    "end": "2538839"
  },
  {
    "text": "a canary service so for every service that we uh maybe I'll just show it",
    "start": "2538839",
    "end": "2544920"
  },
  {
    "text": "uh so example",
    "start": "2544920",
    "end": "2549318"
  },
  {
    "text": "so this is the task definition that I created I did not write a single line of code for this one as a as a developer I",
    "start": "2550960",
    "end": "2557040"
  },
  {
    "text": "did not write anything the platform took care of it for them right so it created this and for Splunk logging uh we follow",
    "start": "2557040",
    "end": "2565319"
  },
  {
    "text": "a sidecar approach so when we create the task definition not only just we create the application related container we",
    "start": "2565319",
    "end": "2571760"
  },
  {
    "text": "also add one more to it Splunk container as well and we mount volumes from the",
    "start": "2571760",
    "end": "2578520"
  },
  {
    "text": "base container out the uh the the Splunk container so that Splunk can forward the",
    "start": "2578520",
    "end": "2583640"
  },
  {
    "text": "logs to the indexers that we have um if I go back all right so the same thing as",
    "start": "2583640",
    "end": "2590680"
  },
  {
    "text": "I mentioned so our automation went ahead",
    "start": "2590680",
    "end": "2596839"
  },
  {
    "text": "and uh happened",
    "start": "2596839",
    "end": "2601400"
  },
  {
    "text": "here",
    "start": "2606240",
    "end": "2609240"
  },
  {
    "text": "I have to search but anyways um so the app got deployed so something I'm",
    "start": "2615079",
    "end": "2625040"
  },
  {
    "text": "missing",
    "start": "2636240",
    "end": "2639240"
  },
  {
    "text": "yeah so as I mentioned we create a canary stack so people can actually do some testing for them um before they",
    "start": "2641920",
    "end": "2649160"
  },
  {
    "text": "actually roll it forward so they they can always do a test and then once the test succeeds uh they can do a perform",
    "start": "2649160",
    "end": "2656480"
  },
  {
    "text": "so what we did uh about like two years ago was to actually decouple deploy and",
    "start": "2656480",
    "end": "2662160"
  },
  {
    "text": "release so you can deploy as many number of times you want in the day but you",
    "start": "2662160",
    "end": "2667319"
  },
  {
    "text": "have to do a an explicit action to say I want to take traffic so that's what we call it as release so as part of that's",
    "start": "2667319",
    "end": "2674359"
  },
  {
    "text": "where we do this our blue green deploys where the the deploy phase creates a",
    "start": "2674359",
    "end": "2679839"
  },
  {
    "text": "canary stack for them where if they have some kind of automation that they want to hit this Endo they can hit that endo",
    "start": "2679839",
    "end": "2686480"
  },
  {
    "text": "and do their testing once it works then they can do a release the release is",
    "start": "2686480",
    "end": "2691680"
  },
  {
    "text": "where it goes and actually updates the existing uh the new stack uh",
    "start": "2691680",
    "end": "2697800"
  },
  {
    "text": "right so as I mentioned it is a spring MVC app we have our internal",
    "start": "2697800",
    "end": "2703480"
  },
  {
    "text": "microservice libraries we called call them as E3 Prime this this page basically talks about how to use them",
    "start": "2703480",
    "end": "2710400"
  },
  {
    "text": "because that has been already wired in uh not sure why the endpoint actually",
    "start": "2710400",
    "end": "2715839"
  },
  {
    "text": "did not come out yeah so sometimes it does take time for us the we use heavily Route 53",
    "start": "2715839",
    "end": "2723680"
  },
  {
    "text": "sometimes it does take for the Route 53 to be propagated on ourd DS servers but as you can see this this is the same",
    "start": "2723680",
    "end": "2729640"
  },
  {
    "text": "approach and what we do after once this is done um we actually go and update uh",
    "start": "2729640",
    "end": "2737000"
  },
  {
    "text": "call an update to ECS saying this for this",
    "start": "2737000",
    "end": "2742720"
  },
  {
    "text": "service yeah looks",
    "start": "2750400",
    "end": "2754078"
  },
  {
    "text": "like",
    "start": "2756040",
    "end": "2759040"
  },
  {
    "text": "right so this is the uh service that was automatically created as well and it does talk",
    "start": "2762000",
    "end": "2768319"
  },
  {
    "text": "about uh the number of instances that it wants and the load balancer integration that we have um one of the things that I",
    "start": "2768319",
    "end": "2775119"
  },
  {
    "text": "also want to call out is uh at this point uh load balancer because of how it is a static",
    "start": "2775119",
    "end": "2783160"
  },
  {
    "text": "Port that you need to Define uh we actually maintain a list saying that this sa gets 10 ports and then we are",
    "start": "2783160",
    "end": "2789480"
  },
  {
    "text": "hoping for the U uh to do a dynamic Port uh mapping later on U but at this point",
    "start": "2789480",
    "end": "2796920"
  },
  {
    "text": "because load balancer only supports a static Port you always have to have a port that says this service is running",
    "start": "2796920",
    "end": "2804240"
  },
  {
    "text": "this port on this box and then that's what we get we expose it to the uh host",
    "start": "2804240",
    "end": "2811440"
  },
  {
    "text": "instance okay and and as I mentioned we we also send",
    "start": "2814400",
    "end": "2822040"
  },
  {
    "text": "logs to our Splunk infrastructure and uh we also send metrics to graphite",
    "start": "2822040",
    "end": "2827880"
  },
  {
    "text": "infrastructure that we have um so that that's the reason why it",
    "start": "2827880",
    "end": "2833680"
  },
  {
    "text": "takes uh it takes that that three or 4 minutes",
    "start": "2833680",
    "end": "2840240"
  },
  {
    "text": "it's not that we can't run the uh clust uh do an update in minutes right so",
    "start": "2840240",
    "end": "2847000"
  },
  {
    "text": "there there are few aspects that are involved and as you can see this is this is our job that's used heavily that",
    "start": "2847000",
    "end": "2854520"
  },
  {
    "text": "deploys all of our services um and you can see this job has been run 26,000 times um so it it's",
    "start": "2854520",
    "end": "2863640"
  },
  {
    "text": "heavily used um and it takes about 3 minutes every checkin that you make",
    "start": "2863640",
    "end": "2869160"
  },
  {
    "text": "going forward to that reer you actually uh uh get deployed so I think maybe I",
    "start": "2869160",
    "end": "2875760"
  },
  {
    "text": "just show this so this is is the repo that got created which actually has the source code right now earlier it did not",
    "start": "2875760",
    "end": "2881200"
  },
  {
    "text": "have anything now it actually has the source code and if you look the docker file it just like two lines right one",
    "start": "2881200",
    "end": "2888640"
  },
  {
    "text": "use our base Ami uh base Docker image that we created for uh Tomcat apps and",
    "start": "2888640",
    "end": "2896240"
  },
  {
    "text": "then copy the um War file to it and and we do a lot of other like onu commands",
    "start": "2896240",
    "end": "2903559"
  },
  {
    "text": "that Docker provides so there are some of the on builds that are there in the the actual Docker image as",
    "start": "2903559",
    "end": "2910559"
  },
  {
    "text": "well so I think that's all that I had um",
    "start": "2910559",
    "end": "2915800"
  },
  {
    "text": "I'm here for any questions so but that's pretty much it I'm I will be here if you",
    "start": "2915800",
    "end": "2920880"
  },
  {
    "text": "have any questions if you want to ask me around I think we do have time if you want to come and use the",
    "start": "2920880",
    "end": "2926150"
  },
  {
    "text": "[Applause] mic",
    "start": "2926150",
    "end": "2930559"
  }
]