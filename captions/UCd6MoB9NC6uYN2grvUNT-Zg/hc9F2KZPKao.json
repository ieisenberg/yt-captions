[
  {
    "text": "good alright so welcome everyone thanks for joining us for the session today",
    "start": "410",
    "end": "5850"
  },
  {
    "text": "where we're going to talk about how HubSpot got beyond four 9s availability on AWS using signal FX and specifically",
    "start": "5850",
    "end": "13679"
  },
  {
    "text": "using detectors on signal FX my name is Patrick Lin I run the product team at",
    "start": "13679",
    "end": "19109"
  },
  {
    "text": "signal FX and with me is James Moore from husband he runs the machine",
    "start": "19109",
    "end": "24539"
  },
  {
    "text": "learning team or is the tech lead for the machine learning team and also as part of the Big Data team there so what",
    "start": "24539",
    "end": "30150"
  },
  {
    "text": "we're gonna do today is do a little bit of an intro to signal effects for those of you who don't have background and who",
    "start": "30150",
    "end": "36030"
  },
  {
    "text": "we are and what we do and then I'm going to turn it over to James and he's going to talk about how they were able to use",
    "start": "36030",
    "end": "41489"
  },
  {
    "text": "signal FX to drive some predictive analytics to figure out when they were",
    "start": "41489",
    "end": "46559"
  },
  {
    "text": "gonna have a problem and then do some automated actually not remediation but actually preventative maintenance on",
    "start": "46559",
    "end": "52140"
  },
  {
    "text": "that and then we're gonna take that and say alright now that you've seen how",
    "start": "52140",
    "end": "57180"
  },
  {
    "text": "they did it HubSpot how can you do it yourself right using signal FX and using a bunch of",
    "start": "57180",
    "end": "63899"
  },
  {
    "text": "things that actually are part of the AWS portfolio alright so let's go ahead and get started so with signal effects I",
    "start": "63899",
    "end": "70740"
  },
  {
    "text": "think the background on the company is that our technical founders came out of",
    "start": "70740",
    "end": "76259"
  },
  {
    "text": "Facebook and not just any part of Facebook but the part of Facebook that built the monitoring system there right",
    "start": "76259",
    "end": "81630"
  },
  {
    "text": "now if you can imagine what that means obviously you know that meant that they",
    "start": "81630",
    "end": "86700"
  },
  {
    "text": "were able to deal with large scale right people always think that when they think Facebook you know hundreds of thousands",
    "start": "86700",
    "end": "92909"
  },
  {
    "text": "of servers trillions of data points that kind of thing right and so that is part of the heritage and part of what we do",
    "start": "92909",
    "end": "98939"
  },
  {
    "text": "at signal affects handle massive volumes of data now probably more important than",
    "start": "98939",
    "end": "104189"
  },
  {
    "text": "that though is how you can make that data useful right and useful for the large number of development teams that",
    "start": "104189",
    "end": "110820"
  },
  {
    "text": "are there who are trying to actually make sense of what's going on in their environment and so there are a few",
    "start": "110820",
    "end": "117509"
  },
  {
    "text": "things that I think we learned from their experience there at Facebook for",
    "start": "117509",
    "end": "123229"
  },
  {
    "text": "delivering monitoring into that environment so the first part is that in",
    "start": "123229",
    "end": "129929"
  },
  {
    "text": "order to provide monitoring for that kind of environment have to have the notion of self-service",
    "start": "129929",
    "end": "135400"
  },
  {
    "text": "right development teams and individual developers in an environment where they're moving fast and breaking things",
    "start": "135400",
    "end": "141640"
  },
  {
    "text": "so to speak is essentially requires that individual developers be able to say hey",
    "start": "141640",
    "end": "147790"
  },
  {
    "text": "here are the metrics that I care about for my system here's the visualization that provides me with the insight that I",
    "start": "147790",
    "end": "154060"
  },
  {
    "text": "need about it here are the kinds of patterns that I want to look for that are going to tell me when there's a problem right you can of course hand",
    "start": "154060",
    "end": "160930"
  },
  {
    "text": "that off to operations later but it's got to start from people who know what's going on and so that notion of",
    "start": "160930",
    "end": "166120"
  },
  {
    "text": "self-service is very much built into signal effects the second piece of this is that it has to be real-time right",
    "start": "166120",
    "end": "171970"
  },
  {
    "text": "when you're moving fast right a large part of that is making sure that if you make a change and say that change isn't",
    "start": "171970",
    "end": "177760"
  },
  {
    "text": "going the way you expect right then you want to be able to revert that as quickly as possible and so you need to",
    "start": "177760",
    "end": "183400"
  },
  {
    "text": "be able to see what's going on as it happens and if you want to drive automated a remediation off that for",
    "start": "183400",
    "end": "188500"
  },
  {
    "text": "example you also need to have faith in the data that's coming back quickly to you so you can make the necessary",
    "start": "188500",
    "end": "194310"
  },
  {
    "text": "corrections to it the third piece here of what they learned in that environment is that",
    "start": "194310",
    "end": "200049"
  },
  {
    "text": "monitoring essentially is an analytics problem right in that kind of scale scaled up environment and also in the",
    "start": "200049",
    "end": "206739"
  },
  {
    "text": "case where you have many services being deployed right in today's world with you",
    "start": "206739",
    "end": "212620"
  },
  {
    "text": "know the service type stuff that you see today and so on it's very rarely simply",
    "start": "212620",
    "end": "218019"
  },
  {
    "text": "a matter of saying hey you know this component failed therefore that's what I care about right oftentimes it's a",
    "start": "218019",
    "end": "223630"
  },
  {
    "text": "matter of saying you know what are the aggregates that I care about what are the patterns that I care about across",
    "start": "223630",
    "end": "228790"
  },
  {
    "text": "the horizontally scaling clusters that I have right and so scale real-time",
    "start": "228790",
    "end": "234370"
  },
  {
    "text": "self-service and analytics right those are the things that signal effects is built on and if you go into our booth",
    "start": "234370",
    "end": "241420"
  },
  {
    "text": "we'll show you how that works in the case of infrastructure and so on but today we're actually going to talk more",
    "start": "241420",
    "end": "246670"
  },
  {
    "text": "about how it's used also for infrastructure but in more of a custom use case now what we did with all",
    "start": "246670",
    "end": "254290"
  },
  {
    "text": "of that experience was build an architecture that is designed to be able",
    "start": "254290",
    "end": "259630"
  },
  {
    "text": "to scale super well and to provide streaming analytics on top of real time data right and so I'm not going to go",
    "start": "259630",
    "end": "265450"
  },
  {
    "text": "into gory detail on this slide I think the highlight here on the takeaway is really that when you think",
    "start": "265450",
    "end": "271420"
  },
  {
    "text": "about typical monitoring systems right traditional monitoring systems they take",
    "start": "271420",
    "end": "276550"
  },
  {
    "text": "in the data they persist it to some data store and then when you need it to render a chart or when you want to trigger some kind of alert it'll pull it",
    "start": "276550",
    "end": "283300"
  },
  {
    "text": "out right now that works fine until you start to get relatively large amounts of data right and things start to slow down",
    "start": "283300",
    "end": "289780"
  },
  {
    "text": "so if your monitoring system starts to run into situations where you have alerts that show up minutes after",
    "start": "289780",
    "end": "295720"
  },
  {
    "text": "something happened already right where it starts to be like hey is that a little bit too late it's likely because",
    "start": "295720",
    "end": "300790"
  },
  {
    "text": "the architecture is based on that more traditional kind of system right and so",
    "start": "300790",
    "end": "305800"
  },
  {
    "text": "in signal effects the difference is that what we do is we stream that data we do persist it of course because you want to",
    "start": "305800",
    "end": "311350"
  },
  {
    "text": "be able to use it for historical purposes but we stream it directly to the charts or the alerts that need it so",
    "start": "311350",
    "end": "317200"
  },
  {
    "text": "that they can act on these things in real time okay all right now I've been",
    "start": "317200",
    "end": "322900"
  },
  {
    "text": "talking about analytics now what do we mean when we talk about analytics at some level it's just saying hey I can",
    "start": "322900",
    "end": "329110"
  },
  {
    "text": "apply mathematical or you know statistical functions to the raw data that I get but what do I actually get",
    "start": "329110",
    "end": "334930"
  },
  {
    "text": "out of that well one of the main things that you get out of that is that it allows you to monitor the signal that",
    "start": "334930",
    "end": "341560"
  },
  {
    "text": "matters right monitor the signal rather than simply the raw data that you're getting from whatever your",
    "start": "341560",
    "end": "346990"
  },
  {
    "text": "instrumentation is sending in okay and so if I want to have an aggregate metric right so let's say instead of just",
    "start": "346990",
    "end": "352750"
  },
  {
    "text": "errors I want to look at the sum of the errors by some particular service right or if you want to have composite metrics",
    "start": "352750",
    "end": "359080"
  },
  {
    "text": "right I want to look at the ratio of cache hits to cache misses or I want to look at a derived metric I want to look",
    "start": "359080",
    "end": "364780"
  },
  {
    "text": "at the 95th percentile for the latency across this service rather than on an",
    "start": "364780",
    "end": "369970"
  },
  {
    "text": "individual note those the kinds of things that allow you to define the particular signal that you care about",
    "start": "369970",
    "end": "375220"
  },
  {
    "text": "and with analytics in signal effects not just about the signal but it's also about defining the threshold that you",
    "start": "375220",
    "end": "380830"
  },
  {
    "text": "can use right and so if you want to say things like how do I know if you know a",
    "start": "380830",
    "end": "386890"
  },
  {
    "text": "node is you know not like the others in the cluster well then that case my my",
    "start": "386890",
    "end": "393820"
  },
  {
    "text": "threshold is actually going to be defined by some aggregate metric across all the different elements right and so",
    "start": "393820",
    "end": "399580"
  },
  {
    "text": "if I can create a drive metric that I can then use as my threshold then I have a really interesting way of getting to a more",
    "start": "399580",
    "end": "405820"
  },
  {
    "text": "expressive alert something that tells me when there's actually a problem versus hey it was greater than 70 right now all",
    "start": "405820",
    "end": "413500"
  },
  {
    "text": "of this is done in a streaming fashion such that you're able to look at the data in a very interactive manner and so",
    "start": "413500",
    "end": "420820"
  },
  {
    "text": "it's very different from the older environments where you would say let me create this query let me start the job",
    "start": "420820",
    "end": "426100"
  },
  {
    "text": "and then let me go get a cup of coffee right because actually in our case it's going to be operating on that data as it",
    "start": "426100",
    "end": "432880"
  },
  {
    "text": "comes in and you're going to be able to interactively use it play with it explore it and then troubleshoot on that",
    "start": "432880",
    "end": "439900"
  },
  {
    "text": "basis right okay so there's a lot of us here in booth that don't need to tell",
    "start": "439900",
    "end": "448240"
  },
  {
    "text": "you about all the people but suffice it to say we're ready to chat and just a",
    "start": "448240",
    "end": "453880"
  },
  {
    "text": "sampling of the types of customers that are using signal effects I'm sure you recognize most of the names here and",
    "start": "453880",
    "end": "459700"
  },
  {
    "text": "with that I'm going to turn it over to James from HubSpot I'm James I work with",
    "start": "459700",
    "end": "467950"
  },
  {
    "text": "the big data team at HubSpot now a little bit about HubSpot who is HubSpot",
    "start": "467950",
    "end": "474240"
  },
  {
    "text": "we build marketing software to power the inbound marketing revolution and the",
    "start": "474240",
    "end": "480490"
  },
  {
    "text": "HubSpot big data team helps support over 50 product and engineering teams with",
    "start": "480490",
    "end": "486700"
  },
  {
    "text": "HBase as a service so each of these teams consists of a PM a designer their",
    "start": "486700",
    "end": "493990"
  },
  {
    "text": "engineering team and is designed to work independently so we don't have a traditional operations team that's",
    "start": "493990",
    "end": "500680"
  },
  {
    "text": "getting paged for every one services each service manages their own operations which makes it even more",
    "start": "500680",
    "end": "506530"
  },
  {
    "text": "important that when we provide a database as a service those teams can trust that will always work so what",
    "start": "506530",
    "end": "514990"
  },
  {
    "text": "problems are we solving HBase stores all of our customer data we have over 417",
    "start": "514990",
    "end": "522640"
  },
  {
    "text": "individual instances and 3,500 micro services interacting with that we end up",
    "start": "522640",
    "end": "527980"
  },
  {
    "text": "having to patch HBase to help support that kind of multi-tenancy because when you have that many different services",
    "start": "527980",
    "end": "534750"
  },
  {
    "text": "multiplied by thirty five thousand individual customers ranging in size from yeah a small start-up to company",
    "start": "534750",
    "end": "544030"
  },
  {
    "text": "with tens of thousands or even millions of customers the traffic patterns tend to get a little bit tricky to deal with",
    "start": "544030",
    "end": "550410"
  },
  {
    "text": "we also have to deal with consistent loss of service to impairment an AWS you",
    "start": "550410",
    "end": "558730"
  },
  {
    "text": "will see about a three and a half percent failure rate due to system impairment every month but despite that",
    "start": "558730",
    "end": "565900"
  },
  {
    "text": "we got to four nines of availability in every cluster now it's important to keep",
    "start": "565900",
    "end": "571180"
  },
  {
    "text": "in mind that no one can stop hardware from failing the keys to figure out how to predict that it's going to fail if",
    "start": "571180",
    "end": "577540"
  },
  {
    "text": "it's going to fail in a less desirable way and manage those failures when they occur and so a little bit about HBase is",
    "start": "577540",
    "end": "586680"
  },
  {
    "text": "the Hadoop database it's based off of the BigTable paper and uses a log",
    "start": "586680",
    "end": "593530"
  },
  {
    "text": "structured merge tree under the hood that generally means that we're doing a little bit of a amortisation",
    "start": "593530",
    "end": "600190"
  },
  {
    "text": "to make it so that inserts to the database are extremely fast and later on",
    "start": "600190",
    "end": "605920"
  },
  {
    "text": "we have to eat a little bit of overhead to do background compaction so what is",
    "start": "605920",
    "end": "613090"
  },
  {
    "text": "BigTable imagine I want to store a set",
    "start": "613090",
    "end": "619000"
  },
  {
    "text": "of animals and I want to track their names and locations some other properties I might come up with later",
    "start": "619000",
    "end": "626010"
  },
  {
    "text": "and I want to do this for all animals in the world well I might arrange the data",
    "start": "626010",
    "end": "632170"
  },
  {
    "text": "something like this and well this isn't an idealized table it does illustrate",
    "start": "632170",
    "end": "638380"
  },
  {
    "text": "how the data is logically set up so we have the key column family column",
    "start": "638380",
    "end": "644230"
  },
  {
    "text": "qualifier timestamp and value all of these entries are concatenated together and then sorted in byte order so if",
    "start": "644230",
    "end": "653770"
  },
  {
    "text": "these are real animals I started to gather there's Danny the aardvark in San",
    "start": "653770",
    "end": "660160"
  },
  {
    "text": "Diego and you can see that we located in a certain UNIX timestamp roughly dates",
    "start": "660160",
    "end": "666160"
  },
  {
    "text": "to about a month ago and then there's my cat rose but we don't know her current location yet and",
    "start": "666160",
    "end": "671310"
  },
  {
    "text": "that's alright because this is a columnar data format it's alright if we don't know all the columns on all the",
    "start": "671310",
    "end": "677400"
  },
  {
    "text": "records there just isn't any data there so region all of that data gets split up",
    "start": "677400",
    "end": "685320"
  },
  {
    "text": "so it can be distributed across servers and it's split up by key so if you",
    "start": "685320",
    "end": "692640"
  },
  {
    "text": "imagine I have aardvark and cat are my only two records or keys in this table then the only possible region",
    "start": "692640",
    "end": "699660"
  },
  {
    "text": "combinations I can make our aardvark and cat region one and two I do have to make",
    "start": "699660",
    "end": "705930"
  },
  {
    "text": "exclusive byte boundaries around that but if later on I ever needed to merge",
    "start": "705930",
    "end": "711960"
  },
  {
    "text": "these regions back together so I wanted one region that included both aardvark and cat I'm free to do that later on one",
    "start": "711960",
    "end": "720150"
  },
  {
    "text": "other important aspect of this is that in this data structure I can actually iterate it across all possible regions",
    "start": "720150",
    "end": "730760"
  },
  {
    "text": "and so putting that all back together to kind of come up with what does an actual",
    "start": "730850",
    "end": "736530"
  },
  {
    "text": "region server look like in practice there's two independent projects at work one is the actual region server part of",
    "start": "736530",
    "end": "743220"
  },
  {
    "text": "the HBase project and the other is HDFS part of the Hadoop project there are a few special-purpose api's that kind of",
    "start": "743220",
    "end": "750150"
  },
  {
    "text": "cut through that boundary they exist specifically for HBase is benefit in a",
    "start": "750150",
    "end": "755280"
  },
  {
    "text": "Hadoop ecosystem so that allows HBase to leverage the local data nodes when you",
    "start": "755280",
    "end": "761940"
  },
  {
    "text": "co-locate the data nodes and region servers however you're free not to do that each h-file is ran out due to that",
    "start": "761940",
    "end": "770460"
  },
  {
    "text": "log structured merge tree as we accumulate the writes in memory and then periodically flush out those aged files",
    "start": "770460",
    "end": "776520"
  },
  {
    "text": "if they sit there immutably over time until we compact and rewrite all of the data for that region one other",
    "start": "776520",
    "end": "784710"
  },
  {
    "text": "interesting note about this structure that's important to keep in mind is that because HDFS is storing the data and has",
    "start": "784710",
    "end": "790650"
  },
  {
    "text": "its own block level replication strategy every server in the cluster is actually going to have a piece of this region on",
    "start": "790650",
    "end": "796470"
  },
  {
    "text": "it we do get lucky a little bit in the the region that server that wrote the",
    "start": "796470",
    "end": "803160"
  },
  {
    "text": "records initially will have at least one block of every or at least one copy of",
    "start": "803160",
    "end": "810029"
  },
  {
    "text": "every block in that region but in the event of a failure because every server",
    "start": "810029",
    "end": "815610"
  },
  {
    "text": "in the cluster has it we can actually rear up locate all the data at about 200 to 300 gigabits per second on our larger",
    "start": "815610",
    "end": "822570"
  },
  {
    "text": "clusters because we get the bandwidth from every instance so how does this",
    "start": "822570",
    "end": "830220"
  },
  {
    "text": "look in practice when we actually have a client and it needs to retrieve some data from HBase well first needs to know",
    "start": "830220",
    "end": "838649"
  },
  {
    "text": "where the regions are and for that purpose there's a special key and zookeeper that tells it where to look",
    "start": "838649",
    "end": "845040"
  },
  {
    "text": "for a special region the meadow region which stores the locations and byte boundaries of every region in the",
    "start": "845040",
    "end": "852120"
  },
  {
    "text": "cluster from there the client can actually figure out which region server it needs to speak to to gets data and",
    "start": "852120",
    "end": "859880"
  },
  {
    "text": "can go and fetch the data the meadow region is cached very aggressively so",
    "start": "859880",
    "end": "865890"
  },
  {
    "text": "that we limit the number of back-and-forth trips through that flow because it's not the fastest flow to hit",
    "start": "865890",
    "end": "871770"
  },
  {
    "text": "zookeeper than meta and then the data that you want but it's also important to",
    "start": "871770",
    "end": "877170"
  },
  {
    "text": "keep in mind there's only ever one region server that's actually hosting this data so in the event that that",
    "start": "877170",
    "end": "882540"
  },
  {
    "text": "region server is having some trouble we're kind of out of luck there's no",
    "start": "882540",
    "end": "887970"
  },
  {
    "text": "other copy of the data to replicate or route to or no other logical copy of the",
    "start": "887970",
    "end": "895980"
  },
  {
    "text": "data so failure conditions for HBase with HBase those partial failures matter",
    "start": "895980",
    "end": "903149"
  },
  {
    "text": "a lot so in this case we had a real region server you can see it's a queue",
    "start": "903149",
    "end": "908910"
  },
  {
    "text": "time at the 99th percentile for the so the amount of time my request just sat there waiting to get allocated thread to",
    "start": "908910",
    "end": "915240"
  },
  {
    "text": "start processing spiked up to 100 in 76 seconds which since we're normally",
    "start": "915240",
    "end": "922829"
  },
  {
    "text": "optimized to be going very fast our clusters do over 10 million reads per second at peak a hundred and seventy six",
    "start": "922829",
    "end": "930089"
  },
  {
    "text": "seconds is a long time to wait and while this is only one server and it's only one server out of maybe",
    "start": "930089",
    "end": "935460"
  },
  {
    "text": "180 in our largest clusters that can still prevent the client from actually",
    "start": "935460",
    "end": "942360"
  },
  {
    "text": "fetching other data even if you apply circuit breaking to limit the blast radius of that failure then we're still",
    "start": "942360",
    "end": "949080"
  },
  {
    "text": "going to have to deal with the error conditions where there's a whole server that we can't talk to so if your client",
    "start": "949080",
    "end": "955590"
  },
  {
    "text": "requests actually need that data you're just going to get an error back so how",
    "start": "955590",
    "end": "962790"
  },
  {
    "text": "do you find these partial failures in abuse health checks are great at what they do and they will tell you if an",
    "start": "962790",
    "end": "968820"
  },
  {
    "text": "instance is actually on the network at any given time but what if the network",
    "start": "968820",
    "end": "974160"
  },
  {
    "text": "is slow or the disks are starting to fail how do we deal with those conditions for instance this chart at",
    "start": "974160",
    "end": "981510"
  },
  {
    "text": "the bottom and tracks the number of i/o errors coming out of the kernel as it talks to a disk which typically will",
    "start": "981510",
    "end": "988050"
  },
  {
    "text": "start spiking up a bit before the disk actually hard fails or just locks up if your kernel and that disk don't get",
    "start": "988050",
    "end": "995250"
  },
  {
    "text": "along very well but how about a cluster level failure so how do we know that we",
    "start": "995250",
    "end": "1001400"
  },
  {
    "text": "have the right amount of capacity in this cluster if I have a hundred and eighty servers and I want to know am i",
    "start": "1001400",
    "end": "1008660"
  },
  {
    "text": "running out of cpu resources it's very hard to figure that out from just looking at an individual chart but if I",
    "start": "1008660",
    "end": "1016130"
  },
  {
    "text": "switch to percentile views I can track the 50th percentile and the 99 and then",
    "start": "1016130",
    "end": "1022520"
  },
  {
    "text": "make a decision as to whether I'm running out of raw CPU or is my load",
    "start": "1022520",
    "end": "1027800"
  },
  {
    "text": "becoming unevenly distributed so if my nunya percentile is that say 95% but my",
    "start": "1027800",
    "end": "1035569"
  },
  {
    "text": "50th is hanging around at 30% I definitely have a load problem and similarly I can track if there's a some",
    "start": "1035570",
    "end": "1043040"
  },
  {
    "text": "set of bad requests that are just hammering random servers in the cluster I can still see that load problem in the",
    "start": "1043040",
    "end": "1048410"
  },
  {
    "text": "99th percentile even though each individual server may have only been impacted for a brief period of time and",
    "start": "1048410",
    "end": "1055120"
  },
  {
    "text": "so how do we get to nine four nines of availability it's great that we know",
    "start": "1055120",
    "end": "1062150"
  },
  {
    "text": "this information but it's very tricky to turn it into action and so how we operate at HubSpot is that",
    "start": "1062150",
    "end": "1069580"
  },
  {
    "text": "whenever we see these problems arise whenever we end up causing a crit sued",
    "start": "1069580",
    "end": "1075100"
  },
  {
    "text": "as we like to call them we tent we try and look for anything that could told us about the problem beforehand then based",
    "start": "1075100",
    "end": "1082390"
  },
  {
    "text": "on that information we can continue isolating the signal to find a more",
    "start": "1082390",
    "end": "1087540"
  },
  {
    "text": "actionable metric and then once we've finally narrowed it down to something that's right most of the time then we",
    "start": "1087540",
    "end": "1095260"
  },
  {
    "text": "can turn that into automation so that we can avoid having the problem I never",
    "start": "1095260",
    "end": "1100480"
  },
  {
    "text": "want to get page because TCP timeouts are a little bit high that would be excessive but might indicate a problem",
    "start": "1100480",
    "end": "1106930"
  },
  {
    "text": "with that host and if I have automation that can just strip that host away I can",
    "start": "1106930",
    "end": "1112150"
  },
  {
    "text": "avoid the problem and so you can see what a typical 48 hours looks like of",
    "start": "1112150",
    "end": "1120130"
  },
  {
    "text": "broken TCP sockets there are spikes the AWS network might be having a brief blip",
    "start": "1120130",
    "end": "1126100"
  },
  {
    "text": "that affected a few hosts that our application will write over because it is generally fault tolerant otherwise",
    "start": "1126100",
    "end": "1132610"
  },
  {
    "text": "maybe a client exited very abruptly or didn't close its connections properly on",
    "start": "1132610",
    "end": "1139060"
  },
  {
    "text": "shutdown so we can end up with these TCP timeouts as the socket was waiting there",
    "start": "1139060",
    "end": "1144450"
  },
  {
    "text": "hoping for someone to talk to it and never did but what about in a more",
    "start": "1144450",
    "end": "1152830"
  },
  {
    "text": "exceptional case so you can see here there are a few hosts they have some you",
    "start": "1152830",
    "end": "1159490"
  },
  {
    "text": "know consistently high behavior and you know individually if we were to look at",
    "start": "1159490",
    "end": "1166210"
  },
  {
    "text": "static threshold this wouldn't be that intriguing because if I want to over a broader window of time I'd see spikes up",
    "start": "1166210",
    "end": "1173170"
  },
  {
    "text": "to these static thresholds pretty routinely but if I go ahead and sum that",
    "start": "1173170",
    "end": "1178570"
  },
  {
    "text": "over 24 hours the signal becomes very clear that there's something wrong with it this hardware and this particular",
    "start": "1178570",
    "end": "1186430"
  },
  {
    "text": "incident actually came from a period of time where we were migrating one cluster of about a hundred servers from d2",
    "start": "1186430",
    "end": "1193240"
  },
  {
    "text": "instances to I three instances which we got a nice 2x performance boost from",
    "start": "1193240",
    "end": "1198420"
  },
  {
    "text": "which was amazing but we ran into an issue where just a",
    "start": "1198420",
    "end": "1203950"
  },
  {
    "text": "few of those instances came up and weren't doing so hot and they had high",
    "start": "1203950",
    "end": "1210039"
  },
  {
    "text": "packet loss and eventually when we looked at this after the fact we found",
    "start": "1210039",
    "end": "1215830"
  },
  {
    "text": "out that they had only had about five megabits per second of network throughput there was just something bad",
    "start": "1215830",
    "end": "1222010"
  },
  {
    "text": "about the combination of those instances and our particular karma and we did",
    "start": "1222010",
    "end": "1229690"
  },
  {
    "text": "reach out to AWS support and they were very helpful in resolving that in the long term but nevertheless I still want",
    "start": "1229690",
    "end": "1235600"
  },
  {
    "text": "to have automation that can just remove these instances because this is not",
    "start": "1235600",
    "end": "1241659"
  },
  {
    "text": "something a human would notice but computers can and so tranquility",
    "start": "1241659",
    "end": "1247919"
  },
  {
    "text": "tranquility is hub spots in house auto-scaling system manages a pool of",
    "start": "1247919",
    "end": "1253480"
  },
  {
    "text": "instances and it's been somewhat attune to the problems that can arise when you're talking about large databases for",
    "start": "1253480",
    "end": "1260020"
  },
  {
    "text": "instance I never under any circumstances want to terminate an instance if that",
    "start": "1260020",
    "end": "1265240"
  },
  {
    "text": "had the only copy of my data I will wait and hope that maybe it comes back or",
    "start": "1265240",
    "end": "1270940"
  },
  {
    "text": "anything like that I also have concurrent restrictions where if I was",
    "start": "1270940",
    "end": "1276760"
  },
  {
    "text": "to try and terminate the entire cluster at the same time there may not be new instances for the data to go to and it",
    "start": "1276760",
    "end": "1283539"
  },
  {
    "text": "may never complete similarly if the instances have scheduled maintenance",
    "start": "1283539",
    "end": "1288960"
  },
  {
    "text": "they're impaired they were ever impaired at any point in the past or if they're running an old AMI",
    "start": "1288960",
    "end": "1294880"
  },
  {
    "text": "I want to get them out of my cluster this also allows us to just seamlessly",
    "start": "1294880",
    "end": "1300070"
  },
  {
    "text": "roll database clusters which we do about once every two months where we can just",
    "start": "1300070",
    "end": "1305770"
  },
  {
    "text": "swap the instance template and all of our reagent servers will be replaced but I don't want this to happen during quiet",
    "start": "1305770",
    "end": "1311260"
  },
  {
    "text": "hours either because I have backups running and all sorts of other high load",
    "start": "1311260",
    "end": "1316990"
  },
  {
    "text": "activities now we still had those",
    "start": "1316990",
    "end": "1322330"
  },
  {
    "text": "detectors that were kind of intriguing we had a good signal coming out of them and I wonder how can I convert that",
    "start": "1322330",
    "end": "1329559"
  },
  {
    "text": "signal into an action and that's where the server's call the jury came in",
    "start": "1329559",
    "end": "1334750"
  },
  {
    "text": "we're based on this small amyl file we can take in that detector and then",
    "start": "1334750",
    "end": "1341789"
  },
  {
    "text": "trigger action so when you send a slack notification nice and easy very low-risk",
    "start": "1341789",
    "end": "1347799"
  },
  {
    "text": "or we need to replace a host which by tranquility is extremely low risk or we",
    "start": "1347799",
    "end": "1354370"
  },
  {
    "text": "need to bounce a service or run a fairly large and complex job a drink does all",
    "start": "1354370",
    "end": "1360760"
  },
  {
    "text": "that and it will also retry those actions in the event of failure do all those nice things including in",
    "start": "1360760",
    "end": "1367210"
  },
  {
    "text": "particular rate limiting so I would never want a faulty detector that may",
    "start": "1367210",
    "end": "1372280"
  },
  {
    "text": "have been configured incorrectly to say trigger graceful replacements of all of",
    "start": "1372280",
    "end": "1378789"
  },
  {
    "text": "my instances I'd want to have some barrier on that given the one caused an",
    "start": "1378789",
    "end": "1384220"
  },
  {
    "text": "issue I just don't want to see literally every server be replaced and so four",
    "start": "1384220",
    "end": "1391900"
  },
  {
    "text": "nines of availability really comes from this preventive maintenance ninety",
    "start": "1391900",
    "end": "1397510"
  },
  {
    "text": "percent of the time we are just replacing instances if we see kernel errors why have an instance sitting",
    "start": "1397510",
    "end": "1404320"
  },
  {
    "text": "around in your cluster like that we have statistics going back the show that server ever did go impaired at any point",
    "start": "1404320",
    "end": "1411610"
  },
  {
    "text": "in the past even for a few seconds it'll probably go and pair it again and it's better for us to remove it proactively",
    "start": "1411610",
    "end": "1418030"
  },
  {
    "text": "and fundamentally when you're in AWS there's no cost to doing this we can",
    "start": "1418030",
    "end": "1424659"
  },
  {
    "text": "turn all of our servers once a month and we will get fresh Hardware every time if",
    "start": "1424659",
    "end": "1430780"
  },
  {
    "text": "there was something actually problematic about the underlying hardware Amazon can replace it or work to mediate that and",
    "start": "1430780",
    "end": "1437409"
  },
  {
    "text": "similarly it may just be our particular kernel on that particular piece of",
    "start": "1437409",
    "end": "1442929"
  },
  {
    "text": "hardware just hit a condition it didn't like or still making all these things",
    "start": "1442929",
    "end": "1450520"
  },
  {
    "text": "better so as we grow we've kept finding new issues and that's where we've had to",
    "start": "1450520",
    "end": "1456789"
  },
  {
    "text": "lean into monitoring and automation to find these preventive signals and then",
    "start": "1456789",
    "end": "1461919"
  },
  {
    "text": "carry forth and trigger actions to remediate these problems",
    "start": "1461919",
    "end": "1467770"
  },
  {
    "text": "as we've scaled up we encountered an interesting issue where all of our mice",
    "start": "1467770",
    "end": "1474160"
  },
  {
    "text": "equal instances needed to be have their volumes resized constantly because we",
    "start": "1474160",
    "end": "1479770"
  },
  {
    "text": "need to scale up throughput or there's other issues going on and we can also",
    "start": "1479770",
    "end": "1485020"
  },
  {
    "text": "automate that via dream all right great I'm gonna switch over here and",
    "start": "1485020",
    "end": "1493930"
  },
  {
    "text": "tell you a little bit about how you can do this yourself and so Wi-Fi seems to have gone a little",
    "start": "1493930",
    "end": "1499090"
  },
  {
    "text": "sketchy on me so I'm going to rely on screen shots that show you how how to go ahead and do this and so I actually went",
    "start": "1499090",
    "end": "1506170"
  },
  {
    "text": "through our demo system to go look for metrics that might be relevant right so happened to find one that looked a lot",
    "start": "1506170",
    "end": "1511720"
  },
  {
    "text": "like the one that James was using himself TCP retransmits a little bit different but close enough",
    "start": "1511720",
    "end": "1517720"
  },
  {
    "text": "right for government work and so I found that signal and I charted it right and when you take a look at it you're like",
    "start": "1517720",
    "end": "1523360"
  },
  {
    "text": "hey that's kind of not very interesting because it's just noisy right you don't see a whole lot of interesting stuff in",
    "start": "1523360",
    "end": "1528760"
  },
  {
    "text": "there maybe you could make an argument that there's a bimodal distribution but you know that's not super super",
    "start": "1528760",
    "end": "1534280"
  },
  {
    "text": "insightful so what I did then next is go ahead and take a look at a longer time frame because maybe there's something",
    "start": "1534280",
    "end": "1540100"
  },
  {
    "text": "lurking historically that will show me something interesting and sure enough when I went in head and look at the last",
    "start": "1540100",
    "end": "1545800"
  },
  {
    "text": "day oddly enough we had a whole bunch of noise in the system which was showing me that there was a higher level of these",
    "start": "1545800",
    "end": "1552310"
  },
  {
    "text": "retransmits happening during a particular period of time now looking at that noise as you know a bunch of lines",
    "start": "1552310",
    "end": "1560110"
  },
  {
    "text": "again not telling you a whole lot and that's where the analytics come into play where I played around with a couple",
    "start": "1560110",
    "end": "1566710"
  },
  {
    "text": "of different variations on this to say hey maybe it has to do with a region that's having a problem or maybe it has",
    "start": "1566710",
    "end": "1572200"
  },
  {
    "text": "to do with a particular service that's having a problem or maybe it's a particular instance type that's having",
    "start": "1572200",
    "end": "1578290"
  },
  {
    "text": "problems so I tried that out you know that took about 30 seconds I got to a view which showed me that in fact",
    "start": "1578290",
    "end": "1583690"
  },
  {
    "text": "there's a particular instance type that was exhibiting a much higher rate of these retransmits than everything else",
    "start": "1583690",
    "end": "1590170"
  },
  {
    "text": "and it turns out that there I 3 to X larges right so random fact in our case",
    "start": "1590170",
    "end": "1595810"
  },
  {
    "text": "something happened and we got our signal now once you have this it's a simple matter to go ahead and say",
    "start": "1595810",
    "end": "1601630"
  },
  {
    "text": "great I have the thing that I care about what I want to do then next is say you",
    "start": "1601630",
    "end": "1607570"
  },
  {
    "text": "know how do I make sure that I find that pattern when it happens again and so",
    "start": "1607570",
    "end": "1612820"
  },
  {
    "text": "there are a variety of different ways of looking for patterns that we provide to you the standard ones that people often",
    "start": "1612820",
    "end": "1620050"
  },
  {
    "text": "start with are just hey I want to use the static threshold so if it's greater than I think maybe eight or something",
    "start": "1620050",
    "end": "1625450"
  },
  {
    "text": "like that maybe I should be told but oftentimes you don't know what that number is going to be ahead of time right",
    "start": "1625450",
    "end": "1630610"
  },
  {
    "text": "or maybe the signal is something that has some periodicity to it so that it's different on Mondays than from Thursdays",
    "start": "1630610",
    "end": "1637120"
  },
  {
    "text": "right so how do you take that into account when you are looking for those kinds of patterns and so in our case",
    "start": "1637120",
    "end": "1642190"
  },
  {
    "text": "what I simply did was pick the sudden change detector which just says something like hey if it looks different",
    "start": "1642190",
    "end": "1649390"
  },
  {
    "text": "in the last five minutes relative to the last hour then let me know right so I went ahead and did that and tried it out",
    "start": "1649390",
    "end": "1656680"
  },
  {
    "text": "and so when you pick that particular threshold in our case what we'll do is run a preview for you and show you what",
    "start": "1656680",
    "end": "1663310"
  },
  {
    "text": "would have happened against historical data for the last day or so and tell you",
    "start": "1663310",
    "end": "1668320"
  },
  {
    "text": "whether in fact that would have picked out the thing that you cared about right and as you can see here in this case it",
    "start": "1668320",
    "end": "1674080"
  },
  {
    "text": "did find it for me quite quickly and as a result I now have something that's going to find the pattern that I care",
    "start": "1674080",
    "end": "1679960"
  },
  {
    "text": "about and then I can choose to say okay great now let me notify somebody right I can put out in slack HipChat what have you",
    "start": "1679960",
    "end": "1687370"
  },
  {
    "text": "and have a custom message about it or in this case I can say let me out put that",
    "start": "1687370",
    "end": "1692980"
  },
  {
    "text": "in a web book and then you can take advantage of that to go ahead and drive some automation back here all right so",
    "start": "1692980",
    "end": "1704730"
  },
  {
    "text": "once we have that web hook and we start thinking about automation an obvious",
    "start": "1704730",
    "end": "1710530"
  },
  {
    "text": "choice inside of AWS is to use lambda and so you can imagine we have that unhealthy to post detector and we're",
    "start": "1710530",
    "end": "1718150"
  },
  {
    "text": "thinking any host that matches this metric we just don't want it in our cluster anymore something's a little bit",
    "start": "1718150",
    "end": "1724180"
  },
  {
    "text": "off about it and we can make that statement just even probabilistically like you know three",
    "start": "1724180",
    "end": "1730180"
  },
  {
    "text": "out of four times the right action is to remove and worst case scenario we removed one",
    "start": "1730180",
    "end": "1736029"
  },
  {
    "text": "extra hosts on occasion but so if we want to build this actual handling",
    "start": "1736029",
    "end": "1742989"
  },
  {
    "text": "system we take in that unhealthy host detector we pass it off to API gateway",
    "start": "1742989",
    "end": "1749440"
  },
  {
    "text": "where which will actually receive the web book and importantly we can then use API gateway custom authorizers to",
    "start": "1749440",
    "end": "1756940"
  },
  {
    "text": "authenticate this message and ensure that you know no one on the Internet can",
    "start": "1756940",
    "end": "1762539"
  },
  {
    "text": "randomly replace our instances pass that along to lambda and then finally tell",
    "start": "1762539",
    "end": "1768340"
  },
  {
    "text": "the ec2 auto-scaling API to replace a host I'm willing to gloss over a very",
    "start": "1768340",
    "end": "1773769"
  },
  {
    "text": "important aspect in this architecture which is the rate-limiting the reason why I'm doing that is that it's very",
    "start": "1773769",
    "end": "1780399"
  },
  {
    "text": "application specific as to what your risk tolerance is in some applications you could replace every instance and it",
    "start": "1780399",
    "end": "1787899"
  },
  {
    "text": "wouldn't be a problem in others you need extremely tight controls on the rate limits so in our",
    "start": "1787899",
    "end": "1794830"
  },
  {
    "text": "case without tranquility extremely tight guarantees around replacing instances",
    "start": "1794830",
    "end": "1801580"
  },
  {
    "text": "and removing hardware we won't be able to handle these hooks let's just take a",
    "start": "1801580",
    "end": "1809499"
  },
  {
    "text": "very basic lambda web hook handler so how many of you here have used lambda",
    "start": "1809499",
    "end": "1815529"
  },
  {
    "text": "before very cool so if I receive that web hook",
    "start": "1815529",
    "end": "1821859"
  },
  {
    "text": "and I just want to do something very simple like log it out I can just do",
    "start": "1821859",
    "end": "1827440"
  },
  {
    "text": "something simple like this the exports dot handler function or variable is how",
    "start": "1827440",
    "end": "1834580"
  },
  {
    "text": "lambda determines what function will actually be executed and then I pass along just the body of my web request",
    "start": "1834580",
    "end": "1841869"
  },
  {
    "text": "into my little logger which Jesse logs out which detector came from but that's",
    "start": "1841869",
    "end": "1851049"
  },
  {
    "text": "not enough because I really do need to have some logic in there to provide",
    "start": "1851049",
    "end": "1856419"
  },
  {
    "text": "authentication and ensure that no one on the internet can replace my host and for",
    "start": "1856419",
    "end": "1861519"
  },
  {
    "text": "that API gateway does provide the ability to invoke a CA separate to function which just serves the",
    "start": "1861519",
    "end": "1867529"
  },
  {
    "text": "purpose of guaranteeing that the request was authorized in this case signal",
    "start": "1867529",
    "end": "1874580"
  },
  {
    "text": "effects uses a little variant on JSON web tokens so we take in the body of the",
    "start": "1874580",
    "end": "1880630"
  },
  {
    "text": "web book and then we know that it's encode using at h Mac shall one and we",
    "start": "1880630",
    "end": "1886880"
  },
  {
    "text": "need to hash that body with our known shared secret and then compare that",
    "start": "1886880",
    "end": "1892880"
  },
  {
    "text": "value to the incoming value that signal effects provided and that's how we",
    "start": "1892880",
    "end": "1898250"
  },
  {
    "text": "guarantee that this actually came from signal effects and not the random person on the Internet",
    "start": "1898250",
    "end": "1904640"
  },
  {
    "text": "in the event that doesn't we just need to spawn with a 403 and there's a little",
    "start": "1904640",
    "end": "1911899"
  },
  {
    "text": "bit of logic in a the custom authorizer expect to return those responses so",
    "start": "1911899",
    "end": "1920450"
  },
  {
    "text": "let's log which host came in that was unhealthy so in the event that we received that webhook one of the first",
    "start": "1920450",
    "end": "1928279"
  },
  {
    "text": "things that we have to do is flatten out the input JSON so the inputs include",
    "start": "1928279",
    "end": "1934309"
  },
  {
    "text": "potentially multiple metrics and have different dimensions on that for most",
    "start": "1934309",
    "end": "1939649"
  },
  {
    "text": "practical purposes and every implementation we have at HubSpot so far we just take the leaf nodes from that",
    "start": "1939649",
    "end": "1947090"
  },
  {
    "text": "tree because that provides us the information like host and other related",
    "start": "1947090",
    "end": "1952899"
  },
  {
    "text": "dimensions most of our metrics that we actually fire alerts on are also single",
    "start": "1952899",
    "end": "1959240"
  },
  {
    "text": "- single of metrics so let's go ahead and fly on the inputs and then just log",
    "start": "1959240",
    "end": "1968600"
  },
  {
    "text": "out yeah console that log received detector for web hooked up detector and host dimensions dot host we then 200",
    "start": "1968600",
    "end": "1977149"
  },
  {
    "text": "back which gives us a nice little Handler and I can blog something which",
    "start": "1977149",
    "end": "1982580"
  },
  {
    "text": "is not the most useful place to put the information about the host now let's",
    "start": "1982580",
    "end": "1988760"
  },
  {
    "text": "take a look at the auto scaling API so it's actually really simple to you",
    "start": "1988760",
    "end": "1993860"
  },
  {
    "text": "create an instance of the auto scaling API inside of a lambda you really just have to",
    "start": "1993860",
    "end": "1999570"
  },
  {
    "text": "created auto-scaling API with AWS auto-scaling we then have to create a set of grams",
    "start": "1999570",
    "end": "2006140"
  },
  {
    "text": "and we're going to pass along to that API just to make sure that you know or be able to tell the API that it is",
    "start": "2006140",
    "end": "2012140"
  },
  {
    "text": "unhealthy one important note about this particular set of trams is that I am",
    "start": "2012140",
    "end": "2017330"
  },
  {
    "text": "telling the auto scaling API to ignore any grace period so as soon as I fire this off the auto scaling or will remove",
    "start": "2017330",
    "end": "2025760"
  },
  {
    "text": "that host and ignore any grace periods that were configured and so I just pass",
    "start": "2025760",
    "end": "2031880"
  },
  {
    "text": "that along by a set instance health and then I'm done that instance will be",
    "start": "2031880",
    "end": "2038240"
  },
  {
    "text": "removed so kind of putting that all back together if I want to go ahead and",
    "start": "2038240",
    "end": "2044690"
  },
  {
    "text": "receive that webhook flatten the json then i need to set the instance health and then i can return the final value",
    "start": "2044690",
    "end": "2053480"
  },
  {
    "text": "it's 200 i have succeeded in handling this message in the event that you know",
    "start": "2053480",
    "end": "2059500"
  },
  {
    "text": "this was not 200 i would want to add a little bit of extra error case handling",
    "start": "2059500",
    "end": "2065720"
  },
  {
    "text": "around this but I can leave that as a exercise for the reader and then how do",
    "start": "2065720",
    "end": "2074540"
  },
  {
    "text": "we actually connect this up to API gateway API gateway provides a fantastic user interface that allows you to",
    "start": "2074540",
    "end": "2080899"
  },
  {
    "text": "connect it or define a handler and I just named it slash handlers receives a",
    "start": "2080900",
    "end": "2087500"
  },
  {
    "text": "post request fires off the lambda function and I just pointed at the",
    "start": "2087500",
    "end": "2093169"
  },
  {
    "text": "stored lambda function all right so",
    "start": "2093170",
    "end": "2100850"
  },
  {
    "text": "thank you James so that is the mechanism by which HubSpot was able to get to",
    "start": "2100850",
    "end": "2107960"
  },
  {
    "text": "better than four nines and how you can do it yourself as well if you're interested to learn more you can stop by",
    "start": "2107960",
    "end": "2114500"
  },
  {
    "text": "our booth I think you know we we did all this stuff before we started to do lambda monitoring more generally so you",
    "start": "2114500",
    "end": "2120980"
  },
  {
    "text": "could have sent those metrics to us using things that are now generally available and you can go check that out",
    "start": "2120980",
    "end": "2127010"
  },
  {
    "text": "at the booth most of what was done through the web hook you could also do",
    "start": "2127010",
    "end": "2132410"
  },
  {
    "text": "using the various api's that we have including the signal flow api for manipulating our",
    "start": "2132410",
    "end": "2138410"
  },
  {
    "text": "analytics tension directly and so there's plenty more information about that online if you're interested okay",
    "start": "2138410",
    "end": "2144170"
  },
  {
    "text": "and I think that's that's it for for today and happy to take any questions if",
    "start": "2144170",
    "end": "2150049"
  },
  {
    "text": "you've got them otherwise thank you very much for coming thank you hey Chris yes",
    "start": "2150049",
    "end": "2171009"
  },
  {
    "text": "so we use all of the analytic suite that's available so that includes the",
    "start": "2171009",
    "end": "2178640"
  },
  {
    "text": "percentiles summation over time on the MIT metrics is a really common use case",
    "start": "2178640",
    "end": "2184490"
  },
  {
    "text": "and we have done some cross correlation between two or more metrics but the",
    "start": "2184490",
    "end": "2192619"
  },
  {
    "text": "results of that have been a little bit noisier than we'd like just be as if you're trying to make a greater than",
    "start": "2192619",
    "end": "2198680"
  },
  {
    "text": "other metric statement we tend to have problems finding metrics that are clean enough that we get a reliable signal",
    "start": "2198680",
    "end": "2205730"
  },
  {
    "text": "have that approach",
    "start": "2205730",
    "end": "2208390"
  },
  {
    "text": "definitely so we do have support particularly for extremely small",
    "start": "2234390",
    "end": "2239560"
  },
  {
    "text": "clusters in a jury to rate limit by any combination of dimensions so you can",
    "start": "2239560",
    "end": "2245530"
  },
  {
    "text": "string together dimensions like cluster host anything else do you think of",
    "start": "2245530",
    "end": "2251170"
  },
  {
    "text": "tossing in that metric and then we can set that by just a simple interval rate",
    "start": "2251170",
    "end": "2256870"
  },
  {
    "text": "limit for the most part though our larger clusters are fairly resilient to",
    "start": "2256870",
    "end": "2262470"
  },
  {
    "text": "over marking and we're pretty all right with having them over marked because we",
    "start": "2262470",
    "end": "2268480"
  },
  {
    "text": "will replace them about once I've reached two months anyway Oh certainly so this was something that",
    "start": "2268480",
    "end": "2289960"
  },
  {
    "text": "we progressed to over a long period of time so the first step is to start collecting data and build that",
    "start": "2289960",
    "end": "2297100"
  },
  {
    "text": "historical backlog for us like when I say that we lose about three and a half percent of our instances we actually",
    "start": "2297100",
    "end": "2303640"
  },
  {
    "text": "have about three years of historical data on a fleet of several thousand eight of us instances to say yep this is",
    "start": "2303640",
    "end": "2310270"
  },
  {
    "text": "the number and then similarly if we have this big historical record for what does",
    "start": "2310270",
    "end": "2315700"
  },
  {
    "text": "an H base server look like across many dimensions and many metrics over time",
    "start": "2315700",
    "end": "2321760"
  },
  {
    "text": "the point where you really get to the wanting to automate it fully is that you",
    "start": "2321760",
    "end": "2328270"
  },
  {
    "text": "start seeing that this alert came in and you do exactly this action and once you",
    "start": "2328270",
    "end": "2334420"
  },
  {
    "text": "get to that point you really want to start cutting out the people from that equation because no one wants to get",
    "start": "2334420",
    "end": "2340810"
  },
  {
    "text": "woken up just to press a button",
    "start": "2340810",
    "end": "2344430"
  },
  {
    "text": "all right well good thank you thank you",
    "start": "2351810",
    "end": "2356030"
  }
]