[
  {
    "text": "so our agenda for today we've got a couple sections we're going to talk about really briefly we're going to talk about",
    "start": "5120",
    "end": "10480"
  },
  {
    "text": "what is cloud search this is more of an advanced webinar so i'm assuming most of you are familiar with it but we'll give a quick review in case",
    "start": "10480",
    "end": "16720"
  },
  {
    "text": "there are a couple people that haven't seen it we're going to talk about what location based search is",
    "start": "16720",
    "end": "22080"
  },
  {
    "text": "and since that's based on distance we're going to talk about computing distance then we'll talk about how you can",
    "start": "22080",
    "end": "27199"
  },
  {
    "text": "implement that in cloud search and then we'll take a look at a sample app that",
    "start": "27199",
    "end": "33360"
  },
  {
    "text": "does location-based search a little bit of housekeeping you've got",
    "start": "33360",
    "end": "39360"
  },
  {
    "text": "a space for questions over there in the meeting in the go to meeting window feel free to type your questions at any time",
    "start": "39360",
    "end": "45680"
  },
  {
    "text": "we'll probably get to them at the end and then this will be recorded the recording will be on the aws youtube",
    "start": "45680",
    "end": "52640"
  },
  {
    "text": "channel we'll put the slides up on slideshare.net and we will mail out a link to everyone",
    "start": "52640",
    "end": "58160"
  },
  {
    "text": "and if you haven't already you can maximize your screen i think it's in the upper left",
    "start": "58160",
    "end": "63440"
  },
  {
    "text": "there's a little button and it'll make it a little bit easier to read some of the slides if you maximize that all right so",
    "start": "63440",
    "end": "70880"
  },
  {
    "text": "straight on into it what is cloud search so cloud search is a fully managed search service",
    "start": "70880",
    "end": "76400"
  },
  {
    "text": "so it allows you to add search functionality to your application easily without having to be a search expert",
    "start": "76400",
    "end": "81680"
  },
  {
    "text": "it's very fast and it's highly scalable it's actually based on the a9 technology that drives the amazon",
    "start": "81680",
    "end": "87759"
  },
  {
    "text": "commercial retail site so you've probably already used it and it supports a number of features like",
    "start": "87759",
    "end": "93200"
  },
  {
    "text": "fastening synonym stock words and customizing ranking and that last one is important because",
    "start": "93200",
    "end": "99040"
  },
  {
    "text": "it's actually the custom ranking functionality that we're going to use to implement location-based search",
    "start": "99040",
    "end": "105920"
  },
  {
    "text": "and to use cloud search is very simple you'll go into the aws console and hit create a domain under cloud",
    "start": "107200",
    "end": "113680"
  },
  {
    "text": "search and you'll set up a set of fields you say this is a text field this is a numeric field",
    "start": "113680",
    "end": "119280"
  },
  {
    "text": "title author things like that and when you're done you hit create and go you can also create things via",
    "start": "119280",
    "end": "125200"
  },
  {
    "text": "the api or the command line tools that most people start with the console and then once your domain is created you",
    "start": "125200",
    "end": "132319"
  },
  {
    "text": "post your documents via http and you also search it via http there's a sample url down below",
    "start": "132319",
    "end": "138959"
  },
  {
    "text": "you can see the domain xyz and region those are those depend on your domain",
    "start": "138959",
    "end": "145280"
  },
  {
    "text": "and then off at the end you see q equals cat and that's what you're querying for so any language or tool that supports",
    "start": "145280",
    "end": "151680"
  },
  {
    "text": "http you can paste that right into a browser use it from java python ruby whatever",
    "start": "151680",
    "end": "156800"
  },
  {
    "text": "you like and then as you start to search if your search traffic goes up we will scale it",
    "start": "156800",
    "end": "162000"
  },
  {
    "text": "up automatically if your traffic goes back down we'll scale you back down so you don't have to buy machines rack machines",
    "start": "162000",
    "end": "168160"
  },
  {
    "text": "install operating systems and all of those things you just create the domain put your data",
    "start": "168160",
    "end": "173440"
  },
  {
    "text": "in it and send us your search requests and we take care of the rest all right there's your flying info intro",
    "start": "173440",
    "end": "180319"
  },
  {
    "text": "to cloud search now for those who want more are actually our next webinar on the 17th",
    "start": "180319",
    "end": "185440"
  },
  {
    "text": "will be a thorough getting started with amazon cloud search so you can go register for that one and",
    "start": "185440",
    "end": "190959"
  },
  {
    "text": "that way we'll talk you through the whole process of creating a search domain configuring search domain how to get your documents",
    "start": "190959",
    "end": "197200"
  },
  {
    "text": "in how to run your searches all right but hopefully that gives you a little bit of",
    "start": "197200",
    "end": "202239"
  },
  {
    "text": "orientation we'll be talking about search domains that's your set of data as we go so",
    "start": "202239",
    "end": "208080"
  },
  {
    "text": "now we're going to get into the need of this one what is location based search and it's fundamentally just using your",
    "start": "208080",
    "end": "213840"
  },
  {
    "text": "users location and distance to various things as factors in your search results",
    "start": "213840",
    "end": "220000"
  },
  {
    "text": "right and key thing is why are we talking so much about this these days",
    "start": "220000",
    "end": "225760"
  },
  {
    "text": "and people have always cared about what's the nearest restaurant etc but mobile is really the key driver because everyone's carrying smartphones",
    "start": "225760",
    "end": "232319"
  },
  {
    "text": "now and this means two things one they're moving to a lot of different locations",
    "start": "232319",
    "end": "237360"
  },
  {
    "text": "and they're carrying their computer with so they're searching from a lot of distinct locations and the mobile",
    "start": "237360",
    "end": "242400"
  },
  {
    "text": "provides the information as the location so all of your applications can depend on having location",
    "start": "242400",
    "end": "247760"
  },
  {
    "text": "information so all of a sudden we're seeing a skyrocketing rocketing number of searches that are",
    "start": "247760",
    "end": "253040"
  },
  {
    "text": "from noble mobile devices that are accompanied by location information so there are",
    "start": "253040",
    "end": "258320"
  },
  {
    "text": "any number of opportunities in this you may hear that the term uh solomo social local mobile",
    "start": "258320",
    "end": "265040"
  },
  {
    "text": "it's the big trendy thing for startups these days is anything that has local characteristics social",
    "start": "265040",
    "end": "270400"
  },
  {
    "text": "characteristics and is on a mobile device um they're all sorts of startups probably several of",
    "start": "270400",
    "end": "276080"
  },
  {
    "text": "you are in something like that so we're caring more and more about location",
    "start": "276080",
    "end": "281280"
  },
  {
    "text": "and distance and then we're going to use the distance and we may use the distance to say i only care about things",
    "start": "281280",
    "end": "287520"
  },
  {
    "text": "within you know 10 miles of me or you can say i want to see i'm looking for a",
    "start": "287520",
    "end": "293440"
  },
  {
    "text": "restaurant tonight on my phone show me a lift a list of restaurants sorted by closest to farthest away",
    "start": "293440",
    "end": "300479"
  },
  {
    "text": "and then the last bullet point here is the most sophisticated one which is if i'm sitting here in downtown",
    "start": "300479",
    "end": "306160"
  },
  {
    "text": "palo alto and i say show me a restaurant and there's one 10 feet away but it's a terrible restaurant",
    "start": "306160",
    "end": "311199"
  },
  {
    "text": "and there's one 20 feet away that's a great restaurant you probably want to show the great restaurant first",
    "start": "311199",
    "end": "317280"
  },
  {
    "text": "so for a really good search application you end up considering multiple factors like",
    "start": "317280",
    "end": "322800"
  },
  {
    "text": "quality of the restaurant or whatever it is you're searching for distance text relevance so you end up combining",
    "start": "322800",
    "end": "329840"
  },
  {
    "text": "multiple factors because the better your search results are the more conversions you're going to get",
    "start": "329840",
    "end": "336400"
  },
  {
    "text": "whatever your goal is more product you're going to sell more the more happy customers you're going to have so it's important to get the search",
    "start": "336400",
    "end": "342960"
  },
  {
    "text": "results tuned well all right we know we have distance we know why we want to do it how do we",
    "start": "342960",
    "end": "348880"
  },
  {
    "text": "figure it out well it turns out that it's not as straightforward as you might think there are lots of formulas for",
    "start": "348880",
    "end": "354800"
  },
  {
    "text": "finding distance uh four of the common ones we've got here are the rectangular distance that's just",
    "start": "354800",
    "end": "360319"
  },
  {
    "text": "your basic if you assume the earth is flat and you remember this from high school geometry or algebra",
    "start": "360319",
    "end": "366319"
  },
  {
    "text": "you're just drawing you know a line between two points on a plane there's equirectangular projection which",
    "start": "366319",
    "end": "372639"
  },
  {
    "text": "sort of maps that onto onto a sphere a little bit and then there's the real",
    "start": "372639",
    "end": "377840"
  },
  {
    "text": "accurate formula spherical log cosines and amberseen and it turns out of course that you can",
    "start": "377840",
    "end": "383120"
  },
  {
    "text": "have fast or you can have accurate but you don't necessarily get fast and accurate",
    "start": "383120",
    "end": "388240"
  },
  {
    "text": "rectangular distance is the fastest one to compute and the most accurate one is going to be the haversine",
    "start": "388240",
    "end": "395759"
  },
  {
    "text": "you're probably asking yourself why are there these four methods and the answer is that the earth is not flat and the earth is not even spherical",
    "start": "395759",
    "end": "403199"
  },
  {
    "text": "so we have various ways of trying to cope for that cope with that",
    "start": "403199",
    "end": "408400"
  },
  {
    "text": "and you can see here two different formulas the first one is the rectangular distance as i said you may remember this from",
    "start": "408400",
    "end": "414560"
  },
  {
    "text": "high school algebra the difference between the x locations the difference between the y locations square both of those and take",
    "start": "414560",
    "end": "420800"
  },
  {
    "text": "the square root it gives you the like the hypotenuse on the triangle and down below as you can see this is the",
    "start": "420800",
    "end": "426560"
  },
  {
    "text": "haverseen formula this is notably more complex and as a consequence it's quite a bit more",
    "start": "426560",
    "end": "432400"
  },
  {
    "text": "accurate so which one you choose well let's look at the accuracy of those how",
    "start": "432400",
    "end": "439280"
  },
  {
    "text": "much difference does it make if you use the accurate formula versus the the fast the quick and dirty formula",
    "start": "439280",
    "end": "444800"
  },
  {
    "text": "we're going from fort lauderdale florida to new haven connecticut you notice that's almost north south we",
    "start": "444800",
    "end": "451120"
  },
  {
    "text": "only get a difference of three percent between the more accurate and less accurate method on the other hand if we go east",
    "start": "451120",
    "end": "458319"
  },
  {
    "text": "west and a little further north you can see there's actually a 66 percent difference",
    "start": "458319",
    "end": "464080"
  },
  {
    "text": "between the two computational methods so you know that that's something that more people would consider a significant",
    "start": "464080",
    "end": "470800"
  },
  {
    "text": "issue than three percent uh just to look at it in detail a little bit the haversing and log cosines are the",
    "start": "470800",
    "end": "476800"
  },
  {
    "text": "same down to about a meter so you can use those pretty much interchangeably for any sort of information you'll get out of gps",
    "start": "476800",
    "end": "483759"
  },
  {
    "text": "the equirectangular is a much closer approximation but faster than the other two and the rectangular one is",
    "start": "483759",
    "end": "491039"
  },
  {
    "text": "not so close you can see about a 66 error rate but",
    "start": "491039",
    "end": "497039"
  },
  {
    "text": "how much does that matter i mean most of us look at 66 percent error rate and say oh that's terrible i can't possibly use",
    "start": "497039",
    "end": "502400"
  },
  {
    "text": "that well let's take the office i used to work out of that's what the map has on it",
    "start": "502400",
    "end": "507440"
  },
  {
    "text": "i happen to know the nearest pizza parlor is less than a mile away from there i can get the most precise distance out",
    "start": "507440",
    "end": "514560"
  },
  {
    "text": "of the haver scene right there at least if i'm a bird the problem is that humans have this bad",
    "start": "514560",
    "end": "521200"
  },
  {
    "text": "habit of wanting to follow roads so most of your users are going to care how long it takes",
    "start": "521200",
    "end": "526800"
  },
  {
    "text": "for me to get there for the pizza to get to me so any sort of distance no matter how",
    "start": "526800",
    "end": "532959"
  },
  {
    "text": "accurate it is in a straight line distance is only an approximation anyway so it",
    "start": "532959",
    "end": "539040"
  },
  {
    "text": "turns out that if you're already approximating you could probably use any of them",
    "start": "539040",
    "end": "546800"
  },
  {
    "text": "acceptably now i frequently get questions like well but tom which one should i use and the",
    "start": "546839",
    "end": "553120"
  },
  {
    "text": "answer is the usual it depends depends on how important it is to have fast queries how big your index size is",
    "start": "553120",
    "end": "561040"
  },
  {
    "text": "you're going to be doing these distance computations for every document that matches the search results so if",
    "start": "561040",
    "end": "567279"
  },
  {
    "text": "you have 10 million documents that's 10 million computations if you have 100 million that's 100 could",
    "start": "567279",
    "end": "572320"
  },
  {
    "text": "be 100 million computations so it really can't matter and of course it",
    "start": "572320",
    "end": "577440"
  },
  {
    "text": "depends a little bit on the accuracy needed now hopefully none of you are going to be trying to land an airplane based on this",
    "start": "577440",
    "end": "582800"
  },
  {
    "text": "and for the rest it's just a matter it's an approximation for your users time to get there if i had to pick",
    "start": "582800",
    "end": "589360"
  },
  {
    "text": "something i'd probably say start with equirectangular projection it's a good compromise in the middle and then test it and see how it works",
    "start": "589360",
    "end": "595760"
  },
  {
    "text": "for your users and your data",
    "start": "595760",
    "end": "599519"
  },
  {
    "text": "all right now that we have the basic ideas of the computations down how would you complete distance in cloud",
    "start": "601040",
    "end": "607279"
  },
  {
    "text": "search well cloud search contains a feature called rank expressions and rank expressions are used to run a",
    "start": "607279",
    "end": "613920"
  },
  {
    "text": "computation for each document that you match you could do rank expressions to invoke",
    "start": "613920",
    "end": "620560"
  },
  {
    "text": "something like popularity of a document or rating of a restaurant or number of likes to include those in",
    "start": "620560",
    "end": "627680"
  },
  {
    "text": "and it turns out that since it's a nice general tool rank expressions can also be used",
    "start": "627680",
    "end": "632800"
  },
  {
    "text": "to include distance in the in the computation and once you've got that distance you can use",
    "start": "632800",
    "end": "637839"
  },
  {
    "text": "that for sorting or as we said for combining with other factors like text relevance number of likes",
    "start": "637839",
    "end": "643760"
  },
  {
    "text": "etc so rank expressions are going to be the key for how we actually do this in cloud search",
    "start": "643760",
    "end": "650160"
  },
  {
    "text": "now there are two types of rank expressions in cloud search there's the static ones which are just based on",
    "start": "650160",
    "end": "655200"
  },
  {
    "text": "values in your documents like number of likes popularity etc and then there's",
    "start": "655200",
    "end": "661360"
  },
  {
    "text": "query time rank expressions which are kind of cool which allow you to pass in the whole formula each time and this is",
    "start": "661360",
    "end": "668320"
  },
  {
    "text": "very useful because you can then include parameters in that formula like say the user's latitude and the user's longitude",
    "start": "668320",
    "end": "675440"
  },
  {
    "text": "and then you can run that through one of the distance formulas so we'll use query time rank expressions",
    "start": "675440",
    "end": "680560"
  },
  {
    "text": "in cloud search to actually implement distance this by the way is all documented in the cloud search",
    "start": "680560",
    "end": "685920"
  },
  {
    "text": "developers guide if you want to look at it in more detail okay so let's just say i'm going to",
    "start": "685920",
    "end": "692399"
  },
  {
    "text": "stick with the simplest one for my illustrations here just the rectangular distance or the cartesian distance because it's the only",
    "start": "692399",
    "end": "698640"
  },
  {
    "text": "one that fits well on a powerpoint slide so rank expressions are kind of like",
    "start": "698640",
    "end": "704000"
  },
  {
    "text": "writing javascript it has the standard math functions you'd expect the logarithmic trigonometric functions",
    "start": "704000",
    "end": "711440"
  },
  {
    "text": "min max floor etc so we convert the distance formula into something that",
    "start": "711440",
    "end": "716560"
  },
  {
    "text": "most of the programmers will be comfortable with we get the square root of the power",
    "start": "716560",
    "end": "722240"
  },
  {
    "text": "the second power of the distance let me rephrase that take the distance of the latitude square it take the distance of longitude",
    "start": "722240",
    "end": "728959"
  },
  {
    "text": "square it and take the square root right so this formula here is the same as that formula over there",
    "start": "728959",
    "end": "735279"
  },
  {
    "text": "so that's how you would express it in terms of actually passing this into cloud search",
    "start": "735279",
    "end": "741120"
  },
  {
    "text": "query time rank expressions are simply parameters on your http request so you define a rank expression by",
    "start": "741120",
    "end": "747920"
  },
  {
    "text": "saying ampersand rank dash and give it a name equals and you get your expression",
    "start": "747920",
    "end": "752959"
  },
  {
    "text": "and then you have so a concrete example of that would be ampersand rank geo equals the formula we developed on",
    "start": "752959",
    "end": "759680"
  },
  {
    "text": "the previous slide now that defines the rank expression but it doesn't put it into action so to make",
    "start": "759680",
    "end": "765600"
  },
  {
    "text": "it actually be used we then say ampersand rank equals law",
    "start": "765600",
    "end": "770720"
  },
  {
    "text": "all right and a sort of sample url here you can see we have our query we select our rank expression that we define right",
    "start": "770720",
    "end": "776800"
  },
  {
    "text": "there and here 1 2 3 and 4 5 6 represent the user's latitude and longitude",
    "start": "776800",
    "end": "787040"
  },
  {
    "text": "all right now as i said as you get better and better at this you'll want to include more factors and",
    "start": "787040",
    "end": "793120"
  },
  {
    "text": "so right here i'm just combining text relevance and distance now we have the minor",
    "start": "793120",
    "end": "798720"
  },
  {
    "text": "issue that with relevance a higher score is better with distance closer is better so a lower score is",
    "start": "798720",
    "end": "804959"
  },
  {
    "text": "better so to make them go the same direction i subtracted text relevance from 1000 which is the maximum",
    "start": "804959",
    "end": "812639"
  },
  {
    "text": "maximum distance um sorry all right",
    "start": "813360",
    "end": "820560"
  },
  {
    "text": "so now the problem is that on that last slide we actually combined we just added them together so we're sort of assuming",
    "start": "820560",
    "end": "826399"
  },
  {
    "text": "one point in text relevance equals one unit in distance and that's probably not going to be the",
    "start": "826399",
    "end": "832639"
  },
  {
    "text": "case so we'll need to multiply one or the other by some factor to make it balance out and that of course is",
    "start": "832639",
    "end": "838800"
  },
  {
    "text": "where the art comes in because which is more important varies by your application",
    "start": "838800",
    "end": "844000"
  },
  {
    "text": "for example if you assume your users are on foot an amount of distance that matters is going to be very very",
    "start": "844000",
    "end": "849120"
  },
  {
    "text": "different from the amount of distance if your user is going to drive there right so there's no standard formula you can use",
    "start": "849120",
    "end": "856720"
  },
  {
    "text": "you just have to do it for your application so you need to take first approximation",
    "start": "856720",
    "end": "862399"
  },
  {
    "text": "test it adjust it test it again until you get something that works for you now fortunately",
    "start": "862399",
    "end": "870079"
  },
  {
    "text": "to aid you in this process cloud search has a feature called the rank expression comparator",
    "start": "870079",
    "end": "875120"
  },
  {
    "text": "and this is used to run two queries actually run one query with two different scores so you can see",
    "start": "875120",
    "end": "880720"
  },
  {
    "text": "the results side by side and see how things work so this is just a snapshot of it",
    "start": "880720",
    "end": "886959"
  },
  {
    "text": "so we're doing a search for francisco in my geographic database we're showing 25 records per page over",
    "start": "886959",
    "end": "893600"
  },
  {
    "text": "here we have the base that we're referencing and over here i've changed one factor",
    "start": "893600",
    "end": "898639"
  },
  {
    "text": "i've changed the weighting for the name field and what you can see is we've got different results here",
    "start": "898639",
    "end": "903920"
  },
  {
    "text": "the green arrow means this result went up compared to the reference one this one went down from its previous",
    "start": "903920",
    "end": "909760"
  },
  {
    "text": "position and these two worked in the top 25 at all the first time so they got added to the result set so you can just",
    "start": "909760",
    "end": "916800"
  },
  {
    "text": "look at your data here make a change and say oh that looks better or oh that looks worse i better back that change out",
    "start": "916800",
    "end": "923199"
  },
  {
    "text": "so you can change the weight you can add things like you know the logarithm of the number of likes or",
    "start": "923199",
    "end": "929120"
  },
  {
    "text": "anything else just by typing it into the field up here and as you make each change you immediately see the search results",
    "start": "929120",
    "end": "935600"
  },
  {
    "text": "and it makes it very very rapid for going through this process to get to a good approximation",
    "start": "935600",
    "end": "940639"
  },
  {
    "text": "for how to weight distance if you're just sorting by distance you don't have to deal with this at all you just say",
    "start": "940639",
    "end": "945920"
  },
  {
    "text": "sort equals geo and a rank equals geo and you're there but once you start combining the factors",
    "start": "945920",
    "end": "950959"
  },
  {
    "text": "this tool becomes your friend okay now now we know how to do the",
    "start": "950959",
    "end": "958240"
  },
  {
    "text": "computation how do we get the data in there so cloud search currently only supports unsigned",
    "start": "958240",
    "end": "964560"
  },
  {
    "text": "integers that's a bit of a problem for us because the latitude ranges from negative 90 to",
    "start": "964560",
    "end": "971040"
  },
  {
    "text": "90 degrees and the longitude goes from negative 180 to 180. so um we have to convert those to",
    "start": "971040",
    "end": "977600"
  },
  {
    "text": "positive ranges and then because those are floating point numbers and we're going to want some decimal places we're going to",
    "start": "977600",
    "end": "982959"
  },
  {
    "text": "multiply by a thousand so the number that you store for latitude in your index will be the",
    "start": "982959",
    "end": "988720"
  },
  {
    "text": "original latitude plus 90 degrees times a thousand for example uh multiplier depends on what resolution",
    "start": "988720",
    "end": "995040"
  },
  {
    "text": "you need there now this actually performs fairly well cloud search can do like",
    "start": "995040",
    "end": "1001360"
  },
  {
    "text": "10 million",
    "start": "1001360",
    "end": "1003920"
  },
  {
    "text": "oh i'm sorry i'm just hearing that i didn't get an advance on the slides there okay good all right so",
    "start": "1006560",
    "end": "1014079"
  },
  {
    "text": "performance um you can do 10 million a second but what if you got 100 million documents",
    "start": "1014079",
    "end": "1019199"
  },
  {
    "text": "well you probably don't want your user waiting for 10 seconds but realistically if i'm in san francisco and i'm searching for a",
    "start": "1019199",
    "end": "1025600"
  },
  {
    "text": "restaurant you probably know that i'm not going to tokyo for dinner so we can restrict our search results to",
    "start": "1025600",
    "end": "1032160"
  },
  {
    "text": "say um only the state of california or only like the zip code or a range of the",
    "start": "1032160",
    "end": "1039038"
  },
  {
    "text": "latitude and longitude all of those will tend to cut down the number of computations that have to be",
    "start": "1039039",
    "end": "1044480"
  },
  {
    "text": "done obviously there's probably only several hundred restaurants in san francisco as opposed to",
    "start": "1044480",
    "end": "1049679"
  },
  {
    "text": "several million in the world and several hundred go so fast that you hardly notice the computation time at all",
    "start": "1049679",
    "end": "1056720"
  },
  {
    "text": "here's a here's a fairly complex set of data but i want you to look at the the red column mostly these are the",
    "start": "1056720",
    "end": "1062720"
  },
  {
    "text": "amount of times it takes to do a distance query this was run over something that has 8 million documents",
    "start": "1062720",
    "end": "1069440"
  },
  {
    "text": "in it and the simplest distance formula takes a second and a half",
    "start": "1069440",
    "end": "1075200"
  },
  {
    "text": "1560 milliseconds to run over 8 million documents that's a little slow for a lot of",
    "start": "1075200",
    "end": "1080880"
  },
  {
    "text": "applications and you can see the haversing takes twice that but if i put a restriction on it and",
    "start": "1080880",
    "end": "1086480"
  },
  {
    "text": "this restriction was plus or minus 100 miles i get about 400 or 4 000 restaurants 3",
    "start": "1086480",
    "end": "1092559"
  },
  {
    "text": "800. and you can see those take about 900 milliseconds to run and it turns out due to cloud searches",
    "start": "1092559",
    "end": "1099280"
  },
  {
    "text": "architecture it's slightly faster if i use a literal field for a restriction",
    "start": "1099280",
    "end": "1105200"
  },
  {
    "text": "and here then i was able to actually run these queries in you know 50 to 100 milliseconds which is faster for most applications",
    "start": "1105200",
    "end": "1111840"
  },
  {
    "text": "fast enough for most applications so you can see we're looking at a difference between 1500",
    "start": "1111840",
    "end": "1116960"
  },
  {
    "text": "and 5 of that so don't search the entire world when",
    "start": "1116960",
    "end": "1122960"
  },
  {
    "text": "you're doing these things put a restriction on it as i said you could restrict it to you",
    "start": "1122960",
    "end": "1128160"
  },
  {
    "text": "know the state the district that they're in a few nearby zip codes or latitude and longitude rate range and",
    "start": "1128160",
    "end": "1135120"
  },
  {
    "text": "that will speed things up considerably all right let's look at a demo application that i",
    "start": "1135120",
    "end": "1141919"
  },
  {
    "text": "built based on cloud search in this so here's just a screenshot but i'm going to flip out to the application",
    "start": "1141919",
    "end": "1147280"
  },
  {
    "text": "itself so this is just a simple mapping application again this was the geonames database it has eight",
    "start": "1147280",
    "end": "1153919"
  },
  {
    "text": "million points around the world in it and i'm using google maps to display the results you",
    "start": "1153919",
    "end": "1158960"
  },
  {
    "text": "can see as i move things around it updates things i've got the standard sort of search results here",
    "start": "1158960",
    "end": "1165919"
  },
  {
    "text": "over here i've got cloud search so i can fast it so notice all of a sudden i'm only in cal in canada or only show results from",
    "start": "1165919",
    "end": "1173440"
  },
  {
    "text": "mexico so we can facet we can search we can combine this with with distance now what i have here is a",
    "start": "1173440",
    "end": "1180880"
  },
  {
    "text": "little slider remember i was talking about one in combined distance with other factors like text relevance",
    "start": "1180880",
    "end": "1186720"
  },
  {
    "text": "so if i go for text relevance things get spread out all over the map",
    "start": "1186720",
    "end": "1192000"
  },
  {
    "text": "if i smooth this slider all the way over to distance wham you'll notice it's all right near the center of the map usually what you",
    "start": "1192000",
    "end": "1198559"
  },
  {
    "text": "want is some combination of the two that combines text relevance with some sort of distance factor and",
    "start": "1198559",
    "end": "1205120"
  },
  {
    "text": "this allows you to see the effect of that in real time so this is the kind of application you",
    "start": "1205120",
    "end": "1210159"
  },
  {
    "text": "know you might build for visualizing your code or sorry for visualizing your",
    "start": "1210159",
    "end": "1215520"
  },
  {
    "text": "data letting users see where it is and of course we can drill down to wherever the users happen to be",
    "start": "1215520",
    "end": "1221840"
  },
  {
    "text": "you know so if i was looking for something near my office there we go i'm right around here",
    "start": "1222080",
    "end": "1229840"
  },
  {
    "text": "all right so that's a demo application back powerpoint this demo application is",
    "start": "1229840",
    "end": "1236320"
  },
  {
    "text": "actually very very simple um it's got an html page with javascript on it",
    "start": "1236320",
    "end": "1241600"
  },
  {
    "text": "and that actually has pretty much the entire application due to security restrictions in the",
    "start": "1241600",
    "end": "1246840"
  },
  {
    "text": "browser the html page can only talk back to the server that served that page so",
    "start": "1246840",
    "end": "1253600"
  },
  {
    "text": "i've got a tomcat server in the middle that all it does is forward the request to cloud search so and then we have cloud search the",
    "start": "1253600",
    "end": "1261679"
  },
  {
    "text": "javascript uh just uses jquery and ajax and the google maps api",
    "start": "1261679",
    "end": "1267760"
  },
  {
    "text": "to do all of that and the tomcat server is just in java and it's just for forwarding requests so this is a",
    "start": "1267760",
    "end": "1274720"
  },
  {
    "text": "very simple architecture backing up for a moment in a more typical application you'd have",
    "start": "1274720",
    "end": "1280640"
  },
  {
    "text": "your typical middle tier web application here doing more coordination etc but for a demo it's nice to have just",
    "start": "1280640",
    "end": "1286720"
  },
  {
    "text": "everything on the html page and here's what it looks like to actual",
    "start": "1286720",
    "end": "1292320"
  },
  {
    "text": "query cloud search so this is just an ajax call using jquery and all you really have to do",
    "start": "1292320",
    "end": "1297840"
  },
  {
    "text": "is pass in the search url the query that you want to execute the",
    "start": "1297840",
    "end": "1303679"
  },
  {
    "text": "name of your search domain the fields you want to get back and then here's where we define the rank",
    "start": "1303679",
    "end": "1308880"
  },
  {
    "text": "expression we name it geo and here we have math.squarerootmath.powermath.com",
    "start": "1308880",
    "end": "1315360"
  },
  {
    "text": "this here we have the most important thing which is the user's latitude and the user's",
    "start": "1315360",
    "end": "1320720"
  },
  {
    "text": "longitude dropped into the simple rectangular distance formula",
    "start": "1320720",
    "end": "1326320"
  },
  {
    "text": "and then we have a the data type we want to get back and this is the function that gets",
    "start": "1326320",
    "end": "1331440"
  },
  {
    "text": "called when the thing when the uh result sorry when the uh",
    "start": "1331440",
    "end": "1337039"
  },
  {
    "text": "call succeeds gets our hit section of it we display our search results",
    "start": "1337039",
    "end": "1342080"
  },
  {
    "text": "and then we populate the map and we're done so it's a fairly",
    "start": "1342080",
    "end": "1348799"
  },
  {
    "text": "straightforward process to get it up and running now most of you probably have latitude",
    "start": "1348799",
    "end": "1355280"
  },
  {
    "text": "and longitude for your data you know you know if you have a list of restaurants where they are etc but many times also you don't so if you",
    "start": "1355280",
    "end": "1362799"
  },
  {
    "text": "don't know latitude and longitude um i see sorry sometimes the slide doesn't update",
    "start": "1362799",
    "end": "1369760"
  },
  {
    "text": "so let me just do that again there we go all right so if you don't",
    "start": "1369760",
    "end": "1375039"
  },
  {
    "text": "know the latitude and longitude there are a number of services that do what we call geocoding which is taking an address and mapping",
    "start": "1375039",
    "end": "1382000"
  },
  {
    "text": "it to a latitude and longitude pair there are lots of services if you just google geocoding services",
    "start": "1382000",
    "end": "1388000"
  },
  {
    "text": "you'll get a list of them many of them have free tiers although most of the free tiers have restrictions like you can do a thousand",
    "start": "1388000",
    "end": "1394480"
  },
  {
    "text": "lookups a day or something like that frequently if your database isn't huge the pre-tier is",
    "start": "1394480",
    "end": "1400240"
  },
  {
    "text": "enough if you run it over the course of a week or so to tag all of your data with its location and keep up",
    "start": "1400240",
    "end": "1405919"
  },
  {
    "text": "but if you have higher requirements i think almost all of these have a page here as well",
    "start": "1405919",
    "end": "1411200"
  },
  {
    "text": "so you can do whatever it is that you need to do if you don't have the latitude longitude",
    "start": "1411200",
    "end": "1417440"
  },
  {
    "text": "data you can get it from a geocoding service all right so we we're coming up to the",
    "start": "1417440",
    "end": "1425520"
  },
  {
    "text": "end here so what we've talked about local search almost all applications these days have",
    "start": "1425520",
    "end": "1431120"
  },
  {
    "text": "some local search associated with them for some reason so you want to be aware of that design that into your applications cloud",
    "start": "1431120",
    "end": "1438000"
  },
  {
    "text": "search allows you to incorporate local information into your search and it allows you to not only sort",
    "start": "1438000",
    "end": "1443919"
  },
  {
    "text": "things by distance but to combine it together with other factors like rating and likes",
    "start": "1443919",
    "end": "1449279"
  },
  {
    "text": "um to give you your users the best search results and those search results will quality",
    "start": "1449279",
    "end": "1454400"
  },
  {
    "text": "search results drive users to your site and they increase sales so",
    "start": "1454400",
    "end": "1459840"
  },
  {
    "text": "it's important to have that local component in your search and of course we mentioned at the end geo coding services",
    "start": "1459840",
    "end": "1466799"
  },
  {
    "text": "are available if you need them um let's see resources not done yet but i",
    "start": "1466799",
    "end": "1473279"
  },
  {
    "text": "got the data from my demo from geonames.org and we'll have the",
    "start": "1473279",
    "end": "1478720"
  },
  {
    "text": "slides on slideshare soon if you're interested in the sample code we haven't formally released that yet but i'm going through that process",
    "start": "1478720",
    "end": "1484799"
  },
  {
    "text": "drop me an email if you'd like to take a look at it and the computations i based it on there's this nice little blog entry",
    "start": "1484799",
    "end": "1492400"
  },
  {
    "text": "there it talks about all the computations or you can look at the ones on wikipedia",
    "start": "1492400",
    "end": "1498000"
  },
  {
    "text": "so let's see mike we have some questions oh yes if you have any questions please type them into the box",
    "start": "1498000",
    "end": "1504960"
  },
  {
    "text": "let's see okay um a question about range filters so um you could filter on a range",
    "start": "1510640",
    "end": "1518799"
  },
  {
    "text": "based on a literal value like you can say state equals california or grip equals",
    "start": "1518799",
    "end": "1525480"
  },
  {
    "text": "94402 or you can do a numeric range if you want to do a range on your latitude and longitude um in cloud",
    "start": "1525480",
    "end": "1532880"
  },
  {
    "text": "search the literal ranges are applied earlier in the pipeline and produce slightly better performance on this",
    "start": "1532880",
    "end": "1538400"
  },
  {
    "text": "but either one is much much better than doing you know 10 million computations when you only have to do a thousand",
    "start": "1538400",
    "end": "1546480"
  },
  {
    "text": "okay",
    "start": "1547279",
    "end": "1549679"
  },
  {
    "text": "um let's see so sorry i should re-read the question",
    "start": "1552559",
    "end": "1558640"
  },
  {
    "text": "so i said you provided an example based on the rectangular distance calculation could you please provide an example",
    "start": "1558640",
    "end": "1565120"
  },
  {
    "text": "expression based on the other formulas so we can easily compare them without having to work out the expressions from",
    "start": "1565120",
    "end": "1571039"
  },
  {
    "text": "the formulas first um let me just see if i can",
    "start": "1571039",
    "end": "1577200"
  },
  {
    "text": "so i can definitely send them to you if you drop me an email i have them in various forms here",
    "start": "1577600",
    "end": "1585600"
  },
  {
    "text": "but i'm i wasn't set up to show them right now so why don't you drop me an email at tom hill at amazon.com and i will send you back",
    "start": "1585600",
    "end": "1595360"
  },
  {
    "text": "java forms or javascript forms of those equations you want to do a bounding box query is that just a range query like",
    "start": "1595440",
    "end": "1601600"
  },
  {
    "text": "you showed with eq equals lower bound dot dot upper bound on the long fields and the answer is yes",
    "start": "1601600",
    "end": "1611120"
  },
  {
    "text": "so yeah that's exactly what you would do um so if you want to do a range query on the latitude latitude and longitude",
    "start": "1611200",
    "end": "1617039"
  },
  {
    "text": "it would be bq you know equals longitude colon lower bound upper bound",
    "start": "1617039",
    "end": "1623200"
  },
  {
    "text": "you'd have to specify which field you're querying on once you push documents to cloud search",
    "start": "1623200",
    "end": "1629520"
  },
  {
    "text": "how fast will it index and when can you begin querying um cloud search we usually say it's",
    "start": "1629520",
    "end": "1634960"
  },
  {
    "text": "seconds to minutes so it depends on how much data you're pushing but it's there quickly",
    "start": "1634960",
    "end": "1640399"
  },
  {
    "text": "um you can start searching and it'll start show immediately but it'll start showing up you know in a few seconds which is more",
    "start": "1640399",
    "end": "1647360"
  },
  {
    "text": "typical typically you know 10 to 30 seconds but it can take longer depending on",
    "start": "1647360",
    "end": "1652640"
  },
  {
    "text": "load etc let's see can cloud search be used for big data depends on your definition of big data",
    "start": "1652640",
    "end": "1659919"
  },
  {
    "text": "um so yes so up to terabytes",
    "start": "1659919",
    "end": "1665120"
  },
  {
    "text": "we're not the pedobacks yet so but yes you can definitely do some",
    "start": "1665120",
    "end": "1670240"
  },
  {
    "text": "interesting big data things with cloud search",
    "start": "1670240",
    "end": "1673840"
  },
  {
    "text": "all right and yeah you can also combine cloud search with dynamo to",
    "start": "1676880",
    "end": "1683120"
  },
  {
    "text": "process you know really large amounts of data in dynamo and then extract the text and move it",
    "start": "1683120",
    "end": "1688640"
  },
  {
    "text": "over to cloud search to use the two in combination so you get good search results",
    "start": "1688640",
    "end": "1694240"
  },
  {
    "text": "coupled with the massive data quality handling of dynamo",
    "start": "1694240",
    "end": "1699440"
  },
  {
    "text": "oh okay sorry i had a couple more um it says when should i look for things in in zip code or city versus",
    "start": "1700880",
    "end": "1707679"
  },
  {
    "text": "within a radius i would always try to go with the restriction for a city or a zip code",
    "start": "1707679",
    "end": "1714799"
  },
  {
    "text": "first just because that's going to perform better than the computations you need to restrict to a range so i would always",
    "start": "1714799",
    "end": "1722320"
  },
  {
    "text": "say narrow it down to california or boston or you know texas whatever to narrow things",
    "start": "1722320",
    "end": "1729440"
  },
  {
    "text": "down and then if you want to you can also do a numeric restriction like a zip code range but i would always",
    "start": "1729440",
    "end": "1735600"
  },
  {
    "text": "start with the literal restriction just to chunk your data down to a smaller section",
    "start": "1735600",
    "end": "1742960"
  },
  {
    "text": "let's see i had a question about using cartesian cartesian tiers and yes you could implement them on",
    "start": "1742960",
    "end": "1748480"
  },
  {
    "text": "on cloud search but it'd be mostly on you so it's just a set of boolean queries",
    "start": "1748480",
    "end": "1755679"
  },
  {
    "text": "basically you'll index the data you need to do the cartesian tiers and then you can implement them for those that are wondering what i'm",
    "start": "1755679",
    "end": "1761679"
  },
  {
    "text": "talking about cartesian tiers is just another way of implementing uh approximation of distance filtering on a search engine",
    "start": "1761679",
    "end": "1769679"
  },
  {
    "text": "so it's just a mathematical thing you can do",
    "start": "1769679",
    "end": "1774960"
  },
  {
    "text": "suppose i want to locate a restaurant in australia how can i get an accurate location since longitude and latitude",
    "start": "1776640",
    "end": "1784799"
  },
  {
    "text": "are being used for travel purposes and not business um i'm not",
    "start": "1784799",
    "end": "1792159"
  },
  {
    "text": "quite following that so so you should be able to get a latitude",
    "start": "1792159",
    "end": "1798240"
  },
  {
    "text": "and accurate latitude and longitude um from them by using one of the geocoding services",
    "start": "1798240",
    "end": "1804559"
  },
  {
    "text": "so you just type the location into the geocoding service it would give you back a latitude and longitude you'd include that in your",
    "start": "1804559",
    "end": "1811200"
  },
  {
    "text": "document in cloud search and then you'd use the user's location which you get from their",
    "start": "1811200",
    "end": "1816640"
  },
  {
    "text": "phone or from their browser all modern browser support to your location um so you wouldn't be able to do that",
    "start": "1816640",
    "end": "1823919"
  },
  {
    "text": "very easily for a restaurant in australia we've got the question will geospatial",
    "start": "1823919",
    "end": "1829600"
  },
  {
    "text": "functions be built into cloud search in the future we are definitely looking into doing that i don't i can't",
    "start": "1829600",
    "end": "1836080"
  },
  {
    "text": "make commitments about unreleased features at the moment but that would be a very obvious thing to do",
    "start": "1836080",
    "end": "1842480"
  },
  {
    "text": "so question about what is the performance difference of literal ranges",
    "start": "1842480",
    "end": "1848080"
  },
  {
    "text": "um versus numeric data and the answer that one i'm going to just",
    "start": "1848080",
    "end": "1853600"
  },
  {
    "text": "pop back here as you can see these are the numeric ranges these are the literal ranges so",
    "start": "1853600",
    "end": "1859919"
  },
  {
    "text": "the literals generally perform a little bit better so i encourage you to use literal restrictions",
    "start": "1859919",
    "end": "1864960"
  },
  {
    "text": "you can also use both of them at the same time",
    "start": "1864960",
    "end": "1869200"
  },
  {
    "text": "and for performance reasons do i recommend using literal data for storing lat long within the index",
    "start": "1871279",
    "end": "1876840"
  },
  {
    "text": "um if you're going to do numeric ranges across it then it has to be numeric if you're going to say map things to",
    "start": "1876840",
    "end": "1883440"
  },
  {
    "text": "whole degrees or tenths of degrees then you could use the literal types but bear in mind you could use as i said",
    "start": "1883440",
    "end": "1890640"
  },
  {
    "text": "you can use a literal and a numeric filter so you could say i'm going to approximate san francisco by saying plus or minus one degree",
    "start": "1890640",
    "end": "1897840"
  },
  {
    "text": "and then i could use the the lat long as a numeric type if i wanted to apply a range to that",
    "start": "1897840",
    "end": "1903200"
  },
  {
    "text": "to restrict things a little bit more all right i think we've got all of them",
    "start": "1903200",
    "end": "1909600"
  },
  {
    "text": "there so i'd like to thank you all very much for coming i'd like to reiterate that",
    "start": "1909600",
    "end": "1917279"
  },
  {
    "text": "we'll have these slides will be on slideshare and we will be sending you a link to that",
    "start": "1917279",
    "end": "1922399"
  },
  {
    "text": "and um youtube the recording will be on the youtube channel and thank you all very much for coming",
    "start": "1922399",
    "end": "1928720"
  },
  {
    "text": "and uh feel free to contact me tom hill at amazon.com if you have any questions thank you all very much thanks for",
    "start": "1928720",
    "end": "1936960"
  },
  {
    "text": "coming",
    "start": "1937320",
    "end": "1940320"
  }
]