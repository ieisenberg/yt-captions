[
  {
    "start": "0",
    "end": "30000"
  },
  {
    "text": "hi",
    "start": "5120",
    "end": "5759"
  },
  {
    "text": "my name is courtney mackay and today i'm",
    "start": "5759",
    "end": "7839"
  },
  {
    "text": "going to walk you through",
    "start": "7839",
    "end": "9040"
  },
  {
    "text": "this quick demo of amazon sagemaker",
    "start": "9040",
    "end": "11440"
  },
  {
    "text": "feature store",
    "start": "11440",
    "end": "13200"
  },
  {
    "text": "we'll walk through the capabilities of",
    "start": "13200",
    "end": "14880"
  },
  {
    "text": "sagemaker features store",
    "start": "14880",
    "end": "16640"
  },
  {
    "text": "and how feature store can be used in",
    "start": "16640",
    "end": "18480"
  },
  {
    "text": "your machine learning workflow",
    "start": "18480",
    "end": "21119"
  },
  {
    "text": "so what is sagemaker features store",
    "start": "21119",
    "end": "23760"
  },
  {
    "text": "we'll start by talking about what is",
    "start": "23760",
    "end": "25439"
  },
  {
    "text": "feature engineering",
    "start": "25439",
    "end": "26880"
  },
  {
    "text": "and why it is important and challenging",
    "start": "26880",
    "end": "30240"
  },
  {
    "start": "30000",
    "end": "160000"
  },
  {
    "text": "in machine learning features are the",
    "start": "30240",
    "end": "32160"
  },
  {
    "text": "foundation of a high quality model",
    "start": "32160",
    "end": "35200"
  },
  {
    "text": "data scientists and developers can",
    "start": "35200",
    "end": "37120"
  },
  {
    "text": "easily spend 60 percent of their time",
    "start": "37120",
    "end": "39440"
  },
  {
    "text": "designing and creating features",
    "start": "39440",
    "end": "41920"
  },
  {
    "text": "and this process often requires a few",
    "start": "41920",
    "end": "44000"
  },
  {
    "text": "iterations until a model reaches a",
    "start": "44000",
    "end": "46160"
  },
  {
    "text": "target level of accuracy",
    "start": "46160",
    "end": "48640"
  },
  {
    "text": "the challenges go beyond writing and",
    "start": "48640",
    "end": "50640"
  },
  {
    "text": "testing your feature engineering code",
    "start": "50640",
    "end": "53520"
  },
  {
    "text": "first features built by different teams",
    "start": "53520",
    "end": "56000"
  },
  {
    "text": "or during different time frames",
    "start": "56000",
    "end": "58000"
  },
  {
    "text": "are not consistent introducing",
    "start": "58000",
    "end": "60000"
  },
  {
    "text": "variations that can impact model results",
    "start": "60000",
    "end": "63520"
  },
  {
    "text": "second extensive and repetitive feature",
    "start": "63520",
    "end": "66000"
  },
  {
    "text": "engineering work",
    "start": "66000",
    "end": "67200"
  },
  {
    "text": "is often needed when productionizing new",
    "start": "67200",
    "end": "69280"
  },
  {
    "text": "features",
    "start": "69280",
    "end": "70799"
  },
  {
    "text": "and last it can be difficult to track",
    "start": "70799",
    "end": "73119"
  },
  {
    "text": "feature versions",
    "start": "73119",
    "end": "74400"
  },
  {
    "text": "and up-to-date features are often not",
    "start": "74400",
    "end": "76479"
  },
  {
    "text": "easily accessible",
    "start": "76479",
    "end": "78240"
  },
  {
    "text": "team members are at risk of duplicating",
    "start": "78240",
    "end": "80240"
  },
  {
    "text": "feature engineering code",
    "start": "80240",
    "end": "82000"
  },
  {
    "text": "because they have no awareness of or",
    "start": "82000",
    "end": "84000"
  },
  {
    "text": "ability to access previously created",
    "start": "84000",
    "end": "86240"
  },
  {
    "text": "features",
    "start": "86240",
    "end": "88640"
  },
  {
    "text": "to address these challenges sagemaker",
    "start": "88640",
    "end": "90960"
  },
  {
    "text": "feature store provides a fully managed",
    "start": "90960",
    "end": "93360"
  },
  {
    "text": "central repository for creating sharing",
    "start": "93360",
    "end": "96720"
  },
  {
    "text": "and retrieving machine learning features",
    "start": "96720",
    "end": "99040"
  },
  {
    "text": "for training and inference with low",
    "start": "99040",
    "end": "100880"
  },
  {
    "text": "latency",
    "start": "100880",
    "end": "102960"
  },
  {
    "text": "features stored in sagemaker feature",
    "start": "102960",
    "end": "104799"
  },
  {
    "text": "store are organized in groups",
    "start": "104799",
    "end": "107119"
  },
  {
    "text": "and tagged with metadata making it easy",
    "start": "107119",
    "end": "109840"
  },
  {
    "text": "to securely store and retrieve features",
    "start": "109840",
    "end": "112720"
  },
  {
    "text": "without the heavy lifting of managing",
    "start": "112720",
    "end": "114799"
  },
  {
    "text": "the infrastructure",
    "start": "114799",
    "end": "117119"
  },
  {
    "text": "using sagemaker future store you can",
    "start": "117119",
    "end": "119600"
  },
  {
    "text": "quickly discover available features",
    "start": "119600",
    "end": "122000"
  },
  {
    "text": "and determine if they would be useful",
    "start": "122000",
    "end": "123840"
  },
  {
    "text": "for your models",
    "start": "123840",
    "end": "126079"
  },
  {
    "text": "multiple teams can access a feature",
    "start": "126079",
    "end": "128080"
  },
  {
    "text": "store enabling",
    "start": "128080",
    "end": "129200"
  },
  {
    "text": "sharing and reuse of features across",
    "start": "129200",
    "end": "131200"
  },
  {
    "text": "teams",
    "start": "131200",
    "end": "133200"
  },
  {
    "text": "in this demo we will be working in",
    "start": "133200",
    "end": "135040"
  },
  {
    "text": "sagemaker studio",
    "start": "135040",
    "end": "136720"
  },
  {
    "text": "which is a fully integrated development",
    "start": "136720",
    "end": "138800"
  },
  {
    "text": "environment",
    "start": "138800",
    "end": "139760"
  },
  {
    "text": "for machine learning providing complete",
    "start": "139760",
    "end": "142239"
  },
  {
    "text": "access control and visibility into each",
    "start": "142239",
    "end": "144800"
  },
  {
    "text": "machine learning development step",
    "start": "144800",
    "end": "147120"
  },
  {
    "text": "all in one place in order to follow",
    "start": "147120",
    "end": "149920"
  },
  {
    "text": "along with this demo",
    "start": "149920",
    "end": "151120"
  },
  {
    "text": "you will need to clone the example",
    "start": "151120",
    "end": "152720"
  },
  {
    "text": "notebook to your own sagemaker studio",
    "start": "152720",
    "end": "155440"
  },
  {
    "text": "notebook instance",
    "start": "155440",
    "end": "158400"
  },
  {
    "start": "160000",
    "end": "181000"
  },
  {
    "text": "once you are in sagemaker studio you can",
    "start": "161280",
    "end": "163760"
  },
  {
    "text": "go ahead",
    "start": "163760",
    "end": "164480"
  },
  {
    "text": "and click on the get tab and clone the",
    "start": "164480",
    "end": "166800"
  },
  {
    "text": "repository",
    "start": "166800",
    "end": "169599"
  },
  {
    "text": "i already have the notebook cloned in my",
    "start": "169599",
    "end": "171599"
  },
  {
    "text": "folder so i'll go ahead and open the",
    "start": "171599",
    "end": "173840"
  },
  {
    "text": "feature store",
    "start": "173840",
    "end": "174640"
  },
  {
    "text": "demo notebook",
    "start": "174640",
    "end": "177519"
  },
  {
    "start": "181000",
    "end": "335000"
  },
  {
    "text": "this python code can be run entirely or",
    "start": "182560",
    "end": "185680"
  },
  {
    "text": "you can run the notebook cell by cell",
    "start": "185680",
    "end": "188159"
  },
  {
    "text": "we'll walk through a pre-run version of",
    "start": "188159",
    "end": "189840"
  },
  {
    "text": "the notebook so that we can see",
    "start": "189840",
    "end": "191680"
  },
  {
    "text": "all of the outputs at once before",
    "start": "191680",
    "end": "194239"
  },
  {
    "text": "starting to go through the notebook",
    "start": "194239",
    "end": "196000"
  },
  {
    "text": "we'll make sure that we have the correct",
    "start": "196000",
    "end": "197519"
  },
  {
    "text": "policies attached to the execution role",
    "start": "197519",
    "end": "200159"
  },
  {
    "text": "that you use to create your sagemaker",
    "start": "200159",
    "end": "202000"
  },
  {
    "text": "studio instance",
    "start": "202000",
    "end": "204000"
  },
  {
    "text": "we will need the following three",
    "start": "204000",
    "end": "205840"
  },
  {
    "text": "policies",
    "start": "205840",
    "end": "207440"
  },
  {
    "text": "sagemaker full access sagemaker feature",
    "start": "207440",
    "end": "210720"
  },
  {
    "text": "store access",
    "start": "210720",
    "end": "212239"
  },
  {
    "text": "and s3 full access",
    "start": "212239",
    "end": "216000"
  },
  {
    "text": "now let's first find and copy the role",
    "start": "216640",
    "end": "219120"
  },
  {
    "text": "name you used to create the studio",
    "start": "219120",
    "end": "221040"
  },
  {
    "text": "instance",
    "start": "221040",
    "end": "222319"
  },
  {
    "text": "you can find your execution role by",
    "start": "222319",
    "end": "224560"
  },
  {
    "text": "going to the sagemaker console",
    "start": "224560",
    "end": "228319"
  },
  {
    "text": "opening amazon studio by either clicking",
    "start": "229280",
    "end": "231760"
  },
  {
    "text": "in the left window",
    "start": "231760",
    "end": "233120"
  },
  {
    "text": "or using the right button",
    "start": "233120",
    "end": "241680"
  },
  {
    "text": "and under studio summary you will find",
    "start": "241680",
    "end": "243920"
  },
  {
    "text": "the execution role name",
    "start": "243920",
    "end": "247280"
  },
  {
    "text": "copy the rule name",
    "start": "247439",
    "end": "250640"
  },
  {
    "text": "and then we'll navigate to the iam",
    "start": "252480",
    "end": "254319"
  },
  {
    "text": "console to make sure that we have the",
    "start": "254319",
    "end": "255920"
  },
  {
    "text": "correct policies attached",
    "start": "255920",
    "end": "259600"
  },
  {
    "text": "using the search bar at the top of the",
    "start": "260479",
    "end": "262079"
  },
  {
    "text": "screen",
    "start": "262079",
    "end": "263840"
  },
  {
    "text": "search for iam",
    "start": "263840",
    "end": "269199"
  },
  {
    "text": "click on iam and will take us to the iam",
    "start": "269199",
    "end": "272800"
  },
  {
    "text": "console",
    "start": "272800",
    "end": "275360"
  },
  {
    "text": "choosing roles in the left navigation",
    "start": "278320",
    "end": "280960"
  },
  {
    "text": "pane",
    "start": "280960",
    "end": "283840"
  },
  {
    "text": "we can search for the execution role",
    "start": "287520",
    "end": "289360"
  },
  {
    "text": "that we just copied",
    "start": "289360",
    "end": "290720"
  },
  {
    "text": "from the studio summary",
    "start": "290720",
    "end": "296320"
  },
  {
    "text": "choose the role name and it will bring",
    "start": "296320",
    "end": "298240"
  },
  {
    "text": "us to the detail page for this role",
    "start": "298240",
    "end": "302000"
  },
  {
    "text": "under permissions we can review the",
    "start": "302000",
    "end": "303840"
  },
  {
    "text": "permissions currently attached to the",
    "start": "303840",
    "end": "305600"
  },
  {
    "text": "execution rule",
    "start": "305600",
    "end": "307039"
  },
  {
    "text": "to check if the three required policies",
    "start": "307039",
    "end": "309520"
  },
  {
    "text": "are listed",
    "start": "309520",
    "end": "312160"
  },
  {
    "text": "if you are missing any of the required",
    "start": "313600",
    "end": "315680"
  },
  {
    "text": "policies",
    "start": "315680",
    "end": "316880"
  },
  {
    "text": "you can choose attach policies",
    "start": "316880",
    "end": "324720"
  },
  {
    "text": "and use the search bar to find the",
    "start": "324720",
    "end": "326479"
  },
  {
    "text": "policies that you're missing from the",
    "start": "326479",
    "end": "328080"
  },
  {
    "text": "list",
    "start": "328080",
    "end": "328720"
  },
  {
    "text": "and attach these necessary policies",
    "start": "328720",
    "end": "332639"
  },
  {
    "start": "335000",
    "end": "438000"
  },
  {
    "text": "great now we have everything we need to",
    "start": "335759",
    "end": "338240"
  },
  {
    "text": "run through the notebook",
    "start": "338240",
    "end": "340320"
  },
  {
    "text": "our example uses a clinical data set",
    "start": "340320",
    "end": "342560"
  },
  {
    "text": "that we'll use to predict patients risk",
    "start": "342560",
    "end": "344560"
  },
  {
    "text": "of heart failure",
    "start": "344560",
    "end": "346160"
  },
  {
    "text": "but you can easily switch data sources",
    "start": "346160",
    "end": "348560"
  },
  {
    "text": "to fit your preferred use case",
    "start": "348560",
    "end": "351440"
  },
  {
    "text": "the data set is a public data set and",
    "start": "351440",
    "end": "353680"
  },
  {
    "text": "can be accessed at the uci machine",
    "start": "353680",
    "end": "355840"
  },
  {
    "text": "learning repository",
    "start": "355840",
    "end": "357440"
  },
  {
    "text": "as linked in the notebook the data set",
    "start": "357440",
    "end": "360639"
  },
  {
    "text": "contains medical record information for",
    "start": "360639",
    "end": "362720"
  },
  {
    "text": "heart failure patients",
    "start": "362720",
    "end": "364400"
  },
  {
    "text": "including demographic diagnostic and",
    "start": "364400",
    "end": "367360"
  },
  {
    "text": "laboratory test data",
    "start": "367360",
    "end": "370080"
  },
  {
    "text": "in this notebook we'll first introduce",
    "start": "370080",
    "end": "372000"
  },
  {
    "text": "the terminology and components of",
    "start": "372000",
    "end": "373759"
  },
  {
    "text": "feature store",
    "start": "373759",
    "end": "375199"
  },
  {
    "text": "then we'll examine our data and prepare",
    "start": "375199",
    "end": "377520"
  },
  {
    "text": "the data for future store",
    "start": "377520",
    "end": "380080"
  },
  {
    "text": "once the data is ready we will create",
    "start": "380080",
    "end": "382319"
  },
  {
    "text": "the features go through a few examples",
    "start": "382319",
    "end": "384400"
  },
  {
    "text": "on how you can work with the features",
    "start": "384400",
    "end": "386639"
  },
  {
    "text": "and lastly build a model to show how you",
    "start": "386639",
    "end": "389120"
  },
  {
    "text": "can retrieve a feature value from the",
    "start": "389120",
    "end": "390880"
  },
  {
    "text": "feature store",
    "start": "390880",
    "end": "392160"
  },
  {
    "text": "and invoke the machine learning model to",
    "start": "392160",
    "end": "394080"
  },
  {
    "text": "return a prediction",
    "start": "394080",
    "end": "397360"
  },
  {
    "text": "to help with context we will start by",
    "start": "399199",
    "end": "401280"
  },
  {
    "text": "familiarizing ourselves with a few",
    "start": "401280",
    "end": "403199"
  },
  {
    "text": "terms a feature group is the main",
    "start": "403199",
    "end": "406000"
  },
  {
    "text": "feature store resource that contains",
    "start": "406000",
    "end": "407840"
  },
  {
    "text": "metadata",
    "start": "407840",
    "end": "408639"
  },
  {
    "text": "for all the data stored in sagemaker",
    "start": "408639",
    "end": "410639"
  },
  {
    "text": "feature store",
    "start": "410639",
    "end": "412720"
  },
  {
    "text": "a feature group is a grouping of",
    "start": "412720",
    "end": "414319"
  },
  {
    "text": "features to describe records",
    "start": "414319",
    "end": "417199"
  },
  {
    "text": "you will define it in the feature store",
    "start": "417199",
    "end": "419520"
  },
  {
    "text": "and a feature group's definition is",
    "start": "419520",
    "end": "421360"
  },
  {
    "text": "composed of a list of featured",
    "start": "421360",
    "end": "422960"
  },
  {
    "text": "definitions",
    "start": "422960",
    "end": "424080"
  },
  {
    "text": "a record identifier name and",
    "start": "424080",
    "end": "426479"
  },
  {
    "text": "configurations for its online",
    "start": "426479",
    "end": "428479"
  },
  {
    "text": "and offline store now we just mentioned",
    "start": "428479",
    "end": "431919"
  },
  {
    "text": "four new terms here",
    "start": "431919",
    "end": "433440"
  },
  {
    "text": "and we'll explain them one by one",
    "start": "433440",
    "end": "437840"
  },
  {
    "start": "438000",
    "end": "604000"
  },
  {
    "text": "a feature definition consists of a",
    "start": "439039",
    "end": "440960"
  },
  {
    "text": "feature name and one of the following",
    "start": "440960",
    "end": "442800"
  },
  {
    "text": "data types",
    "start": "442800",
    "end": "444240"
  },
  {
    "text": "an integral string or fractional",
    "start": "444240",
    "end": "447680"
  },
  {
    "text": "with a name and data type this is like a",
    "start": "447680",
    "end": "450080"
  },
  {
    "text": "schema for a database table",
    "start": "450080",
    "end": "451759"
  },
  {
    "text": "if you're familiar with databases",
    "start": "451759",
    "end": "455280"
  },
  {
    "text": "a record identifier should be a unique",
    "start": "455280",
    "end": "457759"
  },
  {
    "text": "id to identify each instance of the data",
    "start": "457759",
    "end": "461280"
  },
  {
    "text": "for example primary key customer id",
    "start": "461280",
    "end": "465680"
  },
  {
    "text": "transaction id and so on",
    "start": "465680",
    "end": "468720"
  },
  {
    "text": "the record identifier name must refer to",
    "start": "468720",
    "end": "471520"
  },
  {
    "text": "the name of",
    "start": "471520",
    "end": "472240"
  },
  {
    "text": "the unique id column",
    "start": "472240",
    "end": "476000"
  },
  {
    "text": "now the offline store stores historical",
    "start": "476800",
    "end": "479919"
  },
  {
    "text": "data",
    "start": "479919",
    "end": "480560"
  },
  {
    "text": "in your s3 bucket it is used when low",
    "start": "480560",
    "end": "483759"
  },
  {
    "text": "latency reads are not needed",
    "start": "483759",
    "end": "486240"
  },
  {
    "text": "for example when you want to store and",
    "start": "486240",
    "end": "488319"
  },
  {
    "text": "serve features for exploration and model",
    "start": "488319",
    "end": "490840"
  },
  {
    "text": "training",
    "start": "490840",
    "end": "492240"
  },
  {
    "text": "in this demo we will use offline stores",
    "start": "492240",
    "end": "495120"
  },
  {
    "text": "to build our training data for modeling",
    "start": "495120",
    "end": "498879"
  },
  {
    "text": "now an online store is the low latency",
    "start": "498879",
    "end": "501680"
  },
  {
    "text": "high availability cache",
    "start": "501680",
    "end": "503360"
  },
  {
    "text": "for a feature group that enables",
    "start": "503360",
    "end": "505120"
  },
  {
    "text": "real-time lookup of records",
    "start": "505120",
    "end": "508000"
  },
  {
    "text": "you could easily access the online store",
    "start": "508000",
    "end": "510240"
  },
  {
    "text": "for the latest value of a record",
    "start": "510240",
    "end": "512880"
  },
  {
    "text": "in our demo we'll use the online store",
    "start": "512880",
    "end": "515120"
  },
  {
    "text": "to get the record for a patient in our",
    "start": "515120",
    "end": "517120"
  },
  {
    "text": "test set",
    "start": "517120",
    "end": "518159"
  },
  {
    "text": "and then trigger the model for inference",
    "start": "518159",
    "end": "521039"
  },
  {
    "text": "in our demo",
    "start": "521039",
    "end": "522080"
  },
  {
    "text": "we will use the online store to get the",
    "start": "522080",
    "end": "524159"
  },
  {
    "text": "record for a patient in our test set",
    "start": "524159",
    "end": "526959"
  },
  {
    "text": "we'll then trigger the model for",
    "start": "526959",
    "end": "528480"
  },
  {
    "text": "inference",
    "start": "528480",
    "end": "530720"
  },
  {
    "text": "lastly we have event time this is a",
    "start": "530720",
    "end": "534000"
  },
  {
    "text": "point in time when a new event occurs or",
    "start": "534000",
    "end": "536480"
  },
  {
    "text": "an update of a record",
    "start": "536480",
    "end": "538240"
  },
  {
    "text": "happens in a feature group all records",
    "start": "538240",
    "end": "541600"
  },
  {
    "text": "in the feature group",
    "start": "541600",
    "end": "542560"
  },
  {
    "text": "must have a corresponding event time",
    "start": "542560",
    "end": "545839"
  },
  {
    "text": "this can be used to track changes to a",
    "start": "545839",
    "end": "547839"
  },
  {
    "text": "record over time",
    "start": "547839",
    "end": "550320"
  },
  {
    "text": "the online store contains a record",
    "start": "550320",
    "end": "552480"
  },
  {
    "text": "corresponding",
    "start": "552480",
    "end": "553440"
  },
  {
    "text": "to the last event time for a record",
    "start": "553440",
    "end": "555519"
  },
  {
    "text": "identifier name",
    "start": "555519",
    "end": "557440"
  },
  {
    "text": "whereas the offline store contains all",
    "start": "557440",
    "end": "559760"
  },
  {
    "text": "historic",
    "start": "559760",
    "end": "560839"
  },
  {
    "text": "records",
    "start": "560839",
    "end": "563839"
  },
  {
    "text": "to tie everything together",
    "start": "566480",
    "end": "569519"
  },
  {
    "text": "the following diagram illustrates the",
    "start": "569519",
    "end": "571600"
  },
  {
    "text": "flow",
    "start": "571600",
    "end": "573519"
  },
  {
    "text": "after data is processed it will be",
    "start": "573519",
    "end": "575360"
  },
  {
    "text": "ingested into the feature store we",
    "start": "575360",
    "end": "577279"
  },
  {
    "text": "created",
    "start": "577279",
    "end": "578880"
  },
  {
    "text": "then portions of the data will be used",
    "start": "578880",
    "end": "580959"
  },
  {
    "text": "as a training set",
    "start": "580959",
    "end": "582080"
  },
  {
    "text": "to train a quick model the model will be",
    "start": "582080",
    "end": "585200"
  },
  {
    "text": "deployed for future use",
    "start": "585200",
    "end": "588240"
  },
  {
    "text": "the leftout data will be used as the",
    "start": "588240",
    "end": "590160"
  },
  {
    "text": "test data",
    "start": "590160",
    "end": "591519"
  },
  {
    "text": "and we'll use it to trigger the deployed",
    "start": "591519",
    "end": "593440"
  },
  {
    "text": "model to make a prediction",
    "start": "593440",
    "end": "597040"
  },
  {
    "text": "now let's start developing",
    "start": "600240",
    "end": "605200"
  },
  {
    "start": "604000",
    "end": "619000"
  },
  {
    "text": "the setup is pretty standard we'll set",
    "start": "605200",
    "end": "607360"
  },
  {
    "text": "up the sagemaker python sdk",
    "start": "607360",
    "end": "609440"
  },
  {
    "text": "and boto client an s3 bucket for the",
    "start": "609440",
    "end": "612720"
  },
  {
    "text": "offline store",
    "start": "612720",
    "end": "613920"
  },
  {
    "text": "and the execution role",
    "start": "613920",
    "end": "619680"
  },
  {
    "start": "619000",
    "end": "691000"
  },
  {
    "text": "as we mentioned before the data set",
    "start": "619680",
    "end": "621680"
  },
  {
    "text": "we're going to use in this demo",
    "start": "621680",
    "end": "623360"
  },
  {
    "text": "is a clinical records data to predict",
    "start": "623360",
    "end": "625440"
  },
  {
    "text": "heart failure",
    "start": "625440",
    "end": "627120"
  },
  {
    "text": "it contains electronic medical records",
    "start": "627120",
    "end": "629200"
  },
  {
    "text": "of 299 patients",
    "start": "629200",
    "end": "631519"
  },
  {
    "text": "and out of 13 columns 12 columns can be",
    "start": "631519",
    "end": "634720"
  },
  {
    "text": "used as features directly",
    "start": "634720",
    "end": "637680"
  },
  {
    "text": "the data includes information such as",
    "start": "637680",
    "end": "639839"
  },
  {
    "text": "age of the patient",
    "start": "639839",
    "end": "641360"
  },
  {
    "text": "whether or not the patient has diabetes",
    "start": "641360",
    "end": "644160"
  },
  {
    "text": "and information on the patient's",
    "start": "644160",
    "end": "645839"
  },
  {
    "text": "laboratory results",
    "start": "645839",
    "end": "647040"
  },
  {
    "text": "such as reported levels of serum sodium",
    "start": "647040",
    "end": "649519"
  },
  {
    "text": "in the blood",
    "start": "649519",
    "end": "650320"
  },
  {
    "text": "and so on the target column is a death",
    "start": "650320",
    "end": "654240"
  },
  {
    "text": "event column",
    "start": "654240",
    "end": "655600"
  },
  {
    "text": "where one means the patient has heart",
    "start": "655600",
    "end": "657440"
  },
  {
    "text": "failure",
    "start": "657440",
    "end": "659040"
  },
  {
    "text": "our model is going to predict the",
    "start": "659040",
    "end": "660880"
  },
  {
    "text": "patient survival from the clinical",
    "start": "660880",
    "end": "662640"
  },
  {
    "text": "records",
    "start": "662640",
    "end": "664000"
  },
  {
    "text": "to clarify the time column here is not",
    "start": "664000",
    "end": "666880"
  },
  {
    "text": "the event time column we just mentioned",
    "start": "666880",
    "end": "669040"
  },
  {
    "text": "when reviewing feature store definitions",
    "start": "669040",
    "end": "672560"
  },
  {
    "text": "in the data set the time column is the",
    "start": "672560",
    "end": "674720"
  },
  {
    "text": "follow-up period",
    "start": "674720",
    "end": "675920"
  },
  {
    "text": "or the duration of time between when the",
    "start": "675920",
    "end": "678640"
  },
  {
    "text": "patient was last seen",
    "start": "678640",
    "end": "680320"
  },
  {
    "text": "and either death or the end of the study",
    "start": "680320",
    "end": "682480"
  },
  {
    "text": "period",
    "start": "682480",
    "end": "684240"
  },
  {
    "text": "we will create the feature store event",
    "start": "684240",
    "end": "686240"
  },
  {
    "text": "time column later in the demo",
    "start": "686240",
    "end": "690079"
  },
  {
    "text": "so we'll download the data from the",
    "start": "691839",
    "end": "693440"
  },
  {
    "text": "online source upload it to our s3 bucket",
    "start": "693440",
    "end": "696640"
  },
  {
    "text": "under the data folder and check if any",
    "start": "696640",
    "end": "699240"
  },
  {
    "text": "pre-processing is required",
    "start": "699240",
    "end": "703839"
  },
  {
    "start": "704000",
    "end": "739000"
  },
  {
    "text": "in this case the data set contains no",
    "start": "705120",
    "end": "707440"
  },
  {
    "text": "missing values",
    "start": "707440",
    "end": "708720"
  },
  {
    "text": "and all columns are either numerical or",
    "start": "708720",
    "end": "711120"
  },
  {
    "text": "binary",
    "start": "711120",
    "end": "712320"
  },
  {
    "text": "therefore no processing or feature",
    "start": "712320",
    "end": "714240"
  },
  {
    "text": "engineering is needed in our case",
    "start": "714240",
    "end": "716399"
  },
  {
    "text": "we'll just use all of the features as",
    "start": "716399",
    "end": "718399"
  },
  {
    "text": "they are",
    "start": "718399",
    "end": "719920"
  },
  {
    "text": "but depending on your data and your use",
    "start": "719920",
    "end": "722160"
  },
  {
    "text": "case you should examine the data and",
    "start": "722160",
    "end": "724079"
  },
  {
    "text": "decide if there's any pre-processing or",
    "start": "724079",
    "end": "726480"
  },
  {
    "text": "feature engineering steps",
    "start": "726480",
    "end": "728320"
  },
  {
    "text": "needed before you ingest your data into",
    "start": "728320",
    "end": "730720"
  },
  {
    "text": "feature store",
    "start": "730720",
    "end": "733360"
  },
  {
    "text": "now let's get our data ready for feature",
    "start": "733760",
    "end": "736000"
  },
  {
    "text": "store",
    "start": "736000",
    "end": "738320"
  },
  {
    "start": "739000",
    "end": "763000"
  },
  {
    "text": "take a look at the data types and make",
    "start": "739360",
    "end": "741279"
  },
  {
    "text": "sure they're all correct and readable by",
    "start": "741279",
    "end": "743200"
  },
  {
    "text": "feature store",
    "start": "743200",
    "end": "744959"
  },
  {
    "text": "as we mentioned when we went over the",
    "start": "744959",
    "end": "746480"
  },
  {
    "text": "terminology specific features will be",
    "start": "746480",
    "end": "749120"
  },
  {
    "text": "flagged as a record identifier",
    "start": "749120",
    "end": "751279"
  },
  {
    "text": "and event time and a combination of",
    "start": "751279",
    "end": "753839"
  },
  {
    "text": "record identifier name",
    "start": "753839",
    "end": "755279"
  },
  {
    "text": "and a time stamp uniquely identifies a",
    "start": "755279",
    "end": "758000"
  },
  {
    "text": "record within a feature group",
    "start": "758000",
    "end": "761680"
  },
  {
    "start": "763000",
    "end": "815000"
  },
  {
    "text": "we'll need to specify a record",
    "start": "764160",
    "end": "765760"
  },
  {
    "text": "identifier and event time in this case",
    "start": "765760",
    "end": "768320"
  },
  {
    "text": "since the raw data does not contain the",
    "start": "768320",
    "end": "770160"
  },
  {
    "text": "two columns so we'll need to create them",
    "start": "770160",
    "end": "773760"
  },
  {
    "text": "we're going to create a unique id for",
    "start": "773760",
    "end": "775760"
  },
  {
    "text": "each patient as a record identifier",
    "start": "775760",
    "end": "778079"
  },
  {
    "text": "column",
    "start": "778079",
    "end": "780079"
  },
  {
    "text": "and then we'll create an event timestamp",
    "start": "780079",
    "end": "782000"
  },
  {
    "text": "for each record as the event time column",
    "start": "782000",
    "end": "786079"
  },
  {
    "text": "lastly we'll make sure to check the data",
    "start": "786079",
    "end": "788880"
  },
  {
    "text": "types for each column and convert any",
    "start": "788880",
    "end": "791120"
  },
  {
    "text": "object type",
    "start": "791120",
    "end": "792160"
  },
  {
    "text": "to string type so that the sagemaker",
    "start": "792160",
    "end": "794720"
  },
  {
    "text": "feature store python sdk",
    "start": "794720",
    "end": "796959"
  },
  {
    "text": "can map the string data type to string",
    "start": "796959",
    "end": "799200"
  },
  {
    "text": "feature type",
    "start": "799200",
    "end": "801360"
  },
  {
    "text": "float will be mapped to fractional and",
    "start": "801360",
    "end": "803600"
  },
  {
    "text": "int will be mapped to integral",
    "start": "803600",
    "end": "806959"
  },
  {
    "text": "now that our data has all of the",
    "start": "806959",
    "end": "808560"
  },
  {
    "text": "necessary components",
    "start": "808560",
    "end": "810480"
  },
  {
    "text": "we will create a feature group",
    "start": "810480",
    "end": "815760"
  },
  {
    "start": "815000",
    "end": "850000"
  },
  {
    "text": "when you set up your feature groups you",
    "start": "815760",
    "end": "817600"
  },
  {
    "text": "need to customize the feature group with",
    "start": "817600",
    "end": "819440"
  },
  {
    "text": "a unique",
    "start": "819440",
    "end": "820079"
  },
  {
    "text": "name in this case we will call the",
    "start": "820079",
    "end": "822560"
  },
  {
    "text": "feature group",
    "start": "822560",
    "end": "823360"
  },
  {
    "text": "clinical feature group and add the",
    "start": "823360",
    "end": "825920"
  },
  {
    "text": "current timestamp",
    "start": "825920",
    "end": "827040"
  },
  {
    "text": "to it to make it unique then we'll set",
    "start": "827040",
    "end": "830399"
  },
  {
    "text": "up the feature group with the feature",
    "start": "830399",
    "end": "831839"
  },
  {
    "text": "group class",
    "start": "831839",
    "end": "832560"
  },
  {
    "text": "by passing in the name and the session",
    "start": "832560",
    "end": "836399"
  },
  {
    "text": "next we will need to define the record",
    "start": "836399",
    "end": "838560"
  },
  {
    "text": "identifier name",
    "start": "838560",
    "end": "839680"
  },
  {
    "text": "and event time name we created these two",
    "start": "839680",
    "end": "842639"
  },
  {
    "text": "columns in the last step",
    "start": "842639",
    "end": "844000"
  },
  {
    "text": "which is the patient id and event time",
    "start": "844000",
    "end": "848560"
  },
  {
    "text": "we can now load the feature definitions",
    "start": "850560",
    "end": "852639"
  },
  {
    "text": "by passing the clinical data frame that",
    "start": "852639",
    "end": "854800"
  },
  {
    "text": "contains the feature data",
    "start": "854800",
    "end": "857199"
  },
  {
    "text": "sagemaker feature store python sdk will",
    "start": "857199",
    "end": "860320"
  },
  {
    "text": "auto detect the data schema",
    "start": "860320",
    "end": "862000"
  },
  {
    "text": "based on the input data you can also",
    "start": "862000",
    "end": "865040"
  },
  {
    "text": "follow the step-by-step guide",
    "start": "865040",
    "end": "866720"
  },
  {
    "text": "linked in the notebook to use a schema",
    "start": "866720",
    "end": "869360"
  },
  {
    "text": "instead of automatic detection",
    "start": "869360",
    "end": "872720"
  },
  {
    "text": "in this step we will use the create",
    "start": "872720",
    "end": "874880"
  },
  {
    "text": "function to create the feature group",
    "start": "874880",
    "end": "878880"
  },
  {
    "start": "880000",
    "end": "1002000"
  },
  {
    "text": "note that the online store is not",
    "start": "880560",
    "end": "882240"
  },
  {
    "text": "created by default",
    "start": "882240",
    "end": "883600"
  },
  {
    "text": "so you must set this as true if you want",
    "start": "883600",
    "end": "885760"
  },
  {
    "text": "to enable it",
    "start": "885760",
    "end": "887519"
  },
  {
    "text": "the s3 uri is the s3 location of your",
    "start": "887519",
    "end": "890880"
  },
  {
    "text": "offline store",
    "start": "890880",
    "end": "892880"
  },
  {
    "text": "you can also define kms ids for offline",
    "start": "892880",
    "end": "896240"
  },
  {
    "text": "and online stores separately",
    "start": "896240",
    "end": "898320"
  },
  {
    "text": "and encrypt all of your data",
    "start": "898320",
    "end": "901360"
  },
  {
    "text": "in the case that you do not provide a",
    "start": "901360",
    "end": "903120"
  },
  {
    "text": "cmk then we ensure that your data is",
    "start": "903120",
    "end": "905680"
  },
  {
    "text": "encrypted on the server side",
    "start": "905680",
    "end": "907519"
  },
  {
    "text": "using an aws owned cmk or an aws",
    "start": "907519",
    "end": "911600"
  },
  {
    "text": "managed cmk another parameter that you",
    "start": "911600",
    "end": "915040"
  },
  {
    "text": "can define",
    "start": "915040",
    "end": "915920"
  },
  {
    "text": "are tags you can define tags to help you",
    "start": "915920",
    "end": "919120"
  },
  {
    "text": "search for",
    "start": "919120",
    "end": "919760"
  },
  {
    "text": "and manage feature groups such as",
    "start": "919760",
    "end": "922160"
  },
  {
    "text": "whether this feature group is for a dev",
    "start": "922160",
    "end": "924160"
  },
  {
    "text": "or prod environment",
    "start": "924160",
    "end": "925680"
  },
  {
    "text": "or which cost center the feature group",
    "start": "925680",
    "end": "928000"
  },
  {
    "text": "should be associated with",
    "start": "928000",
    "end": "930320"
  },
  {
    "text": "it will only take a few seconds to",
    "start": "930320",
    "end": "932240"
  },
  {
    "text": "create this feature group",
    "start": "932240",
    "end": "934480"
  },
  {
    "text": "once created let's explore what you can",
    "start": "934480",
    "end": "936880"
  },
  {
    "text": "do with the feature group",
    "start": "936880",
    "end": "939440"
  },
  {
    "text": "first you can retrieve information about",
    "start": "939440",
    "end": "941600"
  },
  {
    "text": "your feature group",
    "start": "941600",
    "end": "943040"
  },
  {
    "text": "with the describe function or",
    "start": "943040",
    "end": "946560"
  },
  {
    "text": "list all of your feature groups with the",
    "start": "946560",
    "end": "948560"
  },
  {
    "text": "list feature groups function",
    "start": "948560",
    "end": "952079"
  },
  {
    "text": "after the feature groups have been",
    "start": "952480",
    "end": "953920"
  },
  {
    "text": "created you can put data",
    "start": "953920",
    "end": "956079"
  },
  {
    "text": "into the feature groups by using the put",
    "start": "956079",
    "end": "958160"
  },
  {
    "text": "record api",
    "start": "958160",
    "end": "960160"
  },
  {
    "text": "you can use the ingest function to load",
    "start": "960160",
    "end": "962399"
  },
  {
    "text": "your feature data",
    "start": "962399",
    "end": "963920"
  },
  {
    "text": "you pass in a data frame of feature data",
    "start": "963920",
    "end": "966560"
  },
  {
    "text": "set the number of workers",
    "start": "966560",
    "end": "968240"
  },
  {
    "text": "and choose to wait for it to return or",
    "start": "968240",
    "end": "970160"
  },
  {
    "text": "not",
    "start": "970160",
    "end": "971440"
  },
  {
    "text": "for this example to accelerate the",
    "start": "971440",
    "end": "973440"
  },
  {
    "text": "ingestion process",
    "start": "973440",
    "end": "975120"
  },
  {
    "text": "we are specifying multiple workers to do",
    "start": "975120",
    "end": "977360"
  },
  {
    "text": "the job simultaneously",
    "start": "977360",
    "end": "980000"
  },
  {
    "text": "it will take less than one minute to",
    "start": "980000",
    "end": "981680"
  },
  {
    "text": "ingest data to the clinical feature",
    "start": "981680",
    "end": "983680"
  },
  {
    "text": "group we created",
    "start": "983680",
    "end": "986720"
  },
  {
    "text": "you can use the get record function to",
    "start": "986880",
    "end": "989040"
  },
  {
    "text": "retrieve the data for a specific record",
    "start": "989040",
    "end": "991519"
  },
  {
    "text": "by its record identifier",
    "start": "991519",
    "end": "995040"
  },
  {
    "text": "in this demo we'll use this function to",
    "start": "995360",
    "end": "997360"
  },
  {
    "text": "get feature values for one test patient",
    "start": "997360",
    "end": "999519"
  },
  {
    "text": "later",
    "start": "999519",
    "end": "1001839"
  },
  {
    "start": "1002000",
    "end": "1020000"
  },
  {
    "text": "additionally you can generate hive ddl",
    "start": "1003440",
    "end": "1005839"
  },
  {
    "text": "commands",
    "start": "1005839",
    "end": "1007040"
  },
  {
    "text": "the schema of the table is generated",
    "start": "1007040",
    "end": "1008800"
  },
  {
    "text": "based on the feature definitions",
    "start": "1008800",
    "end": "1011199"
  },
  {
    "text": "columns are named after the feature name",
    "start": "1011199",
    "end": "1013440"
  },
  {
    "text": "and data type",
    "start": "1013440",
    "end": "1014560"
  },
  {
    "text": "are inferred based on the feature type",
    "start": "1014560",
    "end": "1018399"
  },
  {
    "start": "1020000",
    "end": "1039000"
  },
  {
    "text": "lastly let's wait for the data to appear",
    "start": "1021199",
    "end": "1023680"
  },
  {
    "text": "in our offline store",
    "start": "1023680",
    "end": "1025438"
  },
  {
    "text": "this will take approximately five",
    "start": "1025439",
    "end": "1027438"
  },
  {
    "text": "minutes",
    "start": "1027439",
    "end": "1029839"
  },
  {
    "text": "we will use the data stored in the",
    "start": "1031280",
    "end": "1032880"
  },
  {
    "text": "offline store to create a training set",
    "start": "1032880",
    "end": "1035199"
  },
  {
    "text": "for our next step",
    "start": "1035199",
    "end": "1036839"
  },
  {
    "text": "modeling",
    "start": "1036839",
    "end": "1039839"
  },
  {
    "start": "1039000",
    "end": "1054000"
  },
  {
    "text": "since sagemaker futurestore",
    "start": "1039919",
    "end": "1041520"
  },
  {
    "text": "automatically builds an aws glue",
    "start": "1041520",
    "end": "1043839"
  },
  {
    "text": "data catalog when we created the feature",
    "start": "1043839",
    "end": "1046079"
  },
  {
    "text": "groups",
    "start": "1046079",
    "end": "1046959"
  },
  {
    "text": "we are going to utilize this auto built",
    "start": "1046959",
    "end": "1049039"
  },
  {
    "text": "catalog to build our training set",
    "start": "1049039",
    "end": "1053840"
  },
  {
    "start": "1054000",
    "end": "1096000"
  },
  {
    "text": "we run an athena query that does a",
    "start": "1054480",
    "end": "1056480"
  },
  {
    "text": "simple select from the table",
    "start": "1056480",
    "end": "1058320"
  },
  {
    "text": "and limit 290 random samples in the",
    "start": "1058320",
    "end": "1060880"
  },
  {
    "text": "offline store in s3 from the feature",
    "start": "1060880",
    "end": "1062960"
  },
  {
    "text": "group",
    "start": "1062960",
    "end": "1064160"
  },
  {
    "text": "for testing purposes we left out nine",
    "start": "1064160",
    "end": "1066400"
  },
  {
    "text": "records when creating the training data",
    "start": "1066400",
    "end": "1068080"
  },
  {
    "text": "set",
    "start": "1068080",
    "end": "1068799"
  },
  {
    "text": "so that we can use the left out nine",
    "start": "1068799",
    "end": "1070799"
  },
  {
    "text": "records as test data for the reference",
    "start": "1070799",
    "end": "1073840"
  },
  {
    "text": "you could also do a train test split",
    "start": "1073840",
    "end": "1075760"
  },
  {
    "text": "here",
    "start": "1075760",
    "end": "1077520"
  },
  {
    "text": "we'll make a note of the patient ids",
    "start": "1077520",
    "end": "1079360"
  },
  {
    "text": "left out for testing to retrieve the",
    "start": "1079360",
    "end": "1081280"
  },
  {
    "text": "feature values",
    "start": "1081280",
    "end": "1082799"
  },
  {
    "text": "by the patient id later on",
    "start": "1082799",
    "end": "1086559"
  },
  {
    "text": "next we get the data ready for training",
    "start": "1087280",
    "end": "1089600"
  },
  {
    "text": "by keeping only the feature columns",
    "start": "1089600",
    "end": "1091919"
  },
  {
    "text": "and putting the target variable in the",
    "start": "1091919",
    "end": "1093760"
  },
  {
    "text": "first column",
    "start": "1093760",
    "end": "1096559"
  },
  {
    "text": "we will also need to upload the data to",
    "start": "1096880",
    "end": "1098880"
  },
  {
    "text": "s3 since we're going to create a",
    "start": "1098880",
    "end": "1100799"
  },
  {
    "text": "sagemaker training job and sagemaker",
    "start": "1100799",
    "end": "1103120"
  },
  {
    "text": "training jobs",
    "start": "1103120",
    "end": "1104080"
  },
  {
    "text": "read from s3 by default",
    "start": "1104080",
    "end": "1109120"
  },
  {
    "text": "now let's train and deploy a quick model",
    "start": "1109120",
    "end": "1111760"
  },
  {
    "text": "for inference",
    "start": "1111760",
    "end": "1114559"
  },
  {
    "start": "1116000",
    "end": "1176000"
  },
  {
    "text": "for model training we will use a",
    "start": "1116960",
    "end": "1118720"
  },
  {
    "text": "sagemaker built-in algorithm",
    "start": "1118720",
    "end": "1120559"
  },
  {
    "text": "called xgboost to predict if a patient",
    "start": "1120559",
    "end": "1123280"
  },
  {
    "text": "is likely to have heart failure",
    "start": "1123280",
    "end": "1126080"
  },
  {
    "text": "sagemaker built-in algorithms provide",
    "start": "1126080",
    "end": "1128240"
  },
  {
    "text": "highly optimized implementations of",
    "start": "1128240",
    "end": "1130400"
  },
  {
    "text": "popular machine learning algorithms",
    "start": "1130400",
    "end": "1133200"
  },
  {
    "text": "simplifying the machine learning",
    "start": "1133200",
    "end": "1134640"
  },
  {
    "text": "development and accelerating training",
    "start": "1134640",
    "end": "1136559"
  },
  {
    "text": "and deployment",
    "start": "1136559",
    "end": "1138720"
  },
  {
    "text": "we will call the sagemaker xgboost",
    "start": "1138720",
    "end": "1140960"
  },
  {
    "text": "container",
    "start": "1140960",
    "end": "1141919"
  },
  {
    "text": "and construct a generic sagemaker",
    "start": "1141919",
    "end": "1143840"
  },
  {
    "text": "estimator",
    "start": "1143840",
    "end": "1145919"
  },
  {
    "text": "in this example we'll skip",
    "start": "1145919",
    "end": "1147280"
  },
  {
    "text": "hyperparameter tuning and go with the",
    "start": "1147280",
    "end": "1149200"
  },
  {
    "text": "default hyper",
    "start": "1149200",
    "end": "1150000"
  },
  {
    "text": "parameters as our goal is not",
    "start": "1150000",
    "end": "1151840"
  },
  {
    "text": "necessarily to achieve the best model in",
    "start": "1151840",
    "end": "1153760"
  },
  {
    "text": "this case",
    "start": "1153760",
    "end": "1154720"
  },
  {
    "text": "but to demonstrate feature store",
    "start": "1154720",
    "end": "1156240"
  },
  {
    "text": "capabilities",
    "start": "1156240",
    "end": "1159039"
  },
  {
    "text": "we train the model for 50 rounds and",
    "start": "1159840",
    "end": "1162080"
  },
  {
    "text": "deploy the model as a sagemaker",
    "start": "1162080",
    "end": "1164000"
  },
  {
    "text": "real-time hosted endpoint which we will",
    "start": "1164000",
    "end": "1166799"
  },
  {
    "text": "call later to generate predictions",
    "start": "1166799",
    "end": "1169760"
  },
  {
    "text": "this will take about eight to ten",
    "start": "1169760",
    "end": "1171440"
  },
  {
    "text": "minutes to complete",
    "start": "1171440",
    "end": "1174480"
  },
  {
    "text": "once the model endpoint is ready we",
    "start": "1176559",
    "end": "1178880"
  },
  {
    "text": "select a patient id",
    "start": "1178880",
    "end": "1180240"
  },
  {
    "text": "from our withheld test data set and",
    "start": "1180240",
    "end": "1182960"
  },
  {
    "text": "query our online feature group to build",
    "start": "1182960",
    "end": "1185200"
  },
  {
    "text": "our inference request",
    "start": "1185200",
    "end": "1187520"
  },
  {
    "text": "from the patient id we left out in the",
    "start": "1187520",
    "end": "1189679"
  },
  {
    "text": "training set we can choose one patient",
    "start": "1189679",
    "end": "1191919"
  },
  {
    "text": "id to test the real-time inference",
    "start": "1191919",
    "end": "1195120"
  },
  {
    "text": "in this example we choose patient 287",
    "start": "1195120",
    "end": "1198400"
  },
  {
    "text": "but you can choose either one from the",
    "start": "1198400",
    "end": "1200400"
  },
  {
    "text": "left out id list for testing",
    "start": "1200400",
    "end": "1203360"
  },
  {
    "text": "to get the feature value for a patient",
    "start": "1203360",
    "end": "1205360"
  },
  {
    "text": "in the test set from our online features",
    "start": "1205360",
    "end": "1207440"
  },
  {
    "text": "store",
    "start": "1207440",
    "end": "1208320"
  },
  {
    "text": "using this patient's id we can use the",
    "start": "1208320",
    "end": "1211120"
  },
  {
    "text": "get",
    "start": "1211120",
    "end": "1211440"
  },
  {
    "text": "record function",
    "start": "1211440",
    "end": "1214320"
  },
  {
    "text": "then we choose the feature value from",
    "start": "1215919",
    "end": "1217679"
  },
  {
    "text": "the retrieved feature list",
    "start": "1217679",
    "end": "1219679"
  },
  {
    "text": "exclude the record identifier id the",
    "start": "1219679",
    "end": "1222559"
  },
  {
    "text": "event time",
    "start": "1222559",
    "end": "1223360"
  },
  {
    "text": "and the target variable and build a list",
    "start": "1223360",
    "end": "1225919"
  },
  {
    "text": "of values as the input to the predictor",
    "start": "1225919",
    "end": "1230320"
  },
  {
    "text": "the predictor will call our hosted model",
    "start": "1232320",
    "end": "1234400"
  },
  {
    "text": "and give a prediction result",
    "start": "1234400",
    "end": "1237760"
  },
  {
    "text": "in this case it seems like the model",
    "start": "1239039",
    "end": "1240880"
  },
  {
    "text": "predicted the patient",
    "start": "1240880",
    "end": "1242080"
  },
  {
    "text": "287 is very unlikely with a 0.2",
    "start": "1242080",
    "end": "1245840"
  },
  {
    "text": "chance to die during the follow-up",
    "start": "1245840",
    "end": "1248000"
  },
  {
    "text": "period",
    "start": "1248000",
    "end": "1249520"
  },
  {
    "text": "comparing to the original test data",
    "start": "1249520",
    "end": "1251280"
  },
  {
    "text": "before we excluded the target variable",
    "start": "1251280",
    "end": "1253840"
  },
  {
    "text": "where the death event is zero the model",
    "start": "1253840",
    "end": "1256559"
  },
  {
    "text": "made the correct prediction",
    "start": "1256559",
    "end": "1259360"
  },
  {
    "text": "finally once we are done with our model",
    "start": "1259360",
    "end": "1261679"
  },
  {
    "text": "we have the option of deleting our",
    "start": "1261679",
    "end": "1263440"
  },
  {
    "text": "endpoint",
    "start": "1263440",
    "end": "1264320"
  },
  {
    "text": "as well as the feature group that we",
    "start": "1264320",
    "end": "1266000"
  },
  {
    "text": "created",
    "start": "1266000",
    "end": "1268480"
  },
  {
    "text": "and there you have it we've explored",
    "start": "1269039",
    "end": "1271280"
  },
  {
    "text": "sagemaker feature store",
    "start": "1271280",
    "end": "1272799"
  },
  {
    "text": "by walking through a demo for heart",
    "start": "1272799",
    "end": "1274640"
  },
  {
    "text": "failure detection using clinical data",
    "start": "1274640",
    "end": "1278159"
  },
  {
    "text": "there are some additional resources and",
    "start": "1278159",
    "end": "1279840"
  },
  {
    "text": "extensions of the demo at the end of the",
    "start": "1279840",
    "end": "1281679"
  },
  {
    "text": "notebook",
    "start": "1281679",
    "end": "1283039"
  },
  {
    "text": "you can check the launch blog for a",
    "start": "1283039",
    "end": "1284880"
  },
  {
    "text": "guide on how to use feature store with",
    "start": "1284880",
    "end": "1286640"
  },
  {
    "text": "sagemaker studio console",
    "start": "1286640",
    "end": "1288720"
  },
  {
    "text": "or follow another blog that combines",
    "start": "1288720",
    "end": "1290559"
  },
  {
    "text": "streaming feature ingestion using amazon",
    "start": "1290559",
    "end": "1292720"
  },
  {
    "text": "kinesis",
    "start": "1292720",
    "end": "1293760"
  },
  {
    "text": "and batch feature ingestion from a",
    "start": "1293760",
    "end": "1296080"
  },
  {
    "text": "sagemaker spark container",
    "start": "1296080",
    "end": "1298799"
  },
  {
    "text": "there is an additional example of future",
    "start": "1298799",
    "end": "1300559"
  },
  {
    "text": "store notebook using credit card fraud",
    "start": "1300559",
    "end": "1302720"
  },
  {
    "text": "detection data",
    "start": "1302720",
    "end": "1304720"
  },
  {
    "text": "all of these resources are linked at the",
    "start": "1304720",
    "end": "1306559"
  },
  {
    "text": "end of the notebook",
    "start": "1306559",
    "end": "1315840"
  }
]