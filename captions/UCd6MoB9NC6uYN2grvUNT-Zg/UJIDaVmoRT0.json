[
  {
    "start": "0",
    "end": "19000"
  },
  {
    "text": "Amazon Aurora",
    "start": "0",
    "end": "910"
  },
  {
    "text": "Serverless V2 is an on demand auto scaling configuration for Amazon Aurora.",
    "start": "910",
    "end": "5450"
  },
  {
    "text": "It scales instantly to service hundreds of thousands",
    "start": "6300",
    "end": "8770"
  },
  {
    "text": "of transactions in a fraction of a second",
    "start": "8770",
    "end": "10730"
  },
  {
    "text": "adjusts its capacity and fine grained increments",
    "start": "10980",
    "end": "13629"
  },
  {
    "text": "and can save up to 90% of your",
    "start": "13770",
    "end": "15520"
  },
  {
    "text": "database costs compared to provision capacity for peak loads.",
    "start": "15520",
    "end": "18820"
  },
  {
    "start": "19000",
    "end": "137000"
  },
  {
    "text": "In this demo, we'll show you how to get started.",
    "start": "20050",
    "end": "22259"
  },
  {
    "text": "Let's begin by heading to the RDS console and clicking create database.",
    "start": "23270",
    "end": "27290"
  },
  {
    "text": "We'll go through the standard method of creating a new database, which",
    "start": "29700",
    "end": "32430"
  },
  {
    "text": "will give us an opportunity to look at the different configuration options.",
    "start": "32430",
    "end": "35460"
  },
  {
    "text": "First,",
    "start": "36850",
    "end": "37469"
  },
  {
    "text": "we select amazon Aurora as the desired engine type and then",
    "start": "37480",
    "end": "40760"
  },
  {
    "text": "choose between PostgreSQL compatible or MySQL compatible editions.",
    "start": "40760",
    "end": "44670"
  },
  {
    "text": "Let's use the MySQL compatible edition.",
    "start": "45070",
    "end": "47010"
  },
  {
    "text": "Amazon Aurora Serverless V2 is available with specific versions of",
    "start": "48610",
    "end": "52010"
  },
  {
    "text": "MySQL or PostgreSQL",
    "start": "52130",
    "end": "54040"
  },
  {
    "text": "and we can enable a filter to ensure the version we choose supports it.",
    "start": "54200",
    "end": "57370"
  },
  {
    "text": "Two sample templates are available.",
    "start": "59670",
    "end": "61260"
  },
  {
    "text": "The production sample template will do a multi AZ deployment",
    "start": "61750",
    "end": "64750"
  },
  {
    "text": "with an Aurora replica in a different availability zone.",
    "start": "64760",
    "end": "67380"
  },
  {
    "text": "This is the recommended approach for high availability.",
    "start": "68580",
    "end": "71000"
  },
  {
    "text": "Let's provide an identifier for a cluster and call it",
    "start": "72570",
    "end": "75350"
  },
  {
    "text": "my-aurora-database.",
    "start": "75450",
    "end": "77100"
  },
  {
    "text": "For the database credentials, let's use admin as the user name",
    "start": "77820",
    "end": "81240"
  },
  {
    "text": "and let RDS auto generate a password for us.",
    "start": "81430",
    "end": "83790"
  },
  {
    "text": "We select Serverless as the instance class",
    "start": "86150",
    "end": "88370"
  },
  {
    "text": "and we can configure the capacity range by specifying",
    "start": "88550",
    "end": "91000"
  },
  {
    "text": "a minimum and maximum number of",
    "start": "91000",
    "end": "92910"
  },
  {
    "text": "ACU's.",
    "start": "92910",
    "end": "93330"
  },
  {
    "text": "An ACU is an Aurora Capacity Unit",
    "start": "94890",
    "end": "97450"
  },
  {
    "text": "and one ACU provides two GB of memory",
    "start": "97660",
    "end": "100070"
  },
  {
    "text": "as well as corresponding CPU and network.",
    "start": "100170",
    "end": "102680"
  },
  {
    "text": "Securing our database is achieved by making it accessible only",
    "start": "104570",
    "end": "107750"
  },
  {
    "text": "through our existing VPC and by denying public access.",
    "start": "107750",
    "end": "110900"
  },
  {
    "text": "We create a new security group that will restrict traffic.",
    "start": "112490",
    "end": "114960"
  },
  {
    "text": "We then click on create database",
    "start": "116020",
    "end": "118320"
  },
  {
    "text": "And, in just a few minutes our database will be ready to be used.",
    "start": "118520",
    "end": "121479"
  },
  {
    "text": "We can get the auto generated password by clicking on view credential details.",
    "start": "122890",
    "end": "127090"
  },
  {
    "text": "And, the database",
    "start": "130500",
    "end": "131190"
  },
  {
    "text": "endpoint can be found in the details page under the connectivity and security tab.",
    "start": "131190",
    "end": "135270"
  },
  {
    "start": "137000",
    "end": "223000"
  },
  {
    "text": "To test connectivity to our database, we will use a pre existing environment that is",
    "start": "137470",
    "end": "141260"
  },
  {
    "text": "already configured with a security group that",
    "start": "141260",
    "end": "143150"
  },
  {
    "text": "allows network access to the database.",
    "start": "143150",
    "end": "145019"
  },
  {
    "text": "After running this command using the database endpoint and credentials,",
    "start": "146400",
    "end": "149730"
  },
  {
    "text": "we've established a connection and are now able to run SQL queries.",
    "start": "149740",
    "end": "152910"
  },
  {
    "text": "In the first part of this demo, we showed how",
    "start": "156600",
    "end": "158490"
  },
  {
    "text": "to create a new Aurora Serverless V2 cluster.",
    "start": "158490",
    "end": "160910"
  },
  {
    "text": "But, what if you already have an existing Aurora cluster?",
    "start": "162020",
    "end": "164340"
  },
  {
    "text": "If your cluster's engine version supports Aurora Serverless V2,",
    "start": "165730",
    "end": "168790"
  },
  {
    "text": "then switching to Aurora",
    "start": "168860",
    "end": "169890"
  },
  {
    "text": "Serverless V2 doesn't require an upgrade.",
    "start": "169890",
    "end": "171950"
  },
  {
    "text": "You can just add Aurora Serverless V2 DB instances to your original cluster",
    "start": "173000",
    "end": "177010"
  },
  {
    "text": "and switch the cluster to use all Aurora Serverless V2 DB instances.",
    "start": "177170",
    "end": "180770"
  },
  {
    "text": "Let's take a quick look at how to do that.",
    "start": "182020",
    "end": "183610"
  },
  {
    "text": "First, we select our existing cluster and click add reader.",
    "start": "184590",
    "end": "188170"
  },
  {
    "text": "We provide an identifier.",
    "start": "189120",
    "end": "190489"
  },
  {
    "text": "We opt for the Serverless V2 flavor and then click on add reader.",
    "start": "191730",
    "end": "195409"
  },
  {
    "text": "When the new reader becomes available,",
    "start": "196580",
    "end": "198030"
  },
  {
    "text": "after a few minutes, we can simply perform a failover to it.",
    "start": "198030",
    "end": "200670"
  },
  {
    "text": "We can then either remove the provision instances",
    "start": "204550",
    "end": "207010"
  },
  {
    "text": "or we can choose to run a mixed configuration cluster,",
    "start": "207760",
    "end": "210540"
  },
  {
    "text": "which contains both Aurora Serverless V2",
    "start": "210810",
    "end": "213150"
  },
  {
    "text": "and provisioned capacity in the same cluster.",
    "start": "213640",
    "end": "215830"
  },
  {
    "text": "To learn more about how to get started with Amazon Aurora Serverless V2,",
    "start": "217960",
    "end": "221190"
  },
  {
    "text": "please visit the link shown below.",
    "start": "221200",
    "end": "222680"
  }
]