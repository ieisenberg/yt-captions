[
  {
    "start": "0",
    "end": "150000"
  },
  {
    "text": "okay good afternoon we're going to get started welcome I'm very excited to speak with",
    "start": "760",
    "end": "8559"
  },
  {
    "text": "you this afternoon about aws's newest storage offering the Amazon elastic file",
    "start": "8559",
    "end": "15280"
  },
  {
    "text": "system or EFS my name is Edward name and I lead product management for",
    "start": "15280",
    "end": "22080"
  },
  {
    "text": "EFS during his keynote this morning Andy jasse briefly introduced EFS to the",
    "start": "22080",
    "end": "27320"
  },
  {
    "text": "world and during this session I'm going to provide details on ef's features its",
    "start": "27320",
    "end": "33800"
  },
  {
    "text": "benefits and how it can be used before I get started though let me",
    "start": "33800",
    "end": "40200"
  },
  {
    "text": "talk about goals and set expectations for the session My overall goal is to introduce",
    "start": "40200",
    "end": "46320"
  },
  {
    "text": "you to EFS what is it what features does it have and how can it help",
    "start": "46320",
    "end": "53239"
  },
  {
    "text": "you the session is intended for folks of all levels so we'll cover both beginner",
    "start": "53239",
    "end": "59079"
  },
  {
    "text": "topics and more advanced topics and as a heads up I won't be",
    "start": "59079",
    "end": "64360"
  },
  {
    "text": "doing a live Q&A at the end so if you have questions you like to ask at the end please go to the new AWS Services",
    "start": "64360",
    "end": "71520"
  },
  {
    "text": "booth and uh folks from the EFS team will be there to chat with you uh",
    "start": "71520",
    "end": "78159"
  },
  {
    "text": "one-on-one so what will I cover well first I'll provide an overview of EFS",
    "start": "79320",
    "end": "85119"
  },
  {
    "text": "I'll talk about how it fits into our current portfolio storage services I'll",
    "start": "85119",
    "end": "90400"
  },
  {
    "text": "talk about some of its key features and I'll talk about why those features",
    "start": "90400",
    "end": "95640"
  },
  {
    "text": "matter secondly I'll dive in I'll talk about EFS from a more technical",
    "start": "95640",
    "end": "101280"
  },
  {
    "text": "perspective and I'll focus on what it means to create a file system and how you access a file system from an ec2",
    "start": "101280",
    "end": "109280"
  },
  {
    "text": "instance then I'll do a live demo of creating a file system so you'll see with your own eyes what that looks like",
    "start": "109280",
    "end": "116360"
  },
  {
    "text": "and I'll also show you what it looks like to mount a file system to an E2",
    "start": "116360",
    "end": "121399"
  },
  {
    "text": "instance fourth because security is critical to all of our customers I'll spend some",
    "start": "121399",
    "end": "128200"
  },
  {
    "text": "time talking about security mechanisms that you get with EFS and then finally I'll talk about how",
    "start": "128200",
    "end": "136040"
  },
  {
    "text": "EFS spreads data across data centers and what that means from a data availability",
    "start": "136040",
    "end": "141680"
  },
  {
    "text": "and data durability perspective",
    "start": "141680",
    "end": "145959"
  },
  {
    "start": "150000",
    "end": "280000"
  },
  {
    "text": "okay so let's get started and let me Begin by talking",
    "start": "150920",
    "end": "156400"
  },
  {
    "text": "about our current storage portfolio and how how EFS enhances our current set of",
    "start": "156400",
    "end": "163440"
  },
  {
    "text": "offerings so before today we had three storage Services Amazon simple storage service",
    "start": "163440",
    "end": "170280"
  },
  {
    "text": "or S3 Amazon elastic Block store or",
    "start": "170280",
    "end": "176200"
  },
  {
    "text": "EBS and Amazon glacier S3 is object",
    "start": "176200",
    "end": "182400"
  },
  {
    "text": "storage and an object is a piece of data like a document or an image or a video",
    "start": "182400",
    "end": "190040"
  },
  {
    "text": "that's stored with metadata and it's stored in a uh flat non-hierarchical",
    "start": "190040",
    "end": "195360"
  },
  {
    "text": "structure and we call that structure a bucket you access your objects in S3 via",
    "start": "195360",
    "end": "201959"
  },
  {
    "text": "an API over the Internet it's a very simple API and S3 allows you for example to",
    "start": "201959",
    "end": "208640"
  },
  {
    "text": "create a a highly scalable uh web application that for",
    "start": "208640",
    "end": "214680"
  },
  {
    "text": "example serves rich media content and users and you do all of that by",
    "start": "214680",
    "end": "219720"
  },
  {
    "text": "interacting with the S3 API over the",
    "start": "219720",
    "end": "224640"
  },
  {
    "text": "Internet EBS is block storage and with EBS your data is presented as dis",
    "start": "225200",
    "end": "231319"
  },
  {
    "text": "volumes to your ec2 instances and EBS provides our very low",
    "start": "231319",
    "end": "237000"
  },
  {
    "text": "singled digit latency access to single ec2",
    "start": "237000",
    "end": "243159"
  },
  {
    "text": "instances and Glacier is archival storage it's our cheapest storage",
    "start": "244159",
    "end": "250000"
  },
  {
    "text": "offering and it's intended for data that's accessed very",
    "start": "250000",
    "end": "255159"
  },
  {
    "text": "infrequently and now today we have EFS EFS is file",
    "start": "256639",
    "end": "263479"
  },
  {
    "text": "storage and with the fs data is presented to your ec2 instances via a",
    "start": "263479",
    "end": "268639"
  },
  {
    "text": "file system EFS provides shared low latency access",
    "start": "268639",
    "end": "273919"
  },
  {
    "text": "from multiple ec2 instances",
    "start": "273919",
    "end": "277720"
  },
  {
    "start": "280000",
    "end": "580000"
  },
  {
    "text": "concurrently so what are the features of EFS it's a fully managed file system for",
    "start": "280039",
    "end": "287800"
  },
  {
    "text": "ec2 instances so there's no Hardware to maintain and no software file layer to",
    "start": "287800",
    "end": "295280"
  },
  {
    "text": "maintain it provides standard file system semantics so you get what you'd",
    "start": "295680",
    "end": "300840"
  },
  {
    "text": "expect from a file system you have read after write consistency you have the ability to",
    "start": "300840",
    "end": "306280"
  },
  {
    "text": "store your files in a hierarchical directory structure and you have file operations like aend and atomic rename",
    "start": "306280",
    "end": "315240"
  },
  {
    "text": "and you have the ability for example to write to a block in the middle of a",
    "start": "315240",
    "end": "320319"
  },
  {
    "text": "file it works with standard operating system apis so EFS appears like and acts",
    "start": "320440",
    "end": "327199"
  },
  {
    "text": "like any other file system that you would uh have attached to your ec2",
    "start": "327199",
    "end": "333039"
  },
  {
    "text": "instance so applications that leverage standard file system or standard operating system apis to work with files",
    "start": "333039",
    "end": "340759"
  },
  {
    "text": "will work with EFS it's sharable across thousands of",
    "start": "340759",
    "end": "346680"
  },
  {
    "text": "instances so it can serve as a data source for applications that span multiple ec2",
    "start": "346680",
    "end": "353759"
  },
  {
    "text": "instances EFS elastically grows every file system elastically grows to",
    "start": "353919",
    "end": "359120"
  },
  {
    "text": "pedabytes scale and you don't specify a provision size up front you just create",
    "start": "359120",
    "end": "364479"
  },
  {
    "text": "a file system and as you add files to it the file system automatically grows and",
    "start": "364479",
    "end": "369720"
  },
  {
    "text": "as you remove files from it the file system automatically shrinks and you pay only for the storage space that you're",
    "start": "369720",
    "end": "377159"
  },
  {
    "text": "consuming EFS delivers performance for a wide variety of workloads EFS is SSD",
    "start": "377680",
    "end": "384039"
  },
  {
    "text": "based provides consistent low latency operations file operations and it",
    "start": "384039",
    "end": "389800"
  },
  {
    "text": "provides high levels of throughput and high levels of",
    "start": "389800",
    "end": "394080"
  },
  {
    "text": "iops it's highly available and highly available and durable EFS spreads data across az's",
    "start": "395360",
    "end": "403360"
  },
  {
    "text": "within a region and that means that from an availability perspective your data is",
    "start": "403360",
    "end": "408759"
  },
  {
    "text": "highly available it also means that you can have instances running in multiple azs and those instances can access the",
    "start": "408759",
    "end": "415759"
  },
  {
    "text": "same file system and it also provides another layer of of durability or",
    "start": "415759",
    "end": "421960"
  },
  {
    "text": "protection against data loss and EFS is NFS V4",
    "start": "421960",
    "end": "429599"
  },
  {
    "text": "based and for those of you who aren't familiar with NFS NFS is a network protocol for interacting with file",
    "start": "429599",
    "end": "435680"
  },
  {
    "text": "systems so when your instance is talking with your EFS file system really it's",
    "start": "435680",
    "end": "441520"
  },
  {
    "text": "sending traffic over the network via NFS and NFS is an open standard it's widely",
    "start": "441520",
    "end": "448360"
  },
  {
    "text": "adopted and and it's included on virtually all Linux",
    "start": "448360",
    "end": "453199"
  },
  {
    "text": "distributions EFS is designed for a broad range of use cases and let me walk",
    "start": "455599",
    "end": "461199"
  },
  {
    "text": "you through a few examples content Management systems or content repositories store and serve",
    "start": "461199",
    "end": "468000"
  },
  {
    "text": "information for a wide variety of applications for example online Publications or reference libraries you",
    "start": "468000",
    "end": "474520"
  },
  {
    "text": "can use EFS as a highly durable High throughput store storage layer for these",
    "start": "474520",
    "end": "483280"
  },
  {
    "text": "applications development and build environments often have hundreds of nodes accessing a common set of of",
    "start": "483280",
    "end": "490759"
  },
  {
    "text": "source files of binaries and of other resources you can use",
    "start": "490759",
    "end": "496800"
  },
  {
    "text": "EFS as the storage layer for these development and build environments and it's high level of iops will will well",
    "start": "496800",
    "end": "504680"
  },
  {
    "text": "serve uh demanding Dev and build needs",
    "start": "504680",
    "end": "511240"
  },
  {
    "text": "many organizations provide shared file storage for groups and they also provide",
    "start": "511479",
    "end": "516959"
  },
  {
    "text": "file storage for individuals for example research scientists often share large data sets",
    "start": "516959",
    "end": "524600"
  },
  {
    "text": "amongst each other and each of them you know typically performs ad hoc analyses",
    "start": "524600",
    "end": "529880"
  },
  {
    "text": "on that data but each research scientist typically also has their own home directory with their own files in it",
    "start": "529880",
    "end": "537320"
  },
  {
    "text": "with EFS and admin administrator can create a file system and they can specify that part of",
    "start": "537320",
    "end": "543880"
  },
  {
    "text": "that file system is accessible to a particular group or a particular organization and so there's shared data",
    "start": "543880",
    "end": "551120"
  },
  {
    "text": "within that part and part of the file system or different parts of the file system are accessible only to specific",
    "start": "551120",
    "end": "558680"
  },
  {
    "text": "individuals and Big Data workloads often require file system operations and read",
    "start": "558839",
    "end": "564839"
  },
  {
    "text": "after write consistency as well as the ability to scale to high amounts of storage and high levels of",
    "start": "564839",
    "end": "570360"
  },
  {
    "text": "throughput EFS can provide file storage that ec2 clusters can work with directly",
    "start": "570360",
    "end": "576839"
  },
  {
    "text": "for Big Data workloads so why did we build",
    "start": "576839",
    "end": "584120"
  },
  {
    "start": "580000",
    "end": "715000"
  },
  {
    "text": "EFS well because operating shared file storage today is a",
    "start": "584120",
    "end": "590279"
  },
  {
    "text": "pain if you're an IT administrator providing file storage for your company you need to estimate storage",
    "start": "591399",
    "end": "598600"
  },
  {
    "text": "demand for the groups and organizations you're supporting you need to procure Hardware",
    "start": "598600",
    "end": "604360"
  },
  {
    "text": "so you need to evaluate different Hardware orders or different Hardware options you need to cost out those",
    "start": "604360",
    "end": "609680"
  },
  {
    "text": "options you may to need to build one or two cost models you need to work with your procurement team you need to track",
    "start": "609680",
    "end": "616360"
  },
  {
    "text": "orders you need to set aside physical space for the racks the storage will",
    "start": "616360",
    "end": "622880"
  },
  {
    "text": "will be part of and you need to set up and maintain Hardware of course and if your network",
    "start": "622880",
    "end": "628760"
  },
  {
    "text": "can't deliver the throughput that you want to provide to your storage you need to upgrade your network and you need to perform constant",
    "start": "628760",
    "end": "635880"
  },
  {
    "text": "monitoring of access you need to monitor for security breaches",
    "start": "635880",
    "end": "641440"
  },
  {
    "text": "Etc if you're an application owner or developer you need to estimate your need",
    "start": "642320",
    "end": "647839"
  },
  {
    "text": "for storage and spend time building a business case for why you need this space and why the business should invest",
    "start": "647839",
    "end": "654079"
  },
  {
    "text": "a large Capital amount of money upfront you realize that procurement",
    "start": "654079",
    "end": "659480"
  },
  {
    "text": "times can be long and storage isn't necessarily available when you are and need to you need to worry about how",
    "start": "659480",
    "end": "665279"
  },
  {
    "text": "quickly you're going to eat up your storage space because you don't want to run out and you know that there are these long procurement",
    "start": "665279",
    "end": "671279"
  },
  {
    "text": "times and you can't be as agile as you might want you can't run quick",
    "start": "671279",
    "end": "676519"
  },
  {
    "text": "experiments you can't spin up storage and spin it down",
    "start": "676519",
    "end": "681600"
  },
  {
    "text": "quickly and as a business owner you need to make an upfront capital investment for your equipment",
    "start": "682680",
    "end": "690680"
  },
  {
    "text": "you probably are over buying because of the long lead times and you don't want to run out of space and even in steady",
    "start": "690680",
    "end": "696800"
  },
  {
    "text": "state you're not going to want to completely fill your discs because usually bad things happen when that",
    "start": "696800",
    "end": "702720"
  },
  {
    "text": "happens and most importantly or I should say worst of all",
    "start": "702720",
    "end": "707839"
  },
  {
    "text": "you're diverting your attention your attention away from your business",
    "start": "707839",
    "end": "712720"
  },
  {
    "start": "715000",
    "end": "933000"
  },
  {
    "text": "Mission with EFS we set out to change the current State and if there are three things that",
    "start": "715519",
    "end": "722760"
  },
  {
    "text": "I'd like you to remember about EFS coming from this session here are the three things and they're",
    "start": "722760",
    "end": "729200"
  },
  {
    "text": "interrelated the first is that EFS is",
    "start": "729200",
    "end": "734600"
  },
  {
    "text": "simple the second is that EFS is",
    "start": "735320",
    "end": "740760"
  },
  {
    "text": "elastic and the third is that EFS is scalable and let me talk about each of",
    "start": "741800",
    "end": "748680"
  },
  {
    "text": "these in terms EFS is simple it's a fully managed service",
    "start": "748680",
    "end": "756800"
  },
  {
    "text": "which makes it simple to administer file systems at scale you have no file layer no software file layer to maintain you",
    "start": "756800",
    "end": "763360"
  },
  {
    "text": "have no Hardware to manage you don't have this ongoing maintenance that you need to worry about",
    "start": "763360",
    "end": "769639"
  },
  {
    "text": "and these NeverEnding upgrade refresh Cycles there's no volumes to worry about",
    "start": "769639",
    "end": "775279"
  },
  {
    "text": "no no raid groups no lungs no provisioning to deal with with and you can create a scalable file",
    "start": "775279",
    "end": "782839"
  },
  {
    "text": "system in seconds and that's probably hard for some folks in this room to believe",
    "start": "782839",
    "end": "788639"
  },
  {
    "text": "who've managed file storage in the past but I'll show you a little later how quick it is to actually create a file",
    "start": "788639",
    "end": "795160"
  },
  {
    "text": "system and start using it it provides seamless integration with existing tools and",
    "start": "795160",
    "end": "801959"
  },
  {
    "text": "apps again it's nfsv4 based which is widespread and an open protocol it",
    "start": "801959",
    "end": "808279"
  },
  {
    "text": "supports standard file system semantics and it works with standard operating system apis for interacting with",
    "start": "808279",
    "end": "816320"
  },
  {
    "text": "files and it has simple pricing it's you simply pay for the the amount of",
    "start": "816320",
    "end": "822480"
  },
  {
    "text": "gigabytes that you store per month and that's it so the simple pricing makes it",
    "start": "822480",
    "end": "828639"
  },
  {
    "text": "easy to forecast your costs EFS is",
    "start": "828639",
    "end": "835199"
  },
  {
    "text": "elastic file systems grow and Shrink automatically as you add remove files",
    "start": "835199",
    "end": "840880"
  },
  {
    "text": "there's no need to revision storage capacity or performance and I shouldn't say there's no need there's actually no",
    "start": "840880",
    "end": "846519"
  },
  {
    "text": "way to do that it's completely elastic and you pay only for the storage",
    "start": "846519",
    "end": "852120"
  },
  {
    "text": "space you use and EFS is",
    "start": "852120",
    "end": "859759"
  },
  {
    "text": "scalable file systems can grow to pyte scale and as they're growing there's no",
    "start": "859759",
    "end": "865040"
  },
  {
    "text": "need to reprovision adjust performance settings or do anything in order for your file systems to grow EFS just does",
    "start": "865040",
    "end": "872079"
  },
  {
    "text": "it all automatically for you it provides throughput it's",
    "start": "872079",
    "end": "877160"
  },
  {
    "text": "throughput in its iops scale automatically as file system grows with each gigabyte stored you get",
    "start": "877160",
    "end": "883800"
  },
  {
    "text": "a particular number of iops and a particular amount of throughput so as the amount of storage space you're using",
    "start": "883800",
    "end": "890560"
  },
  {
    "text": "grows the throughput and the iops you can drive to that storage increase",
    "start": "890560",
    "end": "896800"
  },
  {
    "text": "automatically provides consistent low l latencies lots of workloads are latency",
    "start": "896800",
    "end": "902759"
  },
  {
    "text": "sensitive EFS is SST based and low latency file operations are a core part",
    "start": "902759",
    "end": "908800"
  },
  {
    "text": "of our design and EFS provides support for thousands of concurrent NFS connections",
    "start": "908800",
    "end": "916279"
  },
  {
    "text": "to the same file system which allows you to use it as a common data source in large clusters or",
    "start": "916279",
    "end": "923279"
  },
  {
    "text": "more broadly for really any use case where you have multiple nodes accessing a single data",
    "start": "923279",
    "end": "931240"
  },
  {
    "text": "source so coming back full circle now why does all of this",
    "start": "932639",
    "end": "939720"
  },
  {
    "start": "933000",
    "end": "992000"
  },
  {
    "text": "matter to it administrators EFS eliminates the need to manage and",
    "start": "940120",
    "end": "945319"
  },
  {
    "text": "maintain file system storage at scale to application owners and",
    "start": "945319",
    "end": "952440"
  },
  {
    "text": "developers EFS makes it easy to move existing code applications and tools",
    "start": "952440",
    "end": "957880"
  },
  {
    "text": "that are used today with existing NFS servers to the AWS cloud and it also",
    "start": "957880",
    "end": "964160"
  },
  {
    "text": "provides a very simple shared file storage solution for new Cloud native",
    "start": "964160",
    "end": "970279"
  },
  {
    "text": "applications and to your business EFS offers predictable pricing with no",
    "start": "971560",
    "end": "977000"
  },
  {
    "text": "upfront investment it allows you to have increased",
    "start": "977000",
    "end": "982040"
  },
  {
    "text": "agility and allows you to spend less time managing file storage and more time",
    "start": "982040",
    "end": "987120"
  },
  {
    "text": "focusing on your business",
    "start": "987120",
    "end": "990800"
  },
  {
    "start": "992000",
    "end": "1149000"
  },
  {
    "text": "okay so now that you've had the overview of EFS let's dive in and let's talk",
    "start": "993680",
    "end": "999319"
  },
  {
    "text": "about EFS more from a technical perspective and for the sake of those in",
    "start": "999319",
    "end": "1006079"
  },
  {
    "text": "the room who might be new to AWS before I start talking about EFS specifics let",
    "start": "1006079",
    "end": "1011360"
  },
  {
    "text": "me Define a few uh AWS basic building blocks a region an availability Zone and",
    "start": "1011360",
    "end": "1018680"
  },
  {
    "text": "a virtual private cloud or",
    "start": "1018680",
    "end": "1022560"
  },
  {
    "text": "VPC a region is a geographic area where AWS services are",
    "start": "1024199",
    "end": "1029558"
  },
  {
    "text": "available and each region is designed to be completely isolated from other regions and that achieves the greatest",
    "start": "1029559",
    "end": "1036160"
  },
  {
    "text": "possible fault tolerance and stability customers choose regions for",
    "start": "1036160",
    "end": "1042000"
  },
  {
    "text": "their AWS resources so for example when you launch an ec2 instance you specify",
    "start": "1042000",
    "end": "1047360"
  },
  {
    "text": "the region that the instance should be in and customers for example will choose a region based on latency requirements or",
    "start": "1047360",
    "end": "1054520"
  },
  {
    "text": "based on legal requirements and currently there are 11",
    "start": "1054520",
    "end": "1059640"
  },
  {
    "text": "regions worldwide and that number is",
    "start": "1059640",
    "end": "1064000"
  },
  {
    "text": "growing so what's an availability zone or an AZ so each region has multiple isolated",
    "start": "1065640",
    "end": "1073600"
  },
  {
    "text": "locations known as availability zones and really an availability zone is",
    "start": "1073600",
    "end": "1078840"
  },
  {
    "text": "is a logical group of data centers there are low latency links",
    "start": "1078840",
    "end": "1084280"
  },
  {
    "text": "between A's and a region so that makes it really easy to have applications that span across multiple azs within a",
    "start": "1084280",
    "end": "1092320"
  },
  {
    "text": "region and again when you're launching a resource you're launching an ec2 instance as an example a customer will",
    "start": "1092320",
    "end": "1098679"
  },
  {
    "text": "choose an A so the customer chooses a region and then an a within that",
    "start": "1098679",
    "end": "1104320"
  },
  {
    "text": "region and note that some customers distribute their instances across multiple A's in order to have extremely",
    "start": "1104320",
    "end": "1110919"
  },
  {
    "text": "high fall tolerance and today we have 28 azs",
    "start": "1110919",
    "end": "1117320"
  },
  {
    "text": "worldwide and then virtual private cloud or VPC a VPC is a logically isolated",
    "start": "1119200",
    "end": "1125720"
  },
  {
    "text": "section of the AWS Cloud it's really a virtual Network defined by the customer when launching instances and",
    "start": "1125720",
    "end": "1132760"
  },
  {
    "text": "other resources you place those resources within a VPC and all new customers have a default",
    "start": "1132760",
    "end": "1139440"
  },
  {
    "text": "VPC but you can create your own VPC as well you can create many many vpcs if",
    "start": "1139440",
    "end": "1144520"
  },
  {
    "text": "you'd like and a lot of customers do that okay so now coming back to",
    "start": "1144520",
    "end": "1153559"
  },
  {
    "start": "1149000",
    "end": "1343000"
  },
  {
    "text": "EFS what is a file system a file system is the primary resource in EFS it's",
    "start": "1153880",
    "end": "1160080"
  },
  {
    "text": "where you store files and directories and you can create an unlimited number of file systems per",
    "start": "1160080",
    "end": "1166880"
  },
  {
    "text": "account",
    "start": "1166880",
    "end": "1169880"
  },
  {
    "text": "to access a file system from an ec2 instance you mount it um and mount is a",
    "start": "1172919",
    "end": "1179120"
  },
  {
    "text": "standard command um and after you mount it the file system will appear will act like a",
    "start": "1179120",
    "end": "1185480"
  },
  {
    "text": "local set of directories and files to your instance and note that an NFS V4 client",
    "start": "1185480",
    "end": "1193240"
  },
  {
    "text": "which is required in order for you to be able to mount an NFS file system is standard on Linux",
    "start": "1193240",
    "end": "1199280"
  },
  {
    "text": "distributions and is available for uh for Windows as",
    "start": "1199280",
    "end": "1204480"
  },
  {
    "text": "well so the the mount command that you see on this on the screen here is a",
    "start": "1204480",
    "end": "1210440"
  },
  {
    "text": "pretty basic command the dasht is for the file system type in",
    "start": "1210440",
    "end": "1217200"
  },
  {
    "text": "this case it's an nfs4 file system you provide the file systems DNS",
    "start": "1217200",
    "end": "1223360"
  },
  {
    "text": "name and I'll show you in a second how that's created and how you access that so every file system system has um",
    "start": "1223360",
    "end": "1230320"
  },
  {
    "text": "actually several DNS names and I'll explain that in a second and then you specify the local",
    "start": "1230320",
    "end": "1236360"
  },
  {
    "text": "directory that the file system will be attached to and that's",
    "start": "1236360",
    "end": "1242640"
  },
  {
    "text": "it so on the previous slide you saw that there was a DNS name",
    "start": "1245840",
    "end": "1251440"
  },
  {
    "text": "in the mount Target and that's something that's created when you set up your file system and it's provided by something we",
    "start": "1251440",
    "end": "1257559"
  },
  {
    "text": "call a mount Target so to access your file system from instances in a VPC you create Mount",
    "start": "1257559",
    "end": "1265880"
  },
  {
    "text": "Targets in that in the VPC and a mount Target is an NFS V4",
    "start": "1265880",
    "end": "1271840"
  },
  {
    "text": "endpoint so just think of it conceptually as that and a mount target has both an IP",
    "start": "1271840",
    "end": "1279240"
  },
  {
    "text": "address and a DNS name and you can use either of those in your Mount command so that's what",
    "start": "1279240",
    "end": "1285720"
  },
  {
    "text": "provides the DNS name that I was referring to",
    "start": "1285720",
    "end": "1290480"
  },
  {
    "text": "so how does it all fit together so to recap you have a",
    "start": "1292799",
    "end": "1298159"
  },
  {
    "text": "region you have a VPC and this is owned by the customer the VPC and VPC span",
    "start": "1298159",
    "end": "1304880"
  },
  {
    "text": "multiple azs within a region you the customer will have ec2",
    "start": "1304880",
    "end": "1311679"
  },
  {
    "text": "instances in your VPC and those will reside within particular",
    "start": "1311679",
    "end": "1317159"
  },
  {
    "text": "azs and in this example we have ec2 instances in two of the three azs in",
    "start": "1317159",
    "end": "1323520"
  },
  {
    "text": "this region and then you have Mount targets within each a and those act as",
    "start": "1323520",
    "end": "1331720"
  },
  {
    "text": "the Endo to the file system and that's what the ec2 instances",
    "start": "1331720",
    "end": "1337000"
  },
  {
    "text": "send their traffic",
    "start": "1337000",
    "end": "1339760"
  },
  {
    "start": "1343000",
    "end": "1455000"
  },
  {
    "text": "to we provide an API that allows you to administer your EFS file systems and all",
    "start": "1343640",
    "end": "1350559"
  },
  {
    "text": "of the API function functionality is available to you in three ways the first",
    "start": "1350559",
    "end": "1357440"
  },
  {
    "text": "is via the AWS Management console and that's aws's browser-based",
    "start": "1357440",
    "end": "1363640"
  },
  {
    "text": "management tool the second is via the AWS command",
    "start": "1363640",
    "end": "1369080"
  },
  {
    "text": "line interface or CLI and the CLI is a tool that you",
    "start": "1369080",
    "end": "1374720"
  },
  {
    "text": "download to an instance or you download to a local machine machine and it provides scripts that allow you to",
    "start": "1374720",
    "end": "1381279"
  },
  {
    "text": "manage your AWS resources from the windows or the Linux or the Unix or Mac",
    "start": "1381279",
    "end": "1386320"
  },
  {
    "text": "OS shell and then the AWS software development kit or SDK which provides",
    "start": "1386320",
    "end": "1393960"
  },
  {
    "text": "support for Java python phpn net and a few other languages for",
    "start": "1393960",
    "end": "1400919"
  },
  {
    "text": "EFS in the console the CLI and the SDK each allow you to perform a variety of",
    "start": "1404400",
    "end": "1410559"
  },
  {
    "text": "management tasks so I mentioned the API was really there to allow you to administer your file system so what does",
    "start": "1410559",
    "end": "1416279"
  },
  {
    "text": "that mean what are the types of things you can do you can create a file system you can create and manage these",
    "start": "1416279",
    "end": "1423720"
  },
  {
    "text": "Mount targets that I was talking about you can tag a file system so you",
    "start": "1423720",
    "end": "1429480"
  },
  {
    "text": "add tags to it to describe what the file system is for and any other details you want to provide about it you can delete",
    "start": "1429480",
    "end": "1436480"
  },
  {
    "text": "a file system and you can view details on the file systems in your AWS",
    "start": "1436480",
    "end": "1443279"
  },
  {
    "text": "account so you notice this isn't actually a very long list and that's because there's not much Administration",
    "start": "1443279",
    "end": "1450000"
  },
  {
    "text": "that's required of EFS file",
    "start": "1450000",
    "end": "1453679"
  },
  {
    "text": "systems as I mentioned earlier we designed EFS so that setting up and",
    "start": "1455480",
    "end": "1460799"
  },
  {
    "text": "beginning to use a file system takes under a minute and let me pause for a moment",
    "start": "1460799",
    "end": "1467760"
  },
  {
    "text": "because for those in the room who have managed either on Prem file systems or",
    "start": "1467760",
    "end": "1472960"
  },
  {
    "text": "file storage or incloud file systems or file storage via a some sort of layer on",
    "start": "1472960",
    "end": "1479440"
  },
  {
    "text": "top of uh um Cloud infrastructure that statement is likely",
    "start": "1479440",
    "end": "1487600"
  },
  {
    "text": "staggering and keep in mind that after you create the file system there's no maintenance to do there's",
    "start": "1487600",
    "end": "1494399"
  },
  {
    "text": "none so what are the steps to set up and and get access to a file system well",
    "start": "1494399",
    "end": "1500279"
  },
  {
    "text": "first you create a file system and creating a file system is a simple API call and again you can use",
    "start": "1500279",
    "end": "1508559"
  },
  {
    "text": "the the console you can use the CLI or you can use the SDK to create the file system to make",
    "start": "1508559",
    "end": "1515919"
  },
  {
    "text": "that API call the second thing you do is you create a mount Target in each asz from",
    "start": "1515919",
    "end": "1523200"
  },
  {
    "text": "which you want to access the file system so you pick the VPC that you want instances in",
    "start": "1523200",
    "end": "1528880"
  },
  {
    "text": "that will be accessing the file system and you create Mount Targets in each a and again that's a basic API call and",
    "start": "1528880",
    "end": "1537080"
  },
  {
    "text": "you can do that through the Management console you can do that through the CLI or the",
    "start": "1537080",
    "end": "1542399"
  },
  {
    "text": "SDK you then enable the NFS client on your instances it's a very basic thing to do",
    "start": "1543840",
    "end": "1551600"
  },
  {
    "text": "um and as I mentioned before uh NFS V4 clients are standard on virtually all",
    "start": "1551600",
    "end": "1557640"
  },
  {
    "text": "Linux distrib butions and then you run the mount",
    "start": "1557640",
    "end": "1563799"
  },
  {
    "text": "command the command that I showed you a few moments ago and that's it you can",
    "start": "1563799",
    "end": "1569600"
  },
  {
    "text": "begin writing files and reading",
    "start": "1569600",
    "end": "1574158"
  },
  {
    "text": "files so better than my telling you the steps let me actually show you so if you",
    "start": "1577320",
    "end": "1584039"
  },
  {
    "text": "can just change to the black screen for a second",
    "start": "1584039",
    "end": "1588840"
  },
  {
    "text": "okay oh one more second",
    "start": "1602679",
    "end": "1608000"
  },
  {
    "text": "okay so this is the EFS blast screen within the Management console so if",
    "start": "1630279",
    "end": "1637279"
  },
  {
    "text": "you're new to EFS and you haven't created a file system before this is a screen you'll",
    "start": "1637279",
    "end": "1643519"
  },
  {
    "text": "see so to create a file system I click create file",
    "start": "1644520",
    "end": "1650960"
  },
  {
    "start": "1651000",
    "end": "1711000"
  },
  {
    "text": "system and that walks me through a basic three-step process for creating a file",
    "start": "1651039",
    "end": "1658559"
  },
  {
    "text": "system in the first step you configure file system access and so that's the",
    "start": "1658559",
    "end": "1665960"
  },
  {
    "text": "VPC from which you want to be able to access your file system and then Mount targets within",
    "start": "1665960",
    "end": "1673399"
  },
  {
    "text": "each availability Zone from which you want to access the file system and these Mount targets will",
    "start": "1673399",
    "end": "1679720"
  },
  {
    "text": "be created in your VPC and what is being displayed right",
    "start": "1679720",
    "end": "1684799"
  },
  {
    "text": "now are the default values that will be shown to you if you did what I just did which was create a",
    "start": "1684799",
    "end": "1690559"
  },
  {
    "text": "file system we select your default VPC um default subnet to place the mount",
    "start": "1690559",
    "end": "1696240"
  },
  {
    "text": "Targets in within each a and default Security Group and EFS will work with those default settings so nothing to",
    "start": "1696240",
    "end": "1703039"
  },
  {
    "text": "change on this screen if you just want to get up and running with a file system so that's step",
    "start": "1703039",
    "end": "1710559"
  },
  {
    "text": "one step two is actually an optional step and this allows you to add tags to",
    "start": "1710960",
    "end": "1719240"
  },
  {
    "start": "1711000",
    "end": "1752000"
  },
  {
    "text": "your file system and this is just metadata that you can add that will help",
    "start": "1719240",
    "end": "1724960"
  },
  {
    "text": "you when you're looking at your list of file systems figure out what this file system is for so we recommend that folks",
    "start": "1724960",
    "end": "1732600"
  },
  {
    "text": "provide at least a name tag for their file system it's not required but um we recommend it",
    "start": "1732600",
    "end": "1738600"
  },
  {
    "text": "so I'll call this my first EFS file",
    "start": "1738600",
    "end": "1745399"
  },
  {
    "text": "system okay so that's step",
    "start": "1745399",
    "end": "1751398"
  },
  {
    "text": "two and then the final step is just reviewing and creating the information from the",
    "start": "1751919",
    "end": "1757880"
  },
  {
    "text": "previous two steps so the VPC it's going to go in and where the mount targets",
    "start": "1757880",
    "end": "1762960"
  },
  {
    "text": "will be set up and then any tags that I've created this point I create I click",
    "start": "1762960",
    "end": "1770080"
  },
  {
    "text": "create file system and that's it the file system is",
    "start": "1770080",
    "end": "1777880"
  },
  {
    "start": "1775000",
    "end": "1811000"
  },
  {
    "text": "created you now have a file system that can scale to petabyte",
    "start": "1777880",
    "end": "1783519"
  },
  {
    "text": "scale and let me let me show you just some of the information that you can see",
    "start": "1784760",
    "end": "1790519"
  },
  {
    "text": "within the console so it's the uh information about where these Mount",
    "start": "1790519",
    "end": "1796760"
  },
  {
    "text": "targets are um there's basic information like how much storage space the file system is is",
    "start": "1796760",
    "end": "1804519"
  },
  {
    "text": "using so all of the basic information about your file system is is available within the",
    "start": "1804519",
    "end": "1810799"
  },
  {
    "text": "console the other thing that you can get from the console is the DNS names for",
    "start": "1810880",
    "end": "1817440"
  },
  {
    "start": "1811000",
    "end": "1841000"
  },
  {
    "text": "your file system so again these are associated with the mount targets you've created",
    "start": "1817440",
    "end": "1823120"
  },
  {
    "text": "and these DNS names are what you use when you're mounting a file system to an",
    "start": "1823120",
    "end": "1828200"
  },
  {
    "text": "ec2 instance and there's a separate DNS name for each of the mount targets all of the",
    "start": "1828200",
    "end": "1836440"
  },
  {
    "text": "same",
    "start": "1836440",
    "end": "1838679"
  },
  {
    "start": "1841000",
    "end": "1881000"
  },
  {
    "text": "structure so yeah so let's uh I mean I'll answer that one quickly so but",
    "start": "1841600",
    "end": "1847480"
  },
  {
    "text": "let's hold questions until afterwards um so the the command that we show at the",
    "start": "1847480",
    "end": "1853960"
  },
  {
    "text": "bottom is is actually an uh easy way to not have to worry about what the DNS name is for each a um if you actually",
    "start": "1853960",
    "end": "1862240"
  },
  {
    "text": "just enter that um it will actually resolve to the correct a to the correct",
    "start": "1862240",
    "end": "1868159"
  },
  {
    "text": "DNS name within whatever a you're mounting from okay so that's just a sort of snippet that we provide to make it",
    "start": "1868159",
    "end": "1875120"
  },
  {
    "text": "easy okay so",
    "start": "1875120",
    "end": "1880600"
  },
  {
    "start": "1881000",
    "end": "2155000"
  },
  {
    "text": "now let me launch an instance and I created this file system",
    "start": "1881120",
    "end": "1886159"
  },
  {
    "text": "by the way in our Us West Oregon",
    "start": "1886159",
    "end": "1891360"
  },
  {
    "text": "region so the first thing I'll do is I'll create um a a directory that I'll",
    "start": "1892440",
    "end": "1899080"
  },
  {
    "text": "Mount the file system to so I'll call it Mount",
    "start": "1899080",
    "end": "1905638"
  },
  {
    "text": "D and then I'll Mount the file system so I'll do so here's the mount command",
    "start": "1906440",
    "end": "1915440"
  },
  {
    "text": "nfs4 let me copy the DNS",
    "start": "1915440",
    "end": "1921039"
  },
  {
    "text": "name and let me provide that local directory okay so it's",
    "start": "1929440",
    "end": "1937600"
  },
  {
    "text": "mounted so you can actually see here's this Mount",
    "start": "1938679",
    "end": "1946080"
  },
  {
    "text": "directory and you'll note that the the owner of the directory is root so since",
    "start": "1946080",
    "end": "1952440"
  },
  {
    "text": "this is a new file system the owner of the top level directory is root so let",
    "start": "1952440",
    "end": "1957799"
  },
  {
    "text": "me actually change that um to my ec2 login name which is",
    "start": "1957799",
    "end": "1963440"
  },
  {
    "text": "ec2 user",
    "start": "1963440",
    "end": "1967120"
  },
  {
    "text": "so okay as you can see now the owner is E2",
    "start": "1971519",
    "end": "1976919"
  },
  {
    "text": "user so let me go into that",
    "start": "1976919",
    "end": "1983519"
  },
  {
    "text": "directory and let me open a text editor and create my first file it'll be a text",
    "start": "1983519",
    "end": "1991600"
  },
  {
    "text": "file of course hello world so hello world I love Amazon",
    "start": "1991600",
    "end": "2001960"
  },
  {
    "text": "EFS okay I've saved the file and I'll exit and let me",
    "start": "2003240",
    "end": "2009320"
  },
  {
    "text": "just show you now so you can see there's the",
    "start": "2009320",
    "end": "2014960"
  },
  {
    "text": "file and let me display the text in the file Okay so we've created our first",
    "start": "2015320",
    "end": "2024279"
  },
  {
    "text": "file and now let me open a second instance and this instance will be in a",
    "start": "2024440",
    "end": "2032039"
  },
  {
    "text": "different a within the same region so again let me make a directory",
    "start": "2032039",
    "end": "2038200"
  },
  {
    "text": "that I'll Mount to and then let me Mount the file",
    "start": "2038200",
    "end": "2044000"
  },
  {
    "text": "system let me just grab the DNS",
    "start": "2045840",
    "end": "2051800"
  },
  {
    "text": "name okay so it's mounted and let me go into that",
    "start": "2059800",
    "end": "2069720"
  },
  {
    "text": "directory and as you can see there is the file that I created from the other",
    "start": "2070720",
    "end": "2076960"
  },
  {
    "text": "instance and the other a and now let me open up my text editor",
    "start": "2076960",
    "end": "2082839"
  },
  {
    "text": "again and open that file in it let me add to the",
    "start": "2082839",
    "end": "2090480"
  },
  {
    "text": "file okay",
    "start": "2094399",
    "end": "2098399"
  },
  {
    "text": "so now let me switch back to my other instance and the other a and let's again",
    "start": "2099839",
    "end": "2107040"
  },
  {
    "text": "see what that file looks like now and there you go",
    "start": "2107040",
    "end": "2113440"
  },
  {
    "text": "oh it's back okay so that's the demo",
    "start": "2113440",
    "end": "2121960"
  },
  {
    "text": "so let me just can you actually switch to the black screen thanks let me just get back into my",
    "start": "2128160",
    "end": "2136320"
  },
  {
    "text": "presentation so one",
    "start": "2136359",
    "end": "2140039"
  },
  {
    "text": "second okay great so at this point we'll touch on a few topics that are a little technically deeper and the first is",
    "start": "2155000",
    "end": "2164160"
  },
  {
    "text": "security we know security is critically important to customers and it's critically important for all of our",
    "start": "2164160",
    "end": "2171480"
  },
  {
    "text": "services at AWS and as we designed EFS security was top of mind for",
    "start": "2171480",
    "end": "2178200"
  },
  {
    "text": "us so let me talk to you about the security mechanisms that are available to EFS file",
    "start": "2178960",
    "end": "2185040"
  },
  {
    "text": "systems first at the network l you can control Network traffic to and",
    "start": "2185040",
    "end": "2190640"
  },
  {
    "text": "from file systems and it's really two and from these Mount targets by using VPC security groups and VPC Network",
    "start": "2190640",
    "end": "2200079"
  },
  {
    "text": "akles second at the data access level you can control file and directory",
    "start": "2200079",
    "end": "2206280"
  },
  {
    "text": "access by using standard Linux and windows directory and file level",
    "start": "2206280",
    "end": "2212240"
  },
  {
    "text": "permissions so exactly the same way that you would set permissions for a local file system from when windows or or",
    "start": "2212240",
    "end": "2219240"
  },
  {
    "text": "Linux and then third at the administrative level you can control",
    "start": "2219240",
    "end": "2224720"
  },
  {
    "text": "access to administrative functions so control access to the EFS",
    "start": "2224720",
    "end": "2229760"
  },
  {
    "text": "API by using aws's identity and access management and I'll talk a bit more",
    "start": "2229760",
    "end": "2236480"
  },
  {
    "text": "about each of these before I talk about VPC security",
    "start": "2236480",
    "end": "2242440"
  },
  {
    "text": "mechanisms keep in mind that only ec2 instances in the VPC you specify can",
    "start": "2242440",
    "end": "2248079"
  },
  {
    "text": "access your EFS file system so the only way to access a file system is through",
    "start": "2248079",
    "end": "2253520"
  },
  {
    "text": "these Mount targets and these Mount targets are belong to your VPC so only traffic through those Mount",
    "start": "2253520",
    "end": "2261079"
  },
  {
    "text": "Targets in your VPC can access a file system and security groups VPC security",
    "start": "2261079",
    "end": "2269160"
  },
  {
    "start": "2266000",
    "end": "2314000"
  },
  {
    "text": "groups are these firewall Like rules that you can apply to mount targets and",
    "start": "2269160",
    "end": "2275599"
  },
  {
    "text": "they specify what traffic can reach the mount targets and therefore what traffic can reach your",
    "start": "2275599",
    "end": "2281000"
  },
  {
    "text": "file systems and security groups can have rules like only allow traffic from a",
    "start": "2281000",
    "end": "2287200"
  },
  {
    "text": "particular IP address only allow traffic from a particular range of IP addresses",
    "start": "2287200",
    "end": "2293119"
  },
  {
    "text": "or only allow traffic from instances that are within a particular Security",
    "start": "2293119",
    "end": "2298280"
  },
  {
    "text": "Group in the example here we've added to the Mount Target a security group rule",
    "start": "2298280",
    "end": "2305119"
  },
  {
    "text": "to allow only traffic to and from instances that are part of that security group so that's an example Security",
    "start": "2305119",
    "end": "2310720"
  },
  {
    "text": "Group rule that you could add EFS supports the standard",
    "start": "2310720",
    "end": "2318440"
  },
  {
    "start": "2314000",
    "end": "2368000"
  },
  {
    "text": "permissions model you're used to when working with file systems on Linux or",
    "start": "2318440",
    "end": "2323599"
  },
  {
    "text": "Windows it enforces user and group rights at the file and directory",
    "start": "2323599",
    "end": "2329640"
  },
  {
    "text": "level so for example you can set permissions for a file so that only the owner of the file",
    "start": "2329640",
    "end": "2336960"
  },
  {
    "text": "can write to the file so only if the user account that you're logged into on your ec2 instance",
    "start": "2336960",
    "end": "2344760"
  },
  {
    "text": "matches the owner of that file will EFS allow the user on that instance to write",
    "start": "2344760",
    "end": "2350640"
  },
  {
    "text": "to the file and in this Linux screenshot you see here you see a set of read write",
    "start": "2350640",
    "end": "2358079"
  },
  {
    "text": "execute permissions for owner group and everyone like you would for any file or",
    "start": "2358079",
    "end": "2363440"
  },
  {
    "text": "directory on a local file system",
    "start": "2363440",
    "end": "2368119"
  },
  {
    "start": "2368000",
    "end": "2408000"
  },
  {
    "text": "and integration with IM am provides admin administrative security so again",
    "start": "2371079",
    "end": "2376359"
  },
  {
    "text": "you use IM policies to control who can use the apis to do things like create",
    "start": "2376359",
    "end": "2381560"
  },
  {
    "text": "file systems create Mount targets manage the the file systems delete them",
    "start": "2381560",
    "end": "2388040"
  },
  {
    "text": "Etc and EFS supports Action level and resource level permissions so as an",
    "start": "2388040",
    "end": "2393839"
  },
  {
    "text": "example you can specify that only particular I am users can create a file system or only a particular IM user can",
    "start": "2393839",
    "end": "2401560"
  },
  {
    "text": "create a specif or can delete a specific file",
    "start": "2401560",
    "end": "2406640"
  },
  {
    "text": "system okay so finally let's talk about how we store data in a",
    "start": "2408760",
    "end": "2414760"
  },
  {
    "start": "2417000",
    "end": "2439000"
  },
  {
    "text": "region at launch EFS will be available in three",
    "start": "2417440",
    "end": "2422599"
  },
  {
    "text": "regions in our Us West Oregon region our us East Northern Virginia region and our",
    "start": "2422599",
    "end": "2430040"
  },
  {
    "text": "EU Ireland region and in the near future will expand to",
    "start": "2430040",
    "end": "2436960"
  },
  {
    "text": "others in a region data is stored in multiple availability zones azs for high",
    "start": "2439720",
    "end": "2446240"
  },
  {
    "text": "availability and durability so in the event of an AZ issue for example if there's a natural",
    "start": "2446240",
    "end": "2452640"
  },
  {
    "text": "disaster that's partic that's affecting a particular data center EFS file",
    "start": "2452640",
    "end": "2457720"
  },
  {
    "text": "systems will continue to be available from other A's from unaffected A's and",
    "start": "2457720",
    "end": "2463400"
  },
  {
    "text": "you can design your applications to take advantage of this for example you can use elastic load balancing or elb to run",
    "start": "2463400",
    "end": "2469520"
  },
  {
    "text": "your applications in multiple azs and then if one a is experiencing an issue your application will continue to run",
    "start": "2469520",
    "end": "2476440"
  },
  {
    "text": "and be able to continue accessing your file system from the other",
    "start": "2476440",
    "end": "2481160"
  },
  {
    "start": "2482000",
    "end": "2524000"
  },
  {
    "text": "A's it's and it's important for me to explain that data can be access from any a in the region while maintaining full",
    "start": "2483040",
    "end": "2492079"
  },
  {
    "text": "consistency so your ec2 instances connect can connect your EFS file system from any a in a",
    "start": "2492079",
    "end": "2498800"
  },
  {
    "text": "region and all of the reads and writes will be fully consistent in all",
    "start": "2498800",
    "end": "2504880"
  },
  {
    "text": "azs so if you have a read in one a a read of a particular file you're",
    "start": "2504880",
    "end": "2511160"
  },
  {
    "text": "guaranteed to have the latest data even if the data is being written",
    "start": "2511160",
    "end": "2516720"
  },
  {
    "text": "if that file f is being actively written in another a so it's full",
    "start": "2516720",
    "end": "2523400"
  },
  {
    "start": "2524000",
    "end": "2566000"
  },
  {
    "text": "consistency so wrapping up I haven't talked much about pricing",
    "start": "2524680",
    "end": "2529760"
  },
  {
    "text": "so let me do that now I did mention that with EFS you pay",
    "start": "2529760",
    "end": "2535640"
  },
  {
    "text": "only for the storage space you use there are no minimum commitments no upfront fees there's no need to",
    "start": "2535640",
    "end": "2542640"
  },
  {
    "text": "provision storage in advance and as I mentioned in fact you can't provision storage",
    "start": "2542640",
    "end": "2548880"
  },
  {
    "text": "and there are no other fees charges or billing Dimensions so you you pay for the number",
    "start": "2548880",
    "end": "2556839"
  },
  {
    "text": "of gigabytes you're storing per month times a monthly charge per gigabyte and that monthly charge per gigabyte is 30",
    "start": "2556839",
    "end": "2564960"
  },
  {
    "start": "2566000",
    "end": "2623000"
  },
  {
    "text": "cents okay so what do I recommend you do next you should visit our",
    "start": "2567599",
    "end": "2574520"
  },
  {
    "text": "website at AWS Amazon /fs to get more details on the",
    "start": "2574520",
    "end": "2581640"
  },
  {
    "text": "service and while you're on your website while you're on our website I recommend that you request an invite for our",
    "start": "2581640",
    "end": "2587520"
  },
  {
    "text": "preview we'll be starting a preview this summer so be sure to submit your name if",
    "start": "2587520",
    "end": "2592920"
  },
  {
    "text": "you're interested and stop by our booth afterwards it's going to be the new uh",
    "start": "2592920",
    "end": "2598400"
  },
  {
    "text": "the AWS new Services booth and we'll have folks from the EFS team there to answer your questions oneon-one",
    "start": "2598400",
    "end": "2604640"
  },
  {
    "text": "okay so that's it thanks thanks again um again I encourage you all to uh sign up",
    "start": "2604640",
    "end": "2610800"
  },
  {
    "text": "for the preview so that you can see for yourselves what it's like to work with e fs and see that EFS is simple elastic",
    "start": "2610800",
    "end": "2618760"
  },
  {
    "text": "and scalable thank you all",
    "start": "2618760",
    "end": "2623680"
  }
]