[
  {
    "start": "0",
    "end": "34000"
  },
  {
    "text": "hey I'm Tiffany Jernigan and I'm a",
    "start": "6049",
    "end": "8670"
  },
  {
    "text": "developer advocate for Amazon Elastic",
    "start": "8670",
    "end": "10740"
  },
  {
    "text": "container service or ECS in this video",
    "start": "10740",
    "end": "13500"
  },
  {
    "text": "we're going to talk about test placement",
    "start": "13500",
    "end": "15000"
  },
  {
    "text": "for ECS UCS runs containers on a managed",
    "start": "15000",
    "end": "18119"
  },
  {
    "text": "cluster of Amazon ec2 virtual machines",
    "start": "18119",
    "end": "20520"
  },
  {
    "text": "or as we call them instances when you",
    "start": "20520",
    "end": "23279"
  },
  {
    "text": "create an e CS cluster in a specific",
    "start": "23279",
    "end": "25050"
  },
  {
    "text": "region such as US west to the instances",
    "start": "25050",
    "end": "28140"
  },
  {
    "text": "within it can span multiple AWS",
    "start": "28140",
    "end": "30029"
  },
  {
    "text": "availability zones such as US west to a",
    "start": "30029",
    "end": "32668"
  },
  {
    "text": "and US west to B if we take a look at",
    "start": "32669",
    "end": "35880"
  },
  {
    "start": "34000",
    "end": "50000"
  },
  {
    "text": "one of the ec2 instances running in our",
    "start": "35880",
    "end": "37710"
  },
  {
    "text": "cluster we can see that is running ECS",
    "start": "37710",
    "end": "39899"
  },
  {
    "text": "tasks which are groupings of running",
    "start": "39899",
    "end": "42180"
  },
  {
    "text": "docker containers the ECS container",
    "start": "42180",
    "end": "44460"
  },
  {
    "text": "agent which helps our tests communicate",
    "start": "44460",
    "end": "46620"
  },
  {
    "text": "with the EECS control plane and the",
    "start": "46620",
    "end": "48360"
  },
  {
    "text": "docker daemon okay so we've seen a low",
    "start": "48360",
    "end": "51570"
  },
  {
    "start": "50000",
    "end": "88000"
  },
  {
    "text": "bit of how ECS works let's talk about",
    "start": "51570",
    "end": "53610"
  },
  {
    "text": "test placement which is how easiest",
    "start": "53610",
    "end": "55530"
  },
  {
    "text": "decides where to run tests on the",
    "start": "55530",
    "end": "57000"
  },
  {
    "text": "cluster when starting a task or service",
    "start": "57000",
    "end": "59969"
  },
  {
    "text": "a decision needs to be made to pick",
    "start": "59969",
    "end": "61980"
  },
  {
    "text": "which instance to use by default if you",
    "start": "61980",
    "end": "64500"
  },
  {
    "text": "simply run tasks using the run tasks API",
    "start": "64500",
    "end": "66720"
  },
  {
    "text": "the tasks are placed randomly on your",
    "start": "66720",
    "end": "69210"
  },
  {
    "text": "instances within your cluster or if you",
    "start": "69210",
    "end": "71280"
  },
  {
    "text": "create a service with the create service",
    "start": "71280",
    "end": "72750"
  },
  {
    "text": "API your tests are spread across",
    "start": "72750",
    "end": "74549"
  },
  {
    "text": "availability zones for high availability",
    "start": "74549",
    "end": "76409"
  },
  {
    "text": "and previously if you wanted to have",
    "start": "76409",
    "end": "79500"
  },
  {
    "text": "custom placement you needed to make the",
    "start": "79500",
    "end": "81360"
  },
  {
    "text": "decision yourself and call the start",
    "start": "81360",
    "end": "83250"
  },
  {
    "text": "task API or write your own scheduler so",
    "start": "83250",
    "end": "86310"
  },
  {
    "text": "we created the test placement engine",
    "start": "86310",
    "end": "88220"
  },
  {
    "start": "88000",
    "end": "105000"
  },
  {
    "text": "dance the selection process can be",
    "start": "88220",
    "end": "90689"
  },
  {
    "text": "viewed as a funnel with layers of",
    "start": "90689",
    "end": "92490"
  },
  {
    "text": "filters all the instances go in and only",
    "start": "92490",
    "end": "95130"
  },
  {
    "text": "one comes out initially we start off",
    "start": "95130",
    "end": "97409"
  },
  {
    "text": "with all the instances in our cluster we",
    "start": "97409",
    "end": "100049"
  },
  {
    "text": "can then use the AWS CLI or the AWS",
    "start": "100049",
    "end": "102689"
  },
  {
    "text": "console to run a task I'll be using the",
    "start": "102689",
    "end": "104880"
  },
  {
    "text": "CLI first we need a test definition file",
    "start": "104880",
    "end": "107579"
  },
  {
    "start": "105000",
    "end": "122000"
  },
  {
    "text": "to create a task here's a simple example",
    "start": "107579",
    "end": "109549"
  },
  {
    "text": "any instances which don't meet our",
    "start": "109549",
    "end": "112500"
  },
  {
    "text": "memory CPU or port requirements are",
    "start": "112500",
    "end": "114810"
  },
  {
    "text": "removed now we get to the test placement",
    "start": "114810",
    "end": "116969"
  },
  {
    "text": "engine here we either stick with the",
    "start": "116969",
    "end": "118799"
  },
  {
    "text": "defaults or choose to set test placement",
    "start": "118799",
    "end": "120780"
  },
  {
    "text": "constraints and strategies constraints",
    "start": "120780",
    "end": "123210"
  },
  {
    "start": "122000",
    "end": "137000"
  },
  {
    "text": "are applied first if an instance doesn't",
    "start": "123210",
    "end": "125369"
  },
  {
    "text": "fit it won't be used we currently have",
    "start": "125369",
    "end": "127710"
  },
  {
    "text": "two types of placement constraints",
    "start": "127710",
    "end": "129239"
  },
  {
    "text": "distinct instance and member of",
    "start": "129239",
    "end": "132020"
  },
  {
    "text": "stinked instance is what it sounds like",
    "start": "132020",
    "end": "133460"
  },
  {
    "text": "all tasks are placed on unique instances",
    "start": "133460",
    "end": "135740"
  },
  {
    "text": "as you can see there is only one task at",
    "start": "135740",
    "end": "140840"
  },
  {
    "text": "most running on every single instance",
    "start": "140840",
    "end": "142490"
  },
  {
    "text": "the member of constraint describes a set",
    "start": "142490",
    "end": "144950"
  },
  {
    "text": "it is for anything you could define as",
    "start": "144950",
    "end": "146750"
  },
  {
    "text": "an attribute or a task here we see this",
    "start": "146750",
    "end": "149120"
  },
  {
    "text": "new field expression this command will",
    "start": "149120",
    "end": "150920"
  },
  {
    "text": "create five copies of the task and only",
    "start": "150920",
    "end": "153050"
  },
  {
    "text": "run them on t2 micro instances in here",
    "start": "153050",
    "end": "156140"
  },
  {
    "text": "you can see that we have our tasks",
    "start": "156140",
    "end": "158300"
  },
  {
    "text": "running only on t2 micro you can use",
    "start": "158300",
    "end": "162440"
  },
  {
    "text": "attributes we have defined or you can",
    "start": "162440",
    "end": "164030"
  },
  {
    "text": "create custom ones strategies are then",
    "start": "164030",
    "end": "166040"
  },
  {
    "text": "used to sort the rest of the instances",
    "start": "166040",
    "end": "167720"
  },
  {
    "text": "by preference to determine which is the",
    "start": "167720",
    "end": "169670"
  },
  {
    "text": "best",
    "start": "169670",
    "end": "170060"
  },
  {
    "text": "ECS offers three types of strategies",
    "start": "170060",
    "end": "172220"
  },
  {
    "text": "random bin pack and spread random places",
    "start": "172220",
    "end": "175730"
  },
  {
    "text": "tasks ad-hoc across your instances the",
    "start": "175730",
    "end": "178670"
  },
  {
    "text": "bin pack strategy tries to fit your",
    "start": "178670",
    "end": "180200"
  },
  {
    "text": "workloads in as few instances as",
    "start": "180200",
    "end": "181820"
  },
  {
    "text": "possible for maximum utilization with",
    "start": "181820",
    "end": "184490"
  },
  {
    "text": "bin pack you can optimize for either",
    "start": "184490",
    "end": "186170"
  },
  {
    "text": "memory or CPU as you can see all of the",
    "start": "186170",
    "end": "189860"
  },
  {
    "start": "188000",
    "end": "224000"
  },
  {
    "text": "tasks are running on a single instance",
    "start": "189860",
    "end": "191740"
  },
  {
    "text": "spread places tasks based on your chosen",
    "start": "191740",
    "end": "194450"
  },
  {
    "text": "attribute this is an optimal strategy",
    "start": "194450",
    "end": "196790"
  },
  {
    "text": "for helping to ensure high availability",
    "start": "196790",
    "end": "198230"
  },
  {
    "text": "for your applications in production you",
    "start": "198230",
    "end": "200810"
  },
  {
    "text": "may want to use multiple strategies for",
    "start": "200810",
    "end": "202670"
  },
  {
    "text": "example spreading tests across a ZZZ and",
    "start": "202670",
    "end": "205130"
  },
  {
    "text": "bin packing this is called chaining to",
    "start": "205130",
    "end": "208190"
  },
  {
    "text": "learn more about test placement or state",
    "start": "208190",
    "end": "210110"
  },
  {
    "text": "examples check out our SES test",
    "start": "210110",
    "end": "212030"
  },
  {
    "text": "placement blog series or visit the ECS",
    "start": "212030",
    "end": "214310"
  },
  {
    "text": "documentation thanks for watching",
    "start": "214310",
    "end": "218410"
  },
  {
    "text": "you",
    "start": "218690",
    "end": "220750"
  },
  {
    "text": "you",
    "start": "222050",
    "end": "224110"
  }
]