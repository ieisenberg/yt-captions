[
  {
    "text": "good afternoon welcome I hope everybody's got the three major food",
    "start": "30",
    "end": "6540"
  },
  {
    "text": "groups are actually the four food groups caffeine glucose alcohol and code my",
    "start": "6540",
    "end": "13139"
  },
  {
    "text": "name is andy katz i'm a product manager at AWS and I'm joined today by Tom Paul Hebert who's a principal engineer at AWS and Jeremy",
    "start": "13139",
    "end": "20010"
  },
  {
    "text": "Irwin who is a solution architect with Cox automotive we're gonna talk to you today about machine learning workflows",
    "start": "20010",
    "end": "26340"
  },
  {
    "text": "using Amazon sage maker and AWS step functions so let's start first with a quick poll I want to know in the room of",
    "start": "26340",
    "end": "32758"
  },
  {
    "text": "everybody that's here who in this room is a data scientist or an m/l scientist somebody who's working on that side of",
    "start": "32759",
    "end": "38820"
  },
  {
    "text": "the house hands up high that's small a good number but you know an early early",
    "start": "38820",
    "end": "46170"
  },
  {
    "text": "crew how many of you work with a data scientist or machine learning scientist",
    "start": "46170",
    "end": "51920"
  },
  {
    "text": "more people okay how many of you have",
    "start": "51920",
    "end": "56930"
  },
  {
    "text": "tried using sage maker ok about half or",
    "start": "56930",
    "end": "63420"
  },
  {
    "text": "third how many of you have tried a double step functions okay the other",
    "start": "63420",
    "end": "69630"
  },
  {
    "text": "half all right how many of you have no idea what I just talked about in any of those things okay we got you covered too",
    "start": "69630",
    "end": "77420"
  },
  {
    "text": "so today we're going to talk about four things first we're talk about how you",
    "start": "77420",
    "end": "82740"
  },
  {
    "text": "can build trained deploy machine learning models with Amazon sage maker a service is really built for everyday",
    "start": "82740",
    "end": "88380"
  },
  {
    "text": "data scientist and developers then we'll talk about building service workflows with less code to write a maintain using",
    "start": "88380",
    "end": "95549"
  },
  {
    "text": "a w step functions and Jeremy will talk a little bit how Cox automotive put these two together to improve",
    "start": "95549",
    "end": "101759"
  },
  {
    "text": "collaboration between their data scientists and software engineers and then last but not least we're going to",
    "start": "101759",
    "end": "107549"
  },
  {
    "text": "talk about some new features that we're launching this week to make building these machine learning workflows even easier so we're gonna begin with sage",
    "start": "107549",
    "end": "116520"
  },
  {
    "text": "maker to talk about sage maker I'm gonna hand the floor over to Tom Paul Hebert",
    "start": "116520",
    "end": "122000"
  },
  {
    "text": "howdy how many folks here saw Andy's keynote this morning okay so a lot of",
    "start": "122750",
    "end": "129000"
  },
  {
    "text": "you and as you know Andy's stole a little bit of my thunder by talking about what's maker is but I will recap and go a",
    "start": "129000",
    "end": "136860"
  },
  {
    "text": "little bit deeper on sort of what the more mainstream parts of stage maker are",
    "start": "136860",
    "end": "142680"
  },
  {
    "text": "I think Andy talked about a lot of the the in editions about the core sage maker he also talked a lot about the",
    "start": "142680",
    "end": "148140"
  },
  {
    "text": "sort of cool new stuff like reinforcement learning but I want to sort of ground us in the sort of",
    "start": "148140",
    "end": "153540"
  },
  {
    "text": "day-to-day parts of stage maker so sage",
    "start": "153540",
    "end": "158670"
  },
  {
    "text": "makers built so first of all big picture sage maker is a platform for doing",
    "start": "158670",
    "end": "163680"
  },
  {
    "text": "machine learning it is an agnostic platform in the sense that we don't",
    "start": "163680",
    "end": "170640"
  },
  {
    "text": "think about which framework you want to use or which software packages you want",
    "start": "170640",
    "end": "175950"
  },
  {
    "text": "to use or how you're building your models specifically what we want to do",
    "start": "175950",
    "end": "181350"
  },
  {
    "text": "is take away the undifferentiated heavy lifting that goes along with building",
    "start": "181350",
    "end": "186540"
  },
  {
    "text": "machine learning systems so we build around three pillars when we announced",
    "start": "186540",
    "end": "192960"
  },
  {
    "text": "sage maker a year ago sage maker has been out since reinvent last year and it's been a very exciting year thank you",
    "start": "192960",
    "end": "199230"
  },
  {
    "text": "for all of those of you who are using it and please always be giving us feedback but when we built this last year we had",
    "start": "199230",
    "end": "207150"
  },
  {
    "text": "only these three services and these have grown out over the intervening year to",
    "start": "207150",
    "end": "213060"
  },
  {
    "text": "be much more complex and give you much more functionality so first users data",
    "start": "213060",
    "end": "218850"
  },
  {
    "text": "scientists developers that were interested in data science people who are trying to build models the first",
    "start": "218850",
    "end": "223860"
  },
  {
    "text": "steps of what they're doing are going to be exploratory we're in talking a little more detail about that later and the",
    "start": "223860",
    "end": "230180"
  },
  {
    "text": "most common industry tool for doing that machine learning now across platforms is the Jupiter notebook and the Python",
    "start": "230180",
    "end": "237900"
  },
  {
    "text": "kernels with it sage maker includes as it's sort of entry point a Jupiter notebook service",
    "start": "237900",
    "end": "245310"
  },
  {
    "text": "you can go to the AWS console open sage maker click on notebook instance and you have a jupiter notebook server you can",
    "start": "245310",
    "end": "251700"
  },
  {
    "text": "customize that however you want so that's been a very easy way to get",
    "start": "251700",
    "end": "257850"
  },
  {
    "text": "onboard it manages all the security of the notebook side and anyone who's tried to deploy jupiter notebooks in any sort",
    "start": "257850",
    "end": "264630"
  },
  {
    "text": "of production environment it was security and so on nose is pretty hard we've done a lot of work to make that painless for",
    "start": "264630",
    "end": "270870"
  },
  {
    "text": "you and then sage maker supports a lot",
    "start": "270870",
    "end": "276390"
  },
  {
    "text": "of different kinds of algorithms but there are three basic categories we",
    "start": "276390",
    "end": "282180"
  },
  {
    "text": "offer a family of highly optimized highly scalable algorithms including you",
    "start": "282180",
    "end": "288300"
  },
  {
    "text": "know so everything from sort of that the granddaddy of clustering algorithms k-means at web scale through at the",
    "start": "288300",
    "end": "295800"
  },
  {
    "text": "other end of the spectrum state-of-the-art algorithms like object",
    "start": "295800",
    "end": "302580"
  },
  {
    "text": "to Beck which we just announced last year which generalizes tools that have been built in languages to be useful",
    "start": "302580",
    "end": "308760"
  },
  {
    "text": "across a wider array of things deep a are are forecasting algorithms if you",
    "start": "308760",
    "end": "314280"
  },
  {
    "text": "want to go a little bit deeper than what the forecasting service offers so we have a bunch of different algorithms",
    "start": "314280",
    "end": "320400"
  },
  {
    "text": "that are in there you can also write any algorithm you want yourself you can package it and put it in Sage maker",
    "start": "320400",
    "end": "326310"
  },
  {
    "text": "that's a pretty easy thing to do and then for the deep learning frameworks we have a model where people can deploy",
    "start": "326310",
    "end": "333440"
  },
  {
    "text": "code into sage maker with what we call the 20 lines of Python everyone anyone",
    "start": "333440",
    "end": "340440"
  },
  {
    "text": "has a real data it actually practices data science here we'll know it's more than 20 lines of Python but basically how do I want my tensorflow or my Amex",
    "start": "340440",
    "end": "347040"
  },
  {
    "text": "and that are my PI toward neural net to work you write that down and you submit it so once you've explored your data a",
    "start": "347040",
    "end": "354180"
  },
  {
    "text": "little bit and organize your data in a notebook you may find that a single instance notebook or the kind of thing you want to keep always running is not",
    "start": "354180",
    "end": "361770"
  },
  {
    "text": "going to Train very effectively so we have a training service the nice thing about the training service is you can",
    "start": "361770",
    "end": "366900"
  },
  {
    "text": "submit your job the resources it's a fully managed service so you don't have to have any instances for it the the",
    "start": "366900",
    "end": "374880"
  },
  {
    "text": "service runs creates the instances when it starts shuts down the instances when",
    "start": "374880",
    "end": "380370"
  },
  {
    "text": "do you pay only for that window it supports highly distributed training if your algorithms support it the ones we",
    "start": "380370",
    "end": "386040"
  },
  {
    "text": "build almost all do supports GPUs and other great things including our p3",
    "start": "386040",
    "end": "391350"
  },
  {
    "text": "instances so one of the things we see a lot is people are trying to Train very sophisticated models",
    "start": "391350",
    "end": "397960"
  },
  {
    "text": "and as Andy talked about this morning GPUs are expensive so you don't want to you know the great advantage have a",
    "start": "397960",
    "end": "403150"
  },
  {
    "text": "Elastic Compute cloud right is you don't want to be running things all the time when you're not using them sage maker manages that for you so I can",
    "start": "403150",
    "end": "410590"
  },
  {
    "text": "run training on a p3 a big p3 instance get my training done very quickly pay",
    "start": "410590",
    "end": "416139"
  },
  {
    "text": "only for the p3 is from the time I start my training for the time I've done on top of that we have hyper parameter",
    "start": "416139",
    "end": "422169"
  },
  {
    "text": "optimization those of you who've done any data science practice know that you know algorithms are all well and good",
    "start": "422169",
    "end": "427990"
  },
  {
    "text": "but every algorithm has a bunch of knobs called hyper parameters basically settings who put on it optimizing those",
    "start": "427990",
    "end": "433479"
  },
  {
    "text": "as an art form we have a Gaussian process hyper parameter optimizer it's",
    "start": "433479",
    "end": "438669"
  },
  {
    "text": "the same optimizer we use inside amazon for training our you for figuring out hyper parameters for self very",
    "start": "438669",
    "end": "444430"
  },
  {
    "text": "state-of-the-art performance and what it does is it finds good collect good settings for the hyper parameters very",
    "start": "444430",
    "end": "451060"
  },
  {
    "text": "efficiently and it has a bunch of controls for how you can cost control and so on then once you train the model",
    "start": "451060",
    "end": "457599"
  },
  {
    "text": "and validated it you like the model you have you want to use the model all right now they're two really common ways to",
    "start": "457599",
    "end": "464500"
  },
  {
    "text": "use a model I should stop here and mention that all of these parts of stage",
    "start": "464500",
    "end": "470620"
  },
  {
    "text": "maker are actually independent so one of the things you can do is you can take the model from training and use it",
    "start": "470620",
    "end": "476620"
  },
  {
    "text": "outside stage maker we have Greengrass support directly so you can push it to Greengrass enabled iot devices but you can also take it and",
    "start": "476620",
    "end": "484030"
  },
  {
    "text": "use it for your own inference we'll say within an application that you've built to do it or within a device that you're",
    "start": "484030",
    "end": "490000"
  },
  {
    "text": "using and so on but but now I'm gonna talk about using the stage maker features for doing inference and we have",
    "start": "490000",
    "end": "495639"
  },
  {
    "text": "two of them one is our real-time hosting platform this turns your model into an",
    "start": "495639",
    "end": "502990"
  },
  {
    "text": "HTTP based micro service protected by the standard AWS Sigma for",
    "start": "502990",
    "end": "509020"
  },
  {
    "text": "authentication and so you can train a model and deploy it with a single line",
    "start": "509020",
    "end": "516279"
  },
  {
    "text": "of code and your developers can then call that endpoint as if it was any",
    "start": "516279",
    "end": "522849"
  },
  {
    "text": "other micro service in your constellation right and what this means is developers don't have to write special code inside their apps in order",
    "start": "522849",
    "end": "531190"
  },
  {
    "text": "to take advantage of machine learning models so I'm writing him a cell phone app that maybe takes pictures of things",
    "start": "531190",
    "end": "537250"
  },
  {
    "text": "and tries to figure out what they are or whatever I can send the image up the",
    "start": "537250",
    "end": "542620"
  },
  {
    "text": "image gets sent to the micro service a categorization comes back from the Train model the developer only wrote the call",
    "start": "542620",
    "end": "549550"
  },
  {
    "text": "to the micro service this is really great for deployment and then finally we",
    "start": "549550",
    "end": "555100"
  },
  {
    "text": "have a fully managed hosting at scare I'm sorry we have a batch transform which can take giant or not so giant",
    "start": "555100",
    "end": "563170"
  },
  {
    "text": "chunks of data in s3 and run inference across the whole set using massive",
    "start": "563170",
    "end": "568240"
  },
  {
    "text": "parallelization so you it's really great because one of the great things about doing inference is it's very scalable",
    "start": "568240",
    "end": "575770"
  },
  {
    "text": "right every record in inference is generally independent of every other and so you can for example allocate a",
    "start": "575770",
    "end": "581140"
  },
  {
    "text": "hundred nodes to your batch transformation and getting an answer very quickly it caused the same as running a hunt one node for a hundred",
    "start": "581140",
    "end": "586900"
  },
  {
    "text": "times as long so why not right so that's pretty nice so a lot of people are",
    "start": "586900",
    "end": "593800"
  },
  {
    "text": "building deployments if you went to Andy's thing you had a wall of people which shocked even me that's pretty",
    "start": "593800",
    "end": "598839"
  },
  {
    "text": "awesome and but it's talking about three of them here in two it was one of our",
    "start": "598839",
    "end": "604990"
  },
  {
    "text": "launch partners last year they've been great users of stage maker over the period of the year what's interesting",
    "start": "604990",
    "end": "610839"
  },
  {
    "text": "about Intuit is they have a very diverse set of use cases internally they have places where they're training they were",
    "start": "610839",
    "end": "616570"
  },
  {
    "text": "already training models using spark ml in their spark clusters and they're now using stage maker hosting to host those",
    "start": "616570",
    "end": "623260"
  },
  {
    "text": "models they have cases where they're training tensorflow models for internal",
    "start": "623260",
    "end": "628300"
  },
  {
    "text": "use that they never deploy at all they're just doing the training and then they have cases where they're sort of using the whole thing together",
    "start": "628300",
    "end": "635040"
  },
  {
    "text": "grammarly is a if you know grammarly is they help you write and there of course",
    "start": "635040",
    "end": "640540"
  },
  {
    "text": "there's a lot of language work on top of stage maker and that's pretty cool and then GE healthcare is a great example of",
    "start": "640540",
    "end": "646330"
  },
  {
    "text": "a company that's not using our inference but rather training in Sage Maker and",
    "start": "646330",
    "end": "652600"
  },
  {
    "text": "deploying the resulting models into medical equipment x-rays and so on as",
    "start": "652600",
    "end": "658570"
  },
  {
    "text": "part of ways to look for web and holders they're looking for cancer stuff",
    "start": "658570",
    "end": "663600"
  },
  {
    "text": "so that's pretty cool maybe stage maker will help save your life someday that would be pretty great and so so there's",
    "start": "663600",
    "end": "671610"
  },
  {
    "text": "a lot of pretending and you saw that wall that Andy showed up there's a lot of different things going on few of them are quite as cool as Formula One racing",
    "start": "671610",
    "end": "677910"
  },
  {
    "text": "but they're all super useful to people so let's talk about the workflow of",
    "start": "677910",
    "end": "683520"
  },
  {
    "text": "machine learning machine learning is this complicated cycle and you can draw",
    "start": "683520",
    "end": "688980"
  },
  {
    "text": "a bunch of different diagrams kind of like this but this shows you sort of a layout I'm not going to dive into this",
    "start": "688980",
    "end": "696030"
  },
  {
    "text": "in a ton of detail but I want to give you the feeling for how you go through here so first you know so the first set",
    "start": "696030",
    "end": "702420"
  },
  {
    "text": "of things is mostly about data ok it's not really about machine learning you'll",
    "start": "702420",
    "end": "707520"
  },
  {
    "text": "hear this from every ml practitioner in the world is you know here's things like data is 80% of the problem then it",
    "start": "707520",
    "end": "713580"
  },
  {
    "text": "depends on the day but you know something like that is true so AWS of course has a ton of tools now",
    "start": "713580",
    "end": "719220"
  },
  {
    "text": "for manipulating data and you can use all of those in conjunction with sage maker you can use a very sample we have",
    "start": "719220",
    "end": "727230"
  },
  {
    "text": "launchpad earlier today that was showing using AWS glue as a preprocessor for sage maker transforming data you can use",
    "start": "727230",
    "end": "736140"
  },
  {
    "text": "all the tools and that Amazon s3 gives you including Athena queries which lets",
    "start": "736140",
    "end": "741270"
  },
  {
    "text": "you reform data out of your s3 buckets directly and and of course all our",
    "start": "741270",
    "end": "747780"
  },
  {
    "text": "regular bi tools like redshift and and sometimes they're things you do in sage",
    "start": "747780",
    "end": "753240"
  },
  {
    "text": "maker 2 as part of this pre-processing step then the core of machine learning is a center block and this is mostly",
    "start": "753240",
    "end": "760920"
  },
  {
    "text": "what sage maker is about as a service so it's where you're doing your training and your evaluations and thinking about",
    "start": "760920",
    "end": "768030"
  },
  {
    "text": "what you want to do now this is diamond on the bottom here that I'm going to ignore for a minute because I don't want",
    "start": "768030",
    "end": "773520"
  },
  {
    "text": "to talk about yet but somehow you have to figure out if whatever you build you",
    "start": "773520",
    "end": "779190"
  },
  {
    "text": "know analyzing your data and training your model is any good but assuming you decide that that's ok",
    "start": "779190",
    "end": "785190"
  },
  {
    "text": "then you need to deploy the model into some production setting whether it's a batch setting or a real-time inference",
    "start": "785190",
    "end": "790890"
  },
  {
    "text": "setting and then you need to monitor that while it's running and make sure that the one of the problems that models",
    "start": "790890",
    "end": "796769"
  },
  {
    "text": "as is the world changes out from under them you know your customer makes change is the camera is moved in a you know in",
    "start": "796769",
    "end": "806009"
  },
  {
    "text": "a vision application you know different things can happen that that make the quality of the results change and you",
    "start": "806009",
    "end": "812069"
  },
  {
    "text": "guys to keep track of them so these are all parts of this right but what you",
    "start": "812069",
    "end": "818009"
  },
  {
    "text": "notice is they're all these lines going between them all right and if I'm just",
    "start": "818009",
    "end": "823379"
  },
  {
    "text": "creating a model from scratch then what happens is I'm sitting there in the",
    "start": "823379",
    "end": "828420"
  },
  {
    "text": "notebook and I'm kind of doing each of these steps one at a time but once I begin to get into more of a production setting I want some automation around",
    "start": "828420",
    "end": "834899"
  },
  {
    "text": "that and this diamond is still a problem no matter what I have to figure out how I'm going to decide if the model is good",
    "start": "834899",
    "end": "840360"
  },
  {
    "text": "enough and so to talk about how we look at solving that and how we use step functions to solve that I'm going to",
    "start": "840360",
    "end": "846299"
  },
  {
    "text": "turn it back over to Andy thank you so it'll come as a maybe no surprise how do",
    "start": "846299",
    "end": "851759"
  },
  {
    "text": "I do the lines between the steps well one answer is ABS step functions in",
    "start": "851759",
    "end": "857100"
  },
  {
    "text": "every step functions a fully managed workflow service that let you build resilient service workflows with less",
    "start": "857100",
    "end": "863160"
  },
  {
    "text": "code to write and maintain and no servers to configure or manage so the question is for those of you that don't",
    "start": "863160",
    "end": "868860"
  },
  {
    "text": "know step functions how does it work so we'll start with the same example tom talked about a photo sharing app you can",
    "start": "868860",
    "end": "874230"
  },
  {
    "text": "say suppose we're building this app and we want to take a photo there when upload to s3 so start with the photo who",
    "start": "874230",
    "end": "888269"
  },
  {
    "text": "wants to wave thank you all right so we",
    "start": "888269",
    "end": "893850"
  },
  {
    "text": "have this photo we sent up s3 I've got an image of the crowd and maybe I want",
    "start": "893850",
    "end": "898980"
  },
  {
    "text": "to do a few things at this photograph like for example I might want to make a thumbnail of it so I have a smaller version of it and maybe I also want to",
    "start": "898980",
    "end": "905279"
  },
  {
    "text": "send it to Amazon recognition and use the feet properties Amazon recognition to do things like say is Jeff bar in the",
    "start": "905279",
    "end": "911579"
  },
  {
    "text": "room let's find his face or count how many people are here or just tell me",
    "start": "911579",
    "end": "918269"
  },
  {
    "text": "who's in you know who's in the room where am i what's the scene what's the location and maybe I want do these",
    "start": "918269",
    "end": "923279"
  },
  {
    "text": "things at the same time and when I'm done write that information into a datastore like say dynamo that's a basic workflow",
    "start": "923279",
    "end": "929780"
  },
  {
    "text": "and step functions that worked well that we described is sitting here on the on",
    "start": "929780",
    "end": "935630"
  },
  {
    "text": "the left side that's what I described that works on the right is that we're from implemented in step functions and",
    "start": "935630",
    "end": "941690"
  },
  {
    "text": "we implement workflows and step functions as finite state machines and they have a variety of states we have",
    "start": "941690",
    "end": "947150"
  },
  {
    "text": "states that are tasks we have states that are choices for branching logic we have tasks to declare failure and throw",
    "start": "947150",
    "end": "952310"
  },
  {
    "text": "an error code we could do things in parallel we have a parallel state and so that workflow I described upload a photo",
    "start": "952310",
    "end": "957950"
  },
  {
    "text": "and it has when it gets there it has three starter workflow that makes the thumbnail sends it a recognition right",
    "start": "957950",
    "end": "964310"
  },
  {
    "text": "the tags to Dynamo that's the workflow and on the other right side doing the same thing now how do I actually write",
    "start": "964310",
    "end": "970070"
  },
  {
    "text": "these things well I write these things using something called Amazon States language is really declarative Jason and",
    "start": "970070",
    "end": "975890"
  },
  {
    "text": "it's fairly straightforward I can put in comments so that comment is a keyword that will just say ignore this every",
    "start": "975890",
    "end": "982070"
  },
  {
    "text": "workflow says where do I start so you say start at this state this state is called extract image metadata that's the",
    "start": "982070",
    "end": "987380"
  },
  {
    "text": "first state of the workflow now if we take a look at that state it's a certain type of state in this case it's a task it's going to do work and it says where",
    "start": "987380",
    "end": "995000"
  },
  {
    "text": "do I do the work and that's where you give it the resource in this case the resource is a lambda function you tell it which lambda function by giving it",
    "start": "995000",
    "end": "1000850"
  },
  {
    "text": "the lambda functions aren't and it goes to that lambda function says go do this work and call me back when you're done and lambda will return the result and",
    "start": "1000850",
    "end": "1007810"
  },
  {
    "text": "then when it's done you say what's next and the next state says go here so these workflows are a lot of go-to statements",
    "start": "1007810",
    "end": "1013210"
  },
  {
    "text": "with this next thing but another nice thing you can do in step functions is have catch and retry logic so if that",
    "start": "1013210",
    "end": "1018970"
  },
  {
    "text": "lambda function has a problem the image is too big it throws an exception you can catch that exception and go down",
    "start": "1018970",
    "end": "1024699"
  },
  {
    "text": "different branches of your workflow with the catch statement in this task State so you don't write the code you just say if lam because we back this message go",
    "start": "1024699",
    "end": "1031240"
  },
  {
    "text": "this direction and if it's the kind of error you just want to try again you can retry and you can set retries",
    "start": "1031240",
    "end": "1036250"
  },
  {
    "text": "with linear and exponential back-off for as many times as you think appropriate before failing the execution of workflows so you build in a lot of",
    "start": "1036250",
    "end": "1042220"
  },
  {
    "text": "resilience without writing a lot of code now the heavy lifting in in these",
    "start": "1042220",
    "end": "1048010"
  },
  {
    "text": "workflows are done by the task States and and step functions has two types of task states the first is called an",
    "start": "1048010",
    "end": "1055270"
  },
  {
    "text": "activity task and this is where the worker actually requests work from step functions so in step functions gets to",
    "start": "1055270",
    "end": "1061540"
  },
  {
    "text": "at a state that's next type of activity it schedules the work and waits for a worker to call in and say hey do you",
    "start": "1061540",
    "end": "1068260"
  },
  {
    "text": "have a job for me and if step function says yes I do it sends at the payload from the state and it sends it a tasks token that map's",
    "start": "1068260",
    "end": "1074740"
  },
  {
    "text": "back to that specific execution of the state machine worker goes off and does work when it's done send the result back",
    "start": "1074740",
    "end": "1081130"
  },
  {
    "text": "and step functions maps that result back to the correct state machine now all this is going on you don't pay for step",
    "start": "1081130",
    "end": "1087340"
  },
  {
    "text": "functions waiting for that activity worker you only pay when you transition between states and that activity tasks can be waiting for up to one year",
    "start": "1087340",
    "end": "1094690"
  },
  {
    "text": "so never pay for idle with step functions an activity task and what can be an activity worker any compute",
    "start": "1094690",
    "end": "1101770"
  },
  {
    "text": "environment they can call the step functions API so that means an ec2 instance an ECS container it could be a",
    "start": "1101770",
    "end": "1106870"
  },
  {
    "text": "mobile phone if it has access on the internet all these things can call step functions and take work do it and return",
    "start": "1106870",
    "end": "1113110"
  },
  {
    "text": "result now the other type of task is a lambda task and and in this case that",
    "start": "1113110",
    "end": "1119440"
  },
  {
    "text": "behaviors a little bit different when step functions transitions into a task state that is calling a lambda function",
    "start": "1119440",
    "end": "1124450"
  },
  {
    "text": "step functions will synchronously call that lambda function for you in your account pass at the payload weight field",
    "start": "1124450",
    "end": "1130480"
  },
  {
    "text": "lambda function to complete and lambda will return result back to the state machine it will process that output and move on to the next step in the workflow",
    "start": "1130480",
    "end": "1136450"
  },
  {
    "text": "and as maybe you've heard lambda functions now run up to 15 minutes and so this is a way to do tasks that take",
    "start": "1136450",
    "end": "1142570"
  },
  {
    "text": "up to 15 minutes at a time and you can compose workflows out of out of both of these things I have a lot of",
    "start": "1142570",
    "end": "1148720"
  },
  {
    "text": "customers have built very big workloads and this you know on step functions some of the ones we talked about previously",
    "start": "1148720",
    "end": "1154860"
  },
  {
    "text": "yelp coca-cola and this week Novartis yelp had a monolith that they wanted to",
    "start": "1154860",
    "end": "1162070"
  },
  {
    "text": "make look like a micro service and so they wrapped it in state machines and step functions their monolith took care of subscription billing for all their",
    "start": "1162070",
    "end": "1168070"
  },
  {
    "text": "business b2b customers and it was one of these nested batch processes where if it broke it was a stop the world event that",
    "start": "1168070",
    "end": "1174100"
  },
  {
    "text": "would page the DevOps the middle of the night they'd have to get up fix it and get the thing restarted because the build cycle had to get done on time by",
    "start": "1174100",
    "end": "1180760"
  },
  {
    "text": "wrapping in step functions every bill for every customer suddenly became a micro service and if it failed they",
    "start": "1180760",
    "end": "1186100"
  },
  {
    "text": "noted it and they just kept going and the net result was they had greater observability into this monolith and it",
    "start": "1186100",
    "end": "1191590"
  },
  {
    "text": "actually ran the jobs faster coca-cola used step function to build a completely",
    "start": "1191590",
    "end": "1196600"
  },
  {
    "text": "serve nutrition syndication pipeline which took data from clinical updates within",
    "start": "1196600",
    "end": "1201920"
  },
  {
    "text": "coke and dispatcher to all their partners we imagine all the paddling centers and all the restaurants and everywhere else they distribute",
    "start": "1201920",
    "end": "1206930"
  },
  {
    "text": "coca-cola products this used to be a very manual labor intensive process then that took hours and they turn into",
    "start": "1206930",
    "end": "1213230"
  },
  {
    "text": "something that took minutes and they used the the visual diagram of the",
    "start": "1213230",
    "end": "1219140"
  },
  {
    "text": "workflow to facilitate collaboration between the software engineers and in this case the clinical regulatory",
    "start": "1219140",
    "end": "1225020"
  },
  {
    "text": "scientists where they could very quickly have this common lingua franca to describe is this the workflow we're looking for yes or no and get feedback a",
    "start": "1225020",
    "end": "1231620"
  },
  {
    "text": "very quick feedback loop to improve that workflow and then finally Novartis which is you know one of the largest",
    "start": "1231620",
    "end": "1237440"
  },
  {
    "text": "pharmaceutical companies the world uses step functions with AWS batch which lets you do batch processing to process",
    "start": "1237440",
    "end": "1244250"
  },
  {
    "text": "images that they get from their drug discovery programs so they take thousands thousands of photographs and",
    "start": "1244250",
    "end": "1249680"
  },
  {
    "text": "these step functions to make sure that all the images go through image processing on batch and no image gets",
    "start": "1249680",
    "end": "1255590"
  },
  {
    "text": "left behind because they're their experiments are designed to be statistically accurate by getting back all the data and step functions ensures",
    "start": "1255590",
    "end": "1262190"
  },
  {
    "text": "that all the data does come back so that's step functions so we'll get back",
    "start": "1262190",
    "end": "1268460"
  },
  {
    "text": "to our story now we've got sage maker and step functions peanut butter and chocolate we'll talk about how we put",
    "start": "1268460",
    "end": "1275030"
  },
  {
    "text": "these things together so let's go back to that machine learning cycle and Tom mentioned you know there's a step here",
    "start": "1275030",
    "end": "1282020"
  },
  {
    "text": "that he glossed over which is I've made a model and there's a question is is this model any good that can't always be",
    "start": "1282020",
    "end": "1290390"
  },
  {
    "text": "decided by an algorithm sometimes it has to be decided by a human and so how do",
    "start": "1290390",
    "end": "1295520"
  },
  {
    "text": "you deal with a human and a loop of one of these workflows well it turns out you can actually do this workflow with step",
    "start": "1295520",
    "end": "1301880"
  },
  {
    "text": "functions as well and to give you an idea of how that's done I'd like to give the stage over to Jeremy Irwin thank you",
    "start": "1301880",
    "end": "1312040"
  },
  {
    "text": "all right good afternoon for those of you that may not have heard of Cox automotive we're obviously operating the automotive",
    "start": "1312820",
    "end": "1319269"
  },
  {
    "text": "vertical our clients ranged from consumers to OEMs and we're generally",
    "start": "1319269",
    "end": "1324909"
  },
  {
    "text": "building products that that suit their interests so some of the products that you may have come across are things like",
    "start": "1324909",
    "end": "1331509"
  },
  {
    "text": "Kelly Blue Book comm if you're doing automotive research here in the US or in select countries or you may have used",
    "start": "1331509",
    "end": "1338169"
  },
  {
    "text": "one of our one of our products to schedule an automotive service appointment when you had to take your",
    "start": "1338169",
    "end": "1343960"
  },
  {
    "text": "car in for some surface and I'm going to share a model review pipeline that we",
    "start": "1343960",
    "end": "1349120"
  },
  {
    "text": "build using AWS step functions to solve this issue of a human needing to review",
    "start": "1349120",
    "end": "1355750"
  },
  {
    "text": "the model before it went to production so we'll start with a quote from one of",
    "start": "1355750",
    "end": "1361600"
  },
  {
    "text": "our decision scientists and I'm going to use the cert the term decision scientist",
    "start": "1361600",
    "end": "1367200"
  },
  {
    "text": "synonymously with data scientist that's just how we brand it at Cox emotive and Jeff's concern was that the",
    "start": "1367200",
    "end": "1376149"
  },
  {
    "text": "underlying data that the model is being retrained on is going to change over time and because we're kind of one step",
    "start": "1376149",
    "end": "1382330"
  },
  {
    "text": "removed from that model being or from that data being updated we don't always see changes in the patterns and that",
    "start": "1382330",
    "end": "1388690"
  },
  {
    "text": "could lead to either bias being introduced to the prediction model or",
    "start": "1388690",
    "end": "1393929"
  },
  {
    "text": "unintended consequences that we didn't set out to do in the first place so the",
    "start": "1393929",
    "end": "1403960"
  },
  {
    "text": "the context of the business context was that our decision science and engineering teams were asked to create a",
    "start": "1403960",
    "end": "1411519"
  },
  {
    "text": "prediction model that was going to be put into an advertising recommendation tool and the four for those of you that",
    "start": "1411519",
    "end": "1420639"
  },
  {
    "text": "may not be familiar with advertising it's it's a little bit like it's a",
    "start": "1420639",
    "end": "1426879"
  },
  {
    "text": "little bit like your retirement portfolio so instead of determining stocks and bonds and mutual funds and",
    "start": "1426879",
    "end": "1432909"
  },
  {
    "text": "then weighing the relative risk and return we're trying to help our clients make decisions on where they're spending their advertising dollars should they be",
    "start": "1432909",
    "end": "1439179"
  },
  {
    "text": "spending it in search advertising and video advertising in search or social advertising and we're trying to",
    "start": "1439179",
    "end": "1446290"
  },
  {
    "text": "give them the greatest gain in terms of website visits form submissions phone",
    "start": "1446290",
    "end": "1452320"
  },
  {
    "text": "calls to their to their dealership and so what the plan was that was that our",
    "start": "1452320",
    "end": "1458920"
  },
  {
    "text": "engineering team already has an application that is creating recommendations we're going to put a",
    "start": "1458920",
    "end": "1464320"
  },
  {
    "text": "prediction model into that application so engineering was going to take care of the backend services the front-end services the UI and our decision",
    "start": "1464320",
    "end": "1471400"
  },
  {
    "text": "sciences team was going to create the the algorithm that would drive drive the",
    "start": "1471400",
    "end": "1477520"
  },
  {
    "text": "UI or a part of the UI but we weren't really sure how to integrate each",
    "start": "1477520",
    "end": "1482800"
  },
  {
    "text": "other's work because we're gonna essentially build an algorithm throw it over the fence to engineering who is",
    "start": "1482800",
    "end": "1488200"
  },
  {
    "text": "then going to to put that algorithm into production so our engineering team was",
    "start": "1488200",
    "end": "1494230"
  },
  {
    "text": "concerned with how are you delivering the model how often is it being delivered how do I monitor whether the",
    "start": "1494230",
    "end": "1501100"
  },
  {
    "text": "delivery was successful and our decision science team was more concerned about",
    "start": "1501100",
    "end": "1507150"
  },
  {
    "text": "how can I not get involved in the deployment I'm gonna give you a retrained model and I don't want to be",
    "start": "1507150",
    "end": "1514570"
  },
  {
    "text": "involved because we work on different Cadence's our engineering team is on",
    "start": "1514570",
    "end": "1520750"
  },
  {
    "text": "two-week Sprint's our addition decision science team is more on a waterfall based project so those schedules",
    "start": "1520750",
    "end": "1526390"
  },
  {
    "text": "generally don't don't align very well so our approach to work is is pretty varied",
    "start": "1526390",
    "end": "1534280"
  },
  {
    "text": "even though we're working on the same thing our goal is that we're putting ml into a product",
    "start": "1534280",
    "end": "1539440"
  },
  {
    "text": "however the roles on the teams are different the tools that we use are",
    "start": "1539440",
    "end": "1544960"
  },
  {
    "text": "different the languages that we use are different the development processes that we use are different our decision",
    "start": "1544960",
    "end": "1550930"
  },
  {
    "text": "science team wants to or is focused on model precision and accuracy our",
    "start": "1550930",
    "end": "1556240"
  },
  {
    "text": "engineering team wants performance we if we're going to put this into a UI we need sub-second performance we don't",
    "start": "1556240",
    "end": "1562720"
  },
  {
    "text": "want the model taking a couple of seconds to return us a value we also",
    "start": "1562720",
    "end": "1570220"
  },
  {
    "text": "wanted to support our decision science team using our because that's what is most natural to them our engineering",
    "start": "1570220",
    "end": "1577090"
  },
  {
    "text": "team tends to use Java and we want to make liberation between those teams as easy as possible so that we wouldn't have to",
    "start": "1577090",
    "end": "1583370"
  },
  {
    "text": "think about doing the work every time model was retrained and needed to go to",
    "start": "1583370",
    "end": "1588890"
  },
  {
    "text": "production so thanks to Olli this was kind of our starting point was this AWS",
    "start": "1588890",
    "end": "1595850"
  },
  {
    "text": "blog it provides very basic example but the the value is that you're running",
    "start": "1595850",
    "end": "1601520"
  },
  {
    "text": "this process that can as Andy said take up to a year before the the state",
    "start": "1601520",
    "end": "1607730"
  },
  {
    "text": "machine will fail and that allowed us to get this human-in-the-loop feedback",
    "start": "1607730",
    "end": "1613610"
  },
  {
    "text": "before models promoted to production so here's what our model deployment",
    "start": "1613610",
    "end": "1620059"
  },
  {
    "text": "pipeline looks like so if you imagine the slide that Andy was just talking to where the data scientist makes a",
    "start": "1620059",
    "end": "1625809"
  },
  {
    "text": "decision this is like that part of the process and we're zoomed in the VP see",
    "start": "1625809",
    "end": "1631760"
  },
  {
    "text": "on the Left represents a decision science account the VP see on the right represents an engineering account and",
    "start": "1631760",
    "end": "1638679"
  },
  {
    "text": "our model artifacts are being delivered in a zip format and the model itself is being delivered as a tarball",
    "start": "1638679",
    "end": "1645520"
  },
  {
    "text": "and so the way that this works is that when a model is retrained it's dropped into an s3 bucket that s3 bucket invokes",
    "start": "1645520",
    "end": "1652010"
  },
  {
    "text": "a lambda which starts the execution of a state machine and that state machine is",
    "start": "1652010",
    "end": "1657799"
  },
  {
    "text": "then going to going to wait because the there's an external worker that you can",
    "start": "1657799",
    "end": "1664279"
  },
  {
    "text": "see in an orange that's checking in with state machine every five minutes to see if there's a new model available and",
    "start": "1664279",
    "end": "1670520"
  },
  {
    "text": "that five minutes is configurable that's just what what we have set in our pipeline so there's a cloud watch",
    "start": "1670520",
    "end": "1677590"
  },
  {
    "text": "scheduled lambda that is invoked every five minutes two checks in if new models",
    "start": "1677590",
    "end": "1683059"
  },
  {
    "text": "are available if new models are available what that lambda is going to do is construct an email send an email",
    "start": "1683059",
    "end": "1689539"
  },
  {
    "text": "through SES and SES a simple email service if you're not familiar with it",
    "start": "1689539",
    "end": "1694850"
  },
  {
    "text": "and it's just amazon's service for sending and receiving email that goes to",
    "start": "1694850",
    "end": "1700809"
  },
  {
    "text": "an alias for our data scientists notifying them that a new model is",
    "start": "1700809",
    "end": "1706580"
  },
  {
    "text": "available please review the diagnostics and then determine whether this thing should go to production or whether to",
    "start": "1706580",
    "end": "1712610"
  },
  {
    "text": "reject it and it will go to production so someone takes their time to review that then they eventually",
    "start": "1712610",
    "end": "1719860"
  },
  {
    "text": "click one of the links in the email that hires off a request to API gateway which then invokes the lambda which is going",
    "start": "1719860",
    "end": "1725929"
  },
  {
    "text": "to prepare arguments to give back to the the state machine to let the state machine know which way it should go",
    "start": "1725929",
    "end": "1732620"
  },
  {
    "text": "approve or reject and that's that's what you see in in in the blue loop if the",
    "start": "1732620",
    "end": "1739070"
  },
  {
    "text": "model is approved then what you see with the pink lines on the on the diagram",
    "start": "1739070",
    "end": "1744380"
  },
  {
    "text": "happens so state machine invokes another lambda in that lambda all it's doing is is copying from one s3 bucket to another",
    "start": "1744380",
    "end": "1752169"
  },
  {
    "text": "so let's lick let's take a look at the details of the step function itself because that's where kind of all of this",
    "start": "1752169",
    "end": "1759080"
  },
  {
    "text": "is centered around so the the visualization at the left-hand side of",
    "start": "1759080",
    "end": "1764240"
  },
  {
    "text": "the screen like what Andy said this is this is available in the AWS console and",
    "start": "1764240",
    "end": "1770179"
  },
  {
    "text": "it's kind of a nice visualization of what your state machine looks like so I'll just talk through each of the",
    "start": "1770179",
    "end": "1775700"
  },
  {
    "text": "states real quick so that you get an understanding of what each one is doing so so get new model is responsible for",
    "start": "1775700",
    "end": "1781669"
  },
  {
    "text": "getting model metadata mainly the s3 prefix and the and the file name get manual review is the state that's",
    "start": "1781669",
    "end": "1789530"
  },
  {
    "text": "responsible for both creating the email sending it out to the team as well as",
    "start": "1789530",
    "end": "1795350"
  },
  {
    "text": "receiving the response back from our decision scientists and then it moves on",
    "start": "1795350",
    "end": "1802100"
  },
  {
    "text": "to approve or reject new model which is a choice state and it's going to say okay based on that data scientist input",
    "start": "1802100",
    "end": "1808220"
  },
  {
    "text": "which one of these paths do I go down a prove new model the approve new model state is simply that state that copies",
    "start": "1808220",
    "end": "1814880"
  },
  {
    "text": "the the model from our decision science account to our engineering account and",
    "start": "1814880",
    "end": "1820240"
  },
  {
    "text": "success state and reject new model states are simply passed in failed",
    "start": "1820240",
    "end": "1825260"
  },
  {
    "text": "States so that the model will finish cleanly and then let's take a look at",
    "start": "1825260",
    "end": "1832460"
  },
  {
    "text": "the code snippet on on the right so you can see get new model that's where it's starting",
    "start": "1832460",
    "end": "1837590"
  },
  {
    "text": "and the get new model has a resource of a lambda and the get manual review has a",
    "start": "1837590",
    "end": "1846080"
  },
  {
    "text": "resource of an activity so I want to talk a little bit more about that the activity is resource",
    "start": "1846080",
    "end": "1852320"
  },
  {
    "text": "because that's what's helping us get the human in the loop and in our process I'll mention result path here the first",
    "start": "1852320",
    "end": "1860750"
  },
  {
    "text": "one it's denoted by a dollar sign that just basically means hey state whatever you get as input send it through his",
    "start": "1860750",
    "end": "1867770"
  },
  {
    "text": "output and in the second example the get manual review there's dollar sign doubt task result it's saying get what you",
    "start": "1867770",
    "end": "1874309"
  },
  {
    "text": "have as input take whatever the worker output append those two things together and send that through as the states",
    "start": "1874309",
    "end": "1881029"
  },
  {
    "text": "output a show of hands anyone have applications that have time outs of of",
    "start": "1881029",
    "end": "1886610"
  },
  {
    "text": "one week okay I'm the only one so",
    "start": "1886610",
    "end": "1892480"
  },
  {
    "text": "there's there's other there's other parameters that you can configure in the state but we've set our time out to be a",
    "start": "1892480",
    "end": "1897830"
  },
  {
    "text": "week so we expect our decision scientists to reply to the email in or click a link in the email within a week",
    "start": "1897830",
    "end": "1905980"
  },
  {
    "text": "so now let's let's move on to a couple of a couple of the important features",
    "start": "1906520",
    "end": "1912320"
  },
  {
    "text": "that I that I want to share with you that were kind of essential in building this one is the activity token and then",
    "start": "1912320",
    "end": "1918740"
  },
  {
    "text": "the other one is the state input output",
    "start": "1918740",
    "end": "1922840"
  },
  {
    "text": "all right so Andy already described the process that I have in pink on the slide",
    "start": "1930830",
    "end": "1937049"
  },
  {
    "text": "what I'm calling the call work respond pattern this is where the external",
    "start": "1937049",
    "end": "1942210"
  },
  {
    "text": "worker is just calling the activity it gets a token it does its work then",
    "start": "1942210",
    "end": "1947580"
  },
  {
    "text": "returns a response and for our pipeline we had this process they starts in pink",
    "start": "1947580",
    "end": "1953669"
  },
  {
    "text": "but then ends in orange and when I'm calling the call work delegate respond pattern so first part happens but then",
    "start": "1953669",
    "end": "1961289"
  },
  {
    "text": "that token that you get from the state is is essentially delegated to any number of downstream services that you",
    "start": "1961289",
    "end": "1968369"
  },
  {
    "text": "want it to be delegated to or downstream workers and eventually someone needs to",
    "start": "1968369",
    "end": "1973440"
  },
  {
    "text": "pass that task token or something needs to pass a tactic task token back to the states of the state can update itself",
    "start": "1973440",
    "end": "1979139"
  },
  {
    "text": "and this is what's allowing us to have this kind of out-of-band process happen",
    "start": "1979139",
    "end": "1985190"
  },
  {
    "text": "within our pipeline so let's take a look at what this what this looks like on the",
    "start": "1985190",
    "end": "1991469"
  },
  {
    "text": "Left I'll I'll be highlighting the portion of the of the process that",
    "start": "1991469",
    "end": "1996989"
  },
  {
    "text": "corresponds to the code snippets on the right so let's pretend the new model is",
    "start": "1996989",
    "end": "2002749"
  },
  {
    "text": "available cod watch scheduled lambda says hey there's a new model it's going to get the model it's a model",
    "start": "2002749",
    "end": "2009289"
  },
  {
    "text": "Diagnostics file and it's going to parse the or grant get the task token from the",
    "start": "2009289",
    "end": "2017089"
  },
  {
    "text": "state machine and all we're doing here simply is calling this get activity task function which returns Casa token we're",
    "start": "2017089",
    "end": "2025070"
  },
  {
    "text": "parsing that out and then URL encoding it because we're going to use that task token as a path parameter on the end of",
    "start": "2025070",
    "end": "2031399"
  },
  {
    "text": "the of the URL so once once we build",
    "start": "2031399",
    "end": "2037159"
  },
  {
    "text": "that we send this thing through through SES to generate an email so what is the",
    "start": "2037159",
    "end": "2044839"
  },
  {
    "text": "data scientists actually see",
    "start": "2044839",
    "end": "2048158"
  },
  {
    "text": "here's the email that they see and this is generated through SES this isn't pretty it's not client-facing or",
    "start": "2051440",
    "end": "2058888"
  },
  {
    "text": "customer-facing and so it's just a raw a raw email there's mild diagnostics",
    "start": "2058889",
    "end": "2065940"
  },
  {
    "text": "attached to the email and that's serving two purposes one is our decision scientist doesn't have to go go fetch",
    "start": "2065940",
    "end": "2073020"
  },
  {
    "text": "the model Diagnostics and that's also eliminating errors from happening because they could grab the Diagnostics",
    "start": "2073020",
    "end": "2079858"
  },
  {
    "text": "for the wrong model and then click that click the button incorrectly and make a wrong decision and move something into",
    "start": "2079859",
    "end": "2085138"
  },
  {
    "text": "production that we don't intend to move to predict production and then those big long links that you see at the bottom",
    "start": "2085139",
    "end": "2091888"
  },
  {
    "text": "are simply approving or eject links it's the URL for API gateway with path of",
    "start": "2091889",
    "end": "2098400"
  },
  {
    "text": "approver reject and then that then really long task token string on the end of it so we'll move to the part of the",
    "start": "2098400",
    "end": "2107880"
  },
  {
    "text": "process and before we go there I just want to share how we configured API",
    "start": "2107880",
    "end": "2113190"
  },
  {
    "text": "gateway so API gateway has a single endpoint there's two paths a proven reject and this is this was it's",
    "start": "2113190",
    "end": "2120390"
  },
  {
    "text": "expecting it's expecting a task token this is defined in the server list framework so if you're using AWS native",
    "start": "2120390",
    "end": "2126180"
  },
  {
    "text": "tools this is going to look a little bit different than what I have on on the screen but we're using service to deploy",
    "start": "2126180",
    "end": "2132390"
  },
  {
    "text": "our lambdas and and lambda associated AWS services so now that we see that how",
    "start": "2132390",
    "end": "2141240"
  },
  {
    "text": "that's defined I want to kind of complete the loop so in orange we're",
    "start": "2141240",
    "end": "2148799"
  },
  {
    "text": "simply just parsing the task token from the from the string that goes through",
    "start": "2148799",
    "end": "2156089"
  },
  {
    "text": "API gateway and we're adding tasks",
    "start": "2156089",
    "end": "2161579"
  },
  {
    "text": "success output and task failure output because that's going to drive for a subsequent state machine behavior and",
    "start": "2161579",
    "end": "2168660"
  },
  {
    "text": "then we're preparing arguments the task token and and the output in this slide",
    "start": "2168660",
    "end": "2176609"
  },
  {
    "text": "and then this is part of the same process we're using the state machine",
    "start": "2176609",
    "end": "2181980"
  },
  {
    "text": "function called send task success to pass that through to AWS step functions one thing that I want to call",
    "start": "2181980",
    "end": "2189599"
  },
  {
    "text": "out that I think that's important and I made a mistake when I first went through it is if you if you use the function",
    "start": "2189599",
    "end": "2196859"
  },
  {
    "text": "called sin task failure that fails the state immediately and your state machine",
    "start": "2196859",
    "end": "2201930"
  },
  {
    "text": "doesn't finish cleanly so to prevent failure ambiguity we're using some task success so that even if the model is",
    "start": "2201930",
    "end": "2208799"
  },
  {
    "text": "rejected by the the data scientist that our state machine is still going to finish cleanly and we won't have to",
    "start": "2208799",
    "end": "2214230"
  },
  {
    "text": "worry about a state machine that is half finished as having maybe being a",
    "start": "2214230",
    "end": "2219990"
  },
  {
    "text": "rejected model or maybe having some sort of other other error so now that I've",
    "start": "2219990",
    "end": "2225299"
  },
  {
    "text": "kind of shared how we're passing around the token to to enable this human-in-the-loop process I want to take",
    "start": "2225299",
    "end": "2231299"
  },
  {
    "text": "just a few moments to talk about state input and output so lambdas are",
    "start": "2231299",
    "end": "2238049"
  },
  {
    "text": "intrinsically stateless and we're using state machines to help capture some",
    "start": "2238049",
    "end": "2246630"
  },
  {
    "text": "history some state from previous lambdas and so where this comes into an R in our",
    "start": "2246630",
    "end": "2251759"
  },
  {
    "text": "pipeline is that our first state gets metadata about the new model our fourth",
    "start": "2251759",
    "end": "2258119"
  },
  {
    "text": "state I think fourth state requires it needs to know where the model is because if the model is approved it needs to go",
    "start": "2258119",
    "end": "2264119"
  },
  {
    "text": "fetch it so we don't have to make subsequent calls to s3 and try to figure out what the model was that started the",
    "start": "2264119",
    "end": "2269910"
  },
  {
    "text": "execution of the state machine we just passed that data all the way through the workflow so that the downstream state",
    "start": "2269910",
    "end": "2277289"
  },
  {
    "text": "that requires it has it available and if we need to know information about the",
    "start": "2277289",
    "end": "2284309"
  },
  {
    "text": "history of how a lambda executed we can also pass that through as a output so",
    "start": "2284309",
    "end": "2291269"
  },
  {
    "text": "this is what it looks like as output from the state machine so get new model",
    "start": "2291269",
    "end": "2298079"
  },
  {
    "text": "get has Diagnostics file path and Diagnostics filename and it has that as",
    "start": "2298079",
    "end": "2304650"
  },
  {
    "text": "its output because it has that data as its output get that's the input to get",
    "start": "2304650",
    "end": "2309660"
  },
  {
    "text": "manual review and get manual review as I mentioned is this state that is responsible for it both sending the",
    "start": "2309660",
    "end": "2316259"
  },
  {
    "text": "email and getting the reply from the data scientists so when that reply comes in we append the task result",
    "start": "2316259",
    "end": "2322630"
  },
  {
    "text": "with with his or her decision and then keep flowing through the through the",
    "start": "2322630",
    "end": "2328540"
  },
  {
    "text": "state machine and this approver reject new model state is basically a choice",
    "start": "2328540",
    "end": "2334420"
  },
  {
    "text": "state and it's looking for an object called task result and parameter called decision then just doing a string",
    "start": "2334420",
    "end": "2341050"
  },
  {
    "text": "comparison to determine whether it's approved or approved or rejected so",
    "start": "2341050",
    "end": "2348850"
  },
  {
    "text": "here's what we changed about the AWS vlog it was it was very simple there was a single state state machine it was",
    "start": "2348850",
    "end": "2355870"
  },
  {
    "text": "created with the AWS console which obviously was not going to work for us to stamp these things out in production",
    "start": "2355870",
    "end": "2361240"
  },
  {
    "text": "and it didn't leverage state input and output at all we also had to change some",
    "start": "2361240",
    "end": "2367030"
  },
  {
    "text": "other things with SCS and our infrastructure as code scripts but I",
    "start": "2367030",
    "end": "2373120"
  },
  {
    "text": "won't get into the details of those so are walking away from this this pipeline",
    "start": "2373120",
    "end": "2379930"
  },
  {
    "text": "allows us to collaborate a little bit easier and reduce weight states and",
    "start": "2379930",
    "end": "2386260"
  },
  {
    "text": "frustration between the teams as I said the teams are on different Cadence's and because it's all automated in in AWS the",
    "start": "2386260",
    "end": "2395290"
  },
  {
    "text": "data science folks can do their work and when a model is approved for production",
    "start": "2395290",
    "end": "2401100"
  },
  {
    "text": "approve it and then just go since it's an engineering bucket until engineering is ready to deploy it to production so",
    "start": "2401100",
    "end": "2407490"
  },
  {
    "text": "that's that's helped kind of the integration between both teams thank you",
    "start": "2407490",
    "end": "2414820"
  },
  {
    "text": "that's really interesting I'm curious in this experience what did you learn from each other what did the",
    "start": "2414820",
    "end": "2420700"
  },
  {
    "text": "data scientist learn from the engineers in this experience our our data scientists learned how to share",
    "start": "2420700",
    "end": "2429510"
  },
  {
    "text": "no offense any data scientists there they're just they're just weren't",
    "start": "2429660",
    "end": "2434819"
  },
  {
    "text": "following the same patterns that we use in engineering so the if they were",
    "start": "2434819",
    "end": "2440039"
  },
  {
    "text": "working on a project and working on a model they would create their own infrastructure and services for that",
    "start": "2440039",
    "end": "2445980"
  },
  {
    "text": "specific project and there wasn't this concept of building something like a pipeline that can be used across the",
    "start": "2445980",
    "end": "2451650"
  },
  {
    "text": "team across all projects we help them use terraform in a way where they can",
    "start": "2451650",
    "end": "2457530"
  },
  {
    "text": "share terraform scripts and and not overwrite one another and not worry",
    "start": "2457530",
    "end": "2462569"
  },
  {
    "text": "about stepping on one another and then lastly they're operating one AWS account",
    "start": "2462569",
    "end": "2467670"
  },
  {
    "text": "and we're generally operating in at least two non Pradhan fraud and so we've also introduced that concept by",
    "start": "2467670",
    "end": "2473309"
  },
  {
    "text": "parameterizing our code they should be able to run it in in either environment okay and it's only fair I asked so what",
    "start": "2473309",
    "end": "2480720"
  },
  {
    "text": "did engineering learn from the data scientists so the engineers I think we",
    "start": "2480720",
    "end": "2486299"
  },
  {
    "text": "we learned how models can go quote-unquote off the rails like when the underlying data changes sometimes",
    "start": "2486299",
    "end": "2493289"
  },
  {
    "text": "you just won't realize it until it's too late and we don't want our clients to see mistakes the the second thing is",
    "start": "2493289",
    "end": "2500940"
  },
  {
    "text": "that in engineering we can generally like make anything work and kind of even if it's cobbled and hacked together and",
    "start": "2500940",
    "end": "2508880"
  },
  {
    "text": "sometimes then our decision scientists folks just can't make something they can't make a model work if we don't have",
    "start": "2508880",
    "end": "2514859"
  },
  {
    "text": "the right data and then lastly I think and maybe the most important thing is",
    "start": "2514859",
    "end": "2520069"
  },
  {
    "text": "when we're building systems were often thinking about the data that we need for the transaction and what we're going to",
    "start": "2520069",
    "end": "2526230"
  },
  {
    "text": "need if we ever need to go back to that data and what tertiary systems might need but we're not always thinking about",
    "start": "2526230",
    "end": "2532609"
  },
  {
    "text": "if we need to build a model on top of this do we have the right data and are we storing that data in the right format",
    "start": "2532609",
    "end": "2538650"
  },
  {
    "text": "that's gonna enable our data scientists to do their job that's really interesting thank you very much",
    "start": "2538650",
    "end": "2545220"
  },
  {
    "text": "Thanks so that's part three Thank You Jeremy part four is well so what's new",
    "start": "2545220",
    "end": "2553589"
  },
  {
    "text": "so let's come back to building training",
    "start": "2553589",
    "end": "2559079"
  },
  {
    "text": "and deploying models in a jupiter notebook so if you think about it this looks a",
    "start": "2559079",
    "end": "2565019"
  },
  {
    "text": "little bit like a workflow we retrieve the data you click through you say train my model when model training is done you",
    "start": "2565019",
    "end": "2570869"
  },
  {
    "text": "say okay now go transform this batch of data and when you build a single model you can step through these things and",
    "start": "2570869",
    "end": "2576059"
  },
  {
    "text": "iterate as you need but essentially this is a workflow being manually run by a human but you can automate the same",
    "start": "2576059",
    "end": "2583410"
  },
  {
    "text": "workflow with step functions and when you do that it looks something like this so you have a state machine that",
    "start": "2583410",
    "end": "2588539"
  },
  {
    "text": "retrieves data when the data is retrieved it trains the model you wait for the training to complete when the training is complete if it succeeds you",
    "start": "2588539",
    "end": "2595079"
  },
  {
    "text": "go on to create a model and transform that data if that succeeds you can exit and say all is good and you can see this",
    "start": "2595079",
    "end": "2601440"
  },
  {
    "text": "bottom row you can go to different states of success or failure so by inspection you can look at that workflow execution and say did it work or not now",
    "start": "2601440",
    "end": "2608309"
  },
  {
    "text": "this works well but customers like you said hey can you make this easier and so",
    "start": "2608309",
    "end": "2614729"
  },
  {
    "text": "we did today we're introducing the ability to run asynchronous jobs in glue and sage maker without writing code what",
    "start": "2614729",
    "end": "2622499"
  },
  {
    "text": "that means is from a single state you can start a job and that state will wait for that job to complete before moving on to the next step",
    "start": "2622499",
    "end": "2628199"
  },
  {
    "text": "so that workflow we looked at before goes from what you see on the left to something much simpler much cleaner more",
    "start": "2628199",
    "end": "2633660"
  },
  {
    "text": "direct on the right with less time to put it together now how does this work",
    "start": "2633660",
    "end": "2640019"
  },
  {
    "text": "well step functions you write in States language so what's different well so",
    "start": "2640019",
    "end": "2645119"
  },
  {
    "text": "first thing we've introduced is you remember task states have a resource that resource is an arm we're introducing this thing that Tim Bray",
    "start": "2645119",
    "end": "2650969"
  },
  {
    "text": "likes to call a magic arm in this case it's the magic arm for glue so it has a",
    "start": "2650969",
    "end": "2656789"
  },
  {
    "text": "end point States that's step functions the server's are going to call glue and",
    "start": "2656789",
    "end": "2662039"
  },
  {
    "text": "the API we're gonna call which is start job run that's the API call to start a job run in glue losing ETL job service",
    "start": "2662039",
    "end": "2667799"
  },
  {
    "text": "for people who don't know it's a fully managed service spark that dot sync extension at the ends tells step",
    "start": "2667799",
    "end": "2673739"
  },
  {
    "text": "functions hey wait until this job is done so it turned the a synchrotron into a synchronous job now how do you",
    "start": "2673739",
    "end": "2679559"
  },
  {
    "text": "configure the glue job we have this block of parameters which tells glue this is how I want you run the job",
    "start": "2679559",
    "end": "2684749"
  },
  {
    "text": "how many DP use do I want a big job a small job don't want any parameter overrides etc but it's a task state",
    "start": "2684749",
    "end": "2690869"
  },
  {
    "text": "which means that you can still catch errors and you can still retry if something goes wrong with that job so just like lambda tasks",
    "start": "2690869",
    "end": "2696320"
  },
  {
    "text": "we're tivity tasks you can build try-catch patterns into it now for sage maker we have two one is the training",
    "start": "2696320",
    "end": "2703910"
  },
  {
    "text": "job one is the transcript job and you can see the same set of magic irons one is for create training job one is for",
    "start": "2703910",
    "end": "2708950"
  },
  {
    "text": "great transform job and now you see sage makers in the middle that magic Arne but another important thing notice is in",
    "start": "2708950",
    "end": "2714950"
  },
  {
    "text": "these parameter blocks I have two ways of describing them so one is I can make them strings so every execution will",
    "start": "2714950",
    "end": "2720680"
  },
  {
    "text": "give the same parameter sage maker so something like maybe the algorithm that I want to use i specify the container",
    "start": "2720680",
    "end": "2725870"
  },
  {
    "text": "it's the same every time but maybe i'm playing around with parameters i can change those so if you look at the",
    "start": "2725870",
    "end": "2732350"
  },
  {
    "text": "create transform of the transcript job when i put a suffix that dot dollar sign tells step functions hey what comes next",
    "start": "2732350",
    "end": "2739280"
  },
  {
    "text": "is actually jason path and that jason path comes from the input to that task state find it there which means at every",
    "start": "2739280",
    "end": "2745490"
  },
  {
    "text": "execution that workflow and give it a different transform job name and it will substitute that name before calling sage makers api and in this way you can run",
    "start": "2745490",
    "end": "2752600"
  },
  {
    "text": "many many workflows concurrently in parallel and this is a way to scale up your your job from that single notebook",
    "start": "2752600",
    "end": "2758450"
  },
  {
    "text": "that you're stepping to to many many things running in parallel and so this is designed to make life easier now",
    "start": "2758450",
    "end": "2765200"
  },
  {
    "text": "there's more that work on to make life even easier for those you especially how many folks of the data scientists and",
    "start": "2765200",
    "end": "2770720"
  },
  {
    "text": "also the software engineers work in python okay so tom has a surprise for",
    "start": "2770720",
    "end": "2777800"
  },
  {
    "text": "you so this is actually pretty cool we",
    "start": "2777800",
    "end": "2783260"
  },
  {
    "text": "can now use use JSON to define a",
    "start": "2783260",
    "end": "2791500"
  },
  {
    "text": "workflow very cleanly and statically we can then use the visualizations tool and step functions to look at that workflow",
    "start": "2791500",
    "end": "2798230"
  },
  {
    "text": "and we can see the visualizations that jeremy was showing us earlier and that's nice one thing that's missing from this",
    "start": "2798230",
    "end": "2805550"
  },
  {
    "text": "is the ability to attach the lambdas directly when you're using lambdas we",
    "start": "2805550",
    "end": "2811190"
  },
  {
    "text": "tend to use CloudFormation to combine these things so that will define a lambda and then define as a will define",
    "start": "2811190",
    "end": "2817700"
  },
  {
    "text": "a set of lambdas in our in our CloudFormation template and then define the state machine that uses it so that",
    "start": "2817700",
    "end": "2824330"
  },
  {
    "text": "works great but then a lot of times what we find is we want to be able to create",
    "start": "2824330",
    "end": "2829430"
  },
  {
    "text": "very flexible state machines right we don't want necessarily static state machines we don't want to be redefining the the JSON every time and to help with",
    "start": "2829430",
    "end": "2840680"
  },
  {
    "text": "that we can use the AWS cloud developer",
    "start": "2840680",
    "end": "2846410"
  },
  {
    "text": "kit you might have seen the announcements about this or might not have this is a tool that lets you build",
    "start": "2846410",
    "end": "2852500"
  },
  {
    "text": "in code all cloud resources so you can",
    "start": "2852500",
    "end": "2858740"
  },
  {
    "text": "define it it uses cloud formation underneath to deploy the resources and it supports step functions it's a multi",
    "start": "2858740",
    "end": "2864950"
  },
  {
    "text": "language tool currently it's supported in JavaScript typescript Java and c-sharp and of course the languages of",
    "start": "2864950",
    "end": "2874309"
  },
  {
    "text": "data science or Python and our Python is coming I'm going to show you some example code right here so instead of",
    "start": "2874309",
    "end": "2884000"
  },
  {
    "text": "writing JSON I can write here we have",
    "start": "2884000",
    "end": "2889720"
  },
  {
    "text": "person on the upper left we have defining at the transfer step this was the downloading step that we defined",
    "start": "2889720",
    "end": "2896569"
  },
  {
    "text": "that's a lambda this is only part of the code that would define this then below",
    "start": "2896569",
    "end": "2902059"
  },
  {
    "text": "that we see the tasks for doing the sage",
    "start": "2902059",
    "end": "2907369"
  },
  {
    "text": "maker connector to do the training in this actual step function there a bunch",
    "start": "2907369",
    "end": "2913400"
  },
  {
    "text": "of more states that do transforms and stuff but then you can see in the top right now we define the sequence that",
    "start": "2913400",
    "end": "2921319"
  },
  {
    "text": "those steps running and as as simple as just saying axe and axe next here if you have choices you'll have branches and",
    "start": "2921319",
    "end": "2928309"
  },
  {
    "text": "you'll end up getting multiple things and you Lille attached to each one you can fail the state machined and and do",
    "start": "2928309",
    "end": "2934010"
  },
  {
    "text": "all the different things here that happen but it's a very simple way to construct now what's nice and then at",
    "start": "2934010",
    "end": "2939799"
  },
  {
    "text": "the bottom we actually create the cdk version of a state machine that can then",
    "start": "2939799",
    "end": "2945829"
  },
  {
    "text": "be deployed with CloudFormation you can run that state machine so you can create new state machines for every job very",
    "start": "2945829",
    "end": "2951200"
  },
  {
    "text": "simply you can the neat thing about working in Python is we can now create functions or classes that encapsulate",
    "start": "2951200",
    "end": "2958700"
  },
  {
    "text": "part of what we want to do and parameterize it the way we want to program so I can have for example sub-graphs the",
    "start": "2958700",
    "end": "2965180"
  },
  {
    "text": "state machine that maybe not identical that run I can define parallel jobs very",
    "start": "2965180",
    "end": "2971180"
  },
  {
    "text": "easily in code where I have you know I may not know a priori how many things I want to run in parallel but I can",
    "start": "2971180",
    "end": "2977720"
  },
  {
    "text": "construct the state machine that does that sets up that parallel based on the data that it gets so that's pretty cool",
    "start": "2977720",
    "end": "2984590"
  },
  {
    "text": "and that's coming that's we'll have a link to where that is at the end but you",
    "start": "2984590",
    "end": "2992120"
  },
  {
    "text": "can use it today in the languages I talked about and very soon you'll be able to use it in Python so I hope you",
    "start": "2992120",
    "end": "2998930"
  },
  {
    "text": "enjoy that back to you Andy so type",
    "start": "2998930",
    "end": "3004090"
  },
  {
    "text": "thing together really what we're trying to do here with the new features and with sage maker and step functions paired together is really let you spend",
    "start": "3004090",
    "end": "3009700"
  },
  {
    "text": "more time on the code that differentiates your business and deliver faster now some companion sessions",
    "start": "3009700",
    "end": "3016480"
  },
  {
    "text": "relate to breakouts something have to find online some are still available today and tomorrow things around servile",
    "start": "3016480",
    "end": "3022690"
  },
  {
    "text": "state management with the service platform building a venture of and architectures and and sessions on sage",
    "start": "3022690",
    "end": "3028720"
  },
  {
    "text": "maker for more on on sage maker visit",
    "start": "3028720",
    "end": "3034480"
  },
  {
    "text": "amazon.com machine learning for more on step functions you can visit modern apps which has step functions as well as",
    "start": "3034480",
    "end": "3040180"
  },
  {
    "text": "lambda and other service services and to learn more about the cdk it's developing",
    "start": "3040180",
    "end": "3045910"
  },
  {
    "text": "an open-source it's in Developer Preview right now and you can find that on github at a Tobias labs AWS cdk so with",
    "start": "3045910",
    "end": "3053920"
  },
  {
    "text": "that we'll say thank you",
    "start": "3053920",
    "end": "3056700"
  },
  {
    "text": "we'll ask you to please complete the survey in the mobile app nice things please and we'll be at the side to",
    "start": "3064029",
    "end": "3071329"
  },
  {
    "text": "answer questions for anybody wants to stick around and follow up with anything of interest",
    "start": "3071329",
    "end": "3076809"
  }
]