[
  {
    "text": "to get started first of all thanks a lot for attending this session I know it's a",
    "start": "0",
    "end": "5520"
  },
  {
    "text": "really long walk down the hallway I am Chittenden Decker I am product",
    "start": "5520",
    "end": "11519"
  },
  {
    "text": "manager for AWS and I have Capon brinkley from Intuit with me today to talk about AWS CloudFormation",
    "start": "11519",
    "end": "18020"
  },
  {
    "text": "if you are just considering using cloud formation at at this point we have a",
    "start": "18020",
    "end": "23699"
  },
  {
    "text": "quick recap of why you should use cloud formation if you are already a user then",
    "start": "23699",
    "end": "30599"
  },
  {
    "text": "Capon has some great tips to share with you and if you have been a cloud formation user for a while and if you",
    "start": "30599",
    "end": "37680"
  },
  {
    "text": "have been given us feedback then we have made some improvements based on your feedback and I have a highlight of those",
    "start": "37680",
    "end": "44370"
  },
  {
    "text": "improvements for you and finally at the end of the session session will have some time for questions and answers so",
    "start": "44370",
    "end": "52500"
  },
  {
    "text": "let's start with why one should use cloud formation most of us in this room",
    "start": "52500",
    "end": "58020"
  },
  {
    "text": "today have a responsibility to manage infrastructure stacks like this one this",
    "start": "58020",
    "end": "64860"
  },
  {
    "text": "could be an online real estate website for buying and selling homes there is",
    "start": "64860",
    "end": "70260"
  },
  {
    "text": "data stored at the back there is the app tier for doing long-running processing",
    "start": "70260",
    "end": "75450"
  },
  {
    "text": "like putting together offers there is the web servers for serving web content",
    "start": "75450",
    "end": "80640"
  },
  {
    "text": "and then there are more resources like the s3 bucket for static images the",
    "start": "80640",
    "end": "86700"
  },
  {
    "text": "cloud watch alarm and so on how do you make sure that these diverse moving",
    "start": "86700",
    "end": "93329"
  },
  {
    "text": "pieces are provisioned in the right manner and then they continue to work",
    "start": "93329",
    "end": "99119"
  },
  {
    "text": "together well there is obviously one way which is reading lots of instruction",
    "start": "99119",
    "end": "104640"
  },
  {
    "text": "manuals and then putting together long scripts I know everyone in this room",
    "start": "104640",
    "end": "110970"
  },
  {
    "text": "loves coding but if you go down that path there are lots of questions that",
    "start": "110970",
    "end": "117329"
  },
  {
    "text": "you need to answer what should be the creation order can the load balance will",
    "start": "117329",
    "end": "123119"
  },
  {
    "text": "be created before auto scaling group or should it be after or could those two",
    "start": "123119",
    "end": "128550"
  },
  {
    "text": "things be created at the same time what are the provisioning air",
    "start": "128550",
    "end": "133880"
  },
  {
    "text": "that you can recover from and then what are the errors that you should not retry",
    "start": "133880",
    "end": "139370"
  },
  {
    "text": "for how long you should wait between creation of say the database and the",
    "start": "139370",
    "end": "146090"
  },
  {
    "text": "servers will that script work again in the same order different environment can",
    "start": "146090",
    "end": "153560"
  },
  {
    "text": "the script be faster and so on and if",
    "start": "153560",
    "end": "158870"
  },
  {
    "text": "you're using cloud formation you do not have to worry about any of that and the reason is cloud formation lets you model",
    "start": "158870",
    "end": "166700"
  },
  {
    "text": "this architecture in a template file and then with just a few clicks or commands cloud formation creates that",
    "start": "166700",
    "end": "174020"
  },
  {
    "text": "architecture for you personally it reminds me of a 3d printer printing a nice complex object for you out of a CAD",
    "start": "174020",
    "end": "181130"
  },
  {
    "text": "diagram except that cloud formation doesn't stop at creation it helps you",
    "start": "181130",
    "end": "187220"
  },
  {
    "text": "manage and updates update those resources going forward when you are",
    "start": "187220",
    "end": "195440"
  },
  {
    "text": "building an application stack like the one we saw you want to be able to replicate that again and again obviously",
    "start": "195440",
    "end": "201530"
  },
  {
    "text": "through dev test and production environment but also maybe having a stripped down version for demos or",
    "start": "201530",
    "end": "208150"
  },
  {
    "text": "creating a say a version of the stack for a new region that your business is",
    "start": "208150",
    "end": "213650"
  },
  {
    "text": "going in and if you are packaging your application in a cloud formation template then this replication is really",
    "start": "213650",
    "end": "221270"
  },
  {
    "text": "easy just a few clicks and just a few minutes and you recreate that stack exactly like it was before and",
    "start": "221270",
    "end": "227200"
  },
  {
    "text": "replication is also useful in some other scenarios for example if your company",
    "start": "227200",
    "end": "233360"
  },
  {
    "text": "has a policy to have standard V PC configuration that everybody in the",
    "start": "233360",
    "end": "238940"
  },
  {
    "text": "company should use you can make their lives very easy if you give them a",
    "start": "238940",
    "end": "244310"
  },
  {
    "text": "template a CloudFormation template that has that V PC configuration and they can go and reuse that if your company uses",
    "start": "244310",
    "end": "250670"
  },
  {
    "text": "an IT service catalog which dispenses out compute clusters for university",
    "start": "250670",
    "end": "256459"
  },
  {
    "text": "researchers for example you can use cloud formation as a building block which creates those environments that",
    "start": "256459",
    "end": "264020"
  },
  {
    "text": "the IT Service Catalog can grow and dispense and finally if you are doing",
    "start": "264020",
    "end": "270889"
  },
  {
    "text": "provisioning and management again and again you would obviously want to automate that process and cloud",
    "start": "270889",
    "end": "278029"
  },
  {
    "text": "formation is built for that automation we have customers today who have built",
    "start": "278029",
    "end": "283279"
  },
  {
    "text": "their buildings to create loud formation templates along with their regular code",
    "start": "283279",
    "end": "288680"
  },
  {
    "text": "building and then they call cloud formation api's to create stacks and then finally they can monitor the stacks",
    "start": "288680",
    "end": "296060"
  },
  {
    "text": "using cloud formation api's or any other monitoring mechanism and one of our",
    "start": "296060",
    "end": "301490"
  },
  {
    "text": "customers who have mastered this art of automating on top of cloud formation is",
    "start": "301490",
    "end": "307270"
  },
  {
    "text": "Intuit and we have Capon from Intuit today so let's listen to them on how",
    "start": "307270",
    "end": "312469"
  },
  {
    "text": "they use cloud formation thank you thank",
    "start": "312469",
    "end": "321529"
  },
  {
    "text": "you Jatin that's a great compliment coming from you guys being the creator of such an awesome product such as cloud",
    "start": "321529",
    "end": "327259"
  },
  {
    "text": "formation one logistical thing you guys are other a very patient group so far or",
    "start": "327259",
    "end": "334099"
  },
  {
    "text": "you're just getting over your food coma from lunch we're gonna have a quick time for Q&A at the end of the session so if",
    "start": "334099",
    "end": "342110"
  },
  {
    "text": "you have a question try and save it for that and if you do try and use the microphones up there so it can be on the",
    "start": "342110",
    "end": "347360"
  },
  {
    "text": "recording and we don't have to repeat the question as it comes about so good",
    "start": "347360",
    "end": "352550"
  },
  {
    "text": "afternoon thanks everybody for being here my name is cape and brinkley software engineer at Intuit they make a number of",
    "start": "352550",
    "end": "359419"
  },
  {
    "text": "products some of them being QuickBooks TurboTax mint quicken may I heard of a few of those and the company's goal is",
    "start": "359419",
    "end": "366169"
  },
  {
    "text": "to improve customers financial lives so profoundly that they can't imagine doing it the old way now being a level 200",
    "start": "366169",
    "end": "374779"
  },
  {
    "text": "class I would assume that most people in the audience have a basic understanding of what CloudFormation is and you",
    "start": "374779",
    "end": "380689"
  },
  {
    "text": "probably use it in some form or fashion what I'd like to share with you guys today is how we've taken that basic",
    "start": "380689",
    "end": "386180"
  },
  {
    "text": "knowledge in to then transform that into managing large scale applications in",
    "start": "386180",
    "end": "392750"
  },
  {
    "text": "doing that I'm going to share with you some of the principles that we adhere to along the way and some of the tools we",
    "start": "392750",
    "end": "399440"
  },
  {
    "text": "use in to creating truly dynamic infrastructures so my story is going to be about how we",
    "start": "399440",
    "end": "406050"
  },
  {
    "text": "made this transformation with an application called live community and in",
    "start": "406050",
    "end": "412080"
  },
  {
    "text": "doing that I'll be covering four course sections I'm going to talk to you guys a little bit about how we do infrastructure design we're going to",
    "start": "412080",
    "end": "418169"
  },
  {
    "text": "talk about how we do template management for cloud formation templates we do stack management managing those stacks",
    "start": "418169",
    "end": "423809"
  },
  {
    "text": "within cloud formation and last thing I'm going to talk about how we do instance bootstrapping using auto scaling groups and tooling that cloud",
    "start": "423809",
    "end": "431099"
  },
  {
    "text": "formation provides that enables that for us now how do a little background on the",
    "start": "431099",
    "end": "438389"
  },
  {
    "text": "live community product live community is a question-and-answers knowledge based platform used by seventeen into a",
    "start": "438389",
    "end": "444509"
  },
  {
    "text": "products and growing today you can essentially think of it as like a stack overflow or a Korra for Intuit products",
    "start": "444509",
    "end": "451229"
  },
  {
    "text": "that's powered by our own team of engineers and what you're seeing here is an example of the TurboTax",
    "start": "451229",
    "end": "456389"
  },
  {
    "text": "answers exchange so if I'm a customer on the TurboTax site and I'm anywhere on the site and I click the Help button I'm",
    "start": "456389",
    "end": "462360"
  },
  {
    "text": "taking here and that's all powered by our live community product now how do we",
    "start": "462360",
    "end": "469169"
  },
  {
    "text": "even get to AWS well being that turbo tax is one of our customers sage I have a really unique seasonal load pattern",
    "start": "469169",
    "end": "474930"
  },
  {
    "text": "for us here you can see a very high level of what that traffic pattern looks like coming from TurboTax there's a peak",
    "start": "474930",
    "end": "481979"
  },
  {
    "text": "that happens in February when WTS come out and then there's just massive peak that happens in mid-april",
    "start": "481979",
    "end": "487259"
  },
  {
    "text": "from all of you late tax filers in the audience trying to get questions answered and then it kind of tapers off",
    "start": "487259",
    "end": "492629"
  },
  {
    "text": "and it goes through the year so the way we were managing this four years ago is",
    "start": "492629",
    "end": "497849"
  },
  {
    "text": "we would essentially buy all the hardware we needed just to service these two peaks and the unfortunate byproduct",
    "start": "497849",
    "end": "503159"
  },
  {
    "text": "of that was that 80% of our hardware was sitting idle for 80% of the time obviously a completely an efficient cost",
    "start": "503159",
    "end": "508979"
  },
  {
    "text": "model essentially live community is the poster child for ec2 s primary use case",
    "start": "508979",
    "end": "515539"
  },
  {
    "text": "so we got some buy-in and then we want today to be us these are the services we",
    "start": "515539",
    "end": "522539"
  },
  {
    "text": "were using the first day we've got there he's an ec2 we're using s3 RDF and",
    "start": "522539",
    "end": "528569"
  },
  {
    "text": "elastic load balancing and it was essentially operational it was like we",
    "start": "528569",
    "end": "533910"
  },
  {
    "text": "just our data center we just dropped it in AWS and even when we got out there doing things were extremely hard everything",
    "start": "533910",
    "end": "540750"
  },
  {
    "text": "was completely manual and painful things were completely highly error-prone and",
    "start": "540750",
    "end": "545900"
  },
  {
    "text": "quite honestly we just spent the majority of our time doing nothing but trying to keep the infrastructure up and",
    "start": "545900",
    "end": "550920"
  },
  {
    "text": "running and so the team sat back and said okay we need to we need to make a change we need to do we need to have",
    "start": "550920",
    "end": "558210"
  },
  {
    "text": "better operations around this we really need to start taking advantage of things that AWS offers us and what the",
    "start": "558210",
    "end": "563550"
  },
  {
    "text": "community might offer this and so part of that game plan was we were going to start leveraging chef for our",
    "start": "563550",
    "end": "569790"
  },
  {
    "text": "configuration management framework and we were going to start using cloud formation so that brings us to our first",
    "start": "569790",
    "end": "577710"
  },
  {
    "text": "improvement that's infrastructure this code hopefully a lot of you have heard this you know and using chef",
    "start": "577710",
    "end": "584480"
  },
  {
    "text": "infrastructure as code is just something that's ingrained to that product and the configuration management culture as a",
    "start": "584480",
    "end": "589500"
  },
  {
    "text": "whole as a whole so we were already there and doing that and we started to see some instant benefits from that like",
    "start": "589500",
    "end": "596160"
  },
  {
    "text": "creating instant repeatable instance builds we've had far less errors in the",
    "start": "596160",
    "end": "601830"
  },
  {
    "text": "environment and we knew we had a really good idea of what was happening when and where and now with cloud formation being",
    "start": "601830",
    "end": "609150"
  },
  {
    "text": "is that you present templates to the service in a JSON",
    "start": "609150",
    "end": "614250"
  },
  {
    "text": "format so you can provision your stack we figured hey there's no reason why we can't treat this the same way so that's",
    "start": "614250",
    "end": "620460"
  },
  {
    "text": "exactly what we did what you can see here is a snapshot of our cloud",
    "start": "620460",
    "end": "625530"
  },
  {
    "text": "formation templates repo we have all the different templates that model out our infrastructure today and let's just like",
    "start": "625530",
    "end": "632880"
  },
  {
    "text": "with any code every change is peer reviewed before it's actually merged and master and used into production and but",
    "start": "632880",
    "end": "641580"
  },
  {
    "text": "it wasn't always this pretty you're seeing the end result of this so let me tell you about our first CloudFormation experience so we have two developers",
    "start": "641580",
    "end": "649140"
  },
  {
    "text": "working on it at the time their names were Tommy and Brett and so they were looking at cloud formation and Brett",
    "start": "649140",
    "end": "655500"
  },
  {
    "text": "said and they say hey we think we can leverage this looks like there's some benefits here and Brett just loves to go",
    "start": "655500",
    "end": "663780"
  },
  {
    "text": "in hack so it looks at Tommy said Tommy might take the first crack so time says okay and when Brett gets",
    "start": "663780",
    "end": "669490"
  },
  {
    "text": "serious about something dude goes dark never see him so he disappears we don't even know where he is we're going to",
    "start": "669490",
    "end": "674770"
  },
  {
    "text": "lunch we're like what happened to Brett I don't know can't find him two weeks later he comes running out he goes Tommy",
    "start": "674770",
    "end": "681190"
  },
  {
    "text": "Tommy Tommy Tommy look look look I done it here it is and so this is Brett with our first CloudFormation template and he",
    "start": "681190",
    "end": "689680"
  },
  {
    "text": "goes Tommy Tommy look I've done it I've just provisioned the entire life community development environment using cloud formation and automated the entire",
    "start": "689680",
    "end": "696220"
  },
  {
    "text": "thing look at it's right here isn't it awesome Tommy goes okay yeah sure that's awesome let's take a look",
    "start": "696220",
    "end": "701800"
  },
  {
    "text": "that's the Tommy takes a look and it goes dude this is like a 2,000 line JSON",
    "start": "701800",
    "end": "707230"
  },
  {
    "text": "template and Brett close yeah it's fantastic isn't it we did the whole thing it's automated right we're perfect",
    "start": "707230",
    "end": "712480"
  },
  {
    "text": "Tommy says mmm okay no let's take a look and so he digs in he goes okay I'm on line 932 and I see",
    "start": "712480",
    "end": "719470"
  },
  {
    "text": "you're you know modeling out our auto scaling group for our application tier and so what happens if we want to add",
    "start": "719470",
    "end": "728350"
  },
  {
    "text": "another auto scaling group maybe we've have a different function we want to add or maybe we want to have a different apt here Brett kind of starts to think about",
    "start": "728350",
    "end": "734890"
  },
  {
    "text": "it and goes hmm I don't know we're gonna have to figure that out so Tom keeps digging through",
    "start": "734890",
    "end": "740140"
  },
  {
    "text": "its like blind 1752 and says okay I see we have an RDF",
    "start": "740140",
    "end": "746860"
  },
  {
    "text": "parameter group in here so we're trying to map that out what happens what we need to change some values within a database how we're gonna manage that on",
    "start": "746860",
    "end": "753340"
  },
  {
    "text": "a day to day basis and functional yeah Brett goes I don't know we're gonna have to figure that out and so we realized",
    "start": "753340",
    "end": "760000"
  },
  {
    "text": "really quickly was that we were gonna have some operational challenges moving forward if",
    "start": "760000",
    "end": "765490"
  },
  {
    "text": "we didn't figure out some way to manage us and these large templates just like large code bases are really hard to",
    "start": "765490",
    "end": "772600"
  },
  {
    "text": "manage so that got us grounded on our next couple of concepts the first one",
    "start": "772600",
    "end": "779230"
  },
  {
    "text": "being service-oriented architecture and so as we started to model things out with cloud formation we realized that",
    "start": "779230",
    "end": "787380"
  },
  {
    "text": "that's really what we were creating and we got really grounded we're like a hey we're building so a hair and so let's",
    "start": "787380",
    "end": "793300"
  },
  {
    "text": "start to do that let's start it start to make it look that way and so that's the",
    "start": "793300",
    "end": "798400"
  },
  {
    "text": "way we treat it today every auto gamling group that provides some service or function is behind a load balancer",
    "start": "798400",
    "end": "804240"
  },
  {
    "text": "and every layer within our architecture has some sort of an endpoint to minimize",
    "start": "804240",
    "end": "810830"
  },
  {
    "text": "and makes configuration a lot easier and that design made it really nice for us",
    "start": "810830",
    "end": "817980"
  },
  {
    "text": "to start swapping out our implementation of services with what AWS had now you can see we use a lot more services today",
    "start": "817980",
    "end": "826820"
  },
  {
    "text": "because of this new design the other advantage that we had was if we wanted",
    "start": "826820",
    "end": "832050"
  },
  {
    "text": "to switch out our implementation with what AWS was it wasn't this painful process it was pretty painless so take a last",
    "start": "832050",
    "end": "838740"
  },
  {
    "text": "Akash for example we were able to take our memcache implementation and cut over",
    "start": "838740",
    "end": "843930"
  },
  {
    "text": "to ElastiCache pretty easily just by changing the endpoint and the other",
    "start": "843930",
    "end": "849360"
  },
  {
    "text": "benefits we got out of that was we're managing less code because we're not managing the configuration for our",
    "start": "849360",
    "end": "854400"
  },
  {
    "text": "memcached here anymore and we're managing less instances we're just leveraging the service using what AWS",
    "start": "854400",
    "end": "860040"
  },
  {
    "text": "provides us let them do the heavy lifting on that so we've got we're",
    "start": "860040",
    "end": "867240"
  },
  {
    "text": "taking advantage of the different services now got ours our stacks are becoming more apparent and this got us",
    "start": "867240",
    "end": "873780"
  },
  {
    "text": "ground on the concept of how we actually wanted to manage this and how the code was going to come out and so we use the term multiple templates loosely coupled",
    "start": "873780",
    "end": "880590"
  },
  {
    "text": "and so what you can see here and what it translates to is that every layer within",
    "start": "880590",
    "end": "886140"
  },
  {
    "text": "our architecture essentially becomes a stack and so I can model those out and I can manage a template around that so for",
    "start": "886140",
    "end": "892380"
  },
  {
    "text": "example I have an STS queue I have an app auto scaling group I have an RDS stack that manages all that and what we",
    "start": "892380",
    "end": "902010"
  },
  {
    "text": "really got to is we got two primary benefits out of this the first one being",
    "start": "902010",
    "end": "908520"
  },
  {
    "text": "that everything was really easy to reason about so for example if I wanted",
    "start": "908520",
    "end": "914700"
  },
  {
    "text": "to do something with an EOB I'm no longer waiting through this 2,000 line JSON template I'm going to my",
    "start": "914700",
    "end": "920250"
  },
  {
    "text": "CloudFormation template suite both I'm going to the ELB template I'm working with maybe about 60 lines of code",
    "start": "920250",
    "end": "925770"
  },
  {
    "text": "instead of 2,000 so that makes it really easy another benefit in that is that if I",
    "start": "925770",
    "end": "933960"
  },
  {
    "text": "doing work on an EOB I no longer III have a high level of confidence that",
    "start": "933960",
    "end": "939450"
  },
  {
    "text": "there's no way I'm gonna impact what's going on with my RDS stack because they're completely decoupled and and",
    "start": "939450",
    "end": "945360"
  },
  {
    "text": "that's the other part is they also have their own life cycles so your infrastructure is not revs the same",
    "start": "945360",
    "end": "952410"
  },
  {
    "text": "right so I may change ElastiCache once a month once every other month but I may",
    "start": "952410",
    "end": "959640"
  },
  {
    "text": "change my application tier frequently multiple times a day potentially depending on what's going on and so these different stacks in these",
    "start": "959640",
    "end": "966600"
  },
  {
    "text": "different parts of your architecture have their own life cycle about them and by managing it this way for us it was",
    "start": "966600",
    "end": "972630"
  },
  {
    "text": "really easy to get things done the second major benefit was reusability",
    "start": "972630",
    "end": "978590"
  },
  {
    "text": "so we heavily leveraged input parameters from CloudFormation and outputs to",
    "start": "978590",
    "end": "985020"
  },
  {
    "text": "basically wire everything together across the architecture an example of that is I'll use the EOB as an example",
    "start": "985020",
    "end": "992460"
  },
  {
    "text": "again if I could have 2000 bees in my environment and because I can change",
    "start": "992460",
    "end": "998130"
  },
  {
    "text": "parameters when I provision that stack say like what my health check endpoint",
    "start": "998130",
    "end": "1005300"
  },
  {
    "text": "looks like timeout values something like that I could manage 20 different stacks or EOB stacks with one template and",
    "start": "1005300",
    "end": "1012500"
  },
  {
    "text": "that's all I need another advantage from reusability and like I said Intuit has a lot of different products we have a lot",
    "start": "1012500",
    "end": "1018080"
  },
  {
    "text": "of different business lines we've now developed a core base set of CloudFormation templates that four",
    "start": "1018080",
    "end": "1023780"
  },
  {
    "text": "groups looking to go to AWS we can take that hand it off to them and give them base start maybe some same of a few few",
    "start": "1023780",
    "end": "1030620"
  },
  {
    "text": "weeks of pain in terms of trying to figure out how they want those to look so just as in technology everything is",
    "start": "1030620",
    "end": "1039410"
  },
  {
    "text": "not without its trade-offs we had one major trade-off that we had to figure out with this and that's stack management so basically with stack",
    "start": "1039410",
    "end": "1049610"
  },
  {
    "text": "management we have our decoupled stacks we have source control around them everything's great but we have a ton of",
    "start": "1049610",
    "end": "1054860"
  },
  {
    "text": "stacks so how are we going to manage this stuff first thing we did is we tried using the console and it was it",
    "start": "1054860",
    "end": "1062840"
  },
  {
    "text": "was pretty much the same experience that might of some of you might be familiar",
    "start": "1062840",
    "end": "1067970"
  },
  {
    "text": "in terms of how you manage instances okay I'm gonna go in the console more provision some instances how does that feel okay I need some more power I'm",
    "start": "1067970",
    "end": "1074539"
  },
  {
    "text": "gonna try the command-line tools you know and so you move on maybe wrap some scripts around that and that was kind of",
    "start": "1074539",
    "end": "1080210"
  },
  {
    "text": "the same progression we were going through with CloudFormation and we were using some open source deployment",
    "start": "1080210",
    "end": "1086210"
  },
  {
    "text": "frameworks as well to try and wire it all together but we were really missing some advanced level things that we",
    "start": "1086210",
    "end": "1091460"
  },
  {
    "text": "really needed to help make it easier for us two of those being because we have",
    "start": "1091460",
    "end": "1097700"
  },
  {
    "text": "multiple business lines of products we have to manage a lot of different accounts in a lot of different regions",
    "start": "1097700",
    "end": "1103370"
  },
  {
    "text": "and so we needed a way to seamlessly do that you can do it with the command line tools but it wasn't seamless for us and",
    "start": "1103370",
    "end": "1110470"
  },
  {
    "text": "another one is a concept called cloning and cloning a stack I'm going to share with you how we do that in a little bit",
    "start": "1110470",
    "end": "1116770"
  },
  {
    "text": "and so we ultimately ended up going out",
    "start": "1116770",
    "end": "1122630"
  },
  {
    "text": "and creating an open-source tool called simple deploy which unfortunately it's not aptly named because its primary",
    "start": "1122630",
    "end": "1129500"
  },
  {
    "text": "focus is to manage cloud formation stacks and so it's a little bit misleading in the name but nonetheless",
    "start": "1129500",
    "end": "1134600"
  },
  {
    "text": "that's what it does you can do all the primary functions you can list stacks you can create them you can destroy them",
    "start": "1134600",
    "end": "1140390"
  },
  {
    "text": "give them enough datum but it gives you those extra things of managing multiple accounts and regions pretty easily and",
    "start": "1140390",
    "end": "1147429"
  },
  {
    "text": "can even give you the ability to clone another thing it allows you to do is chain output parameters from stacks or",
    "start": "1147429",
    "end": "1155299"
  },
  {
    "text": "outputs from stacks and use those as input parameters into other stacks or inject your own parameters into sax when",
    "start": "1155299",
    "end": "1161900"
  },
  {
    "text": "you provision these so here's a list of all the commands that simple deploy us",
    "start": "1161900",
    "end": "1168200"
  },
  {
    "text": "today I'm gonna take you through a typical app deployment for us to",
    "start": "1168200",
    "end": "1173570"
  },
  {
    "text": "illustrate a basic use case of how we use simple deploy on a day to day basis and doing that I'm only going to cover",
    "start": "1173570",
    "end": "1179600"
  },
  {
    "text": "these five separate commands we're gonna talk a little bit about environments I talked about the list command and I'm",
    "start": "1179600",
    "end": "1184940"
  },
  {
    "text": "gonna describe to you the difference between the create the Cologne and lastly cover the destroy before we",
    "start": "1184940",
    "end": "1191809"
  },
  {
    "text": "do that little background on the type of deployment we do just so you can have context as we're walking through it we",
    "start": "1191809",
    "end": "1198230"
  },
  {
    "text": "use a blue-green style deployment so what we have here is an EOB stack that's running our front-end underneath",
    "start": "1198230",
    "end": "1205159"
  },
  {
    "text": "it we have our another stack which is our app tier it's not a scaling group and that's our blue group in this case",
    "start": "1205159",
    "end": "1211789"
  },
  {
    "text": "it's running version 1.0.0 and so we want to do it we want to do an upgrade",
    "start": "1211789",
    "end": "1217370"
  },
  {
    "text": "to version 1.1 so what we do we provisioned another stack another auto",
    "start": "1217370",
    "end": "1222860"
  },
  {
    "text": "scaling group with the version of code that we want the instances start coming up online they start taking traffic from",
    "start": "1222860",
    "end": "1229760"
  },
  {
    "text": "the ELB we start to redirect traffic this thing look good if they don't we go back to blue but let's say in this case",
    "start": "1229760",
    "end": "1235789"
  },
  {
    "text": "everything's looking fantastic for us so we gradually redirect everything over the green group and at that point we're",
    "start": "1235789",
    "end": "1242690"
  },
  {
    "text": "completely and solely on our green group and then with that we have no more use for the blue group so you know what",
    "start": "1242690",
    "end": "1248779"
  },
  {
    "text": "we're just gonna pletely destroy treat like trash don't care we'll get another one someday it's fantastic green group",
    "start": "1248779",
    "end": "1254990"
  },
  {
    "text": "becomes the blue group rinse wash repeat cycle continues that's how we do our deployments so doing that I need a",
    "start": "1254990",
    "end": "1263029"
  },
  {
    "text": "provision version 1.1 so like I said we have multiple accounts multiple regions",
    "start": "1263029",
    "end": "1268639"
  },
  {
    "text": "so the first thing I'm gonna do is I'm gonna go out and look at my environments and so you can see in the listing here",
    "start": "1268639",
    "end": "1274490"
  },
  {
    "text": "I've got a pre prod account I've got a Prada camp and I haven't provisioned this anywhere before so I'm gonna do it",
    "start": "1274490",
    "end": "1281779"
  },
  {
    "text": "in my pre prod account and let's say I'm gonna tackle West one it's the first region where I'm gonna test this out so",
    "start": "1281779",
    "end": "1289399"
  },
  {
    "text": "what I'm gonna do from there is I'm gonna use the list command and I'm going to tell it what environment I want to use so we can see here is I'm getting a",
    "start": "1289399",
    "end": "1296059"
  },
  {
    "text": "listing of the CloudFormation stacks where that I have in there for my dev environment you see out of the ebay",
    "start": "1296059",
    "end": "1302059"
  },
  {
    "text": "b.o.b I have the app group I have a DB master on a DB parameter group that we",
    "start": "1302059",
    "end": "1307370"
  },
  {
    "text": "manage that alludes to the fact that this is an RDS instance and this is how we manage this so from there we have two",
    "start": "1307370",
    "end": "1315440"
  },
  {
    "text": "separate options now we can do a create which I'll show you or we can do the clone so the first option is to do a",
    "start": "1315440",
    "end": "1321559"
  },
  {
    "text": "create to get that app to stack out there so what a high level of what that",
    "start": "1321559",
    "end": "1327409"
  },
  {
    "text": "looks like I do a create pass it the environment I give it the name app - I give it the template I want to use with",
    "start": "1327409",
    "end": "1334279"
  },
  {
    "text": "that app JSON again one template I can manage I can create application groups all day and I don't",
    "start": "1334279",
    "end": "1340010"
  },
  {
    "text": "need different templates to do it I use that input stack switch that essentially",
    "start": "1340010",
    "end": "1345740"
  },
  {
    "text": "leverages outputs from other stacks so in this case for the EOB I'm saying hey what's that ELB I need to tell my",
    "start": "1345740",
    "end": "1351440"
  },
  {
    "text": "instances to come up online after that when they're when they come up online and then from a database perspective hey",
    "start": "1351440",
    "end": "1356570"
  },
  {
    "text": "what's my RDS endpoint I don't even tell my appens is how to get to my database so I'm injecting that and you can see",
    "start": "1356570",
    "end": "1362540"
  },
  {
    "text": "with the attributes which I'm basically injecting my own parameters and saying hey here's the artifact ID that I want",
    "start": "1362540",
    "end": "1368060"
  },
  {
    "text": "you to do throw download my infrastructure code or my chef repo and to download my application code so this",
    "start": "1368060",
    "end": "1376250"
  },
  {
    "text": "is a cleaned-up version of a create like I said we use a lot of different parameters and switches and we could be calling multiple stacks depending on",
    "start": "1376250",
    "end": "1381770"
  },
  {
    "text": "what's going in there and this is where simple deploy becomes really not so simple because a create command can just like get longer than I can actually",
    "start": "1381770",
    "end": "1387260"
  },
  {
    "text": "stretch my arms out to be as you're trying to manage that so we came up with the clone command and that's the other",
    "start": "1387260",
    "end": "1395510"
  },
  {
    "text": "alternative we have and that's typically what we do when we already have something up and running so using a",
    "start": "1395510",
    "end": "1402200"
  },
  {
    "text": "clone command similar process passes the environment we're now calling a source",
    "start": "1402200",
    "end": "1407870"
  },
  {
    "text": "stack so what we're saying in that is saying hey I've got a stack out there I want that exact same template that",
    "start": "1407870",
    "end": "1414140"
  },
  {
    "text": "that guy's running I want to have all the input all the parameters that he has so I can leverage that and I'm gonna use",
    "start": "1414140",
    "end": "1421520"
  },
  {
    "text": "that to clone that and create a completely identical stack but I'm gonna also give it two more switches I'm gonna",
    "start": "1421520",
    "end": "1428420"
  },
  {
    "text": "pass in the attributes for my artifact IDs because I need to change that code it's the only thing I want changed it's",
    "start": "1428420",
    "end": "1434180"
  },
  {
    "text": "all simplified and the create I don't have to worry about messing something up because I'm trying to change 30 different parameters or trying to get",
    "start": "1434180",
    "end": "1440330"
  },
  {
    "text": "the right stack and put in there I just want to change to simple things be done with it and so that's what we do so like",
    "start": "1440330",
    "end": "1447650"
  },
  {
    "text": "I said app 2 comes up online and then from there no use for it",
    "start": "1447650",
    "end": "1452780"
  },
  {
    "text": "so we're just going to destroy it give it the environment pass it the app name and it's gone so",
    "start": "1452780",
    "end": "1461810"
  },
  {
    "text": "I mentioned to you that instance instances are coming up and coming online underneath the EOB I'm sure",
    "start": "1461810",
    "end": "1470300"
  },
  {
    "text": "you've probably figured out by now that that all happens without user interaction if you didn't it does but",
    "start": "1470300",
    "end": "1478130"
  },
  {
    "text": "what we have here is pretty much the high level of the process that gets us to the point where we need to do bootstrapping so we provision our cloud",
    "start": "1478130",
    "end": "1484160"
  },
  {
    "text": "formation stack we've called that our auto scaling group is kicking in and the instances are coming up online so from",
    "start": "1484160",
    "end": "1491450"
  },
  {
    "text": "there what we do is we leverage user data we basically inject a little bit of batch code to give us a point where we",
    "start": "1491450",
    "end": "1497960"
  },
  {
    "text": "can actually start to leverage the cloud formation and yet helper resource",
    "start": "1497960",
    "end": "1503330"
  },
  {
    "text": "that basically allows us to it's a more sophisticated more declarative",
    "start": "1503330",
    "end": "1508400"
  },
  {
    "text": "configuration management framework than if we were to just run bash code through user data and that gets us to the point",
    "start": "1508400",
    "end": "1515150"
  },
  {
    "text": "where we run chef again we're all gonna use cloud formation and it just enough so we can get to shaft chef is our",
    "start": "1515150",
    "end": "1520850"
  },
  {
    "text": "single source of truth when it comes to configuring the instance unfortunately it doesn't magically happen on its own",
    "start": "1520850",
    "end": "1525950"
  },
  {
    "text": "so we need those user data and CloudFormation in it in the process to make sure that that happens so I'll walk",
    "start": "1525950",
    "end": "1532670"
  },
  {
    "text": "you through how we do user data and cloud formation that give you a high level of what that looks like so what",
    "start": "1532670",
    "end": "1538370"
  },
  {
    "text": "you can see here is I'm modeling out what I want user data to look like in my CloudFormation template and what that",
    "start": "1538370",
    "end": "1544910"
  },
  {
    "text": "translates to on every instance calling that special loopback interface so we're",
    "start": "1544910",
    "end": "1550310"
  },
  {
    "text": "gonna take that bash code I'm gonna say hey I need the CF n helper scripts so I",
    "start": "1550310",
    "end": "1555590"
  },
  {
    "text": "can call CloudFormation resource within that template using the the CF n init script so that gets us to cloud",
    "start": "1555590",
    "end": "1566750"
  },
  {
    "text": "formation and net here's the different resources you can use there's eight different ones config sets is kind of",
    "start": "1566750",
    "end": "1572570"
  },
  {
    "text": "more of like a super set resource and",
    "start": "1572570",
    "end": "1577880"
  },
  {
    "text": "then the other ones are a little bit more directive so like I said we use it a little possible so we're only gonna",
    "start": "1577880",
    "end": "1583700"
  },
  {
    "text": "use four I'll show you an example of how we use those so using the config sets",
    "start": "1583700",
    "end": "1588710"
  },
  {
    "text": "you can have multiple config sets we only use one we call it bootstrap and",
    "start": "1588710",
    "end": "1594140"
  },
  {
    "text": "then inside can fix sets you use what are called config Keys config keys basically wrap all the other confirmations and it",
    "start": "1594140",
    "end": "1600929"
  },
  {
    "text": "resources in there and you can use them in any way you want I'll preload before I go into the next",
    "start": "1600929",
    "end": "1606330"
  },
  {
    "text": "set of slides that my examples are only going to show one resource per config",
    "start": "1606330",
    "end": "1611910"
  },
  {
    "text": "key but that is not the case you can use as many as you want it just so happens that they show that way so I don't want",
    "start": "1611910",
    "end": "1617280"
  },
  {
    "text": "you to be misled that you can only use one resource per config key that's not that's not the way it works so you can",
    "start": "1617280",
    "end": "1623040"
  },
  {
    "text": "see the high level flow here we're gonna create some files we're gonna install some packages and we're gonna run chef",
    "start": "1623040",
    "end": "1628559"
  },
  {
    "text": "then we're to do a little bit of cleanup so with create files we're just gonna",
    "start": "1628559",
    "end": "1634500"
  },
  {
    "text": "drop a file on the system all we're trying to do here is we're trying to tell chef hey I don't even want you to",
    "start": "1634500",
    "end": "1639720"
  },
  {
    "text": "autodiscover I'm gonna tell you right now I'm an AC 2 instance I want you to go out and grab all the metadata you can about this system because I'm gonna use",
    "start": "1639720",
    "end": "1645750"
  },
  {
    "text": "that in my chef run some way shape or form then you're gonna stall some",
    "start": "1645750",
    "end": "1651450"
  },
  {
    "text": "packages okay I just need chef give me a chef on the box so I can execute it from",
    "start": "1651450",
    "end": "1660360"
  },
  {
    "text": "there we're gonna run chef okay so we do a little bit more here I've paired it down",
    "start": "1660360",
    "end": "1666419"
  },
  {
    "text": "so for readability sake so you can see the high level flow there's a lot more commands that go into this the high",
    "start": "1666419",
    "end": "1671669"
  },
  {
    "text": "level flow is we basically download the chef repo we decrypt the repo we explode",
    "start": "1671669",
    "end": "1677130"
  },
  {
    "text": "it and then ultimately we've run chef so what I'll do is I'll just walk you really quickly through what we do when",
    "start": "1677130",
    "end": "1683370"
  },
  {
    "text": "we actually run the last step and we run chef so for running chef just running the",
    "start": "1683370",
    "end": "1689250"
  },
  {
    "text": "command we happen to use chef solo for our stuff so we're gonna execute that",
    "start": "1689250",
    "end": "1694740"
  },
  {
    "text": "we're gonna pass it the config we want you can see we're using the override switch that's the - oh and we're",
    "start": "1694740",
    "end": "1701549"
  },
  {
    "text": "injecting the role we want it to become and we're leveraging that CloudFormation parameter so every instance group every",
    "start": "1701549",
    "end": "1708450"
  },
  {
    "text": "auto scaling group that comes up when those instances come online because we've injected it this way they know that they're in app instance if it's a",
    "start": "1708450",
    "end": "1715919"
  },
  {
    "text": "worker group they'll know that they're a worker group because that's the way we tagged it with that stack so everything",
    "start": "1715919",
    "end": "1722160"
  },
  {
    "text": "happens the runs go successful everything's good and lastly do it",
    "start": "1722160",
    "end": "1729170"
  },
  {
    "text": "clean up don't need those artifacts anymore so get them off the box get rid of them and we're up and running happily",
    "start": "1729170",
    "end": "1738460"
  },
  {
    "text": "so with all that being said I think it's only fair that I share with you a little",
    "start": "1738640",
    "end": "1745190"
  },
  {
    "text": "bit about you know the future look ahead and what all this means essentially what",
    "start": "1745190",
    "end": "1751070"
  },
  {
    "text": "I've just done is I've shown you the mountain and I've given you some tips for climbing that mountain but at the",
    "start": "1751070",
    "end": "1759560"
  },
  {
    "text": "end of the day you guys have to climb that mountain you know and unfortunately",
    "start": "1759560",
    "end": "1765140"
  },
  {
    "text": "you just can't take this stuff everything I've shown you go sprinkle it on your AWS accounts and two weeks later is gonna be unicorns and rainbows",
    "start": "1765140",
    "end": "1770690"
  },
  {
    "text": "everywhere now granite you could definitely start using",
    "start": "1770690",
    "end": "1776330"
  },
  {
    "text": "CloudFormation today and you should and you will get benefits but you you're",
    "start": "1776330",
    "end": "1781460"
  },
  {
    "text": "only gonna get as much out of it as you put into it and I'm trying to help you or share with you how we did that last",
    "start": "1781460",
    "end": "1787670"
  },
  {
    "text": "leg because the way it works for us now is i told you how painful operations was",
    "start": "1787670",
    "end": "1794980"
  },
  {
    "text": "when we first started and now operations is kind of an afterthought and I mean that in a really good way so if I can",
    "start": "1794980",
    "end": "1802130"
  },
  {
    "text": "basically give you a description of what tax season looked like for our group and",
    "start": "1802130",
    "end": "1807440"
  },
  {
    "text": "live community it was very analogous to being the Maytag repairman aside the only difference is we're not",
    "start": "1807440",
    "end": "1814880"
  },
  {
    "text": "that board dude sitting there drumming our fingers we got ops and devs all over just doing nothing but coding away and",
    "start": "1814880",
    "end": "1820370"
  },
  {
    "text": "providing an extra business value to Intuit and I'm hoping that that's",
    "start": "1820370",
    "end": "1827120"
  },
  {
    "text": "somewhere a place that you all can be someday if you're not there because it's",
    "start": "1827120",
    "end": "1832430"
  },
  {
    "text": "it's night and day and it's so refreshing is like being this dude on this big scary hill and I'm sure that",
    "start": "1832430",
    "end": "1837590"
  },
  {
    "text": "feels fantastic but that looks scary to me but anyways with that being said I'm",
    "start": "1837590",
    "end": "1843470"
  },
  {
    "text": "gonna hand it back to Chayton he is going to talk about some of the new features coming in CloudFormation that",
    "start": "1843470",
    "end": "1850340"
  },
  {
    "text": "are out there I know that I'm excited to hear about some of them because we've been providing feedback on some of these so thank you very much and I'll hand it",
    "start": "1850340",
    "end": "1857660"
  },
  {
    "text": "back to chain",
    "start": "1857660",
    "end": "1860080"
  },
  {
    "text": "Thank You Capon and in the next few minutes I'm going to spend time on the",
    "start": "1874770",
    "end": "1882420"
  },
  {
    "text": "new enhancements we have done to the service based on the feedback that we have been receiving from you guys and",
    "start": "1882420",
    "end": "1888800"
  },
  {
    "text": "whether you are like Capon where you're a sophisticated user of cloud formation or whether you're using cloud formation",
    "start": "1888800",
    "end": "1895679"
  },
  {
    "text": "as your only tool these enhancements would be useful to you when you have to",
    "start": "1895679",
    "end": "1907559"
  },
  {
    "text": "develop and run a stack like this the responsibility is really twofold one is",
    "start": "1907559",
    "end": "1914250"
  },
  {
    "text": "that you need to develop the stack just like you would develop an application and second you want to make sure that",
    "start": "1914250",
    "end": "1919890"
  },
  {
    "text": "the stat continues to operate going forward you can make updates to that this tag and so on and I'm going to",
    "start": "1919890",
    "end": "1926610"
  },
  {
    "text": "highlight enhancements we have done both on the development side and the operations side one of the most",
    "start": "1926610",
    "end": "1934740"
  },
  {
    "text": "important enhancements we have done is parallel stack processing when you are",
    "start": "1934740",
    "end": "1940650"
  },
  {
    "text": "developing a stack you want to be able to write a single template or a set of",
    "start": "1940650",
    "end": "1946260"
  },
  {
    "text": "templates create stacks troubleshoot those debug those and iterate on that process again and you want to be able to",
    "start": "1946260",
    "end": "1953820"
  },
  {
    "text": "do that as fast as possible and parallel stack processing allows you to do that",
    "start": "1953820",
    "end": "1960780"
  },
  {
    "text": "really really fast the reason is when you provision",
    "start": "1960780",
    "end": "1965910"
  },
  {
    "text": "something like that in cloud formation the cloud formation service automatically figures out what resources",
    "start": "1965910",
    "end": "1973590"
  },
  {
    "text": "can be created in parallel in this example there is the there is the data",
    "start": "1973590",
    "end": "1979830"
  },
  {
    "text": "base the s3 bucket and the load balancers and all of those resources",
    "start": "1979830",
    "end": "1984990"
  },
  {
    "text": "could be created at the same time so if I have to provision that stack in cloud",
    "start": "1984990",
    "end": "1990330"
  },
  {
    "text": "formation today this is how the time line would look like as many as five",
    "start": "1990330",
    "end": "1995820"
  },
  {
    "text": "resources will be created at the same time and resources like that crowd",
    "start": "1995820",
    "end": "2000980"
  },
  {
    "text": "CloudFront distribution will wait only until its dependencies the stuff that it",
    "start": "2000980",
    "end": "2007130"
  },
  {
    "text": "depends on creator so overall cloud formation optimizes the timeline and shrinks it",
    "start": "2007130",
    "end": "2014159"
  },
  {
    "text": "really into really a short timeline compared to what you could do with a",
    "start": "2014159",
    "end": "2020080"
  },
  {
    "text": "regular provisioning script you are still in complete control so for any",
    "start": "2020080",
    "end": "2026440"
  },
  {
    "text": "reason if you want to enforce a certain creation order you can always do that by",
    "start": "2026440",
    "end": "2033190"
  },
  {
    "text": "using a depends on property you can if you want to have that pl be created",
    "start": "2033190",
    "end": "2039850"
  },
  {
    "text": "after s3 bucket for any reason you can always put a depends on property on that ELB to depend on s3 and then s3 will be",
    "start": "2039850",
    "end": "2047890"
  },
  {
    "text": "created first and then the elbe will be created the parallel operation is in",
    "start": "2047890",
    "end": "2053679"
  },
  {
    "text": "place even when you are deleting stack or updating the stack so even those operations are really fast and it also",
    "start": "2053679",
    "end": "2061270"
  },
  {
    "text": "gives you a benefit of saving cost on resources because the faster the provisioning the lesser you are spending",
    "start": "2061270",
    "end": "2068169"
  },
  {
    "text": "on resources the next couple of features",
    "start": "2068169",
    "end": "2073720"
  },
  {
    "text": "I'm going to highlight help you with writing more really useable and simple",
    "start": "2073720",
    "end": "2080020"
  },
  {
    "text": "templates many of many of you told us that you have used cases where you're",
    "start": "2080020",
    "end": "2085510"
  },
  {
    "text": "you where you are using the same base template but at the stack creation time",
    "start": "2085510",
    "end": "2090520"
  },
  {
    "text": "you want to do some fine-tuning like creating a resource or not creating a resource or setting a property or just",
    "start": "2090520",
    "end": "2096580"
  },
  {
    "text": "skipping their property based on that particular environment and you don't",
    "start": "2096580",
    "end": "2101589"
  },
  {
    "text": "want to maintain multiple copies of basically the same template for these",
    "start": "2101589",
    "end": "2106720"
  },
  {
    "text": "flavors of use cases and we introduced conditions just for those use cases to",
    "start": "2106720",
    "end": "2113619"
  },
  {
    "text": "take an example when the stack is in production you want to have that multi easy database the reason is reliability",
    "start": "2113619",
    "end": "2120730"
  },
  {
    "text": "you want to have a cloud watch alarm to keep an eye on how much space is left in",
    "start": "2120730",
    "end": "2126099"
  },
  {
    "text": "the database but when you are developing that stack you would prefer a stripped-down environment you don't",
    "start": "2126099",
    "end": "2132400"
  },
  {
    "text": "really need a multi AZ database you may not want to have that alarm does that mean that you have to maintain two",
    "start": "2132400",
    "end": "2138910"
  },
  {
    "text": "separate flavors of the same template for these two things with conditions the answer is no here is",
    "start": "2138910",
    "end": "2147490"
  },
  {
    "text": "how it works you will specify a parameter called environment and then using that parameter you can set and",
    "start": "2147490",
    "end": "2155320"
  },
  {
    "text": "define a condition and finally down where you went down in the template when",
    "start": "2155320",
    "end": "2161350"
  },
  {
    "text": "you are defining the resource you can use that condition to set whether the",
    "start": "2161350",
    "end": "2168190"
  },
  {
    "text": "whether the database is multi easy or not and then you can also reuse the condition so in this example I want to",
    "start": "2168190",
    "end": "2175090"
  },
  {
    "text": "use a DB snapshot only in production but I don't want to set that property at all in dev environment and I can do that",
    "start": "2175090",
    "end": "2183010"
  },
  {
    "text": "using a condition I can also reuse that",
    "start": "2183010",
    "end": "2188860"
  },
  {
    "text": "condition to create a resource or just completely skip that resource so in this",
    "start": "2188860",
    "end": "2193870"
  },
  {
    "text": "case that cloud watch alarm will be created only in the prod environment and will be completely skipped in the dev",
    "start": "2193870",
    "end": "2201550"
  },
  {
    "text": "environment you will find the usual suspect functions to make and write more",
    "start": "2201550",
    "end": "2209890"
  },
  {
    "text": "interesting conditions you can also nest one condition inside another moving on",
    "start": "2209890",
    "end": "2220710"
  },
  {
    "text": "if you have used cloud formation even at a basic level you would realize that",
    "start": "2220710",
    "end": "2227610"
  },
  {
    "text": "cloud formation automatically generates unique name for any resource that it",
    "start": "2227610",
    "end": "2232750"
  },
  {
    "text": "creates and it does that so that when you create multiple stats from the same",
    "start": "2232750",
    "end": "2238240"
  },
  {
    "text": "template there is never a naming conflict while it's good for avoiding",
    "start": "2238240",
    "end": "2243910"
  },
  {
    "text": "naming conflicts you have told us that it's difficult to read a machine",
    "start": "2243910",
    "end": "2249040"
  },
  {
    "text": "generated name is difficult to read by humans so we now have a choice for you",
    "start": "2249040",
    "end": "2255250"
  },
  {
    "text": "to provide your own templates sorry I think there was some",
    "start": "2255250",
    "end": "2261330"
  },
  {
    "text": "press the wrong button here",
    "start": "2265180",
    "end": "2268829"
  },
  {
    "text": "all right so you now have the choice of specifying your own name that makes",
    "start": "2286870",
    "end": "2292930"
  },
  {
    "text": "sense to you you just have to remember that if you are creating multiple stats from the same template then you need to",
    "start": "2292930",
    "end": "2299320"
  },
  {
    "text": "make sure that the names that you are providing are unique because if otherwise there will be naming conflict",
    "start": "2299320",
    "end": "2305890"
  },
  {
    "text": "and the clones of the same stat will fail to create you can set names for",
    "start": "2305890",
    "end": "2311290"
  },
  {
    "text": "several AWS resources including cloud watch alarms s3 buckets DynamoDB tables",
    "start": "2311290",
    "end": "2317350"
  },
  {
    "text": "SMS topics sqs queues and so on so far",
    "start": "2317350",
    "end": "2327790"
  },
  {
    "text": "we looked at the announcements on the development side and I'm going to switch gears and look at what we have done on",
    "start": "2327790",
    "end": "2334030"
  },
  {
    "text": "the operations side again we a lot of a",
    "start": "2334030",
    "end": "2339670"
  },
  {
    "text": "lot of you told us that you want a mechanism to make sure that the stacks that you create are well protected from",
    "start": "2339670",
    "end": "2347110"
  },
  {
    "text": "accidental changes and the next few enhancements focus on that when you have",
    "start": "2347110",
    "end": "2354190"
  },
  {
    "text": "a team of CloudFormation developers operating in the same account and creating multiple stacks anybody from",
    "start": "2354190",
    "end": "2361360"
  },
  {
    "text": "that team used to have access to modify any of those stacks but not all stacks",
    "start": "2361360",
    "end": "2367570"
  },
  {
    "text": "are created equal one of the stacks could be a production stack and you don't want a CloudFormation developer to",
    "start": "2367570",
    "end": "2375160"
  },
  {
    "text": "accidentally delete your production staff but now you don't have to worry",
    "start": "2375160",
    "end": "2380650"
  },
  {
    "text": "about that eventualities anymore because there is a there is a way to protect that stack the way you",
    "start": "2380650",
    "end": "2388030"
  },
  {
    "text": "can set that up is this which is you can create an IM group for your all cloud",
    "start": "2388030",
    "end": "2393580"
  },
  {
    "text": "formation users and then give them permission to operate only on a subset",
    "start": "2393580",
    "end": "2399130"
  },
  {
    "text": "of stacks so in this example I am giving right to those users to operate only on",
    "start": "2399130",
    "end": "2406840"
  },
  {
    "text": "those stacks which begin with them in short in the dev environment so those users cannot touch that production stack",
    "start": "2406840",
    "end": "2414250"
  },
  {
    "text": "that you want to protect and then I can always create a select group of cloud formation you production users",
    "start": "2414250",
    "end": "2420620"
  },
  {
    "text": "who have access to touch that production staff this is stack protection and then",
    "start": "2420620",
    "end": "2432380"
  },
  {
    "text": "there are several ways to achieve stack protection if you already have a",
    "start": "2432380",
    "end": "2438320"
  },
  {
    "text": "production stack running and you want to protect it another approach is to do not have a deny policy I keep clicking the",
    "start": "2438320",
    "end": "2448550"
  },
  {
    "text": "wrong button in case you're wondering what's happening so if you already have",
    "start": "2448550",
    "end": "2455990"
  },
  {
    "text": "production stack you can also use a deny policy to deny CloudFormation users from",
    "start": "2455990",
    "end": "2461510"
  },
  {
    "text": "touching that production stack in fact this is my favorite way actually which",
    "start": "2461510",
    "end": "2468770"
  },
  {
    "text": "is embedding that stack protection policy right inside a Stax template and",
    "start": "2468770",
    "end": "2475400"
  },
  {
    "text": "Here I am passing in the group that I want to be denied access to when I",
    "start": "2475400",
    "end": "2481520"
  },
  {
    "text": "create that stack and as soon as I create that stack the group won't be able to delete this stack using stack ID",
    "start": "2481520",
    "end": "2489580"
  },
  {
    "text": "stack protection is good but it's not good enough because you also want to",
    "start": "2490180",
    "end": "2495230"
  },
  {
    "text": "protect resources that are created by the stack stack protection is helpful when you want other CloudFormation users",
    "start": "2495230",
    "end": "2502990"
  },
  {
    "text": "to not unintentionally change important CloudFormation stacks but how do you",
    "start": "2502990",
    "end": "2509450"
  },
  {
    "text": "protect a CloudFormation create a resource like an ec2 instance from being deleted by an unknowing ec2",
    "start": "2509450",
    "end": "2519230"
  },
  {
    "text": "console user for example I am policies is again the answer and then there are",
    "start": "2519230",
    "end": "2526100"
  },
  {
    "text": "several ways to structure those ion policies and I'm going to highlight just one new and simple way to do that I have",
    "start": "2526100",
    "end": "2535370"
  },
  {
    "text": "a group of console users here and I can set a policy that denies them the right",
    "start": "2535370",
    "end": "2542120"
  },
  {
    "text": "to terminate an ec2 instance if that ec2 instance has a cloud formation tag and",
    "start": "2542120",
    "end": "2548530"
  },
  {
    "text": "CloudFormation service automatically tags the resources that it free",
    "start": "2548530",
    "end": "2553820"
  },
  {
    "text": "so protecting resources this way is even simpler",
    "start": "2553820",
    "end": "2559780"
  },
  {
    "text": "moving on to updates the I am policies that we saw are very useful but they",
    "start": "2563260",
    "end": "2570890"
  },
  {
    "text": "serve a different goal the goal there is to prevent unintended users from",
    "start": "2570890",
    "end": "2576670"
  },
  {
    "text": "modifying CloudFormation stacks and stacking sources but what if you are an",
    "start": "2576670",
    "end": "2582710"
  },
  {
    "text": "authorized in intended user of cloud formation and you want to do updates but",
    "start": "2582710",
    "end": "2590030"
  },
  {
    "text": "you want to be absolutely sure that your updates are not going to do something",
    "start": "2590030",
    "end": "2595940"
  },
  {
    "text": "that you did not want to happen for example in this stack this is a real estate website and I may want to update",
    "start": "2595940",
    "end": "2605180"
  },
  {
    "text": "the web servers so that I can keep my UI refresh for my customers but I want to",
    "start": "2605180",
    "end": "2610790"
  },
  {
    "text": "be absolutely sure that none of my stack updates are going to touch that database",
    "start": "2610790",
    "end": "2616550"
  },
  {
    "text": "configuration at the back I can now do that using a new feature called stack",
    "start": "2616550",
    "end": "2622460"
  },
  {
    "text": "policy I can set a stack policy which says deny any stack update that tries to",
    "start": "2622460",
    "end": "2629240"
  },
  {
    "text": "touch that database while allowing any other type of stack updates and these",
    "start": "2629240",
    "end": "2636670"
  },
  {
    "text": "policies for controlling stack updates can even be more fine-grained so taking",
    "start": "2636670",
    "end": "2643340"
  },
  {
    "text": "another example let's say you have an ec2 instance and you want to continue doing software updates on that ec2",
    "start": "2643340",
    "end": "2651200"
  },
  {
    "text": "instance but you want to be absolutely sure that none of the updates on that",
    "start": "2651200",
    "end": "2656570"
  },
  {
    "text": "ec2 instance is going to kill that instance and create a new one you can",
    "start": "2656570",
    "end": "2661670"
  },
  {
    "text": "set a fine-grained policy for that in this case I'm saying that deny any update on that stack if that update",
    "start": "2661670",
    "end": "2669410"
  },
  {
    "text": "tries to replace that ec2 instance but allow any other update including a",
    "start": "2669410",
    "end": "2674690"
  },
  {
    "text": "software update on that ec2 instance and setting stat policies is straightforward",
    "start": "2674690",
    "end": "2681980"
  },
  {
    "text": "you can use AWS command line or the cloud formation console to do that",
    "start": "2681980",
    "end": "2687030"
  },
  {
    "text": "just like you would provide a stack template and you can set a stack policy",
    "start": "2687030",
    "end": "2692700"
  },
  {
    "text": "while creating the stack and also after creating the start thinking more about",
    "start": "2692700",
    "end": "2701940"
  },
  {
    "text": "updates when you are running a production application you would want to",
    "start": "2701940",
    "end": "2708120"
  },
  {
    "text": "do software updates as we have been talking about but you want to be sure that there is no there is no downtime",
    "start": "2708120",
    "end": "2715080"
  },
  {
    "text": "for your customers there are several strategies that people use today in the",
    "start": "2715080",
    "end": "2721620"
  },
  {
    "text": "field and I'm going to highlight one strategy that we recently added that the",
    "start": "2721620",
    "end": "2728520"
  },
  {
    "text": "strategy is to use a relatively new feature that we have added called rolling updates if I am updating that",
    "start": "2728520",
    "end": "2736530"
  },
  {
    "text": "web server group I can update it in a rolling manner I can specify the minimum",
    "start": "2736530",
    "end": "2744060"
  },
  {
    "text": "number of instances that should be updated that should be in service at any given time and then I can divide the",
    "start": "2744060",
    "end": "2751470"
  },
  {
    "text": "entire fleet of instances into small batches and have CloudFormation update",
    "start": "2751470",
    "end": "2757200"
  },
  {
    "text": "only one batch at a time and I can also have a pass time between two batches and",
    "start": "2757200",
    "end": "2764270"
  },
  {
    "text": "that time window allows me to react if the updates are not doing what I what I",
    "start": "2764270",
    "end": "2771720"
  },
  {
    "text": "what I think they should be doing so if you find out that the updated software",
    "start": "2771720",
    "end": "2776850"
  },
  {
    "text": "has a bug and you want to abort the update that time window gives you gives",
    "start": "2776850",
    "end": "2782250"
  },
  {
    "text": "you an opportunity to cancel stack update and go back to the last known good state of the standard and the last",
    "start": "2782250",
    "end": "2792360"
  },
  {
    "text": "feature I want to highlight is Federation support if you are a company",
    "start": "2792360",
    "end": "2798060"
  },
  {
    "text": "of many users you might have specialists like network architects database admins",
    "start": "2798060",
    "end": "2803310"
  },
  {
    "text": "and so on and when you start using AWS you may not want to create an iamb",
    "start": "2803310",
    "end": "2809370"
  },
  {
    "text": "account for each of them instead what you would do is Federation you would federated as users into AWS and get a",
    "start": "2809370",
    "end": "2816510"
  },
  {
    "text": "temporary security credential for each of those users to access aw and you can now also use CloudFormation",
    "start": "2816510",
    "end": "2824760"
  },
  {
    "text": "you can also have the federated users to use cloud formation and the policies",
    "start": "2824760",
    "end": "2831850"
  },
  {
    "text": "could be very fine-grain if you have the",
    "start": "2831850",
    "end": "2836920"
  },
  {
    "text": "DB admins you can give them the right to call cloud formation and data all the",
    "start": "2836920",
    "end": "2843190"
  },
  {
    "text": "data based services and nothing else for the network admins you can grant them the right to call cloud formation and be",
    "start": "2843190",
    "end": "2850720"
  },
  {
    "text": "PC and other networking api's but nothing else and that way you can manage who who can do what in your entire",
    "start": "2850720",
    "end": "2857260"
  },
  {
    "text": "infrastructure I am roles can also now call cloud",
    "start": "2857260",
    "end": "2864430"
  },
  {
    "text": "formation and if you are if you are not very familiar with I am roles it's a",
    "start": "2864430",
    "end": "2870130"
  },
  {
    "text": "mechanism for that allows you to avoid using long term security credentials it uses temporary security credentials",
    "start": "2870130",
    "end": "2876880"
  },
  {
    "text": "instead and it also takes care of rotating those credentials and now you",
    "start": "2876880",
    "end": "2884500"
  },
  {
    "text": "can use the I am role to use cloud formation this is useful for automation and this is also useful in many other",
    "start": "2884500",
    "end": "2892060"
  },
  {
    "text": "cases I'm going to highlight just one interesting case which is this where let's say you have a company and it",
    "start": "2892060",
    "end": "2899110"
  },
  {
    "text": "wants to provision any kind of resource from inside your corporate network you",
    "start": "2899110",
    "end": "2905530"
  },
  {
    "text": "can now do that using I am role and cloud formation what you would basically do is create an instance in your VP see",
    "start": "2905530",
    "end": "2912700"
  },
  {
    "text": "have a role on it which has right to call cloud formation and then give cloud",
    "start": "2912700",
    "end": "2917740"
  },
  {
    "text": "formation permissions to use templates inside your corporate network to create",
    "start": "2917740",
    "end": "2922870"
  },
  {
    "text": "stacks inside your corporate network and all the provisioning is now triggered",
    "start": "2922870",
    "end": "2928270"
  },
  {
    "text": "from inside your network at the end I'm",
    "start": "2928270",
    "end": "2936340"
  },
  {
    "text": "just good I just want to share some of the related resources with you first and foremost is of course our website to",
    "start": "2936340",
    "end": "2943090"
  },
  {
    "text": "learn more about cloud formation if you are new to cloud formation we have a fundamentals of cloud formation lab",
    "start": "2943090",
    "end": "2949720"
  },
  {
    "text": "right here at reinvent so I definitely recommend you to go and try that out and then there are a bunch of other",
    "start": "2949720",
    "end": "2956350"
  },
  {
    "text": "sessions which talk about cloud formation with that I want to thank you",
    "start": "2956350",
    "end": "2962740"
  },
  {
    "text": "again for attending the session and remember to give us feedback we have about ten minutes for questions and",
    "start": "2962740",
    "end": "2969010"
  },
  {
    "text": "answers and for even more questions we have cloud formation engineers available",
    "start": "2969010",
    "end": "2974050"
  },
  {
    "text": "here at the back so they should be able to talk to you in this room or after we run out of the time outside you can find",
    "start": "2974050",
    "end": "2981580"
  },
  {
    "text": "anyone with a with orange planet and he will likely be a cloud formation",
    "start": "2981580",
    "end": "2986980"
  },
  {
    "text": "engineer but we for the remaining time please come near that microphone so your",
    "start": "2986980",
    "end": "2993250"
  },
  {
    "text": "questions are recorded and then we can answer them",
    "start": "2993250",
    "end": "2997860"
  }
]