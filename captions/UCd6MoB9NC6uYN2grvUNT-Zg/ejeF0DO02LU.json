[
  {
    "start": "0",
    "end": "105000"
  },
  {
    "text": "servile s that's apparently the new trendy keyword that we're having with an AWS and that gives you a lot of benefits",
    "start": "4080",
    "end": "11280"
  },
  {
    "text": "we always talk about all this scalability and the cloud environment and that's beautiful but what if we can",
    "start": "11280",
    "end": "17820"
  },
  {
    "text": "make that even easier what if we can say don't even worry about service don't even worry about auto scaling and all",
    "start": "17820",
    "end": "23880"
  },
  {
    "text": "that stuff let us take care of that my name is Oliver Klein I'm a Solutions Architect Aveda be us out of our Greater",
    "start": "23880",
    "end": "30090"
  },
  {
    "text": "China region and today I want to give you an example of how we can build a mobile application without managing",
    "start": "30090",
    "end": "36210"
  },
  {
    "text": "service using geospatial components right and matching people together so",
    "start": "36210",
    "end": "42149"
  },
  {
    "text": "first things first if we talk about server less than Julie that translates back into a service that doesn't require",
    "start": "42149",
    "end": "48539"
  },
  {
    "text": "service one of this is called AWS lambda so what is AWS lambda it allows you to",
    "start": "48539",
    "end": "54449"
  },
  {
    "text": "run your code fully managed in the AWS cloud we take care of things like high",
    "start": "54449",
    "end": "59699"
  },
  {
    "text": "availability we take care of things like scale you just put your code in and we run it as often as you want or as little",
    "start": "59699",
    "end": "66000"
  },
  {
    "text": "as you want you don't need to worry about which data center facilities which availability is there and all of that",
    "start": "66000",
    "end": "71970"
  },
  {
    "text": "stuff fades away at any scale at the same time that code can be executed",
    "start": "71970",
    "end": "77810"
  },
  {
    "text": "either way to an API call you can say I want to execute my code now or",
    "start": "77810",
    "end": "82910"
  },
  {
    "text": "alternatively you can have it called up through an event and this is really powerful this is the powerful element of",
    "start": "82910",
    "end": "89400"
  },
  {
    "text": "lambda where you say instead of just calling it when I want to call it I want to call it when something happens I want",
    "start": "89400",
    "end": "95010"
  },
  {
    "text": "to call it when I have something new in my storage service I want to call it when I have a new entry in my database",
    "start": "95010",
    "end": "100650"
  },
  {
    "text": "table for example that's the event tree of an element of lambda and even if you look at how to put it to work that can",
    "start": "100650",
    "end": "107430"
  },
  {
    "start": "105000",
    "end": "105000"
  },
  {
    "text": "really be a variety of things that can be an s3 bucket that can be a dynamodb",
    "start": "107430",
    "end": "112530"
  },
  {
    "text": "table where triggers whenever somebody writes something into that dynamodb table it can be a synchronous invocation",
    "start": "112530",
    "end": "118440"
  },
  {
    "text": "today if you are gateway and if you seen our Amazon echo devices where you can talk to that device and response back",
    "start": "118440",
    "end": "125430"
  },
  {
    "text": "you can create a skill name as an echo skill with the lambda function you can create even complete interaction with",
    "start": "125430",
    "end": "132090"
  },
  {
    "text": "CloudFormation template Amazon Kinesis real-time data processing streams",
    "start": "132090",
    "end": "137120"
  },
  {
    "text": "the vacation services cognitive triggers etc now this talk is about building a",
    "start": "137120",
    "end": "143780"
  },
  {
    "text": "mobile application so if you were to look at what functionalities you want to",
    "start": "143780",
    "end": "149420"
  },
  {
    "text": "have from a mobile application and jomi it translates into a variety of things first of all you want to authenticate",
    "start": "149420",
    "end": "154849"
  },
  {
    "text": "your users you want to know who is using your app if they're using multiple devices because often you have a phone",
    "start": "154849",
    "end": "161420"
  },
  {
    "text": "maybe you have a tablet maybe you have a desktop PC you want to be able to know that it's the same user across those",
    "start": "161420",
    "end": "167000"
  },
  {
    "text": "devices you also want to have the ability to synchronize information between those into these devices at the",
    "start": "167000",
    "end": "174500"
  },
  {
    "text": "same time as you're doing this you want to understand what you use this doing you want to understand his behavior and react upon it you also want to have the",
    "start": "174500",
    "end": "182180"
  },
  {
    "text": "flexibility to run a back-end business logic this is where lambda comes into place you want to store content you want",
    "start": "182180",
    "end": "188420"
  },
  {
    "text": "to be able to notify you know your application went to the background to a mobile push notification and you want to",
    "start": "188420",
    "end": "194959"
  },
  {
    "text": "have the ability to store information in a database this translates then very",
    "start": "194959",
    "end": "200090"
  },
  {
    "text": "much into the different services that are listed here so kognito for authentication and synchronization",
    "start": "200090",
    "end": "205430"
  },
  {
    "text": "between devices Amazon mobile analytics to understand your user behavior lambda",
    "start": "205430",
    "end": "210470"
  },
  {
    "text": "to run your business logic Amazon is tree to store user generated content Amazon SNS and its mobile push",
    "start": "210470",
    "end": "217810"
  },
  {
    "text": "notification functionality for the push notifications and Amazon DynamoDB to store information and to round it up we",
    "start": "217810",
    "end": "224900"
  },
  {
    "text": "also going to use Amazon API gateway to talk to some of these services so I",
    "start": "224900",
    "end": "230810"
  },
  {
    "text": "figured to make this a bit more eventful how about we built a sample application",
    "start": "230810",
    "end": "236810"
  },
  {
    "start": "236000",
    "end": "236000"
  },
  {
    "text": "which I'm going to call define the like sample application and before I get into that some of you might or might of heard",
    "start": "236810",
    "end": "244190"
  },
  {
    "text": "of an application called tinder right I'm not gonna ask who don't worry what",
    "start": "244190",
    "end": "251840"
  },
  {
    "text": "tinder is is basically an application where you can swipe people and if they like each other they can talk to each",
    "start": "251840",
    "end": "258169"
  },
  {
    "text": "other what they do is basically they track your location they look at you know where you are and they try to find",
    "start": "258169",
    "end": "263990"
  },
  {
    "text": "people in the same vicinity and then you can start matching them tinder right now for example is on AWS and I want",
    "start": "263990",
    "end": "270390"
  },
  {
    "text": "give you one little step to kind of understand what it means to build a really scalable application tinder right",
    "start": "270390",
    "end": "276030"
  },
  {
    "text": "now has 1.7 billion swipes a day every",
    "start": "276030",
    "end": "282360"
  },
  {
    "text": "single day they're 1.7 billion stripes going through AWS services now when we",
    "start": "282360",
    "end": "287850"
  },
  {
    "text": "built mobile application in our as popular as tinder we want to make sure that they are scalable so let's try to",
    "start": "287850",
    "end": "293250"
  },
  {
    "text": "build something similar I want to build a similar app but this time around I want to make it a bit different I want",
    "start": "293250",
    "end": "298380"
  },
  {
    "text": "to say let's build an app with that app I can tell I can and I can put in my interests I say you know I like to I",
    "start": "298380",
    "end": "305100"
  },
  {
    "text": "like AWS I like to go hiking maybe I like to go wakeboarding all right and then I want to be notified when similar",
    "start": "305100",
    "end": "312390"
  },
  {
    "text": "people with similar interests are in the same vicinity and say hey you should meet up with Steve Steve also likes",
    "start": "312390",
    "end": "318690"
  },
  {
    "text": "wakeboarding all right that's that's the app that we're trying to create right now so what are the functionalities that",
    "start": "318690",
    "end": "324720"
  },
  {
    "text": "we want to look for if you were to build such an app we were to say okay I want to give the ability for people to create",
    "start": "324720",
    "end": "330000"
  },
  {
    "text": "a profile all right login their interests take a selfie you know upload that into",
    "start": "330000",
    "end": "335550"
  },
  {
    "text": "their profile we want to have the ability to track our users continuously as they move around you know with in",
    "start": "335550",
    "end": "342390"
  },
  {
    "text": "Singapore wherever they go we want to have the flexibility then to notify users when we find someone within that",
    "start": "342390",
    "end": "349590"
  },
  {
    "text": "vicinity you know according to certain interest radios that we define and notify hey there's another another",
    "start": "349590",
    "end": "355260"
  },
  {
    "text": "person that might be interesting for you because they share similar interests and lastly we also want to understand how",
    "start": "355260",
    "end": "362190"
  },
  {
    "text": "people are using this application those are kind of the functionalities that we want to build and whenever I develop an",
    "start": "362190",
    "end": "367710"
  },
  {
    "text": "application I'd really like to think of it as in Laius and say you know let's structured in layers and think of it in",
    "start": "367710",
    "end": "373500"
  },
  {
    "text": "a more modular fashion if you were to take this app you probably could say we have three kind of different layers the",
    "start": "373500",
    "end": "379800"
  },
  {
    "text": "first one would be the you layer you know the app centric layer where you say I'm going to create my profile I want to",
    "start": "379800",
    "end": "386520"
  },
  {
    "text": "upload my picture and I want to track you know what kind of information or how I'm using that application and to build",
    "start": "386520",
    "end": "393900"
  },
  {
    "text": "that layer we're going to use services like Cougar needle as tree and mobile analytics now the next step of that",
    "start": "393900",
    "end": "400470"
  },
  {
    "text": "sample application that we're building would be to track people continuously and also give their",
    "start": "400470",
    "end": "406510"
  },
  {
    "text": "ability to kind of store their interests right this is what I would refer to as the activity centric like you know what",
    "start": "406510",
    "end": "414010"
  },
  {
    "text": "are you doing with that application you walk around you change your location you like something you unlike something you",
    "start": "414010",
    "end": "420430"
  },
  {
    "text": "maybe create a new interest that wasn't there and then the last layer that we're trying to build would be the user base",
    "start": "420430",
    "end": "427330"
  },
  {
    "text": "centric level right not only the you but also the me write them and me basically",
    "start": "427330",
    "end": "433300"
  },
  {
    "text": "so understand everybody creates a profile everybody has activity and now",
    "start": "433300",
    "end": "438490"
  },
  {
    "text": "how does that activity correlate within my user base so this is where I now wanna match people together and then",
    "start": "438490",
    "end": "445630"
  },
  {
    "text": "alert them so let's get started let's start first with the first layer so we",
    "start": "445630",
    "end": "450820"
  },
  {
    "text": "want to have the ability to create a profile an application upload some of the content pictures etc and track that",
    "start": "450820",
    "end": "456820"
  },
  {
    "text": "usage now before we can start building this and the idea is we want to have a",
    "start": "456820",
    "end": "462370"
  },
  {
    "text": "mobile app that directly talks to AWS services we are not gonna put any server",
    "start": "462370",
    "end": "467710"
  },
  {
    "text": "in between so what we need to do is we're gonna need to leverage the Mobile SDK to build this application because",
    "start": "467710",
    "end": "474490"
  },
  {
    "text": "the Mobile SDK of AWS allows us to talk to certain services of AWS straight from",
    "start": "474490",
    "end": "480850"
  },
  {
    "text": "the mobile application itself straight from your phone straight from your tablet and if you look at the way it'll",
    "start": "480850",
    "end": "487450"
  },
  {
    "text": "be as a structure everything is in web service Amazon Web Services right everything is an API call however if you",
    "start": "487450",
    "end": "496360"
  },
  {
    "start": "491000",
    "end": "491000"
  },
  {
    "text": "make an IP I call to AWS you cannot do it on authenticate it so any call that you make against the API needs to be",
    "start": "496360",
    "end": "502780"
  },
  {
    "text": "authenticated how does that procedure work while Germany you would have your mobile client that then says hey AWS",
    "start": "502780",
    "end": "508660"
  },
  {
    "text": "security token service please provide me a token the token servers will look at okay what identity and access management",
    "start": "508660",
    "end": "515200"
  },
  {
    "text": "uses roles etc to write half what are the permissions to it and it will then provide you with a temporary credential",
    "start": "515200",
    "end": "521260"
  },
  {
    "text": "with which you can sign your API request and then say now I can talk to AWS services now that's quite a procedure to",
    "start": "521260",
    "end": "529839"
  },
  {
    "text": "do just to talk to AWS services right so how could we make that a little bit simpler that is what Amazon Cognito is",
    "start": "529839",
    "end": "536740"
  },
  {
    "text": "about so Amazon Cognito actually allows you to generate those temporary credentials",
    "start": "536740",
    "end": "542730"
  },
  {
    "text": "automatically to talk to AWS services straight from your device and it will implement AWS security best practices",
    "start": "542730",
    "end": "550180"
  },
  {
    "text": "around some of those access key credential rotation or lifetime in",
    "start": "550180",
    "end": "555310"
  },
  {
    "text": "addition what Cognito also allows you to do is to authenticate and identify",
    "start": "555310",
    "end": "560710"
  },
  {
    "text": "specific user within your application early outset I installed the app on my phone I now install it on my tablet I",
    "start": "560710",
    "end": "567670"
  },
  {
    "text": "want to know it's the same user kognito can do that for you so Cognito can help you to authenticate that user through",
    "start": "567670",
    "end": "573760"
  },
  {
    "text": "your own login mechanism or through some other third-party authentication provider such as Twitter Facebook Google",
    "start": "573760",
    "end": "580480"
  },
  {
    "text": "Amazon anyone who provides up an ID or your own mechanism that you want to have and what kognito then allows you to do",
    "start": "580480",
    "end": "588460"
  },
  {
    "text": "is basically recognize those users across these devices now it also has one",
    "start": "588460",
    "end": "593560"
  },
  {
    "text": "additional capability which is referred to as kognito singh so not only can we",
    "start": "593560",
    "end": "598930"
  },
  {
    "text": "identify those users but Coconino also gives you a small local storage where",
    "start": "598930",
    "end": "605589"
  },
  {
    "text": "you can write key value pairs inside that local storage when I say local I mean local to the device so if I use",
    "start": "605589",
    "end": "612730"
  },
  {
    "text": "cookie leaders saying I can put data into that storage and it will be stored on a file an actual sequel live file on",
    "start": "612730",
    "end": "620380"
  },
  {
    "text": "my device but why would I use kognito for that I can do that locally right I use Cognito because this will now be",
    "start": "620380",
    "end": "626320"
  },
  {
    "text": "synchronized back to a cloud environment and will be synchronized with some other of your devices so going back to this",
    "start": "626320",
    "end": "632410"
  },
  {
    "text": "app right I'm thinking about my profile that I build up so in my profile I want",
    "start": "632410",
    "end": "637839"
  },
  {
    "text": "to have a user name or name right that people seen yes and then think about the app that we're trying to build we want",
    "start": "637839",
    "end": "643480"
  },
  {
    "text": "to match people in a certain of insanity so I want to give the user of that application ability to say I want to",
    "start": "643480",
    "end": "649570"
  },
  {
    "text": "match face on a certain radius I want to match based on 100 meters away a kilometer away 50 kilometres away right",
    "start": "649570",
    "end": "656230"
  },
  {
    "text": "that's a preference that I would set in my app and I want that preference to be available and all of my other devices",
    "start": "656230",
    "end": "662500"
  },
  {
    "text": "where I would run that out that's what Cognito sync is about it will store that preference file locally and will",
    "start": "662500",
    "end": "668230"
  },
  {
    "text": "synchronize it to a cloud environment and synchronize it all to your other devices so if you were to write codes to make this work",
    "start": "668230",
    "end": "674700"
  },
  {
    "text": "here you see Objective C code it would be as simple as saying give me an AWS Cognito create a data set right and now",
    "start": "674700",
    "end": "682440"
  },
  {
    "text": "I can set key value pairs in here so I'm gonna choose a name my name is gonna be",
    "start": "682440",
    "end": "687690"
  },
  {
    "text": "Olly and I'm gonna want to be matched in an interest radius of 50 kilometres synchronize that's it so this",
    "start": "687690",
    "end": "695279"
  },
  {
    "text": "information is now locally available available in the cloud environment and available on any future device that",
    "start": "695279",
    "end": "701190"
  },
  {
    "text": "you're gonna use that app with and if you think a bit beyond the application",
    "start": "701190",
    "end": "706230"
  },
  {
    "text": "that we're building this is very useful for any kind of mobile at your building even like a mobile game you can save",
    "start": "706230",
    "end": "712019"
  },
  {
    "text": "game state into cognitive sync and all that game state you know of where you left off your game will be synchronized",
    "start": "712019",
    "end": "717899"
  },
  {
    "text": "to all your devices for example now the next thing that we're going to do is we",
    "start": "717899",
    "end": "723209"
  },
  {
    "text": "got a we have a profile we have a name of an interest rate us but we want to take a picture of ourselves and upload",
    "start": "723209",
    "end": "728550"
  },
  {
    "text": "that all right what is the right service to do that the right service to do that would be Amazon s3",
    "start": "728550",
    "end": "733920"
  },
  {
    "start": "730000",
    "end": "730000"
  },
  {
    "text": "what's Amazon s3 it's a storage service an object storage service from Amazon that has virtually unlimited capacity",
    "start": "733920",
    "end": "740190"
  },
  {
    "text": "meaning you create what we call an s3 bucket you can put in any kind of objects and it scales to virtually any",
    "start": "740190",
    "end": "746880"
  },
  {
    "text": "amount of size of storage and and objects that you want to put in that bucket so ideal to put user-generated",
    "start": "746880",
    "end": "753089"
  },
  {
    "text": "content in here because it will also provide you with an HTTP or HTTPS",
    "start": "753089",
    "end": "758640"
  },
  {
    "text": "endpoint to that object if you make it public for example so if I want to now distribute that profile picture to other",
    "start": "758640",
    "end": "765120"
  },
  {
    "text": "app users I can load that straight for Mestre I push my picture tress tree I'll",
    "start": "765120",
    "end": "770430"
  },
  {
    "text": "load it back up for my story for other users as tree becomes like your static web server good for videos images",
    "start": "770430",
    "end": "777480"
  },
  {
    "text": "JavaScript files CSS files you name it anything that static that belongs in s tree and your profile picture belongs in",
    "start": "777480",
    "end": "785220"
  },
  {
    "text": "this tree because we upload it straight from our device into that service without a server in between how do we do",
    "start": "785220",
    "end": "791069"
  },
  {
    "text": "that we can use the s3 transfer utility which is part of the Mobile SDK what is that utility doing well it",
    "start": "791069",
    "end": "797880"
  },
  {
    "text": "allows you first of all to upload any kind of object like a picture in the",
    "start": "797880",
    "end": "803790"
  },
  {
    "text": "background of the application and it also allows you to send binary data so I could say for example here's a sample",
    "start": "803790",
    "end": "809640"
  },
  {
    "start": "808000",
    "end": "808000"
  },
  {
    "text": "code of how I would implement it in iOS I could say my data to upload would be my picture binary data of the picture",
    "start": "809640",
    "end": "815880"
  },
  {
    "text": "and I just need to specify hey where do I want to upload it in this bucket I give it a certain name that's the key I",
    "start": "815880",
    "end": "822540"
  },
  {
    "text": "might give it some content type and that's it the transfer utility will now handle the rest",
    "start": "822540",
    "end": "828090"
  },
  {
    "text": "it'll make sure that it's connected to the Internet it will resume to upload when you have a disconnect for example",
    "start": "828090",
    "end": "833970"
  },
  {
    "text": "we'll throw an exception of anything else along the wiring now the next thing",
    "start": "833970",
    "end": "840180"
  },
  {
    "text": "that I want to do is as I build this app out right now I can create a profile I can upload a picture I also want to make",
    "start": "840180",
    "end": "846330"
  },
  {
    "text": "sure as a developer to be able to track what's going on with my application I want to be able to understand my users",
    "start": "846330",
    "end": "852690"
  },
  {
    "text": "and for that I'd only want to use analytics and there's one service that's useful to use here which is called Amazon mobile analytics which allows you",
    "start": "852690",
    "end": "860130"
  },
  {
    "text": "to collect understand and visualize some of your mobile app usage data it's fully",
    "start": "860130",
    "end": "866310"
  },
  {
    "text": "managed so it scales to pretend she billions of events that are coming in from all the different devices but",
    "start": "866310",
    "end": "871980"
  },
  {
    "text": "there's one important thing which is you retain full control and ownership of that data Amazon doesn't make any",
    "start": "871980",
    "end": "879420"
  },
  {
    "text": "secondary use of that data it remains your usage data how do I get basic",
    "start": "879420",
    "end": "885180"
  },
  {
    "text": "mobile analytics usage data one line of code mobile analytics for app by sorry",
    "start": "885180",
    "end": "890940"
  },
  {
    "text": "AWS mobile analytics object I give it an app ID and now I need to talk to a",
    "start": "890940",
    "end": "896310"
  },
  {
    "text": "mobile analytic service I need to do that authenticated right well we authenticate it via a Cognito",
    "start": "896310",
    "end": "901830"
  },
  {
    "text": "so we can just say use that Coconino ID and we authenticate it what mobile",
    "start": "901830",
    "end": "907410"
  },
  {
    "text": "analytics will then give you it's basic dashboards like this where you understand okay what are my daily live",
    "start": "907410",
    "end": "912930"
  },
  {
    "text": "active users what are my monthly active users what I in app purchases whether the total session what's the lifetime",
    "start": "912930",
    "end": "919110"
  },
  {
    "text": "value of a user or you even have things like stickiness factor this is a simple",
    "start": "919110",
    "end": "925260"
  },
  {
    "text": "metric but this metric can be quite powerful but a stickiness factor means is basically if I use my app one hour",
    "start": "925260",
    "end": "931260"
  },
  {
    "text": "today if I use it another hour tomorrow then the stickiness factor is the same if I use it less it goes down if I use",
    "start": "931260",
    "end": "937020"
  },
  {
    "text": "it more so the stickiness factor tells me if my application is popular not so popular if",
    "start": "937020",
    "end": "942890"
  },
  {
    "text": "I roll out a new application version I should always look at my stickiness factor if it goes down",
    "start": "942890",
    "end": "947930"
  },
  {
    "text": "maybe I introduced a bunch of bucks so the new features are not good and by the way mobile analytics can lock any kind",
    "start": "947930",
    "end": "954320"
  },
  {
    "text": "of event so these are the ones that you get by default but you can have much more complex and custom events that you",
    "start": "954320",
    "end": "959839"
  },
  {
    "text": "log inside but the reason I want to still show you some of those simple metrics is that very often simple",
    "start": "959839",
    "end": "966620"
  },
  {
    "text": "metrics can help you to understand what's going on in your application and I wanted to give you an example of a",
    "start": "966620",
    "end": "973700"
  },
  {
    "text": "game that's called bubble Island by Google and you know the idea is there's a little furry Fox down here you're",
    "start": "973700",
    "end": "979640"
  },
  {
    "text": "basically shoots up those bubbles and if they're color coded they kind of disappear kind of get the picture right",
    "start": "979640",
    "end": "985060"
  },
  {
    "text": "what this game is though is that it's level based game and it went viral in",
    "start": "985060",
    "end": "990140"
  },
  {
    "text": "2012 and within two months it reached a million daily active users which is",
    "start": "990140",
    "end": "995240"
  },
  {
    "text": "pretty impressive but it then started to drop the daily active users just seem to",
    "start": "995240",
    "end": "1001890"
  },
  {
    "text": "disappear and slow down so what they did was they said how about we log a few",
    "start": "1001890",
    "end": "1009370"
  },
  {
    "text": "information of our application to understand what's going on something's wrong this can't be right why are people not",
    "start": "1009370",
    "end": "1015550"
  },
  {
    "text": "playing our game they seem to like it right so what they did was they just reported back a few metrics the first",
    "start": "1015550",
    "end": "1022899"
  },
  {
    "start": "1020000",
    "end": "1020000"
  },
  {
    "text": "metrics that they choose is every time somebody completes the level we push",
    "start": "1022899",
    "end": "1028329"
  },
  {
    "text": "that information back into the analytics service so that we can track how many tries a specific user needs to have",
    "start": "1028329",
    "end": "1035438"
  },
  {
    "text": "before he passes the level right the more often he tries well the more difficult that level seems to be and",
    "start": "1035439",
    "end": "1041558"
  },
  {
    "text": "this was the result all right and now if you look at this metric you could probably say well level seven seems to",
    "start": "1041559",
    "end": "1049870"
  },
  {
    "text": "be pretty difficult right and that's probably the case but could you now say",
    "start": "1049870",
    "end": "1055210"
  },
  {
    "text": "level seven is difficult and that's why people start playing the game not quite yet so you want to correlate it with",
    "start": "1055210",
    "end": "1061000"
  },
  {
    "text": "another metric so how about we hit take one other simple metric they loved one more thing which was what is the highest",
    "start": "1061000",
    "end": "1067929"
  },
  {
    "text": "level that a user plate all right and then you find that correlation now we suddenly see hey the",
    "start": "1067929",
    "end": "1074020"
  },
  {
    "text": "highest-level have a plate for most people was level seven and detroit most",
    "start": "1074020",
    "end": "1079060"
  },
  {
    "text": "of the time on level seven which stand means to the conclusion well either way",
    "start": "1079060",
    "end": "1084340"
  },
  {
    "start": "1083000",
    "end": "1083000"
  },
  {
    "text": "a player played all the levels or he got stuck at a level that was too difficult",
    "start": "1084340",
    "end": "1089670"
  },
  {
    "text": "with two very basic metrics they identified the problem and now with with",
    "start": "1089670",
    "end": "1096610"
  },
  {
    "text": "this problem they now can come up with a solution and that solution was well if a little become so difficult or a player",
    "start": "1096610",
    "end": "1103030"
  },
  {
    "text": "has played all levels how about I give players new levels all the time so what",
    "start": "1103030",
    "end": "1109450"
  },
  {
    "text": "they introduced was a new level every week and they did that right here but as",
    "start": "1109450",
    "end": "1116020"
  },
  {
    "text": "arrow is striking down and after they did that you know people continue to play people continue to use their game",
    "start": "1116020",
    "end": "1121930"
  },
  {
    "text": "and a daily active users just went up and up and up because new user acquisitions were added but the existing",
    "start": "1121930",
    "end": "1128710"
  },
  {
    "text": "one they remained on that game so very simple metrics sometimes can",
    "start": "1128710",
    "end": "1134500"
  },
  {
    "text": "lead to conclusions like this and really help you to make your product the application of your game better so don't",
    "start": "1134500",
    "end": "1140860"
  },
  {
    "text": "underestimate the power of analytics now going back to what you're building that",
    "start": "1140860",
    "end": "1147460"
  },
  {
    "text": "what we're building here so we kind of achieved the first layer right we can create a profile you can upload a",
    "start": "1147460",
    "end": "1153490"
  },
  {
    "text": "picture or any kind of you know videos or whatever you want to have and we already started tracking our first users",
    "start": "1153490",
    "end": "1159370"
  },
  {
    "text": "of that Fasig app now the next thing that we want to do is track their location and also give them a",
    "start": "1159370",
    "end": "1164830"
  },
  {
    "text": "possibility to say which interests they have right for this we're going to leverage API gateway lambda and dynamodb",
    "start": "1164830",
    "end": "1171550"
  },
  {
    "text": "so let's understand how we do that if you think about how to collect location",
    "start": "1171550",
    "end": "1179920"
  },
  {
    "text": "and interests how would you normally go ahead with it well you say I have a mobile application I have a back-end logic somewhere and then I have a",
    "start": "1179920",
    "end": "1186910"
  },
  {
    "text": "database right which right now and more often than not people build out their own server farms or you know and then",
    "start": "1186910",
    "end": "1193450"
  },
  {
    "text": "their own database behind it and then they talk to it so a better alternative to this is to create micro services",
    "start": "1193450",
    "end": "1200170"
  },
  {
    "start": "1200000",
    "end": "1200000"
  },
  {
    "text": "based on server last technology by using Amazon's API gateway Amazon's lambda functions and a data",
    "start": "1200170",
    "end": "1207430"
  },
  {
    "text": "store such as Amazon DynamoDB which is a fully managed no sequel database service",
    "start": "1207430",
    "end": "1212470"
  },
  {
    "text": "so if we were to imagine this for this specific application that we're building you would have in Amazon API great way",
    "start": "1212470",
    "end": "1219280"
  },
  {
    "text": "to API calls one slash location one slash interests they would then",
    "start": "1219280",
    "end": "1224980"
  },
  {
    "text": "subsequently call depending of it together post an Amazon lambda function which would be a report location",
    "start": "1224980",
    "end": "1231430"
  },
  {
    "text": "function a like new interest function to create a new interest function maybe a list interest function and then we need",
    "start": "1231430",
    "end": "1237580"
  },
  {
    "text": "to store that information in a data store so this would be Amazon DynamoDB right here where we would have a",
    "start": "1237580",
    "end": "1243310"
  },
  {
    "text": "location table and an interest table now you're gonna say this is great but you",
    "start": "1243310",
    "end": "1249250"
  },
  {
    "text": "said geospatial and DynamoDB geospatial",
    "start": "1249250",
    "end": "1254530"
  },
  {
    "text": "how does that work well there's an interesting trick here and by the way this works for any kind of database if",
    "start": "1254530",
    "end": "1260710"
  },
  {
    "text": "you want to make it work you can basically store geospatial information in a so-called geo hash",
    "start": "1260710",
    "end": "1267280"
  },
  {
    "start": "1265000",
    "end": "1265000"
  },
  {
    "text": "which allows you to represent the longitude latitude kind of area in a string and with the functionality of",
    "start": "1267280",
    "end": "1274480"
  },
  {
    "text": "having a string we can use any kind of database to do sorting how does that work um I don't want to go into too much",
    "start": "1274480",
    "end": "1280000"
  },
  {
    "text": "detail but basically if you were to imagine a concept imagining the world would be like a cube you know we could",
    "start": "1280000",
    "end": "1287140"
  },
  {
    "text": "kind of build a cube around the world and then we say every side of that cube we label at ABCDE F and we take that",
    "start": "1287140",
    "end": "1293290"
  },
  {
    "text": "individual side of that cube which is now a square and we divide that square in child squares and child cells 1 2 3 4",
    "start": "1293290",
    "end": "1301120"
  },
  {
    "text": "and those child cells again we divide them and we divide them so child cell 2 would be 2 1 2 2 2 3 2 4 and so on and",
    "start": "1301120",
    "end": "1307840"
  },
  {
    "text": "so on and so on which now allows us to say you know we divide all these things if we want to have a certain specific",
    "start": "1307840",
    "end": "1314020"
  },
  {
    "text": "area so let's say for example this red dot here how would we know where this",
    "start": "1314020",
    "end": "1319600"
  },
  {
    "text": "well it's a shot that child cell of a child's love a child cell of that cube so this would be a 2 2 4 and what this",
    "start": "1319600",
    "end": "1330730"
  },
  {
    "text": "means now is I can create a string that gives me a position but it also gives me",
    "start": "1330730",
    "end": "1336580"
  },
  {
    "text": "a square and the longer that string the more granular my position becomes the short",
    "start": "1336580",
    "end": "1342910"
  },
  {
    "text": "of that string the more I zoom out now if I now want to know well whose",
    "start": "1342910",
    "end": "1348730"
  },
  {
    "text": "surrounding me right I just need to query who's a 2 2 or a 2 and I find all",
    "start": "1348730",
    "end": "1356980"
  },
  {
    "text": "the people within that square which now allows us to use any kind of database technology that allows basic string",
    "start": "1356980",
    "end": "1362890"
  },
  {
    "text": "manipulation which would be pretty much everything to store geospatial information and that's what we're going",
    "start": "1362890",
    "end": "1368919"
  },
  {
    "text": "to do with dynamo DB because dynamo DB has indexes and indexes that allows sorting based on string prefixes so now",
    "start": "1368919",
    "end": "1376840"
  },
  {
    "text": "we can based on a string prefix define who's in a certain area are you gonna say that's all cool but I don't want to",
    "start": "1376840",
    "end": "1383169"
  },
  {
    "text": "build that no problem we got you back on that there's actually a library that we that we have on our AWS laps github page",
    "start": "1383169",
    "end": "1390730"
  },
  {
    "text": "slash Jetta becomes - AWS deaths slash dynamo DB - geo which is a java library to",
    "start": "1390730",
    "end": "1398559"
  },
  {
    "text": "easily create and query those geospatial and just sorry geohashes from dynamo DB",
    "start": "1398559",
    "end": "1405370"
  },
  {
    "text": "so here's an example Amazon is a company that's headquartered in Seattle in Seattle you have a wonderful little",
    "start": "1405370",
    "end": "1411610"
  },
  {
    "text": "landmark that is called the Seattle Space Needle Seattle Space Needle is that there was exact longitude latitude",
    "start": "1411610",
    "end": "1417309"
  },
  {
    "text": "coordinates that you see here so what I could say I could say create a new geo point on the Seattle Space Needle and",
    "start": "1417309",
    "end": "1424030"
  },
  {
    "text": "now I want to know what do I have in my dynamo DB table what's surrounding it the Seattle Space Needle 250 meters away",
    "start": "1424030",
    "end": "1431230"
  },
  {
    "text": "I just say create a query radius request with a value of 250 meters and then",
    "start": "1431230",
    "end": "1436780"
  },
  {
    "text": "query that radius which will now go to dynamo DB query that in next find the places that 250 nearby and return them",
    "start": "1436780",
    "end": "1443950"
  },
  {
    "text": "and because it's java we can run it in lambda right because lambda supports Java so great we got that figured out",
    "start": "1443950",
    "end": "1450970"
  },
  {
    "text": "now I just wanted to dive a little bit into the API gateway pod because you",
    "start": "1450970",
    "end": "1456760"
  },
  {
    "text": "might say could I call a lambda function straight from my mobile device and",
    "start": "1456760",
    "end": "1463000"
  },
  {
    "text": "answer's yes absolutely but I plugged in API gateway so why did I do that what is Amazon API gateway",
    "start": "1463000",
    "end": "1469360"
  },
  {
    "text": "Amazon API gateway is a full Manesh and scalable restful api gateway service that is channeled to our 54 at",
    "start": "1469360",
    "end": "1477970"
  },
  {
    "text": "locations across the world there's a typo it should be 54 54 at locations",
    "start": "1477970",
    "end": "1483159"
  },
  {
    "text": "across the world so that's your first entry point into the API network the important part here is we provide a",
    "start": "1483159",
    "end": "1489460"
  },
  {
    "text": "distributed denial of service attack protection around it a DDoS protection around it so if somebody tries to attack you you have api gateway in front of it",
    "start": "1489460",
    "end": "1496419"
  },
  {
    "text": "fine then it's Amazon's problem to solve that not yours at the same time if you have abusive users you can start",
    "start": "1496419",
    "end": "1503200"
  },
  {
    "text": "throttling them because API gateway gives you those throttling capabilities it also gives you the capabilities to",
    "start": "1503200",
    "end": "1508840"
  },
  {
    "text": "create multiple stages where you say I have a development environment I have a testing them and have a production environment is between stages but let's",
    "start": "1508840",
    "end": "1517659"
  },
  {
    "text": "take it one step further why is it really important for a mobile application again I could call that",
    "start": "1517659",
    "end": "1522880"
  },
  {
    "start": "1519000",
    "end": "1519000"
  },
  {
    "text": "lambda function directly but what that means is I need to know in my application what lambda function I'm",
    "start": "1522880",
    "end": "1529600"
  },
  {
    "text": "calling so if tomorrow I want to decide to change the lambda functions I need to",
    "start": "1529600",
    "end": "1534970"
  },
  {
    "text": "change my application code which means I need to recompile it publish it and push it to the App Store to the Google Play",
    "start": "1534970",
    "end": "1540429"
  },
  {
    "text": "Store etc and hope that people are updating the application so that's not good that's why we flock API gateway",
    "start": "1540429",
    "end": "1548049"
  },
  {
    "text": "in-between because now we have an interchangeable front door to all of our back-end logic and we can kind of",
    "start": "1548049",
    "end": "1554529"
  },
  {
    "text": "navigate around that's our front we never changed that that / location is always the same but we can now change",
    "start": "1554529",
    "end": "1560799"
  },
  {
    "text": "wherever it goes in the backend we also then have this entire protection around it right that goes by the way from",
    "start": "1560799",
    "end": "1567580"
  },
  {
    "text": "network layer attacks like syn floods all the way up to application layer to your HTTP requests and we truffle those",
    "start": "1567580",
    "end": "1576010"
  },
  {
    "text": "individual users we might not you know who might be abusive towards our system one of the thing is think about there",
    "start": "1576010",
    "end": "1583570"
  },
  {
    "text": "was lists of interests that we have in application that we're building right everybody can create an interest and then we have a listing of all those",
    "start": "1583570",
    "end": "1589659"
  },
  {
    "text": "interests what you could do is we can cache some of those interests so that we don't always need to get them from the",
    "start": "1589659",
    "end": "1595059"
  },
  {
    "text": "database or the API gateway service you get that caching functionality so some of your API calls that maybe just load",
    "start": "1595059",
    "end": "1602440"
  },
  {
    "text": "information back in could have it cached yecchh location that's pretty cool and",
    "start": "1602440",
    "end": "1608110"
  },
  {
    "text": "if you build a web app by the way you can also enable cross-origin resource sharing fairly easily for any app of",
    "start": "1608110",
    "end": "1613600"
  },
  {
    "text": "your desire by plugging api gateway in in front of it so whatever you achieve",
    "start": "1613600",
    "end": "1619659"
  },
  {
    "text": "we create an application where you can create a profile we upload a picture we understand the usage we allow people to",
    "start": "1619659",
    "end": "1626409"
  },
  {
    "text": "hack in and put in their interests and we track their location as they move around store that in fire G or hash in",
    "start": "1626409",
    "end": "1634480"
  },
  {
    "text": "the DynamoDB table now here comes the juicy part how do we now find matches between those people and how do we then",
    "start": "1634480",
    "end": "1640840"
  },
  {
    "text": "notify them and here is really where the",
    "start": "1640840",
    "end": "1646809"
  },
  {
    "text": "event-driven capabilities of lambda came in coming if you think about what we",
    "start": "1646809",
    "end": "1652389"
  },
  {
    "text": "currently have done we have a dynamodb table that DynamoDB table is getting filled with location and for patients",
    "start": "1652389",
    "end": "1659590"
  },
  {
    "text": "with geohashes it's getting filled with interests of people liking or disliking and entries or creating a new interest",
    "start": "1659590",
    "end": "1665769"
  },
  {
    "text": "we have information coming in into our s3 bucket new profile pictures that people upload maybe new videos etc we",
    "start": "1665769",
    "end": "1673419"
  },
  {
    "text": "have people using our application when they use our application they authenticate by a Cognito so we have profile information coming in into",
    "start": "1673419",
    "end": "1680409"
  },
  {
    "text": "Cognito new user names new interest radius that we said on how we want to match people these are all events that",
    "start": "1680409",
    "end": "1687549"
  },
  {
    "text": "are coming in and what we can now do is to say lambda can be triggered with",
    "start": "1687549",
    "end": "1694269"
  },
  {
    "text": "those events so as things change in my dynamodb table it calls a dynamo DB stream which can call a lambda function",
    "start": "1694269",
    "end": "1700389"
  },
  {
    "text": "as i have any objects in my s3 bucket i can have an s3 event notification that",
    "start": "1700389",
    "end": "1705730"
  },
  {
    "text": "triggers the lambda function as i changed my profile information incognito it's going to call a Cognito saying",
    "start": "1705730",
    "end": "1711309"
  },
  {
    "text": "trigger which calls my lambda function so if I were to say I want to find",
    "start": "1711309",
    "end": "1717009"
  },
  {
    "start": "1716000",
    "end": "1716000"
  },
  {
    "text": "proximity matches based on interest how would I now build that with this kind of knowledge that I now have I have an",
    "start": "1717009",
    "end": "1722379"
  },
  {
    "text": "application right makes a RESTful API call against my location every time I move around I want to store this new",
    "start": "1722379",
    "end": "1728139"
  },
  {
    "text": "information which calls report or invokes a report location lambda function which in effect",
    "start": "1728139",
    "end": "1733440"
  },
  {
    "text": "stores that in a dynamodb table using geo hashing capabilities here's where the event-driven part now",
    "start": "1733440",
    "end": "1739799"
  },
  {
    "text": "comes in because now we have a DynamoDB stream that can call another lambda",
    "start": "1739799",
    "end": "1744899"
  },
  {
    "text": "function so every time we have new locations that come in we can call a lambda function that does nothing else",
    "start": "1744899",
    "end": "1749909"
  },
  {
    "text": "but checks do we have a match how can that lambda function do that well it has",
    "start": "1749909",
    "end": "1755070"
  },
  {
    "text": "access to the interest table which knows you are person X why's that you like this in there than that and yet other",
    "start": "1755070",
    "end": "1761099"
  },
  {
    "text": "people that are nearby and like the same thing and how do I know how far match well I get that information from a",
    "start": "1761099",
    "end": "1766679"
  },
  {
    "text": "profile setting that is not only locally stored on my device but also on the kognito sink store on the cloud to which",
    "start": "1766679",
    "end": "1773519"
  },
  {
    "text": "lambda now has access and now you're gonna say well that's great but you know what if I like new interests for example",
    "start": "1773519",
    "end": "1781759"
  },
  {
    "text": "then it wouldn't match anymore right well how do I do that well think about the process of it that's an API call",
    "start": "1781759",
    "end": "1787950"
  },
  {
    "text": "against slash interest which calls an effector like interest lambda function which then writes that new interest into",
    "start": "1787950",
    "end": "1794609"
  },
  {
    "text": "a DynamoDB table which then triggers a DynamoDB stream which can call the same",
    "start": "1794609",
    "end": "1800309"
  },
  {
    "text": "find match function and how would such a dynamodb stream lambda function look",
    "start": "1800309",
    "end": "1806609"
  },
  {
    "text": "like well relatively simple you would just say you know for you create a function you say for every new event",
    "start": "1806609",
    "end": "1812549"
  },
  {
    "text": "that comes in you process it and what is that event that racket that comes in that record is that new we call it an",
    "start": "1812549",
    "end": "1819029"
  },
  {
    "text": "image that new image that new item that is in that dynamodb table that somebody just inserted so we find that new image",
    "start": "1819029",
    "end": "1825629"
  },
  {
    "text": "geo hash now we can use that to see if we find people in that location now",
    "start": "1825629",
    "end": "1832399"
  },
  {
    "text": "you're gonna say okay good now we know we have a match what are we gonna do next right",
    "start": "1832399",
    "end": "1837570"
  },
  {
    "text": "so the next thing that we want to do is we want to notify other people right we",
    "start": "1837570",
    "end": "1842909"
  },
  {
    "text": "want to know if I hate there's another person that is in your location that seems to share similar interests right",
    "start": "1842909",
    "end": "1848609"
  },
  {
    "text": "so how are we gonna do that we're gonna use mobile push notification to do that and here for we're going to leverage",
    "start": "1848609",
    "end": "1854729"
  },
  {
    "start": "1851000",
    "end": "1851000"
  },
  {
    "text": "Amazon SNS mobile push notification capabilities Amazon as an aztlán is a notification service that can notify",
    "start": "1854729",
    "end": "1861450"
  },
  {
    "text": "multiple endpoints things like API endpoints email endpoints etc but it also has one capability which is the",
    "start": "1861450",
    "end": "1868200"
  },
  {
    "text": "mobile push capability so it can push push notifications across any kind of",
    "start": "1868200",
    "end": "1874230"
  },
  {
    "text": "platforms Apple's Google's Android iOS by doing China Amazons fire devices",
    "start": "1874230",
    "end": "1880050"
  },
  {
    "text": "Windows devices etc and fan it out fully managed to any kind of scale it also",
    "start": "1880050",
    "end": "1886440"
  },
  {
    "text": "allows you to create multiple topics so you could say for example certain topic I create a topic for Singapore or maybe",
    "start": "1886440",
    "end": "1893220"
  },
  {
    "text": "I create a topic for Kalani and Singapore and then I want to send a message to all those people I just send",
    "start": "1893220",
    "end": "1898860"
  },
  {
    "text": "the message to that one specific topic so let's go back to what we're trying to",
    "start": "1898860",
    "end": "1904020"
  },
  {
    "text": "build right we want to notify the user when we have a match so we have our DynamoDB streams that trigger the find",
    "start": "1904020",
    "end": "1909570"
  },
  {
    "text": "match function if the find match function now so happens to find someone who you match with what are we gonna do",
    "start": "1909570",
    "end": "1916410"
  },
  {
    "text": "well we're gonna use Amazon SNS to send a mobile push notification to the one or",
    "start": "1916410",
    "end": "1921690"
  },
  {
    "text": "two people that you now have matched with and that's again an AWS SDK call that comes from your lambda function now",
    "start": "1921690",
    "end": "1930600"
  },
  {
    "text": "the next thing that you're gonna say is well that's great now we got that working but what if I changed my profile",
    "start": "1930600",
    "end": "1937080"
  },
  {
    "text": "because right now I've said I want to match on 50 kilometres radios now in",
    "start": "1937080",
    "end": "1942150"
  },
  {
    "text": "Singapore that's pretty much all Singapore I guess so what if I want I",
    "start": "1942150",
    "end": "1947730"
  },
  {
    "text": "want to say I only want to match people who live in Chinatown so I'll bring this down to maybe two kilometres right so I",
    "start": "1947730",
    "end": "1952800"
  },
  {
    "text": "changed that setting on my phone locally what will commuters sink what will crew",
    "start": "1952800",
    "end": "1958560"
  },
  {
    "text": "need to do well it's first stored on this disk on this phone but now it gets synchronized to a cloud environment so",
    "start": "1958560",
    "end": "1965580"
  },
  {
    "text": "that we can synchronize it for other devices but that sync can also be a trigger for a lambda function right so",
    "start": "1965580",
    "end": "1973500"
  },
  {
    "start": "1972000",
    "end": "1972000"
  },
  {
    "text": "when I now change that profile setting on my phone locally the moment it syncs it can call a lambda function and that",
    "start": "1973500",
    "end": "1981240"
  },
  {
    "text": "lambda function could now say well I want to know if I should re-evaluate if you found a new match how do I do that",
    "start": "1981240",
    "end": "1987540"
  },
  {
    "text": "well when that cognitive sync trigger comes in I say look at that data set that comes in and look if there was a",
    "start": "1987540",
    "end": "1993930"
  },
  {
    "text": "replace operation because replace means I changed it I slide it to a different",
    "start": "1993930",
    "end": "1999360"
  },
  {
    "text": "kind of interest radius if there's a replace operation I need to reevaluate do we have matches",
    "start": "1999360",
    "end": "2005170"
  },
  {
    "text": "now how are we going to evaluate if we have matches now what you could do is we",
    "start": "2005170",
    "end": "2011140"
  },
  {
    "text": "have this fine match functionality right now what every good developer will do he will go to that find match function he",
    "start": "2011140",
    "end": "2018490"
  },
  {
    "text": "will click on it he will hold his mouse button he will select everything he will say control copy and they will paste it",
    "start": "2018490",
    "end": "2025570"
  },
  {
    "text": "in here all right that's really good developer will do not really so what we rather do is we want to reuse that find",
    "start": "2025570",
    "end": "2033580"
  },
  {
    "text": "match Lander function that we already have to reevaluate in this function that",
    "start": "2033580",
    "end": "2039100"
  },
  {
    "text": "is triggered by the kognito sync trigger so what we can do is we call a lambda function within a lambda function now",
    "start": "2039100",
    "end": "2047230"
  },
  {
    "text": "it's not quite inception yet it's really just asynchronous calls how do we do that well again it's an SDK call the",
    "start": "2047230",
    "end": "2053740"
  },
  {
    "text": "lambda function can call another lambda function just by an SDK call and that's exactly what we're doing here we",
    "start": "2053740",
    "end": "2059500"
  },
  {
    "text": "basically just say hey take the find match function and I give one invocation type here which makes it asynchronous",
    "start": "2059500",
    "end": "2065850"
  },
  {
    "text": "which basically says do it and then shut down this function and I invoke it and",
    "start": "2065850",
    "end": "2071080"
  },
  {
    "text": "that's it now I reuse my code of the find match function which now gets called only when",
    "start": "2071080",
    "end": "2076840"
  },
  {
    "text": "somebody changes this profile all right so re-evaluate my matching func",
    "start": "2076840",
    "end": "2082480"
  },
  {
    "text": "if I matched or if someone when I changed my profile so if you were to",
    "start": "2082480",
    "end": "2087520"
  },
  {
    "text": "look what we have chief we really accomplished all our layers now and the final architecture would then look like",
    "start": "2087520",
    "end": "2093940"
  },
  {
    "start": "2093000",
    "end": "2093000"
  },
  {
    "text": "this where we say we have a mobile application it's using the Mobile SDK to talk to Amazon Cognito authenticate",
    "start": "2093940",
    "end": "2101110"
  },
  {
    "text": "itself now we have the flexibility to talk to other AWS services such as for example the API gateway such as for",
    "start": "2101110",
    "end": "2107410"
  },
  {
    "text": "example Amazon s3 so we can upload our profile picture with the API gateway we can all lambda function to report our",
    "start": "2107410",
    "end": "2114610"
  },
  {
    "text": "location our interests which is stored in a DynamoDB table that dynamodb table has turned about to be streams attached",
    "start": "2114610",
    "end": "2120790"
  },
  {
    "text": "to it which can call it on the function to define if we have found a match if we",
    "start": "2120790",
    "end": "2125920"
  },
  {
    "text": "have found a match we're gonna push send a mobile push notification back to the SNS service back to the mobile",
    "start": "2125920",
    "end": "2132160"
  },
  {
    "text": "application and what we now build is an app that if nobody uses this costs",
    "start": "2132160",
    "end": "2137260"
  },
  {
    "text": "enough but it will grow with your user base and you only get charged for exactly what",
    "start": "2137260",
    "end": "2142690"
  },
  {
    "text": "you use it's designed to be highly available highly resilient scales to any",
    "start": "2142690",
    "end": "2147910"
  },
  {
    "text": "kind of capacity and the cost that you have associated with that with this is only based on the usage pattern that you",
    "start": "2147910",
    "end": "2155350"
  },
  {
    "text": "have of your application which is perfect for applications that have kind of variable workloads all without",
    "start": "2155350",
    "end": "2160780"
  },
  {
    "text": "managing a single server that's all I have a thank you very much all for your attention thank you",
    "start": "2160780",
    "end": "2168270"
  }
]