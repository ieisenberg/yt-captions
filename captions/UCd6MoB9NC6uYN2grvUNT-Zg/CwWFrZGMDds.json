[
  {
    "start": "0",
    "end": "47000"
  },
  {
    "text": "uh today in our session we're going to be talking about uh Amazon theur take a",
    "start": "2399",
    "end": "7680"
  },
  {
    "text": "look under the hood and uh see how we uh uh provide performance and",
    "start": "7680",
    "end": "13400"
  },
  {
    "text": "availability so if you're not familiar with aora what we're trying to provide here is a MySQL compatible relational",
    "start": "13400",
    "end": "20199"
  },
  {
    "text": "database with you know full assd capabilities that gives you the performance and availability of",
    "start": "20199",
    "end": "25560"
  },
  {
    "text": "commercial databases at the Simplicity and cost effectiveness of Open Source",
    "start": "25560",
    "end": "30679"
  },
  {
    "text": "um team's been working hard for quite a while now um we announced it at reinvent",
    "start": "30679",
    "end": "36399"
  },
  {
    "text": "last year for those of you who are here and um we went into production usage",
    "start": "36399",
    "end": "41440"
  },
  {
    "text": "about 10 weeks ago and um you know have gotten good uptake it's already as uh",
    "start": "41440",
    "end": "47160"
  },
  {
    "start": "47000",
    "end": "47000"
  },
  {
    "text": "Andy mentioned earlier today uh Amazon excuse me aws's fastest growing",
    "start": "47160",
    "end": "52800"
  },
  {
    "text": "uh Service uh in the time since launch so um uh and today if you happen to be",
    "start": "52800",
    "end": "59359"
  },
  {
    "text": "uh deploying instances in our Tokyo region uh it's available there as of today and we'll be adding more regions",
    "start": "59359",
    "end": "66600"
  },
  {
    "text": "as time progresses over the coming uh year so here's a slide that we showed",
    "start": "66600",
    "end": "72880"
  },
  {
    "text": "last year Well slightly updated to give slightly better numbers since we've been working and so one of the key things",
    "start": "72880",
    "end": "81159"
  },
  {
    "text": "from a performance perspective is that we say that we can provide 100,000 um",
    "start": "81159",
    "end": "86520"
  },
  {
    "start": "82000",
    "end": "82000"
  },
  {
    "text": "write operations per second 500,000 read operations per second second we're doing a little bit above that in this",
    "start": "86520",
    "end": "92560"
  },
  {
    "text": "screenshot and this is using the MySQL syis bench Benchmark which is sort of the standard in this space uh and that's",
    "start": "92560",
    "end": "98640"
  },
  {
    "text": "on an R38 XL with 32 cores and 245 uh",
    "start": "98640",
    "end": "104320"
  },
  {
    "text": "244 gbits gigabytes of RAM um so you can reproduce this yourself right you can",
    "start": "104320",
    "end": "110560"
  },
  {
    "text": "just uh provision an instance and try it out um some folks have been doing that we actually have a uh uh white paper",
    "start": "110560",
    "end": "118680"
  },
  {
    "text": "that you can use to duplicate these results and it shows some of the things that you should be doing if you want to",
    "start": "118680",
    "end": "125000"
  },
  {
    "text": "get high performance so for example you want to run multiple client machines you want to uh Pro uh set enhanced",
    "start": "125000",
    "end": "131800"
  },
  {
    "text": "networking on them you actually need to tune your Linux settings a little bit in order to get the throughput you need and",
    "start": "131800",
    "end": "138720"
  },
  {
    "text": "um then you obviously want to run in the same uh a as in terms of the clients and the servers just to get the full",
    "start": "138720",
    "end": "144879"
  },
  {
    "text": "throughput um so and you know you should be able to get numbers very similar to the ones I showed up there um",
    "start": "144879",
    "end": "151440"
  },
  {
    "start": "145000",
    "end": "145000"
  },
  {
    "text": "performance is obviously lower as the instance types go down but uh you know as you'd expect",
    "start": "151440",
    "end": "158120"
  },
  {
    "text": "um but the fact is benchmarks don't really matter right I mean if only any",
    "start": "158120",
    "end": "163760"
  },
  {
    "text": "of you were able to see the values in application in your applications running real world workloads that you know are C",
    "start": "163760",
    "end": "171200"
  },
  {
    "start": "167000",
    "end": "167000"
  },
  {
    "text": "that uh the various database vendors show you and their Benchmark things life would be pretty good we wouldn't",
    "start": "171200",
    "end": "176599"
  },
  {
    "text": "actually be in this meeting and looking for a new database so there are a bunch of real world distortions that happen",
    "start": "176599",
    "end": "183360"
  },
  {
    "text": "that are different between the benchmarks we all talk about as a databased vendors and uh what you guys",
    "start": "183360",
    "end": "190080"
  },
  {
    "text": "deal with in the real world so for example requests contend with each other right uh um metadata rarely F fits in",
    "start": "190080",
    "end": "198120"
  },
  {
    "text": "the data dictionary cache so you have to go out to disk data pretty much never fits entirely in Ram you have to go out",
    "start": "198120",
    "end": "204280"
  },
  {
    "text": "to disk there as well and production databases need to run ha right you aren't going to run something on a",
    "start": "204280",
    "end": "210640"
  },
  {
    "text": "single node and ha takes overhead um ha High availability so what I'm going to",
    "start": "210640",
    "end": "216680"
  },
  {
    "text": "show you over the next few slides is how we're doing with respect to some of",
    "start": "216680",
    "end": "221879"
  },
  {
    "text": "these criteria relative to traditional MySQL 56 so here we're looking at uh user",
    "start": "221879",
    "end": "230000"
  },
  {
    "start": "230000",
    "end": "230000"
  },
  {
    "text": "connection scaling going up from 50 to 5,000 using aora as you'd expect we're",
    "start": "230000",
    "end": "235920"
  },
  {
    "text": "seeing increased throughput because you know it Aurora is really very much about trying to generate far higher throughput",
    "start": "235920",
    "end": "242319"
  },
  {
    "text": "this is using the oltp Benchmark of workload from CIS bench which has uh a",
    "start": "242319",
    "end": "248360"
  },
  {
    "text": "fair bit of contention baked in with 250 tables and if you look at RDS MySQL with uh 30,000 Pi Ops which is about as big a",
    "start": "248360",
    "end": "257320"
  },
  {
    "text": "box as I can put together pretty uh it's costs some money to get 30k Pi Ops and",
    "start": "257320",
    "end": "264199"
  },
  {
    "text": "uh you can see that even despite all of that uh available capacity you start to",
    "start": "264199",
    "end": "269400"
  },
  {
    "text": "decline fine and that really has to do with the uh issues within lock sharding",
    "start": "269400",
    "end": "274479"
  },
  {
    "text": "and uh how um the threading model Works inside my SQL and in this case you know",
    "start": "274479",
    "end": "280440"
  },
  {
    "text": "our best number is about eight times faster as the numbers go up let's look at table scaling when you",
    "start": "280440",
    "end": "287320"
  },
  {
    "text": "no longer fit into cach so as you go from 10 tables up to 10,000 tables we",
    "start": "287320",
    "end": "293120"
  },
  {
    "start": "291000",
    "end": "291000"
  },
  {
    "text": "definitely start seeing a little bit of a penalty in Aurora you know going from a peak of 64,000 requests per second on",
    "start": "293120",
    "end": "299400"
  },
  {
    "text": "the right only workload with only 1,000 connections down to uh",
    "start": "299400",
    "end": "304720"
  },
  {
    "text": "54k but if you look at uh my SQL it's actually doing considerably worse about",
    "start": "304720",
    "end": "311039"
  },
  {
    "text": "five times worse as you go from 10 tables out to 10,000 tables and what's interesting and I wanted to call out",
    "start": "311039",
    "end": "316759"
  },
  {
    "text": "here is that this doesn't have anything to do with IO and the numbers whether you're looking at local SSD or you're",
    "start": "316759",
    "end": "323360"
  },
  {
    "text": "looking at a ram dis or you're looking at a fully provisioned Pi Ops instance are really all about the same",
    "start": "323360",
    "end": "330400"
  },
  {
    "text": "right and you know I think that's a testament to all the work that the EBS team has done to ensure that they're",
    "start": "330400",
    "end": "336120"
  },
  {
    "text": "operating uh at pretty high uh throughput compared to local disk but it also shows contention points that are",
    "start": "336120",
    "end": "342520"
  },
  {
    "text": "going on in the database tier let's take a look at uh data that",
    "start": "342520",
    "end": "348039"
  },
  {
    "text": "isn't fitting in Cache so here we're scaling a database size up from 1",
    "start": "348039",
    "end": "353120"
  },
  {
    "start": "349000",
    "end": "349000"
  },
  {
    "text": "Gigabyte which certainly fits in pretty much anybody's cache up to a terabyte and you can see that uh Aurora is",
    "start": "353120",
    "end": "360680"
  },
  {
    "text": "basically running about the same performance as long as we're fitting in cash and then it drops down as you'd",
    "start": "360680",
    "end": "366800"
  },
  {
    "text": "expect once you no longer fit in cash by about 4X um whereas what's interesting",
    "start": "366800",
    "end": "371919"
  },
  {
    "text": "with uh my SQL is is that it actually starts declining uh well ahead of that",
    "start": "371919",
    "end": "377319"
  },
  {
    "text": "point while data is still fully cached and uh in this case if you go out to these you know 100 Gig we're running 67",
    "start": "377319",
    "end": "385840"
  },
  {
    "text": "times faster which is a crazy number right and in fact was so crazy for me I",
    "start": "385840",
    "end": "391360"
  },
  {
    "text": "told my team like look you guys have obviously learned how to optimize suspense right only workload let's go",
    "start": "391360",
    "end": "397120"
  },
  {
    "text": "run something else and so they went out and run Cloud Harmony's tpcc like VCH workload which is you know very similar",
    "start": "397120",
    "end": "403800"
  },
  {
    "text": "to what the TPC uh Council runs and what you numbers you can get from other things and here it's running 136 times",
    "start": "403800",
    "end": "410400"
  },
  {
    "text": "faster when it doesn't fit in um memory uh memory anymore and these are you on",
    "start": "410400",
    "end": "415639"
  },
  {
    "text": "the right hand side is transactions on the left hand side is statements because those are the standard metrics for these two benchmarks for your comparison",
    "start": "415639",
    "end": "424240"
  },
  {
    "text": "purposes um if you want to run the ha or or high throughput uh read queries",
    "start": "424240",
    "end": "429840"
  },
  {
    "start": "428000",
    "end": "428000"
  },
  {
    "text": "you're probably running read replicas um and read replicas in my sqls start to",
    "start": "429840",
    "end": "435560"
  },
  {
    "text": "degrade as you're throw a lot of updates per second uh through the system we can talk about how uh why that's the case in",
    "start": "435560",
    "end": "443280"
  },
  {
    "text": "the roar we actually use the read replicas as failover Target so the replicas also provide you with ha uh",
    "start": "443280",
    "end": "449240"
  },
  {
    "text": "fail over capabilities and you can see that going from 1,000 updates per second up to about 10,000 we're relatively",
    "start": "449240",
    "end": "455840"
  },
  {
    "text": "stable at about uh 5 milliseconds uh of replica lag whereas um my SQL is going",
    "start": "455840",
    "end": "464599"
  },
  {
    "text": "from a a few milliseconds out to over 300 seconds we actually didn't go higher",
    "start": "464599",
    "end": "470000"
  },
  {
    "text": "on that because it wouldn't you know it just went basically infinitely bad at that",
    "start": "470000",
    "end": "475479"
  },
  {
    "text": "point so so the for the bulk of this",
    "start": "475479",
    "end": "481240"
  },
  {
    "text": "talk what I really want to talk about is how right because you know we can talk",
    "start": "481240",
    "end": "487639"
  },
  {
    "text": "about numbers all you want but unless you build confidence in what we're doing and how we're approaching it it's fairly",
    "start": "487639",
    "end": "494080"
  },
  {
    "text": "difficult to transition the database right and so the core of this really comes down to like improving your",
    "start": "494080",
    "end": "500080"
  },
  {
    "text": "algorithms charting your locks removing contention so let's say you do all of that and really anybody can go do all of",
    "start": "500080",
    "end": "506560"
  },
  {
    "text": "that but you know that's not architectural work once you're done with that you're to the point where you're",
    "start": "506560",
    "end": "513440"
  },
  {
    "start": "510000",
    "end": "510000"
  },
  {
    "text": "hitting I/O right databases well-designed databases are all about IO once you do network",
    "start": "513440",
    "end": "520719"
  },
  {
    "text": "attached storage it's all about packets per second you can run about somewhere between one and two million packets per",
    "start": "520719",
    "end": "527600"
  },
  {
    "text": "second on you know a high-end Hardware like ec2 enhanced networking and uh you",
    "start": "527600",
    "end": "534000"
  },
  {
    "text": "know but that's still a pretty constrained number and um the other thing that's pretty important is is that",
    "start": "534000",
    "end": "539920"
  },
  {
    "text": "if you're trying to operate at high throughput you can't afford system calls you can't afford contact switches so a",
    "start": "539920",
    "end": "545959"
  },
  {
    "text": "lot of our things are work in this that is architectural is about doing fewer iOS minimizing Network packets and",
    "start": "545959",
    "end": "552640"
  },
  {
    "text": "moving towards processing asynchronously let's compare and",
    "start": "552640",
    "end": "559320"
  },
  {
    "text": "contrast so here's iot trffic in RDS my sqil with a standby instance so you",
    "start": "559320",
    "end": "566560"
  },
  {
    "text": "issue a right it goes to EBS EBS is going to issue it to a mirror in",
    "start": "566560",
    "end": "571600"
  },
  {
    "text": "asynchronously in parallel then you know we act back once both rights have",
    "start": "571600",
    "end": "577079"
  },
  {
    "text": "happened then we synchronously are going to go over uh to another a to go and issue that right using drbd that's the",
    "start": "577079",
    "end": "584880"
  },
  {
    "text": "what the technology we use underneath our multi-az Tech then you go to the standby it has to issue the right it",
    "start": "584880",
    "end": "590760"
  },
  {
    "text": "propagates and comes back and then that acts back again and so the interesting things I'll uh point",
    "start": "590760",
    "end": "598160"
  },
  {
    "text": "out here is is that steps 1 3 and five are sequential and they're synchronous and",
    "start": "598160",
    "end": "604800"
  },
  {
    "text": "that what that does is is that if there's any network weather going on or instance weather going on it's going to",
    "start": "604800",
    "end": "610360"
  },
  {
    "text": "amplify both the latency and the Jitter right minimally you're going to be looking at 3x and possibly much more",
    "start": "610360",
    "end": "616640"
  },
  {
    "text": "than that and the other thing that you see in this slide is is that there's a lot of different types of write",
    "start": "616640",
    "end": "623000"
  },
  {
    "text": "operations right there's log there's bin log there's data there's a double right to avoid uh um the uh fact that you're",
    "start": "623000",
    "end": "631680"
  },
  {
    "text": "doing a destructive right and you can't afford a torn right that makes sense and then there's also of course the frm",
    "start": "631680",
    "end": "637279"
  },
  {
    "text": "files for metadata and the thing that's particularly difficult in this is is",
    "start": "637279",
    "end": "642639"
  },
  {
    "text": "that the data blocks are a good deal larger than the log right it's about 40x",
    "start": "642639",
    "end": "648120"
  },
  {
    "text": "and so you're writing those twice so that's 80x so that's a big deal so but",
    "start": "648120",
    "end": "653360"
  },
  {
    "text": "of course we you know like any solid database my SQL is going to be doing a lot of batching under the covers and and",
    "start": "653360",
    "end": "659480"
  },
  {
    "text": "so forth to try to mitigate those that overhead so what we did here is is that we took the single a instance and did",
    "start": "659480",
    "end": "667160"
  },
  {
    "text": "100 GB data set and ran a 30 minute uh suspense righton workload and over that",
    "start": "667160",
    "end": "673959"
  },
  {
    "text": "time we're able to run about 780k transactions and um over that we",
    "start": "673959",
    "end": "681399"
  },
  {
    "text": "basically are doing a little over 7 7.4 million ios's for those million",
    "start": "681399",
    "end": "686720"
  },
  {
    "text": "transactions and that's pretty good that's actually the work that the primary instance is seeing you know just",
    "start": "686720",
    "end": "693720"
  },
  {
    "text": "step one so you know step two 3 4 five is not included in that uh 7.4 million",
    "start": "693720",
    "end": "700240"
  },
  {
    "text": "because really you want to focus on what the network throughput that you're going to see out of that one instance and what",
    "start": "700240",
    "end": "705800"
  },
  {
    "text": "that what my squel is seeing all the rest of that work is you know our work behind the scenes and so that's",
    "start": "705800",
    "end": "711000"
  },
  {
    "text": "averaging 7.4 iOS per transaction right let's compare it to",
    "start": "711000",
    "end": "717240"
  },
  {
    "text": "Aurora so in Aurora what we're doing is is that we're only shipping log",
    "start": "717240",
    "end": "723320"
  },
  {
    "start": "718000",
    "end": "718000"
  },
  {
    "text": "records and so what the operations that exist is that we see a bunch of log records uh come to us we Box Car them",
    "start": "723320",
    "end": "731000"
  },
  {
    "text": "together to generate a workload that's worth shipping over we actually are segmenting uh the database volume across",
    "start": "731000",
    "end": "739639"
  },
  {
    "text": "many many uh segments across many many discs across many many storage not it's",
    "start": "739639",
    "end": "744839"
  },
  {
    "text": "you know something close to the world's biggest storage area network and uh so we have to do a shuffle to get them over",
    "start": "744839",
    "end": "751240"
  },
  {
    "text": "there and then finally we have to go and say like okay how much how do we generate enough traffic to go out to",
    "start": "751240",
    "end": "757000"
  },
  {
    "text": "that an individual Storage Note so it's fairly complex there's a lot of work going on behind the scenes interestingly",
    "start": "757000",
    "end": "764519"
  },
  {
    "text": "here we're only writing log records as I mentioned all of the streps are asynchronous there are no data block WR",
    "start": "764519",
    "end": "771480"
  },
  {
    "text": "so for example it's very typically in a database to do a checkpoint of your data",
    "start": "771480",
    "end": "777160"
  },
  {
    "text": "every 5 minutes or so to ensure that crash recovery is contained and it's also of course necessary that if you're",
    "start": "777160",
    "end": "783639"
  },
  {
    "text": "doing a replacement that of your cach such that I have to bring a block in if",
    "start": "783639",
    "end": "788760"
  },
  {
    "text": "I have to I'm if the block I'm replacing is dirty I have to write it out and so we don't have to do any of that either",
    "start": "788760",
    "end": "795720"
  },
  {
    "text": "and so we do see an amplification because we're doing six rights to you know just to get sufficient durability",
    "start": "795720",
    "end": "802320"
  },
  {
    "text": "so there six times more log rids but nine times less Network traffic because it's only uh the log that's going going",
    "start": "802320",
    "end": "809360"
  },
  {
    "text": "across and the good news is is that since it's a quorum based model where we only require four out of those six",
    "start": "809360",
    "end": "816279"
  },
  {
    "text": "rights to come back um we actually are much more tolerant of network and",
    "start": "816279",
    "end": "822760"
  },
  {
    "text": "storage node Jitter as well as disruptions of service whether you know nodes go down or you know azs go down or",
    "start": "822760",
    "end": "831199"
  },
  {
    "text": "whatever and so you know netting it out what that means is that we're over that",
    "start": "831199",
    "end": "837240"
  },
  {
    "text": "same 30 minutes we're running 27 27 million transactions which is 35 times",
    "start": "837240",
    "end": "843040"
  },
  {
    "text": "more than the prior slide and we're running just under a million iOS per",
    "start": "843040",
    "end": "848480"
  },
  {
    "text": "million transactions per second including that 6X amplification and so that's seven and 7.7 times less and so a",
    "start": "848480",
    "end": "857519"
  },
  {
    "text": "good deal less and so you know that kind of starts to show why we're running better it's basically we're doing less work so it takes less time right simple",
    "start": "857519",
    "end": "863880"
  },
  {
    "text": "as that so where did all those iOS go I mean they didn't just disappear right",
    "start": "863880",
    "end": "869120"
  },
  {
    "text": "and so what's happening is is that on the back end what Aurora is doing is is that",
    "start": "869120",
    "end": "875000"
  },
  {
    "text": "it took that basic large monolithic database engine and it pushed that bottom quarter of it where it's doing",
    "start": "875000",
    "end": "881360"
  },
  {
    "text": "log processing and so on and storage out into a uh multi-tenant scaleout uh log",
    "start": "881360",
    "end": "888199"
  },
  {
    "text": "structured storage node system and so we'll get a set of you know a box carve",
    "start": "888199",
    "end": "895320"
  },
  {
    "text": "log records at the storage note we take them we add them to an in memory queue we go and add it persist those into an",
    "start": "895320",
    "end": "902480"
  },
  {
    "text": "update queue and act back so once it's persistent we can act right that's the latency sensitive time then everything",
    "start": "902480",
    "end": "909759"
  },
  {
    "text": "else in this process is going to be asynchronous so we then reorganize that",
    "start": "909759",
    "end": "914839"
  },
  {
    "text": "sorting grouping Etc U because you know things can show up out of order and so",
    "start": "914839",
    "end": "920240"
  },
  {
    "text": "forth so we have to figure all of that out at some point you have to say like okay well maybe I missed an IO or two",
    "start": "920240",
    "end": "926240"
  },
  {
    "text": "along the way because Network weather or whatever and so we have a peer-to-peer gossip protocol in the background so",
    "start": "926240",
    "end": "932800"
  },
  {
    "text": "that the individual uh storage nodes can talk to each other find out which one is missing what writes and you know fill in",
    "start": "932800",
    "end": "939399"
  },
  {
    "text": "the holes right and so then after that step we basically can uh start to coales",
    "start": "939399",
    "end": "947480"
  },
  {
    "text": "these log records into Data blocks and that's an interesting thing so the the",
    "start": "947480",
    "end": "952560"
  },
  {
    "text": "big U negative around log structured storage systems in the fact in the past",
    "start": "952560",
    "end": "957959"
  },
  {
    "text": "was log amplif ification write amplification because what You' do is you'd write a log record and then sometime later you have to go and Co L",
    "start": "957959",
    "end": "965600"
  },
  {
    "text": "those together and then sometime time later you have to go and remove you know garbage collect all these things right",
    "start": "965600",
    "end": "971240"
  },
  {
    "text": "and so that didn't really work out uh too well even though you got this nice linear sequential pattern uh as you'd",
    "start": "971240",
    "end": "978079"
  },
  {
    "text": "like to have from a logging perspective the nice thing in Aurora is is that we're leveraging that cols to do exactly",
    "start": "978079",
    "end": "985880"
  },
  {
    "text": "what the database would have done in terms of applying log records to to generate data blocks that's pretty cool",
    "start": "985880",
    "end": "991959"
  },
  {
    "text": "and um then once we have the data blocks and the uh hot log setup we can go and",
    "start": "991959",
    "end": "998160"
  },
  {
    "start": "996000",
    "end": "996000"
  },
  {
    "text": "push it out to S3 pushing out to S3 is continuous it's automatic it's uh",
    "start": "998160",
    "end": "1004000"
  },
  {
    "text": "incremental we're always doing it we're so we really don't consider our data to be fully durable until it's in S3 which",
    "start": "1004000",
    "end": "1012519"
  },
  {
    "text": "which is 119 of durability um that's a lot and um then",
    "start": "1012519",
    "end": "1018440"
  },
  {
    "text": "at that Point once it's an S3 we can start to garbage collect old versions and then we're also continuously in the",
    "start": "1018440",
    "end": "1024400"
  },
  {
    "text": "background scrubbing the dis so we go and read each data block we go and compare to its uh CRC uh cyclic Rundy",
    "start": "1024400",
    "end": "1033600"
  },
  {
    "text": "check and then we checked for corruption because just because you wrote it correctly doesn't mean it stays correct",
    "start": "1033600",
    "end": "1039079"
  },
  {
    "text": "right uh disk storage decays and uh so that's the basic uh",
    "start": "1039079",
    "end": "1044400"
  },
  {
    "text": "thing uh approach that we're taking on the storage node and so let's look at uh the",
    "start": "1044400",
    "end": "1050559"
  },
  {
    "text": "differences here so every single step here is asynchronous and more importantly only the first two steps are",
    "start": "1050559",
    "end": "1058120"
  },
  {
    "text": "inside the foreground latency path right which consists of one right of a log record and the input queue that's coming",
    "start": "1058120",
    "end": "1065559"
  },
  {
    "text": "into the in the individual Storage Note is seeing just under 50 times less",
    "start": "1065559",
    "end": "1072480"
  },
  {
    "text": "traffic than the uh you know a storage node that's just acting as a dumb disc",
    "start": "1072480",
    "end": "1079200"
  },
  {
    "text": "because it's all it's seeing is log records right it's this is the unamplified view because you know the",
    "start": "1079200",
    "end": "1084360"
  },
  {
    "text": "storage nodes are there six uh X of them across any given right but any given storage not is only seeing one",
    "start": "1084360",
    "end": "1091080"
  },
  {
    "text": "right and uh you know we all obviously favor the latency sensitive operation of",
    "start": "1091080",
    "end": "1096400"
  },
  {
    "text": "getting that redo record out to dis and coming and acting back that's latency",
    "start": "1096400",
    "end": "1101480"
  },
  {
    "text": "sensitive all these other operations they can run uh really whenever we have time the and we have a lot of buffering",
    "start": "1101480",
    "end": "1108400"
  },
  {
    "text": "available here because it's all happening on disk and you know so trading off um latency for disk space is",
    "start": "1108400",
    "end": "1117600"
  },
  {
    "text": "a tradeit any of us would make any day of the week right and so and you know all workloads end up",
    "start": "1117600",
    "end": "1124840"
  },
  {
    "text": "with spikes right particularly multi tenant uh storage systems you're going to see you know uh times that it's high",
    "start": "1124840",
    "end": "1132039"
  },
  {
    "text": "time that it's low so that gives a lot of uh places for us to go and do this background processing so that's the",
    "start": "1132039",
    "end": "1139240"
  },
  {
    "text": "basic storage node uh view of the world running asynchronously also gives us some other",
    "start": "1139240",
    "end": "1146720"
  },
  {
    "text": "benefits let's look at commit so obviously I can't act something back to",
    "start": "1146720",
    "end": "1152240"
  },
  {
    "start": "1151000",
    "end": "1151000"
  },
  {
    "text": "the end user until the entire transaction redo records everything has",
    "start": "1152240",
    "end": "1158159"
  },
  {
    "text": "been committed to dis right so the traditional approach to that is is that",
    "start": "1158159",
    "end": "1163720"
  },
  {
    "text": "you maintain the uh buffer of log records to write out to disk you know we discovered maybe 40 years ago that you",
    "start": "1163720",
    "end": "1170039"
  },
  {
    "text": "can't actually do an IO per commit instead what we have to do is um do a",
    "start": "1170039",
    "end": "1175240"
  },
  {
    "text": "group commit and so um you basically issue a right when the buffer is full or",
    "start": "1175240",
    "end": "1181280"
  },
  {
    "text": "you time out saying like oh you know enough time has passed i' better go and send us out but what that means is is",
    "start": "1181280",
    "end": "1188640"
  },
  {
    "text": "that the first writer suffers right he gets a latency penalty because if enough",
    "start": "1188640",
    "end": "1194640"
  },
  {
    "text": "work didn't come in he's going to have to go and uh he's just is waiting for no",
    "start": "1194640",
    "end": "1200080"
  },
  {
    "text": "good reason so let's compare that to Aurora what we are able to do because",
    "start": "1200080",
    "end": "1205720"
  },
  {
    "text": "we're not just writing out to Linux but we're writing to our own codebase going out to its own network you know we're",
    "start": "1205720",
    "end": "1211799"
  },
  {
    "text": "basically managing all of that in user space um we start the io request with",
    "start": "1211799",
    "end": "1217400"
  },
  {
    "text": "the first right and then we basically continue filling that buffer until another",
    "start": "1217400",
    "end": "1223520"
  },
  {
    "text": "background thread picks up that right and sends it off to our storage notes and so that means that there's no first",
    "start": "1223520",
    "end": "1228720"
  },
  {
    "text": "right penalty and the individual right is marked as durable once we see four out",
    "start": "1228720",
    "end": "1234679"
  },
  {
    "text": "of those sto six storage nodes act back right we don't have to wait for any outliers and then once we say that we've",
    "start": "1234679",
    "end": "1242000"
  },
  {
    "text": "filled in you know we've seen all of the rights complete up to some particular point in time uh in this slide it's LSN",
    "start": "1242000",
    "end": "1249760"
  },
  {
    "text": "47 that lsn's for log sequence number what we can say is is that okay so who",
    "start": "1249760",
    "end": "1256720"
  },
  {
    "text": "all is waiting for LSN 47 who had tried to do a commit at some number less than",
    "start": "1256720",
    "end": "1261880"
  },
  {
    "text": "LSN 47 and we act back to all of them and so and that's the point where we advance the database volume durable",
    "start": "1261880",
    "end": "1268840"
  },
  {
    "text": "point and so it's a basically an from the external world's perspective it's",
    "start": "1268840",
    "end": "1274919"
  },
  {
    "text": "still of course synchronous from an internal perspective it's fully asynchronous and that just means that",
    "start": "1274919",
    "end": "1280279"
  },
  {
    "text": "people can operate more quickly in part du uh because of that we",
    "start": "1280279",
    "end": "1287000"
  },
  {
    "text": "also rewrote the threading pool uh inside MySQL if you're if you know",
    "start": "1287000",
    "end": "1292200"
  },
  {
    "text": "standard MySQL there's one thread per connection it uh really limits you in",
    "start": "1292200",
    "end": "1297799"
  },
  {
    "text": "terms of how how many connections you can support and you know it simply doesn't",
    "start": "1297799",
    "end": "1303840"
  },
  {
    "text": "scale with the connection count I mean you can run a lot of threads it's just uh memory in some sense but what you end",
    "start": "1303840",
    "end": "1308960"
  },
  {
    "text": "up with is a ton of context switches and you know each context switch takes a fair amount of time to process so uh my",
    "start": "1308960",
    "end": "1317000"
  },
  {
    "start": "1316000",
    "end": "1316000"
  },
  {
    "text": "SQL uh Enterprise Edition um actually uh addresses this to a degree where they introduce this concept",
    "start": "1317000",
    "end": "1324200"
  },
  {
    "text": "of thread thread pool with thread groups and they basically statically part uh allocate uh connections user connections",
    "start": "1324200",
    "end": "1332279"
  },
  {
    "text": "to thread groups and they try to run one uh connection per thread group and if",
    "start": "1332279",
    "end": "1338400"
  },
  {
    "text": "they find out that uh some somebody has uh is taking too long then they'll allocate another thread and issue it as",
    "start": "1338400",
    "end": "1344480"
  },
  {
    "text": "well and what you end up with is that there's this thing called a a stall threshold where it'll go and say",
    "start": "1344480",
    "end": "1351960"
  },
  {
    "text": "well go and figure out when you decide uh that something is taking too long and you know and that's the point where you",
    "start": "1351960",
    "end": "1358640"
  },
  {
    "text": "have to if you set it too low then you end up with lots of threads if you set it too high then you're just wasting time because you know somebody might",
    "start": "1358640",
    "end": "1365039"
  },
  {
    "text": "have gone out to lunch leaving a transaction open with some locks they might be running some long operation you",
    "start": "1365039",
    "end": "1370240"
  },
  {
    "text": "know life can get hard right so what we've done is we implemented a different",
    "start": "1370240",
    "end": "1375960"
  },
  {
    "text": "threadpool model we have EOL pole at the front all of the threads listen on top of eole um and then we have a latch free",
    "start": "1375960",
    "end": "1383640"
  },
  {
    "text": "task que on the back end where we have a bunch of threads listening there if they're not already doing work uh we",
    "start": "1383640",
    "end": "1389200"
  },
  {
    "text": "dynamically size it so if there aren't enough threads ready to take on work",
    "start": "1389200",
    "end": "1394320"
  },
  {
    "text": "because let's say all of them are sitting waiting for some lock you know you actually have to add a thread",
    "start": "1394320",
    "end": "1400120"
  },
  {
    "text": "because the guy who's going to go and do the commit that releases all of those uh he is you know you aren't going to be",
    "start": "1400120",
    "end": "1405279"
  },
  {
    "text": "able to find him unless you have a thread waiting to set up uh you know to hear the eole so we dynamically size up",
    "start": "1405279",
    "end": "1411960"
  },
  {
    "text": "and down so you know you it deals with uh weather in your application where you know like you have spikes there and so",
    "start": "1411960",
    "end": "1417960"
  },
  {
    "text": "forth and you know we're able to gracefully handle uh you know well over 5,000 concurrent client sessions um an",
    "start": "1417960",
    "end": "1425760"
  },
  {
    "text": "interesting aspect of this is is that we're able to make the threading model",
    "start": "1425760",
    "end": "1431960"
  },
  {
    "text": "um asynchronous for commits because what we're able to do is is that in our PRI",
    "start": "1431960",
    "end": "1437240"
  },
  {
    "text": "in my prior slide I talked about how you know we can asynchronously decide which threads are ready for a commit so I can",
    "start": "1437240",
    "end": "1443760"
  },
  {
    "text": "go and say I can free up a thread to do useful work if all it were doing was waiting for a commit and say that when",
    "start": "1443760",
    "end": "1450400"
  },
  {
    "text": "it's Advanced let me just keep a thread available to go and act those commits back to other people and so you remove",
    "start": "1450400",
    "end": "1456840"
  },
  {
    "text": "that latency so at this point the latency that exists in uh that's the",
    "start": "1456840",
    "end": "1461880"
  },
  {
    "text": "still synchronous latency is either you're waiting for a lock you know a user uh operation",
    "start": "1461880",
    "end": "1468919"
  },
  {
    "text": "um or you have to wait for a read iio off of the disc and so you know those",
    "start": "1468919",
    "end": "1474360"
  },
  {
    "text": "are things that we actually working on to try to eventually make those also um",
    "start": "1474360",
    "end": "1481919"
  },
  {
    "text": "asynchronous let's uh look at IO traffic so that's the last point of comparison really in uh um how the system works so",
    "start": "1485159",
    "end": "1494399"
  },
  {
    "text": "if you look at traditional MySQL what we're what we do is we ship SQL St stat off to the replica right what's um",
    "start": "1494399",
    "end": "1501919"
  },
  {
    "start": "1499000",
    "end": "1499000"
  },
  {
    "text": "unfortunate about that is is that that means that each replica is seeing the",
    "start": "1501919",
    "end": "1507440"
  },
  {
    "text": "same right load as the master instance and so you know even though you're adding capacity to do reads",
    "start": "1507440",
    "end": "1514640"
  },
  {
    "text": "you're only if you're doing 70% write workload on the master node you're only going to get 30% uh read workload",
    "start": "1514640",
    "end": "1522080"
  },
  {
    "text": "available to you on any of your uh replica instances so that's pretty unfortunate right and then of course",
    "start": "1522080",
    "end": "1528399"
  },
  {
    "text": "your data storage is duplicated and all that the other thing that is problematic is that since these are SQL statements",
    "start": "1528399",
    "end": "1535880"
  },
  {
    "text": "you can actually end up with drift uh so where it's you know since I mean there's a a lot of good stuff about logical data",
    "start": "1535880",
    "end": "1542960"
  },
  {
    "text": "replication but you aren't guaranteeing that what happens on one side is the same as what's happening on the other I",
    "start": "1542960",
    "end": "1549320"
  },
  {
    "text": "mean you can guarantee it if you're running in fully synchronous uh you know uh mode with uh you know full",
    "start": "1549320",
    "end": "1556200"
  },
  {
    "text": "serializability but you know none of us do that it just is too expensive on the uh Master note and the other thing that",
    "start": "1556200",
    "end": "1563520"
  },
  {
    "text": "you'll find is that you actually need to go rather than statement level replication to law or to row level",
    "start": "1563520",
    "end": "1570200"
  },
  {
    "text": "replication to deal with things like Phantoms and so forth and that's also pretty difficult because it greatly",
    "start": "1570200",
    "end": "1576720"
  },
  {
    "text": "expands the number of um bin log operations that need to be generated and",
    "start": "1576720",
    "end": "1582120"
  },
  {
    "text": "the SQL statements that need to be applied on the replica they it turns into a lot more than our uh running at",
    "start": "1582120",
    "end": "1590000"
  },
  {
    "text": "the master node in fact and so you know Again difficult and of course the storage is you know a good deal more",
    "start": "1590000",
    "end": "1596320"
  },
  {
    "text": "expensive so what we do instead is is that we run the replica on the same",
    "start": "1596320",
    "end": "1601399"
  },
  {
    "text": "underlying storage as the masteron note so and you know it's multi-az",
    "start": "1601399",
    "end": "1607559"
  },
  {
    "text": "storage so you can run on any a inside that same uh region uh just like we send redo records",
    "start": "1607559",
    "end": "1614559"
  },
  {
    "text": "to the uh storage nodes we send those same redo records to the um read replica and the read",
    "start": "1614559",
    "end": "1622360"
  },
  {
    "text": "replica either is responsible for basically saying hey do I have this uh",
    "start": "1622360",
    "end": "1627440"
  },
  {
    "text": "data Block in Cache if so let me go and apply this change if not I can just",
    "start": "1627440",
    "end": "1632720"
  },
  {
    "text": "throw it away because I can get that data off of the shared storage um and we also maintain this uh",
    "start": "1632720",
    "end": "1640760"
  },
  {
    "text": "read view concept as you if you're familiar with my SQL it has this notion of what's a consistency point that I'm",
    "start": "1640760",
    "end": "1646320"
  },
  {
    "text": "allowed to read from and so we can basically advance that when we know that we've seen every",
    "start": "1646320",
    "end": "1652679"
  },
  {
    "text": "commit uh because again just like uh our underlying storage we're getting these",
    "start": "1652679",
    "end": "1657960"
  },
  {
    "text": "requests out of order and so we basically need to say when can I apply them and when can I say that okay this",
    "start": "1657960",
    "end": "1663919"
  },
  {
    "text": "is a point when I can advance when uh I I'm allowed to look at the next piece of next value so that I'm in the same",
    "start": "1663919",
    "end": "1670200"
  },
  {
    "text": "consistent Point as uh the uh Master node and what that basically has done is",
    "start": "1670200",
    "end": "1676559"
  },
  {
    "text": "gives us uh you know single digit millisecond uh uh read replica lag and U",
    "start": "1676559",
    "end": "1684320"
  },
  {
    "text": "the even uh cooler thing is is that if the replica fails and comes back up or",
    "start": "1684320",
    "end": "1689440"
  },
  {
    "text": "if the master node fails and I need to promote the read replica I actually don't lose any uh of the committed",
    "start": "1689440",
    "end": "1696600"
  },
  {
    "text": "requests because they're all sitting there in the underlying",
    "start": "1696600",
    "end": "1701080"
  },
  {
    "text": "storage um so we've been fairly busy over the last few months you know we're performance is an important part of the",
    "start": "1703519",
    "end": "1709960"
  },
  {
    "text": "Aurora value proposition so here's a bunch of things that we've been do working on um I think the thing that",
    "start": "1709960",
    "end": "1718360"
  },
  {
    "text": "I'll call the things that are in Gray are things that are going that are going to release in the next week or uh over",
    "start": "1718360",
    "end": "1724559"
  },
  {
    "start": "1720000",
    "end": "1720000"
  },
  {
    "text": "the course of this month in our next couple of patches so we've been uh working pretty hard I think the thing",
    "start": "1724559",
    "end": "1731399"
  },
  {
    "text": "that uh we're really excited about is that we're now getting customer feedback on areas where we haven't s ort of where",
    "start": "1731399",
    "end": "1739519"
  },
  {
    "text": "you know provided the same performance benefits so for example in the read ahead case we're actually running a",
    "start": "1739519",
    "end": "1746440"
  },
  {
    "text": "little bit slower than MySQL because underneath the covers the Linux system",
    "start": "1746440",
    "end": "1751760"
  },
  {
    "text": "was uh in the MySQL case was actually doing read ahead on its behalf and we",
    "start": "1751760",
    "end": "1757760"
  },
  {
    "text": "didn't get that Advantage we hadn't written that code and so now we've implemented something similar we're running a couple of times faster on the",
    "start": "1757760",
    "end": "1764000"
  },
  {
    "text": "reead case and so those are all things where we just uh really welcome the",
    "start": "1764000",
    "end": "1769120"
  },
  {
    "text": "feedback uh you know you can contact any of us anytime at Aurora DPM at",
    "start": "1769120",
    "end": "1774679"
  },
  {
    "text": "amazon.com and you know databases have a absolutely vast surface area so we are",
    "start": "1774679",
    "end": "1781200"
  },
  {
    "text": "looking for your input on where we need to improve so with that let me cut over to",
    "start": "1781200",
    "end": "1788760"
  },
  {
    "text": "availability because after all performance only matters if your datab bases up right I keep reminding my team",
    "start": "1788760",
    "end": "1794559"
  },
  {
    "text": "of that all the time so we do a lot of stuff here so",
    "start": "1794559",
    "end": "1800679"
  },
  {
    "text": "we've talked a little bit about how we use a Corum system for reads and wrs which makes it latency tolerant more",
    "start": "1800679",
    "end": "1807919"
  },
  {
    "text": "importantly it means that we can drop a node we can lose a node we can lose a disc and that's fine because it'll still",
    "start": "1807919",
    "end": "1815039"
  },
  {
    "text": "run you can lose an A and it'll still run and and that's true both if it's a",
    "start": "1815039",
    "end": "1820559"
  },
  {
    "text": "durability loss or it's just an intermittent blip we do a gossip protocol to fill in the holes in",
    "start": "1820559",
    "end": "1826960"
  },
  {
    "start": "1826000",
    "end": "1826000"
  },
  {
    "text": "replication CL we lose rights or there's some Network weather that is uh causing",
    "start": "1826960",
    "end": "1832279"
  },
  {
    "text": "us issues we continuously back up to S3 and that doesn't have a latency pen",
    "start": "1832279",
    "end": "1838360"
  },
  {
    "text": "penalty with it the way it would if you were taking a snapshot right it's uh something that's just part of the basic",
    "start": "1838360",
    "end": "1844279"
  },
  {
    "text": "system it's always doing that underneath the covers uh you know the numbers we gave for 100k 500k or uh you know",
    "start": "1844279",
    "end": "1852159"
  },
  {
    "text": "include all of that we continuously scrub the data blocks so that you know that uh you know if you got six copies",
    "start": "1852159",
    "end": "1858840"
  },
  {
    "text": "laid down on disk you keep six copies laid down on disk um and then some of",
    "start": "1858840",
    "end": "1864559"
  },
  {
    "text": "the Advan so those are things that any real Enterprise storage system is going to provide you if you know you go and",
    "start": "1864559",
    "end": "1870320"
  },
  {
    "text": "buy a box from net app or EMC what's becomes useful here is is",
    "start": "1870320",
    "end": "1876480"
  },
  {
    "text": "that this is part of a uh service offering right so that means that we",
    "start": "1876480",
    "end": "1881600"
  },
  {
    "text": "have a uh continuous monitoring going on in the control plane unlike you guys",
    "start": "1881600",
    "end": "1886960"
  },
  {
    "text": "where you have to monit things yourselves and so we can automate the process of detecting bad nodes detecting",
    "start": "1886960",
    "end": "1893880"
  },
  {
    "text": "bad discs we can replace them from other things in the fleet rather than you're having to go and procure new uh capacity",
    "start": "1893880",
    "end": "1902840"
  },
  {
    "text": "and uh we'll just replace it and we'll repair it now part of the key",
    "start": "1902840",
    "end": "1908279"
  },
  {
    "text": "proposition here is I talked about how segments we broke up the volume into",
    "start": "1908279",
    "end": "1913720"
  },
  {
    "text": "many small segments so we you we break up at a unit of around 10 gigabytes of",
    "start": "1913720",
    "end": "1919240"
  },
  {
    "text": "logical space and the reason we do that is is that if you lose one of these segments it doesn't take that long to",
    "start": "1919240",
    "end": "1925880"
  },
  {
    "text": "repair itself right uh it's basic it's a 10 gig Network on the back plane so you",
    "start": "1925880",
    "end": "1931840"
  },
  {
    "text": "I mean you can do the math on how long it takes to uh you know go and repair a 10 gigabyte segment um that's gone bad",
    "start": "1931840",
    "end": "1939440"
  },
  {
    "text": "and um what's neat about that is is that if I actually get end up with a storage",
    "start": "1939440",
    "end": "1944639"
  },
  {
    "text": "node or a disc that's getting uh localized uh hot spots on it because multiple customers have landed on it and",
    "start": "1944639",
    "end": "1951240"
  },
  {
    "text": "it's hot I can actually just kill one of those segments because it doesn't take that long to move it somewhere else and",
    "start": "1951240",
    "end": "1957000"
  },
  {
    "text": "so you know it's helpful to us both from um a uh the perspective of hotspot",
    "start": "1957000",
    "end": "1963120"
  },
  {
    "text": "management and it's uh helpful just from a durability perspective from the",
    "start": "1963120",
    "end": "1968240"
  },
  {
    "text": "perspective of repairing things because basically um I need to lose in order to",
    "start": "1968240",
    "end": "1974760"
  },
  {
    "text": "lose my four out of six quum I need to get three separate fit failures over the time it takes me to repair one right and",
    "start": "1974760",
    "end": "1982200"
  },
  {
    "text": "so that's that's a pretty unfortunate day if that happens and um another neat thing here",
    "start": "1982200",
    "end": "1988480"
  },
  {
    "text": "is is that uh you know if you uh like me geek out on you know core membership distributed algorithms the standard",
    "start": "1988480",
    "end": "1995399"
  },
  {
    "text": "approach to that actually would force a right to stall and so um one of the",
    "start": "1995399",
    "end": "2001440"
  },
  {
    "text": "things that we invested a lot into is the notion of making core membership changes something that is entirely trans",
    "start": "2001440",
    "end": "2007960"
  },
  {
    "text": "arent so you can keep issuing rights even as underneath the covers you add nodes into your Quorum remove nodes from",
    "start": "2007960",
    "end": "2014519"
  },
  {
    "text": "your quum and so forth and uh you know I can answer questions on that if you're",
    "start": "2014519",
    "end": "2021638"
  },
  {
    "text": "interested so you know that's all at basic storage node processing uh kind of stuff Let's uh look at that from a",
    "start": "2022080",
    "end": "2029679"
  },
  {
    "text": "database user perspective so in um in the database you",
    "start": "2029679",
    "end": "2036000"
  },
  {
    "text": "know the traditional approach to crash recovery since you know databases go down is is that you basically bring the",
    "start": "2036000",
    "end": "2043799"
  },
  {
    "text": "database back up you find out what the point you were last checkpointed and you",
    "start": "2043799",
    "end": "2049000"
  },
  {
    "text": "replay all of the logs from that point forward and uh there's a famous paper",
    "start": "2049000",
    "end": "2054079"
  },
  {
    "text": "called the five minute rule by uh gray and others um and um where they",
    "start": "2054079",
    "end": "2059638"
  },
  {
    "text": "estimated that it should be about 5 minutes between checkpoints and because that's basically the a trade-off between",
    "start": "2059639",
    "end": "2067560"
  },
  {
    "text": "uh um the amount of memory you can afford and dis latency and um iops and",
    "start": "2067560",
    "end": "2073720"
  },
  {
    "text": "so forth and that's actually stayed true for I think 30 years since they actually",
    "start": "2073720",
    "end": "2078878"
  },
  {
    "text": "initially issued that paper and so the problem with um this operation in my SQL",
    "start": "2078879",
    "end": "2086240"
  },
  {
    "text": "in particular is is that the crash recovery redo application is single",
    "start": "2086240",
    "end": "2092599"
  },
  {
    "start": "2091000",
    "end": "2091000"
  },
  {
    "text": "threaded and so since it's single-threaded it you may end up with 32 cores generating forward traffic over",
    "start": "2092599",
    "end": "2100480"
  },
  {
    "text": "you know 5 minutes over a checkpoint but one core applying the uh uh change log",
    "start": "2100480",
    "end": "2107720"
  },
  {
    "text": "the red log onto the blocks after you come up the other problem is that you're going to be doing ios's here whereas in",
    "start": "2107720",
    "end": "2114599"
  },
  {
    "text": "the you know when you're doing the foreground traffic it may have been against blocks in your buffer cache whereas now you have to go and warm up",
    "start": "2114599",
    "end": "2121320"
  },
  {
    "text": "your cash and get these things off of dis and that also adds time and if they're going across a multitude of uh",
    "start": "2121320",
    "end": "2128520"
  },
  {
    "text": "tables inside a data dictionary you have to page those in as well and so you know there's nothing that guarantees that",
    "start": "2128520",
    "end": "2134920"
  },
  {
    "text": "it's going to be 5 minutes it probably is going to be five minutes or less you know it might be as low as a few seconds",
    "start": "2134920",
    "end": "2141119"
  },
  {
    "text": "it might be as I've seen it go as long as an hour I mean that's obviously a crazy outlier case but uh you know",
    "start": "2141119",
    "end": "2147960"
  },
  {
    "text": "that's not what you want to see because you know it's not what you manage to right um if you look at Amazon Aurora",
    "start": "2147960",
    "end": "2156040"
  },
  {
    "text": "what we've done is we've built a log structured storage system underneath the covers each 10 GB segment has its own",
    "start": "2156040",
    "end": "2163680"
  },
  {
    "text": "segmented portion of the redo log if you ask for a data block out of Aurora",
    "start": "2163680",
    "end": "2169640"
  },
  {
    "text": "storage it basically goes and tries to get a data block it checks to see if any",
    "start": "2169640",
    "end": "2174839"
  },
  {
    "text": "log records are have been issued since that point based on the read view you're asking for and it'll go and say well let",
    "start": "2174839",
    "end": "2182680"
  },
  {
    "text": "me go apply those before I give it to you right and so what's need about that",
    "start": "2182680",
    "end": "2188640"
  },
  {
    "text": "is that uh the same process that is happening for foreground processing is",
    "start": "2188640",
    "end": "2194400"
  },
  {
    "text": "happening for Recovery which is really important if you're building uh you know a recovery system that you know it's not",
    "start": "2194400",
    "end": "2200440"
  },
  {
    "text": "Dusty code that goes bad and the other thing that's really important is is that",
    "start": "2200440",
    "end": "2206079"
  },
  {
    "text": "this is an operation that's parallel distributed asynchronous and yet more",
    "start": "2206079",
    "end": "2211680"
  },
  {
    "text": "importantly you don't have to do it at startup time I can just start up and",
    "start": "2211680",
    "end": "2216839"
  },
  {
    "text": "it's really only at the you know because if you issue an IO it's going to do the",
    "start": "2216839",
    "end": "2222319"
  },
  {
    "text": "same thing that it would have done if it was happening in the normal course of behavior it's going to go and apply the",
    "start": "2222319",
    "end": "2227680"
  },
  {
    "text": "records it needs just for that data Block in order to return it to you so that's nice you know there's none of",
    "start": "2227680",
    "end": "2233440"
  },
  {
    "text": "this five minute stuff the other thing that we did in Aurora to sort of assist with this is",
    "start": "2233440",
    "end": "2239960"
  },
  {
    "start": "2239000",
    "end": "2239000"
  },
  {
    "text": "that we mov the buffer cache out of the database process and that might sound",
    "start": "2239960",
    "end": "2246720"
  },
  {
    "text": "esoteric but what it ends up meaning is is that the cache stays warm if you have",
    "start": "2246720",
    "end": "2252520"
  },
  {
    "text": "to restart the database so for example let's say you ran into an application deadlock and you need to bounce things",
    "start": "2252520",
    "end": "2258040"
  },
  {
    "text": "in order to come back up now we have you know if you uh you know are a devops guy",
    "start": "2258040",
    "end": "2264240"
  },
  {
    "text": "like me you have run into these cases where you use uh relational databases under the covers and it's hard to say",
    "start": "2264240",
    "end": "2271280"
  },
  {
    "text": "how long it's going to be until that cach is warm again and what you end up doing is you send a trickle load through",
    "start": "2271280",
    "end": "2277079"
  },
  {
    "text": "the system system because if you go and put the full load against it you end up U uh you know having so much iOS going",
    "start": "2277079",
    "end": "2285040"
  },
  {
    "text": "to the back end that the thing goes belly up again and so that's a you know it's a bad time",
    "start": "2285040",
    "end": "2291200"
  },
  {
    "text": "so in this case since the cache is already warm you can resume fully loaded operations much much faster uh and you",
    "start": "2291200",
    "end": "2298480"
  },
  {
    "text": "don't have to think about when that is it just happens and so the combination of survivable caches and instant crash",
    "start": "2298480",
    "end": "2305880"
  },
  {
    "text": "recovery um Mak uh database failures uh pretty",
    "start": "2305880",
    "end": "2311160"
  },
  {
    "text": "fast Let's uh look at what the timeline would look like so in traditional MySQL",
    "start": "2311160",
    "end": "2316560"
  },
  {
    "start": "2315000",
    "end": "2315000"
  },
  {
    "text": "what you'd be doing is you get a database failure you have to detect it right so for example in multi-az we have",
    "start": "2316560",
    "end": "2322880"
  },
  {
    "text": "a witness that sits there and watches uh the database runs a health check against it uh every so often every 5 seconds and",
    "start": "2322880",
    "end": "2331079"
  },
  {
    "text": "if once it gets like multiple blips it says okay I've declare this note bad I'm going to cut it over then then you bring",
    "start": "2331079",
    "end": "2338280"
  },
  {
    "text": "up the new uh standby instance you start running recovery could take arbitrarily",
    "start": "2338280",
    "end": "2343520"
  },
  {
    "text": "long um no hopefully not too long but you know could take long and then you",
    "start": "2343520",
    "end": "2348839"
  },
  {
    "text": "also have to have your DNS cut over to move the IP for your from primary to",
    "start": "2348839",
    "end": "2355000"
  },
  {
    "text": "secondary that can also take a little while so with Aurora the uh failure detection we're",
    "start": "2355000",
    "end": "2362839"
  },
  {
    "text": "able to compress it quite a bit because to 15 to 20 seconds right now",
    "start": "2362839",
    "end": "2368160"
  },
  {
    "text": "because the cost of making a mistake isn't large uh you you know you can bring up a",
    "start": "2368160",
    "end": "2374400"
  },
  {
    "text": "new system pretty quickly there you don't lose any commits and you know it's it's basically a short blip the recovery",
    "start": "2374400",
    "end": "2381480"
  },
  {
    "text": "is somewhere between 3 and 20 seconds that's basically uh right now depends on",
    "start": "2381480",
    "end": "2386839"
  },
  {
    "text": "instance size because we have to go and look through all of the buffer cache to figure out whether we need to throw away",
    "start": "2386839",
    "end": "2393680"
  },
  {
    "text": "blocks that are in the past of what some of the updates might be and uh so you know that takes longer on a big instance",
    "start": "2393680",
    "end": "2399520"
  },
  {
    "text": "than a small instance uh right now it's you know somewhere between it's three instances on an R3 large it's somewhere",
    "start": "2399520",
    "end": "2405880"
  },
  {
    "text": "around 20 on an R38 XL and then your apps running so uh wait a second I",
    "start": "2405880",
    "end": "2411440"
  },
  {
    "text": "didn't talk about DNS propagation there and so so the DNS of course does need to",
    "start": "2411440",
    "end": "2416720"
  },
  {
    "text": "propagate but we've been working with Maria DB on their um drivers they jdbc",
    "start": "2416720",
    "end": "2422560"
  },
  {
    "text": "obbc drivers and uh Maria DB's drivers already support MySQL perona and of",
    "start": "2422560",
    "end": "2429599"
  },
  {
    "text": "course Maria DB they also added support for Aurora and one of the things they and and so that's kind of nice because",
    "start": "2429599",
    "end": "2436800"
  },
  {
    "text": "you know changing your database engine you know it's painful changing every place that you need to change uh obbc or",
    "start": "2436800",
    "end": "2444240"
  },
  {
    "text": "jdbc driver that's really painful right and so the fact that we have something that works across the full range I think",
    "start": "2444240",
    "end": "2450640"
  },
  {
    "text": "that's nice even you know and it's not ours but I think you know we're really supportive of them uh their work there",
    "start": "2450640",
    "end": "2456839"
  },
  {
    "text": "one of the things they did on our behalf is is that they look at a system table they look at all of the read replicas",
    "start": "2456839",
    "end": "2463160"
  },
  {
    "text": "that are available they figure out what the physical IP addresses are and that way they can do a cut over uh by just",
    "start": "2463160",
    "end": "2470440"
  },
  {
    "text": "polling which other uh guys respond back that they're the master if they lose connectivity to the what was previously",
    "start": "2470440",
    "end": "2476280"
  },
  {
    "text": "the master and so they can get uh to the guy who is now the new declared Master",
    "start": "2476280",
    "end": "2482960"
  },
  {
    "text": "without having to do DNS propagation so I mean DNS propagation will happen and",
    "start": "2482960",
    "end": "2488440"
  },
  {
    "text": "so forth but you can get uh you know the failover in a nice contained time whereas DNS propagation can take a",
    "start": "2488440",
    "end": "2494599"
  },
  {
    "text": "fairly long time depending on where you are and the network topology and all of this other stuff right it's hard to",
    "start": "2494599",
    "end": "2500680"
  },
  {
    "text": "estimate that and we really want to have controlled environments and I really",
    "start": "2500680",
    "end": "2505839"
  },
  {
    "text": "kind of hope that you know next year if I'm doing the slide it's the numbers are about half the size because I think",
    "start": "2505839",
    "end": "2511319"
  },
  {
    "text": "there's about that much fat left in it um now one of the things things we talk",
    "start": "2511319",
    "end": "2517680"
  },
  {
    "text": "about is that you know it's one thing for me to go and claim that we can do all of this stuff but you know we really",
    "start": "2517680",
    "end": "2523000"
  },
  {
    "text": "need to prove it and it's hard to prove this stuff in manage systems and uh",
    "start": "2523000",
    "end": "2529079"
  },
  {
    "text": "environments like ours so one of the things that we allow you to do is certainly you know crash your instance",
    "start": "2529079",
    "end": "2536040"
  },
  {
    "text": "or you know node or you know some of the various you know other components in the system uh you can simulate disk failures",
    "start": "2536040",
    "end": "2542839"
  },
  {
    "text": "you can uh simulate the percentage you can simulate how long they're down um",
    "start": "2542839",
    "end": "2547920"
  },
  {
    "start": "2543000",
    "end": "2543000"
  },
  {
    "text": "you can simulate Network weather either total or partial and so forth and you know that just lets you go and VA",
    "start": "2547920",
    "end": "2554480"
  },
  {
    "text": "validate that this stuff you know works for your own uh needs",
    "start": "2554480",
    "end": "2560040"
  },
  {
    "text": "um with that here's a quick look at the Aurora team that uh actually builds this",
    "start": "2560040",
    "end": "2565119"
  },
  {
    "text": "stuff whereas I just talk about it and uh you know thanks to them for all this work and with that I can jump forward to",
    "start": "2565119",
    "end": "2574319"
  },
  {
    "start": "2567000",
    "end": "2567000"
  },
  {
    "text": "questions if you have any [Applause]",
    "start": "2574319",
    "end": "2586329"
  },
  {
    "text": "yeah so question the question was what's involved in moving a production RDS",
    "start": "2591599",
    "end": "2599319"
  },
  {
    "text": "MySQL instance to Aurora so we've tried really hard to make that simple um we'll",
    "start": "2599319",
    "end": "2605640"
  },
  {
    "text": "actually be talking about that in the intro to Aurora session tomorrow and walking you through it but it's",
    "start": "2605640",
    "end": "2610880"
  },
  {
    "text": "basically a a handful of console clicks where you have your RDS uh my SQL",
    "start": "2610880",
    "end": "2616240"
  },
  {
    "text": "instance and you can basically just tell it to migrate to Aurora and underneath the covers what we do is is that you",
    "start": "2616240",
    "end": "2623680"
  },
  {
    "text": "know of course the underlying storage is different so we read all of the blocks and we uh write them all in our own",
    "start": "2623680",
    "end": "2630960"
  },
  {
    "text": "format and uh that's basically it it basically runs at line rate speed if uh",
    "start": "2630960",
    "end": "2636720"
  },
  {
    "text": "some of you guys tried that in U our preview you know over the course of preview it's somewhere between five and",
    "start": "2636720",
    "end": "2643200"
  },
  {
    "text": "10 times faster you know we fixed some stuff uh so you know right now it's running closer to line rate than uh",
    "start": "2643200",
    "end": "2649200"
  },
  {
    "text": "before so it should be simple uh so the question was is there",
    "start": "2649200",
    "end": "2654359"
  },
  {
    "text": "downtime so one of the things you could choose to do is move a replica over",
    "start": "2654359",
    "end": "2660079"
  },
  {
    "text": "right something like that and disconnect it and then connect a uh you know connect it back up because you know I",
    "start": "2660079",
    "end": "2666760"
  },
  {
    "text": "kind have talked about how there are issues with bin log replication but you know we still support bin log",
    "start": "2666760",
    "end": "2672200"
  },
  {
    "text": "replication and so you know we can act as a source we can act as a Target all of that stuff works and so you can do",
    "start": "2672200",
    "end": "2678520"
  },
  {
    "text": "all of the standard things that you do for moving from um you know one MySQL to",
    "start": "2678520",
    "end": "2684000"
  },
  {
    "text": "another uh in the same way okay and then of course uh you know we announced",
    "start": "2684000",
    "end": "2689440"
  },
  {
    "text": "earlier today database migration service so if you chose to you could also use that yes sir",
    "start": "2689440",
    "end": "2697359"
  },
  {
    "text": "I'm sorry could you repeat that so the question was um are there",
    "start": "2698319",
    "end": "2704800"
  },
  {
    "text": "any plans for multi- region Aurora so I will say that uh you know the two",
    "start": "2704800",
    "end": "2710480"
  },
  {
    "text": "requests I hear all the time most often is uh one is hey could you do an aora",
    "start": "2710480",
    "end": "2716839"
  },
  {
    "text": "for postgress and could you do multimaster multi multi- region aor and so you know those are obviously both",
    "start": "2716839",
    "end": "2723680"
  },
  {
    "text": "heavy lift projects you know those were things that would be pretty challenging for us to take on until we went",
    "start": "2723680",
    "end": "2728880"
  },
  {
    "text": "production we're taking a hard look so you know there's nothing I can talk about now but that's because you know",
    "start": "2728880",
    "end": "2736000"
  },
  {
    "text": "but you know we're taking a hard look at those sorts of things yes",
    "start": "2736000",
    "end": "2742558"
  },
  {
    "text": "sir so the question was um in other RDS",
    "start": "2752359",
    "end": "2757599"
  },
  {
    "text": "databases um there's a failover event that happens when um you have to upgrade",
    "start": "2757599",
    "end": "2763319"
  },
  {
    "text": "an instance are we able to eliminate that for Aurora so partially we're able",
    "start": "2763319",
    "end": "2768880"
  },
  {
    "text": "to eliminate that for the storage tier um because we basically upgrade a at a",
    "start": "2768880",
    "end": "2774079"
  },
  {
    "text": "time so in some sense one of the benefits of that is is that we're continuously testing our 4 out of six uh",
    "start": "2774079",
    "end": "2780960"
  },
  {
    "text": "protocol because we're basically introducing failures in some sense all the time uh we have not managed to fix",
    "start": "2780960",
    "end": "2787880"
  },
  {
    "text": "that yet for uh the database engine itself so you do have a fail over and then a fail back um with all of the sort",
    "start": "2787880",
    "end": "2795400"
  },
  {
    "text": "of situational work that we talked about",
    "start": "2795400",
    "end": "2799599"
  },
  {
    "text": "there uh so the question was are we able to refine it in any way to reduce the failure detection time and so on uh so",
    "start": "2801640",
    "end": "2809920"
  },
  {
    "text": "yes it should be far quite a bit shorter for all the reasons I talked about",
    "start": "2809920",
    "end": "2815480"
  },
  {
    "text": "earlier uh sorry",
    "start": "2815480",
    "end": "2818838"
  },
  {
    "text": "so the question is uh okay so uh you you know talked Up Aurora quite a bit uh why",
    "start": "2826599",
    "end": "2833040"
  },
  {
    "text": "not use it and so I there are handful of reasons so one is that uh we when we say",
    "start": "2833040",
    "end": "2839119"
  },
  {
    "text": "we're compatible with my SQL what we mean is MySQL 56 using NB and so if",
    "start": "2839119",
    "end": "2846119"
  },
  {
    "text": "you're using one of the other engine my Isam or something like that you will have to undergo some work in order to",
    "start": "2846119",
    "end": "2852559"
  },
  {
    "text": "transition or you know one of the multitude of other storage engines that's out there if you're using 55 or",
    "start": "2852559",
    "end": "2859839"
  },
  {
    "text": "you know God forbid 51 you have to uh you know think about you know it's not going to really work for you right and",
    "start": "2859839",
    "end": "2866160"
  },
  {
    "text": "so forth um if you're doing a Dev test instance uh then um you know you might",
    "start": "2866160",
    "end": "2872520"
  },
  {
    "text": "be wanting to run on a micro and um Aurora only goes down down to an R3 so",
    "start": "2872520",
    "end": "2878240"
  },
  {
    "text": "it might be effective for you to run on a micro or a small for you're doing your",
    "start": "2878240",
    "end": "2883559"
  },
  {
    "text": "Dev but you know since we're compatible it's very possible for you to sort of make as part of your code pipeline a",
    "start": "2883559",
    "end": "2890440"
  },
  {
    "text": "promotion up to uh Aurora for uh your GA",
    "start": "2890440",
    "end": "2895599"
  },
  {
    "text": "usage yes",
    "start": "2895599",
    "end": "2898720"
  },
  {
    "text": "sir uh the question was is there an announced plan for encryption at rest uh",
    "start": "2902440",
    "end": "2908079"
  },
  {
    "text": "so that it should be in 3",
    "start": "2908079",
    "end": "2913440"
  },
  {
    "text": "weeks with KMS [Applause]",
    "start": "2913440",
    "end": "2920900"
  },
  {
    "text": "keys I'm sorry could you repeat",
    "start": "2928559",
    "end": "2932599"
  },
  {
    "text": "that uhhuh a few",
    "start": "2934720",
    "end": "2939359"
  },
  {
    "text": "times got it uh so the question was um in the my discussion I compared my SQL",
    "start": "2941440",
    "end": "2949240"
  },
  {
    "text": "on Linux to Aurora a few times does that mean that Aurora is not on Linux no that",
    "start": "2949240",
    "end": "2954559"
  },
  {
    "text": "was not my intention Aurora is on Linux um the difference is is that if you're",
    "start": "2954559",
    "end": "2960359"
  },
  {
    "text": "running EBS it basically is running underneath the covers as underneath",
    "start": "2960359",
    "end": "2966000"
  },
  {
    "text": "Linux on you know inside Dom zero in order to do the movement and so you're issuing an I/O transparently as though",
    "start": "2966000",
    "end": "2972040"
  },
  {
    "text": "it's a dis it goes through the d u kernel and then the into the Dom zero kernel in order to run the uh movement",
    "start": "2972040",
    "end": "2979960"
  },
  {
    "text": "over into network attached storage using EBS in the case of Aurora we're not going through that layer of processing",
    "start": "2979960",
    "end": "2987200"
  },
  {
    "text": "right because all we're doing inside user space we're saying that hey I need to issue a request out to uh my storage",
    "start": "2987200",
    "end": "2994440"
  },
  {
    "text": "nodes right so I mean that's a different system call obviously but it's a network system call not an IO system call and so",
    "start": "2994440",
    "end": "3001040"
  },
  {
    "text": "that means that the code path down at that layer is quite different",
    "start": "3001040",
    "end": "3006880"
  },
  {
    "text": "yeah uh the question was can I uh create an aurora instance through a cloud",
    "start": "3010319",
    "end": "3015720"
  },
  {
    "text": "formation template I believe the answer to that is that not yet but they're",
    "start": "3015720",
    "end": "3022040"
  },
  {
    "text": "working on it I uh could be mistaken I know that they announced something a",
    "start": "3022040",
    "end": "3027440"
  },
  {
    "text": "little bit ago but I'm I'm a little bit confused about last I'm sorry they fixed it last week thank",
    "start": "3027440",
    "end": "3035079"
  },
  {
    "text": "you yeah so the question was uh can you support uh are there any plans to",
    "start": "3040359",
    "end": "3046040"
  },
  {
    "text": "support smaller instance sizes for Aurora that is something I hear a lot uh",
    "start": "3046040",
    "end": "3051480"
  },
  {
    "text": "and um there you there is a trade-off that's going on with with aurar where",
    "start": "3051480",
    "end": "3057359"
  },
  {
    "text": "we're introducing extra load in the system to do all the shuffling and so forth and so we do benefit from space",
    "start": "3057359",
    "end": "3064359"
  },
  {
    "text": "and definitely as you go down to even the R3 large you're not necessarily",
    "start": "3064359",
    "end": "3069839"
  },
  {
    "text": "seeing U meaningful performance gains you know you will if you go and do the dis type traffic you're not going to see",
    "start": "3069839",
    "end": "3076040"
  },
  {
    "text": "it using uh memory resident uh workloads you will of course get all of the benefits of durability and availability",
    "start": "3076040",
    "end": "3082319"
  },
  {
    "text": "and crash recovery times so we can go down smaller but it's we're going to have to work on shrinking down some of",
    "start": "3082319",
    "end": "3088920"
  },
  {
    "text": "the things we're doing that help us when we're going to very large instance sizes and so you know it's a request we hear",
    "start": "3088920",
    "end": "3095000"
  },
  {
    "text": "all the time it's something we think about it might be um a moderate sized lift for us to accomplish and I would",
    "start": "3095000",
    "end": "3103079"
  },
  {
    "text": "encourage people doing that to be thinking about that from a Dev test perspective versus uh a uh you know sort",
    "start": "3103079",
    "end": "3110319"
  },
  {
    "text": "of a production workload perspective right because it's kind of odd to be running six copies 3az storage using",
    "start": "3110319",
    "end": "3117240"
  },
  {
    "text": "ssds under as a back plane and running a micro right so that it's just you",
    "start": "3117240",
    "end": "3123160"
  },
  {
    "text": "know there any other questions here yes",
    "start": "3123160",
    "end": "3128520"
  },
  {
    "text": "sir I'm I'm sorry I couldn't hear you areans to",
    "start": "3131359",
    "end": "3137040"
  },
  {
    "text": "support are there the question was are there any plans to support a readon",
    "start": "3137240",
    "end": "3142720"
  },
  {
    "text": "cluster endpoint um um yes we have we aren't uh that uh far along",
    "start": "3142720",
    "end": "3149720"
  },
  {
    "text": "on it but you can imagine that uh you know in the same way that we can uh",
    "start": "3149720",
    "end": "3155240"
  },
  {
    "text": "detect from a driver all of the failover targets and detect which are the failover things you could also go and",
    "start": "3155240",
    "end": "3162520"
  },
  {
    "text": "think about the work necessary to say like which of my read replicas is warmest or you know and which one should",
    "start": "3162520",
    "end": "3169040"
  },
  {
    "text": "I go and route to and go and actually figure out automatically whether you're inside a right transaction and uh you",
    "start": "3169040",
    "end": "3175440"
  },
  {
    "text": "know you can move or not or so on so uh yeah that would make a lot of sense uh",
    "start": "3175440",
    "end": "3180720"
  },
  {
    "text": "we're interested in supporting that and particularly if you're starting to run something like up to 15 Read replicas",
    "start": "3180720",
    "end": "3186839"
  },
  {
    "text": "the way we support I think that that's a useful thing so it doesn't exist today",
    "start": "3186839",
    "end": "3192799"
  },
  {
    "text": "of",
    "start": "3192799",
    "end": "3194960"
  },
  {
    "text": "course so the question was when will Aurora be available under baa so we're",
    "start": "3198359",
    "end": "3205680"
  },
  {
    "text": "working on that clearly uh getting encryption done is a precursor so I think after that we can start working on",
    "start": "3205680",
    "end": "3212200"
  },
  {
    "text": "the process through you know Hippa and all the rest of it and U you know that's primarily a matter of going through uh",
    "start": "3212200",
    "end": "3219240"
  },
  {
    "text": "you know a meeting a week for you know as long as it takes but you know it's uh you know it's a somewhat lengthy process",
    "start": "3219240",
    "end": "3226119"
  },
  {
    "text": "but it's important to us anything else oh yes in the back",
    "start": "3226119",
    "end": "3235520"
  },
  {
    "text": "uh the question was uh any plans to support Aurora in California and so we",
    "start": "3236880",
    "end": "3242680"
  },
  {
    "text": "want to expand Aurora to um every region as soon as we have 3",
    "start": "3242680",
    "end": "3248079"
  },
  {
    "text": "A's available there so Aurora requires 3az storage it's a fundamental design",
    "start": "3248079",
    "end": "3253920"
  },
  {
    "text": "point for us um it's actually fairly uh complex for us to be able to try to move",
    "start": "3253920",
    "end": "3260400"
  },
  {
    "text": "to support both a 2az architecture and a 3az architecture in particular if you",
    "start": "3260400",
    "end": "3265839"
  },
  {
    "text": "think about copies in two azs if the a goes down you've lost three copies it's hard to define a core model that makes",
    "start": "3265839",
    "end": "3272359"
  },
  {
    "text": "sense um so we definitely are looking at that inside um you know the uh AWS team",
    "start": "3272359",
    "end": "3280240"
  },
  {
    "text": "as a whole you know there are other things that require 3az storage and uh so you know it's something that we're",
    "start": "3280240",
    "end": "3287839"
  },
  {
    "text": "taking a hard look at is uh California critical for you guys",
    "start": "3287839",
    "end": "3294838"
  },
  {
    "text": "okay got it thank",
    "start": "3297559",
    "end": "3300359"
  },
  {
    "text": "you I'm sorry could you say that",
    "start": "3303520",
    "end": "3307359"
  },
  {
    "text": "again are there any plans to support my sequal backup and restore on Aurora I",
    "start": "3309400",
    "end": "3314960"
  },
  {
    "text": "probably will want to talk to you after the session finishes to understand that in a little bit more depth um I think um",
    "start": "3314960",
    "end": "3322960"
  },
  {
    "text": "the direction I've been taking to date is to BAS basically do physical backups",
    "start": "3322960",
    "end": "3328160"
  },
  {
    "text": "underneath the covers which are segmented and there's a lot of complications when you do that about",
    "start": "3328160",
    "end": "3333960"
  },
  {
    "text": "being able to assemble together what uh the backups look like but uh I I would",
    "start": "3333960",
    "end": "3339039"
  },
  {
    "text": "assume that you're looking at that from a transportability from location to",
    "start": "3339039",
    "end": "3344240"
  },
  {
    "text": "location and um we'll just want to understand whether the backup model is the better model for that or is uh some",
    "start": "3344240",
    "end": "3352160"
  },
  {
    "text": "of our products like data migration service better but let me just talk to you in detail uh to understand your requirements there",
    "start": "3352160",
    "end": "3361640"
  },
  {
    "text": "sorry so the question was will there be anything uh akin to uh Dynamo DB streams",
    "start": "3363119",
    "end": "3370000"
  },
  {
    "text": "and so I think there um to a degree um binlog is",
    "start": "3370000",
    "end": "3377640"
  },
  {
    "text": "sort of that solution today um there are issues with bin logs uh you know",
    "start": "3377640",
    "end": "3383319"
  },
  {
    "text": "positive and negative I mean loog logical replication is kind of a good thing um one of the things that we are",
    "start": "3383319",
    "end": "3389880"
  },
  {
    "text": "doing in the very short term is is that using Aurora as a data migration service",
    "start": "3389880",
    "end": "3394920"
  },
  {
    "text": "point and so you can certainly use uh um change data capture out of data migration service and go from source to",
    "start": "3394920",
    "end": "3402280"
  },
  {
    "text": "Target even within the AWS cloud and uh that's one way that you can certainly uh",
    "start": "3402280",
    "end": "3409240"
  },
  {
    "text": "connect these things together um it might make sense to do what you're requesting I'd probably want to just",
    "start": "3409240",
    "end": "3415760"
  },
  {
    "text": "understand that in some detail yes",
    "start": "3415760",
    "end": "3421680"
  },
  {
    "text": "ma'am I'm sorry uh so the question was uh are",
    "start": "3424280",
    "end": "3431760"
  },
  {
    "text": "there any changes in deadlocking or is it still like it was in my SQL so we uh",
    "start": "3431760",
    "end": "3437200"
  },
  {
    "text": "completely rewrote the lock manager so you know there was a a slide that",
    "start": "3437200",
    "end": "3442799"
  },
  {
    "text": "someone wanted to put in my presentation and uh I took it out because it would have taken like 2 hours to go through it",
    "start": "3442799",
    "end": "3448880"
  },
  {
    "text": "and so you know but uh you know we can talk about the new approach um um but um",
    "start": "3448880",
    "end": "3456400"
  },
  {
    "text": "so it's going to be different uh but I'll probably need to understand in detail the uh underline question that",
    "start": "3456400",
    "end": "3463480"
  },
  {
    "text": "you know because there's clearly some pain that you're encountering today that uh we'll want to see whether we've",
    "start": "3463480",
    "end": "3469359"
  },
  {
    "text": "addressed it",
    "start": "3469359",
    "end": "3472720"
  },
  {
    "text": "does Aurora pint and time restore support what temp temp",
    "start": "3477119",
    "end": "3482200"
  },
  {
    "text": "tables I yes so support temp tables was the",
    "start": "3482200",
    "end": "3488359"
  },
  {
    "text": "question so one of the interesting things with uh Arora is is that since",
    "start": "3488359",
    "end": "3494119"
  },
  {
    "text": "we're only shipping log records that basically means we have to make everything a log record so a lot of the",
    "start": "3494119",
    "end": "3499880"
  },
  {
    "text": "things like frm files like bin logs like temp tables actually need to move into",
    "start": "3499880",
    "end": "3506160"
  },
  {
    "text": "things that are managed inside the database so that they can become have the same uh durability as everything",
    "start": "3506160",
    "end": "3512640"
  },
  {
    "text": "else right and so one of the nice side effects of that is that everything is",
    "start": "3512640",
    "end": "3518000"
  },
  {
    "text": "actually at the same point in time and so one of the challenges you know I",
    "start": "3518000",
    "end": "3523400"
  },
  {
    "text": "believe my SQL has uh is that you know you can do a point and time restore but it's actually gets kind of complicated",
    "start": "3523400",
    "end": "3529839"
  },
  {
    "text": "to align the frm files with the NB files because there you know there isn't",
    "start": "3529839",
    "end": "3535799"
  },
  {
    "text": "really consistency from a a log point of view whereas by storing everything inside the database itself we can",
    "start": "3535799",
    "end": "3542760"
  },
  {
    "text": "guarantee that there's a consistency point that is a log record and both the metadata and the data and all the rest",
    "start": "3542760",
    "end": "3549880"
  },
  {
    "text": "of it is aligned with that point do that make sense",
    "start": "3549880",
    "end": "3557160"
  },
  {
    "text": "sir uh so the question was is there any performance difference between uh single",
    "start": "3559359",
    "end": "3564599"
  },
  {
    "text": "table or file per table space and all of that no so um I mean we do obviously",
    "start": "3564599",
    "end": "3570280"
  },
  {
    "text": "support file per table now that was actually something that we learned out of the um preview process because",
    "start": "3570280",
    "end": "3576319"
  },
  {
    "text": "initially we hadn't supported that uh but then it turned out to be the default and super popular with people and there",
    "start": "3576319",
    "end": "3582119"
  },
  {
    "text": "also some other things that just required it like U uh row size which was kind of a strange linkage between those",
    "start": "3582119",
    "end": "3588960"
  },
  {
    "text": "two concepts but uh so we just net net had to support it but underneath the covers it doesn't really mean anything",
    "start": "3588960",
    "end": "3595720"
  },
  {
    "text": "to us us because things are spread widely with uh out really any consideration about table space per",
    "start": "3595720",
    "end": "3603240"
  },
  {
    "text": "se Yes",
    "start": "3603240",
    "end": "3606480"
  },
  {
    "text": "Man uh in my SQL 57 did you say",
    "start": "3609760",
    "end": "3615280"
  },
  {
    "text": "or so uh the question was are we going to add Common Table expressions and so forth so Our intention is to match the",
    "start": "3617200",
    "end": "3623680"
  },
  {
    "text": "surface area so at this point we're at a particular version we're back porting patches but uh our expectation our and",
    "start": "3623680",
    "end": "3631880"
  },
  {
    "text": "our intent is to stay fully compatible with the functional surface area so as",
    "start": "3631880",
    "end": "3637280"
  },
  {
    "text": "they add functionality we'll want to add that to uh our product as",
    "start": "3637280",
    "end": "3642319"
  },
  {
    "text": "well last question okay last question if any otherwise we can talk",
    "start": "3642319",
    "end": "3648640"
  },
  {
    "text": "outside uh yes",
    "start": "3648640",
    "end": "3651960"
  },
  {
    "text": "sir uh",
    "start": "3654160",
    "end": "3657920"
  },
  {
    "text": "so the question was uh is there any smart routing functionality today uh to",
    "start": "3663119",
    "end": "3668880"
  },
  {
    "text": "um um between writes and reads and so forth uh so today not uh you can",
    "start": "3668880",
    "end": "3674960"
  },
  {
    "text": "actually choose to implement it yourself uh because the underlying information is available in system tables about where",
    "start": "3674960",
    "end": "3681400"
  },
  {
    "text": "all the read replicas are and what kind of lag they're seeing and how much load they're seeing",
    "start": "3681400",
    "end": "3686760"
  },
  {
    "text": "um so you know that helps a little bit but uh certainly for the you know the majority of us that would just like a",
    "start": "3686760",
    "end": "3692880"
  },
  {
    "text": "driver to do this stuff because it should uh you know it's not there right now okay that was the last question",
    "start": "3692880",
    "end": "3699319"
  },
  {
    "text": "thank you very much for your time",
    "start": "3699319",
    "end": "3703400"
  }
]