[
  {
    "start": "0",
    "end": "48000"
  },
  {
    "text": "[Music]",
    "start": "640",
    "end": "4580"
  },
  {
    "text": "hi I'm Madhuri Perry from Amazon Web",
    "start": "4580",
    "end": "7680"
  },
  {
    "text": "Services today I'm going to show you how",
    "start": "7680",
    "end": "10380"
  },
  {
    "text": "to mix Amazon ec2 spot instances and",
    "start": "10380",
    "end": "13230"
  },
  {
    "text": "on-demand to maximize cost savings spot",
    "start": "13230",
    "end": "16230"
  },
  {
    "text": "instances are spare compute capacity in",
    "start": "16230",
    "end": "18570"
  },
  {
    "text": "the AWS cloud available to you at steep",
    "start": "18570",
    "end": "21449"
  },
  {
    "text": "discounts compared to on demand prices",
    "start": "21449",
    "end": "24029"
  },
  {
    "text": "the only difference between on-demand",
    "start": "24029",
    "end": "26430"
  },
  {
    "text": "instances and spot instances is that",
    "start": "26430",
    "end": "29130"
  },
  {
    "text": "spot instances can be interrupted with",
    "start": "29130",
    "end": "31740"
  },
  {
    "text": "two minutes of notification when on",
    "start": "31740",
    "end": "33960"
  },
  {
    "text": "demand needs capacity back in this video",
    "start": "33960",
    "end": "36600"
  },
  {
    "text": "I'll show you how to create a spot fleet",
    "start": "36600",
    "end": "39180"
  },
  {
    "text": "request with spot and on-demand",
    "start": "39180",
    "end": "40590"
  },
  {
    "text": "instances launch template load balancer",
    "start": "40590",
    "end": "43770"
  },
  {
    "text": "and request fulfillment parameters let's",
    "start": "43770",
    "end": "46320"
  },
  {
    "text": "get started in the AWS console choose",
    "start": "46320",
    "end": "49860"
  },
  {
    "text": "ec2 service under the compute category",
    "start": "49860",
    "end": "52350"
  },
  {
    "text": "this will take you to the ec2 dashboard",
    "start": "52350",
    "end": "55160"
  },
  {
    "text": "in the left-hand navigation pane click",
    "start": "55160",
    "end": "58230"
  },
  {
    "text": "on the spot request in the page here you",
    "start": "58230",
    "end": "61500"
  },
  {
    "text": "will see all the spot requests in this",
    "start": "61500",
    "end": "63629"
  },
  {
    "text": "account you can see the status of each",
    "start": "63629",
    "end": "66689"
  },
  {
    "text": "of these requests like fulfilled pending",
    "start": "66689",
    "end": "69270"
  },
  {
    "text": "fulfillment and others note here that",
    "start": "69270",
    "end": "72479"
  },
  {
    "text": "the request ID shows whether this was a",
    "start": "72479",
    "end": "74729"
  },
  {
    "text": "spot fleet request as you can see with",
    "start": "74729",
    "end": "77189"
  },
  {
    "text": "the prefix of SF R or a spot instance",
    "start": "77189",
    "end": "80520"
  },
  {
    "text": "request with the prefix of si R now",
    "start": "80520",
    "end": "83640"
  },
  {
    "text": "click on the request part instances",
    "start": "83640",
    "end": "85979"
  },
  {
    "text": "button these pod fleet requests can be",
    "start": "85979",
    "end": "88860"
  },
  {
    "start": "87000",
    "end": "277000"
  },
  {
    "text": "made for either one time which is called",
    "start": "88860",
    "end": "91259"
  },
  {
    "text": "request mode or request and maintain",
    "start": "91259",
    "end": "94140"
  },
  {
    "text": "which is called maintain mode in request",
    "start": "94140",
    "end": "97590"
  },
  {
    "text": "mode spot fleet will make your request",
    "start": "97590",
    "end": "99630"
  },
  {
    "text": "only once in request and maintain mode",
    "start": "99630",
    "end": "102450"
  },
  {
    "text": "spot fleet will not just request it but",
    "start": "102450",
    "end": "105210"
  },
  {
    "text": "will also add them to maintain your",
    "start": "105210",
    "end": "107189"
  },
  {
    "text": "target capacity at the specified level",
    "start": "107189",
    "end": "109439"
  },
  {
    "text": "let's choose this option of request and",
    "start": "109439",
    "end": "112110"
  },
  {
    "text": "maintain for our walkthrough here in the",
    "start": "112110",
    "end": "114869"
  },
  {
    "text": "amount section here the total target",
    "start": "114869",
    "end": "117030"
  },
  {
    "text": "capacity specifies number of instances",
    "start": "117030",
    "end": "119610"
  },
  {
    "text": "you want to launch I'm going to enter a",
    "start": "119610",
    "end": "122130"
  },
  {
    "text": "value of 3 here and specify that I want",
    "start": "122130",
    "end": "124890"
  },
  {
    "text": "one instance of this total capacity",
    "start": "124890",
    "end": "127290"
  },
  {
    "text": "running as on-demand for",
    "start": "127290",
    "end": "129479"
  },
  {
    "text": "you could also provision capacity by VC",
    "start": "129479",
    "end": "132790"
  },
  {
    "text": "POS or instances by choosing value from",
    "start": "132790",
    "end": "135579"
  },
  {
    "text": "drop-down here we choose a pre-existing",
    "start": "135579",
    "end": "138459"
  },
  {
    "text": "launch template that I created launch",
    "start": "138459",
    "end": "140709"
  },
  {
    "text": "templates enable users to specify",
    "start": "140709",
    "end": "142959"
  },
  {
    "text": "multiple parameters that are required",
    "start": "142959",
    "end": "145209"
  },
  {
    "text": "for launching ec2 instances in a",
    "start": "145209",
    "end": "147849"
  },
  {
    "text": "templatized manner you can overwrite the",
    "start": "147849",
    "end": "150549"
  },
  {
    "text": "template parameters except the ami ID",
    "start": "150549",
    "end": "153129"
  },
  {
    "text": "let's select a few instance types a",
    "start": "153129",
    "end": "155920"
  },
  {
    "text": "recommended best practice is to choose",
    "start": "155920",
    "end": "158109"
  },
  {
    "text": "multiple instance types so spot fleet",
    "start": "158109",
    "end": "160629"
  },
  {
    "text": "will attempt to find and fulfill",
    "start": "160629",
    "end": "162549"
  },
  {
    "text": "instances across any of these types to",
    "start": "162549",
    "end": "165579"
  },
  {
    "text": "fulfill the specified target capacity",
    "start": "165579",
    "end": "167859"
  },
  {
    "text": "above choose the network availability",
    "start": "167859",
    "end": "172000"
  },
  {
    "text": "zones",
    "start": "172000",
    "end": "174480"
  },
  {
    "text": "let's define a load balancer for this",
    "start": "176260",
    "end": "178870"
  },
  {
    "text": "workload spot fleet will register the",
    "start": "178870",
    "end": "181030"
  },
  {
    "text": "instances launched to this load balancer",
    "start": "181030",
    "end": "183430"
  },
  {
    "text": "as you can see here you could register",
    "start": "183430",
    "end": "186340"
  },
  {
    "text": "with the classic load balancer or",
    "start": "186340",
    "end": "188580"
  },
  {
    "text": "application load balancer as defined by",
    "start": "188580",
    "end": "191230"
  },
  {
    "text": "target groups I'm going to choose a",
    "start": "191230",
    "end": "193750"
  },
  {
    "text": "target group here let's specify how you",
    "start": "193750",
    "end": "197140"
  },
  {
    "text": "would like your spot request to be",
    "start": "197140",
    "end": "199120"
  },
  {
    "text": "filtered this section will define",
    "start": "199120",
    "end": "201730"
  },
  {
    "text": "further how you want your ec2 spot",
    "start": "201730",
    "end": "204400"
  },
  {
    "text": "instances to be fulfilled allocation",
    "start": "204400",
    "end": "207069"
  },
  {
    "text": "strategy provides two options lowest",
    "start": "207069",
    "end": "209620"
  },
  {
    "text": "price and diversified lowest price",
    "start": "209620",
    "end": "212230"
  },
  {
    "text": "option will specify that you want the",
    "start": "212230",
    "end": "214450"
  },
  {
    "text": "lowest price instance to be chosen from",
    "start": "214450",
    "end": "216670"
  },
  {
    "text": "the instance types list you provided",
    "start": "216670",
    "end": "218680"
  },
  {
    "text": "above diversified option will tell spot",
    "start": "218680",
    "end": "221500"
  },
  {
    "text": "fleet that you want to balance spot",
    "start": "221500",
    "end": "223480"
  },
  {
    "text": "instances across availability zones and",
    "start": "223480",
    "end": "226290"
  },
  {
    "text": "instance types available maximum price",
    "start": "226290",
    "end": "229630"
  },
  {
    "text": "specifies the maximum you are willing to",
    "start": "229630",
    "end": "232120"
  },
  {
    "text": "pay per unit or instance hour for all",
    "start": "232120",
    "end": "235540"
  },
  {
    "text": "the instance types you specified above",
    "start": "235540",
    "end": "237480"
  },
  {
    "text": "default option would charge you the",
    "start": "237480",
    "end": "239890"
  },
  {
    "text": "current ec2 spot price up to maximum of",
    "start": "239890",
    "end": "243220"
  },
  {
    "text": "on-demand price your custom price could",
    "start": "243220",
    "end": "246310"
  },
  {
    "text": "be specified by choosing the set your",
    "start": "246310",
    "end": "249130"
  },
  {
    "text": "max price option",
    "start": "249130",
    "end": "250569"
  },
  {
    "text": "I am fleet roll specifies the roll that",
    "start": "250569",
    "end": "254260"
  },
  {
    "text": "spot fleet uses in order to fulfill the",
    "start": "254260",
    "end": "256630"
  },
  {
    "text": "request as you see here a JSON config is",
    "start": "256630",
    "end": "260079"
  },
  {
    "text": "generated for you that you could use to",
    "start": "260079",
    "end": "262360"
  },
  {
    "text": "specify all these parameters via cloud",
    "start": "262360",
    "end": "265090"
  },
  {
    "text": "formation template for future automation",
    "start": "265090",
    "end": "267810"
  },
  {
    "text": "you can optionally edit how long this",
    "start": "267810",
    "end": "270760"
  },
  {
    "text": "request is valid we leave it at defaults",
    "start": "270760",
    "end": "273340"
  },
  {
    "text": "and launch the spot fleet you will see",
    "start": "273340",
    "end": "278470"
  },
  {
    "start": "277000",
    "end": "352000"
  },
  {
    "text": "the status submitted as the state",
    "start": "278470",
    "end": "281080"
  },
  {
    "text": "transitions to actor you will see that",
    "start": "281080",
    "end": "283510"
  },
  {
    "text": "the status changes to pending",
    "start": "283510",
    "end": "285490"
  },
  {
    "text": "fulfillment this means that spot fleet",
    "start": "285490",
    "end": "288190"
  },
  {
    "text": "has validated your request and now it is",
    "start": "288190",
    "end": "291160"
  },
  {
    "text": "looking for capacity to fulfill total",
    "start": "291160",
    "end": "293560"
  },
  {
    "text": "target capacity based on the criteria we",
    "start": "293560",
    "end": "296470"
  },
  {
    "text": "specified earlier",
    "start": "296470",
    "end": "297930"
  },
  {
    "text": "as you see now the spot fleet request",
    "start": "297930",
    "end": "300630"
  },
  {
    "text": "here shows status of fulfilled now if",
    "start": "300630",
    "end": "303180"
  },
  {
    "text": "you expand this here you will see that",
    "start": "303180",
    "end": "305190"
  },
  {
    "text": "it has only two spot instance requests",
    "start": "305190",
    "end": "307770"
  },
  {
    "text": "which tells you that the request was",
    "start": "307770",
    "end": "310199"
  },
  {
    "text": "fulfilled with two ec2 spot instances",
    "start": "310199",
    "end": "313380"
  },
  {
    "text": "and one on-demand instance as we",
    "start": "313380",
    "end": "316110"
  },
  {
    "text": "specified earlier if you click on the",
    "start": "316110",
    "end": "319979"
  },
  {
    "text": "instances tab here you will see all",
    "start": "319979",
    "end": "322410"
  },
  {
    "text": "three instances notice how the request",
    "start": "322410",
    "end": "325169"
  },
  {
    "text": "ID shows that two of these our spot",
    "start": "325169",
    "end": "327660"
  },
  {
    "text": "instance requests and the other one is",
    "start": "327660",
    "end": "329789"
  },
  {
    "text": "on-demand as shown as non spot in this",
    "start": "329789",
    "end": "335490"
  },
  {
    "text": "video I have shown you how to create a",
    "start": "335490",
    "end": "337500"
  },
  {
    "text": "spot fleet that has total target",
    "start": "337500",
    "end": "339810"
  },
  {
    "text": "capacity defined as both spot and an",
    "start": "339810",
    "end": "342300"
  },
  {
    "text": "optional on-demand capacity to learn",
    "start": "342300",
    "end": "344880"
  },
  {
    "text": "more about ec2 spot",
    "start": "344880",
    "end": "346710"
  },
  {
    "text": "visit the URL at the end of this video",
    "start": "346710",
    "end": "349080"
  },
  {
    "text": "thanks for watching",
    "start": "349080",
    "end": "352460"
  }
]