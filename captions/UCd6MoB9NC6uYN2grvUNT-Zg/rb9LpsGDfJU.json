[
  {
    "text": "let's get started um i'm marvin timer i'm a distinguished engineer over in aws",
    "start": "1199",
    "end": "6720"
  },
  {
    "text": "and what i'm going to tell you about today is the larger picture of how aws is trying to support event-driven",
    "start": "6720",
    "end": "12480"
  },
  {
    "text": "computing now probably all of you saw burner's keynote and probably andy's as well",
    "start": "12480",
    "end": "18000"
  },
  {
    "text": "yesterday and one of the key things that we've been harping on is agility right and timeliness of",
    "start": "18000",
    "end": "24320"
  },
  {
    "text": "things and the key thing to that is is you know",
    "start": "24320",
    "end": "29359"
  },
  {
    "text": "event driven computing is one of the key parts of that now what verner told you about in his keynote was primarily",
    "start": "29359",
    "end": "34960"
  },
  {
    "text": "focused on lambda which is one of the ways of processing events but you actually need events in order to",
    "start": "34960",
    "end": "40079"
  },
  {
    "text": "be able to process them in fact you need kind of a whole ecosystem in order to be able to put this together and really get",
    "start": "40079",
    "end": "45280"
  },
  {
    "text": "sort of synergies that leverage it and that's going to be the point of this talk is to talk about that larger",
    "start": "45280",
    "end": "50320"
  },
  {
    "text": "picture so if you think about the traditional way of doing things before people started thinking about this event-based",
    "start": "50320",
    "end": "56800"
  },
  {
    "text": "model you do things like the following imagine for example your phone or your camera is going to upload an image file",
    "start": "56800",
    "end": "63440"
  },
  {
    "text": "to your s3 bucket right you know smalling's today phones just do that automatically they load into the cloud",
    "start": "63440",
    "end": "69680"
  },
  {
    "text": "if they're smart they probably also index your photos so you can find them by some efficient way",
    "start": "69680",
    "end": "75040"
  },
  {
    "text": "maybe by their gps coordinates and so forth but that's about what they do that's what the phone does right let's",
    "start": "75040",
    "end": "81200"
  },
  {
    "text": "suppose there's this cool app that comes out that lets you create automatically photo albums where",
    "start": "81200",
    "end": "87119"
  },
  {
    "text": "you take all of the photos that are from the same city or the same region or the same country group it together and give you kind of a",
    "start": "87119",
    "end": "92880"
  },
  {
    "text": "nice travel log right now that's not something that's part of your basic phone functionality so",
    "start": "92880",
    "end": "98079"
  },
  {
    "text": "somebody else is going to develop that and you're going to buy it say or maybe it's free if you're lucky",
    "start": "98079",
    "end": "103439"
  },
  {
    "text": "well the question is well how are you going to use this thing well you're not going to run it on your phone this is going to do a fair amount of computing",
    "start": "103439",
    "end": "109600"
  },
  {
    "text": "and it's just not you know it's something natural for the cloud right well it could be a web service right",
    "start": "109600",
    "end": "115040"
  },
  {
    "text": "somebody could create this as a third party web service and say hey ship me all of your photos and i will",
    "start": "115040",
    "end": "120320"
  },
  {
    "text": "take care of this for you right now the problem with that is maybe you don't want to hand all your personal photos over to this third party",
    "start": "120320",
    "end": "126320"
  },
  {
    "text": "right now you could try and buy this as an app that you actually run in the cloud yourself",
    "start": "126320",
    "end": "131440"
  },
  {
    "text": "but now you've got to remember to invoke it and you've got to figure out which photos to run it over if you're like me you do you create thousands of photos on a trip",
    "start": "131440",
    "end": "138959"
  },
  {
    "text": "and you've got tens of thousands or more photos in your various buckets and you've got to now figure out which",
    "start": "138959",
    "end": "144160"
  },
  {
    "text": "ones am i going to run it over which is tedious well you could try and automate this stuff right you could set up a recurring",
    "start": "144160",
    "end": "150400"
  },
  {
    "text": "workflow that goes in scans your bucket finds the new guys and then runs it",
    "start": "150400",
    "end": "155519"
  },
  {
    "text": "but now you've got to remember to run this and then turn it off so that you're not paying for it for 11 months out of the year and so forth right",
    "start": "155519",
    "end": "162400"
  },
  {
    "text": "and of course you did this for one app now what happens another app comes along say something that does face recognition",
    "start": "162400",
    "end": "167840"
  },
  {
    "text": "and tags all your friends right you have the same problem and when you get that one done another app comes along and so forth",
    "start": "167840",
    "end": "174319"
  },
  {
    "text": "right so the challenge here is event driven computing is something that you are you know the",
    "start": "174319",
    "end": "180400"
  },
  {
    "text": "challenge well let me let me talk some more about issues before i get to event driven computing there's another place where",
    "start": "180400",
    "end": "186800"
  },
  {
    "text": "this shows up right i've talked here about something consumer-like like uploading files to s3 let's suppose",
    "start": "186800",
    "end": "194239"
  },
  {
    "text": "you're a developer and you're developing some app that's going to involve launching ec2 instances",
    "start": "194239",
    "end": "199360"
  },
  {
    "text": "all right so you do that but if you're going to make your app fit into the larger ecosystem that your",
    "start": "199360",
    "end": "204640"
  },
  {
    "text": "company has you might have to do something like like say make sure that you're properly monitoring this thing right suppose your",
    "start": "204640",
    "end": "210720"
  },
  {
    "text": "app is highly available and so you want to be able to detect if this instance went down well you the developer right now are going to have to",
    "start": "210720",
    "end": "217040"
  },
  {
    "text": "make sure you set the monitors and the alarms on this thing did you remember to do that let's suppose your app has to be secure",
    "start": "217040",
    "end": "222959"
  },
  {
    "text": "too and your company has an intrusion detection service that wants to know about all of the ec2 instances that are running for your company well",
    "start": "222959",
    "end": "229760"
  },
  {
    "text": "did you remember to tell it about it did you write that in your code or let's suppose your company's cost conscious and they want you to tag that",
    "start": "229760",
    "end": "236640"
  },
  {
    "text": "instance with the appropriate cost allocation tag so your bill is done the right way all of this stuff is stuff",
    "start": "236640",
    "end": "242480"
  },
  {
    "text": "that a developer has to remember in order to write their application so that speed of development has gone from i wrote my app",
    "start": "242480",
    "end": "249360"
  },
  {
    "text": "i launched an ec2 instance and i'm off and running too i wrote code to launch an ec2 instance let's see i have to go through the",
    "start": "249360",
    "end": "255519"
  },
  {
    "text": "checklist do i do all the things the security guys want do i do all the things the monitoring and the operations guys want",
    "start": "255519",
    "end": "261199"
  },
  {
    "text": "am i doing all things the finance guys want right and so the problem is is we've slowed it",
    "start": "261199",
    "end": "267199"
  },
  {
    "text": "down right this is the traditional way now let's imagine an event driven world and how you would do things there",
    "start": "267199",
    "end": "272960"
  },
  {
    "text": "well your phone is going to upload that image to s3 and what you want is that an event is generated that can tell all the",
    "start": "272960",
    "end": "279840"
  },
  {
    "text": "interested parties about that upload now what can happen is you can have things that respond to",
    "start": "279840",
    "end": "286000"
  },
  {
    "text": "those events that do all these things that you wanted right you get your photo index by its gps location",
    "start": "286000",
    "end": "291840"
  },
  {
    "text": "some app that the phone never heard of is going to add all of the relevant things to the photo apps to the photo albums and yet another app",
    "start": "291840",
    "end": "299199"
  },
  {
    "text": "that was written by an entirely different party can sit there and tag it with your friend references right and ideally all",
    "start": "299199",
    "end": "305919"
  },
  {
    "text": "you had to do was simply buy these cool apps you didn't have to think about the management infrastructure you didn't have to think",
    "start": "305919",
    "end": "312000"
  },
  {
    "text": "about cooperation between the developers and so forth same thing if we think about the ec2",
    "start": "312000",
    "end": "317039"
  },
  {
    "text": "instance being launched what you'd like is that an event gets generated again that tells everybody this instance was launched",
    "start": "317039",
    "end": "323440"
  },
  {
    "text": "and now in response to that we can have the monitors and alarms being set by something like a lambda function we can",
    "start": "323440",
    "end": "329280"
  },
  {
    "text": "have the intrusion detection system being notified hey they need to worry about this thing and maybe those cost allocation tags are",
    "start": "329280",
    "end": "336080"
  },
  {
    "text": "just again automatically added right and again the idea is you don't have to do anything as a",
    "start": "336080",
    "end": "341280"
  },
  {
    "text": "developer other than launch that ec2 instance all of these peripherals that you really don't care about as the",
    "start": "341280",
    "end": "346800"
  },
  {
    "text": "as the developer of the application now get pushed away and so that's the key value proposition",
    "start": "346800",
    "end": "354000"
  },
  {
    "text": "here this is what makes it agile this is what lets you respond in real time and so forth well so lambda functions are part of",
    "start": "354000",
    "end": "361199"
  },
  {
    "text": "that but how do i get these events and that's a lot of what this talk is going to be",
    "start": "361199",
    "end": "366880"
  },
  {
    "text": "about now if you get no help from the system then life is kind of a matter is is",
    "start": "366880",
    "end": "372319"
  },
  {
    "text": "pretty miserable and you get these anti-patterns which we see today for example imagine scanning finding",
    "start": "372319",
    "end": "378319"
  },
  {
    "text": "those s3 upload files right here i've shown three s3 buckets with tens of thousands of files in them or",
    "start": "378319",
    "end": "384479"
  },
  {
    "text": "maybe millions of files if this is something bigger than that right how am i going to find the files that",
    "start": "384479",
    "end": "389600"
  },
  {
    "text": "have changed well periodically i do a list s3 bucket and i'm going to get a million objects in here say and then these three objects",
    "start": "389600",
    "end": "396720"
  },
  {
    "text": "come along and now a little later if say a minute later i'm going to do another list buckets and i'm going to list that to",
    "start": "396720",
    "end": "402080"
  },
  {
    "text": "find a million objects plus three right and then i'm going to do a diff between these guys and again i'm going",
    "start": "402080",
    "end": "407680"
  },
  {
    "text": "to be differing a million objects in order to find three guys this is very inefficient i'm basically spending time proportional",
    "start": "407680",
    "end": "414319"
  },
  {
    "text": "to the amount of data i've stored instead of time proportional to the number of things that have changed",
    "start": "414319",
    "end": "421039"
  },
  {
    "text": "we see the same kind of anti-pattern when it comes to state information in aws if you think",
    "start": "421039",
    "end": "426720"
  },
  {
    "text": "about ec2 if you had some company that was running say those 35 000 instances that netflix mentioned",
    "start": "426720",
    "end": "432800"
  },
  {
    "text": "if they wanted to know which instances have recently been created or recently been destroyed so they could",
    "start": "432800",
    "end": "438479"
  },
  {
    "text": "have a dashboard of that that again have to do the same anti-pattern describe the instances get thousands of these",
    "start": "438479",
    "end": "444720"
  },
  {
    "text": "guys back periodically do it again find those three guys that showed up",
    "start": "444720",
    "end": "450560"
  },
  {
    "text": "hello and then do a diff in order to get three objects back right so what we really want is an event log",
    "start": "450560",
    "end": "458880"
  },
  {
    "text": "we want this idea that if data is coming in and being stored among this huge amount of data that's already there",
    "start": "458880",
    "end": "465520"
  },
  {
    "text": "that somehow efficiently the system would essentially give us a notification a record for each one of these",
    "start": "465520",
    "end": "471919"
  },
  {
    "text": "because now we can turn this back to the old way that we now have computing which is we can now apply a function to",
    "start": "471919",
    "end": "477360"
  },
  {
    "text": "this thing like a lambda function all right well up till now the only help",
    "start": "477360",
    "end": "484000"
  },
  {
    "text": "that we gave you in aws for this was cloudtrail cloudtrail basically records all of the",
    "start": "484000",
    "end": "489440"
  },
  {
    "text": "api calls that customers make to aws to most aws services and then puts them into a bucket for",
    "start": "489440",
    "end": "496479"
  },
  {
    "text": "each customer they group them out and they give for each customer a list of eight of s3 files that have a",
    "start": "496479",
    "end": "502720"
  },
  {
    "text": "log of all of those api calls so this is your first approximation of an event log but it's not for everything",
    "start": "502720",
    "end": "509039"
  },
  {
    "text": "yet right it's just for the api calls so that's a good start but we want more",
    "start": "509039",
    "end": "514800"
  },
  {
    "text": "than that and two of the things that we're announcing at reinvent that werner has alluded to is s3",
    "start": "514800",
    "end": "521279"
  },
  {
    "text": "is going to start offering you the ability to get a queue of notifications for a bucket that you've enabled that",
    "start": "521279",
    "end": "526880"
  },
  {
    "text": "way so if you specify your s for your s3 bucket that you'd like to get notifications those will get generated by s3 so you're",
    "start": "526880",
    "end": "533680"
  },
  {
    "text": "getting exactly what i described i want for that image app right now event notifications actually can be",
    "start": "533680",
    "end": "539920"
  },
  {
    "text": "consumed in three different ways i've shown it here going to an sqs queue but you can also have it go",
    "start": "539920",
    "end": "545040"
  },
  {
    "text": "directly to lambda so that you don't have to worry about managing that queue or you can have it go to sns so that you",
    "start": "545040",
    "end": "550160"
  },
  {
    "text": "get notifications the other one that we announced at reinvent is dynamo streams",
    "start": "550160",
    "end": "556160"
  },
  {
    "text": "this is dynamo essentially exporting a transactional log of all the updates for a table that's been enabled that way",
    "start": "556160",
    "end": "562640"
  },
  {
    "text": "so again if you specify for a given table that you'd like to learn about all the changes that have happened to it",
    "start": "562640",
    "end": "568080"
  },
  {
    "text": "what you're going to get is something that looks a lot like a kinesis log and it's going to be an exact transactional log of those updates with",
    "start": "568080",
    "end": "574720"
  },
  {
    "text": "the order in which they were applied so again this gives you exactly what you need and lambda is integrated with",
    "start": "574720",
    "end": "580399"
  },
  {
    "text": "this by the way or will be very soon so that it will be able to consume these so for two of these key data services",
    "start": "580399",
    "end": "587279"
  },
  {
    "text": "what we've given you is the ability to get exactly that event log in an efficient manner but where we",
    "start": "587279",
    "end": "592720"
  },
  {
    "text": "want to go in the long run is we want to have this be pervasive across all of aws right",
    "start": "592720",
    "end": "598640"
  },
  {
    "text": "so what we'd like to do is that for all of the like cloud trails currently gives you a",
    "start": "598640",
    "end": "604240"
  },
  {
    "text": "log of all of the synchronous api calls that clients do we'd like to give you an event log for all of the asynchronous",
    "start": "604240",
    "end": "610240"
  },
  {
    "text": "service events that might happen because wouldn't it be interesting to know if an ec2 instance terminated",
    "start": "610240",
    "end": "615279"
  },
  {
    "text": "without your having called terminate wouldn't it be nice to know that a bucket got deleted or a table got",
    "start": "615279",
    "end": "620959"
  },
  {
    "text": "deleted or an rdsha instance did a primary failover these are all events that we record in the control plane of",
    "start": "620959",
    "end": "627120"
  },
  {
    "text": "our services and we'd like to expose those to customers so that they can then leverage that right",
    "start": "627120",
    "end": "632480"
  },
  {
    "text": "the other thing we'd like to do is for all of the other data storage services that we've got we'd like to give you that same",
    "start": "632480",
    "end": "638000"
  },
  {
    "text": "ability to optionally specify you know for this entity like a redshift table or",
    "start": "638000",
    "end": "643279"
  },
  {
    "text": "something like that i'd like to get an event log of all the things that have changed so our vision for the long run",
    "start": "643279",
    "end": "649360"
  },
  {
    "text": "is that all of aws is going to give you these kinds of event logs so that you can then start using things",
    "start": "649360",
    "end": "654720"
  },
  {
    "text": "like lambda or other things like that in order to have this event-driven style of computing",
    "start": "654720",
    "end": "660720"
  },
  {
    "text": "so what we're aiming for is a unified vision of event locks right where the whole platform is going to",
    "start": "660720",
    "end": "666160"
  },
  {
    "text": "support this but there is a challenge here is you if you'll notice i talked about s3 publishing to an sqs",
    "start": "666160",
    "end": "672640"
  },
  {
    "text": "queue or to s s and i talked about dynamo streams being a kinesis-like thing you",
    "start": "672640",
    "end": "678079"
  },
  {
    "text": "might be going wow okay so how many of these things am i going to have to learn am i going to have to learn how to program against",
    "start": "678079",
    "end": "683360"
  },
  {
    "text": "dynamo streams against sqs queues maybe against this archive format that cloudtrail provides",
    "start": "683360",
    "end": "689360"
  },
  {
    "text": "for writing things out as a sequence of s3 objects there's a kinesis stream you know some",
    "start": "689360",
    "end": "694399"
  },
  {
    "text": "people might use kinesis streams in order to publish these events is that going to be different from the dynamo streams",
    "start": "694399",
    "end": "699760"
  },
  {
    "text": "is somebody else going to come along and say publish a different s3 archive object format all of these things are different and",
    "start": "699760",
    "end": "705760"
  },
  {
    "text": "what we want to avoid is that tower of babel and get to the point where we have sort of a minimum number of these frameworks",
    "start": "705760",
    "end": "711440"
  },
  {
    "text": "that you have to learn about and we think that the minimum that has to be supported is two",
    "start": "711440",
    "end": "716639"
  },
  {
    "text": "in particular you want to be able to support both ordered and unordered event logs because there's",
    "start": "716639",
    "end": "723040"
  },
  {
    "text": "a fundamental difference in the complexity of processing these things but what we'd like there is essentially",
    "start": "723040",
    "end": "728240"
  },
  {
    "text": "all the services to prop to to emit logs in these two forms and then enable the ability to have transformers",
    "start": "728240",
    "end": "734800"
  },
  {
    "text": "that allow you to convert them to a form that you might want right so for example if somebody published ask qs and you wanted sns",
    "start": "734800",
    "end": "741360"
  },
  {
    "text": "notifications to your to your phone or to your email there should be an easy converter that can say consume that sqsq",
    "start": "741360",
    "end": "748639"
  },
  {
    "text": "a lambda function or something and then puts it into sns right so that's our vision of where we want to",
    "start": "748639",
    "end": "753839"
  },
  {
    "text": "go now the benefits you get from doing this as an ecosystem where everybody participates is kind of",
    "start": "753839",
    "end": "760639"
  },
  {
    "text": "like what we've seen with storage systems think about the file system on your disk of your machine",
    "start": "760639",
    "end": "766160"
  },
  {
    "text": "right that disk at the lowest level is just a sequence of bytes being stored persistently right",
    "start": "766160",
    "end": "771279"
  },
  {
    "text": "the first thing people did is they put a file system on top of why well that way everybody can have their own separate sequence of bytes and you",
    "start": "771279",
    "end": "777839"
  },
  {
    "text": "can start building these tools that allow you to manage and manipulate byte sequences right you get",
    "start": "777839",
    "end": "782880"
  },
  {
    "text": "a file system with move operators you can list the files you can do all this stuff without knowing anything about",
    "start": "782880",
    "end": "787920"
  },
  {
    "text": "what's in the files but then on top of that what you can do is start putting structure onto the",
    "start": "787920",
    "end": "793120"
  },
  {
    "text": "format onto the data itself and now you have application specific state and you can start building tools",
    "start": "793120",
    "end": "798720"
  },
  {
    "text": "around that right you can build tools around say a specific type say all the things around word files",
    "start": "798720",
    "end": "803920"
  },
  {
    "text": "but you can also build tools that are more general just think about how search is implemented on your disk every file type that has strings in it",
    "start": "803920",
    "end": "810959"
  },
  {
    "text": "is searched by the search facility right so if i know enough about the types then i can start doing this kind of thing",
    "start": "810959",
    "end": "817279"
  },
  {
    "text": "where i build search across a large fraction of my files because i know what kinds of data formats have been are there and what the",
    "start": "817279",
    "end": "823360"
  },
  {
    "text": "standards are on that so we'd like to do the same kind of a thing for event logs right",
    "start": "823360",
    "end": "828399"
  },
  {
    "text": "at the bottom an event log is just a sequence of uninterpreted records but really what you'd like to do is have",
    "start": "828399",
    "end": "834000"
  },
  {
    "text": "lots of them so that say each service can have their own or each customer can have their own and you'd like to start building tools",
    "start": "834000",
    "end": "840639"
  },
  {
    "text": "that take advantage of that that manage and manipulate sequences of these records imagine for example i want to",
    "start": "840639",
    "end": "846160"
  },
  {
    "text": "archive my event log well it should be really trivial to build a tool that says hey plug this in to sqs",
    "start": "846160",
    "end": "851519"
  },
  {
    "text": "or into any of these kinds of logs and just archive it right and then if i start adding standard type",
    "start": "851519",
    "end": "857600"
  },
  {
    "text": "information to this so that i have semi-structured data then i can start building things that are at",
    "start": "857600",
    "end": "862880"
  },
  {
    "text": "a more sophisticated level one example of that is dynamo update streams these are ordered streams but",
    "start": "862880",
    "end": "869040"
  },
  {
    "text": "since you know they're dynamo streams you can build something like cross region replication",
    "start": "869040",
    "end": "874480"
  },
  {
    "text": "for any dynamo table simply by knowing this is an update a stream of update records for dynamo",
    "start": "874480",
    "end": "880320"
  },
  {
    "text": "i'll talk a little bit more about that later on so this is sort of the benefits you get by building this kind of ecosystem",
    "start": "880320",
    "end": "888160"
  },
  {
    "text": "another key thing you get out of that is that you get a reusable processing infrastructure",
    "start": "888160",
    "end": "893680"
  },
  {
    "text": "processing these things is actually not trivial for example think about the scale that",
    "start": "893680",
    "end": "899279"
  },
  {
    "text": "you have to do for this if i have a dynamodb table or s3 bucket i may be getting huge volumes of data in",
    "start": "899279",
    "end": "906880"
  },
  {
    "text": "right now as long as that data can be handled by a single process i'm fine i just run say one ec2 instance",
    "start": "906880",
    "end": "913519"
  },
  {
    "text": "lambda will try and abstract this out but lambda has to implement the following kinds of things if i have data that's more than one",
    "start": "913519",
    "end": "919839"
  },
  {
    "text": "machine can handle then i'm going to have to run multiple of these machines and manage that right",
    "start": "919839",
    "end": "925199"
  },
  {
    "text": "if i want high availability because if these event logs are not as available as the services themselves",
    "start": "925199",
    "end": "931199"
  },
  {
    "text": "then i've kind of added an achilles heel to the availability of my services then what i've got to do is be prepared",
    "start": "931199",
    "end": "937759"
  },
  {
    "text": "for the idea that one of these processing instances crashes and somehow or another",
    "start": "937759",
    "end": "942800"
  },
  {
    "text": "i've got to do something that allows me to get a new one to jump in there take over where the old one was going",
    "start": "942800",
    "end": "948240"
  },
  {
    "text": "whatever checkpointing happened i've got to take care of i've got to get that checkpoint and then keep going and",
    "start": "948240",
    "end": "954079"
  },
  {
    "text": "then of course because things are elastic it gets even more complicated right here i am i've got a stream that started out",
    "start": "954079",
    "end": "960639"
  },
  {
    "text": "small say it's my a service that you know i have an s3 bucket where i just started with my phone and my photo app",
    "start": "960639",
    "end": "966800"
  },
  {
    "text": "i'm getting a little bit of traffic but then i get a lot of popularity and now i'd better essentially ramp up",
    "start": "966800",
    "end": "973360"
  },
  {
    "text": "right but maybe during the night this thing dies down and we don't want to pay for these instances if we're not using them",
    "start": "973360",
    "end": "979360"
  },
  {
    "text": "so i've got to essentially get rid of that and then if there's say a hot spot in one spot i've got to be able to do",
    "start": "979360",
    "end": "985360"
  },
  {
    "text": "something like load balance and have some of that traffic be taken over by another instance that jumps in",
    "start": "985360",
    "end": "991600"
  },
  {
    "text": "all of this muck is stuff that you don't want to deal with right so the goal is is you've got to have",
    "start": "991600",
    "end": "996639"
  },
  {
    "text": "some standard processing frameworks for this lambda is one of those but in order to do lambda you need some low-level",
    "start": "996639",
    "end": "1003120"
  },
  {
    "text": "processing infrastructures in order to enable things like lambda at the lowest level of abstraction",
    "start": "1003120",
    "end": "1008880"
  },
  {
    "text": "you've basically got this uninterpreted sequence of bytes and as i said before a key characteristic that you have to",
    "start": "1008880",
    "end": "1014560"
  },
  {
    "text": "think about is whether you've got ordered records or whether you've got unordered records an example of ordered is the dynamo",
    "start": "1014560",
    "end": "1021279"
  },
  {
    "text": "streams why would you want that well because if i'm doing something like representing a bank account a bank using dynamodb",
    "start": "1021279",
    "end": "1028558"
  },
  {
    "text": "where say each item is a bank account i really care whether the order of deposits and of of up of uh deposits and",
    "start": "1028559",
    "end": "1036160"
  },
  {
    "text": "debits is done in the right order say i do cross region replication on this and somebody's looking at my bank account on",
    "start": "1036160",
    "end": "1042079"
  },
  {
    "text": "the other side if i do these out of order my bank account could go below zero or do other weird things right so order",
    "start": "1042079",
    "end": "1047678"
  },
  {
    "text": "matters and so you have to have it if order doesn't matter like for example uploading those image",
    "start": "1047679",
    "end": "1054400"
  },
  {
    "text": "files into s3 they're really all independent of each other right so order is not important here",
    "start": "1054400",
    "end": "1059520"
  },
  {
    "text": "and if it doesn't matter then you want to take advantage of that because it turns out you can build a simpler processing model it actually has greater",
    "start": "1059520",
    "end": "1065919"
  },
  {
    "text": "concurrency and so what we need is to be able to support both sqs provides you a good way of",
    "start": "1065919",
    "end": "1072400"
  },
  {
    "text": "processing a low level when things are unordered imagine all of those records coming into the sqs queue basically i can have a",
    "start": "1072400",
    "end": "1079280"
  },
  {
    "text": "flight of stateless machines that sit there just grabbing things off the queue and then doing whatever they're doing maybe",
    "start": "1079280",
    "end": "1085360"
  },
  {
    "text": "putting out that thumbnail there and if somebody in the middle say that middle guy is busy processing an image file",
    "start": "1085360",
    "end": "1090480"
  },
  {
    "text": "that is you know a four gigabyte sized uh file or something everybody else can keep going around it",
    "start": "1090480",
    "end": "1096640"
  },
  {
    "text": "it's a very simple processing model um so that is a simple thing to do and",
    "start": "1096640",
    "end": "1102880"
  },
  {
    "text": "in fact that is the kind of thing that lambda is best for because lambda is most naturally a case where you have",
    "start": "1102880",
    "end": "1109280"
  },
  {
    "text": "functions that operate independently on individual data items allows for huge concurrency",
    "start": "1109280",
    "end": "1114799"
  },
  {
    "text": "has a very simple high availability model and so forth but if you want ordering",
    "start": "1114799",
    "end": "1121360"
  },
  {
    "text": "oh and you know you can take advantage of things like uh auto scaling groups in order to be able to to get the availability on these guys if",
    "start": "1121360",
    "end": "1128160"
  },
  {
    "text": "you want ordering things are more challenging right because if say i had a total order",
    "start": "1128160",
    "end": "1133679"
  },
  {
    "text": "for my event log i've got a problem here if that event log has more traffic than a single machine can handle how am i going to",
    "start": "1133679",
    "end": "1140400"
  },
  {
    "text": "honor the ordering and a key thing that turns out to be true for most applications that",
    "start": "1140400",
    "end": "1145520"
  },
  {
    "text": "need ordered logs is there's actually only a partial ordering that's required i've shown that here in this event log",
    "start": "1145520",
    "end": "1152080"
  },
  {
    "text": "you imagine that this event log that the records that have an ordering constraint with themselves are the ones with the same color what",
    "start": "1152080",
    "end": "1159039"
  },
  {
    "text": "would be an example of this well think about say the metering records that we use in aws for your bills well every customer gets",
    "start": "1159039",
    "end": "1166400"
  },
  {
    "text": "their own set of usage records and i care about the order in which those show up because of a variety of",
    "start": "1166400",
    "end": "1172400"
  },
  {
    "text": "ways in which you calculate the cost but every customer is actually independent of each other so what i could do instead of",
    "start": "1172400",
    "end": "1179200"
  },
  {
    "text": "overloading this one machine and processing everything is i can have a bunch of machines and partition this log out by the",
    "start": "1179200",
    "end": "1185440"
  },
  {
    "text": "partial order and so what can happen is if i did this where i essentially say everybody that",
    "start": "1185440",
    "end": "1190960"
  },
  {
    "text": "belongs to the same order constraint is going to be grouped together then i can parallelize this thing out i",
    "start": "1190960",
    "end": "1196480"
  },
  {
    "text": "don't have the full concurrence of the unordered model because i have this constraint now that record six has to be after four and",
    "start": "1196480",
    "end": "1203200"
  },
  {
    "text": "record six had to come to the same machine that was processing for but i can scale this thing out quite dramatically",
    "start": "1203200",
    "end": "1209440"
  },
  {
    "text": "so in order to do this if you ask well what kinds of machinery i need in order",
    "start": "1209440",
    "end": "1214720"
  },
  {
    "text": "to implement this well this is what kinesis and the kinesis client libraries do and i'm not going to go into the details",
    "start": "1214720",
    "end": "1220159"
  },
  {
    "text": "here but just illustrate this is what it takes in order to give you that processing model it's considerably more complicated right",
    "start": "1220159",
    "end": "1226320"
  },
  {
    "text": "so that's why if you can stay away from ordering you want that simpler model if you need the ordering we're going to enable it",
    "start": "1226320",
    "end": "1232159"
  },
  {
    "text": "with the framework that takes care of that and as i said kcl actually enables you",
    "start": "1232159",
    "end": "1239200"
  },
  {
    "text": "to do this so at a low level you've got two frameworks already for processing things you could run say with sqs and have a fleet of your",
    "start": "1239200",
    "end": "1246720"
  },
  {
    "text": "ec2 instances you could run with the kcl and a fleet of ec2 instances that will give you complete control over doing these things",
    "start": "1246720",
    "end": "1255360"
  },
  {
    "text": "one thing that you may have noticed is that i've been talking about kinesis as a way as our standard processing framework and",
    "start": "1255600",
    "end": "1262880"
  },
  {
    "text": "yet if you were to go read the details of dynamo update of dynamo streams and compare them to the kinesis api you",
    "start": "1262880",
    "end": "1269280"
  },
  {
    "text": "notice that they're slightly different you'd notice that there's a different maximum record size that dynamo offers",
    "start": "1269280",
    "end": "1275039"
  },
  {
    "text": "from kinesis and this has to do with the internals of dynamo eventually this is going to disappear these differences you're going",
    "start": "1275039",
    "end": "1281679"
  },
  {
    "text": "to notice that dynamodb controls pretty much all aspects of writing to streams so names of streams provisioning of the",
    "start": "1281679",
    "end": "1288480"
  },
  {
    "text": "number of shards resharting all of that stuff is handled by dynamodb whereas kinesis allows you to control that",
    "start": "1288480",
    "end": "1295039"
  },
  {
    "text": "and the apis are also slightly different in dynamodb the list stream and the describe screen",
    "start": "1295039",
    "end": "1300960"
  },
  {
    "text": "apis return service specific information such as the table schema right so it's",
    "start": "1300960",
    "end": "1306320"
  },
  {
    "text": "different and you might be going well geez did you guys just do the thing that you were not supposed to i have to learn dynamo update streams",
    "start": "1306320",
    "end": "1312880"
  },
  {
    "text": "and i have to learn kinesis and the answer is we've abstracted it out at the kinesis client library level",
    "start": "1312880",
    "end": "1318400"
  },
  {
    "text": "and so if you program using that library you are oblivious you're of not agnostic essentially to whether",
    "start": "1318400",
    "end": "1324720"
  },
  {
    "text": "you're programming against the dynamodb update stream or against a kinesis stream so we are trying to keep it down",
    "start": "1324720",
    "end": "1330720"
  },
  {
    "text": "to basically two processing models at the low level well once you have this stuff now you",
    "start": "1330720",
    "end": "1337600"
  },
  {
    "text": "can start building these higher level things right if i was describing you know part of the reason i described the whole sqs model",
    "start": "1337600",
    "end": "1343760"
  },
  {
    "text": "is because you can think about that and say hmm i can see how lambda might be implemented on these things right",
    "start": "1343760",
    "end": "1349520"
  },
  {
    "text": "and so at the next level up lambda essentially takes advantage of these higher level system of these lower level",
    "start": "1349520",
    "end": "1355600"
  },
  {
    "text": "processing frameworks in order to give you something that gets rid of all of the muck of the management right no more armies",
    "start": "1355600",
    "end": "1361840"
  },
  {
    "text": "no more launching those ec2 instances no auto scaling groups and so forth one interesting thing though that",
    "start": "1361840",
    "end": "1367600"
  },
  {
    "text": "happens once you give people something like lambda is they start going well wow how many lambda functions have already",
    "start": "1367600",
    "end": "1373200"
  },
  {
    "text": "been written that i could just reuse like i really don't actually want to write any code myself can't there be an ecosystem of functions",
    "start": "1373200",
    "end": "1380480"
  },
  {
    "text": "that somebody else has written and so there's an opportunity here that once we give people things like lambda",
    "start": "1380480",
    "end": "1386799"
  },
  {
    "text": "various third parties can start building things like an archive to s3 capability or an update to redshift capability or a",
    "start": "1386799",
    "end": "1394320"
  },
  {
    "text": "publish to sns all these things can start being provided and because we're trying to standardize",
    "start": "1394320",
    "end": "1399919"
  },
  {
    "text": "so that everybody is giving you the same types of event logs and everybody knows that there's certain standards about the data structure",
    "start": "1399919",
    "end": "1406720"
  },
  {
    "text": "formats and so forth that's going to enable people to start building these tools that can be reused right",
    "start": "1406720",
    "end": "1412799"
  },
  {
    "text": "so i'm going to hand over to my colleague here and he's going to give you an example of how this can dramatically speed up",
    "start": "1412799",
    "end": "1419280"
  },
  {
    "text": "the rate at which people build things not just an individual developer but in fact",
    "start": "1419280",
    "end": "1425360"
  },
  {
    "text": "people that never know each other",
    "start": "1425360",
    "end": "1431840"
  },
  {
    "text": "thanks marvin so let me see if i can switch over here or not",
    "start": "1432080",
    "end": "1439200"
  },
  {
    "text": "all right so picture yourself in the shoes of a developer who's amped after attending reinvent and",
    "start": "1440480",
    "end": "1446000"
  },
  {
    "text": "she's met a couple of other people who she wants to make a startup with but she doesn't know that yet at this point she wants to make",
    "start": "1446000",
    "end": "1451840"
  },
  {
    "text": "something to do with social networks let's say an image sharing application",
    "start": "1451840",
    "end": "1456880"
  },
  {
    "text": "so she starts by writing a simple application that uploads uh the apps that her end users",
    "start": "1456880",
    "end": "1462880"
  },
  {
    "text": "are taking from their phones directly into s3 now sd has got her",
    "start": "1462880",
    "end": "1467919"
  },
  {
    "text": "covered with 11 nines of durability and exceptionally high availability so that's all good and now her users can",
    "start": "1467919",
    "end": "1474480"
  },
  {
    "text": "upload these photos and just be able to download them as they see fit another one of her friends",
    "start": "1474480",
    "end": "1482400"
  },
  {
    "text": "basically comes in and says well i want to be able to index these images i want to make a web ui for all the photos that",
    "start": "1482400",
    "end": "1488640"
  },
  {
    "text": "people have uploaded because i want to let them do more than just backing up of the pictures i want to let them search",
    "start": "1488640",
    "end": "1494480"
  },
  {
    "text": "for just not only their photos but photos of their friends and so forth so now this friend is is coming in and",
    "start": "1494480",
    "end": "1500400"
  },
  {
    "text": "saying well i want to extend your application and i don't want to go ahead and force you to rewrite your entire stack i want",
    "start": "1500400",
    "end": "1506000"
  },
  {
    "text": "to be able to extend on top of what you've already built and at this point with the original developer's permission",
    "start": "1506000",
    "end": "1515039"
  },
  {
    "text": "all you have to do is add a lambda function that attaches to the s3 bucket in the s3 console or in the lambda",
    "start": "1515039",
    "end": "1521440"
  },
  {
    "text": "console you can actually create a configuration that allows you to attach a lambda function that will be executed",
    "start": "1521440",
    "end": "1527279"
  },
  {
    "text": "every time an update is made to this bucket now our friend the original developer sally has given permission to a friend",
    "start": "1527279",
    "end": "1534080"
  },
  {
    "text": "to be able to subscribe to these events so every time a new image comes in his program gets a notification and",
    "start": "1534080",
    "end": "1540480"
  },
  {
    "text": "executes a particular lambda function now this lambda function you might think is actually uh you know a lot of code it's not it's",
    "start": "1540480",
    "end": "1546640"
  },
  {
    "text": "only about 20 lines of code and i'll show you that in a second a third developer comes in and says well",
    "start": "1546640",
    "end": "1552480"
  },
  {
    "text": "i want to be able to give people the ability to like a particular image all right so the national place to store",
    "start": "1552480",
    "end": "1558720"
  },
  {
    "text": "that is another dynamodb table where you're going to store all the likes so this says things like marvin",
    "start": "1558720",
    "end": "1563919"
  },
  {
    "text": "likes a photo x that kwaja has taken and now these users have the ability to start liking",
    "start": "1563919",
    "end": "1570080"
  },
  {
    "text": "photos well the second developer is saying well i've got all these pictures indexed by by their image names and and",
    "start": "1570080",
    "end": "1576320"
  },
  {
    "text": "the person who's taking the image and so forth i want to extend what the third developer has done as well",
    "start": "1576320",
    "end": "1582240"
  },
  {
    "text": "i want to be able to track how many likes a particular photo has gotten",
    "start": "1582240",
    "end": "1587760"
  },
  {
    "text": "so he attaches another lambda function to the dynamodb streams of the likes",
    "start": "1588080",
    "end": "1593600"
  },
  {
    "text": "table and this function is all it's doing is subscribing to the events that are",
    "start": "1593600",
    "end": "1599440"
  },
  {
    "text": "happening in the track in the likes table figures out which image was like and goes and increments an atomic counter",
    "start": "1599440",
    "end": "1605520"
  },
  {
    "text": "in the images table to aggregate the number of likes that a particular image has gotten",
    "start": "1605520",
    "end": "1613840"
  },
  {
    "text": "now after he realizes that he can now track the number of likes that a particular image has gotten",
    "start": "1614559",
    "end": "1620240"
  },
  {
    "text": "he also wants to track who the most influential users are in this ecosystem and to do that he",
    "start": "1620240",
    "end": "1625440"
  },
  {
    "text": "wants to aggregate all of the rights all the likes that a particular user has gotten across",
    "start": "1625440",
    "end": "1630640"
  },
  {
    "text": "all of their images so he goes back to the lambda console makes a quick modification and all of a",
    "start": "1630640",
    "end": "1637200"
  },
  {
    "text": "sudden his code is updated to also aggregate the likes across all the pictures for a particular user all",
    "start": "1637200",
    "end": "1643120"
  },
  {
    "text": "he's doing is when he updates to the images table he finds out who the user is that uploaded the image in the first place",
    "start": "1643120",
    "end": "1648960"
  },
  {
    "text": "and he goes and updates it into the user's table in terms of the total number of votes that a user has gotten",
    "start": "1648960",
    "end": "1654480"
  },
  {
    "text": "now this isn't interesting right because you want to be able to track who the most popular users are in your ecosystem so you can engage them",
    "start": "1654480",
    "end": "1661279"
  },
  {
    "text": "and you can encourage them to upload more photos that drive the engagement of the rest of the community a fourth developer comes",
    "start": "1661279",
    "end": "1667600"
  },
  {
    "text": "in and says okay so now you've gotten to me the number of votes that a particular user has gotten",
    "start": "1667600",
    "end": "1674080"
  },
  {
    "text": "and now you know who the most influential users are and i want to be able to engage them and one of the natural ways to engage",
    "start": "1674080",
    "end": "1679919"
  },
  {
    "text": "with users is via sns mobile push notifications to send",
    "start": "1679919",
    "end": "1684960"
  },
  {
    "text": "notifications to their cell phones so with the third developer's permission",
    "start": "1684960",
    "end": "1690399"
  },
  {
    "text": "this fourth developer comes in attaches to the users tables dynamodb streams and upon every change",
    "start": "1690399",
    "end": "1696720"
  },
  {
    "text": "that is being made he can see if if the user is particularly popular or not and if any user is particularly popular",
    "start": "1696720",
    "end": "1703279"
  },
  {
    "text": "you can engage with them via vs sns mobile push now there's a lot of different things you can engage with",
    "start": "1703279",
    "end": "1708399"
  },
  {
    "text": "them on you can engage with them to tell them to come in and upload more photos or you can engage with them and tell them",
    "start": "1708399",
    "end": "1713440"
  },
  {
    "text": "hey please go ahead and send this advertisement on my behalf and since you have a bunch of fanfare",
    "start": "1713440",
    "end": "1718880"
  },
  {
    "text": "you'll get this notification pushed out and more people will get visibility and so forth the point is that when you're building",
    "start": "1718880",
    "end": "1724880"
  },
  {
    "text": "these applications you're not going to need to know all of what your capabilities are for this particular application up front",
    "start": "1724880",
    "end": "1731279"
  },
  {
    "text": "and what lambda and event driven computing gives you is the ability to continuously compose new capabilities",
    "start": "1731279",
    "end": "1737919"
  },
  {
    "text": "without having to deploy entirely new stacks without ever having to deploy a full stack for every new",
    "start": "1737919",
    "end": "1744640"
  },
  {
    "text": "functionality and without having to disrupt the existing stacks it allows you to deploy a function",
    "start": "1744640",
    "end": "1750640"
  },
  {
    "text": "attach it to a particular event and let it run regardless of the capacity that you need you don't have to",
    "start": "1750640",
    "end": "1755679"
  },
  {
    "text": "worry about that you don't have to worry about the operations and you can automatically react to events now i mentioned all of this is a",
    "start": "1755679",
    "end": "1762159"
  },
  {
    "text": "very low amount of code so let me go through and show you how much code we're actually talking about",
    "start": "1762159",
    "end": "1768398"
  },
  {
    "text": "so the first function that is subscribing to s3 and inserting data indexing the images",
    "start": "1770960",
    "end": "1776559"
  },
  {
    "text": "directly into dynamodb it's about 20 lines of code",
    "start": "1776559",
    "end": "1781840"
  },
  {
    "text": "the second function and this is after the modification has been made to also count the aggregate the total",
    "start": "1782399",
    "end": "1788399"
  },
  {
    "text": "votes a particular user has gotten it's another 20 lines of code and the third function is about 15 lines of code",
    "start": "1788399",
    "end": "1794640"
  },
  {
    "text": "which is basically looking at the user's table identifying the popular users and sending them an",
    "start": "1794640",
    "end": "1800080"
  },
  {
    "text": "sns mobile push notification the message here isn't that you can write this cool startup with 50 lines of",
    "start": "1800080",
    "end": "1806480"
  },
  {
    "text": "code really the message here is the composability it's the ability for multiple people",
    "start": "1806480",
    "end": "1812159"
  },
  {
    "text": "to work together and continuously add functionality in form of a crowdsourced startup that",
    "start": "1812159",
    "end": "1817919"
  },
  {
    "text": "you can continuously keep adding capabilities without ever having to worry about operations and so forth and the reason why this works really",
    "start": "1817919",
    "end": "1824399"
  },
  {
    "text": "well with s3 and sqs notifications is that you don't",
    "start": "1824399",
    "end": "1829600"
  },
  {
    "text": "really need to worry about the order in this particular case it doesn't matter which image you process after the other and this is why",
    "start": "1829600",
    "end": "1835440"
  },
  {
    "text": "s3 also exposes these uh notifications via sqs or sns notifications",
    "start": "1835440",
    "end": "1840559"
  },
  {
    "text": "so you're able to consume these with ec2 you can able you're able to consume this with lambda if you choose to the difference is",
    "start": "1840559",
    "end": "1847120"
  },
  {
    "text": "mainly along the lines of the new way to think about an application and the ability to decompose",
    "start": "1847120",
    "end": "1852480"
  },
  {
    "text": "that application into lots of small pieces that you can write yourself or have others write with you",
    "start": "1852480",
    "end": "1859278"
  },
  {
    "text": "martin",
    "start": "1862840",
    "end": "1865840"
  },
  {
    "text": "somebody started out with a fairly simple app you load a bunch of stuff into s3",
    "start": "1872880",
    "end": "1878480"
  },
  {
    "text": "and then a bunch of other people realized they could do something interesting with what was done there and without having to go to the original",
    "start": "1878480",
    "end": "1884960"
  },
  {
    "text": "developer and say hey can you add this in you send them an email maybe a day later they come back and say i'll think about",
    "start": "1884960",
    "end": "1891279"
  },
  {
    "text": "it a week later they do it if it's been exposed if this data has been exposed in",
    "start": "1891279",
    "end": "1896399"
  },
  {
    "text": "this event driven style with these event logs you can simply add it yourself so that second developer an hour after",
    "start": "1896399",
    "end": "1902720"
  },
  {
    "text": "they see this thing starting to go off can add this functionality and all they had to do was get the permission",
    "start": "1902720",
    "end": "1908000"
  },
  {
    "text": "from the first developer to have access to that event log and if you're say building something where you're looking for adoptance and",
    "start": "1908000",
    "end": "1914159"
  },
  {
    "text": "you're willing to make those event logs public you could imagine putting this thing out now anybody in the world",
    "start": "1914159",
    "end": "1919360"
  },
  {
    "text": "no people you don't know could sit there and go cool i'm going to add my functionality on top of this thing",
    "start": "1919360",
    "end": "1925200"
  },
  {
    "text": "and you could get this very viral behavior where in a very short period of time you could imagine in a day",
    "start": "1925200",
    "end": "1930320"
  },
  {
    "text": "that something like this takes off and people start adding in cool things you know the image recognition the",
    "start": "1930320",
    "end": "1936080"
  },
  {
    "text": "liking adding in all kinds of other things that build on top of that as long as everybody's thinking of it in terms",
    "start": "1936080",
    "end": "1941360"
  },
  {
    "text": "of publishing events in a form that adheres to some of the standard formats so you know what you're dealing with",
    "start": "1941360",
    "end": "1947039"
  },
  {
    "text": "then this thing can just build very quickly right so we've taken the cycle time down from",
    "start": "1947039",
    "end": "1952240"
  },
  {
    "text": "weeks to days and hours we hope now another example of something you can",
    "start": "1952240",
    "end": "1957440"
  },
  {
    "text": "build that's reusable is the cross region replication that i mentioned dynamo will give you basically an exact",
    "start": "1957440",
    "end": "1963440"
  },
  {
    "text": "transaction log for a table if you enable it that way and what that means is you could build a",
    "start": "1963440",
    "end": "1968480"
  },
  {
    "text": "lambda you could build something that will take those and go update the corresponding table in",
    "start": "1968480",
    "end": "1974640"
  },
  {
    "text": "other regions now order matters here and so just using lambda out of the box would be a little",
    "start": "1974640",
    "end": "1979760"
  },
  {
    "text": "complicated because you wouldn't get you know you have to worry about implementing those ordering semantics and so forth",
    "start": "1979760",
    "end": "1985279"
  },
  {
    "text": "and lambda is eventually we imagine that lambda is eventually going to evolve to the point where it starts giving you some support around it",
    "start": "1985279",
    "end": "1991279"
  },
  {
    "text": "but right now the best way to do this is with more lower level pro framework like these kinesis enabled uh",
    "start": "1991279",
    "end": "1997200"
  },
  {
    "text": "processing framework that i mentioned earlier and in fact we've released as open source exactly",
    "start": "1997200",
    "end": "2002559"
  },
  {
    "text": "this cross region replication is available now as a kcl enabled java app that you can run so that if you",
    "start": "2002559",
    "end": "2009360"
  },
  {
    "text": "enable the update that the streams from dynamodb you can now get cross-region",
    "start": "2009360",
    "end": "2014399"
  },
  {
    "text": "replication for yourself and if you wanted to do something like derive from this say the idea of i have",
    "start": "2014399",
    "end": "2020000"
  },
  {
    "text": "some materialized views that i want to derive from my table i could take that code which is open",
    "start": "2020000",
    "end": "2025039"
  },
  {
    "text": "source go look at the business logic in the middle that's relatively small replace that with something that essentially now",
    "start": "2025039",
    "end": "2031279"
  },
  {
    "text": "implements my materialized views and i'm off and running so again we've compressed the cycle time for",
    "start": "2031279",
    "end": "2036480"
  },
  {
    "text": "development dramatically with this well so you might be wondering how many",
    "start": "2036480",
    "end": "2042799"
  },
  {
    "text": "event logs am i going to have to deal with right there's a lot of aws services am i going to have to deal with an event log",
    "start": "2042799",
    "end": "2049520"
  },
  {
    "text": "from every service and in fact because we don't want to allow customers to see each other's events am i going to have an event log per",
    "start": "2049520",
    "end": "2055839"
  },
  {
    "text": "customer per service well it'd be nice if i had that it would certainly make it easier for customers to be able to understand what happened",
    "start": "2055839",
    "end": "2062240"
  },
  {
    "text": "with their service you know imagine my service starts behaving in a funny way right now i can go to the event log",
    "start": "2062240",
    "end": "2068079"
  },
  {
    "text": "for that service and say hey so what just happened and if it's like say oh i see an ec2 instance has terminated or something",
    "start": "2068079",
    "end": "2074000"
  },
  {
    "text": "like that or this table got deleted no wonder things aren't working that works well not so easy if i have",
    "start": "2074000",
    "end": "2080240"
  },
  {
    "text": "these event logs for each service for each customer to understand what's going on across say lots of services",
    "start": "2080240",
    "end": "2086000"
  },
  {
    "text": "so if i had one of these things that verner showed where you're using rds and you're using s3 and you're using",
    "start": "2086000",
    "end": "2091118"
  },
  {
    "text": "dynamodb and you've got maybe a cloudformation thing going on and cloudfront involved well now i've",
    "start": "2091119",
    "end": "2096800"
  },
  {
    "text": "still got to figure out what's going on across all of those things so that's still a little bit more complicated and again if you think about the data",
    "start": "2096800",
    "end": "2103359"
  },
  {
    "text": "plane if you think about the data going through s3 or dynamodb you don't really want to have an event automatically published for",
    "start": "2103359",
    "end": "2110000"
  },
  {
    "text": "everything going there right you only want it selectively for the entities the s3 buckets for the",
    "start": "2110000",
    "end": "2115040"
  },
  {
    "text": "dynamodb tables that you care about right so what we think is going to be",
    "start": "2115040",
    "end": "2120160"
  },
  {
    "text": "the right architecture to provide across aws is one where we provide each customer",
    "start": "2120160",
    "end": "2125200"
  },
  {
    "text": "with an event log for all of their so-called control plane events what i mean by this is basically imagine",
    "start": "2125200",
    "end": "2131440"
  },
  {
    "text": "taking cloudtrail all of the data there but then also all of the interesting events that happen that aren't synchronous",
    "start": "2131440",
    "end": "2137440"
  },
  {
    "text": "customer api calls things like your table got deleted and you're not quite sure why or your ec2 instance terminated",
    "start": "2137440",
    "end": "2143839"
  },
  {
    "text": "or you had a failover all those things i mentioned those are events that are not part of cloudtrails right now but we'd really like to get those in so",
    "start": "2143839",
    "end": "2150480"
  },
  {
    "text": "you basically have one event log that tells you all of the activities that are going on across all of your resources at that control",
    "start": "2150480",
    "end": "2157280"
  },
  {
    "text": "plane level now luckily the traffic volume for that kind of stuff is low enough to where we think just giving you one event log for",
    "start": "2157280",
    "end": "2163760"
  },
  {
    "text": "all of that will be reasonable and you can just apply filtering if you want to look at individual parts and so with this you're going to have an",
    "start": "2163760",
    "end": "2170079"
  },
  {
    "text": "easy way of understanding what's going on across your entire aws resource plan and then what we also want to do is for",
    "start": "2170079",
    "end": "2177119"
  },
  {
    "text": "each of the data source services we want them to start exposing the idea of an event log for their",
    "start": "2177119",
    "end": "2182800"
  },
  {
    "text": "entities so if you had something like a dynamodb table or the",
    "start": "2182800",
    "end": "2187839"
  },
  {
    "text": "or sorry a redshift table that would be the kind of thing that we envisioned having an event log for",
    "start": "2187839",
    "end": "2194319"
  },
  {
    "text": "well i've talked about aws services so far but really this should be extended up to our customers right customers are going to",
    "start": "2194560",
    "end": "2200960"
  },
  {
    "text": "be building services and applications and it seems like the same argument for why that would be useful down at our",
    "start": "2200960",
    "end": "2206079"
  },
  {
    "text": "level should apply to their level and so what we need to do is enable that what that means is that we're going to",
    "start": "2206079",
    "end": "2211200"
  },
  {
    "text": "have to allow customers to submit their own control plane events that can be added to the unified control plan event that i event",
    "start": "2211200",
    "end": "2218480"
  },
  {
    "text": "logged that i talked about and we're going to want them to start thinking about their data in the same way that we think about",
    "start": "2218480",
    "end": "2224400"
  },
  {
    "text": "dynamodb and s3 so if you had say widget.com which had widgets you can imagine them",
    "start": "2224400",
    "end": "2230160"
  },
  {
    "text": "starting to say well i'd like to have an event log per widget and what that means is we've got to make it easy for them to create",
    "start": "2230160",
    "end": "2236400"
  },
  {
    "text": "these event logs luckily things like kinesis streams allow you to do exactly that",
    "start": "2236400",
    "end": "2242320"
  },
  {
    "text": "so to summarize what the point here is agility and timelessness and timeliness",
    "start": "2242320",
    "end": "2248320"
  },
  {
    "text": "is a key thing in today's world and as marc andreessen says the cycle time compression may be",
    "start": "2248320",
    "end": "2254560"
  },
  {
    "text": "the most underestimated force in determining the winners and losers in tech so we want to essentially enable people",
    "start": "2254560",
    "end": "2260480"
  },
  {
    "text": "to win here and what that means is we want real-time events to let you create real-time applications",
    "start": "2260480",
    "end": "2266400"
  },
  {
    "text": "we want you to have an arc platform architecture where published events let",
    "start": "2266400",
    "end": "2271599"
  },
  {
    "text": "third parties independently innovate on top of each other we want this platform-wide",
    "start": "2271599",
    "end": "2276800"
  },
  {
    "text": "architecture to be something that you know essentially is going to start an ecosystem and we need low-friction pieces that",
    "start": "2276800",
    "end": "2283599"
  },
  {
    "text": "will allow you to to not have to deal with the muck things like lambda are examples of that",
    "start": "2283599",
    "end": "2289599"
  },
  {
    "text": "so what you need is the enablers to do this is you need the efficient way of surfacing events",
    "start": "2289599",
    "end": "2295119"
  },
  {
    "text": "you need standards so you can know what's inside of those and build ecosystems at various levels of",
    "start": "2295119",
    "end": "2301119"
  },
  {
    "text": "typing and you need those low and high level processing frameworks what we've got well cloudtrail existed",
    "start": "2301119",
    "end": "2307839"
  },
  {
    "text": "beforehand we announced at this re invent this the uh the um s3 event notifications and the dynamodbt",
    "start": "2307839",
    "end": "2315359"
  },
  {
    "text": "streams and we've announced lambda and where we hope this goes in the future is that now you guys will all build an",
    "start": "2315359",
    "end": "2322079"
  },
  {
    "text": "ecosystem around this right we've enabled we're essentially enabling you to find and discover",
    "start": "2322079",
    "end": "2327599"
  },
  {
    "text": "to enumerate and discover event logs we're going to be defining standards so you have some idea of what's in these",
    "start": "2327599",
    "end": "2332800"
  },
  {
    "text": "guys at various levels of of the stack and we're giving you these standard processing frameworks so that you don't",
    "start": "2332800",
    "end": "2339119"
  },
  {
    "text": "have to do anything other than write your business logic and we're hoping that a marketplace is going to be created out of this where",
    "start": "2339119",
    "end": "2345040"
  },
  {
    "text": "people can either put up three or four fee software and services that essentially provide these higher levels",
    "start": "2345040",
    "end": "2350320"
  },
  {
    "text": "of functionality right and at that point when there's a marketplace and i can find all the event logs and i can find all of the apps that",
    "start": "2350320",
    "end": "2356720"
  },
  {
    "text": "you guys all of the lambda functions other things you guys have built we think we hope this is going to explode into this giant ecosystem",
    "start": "2356720",
    "end": "2363839"
  },
  {
    "text": "that's going to accelerate everything dramatically so with that i'll be happy to take questions i will say first",
    "start": "2363839",
    "end": "2370160"
  },
  {
    "text": "there are deep dive sessions into both the s3 event notification stuff and the dynamodb streams and i've listed",
    "start": "2370160",
    "end": "2377359"
  },
  {
    "text": "which sessions those are on the right of the slide so with that i thank you and if you want to ask questions we i think",
    "start": "2377359",
    "end": "2383599"
  },
  {
    "text": "have a few minutes to do that",
    "start": "2383599",
    "end": "2387200"
  },
  {
    "text": "yes so that if you have an ordered log the idea of that is that is like a",
    "start": "2391119",
    "end": "2396160"
  },
  {
    "text": "transaction log a highly reliable transaction log and with s3 the durability of the",
    "start": "2396160",
    "end": "2402640"
  },
  {
    "text": "notifications is intended to be about nine nines so basically you will get the",
    "start": "2402640",
    "end": "2407760"
  },
  {
    "text": "notification for everything that happens you basically don't have to worry about whether it was missed",
    "start": "2407760",
    "end": "2413760"
  },
  {
    "text": "nothing is perfect and so you may want as a best practice have ways of of of determining whether more likely",
    "start": "2413760",
    "end": "2420160"
  },
  {
    "text": "your code did uh you know had a problem but we're aiming at nine nines of availability for for the s3 event",
    "start": "2420160",
    "end": "2425839"
  },
  {
    "text": "notification other questions",
    "start": "2425839",
    "end": "2439838"
  },
  {
    "text": "you get it back and that's why i used sqs as the example and lambda follows the same semantics",
    "start": "2445119",
    "end": "2450480"
  },
  {
    "text": "in sqs you dequeue an event and that locks it so nobody else can use",
    "start": "2450480",
    "end": "2456079"
  },
  {
    "text": "it and then when you're done processing you go in and you delete it if you fail it's still there and it",
    "start": "2456079",
    "end": "2462640"
  },
  {
    "text": "eventually times out and it's still there now this is an at least once processing model in fact all of these things really",
    "start": "2462640",
    "end": "2468880"
  },
  {
    "text": "work most naturally with at least once processing because if you think about it in order to guarantee that you see",
    "start": "2468880",
    "end": "2474880"
  },
  {
    "text": "everything we need to give it to you multiple times right if i fail in the middle of something i'm going to roll back to a checkpoint whether it's this",
    "start": "2474880",
    "end": "2481040"
  },
  {
    "text": "time out in the sqs or whether it's a checkpoint in the kinesis logs and i'm going to replay things so you've",
    "start": "2481040",
    "end": "2487040"
  },
  {
    "text": "got to be thinking about these things as being item potent processing functions that might get reapplied but you're",
    "start": "2487040",
    "end": "2493040"
  },
  {
    "text": "guaranteed to see everything at least once that's the model",
    "start": "2493040",
    "end": "2497920"
  },
  {
    "text": "um a rather costly and difficult proposition to do right",
    "start": "2506839",
    "end": "2512319"
  },
  {
    "text": "is there anything particularly moving to lam does where you have no real you know beef behind you",
    "start": "2512319",
    "end": "2520319"
  },
  {
    "text": "is there anything to help and help with item potence like the example we had here with incrementing votes that is an item put in safe for example",
    "start": "2520319",
    "end": "2527440"
  },
  {
    "text": "it can be actually okay sorry um you can make it uh idempotent by using",
    "start": "2527440",
    "end": "2533599"
  },
  {
    "text": "uh conditional puts in would be so you can use things like the list uh data structure and dynamodb to count",
    "start": "2533599",
    "end": "2539839"
  },
  {
    "text": "who has actually voted and then do a conditional put for the increment of the vote if and only if that user is actually not in that",
    "start": "2539839",
    "end": "2546640"
  },
  {
    "text": "list already so you know like things like uh conditional puts help you a lot with respect to maintaining the item potency",
    "start": "2546640",
    "end": "2553599"
  },
  {
    "text": "and there's other tools that you have your disposal that we can discuss so there's similar techniques",
    "start": "2553599",
    "end": "2559599"
  },
  {
    "text": "that are sort of point solutions you can do sort of deduplication style of approach conditional put is kind of that",
    "start": "2559599",
    "end": "2565359"
  },
  {
    "text": "you can do that there's kinesis uses that in a variety of places one thing i dream about is taking that",
    "start": "2565359",
    "end": "2571680"
  },
  {
    "text": "to the next level up where then you don't have to think about that at all but that's future work at the moment at",
    "start": "2571680",
    "end": "2577920"
  },
  {
    "text": "the moment it's not trivial to write item potent applications that's absolutely true",
    "start": "2577920",
    "end": "2583119"
  },
  {
    "text": "but you know these are steps and there are a lot of things that you can write item potently and so we think this",
    "start": "2583119",
    "end": "2588240"
  },
  {
    "text": "adds significant value above not having anything at all um there's one question over there as",
    "start": "2588240",
    "end": "2594880"
  },
  {
    "text": "well but let's begin okay anybody else do you still have a question",
    "start": "2594880",
    "end": "2600720"
  },
  {
    "text": "i was gonna ask about replaying streams yep",
    "start": "2600720",
    "end": "2607839"
  },
  {
    "text": "replay a string well sure because the idea here is these are logs and the way you process them is",
    "start": "2608720",
    "end": "2614720"
  },
  {
    "text": "you have a cursor the client application has a cursor to run through them right so the model is as i'm running through i",
    "start": "2614720",
    "end": "2621680"
  },
  {
    "text": "typically will do what you want to do is do a checkpoint at various points that's going to write say to dynamodb or",
    "start": "2621680",
    "end": "2627200"
  },
  {
    "text": "someplace i here's the sequence number that i was at in the log here's my state that i was processing in my app",
    "start": "2627200",
    "end": "2633520"
  },
  {
    "text": "and now if i crash i go back to that and i replay right i could also but i can keep that log",
    "start": "2633520",
    "end": "2639119"
  },
  {
    "text": "right one of the things i mentioned it's a useful general functionality is say an archive to s3 right you can imagine taking those",
    "start": "2639119",
    "end": "2646160"
  },
  {
    "text": "logs archiving them into s3 or maybe even into glacier and then periodically say re-running a",
    "start": "2646160",
    "end": "2651599"
  },
  {
    "text": "what-if thing right so something that that people have talked about is like archiving all of our billing data",
    "start": "2651599",
    "end": "2657359"
  },
  {
    "text": "and then being able to rerun something that says well what if i had a different pricing model well i could rerun it across my billing data",
    "start": "2657359",
    "end": "2663680"
  },
  {
    "text": "my billing log if you will and see what that would mean what difference that would make again these are things you can build up",
    "start": "2663680",
    "end": "2669920"
  },
  {
    "text": "as as additional functionality on top and what we're hoping is is people are going to start doing all kinds of stuff like that",
    "start": "2669920",
    "end": "2677839"
  },
  {
    "text": "all right last question i think we've exhausted you so thank you very",
    "start": "2678560",
    "end": "2685920"
  },
  {
    "text": "much",
    "start": "2686520",
    "end": "2689520"
  }
]