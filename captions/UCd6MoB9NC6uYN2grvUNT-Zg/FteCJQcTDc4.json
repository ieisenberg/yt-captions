[
  {
    "start": "0",
    "end": "12000"
  },
  {
    "text": "awesome okay so hello everyone and welcome to the session my name is Steve Roberts I'm a senior Technical",
    "start": "0",
    "end": "5520"
  },
  {
    "text": "Evangelist for net at AWS my name is norm I am the senior dev on the 80 boost dotnet team okay so today we're going to",
    "start": "5520",
    "end": "13559"
  },
  {
    "start": "12000",
    "end": "193000"
  },
  {
    "text": "spend the vast majority of this session looking at a new demo application that Norma's written to illustrate modern dotnet development on AWS but first we",
    "start": "13559",
    "end": "21180"
  },
  {
    "text": "want to take a few moments to bring you up to speed with the latest news for dotnet on AWS itself so start with there",
    "start": "21180",
    "end": "29550"
  },
  {
    "text": "are two new links for you so we have a whole new net developer Center on the main AWS site aws.amazon.com slash yet",
    "start": "29550",
    "end": "37559"
  },
  {
    "text": "this is the main sort of product a product collection page so jumping off links to the documentation the",
    "start": "37559",
    "end": "43410"
  },
  {
    "text": "installers etc everything you need to know to get started with net on AWS and samples and news as it comes out we",
    "start": "43410",
    "end": "50280"
  },
  {
    "text": "recently also launched a new repository on github so if you've seen over the past few years we've been increasingly",
    "start": "50280",
    "end": "55620"
  },
  {
    "text": "open sourcing the tools for dotnet so we've gathered everything or links to all those repos now into one central",
    "start": "55620",
    "end": "60809"
  },
  {
    "text": "repository github comm / AWS slash dotnet we first stopped to find out all",
    "start": "60809",
    "end": "66960"
  },
  {
    "text": "the tooling that we have and the open source norm it's been a busy year under it has been a very busy busy year for",
    "start": "66960",
    "end": "72750"
  },
  {
    "text": "lambda this year we launched - done at lambda runtimes back in January we launched on a core - oh and then in the",
    "start": "72750",
    "end": "79710"
  },
  {
    "text": "summer we launched two one I would highly recommend anyone doing lambda beyond on that core - one when we did",
    "start": "79710",
    "end": "86700"
  },
  {
    "text": "the data core - oh that was sort of a special thing we did because generally lambda only supports long-term supported",
    "start": "86700",
    "end": "92909"
  },
  {
    "text": "versions of the runtimes - o was not a long term support but it had such more compelling features over the existing",
    "start": "92909",
    "end": "99720"
  },
  {
    "text": "one o we decided we would make that do make that exception but now Microsoft",
    "start": "99720",
    "end": "104790"
  },
  {
    "text": "has taken to o out of support so there's nothing much more support coming out from lambda so I would highly recommend",
    "start": "104790",
    "end": "110490"
  },
  {
    "text": "everyone move two to one which has a three year lifecycle coming from Microsoft another thing we did is we",
    "start": "110490",
    "end": "116909"
  },
  {
    "text": "wanted to have our PowerShell of developers and join the fun with lambda so we created a new PowerShell module",
    "start": "116909",
    "end": "123180"
  },
  {
    "text": "that allows you to point out your pow shell script and say I want to run this script as a lambda function so that",
    "start": "123180",
    "end": "130140"
  },
  {
    "text": "module is called AWS lambda PS core it's distributed on the parish Gallery highly encourage you to go and",
    "start": "130140",
    "end": "135390"
  },
  {
    "text": "check it out it's really name and finally we launched an update to the tools for Microsoft Visual Studio Team services or Azure DevOps as they're now",
    "start": "135390",
    "end": "142019"
  },
  {
    "text": "called here recall last year we released 1-0 just before reinvent we did 2.1 update this year we added some new tasks",
    "start": "142019",
    "end": "148290"
  },
  {
    "text": "we eased up the deployment scenarios for lambda functions for those people that wanted to deploy but to a build and then",
    "start": "148290",
    "end": "154230"
  },
  {
    "text": "deploy through their release pipeline but more importantly we increase the flexibility of the credential handling",
    "start": "154230",
    "end": "159420"
  },
  {
    "text": "so we heard back from customers that using the service endpoints with fixed access and secret keys or assumed role",
    "start": "159420",
    "end": "165000"
  },
  {
    "text": "was a little bit restrictive in their environment they want you to interface to their in-house federated systems and get temporary credentials back to the",
    "start": "165000",
    "end": "171000"
  },
  {
    "text": "build host so we added the ability to get credentials from environment variables on the build host or task",
    "start": "171000",
    "end": "176430"
  },
  {
    "text": "level variables we also added the ability if your build host is running on an ec2 instance it can get credentials",
    "start": "176430",
    "end": "182760"
  },
  {
    "text": "and region automatically from the instance profile on the instance so you don't even need to configure that just",
    "start": "182760",
    "end": "187769"
  },
  {
    "text": "configure the tasks of what you need and go so pretty excited with that update okay so that's it for news let's talk",
    "start": "187769",
    "end": "194579"
  },
  {
    "start": "193000",
    "end": "366000"
  },
  {
    "text": "about modern dotnet applications on AWS so the application that we going to demo today was built as a vehicle to",
    "start": "194579",
    "end": "200220"
  },
  {
    "text": "demonstrate what a modern dotnet app looks like afraid of us it should come as no surprise it's written in net core",
    "start": "200220",
    "end": "205459"
  },
  {
    "text": "it's fully serviced they uses lambda functions and containers why because we",
    "start": "205459",
    "end": "210750"
  },
  {
    "text": "don't want our developers managing infrastructure they should be focused on the application logic that's where the value is let us manage the",
    "start": "210750",
    "end": "217019"
  },
  {
    "text": "infrastructure you manage your app so service secondly in previous demos that",
    "start": "217019",
    "end": "222569"
  },
  {
    "text": "we've done at reinvent you'll have seen us demonstrate the tooling from Visual Studio or the.net CLI for doing",
    "start": "222569",
    "end": "227639"
  },
  {
    "text": "deployments etc we're going to be doing that again today but norm is also written a full CI CD pipeline behind the",
    "start": "227639",
    "end": "234569"
  },
  {
    "text": "scenes that we can also going to demonstrate in the demos that show you how you can deploy your applications",
    "start": "234569",
    "end": "239609"
  },
  {
    "text": "using CI CD with the a dress code services so we took that into account so",
    "start": "239609",
    "end": "245790"
  },
  {
    "text": "with that I'd like to introduce as simple or normed simple elastic mosaic processing application and we're gonna spend the rest of this session looking",
    "start": "245790",
    "end": "252299"
  },
  {
    "text": "at what it does how it was built the services that norm Chows to use and what problems did he solve along the way and",
    "start": "252299",
    "end": "258840"
  },
  {
    "text": "we're gonna learn modern application architecture with server lists in containers some new lambda debugging techniques that were excited to share",
    "start": "258840",
    "end": "264810"
  },
  {
    "text": "with you and some new ADA bits extension Moby's for I don't know SDK these are on github they're not currently on nougat",
    "start": "264810",
    "end": "271259"
  },
  {
    "text": "they will be soon we're just doing the final fit and finish and feedback etc and to get those ready and as I just",
    "start": "271259",
    "end": "276990"
  },
  {
    "text": "mentioned a CI CD with the AWS code services so with that norm let's talk about",
    "start": "276990",
    "end": "283050"
  },
  {
    "text": "mosaics alright so if you've seen any Steven i's previous talks at Rhema we generally seem to do a lot of things",
    "start": "283050",
    "end": "289289"
  },
  {
    "text": "around pictures I am a father of two kids and as the dads job my job is to",
    "start": "289289",
    "end": "295229"
  },
  {
    "text": "take all of the pictures and I have hundreds of thousands of family pictures so this year we thought we'd go cloud",
    "start": "295229",
    "end": "302069"
  },
  {
    "text": "scale with our pictures so we make mosaics out of them and what a mosaic is is you take an original image and then",
    "start": "302069",
    "end": "310919"
  },
  {
    "text": "you're gonna recreate that image made up of hundreds and thousands of pictures so you can see that first image on the left",
    "start": "310919",
    "end": "316680"
  },
  {
    "text": "is the source image and it gets created into that middle image which might look a little grainy because if you zoom in",
    "start": "316680",
    "end": "323219"
  },
  {
    "text": "you can see all the individual images that it is actually made up of so our",
    "start": "323219",
    "end": "329550"
  },
  {
    "text": "architectural replication is really gonna be broken down into three main subsystems the first is how we ingry add",
    "start": "329550",
    "end": "336690"
  },
  {
    "text": "galleries to our system this is our mosaic tile got tiled gallery ingestion system and then with that we have our",
    "start": "336690",
    "end": "344279"
  },
  {
    "text": "mosaic rendering subsystem which takes our gallery and a source image and we'll actually render our mosaic and then so",
    "start": "344279",
    "end": "351210"
  },
  {
    "text": "our users can actually use these subsystems we're gonna have a UI on top of that that will allow users to log on",
    "start": "351210",
    "end": "357300"
  },
  {
    "text": "and create their mosaics regards okay and so to reach write all of this is fully serviced",
    "start": "357300",
    "end": "363210"
  },
  {
    "text": "we're not managing any infrastructure here as developers so before we can start generating mosaics we need a tile",
    "start": "363210",
    "end": "369180"
  },
  {
    "start": "366000",
    "end": "594000"
  },
  {
    "text": "gallery we need those tiles that we're going to build the final image from we're calling that the tiled gallery ingestion service and what this does it",
    "start": "369180",
    "end": "376860"
  },
  {
    "text": "takes a zip file from a user containing multiple images now when we were putting this demo together we were considering",
    "start": "376860",
    "end": "382080"
  },
  {
    "text": "what to use as a source of images I mean Long's family album it's kind of getting to be cloud scale but you know it's his",
    "start": "382080",
    "end": "387360"
  },
  {
    "text": "family images so we thought well what about the Internet as a source and then we thought that's probably not a great",
    "start": "387360",
    "end": "392759"
  },
  {
    "text": "idea in a public demo so we decided to fall back to a zip file of norms family",
    "start": "392759",
    "end": "397860"
  },
  {
    "text": "imagery to will have when we're not in front of people so the process of ingestion actually analyzes",
    "start": "397860",
    "end": "403789"
  },
  {
    "text": "each image that's inside that zip file to create the tile information shrinks it down to be give suits that are used as a tile and then puts information",
    "start": "403789",
    "end": "410960"
  },
  {
    "text": "about it into a name gallery that we can then use in the second system so normal this walks through how the tile",
    "start": "410960",
    "end": "416000"
  },
  {
    "text": "ingestion works okay so again we're gonna take a zip file in and we're gonna use ad bus batch to process that zip",
    "start": "416000",
    "end": "422270"
  },
  {
    "text": "file this is gonna invoice with that we had a job - a job queue and batch is",
    "start": "422270",
    "end": "428930"
  },
  {
    "text": "gonna take images from our ECR and spin up containers to actually run those jobs",
    "start": "428930",
    "end": "434509"
  },
  {
    "text": "and what that job is actually doing is it's downloading the zip file and it's gonna upload those images to s3 now this",
    "start": "434509",
    "end": "442430"
  },
  {
    "text": "part of the process we couldn't really figure out how you would paralyze reading from a zip file so we kind of",
    "start": "442430",
    "end": "449569"
  },
  {
    "text": "kept this logic very simple and this is all this does but all the other work it has to do we wanted to paralyze so for",
    "start": "449569",
    "end": "456440"
  },
  {
    "text": "that we use lambda so as those images up below s3 there's an event hook up there",
    "start": "456440",
    "end": "462620"
  },
  {
    "text": "which triggers our lambda processing image function and remembered we said we thought we might grab images from the",
    "start": "462620",
    "end": "468289"
  },
  {
    "text": "internet we wanted to be safe we're gonna use image recognition to make sure it's a good clean image for us and then",
    "start": "468289",
    "end": "475009"
  },
  {
    "text": "we got to go compute some color information for the actual image and store a thumbnail for that so we're",
    "start": "475009",
    "end": "482479"
  },
  {
    "text": "going to store things in down low to B and s3 for that so that lower two boxes are what we considered to be a tile",
    "start": "482479",
    "end": "488360"
  },
  {
    "text": "gallery the metadata about the color and this the resized individual images so",
    "start": "488360",
    "end": "494000"
  },
  {
    "text": "arene vent this is the first time that we've used batch I part of a dotnet demo what led you to using batch well one of",
    "start": "494000",
    "end": "500839"
  },
  {
    "text": "the most common questions I get from developers is do I go lambda or do I use containers and frustratingly the answer",
    "start": "500839",
    "end": "508639"
  },
  {
    "text": "usually is depends or both and in the case we're doing here and our case we're",
    "start": "508639",
    "end": "515029"
  },
  {
    "text": "going to we want to use containers because our application that zip file can be rather large I've taken a lot of",
    "start": "515029",
    "end": "521149"
  },
  {
    "text": "pictures it was an 8 gig zip file when I first uploaded this in he has taken a lot of them they do and you know doing",
    "start": "521149",
    "end": "527510"
  },
  {
    "text": "that in a lambda you don't have eight gigs of storage space to put that on there and it could take a long",
    "start": "527510",
    "end": "533230"
  },
  {
    "text": "time so here we wanted something with a container I didn't necessarily care if",
    "start": "533230",
    "end": "538540"
  },
  {
    "text": "it was drunk immediately I fine with run asynchronously which batch provides that",
    "start": "538540",
    "end": "544240"
  },
  {
    "text": "we have a job queue we just add it to a queue and it will run it when there's available compute capacity for us and it",
    "start": "544240",
    "end": "549850"
  },
  {
    "text": "also gave us a lot of knobs for cost-saving like lambda when there's no charge for when there's no functions",
    "start": "549850",
    "end": "556750"
  },
  {
    "text": "going on in batch we can set the minimum compute power for our batch compute",
    "start": "556750",
    "end": "563470"
  },
  {
    "text": "environment to zero so if there's no jobs running we're not gonna pay for batch only when there's",
    "start": "563470",
    "end": "568600"
  },
  {
    "text": "jobs running will we actually have anything to pay for them another way we can save costs by using badge is again",
    "start": "568600",
    "end": "575170"
  },
  {
    "text": "we might not necessarily care when these things get done if we want to be extra you know saving up money we might want",
    "start": "575170",
    "end": "581110"
  },
  {
    "text": "to use easy to spot instances and run these jobs maybe late at night when the spot prices go down but we're not going",
    "start": "581110",
    "end": "587560"
  },
  {
    "text": "to manage those buttons we're just gonna tell batch use those to provide your compute power okay so I think we should",
    "start": "587560",
    "end": "595540"
  },
  {
    "start": "594000",
    "end": "908000"
  },
  {
    "text": "go take a look at the ingestion process okay get this demo rolling all right",
    "start": "595540",
    "end": "601290"
  },
  {
    "text": "right button okay so here we are in Visual Studio on the Left over here is",
    "start": "601290",
    "end": "607120"
  },
  {
    "text": "my 8 abyss explorer these are the dynamic tables that I'm working with and",
    "start": "607120",
    "end": "612240"
  },
  {
    "text": "solutions for is there's sort of three folders for each of the three subsystems in my application now if I was a larger",
    "start": "612240",
    "end": "619450"
  },
  {
    "text": "team more than one I would probably have separate repositories and all these separate solutions but for today making",
    "start": "619450",
    "end": "625720"
  },
  {
    "text": "this demo I just did everything one repository one solution so here we are on the gallery generator so this is the",
    "start": "625720",
    "end": "632260"
  },
  {
    "text": "two projects that we have that's going to take care of the tile ingestion the first one is my console application that",
    "start": "632260",
    "end": "639280"
  },
  {
    "text": "does the zip download and upload to s3 and so this is just your standard done",
    "start": "639280",
    "end": "645190"
  },
  {
    "text": "application that's a gutta console main and all we're gonna go do is download",
    "start": "645190",
    "end": "650920"
  },
  {
    "text": "the zip archive I'm gonna download it to my temp storage on my in my container and once I've downloaded it I'm going to",
    "start": "650920",
    "end": "657640"
  },
  {
    "text": "open up that zip archive [Music] and I think down below here I'm gonna go",
    "start": "657640",
    "end": "663300"
  },
  {
    "text": "upload the images to s3 something no here's I'm uploading it into my bucket",
    "start": "663300",
    "end": "669000"
  },
  {
    "text": "with the calorie there's the key prefix of gallery's raw is when I set up my",
    "start": "669000",
    "end": "674100"
  },
  {
    "text": "event listener for the lambda functions I'm gonna only have it be triggered if the key has this start to it and so this",
    "start": "674100",
    "end": "680730"
  },
  {
    "text": "is how we can just get our lambda function call for just certain uploads to there we're doing that because we're sharing the same bucket for the other",
    "start": "680730",
    "end": "686760"
  },
  {
    "text": "data right right the thumbnails are nothing will be in the same bucket I had this other config object this is how I",
    "start": "686760",
    "end": "693150"
  },
  {
    "text": "am getting the user the information of how to run this object this object comes",
    "start": "693150",
    "end": "700020"
  },
  {
    "text": "down from my git config method here that I called the beginning which is gonna look either at the user arguments or",
    "start": "700020",
    "end": "707270"
  },
  {
    "text": "environment variables to find what's the user ID this is for with where's the URL",
    "start": "707270",
    "end": "713190"
  },
  {
    "text": "to the zip file all that and you know startup information and when I run badge I'm just gonna set these environment",
    "start": "713190",
    "end": "718890"
  },
  {
    "text": "variables I'm going to say run this container with this console and set these environment variables now to me",
    "start": "718890",
    "end": "725970"
  },
  {
    "text": "but in the web application that runs that's just gonna send those in right so",
    "start": "725970",
    "end": "731010"
  },
  {
    "text": "we can pipe deploy this to a bus by right-clicking on this and say publish",
    "start": "731010",
    "end": "738209"
  },
  {
    "text": "the container at AWS and for badge all we're gonna really do today is we just",
    "start": "738209",
    "end": "743760"
  },
  {
    "text": "want to push this docker image to easier the elastic container registry service batch is gonna be pointing to this",
    "start": "743760",
    "end": "749940"
  },
  {
    "text": "container registry when it wants to run a job which will show later I'm just gonna go push publish saying series is",
    "start": "749940",
    "end": "755820"
  },
  {
    "text": "to get started just kicking the tires from it inside visual studio using the wizards but obviously in your main systems you're not going to be using",
    "start": "755820",
    "end": "761520"
  },
  {
    "text": "Visual Studio and the Wizards in your CI CD so we'll show you how we did this in",
    "start": "761520",
    "end": "766709"
  },
  {
    "text": "the CI CD system later in the demo right and so what this does is really it's gonna do the doctor bills it's gonna log",
    "start": "766709",
    "end": "773190"
  },
  {
    "text": "on to ECR and it's gonna push the image which i have pushed this image a few times and practice talks today so that's",
    "start": "773190",
    "end": "778860"
  },
  {
    "text": "why the push was rather fast because it's only pushing the changes since the last time you ran this so that take care",
    "start": "778860",
    "end": "785610"
  },
  {
    "text": "of our that first part now the second part is we have to deploy our lambda function so our lambda function here",
    "start": "785610",
    "end": "792209"
  },
  {
    "text": "let's take a look at that and so for this guy we are listening for",
    "start": "792209",
    "end": "800040"
  },
  {
    "text": "s3 events so we've taken that s3 event object and we're gonna go loop through those records and process each one of",
    "start": "800040",
    "end": "806220"
  },
  {
    "text": "those and so our flow is first we're gonna go in we're gonna go see use the image safe because again we were afraid",
    "start": "806220",
    "end": "812340"
  },
  {
    "text": "we're gonna get scary things from the internet and so we use image recognition",
    "start": "812340",
    "end": "817560"
  },
  {
    "text": "to go look to see if there's any moderation labels if there's any moderation labels that come out we're playing it's completely safe and we're",
    "start": "817560",
    "end": "823500"
  },
  {
    "text": "just skipping out of here",
    "start": "823500",
    "end": "826400"
  },
  {
    "text": "once we determine that this is an image that we're willing to accept into our gallery we're gonna go download that image then",
    "start": "828560",
    "end": "835530"
  },
  {
    "text": "I have some of my own logic to go basically figure out what's the average color of that image so we'll know how to",
    "start": "835530",
    "end": "841170"
  },
  {
    "text": "where we can put that in later I'm afraid of mosaics we're gonna go and create a thumbnail of our image and",
    "start": "841170",
    "end": "847350"
  },
  {
    "text": "upload that to s3 and then save to down a DB the actual the metadata for the",
    "start": "847350",
    "end": "854310"
  },
  {
    "text": "souls so when we want to create images we just a good nine if you need to figure out what's the best image to fit for that one all right I think we can",
    "start": "854310",
    "end": "861870"
  },
  {
    "text": "deploy that now right do it so to deploy it we can just right click here publish to AWS this is using a",
    "start": "861870",
    "end": "869160"
  },
  {
    "text": "cloud formation based one I've done this before so everything has been kind of already set for me yes both projects have the defaults file set so they",
    "start": "869160",
    "end": "875730"
  },
  {
    "text": "already contain the various settings that the Wizards automatically picking up and the CI CD will pick up when it runs we don't need to keep parameters",
    "start": "875730",
    "end": "882030"
  },
  {
    "text": "here okay and so when we do this deployment it basically is doing a build",
    "start": "882030",
    "end": "887280"
  },
  {
    "text": "of the project it's uploading the project to s3 updating the CloudFormation template to say this is",
    "start": "887280",
    "end": "894120"
  },
  {
    "text": "where the bits are for your service function go deploy this out and CloudFormation will go create the stack",
    "start": "894120",
    "end": "900600"
  },
  {
    "text": "force which will clear all of our resources or I am roles or lambda functions all that we could possibly",
    "start": "900600",
    "end": "905700"
  },
  {
    "text": "need and more so we have the container image deployed we have the lambda",
    "start": "905700",
    "end": "911040"
  },
  {
    "start": "908000",
    "end": "948000"
  },
  {
    "text": "function just coming up should be a few more seconds there we go so the third and final step then is to wire up that",
    "start": "911040",
    "end": "916650"
  },
  {
    "text": "event handler right so let me go kab this is that key prefix that we talked about so when we have our lambda function we went into only fire for",
    "start": "916650",
    "end": "924420"
  },
  {
    "text": "objects with that key prefix so here's the function we deployed and we're gonna say the",
    "start": "924420",
    "end": "930100"
  },
  {
    "text": "eventsource is s3 and this is the bucket I'm using in my local development and I said that key",
    "start": "930100",
    "end": "936940"
  },
  {
    "text": "prefix to that one and so now when we upload images to that folder it'll kick",
    "start": "936940",
    "end": "943240"
  },
  {
    "text": "off our lambda function I think we could probably run the container the batch process now let's do it so let's go to",
    "start": "943240",
    "end": "948400"
  },
  {
    "start": "948000",
    "end": "1000000"
  },
  {
    "text": "the console and here's the batch console I'm just gonna start the job right now",
    "start": "948400",
    "end": "954000"
  },
  {
    "text": "this is the live demo what could go wrong set our job definition set a job",
    "start": "954000",
    "end": "961990"
  },
  {
    "text": "queue and I'll talk about what those are in a minute while this is running this is where we can say how much CPU we",
    "start": "961990",
    "end": "967300"
  },
  {
    "text": "think we need for this and then the environment variables and I've already preset most of them I have a couple I'm",
    "start": "967300",
    "end": "974170"
  },
  {
    "text": "gonna set from my handy-dandy G so those are what I'm mapping to that config object that you're gonna yep in the job",
    "start": "974170",
    "end": "979390"
  },
  {
    "text": "though when we had that code looking for environment variables it's gonna pull these out and you will see oh I think we",
    "start": "979390",
    "end": "988600"
  },
  {
    "text": "didn't copy that back to copy paste 101 what did you just say about what could",
    "start": "988600",
    "end": "994090"
  },
  {
    "text": "possibly go wrong can go wrong this is gonna rock alright so now we've",
    "start": "994090",
    "end": "1000780"
  },
  {
    "start": "1000000",
    "end": "1052000"
  },
  {
    "text": "submitted their job passing those environment over then when we do the UI the UI will take care of setting those environment variables we won't copy",
    "start": "1000780",
    "end": "1006120"
  },
  {
    "text": "paste from the notepad when we're in production I promise all right so let's",
    "start": "1006120",
    "end": "1011490"
  },
  {
    "text": "take a look a batch while that's running so here we have on our dashboard you can",
    "start": "1011490",
    "end": "1016650"
  },
  {
    "text": "see here we have our key we have one cue setup for currently and we have one compute environment and I mentioned we",
    "start": "1016650",
    "end": "1023190"
  },
  {
    "text": "can save cost by not having anything running and setting minimum to four but",
    "start": "1023190",
    "end": "1028680"
  },
  {
    "text": "because we're doing a live demo and we didn't want everyone to wait while that was being allocated we set a minimum before so in fact that is probably",
    "start": "1028680",
    "end": "1035910"
  },
  {
    "text": "already running as we speak see it's already running because we already had some compute capacity set aside for it",
    "start": "1035910",
    "end": "1042810"
  },
  {
    "text": "again like in normal development I probably we just always set that at zero and then let it be allocated as I'm",
    "start": "1042810",
    "end": "1049170"
  },
  {
    "text": "deploying batches out there so a job definition is made up of basically",
    "start": "1049170",
    "end": "1055670"
  },
  {
    "start": "1052000",
    "end": "1119000"
  },
  {
    "text": "saying this is the I am roll that I want to use this is what's going to provide",
    "start": "1055670",
    "end": "1060780"
  },
  {
    "text": "credential to my code so my code needs access to s3 and down it to be when I set up my job",
    "start": "1060780",
    "end": "1066720"
  },
  {
    "text": "definition I gave it an item role that gave it at that access and then I specified the container image from VCR",
    "start": "1066720",
    "end": "1074159"
  },
  {
    "text": "that I want to run so when this job went a job if this is the type of job that just runs its gonna pull that image from",
    "start": "1074159",
    "end": "1081029"
  },
  {
    "text": "ECR now in our case today we just I didn't put a tag on the end of this",
    "start": "1081029",
    "end": "1086549"
  },
  {
    "text": "which means it's always just using the latest docker image which is why we can all we had to do was just do a push to",
    "start": "1086549",
    "end": "1092250"
  },
  {
    "text": "ECR and everything just picked up so this is a demo we're effectively doing a deploy to prod but not straight to",
    "start": "1092250",
    "end": "1097980"
  },
  {
    "text": "notepad so you probably would you do is you would have I would deploy it with a",
    "start": "1097980",
    "end": "1103529"
  },
  {
    "text": "tag of beta do my sanity check to make sure it's work in my my beta environment and then",
    "start": "1103529",
    "end": "1108840"
  },
  {
    "text": "I would flip the tag on there to prod and then start using it there I said I'd do in a real environment but from a demo",
    "start": "1108840",
    "end": "1115169"
  },
  {
    "text": "point of view maybe quick to get that up and running and then let's take a look at the queue so we have one queue right",
    "start": "1115169",
    "end": "1122100"
  },
  {
    "start": "1119000",
    "end": "1177000"
  },
  {
    "text": "now which has one compute environment on there we could have multiple queue",
    "start": "1122100",
    "end": "1127350"
  },
  {
    "text": "accused in our app account one of the things we thought is if we made this we had some users that were paid users and",
    "start": "1127350",
    "end": "1134580"
  },
  {
    "text": "some users that were community users maybe the paid users would get a higher priority queue and the community users",
    "start": "1134580",
    "end": "1141029"
  },
  {
    "text": "would get the the normal queue will call and the normal kid can maybe be used of easy to spot instances in the paid user",
    "start": "1141029",
    "end": "1147990"
  },
  {
    "text": "we could use from on-demand computer instances we have a lot of flexibility on how we want to set that up depending",
    "start": "1147990",
    "end": "1154950"
  },
  {
    "text": "on our particular needs even though we're not managing your structure we're not all we're saying is if we looked at",
    "start": "1154950",
    "end": "1161130"
  },
  {
    "text": "the compute environment is that it's is a I think it says in here says there's a",
    "start": "1161130",
    "end": "1169590"
  },
  {
    "text": "managed compute environment you can manage it yourself I personally would rather someone else manage it for me all",
    "start": "1169590",
    "end": "1176970"
  },
  {
    "text": "right so let's see is there job done did we succeed we have practice this a few",
    "start": "1176970",
    "end": "1182700"
  },
  {
    "start": "1177000",
    "end": "1225000"
  },
  {
    "text": "times all right 201 so that's the one we succeeded now one of the things I didn't",
    "start": "1182700",
    "end": "1188760"
  },
  {
    "text": "show in the lambda code though I'm if we go back over here",
    "start": "1188760",
    "end": "1194720"
  },
  {
    "text": "to the constructor you can see I actually registered x-ray for all of the",
    "start": "1195120",
    "end": "1201430"
  },
  {
    "text": "ADA boys service clans so by adding this line of code with the extra SDK all my",
    "start": "1201430",
    "end": "1207130"
  },
  {
    "text": "service clients will send trace information to x-ray so I can kind of see what's going on with my lambda",
    "start": "1207130",
    "end": "1212500"
  },
  {
    "text": "function can we go check you check that out let's do it so we'll go to the x-ray console there",
    "start": "1212500",
    "end": "1222640"
  },
  {
    "text": "we go and this will go compute our map based up all those tracing informations",
    "start": "1222640",
    "end": "1228160"
  },
  {
    "text": "we sent up there there's our graph I was hoping for a sea of green but we wanted",
    "start": "1228160",
    "end": "1235960"
  },
  {
    "text": "to make it interesting so we here our lambda function which is calling s3 and",
    "start": "1235960",
    "end": "1241960"
  },
  {
    "text": "we're having some sort of problem and we're calling an image recognition and we could drill down that and x-ray we",
    "start": "1241960",
    "end": "1248170"
  },
  {
    "text": "could say let's look at those traces take a look one of those and we can see we've got some sort of problem calling",
    "start": "1248170",
    "end": "1254850"
  },
  {
    "text": "detect moderation labels so at this point previously we would have gone off",
    "start": "1254850",
    "end": "1260140"
  },
  {
    "text": "from portunity looked at the cloud watch logs of the fish to try and figure this out which we could still do because we could still do but we got something more",
    "start": "1260140",
    "end": "1266110"
  },
  {
    "text": "we could do one of the release we did last week with the ABS toolkit and a new",
    "start": "1266110",
    "end": "1271390"
  },
  {
    "start": "1268000",
    "end": "1331000"
  },
  {
    "text": "lambda test tool is you can actually oh wait before I do that I jumped ahead",
    "start": "1271390",
    "end": "1278790"
  },
  {
    "text": "with the service template I actually created an extra queue with my service",
    "start": "1278790",
    "end": "1284740"
  },
  {
    "text": "template and that Q is assigned to my lambda function as the dead letter Q now",
    "start": "1284740",
    "end": "1291070"
  },
  {
    "text": "if you've never used a dead letter Q what it does is when you have a lambda function that's being called asynchronously like with an s3 event",
    "start": "1291070",
    "end": "1298240"
  },
  {
    "text": "lambda is gonna try a few times I think it's three times the charge with an exponential back-off if your lambda",
    "start": "1298240",
    "end": "1304240"
  },
  {
    "text": "function keeps failing with that event it'll add that message to the queue and then we can go look at that queue to go",
    "start": "1304240",
    "end": "1311440"
  },
  {
    "text": "and debug our and the function so each message in that queue is the full event that that London event but learn",
    "start": "1311440",
    "end": "1318430"
  },
  {
    "text": "everything they got right okay so now we have our lambda function as I start up project and with the latest visual",
    "start": "1318430",
    "end": "1325330"
  },
  {
    "text": "studio we can just push f5 like Visual Studio too late officials either took it and this launches our new lambda",
    "start": "1325330",
    "end": "1333149"
  },
  {
    "start": "1331000",
    "end": "1417000"
  },
  {
    "text": "test tool and here we can do we can add our sample of Vincent here and execute",
    "start": "1333149",
    "end": "1339159"
  },
  {
    "text": "it or we can also have it go and monitor our guard letter Q and we can say start",
    "start": "1339159",
    "end": "1344739"
  },
  {
    "text": "monitoring it I only one Q and it's gonna go pull that that that Q that we",
    "start": "1344739",
    "end": "1350649"
  },
  {
    "text": "had that had those failing messages in production and sale there's something here let's grab it and run it locally",
    "start": "1350649",
    "end": "1357009"
  },
  {
    "text": "with inside this test tool in Visual Studio is debugging this tool so this means that we can actually then start",
    "start": "1357009",
    "end": "1362889"
  },
  {
    "text": "stepping through our actual lambda code so this is great for finding faults in",
    "start": "1362889",
    "end": "1368769"
  },
  {
    "text": "your application logic right right this is your application logic system effectively a simulation all right and",
    "start": "1368769",
    "end": "1374529"
  },
  {
    "text": "so if I just push f5 I bet we will get the exception here we have an MERIS",
    "start": "1374529",
    "end": "1379749"
  },
  {
    "text": "image be an invalid image format going to image recognition what did we try to send our key says that for some reason I",
    "start": "1379749",
    "end": "1388479"
  },
  {
    "text": "dumped it down the SDK in the zip file we have a reason a c-sharp file he's not gonna pass moderation so so okay as a",
    "start": "1388479",
    "end": "1395710"
  },
  {
    "text": "developer now I would make a fixer somewhere either I would filter out the non image files in the in the batch",
    "start": "1395710",
    "end": "1401499"
  },
  {
    "text": "process or potentially in the lambda function or even both for ultimate I wouldn't be afraid and then do a",
    "start": "1401499",
    "end": "1406779"
  },
  {
    "text": "redeploy but I don't want to use Visual Studio to do my redeploy right so what I would do is I would then just check that",
    "start": "1406779",
    "end": "1412839"
  },
  {
    "text": "in and then we'd use our code pipeline to go and process the zone so this is",
    "start": "1412839",
    "end": "1418029"
  },
  {
    "start": "1417000",
    "end": "1448000"
  },
  {
    "text": "the pipeline that I set up and again I was a team of one I just had one repository you would probably have",
    "start": "1418029",
    "end": "1423190"
  },
  {
    "text": "everything in different repositories but here I have one code commit repository that's doing this is what I'm doing for",
    "start": "1423190",
    "end": "1429219"
  },
  {
    "text": "the tile ingestion first I'm doing a code build to build their docker image and then push that to VCR and then for",
    "start": "1429219",
    "end": "1437830"
  },
  {
    "text": "the lambda function I'm gonna run a code build that's gonna build our lambda function and then pass that CloudFormation template down to our",
    "start": "1437830",
    "end": "1444339"
  },
  {
    "text": "CloudFormation service so it deploy that out if we look back at our build spec",
    "start": "1444339",
    "end": "1450429"
  },
  {
    "start": "1448000",
    "end": "1530000"
  },
  {
    "text": "files so here is the build spec file for the docker image what I'm doing is I'm",
    "start": "1450429",
    "end": "1457389"
  },
  {
    "text": "installing our dotnet global tools because all of the the tooling and container tooling that we have inside Visual Studio is also",
    "start": "1457389",
    "end": "1464350"
  },
  {
    "text": "always available in our global tools so here's the EC s1 we install that and we call ec s push image and it will do the",
    "start": "1464350",
    "end": "1470710"
  },
  {
    "text": "exact same thing we did through the wizard in Visual Studio it'll do the docker build log on to ECR and push that",
    "start": "1470710",
    "end": "1475900"
  },
  {
    "text": "out so for docker that's all we had to do for lambda",
    "start": "1475900",
    "end": "1481240"
  },
  {
    "text": "look at that build spec same thing we're gonna sell the lambda tools this time and then we're gonna call the lambda",
    "start": "1481240",
    "end": "1488860"
  },
  {
    "text": "package CI command off that what that does it's gonna go and look at this",
    "start": "1488860",
    "end": "1495400"
  },
  {
    "text": "service template and go look for all the lambda functions in there and build the the associated dotnet core project with",
    "start": "1495400",
    "end": "1502300"
  },
  {
    "text": "it upload that project to s3 and then update that template with the location",
    "start": "1502300",
    "end": "1509950"
  },
  {
    "text": "to s3 and then write that new template to this updated template so that's a",
    "start": "1509950",
    "end": "1515170"
  },
  {
    "text": "copy of the template that is a copy and then that is the actual build artifact coming out of this code build is that",
    "start": "1515170",
    "end": "1521170"
  },
  {
    "text": "template and this is what we're gonna pass to cloud formations in fact the way",
    "start": "1521170",
    "end": "1526330"
  },
  {
    "text": "I create my pipelines I did that through cloud formation fact this is the only bit of infrastructure that you managed",
    "start": "1526330",
    "end": "1531760"
  },
  {
    "start": "1530000",
    "end": "1572000"
  },
  {
    "text": "right and so this is my pipeline here and there's the code commit here's the",
    "start": "1531760",
    "end": "1539830"
  },
  {
    "text": "build stages I'm just gonna skip past those I want to show you the cloud formation part so here's the cloud",
    "start": "1539830",
    "end": "1544930"
  },
  {
    "text": "formation part that is taking in our input from the last step and it's taking the updated template to go and create",
    "start": "1544930",
    "end": "1552190"
  },
  {
    "text": "that change set for us once we have the chain set we're gonna go execute that",
    "start": "1552190",
    "end": "1558160"
  },
  {
    "text": "chain set which will then get our lambda function deployed or I am rolled created our queues all that stuff will be",
    "start": "1558160",
    "end": "1564190"
  },
  {
    "text": "created for us by CloudFormation okay alright let's head back to the slides",
    "start": "1564190",
    "end": "1569410"
  },
  {
    "text": "then so we saw there the first of the server list subsystems the tile",
    "start": "1569410",
    "end": "1575230"
  },
  {
    "start": "1572000",
    "end": "1737000"
  },
  {
    "text": "ingestion for the galleries and using the new feature on dead-letter cues that we member would mock lambda test tool to",
    "start": "1575230",
    "end": "1582580"
  },
  {
    "text": "help us diagnose failures we don't need to go necessarily the cloud watch logs now to figure out went wrong we can debug it locally and see what happened",
    "start": "1582580",
    "end": "1590460"
  },
  {
    "text": "we also how to use the dotnet core global tools in our sea ice new pipelines we get the same behavior",
    "start": "1590460",
    "end": "1595810"
  },
  {
    "text": "that we see in Visual Studio with the Wizards which as I said is great for kicking the tires getting started but as",
    "start": "1595810",
    "end": "1601210"
  },
  {
    "text": "you move to a more mature CI CD you know you can need those extra tools how easy they are to use and how to use batch of",
    "start": "1601210",
    "end": "1607900"
  },
  {
    "text": "the containers don't net so we have the targa ingestion subsystem ready to use",
    "start": "1607900",
    "end": "1614470"
  },
  {
    "text": "now we need to think about mosaic rendering right so in this sub system and what we want this to do is to take",
    "start": "1614470",
    "end": "1620530"
  },
  {
    "text": "an image file from the user imagine that that logged in to their website uploading something and the name of a tile guy who they've created and then",
    "start": "1620530",
    "end": "1626800"
  },
  {
    "text": "analyzed the image against the tile data in the gallery to pick out right tools to use and then rebuild the images of",
    "start": "1626800",
    "end": "1632020"
  },
  {
    "text": "mosaic so pretty simple steps so let's walk through how this is done and I can",
    "start": "1632020",
    "end": "1637600"
  },
  {
    "text": "see that you chose to use step functions I did in this case this is a good use of using lambda we have a lot of discrete",
    "start": "1637600",
    "end": "1642960"
  },
  {
    "text": "subsections we can use in here and do in lambda and step functions it allows us to have the workflow so we're gonna",
    "start": "1642960",
    "end": "1649180"
  },
  {
    "text": "start our workflow through some mechanism or trigger it through our UI or something and then the first thing we",
    "start": "1649180",
    "end": "1654310"
  },
  {
    "text": "need to do is we have to create the color map from that source image and what that means is we're gonna take that",
    "start": "1654310",
    "end": "1659470"
  },
  {
    "text": "source image and we're gonna basically break it down into small little squares of 10 by 10 pixels and figure out what",
    "start": "1659470",
    "end": "1665170"
  },
  {
    "text": "it's average color is once we know that we're gonna go our next step and we're gonna go find out what is the best image",
    "start": "1665170",
    "end": "1672520"
  },
  {
    "text": "that maps from our gallery that map's that square I see you're doing that with",
    "start": "1672520",
    "end": "1677710"
  },
  {
    "text": "an f-sharp lambda that is true so again with step functions we can do each one of these steps is completely independent",
    "start": "1677710",
    "end": "1683320"
  },
  {
    "text": "units separate dependencies separate languages we can do it in c-sharp done a core powershell or you could go do an on",
    "start": "1683320",
    "end": "1689890"
  },
  {
    "text": "net language if you were that type of person yeah I went there you went that",
    "start": "1689890",
    "end": "1696720"
  },
  {
    "text": "okay so now one again if you use lambda the one of the biggest factors in the",
    "start": "1696720",
    "end": "1702340"
  },
  {
    "text": "cost of lambda is how much memory you allocate for your lambda functions and",
    "start": "1702340",
    "end": "1707410"
  },
  {
    "text": "we could get a variety of images coming into our system small images large images and that sort of determines how",
    "start": "1707410",
    "end": "1712570"
  },
  {
    "text": "much memory we want for our lambda functions so another way to control our cost is is we're going to look to see",
    "start": "1712570",
    "end": "1717730"
  },
  {
    "text": "how big the image is and then views which renderer which means how much remember we want for it for that lambda",
    "start": "1717730",
    "end": "1724090"
  },
  {
    "text": "function once we render it we're just going to go send that to s3 we're gonna send off to China to be",
    "start": "1724090",
    "end": "1729760"
  },
  {
    "text": "saying you're done we've got an image ready okay should I sit let's do it all",
    "start": "1729760",
    "end": "1737740"
  },
  {
    "start": "1737000",
    "end": "1826000"
  },
  {
    "text": "right back to visual studio so here in this section my step functions you can see I have a several lambda function",
    "start": "1737740",
    "end": "1743740"
  },
  {
    "text": "projects Here I am i here's my crate color map my determine best fit function image which that's one in F sharp here's",
    "start": "1743740",
    "end": "1750790"
  },
  {
    "text": "our renderer and here's our notifications we have all these separate functions we're not going to go through all their code but I do want to take a",
    "start": "1750790",
    "end": "1757120"
  },
  {
    "text": "look at one of them just so you can see the pattern that we used so here's creating the color map and",
    "start": "1757120",
    "end": "1763920"
  },
  {
    "text": "with that we're gonna take in a state object this is the class that I just wrote it's my own C sharp object that",
    "start": "1763920",
    "end": "1771490"
  },
  {
    "text": "contains all of the state for the current workflow and it's what my my UI",
    "start": "1771490",
    "end": "1776590"
  },
  {
    "text": "is eventually gonna go provide to us the initial seed data for it so we can have the Sutton data and as we we can make",
    "start": "1776590",
    "end": "1784870"
  },
  {
    "text": "changes to it and then we're going to return that back is the return step and so this is what gets transferred through all of our different lambda functions",
    "start": "1784870",
    "end": "1790920"
  },
  {
    "text": "back and forth this objection to be serialize and deserialize to Jason with step functions in lambda so our upstream",
    "start": "1790920",
    "end": "1797320"
  },
  {
    "text": "lambda functions are setting data that the downstream lambdas pick up and work on so for example in this guy this is",
    "start": "1797320",
    "end": "1803530"
  },
  {
    "text": "what gets that first image and it's gonna go and go determine how many pixels are in this image because later",
    "start": "1803530",
    "end": "1810730"
  },
  {
    "text": "when we use that we have that choice we're gonna use this property to figure out which lambda function we want to use",
    "start": "1810730",
    "end": "1816520"
  },
  {
    "text": "so this gets added to our state now the rest is just my logic I have for",
    "start": "1816520",
    "end": "1822100"
  },
  {
    "text": "creating the step functions I'm not going to go through that part here let's take a look at the fact that we actually",
    "start": "1822100",
    "end": "1829210"
  },
  {
    "start": "1826000",
    "end": "1972000"
  },
  {
    "text": "have four projects that we want to deploy but we want to deploy this as one service application and this is a change",
    "start": "1829210",
    "end": "1836470"
  },
  {
    "text": "again we did to the visual studio we launched last week we go toolkit visual studio toolkit get that down in our",
    "start": "1836470",
    "end": "1845590"
  },
  {
    "text": "service template file this is the CloudFormation template where we define our lambda function before then we would",
    "start": "1845590",
    "end": "1852370"
  },
  {
    "text": "always just build the current project and assume that's where your project your code was for your lambda functions with the new version you can actually",
    "start": "1852370",
    "end": "1859420"
  },
  {
    "text": "specify a relative path to a project so each of these lambda",
    "start": "1859420",
    "end": "1864640"
  },
  {
    "text": "functions are pointing to different projects so when I deployed this CloudFormation template with our tooling",
    "start": "1864640",
    "end": "1870130"
  },
  {
    "text": "it's gonna go build each of these projects up independently and then deploy this has one CloudFormation",
    "start": "1870130",
    "end": "1875590"
  },
  {
    "text": "template and some of these like our renderer were referencing the same project multiple times just with",
    "start": "1875590",
    "end": "1882700"
  },
  {
    "text": "different memories things that first the smalls using one gig and the twos using two gigs because these images can be",
    "start": "1882700",
    "end": "1888010"
  },
  {
    "text": "large so the build is only gonna build it once I write it will build it once and then refer it multiple times in our",
    "start": "1888010",
    "end": "1893170"
  },
  {
    "text": "template so if I was one of those what do you call them other people other people they're not using net and I have",
    "start": "1893170",
    "end": "1899710"
  },
  {
    "text": "a lambda function written a different language that's been built by an earlier step can I use it with this yeah so this",
    "start": "1899710",
    "end": "1906130"
  },
  {
    "text": "tooling will build down a project but if you had like sunnier Dov's had already given you a zip file of an odious that",
    "start": "1906130",
    "end": "1911920"
  },
  {
    "text": "it was doing something specific you could reference that zip file here if you leave the bucket field empty it's",
    "start": "1911920",
    "end": "1918910"
  },
  {
    "text": "assuming that you're still referencing a zip file locally and will upload that as part of the deployment if you haven't",
    "start": "1918910",
    "end": "1924580"
  },
  {
    "text": "already deployed to Ada base you can just specify where it isn't as through with the bucket and we'll just leave it alone so that's how you conclude things",
    "start": "1924580",
    "end": "1930730"
  },
  {
    "text": "that are not part of the dotnet core world okay all right so one thing that",
    "start": "1930730",
    "end": "1936670"
  },
  {
    "text": "we have not updated Visual Studio for which I hope to do soon is I actually",
    "start": "1936670",
    "end": "1942610"
  },
  {
    "text": "added my template not in a project because if you remember when we deploy a project we right-click on a project to",
    "start": "1942610",
    "end": "1948970"
  },
  {
    "text": "deploy MIT but since my cloud formation tuple it's not part of a project I don't currently have that option it was toolkit toolkit so you got it right that",
    "start": "1948970",
    "end": "1955960"
  },
  {
    "text": "time right so for me to do it this way I'm gonna actually man I should say if you",
    "start": "1955960",
    "end": "1961570"
  },
  {
    "text": "do have this in a project but then reference other projects still relatively it will work by the right-click but because I don't have it",
    "start": "1961570",
    "end": "1968710"
  },
  {
    "text": "in a project I'm gonna do this from the command line and here I can just a dotnet or lambda deploy service and",
    "start": "1968710",
    "end": "1976690"
  },
  {
    "start": "1972000",
    "end": "2148000"
  },
  {
    "text": "again I have practice that dispel you'd think I wouldn't know how to spell service okay because we've got that",
    "start": "1976690",
    "end": "1983110"
  },
  {
    "text": "defaults file setup we don't need to get any parameters here it's gonna read those and just use them let's look at",
    "start": "1983110",
    "end": "1988300"
  },
  {
    "text": "that debug file so here's our default file that we'd already done in previous ones which set up our buckets or regions",
    "start": "1988300",
    "end": "1995260"
  },
  {
    "text": "one of the curious things that some you might have not known about is in our dining car tooling we have a thing",
    "start": "1995260",
    "end": "2000510"
  },
  {
    "text": "called template substitutions the reason we have that is because I'm not a fan of",
    "start": "2000510",
    "end": "2005910"
  },
  {
    "text": "writing json documents with inside json documents so if you've written a state",
    "start": "2005910",
    "end": "2011190"
  },
  {
    "text": "machine that is a JSON document which would normally be written in your CloudFormation template inside this",
    "start": "2011190",
    "end": "2017490"
  },
  {
    "text": "field here so you'd have to escape all the quotes write everything else so what that template substitution is doing is",
    "start": "2017490",
    "end": "2024060"
  },
  {
    "text": "it's saying for this JSON path replace what its contents as with what's in this",
    "start": "2024060",
    "end": "2029910"
  },
  {
    "text": "file so I can define my whole state machine in a separate file when we run our deployment tooling it will do all",
    "start": "2029910",
    "end": "2035700"
  },
  {
    "text": "the combining of that if we look at our state machine we can see here we start",
    "start": "2035700",
    "end": "2043020"
  },
  {
    "text": "at our color map which goes down to determining best images which gin goes",
    "start": "2043020",
    "end": "2048270"
  },
  {
    "text": "into choosing your renderer which looked at that pixel count that property saw set and that first lambda function which",
    "start": "2048270",
    "end": "2055320"
  },
  {
    "text": "is how we're gonna choose which one of our lambda functions we want to actually do and then we fall down into the",
    "start": "2055320",
    "end": "2060960"
  },
  {
    "text": "notification step and we're done I suspect we are all deployed uh-huh so we",
    "start": "2060960",
    "end": "2066658"
  },
  {
    "text": "go check it out don't play with it so let's go to this step function console",
    "start": "2066659",
    "end": "2074148"
  },
  {
    "text": "here's our state machine and let's just do an execution Andy Danny cheat sheet",
    "start": "2078110",
    "end": "2085540"
  },
  {
    "text": "okay so that Jason he's gonna get deserialized into the state object do",
    "start": "2085540",
    "end": "2090679"
  },
  {
    "text": "you define break pass through so you have that state object will be converted",
    "start": "2090680",
    "end": "2096080"
  },
  {
    "text": "into this it's not gonna run our state machine which is now currently building that color map for us once we have our",
    "start": "2096080",
    "end": "2102920"
  },
  {
    "text": "color map we're gonna go find out what is the right image from our gallery that fits we would but you good problem but",
    "start": "2102920",
    "end": "2111350"
  },
  {
    "text": "we broke it what we do so let's take a look what we did wrong so we can click",
    "start": "2111350",
    "end": "2117380"
  },
  {
    "text": "here we can see we have some sort of index out of range exception something's",
    "start": "2117380",
    "end": "2123290"
  },
  {
    "text": "gone poorly but we have a new tool to test this right so in here we have this",
    "start": "2123290",
    "end": "2129560"
  },
  {
    "text": "is the actual event this state of our state object when it called this lambda function so we can take this and use our",
    "start": "2129560",
    "end": "2136310"
  },
  {
    "text": "lambda tester to go and replay this locally now we just saw how we did this in Visual Studio code or Visual Studio",
    "start": "2136310",
    "end": "2144130"
  },
  {
    "text": "let's take a look at how we can do envision pseudo code so here is the receipt of code and we have updated my",
    "start": "2144130",
    "end": "2152690"
  },
  {
    "text": "launch JSON file now in Visual Studio if you have the latest one it will just automatically set it up as you open up a",
    "start": "2152690",
    "end": "2157970"
  },
  {
    "text": "Dutton Lander project with fish theater code right now you would have to manually set up the launch path which",
    "start": "2157970",
    "end": "2165530"
  },
  {
    "text": "there are instructions for I'll show you to do the test hole is a dotnet core Global tool so that's how you get it and",
    "start": "2165530",
    "end": "2170960"
  },
  {
    "text": "you just update your IDE of choice to point to that and you make sure your current recommendation is a dotnet",
    "start": "2170960",
    "end": "2183230"
  },
  {
    "text": "global tool and this is just a launch Jason entry mm-hmm this means like indeed with my local my application",
    "start": "2183230",
    "end": "2190220"
  },
  {
    "text": "logic my lambda function on not just Windows now but Mac and Linux yes I got this car and any idea I've done it in",
    "start": "2190220",
    "end": "2195560"
  },
  {
    "text": "writer I've been ambitious to do it for Mac it works for all all right so here's",
    "start": "2195560",
    "end": "2200720"
  },
  {
    "text": "we're using the regular page I could select one of my sample ones I could save requests but we're gonna go use the",
    "start": "2200720",
    "end": "2207320"
  },
  {
    "text": "input we got from the step function console and sort of figure out what went so let's push execute and I already had",
    "start": "2207320",
    "end": "2215120"
  },
  {
    "text": "a breakpoint set up and now we're in our f-sharp lambda function which still follows that same pattern where we take",
    "start": "2215120",
    "end": "2221180"
  },
  {
    "text": "our state object and it becomes the return here so we're going in here I'm gonna push up five because I just have",
    "start": "2221180",
    "end": "2227810"
  },
  {
    "text": "another breakpoint that I think will give us some better clues what's going on so here we are we've loaded our tiles",
    "start": "2227810",
    "end": "2235960"
  },
  {
    "text": "and it looks like we have no tiles we actually loaded I'm gonna guess we index",
    "start": "2235960",
    "end": "2242120"
  },
  {
    "text": "wrong out of zero tiles having spent at nearly a lifetime type having dark for a",
    "start": "2242120",
    "end": "2248570"
  },
  {
    "text": "lifetime I'm betting you got the name of the gallery wrong let's see so yes",
    "start": "2248570",
    "end": "2253820"
  },
  {
    "text": "indeed it should have been normed a family picks with a plural I have dumb finger did in for the",
    "start": "2253820",
    "end": "2261410"
  },
  {
    "text": "millionth time so let's just go redo this so let's again take our initial",
    "start": "2261410",
    "end": "2269180"
  },
  {
    "text": "input close that down another execution",
    "start": "2269180",
    "end": "2277690"
  },
  {
    "text": "and let's actually fix the typo and this time we'll start the execution so this",
    "start": "2277690",
    "end": "2285200"
  },
  {
    "text": "time hopefully we've got a color map it is now hard working on creating our best images and it'll go render and notify",
    "start": "2285200",
    "end": "2292220"
  },
  {
    "text": "that but I'm pretty confident gonna work so why don't we go look at how we did this in CI CD yep because what goes",
    "start": "2292220",
    "end": "2300860"
  },
  {
    "text": "wrong in light demos right so next up here this is very similar in the last section to how we deployed the lambda",
    "start": "2300860",
    "end": "2307400"
  },
  {
    "start": "2302000",
    "end": "2355000"
  },
  {
    "text": "function for the s3 event we use code build to build the docker image and create that new updated CloudFormation",
    "start": "2307400",
    "end": "2313820"
  },
  {
    "text": "template and then use cloud formation and that build spec file is again very",
    "start": "2313820",
    "end": "2319450"
  },
  {
    "text": "similar so in this case the build spec file install the lambda tools and run",
    "start": "2319450",
    "end": "2326390"
  },
  {
    "text": "the lambda package CI command and that's all there is to it passing that template and have the updated template so my",
    "start": "2326390",
    "end": "2333650"
  },
  {
    "text": "output template again has the the locations updated because it's built a look the relative path the project for each of those projects this is gonna",
    "start": "2333650",
    "end": "2340070"
  },
  {
    "text": "build all four of those projects and have all of them set up correctly in that template and the state machine injected",
    "start": "2340070",
    "end": "2345230"
  },
  {
    "text": "right all right I suspect we're still rendering still rendering but I think",
    "start": "2345230",
    "end": "2350450"
  },
  {
    "text": "we'll just move on with it yeah we'll see that one in a while let's move on to the slides okay so that was server list subsystem",
    "start": "2350450",
    "end": "2357440"
  },
  {
    "text": "number two the mosaic renderer and we shot we saw how to use step functions in this case using a mix of different",
    "start": "2357440",
    "end": "2363650"
  },
  {
    "text": "languages C sharp and F sharp and to orchestrate a workflow we saw use again",
    "start": "2363650",
    "end": "2369380"
  },
  {
    "text": "using the.net mock lambda test tool to debug request input so multiple ways you",
    "start": "2369380",
    "end": "2374420"
  },
  {
    "text": "can get that request input into that tool you can use a sample request and that's been pre-built you can use the",
    "start": "2374420",
    "end": "2379520"
  },
  {
    "text": "actual request that your lambda function received or as we showed in the demo one using the dead letter Q the data from",
    "start": "2379520",
    "end": "2386300"
  },
  {
    "text": "that and the new support for deploying multiple projects using relative paths",
    "start": "2386300",
    "end": "2391370"
  },
  {
    "text": "in your service template so I think we're about ready for the final part the",
    "start": "2391370",
    "end": "2396650"
  },
  {
    "text": "web front-end so this should come as no",
    "start": "2396650",
    "end": "2401900"
  },
  {
    "text": "surprise that what we're going to want to do here is having users be able to upload images for new tile galleries that we saw in demo one by doing by hand",
    "start": "2401900",
    "end": "2408620"
  },
  {
    "text": "and uploading an image to create a mosaic however we only want it to be done for authenticated users I don't",
    "start": "2408620",
    "end": "2414620"
  },
  {
    "text": "want anybody coming along and uploading images into my site and to create mosaics so norm how did you do this well",
    "start": "2414620",
    "end": "2421850"
  },
  {
    "text": "either you you started with happy users we got our heavy users and in this case we're gonna use Fargate to do this",
    "start": "2421850",
    "end": "2428270"
  },
  {
    "text": "because we we want Fargate to manage all of our compute power and we want to use containers and our contingent to come",
    "start": "2428270",
    "end": "2434780"
  },
  {
    "text": "from ECR and to handle the authentication we're gonna use Amazon Cognito we're gonna use em as time use user",
    "start": "2434780",
    "end": "2441170"
  },
  {
    "text": "pools to think it all of the users come into our system and so this is the",
    "start": "2441170",
    "end": "2446300"
  },
  {
    "text": "system it's gonna interact with all of our other subsystems so it's gonna go use an initiator job there submit our",
    "start": "2446300",
    "end": "2451970"
  },
  {
    "text": "jobs to batch to create our new tile galleries so tile input here is the first subsystem that we saw demoed will",
    "start": "2451970",
    "end": "2458570"
  },
  {
    "text": "expand all this out later on but that's the first subsystem and then if you want to create a new mosaic we're gonna upload that to s3 and then work with our",
    "start": "2458570",
    "end": "2465680"
  },
  {
    "text": "rendering modes egg back and our step functions to go actually render that mosaic okay sugar sit yeah",
    "start": "2465680",
    "end": "2473020"
  },
  {
    "text": "all right so here we are this is my beautiful UI skills that I have feared a",
    "start": "2473720",
    "end": "2478730"
  },
  {
    "text": "lot from the a spinet core templates as you can see everyone can get to the welcome page but once I want to get to",
    "start": "2478730",
    "end": "2485570"
  },
  {
    "text": "my mosaics this is where we're gonna get challenged to log on because this is using a screen of course built-in",
    "start": "2485570",
    "end": "2491180"
  },
  {
    "text": "authentication system but we have Cognito that we're using as the authorizer",
    "start": "2491180",
    "end": "2496300"
  },
  {
    "text": "I'm gonna log on with hopefully the right password and here we are so almost",
    "start": "2496300",
    "end": "2508250"
  },
  {
    "text": "like there's the one we just rented right yeah this isn't rendered and why don't we go crate one and these mosaics are pretty large so they take a while to",
    "start": "2508250",
    "end": "2514700"
  },
  {
    "text": "download so here is Steve he's hanging out with the koala bears I'll use that",
    "start": "2514700",
    "end": "2521119"
  },
  {
    "text": "one you'll be made up of my family which is weird but hey I can live with it but",
    "start": "2521119",
    "end": "2529430"
  },
  {
    "start": "2527000",
    "end": "2707000"
  },
  {
    "text": "so here we go we have crazy mosaics I could go to tile galleries and create a new gallery there if I had another zip",
    "start": "2529430",
    "end": "2534680"
  },
  {
    "text": "file but why don't take a look about how this is gary did while we're creating you into koala so here's our project",
    "start": "2534680",
    "end": "2546020"
  },
  {
    "text": "here and the first thing I take a look at is my mosaic manager this is just my",
    "start": "2546020",
    "end": "2551210"
  },
  {
    "text": "code that I have that's gonna interface with those subsystems now this class is added to a spin of course dependency",
    "start": "2551210",
    "end": "2558020"
  },
  {
    "text": "injection system so all the Constructors are going to our parameters from the constructor are coming from the DI",
    "start": "2558020",
    "end": "2563560"
  },
  {
    "text": "that includes our application options settings in all of our service plans",
    "start": "2563560",
    "end": "2568609"
  },
  {
    "text": "that we use I'm also using the dynami context object this is part of our",
    "start": "2568609",
    "end": "2574339"
  },
  {
    "text": "high-level library we have for Dino to be where you can use type c-sharp classes or done it classes and just have",
    "start": "2574339",
    "end": "2580820"
  },
  {
    "text": "those be serialized to dino baby so our code to create music is basically we're",
    "start": "2580820",
    "end": "2587330"
  },
  {
    "text": "gonna grab the image that the user gave to us from the UI and we're gonna upload that to s3 and then we're gonna go and",
    "start": "2587330",
    "end": "2595660"
  },
  {
    "text": "create our mosaic object this is the object that gets stored into Dino DB this is all that metadata there and then",
    "start": "2595660",
    "end": "2603080"
  },
  {
    "text": "this guy is the input data that we sent into our step functions and this is gonna get serialize into",
    "start": "2603080",
    "end": "2609560"
  },
  {
    "text": "that JSON object that you saw us paste in in the console will initiate our step",
    "start": "2609560",
    "end": "2615200"
  },
  {
    "text": "functions and then once we do that where you're gonna save to down a DB that we",
    "start": "2615200",
    "end": "2620240"
  },
  {
    "text": "have initiated this process so that's the whole step of kicking off to rendering now for batch here we take in",
    "start": "2620240",
    "end": "2629000"
  },
  {
    "text": "our parameters usually user ID gallery in URL we submit our job passing in the",
    "start": "2629000",
    "end": "2634880"
  },
  {
    "text": "queue that we want to pass it to which job definition we want to use and this",
    "start": "2634880",
    "end": "2639980"
  },
  {
    "text": "is where we set all those environment variables that you saw me use in the console so everything we can do programmatically here there so I see",
    "start": "2639980",
    "end": "2646610"
  },
  {
    "text": "you're using a bunch of settings from app options there how are those getting set so when I was working in you know",
    "start": "2646610",
    "end": "2653030"
  },
  {
    "text": "locally at myself I was just putting things in my app development file setting all those settings but that's",
    "start": "2653030",
    "end": "2659870"
  },
  {
    "text": "not how I really want to do things in production I don't want these things buried in my container image I want them",
    "start": "2659870",
    "end": "2665120"
  },
  {
    "text": "to be able to be changed externally so what we thought we should do is we should use parameters store from system",
    "start": "2665120",
    "end": "2672020"
  },
  {
    "text": "manager to be able to get configurations into our application in fact if we look at my CloudFormation template i used to",
    "start": "2672020",
    "end": "2678230"
  },
  {
    "text": "build all of my resources like here i created my job queue in my job",
    "start": "2678230",
    "end": "2684170"
  },
  {
    "text": "definition out of this and I published the arms of those all to SSM in fact if",
    "start": "2684170",
    "end": "2691490"
  },
  {
    "text": "we go to SSM let's just take a look here",
    "start": "2691490",
    "end": "2696580"
  },
  {
    "text": "system manager big fonts threw me off",
    "start": "2697570",
    "end": "2703640"
  },
  {
    "text": "parameter store we can see here's all those settings that we put in there",
    "start": "2703640",
    "end": "2709190"
  },
  {
    "start": "2707000",
    "end": "3010000"
  },
  {
    "text": "here's in fact this is the art of our job definition with this kita Prime",
    "start": "2709190",
    "end": "2714500"
  },
  {
    "text": "Minister does my code they'll have to read those settings back one by one no we have a new library that we're",
    "start": "2714500",
    "end": "2720440"
  },
  {
    "text": "actually working on publishing very soon that makes it really simple in fact all",
    "start": "2720440",
    "end": "2726050"
  },
  {
    "text": "you need to do when we push this out to nougat is you will add the nougat",
    "start": "2726050",
    "end": "2731870"
  },
  {
    "text": "package which I know will be hard to see here but we'll have a slide that will have the name in a minute you'll add the ad based SDK extensions",
    "start": "2731870",
    "end": "2738170"
  },
  {
    "text": "configuration system manager so you'll add that nougat package and then in your program file what you're",
    "start": "2738170",
    "end": "2744820"
  },
  {
    "text": "doing all the bootstrapping you'll just add this line of saying what what key",
    "start": "2744820",
    "end": "2750550"
  },
  {
    "text": "prefixes you want from system manager to be added to the a spindle core configuration system so that pulls down",
    "start": "2750550",
    "end": "2755950"
  },
  {
    "text": "all the settings under that prefix correct and we can have multiple so I can have I had most of my settings on a",
    "start": "2755950",
    "end": "2761710"
  },
  {
    "text": "stage one but I turn my case I put the user pool settings under a global one because I was using the same user pool",
    "start": "2761710",
    "end": "2767680"
  },
  {
    "text": "for development and prod for good or bad okay so should also point out that that library was actually a user contribution",
    "start": "2767680",
    "end": "2774250"
  },
  {
    "text": "that is true ken from the dotnet community for us he donated that to our team that we are working on finishing",
    "start": "2774250",
    "end": "2780730"
  },
  {
    "text": "and getting that finalized for us thank you Ken now one thing I do is say he",
    "start": "2780730",
    "end": "2785860"
  },
  {
    "text": "added a really cool feature though is that the configurations are not static I",
    "start": "2785860",
    "end": "2791200"
  },
  {
    "text": "can actually say timespan from let's say five minutes and so every five minutes",
    "start": "2791200",
    "end": "2798550"
  },
  {
    "text": "this library is gonna go and pull to see if there's new configuration information new config data added to parameter store",
    "start": "2798550",
    "end": "2804580"
  },
  {
    "text": "so I could change things without doing a redeploy right well okay so that's the",
    "start": "2804580",
    "end": "2810460"
  },
  {
    "text": "first library that we have really that were working on releasing it is that one github another one if you have worked",
    "start": "2810460",
    "end": "2817570"
  },
  {
    "text": "with a spinet core in production you might have run into struggle with how to deal with the anti forgery token and an",
    "start": "2817570",
    "end": "2825610"
  },
  {
    "text": "exponent core plication what this is is if you have like web forms forms in your",
    "start": "2825610",
    "end": "2831310"
  },
  {
    "text": "application what a spent core is doing is it's putting an ant a forgery token behind that and then when you post the",
    "start": "2831310",
    "end": "2838240"
  },
  {
    "text": "form it makes sure that the form hasn't been tampered with an anti forgery is",
    "start": "2838240",
    "end": "2843400"
  },
  {
    "text": "based off of a Spinnaker's data protection library which builds a crypto information off of some keys now by",
    "start": "2843400",
    "end": "2850660"
  },
  {
    "text": "default when you're working in development it creates those keys just in memory which works great for development but once you're in prod you",
    "start": "2850660",
    "end": "2858340"
  },
  {
    "text": "have multiple in our case multiple Fargate containers and we need to make sure all those are using this same exact",
    "start": "2858340",
    "end": "2864580"
  },
  {
    "text": "key because we don't know which server that container or that form is going to post back to so again we thought we",
    "start": "2864580",
    "end": "2872110"
  },
  {
    "text": "could use parameter store to centralize that sharing of the key so the other",
    "start": "2872110",
    "end": "2878950"
  },
  {
    "text": "library we were releasing here is Amazon a spinette core data protection SSM again whatever the link to this repo in",
    "start": "2878950",
    "end": "2884710"
  },
  {
    "text": "a slide later on and in my startup class",
    "start": "2884710",
    "end": "2889740"
  },
  {
    "text": "here it is where we say add data protection we're gonna say persist the keys to system manager and give a prefix",
    "start": "2890130",
    "end": "2897280"
  },
  {
    "text": "of where we want it to be stored up and so all of our containers that get launched in our cluster or Beanstalk",
    "start": "2897280",
    "end": "2903640"
  },
  {
    "text": "instances however you're deploying this can all get the same keys and make sure they're using and sing so in fact if we",
    "start": "2903640",
    "end": "2910210"
  },
  {
    "text": "go again back to system manager you can see here is my data protection key",
    "start": "2910210",
    "end": "2916720"
  },
  {
    "text": "that's being stored with as a secure string and you could also use your own custom kms key with that as well now the",
    "start": "2916720",
    "end": "2926410"
  },
  {
    "text": "third library that we want to show is we've talked about how we want to use kognito as our for authentication and if you've",
    "start": "2926410",
    "end": "2935680"
  },
  {
    "text": "been done authentication in asymmetric or already you might have had something like this where you added sequel server",
    "start": "2935680",
    "end": "2940810"
  },
  {
    "text": "and entity framework to handle your authentication so we want to model our",
    "start": "2940810",
    "end": "2945940"
  },
  {
    "text": "new library off of this very simple way of just injecting this and your startup class and things just work with a stores",
    "start": "2945940",
    "end": "2952060"
  },
  {
    "text": "agent of course identity so you're gonna add a code a line like this that just says add Cognito identity provider and",
    "start": "2952060",
    "end": "2958590"
  },
  {
    "text": "then that's going to use the user pool information that I have in my configuration and take care of use all",
    "start": "2958590",
    "end": "2965830"
  },
  {
    "text": "that same a smart card identification like you saw when I clicked on my pages that is locked down you had to be",
    "start": "2965830",
    "end": "2972040"
  },
  {
    "text": "authenticated that's all when we have that so again those three libraries are",
    "start": "2972040",
    "end": "2977770"
  },
  {
    "text": "out on github we will get them out soon and we would definitely welcome feedback so I think those are all the libraries",
    "start": "2977770",
    "end": "2983440"
  },
  {
    "text": "wanted to show yeah so again we could deploy this from inside visual studio but let's I'm gonna go take a look at the CI CD for this but if you did want",
    "start": "2983440",
    "end": "2990250"
  },
  {
    "text": "to do super just studio again if you're just trying to learn how things are you again you would go right click publish",
    "start": "2990250",
    "end": "2995500"
  },
  {
    "text": "to publish community with and in our case we'd say do is this service the e CS cluster and it would walk you through",
    "start": "2995500",
    "end": "3001710"
  },
  {
    "text": "going through the Fargate deployment but let's take a look at CI CD shut this",
    "start": "3001710",
    "end": "3010980"
  },
  {
    "text": "down and so here's the final stage our front end again we're using code build",
    "start": "3010980",
    "end": "3017460"
  },
  {
    "text": "to build that docker image and publish it to ECR in my case I added a cloud formation",
    "start": "3017460",
    "end": "3022950"
  },
  {
    "text": "step there just to make sure the service and our ACS cluster was created when I was doing that my development you",
    "start": "3022950",
    "end": "3029010"
  },
  {
    "text": "couldn't really create the service until that initial doctorate image existed so after we did that in this language this",
    "start": "3029010",
    "end": "3034890"
  },
  {
    "text": "doesn't really do anything and then we have the front-end deployment as well so this is when we actually go tell ECS",
    "start": "3034890",
    "end": "3040890"
  },
  {
    "text": "let's use that new docker image so if we look at the build spec file here again",
    "start": "3040890",
    "end": "3047760"
  },
  {
    "text": "I'm using my Amazon SES tools this is our done and Gor dotnet core global tool I'm gonna go tell it to go push that",
    "start": "3047760",
    "end": "3053760"
  },
  {
    "text": "image to easiest which does the docker build and does the log on to ECR and pushes that out now in this case we need",
    "start": "3053760",
    "end": "3060570"
  },
  {
    "text": "to communicate further than a pipeline the changes that we want to do so in",
    "start": "3060570",
    "end": "3065670"
  },
  {
    "text": "this case we need to write a JSON file that says for this container definition",
    "start": "3065670",
    "end": "3071300"
  },
  {
    "text": "update it to this new image URI that we have now what I mean by container",
    "start": "3071300",
    "end": "3076860"
  },
  {
    "text": "definition is and let's just go to the life of my brain is melting on that indirection can we go see it so let's",
    "start": "3076860",
    "end": "3083370"
  },
  {
    "text": "just look at ECS here because there are a lot of definitions so it's just narrows down so here's ECS this is my cluster that",
    "start": "3083370",
    "end": "3091320"
  },
  {
    "text": "we're using here and so my cluster can have any number of services this is my",
    "start": "3091320",
    "end": "3097950"
  },
  {
    "text": "front end service and when you launch a service you launch it with an Associated task definition that task definition is",
    "start": "3097950",
    "end": "3106110"
  },
  {
    "text": "saying what containers with docker images I want to run as part of this service so in my case I just have one",
    "start": "3106110",
    "end": "3114720"
  },
  {
    "text": "container definition one container I want to launch I could have multiple in here but I just have one and that's this",
    "start": "3114720",
    "end": "3120510"
  },
  {
    "text": "thing that's what maps back to that JSON file that were writing in the CI this name here is what maps to this guy okay",
    "start": "3120510",
    "end": "3127200"
  },
  {
    "text": "so if I was deploying multiple docker images I could do multiple pushes here and put multiple entries in here and",
    "start": "3127200",
    "end": "3132840"
  },
  {
    "text": "they would be passed through so that goes there and then if we again look at our pipeline",
    "start": "3132840",
    "end": "3138250"
  },
  {
    "text": "set up all the way to the bottom here so",
    "start": "3138250",
    "end": "3144370"
  },
  {
    "text": "here's our ECS deployment from our pipeline again we're gonna use the easiest provider and we're gonna say use",
    "start": "3144370",
    "end": "3150670"
  },
  {
    "text": "that file this was the output from our code build and say for this cluster for",
    "start": "3150670",
    "end": "3156490"
  },
  {
    "text": "this service and that's what we just saw on the console update all the container definitions that are listed in this file",
    "start": "3156490",
    "end": "3162310"
  },
  {
    "text": "and so that's how that gets rolled out there alright that was a lot of tech so",
    "start": "3162310",
    "end": "3167620"
  },
  {
    "text": "do I get my koala reward now oh let's see how did her how did we look here so",
    "start": "3167620",
    "end": "3174070"
  },
  {
    "text": "let's go back over to mosaics is their application so here is the mosaic of my",
    "start": "3174070",
    "end": "3180370"
  },
  {
    "text": "family this is us hiking out in the Pacific Northwest and let's see what is my daughter's hair made out of I can't",
    "start": "3180370",
    "end": "3187300"
  },
  {
    "text": "be the Pacific Northwest it's not raining it doesn't always rain so here it is this is a lot of pictures of my",
    "start": "3187300",
    "end": "3193540"
  },
  {
    "text": "family hiking in the Pacific Northwest I think there's some birthday parties sometimes when I get to sneak out and",
    "start": "3193540",
    "end": "3198850"
  },
  {
    "text": "see a concert those are those let's see what Steve looks like here is Steve made",
    "start": "3198850",
    "end": "3205870"
  },
  {
    "text": "up of a lot of images and the Koala here is made up you can see of all those",
    "start": "3205870",
    "end": "3211540"
  },
  {
    "text": "pictures of my family so we are all made up of a koala bear sir alright alright I",
    "start": "3211540",
    "end": "3218020"
  },
  {
    "text": "think there's head on back so what did we see there then so the new upcoming",
    "start": "3218020",
    "end": "3224710"
  },
  {
    "start": "3221000",
    "end": "3275000"
  },
  {
    "text": "libraries for handling identity data protection and configuration as we said they are on github I'll give you the link shortly we expect them to be on you",
    "start": "3224710",
    "end": "3231820"
  },
  {
    "text": "get real soon now but no eta at the moment we've got that final fit and finish to do in the first and second",
    "start": "3231820",
    "end": "3238720"
  },
  {
    "text": "demos we saw us invoking batch and step functions by hand how to do this from inside your code and had to share",
    "start": "3238720",
    "end": "3244210"
  },
  {
    "text": "configuration with Systems Manager parameter store and then the final steps of deploying containers to Fargate using",
    "start": "3244210",
    "end": "3250630"
  },
  {
    "text": "code pipeline so here are the links to the upcoming little repository on github",
    "start": "3250630",
    "end": "3255970"
  },
  {
    "text": "we'll have these on the I think they are already there but in case they're not will have them on that shortly to that",
    "start": "3255970",
    "end": "3261760"
  },
  {
    "text": "central dotnet repository on github make sure they're on there for you yeah we really recommend if you guys are cute",
    "start": "3261760",
    "end": "3267460"
  },
  {
    "text": "about these check these out and provide us feedback because since we haven't pushed into nougat this is the best time so we can still",
    "start": "3267460",
    "end": "3273680"
  },
  {
    "text": "make breaking changes so let's just quickly revisit the architecture so again all serverless so the first",
    "start": "3273680",
    "end": "3281029"
  },
  {
    "start": "3275000",
    "end": "3302000"
  },
  {
    "text": "subsystem we used ages batch with containers and a lambda function to do the processing for our tile gallery",
    "start": "3281029",
    "end": "3286939"
  },
  {
    "text": "ingestion second subsystem mosaic rendering we use step functions onto lambda from on to lambda functions and",
    "start": "3286939",
    "end": "3293689"
  },
  {
    "text": "thirdly the web front-end hosted an ad with Fargate fully service and we never",
    "start": "3293689",
    "end": "3298819"
  },
  {
    "text": "managed an ec2 instance or anything not once okay session wrap so we saw the",
    "start": "3298819",
    "end": "3304699"
  },
  {
    "start": "3302000",
    "end": "3415000"
  },
  {
    "text": "dotnet mock lambda test tool this is also on github open source as we mentioned the latest toolkit for visual",
    "start": "3304699",
    "end": "3310339"
  },
  {
    "text": "studio will auto configure when you hit f5 if you're using Visual Studio code or Visual Studio for Mac or JetBrains",
    "start": "3310339",
    "end": "3316609"
  },
  {
    "text": "writer the instructions are in the readme in the repo to set it up it's really simple some useful links here the",
    "start": "3316609",
    "end": "3323569"
  },
  {
    "text": "dotnet blog from the team and the Adrienne at Twitter handle AWS Fernet if you want to follow us some extra cuter",
    "start": "3323569",
    "end": "3329119"
  },
  {
    "text": "blinks but we also wanted to point out you heard in the keynote this morning the new upcoming toolkit for Visual",
    "start": "3329119",
    "end": "3334339"
  },
  {
    "text": "Studio code the sharp-eyed amongst you might have seen on norm demo and he was",
    "start": "3334339",
    "end": "3339349"
  },
  {
    "text": "using visual studio there's a short ADA by this logo we have a few minutes you want to say Steve you work Jenny one",
    "start": "3339349",
    "end": "3345140"
  },
  {
    "text": "trailer we can try actually I mean you're gonna so here we are inside Visual Studio code and you can see we've",
    "start": "3345140",
    "end": "3352249"
  },
  {
    "text": "got a few over here on to our lambda functions and you can see actually norms deployed functions from the demo there's",
    "start": "3352249",
    "end": "3357679"
  },
  {
    "text": "an extra one in there hello world so we can invoke lambda function so this is if you've used the Visual Studio toolkit",
    "start": "3357679",
    "end": "3363469"
  },
  {
    "text": "where we can invoke a deployed lambda function using sample requests or your own this maps to that functionality as",
    "start": "3363469",
    "end": "3368869"
  },
  {
    "text": "you can see this is still under active development we have a bit of a way to go yet the UI needs some fit and finish etc",
    "start": "3368869",
    "end": "3375289"
  },
  {
    "text": "as well as features but it's looking good so if you just invoke your hello and",
    "start": "3375289",
    "end": "3380479"
  },
  {
    "text": "your lambda here and it will open up a new output stream inside the to debug terminal and there's my eight that came",
    "start": "3380479",
    "end": "3386299"
  },
  {
    "text": "back this is there a famous hello world where we to upper things yeah so it's early days as I say it's under active",
    "start": "3386299",
    "end": "3391699"
  },
  {
    "text": "development but it is open source on github we welcome feedback we welcome pull request contributors etc it's",
    "start": "3391699",
    "end": "3397249"
  },
  {
    "text": "initially targeting service workflows that we've shown today so we think is pretty cool please check it out",
    "start": "3397249",
    "end": "3404110"
  },
  {
    "text": "okay say it back to the slides just say thank you [Applause]",
    "start": "3404110",
    "end": "3416890"
  }
]