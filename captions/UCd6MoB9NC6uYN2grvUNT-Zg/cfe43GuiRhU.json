[
  {
    "text": "Amazon web services platform and occasionally I do get involved in these kinds of presentations where I can present features or fun on the ABS",
    "start": "80",
    "end": "6440"
  },
  {
    "text": "platform as katr mentioned uh today it's going to be all about um uh some new features in the identity and access",
    "start": "6440",
    "end": "12480"
  },
  {
    "text": "management um uh realm of AWS and uh and it's going to talk a lot about how you",
    "start": "12480",
    "end": "17760"
  },
  {
    "text": "can leverage uh some new features in that realm to actually extend your active directory identities and use them",
    "start": "17760",
    "end": "23080"
  },
  {
    "text": "as a way to authenticate um and then generate tokens to use datab Services um but with that I want to jump into a",
    "start": "23080",
    "end": "29480"
  },
  {
    "text": "presentation um and give you a quick agenda of what we're going to cover this so I can",
    "start": "29480",
    "end": "35280"
  },
  {
    "text": "imagine that a lot of folks um may not even be familiar with identity and access management as a whole so I want to make sure we go through a quick",
    "start": "35280",
    "end": "40960"
  },
  {
    "text": "refresh of uh identity access manager or I am as I'll shorten it throughout the presentation um then we'll jump into a",
    "start": "40960",
    "end": "47320"
  },
  {
    "text": "quick discussion of temporary security credentials what they are why you might use them um and I'll sort of show that",
    "start": "47320",
    "end": "53359"
  },
  {
    "text": "uh in the presentation uh how you might wire that all together um all the different components might play together",
    "start": "53359",
    "end": "58879"
  },
  {
    "text": "in a in a particular solution um to allow you to do Federated identity um and then I actually have a demonstration",
    "start": "58879",
    "end": "65880"
  },
  {
    "text": "uh an architecture and a demonstration based on a sample um that we shipped with the uh the new temporary security",
    "start": "65880",
    "end": "71520"
  },
  {
    "text": "token or security credentials feature that uh shows how this all could be wired up and I'll be doing that on some",
    "start": "71520",
    "end": "78080"
  },
  {
    "text": "some windows servers and AWS to highlight that whole that whole mechanism um with that I'll just jump",
    "start": "78080",
    "end": "84159"
  },
  {
    "text": "right in so let's do a quick refresh of identity and access management",
    "start": "84159",
    "end": "90560"
  },
  {
    "text": "so what is identity and access management so uh when AWS first started uh the the credentials there was one set",
    "start": "90560",
    "end": "97880"
  },
  {
    "text": "of credentials there was the you know there was your your abs access key ID uh your secret key and that was the master",
    "start": "97880",
    "end": "103840"
  },
  {
    "text": "credentials associated with your account um obviously there were lots of questions early on about well do I share",
    "start": "103840",
    "end": "109000"
  },
  {
    "text": "this set of credentials with all my developers do I share this with other people in the company who might want to access um ABS Management console or the",
    "start": "109000",
    "end": "115719"
  },
  {
    "text": "services directly um and the answer was well that's the way it is you know when we started however that's why we created",
    "start": "115719",
    "end": "122240"
  },
  {
    "text": "this identi and access management realm of of features um it allows you underneath an ads account um or a master",
    "start": "122240",
    "end": "129720"
  },
  {
    "text": "account to start creating and managing users and groups right so you can create your own groups underneath that so you",
    "start": "129720",
    "end": "135640"
  },
  {
    "text": "might say I've uh certain folks in the organization that are administrators they have you know uh there's one group",
    "start": "135640",
    "end": "141360"
  },
  {
    "text": "for them there's a group for my developers there might be a group for my dbas there might be you know various",
    "start": "141360",
    "end": "146560"
  },
  {
    "text": "groups within my organization that might have different needs to interact with um the AWS platform and different AWS",
    "start": "146560",
    "end": "152920"
  },
  {
    "text": "Services um within those groups I can create individual users um so I can create either a flat user in no groups",
    "start": "152920",
    "end": "159000"
  },
  {
    "text": "or I can put them in various M multiple groups um and that allows me to sort of organize Who belongs to what groups and",
    "start": "159000",
    "end": "165120"
  },
  {
    "text": "that actually will organizable permissions that might have um because you now have the group and user",
    "start": "165120",
    "end": "170319"
  },
  {
    "text": "infrastructure you can actually have much improved security over the original single account credential model um you",
    "start": "170319",
    "end": "177440"
  },
  {
    "text": "can create obviously multiple users each one can have their own set of permissions uh which means you can create a policy for each group um or",
    "start": "177440",
    "end": "185239"
  },
  {
    "text": "actual individual user and the combination of those policies will be their permission set um it's obviously",
    "start": "185239",
    "end": "190360"
  },
  {
    "text": "secure by default all the apis are secure the storage the information secure and the endpoints um that you",
    "start": "190360",
    "end": "195720"
  },
  {
    "text": "know we provide you or secure and this also means that now you have the ability to create credentials for each individ",
    "start": "195720",
    "end": "201560"
  },
  {
    "text": "individual user so you don't have account um identity sharing or credential sharing um so that means that",
    "start": "201560",
    "end": "209000"
  },
  {
    "text": "if a individual joins the team he's in your development team you put him in the developers group under that group within identity access",
    "start": "209000",
    "end": "215560"
  },
  {
    "text": "management over time he might move on to a different group or he might decide to to move on outside of the company uh you",
    "start": "215560",
    "end": "220879"
  },
  {
    "text": "can deactivate that single account so or you can change the permissions of that single account you have much more",
    "start": "220879",
    "end": "226000"
  },
  {
    "text": "finding control over the users uh access controls and what uh what services they",
    "start": "226000",
    "end": "231480"
  },
  {
    "text": "can reach out and interact with um Again part of that whole improved control um",
    "start": "231480",
    "end": "236760"
  },
  {
    "text": "platform it's much more centralized control of user access you can do this all within a console and I'll show that",
    "start": "236760",
    "end": "241840"
  },
  {
    "text": "in a moment um you can Define gr permissions so the as I was mentioning the policies you can create that a group",
    "start": "241840",
    "end": "248079"
  },
  {
    "text": "or user level uh can lock things down to a specific API within a single service and a single resource in some scenarios",
    "start": "248079",
    "end": "255319"
  },
  {
    "text": "so that would mean that you could literally create a uh you know S3 uh you know admins group and all they would",
    "start": "255319",
    "end": "262120"
  },
  {
    "text": "have the rights to or call you know the S3 apis um and then within that you might say and this particular user only",
    "start": "262120",
    "end": "269080"
  },
  {
    "text": "can access with particular uh prefix um within a single bucket um for example um",
    "start": "269080",
    "end": "275080"
  },
  {
    "text": "so we'll show some of that as we go along that's part of the the demo later um but you really can lock down control",
    "start": "275080",
    "end": "281039"
  },
  {
    "text": "to individual apis and in some services like S3 even down to specific resources like files within um the actual S3 the",
    "start": "281039",
    "end": "289320"
  },
  {
    "text": "S3 bucket um and then of course that allows them to get access to not only just the",
    "start": "289320",
    "end": "294520"
  },
  {
    "text": "apis but it also works with console as well you can generate identities um that allow those users to log into the",
    "start": "294520",
    "end": "300720"
  },
  {
    "text": "console and then they would have access to in that previous example vs3 admins group those users in that group would",
    "start": "300720",
    "end": "307160"
  },
  {
    "text": "have their own login to the console which would then be restricted to interacting with the the S3 tab if you",
    "start": "307160",
    "end": "312520"
  },
  {
    "text": "will on the Management console they might be able to click on the other tabs but they won't be able to interact or do anything with those other services",
    "start": "312520",
    "end": "318319"
  },
  {
    "text": "because their Access Control policy limits them specifically to the S3 um set of features in that example um and",
    "start": "318319",
    "end": "325680"
  },
  {
    "text": "obviously in order to support this you know you need to create policies we do have a policy generation Tool uh which allows you to you know pick the API you",
    "start": "325680",
    "end": "333160"
  },
  {
    "text": "want you know highlight the conditions of access uh indicate uh the you know the resources they might be able to",
    "start": "333160",
    "end": "339280"
  },
  {
    "text": "touch and then that will actually autogenerate a Json document which you can use with the IM console page to go",
    "start": "339280",
    "end": "345960"
  },
  {
    "text": "ahead and set policies at the user or group level and obviously this is fully integrated in the platform which means",
    "start": "345960",
    "end": "352080"
  },
  {
    "text": "that you know you can create those policies in the IM page and then it immediately is impactful within the services integrated with the IM um",
    "start": "352080",
    "end": "359240"
  },
  {
    "text": "technology IES so you know that would mean that you can create a policy around multiple Services you can be affect",
    "start": "359240",
    "end": "365160"
  },
  {
    "text": "their ec2 usage S3 uh um RDS all those services are integrated in this platform",
    "start": "365160",
    "end": "371319"
  },
  {
    "text": "and many more allowing you to create one centralized policy that actually can manage access across multiple different",
    "start": "371319",
    "end": "376919"
  },
  {
    "text": "ads services so let's take a quick look this",
    "start": "376919",
    "end": "382120"
  },
  {
    "text": "is some quick screenshots but I'll just jump in and actually show you live right here in the console um so this is you",
    "start": "382120",
    "end": "387680"
  },
  {
    "text": "know my particular uh Management console and I've jumped here to the I am tab um",
    "start": "387680",
    "end": "393240"
  },
  {
    "text": "and so you can see here I'm on the the last tab on the console there AWS am and",
    "start": "393240",
    "end": "398280"
  },
  {
    "text": "I can now see that uh I can go right into my groups I can see what groups I've created and of course I have",
    "start": "398280",
    "end": "403759"
  },
  {
    "text": "several groups that I've set up here previously Network admins developers script users um you know system",
    "start": "403759",
    "end": "411319"
  },
  {
    "text": "administrator so for something like system administrators I might set a highle policy on something like that",
    "start": "411319",
    "end": "417599"
  },
  {
    "text": "that says well I want everyone in that group to have access to everything and",
    "start": "417599",
    "end": "422639"
  },
  {
    "text": "so I can actually show the policy right here um in my in the console I can see",
    "start": "422639",
    "end": "428080"
  },
  {
    "text": "that my you know statement is that I allow access on ec2 S3 RDS simply simple",
    "start": "428080",
    "end": "434560"
  },
  {
    "text": "notification service autoscaling and elastic load balancing to any resource so that's my admin policy it's generic",
    "start": "434560",
    "end": "440560"
  },
  {
    "text": "um it allows you know any user within that group under I am to have that level of access",
    "start": "440560",
    "end": "446039"
  },
  {
    "text": "right um and then of course if I look in here I see this just admin group has one user in there I've got one user who CIS",
    "start": "446039",
    "end": "452599"
  },
  {
    "text": "admin now that CIS admin may have his own additional policy um obviously it's",
    "start": "452599",
    "end": "457680"
  },
  {
    "text": "a lease permission uh lease permission is kind of a model so he couldn't necessarily extend anything beyond what he got before um but he might have a",
    "start": "457680",
    "end": "465240"
  },
  {
    "text": "specific policy in this case he doesn't um obviously simplify Administration for this s admin he doesn't have his own",
    "start": "465240",
    "end": "471759"
  },
  {
    "text": "policy but I could go ahead and set his own permissions by attaching a user policy right here in the console um",
    "start": "471759",
    "end": "478120"
  },
  {
    "text": "obviously this applies to you know the other groups some can be you know less and more complex as an",
    "start": "478120",
    "end": "483240"
  },
  {
    "text": "example say the developers group um I've decided with developers I want them to be able to launch instances uh add you",
    "start": "483240",
    "end": "491360"
  },
  {
    "text": "know storage create snapshots but I can't they can't stop instances they can't delete volumes they can't so I",
    "start": "491360",
    "end": "497599"
  },
  {
    "text": "went and created a policy that was very specific to the apis that were much more",
    "start": "497599",
    "end": "502759"
  },
  {
    "text": "readon or additive in my environment relative to say you know apis that might",
    "start": "502759",
    "end": "508440"
  },
  {
    "text": "actually stop servers so you know it actually is a very flexible policy language um that allows you toh go ahead",
    "start": "508440",
    "end": "515880"
  },
  {
    "text": "and add a whole bunch of distinct apis if you want um or you know do something more in sort of a star notation like for",
    "start": "515880",
    "end": "522599"
  },
  {
    "text": "simply to be I've said hey I'll let them do everything for example you know so um",
    "start": "522599",
    "end": "528399"
  },
  {
    "text": "so there things like that has that flexibility within the actual policy language so that gives you a sense of of",
    "start": "528399",
    "end": "534080"
  },
  {
    "text": "you know what I am the console does and how you can manage those policies directly",
    "start": "534080",
    "end": "540200"
  },
  {
    "text": "now if we go on to um what this means for an Enterprise or for a large organization or somebody who already has",
    "start": "540200",
    "end": "546959"
  },
  {
    "text": "extensive user base um you may say oh well great that's that's fantastic so given that model what I can do is I can",
    "start": "546959",
    "end": "554079"
  },
  {
    "text": "take all of the you know the identities that I have in my company and I can",
    "start": "554079",
    "end": "559200"
  },
  {
    "text": "create you know identity and access management users for them and those then will show up and have the own user account that will allow them to access",
    "start": "559200",
    "end": "565680"
  },
  {
    "text": "the PBS service API directly um that's really you obviously a very powerful",
    "start": "565680",
    "end": "570720"
  },
  {
    "text": "feature means you can have you know one entity um for you know any of your developers to allow them to to uh",
    "start": "570720",
    "end": "576640"
  },
  {
    "text": "authenticate against B Services however um there are scenarios where that doesn't work um and that certainly is",
    "start": "576640",
    "end": "584279"
  },
  {
    "text": "scenario uh there are a couple specific ones that we've heard from our customers that actually this wasn't perfect for um",
    "start": "584279",
    "end": "590680"
  },
  {
    "text": "the first example was hey I've got a I've got active directory I've got you know some L app store or some you know",
    "start": "590680",
    "end": "597160"
  },
  {
    "text": "identity system uh in place it has tens of thousands of you know employees in it",
    "start": "597160",
    "end": "602720"
  },
  {
    "text": "why do I want to create you know one one toone mapping between all those and you know the identity and access management",
    "start": "602720",
    "end": "608839"
  },
  {
    "text": "um platform you know I want to use my existing identities how do I Federate my existing identity store into into use",
    "start": "608839",
    "end": "615360"
  },
  {
    "text": "adbs and that was certainly one you know early scenario that people came up with and said hey we wanna we want that too",
    "start": "615360",
    "end": "622279"
  },
  {
    "text": "um another one that actually has come up quite often is you know I don't want to create permanent users I really just",
    "start": "622279",
    "end": "628120"
  },
  {
    "text": "want a temporary interaction so I want to hand out a token or a credential or something to a mobile client to access",
    "start": "628120",
    "end": "635880"
  },
  {
    "text": "you know sqs or simple for the next hour or two right so I want to be able to",
    "start": "635880",
    "end": "641639"
  },
  {
    "text": "control that you know fine grain access control but I only want it to last for a period of time and I don't want to be creating and unrea you know identity",
    "start": "641639",
    "end": "648279"
  },
  {
    "text": "access management users all the time um so both of those weren't easily addressed by that the previous um",
    "start": "648279",
    "end": "654320"
  },
  {
    "text": "scenario so to address that we went ahead and actually created temporary security credentials and that's what",
    "start": "654320",
    "end": "660480"
  },
  {
    "text": "most of this presentation is about um really the idea of creating credentials that you can use on the flly um so you",
    "start": "660480",
    "end": "667839"
  },
  {
    "text": "know some really common use cases I just mentioned for something like this obviously uh identity Federation so if I",
    "start": "667839",
    "end": "674399"
  },
  {
    "text": "have an active directory um Baseline you know user base and I want to go ahead and Federate those identities uh so that",
    "start": "674399",
    "end": "681279"
  },
  {
    "text": "I can use use uh that username password that I have in my you know corporate domain as a way to authenticate and then",
    "start": "681279",
    "end": "687480"
  },
  {
    "text": "you know get credentials to AWS you know temporary security credentials can can address that we'll see how that works um",
    "start": "687480",
    "end": "693160"
  },
  {
    "text": "mobile and browser based apps obviously you know flexible time bound um you know credentials that can be generated on the",
    "start": "693160",
    "end": "699519"
  },
  {
    "text": "Fly handed out without worry of um of those being permanent credentials they might you know use later it'd be time",
    "start": "699519",
    "end": "706240"
  },
  {
    "text": "bound as well um consumer applications with obviously unlimited users so if you have you know several million you know",
    "start": "706240",
    "end": "712959"
  },
  {
    "text": "users Downstream you may not want to create several million um individual identity and access management users you",
    "start": "712959",
    "end": "718600"
  },
  {
    "text": "may say let's use generate a token for um so you know obviously this this security credential model uh is intended",
    "start": "718600",
    "end": "725519"
  },
  {
    "text": "also to scale much higher than just creating individual users so it you know can scale the millions of users um with",
    "start": "725519",
    "end": "731320"
  },
  {
    "text": "very limited effort um and uh it what it what it contains what's part of this",
    "start": "731320",
    "end": "736639"
  },
  {
    "text": "what you really get with it is um very similar to what you have when you create an ion user um you get identity for",
    "start": "736639",
    "end": "743800"
  },
  {
    "text": "authentication um and it actually has an access control policy um so that identity for authen ation includes",
    "start": "743800",
    "end": "750480"
  },
  {
    "text": "obviously an ads access key ID you know a secret key um that can be used for authentication and an additional um",
    "start": "750480",
    "end": "756920"
  },
  {
    "text": "field that's been added which is a token um those three together represent um the",
    "start": "756920",
    "end": "762839"
  },
  {
    "text": "temporary security credentials that been generated and then as part of that when you create them you also pass in an",
    "start": "762839",
    "end": "768079"
  },
  {
    "text": "access um an access policy that says what features and functionalities you want to allow that credential set to",
    "start": "768079",
    "end": "774320"
  },
  {
    "text": "access under the identity um so obviously supports um AWS identi",
    "start": "774320",
    "end": "779720"
  },
  {
    "text": "um so the master account can generate these um but even IM users uh that you've created underneath your ads",
    "start": "779720",
    "end": "785680"
  },
  {
    "text": "account have the right if you so choose um to generate these uh tokens as well",
    "start": "785680",
    "end": "790720"
  },
  {
    "text": "these temporary security credentials so how does that look um so",
    "start": "790720",
    "end": "796560"
  },
  {
    "text": "if I were then doing identity Federation with these this new uh security credential set um I could go ahead and",
    "start": "796560",
    "end": "802760"
  },
  {
    "text": "have my Enterprise employees authenticate against an internal session proy um that would then authenticate",
    "start": "802760",
    "end": "809399"
  },
  {
    "text": "their active directory um U identities you know username password relative to",
    "start": "809399",
    "end": "814680"
  },
  {
    "text": "the Windows domain um it would then look that up in the local active directory store and then it could call out these",
    "start": "814680",
    "end": "820240"
  },
  {
    "text": "new apis to uh to get a uh to get a token set um for that particular",
    "start": "820240",
    "end": "826920"
  },
  {
    "text": "identity so a session could be started and then those credentials could be handed down to the Enterprise employees",
    "start": "826920",
    "end": "832720"
  },
  {
    "text": "who could then use them to call the ads service API directly um so that flexibility exists to generate on the",
    "start": "832720",
    "end": "839240"
  },
  {
    "text": "why um you know an identity based on authenticating against not the AWS",
    "start": "839240",
    "end": "844600"
  },
  {
    "text": "authentication platform but rather your session proxy and internal active directory um uh set same thing can be",
    "start": "844600",
    "end": "853320"
  },
  {
    "text": "applied obviously with mobile or consumer applications um you know hundreds or thousands or millions of users Downstream mobile devices um they",
    "start": "853320",
    "end": "860519"
  },
  {
    "text": "could then call a a session proxy or a um session service would authenticate them against any alternate you know",
    "start": "860519",
    "end": "868120"
  },
  {
    "text": "identity store so this could be just a you know username password in a database that you um protect um it could also you",
    "start": "868120",
    "end": "875040"
  },
  {
    "text": "know be it could be keros it could be other you know Technologies um that you might choose behind the scen behind the",
    "start": "875040",
    "end": "881120"
  },
  {
    "text": "scenes uh but ultimately it's obviously authenticating against that identity store and then a credential set again is",
    "start": "881120",
    "end": "887000"
  },
  {
    "text": "generated specifically for that device that user for that period of time with the control policy you",
    "start": "887000",
    "end": "894320"
  },
  {
    "text": "specifi so what's in this new uh Federation um feature set um so obviously it's enabling support for",
    "start": "894320",
    "end": "901199"
  },
  {
    "text": "identity Federation being one of the key um one of the key scenarios that we've heard about um for either Enterprise",
    "start": "901199",
    "end": "908480"
  },
  {
    "text": "applications or mobile or consumer apps um and then uh it's obviously going to",
    "start": "908480",
    "end": "913920"
  },
  {
    "text": "support um the support of this will actually roll out over time as you see you know the list here ec2 S3 sqs SNS um",
    "start": "913920",
    "end": "922680"
  },
  {
    "text": "are are supporting this service right away with things like simple DV you know following the first line so there's",
    "start": "922680",
    "end": "927839"
  },
  {
    "text": "definitely services be adding this feature set over time but the the generic feature set is in in play at the",
    "start": "927839",
    "end": "933440"
  },
  {
    "text": "moment um and so uh in addition to that we've also provided a sample application",
    "start": "933440",
    "end": "939040"
  },
  {
    "text": "uh which is part of the launch that you can then Download Sort of see how these things work um and I'll show you in the",
    "start": "939040",
    "end": "944399"
  },
  {
    "text": "demo I've actually extended that sample application for a slightly different um take on how you might choose to",
    "start": "944399",
    "end": "950079"
  },
  {
    "text": "implement this particular approach what's important to realize when you think about um what these what",
    "start": "950079",
    "end": "956720"
  },
  {
    "text": "this permission structure looks like is that you're generating really a hierarchy of permissions um you know for",
    "start": "956720",
    "end": "963800"
  },
  {
    "text": "the the users that you're handing out these these uh these credentials to so when I go ahead you know the master",
    "start": "963800",
    "end": "969480"
  },
  {
    "text": "account credentials uh that everyone gets when they create their account are effectively unlimited so you see you",
    "start": "969480",
    "end": "975519"
  },
  {
    "text": "know the permissions it's unrestricted access to all the enabled Services any service you've turned on it gives you full access to it's to call those apis",
    "start": "975519",
    "end": "982839"
  },
  {
    "text": "um you know effectively in the in the uh ads policy language you know which is implicit here obviously that's the the",
    "start": "982839",
    "end": "989040"
  },
  {
    "text": "action any action if allows you know any resource um It's You full control right",
    "start": "989040",
    "end": "994519"
  },
  {
    "text": "and that's obviously an implicit policy at that master account level as you create IM am users you know they actually get restricted by um group and",
    "start": "994519",
    "end": "1002839"
  },
  {
    "text": "user level policies that you might set so specifically you could you know imagine oh well I you know want an IM am",
    "start": "1002839",
    "end": "1008399"
  },
  {
    "text": "user that only has access to S3 full control and can generate you know maybe",
    "start": "1008399",
    "end": "1013639"
  },
  {
    "text": "generate tokens for others to go ahead and actually um allow some level La of test three",
    "start": "1013639",
    "end": "1019360"
  },
  {
    "text": "so you know I have an access control policy that's here you know small example of it that shows oh I can call",
    "start": "1019360",
    "end": "1025280"
  },
  {
    "text": "any S3 API um and I can call the new uh session token service um get you know",
    "start": "1025280",
    "end": "1032038"
  },
  {
    "text": "get star so I need the get operations which would allow me to generate you know a token set um for for a Federated",
    "start": "1032039",
    "end": "1038918"
  },
  {
    "text": "identity user and I you know I allow that and is on any resource um now",
    "start": "1038919",
    "end": "1043959"
  },
  {
    "text": "what's interesting to realize is these temporary security credentials that you're generating if you're using this IMU user you're actually restricted",
    "start": "1043959",
    "end": "1050919"
  },
  {
    "text": "immediately at that point by the capabilities of the IM user that is generating those",
    "start": "1050919",
    "end": "1056960"
  },
  {
    "text": "credentials so you know if I were using in this model or this example set that we're going through right here that",
    "start": "1056960",
    "end": "1063120"
  },
  {
    "text": "means that if I wanted to create temporary security credentials here at the bottom you know I couldn't allow",
    "start": "1063120",
    "end": "1068600"
  },
  {
    "text": "access to ec2 in this temporary security um credential set because uh the I am",
    "start": "1068600",
    "end": "1074679"
  },
  {
    "text": "user I'm using above only has access to S3 and the and the and the ability to",
    "start": "1074679",
    "end": "1079840"
  },
  {
    "text": "generate tokens so it's actually further filtered so that means I can do a finer",
    "start": "1079840",
    "end": "1085240"
  },
  {
    "text": "grain restriction in my temporary secur credentials so I can restrict them further to just do get operations um and",
    "start": "1085240",
    "end": "1092360"
  },
  {
    "text": "it's only to allow and I can further restrict to specific resources underneath the the star but I can't",
    "start": "1092360",
    "end": "1097880"
  },
  {
    "text": "expand that feature set um with the the temporary security contential so that's a a really important model to recognize",
    "start": "1097880",
    "end": "1104760"
  },
  {
    "text": "that if you're using this um approach to Federate identities um you're not stuck",
    "start": "1104760",
    "end": "1109799"
  },
  {
    "text": "with you know handing out the keys to the kingdom you know and and allowing any access you actually can even make",
    "start": "1109799",
    "end": "1115760"
  },
  {
    "text": "your session property which is generating these identities be restricted down to the singular services",
    "start": "1115760",
    "end": "1121200"
  },
  {
    "text": "or features that you have to Federate out so you might not allow that that um that uh Federation that session proxy",
    "start": "1121200",
    "end": "1128360"
  },
  {
    "text": "identity to do anything beyond limit the access to only the services you want um",
    "start": "1128360",
    "end": "1133720"
  },
  {
    "text": "those Federate identities to access so how does this all hang",
    "start": "1133720",
    "end": "1140440"
  },
  {
    "text": "together so you know here's the here's actually the use case for the you know the sample code that that's in place um",
    "start": "1140440",
    "end": "1148200"
  },
  {
    "text": "and here you can see uh the Enterprise employees you know are on their laptops",
    "start": "1148200",
    "end": "1153240"
  },
  {
    "text": "um sitting around deciding they want to access um you know S3 because they want to go ahead and and uh have a backup",
    "start": "1153240",
    "end": "1159640"
  },
  {
    "text": "folder that they can actually put things into and they have a backup client on their laptop that they might be using to",
    "start": "1159640",
    "end": "1165919"
  },
  {
    "text": "do that backup but they can't hit S3 directly until they have a set of um credentials for them to access um",
    "start": "1165919",
    "end": "1172799"
  },
  {
    "text": "furthermore the Enterprise may say well I want everyone to be in just one bucket I can't I can only have create a 100",
    "start": "1172799",
    "end": "1177919"
  },
  {
    "text": "buckets under my account so I can't you know for my 10,000 employees I can't have a single bucket for employee I want",
    "start": "1177919",
    "end": "1184320"
  },
  {
    "text": "to use a prefix um before all their all their files for employee that allows them to say okay well you know Bob's",
    "start": "1184320",
    "end": "1190960"
  },
  {
    "text": "goes under my bucket Bob and Sal goes under my bucket Sal um that means I want",
    "start": "1190960",
    "end": "1196480"
  },
  {
    "text": "to further restrict the access of that client on Sally's laptop to only the folder um or the prefix that is SL Sally",
    "start": "1196480",
    "end": "1204880"
  },
  {
    "text": "under that bucket um so I can then control who can put what where and I can",
    "start": "1204880",
    "end": "1210280"
  },
  {
    "text": "further restrict the resource access um so the employee in this scenario would log in with their credentials to you",
    "start": "1210280",
    "end": "1216120"
  },
  {
    "text": "know Enterprise reporting application right um that you know Enterprise reporting application you know will go",
    "start": "1216120",
    "end": "1221960"
  },
  {
    "text": "ahead and obviously authenticate them against um you know their identity broker um it'll go into the identity",
    "start": "1221960",
    "end": "1228720"
  },
  {
    "text": "broker passed in those credentials that would then authenticate against elap or active directory whatever the identity",
    "start": "1228720",
    "end": "1234039"
  },
  {
    "text": "store is confirm that in fact you know Bob is uh is in fact still an employee still works here still has a valid um",
    "start": "1234039",
    "end": "1241440"
  },
  {
    "text": "identity um and then that identity broker uh down here can then go off and call the security token service and ask",
    "start": "1241440",
    "end": "1249080"
  },
  {
    "text": "for a set of credentials that allow Bob access uh Bob's identity access specifically to S3 and the folder SL Bob",
    "start": "1249080",
    "end": "1256840"
  },
  {
    "text": "under my bucket so you can generate a a policy on the Fly uh and then go ahead and hand out that credential set um to",
    "start": "1256840",
    "end": "1264039"
  },
  {
    "text": "the Enterprise reporting app and then also down to Bob um Bob could then go ahead and through that credential set um",
    "start": "1264039",
    "end": "1271080"
  },
  {
    "text": "call S3 directly um and go ahead and actually upload a file you know list the",
    "start": "1271080",
    "end": "1277360"
  },
  {
    "text": "the contents of his particular folder um things like that will be allowed uh so",
    "start": "1277360",
    "end": "1282760"
  },
  {
    "text": "that Bob can go ahead and actually um upload manage his files directly without having to go through the Enterprise",
    "start": "1282760",
    "end": "1288159"
  },
  {
    "text": "reporting um and he could his backup client on his computer can go ahead and take care of",
    "start": "1288159",
    "end": "1293679"
  },
  {
    "text": "that um so that's you know a particular sample scenario and in the sample code um that was shipped with the with the",
    "start": "1293679",
    "end": "1299840"
  },
  {
    "text": "launch uh you'll see kind of a basic shim that that sort of lays that together um what I want to do uh was",
    "start": "1299840",
    "end": "1307360"
  },
  {
    "text": "actually go one step further uh on that sample code so the demo that I'm going to run through and show you is actually",
    "start": "1307360",
    "end": "1313880"
  },
  {
    "text": "going to be this um General architecture number one obviously went specific to active directory um because obviously",
    "start": "1313880",
    "end": "1320240"
  },
  {
    "text": "it's a very common uh Enterprise identity store um obviously then in that",
    "start": "1320240",
    "end": "1325320"
  },
  {
    "text": "case using is uh and the scenario that I'm going to run uh through in this demo",
    "start": "1325320",
    "end": "1331360"
  },
  {
    "text": "is that uh I want to allow a client program down here at the bottom of the screen uh to go ahead and upload files",
    "start": "1331360",
    "end": "1337760"
  },
  {
    "text": "to or or read files from a specific folder in S3 based on his domain identity right so the first thing he's",
    "start": "1337760",
    "end": "1345080"
  },
  {
    "text": "going to do is actually make a request um out to an i server which is where the",
    "start": "1345080",
    "end": "1351320"
  },
  {
    "text": "session proxy service lives and this is based on the sample code um that uh that",
    "start": "1351320",
    "end": "1356840"
  },
  {
    "text": "shipped with the with the launch so that server um is actually running a Windows communication Foundation um Service uh",
    "start": "1356840",
    "end": "1364480"
  },
  {
    "text": "which actually uh has integrated Windows authentication um on it which means that",
    "start": "1364480",
    "end": "1370039"
  },
  {
    "text": "in order for him from that client program to even talk to that service he has to then pass his windows credentials",
    "start": "1370039",
    "end": "1375520"
  },
  {
    "text": "um which means he then has an authenticated um connection with that is um server and that Windows WCF service",
    "start": "1375520",
    "end": "1382840"
  },
  {
    "text": "um that Windows authentication that Windows identity is then further used by the service to then look up uh his",
    "start": "1382840",
    "end": "1389720"
  },
  {
    "text": "information in active directory um within active directory um the one thing",
    "start": "1389720",
    "end": "1394760"
  },
  {
    "text": "we've been talking about in this uh this this presentation so far is the idea of storing policies or sub policies or or",
    "start": "1394760",
    "end": "1402559"
  },
  {
    "text": "more restrictive ads policies based on these credentials so I need some place to store those policies in the demo code",
    "start": "1402559",
    "end": "1408520"
  },
  {
    "text": "that you can download with the launch it puts those policies directly into the web config of the session proxy um I",
    "start": "1408520",
    "end": "1414799"
  },
  {
    "text": "chose in this particular demo to show how you can put those uh policies specifically into active directory so",
    "start": "1414799",
    "end": "1421240"
  },
  {
    "text": "with just adding people um without with just group membership adding people and removing people um from a Active",
    "start": "1421240",
    "end": "1427679"
  },
  {
    "text": "Directory Group you can enable access I'll show that works in just a minute um so but the is server and the",
    "start": "1427679",
    "end": "1434919"
  },
  {
    "text": "WCF service needs to grab that policy information so it reaches out to 80 it grabs all the bits of policy from active",
    "start": "1434919",
    "end": "1441440"
  },
  {
    "text": "directory it then generates a policy from that um from those bits of of policy and sends that along with a",
    "start": "1441440",
    "end": "1448159"
  },
  {
    "text": "request to the um security token service um the IM apis which actually uh it",
    "start": "1448159",
    "end": "1454520"
  },
  {
    "text": "generates a set of credentials on the Fly for um the uh IM Service uh then",
    "start": "1454520",
    "end": "1460200"
  },
  {
    "text": "returns those credentials set which then goes back to the WCF service which then hands those credentials down to the",
    "start": "1460200",
    "end": "1465640"
  },
  {
    "text": "client program so now the client program has a newly Ed set of AWS credentials",
    "start": "1465640",
    "end": "1470720"
  },
  {
    "text": "that allow with an access key a Seeker key a token uh and a and a specific",
    "start": "1470720",
    "end": "1475760"
  },
  {
    "text": "policy tied to that which they then will use to call AWS Services directly so now",
    "start": "1475760",
    "end": "1481200"
  },
  {
    "text": "that client program can use these newly created uh credentials and call S3 directly and then list buckets and and",
    "start": "1481200",
    "end": "1488440"
  },
  {
    "text": "actually read files um based on the prefix of their user identity so I'll show how that all hangs together right",
    "start": "1488440",
    "end": "1496600"
  },
  {
    "text": "now all right so the first thing you want to know about is what are we doing with these this policy storage so what I",
    "start": "1496600",
    "end": "1502399"
  },
  {
    "text": "have here is I actually um brought up uh a Windows Server you know obviously easy",
    "start": "1502399",
    "end": "1508840"
  },
  {
    "text": "place to demo something I brought up a Windows server in ec2 um and I've enabled it to be an active directory",
    "start": "1508840",
    "end": "1514080"
  },
  {
    "text": "controller I made a fake domain controller Enterprise DC um that actually uh is running active directory",
    "start": "1514080",
    "end": "1521279"
  },
  {
    "text": "and um just to simplify my number of moving Parts I installed I and enabled I",
    "start": "1521279",
    "end": "1526440"
  },
  {
    "text": "on it as well so I could do it all in one box in a production scenario as as seen in that previous slide obviously",
    "start": "1526440",
    "end": "1533559"
  },
  {
    "text": "the I server would be distinct most people don't run I directly on their ad um but you know that that is obviously",
    "start": "1533559",
    "end": "1540960"
  },
  {
    "text": "what I've done here just for for the simple the simple approach so if I pull up my active directory Administration",
    "start": "1540960",
    "end": "1548159"
  },
  {
    "text": "Center I can see that uh I have obviously access here to see the various",
    "start": "1548159",
    "end": "1553600"
  },
  {
    "text": "groups and what I've done is I've created a whole new group called AWS S3 users",
    "start": "1553600",
    "end": "1559799"
  },
  {
    "text": "the reason why I've done this um and I've added you know I can add various members to it so I have a couple of",
    "start": "1559799",
    "end": "1564840"
  },
  {
    "text": "domain accounts here I have the Enterprise uh the administrator uh of the Enterprise DC domain I also have a",
    "start": "1564840",
    "end": "1571760"
  },
  {
    "text": "just a standard domain user um that's also part of the domain um they're both members of this particular uh ads F3",
    "start": "1571760",
    "end": "1579679"
  },
  {
    "text": "users group uh in addition to that um I decided to leverage uh some existing",
    "start": "1579679",
    "end": "1586600"
  },
  {
    "text": "Fields uh in directory to store certain information now in this particular example I chose to just use alt security",
    "start": "1586600",
    "end": "1594279"
  },
  {
    "text": "identities field it turns out there's obviously a lot of fields within active directory some which have purposes some",
    "start": "1594279",
    "end": "1599640"
  },
  {
    "text": "which are there just as placeholders um and it's you know obviously extending the active directory schema is is uh not",
    "start": "1599640",
    "end": "1606039"
  },
  {
    "text": "something most people would be comfortable with doing or or or would even be allowed to do from a security perspective so a lot of um there are a",
    "start": "1606039",
    "end": "1613240"
  },
  {
    "text": "lot of scenarios under which Microsoft products and even you know people who want to extend uh their or use a will",
    "start": "1613240",
    "end": "1618559"
  },
  {
    "text": "just use or reuse active directory field um so fairly common practice to pick a",
    "start": "1618559",
    "end": "1624080"
  },
  {
    "text": "an empty field and active directory and repurpose it for certain scenarios in this case I chose to use the alt",
    "start": "1624080",
    "end": "1629399"
  },
  {
    "text": "security identities field um you know there's also various other fields like URL or you know um you could pick a",
    "start": "1629399",
    "end": "1635760"
  },
  {
    "text": "whole bunch of things that might be uh interesting um or unused at the time and use them for storing bits of policy um",
    "start": "1635760",
    "end": "1641919"
  },
  {
    "text": "so as you can see here what I've stored is not a complete policy statement it starts right away with just the Sid it's missing that first statement fragment at",
    "start": "1641919",
    "end": "1648919"
  },
  {
    "text": "the beginning so I'm storing actually a portion of the policy and in this case you'll see here it's kind of hard to to",
    "start": "1648919",
    "end": "1654559"
  },
  {
    "text": "read this particular scenario but um you know I have a personal bucket access policy that allows the action of S3 get",
    "start": "1654559",
    "end": "1660559"
  },
  {
    "text": "object to be allowed uh to the resource and I've restricted it from a resource perspective and you'll see I have a",
    "start": "1660559",
    "end": "1666600"
  },
  {
    "text": "couple of odd um strings in here bracket bracket bucket name bracket bracket user these are being replaced on the Fly um",
    "start": "1666600",
    "end": "1673640"
  },
  {
    "text": "by the actual session proy proxy service I'll show that in a moment um to to m the actual identity of the user who's",
    "start": "1673640",
    "end": "1680840"
  },
  {
    "text": "authenticated against the WCF service um in addition to that you know then I have a general bucket listing function which",
    "start": "1680840",
    "end": "1687039"
  },
  {
    "text": "allows them to list bucket and that is then allowed for the entire bucket name so they can list the bucket and they can",
    "start": "1687039",
    "end": "1694200"
  },
  {
    "text": "go ahead and they can actually get a particular file out of that bucket based on a prefix that is connected to uh",
    "start": "1694200",
    "end": "1700679"
  },
  {
    "text": "their particular username okay so that's a bit of policy I've stored there um obviously if I had uh multiple groups",
    "start": "1700679",
    "end": "1707399"
  },
  {
    "text": "like this EC two user groups uh you know uh various other uh uh other services or",
    "start": "1707399",
    "end": "1712919"
  },
  {
    "text": "even other functions um I might have fragments of policy in various pieces and then this uh this session Pro I'll",
    "start": "1712919",
    "end": "1719000"
  },
  {
    "text": "show you in the moment um can actually aggregate those policy fragments into one generic policy as a whole um this is",
    "start": "1719000",
    "end": "1725360"
  },
  {
    "text": "obviously one approach um I want to stress obviously um that this is only one of many approaches for storing",
    "start": "1725360",
    "end": "1731159"
  },
  {
    "text": "policy policy fragments should be considered um a highly secure pieces of information obviously they control ads",
    "start": "1731159",
    "end": "1737159"
  },
  {
    "text": "access so even though it's not a set of credentials themselves these fields should obviously be secured against",
    "start": "1737159",
    "end": "1743200"
  },
  {
    "text": "um change from unauthorized users um if you stored it in the web config as well",
    "start": "1743200",
    "end": "1748559"
  },
  {
    "text": "again you know securing those um there's lots of approaches you can choose but obviously these are highly secure bits",
    "start": "1748559",
    "end": "1754320"
  },
  {
    "text": "of data you want to make sure are secured in your in your approach um so that's how uh you might store a bit of",
    "start": "1754320",
    "end": "1759799"
  },
  {
    "text": "policy and active directory um in addition to that um I might want to pull that together so I'll",
    "start": "1759799",
    "end": "1765640"
  },
  {
    "text": "show you the code for the for the proxy that pulls this out so one thing that's",
    "start": "1765640",
    "end": "1771600"
  },
  {
    "text": "going on in this code is I obviously have a a service that's being called to go ahead and uh and get the token get",
    "start": "1771600",
    "end": "1777960"
  },
  {
    "text": "the token credentials and so you'll see here right in the middle here I call get token this is a WCF service um that it",
    "start": "1777960",
    "end": "1785200"
  },
  {
    "text": "enables the requesting of the tokens and so what I can get is because this is a Windows authentication uh integrated",
    "start": "1785200",
    "end": "1791200"
  },
  {
    "text": "integrated approach um the log on user user identity is available in the actual request itself so you can pull out",
    "start": "1791200",
    "end": "1798399"
  },
  {
    "text": "through through an authenticated request that this is the true identity of the downstream client",
    "start": "1798399",
    "end": "1804159"
  },
  {
    "text": "program that's actually calling the service um and then I can go ahead and uh and get the security token um for",
    "start": "1804159",
    "end": "1811159"
  },
  {
    "text": "that username um what that eventually gets uh into is calling the",
    "start": "1811159",
    "end": "1819679"
  },
  {
    "text": "um creating the security token service um uh creating a security token service",
    "start": "1819679",
    "end": "1825559"
  },
  {
    "text": "client um which you do here now this set of credentials is different than the credentials I'm about to create this is",
    "start": "1825559",
    "end": "1831120"
  },
  {
    "text": "the identity and access management user the IM user I'm using to call the IM service so he has at a minimum more than",
    "start": "1831120",
    "end": "1838159"
  },
  {
    "text": "the credentials more than the access I'm going to allow to the the generated token um but he's been restricted to",
    "start": "1838159",
    "end": "1843960"
  },
  {
    "text": "just F3 and um and calling the uh the secure token service um so this and this",
    "start": "1843960",
    "end": "1850399"
  },
  {
    "text": "is actually stored in the web config those credentials so I create a a client for that I go ahead and build a username",
    "start": "1850399",
    "end": "1857720"
  },
  {
    "text": "um to make sure I I pull the information out and then I actually build the ABS policy now the ABS policy this is where",
    "start": "1857720",
    "end": "1862919"
  },
  {
    "text": "I'll show you how I get those bits out um with the ads policy I can actually use the the user principle it's actually",
    "start": "1862919",
    "end": "1869559"
  },
  {
    "text": "passed in um based on the username so I can hit uh active directory because this is server is a member of that domain I",
    "start": "1869559",
    "end": "1877000"
  },
  {
    "text": "can hit active directory and then I can go ahead and find the identity um for that particular username right once I",
    "start": "1877000",
    "end": "1883960"
  },
  {
    "text": "have that identity I can literally walk through um you know by getting the underlying object and using the",
    "start": "1883960",
    "end": "1889919"
  },
  {
    "text": "directory entry um uh class which is part of the directory Services um",
    "start": "1889919",
    "end": "1896200"
  },
  {
    "text": "namespace uh that allows me to actually walk through the ldap fields and I can pull all the various if it contains you",
    "start": "1896200",
    "end": "1902519"
  },
  {
    "text": "know the ad policy field that I'm using I can pull that information now the ad policy field I'm using in this case was",
    "start": "1902519",
    "end": "1908799"
  },
  {
    "text": "the alt security identities and I put that in the web config so it simplifies my configuration um but uh but I can",
    "start": "1908799",
    "end": "1914840"
  },
  {
    "text": "pull that and so if there's actually something set there then I can use that that part of my list of AOS policies",
    "start": "1914840",
    "end": "1920080"
  },
  {
    "text": "which I then will add that straight um I then can additionally I can get actually all the groups Associated um with that",
    "start": "1920080",
    "end": "1927120"
  },
  {
    "text": "user and then I can walk through um the various groups and do the same exact check to say Hey you know is there an ad",
    "start": "1927120",
    "end": "1934120"
  },
  {
    "text": "policy field on that group if so let's add it to the list of policies um that I have access to and then at the end of",
    "start": "1934120",
    "end": "1940880"
  },
  {
    "text": "that I can go ahead and build a policy statement so you'll see here I'm pulling",
    "start": "1940880",
    "end": "1946159"
  },
  {
    "text": "I'm basically starting a policy string with the Slash the curly quote statement quote um and then I'm building out and",
    "start": "1946159",
    "end": "1953120"
  },
  {
    "text": "I'm actually extending for each of the the a policy strings I found in ad I'm",
    "start": "1953120",
    "end": "1958480"
  },
  {
    "text": "going ahead and appending it to a longer string which is then the complete statement of All Access Control capabilities um and you can see as we",
    "start": "1958480",
    "end": "1965039"
  },
  {
    "text": "talked about before I'm doing some substitutions along the way things like bucket name should be substituted with",
    "start": "1965039",
    "end": "1970120"
  },
  {
    "text": "the bucket name that I've configured this for domain user domain and user can be replaced as well um and then I go",
    "start": "1970120",
    "end": "1976519"
  },
  {
    "text": "ahead and put that whole string together that generates my policy um that policy is then actually used right here",
    "start": "1976519",
    "end": "1984200"
  },
  {
    "text": "after I've got it uh to get a get Federation token request to create one",
    "start": "1984200",
    "end": "1989279"
  },
  {
    "text": "and you'll see here I'm creating a a policy based on the username the policy",
    "start": "1989279",
    "end": "1994360"
  },
  {
    "text": "string um I just I have to give it a name here and then I create a duration for that um that duration in the",
    "start": "1994360",
    "end": "2000840"
  },
  {
    "text": "scenario is actually you know eight hours um so you can make it an hour to 36 hours so I've chosen to get this",
    "start": "2000840",
    "end": "2008039"
  },
  {
    "text": "person eight hours access um to S3 based on that policy that I've gen on the",
    "start": "2008039",
    "end": "2014919"
  },
  {
    "text": "Fly um I then create that that session through a get Federation token call uh",
    "start": "2014919",
    "end": "2021399"
  },
  {
    "text": "and then once I pass that session down I can actually I I created a temporary set of uh create a set of credentials um",
    "start": "2021399",
    "end": "2029480"
  },
  {
    "text": "which I then passed down as a as a Json um object to the downstream client so",
    "start": "2029480",
    "end": "2034559"
  },
  {
    "text": "now the downstream client has their own access key ID secret access key they",
    "start": "2034559",
    "end": "2039679"
  },
  {
    "text": "have an expiration field that they can see so if you're a downstream client of this and you've just been given a set of credentials you can see how long they're",
    "start": "2039679",
    "end": "2046880"
  },
  {
    "text": "lasting for you can see when they expire so if I were building a downstream app that used this service I would then",
    "start": "2046880",
    "end": "2052040"
  },
  {
    "text": "check I would store that expiration date and then you know eight hours from now I say I G need to get another one and I",
    "start": "2052040",
    "end": "2057280"
  },
  {
    "text": "could underneath the covers inside my app just sort of go back and authenticate again quickly grab another token and swap it out for further calls",
    "start": "2057280",
    "end": "2063760"
  },
  {
    "text": "but my my last longer um and then I get the all important token which is a new um uh credential that that's been added",
    "start": "2063760",
    "end": "2071079"
  },
  {
    "text": "as part of this service um just for edification purposes I've added a policy",
    "start": "2071079",
    "end": "2076320"
  },
  {
    "text": "to this so you can see it that it's coming back and what the policy looks like um and then I go ahead and I pass",
    "start": "2076320",
    "end": "2082000"
  },
  {
    "text": "that back so now the downstream client has access to that particular uh um has",
    "start": "2082000",
    "end": "2087878"
  },
  {
    "text": "a has a set of credentials now the downstream client of course um has to then and I'll pop into",
    "start": "2087879",
    "end": "2093520"
  },
  {
    "text": "that code really fast the downstream client has to uh actually do a sorry",
    "start": "2093520",
    "end": "2099520"
  },
  {
    "text": "this is some old playing playing I was doing here um has to do a a web request",
    "start": "2099520",
    "end": "2105400"
  },
  {
    "text": "um and then actually deserialize that Json object that comes back um and then use those set of uh credentials that",
    "start": "2105400",
    "end": "2111800"
  },
  {
    "text": "have been returned now that I have a credential set I can use that um in",
    "start": "2111800",
    "end": "2117160"
  },
  {
    "text": "further calls down in the to say do listt bucket now or to say get an object",
    "start": "2117160",
    "end": "2123119"
  },
  {
    "text": "now as it turns out the the code to create the client you'll see here is",
    "start": "2123119",
    "end": "2128200"
  },
  {
    "text": "only slightly different than how I would have created an F3 client previously now I can do a set of session credentials",
    "start": "2128200",
    "end": "2135320"
  },
  {
    "text": "session ads credentials instead of um the the uh basic ads credentials that existed before I can do a set of session",
    "start": "2135320",
    "end": "2142400"
  },
  {
    "text": "ones and I add now three Fields The Constructor the ABS access key ID the secret access key and the token right so",
    "start": "2142400",
    "end": "2149200"
  },
  {
    "text": "all three of those are actually then um included in the requests the access key ID and the secret access key are used",
    "start": "2149200",
    "end": "2156040"
  },
  {
    "text": "the access key ID is included in the URL the secret access key is used for the signing of the actual request and then",
    "start": "2156040",
    "end": "2161760"
  },
  {
    "text": "the token is actually embedded as an HTTP header um in the actual request so that's how those flow over the wire um",
    "start": "2161760",
    "end": "2169400"
  },
  {
    "text": "and then now that I have that F3 client every call I make is using this new set of credentials all right so what does this",
    "start": "2169400",
    "end": "2176280"
  },
  {
    "text": "look like when you actually run it unfortunately it's just not as exciting um when you get to the",
    "start": "2176280",
    "end": "2182440"
  },
  {
    "text": "actual demo part as the as the code is um but I'll show you quickly how this all plays out so",
    "start": "2182440",
    "end": "2188640"
  },
  {
    "text": "um what I've got here is I've got uh a couple of different console windows that",
    "start": "2188640",
    "end": "2193920"
  },
  {
    "text": "are running this sample code um and so I'll actually pull up really quickly",
    "start": "2193920",
    "end": "2199520"
  },
  {
    "text": "here's my sample console app but then here's my um here's my uh config so",
    "start": "2199520",
    "end": "2204720"
  },
  {
    "text": "you'll see what I've done is I've said oh the bucket I want to hit is you know Mavis STS demo and the Federated token",
    "start": "2204720",
    "end": "2211560"
  },
  {
    "text": "service is this uh the WCF service called get temporary cr. service get",
    "start": "2211560",
    "end": "2217960"
  },
  {
    "text": "token right so that's the get token call or method you saw earlier in the token",
    "start": "2217960",
    "end": "2223119"
  },
  {
    "text": "service so that's actually how that um that is being called to get those credentials um so when this client",
    "start": "2223119",
    "end": "2229920"
  },
  {
    "text": "starts up it's going to go ahead and hit this Federated token service um to get a set of credentials and then it's going to go off and start calling S3 and hit",
    "start": "2229920",
    "end": "2236960"
  },
  {
    "text": "this um this personal folders bucket that's defined in consideration uh now interestingly",
    "start": "2236960",
    "end": "2243160"
  },
  {
    "text": "enough you probably noted that the server side also had the configuration for the bucket name um so the session",
    "start": "2243160",
    "end": "2251400"
  },
  {
    "text": "proxy is actually assuming and embedding a specific bucket because it's actually a session proxy for that particular S3",
    "start": "2251400",
    "end": "2257760"
  },
  {
    "text": "bucket you could have it be more generic um than that um but in this scenario if those two didn't match so if this said",
    "start": "2257760",
    "end": "2263839"
  },
  {
    "text": "Mavis private or something um and the session proxy service said Mavis DSS",
    "start": "2263839",
    "end": "2269680"
  },
  {
    "text": "demo this wouldn't work because I'm trying to hit a bucket that has is not included in the policies that are being",
    "start": "2269680",
    "end": "2275599"
  },
  {
    "text": "generated um by the actual foxing um in this case they do match so it should work just fine so let me show you",
    "start": "2275599",
    "end": "2282520"
  },
  {
    "text": "quickly how that that all plays out so if I get rid of this configuration file you'll see I can run the console app and",
    "start": "2282520",
    "end": "2288520"
  },
  {
    "text": "it goes ahead now this first warning I'll actually show that to you really fast um it says it's not running over",
    "start": "2288520",
    "end": "2293560"
  },
  {
    "text": "htps this is actually um a great warning um I've actually implemented this WCF",
    "start": "2293560",
    "end": "2299040"
  },
  {
    "text": "service over plain HTTP um obviously this is you know generating credentials it's handing them out you want this be",
    "start": "2299040",
    "end": "2304800"
  },
  {
    "text": "over a secure connection I've done this for Simplicity sake um I didn't want to go you know generating a certificate",
    "start": "2304800",
    "end": "2310319"
  },
  {
    "text": "writing the code to sort of ignore any warnings around a certificate um so uh this scenario is just running over HTP",
    "start": "2310319",
    "end": "2316920"
  },
  {
    "text": "but if this were a production roll out of this um proxy service session proxy service then htps would be um not only",
    "start": "2316920",
    "end": "2323359"
  },
  {
    "text": "uh recommended but strongly encouraged um and so then You' be using SSL to encrypt those credentials but as you can",
    "start": "2323359",
    "end": "2329839"
  },
  {
    "text": "see what I've done is printed out some of the things that come back so I've received a token for Enterprise DC administrators that's saying hey here's",
    "start": "2329839",
    "end": "2336440"
  },
  {
    "text": "here's the window identity that was calling the service so it actually does recognize that I'm the administrator on",
    "start": "2336440",
    "end": "2342960"
  },
  {
    "text": "top of that it then I hand back the new access key that's just been created the secret key which I've starred out",
    "start": "2342960",
    "end": "2348000"
  },
  {
    "text": "various bits to avoid you rushing off and calling S3 on my behalf um and then you'll see this really long string here",
    "start": "2348000",
    "end": "2354400"
  },
  {
    "text": "that's the token that was generated um that actually so those three fields are the the fields you use for uh creating",
    "start": "2354400",
    "end": "2361319"
  },
  {
    "text": "that S3 client um from an authentication perspective um so and then of course on",
    "start": "2361319",
    "end": "2366680"
  },
  {
    "text": "top of that I've also shown you the policy that was generated the policy in this case you see that it's in a statement that it",
    "start": "2366680",
    "end": "2373560"
  },
  {
    "text": "looks very similar to that um policy fragment that was stored in ad that you saw earlier the big differen is being",
    "start": "2373560",
    "end": "2379440"
  },
  {
    "text": "that that session proxy did substitute out and said oh the resource that I",
    "start": "2379440",
    "end": "2384520"
  },
  {
    "text": "should be um looking at is you know Mavis stf demo administrator Star right",
    "start": "2384520",
    "end": "2392800"
  },
  {
    "text": "so I I've then restricted on on the Fly By Doing substitution um the actual",
    "start": "2392800",
    "end": "2397920"
  },
  {
    "text": "session proxy to only this folder um that belongs to the account uh that",
    "start": "2397920",
    "end": "2403359"
  },
  {
    "text": "called the service right um and then on top of that I also have U the uh the",
    "start": "2403359",
    "end": "2410760"
  },
  {
    "text": "restricted the bucket for listening so hit enter to continue it then say so this now is",
    "start": "2410760",
    "end": "2417599"
  },
  {
    "text": "called S3 um and it did it did a bucket list of contents for Mavis dsts demo",
    "start": "2417599",
    "end": "2424280"
  },
  {
    "text": "obviously you're may be curious as to whether that's actually what's in Mavis MTS demo so I'm going to go back here",
    "start": "2424280",
    "end": "2429839"
  },
  {
    "text": "and go to STS demo is one of my many folders and you can see I have a couple",
    "start": "2429839",
    "end": "2435760"
  },
  {
    "text": "folders there I've got an admin testing file got a domain user file so it's actually listing the contents",
    "start": "2435760",
    "end": "2441560"
  },
  {
    "text": "properly um now as you can imagine I can list out because I have access to the",
    "start": "2441560",
    "end": "2446920"
  },
  {
    "text": "administrator prefix or subfolder um within it I can LT out this um this text",
    "start": "2446920",
    "end": "2455240"
  },
  {
    "text": "file that's in the administrator folder say here obviously you see the you know the this is a test of the STS API bank",
    "start": "2455240",
    "end": "2461760"
  },
  {
    "text": "so that was the contents of that particular file um so that worked great now if I rerun this app then decide to",
    "start": "2461760",
    "end": "2468520"
  },
  {
    "text": "uh do it uh list out the domain user domain user domain user- testing",
    "start": "2468520",
    "end": "2477920"
  },
  {
    "text": "pxt you'll see that I get an access denied error right here um because I",
    "start": "2477920",
    "end": "2483119"
  },
  {
    "text": "don't have access to that folder my policy only allows me access to the administrator subfolder now uh previously I also launched a",
    "start": "2483119",
    "end": "2491000"
  },
  {
    "text": "another command window but you'll see here in the title of the command window this is running as Enterprise dpain user",
    "start": "2491000",
    "end": "2496640"
  },
  {
    "text": "I did a run as to create that command window so now I'm running as a different identity um in the domain so you can see",
    "start": "2496640",
    "end": "2503520"
  },
  {
    "text": "immediately the token receives different Enterprise DC domain domain user it has",
    "start": "2503520",
    "end": "2508720"
  },
  {
    "text": "a different um obviously different access keyid a different secret key a different token are all different and",
    "start": "2508720",
    "end": "2514319"
  },
  {
    "text": "the substitution is different in the policy down below you'll see say m tab is SPS demo doain user so all those",
    "start": "2514319",
    "end": "2520640"
  },
  {
    "text": "things have changed based on a new identity coming in and a new session token being created um it again because",
    "start": "2520640",
    "end": "2527280"
  },
  {
    "text": "has General listing capabilities lists everything in the bucket but it can't see it obviously can't access the administrator folder but unlike the",
    "start": "2527280",
    "end": "2534800"
  },
  {
    "text": "previous attempt from the administrator account I should be able to list out the",
    "start": "2534800",
    "end": "2540280"
  },
  {
    "text": "contents of the domain user files so there you go you can see it says this is",
    "start": "2540280",
    "end": "2545680"
  },
  {
    "text": "a domain user file this is the test of the SPs API so as you can see uh that",
    "start": "2545680",
    "end": "2551720"
  },
  {
    "text": "allows me to go ahead and uh generate specific policies um based on user identities and none of these users are",
    "start": "2551720",
    "end": "2558319"
  },
  {
    "text": "IM am users they've actually only they only exist um as a uh identity within",
    "start": "2558319",
    "end": "2563880"
  },
  {
    "text": "active directory so I've used that I've authenticated against active directory I've then turned around generated a",
    "start": "2563880",
    "end": "2569480"
  },
  {
    "text": "token on the fly to allow those users to hit F3 um directly and then restricted",
    "start": "2569480",
    "end": "2574760"
  },
  {
    "text": "their access to subfolders um specific to usernames and allowed you uh allowed",
    "start": "2574760",
    "end": "2580240"
  },
  {
    "text": "them to to be called from this client application so this is one very very simple example of how you can actually",
    "start": "2580240",
    "end": "2586200"
  },
  {
    "text": "Federate uh your active directory identities um into uh into uh IM and",
    "start": "2586200",
    "end": "2593000"
  },
  {
    "text": "therefore use them to create credentials to call the ads API directly um the one thing I'll obviously show you is um uh",
    "start": "2593000",
    "end": "2602480"
  },
  {
    "text": "in the web config and I'll ZIP down p on let me I'll have to change that I'll",
    "start": "2602480",
    "end": "2607680"
  },
  {
    "text": "have to change that secret key now have to rotate those keys because you saw those for a split second but another approach for storing um the uh the",
    "start": "2607680",
    "end": "2614559"
  },
  {
    "text": "actual uh um uh policy statements is actually this example here where keys",
    "start": "2614559",
    "end": "2620000"
  },
  {
    "text": "were just stored in the web config um that's certainly another approach um",
    "start": "2620000",
    "end": "2625680"
  },
  {
    "text": "that can be used to store them in web config uh one note that's made in here is that actually this is just using a a",
    "start": "2625680",
    "end": "2632920"
  },
  {
    "text": "simple key name substitution a more appropriate mechanism using for example Le um active director be to tie these to",
    "start": "2632920",
    "end": "2639400"
  },
  {
    "text": "the the Sid um of the actual account identity to to allow for tighter",
    "start": "2639400",
    "end": "2645200"
  },
  {
    "text": "restriction um and Tighter mapping um another another approach to storing these could be actually to store them as",
    "start": "2645200",
    "end": "2651640"
  },
  {
    "text": "files on a three under under access control um so there's lots of ways to store this bits of policies but I should",
    "start": "2651640",
    "end": "2656960"
  },
  {
    "text": "reiterate that there are obviously um you know key bits of of uh security data that you need to protect in whatever",
    "start": "2656960",
    "end": "2663240"
  },
  {
    "text": "approach you take um to to vending them out we back to the presentation quickly",
    "start": "2663240",
    "end": "2669240"
  },
  {
    "text": "um the one question obviously is asked a lot of times is well you know what what support do you have for all these things",
    "start": "2669240",
    "end": "2674839"
  },
  {
    "text": "um across the platform um so you see this is a an ey chart I won't read obviously every Square um in it but it",
    "start": "2674839",
    "end": "2681240"
  },
  {
    "text": "highlights a lot of the various things so as you can see um you know obviously everything is supported on the left you",
    "start": "2681240",
    "end": "2686520"
  },
  {
    "text": "have our services uh listings and then along the various columns there different identity authentication",
    "start": "2686520",
    "end": "2691960"
  },
  {
    "text": "authorization schemes and their support levels um this is obviously as of you know today uh but uh this will obviously",
    "start": "2691960",
    "end": "2699160"
  },
  {
    "text": "you know expand over time um so the only reason this is included here is to give you a sense of the current support level",
    "start": "2699160",
    "end": "2704760"
  },
  {
    "text": "but definitely keep checking back because more services will add support for this uh as as it goes on and uh you",
    "start": "2704760",
    "end": "2711119"
  },
  {
    "text": "know obviously uh additional improvements such as resource level controls things like that will get added as well so you see obviously there's you",
    "start": "2711119",
    "end": "2718720"
  },
  {
    "text": "know the ABS accounts are supported in every service I users as a pretty broad support already across most of the",
    "start": "2718720",
    "end": "2724720"
  },
  {
    "text": "actual Services um Federated users is additional um additional authentication authorization code um so as you can see",
    "start": "2724720",
    "end": "2731480"
  },
  {
    "text": "here this is more focused the initial launch is focused on F3 SNS sqs um",
    "start": "2731480",
    "end": "2736760"
  },
  {
    "text": "simple DB and ec2 um but that will obviously expand over time so keep your",
    "start": "2736760",
    "end": "2741839"
  },
  {
    "text": "eyes open um more and more things will um be supported as we go along uh and",
    "start": "2741839",
    "end": "2746960"
  },
  {
    "text": "then of course there's different authentication mechanisms um session token being the one that is tied to the",
    "start": "2746960",
    "end": "2752000"
  },
  {
    "text": "Federated identity um so if you see session token support it pretty much lines up with Federated user support",
    "start": "2752000",
    "end": "2757960"
  },
  {
    "text": "um and then of course there's different types of of authorizations right now Mo most Services have an action level um",
    "start": "2757960",
    "end": "2764640"
  },
  {
    "text": "authorization that are supporting IM which means they can uh be support they can support uh lock down to specific",
    "start": "2764640",
    "end": "2771000"
  },
  {
    "text": "apis but maybe not resource level resource level is actually restricted right now to things like S3 uh SNS sqs",
    "start": "2771000",
    "end": "2778760"
  },
  {
    "text": "um so that gives you a sense of the current support across the platform um but this chart is is actually obviously",
    "start": "2778760",
    "end": "2785440"
  },
  {
    "text": "just a snapshot in time so if you're looking at this and it's you know any date Beyond August 17th then maybe you",
    "start": "2785440",
    "end": "2791319"
  },
  {
    "text": "should double check with the the actual documentation in the site just to make sure that we haven't added some more features of functionality over time so",
    "start": "2791319",
    "end": "2797800"
  },
  {
    "text": "with that um I thought I'd open it up to some questions that have come in from you uh during the",
    "start": "2797800",
    "end": "2804760"
  },
  {
    "text": "webinar all right thank you Matt so we're gonna take a few questions from the audience please submit your questions now and uh we will start with",
    "start": "2807359",
    "end": "2814160"
  },
  {
    "text": "ones that have already been submitted so we got a question here from",
    "start": "2814160",
    "end": "2820240"
  },
  {
    "text": "Antonio um if I have a different template user with different group policies if I want a a Federated user",
    "start": "2820240",
    "end": "2826720"
  },
  {
    "text": "with a Lolo do I need to create it with my template I'm",
    "start": "2826720",
    "end": "2832480"
  },
  {
    "text": "user uh so I think the way to think about that is if you if you want to have",
    "start": "2832480",
    "end": "2838720"
  },
  {
    "text": "a uh a Federated identity that has a certain level of access then whatever IM",
    "start": "2838720",
    "end": "2844160"
  },
  {
    "text": "user you use to generate that identity has to have at least that level of access so um that's kind of the way to",
    "start": "2844160",
    "end": "2851040"
  },
  {
    "text": "think about the relationship between those two uh the I am user that you use to create the tokens should have at",
    "start": "2851040",
    "end": "2856839"
  },
  {
    "text": "least as much capability as any of the Federated identities it's going to be creating through the session security",
    "start": "2856839",
    "end": "2863079"
  },
  {
    "text": "token service anything you guys want to add to that any other questions folks feel free",
    "start": "2863079",
    "end": "2871040"
  },
  {
    "text": "to type them into the question panel",
    "start": "2871040",
    "end": "2875200"
  },
  {
    "text": "did you guys have anything to add to the webinar no okay okay it looks like we have ah we",
    "start": "2879960",
    "end": "2887880"
  },
  {
    "text": "have a question here from Jim if I understand correctly the demo lets me Federate between my ad",
    "start": "2887880",
    "end": "2895240"
  },
  {
    "text": "identities and AWS to call AWS apis IE ec2 S3 Etc you plan to add support for",
    "start": "2895240",
    "end": "2902280"
  },
  {
    "text": "Federation to the AWS Management console that's a great question Andrew",
    "start": "2902280",
    "end": "2907559"
  },
  {
    "text": "did you want to jump on that yes we we are looking into this right now to see um what we can do in this space um it",
    "start": "2907559",
    "end": "2915520"
  },
  {
    "text": "will it's on our road map to be as part of an I release and and a future release of I so not now was The quick summary",
    "start": "2915520",
    "end": "2923920"
  },
  {
    "text": "but obviously as I mentioned before with that chart with all the check boxes in it um these are things we're going to uh",
    "start": "2923920",
    "end": "2929240"
  },
  {
    "text": "continue to add over time so having a having Federated identity forral act would be a nice nice touch",
    "start": "2929240",
    "end": "2937799"
  },
  {
    "text": "okay any other questions",
    "start": "2937799",
    "end": "2941520"
  },
  {
    "text": "folks so the one thing I should point out obviously um since I since I still have you here um is uh is that this is",
    "start": "2943680",
    "end": "2951079"
  },
  {
    "text": "one specific example obviously active directory was a great place to start showing this um there's no reason why um",
    "start": "2951079",
    "end": "2958720"
  },
  {
    "text": "this this approach could not be applied to a whole bunch of other different uh Technologies so for example you could",
    "start": "2958720",
    "end": "2963920"
  },
  {
    "text": "have a session proxy um that is sitting in front of an L app implementation as",
    "start": "2963920",
    "end": "2970000"
  },
  {
    "text": "well um so you know it doesn't have to be just active directory to the open L app or any of variety of of identity",
    "start": "2970000",
    "end": "2975839"
  },
  {
    "text": "stores that exist out there um uh that you know that's one approach you could even imagine using um using this",
    "start": "2975839",
    "end": "2983160"
  },
  {
    "text": "approach with uh already existing um uh uh you know um thirdparty",
    "start": "2983160",
    "end": "2989440"
  },
  {
    "text": "identity stores so like an open ID where somebody might authenticate against an open ID pass a token to your session",
    "start": "2989440",
    "end": "2995799"
  },
  {
    "text": "service you could authenticate that token and then use that as a way to generate identities against maybe open",
    "start": "2995799",
    "end": "3001160"
  },
  {
    "text": "ID identities that exist outside of your Enterprise so this isn't restricted obviously to active directory that was",
    "start": "3001160",
    "end": "3007359"
  },
  {
    "text": "an example we thought was um commonly used and certainly something where a lot of Enterprises could quickly enable",
    "start": "3007359",
    "end": "3014240"
  },
  {
    "text": "access for you know tens of thousands of employees um with the minimum amount of",
    "start": "3014240",
    "end": "3019799"
  },
  {
    "text": "of work to create those accounts so um and it looks like we have one other kind",
    "start": "3019799",
    "end": "3025040"
  },
  {
    "text": "of uh general question What are the use cases can this be applied to wow uh so I",
    "start": "3025040",
    "end": "3030559"
  },
  {
    "text": "mean that's we we generally a lot of times build services and allow the imagination of the developers Downstream",
    "start": "3030559",
    "end": "3035920"
  },
  {
    "text": "to run wild so um you know feel free to think of other scenarios where you could use it I think the ones that um we we",
    "start": "3035920",
    "end": "3042359"
  },
  {
    "text": "know have been most in demand uh are obviously Federation of Enterprise identity Stores um so active directory",
    "start": "3042359",
    "end": "3049760"
  },
  {
    "text": "you know ldap um identity stores inside the Enterprise uh another common scenario so let's say for example you",
    "start": "3049760",
    "end": "3055480"
  },
  {
    "text": "build a mobile application uh and you want to allow people in that mobile app to upload um pictures uh to",
    "start": "3055480",
    "end": "3063040"
  },
  {
    "text": "S3 directly um but you know you don't really want to give them free license you know forever um to go ahead and",
    "start": "3063040",
    "end": "3070079"
  },
  {
    "text": "continue to upload pictures from their phone directly to S3 um so instead you know what you might do is actually have",
    "start": "3070079",
    "end": "3076520"
  },
  {
    "text": "the client um application inside of the mobile app do some authentication against your your website to say hey is",
    "start": "3076520",
    "end": "3084280"
  },
  {
    "text": "this user still valid they still have an account yes okay vend them a a token on the Fly that they can use to then upload",
    "start": "3084280",
    "end": "3092160"
  },
  {
    "text": "pictures from their phone directly into S3 so that's another example of where",
    "start": "3092160",
    "end": "3098040"
  },
  {
    "text": "you can vend an identity um or a set of credentials for a short period of time to enable a mobile user who might be a",
    "start": "3098040",
    "end": "3105440"
  },
  {
    "text": "temporary user or a long-term user but somebody who you want to authenticate on a regular basis using your",
    "start": "3105440",
    "end": "3110720"
  },
  {
    "text": "authentication mechanisms as opposed to AB so mobile um mobile is definitely a common one consumer applications make",
    "start": "3110720",
    "end": "3117640"
  },
  {
    "text": "the same could be the same approach as well very similar log to you know",
    "start": "3117640",
    "end": "3123079"
  },
  {
    "text": "website X you know authenticate there get tokens handed down um through the interface and then allow them to upload",
    "start": "3123079",
    "end": "3129319"
  },
  {
    "text": "directly to S3 or sqs or simple DD um you could hit any fundamental services",
    "start": "3129319",
    "end": "3134520"
  },
  {
    "text": "that support the Federated identity um credential set thank you um any other last thoughts",
    "start": "3134520",
    "end": "3142119"
  },
  {
    "text": "or comments before we wrap up um well that wraps up today's presentation thank",
    "start": "3142119",
    "end": "3148240"
  },
  {
    "text": "you Matt and thank you to everyone for attending today's webinar those who attended today's webinar will receive a follow-up email with a link to this",
    "start": "3148240",
    "end": "3154319"
  },
  {
    "text": "recorded presentation and I encourage um all of you guys to appear",
    "start": "3154319",
    "end": "3160480"
  }
]