[
  {
    "start": "0",
    "end": "280000"
  },
  {
    "text": "hi welcome and thanks for joining us for this last session of our IOT track today",
    "start": "4870",
    "end": "10570"
  },
  {
    "text": "my name is Tim I'm an IOT specialist Solutions Architect with Amazon Web Services I'm joined by Michael hi",
    "start": "10570",
    "end": "17410"
  },
  {
    "text": "everyone I'm Michael Garcia and I'm a senior technical program manager in the IOT service team Tim and I both",
    "start": "17410",
    "end": "24610"
  },
  {
    "text": "presented sessions today and we wanted to put in practice what was presented in",
    "start": "24610",
    "end": "29619"
  },
  {
    "text": "this IRT track before we go there we first wanted to give you a quick",
    "start": "29619",
    "end": "34780"
  },
  {
    "text": "refresher to make sure everyone is on the same page absolutely and speaking of which the",
    "start": "34780",
    "end": "41379"
  },
  {
    "text": "first session was presented by you I believe correct it was meant as an introduction to IOT",
    "start": "41379",
    "end": "46390"
  },
  {
    "text": "on AWS going through our portfolio of IOT services as well as customer",
    "start": "46390",
    "end": "51489"
  },
  {
    "text": "examples you covered how we extend our services from all the way down onto electronic devices to analytics and",
    "start": "51489",
    "end": "59109"
  },
  {
    "text": "security monitoring the key learnings from that session were about how to drive successful business outcomes",
    "start": "59109",
    "end": "65680"
  },
  {
    "text": "leveraging IOT and that's exactly what we'll do in this session by working",
    "start": "65680",
    "end": "71080"
  },
  {
    "text": "backwards from business challenges we'll design solutions to achieve business outcomes but more on that later the",
    "start": "71080",
    "end": "77860"
  },
  {
    "text": "second session that sinneth presented showed you the tools we provide to customers and partners so they can",
    "start": "77860",
    "end": "84970"
  },
  {
    "text": "seamlessly connect to AWS IOT core that way they can spend more time on building",
    "start": "84970",
    "end": "90400"
  },
  {
    "text": "their product features and less time worrying about the complexities involved in connecting products like protocols or",
    "start": "90400",
    "end": "97090"
  },
  {
    "text": "security simav covered our IOT SDKs as well as Amazon free artists allowing",
    "start": "97090",
    "end": "103750"
  },
  {
    "text": "microcontroller based electronics devices to connect securely reliably and",
    "start": "103750",
    "end": "108880"
  },
  {
    "text": "at scale to AWS IOT core Amazon free artists based on the open source free",
    "start": "108880",
    "end": "115000"
  },
  {
    "text": "real-time operating system with added communication libraries for edge and cloud simplify the process of connecting",
    "start": "115000",
    "end": "121930"
  },
  {
    "text": "your devices to the cloud helping customers focus on their business logic",
    "start": "121930",
    "end": "126970"
  },
  {
    "text": "without having to worry about the complicated connectivity implementations and security protocols he also covered",
    "start": "126970",
    "end": "135069"
  },
  {
    "text": "the features of the IOT core service with functionalities like the device shadows great for interacting with",
    "start": "135069",
    "end": "141760"
  },
  {
    "text": "devices from your applications as well as the rules engine a powerful system",
    "start": "141760",
    "end": "146980"
  },
  {
    "text": "enabling passing data from the eye from the IOT core to other AWS services yes",
    "start": "146980",
    "end": "152260"
  },
  {
    "text": "and then Kapil to cover to cover how we are helping our customers having to deal",
    "start": "152260",
    "end": "157840"
  },
  {
    "text": "with the complexities of the edge as well as how services like areas Greengrass are great solution for",
    "start": "157840",
    "end": "164820"
  },
  {
    "text": "industrial use cases where edge capability is critical the reason for",
    "start": "164820",
    "end": "170440"
  },
  {
    "text": "that is simple you need to work in an environment that can have intermittent or no connectivity",
    "start": "170440",
    "end": "176489"
  },
  {
    "text": "you need to achieve real-time predictable response times and you need",
    "start": "176489",
    "end": "181750"
  },
  {
    "text": "to filter or transform the data that goes to the cloud so to accomplish all",
    "start": "181750",
    "end": "187060"
  },
  {
    "text": "that you can use AWS Greengrass in addition it also lets you and your",
    "start": "187060",
    "end": "193209"
  },
  {
    "text": "constraint devices benefit at the edge from machine learning thanks to its",
    "start": "193209",
    "end": "198610"
  },
  {
    "text": "machine learning inference capabilities in the full session that was presented",
    "start": "198610",
    "end": "204130"
  },
  {
    "text": "by Tim here he explained how to manage devices at scale specifically what that",
    "start": "204130",
    "end": "210130"
  },
  {
    "text": "means for operations when you had to manufacture devices in large quantities he covered how customer would simply",
    "start": "210130",
    "end": "217660"
  },
  {
    "text": "onboard large quantities of devices at scale monitor query and manage them he",
    "start": "217660",
    "end": "225310"
  },
  {
    "text": "also went through what that implies from a security standpoint and how services like AWS IOT device defender could help",
    "start": "225310",
    "end": "233320"
  },
  {
    "text": "our customers audit and monitor their security posture around IOT also how",
    "start": "233320",
    "end": "239980"
  },
  {
    "text": "leveraging secure demand ships could not only simplify manufacturing and onboarding of your devices but also",
    "start": "239980",
    "end": "246670"
  },
  {
    "text": "secure your keys at the device level finally he also introduced EDS IOT",
    "start": "246670",
    "end": "253030"
  },
  {
    "text": "analytics which will enable you to turn raw data into actionable insights and",
    "start": "253030",
    "end": "259209"
  },
  {
    "text": "that's really what IOT is all about that's how you are going to be successful doing IOT by focusing on the",
    "start": "259209",
    "end": "266140"
  },
  {
    "text": "business outcome and now we've come round full circle",
    "start": "266140",
    "end": "271190"
  },
  {
    "text": "from our first session focusing on your business challenges implementing IOT to",
    "start": "271190",
    "end": "276590"
  },
  {
    "text": "solve those challenges to drive successful business outcomes alright now",
    "start": "276590",
    "end": "283100"
  },
  {
    "text": "that everyone is on the same page let's start talking about what we are going to build today at the AWS Singapore summit",
    "start": "283100",
    "end": "290300"
  },
  {
    "text": "I demonstrated the use of AWS IOT as well as Greengrass machine learning inference by using this water dispenser",
    "start": "290300",
    "end": "297590"
  },
  {
    "text": "device that our team created at reinvent last year it is a water dispenser you",
    "start": "297590",
    "end": "302660"
  },
  {
    "text": "attach a water bottle to it and then via motor can control pouring a cup of water from the cloud a really simple and fun",
    "start": "302660",
    "end": "309800"
  },
  {
    "text": "little device but it got me thinking about water fountains that you can see in houses or in the office and about the",
    "start": "309800",
    "end": "316550"
  },
  {
    "text": "type of challenges that those businesses are facing for instance you need to have a replenishment service to deliver new",
    "start": "316550",
    "end": "323450"
  },
  {
    "text": "water tanks when necessary which is a tricky thing to do without having data and without having a connected device",
    "start": "323450",
    "end": "329620"
  },
  {
    "text": "either you are going to deliver water tanks before the old one finished which",
    "start": "329620",
    "end": "334970"
  },
  {
    "text": "means those water tanks could have been better used elsewhere plus they're going to pile up which is not a great",
    "start": "334970",
    "end": "341000"
  },
  {
    "text": "experience for the customer or you delivery not enough of these to your",
    "start": "341000",
    "end": "346190"
  },
  {
    "text": "customers and you're left with empty fountains waiting for new water tanks to be delivered in both cases it's a loss",
    "start": "346190",
    "end": "353180"
  },
  {
    "text": "of revenue and not a great customer experience so as a business we definitely want to optimize as much as",
    "start": "353180",
    "end": "359240"
  },
  {
    "text": "we can there right I also imagine another business challenge is reacting",
    "start": "359240",
    "end": "364940"
  },
  {
    "text": "quickly in case of a broken water fontaine if you wait for it to happen and for the customer to call you there",
    "start": "364940",
    "end": "371960"
  },
  {
    "text": "will be a period of time where the customer is left with no water again in",
    "start": "371960",
    "end": "377030"
  },
  {
    "text": "that case you would lead to customer frustration and loss of revenue doing",
    "start": "377030",
    "end": "382340"
  },
  {
    "text": "predictive maintenance on the connected asset would enable our business to anticipate when the water fountain are",
    "start": "382340",
    "end": "389660"
  },
  {
    "text": "going to break and replace them before that happens and it does not stop there",
    "start": "389660",
    "end": "396110"
  },
  {
    "text": "these days a lot of innovative companies are creating a better experience around connected homes it would be great if our",
    "start": "396110",
    "end": "403039"
  },
  {
    "text": "water fountain could be part of that echos and offer that experience to our customers furthermore I'm sure we could",
    "start": "403039",
    "end": "409700"
  },
  {
    "text": "create better services once our products would be voice-enabled like a painless experience around changing the delivery",
    "start": "409700",
    "end": "415850"
  },
  {
    "text": "schedule if you know you're gonna be away on vacation or if you know you're gonna consume more of these water",
    "start": "415850",
    "end": "422180"
  },
  {
    "text": "bottles in case of an event that makes sense okay so we have three business",
    "start": "422180",
    "end": "428270"
  },
  {
    "text": "outcomes we would like to achieve first one is getting visibility on current consumption of water so we can start to",
    "start": "428270",
    "end": "435260"
  },
  {
    "text": "optimize replenishment then predictive maintenance on our assets and finally",
    "start": "435260",
    "end": "441380"
  },
  {
    "text": "creating a voice enable experience so that's a lot to achieve but let's see",
    "start": "441380",
    "end": "446720"
  },
  {
    "text": "what we can build to achieve those business outcomes Tim any ideas on where",
    "start": "446720",
    "end": "452270"
  },
  {
    "text": "to start of course so we have what seems",
    "start": "452270",
    "end": "457880"
  },
  {
    "start": "453000",
    "end": "782000"
  },
  {
    "text": "like a pretty simple design we have a water dispenser that historically in our",
    "start": "457880",
    "end": "463220"
  },
  {
    "text": "business was a simple water container using gravity to pass through pipes and serve water through a tap with our new",
    "start": "463220",
    "end": "469850"
  },
  {
    "text": "business model we need to start connecting that water dispenser to the cloud for this we'll start with",
    "start": "469850",
    "end": "475550"
  },
  {
    "text": "equipping our water dispenser with an electronic device simple enough in nature to be able to control the",
    "start": "475550",
    "end": "481580"
  },
  {
    "text": "delivery of water and potentially make some measurements later down the road we'll take our device and we'll connect",
    "start": "481580",
    "end": "488540"
  },
  {
    "text": "it to the AWS IOT core from a high level this gives us a secure and scalable",
    "start": "488540",
    "end": "494030"
  },
  {
    "text": "two-way data communication with our device so now we have to choose what",
    "start": "494030",
    "end": "499940"
  },
  {
    "text": "electronic device we're going to use for this I know we have a selection available online on our website which",
    "start": "499940",
    "end": "506480"
  },
  {
    "text": "are compatible with Amazon Fratus but what device did you choose and why well",
    "start": "506480",
    "end": "513890"
  },
  {
    "text": "a water dispenser is quite a simple device and for this we'll want to make our electronic cost as low as possible",
    "start": "513890",
    "end": "519820"
  },
  {
    "text": "whilst keeping a high level of security for the purpose of this demo I'll use an",
    "start": "519820",
    "end": "525350"
  },
  {
    "text": "ESP 30 to expressive chip and connect it to the internet over Wi-Fi and just to",
    "start": "525350",
    "end": "530930"
  },
  {
    "text": "show different support and embedded firmware operating systems I'll be using Mongoose OS which is a partner operating",
    "start": "530930",
    "end": "537350"
  },
  {
    "text": "system that supports AWS coyote very efficiently I could have used them as on free artists for this",
    "start": "537350",
    "end": "543380"
  },
  {
    "text": "but since Simha --the already showed us in his session how to use Amazon free artists on the ESP 32 I thought we could",
    "start": "543380",
    "end": "550490"
  },
  {
    "text": "change things up a bit and then and it's great to see that there are many options available so the first thing we will",
    "start": "550490",
    "end": "558650"
  },
  {
    "text": "need is a certificate in order for our device to connect to a whe core what is",
    "start": "558650",
    "end": "564890"
  },
  {
    "text": "your approach to provisioning and onboarding in this prototype for this I",
    "start": "564890",
    "end": "570500"
  },
  {
    "text": "want to implement the just-in-time provisioning solution the reason is twofold first it gives me an opportunity",
    "start": "570500",
    "end": "576740"
  },
  {
    "text": "to show how this works to the audience but second and most importantly because",
    "start": "576740",
    "end": "581930"
  },
  {
    "text": "since our business is in the manufacturing of water dispensers our IT team resources would be better spent on",
    "start": "581930",
    "end": "588110"
  },
  {
    "text": "developing features to reach business outcomes rather than reinventing how to manage and pre-register devices by",
    "start": "588110",
    "end": "595490"
  },
  {
    "text": "implementing just-in-time provisioning as part of the AWS IOT device management service our devices will Auto register",
    "start": "595490",
    "end": "602240"
  },
  {
    "text": "themselves to the platform simplifying a lot of the heavy lifting now our devices will need to be",
    "start": "602240",
    "end": "608270"
  },
  {
    "text": "controlled and so we'll want to use the device shadows integral part of AWS IOT",
    "start": "608270",
    "end": "614450"
  },
  {
    "text": "core to control the state of the device we'll set up a state value of dispense",
    "start": "614450",
    "end": "619520"
  },
  {
    "text": "and the device will report its dispensed state from despite 'el to disk but",
    "start": "619520",
    "end": "624800"
  },
  {
    "text": "knowledge meant whilst from the cloud side well sometimes require the state to be dis rec which will in fact trigger",
    "start": "624800",
    "end": "632510"
  },
  {
    "text": "the action of dispensing water okay so with this in means that we'll be able to",
    "start": "632510",
    "end": "638060"
  },
  {
    "text": "know the state of our device at any any given time right also by leveraging the",
    "start": "638060",
    "end": "645020"
  },
  {
    "text": "device shadow we get an API around the state of our things out of the box and",
    "start": "645020",
    "end": "650300"
  },
  {
    "text": "that's what we will use to control our water dispenser this is perfect for our",
    "start": "650300",
    "end": "656000"
  },
  {
    "text": "Alexa integration we'll simply create a skill for Alexa that skill will trigger",
    "start": "656000",
    "end": "662120"
  },
  {
    "text": "a lambda function which in turn will make a REST API call to modify the shadow of a water dispenser by the way",
    "start": "662120",
    "end": "670460"
  },
  {
    "text": "this is great in case we want to build a mobile application or any other type of application that will",
    "start": "670460",
    "end": "677610"
  },
  {
    "text": "interact with our device because we can leverage the exact same architecture",
    "start": "677610",
    "end": "682640"
  },
  {
    "text": "exactly to be honest we'll simplify it down significantly by having our lambda",
    "start": "682640",
    "end": "687960"
  },
  {
    "text": "function hard-coded to interact with our test device on the table for the purpose of this demo in the real world you'll",
    "start": "687960",
    "end": "695339"
  },
  {
    "text": "want to implement a full back-end business application allowing Alexa to match a user's echo device with the",
    "start": "695339",
    "end": "701880"
  },
  {
    "text": "water dispensers he owns not difficult to implement at all but a bit more work",
    "start": "701880",
    "end": "706980"
  },
  {
    "text": "given we want to revolutionize our water dispenser business over the next 15 minutes right so now that we have",
    "start": "706980",
    "end": "714540"
  },
  {
    "text": "complete control over our device and our reporting information back up to the cloud we need to solve our business",
    "start": "714540",
    "end": "721320"
  },
  {
    "text": "problems and for this we need app to access the incoming data of the fleet",
    "start": "721320",
    "end": "726860"
  },
  {
    "text": "we'll use a device IOT analytics by piping the data from our shadows to its",
    "start": "726860",
    "end": "733440"
  },
  {
    "text": "ingestion channel we'll use the service to analyze transform and compute the",
    "start": "733440",
    "end": "739020"
  },
  {
    "text": "incoming data and then store it so that we can expose it via a data set to",
    "start": "739020",
    "end": "744360"
  },
  {
    "text": "Amazon quick sites now we can start making sense of the data and make better educated business decisions okay so our",
    "start": "744360",
    "end": "752610"
  },
  {
    "text": "device connects to a Tobias IOT Alexa controls it AWS IOT core passes the data to AWS IOT",
    "start": "752610",
    "end": "759690"
  },
  {
    "text": "analytics and then we dashboard it via Amazon quick site that sounds simple enough are we missing anything now I",
    "start": "759690",
    "end": "766770"
  },
  {
    "text": "don't think so that should be enough for now especially as we really believe customers should start small act fast",
    "start": "766770",
    "end": "773940"
  },
  {
    "text": "and then iterate let's try this architecture out and once we get",
    "start": "773940",
    "end": "779160"
  },
  {
    "text": "successful outcomes we can iterate further later great so let's switch over",
    "start": "779160",
    "end": "784350"
  },
  {
    "start": "782000",
    "end": "893000"
  },
  {
    "text": "to my computer and get our hands dirty let's start by creating our device like",
    "start": "784350",
    "end": "790140"
  },
  {
    "text": "I mentioned before I'll be using a mongoose OS on my ESP 32 for the purpose of the demo and to speed things up a bit",
    "start": "790140",
    "end": "796980"
  },
  {
    "text": "I've gone ahead and pre-fly a firmware onto the device and as you can see from",
    "start": "796980",
    "end": "802620"
  },
  {
    "text": "the console output of the device it's trying to connect to the cloud but doesn't yet have a certificate so the connections",
    "start": "802620",
    "end": "809200"
  },
  {
    "text": "are failing we still have some work to do we want to onboard our device onto AWS IOT core will use just-in-time",
    "start": "809200",
    "end": "817150"
  },
  {
    "text": "provisioning for this there are two parts to just-in-time provisioning first I'll need to create a provisioning",
    "start": "817150",
    "end": "823090"
  },
  {
    "text": "template my template is quite simple but there are a couple things to note I'll",
    "start": "823090",
    "end": "828580"
  },
  {
    "text": "be using certain parameters for the provisioning process these parameters can be extracted from the certificate",
    "start": "828580",
    "end": "835570"
  },
  {
    "text": "when the device first connects here I'll be using the country the organization",
    "start": "835570",
    "end": "841000"
  },
  {
    "text": "unit and the common name as parameters for my created resources I'll be",
    "start": "841000",
    "end": "846130"
  },
  {
    "text": "creating a thing with three attributes a default version of v1 the country",
    "start": "846130",
    "end": "851470"
  },
  {
    "text": "parameter and I'll be sending a capacity attribute that I plan to use the organizational unit parameter for",
    "start": "851470",
    "end": "858540"
  },
  {
    "text": "capacity will define the type of water dispenser were shipping out yes indeed to clarify for the audience in our",
    "start": "858540",
    "end": "865780"
  },
  {
    "text": "scenario we're currently shipping water tanks that have different capacity depending on the subscription that",
    "start": "865780",
    "end": "871720"
  },
  {
    "text": "customers have back to the provisioning template when it runs it will provision",
    "start": "871720",
    "end": "877750"
  },
  {
    "text": "automatically for us on a device a check or a new thing with those attributes",
    "start": "877750",
    "end": "883170"
  },
  {
    "text": "attached the provision certificate as well as specifying the granular security",
    "start": "883170",
    "end": "888460"
  },
  {
    "text": "policy that will add a restrict access to the right topics that's exactly what",
    "start": "888460",
    "end": "894580"
  },
  {
    "start": "893000",
    "end": "931000"
  },
  {
    "text": "it will do now that our template is ready we need to provide AWS IOT core with a custom CA certificate let's go",
    "start": "894580",
    "end": "902230"
  },
  {
    "text": "ahead and create one",
    "start": "902230",
    "end": "905010"
  },
  {
    "text": "you",
    "start": "911459",
    "end": "913519"
  },
  {
    "text": "if you look at the AWS documentation provided the different necessary steps to create your own CA we simply use open",
    "start": "918879",
    "end": "927240"
  },
  {
    "text": "SSL commands here I've packaged them all up in a Bosch grip so now I've created",
    "start": "927240",
    "end": "933210"
  },
  {
    "start": "931000",
    "end": "972000"
  },
  {
    "text": "my CA let's have a quick look at the AWS IOT console as you can see I don't yet",
    "start": "933210",
    "end": "942390"
  },
  {
    "text": "have my CA registered so let's go ahead and register it",
    "start": "942390",
    "end": "947840"
  },
  {
    "text": "you again I've prepackaged the necessary functions in a batch script and if we go",
    "start": "953310",
    "end": "960100"
  },
  {
    "text": "into the management console and refresh the page",
    "start": "960100",
    "end": "964380"
  },
  {
    "text": "we now have our custom CA registered on AWS IOT all we need now is a device",
    "start": "968230",
    "end": "974530"
  },
  {
    "start": "972000",
    "end": "1000000"
  },
  {
    "text": "certificate sign by our custom CA",
    "start": "974530",
    "end": "979080"
  },
  {
    "text": "you",
    "start": "984889",
    "end": "986949"
  },
  {
    "text": "my bastrop uses OpenSSL and my CA to create my device certificate in a",
    "start": "995440",
    "end": "1001620"
  },
  {
    "start": "1000000",
    "end": "1038000"
  },
  {
    "text": "production environment you will leave this task to your production partner or you would and should even use secure",
    "start": "1001620",
    "end": "1008100"
  },
  {
    "text": "element chips to store your keys so that no one can access them but for the purpose of this demo we'll simply upload",
    "start": "1008100",
    "end": "1015269"
  },
  {
    "text": "the keys manually ourselves onto the device and I can see from the output",
    "start": "1015269",
    "end": "1020610"
  },
  {
    "text": "here that the device certificate is issued by our custom CA but also has all",
    "start": "1020610",
    "end": "1027150"
  },
  {
    "text": "the metadata we talked about earlier the IOT thing name maps to the common name",
    "start": "1027150",
    "end": "1032850"
  },
  {
    "text": "we also have the country and even our custom capacity attributes yes and the",
    "start": "1032850",
    "end": "1038909"
  },
  {
    "text": "beauty here is that a WSI OST still doesn't know about this device it isn't registered our provisioning template",
    "start": "1038909",
    "end": "1046110"
  },
  {
    "text": "will only kick in once the device connects for the first time so let's upload this certificate onto my",
    "start": "1046110",
    "end": "1052169"
  },
  {
    "text": "device",
    "start": "1052169",
    "end": "1054529"
  },
  {
    "start": "1060000",
    "end": "1110000"
  },
  {
    "text": "great we can see that our device is connected and has a reported its date to AWS IOT let's go have a look at the",
    "start": "1060020",
    "end": "1068330"
  },
  {
    "text": "console and here's the device provision",
    "start": "1068330",
    "end": "1076970"
  },
  {
    "text": "with its certificate for the purpose of this demo i've pre created the alexis",
    "start": "1076970",
    "end": "1082280"
  },
  {
    "text": "kill and the l'homme de function so it should just work want to give it a try I thought you would never ask Alexa tell",
    "start": "1082280",
    "end": "1092780"
  },
  {
    "text": "the dispenser I'm thirsty here's the water but isn't it live days",
    "start": "1092780",
    "end": "1100590"
  },
  {
    "text": "somewhere in the world okay so bonus point for the audience we just proved that alex has a sense of",
    "start": "1100590",
    "end": "1106950"
  },
  {
    "text": "humor thanks for the drink Michael and great it works we now have a fully",
    "start": "1106950",
    "end": "1113050"
  },
  {
    "text": "functional water dispenser that can be controlled from the cloud and reports information that's great all right my",
    "start": "1113050",
    "end": "1119830"
  },
  {
    "text": "turn now that we have a fully operational system we can look at how to",
    "start": "1119830",
    "end": "1125200"
  },
  {
    "text": "achieve our business outcomes and for that we will use a whe analytics and",
    "start": "1125200",
    "end": "1130210"
  },
  {
    "text": "Amazon quick sides I'll start by merging the data coming from multiple simulated devices into a",
    "start": "1130210",
    "end": "1136990"
  },
  {
    "text": "specific topic since our device are communicating over their shadow let's",
    "start": "1136990",
    "end": "1142270"
  },
  {
    "text": "create a rule that get data from all the shadow available and republish it to a",
    "start": "1142270",
    "end": "1147370"
  },
  {
    "text": "topic called dispenser / update we'll also take that opportunity to filter the",
    "start": "1147370",
    "end": "1153760"
  },
  {
    "text": "data and only get the shadow updates when the state is disc that way we can",
    "start": "1153760",
    "end": "1160179"
  },
  {
    "text": "only look at the time when a cup of water was poured",
    "start": "1160179",
    "end": "1164850"
  },
  {
    "text": "you",
    "start": "1171220",
    "end": "1173280"
  },
  {
    "start": "1180000",
    "end": "1237000"
  },
  {
    "text": "I've already prepared the rule to save time but simply as we explained the rule",
    "start": "1180180",
    "end": "1185430"
  },
  {
    "text": "selects the data from the shadow / update topic of our devices and republish to the dispenser / update",
    "start": "1185430",
    "end": "1192030"
  },
  {
    "text": "topics now we can check that the rule is executing as intended for that let's use",
    "start": "1192030",
    "end": "1199020"
  },
  {
    "text": "the embedded mqtt clients in the IOT console and subscribe to the topic dispenser / update we can see indeed",
    "start": "1199020",
    "end": "1207120"
  },
  {
    "text": "that the data is flowing and it has the right attributes now we are going to",
    "start": "1207120",
    "end": "1212520"
  },
  {
    "text": "switch over to the AWS IOT analytics console and we are going to perform the",
    "start": "1212520",
    "end": "1218370"
  },
  {
    "text": "work of the data engineer who is usually the person that will clean filter and",
    "start": "1218370",
    "end": "1223890"
  },
  {
    "text": "enrich the data so it can be ready for analysis so I can see on the Left pane",
    "start": "1223890",
    "end": "1230700"
  },
  {
    "text": "of the console there are three different items channels pipelines and data stores",
    "start": "1230700",
    "end": "1236790"
  },
  {
    "text": "I imagine they all have different purposes can you start by explaining what a channel is sure a channel",
    "start": "1236790",
    "end": "1243150"
  },
  {
    "text": "represent the source of the raw data before any kind of processing so let's",
    "start": "1243150",
    "end": "1248550"
  },
  {
    "text": "go ahead and create one I will call it live demo and as you can see there is a",
    "start": "1248550",
    "end": "1255090"
  },
  {
    "text": "setting about the rotation of our raw data",
    "start": "1255090",
    "end": "1259940"
  },
  {
    "start": "1263000",
    "end": "1303000"
  },
  {
    "text": "IOT analytics is capable of processing any messages store as raw data in a",
    "start": "1263130",
    "end": "1268679"
  },
  {
    "text": "channel at any point in the future therefore if you make a change further down the road on how you process the",
    "start": "1268679",
    "end": "1276000"
  },
  {
    "text": "data you will be able to rerun the new process on all historical data so",
    "start": "1276000",
    "end": "1281640"
  },
  {
    "text": "keeping the raw data is pretty useful",
    "start": "1281640",
    "end": "1285799"
  },
  {
    "text": "you",
    "start": "1291879",
    "end": "1293940"
  },
  {
    "text": "all right so now the next step seems to the pipeline then the data store before",
    "start": "1301820",
    "end": "1308070"
  },
  {
    "start": "1303000",
    "end": "1585000"
  },
  {
    "text": "creating a pipeline can you explain what it is and how it relates to a data store as well as to our use case sure pipeline will take a",
    "start": "1308070",
    "end": "1316619"
  },
  {
    "text": "channel as an input and well describe the series of transformation that will be applied to the data so this is where",
    "start": "1316619",
    "end": "1324119"
  },
  {
    "text": "all the hard work is performed and to help with that IOT analytics offers a set of pre-built",
    "start": "1324119",
    "end": "1330960"
  },
  {
    "text": "transformation in our use case we'll ultimately want to add GPS coordinates",
    "start": "1330960",
    "end": "1336809"
  },
  {
    "text": "to our data so we can put our data on a map using Amazon quick site remember",
    "start": "1336809",
    "end": "1342840"
  },
  {
    "text": "team earlier said the country attributes when generating devices so I need to",
    "start": "1342840",
    "end": "1348389"
  },
  {
    "text": "retrieve that attribute from the registry in a devii Authority core once I have it I can use a lambda function to",
    "start": "1348389",
    "end": "1355859"
  },
  {
    "text": "map a country to GPS coordinates we've arbitrarily choose that for the",
    "start": "1355859",
    "end": "1361739"
  },
  {
    "text": "country once that processing is done the output of the pipeline will be stored in",
    "start": "1361739",
    "end": "1367559"
  },
  {
    "text": "a data store okay so less talking more building let's create our pipeline first",
    "start": "1367559",
    "end": "1375830"
  },
  {
    "text": "so I give it a name which is live demo as well and as the source I can select",
    "start": "1376340",
    "end": "1384479"
  },
  {
    "text": "live demo which is with a channel you create a virtual write correct now we're",
    "start": "1384479",
    "end": "1391289"
  },
  {
    "text": "going to see an example message that will come from the channel and we can select the attribute name so let me",
    "start": "1391289",
    "end": "1398190"
  },
  {
    "text": "select everything and now that's where",
    "start": "1398190",
    "end": "1403769"
  },
  {
    "text": "we can enrich transform and filter our messages so first we're going to add an",
    "start": "1403769",
    "end": "1408869"
  },
  {
    "text": "activity to enrich the message with our chico registry information so this is",
    "start": "1408869",
    "end": "1415109"
  },
  {
    "text": "where we're going to get the country information for example exactly right so",
    "start": "1415109",
    "end": "1420179"
  },
  {
    "text": "we can select the source for the thing name and the attribute is thing that we",
    "start": "1420179",
    "end": "1429450"
  },
  {
    "text": "have created then I'm gonna select and I am roll oh let me",
    "start": "1429450",
    "end": "1437330"
  },
  {
    "text": "all right an IOT analytics lets you preview the results so let's click on",
    "start": "1440760",
    "end": "1446680"
  },
  {
    "text": "that so now we can see all the field in green or the fill that were added but",
    "start": "1446680",
    "end": "1454480"
  },
  {
    "text": "there's too many field here so we're going to add another activity to remove some of them because we don't need them",
    "start": "1454480",
    "end": "1463200"
  },
  {
    "text": "all right so let's select the one we",
    "start": "1464880",
    "end": "1471100"
  },
  {
    "text": "want to remove we want to remove the default key on ID thing then because we",
    "start": "1471100",
    "end": "1476290"
  },
  {
    "text": "already have it all of those as well and we're gonna keep all the other one",
    "start": "1476290",
    "end": "1482320"
  },
  {
    "text": "except the version that correct yep that's it sounds good alright let's",
    "start": "1482320",
    "end": "1487480"
  },
  {
    "text": "update the preview to take a final look at it great and it looks good so how are",
    "start": "1487480",
    "end": "1493120"
  },
  {
    "text": "you going to get the GPS coordinates so now I'm going to add another activity which is a lambda function and the",
    "start": "1493120",
    "end": "1500110"
  },
  {
    "text": "lambda function will take that as input do the processing and then add the GPS",
    "start": "1500110",
    "end": "1506110"
  },
  {
    "text": "coordinates so let's do that together I select the transform message with",
    "start": "1506110",
    "end": "1513190"
  },
  {
    "text": "lambda function activity and I can scroll down to select my lambda function",
    "start": "1513190",
    "end": "1518620"
  },
  {
    "text": "which is this one and again I can update the preview all right and now we can see",
    "start": "1518620",
    "end": "1527260"
  },
  {
    "text": "the country have been added so you usually night you had pre-prepared the alumna function right and and that has",
    "start": "1527260",
    "end": "1534100"
  },
  {
    "text": "curated the information and provided the latitude and longitude based out of the country code exactly so what just",
    "start": "1534100",
    "end": "1540580"
  },
  {
    "text": "happened is that the learner function executed the one we already prepared Wow yes very powerful so now our message is",
    "start": "1540580",
    "end": "1549280"
  },
  {
    "text": "ready for analysis our data is ready for analysis no more activity to add so we're going to go to next so now we need",
    "start": "1549280",
    "end": "1558550"
  },
  {
    "text": "the data store and you can see I have the option to do it directly from this screen so let's go ahead and create our",
    "start": "1558550",
    "end": "1564730"
  },
  {
    "text": "data store",
    "start": "1564730",
    "end": "1567419"
  },
  {
    "text": "you",
    "start": "1574040",
    "end": "1576100"
  },
  {
    "text": "so looks like now we are going to analyze part of the console does that mean we are switching hats again yes it",
    "start": "1581220",
    "end": "1588999"
  },
  {
    "start": "1585000",
    "end": "1818000"
  },
  {
    "text": "does so let's switch to the analyze parts and this time we are going to",
    "start": "1588999",
    "end": "1594070"
  },
  {
    "text": "perform the work of data scientist or business analyst a data set is a",
    "start": "1594070",
    "end": "1599769"
  },
  {
    "text": "collection of data which will be used for further analysis and which is a subset of the data contained in our data",
    "start": "1599769",
    "end": "1607779"
  },
  {
    "text": "store that's why to create one you need to select data in our data store using a",
    "start": "1607779",
    "end": "1613509"
  },
  {
    "text": "sequel like query in our scenario I wish to select all data available to make it",
    "start": "1613509",
    "end": "1619809"
  },
  {
    "text": "simple this data set is static but if I wish to automatically refresh it I can",
    "start": "1619809",
    "end": "1626559"
  },
  {
    "text": "ask that of the service so again that's pretty useful to automate your data",
    "start": "1626559",
    "end": "1631989"
  },
  {
    "text": "processing so let's create one I'm going",
    "start": "1631989",
    "end": "1638289"
  },
  {
    "text": "to call it live demo again we're going to select our live demo data store and",
    "start": "1638289",
    "end": "1645090"
  },
  {
    "text": "as I mentioned I will just keep the default which is selecting all the data",
    "start": "1645090",
    "end": "1650549"
  },
  {
    "text": "and frequency we can say hourly for example to refresh our data set so we",
    "start": "1650549",
    "end": "1660340"
  },
  {
    "text": "now have cleaned enrich the data and it is ready for analysis we need to switch",
    "start": "1660340",
    "end": "1666220"
  },
  {
    "text": "to the quick site console I know AWS IOT analytics and Amazon quick site are integrated natively but how does that",
    "start": "1666220",
    "end": "1672970"
  },
  {
    "text": "work well I'm going to show you so we're now going to switch to the quick side",
    "start": "1672970",
    "end": "1678879"
  },
  {
    "text": "console and the first thing I will do is to go to manage data and now if I try to",
    "start": "1678879",
    "end": "1689109"
  },
  {
    "text": "create a new data set I can select AWS",
    "start": "1689109",
    "end": "1694690"
  },
  {
    "text": "IOT analytics as a source okay",
    "start": "1694690",
    "end": "1699628"
  },
  {
    "text": "so in the interest of time I will instead use an analysis that I've already prepared so we can really focus",
    "start": "1701060",
    "end": "1709370"
  },
  {
    "text": "on the data",
    "start": "1709370",
    "end": "1711970"
  },
  {
    "text": "so here you can see I have to graph and if we look at the first one which is",
    "start": "1732169",
    "end": "1737970"
  },
  {
    "text": "this one we can see the consumption of water per country and capacity let me",
    "start": "1737970",
    "end": "1746159"
  },
  {
    "text": "select it so for instance the country",
    "start": "1746159",
    "end": "1753659"
  },
  {
    "text": "will consume the most water is Africa and weirdly enough they are using the",
    "start": "1753659",
    "end": "1759480"
  },
  {
    "text": "smallest capacity of water tanks so we",
    "start": "1759480",
    "end": "1764700"
  },
  {
    "text": "should do something about that that means they have many deliveries to replace their water tanks and that they",
    "start": "1764700",
    "end": "1770340"
  },
  {
    "text": "would probably benefit from changing their capacity to the biggest one that way it will make it more time for them",
    "start": "1770340",
    "end": "1777480"
  },
  {
    "text": "to empty their water tanks it has very good insight for our business now we can reach out to customers proactively what",
    "start": "1777480",
    "end": "1784980"
  },
  {
    "text": "about the other graph well on the other one you can see the consumption of water",
    "start": "1784980",
    "end": "1790980"
  },
  {
    "text": "over time and grouped by capacity that should enable us to learn more about the",
    "start": "1790980",
    "end": "1796889"
  },
  {
    "text": "seasonality of our customers unfortunately at first glance there is nothing obvious that really pops up",
    "start": "1796889",
    "end": "1804269"
  },
  {
    "text": "which means we should get more data and start doing machine learning to be able",
    "start": "1804269",
    "end": "1809759"
  },
  {
    "text": "to make accurate predictions regarding the consumption of water which is fine",
    "start": "1809759",
    "end": "1814919"
  },
  {
    "text": "we can now iterate on our project so looks like it is time to wrap up our",
    "start": "1814919",
    "end": "1821309"
  },
  {
    "start": "1818000",
    "end": "1930000"
  },
  {
    "text": "session to summarize we had three business outcomes enabling voice",
    "start": "1821309",
    "end": "1826500"
  },
  {
    "text": "experience for our device was the first one and we were successful doing that today the second one was getting more",
    "start": "1826500",
    "end": "1833009"
  },
  {
    "text": "visibility on usage and consumption of water which was also a success we were",
    "start": "1833009",
    "end": "1838080"
  },
  {
    "text": "able to make smarter business decision but we also discovered we could go further and automate more things finally",
    "start": "1838080",
    "end": "1845129"
  },
  {
    "text": "the last one was about predictive maintenance and we would need to add two other senses to our device in order to",
    "start": "1845129",
    "end": "1851279"
  },
  {
    "text": "start delivering on this one what we wanted to demonstrate today is that you start working from your business",
    "start": "1851279",
    "end": "1856740"
  },
  {
    "text": "challenges define business outcomes and you deliver on those quickly with a minimum implementation required it is",
    "start": "1856740",
    "end": "1863820"
  },
  {
    "text": "perfectly fine to iterate a or time to accomplish other business outcomes and that is what we suggest you",
    "start": "1863820",
    "end": "1869850"
  },
  {
    "text": "do and for those who like the feel of the hands-on experience we just showed have a look at the training content",
    "start": "1869850",
    "end": "1876840"
  },
  {
    "text": "available to you now on the AWS dot training website you can access the",
    "start": "1876840",
    "end": "1882270"
  },
  {
    "text": "digital training contents built by AWS experts find information on how to attend our instructor-led classes by",
    "start": "1882270",
    "end": "1889680"
  },
  {
    "text": "qualified areas instructor and learn how to design deploy and operate highly",
    "start": "1889680",
    "end": "1894900"
  },
  {
    "text": "available cost effective and secure application on AWS then validate your",
    "start": "1894900",
    "end": "1901620"
  },
  {
    "text": "technical expertise on edible us and use practice exam to help you prepare for AWS certification so thank you for",
    "start": "1901620",
    "end": "1910500"
  },
  {
    "text": "attending this last session of AWS innovate and thank you for staying with us till the very end we hope you found",
    "start": "1910500",
    "end": "1916200"
  },
  {
    "text": "it valuable do provide us with your feedback and let us know how we can improve the event experience for you in",
    "start": "1916200",
    "end": "1922020"
  },
  {
    "text": "the future thank you thanks",
    "start": "1922020",
    "end": "1926660"
  }
]