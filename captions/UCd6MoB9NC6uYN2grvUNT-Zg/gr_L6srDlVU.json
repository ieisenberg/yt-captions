[
  {
    "start": "0",
    "end": "36000"
  },
  {
    "text": "hey there everybody good afternoon",
    "start": "3560",
    "end": "5580"
  },
  {
    "text": "we welcome you into the Kubo theater",
    "start": "5580",
    "end": "7410"
  },
  {
    "text": "hope you're having a great last day here",
    "start": "7410",
    "end": "9630"
  },
  {
    "text": "and we're glad you're taking some time",
    "start": "9630",
    "end": "11070"
  },
  {
    "text": "to be with us please welcome to the",
    "start": "11070",
    "end": "13139"
  },
  {
    "text": "stage our next presenter this is Damian",
    "start": "13139",
    "end": "16650"
  },
  {
    "text": "curry from Ingenix feel free to scream",
    "start": "16650",
    "end": "19439"
  },
  {
    "text": "and Cheer feel free to scream at you",
    "start": "19439",
    "end": "21300"
  },
  {
    "text": "there we go",
    "start": "21300",
    "end": "23210"
  },
  {
    "text": "all right hey good afternoon everyone",
    "start": "23210",
    "end": "25769"
  },
  {
    "text": "so we're just here to talk a little bit",
    "start": "25769",
    "end": "27990"
  },
  {
    "text": "about you know deploying nginx Plus on",
    "start": "27990",
    "end": "30119"
  },
  {
    "text": "AWS especially talking about the",
    "start": "30119",
    "end": "32398"
  },
  {
    "text": "QuickStart guide that we just released",
    "start": "32399",
    "end": "36410"
  },
  {
    "start": "36000",
    "end": "87000"
  },
  {
    "text": "so the main question that we're trying",
    "start": "36410",
    "end": "38820"
  },
  {
    "text": "to and the main problem we're trying to",
    "start": "38820",
    "end": "40079"
  },
  {
    "text": "solve is how do you build these",
    "start": "40079",
    "end": "42450"
  },
  {
    "text": "applications in AWS you you have a ton",
    "start": "42450",
    "end": "44940"
  },
  {
    "text": "of tools but you need to figure out how",
    "start": "44940",
    "end": "47129"
  },
  {
    "text": "to put them together in order to build",
    "start": "47129",
    "end": "49379"
  },
  {
    "text": "an actually scalable resistant resilient",
    "start": "49379",
    "end": "52590"
  },
  {
    "text": "application so you can leverage a lot of",
    "start": "52590",
    "end": "55680"
  },
  {
    "text": "this functionality that Amazon has like",
    "start": "55680",
    "end": "58050"
  },
  {
    "text": "the route 53 functionality for global",
    "start": "58050",
    "end": "60090"
  },
  {
    "text": "server load balancing classic load",
    "start": "60090",
    "end": "62579"
  },
  {
    "text": "balancers for simple applications the",
    "start": "62579",
    "end": "66450"
  },
  {
    "text": "Amazon application load balancer for the",
    "start": "66450",
    "end": "68760"
  },
  {
    "text": "more advanced application aware health",
    "start": "68760",
    "end": "70770"
  },
  {
    "text": "checks and and layer 7 routing and then",
    "start": "70770",
    "end": "73950"
  },
  {
    "text": "there's also nginx Plus which is the",
    "start": "73950",
    "end": "76530"
  },
  {
    "text": "most advanced load balancer really",
    "start": "76530",
    "end": "78270"
  },
  {
    "text": "available in AWS and can work alongside",
    "start": "78270",
    "end": "81030"
  },
  {
    "text": "a lot of these other Amazon tools that",
    "start": "81030",
    "end": "83939"
  },
  {
    "text": "are available for you so we just",
    "start": "83939",
    "end": "89729"
  },
  {
    "text": "recently released a new version of our",
    "start": "89729",
    "end": "91920"
  },
  {
    "text": "QuickStart and this has been built as",
    "start": "91920",
    "end": "94439"
  },
  {
    "text": "kind of a good easy turnkey example of",
    "start": "94439",
    "end": "97939"
  },
  {
    "text": "how we recommend you architect in your",
    "start": "97939",
    "end": "102210"
  },
  {
    "text": "application on AWS so you can see here",
    "start": "102210",
    "end": "107040"
  },
  {
    "text": "this is kind of the overall architecture",
    "start": "107040",
    "end": "109649"
  },
  {
    "text": "in a given region so we have we have two",
    "start": "109649",
    "end": "114780"
  },
  {
    "text": "verb we have two VP C's inside of a",
    "start": "114780",
    "end": "117210"
  },
  {
    "text": "region in separate availability zones",
    "start": "117210",
    "end": "119310"
  },
  {
    "text": "with a classic load balancer at the",
    "start": "119310",
    "end": "122490"
  },
  {
    "text": "front acting as the ingress point and",
    "start": "122490",
    "end": "124799"
  },
  {
    "text": "then all of our applications behind it",
    "start": "124799",
    "end": "128179"
  },
  {
    "text": "so what we have here and how it kind of",
    "start": "128179",
    "end": "130319"
  },
  {
    "text": "breaks down is we have nginx plus",
    "start": "130319",
    "end": "132990"
  },
  {
    "text": "that is providing the application level",
    "start": "132990",
    "end": "135420"
  },
  {
    "text": "routing rules in front-end load",
    "start": "135420",
    "end": "137370"
  },
  {
    "text": "balancing behind that we have nginx open",
    "start": "137370",
    "end": "140730"
  },
  {
    "text": "source that is acting as a web server",
    "start": "140730",
    "end": "142650"
  },
  {
    "text": "and an application server serving the",
    "start": "142650",
    "end": "144870"
  },
  {
    "text": "application that is going to be behind",
    "start": "144870",
    "end": "146820"
  },
  {
    "text": "the load balancer and then we are also",
    "start": "146820",
    "end": "149640"
  },
  {
    "text": "leveraging the auto scaling groups for",
    "start": "149640",
    "end": "151560"
  },
  {
    "text": "not only the nginx Plus load balancer",
    "start": "151560",
    "end": "153960"
  },
  {
    "text": "but also for the application servers",
    "start": "153960",
    "end": "156660"
  },
  {
    "text": "behind the load balancer and we're using",
    "start": "156660",
    "end": "159180"
  },
  {
    "text": "that Amazon classic load balancer to",
    "start": "159180",
    "end": "161700"
  },
  {
    "text": "provide that crosses the a-z routing and",
    "start": "161700",
    "end": "164970"
  },
  {
    "text": "high availability also we're using the",
    "start": "164970",
    "end": "167940"
  },
  {
    "text": "Amazon route 53 for the global server",
    "start": "167940",
    "end": "170010"
  },
  {
    "text": "load balancing to send that traffic",
    "start": "170010",
    "end": "171750"
  },
  {
    "text": "between multiple regions and then",
    "start": "171750",
    "end": "173940"
  },
  {
    "text": "finally the VP sees to give you that",
    "start": "173940",
    "end": "176250"
  },
  {
    "text": "private network inside each of those",
    "start": "176250",
    "end": "178020"
  },
  {
    "text": "availability zones",
    "start": "178020",
    "end": "180140"
  },
  {
    "text": "so really what we do here is we look at",
    "start": "180140",
    "end": "183360"
  },
  {
    "text": "from the top down and we can kind of go",
    "start": "183360",
    "end": "185130"
  },
  {
    "text": "back to the big pretty picture here so",
    "start": "185130",
    "end": "187380"
  },
  {
    "text": "we have that classic load balancer at",
    "start": "187380",
    "end": "189090"
  },
  {
    "text": "the front at the very top where you're",
    "start": "189090",
    "end": "190710"
  },
  {
    "text": "using route 53 to route to those",
    "start": "190710",
    "end": "193080"
  },
  {
    "text": "different regions once it gets to that",
    "start": "193080",
    "end": "195750"
  },
  {
    "text": "region it hits the classic load balancer",
    "start": "195750",
    "end": "198360"
  },
  {
    "text": "that then spreads that load across the",
    "start": "198360",
    "end": "201180"
  },
  {
    "text": "multiple engine X plus instances that",
    "start": "201180",
    "end": "204030"
  },
  {
    "text": "are running in an auto scaling group to",
    "start": "204030",
    "end": "206430"
  },
  {
    "text": "provide that that application aware",
    "start": "206430",
    "end": "209040"
  },
  {
    "text": "layer seven load balancing behind those",
    "start": "209040",
    "end": "212280"
  },
  {
    "text": "engine X plus instances are two",
    "start": "212280",
    "end": "214860"
  },
  {
    "text": "different auto scaling groups providing",
    "start": "214860",
    "end": "217440"
  },
  {
    "text": "applications running nginx open sources",
    "start": "217440",
    "end": "219630"
  },
  {
    "text": "their web server and all together using",
    "start": "219630",
    "end": "222930"
  },
  {
    "text": "a plug-in that we have so that as the",
    "start": "222930",
    "end": "225570"
  },
  {
    "text": "auto scaling groups come up and down",
    "start": "225570",
    "end": "227220"
  },
  {
    "text": "with the application engine X plus will",
    "start": "227220",
    "end": "230100"
  },
  {
    "text": "add will adjust its configuration in",
    "start": "230100",
    "end": "232560"
  },
  {
    "text": "real time to add and remove those nodes",
    "start": "232560",
    "end": "234600"
  },
  {
    "text": "without editing configuration files or",
    "start": "234600",
    "end": "236790"
  },
  {
    "text": "restarting any services so to get beyond",
    "start": "236790",
    "end": "242340"
  },
  {
    "start": "239000",
    "end": "450000"
  },
  {
    "text": "the quick start here real quick there's",
    "start": "242340",
    "end": "243960"
  },
  {
    "text": "there's a few different and obviously",
    "start": "243960",
    "end": "245220"
  },
  {
    "text": "this is one of the big questions is how",
    "start": "245220",
    "end": "247110"
  },
  {
    "text": "do you do hiya veil ability in AWS so",
    "start": "247110",
    "end": "249630"
  },
  {
    "text": "we've developed a few different options",
    "start": "249630",
    "end": "251250"
  },
  {
    "text": "here and a few different architectures",
    "start": "251250",
    "end": "253770"
  },
  {
    "text": "that we kind of suggest people run the",
    "start": "253770",
    "end": "257010"
  },
  {
    "text": "kind of most basic situation that is",
    "start": "257010",
    "end": "258989"
  },
  {
    "text": "very common to run in in",
    "start": "258989",
    "end": "261390"
  },
  {
    "text": "AWS is using the classic load balancer",
    "start": "261390",
    "end": "264550"
  },
  {
    "text": "or Network load balancer to provide the",
    "start": "264550",
    "end": "267400"
  },
  {
    "text": "high availability and horizontal scaling",
    "start": "267400",
    "end": "270040"
  },
  {
    "text": "for nginx Plus behind that so with that",
    "start": "270040",
    "end": "274150"
  },
  {
    "text": "you're using that classic load balancer",
    "start": "274150",
    "end": "276490"
  },
  {
    "text": "to provide the cross a Z availability",
    "start": "276490",
    "end": "280120"
  },
  {
    "text": "and again give you that ability to ought",
    "start": "280120",
    "end": "282730"
  },
  {
    "text": "to scale horizontally so as your load",
    "start": "282730",
    "end": "284860"
  },
  {
    "text": "increases you can simply add more nginx",
    "start": "284860",
    "end": "287530"
  },
  {
    "text": "Plus instances and get them behind that",
    "start": "287530",
    "end": "290140"
  },
  {
    "text": "ELB to serve more traffic but the great",
    "start": "290140",
    "end": "293680"
  },
  {
    "text": "part of this is it is it obviously op",
    "start": "293680",
    "end": "295480"
  },
  {
    "text": "offers great integration with other",
    "start": "295480",
    "end": "297580"
  },
  {
    "text": "Amazon services like cloud front route",
    "start": "297580",
    "end": "299980"
  },
  {
    "text": "53 and cloud watch and then in this case",
    "start": "299980",
    "end": "303460"
  },
  {
    "text": "we're using nginx plus to handle the",
    "start": "303460",
    "end": "305980"
  },
  {
    "text": "layer 7 request routing you know handle",
    "start": "305980",
    "end": "309100"
  },
  {
    "text": "the SSL termination allow you to use",
    "start": "309100",
    "end": "311200"
  },
  {
    "text": "WebSockets in HTTP 2 as well as",
    "start": "311200",
    "end": "313870"
  },
  {
    "text": "providing active health checks and",
    "start": "313870",
    "end": "316300"
  },
  {
    "text": "different single sign-on solutions as",
    "start": "316300",
    "end": "318700"
  },
  {
    "text": "well as different statistics that we",
    "start": "318700",
    "end": "321490"
  },
  {
    "text": "expose with nginx plus the next system",
    "start": "321490",
    "end": "327610"
  },
  {
    "text": "that we have is kind of leveraging route",
    "start": "327610",
    "end": "329980"
  },
  {
    "text": "53 for that global server load balancing",
    "start": "329980",
    "end": "332830"
  },
  {
    "text": "so this allows you to have cross region",
    "start": "332830",
    "end": "336100"
  },
  {
    "text": "support and be able to use the",
    "start": "336100",
    "end": "338470"
  },
  {
    "text": "geographic information in the request to",
    "start": "338470",
    "end": "341080"
  },
  {
    "text": "route your end users to the closest",
    "start": "341080",
    "end": "343350"
  },
  {
    "text": "region for them so that they get the",
    "start": "343350",
    "end": "345850"
  },
  {
    "text": "best performance out of your application",
    "start": "345850",
    "end": "347380"
  },
  {
    "text": "the great thing about this is obviously",
    "start": "347380",
    "end": "350020"
  },
  {
    "text": "it provides multi-region support you're",
    "start": "350020",
    "end": "352060"
  },
  {
    "text": "not relying on any single piece of",
    "start": "352060",
    "end": "354010"
  },
  {
    "text": "infrastructure and it can also integrate",
    "start": "354010",
    "end": "356160"
  },
  {
    "text": "depending on your use case with a",
    "start": "356160",
    "end": "358390"
  },
  {
    "text": "classic load balancer or you can use it",
    "start": "358390",
    "end": "360340"
  },
  {
    "text": "without and route directly to nginx Plus",
    "start": "360340",
    "end": "362830"
  },
  {
    "text": "instances and then so you know some",
    "start": "362830",
    "end": "368560"
  },
  {
    "text": "people they don't want to use that those",
    "start": "368560",
    "end": "370690"
  },
  {
    "text": "elastic load balancers and the classic",
    "start": "370690",
    "end": "372460"
  },
  {
    "text": "load balancers and they're looking for",
    "start": "372460",
    "end": "374110"
  },
  {
    "text": "more of the traditional active passive",
    "start": "374110",
    "end": "375790"
  },
  {
    "text": "options so we've developed a couple ways",
    "start": "375790",
    "end": "378160"
  },
  {
    "text": "to handle that in AWS the first option",
    "start": "378160",
    "end": "381160"
  },
  {
    "text": "which is very familiar to anybody who",
    "start": "381160",
    "end": "383260"
  },
  {
    "text": "who runs a CH a active passive nodes in",
    "start": "383260",
    "end": "386080"
  },
  {
    "text": "a regular on-prem infrastructure",
    "start": "386080",
    "end": "388750"
  },
  {
    "text": "leveraging keepalive d to migrate an",
    "start": "388750",
    "end": "391540"
  },
  {
    "text": "elastic IP address between two instances",
    "start": "391540",
    "end": "394420"
  },
  {
    "text": "so this allows you to use a static IP",
    "start": "394420",
    "end": "397060"
  },
  {
    "text": "address for your endpoints and also",
    "start": "397060",
    "end": "399700"
  },
  {
    "text": "allows you to not be tied into",
    "start": "399700",
    "end": "401910"
  },
  {
    "text": "necessarily all the Amazon functionality",
    "start": "401910",
    "end": "404470"
  },
  {
    "text": "you're not required to use about 53 or",
    "start": "404470",
    "end": "406780"
  },
  {
    "text": "anything like that the other option that",
    "start": "406780",
    "end": "409540"
  },
  {
    "text": "we've also developed is pretty much the",
    "start": "409540",
    "end": "412180"
  },
  {
    "text": "same system except instead of using",
    "start": "412180",
    "end": "413770"
  },
  {
    "text": "keepalive D we leverage the AWS lambda",
    "start": "413770",
    "end": "416500"
  },
  {
    "text": "functionality to provide those health",
    "start": "416500",
    "end": "418900"
  },
  {
    "text": "checks to make sure that the nginx",
    "start": "418900",
    "end": "421660"
  },
  {
    "text": "instances are healthy and if one does",
    "start": "421660",
    "end": "423640"
  },
  {
    "text": "fail it will go ahead and migrate and",
    "start": "423640",
    "end": "426190"
  },
  {
    "text": "move that elastic IP address to the",
    "start": "426190",
    "end": "428890"
  },
  {
    "text": "other node to make sure that your",
    "start": "428890",
    "end": "430120"
  },
  {
    "text": "everything stays online one of the great",
    "start": "430120",
    "end": "433300"
  },
  {
    "text": "things about this is this is actually a",
    "start": "433300",
    "end": "434710"
  },
  {
    "text": "fully supported solution from our",
    "start": "434710",
    "end": "437350"
  },
  {
    "text": "support team so if you ever you know if",
    "start": "437350",
    "end": "440230"
  },
  {
    "text": "you need to do an active/passive",
    "start": "440230",
    "end": "441130"
  },
  {
    "text": "solution and you need to have somebody",
    "start": "441130",
    "end": "443890"
  },
  {
    "text": "standing behind it we'll stand behind",
    "start": "443890",
    "end": "445480"
  },
  {
    "text": "and make sure that it works properly for",
    "start": "445480",
    "end": "447640"
  },
  {
    "text": "you guys and then one of the big things",
    "start": "447640",
    "end": "452770"
  },
  {
    "start": "450000",
    "end": "640000"
  },
  {
    "text": "that we we've just recently recently",
    "start": "452770",
    "end": "454690"
  },
  {
    "text": "released and it's really great we've",
    "start": "454690",
    "end": "457300"
  },
  {
    "text": "really said an auto scaling group",
    "start": "457300",
    "end": "458620"
  },
  {
    "text": "integration so the standard way of doing",
    "start": "458620",
    "end": "462250"
  },
  {
    "text": "auto scaling groups it traditionally has",
    "start": "462250",
    "end": "465280"
  },
  {
    "text": "been this sort of architecture you have",
    "start": "465280",
    "end": "467610"
  },
  {
    "text": "nginx Plus sitting in front and then",
    "start": "467610",
    "end": "470830"
  },
  {
    "text": "from there nginx plus is routing to two",
    "start": "470830",
    "end": "473530"
  },
  {
    "text": "different classic load balancers that",
    "start": "473530",
    "end": "476260"
  },
  {
    "text": "then route to the auto scaled group",
    "start": "476260",
    "end": "478840"
  },
  {
    "text": "application behind it this is kind of",
    "start": "478840",
    "end": "481360"
  },
  {
    "text": "the out of the box functionality and it",
    "start": "481360",
    "end": "484450"
  },
  {
    "text": "really is just kind of standard way that",
    "start": "484450",
    "end": "486220"
  },
  {
    "text": "Amazon tends to do auto scaling groups",
    "start": "486220",
    "end": "489780"
  },
  {
    "text": "so we've done this we've we've written a",
    "start": "489780",
    "end": "492250"
  },
  {
    "text": "plugin that runs on your nginx + nodes",
    "start": "492250",
    "end": "495370"
  },
  {
    "text": "and what it goes ahead and does is",
    "start": "495370",
    "end": "497590"
  },
  {
    "text": "allows you to use the Amazon SDK",
    "start": "497590",
    "end": "501940"
  },
  {
    "text": "endpoint to pull information about those",
    "start": "501940",
    "end": "504700"
  },
  {
    "text": "auto scaling groups so now you can take",
    "start": "504700",
    "end": "506860"
  },
  {
    "text": "out those classic load balancers and",
    "start": "506860",
    "end": "509170"
  },
  {
    "text": "nginx will load balance directly to the",
    "start": "509170",
    "end": "511960"
  },
  {
    "text": "auto scaling group servers giving you",
    "start": "511960",
    "end": "514090"
  },
  {
    "text": "more control over all the different",
    "start": "514090",
    "end": "516400"
  },
  {
    "text": "routing algorithms and session",
    "start": "516400",
    "end": "518890"
  },
  {
    "text": "persistence or anything you might need",
    "start": "518890",
    "end": "520479"
  },
  {
    "text": "to these back-end applications so this",
    "start": "520479",
    "end": "523030"
  },
  {
    "text": "relies on a on a plugin that we call the",
    "start": "523030",
    "end": "525610"
  },
  {
    "text": "nginx",
    "start": "525610",
    "end": "526180"
  },
  {
    "text": "ASG sync tool which is a",
    "start": "526180",
    "end": "528610"
  },
  {
    "text": "lightweight go program that looks at the",
    "start": "528610",
    "end": "532230"
  },
  {
    "text": "pings the SDK endpoint on a given",
    "start": "532230",
    "end": "534910"
  },
  {
    "text": "interval that you can set and then",
    "start": "534910",
    "end": "536890"
  },
  {
    "text": "depending on the configuration will",
    "start": "536890",
    "end": "539410"
  },
  {
    "text": "assign servers from an auto scaling",
    "start": "539410",
    "end": "541870"
  },
  {
    "text": "group to the different upstream groups",
    "start": "541870",
    "end": "543880"
  },
  {
    "text": "in engine X plus and so currently we",
    "start": "543880",
    "end": "548860"
  },
  {
    "text": "have it and this is publicly available",
    "start": "548860",
    "end": "550240"
  },
  {
    "text": "it's available on github right now it is",
    "start": "550240",
    "end": "553660"
  },
  {
    "text": "it is designed to work with auto scaling",
    "start": "553660",
    "end": "555610"
  },
  {
    "text": "groups but we're working on supporting",
    "start": "555610",
    "end": "558070"
  },
  {
    "text": "integration with not only auto scaling",
    "start": "558070",
    "end": "559870"
  },
  {
    "text": "groups but also allowing you to use",
    "start": "559870",
    "end": "562079"
  },
  {
    "text": "regular ec2 instances by defining a reg",
    "start": "562079",
    "end": "566500"
  },
  {
    "text": "X for a tag so then any ec2 instance can",
    "start": "566500",
    "end": "569860"
  },
  {
    "text": "be automatically added to an upload",
    "start": "569860",
    "end": "571600"
  },
  {
    "text": "balancer group inside of nginx as it",
    "start": "571600",
    "end": "573760"
  },
  {
    "text": "comes online and also we're looking to",
    "start": "573760",
    "end": "576220"
  },
  {
    "text": "extend that to the Amazon ECS service as",
    "start": "576220",
    "end": "578920"
  },
  {
    "text": "well so that as those containers come up",
    "start": "578920",
    "end": "581200"
  },
  {
    "text": "and down they will be dynamically added",
    "start": "581200",
    "end": "583209"
  },
  {
    "text": "you don't have to worry about the",
    "start": "583209",
    "end": "585670"
  },
  {
    "text": "one-to-one port mapping it will look at",
    "start": "585670",
    "end": "587829"
  },
  {
    "text": "what port the container is listening on",
    "start": "587829",
    "end": "590230"
  },
  {
    "text": "and add that in so it really makes it it",
    "start": "590230",
    "end": "592779"
  },
  {
    "text": "flexible and allows you to really extend",
    "start": "592779",
    "end": "596199"
  },
  {
    "text": "and leverage all the different",
    "start": "596199",
    "end": "597579"
  },
  {
    "text": "functionality in with nginx plus in AWS",
    "start": "597579",
    "end": "602100"
  },
  {
    "text": "so this is this is a tool we've been",
    "start": "602100",
    "end": "604390"
  },
  {
    "text": "really excited about personally I'm a",
    "start": "604390",
    "end": "607029"
  },
  {
    "text": "big fan of it you can do some really",
    "start": "607029",
    "end": "608769"
  },
  {
    "text": "neat stuff with it and then of course",
    "start": "608769",
    "end": "612300"
  },
  {
    "text": "nginx plus is available in the AWS",
    "start": "612300",
    "end": "615010"
  },
  {
    "text": "marketplace so and the quick starts out",
    "start": "615010",
    "end": "617230"
  },
  {
    "text": "there too so I really recommend anybody",
    "start": "617230",
    "end": "619750"
  },
  {
    "text": "who says any questions about you know",
    "start": "619750",
    "end": "622000"
  },
  {
    "text": "trying to build this sort of",
    "start": "622000",
    "end": "622990"
  },
  {
    "text": "infrastructure to take a look at it",
    "start": "622990",
    "end": "624970"
  },
  {
    "text": "check out our Quick Start Guide spin up",
    "start": "624970",
    "end": "627430"
  },
  {
    "text": "an environment and and see how it works",
    "start": "627430",
    "end": "629529"
  },
  {
    "text": "for you all right well thanks for you",
    "start": "629529",
    "end": "633250"
  },
  {
    "text": "guys it's time if anybody has any",
    "start": "633250",
    "end": "634839"
  },
  {
    "text": "questions I'd love to answer them when",
    "start": "634839",
    "end": "636550"
  },
  {
    "text": "we're off stage here thank you all right",
    "start": "636550",
    "end": "638620"
  },
  {
    "text": "thank you so much Sam Ian",
    "start": "638620",
    "end": "641970"
  }
]