[
  {
    "start": "0",
    "end": "22000"
  },
  {
    "text": "hello my name is Eric Scholes I'm a",
    "start": "30",
    "end": "1500"
  },
  {
    "text": "senior solutions architect here at",
    "start": "1500",
    "end": "2730"
  },
  {
    "text": "Amazon Web Services and today we're",
    "start": "2730",
    "end": "4740"
  },
  {
    "text": "going to be talking about application",
    "start": "4740",
    "end": "6029"
  },
  {
    "text": "integration specifically step functions",
    "start": "6029",
    "end": "8610"
  },
  {
    "text": "aw step functions that you coordinate",
    "start": "8610",
    "end": "10290"
  },
  {
    "text": "application components and micro",
    "start": "10290",
    "end": "12090"
  },
  {
    "text": "services in a service workflow allowing",
    "start": "12090",
    "end": "14370"
  },
  {
    "text": "you to build applications and work",
    "start": "14370",
    "end": "15809"
  },
  {
    "text": "clothes much faster it was announced it",
    "start": "15809",
    "end": "17850"
  },
  {
    "text": "reinvent 2016 and again allows the ease",
    "start": "17850",
    "end": "20550"
  },
  {
    "text": "of deployment and building there's three",
    "start": "20550",
    "end": "22109"
  },
  {
    "start": "22000",
    "end": "22000"
  },
  {
    "text": "major benefits to using aid to be a step",
    "start": "22109",
    "end": "23730"
  },
  {
    "text": "functions one is the ability to",
    "start": "23730",
    "end": "25380"
  },
  {
    "text": "visualize workflows of your application",
    "start": "25380",
    "end": "27720"
  },
  {
    "text": "that directly translate to the business",
    "start": "27720",
    "end": "29970"
  },
  {
    "text": "and technical logic of your applications",
    "start": "29970",
    "end": "32340"
  },
  {
    "text": "you can also write less code because the",
    "start": "32340",
    "end": "35460"
  },
  {
    "text": "code that usually exists in applications",
    "start": "35460",
    "end": "37680"
  },
  {
    "text": "such as conditional logic can now be",
    "start": "37680",
    "end": "39149"
  },
  {
    "text": "moved decoupled from the application and",
    "start": "39149",
    "end": "41309"
  },
  {
    "text": "then inserted into aw step functions you",
    "start": "41309",
    "end": "44250"
  },
  {
    "text": "also have the ability for improved",
    "start": "44250",
    "end": "45719"
  },
  {
    "text": "resiliency by having additional error",
    "start": "45719",
    "end": "47879"
  },
  {
    "text": "checking retries and exponential",
    "start": "47879",
    "end": "49860"
  },
  {
    "text": "back-off and step functions for each",
    "start": "49860",
    "end": "51510"
  },
  {
    "text": "workflow in order to coordinate between",
    "start": "51510",
    "end": "53550"
  },
  {
    "start": "53000",
    "end": "53000"
  },
  {
    "text": "application components there's a few",
    "start": "53550",
    "end": "55559"
  },
  {
    "text": "must-haves that are required step",
    "start": "55559",
    "end": "56910"
  },
  {
    "text": "functions must scale to meet your demand",
    "start": "56910",
    "end": "58710"
  },
  {
    "text": "it can never lose state it has to be",
    "start": "58710",
    "end": "60600"
  },
  {
    "text": "able to deal with errors by providing",
    "start": "60600",
    "end": "62219"
  },
  {
    "text": "new things like catch tries and retries",
    "start": "62219",
    "end": "65100"
  },
  {
    "text": "as well as exponential back-off you have",
    "start": "65100",
    "end": "67950"
  },
  {
    "text": "to have the ability to easily use and",
    "start": "67950",
    "end": "70110"
  },
  {
    "text": "manage the system and for every",
    "start": "70110",
    "end": "71970"
  },
  {
    "text": "application that's run you have to have",
    "start": "71970",
    "end": "73710"
  },
  {
    "text": "a full audit trail of what was done when",
    "start": "73710",
    "end": "75479"
  },
  {
    "text": "you define a workflow in A to B of step",
    "start": "75479",
    "end": "76950"
  },
  {
    "start": "76000",
    "end": "76000"
  },
  {
    "text": "functions you start with writing it in",
    "start": "76950",
    "end": "78630"
  },
  {
    "text": "the Amazon state language which is the",
    "start": "78630",
    "end": "80040"
  },
  {
    "text": "JSON syntax the AWS console then takes",
    "start": "80040",
    "end": "82350"
  },
  {
    "text": "that syntax and visualizes it for you to",
    "start": "82350",
    "end": "84570"
  },
  {
    "text": "show you the workflow diagram when you",
    "start": "84570",
    "end": "86280"
  },
  {
    "text": "start a workflow you're actually",
    "start": "86280",
    "end": "88200"
  },
  {
    "text": "executing a workflow and when you take",
    "start": "88200",
    "end": "90090"
  },
  {
    "text": "when you execute you pass in a JSON",
    "start": "90090",
    "end": "91979"
  },
  {
    "text": "input parameter can be multiple",
    "start": "91979",
    "end": "93720"
  },
  {
    "text": "parameters and that input then becomes",
    "start": "93720",
    "end": "95549"
  },
  {
    "text": "the first input to the first state at",
    "start": "95549",
    "end": "97439"
  },
  {
    "text": "that point every state then either adds",
    "start": "97439",
    "end": "99689"
  },
  {
    "text": "and or changes data in that JSON output",
    "start": "99689",
    "end": "102180"
  },
  {
    "text": "and the output from one state becomes",
    "start": "102180",
    "end": "104070"
  },
  {
    "text": "the input to the next day with AWS step",
    "start": "104070",
    "end": "106409"
  },
  {
    "start": "106000",
    "end": "106000"
  },
  {
    "text": "functions there's seven different states",
    "start": "106409",
    "end": "107909"
  },
  {
    "text": "the first state is a task date task",
    "start": "107909",
    "end": "110100"
  },
  {
    "text": "dates do work they can pass information",
    "start": "110100",
    "end": "112200"
  },
  {
    "text": "to an external component and wait for",
    "start": "112200",
    "end": "115320"
  },
  {
    "text": "that external component to return",
    "start": "115320",
    "end": "116579"
  },
  {
    "text": "information back a choice state actually",
    "start": "116579",
    "end": "118979"
  },
  {
    "text": "is making a decision based on the input",
    "start": "118979",
    "end": "121320"
  },
  {
    "text": "JSON object that's provided to it and",
    "start": "121320",
    "end": "123360"
  },
  {
    "text": "you can say basically using JSON path if",
    "start": "123360",
    "end": "125640"
  },
  {
    "text": "this then go to this state and or this",
    "start": "125640",
    "end": "128250"
  },
  {
    "text": "state end or this day parallelization is",
    "start": "128250",
    "end": "130440"
  },
  {
    "text": "also all is also offered and that lets",
    "start": "130440",
    "end": "132750"
  },
  {
    "text": "you take and",
    "start": "132750",
    "end": "133620"
  },
  {
    "text": "input JSON object and send it to",
    "start": "133620",
    "end": "135569"
  },
  {
    "text": "multiple places to get work done",
    "start": "135569",
    "end": "136950"
  },
  {
    "text": "once all the work is done across all the",
    "start": "136950",
    "end": "139290"
  },
  {
    "text": "different objects it then combines the",
    "start": "139290",
    "end": "141480"
  },
  {
    "text": "JSON into one object passing it to the",
    "start": "141480",
    "end": "143849"
  },
  {
    "text": "output for the next state a wait",
    "start": "143849",
    "end": "145530"
  },
  {
    "text": "condition is also a state which is",
    "start": "145530",
    "end": "147420"
  },
  {
    "text": "analogous to asleep you can do a wait",
    "start": "147420",
    "end": "149370"
  },
  {
    "text": "for one second you can do it for 30",
    "start": "149370",
    "end": "150810"
  },
  {
    "text": "seconds 90 seconds or more I get to the",
    "start": "150810",
    "end": "152970"
  },
  {
    "text": "state I wait and then I move to the next",
    "start": "152970",
    "end": "154860"
  },
  {
    "text": "step the fail state allows you to stop",
    "start": "154860",
    "end": "157319"
  },
  {
    "text": "the execution of the step function",
    "start": "157319",
    "end": "158730"
  },
  {
    "text": "workflow and then provide a status back",
    "start": "158730",
    "end": "160799"
  },
  {
    "text": "letting you know that you did in fact",
    "start": "160799",
    "end": "161879"
  },
  {
    "text": "have a failure we're a success state",
    "start": "161879",
    "end": "163709"
  },
  {
    "text": "will also stop the execution but return",
    "start": "163709",
    "end": "165750"
  },
  {
    "text": "that you accident that you successfully",
    "start": "165750",
    "end": "167280"
  },
  {
    "text": "completed the execution a passed state",
    "start": "167280",
    "end": "169769"
  },
  {
    "text": "takes the input of the JSON and forwards",
    "start": "169769",
    "end": "172680"
  },
  {
    "text": "it directly back to the output here's an",
    "start": "172680",
    "end": "174450"
  },
  {
    "text": "example of doing an image processing",
    "start": "174450",
    "end": "175500"
  },
  {
    "start": "175000",
    "end": "175000"
  },
  {
    "text": "with a W step functions the workflow",
    "start": "175500",
    "end": "177750"
  },
  {
    "text": "here we'll also talk about the different",
    "start": "177750",
    "end": "179430"
  },
  {
    "text": "states that are used to meet the need of",
    "start": "179430",
    "end": "180870"
  },
  {
    "text": "the requirements we start with taking",
    "start": "180870",
    "end": "183000"
  },
  {
    "text": "the data from the from the photo and",
    "start": "183000",
    "end": "184829"
  },
  {
    "text": "determining whether or not it's an",
    "start": "184829",
    "end": "186060"
  },
  {
    "text": "acceptable format that's the task state",
    "start": "186060",
    "end": "187950"
  },
  {
    "text": "we then pass that data and the JSON",
    "start": "187950",
    "end": "190319"
  },
  {
    "text": "object as an input to the choice state",
    "start": "190319",
    "end": "192150"
  },
  {
    "text": "is it a ping visit a JPEG or is it other",
    "start": "192150",
    "end": "195180"
  },
  {
    "text": "that choice statement then says if it's",
    "start": "195180",
    "end": "197040"
  },
  {
    "text": "not a file format I recognize send to",
    "start": "197040",
    "end": "199590"
  },
  {
    "text": "the fail state otherwise send over to",
    "start": "199590",
    "end": "202139"
  },
  {
    "text": "storing the metadata and let's start a",
    "start": "202139",
    "end": "203819"
  },
  {
    "text": "parallel process the parallel process",
    "start": "203819",
    "end": "206220"
  },
  {
    "text": "kicks off two streams one creates a",
    "start": "206220",
    "end": "208169"
  },
  {
    "text": "thumbnail and the other sends the image",
    "start": "208169",
    "end": "209970"
  },
  {
    "text": "to aid abuse recognition to pull objects",
    "start": "209970",
    "end": "212519"
  },
  {
    "text": "out that it can understand and then",
    "start": "212519",
    "end": "214169"
  },
  {
    "text": "writes those objects to the JSON output",
    "start": "214169",
    "end": "215579"
  },
  {
    "text": "and then you are complete with the",
    "start": "215579",
    "end": "217919"
  },
  {
    "text": "process a Deva step functions uses the",
    "start": "217919",
    "end": "219959"
  },
  {
    "start": "219000",
    "end": "219000"
  },
  {
    "text": "Amazon state language which is JSON",
    "start": "219959",
    "end": "221489"
  },
  {
    "text": "syntax to define the workflow from the",
    "start": "221489",
    "end": "223709"
  },
  {
    "text": "workflow in the preview screen here's a",
    "start": "223709",
    "end": "225540"
  },
  {
    "text": "quick snippet so that you can see how it",
    "start": "225540",
    "end": "227310"
  },
  {
    "text": "flows first you have a comment the",
    "start": "227310",
    "end": "229049"
  },
  {
    "text": "comment is for the overall workflow and",
    "start": "229049",
    "end": "231180"
  },
  {
    "text": "it's given an idea of what this workflow",
    "start": "231180",
    "end": "232650"
  },
  {
    "text": "is about to do it then says where am I",
    "start": "232650",
    "end": "234840"
  },
  {
    "text": "going to start because I'm going to have",
    "start": "234840",
    "end": "236069"
  },
  {
    "text": "many states I need to know what the",
    "start": "236069",
    "end": "237480"
  },
  {
    "text": "first starting state is the next section",
    "start": "237480",
    "end": "239639"
  },
  {
    "text": "is States and that's going to be",
    "start": "239639",
    "end": "241109"
  },
  {
    "text": "cascading or nested JSON objects",
    "start": "241109",
    "end": "243480"
  },
  {
    "text": "defining each state each state can be of",
    "start": "243480",
    "end": "245699"
  },
  {
    "text": "different types the first state as we",
    "start": "245699",
    "end": "247349"
  },
  {
    "text": "talked about is a type of task which is",
    "start": "247349",
    "end": "249480"
  },
  {
    "text": "going to call a lambda function to",
    "start": "249480",
    "end": "251310"
  },
  {
    "text": "return back the file format of the",
    "start": "251310",
    "end": "253980"
  },
  {
    "text": "object in this case a JPEG image we",
    "start": "253980",
    "end": "256530"
  },
  {
    "text": "designate the input path we designate",
    "start": "256530",
    "end": "258359"
  },
  {
    "text": "the result path you can see that we use",
    "start": "258359",
    "end": "260130"
  },
  {
    "text": "JSON path to determine the attributes",
    "start": "260130",
    "end": "262049"
  },
  {
    "text": "that are sent we also implemented a",
    "start": "262049",
    "end": "263669"
  },
  {
    "text": "catch and on the catch you can see that",
    "start": "263669",
    "end": "265830"
  },
  {
    "text": "we have a next",
    "start": "265830",
    "end": "266910"
  },
  {
    "text": "statement that says when I transitioned",
    "start": "266910",
    "end": "268650"
  },
  {
    "text": "from the catch of an error I'm going to",
    "start": "268650",
    "end": "270480"
  },
  {
    "text": "transition to not supported image file",
    "start": "270480",
    "end": "273030"
  },
  {
    "text": "types which will move me to the fail",
    "start": "273030",
    "end": "274500"
  },
  {
    "text": "state above that again we have another",
    "start": "274500",
    "end": "276750"
  },
  {
    "text": "next which is always a transition state",
    "start": "276750",
    "end": "278760"
  },
  {
    "text": "which says if I did successfully find",
    "start": "278760",
    "end": "280530"
  },
  {
    "text": "the object move it to the next state so",
    "start": "280530",
    "end": "282540"
  },
  {
    "text": "what types of service integrations does",
    "start": "282540",
    "end": "285030"
  },
  {
    "text": "a to BOS offer in the beginning there",
    "start": "285030",
    "end": "286920"
  },
  {
    "text": "was a lambda and lambda still exist",
    "start": "286920",
    "end": "288540"
  },
  {
    "start": "287000",
    "end": "287000"
  },
  {
    "text": "today but we wanted to go ahead and talk",
    "start": "288540",
    "end": "290130"
  },
  {
    "text": "a little bit about what the lambda",
    "start": "290130",
    "end": "291360"
  },
  {
    "text": "function looks like as it relates to a",
    "start": "291360",
    "end": "293370"
  },
  {
    "text": "WS step functions so a simple lambda",
    "start": "293370",
    "end": "295890"
  },
  {
    "text": "function here takes an event object at a",
    "start": "295890",
    "end": "297900"
  },
  {
    "text": "JSON format and it concatenates hello",
    "start": "297900",
    "end": "300570"
  },
  {
    "text": "with an event dot name that it gets from",
    "start": "300570",
    "end": "302670"
  },
  {
    "text": "the app from the object so now we move",
    "start": "302670",
    "end": "304350"
  },
  {
    "text": "and create a step function and then the",
    "start": "304350",
    "end": "306060"
  },
  {
    "text": "step function we can see that we have a",
    "start": "306060",
    "end": "307200"
  },
  {
    "text": "hello world state and the start at is",
    "start": "307200",
    "end": "309360"
  },
  {
    "text": "hello world we then move to the Arn",
    "start": "309360",
    "end": "312540"
  },
  {
    "text": "which is the same lambda function that",
    "start": "312540",
    "end": "314730"
  },
  {
    "text": "we just created when we execute this",
    "start": "314730",
    "end": "316950"
  },
  {
    "text": "state or workflow you will see that we",
    "start": "316950",
    "end": "319320"
  },
  {
    "text": "can actually get auditability of that",
    "start": "319320",
    "end": "321330"
  },
  {
    "text": "particular state you can see here that",
    "start": "321330",
    "end": "323250"
  },
  {
    "start": "323000",
    "end": "323000"
  },
  {
    "text": "the status of the state is succeeded you",
    "start": "323250",
    "end": "325920"
  },
  {
    "text": "can see the lambda Arne which is our",
    "start": "325920",
    "end": "327300"
  },
  {
    "text": "function that we created earlier you can",
    "start": "327300",
    "end": "329040"
  },
  {
    "text": "see that the input jason that we sent at",
    "start": "329040",
    "end": "330720"
  },
  {
    "text": "the time of execution was reinvent and",
    "start": "330720",
    "end": "333030"
  },
  {
    "text": "recap attendees and you can see that the",
    "start": "333030",
    "end": "334890"
  },
  {
    "text": "output jason is hello recap reinvent",
    "start": "334890",
    "end": "337680"
  },
  {
    "text": "attendees with with the status code of",
    "start": "337680",
    "end": "339960"
  },
  {
    "text": "200 so what's new with application",
    "start": "339960",
    "end": "342180"
  },
  {
    "start": "341000",
    "end": "341000"
  },
  {
    "text": "integration from reinvent 2018 a to be a",
    "start": "342180",
    "end": "344550"
  },
  {
    "text": "step functions now lets you use the",
    "start": "344550",
    "end": "346800"
  },
  {
    "text": "amazon state language to reference",
    "start": "346800",
    "end": "348750"
  },
  {
    "text": "directly dynamo DB with full credence",
    "start": "348750",
    "end": "351270"
  },
  {
    "text": "create read update and delete you can",
    "start": "351270",
    "end": "353640"
  },
  {
    "text": "now also kick off an AWS batch job you",
    "start": "353640",
    "end": "355950"
  },
  {
    "text": "can also kick off AWS ECS with Fargate",
    "start": "355950",
    "end": "359220"
  },
  {
    "text": "containers you can send a message",
    "start": "359220",
    "end": "360990"
  },
  {
    "text": "directly to an sqs queue and you can",
    "start": "360990",
    "end": "362880"
  },
  {
    "text": "publish a message directly to SNS topics",
    "start": "362880",
    "end": "365130"
  },
  {
    "text": "you can start an 80s glue job and",
    "start": "365130",
    "end": "367140"
  },
  {
    "text": "monitor and wait for it to complete",
    "start": "367140",
    "end": "368430"
  },
  {
    "text": "before moving to the next step you may",
    "start": "368430",
    "end": "369960"
  },
  {
    "text": "now also integrate Amazon Sage Maker",
    "start": "369960",
    "end": "372090"
  },
  {
    "text": "directly with the Amazon state language",
    "start": "372090",
    "end": "373860"
  },
  {
    "text": "allowing you to dispatch jobs directly",
    "start": "373860",
    "end": "375750"
  },
  {
    "text": "to Sage Maker waiting for those training",
    "start": "375750",
    "end": "377910"
  },
  {
    "text": "jobs to complete before you move on to",
    "start": "377910",
    "end": "379530"
  },
  {
    "text": "the next state there's two different",
    "start": "379530",
    "end": "381150"
  },
  {
    "start": "381000",
    "end": "381000"
  },
  {
    "text": "kinds of tasks there's a task activity",
    "start": "381150",
    "end": "383730"
  },
  {
    "text": "and there's a task we've talked about",
    "start": "383730",
    "end": "385800"
  },
  {
    "text": "the task and how it references an",
    "start": "385800",
    "end": "387660"
  },
  {
    "text": "external component a task activity does",
    "start": "387660",
    "end": "390030"
  },
  {
    "text": "the same thing when you create a task",
    "start": "390030",
    "end": "391980"
  },
  {
    "text": "activity you are creating or generating",
    "start": "391980",
    "end": "394050"
  },
  {
    "text": "an arn that's specific to no resource",
    "start": "394050",
    "end": "397229"
  },
  {
    "text": "that you're currently aware of you put",
    "start": "397229",
    "end": "398760"
  },
  {
    "text": "that Arne into your resource of you",
    "start": "398760",
    "end": "400689"
  },
  {
    "text": "activity and that lets you do long pole",
    "start": "400689",
    "end": "403029"
  },
  {
    "text": "to things like instances containers even",
    "start": "403029",
    "end": "405639"
  },
  {
    "text": "on Prem servers even your laptop you",
    "start": "405639",
    "end": "407889"
  },
  {
    "text": "have an activity worker that resides on",
    "start": "407889",
    "end": "409389"
  },
  {
    "text": "one of those services that we talked",
    "start": "409389",
    "end": "410979"
  },
  {
    "text": "about in an instance or laptop and",
    "start": "410979",
    "end": "413259"
  },
  {
    "text": "on-premise server and it continually",
    "start": "413259",
    "end": "414969"
  },
  {
    "text": "post step functions waiting for the step",
    "start": "414969",
    "end": "417429"
  },
  {
    "text": "function to meet the state of that",
    "start": "417429",
    "end": "418599"
  },
  {
    "text": "activity state one step functions it's",
    "start": "418599",
    "end": "420610"
  },
  {
    "text": "the activity state and the worker then",
    "start": "420610",
    "end": "422379"
  },
  {
    "text": "pulls then the step functions thence",
    "start": "422379",
    "end": "424599"
  },
  {
    "text": "provides an open to the worker the",
    "start": "424599",
    "end": "427299"
  },
  {
    "text": "worker does its job and either sends a",
    "start": "427299",
    "end": "429159"
  },
  {
    "text": "success or fail back to step functions",
    "start": "429159",
    "end": "431079"
  },
  {
    "text": "and the some functions nodes at that",
    "start": "431079",
    "end": "432699"
  },
  {
    "text": "point it can move to the next state",
    "start": "432699",
    "end": "433959"
  },
  {
    "text": "that's how in the past we've always done",
    "start": "433959",
    "end": "435369"
  },
  {
    "text": "long pole but you also with the tasks",
    "start": "435369",
    "end": "437019"
  },
  {
    "text": "have the ability to push requests",
    "start": "437019",
    "end": "438819"
  },
  {
    "text": "directly to a dubious lambda of course",
    "start": "438819",
    "end": "441099"
  },
  {
    "text": "and now",
    "start": "441099",
    "end": "441999"
  },
  {
    "text": "SNS ECS Fargate batch and others but you",
    "start": "441999",
    "end": "445209"
  },
  {
    "text": "can now do long pull requests to eat",
    "start": "445209",
    "end": "446919"
  },
  {
    "text": "with those other ones aid abuse will sit",
    "start": "446919",
    "end": "448989"
  },
  {
    "text": "and monitor and wait for those for ECS",
    "start": "448989",
    "end": "451539"
  },
  {
    "text": "tasks for our gate tasks batch tasks and",
    "start": "451539",
    "end": "454239"
  },
  {
    "text": "others to complete before moving to the",
    "start": "454239",
    "end": "456159"
  },
  {
    "text": "next state so how do we orchestrate",
    "start": "456159",
    "end": "457929"
  },
  {
    "start": "457000",
    "end": "457000"
  },
  {
    "text": "machine learning with sage maker and",
    "start": "457929",
    "end": "459729"
  },
  {
    "text": "advs step functions here's a simple",
    "start": "459729",
    "end": "461829"
  },
  {
    "text": "example with both a workflow as well as",
    "start": "461829",
    "end": "464049"
  },
  {
    "text": "Amazon state language the great thing",
    "start": "464049",
    "end": "465819"
  },
  {
    "text": "about using step functions with Amazon",
    "start": "465819",
    "end": "467889"
  },
  {
    "text": "sage maker is that models traditionally",
    "start": "467889",
    "end": "469779"
  },
  {
    "text": "can run for hours days weeks or even",
    "start": "469779",
    "end": "472539"
  },
  {
    "text": "longer and step functions will support",
    "start": "472539",
    "end": "474519"
  },
  {
    "text": "monitoring and waiting for the success",
    "start": "474519",
    "end": "476319"
  },
  {
    "text": "or failure of that job for up to a year",
    "start": "476319",
    "end": "478929"
  },
  {
    "text": "you can transform data from s3 you can",
    "start": "478929",
    "end": "481779"
  },
  {
    "text": "train jobs and you can even deploy jobs",
    "start": "481779",
    "end": "483699"
  },
  {
    "text": "using the parameters that are in the",
    "start": "483699",
    "end": "485529"
  },
  {
    "text": "Amazon state language for Amazon sage",
    "start": "485529",
    "end": "487239"
  },
  {
    "text": "maker also with Jupiter notebooks you",
    "start": "487239",
    "end": "489759"
  },
  {
    "text": "may now initiate using the boat of three",
    "start": "489759",
    "end": "492339"
  },
  {
    "text": "client and SDK Amazon step functions and",
    "start": "492339",
    "end": "495399"
  },
  {
    "text": "sage maker coordination there as well",
    "start": "495399",
    "end": "497499"
  },
  {
    "text": "here's an example of orchestrating a dub",
    "start": "497499",
    "end": "499959"
  },
  {
    "start": "498000",
    "end": "498000"
  },
  {
    "text": "use batch but there's more to it than",
    "start": "499959",
    "end": "501699"
  },
  {
    "text": "that",
    "start": "501699",
    "end": "502029"
  },
  {
    "text": "this also has in within the the Amazon",
    "start": "502029",
    "end": "505059"
  },
  {
    "text": "state language two different states",
    "start": "505059",
    "end": "506649"
  },
  {
    "text": "which also orchestrate a published",
    "start": "506649",
    "end": "508959"
  },
  {
    "text": "message to SNS topic all that's required",
    "start": "508959",
    "end": "511059"
  },
  {
    "text": "to orchestrate AWS batch in the amazon",
    "start": "511059",
    "end": "513610"
  },
  {
    "text": "state language is a job name an existing",
    "start": "513610",
    "end": "516309"
  },
  {
    "text": "job QR n-- and an existing job",
    "start": "516309",
    "end": "518110"
  },
  {
    "text": "definition on Amazon Web Services step",
    "start": "518110",
    "end": "520870"
  },
  {
    "text": "functions takes care of the rest for you",
    "start": "520870",
    "end": "522818"
  },
  {
    "text": "it orchestrates the batch monitors the",
    "start": "522819",
    "end": "525250"
  },
  {
    "text": "batch process waits for it to be done",
    "start": "525250",
    "end": "526959"
  },
  {
    "text": "and then post the success or failure",
    "start": "526959",
    "end": "529000"
  },
  {
    "text": "taking the outputs of that and moving it",
    "start": "529000",
    "end": "530949"
  },
  {
    "text": "to the inputs to the next state here in",
    "start": "530949",
    "end": "532929"
  },
  {
    "text": "this example there you can see that",
    "start": "532929",
    "end": "534500"
  },
  {
    "text": "if we are successful we move to a state",
    "start": "534500",
    "end": "537080"
  },
  {
    "text": "that says go ahead and send a or publish",
    "start": "537080",
    "end": "539870"
  },
  {
    "text": "a message to an SNS topic for success or",
    "start": "539870",
    "end": "542540"
  },
  {
    "text": "I can publish a failed message to",
    "start": "542540",
    "end": "545000"
  },
  {
    "text": "another topic or the same topic and nest",
    "start": "545000",
    "end": "547160"
  },
  {
    "text": "nest as well",
    "start": "547160",
    "end": "547880"
  },
  {
    "text": "you may now do full crud operations with",
    "start": "547880",
    "end": "550640"
  },
  {
    "start": "549000",
    "end": "549000"
  },
  {
    "text": "DynamoDB again create read update and",
    "start": "550640",
    "end": "553610"
  },
  {
    "text": "delete before this was available in the",
    "start": "553610",
    "end": "556430"
  },
  {
    "text": "amazon state language you would have to",
    "start": "556430",
    "end": "558350"
  },
  {
    "text": "move all of this functionality into a",
    "start": "558350",
    "end": "560150"
  },
  {
    "text": "lambda function arrow trap the lambda",
    "start": "560150",
    "end": "562250"
  },
  {
    "text": "function there return back and figure",
    "start": "562250",
    "end": "564500"
  },
  {
    "text": "out how to troubleshoot from there as",
    "start": "564500",
    "end": "565730"
  },
  {
    "text": "well as pass in all the different",
    "start": "565730",
    "end": "567290"
  },
  {
    "text": "parameters that were required into the",
    "start": "567290",
    "end": "568760"
  },
  {
    "text": "lambda function from the Amazon state",
    "start": "568760",
    "end": "570380"
  },
  {
    "text": "machine as well now it's much easier all",
    "start": "570380",
    "end": "573710"
  },
  {
    "text": "that's required in the Amazon state",
    "start": "573710",
    "end": "575480"
  },
  {
    "text": "language is that you create you select",
    "start": "575480",
    "end": "577460"
  },
  {
    "text": "an action arn from the resources if",
    "start": "577460",
    "end": "580670"
  },
  {
    "text": "you'll notice these don't have account",
    "start": "580670",
    "end": "581840"
  },
  {
    "text": "numbers in them these are saying I can",
    "start": "581840",
    "end": "583580"
  },
  {
    "text": "do a dynamo get item a dynamo delete",
    "start": "583580",
    "end": "586130"
  },
  {
    "text": "item a dynamo update item and more you",
    "start": "586130",
    "end": "589610"
  },
  {
    "text": "once you select the action you then give",
    "start": "589610",
    "end": "591290"
  },
  {
    "text": "it a table name that exists and then you",
    "start": "591290",
    "end": "593450"
  },
  {
    "text": "can specify key and other conditional",
    "start": "593450",
    "end": "595190"
  },
  {
    "text": "statements to ensure that the crud",
    "start": "595190",
    "end": "596480"
  },
  {
    "text": "operation is isolated to only that the",
    "start": "596480",
    "end": "599210"
  },
  {
    "text": "condition that suggests orchestrating",
    "start": "599210",
    "end": "602330"
  },
  {
    "start": "602000",
    "end": "602000"
  },
  {
    "text": "with AWS for gate also now is much",
    "start": "602330",
    "end": "604460"
  },
  {
    "text": "easier all that's required in the Amazon",
    "start": "604460",
    "end": "606290"
  },
  {
    "text": "state language in order to orchestrate a",
    "start": "606290",
    "end": "608030"
  },
  {
    "text": "far gate task is to choose a action arm",
    "start": "608030",
    "end": "611240"
  },
  {
    "text": "as a resource of ECS and then you are",
    "start": "611240",
    "end": "613790"
  },
  {
    "text": "going to select whether or not it's for",
    "start": "613790",
    "end": "615140"
  },
  {
    "text": "gate or other and then you're going to",
    "start": "615140",
    "end": "616640"
  },
  {
    "text": "provide the arm for the cluster as well",
    "start": "616640",
    "end": "618800"
  },
  {
    "text": "as the task definition you now have the",
    "start": "618800",
    "end": "621080"
  },
  {
    "text": "ability to generate snippets through the",
    "start": "621080",
    "end": "622910"
  },
  {
    "text": "console the console will let you choose",
    "start": "622910",
    "end": "625130"
  },
  {
    "text": "the different application integrations",
    "start": "625130",
    "end": "627200"
  },
  {
    "text": "that we talked about whether it's dynamo",
    "start": "627200",
    "end": "628730"
  },
  {
    "text": "batch or other and it will generate the",
    "start": "628730",
    "end": "631790"
  },
  {
    "text": "snippet for you it will look for the",
    "start": "631790",
    "end": "633350"
  },
  {
    "text": "arns that exist in your account already",
    "start": "633350",
    "end": "634850"
  },
  {
    "text": "today it'll allow you to select whether",
    "start": "634850",
    "end": "636830"
  },
  {
    "text": "or not you want to do retries whether or",
    "start": "636830",
    "end": "638240"
  },
  {
    "text": "not you want to do air catch and it will",
    "start": "638240",
    "end": "639500"
  },
  {
    "text": "build the entire snippet for you which",
    "start": "639500",
    "end": "641330"
  },
  {
    "text": "then you can then copy a copy and paste",
    "start": "641330",
    "end": "642770"
  },
  {
    "text": "into your current workflow and then",
    "start": "642770",
    "end": "644990"
  },
  {
    "text": "augment as needed all of them provide",
    "start": "644990",
    "end": "646940"
  },
  {
    "text": "snippets and others provide examples",
    "start": "646940",
    "end": "648860"
  },
  {
    "text": "which will actually launch",
    "start": "648860",
    "end": "649670"
  },
  {
    "text": "CloudFormation scripts for you so that",
    "start": "649670",
    "end": "651770"
  },
  {
    "text": "you can test fully the full features",
    "start": "651770",
    "end": "653240"
  },
  {
    "text": "this concludes our talk today about",
    "start": "653240",
    "end": "655040"
  },
  {
    "text": "application integration with aw step",
    "start": "655040",
    "end": "657890"
  },
  {
    "text": "functions if you have any questions",
    "start": "657890",
    "end": "659390"
  },
  {
    "text": "please do not hesitate to reach out to",
    "start": "659390",
    "end": "660740"
  },
  {
    "text": "your account team and Solutions",
    "start": "660740",
    "end": "663020"
  },
  {
    "text": "Architect thank you",
    "start": "663020",
    "end": "665230"
  },
  {
    "text": "you",
    "start": "665230",
    "end": "667290"
  }
]