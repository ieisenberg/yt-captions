[
  {
    "text": "so how did you like that eks demo by Rick good stuff right well I wanted to",
    "start": "7200",
    "end": "16090"
  },
  {
    "text": "be the first to let you know if you haven't been watching Twitter or the news or or whatever we just opened the",
    "start": "16090",
    "end": "23140"
  },
  {
    "text": "doors today on our new Stockholm region and in Stockholm you can now spin up ECS",
    "start": "23140",
    "end": "32648"
  },
  {
    "text": "and eks containers there as well so you have even more options available to you",
    "start": "32649",
    "end": "39609"
  },
  {
    "text": "as far as region selection goes so the second thing that I wanted to mention",
    "start": "39609",
    "end": "45539"
  },
  {
    "text": "last night local time yesterday Seattle time we unveiled a roadmap tool let me",
    "start": "45539",
    "end": "54309"
  },
  {
    "text": "drop out of my presentation real quick and on github / AWS there's a project",
    "start": "54309",
    "end": "61149"
  },
  {
    "text": "called containers roadmap and this project you can see we have a bunch of",
    "start": "61149",
    "end": "67090"
  },
  {
    "text": "issues created where we've categorized them into we're working on it or coming",
    "start": "67090",
    "end": "73900"
  },
  {
    "text": "soon or just shipped so if you've ever wondered hey you know what's happening",
    "start": "73900",
    "end": "79480"
  },
  {
    "text": "what's going to be happening scroll through here first you'll see you know the top of the coming soon list and",
    "start": "79480",
    "end": "85600"
  },
  {
    "text": "these are in no particular order necessarily other than being bucketed",
    "start": "85600",
    "end": "91630"
  },
  {
    "text": "into those three big buckets but you can see that we're you know coming soon",
    "start": "91630",
    "end": "97660"
  },
  {
    "text": "Seoul Tokyo Singapore Sydney and Frankfurt region so you know we have",
    "start": "97660",
    "end": "104350"
  },
  {
    "text": "region expansion happening and if you want to see what what is the definition",
    "start": "104350",
    "end": "109480"
  },
  {
    "text": "of soon check out the readme dot MD in this project and it will define what",
    "start": "109480",
    "end": "115720"
  },
  {
    "text": "soon means for us and it'll define we're working on it what does that mean for us",
    "start": "115720",
    "end": "121180"
  },
  {
    "text": "so definitely check that out if there's something that you think you would like us to work on like to put on our radar",
    "start": "121180",
    "end": "129300"
  },
  {
    "text": "explore opening an issue here and let us know and we'll see you know we'll see",
    "start": "129300",
    "end": "135969"
  },
  {
    "text": "about how we can priority is it this is a brand new process for us",
    "start": "135969",
    "end": "142090"
  },
  {
    "text": "so there's a chance that it could change hopefully there's a chance that it'll improve the goal is to improve",
    "start": "142090",
    "end": "148810"
  },
  {
    "text": "visibility from from my team outwards so we'd like to eliminate or at least",
    "start": "148810",
    "end": "155230"
  },
  {
    "text": "reduce the instances where you know you work really hard for a long time to",
    "start": "155230",
    "end": "161470"
  },
  {
    "text": "solve you know a particular problem that you're having and then you know a few weeks later we come along and we just",
    "start": "161470",
    "end": "167560"
  },
  {
    "text": "you know eliminate that problem altogether and all the work that you've done is is now just useless so we don't",
    "start": "167560",
    "end": "175420"
  },
  {
    "text": "want to we don't want you to have to spend a lot of effort if you know you know that hey there's a solution on the",
    "start": "175420",
    "end": "181959"
  },
  {
    "text": "way so definitely you know review this and see if this is you know addressing",
    "start": "181959",
    "end": "188560"
  },
  {
    "text": "the concerns that you have or the areas of interest that that you've been",
    "start": "188560",
    "end": "195280"
  },
  {
    "text": "thinking about also so I just wanted to point those things out before we get started now let's go ahead and dive into",
    "start": "195280",
    "end": "203489"
  },
  {
    "text": "ECS so we've looked so far we've done an",
    "start": "203489",
    "end": "209620"
  },
  {
    "text": "overview of you know how are all the ways to run containers we've done a bit",
    "start": "209620",
    "end": "216160"
  },
  {
    "text": "of a recap on some recent announcements and we've done a deep dive in the eks",
    "start": "216160",
    "end": "221830"
  },
  {
    "text": "now let's look at a deep dive into ECS and what's it like to run containers on",
    "start": "221830",
    "end": "227230"
  },
  {
    "text": "ECS and you know what are some ways to do that again yeah I think you know",
    "start": "227230",
    "end": "234610"
  },
  {
    "text": "we're all friends now so this is a little bit about me but you probably",
    "start": "234610",
    "end": "240730"
  },
  {
    "text": "already know most of that anyway so what are we going to do with this talk we're going to deploy a set of micro services",
    "start": "240730",
    "end": "248650"
  },
  {
    "text": "not a Twinner Twitter analyzer but just a different set of micro services and we're going to do it using ECS so let's",
    "start": "248650",
    "end": "257470"
  },
  {
    "text": "talk first let's deep dive on you know the key components of really any",
    "start": "257470",
    "end": "263979"
  },
  {
    "text": "Orchestrator but then we'll apply them specifically to e CS with e CS",
    "start": "263979",
    "end": "270880"
  },
  {
    "text": "and with any Orchestrator the way we like to work the way humans like to work",
    "start": "270880",
    "end": "277330"
  },
  {
    "text": "is to think about how do we want things to be right you don't think about necessarily think about all the little",
    "start": "277330",
    "end": "284080"
  },
  {
    "text": "steps to get there that's what you do next right but you start off by just thinking about what do I want the final picture",
    "start": "284080",
    "end": "291520"
  },
  {
    "text": "to look like and so we think of that in terms of like that's the description of",
    "start": "291520",
    "end": "296800"
  },
  {
    "text": "the end State the end State for an Orchestrator we like to push the end",
    "start": "296800",
    "end": "303580"
  },
  {
    "text": "state to the orchestrator and let the orchestrator figure out all the little steps necessary to get there right so",
    "start": "303580",
    "end": "311320"
  },
  {
    "text": "the end state for us is a task definition that's a description of how",
    "start": "311320",
    "end": "317680"
  },
  {
    "text": "we want our container to run how do we execute this container what does it take what ports doesn't need to listen on",
    "start": "317680",
    "end": "324610"
  },
  {
    "text": "what containers doesn't need to pull down a task definition can actually be composed of multiple containers",
    "start": "324610",
    "end": "331230"
  },
  {
    "text": "sometimes you'll need two containers to work together and they'll always need to scale up and down together",
    "start": "331230",
    "end": "338050"
  },
  {
    "text": "maybe there's a sidecar maybe there's a proxy or something like that so in those",
    "start": "338050",
    "end": "343420"
  },
  {
    "text": "situations we always want those things to go out together scale up together and down together so we describe them as one",
    "start": "343420",
    "end": "350230"
  },
  {
    "text": "task definition we describe it to the ECS control plane so the ECS control",
    "start": "350230",
    "end": "357730"
  },
  {
    "text": "plane is something that we just make an API call to we write our task definition",
    "start": "357730",
    "end": "362740"
  },
  {
    "text": "into that control plane and then the control plane processes it and comes to",
    "start": "362740",
    "end": "368260"
  },
  {
    "text": "an understanding of let me look at how things are today right now and let me",
    "start": "368260",
    "end": "373600"
  },
  {
    "text": "look at what you just described and let me figure out what I need to do to get there and then it goes and it makes",
    "start": "373600",
    "end": "379990"
  },
  {
    "text": "those things happen so it will queue up actions and it will you know deploy",
    "start": "379990",
    "end": "386590"
  },
  {
    "text": "those actions out on to whichever cluster we happen to be working against",
    "start": "386590",
    "end": "392680"
  },
  {
    "text": "working with so today the cluster can",
    "start": "392680",
    "end": "399850"
  },
  {
    "text": "include Fargate and as I said earlier this morning every cluster is a mixed cluster so we",
    "start": "399850",
    "end": "407610"
  },
  {
    "text": "can have some actions some containers some tasks definitions that deploy out on to ec2 instances and then we can have",
    "start": "407610",
    "end": "415110"
  },
  {
    "text": "other task definitions that deploy onto Fargate and ideally the Fargate ones are",
    "start": "415110",
    "end": "421980"
  },
  {
    "text": "the ones that you're using the most of because those are the ones that you have to do the least with right you don't",
    "start": "421980",
    "end": "429210"
  },
  {
    "text": "have to worry about patching or scaling the underlying infrastructure or anything like that so if we stop for a",
    "start": "429210",
    "end": "437880"
  },
  {
    "text": "second and we think about AWS services at AWS we give you many ways to",
    "start": "437880",
    "end": "444690"
  },
  {
    "text": "accomplish the same goal sometimes if you need to run a database you can run it on an ec2 instance or we offer a",
    "start": "444690",
    "end": "451710"
  },
  {
    "text": "service if you need to run a container you can run it on an ec2 instance we offer you a couple of different services",
    "start": "451710",
    "end": "457950"
  },
  {
    "text": "that are managed you can bring your own service if you like and orchestrate containers that way so if we if we drew",
    "start": "457950",
    "end": "465150"
  },
  {
    "text": "a box and that box was how much are you responsible for and how much is AWS",
    "start": "465150",
    "end": "472710"
  },
  {
    "text": "responsible for and we put a line down the middle of it somewhere we could just always be dividing up the same set of",
    "start": "472710",
    "end": "480030"
  },
  {
    "text": "actions this is what AWS will take care of for you and this is what you will",
    "start": "480030",
    "end": "486450"
  },
  {
    "text": "take care of yourself and at the lowest level we would have I'm gonna use ec2",
    "start": "486450",
    "end": "492150"
  },
  {
    "text": "right I'm gonna launch ec2 instances and then from there what are we taking care of we're gonna take care of the",
    "start": "492150",
    "end": "499230"
  },
  {
    "text": "underlying infrastructure the data center work the power the networking and",
    "start": "499230",
    "end": "504690"
  },
  {
    "text": "stuff like that and then everything from the operating system and up you'll take care of you'll take care of patching the",
    "start": "504690",
    "end": "511860"
  },
  {
    "text": "operating system installing your control plane software someone earlier today told me that they were using Nomad as",
    "start": "511860",
    "end": "518969"
  },
  {
    "text": "their control plan I'm not picking on anyone I love nomad but I think it's",
    "start": "518969",
    "end": "524580"
  },
  {
    "text": "it's a really cool example because there's a specific use case that led them that direction and so they have",
    "start": "524580",
    "end": "531600"
  },
  {
    "text": "that opportunity they have that option to be able to run their own control plane and manage their",
    "start": "531600",
    "end": "536790"
  },
  {
    "text": "containers that way so that's really cool and then as you decide you know",
    "start": "536790",
    "end": "541829"
  },
  {
    "text": "what I want to hand over more responsibility to AWS I want to do less",
    "start": "541829",
    "end": "546839"
  },
  {
    "text": "work right that that's what I think I want to do less work because I want to focus more on the application itself at",
    "start": "546839",
    "end": "554009"
  },
  {
    "text": "the top at the top so as much underneath that as I can I'm gonna hand off to",
    "start": "554009",
    "end": "559560"
  },
  {
    "text": "someone else and let them take care of so we can start to think about you know",
    "start": "559560",
    "end": "565019"
  },
  {
    "text": "what is the control plane doing for me it's scheduling tasks it's launching containers it's evaluating health it's",
    "start": "565019",
    "end": "573720"
  },
  {
    "text": "understanding how to do a deploy so all of those things I could manage on my own or I could move that line up a little",
    "start": "573720",
    "end": "580529"
  },
  {
    "text": "bit and use a different service and now that's managed for me as well so I could",
    "start": "580529",
    "end": "585959"
  },
  {
    "text": "move it up and start using eks and I could move it up a little bit and run",
    "start": "585959",
    "end": "591930"
  },
  {
    "text": "kubernetes myself or I could move it up a little bit more and use eks or maybe I",
    "start": "591930",
    "end": "597629"
  },
  {
    "text": "don't want to even think about scaling control planes or worrying about the",
    "start": "597629",
    "end": "602670"
  },
  {
    "text": "cluster itself or I just want to think in terms of just run my containers move it up even more and now I can run on",
    "start": "602670",
    "end": "609809"
  },
  {
    "text": "Fargate so as we look at all of these things just keep that in the back of your mind keep that in mental image of",
    "start": "609809",
    "end": "616709"
  },
  {
    "text": "you know who's responsible for what because ultimately all the same actions",
    "start": "616709",
    "end": "621870"
  },
  {
    "text": "have to occur it's just who's going to be responsible for it so with ECS with the control",
    "start": "621870",
    "end": "627480"
  },
  {
    "text": "plane AWS is responsible for all of the cloud operations security patching",
    "start": "627480",
    "end": "634040"
  },
  {
    "text": "scaling monitoring availability cost control we take care of running that",
    "start": "634040",
    "end": "639209"
  },
  {
    "text": "control plane and paying for it and making sure that it's up and available what are you responsible for deploying",
    "start": "639209",
    "end": "646350"
  },
  {
    "text": "your applications so there's just a simple API call that you can use to deploy your application out onto ECS and",
    "start": "646350",
    "end": "654269"
  },
  {
    "text": "that's really all you have to worry about same thing with ECR what are we",
    "start": "654269",
    "end": "661439"
  },
  {
    "text": "responsible for what are we taking care of that you don't have to about monitoring ECR monitoring your",
    "start": "661439",
    "end": "667649"
  },
  {
    "text": "registry scaling at availability and then of course patching so these are all",
    "start": "667649",
    "end": "673529"
  },
  {
    "text": "things that are just taken off of your table you don't have to worry about doing doing them anymore if you want to",
    "start": "673529",
    "end": "679260"
  },
  {
    "text": "run your own registry on the other hand you have to figure out all of these things also and then in addition to",
    "start": "679260",
    "end": "685380"
  },
  {
    "text": "those things you still will have to figure out how do I deploy it how do I pay for it and how do I keep it secure",
    "start": "685380",
    "end": "695269"
  },
  {
    "text": "container instances now you'll see when you're running container instances the",
    "start": "695269",
    "end": "700950"
  },
  {
    "text": "bulk of the work is still in your column right it's still in your side of the box",
    "start": "700950",
    "end": "706019"
  },
  {
    "text": "you have to figure out how do I deploy them we give you tools to help you have auto-scaling groups how do i patch them",
    "start": "706019",
    "end": "713850"
  },
  {
    "text": "we Rick alluded to it in the last talk but we actually published the latest ami",
    "start": "713850",
    "end": "719579"
  },
  {
    "text": "to an to an SNS topic you can subscribe to it and you can build automation around it so you could potentially",
    "start": "719579",
    "end": "725910"
  },
  {
    "text": "automate that how do i scale auto scaling groups how do I manage the cost",
    "start": "725910",
    "end": "732390"
  },
  {
    "text": "you have reserved instances and spot pricing how do I monitor them you have",
    "start": "732390",
    "end": "738120"
  },
  {
    "text": "cloud watch alarms and then how do I make sure that I have enough available again auto scaling can can work there",
    "start": "738120",
    "end": "745350"
  },
  {
    "text": "but it's all on you to sort of build all of this in right so this is where you're",
    "start": "745350",
    "end": "750480"
  },
  {
    "text": "going to have the most effort when you're when you're using a container Orchestrator so I've alluded to a few of",
    "start": "750480",
    "end": "758430"
  },
  {
    "text": "these already but what are the building blocks when you're managing instances when it comes to each of those",
    "start": "758430",
    "end": "764070"
  },
  {
    "text": "categories on the last slide look at the look at the tooling that you have that you can build your own automation around",
    "start": "764070",
    "end": "771570"
  },
  {
    "text": "so for deployment you can describe your entire deployment using cloud formation",
    "start": "771570",
    "end": "776579"
  },
  {
    "text": "or you can just run you know a CLI command and deploy some instances it's completely up to you we you can even",
    "start": "776579",
    "end": "783449"
  },
  {
    "text": "write your own using our SDK write your own scripts and make API calls using the",
    "start": "783449",
    "end": "789690"
  },
  {
    "text": "SDK security we have things for you like I am we have inspector to hopefully tell you",
    "start": "789690",
    "end": "797050"
  },
  {
    "text": "when something is sort of abnormally configured it's not the standard way to",
    "start": "797050",
    "end": "802209"
  },
  {
    "text": "configure things and then we have VPC flow logs to hopefully notify you or",
    "start": "802209",
    "end": "807819"
  },
  {
    "text": "alert you when things are behaving weird excuse me",
    "start": "807819",
    "end": "813279"
  },
  {
    "text": "patching update your ami replace your instances by the way I love that this is",
    "start": "813279",
    "end": "820180"
  },
  {
    "text": "on the slide and not run chef or puppet to update your instances has anyone",
    "start": "820180",
    "end": "826949"
  },
  {
    "text": "adopted at least for their container fleet has anyone adopted immutable",
    "start": "826949",
    "end": "832360"
  },
  {
    "text": "infrastructure the practice of immutability I see a few hands a little",
    "start": "832360",
    "end": "837370"
  },
  {
    "text": "hesitant still okay cool immutable infrastructure doesn't mean infrastructure that is read-only it",
    "start": "837370",
    "end": "844629"
  },
  {
    "text": "doesn't mean I can't write to it it simply means I am choosing to not mutate",
    "start": "844629",
    "end": "850749"
  },
  {
    "text": "its configuration so if you think about the old way of doing things with instances especially in a config managed",
    "start": "850749",
    "end": "858129"
  },
  {
    "text": "way chef puppet ansible salt all of these will take an instance and they",
    "start": "858129",
    "end": "865269"
  },
  {
    "text": "will move you from you know one version of that code to the next version of that",
    "start": "865269",
    "end": "871209"
  },
  {
    "text": "code then you make another change and move to the next you go from A to B to C to D well along the way you might think",
    "start": "871209",
    "end": "879129"
  },
  {
    "text": "you know I'm gonna undo something but you don't write the reverse code to actually back it out or sometimes you do",
    "start": "879129",
    "end": "885459"
  },
  {
    "text": "but usually you don't you know I'm gonna need this package I'm gonna need package foo installed and then later you think",
    "start": "885459",
    "end": "893110"
  },
  {
    "text": "now you know what I didn't need foo installed after all so you just take it out of the list of packages to be installed does that remove it from the",
    "start": "893110",
    "end": "900129"
  },
  {
    "text": "instance no it doesn't it's still there so then someone else comes along and they write something and they see oh",
    "start": "900129",
    "end": "906459"
  },
  {
    "text": "look who is here I don't need to add it to my list of packages because it's clearly added",
    "start": "906459",
    "end": "911949"
  },
  {
    "text": "somewhere else so they just go ahead and they write their code with the expectation that it's there and it works",
    "start": "911949",
    "end": "918699"
  },
  {
    "text": "everything is great right everything continues to work perhaps for years and",
    "start": "918699",
    "end": "923860"
  },
  {
    "text": "then all of a sudden you have to completely replace an instance and you bring it up from",
    "start": "923860",
    "end": "930080"
  },
  {
    "text": "scratch and it comes up and it's broken it can't work and you have to spend a",
    "start": "930080",
    "end": "935180"
  },
  {
    "text": "long time troubleshooting walk immutable instances on the other hand always start",
    "start": "935180",
    "end": "941690"
  },
  {
    "text": "from scratch and you configure them from zero to production-ready on boot every",
    "start": "941690",
    "end": "948500"
  },
  {
    "text": "single time they come up and then you don't touch them again so I think this is a really beautiful concept and it's",
    "start": "948500",
    "end": "955070"
  },
  {
    "text": "made more practical today because the instances themselves that we run",
    "start": "955070",
    "end": "960140"
  },
  {
    "text": "containers on is so there's the instances are so simple all you need is",
    "start": "960140",
    "end": "965480"
  },
  {
    "text": "the kernel the docker daemon and sometimes a config for whatever agent",
    "start": "965480",
    "end": "972140"
  },
  {
    "text": "you're running that's going to connect you into your cluster that's it so as long as you can do that and you can do",
    "start": "972140",
    "end": "978260"
  },
  {
    "text": "that in user data then every boot you can have a fresh instance perfectly",
    "start": "978260",
    "end": "984620"
  },
  {
    "text": "configured every single time and you know with certainty that you can completely replace your inventory any",
    "start": "984620",
    "end": "991400"
  },
  {
    "text": "time you feel like it it's a really comforting feeling so I encourage you to start looking in that direction don't",
    "start": "991400",
    "end": "998240"
  },
  {
    "text": "start with databases or something hard don't start with like container instances or something easy because",
    "start": "998240",
    "end": "1004540"
  },
  {
    "text": "there's technology that makes it easy for you to adopt so on the instances",
    "start": "1004540",
    "end": "1013210"
  },
  {
    "text": "we're going to run tasks in containers so these tasks what are you responsible for you're responsible for the",
    "start": "1013210",
    "end": "1020320"
  },
  {
    "text": "deployment of the tasks describing how they get deployed and then monitoring and availability describing or having",
    "start": "1020320",
    "end": "1026530"
  },
  {
    "text": "knowledge of you know what is important to know that this container is healthy",
    "start": "1026530",
    "end": "1032189"
  },
  {
    "text": "we will take care of scaling will take care of security patching logging will",
    "start": "1032190",
    "end": "1038410"
  },
  {
    "text": "take care of all that stuff for you so let's talk about deployment for a second what are what are your options with ECS",
    "start": "1038410",
    "end": "1046030"
  },
  {
    "text": "for deployment you can start with the console and in fact if you've if you've",
    "start": "1046030",
    "end": "1051340"
  },
  {
    "text": "never used DCs I would encourage you to start with the console the console is a terrific discovery mechanism so",
    "start": "1051340",
    "end": "1059510"
  },
  {
    "text": "start by building a task here launch it out onto a cluster see it see that it's",
    "start": "1059510",
    "end": "1065150"
  },
  {
    "text": "running think about all the choices that you had to make to get it into a working",
    "start": "1065150",
    "end": "1070400"
  },
  {
    "text": "state and then tear it all down and figure out okay now I'm gonna go script",
    "start": "1070400",
    "end": "1075680"
  },
  {
    "text": "this or I'm gonna go automate this and make it you know sort of part of code so",
    "start": "1075680",
    "end": "1081440"
  },
  {
    "text": "that I can hand it out or reuse it so from the console I might you know queue",
    "start": "1081440",
    "end": "1088400"
  },
  {
    "text": "up a task define a task definition and launch it and then from there I'll figure out okay well what do I need to",
    "start": "1088400",
    "end": "1094970"
  },
  {
    "text": "do so in this particular command we're doing ec2 run instances and we're",
    "start": "1094970",
    "end": "1100280"
  },
  {
    "text": "bringing up an ami that is designed for running ECS it already has the ECS agent",
    "start": "1100280",
    "end": "1107900"
  },
  {
    "text": "it's probably one of the official ECS a Mis and then the one piece of config",
    "start": "1107900",
    "end": "1114050"
  },
  {
    "text": "we're passing in is user data ECS cluster equals whatever my cluster",
    "start": "1114050",
    "end": "1120230"
  },
  {
    "text": "name is and we're setting that into the config ECS dot config this is it this is",
    "start": "1120230",
    "end": "1125900"
  },
  {
    "text": "all you have to do to configure an ECS agent the agent itself is a container so",
    "start": "1125900",
    "end": "1131360"
  },
  {
    "text": "you don't even have to really install any any software other than just you",
    "start": "1131360",
    "end": "1136550"
  },
  {
    "text": "know the standard docker pull docker run type stuff and that's done for you if you're using our official AMI now if you",
    "start": "1136550",
    "end": "1143240"
  },
  {
    "text": "want to use your own ami you certainly can add just make sure that it has docker installed on it and running so",
    "start": "1143240",
    "end": "1150730"
  },
  {
    "text": "deployments they should be self-contained a self-contained deployable unit they should be",
    "start": "1150730",
    "end": "1157370"
  },
  {
    "text": "repeatable every time I issue a new deploy I want to make sure that this goes out I want",
    "start": "1157370",
    "end": "1162980"
  },
  {
    "text": "to make sure that it's the same every time they should be auditable and they should be self documenting so it should",
    "start": "1162980",
    "end": "1168230"
  },
  {
    "text": "be really easy for you to see how is this deployed going out so you might include some information like when I",
    "start": "1168230",
    "end": "1175730"
  },
  {
    "text": "deploy my second round of containers I'm going from v1 to v2 should I kill all",
    "start": "1175730",
    "end": "1183050"
  },
  {
    "text": "the v1 containers and then bring up all the v2 containers sometimes yes it",
    "start": "1183050",
    "end": "1188420"
  },
  {
    "text": "sounds brutal you should maybe shouldn't always do that but for example if you're containers are running a kafka consumer",
    "start": "1188420",
    "end": "1195230"
  },
  {
    "text": "yeah you probably should do it that way because Kafka re-balancing behavior",
    "start": "1195230",
    "end": "1200330"
  },
  {
    "text": "doesn't like a whole lot of individual churn if on the other hand you're",
    "start": "1200330",
    "end": "1205679"
  },
  {
    "text": "running a web tier and they're just there's just a bunch of content that's being served out maybe instead you want",
    "start": "1205679",
    "end": "1212460"
  },
  {
    "text": "to bring up all of v2 and then once it's healthy kill off all of v1 and shift",
    "start": "1212460",
    "end": "1218640"
  },
  {
    "text": "traffic over from v1 to v2 that's called a Bluegreen deploy and you",
    "start": "1218640",
    "end": "1223710"
  },
  {
    "text": "have that kind of that kind of mechanism built in to the control plane built into",
    "start": "1223710",
    "end": "1228929"
  },
  {
    "text": "alb so we can work with alb and we can direct traffic as containers get to be",
    "start": "1228929",
    "end": "1235590"
  },
  {
    "text": "healthy direct traffic from old to new and then once we have no more old containers taking traffic we can go",
    "start": "1235590",
    "end": "1242250"
  },
  {
    "text": "ahead and kill them off so",
    "start": "1242250",
    "end": "1247440"
  },
  {
    "text": "infrastructure is code is a practice that I hope you guys are all already",
    "start": "1247440",
    "end": "1252659"
  },
  {
    "text": "following there are probably two super popular languages for this right now if",
    "start": "1252659",
    "end": "1259289"
  },
  {
    "text": "you're in AWS one of them is cloud formation cloud formation is our built-in infrastructure as code language",
    "start": "1259289",
    "end": "1265380"
  },
  {
    "text": "and this is what's on the screen by the way it takes both JSON format and Yama",
    "start": "1265380",
    "end": "1272429"
  },
  {
    "text": "format so you're able to describe the end state of all of your infrastructure",
    "start": "1272429",
    "end": "1278070"
  },
  {
    "text": "starting with blank account I'm gonna need an ECR repository I'm going to need",
    "start": "1278070",
    "end": "1283740"
  },
  {
    "text": "an ECS cluster I'm gonna need this many instances of this ami and so on and so",
    "start": "1283740",
    "end": "1289890"
  },
  {
    "text": "forth including deploy these task definitions you know wire in these load balancers to",
    "start": "1289890",
    "end": "1298110"
  },
  {
    "text": "route traffic and so on and so forth you can have absolutely everything described",
    "start": "1298110",
    "end": "1303330"
  },
  {
    "text": "as a CloudFormation template and then you just open up your brand-new never",
    "start": "1303330",
    "end": "1309480"
  },
  {
    "text": "used account upload cloud formation and everything will be deployed as needed",
    "start": "1309480",
    "end": "1316640"
  },
  {
    "text": "the other language by the way I think Rick alluded to it terraform raise your",
    "start": "1316640",
    "end": "1322950"
  },
  {
    "text": "hand if you're using terraform hmm not as many as I thought but interesting raise your hand if you're",
    "start": "1322950",
    "end": "1328770"
  },
  {
    "text": "using cloud formation all right just about as many maybe more interesting",
    "start": "1328770",
    "end": "1334860"
  },
  {
    "text": "very cool I don't have an opinion one way or another I used I use terraform",
    "start": "1334860",
    "end": "1341100"
  },
  {
    "text": "before I got to AWS and today I still use terraform but I do love cloud",
    "start": "1341100",
    "end": "1347160"
  },
  {
    "text": "formation and I use it for very specific tasks and in fact later in the demo",
    "start": "1347160",
    "end": "1352190"
  },
  {
    "text": "you'll see cloud formation not tear form so this is a cloud formation command AWS",
    "start": "1352190",
    "end": "1360179"
  },
  {
    "text": "CloudFormation create stack in cloud formation the the unit is stack and you",
    "start": "1360179",
    "end": "1366630"
  },
  {
    "text": "can have one stack that describes absolutely everything but if you're you",
    "start": "1366630",
    "end": "1372780"
  },
  {
    "text": "know if you're in the if you're in here you're probably thinking monolith to micro-services you don't want to build a",
    "start": "1372780",
    "end": "1378000"
  },
  {
    "text": "giant monolithic cloud formation stack right you want to actually have stacks that are smaller that you could",
    "start": "1378000",
    "end": "1384929"
  },
  {
    "text": "potentially work on fix replace update and have those not necessarily touch the",
    "start": "1384929",
    "end": "1391740"
  },
  {
    "text": "other stacks so that said you can have multiple stacks and have them all kind",
    "start": "1391740",
    "end": "1398940"
  },
  {
    "text": "of work together so this is creating a stack giving it a name pre prod and then",
    "start": "1398940",
    "end": "1404100"
  },
  {
    "text": "passing in a template file and then when you want to update you simply change the",
    "start": "1404100",
    "end": "1409169"
  },
  {
    "text": "file up make all your changes that you want and then you use update stack and",
    "start": "1409169",
    "end": "1415799"
  },
  {
    "text": "it will take in the file again process what are the differences and then",
    "start": "1415799",
    "end": "1422220"
  },
  {
    "text": "calculate how do I get from A to B how do I get from current state to new",
    "start": "1422220",
    "end": "1428220"
  },
  {
    "text": "desired state and then it will start working with the services and figuring out how to make those changes when you",
    "start": "1428220",
    "end": "1436140"
  },
  {
    "text": "need a new environment you don't have to work through all of your versions of cloud formation you simply take whatever",
    "start": "1436140",
    "end": "1443940"
  },
  {
    "text": "the latest copy of your file is and you run create stack again so you've been",
    "start": "1443940",
    "end": "1448980"
  },
  {
    "text": "iterating in an account and you've done pre prod and you get it to where ok I'm",
    "start": "1448980",
    "end": "1454320"
  },
  {
    "text": "happy with this so now let's build a production one maybe you switch a cow some bring your file over or maybe you",
    "start": "1454320",
    "end": "1461160"
  },
  {
    "text": "do it in the same file and you build everything with a new prefix called production those are you know both good",
    "start": "1461160",
    "end": "1468420"
  },
  {
    "text": "options ECR so how do i define an ECR",
    "start": "1468420",
    "end": "1474840"
  },
  {
    "text": "repository on the left you see JSON on",
    "start": "1474840",
    "end": "1480030"
  },
  {
    "text": "the right you see ya mille these are both doing the same thing i would create",
    "start": "1480030",
    "end": "1486330"
  },
  {
    "text": "from the command line create repository and give it a name but if I'm going to",
    "start": "1486330",
    "end": "1492240"
  },
  {
    "text": "drop something into cloud formation then on the right I would just use this yeah Mille in my cloud formation stack if you",
    "start": "1492240",
    "end": "1502890"
  },
  {
    "text": "need to perform a docker log in AWS ECR get login and I'm actually oh sweet I",
    "start": "1502890",
    "end": "1509310"
  },
  {
    "text": "can change screens I'm gonna do that real quick just so you see I talked",
    "start": "1509310",
    "end": "1518010"
  },
  {
    "text": "about this in my first talk of the day but I didn't demo it so I want you to understand what's happening here",
    "start": "1518010",
    "end": "1524510"
  },
  {
    "text": "aw secr get login is making a call to I am and it's asking for a docker",
    "start": "1524510",
    "end": "1532790"
  },
  {
    "text": "compatible set of credentials and these credentials are going to expire so if I",
    "start": "1532790",
    "end": "1540000"
  },
  {
    "text": "and you know I'm not afraid to leave this on the screen because I'm not showing you the whole thing it's that",
    "start": "1540000",
    "end": "1546390"
  },
  {
    "text": "big so user name is AWS and password just Scrolls for you know a long time",
    "start": "1546390",
    "end": "1554610"
  },
  {
    "text": "right so that's a huge password so if I took this command and just pasted it",
    "start": "1554610",
    "end": "1562200"
  },
  {
    "text": "into my terminal",
    "start": "1562200",
    "end": "1564980"
  },
  {
    "text": "I'm basically just running docker login I am just running docker login so I'm",
    "start": "1568100",
    "end": "1574190"
  },
  {
    "text": "going to login to my registry using a bad password whoops",
    "start": "1574190",
    "end": "1582730"
  },
  {
    "text": "bad demo",
    "start": "1582730",
    "end": "1586179"
  },
  {
    "text": "well pretend that works so the shortcut for doing this is to actually run the",
    "start": "1589350",
    "end": "1595110"
  },
  {
    "text": "command AWS ECR get login",
    "start": "1595110",
    "end": "1599540"
  },
  {
    "text": "that's difficult",
    "start": "1607500",
    "end": "1610549"
  },
  {
    "text": "we open a new terminal",
    "start": "1613540",
    "end": "1616830"
  },
  {
    "text": "and put this whole thing into shell command substitution boom login",
    "start": "1628330",
    "end": "1641740"
  },
  {
    "text": "succeeded so this is why you don't copy/paste things but also this is",
    "start": "1641740",
    "end": "1648100"
  },
  {
    "text": "really handy this is easy to automate and this will log your instance into the",
    "start": "1648100",
    "end": "1655539"
  },
  {
    "text": "ECR registry so you just have this execute I think the expiration is 12 hours so",
    "start": "1655539",
    "end": "1663179"
  },
  {
    "text": "have it execute you know somewhat frequently so that your instances stay",
    "start": "1663179",
    "end": "1668440"
  },
  {
    "text": "logged in but it's a pretty cool pretty handy feature that effectively marries",
    "start": "1668440",
    "end": "1674110"
  },
  {
    "text": "together I am security and docker login security",
    "start": "1674110",
    "end": "1681269"
  },
  {
    "text": "okay so on the CLI if we need to create an ACS cluster create cluster very",
    "start": "1682679",
    "end": "1689470"
  },
  {
    "text": "simple in cloud formation also very simple right it's simply AWS ECS cluster",
    "start": "1689470",
    "end": "1696279"
  },
  {
    "text": "and given a name why aren't why do I not have to decide like what size does the",
    "start": "1696279",
    "end": "1702580"
  },
  {
    "text": "cluster need to be or anything like that anyone have any thoughts on that auto",
    "start": "1702580",
    "end": "1709570"
  },
  {
    "text": "scaling not quite what I'm building is the control plane and with ECS there",
    "start": "1709570",
    "end": "1716320"
  },
  {
    "text": "really aren't any choices for size of control plane it's one control plane for",
    "start": "1716320",
    "end": "1722080"
  },
  {
    "text": "the whole region so you won't outgrow this control plane will see it coming if",
    "start": "1722080",
    "end": "1729159"
  },
  {
    "text": "you decide I need to build you know I need to register a million instances and",
    "start": "1729159",
    "end": "1735519"
  },
  {
    "text": "launch ten million containers that'd be really cool I'd love to talk to you as",
    "start": "1735519",
    "end": "1742210"
  },
  {
    "text": "you do that and kind of watch it happen I've never even been able to do that like I don't have an account with enough",
    "start": "1742210",
    "end": "1747929"
  },
  {
    "text": "overhead that'll let me do that but we'll see that happening and we can size",
    "start": "1747929",
    "end": "1753220"
  },
  {
    "text": "the control plane to handle it and we're doing that for every one of our",
    "start": "1753220",
    "end": "1758260"
  },
  {
    "text": "customers at once not you as a customer or you as a customer or you as a customer we're",
    "start": "1758260",
    "end": "1764610"
  },
  {
    "text": "able to do that because it's a multi-tenant control plane and it's built for the entire region so all",
    "start": "1764610",
    "end": "1770730"
  },
  {
    "text": "you're doing is you're creating off you're carving off your own little space in the control plane and you're saying",
    "start": "1770730",
    "end": "1776760"
  },
  {
    "text": "for my account I'm building a cluster named pre prod and everything that's happening for me",
    "start": "1776760",
    "end": "1783180"
  },
  {
    "text": "is going to happen inside that little that little area of your control plane",
    "start": "1783180",
    "end": "1788210"
  },
  {
    "text": "it's pretty cool so the cluster becomes just a logical construct at that point",
    "start": "1788210",
    "end": "1795030"
  },
  {
    "text": "there's really nothing physical about it unlike say eks where when you provision",
    "start": "1795030",
    "end": "1800550"
  },
  {
    "text": "the control plane we actually bring up instances and we cluster them together and we have you know a database",
    "start": "1800550",
    "end": "1807450"
  },
  {
    "text": "dedicated to you to your control plane that's backing it and all that stuff in ECS none of that happens it's all done",
    "start": "1807450",
    "end": "1814830"
  },
  {
    "text": "for you already so container instances I'm not going to",
    "start": "1814830",
    "end": "1821040"
  },
  {
    "text": "spend a lot of time on this slide because I think I we get to the",
    "start": "1821040",
    "end": "1827160"
  },
  {
    "text": "specifics in the later slides but this is a fun slide to look at because what",
    "start": "1827160",
    "end": "1832320"
  },
  {
    "text": "we're doing is we're looking at the entire traffic flow for a V PC so if you",
    "start": "1832320",
    "end": "1838770"
  },
  {
    "text": "think about I'm running a web application I have customers they're going to hit the internet gateway well I",
    "start": "1838770",
    "end": "1844530"
  },
  {
    "text": "said I was gonna do that right so here we go they're going to hit the internet gateway the internet gateway is going to",
    "start": "1844530",
    "end": "1850680"
  },
  {
    "text": "route their traffic to an Al B and the AL B is going to route the traffic to",
    "start": "1850680",
    "end": "1856920"
  },
  {
    "text": "healthy container instances and those instances are part of an auto scale",
    "start": "1856920",
    "end": "1862230"
  },
  {
    "text": "group so maybe on Black Friday or on",
    "start": "1862230",
    "end": "1867380"
  },
  {
    "text": "some other very high peak day you run a huge sale you might need to add",
    "start": "1867380",
    "end": "1874140"
  },
  {
    "text": "instances because these are part of an auto skill group already it's simply an",
    "start": "1874140",
    "end": "1879180"
  },
  {
    "text": "API call to increment a number you can you know go from 2 to 3 to 5 to 10 and",
    "start": "1879180",
    "end": "1885510"
  },
  {
    "text": "just keep adding instances of either easy two instances to give you resources or",
    "start": "1885510",
    "end": "1891970"
  },
  {
    "text": "containers to respond to the traffic now for outbound communication the container",
    "start": "1891970",
    "end": "1900230"
  },
  {
    "text": "instances when they need to talk out like they're starting up and maybe they need to pull in some data or they need",
    "start": "1900230",
    "end": "1906530"
  },
  {
    "text": "to register with s3 or read some bit of information that",
    "start": "1906530",
    "end": "1912110"
  },
  {
    "text": "traffic goes out through in that gateway and then hits the internet gateway and",
    "start": "1912110",
    "end": "1917360"
  },
  {
    "text": "leaves for the internet so outbound traffic the thing to note here is what",
    "start": "1917360",
    "end": "1924380"
  },
  {
    "text": "we're doing is we're putting all of our workload into a private subnet when we",
    "start": "1924380",
    "end": "1930530"
  },
  {
    "text": "built our VPC we built it with two",
    "start": "1930530",
    "end": "1936380"
  },
  {
    "text": "subnets per availability zone a public subnet and a private subnet everything",
    "start": "1936380",
    "end": "1941630"
  },
  {
    "text": "that goes in the public subnet is something that really AWS manages it's a",
    "start": "1941630",
    "end": "1947180"
  },
  {
    "text": "NAT gateway or it's an application load balancer everything in the private",
    "start": "1947180",
    "end": "1952190"
  },
  {
    "text": "subnet is something where my code is running I don't want that to be publicly",
    "start": "1952190",
    "end": "1957680"
  },
  {
    "text": "exposed except for the one port that I'm expecting to receive traffic on through",
    "start": "1957680",
    "end": "1964340"
  },
  {
    "text": "the application of load balancer so things in this subnet don't get public",
    "start": "1964340",
    "end": "1969770"
  },
  {
    "text": "IP addresses things in this sudden that don't talk directly out so I can't get",
    "start": "1969770",
    "end": "1976040"
  },
  {
    "text": "infected and start listening to some you know worm control plane or something",
    "start": "1976040",
    "end": "1981440"
  },
  {
    "text": "like that because they're talking out through an at gateway instead so the",
    "start": "1981440",
    "end": "1990320"
  },
  {
    "text": "container instances need to log traffic so logging we have built in and cloud",
    "start": "1990320",
    "end": "1996470"
  },
  {
    "text": "watch logs that's certainly a great option for you if you have other logging",
    "start": "1996470",
    "end": "2001510"
  },
  {
    "text": "options maybe you're going to log to log lea or data dog or one of the other",
    "start": "2001510",
    "end": "2007900"
  },
  {
    "text": "logging services i would go out over the internet that gateway out right but for",
    "start": "2007900",
    "end": "2013090"
  },
  {
    "text": "cloud watch logs the container instances are simply going to write directly to",
    "start": "2013090",
    "end": "2018190"
  },
  {
    "text": "cloud watch logs no internet necessary so we have a reference",
    "start": "2018190",
    "end": "2025879"
  },
  {
    "text": "architecture that can help you build all of this and in fact there are templates CloudFormation templates that will build",
    "start": "2025879",
    "end": "2032269"
  },
  {
    "text": "all of this for you that you can just start with so instead of starting from",
    "start": "2032269",
    "end": "2037850"
  },
  {
    "text": "an empty text editor especially when dealing with CloudFormation this is this",
    "start": "2037850",
    "end": "2043850"
  },
  {
    "text": "is a very depressing place to start because there's so much to write start with a template that already exists go",
    "start": "2043850",
    "end": "2051169"
  },
  {
    "text": "to this reference architecture and go from there never start from the beginning so this",
    "start": "2051169",
    "end": "2059450"
  },
  {
    "text": "is where I want to build an application I'm gonna in fact I've already done most",
    "start": "2059450",
    "end": "2065179"
  },
  {
    "text": "of the work here but I want you guys to be able to do this on your own later so I put this application in to workshop",
    "start": "2065179",
    "end": "2073429"
  },
  {
    "text": "format and it's located at ECS workshop comm total sidenote by the way I've also",
    "start": "2073429",
    "end": "2081790"
  },
  {
    "text": "with the help of others built a second workshop for eks at can anyone guess eks",
    "start": "2081790",
    "end": "2090200"
  },
  {
    "text": "workshop comm right so check those out if there's one platform that you're more",
    "start": "2090200",
    "end": "2095388"
  },
  {
    "text": "interested in than the other then focus on that if you don't know about either of them explore both workshops you can",
    "start": "2095389",
    "end": "2102380"
  },
  {
    "text": "run everything you can do you can do in your own account so you're free to just",
    "start": "2102380",
    "end": "2107420"
  },
  {
    "text": "launch whatever there are cleanup steps that will help you delete things out of your account once you're done so if you ever by the",
    "start": "2107420",
    "end": "2116480"
  },
  {
    "text": "way another strategy that I like to employ when doing stuff like this if I have not production stuff in what I",
    "start": "2116480",
    "end": "2124250"
  },
  {
    "text": "account but you know stuff that I want to keep around but I want to do something like this temporary I launch",
    "start": "2124250",
    "end": "2131359"
  },
  {
    "text": "it in its own region so I'll do all of the work for ECS workshop in it you know",
    "start": "2131359",
    "end": "2138200"
  },
  {
    "text": "some region that I never use and by the way did I tell you we just launched a region today so I know no one in here is",
    "start": "2138200",
    "end": "2145640"
  },
  {
    "text": "using the Stockholm region yet so you could potentially run this workshop in the Stockholm region see what it's like",
    "start": "2145640",
    "end": "2152130"
  },
  {
    "text": "and then turn around and clean everything up and and you'll know when everything is gone because there's",
    "start": "2152130",
    "end": "2158370"
  },
  {
    "text": "nothing else left in the region okay so what do we need for production cost",
    "start": "2158370",
    "end": "2163950"
  },
  {
    "text": "optimization actually let me just stop for a second I said I would demo this",
    "start": "2163950",
    "end": "2169020"
  },
  {
    "text": "stuff and then I just breezed right on past that so a TCS workshop we start off",
    "start": "2169020",
    "end": "2177260"
  },
  {
    "text": "with the notion of I need to deploy an application or a set of applications and",
    "start": "2177260",
    "end": "2184950"
  },
  {
    "text": "it's very common to deploy a front-end and then that front-end very often will",
    "start": "2184950",
    "end": "2191280"
  },
  {
    "text": "have a couple of back-end api's that it needs to talk to so what we did is we",
    "start": "2191280",
    "end": "2197070"
  },
  {
    "text": "just wrote a front-end that talks to a couple of backends and we did that using",
    "start": "2197070",
    "end": "2202440"
  },
  {
    "text": "three different languages because it's a it's good to show examples of being able",
    "start": "2202440",
    "end": "2208050"
  },
  {
    "text": "to containerize basically anything so the front-end is a rails out in the",
    "start": "2208050",
    "end": "2213180"
  },
  {
    "text": "backend one of the backends is a node.js app and then the third one is a crystal app anyone ever heard of crystal Lang",
    "start": "2213180",
    "end": "2221420"
  },
  {
    "text": "one hand that's amazing I had never heard of it until I wrote this I was you",
    "start": "2221420",
    "end": "2228090"
  },
  {
    "text": "know trying to think of what's another cool language besides go besides rust because those are also",
    "start": "2228090",
    "end": "2234810"
  },
  {
    "text": "buzzy these days and so I started looking around and I found crystal it's",
    "start": "2234810",
    "end": "2239910"
  },
  {
    "text": "actually like a it's like combining Ruby and go together you you can compile it",
    "start": "2239910",
    "end": "2246240"
  },
  {
    "text": "like go but it has a syntax that looks like Ruby so if you know Ruby it's",
    "start": "2246240",
    "end": "2251370"
  },
  {
    "text": "really easy to start doing things and go and you end up with a deployable single",
    "start": "2251370",
    "end": "2257700"
  },
  {
    "text": "artifact binary that's very small and lightweight and fast so unlike Ruby it's fast so anyway it's",
    "start": "2257700",
    "end": "2266820"
  },
  {
    "text": "pretty cool so in this workshop you simply build out the platform and this",
    "start": "2266820",
    "end": "2274350"
  },
  {
    "text": "is using a tool but the tool generates CloudFormation so if I do this real",
    "start": "2274350",
    "end": "2281940"
  },
  {
    "text": "quick I have the platform repository checked out in environment",
    "start": "2281940",
    "end": "2288650"
  },
  {
    "text": "ECS ECS demo platform all I've done is",
    "start": "2288650",
    "end": "2300360"
  },
  {
    "text": "defined again I'm using a tool mu Hamel",
    "start": "2300360",
    "end": "2305660"
  },
  {
    "text": "or mu and mu has a config mu dot Y Amal the reason I'm using this is because I",
    "start": "2305660",
    "end": "2314000"
  },
  {
    "text": "you know we can slide if I we can tell you what the the best practices",
    "start": "2314000",
    "end": "2321000"
  },
  {
    "text": "architecture is we there have been enough customers run containers in production now that it's become a",
    "start": "2321000",
    "end": "2328710"
  },
  {
    "text": "standard pattern that's repeatable so why should it be up to you to write",
    "start": "2328710",
    "end": "2334980"
  },
  {
    "text": "CloudFormation from scratch why should it be up to any of us anymore to write that from scratch this is all",
    "start": "2334980",
    "end": "2341100"
  },
  {
    "text": "boilerplate at this point right so let's have a tool that generates it so that's what mu decided to do it came along and",
    "start": "2341100",
    "end": "2349260"
  },
  {
    "text": "it said okay let's just generate all the boilerplate and then for anything where",
    "start": "2349260",
    "end": "2354930"
  },
  {
    "text": "you know there is a business reason for you to make choice a versus choice B put",
    "start": "2354930",
    "end": "2360390"
  },
  {
    "text": "that in the config so like the name of your cluster that's a good choice so we'll name it acceptance or will name it",
    "start": "2360390",
    "end": "2366720"
  },
  {
    "text": "production but other than that everything is just boilerplate so if I",
    "start": "2366720",
    "end": "2374610"
  },
  {
    "text": "do a dry run what is this going to do",
    "start": "2374610",
    "end": "2380790"
  },
  {
    "text": "it's just outputting cloud formation so",
    "start": "2380790",
    "end": "2386430"
  },
  {
    "text": "I can look at this and see what would it build for me and let's actually take a look at some of the files template VPC",
    "start": "2386430",
    "end": "2398030"
  },
  {
    "text": "acceptance so I can does this look familiar by the way this is just like",
    "start": "2398030",
    "end": "2403470"
  },
  {
    "text": "what we were seeing on some of the slides it's building seven it's building a V PC it's allocating IP space",
    "start": "2403470",
    "end": "2413010"
  },
  {
    "text": "in you know for each of the availability zones its carving up the subnet",
    "start": "2413010",
    "end": "2418520"
  },
  {
    "text": "appropriately and so on and so forth and so on and so forth to the tune of 750",
    "start": "2418520",
    "end": "2428970"
  },
  {
    "text": "two lines of CloudFormation that I didn't have to write and any of this that I want to customize I'm still able",
    "start": "2428970",
    "end": "2435480"
  },
  {
    "text": "to customize but then I'm only writing the cloud formation that is mine that's custom and the rest of it stays",
    "start": "2435480",
    "end": "2441990"
  },
  {
    "text": "boilerplate so anyway I love this tool for this very reason it turned it will",
    "start": "2441990",
    "end": "2448710"
  },
  {
    "text": "then deploy the cloud formation for me so the only thing that it does is it writes to the cloud formation API so I",
    "start": "2448710",
    "end": "2456930"
  },
  {
    "text": "can walk away from this at any point and just start using the cloud formation myself if I take a look at the cloud",
    "start": "2456930",
    "end": "2465210"
  },
  {
    "text": "formation console one second",
    "start": "2465210",
    "end": "2471890"
  },
  {
    "text": "so I was looking at the VPC",
    "start": "2482890",
    "end": "2487710"
  },
  {
    "text": "CloudFormation stack on acceptance",
    "start": "2489090",
    "end": "2494070"
  },
  {
    "text": "there's VPC acceptance and this is",
    "start": "2494490",
    "end": "2500560"
  },
  {
    "text": "everything that was built for me that I didn't have to do myself all from that",
    "start": "2500560",
    "end": "2506940"
  },
  {
    "text": "two or four line config file all from that cloud formation that was",
    "start": "2506940",
    "end": "2512890"
  },
  {
    "text": "boilerplate that it generated for me it's pretty cool so from there we would so we have a cluster built we have a V",
    "start": "2512890",
    "end": "2520240"
  },
  {
    "text": "PC built we actually end up building two clusters best practices would say to",
    "start": "2520240",
    "end": "2528520"
  },
  {
    "text": "build a cluster for acceptance and then a cluster for production right does",
    "start": "2528520",
    "end": "2534610"
  },
  {
    "text": "everyone do that today you deploy something to acceptance and then you look at it and you sign off and you say",
    "start": "2534610",
    "end": "2541090"
  },
  {
    "text": "okay go to production that's a really good good way to do things and in fact",
    "start": "2541090",
    "end": "2546880"
  },
  {
    "text": "it's a good best practice to follow what else is a good best practice see ICD",
    "start": "2546880",
    "end": "2552310"
  },
  {
    "text": "everyone do see ICD today is it's okay to raise your hand on this one do you",
    "start": "2552310",
    "end": "2558490"
  },
  {
    "text": "wish you could be doing C ICD today I see some hands nice so this will",
    "start": "2558490",
    "end": "2564880"
  },
  {
    "text": "actually build a C ICD platform for you because that's the best practice right so it uses code pipeline so if we take a",
    "start": "2564880",
    "end": "2576730"
  },
  {
    "text": "look at code pipeline and just look at all my pipelines oops",
    "start": "2576730",
    "end": "2583620"
  },
  {
    "text": "code pipeline here are all of my pipelines that it",
    "start": "2583620",
    "end": "2589560"
  },
  {
    "text": "builds so for each of the services that I deploy it builds a code pipeline and",
    "start": "2589560",
    "end": "2594750"
  },
  {
    "text": "the pipeline starts with checking out the code from github so I have and in",
    "start": "2594750",
    "end": "2602280"
  },
  {
    "text": "the workshop you'll do this you'll fork each of those repos into your own github account and then you'll bill it will",
    "start": "2602280",
    "end": "2609450"
  },
  {
    "text": "build for you a code pipeline that starts with your github account these these repos check out the code then move",
    "start": "2609450",
    "end": "2619260"
  },
  {
    "text": "on to build an artifact out of that code containerize that artifact deploy it to",
    "start": "2619260",
    "end": "2626310"
  },
  {
    "text": "the acceptance ECS cluster and by the way we're doing this on Fargate so you don't even have",
    "start": "2626310",
    "end": "2632880"
  },
  {
    "text": "to worry about managing the instances in that ECS cluster there are no instances",
    "start": "2632880",
    "end": "2638599"
  },
  {
    "text": "then we test and this test is really simple but we do test to see that the",
    "start": "2638599",
    "end": "2644190"
  },
  {
    "text": "code was built or deployed successfully and is running successfully and then we sit here and we wait is it okay to move",
    "start": "2644190",
    "end": "2653250"
  },
  {
    "text": "on to production and I can issue a review and say yeah looks good to me and",
    "start": "2653250",
    "end": "2660210"
  },
  {
    "text": "approve and now this code deploy will deploy on to our production cluster so",
    "start": "2660210",
    "end": "2667950"
  },
  {
    "text": "this is a really good really easy pattern to follow and it's very",
    "start": "2667950",
    "end": "2673800"
  },
  {
    "text": "repeatable because it's all boilerplate these days so definitely check out the",
    "start": "2673800",
    "end": "2680099"
  },
  {
    "text": "workshop run it in your own account use it just as an idea you know like just",
    "start": "2680099",
    "end": "2685380"
  },
  {
    "text": "okay this is this is what I eventually want to get to and then if you think about it you can take this pattern and",
    "start": "2685380",
    "end": "2691890"
  },
  {
    "text": "just keep repeating it over and over and over again we're doing it for three services but it could just as easily be",
    "start": "2691890",
    "end": "2698069"
  },
  {
    "text": "three hundred services or it could be three thousand services it wouldn't really matter so definitely check this",
    "start": "2698069",
    "end": "2704400"
  },
  {
    "text": "out how much time do we have we're doing",
    "start": "2704400",
    "end": "2710760"
  },
  {
    "text": "pretty good okay so what else would there be to do so once you get your service running",
    "start": "2710760",
    "end": "2716069"
  },
  {
    "text": "you're happy you have a good CI CD workflow you're deploying code you're able to",
    "start": "2716069",
    "end": "2721799"
  },
  {
    "text": "experiment and get stuff out and potentially reject it or or iterate on",
    "start": "2721799",
    "end": "2727420"
  },
  {
    "text": "it and move it forward into production that's a really healthy position to be in so what what do you do then well",
    "start": "2727420",
    "end": "2734740"
  },
  {
    "text": "that's when you get to do some of the fun stuff so the fun stuff is like how",
    "start": "2734740",
    "end": "2739869"
  },
  {
    "text": "can i optimize I love optimization and really of any kind but cost optimization",
    "start": "2739869",
    "end": "2745480"
  },
  {
    "text": "I really geeked out over at my last startup and one of the things that we",
    "start": "2745480",
    "end": "2751210"
  },
  {
    "text": "ended up doing is we actually deployed completely everything on two spot",
    "start": "2751210",
    "end": "2757000"
  },
  {
    "text": "instances does everyone know that well does anyone know what a spot instance is",
    "start": "2757000",
    "end": "2762990"
  },
  {
    "text": "anyone feel like telling me what a spot instance is no brave yes no no okay",
    "start": "2762990",
    "end": "2772420"
  },
  {
    "text": "no brave souls want to describe spot spot is a way of saving money on your",
    "start": "2772420",
    "end": "2778569"
  },
  {
    "text": "instances by allowing us to provision those instances out of our excess",
    "start": "2778569",
    "end": "2784450"
  },
  {
    "text": "capacity I'll get into a description offline if it about how the the bidding",
    "start": "2784450",
    "end": "2791380"
  },
  {
    "text": "works and how the market works but effectively you could see up to a 90",
    "start": "2791380",
    "end": "2797049"
  },
  {
    "text": "percent savings on your on your ec2 bill think about that for a second 90% off",
    "start": "2797049",
    "end": "2804099"
  },
  {
    "text": "not ten percent off 90 percent left it's 90 percent off up to so that's really",
    "start": "2804099",
    "end": "2811000"
  },
  {
    "text": "cool so we actually deployed at my last company all of our infrastructure on to spot instances and we were able to cut",
    "start": "2811000",
    "end": "2818230"
  },
  {
    "text": "our bill very significantly which if any of you guys work at a start-up you know that having you know the smallest cost",
    "start": "2818230",
    "end": "2826750"
  },
  {
    "text": "possible means that you have the longest runway possible so that's a really good",
    "start": "2826750",
    "end": "2832059"
  },
  {
    "text": "thing to do there's also reserved instances maybe you're you're not quite as you know risky feeling as as I was",
    "start": "2832059",
    "end": "2840190"
  },
  {
    "text": "and so you want to potentially you know save some money but have you know a",
    "start": "2840190",
    "end": "2846670"
  },
  {
    "text": "guarantee that you will always have these in is available that's what reserved instances can do and you can see up to a",
    "start": "2846670",
    "end": "2854019"
  },
  {
    "text": "75% savings more common to be you know around the 50% savings the the risk here",
    "start": "2854019",
    "end": "2861859"
  },
  {
    "text": "is that your pre committing to a certain amount of capacity for a length of time",
    "start": "2861859",
    "end": "2868309"
  },
  {
    "text": "and that length of time is as short as one year - as long as three years so if",
    "start": "2868309",
    "end": "2874130"
  },
  {
    "text": "you can pre commit and the biggest savings comes when you then also prepay",
    "start": "2874130",
    "end": "2879680"
  },
  {
    "text": "up front all of the money for the next three years then we'll give you the",
    "start": "2879680",
    "end": "2884989"
  },
  {
    "text": "biggest discounts so you can do that now what some customers have done at",
    "start": "2884989",
    "end": "2890720"
  },
  {
    "text": "reinvents I gave a talk alongside duolingo the chief architect of duolingo",
    "start": "2890720",
    "end": "2896150"
  },
  {
    "text": "and he described their situation as being a combination of all three",
    "start": "2896150",
    "end": "2901549"
  },
  {
    "text": "instance types they have a base layer of spa reserved instances they know you",
    "start": "2901549",
    "end": "2908749"
  },
  {
    "text": "know based on their history history they're always going to need a certain amount of capacity no matter what and",
    "start": "2908749",
    "end": "2914869"
  },
  {
    "text": "they want that capacity to be at a discount so they've pre committed to a certain amount of time and they're",
    "start": "2914869",
    "end": "2920359"
  },
  {
    "text": "getting a discount on those instances then as they start to burst they know",
    "start": "2920359",
    "end": "2925910"
  },
  {
    "text": "what their typical patterns are and so they can predict what their burst should",
    "start": "2925910",
    "end": "2931729"
  },
  {
    "text": "be and they burst into on-demand and burst into spots so when they really",
    "start": "2931729",
    "end": "2939259"
  },
  {
    "text": "need a burst they burst into spot but there is he showed a graph he had all",
    "start": "2939259",
    "end": "2944690"
  },
  {
    "text": "this graphed out it was really cool there were a few hours each morning it looked like where they would have just a",
    "start": "2944690",
    "end": "2950809"
  },
  {
    "text": "thin layer of on demand so they're paying the most for the fewest number of instances and they're getting a huge",
    "start": "2950809",
    "end": "2957499"
  },
  {
    "text": "discount for their burst capacity and then for their base layer of capacity they're getting a smaller discount but",
    "start": "2957499",
    "end": "2963859"
  },
  {
    "text": "still a discount that was a really cool way to do it - you can have multiple ECS",
    "start": "2963859",
    "end": "2971329"
  },
  {
    "text": "clusters as I've alluded to you can again an ECS cluster is a logical",
    "start": "2971329",
    "end": "2977450"
  },
  {
    "text": "construct so you can really have as many as you want you can use them as an isolation boundary and you can deploy containers",
    "start": "2977450",
    "end": "2984820"
  },
  {
    "text": "out on to them as needed so you might have a development cluster and a production cluster or you might have a",
    "start": "2984820",
    "end": "2991480"
  },
  {
    "text": "batch processing cluster or you might build a cluster per team so at my last",
    "start": "2991480",
    "end": "2996609"
  },
  {
    "text": "company we actually built every developer had their own cluster so as",
    "start": "2996609",
    "end": "3001830"
  },
  {
    "text": "they would come on board it was really simple to say okay you know instead of it instead of describing to them how",
    "start": "3001830",
    "end": "3008580"
  },
  {
    "text": "they needed to set up their development environment what libraries they needed to install and all that stuff we gave",
    "start": "3008580",
    "end": "3014580"
  },
  {
    "text": "them a cloud9 editor and a cluster and it was pre provisioned for them they had",
    "start": "3014580",
    "end": "3020310"
  },
  {
    "text": "to have all the services that we run on that cluster and then any service that",
    "start": "3020310",
    "end": "3025890"
  },
  {
    "text": "they decided to branch it would pen their branch name to their cluster so",
    "start": "3025890",
    "end": "3032880"
  },
  {
    "text": "that it would continuous deploy any code that they've committed any code they've changed but otherwise everything all the",
    "start": "3032880",
    "end": "3039720"
  },
  {
    "text": "other services were running off of master running off the production code so they could see how does how does mine",
    "start": "3039720",
    "end": "3046109"
  },
  {
    "text": "how's my code interacting with the rest of the service it's pretty cool scaling",
    "start": "3046109",
    "end": "3054270"
  },
  {
    "text": "this is another area where you can start to iterate start to make improvements Auto scale groups they not only exist",
    "start": "3054270",
    "end": "3060690"
  },
  {
    "text": "for instances but they also exist for tasks so we're able to actually schedule",
    "start": "3060690",
    "end": "3067140"
  },
  {
    "text": "and increase or decrease scale up or scale down the number of tasks that are",
    "start": "3067140",
    "end": "3072720"
  },
  {
    "text": "running out on a cluster and we can do that based on cloud watch alarms so",
    "start": "3072720",
    "end": "3078800"
  },
  {
    "text": "anything that you can define as a cloud watch alarm you can then use to auto",
    "start": "3078800",
    "end": "3083940"
  },
  {
    "text": "scale your cluster so in this example memory above 75 percent if the cluster",
    "start": "3083940",
    "end": "3090450"
  },
  {
    "text": "reservation goes over 75 percent that means that we're probably running out of instances and we would like to have more",
    "start": "3090450",
    "end": "3096750"
  },
  {
    "text": "so add more instances then the opposite might you might want to do where I don't",
    "start": "3096750",
    "end": "3103740"
  },
  {
    "text": "have the opposite I thought I had a slide for that where if it goes below 40 percent scale in",
    "start": "3103740",
    "end": "3110580"
  },
  {
    "text": "take take away some instances so that I don't have to pay for those anymore so",
    "start": "3110580",
    "end": "3116250"
  },
  {
    "text": "you can you can do all kinds of cool stuff like that a service auto-scaling you can again define service",
    "start": "3116250",
    "end": "3123990"
  },
  {
    "text": "auto-scaling and have that be alarm based as well so cpu utilization is a",
    "start": "3123990",
    "end": "3129690"
  },
  {
    "text": "very common metric to auto scale your service against once I've seen so much",
    "start": "3129690",
    "end": "3135420"
  },
  {
    "text": "traffic that my container is maxed out on its CPU or approaching it add more",
    "start": "3135420",
    "end": "3141830"
  },
  {
    "text": "start to distribute that traffic among more containers more containers more containers and try and keep the CPU",
    "start": "3141830",
    "end": "3149610"
  },
  {
    "text": "utilization two kind of a middle tier",
    "start": "3149610",
    "end": "3155150"
  },
  {
    "text": "this is where you define the alarm name that you would set for that CPU",
    "start": "3155750",
    "end": "3161190"
  },
  {
    "text": "utilization is the is the service metric and then if the average is greater than",
    "start": "3161190",
    "end": "3167610"
  },
  {
    "text": "or equal to 50% for one consecutive period of five minutes scale-up so it's",
    "start": "3167610",
    "end": "3175230"
  },
  {
    "text": "really simple all these little controls that you have built right into the control plane and you just that you just",
    "start": "3175230",
    "end": "3181110"
  },
  {
    "text": "bring your logic and we will figure out how to make this happen for you security",
    "start": "3181110",
    "end": "3188520"
  },
  {
    "text": "so we talked about security security is a huge area for us and in fact because",
    "start": "3188520",
    "end": "3196500"
  },
  {
    "text": "of that we the next talk is actually about container security so I won't spend a lot of time here on it because",
    "start": "3196500",
    "end": "3203280"
  },
  {
    "text": "we're going to spend almost a whole hour on it coming up but some things that you",
    "start": "3203280",
    "end": "3208830"
  },
  {
    "text": "should keep in mind patching your ECS container instances we try to make it easy for you to understand when there is",
    "start": "3208830",
    "end": "3215550"
  },
  {
    "text": "a new official ami available and we publish that on an SNS topic so I would",
    "start": "3215550",
    "end": "3221010"
  },
  {
    "text": "build CloudFormation or I would build automation around updating a cloud",
    "start": "3221010",
    "end": "3226080"
  },
  {
    "text": "formation template for that patching your containers this is kind of a",
    "start": "3226080",
    "end": "3231630"
  },
  {
    "text": "workflow that I want you to understand both in this talk and for the next talk",
    "start": "3231630",
    "end": "3237210"
  },
  {
    "text": "because this is really what we're going to be looking at this is a CI CD container scanning",
    "start": "3237210",
    "end": "3243110"
  },
  {
    "text": "workflow so a dev would be working on some code they would commit that code",
    "start": "3243110",
    "end": "3249380"
  },
  {
    "text": "and that code would go into the CI CD process right so your CI tool jenkins in",
    "start": "3249380",
    "end": "3257360"
  },
  {
    "text": "this particular example would kick off a scan in this case it's using twistlock",
    "start": "3257360",
    "end": "3265100"
  },
  {
    "text": "we're going to scan the container looking for any kind of vulnerabilities",
    "start": "3265100",
    "end": "3270380"
  },
  {
    "text": "and then we're going to report back you know good to go or bad let's fail the CI",
    "start": "3270380",
    "end": "3278930"
  },
  {
    "text": "process so in the next talk we're going to do something very similar to this but",
    "start": "3278930",
    "end": "3284630"
  },
  {
    "text": "we're going to use two scanners we're gonna use aqua set or no we're gonna use claire an open source scanner and angkor",
    "start": "3284630",
    "end": "3292340"
  },
  {
    "text": "another open source scanner and we're going to actually build some containers",
    "start": "3292340",
    "end": "3297740"
  },
  {
    "text": "and scan them another thing to do with containers is to build a minimal",
    "start": "3297740",
    "end": "3304970"
  },
  {
    "text": "container so this is an example of a scratch container does everyone who can",
    "start": "3304970",
    "end": "3311090"
  },
  {
    "text": "tell me what is a scratch container yes",
    "start": "3311090",
    "end": "3316340"
  },
  {
    "text": "he said and accurately so it's an empty docker image so we're starting at",
    "start": "3316340",
    "end": "3321500"
  },
  {
    "text": "nothing and this is really a great place to start from from a security perspective because we only want to put",
    "start": "3321500",
    "end": "3328250"
  },
  {
    "text": "into a container what we plan to use this is really easy to do when you're",
    "start": "3328250",
    "end": "3333920"
  },
  {
    "text": "using languages like go or C where you can statically compile all of your dependencies into a single artifact but",
    "start": "3333920",
    "end": "3341750"
  },
  {
    "text": "you aren't limited to those so we're gonna take a look in the next session at",
    "start": "3341750",
    "end": "3346760"
  },
  {
    "text": "some other options beyond scratch that you could still do to hopefully minimize",
    "start": "3346760",
    "end": "3352430"
  },
  {
    "text": "your container footprint the other thing we're doing here is we are adding an",
    "start": "3352430",
    "end": "3358330"
  },
  {
    "text": "unprivileged user and then setting that user to be used for the rest of the",
    "start": "3358330",
    "end": "3364250"
  },
  {
    "text": "container build process so when we run this application we're not running it as root we're running it as a regular old",
    "start": "3364250",
    "end": "3371600"
  },
  {
    "text": "user this is a good option to do as well that way if there's a buffer overflow and you",
    "start": "3371600",
    "end": "3379370"
  },
  {
    "text": "know somebody gains access to the system under this process environment they'll",
    "start": "3379370",
    "end": "3384950"
  },
  {
    "text": "only be a regular user they won't be route I am rolls this is again a first-party",
    "start": "3384950",
    "end": "3393080"
  },
  {
    "text": "integration with ECS where you can attach an iam roll directly to a task",
    "start": "3393080",
    "end": "3398930"
  },
  {
    "text": "definition so one of you know you can imagine if I'm an attacker and I've",
    "start": "3398930",
    "end": "3403940"
  },
  {
    "text": "compromised a container and I discover hey I'm running in AWS I might want to",
    "start": "3403940",
    "end": "3408950"
  },
  {
    "text": "start spinning up bit mining rigs right Bitcoin mining rigs that's actually",
    "start": "3408950",
    "end": "3414080"
  },
  {
    "text": "pretty common so what can you do to prevent that well if we attach an iamb",
    "start": "3414080",
    "end": "3421310"
  },
  {
    "text": "role to the container that does not allow launching ec2 instances for",
    "start": "3421310",
    "end": "3426590"
  },
  {
    "text": "example no launching Bitcoin miners if",
    "start": "3426590",
    "end": "3432170"
  },
  {
    "text": "it allows launching other containers then maybe as a hacker I would try okay",
    "start": "3432170",
    "end": "3437780"
  },
  {
    "text": "I can't launch an instance but I can launch you know a ton of containers so let me try doing that but why would a",
    "start": "3437780",
    "end": "3443930"
  },
  {
    "text": "container ever need to launch other containers right that's a very special circumstance so an ordinary circumstance",
    "start": "3443930",
    "end": "3450890"
  },
  {
    "text": "that probably wouldn't happen so don't allow that in your I am role but what do you need to allow maybe you're an API",
    "start": "3450890",
    "end": "3458660"
  },
  {
    "text": "and you need to talk to a database and you can do that over I am or maybe you need to read some data out of an s3",
    "start": "3458660",
    "end": "3464810"
  },
  {
    "text": "bucket so I can grant that kind of access read-only access to an s3 bucket",
    "start": "3464810",
    "end": "3470120"
  },
  {
    "text": "a specific s3 bucket so these are all things that I can grant privileges to on",
    "start": "3470120",
    "end": "3475850"
  },
  {
    "text": "a case-by-case basis but leave out absolutely everything else and that way",
    "start": "3475850",
    "end": "3482060"
  },
  {
    "text": "even if my container gets compromised there's not a lot that the container",
    "start": "3482060",
    "end": "3488000"
  },
  {
    "text": "would be able to do excuse me monitoring logging you can monitor with cloud watch",
    "start": "3488000",
    "end": "3497300"
  },
  {
    "text": "and in fact we have built into ECS the ability to with one law",
    "start": "3497300",
    "end": "3502830"
  },
  {
    "text": "your task definition ship all of your logs - cloud watch logs you also have monitoring of your",
    "start": "3502830",
    "end": "3509930"
  },
  {
    "text": "containers simply in CLOB watch so you can see CPU utilization memory",
    "start": "3509930",
    "end": "3516000"
  },
  {
    "text": "utilization etc and you can have all of that graphed out and available to you",
    "start": "3516000",
    "end": "3521180"
  },
  {
    "text": "you know just with the direct integration here we're looking at CPU",
    "start": "3521180",
    "end": "3527550"
  },
  {
    "text": "utilization and corresponding 500 request counts so 500 if you don't know",
    "start": "3527550",
    "end": "3534180"
  },
  {
    "text": "is in generic HTTP error so for if I'm serving out 500s there's a problem most",
    "start": "3534180",
    "end": "3541980"
  },
  {
    "text": "likely and if I'm seeing you know that hey I'm also hitting really high CPU",
    "start": "3541980",
    "end": "3548310"
  },
  {
    "text": "utilization there could be something in my code that's either not responding fast enough or responding with some kind",
    "start": "3548310",
    "end": "3555270"
  },
  {
    "text": "of error that's causing me to serve out 500s so it's good to sometimes you know",
    "start": "3555270",
    "end": "3560930"
  },
  {
    "text": "correlate those two things together and see you know is one causing the other we",
    "start": "3560930",
    "end": "3568350"
  },
  {
    "text": "also some customers actually like using external monitoring external monitoring",
    "start": "3568350",
    "end": "3573840"
  },
  {
    "text": "services Prometheus is a great open source project it's very popular for",
    "start": "3573840",
    "end": "3579180"
  },
  {
    "text": "kubernetes users by the way so if you're a kubernetes shop but you're exploring",
    "start": "3579180",
    "end": "3584670"
  },
  {
    "text": "ECS there's actually a Promethean ECS exporter that will take metrics and",
    "start": "3584670",
    "end": "3592050"
  },
  {
    "text": "stuff out of ECS and export them into kubernetes so you can put all of those",
    "start": "3592050",
    "end": "3597330"
  },
  {
    "text": "things together and it's an open source project that you can run I said logging",
    "start": "3597330",
    "end": "3606000"
  },
  {
    "text": "a minute ago here's the logging slide one line oh yeah I can't highlight I'm",
    "start": "3606000",
    "end": "3612510"
  },
  {
    "text": "used to highlighting one line log driver AWS logs and then a little bit of config",
    "start": "3612510",
    "end": "3618450"
  },
  {
    "text": "options for it log group engine X region US east one and now standard out in",
    "start": "3618450",
    "end": "3624060"
  },
  {
    "text": "standard error for this container will automatically be shipped out using cloud",
    "start": "3624060",
    "end": "3630360"
  },
  {
    "text": "much logs instead of AWS logs if you",
    "start": "3630360",
    "end": "3635640"
  },
  {
    "text": "would rather use fluent D journal de JSON files Splunk syslog just drop that word in probably",
    "start": "3635640",
    "end": "3643950"
  },
  {
    "text": "slightly different config but as simple as that and all of a sudden you're",
    "start": "3643950",
    "end": "3649200"
  },
  {
    "text": "shipping logs to those destinations instead so it's really cool really simple and less for you to have to worry",
    "start": "3649200",
    "end": "3657480"
  },
  {
    "text": "about this is an old screenshot of what cloud watch logs looks like let's take a",
    "start": "3657480",
    "end": "3663420"
  },
  {
    "text": "look cloud watch",
    "start": "3663420",
    "end": "3668270"
  },
  {
    "text": "the Wi-Fi here is not spectacular all",
    "start": "3679410",
    "end": "3687310"
  },
  {
    "text": "right we'll come back metric filters this is something that we added to cloud",
    "start": "3687310",
    "end": "3692980"
  },
  {
    "text": "watch kind of recently we're actually able to do we're actually able to pull",
    "start": "3692980",
    "end": "3698410"
  },
  {
    "text": "out fields from your logs and filter on them and also now not on the slide",
    "start": "3698410",
    "end": "3704320"
  },
  {
    "text": "perform calculations on them so you can for example try and figure out an",
    "start": "3704320",
    "end": "3709840"
  },
  {
    "text": "overall average rate of 500 errors just based on logs that are flying by that",
    "start": "3709840",
    "end": "3716200"
  },
  {
    "text": "include 500 in the error field of their log line so you can see oh I'm getting a",
    "start": "3716200",
    "end": "3723490"
  },
  {
    "text": "whole bunch I'm getting you know 10 per second or a million per second and then",
    "start": "3723490",
    "end": "3729220"
  },
  {
    "text": "you can trigger actions based on that using cloud watch alarms so logs front",
    "start": "3729220",
    "end": "3739210"
  },
  {
    "text": "end",
    "start": "3739210",
    "end": "3741420"
  },
  {
    "text": "bad",
    "start": "3748030",
    "end": "3751030"
  },
  {
    "text": "I'm trying to find a log stream that might actually have some stuff in it and",
    "start": "3755380",
    "end": "3761980"
  },
  {
    "text": "then let's figure out how to scroll so you can see it it's the resolution of",
    "start": "3761980",
    "end": "3771590"
  },
  {
    "text": "the purge oh let me see get rid of that so here you go you can see that I'm just",
    "start": "3771590",
    "end": "3776930"
  },
  {
    "text": "you know automatically integrated I'm getting log information directly into",
    "start": "3776930",
    "end": "3783290"
  },
  {
    "text": "cloud watch logs last a little bit I'm",
    "start": "3783290",
    "end": "3788900"
  },
  {
    "text": "over sorry about that everything about everything ECS related we have an awesome ECS page put out by",
    "start": "3788900",
    "end": "3795260"
  },
  {
    "text": "my coworker Nathan Peck on github definitely check it out if you find",
    "start": "3795260",
    "end": "3800510"
  },
  {
    "text": "resources that are cool ECS related fork it and open a pull request and add them",
    "start": "3800510",
    "end": "3806990"
  },
  {
    "text": "to this page thank you guys very much we'll take a very short break and then",
    "start": "3806990",
    "end": "3812750"
  },
  {
    "text": "we'll start in with the next chapter [Music]",
    "start": "3812750",
    "end": "3820780"
  },
  {
    "text": "you",
    "start": "3824700",
    "end": "3826760"
  }
]