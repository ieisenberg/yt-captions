[
  {
    "text": "hi my name's James Bezeq I'm a senior",
    "start": "6860",
    "end": "9650"
  },
  {
    "text": "developer advocate here at AWS servers",
    "start": "9650",
    "end": "12110"
  },
  {
    "text": "and today I'm going to show you how to",
    "start": "12110",
    "end": "14389"
  },
  {
    "text": "get started with Amazon event bridge",
    "start": "14389",
    "end": "16599"
  },
  {
    "text": "this is Amazon event bridge a server les",
    "start": "16599",
    "end": "19580"
  },
  {
    "text": "event bus service it helps you ingest",
    "start": "19580",
    "end": "22040"
  },
  {
    "text": "and route events from SAS applications",
    "start": "22040",
    "end": "24050"
  },
  {
    "text": "AWS services and your own systems some",
    "start": "24050",
    "end": "28820"
  },
  {
    "text": "of the more notable features include the",
    "start": "28820",
    "end": "30380"
  },
  {
    "text": "fact that it's serverless so there's no",
    "start": "30380",
    "end": "32390"
  },
  {
    "text": "infrastructure to manage or provision",
    "start": "32390",
    "end": "34059"
  },
  {
    "text": "scaling is handled for you and you only",
    "start": "34059",
    "end": "36290"
  },
  {
    "text": "pay for what you use it offers native",
    "start": "36290",
    "end": "38900"
  },
  {
    "text": "integration with 21 SAS providers with",
    "start": "38900",
    "end": "41390"
  },
  {
    "text": "more to come traffic travels internally",
    "start": "41390",
    "end": "44030"
  },
  {
    "text": "within the AWS infrastructure when you",
    "start": "44030",
    "end": "46040"
  },
  {
    "text": "connect with SAS providers instead of",
    "start": "46040",
    "end": "47750"
  },
  {
    "text": "the public Internet it integrates with",
    "start": "47750",
    "end": "50330"
  },
  {
    "text": "over 90 AWS services as sources and 17",
    "start": "50330",
    "end": "53629"
  },
  {
    "text": "services as targets and it costs $1 per",
    "start": "53629",
    "end": "56629"
  },
  {
    "text": "million events with no charge for events",
    "start": "56629",
    "end": "58699"
  },
  {
    "text": "sourced from AWS services or for",
    "start": "58699",
    "end": "60920"
  },
  {
    "text": "delivery event buses are at the core of",
    "start": "60920",
    "end": "64010"
  },
  {
    "text": "event bridge every account has a default",
    "start": "64010",
    "end": "66500"
  },
  {
    "text": "event bus and if you've used cloud watch",
    "start": "66500",
    "end": "68299"
  },
  {
    "text": "events previously you'll be familiar",
    "start": "68299",
    "end": "70400"
  },
  {
    "text": "with the default event bus with event",
    "start": "70400",
    "end": "72860"
  },
  {
    "text": "bridge you can also create your own",
    "start": "72860",
    "end": "74420"
  },
  {
    "text": "custom event buses and there are also",
    "start": "74420",
    "end": "76730"
  },
  {
    "text": "bus is dedicated to ingesting partner",
    "start": "76730",
    "end": "78830"
  },
  {
    "text": "events next you associate rules with",
    "start": "78830",
    "end": "82970"
  },
  {
    "text": "your event bus these filter the incoming",
    "start": "82970",
    "end": "85130"
  },
  {
    "text": "events and determined the routing to",
    "start": "85130",
    "end": "87230"
  },
  {
    "text": "selected targets here's an example event",
    "start": "87230",
    "end": "91010"
  },
  {
    "text": "it's just JSON rules allow you to match",
    "start": "91010",
    "end": "94580"
  },
  {
    "text": "against values in the metadata of event",
    "start": "94580",
    "end": "96500"
  },
  {
    "text": "payloads and determine which events",
    "start": "96500",
    "end": "98720"
  },
  {
    "text": "should get routed to which target",
    "start": "98720",
    "end": "100130"
  },
  {
    "text": "destination so in this case this matches",
    "start": "100130",
    "end": "102800"
  },
  {
    "text": "because the rule is looking for AWS top",
    "start": "102800",
    "end": "104900"
  },
  {
    "text": "partner example.com wants you three in",
    "start": "104900",
    "end": "107270"
  },
  {
    "text": "the source and that's contained in the",
    "start": "107270",
    "end": "109010"
  },
  {
    "text": "example event this event matches because",
    "start": "109010",
    "end": "113240"
  },
  {
    "text": "the rule accepts departments that match",
    "start": "113240",
    "end": "115100"
  },
  {
    "text": "billing or fulfillment and the incoming",
    "start": "115100",
    "end": "117229"
  },
  {
    "text": "event has a Department of billing and",
    "start": "117229",
    "end": "121150"
  },
  {
    "text": "this doesn't match the rules since the",
    "start": "121150",
    "end": "123890"
  },
  {
    "text": "detailed type of the ticket is take it",
    "start": "123890",
    "end": "126200"
  },
  {
    "text": "created but the rule is filtering for",
    "start": "126200",
    "end": "128030"
  },
  {
    "text": "ticket resolved you can associate",
    "start": "128030",
    "end": "131840"
  },
  {
    "text": "multiple targets with each rule up to",
    "start": "131840",
    "end": "133760"
  },
  {
    "text": "five targets targets allow you to do",
    "start": "133760",
    "end": "136280"
  },
  {
    "text": "things like invoke a lambda function put",
    "start": "136280",
    "end": "138770"
  },
  {
    "text": "a record on the Canisius data stream or",
    "start": "138770",
    "end": "141129"
  },
  {
    "text": "start the execution of a step functions",
    "start": "141129",
    "end": "143690"
  },
  {
    "text": "workflow or start the task using ECS or",
    "start": "143690",
    "end": "146810"
  },
  {
    "text": "Fargate now you've seen the basic",
    "start": "146810",
    "end": "149450"
  },
  {
    "text": "concepts behind the vent bridge let's",
    "start": "149450",
    "end": "151489"
  },
  {
    "text": "take a look in the console so first of",
    "start": "151489",
    "end": "154160"
  },
  {
    "text": "all go to the AWS management console and",
    "start": "154160",
    "end": "156470"
  },
  {
    "text": "then the services drop down search for",
    "start": "156470",
    "end": "158840"
  },
  {
    "text": "event bridge this takes you to the event",
    "start": "158840",
    "end": "162200"
  },
  {
    "text": "bridge homepage and on here you can see",
    "start": "162200",
    "end": "165349"
  },
  {
    "text": "a more resources section that shows the",
    "start": "165349",
    "end": "167720"
  },
  {
    "text": "developer guide API reference and FAQ on",
    "start": "167720",
    "end": "171340"
  },
  {
    "text": "the left hand side there's a menu that",
    "start": "171340",
    "end": "173750"
  },
  {
    "text": "shows event buses rules and partner",
    "start": "173750",
    "end": "176000"
  },
  {
    "text": "sources let's take a look at event buses",
    "start": "176000",
    "end": "181750"
  },
  {
    "text": "now here you can see there's a default",
    "start": "181750",
    "end": "184340"
  },
  {
    "text": "event bus which every account has and",
    "start": "184340",
    "end": "186560"
  },
  {
    "text": "you cannot delete this and it'll be",
    "start": "186560",
    "end": "187910"
  },
  {
    "text": "there even if you've never used event",
    "start": "187910",
    "end": "190099"
  },
  {
    "text": "bridge before clicking this shows the",
    "start": "190099",
    "end": "197870"
  },
  {
    "text": "event bus erm now going to rules rules",
    "start": "197870",
    "end": "201140"
  },
  {
    "text": "are defined per event bus we can select",
    "start": "201140",
    "end": "203239"
  },
  {
    "text": "the event bus that we care about this",
    "start": "203239",
    "end": "204680"
  },
  {
    "text": "case is the default one and then select",
    "start": "204680",
    "end": "206900"
  },
  {
    "text": "create rule I'm going to call this rule",
    "start": "206900",
    "end": "209239"
  },
  {
    "text": "my first rule now further down we can",
    "start": "209239",
    "end": "214549"
  },
  {
    "text": "set a schedule I can say I want this to",
    "start": "214549",
    "end": "216590"
  },
  {
    "text": "be run every 5 minutes for example or I",
    "start": "216590",
    "end": "221420"
  },
  {
    "text": "can change to a cron expression and say",
    "start": "221420",
    "end": "224150"
  },
  {
    "text": "that I want this to be called every hour",
    "start": "224150",
    "end": "227109"
  },
  {
    "text": "but I'm going to use an event pattern",
    "start": "227109",
    "end": "229130"
  },
  {
    "text": "instead since I want to connect this",
    "start": "229130",
    "end": "231440"
  },
  {
    "text": "rule to s3 so I'm going to change to",
    "start": "231440",
    "end": "233090"
  },
  {
    "text": "predefined pattern by service and select",
    "start": "233090",
    "end": "235669"
  },
  {
    "text": "AWS and then select s3 there and we're",
    "start": "235669",
    "end": "239989"
  },
  {
    "text": "going to select all events you can see",
    "start": "239989",
    "end": "243260"
  },
  {
    "text": "the event pattern has been built for",
    "start": "243260",
    "end": "244549"
  },
  {
    "text": "isn't the right hand side just there now",
    "start": "244549",
    "end": "246889"
  },
  {
    "text": "if I scroll down this has been connected",
    "start": "246889",
    "end": "248840"
  },
  {
    "text": "to the default event bus I'm going to",
    "start": "248840",
    "end": "251630"
  },
  {
    "text": "select the cloud watch log group for my",
    "start": "251630",
    "end": "254269"
  },
  {
    "text": "target and then create a new log group",
    "start": "254269",
    "end": "256370"
  },
  {
    "text": "called event bridge - s3 - log and then",
    "start": "256370",
    "end": "261200"
  },
  {
    "text": "I'll click create ok that rule is now",
    "start": "261200",
    "end": "264800"
  },
  {
    "text": "created and if we go to cloud watch logs",
    "start": "264800",
    "end": "267320"
  },
  {
    "text": "and refresh you can see that the log",
    "start": "267320",
    "end": "269510"
  },
  {
    "text": "group is there but if I click it there's",
    "start": "269510",
    "end": "271130"
  },
  {
    "text": "nothing in there yet because no events",
    "start": "271130",
    "end": "273169"
  },
  {
    "text": "have been created",
    "start": "273169",
    "end": "274410"
  },
  {
    "text": "now back in the s3 bucket I have here if",
    "start": "274410",
    "end": "278199"
  },
  {
    "text": "I click upload I'm just going to add a",
    "start": "278199",
    "end": "280240"
  },
  {
    "text": "file for my computer I'll select this",
    "start": "280240",
    "end": "282610"
  },
  {
    "text": "file here download PNG and we'll just",
    "start": "282610",
    "end": "286030"
  },
  {
    "text": "upload that that's now ready and I'll",
    "start": "286030",
    "end": "290500"
  },
  {
    "text": "switch back to the cloud watch logs and",
    "start": "290500",
    "end": "292150"
  },
  {
    "text": "refresh and now you can see two events",
    "start": "292150",
    "end": "294910"
  },
  {
    "text": "have been captured I look at the first",
    "start": "294910",
    "end": "296889"
  },
  {
    "text": "one if I open that you can see all the",
    "start": "296889",
    "end": "299259"
  },
  {
    "text": "JSON showing the key the download PNG",
    "start": "299259",
    "end": "302620"
  },
  {
    "text": "file that was uploaded to the bucket",
    "start": "302620",
    "end": "306419"
  },
  {
    "text": "now if I put these JSON pieces",
    "start": "313260",
    "end": "315930"
  },
  {
    "text": "side-by-side you'll see that in the case",
    "start": "315930",
    "end": "318630"
  },
  {
    "text": "of the event patterns for the rule this",
    "start": "318630",
    "end": "321270"
  },
  {
    "text": "can is looking for a source of AWS s3",
    "start": "321270",
    "end": "323870"
  },
  {
    "text": "and the event was captured shows a",
    "start": "323870",
    "end": "326460"
  },
  {
    "text": "source that's the same aw SDS three and",
    "start": "326460",
    "end": "329160"
  },
  {
    "text": "that's why this event was matched by the",
    "start": "329160",
    "end": "331980"
  },
  {
    "text": "rule okay let's change this now so",
    "start": "331980",
    "end": "343950"
  },
  {
    "text": "instead of being capturing all the",
    "start": "343950",
    "end": "345150"
  },
  {
    "text": "different events that are being thrown",
    "start": "345150",
    "end": "346380"
  },
  {
    "text": "by s3 we're going to filter just for put",
    "start": "346380",
    "end": "348660"
  },
  {
    "text": "events when edit this rule and change it",
    "start": "348660",
    "end": "353100"
  },
  {
    "text": "from all events to object level",
    "start": "353100",
    "end": "355560"
  },
  {
    "text": "operations I'm going to look",
    "start": "355560",
    "end": "356820"
  },
  {
    "text": "specifically for poker put events and",
    "start": "356820",
    "end": "361460"
  },
  {
    "text": "specify a bucket name which is my bucket",
    "start": "361460",
    "end": "364080"
  },
  {
    "text": "name here paste that in and now I'll",
    "start": "364080",
    "end": "370770"
  },
  {
    "text": "update okay so if I delete this file",
    "start": "370770",
    "end": "376830"
  },
  {
    "text": "that we just uploaded and then go back",
    "start": "376830",
    "end": "381270"
  },
  {
    "text": "to cloud watch logs I'll just refresh",
    "start": "381270",
    "end": "384690"
  },
  {
    "text": "I'll go back to the log stream and then",
    "start": "384690",
    "end": "386580"
  },
  {
    "text": "refresh there you'll see there are no",
    "start": "386580",
    "end": "388680"
  },
  {
    "text": "new log streams because it's no longer",
    "start": "388680",
    "end": "390360"
  },
  {
    "text": "looking for delete events it's only",
    "start": "390360",
    "end": "392130"
  },
  {
    "text": "looking for put events now if I upload a",
    "start": "392130",
    "end": "394020"
  },
  {
    "text": "new file again I'll upload the same file",
    "start": "394020",
    "end": "399199"
  },
  {
    "text": "now in the log stream if i refresh",
    "start": "400430",
    "end": "403050"
  },
  {
    "text": "there's a third event it's been captured",
    "start": "403050",
    "end": "405000"
  },
  {
    "text": "and this shows here a put event from s3",
    "start": "405000",
    "end": "408260"
  },
  {
    "text": "for download PNG the file name that we",
    "start": "408260",
    "end": "412020"
  },
  {
    "text": "just uploaded now let's connect a lambda",
    "start": "412020",
    "end": "416910"
  },
  {
    "text": "function to this rule instead of a cloud",
    "start": "416910",
    "end": "419040"
  },
  {
    "text": "watch log what we'll do is we'll create",
    "start": "419040",
    "end": "420900"
  },
  {
    "text": "a new function and I'm going to call it",
    "start": "420900",
    "end": "423750"
  },
  {
    "text": "my target lambda using node 12 and we're",
    "start": "423750",
    "end": "429450"
  },
  {
    "text": "gonna set this as a new target for the",
    "start": "429450",
    "end": "430950"
  },
  {
    "text": "rule instead of using the cloud watch",
    "start": "430950",
    "end": "433140"
  },
  {
    "text": "log I'm going to modify the lambda",
    "start": "433140",
    "end": "435960"
  },
  {
    "text": "handler so it logs out the event so that",
    "start": "435960",
    "end": "438420"
  },
  {
    "text": "we can see that it has been fired so now",
    "start": "438420",
    "end": "444240"
  },
  {
    "text": "this function has been created",
    "start": "444240",
    "end": "446220"
  },
  {
    "text": "and I'll just going to add down here a",
    "start": "446220",
    "end": "448010"
  },
  {
    "text": "console.log event and save this lambda",
    "start": "448010",
    "end": "452340"
  },
  {
    "text": "function now back an event bridge when",
    "start": "452340",
    "end": "457710"
  },
  {
    "text": "edit this rule and we'll scroll down to",
    "start": "457710",
    "end": "462240"
  },
  {
    "text": "targets and change this from a cloud",
    "start": "462240",
    "end": "463860"
  },
  {
    "text": "watch log group to a lambda function",
    "start": "463860",
    "end": "465800"
  },
  {
    "text": "most like the lambda function we just",
    "start": "465800",
    "end": "467970"
  },
  {
    "text": "created and then update now an s3 I'll",
    "start": "467970",
    "end": "473370"
  },
  {
    "text": "upload a second file just pick any old",
    "start": "473370",
    "end": "475830"
  },
  {
    "text": "file from this folder and then click",
    "start": "475830",
    "end": "478230"
  },
  {
    "text": "Next and now this has been uploaded to",
    "start": "478230",
    "end": "482790"
  },
  {
    "text": "the bucket I'll go back to the lambda",
    "start": "482790",
    "end": "484490"
  },
  {
    "text": "functions and look at the monitoring tab",
    "start": "484490",
    "end": "487160"
  },
  {
    "text": "if I click view logs in cloud watch we",
    "start": "487160",
    "end": "492570"
  },
  {
    "text": "can see there's a log stream that shows",
    "start": "492570",
    "end": "494340"
  },
  {
    "text": "that the function has been invoked and",
    "start": "494340",
    "end": "497360"
  },
  {
    "text": "it's still logging outside is refresh",
    "start": "497360",
    "end": "499920"
  },
  {
    "text": "and you can see the JSON from event",
    "start": "499920",
    "end": "502890"
  },
  {
    "text": "bridge showing the event from the put",
    "start": "502890",
    "end": "505530"
  },
  {
    "text": "object event in s3 so event bridge is",
    "start": "505530",
    "end": "510960"
  },
  {
    "text": "very powerful but also very simple you",
    "start": "510960",
    "end": "513719"
  },
  {
    "text": "use rules to filter events in an event",
    "start": "513719",
    "end": "515969"
  },
  {
    "text": "bus defining which targets receive which",
    "start": "515969",
    "end": "518310"
  },
  {
    "text": "events this helps decouple your",
    "start": "518310",
    "end": "520380"
  },
  {
    "text": "applications and simplify your service",
    "start": "520380",
    "end": "522810"
  },
  {
    "text": "architecture to learn more visit",
    "start": "522810",
    "end": "525030"
  },
  {
    "text": "aws.amazon.com forward slash of em",
    "start": "525030",
    "end": "528150"
  },
  {
    "text": "bridge thanks for joining me for this",
    "start": "528150",
    "end": "530190"
  },
  {
    "text": "brief overview happy coding",
    "start": "530190",
    "end": "533930"
  }
]