[
  {
    "text": "Hello, I'm Taehyun Kim from\n'This is My Architecture'.",
    "start": "7522",
    "end": "9808"
  },
  {
    "text": "Today, we have Sanggi Choi \nfrom Spoon Radio.",
    "start": "9986",
    "end": "12043"
  },
  {
    "text": "We'll talk about the architecture\nof Spoon Radio.",
    "start": "12043",
    "end": "15278"
  },
  {
    "text": "Hello.",
    "start": "16694",
    "end": "17253"
  },
  {
    "text": "Hello.",
    "start": "17253",
    "end": "18155"
  },
  {
    "text": "Please introduce Spoon Radio.",
    "start": "18155",
    "end": "20685"
  },
  {
    "text": "The world is created\nfrom many people's stories.",
    "start": "20685",
    "end": "24036"
  },
  {
    "text": "Spoon Radio is a real-time audio platform\nthat collects and connects those stories.",
    "start": "24036",
    "end": "29904"
  },
  {
    "text": "The advantage is that anyone\nwith a smartphone can become a DJ or",
    "start": "29905",
    "end": "33218"
  },
  {
    "text": "listener anytime, anywhere.",
    "start": "33218",
    "end": "36225"
  },
  {
    "text": "Here is the Spoon Radio architecture\nusing different AWS services.",
    "start": "36226",
    "end": "41018"
  },
  {
    "text": "What is the architecture for?",
    "start": "41018",
    "end": "44417"
  },
  {
    "text": "Spoon Radio customers are divided\ninto DJs and listeners.",
    "start": "44417",
    "end": "48571"
  },
  {
    "text": "I'll explain the way DJs open the live rooms.",
    "start": "48571",
    "end": "52968"
  },
  {
    "text": "A DJ requests to open a live room with ALB and API server.",
    "start": "52968",
    "end": "59107"
  },
  {
    "text": "As soon as the live room is opened, the API server\nrequests to open a chat room by the chat server",
    "start": "59107",
    "end": "63752"
  },
  {
    "text": "and then to assign a live-streaming server\nby the streaming server.",
    "start": "63752",
    "end": "68544"
  },
  {
    "text": "And all this information is stored in RDS Aurora.",
    "start": "68544",
    "end": "73389"
  },
  {
    "text": "At the same time,\nit is stored in DocumentDB, too.",
    "start": "73389",
    "end": "78320"
  },
  {
    "text": "Secondly, from the listener's point of view,",
    "start": "78320",
    "end": "83417"
  },
  {
    "text": "they receive personal feeds\nof live information generated by DJs",
    "start": "83417",
    "end": "85610"
  },
  {
    "text": "or they receive the real-time ranking information.",
    "start": "85610",
    "end": "88610"
  },
  {
    "text": "At this time, if the listener receives\na request through the API server that",
    "start": "88610",
    "end": "95028"
  },
  {
    "text": "\"I'm going to listen to a certain\nbroadcast through the API server\",",
    "start": "95028",
    "end": "98137"
  },
  {
    "text": "the API server delivers the live chat information\nwith streaming information that this listener wants.",
    "start": "98137",
    "end": "104055"
  },
  {
    "text": "After that, this listener connects to the chat server",
    "start": "104055",
    "end": "107055"
  },
  {
    "text": "and then listens to the chat.",
    "start": "107055",
    "end": "110055"
  },
  {
    "text": "The listener also listens to live music",
    "start": "110055",
    "end": "116435"
  },
  {
    "text": "through AWS CloudFront.",
    "start": "116435",
    "end": "116436"
  },
  {
    "text": "There is Nginx in this CloudFront backbone.",
    "start": "116436",
    "end": "118989"
  },
  {
    "text": "This Nginx",
    "start": "118989",
    "end": "119336"
  },
  {
    "text": "looks at the live-streaming service.",
    "start": "119436",
    "end": "124552"
  },
  {
    "text": "The meta information is confirmed through ElastiCache Redis.",
    "start": "124553",
    "end": "129162"
  },
  {
    "text": "Spoon Radio provides a global service,",
    "start": "129163",
    "end": "133782"
  },
  {
    "text": "so there must have been a lot of concerns.",
    "start": "133782",
    "end": "135446"
  },
  {
    "text": "Please explain which part was the most important",
    "start": "135446",
    "end": "137740"
  },
  {
    "text": "and how you solved the problem.",
    "start": "137740",
    "end": "141125"
  },
  {
    "text": "Network latency is the most important.",
    "start": "141125",
    "end": "145399"
  },
  {
    "text": "The network latency",
    "start": "145399",
    "end": "148021"
  },
  {
    "text": "between the DJ and the streaming server\nwas the most important.",
    "start": "148021",
    "end": "151021"
  },
  {
    "text": "So we configured streaming servers",
    "start": "151021",
    "end": "154580"
  },
  {
    "text": "in several AWS regions.",
    "start": "154580",
    "end": "157579"
  },
  {
    "text": "We used a latency-based routing policy",
    "start": "157580",
    "end": "160479"
  },
  {
    "text": "in Route 53",
    "start": "160479",
    "end": "163141"
  },
  {
    "text": "to overcome that latency.",
    "start": "163141",
    "end": "166141"
  },
  {
    "text": "Network latency was the most important",
    "start": "166141",
    "end": "168137"
  },
  {
    "text": "for global streaming service.",
    "start": "168137",
    "end": "170245"
  },
  {
    "text": "To solve the problem,",
    "start": "170246",
    "end": "172760"
  },
  {
    "text": "you can understand that Spoon Radio used a policy",
    "start": "172760",
    "end": "176062"
  },
  {
    "text": "of latency-based routing for Route 53.",
    "start": "176062",
    "end": "178019"
  },
  {
    "text": "Here you can see that\nsome servers use ElastiCache.",
    "start": "178020",
    "end": "182599"
  },
  {
    "text": "They're used for different purposes.",
    "start": "182599",
    "end": "184403"
  },
  {
    "text": "Please explain the purpose and how they're used.",
    "start": "184404",
    "end": "188073"
  },
  {
    "text": "We are using ElastiCache Redis for three purposes.",
    "start": "188073",
    "end": "191071"
  },
  {
    "text": "First, we use it",
    "start": "191072",
    "end": "194805"
  },
  {
    "text": "to deliver real-time ranking information to listeners.",
    "start": "194805",
    "end": "197803"
  },
  {
    "text": "When a DJ creates a room with API server",
    "start": "197804",
    "end": "201539"
  },
  {
    "text": "and the listener actually participates in the broadcasting room,",
    "start": "201539",
    "end": "205383"
  },
  {
    "text": "the API server stores all these data",
    "start": "205383",
    "end": "207455"
  },
  {
    "text": "in ElastiCache Redis",
    "start": "207455",
    "end": "210151"
  },
  {
    "text": "and delivers real-time ranking information\nto the listener.",
    "start": "210151",
    "end": "213597"
  },
  {
    "text": "Secondly, we use it in the chat server.",
    "start": "213597",
    "end": "216531"
  },
  {
    "text": "The pop-ups on the chat server",
    "start": "216531",
    "end": "219424"
  },
  {
    "text": "are processed using ElastiCache Redis.",
    "start": "219424",
    "end": "224312"
  },
  {
    "text": "Finally,",
    "start": "224313",
    "end": "226592"
  },
  {
    "text": "the dynamic routing of the streaming server",
    "start": "226592",
    "end": "229379"
  },
  {
    "text": "also uses ElastiCache Redis.",
    "start": "229380",
    "end": "232740"
  },
  {
    "text": "Spoon Radio uses ElastiCache",
    "start": "232740",
    "end": "235644"
  },
  {
    "text": "as a pop-up for the chat server,",
    "start": "235644",
    "end": "238076"
  },
  {
    "text": "and it is used for storing other meta information.",
    "start": "238076",
    "end": "240142"
  },
  {
    "text": "You can also see Aurora and DocumentDB that",
    "start": "240241",
    "end": "243968"
  },
  {
    "text": "are being used.",
    "start": "243968",
    "end": "245495"
  },
  {
    "text": "Please explain what information is stored",
    "start": "245495",
    "end": "248082"
  },
  {
    "text": "and how the stored data is finally serviced.",
    "start": "248082",
    "end": "251496"
  },
  {
    "text": "All information exchanged between DJs and listeners",
    "start": "251496",
    "end": "255615"
  },
  {
    "text": "is stored in RDS Aurora by default.",
    "start": "255615",
    "end": "258527"
  },
  {
    "text": "At the same time,",
    "start": "258527",
    "end": "260607"
  },
  {
    "text": "all services caused by users",
    "start": "260607",
    "end": "263246"
  },
  {
    "text": "are stored in DocumentDB.",
    "start": "263246",
    "end": "264936"
  },
  {
    "text": "RDS Aurora",
    "start": "264936",
    "end": "267701"
  },
  {
    "text": "and DocumentDB",
    "start": "267701",
    "end": "269586"
  },
  {
    "text": "configure personalized feeds to provide\nthe recommended live information",
    "start": "269586",
    "end": "272585"
  },
  {
    "text": "to users.",
    "start": "272585",
    "end": "274099"
  },
  {
    "text": "Recommendation service that is provided\nby using Aurora and DocumentDB",
    "start": "274099",
    "end": "278423"
  },
  {
    "text": "seems very interesting.",
    "start": "278423",
    "end": "279922"
  },
  {
    "text": "Spoon Radio is a streaming service,",
    "start": "279922",
    "end": "283222"
  },
  {
    "text": "but Rekognition is used.",
    "start": "283222",
    "end": "284991"
  },
  {
    "text": "What's the purpose of using Rekognition?",
    "start": "284992",
    "end": "287631"
  },
  {
    "text": "Some DJs often upload",
    "start": "287631",
    "end": "291249"
  },
  {
    "text": "background images",
    "start": "291249",
    "end": "294181"
  },
  {
    "text": "as unhealthy images.",
    "start": "294181",
    "end": "295002"
  },
  {
    "text": "Spoon Radio",
    "start": "295002",
    "end": "297674"
  },
  {
    "text": "puts a lot of effort to make",
    "start": "297674",
    "end": "299818"
  },
  {
    "text": "healthy audio streaming.",
    "start": "299818",
    "end": "301501"
  },
  {
    "text": "As part of it, all content uploaded",
    "start": "301501",
    "end": "303437"
  },
  {
    "text": "by users",
    "start": "303437",
    "end": "305981"
  },
  {
    "text": "will be saved in S3.",
    "start": "305981",
    "end": "307593"
  },
  {
    "text": "AWS Lambda is triggered at the same time",
    "start": "307593",
    "end": "310720"
  },
  {
    "text": "as it is stored in S3.",
    "start": "310720",
    "end": "313719"
  },
  {
    "text": "In Lambda,\nRekognition Content Moderation is used",
    "start": "313719",
    "end": "316721"
  },
  {
    "text": "to determine whether the image is a healthy image",
    "start": "316721",
    "end": "319313"
  },
  {
    "text": "or an unhealthy image.",
    "start": "319313",
    "end": "321309"
  },
  {
    "text": "The result is submitted to the operator.",
    "start": "321309",
    "end": "324074"
  },
  {
    "text": "If the image is unhealthy,",
    "start": "324074",
    "end": "326251"
  },
  {
    "text": "we don't make it exposed to users.",
    "start": "326251",
    "end": "329865"
  },
  {
    "text": "Thanks for your time, today.",
    "start": "329865",
    "end": "331444"
  },
  {
    "text": "Please tell us about Spoon Radio's future plans.",
    "start": "331444",
    "end": "335355"
  },
  {
    "text": "Spoon Radio is being serviced\nin many countries around the world.",
    "start": "335355",
    "end": "339548"
  },
  {
    "text": "We are planning",
    "start": "339548",
    "end": "341799"
  },
  {
    "text": "to use AWS EMR Spark with",
    "start": "341799",
    "end": "343872"
  },
  {
    "text": "SageMaker for the advanced\nrecommended information.",
    "start": "343872",
    "end": "348476"
  },
  {
    "text": "We plan to efficiently operate\nthe Spoon Radio infrastructure configuration",
    "start": "348476",
    "end": "352749"
  },
  {
    "text": "using the AWS services listed here,",
    "start": "352749",
    "end": "355055"
  },
  {
    "text": "as well as other high availability services.",
    "start": "355055",
    "end": "358639"
  },
  {
    "text": "I can't wait to see the better future of Spoon Radio.",
    "start": "358639",
    "end": "362209"
  },
  {
    "text": "Thank you.",
    "start": "362209",
    "end": "364727"
  },
  {
    "text": "'This is My Architecture'.",
    "start": "364727",
    "end": "366873"
  },
  {
    "text": "Thank you.",
    "start": "366873",
    "end": "368349"
  }
]