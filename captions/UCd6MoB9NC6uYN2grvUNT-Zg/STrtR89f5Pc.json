[
  {
    "start": "0",
    "end": "126000"
  },
  {
    "text": "all right I think we're gonna go ahead and get started how's everybody doing good enjoyed the",
    "start": "4279",
    "end": "10530"
  },
  {
    "text": "conference so far sweet well I'm excited to have you here with me today to talk about building apps with the AWS SDK for",
    "start": "10530",
    "end": "18449"
  },
  {
    "text": "PHP and I know that that is a lot of three-letter acronyms so for the",
    "start": "18449",
    "end": "24330"
  },
  {
    "text": "duration of this presentation I'm just going to refer to it lovingly as the SDK make it easier for everybody I think so",
    "start": "24330",
    "end": "32430"
  },
  {
    "text": "my name is Jeremy or Jeremy Amaya on Twitter and I work on the SDK at AWS we",
    "start": "32430",
    "end": "38610"
  },
  {
    "text": "got a lot to talk about today I'm gonna do a quick introduction to the SDK including talking about version 3 of the",
    "start": "38610",
    "end": "46289"
  },
  {
    "text": "SDK if you're unaware of the fact that we have a version 3 it's because it is",
    "start": "46289",
    "end": "52079"
  },
  {
    "text": "fairly new it's still in beta we launched it about a month ago so we're working on getting that towards a stable",
    "start": "52079",
    "end": "58800"
  },
  {
    "text": "release but I want to show you off some of the new features to you today it's and giving you a heads up of what it's",
    "start": "58800",
    "end": "64408"
  },
  {
    "text": "going to look like after that we're gonna build an application using the SDK and kind of go off on a lot of tangents",
    "start": "64409",
    "end": "71220"
  },
  {
    "text": "as we do that so you can see some of the SDK features in action and then third and demonstrate a few of the more",
    "start": "71220",
    "end": "77670"
  },
  {
    "text": "advanced features of the SDK as we walk through a script that's somewhat related to the application we're gonna build if",
    "start": "77670",
    "end": "85259"
  },
  {
    "text": "you want to tweet about something that you hear in the presentation today please use the conference PHP or the",
    "start": "85259",
    "end": "91110"
  },
  {
    "text": "conference reinvent hashtag in addition use the PHP hash tag that way I can find",
    "start": "91110",
    "end": "96570"
  },
  {
    "text": "your tweets later and reply to you or retweet you or something like that and if you were unaware we have an official",
    "start": "96570",
    "end": "103079"
  },
  {
    "text": "Twitter account for the SDK and that's AWS for PHP so make sure to follow us",
    "start": "103079",
    "end": "108960"
  },
  {
    "text": "there because that's one of the best ways you can stay up to date with everything that we're doing so how many",
    "start": "108960",
    "end": "114570"
  },
  {
    "text": "of you have used the PHP SDK any version before and how many you have not that's",
    "start": "114570",
    "end": "120899"
  },
  {
    "text": "a that's a easy account ok so I don't feel bad showing you the basic way to",
    "start": "120899",
    "end": "126840"
  },
  {
    "start": "126000",
    "end": "126000"
  },
  {
    "text": "use the SDK so if you use the SDK before there with me here but the SDK the basic",
    "start": "126840",
    "end": "132300"
  },
  {
    "text": "usage is fairly simple there is a client object in the SDK that corresponds to every service that we",
    "start": "132300",
    "end": "139140"
  },
  {
    "text": "support for AWS so this case this code sample is for using the ec2 client you",
    "start": "139140",
    "end": "145920"
  },
  {
    "text": "call the factory method and pass in an array of configuration options to instantiate it and then you can use the",
    "start": "145920",
    "end": "153390"
  },
  {
    "text": "methods on that client object to execute the operations of actual service and so",
    "start": "153390",
    "end": "158910"
  },
  {
    "text": "the methods on the client correspond one-to-one to the operations available in that service when you call a method",
    "start": "158910",
    "end": "165480"
  },
  {
    "text": "you pass in an array of parameters those again map straight to the parameters of",
    "start": "165480",
    "end": "171120"
  },
  {
    "text": "the actual API and those are all documented in the PHP SDKs API documentation and now version 3 of the",
    "start": "171120",
    "end": "180959"
  },
  {
    "text": "SDK I actually wanted like fireworks to shoot off each side of the stage here",
    "start": "180959",
    "end": "186030"
  },
  {
    "text": "but no one is really on board with that so I had to let it go",
    "start": "186030",
    "end": "191780"
  },
  {
    "text": "version 3 of the SDK is pretty exciting to me that night just because I've been",
    "start": "192019",
    "end": "197579"
  },
  {
    "text": "working on it for the past few months but I do think it's pretty cool we the new version is based off of version 5 of",
    "start": "197579",
    "end": "204900"
  },
  {
    "text": "the guzzle library if you're using version 2 of the SDK you'd you'd know that it's based on through guzzle 3 so",
    "start": "204900",
    "end": "211889"
  },
  {
    "text": "we're going to major versions up and getting all of the cool features that have been added to guzzle in version 3",
    "start": "211889",
    "end": "217230"
  },
  {
    "text": "of the sdk we're also going to require PHP version 5'4 or higher so we can take",
    "start": "217230",
    "end": "222750"
  },
  {
    "text": "advantage of things like traits and all the cool things that PHP is added in relation to call bowls and closures",
    "start": "222750",
    "end": "228599"
  },
  {
    "text": "short array syntax all that stuff version 3 the SDK will have improved",
    "start": "228599",
    "end": "234810"
  },
  {
    "text": "performance it'll have a smaller and leaner code base and it will actually",
    "start": "234810",
    "end": "240209"
  },
  {
    "text": "follow the semantic versioning spec so if you're using composer with the SDK",
    "start": "240209",
    "end": "245579"
  },
  {
    "text": "that should be a big one for you you don't think about the number very much and of course there's new features",
    "start": "245579",
    "end": "251819"
  },
  {
    "text": "before I get to that though I wanted to talk briefly about the performance so we did some tests internally for ourselves",
    "start": "251819",
    "end": "258570"
  },
  {
    "text": "to make sure that what we were doing with the SDK was actually beneficial in terms of performance so what we did is",
    "start": "258570",
    "end": "265260"
  },
  {
    "text": "we booted up a c3 extra-large instance and created a script that works with the",
    "start": "265260",
    "end": "271470"
  },
  {
    "text": "Amazon DynamoDB service and executes 1000 getitem requests one after another",
    "start": "271470",
    "end": "277490"
  },
  {
    "text": "so in version 2 of the sdk that takes on average about five point eight seconds",
    "start": "277490",
    "end": "282810"
  },
  {
    "text": "to complete in version three four point five seconds so over a second difference",
    "start": "282810",
    "end": "287880"
  },
  {
    "text": "there then we did the same test again but we did it all those 1000 requests",
    "start": "287880",
    "end": "293400"
  },
  {
    "start": "290000",
    "end": "290000"
  },
  {
    "text": "concurrently we saw even bigger difference there version two that takes",
    "start": "293400",
    "end": "298950"
  },
  {
    "text": "on average 2.6 seconds and version 3 on average one second that's pretty",
    "start": "298950",
    "end": "305190"
  },
  {
    "text": "impressive to me because that's basically 1 millisecond per request on average so that's pretty cool now who",
    "start": "305190",
    "end": "313520"
  },
  {
    "text": "used version one of the SDK and then transition to version two who went through that so a few people so I want",
    "start": "313520",
    "end": "322080"
  },
  {
    "text": "you to rest assured a little bit that they were not actually changing everything again version 3 of the SDK",
    "start": "322080",
    "end": "328200"
  },
  {
    "text": "actually is very similar to version 2 and the basic usage is almost exactly",
    "start": "328200",
    "end": "334320"
  },
  {
    "text": "the same so going back to that ec2 code sample earlier this is how you do it in",
    "start": "334320",
    "end": "339900"
  },
  {
    "text": "version 2 of the SDK and this is how you do it in version 3 of the SDK the only",
    "start": "339900",
    "end": "345720"
  },
  {
    "text": "difference is that we now require you to provide the API version when you",
    "start": "345720",
    "end": "351150"
  },
  {
    "text": "instantiate the SDK and the reason we do that is to help you and us maintain",
    "start": "351150",
    "end": "356910"
  },
  {
    "text": "backward compatibility with your code even though service API is may change in",
    "start": "356910",
    "end": "362010"
  },
  {
    "text": "the future so that's really built in to protect you from changes going forward",
    "start": "362010",
    "end": "368660"
  },
  {
    "text": "and now the new features right so one of the coolest new features in version 3 of",
    "start": "369110",
    "end": "374729"
  },
  {
    "text": "the SDK is the ability to do asynchronous requests I'm going to show you some examples of that in just a few",
    "start": "374729",
    "end": "381270"
  },
  {
    "text": "minutes so I'm not going to go too much in depth bomb that right now version 3 of the SDK also supports custom HTTP",
    "start": "381270",
    "end": "387690"
  },
  {
    "text": "adapters so effectively what that means is that curl is no longer required to use the SDK there is a PHP string",
    "start": "387690",
    "end": "395130"
  },
  {
    "text": "wrapper implementation that you can use with the SDK if you don't have access to",
    "start": "395130",
    "end": "400380"
  },
  {
    "text": "curl but curl is still the default because it provides the most functionality out of the box it also makes it possible to",
    "start": "400380",
    "end": "407250"
  },
  {
    "text": "implement custom adapters and there I think there's someone in the community right now that's working on one that",
    "start": "407250",
    "end": "414050"
  },
  {
    "text": "interface integrates with react PHP library so that'll be a cool one to kind",
    "start": "414050",
    "end": "419760"
  },
  {
    "text": "of play around with in the future when that's done because that will open up more non-blocking i/o asynchronous stuff",
    "start": "419760",
    "end": "426060"
  },
  {
    "text": "with the reactive PHP library another new feature is what we call result",
    "start": "426060",
    "end": "432840"
  },
  {
    "text": "pageant eaters allows you to iterate over paginate data from from various",
    "start": "432840",
    "end": "439410"
  },
  {
    "text": "services another feature is james path querying and result data I'm going to",
    "start": "439410",
    "end": "445440"
  },
  {
    "text": "talk about what exactly that means and how to use it in a few minutes as well and then we have there's more new",
    "start": "445440",
    "end": "453030"
  },
  {
    "text": "features than just these these are just the ones I wanted to highlight but one of the other cool ones is the debug",
    "start": "453030",
    "end": "459300"
  },
  {
    "text": "client option so you can when you instantiate the SDK you can say debug equals true and then when you do a",
    "start": "459300",
    "end": "465030"
  },
  {
    "text": "request it spits out the wire trace it spits out what the event system how it",
    "start": "465030",
    "end": "470610"
  },
  {
    "text": "modifies the request in each stage so you can figure out easily what's going awry if you run into problems so let's",
    "start": "470610",
    "end": "480210"
  },
  {
    "text": "go ahead and build something with the SDK now now the application that I want",
    "start": "480210",
    "end": "486060"
  },
  {
    "text": "to build is called selfies with elephants if you've been in the PHP PHP",
    "start": "486060",
    "end": "492360"
  },
  {
    "start": "488000",
    "end": "488000"
  },
  {
    "text": "community for any amount of time and know that the elephant is PHP s mascot and there's a lot of these stuffed",
    "start": "492360",
    "end": "499980"
  },
  {
    "text": "elephants out there especially in the past couple years and these things are like currency at PHP conferences and",
    "start": "499980",
    "end": "508100"
  },
  {
    "text": "some of them the purple ones the newest one but if you happen to have a blue one or a pink one you should consider",
    "start": "508100",
    "end": "514200"
  },
  {
    "text": "yourself pretty lucky because those ones are really rare at this point so I want",
    "start": "514200",
    "end": "520380"
  },
  {
    "text": "to build the application so I can share my selfies with my elephants this is my little collection right here my little",
    "start": "520380",
    "end": "526260"
  },
  {
    "text": "rainbow of elephants and this application is going to be pretty simple",
    "start": "526260",
    "end": "533060"
  },
  {
    "text": "it's basically just going to be two pages one page that shows all the selfie images and the other one that gives you",
    "start": "535680",
    "end": "542770"
  },
  {
    "text": "a form to upload new ones and then it'll and you can attach a caption to it too",
    "start": "542770",
    "end": "548680"
  },
  {
    "text": "so we're going to use two AWS services to implement this and then use the SDK",
    "start": "548680",
    "end": "554710"
  },
  {
    "text": "to communicate with those two services well use Amazon s3 or simple storage service to store the images of our",
    "start": "554710",
    "end": "562030"
  },
  {
    "text": "selfies and then we'll use Amazon DynamoDB which is our no sequel database service to store the records of those",
    "start": "562030",
    "end": "569290"
  },
  {
    "text": "images so that'll hold like the URL and the caption that way we can look those up and show them on our index page so",
    "start": "569290",
    "end": "579160"
  },
  {
    "text": "first we need to install and configure the SDK and the recommended way to",
    "start": "579160",
    "end": "584500"
  },
  {
    "start": "584000",
    "end": "584000"
  },
  {
    "text": "install the SDK is to use composer so if you're using composer you need to",
    "start": "584500",
    "end": "591610"
  },
  {
    "text": "specify the AWS SDK PHP package and then provide the version we are going to use",
    "start": "591610",
    "end": "597820"
  },
  {
    "text": "version three for this example and since the version three is still in beta",
    "start": "597820",
    "end": "603160"
  },
  {
    "text": "we need to append that @ symbol dev string to the end of the version so that",
    "start": "603160",
    "end": "609340"
  },
  {
    "text": "we can install the beta version now there are other ways to install the SDK",
    "start": "609340",
    "end": "614730"
  },
  {
    "text": "including the far that we generate with each release the zip file that contains all the source so you don't have to use",
    "start": "614730",
    "end": "622120"
  },
  {
    "text": "composer but we do recommend it so it helps you to more easily to manage all",
    "start": "622120",
    "end": "627160"
  },
  {
    "text": "the dependencies of your project after the SDK is installed then we need to get",
    "start": "627160",
    "end": "633790"
  },
  {
    "start": "632000",
    "end": "632000"
  },
  {
    "text": "our credentials to the SDK so it has the authentication there so that can",
    "start": "633790",
    "end": "639339"
  },
  {
    "text": "authenticate to the actual alw services there's a few different ways to do that and the way that you choose is going to",
    "start": "639339",
    "end": "646240"
  },
  {
    "text": "be dependent on what environment you're running your code in basically if you're running on ec2 the best way to provide",
    "start": "646240",
    "end": "655089"
  },
  {
    "text": "your credentials is through instance profile credentials which are which come",
    "start": "655089",
    "end": "661630"
  },
  {
    "text": "from the AWS Identity and Access Management Service basically the way that works you",
    "start": "661630",
    "end": "666880"
  },
  {
    "text": "create an ion role and you assign a policy to that to it that has the permission set up that just that your",
    "start": "666880",
    "end": "673270"
  },
  {
    "text": "application needs so in our case we would only let it do dynamodb and s3",
    "start": "673270",
    "end": "678340"
  },
  {
    "text": "operations in our policy then when you deploy when you launch an ec2 instance",
    "start": "678340",
    "end": "683740"
  },
  {
    "text": "or an elastic Beanstalk or environment or however you're running your ec2",
    "start": "683740",
    "end": "688870"
  },
  {
    "text": "instances then you associate that role with that and then the what happens is",
    "start": "688870",
    "end": "695590"
  },
  {
    "text": "that temporary credentials are created on your behalf and deployed to your ec2 instances automatically the SDK knows",
    "start": "695590",
    "end": "703420"
  },
  {
    "text": "how to find those picks them up automatically and you don't have to worry about any code to actually get",
    "start": "703420",
    "end": "710500"
  },
  {
    "text": "your credentials for the SDK so that's definitely the best way to provide your",
    "start": "710500",
    "end": "715630"
  },
  {
    "text": "credentials on ec2 in your local development environment though we have",
    "start": "715630",
    "end": "720820"
  },
  {
    "text": "another way that makes it very pretty easy and that's the use of a credentials file so this is actually a feature that",
    "start": "720820",
    "end": "727720"
  },
  {
    "text": "exists in the current version of the SDK we started doing this in version 2.6 you",
    "start": "727720",
    "end": "733780"
  },
  {
    "text": "can create a credentials file in your home directory under the AWS directory",
    "start": "733780",
    "end": "739420"
  },
  {
    "text": "and it's basically an ini formatted file that contains profile names so that's",
    "start": "739420",
    "end": "745420"
  },
  {
    "text": "what you see in the square brackets are your profile names and then you can set your keys in there so you can set",
    "start": "745420",
    "end": "750880"
  },
  {
    "text": "multiple profiles you can reference that profile when you instantiate the SDK or",
    "start": "750880",
    "end": "755920"
  },
  {
    "text": "if you don't tell it what you want it'll automatically use the default profile so",
    "start": "755920",
    "end": "762250"
  },
  {
    "text": "again you can instantiate your SDK get the credentials to it without any code",
    "start": "762250",
    "end": "767550"
  },
  {
    "text": "and the other cool thing about the credentials file is it supported by the",
    "start": "767550",
    "end": "774160"
  },
  {
    "text": "other SDKs and tools that we provide so for using the AWS CLI it can read this",
    "start": "774160",
    "end": "780310"
  },
  {
    "text": "file as well and pull those credentials in so you don't have to do something else for the other tools another way is",
    "start": "780310",
    "end": "789130"
  },
  {
    "text": "through environment variables you can export your keys into environment variables the SDK will pick those up and",
    "start": "789130",
    "end": "795150"
  },
  {
    "text": "finally you can explicitly provide them which is something that we warned against because",
    "start": "795150",
    "end": "800710"
  },
  {
    "text": "we don't want you to commit your credentials into your source code repository and I'm sure you don't either",
    "start": "800710",
    "end": "807040"
  },
  {
    "text": "but we definitely don't want you to do that so the one of the main reasons why this",
    "start": "807040",
    "end": "813550"
  },
  {
    "text": "you're still able to do this though is because when you're using something like AWS security token service you're",
    "start": "813550",
    "end": "820570"
  },
  {
    "text": "generating credentials through the API and then you have to assign them to your clients so you can actually use it so",
    "start": "820570",
    "end": "827830"
  },
  {
    "text": "there is a use case for it but don't hard-code your credentials okay so the",
    "start": "827830",
    "end": "835060"
  },
  {
    "text": "SDK setup let's set up our AWS resources that we need for this application we are",
    "start": "835060",
    "end": "840820"
  },
  {
    "text": "going to set up an s3 bucket and a dynamo DB table the s3 bucket will store",
    "start": "840820",
    "end": "846250"
  },
  {
    "start": "842000",
    "end": "842000"
  },
  {
    "text": "our selfie images the DynamoDB table will hold the information about the records of those URLs and captions so",
    "start": "846250",
    "end": "853600"
  },
  {
    "text": "let's say in my code I had a little setup script that did this the SDK code",
    "start": "853600",
    "end": "858880"
  },
  {
    "text": "required would look something along these lines and a lot of the code",
    "start": "858880",
    "end": "864190"
  },
  {
    "text": "samples I'm doing are not fully complete as you can see I have an ellipsis right there because I don't want to actually",
    "start": "864190",
    "end": "869770"
  },
  {
    "text": "write out all those parameters on the slide I don't think that would actually be that all that beneficial for you but",
    "start": "869770",
    "end": "875500"
  },
  {
    "text": "I did want to get the basic structure up there so to create a bucket you can call the create bucket method of the s3",
    "start": "875500",
    "end": "882520"
  },
  {
    "text": "client and then that second line says s3 wait until bucket exists this is using a",
    "start": "882520",
    "end": "889330"
  },
  {
    "text": "feature of the SDK called waders with the the the DynamoDB part where again",
    "start": "889330",
    "end": "895060"
  },
  {
    "text": "we're creating the table and we're calling wait until table exists so the",
    "start": "895060",
    "end": "900670"
  },
  {
    "text": "waiters feature and the SDK allows you to pull resources until they're in a desired State so basically the script",
    "start": "900670",
    "end": "907720"
  },
  {
    "start": "901000",
    "end": "901000"
  },
  {
    "text": "will will stop there and do kind of a sleep and loop until that resource is",
    "start": "907720",
    "end": "913150"
  },
  {
    "text": "available so that's important especially if you have a script where you create something then you want to immediately",
    "start": "913150",
    "end": "918760"
  },
  {
    "text": "edit it or add something to it a lot of operations in AWS are asynchronous in",
    "start": "918760",
    "end": "925270"
  },
  {
    "text": "nature or eventually consistent in nature so if you try to create a dynamic table and then try to put an item into",
    "start": "925270",
    "end": "932529"
  },
  {
    "text": "it right after you create it probably gonna give you an error because the table is not actually ready so using",
    "start": "932529",
    "end": "938950"
  },
  {
    "text": "those waiters is a way that you can set your script up so that it can just you",
    "start": "938950",
    "end": "944110"
  },
  {
    "text": "know pause there until you can actually interface with that table without yours",
    "start": "944110",
    "end": "950850"
  },
  {
    "text": "so that's belt that's really all the code we need to make this script work but I want to make it a little bit more",
    "start": "951480",
    "end": "958000"
  },
  {
    "text": "fun so let's make it asynchronous I told",
    "start": "958000",
    "end": "964120"
  },
  {
    "text": "you that version 3 of the SDK allows you to do asynchronous requests and this is",
    "start": "964120",
    "end": "970420"
  },
  {
    "text": "how you do it for any operation if you all you have to do is add an extra parameter that's the @ symbol future",
    "start": "970420",
    "end": "978700"
  },
  {
    "text": "equals true and that'll turn the request into an asynchronous request what it",
    "start": "978700",
    "end": "986020"
  },
  {
    "text": "gives back to you it returns back an object that we call a future result it",
    "start": "986020",
    "end": "991210"
  },
  {
    "text": "looks like a result it has the same interface as a result object but it actually does not have the data in it",
    "start": "991210",
    "end": "997420"
  },
  {
    "text": "right away the data will be delivered to it once that a cygnus requests finishes so you can execute that create Tiberi",
    "start": "997420",
    "end": "1005100"
  },
  {
    "text": "requests asynchronously and do other things while the data is coming back once you reference the result object",
    "start": "1005100",
    "end": "1013200"
  },
  {
    "text": "though one of two things could happen if that racing orders result is done then",
    "start": "1013200",
    "end": "1019140"
  },
  {
    "text": "that data will be there and it just acts like a normal result object if it's not",
    "start": "1019140",
    "end": "1024480"
  },
  {
    "text": "complete then at that point is where your script will block and wait until the data gets delivered so that's how",
    "start": "1024480",
    "end": "1031709"
  },
  {
    "text": "the future results work you can also execute Waiters asynchronously so the",
    "start": "1031709",
    "end": "1042360"
  },
  {
    "start": "1035000",
    "end": "1035000"
  },
  {
    "text": "bottom line is how we did our waiter before wait until method but you can call the get waiter method and give it",
    "start": "1042360",
    "end": "1049860"
  },
  {
    "text": "the name that will return you a waiter object and it will do all the waiting asynchronously in the background you can",
    "start": "1049860",
    "end": "1056700"
  },
  {
    "text": "do other things while you're waiting if at any time you want to actually wait synchronously you can just call the wait",
    "start": "1056700",
    "end": "1062700"
  },
  {
    "text": "method now there's another way you can interact",
    "start": "1062700",
    "end": "1068779"
  },
  {
    "text": "with asynchronous requests which is going to be a lot more robust if you are",
    "start": "1068779",
    "end": "1074840"
  },
  {
    "text": "doing a lot of asynchronous work and that's through the promises API this is",
    "start": "1074840",
    "end": "1080090"
  },
  {
    "text": "not something that we invented this is actually a spec called the promises a plus spec if you've worked with",
    "start": "1080090",
    "end": "1086090"
  },
  {
    "text": "JavaScript a lot you'll see an interface exactly like this worked at things like skaila and some other languages they",
    "start": "1086090",
    "end": "1091820"
  },
  {
    "text": "follow the same specification and the way that we're implementing this is we're using another PHP library called",
    "start": "1091820",
    "end": "1098480"
  },
  {
    "text": "react promise so check that out if you've never heard of that with what promises allow you to do the",
    "start": "1098480",
    "end": "1105889"
  },
  {
    "text": "first line is a started the first line is just like with the future result so you call the operation with feature",
    "start": "1105889",
    "end": "1112070"
  },
  {
    "text": "equals true you get back the future result then you use the then method to",
    "start": "1112070",
    "end": "1118009"
  },
  {
    "text": "interact with the promise API that allows you to specify callbacks so",
    "start": "1118009",
    "end": "1123169"
  },
  {
    "text": "there's three callbacks they're unfulfilled on rejected on progress so",
    "start": "1123169",
    "end": "1128450"
  },
  {
    "text": "that first callback is what will get executed once the asynchronous request is finished second one will have what",
    "start": "1128450",
    "end": "1134720"
  },
  {
    "text": "happens if there's an error and the third one allows you to get information about the request as it's in flight so",
    "start": "1134720",
    "end": "1142070"
  },
  {
    "text": "you can hook up to any of those so putting all of that asynchronous stuff",
    "start": "1142070",
    "end": "1147139"
  },
  {
    "text": "together we can make our script even cooler so what we're doing here is we're",
    "start": "1147139",
    "end": "1155629"
  },
  {
    "start": "1149000",
    "end": "1149000"
  },
  {
    "text": "creating we're doing our create table command we're doing future true so it gives us back a future result we're",
    "start": "1155629",
    "end": "1161869"
  },
  {
    "text": "chaining off of that with the venn function giving it a callback to execute when it's complete that callback creates",
    "start": "1161869",
    "end": "1169460"
  },
  {
    "text": "the waiter which is also asynchronous there and then we're chaining off it again with a function at the end that",
    "start": "1169460",
    "end": "1176450"
  },
  {
    "text": "prints done and so that holbrook flow there happens asynchronously which means",
    "start": "1176450",
    "end": "1182179"
  },
  {
    "text": "we can do the whole create bucket workflow at the same time as we're doing",
    "start": "1182179",
    "end": "1187220"
  },
  {
    "text": "the create table workflow so that script using asynchronous means can execute much more quickly it's pretty cool stuff",
    "start": "1187220",
    "end": "1196269"
  },
  {
    "text": "I think so at least okay so we've",
    "start": "1196269",
    "end": "1203049"
  },
  {
    "text": "configured installed and configured the SDK we've set up our AWS resources let's",
    "start": "1203049",
    "end": "1208299"
  },
  {
    "text": "actually write the code for the application now to bootstrap our",
    "start": "1208299",
    "end": "1215229"
  },
  {
    "start": "1214000",
    "end": "1214000"
  },
  {
    "text": "application I got a little script right here I'm actually when I wrote this I actually use the Silex PHP macro",
    "start": "1215229",
    "end": "1221229"
  },
  {
    "text": "framework the reason I chose that one is because it kind of just stays out of your way",
    "start": "1221229",
    "end": "1226599"
  },
  {
    "text": "so all it basically provides some routing mechanisms and then we can fill in all the application logic ourselves",
    "start": "1226599",
    "end": "1233219"
  },
  {
    "text": "so here I'm starting this Silex application I'm instantiating the SDK",
    "start": "1233219",
    "end": "1238619"
  },
  {
    "text": "version 3 has an AWS SDK class that's kind of like the base class of the SDK",
    "start": "1238619",
    "end": "1244599"
  },
  {
    "text": "and it basically acts as a clients object Factory so you can set global",
    "start": "1244599",
    "end": "1250059"
  },
  {
    "text": "settings there and then get other getting the client objects for the services from that object so let's look",
    "start": "1250059",
    "end": "1257229"
  },
  {
    "text": "at the different routes we're gonna define we have one for our index page that shows our selfie images and for",
    "start": "1257229",
    "end": "1266379"
  },
  {
    "text": "that one we're going to be using the dynamo DB client so we get that from our",
    "start": "1266379",
    "end": "1271539"
  },
  {
    "text": "AWS SDK object and we call the query operation to get back a list of those",
    "start": "1271539",
    "end": "1279070"
  },
  {
    "text": "selphie records which have the URL and the caption so we can pull those items",
    "start": "1279070",
    "end": "1284499"
  },
  {
    "text": "out pass them along into our view so here I have a limit of 10 set which makes sense because we're showing these",
    "start": "1284499",
    "end": "1290829"
  },
  {
    "text": "pictures but in other applications you might be working with dynamo DB where",
    "start": "1290829",
    "end": "1296019"
  },
  {
    "text": "you have thousands of records that you need to process when you work with that",
    "start": "1296019",
    "end": "1302139"
  },
  {
    "text": "amount of data most AWS operations that list or describe data or paginate it in nature and what makes that sometimes",
    "start": "1302139",
    "end": "1310719"
  },
  {
    "text": "difficult to work with is that you have to know how the pagination works with that service there's usually some kind",
    "start": "1310719",
    "end": "1316209"
  },
  {
    "text": "of marker or token value you get back from the response you have to pass that in to another request to get the next",
    "start": "1316209",
    "end": "1322389"
  },
  {
    "text": "page of data and keep doing that over and over again so in the SDK we have a mechanism called paginate errs which in",
    "start": "1322389",
    "end": "1328960"
  },
  {
    "text": "caps lay all that for you so if you were doing a lot of Records you could call",
    "start": "1328960",
    "end": "1334860"
  },
  {
    "text": "the get paginate er method give it the operation query and what you get back",
    "start": "1334860",
    "end": "1340590"
  },
  {
    "text": "there is the paginate er object which is basically an iterator of result objects",
    "start": "1340590",
    "end": "1345980"
  },
  {
    "text": "then you can loop over that and handle each page of results however you want",
    "start": "1345980",
    "end": "1351860"
  },
  {
    "text": "they'd also have a cool method called search which allows you to apply a james path expression which i'll show you some",
    "start": "1351860",
    "end": "1359010"
  },
  {
    "text": "more in just a second so paginate errs again they were the enumerate result objects they abstract those markers and",
    "start": "1359010",
    "end": "1366390"
  },
  {
    "text": "tokens so you don't have to handle them yourselves it implements the iterator interface so it's compatible with other",
    "start": "1366390",
    "end": "1372180"
  },
  {
    "text": "iterator classes in PHP and you can use james path expressions to aggregate and",
    "start": "1372180",
    "end": "1378300"
  },
  {
    "text": "filter out data from your results so why",
    "start": "1378300",
    "end": "1383430"
  },
  {
    "text": "are pageant eaters cool well it certainly cleans up your code a little bit so on the left column you'll see",
    "start": "1383430",
    "end": "1389430"
  },
  {
    "text": "we're doing an s3 list objects operation using a paginate and then on the right",
    "start": "1389430",
    "end": "1395550"
  },
  {
    "text": "on the right side is without a paginate err it's a bit more complicated and it",
    "start": "1395550",
    "end": "1401940"
  },
  {
    "text": "ends up being more lines of code to soap agitators can really help kind of clear up your code and make you have to deal",
    "start": "1401940",
    "end": "1409290"
  },
  {
    "text": "with some of the API parts that you shouldn't have to deal with I think so",
    "start": "1409290",
    "end": "1417630"
  },
  {
    "start": "1417000",
    "end": "1417000"
  },
  {
    "text": "James path I've been talking about this but I haven't really told you what it is yet james path is a syntax for querying",
    "start": "1417630",
    "end": "1424260"
  },
  {
    "text": "json documents and over in our case PHP arrays you can check out james path",
    "start": "1424260",
    "end": "1430830"
  },
  {
    "text": "toward there's no a it's not a typo james path org will show you how all the",
    "start": "1430830",
    "end": "1437280"
  },
  {
    "text": "features and syntax of james path works we have james path expressions built",
    "start": "1437280",
    "end": "1442890"
  },
  {
    "text": "into the sdk using the search method on either paginate objects or result",
    "start": "1442890",
    "end": "1447930"
  },
  {
    "text": "objects so you can see on the bottom is a few different examples you can do things like X you know kind of like a",
    "start": "1447930",
    "end": "1455990"
  },
  {
    "text": "rate column function in PHP that you can pull out data from",
    "start": "1455990",
    "end": "1462720"
  },
  {
    "text": "sets of data and flatten it into a single list so that's what that first one does and that's for these are all",
    "start": "1462720",
    "end": "1468390"
  },
  {
    "text": "expressions you could use with the list objects operations so that first one will give you just the key object keys",
    "start": "1468390",
    "end": "1475080"
  },
  {
    "text": "so like listing your files in a bucket the second one uses a comma to do an and",
    "start": "1475080",
    "end": "1481380"
  },
  {
    "text": "expression and that's listing your directories and your keys from your bucket you can do that easily and then",
    "start": "1481380",
    "end": "1488039"
  },
  {
    "text": "the third one is an example of using or expression where you you can get one value or another one and there's tons of",
    "start": "1488039",
    "end": "1493860"
  },
  {
    "text": "other things you can do there's lots of functions and stuff built into james path so definitely check that out",
    "start": "1493860",
    "end": "1500100"
  },
  {
    "text": "james path is also used in the AWS CLI and some of the other SDKs as well okay",
    "start": "1500100",
    "end": "1509030"
  },
  {
    "start": "1508000",
    "end": "1508000"
  },
  {
    "text": "tangent complete back to our application the upload route to display the form",
    "start": "1509030",
    "end": "1517080"
  },
  {
    "text": "that one's really boring so we'll skip to the post-processing of that uploader out where we actually need to handle the",
    "start": "1517080",
    "end": "1524760"
  },
  {
    "text": "upload so there will be some you know framework specific stuff to extract the data out of the request but the two",
    "start": "1524760",
    "end": "1531900"
  },
  {
    "text": "things that we're worried about doing at the sdk are uploading the image and saving the image data to DynamoDB so",
    "start": "1531900",
    "end": "1539179"
  },
  {
    "text": "first we upload the image we get our s3",
    "start": "1539179",
    "end": "1544440"
  },
  {
    "text": "client from our AWS sdk object we can call the put object operation and specify the parameters that we need to",
    "start": "1544440",
    "end": "1551549"
  },
  {
    "text": "upload the object in the sdk we have a",
    "start": "1551549",
    "end": "1559230"
  },
  {
    "start": "1558000",
    "end": "1558000"
  },
  {
    "text": "special method called upload which is helpful an s3 because sometimes well",
    "start": "1559230",
    "end": "1568590"
  },
  {
    "text": "there's two ways you can upload objects there's put object which is a single upload but for larger objects there's a",
    "start": "1568590",
    "end": "1575460"
  },
  {
    "text": "whole set of multi-part upload api's that you can use to upload things and chunks so what the upload method does is",
    "start": "1575460",
    "end": "1582990"
  },
  {
    "text": "it looks at the file that you're uploading and it said if it's beyond a certain threshold it says oh you know",
    "start": "1582990",
    "end": "1588360"
  },
  {
    "text": "what I want to use multi-part operations instead of put object it makes that decision for you and it manages that",
    "start": "1588360",
    "end": "1594480"
  },
  {
    "text": "upload for you either way so if you're doing a lot of uploads with s3 this method will be",
    "start": "1594480",
    "end": "1601010"
  },
  {
    "text": "your best friend because it means you don't really have to worry about how big it is okay and then after we upload our",
    "start": "1601010",
    "end": "1614510"
  },
  {
    "start": "1611000",
    "end": "1611000"
  },
  {
    "text": "object we want to extract the object URL from the result and create a item to put",
    "start": "1614510",
    "end": "1620750"
  },
  {
    "text": "in our DynamoDB table that has the URL and the caption so that's that's what we're doing right here that's just a",
    "start": "1620750",
    "end": "1627680"
  },
  {
    "text": "normal operation call so with that we are pretty much done with our",
    "start": "1627680",
    "end": "1633500"
  },
  {
    "text": "application there so nice work so I did",
    "start": "1633500",
    "end": "1641480"
  },
  {
    "text": "bring this elephant with me and I kind of wanted to give it away to someone at the conference while I'm here put your",
    "start": "1641480",
    "end": "1648740"
  },
  {
    "text": "hand down you have to work for this so I'm gonna do a little raffle and the way",
    "start": "1648740",
    "end": "1654950"
  },
  {
    "text": "that you enter the raffle is you need to write some code that uses version 3 of the SDK it doesn't have to be anything",
    "start": "1654950",
    "end": "1660980"
  },
  {
    "text": "complex just uses the SDK then you can either tweet at our Twitter accounts",
    "start": "1660980",
    "end": "1667520"
  },
  {
    "text": "with a link to that code or you can come visit us in the booth and show us and we'll enter you enter you into the",
    "start": "1667520",
    "end": "1672950"
  },
  {
    "text": "drawing and we'll draw a winner on Friday I'll come find you and give you this lovely purple elephant so sound",
    "start": "1672950",
    "end": "1679610"
  },
  {
    "text": "good oh yeah this this purple elephant like I said it's one of the newest ones",
    "start": "1679610",
    "end": "1685850"
  },
  {
    "text": "it's produced by the PHP women organization if you've never heard of them you should definitely check out PHP",
    "start": "1685850",
    "end": "1691670"
  },
  {
    "text": "women org and see what they're all about this was a fundraiser project for them",
    "start": "1691670",
    "end": "1700360"
  },
  {
    "text": "so let's do something really fun now I wanted to get to some of those advanced features so let's say there is a",
    "start": "1702070",
    "end": "1709130"
  },
  {
    "text": "hypothetical situation here where we want to take our resources from our",
    "start": "1709130",
    "end": "1714140"
  },
  {
    "text": "selfie app that bucket and our dynamodb table and copy all the data from our application to a new bucket and dynamodb",
    "start": "1714140",
    "end": "1721850"
  },
  {
    "text": "table the workflow for that kind of",
    "start": "1721850",
    "end": "1726950"
  },
  {
    "text": "process as basically you know you read the records from the old table you copy the",
    "start": "1726950",
    "end": "1732350"
  },
  {
    "text": "images from the old to the new bucket kind of like it dance and then you write",
    "start": "1732350",
    "end": "1738830"
  },
  {
    "text": "the records to the new table and you just repeat all of that until all the records have been handled so I've made a",
    "start": "1738830",
    "end": "1746960"
  },
  {
    "text": "flowchart for that of course because I like flowcharts and then we want to do",
    "start": "1746960",
    "end": "1752120"
  },
  {
    "text": "this the most efficient way as possible of course so again in the flow chart we",
    "start": "1752120",
    "end": "1757880"
  },
  {
    "text": "have scanning for the objects copying the old images to the new bucket and we're going to use a cue so that we can",
    "start": "1757880",
    "end": "1765710"
  },
  {
    "text": "batch write those new records to the DynamoDB table so I'll show you how that works too so as we create the items",
    "start": "1765710",
    "end": "1773300"
  },
  {
    "text": "after each copy image operation who put it in the batch when there's a full batch that will execute automatically",
    "start": "1773300",
    "end": "1779660"
  },
  {
    "text": "and do those put item operations just keep going until we've consumed all of",
    "start": "1779660",
    "end": "1785090"
  },
  {
    "text": "our selphie records from our old DynamoDB table so let's put this up into",
    "start": "1785090",
    "end": "1790750"
  },
  {
    "text": "different segments of code so that we can digest this a little bit better so",
    "start": "1790750",
    "end": "1796670"
  },
  {
    "text": "step one we're going to use a paginate err with the dynamodb scan operation",
    "start": "1796670",
    "end": "1802400"
  },
  {
    "start": "1798000",
    "end": "1798000"
  },
  {
    "text": "this is similar to the one I'd showed you earlier with the query operation I'm",
    "start": "1802400",
    "end": "1808190"
  },
  {
    "text": "going to scan for the old records and the paginate er allows us to get",
    "start": "1808190",
    "end": "1813970"
  },
  {
    "text": "iterator for all of those so that the handle are looping for us so the code",
    "start": "1813970",
    "end": "1819800"
  },
  {
    "text": "for that again it's the same pretty much the same as the query one call get paginate err give it this tell the name",
    "start": "1819800",
    "end": "1826820"
  },
  {
    "text": "of the scan operation and then pass in the parameters that we want to use with the scan operation and I give us back",
    "start": "1826820",
    "end": "1833030"
  },
  {
    "text": "that paginate err object which again acts like an iterator of result objects",
    "start": "1833030",
    "end": "1838420"
  },
  {
    "text": "and step two we'll set up our batching mechanism set up to upload the new items",
    "start": "1838420",
    "end": "1845570"
  },
  {
    "start": "1840000",
    "end": "1840000"
  },
  {
    "text": "to our new dynamo DB table and to do",
    "start": "1845570",
    "end": "1850910"
  },
  {
    "text": "that we're going to use a special class in the SDK called the dynamo DB right request batch object and this makes it",
    "start": "1850910",
    "end": "1858740"
  },
  {
    "text": "very easy to handle those batch operations because not only does",
    "start": "1858740",
    "end": "1864050"
  },
  {
    "text": "it do the API calls for you but it also handles errors that come back so with",
    "start": "1864050",
    "end": "1869630"
  },
  {
    "text": "dynamodb you have provision throughput and if you try to send a batch of items that were such that you exceed your your",
    "start": "1869630",
    "end": "1877460"
  },
  {
    "text": "throughput then it actually gives you an error and gives you all of the items that it didn't save because you they",
    "start": "1877460",
    "end": "1885320"
  },
  {
    "text": "were over your throughput limit so the write request batch object looks at an error extracts those back out and recuse",
    "start": "1885320",
    "end": "1891560"
  },
  {
    "text": "them into the batch so the cool thing about the object is that if you put something in the queue it'll eventually",
    "start": "1891560",
    "end": "1897680"
  },
  {
    "text": "get to that anima dB no matter how hard dynamodb tries to stop you they don't try to stop you just",
    "start": "1897680",
    "end": "1905870"
  },
  {
    "text": "need to turn your vision throughput up I guess but so we create the batch object",
    "start": "1905870",
    "end": "1912800"
  },
  {
    "text": "we put each of the records and the what that that put a method the format for",
    "start": "1912800",
    "end": "1920420"
  },
  {
    "text": "that is the same thing as you would put in a put item operation it's just the same array structure and then at the end",
    "start": "1920420",
    "end": "1928040"
  },
  {
    "text": "you need to call flush because there might be items left over that didn't make it into a batch as you were going",
    "start": "1928040",
    "end": "1934160"
  },
  {
    "text": "through so that'll take care of the rest all right and step three we need to do",
    "start": "1934160",
    "end": "1941270"
  },
  {
    "start": "1938000",
    "end": "1938000"
  },
  {
    "text": "handle the copying of the images using the s3 client and to do that we're going",
    "start": "1941270",
    "end": "1947870"
  },
  {
    "text": "to take advantage of the request pooling features of the SDK so when you call s3",
    "start": "1947870",
    "end": "1955670"
  },
  {
    "text": "copy object that executes a single copy object command right away but you can",
    "start": "1955670",
    "end": "1961400"
  },
  {
    "text": "call a get command copy object it gives you a command object that represents the",
    "start": "1961400",
    "end": "1966860"
  },
  {
    "text": "request that you want to send but doesn't actually send it at that point that way it allows you to mutate that",
    "start": "1966860",
    "end": "1973130"
  },
  {
    "text": "command before you actually execute it what we're gonna do with that though is we're gonna actually create multiple",
    "start": "1973130",
    "end": "1978350"
  },
  {
    "text": "command objects put them in our array and then execute them all through the",
    "start": "1978350",
    "end": "1984170"
  },
  {
    "text": "request pool so that they happen concurrently but we're not going to",
    "start": "1984170",
    "end": "1990500"
  },
  {
    "text": "treat them explicitly like this we're gonna do it in style with a pea be 5.5 generator that's more fun who's",
    "start": "1990500",
    "end": "1998450"
  },
  {
    "text": "used generators on peach p55 before anyway it's kind of a it's still kind of a new",
    "start": "1998450",
    "end": "2004360"
  },
  {
    "text": "feature anything you could do with the generator though you can do without a generator using a normal iterator class",
    "start": "2004360",
    "end": "2010539"
  },
  {
    "text": "so you can't there's nothing prohibiting you from doing this if you're not using PHP 5/5 but the way that a generator",
    "start": "2010539",
    "end": "2017980"
  },
  {
    "text": "works is that it's a function that hat can contains a yield command or a yield",
    "start": "2017980",
    "end": "2023890"
  },
  {
    "text": "statement so about 3/4 of the way down you'll see a yield statement there and that function because of that yield",
    "start": "2023890",
    "end": "2031059"
  },
  {
    "text": "statement when you call it returns a generator object which is behaves",
    "start": "2031059",
    "end": "2036370"
  },
  {
    "text": "exactly like an iterator and the body of the function that per that wherever that",
    "start": "2036370",
    "end": "2042039"
  },
  {
    "text": "whatever that yield statement yields is what you what gets emitted when you",
    "start": "2042039",
    "end": "2048368"
  },
  {
    "text": "iterate over the object so we're creating get can work it blah sorry we're creating copy object commands and",
    "start": "2048369",
    "end": "2055470"
  },
  {
    "text": "then we're yielding them so when we call this function it will give us an iterator before each over that and it'll",
    "start": "2055470",
    "end": "2063280"
  },
  {
    "text": "give us those command object one by one and so we're going to pass that iterator",
    "start": "2063280",
    "end": "2070020"
  },
  {
    "text": "into our execute all method instead of doing an array of commands or passing an iterator of commands essentially so that",
    "start": "2070020",
    "end": "2077470"
  },
  {
    "text": "I'll do that'll allow the request pooling mechanism to just keep reading off of that iterator as many commands as",
    "start": "2077470",
    "end": "2084669"
  },
  {
    "text": "we need based off of our scan paginate err however many records there are will",
    "start": "2084669",
    "end": "2090550"
  },
  {
    "text": "create that many copy objects and the sdk will execute those commands as fast",
    "start": "2090550",
    "end": "2097359"
  },
  {
    "text": "as it can in the request pool i also have a little comment there and says attach event listener and step four so",
    "start": "2097359",
    "end": "2103869"
  },
  {
    "text": "let's move on to step four so before we yield that command we need to modify",
    "start": "2103869",
    "end": "2109119"
  },
  {
    "start": "2107000",
    "end": "2107000"
  },
  {
    "text": "that command object so that we can attach some logic to create the new",
    "start": "2109119",
    "end": "2116970"
  },
  {
    "text": "dynamodb item that we put into our write request batch from step two so to do",
    "start": "2116970",
    "end": "2122950"
  },
  {
    "text": "that we're going to use the event system of the sdk you can call get emitter on a command",
    "start": "2122950",
    "end": "2129660"
  },
  {
    "text": "object it returns you an event emitter and then you can use the on method to",
    "start": "2129660",
    "end": "2136170"
  },
  {
    "text": "attach an event listener so we're on process processes the event that gets fired when a command is finished",
    "start": "2136170",
    "end": "2142860"
  },
  {
    "text": "executing on process we're going to execute this callback and the body of",
    "start": "2142860",
    "end": "2148830"
  },
  {
    "text": "that callback we're getting the result we're extracting the object URL that we get back from the copy object method and",
    "start": "2148830",
    "end": "2155640"
  },
  {
    "text": "then we're using our write request batch putting it in there so that happens",
    "start": "2155640",
    "end": "2161670"
  },
  {
    "text": "every time a copy object command completes it automatically adds a",
    "start": "2161670",
    "end": "2167340"
  },
  {
    "text": "DynamoDB record into our queue that will go into our new table did you get all",
    "start": "2167340",
    "end": "2175560"
  },
  {
    "text": "that so I will be publishing the complete code for the application at",
    "start": "2175560",
    "end": "2181200"
  },
  {
    "text": "some point so when the slides are out when the presentation is published and when the Coast publish you can come back",
    "start": "2181200",
    "end": "2186900"
  },
  {
    "text": "and take a deeper look at this but that's everything put together if you",
    "start": "2186900",
    "end": "2193920"
  },
  {
    "text": "put the if you want to see all the code together at once it's actually not too much but it all",
    "start": "2193920",
    "end": "2199290"
  },
  {
    "text": "fits in there nicely and completes that whole workflow of copying all the Selphy",
    "start": "2199290",
    "end": "2204600"
  },
  {
    "text": "records I'm waiting for him to finish",
    "start": "2204600",
    "end": "2210690"
  },
  {
    "text": "this picture yeah there we go so yeah",
    "start": "2210690",
    "end": "2219500"
  },
  {
    "text": "alright so that's basically all I have for you today but I do want to go over",
    "start": "2221930",
    "end": "2228030"
  },
  {
    "text": "just a couple things before I let you go if you're wondering what the best way is",
    "start": "2228030",
    "end": "2233250"
  },
  {
    "start": "2231000",
    "end": "2231000"
  },
  {
    "text": "to stay up to date with the sdk then you should follow our AWS for PHP twitter",
    "start": "2233250",
    "end": "2238530"
  },
  {
    "text": "account for example how many of you had no idea there was a version 3 of the SDK",
    "start": "2238530",
    "end": "2243570"
  },
  {
    "text": "before today see this is why you need to follow our Twitter account for then you would know you can keep up to date with",
    "start": "2243570",
    "end": "2252000"
  },
  {
    "text": "the releases of the SDK by going to our github repo if you go to our github repo",
    "start": "2252000",
    "end": "2257520"
  },
  {
    "text": "slash recent releases it lists all every single release of the SDK including a change log it also has the",
    "start": "2257520",
    "end": "2264330"
  },
  {
    "text": "the far and the zip file attached to it so you can get everything right there",
    "start": "2264330",
    "end": "2269430"
  },
  {
    "text": "you can even do releases dot Adam and github will give you an atom feed of the",
    "start": "2269430",
    "end": "2275369"
  },
  {
    "text": "releases so that makes it even easier if you have that some kind of feed reader you can find out exactly when each",
    "start": "2275369",
    "end": "2282510"
  },
  {
    "text": "release happens and then of course we have our our blog blogs at aw amazon.com",
    "start": "2282510",
    "end": "2288450"
  },
  {
    "text": "slash PHP we occasionally publish articles there to help you work with the SDK if you need help please let us know",
    "start": "2288450",
    "end": "2296820"
  },
  {
    "start": "2294000",
    "end": "2294000"
  },
  {
    "text": "please ask questions we're okay with that we're on github if you go to our github",
    "start": "2296820",
    "end": "2302940"
  },
  {
    "text": "repo and a readme has links to our documentation everything else we have our issue tracker if you have run into",
    "start": "2302940",
    "end": "2309390"
  },
  {
    "text": "issues you have questions we're also on the AWS forums you can ask this questions on our actual PHP",
    "start": "2309390",
    "end": "2316130"
  },
  {
    "text": "development forum or if you have questions that are specific to a service there are forums for every single",
    "start": "2316130",
    "end": "2322080"
  },
  {
    "text": "service as well so the forms are a great place to look up questions that people",
    "start": "2322080",
    "end": "2327359"
  },
  {
    "text": "have already asked and to ask your own and of course you can go through AWS support as well if it happens to be",
    "start": "2327359",
    "end": "2333570"
  },
  {
    "text": "about the SDK eventually we are usually get one to vet and help them and help",
    "start": "2333570",
    "end": "2339390"
  },
  {
    "text": "you through there and that's about it so",
    "start": "2339390",
    "end": "2344730"
  },
  {
    "text": "make sure to please rate my presentation I do have some homework for you though",
    "start": "2344730",
    "end": "2350510"
  },
  {
    "text": "follow our Twitter account again I think I've advertised that a little bit too much sorry try out Version three of the",
    "start": "2350510",
    "end": "2357359"
  },
  {
    "text": "SDK remember if you do that and you show us your code you can win this purple",
    "start": "2357359",
    "end": "2363390"
  },
  {
    "text": "elephant right here and please anytime you have thoughts questions about the",
    "start": "2363390",
    "end": "2369420"
  },
  {
    "text": "SDK jump on github Twitter the forums and talk to us we love to hear from you guys so thanks a lot",
    "start": "2369420",
    "end": "2377720"
  }
]