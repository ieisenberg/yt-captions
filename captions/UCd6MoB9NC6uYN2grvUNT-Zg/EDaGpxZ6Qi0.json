[
  {
    "start": "0",
    "end": "118000"
  },
  {
    "text": "morning everyone bright and early 8:30 thanks for showing up I'm Brandon Chavez I'm a product",
    "start": "1070",
    "end": "8519"
  },
  {
    "text": "manager for Amazon eks this talk is called deep dive into Amazon key kiss but I think maybe a more appropriate",
    "start": "8519",
    "end": "15179"
  },
  {
    "text": "title would be like up to speed with Amazon eks there are a number of sessions this week from our engineering",
    "start": "15179",
    "end": "20520"
  },
  {
    "text": "team and customers that were definitely deeper dives into like specific areas of vks so we had a networking deep dive we",
    "start": "20520",
    "end": "27029"
  },
  {
    "text": "had a monitoring and alerting deep dive we had some deep dives around how do we run eks and across account manner and",
    "start": "27029",
    "end": "33719"
  },
  {
    "text": "we'll kind of touch on a little bit of all of those things today but at less depth obviously than the whole sessions",
    "start": "33719",
    "end": "39629"
  },
  {
    "text": "that are dedicated to them cool so let's go ahead and get started here so what is",
    "start": "39629",
    "end": "47579"
  },
  {
    "text": "on the agenda today first of all I want to talk about a little bit some customer use cases so these are for the most part",
    "start": "47579",
    "end": "53760"
  },
  {
    "text": "customers that are using eks and talking about it at reinvent so these are also talks you can go watch when you get back",
    "start": "53760",
    "end": "60840"
  },
  {
    "text": "or maybe you've already seen them this week just learn a little bit more about how they're thinking about eks and how they're kind of moving towards using it",
    "start": "60840",
    "end": "67380"
  },
  {
    "text": "in production or already using it in production I'd also like to kind of talk a little bit about what's new for eks so",
    "start": "67380",
    "end": "74640"
  },
  {
    "text": "we'll kind of get you up to speed if the last time you looked at eks was maybe around GA or sometime in the preview timeframe we'll kind of ramp you up",
    "start": "74640",
    "end": "80880"
  },
  {
    "text": "fast-forward you and then we can talk about the current state of the system we'll also talk about the eks control",
    "start": "80880",
    "end": "88229"
  },
  {
    "text": "plane and data plane so from our perspective that's everything that we run in our accounts and everything that",
    "start": "88229",
    "end": "93990"
  },
  {
    "text": "you run in your accounts and we'll talk about how those things work and how they're evolving and then we'll also talk about networking and load balancing",
    "start": "93990",
    "end": "100170"
  },
  {
    "text": "which is always a always a fun topic for me pretty passionate about that stuff and then I think the one thing we're not",
    "start": "100170",
    "end": "107280"
  },
  {
    "text": "going to talk about is anything related to you know getting up to speed on kubernetes so we're kind of assuming",
    "start": "107280",
    "end": "112530"
  },
  {
    "text": "that that's already already something you're they're coming with expertise about so let's get going so kind of an",
    "start": "112530",
    "end": "120240"
  },
  {
    "start": "118000",
    "end": "118000"
  },
  {
    "text": "obvious thing to touch on is like how our customers using this thing so if I position eks really quickly this is you",
    "start": "120240",
    "end": "126509"
  },
  {
    "text": "know basically the newest addition to our compute services which includes things you know like lambda ec2 ECS",
    "start": "126509",
    "end": "133680"
  },
  {
    "text": "which if you look at it from that lens like eks it's kind of a microcosm of those use cases which is kind of to say",
    "start": "133680",
    "end": "139079"
  },
  {
    "text": "a little bit of everything so the you know the top use case here is micro",
    "start": "139079",
    "end": "145019"
  },
  {
    "text": "services this is very obvious this is all like net new applications these are things that are born in the cloud built using a twelve factor app pattern these",
    "start": "145019",
    "end": "150629"
  },
  {
    "text": "are kind of the things that kubernetes kind of pushes you towards we also see a lot of platform as-a-service and this is",
    "start": "150629",
    "end": "157549"
  },
  {
    "text": "this is I'd say primarily are mostly large enterprises that are building some",
    "start": "157549",
    "end": "162810"
  },
  {
    "text": "tooling on top of kubernetes for their developers either to abstract away parts of kubernetes or abstracted away",
    "start": "162810",
    "end": "168269"
  },
  {
    "text": "entirely but this is so that their development teams can kind of all they think about is writing their code maybe",
    "start": "168269",
    "end": "174329"
  },
  {
    "text": "a docker file maybe a pod deployment spec and they can get those things up and running on a platform based on",
    "start": "174329",
    "end": "180090"
  },
  {
    "text": "kubernetes pretty easily number three this is you know enterprise app migrations these are like you're tired",
    "start": "180090",
    "end": "186599"
  },
  {
    "text": "and poor old java application sitting in a data center somewhere this is a totally cool pattern and this is a",
    "start": "186599",
    "end": "192420"
  },
  {
    "text": "really this is you know basically lifting so we do see a lot of folks gaining a lot of agility from you know",
    "start": "192420",
    "end": "197970"
  },
  {
    "text": "just throwing an old app into a container and then using things in kubernetes like persistence all the",
    "start": "197970",
    "end": "203609"
  },
  {
    "text": "functionality that's there to kind of gain agility even if they're still running on monolith and I heard a pretty",
    "start": "203609",
    "end": "208980"
  },
  {
    "text": "cool success story just before coming to this conference of a customer who did this with a huge codebase they had that",
    "start": "208980",
    "end": "215129"
  },
  {
    "text": "was Java but they put this teo in front of it and they pointed all the routes to this particular this one particular",
    "start": "215129",
    "end": "221250"
  },
  {
    "text": "we'll call it pod but as they started to decompose that monolith they would like you know chip off little chunks of it",
    "start": "221250",
    "end": "227190"
  },
  {
    "text": "they'd throw it in their own deployment and then they'd reroute SCO to point to that new functionality so over the",
    "start": "227190",
    "end": "232560"
  },
  {
    "text": "period of a year they used kubernetes to migrate an app from a data center to like full micro services which is a",
    "start": "232560",
    "end": "237989"
  },
  {
    "text": "really cool pattern so this is totally valid if you're thinking I'm not completely container native yet can I use Amazon eks you know definitely you",
    "start": "237989",
    "end": "245340"
  },
  {
    "text": "can and then forth although I probably should put this higher relatively",
    "start": "245340",
    "end": "250440"
  },
  {
    "text": "speaking as machine learning so if you would have told me you know like April last year that machine learning would",
    "start": "250440",
    "end": "255479"
  },
  {
    "text": "have been one of the top use cases for kubernetes on eks I would have probably not believed you but I've been I've",
    "start": "255479",
    "end": "262860"
  },
  {
    "text": "improved wrong and it's it's really tremendously interest so",
    "start": "262860",
    "end": "267990"
  },
  {
    "text": "this is like tensorflow based workloads using GPUs and this is all over the place right and so we have a lot of",
    "start": "267990",
    "end": "273599"
  },
  {
    "text": "customers who may be using kubernetes exclusively for this use case which is really cool to see and the community support for these frameworks is kind of",
    "start": "273599",
    "end": "279750"
  },
  {
    "text": "even accelerating more so I think that's awesome so some specific references to",
    "start": "279750",
    "end": "286740"
  },
  {
    "text": "customers we have you know fidelity who is in the process of moving to eks and",
    "start": "286740",
    "end": "292409"
  },
  {
    "text": "building a pass as mentioned for their you know hundreds and hundreds of DevOps teams right it's a big company they span",
    "start": "292409",
    "end": "299969"
  },
  {
    "text": "you know they're an international company so they've got teams all over but they're trying to build a unified platform and their talk this week was",
    "start": "299969",
    "end": "307139"
  },
  {
    "text": "kind of about their journey to you know their desire to run a million containers on Amazon eks so it's cool to think",
    "start": "307139",
    "end": "312479"
  },
  {
    "text": "about or hear about how they're thinking about this problem and how they want to scale for the developers and add agility",
    "start": "312479",
    "end": "317520"
  },
  {
    "text": "there so we also have snapchat I feel",
    "start": "317520",
    "end": "323969"
  },
  {
    "text": "like this is most people know what this is but they run some other several of their primary features on Amazon eks today and snap has been really really",
    "start": "323969",
    "end": "331229"
  },
  {
    "text": "critical in helping us shape our roadmap kind of pushing the limits of our service and letting us know like where",
    "start": "331229",
    "end": "336719"
  },
  {
    "text": "do things actually fall over there definitely a very large-scale customer and these are primarily like micro",
    "start": "336719",
    "end": "341789"
  },
  {
    "text": "service based applications and so they spoke this week in Khan 301 which is you know mastering kubernetes on AWS and",
    "start": "341789",
    "end": "348810"
  },
  {
    "text": "you've had an engineering lead from snap and one of our biddies kind of talked about their journey and a little bit",
    "start": "348810",
    "end": "354659"
  },
  {
    "text": "about the patterns that they're using here with kubernetes and eks oh that's a cool talk I would recommend checking that out if you did get a chance to see",
    "start": "354659",
    "end": "360750"
  },
  {
    "text": "it this week and then we also have app card so app card is interesting they're",
    "start": "360750",
    "end": "367710"
  },
  {
    "text": "a you know they're a startup ecommerce platform more or less and so they build a platform for retailers so they really",
    "start": "367710",
    "end": "375779"
  },
  {
    "text": "like what kubernetes offers and they were basically looking for help in offloading the operational burden of both deploying and running the",
    "start": "375779",
    "end": "382650"
  },
  {
    "text": "kubernetes control plane so this is something that allows them to you know not focus so much from those those",
    "start": "382650",
    "end": "388949"
  },
  {
    "text": "aspects of kubernetes but really focus on just delivering value to their customers quickly through all the cool development features that koopa of these",
    "start": "388949",
    "end": "395190"
  },
  {
    "text": "offers this is the one that doesn't have a talk this week and then the final customer reference I have",
    "start": "395190",
    "end": "400950"
  },
  {
    "text": "State Street bank and this is really cool they are running high-performance databases that require really low",
    "start": "400950",
    "end": "405990"
  },
  {
    "text": "latencies so this is millions of queries per second right so state sorry uses eks",
    "start": "405990",
    "end": "411540"
  },
  {
    "text": "because it really helps them minimize time on cluster operations and they can really focus on eating out the last bit",
    "start": "411540",
    "end": "416970"
  },
  {
    "text": "of performance they need you know from high performance ec2 instances for their databases instead of thinking about the",
    "start": "416970",
    "end": "422070"
  },
  {
    "text": "nuances of kubernetes which is cool so if we if like you're just waking up from",
    "start": "422070",
    "end": "429600"
  },
  {
    "start": "429000",
    "end": "429000"
  },
  {
    "text": "last reinvent and you're like what's what's happened in the past year this is kind of a quick rundown of some of the",
    "start": "429600",
    "end": "434640"
  },
  {
    "text": "important things that I think are are notable so in April we achieved kubernetes conformance for kubernetes",
    "start": "434640",
    "end": "440040"
  },
  {
    "text": "1.10 or maybe it was 1:9 at that time but this is something that we this is the first time we did this we achieve",
    "start": "440040",
    "end": "445290"
  },
  {
    "text": "conformance for every version of kubernetes that runs on eks and this is really important to us that upstream",
    "start": "445290",
    "end": "450840"
  },
  {
    "text": "tenant for us we also were HIPAA eligible early on in the year are kind",
    "start": "450840",
    "end": "456090"
  },
  {
    "text": "of right after GA this is great we're kind of working on a whole bunch of compliance postures for eks and HIPAA",
    "start": "456090",
    "end": "462030"
  },
  {
    "text": "was the first one for us in July we also released the build scripts for our AMI",
    "start": "462030",
    "end": "467210"
  },
  {
    "text": "August gave you new Ami's although we've released several iterations of new",
    "start": "467210",
    "end": "472830"
  },
  {
    "text": "omni's but this also came with a new CloudFormation template that kind of streamlined the work and no provisioning",
    "start": "472830",
    "end": "477870"
  },
  {
    "text": "process we also gave you a GPU optimized ami we went through some struggles with",
    "start": "477870",
    "end": "483780"
  },
  {
    "text": "the horizontal pod autoscaler and some upstream contributions to make that work the right way so that was all achieved in August we've been working on region",
    "start": "483780",
    "end": "490680"
  },
  {
    "text": "rollout so in September and November we brought you Dublin and Ohio and then a",
    "start": "490680",
    "end": "495750"
  },
  {
    "text": "couple of nice little things to support for is geodynamic admission control support for kind of dumping all the",
    "start": "495750",
    "end": "501510"
  },
  {
    "text": "config from your control plane with the update coop config CLI we'll talk about how a lot of this works but this is kind",
    "start": "501510",
    "end": "507300"
  },
  {
    "text": "of what we've done until now and we'll give you some hints on what you'll see when you get back to your offices next",
    "start": "507300",
    "end": "512610"
  },
  {
    "text": "week from Amazon eks so let's talk about the control plane and this is the part",
    "start": "512610",
    "end": "520050"
  },
  {
    "text": "that we run for you right so what is the architecture look like in relation to your infrastructure so the manage",
    "start": "520050",
    "end": "526260"
  },
  {
    "start": "522000",
    "end": "522000"
  },
  {
    "text": "control plane this is where you know we deal with all the stuff represented by the Amazon eks logo here and we just",
    "start": "526260",
    "end": "532650"
  },
  {
    "text": "expose the whole kubernetes role-playing via that end point that you see right so you have a cluster end",
    "start": "532650",
    "end": "537690"
  },
  {
    "text": "point dedicated to your cluster it's really just route 53 and we spend our",
    "start": "537690",
    "end": "542940"
  },
  {
    "text": "time handling everything behind that endpoint you know getting paged for things like EDD quorum failures or losing a node or connectivity issues",
    "start": "542940",
    "end": "549660"
  },
  {
    "text": "between different AZ's if something like that happens we're on the hook for that and you're not right so ideally you don't even notice a problem and all you",
    "start": "549660",
    "end": "557340"
  },
  {
    "text": "really need to focus on right now is the worker nodes which run in your V PC so there is this split account model which",
    "start": "557340",
    "end": "562620"
  },
  {
    "text": "is interesting kubernetes wasn't necessarily like designed to run this way which is why we had to talk about it and there's some cool stuff we're doing",
    "start": "562620",
    "end": "568200"
  },
  {
    "text": "to facilitate that but it's really nice model for having a very secure implementation of kubernetes right and",
    "start": "568200",
    "end": "574680"
  },
  {
    "text": "that's one of our top focuses here also if you're using if you're using any tooling coop cuddle maybe like a CI CD",
    "start": "574680",
    "end": "581250"
  },
  {
    "text": "system you point this at that end point that we expose from our side and just like your worker nodes right they also",
    "start": "581250",
    "end": "587310"
  },
  {
    "text": "point at that end point from within your within your V PC so today they do require outbound internet access to hit",
    "start": "587310",
    "end": "592410"
  },
  {
    "text": "that endpoint it is exposed to the Internet but it is protected by I am and are back and we'll talk about that too",
    "start": "592410",
    "end": "599060"
  },
  {
    "text": "so a little bit of more visibility into what's going on behind the scenes if we break open that that icon I had there",
    "start": "599060",
    "end": "605550"
  },
  {
    "start": "605000",
    "end": "605000"
  },
  {
    "text": "this is the infrastructure for the kubernetes control plane and really what's important I think is that this is",
    "start": "605550",
    "end": "611450"
  },
  {
    "text": "highly available and it's single tenant infrastructure right so you create a cluster that's all yours you're not",
    "start": "611450",
    "end": "617610"
  },
  {
    "text": "sharing that infrastructure with anyone else and you're getting all native AWS components which means that you're getting real instances you're getting a",
    "start": "617610",
    "end": "623340"
  },
  {
    "text": "real network load balancer you're getting an actual VPC you're getting things like real EBS volumes attached to",
    "start": "623340",
    "end": "629250"
  },
  {
    "text": "your instances and where we're setting up a whole bunch of monitoring and making sure that all these things are behaving as they should",
    "start": "629250",
    "end": "634830"
  },
  {
    "text": "we'll get paid if you start exceeding like the IEEE ops limitation on your volumes for example so all of this is is",
    "start": "634830",
    "end": "640320"
  },
  {
    "text": "under our purview right now and you know just showing you this you don't think",
    "start": "640320",
    "end": "645390"
  },
  {
    "text": "about it forget this slide there's anything else I want to talk about here oh yeah an interesting part about this",
    "start": "645390",
    "end": "651450"
  },
  {
    "text": "though is because this is all native AWS you could in theory run this exact same infrastructure yourself but let's say",
    "start": "651450",
    "end": "656970"
  },
  {
    "text": "you were a team running kubernetes for other internal teams this is actually a model that we would recommend using and there's not really any secret sauce that",
    "start": "656970",
    "end": "663270"
  },
  {
    "text": "worried we're using that you wouldn't have access to as an ADA because consumer which is great so there's the potential for us to kind of",
    "start": "663270",
    "end": "669390"
  },
  {
    "text": "maybe even open sources sort of infrastructure in the future because it's all just a we think best practice",
    "start": "669390",
    "end": "674520"
  },
  {
    "text": "for running kubernetes although we do create we do we create and we you know",
    "start": "674520",
    "end": "680970"
  },
  {
    "text": "manage all that infrastructure for you there are still some elements of planning that you have to do when you create a cluster so we're gonna kind of",
    "start": "680970",
    "end": "686220"
  },
  {
    "text": "walk through like some of the attributes on a cluster the inputs you have to give us and talk about why and how and you",
    "start": "686220",
    "end": "692340"
  },
  {
    "text": "know why do I have to go through this I want to press a button that says get kubernetes we have to know a couple of things so we're gonna walk through all",
    "start": "692340",
    "end": "697920"
  },
  {
    "text": "this so the first thing is we need a",
    "start": "697920",
    "end": "703620"
  },
  {
    "text": "role from you and this is because we need to manage resources on your behalf and if you've used AWS services before this is a pretty normal pattern this",
    "start": "703620",
    "end": "710520"
  },
  {
    "start": "704000",
    "end": "704000"
  },
  {
    "text": "cross account role you basically give us a role that has some policies that we manage so if you go into i.m and you",
    "start": "710520",
    "end": "716700"
  },
  {
    "text": "filter policies for eks you'll see we have four different policies two of them are applicable to the control plane and",
    "start": "716700",
    "end": "722430"
  },
  {
    "text": "so you need to take those policies and associate with them a role or associate them with a role and then give us that",
    "start": "722430",
    "end": "727860"
  },
  {
    "text": "role for us to create your control plane so one of the policies the cluster",
    "start": "727860",
    "end": "733110"
  },
  {
    "text": "policy I'm sorry the service policy first of all is what we use for managing network infrastructure in your account",
    "start": "733110",
    "end": "738540"
  },
  {
    "text": "so like the network interfaces we create and the cluster policy basically contains all the permissions that",
    "start": "738540",
    "end": "744720"
  },
  {
    "text": "kubernetes needs to do things in your account so if you think about it kubernetes does a lot of stuff for you",
    "start": "744720",
    "end": "750690"
  },
  {
    "text": "which includes like creating load balancers EBS volumes modifying tagging kind of all the actions that exist in",
    "start": "750690",
    "end": "756990"
  },
  {
    "text": "the the core cloud provider code in kubernetes those are the permissions we need and so they're all defining this",
    "start": "756990",
    "end": "762960"
  },
  {
    "text": "policy today and unfortunately it is kind of a it is a lot of stuff so I think when you see it initially it's",
    "start": "762960",
    "end": "768120"
  },
  {
    "text": "like wow that's a lot of things that kubernetes does but of course if you want the value of kubernetes you have to give it the permissions to do so so",
    "start": "768120",
    "end": "774480"
  },
  {
    "text": "anyway this is the the first this the first thing you have to give us this role and this allows us to manage things",
    "start": "774480",
    "end": "780090"
  },
  {
    "text": "on your behalf those other policies are specifically for your worker nodes which allow the nodes to do things which talk",
    "start": "780090",
    "end": "785280"
  },
  {
    "text": "about also there are also VPC requirements so you know I think one of",
    "start": "785280",
    "end": "791790"
  },
  {
    "start": "786000",
    "end": "786000"
  },
  {
    "text": "the points of confusion initially is kind of like well you're running the control plane why do you need to give me a VP see why does that actually matter",
    "start": "791790",
    "end": "797100"
  },
  {
    "text": "and so you can think about this more as like the VP see your stuff is gonna run in this is the V",
    "start": "797100",
    "end": "802959"
  },
  {
    "text": "PC for your kubernetes data plane so load balancers worker nodes give us all the subnets that you're going to use for",
    "start": "802959",
    "end": "809019"
  },
  {
    "text": "that stuff and this could be all private subnets it could be all public subnets we generally recommend a mixture of both",
    "start": "809019",
    "end": "815800"
  },
  {
    "text": "especially if you're going to do things like run your worker nodes in a private subnet run your elby's in a public subnet right that's a pretty standard",
    "start": "815800",
    "end": "821079"
  },
  {
    "text": "pattern and that still applies to kubernetes the reason that you give us these is so well first of all we can tag",
    "start": "821079",
    "end": "826930"
  },
  {
    "text": "them right so we actually tag the subnets with kubernetes io / cluster / cluster name equals shared and this is",
    "start": "826930",
    "end": "833319"
  },
  {
    "text": "just a kubernetes like requirement right so this is also something that kind of exists in the kubernetes the cloud",
    "start": "833319",
    "end": "839680"
  },
  {
    "text": "controller manager code this is just how it works in AWS right so this is kind of",
    "start": "839680",
    "end": "844810"
  },
  {
    "text": "just a stock requirement similarly for if you want to use internal load balancers as a couple notations you have",
    "start": "844810",
    "end": "849939"
  },
  {
    "text": "to use you can put this tag onto your subnets that will hold internal load balancers load balancers and that's how",
    "start": "849939",
    "end": "855459"
  },
  {
    "text": "kubernetes will discover where it actually place that on your behalf so there are some additional things to",
    "start": "855459",
    "end": "861819"
  },
  {
    "text": "think about with a V PC so you do have to plan ahead with your subnet sizes right so I know a lot of default things",
    "start": "861819",
    "end": "866889"
  },
  {
    "text": "in V PC setups you see like a slash 24 for your worker nodes or for ec2",
    "start": "866889",
    "end": "873310"
  },
  {
    "text": "instances right and that's fine if you're not gonna run a whole lot of instances but in the case of kubernetes or eks specifically where we actually",
    "start": "873310",
    "end": "879910"
  },
  {
    "text": "allocate a pod or IP each pod you probably need a slightly bigger subnet",
    "start": "879910",
    "end": "884980"
  },
  {
    "text": "right so if you have a slash 24 that's 254 IPS let's say you want to run a 20",
    "start": "884980",
    "end": "891339"
  },
  {
    "text": "node cluster so then you have 234 IPs later are left over and that means you can run 234 pods total right so I'm just",
    "start": "891339",
    "end": "898240"
  },
  {
    "text": "doing some rough math here which is probably it's too early for but I think the the gist here is a slash 24 is",
    "start": "898240",
    "end": "904029"
  },
  {
    "text": "probably too small unless you're running a very small cluster so our default templates give you a slash 18 if you want to use our sample VPC template and",
    "start": "904029",
    "end": "910720"
  },
  {
    "text": "we'd recommend thinking somewhere in the range of that site or block size because as your cluster grows you really don't want to have to like recreate your",
    "start": "910720",
    "end": "916480"
  },
  {
    "text": "cluster in a new V PC just because your site or blocks were too small in the first place",
    "start": "916480",
    "end": "921420"
  },
  {
    "start": "922000",
    "end": "922000"
  },
  {
    "text": "the security group I think this is something that is maybe also a little confusing at first because you know you",
    "start": "923759",
    "end": "928799"
  },
  {
    "text": "guys are managing you know what do you mean security group how does that actually apply and this security group defines the connectivity between the",
    "start": "928799",
    "end": "934679"
  },
  {
    "text": "kubernetes control plane so what we run and the worker nodes that run a new york app so this is we create an ties in your",
    "start": "934679",
    "end": "940889"
  },
  {
    "text": "account and this is what we apply to those en eyes so this kind of restricts the access to and from those en eyes so",
    "start": "940889",
    "end": "947609"
  },
  {
    "text": "at a minimum what you need to do kubernetes needs 443 inbound to the control plane and then our control plane",
    "start": "947609",
    "end": "953549"
  },
  {
    "text": "needs 10 250 outbound so 10 to 50 is the port that the couplet listens on and this is how we reach out to the couplet",
    "start": "953549",
    "end": "959220"
  },
  {
    "text": "for certain operations 443 outbound from your worker nodes obviously so you can reach the HTTP endpoint that provides",
    "start": "959220",
    "end": "966509"
  },
  {
    "text": "the kubernetes api so there are two security groups you have to think about in the eks setup process there's the",
    "start": "966509",
    "end": "971970"
  },
  {
    "text": "control plane security group there's the worker node security group and that worker node security group and the control plane security group have to",
    "start": "971970",
    "end": "978029"
  },
  {
    "text": "have permissions that align right so if they are not if they're if there's like an explicit deny somewhere that can get",
    "start": "978029",
    "end": "983040"
  },
  {
    "text": "confusing and you can run into problems another thing you have to pass to us",
    "start": "983040",
    "end": "988769"
  },
  {
    "text": "when you create a cluster is kubernetes version so when you get back home you'll have the ability to create a new cluster",
    "start": "988769",
    "end": "995309"
  },
  {
    "text": "with 111 3 and just a little commentary on our kubernetes version strategy we're going to be in line with the community",
    "start": "995309",
    "end": "1001189"
  },
  {
    "text": "and support up to three versions of kubernetes at once and after we have three versions in production we'll",
    "start": "1001189",
    "end": "1007489"
  },
  {
    "text": "deprecated an old cluster and all we all we mean by deprecation is you can no longer create a cluster on that",
    "start": "1007489",
    "end": "1012980"
  },
  {
    "text": "deprecated version but if you're running it currently and you haven't updated yet that's ok with us we'll probably reach",
    "start": "1012980",
    "end": "1017989"
  },
  {
    "text": "out to you and ask you a little bit of questions though I think you'll see a much faster delivery of kubernetes versions and 2019 from us which is",
    "start": "1017989",
    "end": "1026230"
  },
  {
    "text": "something that is highly requested so duly noted and this is something we're really focusing on we've been doing a",
    "start": "1026230",
    "end": "1031370"
  },
  {
    "text": "lot of the ground work behind the scenes to make sure that we can do this quickly and reliably for you I also want to talk",
    "start": "1031370",
    "end": "1039168"
  },
  {
    "start": "1037000",
    "end": "1037000"
  },
  {
    "text": "about these there's one other version construct in qks which is the AWS eks platform version and this is something",
    "start": "1039169",
    "end": "1045529"
  },
  {
    "text": "that is a representation of you know customer facing API changes or if we add",
    "start": "1045529",
    "end": "1051620"
  },
  {
    "text": "a new patch version to a specific kubernetes version these will increment the platform version and the intention",
    "start": "1051620",
    "end": "1056779"
  },
  {
    "text": "behind this say hey something has changed on our side you should be aware of this you know test your applications make sure",
    "start": "1056779",
    "end": "1062149"
  },
  {
    "text": "that you know there's been a change we might have enabled new emission control or something like this so we added an ek",
    "start": "1062149",
    "end": "1067309"
  },
  {
    "text": "s2 platform version to kubernetes 110 to introduced the horizontal pod autoscaler support and then we auto updated those",
    "start": "1067309",
    "end": "1074029"
  },
  {
    "text": "for you but I think it's important to realize that platform versions increment within a kubernetes version only so we",
    "start": "1074029",
    "end": "1080509"
  },
  {
    "text": "started on 110 with eks dot 1 we added dks2 which was that horizontal pod autoscaler when you get back you'll have",
    "start": "1080509",
    "end": "1087769"
  },
  {
    "text": "kubernetes 111 with its own eks dot 1 and then in the future you might see something like he cast out 3 for 110 if",
    "start": "1087769",
    "end": "1093860"
  },
  {
    "text": "it revs the platform or the patch version and then if we introduced 112",
    "start": "1093860",
    "end": "1099139"
  },
  {
    "text": "that'll also be on dot 1 yada yada as we add new functionality to older versions eks 2 this is really only to give you",
    "start": "1099139",
    "end": "1105590"
  },
  {
    "text": "context on has the configuration of this particular version changed since I started using it right and to kind of",
    "start": "1105590",
    "end": "1111080"
  },
  {
    "text": "give you control over that iteration so platform versions are not the same across all kubernetes versions it's only to let you know about changes within",
    "start": "1111080",
    "end": "1117889"
  },
  {
    "text": "that version and in our documentation you can look at the actual API server",
    "start": "1117889",
    "end": "1124549"
  },
  {
    "start": "1120000",
    "end": "1120000"
  },
  {
    "text": "configuration for that platform version so we actually just give you a dump of all the enabled admission controllers for that platform version and any",
    "start": "1124549",
    "end": "1130879"
  },
  {
    "text": "release notes that are relevant for you to know what comes with that new version so maybe the patch version will",
    "start": "1130879",
    "end": "1136009"
  },
  {
    "text": "increment maybe we'll add functionality maybe we'll change admission control our configurations based on your feedback",
    "start": "1136009",
    "end": "1141159"
  },
  {
    "text": "and you can find this on our documentation another thing you'll have",
    "start": "1141159",
    "end": "1150019"
  },
  {
    "text": "when you get back home is kubernetes version updates so we have a couple of new API supports this functionality so",
    "start": "1150019",
    "end": "1156200"
  },
  {
    "text": "we have the update cluster version API and this is an API you control which supports an in-place zero downtime",
    "start": "1156200",
    "end": "1161450"
  },
  {
    "text": "update of the kubernetes version running on your cluster so because we were on that h.a infrastructure behind the",
    "start": "1161450",
    "end": "1166700"
  },
  {
    "text": "scenes for you you can continue to interact with your cluster while the update is in place this takes about 8 to",
    "start": "1166700",
    "end": "1172460"
  },
  {
    "text": "10 minutes and it also introduces an update eks API object right so in the",
    "start": "1172460",
    "end": "1177740"
  },
  {
    "text": "context of your cluster you might have multiple updates in flight today we only support one type of update but you may",
    "start": "1177740",
    "end": "1182749"
  },
  {
    "text": "have additional ones in the future and so you can use list and describe update to provide visibility into the status of",
    "start": "1182749",
    "end": "1189320"
  },
  {
    "text": "that of that asynchronous job effect so you'll kick off an update you'll be able to describe the status of it and",
    "start": "1189320",
    "end": "1195360"
  },
  {
    "text": "let's say for example you've done something like accidentally deleted the role from your cluster if we can't update your cluster for a specific",
    "start": "1195360",
    "end": "1201840"
  },
  {
    "text": "reason like there's no role associated with your cluster we'll tell you about this and so you'll get specific error values from describe update I also",
    "start": "1201840",
    "end": "1215280"
  },
  {
    "start": "1213000",
    "end": "1213000"
  },
  {
    "text": "wanted to talk a little bit about the security posture of the control plane while we're talking about the control plane so this hasn't changed any from",
    "start": "1215280",
    "end": "1221160"
  },
  {
    "text": "last year but the idea here is that we have integrated aw I am with the with kubernetes are back effectively so we",
    "start": "1221160",
    "end": "1228060"
  },
  {
    "text": "split the responsibilities of authentication and authorization so in coop cuddle the we have an external",
    "start": "1228060",
    "end": "1234390"
  },
  {
    "text": "binary external authentication binary called the AWS Authenticator for now it's an external binary but this allows",
    "start": "1234390",
    "end": "1240600"
  },
  {
    "text": "coop cuddle to pass your AWS identity to the kubernetes api server so what that means is that coop cuddle can look in",
    "start": "1240600",
    "end": "1246390"
  },
  {
    "text": "the exact same credential chain as the AWS CLI so it can look at your session token' it can look at your environment",
    "start": "1246390",
    "end": "1252270"
  },
  {
    "text": "variables it can look at your secret access keys or an active role something like that packages it up sends it to the",
    "start": "1252270",
    "end": "1257400"
  },
  {
    "text": "api server kubernetes doesn't really know about that so we have a web hook authentication system behind the scenes",
    "start": "1257400",
    "end": "1262950"
  },
  {
    "text": "that verifies the identity as a valid user valid a r n for your account could be valid role valid user so the",
    "start": "1262950",
    "end": "1269520"
  },
  {
    "text": "authentication here is still handled handled by I am but the actual authorization is handled by our back so kubernetes looks to see if our back has",
    "start": "1269520",
    "end": "1277470"
  },
  {
    "text": "an entry for that particular user and if you have permissions to make that coop cuddle call it'll approve or deny that",
    "start": "1277470",
    "end": "1282600"
  },
  {
    "text": "action so we've kind of split those responsibilities to kind of make it easy to think about the distinction between",
    "start": "1282600",
    "end": "1289230"
  },
  {
    "text": "these two different systems mastering authentication systems together is kind of difficult so this was the cleanest",
    "start": "1289230",
    "end": "1294600"
  },
  {
    "text": "way for us to do that it's also important to note that each cluster is unique CA so we manage this for you also",
    "start": "1294600",
    "end": "1300570"
  },
  {
    "text": "the PKI set up in kubernetes is not always the most fun to manage long term so we do this for you so we use the",
    "start": "1300570",
    "end": "1306030"
  },
  {
    "text": "built in kubernetes CA system and we generate a set of search for the control",
    "start": "1306030",
    "end": "1311040"
  },
  {
    "text": "plane the couplet can also get certificates by issuing a CSR to the API",
    "start": "1311040",
    "end": "1316320"
  },
  {
    "text": "server which generates public and private keys and then the Kubla knows how to work with those and install those",
    "start": "1316320",
    "end": "1321810"
  },
  {
    "text": "on itself and cool boots also set up have certificate rotations so we're",
    "start": "1321810",
    "end": "1327690"
  },
  {
    "text": "constantly refreshing these I forget what the Refresh period is but this is something that's handled for you so just",
    "start": "1327690",
    "end": "1333600"
  },
  {
    "text": "a little bit of note about these security configuration this is a high priority for us as mentioned we're already hit HIPAA eligible but we do",
    "start": "1333600",
    "end": "1340559"
  },
  {
    "text": "have additional certifications coming again when you get back home all these different flavors of ISO and PCI DSS and",
    "start": "1340559",
    "end": "1347009"
  },
  {
    "text": "we're also working on any other compliance certification you can think of so if you have questions about that",
    "start": "1347009",
    "end": "1352739"
  },
  {
    "text": "feel free to reach out to us and we'll give you the rundown so when you get home these will be there so let's wrap",
    "start": "1352739",
    "end": "1359429"
  },
  {
    "text": "up a control plane section basically to get all the config that you care about from the control plane we have a CLI",
    "start": "1359429",
    "end": "1365460"
  },
  {
    "text": "helper which is update coop config and this just dumps all the information like the certificate data the cluster name",
    "start": "1365460",
    "end": "1370739"
  },
  {
    "text": "basically creates a coop cuddle or a coop config context for you for your cluster and if you have if you have a",
    "start": "1370739",
    "end": "1376440"
  },
  {
    "text": "file already it will just append a new context with the contents for your cluster so everything about the control",
    "start": "1376440",
    "end": "1382289"
  },
  {
    "text": "plane wrap it up dump it to a coop config file and you're ready to go to start using it so moving on to the data",
    "start": "1382289",
    "end": "1388830"
  },
  {
    "text": "plane this is the stuff that runs in your account let's give you all you need to know about this so I think one of the",
    "start": "1388830",
    "end": "1398070"
  },
  {
    "start": "1398000",
    "end": "1398000"
  },
  {
    "text": "first things we want to highlight and I've got an extra checkmark there is that you have a lot of instance flexibility right so although there's a",
    "start": "1398070",
    "end": "1404399"
  },
  {
    "text": "little bit of heavy lifting on your part we'll give you a CloudFormation template me give you an ami you still have to stand them up yourself but the trade-off",
    "start": "1404399",
    "end": "1410309"
  },
  {
    "text": "that we've made there for the time being is that you do get a lot of flexibility in this case you are not limited on the instance types you bring you can bring a",
    "start": "1410309",
    "end": "1416519"
  },
  {
    "text": "combination of whatever instance types you want so we have a lot of customers using P 2 s and P 3s for GPU workloads",
    "start": "1416519",
    "end": "1421739"
  },
  {
    "text": "we have customers running high three metal instances or how many works with this customers using spot instances ec2",
    "start": "1421739",
    "end": "1427590"
  },
  {
    "text": "fleet this is all available for you to use and it works with eks today you can",
    "start": "1427590",
    "end": "1433590"
  },
  {
    "start": "1433000",
    "end": "1433000"
  },
  {
    "text": "also bring your own OS and this is a QR code that links you to this github repository also pretty easy to type in",
    "start": "1433590",
    "end": "1440129"
  },
  {
    "text": "yourself but these the idea is that you can bring your own OS and although we do build you an ami you're not required to",
    "start": "1440129",
    "end": "1446279"
  },
  {
    "text": "use it right so you can we have customers using we'll just say every OS that you can think of and the way that",
    "start": "1446279",
    "end": "1453179"
  },
  {
    "text": "they're able to easily do that is because this these build scripts are the source of truth for that ami so anytime we modified the army we",
    "start": "1453179",
    "end": "1460450"
  },
  {
    "text": "also update the github repository I guess actually the inverse is true we update the github repository and then we",
    "start": "1460450",
    "end": "1466660"
  },
  {
    "text": "rebuild around me because this is the source of truth so it's a Hoshi core Packer script our build scripts and",
    "start": "1466660",
    "end": "1471940"
  },
  {
    "text": "there's assets for each supported Cooper Nettie's version so if you look out for 111 this will hit the github repo pretty",
    "start": "1471940",
    "end": "1477940"
  },
  {
    "text": "soon we also have a supported army from canonical so they have an e KS optimized",
    "start": "1477940",
    "end": "1483310"
  },
  {
    "text": "ami that they build and maintain and it mares the configuration for the most part of what we build for the Amazon Linux on me so you have",
    "start": "1483310",
    "end": "1490330"
  },
  {
    "text": "options pre-made from us and from canonical and whatever you want to do with this is up to you we also give you",
    "start": "1490330",
    "end": "1497680"
  },
  {
    "text": "an ami to easily take advantage of GPU instances right so the hardest part in",
    "start": "1497680",
    "end": "1503680"
  },
  {
    "text": "my opinion is getting the Nvidia drivers set up the right way for the different instances you know that's not exactly fun so we package all of that for you",
    "start": "1503680",
    "end": "1510220"
  },
  {
    "text": "and we keep it up to date and this is in the ada bios marketplace so what you have to do is if you go to the marketplace you subscribe and then you",
    "start": "1510220",
    "end": "1516010"
  },
  {
    "text": "can go launch them into a worker node group in your eks cluster so this is if you're running tensorflow if you're",
    "start": "1516010",
    "end": "1521800"
  },
  {
    "text": "using libraries like cuda or CU DNN and the neural network software from from nvidia this all just kind of worked for",
    "start": "1521800",
    "end": "1528910"
  },
  {
    "text": "an hour out of the box so we have guidance in our documentation on how do you get like the nvidia SMI library",
    "start": "1528910",
    "end": "1534070"
  },
  {
    "text": "going and you can see all the GPUs on the p2 and p3 instances through kubernetes super straightforward but as",
    "start": "1534070",
    "end": "1540340"
  },
  {
    "text": "soon as you start getting into training models and I don't really know what you're doing so I can't help you there and then for bootstrapping your worker",
    "start": "1540340",
    "end": "1547870"
  },
  {
    "start": "1545000",
    "end": "1545000"
  },
  {
    "text": "nodes you have a couple of options so we do give you a CloudFormation template you can also use our bootstrap sh script",
    "start": "1547870",
    "end": "1554500"
  },
  {
    "text": "which is in the cloud formation Erb which is in the github repository and this just allows you to do things like tell Kubla what's the cluster name that",
    "start": "1554500",
    "end": "1560890"
  },
  {
    "text": "it should be joining this kind of removes the like basically you can run this script and pass cluster name in",
    "start": "1560890",
    "end": "1566050"
  },
  {
    "text": "just the user data for a single instance if you want to and that instance will join your cluster it also allows you to",
    "start": "1566050",
    "end": "1571540"
  },
  {
    "text": "pass flags to couplet to modify its configuration at boot time so this could be things like defining max pods there's",
    "start": "1571540",
    "end": "1578650"
  },
  {
    "text": "a ton of bootstrap arguments that cubelets supports and they're all supported directly through this bootstrap script which is nice",
    "start": "1578650",
    "end": "1585299"
  },
  {
    "text": "this is also extensible to our CloudFormation template so there is a parameter called bootstrap arguments",
    "start": "1589130",
    "end": "1594270"
  },
  {
    "text": "which allows you to feed these arguments directly into that bootstrap script so from the CloudFormation you can throw",
    "start": "1594270",
    "end": "1599310"
  },
  {
    "text": "things two examples here first the parameters are passed to bootstrap dat",
    "start": "1599310",
    "end": "1604740"
  },
  {
    "text": "sh this is how it looks and then basically the result here is you can modify the configuration kind of at",
    "start": "1604740",
    "end": "1610470"
  },
  {
    "text": "scale across all of your instances the Kubla configuration through these arbitrary Kubla Flags",
    "start": "1610470",
    "end": "1616940"
  },
  {
    "text": "through CloudFormation which is really nice right so you don't actually have to go in and write any custom scripts to do",
    "start": "1616940",
    "end": "1621960"
  },
  {
    "text": "that and part of our goal here is just giving you more flexibility on how things are configured it's really up to",
    "start": "1621960",
    "end": "1628710"
  },
  {
    "text": "you how you define all of this so one important thing here is the authentication component all of the",
    "start": "1628710",
    "end": "1634380"
  },
  {
    "start": "1632000",
    "end": "1632000"
  },
  {
    "text": "bootstrapping of the instances that you do checking all these things the cluster they all have one common thread and that's that you do have to tell the",
    "start": "1634380",
    "end": "1640050"
  },
  {
    "text": "cluster hey you should let this I am entity join as an ode to my cluster so the way that that actually works is",
    "start": "1640050",
    "end": "1646110"
  },
  {
    "text": "there's a config map for AWS off on the cluster and we have a group for the nodes and you basically tell it the AR n",
    "start": "1646110",
    "end": "1653430"
  },
  {
    "text": "of the role for the nodes that should join right and so anytime you add a different AR n if you add a different",
    "start": "1653430",
    "end": "1659790"
  },
  {
    "text": "node group that's in its own auto scaling group that has its own role you have to tell the config map about this",
    "start": "1659790",
    "end": "1665220"
  },
  {
    "text": "and so right now this is kind of a manual entry process you have to go in there and drop that aren't into the",
    "start": "1665220",
    "end": "1670230"
  },
  {
    "text": "config map save it but as soon as you save it you'll see that boom boom boom all your nodes start joining the cluster right away so this is basically to",
    "start": "1670230",
    "end": "1677190"
  },
  {
    "text": "prevent unauthorized access of nodes that you don't know about joining your cluster",
    "start": "1677190",
    "end": "1682190"
  },
  {
    "start": "1684000",
    "end": "1684000"
  },
  {
    "text": "so we mentioned kubernetes version updates you still will have to use",
    "start": "1685360",
    "end": "1690640"
  },
  {
    "text": "CloudFormation to update the worker notes today and we'll be giving you some extensive directions and CloudFormation depending on kind of the nuances of your",
    "start": "1690640",
    "end": "1696910"
  },
  {
    "text": "application there's always some care and feeding that's going to be required if your applications don't really tolerate if they're not fully stateless right if",
    "start": "1696910",
    "end": "1702610"
  },
  {
    "text": "they don't tolerate interruptions well because if they're fully stateless you can probably just do things like update",
    "start": "1702610",
    "end": "1708490"
  },
  {
    "text": "the ami or kill all the nodes and drop new ones into your cluster but if you have some more specific you know requirements for gracefully draining",
    "start": "1708490",
    "end": "1715480"
  },
  {
    "text": "applications we'll give you instructions on how to do that using things like coop cuddle drain make sure all the pods are",
    "start": "1715480",
    "end": "1720910"
  },
  {
    "text": "gracefully terminated on your nose before you go ahead and move them over to a new set of a new set of nodes so",
    "start": "1720910",
    "end": "1726820"
  },
  {
    "text": "look out for this there's actually in my demo later on we're going to show you updates work I mean there's office as a",
    "start": "1726820",
    "end": "1732540"
  },
  {
    "text": "documentation link in the console directly to the process here how to do this let's talk about networking just a",
    "start": "1732540",
    "end": "1743950"
  },
  {
    "text": "little bit and so I think this is depending on your interest level this is",
    "start": "1743950",
    "end": "1749200"
  },
  {
    "text": "a this can be a very deep topic there's a lot of things that kubernetes brings in the networking space and eks tries to",
    "start": "1749200",
    "end": "1755080"
  },
  {
    "text": "make a lot of this easy but maybe at the expense of making you know more VPC networking than you did before so we do",
    "start": "1755080",
    "end": "1762100"
  },
  {
    "text": "our goal is to make eks integrate kubernetes with a VPC networking as best as possible and this is simpler for",
    "start": "1762100",
    "end": "1769060"
  },
  {
    "text": "folks who know VPC networking but if you're used to just maybe an overlay network there are some things to kind of adjust to and learn about so we have our",
    "start": "1769060",
    "end": "1775630"
  },
  {
    "text": "own CNI plugin we're going to talk about how that works well first slide though is here's how our cross count networking works so we have two VP C's we have the",
    "start": "1775630",
    "end": "1782830"
  },
  {
    "text": "customer VP C on the left it's a outlined in green there's worker nodes in there for outbound internet",
    "start": "1782830",
    "end": "1788620"
  },
  {
    "text": "access or for access into the cluster they reach out through the internet to our network load balancer that exposes",
    "start": "1788620",
    "end": "1793870"
  },
  {
    "text": "that kubernetes api endpoint and that sends communication to the API servers running in Amazon eks that's all within",
    "start": "1793870",
    "end": "1799720"
  },
  {
    "text": "our VP C however there are commands in kubernetes like exec and logs and proxy where actually the COO boot is the",
    "start": "1799720",
    "end": "1806110"
  },
  {
    "text": "server and the API server on our side has to is the client and has to initiate a connection to the couplet so we need",
    "start": "1806110",
    "end": "1812710"
  },
  {
    "text": "access into your V PC in order to do that and the way that we get that access is we actually provision an e and I that",
    "start": "1812710",
    "end": "1818500"
  },
  {
    "text": "we in your VPC so you will look at if you look at that object the E&I object in",
    "start": "1818500",
    "end": "1824740"
  },
  {
    "text": "your V PC you'll see that your account is the owner for it but there's a separate owner which is the attachment owner and that's one of our accounts and",
    "start": "1824740",
    "end": "1831460"
  },
  {
    "text": "we basically attach this to one of our API servers on our side and then we have a route into your V PC which allows us",
    "start": "1831460",
    "end": "1837850"
  },
  {
    "text": "to say for anything that needs exact logs proxy we go out over this route into your V PC and this is all encrypted",
    "start": "1837850",
    "end": "1844570"
  },
  {
    "text": "with SSL right so this is all TLS Kubla tizzle sitting on a secure port only",
    "start": "1844570",
    "end": "1850169"
  },
  {
    "start": "1859000",
    "end": "1859000"
  },
  {
    "text": "we also have a CNI plugin so we saw a little bit about the networking on the",
    "start": "1859830",
    "end": "1864940"
  },
  {
    "text": "master instances but let's see how the pod networking works so this is what runs in your account and this is kind of critical to understand how your",
    "start": "1864940",
    "end": "1870820"
  },
  {
    "text": "application is kind of community communicate to each other and to external resources right so we as part",
    "start": "1870820",
    "end": "1876610"
  },
  {
    "text": "of eks launched we announced the CNI plugin which is an open source project lives on github repositories linked here",
    "start": "1876610",
    "end": "1881669"
  },
  {
    "text": "it's called the AWS DPC C&I and this is something you can use on your own it's not only for eks but there's folks using",
    "start": "1881669",
    "end": "1888280"
  },
  {
    "text": "it in chaos for example so it's in it's in caps if you want to use it as for experimental purposes or for development",
    "start": "1888280",
    "end": "1894850"
  },
  {
    "text": "whatever but so one of the one of the tenants of the VPC plug-in is to provide you know first-class networking support",
    "start": "1894850",
    "end": "1901030"
  },
  {
    "text": "for AWS for pods and kubernetes and so this basically means that every pod in",
    "start": "1901030",
    "end": "1907090"
  },
  {
    "text": "your VP's in your kubernetes cluster gets a native VPC IP address so one of",
    "start": "1907090",
    "end": "1917289"
  },
  {
    "text": "the benefits of this is for debugging purposes you can go directly to your pod load balancers can go directly to the",
    "start": "1917289",
    "end": "1924280"
  },
  {
    "text": "pod IP addresses instead of going through a node port which requires an additional hops there's performance benefits here we've had a couple of",
    "start": "1924280",
    "end": "1930070"
  },
  {
    "text": "customers tell us things like hey we've actually shaved a couple of milliseconds off of our apps application response time by switching to your CNI from it",
    "start": "1930070",
    "end": "1936909"
  },
  {
    "text": "encapsulated overlay which is really cool so the CNI plugin attaches Annie and I",
    "start": "1936909",
    "end": "1942419"
  },
  {
    "text": "on demand to the worker nodes where the pods run so it then uses secondary IP",
    "start": "1942419",
    "end": "1947950"
  },
  {
    "text": "addresses by calling ec2 associate address to the instances and you can",
    "start": "1947950",
    "end": "1953320"
  },
  {
    "text": "kind of control how many are allocated at once but this basically allows us this approach allows us to get more pod",
    "start": "1953320",
    "end": "1959169"
  },
  {
    "text": "density per instance so if you look in the ec2 networking documentation you can see four different instance types they",
    "start": "1959169",
    "end": "1964780"
  },
  {
    "text": "can support different numbers of en eyes per instance and as instance types get bigger the en eyes can also support more",
    "start": "1964780",
    "end": "1971200"
  },
  {
    "text": "secondary IP addresses so if you have like a t2 you might be looking at two en eyes total and maybe you know six or",
    "start": "1971200",
    "end": "1976960"
  },
  {
    "text": "eight secondary ip's total but as you get up to something like I don't know an r5 XL you have 15 en eyes and you have",
    "start": "1976960",
    "end": "1983710"
  },
  {
    "text": "30 or 40 secondary IP addresses per te and I so the pod density scales with the instance size naturally",
    "start": "1983710",
    "end": "1989610"
  },
  {
    "text": "so in this workflow here as pods have scheduled onto the nodes in",
    "start": "1989610",
    "end": "1995270"
  },
  {
    "text": "your cluster the CNI there's a plug-in or there's a component of the CNI that's responsible for actually wiring up the",
    "start": "1995270",
    "end": "2001090"
  },
  {
    "text": "network interfaces for you so these secondary IPS get attached to Annie and I and the C&I plugin knows how to say",
    "start": "2001090",
    "end": "2006580"
  },
  {
    "text": "okay when a pot is scheduled I'll actually take this IP and I'll wire it into the pod so what does this mean this",
    "start": "2006580",
    "end": "2016570"
  },
  {
    "text": "basically means that as mentioned earlier you do need to size your VPC appropriately for this kind of IP address consumption and this might be",
    "start": "2016570",
    "end": "2022930"
  },
  {
    "text": "problematic in certain situations where maybe you have a legacy network or you're using all the 1918 space in your",
    "start": "2022930",
    "end": "2028480"
  },
  {
    "text": "network maybe you're in high SP or you have a network from the 80s something like that not a joke for real and maybe",
    "start": "2028480",
    "end": "2035290"
  },
  {
    "text": "you're saying I can't allocate a bunch of IP address space from my for my V PC so what can I do in this case so there",
    "start": "2035290",
    "end": "2041770"
  },
  {
    "start": "2041000",
    "end": "2041000"
  },
  {
    "text": "is a new feature in the CNI plug-in and I think when 1.2 or newer we just released 1.3 before we came to this",
    "start": "2041770",
    "end": "2047710"
  },
  {
    "text": "conference but this allows you to set up what we call custom networking for pods so if you're familiar with the V PC you",
    "start": "2047710",
    "end": "2054100"
  },
  {
    "text": "can actually do things like add secondary IP addresses to your secondary",
    "start": "2054100",
    "end": "2059139"
  },
  {
    "text": "IP ranges to your V PC so you can extend your V PC network with either additional",
    "start": "2059140",
    "end": "2064210"
  },
  {
    "text": "private IP address ranges or alternative IP ranges like the C gene that space you",
    "start": "2064210",
    "end": "2071200"
  },
  {
    "text": "know there's spaces like 1 9 I forget 198 that 19.00 / 16 so there's a V PC",
    "start": "2071200",
    "end": "2078220"
  },
  {
    "text": "documentation page that kind of tells you all the different ranges that are supported by the V PC but what you can do now is you can add these ranges to",
    "start": "2078220",
    "end": "2084879"
  },
  {
    "text": "your V PC and not consume space out of your private IP space and you can tell pods to actually use these IPS only so",
    "start": "2084880",
    "end": "2091899"
  },
  {
    "text": "this is done through the custom networking support in the cni plugin and there's a couple of steps you need to do to get this to work so first of all you",
    "start": "2091900",
    "end": "2098560"
  },
  {
    "text": "need to enable the feature and this is just a key value an environment variable in the AWS node gaming set a to be us",
    "start": "2098560",
    "end": "2105370"
  },
  {
    "text": "know daemon set is the cni plugin right you then also need to deploy a custom resource that's responsible for actually",
    "start": "2105370",
    "end": "2112120"
  },
  {
    "text": "applying the custom network configs to your pods and then you can create a",
    "start": "2112120",
    "end": "2117250"
  },
  {
    "text": "custom resource definition which we call an e and i config and there's some metadata you give it a name and you",
    "start": "2117250",
    "end": "2123160"
  },
  {
    "text": "basically say what subnet should my pods get an IP from so when you add that secondary range to your V PC you can create",
    "start": "2123160",
    "end": "2129950"
  },
  {
    "text": "subnets in that secondary range once the subnets exist you can drop your pods into them basically and then finally to",
    "start": "2129950",
    "end": "2141290"
  },
  {
    "text": "make the nodes actually use this custom configu just need to annotate the nodes so this is just a little bit of additional metadata but once this",
    "start": "2141290",
    "end": "2149930"
  },
  {
    "text": "happens then you have the ability to support much more advanced networking configurations and I've dropped a couple of slides from this because we had some",
    "start": "2149930",
    "end": "2157160"
  },
  {
    "text": "really in-depth discussions on like C and I using like source netting and everything like that I'm gonna move on from that stuff and",
    "start": "2157160",
    "end": "2163670"
  },
  {
    "text": "instead just talk about how does this help you support advanced networking architectures with eks so in this case",
    "start": "2163670",
    "end": "2170210"
  },
  {
    "start": "2165000",
    "end": "2165000"
  },
  {
    "text": "you might have a corporate datacenter and many of us do and then that has a 10.8 range we're 10.1 0 0 16 but we also",
    "start": "2170210",
    "end": "2178160"
  },
  {
    "text": "have a V PC which can support multiple IP ranges so let's say that our primary subnet is a 10.0 and we need to make",
    "start": "2178160",
    "end": "2184850"
  },
  {
    "text": "sure that these have connectivity always right because you might have applications on Prem that your pods need",
    "start": "2184850",
    "end": "2190160"
  },
  {
    "text": "to speak to you need full connectivity between these things so you have something like a customer gateway you've got a VPN or Direct Connect and you want",
    "start": "2190160",
    "end": "2197750"
  },
  {
    "text": "to make sure these things work because you're paying good money for them so in the case where you have an e caste worker node the primary and I basically",
    "start": "2197750",
    "end": "2204320"
  },
  {
    "text": "always remains on the primary subnet in your V PC right this is to make sure that the worker node can communicate",
    "start": "2204320",
    "end": "2209930"
  },
  {
    "text": "using like the default route table all the default things for your primary sub that's near V PC and this would also",
    "start": "2209930",
    "end": "2215240"
  },
  {
    "text": "ensure that we have communication back over to your on premise data center when",
    "start": "2215240",
    "end": "2220580"
  },
  {
    "text": "you have a secondary subnet added to your V PC the worker node can span this by adding an e and I and adding a pod to",
    "start": "2220580",
    "end": "2226820"
  },
  {
    "text": "it so when those pods get scheduled they get an E and I dedicated to the from the secondary subnet dedicated to the pod",
    "start": "2226820",
    "end": "2232700"
  },
  {
    "text": "and we're using the 164 0 to 0/10 CG net space so we can just assign a bunch of",
    "start": "2232700",
    "end": "2239210"
  },
  {
    "text": "ip's to pods from this particular subnet so this is a all well and good but you",
    "start": "2239210",
    "end": "2246110"
  },
  {
    "text": "might be thinking like what about those pods and they need to reach out to they still need to reach out to the on-prem data center how does that work so we do",
    "start": "2246110",
    "end": "2253790"
  },
  {
    "text": "what's called source netting I'm sure people are familiar with that but the default behavior for the cni plug-in is",
    "start": "2253790",
    "end": "2259670"
  },
  {
    "text": "to do outbound source netting and make it look like the traffic coming from the secondary IP on the pods is coming from",
    "start": "2259670",
    "end": "2265400"
  },
  {
    "text": "the primary Eni on the instances so this means the egress behavior for those pods",
    "start": "2265400",
    "end": "2270560"
  },
  {
    "text": "is no different than if it was coming from just like a running on the host using the primary Eni that source",
    "start": "2270560",
    "end": "2277670"
  },
  {
    "text": "netting behavior basically has the hypervisor underneath to all the connection tracking so the return traffic also works just fine you also",
    "start": "2277670",
    "end": "2285980"
  },
  {
    "text": "have the ability with the CNI plugin to toggle like should it do that source netting by default so you have a lot of control over how do the pods traffic",
    "start": "2285980",
    "end": "2294200"
  },
  {
    "text": "look when it's leaving the node and when it's leaving my V PC so if you have some additional requirements on how to route that traffic we can support you and",
    "start": "2294200",
    "end": "2300830"
  },
  {
    "text": "there's a lot of knobs basically hidden that had documented in the C and I plug in documentation today so if there's an",
    "start": "2300830",
    "end": "2308150"
  },
  {
    "text": "interest in talking about this sort of stuff we'd love to work with you on it we've been seeing more and more of these sort of things creative networking",
    "start": "2308150",
    "end": "2313220"
  },
  {
    "text": "infrastructures additionally working with things like the transit gateway and VP C at the end of the day this is all",
    "start": "2313220",
    "end": "2319010"
  },
  {
    "text": "native EPC networking so if you're not a VP C network engineer it can be a little bit daunting because we're just mapping",
    "start": "2319010",
    "end": "2324260"
  },
  {
    "text": "it to kubernetes but at the end of the day it's really all just VP C so that could be a benefit or a negative",
    "start": "2324260",
    "end": "2330680"
  },
  {
    "text": "depending on your perspective on how good you are the tpc networking I'm",
    "start": "2330680",
    "end": "2338210"
  },
  {
    "start": "2338000",
    "end": "2338000"
  },
  {
    "text": "doing pretty good on time so I'm definitely to make sure of time for some questions afterwards we'll hang out down front and we'll talk about this we've",
    "start": "2338210",
    "end": "2343280"
  },
  {
    "text": "got a couple of extra sections here about load balancing that I want to talk about and you know at this point we now",
    "start": "2343280",
    "end": "2349220"
  },
  {
    "text": "have support for all three networking options or load balancing options in kubernetes so obviously the classic load",
    "start": "2349220",
    "end": "2355940"
  },
  {
    "text": "balancer is the default that's the one we all know if you have a service of type load balancer in kubernetes kubernetes says ok I'm gonna go and",
    "start": "2355940",
    "end": "2362060"
  },
  {
    "text": "create that and I'll attach it to your service I'll attach to the pods that run in your deployment the classic load",
    "start": "2362060",
    "end": "2367880"
  },
  {
    "text": "balancer is great but there are new options that are kind of just now becoming well supported in kubernetes so the network load balancer",
    "start": "2367880",
    "end": "2374960"
  },
  {
    "text": "is a layer 4 load balancer and this is a basically a drop-in replacement for the way that kubernetes uses the classic",
    "start": "2374960",
    "end": "2380030"
  },
  {
    "text": "load balancer so the NLB is an option for when you create a service of type load balancer and it works much the same",
    "start": "2380030",
    "end": "2386660"
  },
  {
    "text": "although it's higher performance you get cool features like static IP addresses and it's really purpose-built for for",
    "start": "2386660",
    "end": "2392930"
  },
  {
    "text": "layer 4 use cases so the other thing I would add is that you can use both internal and external",
    "start": "2392930",
    "end": "2398010"
  },
  {
    "text": "load balancers with kubernetes and with eks this sort of setup is no different than if you're using you know kubernetes",
    "start": "2398010",
    "end": "2403440"
  },
  {
    "text": "upstream or running it yourself on ec2 uks supports it the same way so let's look at how that actually works so it's",
    "start": "2403440",
    "end": "2410490"
  },
  {
    "text": "all annotation based right when you actually create that service that says I would like a load balancer please",
    "start": "2410490",
    "end": "2415920"
  },
  {
    "text": "kubernetes you just add a couple of pieces of metadata so when kubernetes goes off to create that load balancer it",
    "start": "2415920",
    "end": "2421230"
  },
  {
    "text": "has instructions for how to do it for you so the first important one is the internal load balancer annotation you",
    "start": "2421230",
    "end": "2428730"
  },
  {
    "text": "must add this and you must also have a private subnet that kubernetes knows about for this to work if you add this",
    "start": "2428730",
    "end": "2433770"
  },
  {
    "text": "annotation and eks only knows about public subnets you're going to get a failure in placement of your load balancer so as long as this is there",
    "start": "2433770",
    "end": "2440760"
  },
  {
    "text": "there's a private subnet with the appropriate tag on it kubernetes will create the internal load balancer for you if you also want to use a network",
    "start": "2440760",
    "end": "2449400"
  },
  {
    "text": "load balancer this is again an annotation on your service so same way that you would do it for an internal load balancer you just have to specify",
    "start": "2449400",
    "end": "2454920"
  },
  {
    "text": "that you want to use NLB this is a beta annotation although it's probably alpha and it's implementation it's relatively",
    "start": "2454920",
    "end": "2461070"
  },
  {
    "text": "new it does work for basic use cases but there's also still edge cases where that functionality might not be there for you",
    "start": "2461070",
    "end": "2467160"
  },
  {
    "text": "yet so this is being evolved you'll see us continue to add functionality to this as we get through later kubernetes",
    "start": "2467160",
    "end": "2473010"
  },
  {
    "text": "versions I would say probably one got one dot 13 or so is where we'll see a you know like a proper beta for the",
    "start": "2473010",
    "end": "2478140"
  },
  {
    "text": "network load balancer then we also have",
    "start": "2478140",
    "end": "2486510"
  },
  {
    "start": "2480000",
    "end": "2480000"
  },
  {
    "text": "the alb ingress controller so this is something that's existed for a while the history of this is basically our",
    "start": "2486510",
    "end": "2492960"
  },
  {
    "text": "partners core OS and ticketmaster wrote this a long time ago and we were very",
    "start": "2492960",
    "end": "2498960"
  },
  {
    "text": "interested in the design approach it's a really nice really nice design that kind of gracefully Maps the alb to the",
    "start": "2498960",
    "end": "2505680"
  },
  {
    "text": "ingress resource or API in kubernetes so ingress if you're not familiar is really",
    "start": "2505680",
    "end": "2510990"
  },
  {
    "text": "the you know layer 7 abstraction for kubernetes and it Maps really well there's a lot of other options for",
    "start": "2510990",
    "end": "2516810"
  },
  {
    "text": "ingress like nginx but alb fits really well for this model so this is something that you can check out on github the",
    "start": "2516810",
    "end": "2523470"
  },
  {
    "text": "developments done all in the open and we actually have a bunch of customers using in production today I'll say a handful",
    "start": "2523470",
    "end": "2528730"
  },
  {
    "text": "of enterprise customers running production workloads on it which has been great and it's helped really accelerate the development for us and",
    "start": "2528730",
    "end": "2534640"
  },
  {
    "text": "pick the right things to work on so this has existed for I would say probably a",
    "start": "2534640",
    "end": "2539950"
  },
  {
    "text": "little over a year and we've put a lot of work into it over the past couple of months added a bunch of things like test",
    "start": "2539950",
    "end": "2545020"
  },
  {
    "text": "coverage and making sure it's just like a robust production ready work codebase so if you want to use this in production",
    "start": "2545020",
    "end": "2551109"
  },
  {
    "text": "we will support you with it if you run it on eks and you run into an issue you can cut us a support ticket this is part",
    "start": "2551109",
    "end": "2556869"
  },
  {
    "text": "of the service now and this is our official recommended way of using the application load balancer so it's here",
    "start": "2556869",
    "end": "2562180"
  },
  {
    "text": "so let's walk through how this thing actually works so this enables you to expose applications inside the cluster",
    "start": "2562180",
    "end": "2568750"
  },
  {
    "text": "as an external HTTP or HTTPS service right the alb ingress controller does",
    "start": "2568750",
    "end": "2574300"
  },
  {
    "text": "this by integrating these applications the alb just exposing exposing them to",
    "start": "2574300",
    "end": "2579700"
  },
  {
    "text": "the outside world this really relies on the alb to provide all the content based routing functionality so to use the alb ingress",
    "start": "2579700",
    "end": "2587859"
  },
  {
    "text": "controller you would first deploy it as a deployment on one of your worker nodes so this is just a little app that",
    "start": "2587859",
    "end": "2593829"
  },
  {
    "text": "watches the API server just spins and looks for notifications from the API server essentially that says hey",
    "start": "2593829",
    "end": "2599770"
  },
  {
    "text": "someone's created an ingress resource so you can think about an ingress resource as being analogous to like a service",
    "start": "2599770",
    "end": "2605530"
  },
  {
    "text": "resource or a service definition when you create a regular load balancer and what this does for you is it specifies",
    "start": "2605530",
    "end": "2611700"
  },
  {
    "text": "that a I would like an al B and then it also specifies things like what routes should it have what subnets what",
    "start": "2611700",
    "end": "2617230"
  },
  {
    "text": "security groups there's a bunch of a AWS abstractions in this ingress resource that are required for the alb ingress",
    "start": "2617230",
    "end": "2622839"
  },
  {
    "text": "controller but you can think about creating an al be just to the console the same sort of information is needed by the ingress controller so when you",
    "start": "2622839",
    "end": "2630339"
  },
  {
    "text": "create that ingress resource what actually ends up happening here is the",
    "start": "2630339",
    "end": "2635790"
  },
  {
    "text": "ingress controller kind of kicks in and starts creating the alb for you so it looks at all the configuration looks at",
    "start": "2635790",
    "end": "2642190"
  },
  {
    "text": "the service and needs to connect it to and so it will do something like create an HTTP listener depending what you",
    "start": "2642190",
    "end": "2647589"
  },
  {
    "text": "specify and it will create what's called a rule and so this is your route this can be a path or a host route and this",
    "start": "2647589",
    "end": "2653740"
  },
  {
    "text": "points to a target group so bear with me here there's a target group is a load",
    "start": "2653740",
    "end": "2658900"
  },
  {
    "text": "balancing abstraction for us and it's just like which instances or which IP addresses live behind the load balancer",
    "start": "2658900",
    "end": "2664400"
  },
  {
    "text": "we're gonna call this instance mode because the way this actually works is the traffic is routed to the node ports",
    "start": "2664400",
    "end": "2670050"
  },
  {
    "text": "on the nodes in your cluster so this means that cout proxy will work here behind the scenes and find out how to",
    "start": "2670050",
    "end": "2677100"
  },
  {
    "text": "get this traffic to your pods but this is one of the modes the alb ingress controller supports we'll call it",
    "start": "2677100",
    "end": "2682560"
  },
  {
    "text": "instance mode so our charcuterie route here if you need information about delicious meats goes through our blue",
    "start": "2682560",
    "end": "2690540"
  },
  {
    "text": "application through the node point you could also have another listener here the HTTP listener although it's not required to have separate listeners you",
    "start": "2690540",
    "end": "2697260"
  },
  {
    "text": "can have the same one on the front end but you can have different rules behind this behind the scenes so our cheese's application here the important thing",
    "start": "2697260",
    "end": "2703920"
  },
  {
    "text": "about cheese's is probably gonna have a little bit better app application performance than the charcuterie application because it's using what we",
    "start": "2703920",
    "end": "2710130"
  },
  {
    "text": "call IP mode an IP mode points directly to the IP addresses of the pods running",
    "start": "2710130",
    "end": "2715290"
  },
  {
    "text": "in your service so remember those VPC native IP addresses that we give you with our C&I plugin these are checked into the load balancer",
    "start": "2715290",
    "end": "2723150"
  },
  {
    "text": "so when you look at the target web configuration in these different modes behind the load balancer you'll see",
    "start": "2723150",
    "end": "2728250"
  },
  {
    "text": "different things right so you'll see a bunch of either instance IP addresses with a high level port mapping like node port or you'll see a bunch of IP",
    "start": "2728250",
    "end": "2734850"
  },
  {
    "text": "addresses that directly map the pods running in your service so you have the option of both you can kind of mix and",
    "start": "2734850",
    "end": "2740160"
  },
  {
    "text": "match this is a very flexible tool and we're really excited to have this available for you guys so highly",
    "start": "2740160",
    "end": "2746490"
  },
  {
    "text": "recommended pick this up if you're looking for a way to do some layer 7 content based routing functionality and kubernetes this works great so a quick",
    "start": "2746490",
    "end": "2756330"
  },
  {
    "start": "2755000",
    "end": "2755000"
  },
  {
    "text": "recap we want GA for production workloads in June after running a long preview important stuff the alb ingress",
    "start": "2756330",
    "end": "2763950"
  },
  {
    "text": "controller is now one oh it's open source it's ready for production workloads now go ahead and grab it it's a single deployment to get on your",
    "start": "2763950",
    "end": "2769800"
  },
  {
    "text": "cluster so fairly straightforward we do have new features coming so as soon as you get back home from reinvent you'll",
    "start": "2769800",
    "end": "2775020"
  },
  {
    "text": "have kubernetes version updates and kubernetes 1.11.506",
    "start": "2775020",
    "end": "2780440"
  },
  {
    "text": "which is that we know that global availability is really important for eks customers we started with only Virginia",
    "start": "2794670",
    "end": "2800730"
  },
  {
    "text": "and Oregon recently we added Ireland in Ohio and then watch out a pack coming",
    "start": "2800730",
    "end": "2807210"
  },
  {
    "text": "soon before the end of the year you'll see Singapore Sydney's Seoul Tokyo and Frankfurt available for eks and we'll",
    "start": "2807210",
    "end": "2812579"
  },
  {
    "text": "kind of continue this velocity adding a bunch of regions through early next year so we don't see yours here we're gonna",
    "start": "2812579",
    "end": "2817650"
  },
  {
    "text": "get to I promise so I've got a little bit of time I want",
    "start": "2817650",
    "end": "2822779"
  },
  {
    "text": "to go into a demo for updates but I need to make sure my machine they get",
    "start": "2822779",
    "end": "2828359"
  },
  {
    "text": "hibernated so give me a second here cool so I have a couple pods running on a",
    "start": "2828359",
    "end": "2833819"
  },
  {
    "text": "cluster this cluster is my pineapple cluster here which is can we see that",
    "start": "2833819",
    "end": "2841319"
  },
  {
    "text": "cool so this is running 1.10 today we've also had kind of a refresh of the UK s",
    "start": "2841319",
    "end": "2847049"
  },
  {
    "text": "console making it a little bit easier to use adding additional details giving the direct links to like the network and resources for your cluster we're gonna",
    "start": "2847049",
    "end": "2853470"
  },
  {
    "text": "keep working on this in the really slick new design language for the console you'll see kind of all AWS services move",
    "start": "2853470",
    "end": "2859109"
  },
  {
    "text": "this over a period of time I love having it by default though so you'll notice something different here there is an",
    "start": "2859109",
    "end": "2865230"
  },
  {
    "text": "update cluster version API available for you so let's look at what this actually looks like to walk through so pretty",
    "start": "2865230",
    "end": "2870839"
  },
  {
    "text": "straightforward we have of course 111 as the only option today but this is what",
    "start": "2870839",
    "end": "2876089"
  },
  {
    "text": "we can update to so let's go ahead and kick that off and we're just gonna type",
    "start": "2876089",
    "end": "2882150"
  },
  {
    "text": "the cluster name to confirm that we actually want to do that update it is an irreversible action there's no rollback today so I think one of the things we",
    "start": "2882150",
    "end": "2888930"
  },
  {
    "text": "want to call out is that if you're gonna be doing this update on your production cluster we'd highly recommend that you also run your applications on a test",
    "start": "2888930",
    "end": "2894779"
  },
  {
    "text": "cluster and do that update not in production make sure that you're you know not dependent on a kubernetes api",
    "start": "2894779",
    "end": "2900750"
  },
  {
    "text": "that's gonna change significantly between these versions and catch you by surprise so highly recommend building",
    "start": "2900750",
    "end": "2906359"
  },
  {
    "text": "this into a CI system or something and have this testing framework in place I find that the more of the kubernetes API",
    "start": "2906359",
    "end": "2913200"
  },
  {
    "text": "surface your application touches the more likely you are to run into issues because things change so dramatically between kubernetes versions so just be",
    "start": "2913200",
    "end": "2919769"
  },
  {
    "text": "aware of that let's confirm the update and sit so here we go we've got a flash",
    "start": "2919769",
    "end": "2925019"
  },
  {
    "text": "bar telling us the cluster version update is in progress here's the link to the documentation for your worker nodes you can of course run",
    "start": "2925019",
    "end": "2931510"
  },
  {
    "text": "worker nodes in kind of a mixed configuration kubernetes backwards compatibility is pretty good so you can run one ten nodes of one eleven control",
    "start": "2931510",
    "end": "2938290"
  },
  {
    "text": "plane although you might have some unpredictable behavior for new api's and stuff that's changed between those versions so what we want to look at here",
    "start": "2938290",
    "end": "2945820"
  },
  {
    "text": "is down here we actually have the update in progress and so we can get information about this update ID so this",
    "start": "2945820",
    "end": "2951580"
  },
  {
    "text": "is a new API object this is an asynchronous job that's happening behind the scenes we have the job type we have",
    "start": "2951580",
    "end": "2957190"
  },
  {
    "text": "the submission time we have the status so we can actually come in here and get additional details about this update and",
    "start": "2957190",
    "end": "2963070"
  },
  {
    "text": "if there were any air is for example like if I had you know if my cluster was in a degraded State for some reason I deleted my V PC you can see that show up",
    "start": "2963070",
    "end": "2969670"
  },
  {
    "text": "here and it would tell you specifically why that would be a problem the only thing I wanted to I wanted to show on a",
    "start": "2969670",
    "end": "2977650"
  },
  {
    "text": "second here",
    "start": "2977650",
    "end": "2980130"
  },
  {
    "text": "so if we go back to my worker nodes here we can still see that the cluster is",
    "start": "2984660",
    "end": "2989920"
  },
  {
    "text": "responding and we can do something like see that we're gonna exactly the busybox container and also curl my nginx",
    "start": "2989920",
    "end": "2996070"
  },
  {
    "text": "application and see that my apps are still running during this particular upgrade process so this is a fully online application up or a version",
    "start": "2996070",
    "end": "3003240"
  },
  {
    "text": "update your apps will still run and we're doing this in a very steady and you know measured way behind the scenes",
    "start": "3003240",
    "end": "3008490"
  },
  {
    "text": "to make sure there's no connectivity interruptions for your control plane so that's it for me I still have nine minutes left and I think we have some",
    "start": "3008490",
    "end": "3014340"
  },
  {
    "text": "time to the next session starts I would love to hear questions and meet you guys thanks for coming with this session this morning",
    "start": "3014340",
    "end": "3019580"
  },
  {
    "text": "[Applause]",
    "start": "3019580",
    "end": "3023360"
  }
]