[
  {
    "start": "0",
    "end": "41000"
  },
  {
    "text": "welcome everybody today's session is called hosting a massively scalable",
    "start": "380",
    "end": "5700"
  },
  {
    "text": "website around the world for a fraction of the cost in a DevOps model so we're",
    "start": "5700",
    "end": "11130"
  },
  {
    "text": "actually going to be talking about how this relates to serverless architectures who here is interested in server list",
    "start": "11130",
    "end": "17190"
  },
  {
    "text": "who here has a good foundation of server lists okay so just to reiterate this is a",
    "start": "17190",
    "end": "23609"
  },
  {
    "text": "level one session and not really a deep dive so we are gonna try to keep it somewhat general and just discuss the",
    "start": "23609",
    "end": "29609"
  },
  {
    "text": "background of server list a little bit of details of how AWS instantiate server lists and what we could do with server",
    "start": "29609",
    "end": "35610"
  },
  {
    "text": "lists by these by these scalable architectures so what can you expect",
    "start": "35610",
    "end": "43800"
  },
  {
    "start": "41000",
    "end": "101000"
  },
  {
    "text": "from this session well we're going to talk about server list well what does this mean we're gonna review the cloud",
    "start": "43800",
    "end": "51090"
  },
  {
    "text": "computing evolution that brought us to this new paradigm we're also going to look at how this compares to traditional",
    "start": "51090",
    "end": "57030"
  },
  {
    "text": "computing approaches we're gonna talk a little bit about serverless design and scalability principles we're gonna",
    "start": "57030",
    "end": "63780"
  },
  {
    "text": "identify AWS services that support this model we're gonna review some simple and",
    "start": "63780",
    "end": "69450"
  },
  {
    "text": "complex architectural patterns along with some diagrams and examples we're",
    "start": "69450",
    "end": "74760"
  },
  {
    "text": "also going to look at how serverless takes advantage of scalability and some development approaches to service",
    "start": "74760",
    "end": "80310"
  },
  {
    "text": "architectures both structured and unstructured we're gonna talk about cost-effectiveness how we can compare",
    "start": "80310",
    "end": "86820"
  },
  {
    "text": "load and costs on a traditional site versus a serverless site how we can prepare and look at the total cost of",
    "start": "86820",
    "end": "92970"
  },
  {
    "text": "ownership for these workloads a sample pricing example and then also some real-world use cases",
    "start": "92970",
    "end": "100460"
  },
  {
    "start": "101000",
    "end": "153000"
  },
  {
    "text": "my name is paul andrew ski i'm a senior cloud architect with cloud nexor my name",
    "start": "101450",
    "end": "107159"
  },
  {
    "text": "is MJ de bear Dina I'm the CTO and one of the founding members of Cloud exa and real quick just a brief history of who",
    "start": "107159",
    "end": "115020"
  },
  {
    "text": "kinnexa is we we've been a partner of AWS since 2008 we're currently a premier",
    "start": "115020",
    "end": "122219"
  },
  {
    "text": "partner in a managed service provider we have as a total of search 50-plus within",
    "start": "122219",
    "end": "130440"
  },
  {
    "text": "our company we also have what's called a cloud warrior so we have a program",
    "start": "130440",
    "end": "136180"
  },
  {
    "text": "within cloud AXA where if you earn all five of your certifications you're classified as a cloud warrior we have",
    "start": "136180",
    "end": "142930"
  },
  {
    "text": "six of those members Paul and I included you good yep okay so let's talk a little",
    "start": "142930",
    "end": "156100"
  },
  {
    "start": "153000",
    "end": "465000"
  },
  {
    "text": "bit about going serverless and what this means but before we do that we should",
    "start": "156100",
    "end": "161110"
  },
  {
    "text": "take a little bit of a look at the history or the evolution of cloud computing so there's many historical perspectives",
    "start": "161110",
    "end": "167410"
  },
  {
    "text": "that we can take but one way that we can look at this is through the perspective of increasing abstraction so originally",
    "start": "167410",
    "end": "174070"
  },
  {
    "text": "servers were hosted on-premise and closets these were eventually moved over into data centers and once we moved into",
    "start": "174070",
    "end": "179769"
  },
  {
    "text": "data centers virtualization was a huge enabling technology for this the hardware was the unit of scale and our",
    "start": "179769",
    "end": "185530"
  },
  {
    "text": "physical hosting environment was abstract away the next major shift came with infrastructure as a service or IaaS the",
    "start": "185530",
    "end": "194140"
  },
  {
    "text": "physical Hardware became abstracted away and our operating system now became our unit of scale in AWS this is sometimes",
    "start": "194140",
    "end": "200739"
  },
  {
    "text": "referred to as infrastructure services some easy examples to list would be the",
    "start": "200739",
    "end": "205750"
  },
  {
    "text": "Elastic Compute cloud EBS V PC the next iteration we can look at is platform as",
    "start": "205750",
    "end": "212350"
  },
  {
    "text": "a service with platform as a service the operating system as abstract it away and the application alone becomes the unit",
    "start": "212350",
    "end": "219730"
  },
  {
    "text": "of scale in AWS this is sometimes referred to as container services not to be confused with docker or the ec2",
    "start": "219730",
    "end": "226000"
  },
  {
    "text": "container service examples of this would be the relational database service or EMR and last but not least we come to",
    "start": "226000",
    "end": "233380"
  },
  {
    "text": "server list computing sometimes identified by the acronyms FAS or function as a service bas backend as a",
    "start": "233380",
    "end": "240820"
  },
  {
    "text": "service or mobile backend as a service with server lists AWS sometimes",
    "start": "240820",
    "end": "246400"
  },
  {
    "text": "identifies this as abstracted services but essentially the length language run runtime is abstracted and we are just",
    "start": "246400",
    "end": "253750"
  },
  {
    "text": "presented with the function as our unit of scale some examples with AWS would be",
    "start": "253750",
    "end": "259660"
  },
  {
    "text": "lamda API gateway and Cognito",
    "start": "259660",
    "end": "263910"
  },
  {
    "text": "so let's look at some characteristics of a sample server based architecture in",
    "start": "270250",
    "end": "275330"
  },
  {
    "text": "AWS running in our infrastructure as a service mode we can focus on a multi",
    "start": "275330",
    "end": "280730"
  },
  {
    "text": "tier architecture particularly a sample three-tier setup a multi tier architecture is a cornerstone",
    "start": "280730",
    "end": "287260"
  },
  {
    "text": "architecture pattern with guidelines for ensuring decoupled and scalable application components we segregate web",
    "start": "287260",
    "end": "296060"
  },
  {
    "text": "application and database tiers but for this presentation we're going to refer to them as the presentation layer the",
    "start": "296060",
    "end": "301340"
  },
  {
    "text": "logic layer and the data layer in a multi-tier application the network acts",
    "start": "301340",
    "end": "306890"
  },
  {
    "text": "as the boundary between all the tiers the code is not really that innovative in fact you might say that it's a direct",
    "start": "306890",
    "end": "313130"
  },
  {
    "text": "result of the actual pattern maybe even driven by the entir pattern so let's",
    "start": "313130",
    "end": "318800"
  },
  {
    "text": "break down the tiers for this example for the presentation layer we can instantiate this using ec2 instances",
    "start": "318800",
    "end": "324860"
  },
  {
    "text": "that act as web servers for the logic layer we can use again ec2 instances",
    "start": "324860",
    "end": "329960"
  },
  {
    "text": "that act as application servers performing some kind of logic processing for the data tier we can use ec2",
    "start": "329960",
    "end": "336950"
  },
  {
    "text": "instances or relational database server instances some other notable characteristics to consider is that we",
    "start": "336950",
    "end": "344390"
  },
  {
    "text": "have to manage server resources we have to manage and configure the operating system EBS volumes and storage the types",
    "start": "344390",
    "end": "351830"
  },
  {
    "text": "of instances that we choose the cost associated with all of that we have to",
    "start": "351830",
    "end": "357050"
  },
  {
    "text": "also manage the supporting software that runs on these servers this can also include licensing costs this can also",
    "start": "357050",
    "end": "363230"
  },
  {
    "text": "include any additional integration points that we own so capacity and",
    "start": "363230",
    "end": "368960"
  },
  {
    "text": "performance planning becomes an issue as we're responsible for scalability we're responsible for all levels of",
    "start": "368960",
    "end": "374150"
  },
  {
    "text": "forecasting and ultimately the cost for all this aligning costs with utilization",
    "start": "374150",
    "end": "379310"
  },
  {
    "text": "can be a very difficult endeavor if done manually",
    "start": "379310",
    "end": "384670"
  },
  {
    "text": "when we compare this with the characteristics of a sample server list architecture we can see the following",
    "start": "387069",
    "end": "394250"
  },
  {
    "text": "for our presentation here we can use s3 and CloudFront we can use we can have",
    "start": "394250",
    "end": "399349"
  },
  {
    "text": "static website content that's hosted in Amazon s3 and distributed using CloudFront this is a cost-effective",
    "start": "399349",
    "end": "405379"
  },
  {
    "text": "alternative to hosting content on a server based architecture for logic tier",
    "start": "405379",
    "end": "411229"
  },
  {
    "text": "we can integrate Amazon API gateway and AWS lambda which is a fully managed",
    "start": "411229",
    "end": "418520"
  },
  {
    "text": "service for creating and managing api's this API gateway can be used with lambda which is a fully managed service for",
    "start": "418520",
    "end": "424520"
  },
  {
    "text": "arbitrary code functions our function as a service for the data tier you can use",
    "start": "424520",
    "end": "429800"
  },
  {
    "text": "various data storage services we can leverage elastic as we can leverage DynamoDB we can leverage even s3 if",
    "start": "429800",
    "end": "435979"
  },
  {
    "text": "needed what does this mean to us well it means zero management of server resources and supporting software the",
    "start": "435979",
    "end": "443030"
  },
  {
    "text": "operating system has been eliminated we don't have to focus on aspects like architecting for high availability we",
    "start": "443030",
    "end": "450229"
  },
  {
    "text": "don't have to look at server operating system management we don't really have to worry too much about capacity planning or scaling all this is now",
    "start": "450229",
    "end": "456289"
  },
  {
    "text": "fundamentally being taken care of for us by AWS",
    "start": "456289",
    "end": "461650"
  },
  {
    "start": "465000",
    "end": "554000"
  },
  {
    "text": "so that's just a general overview of where we're headed with serverless are there any questions on that topic",
    "start": "467830",
    "end": "473059"
  },
  {
    "text": "you have any questions there's no Kay I",
    "start": "473059",
    "end": "486979"
  },
  {
    "text": "just want to make sure I mean from a baseline perspective cuz we're gonna start getting into some designs and I'm",
    "start": "486979",
    "end": "493339"
  },
  {
    "text": "not sure if I know there is a question way over there content management system",
    "start": "493339",
    "end": "501589"
  },
  {
    "text": "like WordPress for example sure or Drupal so what Paul was describing was a",
    "start": "501589",
    "end": "506659"
  },
  {
    "text": "server based architecture as it compares to a static so WordPress falls right",
    "start": "506659",
    "end": "512209"
  },
  {
    "text": "into traditional server based when you look at static it's not a straight CMS",
    "start": "512209",
    "end": "517818"
  },
  {
    "text": "like WordPress is designed where you can login as an admin you would use more of a framework such as middleman which will",
    "start": "517819",
    "end": "524360"
  },
  {
    "text": "show at the end for use cases and more locally designed and push out through if",
    "start": "524360",
    "end": "530810"
  },
  {
    "text": "you have a CI two or CD tool into s3 and delivered through cloud front so it's",
    "start": "530810",
    "end": "536029"
  },
  {
    "text": "slightly different so I can have the same type of admin functions but again when you compare the two and we will get",
    "start": "536029",
    "end": "542449"
  },
  {
    "text": "into this a little later about cost it's extremely different okay",
    "start": "542449",
    "end": "554438"
  },
  {
    "start": "554000",
    "end": "675000"
  },
  {
    "text": "okay so let's look at some design and scalability principles for serverless architectures first we should identify",
    "start": "554610",
    "end": "562540"
  },
  {
    "text": "some supporting AWS services rather define what they are now AWS provides us",
    "start": "562540",
    "end": "567610"
  },
  {
    "text": "with a few key supporting services for building server lists architectures obviously the main one is AWS lambda",
    "start": "567610",
    "end": "574120"
  },
  {
    "text": "this lets us run code without provisioning or managing servers this is our function as a service component",
    "start": "574120",
    "end": "580380"
  },
  {
    "text": "Amazon API gateway is a fully managed service that makes it easy for developers to create publish maintain",
    "start": "580380",
    "end": "587050"
  },
  {
    "text": "monitor and secure API s at any scale Cognito lets us easily add a user signup",
    "start": "587050",
    "end": "592870"
  },
  {
    "text": "and authentication to mobile and web apps Amazon s3 is obviously the simple storage service cloud front is our CDN",
    "start": "592870",
    "end": "600370"
  },
  {
    "text": "or content delivery network and DynamoDB provides us with a fully managed no sequel database service let's observe",
    "start": "600370",
    "end": "609070"
  },
  {
    "text": "some simple architectural patterns and we're going to break these down in the next section so persistent data what do",
    "start": "609070",
    "end": "615610"
  },
  {
    "text": "we mean by this well this could be something as simple as saving a quote with some kind of static data in s3 for",
    "start": "615610",
    "end": "621630"
  },
  {
    "text": "web form submissions we can submit must submit web form data and with some kind",
    "start": "621630",
    "end": "629800"
  },
  {
    "text": "of processing event being triggered on the backend to fulfill some other function for authentication we can",
    "start": "629800",
    "end": "635110"
  },
  {
    "text": "offload with n occation to a server list back-end and plug this into any of the architectures as needed",
    "start": "635110",
    "end": "642120"
  },
  {
    "text": "oh so we missed that so a couple of architectural advance patterns we can look at fully hosted s three websites we",
    "start": "654930",
    "end": "661770"
  },
  {
    "text": "can look at Internet of Things or mobile backends and we can look at microservices architectures",
    "start": "661770",
    "end": "666839"
  },
  {
    "text": "microservices architectures obviously are not three-tier but we can easily bundle together API gateway and lambda",
    "start": "666839",
    "end": "672690"
  },
  {
    "text": "to create a micro service so this components that we talked about s3",
    "start": "672690",
    "end": "678810"
  },
  {
    "start": "675000",
    "end": "692000"
  },
  {
    "text": "CloudFront api gateway lambda even DynamoDB all of these scale automatically we don't really have to",
    "start": "678810",
    "end": "684570"
  },
  {
    "text": "worry about under provisioning we don't have to worry about over provisioning and we pay only for what you use we pay",
    "start": "684570",
    "end": "689940"
  },
  {
    "text": "for what we use so let's take a quick comparison of considerations for a",
    "start": "689940",
    "end": "696839"
  },
  {
    "start": "692000",
    "end": "751000"
  },
  {
    "text": "server based versus a serverless workload this is not an apples to apples comparison obviously WordPress is a",
    "start": "696839",
    "end": "702570"
  },
  {
    "text": "proprietary product and we're just looking at this from a high level from high level concept in terms of what we",
    "start": "702570",
    "end": "708630"
  },
  {
    "text": "would be responsible for versus what we would not be responsible for so for a server based workload like WordPress we",
    "start": "708630",
    "end": "715320"
  },
  {
    "text": "do have higher investment costs for baseline resources we do have to worry about requirements and capacity planning",
    "start": "715320",
    "end": "721650"
  },
  {
    "text": "for all of our deployment tiers we do have a higher overhead for infrastructure and investment and we",
    "start": "721650",
    "end": "727650"
  },
  {
    "text": "have ongoing infrastructure management and maintenance comparing this with server lists with server lists we have a",
    "start": "727650",
    "end": "734339"
  },
  {
    "text": "minimal baseline investment we have minimum requirements planning and no capacity planning is needed the model is",
    "start": "734339",
    "end": "740850"
  },
  {
    "text": "really paper request or pay for what you use and infrastructure is abstracted away managed maintained by AWS",
    "start": "740850",
    "end": "749540"
  },
  {
    "start": "751000",
    "end": "798000"
  },
  {
    "text": "so if we look at this diagram this is essentially our WordPress architecture or a sample WordPress architecture we",
    "start": "758150",
    "end": "764460"
  },
  {
    "text": "have a V PC that's highly available with multi multiple availability zones our data tier consists of an RDS database",
    "start": "764460",
    "end": "771510"
  },
  {
    "text": "configured a multi AZ mode our logic tier consists of an auto scaled set of",
    "start": "771510",
    "end": "777210"
  },
  {
    "text": "ec2 instances running into availability zones with and he'll be practicing traffic and our presentation tier",
    "start": "777210",
    "end": "784110"
  },
  {
    "text": "consists of end users browsers using route 53 for DNS CloudFront as a CDN s3",
    "start": "784110",
    "end": "790380"
  },
  {
    "text": "for static assets and the elastic load balancer to proxy request to server resources we mentioned the simple",
    "start": "790380",
    "end": "801030"
  },
  {
    "start": "798000",
    "end": "835000"
  },
  {
    "text": "architectural pattern before persistent data this is an example of how it could be instantiated so in this diagram a",
    "start": "801030",
    "end": "807390"
  },
  {
    "text": "quote is being generated and persisted for an extended period of time our presentation tier consists of client",
    "start": "807390",
    "end": "813960"
  },
  {
    "text": "browsers using Amazon route 53 for DNS and CloudFront as a CDN for the blank",
    "start": "813960",
    "end": "819000"
  },
  {
    "text": "quote hosted and s3 our logic tier consists of an API gateway which proxies the populated",
    "start": "819000",
    "end": "824730"
  },
  {
    "text": "quote to a private s3 bucket saving the quote and our data tier consists of s3",
    "start": "824730",
    "end": "830250"
  },
  {
    "text": "where the quotes are being saved or stored we can expand this example and",
    "start": "830250",
    "end": "838320"
  },
  {
    "start": "835000",
    "end": "894000"
  },
  {
    "text": "think about web form submission now in this diagram a web form is being accessed filled out and submitted by an",
    "start": "838320",
    "end": "844680"
  },
  {
    "text": "end-user our presentation tier again consists of client browsers using Amazon route 53 for DNS cloud front as a CDN",
    "start": "844680",
    "end": "852510"
  },
  {
    "text": "and for a quote that's being stored in s3 our logic tier consists of API",
    "start": "852510",
    "end": "859830"
  },
  {
    "text": "gateway which receives data from the submitted form and invokes lambda now API gateway essentially acts as the",
    "start": "859830",
    "end": "866220"
  },
  {
    "text": "bridge that connects our presentation tier and the functions that we write in lambda lambda then transforms and moves",
    "start": "866220",
    "end": "872730"
  },
  {
    "text": "data to dynamo DB for future search and retrieval and amazon SCS to send a",
    "start": "872730",
    "end": "879180"
  },
  {
    "text": "verification email to the end user our data tier in this example just consists of s3 where the blank forms being hosted",
    "start": "879180",
    "end": "886050"
  },
  {
    "text": "and also dynamo DB for search and retrieval once the forms actually submitted",
    "start": "886050",
    "end": "892070"
  },
  {
    "text": "our architectural pattern for authentication is essentially the same as the previous diagram we just looked",
    "start": "895310",
    "end": "900990"
  },
  {
    "text": "at with the exception of zero the inclusion of auth0 we basically have",
    "start": "900990",
    "end": "907740"
  },
  {
    "text": "integrated an authentication service that supports JavaScript client-side with indication as designed for mobile",
    "start": "907740",
    "end": "913950"
  },
  {
    "text": "devices now how do we work with or deploy to serverless architectures we",
    "start": "913950",
    "end": "919560"
  },
  {
    "text": "can really look at two potential models an unstructured model the simple model is just using serverless framework",
    "start": "919560",
    "end": "925790"
  },
  {
    "text": "service framework this is an open source application of framework to easily build serverless architectures on lambda and",
    "start": "925790",
    "end": "932490"
  },
  {
    "text": "other clouds we can easily build the lambda function and publish it to AWS if we're gonna talk about enterprises and",
    "start": "932490",
    "end": "939120"
  },
  {
    "text": "doing a more structured approach we have to look at a more advanced build workflow this is something along the",
    "start": "939120",
    "end": "944250"
  },
  {
    "text": "lines of continuous integration and continuous development so for this type of model we have to be concerned with",
    "start": "944250",
    "end": "950010"
  },
  {
    "text": "our code repository which can easily be github or typically as github we can look at our build platform code ship in",
    "start": "950010",
    "end": "957180"
  },
  {
    "text": "this case which pulls from our code repository the quality review control system like code climate and eventually",
    "start": "957180",
    "end": "963630"
  },
  {
    "text": "publishing this to AWS in a controlled way and repeatable way",
    "start": "963630",
    "end": "969019"
  },
  {
    "start": "973000",
    "end": "1000000"
  },
  {
    "text": "so let's pause there for a second and we presented three different use cases and",
    "start": "974200",
    "end": "981080"
  },
  {
    "text": "you know again this was peer learning hopefully an interactive session so please share with any comments or",
    "start": "981080",
    "end": "987500"
  },
  {
    "text": "questions that you have or I can share maybe some actual use case up back there",
    "start": "987500",
    "end": "992839"
  },
  {
    "text": "yeah did you server this is the most",
    "start": "992839",
    "end": "1004029"
  },
  {
    "start": "1000000",
    "end": "1039000"
  },
  {
    "text": "common one we use so maybe there is but that's probably the one that's gonna gain the most traction in the near",
    "start": "1004029",
    "end": "1010029"
  },
  {
    "text": "future Thanks go in the corner",
    "start": "1010029",
    "end": "1018420"
  },
  {
    "start": "1039000",
    "end": "1054000"
  },
  {
    "text": "yeah you're affirming to like pre-warming the yell bees are basically putting in a ticket with AWS to get them",
    "start": "1040179",
    "end": "1047058"
  },
  {
    "text": "ready for massive spikes to date I",
    "start": "1047059",
    "end": "1056029"
  },
  {
    "text": "really come across that yeah but it's still not that ubiquitous of a service yeah I mean what we would always",
    "start": "1056029",
    "end": "1061190"
  },
  {
    "text": "recommend is you still want to go through and ensure that your code quality is where it needs to be so if",
    "start": "1061190",
    "end": "1066200"
  },
  {
    "text": "you're running a lambda function mints and it's timing out then there's probably something wrong before you even",
    "start": "1066200",
    "end": "1072710"
  },
  {
    "text": "get to lambda but it's not necessarily the case I mean you you still want to go at you I would never say never worry",
    "start": "1072710",
    "end": "1079119"
  },
  {
    "text": "it's just you're still developing your nap you're still you're still relying on",
    "start": "1079119",
    "end": "1084799"
  },
  {
    "text": "a third party service so you want to ensure that the quality of your product that you're putting out there is where",
    "start": "1084799",
    "end": "1090409"
  },
  {
    "text": "it needs to be yeah yeah the first time",
    "start": "1090409",
    "end": "1105859"
  },
  {
    "text": "before it gets cached once it's in there then you could it's basically becomes what was repeatable yeah I mean and then",
    "start": "1105859",
    "end": "1111769"
  },
  {
    "text": "you can worry about your expirations but we're still talking another second so",
    "start": "1111769",
    "end": "1117379"
  },
  {
    "text": "yeah",
    "start": "1117379",
    "end": "1119830"
  },
  {
    "text": "with me and uh we can talk after and I'm",
    "start": "1130420",
    "end": "1136610"
  },
  {
    "text": "not sure off the top my head I mean we do enter great so Claude X is deployed we have a product called V knock and",
    "start": "1136610",
    "end": "1143600"
  },
  {
    "text": "it's completely serverless on the front end we have integrated with items like",
    "start": "1143600",
    "end": "1149090"
  },
  {
    "text": "intercom where we're tracking clicks but I'm not sure if we extended that to lambda I have to double check but we can",
    "start": "1149090",
    "end": "1156110"
  },
  {
    "text": "take that after the session yeah so I'm",
    "start": "1156110",
    "end": "1183650"
  },
  {
    "text": "gonna cover cross effective in this section here I can talk about spot I",
    "start": "1183650",
    "end": "1188750"
  },
  {
    "text": "didn't have it specific on here but I can definitely talk about spot just do a follow-up question right after the cost",
    "start": "1188750",
    "end": "1195290"
  },
  {
    "text": "portion",
    "start": "1195290",
    "end": "1198250"
  },
  {
    "text": "so just to be clear we weren't saying service to replace WordPress we were",
    "start": "1231100",
    "end": "1236809"
  },
  {
    "text": "just strictly giving WordPress as an example of a traditional server based technology because most people",
    "start": "1236809",
    "end": "1243890"
  },
  {
    "text": "understand that so it wasn't about it being a server this replacing it so we",
    "start": "1243890",
    "end": "1249740"
  },
  {
    "text": "didn't build a server this content management system although there are offerings out there there's SAS products",
    "start": "1249740",
    "end": "1255950"
  },
  {
    "text": "out there that that can do that but that's not where we were going with it",
    "start": "1255950",
    "end": "1261170"
  },
  {
    "text": "we just want to give a baseline of how to compare the two architectures well",
    "start": "1261170",
    "end": "1272090"
  },
  {
    "text": "everything is so broad no I want to say you're going to reface your massive ERP but from a very baseline I absolutely",
    "start": "1272090",
    "end": "1281270"
  },
  {
    "text": "think you can replace your company website so we did it right so we were",
    "start": "1281270",
    "end": "1287090"
  },
  {
    "text": "running on WordPress and we replaced it with service and everything that Paul",
    "start": "1287090",
    "end": "1292880"
  },
  {
    "text": "went over was actually our architecture so he mentioned quotes so one thing that",
    "start": "1292880",
    "end": "1298130"
  },
  {
    "text": "we do from a persistent data perspective is we allow people to do a live quote on our site and if you want to be knocked",
    "start": "1298130",
    "end": "1305150"
  },
  {
    "text": "out at i/o you would see it and you pick and choose all your the configuration that you needs it spits out a quote then",
    "start": "1305150",
    "end": "1310910"
  },
  {
    "text": "you can save that and and that was the persistent data architecture and then what we do is we can we call it later on",
    "start": "1310910",
    "end": "1317990"
  },
  {
    "text": "when you actually want to launch",
    "start": "1317990",
    "end": "1321190"
  },
  {
    "text": "yeah yeah yeah and we use angularjs as",
    "start": "1343029",
    "end": "1351440"
  },
  {
    "text": "the front-end which is a single page front-end right so we're not having to redo every single page we're just",
    "start": "1351440",
    "end": "1359179"
  },
  {
    "text": "providing the content but the frame the the theme the overall template is still being carried out so we're not",
    "start": "1359179",
    "end": "1365330"
  },
  {
    "text": "individually creating each page it's not like an old-school HTML so it's a little",
    "start": "1365330",
    "end": "1370909"
  },
  {
    "text": "different in terms of what I'm so you're",
    "start": "1370909",
    "end": "1381139"
  },
  {
    "text": "asking a question about how do you determine how many of them the functions",
    "start": "1381139",
    "end": "1386080"
  },
  {
    "text": "so I'm not I'm sorry I don't understand the exactly you just get well you'll",
    "start": "1394299",
    "end": "1400369"
  },
  {
    "text": "break your decoupling your function is down to the least common denominator as often as you can but it's tough to just",
    "start": "1400369",
    "end": "1408349"
  },
  {
    "text": "generally talk about without a specific use case so I'll just use one use case within our product that makes it simple",
    "start": "1408349",
    "end": "1414379"
  },
  {
    "text": "so what we did is we process cocktail logs and we break down each JSON file",
    "start": "1414379",
    "end": "1422960"
  },
  {
    "text": "into its own function so we're running that across we managed over a thousand accounts so it's hundreds of millions of",
    "start": "1422960",
    "end": "1429289"
  },
  {
    "text": "records a month but it's still it's only it's only a fuel and that function so",
    "start": "1429289",
    "end": "1434960"
  },
  {
    "text": "would you know one ingestion one parsing and then one export",
    "start": "1434960",
    "end": "1442809"
  },
  {
    "text": "for can you give it I mean so we did run we bumped into obviously there's a lot",
    "start": "1457029",
    "end": "1464709"
  },
  {
    "text": "of trial here we bumped into a lot of imitations we were timing a hoe right in the beginning when we first started with",
    "start": "1464709",
    "end": "1470379"
  },
  {
    "text": "it it just it really came down to how can we ficient ly parse data within the",
    "start": "1470379",
    "end": "1477309"
  },
  {
    "text": "given time frame so we started realizing that if we if we were trying to do too",
    "start": "1477309",
    "end": "1483219"
  },
  {
    "text": "many customers at once within one function of a timeout immediately so we just we looked at it again from the",
    "start": "1483219",
    "end": "1490029"
  },
  {
    "text": "least common denominator as as small of a process as we can and we perceived but",
    "start": "1490029",
    "end": "1496869"
  },
  {
    "text": "it's trial and error I mean there's not a magic wand that we were able to to",
    "start": "1496869",
    "end": "1502479"
  },
  {
    "text": "wave I see it time check so this isn't",
    "start": "1502479",
    "end": "1513759"
  },
  {
    "text": "necessary about lambda I think every question has been evolved and this was more of it intro about how to proceed",
    "start": "1513759",
    "end": "1520149"
  },
  {
    "text": "with server this technology in basic examples of how to how'd it go I know",
    "start": "1520149",
    "end": "1526719"
  },
  {
    "text": "we've had a lot of and their questions but",
    "start": "1526719",
    "end": "1530309"
  },
  {
    "text": "let's take that after the session we can discuss that okay",
    "start": "1539259",
    "end": "1548200"
  },
  {
    "text": "that's not all we should take offline after the session yeah okay let's do specific yeah it's very specific we're",
    "start": "1570620",
    "end": "1577039"
  },
  {
    "text": "trying to keep this as a beginner lever classic and we don't know everybody else in the audience so okay so we run",
    "start": "1577039",
    "end": "1604279"
  },
  {
    "text": "through code climate for our quality and scoring and in terms of debugging you",
    "start": "1604279",
    "end": "1611059"
  },
  {
    "text": "know we beverage I'm the Chrome browser the console to",
    "start": "1611059",
    "end": "1616580"
  },
  {
    "text": "see to see errors I mean we're not in you know if you were successfully able",
    "start": "1616580",
    "end": "1623090"
  },
  {
    "text": "to deploy let's take a basic website and",
    "start": "1623090",
    "end": "1630350"
  },
  {
    "text": "we to be honest there's not a whole there wasn't a whole lot of debugging we had to do from a front-end web site it",
    "start": "1630350",
    "end": "1637909"
  },
  {
    "text": "all is just back in process and you know",
    "start": "1637909",
    "end": "1643159"
  },
  {
    "text": "I'm not I'm not really sure tell you the truth let's go on to cross examples so",
    "start": "1643159",
    "end": "1653659"
  },
  {
    "start": "1648000",
    "end": "1807000"
  },
  {
    "text": "we were talking earlier about WordPress versus service and how the costs differ",
    "start": "1653659",
    "end": "1661129"
  },
  {
    "text": "so from what Paul was describing in a traditional sense you're gonna have ec2",
    "start": "1661129",
    "end": "1666769"
  },
  {
    "text": "RDS the requests you know if you take in",
    "start": "1666769",
    "end": "1672499"
  },
  {
    "text": "let's say an M for large you're gonna be able to get approximately a thousand",
    "start": "1672499",
    "end": "1678799"
  },
  {
    "text": "requests if you need higher then we can look at doing auto scaling we can look",
    "start": "1678799",
    "end": "1685490"
  },
  {
    "text": "at doing additional load testing or going up to higher servers with with",
    "start": "1685490",
    "end": "1690759"
  },
  {
    "text": "higher capacity but as you do that the costs just start increasing greatly",
    "start": "1690759",
    "end": "1700210"
  },
  {
    "text": "if we ran an ec2 instance and we did a little test and it maxed out at a",
    "start": "1700700",
    "end": "1705980"
  },
  {
    "text": "hundred and we're running WordPress we're gonna start analyzing every single plug-in we're gonna analyze every path",
    "start": "1705980",
    "end": "1713299"
  },
  {
    "text": "that's come in every JavaScript that's being ran and ultimately a lot of times",
    "start": "1713299",
    "end": "1718539"
  },
  {
    "text": "generally people will just throw more hardware at it hoping it solves the problem so you know if you start out at",
    "start": "1718539",
    "end": "1726440"
  },
  {
    "text": "a couple hundred dollars a month you can easily start getting into the three four or thousand you know a thousand dollar",
    "start": "1726440",
    "end": "1732799"
  },
  {
    "text": "range then you want to if you if you want to take that and then start looking",
    "start": "1732799",
    "end": "1738019"
  },
  {
    "text": "at how to save cost within a server-based then you can do some RI planning now",
    "start": "1738019",
    "end": "1743359"
  },
  {
    "text": "that's not always the simplest thing because you don't necessarily know the scale that you're gonna need within a",
    "start": "1743359",
    "end": "1748730"
  },
  {
    "text": "few months and you could overestimate or underestimate but in service I Paul",
    "start": "1748730",
    "end": "1756440"
  },
  {
    "text": "mentioned it's per request so when you look at your front end distribution of",
    "start": "1756440",
    "end": "1761869"
  },
  {
    "text": "power front by default you know the hard limit is set of a hundred thousand",
    "start": "1761869",
    "end": "1768669"
  },
  {
    "text": "requests per second this is extremely different when you're planning for",
    "start": "1768669",
    "end": "1774080"
  },
  {
    "text": "scalability on the car front delivery side then on the ec2 side and if you",
    "start": "1774080",
    "end": "1782389"
  },
  {
    "text": "need to increase that limit it's a simple request to AWS support and that",
    "start": "1782389",
    "end": "1789230"
  },
  {
    "text": "in the hard limit of data transfer is 40 gigabytes per distribution so you just",
    "start": "1789230",
    "end": "1796009"
  },
  {
    "text": "think of the share massive scalability and the server this side it it's really",
    "start": "1796009",
    "end": "1803929"
  },
  {
    "text": "off the charts and then when you consider call total cost of ownership",
    "start": "1803929",
    "end": "1811179"
  },
  {
    "text": "into bringing a traditional servers you have to think about not only maintaining",
    "start": "1811179",
    "end": "1816379"
  },
  {
    "text": "it but all the vulnerability that could occur patching additional development",
    "start": "1816379",
    "end": "1821720"
  },
  {
    "text": "and then you have to consider all each price point along the way so if you want to add you know more database we",
    "start": "1821720",
    "end": "1829549"
  },
  {
    "text": "replicas if you want to add addition you know in a auto-scaling",
    "start": "1829549",
    "end": "1835280"
  },
  {
    "text": "environment if you need to add additional ec2 instances you just have to think about this continually but with",
    "start": "1835280",
    "end": "1843020"
  },
  {
    "text": "service and you think about cost of ownership outside of development because you're always going to have development",
    "start": "1843020",
    "end": "1848590"
  },
  {
    "text": "it's a dubious maintain the cost of ownership greatly decreases huge cost",
    "start": "1848590",
    "end": "1855860"
  },
  {
    "text": "savings is from an operational standpoint and here's a real price",
    "start": "1855860",
    "end": "1863180"
  },
  {
    "start": "1859000",
    "end": "2177000"
  },
  {
    "text": "example that we gave so just think bare minimum not even getting into auto",
    "start": "1863180",
    "end": "1868880"
  },
  {
    "text": "scaling or any of the fancy stuff that you can do on the traditional side on",
    "start": "1868880",
    "end": "1873950"
  },
  {
    "text": "the server side if you just if you use a basic lamp stack running on an m3 medium",
    "start": "1873950",
    "end": "1879890"
  },
  {
    "text": "a single AZ RDS 100 gigs of storage 50 gigs of data transfer it's roughly it's",
    "start": "1879890",
    "end": "1887450"
  },
  {
    "text": "approximately $1,600 a year but you don't have any high availability and",
    "start": "1887450",
    "end": "1892940"
  },
  {
    "text": "usually no redundancy and then you're constantly going back to that cost of ownership you have to think about server",
    "start": "1892940",
    "end": "1899750"
  },
  {
    "text": "uptime you have to think about any security vulnerabilities so you know",
    "start": "1899750",
    "end": "1905000"
  },
  {
    "text": "just $1600 that's just the yes side that's not your operational cost that that could be you could have server",
    "start": "1905000",
    "end": "1911390"
  },
  {
    "text": "contracts service contracts for a couple thousand dollars a month to maintain that on the server and the server this",
    "start": "1911390",
    "end": "1918800"
  },
  {
    "text": "side you know just very very basic running your company website you have",
    "start": "1918800",
    "end": "1927410"
  },
  {
    "text": "one gig of storage on s3 and 50 gigs a chance for a month it's less than $200",
    "start": "1927410",
    "end": "1934120"
  },
  {
    "text": "cost of ownership went down operational costs go down your fixed costs go down",
    "start": "1934120",
    "end": "1939340"
  },
  {
    "text": "but then you inherently receive that fully redundant across many geo",
    "start": "1939340",
    "end": "1946040"
  },
  {
    "text": "locations around the world and you're ensuring that you're falling within the best practice so before I go",
    "start": "1946040",
    "end": "1956480"
  },
  {
    "text": "that there was a question over there about price so you had a question about price I just",
    "start": "1956480",
    "end": "1963649"
  },
  {
    "text": "want to bring it up again yeah so this",
    "start": "1963649",
    "end": "1975200"
  },
  {
    "text": "so the spot market is great we leverage the spot market as well however when you",
    "start": "1975200",
    "end": "1980960"
  },
  {
    "text": "think about running and we're just sticking with the theme of WordPress throughout here if you think about running WordPress if you become outbid",
    "start": "1980960",
    "end": "1989409"
  },
  {
    "text": "that site goes done so what can you do you can go a little more advanced look",
    "start": "1989409",
    "end": "1996889"
  },
  {
    "text": "at ECS you can run two auto-scaling groups one that leverages spot instances",
    "start": "1996889",
    "end": "2003850"
  },
  {
    "text": "and one that leverages on-demand instances so that way if you do get outbid and you lose your spot",
    "start": "2003850",
    "end": "2011460"
  },
  {
    "text": "auto-scaling through you have a backup always running but now you're you're you",
    "start": "2011460",
    "end": "2016659"
  },
  {
    "text": "still need that baseline of on-demand I would be worried if it was me that I",
    "start": "2016659",
    "end": "2022360"
  },
  {
    "text": "would get outbid and if I want to always keep on top of it your prices can go",
    "start": "2022360",
    "end": "2027580"
  },
  {
    "text": "from five cents an hour to a dollar easily two dollars sometimes we watch",
    "start": "2027580",
    "end": "2034210"
  },
  {
    "text": "the spot market very closely during certain times of the month we've seen prices jump from seven cents to a dollar",
    "start": "2034210",
    "end": "2039850"
  },
  {
    "text": "an hour so you're gonna save you know 80% 70% of your spend for three-quarters",
    "start": "2039850",
    "end": "2049000"
  },
  {
    "text": "of the month but if it jumps up and you don't want to lose your content then you",
    "start": "2049000",
    "end": "2055690"
  },
  {
    "text": "have you know then you have to pay or like I mentioned before you can do something a little more advanced and",
    "start": "2055690",
    "end": "2061720"
  },
  {
    "text": "have ECS that's the container service manage to auto scanning groups going on",
    "start": "2061720",
    "end": "2067480"
  },
  {
    "text": "but that could be very complex",
    "start": "2067480",
    "end": "2071158"
  },
  {
    "text": "yeah you're gonna start you're gonna recognize it immediately because you're gonna start seeing bad requests but I",
    "start": "2087330",
    "end": "2093240"
  },
  {
    "text": "believe you can monitor and Claude watch I don't know offhand but I believe you want to that Claude watch but it you",
    "start": "2093240",
    "end": "2099360"
  },
  {
    "text": "know I'm not sure what type of user those you're getting but if it's good",
    "start": "2099360",
    "end": "2105830"
  },
  {
    "text": "and it's perfect yeah it's per second so it's a hundred thousand per second",
    "start": "2109280",
    "end": "2115260"
  },
  {
    "text": "requests so it's not a hundred thousand for the month it's on its it's not like credits that you're earning it's a per",
    "start": "2115260",
    "end": "2121560"
  },
  {
    "text": "second request yeah yeah I would think",
    "start": "2121560",
    "end": "2128340"
  },
  {
    "text": "so but you know again I don't know if Tom my head",
    "start": "2128340",
    "end": "2132589"
  },
  {
    "text": "well again this was for beginner so we're not going to cover that now but we",
    "start": "2140560",
    "end": "2146750"
  },
  {
    "text": "we have we have built a cloud management platform as well which is much more",
    "start": "2146750",
    "end": "2155000"
  },
  {
    "text": "advanced it it involves you know audits cost reports server management but when",
    "start": "2155000",
    "end": "2163310"
  },
  {
    "text": "we went over this during the thing it was beginner beginner level well we like I said yeah",
    "start": "2163310",
    "end": "2173980"
  },
  {
    "start": "2177000",
    "end": "2443000"
  },
  {
    "text": "and where do you go from here just want to show three examples and",
    "start": "2177670",
    "end": "2185420"
  },
  {
    "text": "case you you know you guys aren't aware of some frameworks that are out there and that exists or different use cases",
    "start": "2185420",
    "end": "2191599"
  },
  {
    "text": "that people are leveraging so I'll just you know mention real quick so blogs",
    "start": "2191599",
    "end": "2197920"
  },
  {
    "text": "again WordPress very commonly used for this but there's a product out there called Jekyll it's a fantastic framework",
    "start": "2197920",
    "end": "2204980"
  },
  {
    "text": "it's a blog generator I'm very simple to use and you can you can post size then",
    "start": "2204980",
    "end": "2212030"
  },
  {
    "text": "the numbers here represent you know Stars favorites forks pogs frame",
    "start": "2212030",
    "end": "2217790"
  },
  {
    "text": "Jekyll's one of the most popular server list frameworks to use out there we have",
    "start": "2217790",
    "end": "2224270"
  },
  {
    "text": "a knowledge base another common use case kinnexa as a managed service company we",
    "start": "2224270",
    "end": "2232130"
  },
  {
    "text": "have many many of the same questions so we built a public knowledge base completely hosted with or through MK",
    "start": "2232130",
    "end": "2238640"
  },
  {
    "text": "Doc's it's hosted on s3 and CloudFront but we built it with MK Doc's and the",
    "start": "2238640",
    "end": "2245270"
  },
  {
    "text": "last one is the website generator we happen to use middleman again it's it's",
    "start": "2245270",
    "end": "2253000"
  },
  {
    "text": "we're using angularjs as the front-end but these are just three basic examples",
    "start": "2253000",
    "end": "2260329"
  },
  {
    "text": "that you guys can think of where to go and things to explore and and hopefully",
    "start": "2260329",
    "end": "2266030"
  },
  {
    "text": "make the make the leap over and these all free to use too which is great",
    "start": "2266030",
    "end": "2273700"
  },
  {
    "text": "and that's it unless there's additional questions",
    "start": "2275660",
    "end": "2281240"
  },
  {
    "text": "so who what I'm using here as an example is Jacko as a blog generator so it's",
    "start": "2296400",
    "end": "2303190"
  },
  {
    "text": "about continually refreshing more dynamic content it's how I reference it as and middleman",
    "start": "2303190",
    "end": "2310330"
  },
  {
    "text": "is more like your static site you know making adjustments to it often it doesn't necessarily have the same type",
    "start": "2310330",
    "end": "2316300"
  },
  {
    "text": "of toolset behind the scene so you can just write your post and then you know post them",
    "start": "2316300",
    "end": "2322410"
  },
  {
    "text": "[Music]",
    "start": "2337260",
    "end": "2340629"
  },
  {
    "text": "we would just say start small identify your requirements see what's available to you what's not where the gaps are and",
    "start": "2354190",
    "end": "2360860"
  },
  {
    "text": "again it's still a pretty new frontier even for us some of the examples that we showed are pretty simple they're not",
    "start": "2360860",
    "end": "2366800"
  },
  {
    "text": "very complex you know it is a work in progress so there is our real advice",
    "start": "2366800",
    "end": "2373370"
  },
  {
    "text": "would just be to start small and look forward as opposed to giving you a real blueprint that you can follow you know",
    "start": "2373370",
    "end": "2379340"
  },
  {
    "text": "it is still very highly give-and-take back and forth kind of do you have any",
    "start": "2379340",
    "end": "2385670"
  },
  {
    "text": "examples that you're thinking of",
    "start": "2385670",
    "end": "2388869"
  },
  {
    "text": "probably not but it's are having it that's a very generic description it",
    "start": "2418700",
    "end": "2424410"
  },
  {
    "text": "sounds sounds like a good candidate we can travel more by exactly what it does",
    "start": "2424410",
    "end": "2430349"
  },
  {
    "text": "okay thank you",
    "start": "2430349",
    "end": "2441380"
  },
  {
    "text": "[Applause]",
    "start": "2441920",
    "end": "2445170"
  }
]