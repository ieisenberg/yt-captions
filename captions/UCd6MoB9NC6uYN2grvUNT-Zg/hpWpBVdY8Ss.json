[
  {
    "text": "thank you for coming to our session on Amazon Aurora our new relational database engine this used to be the",
    "start": "0",
    "end": "6690"
  },
  {
    "text": "newest engine but yesterday we announced Maria DB so it's not the newest anymore but it's Amazon's own database engine",
    "start": "6690",
    "end": "13670"
  },
  {
    "text": "before I start let me do a show of hand so that I know how to pace through this presentation how many of you have used",
    "start": "13670",
    "end": "20880"
  },
  {
    "text": "Aurora can you raise your hand please all right not that many how many of you",
    "start": "20880",
    "end": "27210"
  },
  {
    "text": "have been to another session on our or either industry invent or previous amazon events like AWS summits okay all",
    "start": "27210",
    "end": "36600"
  },
  {
    "text": "right thank you so let me start with the",
    "start": "36600",
    "end": "42629"
  },
  {
    "text": "basics so what is Amazon Aurora it's a my sequel compatible relational database",
    "start": "42629",
    "end": "48469"
  },
  {
    "text": "that has the performance and availability of commercial databases but",
    "start": "48469",
    "end": "54180"
  },
  {
    "text": "the simplicity and cost-effectiveness of open source databases like my sequel and postgres and it's delivered all as a",
    "start": "54180",
    "end": "61680"
  },
  {
    "text": "managed service on Amazon RDS relational database service now before I get into",
    "start": "61680",
    "end": "68880"
  },
  {
    "text": "all the technical details let me start with a couple of customer stories and then we'll talk about performance and",
    "start": "68880",
    "end": "74939"
  },
  {
    "text": "availability and other stuff so customers are using Aurora and you might",
    "start": "74939",
    "end": "80850"
  },
  {
    "text": "have heard about this in Andy's keynote yesterday out we did our launch in end",
    "start": "80850",
    "end": "88200"
  },
  {
    "text": "of July and after two and a half months amazon or all right the fastest growing service in the AWS history now AWS",
    "start": "88200",
    "end": "95850"
  },
  {
    "text": "itself is not that slow moving so you can imagine the fastest growing service within aw it's is actually mean",
    "start": "95850",
    "end": "102030"
  },
  {
    "text": "something so we had a lot of customers some of them are on the screen here these are the ones they can talk about",
    "start": "102030",
    "end": "107310"
  },
  {
    "text": "there are many more I can talk about yet including so the ones that they have expedia actually is here and they are",
    "start": "107310",
    "end": "114360"
  },
  {
    "text": "going to be speaking in the session after this which is on enterprise workload on Aurora we also have GE oil",
    "start": "114360",
    "end": "122640"
  },
  {
    "text": "and gas PG&E and many others now couple of quick things about what these",
    "start": "122640",
    "end": "130319"
  },
  {
    "text": "customers are doing as you know expedia many of you are very familiar especially in the US and other places",
    "start": "130319",
    "end": "135920"
  },
  {
    "text": "they are an online travel company with portfolio including 150 travel sites in",
    "start": "135920",
    "end": "141360"
  },
  {
    "text": "70 countries right so they needed a relational database for their analytics",
    "start": "141360",
    "end": "148380"
  },
  {
    "text": "and real-time business intelligence for their travel marketplace data and they",
    "start": "148380",
    "end": "153720"
  },
  {
    "text": "are currently on sequel server and which was getting too expensive because the data volume is growing and with",
    "start": "153720",
    "end": "160140"
  },
  {
    "text": "increasing data volume the performance actually doesn't do very well right so",
    "start": "160140",
    "end": "165570"
  },
  {
    "text": "they're looking for something different they tried Cassandra and solar index and you're going to hear more about that if you go to the next session and they came",
    "start": "165570",
    "end": "173310"
  },
  {
    "text": "to roll and they are one of the first customers who started running their production application on Aurora in fact",
    "start": "173310",
    "end": "179190"
  },
  {
    "text": "they wanted to do that even before we went GA we stopped them and what Aurora",
    "start": "179190",
    "end": "184920"
  },
  {
    "text": "gives them is the scale and performance at an affordable cost right what they do specifically in their current",
    "start": "184920",
    "end": "191940"
  },
  {
    "text": "application is 25,000 inserts per second with a peak of 70,000 inserts per second",
    "start": "191940",
    "end": "197580"
  },
  {
    "text": "with 30 millisecond average response time for rights and 17 milliseconds for reads pretty impressive numbers at that",
    "start": "197580",
    "end": "204900"
  },
  {
    "text": "scale PG&E another good example of an Aurora early adopter and as you know",
    "start": "204900",
    "end": "211110"
  },
  {
    "text": "this is one of the largest utility companies in the US this is the utility company for the northern and central",
    "start": "211110",
    "end": "218010"
  },
  {
    "text": "California they have 16 million customers covering about 70,000 square",
    "start": "218010",
    "end": "223170"
  },
  {
    "text": "miles and what they wanted to have is a database which will be very very",
    "start": "223170",
    "end": "228660"
  },
  {
    "text": "reliable and which can scale very rapidly when they have high traffic",
    "start": "228660",
    "end": "233700"
  },
  {
    "text": "Sarge during the power events right when everybody wants to go to the website and figure out what's going on if they have",
    "start": "233700",
    "end": "239970"
  },
  {
    "text": "power well I mean they can do that from cell phone today so and you know what",
    "start": "239970",
    "end": "247170"
  },
  {
    "text": "the found interesting in Aurora is the 608 application that we do in our storage layer so every piece of data is",
    "start": "247170",
    "end": "256470"
  },
  {
    "text": "replicated across three different availability center three different availability zone or three different data centers and across six different",
    "start": "256470",
    "end": "265800"
  },
  {
    "text": "storage nodes they found that really really interesting that will give them the resiliency that they're looking for",
    "start": "265800",
    "end": "271730"
  },
  {
    "text": "other thing that they found very very interesting the number of read replica that we have with Aurora we can support",
    "start": "271730",
    "end": "277940"
  },
  {
    "text": "up to 15 read replicas which you can spin up very very quickly because they all read up the same shared storage",
    "start": "277940",
    "end": "284480"
  },
  {
    "text": "volume so you don't have to restart your replicas from scratch and especially",
    "start": "284480",
    "end": "289580"
  },
  {
    "text": "during a power event when they want to spin up these replicas quickly that works very well for them another",
    "start": "289580",
    "end": "298570"
  },
  {
    "text": "customer example is CS probably not as well known a name but they are actually",
    "start": "298570",
    "end": "303650"
  },
  {
    "text": "very very popular company in the insurance space they do policy management claim billing and solution",
    "start": "303650",
    "end": "311180"
  },
  {
    "text": "for property insurance and other things and they have been an oracle in sequel",
    "start": "311180",
    "end": "316250"
  },
  {
    "text": "sharper service shop for a long time and the cost and maintenance of traditional commercial database that they are",
    "start": "316250",
    "end": "322460"
  },
  {
    "text": "struggling with they are probably not the only one lot of other people struggle through the same thing so what",
    "start": "322460",
    "end": "327650"
  },
  {
    "text": "the song in Aurora is our continuous back up into s3 which eliminated the",
    "start": "327650",
    "end": "332900"
  },
  {
    "text": "need to have a backup window and load up for example dbas spending their hours on",
    "start": "332900",
    "end": "339050"
  },
  {
    "text": "taking back up and then you know having to recover from that if they have to they also like the read replicas and",
    "start": "339050",
    "end": "345140"
  },
  {
    "text": "continuous up stream of data are uploading up data from the reader application to read ship that's another",
    "start": "345140",
    "end": "350840"
  },
  {
    "text": "aw a service that they use and they could do all of these with seventy-five",
    "start": "350840",
    "end": "356330"
  },
  {
    "text": "percent less cost than their sequel server deployment pretty impressive savings for what they are trying to do",
    "start": "356330",
    "end": "364960"
  },
  {
    "text": "alfresco this is you know another one for customers in fact John Newton from",
    "start": "364960",
    "end": "372110"
  },
  {
    "text": "alfresco I think just give a talk the session before this they are an enterprise content management company",
    "start": "372110",
    "end": "378260"
  },
  {
    "text": "they have a hundred and they have 1800 customers in 195 countries including",
    "start": "378260",
    "end": "385160"
  },
  {
    "text": "leaders in financial services healthcare and public sector and they wanted to build a document repository in the cloud",
    "start": "385160",
    "end": "392570"
  },
  {
    "text": "which will scale to billions of document and they did that with Aurora in fact they scale to 1 billion documents with",
    "start": "392570",
    "end": "399860"
  },
  {
    "text": "the throughput of three documents per hour which is ten times faster than their current environment in",
    "start": "399860",
    "end": "406070"
  },
  {
    "text": "my sequel so they are moving their SAS",
    "start": "406070",
    "end": "411560"
  },
  {
    "text": "application to AWS and Aurora and you actually John just talked about that in",
    "start": "411560",
    "end": "419270"
  },
  {
    "text": "his session art networks another interesting example they are whether",
    "start": "419270",
    "end": "426740"
  },
  {
    "text": "management company they have other sensors in 10,000 neighborhood level a",
    "start": "426740",
    "end": "433030"
  },
  {
    "text": "10,000 neighborhood and the deliver very precise reports and weather condition and local forecast right and they",
    "start": "433030",
    "end": "440330"
  },
  {
    "text": "process as you can imagine for weather forecasting 25 terabytes of real-time",
    "start": "440330",
    "end": "445760"
  },
  {
    "text": "data and they needed a database that can scale up to that requirement so there",
    "start": "445760",
    "end": "452360"
  },
  {
    "text": "again another customer who moved to laura from sequel server and this was an easy move which you know was pleasantly",
    "start": "452360",
    "end": "458990"
  },
  {
    "text": "surprising and a huge cost savings for them my last example not the least is",
    "start": "458990",
    "end": "465560"
  },
  {
    "text": "threats tag this is another very interesting customer who provides AWS",
    "start": "465560",
    "end": "470570"
  },
  {
    "text": "customers that continuous security monitoring to protect against intrusion data loss and insider threats again a",
    "start": "470570",
    "end": "477680"
  },
  {
    "text": "very right heavy application they are ingesting close to about half a million insert half a million data items per",
    "start": "477680",
    "end": "485660"
  },
  {
    "text": "second and they ingest about 10 terabytes of raw data per day they tried",
    "start": "485660",
    "end": "491360"
  },
  {
    "text": "various different things including no sequel solution and they are running on Aurora so before I talk about",
    "start": "491360",
    "end": "503020"
  },
  {
    "text": "performance and availability in other things I wanted to set a little bit of a context why did we start working on",
    "start": "503020",
    "end": "509930"
  },
  {
    "text": "Aurora did we really need to build another relational databases there are plenty of them right in fact there are",
    "start": "509930",
    "end": "516590"
  },
  {
    "text": "very popular ones both commercial and open source ones and you know it's a mature field people have been working on",
    "start": "516590",
    "end": "523909"
  },
  {
    "text": "databases for 40 years so is it possible to still innovate in that space and differentiate yourself in the market",
    "start": "523910",
    "end": "530540"
  },
  {
    "text": "right so we started working on this about three and a half four years back and we soon realized that traditional",
    "start": "530540",
    "end": "538190"
  },
  {
    "text": "relational databases are not designed for the cloud well they are actually designed for mainframes by people in IBM",
    "start": "538190",
    "end": "545780"
  },
  {
    "text": "for whom it was actually very good design it's multiple layers of functionality all in a monolithic stack",
    "start": "545780",
    "end": "553070"
  },
  {
    "text": "which is good to run in a single box which is what mainframe was and over the",
    "start": "553070",
    "end": "559670"
  },
  {
    "text": "last 30 years not much has really changed right well you know we have made",
    "start": "559670",
    "end": "564860"
  },
  {
    "text": "it a little bit scale out so people have added sharding you have added clustering",
    "start": "564860",
    "end": "570170"
  },
  {
    "text": "there are different types of clustering you have shared nothing clustered shared disk clusters but fundamentally if you",
    "start": "570170",
    "end": "576980"
  },
  {
    "text": "look at the stack it is still a monolithic stack and not much really has change and this is not really what we",
    "start": "576980",
    "end": "584960"
  },
  {
    "text": "would like to do if you had to redesign sorry so if you have to redesign the",
    "start": "584960",
    "end": "594380"
  },
  {
    "text": "database for the cloud and this is you know something which is not good for cost not good for flexibility it's not",
    "start": "594380",
    "end": "600110"
  },
  {
    "text": "good for availability in a cloud environment which is fundamentally scale out and multi-tenant so we started from",
    "start": "600110",
    "end": "607910"
  },
  {
    "text": "scratch we cleaned our tables and started thinking that if we have to design the database today are you going",
    "start": "607910",
    "end": "614360"
  },
  {
    "text": "to design the same way people did that in 1970s right for the mainframe that they did it for probably not and you",
    "start": "614360",
    "end": "621410"
  },
  {
    "text": "will today if you have to start from the scratch you know you'll build something that can scale out that is self-healing",
    "start": "621410",
    "end": "627290"
  },
  {
    "text": "that leverages the cloud services that you already have so that you don't have to reinvent the wheel every time you",
    "start": "627290",
    "end": "633800"
  },
  {
    "text": "need a new component and that's what we did with Aurora it's a service oriented",
    "start": "633800",
    "end": "639080"
  },
  {
    "text": "architecture applied to databases I'll give you a couple of examples and you",
    "start": "639080",
    "end": "644210"
  },
  {
    "text": "know there of course many other things that we have done in Aurora which is not captured here one of the things that we",
    "start": "644210",
    "end": "650480"
  },
  {
    "text": "did is that we took the monolithic stag that he talked about and he looked at every layer and thought about how we can",
    "start": "650480",
    "end": "658280"
  },
  {
    "text": "make it more cloud fan-friendly so we started with the logging layer and the",
    "start": "658280",
    "end": "663320"
  },
  {
    "text": "storage layer we put them together into a single log structure storage which",
    "start": "663320",
    "end": "668420"
  },
  {
    "text": "scale-out multi-tenant and purpose bill for databases right that is probably the",
    "start": "668420",
    "end": "674329"
  },
  {
    "text": "most fundamental innovation in Aurora we also used lot of AWS services like ec2",
    "start": "674329",
    "end": "680750"
  },
  {
    "text": "like VPC DynamoDB simple workflow route 53 etc in order to build various",
    "start": "680750",
    "end": "688430"
  },
  {
    "text": "different services that we use in our or especially on the control plane we integrated Aurora with s3 what it allows",
    "start": "688430",
    "end": "695959"
  },
  {
    "text": "us to do is to take continuous back up into s3 so you don't have to worry about",
    "start": "695959",
    "end": "701029"
  },
  {
    "text": "backup but having a backup window or you know recovering from backup this is all",
    "start": "701029",
    "end": "706220"
  },
  {
    "text": "automated and I'm going to talk about it you know in the the presentation so",
    "start": "706220",
    "end": "714550"
  },
  {
    "text": "let's talk about performance Aurora is fast in fact this is from al fresco and",
    "start": "714550",
    "end": "722889"
  },
  {
    "text": "John Newton saying we land alfresco workload on Aurora we were blown away to find that or hours 10 x faster than my",
    "start": "722889",
    "end": "729949"
  },
  {
    "text": "sequel environment and no we didn't pay him to say that and he's actually here",
    "start": "729949",
    "end": "736519"
  },
  {
    "text": "he is actually so excited about it he wanted to give a talk and he presented in a session just before this one",
    "start": "736519",
    "end": "742910"
  },
  {
    "text": "talking about what they're doing with her aura in their enterprise content management space so how fast is Aurora",
    "start": "742910",
    "end": "750649"
  },
  {
    "text": "so we do we did different benchmarking and you know this is the benchmark result we can publish this is using my",
    "start": "750649",
    "end": "758750"
  },
  {
    "text": "sequel sis bench and this was on an art 38 XL machine which has 32 cores and 244",
    "start": "758750",
    "end": "766490"
  },
  {
    "text": "gb of ram our light performance was 107,000 I offs per second and our read",
    "start": "766490",
    "end": "772910"
  },
  {
    "text": "performance was close to about 600,000 I offs per second pretty impressive number",
    "start": "772910",
    "end": "778010"
  },
  {
    "text": "you will ask that how does that compare with my sequel for example it's 5x that",
    "start": "778010",
    "end": "783860"
  },
  {
    "text": "are my sequel both in terms of reeds and write performance now you know anyone",
    "start": "783860",
    "end": "790130"
  },
  {
    "text": "can generate a suitable workload to show",
    "start": "790130",
    "end": "795529"
  },
  {
    "text": "a good benchmark result so you looked at how we scale right so if we for example",
    "start": "795529",
    "end": "800600"
  },
  {
    "text": "in the number of tables from 10 202,000 to 10,000 Canora really stand up and we did",
    "start": "800600",
    "end": "808279"
  },
  {
    "text": "very well if you look at Aurora performance at 10,000 table so we have 60,000 I of this is right I ops by the",
    "start": "808279",
    "end": "814790"
  },
  {
    "text": "way and when you go to 10,000 it's 54,000 so it scales up pretty well or",
    "start": "814790",
    "end": "819860"
  },
  {
    "text": "holds up pretty well as we scale the number of table size of the database if you compare this with my sequel on I to",
    "start": "819860",
    "end": "827360"
  },
  {
    "text": "8xl which is actually a more powerful instance than our trees and if you scale",
    "start": "827360",
    "end": "833450"
  },
  {
    "text": "up to 10,000 tables the performance goes down significantly in fact if you look",
    "start": "833450",
    "end": "839269"
  },
  {
    "text": "at you know the headline numbers we are up to 11 x faster than what you can do",
    "start": "839269",
    "end": "845000"
  },
  {
    "text": "on my sequel and similar or better hardware what about number of user",
    "start": "845000",
    "end": "850399"
  },
  {
    "text": "connections right we have lot of applications with lot of concurrent user threads and we scale the user",
    "start": "850399",
    "end": "856970"
  },
  {
    "text": "connections from 50 to 500 to 5000 and again if you see Amazon Aurora it goes",
    "start": "856970",
    "end": "863060"
  },
  {
    "text": "up actually in the number of ltp rights but or going to be transactions per",
    "start": "863060",
    "end": "868130"
  },
  {
    "text": "second from 40,000 271 thousand two hundred and ten thousand it actually scales very well with number of",
    "start": "868130",
    "end": "874610"
  },
  {
    "text": "connections in fact one of the things if you want to take away from this if you have an application which is very very",
    "start": "874610",
    "end": "879800"
  },
  {
    "text": "calm current or if you can write an application which is very very conquer and order does very well and comparable",
    "start": "879800",
    "end": "887060"
  },
  {
    "text": "number for my sequel you know it 50 connections is 10,000 I ops then with",
    "start": "887060",
    "end": "892700"
  },
  {
    "text": "5,000 or 500 connection it goes up to 21,000 but then when you grow beyond",
    "start": "892700",
    "end": "898579"
  },
  {
    "text": "that it actually goes down and at 5,000 connections on an eight XL machine you get only 13,000 tons actions per second",
    "start": "898579",
    "end": "906260"
  },
  {
    "text": "so it's roughly about 8 x faster up to 8x faster than what you see in my sequel",
    "start": "906260",
    "end": "913420"
  },
  {
    "text": "so how do you do this right very simply doing less work and being more efficient",
    "start": "913420",
    "end": "921589"
  },
  {
    "text": "and I'm not going to get into all the details up you know how we do this there",
    "start": "921589",
    "end": "926779"
  },
  {
    "text": "was another session yesterday you can if you haven't attended that you can take a look at the video stream where you went",
    "start": "926779",
    "end": "932000"
  },
  {
    "text": "into the great deal of details about how Aurora Jeeves the performance numbers and how",
    "start": "932000",
    "end": "937250"
  },
  {
    "text": "we are available but I'll give you one example the total number of Io that we",
    "start": "937250",
    "end": "945860"
  },
  {
    "text": "generate and the comparing that versus my sequel if you look at the my sequel",
    "start": "945860",
    "end": "952300"
  },
  {
    "text": "architecture on the Left we do lot of Io when you are doing lights we do log",
    "start": "952300",
    "end": "957740"
  },
  {
    "text": "rides we do binlog lights we write data we write into double right buffers and",
    "start": "957740",
    "end": "963040"
  },
  {
    "text": "you know many other things like that one thing we have done in Aurora and I kind",
    "start": "963040",
    "end": "968240"
  },
  {
    "text": "of went through that little quickly that we have a log structure storage system",
    "start": "968240",
    "end": "974720"
  },
  {
    "text": "which is purpose-built for the databases this is not a standard storage system with I skazhi or NFS or things like that",
    "start": "974720",
    "end": "981650"
  },
  {
    "text": "so only thing we write to the storage is really the redo log records we are not",
    "start": "981650",
    "end": "986900"
  },
  {
    "text": "writing anything else right so consequently the amount of our your traffic that we generate from the",
    "start": "986900",
    "end": "993740"
  },
  {
    "text": "instance into the storage is an order of magnitude or orders of magnitude lower than what you see in my sequel so how",
    "start": "993740",
    "end": "1001390"
  },
  {
    "text": "much lower it is we actually took a 100gb database and ran 1 million",
    "start": "1001390",
    "end": "1008050"
  },
  {
    "text": "suspense transactions with read-only right only an OLTP and read write different types of transactions and you",
    "start": "1008050",
    "end": "1015010"
  },
  {
    "text": "can see the amount of our traffic that we generate at the instance at my sequel",
    "start": "1015010",
    "end": "1020680"
  },
  {
    "text": "and Aurora Aurora is you know 150th of what you need to do on my sequel that's",
    "start": "1020680",
    "end": "1026680"
  },
  {
    "text": "one of the reason we get high performance there are many other things that we have done for example you know",
    "start": "1026680",
    "end": "1032199"
  },
  {
    "text": "we have rewritten lot of the code with lock free implementations we have done a lot of a synchronous post-processing so",
    "start": "1032199",
    "end": "1039790"
  },
  {
    "text": "all of these contribute to tremendous amount of performance gains Aurora is",
    "start": "1039790",
    "end": "1047980"
  },
  {
    "text": "also highly available and you know you can see some of the customer code so what they are talking about Aurora's",
    "start": "1047980",
    "end": "1054430"
  },
  {
    "text": "availability so the primary reason or there are many reasons are cold but I'll",
    "start": "1054430",
    "end": "1059440"
  },
  {
    "text": "take you through a couple of the highlights so all our storage architecture is very unique what we do",
    "start": "1059440",
    "end": "1067150"
  },
  {
    "text": "is that for every piece data we actually write six copies of it to six different storage nodes in three",
    "start": "1067150",
    "end": "1075600"
  },
  {
    "text": "different availability zones or data center so in every data center will have",
    "start": "1075600",
    "end": "1080670"
  },
  {
    "text": "two copies of every piece of data right that is kind of the foundation on which",
    "start": "1080670",
    "end": "1087150"
  },
  {
    "text": "the Aurora available it is built and we do Columbus to read and write so for",
    "start": "1087150",
    "end": "1093810"
  },
  {
    "text": "example when we write into this six node environment we do up four out of six",
    "start": "1093810",
    "end": "1099690"
  },
  {
    "text": "columns as soon as we get response back from four nodes that the right is stable",
    "start": "1099690",
    "end": "1105060"
  },
  {
    "text": "then he consider that rights to be stable for read we do three out of six columns we also do backgrounds crabbing",
    "start": "1105060",
    "end": "1113370"
  },
  {
    "text": "scrubbing of the storage node CRC on the where on the disk and within the storage",
    "start": "1113370",
    "end": "1118650"
  },
  {
    "text": "cluster there is peer-to-peer replication that goes on so for example if one of the storage node is behind",
    "start": "1118650",
    "end": "1124860"
  },
  {
    "text": "then the peer-to-peer replication health catch it up we do continuous back up",
    "start": "1124860",
    "end": "1131850"
  },
  {
    "text": "into s3 and we are also doing background hotspot management so couple of other",
    "start": "1131850",
    "end": "1141990"
  },
  {
    "text": "interesting things about Aurora is our crash recovery of approach if you are",
    "start": "1141990",
    "end": "1149640"
  },
  {
    "text": "familiar with my sequel or other databases for that matter what people typically do is that you checkpoint",
    "start": "1149640",
    "end": "1155490"
  },
  {
    "text": "every five minutes or so and then when after you recover from a crash whatever",
    "start": "1155490",
    "end": "1161880"
  },
  {
    "text": "log records you have in store you replay that and typically that happens in a",
    "start": "1161880",
    "end": "1167790"
  },
  {
    "text": "single failure at least in my sequel and that takes a while some time minutes sometimes more than minutes now in",
    "start": "1167790",
    "end": "1174870"
  },
  {
    "text": "Aurora ID is actually very very different our storage node have all the",
    "start": "1174870",
    "end": "1179940"
  },
  {
    "text": "logs we are not applying it at the instance in the storage node we store all the logs and when you recover from",
    "start": "1179940",
    "end": "1186780"
  },
  {
    "text": "crash we apply those logs on demand than a synchronous asynchronous lee so you",
    "start": "1186780",
    "end": "1192810"
  },
  {
    "text": "don't have to really wait for all the log replay to happen you pretty much recovered from the crash instantaneously",
    "start": "1192810",
    "end": "1201650"
  },
  {
    "text": "another interesting thing we have done in our aura is that we have taken the cash out of the database process right",
    "start": "1203630",
    "end": "1210510"
  },
  {
    "text": "so what does it help with so if you for example have to restart the database after a deadlock or whatever other",
    "start": "1210510",
    "end": "1217380"
  },
  {
    "text": "events you might have the cat cash remains warm and you can start much",
    "start": "1217380",
    "end": "1223260"
  },
  {
    "text": "quicker and if you are trying to resume from a fully-loaded operation you can",
    "start": "1223260",
    "end": "1229140"
  },
  {
    "text": "resume much much faster and the combination of instant crash recovery and survivable cash gives us quick",
    "start": "1229140",
    "end": "1238230"
  },
  {
    "text": "failover and crash recovery that you know you have done some measurements and",
    "start": "1238230",
    "end": "1243780"
  },
  {
    "text": "let me walk through this a little bit slowly so if you look at what happens",
    "start": "1243780",
    "end": "1250370"
  },
  {
    "text": "after a failure so database fails that's on the left-hand side on the top picture",
    "start": "1250370",
    "end": "1256490"
  },
  {
    "text": "my sequel there is some time which is spent on failure detection and after",
    "start": "1256490",
    "end": "1262320"
  },
  {
    "text": "that the recovery starts in case of my sequel the recovery is kind of unpredictable the time it will take is",
    "start": "1262320",
    "end": "1269340"
  },
  {
    "text": "unpredictable because it depends on crash recovery which again is you know",
    "start": "1269340",
    "end": "1274740"
  },
  {
    "text": "depends on how much up log replay you have to do and other things in parallel there is DNS propagation that is",
    "start": "1274740",
    "end": "1281070"
  },
  {
    "text": "happening that is your primary has now switched over to a different note the",
    "start": "1281070",
    "end": "1286559"
  },
  {
    "text": "new IP address needs to propagate to the network so the applications know which new primary they need to connect to and",
    "start": "1286559",
    "end": "1293280"
  },
  {
    "text": "after that the app can start running now in case of Aurora our failure detection",
    "start": "1293280",
    "end": "1302549"
  },
  {
    "text": "is not very different from what we do in my sequel now it can be faster in fact",
    "start": "1302549",
    "end": "1307860"
  },
  {
    "text": "we are working on something where the failure detection will be faster it's instead of 15 seconds you can probably do that in you know less than five",
    "start": "1307860",
    "end": "1314370"
  },
  {
    "text": "seconds but the recovery is very very short and predictable and the DNS",
    "start": "1314370",
    "end": "1320490"
  },
  {
    "text": "propagation something you can eliminate if you use for example a special connection driver that you have where",
    "start": "1320490",
    "end": "1327390"
  },
  {
    "text": "instead of relying on the DNS it queries a table in the database and finds out who the new master is so you can",
    "start": "1327390",
    "end": "1333960"
  },
  {
    "text": "eliminate the D propagation time and if you use that driver the role of failure recovery can",
    "start": "1333960",
    "end": "1339720"
  },
  {
    "text": "be less than 30 seconds in fact we hope to bring it down to less than 10 seconds with faster failure detection now you",
    "start": "1339720",
    "end": "1350700"
  },
  {
    "text": "can test all of this yourself there are sequel commands that you that we have that you can try and simulate this and",
    "start": "1350700",
    "end": "1357120"
  },
  {
    "text": "see how fast are already covers so going",
    "start": "1357120",
    "end": "1363960"
  },
  {
    "text": "to the next part it's not only reliable and highly performing it is also",
    "start": "1363960",
    "end": "1370290"
  },
  {
    "text": "important to make the database is easy to use and you know we have spent",
    "start": "1370290",
    "end": "1375809"
  },
  {
    "text": "actually a lot of time making it easy to use and there are a couple of aspects to it the first one is that Aurora runs on",
    "start": "1375809",
    "end": "1383940"
  },
  {
    "text": "the RDS platform now I don't know if you are familiar with the RDS platform it's",
    "start": "1383940",
    "end": "1389010"
  },
  {
    "text": "a manage database platform where a lot of the things that we need to do in",
    "start": "1389010",
    "end": "1396360"
  },
  {
    "text": "managing a database is actually taken care of by RDS platform and you can",
    "start": "1396360",
    "end": "1402270"
  },
  {
    "text": "focus on what you want to focus on which is schema design query construction query optimization writing your app and",
    "start": "1402270",
    "end": "1410040"
  },
  {
    "text": "things like routine maintenance advanced monitoring patching push button scaling",
    "start": "1410040",
    "end": "1415950"
  },
  {
    "text": "both in terms of instance size and the storage etc you know security and",
    "start": "1415950",
    "end": "1421950"
  },
  {
    "text": "compliance backup and recovery automatic failover that's all taken care of by RDS",
    "start": "1421950",
    "end": "1427559"
  },
  {
    "text": "platform we have also made storage management very very simple right in",
    "start": "1427559",
    "end": "1434610"
  },
  {
    "text": "typical databases even with other engines in RDS people are very worried",
    "start": "1434610",
    "end": "1441000"
  },
  {
    "text": "about running out of storage so they typically over provision and I have seen people over provision anywhere from",
    "start": "1441000",
    "end": "1447270"
  },
  {
    "text": "thirty percent three times in Aurora you don't need to do that right when you",
    "start": "1447270",
    "end": "1452940"
  },
  {
    "text": "start your database you start with a single 10 gig segment 10 gigabytes segment and as you run out of space or",
    "start": "1452940",
    "end": "1459780"
  },
  {
    "text": "come close to that we automatically add more segments to it and you can grow all",
    "start": "1459780",
    "end": "1465360"
  },
  {
    "text": "the way up to 64 terabyte which is 10 times more than 10 times what we support in",
    "start": "1465360",
    "end": "1470400"
  },
  {
    "text": "other engines and ideas right in addition to that we are also doing continuous back up into s3 so what we do",
    "start": "1470400",
    "end": "1479040"
  },
  {
    "text": "is that as I said this is a log structure storage system we stream those logs into s3 and when you have to",
    "start": "1479040",
    "end": "1485640"
  },
  {
    "text": "recover from or you have to restore from a backup we stream those logs back into",
    "start": "1485640",
    "end": "1491460"
  },
  {
    "text": "our storage system and we can reconstruct the state of the storage to",
    "start": "1491460",
    "end": "1496800"
  },
  {
    "text": "a point in time recovery that you want to have you can do instant snapshot",
    "start": "1496800",
    "end": "1503880"
  },
  {
    "text": "there is no performance impact again because of the log structure storage all you need to do is to essentially save",
    "start": "1503880",
    "end": "1509790"
  },
  {
    "text": "the pointer where you want to take the snapshot we do automatic restriping we",
    "start": "1509790",
    "end": "1517350"
  },
  {
    "text": "do repairs hotspot management and also encryption which is coming soon we have",
    "start": "1517350",
    "end": "1524100"
  },
  {
    "text": "also simplified you know solemn the common data security requirement now the encryption is not there yet it's going",
    "start": "1524100",
    "end": "1531150"
  },
  {
    "text": "to be available in the next few weeks or so and it's the key management is",
    "start": "1531150",
    "end": "1539310"
  },
  {
    "text": "integrated with kms so it's kind of easy to manage we have SSL to secure data in",
    "start": "1539310",
    "end": "1546870"
  },
  {
    "text": "transit amazon amazon aurora by default actually resides within PPC so you get",
    "start": "1546870",
    "end": "1553200"
  },
  {
    "text": "that VPC security for free or all the access management for free and there are",
    "start": "1553200",
    "end": "1559290"
  },
  {
    "text": "industry standard security compliance that AWS and RDS have gone through that",
    "start": "1559290",
    "end": "1565800"
  },
  {
    "text": "you also get we don't have FedRAMP or HIPAA compliant compliance yet but",
    "start": "1565800",
    "end": "1572250"
  },
  {
    "text": "that's going to come soon so now an",
    "start": "1572250",
    "end": "1578730"
  },
  {
    "text": "important part of running a database or any enterprise stack is monitoring and we have cloud watch matrix with",
    "start": "1578730",
    "end": "1587400"
  },
  {
    "text": "monitoring that is available with Aurora and we monitor CPU till ization storage",
    "start": "1587400",
    "end": "1592740"
  },
  {
    "text": "memory you know many other systems and waist level metrics but we are working",
    "start": "1592740",
    "end": "1599100"
  },
  {
    "text": "on something which is actually a lot more interesting again some thing which is you're hoping to make available in another few weeks so we",
    "start": "1599100",
    "end": "1608550"
  },
  {
    "text": "will support lot more metrics this is something that you got requests from a lot of customers is that they would like",
    "start": "1608550",
    "end": "1615720"
  },
  {
    "text": "to see what we see right so we have 50 plus systems and waist level metrics",
    "start": "1615720",
    "end": "1620790"
  },
  {
    "text": "that's going to available to an advanced monitoring system and we'll also have",
    "start": "1620790",
    "end": "1626610"
  },
  {
    "text": "things like for example process list something that you get from top will have very fine granularity and you can",
    "start": "1626610",
    "end": "1633000"
  },
  {
    "text": "control the granularity based on you know how much are debugging you want to do anywhere between 1 to 60 second",
    "start": "1633000",
    "end": "1639059"
  },
  {
    "text": "granularity and you can consume this on RDS console right so if you have an",
    "start": "1639059",
    "end": "1646440"
  },
  {
    "text": "Aurora instance you can create your own dashboard with all the metrics that you want to observe right doesn't have to be",
    "start": "1646440",
    "end": "1653100"
  },
  {
    "text": "all 50 you can be a subset of that you can you know customize your dashboard",
    "start": "1653100",
    "end": "1658500"
  },
  {
    "text": "where you know something you want to expand and you want to have a bigger screen area for that in some cases you",
    "start": "1658500",
    "end": "1666030"
  },
  {
    "text": "don't want to have for example the graph you want to see a simple CP utilization number you can set for example alarms",
    "start": "1666030",
    "end": "1673050"
  },
  {
    "text": "and you can monitor those alarms and more interestingly you can also move this into cloud watch you can stream",
    "start": "1673050",
    "end": "1681240"
  },
  {
    "text": "this data which is available as a JSON file in the cloud watch and then using",
    "start": "1681240",
    "end": "1686280"
  },
  {
    "text": "an API connect that to third-party monitoring tools like graphite ganglia",
    "start": "1686280",
    "end": "1691410"
  },
  {
    "text": "appdynamics whatever have you so if you have for example and into an application stack that you monitor I want to monitor",
    "start": "1691410",
    "end": "1697920"
  },
  {
    "text": "which has app servers web servers database servers and your database servers running in RDS your app server",
    "start": "1697920",
    "end": "1705240"
  },
  {
    "text": "is running an ec2 maybe something else is running on Prem you can collect all of this monitoring feed into a single",
    "start": "1705240",
    "end": "1712170"
  },
  {
    "text": "dashboard and you can do an end-to-end monitoring other thing we have worked",
    "start": "1712170",
    "end": "1720059"
  },
  {
    "text": "very hard on is to make migration very very simple so if you are already on RDS",
    "start": "1720059",
    "end": "1727620"
  },
  {
    "text": "and running my sequel is couple of clicks right all you need to do is to",
    "start": "1727620",
    "end": "1734910"
  },
  {
    "text": "establish a baseline which is taking a my sequel snapshot or just you know selecting a my sequel",
    "start": "1734910",
    "end": "1741990"
  },
  {
    "text": "database that you want to migrate from and with couple of clicks you can migrate that snapshot and create an aura",
    "start": "1741990",
    "end": "1749400"
  },
  {
    "text": "instance as a baseline you can then run a bin log replication or you can use your tungsten replicator to do the catch",
    "start": "1749400",
    "end": "1756450"
  },
  {
    "text": "up and when you catch up you can do a cut over to the new order or instance without or very little time downtime if",
    "start": "1756450",
    "end": "1766080"
  },
  {
    "text": "you are not in RDS so if you're not an RDS my sequel we just announced our AWS",
    "start": "1766080",
    "end": "1772080"
  },
  {
    "text": "database migration service so if you are using for example Oracle or sequel",
    "start": "1772080",
    "end": "1778590"
  },
  {
    "text": "server or coming from outside of RDS or on prem you can use the AWS migration",
    "start": "1778590",
    "end": "1784559"
  },
  {
    "text": "tool to migrate into aurora it's also quite simple and we also support a",
    "start": "1784559",
    "end": "1793070"
  },
  {
    "text": "schema conversion tool so if you are coming from oracle on sequel server you",
    "start": "1793070",
    "end": "1798750"
  },
  {
    "text": "can use the schema conversion tool to help you now you know one thing we paid",
    "start": "1798750",
    "end": "1805320"
  },
  {
    "text": "a lot of attention to is to keep aurora my sequel compatible and the advantage",
    "start": "1805320",
    "end": "1810390"
  },
  {
    "text": "of doing that the reach ecosystem we have for my sequel both in terms of all",
    "start": "1810390",
    "end": "1815460"
  },
  {
    "text": "the ice vs all the tools and you know all the applications people have written",
    "start": "1815460",
    "end": "1820530"
  },
  {
    "text": "those can very easily transfer to Aurora so for example on the business",
    "start": "1820530",
    "end": "1826049"
  },
  {
    "text": "intelligence side tableau zoom data lucre all of these common tools and I was V applications work with Aurora for",
    "start": "1826049",
    "end": "1833940"
  },
  {
    "text": "data integration things like Talan that annuity informatica these are all certified and tested on Aurora for",
    "start": "1833940",
    "end": "1840659"
  },
  {
    "text": "various different query and monitoring tools like web yoke toward navicat all",
    "start": "1840659",
    "end": "1846000"
  },
  {
    "text": "of this work without any issues on Aurora and we have a number of system",
    "start": "1846000",
    "end": "1854130"
  },
  {
    "text": "integrators and consulting partners who are helping customers migrate from other databases to Aurora so some of those are",
    "start": "1854130",
    "end": "1861659"
  },
  {
    "text": "listed here they are also available on our website so",
    "start": "1861659",
    "end": "1869330"
  },
  {
    "text": "this is all good good technical stuff but does Elora save you money right and",
    "start": "1869330",
    "end": "1877639"
  },
  {
    "text": "I'll tell you and this is part of the presentation in the next session you have if you are coming from an",
    "start": "1877639",
    "end": "1884490"
  },
  {
    "text": "enterprise or commercial database you will save obscene amount of money coming Torah because there is no licensing fee",
    "start": "1884490",
    "end": "1892139"
  },
  {
    "text": "but what is surprising that even if you are using for example my sequel you can",
    "start": "1892139",
    "end": "1898019"
  },
  {
    "text": "still save money and I wanted to take you through that in a little bit of detail so this is our pricing again",
    "start": "1898019",
    "end": "1906000"
  },
  {
    "text": "available you know openly on a website like any other AWS service and if you",
    "start": "1906000",
    "end": "1912570"
  },
  {
    "text": "look at art three large that is the smallest instance that we provide it's an hourly price of 29 cents and then if",
    "start": "1912570",
    "end": "1921179"
  },
  {
    "text": "you go all the way up to 8x large it's four dollars 64 cents it's simple",
    "start": "1921179",
    "end": "1926940"
  },
  {
    "text": "pricing there is no licensing like your commercial databases there is no lock-in you pay only for what you use and if you",
    "start": "1926940",
    "end": "1934470"
  },
  {
    "text": "use reserved instances you get very good discount forty-four percent up to forty four percent with one URI and",
    "start": "1934470",
    "end": "1941210"
  },
  {
    "text": "sixty-three percent with three-year reserved instances so let's sorry maybe",
    "start": "1941210",
    "end": "1947730"
  },
  {
    "text": "I should talk a little bit about that and the storage also is billed on a consumption basis you can grow up to 64",
    "start": "1947730",
    "end": "1955529"
  },
  {
    "text": "terabyte of storage as I mentioned it's ten cents a gig per month iOS are also",
    "start": "1955529",
    "end": "1960659"
  },
  {
    "text": "built on the consumption consumption basis there is no provision I up that you have to pay for its twenty cents per",
    "start": "1960659",
    "end": "1969509"
  },
  {
    "text": "million I are consumed now all prices here are for Virginia by the way so how",
    "start": "1969509",
    "end": "1977610"
  },
  {
    "text": "do you save money in your cost of ownership versus my sequel so this is",
    "start": "1977610",
    "end": "1982830"
  },
  {
    "text": "kind of a simple example where you have a my sequel configuration pretty common",
    "start": "1982830",
    "end": "1987929"
  },
  {
    "text": "configuration actually that we have in RDS you have a primary instance on the top left hand corner there which has",
    "start": "1987929",
    "end": "1995100"
  },
  {
    "text": "which is with an art 38 XL then you have a storage attached to it which is six",
    "start": "1995100",
    "end": "2000830"
  },
  {
    "text": "terabyte 10k I ops or P I offs provision I ops and then you have standbys are 38 XL",
    "start": "2000830",
    "end": "2010550"
  },
  {
    "text": "with six terabyte and 10k I ups p I ops and the standby as you know in RDS it's",
    "start": "2010550",
    "end": "2017300"
  },
  {
    "text": "an idle stand by you cannot really use it for rid as a rid replica right it's",
    "start": "2017300",
    "end": "2024320"
  },
  {
    "text": "used only when you fail over to the standby and then you have let's say to",
    "start": "2024320",
    "end": "2029630"
  },
  {
    "text": "read replicas again are 38 excels six terabyte of storage and i have used 5 KP",
    "start": "2029630",
    "end": "2035930"
  },
  {
    "text": "IRS because you don't need for read replicas that match our provision IRS if you add up all the costs here it kind of",
    "start": "2035930",
    "end": "2043970"
  },
  {
    "text": "comes down to instance cost of $15 12 12",
    "start": "2043970",
    "end": "2050600"
  },
  {
    "text": "cents per hour and storage costs up eight dollars 30 cents an hour okay so",
    "start": "2050600",
    "end": "2056360"
  },
  {
    "text": "you add all of this up is $23 42 cents per hour for this configuration so let's",
    "start": "2056360",
    "end": "2064190"
  },
  {
    "text": "look at an equivalent configuration with aurora so your configuration will look",
    "start": "2064190",
    "end": "2071659"
  },
  {
    "text": "like this again because we use a shared storage environment you don't need you",
    "start": "2071660",
    "end": "2080600"
  },
  {
    "text": "know for with storage volumes a common six terabyte storage volume is all that",
    "start": "2080600",
    "end": "2086629"
  },
  {
    "text": "you need right every everyone reads from the same shared storage volume you have",
    "start": "2086630",
    "end": "2092330"
  },
  {
    "text": "a primary which again is our 38 XL you don't really need a standby because in",
    "start": "2092330",
    "end": "2098720"
  },
  {
    "text": "or other read replicas are promotable to master when something bad happens right",
    "start": "2098720",
    "end": "2105710"
  },
  {
    "text": "so you can get rid of the standby and you have to read replicas are 38 XL",
    "start": "2105710",
    "end": "2111290"
  },
  {
    "text": "again and they are at four dollars 64 cents an hour so if you add all of this",
    "start": "2111290",
    "end": "2116330"
  },
  {
    "text": "up it's 18 dollar thirty-five cents and which is about twenty one percent of",
    "start": "2116330",
    "end": "2122090"
  },
  {
    "text": "savings over my sequel which is probably the cheapest database that you can use",
    "start": "2122090",
    "end": "2128710"
  },
  {
    "text": "what but you can save even more how do you do that so we talked about Aurora's",
    "start": "2128710",
    "end": "2134810"
  },
  {
    "text": "performance gains right Aurora is you know it for many application of course your mileage will",
    "start": "2134810",
    "end": "2140420"
  },
  {
    "text": "vary depending on your workload but for more most application getting a 2x performance improvement is not a problem",
    "start": "2140420",
    "end": "2147339"
  },
  {
    "text": "you will see that pretty commonly I cannot guarantee that but you know it's pretty pretty common and if you have a",
    "start": "2147339",
    "end": "2154940"
  },
  {
    "text": "2x performance gain you can easily scale down your 8xl to a for excel and with a",
    "start": "2154940",
    "end": "2163640"
  },
  {
    "text": "for excel the price of this configuration comes down to 11 dollar thirty-nine cents which is 51 percent",
    "start": "2163640",
    "end": "2170269"
  },
  {
    "text": "savings over the my sequel configuration okay now don't come back to me and say",
    "start": "2170269",
    "end": "2177019"
  },
  {
    "text": "that I'm not getting fifty percent for every configuration you have but this is an example where you cannot this is kind",
    "start": "2177019",
    "end": "2183470"
  },
  {
    "text": "of saving that you can get now you're",
    "start": "2183470",
    "end": "2189200"
  },
  {
    "text": "pretty much at the end of the presentation please remember to complete your evaluation I'll be happy to take",
    "start": "2189200",
    "end": "2195619"
  },
  {
    "text": "some questions",
    "start": "2195619",
    "end": "2197890"
  }
]