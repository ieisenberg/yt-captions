[
  {
    "start": "0",
    "end": "17000"
  },
  {
    "text": "Welcome to 'This is My Architecture.'",
    "start": "6115",
    "end": "8262"
  },
  {
    "text": "Today we are in Zurich, Switzerland.",
    "start": "8681",
    "end": "10690"
  },
  {
    "text": "And I'm here with Stephan from Appway.",
    "start": "11099",
    "end": "13275"
  },
  {
    "text": "Thanks for having me.",
    "start": "13795",
    "end": "14627"
  },
  {
    "text": "Stephan, what's Appway doing?",
    "start": "14988",
    "end": "16844"
  },
  {
    "start": "17000",
    "end": "53000"
  },
  {
    "text": "At Appway we help \nfinancial service institutions",
    "start": "17962",
    "end": "20771"
  },
  {
    "text": "to manage their complex \ncustomer relationships.",
    "start": "20771",
    "end": "23619"
  },
  {
    "text": "To do so we provide preassembled, \nyet adaptable business web applications.",
    "start": "24159",
    "end": "29057"
  },
  {
    "text": "Our onboarding solution, for instance,",
    "start": "29552",
    "end": "31769"
  },
  {
    "text": "is used by major banks \nto open a new relationship every 30 seconds.",
    "start": "31769",
    "end": "36148"
  },
  {
    "text": "Interesting, and why are you moving to the cloud?",
    "start": "36558",
    "end": "39305"
  },
  {
    "text": "Our core technology \nalready helps customers",
    "start": "40250",
    "end": "43250"
  },
  {
    "text": "eliminate lengthy development \nof complex bank workflows.",
    "start": "43250",
    "end": "47545"
  },
  {
    "text": "And with our SaaS offer, we now want to achieve \nthe same for the deployment part.",
    "start": "47982",
    "end": "52838"
  },
  {
    "start": "53000",
    "end": "110000"
  },
  {
    "text": "We see an increasing appetite in banks",
    "start": "53693",
    "end": "56067"
  },
  {
    "text": "and other financial institutions to use Cloud.",
    "start": "56067",
    "end": "59419"
  },
  {
    "text": "However, these customers \nusually have very tough security requirements,",
    "start": "59852",
    "end": "63392"
  },
  {
    "text": "which then dictate \nconstraints on the cloud architecture.",
    "start": "63392",
    "end": "67006"
  },
  {
    "text": "I see, let's talk about these constraints.",
    "start": "67701",
    "end": "70310"
  },
  {
    "text": "So I assume that you have to achieve \na strong customer isolation.",
    "start": "70447",
    "end": "74733"
  },
  {
    "text": "How do you do that?",
    "start": "75094",
    "end": "75968"
  },
  {
    "text": "Exactly, yeah.",
    "start": "75968",
    "end": "77273"
  },
  {
    "text": "We use AWS Organizations for that,",
    "start": "77273",
    "end": "80070"
  },
  {
    "text": "to set up and manage \na dedicated account for every customer.",
    "start": "80070",
    "end": "84723"
  },
  {
    "text": "Every AWS account \nthen gets its own cloud resources,",
    "start": "86017",
    "end": "89616"
  },
  {
    "text": "whether it's compute instances, \nnetwork devices, or storage.",
    "start": "89616",
    "end": "94968"
  },
  {
    "text": "This gives us maximum control, \nbut also a lot of flexibility.",
    "start": "95913",
    "end": "100589"
  },
  {
    "text": "For instance, if a customer asks \nfor a penetration test",
    "start": "101271",
    "end": "104727"
  },
  {
    "text": "or another security assessment,",
    "start": "104727",
    "end": "106376"
  },
  {
    "text": "we can give them tailored access \nto their own account.",
    "start": "106376",
    "end": "109458"
  },
  {
    "text": "Got it.",
    "start": "109933",
    "end": "110466"
  },
  {
    "start": "110000",
    "end": "187000"
  },
  {
    "text": "And with so many AWS accounts, I guess,",
    "start": "110768",
    "end": "113883"
  },
  {
    "text": "across different AWS regions,",
    "start": "113884",
    "end": "115947"
  },
  {
    "text": "how can you ensure \nthat you have consistent policies across them?",
    "start": "116336",
    "end": "119859"
  },
  {
    "text": "We use AWS Control Tower",
    "start": "120999",
    "end": "124070"
  },
  {
    "text": "with guardrails for this.",
    "start": "124070",
    "end": "125941"
  },
  {
    "text": "It helps us manage policies,",
    "start": "126319",
    "end": "128222"
  },
  {
    "text": "which we then apply \nto all the different accounts.",
    "start": "128222",
    "end": "130922"
  },
  {
    "text": "So we can enforce compliance",
    "start": "131472",
    "end": "133865"
  },
  {
    "text": "with our security policies \nand best practices.",
    "start": "133865",
    "end": "136836"
  },
  {
    "text": "For example, we can guarantee \nstrong encryption",
    "start": "137416",
    "end": "140628"
  },
  {
    "text": "on all the EBS volumes \nattached to all the EC2 instances.",
    "start": "140628",
    "end": "144288"
  },
  {
    "text": "So you just mentioned EBS volumes, \nEC2 instances,",
    "start": "144699",
    "end": "148239"
  },
  {
    "text": "can you show us the actual application \nthat you deploy?",
    "start": "148640",
    "end": "151745"
  },
  {
    "text": "Yeah, at its core Appway \nwhich is a Java based web application",
    "start": "152504",
    "end": "155917"
  },
  {
    "text": "that runs on an Apache Tomcat server.",
    "start": "155917",
    "end": "158148"
  },
  {
    "text": "The front end is built with React,",
    "start": "159201",
    "end": "161045"
  },
  {
    "text": "so it's 100%, pure HTML, \nJavaScript and CSS.",
    "start": "161045",
    "end": "165334"
  },
  {
    "text": "The backend is all Java, \nwith Jersey as a Rest framework.",
    "start": "165755",
    "end": "169203"
  },
  {
    "text": "Internally, we then use Hazelcast,",
    "start": "170053",
    "end": "172439"
  },
  {
    "text": "which allows us to connect \nmultiple Appway instances to one Appway cluster.",
    "start": "172440",
    "end": "177013"
  },
  {
    "text": "So Hazelcast allows us to distribute data",
    "start": "177680",
    "end": "181312"
  },
  {
    "text": "across the cluster nodes, \nexecute distributed tasks,",
    "start": "181312",
    "end": "184741"
  },
  {
    "text": "or manage cluster wide looks.",
    "start": "184741",
    "end": "187064"
  },
  {
    "start": "187000",
    "end": "237000"
  },
  {
    "text": "Very good, so you mentioned \nthat you have a multi node cluster here.",
    "start": "187597",
    "end": "191650"
  },
  {
    "text": "How can you be in such a cluster on AWS?",
    "start": "191913",
    "end": "194469"
  },
  {
    "text": "We typically set up three or more \nAppway cluster nodes,",
    "start": "195366",
    "end": "199278"
  },
  {
    "text": "each running on a separate \nAmazon Linux EC2 instance",
    "start": "199690",
    "end": "203077"
  },
  {
    "text": "in different availability zones.",
    "start": "203077",
    "end": "205351"
  },
  {
    "text": "On top of that, we then deploy \nan application load balancer,",
    "start": "205974",
    "end": "209599"
  },
  {
    "text": "which does all the request routing",
    "start": "210789",
    "end": "212799"
  },
  {
    "text": "and the SSL offloading.",
    "start": "212799",
    "end": "215030"
  },
  {
    "text": "And at the backend, we connect \nall the Appway cluster nodes",
    "start": "215616",
    "end": "219252"
  },
  {
    "text": "to one single Elastic File System,",
    "start": "219631",
    "end": "222482"
  },
  {
    "text": "which acts as central cluster storage,",
    "start": "222482",
    "end": "224653"
  },
  {
    "text": "and can grow as it's required.",
    "start": "224653",
    "end": "226785"
  },
  {
    "text": "For user authentication,",
    "start": "227881",
    "end": "230055"
  },
  {
    "text": "we then interact or integrate with Cognito",
    "start": "230632",
    "end": "234891"
  },
  {
    "text": "through OpenID Connect.",
    "start": "235306",
    "end": "237169"
  },
  {
    "start": "237000",
    "end": "302000"
  },
  {
    "text": "Oh, that's great.",
    "start": "237468",
    "end": "238579"
  },
  {
    "text": "So you basically offload \nthe whole of authentication flow to Amazon Cognito?",
    "start": "238579",
    "end": "243036"
  },
  {
    "text": "Exactly, and I really love its flexibility.",
    "start": "243168",
    "end": "245854"
  },
  {
    "text": "Customers can start very simple",
    "start": "246317",
    "end": "248424"
  },
  {
    "text": "and manage their users directly in Cognito,",
    "start": "248424",
    "end": "251368"
  },
  {
    "text": "while they already get \nall the advanced features",
    "start": "251641",
    "end": "254515"
  },
  {
    "text": "like multifactor authentication.",
    "start": "254515",
    "end": "256769"
  },
  {
    "text": "Later, they can make a transition \ninto a more sophisticated setup,",
    "start": "257257",
    "end": "261574"
  },
  {
    "text": "where we then federate Cognito,",
    "start": "262004",
    "end": "263727"
  },
  {
    "text": "with the customer's own identity provider,",
    "start": "263962",
    "end": "266696"
  },
  {
    "text": "like Microsoft Active Directory,",
    "start": "266696",
    "end": "268904"
  },
  {
    "text": "or Okta to name some.",
    "start": "268904",
    "end": "271250"
  },
  {
    "text": "Yeah, and that's actually \na very common use case.",
    "start": "271442",
    "end": "274460"
  },
  {
    "text": "How can you connect \nto the identity provider of your customer,",
    "start": "275675",
    "end": "279022"
  },
  {
    "text": "when such a system \nis not available on the public Internet?",
    "start": "279380",
    "end": "282427"
  },
  {
    "text": "Whenever we have to access the system",
    "start": "283448",
    "end": "285372"
  },
  {
    "text": "that runs inside the customer's network,",
    "start": "285372",
    "end": "287495"
  },
  {
    "text": "like an in house data center or so,",
    "start": "287495",
    "end": "289794"
  },
  {
    "text": "we set up a dedicated \nsite to site VPN connection.",
    "start": "289959",
    "end": "293578"
  },
  {
    "text": "It can also give us access \nto other third party applications",
    "start": "294317",
    "end": "297689"
  },
  {
    "text": "like a core banking system \nor a document archive.",
    "start": "297690",
    "end": "301504"
  },
  {
    "start": "302000",
    "end": "353000"
  },
  {
    "text": "Got it.",
    "start": "302205",
    "end": "302720"
  },
  {
    "text": "So thanks a lot, Stephan,  for showing \nthese applications that you deploy now.",
    "start": "302720",
    "end": "308380"
  },
  {
    "text": "Talking about operations,",
    "start": "308380",
    "end": "310638"
  },
  {
    "text": "how do you deploy the application? \nHow do you manage that?",
    "start": "311000",
    "end": "314086"
  },
  {
    "text": "And how can you also manage \nthe AWS accounts that you have?",
    "start": "314432",
    "end": "317775"
  },
  {
    "text": "Our cloud automation team has built",
    "start": "318567",
    "end": "320392"
  },
  {
    "text": "a serverless management tool \nfor this purpose.",
    "start": "320393",
    "end": "322838"
  },
  {
    "text": "It's a React-based, single page application,",
    "start": "323482",
    "end": "326441"
  },
  {
    "text": "which is hosted in S3.",
    "start": "326441",
    "end": "328052"
  },
  {
    "text": "It then interacts through API Gateway",
    "start": "328922",
    "end": "332986"
  },
  {
    "text": "with AWS Lambda functions.",
    "start": "333413",
    "end": "335871"
  },
  {
    "text": "So these functions are then used \nto execute various tasks",
    "start": "336615",
    "end": "340363"
  },
  {
    "text": "across all the environment.",
    "start": "340364",
    "end": "341727"
  },
  {
    "text": "Things like setting up a new AWS account,",
    "start": "341727",
    "end": "345623"
  },
  {
    "text": "provision a new Appway cluster,",
    "start": "346426",
    "end": "348410"
  },
  {
    "text": "install software updates \nor make configuration changes.",
    "start": "349073",
    "end": "352569"
  },
  {
    "start": "353000",
    "end": "392000"
  },
  {
    "text": "Whenever possible,",
    "start": "353971",
    "end": "355210"
  },
  {
    "text": "we use DevOps tools \nlike TerraForm, or Puppet",
    "start": "355210",
    "end": "358388"
  },
  {
    "text": "to manage the whole infrastructure as code.",
    "start": "358388",
    "end": "360993"
  },
  {
    "text": "There are, of course, many more \nAWS services",
    "start": "362185",
    "end": "365109"
  },
  {
    "text": "involved in that behind the scenes",
    "start": "365109",
    "end": "366877"
  },
  {
    "text": "like AWS Single Sign-On,",
    "start": "366877",
    "end": "369515"
  },
  {
    "text": "CloudWatch, CloudTrail \nor Key Management Service to mention some.",
    "start": "369515",
    "end": "373814"
  },
  {
    "text": "Excellent.",
    "start": "374413",
    "end": "375059"
  },
  {
    "text": "Thanks a lot, Stephan, \nfor sharing your architecture with us today.",
    "start": "375419",
    "end": "378395"
  },
  {
    "text": "It has been a pleasure, \nthanks for having me here.",
    "start": "379080",
    "end": "381026"
  },
  {
    "text": "And thanks for watching,\n'This is My Architecture.'",
    "start": "382273",
    "end": "384930"
  }
]