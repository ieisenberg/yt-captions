[
  {
    "start": "0",
    "end": "71000"
  },
  {
    "text": "hello and welcome to this session on Amazon s3 security and management",
    "start": "170",
    "end": "5850"
  },
  {
    "text": "my name is PD data I'm a product manager in Amazon s3 and I'll be later joined by Christopher sooths",
    "start": "5850",
    "end": "11460"
  },
  {
    "text": "from a director of software engineering and Capital One so here's what you",
    "start": "11460",
    "end": "17130"
  },
  {
    "text": "should expect from this session we're going to talk about the basics of Amazon",
    "start": "17130",
    "end": "22470"
  },
  {
    "text": "s3 access control mechanisms for the first five or ten minutes I'm going to set the stage with some examples I'm",
    "start": "22470",
    "end": "28590"
  },
  {
    "text": "going to talk about Amazon s3 block public access that's the new feature that we launched a few days ago we'll go",
    "start": "28590",
    "end": "35579"
  },
  {
    "text": "to the console I'll show you the demo of how these settings work and how you can set them and some failure use cases then",
    "start": "35579",
    "end": "43559"
  },
  {
    "text": "we're going to talk about how Amazon s3 or AWS authorizes a request we're going",
    "start": "43559",
    "end": "49230"
  },
  {
    "text": "to switch gears go into encryption the different encryption modes that you have in s3 I'm going to close with monitoring",
    "start": "49230",
    "end": "57600"
  },
  {
    "text": "security in Amazon s3 and hand over the stage to Chris who's going to talk about",
    "start": "57600",
    "end": "62640"
  },
  {
    "text": "how Capital One is using Amazon s3 and he's going to go over two use cases",
    "start": "62640",
    "end": "69229"
  },
  {
    "text": "before I move on some related sessions that you might want to join the first",
    "start": "69710",
    "end": "76140"
  },
  {
    "start": "71000",
    "end": "71000"
  },
  {
    "text": "one is a leadership session this is more of a lecture style session so we will handle questions only at the end if you",
    "start": "76140",
    "end": "82830"
  },
  {
    "text": "would like to have a more Q&A style session we will have our SD and myself talking in a chalk talk where we will go",
    "start": "82830",
    "end": "89670"
  },
  {
    "text": "deeper into cross account access tomorrow right let's dive right in",
    "start": "89670",
    "end": "98900"
  },
  {
    "start": "100000",
    "end": "100000"
  },
  {
    "text": "to start with when you create a new AWS account or even if you are an existing",
    "start": "100960",
    "end": "106210"
  },
  {
    "text": "user you're probably thinking how do i best secure my data in s3 and if you're",
    "start": "106210",
    "end": "111280"
  },
  {
    "text": "using AWS it's best practice to exercise lease privilege so when you create an s3",
    "start": "111280",
    "end": "118000"
  },
  {
    "text": "bucket or an object its private by default and the access is only limited to the resource owner who's creating",
    "start": "118000",
    "end": "124270"
  },
  {
    "text": "those objects or buckets and then you slowly grant access to other users and",
    "start": "124270",
    "end": "129429"
  },
  {
    "text": "iron principles it's always best practice to slowly and granularity grant",
    "start": "129429",
    "end": "136209"
  },
  {
    "text": "access to other users than opening up the axis and then tightening it after the fact and doing that requires some",
    "start": "136209",
    "end": "144010"
  },
  {
    "text": "research you probably need to know what permissions I need to have the user I need to assign to the user and what",
    "start": "144010",
    "end": "150640"
  },
  {
    "text": "permissions I need to assign to the resource so to do that we have different",
    "start": "150640",
    "end": "156910"
  },
  {
    "start": "155000",
    "end": "155000"
  },
  {
    "text": "access control mechanisms I've listed them here we'll go through each of these and then go through some examples on how",
    "start": "156910",
    "end": "163840"
  },
  {
    "text": "these can be used what I need you to know is when you're thinking of security",
    "start": "163840",
    "end": "169600"
  },
  {
    "text": "in AWS there are two jobs the first job is specification and that's your job",
    "start": "169600",
    "end": "175989"
  },
  {
    "text": "that's the customers job to specify what permissions need to be assigned to which users or resources the second job is",
    "start": "175989",
    "end": "183579"
  },
  {
    "text": "enforcement that's our job based on the permissions that you've attached the policies that you've",
    "start": "183579",
    "end": "189640"
  },
  {
    "text": "created we will enforce whether a request is authenticated or authorized",
    "start": "189640",
    "end": "195450"
  },
  {
    "text": "so let's start with I am now I am is a service that works across all a doubler",
    "start": "195450",
    "end": "200709"
  },
  {
    "start": "196000",
    "end": "196000"
  },
  {
    "text": "services that helps you creating authenticated users as well as authorizing quests so when you think of",
    "start": "200709",
    "end": "209170"
  },
  {
    "text": "I am you start with the principal your root user is your first principal now as",
    "start": "209170",
    "end": "215350"
  },
  {
    "text": "a best practice it's recommended that you don't use root for your applications or your workloads it's better to create",
    "start": "215350",
    "end": "221019"
  },
  {
    "text": "users and give them admin privileges so any application or ALW a service",
    "start": "221019",
    "end": "226810"
  },
  {
    "text": "principal they're all edible is principles that principal will send a",
    "start": "226810",
    "end": "231910"
  },
  {
    "text": "request a request could contains actions that it wants to perform and it also contains",
    "start": "231910",
    "end": "239049"
  },
  {
    "text": "information on which resource it wants to perform that action on that action",
    "start": "239049",
    "end": "244810"
  },
  {
    "text": "needs to be authenticated so when you sign into your a tubeless management console or you use the CLI you need to",
    "start": "244810",
    "end": "251140"
  },
  {
    "text": "provide your secret key and access key to authenticate a request when an",
    "start": "251140",
    "end": "256180"
  },
  {
    "text": "authenticated request reaches a resource then it's authorized so we collect all",
    "start": "256180",
    "end": "261880"
  },
  {
    "text": "the policies together and we authorize that request once it's authorized you",
    "start": "261880",
    "end": "268930"
  },
  {
    "text": "can perform that action could be create bucket put object get object and since",
    "start": "268930",
    "end": "274060"
  },
  {
    "text": "this is an s3 session I'm using the resources s3 so you can create a bucket in s3 or you can put object in an s3",
    "start": "274060",
    "end": "281590"
  },
  {
    "text": "bucket so that's how you should think of how I am overall works now we talked",
    "start": "281590",
    "end": "289870"
  },
  {
    "start": "287000",
    "end": "287000"
  },
  {
    "text": "about i.m policies over here I'm going to stick to user policies a user policies that you attach to a user so",
    "start": "289870",
    "end": "296860"
  },
  {
    "text": "your mental model is what can this user do typically you should use I am when",
    "start": "296860",
    "end": "302380"
  },
  {
    "text": "you prefer to keep the control in the iam environment and it spans across all aw services the similarity between an",
    "start": "302380",
    "end": "311080"
  },
  {
    "text": "iamb user policy and an s3 bucket policy is that it uses the same json language",
    "start": "311080",
    "end": "316830"
  },
  {
    "text": "the difference is the control is on the s3 side when you're writing an ass free",
    "start": "316830",
    "end": "321910"
  },
  {
    "text": "bucket policy and your mental model is who can access my bucket that's what you're trying to define in the s3 bucket",
    "start": "321910",
    "end": "327849"
  },
  {
    "text": "policy and it also helps you with granting cross account access so we'll",
    "start": "327849",
    "end": "332889"
  },
  {
    "text": "go through cross account access in a few slides so let's take an example on the",
    "start": "332889",
    "end": "340120"
  },
  {
    "text": "left you see a user policy that is hanging of a particular user this",
    "start": "340120",
    "end": "345430"
  },
  {
    "text": "particular user which is I can do a put object or a gate object on my reinvent",
    "start": "345430",
    "end": "352300"
  },
  {
    "text": "bucket on the right hand side I have the s3 bucket policy I've highlighted the",
    "start": "352300",
    "end": "358990"
  },
  {
    "text": "Parc which stands for principle action resource and condition that's your part",
    "start": "358990",
    "end": "364270"
  },
  {
    "text": "model when you write a policy so you can see that the principle has to",
    "start": "364270",
    "end": "369669"
  },
  {
    "text": "be defined in the resource policy which is my bucket policy whereas this is implicit because it's hanging of the",
    "start": "369669",
    "end": "375340"
  },
  {
    "text": "user that is hanging off the bucket which is the resource so in this",
    "start": "375340",
    "end": "380650"
  },
  {
    "text": "particular example this principle is going to do a get object on my reinvent",
    "start": "380650",
    "end": "385660"
  },
  {
    "text": "bucket provided it also satisfies the condition that those objects have a tag",
    "start": "385660",
    "end": "392620"
  },
  {
    "text": "called Project X so you are restricting or making your policy stricter with the",
    "start": "392620",
    "end": "398440"
  },
  {
    "text": "condition tag okay next we're going to",
    "start": "398440",
    "end": "405610"
  },
  {
    "start": "404000",
    "end": "404000"
  },
  {
    "text": "discuss ackles access control lists are a precursor to policies that you can",
    "start": "405610",
    "end": "410770"
  },
  {
    "text": "hang off a bucket or an object this is specific to s3 it's much simpler because",
    "start": "410770",
    "end": "416410"
  },
  {
    "text": "you need to give a permission and an apple needs a grantee so Eckles can only",
    "start": "416410",
    "end": "423130"
  },
  {
    "text": "grant access you cannot explicitly deny access without books it's written in XML you",
    "start": "423130",
    "end": "430330"
  },
  {
    "text": "can grant access to predefined groups such as all users and any authenticated user so first pro tip is you should use",
    "start": "430330",
    "end": "438070"
  },
  {
    "text": "caution when you are using Adwords especially with these groups because you are opening up your bucket or your",
    "start": "438070",
    "end": "443860"
  },
  {
    "text": "object to the public there we go actors",
    "start": "443860",
    "end": "451270"
  },
  {
    "text": "also give a finite set of permissions so you can do readwrite full control full control is something that you need for",
    "start": "451270",
    "end": "456880"
  },
  {
    "text": "cross account access and we're going to discuss that when we move to across account access in s3 most of you use",
    "start": "456880",
    "end": "463750"
  },
  {
    "text": "cases bucket policies with object tags for example and otherwise should be able",
    "start": "463750",
    "end": "469389"
  },
  {
    "text": "to cover most of your use cases you should use apples only if you are comfortable using apples within the s3",
    "start": "469389",
    "end": "476050"
  },
  {
    "text": "environment the fourth type of access",
    "start": "476050",
    "end": "482050"
  },
  {
    "start": "481000",
    "end": "481000"
  },
  {
    "text": "control mechanism is a VPC endpoint policy so if you can create a VPC so",
    "start": "482050",
    "end": "487240"
  },
  {
    "text": "that your traffic does not leave the Amazon Network and you don't have to use Internet gateways or NAT gateways to",
    "start": "487240",
    "end": "493870"
  },
  {
    "text": "grant access to your bucket now when you create an endpoint there has to be a",
    "start": "493870",
    "end": "499389"
  },
  {
    "text": "policy that allows access otherwise everything is denied and in the next few slides we're going",
    "start": "499389",
    "end": "504889"
  },
  {
    "text": "to talk about some of the endpoint policy examples that you can that you can use to control access to your s3",
    "start": "504889",
    "end": "510979"
  },
  {
    "text": "bucket through a BBC endpoint so in the first example I've created a V PC",
    "start": "510979",
    "end": "517880"
  },
  {
    "start": "515000",
    "end": "515000"
  },
  {
    "text": "endpoint and I want that any traffic that's going through that V PC endpoint should only access my secure bucket so",
    "start": "517880",
    "end": "526370"
  },
  {
    "text": "in this policy I have defined the resource and attached this policy to a V PC endpoint now say you have a large",
    "start": "526370",
    "end": "534829"
  },
  {
    "text": "organization and you don't want to explicitly grant each user or write a",
    "start": "534829",
    "end": "539959"
  },
  {
    "text": "policy that becomes big because they are explicitly listing them here so if you",
    "start": "539959",
    "end": "545029"
  },
  {
    "text": "use AWS organizations for example that manages different accounts you can use",
    "start": "545029",
    "end": "550430"
  },
  {
    "start": "549000",
    "end": "549000"
  },
  {
    "text": "the AWS colon principle org ID condition so in this particular policy what we are",
    "start": "550430",
    "end": "556579"
  },
  {
    "text": "doing is I'm allowing a principal star principal storm is everyone but the",
    "start": "556579",
    "end": "562279"
  },
  {
    "text": "condition has to be satisfied the condition says that you're using principal or allow only if that",
    "start": "562279",
    "end": "569209"
  },
  {
    "text": "principal belongs to my org so extended the previous policy with this condition",
    "start": "569209",
    "end": "574510"
  },
  {
    "text": "this policy is hanging off the end point now my secure bucket is the resource so",
    "start": "574510",
    "end": "582920"
  },
  {
    "text": "I want to also further I want only a few these principles coming through a",
    "start": "582920",
    "end": "588829"
  },
  {
    "text": "particular endpoint to access my bucket I don't want anybody else to do that so",
    "start": "588829",
    "end": "594890"
  },
  {
    "text": "in my bucket policy of the my secure bucket I write a policy where in the",
    "start": "594890",
    "end": "602449"
  },
  {
    "text": "condition block I say only if the traffic or the request comes through this particular endpoint only then you",
    "start": "602449",
    "end": "608750"
  },
  {
    "text": "should grant access so when you mix both of these examples it gives you more stricter controls",
    "start": "608750",
    "end": "615519"
  },
  {
    "text": "okay and the final one way as we talked about in access control mechanism it's",
    "start": "616700",
    "end": "622460"
  },
  {
    "start": "619000",
    "end": "619000"
  },
  {
    "text": "pre signed URLs some of our customers use pre signed URLs if they don't want to assign any AWS credentials to a lot",
    "start": "622460",
    "end": "630110"
  },
  {
    "text": "of developers that they have in their organization any I am user or role can",
    "start": "630110",
    "end": "635600"
  },
  {
    "text": "create a pre signed URL and define what action it can take such as put object or",
    "start": "635600",
    "end": "640790"
  },
  {
    "text": "get object so if they have the permission they can sign a URL any other user when they get hold of that URL can",
    "start": "640790",
    "end": "648200"
  },
  {
    "text": "assume that role and then do the action which is put object or get object so pre",
    "start": "648200",
    "end": "655070"
  },
  {
    "text": "signed URLs come with an expiration time something you should keep in mind is anybody with that that URL can assume",
    "start": "655070",
    "end": "663110"
  },
  {
    "text": "that role and perform that action so when using pre signed URLs please be careful as to who you are giving that",
    "start": "663110",
    "end": "669260"
  },
  {
    "text": "URL to okay so we talked about the different access control mechanisms",
    "start": "669260",
    "end": "675940"
  },
  {
    "text": "let's switch gears and talk about the new feature that we launched too few days ago so call Amazon s3 block public",
    "start": "675940",
    "end": "682160"
  },
  {
    "text": "asses and let's define public access first and then we'll move to what Amazon",
    "start": "682160",
    "end": "688220"
  },
  {
    "start": "684000",
    "end": "684000"
  },
  {
    "text": "s3 block probably accesses so any anonymous or overly permissive access is",
    "start": "688220",
    "end": "693770"
  },
  {
    "text": "something that we consider to be public for example with a cutes if you are",
    "start": "693770",
    "end": "700340"
  },
  {
    "text": "granting access to all users which is anybody on the internet or any authenticated user which is anybody with",
    "start": "700340",
    "end": "706730"
  },
  {
    "text": "an ADA bilious account we consider that to be a public access similarly in a",
    "start": "706730",
    "end": "712880"
  },
  {
    "text": "policy if you write a policy with principal star allow principal star resource star action star that's a very",
    "start": "712880",
    "end": "719240"
  },
  {
    "text": "powerful policy you've pretty much opened up access to the public so that is also considered to be public access",
    "start": "719240",
    "end": "727120"
  },
  {
    "text": "if you explicitly granted cross account access then that is not public access so",
    "start": "727120",
    "end": "735200"
  },
  {
    "text": "s3 block public access is a set of security controls it's a set of four security controls that you can apply to",
    "start": "735200",
    "end": "740690"
  },
  {
    "text": "an account or a bucket that overrides the settings that might have granted",
    "start": "740690",
    "end": "746360"
  },
  {
    "text": "public access to your bucket and your object you can do that through the API the CLI",
    "start": "746360",
    "end": "752940"
  },
  {
    "text": "the SDK and the console now for example",
    "start": "752940",
    "end": "758129"
  },
  {
    "text": "an administrator can set these settings at the account level and then write an",
    "start": "758129",
    "end": "763529"
  },
  {
    "text": "SCP so if you're using a tablet organizations scps or service control policies are",
    "start": "763529",
    "end": "768860"
  },
  {
    "text": "permission guardrails that you can put it's like a front door and that will",
    "start": "768860",
    "end": "774540"
  },
  {
    "text": "deny the action so you can write as SCP to denying action to it for anybody to change these settings once you've set",
    "start": "774540",
    "end": "780959"
  },
  {
    "text": "them including the root user only your org admin can change the SCP or change",
    "start": "780959",
    "end": "787740"
  },
  {
    "text": "the settings after that so let's go through each of these settings so the",
    "start": "787740",
    "end": "796139"
  },
  {
    "start": "794000",
    "end": "794000"
  },
  {
    "text": "first setting blocks new public apples on buckets and objects and it also",
    "start": "796139",
    "end": "801329"
  },
  {
    "text": "prevents anybody from uploading an object that has public apples so you should use this setting for future use",
    "start": "801329",
    "end": "807660"
  },
  {
    "text": "cases where you don't want anybody to update an actor on a bucket or an object and you don't want other applications",
    "start": "807660",
    "end": "814500"
  },
  {
    "text": "for example to upload objects that have public apples the second setting removes",
    "start": "814500",
    "end": "822899"
  },
  {
    "text": "public access granted through apples so say you have a bucket with a million or a billion objects and two of those",
    "start": "822899",
    "end": "829860"
  },
  {
    "text": "objects have been uploaded by an application or a developer and they've been made public so anybody if you don't",
    "start": "829860",
    "end": "838019"
  },
  {
    "text": "have an explicit denying your policy anybody can access those objects and you want to remove that access so with this",
    "start": "838019",
    "end": "844319"
  },
  {
    "text": "setting for existing objects and for future objects your public access",
    "start": "844319",
    "end": "849449"
  },
  {
    "text": "becomes moot because we will deny anybody from anybody from accessing that",
    "start": "849449",
    "end": "855540"
  },
  {
    "text": "object if you don't have it in your policy or a queue the last two settings",
    "start": "855540",
    "end": "861750"
  },
  {
    "text": "are about policies so the third setting blocks new public policies so we will",
    "start": "861750",
    "end": "866759"
  },
  {
    "text": "prevent you from attaching a policy such as principal star action star resource star on to your bucket the fourth",
    "start": "866759",
    "end": "876870"
  },
  {
    "text": "setting blocks public and cross account access if you have public policies",
    "start": "876870",
    "end": "882959"
  },
  {
    "text": "so if you've written a policy where you've explicitly granted access and we don't flag that as public then your poly",
    "start": "882959",
    "end": "889769"
  },
  {
    "text": "if you said this setting it's going to be fine however if you have a policy that has a statement that actually grants public",
    "start": "889769",
    "end": "897360"
  },
  {
    "text": "access we will flag that bucket to be public and then for the time being we will",
    "start": "897360",
    "end": "902759"
  },
  {
    "text": "remove any cross account or public access and restrict access to only authorized users within that account and",
    "start": "902759",
    "end": "910019"
  },
  {
    "text": "a tubeless service principles this is an intermediate stage where you can go and",
    "start": "910019",
    "end": "915449"
  },
  {
    "text": "your data is protected and you can go and update your policy and fix it to have explicit access now these are some",
    "start": "915449",
    "end": "925079"
  },
  {
    "text": "options that you can see in the console and we go to go through the demo but you can also do it for the API when you do",
    "start": "925079",
    "end": "932009"
  },
  {
    "text": "it through the API the API is called public access block it's an XML configuration file that you can either",
    "start": "932009",
    "end": "938279"
  },
  {
    "text": "attach to a bucket or you can attach to an account these are two different endpoints and the account endpoint is",
    "start": "938279",
    "end": "944339"
  },
  {
    "text": "the new endpoint that we introduced with this feature to get the status you can do a get public access block and to",
    "start": "944339",
    "end": "951629"
  },
  {
    "text": "remove it you can do a delete public access block we also introduced a new API called get bucket policy status",
    "start": "951629",
    "end": "958429"
  },
  {
    "text": "which if you were using the console you probably saw it in the console which was the public indicator now you can use",
    "start": "958429",
    "end": "964290"
  },
  {
    "text": "this particular API to see if your public policy if your policy has public",
    "start": "964290",
    "end": "970170"
  },
  {
    "text": "access or not from the policy perspective we use automated reasoning powered by zelkova to determine if your",
    "start": "970170",
    "end": "977370"
  },
  {
    "text": "policy is public or not so let's go to",
    "start": "977370",
    "end": "983579"
  },
  {
    "text": "the demo",
    "start": "983579",
    "end": "985878"
  },
  {
    "text": "now in this demo I have account 1 which is P data as the user and I'm going to",
    "start": "989060",
    "end": "995250"
  },
  {
    "text": "use her P data in chrome and the CLI and account to the user is Aria and to",
    "start": "995250",
    "end": "1001850"
  },
  {
    "text": "bucket names that we are going to deal with are no public access and across account so when you go to the s3 console",
    "start": "1001850",
    "end": "1012700"
  },
  {
    "text": "this is the screen that you will see you will see a new side navigation bar now",
    "start": "1012700",
    "end": "1018620"
  },
  {
    "text": "I'm going to increase the font of this so that folks at the back can also see",
    "start": "1018620",
    "end": "1024429"
  },
  {
    "text": "so what this says is in the side navigation bar it says public access settings for this account now when you",
    "start": "1027100",
    "end": "1034280"
  },
  {
    "text": "go now probably all of these settings will be set to false let me go back to",
    "start": "1034280",
    "end": "1042319"
  },
  {
    "text": "my bucket I am going to use this bucket where I have this object that is public",
    "start": "1042319",
    "end": "1052310"
  },
  {
    "text": "so it has public read access so if I go",
    "start": "1052310",
    "end": "1057860"
  },
  {
    "text": "to a different browser just to check",
    "start": "1057860",
    "end": "1064299"
  },
  {
    "text": "yep I can access it so let's go and check what the first setting does so the",
    "start": "1068880",
    "end": "1078690"
  },
  {
    "text": "first setting is to block new public ACLs and uploading public objects so if",
    "start": "1078690",
    "end": "1085500"
  },
  {
    "text": "I save that I have to confirm my intent and then I go back to my bucket say I",
    "start": "1085500",
    "end": "1098130"
  },
  {
    "text": "want to say somebody tries to make the this particular object public no I'll",
    "start": "1098130",
    "end": "1104760"
  },
  {
    "text": "get an access denied because we are not going to honor that quest now I've said",
    "start": "1104760",
    "end": "1112200"
  },
  {
    "text": "this at the account level so if you set it at the account level all the buckets within that account will inherit the property if you have set it at the",
    "start": "1112200",
    "end": "1119309"
  },
  {
    "text": "account level you can also set it at the bucket level but that's a redundant step and all of these settings are additive",
    "start": "1119309",
    "end": "1126539"
  },
  {
    "text": "so say I said setting one and setting two at the account level and I said setting three and four in the bucket",
    "start": "1126539",
    "end": "1132570"
  },
  {
    "text": "level for that particular bucket it's additive all the four settings will apply so I'm just going to play around",
    "start": "1132570",
    "end": "1139590"
  },
  {
    "text": "with the account settings at this point so I'm going to set the second setting as well which removes public access",
    "start": "1139590",
    "end": "1145309"
  },
  {
    "text": "granted through public ACLs I'm going to",
    "start": "1145309",
    "end": "1150630"
  },
  {
    "text": "confirm that and I've said this at the account level so this particular bucket",
    "start": "1150630",
    "end": "1158990"
  },
  {
    "text": "had this particular object pandered czar jpg to be public so let's try and see if",
    "start": "1159169",
    "end": "1167370"
  },
  {
    "text": "we can still access it from a different browser I'm in Chrome now No so even",
    "start": "1167370",
    "end": "1175890"
  },
  {
    "text": "though that object had public ACL during authorization time I will remove that public ACL so a couple of things you",
    "start": "1175890",
    "end": "1183090"
  },
  {
    "text": "should keep in mind well I'm going to get access denied so your public access through that Akal becomes moot and it",
    "start": "1183090",
    "end": "1191070"
  },
  {
    "text": "also removes the publication so when you do a get ACL we will remove the public",
    "start": "1191070",
    "end": "1197429"
  },
  {
    "text": "Akal part of this",
    "start": "1197429",
    "end": "1200450"
  },
  {
    "text": "so this setting is useful these two settings are useful if you don't use ACLs and you don't want anybody to",
    "start": "1203930",
    "end": "1210150"
  },
  {
    "text": "update your ACL to be public and you don't want to deal with any objects that",
    "start": "1210150",
    "end": "1216330"
  },
  {
    "text": "might have had public ACLs now you should keep in mind if your applications were based off of public ACLs then once",
    "start": "1216330",
    "end": "1223830"
  },
  {
    "text": "you do this those applications will break all right so let's try the third",
    "start": "1223830",
    "end": "1232590"
  },
  {
    "text": "which is block new public bucket policies so I'm going to set that at the account level as well and then I'm going",
    "start": "1232590",
    "end": "1243750"
  },
  {
    "text": "to try and update the bucket policy for this particular bucket with a public",
    "start": "1243750",
    "end": "1250110"
  },
  {
    "text": "policy [Music]",
    "start": "1250110",
    "end": "1255359"
  },
  {
    "text": "so this particular policy is doing action of s3 star and allowing anybody",
    "start": "1259980",
    "end": "1267059"
  },
  {
    "text": "access to this bucket so we try to do that",
    "start": "1267059",
    "end": "1273620"
  },
  {
    "text": "okay all right yeah access denied so I have prevented",
    "start": "1283360",
    "end": "1288910"
  },
  {
    "text": "anybody from attaching a public policy to my bucket let's try out the final",
    "start": "1288910",
    "end": "1296200"
  },
  {
    "text": "setting and see what he can do somebody would remove the third setting with because it will prevent me from updating",
    "start": "1296200",
    "end": "1303460"
  },
  {
    "text": "a public policy instead let's see how can I enforce",
    "start": "1303460",
    "end": "1308640"
  },
  {
    "text": "so once I've done that I'll go back to this bucket and see what happens if I",
    "start": "1314480",
    "end": "1321049"
  },
  {
    "text": "put a public policy",
    "start": "1321049",
    "end": "1324518"
  },
  {
    "text": "so in this policy the first statement grants public access it's pretty much principle star dot star and the second",
    "start": "1336570",
    "end": "1344880"
  },
  {
    "text": "statement actually explicitly grants the other user in the other account access",
    "start": "1344880",
    "end": "1351560"
  },
  {
    "text": "so when I save this policy the bucket has been flagged as public if I go back",
    "start": "1351560",
    "end": "1359940"
  },
  {
    "text": "to the first page the status has been updated as well so we've restricted",
    "start": "1359940",
    "end": "1365880"
  },
  {
    "text": "access to only authorized users of this account which because we flagged that policy to be public let's try to get an",
    "start": "1365880",
    "end": "1378540"
  },
  {
    "text": "object from this account so this is account one trying to access account twos bucket that bucket has been flagged",
    "start": "1378540",
    "end": "1384180"
  },
  {
    "text": "as public and access has been restricted so I'm doing a get object and access has",
    "start": "1384180",
    "end": "1392910"
  },
  {
    "text": "been denied I probably wanted this particular user to access it but because my policy was not written properly and",
    "start": "1392910",
    "end": "1400320"
  },
  {
    "text": "that right now this user cannot access the bucket so I'm going to fix the policy by going to the bucket policy tab",
    "start": "1400320",
    "end": "1410280"
  },
  {
    "text": "and I'm going to remove the statement",
    "start": "1410280",
    "end": "1415550"
  },
  {
    "text": "that grants public access so now I have explicit access to PD in account one so",
    "start": "1415550",
    "end": "1424350"
  },
  {
    "text": "when I do that you can see that the public indicator is gone and",
    "start": "1424350",
    "end": "1431660"
  },
  {
    "text": "and I'm able to get object from that so this is the object that I got in this",
    "start": "1434080",
    "end": "1440440"
  },
  {
    "text": "bucket yep it's the picture of a lion so",
    "start": "1440440",
    "end": "1446620"
  },
  {
    "text": "if you if you don't have use cases that require public access such as hosting s3",
    "start": "1446620",
    "end": "1452200"
  },
  {
    "text": "websites we recommend that you turn this on at the account level once you turn it on in the account level any existing",
    "start": "1452200",
    "end": "1459070"
  },
  {
    "text": "bucket and any future buckets that you create will inherit those properties there's one more thing through the",
    "start": "1459070",
    "end": "1466480"
  },
  {
    "text": "console when you try to create a bucket you will notice that these settings will",
    "start": "1466480",
    "end": "1480429"
  },
  {
    "text": "be turned on by default and this is only through the console now this is a redundant step if you already have the",
    "start": "1480429",
    "end": "1486220"
  },
  {
    "text": "account level protections in place but we wanted to ensure that it's intended where it you have an intention to make",
    "start": "1486220",
    "end": "1494019"
  },
  {
    "text": "objects or buckets public now this is not through the API through the API you have to manually set these settings as",
    "start": "1494019",
    "end": "1499960"
  },
  {
    "text": "you create a bucket so it's in the create bucket workflow okay",
    "start": "1499960",
    "end": "1509370"
  },
  {
    "text": "okay let's talk about how authorization works in s3 when you authorize a request",
    "start": "1511480",
    "end": "1517100"
  },
  {
    "start": "1516000",
    "end": "1516000"
  },
  {
    "text": "we actually take all the policies together object ackles bucket policies endpoint policies and policies together",
    "start": "1517100",
    "end": "1523910"
  },
  {
    "text": "and evaluate a request for the simplicity sake we're going to go through four examples and I've divided",
    "start": "1523910",
    "end": "1529850"
  },
  {
    "text": "them as user context check bucket context check and object context check so user context check is we check if the",
    "start": "1529850",
    "end": "1536750"
  },
  {
    "text": "parent account has granted this user access the bucket context check is to",
    "start": "1536750",
    "end": "1541820"
  },
  {
    "text": "check if the bucket owner has allowed this particular user to perform the",
    "start": "1541820",
    "end": "1546830"
  },
  {
    "text": "action the object context check is we look for an explicit allow if the object",
    "start": "1546830",
    "end": "1552560"
  },
  {
    "text": "Apple grants access or not so by default all decisions start a deny then we",
    "start": "1552560",
    "end": "1561740"
  },
  {
    "text": "evaluate all the policies together and as we're doing that we look for an explicit deny is there an explicit deny",
    "start": "1561740",
    "end": "1568640"
  },
  {
    "text": "in the statement if there is an explicit deny then another prototype it will",
    "start": "1568640",
    "end": "1573920"
  },
  {
    "text": "override all allows now say you don't have an explicit deny then we look for",
    "start": "1573920",
    "end": "1580610"
  },
  {
    "text": "an explicit allow is there an allow in any of the policies for the user to",
    "start": "1580610",
    "end": "1586250"
  },
  {
    "text": "perform an action on the resource if there is then the final decision is allowed otherwise it goes back to the",
    "start": "1586250",
    "end": "1592940"
  },
  {
    "text": "default decision which is deny so it's denied by default we're going to take",
    "start": "1592940",
    "end": "1599240"
  },
  {
    "text": "four examples the first example is say PD is a root user with admin privileges",
    "start": "1599240",
    "end": "1607570"
  },
  {
    "start": "1602000",
    "end": "1602000"
  },
  {
    "text": "I'm trying to do a bucket operation on a bucket that is owned by my account when",
    "start": "1607570",
    "end": "1614810"
  },
  {
    "text": "I do that then we don't do the user check in the bucket check we see that PD",
    "start": "1614810",
    "end": "1620540"
  },
  {
    "text": "has root credentials and if I have given permission for PD to access the bucket",
    "start": "1620540",
    "end": "1626960"
  },
  {
    "text": "and perform like list bucket operation then the access is granted if not the access is denied what if PD's and I am",
    "start": "1626960",
    "end": "1635870"
  },
  {
    "text": "user in the same account but does not have root credentials in that case",
    "start": "1635870",
    "end": "1642890"
  },
  {
    "text": "I'll check the user check in the user context we'll check if the user policy",
    "start": "1642890",
    "end": "1648230"
  },
  {
    "text": "that has been attached to PD allows PD to perform the action of say list bucket",
    "start": "1648230",
    "end": "1653360"
  },
  {
    "text": "if so since the context Authority is the same account we will do those checks",
    "start": "1653360",
    "end": "1659780"
  },
  {
    "text": "together and authorize that request if the user policy does not allow PD to",
    "start": "1659780",
    "end": "1665330"
  },
  {
    "text": "perform that action then we will deny that access so what happens if P DS and",
    "start": "1665330",
    "end": "1672290"
  },
  {
    "text": "user in account one and is trying to do a bucket operation in account 2 then we",
    "start": "1672290",
    "end": "1678920"
  },
  {
    "text": "have to check both the user policy that is attached to PD we have to check whether the parent account so account",
    "start": "1678920",
    "end": "1685760"
  },
  {
    "text": "one has allowed PD to perform that list bucket operation in account twos bucket",
    "start": "1685760",
    "end": "1691100"
  },
  {
    "text": "in the bucket check context we will check if account two has written a",
    "start": "1691100",
    "end": "1697640"
  },
  {
    "text": "bucket policy that allows PD to do the list bucket in my or account twos bucket or not only when they match that's when",
    "start": "1697640",
    "end": "1705350"
  },
  {
    "text": "the access is authorized otherwise it's denied and finally if",
    "start": "1705350",
    "end": "1711290"
  },
  {
    "start": "1710000",
    "end": "1710000"
  },
  {
    "text": "there is so PD is a user in account one accessing an object that belongs to",
    "start": "1711290",
    "end": "1717710"
  },
  {
    "text": "account three and the bucket belongs to account to all the checks we have to",
    "start": "1717710",
    "end": "1723140"
  },
  {
    "text": "evaluate the speedy have the necessary permissions to do that that particular",
    "start": "1723140",
    "end": "1728390"
  },
  {
    "text": "operation has the bucket policy or active allowed PD to do that operation",
    "start": "1728390",
    "end": "1733610"
  },
  {
    "text": "and if there is an object in that bucket is there an explicit allow look for that",
    "start": "1733610",
    "end": "1739820"
  },
  {
    "text": "operation so this is a good segue for cross account access so in case of cross",
    "start": "1739820",
    "end": "1747470"
  },
  {
    "text": "account access let's take an example it's going to be a simple example probably you see in data Lakes so say",
    "start": "1747470",
    "end": "1753170"
  },
  {
    "start": "1752000",
    "end": "1752000"
  },
  {
    "text": "you have account a account hey as a bucket account so account a has written",
    "start": "1753170",
    "end": "1759380"
  },
  {
    "text": "a bucket policy for account B to write objects in their bucket at this point",
    "start": "1759380",
    "end": "1765850"
  },
  {
    "text": "account a can only delete that object or deny access to that object because",
    "start": "1765850",
    "end": "1771410"
  },
  {
    "text": "account a is paying for the storage of that object account a cannot read it now this is where actors come into picture",
    "start": "1771410",
    "end": "1777920"
  },
  {
    "text": "so since account B has written that object account B owns that object",
    "start": "1777920",
    "end": "1783040"
  },
  {
    "text": "whoever uploads the object is the object owner so in this case I am granting a",
    "start": "1783040",
    "end": "1789740"
  },
  {
    "text": "full control to accounting so with full control I can have the permissions of reading the object but say it's a big",
    "start": "1789740",
    "end": "1797330"
  },
  {
    "text": "organization I have multiple accounts if I want to grant access to account see an",
    "start": "1797330",
    "end": "1803270"
  },
  {
    "text": "account D you cannot just write a bucket policy and grant access to objects that",
    "start": "1803270",
    "end": "1808370"
  },
  {
    "text": "you don't own the bucket policy will apply to objects that account a owns so",
    "start": "1808370",
    "end": "1815150"
  },
  {
    "text": "there are two ways where you can grant access to accounts en accounting number one would be apples you can",
    "start": "1815150",
    "end": "1822800"
  },
  {
    "text": "update the apple on that object and explicitly grant access to account C in accounting you're probably dealing with",
    "start": "1822800",
    "end": "1830510"
  },
  {
    "text": "now this is with one object if you're probably dealing with like millions of object that might not be the best way to",
    "start": "1830510",
    "end": "1836300"
  },
  {
    "text": "do so so one of the other recommendation is you create a role within account a",
    "start": "1836300",
    "end": "1843070"
  },
  {
    "text": "give that role permission to do a get object and then also write a trust",
    "start": "1843070",
    "end": "1848990"
  },
  {
    "text": "policy that allows that role can be assumed by other accounts such as C and",
    "start": "1848990",
    "end": "1854060"
  },
  {
    "text": "D and we write a trust policy in C and D this is the trust policy that you attach",
    "start": "1854060",
    "end": "1861350"
  },
  {
    "text": "to account see an account D with the action of STS assume role that I can",
    "start": "1861350",
    "end": "1866750"
  },
  {
    "text": "assume account a role when they assume that role that's where they get to do a",
    "start": "1866750",
    "end": "1872750"
  },
  {
    "text": "get object on objects that account a does not own now this is a very simple example of cross account access we'd",
    "start": "1872750",
    "end": "1879470"
  },
  {
    "text": "like to go deeper we have a chalk talk tomorrow where we will go deeper and do open Q&A on managing cross account",
    "start": "1879470",
    "end": "1885290"
  },
  {
    "text": "access cross account access",
    "start": "1885290",
    "end": "1891100"
  },
  {
    "start": "1892000",
    "end": "1892000"
  },
  {
    "text": "one of the use cases where customers use cross account taxes is when they do cross region replication and they want",
    "start": "1892890",
    "end": "1898780"
  },
  {
    "text": "to maintain two different ownership stacks so they want the source objects",
    "start": "1898780",
    "end": "1903820"
  },
  {
    "text": "in their primary bucket to be owned by a particular account and to maintain your",
    "start": "1903820",
    "end": "1909309"
  },
  {
    "text": "dr or business continuity they do a cross region replication and the same request change the account ownership to",
    "start": "1909309",
    "end": "1917470"
  },
  {
    "text": "a different account so this way they are protecting from threat actors the two different copies and maintaining their",
    "start": "1917470",
    "end": "1923860"
  },
  {
    "text": "dr and business continuity in this particular scenario we have to ensure",
    "start": "1923860",
    "end": "1930100"
  },
  {
    "text": "that when you write the bucket policies in two different buckets they have the necessary permissions to perform these",
    "start": "1930100",
    "end": "1935470"
  },
  {
    "text": "actions the copy operation as well as changing the account ownership okay so",
    "start": "1935470",
    "end": "1943240"
  },
  {
    "text": "we're going to switch gears and talk about encryption in the cloud talking about a double encryption when your data",
    "start": "1943240",
    "end": "1950110"
  },
  {
    "start": "1948000",
    "end": "1948000"
  },
  {
    "text": "is in transit if you're using SDKs or CLI we ensure that your data is",
    "start": "1950110",
    "end": "1956020"
  },
  {
    "text": "protected with HTTP and TLS if you're not using the SDK or CLI and you want",
    "start": "1956020",
    "end": "1961150"
  },
  {
    "text": "your custom applications to upload to s3 we highly recommend that you send it over with SSL or TSL TLS for encryption",
    "start": "1961150",
    "end": "1971919"
  },
  {
    "text": "at rest we have three ways to do so you have server-side encryption with s3",
    "start": "1971919",
    "end": "1978220"
  },
  {
    "text": "managed keys which is SSE s3 so Amazon s3 uses aes-256 algorithm and then we",
    "start": "1978220",
    "end": "1985600"
  },
  {
    "text": "use envelope encryption so s3 will manage the master keys and the data case you should keep in mind that if there is",
    "start": "1985600",
    "end": "1992740"
  },
  {
    "text": "an authorized request and the object comes out of the s3 subsystem it's going to be decrypted after it leaves the s3",
    "start": "1992740",
    "end": "1998890"
  },
  {
    "text": "subsystem another way to do server-side encryption is with kms managed keys so",
    "start": "1998890",
    "end": "2005190"
  },
  {
    "text": "your master keys are maintained in a SS kms the data key and the object the",
    "start": "2005190",
    "end": "2010950"
  },
  {
    "text": "ciphertext is stored in s3 the third way",
    "start": "2010950",
    "end": "2017370"
  },
  {
    "text": "of doing server-side encryption is where the customer manages the keys and then you give us the information and we",
    "start": "2017370",
    "end": "2023480"
  },
  {
    "text": "the encryption for you or you could do it on the client side where the client",
    "start": "2023480",
    "end": "2029750"
  },
  {
    "text": "or the customer is doing the encrypted object and all we are doing is destroying the object so let's talk a",
    "start": "2029750",
    "end": "2037490"
  },
  {
    "text": "little bit about sse KMS with sse KMS it's a - it's a it's an envelope",
    "start": "2037490",
    "end": "2043400"
  },
  {
    "start": "2040000",
    "end": "2040000"
  },
  {
    "text": "encryption where the customer master key creates a data key for a unique data key",
    "start": "2043400",
    "end": "2049070"
  },
  {
    "text": "for every object and then we use the plaintext of that data key to encrypt",
    "start": "2049070",
    "end": "2054710"
  },
  {
    "text": "the object and then store it on s3 we throw away the plaintext immediately and",
    "start": "2054710",
    "end": "2059870"
  },
  {
    "text": "then we stored the cipher text of that encrypted data key and the object in s3",
    "start": "2059870",
    "end": "2068710"
  },
  {
    "text": "when somebody wants to decrypt that object they will do a get object we will",
    "start": "2068710",
    "end": "2074300"
  },
  {
    "text": "send the cipher text data key to k ms KMS we'll see that if they have the",
    "start": "2074300",
    "end": "2080030"
  },
  {
    "text": "necessary permissions to call the decrypt API as well and then send the",
    "start": "2080030",
    "end": "2085669"
  },
  {
    "text": "plaintext data key back we will decrypt the object and send it back so with kms the important thing is your",
    "start": "2085670",
    "end": "2093020"
  },
  {
    "text": "master keys are managed by the kms service you can do audit logging for",
    "start": "2093020",
    "end": "2098270"
  },
  {
    "text": "example by using a tubeless cloud trail as well as you can have additional usage grants so you can not only define who",
    "start": "2098270",
    "end": "2106670"
  },
  {
    "text": "gets to do the get object you orgin also define in KMS who can call the decrypt",
    "start": "2106670",
    "end": "2112160"
  },
  {
    "text": "api if I don't have the permissions to call the decrypt API then I won't get",
    "start": "2112160",
    "end": "2117860"
  },
  {
    "text": "the object because it's going to be encrypted so I'm getting garbage basically so that's where it gives you",
    "start": "2117860",
    "end": "2123560"
  },
  {
    "text": "more more granular control on the data",
    "start": "2123560",
    "end": "2129770"
  },
  {
    "text": "that you have so the benefits are that you have more granular management you have a centralized axis that is",
    "start": "2129770",
    "end": "2135920"
  },
  {
    "text": "auditable with a double scrout trail and then it also gives you better performance for encrypting larger data",
    "start": "2135920",
    "end": "2143530"
  },
  {
    "text": "so one of the things that we launched last year was a way to have a bucket configuration where you enable default",
    "start": "2143530",
    "end": "2150590"
  },
  {
    "text": "encryption so if you want to ensure that all objects that go and we store an s3",
    "start": "2150590",
    "end": "2155960"
  },
  {
    "start": "2153000",
    "end": "2153000"
  },
  {
    "text": "needs to be encrypted by default you can use or change the setting or the",
    "start": "2155960",
    "end": "2162049"
  },
  {
    "text": "configuration of the bucket and define the mode whether it's sse s3 or sec KMS if the put object does not have an",
    "start": "2162049",
    "end": "2169729"
  },
  {
    "text": "encryption header then it will be encrypted by the mode that you've defined in the bucket configuration now",
    "start": "2169729",
    "end": "2176150"
  },
  {
    "text": "one of the things we've done you should keep in mind is if say you have SS e s3",
    "start": "2176150",
    "end": "2181219"
  },
  {
    "text": "defined as your default configuration mode and your application has the encryption header to encrypt the object",
    "start": "2181219",
    "end": "2189170"
  },
  {
    "text": "with kms then we will honor that request so even though your default encryption",
    "start": "2189170",
    "end": "2194599"
  },
  {
    "text": "says SS e s3 since your application has asked us to use sse KMS we will use sse",
    "start": "2194599",
    "end": "2201259"
  },
  {
    "text": "KMS and that object will be encrypted with sse KMS more so the last topic",
    "start": "2201259",
    "end": "2211039"
  },
  {
    "text": "before I handover the stage to Chris is about monitoring security the easiest",
    "start": "2211039",
    "end": "2216289"
  },
  {
    "text": "way to do that is by going to the console where we will show you if your",
    "start": "2216289",
    "end": "2221569"
  },
  {
    "text": "bucket has public access or not we actually introduced three more statuses that gives you more insight into whether",
    "start": "2221569",
    "end": "2227959"
  },
  {
    "text": "objects can be public whether your bucket policy the fourth setting that we talked about in s we block public access",
    "start": "2227959",
    "end": "2234699"
  },
  {
    "text": "the similar settings you can check for free by using a SS trusted adviser it's",
    "start": "2234699",
    "end": "2241099"
  },
  {
    "text": "in the console where the free bucket permission checks tell you whether your bucket has open apples it provides read",
    "start": "2241099",
    "end": "2249079"
  },
  {
    "text": "access write access or if your policy is granting public access or not you can",
    "start": "2249079",
    "end": "2256759"
  },
  {
    "text": "also set up managed rules so if you use a doubles config you can set up a rule there are two rules have highlighted",
    "start": "2256759",
    "end": "2262069"
  },
  {
    "text": "here which tells you whether your bucket has public read or public write or you",
    "start": "2262069",
    "end": "2270170"
  },
  {
    "text": "can use Amazon Macy so Amazon Macy uses machine learning in the backend to",
    "start": "2270170",
    "end": "2275569"
  },
  {
    "text": "identify whether there is PII data or not it's not just not only checks for",
    "start": "2275569",
    "end": "2280609"
  },
  {
    "text": "open buckets but also shows you a dashboard of where you have PII data and whether we should have them or not you",
    "start": "2280609",
    "end": "2288979"
  },
  {
    "text": "can also do audit with a double is cloud trail and s3 server access logs you can check who's",
    "start": "2288979",
    "end": "2296990"
  },
  {
    "text": "calling those API so API actions are logged aw sprout trail is a new is a",
    "start": "2296990",
    "end": "2302300"
  },
  {
    "text": "service whereas s3 server access logs is something that you can use natively within s3 the other thing that you can",
    "start": "2302300",
    "end": "2309860"
  },
  {
    "text": "use is the object encryption the inventory report where it shows the",
    "start": "2309860",
    "end": "2316040"
  },
  {
    "text": "encryption status so some of our customers actually use that report for their compliance mode to see which of",
    "start": "2316040",
    "end": "2322130"
  },
  {
    "text": "their objects have been encrypted and which haven't been so these are the few",
    "start": "2322130",
    "end": "2327610"
  },
  {
    "text": "capabilities that you have to monitor your security now with that I'm going to",
    "start": "2327610",
    "end": "2334460"
  },
  {
    "text": "hand over the stage to Chris Chris is going to talk about how they're using s3",
    "start": "2334460",
    "end": "2339470"
  },
  {
    "text": "4 in Capital One thanks for joining my",
    "start": "2339470",
    "end": "2353270"
  },
  {
    "text": "name is Chris Schultz I work at Capital One I run an engineering team that we",
    "start": "2353270",
    "end": "2358400"
  },
  {
    "text": "don't work on any specific application but we specialize and I am and I get pulled into a lot of s3 problems so we",
    "start": "2358400",
    "end": "2365420"
  },
  {
    "text": "support all of our developer teams so who is Capital One we're really a tech",
    "start": "2365420",
    "end": "2372650"
  },
  {
    "start": "2368000",
    "end": "2368000"
  },
  {
    "text": "company that happens to be a bank started out as a credit card company and over the years we've gotten pretty good",
    "start": "2372650",
    "end": "2377990"
  },
  {
    "text": "at using data we pioneered that in the credit card industry which seems like old hat now we were the first ones to do",
    "start": "2377990",
    "end": "2383900"
  },
  {
    "text": "that in the mid 90s but here's some stats so got about 50,000 associates you",
    "start": "2383900",
    "end": "2389060"
  },
  {
    "text": "know 27 billion in revenues fortune 100 company we're also one of the largest",
    "start": "2389060",
    "end": "2395510"
  },
  {
    "text": "banks now so just you can read that if you'd like a little bit about who we are more than just a credit card company",
    "start": "2395510",
    "end": "2404020"
  },
  {
    "start": "2405000",
    "end": "2405000"
  },
  {
    "text": "Capital One is also it's part of being a technology company we're cloud first we really started experimenting with this",
    "start": "2405220",
    "end": "2412060"
  },
  {
    "text": "way back in 2014 which seems like forever ago and with the some of the",
    "start": "2412060",
    "end": "2418910"
  },
  {
    "text": "features that were launched that you're reinvent we decided to go all-in on a us7 2015 we basically said you know what",
    "start": "2418910",
    "end": "2426190"
  },
  {
    "text": "we're giving up our data centers we're moving to the cloud so we are almost there we're hoping to shut down the last",
    "start": "2426190",
    "end": "2433180"
  },
  {
    "text": "of our data centers next year our reasons are simple a lot of people think",
    "start": "2433180",
    "end": "2438699"
  },
  {
    "text": "costs or infinite scale things like that but really our primary reason was to give our developers agility to rapidly",
    "start": "2438699",
    "end": "2446920"
  },
  {
    "text": "respond to customer needs in a dynamic marketplace it's all about getting value out there as fast as we can",
    "start": "2446920",
    "end": "2454089"
  },
  {
    "text": "prior to this you know Capital One was kind of that centralized IT organization with a lot of processes it would take",
    "start": "2454089",
    "end": "2461229"
  },
  {
    "text": "nine months to a year to get an application from idea to market our first production app it was a micro",
    "start": "2461229",
    "end": "2467529"
  },
  {
    "text": "service went from nothing to in production in about six to eight weeks going into the cloud so we've really",
    "start": "2467529",
    "end": "2474039"
  },
  {
    "text": "kind of seen the benefits of that agility so that also underscores the fact that we're trying to decentralize",
    "start": "2474039",
    "end": "2479769"
  },
  {
    "text": "everything and in AWS enable is enabling us to move away from these complex",
    "start": "2479769",
    "end": "2485650"
  },
  {
    "text": "processes and really put a lot of the power at the hands of the developer and",
    "start": "2485650",
    "end": "2494529"
  },
  {
    "text": "that's where as three kind of comes into play it's really easy to use for our developers it's got a low footprint it's",
    "start": "2494529",
    "end": "2501099"
  },
  {
    "text": "a low barrier to entry and it's got some great logging as PD just mentioned but if any of you are in security any",
    "start": "2501099",
    "end": "2507599"
  },
  {
    "text": "security specialists in here you know this really should scare you because you",
    "start": "2507599",
    "end": "2512709"
  },
  {
    "text": "know you're defining your access to your data right there now we're giving it to",
    "start": "2512709",
    "end": "2518259"
  },
  {
    "text": "our developers so we my team has done a lot of work to try to kind of put some",
    "start": "2518259",
    "end": "2523509"
  },
  {
    "text": "guardrails so what the developers to have that agility still let them do their job and do not think there's some",
    "start": "2523509",
    "end": "2528940"
  },
  {
    "text": "IT process gunk getting in their way but try to enable them to do things in a",
    "start": "2528940",
    "end": "2535029"
  },
  {
    "text": "safe way so the first use I'm going to show you is public ackles it's not really how to",
    "start": "2535029",
    "end": "2540910"
  },
  {
    "text": "use them it's how to prevent them and one of the reasons why this feature that PD is talking about today is we're just",
    "start": "2540910",
    "end": "2546549"
  },
  {
    "text": "we really like it before the s3 team came out with that we developed the",
    "start": "2546549",
    "end": "2551859"
  },
  {
    "text": "small print here is about a hundred thirty lines of I am syntax that we attached almost every I am entity in our environment so we have over 250",
    "start": "2551859",
    "end": "2560020"
  },
  {
    "text": "accounts now I've got maybe 10 to 12,000 interactive humans coming into those 250",
    "start": "2560020",
    "end": "2565270"
  },
  {
    "text": "accounts doing variety of things and this policy gets attached all there I am oles it gets attached to all their",
    "start": "2565270",
    "end": "2571930"
  },
  {
    "text": "instance profiles and everything and that blocks the use of apples and s3 so you can either flip the switch that PD",
    "start": "2571930",
    "end": "2578829"
  },
  {
    "text": "talked about or you can sit down and try to write this the downside of this is it",
    "start": "2578829",
    "end": "2585160"
  },
  {
    "text": "does break a few things like CloudFront but we don't do that very often so we centralize that it also goes a little",
    "start": "2585160",
    "end": "2592930"
  },
  {
    "text": "bit beyond denying public apples one of the things that this does it also prevents the use of account",
    "start": "2592930",
    "end": "2600190"
  },
  {
    "text": "specific apples so you can actually set an apple that says only that account over there can access my object we don't",
    "start": "2600190",
    "end": "2606550"
  },
  {
    "text": "like that very much either because you can't control what account a developer is putting on that object so where do",
    "start": "2606550",
    "end": "2615880"
  },
  {
    "text": "you get in the use of apples well we have all these developers writing bucket policies and they're not quite attending",
    "start": "2615880",
    "end": "2623079"
  },
  {
    "text": "these sessions and going through the to the depth of understanding what they're doing they're writing a policy and it",
    "start": "2623079",
    "end": "2629500"
  },
  {
    "text": "just doesn't work and they you read the documentation limit when you get oh look an apple let me put this authenticated",
    "start": "2629500",
    "end": "2636069"
  },
  {
    "text": "user Akal on my object oh look it suddenly works well they've just opened up that object everybody else who has",
    "start": "2636069",
    "end": "2644280"
  },
  {
    "text": "access to Amazon eat whether it's a Capital One account or somebody else's account and that it gets very dangerous",
    "start": "2644280",
    "end": "2649900"
  },
  {
    "text": "so something like this blocks that activity you really need a broad design",
    "start": "2649900",
    "end": "2657220"
  },
  {
    "text": "statement in your bucket policies because if you all you have is an allow and your bucket policy and you may only",
    "start": "2657220",
    "end": "2664150"
  },
  {
    "text": "list a couple of users that are allowed to have access to your bucket somebody inadvertently sets an Akal on an object",
    "start": "2664150",
    "end": "2669970"
  },
  {
    "text": "that's not explicit I'll allow for say something like public and now your",
    "start": "2669970",
    "end": "2675160"
  },
  {
    "text": "bucket policies rendered almost irrelevant for those objects there's",
    "start": "2675160",
    "end": "2681609"
  },
  {
    "text": "another conditional that PD touched on in the endpoint principle org ID is great to use in your bucket policies",
    "start": "2681609",
    "end": "2688780"
  },
  {
    "text": "because you can do it you have to do it deny I say deny effectively unless you're in your org and that'll trump any",
    "start": "2688780",
    "end": "2696070"
  },
  {
    "text": "other allow an attacker so remember what PD said if you have an explicit deny that trumps any allow if you don't have",
    "start": "2696070",
    "end": "2703600"
  },
  {
    "text": "that deny an explicit allow like a public alcohol comes along that is what",
    "start": "2703600",
    "end": "2709930"
  },
  {
    "text": "the result is so we're gonna still",
    "start": "2709930",
    "end": "2716830"
  },
  {
    "text": "probably keep this in place but also here's p d--'s work as well so i want to",
    "start": "2716830",
    "end": "2722740"
  },
  {
    "text": "talk about how we do cross account access in one of our use cases you know we're bank we do this thing called pci",
    "start": "2722740",
    "end": "2728369"
  },
  {
    "text": "which in the US as a set of standards on how that credit card issuers had put out",
    "start": "2728369",
    "end": "2734440"
  },
  {
    "text": "there that says here's how you handle security when it comes to customer data if you're handling credit cards you have",
    "start": "2734440",
    "end": "2742380"
  },
  {
    "text": "different accounts here that may have",
    "start": "2742380",
    "end": "2747400"
  },
  {
    "text": "different types of data so account a that you see on the left is what we call",
    "start": "2747400",
    "end": "2752950"
  },
  {
    "text": "fully in the scope for PCI data it might actually have credit card information it might have other sensitive data that is",
    "start": "2752950",
    "end": "2761369"
  },
  {
    "text": "deemed PCI it requires an annual review from an external auditor that cost",
    "start": "2761369",
    "end": "2766480"
  },
  {
    "text": "somebody so you have to go hire somebody they come in and they run through this set of controls go yep you're good or no",
    "start": "2766480",
    "end": "2771820"
  },
  {
    "text": "you failed this and you have to do that annually you have to keep up with that now account B is talking to a county so",
    "start": "2771820",
    "end": "2780670"
  },
  {
    "text": "that means it's still in this PCI rule because they're talking to each other and whenever anything touches PCI",
    "start": "2780670",
    "end": "2785830"
  },
  {
    "text": "suddenly it becomes PCI but it doesn't have any PCI data in it well we can",
    "start": "2785830",
    "end": "2793420"
  },
  {
    "text": "actually do annual review like we're supposed to go we can use an internal auditor which cost a lot less money",
    "start": "2793420",
    "end": "2798700"
  },
  {
    "text": "still have to adhere to the same controls but it's not quite as expensive",
    "start": "2798700",
    "end": "2804190"
  },
  {
    "text": "and then finally accounts see because it's only attached to this account that",
    "start": "2804190",
    "end": "2810130"
  },
  {
    "text": "doesn't have PCI data at the b1 in the middle it's not PCI so you can relax some of those controls potentially and",
    "start": "2810130",
    "end": "2816400"
  },
  {
    "text": "it doesn't necessarily need an annual audit but being a bank week still do that anyways so this is setting",
    "start": "2816400",
    "end": "2822760"
  },
  {
    "text": "up our use case so you've got something",
    "start": "2822760",
    "end": "2827800"
  },
  {
    "text": "in account a that's pulling in data and maybe it's a data tokenizer tokenization",
    "start": "2827800",
    "end": "2834070"
  },
  {
    "text": "is this process where you take something like a credit card account number and you convert it and do some other",
    "start": "2834070",
    "end": "2840220"
  },
  {
    "text": "identifiers that is meaningless in the marketplace so if it leaked it wouldn't mean anything outside of our company but",
    "start": "2840220",
    "end": "2847180"
  },
  {
    "text": "we could go back and reverse it if we wanted to to kind of reverse that account number if we ever have to but once it's tokenized",
    "start": "2847180",
    "end": "2853410"
  },
  {
    "text": "it's considered not PCI is that data is then written over to the account B so",
    "start": "2853410",
    "end": "2859720"
  },
  {
    "text": "tokenizer running an account area with account credentials is potentially writing it on P and then maybe you want something I don't know maybe some",
    "start": "2859720",
    "end": "2866470"
  },
  {
    "text": "analytics statement generator running an account C to be able to pull that so how",
    "start": "2866470",
    "end": "2873850"
  },
  {
    "text": "do you do this the wrong way so account a write stuff as account a and account B",
    "start": "2873850",
    "end": "2879840"
  },
  {
    "text": "and you've got to the bucket policy allows puts from the tokenizer and gets from the analytics but for some",
    "start": "2879840",
    "end": "2887230"
  },
  {
    "text": "reason account C can't do it because you haven't set any apples you haven't done",
    "start": "2887230",
    "end": "2892420"
  },
  {
    "text": "anything to enable that because the object is owned by a and as PD pointed out a bucket policy cannot effect access",
    "start": "2892420",
    "end": "2901390"
  },
  {
    "text": "on an object it does not own and this stumps a lot of people and this is",
    "start": "2901390",
    "end": "2906400"
  },
  {
    "text": "simple where sometimes the developer scratches their head and goes I need an apple and they put in a public act or",
    "start": "2906400",
    "end": "2911620"
  },
  {
    "text": "something like that and that would be bad",
    "start": "2911620",
    "end": "2915000"
  },
  {
    "text": "so how do you do this with an apple the tokenizer can set an object Akal that",
    "start": "2918800",
    "end": "2925640"
  },
  {
    "text": "you see here with a count C's ID and the bucket policy still allows that access",
    "start": "2925640",
    "end": "2931910"
  },
  {
    "text": "in from account see and now Accountancy can read that because there's an echo on that object",
    "start": "2931910",
    "end": "2937550"
  },
  {
    "text": "that says yep count C's allowed to read it no other account can but it counts you can but it can be risky in some",
    "start": "2937550",
    "end": "2945350"
  },
  {
    "text": "environments because like I said before in that previous use case I can't write an ion policy that says this developer",
    "start": "2945350",
    "end": "2952340"
  },
  {
    "text": "can only write code that it's only around as a plow to set Ackles these particular account IDs so I don't have a",
    "start": "2952340",
    "end": "2958490"
  },
  {
    "text": "backstop I don't have a control those developers we'd actually have to go in and check every object and see that",
    "start": "2958490",
    "end": "2965300"
  },
  {
    "text": "those accounts really are ours we can generate a lot of objects in some of our",
    "start": "2965300",
    "end": "2971900"
  },
  {
    "text": "buckets that can get very problematic so",
    "start": "2971900",
    "end": "2976940"
  },
  {
    "text": "the better way to do it is to do assume roles so when we start you're doing this",
    "start": "2976940",
    "end": "2982360"
  },
  {
    "text": "3-4 years again a lot of developers to work aw a savvy didn't even understand",
    "start": "2982360",
    "end": "2987830"
  },
  {
    "text": "what assumed role was and this is really important so you're in the county you've got your instance profile running",
    "start": "2987830",
    "end": "2993860"
  },
  {
    "text": "an account and you're actually doing a zoom roll call over to with account B and you grab its credentials and then",
    "start": "2993860",
    "end": "3001240"
  },
  {
    "text": "you do all your s3 actions into account B with those as soon roll credentials why do you do that because you're doing",
    "start": "3001240",
    "end": "3008200"
  },
  {
    "text": "the put as account B and now the object is owned by the same account that owns the bucket and the bucket policy can now",
    "start": "3008200",
    "end": "3015370"
  },
  {
    "text": "affect control of objects in that bucket so account C comes along and needs to do",
    "start": "3015370",
    "end": "3023200"
  },
  {
    "text": "it to get it's allowed access so it's a bit more consistent the other nice thing",
    "start": "3023200",
    "end": "3031480"
  },
  {
    "text": "about this is if you only ever want your tokenizer to write into that bucket there's a little trust policy on that s3",
    "start": "3031480",
    "end": "3038860"
  },
  {
    "text": "writer role and you can set that trust policy it only allows the tokenizer to assume it but no one else in account B",
    "start": "3038860",
    "end": "3045100"
  },
  {
    "text": "can so it gives you a little bit more granular access going into that bucket",
    "start": "3045100",
    "end": "3051990"
  },
  {
    "text": "so this gives us multiple account access into an s3 bucket if we were to have",
    "start": "3052220",
    "end": "3061650"
  },
  {
    "text": "accounts D through Z in this model it's a lot easier because they don't have to worry about the Ackles because all the",
    "start": "3061650",
    "end": "3067410"
  },
  {
    "text": "objects are owned by account B in the previous model we're actually writing",
    "start": "3067410",
    "end": "3072599"
  },
  {
    "text": "this grant read ACP with a specific account ID if you go in add account D",
    "start": "3072599",
    "end": "3079670"
  },
  {
    "text": "then you have to go back and maybe you want to account D to have access to all those objects you have to go back and",
    "start": "3079670",
    "end": "3084839"
  },
  {
    "text": "reset all those Ackles to include account D no older than account ecomes along you've got to go back and do the",
    "start": "3084839",
    "end": "3091020"
  },
  {
    "text": "same thing and maybe by that time you're the billions of objects that gets very problematic so our philosophy is we",
    "start": "3091020",
    "end": "3098220"
  },
  {
    "text": "really try to push people away from apples in general and really try to get",
    "start": "3098220",
    "end": "3104460"
  },
  {
    "text": "them into the assumed role we've run into some vendor products that don't want to do this they've been on the",
    "start": "3104460",
    "end": "3110310"
  },
  {
    "text": "marketplace for a while they try to use apples everywhere where you really try to push those vendors to not do that",
    "start": "3110310",
    "end": "3116700"
  },
  {
    "text": "anymore and implement this",
    "start": "3116700",
    "end": "3121790"
  },
  {
    "text": "I think that's there we go and NOPD is coming up for a quick recap",
    "start": "3126130",
    "end": "3133079"
  },
  {
    "text": "cap before we open it up for Q&A thanks Chris",
    "start": "3133079",
    "end": "3138299"
  },
  {
    "text": "few things that we rehash today some of the best practices or pro tips that we discussed please follow the principle of",
    "start": "3138299",
    "end": "3144819"
  },
  {
    "start": "3140000",
    "end": "3140000"
  },
  {
    "text": "least privilege have granular controls and don't open up access most of you use",
    "start": "3144819",
    "end": "3150279"
  },
  {
    "text": "cases will not require public access so we recommend turning on the esti block public access with an authorization all",
    "start": "3150279",
    "end": "3157180"
  },
  {
    "text": "decisions start with the deny and then an explicit deny will override allows use default encryption to protect your",
    "start": "3157180",
    "end": "3164049"
  },
  {
    "text": "data further and then you have different monitoring tools to monitor and audit your data so we have seven minutes left",
    "start": "3164049",
    "end": "3171549"
  },
  {
    "text": "and we will go on the side of the state if you have questions please come talk to us after seven minutes we can hang",
    "start": "3171549",
    "end": "3177519"
  },
  {
    "text": "out outside to answer your questions again thank you so much for your time [Applause]",
    "start": "3177519",
    "end": "3186650"
  }
]