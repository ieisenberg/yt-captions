[
  {
    "start": "0",
    "end": "38000"
  },
  {
    "text": "Does your app need\nto handle orders at scale",
    "start": "240",
    "end": "2674"
  },
  {
    "text": "and show the delivery status\nof those orders?",
    "start": "2674",
    "end": "5314"
  },
  {
    "text": "Stick around.",
    "start": "5314",
    "end": "6250"
  },
  {
    "text": "I'll show you the services\nthat you need to get started.",
    "start": "6250",
    "end": "9140"
  },
  {
    "text": "Today's episode comes from Tamunowari",
    "start": "17670",
    "end": "20042"
  },
  {
    "text": "who is a recent College graduate\nin Nigeria.",
    "start": "20042",
    "end": "22750"
  },
  {
    "text": "During his time in College,",
    "start": "22860",
    "end": "24144"
  },
  {
    "text": "he realized there was no efficient way\nto order meals, especially at night.",
    "start": "24144",
    "end": "28644"
  },
  {
    "text": "Now he wants to build an app\nthat serves the Nigerian market,",
    "start": "28644",
    "end": "32160"
  },
  {
    "text": "allowing Nigerians to have food delivered\nto them from restaurants.",
    "start": "32160",
    "end": "36242"
  },
  {
    "text": "Let's hear from Tamunowari.",
    "start": "36242",
    "end": "38414"
  },
  {
    "start": "38000",
    "end": "99000"
  },
  {
    "text": "Hello, I'm Tamunowari and I'm innovating\nthe food delivery market in Nigeria.",
    "start": "38414",
    "end": "42938"
  },
  {
    "text": "Food delivery in Nigeria is very inefficient.\nIt takes hours to get your order.",
    "start": "43094",
    "end": "47820"
  },
  {
    "text": "I've provided a solution to that.",
    "start": "48270",
    "end": "50280"
  },
  {
    "text": "I'm creating a marketplace consisting\nof vendors, users, and delivery guys.",
    "start": "50670",
    "end": "55093"
  },
  {
    "text": "Users place orders to vendors\nand delivery guys pick them up.",
    "start": "55094",
    "end": "59280"
  },
  {
    "text": "Vendors don't have direct interaction with\nthe users, just the delivery guy.",
    "start": "59670",
    "end": "65841"
  },
  {
    "text": "The users don't have\ndirect contact with anybody,",
    "start": "66036",
    "end": "69300"
  },
  {
    "text": "any of the individuals on the marketplace.",
    "start": "69750",
    "end": "72170"
  },
  {
    "text": "They just see the order\non the app and delivery guys",
    "start": "72290",
    "end": "75845"
  },
  {
    "text": "deliver it to the users.",
    "start": "75846",
    "end": "77673"
  },
  {
    "text": "Tamunowari's application will be\nin charge of displaying the menus,",
    "start": "78730",
    "end": "82806"
  },
  {
    "text": "communicating the orders\nto the restaurants,",
    "start": "82806",
    "end": "85242"
  },
  {
    "text": "and ensuring that food gets delivered\nto hungry customers as soon as possible.",
    "start": "85242",
    "end": "89845"
  },
  {
    "text": "Along the way,",
    "start": "90028",
    "end": "90832"
  },
  {
    "text": "I'll show you the services you should use\nto build an ecommerce app",
    "start": "90832",
    "end": "94432"
  },
  {
    "text": "and that allow users to see the status\nof their orders in real time.",
    "start": "94432",
    "end": "98800"
  },
  {
    "start": "99000",
    "end": "521000"
  },
  {
    "text": "I recommend using a serverless\nmicroservices architecture for this application.",
    "start": "99910",
    "end": "104713"
  },
  {
    "text": "In a microservices architecture,",
    "start": "104890",
    "end": "106937"
  },
  {
    "text": "the application is composed of independent services\nthat communicate over well-defined APIs.",
    "start": "106938",
    "end": "113370"
  },
  {
    "text": "This agile approach will help you improve\nmaintainability and scalability.",
    "start": "113550",
    "end": "118506"
  },
  {
    "text": "A typical serverless microservices infrastructure\nis composed of Amazon API Gateway",
    "start": "118698",
    "end": "124506"
  },
  {
    "text": "and AWS Lambda Functions.",
    "start": "124506",
    "end": "126521"
  },
  {
    "text": "API Gateway makes it easy to create,\nmaintain and secure REST APIs at any scale.",
    "start": "126666",
    "end": "132798"
  },
  {
    "text": "You can think of API Gateway as\nthe front door to access your backend.",
    "start": "132954",
    "end": "137090"
  },
  {
    "text": "Lambda lets you run code without having\nto think about servers or clusters.",
    "start": "137260",
    "end": "142086"
  },
  {
    "text": "Lambda will take care\nof everything required to run",
    "start": "142278",
    "end": "145156"
  },
  {
    "text": "and scale the execution\nto meet the actual traffic demand",
    "start": "145156",
    "end": "149250"
  },
  {
    "text": "with high availability.",
    "start": "149250",
    "end": "151234"
  },
  {
    "text": "You'll create Lambda Functions\nfor each business process.",
    "start": "151235",
    "end": "154622"
  },
  {
    "text": "API Gateway will synchronously trigger\nthe right Lambda Function",
    "start": "154816",
    "end": "158881"
  },
  {
    "text": "depending on the service you need\nto reach.",
    "start": "159016",
    "end": "161398"
  },
  {
    "text": "For Tamunowari,",
    "start": "161399",
    "end": "162846"
  },
  {
    "text": "that means creating\na Lambda Function for the user service,",
    "start": "162846",
    "end": "165698"
  },
  {
    "text": "order service, payment service,\nmenu service, and delivery service.",
    "start": "165698",
    "end": "169264"
  },
  {
    "text": "I just listed five microservices\nand your MVP might have as many or more.",
    "start": "169264",
    "end": "174686"
  },
  {
    "text": "So to speed up your development,\nmake sure you check out",
    "start": "174808",
    "end": "177962"
  },
  {
    "text": "the API Gateway\nwith Lambda Solutions Construct.",
    "start": "177976",
    "end": "181302"
  },
  {
    "text": "I've dropped a link to it\nat the bottom of the video.",
    "start": "181302",
    "end": "184046"
  },
  {
    "text": "This is an out of the box solution that deploys\nan edge optimized API Gateway endpoint",
    "start": "184168",
    "end": "190014"
  },
  {
    "text": "that is connected to a Lambda Function.",
    "start": "190014",
    "end": "192340"
  },
  {
    "text": "The users need to authenticate themselves",
    "start": "193030",
    "end": "195242"
  },
  {
    "text": "to be able to access\nthe application and order their food.",
    "start": "195242",
    "end": "199214"
  },
  {
    "text": "Amazon Cognito lets you add\nuser sign up, sign in,",
    "start": "199372",
    "end": "202334"
  },
  {
    "text": "and access control to your apps quickly.",
    "start": "202334",
    "end": "205166"
  },
  {
    "text": "Cognito has a concept called user pools\nwhich you can think of as a user directory.",
    "start": "205348",
    "end": "210102"
  },
  {
    "text": "You can use a Cognito User Pool to control\nwho can access your API in API Gateway.",
    "start": "210246",
    "end": "216030"
  },
  {
    "text": "This is useful when you have\ndifferent personas using your app.",
    "start": "216150",
    "end": "219409"
  },
  {
    "text": "In Tamunowari's app,",
    "start": "219520",
    "end": "220996"
  },
  {
    "text": "the user that wants to order food\nshould have access to different APIs",
    "start": "220996",
    "end": "225414"
  },
  {
    "text": "than the restaurant owner\nand the person delivering the food.",
    "start": "225414",
    "end": "229360"
  },
  {
    "text": "Choosing the right database takes\nsome research, but it's worth your time.",
    "start": "229690",
    "end": "234844"
  },
  {
    "text": "I've dropped a link to a video below",
    "start": "234844",
    "end": "237062"
  },
  {
    "text": "that can help you think\nthrough how to select a database.",
    "start": "237062",
    "end": "240642"
  },
  {
    "text": "Since Tamunowari is building\na food delivery app,",
    "start": "240786",
    "end": "243554"
  },
  {
    "text": "a relational database would work well.",
    "start": "243652",
    "end": "246159"
  },
  {
    "text": "Relational databases are a solid choice",
    "start": "246730",
    "end": "249054"
  },
  {
    "text": "when you're building a transactional system\nand want data accuracy and consistency.",
    "start": "249054",
    "end": "254190"
  },
  {
    "text": "Amazon Aurora is a MySQL and Postgres\ncompatible relational database built for the cloud.",
    "start": "254370",
    "end": "260139"
  },
  {
    "text": "He'll use Aurora\nto perform CRUD operations on food orders.",
    "start": "260770",
    "end": "265194"
  },
  {
    "text": "You'll want to build search functionality\nto help your users discover the right product to buy.",
    "start": "265362",
    "end": "271120"
  },
  {
    "text": "Amazon Elasticsearch provides a fast\nand personalized search experience for your app.",
    "start": "271450",
    "end": "277060"
  },
  {
    "text": "Elasticsearch achieves fast responses",
    "start": "277060",
    "end": "280074"
  },
  {
    "text": "because it searches\nan index instead of the text directly.",
    "start": "280074",
    "end": "283962"
  },
  {
    "text": "This is like retrieving pages in a book related\nto a keyword by scanning the index",
    "start": "284106",
    "end": "289781"
  },
  {
    "text": "as opposed to searching\nevery word of every page.",
    "start": "289782",
    "end": "292780"
  },
  {
    "text": "I'll walk through how you could build this functionality\nusing Tamunowari's app as an example.",
    "start": "293230",
    "end": "298370"
  },
  {
    "text": "When a user logs into Tamunowari's app,",
    "start": "298540",
    "end": "301154"
  },
  {
    "text": "the user will search for their favorite restaurants\nor for a specific food.",
    "start": "301252",
    "end": "305570"
  },
  {
    "text": "This functionality is built\non API Gateway,",
    "start": "305740",
    "end": "308526"
  },
  {
    "text": "calling a Lambda Function and the Lambda Function\nrequesting the search item in Elasticsearch.",
    "start": "308526",
    "end": "314690"
  },
  {
    "text": "To process payments,",
    "start": "315070",
    "end": "316362"
  },
  {
    "text": "you can build your own payment processor\nor use a third party.",
    "start": "316362",
    "end": "319722"
  },
  {
    "text": "My suggestion is to use a third party",
    "start": "319866",
    "end": "322098"
  },
  {
    "text": "so you can get your app\nto market as soon as possible.",
    "start": "322098",
    "end": "325900"
  },
  {
    "text": "You would use Lambda to trigger\nthe third party payment processor.",
    "start": "326350",
    "end": "330102"
  },
  {
    "text": "Once the payment has been processed,",
    "start": "330246",
    "end": "332070"
  },
  {
    "text": "you'll use a Lambda Function to trigger\nAmazon's Simple Notification Service.",
    "start": "332070",
    "end": "336580"
  },
  {
    "text": "Simple Notification Service is\na pub sub messaging service",
    "start": "337150",
    "end": "340732"
  },
  {
    "text": "that can be used\nto send messages to millions of users.",
    "start": "340732",
    "end": "344837"
  },
  {
    "text": "Lambda triggering\nSimple Notification Service",
    "start": "344838",
    "end": "347356"
  },
  {
    "text": "is a common architecture pattern\nfor event driven apps.",
    "start": "347356",
    "end": "351750"
  },
  {
    "text": "You can use Lambda with the Simple\nNotification Service Solutions Construct",
    "start": "351750",
    "end": "356622"
  },
  {
    "text": "to pre-configure these services together\nwith security best practices built in.",
    "start": "356622",
    "end": "362162"
  },
  {
    "text": "I've left a link to this\nat the bottom of the video.",
    "start": "362296",
    "end": "365199"
  },
  {
    "text": "When the order is confirmed,",
    "start": "365830",
    "end": "367289"
  },
  {
    "text": "it is sent to a central message queue\nmanaged by Amazon Simple Queue Service.",
    "start": "367350",
    "end": "372362"
  },
  {
    "text": "Simple Queue Service is\na message queuing service",
    "start": "372556",
    "end": "375196"
  },
  {
    "text": "that enables you\nto decouple and scale microservices.",
    "start": "375196",
    "end": "378558"
  },
  {
    "text": "It is really important that\nthe purchases are kept in order",
    "start": "378558",
    "end": "382480"
  },
  {
    "text": "so that there are no delays for the users.",
    "start": "382480",
    "end": "385110"
  },
  {
    "text": "A first in first out queue\nwill ensure that the order",
    "start": "385110",
    "end": "388275"
  },
  {
    "text": "in which the messages are sent\nand received is strictly preserved.",
    "start": "388276",
    "end": "392742"
  },
  {
    "text": "It will also ensure that\nthe message is only delivered once",
    "start": "392742",
    "end": "396508"
  },
  {
    "text": "and that no duplicates are introduced\ninto the queue.",
    "start": "396508",
    "end": "400070"
  },
  {
    "text": "Now I'll go over how to verify\nthe status of the order in real time",
    "start": "400510",
    "end": "405304"
  },
  {
    "text": "based on the location of the order.",
    "start": "405304",
    "end": "407785"
  },
  {
    "text": "Amazon Location Service\nmakes it easy for developers",
    "start": "407968",
    "end": "411162"
  },
  {
    "text": "to add location functionality\nto their app.",
    "start": "411162",
    "end": "414422"
  },
  {
    "text": "Location Geofences gives your application\nthe ability to detect and act",
    "start": "414616",
    "end": "419680"
  },
  {
    "text": "when a tracked device enters or exits\na geographical boundary you define as a geofence.",
    "start": "419680",
    "end": "426570"
  },
  {
    "text": "When a location update crosses\nthe boundaries of one or more geofences,",
    "start": "426570",
    "end": "430698"
  },
  {
    "text": "Amazon EventBridge receives\nthe Geofence Event.",
    "start": "430698",
    "end": "434260"
  },
  {
    "text": "EventBridge is a serverless event bus",
    "start": "435010",
    "end": "437524"
  },
  {
    "text": "that makes it easier to build\nevent driven applications at scale.",
    "start": "437524",
    "end": "442073"
  },
  {
    "text": "EventBridge will route the data from\nthe Geofence to a Lambda Function,",
    "start": "442242",
    "end": "446776"
  },
  {
    "text": "which will then publish a message to SNS",
    "start": "446776",
    "end": "449610"
  },
  {
    "text": "and trigger a notification to your users.",
    "start": "449610",
    "end": "453005"
  },
  {
    "text": "This architecture pattern of using\nlocation service for map and geofence data",
    "start": "453006",
    "end": "458152"
  },
  {
    "text": "and passing that data\nto EventBridge to react in real time",
    "start": "458152",
    "end": "462472"
  },
  {
    "text": "can be used for almost every app\nthat needs to manage deliveries.",
    "start": "462472",
    "end": "466949"
  },
  {
    "text": "Now it's time for a recap.",
    "start": "466950",
    "end": "469370"
  },
  {
    "text": "Add user sign in with Amazon Cognito.",
    "start": "469750",
    "end": "472218"
  },
  {
    "text": "Use API Gateway with AWS Lambda\nto build each microservice.",
    "start": "472314",
    "end": "476430"
  },
  {
    "text": "All of your order data is stored\nin Amazon Aurora.",
    "start": "476550",
    "end": "479561"
  },
  {
    "text": "Use Amazon Elasticsearch to provide\na quick search experience in your app.",
    "start": "479706",
    "end": "483806"
  },
  {
    "text": "Notify users of their order\nwith Amazon's Simple Notification Service.",
    "start": "483928",
    "end": "487898"
  },
  {
    "text": "Use a FIFO queue with Amazon's Simple\nQueue Service to process orders.",
    "start": "488044",
    "end": "492186"
  },
  {
    "text": "Send real time notifications based on\nthe location of the delivery worker",
    "start": "492318",
    "end": "496266"
  },
  {
    "text": "using Amazon's Location Service.",
    "start": "496266",
    "end": "498194"
  },
  {
    "text": "That's what you need to build an ecommerce app\nwith location based notifications.",
    "start": "498352",
    "end": "503586"
  },
  {
    "text": "It doesn't matter when you start\nas long as you just get started!",
    "start": "503586",
    "end": "506800"
  },
  {
    "text": "Thanks for hanging out with me.\nSee you soon.",
    "start": "506800",
    "end": "508819"
  }
]