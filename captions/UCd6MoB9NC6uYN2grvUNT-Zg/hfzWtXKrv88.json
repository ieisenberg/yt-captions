[
  {
    "start": "0",
    "end": "74000"
  },
  {
    "text": "muy buenos dias hasta maana so my name is Frank moons I work as a Technical",
    "start": "780",
    "end": "7060"
  },
  {
    "text": "Evangelist for the german-speaking countries Germany Austria Switzerland so it's a great honor to be invited to",
    "start": "7060",
    "end": "13599"
  },
  {
    "text": "Barcelona I always wanted to visit Cuba on so it's fantastic to be here it's",
    "start": "13599",
    "end": "19930"
  },
  {
    "text": "also great to see the huge interest in this topic I hope the the magic didn't make you to",
    "start": "19930",
    "end": "28300"
  },
  {
    "text": "stay after the coffee break it's actually just the opposite that I want to do in this presentation is cut out",
    "start": "28300",
    "end": "35080"
  },
  {
    "text": "the magic and explain a little bit after why and how we do service mesh so that's",
    "start": "35080",
    "end": "42190"
  },
  {
    "text": "the purpose of this talk and it's a very technical talk it starts slowly I have",
    "start": "42190",
    "end": "48070"
  },
  {
    "text": "to put some things together and then I want to give you the full picture why I've mentioned and how app",
    "start": "48070",
    "end": "54310"
  },
  {
    "text": "mesh and to explain you this even a little bit more I want to take you back",
    "start": "54310",
    "end": "60250"
  },
  {
    "text": "in time back in time to a time before micro services do you remember that time",
    "start": "60250",
    "end": "66240"
  },
  {
    "text": "some of you we are some of you are laughing that are there yeah people in",
    "start": "66240",
    "end": "71650"
  },
  {
    "text": "my age probably there was such a time and I took this black and white copy",
    "start": "71650",
    "end": "78490"
  },
  {
    "start": "74000",
    "end": "74000"
  },
  {
    "text": "from a book it's a book about early clouds and service-oriented architecture",
    "start": "78490",
    "end": "85270"
  },
  {
    "text": "and at that time we had those monolithic systems applications that had an API",
    "start": "85270",
    "end": "92790"
  },
  {
    "text": "that exposed an API and we had to make them talk to each other and we already",
    "start": "92790",
    "end": "97990"
  },
  {
    "text": "understood that having point-to-point connections is not going to make it you know why because then you have this",
    "start": "97990",
    "end": "104650"
  },
  {
    "text": "square complexity if you connect you know just ten services to each other",
    "start": "104650",
    "end": "109810"
  },
  {
    "text": "with a point-to-point connection it's not going to work it so we put this bus in the middle like the ESB and the",
    "start": "109810",
    "end": "115390"
  },
  {
    "text": "trekker of the ESB was its experts it's exposing the API of the service at the",
    "start": "115390",
    "end": "120729"
  },
  {
    "text": "ESB and we changed the client to talk to the ESB and the ESB would then forward a call to",
    "start": "120729",
    "end": "126820"
  },
  {
    "text": "the service implementation so it's kind of intercepting this call and",
    "start": "126820",
    "end": "131910"
  },
  {
    "text": "the whole architecture is working really well and I can list you like Dawson of",
    "start": "131910",
    "end": "137760"
  },
  {
    "text": "companies in Central Europe that do exactly this so it did exactly this like 10 years ago and I did a couple of",
    "start": "137760",
    "end": "143520"
  },
  {
    "text": "projects and very often we call this ESB also a little bit academic service",
    "start": "143520",
    "end": "149490"
  },
  {
    "text": "virtualization layer and just keep this in mind it's becoming useful later so it",
    "start": "149490",
    "end": "155010"
  },
  {
    "text": "reduces the complexity it implements a Vito pattern it validates enrich and",
    "start": "155010",
    "end": "160470"
  },
  {
    "text": "transforms the messages that go through the bus and then it operates under messages so you could have a condition",
    "start": "160470",
    "end": "166530"
  },
  {
    "text": "that says you know if this header or this payload or this transport protocol then don't go to version 1 then go to",
    "start": "166530",
    "end": "173460"
  },
  {
    "text": "version 2 so there was a lot of I don't want to call it magic but there was a lot of things in this ESB already I want",
    "start": "173460",
    "end": "181950"
  },
  {
    "text": "to call them cross-cutting concerns like versioning monitoring security now I did",
    "start": "181950",
    "end": "187830"
  },
  {
    "text": "as I told you a lot of these projects and then I kind of wondered like how does this work together with the new",
    "start": "187830",
    "end": "193560"
  },
  {
    "text": "world of micro services when you don't have a single monolithic back-end but maybe a dozen or hundreds of services",
    "start": "193560",
    "end": "200250"
  },
  {
    "text": "and that's a fair question for a long time honestly I didn't have an answer now one question is could you just keep",
    "start": "200250",
    "end": "206340"
  },
  {
    "text": "the big monolithic service bus is it bad because it's monolithic and the answer's no not really there is some kind of",
    "start": "206340",
    "end": "212700"
  },
  {
    "text": "impedance mismatch but it's not per se bad because it's monolithic I would say one thing that was often sold as an",
    "start": "212700",
    "end": "220470"
  },
  {
    "text": "advantage for this USB architecture was there is configuration driven yeah I don't have to restart it normally mostly",
    "start": "220470",
    "end": "228330"
  },
  {
    "text": "if you change configuration if you tell this operation people what will they do",
    "start": "228330",
    "end": "234120"
  },
  {
    "text": "they will tell you well if it's mostly not necessary then I will restart every",
    "start": "234120",
    "end": "239220"
  },
  {
    "text": "single time in production now think about using the same one allayed 417",
    "start": "239220",
    "end": "244830"
  },
  {
    "text": "micro services and you restarted every time you want to change something it's not going to work ok let's just keep",
    "start": "244830",
    "end": "251010"
  },
  {
    "text": "this in mind and fast forward to today you're all building micro services don't you how do you build them how does the",
    "start": "251010",
    "end": "259440"
  },
  {
    "start": "258000",
    "end": "258000"
  },
  {
    "text": "modern application architecture look like from a technical architecture perspective",
    "start": "259440",
    "end": "265380"
  },
  {
    "text": "what are the building blocks well it's cube car no its containers obviously it's all containers now it's not all",
    "start": "265380",
    "end": "272670"
  },
  {
    "text": "containers if we are fair there is server less there is AWS lambda and we had these discussions many times",
    "start": "272670",
    "end": "279600"
  },
  {
    "text": "like when were should you go to lambda when should you use your containers and certainly lambda gives us the higher",
    "start": "279600",
    "end": "285900"
  },
  {
    "text": "abstraction level it makes things easier but it's not suitable for everything so",
    "start": "285900",
    "end": "291390"
  },
  {
    "text": "there will be containers and there will be lambda and then I get a lot of questions because I spend a lot of time",
    "start": "291390",
    "end": "296790"
  },
  {
    "text": "in the container space and and people still say so now I have this MySQL little database application and can I",
    "start": "296790",
    "end": "304770"
  },
  {
    "text": "put my SQL in a docker container of course you can the thing is should you and the answer is well it depends if",
    "start": "304770",
    "end": "311610"
  },
  {
    "text": "it's suitable for your use case if it's a small use case well maybe do it if you want to have",
    "start": "311610",
    "end": "317340"
  },
  {
    "text": "this working across regions across availability zones maybe for 64 terabyte",
    "start": "317340",
    "end": "323400"
  },
  {
    "text": "of data multi master with six copies of your data and you want to build this",
    "start": "323400",
    "end": "329580"
  },
  {
    "text": "yourself never do it know if there is a cloud service for it like AWS Aurora",
    "start": "329580",
    "end": "335130"
  },
  {
    "text": "used to service problem soft it's very easy no thinking so we have containers",
    "start": "335130",
    "end": "341730"
  },
  {
    "text": "we have server less and we have all these hundred sixty-five other services",
    "start": "341730",
    "end": "346830"
  },
  {
    "text": "that we offer as of today is that it not really there's one thing missing it's",
    "start": "346830",
    "end": "352440"
  },
  {
    "text": "easy to it's still around and it will probably stay around for a while and also keep this in mind just for a number",
    "start": "352440",
    "end": "360240"
  },
  {
    "text": "of minutes like five minutes so the old ESB so architecture those classical",
    "start": "360240",
    "end": "366090"
  },
  {
    "text": "building blocks now if we run containers we have challenges for running",
    "start": "366090",
    "end": "372420"
  },
  {
    "start": "368000",
    "end": "368000"
  },
  {
    "text": "containers at scale I spend a lot of time talking about docker showing docker at conferences and I pled guilty for you",
    "start": "372420",
    "end": "379020"
  },
  {
    "text": "know starting up 100 docker containers in a full loop on my small little laptop and tell people look this is how it",
    "start": "379020",
    "end": "385320"
  },
  {
    "text": "scales but it's not a thing that's not how you can run docker in production one",
    "start": "385320",
    "end": "391620"
  },
  {
    "text": "problem is that those containers are very transient they go away they come back how can you keep track of what's",
    "start": "391620",
    "end": "397229"
  },
  {
    "text": "happening how can you monitor them the other thing is the containers itself and in the networking is becoming",
    "start": "397229",
    "end": "403320"
  },
  {
    "text": "increasingly complex so it's a distributed system in its own it's it's",
    "start": "403320",
    "end": "409470"
  },
  {
    "text": "complex and even the scheduling is this a cool question or so if you have a",
    "start": "409470",
    "end": "414870"
  },
  {
    "text": "thousand containers running across machines where would you put the next container in a in a sensible way and",
    "start": "414870",
    "end": "420960"
  },
  {
    "text": "that's not something that you want to decide for yourself and then we tend to forget because we live in this illusion",
    "start": "420960",
    "end": "428160"
  },
  {
    "text": "that docker gives us that docker is not virtualization no it's just isolation it",
    "start": "428160",
    "end": "433800"
  },
  {
    "text": "sometimes feels like a little little image but it's not no it's just this",
    "start": "433800",
    "end": "439170"
  },
  {
    "text": "little bit of magic created by see groups and namespaces from the Linux kernel and we're fooled and and tempted",
    "start": "439170",
    "end": "447750"
  },
  {
    "text": "to believe its virtualization but it's not it's just isolated processes that run on one host and what happens if this",
    "start": "447750",
    "end": "454830"
  },
  {
    "text": "house goes down or needs to be patched or if somebody locks in to this host and his super user and kills your process so",
    "start": "454830",
    "end": "462150"
  },
  {
    "text": "there's a lot of things that need to be addressed and probably you need to reschedule container scheduler containers and so there needs to be",
    "start": "462150",
    "end": "469440"
  },
  {
    "text": "tooling so one thing after the docker period was that we learned after understanding docker was that docker is",
    "start": "469440",
    "end": "476190"
  },
  {
    "text": "not enough we need more so there needs to be some some tooling around it and we",
    "start": "476190",
    "end": "482430"
  },
  {
    "text": "built those tooling for you and it's actually easy yes you'd be surprised no at Keuka and I",
    "start": "482430",
    "end": "489540"
  },
  {
    "text": "talked about EEZs now ECS is the orchestration service that we build which is probably the easiest one if you",
    "start": "489540",
    "end": "496980"
  },
  {
    "text": "want to get started with contain containers today on AWS it integrates nicely with the entire AWS platform it",
    "start": "496980",
    "end": "505260"
  },
  {
    "text": "scales to very very large clusters and it provides service integration like alb",
    "start": "505260",
    "end": "511830"
  },
  {
    "text": "and the network load balancer at a container level so if you want to get started in a very easy way that's the",
    "start": "511830",
    "end": "518580"
  },
  {
    "text": "way to go and this could be the end of the story basically but then kubernetes",
    "start": "518580",
    "end": "524310"
  },
  {
    "text": "came and entered the stage now and we all like kubernetes isn't it that's why",
    "start": "524310",
    "end": "530430"
  },
  {
    "text": "we're here that's why we're in Buffalo so I started to look into kubernetes",
    "start": "530430",
    "end": "535650"
  },
  {
    "text": "like two and a half years ago and I was super eager I had some you know well system architecture background strong",
    "start": "535650",
    "end": "542730"
  },
  {
    "text": "talk of the crown and the stood Linux and I bought like four pieces of hardware I have to admit it was just",
    "start": "542730",
    "end": "549030"
  },
  {
    "text": "forestry pies and I built a small cluster and I was like with all my docker knowledge I thought now I'm gonna",
    "start": "549030",
    "end": "554910"
  },
  {
    "text": "run kubernetes and show it on the in the conferences and it was like Christmas two years ago and I miserably failed",
    "start": "554910",
    "end": "561570"
  },
  {
    "text": "know with all my operations background and talk of background and I understood it's not that easy to really run docker",
    "start": "561570",
    "end": "569610"
  },
  {
    "text": "in production this is this is quite hard now you have to have operational knowledge of sorry running kubernetes in",
    "start": "569610",
    "end": "576690"
  },
  {
    "text": "production you have to have operational knowledge of running kubernetes and you cannot give this to an Operations team",
    "start": "576690",
    "end": "582630"
  },
  {
    "text": "that is basically restarting processes if something goes wrong killing them and restarting them this is not going to cut",
    "start": "582630",
    "end": "589950"
  },
  {
    "text": "it and that was the I think the next learning that we had to know when we understood like the demos that we do",
    "start": "589950",
    "end": "596520"
  },
  {
    "text": "with mini cube on one computer they're just it's not like the real thing in in",
    "start": "596520",
    "end": "602520"
  },
  {
    "text": "production so we spoke to a lot of customers and the customer said you know",
    "start": "602520",
    "end": "607950"
  },
  {
    "text": "we understand we can run kubernetes on ec2 but then they had the same issues",
    "start": "607950",
    "end": "613230"
  },
  {
    "text": "that I had no they had to have a lot of operational knowledge which very often they hadn't and those customers said",
    "start": "613230",
    "end": "619470"
  },
  {
    "text": "couldn't you run kubernetes for us and that's basically what we do with eks and",
    "start": "619470",
    "end": "625250"
  },
  {
    "start": "625000",
    "end": "625000"
  },
  {
    "text": "eks is a managed kubernetes service that we offer so it's a fully managed control",
    "start": "625250",
    "end": "630570"
  },
  {
    "text": "plane it's multi availability zone it's the right size master set up its source",
    "start": "630570",
    "end": "635730"
  },
  {
    "text": "the difficult problems like making a CD highly available at CDs where kubernetes",
    "start": "635730",
    "end": "641100"
  },
  {
    "text": "is storing the state so we give it provision iOS we back it up we restarted if if something goes wrong and yeah we",
    "start": "641100",
    "end": "648870"
  },
  {
    "text": "have snapshots in now the worker notes you bring them yourself which gives you a lot of flexibility you can put them in",
    "start": "648870",
    "end": "655740"
  },
  {
    "text": "auto scaling group you can have spot instances that save you like 70 or 80 percent you can have GPU instances where",
    "start": "655740",
    "end": "663060"
  },
  {
    "text": "a lot of people at the beginning say why would people do that but there is a lot of machine learning currently running on kubernetes so all",
    "start": "663060",
    "end": "670860"
  },
  {
    "text": "this makes sense and you have all this flexibility and then at the end you connected to this managed end point and",
    "start": "670860",
    "end": "677460"
  },
  {
    "text": "because it's standard kubernetes upstream kubernetes you can use your standard tools like a cube cuddle and",
    "start": "677460",
    "end": "684960"
  },
  {
    "text": "whatever now thank you for being patient now let's try and put all these things that I was trying to explain together",
    "start": "684960",
    "end": "692000"
  },
  {
    "text": "why would we still need to service mesh that's a good question and remember when",
    "start": "692000",
    "end": "697950"
  },
  {
    "start": "693000",
    "end": "693000"
  },
  {
    "text": "I told you about the ESB sometimes this ESB architecture we also we like to call",
    "start": "697950",
    "end": "705690"
  },
  {
    "text": "it dump endpoints intelligent pipes because the intelligence is in the pipe",
    "start": "705690",
    "end": "711480"
  },
  {
    "text": "and the ESB is counting as the pipe because it's underway between the services so all these cross-cutting",
    "start": "711480",
    "end": "717480"
  },
  {
    "text": "concerns that the ESB is implementing happens in the ESP doesn't happen on the client or on the server side",
    "start": "717480",
    "end": "724650"
  },
  {
    "text": "and I was criticizing this approach a lot I said you know it's heavy weight and monolithic but it did have its",
    "start": "724650",
    "end": "731340"
  },
  {
    "text": "advantages because it worked for all kind of programming languages it allowed",
    "start": "731340",
    "end": "736650"
  },
  {
    "text": "you to use lots of different protocols you can mix and match like soap and JMS",
    "start": "736650",
    "end": "742140"
  },
  {
    "text": "and rest and even FTP so so that was not",
    "start": "742140",
    "end": "747960"
  },
  {
    "text": "bad and in this perspective but it has this challenges with you know we have to restart it it's too heavy weight it's",
    "start": "747960",
    "end": "753990"
  },
  {
    "text": "too monolithic now one question is how could we solve the same problem and what's the more modern version of",
    "start": "753990",
    "end": "761190"
  },
  {
    "text": "solving this is the same problem and there is this Netflix open source software Center that you all probably",
    "start": "761190",
    "end": "767280"
  },
  {
    "text": "know from the history library that implements circuit breaker and pattern and if you",
    "start": "767280",
    "end": "775200"
  },
  {
    "text": "do this and this was like I think most popular like five years ago I would say",
    "start": "775200",
    "end": "781130"
  },
  {
    "text": "you get a lot of logic that tries to compensate for a not perfectly working",
    "start": "781130",
    "end": "786450"
  },
  {
    "text": "network with circuit breakers and retries and whatever but you put this logic into the micro service itself",
    "start": "786450",
    "end": "794280"
  },
  {
    "text": "there's a library that Netflix made open-source and you can just use it and how is this approach if you think",
    "start": "794280",
    "end": "801430"
  },
  {
    "text": "about it for a while I remember seeing job ads like five years ago where white said like looking",
    "start": "801430",
    "end": "808210"
  },
  {
    "text": "for a cloud developer but you have to have a strong knowledge of those OS SC libraries then you have to know how to",
    "start": "808210",
    "end": "814570"
  },
  {
    "text": "implement this if you tell your manager to move from a software that you have",
    "start": "814570",
    "end": "821410"
  },
  {
    "text": "running to the cloud you have to implement those libraries it also means",
    "start": "821410",
    "end": "826630"
  },
  {
    "text": "you need to change your source code to make them use the libraries that's a lot of investment now also these libraries",
    "start": "826630",
    "end": "834370"
  },
  {
    "text": "they probably don't exist for every programming language the histories one is trauma only what if you want Scala or",
    "start": "834370",
    "end": "840190"
  },
  {
    "text": "go or rust or whatever so you kind of have these limitations I think the strongest one is to change your source",
    "start": "840190",
    "end": "846790"
  },
  {
    "text": "code to make it use the libraries no it's just a real way to get custom",
    "start": "846790",
    "end": "851800"
  },
  {
    "text": "software into the cloud I don't really think so now the question is couldn't we",
    "start": "851800",
    "end": "856990"
  },
  {
    "text": "have something better maybe the the best of both worlds and the answer is yes and you can guess it's",
    "start": "856990",
    "end": "863110"
  },
  {
    "text": "a service smash so the service smash tries to put a lot check into proxies and we have those proxies running in",
    "start": "863110",
    "end": "869920"
  },
  {
    "text": "front of the micro services and the micro services and the proxies they run on top of kubernetes weird cube commoner",
    "start": "869920",
    "end": "877560"
  },
  {
    "text": "and the benefit now is its D central it's language agnostic because the proxy",
    "start": "877560",
    "end": "884020"
  },
  {
    "text": "doesn't really care about which programming language you use for implementing your micro services its",
    "start": "884020",
    "end": "889089"
  },
  {
    "text": "polyglot any language you can use and you don't have to change the micro services and it's lightweight it might",
    "start": "889089",
    "end": "895390"
  },
  {
    "text": "be a bit worried about seeing all these proxies now like one proxy for every micro service but let me explain this",
    "start": "895390",
    "end": "902709"
  },
  {
    "text": "bit later this is how it goes so we really have one proxy for every micro service now if you looked into this",
    "start": "902709",
    "end": "909100"
  },
  {
    "start": "907000",
    "end": "907000"
  },
  {
    "text": "technology before you probably know is tio and my that's maybe the most popular one the open source solution that you",
    "start": "909100",
    "end": "917020"
  },
  {
    "text": "can bet you can use and get started today so if you have two services like one is",
    "start": "917020",
    "end": "922900"
  },
  {
    "text": "a product page service and it's the hello world example that comes with you that is talking to a review service the",
    "start": "922900",
    "end": "931540"
  },
  {
    "text": "way it goes is the the product page service wants to talk to the review service but they talk through the proxies so the proxies again",
    "start": "931540",
    "end": "938649"
  },
  {
    "text": "intercept the invocation and those proxies they live in the same pot and",
    "start": "938649",
    "end": "944200"
  },
  {
    "text": "because they live in the same kubernetes part they share the same namespace and this is because they can intercept the",
    "start": "944200",
    "end": "950620"
  },
  {
    "text": "communication this is working for different protocols it's working for HTTP HTTP 2g RPC it's actually even",
    "start": "950620",
    "end": "959709"
  },
  {
    "text": "working for dynamodb so their customers then use this to intercept DynamoDB",
    "start": "959709",
    "end": "965170"
  },
  {
    "text": "calls and that's the proxy side and that's the side that is running close to",
    "start": "965170",
    "end": "971860"
  },
  {
    "text": "your micro services and then there's a control plane and I don't want to go into many details but the control plane",
    "start": "971860",
    "end": "977950"
  },
  {
    "text": "is basically instrumenting the proxy steering the proxies telling the proxies what to do and it's also retrieving",
    "start": "977950",
    "end": "984730"
  },
  {
    "text": "metrics from the proxies imagine everything is going to the proxy the proxy is a fantastic point to collect",
    "start": "984730",
    "end": "991600"
  },
  {
    "text": "metrics because every invocation is going through those proxies and that's the other part of the other",
    "start": "991600",
    "end": "997149"
  },
  {
    "text": "responsibilities of this control plane and then it's obviously also possible to",
    "start": "997149",
    "end": "1002160"
  },
  {
    "text": "inject certificates and to create TLS and communication that's the third part",
    "start": "1002160",
    "end": "1010980"
  },
  {
    "text": "that is East your service measures doing so SEO is kind of the control plane and",
    "start": "1010980",
    "end": "1016740"
  },
  {
    "text": "the proxy that is running close to your service is called ny proxy and now if",
    "start": "1016740",
    "end": "1022050"
  },
  {
    "text": "you want to do some magic in quotation marks and say like remember I told you",
    "start": "1022050",
    "end": "1027418"
  },
  {
    "text": "about the ESB that's which is based on some criteria from version one to version two with this small Yambol file",
    "start": "1027419",
    "end": "1034500"
  },
  {
    "text": "which is 17 lines you can specify that if you call the review service and use",
    "start": "1034500",
    "end": "1040410"
  },
  {
    "text": "HTTP and then 97% will go to version two",
    "start": "1040410",
    "end": "1045480"
  },
  {
    "text": "but three percent will go to version 3 of the Reaver service and all you do is",
    "start": "1045480",
    "end": "1050550"
  },
  {
    "text": "cube cut' will apply minus F from this little gamma file and this is how it goes so that's open source is to your",
    "start": "1050550",
    "end": "1057780"
  },
  {
    "start": "1057000",
    "end": "1057000"
  },
  {
    "text": "service mash it connects secures and observes services and the important",
    "start": "1057780",
    "end": "1063870"
  },
  {
    "text": "thing from architectural perspective is it kind of shifts where you locate the",
    "start": "1063870",
    "end": "1069030"
  },
  {
    "text": "functionality you don't put it in a library into the service we don't have two big monolithic service bus anymore",
    "start": "1069030",
    "end": "1074610"
  },
  {
    "text": "it's in small proxies in between and the control plane is easier this is what",
    "start": "1074610",
    "end": "1080850"
  },
  {
    "text": "controls and steers and and configures the proxies and then we have the data plane which is the set of all NY proxies",
    "start": "1080850",
    "end": "1088310"
  },
  {
    "text": "together and those NY proxies if you wonder like who's gonna start 117",
    "start": "1088310",
    "end": "1094740"
  },
  {
    "text": "proxies 417 micro services they live in the part and they can be well created",
    "start": "1094740",
    "end": "1100950"
  },
  {
    "text": "manually or they can be injected automatically into this kubernetes pot",
    "start": "1100950",
    "end": "1106020"
  },
  {
    "text": "both as possible and actually both is possible today with eks NY itself is a",
    "start": "1106020",
    "end": "1112200"
  },
  {
    "text": "in my opinion great piece of engineering so if you have some time go and read up about envoi it's a level 7 proxy that",
    "start": "1112200",
    "end": "1119880"
  },
  {
    "text": "means it understands the level 7 network protocols already listed them maybe you",
    "start": "1119880",
    "end": "1126510"
  },
  {
    "text": "were wondered about you know having 117 proxies running 417 micro services the",
    "start": "1126510",
    "end": "1132960"
  },
  {
    "text": "size is 8 megabyte it's statically linked C++ code if you think for a",
    "start": "1132960",
    "end": "1138720"
  },
  {
    "text": "moment 8 megabytes how much is it it's like one twentieth of the size of a JDK download",
    "start": "1138720",
    "end": "1146270"
  },
  {
    "text": "so it's like very very small and I think the RAM overhead is not not really a big",
    "start": "1146270",
    "end": "1153060"
  },
  {
    "text": "concern you have no language or framework dependencies it's just working for any kind of language actually the",
    "start": "1153060",
    "end": "1159000"
  },
  {
    "text": "hello world example that comes with is 2 + NY is written I think in like five",
    "start": "1159000",
    "end": "1164040"
  },
  {
    "text": "different languages and no code changes you just run the proxies and it",
    "start": "1164040",
    "end": "1169440"
  },
  {
    "text": "intercepts your calls and it will work special proven lyft uses it for millions",
    "start": "1169440",
    "end": "1176160"
  },
  {
    "text": "of calls every day and more and more customers use it and it's actually not",
    "start": "1176160",
    "end": "1181500"
  },
  {
    "text": "tightly coupled to tist you we always here this is T ony thing together and it seems like a married couple but it's not",
    "start": "1181500",
    "end": "1188190"
  },
  {
    "text": "so tightly coupled or married there is some flexibility and now you might still",
    "start": "1188190",
    "end": "1193950"
  },
  {
    "text": "think like is it a thing is it really are people using it as a big",
    "start": "1193950",
    "end": "1199020"
  },
  {
    "text": "prai's and this just happened last week something happened do you know this net craft study that finds out how many",
    "start": "1199020",
    "end": "1205290"
  },
  {
    "text": "people are using which web server like the top 10 web service I use they give",
    "start": "1205290",
    "end": "1211380"
  },
  {
    "text": "you statistics like this and you can see the the blue line is Apache if you can't read it it goes up and down a little bit",
    "start": "1211380",
    "end": "1217020"
  },
  {
    "text": "and Apache is going down for some reasons right now but for the first time actually envoi showed up into statistics",
    "start": "1217020",
    "end": "1224430"
  },
  {
    "text": "and if you if you do a little bit of research you will find that there's so much happening with NY right now so",
    "start": "1224430",
    "end": "1231420"
  },
  {
    "text": "people building load balancers with NY people are building API gateways with NY",
    "start": "1231420",
    "end": "1236610"
  },
  {
    "text": "NY is used a lot and the amount of usage increased by a factor of 500 and this is",
    "start": "1236610",
    "end": "1244320"
  },
  {
    "text": "why it for the first time bit surprisingly showed up in this net craft study okay so maybe some people are",
    "start": "1244320",
    "end": "1254130"
  },
  {
    "text": "still skeptical think like what is he talking about couldn't all dis not be solved with kubernetes and let me",
    "start": "1254130",
    "end": "1262860"
  },
  {
    "start": "1262000",
    "end": "1262000"
  },
  {
    "text": "explain a little bit more about about updating and upgrading systems and I",
    "start": "1262860",
    "end": "1269130"
  },
  {
    "text": "guess you all know this Bluegreen deployment don't you this is the original graphics that Martin Fowler and",
    "start": "1269130",
    "end": "1276630"
  },
  {
    "text": "produced and I had projects like this many times and I like to call in crystal",
    "start": "1276630",
    "end": "1282300"
  },
  {
    "text": "ball projects because people in my previous life they hired me to predict like if we change from blue to green",
    "start": "1282300",
    "end": "1289170"
  },
  {
    "text": "from version one to version two can you predict like in if we do this in one",
    "start": "1289170",
    "end": "1295830"
  },
  {
    "text": "year and we have this amount of increased traffic traffic what hardware should we buy because if you switch from",
    "start": "1295830",
    "end": "1302370"
  },
  {
    "text": "blue to green you need a second set of hardware if your first set of hardware costs a million you spend another",
    "start": "1302370",
    "end": "1308100"
  },
  {
    "text": "million and this is like really Asian times we don't even want to talk about this now if you do the same thing in the",
    "start": "1308100",
    "end": "1313590"
  },
  {
    "start": "1312000",
    "end": "1312000"
  },
  {
    "text": "cloud the update strategy gets easier because you can have the second set of",
    "start": "1313590",
    "end": "1318660"
  },
  {
    "text": "hardware only for the amount of time that you need it and you then actually at the end pay per second and it gets",
    "start": "1318660",
    "end": "1325080"
  },
  {
    "text": "much much cheaper so that's a rhetoric question do you like cold water I hate",
    "start": "1325080",
    "end": "1330630"
  },
  {
    "text": "cold water I have to tell if you do this Bluegreen deployment you",
    "start": "1330630",
    "end": "1335940"
  },
  {
    "text": "throw your customers in cold water no I mean you go from blue to green your test screen before but at some point there is",
    "start": "1335940",
    "end": "1342210"
  },
  {
    "text": "this big switch and you flip the switch and it goes from blue to green and if",
    "start": "1342210",
    "end": "1347909"
  },
  {
    "text": "you have 10,000 customers all 10,000 are working with the green I'm environment so basically it's 100%",
    "start": "1347909",
    "end": "1354080"
  },
  {
    "text": "this switch over and you better have a good fallback strategy if despite all",
    "start": "1354080",
    "end": "1359159"
  },
  {
    "text": "the testing something goes wrong no now this is cube Connor I know you will say",
    "start": "1359159",
    "end": "1365279"
  },
  {
    "text": "but we can do rolling updates with with kubernetes and I tell you yeah I know",
    "start": "1365279",
    "end": "1371159"
  },
  {
    "text": "and if you do rolling updates with kubernetes and you run your application let's say across four parts you upgrade",
    "start": "1371159",
    "end": "1378360"
  },
  {
    "text": "one part so it's like 25% change and look at this it took me a lot of time to",
    "start": "1378360",
    "end": "1384510"
  },
  {
    "text": "create it I didn't do it for the other three so you change from 25 to 50 to 75",
    "start": "1384510",
    "end": "1389610"
  },
  {
    "text": "for 10,000 customers you still throw 2500 into cold water do you want to do",
    "start": "1389610",
    "end": "1395820"
  },
  {
    "text": "this with your customers well the thing is like if it's just for parts did the minimal thing that you can change is one",
    "start": "1395820",
    "end": "1402419"
  },
  {
    "text": "part no it's 25% and that's it so it's a rolling update",
    "start": "1402419",
    "end": "1408419"
  },
  {
    "text": "I think it's deprecated now it's called roll out in kubernetes it's one part at a time but how about not having a",
    "start": "1408419",
    "end": "1415769"
  },
  {
    "text": "bathtub full of cold water just like wetting your feet a little bit how would you do that like how getting these 3% and that's",
    "start": "1415769",
    "end": "1424019"
  },
  {
    "text": "when the service mesh comes into play remember when I showed you you can do this with East you and NY that's the",
    "start": "1424019",
    "end": "1430200"
  },
  {
    "text": "basic use case for Forest Service mesh and I think there would be more life demos and later on so maybe somebody's",
    "start": "1430200",
    "end": "1437460"
  },
  {
    "text": "showing you this as well but this little bit like traffic shifting instead of pot deployment that's the thing so you will",
    "start": "1437460",
    "end": "1444929"
  },
  {
    "text": "hear a lot of people telling you well Daka can do this kubernetes can do this well they can do rolling updates and I",
    "start": "1444929",
    "end": "1451740"
  },
  {
    "text": "was doing this at the end I told you that I failed with my kubernetes cluster at home at the end I was running the",
    "start": "1451740",
    "end": "1458610"
  },
  {
    "text": "course warm and it did this rolling update beautifully and I was very proud to show it to people that was kind of",
    "start": "1458610",
    "end": "1464250"
  },
  {
    "text": "the highlight but I didn't get this traffic I'm shifting so if you want traffic shifting",
    "start": "1464250",
    "end": "1470020"
  },
  {
    "text": "and separating traffic flow from replicas deployment that's one of the core use cases for using a service",
    "start": "1470020",
    "end": "1478210"
  },
  {
    "text": "measure so if you want to do is to and NY today you can do it on e KS and this",
    "start": "1478210",
    "end": "1486970"
  },
  {
    "text": "gets you into this world of the CN CF the cloud native compute foundation where we have kubernetes and we have",
    "start": "1486970",
    "end": "1494080"
  },
  {
    "text": "Prometheus and where we have NY as the graduated projects which means it's like",
    "start": "1494080",
    "end": "1499840"
  },
  {
    "text": "a little bit of a safety mesh know that tells you out of those hundreds of open",
    "start": "1499840",
    "end": "1505810"
  },
  {
    "text": "source projects to graduated ones are used by a number of companies in in",
    "start": "1505810",
    "end": "1510940"
  },
  {
    "text": "production and there is those incubating one that are getting closer to being graduated but as you see NY is in this",
    "start": "1510940",
    "end": "1519910"
  },
  {
    "text": "is in this in this list now and also Prometheus and certainly kubernetes so",
    "start": "1519910",
    "end": "1528280"
  },
  {
    "text": "again this could be the end of the story but it's not because if we speak to customers they ask us for more they say",
    "start": "1528280",
    "end": "1535240"
  },
  {
    "text": "look we see now the use case for running a service mesh on top of kubernetes and",
    "start": "1535240",
    "end": "1541390"
  },
  {
    "text": "we could do it manually ourselves but how about having a service mesh for all",
    "start": "1541390",
    "end": "1547510"
  },
  {
    "text": "the compute services remember on the second slide when I told you you know there is like you see two still around",
    "start": "1547510",
    "end": "1554920"
  },
  {
    "text": "there is eks still around there is ECS there is actually UCS with Fargate this",
    "start": "1554920",
    "end": "1560440"
  },
  {
    "text": "is what you can't do with AB mesh so app mesh lets us use the service mesh across",
    "start": "1560440",
    "end": "1565960"
  },
  {
    "start": "1564000",
    "end": "1564000"
  },
  {
    "text": "ECS easiest with fog aid which is the service UCS where you're doing provision",
    "start": "1565960",
    "end": "1570970"
  },
  {
    "text": "the worker nodes eks Amazon ec2 you can run it on ec2 even without without",
    "start": "1570970",
    "end": "1578370"
  },
  {
    "text": "docker containers just pure ec2 in applications it could be kubernetes on top of ec2 like the self managed",
    "start": "1578370",
    "end": "1586020"
  },
  {
    "text": "kubernetes in all this is done with app mesh now interesting is app mesh is",
    "start": "1586020",
    "end": "1592180"
  },
  {
    "text": "using the NY proxy remember I told you all the benefits of using NY NY it's a",
    "start": "1592180",
    "end": "1597670"
  },
  {
    "text": "popular and how many companies are using and it's showing up in this net craft study we also used to NY proxy because we",
    "start": "1597670",
    "end": "1604540"
  },
  {
    "text": "think it's the best you know it's the motor at the end that is doing all the intersections and executing everything I",
    "start": "1604540",
    "end": "1612130"
  },
  {
    "text": "think it's the best choice so it would be foolish not to use it but we're not using ISTE oh that's the other thing you",
    "start": "1612130",
    "end": "1618580"
  },
  {
    "text": "need to understand and why are we not using is - because we want a service mesh that is working across all these",
    "start": "1618580",
    "end": "1624100"
  },
  {
    "text": "services this is because it's at mesh but app mesh is working together with with NY and to get started with app mesh",
    "start": "1624100",
    "end": "1631840"
  },
  {
    "text": "there is a command line there is a well it's in the console there is a SDK obviously it's free so there's no reason",
    "start": "1631840",
    "end": "1639400"
  },
  {
    "text": "not to try it and it supports any third-party tool that works with NY now",
    "start": "1639400",
    "end": "1646090"
  },
  {
    "text": "how do you get started ok you probably know that we are very keen on",
    "start": "1646090",
    "end": "1654010"
  },
  {
    "text": "documenting things in a very detailed level and give you a lot of a lot of",
    "start": "1654010",
    "end": "1659260"
  },
  {
    "text": "choice in a lot of low-level granularity of what you can do so there's different ways of getting started with app mesh",
    "start": "1659260",
    "end": "1665680"
  },
  {
    "text": "and I think the most popular one it just came out last week and this is why I'm super happy to present it is the",
    "start": "1665680",
    "end": "1674320"
  },
  {
    "text": "following you get ek as quickly what's the best way to get started with the eks cluster it's actually eks control it's the open",
    "start": "1674320",
    "end": "1681850"
  },
  {
    "text": "source project it gives you a command line basically what you say eks control",
    "start": "1681850",
    "end": "1687430"
  },
  {
    "text": "Costa and then it will create a cluster in your region if you want to give it a name you give it a name if you omit the",
    "start": "1687430",
    "end": "1694210"
  },
  {
    "text": "name you get a funny name like those funny names that we have for docker containers I think my last one is called",
    "start": "1694210",
    "end": "1700230"
  },
  {
    "text": "beautiful paintings so that's the name of my eks cluster and if you say - - at",
    "start": "1700230",
    "end": "1707290"
  },
  {
    "text": "mesh access you're also enable the node groups to access to add mesh API easily",
    "start": "1707290",
    "end": "1712540"
  },
  {
    "text": "so it solves you a lot of thinking I'm the person that believes you should have a really easy start I believe in these",
    "start": "1712540",
    "end": "1719650"
  },
  {
    "text": "MVP Minimum Viable products I think we also should have like Minimum Viable demos for customers so getting started",
    "start": "1719650",
    "end": "1727090"
  },
  {
    "text": "with eks control with a eks cluster I recommend to do this then you will have your cluster up and",
    "start": "1727090",
    "end": "1733300"
  },
  {
    "text": "running after a couple of minutes and now we have a helm chat and I think most",
    "start": "1733300",
    "end": "1739240"
  },
  {
    "text": "of you know helm is like the package manager package manager for kubernetes and all the credit for dis sound chart",
    "start": "1739240",
    "end": "1746560"
  },
  {
    "text": "and also for the next slide it actually goes to a colleague of mine he's a principal si for containers Paul medics",
    "start": "1746560",
    "end": "1752860"
  },
  {
    "text": "so if you ever see this recording he deserves all the credit because he built the sound chart and with one single ham",
    "start": "1752860",
    "end": "1760180"
  },
  {
    "text": "chart you can now install app mesh which actually installs app mesh with envoi it",
    "start": "1760180",
    "end": "1765640"
  },
  {
    "text": "gives you the x-ray daemon sidecar in also the stats D exporter for Prometheus",
    "start": "1765640",
    "end": "1770950"
  },
  {
    "text": "so one single hand chart installation gives you all the magic and",
    "start": "1770950",
    "end": "1776250"
  },
  {
    "text": "look again it gives you x-ray and it gives you Prometheus so talking about",
    "start": "1776250",
    "end": "1782260"
  },
  {
    "text": "this CNC a thing for a lot of people it seemed like either this way or the using",
    "start": "1782260",
    "end": "1788050"
  },
  {
    "text": "the AWS services like x-ray and like you know cloud watch it's not either/or you",
    "start": "1788050",
    "end": "1793630"
  },
  {
    "text": "can pick the best one that you like and in this little demo I wouldn't say it's",
    "start": "1793630",
    "end": "1798640"
  },
  {
    "text": "a demo now don't use it for production but in this demo I didn't start off and you can play with Ravana if you want and",
    "start": "1798640",
    "end": "1804610"
  },
  {
    "text": "you can play with x-ray at the same time so it doesn't have to be either/or it's it's not like a very tough decision",
    "start": "1804610",
    "end": "1813730"
  },
  {
    "text": "YouTube you can do whatever you want can choose and the second part is the the",
    "start": "1813730",
    "end": "1819430"
  },
  {
    "start": "1818000",
    "end": "1818000"
  },
  {
    "text": "second part is actually even more interesting this is where you install a small demo it's a little demo that is",
    "start": "1819430",
    "end": "1826540"
  },
  {
    "text": "using I think it's free parts generating load and sending the load to to nginx",
    "start": "1826540",
    "end": "1832930"
  },
  {
    "text": "and pots and that's it that's the whole demo but you can install it and make it run with this helm install and see if",
    "start": "1832930",
    "end": "1841570"
  },
  {
    "text": "this is working yeah that's the interesting part this is where you first create a namespace which is called at",
    "start": "1841570",
    "end": "1848260"
  },
  {
    "text": "mesh demo and then this is the magic where we label the name space at mesh",
    "start": "1848260",
    "end": "1853300"
  },
  {
    "text": "demo with this sidecar injector web web poke enabled which basically means",
    "start": "1853300",
    "end": "1859420"
  },
  {
    "text": "whatever you deploy in this app mesh demo namespace gets those sidecars in",
    "start": "1859420",
    "end": "1864550"
  },
  {
    "text": "check and because we have stats D and we have NY and we have x-ray it's actually three",
    "start": "1864550",
    "end": "1871179"
  },
  {
    "text": "side car so you don't need all three you can disable them if you want but in this case you will see four containers",
    "start": "1871179",
    "end": "1876820"
  },
  {
    "text": "running in one pot and this is the magic how it happens by you know setting the",
    "start": "1876820",
    "end": "1882279"
  },
  {
    "text": "label on the namespace and then deploying into this namespace and yeah",
    "start": "1882279",
    "end": "1888759"
  },
  {
    "text": "if you do this I have it life running but I think it's easier just to show you the screenshots that I took like",
    "start": "1888759",
    "end": "1894870"
  },
  {
    "start": "1893000",
    "end": "1893000"
  },
  {
    "text": "yesterday you get observability with x-ray out of the box so you see your",
    "start": "1894870",
    "end": "1901690"
  },
  {
    "text": "services you see the invocation times you see which Service is invoking which service it's probably too small to read",
    "start": "1901690",
    "end": "1907539"
  },
  {
    "text": "it about you if you come closer you will see that a load balancer is obviously invoking the nginx service on the right",
    "start": "1907539",
    "end": "1914799"
  },
  {
    "text": "hand side you to see the distribution of the response times if you go into the",
    "start": "1914799",
    "end": "1921429"
  },
  {
    "start": "1919000",
    "end": "1919000"
  },
  {
    "text": "traces you see the traces like those inverted flame graphs that you might know with the execution times and how",
    "start": "1921429",
    "end": "1928509"
  },
  {
    "text": "they consist of the different services invoked then we can show you the response time percentiles like how much",
    "start": "1928509",
    "end": "1936250"
  },
  {
    "start": "1932000",
    "end": "1932000"
  },
  {
    "text": "of the response time is in the P 50 or P 95 percentile and that's the part that",
    "start": "1936250",
    "end": "1943000"
  },
  {
    "text": "you get from the operations side and with x-ray if you switch to graph Anna",
    "start": "1943000",
    "end": "1948370"
  },
  {
    "text": "we have a it comes as pre-configured already it comes with the overview",
    "start": "1948370",
    "end": "1953559"
  },
  {
    "text": "dashboard it gives you an overview of sto so you see the top five services by",
    "start": "1953559",
    "end": "1960100"
  },
  {
    "text": "request but a number of requests and you also see the worst five services by the number of HTTP I think 400 and 500",
    "start": "1960100",
    "end": "1968200"
  },
  {
    "text": "responses and then you can drill into a service view where you get the service",
    "start": "1968200",
    "end": "1973360"
  },
  {
    "start": "1972000",
    "end": "1972000"
  },
  {
    "text": "view in this case for the load balancers and for the nginx and you get well two",
    "start": "1973360",
    "end": "1979029"
  },
  {
    "text": "requests per second and somewhat details and you also see that this was running for a couple of days so this is not just",
    "start": "1979029",
    "end": "1984399"
  },
  {
    "text": "a it's still running so if you want to see it afterwards I'm happy to show you while having a coffee so it's still",
    "start": "1984399",
    "end": "1991539"
  },
  {
    "text": "running and it works beautifully and in my opinion that's a cool way to get started and to get you you know hands",
    "start": "1991539",
    "end": "1996760"
  },
  {
    "text": "dirty and to play with it and maybe the next thing is to do not to deploy this demo but to have up mesh up",
    "start": "1996760",
    "end": "2003279"
  },
  {
    "text": "and running with the first hammer out and then deploy your own demo as I said I'm a big fan of having the the smallest",
    "start": "2003279",
    "end": "2009219"
  },
  {
    "text": "working demo that that kind of makes sense so using app mess you get",
    "start": "2009219",
    "end": "2014619"
  },
  {
    "text": "observability I highlighted here the AWS options like it gives you cloud water",
    "start": "2014619",
    "end": "2021369"
  },
  {
    "text": "locks gives you cloud watch metrics it gives you x-ray for tracing then we also",
    "start": "2021369",
    "end": "2027939"
  },
  {
    "start": "2027000",
    "end": "2027000"
  },
  {
    "text": "do traffic management we do traffic shaping like the example I showed you on the SEO side 95 percent and 3 percent",
    "start": "2027939",
    "end": "2034449"
  },
  {
    "text": "you can do exactly the same here so you get load balancing you get weighted targets and the whole thing is path",
    "start": "2034449",
    "end": "2040989"
  },
  {
    "text": "based that's the typical example set we can do right now the one with the asterisks are the ones that are coming",
    "start": "2040989",
    "end": "2046959"
  },
  {
    "text": "now since it's not using SEO also the concepts and the constructs are slightly",
    "start": "2046959",
    "end": "2053349"
  },
  {
    "start": "2048000",
    "end": "2048000"
  },
  {
    "text": "different so we did if you start you really define a mesh you give the mesh your name and the dimension is like a",
    "start": "2053349",
    "end": "2060339"
  },
  {
    "text": "logical boundary for the network traffic it's all do the things that belong together the services that belong",
    "start": "2060339",
    "end": "2066460"
  },
  {
    "text": "together but again this mesh can can span across different compute services that's the",
    "start": "2066460",
    "end": "2071679"
  },
  {
    "text": "exciting thing then we have a virtual node which front-ends a real back-end service and we have routers and routes",
    "start": "2071679",
    "end": "2078819"
  },
  {
    "text": "that define the routing and then we have the virtual service that basically we're",
    "start": "2078819",
    "end": "2085450"
  },
  {
    "text": "dependent services that you call use this virtual service name so these are the constructs that you need to",
    "start": "2085450",
    "end": "2091419"
  },
  {
    "text": "understand that you will find again in in the number files and if you set it up and then I taught you about the proxies",
    "start": "2091419",
    "end": "2097960"
  },
  {
    "text": "that we can inject automatically the services can the services that you already know and there's service",
    "start": "2097960",
    "end": "2103749"
  },
  {
    "text": "discovery with AWS cloud map there is a",
    "start": "2103749",
    "end": "2108900"
  },
  {
    "text": "page on a console if you go to the AWS console and if you have your demo app",
    "start": "2108900",
    "end": "2114339"
  },
  {
    "text": "deployed with the helm chart you will see it on the console obviously and you can dig into those constructs and",
    "start": "2114339",
    "end": "2120509"
  },
  {
    "text": "reverse understand them reverse-engineer them the roadmap is public so if you",
    "start": "2120509",
    "end": "2126940"
  },
  {
    "start": "2125000",
    "end": "2125000"
  },
  {
    "text": "have any feature where you think we should implement implement this and we for gotten to think about it if you want to",
    "start": "2126940",
    "end": "2133030"
  },
  {
    "text": "push any feature this is the link to github we are working with a number of",
    "start": "2133030",
    "end": "2140350"
  },
  {
    "start": "2139000",
    "end": "2139000"
  },
  {
    "text": "partners that are all listed here some of them are here they're presenting they already presented or will present",
    "start": "2140350",
    "end": "2145480"
  },
  {
    "text": "afterwards and this gets me to the summary like the first point is",
    "start": "2145480",
    "end": "2152200"
  },
  {
    "start": "2151000",
    "end": "2151000"
  },
  {
    "text": "architect wisely that's a very general advice I know but it means like don't trust the people that tell you",
    "start": "2152200",
    "end": "2157990"
  },
  {
    "text": "everything should be containerized everything should be AWS lambda it's not",
    "start": "2157990",
    "end": "2163150"
  },
  {
    "text": "it's your job as a architect to decide what's the best solution and sometimes",
    "start": "2163150",
    "end": "2169390"
  },
  {
    "text": "the best solution might be even you see to it changes over time but it's your task to decide this the next one is like",
    "start": "2169390",
    "end": "2178200"
  },
  {
    "text": "remember my bitter experience running kubernetes is hard and I'm not alone in this like I have super experienced",
    "start": "2178200",
    "end": "2184960"
  },
  {
    "text": "colleagues that said let's say like you know kubernetes can make grown-up men cry you know it sometimes it's",
    "start": "2184960",
    "end": "2191860"
  },
  {
    "text": "incredibly hard and if you sit there anything like what is going wrong no so don't do it yourself let us do it now we",
    "start": "2191860",
    "end": "2199359"
  },
  {
    "text": "put a lot of expertise and a lot of knowledge in and this is why we have eks so use a managed kubernetes service",
    "start": "2199359",
    "end": "2205990"
  },
  {
    "text": "that's really one of my advices if you go for a guess you can also use",
    "start": "2205990",
    "end": "2212619"
  },
  {
    "text": "everything that comes with the CNC F so it's unformed app stream kubernetes",
    "start": "2212619",
    "end": "2217750"
  },
  {
    "text": "that's what customer tell us don't change it don't make it different we want standard open source kubernetes",
    "start": "2217750",
    "end": "2223990"
  },
  {
    "text": "that's what you get with eks a service mesh I was trying to explain this year",
    "start": "2223990",
    "end": "2229840"
  },
  {
    "text": "it complements kubernetes it's not things that were forgotten in kubernetes we used the ways to extend kubernetes",
    "start": "2229840",
    "end": "2237810"
  },
  {
    "text": "and it it's it's working on top of communities to give you those additional",
    "start": "2237810",
    "end": "2244210"
  },
  {
    "text": "benefits like observability and traffic management service mash is free and it",
    "start": "2244210",
    "end": "2251500"
  },
  {
    "text": "works across compute services I think there's no reason why you should not try it as I said the easiest way to get",
    "start": "2251500",
    "end": "2258190"
  },
  {
    "text": "started is using those two ham charts and to play around a little bit again",
    "start": "2258190",
    "end": "2263440"
  },
  {
    "text": "all the credit - Paul Maddox for for creating them I think that's super important to mention",
    "start": "2263440",
    "end": "2268840"
  },
  {
    "text": "the people that do the hard work and and make those complicated things easier for all of us we have a great recording from",
    "start": "2268840",
    "end": "2276280"
  },
  {
    "start": "2274000",
    "end": "2274000"
  },
  {
    "text": "another colleague of mine that digs into app much much deeper that also shows you working at mesh across different compute",
    "start": "2276280",
    "end": "2283869"
  },
  {
    "text": "services it's a recording from the AWS summit thinking Anaheim it's linked here",
    "start": "2283869",
    "end": "2289210"
  },
  {
    "text": "and I did another presentation about you seeing East you in NY on top of eks",
    "start": "2289210",
    "end": "2295960"
  },
  {
    "text": "which is linked here you don't need to take pictures I mean if you want you very welcome but I uploaded the slides",
    "start": "2295960",
    "end": "2302740"
  },
  {
    "text": "already on speaker deck and they will be shared by AWS as well so you will have",
    "start": "2302740",
    "end": "2308200"
  },
  {
    "text": "those slides for sure I promise and with this I want to say thank you if you want to connect connect to me I'm a friendly",
    "start": "2308200",
    "end": "2314530"
  },
  {
    "text": "person I'll be around for questions outside I think we are bit behind in",
    "start": "2314530",
    "end": "2320050"
  },
  {
    "text": "time so thanks for listening you've been a great audience",
    "start": "2320050",
    "end": "2325240"
  },
  {
    "text": "thank you [Applause]",
    "start": "2325240",
    "end": "2332849"
  }
]