[
  {
    "start": "0",
    "end": "75000"
  },
  {
    "text": "[Music]",
    "start": "3450",
    "end": "8180"
  },
  {
    "text": "cool everybody thanks for joining us here today for the next episode of",
    "start": "12830",
    "end": "18210"
  },
  {
    "text": "service bytes my name is Chris Muntz I'm a senior developer advocate for service based at New York City office",
    "start": "18210",
    "end": "24990"
  },
  {
    "text": "but I'm actually here in Seattle at Amazon HQ for today's episode I'm joined",
    "start": "24990",
    "end": "31500"
  },
  {
    "text": "here by Kashif Imran say hi hi everyone my name is Kasia Khurana I'm a senior",
    "start": "31500",
    "end": "37380"
  },
  {
    "text": "Solutions Architect at AWS awesome so the whole idea behind service bites here",
    "start": "37380",
    "end": "42989"
  },
  {
    "text": "is to have some short kind of quick 30 minute sessions where we show you something new and interesting in the",
    "start": "42989",
    "end": "49350"
  },
  {
    "text": "space of service tell us a bit today about what we're going to see and what you're gonna walk us through sure thanks",
    "start": "49350",
    "end": "55739"
  },
  {
    "text": "Chris all right so in today's session we're going to talk about is build a functional app so in the in the previous",
    "start": "55739",
    "end": "62219"
  },
  {
    "text": "episode for example we talked about the basics of building and deploying a serverless application today we thought",
    "start": "62219",
    "end": "68310"
  },
  {
    "text": "we'll take you know garlic would be on basics and build a functional app we're basically going to take tweets coming in",
    "start": "68310",
    "end": "76080"
  },
  {
    "start": "75000",
    "end": "220000"
  },
  {
    "text": "from Twitter we'll then I have a reference image so as those images or tweets are coming in maybe if there is",
    "start": "76080",
    "end": "83640"
  },
  {
    "text": "an image of your favorite celebrity then we'll basically go ahead and send you notification so at a very high level you know anytime you want to get",
    "start": "83640",
    "end": "89909"
  },
  {
    "text": "notified if there's a tweet of your favorite celebrity you want to get notified that's a solution then you can",
    "start": "89909",
    "end": "95579"
  },
  {
    "text": "use but obviously you can use that base solution to then tweak it and then use it for many similar use cases and so on",
    "start": "95579",
    "end": "102180"
  },
  {
    "text": "cool very interesting so this is a pretty complicated setup as you can see",
    "start": "102180",
    "end": "108030"
  },
  {
    "text": "here on the screen there's a whole bunch of moving pieces we're actually going to talk through each of these as we kind of",
    "start": "108030",
    "end": "114030"
  },
  {
    "text": "go as opposed to giving kind of a top-down view of the big picture here so",
    "start": "114030",
    "end": "119219"
  },
  {
    "text": "let's walk through you know how we're gonna go about setting this up you know starting from the first components sure",
    "start": "119219",
    "end": "124259"
  },
  {
    "text": "so at a very high light level that you see this architecture diagram so on the left side obviously we have Twitter so",
    "start": "124259",
    "end": "130379"
  },
  {
    "text": "what we're gonna do is we're going to used Twitter API so we'll use those API is to get as",
    "start": "130379",
    "end": "136060"
  },
  {
    "text": "the feeds are coming to your Twitter News to get a Twitter feed will then take those and write them to Canisius",
    "start": "136060",
    "end": "142420"
  },
  {
    "text": "firehose as those records will Canisius firehose and we'll talk a little bit more you know how each of these work",
    "start": "142420",
    "end": "148150"
  },
  {
    "text": "well fire hose is going to then send that metadata coming from the Twitter feed to an s3 bucket which will then",
    "start": "148150",
    "end": "154660"
  },
  {
    "text": "trigger a lambda function it's gonna basically go through the ad feed and find out if there is an image and then",
    "start": "154660",
    "end": "160060"
  },
  {
    "text": "store that in an extra bucket with then trigger another lambda function which basically then goes and compare that",
    "start": "160060",
    "end": "165850"
  },
  {
    "text": "incoming image against a reference image that you would provide of your favorite celebrity and then use recognition to",
    "start": "165850",
    "end": "172600"
  },
  {
    "text": "compare those images and if there is a match then it will go ahead and send a notification oh one of the things that",
    "start": "172600",
    "end": "178540"
  },
  {
    "text": "we welcome you to do here as we're talking and walking through this is to actually follow on by doing this",
    "start": "178540",
    "end": "183910"
  },
  {
    "text": "yourself so what's up on the screen here is actually from a github repo that is",
    "start": "183910",
    "end": "188950"
  },
  {
    "text": "open and available you could find this on github.com slash EWS samples slash",
    "start": "188950",
    "end": "195910"
  },
  {
    "text": "AWS - developer - workshop you can click on episode 2 again this is the second episode of surplus bytes and then if you",
    "start": "195910",
    "end": "203079"
  },
  {
    "text": "click on me instructions MD file you'll actually see exactly what we're showing here now gob and pasted this here in the",
    "start": "203079",
    "end": "209829"
  },
  {
    "text": "comments or in the chat I should say so feel free to dive in and again you'll see the instructions pretty much walk",
    "start": "209829",
    "end": "215859"
  },
  {
    "text": "you through one of us exactly we're gonna walk through today alright cool so that's just a dive right in and start",
    "start": "215859",
    "end": "222670"
  },
  {
    "start": "220000",
    "end": "350000"
  },
  {
    "text": "building it alright so the very first step as I mentioned you know we have twitter so the first thing you're going to need is basically go and set up an",
    "start": "222670",
    "end": "230950"
  },
  {
    "text": "app on the Twitter site so let's go to first you go to apps twitter.com and",
    "start": "230950",
    "end": "236350"
  },
  {
    "text": "again if you are following the instructions of all in the video you can follow along the first thing you need is",
    "start": "236350",
    "end": "242290"
  },
  {
    "text": "once you get to the app twitter.com it will ask you to sign in or sign up if you don't have an account in this case",
    "start": "242290",
    "end": "248560"
  },
  {
    "text": "I'm already logged in so I get to this dashboard you're gonna create a new app and give it a name so that's just the",
    "start": "248560",
    "end": "257729"
  },
  {
    "text": "type example name here and then just",
    "start": "257729",
    "end": "264849"
  },
  {
    "text": "type some description this is test app for website it doesn't",
    "start": "264849",
    "end": "271150"
  },
  {
    "text": "have to be an exact name you can just type in something as a placeholder and then click on the check box for the",
    "start": "271150",
    "end": "278320"
  },
  {
    "text": "developer agreement obviously gonna read that and then click on create your Twitter application so what this step",
    "start": "278320",
    "end": "284500"
  },
  {
    "text": "does is it provides you a basically a bunch of security tokens that you will see that then we will use in in our",
    "start": "284500",
    "end": "291040"
  },
  {
    "text": "Python code to call the Twitter API to complete this step the next thing you",
    "start": "291040",
    "end": "296170"
  },
  {
    "text": "see is manage keys and access tokens so if you click on that link it shows you",
    "start": "296170",
    "end": "301960"
  },
  {
    "text": "the API key as well as the API secret and then another thing you're going to need is to generate the security tokens",
    "start": "301960",
    "end": "308710"
  },
  {
    "text": "to access the Twitter API from your account so if you click on create my access token it just takes a few seconds",
    "start": "308710",
    "end": "315880"
  },
  {
    "text": "and give you these additional access token as the last access token secret",
    "start": "315880",
    "end": "321180"
  },
  {
    "text": "and if I may look quickly here so we're not gonna go too in depth here into how",
    "start": "321180",
    "end": "326230"
  },
  {
    "text": "Twitter's API works today but we definitely couraging check out their documentation another thing you want to do obviously is be careful with these",
    "start": "326230",
    "end": "332470"
  },
  {
    "text": "credentials these are potentials that give access to your accounts and so you want to make sure that if you for",
    "start": "332470",
    "end": "339070"
  },
  {
    "text": "example fork our repository that you don't say recommit those those credentials in a public way so just be",
    "start": "339070",
    "end": "345340"
  },
  {
    "text": "mindful of those credentials and where you end up putting them today absolutely all right so the next step is so with",
    "start": "345340",
    "end": "351880"
  },
  {
    "text": "these credentials we're ready to go for the next thing that we need and",
    "start": "351880",
    "end": "357130"
  },
  {
    "text": "basically to set up because as you saw there isn't there are many moving parts here we'll be actually taking advantage",
    "start": "357130",
    "end": "362260"
  },
  {
    "text": "of the confirmation so what confirmation is this is where you can script all the infrastructure that you want to spin up",
    "start": "362260",
    "end": "368200"
  },
  {
    "text": "things like a sturdy bucket you know you see to instance our lambda function dynamodb table and so on and but we just",
    "start": "368200",
    "end": "374410"
  },
  {
    "text": "need to pass some information to the CloudFormation template so it can configure all those things accordingly so the first thing we got it from the",
    "start": "374410",
    "end": "380919"
  },
  {
    "text": "twitter all the access key and tokens that we need next thing we'll use is we'll go ahead and create a key pair for",
    "start": "380919",
    "end": "387190"
  },
  {
    "text": "our ec2 instance that we're going to need and then we'll pass that all the information to confirmation so let's go",
    "start": "387190",
    "end": "392860"
  },
  {
    "text": "to the AWS console in this case we'll be using Ireland Beecham so as the cloud",
    "start": "392860",
    "end": "399580"
  },
  {
    "text": "contemporary will spin up it's it's written to run in the Ireland region so just make sure if you're following along",
    "start": "399580",
    "end": "405280"
  },
  {
    "text": "just use that so once I get to the AWS",
    "start": "405280",
    "end": "410949"
  },
  {
    "text": "console we go to ec2 and I'm gonna go four key pairs and you can just create a",
    "start": "410949",
    "end": "418419"
  },
  {
    "text": "key pair that's what we'll use to access our our instance and just run the Python",
    "start": "418419",
    "end": "424180"
  },
  {
    "text": "script that we have to call Twitter API so with that one created let's go to the",
    "start": "424180",
    "end": "432099"
  },
  {
    "text": "instructions so we already went through the Twitter setup as well as the key",
    "start": "432099",
    "end": "437830"
  },
  {
    "text": "pair next thing is we need to launch the CloudFormation template so let me just",
    "start": "437830",
    "end": "442870"
  },
  {
    "text": "go ahead and create that and again in this repository you'll see all of the",
    "start": "442870",
    "end": "449340"
  },
  {
    "text": "the templates themselves and everything totally in there so you can go ahead and dive into what it is that's inside of",
    "start": "449340",
    "end": "456099"
  },
  {
    "text": "those templates again CloudFormation is a template driven system for launching managing updating resources inside of",
    "start": "456099",
    "end": "463150"
  },
  {
    "text": "your AWS accounts in this case if you go to the root of this directory in github",
    "start": "463150",
    "end": "469060"
  },
  {
    "text": "you'll see it is called recognition workshop CFN dot JSON that is the stack",
    "start": "469060",
    "end": "474490"
  },
  {
    "text": "that your long jump right loop so you can read through see all the stuff in there it's a pretty long template it's",
    "start": "474490",
    "end": "479860"
  },
  {
    "text": "about 656 lines of code which is a pretty meaty template but you kind of",
    "start": "479860",
    "end": "485139"
  },
  {
    "text": "get the power when you see all of the things that are um launched as part of this and the nice thing is install you",
    "start": "485139",
    "end": "490300"
  },
  {
    "text": "know JSON text base you can use just version control it as you make changes and so on alright so when you click on",
    "start": "490300",
    "end": "496779"
  },
  {
    "text": "launch that confirmation template it takes you to this screen but it's asking for a few a few things so in this case",
    "start": "496779",
    "end": "502029"
  },
  {
    "text": "we stack name so this is just a name for the stack for you to know when you come back to confirmation here is the email",
    "start": "502029",
    "end": "508560"
  },
  {
    "text": "so this is the email address on which you are going to get the notification when when our application detects a one",
    "start": "508560",
    "end": "517089"
  },
  {
    "text": "of our favorite celebrity is on that we next I will just leave a stands type t2",
    "start": "517089",
    "end": "522789"
  },
  {
    "text": "Micro we'll choose the key name this is the key that we just created so we can",
    "start": "522789",
    "end": "528550"
  },
  {
    "text": "be more into the ec2 instance as we need there are four reference file so this is just a",
    "start": "528550",
    "end": "534640"
  },
  {
    "text": "reference image so in this case you know when you wanna you know whoever your favorite celebrity is just take one of",
    "start": "534640",
    "end": "539800"
  },
  {
    "text": "their photos as a reference photo and then all the incoming photos from Twitter will be compared against this",
    "start": "539800",
    "end": "545560"
  },
  {
    "text": "image SSS location we're just opening it up so we can be more into it again as a",
    "start": "545560",
    "end": "551320"
  },
  {
    "text": "security best practice you should not be opening up an ec2 instance you know for wide audience just make sure you know",
    "start": "551320",
    "end": "556480"
  },
  {
    "text": "you use things like best and those are some of the best practices and this is just a quick workshop so that's why",
    "start": "556480",
    "end": "561580"
  },
  {
    "text": "we're opening up so we can access it here you'll pass all the information we got from a Twitter so I'm just gonna",
    "start": "561580",
    "end": "568240"
  },
  {
    "text": "choose the consumer key secret key and then you know token and the token secret click on I acknowledge that I am and",
    "start": "568240",
    "end": "576339"
  },
  {
    "text": "that confirmation might be creating I am resources so in this case it's gonna create you know s3 bucket Lambda functional as well as some my M rules",
    "start": "576339",
    "end": "583630"
  },
  {
    "text": "and stuff you click on create and you get to the screen where you should see the status as create in progress I can",
    "start": "583630",
    "end": "591430"
  },
  {
    "text": "just click on stacks in the navigation and it refresh you see and the",
    "start": "591430",
    "end": "596589"
  },
  {
    "text": "confirmation template that we just ran with the status creating progress so in this case since it has to create quite a",
    "start": "596589",
    "end": "603459"
  },
  {
    "text": "lot of resources it can take up to four or five minutes for this to complete so I think this is the time Chris where we",
    "start": "603459",
    "end": "609790"
  },
  {
    "text": "can switch back to the architecture and can spend a little bit more time explaining different parts of the earth",
    "start": "609790",
    "end": "615040"
  },
  {
    "text": "architecture and services were using so first things first this is called",
    "start": "615040",
    "end": "620500"
  },
  {
    "text": "service bytes but we're doing something crazy and we're setting up a server let's talk a little bit about why we",
    "start": "620500",
    "end": "626680"
  },
  {
    "text": "have to set up things like key pairs and SSH and so a little bit of that it is kind of a little bit of an anti-pattern",
    "start": "626680",
    "end": "635529"
  },
  {
    "text": "to the purpose of this series here let's talk about kind of a unique reason as to why we need an ec2 instance and then we",
    "start": "635529",
    "end": "641350"
  },
  {
    "text": "can talk to some more assurance so in this case you know again you could run just some of that Python script anywhere",
    "start": "641350",
    "end": "647200"
  },
  {
    "text": "you know just to test it you know coming in from your local machine but in this case we said just let's just have a",
    "start": "647200",
    "end": "652450"
  },
  {
    "text": "quick instance where we have this Python script we just constantly calling you know Twitter API getting all those feeds",
    "start": "652450",
    "end": "659130"
  },
  {
    "text": "so just to kind of simulate some of that we have that ec2 instance at the friend ideally you could you know you could use",
    "start": "659130",
    "end": "665589"
  },
  {
    "text": "that even with that say for example a lambda function which you can schedule to run at certain frequency and then you know you can call",
    "start": "665589",
    "end": "672529"
  },
  {
    "text": "you know Twitter API or some of the other API and can still can achieve that way we just wanted to show that hey you",
    "start": "672529",
    "end": "678199"
  },
  {
    "text": "know even if you are using for example you see two instances and stuff in your existing architecture all you can still",
    "start": "678199",
    "end": "683749"
  },
  {
    "text": "you know use you know both DC to welcome as as lambda but most of the pipeline as",
    "start": "683749",
    "end": "689420"
  },
  {
    "text": "you can see is still server less where stuff is coming in going to fire hose as well as lambda has to be in jail so he",
    "start": "689420",
    "end": "695809"
  },
  {
    "text": "needs good questions here here folks question from la Thea in 1982 wouldn't",
    "start": "695809",
    "end": "701360"
  },
  {
    "text": "it be better to run lambda triggered by cloud watch of men and yes we could have done that for this example I think it",
    "start": "701360",
    "end": "706939"
  },
  {
    "text": "was nice about doing this this way is we can actually get I guess a quite a shorter poling period for the process",
    "start": "706939",
    "end": "714439"
  },
  {
    "text": "that's running right so it's gonna be some continuously polling whereas how much events we'd only have a one minute",
    "start": "714439",
    "end": "719600"
  },
  {
    "text": "interval so for sake of demonstration purposes this work yeah so yeah in this case in stance this is running so you",
    "start": "719600",
    "end": "725269"
  },
  {
    "text": "can you know just be more more frequent in that case yeah cool since walk through some of the other parts here in",
    "start": "725269",
    "end": "731000"
  },
  {
    "start": "730000",
    "end": "890000"
  },
  {
    "text": "the pipeline sure so in this case as we saw the ec2 instance is just you know constantly pulling and hitting the Twitter API",
    "start": "731000",
    "end": "737410"
  },
  {
    "text": "getting as those Twitter feeds come in just get those in other JSON and then",
    "start": "737410",
    "end": "744230"
  },
  {
    "text": "write it to Kinesis so why were using Kinesis what is Canisius so Kinesis is a way for you to get live streaming data",
    "start": "744230",
    "end": "752779"
  },
  {
    "text": "ingested into your service so in this case since we have that constant stream coming in and what Kinesis does is it",
    "start": "752779",
    "end": "759110"
  },
  {
    "text": "provides you that buffer where you can easily ingest that content and then process it you know using things like",
    "start": "759110",
    "end": "764720"
  },
  {
    "text": "lambda for example or in this case we're taking advantage of Canisius particles because when fire loses does is you can",
    "start": "764720",
    "end": "771079"
  },
  {
    "text": "still ingest live streaming content but you don't even need to write any client",
    "start": "771079",
    "end": "776120"
  },
  {
    "text": "application to then process that content you can just send it to you know a couple of destinations for example",
    "start": "776120",
    "end": "782749"
  },
  {
    "text": "things like s3 you can send it to something like elastic search or redshift and so on so in this case as",
    "start": "782749",
    "end": "789410"
  },
  {
    "text": "those the feeds JSON comes in we write it to Canisius particles and then fire roses gonna",
    "start": "789410",
    "end": "794449"
  },
  {
    "text": "write it to s3 our without us writing any code when those JSON files come to us three as you know",
    "start": "794449",
    "end": "801760"
  },
  {
    "text": "nice integration with s3 and lambda it can trigger a lambda function so when lambda then goes and pop open that JSON",
    "start": "801760",
    "end": "808690"
  },
  {
    "text": "file and then basically look for the link for the image it then takes that",
    "start": "808690",
    "end": "813820"
  },
  {
    "text": "image and then write it to s3 bucket as well as it write information where that",
    "start": "813820",
    "end": "819700"
  },
  {
    "text": "image came from to DynamoDB so in this case again we're just using twitter but imagine if you have a similar",
    "start": "819700",
    "end": "825850"
  },
  {
    "text": "application where maybe you are pulling images from multiple sources maybe some stuff coming from Twitter maybe some",
    "start": "825850",
    "end": "831430"
  },
  {
    "text": "coming from another social networking engine and that way you can kind of build okay where this source image came",
    "start": "831430",
    "end": "837040"
  },
  {
    "text": "from so then when you generate an event then you can say okay I found the match and this is a source where the image",
    "start": "837040",
    "end": "842740"
  },
  {
    "text": "came from so again you know in this case if you're using something like dynamo DB it's all managed you know there's no",
    "start": "842740",
    "end": "849220"
  },
  {
    "text": "servers that you have to configure so you can easily use it at scale you know whether start today with like tens of",
    "start": "849220",
    "end": "855279"
  },
  {
    "text": "TPS transactions per second for example or even if your application gets really popular and you google one hundred or",
    "start": "855279",
    "end": "861430"
  },
  {
    "text": "thousands or millions of TPS the same design just continue to work the next step is in this case where when the",
    "start": "861430",
    "end": "868060"
  },
  {
    "text": "image comes into s3 it calls lambda which then takes that incoming image compares it with your reference image so",
    "start": "868060",
    "end": "876010"
  },
  {
    "text": "how does it do that comparison and you know that's where the whole computer vision comes in right this is where you",
    "start": "876010",
    "end": "881230"
  },
  {
    "text": "have two images you want to detect how many faces are in those images and is there a match or not and that's where a",
    "start": "881230",
    "end": "887529"
  },
  {
    "text": "service like Amazon recognition comes in so recognition provides you a variety of",
    "start": "887529",
    "end": "893950"
  },
  {
    "start": "890000",
    "end": "1145000"
  },
  {
    "text": "things where you can send an image to recognition and it can detect for example objects it can detect different",
    "start": "893950",
    "end": "900010"
  },
  {
    "text": "scenes in the image it can detect faces and it can do like phase comparison and",
    "start": "900010",
    "end": "905170"
  },
  {
    "text": "so on in fact I can just let's just cook you see and looks like our CloudFormation",
    "start": "905170",
    "end": "911620"
  },
  {
    "text": "template is complete so I would just get back to that one but let me just show",
    "start": "911620",
    "end": "917680"
  },
  {
    "text": "you real quick what is it that we're using in recognition so recognition let you do something we call the face",
    "start": "917680",
    "end": "923620"
  },
  {
    "text": "comparison so in this case you send two images to recognition for example in this case you see a",
    "start": "923620",
    "end": "929680"
  },
  {
    "text": "face in the left image on the left and there are three people in the image on the right it's able to detect those",
    "start": "929680",
    "end": "934930"
  },
  {
    "text": "faces double the comparison and then tell us you know what does it think the confidence level and that these images",
    "start": "934930",
    "end": "940120"
  },
  {
    "text": "match so we're going to be using this face comparison feature in in our application to do that comparison",
    "start": "940120",
    "end": "947399"
  },
  {
    "text": "alright so have it the confirmation template complete one thing if you're",
    "start": "947399",
    "end": "952899"
  },
  {
    "text": "following along you wanna make sure is the even address that you typed in if",
    "start": "952899",
    "end": "958300"
  },
  {
    "text": "you go to that email address you should have received an email about SNS",
    "start": "958300",
    "end": "964029"
  },
  {
    "text": "notification so as part of that CloudFormation template it subscribe your email so you should be able to get",
    "start": "964029",
    "end": "969730"
  },
  {
    "text": "notification but make sure you click on confirm subscription because SNS just does not want to flood your email if you",
    "start": "969730",
    "end": "976089"
  },
  {
    "text": "don't want it once you click on that you should go to link like this which means your subscription is confirmed now you",
    "start": "976089",
    "end": "983620"
  },
  {
    "text": "should be able to receive a email and just in the case this email set up a dummy email account before this just to",
    "start": "983620",
    "end": "990279"
  },
  {
    "text": "not have an evil cow or a later that maybe have all sort of top-secret things",
    "start": "990279",
    "end": "995890"
  },
  {
    "text": "in here and so apologies for the ads and stuff that show up here but again just",
    "start": "995890",
    "end": "1000930"
  },
  {
    "text": "for demonstration purposes of being able to get the SMS notification yeah so concrete up let's set up a whole bunch",
    "start": "1000930",
    "end": "1007560"
  },
  {
    "text": "of stuff for us we've got now like a number of resources here up and running",
    "start": "1007560",
    "end": "1012570"
  },
  {
    "text": "yeah yeah actually before you go further here real quick can you go back to the operation console and look at resources",
    "start": "1012570",
    "end": "1017660"
  },
  {
    "text": "just the highlight again kind of all of the things that work for you and inside this template because again it's a pretty busy template sure so so you can",
    "start": "1017660",
    "end": "1025890"
  },
  {
    "text": "see in this case you know it created things like you know many many resources it created for example some s3 buckets",
    "start": "1025890",
    "end": "1034410"
  },
  {
    "text": "it created the lambda function in fact there is two lambda functions you earlier saw in the architecture it",
    "start": "1034410",
    "end": "1040079"
  },
  {
    "text": "created a dynamo DB table for us as well as you know few other things like SNS",
    "start": "1040079",
    "end": "1046110"
  },
  {
    "text": "and as well as like firehose so again all these we could have gone through two separate consoles or like s3 SMS and all",
    "start": "1046110",
    "end": "1053400"
  },
  {
    "text": "of those and create those things individually but in this case you know the template just created all of these resources for us automatic",
    "start": "1053400",
    "end": "1059760"
  },
  {
    "text": "very handsome so again if you're following a home and you we go through this the foundation plates gonna make it really easy for you to",
    "start": "1059760",
    "end": "1066720"
  },
  {
    "text": "start without having to understand how to configure each of these various services today yeah all right so next",
    "start": "1066720",
    "end": "1073080"
  },
  {
    "text": "let's go and connect to the instance so in this case we just went to the ec2",
    "start": "1073080",
    "end": "1080730"
  },
  {
    "text": "console we got the you know SSH and I'm just an SSH into it and again all these",
    "start": "1080730",
    "end": "1087269"
  },
  {
    "text": "steps are in the instructions yeah so and just just to kind of switch back so",
    "start": "1087269",
    "end": "1092820"
  },
  {
    "text": "you understand where we are so we have gone to the confirmation step and we're now starting the app to start receiving",
    "start": "1092820",
    "end": "1100110"
  },
  {
    "text": "the stream so just that the the script just expected to run in Ireland region",
    "start": "1100110",
    "end": "1106740"
  },
  {
    "text": "so that's what we're setting here and then we're gonna go to the directory which has our Python application so if I",
    "start": "1106740",
    "end": "1114480"
  },
  {
    "text": "go there and run it here is the Twitter streaming dot PI so let me just run that",
    "start": "1114480",
    "end": "1122148"
  },
  {
    "text": "alright so with our streaming application running so this is the simple Python script that is now pulling",
    "start": "1124879",
    "end": "1131879"
  },
  {
    "text": "and hitting Twitter API using the credentials and everything that we provided and it should be getting you",
    "start": "1131879",
    "end": "1138960"
  },
  {
    "text": "know the streams back as as there are tweets coming into the Twitter feed alright so with that the next step is",
    "start": "1138960",
    "end": "1146490"
  },
  {
    "start": "1145000",
    "end": "1320000"
  },
  {
    "text": "let's go and upload our reference image that we want to use for our celebrity so",
    "start": "1146490",
    "end": "1153330"
  },
  {
    "text": "in this case I'm gonna go to s3 and if you search for you know like celebrity",
    "start": "1153330",
    "end": "1160409"
  },
  {
    "text": "Drac that was the prefix we used in our template and all the resources are created this is the convention it's",
    "start": "1160409",
    "end": "1167399"
  },
  {
    "text": "using to create those so we go to the celebrity direct recognition workshop and we just upload our reference image",
    "start": "1167399",
    "end": "1174570"
  },
  {
    "text": "here we just select one of the images I have on my desktop and click upload",
    "start": "1174570",
    "end": "1184999"
  },
  {
    "text": "alright so with that image uploaded let's go to Twitter",
    "start": "1187039",
    "end": "1193279"
  },
  {
    "text": "any questions so far Chris no so we've got our image up there that recognition is and use the bases off of and now",
    "start": "1194700",
    "end": "1201929"
  },
  {
    "text": "we're ready to send tweets at the Twitter account that is tied into our stream and see if things are gonna match",
    "start": "1201929",
    "end": "1209519"
  },
  {
    "text": "I am going to actually here find an image we're gonna test this live I found a random image compared to your",
    "start": "1209519",
    "end": "1215879"
  },
  {
    "text": "celebrity okay we're gonna see we're to see how well this goes for us all right so so one last step is what we have is",
    "start": "1215879",
    "end": "1222779"
  },
  {
    "text": "though when we set up all of these it created some lambda functions so I just want to quickly go to that code and walk",
    "start": "1222779",
    "end": "1229350"
  },
  {
    "text": "you through how it works and then we'll use a well then we'll do a tweet and see",
    "start": "1229350",
    "end": "1234570"
  },
  {
    "text": "how how it works so to modify our lambda function we'll spin up our cloud9",
    "start": "1234570",
    "end": "1240450"
  },
  {
    "text": "environment do you want to talk with me so cloud 9 is service AWS launched back",
    "start": "1240450",
    "end": "1247559"
  },
  {
    "text": "at reinvent 2017 in the number of beginning in December of 2017 and it is",
    "start": "1247559",
    "end": "1253320"
  },
  {
    "text": "a completely managed hosted cloud based IDE for you it's got really tight integration with the number of AWS",
    "start": "1253320",
    "end": "1259499"
  },
  {
    "text": "services including and applicable to today lambda and api gateway and so you can actually get started really quickly",
    "start": "1259499",
    "end": "1266580"
  },
  {
    "text": "with building service applications eliminate gateway have the ability to do in IDE testing of both your lambda",
    "start": "1266580",
    "end": "1274499"
  },
  {
    "text": "functions and your lambda functions behind the nikkei gateway and again kind of full fledged ID environment",
    "start": "1274499",
    "end": "1280019"
  },
  {
    "text": "auto-completion debugging all sorts of pretty cool features in it and what I personally love about it is I used to always keep",
    "start": "1280019",
    "end": "1287340"
  },
  {
    "text": "an easy-to instance around provide like terminal for myself and a shell terminal to run random commands and stuff on and",
    "start": "1287340",
    "end": "1293070"
  },
  {
    "text": "so cloud 9 actually it runs on top of an ec2 instance for you and it gives you that same ability so I've been able to",
    "start": "1293070",
    "end": "1299220"
  },
  {
    "text": "kill off any ec2 instance that I have in my account now except for of those that are cloud 9 based which is to me pretty",
    "start": "1299220",
    "end": "1305970"
  },
  {
    "text": "awesome so really cool easy to get started definitely go and check out cloud 9 feels really familiar if you use",
    "start": "1305970",
    "end": "1314340"
  },
  {
    "text": "to other kind of you know main IDE these days and has again lots of different features capabilities baked into it cool",
    "start": "1314340",
    "end": "1320940"
  },
  {
    "start": "1320000",
    "end": "1415000"
  },
  {
    "text": "alright so I want to scream that I'm just gonna spin up a new environment so you can see how easy it is to quickly",
    "start": "1320940",
    "end": "1326369"
  },
  {
    "text": "create one the defaults here and hit next and the",
    "start": "1326369",
    "end": "1334020"
  },
  {
    "text": "new options and then click create environment so in this case it's just gonna take you know few seconds go ahead",
    "start": "1334020",
    "end": "1341280"
  },
  {
    "text": "and spin up our cloud 9 environment what will then do is go ahead and import butter for lambda function that's the",
    "start": "1341280",
    "end": "1347910"
  },
  {
    "text": "lambda which is comparing the incoming phase from Twitter feed with the reference image that we just uploaded to",
    "start": "1347910",
    "end": "1354690"
  },
  {
    "text": "the s3 bucket so we'll be able to then modify it I'll walk you through the code will modify make some changes and then",
    "start": "1354690",
    "end": "1361410"
  },
  {
    "text": "we'll push that lambda deploy it and then we'll go ahead and upload we'll do",
    "start": "1361410",
    "end": "1367140"
  },
  {
    "text": "a tweet and we'll see if our application can recognize the images coming from the",
    "start": "1367140",
    "end": "1372240"
  },
  {
    "text": "tweet comparing it with the reference image that we have already uploaded and",
    "start": "1372240",
    "end": "1378000"
  },
  {
    "text": "just for those who are following along in the chats here I'm just passing in some links for some of the merriest",
    "start": "1378000",
    "end": "1383700"
  },
  {
    "text": "products we've been talking about here today if you want to read a little deeper on some of these you'll have a",
    "start": "1383700",
    "end": "1388920"
  },
  {
    "text": "good place to get started here cool so right now cloud 9 is spinning up this",
    "start": "1388920",
    "end": "1394080"
  },
  {
    "text": "environment so it's got to basically quickly start used to to instance based on the ami that cloud 9 team uses",
    "start": "1394080",
    "end": "1401750"
  },
  {
    "text": "configure it for the accounts and get it up and running yeah",
    "start": "1401750",
    "end": "1407120"
  },
  {
    "text": "so while it's spinning that up let me just go ahead oh actually it's it's",
    "start": "1407120",
    "end": "1412830"
  },
  {
    "text": "ready so so let's actually jump into our lambda functions so once you are in the",
    "start": "1412830",
    "end": "1418440"
  },
  {
    "start": "1415000",
    "end": "1570000"
  },
  {
    "text": "environment you on the right side you see AWS resources and if I expand the remote functions this is where different",
    "start": "1418440",
    "end": "1425880"
  },
  {
    "text": "lambda functions that are in my account right now so I can just right click and import and click import again mm-hmm so",
    "start": "1425880",
    "end": "1435390"
  },
  {
    "text": "real quick here so what this is doing is actually pulling in the lambda functions that are configured in this region for",
    "start": "1435390",
    "end": "1440850"
  },
  {
    "text": "your account obviously you've got all sorts of fun things that are listed up here and so it's actually going to do is",
    "start": "1440850",
    "end": "1446330"
  },
  {
    "text": "in this environment you didn't have any code going into this right and so it's actually going to go and download the",
    "start": "1446330",
    "end": "1452880"
  },
  {
    "text": "functions basically deployment artifact and uncompressed that and make it",
    "start": "1452880",
    "end": "1458850"
  },
  {
    "text": "available to you here to edit so that's what's pretty again you don't have to necessarily start with a code repository somewhere",
    "start": "1458850",
    "end": "1465060"
  },
  {
    "text": "else or you know come to this with code you know on your laptop or your development workstation you can actually",
    "start": "1465060",
    "end": "1471000"
  },
  {
    "text": "just close stuff the ebrary got running inside of your lambda environment absolutely so in this case we only have",
    "start": "1471000",
    "end": "1477300"
  },
  {
    "text": "some base code in here if it shows you when the lambda gets triggered which bucket the file got uploaded to and what",
    "start": "1477300",
    "end": "1484050"
  },
  {
    "text": "is the file name so I'm just gonna cheat a little bit here and just take some code that I already have written to save",
    "start": "1484050",
    "end": "1490830"
  },
  {
    "text": "some time given that time constraint we had so let's just go ahead I pasted that",
    "start": "1490830",
    "end": "1497610"
  },
  {
    "text": "code so all we're doing here is as the lambda gets triggered here is the bucket",
    "start": "1497610",
    "end": "1503280"
  },
  {
    "text": "here is the file we actually then called detect faces method just to see if there are any faces in that image if not then",
    "start": "1503280",
    "end": "1510150"
  },
  {
    "text": "you know we just don't want to continue we just ignore and delete that image so the detect faces all it's using is a",
    "start": "1510150",
    "end": "1516300"
  },
  {
    "text": "recognition API so if you see it's just one line of code the call recognition has a pass to the object and it then",
    "start": "1516300",
    "end": "1523140"
  },
  {
    "text": "returns us whether it sees you know any faces in there or not if we detect that there are faces then",
    "start": "1523140",
    "end": "1528750"
  },
  {
    "text": "we call our compare faces method which again just call the recognition and it",
    "start": "1528750",
    "end": "1534150"
  },
  {
    "text": "passes in both the images and then recognition compare those and then gives us the result back and then based on",
    "start": "1534150",
    "end": "1540330"
  },
  {
    "text": "that we just go DynamoDB pull some information about where that image source came from and then just send the",
    "start": "1540330",
    "end": "1546750"
  },
  {
    "text": "notification using SNS and again when you're using SNS you can see just one I",
    "start": "1546750",
    "end": "1551790"
  },
  {
    "text": "have code to publish that message to SNS and then a synapse takes care of sending it message to the email so let's just",
    "start": "1551790",
    "end": "1558810"
  },
  {
    "text": "save it and I just hit refresh I'll see the lambda function that I imported",
    "start": "1558810",
    "end": "1564780"
  },
  {
    "text": "earlier under local functions and I can just publish it so once our lambda is",
    "start": "1564780",
    "end": "1570720"
  },
  {
    "start": "1570000",
    "end": "1980000"
  },
  {
    "text": "published we should now have all the pieces in place so let me just quickly",
    "start": "1570720",
    "end": "1576060"
  },
  {
    "text": "go back to the diagram so again we started with Twitter set up all the",
    "start": "1576060",
    "end": "1581490"
  },
  {
    "text": "stuff on ec2 instance of an our script so we should be getting a stream as",
    "start": "1581490",
    "end": "1586820"
  },
  {
    "text": "Twitter feeds come in and all the pieces are in place so it's time to test it let's go to",
    "start": "1586820",
    "end": "1594760"
  },
  {
    "text": "Twitter so I'm just gonna go to my Twitter account and upload a reference",
    "start": "1594760",
    "end": "1603200"
  },
  {
    "text": "image that I have what is your channel here again it is yeah so you can see so",
    "start": "1603200",
    "end": "1615230"
  },
  {
    "text": "while Chris is adding some more images I can just show you the reference image",
    "start": "1615230",
    "end": "1621320"
  },
  {
    "text": "that I had here was this one so this is",
    "start": "1621320",
    "end": "1628700"
  },
  {
    "text": "my reference image for the celebrity and here is a tweet that we just did using a",
    "start": "1628700",
    "end": "1635120"
  },
  {
    "text": "different image so what we should get is first of all let's go to the s3 bucket",
    "start": "1635120",
    "end": "1642890"
  },
  {
    "text": "where we should be seeing some JSON stuff coming in from Twitter so let me go to s3 that's good to this so once",
    "start": "1642890",
    "end": "1657110"
  },
  {
    "text": "then our Twitter feed comes in as we're doing a polling it can take about you know somewhere I've seen you know 30 40",
    "start": "1657110",
    "end": "1662960"
  },
  {
    "text": "or 50 seconds sometimes so we should be seeing some of the stuff coming in but",
    "start": "1662960",
    "end": "1669470"
  },
  {
    "text": "as we're waiting for some of that stuff to come in and in the Canisius firehose",
    "start": "1669470",
    "end": "1675020"
  },
  {
    "text": "any questions Chris that we want to take or yeah please you know send your questions at is here we're actually",
    "start": "1675020",
    "end": "1680900"
  },
  {
    "text": "having a really awesome conversation in the chat so we appreciate that but if anyone has any questions about the things that we're running through so far",
    "start": "1680900",
    "end": "1687559"
  },
  {
    "text": "here today you know please do what is snowing and this is kind of a rapid-fire thing okay absolutely awesome all right",
    "start": "1687559",
    "end": "1694190"
  },
  {
    "text": "it looks like we got something about the coming in so as you can see farlows just and some information here about the feed",
    "start": "1694190",
    "end": "1701090"
  },
  {
    "text": "so let's go and see what did we get there you just open that so you can see",
    "start": "1701090",
    "end": "1706910"
  },
  {
    "text": "in this case this is the JSON so that's the information about the feed that's coming in for India and then let's go to",
    "start": "1706910",
    "end": "1717260"
  },
  {
    "text": "the other SD bucket where we shall see the lambda function which looked at this and it should have extracted the image",
    "start": "1717260",
    "end": "1725120"
  },
  {
    "text": "and now we see there are two m8 based on I guess one feet that I did and another that Chris did so let's go to",
    "start": "1725120",
    "end": "1733960"
  },
  {
    "text": "our email and we see we have two emails came in first saying there's a possible",
    "start": "1733960",
    "end": "1740440"
  },
  {
    "text": "match for the favorite celebrity and here is the link for that image so if I go click on that that's the image that I",
    "start": "1740440",
    "end": "1747430"
  },
  {
    "text": "uploaded as a tweet let's look at the other notification there's the other one",
    "start": "1747430",
    "end": "1753420"
  },
  {
    "text": "and that's the same yep so I just said to chat my tweet there that got me to that image awesome so two matches for",
    "start": "1753420",
    "end": "1762070"
  },
  {
    "text": "our celebrity of yep two attempts so not by any means a scientific amount of data",
    "start": "1762070",
    "end": "1767680"
  },
  {
    "text": "that we're sending here to a you know to battle test recognition here but you",
    "start": "1767680",
    "end": "1774310"
  },
  {
    "text": "know really quickly you've been able to see us you know throw this together throw some tweets into Twitter pull",
    "start": "1774310",
    "end": "1779920"
  },
  {
    "text": "those tweets out pass them through the pipeline that you see here which has a couple of different steps we've got a great question here which is basically",
    "start": "1779920",
    "end": "1786340"
  },
  {
    "text": "how much sure what would the average cost be for an app like this so with the exception of the ec2 instance that's",
    "start": "1786340",
    "end": "1792370"
  },
  {
    "text": "here pretty much everything else that we've done would be pennies per month of you know for low usage so everything is",
    "start": "1792370",
    "end": "1798940"
  },
  {
    "text": "going to be basically a you know paper usage or paper event type of an interface or attempt pricing model you",
    "start": "1798940",
    "end": "1805600"
  },
  {
    "text": "know we've talked before about how you could have placed as easy to instance with a scheduled lambda function in that",
    "start": "1805600",
    "end": "1811030"
  },
  {
    "text": "case you would have no ec2 instances that you were running so basically all of your costs from what you see in this",
    "start": "1811030",
    "end": "1816370"
  },
  {
    "text": "diagram would be fairly fluid per month maybe with the exception of the dynamodb",
    "start": "1816370",
    "end": "1821980"
  },
  {
    "text": "table which you could configure for a certain amount of read and write units right anyone dining would be a bean are",
    "start": "1821980",
    "end": "1827650"
  },
  {
    "text": "the auto scaling feature yeah so you can just you know schedule that so it can automatically scale up if you're getting",
    "start": "1827650",
    "end": "1833020"
  },
  {
    "text": "more traffic and scale down if you're not ok real quick someone said go for a false positive so",
    "start": "1833020",
    "end": "1838540"
  },
  {
    "text": "just let's let's see if we can do real quick a false positive let's see let's",
    "start": "1838540",
    "end": "1844330"
  },
  {
    "text": "let's see if we can make this happen I give me real quick I know we're almost out of time so bear with us just for a",
    "start": "1844330",
    "end": "1850510"
  },
  {
    "text": "quick second we're going to see what happens if this matches it'll just be a",
    "start": "1850510",
    "end": "1857950"
  },
  {
    "text": "good thing to see why in a second here all right hold on hold on hold on we",
    "start": "1857950",
    "end": "1867770"
  },
  {
    "text": "have another tweet coming in one second so soon",
    "start": "1867770",
    "end": "1874240"
  },
  {
    "text": "we do a quick little dance here while we wait for everything to to process through well just be fresh this case",
    "start": "1874240",
    "end": "1891680"
  },
  {
    "text": "it'd be tweets at you see it",
    "start": "1891680",
    "end": "1895720"
  },
  {
    "text": "all right so you can take let me actually go to because we should be",
    "start": "1905990",
    "end": "1912500"
  },
  {
    "text": "getting the image here mm-hmm actually that's the script that we have is all right so these people are",
    "start": "1912500",
    "end": "1918919"
  },
  {
    "text": "starting to send us multiple things which is awesome hope people are saying",
    "start": "1918919",
    "end": "1924799"
  },
  {
    "text": "check the notifications nice no let's keep it PC here but I so I right we're",
    "start": "1924799",
    "end": "1932840"
  },
  {
    "text": "just gonna see if there's any other notifications that map so I sent a picture of a adorable puppy I posted in",
    "start": "1932840",
    "end": "1941419"
  },
  {
    "text": "the chat link to my my tweet here and so it looks like so far we're not getting",
    "start": "1941419",
    "end": "1946909"
  },
  {
    "text": "any emails that say that there have been any other matches now forget well this send us email if there's not a match no",
    "start": "1946909",
    "end": "1953960"
  },
  {
    "text": "so if there is not a match if that's just then go ahead and believe that image okay okay cool so a couple other",
    "start": "1953960",
    "end": "1960140"
  },
  {
    "text": "images it looks like no one else has set a match image and so oh baby we've got another one here let's see that possible",
    "start": "1960140",
    "end": "1967880"
  },
  {
    "text": "match I think it was probably the second one that you dinner oh that's my earlier",
    "start": "1967880",
    "end": "1973279"
  },
  {
    "text": "okay yeah okay cool so I awesome I think that's kind of it we're pretty much at a",
    "start": "1973279",
    "end": "1978860"
  },
  {
    "text": "time here that's super fast 30 minutes why you seeing us kind of start out with what is",
    "start": "1978860",
    "end": "1985429"
  },
  {
    "start": "1980000",
    "end": "2142000"
  },
  {
    "text": "available here and again depository that you can play with yourself and learn a little bit more about how all of this works we use CloudFormation to stand up",
    "start": "1985429",
    "end": "1992840"
  },
  {
    "text": "a whole bunch of resources in a matter of minutes we've got a lambda function Lubeck",
    "start": "1992840",
    "end": "1997909"
  },
  {
    "text": "Kinesis firehose we've got s3 buckets and dynamodb tables and we're talking to services like recognition and SNS we",
    "start": "1997909",
    "end": "2005830"
  },
  {
    "text": "were able to show kind of the power of recognition which is a pretty cool service we only kind of very barely",
    "start": "2005830",
    "end": "2012100"
  },
  {
    "text": "scratched the surface on some of the capabilities of recognition as well as kind of all of this and then lastly we",
    "start": "2012100",
    "end": "2018010"
  },
  {
    "text": "use cloud 9 so you know check out cloud 9 is an IDE super powerful it's become my favorite",
    "start": "2018010",
    "end": "2023260"
  },
  {
    "text": "kind of development environment that I have these days and it of thoughts is",
    "start": "2023260",
    "end": "2028270"
  },
  {
    "text": "they're coming no that's it's pretty pretty cool to quickly put together something like this and that much time and use you know the",
    "start": "2028270",
    "end": "2035799"
  },
  {
    "text": "power of things like Amazon recognition so if you have to build you know you models and train them to kind of do",
    "start": "2035799",
    "end": "2040960"
  },
  {
    "text": "something like into division I hope you understand you know how easily recognition is doing that with just one",
    "start": "2040960",
    "end": "2045970"
  },
  {
    "text": "API call and you can still you know get the power and build like smart applications like this without having to",
    "start": "2045970",
    "end": "2052210"
  },
  {
    "text": "go through the process of building and training in Oriya models yeah meant to be the sub for you you're the Nano folks",
    "start": "2052210",
    "end": "2057909"
  },
  {
    "text": "you're looking at was like 130 lines of code that's like nothing in the broad scheme of things and some of that code",
    "start": "2057910",
    "end": "2063010"
  },
  {
    "text": "is actually just there for you just kind of learn about sign know more things yeah and there's you know a lot of",
    "start": "2063010",
    "end": "2068290"
  },
  {
    "text": "comments but you know if the deal of the core you can actually do this if you remove con come combat don't stop",
    "start": "2068290",
    "end": "2073659"
  },
  {
    "text": "probably like 30 40 lines of code awesome so I think that's it for us here today I thank you for leading everyone",
    "start": "2073660",
    "end": "2081790"
  },
  {
    "text": "here to this awesome demo well thank you it was really good to be here cool I you know you can find the",
    "start": "2081790",
    "end": "2087159"
  },
  {
    "text": "reporting for this video here if you go up at the top here you look at the link for videos you'll see all of the",
    "start": "2087160",
    "end": "2092290"
  },
  {
    "text": "recordings that we have here from the twitch sessions that we do and they're doing I you know recommend that you",
    "start": "2092290",
    "end": "2098590"
  },
  {
    "text": "follow the AWS account here you'll get notifications of when we do these live streams we're doing more and more and",
    "start": "2098590",
    "end": "2103930"
  },
  {
    "text": "more of those these days on all sorts of different topics it's a great way to get to you know some insight and some",
    "start": "2103930",
    "end": "2109780"
  },
  {
    "text": "learning and you know get in front of the samples like this appreciate everyone who joined us here today and",
    "start": "2109780",
    "end": "2115890"
  },
  {
    "text": "we'll have another one of these sessions here your service bites coming up in a couple weeks more information on that on",
    "start": "2115890",
    "end": "2121840"
  },
  {
    "text": "the AWS a Twitter account and thanks again for coming have a great rest of",
    "start": "2121840",
    "end": "2127150"
  },
  {
    "text": "your day there so Liam from Germany have a great rest of your evening for those of you who are other places around the world have a great rest of your morning",
    "start": "2127150",
    "end": "2133360"
  },
  {
    "text": "afternoon and evening end of day and we'll talk to you real soon thanks again take care thank you",
    "start": "2133360",
    "end": "2141300"
  }
]