[
  {
    "text": "- Hi, my name is Talia Nassi,",
    "start": "5700",
    "end": "7379"
  },
  {
    "text": "and I'm a senior developer\nadvocate here at AWS Serverless.",
    "start": "7380",
    "end": "11310"
  },
  {
    "text": "Two options when building web applications",
    "start": "11310",
    "end": "13890"
  },
  {
    "text": "are request-response and\nevent-driven architecture.",
    "start": "13890",
    "end": "17500"
  },
  {
    "text": "In request-response architecture,",
    "start": "17500",
    "end": "19470"
  },
  {
    "text": "an application's components\ncommunicate via API calls.",
    "start": "19470",
    "end": "23490"
  },
  {
    "text": "The client sends a request\nand expects a response",
    "start": "23490",
    "end": "26560"
  },
  {
    "text": "before performing the next task.",
    "start": "26560",
    "end": "29140"
  },
  {
    "text": "In event-driven architecture,\nthe client generates an event",
    "start": "29140",
    "end": "32259"
  },
  {
    "text": "and can immediately move\non to its next task.",
    "start": "32260",
    "end": "35570"
  },
  {
    "text": "Different parts of the application",
    "start": "35570",
    "end": "37489"
  },
  {
    "text": "then respond to the event as needed.",
    "start": "37490",
    "end": "39963"
  },
  {
    "text": "When starting to build a new application,",
    "start": "41600",
    "end": "44039"
  },
  {
    "text": "many developers default to a\nrequest-response architecture.",
    "start": "44040",
    "end": "48600"
  },
  {
    "text": "A request-response\narchitecture tightly integrates",
    "start": "48600",
    "end": "51379"
  },
  {
    "text": "components and those\ncomponents communicate",
    "start": "51380",
    "end": "53990"
  },
  {
    "text": "via synchronous calls.",
    "start": "53990",
    "end": "56150"
  },
  {
    "text": "While a request-response\napproach is easier",
    "start": "56150",
    "end": "58550"
  },
  {
    "text": "to get started with, it can\nquickly become challenging",
    "start": "58550",
    "end": "61600"
  },
  {
    "text": "as your application grows in complexity.",
    "start": "61600",
    "end": "64659"
  },
  {
    "text": "In a typical e-commerce\napplication that uses",
    "start": "64660",
    "end": "67010"
  },
  {
    "text": "a synchronous API, the\nclient makes a request",
    "start": "67010",
    "end": "70040"
  },
  {
    "text": "to place an order.",
    "start": "70040",
    "end": "71280"
  },
  {
    "text": "And the order service sends\nthe request downstream",
    "start": "71280",
    "end": "74380"
  },
  {
    "text": "to an invoice service.",
    "start": "74380",
    "end": "75973"
  },
  {
    "text": "If successful the order\nresponds with a success message,",
    "start": "77140",
    "end": "80420"
  },
  {
    "text": "confirmation number, et cetera.",
    "start": "80420",
    "end": "83000"
  },
  {
    "text": "And in this initial stage,",
    "start": "83000",
    "end": "84520"
  },
  {
    "text": "this is a straightforward connection",
    "start": "84520",
    "end": "85939"
  },
  {
    "text": "between the two services.",
    "start": "85940",
    "end": "87710"
  },
  {
    "text": "The challenge comes when\nyou add more services",
    "start": "87710",
    "end": "90210"
  },
  {
    "text": "that integrate with the order service.",
    "start": "90210",
    "end": "92113"
  },
  {
    "text": "If you add a fulfillment service\nand a forecasting service,",
    "start": "93550",
    "end": "97230"
  },
  {
    "text": "the order service has\nmore responsibilities",
    "start": "97230",
    "end": "99590"
  },
  {
    "text": "and more complexity.",
    "start": "99590",
    "end": "101380"
  },
  {
    "text": "The order service must know\nhow to call each service's API",
    "start": "101380",
    "end": "105680"
  },
  {
    "text": "from the API call structure\nto the API's retry semantics.",
    "start": "105680",
    "end": "110230"
  },
  {
    "text": "If there are any backwards\nincompatible changes to the APIs,",
    "start": "110230",
    "end": "113910"
  },
  {
    "text": "the order service team must update them.",
    "start": "113910",
    "end": "116540"
  },
  {
    "text": "The system forwards heavy traffic spikes",
    "start": "116540",
    "end": "118840"
  },
  {
    "text": "to the order service's dependency",
    "start": "118840",
    "end": "120939"
  },
  {
    "text": "which may not have the\nsame scaling capabilities.",
    "start": "120940",
    "end": "124130"
  },
  {
    "text": "Also dependent services transmit errors",
    "start": "124130",
    "end": "126770"
  },
  {
    "text": "back up stack to the client.",
    "start": "126770",
    "end": "129632"
  },
  {
    "text": "Now you add new downstream\nservices for fulfillment",
    "start": "132440",
    "end": "135950"
  },
  {
    "text": "and shipping orders to the\ne-commerce application.",
    "start": "135950",
    "end": "139010"
  },
  {
    "text": "In the happy path,\neverything works as expected.",
    "start": "139010",
    "end": "142420"
  },
  {
    "text": "The order service triggers invoicing,",
    "start": "142420",
    "end": "144660"
  },
  {
    "text": "payment systems and updates forecasting.",
    "start": "144660",
    "end": "147420"
  },
  {
    "text": "Once payment clears, this\ntriggers the fulfillment",
    "start": "147420",
    "end": "149810"
  },
  {
    "text": "and packing of the order.",
    "start": "149810",
    "end": "151160"
  },
  {
    "text": "And then you inform the shipping service",
    "start": "151160",
    "end": "152930"
  },
  {
    "text": "to request tracking information.",
    "start": "152930",
    "end": "155200"
  },
  {
    "text": "However, what happens if\nthe fulfillment center",
    "start": "155200",
    "end": "157920"
  },
  {
    "text": "cannot find the product\nbecause they are out of stock?",
    "start": "157920",
    "end": "161340"
  },
  {
    "text": "Fulfillment might have to\nalert the invoice service",
    "start": "161340",
    "end": "164160"
  },
  {
    "text": "then reverse the payment\nor issue a refund.",
    "start": "164160",
    "end": "166990"
  },
  {
    "text": "Would the system trigger\nshipping if fulfillment fails?",
    "start": "166990",
    "end": "169900"
  },
  {
    "text": "Maybe not since it's\ndirectly before shipping",
    "start": "169900",
    "end": "172340"
  },
  {
    "text": "in the chain of events.",
    "start": "172340",
    "end": "174209"
  },
  {
    "text": "Forecasting will also need to be updated",
    "start": "174210",
    "end": "176480"
  },
  {
    "text": "to reflect this change.",
    "start": "176480",
    "end": "178430"
  },
  {
    "text": "This remediation workflow\nis all just to fix",
    "start": "178430",
    "end": "181569"
  },
  {
    "text": "one of the many potential\nunhappy paths that can occur",
    "start": "181570",
    "end": "185290"
  },
  {
    "text": "in a synchronous API driven\ne-commerce application.",
    "start": "185290",
    "end": "188553"
  },
  {
    "text": "In a synchronously integrated application,",
    "start": "189600",
    "end": "191900"
  },
  {
    "text": "teams need to coordinate any new services",
    "start": "191900",
    "end": "194280"
  },
  {
    "text": "that are added to the application.",
    "start": "194280",
    "end": "196240"
  },
  {
    "text": "This can slow down each\ndevelopment team's ability",
    "start": "196240",
    "end": "198950"
  },
  {
    "text": "to release new features.",
    "start": "198950",
    "end": "200940"
  },
  {
    "text": "Imagine your team works\non the payment service,",
    "start": "200940",
    "end": "203630"
  },
  {
    "text": "but you weren't told that\nanother team added a new service,",
    "start": "203630",
    "end": "206510"
  },
  {
    "text": "a rewards service.",
    "start": "206510",
    "end": "208409"
  },
  {
    "text": "What now happens when the\nfulfillment service errors?",
    "start": "208410",
    "end": "211810"
  },
  {
    "text": "Fulfillment maybe orchestrates\nall of the other services.",
    "start": "211810",
    "end": "215420"
  },
  {
    "text": "Your payment team gets a message\nand you undo the payment,",
    "start": "215420",
    "end": "218910"
  },
  {
    "text": "but you don't know who handles\nretries and error logic.",
    "start": "218910",
    "end": "222410"
  },
  {
    "text": "What happens if the rewards\nservice changes vendors",
    "start": "222410",
    "end": "225480"
  },
  {
    "text": "and has a new API?",
    "start": "225480",
    "end": "227180"
  },
  {
    "text": "Did your team know about that?",
    "start": "227180",
    "end": "229689"
  },
  {
    "text": "Ultimately, it's very hard to coordinate",
    "start": "229690",
    "end": "231900"
  },
  {
    "text": "these orchestrations and workflows",
    "start": "231900",
    "end": "233930"
  },
  {
    "text": "as systems become more and more complex",
    "start": "233930",
    "end": "236890"
  },
  {
    "text": "and as you add more services.",
    "start": "236890",
    "end": "240110"
  },
  {
    "text": "Event-driven architecture\ncan help solve the problems",
    "start": "240110",
    "end": "243160"
  },
  {
    "text": "of the close coordination\nof microservices,",
    "start": "243160",
    "end": "245930"
  },
  {
    "text": "error handling and retries",
    "start": "245930",
    "end": "247500"
  },
  {
    "text": "and coordination between\ndevelopment teams.",
    "start": "247500",
    "end": "249953"
  },
  {
    "text": "In event-driven architecture,",
    "start": "250838",
    "end": "252140"
  },
  {
    "text": "the publisher emits an event",
    "start": "252140",
    "end": "254090"
  },
  {
    "text": "which is acknowledged by the event bus.",
    "start": "254090",
    "end": "256690"
  },
  {
    "text": "The event bus routes events to subscribers",
    "start": "256690",
    "end": "259489"
  },
  {
    "text": "which process events with\nself-contained business logic.",
    "start": "259490",
    "end": "263130"
  },
  {
    "text": "There is no direct communication",
    "start": "263130",
    "end": "265070"
  },
  {
    "text": "between publishers and subscribers.",
    "start": "265070",
    "end": "267343"
  },
  {
    "text": "Decoupled applications enable teams",
    "start": "268350",
    "end": "270510"
  },
  {
    "text": "to act more independently,\nwhich increases their velocity.",
    "start": "270510",
    "end": "274780"
  },
  {
    "text": "For example, with an\nAPI-based integration,",
    "start": "274780",
    "end": "278040"
  },
  {
    "text": "if my team wants to know about some change",
    "start": "278040",
    "end": "280210"
  },
  {
    "text": "that happened in another\nteam's microservice,",
    "start": "280210",
    "end": "282639"
  },
  {
    "text": "I have to ask that team to\nmake an API call to my service.",
    "start": "282640",
    "end": "286530"
  },
  {
    "text": "That means I have to\ndeal with authentication,",
    "start": "286530",
    "end": "289080"
  },
  {
    "text": "coordination with the other team",
    "start": "289080",
    "end": "290590"
  },
  {
    "text": "over the structure of\nthe API call, et cetera.",
    "start": "290590",
    "end": "293373"
  },
  {
    "text": "This causes a lot of back\nand forth between teams",
    "start": "294600",
    "end": "297160"
  },
  {
    "text": "which slows down development time.",
    "start": "297160",
    "end": "299570"
  },
  {
    "text": "With an event-driven application,",
    "start": "299570",
    "end": "301180"
  },
  {
    "text": "I can simply subscribe to events\nsent from your microservice",
    "start": "301180",
    "end": "304669"
  },
  {
    "text": "and the event router,\nlike Amazon EventBridge,",
    "start": "304670",
    "end": "307800"
  },
  {
    "text": "takes care of routing the event,",
    "start": "307800",
    "end": "309599"
  },
  {
    "text": "handling authentication, et cetera.",
    "start": "309600",
    "end": "312003"
  },
  {
    "text": "Another reason to migrate\nto event-driven architecture",
    "start": "313940",
    "end": "316840"
  },
  {
    "text": "is to be able to handle\nunpredictable traffic.",
    "start": "316840",
    "end": "320220"
  },
  {
    "text": "E-commerce websites like\namazon.com have variable amounts",
    "start": "320220",
    "end": "324010"
  },
  {
    "text": "of traffic depending on the day.",
    "start": "324010",
    "end": "326360"
  },
  {
    "text": "Once you place an order,\na bunch of things happen.",
    "start": "326360",
    "end": "329150"
  },
  {
    "text": "First, Amazon checks your credit card",
    "start": "329150",
    "end": "331130"
  },
  {
    "text": "to make sure you can pay.",
    "start": "331130",
    "end": "332640"
  },
  {
    "text": "Then Amazon has to get the\nmerchandise off the shelves",
    "start": "332640",
    "end": "335500"
  },
  {
    "text": "and onto the trucks and so on and so on.",
    "start": "335500",
    "end": "338510"
  },
  {
    "text": "That all happens in an Amazon warehouse.",
    "start": "338510",
    "end": "341100"
  },
  {
    "text": "There's no synchronous API\ncall for the Amazon backends",
    "start": "341100",
    "end": "344360"
  },
  {
    "text": "to package and ship products.",
    "start": "344360",
    "end": "346610"
  },
  {
    "text": "After the system confirms your payment,",
    "start": "346610",
    "end": "348680"
  },
  {
    "text": "the front end puts\ntogether some information",
    "start": "348680",
    "end": "350660"
  },
  {
    "text": "describing the event and\nputs your account number,",
    "start": "350660",
    "end": "353240"
  },
  {
    "text": "credit card info and what you\nbought in a packaged event",
    "start": "353240",
    "end": "356370"
  },
  {
    "text": "and puts it into the\ncloud and onto a queue.",
    "start": "356370",
    "end": "358903"
  },
  {
    "text": "Later, another piece of\nsoftware will pull it off",
    "start": "360210",
    "end": "362520"
  },
  {
    "text": "and start the packing,\nthe shipping, et cetera.",
    "start": "362520",
    "end": "365340"
  },
  {
    "text": "The key point about this process\nis that all of these things",
    "start": "365340",
    "end": "368160"
  },
  {
    "text": "can run at different rates.",
    "start": "368160",
    "end": "370050"
  },
  {
    "text": "Normally, the rate at which\npeople click place order",
    "start": "370050",
    "end": "372919"
  },
  {
    "text": "and the rate at which\nwarehouses can get the boxes",
    "start": "372920",
    "end": "375250"
  },
  {
    "text": "out of the doors are roughly equivalent.",
    "start": "375250",
    "end": "377690"
  },
  {
    "text": "However, on days like\nPrime Day or Black Friday,",
    "start": "377690",
    "end": "381270"
  },
  {
    "text": "people hit that button immensely faster",
    "start": "381270",
    "end": "383289"
  },
  {
    "text": "than the warehouses can\noperate, and that's okay",
    "start": "383290",
    "end": "386000"
  },
  {
    "text": "because the backend will\nwork itself through.",
    "start": "386000",
    "end": "388313"
  },
  {
    "text": "E-commerce applications like amazon.com",
    "start": "389220",
    "end": "392170"
  },
  {
    "text": "need to be able to scale up to\nhandle unpredictable traffic.",
    "start": "392170",
    "end": "396120"
  },
  {
    "text": "When a customer places\nan order, an event router",
    "start": "396120",
    "end": "398919"
  },
  {
    "text": "like Amazon EventBridge\nreceives the events",
    "start": "398920",
    "end": "401300"
  },
  {
    "text": "and all of the downstream\nmicroservices are able",
    "start": "401300",
    "end": "403860"
  },
  {
    "text": "to pick up the order event for processing.",
    "start": "403860",
    "end": "407462"
  },
  {
    "text": "Because each of the microservices\ncan fail independently,",
    "start": "408690",
    "end": "412000"
  },
  {
    "text": "there are no single points of failure.",
    "start": "412000",
    "end": "414600"
  },
  {
    "text": "Event-driven architectures promote",
    "start": "414600",
    "end": "416310"
  },
  {
    "text": "development team independence\ndue to loose coupling",
    "start": "416310",
    "end": "419020"
  },
  {
    "text": "between publishers and subscribers.",
    "start": "419020",
    "end": "421400"
  },
  {
    "text": "Applications are free\nto subscribe to events",
    "start": "421400",
    "end": "423790"
  },
  {
    "text": "with routing requirements\nand business logic",
    "start": "423790",
    "end": "426290"
  },
  {
    "text": "that are separate from the\npublisher and other subscribers.",
    "start": "426290",
    "end": "429670"
  },
  {
    "text": "This allows publishers and subscribers",
    "start": "429670",
    "end": "431720"
  },
  {
    "text": "to change independently of each other,",
    "start": "431720",
    "end": "433920"
  },
  {
    "text": "providing more flexibility\nto the overall architecture.",
    "start": "433920",
    "end": "438370"
  },
  {
    "text": "Decoupled applications also allow you",
    "start": "438370",
    "end": "440430"
  },
  {
    "text": "to build new features faster.",
    "start": "440430",
    "end": "442880"
  },
  {
    "text": "Adding new features or\nextending existing ones",
    "start": "442880",
    "end": "445540"
  },
  {
    "text": "is much simpler with\nevent-driven architectures",
    "start": "445540",
    "end": "448090"
  },
  {
    "text": "because all you have to\ndo is choose the event",
    "start": "448090",
    "end": "450050"
  },
  {
    "text": "you need to trigger your new feature",
    "start": "450050",
    "end": "451840"
  },
  {
    "text": "and then subscribe to it.",
    "start": "451840",
    "end": "453710"
  },
  {
    "text": "There is no need to modify\nany of your existing services",
    "start": "453710",
    "end": "457069"
  },
  {
    "text": "to add new functionality.",
    "start": "457070",
    "end": "459460"
  },
  {
    "text": "To learn more about\nevent-driven architecture",
    "start": "459460",
    "end": "461436"
  },
  {
    "text": "and Amazon EventBridge\nhead to serverlessland.com",
    "start": "461437",
    "end": "464720"
  },
  {
    "text": "where you'll find more\ncontent from me and my team.",
    "start": "464720",
    "end": "467300"
  },
  {
    "text": "I'm Talia Nassi. Thanks for tuning in.",
    "start": "467300",
    "end": "469623"
  }
]