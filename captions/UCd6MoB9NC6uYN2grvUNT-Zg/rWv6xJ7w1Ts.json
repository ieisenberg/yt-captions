[
  {
    "text": "hello everybody thanks for coming I know",
    "start": "949",
    "end": "6569"
  },
  {
    "text": "you guys had a busy week so and big party yesterday so I appreciate you all",
    "start": "6569",
    "end": "11610"
  },
  {
    "text": "showing up and I know this is not taken for granted so how would you like to be",
    "start": "11610",
    "end": "17760"
  },
  {
    "text": "able to use techniques like blue green and canary when deploying applications on ECS how would you like to be able to",
    "start": "17760",
    "end": "24750"
  },
  {
    "text": "run spot instances and at the same time have the opportunity to kind of default to on-demand if your spot capacity goes",
    "start": "24750",
    "end": "33390"
  },
  {
    "text": "down without having any downtime and availability so my name is Geneva I'm a",
    "start": "33390",
    "end": "38670"
  },
  {
    "text": "business development manager for container services at AWS and I'm going to walk you through a couple of examples",
    "start": "38670",
    "end": "44040"
  },
  {
    "text": "of things that you can achieve on the platform and ECS and then I'm gonna hand",
    "start": "44040",
    "end": "49379"
  },
  {
    "text": "it over to Matt box who's gonna talk a little bit about their learning and experiences on the platform so Amazon",
    "start": "49379",
    "end": "59309"
  },
  {
    "text": "ECS is the underlying technology that powers containerized workloads on AWS",
    "start": "59309",
    "end": "65939"
  },
  {
    "text": "it's our native container service and you know over the last few we are the",
    "start": "65939",
    "end": "71820"
  },
  {
    "text": "last week we had several announcements and we introduced a new technology",
    "start": "71820",
    "end": "77520"
  },
  {
    "text": "called Fargate which allows you to run seamlessly the same container as workloads but not having to provision",
    "start": "77520",
    "end": "83640"
  },
  {
    "text": "any infrastructure and we also introduced our support for kubernetes",
    "start": "83640",
    "end": "89909"
  },
  {
    "text": "but at the same time over the last year a lot of the customers that we've spoke to have been running ECS at scale and",
    "start": "89909",
    "end": "97170"
  },
  {
    "text": "have been using it to gain a lot of those obvious and a bit less obvious",
    "start": "97170",
    "end": "102229"
  },
  {
    "text": "benefits when running different types of workloads and really when you talk about ECS this",
    "start": "102229",
    "end": "109799"
  },
  {
    "text": "is your underlying orchestration platform but there's a bigger story here because as developers you're looking to",
    "start": "109799",
    "end": "116640"
  },
  {
    "text": "get all those benefits that ec2 and all those other services that AWS have at",
    "start": "116640",
    "end": "122310"
  },
  {
    "text": "the fed your fingertips even if you are running containers and not standard ec",
    "start": "122310",
    "end": "127649"
  },
  {
    "text": "tooth so things like being able to use secrets management for exam using parameter store or being able to",
    "start": "127649",
    "end": "135379"
  },
  {
    "text": "attach an iron rule to have access control to other AWS services using a",
    "start": "135379",
    "end": "140840"
  },
  {
    "text": "task level rule or the ability to route traffic seamlessly into your services",
    "start": "140840",
    "end": "147109"
  },
  {
    "text": "using a lbs or lbs or enemies and also the ability to have VPC capabilities so",
    "start": "147109",
    "end": "154519"
  },
  {
    "text": "a couple of weeks back we introduced the capability to attach Ian's eyes elastic",
    "start": "154519",
    "end": "159590"
  },
  {
    "text": "network interfaces into your running ECS tasks so now you can have V PC IP",
    "start": "159590",
    "end": "165169"
  },
  {
    "text": "addresses that are attached to your easiest tasks so easiest tasks can now",
    "start": "165169",
    "end": "170510"
  },
  {
    "text": "get IP addresses and security groups at a task level and so there are many other",
    "start": "170510",
    "end": "177889"
  },
  {
    "text": "capabilities as well so debugging capabilities AWS x-ray for example to be",
    "start": "177889",
    "end": "184129"
  },
  {
    "text": "able to trace and debug your applications how would you like to get that capability when your application is running on ECS",
    "start": "184129",
    "end": "192069"
  },
  {
    "text": "so let me just kind of walk you through a couple of very concrete examples of",
    "start": "192069",
    "end": "198409"
  },
  {
    "text": "things that you can actually achieve on the platform and when running with these years so Canary deployments has kind of",
    "start": "198409",
    "end": "207109"
  },
  {
    "text": "grown to become a best practice way to migrate your application from version",
    "start": "207109",
    "end": "212449"
  },
  {
    "text": "one to version two in a way that is seamless so there is no downtime requiring to take your service down",
    "start": "212449",
    "end": "219349"
  },
  {
    "text": "overwrite or replace your files and then bringing it back up you just deploy the",
    "start": "219349",
    "end": "224629"
  },
  {
    "text": "new version alongside the old one and then you can gradually start routing",
    "start": "224629",
    "end": "231040"
  },
  {
    "text": "real-world customer traffic slowly into your new version and so you can get that",
    "start": "231040",
    "end": "236720"
  },
  {
    "text": "quality assurance of how that new application or how that new version behaves if you grow confident of the new",
    "start": "236720",
    "end": "244129"
  },
  {
    "text": "version quality you can then route more and more traffic into it gradually until",
    "start": "244129",
    "end": "249919"
  },
  {
    "text": "you reach 100% but at the same time if something goes wrong you can definitely rollback the traffic and just hit the",
    "start": "249919",
    "end": "257870"
  },
  {
    "text": "blue again with 100% take the green one or the new one offline and do some",
    "start": "257870",
    "end": "263200"
  },
  {
    "text": "rechecking of your applique to make the necessary changes and get it",
    "start": "263200",
    "end": "268270"
  },
  {
    "text": "back online so it's kind of a way to have a seamless way to both get seamless",
    "start": "268270",
    "end": "276039"
  },
  {
    "text": "upgrade with rollback capabilities so there are a lot of ways to implement",
    "start": "276039",
    "end": "283470"
  },
  {
    "text": "canary and Bluegreen deployments on AWS so I'm going to walk you through one of",
    "start": "283470",
    "end": "289150"
  },
  {
    "text": "the reference architectures this is this is actually published on github so if you scan the QR code at the top left",
    "start": "289150",
    "end": "296530"
  },
  {
    "text": "part of the screen you'll be able to hit that page and it actually contains both",
    "start": "296530",
    "end": "301660"
  },
  {
    "text": "the diagrams the explanations and the code and CloudFormation template that",
    "start": "301660",
    "end": "306699"
  },
  {
    "text": "you can just deploy in a click and have it running in your account so the main",
    "start": "306699",
    "end": "312280"
  },
  {
    "text": "idea here is that we're using two different ECS services one represents our green which is the new version and",
    "start": "312280",
    "end": "318760"
  },
  {
    "text": "one is the blue which is our application version already running so when you want",
    "start": "318760",
    "end": "324190"
  },
  {
    "text": "to migrate between those two you're creating basically a route 53 record set",
    "start": "324190",
    "end": "329289"
  },
  {
    "text": "that points with DNS a records to both the load balancers the ALDS that each of",
    "start": "329289",
    "end": "335979"
  },
  {
    "text": "them fronts the different service so one alb fronts the blue service and one alb",
    "start": "335979",
    "end": "341110"
  },
  {
    "text": "fronts the green service and using route 53 weighted routing policies you can",
    "start": "341110",
    "end": "348400"
  },
  {
    "text": "actually determine how much traffic goes into your blue versus how much traffic",
    "start": "348400",
    "end": "354010"
  },
  {
    "text": "goes into your green so you can use an",
    "start": "354010",
    "end": "359169"
  },
  {
    "text": "automated way to kind of have a function that will automatically do that for you",
    "start": "359169",
    "end": "365409"
  },
  {
    "text": "so the way we did it in this architecture is we're using cloud watch events cloud watch events is basically a",
    "start": "365409",
    "end": "371830"
  },
  {
    "text": "mechanism in which every time that an EC s task gets run or any other state",
    "start": "371830",
    "end": "378280"
  },
  {
    "text": "changes happens we get an event in the system and you can put a trigger to run",
    "start": "378280",
    "end": "383680"
  },
  {
    "text": "some code as a result of that change in this case it would be a lambda function so when your new Green Service easiest",
    "start": "383680",
    "end": "392560"
  },
  {
    "text": "task is getting launched and reaches the running state a lambda function is getting triggered",
    "start": "392560",
    "end": "398710"
  },
  {
    "text": "we look at the DynamoDB table just to make sure that we don't have the same",
    "start": "398710",
    "end": "404860"
  },
  {
    "text": "processing on the same event twice because it uses an at least once mechanism when throwing out the events",
    "start": "404860",
    "end": "411699"
  },
  {
    "text": "to cloud watch so assuming that's our first time processing this we go ahead",
    "start": "411699",
    "end": "417520"
  },
  {
    "text": "and execute a step function now what the step function does is it basically takes",
    "start": "417520",
    "end": "423009"
  },
  {
    "text": "a first step of routing 10% of traffic to that new service then it waits for a",
    "start": "423009",
    "end": "430690"
  },
  {
    "text": "few seconds and then after that it makes the first verification to see how that",
    "start": "430690",
    "end": "436419"
  },
  {
    "text": "green service is running and it's doing that by using a health check if everything goes well and that's kind of",
    "start": "436419",
    "end": "443500"
  },
  {
    "text": "the left flow of the chart it's going on to the next stage of now sending 50% of",
    "start": "443500",
    "end": "448870"
  },
  {
    "text": "the traffic to the green and so 50 will remain running on the blue again some",
    "start": "448870",
    "end": "455470"
  },
  {
    "text": "period of time waiting additional verification and then taking that final step of 100% to the green and zero to",
    "start": "455470",
    "end": "464380"
  },
  {
    "text": "the blue in which point you can gracefully take down your blue service and remain with your new application",
    "start": "464380",
    "end": "471310"
  },
  {
    "text": "version running but if something was to go wrong so the health check for the green service did not go through that",
    "start": "471310",
    "end": "477520"
  },
  {
    "text": "would be the right-hand side of the chart which you're not seeing because I cut the bottom of the chart but",
    "start": "477520",
    "end": "483639"
  },
  {
    "text": "basically that step what it does is it just rolls back those weightings",
    "start": "483639",
    "end": "488800"
  },
  {
    "text": "to again 100% blue 0% for the green and you can take it down for rechecking what",
    "start": "488800",
    "end": "495849"
  },
  {
    "text": "went wrong so I'm going to walk you through a quick demo that will basically",
    "start": "495849",
    "end": "502210"
  },
  {
    "text": "do exactly that and let's see if we can kind of visualize and see how that works",
    "start": "502210",
    "end": "507400"
  },
  {
    "text": "in real motion so I'm going into my",
    "start": "507400",
    "end": "515320"
  },
  {
    "text": "console so this is my AWS console and",
    "start": "515320",
    "end": "520620"
  },
  {
    "text": "the first thing I want to do is I want to look at my ECS console and see what we have there so we upgraded the UI",
    "start": "520620",
    "end": "527290"
  },
  {
    "text": "after launching Fargate this week so now you get visibility in each of your clusters on what are the",
    "start": "527290",
    "end": "533380"
  },
  {
    "text": "ec2 type tasks that are running those would be the type that you all know and familiar with and on the bottom hand",
    "start": "533380",
    "end": "539980"
  },
  {
    "text": "side you can also see what are the Fargate tasks that are running sorry so those these are the two clusters this",
    "start": "539980",
    "end": "546160"
  },
  {
    "text": "is the Fargate portion and they see two below so I'm going into my cluster which I created for this demo and currently",
    "start": "546160",
    "end": "555390"
  },
  {
    "text": "the green service does not have oh okay",
    "start": "555390",
    "end": "561870"
  },
  {
    "text": "so what I'm gonna do is I'm gonna take down my tasks just to kind of going",
    "start": "561870",
    "end": "575709"
  },
  {
    "text": "again and I'm going into my green service right now so my green service we",
    "start": "575709",
    "end": "581500"
  },
  {
    "text": "have obviously two services the blue does not have the blue does run the current application and the green if you",
    "start": "581500",
    "end": "589630"
  },
  {
    "text": "look at a tasks the green does not have any running tasks at the moment so let's",
    "start": "589630",
    "end": "595690"
  },
  {
    "text": "go on and update that service manually this time to launch a new task of the new version and let's see how that",
    "start": "595690",
    "end": "602110"
  },
  {
    "text": "triggers the entire workflow that I have just shown you so I'm going to do an update service and I'm going to create",
    "start": "602110",
    "end": "608560"
  },
  {
    "text": "one task of that new service keep on all the other configurations for that",
    "start": "608560",
    "end": "614079"
  },
  {
    "text": "service as they were I'm not changing anything in the service definition and let's do an update service so now if I'm",
    "start": "614079",
    "end": "622839"
  },
  {
    "text": "going back to my tasks you should see a new task running pretty soon it hasn't",
    "start": "622839",
    "end": "628720"
  },
  {
    "text": "happened yet for now I'm going to show you the route 53 parts this is actually",
    "start": "628720",
    "end": "634089"
  },
  {
    "text": "the record set of my DNS which is called con 356 demo and it has to a records",
    "start": "634089",
    "end": "641110"
  },
  {
    "text": "each of them pointing to another alb and if you look at the weights currently",
    "start": "641110",
    "end": "646649"
  },
  {
    "text": "100% of traffic is going to the blue and 0% to the green I'm going to use a",
    "start": "646649",
    "end": "652690"
  },
  {
    "text": "testing application called flat IO so flare IO is an application that allows you to use a grid of servers that can",
    "start": "652690",
    "end": "660910"
  },
  {
    "text": "actually load traffic into your application and so you can test that so I have a grid of",
    "start": "660910",
    "end": "666210"
  },
  {
    "text": "ten nodes that are currently running and I'm gonna just launch a new test using",
    "start": "666210",
    "end": "671430"
  },
  {
    "text": "that grid so until that starts playing let's see what happened to my ECS",
    "start": "671430",
    "end": "677580"
  },
  {
    "text": "service so now as you can see my ECS",
    "start": "677580",
    "end": "682589"
  },
  {
    "text": "service was my new easiest task was launched and so I'm going to go to my",
    "start": "682589",
    "end": "687899"
  },
  {
    "text": "step function console and if I'm going into the step state machine which I created let's see what I can see there",
    "start": "687899",
    "end": "694440"
  },
  {
    "text": "so you can see that already a new state machine has been initiated and it's currently running let's see",
    "start": "694440",
    "end": "700800"
  },
  {
    "text": "what it is right now so currently this state machine has already taken the",
    "start": "700800",
    "end": "707279"
  },
  {
    "text": "first step of changing 10% of traffic to go to that green service and now it's",
    "start": "707279",
    "end": "713040"
  },
  {
    "text": "waiting for 60 seconds let's go to the route 53 and see if that actually has",
    "start": "713040",
    "end": "718380"
  },
  {
    "text": "fall through so yeah now you can see i have a 20 and 90 to 10 ratio let's see",
    "start": "718380",
    "end": "726899"
  },
  {
    "text": "what I have with that flat service so currently as you can see I have a few",
    "start": "726899",
    "end": "733800"
  },
  {
    "text": "requests coming for the green service and few requests coming from the blue and let's see what happens over time so",
    "start": "733800",
    "end": "744180"
  },
  {
    "text": "in terms of requests per minute right now I have 47 requests per minute or 47k",
    "start": "744180",
    "end": "750630"
  },
  {
    "text": "requests per minute of the blue and 41 to the green so you can see the traffic",
    "start": "750630",
    "end": "756600"
  },
  {
    "text": "is definitely starting to shift now take into account that it does take some time for the DNS propagation to take into",
    "start": "756600",
    "end": "763620"
  },
  {
    "text": "effect so if in the route 53 configuration I change to a 90 and a 10 or a 50 and a 50 that will take a few",
    "start": "763620",
    "end": "770820"
  },
  {
    "text": "seconds or one minute or so to kind of propagate for you to actually see that in motion the reason why I'm using this",
    "start": "770820",
    "end": "778230"
  },
  {
    "text": "tool and not just a browser is because the browser would just cash whatever DNS response it would get and so I wouldn't",
    "start": "778230",
    "end": "785250"
  },
  {
    "text": "be able to kind of show you that traffic split of that blue and the green service",
    "start": "785250",
    "end": "792589"
  },
  {
    "text": "so if I'm refreshing that and I'm going back to my step function",
    "start": "792680",
    "end": "797890"
  },
  {
    "text": "now let me zoom back out so we can see where we are so we already took that last piece of a",
    "start": "797890",
    "end": "804020"
  },
  {
    "text": "hundred percent and it kind of finished migrating the full traffic because health checks went fine so let's see",
    "start": "804020",
    "end": "811310"
  },
  {
    "text": "that that actually is the case yep so",
    "start": "811310",
    "end": "816500"
  },
  {
    "text": "you can see that right now 100 percent of traffic is going to route 53 and let's refresh our floods",
    "start": "816500",
    "end": "824410"
  },
  {
    "text": "so you can definitely see the weight start starting to change and if I'm",
    "start": "832490",
    "end": "837590"
  },
  {
    "text": "going to launch so that flood is still in progress but if we give it a few seconds we will",
    "start": "837590",
    "end": "842930"
  },
  {
    "text": "be able to see that the traffic weights starting to change towards the green from the blue so let's go into the green",
    "start": "842930",
    "end": "850490"
  },
  {
    "text": "just to see what happens and as you can see that the Kohl's distribution if you look at the green area definitely",
    "start": "850490",
    "end": "857360"
  },
  {
    "text": "started hitting the green significantly or almost 100% over the last few seconds",
    "start": "857360",
    "end": "863690"
  },
  {
    "text": "and similarly if you look at the blue you will see the same so this is kind of",
    "start": "863690",
    "end": "874550"
  },
  {
    "text": "one example of how you can use canary deployments running with ECS by using",
    "start": "874550",
    "end": "880190"
  },
  {
    "text": "the rest of the AWS platform to form that architecture that allows you to have that now that's not the only way to",
    "start": "880190",
    "end": "886490"
  },
  {
    "text": "do that you can use al bees without route 53 and you can use target groups in al bees to get that so there are a",
    "start": "886490",
    "end": "893870"
  },
  {
    "text": "lot of ways but this is just kind of an example to show you how that can be achieved",
    "start": "893870",
    "end": "898900"
  },
  {
    "text": "how about significant cost savings anybody interested know so many",
    "start": "898900",
    "end": "907790"
  },
  {
    "text": "customers that we have and Francisca will talk about it in a couple of minutes have been using spot",
    "start": "907790",
    "end": "914020"
  },
  {
    "text": "significantly to kind of cut down the costs when running especially",
    "start": "914020",
    "end": "919150"
  },
  {
    "text": "large-scale workloads but what I'm going to show you now is another reference architecture that it's unique in a way",
    "start": "919150",
    "end": "927740"
  },
  {
    "text": "that allows you to have a service that is using spot as the underlying cluster",
    "start": "927740",
    "end": "933200"
  },
  {
    "text": "but at the same time it also allows traffic to immediately start routing to",
    "start": "933200",
    "end": "938840"
  },
  {
    "text": "an on-demand instance in case for some reason we needed that spot capacity back",
    "start": "938840",
    "end": "944150"
  },
  {
    "text": "and the spot instances were terminated the basic idea here is pretty simple and",
    "start": "944150",
    "end": "950450"
  },
  {
    "text": "you can look at all the details as well in our github page and if you scan that QR code again and it's based on a",
    "start": "950450",
    "end": "958330"
  },
  {
    "text": "ability to have two different ECS clusters one cluster uses spot fleets as",
    "start": "958330",
    "end": "964490"
  },
  {
    "text": "the underlying interest and the other one is using auto-scaling groups which use on-demand instances as",
    "start": "964490",
    "end": "971309"
  },
  {
    "text": "the underlying infrastructure both of this cluster have auto scaling metrics",
    "start": "971309",
    "end": "976379"
  },
  {
    "text": "to be able to spin up and down more instances as the CPU load on the system",
    "start": "976379",
    "end": "982459"
  },
  {
    "text": "increases or drop a few if the load decreases but the main thing we have",
    "start": "982459",
    "end": "988709"
  },
  {
    "text": "here is you will deploy the same easier service that you have twice once on that",
    "start": "988709",
    "end": "995069"
  },
  {
    "text": "on-demand cluster and the other one on the spot cluster so what you will do is",
    "start": "995069",
    "end": "1001189"
  },
  {
    "text": "you will register those two services into the same target group in your",
    "start": "1001189",
    "end": "1006889"
  },
  {
    "text": "application load balancer your alb and so if you do that and for example you",
    "start": "1006889",
    "end": "1012139"
  },
  {
    "text": "have two tasks running from the on the on-demand and eight tasks that are running on the spot then you have ten",
    "start": "1012139",
    "end": "1019399"
  },
  {
    "text": "tasks that now alb will seamlessly route your traffic to now if something happens and for some",
    "start": "1019399",
    "end": "1026720"
  },
  {
    "text": "reason you were left without spot capacity which is highly unlikely but just in case you still have two tasks",
    "start": "1026720",
    "end": "1034699"
  },
  {
    "text": "that are running and serving the critical path of your applications as you can as you are recovering your spot",
    "start": "1034699",
    "end": "1041418"
  },
  {
    "text": "capacity in the background and you know one of the reasons or a few of the",
    "start": "1041419",
    "end": "1047480"
  },
  {
    "text": "reasons why customers use spot especially with ECS is first of all ECS",
    "start": "1047480",
    "end": "1052789"
  },
  {
    "text": "is integrated with spot fleets so you can actually use a spot fleet to create your ECS cluster not only that if one of",
    "start": "1052789",
    "end": "1061370"
  },
  {
    "text": "your instances on spot gets the spot termination notice then ECS will take",
    "start": "1061370",
    "end": "1066559"
  },
  {
    "text": "that instance into what we call a draining mode which means no further containers will get scheduled to run on",
    "start": "1066559",
    "end": "1074059"
  },
  {
    "text": "that instance starting that point and it will start sending termination signals",
    "start": "1074059",
    "end": "1079909"
  },
  {
    "text": "to the running task if any on that node to have them gracefully shut down before",
    "start": "1079909",
    "end": "1086419"
  },
  {
    "text": "those two minute interval is finished and the spot goes down so it's",
    "start": "1086419",
    "end": "1091520"
  },
  {
    "text": "integrated that way and also one of the characteristics of a spot fleet is being",
    "start": "1091520",
    "end": "1096980"
  },
  {
    "text": "able to diversify that means that you can use different types of",
    "start": "1096980",
    "end": "1102140"
  },
  {
    "text": "instances and so give spot fleet the ability to bid on different types so if",
    "start": "1102140",
    "end": "1108980"
  },
  {
    "text": "one instance types price went up you can this possibly it will be able to bid on",
    "start": "1108980",
    "end": "1114260"
  },
  {
    "text": "another instance type and so to get you the right capacity back so the more",
    "start": "1114260",
    "end": "1119600"
  },
  {
    "text": "instances you give it as an option and the more availability zones you give it as a configuration better chances are",
    "start": "1119600",
    "end": "1126020"
  },
  {
    "text": "better chances are it will be able to give you that right capacity at the right price and as you probably know the",
    "start": "1126020",
    "end": "1134090"
  },
  {
    "text": "easiest clusters are heterogeneous so you can use any instance types when you're working with ECS for the",
    "start": "1134090",
    "end": "1140240"
  },
  {
    "text": "underlying cluster so that makes it a really good suitable workload to use",
    "start": "1140240",
    "end": "1145490"
  },
  {
    "text": "spot for when running and you know when you are running on ECS often cases you",
    "start": "1145490",
    "end": "1151700"
  },
  {
    "text": "don't really have to have a specific instance types because you get abstracted by a cluster which actually",
    "start": "1151700",
    "end": "1158870"
  },
  {
    "text": "just wants to have CPU and memory to run your containers on so whether you're",
    "start": "1158870",
    "end": "1164480"
  },
  {
    "text": "using c for excels or m for double excels for ECS it does not matter that",
    "start": "1164480",
    "end": "1170929"
  },
  {
    "text": "much what matters is what's your application primitive requesting in",
    "start": "1170929",
    "end": "1176150"
  },
  {
    "text": "terms of capacity how many cpu cores your application needs and how much memory your",
    "start": "1176150",
    "end": "1181640"
  },
  {
    "text": "application needs so for all those reasons we find that a lot of customers like matte box have been using spot to",
    "start": "1181640",
    "end": "1190429"
  },
  {
    "text": "gain those cost benefits and matte box have been using a CSS scale for quite",
    "start": "1190429",
    "end": "1196010"
  },
  {
    "text": "some time now last year they have spoken at reinvent and have kind of elaborated",
    "start": "1196010",
    "end": "1201860"
  },
  {
    "text": "on their batch workloads and how to run them efficiently on ECS using something what they call watch bots so this year",
    "start": "1201860",
    "end": "1210230"
  },
  {
    "text": "they have grown in scale and it is my pleasure to hand it over to francisco",
    "start": "1210230",
    "end": "1215360"
  },
  {
    "text": "from mapbox who is going to walk you through some of the findings that they have running on our platform and ECS",
    "start": "1215360",
    "end": "1222860"
  },
  {
    "text": "[Applause]",
    "start": "1222860",
    "end": "1230659"
  },
  {
    "text": "so hi everyone my name is Francisco Schmidt I'm a platform engineer at map books and I'm really excited to be here",
    "start": "1230659",
    "end": "1238500"
  },
  {
    "text": "today to sort of continue the map book story from from what we talked about last year so if you ask 10 developers",
    "start": "1238500",
    "end": "1246799"
  },
  {
    "text": "sorry so map books is a mapping and location platform and we do beautiful",
    "start": "1246799",
    "end": "1251879"
  },
  {
    "text": "maps we have a geocoding and search product and we have a lot of different developer tools that you can use to use",
    "start": "1251879",
    "end": "1259830"
  },
  {
    "text": "maps and your services such as SDKs for iOS Android we even have a Unity SDK",
    "start": "1259830",
    "end": "1265769"
  },
  {
    "text": "that you can use to make games so what I",
    "start": "1265769",
    "end": "1272730"
  },
  {
    "text": "want to talk about today is the story of our migration to ECS over the last year and if you ask 10 different developers",
    "start": "1272730",
    "end": "1279929"
  },
  {
    "text": "why they want to migrate to a containerized infrastructure and chances are you get answers something like this",
    "start": "1279929",
    "end": "1286190"
  },
  {
    "text": "cost reduction that Yaniv mentioned faster scaling and developer",
    "start": "1286190",
    "end": "1292139"
  },
  {
    "text": "productivity and those are also the reasons that why we decided to migrate our infrastructure about a year ago but",
    "start": "1292139",
    "end": "1298919"
  },
  {
    "text": "now it's a year later and reflecting on that story we found a few benefits and advantages and tricks that we didn't",
    "start": "1298919",
    "end": "1305159"
  },
  {
    "text": "anticipate and I call those the non-obvious benefits and these are the stories that I want to share it with you",
    "start": "1305159",
    "end": "1311070"
  },
  {
    "text": "today and I hope that you can get some tools so take away in your toolbox at home both for how to run things on ECS",
    "start": "1311070",
    "end": "1318509"
  },
  {
    "text": "and how to sort of execute such a large system migration in your organization so",
    "start": "1318509",
    "end": "1325759"
  },
  {
    "text": "these are the teams and systems that we have at map box and we have teams for directions geocoding developer tools etc",
    "start": "1325759",
    "end": "1334039"
  },
  {
    "text": "additionally to that there's a platform team that I'm part of and the platform's team mission that map box is to empower",
    "start": "1334039",
    "end": "1341370"
  },
  {
    "text": "the other teams to run their services on AWS successfully and to we empower those",
    "start": "1341370",
    "end": "1347309"
  },
  {
    "text": "teams by also helping them with monitoring and infrastructure set up",
    "start": "1347309",
    "end": "1353580"
  },
  {
    "text": "cost efficiency and Incident Response and it was the platform's teams job and",
    "start": "1353580",
    "end": "1359720"
  },
  {
    "text": "mission to really spearhead this ECS migration over the last year and that kind of influenced a lot of the",
    "start": "1359720",
    "end": "1365640"
  },
  {
    "text": "decisions that we made so I just want you to keep that in mind throughout my talk so Bri run kind of two different",
    "start": "1365640",
    "end": "1371940"
  },
  {
    "text": "types of jobs and services at map box we have processing jobs and these are kind of batch processing jobs and API",
    "start": "1371940",
    "end": "1379590"
  },
  {
    "text": "services an example of processing jobs that Ari Brown is we have a data pipeline that gets input data from",
    "start": "1379590",
    "end": "1385500"
  },
  {
    "text": "OpenStreetMap and does some processing on this data and then uses it to run the",
    "start": "1385500",
    "end": "1391020"
  },
  {
    "text": "beautiful vector tiles that we serve and API services we have API services for",
    "start": "1391020",
    "end": "1397320"
  },
  {
    "text": "directions and for example an API map server that responds with a vector child",
    "start": "1397320",
    "end": "1402360"
  },
  {
    "text": "when you give it a certain set of coordinates and a style of the map that you want let's look at our traffic and",
    "start": "1402360",
    "end": "1409290"
  },
  {
    "text": "scale so on the processing side we run up to 70,000 tasks in one hour on one",
    "start": "1409290",
    "end": "1415230"
  },
  {
    "text": "cluster so those could be tasks that are long-running for hours or even days and also short tasks that only run a matter",
    "start": "1415230",
    "end": "1421590"
  },
  {
    "text": "of minutes and seconds this corresponds to about 200 Amazon ec2 container",
    "start": "1421590",
    "end": "1428280"
  },
  {
    "text": "instances at peak and our processing clusters are running in two different regions in the US on the API traffic",
    "start": "1428280",
    "end": "1435300"
  },
  {
    "text": "side the requirements are different and our clusters look a bit differently so there we run about 500 to 1500",
    "start": "1435300",
    "end": "1442190"
  },
  {
    "text": "containers or tasks at peak and this corresponds to 40 to 200 ec2 s and our",
    "start": "1442190",
    "end": "1449280"
  },
  {
    "text": "API traffic's our API instances are co-located in seven different AWS",
    "start": "1449280",
    "end": "1455400"
  },
  {
    "text": "regions which is pretty cool so we run services in different places in the US but also in Ireland and in asia-pacific",
    "start": "1455400",
    "end": "1462900"
  },
  {
    "text": "like in Singapore so about a year ago we",
    "start": "1462900",
    "end": "1468300"
  },
  {
    "text": "decided to migrate our entire background infrastructure to ecs and that was quite a big journey and project we migrated",
    "start": "1468300",
    "end": "1476370"
  },
  {
    "text": "hundreds of different repositories to ECS and there was a lot of works and documentation going into this so we",
    "start": "1476370",
    "end": "1486180"
  },
  {
    "text": "migrated for better cost savings we knew that running on ECS simply we'd be able to run multiple",
    "start": "1486180",
    "end": "1491979"
  },
  {
    "text": "tasks on one host therefore dramatically cutting down the number of ec2 instances we were running and this assumption",
    "start": "1491979",
    "end": "1498489"
  },
  {
    "text": "turned out to be true also faster and more flexible scaling so if you're a",
    "start": "1498489",
    "end": "1503549"
  },
  {
    "text": "start-up that's sort of responding to live user traffic it's super important that you can scale up your",
    "start": "1503549",
    "end": "1509139"
  },
  {
    "text": "infrastructure at any given time as quickly as possible and we know both",
    "start": "1509139",
    "end": "1514839"
  },
  {
    "text": "docker and containers we could start up new tasks in a matter of seconds as opposed to them kind of minute ballpark",
    "start": "1514839",
    "end": "1520359"
  },
  {
    "text": "we're used to with ec2 instances and finally increase developer productivity",
    "start": "1520359",
    "end": "1526949"
  },
  {
    "text": "some stocker launched I think in 2013 has become really obvious to most people that docker is really a great tool to",
    "start": "1526949",
    "end": "1533409"
  },
  {
    "text": "increase the productivity of your developers by decreasing iteration cycles between going from development",
    "start": "1533409",
    "end": "1540009"
  },
  {
    "text": "environments to production like and production environments and so these are the obvious benefits but like I said I",
    "start": "1540009",
    "end": "1547989"
  },
  {
    "text": "want to focus on and you've probably heard about the obvious benefits a lot throughout this week so I want to share",
    "start": "1547989",
    "end": "1553689"
  },
  {
    "text": "some of the non-obvious things that I found so open source private infrastructure consistency across the",
    "start": "1553689",
    "end": "1559689"
  },
  {
    "text": "organization cost monitoring tools that we built and finally and most importantly empowering teams and I'm",
    "start": "1559689",
    "end": "1565209"
  },
  {
    "text": "going to go into each of these in more detail in a second so I want you to kind",
    "start": "1565209",
    "end": "1570519"
  },
  {
    "text": "of have some things to take away from today even if you're just thinking about migrating to ECS maybe you're in the",
    "start": "1570519",
    "end": "1576969"
  },
  {
    "text": "middle of like transferring your systems you're already running on ECS successfully or you're running your",
    "start": "1576969",
    "end": "1582369"
  },
  {
    "text": "systems on kubernetes or some other container is infrastructure all right",
    "start": "1582369",
    "end": "1587679"
  },
  {
    "text": "let's start out with the first one open source and private infrastructure so you imagine your platform engineer or SRE or",
    "start": "1587679",
    "end": "1595449"
  },
  {
    "text": "whatever it's called at your organization and a product developer asked to you how can I run some code on",
    "start": "1595449",
    "end": "1601269"
  },
  {
    "text": "a server I'm building this new cool feature and I just want to get it up in the cloud and and kind of see what",
    "start": "1601269",
    "end": "1606369"
  },
  {
    "text": "happens and this is the scenario that we get a lot at my books so the ec2 story",
    "start": "1606369",
    "end": "1611739"
  },
  {
    "text": "for us looks something like this the person had to provision an ec2 put up the ec2 install a bunch of requirements",
    "start": "1611739",
    "end": "1618999"
  },
  {
    "text": "set up their know Python what whatever environment they're running and then be the coton to the ec2 probably with",
    "start": "1618999",
    "end": "1626350"
  },
  {
    "text": "some kind of copy or get script and then run the application you probably know",
    "start": "1626350",
    "end": "1632350"
  },
  {
    "text": "what's coming next for ACS the story for us for our product developers is a lot further than this basically all they're",
    "start": "1632350",
    "end": "1639550"
  },
  {
    "text": "doing is a git push and then we have a continuous integration system called eesti as conics that builds a docker",
    "start": "1639550",
    "end": "1645670"
  },
  {
    "text": "image and pushes it into our ECR repository and then it's pulled onto the",
    "start": "1645670",
    "end": "1651040"
  },
  {
    "text": "ec2 and from there they can run their containers so you can see here there's",
    "start": "1651040",
    "end": "1656920"
  },
  {
    "text": "kind of a big separation of concerns that the product developers have to think about it's a much easier focus on",
    "start": "1656920",
    "end": "1664030"
  },
  {
    "text": "just the actual active application development code as opposed to thinking",
    "start": "1664030",
    "end": "1669220"
  },
  {
    "text": "about all the infrastructure craft code that's kind of our part from engineers",
    "start": "1669220",
    "end": "1674380"
  },
  {
    "text": "job so one of the things that we did throughout this migration was to really",
    "start": "1674380",
    "end": "1680040"
  },
  {
    "text": "separate our infrastructure code from the application code and that was kind of a side by side effect of the way how",
    "start": "1680040",
    "end": "1687250"
  },
  {
    "text": "we were migrating our services and this gave us a few benefits number one like I",
    "start": "1687250",
    "end": "1692320"
  },
  {
    "text": "said our product developers don't need to worry about the infrastructure setup by booting AC twos or installing things",
    "start": "1692320",
    "end": "1698290"
  },
  {
    "text": "on there they're just pushing their code to github and then running containers and the docker setup is the same as on",
    "start": "1698290",
    "end": "1703720"
  },
  {
    "text": "your local machine and this allowed us to also consolidate our infrastructure script in in a better way which meant it",
    "start": "1703720",
    "end": "1710500"
  },
  {
    "text": "was easier to push out security fixes etc and there's another sort of unexpected side effect that we found",
    "start": "1710500",
    "end": "1716950"
  },
  {
    "text": "which is that we can now open source application code easier because removed removed all the sort of ec2 related",
    "start": "1716950",
    "end": "1724920"
  },
  {
    "text": "setup like configuration and key management etc from the application code",
    "start": "1724920",
    "end": "1731110"
  },
  {
    "text": "it was much easier to open source the application code I'm hoping that all of",
    "start": "1731110",
    "end": "1737740"
  },
  {
    "text": "you are thinking this but maybe some people are wondering like why do I care about open sourcing things so this is",
    "start": "1737740",
    "end": "1743290"
  },
  {
    "text": "map ups GL native it's one of our most popular open source repositories and you",
    "start": "1743290",
    "end": "1748450"
  },
  {
    "text": "can see there's a lot of people engaging with it on github and this is kind of the main reason reason why you want to",
    "start": "1748450",
    "end": "1755290"
  },
  {
    "text": "open source things and it's a great opportunity to exchange ideas and collaborate with the larger",
    "start": "1755290",
    "end": "1760990"
  },
  {
    "text": "communities and people are interested in the domain that you're working in and this has been super important for us I'm",
    "start": "1760990",
    "end": "1767670"
  },
  {
    "text": "also more eyes on code makes better code this goes not only for security things but also for things like documentation",
    "start": "1767670",
    "end": "1774580"
  },
  {
    "text": "and there are lots of people out there who are interested in contributing to open source and but maybe don't know",
    "start": "1774580",
    "end": "1780130"
  },
  {
    "text": "where to start so documentation is often a great sort of starter fix for people",
    "start": "1780130",
    "end": "1785410"
  },
  {
    "text": "who want to help out in your projects and get involved and 30 developer perks",
    "start": "1785410",
    "end": "1790990"
  },
  {
    "text": "if you're like me there are lots of engineers out there who really want to contribute to open source and help give",
    "start": "1790990",
    "end": "1798310"
  },
  {
    "text": "back to the projects they're working on and if you can make that a part of their job that's really good for making your",
    "start": "1798310",
    "end": "1804400"
  },
  {
    "text": "developers happy and for your organization alright so these are two",
    "start": "1804400",
    "end": "1810280"
  },
  {
    "text": "examples of ECS libraries that we've open source the first one is ICS conics and it's our CI tool to build docker",
    "start": "1810280",
    "end": "1817390"
  },
  {
    "text": "images from github commits and then push them into the amazon ECR container",
    "start": "1817390",
    "end": "1822850"
  },
  {
    "text": "repository and the second one is easiest watch blood which genève mentioned in",
    "start": "1822850",
    "end": "1828040"
  },
  {
    "text": "his presentation and it's our library for running processing tasks with the run task API on ECS so to summarize from",
    "start": "1828040",
    "end": "1837070"
  },
  {
    "text": "this section migrating to dcs helped us separate our infrastructure code from the core domain code which brought up",
    "start": "1837070",
    "end": "1842800"
  },
  {
    "text": "multiple benefits such as not having to worry so much about developers being",
    "start": "1842800",
    "end": "1848560"
  },
  {
    "text": "concerned with booting AC twos and touching infrastructure code but also allowed us to open-source more more code",
    "start": "1848560",
    "end": "1854470"
  },
  {
    "text": "which is great for multiple reasons okay um so that was number one number two was",
    "start": "1854470",
    "end": "1862030"
  },
  {
    "text": "consistency across the organization so when we started out wanting to do our",
    "start": "1862030",
    "end": "1868860"
  },
  {
    "text": "migration to ECS of course we sort of looked at each repository and started",
    "start": "1868860",
    "end": "1874240"
  },
  {
    "text": "the work in parallel and the first thing that we did as you do when you want to containerize an app is you know write a",
    "start": "1874240",
    "end": "1880930"
  },
  {
    "text": "docker file and then once that was done we were like writing some things that to make that docker file actually run on",
    "start": "1880930",
    "end": "1887590"
  },
  {
    "text": "ECS and very quickly we notice that we're writing kind of the same code over and over again so when that happens normally what",
    "start": "1887590",
    "end": "1894409"
  },
  {
    "text": "a developer does is to write a shared library that solves this problem and kind of shares that code that you're",
    "start": "1894409",
    "end": "1899989"
  },
  {
    "text": "writing over and over again um so we wrote a TS API which is a WS",
    "start": "1899989",
    "end": "1905869"
  },
  {
    "text": "CloudFormation helper library for setting up an EC s based HTTP stack",
    "start": "1905869",
    "end": "1911409"
  },
  {
    "text": "unfortunately this one is not open sourced yet but we hope to do so at some point so setting up this library for",
    "start": "1911409",
    "end": "1918109"
  },
  {
    "text": "sharing the way that we run API services on ECS was super useful for us and it",
    "start": "1918109",
    "end": "1924829"
  },
  {
    "text": "helped us firstly establish conventions and best practices across the way we're using ec2 ECS so whenever your team or",
    "start": "1924829",
    "end": "1931969"
  },
  {
    "text": "organization is switching to a new product or new way to do things it's really important to establish best",
    "start": "1931969",
    "end": "1938179"
  },
  {
    "text": "practices across your organization to kind of make sure that people are doing it in a similar way and that people are",
    "start": "1938179",
    "end": "1945409"
  },
  {
    "text": "have like conventions to adhere to and this is especially important when you're starting out with a new practice a new",
    "start": "1945409",
    "end": "1952099"
  },
  {
    "text": "products such as ACS was a year and a half ago where there just wasn't that many conventions across the industry yet",
    "start": "1952099",
    "end": "1960699"
  },
  {
    "text": "of course with any shared library it helps reduce copy paste functionalities and it's easier to pick up context in",
    "start": "1960699",
    "end": "1967549"
  },
  {
    "text": "unknown projects so I'm a platform engineer so I for example often respond",
    "start": "1967549",
    "end": "1973429"
  },
  {
    "text": "to incidents about our API services so having worked with an API Maps service",
    "start": "1973429",
    "end": "1979489"
  },
  {
    "text": "for example I it's very easy for me to jump into an API geocoding service even",
    "start": "1979489",
    "end": "1984769"
  },
  {
    "text": "though I might never have touched this project but because they're using the same base library it makes it much easier and this is I think the case for",
    "start": "1984769",
    "end": "1991759"
  },
  {
    "text": "many small organizations were because people come and go it might be necessary for an engineer to step into a new",
    "start": "1991759",
    "end": "1998239"
  },
  {
    "text": "project and when you can save time with contacts there it's super helpful so we",
    "start": "1998239",
    "end": "2005099"
  },
  {
    "text": "use confirmation very heavily to achieve consistency across the organization so",
    "start": "2005099",
    "end": "2011589"
  },
  {
    "text": "cloud formation is a way to have your configuration changes in in as as code",
    "start": "2011589",
    "end": "2017799"
  },
  {
    "text": "in your repositories so I think Norah Jones had this quote in her talk two days ago where she mentioned",
    "start": "2017799",
    "end": "2023870"
  },
  {
    "text": "conflict changes might be more dangerous to developers than code changes and this",
    "start": "2023870",
    "end": "2029690"
  },
  {
    "text": "is really true I think so it's super important to have conflict changes in in",
    "start": "2029690",
    "end": "2035059"
  },
  {
    "text": "some kind of version control and also having a version control there allows you to have kind of a space for",
    "start": "2035059",
    "end": "2041299"
  },
  {
    "text": "discussion about any changes and go back and look at what changes were made",
    "start": "2041299",
    "end": "2046600"
  },
  {
    "text": "reproducibility so of course if you have a CloudFormation template it's much easier to go in and copy a stack of",
    "start": "2046600",
    "end": "2055010"
  },
  {
    "text": "configuration as opposed to trying to reproduce a set of clicks that someone",
    "start": "2055010",
    "end": "2060080"
  },
  {
    "text": "made in the UI and we also do a standardized usage here so as you can see on this screenshot we have a cloud",
    "start": "2060080",
    "end": "2066648"
  },
  {
    "text": "formation folder in each of our repositories where we save the cloud",
    "start": "2066649",
    "end": "2071690"
  },
  {
    "text": "formation templates and so that's just a small thing to do but it really helps if you're trying to figure out what the",
    "start": "2071690",
    "end": "2077510"
  },
  {
    "text": "stack looks like just go to the cloud formation folder and you know it's gonna be there and we have this little tool",
    "start": "2077510",
    "end": "2085010"
  },
  {
    "text": "called cloud friend and it's also up in github and it makes our confirmation templates a bit easier you know like",
    "start": "2085010",
    "end": "2092210"
  },
  {
    "text": "working with huge JSON files can be kind of hard sometimes so there's just some like little helper functions that make",
    "start": "2092210",
    "end": "2098330"
  },
  {
    "text": "our lives easier okay so I mentioned incidence response as being a advantage",
    "start": "2098330",
    "end": "2105320"
  },
  {
    "text": "of having consistency across repositories and this has been the case for us migrating GCS - so we also use",
    "start": "2105320",
    "end": "2113510"
  },
  {
    "text": "confirmation to document our alarms so for example we have Cloud Roger alarms on things like high latency etc and so",
    "start": "2113510",
    "end": "2122030"
  },
  {
    "text": "we can use confirmation to see the version control there and have",
    "start": "2122030",
    "end": "2127460"
  },
  {
    "text": "reproducibility of our alarms - again we have standardized usage across",
    "start": "2127460",
    "end": "2132650"
  },
  {
    "text": "repository so every repository has an alarm start markdown file where all the alarms are described and documented um",
    "start": "2132650",
    "end": "2139390"
  },
  {
    "text": "and again like shared libraries help you standardize your use also an incident",
    "start": "2139390",
    "end": "2144560"
  },
  {
    "text": "response situation so often when you're responding to an incident it's kind of a stressful situation and you don't want",
    "start": "2144560",
    "end": "2150560"
  },
  {
    "text": "to be looking around for a documentation right so if you know where to look that's a really good starting point and",
    "start": "2150560",
    "end": "2156230"
  },
  {
    "text": "our yes API library also gives you access to some shared alarm things and that you're",
    "start": "2156230",
    "end": "2162099"
  },
  {
    "text": "gonna need in each repository anyway like alarming on arrow status codes so",
    "start": "2162099",
    "end": "2168339"
  },
  {
    "text": "you might be thinking like yeah shared libraries are great but it's how was that related to your migration to ECS",
    "start": "2168339",
    "end": "2174069"
  },
  {
    "text": "well I think in this case it was really a factor that migrating to ECS helped us",
    "start": "2174069",
    "end": "2179529"
  },
  {
    "text": "rethink the way we were running our systems and designing our code bases so",
    "start": "2179529",
    "end": "2184839"
  },
  {
    "text": "I just want to encourage you to when you're doing a system migration like this take a pause and rethink about how",
    "start": "2184839",
    "end": "2190599"
  },
  {
    "text": "you design your systems and how you setup your documentation etc because I think systems migrations like this",
    "start": "2190599",
    "end": "2196029"
  },
  {
    "text": "parade really great opportunities to do so all right cause clarity so we were",
    "start": "2196029",
    "end": "2204249"
  },
  {
    "text": "running on spot instances even before migrating to ECS however only since",
    "start": "2204249",
    "end": "2209829"
  },
  {
    "text": "running on ECS full-time let's say we've been able to leverage spot by default so",
    "start": "2209829",
    "end": "2217179"
  },
  {
    "text": "by spot by default I mean any time basically a new instances launched it's the spot instance and we only fall back",
    "start": "2217179",
    "end": "2222939"
  },
  {
    "text": "to on-demand if there's a spot disruption and we really need more capacity so how did being on ECS make it",
    "start": "2222939",
    "end": "2230559"
  },
  {
    "text": "easier for us to run on spots so on one side of course previously with ec2 we're",
    "start": "2230559",
    "end": "2237219"
  },
  {
    "text": "really relying on certain instance types so for example our API Maps service was",
    "start": "2237219",
    "end": "2243549"
  },
  {
    "text": "only running on a specific let's say r3 x-large instance type with ECS we can",
    "start": "2243549",
    "end": "2249699"
  },
  {
    "text": "abstract this need and only document let's say our AP my Maps container needs",
    "start": "2249699",
    "end": "2254829"
  },
  {
    "text": "this much memory in this much CPU and therefore on ECS we're kind of abstracted away from the underlying",
    "start": "2254829",
    "end": "2261059"
  },
  {
    "text": "incident instance type which makes it much easier to have a very diverse",
    "start": "2261059",
    "end": "2267669"
  },
  {
    "text": "cluster which again helps you to prevent spot disruptions so that part is about",
    "start": "2267669",
    "end": "2274299"
  },
  {
    "text": "preventing spot disruptions but when a spot disruption happens it's also easier",
    "start": "2274299",
    "end": "2280779"
  },
  {
    "text": "to then mitigate this disruption because we have faster tasks start up on ECS",
    "start": "2280779",
    "end": "2285999"
  },
  {
    "text": "like I said at the beginning if there's capacity starting a new task as a matter of sec it's much easier to mitigate losing some",
    "start": "2285999",
    "end": "2293800"
  },
  {
    "text": "capacity because you can just spin up new tasks in a matter of seconds as opposed to spinning a new ICI tooth in",
    "start": "2293800",
    "end": "2301750"
  },
  {
    "text": "the two-minute warning that spot gives you it's possible but it's kind of hard and not not necessarily a reliable and a",
    "start": "2301750",
    "end": "2308440"
  },
  {
    "text": "production high scale environment and we offer we've also done some work to",
    "start": "2308440",
    "end": "2313950"
  },
  {
    "text": "diversify our task placement so we use task placement strategies on ECS to",
    "start": "2313950",
    "end": "2320230"
  },
  {
    "text": "place our tasks across different spot pools and availability zone so that's",
    "start": "2320230",
    "end": "2325900"
  },
  {
    "text": "the spot by default part of cost clarity but actually what I want to talk about is another thing as well so by cost",
    "start": "2325900",
    "end": "2333070"
  },
  {
    "text": "clarity I mean inside and cost spending on a per service per team basis so what",
    "start": "2333070",
    "end": "2339340"
  },
  {
    "text": "does cost monitoring look like on ec2 it's actually kind of simple so on easy",
    "start": "2339340",
    "end": "2344920"
  },
  {
    "text": "to use if you want to calculate the total cost of a service you probably do",
    "start": "2344920",
    "end": "2349990"
  },
  {
    "text": "something like this you get the total number of TC twos that you're running you multiply it by the instance type",
    "start": "2349990",
    "end": "2356050"
  },
  {
    "text": "cost and then you multiply that by the number of hours or duration total duration that you're running those EC",
    "start": "2356050",
    "end": "2362650"
  },
  {
    "text": "twos so for example if I ran three API Maps EC twos and they're costing me",
    "start": "2362650",
    "end": "2367810"
  },
  {
    "text": "sixteen dollars an hour and I ran this workload for ten hours I'm gonna get $480 and this is sort of a simple",
    "start": "2367810",
    "end": "2375310"
  },
  {
    "text": "equation to think through so this was kind of the point that we were at before",
    "start": "2375310",
    "end": "2380410"
  },
  {
    "text": "migrating to EC es so when we migrated of course we also wanted to keep this",
    "start": "2380410",
    "end": "2386320"
  },
  {
    "text": "kind of level of insight on how much each of our services was costing but it",
    "start": "2386320",
    "end": "2391510"
  },
  {
    "text": "turned out actually cost monitoring on e CS is a bit more complicated if you just",
    "start": "2391510",
    "end": "2396609"
  },
  {
    "text": "want to think about what's the cost of my service well it's not so easy because each instance is running multiple tasks",
    "start": "2396609",
    "end": "2404170"
  },
  {
    "text": "it's kind of really difficult to know which how much a a service is costing",
    "start": "2404170",
    "end": "2411359"
  },
  {
    "text": "also because different services use up different levels of memory and CPU so",
    "start": "2411359",
    "end": "2417160"
  },
  {
    "text": "you can't just divide to total instance cost by the number of tests you're running because one task might actually",
    "start": "2417160",
    "end": "2422830"
  },
  {
    "text": "be costing a lot more than other one and so our cost platform engineers came up with a solution that",
    "start": "2422830",
    "end": "2428950"
  },
  {
    "text": "looks something like this the first step is to find all the tasks of a service so",
    "start": "2428950",
    "end": "2435340"
  },
  {
    "text": "whenever we launched a new task we tag it with team and category attributes um",
    "start": "2435340",
    "end": "2440530"
  },
  {
    "text": "unfortunately there's no native task tagging yet so we use the put attribute",
    "start": "2440530",
    "end": "2445720"
  },
  {
    "text": "functions on the family attribute so for example when I launch a new task of a",
    "start": "2445720",
    "end": "2451300"
  },
  {
    "text": "project I'm working on I'm tagging it with the platform team attribute because the cost of that task is going to be",
    "start": "2451300",
    "end": "2456550"
  },
  {
    "text": "coming back to my team and the category is for example research and development for staging environments and cops the",
    "start": "2456550",
    "end": "2463930"
  },
  {
    "text": "cost of goods sold for production environments we then have some algorithms to calculate the total cost",
    "start": "2463930",
    "end": "2470470"
  },
  {
    "text": "of a task through CPU reservations memory reservations and the duration this task is running so it's really",
    "start": "2470470",
    "end": "2476770"
  },
  {
    "text": "important that you're looking at task reservations as opposed to utilization because if a task is reserving a certain",
    "start": "2476770",
    "end": "2484390"
  },
  {
    "text": "number of CPU and that's the actual usage that it's blocking from other tasks so while if you're reserving too",
    "start": "2484390",
    "end": "2490870"
  },
  {
    "text": "much and you're still using up that space on the instance so we use CPU",
    "start": "2490870",
    "end": "2497020"
  },
  {
    "text": "reservation and memory reservation to calculate how much space you're using on the instance we then aggregate all this",
    "start": "2497020",
    "end": "2503530"
  },
  {
    "text": "usage data in Amazon escena and finally resurfaced the cost in true info back to",
    "start": "2503530",
    "end": "2508960"
  },
  {
    "text": "the teams who are spending money and through a variety of human friendly",
    "start": "2508960",
    "end": "2514060"
  },
  {
    "text": "communication tools that I get sub issues and slack BOTS and so my colleague Brennan actually gave a full",
    "start": "2514060",
    "end": "2519610"
  },
  {
    "text": "length talk on this cost monitoring pipeline we built on Tuesday and the card which track def 33 if you want to",
    "start": "2519610",
    "end": "2526360"
  },
  {
    "text": "check that out later and so the cost information that's coming up looks something like this in a",
    "start": "2526360",
    "end": "2531910"
  },
  {
    "text": "slack but you get the number of clusters and the dollar cost per team on a",
    "start": "2531910",
    "end": "2537040"
  },
  {
    "text": "service and it's been a really cool tool to empower teams to know how much their",
    "start": "2537040",
    "end": "2542920"
  },
  {
    "text": "services are spending rather than having this bottleneck of only the platform team and the finance team knowing about",
    "start": "2542920",
    "end": "2548380"
  },
  {
    "text": "ECM Amazon cost so to summarize from this section number",
    "start": "2548380",
    "end": "2553930"
  },
  {
    "text": "one we save costs because we now run on spot by default on ECS since our ECS migration and",
    "start": "2553930",
    "end": "2560289"
  },
  {
    "text": "number two we gain cost clarity through custom contouring pipelines we've built so even though koz monitoring initially",
    "start": "2560289",
    "end": "2567700"
  },
  {
    "text": "turned out harder than we expected on ECS through this challenge that we hit and through the tools that we've built",
    "start": "2567700",
    "end": "2573309"
  },
  {
    "text": "to solve it we now have much better cost clarity inside running on ECS alright",
    "start": "2573309",
    "end": "2582400"
  },
  {
    "text": "this brings me to the last point empowering teams so actually a lot of the things that I talked about today for",
    "start": "2582400",
    "end": "2589270"
  },
  {
    "text": "examples of how the platform team at map box has found it easier to empower our service developer teams through our",
    "start": "2589270",
    "end": "2595930"
  },
  {
    "text": "migration to ECS so they have better tools to launch code faster now it's",
    "start": "2595930",
    "end": "2602920"
  },
  {
    "text": "easier for them to get started with a new feature and also the cost monitoring",
    "start": "2602920",
    "end": "2608109"
  },
  {
    "text": "tools that we built have allowed them to have more ownership over their own custom spendings and so that's really",
    "start": "2608109",
    "end": "2614470"
  },
  {
    "text": "exciting it's for me like one of the best reasons of having our migration to the containerized infrastructure so",
    "start": "2614470",
    "end": "2621069"
  },
  {
    "text": "hopefully at this point you're thinking something like this I'm sold like how can I introduce a large system I shift",
    "start": "2621069",
    "end": "2627819"
  },
  {
    "text": "or migration in my organization and I have a few tips for you on how we did",
    "start": "2627819",
    "end": "2632950"
  },
  {
    "text": "this over the last year and maybe that you can apply as well number one is make",
    "start": "2632950",
    "end": "2638770"
  },
  {
    "text": "the benefits obvious to all and so it's really important that the kind of benefits that you're seeing are shared",
    "start": "2638770",
    "end": "2644470"
  },
  {
    "text": "to the other teams as well we did a variety of different communication tools to do this we did fa Q's we wrote",
    "start": "2644470",
    "end": "2651819"
  },
  {
    "text": "internal blog posts etc and so whatever works best in your organization is really important related to this is be",
    "start": "2651819",
    "end": "2661000"
  },
  {
    "text": "empathetic to other teams needs and perspectives so you as a platform engineer might be really excited about",
    "start": "2661000",
    "end": "2666579"
  },
  {
    "text": "the cost savings on AWS that you're anticipating um however chances are that the product service teams you're talking",
    "start": "2666579",
    "end": "2673089"
  },
  {
    "text": "about are much more interested in launching this feature they've been working on for the last six months so",
    "start": "2673089",
    "end": "2680099"
  },
  {
    "text": "for them it might be more applicable to lead with the developer productivity",
    "start": "2680099",
    "end": "2685390"
  },
  {
    "text": "benefits that you're seeing so it's really important in this case to think about the audience you're talking to",
    "start": "2685390",
    "end": "2691970"
  },
  {
    "text": "and use that benefit appropriately",
    "start": "2691970",
    "end": "2696220"
  },
  {
    "text": "introduced hams plans timely to get the work on other people's roadmap so like I",
    "start": "2697240",
    "end": "2702650"
  },
  {
    "text": "said we started with our ECS migration over a year ago and at the start of 2017 we wrote this really long big checklist",
    "start": "2702650",
    "end": "2709220"
  },
  {
    "text": "to get this migration across all the other teams and we had three months six",
    "start": "2709220",
    "end": "2714350"
  },
  {
    "text": "months and nine months check-in points with each team to see how they were doing with their ECS migration it's",
    "start": "2714350",
    "end": "2720650"
  },
  {
    "text": "really important to kind of especially with the project of this scale have some idea of the road map and get this work",
    "start": "2720650",
    "end": "2726890"
  },
  {
    "text": "on other people's road maps early and incorporate fun in migration so this",
    "start": "2726890",
    "end": "2733550"
  },
  {
    "text": "might vary on sort of the way that your business culture is but I think it's really important especially with the",
    "start": "2733550",
    "end": "2739520"
  },
  {
    "text": "huge factory like this that can take up to a year to have some element in fun and motivation so at map box we actually",
    "start": "2739520",
    "end": "2746210"
  },
  {
    "text": "ended up printing stickers and posters for our teams that got them really excited about migrating to ECS and",
    "start": "2746210",
    "end": "2752440"
  },
  {
    "text": "joining in so this worked really well for us and the last point is offer",
    "start": "2752440",
    "end": "2759080"
  },
  {
    "text": "deliberate time and support so if your team has any set up anything like this",
    "start": "2759080",
    "end": "2765890"
  },
  {
    "text": "where there's one team sort of spearheading the migration for others it's really important to think about how",
    "start": "2765890",
    "end": "2771350"
  },
  {
    "text": "you're going to offer support for other teams so we did a variety of different",
    "start": "2771350",
    "end": "2776830"
  },
  {
    "text": "support areas let's say so we decided to offer a weekly office hours where other",
    "start": "2776830",
    "end": "2782570"
  },
  {
    "text": "teams could come in and check within with us about how the EECS migration was doing we also offered what we call the",
    "start": "2782570",
    "end": "2790130"
  },
  {
    "text": "platform Poppins which is something like a person that is your personal migration",
    "start": "2790130",
    "end": "2795500"
  },
  {
    "text": "assistant that would review your polar quests and do things like check in with",
    "start": "2795500",
    "end": "2800900"
  },
  {
    "text": "you every once in a while to see if they could help with your ECS migration we also deliberately thought about what",
    "start": "2800900",
    "end": "2806900"
  },
  {
    "text": "time and support we weren't offered we weren't able to offer and that's something that's also really important",
    "start": "2806900",
    "end": "2812840"
  },
  {
    "text": "when thinking about time and support you want to offer think about things that you can't do so for example we're happy",
    "start": "2812840",
    "end": "2818810"
  },
  {
    "text": "to review pull requests but we just didn't have the time and bandwidth to actually do all the migrations for each",
    "start": "2818810",
    "end": "2824510"
  },
  {
    "text": "repository or self and thinking about these boundaries and how to set them early is also super",
    "start": "2824510",
    "end": "2829920"
  },
  {
    "text": "important all right so we talked about a few of the non-obvious benefits that",
    "start": "2829920",
    "end": "2836789"
  },
  {
    "text": "MapBox found in our migration to ECS over the last year so let's check in now we're at the end of 2017 our service is",
    "start": "2836789",
    "end": "2844589"
  },
  {
    "text": "running on about 95% on ECS and the remaining 5% are mostly services located",
    "start": "2844589",
    "end": "2851219"
  },
  {
    "text": "in China where ECS was only recently announced we're also running about 95 to 100% at times of our services on spot so",
    "start": "2851219",
    "end": "2860369"
  },
  {
    "text": "we're hoping to continue this journey on Amazon ECS check out all new features that were announced this week and",
    "start": "2860369",
    "end": "2866989"
  },
  {
    "text": "further develop our scale and Kosmo mentoring tools that we built yeah so",
    "start": "2866989",
    "end": "2873119"
  },
  {
    "text": "this is the end of my session thank you all so much it's been really fun and I'll be around downstairs to answer any",
    "start": "2873119",
    "end": "2879329"
  },
  {
    "text": "questions thank you [Applause]",
    "start": "2879329",
    "end": "2889219"
  }
]