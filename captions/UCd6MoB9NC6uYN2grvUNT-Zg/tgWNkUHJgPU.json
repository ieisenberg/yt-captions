[
  {
    "text": "hi thanks for joining my name is Anthony",
    "start": "4000",
    "end": "6080"
  },
  {
    "text": "and I'm a Solutions architect at AWS and",
    "start": "6080",
    "end": "8760"
  },
  {
    "text": "today I'm going to be going through",
    "start": "8760",
    "end": "9880"
  },
  {
    "text": "Dynamo DB Global tables in terms of what",
    "start": "9880",
    "end": "12400"
  },
  {
    "text": "they are when to use them and how you",
    "start": "12400",
    "end": "14599"
  },
  {
    "text": "can Implement them using best",
    "start": "14599",
    "end": "17439"
  },
  {
    "text": "practices before we go into the details",
    "start": "17439",
    "end": "19720"
  },
  {
    "text": "of global tables let's first set some",
    "start": "19720",
    "end": "22039"
  },
  {
    "text": "context around the drivers of multi-",
    "start": "22039",
    "end": "23640"
  },
  {
    "text": "region since Global tables as you may",
    "start": "23640",
    "end": "25920"
  },
  {
    "text": "have guessed is a multi- region offering",
    "start": "25920",
    "end": "27840"
  },
  {
    "text": "of Dynamo DB so what some of the reasons",
    "start": "27840",
    "end": "30640"
  },
  {
    "text": "you might want to consider making your",
    "start": "30640",
    "end": "32200"
  },
  {
    "text": "application or database available in",
    "start": "32200",
    "end": "34239"
  },
  {
    "text": "multiple regions and the first one is",
    "start": "34239",
    "end": "36640"
  },
  {
    "text": "latency so perhaps you have a globally",
    "start": "36640",
    "end": "39040"
  },
  {
    "text": "distributed user base and you want to",
    "start": "39040",
    "end": "40879"
  },
  {
    "text": "make sure that your users can access",
    "start": "40879",
    "end": "42719"
  },
  {
    "text": "your service with minimal response time",
    "start": "42719",
    "end": "45239"
  },
  {
    "text": "in which case you may consider a multi-",
    "start": "45239",
    "end": "47199"
  },
  {
    "text": "region design where you place your",
    "start": "47199",
    "end": "48840"
  },
  {
    "text": "application and or database in close",
    "start": "48840",
    "end": "50920"
  },
  {
    "text": "geographical proximity to your users the",
    "start": "50920",
    "end": "53879"
  },
  {
    "text": "second one is business continuity and",
    "start": "53879",
    "end": "55840"
  },
  {
    "text": "Disaster Recovery perhaps the",
    "start": "55840",
    "end": "57960"
  },
  {
    "text": "availability of your service is",
    "start": "57960",
    "end": "59559"
  },
  {
    "text": "absolutely absolutely crucial to your",
    "start": "59559",
    "end": "61039"
  },
  {
    "text": "customer and therefore your business so",
    "start": "61039",
    "end": "63359"
  },
  {
    "text": "in the rare event of a regional",
    "start": "63359",
    "end": "64878"
  },
  {
    "text": "degradation you need to quickly recover",
    "start": "64879",
    "end": "67040"
  },
  {
    "text": "and continue to serve your application",
    "start": "67040",
    "end": "69360"
  },
  {
    "text": "in which case again you may also",
    "start": "69360",
    "end": "71119"
  },
  {
    "text": "consider a multi- region design where",
    "start": "71119",
    "end": "73159"
  },
  {
    "text": "your application and all database is",
    "start": "73159",
    "end": "75320"
  },
  {
    "text": "redundantly available across multiple",
    "start": "75320",
    "end": "77759"
  },
  {
    "text": "regions finally perhaps you have",
    "start": "77759",
    "end": "80400"
  },
  {
    "text": "regulatory or compliance requirements",
    "start": "80400",
    "end": "82600"
  },
  {
    "text": "which mandates that you have contingency",
    "start": "82600",
    "end": "84600"
  },
  {
    "text": "to withstand the rare occurrence of",
    "start": "84600",
    "end": "86680"
  },
  {
    "text": "region specific degradations in which",
    "start": "86680",
    "end": "89240"
  },
  {
    "text": "case again you you would deploy your",
    "start": "89240",
    "end": "90520"
  },
  {
    "text": "application across multiple",
    "start": "90520",
    "end": "93640"
  },
  {
    "text": "regions if any of those reasons apply to",
    "start": "93640",
    "end": "96200"
  },
  {
    "text": "your use case or you're at least",
    "start": "96200",
    "end": "97759"
  },
  {
    "text": "considering them then Dynam DB Global",
    "start": "97759",
    "end": "99920"
  },
  {
    "text": "tables may be of interest to",
    "start": "99920",
    "end": "102840"
  },
  {
    "text": "you Dynam DB is one of the first AWS",
    "start": "102840",
    "end": "106320"
  },
  {
    "text": "database services to offer multi- region",
    "start": "106320",
    "end": "108799"
  },
  {
    "text": "multi-active replication it's a fully",
    "start": "108799",
    "end": "111600"
  },
  {
    "text": "managed and multi- region replication",
    "start": "111600",
    "end": "113600"
  },
  {
    "text": "between two or more tables it's",
    "start": "113600",
    "end": "116119"
  },
  {
    "text": "completely serverless so you don't have",
    "start": "116119",
    "end": "117680"
  },
  {
    "text": "to manage any of the replication logic",
    "start": "117680",
    "end": "119920"
  },
  {
    "text": "the servers or network connectivity",
    "start": "119920",
    "end": "121799"
  },
  {
    "text": "between the tables it all gets handled",
    "start": "121799",
    "end": "123799"
  },
  {
    "text": "for you by Dynamo DB it's also important",
    "start": "123799",
    "end": "126920"
  },
  {
    "text": "to note that when we talk about",
    "start": "126920",
    "end": "128360"
  },
  {
    "text": "replication we're talking about",
    "start": "128360",
    "end": "130000"
  },
  {
    "text": "multi-directional replication so every",
    "start": "130000",
    "end": "132640"
  },
  {
    "text": "table that's configured for replication",
    "start": "132640",
    "end": "134519"
  },
  {
    "text": "is also potentially an active write node",
    "start": "134519",
    "end": "137360"
  },
  {
    "text": "so you can write to any of the regional",
    "start": "137360",
    "end": "139280"
  },
  {
    "text": "tables and expect the changes to",
    "start": "139280",
    "end": "141080"
  },
  {
    "text": "propagate to all other tables now you",
    "start": "141080",
    "end": "143879"
  },
  {
    "text": "might be wondering what happens when",
    "start": "143879",
    "end": "145680"
  },
  {
    "text": "you're simultaneously writing data to",
    "start": "145680",
    "end": "147640"
  },
  {
    "text": "multiple tables dispersed globally which",
    "start": "147640",
    "end": "150160"
  },
  {
    "text": "one then becomes the source of Truth",
    "start": "150160",
    "end": "152840"
  },
  {
    "text": "well the objective of global tables is",
    "start": "152840",
    "end": "154680"
  },
  {
    "text": "to eventually Converge All of the tables",
    "start": "154680",
    "end": "157120"
  },
  {
    "text": "to an identical State I'll explain this",
    "start": "157120",
    "end": "159280"
  },
  {
    "text": "more in detail in the next slide and",
    "start": "159280",
    "end": "161800"
  },
  {
    "text": "then finally with global tables you",
    "start": "161800",
    "end": "163760"
  },
  {
    "text": "enjoy a higher availability of",
    "start": "163760",
    "end": "167640"
  },
  {
    "text": "99.999% let's explore the under the hood",
    "start": "169400",
    "end": "171920"
  },
  {
    "text": "architecture of how Global tables",
    "start": "171920",
    "end": "173879"
  },
  {
    "text": "replicates across regions let's have a",
    "start": "173879",
    "end": "176599"
  },
  {
    "text": "look at the diagram on the right",
    "start": "176599",
    "end": "177879"
  },
  {
    "text": "starting with region a at the top of the",
    "start": "177879",
    "end": "179879"
  },
  {
    "text": "diagram and let's say that the",
    "start": "179879",
    "end": "181480"
  },
  {
    "text": "application wants to perform a put item",
    "start": "181480",
    "end": "183840"
  },
  {
    "text": "in its in region table in this case the",
    "start": "183840",
    "end": "186480"
  },
  {
    "text": "right is going to occur synchronously",
    "start": "186480",
    "end": "188400"
  },
  {
    "text": "and in region just like a put item in a",
    "start": "188400",
    "end": "190440"
  },
  {
    "text": "standard table so there's no performance",
    "start": "190440",
    "end": "192519"
  },
  {
    "text": "or latency penalty experienced by the",
    "start": "192519",
    "end": "195440"
  },
  {
    "text": "application but from there Dynamo DB",
    "start": "195440",
    "end": "198000"
  },
  {
    "text": "uses Dynamo DB streams to asynchronously",
    "start": "198000",
    "end": "201040"
  },
  {
    "text": "send the change event to an internal",
    "start": "201040",
    "end": "203040"
  },
  {
    "text": "processor which in turn sends it cross",
    "start": "203040",
    "end": "205480"
  },
  {
    "text": "region to the other replication Target",
    "start": "205480",
    "end": "208080"
  },
  {
    "text": "tables those tables would have their own",
    "start": "208080",
    "end": "210519"
  },
  {
    "text": "processes which can then start writing",
    "start": "210519",
    "end": "212400"
  },
  {
    "text": "the changes to its own table typically",
    "start": "212400",
    "end": "215439"
  },
  {
    "text": "the replication to all other replicas",
    "start": "215439",
    "end": "217599"
  },
  {
    "text": "completes within 1 second depending on",
    "start": "217599",
    "end": "219519"
  },
  {
    "text": "the regions of the involved tables",
    "start": "219519",
    "end": "221879"
  },
  {
    "text": "you're also able to monitor the",
    "start": "221879",
    "end": "223480"
  },
  {
    "text": "replication latency through cloudwatch",
    "start": "223480",
    "end": "226239"
  },
  {
    "text": "metrix it's also important to point out",
    "start": "226239",
    "end": "228640"
  },
  {
    "text": "here that all of the replicas operate",
    "start": "228640",
    "end": "230879"
  },
  {
    "text": "independently of each other in other",
    "start": "230879",
    "end": "233360"
  },
  {
    "text": "words in the rare event where any of the",
    "start": "233360",
    "end": "235640"
  },
  {
    "text": "tables were to lose connectivity or",
    "start": "235640",
    "end": "237519"
  },
  {
    "text": "become unavailable it won't affect the",
    "start": "237519",
    "end": "240000"
  },
  {
    "text": "availability of the",
    "start": "240000",
    "end": "242680"
  },
  {
    "text": "replica so as I mentioned in one of the",
    "start": "242680",
    "end": "245319"
  },
  {
    "text": "previous slides Global tables aims for",
    "start": "245319",
    "end": "247640"
  },
  {
    "text": "the eventual convergence of all of its",
    "start": "247640",
    "end": "249599"
  },
  {
    "text": "tables data or in other words the data",
    "start": "249599",
    "end": "252000"
  },
  {
    "text": "becomes eventually consistent across all",
    "start": "252000",
    "end": "254480"
  },
  {
    "text": "tables but how does it achieve that if",
    "start": "254480",
    "end": "256759"
  },
  {
    "text": "the data is constantly being written",
    "start": "256759",
    "end": "258720"
  },
  {
    "text": "simultaneously across multiple regions",
    "start": "258720",
    "end": "261799"
  },
  {
    "text": "and the short answer is that the last",
    "start": "261799",
    "end": "263759"
  },
  {
    "text": "right wins so in this example",
    "start": "263759",
    "end": "266160"
  },
  {
    "text": "architecture where the Dynamo DV table",
    "start": "266160",
    "end": "268479"
  },
  {
    "text": "uses a petition key only without a sort",
    "start": "268479",
    "end": "271000"
  },
  {
    "text": "key let's say that the applications in",
    "start": "271000",
    "end": "273240"
  },
  {
    "text": "region a and region B approximately at",
    "start": "273240",
    "end": "275919"
  },
  {
    "text": "the same time try to write to the same",
    "start": "275919",
    "end": "277759"
  },
  {
    "text": "petition key of one in which case the",
    "start": "277759",
    "end": "280600"
  },
  {
    "text": "initial put item will occur",
    "start": "280600",
    "end": "282160"
  },
  {
    "text": "synchronously against the local table",
    "start": "282160",
    "end": "284600"
  },
  {
    "text": "and only after that the changes pushed",
    "start": "284600",
    "end": "286320"
  },
  {
    "text": "out for replication now once the region",
    "start": "286320",
    "end": "289080"
  },
  {
    "text": "B table receives the replication request",
    "start": "289080",
    "end": "291720"
  },
  {
    "text": "it will look at the timestamp of the",
    "start": "291720",
    "end": "293160"
  },
  {
    "text": "original right in region a and then",
    "start": "293160",
    "end": "295400"
  },
  {
    "text": "compare it with its own versions",
    "start": "295400",
    "end": "297000"
  },
  {
    "text": "timestamp then it's going to choose the",
    "start": "297000",
    "end": "299080"
  },
  {
    "text": "most recent recent version and the",
    "start": "299080",
    "end": "301720"
  },
  {
    "text": "inverse of that is going to occur for",
    "start": "301720",
    "end": "303400"
  },
  {
    "text": "region A's table where it receives the",
    "start": "303400",
    "end": "305520"
  },
  {
    "text": "replication request from region B it",
    "start": "305520",
    "end": "308000"
  },
  {
    "text": "will compare the time stamps with its",
    "start": "308000",
    "end": "309639"
  },
  {
    "text": "own version of the item and only right",
    "start": "309639",
    "end": "312120"
  },
  {
    "text": "if the replication record is more",
    "start": "312120",
    "end": "314960"
  },
  {
    "text": "recent this does inherently mean that",
    "start": "314960",
    "end": "317360"
  },
  {
    "text": "the older data can potentially be",
    "start": "317360",
    "end": "319319"
  },
  {
    "text": "discarded and never written to the",
    "start": "319319",
    "end": "321199"
  },
  {
    "text": "replica tables it does however ensure",
    "start": "321199",
    "end": "323720"
  },
  {
    "text": "that all tables will eventually converge",
    "start": "323720",
    "end": "325680"
  },
  {
    "text": "into the same state which is the",
    "start": "325680",
    "end": "327160"
  },
  {
    "text": "objective of global tables",
    "start": "327160",
    "end": "331080"
  },
  {
    "text": "so what happens if any two tables lose",
    "start": "331080",
    "end": "333160"
  },
  {
    "text": "connectivity with each other and causes",
    "start": "333160",
    "end": "335240"
  },
  {
    "text": "the replication to temporarily stop so",
    "start": "335240",
    "end": "338080"
  },
  {
    "text": "in this scenario each of the replicas",
    "start": "338080",
    "end": "339960"
  },
  {
    "text": "are going to remain operational and",
    "start": "339960",
    "end": "341800"
  },
  {
    "text": "they're going to continue to function",
    "start": "341800",
    "end": "343240"
  },
  {
    "text": "independently similar to how a single",
    "start": "343240",
    "end": "345440"
  },
  {
    "text": "table would behave this means that even",
    "start": "345440",
    "end": "348000"
  },
  {
    "text": "if the connectivity is disrupted your",
    "start": "348000",
    "end": "350120"
  },
  {
    "text": "application can still access and modify",
    "start": "350120",
    "end": "352479"
  },
  {
    "text": "data in each respective replica any",
    "start": "352479",
    "end": "355639"
  },
  {
    "text": "pending replications during the",
    "start": "355639",
    "end": "357199"
  },
  {
    "text": "connectivity loss are going to be queued",
    "start": "357199",
    "end": "358800"
  },
  {
    "text": "up until the connectivity gets restored",
    "start": "358800",
    "end": "361520"
  },
  {
    "text": "and once the connection is back online",
    "start": "361520",
    "end": "363520"
  },
  {
    "text": "Global tables will automatically begin",
    "start": "363520",
    "end": "365560"
  },
  {
    "text": "processing these cued changes and this",
    "start": "365560",
    "end": "367919"
  },
  {
    "text": "is where the last right wins principle",
    "start": "367919",
    "end": "370120"
  },
  {
    "text": "is important to understand if the right",
    "start": "370120",
    "end": "372639"
  },
  {
    "text": "Tim stamp of the cued item is older than",
    "start": "372639",
    "end": "375160"
  },
  {
    "text": "the version of the item in the",
    "start": "375160",
    "end": "376759"
  },
  {
    "text": "replication table then the cued item is",
    "start": "376759",
    "end": "379599"
  },
  {
    "text": "not going to be written to the",
    "start": "379599",
    "end": "381039"
  },
  {
    "text": "replication table but to be clear you're",
    "start": "381039",
    "end": "383400"
  },
  {
    "text": "not going to lose any data in this",
    "start": "383400",
    "end": "385240"
  },
  {
    "text": "process it just means that the last",
    "start": "385240",
    "end": "386960"
  },
  {
    "text": "right wins principle is going to ensure",
    "start": "386960",
    "end": "389000"
  },
  {
    "text": "that the new item is the one that's",
    "start": "389000",
    "end": "391039"
  },
  {
    "text": "reflected across all of your tables also",
    "start": "391039",
    "end": "394080"
  },
  {
    "text": "note that you can monitor and alert on",
    "start": "394080",
    "end": "396120"
  },
  {
    "text": "the replication latency and pending",
    "start": "396120",
    "end": "398520"
  },
  {
    "text": "replication count metrics in",
    "start": "398520",
    "end": "402080"
  },
  {
    "text": "cloudwatch because Global tables are",
    "start": "402840",
    "end": "405000"
  },
  {
    "text": "both multi region and multi-active this",
    "start": "405000",
    "end": "407720"
  },
  {
    "text": "enables many different use cases",
    "start": "407720",
    "end": "409800"
  },
  {
    "text": "depending on what your needs are so",
    "start": "409800",
    "end": "411880"
  },
  {
    "text": "let's review some high level design",
    "start": "411880",
    "end": "413680"
  },
  {
    "text": "patterns which serve different purposes",
    "start": "413680",
    "end": "415960"
  },
  {
    "text": "according to what your application or",
    "start": "415960",
    "end": "417759"
  },
  {
    "text": "business requirements are",
    "start": "417759",
    "end": "421400"
  },
  {
    "text": "so what if your application doesn't",
    "start": "421400",
    "end": "423160"
  },
  {
    "text": "actually need to serve users in multiple",
    "start": "423160",
    "end": "425400"
  },
  {
    "text": "regions either because your application",
    "start": "425400",
    "end": "427759"
  },
  {
    "text": "is specific to a country or a region but",
    "start": "427759",
    "end": "430400"
  },
  {
    "text": "you still want to take advantage of the",
    "start": "430400",
    "end": "432160"
  },
  {
    "text": "disaster recovery and fast failover",
    "start": "432160",
    "end": "434560"
  },
  {
    "text": "option in this case you could consider",
    "start": "434560",
    "end": "437080"
  },
  {
    "text": "using Global tables as a hot standby",
    "start": "437080",
    "end": "439360"
  },
  {
    "text": "option only that is your application by",
    "start": "439360",
    "end": "441960"
  },
  {
    "text": "default only reads and writes data from",
    "start": "441960",
    "end": "444319"
  },
  {
    "text": "a single table in a single region that",
    "start": "444319",
    "end": "447080"
  },
  {
    "text": "table will replicate to another region",
    "start": "447080",
    "end": "448960"
  },
  {
    "text": "table however that table is not going to",
    "start": "448960",
    "end": "451000"
  },
  {
    "text": "be in any active use that replica only",
    "start": "451000",
    "end": "454400"
  },
  {
    "text": "comes into play during rare Disaster",
    "start": "454400",
    "end": "456560"
  },
  {
    "text": "Recovery or failover events so if your",
    "start": "456560",
    "end": "458919"
  },
  {
    "text": "default table were to become unavailable",
    "start": "458919",
    "end": "461400"
  },
  {
    "text": "you could switch your application to",
    "start": "461400",
    "end": "462960"
  },
  {
    "text": "point to the replica table for immediate",
    "start": "462960",
    "end": "464879"
  },
  {
    "text": "fail over the main benefit of this",
    "start": "464879",
    "end": "467520"
  },
  {
    "text": "pattern is that it gives you a fully",
    "start": "467520",
    "end": "469319"
  },
  {
    "text": "managed and hot standby node and since",
    "start": "469319",
    "end": "472280"
  },
  {
    "text": "you're only writing to a single table",
    "start": "472280",
    "end": "474400"
  },
  {
    "text": "you can also avoid the issue of",
    "start": "474400",
    "end": "476159"
  },
  {
    "text": "temporarily diverging States and expect",
    "start": "476159",
    "end": "478800"
  },
  {
    "text": "consistency with your",
    "start": "478800",
    "end": "481360"
  },
  {
    "text": "reads here's another one what if your",
    "start": "481360",
    "end": "484319"
  },
  {
    "text": "application had a globally distributed",
    "start": "484319",
    "end": "486159"
  },
  {
    "text": "user base and you needed low latency",
    "start": "486159",
    "end": "488159"
  },
  {
    "text": "reads but WR latency was less important",
    "start": "488159",
    "end": "491520"
  },
  {
    "text": "in this case you could use this pattern",
    "start": "491520",
    "end": "493280"
  },
  {
    "text": "where you write to a single primary node",
    "start": "493280",
    "end": "495639"
  },
  {
    "text": "but you can read from any node or more",
    "start": "495639",
    "end": "497639"
  },
  {
    "text": "specifically read from the node with the",
    "start": "497639",
    "end": "499639"
  },
  {
    "text": "closest proximity to the calling",
    "start": "499639",
    "end": "501879"
  },
  {
    "text": "application similar to the previous",
    "start": "501879",
    "end": "503879"
  },
  {
    "text": "pattern this one allows you to avoid any",
    "start": "503879",
    "end": "506280"
  },
  {
    "text": "right conflicts and diverging States but",
    "start": "506280",
    "end": "508680"
  },
  {
    "text": "at the same time enables low latency",
    "start": "508680",
    "end": "510759"
  },
  {
    "text": "reads the trade-off being that your",
    "start": "510759",
    "end": "513159"
  },
  {
    "text": "right latency is potentially higher",
    "start": "513159",
    "end": "515320"
  },
  {
    "text": "depending on where you write",
    "start": "515320",
    "end": "518240"
  },
  {
    "text": "from finally what if your application",
    "start": "518240",
    "end": "521039"
  },
  {
    "text": "was fully Global in nature where you",
    "start": "521039",
    "end": "523200"
  },
  {
    "text": "want low latency for both reads and",
    "start": "523200",
    "end": "525519"
  },
  {
    "text": "rights and they can occur in any region",
    "start": "525519",
    "end": "528040"
  },
  {
    "text": "globally or maybe you want to ensure",
    "start": "528040",
    "end": "530399"
  },
  {
    "text": "that you have full Disaster Recovery",
    "start": "530399",
    "end": "532320"
  },
  {
    "text": "capabilities to account for any rare",
    "start": "532320",
    "end": "534480"
  },
  {
    "text": "region degradations and this is where",
    "start": "534480",
    "end": "536920"
  },
  {
    "text": "you can use Global tables to its fullest",
    "start": "536920",
    "end": "538959"
  },
  {
    "text": "capability ities using the multi- region",
    "start": "538959",
    "end": "541320"
  },
  {
    "text": "multiactive configuration that is your",
    "start": "541320",
    "end": "544279"
  },
  {
    "text": "application will both read and write",
    "start": "544279",
    "end": "546440"
  },
  {
    "text": "from their in region tables and that",
    "start": "546440",
    "end": "548640"
  },
  {
    "text": "data is fully replicated to other",
    "start": "548640",
    "end": "550600"
  },
  {
    "text": "regions with eventual",
    "start": "550600",
    "end": "552720"
  },
  {
    "text": "consistency to prepare for the rare",
    "start": "552720",
    "end": "554880"
  },
  {
    "text": "event of a region outage you can",
    "start": "554880",
    "end": "556600"
  },
  {
    "text": "configure your application to",
    "start": "556600",
    "end": "558279"
  },
  {
    "text": "automatically switch over to one of the",
    "start": "558279",
    "end": "560040"
  },
  {
    "text": "replica tables now while this pattern",
    "start": "560040",
    "end": "562519"
  },
  {
    "text": "provides the most robustness and lowest",
    "start": "562519",
    "end": "564880"
  },
  {
    "text": "read right latency it does also mean",
    "start": "564880",
    "end": "567320"
  },
  {
    "text": "that you need to account for the last",
    "start": "567320",
    "end": "569000"
  },
  {
    "text": "right principle and design for eventual",
    "start": "569000",
    "end": "573040"
  },
  {
    "text": "consistency now let's talk about the",
    "start": "573040",
    "end": "575160"
  },
  {
    "text": "pricing aspect of global tables so when",
    "start": "575160",
    "end": "578160"
  },
  {
    "text": "you write data to a global table as we",
    "start": "578160",
    "end": "580480"
  },
  {
    "text": "know by now these wrs are replicated",
    "start": "580480",
    "end": "582640"
  },
  {
    "text": "across multiple regions however it's",
    "start": "582640",
    "end": "585200"
  },
  {
    "text": "important to note that these replicated",
    "start": "585200",
    "end": "587200"
  },
  {
    "text": "rights are charged separately at a",
    "start": "587200",
    "end": "588920"
  },
  {
    "text": "slightly higher rate compared to normal",
    "start": "588920",
    "end": "590959"
  },
  {
    "text": "right capacity units and we refer to",
    "start": "590959",
    "end": "593360"
  },
  {
    "text": "these as replicated write capacity units",
    "start": "593360",
    "end": "596399"
  },
  {
    "text": "so every time you write data to a local",
    "start": "596399",
    "end": "598320"
  },
  {
    "text": "table within your GL table setup you'll",
    "start": "598320",
    "end": "600760"
  },
  {
    "text": "incur charges for both the local R",
    "start": "600760",
    "end": "602959"
  },
  {
    "text": "capacity unit and the replicated R",
    "start": "602959",
    "end": "605120"
  },
  {
    "text": "capacity unit for each replicated table",
    "start": "605120",
    "end": "608120"
  },
  {
    "text": "Additionally you also need to account",
    "start": "608120",
    "end": "609760"
  },
  {
    "text": "for the data transfer out costs between",
    "start": "609760",
    "end": "612120"
  },
  {
    "text": "regions which will also multiply by the",
    "start": "612120",
    "end": "614640"
  },
  {
    "text": "number of replicas that you have so",
    "start": "614640",
    "end": "617000"
  },
  {
    "text": "while Global tables are there to ensure",
    "start": "617000",
    "end": "618760"
  },
  {
    "text": "data consistency and resilience it's",
    "start": "618760",
    "end": "621360"
  },
  {
    "text": "essential that you factor in these",
    "start": "621360",
    "end": "623000"
  },
  {
    "text": "additional costs when planning your",
    "start": "623000",
    "end": "624800"
  },
  {
    "text": "architecture on the other hand the",
    "start": "624800",
    "end": "626920"
  },
  {
    "text": "storage the read capacity units and the",
    "start": "626920",
    "end": "629560"
  },
  {
    "text": "global secondary indexes are build at",
    "start": "629560",
    "end": "632120"
  },
  {
    "text": "the same rate as standard",
    "start": "632120",
    "end": "635320"
  },
  {
    "text": "tables before we wrap up let's discuss a",
    "start": "635320",
    "end": "638000"
  },
  {
    "text": "few other considerations that you want",
    "start": "638000",
    "end": "639600"
  },
  {
    "text": "to make when adopting and implementing",
    "start": "639600",
    "end": "641760"
  },
  {
    "text": "Global tables the first one is as I just",
    "start": "641760",
    "end": "644680"
  },
  {
    "text": "mentioned the cost for storage and",
    "start": "644680",
    "end": "646600"
  },
  {
    "text": "rights increases with each additional",
    "start": "646600",
    "end": "648560"
  },
  {
    "text": "replica that we deploy so it's crucial",
    "start": "648560",
    "end": "651040"
  },
  {
    "text": "to keep this in mind as you design your",
    "start": "651040",
    "end": "652959"
  },
  {
    "text": "applications and choose replication",
    "start": "652959",
    "end": "655000"
  },
  {
    "text": "patterns you should aim to strike a",
    "start": "655000",
    "end": "657079"
  },
  {
    "text": "balance between availability performance",
    "start": "657079",
    "end": "659360"
  },
  {
    "text": "and cost to ensure optimal resource",
    "start": "659360",
    "end": "662160"
  },
  {
    "text": "utilization the second one is that",
    "start": "662160",
    "end": "664279"
  },
  {
    "text": "Global tables offers flexibility and",
    "start": "664279",
    "end": "666480"
  },
  {
    "text": "setup and it caters to both new and",
    "start": "666480",
    "end": "668440"
  },
  {
    "text": "existing tables you can configure Global",
    "start": "668440",
    "end": "670920"
  },
  {
    "text": "tables seamlessly via API calls SDK",
    "start": "670920",
    "end": "674360"
  },
  {
    "text": "integration CLI commands or",
    "start": "674360",
    "end": "676680"
  },
  {
    "text": "infrastructures code such as cloud",
    "start": "676680",
    "end": "678440"
  },
  {
    "text": "formation for automated deployment and",
    "start": "678440",
    "end": "680880"
  },
  {
    "text": "management of your Global tables thirdly",
    "start": "680880",
    "end": "684079"
  },
  {
    "text": "it's important to note about",
    "start": "684079",
    "end": "685440"
  },
  {
    "text": "transactions so transactions are a",
    "start": "685440",
    "end": "687600"
  },
  {
    "text": "feature of Dynamo DB where you can group",
    "start": "687600",
    "end": "689720"
  },
  {
    "text": "multiple actions like put or update",
    "start": "689720",
    "end": "691959"
  },
  {
    "text": "together to perform an All or Nothing",
    "start": "691959",
    "end": "694360"
  },
  {
    "text": "Atomic operation so while transactional",
    "start": "694360",
    "end": "697480"
  },
  {
    "text": "rights will continue to work for local",
    "start": "697480",
    "end": "699440"
  },
  {
    "text": "tables because of the asynchronous",
    "start": "699440",
    "end": "701800"
  },
  {
    "text": "nature of replication these changes",
    "start": "701800",
    "end": "704160"
  },
  {
    "text": "can't be executed as transactions for",
    "start": "704160",
    "end": "706399"
  },
  {
    "text": "replicas and instead we'll follow the",
    "start": "706399",
    "end": "708560"
  },
  {
    "text": "usual last right wins principle to write",
    "start": "708560",
    "end": "710959"
  },
  {
    "text": "data to replicas lastly to guarantee",
    "start": "710959",
    "end": "714399"
  },
  {
    "text": "that Global tables can effectively",
    "start": "714399",
    "end": "716120"
  },
  {
    "text": "perform replications across all replicas",
    "start": "716120",
    "end": "718639"
  },
  {
    "text": "it's crucial that all of your tables",
    "start": "718639",
    "end": "720519"
  },
  {
    "text": "have sufficient capacity so when you add",
    "start": "720519",
    "end": "722959"
  },
  {
    "text": "a replica table to a global table you",
    "start": "722959",
    "end": "725240"
  },
  {
    "text": "will need to make sure that the same",
    "start": "725240",
    "end": "726959"
  },
  {
    "text": "right capacity settings are specified we",
    "start": "726959",
    "end": "729800"
  },
  {
    "text": "also recommend that you use either on",
    "start": "729800",
    "end": "731800"
  },
  {
    "text": "demand or autoscale provision capacity",
    "start": "731800",
    "end": "734399"
  },
  {
    "text": "when enabling Global tables and that's",
    "start": "734399",
    "end": "736680"
  },
  {
    "text": "to make sure that your tables can",
    "start": "736680",
    "end": "738240"
  },
  {
    "text": "automatically adjust its capacity to",
    "start": "738240",
    "end": "740360"
  },
  {
    "text": "your application's changing",
    "start": "740360",
    "end": "742880"
  },
  {
    "text": "workload we do also offer a wide range",
    "start": "742880",
    "end": "745680"
  },
  {
    "text": "of prescriptive Dynamo DB guidance",
    "start": "745680",
    "end": "747760"
  },
  {
    "text": "including more details about the routing",
    "start": "747760",
    "end": "749920"
  },
  {
    "text": "strategies using Route 53 which I",
    "start": "749920",
    "end": "751920"
  },
  {
    "text": "mentioned earlier so please check out",
    "start": "751920",
    "end": "753800"
  },
  {
    "text": "this",
    "start": "753800",
    "end": "754800"
  },
  {
    "text": "link for more comprehensive",
    "start": "754800",
    "end": "756920"
  },
  {
    "text": "documentation about global table best",
    "start": "756920",
    "end": "759079"
  },
  {
    "text": "practices feel free to visit the link",
    "start": "759079",
    "end": "760760"
  },
  {
    "text": "that you can see now or use the QR",
    "start": "760760",
    "end": "764320"
  },
  {
    "text": "code we also have a comprehensive",
    "start": "764320",
    "end": "766800"
  },
  {
    "text": "playlist of similar short videos like",
    "start": "766800",
    "end": "769040"
  },
  {
    "text": "this one to cover other aspects of",
    "start": "769040",
    "end": "771160"
  },
  {
    "text": "Dynamo DB so make sure to check those",
    "start": "771160",
    "end": "773079"
  },
  {
    "text": "out",
    "start": "773079",
    "end": "773920"
  },
  {
    "text": "to so that's a wrap thank you for",
    "start": "773920",
    "end": "776120"
  },
  {
    "text": "joining today hopefully by now you have",
    "start": "776120",
    "end": "778040"
  },
  {
    "text": "a better understanding of of what Dynamo",
    "start": "778040",
    "end": "780040"
  },
  {
    "text": "DB Global tables are when to use them",
    "start": "780040",
    "end": "782480"
  },
  {
    "text": "and how you can Implement them using",
    "start": "782480",
    "end": "784079"
  },
  {
    "text": "best practices thank you",
    "start": "784079",
    "end": "788199"
  }
]