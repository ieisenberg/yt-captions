[
  {
    "start": "0",
    "end": "33000"
  },
  {
    "text": "alright let's go ahead and get started hi everyone welcome thanks for being here today my name is James Tiger Winnie",
    "start": "30",
    "end": "7470"
  },
  {
    "text": "and I'm Kyle Knapp and we work on the SDKs and tools team we primarily focus",
    "start": "7470",
    "end": "12540"
  },
  {
    "text": "on client-side tooling and Python so some of the things that we work on include Votto 3 which is the AWS SDK for",
    "start": "12540",
    "end": "18900"
  },
  {
    "text": "Python AWS Challis which is a server list micro framework for python and the",
    "start": "18900",
    "end": "24109"
  },
  {
    "text": "AWS CLI which is what we're going to be talking about today we're excited to share with you what's new with the AWS",
    "start": "24109",
    "end": "31439"
  },
  {
    "text": "CLI now quick show of hands who here is use the AWS CLI before Wow that is",
    "start": "31439",
    "end": "37380"
  },
  {
    "start": "33000",
    "end": "121000"
  },
  {
    "text": "almost everyone that is awesome ok so for the few that haven't seen the",
    "start": "37380",
    "end": "42480"
  },
  {
    "text": "CLI before it's a unified tool for managing your AWS resources it's across",
    "start": "42480",
    "end": "47640"
  },
  {
    "text": "platform it works on Windows Linux Mac we have a number of installers to get you up and running quickly and there's",
    "start": "47640",
    "end": "53160"
  },
  {
    "text": "over a hundred and fifty top level CLI commands now wasn't always this way",
    "start": "53160",
    "end": "58320"
  },
  {
    "text": "in fact version 1.0.0 of the CLI was released maybe five just over five years",
    "start": "58320",
    "end": "65338"
  },
  {
    "text": "ago and we've been adding a number of things to the C lies since then I don't",
    "start": "65339",
    "end": "70680"
  },
  {
    "text": "think wait show of hands is anyone here for reinvent 2013 oh wow ok that's great so to give you an idea of what we've",
    "start": "70680",
    "end": "77729"
  },
  {
    "text": "done since version 1.0 of the AWS CLI we've had over 600 tagged versions of",
    "start": "77729",
    "end": "84540"
  },
  {
    "text": "the CLI 1557 hundred plus commits and hundreds of thousands of lines of modified code Bodo core which is the",
    "start": "84540",
    "end": "90840"
  },
  {
    "text": "underlying library that powers the AWS CLI has seen similar numbers and",
    "start": "90840",
    "end": "96170"
  },
  {
    "text": "comparing 1.0 to the current version of the AWS CLI there's a lot more code",
    "start": "96170",
    "end": "102630"
  },
  {
    "text": "added I know lines of code isn't the best metric for these types of things but one of the things that I really happy about is if we look at the lines",
    "start": "102630",
    "end": "108659"
  },
  {
    "text": "of code to test code for version 1.0 is about one to one and for the recent version of the AWS CLI it's almost a two",
    "start": "108659",
    "end": "115590"
  },
  {
    "text": "to one ratio now because most of you are familiar with the AWS CLI we'll we won't",
    "start": "115590",
    "end": "121950"
  },
  {
    "start": "121000",
    "end": "217000"
  },
  {
    "text": "spend a whole lot of time on going over the basics here but we're switch to the demo and just give you a brief overview",
    "start": "121950",
    "end": "128610"
  },
  {
    "text": "we'll spend maybe about a minute on it since it seems like most of you are familiar with so it's like the crash course to being",
    "start": "128610",
    "end": "134730"
  },
  {
    "text": "productive with AWS CLI the basic idea is that once you have it installed and configure and will Pat will go into that",
    "start": "134730",
    "end": "140340"
  },
  {
    "text": "part in more detail in the second section here but I can run help it's going to give me a number of top-level",
    "start": "140340",
    "end": "146280"
  },
  {
    "text": "commands here these are the hundred and fifty plus top-level commands we're talking about typically correspond to an AWS service I can do the same thing for",
    "start": "146280",
    "end": "154340"
  },
  {
    "text": "service here and this is going to give me the operations so things like the attach volume and other operations for",
    "start": "154340",
    "end": "159900"
  },
  {
    "text": "the Amazon ec2 API and then if I wanted to run a command I could just run say describe regions and since I don't have",
    "start": "159900",
    "end": "166170"
  },
  {
    "text": "any required parameters it just gives me the output if you've used the CLI before you've also probably seen different",
    "start": "166170",
    "end": "171840"
  },
  {
    "text": "output formats so this gives me all of the data on one screen this is a table output easier to visually parse and then",
    "start": "171840",
    "end": "178560"
  },
  {
    "text": "there's a text output so this is useful if you want to pipe this to say grab or sad or awk or some other text processing",
    "start": "178560",
    "end": "184530"
  },
  {
    "text": "tool the other thing if you're using the CLI you've probably come across the",
    "start": "184530",
    "end": "189720"
  },
  {
    "text": "query argument so you can say query and then give it an expression here and let's say that I just wanted the region",
    "start": "189720",
    "end": "195299"
  },
  {
    "text": "names and it'll give me just the list of the particular key that I'm interested in so that was pretty quick it seems",
    "start": "195299",
    "end": "202440"
  },
  {
    "text": "like most of you are familiar with it so we'll just go ahead and call that the good for the demo if you know that much for the CLI you're pretty much are able",
    "start": "202440",
    "end": "210150"
  },
  {
    "text": "to get up and running very quickly but we'll switch back to the slides here and can you continue talking about AWS CLI",
    "start": "210150",
    "end": "216470"
  },
  {
    "text": "now for version 1.1 of the things we really care about is backwards compatibility we want to make sure that",
    "start": "216470",
    "end": "222510"
  },
  {
    "start": "217000",
    "end": "257000"
  },
  {
    "text": "scripts that are run using some version of one Doc's continue to run on future versions of one dot X and that means",
    "start": "222510",
    "end": "228989"
  },
  {
    "text": "some fairly obvious things like we don't remove commands and parameters we don't remove features but then there's some",
    "start": "228989",
    "end": "234569"
  },
  {
    "text": "other more subtle things like we don't change defaults we don't make optional parameters required and we want to make",
    "start": "234569",
    "end": "239639"
  },
  {
    "text": "sure that you're able to safely upgrade your scripts and take advantage of the latest bug fixes and the newest features",
    "start": "239639",
    "end": "245010"
  },
  {
    "text": "in the AWS CLI while continuing to have your scripts work however in that time",
    "start": "245010",
    "end": "250560"
  },
  {
    "text": "we've also heard a lot of customer feedback about things that they would like to see changed things that we can",
    "start": "250560",
    "end": "256229"
  },
  {
    "text": "improve upon and we've really learned a lot over the last five years so we've taken all of that feedback we've",
    "start": "256229",
    "end": "261840"
  },
  {
    "start": "257000",
    "end": "266000"
  },
  {
    "text": "collected it we've been looking it over and we have started work this year on the AWS command-line",
    "start": "261840",
    "end": "268670"
  },
  {
    "text": "interface version 2.0 now want to mention before we get into a lot of the details here that version 2.0 is still",
    "start": "268670",
    "end": "275330"
  },
  {
    "text": "under active development so it is being developed openly on github there's a lot of time to shape its direction in its",
    "start": "275330",
    "end": "281870"
  },
  {
    "text": "future what we're going to show you today is a preview of what we have so far and some of the things that we're thinking about for v2 now in terms of",
    "start": "281870",
    "end": "288800"
  },
  {
    "text": "the major themes there's really three and we're going to go over these three in today's talk there's a removal of",
    "start": "288800",
    "end": "293900"
  },
  {
    "text": "features then there's interactive usage this is when you're at your laptop or your dev machine working with the CLI",
    "start": "293900",
    "end": "299570"
  },
  {
    "text": "how can we make that better and then there's also high-level commands so if you've used a CLI before you've probably",
    "start": "299570",
    "end": "304940"
  },
  {
    "text": "used the s3 commands and come across the s3 and s3 API commands and in doing so",
    "start": "304940",
    "end": "310970"
  },
  {
    "text": "we wanted to continue with that trend of giving you high-level commands that are maybe more idiomatic to use so if you've",
    "start": "310970",
    "end": "318080"
  },
  {
    "text": "used s3 you know there's LS CPM vrm these are commands and you probably use all the time when you're in the terminal",
    "start": "318080",
    "end": "323920"
  },
  {
    "text": "now we'll cover real quickly backwards incompatible changes because that's fairly straightforward these are some of",
    "start": "323920",
    "end": "329120"
  },
  {
    "text": "the things we've already removed or in the process of removing I'll just highlight a couple because I want to stress that CLI v2 is not from the",
    "start": "329120",
    "end": "336260"
  },
  {
    "text": "ground rewrite it's mostly taking some of the changes that we've been waiting on and v1 and then being able to apply",
    "start": "336260",
    "end": "341660"
  },
  {
    "text": "them now that we're doing a new major version so for example we have one per am or one feature here where we removed",
    "start": "341660",
    "end": "347900"
  },
  {
    "text": "the ability to fetch remote values to start with HTTP and HTTPS what this",
    "start": "347900",
    "end": "353090"
  },
  {
    "text": "would do is if it started with that value and retrieve the remote file and then whatever the contents of that file is would be used for the value and so in",
    "start": "353090",
    "end": "359750"
  },
  {
    "text": "v1 we added a flag to turn this off and in v2 its just removed entirely another",
    "start": "359750",
    "end": "365090"
  },
  {
    "text": "example here is with dropping support for Python 2 6 python 3 3 and python 3 4",
    "start": "365090",
    "end": "370970"
  },
  {
    "text": "cannot a Python developer those are really old end-of-life versions of Python and in removing support for that",
    "start": "370970",
    "end": "376460"
  },
  {
    "text": "what that's going to allow us to do is to take advantage of some of the features that are in modern versions of Python notably around the SSL and TLS",
    "start": "376460",
    "end": "384080"
  },
  {
    "text": "libraries but it still means that if you're on modern OS on your dev laptop",
    "start": "384080",
    "end": "390410"
  },
  {
    "text": "or dev machine you'll still be able to install the CLI and I'll still work with the majority of the Python versions you have installed but with that being said",
    "start": "390410",
    "end": "397100"
  },
  {
    "text": "we also wanted to try to improve that as well and make it so that you don't even have to worry about the version of",
    "start": "397100",
    "end": "402349"
  },
  {
    "text": "Python that you have installed on your system and so cause going to talk about the improvements we've made in the getting started and the configuration process",
    "start": "402349",
    "end": "410948"
  },
  {
    "text": "thanks James so one of the main focus points of the CLI v2 is improving the getting started",
    "start": "411280",
    "end": "418280"
  },
  {
    "start": "414000",
    "end": "639000"
  },
  {
    "text": "process with respect to making it more easy and more streamlined to get up and running with day to be a CLI",
    "start": "418280",
    "end": "425870"
  },
  {
    "text": "specifically in order to improve the getting started experience we've improved the installation story and a",
    "start": "425870",
    "end": "431360"
  },
  {
    "text": "configuration story so with the CLI in v1 there are three main mechanisms in",
    "start": "431360",
    "end": "436819"
  },
  {
    "text": "order to install it you can install it through them a science dollars you can also install it through a bundle",
    "start": "436819",
    "end": "441949"
  },
  {
    "text": "installer that content is essentially a zip file containing the CLI and all of",
    "start": "441949",
    "end": "447229"
  },
  {
    "text": "its dependencies and you can also install it with PIP for v2 of the CLI or",
    "start": "447229",
    "end": "452750"
  },
  {
    "text": "keeping the msi installers but replacing the bottle installer and installing through with pip with a PKG install it",
    "start": "452750",
    "end": "458990"
  },
  {
    "text": "for mac OS and linux installers for the various flavors of Linux and the reason",
    "start": "458990",
    "end": "465199"
  },
  {
    "text": "why we're doing this is it gives us three benefits first it's gonna give us control over exactly what gets installed",
    "start": "465199",
    "end": "471169"
  },
  {
    "text": "in the environment so for example was CLI v1 we're never really able to pull",
    "start": "471169",
    "end": "476509"
  },
  {
    "text": "in libraries that had C extensions because of C extensions you need to have compiled whether it be pre compiled and",
    "start": "476509",
    "end": "483169"
  },
  {
    "text": "downloading it or down leaving the library and compiling yourself so if the CLI pulled in a dependency that had a",
    "start": "483169",
    "end": "489379"
  },
  {
    "text": "sage session and there was no precompiled binary available it would require that users have to have a",
    "start": "489379",
    "end": "494779"
  },
  {
    "text": "compiler to install the C alive which would be a backwards incompatible change the second reason is it's gonna give us",
    "start": "494779",
    "end": "502069"
  },
  {
    "text": "a better getting starting experience you no longer have to manage your installation of the CLI to the bundle",
    "start": "502069",
    "end": "508009"
  },
  {
    "text": "installer or through pip you can use whatever package manager that your custom to based off your operating system and in finally it's going to",
    "start": "508009",
    "end": "516198"
  },
  {
    "text": "improve your extensibility story so we're gonna have a lot more control over where the C light gets installed and does have more control over where",
    "start": "516199",
    "end": "522018"
  },
  {
    "text": "plugins get installed and managed as it relates to configuration if you've used",
    "start": "522019",
    "end": "527959"
  },
  {
    "text": "to see a live before you've likely ran database figure command where you prompted for an",
    "start": "527959",
    "end": "533070"
  },
  {
    "text": "access key you can put that value and continue with a secret access key the region output and once you fill out all",
    "start": "533070",
    "end": "539160"
  },
  {
    "text": "those you're good to go however the CLI has a lot more options to configuration other than access key",
    "start": "539160",
    "end": "545040"
  },
  {
    "text": "and secret key there's a lot more configuration features available such as assume roles setting up a process",
    "start": "545040",
    "end": "550980"
  },
  {
    "text": "provider to offend to give a sam'l there's a bunch of different steel-like configuration options and for the most",
    "start": "550980",
    "end": "556140"
  },
  {
    "text": "part you'd have to read the documentation and learn how to configure it that way and there wasn't really an Adria's configure command to actually",
    "start": "556140",
    "end": "562650"
  },
  {
    "text": "help you set this all up and with that being said a big focus for the configuration improvements is to make",
    "start": "562650",
    "end": "569190"
  },
  {
    "text": "these configuration values more discoverable and more streamline is setting up so the configuration",
    "start": "569190",
    "end": "574560"
  },
  {
    "text": "improvements can be narrowed down to two categories there's improvements to Amazon ec2 and improvements to the local",
    "start": "574560",
    "end": "581400"
  },
  {
    "text": "configuration process and with FAMAS on ec2 the idea is that we don't want to",
    "start": "581400",
    "end": "586770"
  },
  {
    "text": "require any installation or configuration you can essentially spin up a new ec2 instance with that I an",
    "start": "586770",
    "end": "592350"
  },
  {
    "text": "instance profile SSH on to the ec2 instance and be able to immediately start using the a to steal lie so what",
    "start": "592350",
    "end": "598830"
  },
  {
    "text": "that entails is ad making sure that Avis CLI is included in the Amazon Linux ami to CLI continuingly to fetch temporary",
    "start": "598830",
    "end": "607110"
  },
  {
    "text": "credentials from the instance metadata service and a new feature we've added in CLI v2 which is to fetch the region from",
    "start": "607110",
    "end": "613770"
  },
  {
    "text": "the instance metadata service by default so you no longer have to configure a region then as to the improvements to",
    "start": "613770",
    "end": "620670"
  },
  {
    "text": "the local configuration process the main feature we've added is the idea of any configuration wizard so if I was to type",
    "start": "620670",
    "end": "627150"
  },
  {
    "text": "a breeze configure wizard I'll then be able to be prompted asking me what do I want to set up and then prompted for",
    "start": "627150",
    "end": "633540"
  },
  {
    "text": "values in order to get us set up correctly so now in order to show this I'm gonna head into a demo of all these",
    "start": "633540",
    "end": "640830"
  },
  {
    "start": "639000",
    "end": "1105000"
  },
  {
    "text": "features that he talked about",
    "start": "640830",
    "end": "643820"
  },
  {
    "text": "cool so the first thing I have set up let's assume we don't have the seal I installed it all so in order to go ahead",
    "start": "646400",
    "end": "654320"
  },
  {
    "text": "and install the seal ib2 you can go ahead and go to this github page right here and you can see this is",
    "start": "654320",
    "end": "661970"
  },
  {
    "text": "the tag the first tag to preview release of a Bastille ib2 has a package",
    "start": "661970",
    "end": "667010"
  },
  {
    "text": "installer that I can then use and and I already have this package installer downloaded and I can go ahead and run",
    "start": "667010",
    "end": "674020"
  },
  {
    "text": "open on this package installer and then it'll get then it will prompt me for",
    "start": "674020",
    "end": "680830"
  },
  {
    "text": "specific values so it's it'll give me a readme",
    "start": "680830",
    "end": "685870"
  },
  {
    "text": "it'll then tell me what the licenses I can go ahead and agree to it I can choose where I want to install it and",
    "start": "685870",
    "end": "692270"
  },
  {
    "text": "then go ahead and type in the password and get it installed cool looks like",
    "start": "692270",
    "end": "703700"
  },
  {
    "text": "this installation was successful now if I hop back into my terminal I can confirm that as now installed so if I",
    "start": "703700",
    "end": "710240"
  },
  {
    "text": "type abs - version you'll see that I have the two points 0.0 Deb zero version",
    "start": "710240",
    "end": "715370"
  },
  {
    "text": "of the aw line continuing on the same trend of your brand-new to CLI let's say",
    "start": "715370",
    "end": "720770"
  },
  {
    "text": "you don't have credentials as well so in order to install our gate credentials a",
    "start": "720770",
    "end": "726470"
  },
  {
    "text": "typical pattern would be to go to the IM console and add a user I'm gonna call",
    "start": "726470",
    "end": "732380"
  },
  {
    "text": "this user my user and give it programmatic access from there I can",
    "start": "732380",
    "end": "738140"
  },
  {
    "text": "attach a policy I can attach the administrator policy here and continue",
    "start": "738140",
    "end": "743660"
  },
  {
    "text": "on through this wizard until I create my user and once I create my user I'll have",
    "start": "743660",
    "end": "750380"
  },
  {
    "text": "an access key I can then copy and paste in the secret access key that I can input into latex configure commands so",
    "start": "750380",
    "end": "756470"
  },
  {
    "text": "this is what I would do if I was doing be one of the seal line so a copy and paste access key over here in the secret",
    "start": "756470",
    "end": "762110"
  },
  {
    "text": "key here what I want to actually show you now though is a new command we added to help streamline this process of",
    "start": "762110",
    "end": "767570"
  },
  {
    "text": "importing configure right importing credentials so another thing you may notice is you have the download CSV",
    "start": "767570",
    "end": "773090"
  },
  {
    "text": "option here so I'm gonna go ahead and download this too disk and the new command we added is",
    "start": "773090",
    "end": "780380"
  },
  {
    "text": "called the it was configured import command and the idea is that you can provide a CSV parameter and give it the",
    "start": "780380",
    "end": "787130"
  },
  {
    "text": "contents of the CSV file I downloaded to downloads credentials at CSV and when I",
    "start": "787130",
    "end": "796940"
  },
  {
    "text": "run this command it'll say it imported a profile for me the cool part about this command is that if you have multiple",
    "start": "796940",
    "end": "802700"
  },
  {
    "text": "users in this credential slash CSV file and be able to import all those profiles as well so let's go ahead and make sure",
    "start": "802700",
    "end": "811430"
  },
  {
    "text": "I see what the profile is set up so I can run a new command that we've added to see like v2 called list profiles and",
    "start": "811430",
    "end": "820160"
  },
  {
    "text": "that would print out that I have a new profile called my user setup so let's go ahead and test those credentials to make",
    "start": "820160",
    "end": "825589"
  },
  {
    "text": "sure that they work fine so I'm gonna run it with CC to describe regions command and specify the profile as that",
    "start": "825589",
    "end": "834020"
  },
  {
    "text": "new profile I created and you can see I have all the regions that are available",
    "start": "834020",
    "end": "839510"
  },
  {
    "text": "for ec2 here and that about wraps up that demo the one things I want to",
    "start": "839510",
    "end": "844850"
  },
  {
    "text": "emphasize with this demo was you can go ahead and start using this you live from github there's a pkg installer you can",
    "start": "844850",
    "end": "850730"
  },
  {
    "text": "use and also of the CLI v2 has improved the getting started process for",
    "start": "850730",
    "end": "856580"
  },
  {
    "text": "importing credentials no longer you have to Manly and put it yourself so now",
    "start": "856580",
    "end": "862160"
  },
  {
    "text": "let's go ahead and talk about the features that I referred to in the slides I'm going to switch to this tab where I'm associated onto an ec2",
    "start": "862160",
    "end": "868550"
  },
  {
    "text": "instance it array has a CLI v2 installed and let's go ahead and look at what the",
    "start": "868550",
    "end": "874010"
  },
  {
    "text": "configuration currently is set up for this ec2 instance by running the atavistic figure list command and when I",
    "start": "874010",
    "end": "880010"
  },
  {
    "text": "run it you can see that I have an access key secret key and region set up the I am role type just means it's coming from",
    "start": "880010",
    "end": "886250"
  },
  {
    "text": "the interest metadata service and you can also see the region's coming from instance metadata service as well this",
    "start": "886250",
    "end": "891620"
  },
  {
    "text": "ec2 instance is set up in u.s. West to sort of the proof that this all works I",
    "start": "891620",
    "end": "898100"
  },
  {
    "text": "can go ahead and run ABS easy to describe regions and I get the call the",
    "start": "898100",
    "end": "904250"
  },
  {
    "text": "response I'd expected so now let's do something a little more complicated and use the ATM",
    "start": "904250",
    "end": "910400"
  },
  {
    "text": "wizard that I talked about in the slides so to use the Avis configure wizard I",
    "start": "910400",
    "end": "915550"
  },
  {
    "text": "could go ahead and type Amos configure wizard here and then I'll prompt me for what I would like to configure I have",
    "start": "915550",
    "end": "922280"
  },
  {
    "text": "multiple options I can scroll up and down for so I can choose static credentials assume role provider so if I",
    "start": "922280",
    "end": "929240"
  },
  {
    "text": "choose static credentials I can go ahead and be prompted for the profile want to create I could call it my profile and",
    "start": "929240",
    "end": "936110"
  },
  {
    "text": "then I'll be prompted for the access key seeker key Simran similar to the abus configure",
    "start": "936110",
    "end": "941480"
  },
  {
    "text": "commands for the sake of this demo I'm not gonna actually follow through with the wizard specifically this is an ec2",
    "start": "941480",
    "end": "947390"
  },
  {
    "text": "instance that has an instance profile it doesn't make a lot of sense to have static credentials laying around on your",
    "start": "947390",
    "end": "953510"
  },
  {
    "text": "instance so instead what I'm gonna do is choose the zoom role option to set up a",
    "start": "953510",
    "end": "959450"
  },
  {
    "text": "zoom role provider for my profile and the profile I'm going to call it is s3 read-only and now the wizard will list",
    "start": "959450",
    "end": "968570"
  },
  {
    "text": "all the roles available to me and let me just go ahead and scroll through and select the one I want so I can scroll",
    "start": "968570",
    "end": "974330"
  },
  {
    "text": "down and up and choose the s3 read-only one and then from there I have to go",
    "start": "974330",
    "end": "980780"
  },
  {
    "text": "ahead and choose a credential source that I want to use to assume the role so I can choose a source profile meaning find a profile on my shear config file",
    "start": "980780",
    "end": "987650"
  },
  {
    "text": "and use the static credentials to assume the role I can choose environment variables in our case we're going to go",
    "start": "987650",
    "end": "993110"
  },
  {
    "text": "ahead and choose this ec2 anticipated ADA option and now my new profile should",
    "start": "993110",
    "end": "998540"
  },
  {
    "text": "have been created on my behalf so if I could go ahead and run tale - and on the shared config file you'll see I have a",
    "start": "998540",
    "end": "1006850"
  },
  {
    "text": "new profile called s3 read-only it specifies the role aren't here for this s3 read-only as well and the credential",
    "start": "1006850",
    "end": "1013630"
  },
  {
    "text": "source is easy to insist metadata so what that means is when the CLI uses this profile it will grab temporary",
    "start": "1013630",
    "end": "1019930"
  },
  {
    "text": "credentials from the ec2 and this metadata service and then make an assumed role call with this s3 read-only",
    "start": "1019930",
    "end": "1025540"
  },
  {
    "text": "role to get new credentials so we can then make API calls to Amazon s3 so",
    "start": "1025540",
    "end": "1030640"
  },
  {
    "text": "let's go ahead and make sure that this all works I'm gonna go ahead and run the intimus s3 command and I'm gonna run it",
    "start": "1030640",
    "end": "1037209"
  },
  {
    "text": "on a bucket that I've previously created and it used this new profile",
    "start": "1037209",
    "end": "1043350"
  },
  {
    "text": "and you can see that I have one object in my bucket and now let's go ahead and",
    "start": "1043939",
    "end": "1051630"
  },
  {
    "text": "test the permissions a little bit more so I'm gonna try to write to this bucket to make sure it doesn't work because I only have a read-only role so if I echo",
    "start": "1051630",
    "end": "1058950"
  },
  {
    "text": "content do standard did to the a div US s3 CP command to that same bucket and",
    "start": "1058950",
    "end": "1067440"
  },
  {
    "text": "use the profile s3 read-only you should",
    "start": "1067440",
    "end": "1073350"
  },
  {
    "text": "see I get an access to night-air which is what I expected as I only have read permissions for this role for s3 and",
    "start": "1073350",
    "end": "1079679"
  },
  {
    "text": "that about wraps it up in terms of demo I want to share the one thing I hope you all got out of it was how the APIs",
    "start": "1079679",
    "end": "1086309"
  },
  {
    "text": "configure wizard can really help you discover what the different configuration options are and help you streamline your way to setting up the",
    "start": "1086309",
    "end": "1092790"
  },
  {
    "text": "correct workflow you want and now I'm gonna pass it over the James and he's gonna talk about how Wizards can apply",
    "start": "1092790",
    "end": "1098910"
  },
  {
    "text": "Borton just configuration they can applied your services that database CLI supports Thank You Kyle so AWS Wizards",
    "start": "1098910",
    "end": "1110670"
  },
  {
    "text": "it brings us to the second major theme of AWS CLI v2 now if you think about AWS",
    "start": "1110670",
    "end": "1119010"
  },
  {
    "text": "CLI v1 as it exists today a lot of the functionality there is really to support scripting you can almost think of it as",
    "start": "1119010",
    "end": "1125700"
  },
  {
    "text": "AWS SDK for bash or shell SDK and a lot of the things we've added help that so",
    "start": "1125700",
    "end": "1131880"
  },
  {
    "text": "for example we make sure that all of the output can be programmatically parsed we saw example of that by producing JSON or",
    "start": "1131880",
    "end": "1137610"
  },
  {
    "text": "producing some sort of text output that you can pipe to other text processing tools we're also very careful in certain",
    "start": "1137610",
    "end": "1143160"
  },
  {
    "text": "design constraints such as being careful about prompting so making sure that we don't prompt to you because that would",
    "start": "1143160",
    "end": "1149670"
  },
  {
    "text": "block a deployment script if is running in some sort of automated fashion but there's a lot of commands and a lot of",
    "start": "1149670",
    "end": "1156059"
  },
  {
    "text": "parameters in the AWS CLI I mentioned that we had over 150 top-level commands almost 27,000 CLI parameters and if you",
    "start": "1156059",
    "end": "1163530"
  },
  {
    "text": "know what command you want to run and the type of output you're expecting then you can write CLI scripts however we",
    "start": "1163530",
    "end": "1170550"
  },
  {
    "text": "also wanted to think about how we can help users get started and how we can help them see how you can start to put",
    "start": "1170550",
    "end": "1176760"
  },
  {
    "text": "certain API calls together in order to write these types of scripts and that was really the main driving factor for",
    "start": "1176760",
    "end": "1182340"
  },
  {
    "text": "the AWS CLI Wizards if you've used the web console before it's very similar to",
    "start": "1182340",
    "end": "1187770"
  },
  {
    "text": "that so the idea is that it will ask you certain questions about the resource that you want to set up and at the end",
    "start": "1187770",
    "end": "1193950"
  },
  {
    "text": "it'll make the necessary API calls to set all that up for you it's the same idea in the CLI there's interactive",
    "start": "1193950",
    "end": "1199320"
  },
  {
    "text": "prompting of values it helps you manage your AWS resources and one of the things that I really like about it is that it's",
    "start": "1199320",
    "end": "1204960"
  },
  {
    "text": "data-driven so you don't have to understand Python code and you don't have to understand the CLI internal code",
    "start": "1204960",
    "end": "1210060"
  },
  {
    "text": "base in order to contribute Wizards L may also makes it easier for say AWS service teams as we're launching a new",
    "start": "1210060",
    "end": "1216090"
  },
  {
    "text": "service if they want to contribute Wizards to the AWS CLI they can also do that now the way that Wizards are",
    "start": "1216090",
    "end": "1221720"
  },
  {
    "text": "integrated into the AWS CLI you saw an example of that with Kyle's demo but you have AWS and then a service",
    "start": "1221720",
    "end": "1229290"
  },
  {
    "text": "name and then wizard and then the wizard name and it'll have that same structure for any service or any command that has",
    "start": "1229290",
    "end": "1235650"
  },
  {
    "text": "Wizards associated with it so in this example let's say that I were to run AWS DynamoDB wizard for a new table and then",
    "start": "1235650",
    "end": "1242670"
  },
  {
    "text": "it'll ask me certain questions about what the table name is what may be the primary key is and after I've answered a",
    "start": "1242670",
    "end": "1247800"
  },
  {
    "text": "number of questions it will then create the resource for me now I want to show you a demo of a",
    "start": "1247800",
    "end": "1254130"
  },
  {
    "start": "1251000",
    "end": "1623000"
  },
  {
    "text": "couple of wizards that we've added so we'll switch over to the demo laptop here and I'm gonna continue on with what",
    "start": "1254130",
    "end": "1261330"
  },
  {
    "text": "Kyle did in his previous demo which was creating AWS I am roll with the profiles",
    "start": "1261330",
    "end": "1267750"
  },
  {
    "text": "so what I'm gonna do now is before where Kyle had the role that already existed and he selected it let's go ahead and",
    "start": "1267750",
    "end": "1273270"
  },
  {
    "text": "create an IM role using these new wizards and see how we can put all of this together so what I'm gonna do is",
    "start": "1273270",
    "end": "1278490"
  },
  {
    "text": "run the I am wizard command and I have one wizard in mind which is a new role",
    "start": "1278490",
    "end": "1284670"
  },
  {
    "text": "and that's going to allow us to create a new I am role so if I run this it's very similar to what you see in the web UI if",
    "start": "1284670",
    "end": "1291030"
  },
  {
    "text": "you've gone through that before it's gonna ask me what trusted entity I want what can assume the role so I can either",
    "start": "1291030",
    "end": "1296100"
  },
  {
    "text": "pick another AWS account or a service in this case I'm gonna pick a service and I want something that's going to work with AWS lambda so I'll pick AWS service a",
    "start": "1296100",
    "end": "1304080"
  },
  {
    "text": "new AWS lambda and then it's gonna ask me to pick what policy I want with the role so these are all the manage Paul",
    "start": "1304080",
    "end": "1310170"
  },
  {
    "text": "and Kyle had one that was a read-only s3 access so what I'll do is I'll pick one",
    "start": "1310170",
    "end": "1316350"
  },
  {
    "text": "that's s3 full access for my role I'll give it a rule name we'll just call it s3 full access and the description we'll",
    "start": "1316350",
    "end": "1323970"
  },
  {
    "text": "call it full access to s3 on lambda and now here's one of the interesting parts",
    "start": "1323970",
    "end": "1329940"
  },
  {
    "text": "about Wizards so in addition to creating AWS resources it can also integrate directly into the AWS CLI because it's",
    "start": "1329940",
    "end": "1336480"
  },
  {
    "text": "run client-side so what it's asking now is we're about to create a role do you want to configure a profile for the CLI",
    "start": "1336480",
    "end": "1341670"
  },
  {
    "text": "that can then use that role now since you already saw how to do that with Kyle's previous demo I'm going to select no also because we want to use this in a",
    "start": "1341670",
    "end": "1348120"
  },
  {
    "text": "lambda function so I'll say no and I'll go ahead and create this lambda or this I am role for me now even though I",
    "start": "1348120",
    "end": "1355410"
  },
  {
    "text": "created the role for me one of the things I might be interested in is eventually once I get to a point where I have created this role enough times and",
    "start": "1355410",
    "end": "1361980"
  },
  {
    "text": "I don't want to be answering questions how do I actually go about scripting this we still want to make sure that the scripting use case for the AWS CLI is",
    "start": "1361980",
    "end": "1368610"
  },
  {
    "text": "still very much possible and so one of the ways that the AWS Wizards integrates with this is you can use a feature that",
    "start": "1368610",
    "end": "1374640"
  },
  {
    "text": "Kyle showed in a reinvent talk last year which is a history command so I can run a history show and I should mention that",
    "start": "1374640",
    "end": "1380940"
  },
  {
    "text": "this is off by default you do have to explicitly enable this feature in your config file but if I run this command",
    "start": "1380940",
    "end": "1386190"
  },
  {
    "text": "what it's going to show me is all of the API calls that were made from the last command that I ran so these are all the",
    "start": "1386190",
    "end": "1391290"
  },
  {
    "text": "API calls that happen during the wizard new role command and we can see that the first one is a list policies command",
    "start": "1391290",
    "end": "1397980"
  },
  {
    "text": "that was when it was asking us what's the manage policy that we want to create it also then eventually created the role",
    "start": "1397980",
    "end": "1403470"
  },
  {
    "text": "for us and we'll look at a another version of this policy document in just a second and then you can see once it",
    "start": "1403470",
    "end": "1408990"
  },
  {
    "text": "created the role didn't called I am attached pool policy with the with the role arm and so I can start to see if I",
    "start": "1408990",
    "end": "1415260"
  },
  {
    "text": "wanted to either convert this into a CLI script or maybe use photo 3 or another AWS SDK I know I'm able to see how all",
    "start": "1415260",
    "end": "1422310"
  },
  {
    "text": "of this is put together and if I just wanted to double check that I can run it obvious I am and then we'll just look at",
    "start": "1422310",
    "end": "1428400"
  },
  {
    "text": "the role here call it full access and we",
    "start": "1428400",
    "end": "1435390"
  },
  {
    "text": "can see the policy document here it did allow lambda to assume the role and if we wanted to now check the",
    "start": "1435390",
    "end": "1442620"
  },
  {
    "text": "a list attachable policies just to make sure that the role is attached we can",
    "start": "1442620",
    "end": "1453120"
  },
  {
    "text": "see yeah the s3 full access is attached okay so we've created a wall and now let's finish this by creating a lambda",
    "start": "1453120",
    "end": "1459330"
  },
  {
    "text": "function that uses this role and so I'll show you one more wizard that we've added here I can run lambda and then",
    "start": "1459330",
    "end": "1465420"
  },
  {
    "text": "there is a new function wizard here and what this is going to ask me is a couple of questions to set up this lambda",
    "start": "1465420",
    "end": "1471510"
  },
  {
    "text": "function so what I'll do is I'll call it s3 full access now it's going to ask me",
    "start": "1471510",
    "end": "1477960"
  },
  {
    "text": "to select the Python run or the lambda runtime being a Python developer I'll pick Python and then it's going to ask",
    "start": "1477960",
    "end": "1483809"
  },
  {
    "text": "me to pick a role for this function and I'm gonna use the role that I just created which was the s3 full access",
    "start": "1483809",
    "end": "1489179"
  },
  {
    "text": "role and now it's gonna ask me a couple more questions the same time I've already created a lambda lambda code",
    "start": "1489179",
    "end": "1495600"
  },
  {
    "text": "snippet that will just use so I'll just provide those values here app dot Handler and then the path to it be",
    "start": "1495600",
    "end": "1501809"
  },
  {
    "text": "wizard and then this is it file here and so it created this lambda function for",
    "start": "1501809",
    "end": "1506880"
  },
  {
    "text": "me and I can do the same thing if I wanted to see what the commands were that were run as part of this wizard I",
    "start": "1506880",
    "end": "1512520"
  },
  {
    "text": "can run the history show and then see there was a list rules call and then there was a lambda create function that",
    "start": "1512520",
    "end": "1517770"
  },
  {
    "text": "had the particular role that I specified and then the run time and all the other values that I specified and just to show",
    "start": "1517770",
    "end": "1524400"
  },
  {
    "text": "you what that function is doing we'll just take a look at it real quick so I'll just doing is just verifying the",
    "start": "1524400",
    "end": "1529650"
  },
  {
    "text": "policies so it creates an s3 client an ec2 client and then it's going to make an s3 call here and then it's going to",
    "start": "1529650",
    "end": "1536070"
  },
  {
    "text": "make ec2 call here and record if it's success or fail and just give us a results just so that we can verify the",
    "start": "1536070",
    "end": "1541980"
  },
  {
    "text": "wool was working as we expect so I'll go ahead and invoke this function here using the lambda invoke call and it will",
    "start": "1541980",
    "end": "1550410"
  },
  {
    "text": "give it our function name and then save the results to a file once this runs",
    "start": "1550410",
    "end": "1556260"
  },
  {
    "text": "we'll take a look at the output here we'll just pretty print the JSON and we",
    "start": "1556260",
    "end": "1564960"
  },
  {
    "text": "can see the results that we expected the s3 call succeeded and then the ec2 call",
    "start": "1564960",
    "end": "1570059"
  },
  {
    "text": "failed which is what we would expect and that's about it for the Wizards demo one",
    "start": "1570059",
    "end": "1576090"
  },
  {
    "text": "of the things that I wanted to stress here is that in addition to just giving you almost a guided tour through how to create an AWS",
    "start": "1576090",
    "end": "1583410"
  },
  {
    "text": "resource for particular service it also still leverages all the parts of the CLI including the history command in",
    "start": "1583410",
    "end": "1588960"
  },
  {
    "text": "order to help you start to convert some of the things that you're doing interactively into automated scripts now",
    "start": "1588960",
    "end": "1594960"
  },
  {
    "text": "I mentioned that this was part of the second theme of interactive usage and in addition to wizards and being able to",
    "start": "1594960",
    "end": "1600390"
  },
  {
    "text": "navigate your way through the various AWS services another big part of",
    "start": "1600390",
    "end": "1605400"
  },
  {
    "text": "interactive usage is when you know the command you want to run or you know you have an idea of approximately what you",
    "start": "1605400",
    "end": "1611160"
  },
  {
    "text": "want to run being able to quickly enter it being able to do that in an efficient manner and what Kyle's going to talk about next is some of the things we've",
    "start": "1611160",
    "end": "1617580"
  },
  {
    "text": "added to CLI v2 to make that easier particularly with discoverability thanks",
    "start": "1617580",
    "end": "1624240"
  },
  {
    "start": "1623000",
    "end": "1734000"
  },
  {
    "text": "James so if we go back to slides so in terms",
    "start": "1624240",
    "end": "1630000"
  },
  {
    "text": "of the permits to discoverability I want to go over my most favorite feature we've added to the seal IV too so far",
    "start": "1630000",
    "end": "1635490"
  },
  {
    "text": "which is the improvements to its autocomplete with v1 the CLI you're able",
    "start": "1635490",
    "end": "1641340"
  },
  {
    "text": "to autocomplete command names and parameters so all I have to do is specify a complete datums completer and",
    "start": "1641340",
    "end": "1647730"
  },
  {
    "text": "a Tobias arguments and you can start going ahead and doing Auto completion so I cannot have complete things such as a",
    "start": "1647730",
    "end": "1654450"
  },
  {
    "text": "Taurus space you see and hit tab and I'll get all the service commands that start with C so EC to EC our ECS I can",
    "start": "1654450",
    "end": "1662880"
  },
  {
    "text": "also add complete parameters so if I hit tab after typing in - it - - and for the",
    "start": "1662880",
    "end": "1668940"
  },
  {
    "text": "scribe instances command will return back to the instance IDs as parameters now for div - we've been building on the",
    "start": "1668940",
    "end": "1676740"
  },
  {
    "text": "auto completion specifically we've made it faster with CLI v1 we would have to",
    "start": "1676740",
    "end": "1682049"
  },
  {
    "text": "load up all the service models from disk each time we hit tab complete and now we're using a cache index that speeds",
    "start": "1682049",
    "end": "1687240"
  },
  {
    "text": "things up and the second feature we've added it's been inspired from another",
    "start": "1687240",
    "end": "1692280"
  },
  {
    "text": "project we work on called native shell which is resource value auto completion and the idea is that if I was to type",
    "start": "1692280",
    "end": "1699000"
  },
  {
    "text": "out a command say the delete table hit - chest table name hit tab it will return to me all the different tables I have",
    "start": "1699000",
    "end": "1704880"
  },
  {
    "text": "available in my account and the CLI is doing this by run dynamodb lists tables underneath the",
    "start": "1704880",
    "end": "1710179"
  },
  {
    "text": "hood and returning back you your table names furthermore we have over 5000",
    "start": "1710179",
    "end": "1715369"
  },
  {
    "text": "completions for these resource values largely thanks do we have completion models that map parameter ids to",
    "start": "1715369",
    "end": "1720739"
  },
  {
    "text": "resource identifiers and know how to obtain those resource identifiers with what operation furthermore will be",
    "start": "1720739",
    "end": "1727669"
  },
  {
    "text": "automatically generating these as well for every new release so get Auto completions for new features and new services as they come out so now",
    "start": "1727669",
    "end": "1735559"
  },
  {
    "start": "1734000",
    "end": "1933000"
  },
  {
    "text": "let's go ahead and demo how about a complete looks from with the CIB too so",
    "start": "1735559",
    "end": "1742999"
  },
  {
    "text": "in order to start using autocomplete I need to run the ATIS complete compare the complete command with Idris completer and AWS and from there I have",
    "start": "1742999",
    "end": "1754489"
  },
  {
    "text": "autocomplete setup so what I'm gonna do now is modify some of the resources that",
    "start": "1754489",
    "end": "1759830"
  },
  {
    "text": "James created in his previous demo using the autocomplete so what do we do now is",
    "start": "1759830",
    "end": "1765859"
  },
  {
    "text": "run a de Bresse I am update role description command so if I tap complete this eye right now I'll see all the",
    "start": "1765859",
    "end": "1772820"
  },
  {
    "text": "services that begin at I so I can auto complete the I am command and now I need",
    "start": "1772820",
    "end": "1778639"
  },
  {
    "text": "the update role description command so if I hit are typing up in a tab I returned back to me all the Higham",
    "start": "1778639",
    "end": "1784789"
  },
  {
    "text": "commands that start with up specifically we're gonna want this one right here so",
    "start": "1784789",
    "end": "1791379"
  },
  {
    "text": "I'm gonna go ahead autocomplete my way to finishing this command name and now I",
    "start": "1791379",
    "end": "1797119"
  },
  {
    "text": "need to specify a role name so if it - - alright hit tab you'll see that I have a region enroll name option to choose from",
    "start": "1797119",
    "end": "1803659"
  },
  {
    "text": "I'm gonna choose the role name and now let's choose this the s3 role that James created so if I type s3 - hit tab it",
    "start": "1803659",
    "end": "1812350"
  },
  {
    "text": "will print out the two different s3 related role names we have so s3 full",
    "start": "1812350",
    "end": "1818119"
  },
  {
    "text": "access to someone he created and there's s we read only that I used to my demo so I'll go ahead and tap complete the full",
    "start": "1818119",
    "end": "1824480"
  },
  {
    "text": "access role name and then add a new scripture to it so specifically I'm gonna add description this is new now",
    "start": "1824480",
    "end": "1832999"
  },
  {
    "text": "we're gonna run it you can see the description has been updated - this is new",
    "start": "1832999",
    "end": "1838340"
  },
  {
    "text": "and the cool part about the cool part about thought of completion is that",
    "start": "1838340",
    "end": "1843500"
  },
  {
    "text": "applies to not only just I am applies to most services that a WI supports so",
    "start": "1843500",
    "end": "1849710"
  },
  {
    "text": "let's go ahead and update the lambda function that James created as well and to do that we're gonna run the ada best lamda update function configuration",
    "start": "1849710",
    "end": "1860000"
  },
  {
    "text": "command notice that I'm Auto completing all these and autocomplete of the function",
    "start": "1860000",
    "end": "1866090"
  },
  {
    "text": "name and now if I hit tab with no value it will return to me all the lambda",
    "start": "1866090",
    "end": "1871760"
  },
  {
    "text": "functions out of available in my account for that region so you can see there's this s3 full access that I want and now",
    "start": "1871760",
    "end": "1878000"
  },
  {
    "text": "I can go ahead and how to complete that and now to update the land function let's go ahead and update this runtime",
    "start": "1878000",
    "end": "1884420"
  },
  {
    "text": "from Python to seven to python 36 in order to help james give the x and once",
    "start": "1884420",
    "end": "1894290"
  },
  {
    "text": "i run that commands you can see that the runtime is in fact updated to python 3 6 so that's about it i want to show for",
    "start": "1894290",
    "end": "1901760"
  },
  {
    "text": "this demo but the one thing i really hope you all took out of it is how much more natural it is to type in commands from the COI you no longer have to run",
    "start": "1901760",
    "end": "1909170"
  },
  {
    "text": "another CLI command to figure out all the resources you have available to you and copy/paste that overs of the current",
    "start": "1909170",
    "end": "1914420"
  },
  {
    "text": "CLI command you're working on you can simply hit tab to find your resource values and continue to hit tab to",
    "start": "1914420",
    "end": "1919490"
  },
  {
    "text": "complete your CLI commands hilt completion so now what I'm gonna do is pass it over to James and he's gonna go",
    "start": "1919490",
    "end": "1925730"
  },
  {
    "text": "over the last theme which is the higher level features that we've added to the CLI me too thank you so for this last",
    "start": "1925730",
    "end": "1935690"
  },
  {
    "start": "1933000",
    "end": "1990000"
  },
  {
    "text": "theme of CLI v2 in order to show you the high level commands what we're going to do is show them to you through a sample",
    "start": "1935690",
    "end": "1943100"
  },
  {
    "text": "app so we're gonna have a sample application that we'll walk through in just a second we wanted to show you rather than just showing you the commands by themselves show them maybe",
    "start": "1943100",
    "end": "1949190"
  },
  {
    "text": "how you might use them in context maybe in your day to day as you're working on developing an app and how you can use",
    "start": "1949190",
    "end": "1954440"
  },
  {
    "text": "the AWS CLI to help troubleshoot and debug the application and in order to do",
    "start": "1954440",
    "end": "1959720"
  },
  {
    "text": "this we're going to use some high-level commands that we've added we mentioned earlier if you're an experienced CLI user you've probably used the s3",
    "start": "1959720",
    "end": "1966320"
  },
  {
    "text": "commands and also ran into the s3 API commands and just by providing",
    "start": "1966320",
    "end": "1971610"
  },
  {
    "text": "that are a little bit more idiomatic for a CLI user the LS command CP R M commands it makes it easier for you to",
    "start": "1971610",
    "end": "1978210"
  },
  {
    "text": "get up and running with a new high-level abstraction because you don't have to relearn all these new concepts now with",
    "start": "1978210",
    "end": "1984720"
  },
  {
    "text": "that in mind what we're going to do now is switch back over and walk through the sample application for you so the idea",
    "start": "1984720",
    "end": "1991470"
  },
  {
    "start": "1990000",
    "end": "2079000"
  },
  {
    "text": "behind the sample application is a media query app the idea is you upload things to our application and it'll figure out",
    "start": "1991470",
    "end": "1997350"
  },
  {
    "text": "what it detects in the image so what Kyle's going to do here is upload a picture of a puppy he's gonna hit submit",
    "start": "1997350",
    "end": "2003280"
  },
  {
    "text": "what this is doing is it's taking it and sending it to our back-end code and then it's gonna analyze it and figure out",
    "start": "2003280",
    "end": "2008960"
  },
  {
    "text": "what's in the image and then put certain labels on it so as you can see here it's detected that there it's a dog or pet or",
    "start": "2008960",
    "end": "2015710"
  },
  {
    "text": "a puppy and then can also click on the image here and we can see it is in fact a picture of an adorable Kogi puppy this",
    "start": "2015710",
    "end": "2022880"
  },
  {
    "text": "is actually a co-worker's puppy okay and we can also upload another picture as well so we'll just show you some of the",
    "start": "2022880",
    "end": "2028309"
  },
  {
    "text": "other labels that I can detect we'll also upload a picture of a dog and hit submit here and what it's going to",
    "start": "2028309",
    "end": "2035000"
  },
  {
    "text": "do is the same thing it's going to process figure out what's in the image and then here we can see it says that it's also a dog but it looks like",
    "start": "2035000",
    "end": "2042380"
  },
  {
    "text": "there's ice and snow and it's having an adventure of some sort so if we click on this image we can see that yeah it is a",
    "start": "2042380",
    "end": "2049760"
  },
  {
    "text": "dog and it is outdoors and the ice and snow having an adventure okay so that is",
    "start": "2049760",
    "end": "2056300"
  },
  {
    "text": "the part in terms of uploading the app or uploading images to the app there's also the ability to filter them so in",
    "start": "2056300",
    "end": "2062658"
  },
  {
    "text": "the upper right hand side here we can search for say images that contain puppy and we search for that we just see the",
    "start": "2062659",
    "end": "2068780"
  },
  {
    "text": "one image of the puppy we can clear that and then on the right hand side just for completeness there's also the ability to",
    "start": "2068780",
    "end": "2074270"
  },
  {
    "text": "delete images as well so if you search for puppy it's now gonna be gone okay so",
    "start": "2074270",
    "end": "2079940"
  },
  {
    "start": "2079000",
    "end": "2199000"
  },
  {
    "text": "that was a quick walk through of the sample app we'll switch back to the slides and I'll walk you through the architecture just for a second so we can",
    "start": "2079940",
    "end": "2085790"
  },
  {
    "text": "understand how the CLI commands are helping us so the first thing to note here is that this is a serverless",
    "start": "2085790",
    "end": "2091878"
  },
  {
    "text": "application it is run with using AWS lamda as the backend compute service and there's really three parts to this",
    "start": "2091879",
    "end": "2098180"
  },
  {
    "text": "application there's the back ettor there's a REST API through Amazon API gateway and that's paired with a lambda",
    "start": "2098180",
    "end": "2104210"
  },
  {
    "text": "phone that's an API Handler and that's then depending on what the request is either going to upload the image to s3 or it's",
    "start": "2104210",
    "end": "2110809"
  },
  {
    "text": "going to query our Amazon DynamoDB database and then the second part of the app is this back-end part so once we",
    "start": "2110809",
    "end": "2117380"
  },
  {
    "text": "upload an image to s3 is configured with s3 event notifications and that itself is hooked up to lambda functions that",
    "start": "2117380",
    "end": "2123410"
  },
  {
    "text": "are going to download the image and then send it to another service Amazon recognition and that's what actually does the heavy lifting of taking the",
    "start": "2123410",
    "end": "2129890"
  },
  {
    "text": "image of figuring out what labels are in the image and then setting it back to us and then we take that response we",
    "start": "2129890",
    "end": "2136130"
  },
  {
    "text": "transform it a little bit and you store it into our DynamoDB table and that's what the API handler is using to query",
    "start": "2136130",
    "end": "2143049"
  },
  {
    "text": "the when we get requests for searching and then the third part is off on the",
    "start": "2143049",
    "end": "2148130"
  },
  {
    "text": "bottom there which is Canaries and that's triggered using cloud watch events so every minute we have a lambda",
    "start": "2148130",
    "end": "2153319"
  },
  {
    "text": "function that's invoked and then that lambda function will then hit the public API of our REST API and then record the",
    "start": "2153319",
    "end": "2160940"
  },
  {
    "text": "response so if you get a 200 status code it will then take that and send it to a cloud watch metric and we have alarms",
    "start": "2160940",
    "end": "2167750"
  },
  {
    "text": "based on the cloud watch metric if it drops below a certain threshold one other thing I wanted to mention we won't",
    "start": "2167750",
    "end": "2173569"
  },
  {
    "text": "have any time really to get into a lot of details on the architecture if this is interesting to you this is all",
    "start": "2173569",
    "end": "2179539"
  },
  {
    "text": "written using a framework called AWS Challis as I mentioned that something that Kyle and I worked on and if you",
    "start": "2179539",
    "end": "2184970"
  },
  {
    "text": "want to learn more about this we're doing there's a chalk talk tomorrow and Thursday where we go into a lot more detail it's a lot more open discussion",
    "start": "2184970",
    "end": "2191390"
  },
  {
    "text": "about just serverless and how to use AWS Challis to write into plug these types of application I just wanted to put that",
    "start": "2191390",
    "end": "2197930"
  },
  {
    "text": "out there in case you're interested now what we'll do is we'll switch back over to the demo app and walk through a",
    "start": "2197930",
    "end": "2203690"
  },
  {
    "start": "2199000",
    "end": "2475000"
  },
  {
    "text": "couple of things about how the CLI might help you so let's go ahead and refresh the page and the first thing we notice is that it looks like our data is not",
    "start": "2203690",
    "end": "2210380"
  },
  {
    "text": "coming through something's wrong right so let's say that we're working on the app some things not work it's not working the way we want and so we want",
    "start": "2210380",
    "end": "2216380"
  },
  {
    "text": "to try to debug what's going on so the first thing we might do is well switch over to our dashboard as I mentioned we",
    "start": "2216380",
    "end": "2221420"
  },
  {
    "text": "have Canaries maybe people look at it and try to refresh and see if we see you drop we're not really seeing anything here so maybe",
    "start": "2221420",
    "end": "2227690"
  },
  {
    "text": "what we'll do is we'll switch over to the logs so if we go into our CLI shell",
    "start": "2227690",
    "end": "2232880"
  },
  {
    "text": "here what we can do is run a new command that we've added which is a W logs AWS",
    "start": "2232880",
    "end": "2237920"
  },
  {
    "text": "logs tail if you've used a tail command it's very similar to what you would do on just a normal text file and you provide",
    "start": "2237920",
    "end": "2244940"
  },
  {
    "text": "the name of a law group also notice here we're using server-side autocomplete so we don't have to type that long law group name so if we run this it's going",
    "start": "2244940",
    "end": "2251510"
  },
  {
    "text": "to give us the most recent logs for I believe it's the I think the most ten",
    "start": "2251510",
    "end": "2258349"
  },
  {
    "text": "recent ten minutes of logs and if we look at the output here it's we can kind",
    "start": "2258349",
    "end": "2263569"
  },
  {
    "text": "of see there's a 500 what we'll do is we'll shorten the output there's another option we added which is the - - format short that's just going to remove the",
    "start": "2263569",
    "end": "2269779"
  },
  {
    "text": "log stream name for us and then if we scroll back up ya we'll see that there's a 500 so it seems like that's maybe",
    "start": "2269779",
    "end": "2275450"
  },
  {
    "text": "what's happening and because we're using the external API it's not going to give us a lot of internal details about why",
    "start": "2275450",
    "end": "2281450"
  },
  {
    "text": "it's just saying that there was a 500 that happened and so in order to figure out what's happening we can look at the",
    "start": "2281450",
    "end": "2286579"
  },
  {
    "text": "logs for the API handler lambda function and that will have a lot more detail so we're gonna use the tail command again and then notice it was the server side",
    "start": "2286579",
    "end": "2293240"
  },
  {
    "text": "auto completion as well and if we run this we should see a little bit more detail about what went wrong and we can",
    "start": "2293240",
    "end": "2298309"
  },
  {
    "text": "see here that yeah in fact we're getting a provision throughput exceeded exception because we were running a scan",
    "start": "2298309",
    "end": "2304549"
  },
  {
    "text": "operation and we exceeded that throughput and so one other thing we can do just to verify this theory is we can",
    "start": "2304549",
    "end": "2310549"
  },
  {
    "text": "run the same command but with - - follow this is similar to tail - F if you used",
    "start": "2310549",
    "end": "2316250"
  },
  {
    "text": "that command in terminal and what we'll do is we'll hop back over to the other page and refresh and as the logs are",
    "start": "2316250",
    "end": "2323119"
  },
  {
    "text": "sent to the log group we should see them appear at the terminal below what that's going to allow us to do is just confirm",
    "start": "2323119",
    "end": "2328609"
  },
  {
    "text": "that we are seeing the behavior that we expect so we may be refreshed just a few more times and then just see if we can",
    "start": "2328609",
    "end": "2335119"
  },
  {
    "text": "see the 500 actually happening that would be the ideal situation here now sometimes it does take a few seconds for",
    "start": "2335119",
    "end": "2341299"
  },
  {
    "text": "the logs to propagate but eventually maybe after anywhere from like a couple",
    "start": "2341299",
    "end": "2347420"
  },
  {
    "text": "seconds to maybe 30 seconds we'll see it and we do see the actual log message come up it does a provision exceeded throughput exception so now we have an",
    "start": "2347420",
    "end": "2355250"
  },
  {
    "text": "idea of what's wrong we can go ahead and fix it to alleviate the pain now what we'll do is we'll just take the error message of suggestion Cal just update",
    "start": "2355250",
    "end": "2361309"
  },
  {
    "text": "the provision throughput of the table while he's doing that just mention that there are other ways to solve this you could potentially look at auto scaling",
    "start": "2361309",
    "end": "2368180"
  },
  {
    "text": "policies for DynamoDB maybe not have a scan for your index page or investigate other",
    "start": "2368180",
    "end": "2373640"
  },
  {
    "text": "architectural choices like putting a caching layer in front of this so you don't hit the database on every request but well update the table here and",
    "start": "2373640",
    "end": "2380150"
  },
  {
    "text": "notice again for the dynamo DB command he was able to use server-side auto completion on the table name and now",
    "start": "2380150",
    "end": "2387769"
  },
  {
    "text": "we'll just bump the provision throughput up to 50 and we'll see if that's going to fix the immediate issue so what we",
    "start": "2387769",
    "end": "2395749"
  },
  {
    "text": "can do now is run the - follow command again on that log group and we'll yeah",
    "start": "2395749",
    "end": "2401029"
  },
  {
    "text": "give it some space and then refresh and after a while but we should see is once the provision throughput actually takes",
    "start": "2401029",
    "end": "2407779"
  },
  {
    "text": "we should see that we're able to get these results again so that was really just showing how the high-level logs",
    "start": "2407779",
    "end": "2413930"
  },
  {
    "text": "tail command can help you troubleshoot an issue as you're working on say a service application another high-level",
    "start": "2413930",
    "end": "2420440"
  },
  {
    "text": "command to me wanted to show is related to dynamo DB and in order to show that we'll show you let's say that we're",
    "start": "2420440",
    "end": "2426739"
  },
  {
    "text": "working on the app and we run into a bug so what I was gonna do here is he's going to upload a file and we'll pick a",
    "start": "2426739",
    "end": "2432769"
  },
  {
    "text": "file called image with percent and if we submit this and refresh it'll look like",
    "start": "2432769",
    "end": "2439099"
  },
  {
    "text": "everything is fine it's actually the same images dog dot jpg but if we pick the file for you click on it now what",
    "start": "2439099",
    "end": "2445759"
  },
  {
    "text": "we're gonna see is we're getting an error and so we want to try to figure out what's going on the first thing that really stands out is it's a % and it's",
    "start": "2445759",
    "end": "2452180"
  },
  {
    "text": "in the URL so our guess is maybe it's not URL encoded properly so if you just will just test it the real quick by",
    "start": "2452180",
    "end": "2458329"
  },
  {
    "text": "changing the URL and so if we add % 25 it looks like yeah ok the the image is",
    "start": "2458329",
    "end": "2463759"
  },
  {
    "text": "coming up so now that we know what's causing the issue now we can start to investigate worse is coming from our restoring them the database wrong",
    "start": "2463759",
    "end": "2470119"
  },
  {
    "text": "are we not presenting it properly in the UI and so our first guess might be let's check the database right and so what we",
    "start": "2470119",
    "end": "2475819"
  },
  {
    "start": "2475000",
    "end": "2811000"
  },
  {
    "text": "can do if we were using CLI v1 we can use the dynamo DB scan operation and we'll give it the table name for",
    "start": "2475819",
    "end": "2482209"
  },
  {
    "text": "application and if you haven't seen the output before for dynamo deeper sea",
    "start": "2482209",
    "end": "2487219"
  },
  {
    "text": "alive it gives you the output directly from dynamo doesn't do any transformation on the data and so the",
    "start": "2487219",
    "end": "2493369"
  },
  {
    "text": "way you would read this is there's an items list and then there's an attribute here that says URI and then the S colon",
    "start": "2493369",
    "end": "2498769"
  },
  {
    "text": "and the value is how dynamodb encodes types so that's saying that's a string type and then say the labels key there's",
    "start": "2498769",
    "end": "2504380"
  },
  {
    "text": "an L for list and then the list of values so each one of those is a string and you see s dog s animal and if you've used an AWS SDK",
    "start": "2504380",
    "end": "2512190"
  },
  {
    "text": "before typically you'll use the document level API which attracts a lot of these details away but in the AWS CLI we just",
    "start": "2512190",
    "end": "2518610"
  },
  {
    "text": "gave you the response directly as it came back so one of the things that we've added in CLI v2 are new high-level",
    "start": "2518610",
    "end": "2523890"
  },
  {
    "text": "commands to make this more streamlined and they're in the ddb command so if you",
    "start": "2523890",
    "end": "2528930"
  },
  {
    "text": "run help here we'll see that there's two new operations we've added this is just the start of them we plan on adding more",
    "start": "2528930",
    "end": "2533970"
  },
  {
    "text": "but there's a put and a select command and what we'll do is we'll walk you through how these commands work starting",
    "start": "2533970",
    "end": "2540060"
  },
  {
    "text": "with select so if we run the select command with a table name notice here it's a positional argument and again",
    "start": "2540060",
    "end": "2545370"
  },
  {
    "text": "it's using the server-side auto-completion so we don't have to type this name will go ahead and pipe this too less and you should notice two",
    "start": "2545370",
    "end": "2551250"
  },
  {
    "text": "immediate changes the first one is that the format is enamel so instead of showing you JSON is using gamal and I",
    "start": "2551250",
    "end": "2557880"
  },
  {
    "text": "should also mention that we didn't have time to show it today but there's actually a - - output Yamma format so there was JSON table and text that we",
    "start": "2557880",
    "end": "2564180"
  },
  {
    "text": "showed there's now also in yellow format the other thing we should notice is that it's not using the DynamoDB encoded",
    "start": "2564180",
    "end": "2569940"
  },
  {
    "text": "types it's just using the normally amal types so for example the labels where it says animal dog pet they're just in",
    "start": "2569940",
    "end": "2575100"
  },
  {
    "text": "yellow strings and then the labels instead of saying is with dynamodb lists it's just a yamo list so it's just the native types here now if we scroll down",
    "start": "2575100",
    "end": "2582330"
  },
  {
    "text": "to the very bottom we can see yeah there's an image with % and it looks like it is being stored in the database",
    "start": "2582330",
    "end": "2588270"
  },
  {
    "text": "incorrectly so let's just query a few more things to check that one thing I want to show is the key conditions so we",
    "start": "2588270",
    "end": "2594420"
  },
  {
    "text": "can say - - key condition and we'll just look for that specific key you wouldn't really do this in practice just showing",
    "start": "2594420",
    "end": "2600510"
  },
  {
    "text": "you how you can use key conditions here but we can say image with % and we'll run this command and we should just get",
    "start": "2600510",
    "end": "2606930"
  },
  {
    "text": "the one result back now one of the things that I stressed in the earlier demo was that even though we have these",
    "start": "2606930",
    "end": "2612420"
  },
  {
    "text": "high-level abstractions to make things more efficient for you we still want you to be able to see exactly what's going on and so we can also now leverage the",
    "start": "2612420",
    "end": "2618480"
  },
  {
    "text": "history show command to see exactly what was happening when we ran that select command so we'll run a double history",
    "start": "2618480",
    "end": "2623940"
  },
  {
    "text": "show and say that we only want to see the API calls and what we'll notice is DynamoDB we're using a dynamo DB query",
    "start": "2623940",
    "end": "2629370"
  },
  {
    "text": "operation and these are the parameters you'd have to specify in CLI v1 so you'd provide a key condition and you have the",
    "start": "2629370",
    "end": "2635400"
  },
  {
    "text": "pound and 0 equals colon n1 when you map what n0 is for the ad names and then you map what and one is",
    "start": "2635400",
    "end": "2641779"
  },
  {
    "text": "in terms of the attribute values can use the DynamoDB encoded type saying s : and then the string and so we're attracting",
    "start": "2641779",
    "end": "2647660"
  },
  {
    "text": "all of that detail away so you can just say the type of query you want more succinctly now let's say if we're going",
    "start": "2647660",
    "end": "2652969"
  },
  {
    "text": "to fix this we want to know how many keys are affected so rather than do the key condition what we're going to do is use dash dash filter and we want to look",
    "start": "2652969",
    "end": "2658969"
  },
  {
    "text": "for any item that has a name attribute that contains a percent so what we can",
    "start": "2658969",
    "end": "2664369"
  },
  {
    "text": "do here is use a dash dash filter operation the contains function and now if we run this command they should give",
    "start": "2664369",
    "end": "2669979"
  },
  {
    "text": "us every key that's affected that has a percent in the name and we can see we got lucky there's only one point data",
    "start": "2669979",
    "end": "2676910"
  },
  {
    "text": "point here and just to show you again we'll just up arrow and run the history show command and what I wanted to point",
    "start": "2676910",
    "end": "2682160"
  },
  {
    "text": "out here is notice it's using scan so it knows that if you're giving a key condition we can use query if it's a filter expression it's using scan and",
    "start": "2682160",
    "end": "2687979"
  },
  {
    "text": "it's still doing the same pound and 0 colon n1 and mapping them appropriately so it's stuff that you don't have to",
    "start": "2687979",
    "end": "2693950"
  },
  {
    "text": "worry about but if you did want to see how this was working and you potentially want it to start scripting this you could at least look at the history show",
    "start": "2693950",
    "end": "2700190"
  },
  {
    "text": "command to see what's happening ok so now we've done that let's wrap this up by trying to fix the issue what we'll do",
    "start": "2700190",
    "end": "2706249"
  },
  {
    "text": "is we'll use a dash dash query so this is available in the high level command as well I showed this in the earlier demo this is the James path expression to get just",
    "start": "2706249",
    "end": "2712400"
  },
  {
    "text": "the items and we'll save this to a file what I was going to do after this is just open the file and then fix the",
    "start": "2712400",
    "end": "2718039"
  },
  {
    "text": "percent-encoding shouldn't mention if this was a live there were a lot of Records affected we'd probably write a script to then manipulate the data and",
    "start": "2718039",
    "end": "2724640"
  },
  {
    "text": "do the URL encoding appropriately but we'll just go ahead and save it and now we need to put it back into the database and in order to do that we're going to",
    "start": "2724640",
    "end": "2731509"
  },
  {
    "text": "use the next command that we showed in ddb which is a put command the way that works is you have put and then the table",
    "start": "2731509",
    "end": "2737630"
  },
  {
    "text": "name is a positional parameter and then the yamo contents are the items you want to put here we'll use file colon slash slash to point to the items yamo file",
    "start": "2737630",
    "end": "2744709"
  },
  {
    "text": "well run this and it imports all the data back into DynamoDB we'll just run a select real quick to double-check that",
    "start": "2744709",
    "end": "2750229"
  },
  {
    "text": "everything's there and once we do that we should see the URI encoded",
    "start": "2750229",
    "end": "2755479"
  },
  {
    "text": "appropriately yeah we see the image with % 25 one other thing I wanted to mention is that it is very idiomatic in C lies",
    "start": "2755479",
    "end": "2762440"
  },
  {
    "text": "to have the output of one command pipe to the input of another command so if we were going to transform this you can specify - for standard in and then just",
    "start": "2762440",
    "end": "2769369"
  },
  {
    "text": "pipe the contents that you wanted to standard in and then on this so we can run this again and it's the same result one other thing I",
    "start": "2769369",
    "end": "2775720"
  },
  {
    "text": "wanted to mention is that it also is smart about looking at the number of items you are sending so if you do send",
    "start": "2775720",
    "end": "2781360"
  },
  {
    "text": "multiple items but also switch to a batch right if there is more than one and in this case is just using a put",
    "start": "2781360",
    "end": "2787270"
  },
  {
    "text": "item okay and so to wrap this up let's also go back to the main page now and refresh and we're going to confirm that",
    "start": "2787270",
    "end": "2793870"
  },
  {
    "text": "if we fix the issue in the database then when you click the image it looks like everything works so now we know where to",
    "start": "2793870",
    "end": "2800050"
  },
  {
    "text": "fix the bug we know that we need to make sure when we're ingesting the image and we're saving the attributes of DynamoDB to proper URL encode it and we're able",
    "start": "2800050",
    "end": "2806950"
  },
  {
    "text": "to use a CLI to help us figure that out okay so we'll switch back to the slides here",
    "start": "2806950",
    "end": "2811990"
  },
  {
    "start": "2811000",
    "end": "2884000"
  },
  {
    "text": "and we're just going to wrap up real quick we showed you today what was new with the CLI particularly AWS CLI v2 is under",
    "start": "2811990",
    "end": "2819040"
  },
  {
    "text": "active development and github we want your feedback try it out and let us know what you think in terms of what we showed today we showed things for",
    "start": "2819040",
    "end": "2825160"
  },
  {
    "text": "backwards incompatible and some of the feature removals improvements to the interactive usage so we look to",
    "start": "2825160",
    "end": "2830440"
  },
  {
    "text": "autocomplete we looked at CLI Wizards and finally to wrap it up we saw the high level commands using a sample app",
    "start": "2830440",
    "end": "2836920"
  },
  {
    "text": "where we looked at the dynamo DB select input and then the AWS logs tail command so the next steps for you if this is",
    "start": "2836920",
    "end": "2842320"
  },
  {
    "text": "interesting if you want to try it if you want to try this out you can go to our github page Kyle showed you earlier the",
    "start": "2842320",
    "end": "2848200"
  },
  {
    "text": "tag release it's on our github repo for v2 also all of the code that we're working on is developed openly on github",
    "start": "2848200",
    "end": "2853930"
  },
  {
    "text": "so there's a v2 branch that you can follow onions and changes if you want and then anything on github is related",
    "start": "2853930",
    "end": "2859720"
  },
  {
    "text": "to B to any labels any feature requests any pull requests will have the v2 branch on it",
    "start": "2859720",
    "end": "2865650"
  },
  {
    "text": "quick note complete the session survey it's how we get better let us know what you like and what you didn't like and we",
    "start": "2865650",
    "end": "2872020"
  },
  {
    "text": "hope that you all are excited about CLI v2 you try it out and let us know what you think and you help us shape the",
    "start": "2872020",
    "end": "2877420"
  },
  {
    "text": "future of the next major version of the AWS CLI thanks everyone thank you",
    "start": "2877420",
    "end": "2883310"
  },
  {
    "text": "[Applause]",
    "start": "2883310",
    "end": "2885880"
  }
]