[
  {
    "text": "hello my name is Tim Dormer Solutions",
    "start": "120",
    "end": "2600"
  },
  {
    "text": "architect AWS today we're going to dive",
    "start": "2600",
    "end": "5640"
  },
  {
    "text": "into using namespaces along with custom",
    "start": "5640",
    "end": "8160"
  },
  {
    "text": "DNS and custom certificates in this",
    "start": "8160",
    "end": "10480"
  },
  {
    "text": "example we'll be using two vpcs in vpca",
    "start": "10480",
    "end": "14040"
  },
  {
    "text": "I have Cloud9 client running on ec2",
    "start": "14040",
    "end": "16520"
  },
  {
    "text": "instance I'll use this both to control",
    "start": "16520",
    "end": "18560"
  },
  {
    "text": "my cluster deploy my yaml files also to",
    "start": "18560",
    "end": "21519"
  },
  {
    "text": "test access to the VPC ltis service my",
    "start": "21519",
    "end": "24400"
  },
  {
    "text": "eks cluster will be running in vpcb",
    "start": "24400",
    "end": "27039"
  },
  {
    "text": "we'll start out by creating a customer",
    "start": "27039",
    "end": "28800"
  },
  {
    "text": "certificate in AWS certificate manager",
    "start": "28800",
    "end": "31439"
  },
  {
    "text": "this needs to match the domain name we",
    "start": "31439",
    "end": "33079"
  },
  {
    "text": "wish to use for the VPC ltis service",
    "start": "33079",
    "end": "35280"
  },
  {
    "text": "itself then we'll create a Gateway",
    "start": "35280",
    "end": "37480"
  },
  {
    "text": "object in kubernetes with a listener",
    "start": "37480",
    "end": "39760"
  },
  {
    "text": "which references the ACM certificate we",
    "start": "39760",
    "end": "42280"
  },
  {
    "text": "do this by using the on of the",
    "start": "42280",
    "end": "43800"
  },
  {
    "text": "certificate next we'll create HTTP",
    "start": "43800",
    "end": "45800"
  },
  {
    "text": "routes for the VPC ltis services in",
    "start": "45800",
    "end": "48360"
  },
  {
    "text": "these HTTP routes we'll Define the",
    "start": "48360",
    "end": "50160"
  },
  {
    "text": "backend kubernetes Services their name",
    "start": "50160",
    "end": "53000"
  },
  {
    "text": "space and the custom domain name we wish",
    "start": "53000",
    "end": "55559"
  },
  {
    "text": "to use wrapping up the configuration",
    "start": "55559",
    "end": "57520"
  },
  {
    "text": "We'll add a Route 53 C name entry to map",
    "start": "57520",
    "end": "60399"
  },
  {
    "text": "the custom domain name to the",
    "start": "60399",
    "end": "61840"
  },
  {
    "text": "autogenerated VPC ltis domain name",
    "start": "61840",
    "end": "64360"
  },
  {
    "text": "finally we'll test the custom domain",
    "start": "64360",
    "end": "65920"
  },
  {
    "text": "names to access the services okay so",
    "start": "65920",
    "end": "68439"
  },
  {
    "text": "opening up the console selecting",
    "start": "68439",
    "end": "70400"
  },
  {
    "text": "certificate manager we'll start out by",
    "start": "70400",
    "end": "72320"
  },
  {
    "text": "requesting a certificate uh I'm going to",
    "start": "72320",
    "end": "74240"
  },
  {
    "text": "create a wild card certificate so I'm",
    "start": "74240",
    "end": "76040"
  },
  {
    "text": "just going to put asteris in",
    "start": "76040",
    "end": "78880"
  },
  {
    "text": "there let's request the",
    "start": "78880",
    "end": "82040"
  },
  {
    "text": "certificate and do a",
    "start": "82040",
    "end": "85280"
  },
  {
    "text": "refresh and you'll see it's pending",
    "start": "85280",
    "end": "87759"
  },
  {
    "text": "validation so we can do that through DNS",
    "start": "87759",
    "end": "91920"
  },
  {
    "text": "okay let's refresh it",
    "start": "98439",
    "end": "100799"
  },
  {
    "text": "again okay we see the certific is",
    "start": "100799",
    "end": "104200"
  },
  {
    "text": "issued go and get the the on for the the",
    "start": "104200",
    "end": "107119"
  },
  {
    "text": "certificate we're going to use that in",
    "start": "107119",
    "end": "108159"
  },
  {
    "text": "the next",
    "start": "108159",
    "end": "109079"
  },
  {
    "text": "step so here's the Gateway yaml file",
    "start": "109079",
    "end": "112479"
  },
  {
    "text": "that I've created so I've put in the on",
    "start": "112479",
    "end": "114520"
  },
  {
    "text": "there Asis in there we actually use an",
    "start": "114520",
    "end": "116960"
  },
  {
    "text": "asteris so let's take that out and put a",
    "start": "116960",
    "end": "119079"
  },
  {
    "text": "wild card in there instead we'll just",
    "start": "119079",
    "end": "121320"
  },
  {
    "text": "type it",
    "start": "121320",
    "end": "122640"
  },
  {
    "text": "out let's go and apply the Gateway and",
    "start": "122640",
    "end": "125280"
  },
  {
    "text": "we'll go and check that it's uh it's",
    "start": "125280",
    "end": "128520"
  },
  {
    "text": "reconciled okay it's not reconciled yet",
    "start": "128520",
    "end": "131360"
  },
  {
    "text": "let's go and refresh",
    "start": "131360",
    "end": "133360"
  },
  {
    "text": "again okay that",
    "start": "133360",
    "end": "135640"
  },
  {
    "text": "reconciled so we've got a few Services",
    "start": "135640",
    "end": "137800"
  },
  {
    "text": "here and the next step is that we're",
    "start": "137800",
    "end": "139080"
  },
  {
    "text": "going to create uh HTTP routes that",
    "start": "139080",
    "end": "141319"
  },
  {
    "text": "point to the back ends now you can see",
    "start": "141319",
    "end": "143040"
  },
  {
    "text": "I've got Hedgehog and badger in England",
    "start": "143040",
    "end": "145200"
  },
  {
    "text": "and I've got one bat and dingo that are",
    "start": "145200",
    "end": "146840"
  },
  {
    "text": "in the default Nam space and we're going",
    "start": "146840",
    "end": "149400"
  },
  {
    "text": "to create for both so let's start out",
    "start": "149400",
    "end": "151280"
  },
  {
    "text": "with animals Australia you can see that",
    "start": "151280",
    "end": "153800"
  },
  {
    "text": "we've defined the custom host name that",
    "start": "153800",
    "end": "155400"
  },
  {
    "text": "we wish to use for this service",
    "start": "155400",
    "end": "157200"
  },
  {
    "text": "australia. demo. vpcs",
    "start": "157200",
    "end": "160760"
  },
  {
    "text": "docomo underneath the section name",
    "start": "160760",
    "end": "163519"
  },
  {
    "text": "referenced the wildc car. demo. VPC",
    "start": "163519",
    "end": "167560"
  },
  {
    "text": "docomo back to the listener that we",
    "start": "167560",
    "end": "169560"
  },
  {
    "text": "configured in the Gateway in those two",
    "start": "169560",
    "end": "171720"
  },
  {
    "text": "lines you can see that we've got the",
    "start": "171720",
    "end": "173319"
  },
  {
    "text": "custom DNS configuration as well as the",
    "start": "173319",
    "end": "175400"
  },
  {
    "text": "custom certificate configuration in the",
    "start": "175400",
    "end": "177879"
  },
  {
    "text": "England HTTP rack configuration",
    "start": "177879",
    "end": "180560"
  },
  {
    "text": "you can see that we started to",
    "start": "180560",
    "end": "182080"
  },
  {
    "text": "incorporate the name spaces the back",
    "start": "182080",
    "end": "183959"
  },
  {
    "text": "ends in this case are both in the",
    "start": "183959",
    "end": "185680"
  },
  {
    "text": "England name space and the HTTP route",
    "start": "185680",
    "end": "187840"
  },
  {
    "text": "itself is in the England namespace we're",
    "start": "187840",
    "end": "189920"
  },
  {
    "text": "referencing the same wildcard dodo. pc-",
    "start": "189920",
    "end": "193560"
  },
  {
    "text": "l.com okay let's go ahead and apply both",
    "start": "193560",
    "end": "196200"
  },
  {
    "text": "of",
    "start": "196200",
    "end": "198400"
  },
  {
    "text": "those and we can see that both the HTTP",
    "start": "200480",
    "end": "203239"
  },
  {
    "text": "routes have been uh created so switching",
    "start": "203239",
    "end": "205640"
  },
  {
    "text": "back to console let's go and make sure",
    "start": "205640",
    "end": "207360"
  },
  {
    "text": "that the uh the target groups and the",
    "start": "207360",
    "end": "208840"
  },
  {
    "text": "services all been created so here we can",
    "start": "208840",
    "end": "210879"
  },
  {
    "text": "see the target groups and you notice",
    "start": "210879",
    "end": "212560"
  },
  {
    "text": "that we've got a dash England and a-h",
    "start": "212560",
    "end": "214239"
  },
  {
    "text": "default which uh corresponds to the name",
    "start": "214239",
    "end": "218840"
  },
  {
    "text": "space let's make sure that the VPC where",
    "start": "219760",
    "end": "222680"
  },
  {
    "text": "Cloud9 is is also added to the service",
    "start": "222680",
    "end": "227280"
  },
  {
    "text": "network okay let let's go back to the",
    "start": "238439",
    "end": "240360"
  },
  {
    "text": "services and just make sure that",
    "start": "240360",
    "end": "242439"
  },
  {
    "text": "everything looks good you can see that",
    "start": "242439",
    "end": "245000"
  },
  {
    "text": "we've got the autogenerated domain so",
    "start": "245000",
    "end": "247799"
  },
  {
    "text": "let's go and select that and we're going",
    "start": "247799",
    "end": "249920"
  },
  {
    "text": "to have to go and add that to um or",
    "start": "249920",
    "end": "252200"
  },
  {
    "text": "create a record in Route 53 so let's add",
    "start": "252200",
    "end": "255560"
  },
  {
    "text": "the name that we",
    "start": "255560",
    "end": "256880"
  },
  {
    "text": "want select C name and then paste in the",
    "start": "256880",
    "end": "261120"
  },
  {
    "text": "uh the URL",
    "start": "261120",
    "end": "263919"
  },
  {
    "text": "here I'm just going to shorten that just",
    "start": "264080",
    "end": "266600"
  },
  {
    "text": "as it's a demo",
    "start": "266600",
    "end": "270080"
  },
  {
    "text": "and then we're going to have to create a",
    "start": "271440",
    "end": "272680"
  },
  {
    "text": "record for um we need to grab the domain",
    "start": "272680",
    "end": "276000"
  },
  {
    "text": "for",
    "start": "276000",
    "end": "278199"
  },
  {
    "text": "that let's switch back select C name and",
    "start": "278520",
    "end": "282639"
  },
  {
    "text": "then paste paste that",
    "start": "282639",
    "end": "285759"
  },
  {
    "text": "in Okay so we've got VPC lus Services",
    "start": "294320",
    "end": "297639"
  },
  {
    "text": "set up across different name spaces or",
    "start": "297639",
    "end": "299320"
  },
  {
    "text": "the back ends are in different name",
    "start": "299320",
    "end": "300880"
  },
  {
    "text": "spaces Let's uh test that they",
    "start": "300880",
    "end": "304360"
  },
  {
    "text": "work let's go and try the uh the",
    "start": "307000",
    "end": "309560"
  },
  {
    "text": "Australia",
    "start": "309560",
    "end": "312039"
  },
  {
    "text": "one okay so what we've seen custom DNS",
    "start": "314320",
    "end": "317960"
  },
  {
    "text": "custom certificate and we've uh had",
    "start": "317960",
    "end": "320680"
  },
  {
    "text": "Services kubernetes services in",
    "start": "320680",
    "end": "322160"
  },
  {
    "text": "different name spaces and we published",
    "start": "322160",
    "end": "324319"
  },
  {
    "text": "them into ltis we've had the default and",
    "start": "324319",
    "end": "326800"
  },
  {
    "text": "um the England Nam space thank you for",
    "start": "326800",
    "end": "328560"
  },
  {
    "text": "your time",
    "start": "328560",
    "end": "331639"
  }
]