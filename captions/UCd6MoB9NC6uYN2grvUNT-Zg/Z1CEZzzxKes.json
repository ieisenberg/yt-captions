[
  {
    "start": "0",
    "end": "60000"
  },
  {
    "text": "hello and welcome to today's talk on running lean architectures and how to optimize for cost efficiency",
    "start": "7359",
    "end": "15280"
  },
  {
    "text": "man this conference is huge i just read that we have 13 500 people sitting here",
    "start": "15280",
    "end": "21600"
  },
  {
    "text": "in las vegas learning about aws and figuring out architecture networking with each other and",
    "start": "21600",
    "end": "28400"
  },
  {
    "text": "this is this is a great opportunity for us to show you ways on how to save more money",
    "start": "28400",
    "end": "33520"
  },
  {
    "text": "and in fact there are so many ways to save money on aws that we will use all of the 45 minutes",
    "start": "33520",
    "end": "39840"
  },
  {
    "text": "to show you these ways and then after that we will have some time for questions back in the hall",
    "start": "39840",
    "end": "45440"
  },
  {
    "text": "my name is constantine gonzalez i'm a solutions architect with aws in munich in germany and in my day-to-day job i work with",
    "start": "45440",
    "end": "51680"
  },
  {
    "text": "customers putting together their architectures helping them with architecture patterns and also i help them save money on aws",
    "start": "51680",
    "end": "61039"
  },
  {
    "start": "60000",
    "end": "115000"
  },
  {
    "text": "so what you're going to get out of this session is of course you're going to get a lower aws bill so my personal goal is that each and",
    "start": "61039",
    "end": "67600"
  },
  {
    "text": "every one of you should be able to lower your bill by at least 10 percent as a result of this talk",
    "start": "67600",
    "end": "73280"
  },
  {
    "text": "and please let me know if you don't lower your bill and then i'll go dig up some new methods for you to",
    "start": "73280",
    "end": "78960"
  },
  {
    "text": "try out you're also going to see ways on how to",
    "start": "78960",
    "end": "84080"
  },
  {
    "text": "get a more scalable robust and more dynamic architecture because sometimes a cost-cutting measure",
    "start": "84080",
    "end": "90159"
  },
  {
    "text": "or something that helps you be more efficient can also help you with being more scalable more robust and more dynamic",
    "start": "90159",
    "end": "96560"
  },
  {
    "text": "and some of these strategies will also help you spend more time innovating and less time worrying",
    "start": "96560",
    "end": "102240"
  },
  {
    "text": "about your architectures we're going to see some real-life customer examples and most of these things are pretty easy",
    "start": "102240",
    "end": "109040"
  },
  {
    "text": "to implement so you can start right away saving money after you get out of this talk",
    "start": "109040",
    "end": "115840"
  },
  {
    "text": "so when you look at the cloud computing benefits you will probably notice that three out of six cloud computing",
    "start": "116159",
    "end": "122000"
  },
  {
    "text": "benefits have directed to do something with cost so cost is a big driver for people to go",
    "start": "122000",
    "end": "127680"
  },
  {
    "text": "to the cloud but it's also all about being more innovative being have more agility and focus on your",
    "start": "127680",
    "end": "134800"
  },
  {
    "text": "business which are all things that also indirectly will contribute to you making more money",
    "start": "134800",
    "end": "140000"
  },
  {
    "text": "or you saving more money so let's start looking at ways to",
    "start": "140000",
    "end": "145520"
  },
  {
    "start": "143000",
    "end": "232000"
  },
  {
    "text": "optimize for cost and it turns out that the number one strategy could be do nothing",
    "start": "145520",
    "end": "151360"
  },
  {
    "text": "how does it work well actually it is our job to bring down",
    "start": "151360",
    "end": "157760"
  },
  {
    "text": "prices a lot because whenever aws reduces prices we see more customers using our",
    "start": "157760",
    "end": "163280"
  },
  {
    "text": "infrastructure and the more customers use our infrastructure the more aws users we we",
    "start": "163280",
    "end": "168560"
  },
  {
    "text": "see and there are some factors who contribute there there's a large ecosystem of other customers and partners using aws",
    "start": "168560",
    "end": "174640"
  },
  {
    "text": "there are new features and new services that we just launched which will bring even more customers into aws so we see a lot of aws usually",
    "start": "174640",
    "end": "182000"
  },
  {
    "text": "and it's increases over time so that we get to build more infrastructure",
    "start": "182000",
    "end": "187200"
  },
  {
    "text": "now the more infrastructure we get to build the better we can leverage economies of scale that means we get to",
    "start": "187200",
    "end": "194159"
  },
  {
    "text": "build the better data centers that help us in turn lower infrastructure",
    "start": "194159",
    "end": "199680"
  },
  {
    "text": "costs even more and this is where infrastructure innovation comes into play has anybody of you seen james hamilton's talk yesterday",
    "start": "199680",
    "end": "207680"
  },
  {
    "text": "man he's a great speaker if you haven't please look him up on youtube check out his talk around what he does in terms of",
    "start": "207680",
    "end": "214159"
  },
  {
    "text": "infrastructure innovation which again helps us bring down infrastructure costs even more so that we can start reducing prices",
    "start": "214159",
    "end": "220799"
  },
  {
    "text": "even more and so far we have reduced prices 45 times since aws was born and we will continue lowering",
    "start": "220799",
    "end": "227760"
  },
  {
    "text": "prices for our customers even if you don't do anything now the second strategy could be for you",
    "start": "227760",
    "end": "234400"
  },
  {
    "start": "232000",
    "end": "271000"
  },
  {
    "text": "to do almost nothing and that means if you book aws support if you book business support",
    "start": "234400",
    "end": "241760"
  },
  {
    "text": "or enterprise support you get access to aws trusted advisor for free so trusted advisor will scan your",
    "start": "241760",
    "end": "248799"
  },
  {
    "text": "infrastructure and it will give you a report and that report will tell you new ways to save money so as a result of",
    "start": "248799",
    "end": "256239"
  },
  {
    "text": "spending some money with support and it's 10 or less of your bill you will get access to trusted advisor",
    "start": "256239",
    "end": "262000"
  },
  {
    "text": "which will help you save more money so many times trusted advisor alone will pay for itself so that you",
    "start": "262000",
    "end": "268320"
  },
  {
    "text": "basically get support for free but of course you're here to learn more about architecture so let's look at some",
    "start": "268320",
    "end": "275440"
  },
  {
    "text": "other steps you can take to optimize your architecture and to save more money",
    "start": "275440",
    "end": "282400"
  },
  {
    "text": "another interesting thing here is when you build it the old way then you have this cycle",
    "start": "282400",
    "end": "289199"
  },
  {
    "text": "of plan build run right and each of these steps takes months to complete in the old",
    "start": "289199",
    "end": "295199"
  },
  {
    "text": "world and the trouble with the old world of it is once you build something and once it's",
    "start": "295199",
    "end": "301199"
  },
  {
    "text": "running it's very hard to change actually it costs a lot of money if you make some mistake in the plan and the build in the",
    "start": "301199",
    "end": "307759"
  },
  {
    "text": "architecture phase so that you will spend a lot of money just to make up for your errors",
    "start": "307759",
    "end": "314160"
  },
  {
    "start": "314000",
    "end": "364000"
  },
  {
    "text": "in contrast if you look at aws and the way we architect here it becomes a cycle so you can architect",
    "start": "314160",
    "end": "320960"
  },
  {
    "text": "your put together your architecture you can build your architecture then you can monitor your architecture and it",
    "start": "320960",
    "end": "327199"
  },
  {
    "text": "doesn't have to be super 100 right the first time you can get started with some architecture that works for you and then",
    "start": "327199",
    "end": "333759"
  },
  {
    "text": "you can continue iterating you can monitor your architecture figure out what is the biggest cost block in my architecture optimize that",
    "start": "333759",
    "end": "341199"
  },
  {
    "text": "architect around that build it into your architecture improve all the time and it all happens",
    "start": "341199",
    "end": "346800"
  },
  {
    "text": "in a matter of minutes you can change your architecture in a matter of minutes and you can optimize all the time",
    "start": "346800",
    "end": "352639"
  },
  {
    "text": "so that changes a lot of the fundamental cost management process because you're no",
    "start": "352639",
    "end": "357759"
  },
  {
    "text": "longer tied to anything that you need to write off over three to five years",
    "start": "357759",
    "end": "364479"
  },
  {
    "start": "364000",
    "end": "372000"
  },
  {
    "text": "so let's look at some strategies for architecting for low cost and we broke this down into seven easy",
    "start": "364720",
    "end": "370160"
  },
  {
    "text": "steps for you step number one and the easiest way to save money is",
    "start": "370160",
    "end": "375600"
  },
  {
    "start": "372000",
    "end": "435000"
  },
  {
    "text": "turn off unused instances you will be amazed in how many instances are running",
    "start": "375600",
    "end": "381759"
  },
  {
    "text": "there doing nothing that you can leverage and that you can save a lot of cost with so that means for instance developer",
    "start": "381759",
    "end": "388960"
  },
  {
    "text": "instances test instances training instances all of these instances can be switched off over the",
    "start": "388960",
    "end": "394319"
  },
  {
    "text": "weekend or they can be switched off over the night you can use the simple start stop feature of ec2 to turn off instances and",
    "start": "394319",
    "end": "401440"
  },
  {
    "text": "then turn them back on again without losing your data on ebs volumes for instance or you can build whole architectures",
    "start": "401440",
    "end": "408319"
  },
  {
    "text": "using automation and tear them down all together when you don't use them so there is no longer the notion of",
    "start": "408319",
    "end": "415199"
  },
  {
    "text": "buying hardware and then being stuck with it you think of instances as something that is disposable and then",
    "start": "415199",
    "end": "422080"
  },
  {
    "text": "get rid of them as soon as you don't need them and automation is key here you can leverage",
    "start": "422080",
    "end": "427280"
  },
  {
    "text": "aws cloud formation or other automation techniques to make the turn of unused instances bit",
    "start": "427280",
    "end": "433599"
  },
  {
    "text": "automatic here's a customer of mine who uses this strategy to save",
    "start": "433599",
    "end": "439840"
  },
  {
    "start": "435000",
    "end": "465000"
  },
  {
    "text": "money and you can see in the ec2 usage graph here how you can identify the weekdays you can identify",
    "start": "439840",
    "end": "447360"
  },
  {
    "text": "the weekends and you can identify even the end of vacation season based on the usage that you see in this graph and this customer here",
    "start": "447360",
    "end": "453919"
  },
  {
    "text": "they were able to save 35 of ec2 costs just by turning off developer test and",
    "start": "453919",
    "end": "460479"
  },
  {
    "text": "qa instances huge cost saving potential here if you want to bring the turn of unused",
    "start": "460479",
    "end": "467039"
  },
  {
    "start": "465000",
    "end": "526000"
  },
  {
    "text": "instances thing to a new level of course you can use auto scaling so let's take a small paul",
    "start": "467039",
    "end": "472800"
  },
  {
    "text": "who uses auto scaling already in this room okay please keep your hands raised if",
    "start": "472800",
    "end": "478400"
  },
  {
    "text": "you didn't raise your hand find the nearest hand that gone up and after this talk ask them about their",
    "start": "478400",
    "end": "484240"
  },
  {
    "text": "experience with auto scaling and yeah feel free to mingle to to exchange experiences even during the",
    "start": "484240",
    "end": "490720"
  },
  {
    "text": "party so auto scaling is the number one way to make",
    "start": "490720",
    "end": "496160"
  },
  {
    "text": "instant setting automatic so auto scaling works by managing the number of instances that",
    "start": "496160",
    "end": "501680"
  },
  {
    "text": "you devote to some piece of your architecture in this example here we are using web servers",
    "start": "501680",
    "end": "506879"
  },
  {
    "text": "that are managed through auto scaling and autoscaling will make sure that if you need more web servers this",
    "start": "506879",
    "end": "512959"
  },
  {
    "text": "those are going to be provisioned automatically but if you don't need that many web servers they will be shut",
    "start": "512959",
    "end": "519200"
  },
  {
    "text": "down automatically and then you will save money because you're not gonna use those excess web servers here's how easy you",
    "start": "519200",
    "end": "527200"
  },
  {
    "start": "526000",
    "end": "544000"
  },
  {
    "text": "can set up an auto scaling group this is an example using aws cloud formation and this piece of code here describes a",
    "start": "527200",
    "end": "533680"
  },
  {
    "text": "launch configuration a launch configuration is a recipe for auto scaling that tells that everything it needs to know to start a new instance",
    "start": "533680",
    "end": "542000"
  },
  {
    "text": "and then using this launch configuration you can set up an auto scaling group which is that group of web servers",
    "start": "542000",
    "end": "547839"
  },
  {
    "start": "544000",
    "end": "567000"
  },
  {
    "text": "application servers or whatever you are using here and you can choose parameters you can choose availability zones",
    "start": "547839",
    "end": "553920"
  },
  {
    "text": "what's the minimum the maximum size of your group and other parameters here so with this two",
    "start": "553920",
    "end": "559680"
  },
  {
    "text": "pieces of code you can automate the creation of auto-scaling groups and therefore automate",
    "start": "559680",
    "end": "564720"
  },
  {
    "text": "saving money by turning off unused instances and that essentially means that you can",
    "start": "564720",
    "end": "569839"
  },
  {
    "text": "much better align resources with demand as demand goes up you get more instances but if the month goes down instances are",
    "start": "569839",
    "end": "577200"
  },
  {
    "text": "being turned off automatically for you and then you get to save a lot of money",
    "start": "577200",
    "end": "582880"
  },
  {
    "start": "582000",
    "end": "844000"
  },
  {
    "text": "so let me introduce you to mimi zhang from adobe and she's going to tell you about their",
    "start": "582880",
    "end": "588720"
  },
  {
    "text": "experience in saving money and their strategies that they used to save money at adobe",
    "start": "588720",
    "end": "594720"
  },
  {
    "text": "thank you can you hear me",
    "start": "594720",
    "end": "599279"
  },
  {
    "text": "all right let me try again thank you hi everyone wow",
    "start": "600160",
    "end": "606560"
  },
  {
    "text": "wait a minute let's just wait to get the microphone going",
    "start": "608800",
    "end": "619839"
  },
  {
    "text": "yes",
    "start": "623680",
    "end": "626000"
  },
  {
    "text": "battery died great so so he's auto scaling her microphone now",
    "start": "629839",
    "end": "637920"
  },
  {
    "text": "so quick applause to the av guy thank you",
    "start": "641519",
    "end": "647440"
  },
  {
    "text": "thank you can you guys hear me now",
    "start": "647440",
    "end": "652640"
  },
  {
    "text": "wait just a minute and all right yeah that's a lot better okay great",
    "start": "653279",
    "end": "660399"
  },
  {
    "text": "i hope everybody is enjoying the conference the sessions um so my name is mimi jain i work with",
    "start": "660399",
    "end": "666079"
  },
  {
    "text": "adobe systems i've been with the company for about four years and currently i'm leading",
    "start": "666079",
    "end": "671519"
  },
  {
    "text": "performance and reliability initiatives on the api platform team which you'll hear about",
    "start": "671519",
    "end": "678399"
  },
  {
    "text": "so how many of you in the audience have used adobe products photoshop",
    "start": "678880",
    "end": "685600"
  },
  {
    "text": "indesign wow that's a lot thank you thank you for being our customers so if you've been with us the last three",
    "start": "685600",
    "end": "692560"
  },
  {
    "text": "or so years you must have seen the major transformation for us to move into the cloud our",
    "start": "692560",
    "end": "699040"
  },
  {
    "text": "business is now powered by two major clouds creative cloud which is a",
    "start": "699040",
    "end": "704320"
  },
  {
    "text": "subscription-based service for the creatives that's where the where photoshop illustrator and all those products live",
    "start": "704320",
    "end": "710240"
  },
  {
    "text": "and marketing cloud which provides a set of solutions for marketers to provide a better experience for their",
    "start": "710240",
    "end": "716639"
  },
  {
    "text": "customers we do a lot of social media a lot of analytics provide those solutions to the",
    "start": "716639",
    "end": "721760"
  },
  {
    "text": "marketers so so adobe",
    "start": "721760",
    "end": "727680"
  },
  {
    "text": "is a design company as you know and we have been moving to the cloud and one",
    "start": "727680",
    "end": "733200"
  },
  {
    "text": "thing that we really like about the cloud is that and it's become the new norm just as",
    "start": "733200",
    "end": "738720"
  },
  {
    "text": "andy said yesterday that the resources are available on demand",
    "start": "738720",
    "end": "744240"
  },
  {
    "text": "so it's kind of like just as consciously pointed out it's like a light switch right you can",
    "start": "744240",
    "end": "750240"
  },
  {
    "text": "turn it on when you need it or turn it off when you're done with it all right so it's it's there when you need it so i'm going",
    "start": "750240",
    "end": "756880"
  },
  {
    "text": "to be talking to you today about some of the techniques that our team the api platform team at adobe has used to",
    "start": "756880",
    "end": "763440"
  },
  {
    "text": "optimize on cost in aws",
    "start": "763440",
    "end": "767200"
  },
  {
    "text": "so adobe is accelerating innovation in the digital media and digital marketing spaces",
    "start": "768959",
    "end": "774880"
  },
  {
    "text": "and in this year we have announced a few product offerings in the first part of the year we",
    "start": "774880",
    "end": "780399"
  },
  {
    "text": "announced the incan slide two digital accessories that make drawing on the ipad",
    "start": "780399",
    "end": "785519"
  },
  {
    "text": "more rich and smoother and last month at our annual conference adobe max we",
    "start": "785519",
    "end": "791680"
  },
  {
    "text": "announced a beta version of our product creating the adobe creative sdk",
    "start": "791680",
    "end": "796880"
  },
  {
    "text": "okay curtis take me out",
    "start": "796880",
    "end": "801839"
  },
  {
    "text": "yes this always happens to me every presentation i do",
    "start": "812839",
    "end": "819040"
  },
  {
    "text": "all right it's a lot better thank you um so i was talking about the creative sdk",
    "start": "819040",
    "end": "824240"
  },
  {
    "text": "which is open doors for third-party developers to create mobile applications that work with the incan slide and",
    "start": "824240",
    "end": "831360"
  },
  {
    "text": "photoshop editing features and product components in the form of micro services",
    "start": "831360",
    "end": "836880"
  },
  {
    "text": "so what's powering this capability and is the api platform",
    "start": "836880",
    "end": "843839"
  },
  {
    "start": "844000",
    "end": "888000"
  },
  {
    "text": "the api platform connects the mobile applications to the product features that are offered",
    "start": "845279",
    "end": "850800"
  },
  {
    "text": "at the api services the three components of the api platform including the gateway",
    "start": "850800",
    "end": "856000"
  },
  {
    "text": "the console the management services provide a secure and performant experience for developers to interact",
    "start": "856000",
    "end": "862959"
  },
  {
    "text": "with the adobe api libraries this platform was started only a year ago",
    "start": "862959",
    "end": "868959"
  },
  {
    "text": "and at the time was an idea that our team was whiteboarding and today we're processing",
    "start": "868959",
    "end": "874959"
  },
  {
    "text": "over a billion requests a day on the api gateway the growth has been phenomenal",
    "start": "874959",
    "end": "880720"
  },
  {
    "text": "and we could not have done it without the agility and speed to market offered by aws",
    "start": "880720",
    "end": "887759"
  },
  {
    "start": "888000",
    "end": "956000"
  },
  {
    "text": "we're fully deployed in aws in four distinct regions we're using aws's route 53 to route",
    "start": "889120",
    "end": "895760"
  },
  {
    "text": "traffic between these regions we're also in a vpc environment with private subnets and",
    "start": "895760",
    "end": "901440"
  },
  {
    "text": "public subnets we have a fleet of nginx web servers running in the public subnet and it's",
    "start": "901440",
    "end": "908160"
  },
  {
    "text": "fronted by load an elastic load balancer that distributes traffic between two availability zones we have rds for my",
    "start": "908160",
    "end": "916560"
  },
  {
    "text": "sql in the private subnet along with other services such as cloudfront",
    "start": "916560",
    "end": "921920"
  },
  {
    "text": "for content distribution elastic cache for redis and s3 so this is",
    "start": "921920",
    "end": "928880"
  },
  {
    "text": "our deployment architecture as it stands now but it's actually gone through many iterations",
    "start": "928880",
    "end": "934480"
  },
  {
    "text": "since we started and just as constantine pointed out the cloud gives you the ability to",
    "start": "934480",
    "end": "940160"
  },
  {
    "text": "continuously iterate until you get to a lean architecture and that is what we did and i'm going to",
    "start": "940160",
    "end": "946160"
  },
  {
    "text": "talk to you a little bit about how we iterate it through the cycle of architecting building",
    "start": "946160",
    "end": "951680"
  },
  {
    "text": "monitoring and repeating that cycle",
    "start": "951680",
    "end": "955839"
  },
  {
    "start": "956000",
    "end": "1019000"
  },
  {
    "text": "so the first thing i want to talk about is instance type sizing and we follow a step a set of steps to",
    "start": "957199",
    "end": "964000"
  },
  {
    "text": "do that right to get the most out of ec2 is so important to pick the most optimal instance type",
    "start": "964000",
    "end": "972000"
  },
  {
    "text": "the steps that we go through are first we look at our application characteristics usage profile is the application cpu",
    "start": "972000",
    "end": "979759"
  },
  {
    "text": "driven memory bound what are the characteristics and then we pick out instance types from",
    "start": "979759",
    "end": "986560"
  },
  {
    "text": "the pool of instances that are available in aws and we do further analysis",
    "start": "986560",
    "end": "992560"
  },
  {
    "text": "benchmarking to figure out from a cost perspective performance perspective resiliency perspective",
    "start": "992560",
    "end": "998639"
  },
  {
    "text": "what is the most optimal instance type for us there are five major families that aws offers from general purpose",
    "start": "998639",
    "end": "1006639"
  },
  {
    "text": "to cpu optimized to gpu instances and in each family there are different",
    "start": "1006639",
    "end": "1012240"
  },
  {
    "text": "size instance types from micro to large all the way to eight extra large",
    "start": "1012240",
    "end": "1019600"
  },
  {
    "start": "1019000",
    "end": "1071000"
  },
  {
    "text": "so i'll walk you through a use case of ours and how we selected an instance type so the use case was",
    "start": "1019600",
    "end": "1026000"
  },
  {
    "text": "where we needed an api gateway to run nginx web servers and this job is",
    "start": "1026000",
    "end": "1031839"
  },
  {
    "text": "to proxy api calls from the mobile applications to the backend services",
    "start": "1031839",
    "end": "1037280"
  },
  {
    "text": "the application has a few characteristics cpu intensive as minimum of eight of course it",
    "start": "1037280",
    "end": "1044400"
  },
  {
    "text": "requires eight cpu cores and a support it needs to support heavy payloads",
    "start": "1044400",
    "end": "1050799"
  },
  {
    "text": "so we picked out three instance types from aws and two of those instance types are cpu",
    "start": "1050799",
    "end": "1057840"
  },
  {
    "text": "optimized so we wanted to compare the different sizes and we also picked out a general purpose",
    "start": "1057840",
    "end": "1063600"
  },
  {
    "text": "instance type and that is just to compare the two families between general purpose and cpu optimized family",
    "start": "1063600",
    "end": "1071600"
  },
  {
    "start": "1071000",
    "end": "1118000"
  },
  {
    "text": "first we did a performance analysis we took two test cases two usage scenarios from our application",
    "start": "1071600",
    "end": "1078720"
  },
  {
    "text": "and the first test is to look at cp utilization so at what point do these instance types",
    "start": "1078720",
    "end": "1084559"
  },
  {
    "text": "max out on cpu and we compared also how many of the",
    "start": "1084559",
    "end": "1090000"
  },
  {
    "text": "smaller instances would match the capacity of the large instance which is the eight extra large",
    "start": "1090000",
    "end": "1096080"
  },
  {
    "text": "and the second test we ran was focused around network bandwidth we wanted to know what network bandwidth we had on these",
    "start": "1096080",
    "end": "1102640"
  },
  {
    "text": "instances and also how they compare to each other just from the performance perspective",
    "start": "1102640",
    "end": "1108240"
  },
  {
    "text": "alone the cc2a8 extra-large was the best choice",
    "start": "1108240",
    "end": "1113280"
  },
  {
    "text": "but we have to look at two other variables cost and resiliency",
    "start": "1113280",
    "end": "1118480"
  },
  {
    "start": "1118000",
    "end": "1244000"
  },
  {
    "text": "on the cost analysis we compare the monthly cost of the instance types and compare them to the target different",
    "start": "1118799",
    "end": "1126080"
  },
  {
    "text": "throughput targets and at a certain point we found that the m3 to extra-large from the general",
    "start": "1126080",
    "end": "1132000"
  },
  {
    "text": "purpose family actually costs more than the eight extra large in the compute optimize family",
    "start": "1132000",
    "end": "1137679"
  },
  {
    "text": "and what made the most sense for us was the c3 extra large that was the least expensive",
    "start": "1137679",
    "end": "1143039"
  },
  {
    "text": "so from both performance and cost perspectives the c3 trucks large was the most optimal choice but we still",
    "start": "1143039",
    "end": "1149600"
  },
  {
    "text": "have one more variable to look at so amazon cto warner vogel",
    "start": "1149600",
    "end": "1156480"
  },
  {
    "text": "put it really well everything fails all the time so at some point you will have failure",
    "start": "1156480",
    "end": "1162080"
  },
  {
    "text": "in your infrastructure whether because it's a hardware issue or natural disaster that's taking down",
    "start": "1162080",
    "end": "1167919"
  },
  {
    "text": "a whole availability zone there will be failure so as you're architecting you have to keep that in mind",
    "start": "1167919",
    "end": "1174000"
  },
  {
    "text": "and architect appropriately so yesterday i attended a session",
    "start": "1174000",
    "end": "1179120"
  },
  {
    "text": "by netflix and they talked about microservices and one of the things the guy said was there there was a quote from",
    "start": "1179120",
    "end": "1185840"
  },
  {
    "text": "benjamin franklin um there are two things you cannot avoid in life and there are death and taxes but he",
    "start": "1185840",
    "end": "1192559"
  },
  {
    "text": "added outages in production to the list so i thought that was really interesting um",
    "start": "1192559",
    "end": "1199360"
  },
  {
    "text": "definitely think about resiliency as you're architecting and from in the perspective of selecting",
    "start": "1199360",
    "end": "1205760"
  },
  {
    "text": "instances there's a choice between fewer large instances and smaller and more smaller instances which is more",
    "start": "1205760",
    "end": "1212799"
  },
  {
    "text": "resilient and from our analysis the conclusion is the latter is better because the traffic is now more widely",
    "start": "1212799",
    "end": "1220799"
  },
  {
    "text": "distributed onto the smaller instance types with the large instance because each instance is taking too much",
    "start": "1220799",
    "end": "1228000"
  },
  {
    "text": "a lot more traffic if it goes down it creates more burden for the other instances and that could",
    "start": "1228000",
    "end": "1235360"
  },
  {
    "text": "actually cause downtime so from a resiliency standpoint running smaller instances is actually a",
    "start": "1235360",
    "end": "1241440"
  },
  {
    "text": "better choice than large ones so we went with the c3 to",
    "start": "1241440",
    "end": "1246840"
  },
  {
    "start": "1244000",
    "end": "1302000"
  },
  {
    "text": "extra-large and there are a couple of other learnings we had from this exercise",
    "start": "1246840",
    "end": "1252400"
  },
  {
    "text": "just to name a few first understand your application characteristics and know your expected",
    "start": "1252400",
    "end": "1258480"
  },
  {
    "text": "workload and then based on these two factors pick the instance type that really matters",
    "start": "1258480",
    "end": "1264240"
  },
  {
    "text": "and then also enhance networking is a big thing if you're if your application requires a lot of",
    "start": "1264240",
    "end": "1271280"
  },
  {
    "text": "network bandwidth turn on network enhanced networking it's available on certain instance types if",
    "start": "1271280",
    "end": "1276799"
  },
  {
    "text": "you pick one from the any of those optimized families the enhanced networking",
    "start": "1276799",
    "end": "1281840"
  },
  {
    "text": "is a great feature and it's free why not turn it on and finally i want to mention that the",
    "start": "1281840",
    "end": "1287760"
  },
  {
    "text": "instance type varies by region in terms of cost and availability so the instance type cost is different",
    "start": "1287760",
    "end": "1294799"
  },
  {
    "text": "and the same instance type may not be available in all the regions so just be aware of that as you're selecting instance types",
    "start": "1294799",
    "end": "1302880"
  },
  {
    "start": "1302000",
    "end": "1403000"
  },
  {
    "text": "now that you have built your base infrastructure it's time to think",
    "start": "1303039",
    "end": "1308640"
  },
  {
    "text": "about how to handle the temporary and the unexpected workload",
    "start": "1308640",
    "end": "1313760"
  },
  {
    "text": "so constantly talked about auto scaling and i'm going to cover that as well but there are two other scaling",
    "start": "1313760",
    "end": "1318799"
  },
  {
    "text": "mechanisms event-based scaling as well as schedule-based scaling",
    "start": "1318799",
    "end": "1324480"
  },
  {
    "text": "event-based scaling is meant for major events major launches just like the conference we had last month adobe",
    "start": "1324480",
    "end": "1330840"
  },
  {
    "text": "max and at adobe max we were and we announced product offerings so we were expecting",
    "start": "1330840",
    "end": "1336720"
  },
  {
    "text": "some spikes in traffic so we over provisioned our infrastructure we scaled up our instances ahead of time but one",
    "start": "1336720",
    "end": "1344640"
  },
  {
    "text": "thing to note here is that you have to pre-warm the elb if you're using the elastic load balancer",
    "start": "1344640",
    "end": "1351039"
  },
  {
    "text": "that's the entryway to your ec2 instances if that's not pre-warmed you're not going to be able to use all",
    "start": "1351039",
    "end": "1357440"
  },
  {
    "text": "the capacity from the ec2 instances so you need to do both and after the",
    "start": "1357440",
    "end": "1362799"
  },
  {
    "text": "event observe the traffic and if you see any unused capacity scale down appropriately don't waste",
    "start": "1362799",
    "end": "1370400"
  },
  {
    "text": "resources if they're not being used another type of scaling is schedule-based scaling so we look at",
    "start": "1370400",
    "end": "1376480"
  },
  {
    "text": "the different traffic patterns throughout the day weekends versus weekdays holidays anytime there's a drop in",
    "start": "1376480",
    "end": "1383280"
  },
  {
    "text": "traffic that's our opportunity to optimize on cost that's when we scale down",
    "start": "1383280",
    "end": "1389120"
  },
  {
    "text": "and we scale down non-production environments such as dev and test so as an example we have a qe",
    "start": "1389120",
    "end": "1395200"
  },
  {
    "text": "environment where we do load testing so when we're not testing there's no need to keep it on",
    "start": "1395200",
    "end": "1403679"
  },
  {
    "start": "1403000",
    "end": "1553000"
  },
  {
    "text": "so constantine talked about auto scaling i just want to touch on it a little bit more and talk to you about how we use it we",
    "start": "1403679",
    "end": "1410000"
  },
  {
    "text": "feel that auto scaling is really good for less steep traffic increases the big spikes um we use event-based",
    "start": "1410000",
    "end": "1416960"
  },
  {
    "text": "scaling for those but the less steep traffic increases auto switching that this auto scaling is the best candidate",
    "start": "1416960",
    "end": "1424000"
  },
  {
    "text": "and one key takeaway is that we scale up fast and scale down slow scaling fast means",
    "start": "1424000",
    "end": "1430159"
  },
  {
    "text": "that you set a threshold that's low enough to give you your existing instances room to take on",
    "start": "1430159",
    "end": "1436559"
  },
  {
    "text": "the extra demand while you spin up instances because remember as you're submitting",
    "start": "1436559",
    "end": "1441760"
  },
  {
    "text": "spinning up new instances it takes time so during the five minutes 10 minutes",
    "start": "1441760",
    "end": "1447279"
  },
  {
    "text": "you need to have enough capacity to handle the extra load so don't wait until your cpu is choking",
    "start": "1447279",
    "end": "1452799"
  },
  {
    "text": "and 90 to scale up do it at maybe 60 percent 70 percent scale down slow so one thing to note",
    "start": "1452799",
    "end": "1461039"
  },
  {
    "text": "here is you're paying by the hour so there's no need to rush into scaling down you know five minutes",
    "start": "1461039",
    "end": "1466720"
  },
  {
    "text": "into into this instance being up you can wait the extra 20 30 minutes and scaling down too fast sometimes will",
    "start": "1466720",
    "end": "1474320"
  },
  {
    "text": "put you in a flapping situation because maybe you have a scale-up event happening at the same time",
    "start": "1474320",
    "end": "1480640"
  },
  {
    "text": "and then set triggers so trigger is to align with your application characteristics whether a cpu",
    "start": "1480640",
    "end": "1486320"
  },
  {
    "text": "network just make sure that you're scaling effectively and one more tip for you avoid",
    "start": "1486320",
    "end": "1493039"
  },
  {
    "text": "multiple scaling triggers if you have to have multiple scaling triggers be very very careful",
    "start": "1493039",
    "end": "1498320"
  },
  {
    "text": "because these triggers could conflict each other a good example is that you may want to scale up when your",
    "start": "1498320",
    "end": "1503440"
  },
  {
    "text": "cpu hits 70 and then you have maybe you have a network trigger that's",
    "start": "1503440",
    "end": "1509440"
  },
  {
    "text": "low that that's that hits the low threshold which will make your your auto scaling the scale down so then",
    "start": "1509440",
    "end": "1515760"
  },
  {
    "text": "you have a scale up and scale down happenings at the same time so just be very careful when you set up",
    "start": "1515760",
    "end": "1521600"
  },
  {
    "text": "multiple triggers here's an example of here's an example of our auto scaling",
    "start": "1521600",
    "end": "1528559"
  },
  {
    "text": "policy so we scale up two instances when cpu goes above 70 for two minutes and we",
    "start": "1528559",
    "end": "1534640"
  },
  {
    "text": "scale down when the cpu goes below 40 for 20 minutes notice the difference in timing",
    "start": "1534640",
    "end": "1541120"
  },
  {
    "text": "and we also have a cooldown of 300 seconds so we scale up and down two instances because we run in two",
    "start": "1541120",
    "end": "1546880"
  },
  {
    "text": "availability zones so we always want to make sure that the azs are balanced",
    "start": "1546880",
    "end": "1553120"
  },
  {
    "start": "1553000",
    "end": "1639000"
  },
  {
    "text": "now that you've set up your infrastructure the next thing that to look at is monitoring and monitoring is really important",
    "start": "1553760",
    "end": "1561200"
  },
  {
    "text": "because it helps you validate your decisions and the monitoring gives you data points on how you can iterate",
    "start": "1561200",
    "end": "1567360"
  },
  {
    "text": "the architecting and the and the running steps of the cycle and",
    "start": "1567360",
    "end": "1574000"
  },
  {
    "text": "one thing to note here is that your monitoring strategy should align with your application characteristics",
    "start": "1574000",
    "end": "1579039"
  },
  {
    "text": "identify the key metrics that you need that are relevant to your application to monitor",
    "start": "1579039",
    "end": "1585600"
  },
  {
    "text": "and don't just monitor cost right you should also be looking at how your infrastructure is utilized",
    "start": "1585600",
    "end": "1590960"
  },
  {
    "text": "because the utilization drives cost tagging constantine touched on this tag your",
    "start": "1590960",
    "end": "1597600"
  },
  {
    "text": "instances is actually a very powerful feature in aws tag your instances with environment",
    "start": "1597600",
    "end": "1603200"
  },
  {
    "text": "owner cost center to help you slice and dice your reporting data",
    "start": "1603200",
    "end": "1608480"
  },
  {
    "text": "and establish actionable alerts these alerts will tell you when there's a change in your environment whether it's a cost",
    "start": "1608480",
    "end": "1615120"
  },
  {
    "text": "change whether it's a usage change you want to be aware of it so you can take action appropriately",
    "start": "1615120",
    "end": "1622480"
  },
  {
    "text": "so you're collecting all this data from your your monitors and based on this data you can iterate",
    "start": "1622480",
    "end": "1628400"
  },
  {
    "text": "your architecture based on this data you can adjust your resource usage and for all of these techniques don't",
    "start": "1628400",
    "end": "1634880"
  },
  {
    "text": "try to do it yourself tools will make life a lot easier so constantine is going to talk about",
    "start": "1634880",
    "end": "1640559"
  },
  {
    "start": "1639000",
    "end": "1674000"
  },
  {
    "text": "the aws tools that will help you and i'll cover a couple of other tools that we use at adobe one of them is netflix ice",
    "start": "1640559",
    "end": "1648000"
  },
  {
    "text": "it's an open source tool and we use it to manage usage and cost across the whole enterprise because it tracks account",
    "start": "1648000",
    "end": "1655039"
  },
  {
    "text": "information regions instance types on-demand versus reserved instances spot instances",
    "start": "1655039",
    "end": "1661679"
  },
  {
    "text": "gives a really good overview of how the the",
    "start": "1661679",
    "end": "1667520"
  },
  {
    "text": "resources are utilized so check it out it's available on github",
    "start": "1667520",
    "end": "1674799"
  },
  {
    "text": "cloud ability is another cost management tool that we use and cloud ability offers some really",
    "start": "1674880",
    "end": "1680240"
  },
  {
    "text": "powerful reporting capabilities and a couple of examples i want to point out are usage",
    "start": "1680240",
    "end": "1685760"
  },
  {
    "text": "comparison report is really good because it allows you to look at your usage between two different time",
    "start": "1685760",
    "end": "1690880"
  },
  {
    "text": "periods and what has changed during during the time and the the time difference and",
    "start": "1690880",
    "end": "1696399"
  },
  {
    "text": "underutilized instances are are great this report shows you the instances that are not being",
    "start": "1696399",
    "end": "1703120"
  },
  {
    "text": "efficiently utilized based on the criteria that you set so you should really look at which instances are",
    "start": "1703120",
    "end": "1709279"
  },
  {
    "text": "underutilized whether they're still needed so that you can either turn them off or resize the instance type",
    "start": "1709279",
    "end": "1716559"
  },
  {
    "start": "1716000",
    "end": "1813000"
  },
  {
    "text": "just to recap what we discussed today we talked about cost performance and resiliency",
    "start": "1717039",
    "end": "1722320"
  },
  {
    "text": "having equal weight and you need to evaluate all of them when you select an instance type",
    "start": "1722320",
    "end": "1728640"
  },
  {
    "text": "embrace failure because it's going to occur plan and design for it and turn off unused instances and and",
    "start": "1728640",
    "end": "1735919"
  },
  {
    "text": "it's best to automate it it's like a light switch when you walk out of a room you turn off the lights so do the same with",
    "start": "1735919",
    "end": "1743360"
  },
  {
    "text": "compute infrastructure auto scaling is very powerful but",
    "start": "1743360",
    "end": "1748880"
  },
  {
    "text": "use it wisely test it to make sure that that gives you the behavior that you expect",
    "start": "1748880",
    "end": "1754880"
  },
  {
    "text": "monitor and frequently evolve your architecture amazon gives you the ability to evolve",
    "start": "1754880",
    "end": "1760640"
  },
  {
    "text": "your architecture to iterate as many times as you need to until you get it right so take advantage of it in closing",
    "start": "1760640",
    "end": "1768320"
  },
  {
    "text": "i just want to say that amazon has built these building blocks for us to build",
    "start": "1768320",
    "end": "1774320"
  },
  {
    "text": "our infrastructure around it's really up to us on how we want to put the building blocks together",
    "start": "1774320",
    "end": "1780240"
  },
  {
    "text": "to maximize efficiency and cost savings and i want to thank amazon for giving us",
    "start": "1780240",
    "end": "1786080"
  },
  {
    "text": "these building blocks and they have truly revolutionized the compute infrastructure",
    "start": "1786080",
    "end": "1792080"
  },
  {
    "text": "thank you and i also want to point out that there is another session from one of our principal architects at",
    "start": "1792080",
    "end": "1798240"
  },
  {
    "text": "adobe right after this if you're interested in learning more about adobe check it out and there was a session yesterday um on",
    "start": "1798240",
    "end": "1805679"
  },
  {
    "text": "cloud management cost management inc using credibility if you missed it you can find it on",
    "start": "1805679",
    "end": "1811279"
  },
  {
    "text": "youtube and thank you you can contact me",
    "start": "1811279",
    "end": "1817279"
  },
  {
    "start": "1813000",
    "end": "1828000"
  },
  {
    "text": "at my email address and i'll be around after the session if you have any questions thank you thanks constantine",
    "start": "1817279",
    "end": "1825200"
  },
  {
    "start": "1828000",
    "end": "1894000"
  },
  {
    "text": "okay so we learned about turning off instances we learned about auto scaling but we can also look at different cost models at aws and one of them is",
    "start": "1828399",
    "end": "1836159"
  },
  {
    "text": "to use reserved instances you can take advantage of reserved instances to save a lot of money reserved",
    "start": "1836159",
    "end": "1842240"
  },
  {
    "text": "instances mean you pay a small upfront price for reserving your instance for",
    "start": "1842240",
    "end": "1847279"
  },
  {
    "text": "a one or three year term and then you get to enjoy a much lower hourly price",
    "start": "1847279",
    "end": "1853039"
  },
  {
    "text": "and some people think that one year or three years is maybe a long time to commit to some usage but the reality is that you",
    "start": "1853039",
    "end": "1859279"
  },
  {
    "text": "can see the break even in terms of cost much earlier so for a one year reserve instance the",
    "start": "1859279",
    "end": "1865360"
  },
  {
    "text": "break even could occur at five months and for a three year ri you can see a break even as early as",
    "start": "1865360",
    "end": "1871600"
  },
  {
    "text": "eight months into its usage so it is worth checking out maybe putting together your excel sheet or",
    "start": "1871600",
    "end": "1877840"
  },
  {
    "text": "talking to your account manager he can analyze your current usage and give you a report on where you can",
    "start": "1877840",
    "end": "1885279"
  },
  {
    "text": "save money by using reserved instances or remember the trusted advisor tool",
    "start": "1885279",
    "end": "1890320"
  },
  {
    "text": "which will give you an ri analysis as well reserved instances are flexible",
    "start": "1890320",
    "end": "1896640"
  },
  {
    "start": "1894000",
    "end": "1914000"
  },
  {
    "text": "that means you can move them between availability zones you can move them between the ec2 classic and the vpc platforms",
    "start": "1896640",
    "end": "1902399"
  },
  {
    "text": "you can even change their size by converting larger instances into many smaller",
    "start": "1902399",
    "end": "1908559"
  },
  {
    "text": "instances in terms of reservations so they're really a flexible tool to help you save cost here",
    "start": "1908559",
    "end": "1914880"
  },
  {
    "start": "1914000",
    "end": "1928000"
  },
  {
    "text": "now when looking at different pricing models it's always worth out checking out spot instances these",
    "start": "1914880",
    "end": "1920000"
  },
  {
    "text": "are my one favorite feature of all of this pricing models i use my personal",
    "start": "1920000",
    "end": "1925519"
  },
  {
    "text": "instances are all spot instances so let's take another poll who is using spot instances already",
    "start": "1925519",
    "end": "1931360"
  },
  {
    "text": "okay yeah it's not enough you need to use more sport instances why so imagine when you when you look at the",
    "start": "1931360",
    "end": "1937840"
  },
  {
    "text": "aws infrastructure we operate massive amounts of hardware because we want to make sure that",
    "start": "1937840",
    "end": "1943039"
  },
  {
    "text": "whenever you want to use an instance you always get it that means that we carry around a",
    "start": "1943039",
    "end": "1948080"
  },
  {
    "text": "big headroom of unused instances ourselves so to be more efficient we sell those",
    "start": "1948080",
    "end": "1954880"
  },
  {
    "text": "unused instances on the spot market which works kind of like the the stock market right",
    "start": "1954880",
    "end": "1960720"
  },
  {
    "start": "1957000",
    "end": "2037000"
  },
  {
    "text": "so the pricing for spot instances is based on supply and demand if there are not enough me people using",
    "start": "1960720",
    "end": "1966720"
  },
  {
    "text": "our capacity we can offer a lot of access instances for sale on the spot market",
    "start": "1966720",
    "end": "1972960"
  },
  {
    "text": "and you get to decide what price you're willing to pay so with spot instances you set the",
    "start": "1972960",
    "end": "1978399"
  },
  {
    "text": "maximum price that you want to pay for the instance and that price can be much lower than the regular on demand",
    "start": "1978399",
    "end": "1984000"
  },
  {
    "text": "price and if the capacity is there we are going to fulfill that request because we have excess capacity",
    "start": "1984000",
    "end": "1990080"
  },
  {
    "text": "and so the price the current price of spot instances becomes a function of supply and demand",
    "start": "1990080",
    "end": "1995760"
  },
  {
    "text": "which can really look like a stock ticker or something like that so the rules are you get your instance",
    "start": "1995760",
    "end": "2003440"
  },
  {
    "text": "as soon as the price meets your maximum price or is below your maximum price but if the price crosses the threshold",
    "start": "2003440",
    "end": "2010159"
  },
  {
    "text": "of your maximum price and becomes bigger than that your instance is going to be terminated",
    "start": "2010159",
    "end": "2015840"
  },
  {
    "text": "now people get really nervous wait a minute is he talking about terminating my instance without me knowing it",
    "start": "2015840",
    "end": "2021679"
  },
  {
    "text": "well yes but remember mimi remember what she said remember what",
    "start": "2021679",
    "end": "2027120"
  },
  {
    "text": "werner said everything fails all the time so just treat the instance termination due to crossing the maximum",
    "start": "2027120",
    "end": "2033360"
  },
  {
    "text": "price as another failure and it turns out that the instance price can vary between",
    "start": "2033360",
    "end": "2038559"
  },
  {
    "text": "availability zones so this is an example graph of the historic price of reserve sorry of spot instances",
    "start": "2038559",
    "end": "2045519"
  },
  {
    "text": "and you can check out the price for the last 60 days and analyze the pricing here and you",
    "start": "2045519",
    "end": "2051440"
  },
  {
    "text": "will notice that the different colors here they relate to different availability zones and you will see that the price",
    "start": "2051440",
    "end": "2057358"
  },
  {
    "text": "in this example the regular price would have been 24 cents and most of the time the price here is a",
    "start": "2057359",
    "end": "2063839"
  },
  {
    "text": "fraction of that price it's actually only 11.7 percent of the on demand price so that means whenever you get to use",
    "start": "2063839",
    "end": "2070720"
  },
  {
    "text": "those instances you just pay 12 of the on demand price which is almost nothing but you can also",
    "start": "2070720",
    "end": "2078000"
  },
  {
    "text": "see that sometimes supply goes back demand becomes high and",
    "start": "2078000",
    "end": "2083118"
  },
  {
    "text": "then the price goes up a lot so the price can even become higher than on demand so to mitigate against that",
    "start": "2083119",
    "end": "2089679"
  },
  {
    "text": "you always need to figure out what is the right price i'm willing to set here and you can use things like auto scaling",
    "start": "2089679",
    "end": "2096079"
  },
  {
    "text": "to automatically turn on instances in a different availability zone",
    "start": "2096079",
    "end": "2101200"
  },
  {
    "text": "if one instance if one availability zone becomes too expensive for you",
    "start": "2101200",
    "end": "2106640"
  },
  {
    "text": "so it's a very dynamic pricing model but if you invest a little bit more brain power here",
    "start": "2106880",
    "end": "2111920"
  },
  {
    "text": "you can save a lot of money you can even save as much as 80 to 90 percent cost there are some risks but you need to",
    "start": "2111920",
    "end": "2118160"
  },
  {
    "text": "prepare for risks anyway and so it it becomes second nature to accept sport instances",
    "start": "2118160",
    "end": "2123200"
  },
  {
    "text": "as if they were normal instances because you can always react with this and leverage auto scaling to",
    "start": "2123200",
    "end": "2129280"
  },
  {
    "text": "manage your spot instances fleet and i recognize that sometimes it can be",
    "start": "2129280",
    "end": "2135359"
  },
  {
    "text": "a challenge to react against the unexpected termination of spot instances",
    "start": "2135359",
    "end": "2140960"
  },
  {
    "text": "so to help make your life a lot easier i'm very glad to announce pre-announce that the spot team is",
    "start": "2140960",
    "end": "2146960"
  },
  {
    "text": "working on a new feature which will allow you to get a two-minute warning before the instance gets",
    "start": "2146960",
    "end": "2152079"
  },
  {
    "text": "terminated i always wanted to say something like this",
    "start": "2152079",
    "end": "2156880"
  },
  {
    "text": "so thank you to the spot team and thank you in a couple of in a couple of weeks you",
    "start": "2157599",
    "end": "2164000"
  },
  {
    "text": "will see an announcement where you will be able to enjoy a two-minute warning before the instance gets terminated this",
    "start": "2164000",
    "end": "2169280"
  },
  {
    "text": "gives you enough time to save everything to migrate over to a different availability zone and to",
    "start": "2169280",
    "end": "2175040"
  },
  {
    "text": "mitigate against the cancellation of spot instances",
    "start": "2175040",
    "end": "2180078"
  },
  {
    "text": "i don't have any specifics that i can share with you but it's going to be quite easy yes okay so let's move on to",
    "start": "2184560",
    "end": "2191200"
  },
  {
    "text": "storage here there are some ways on how to save money with s3 and storage classes you may remember",
    "start": "2191200",
    "end": "2198640"
  },
  {
    "text": "that s3 comes with different storage classes that you can choose for your s3 objects so the regular storage class gives you",
    "start": "2198640",
    "end": "2204480"
  },
  {
    "text": "11 9 durability but sometimes you want to store something that isn't that important",
    "start": "2204480",
    "end": "2209599"
  },
  {
    "text": "that or that you can easily recreate such as pictures that come out of a cms and that",
    "start": "2209599",
    "end": "2215040"
  },
  {
    "text": "you just want to store a static content on s3 and for those kind of objects you can leverage the reduced redundancy storage",
    "start": "2215040",
    "end": "2222160"
  },
  {
    "text": "class which will instantly save you 20 on your s3 bill for all those objects that are easily reproducible and",
    "start": "2222160",
    "end": "2228720"
  },
  {
    "text": "you can even subscribe to sns notifications so that you can notice that if an object gets lost because of the lower redundancy you can",
    "start": "2228720",
    "end": "2235680"
  },
  {
    "text": "always replace it easily and automatically another great opportunity here is to leverage the amazon glacier storage",
    "start": "2235680",
    "end": "2242320"
  },
  {
    "text": "class sometimes you would save something on s3 such as log files that after some time you don't",
    "start": "2242320",
    "end": "2248640"
  },
  {
    "text": "necessarily want to look at them that often so this could be archiving data this could be old log files this",
    "start": "2248640",
    "end": "2254400"
  },
  {
    "text": "could be old backups that you don't plan to use but that you feel uncomfortable really deleting them",
    "start": "2254400",
    "end": "2260240"
  },
  {
    "text": "for sure so you can move them into the glacier storage class which will reduce the storage price by a factor of by",
    "start": "2260240",
    "end": "2268160"
  },
  {
    "text": "64 so that means that you get to store these things very very cheaply and since you're not",
    "start": "2268160",
    "end": "2274560"
  },
  {
    "text": "going to plan to use them very quickly you can live with a three to five hours restore time that the glacier storage",
    "start": "2274560",
    "end": "2280000"
  },
  {
    "text": "class gives you and you can leverage life cycle rules to automatically move objects",
    "start": "2280000",
    "end": "2285599"
  },
  {
    "text": "that are old enough into the glacier storage class so that you don't have to do it by hand so that will automatically save money on",
    "start": "2285599",
    "end": "2292880"
  },
  {
    "text": "those objects that are old and that you don't plan to use that often",
    "start": "2292880",
    "end": "2298960"
  },
  {
    "start": "2298000",
    "end": "2338000"
  },
  {
    "text": "okay let's move on to dynamodb so you may recall that dynamodb pricing is based on capacity units so",
    "start": "2298960",
    "end": "2305520"
  },
  {
    "text": "you provision capacity units to your dynamodb tables and then the price is based on how many",
    "start": "2305520",
    "end": "2310720"
  },
  {
    "text": "capacity units you allocate so you can optimize around the capacity",
    "start": "2310720",
    "end": "2315839"
  },
  {
    "text": "unit usage here and there are some very good guidelines in the documentation that help you optimize cus here",
    "start": "2315839",
    "end": "2322240"
  },
  {
    "text": "but there's always a trade-off to make here you need to understand how much capacity units you really need",
    "start": "2322240",
    "end": "2328160"
  },
  {
    "text": "and you need to prepare for peaks and you also need to constantly monitor and adjust here and here are some",
    "start": "2328160",
    "end": "2333599"
  },
  {
    "text": "strategies that make life easier for you if you're using dynamodb so first of all it always pays off to",
    "start": "2333599",
    "end": "2340400"
  },
  {
    "start": "2338000",
    "end": "2392000"
  },
  {
    "text": "cache stuff so if you can introduce caching into your architecture then you will offload traffic from",
    "start": "2340400",
    "end": "2346320"
  },
  {
    "text": "dynamodb and that will help you save capacity units on the dynamodb side of course there's some cost to",
    "start": "2346320",
    "end": "2352400"
  },
  {
    "text": "caching but sometimes you have ram on your application servers anyway so you can use the excess ram",
    "start": "2352400",
    "end": "2358160"
  },
  {
    "text": "on your machines to cache stuff locally and thereby reduce the load on the dynamodb table",
    "start": "2358160",
    "end": "2363520"
  },
  {
    "text": "and that means you get to live with lower amount of capacity units",
    "start": "2363520",
    "end": "2368640"
  },
  {
    "text": "and there are other strategies you can use you can use multiple tables with multiple capacity unit settings",
    "start": "2368640",
    "end": "2373760"
  },
  {
    "text": "based on how much you access those tables so don't be afraid to have a lot of tables that are optimized",
    "start": "2373760",
    "end": "2379599"
  },
  {
    "text": "for their own capacity usage you can use compression to save capacity units here",
    "start": "2379599",
    "end": "2385200"
  },
  {
    "text": "and also you can use strategies like sqs to buffer over capacity rights",
    "start": "2385200",
    "end": "2390240"
  },
  {
    "text": "this is a very popular strategy that shazam pioneered i think two years ago that means if you",
    "start": "2390240",
    "end": "2397280"
  },
  {
    "text": "didn't provide enough capacity units to dynamodb and you will start seeing capacity",
    "start": "2397280",
    "end": "2402880"
  },
  {
    "text": "errors then you can just retry that rights into or write those rights into an sqs queue and then",
    "start": "2402880",
    "end": "2410400"
  },
  {
    "text": "after the usage goes down and you get more capacity units back because they're not used that much you can retry",
    "start": "2410400",
    "end": "2417119"
  },
  {
    "text": "those rights after the fact by using some machine that just reads messages from sqs and retries those rights on dynamodb so",
    "start": "2417119",
    "end": "2424560"
  },
  {
    "text": "then effectively allows you to use sqs as a buffer in front of the write request to your database",
    "start": "2424560",
    "end": "2430560"
  },
  {
    "text": "and that means that you only need to provision them the average amount of capacity units to",
    "start": "2430560",
    "end": "2436160"
  },
  {
    "text": "the dynamodb tables you don't have to provision for peak you can get away with provisioning for average capacity saving you money on the",
    "start": "2436160",
    "end": "2443040"
  },
  {
    "text": "dynamodb side there's another session that i just came out of which is called so you think you",
    "start": "2443040",
    "end": "2448560"
  },
  {
    "start": "2445000",
    "end": "2456000"
  },
  {
    "text": "can architect you can watch this session on youtube and this is where we make a very creative use of this",
    "start": "2448560",
    "end": "2453839"
  },
  {
    "text": "strategy here there's a script on github called dynamic dynamodb and think",
    "start": "2453839",
    "end": "2461119"
  },
  {
    "start": "2456000",
    "end": "2480000"
  },
  {
    "text": "of this as auto scaling for dynamodb capacity units this is a great strategy it's a script that you just need to run",
    "start": "2461119",
    "end": "2467680"
  },
  {
    "text": "and it will automatically adjust capacity units over time as it measures your load and",
    "start": "2467680",
    "end": "2473359"
  },
  {
    "text": "calculates the right amount of capacity unit and adjusts your capacity units just like an auto scaling group",
    "start": "2473359",
    "end": "2480240"
  },
  {
    "start": "2480000",
    "end": "2537000"
  },
  {
    "text": "here's an example from one of my customers in the beginning they were just using dynamodb and they added",
    "start": "2480240",
    "end": "2485680"
  },
  {
    "text": "capacity units and added some more capacity units and more and and then they figured wait a minute our dynamodb build",
    "start": "2485680",
    "end": "2492640"
  },
  {
    "text": "is starting to become pretty large now so they looked hard at optimizations and",
    "start": "2492640",
    "end": "2497920"
  },
  {
    "text": "caching strategies and they were able to save 80 of their capacity units just through some optimization",
    "start": "2497920",
    "end": "2504160"
  },
  {
    "text": "on the use of capacity units so that's a big potential and then i they found out",
    "start": "2504160",
    "end": "2510079"
  },
  {
    "text": "about the dynamic dynamodb script and after they used that they saved another 20",
    "start": "2510079",
    "end": "2515200"
  },
  {
    "text": "on top of that you can see that this is just this is really the effect of those two things those two strategies",
    "start": "2515200",
    "end": "2521680"
  },
  {
    "text": "because when they did a cash flush and they had to repopulate everything there's a huge",
    "start": "2521680",
    "end": "2526800"
  },
  {
    "text": "peak that shows that this usage continued going up altogether they were just much more smart and much more efficient",
    "start": "2526800",
    "end": "2533119"
  },
  {
    "text": "in using dynamodb after that",
    "start": "2533119",
    "end": "2537838"
  },
  {
    "start": "2537000",
    "end": "2577000"
  },
  {
    "text": "okay and now the seventh step you can take is you can offload your architecture you",
    "start": "2538400",
    "end": "2543599"
  },
  {
    "text": "don't have to use all of your architecture all the time you can offload some of this work to some other services",
    "start": "2543599",
    "end": "2550079"
  },
  {
    "text": "that may be more efficient so for instance there are three ways to offload you can use amazon cloudfront",
    "start": "2550079",
    "end": "2555920"
  },
  {
    "text": "in front of your web architecture to offload some of the traffic so that you can get away with a smaller",
    "start": "2555920",
    "end": "2561680"
  },
  {
    "text": "architecture behind cloudfront you can introduce caching again it's a great strategy in front of any database",
    "start": "2561680",
    "end": "2567599"
  },
  {
    "text": "not just limited to dynamodb or you can leverage existing amazon web services that already",
    "start": "2567599",
    "end": "2573200"
  },
  {
    "text": "implemented a lot of the stuff that you may have running on your own now so here's an",
    "start": "2573200",
    "end": "2578560"
  },
  {
    "start": "2577000",
    "end": "2610000"
  },
  {
    "text": "example on cloud font that you can put in front of your web architecture cloudfront will cache your static and dynamic traffic so",
    "start": "2578560",
    "end": "2586880"
  },
  {
    "text": "it also pays off even if you have a 100 dynamic web service it could be a real time whatever api",
    "start": "2586880",
    "end": "2593040"
  },
  {
    "text": "something it still pays off to use cloudfront in front of that because your calls might have a time to",
    "start": "2593040",
    "end": "2599760"
  },
  {
    "text": "live of five seconds or even one minute and this is some this is enough for cloudfund to cash for you so that you",
    "start": "2599760",
    "end": "2605280"
  },
  {
    "text": "can scale down the architecture behind cloudfront and save money",
    "start": "2605280",
    "end": "2610720"
  },
  {
    "start": "2610000",
    "end": "2628000"
  },
  {
    "text": "you can offload the database part of your architecture through caching so by adding caches in front of the database",
    "start": "2610880",
    "end": "2616240"
  },
  {
    "text": "you can get away with a smaller database size and that is a good trade-off most of the time if you encounter some read heavy",
    "start": "2616240",
    "end": "2623040"
  },
  {
    "text": "loads that give you an opportunity to to save money here",
    "start": "2623040",
    "end": "2628240"
  },
  {
    "text": "and also take a look at all of these services that we accumulated over time it may be a little",
    "start": "2628240",
    "end": "2634640"
  },
  {
    "text": "bit confusing to look at all of these services but there may be some pieces that you can reuse in the",
    "start": "2634640",
    "end": "2639680"
  },
  {
    "text": "architecture that save you the trouble of implementing them yourself you don't have to implement",
    "start": "2639680",
    "end": "2644720"
  },
  {
    "text": "your own rabbitmq server if you can just use sqs you don't have to run your own search engine you can just",
    "start": "2644720",
    "end": "2652240"
  },
  {
    "text": "use cloud search you don't have to set up your own database or your own radius cluster you can just use elastic",
    "start": "2652240",
    "end": "2659440"
  },
  {
    "text": "or rds for running the database because whenever you can leverage one of those pre-cooked services",
    "start": "2659440",
    "end": "2665200"
  },
  {
    "text": "from aws chances are very good that we found a way to make this more efficient",
    "start": "2665200",
    "end": "2670800"
  },
  {
    "text": "and thereby easier and also more cost efficient and cheaper to use",
    "start": "2670800",
    "end": "2675839"
  },
  {
    "text": "than if you were rolling out your own service",
    "start": "2675839",
    "end": "2679920"
  },
  {
    "start": "2679000",
    "end": "2688000"
  },
  {
    "text": "great so let's take a brief look at cost monitoring and analysis this is really a reminder of things that",
    "start": "2681119",
    "end": "2686560"
  },
  {
    "text": "you should know about already check out the aws tco calculator especially if you're migrating something",
    "start": "2686560",
    "end": "2692640"
  },
  {
    "start": "2688000",
    "end": "2705000"
  },
  {
    "text": "from on-premises to the cloud this is a great tool to get a real-life apples-to-apples",
    "start": "2692640",
    "end": "2698160"
  },
  {
    "text": "comparison look on the tco of something running on premises versus running in the cloud",
    "start": "2698160",
    "end": "2705040"
  },
  {
    "start": "2705000",
    "end": "2726000"
  },
  {
    "text": "check out the aws simple monthly calculator if you want to get a cost projection into the next",
    "start": "2705040",
    "end": "2710560"
  },
  {
    "text": "few weeks and figure out what it how many how much money you need to allocate for the",
    "start": "2710560",
    "end": "2716160"
  },
  {
    "text": "coming months it is not that simple anymore because we added a lot of services to it but it is a really good tool to get a",
    "start": "2716160",
    "end": "2722800"
  },
  {
    "text": "better feel on on cost there is the aws billing console which",
    "start": "2722800",
    "end": "2728400"
  },
  {
    "start": "2726000",
    "end": "2745000"
  },
  {
    "text": "shows you really nicely where the big chunks of your builds are so that you know what to",
    "start": "2728400",
    "end": "2733440"
  },
  {
    "text": "optimize next so in this case in this example redshift is a big chunk here so maybe we",
    "start": "2733440",
    "end": "2739119"
  },
  {
    "text": "should take a closer look at redshift here or take a closer look at the next biggest which is ec2 usage",
    "start": "2739119",
    "end": "2746000"
  },
  {
    "start": "2745000",
    "end": "2769000"
  },
  {
    "text": "out the aws cost explorer that will give you a trend across many months around where are the",
    "start": "2746000",
    "end": "2752480"
  },
  {
    "text": "trends in your architecture is my ec2 build growing or is it shrinking over time if it's growing is it growing in line",
    "start": "2752480",
    "end": "2758400"
  },
  {
    "text": "with the rest of my architecture or is there something that makes my ec2 or s3 or whatever bill grow",
    "start": "2758400",
    "end": "2764319"
  },
  {
    "text": "faster than the rest and why is it so so this is a great analysis tool here as well",
    "start": "2764319",
    "end": "2770000"
  },
  {
    "start": "2769000",
    "end": "2798000"
  },
  {
    "text": "and then you can always set up aws billing alerts that means that you can get you can get a notification automatic",
    "start": "2770000",
    "end": "2776400"
  },
  {
    "text": "notification via email or sns about when your bill is hitting some",
    "start": "2776400",
    "end": "2782160"
  },
  {
    "text": "cost target that you don't want to to go beyond you can even use this as part of auto",
    "start": "2782160",
    "end": "2787440"
  },
  {
    "text": "scaling you can shut down instances automatically if your if your bill reaches a certain level or",
    "start": "2787440",
    "end": "2793040"
  },
  {
    "text": "something like that so it's really it uses the same mechanisms",
    "start": "2793040",
    "end": "2798400"
  },
  {
    "start": "2798000",
    "end": "2850000"
  },
  {
    "text": "so let's recap these are the seven strategies you can use to improve your architecture and make it more cost",
    "start": "2798400",
    "end": "2803520"
  },
  {
    "text": "efficient turn off unused instances automate the turning off by using auto scaling",
    "start": "2803520",
    "end": "2809680"
  },
  {
    "text": "use reserved instances and if you want to be a bit more sophisticated check out spot instances it's a great",
    "start": "2809680",
    "end": "2815920"
  },
  {
    "text": "way to save money leverage different s3 storage classes and optimize your dynamodb usage",
    "start": "2815920",
    "end": "2822400"
  },
  {
    "text": "by being really smart about how you allocate those capacity units and how you use dynamodb and finally",
    "start": "2822400",
    "end": "2828960"
  },
  {
    "text": "find ways to offload pieces of your architecture into precooked aws services",
    "start": "2828960",
    "end": "2835200"
  },
  {
    "text": "remember to iterate you're no longer confined to hardware that you bought and that you have to live with",
    "start": "2835200",
    "end": "2840559"
  },
  {
    "text": "you have a completely dynamic architecture to play with where you can optimize all the time while you architect build and monitor",
    "start": "2840559",
    "end": "2848160"
  },
  {
    "text": "your stuff so with that thank you very much for coming here",
    "start": "2848160",
    "end": "2858000"
  },
  {
    "start": "2850000",
    "end": "2865000"
  },
  {
    "text": "and i hope that this talks helped you save a lot of money thank you",
    "start": "2858000",
    "end": "2866960"
  }
]