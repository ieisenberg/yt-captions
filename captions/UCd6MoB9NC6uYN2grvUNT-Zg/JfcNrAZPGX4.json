[
  {
    "start": "0",
    "end": "38000"
  },
  {
    "text": "Welcome to Solving with AWS Solutions",
    "start": "280",
    "end": "2565"
  },
  {
    "text": "where we explore ready to deploy solutions",
    "start": "2655",
    "end": "4965"
  },
  {
    "text": "built by AWS. I'm Heather,",
    "start": "4975",
    "end": "7165"
  },
  {
    "text": "Application Builder on AWS.",
    "start": "10365",
    "end": "12365"
  },
  {
    "text": "This solution simplifies application development",
    "start": "13115",
    "end": "15684"
  },
  {
    "text": "that can often be complex and time consuming.",
    "start": "15685",
    "end": "18245"
  },
  {
    "text": "It's a web-based interface that seamlessly integrates",
    "start": "18715",
    "end": "21685"
  },
  {
    "text": "with AWS services",
    "start": "21685",
    "end": "22765"
  },
  {
    "text": "and Lang Chain to enable third party connections,",
    "start": "22865",
    "end": "25325"
  },
  {
    "text": "which accelerates time to launch.",
    "start": "25455",
    "end": "27244"
  },
  {
    "text": "The Generative AI Application Builder Solution helps",
    "start": "27705",
    "end": "30525"
  },
  {
    "text": "developers, engineers,",
    "start": "30535",
    "end": "32044"
  },
  {
    "text": "and architects get the rapid experimentation",
    "start": "32045",
    "end": "34125"
  },
  {
    "text": "and innovation needed for developing applications",
    "start": "34125",
    "end": "36285"
  },
  {
    "text": "with easy configuration and scalable deployments.",
    "start": "36285",
    "end": "38885"
  },
  {
    "start": "38000",
    "end": "91000"
  },
  {
    "text": "Let's look at some of the key benefits",
    "start": "39135",
    "end": "40765"
  },
  {
    "text": "of Generative AI Application Builder",
    "start": "40765",
    "end": "42645"
  },
  {
    "text": "on AWS. You can experiment quickly",
    "start": "42705",
    "end": "45125"
  },
  {
    "text": "with multiple configurations",
    "start": "45155",
    "end": "46485"
  },
  {
    "text": "of various large language models, prompt engineering,",
    "start": "46485",
    "end": "49445"
  },
  {
    "text": "enterprise knowledge bases, and other parameters.",
    "start": "49575",
    "end": "52245"
  },
  {
    "text": "Generative AI Application Builder on AWS has pre-built",
    "start": "52455",
    "end": "56085"
  },
  {
    "text": "connectors to Amazon Bedrock",
    "start": "56085",
    "end": "57605"
  },
  {
    "text": "and its included large language models such as Amazon",
    "start": "57825",
    "end": "60525"
  },
  {
    "text": "Titan, and select third party LLMs.",
    "start": "60525",
    "end": "62925"
  },
  {
    "text": "This solution gives you the flexibility to deploy the model",
    "start": "63195",
    "end": "66325"
  },
  {
    "text": "of your choice as well as AWS",
    "start": "66345",
    "end": "69005"
  },
  {
    "text": "and third party services you prefer.",
    "start": "69005",
    "end": "70685"
  },
  {
    "text": "Using Lambda functions or Lang Chain connectors, ",
    "start": "71135",
    "end": "73405"
  },
  {
    "text": "users are given the choice to connect with a wide variety",
    "start": "73735",
    "end": "76285"
  },
  {
    "text": "of third party models and services,",
    "start": "76285",
    "end": "77725"
  },
  {
    "text": "which can support simultaneous experimentation across models",
    "start": "77935",
    "end": "81165"
  },
  {
    "text": "to help you understand which one performs best",
    "start": "81465",
    "end": "83445"
  },
  {
    "text": "for your specific use case.",
    "start": "83445",
    "end": "84645"
  },
  {
    "text": "Now, let's dive into how you can get started",
    "start": "85145",
    "end": "87125"
  },
  {
    "text": "with Generative AI Application Builder on AWS yourself.",
    "start": "87155",
    "end": "90405"
  },
  {
    "start": "91000",
    "end": "343000"
  },
  {
    "text": "Jason, where do we get started with the solution?",
    "start": "92335",
    "end": "94685"
  },
  {
    "text": "So, the best place to get started is the landing",
    "start": "94945",
    "end": "96685"
  },
  {
    "text": "page in the solution library.",
    "start": "96715",
    "end": "97884"
  },
  {
    "text": "If you wanna scroll down",
    "start": "98185",
    "end": "99204"
  },
  {
    "text": "and you'll see some details about the version,",
    "start": "99265",
    "end": "101165"
  },
  {
    "text": "the deployment time, the possible costs, some features",
    "start": "101385",
    "end": "104205"
  },
  {
    "text": "and benefits, and also two really important links.",
    "start": "104205",
    "end": "107085"
  },
  {
    "text": "One, an implementation",
    "start": "107185",
    "end": "108085"
  },
  {
    "text": "guide, which we'll talk about in a minute.",
    "start": "108085",
    "end": "109125"
  },
  {
    "text": "And the single click launching AWS console button,",
    "start": "109545",
    "end": "113165"
  },
  {
    "text": "which will deploy directly",
    "start": "113215",
    "end": "115085"
  },
  {
    "text": "to your AWS console with one click.",
    "start": "115085",
    "end": "116525"
  },
  {
    "text": "Awesome. And can you tell me what AWS services",
    "start": "116525",
    "end": "119805"
  },
  {
    "text": "and products are in this solution?",
    "start": "119865",
    "end": "121045"
  },
  {
    "text": "Yeah, let's look at the architecture.",
    "start": "121075",
    "end": "122524"
  },
  {
    "text": "So you can see that there's Kendra,",
    "start": "122905",
    "end": "125845"
  },
  {
    "text": "which organizes documents",
    "start": "125845",
    "end": "127365"
  },
  {
    "text": "and helps search through all that information for you.",
    "start": "127365",
    "end": "129205"
  },
  {
    "text": "Let's talk about Kendra really quickly",
    "start": "129735",
    "end": "131645"
  },
  {
    "text": "because this is important",
    "start": "131645",
    "end": "132925"
  },
  {
    "text": "for an application using the retrieval augmented generation",
    "start": "132945",
    "end": "135885"
  },
  {
    "text": "or RAG approach.",
    "start": "136065",
    "end": "137365"
  },
  {
    "text": "RAG is a technique that takes an organization's enterprise",
    "start": "137925",
    "end": "140645"
  },
  {
    "text": "knowledge base or content",
    "start": "140645",
    "end": "141885"
  },
  {
    "text": "and bundles it with user requests to the LLM",
    "start": "142265",
    "end": "144805"
  },
  {
    "text": "so you get more context specific responses.",
    "start": "144805",
    "end": "146885"
  },
  {
    "text": "Amazon Kendra gives you the retrieve API that's designed",
    "start": "147265",
    "end": "150725"
  },
  {
    "text": "for the RAG use case.",
    "start": "150725",
    "end": "151845"
  },
  {
    "text": "So, you get that high accuracy search",
    "start": "152105",
    "end": "154205"
  },
  {
    "text": "that sources the most relevant content and documents,",
    "start": "154275",
    "end": "157165"
  },
  {
    "text": "and maximizes the quality of your RAG output.",
    "start": "157165",
    "end": "160084"
  },
  {
    "text": "There's also DynamoDB,",
    "start": "160235",
    "end": "161845"
  },
  {
    "text": "which stores the conversational information,",
    "start": "161935",
    "end": "163805"
  },
  {
    "text": "the temporary information, and then we use an open source",
    "start": "163805",
    "end": "166125"
  },
  {
    "text": "project called Lang Chain, which helps connect",
    "start": "166125",
    "end": "168525"
  },
  {
    "text": "to all the wide variety of models out there.",
    "start": "168525",
    "end": "170564"
  },
  {
    "text": "And of course, we have our key service Amazon Bedrock,",
    "start": "170865",
    "end": "173685"
  },
  {
    "text": "which gives us our choice",
    "start": "173815",
    "end": "175125"
  },
  {
    "text": "of high performing foundational models we'd like to use.",
    "start": "175145",
    "end": "177685"
  },
  {
    "text": "And, so, if I wanted more information about Generative AI",
    "start": "177985",
    "end": "180605"
  },
  {
    "text": "Application Builder before I'm ready",
    "start": "180605",
    "end": "182245"
  },
  {
    "text": "to deploy, where would I go?",
    "start": "182265",
    "end": "183444"
  },
  {
    "text": "The best place to start is the implementation guide.",
    "start": "183745",
    "end": "185924"
  },
  {
    "text": "So, you can click on the implementation guide",
    "start": "186225",
    "end": "187925"
  },
  {
    "text": "and this will give you a bunch of details",
    "start": "188305",
    "end": "190084"
  },
  {
    "text": "around your AWS console limitations, the regions",
    "start": "190185",
    "end": "193444"
  },
  {
    "text": "where you can deploy it, and also most importantly,",
    "start": "193445",
    "end": "195805"
  },
  {
    "text": "the definitions and the parameters",
    "start": "196025",
    "end": "197845"
  },
  {
    "text": "that you can use when you're setting it up.",
    "start": "197995",
    "end": "199444"
  },
  {
    "text": "Can you, uh, show me how to deploy this now?",
    "start": "199665",
    "end": "201724"
  },
  {
    "text": "Absolutely. So go back to the landing page",
    "start": "202285",
    "end": "204445"
  },
  {
    "text": "and click on the launch in AWS console button",
    "start": "204785",
    "end": "206965"
  },
  {
    "text": "and it walks you through a couple clicks in the cloud",
    "start": "207145",
    "end": "209165"
  },
  {
    "text": "formation template and you're good to go",
    "start": "209165",
    "end": "210844"
  },
  {
    "text": "and you wind up with your administrative screen here.",
    "start": "210905",
    "end": "214084"
  },
  {
    "text": "And so after your administrative screen,",
    "start": "214865",
    "end": "217245"
  },
  {
    "text": "you just wanna deploy a new use case",
    "start": "217385",
    "end": "219084"
  },
  {
    "text": "and this is where you get to make your choices on",
    "start": "219705",
    "end": "221925"
  },
  {
    "text": "what you want the app to say",
    "start": "222275",
    "end": "223444"
  },
  {
    "text": "and how you want the app to work.",
    "start": "223445",
    "end": "224445"
  },
  {
    "text": "So, we're just gonna give this a quick name and move on here.",
    "start": "224865",
    "end": "228875"
  },
  {
    "text": "So from here you get",
    "start": "230815",
    "end": "231835"
  },
  {
    "text": "to choose which large language models you want to connect to",
    "start": "231835",
    "end": "233955"
  },
  {
    "text": "to power your application.",
    "start": "233955",
    "end": "235115"
  },
  {
    "text": "And which language models can I connect to?",
    "start": "235455",
    "end": "237435"
  },
  {
    "text": "Sure. So you can connect to any large language model out",
    "start": "237665",
    "end": "239875"
  },
  {
    "text": "there, but we've built a couple in",
    "start": "239875",
    "end": "241035"
  },
  {
    "text": "to make it convenient and fast to get started.",
    "start": "241035",
    "end": "242595"
  },
  {
    "text": "We have Anthropic and Hugging Face built in.",
    "start": "242975",
    "end": "245475"
  },
  {
    "text": "You can also connect to Amazon Bedrock",
    "start": "245475",
    "end": "247435"
  },
  {
    "text": "or Amazon Titan as well. So how",
    "start": "247435",
    "end": "249075"
  },
  {
    "text": "can they tune this to help prevent hallucinations? Yeah,",
    "start": "249075",
    "end": "251955"
  },
  {
    "text": "hallucinations are an interesting problem.",
    "start": "251955",
    "end": "253475"
  },
  {
    "text": "You can tune it using the scale from zero to one.",
    "start": "253935",
    "end": "256234"
  },
  {
    "text": "One is super creative and zero is super didactic.",
    "start": "256495",
    "end": "259475"
  },
  {
    "text": "So, depending on what you want out",
    "start": "259475",
    "end": "260834"
  },
  {
    "text": "of it, you can adjust it here.",
    "start": "260835",
    "end": "262114"
  },
  {
    "text": "Gotcha. And then also we have an option",
    "start": "262115",
    "end": "264715"
  },
  {
    "text": "to stream the information instead",
    "start": "264775",
    "end": "267035"
  },
  {
    "text": "of bringing it back in a single block.",
    "start": "267035",
    "end": "268195"
  },
  {
    "text": "And why would I choose streaming?",
    "start": "268575",
    "end": "270195"
  },
  {
    "text": "Streaming offers realtime interaction",
    "start": "270265",
    "end": "272955"
  },
  {
    "text": "and realtime data response from the large language model.",
    "start": "272955",
    "end": "275314"
  },
  {
    "text": "So, it makes it feel like more of a conversation instead",
    "start": "275415",
    "end": "277555"
  },
  {
    "text": "of just getting a block of data back.",
    "start": "277555",
    "end": "278995"
  },
  {
    "text": "Yeah. So now can we take a look at this",
    "start": "279185",
    "end": "281755"
  },
  {
    "text": "now that it's been deployed? Yeah,",
    "start": "281775",
    "end": "283115"
  },
  {
    "text": "let's look at the chatbot that it deploys.",
    "start": "283115",
    "end": "284634"
  },
  {
    "text": "So, after you deploy this, it gives you a URL",
    "start": "284975",
    "end": "286955"
  },
  {
    "text": "and some login information",
    "start": "286955",
    "end": "287955"
  },
  {
    "text": "and it comes up with the chatbot.",
    "start": "288335",
    "end": "289835"
  },
  {
    "text": "Pretty familiar interface.",
    "start": "289915",
    "end": "291155"
  },
  {
    "text": "So, we can ask it anything we want.",
    "start": "291335",
    "end": "292955"
  },
  {
    "text": "Like write me a blog",
    "start": "293505",
    "end": "297035"
  },
  {
    "text": "to sell shoes and it'll process that information",
    "start": "297855",
    "end": "301155"
  },
  {
    "text": "and it brings it back pretty quickly.",
    "start": "301655",
    "end": "302995"
  },
  {
    "text": "And it talks about draft blog post, five sentences,",
    "start": "303335",
    "end": "306634"
  },
  {
    "text": "gives you some information.",
    "start": "306635",
    "end": "308035"
  },
  {
    "text": "Uh, you can also say, please make this",
    "start": "308575",
    "end": "312795"
  },
  {
    "text": "longer and specific to dress shoes.",
    "start": "313455",
    "end": "317995"
  },
  {
    "text": "Mm-Hmm. And it'll take that information",
    "start": "317995",
    "end": "319435"
  },
  {
    "text": "and help make the prompts more and more specific",
    "start": "319575",
    "end": "321795"
  },
  {
    "text": "and have better content.",
    "start": "322295",
    "end": "323635"
  },
  {
    "text": "That's Generative AI Application Builder.",
    "start": "323895",
    "end": "325914"
  },
  {
    "text": "Thanks, Jason. This was great. You're",
    "start": "326415",
    "end": "328315"
  },
  {
    "text": "Welcome. Thanks",
    "start": "328315",
    "end": "329315"
  },
  {
    "text": "for joining us on this episode of Solving",
    "start": "329315",
    "end": "331275"
  },
  {
    "text": "with AWS Solutions.",
    "start": "331275",
    "end": "332514"
  },
  {
    "text": "You can find this and other solutions in the",
    "start": "332735",
    "end": "334634"
  },
  {
    "text": "AWS Solutions Library.",
    "start": "334675",
    "end": "335875"
  },
  {
    "text": "See you next time.",
    "start": "336375",
    "end": "337075"
  }
]