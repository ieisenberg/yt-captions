[
  {
    "text": "hello everyone welcome to today's",
    "start": "560",
    "end": "2800"
  },
  {
    "text": "architecture walkthrough i am Suraj and",
    "start": "2800",
    "end": "5759"
  },
  {
    "text": "we'll be providing an overview of Amazon",
    "start": "5759",
    "end": "8000"
  },
  {
    "text": "Aurora DSQL with AWS Secrets Manager we",
    "start": "8000",
    "end": "12000"
  },
  {
    "text": "will start with an introduction to",
    "start": "12000",
    "end": "13200"
  },
  {
    "text": "Amazon Aurora DSQL followed by the",
    "start": "13200",
    "end": "15759"
  },
  {
    "text": "architecture overview and finally",
    "start": "15759",
    "end": "18240"
  },
  {
    "text": "deploying an open-source AWS sample from",
    "start": "18240",
    "end": "21039"
  },
  {
    "text": "GitHub to demonstrate this architecture",
    "start": "21039",
    "end": "23680"
  },
  {
    "text": "let's get started",
    "start": "23680",
    "end": "26960"
  },
  {
    "text": "let's start with what is Amazon Aurora",
    "start": "26960",
    "end": "29080"
  },
  {
    "text": "DSQL aurora DSQL is a serverless",
    "start": "29080",
    "end": "32398"
  },
  {
    "text": "distributed SQL database with virtually",
    "start": "32399",
    "end": "35040"
  },
  {
    "text": "unlimited scale high availability and",
    "start": "35040",
    "end": "37760"
  },
  {
    "text": "zero infrastructure management it",
    "start": "37760",
    "end": "40320"
  },
  {
    "text": "provides an active active high",
    "start": "40320",
    "end": "42120"
  },
  {
    "text": "availability which automatically manages",
    "start": "42120",
    "end": "44480"
  },
  {
    "text": "your system infrastructure and scales",
    "start": "44480",
    "end": "46719"
  },
  {
    "text": "your database based on the needs of your",
    "start": "46719",
    "end": "48879"
  },
  {
    "text": "workload aurora DSQL is optimized for",
    "start": "48879",
    "end": "52960"
  },
  {
    "text": "transactional workloads that benefit",
    "start": "52960",
    "end": "54960"
  },
  {
    "text": "from asset transactions and a relational",
    "start": "54960",
    "end": "57120"
  },
  {
    "text": "data",
    "start": "57120",
    "end": "57960"
  },
  {
    "text": "model for any customer who is interested",
    "start": "57960",
    "end": "60719"
  },
  {
    "text": "in using Aurora DSQL it is important to",
    "start": "60719",
    "end": "63520"
  },
  {
    "text": "understand the authorization and",
    "start": "63520",
    "end": "64960"
  },
  {
    "text": "authentication mechanism for this",
    "start": "64960",
    "end": "67080"
  },
  {
    "text": "database let's start with authorization",
    "start": "67080",
    "end": "70320"
  },
  {
    "text": "as a customer you are responsible for",
    "start": "70320",
    "end": "72640"
  },
  {
    "text": "granting the IM policy actions to the IM",
    "start": "72640",
    "end": "76080"
  },
  {
    "text": "identity which will be used for",
    "start": "76080",
    "end": "77920"
  },
  {
    "text": "establishing the connection to your",
    "start": "77920",
    "end": "79439"
  },
  {
    "text": "cluster",
    "start": "79439",
    "end": "80840"
  },
  {
    "text": "endpoint when it comes to",
    "start": "80840",
    "end": "83240"
  },
  {
    "text": "authentication you will be generating an",
    "start": "83240",
    "end": "85360"
  },
  {
    "text": "authentication token which can be used",
    "start": "85360",
    "end": "87600"
  },
  {
    "text": "as a password for generating the",
    "start": "87600",
    "end": "90240"
  },
  {
    "text": "authentication token AWS has provided",
    "start": "90240",
    "end": "92799"
  },
  {
    "text": "you with APIs via AWS CLI or the SDK the",
    "start": "92799",
    "end": "98000"
  },
  {
    "text": "default expiry for the token is 15",
    "start": "98000",
    "end": "100079"
  },
  {
    "text": "minutes and the maximum expiry for the",
    "start": "100079",
    "end": "102320"
  },
  {
    "text": "token is up to 1",
    "start": "102320",
    "end": "104280"
  },
  {
    "text": "week customers have been asking us how",
    "start": "104280",
    "end": "107439"
  },
  {
    "text": "can I automate the token generation and",
    "start": "107439",
    "end": "110520"
  },
  {
    "text": "rotation that is where this architecture",
    "start": "110520",
    "end": "112880"
  },
  {
    "text": "can help you let's have a look at the",
    "start": "112880",
    "end": "116280"
  },
  {
    "text": "architecture consider you have an AWS",
    "start": "116280",
    "end": "118840"
  },
  {
    "text": "account within that AWS account you have",
    "start": "118840",
    "end": "121840"
  },
  {
    "text": "created an Amazon Aurora DSQL cluster",
    "start": "121840",
    "end": "125520"
  },
  {
    "text": "your secrets are being stored in the",
    "start": "125520",
    "end": "126960"
  },
  {
    "text": "secrets",
    "start": "126960",
    "end": "128360"
  },
  {
    "text": "manager you will be using the secret",
    "start": "128360",
    "end": "130720"
  },
  {
    "text": "manager and a custom AWS Lambda for",
    "start": "130720",
    "end": "134959"
  },
  {
    "text": "automated rotation of your",
    "start": "134959",
    "end": "136879"
  },
  {
    "text": "authentication token as of today secrets",
    "start": "136879",
    "end": "140480"
  },
  {
    "text": "manager allows you to have a minimum",
    "start": "140480",
    "end": "142480"
  },
  {
    "text": "rotation period of 4",
    "start": "142480",
    "end": "144280"
  },
  {
    "text": "hours this AWS Lambda will be having an",
    "start": "144280",
    "end": "147959"
  },
  {
    "text": "associated Amazon Cloudatch log and AWS",
    "start": "147959",
    "end": "151599"
  },
  {
    "text": "IM role this AWS IM role is your",
    "start": "151599",
    "end": "155200"
  },
  {
    "text": "execution role and that will be the",
    "start": "155200",
    "end": "158200"
  },
  {
    "text": "authorization that is all the",
    "start": "158200",
    "end": "160319"
  },
  {
    "text": "permissions which are needed for the",
    "start": "160319",
    "end": "162480"
  },
  {
    "text": "Lambda function to invoke the DSQL API",
    "start": "162480",
    "end": "166720"
  },
  {
    "text": "to generate an authentication",
    "start": "166720",
    "end": "169480"
  },
  {
    "text": "token as the Lambda generates the token",
    "start": "169480",
    "end": "172560"
  },
  {
    "text": "it will also be responsible for checking",
    "start": "172560",
    "end": "175040"
  },
  {
    "text": "the connectivity is successful before",
    "start": "175040",
    "end": "177440"
  },
  {
    "text": "updating the secrets in the secrets",
    "start": "177440",
    "end": "179560"
  },
  {
    "text": "manager consider you are a customer who",
    "start": "179560",
    "end": "183200"
  },
  {
    "text": "has an application which has to talk to",
    "start": "183200",
    "end": "185840"
  },
  {
    "text": "the DSQL",
    "start": "185840",
    "end": "187239"
  },
  {
    "text": "endpoint your secret rotation and your",
    "start": "187239",
    "end": "190159"
  },
  {
    "text": "secret storage is now offloaded to this",
    "start": "190159",
    "end": "192800"
  },
  {
    "text": "particular",
    "start": "192800",
    "end": "193720"
  },
  {
    "text": "architecture your application is now",
    "start": "193720",
    "end": "195920"
  },
  {
    "text": "only responsible for fetching the",
    "start": "195920",
    "end": "198000"
  },
  {
    "text": "secrets from the secrets manager using",
    "start": "198000",
    "end": "200480"
  },
  {
    "text": "them as the connection parameters for",
    "start": "200480",
    "end": "202640"
  },
  {
    "text": "your DSQL",
    "start": "202640",
    "end": "204280"
  },
  {
    "text": "endpoint that completes our architecture",
    "start": "204280",
    "end": "207319"
  },
  {
    "text": "overview let's move to the demo",
    "start": "207319",
    "end": "211760"
  },
  {
    "text": "for this demo we'll be using an example",
    "start": "213280",
    "end": "215760"
  },
  {
    "text": "which is available in",
    "start": "215760",
    "end": "217480"
  },
  {
    "text": "GitHub you can find the example under",
    "start": "217480",
    "end": "219920"
  },
  {
    "text": "the GitHub organization of AWS samples",
    "start": "219920",
    "end": "223200"
  },
  {
    "text": "and the repository name is Aurora DSQL",
    "start": "223200",
    "end": "225519"
  },
  {
    "text": "with AWS Secrets Manager let's look at",
    "start": "225519",
    "end": "228239"
  },
  {
    "text": "the folder",
    "start": "228239",
    "end": "229720"
  },
  {
    "text": "structure we have two folders here demo",
    "start": "229720",
    "end": "232560"
  },
  {
    "text": "app and infrastructure as you scroll",
    "start": "232560",
    "end": "235040"
  },
  {
    "text": "down to the readme you'll find all the",
    "start": "235040",
    "end": "237120"
  },
  {
    "text": "instructions which are needed for",
    "start": "237120",
    "end": "238400"
  },
  {
    "text": "running this code",
    "start": "238400",
    "end": "241200"
  },
  {
    "text": "sample the architecture is same as what",
    "start": "241319",
    "end": "243599"
  },
  {
    "text": "we have just discussed as part of",
    "start": "243599",
    "end": "246519"
  },
  {
    "text": "prerequisites you need to have an Amazon",
    "start": "246519",
    "end": "248959"
  },
  {
    "text": "Aurora DSQL cluster in the US East1",
    "start": "248959",
    "end": "252360"
  },
  {
    "text": "region we have also included a",
    "start": "252360",
    "end": "255160"
  },
  {
    "text": "schema.sql which consists of the tables",
    "start": "255160",
    "end": "257440"
  },
  {
    "text": "and some indexes for the demo app",
    "start": "257440",
    "end": "261959"
  },
  {
    "text": "the demo app itself is built using Java",
    "start": "262160",
    "end": "264880"
  },
  {
    "text": "and Gradel so you need to install that",
    "start": "264880",
    "end": "266639"
  },
  {
    "text": "for the compilation and u also testing",
    "start": "266639",
    "end": "269280"
  },
  {
    "text": "it",
    "start": "269280",
    "end": "270440"
  },
  {
    "text": "out python is being used for the custom",
    "start": "270440",
    "end": "273040"
  },
  {
    "text": "lambda functions which we spoke about",
    "start": "273040",
    "end": "275280"
  },
  {
    "text": "and for the infrastructure we are using",
    "start": "275280",
    "end": "277120"
  },
  {
    "text": "AWS",
    "start": "277120",
    "end": "279320"
  },
  {
    "text": "CDK and finally we are using Docker so",
    "start": "279320",
    "end": "282639"
  },
  {
    "text": "you should have Docker in your local",
    "start": "282639",
    "end": "284160"
  },
  {
    "text": "setup",
    "start": "284160",
    "end": "287120"
  },
  {
    "text": "the first step that you need is to",
    "start": "287120",
    "end": "288639"
  },
  {
    "text": "deploy the infrastructure stack if you",
    "start": "288639",
    "end": "291120"
  },
  {
    "text": "click on here you will find the details",
    "start": "291120",
    "end": "293280"
  },
  {
    "text": "of the infrastructure stack and then you",
    "start": "293280",
    "end": "295440"
  },
  {
    "text": "can refer to the demo application which",
    "start": "295440",
    "end": "297680"
  },
  {
    "text": "has all the instructions on how you can",
    "start": "297680",
    "end": "299199"
  },
  {
    "text": "test out the",
    "start": "299199",
    "end": "301759"
  },
  {
    "text": "application let's go ahead and now",
    "start": "302280",
    "end": "304240"
  },
  {
    "text": "deploy this",
    "start": "304240",
    "end": "306039"
  },
  {
    "text": "example i have already cloned the",
    "start": "306039",
    "end": "308520"
  },
  {
    "text": "repository and I'm using cloud shell if",
    "start": "308520",
    "end": "311919"
  },
  {
    "text": "I do an ls you can see the repository is",
    "start": "311919",
    "end": "314639"
  },
  {
    "text": "here",
    "start": "314639",
    "end": "316000"
  },
  {
    "text": "i'm going to be navigating in here and",
    "start": "316000",
    "end": "318080"
  },
  {
    "text": "then the infrastructure",
    "start": "318080",
    "end": "321120"
  },
  {
    "text": "folder within the infrastructure",
    "start": "321960",
    "end": "324919"
  },
  {
    "text": "folder you can see that I have all the",
    "start": "324919",
    "end": "327680"
  },
  {
    "text": "required files which are needed for",
    "start": "327680",
    "end": "329280"
  },
  {
    "text": "deploying the infrastructure using",
    "start": "329280",
    "end": "332360"
  },
  {
    "text": "CDK one of the prerequisites for",
    "start": "332360",
    "end": "334560"
  },
  {
    "text": "deploying this code example is to have",
    "start": "334560",
    "end": "336800"
  },
  {
    "text": "the Aurora DSQL cluster i have created",
    "start": "336800",
    "end": "339759"
  },
  {
    "text": "that cluster using the console and I",
    "start": "339759",
    "end": "342639"
  },
  {
    "text": "have a cluster ID which is associated",
    "start": "342639",
    "end": "344479"
  },
  {
    "text": "with that particular cluster i will need",
    "start": "344479",
    "end": "347360"
  },
  {
    "text": "this during the",
    "start": "347360",
    "end": "348600"
  },
  {
    "text": "deployment if you navigate to the readme",
    "start": "348600",
    "end": "351120"
  },
  {
    "text": "within the infrastructure folder you",
    "start": "351120",
    "end": "353280"
  },
  {
    "text": "would notice that in the instructions",
    "start": "353280",
    "end": "355520"
  },
  {
    "text": "you're expected to export the cluster ID",
    "start": "355520",
    "end": "358000"
  },
  {
    "text": "and the default region",
    "start": "358000",
    "end": "360320"
  },
  {
    "text": "after that we are using Docker build kit",
    "start": "360320",
    "end": "362560"
  },
  {
    "text": "and finally we are building a lambda",
    "start": "362560",
    "end": "364479"
  },
  {
    "text": "layer and we are using npm for packaging",
    "start": "364479",
    "end": "367680"
  },
  {
    "text": "the CDK and deploying it using CDK",
    "start": "367680",
    "end": "370720"
  },
  {
    "text": "bootstrap and CDK",
    "start": "370720",
    "end": "372360"
  },
  {
    "text": "deploy let's go ahead and do",
    "start": "372360",
    "end": "375000"
  },
  {
    "text": "that i have went ahead and executed all",
    "start": "375000",
    "end": "377600"
  },
  {
    "text": "the steps which were there in the",
    "start": "377600",
    "end": "379039"
  },
  {
    "text": "infrastructure readme you can see that",
    "start": "379039",
    "end": "380960"
  },
  {
    "text": "the CDK application is now built and the",
    "start": "380960",
    "end": "383360"
  },
  {
    "text": "tests have been successfully executed",
    "start": "383360",
    "end": "385600"
  },
  {
    "text": "the next step is to deploy it we're",
    "start": "385600",
    "end": "387440"
  },
  {
    "text": "using first CDK bootstrap so that it",
    "start": "387440",
    "end": "389680"
  },
  {
    "text": "does the foundational S3 buckets and",
    "start": "389680",
    "end": "391680"
  },
  {
    "text": "other things which are needed for CDK to",
    "start": "391680",
    "end": "393360"
  },
  {
    "text": "operate and then we will do CDK",
    "start": "393360",
    "end": "397439"
  },
  {
    "text": "deploy after I executed the CDK",
    "start": "398680",
    "end": "401280"
  },
  {
    "text": "bootstrap and CDK deploy it took",
    "start": "401280",
    "end": "404240"
  },
  {
    "text": "approximately 1 minute but then you have",
    "start": "404240",
    "end": "407039"
  },
  {
    "text": "the Aurora DSQL secret rotation stack",
    "start": "407039",
    "end": "409840"
  },
  {
    "text": "which has been deployed which creates",
    "start": "409840",
    "end": "411680"
  },
  {
    "text": "the infrastructure you can validate that",
    "start": "411680",
    "end": "414400"
  },
  {
    "text": "by navigating to the cloud formation",
    "start": "414400",
    "end": "417319"
  },
  {
    "text": "stack and you will see then the cloud",
    "start": "417319",
    "end": "419599"
  },
  {
    "text": "for console that there is an Aurora DSQL",
    "start": "419599",
    "end": "422720"
  },
  {
    "text": "secret rotation stack which has been",
    "start": "422720",
    "end": "424479"
  },
  {
    "text": "successfully created next you can check",
    "start": "424479",
    "end": "427199"
  },
  {
    "text": "the lambda function the lambda function",
    "start": "427199",
    "end": "429759"
  },
  {
    "text": "is Aurora DSQL secret rotation and",
    "start": "429759",
    "end": "432880"
  },
  {
    "text": "finally you can check the secrets",
    "start": "432880",
    "end": "434880"
  },
  {
    "text": "manager",
    "start": "434880",
    "end": "436400"
  },
  {
    "text": "in the secrets manager you will find the",
    "start": "436400",
    "end": "438720"
  },
  {
    "text": "secret Aurora DSQL which has been",
    "start": "438720",
    "end": "441199"
  },
  {
    "text": "created by our",
    "start": "441199",
    "end": "443080"
  },
  {
    "text": "infrastructure click on this particular",
    "start": "443080",
    "end": "445039"
  },
  {
    "text": "secret and as you scroll down you'll",
    "start": "445039",
    "end": "447680"
  },
  {
    "text": "find a section which says secret value",
    "start": "447680",
    "end": "450639"
  },
  {
    "text": "clicking on retrieve secret value will",
    "start": "450639",
    "end": "453039"
  },
  {
    "text": "return a key value pair of username",
    "start": "453039",
    "end": "455680"
  },
  {
    "text": "password host engine port and DB name",
    "start": "455680",
    "end": "459680"
  },
  {
    "text": "this particular password has been",
    "start": "459680",
    "end": "461759"
  },
  {
    "text": "populated by the custom AWS Lambda which",
    "start": "461759",
    "end": "465680"
  },
  {
    "text": "is the rotation",
    "start": "465680",
    "end": "467639"
  },
  {
    "text": "function when you click on the rotation",
    "start": "467639",
    "end": "469840"
  },
  {
    "text": "tab and you scroll down again you will",
    "start": "469840",
    "end": "472319"
  },
  {
    "text": "notice that the rotation status has been",
    "start": "472319",
    "end": "474160"
  },
  {
    "text": "set as enabled and we have the Lambda",
    "start": "474160",
    "end": "476560"
  },
  {
    "text": "rotation function which has been",
    "start": "476560",
    "end": "477919"
  },
  {
    "text": "associated with the secrets",
    "start": "477919",
    "end": "480840"
  },
  {
    "text": "manager for testing the connectivity to",
    "start": "480840",
    "end": "483199"
  },
  {
    "text": "the DSQL cluster we have created a",
    "start": "483199",
    "end": "485680"
  },
  {
    "text": "script called psql.sh SH which is",
    "start": "485680",
    "end": "488479"
  },
  {
    "text": "available within the demo app you can",
    "start": "488479",
    "end": "491360"
  },
  {
    "text": "find the script here and if you're",
    "start": "491360",
    "end": "493759"
  },
  {
    "text": "interested in testing it with the demo",
    "start": "493759",
    "end": "495120"
  },
  {
    "text": "app you can go ahead and follow the",
    "start": "495120",
    "end": "496560"
  },
  {
    "text": "instructions in the readme within the",
    "start": "496560",
    "end": "498000"
  },
  {
    "text": "demo app this particular script is going",
    "start": "498000",
    "end": "500639"
  },
  {
    "text": "to read the credentials from the secrets",
    "start": "500639",
    "end": "502560"
  },
  {
    "text": "manager and establish a connectivity to",
    "start": "502560",
    "end": "504879"
  },
  {
    "text": "the DSQL cluster let's go back to the",
    "start": "504879",
    "end": "508000"
  },
  {
    "text": "cloud shell and this time we will",
    "start": "508000",
    "end": "510000"
  },
  {
    "text": "navigate to the demo app",
    "start": "510000",
    "end": "514120"
  },
  {
    "text": "we can see the",
    "start": "516320",
    "end": "517959"
  },
  {
    "text": "psql.sh script in",
    "start": "517959",
    "end": "520360"
  },
  {
    "text": "here let's run the",
    "start": "520360",
    "end": "524000"
  },
  {
    "text": "script you can see that it has",
    "start": "524839",
    "end": "526800"
  },
  {
    "text": "successfully connected to the database",
    "start": "526800",
    "end": "528800"
  },
  {
    "text": "and let's run a test query to ensure",
    "start": "528800",
    "end": "530720"
  },
  {
    "text": "that the connection is successful",
    "start": "530720",
    "end": "534600"
  },
  {
    "text": "we are able to fetch the current time",
    "start": "541760",
    "end": "543279"
  },
  {
    "text": "stamp which shows that the connection is",
    "start": "543279",
    "end": "544959"
  },
  {
    "text": "successful with the DSQL",
    "start": "544959",
    "end": "548320"
  },
  {
    "text": "cluster that completes our demo for the",
    "start": "548519",
    "end": "551360"
  },
  {
    "text": "integration of Aurora DSQL with the AWS",
    "start": "551360",
    "end": "554080"
  },
  {
    "text": "secrets",
    "start": "554080",
    "end": "556360"
  },
  {
    "text": "manager that brings us to the end of our",
    "start": "556360",
    "end": "558800"
  },
  {
    "text": "architecture walkthrough thank you for",
    "start": "558800",
    "end": "560959"
  },
  {
    "text": "your time today please use the QR code",
    "start": "560959",
    "end": "563440"
  },
  {
    "text": "on the screen to navigate to the AWS",
    "start": "563440",
    "end": "565680"
  },
  {
    "text": "GitHub repository with the code sample",
    "start": "565680",
    "end": "570200"
  }
]