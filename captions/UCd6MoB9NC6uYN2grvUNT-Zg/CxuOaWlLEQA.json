[
  {
    "text": "all right welcome everyone this is",
    "start": "6230",
    "end": "12170"
  },
  {
    "text": "builders day Dublin I hope everyone's in the right place at least in the right City my name is Brent Langston I'm a",
    "start": "12170",
    "end": "19290"
  },
  {
    "text": "developer advocate by the way when I back up like this can you still hear me all right that's pretty impressive I'll",
    "start": "19290",
    "end": "26099"
  },
  {
    "text": "uh I'm used to moving around when I walk so I'll just be moving around you know",
    "start": "26099",
    "end": "31320"
  },
  {
    "text": "and these two feet right here I'm Brent Langston I'm a developer advocate on the",
    "start": "31320",
    "end": "37140"
  },
  {
    "text": "containers team and I'm here to talk to you about containers and why AWS is the",
    "start": "37140",
    "end": "44910"
  },
  {
    "text": "best place to run your container applications I want to start off by just",
    "start": "44910",
    "end": "52980"
  },
  {
    "text": "talking about what are the options for running containers on AWS so this",
    "start": "52980",
    "end": "59280"
  },
  {
    "text": "session is just going over at a high level what's available to you on AWS and",
    "start": "59280",
    "end": "66300"
  },
  {
    "text": "then throughout the day we'll sort of deep dive into each of these topics",
    "start": "66300",
    "end": "72470"
  },
  {
    "text": "so let's start by what by defining what is a container and why our customers",
    "start": "72470",
    "end": "78930"
  },
  {
    "text": "using them raise your hand are you using containers today awesome",
    "start": "78930",
    "end": "85770"
  },
  {
    "text": "most of the room how about are you running containers in production today",
    "start": "85770",
    "end": "91190"
  },
  {
    "text": "less but still maybe half the room how about are you orchestrating containers",
    "start": "91190",
    "end": "97980"
  },
  {
    "text": "today with a high level Orchestrator like mesas kubernetes ECS or some docker",
    "start": "97980",
    "end": "105810"
  },
  {
    "text": "swarm all right fewer still that's very",
    "start": "105810",
    "end": "111210"
  },
  {
    "text": "cool so what that tells me is everyone has found some value in using containers",
    "start": "111210",
    "end": "117140"
  },
  {
    "text": "and you know most of the room raised their hand half of you about half the room or so",
    "start": "117140",
    "end": "123930"
  },
  {
    "text": "raise their hand for running containers and productions so they see enough value that they're able to get their workloads",
    "start": "123930",
    "end": "131370"
  },
  {
    "text": "pushed all the way through the development side and out into production and then less of",
    "start": "131370",
    "end": "137299"
  },
  {
    "text": "you are actually orchestrating and taking full value of of being able to",
    "start": "137299",
    "end": "143299"
  },
  {
    "text": "rapidly spin-up and spin-down containers so hopefully by the end of the day you'll have a good picture of why that's",
    "start": "143299",
    "end": "150709"
  },
  {
    "text": "useful and how to get there for those of you that didn't raise your hand on any",
    "start": "150709",
    "end": "156829"
  },
  {
    "text": "of it that's okay you're still in the right place what is a container it's a",
    "start": "156829",
    "end": "162590"
  },
  {
    "text": "it's an atomic self-contained package of software that includes everything it needs to run code code runtime libraries",
    "start": "162590",
    "end": "170930"
  },
  {
    "text": "packages etc so basically when you want to distribute software when you need to",
    "start": "170930",
    "end": "178370"
  },
  {
    "text": "deploy the next version of your application think about all that all the work that goes into it for you know on a",
    "start": "178370",
    "end": "185569"
  },
  {
    "text": "server for building a server you have to of course install and configure the operating system but then after that you",
    "start": "185569",
    "end": "193400"
  },
  {
    "text": "have like all of your shared libraries all of your upstream dependencies that",
    "start": "193400",
    "end": "199489"
  },
  {
    "text": "your application needs so if your developer you know added a gym or added",
    "start": "199489",
    "end": "205669"
  },
  {
    "text": "a pip or added you name it to their application you would have to have that",
    "start": "205669",
    "end": "212209"
  },
  {
    "text": "on the server so historically developers would do that and then you know that",
    "start": "212209",
    "end": "218930"
  },
  {
    "text": "there's the pitch it over the wall problem of operations where the",
    "start": "218930",
    "end": "223970"
  },
  {
    "text": "developer just hands an Operations team their code and you know they say make it",
    "start": "223970",
    "end": "229970"
  },
  {
    "text": "work I forgot what I did I forgot everything that I've done over the past few weeks over the past sprint to make",
    "start": "229970",
    "end": "237169"
  },
  {
    "text": "this application work so the operations person has to sit there and figure out they installed this library or they",
    "start": "237169",
    "end": "244729"
  },
  {
    "text": "added this dependency and it's not in a list anywhere so there are many ways to",
    "start": "244729",
    "end": "250940"
  },
  {
    "text": "combat this problem in containers is one of them so with a container the",
    "start": "250940",
    "end": "256159"
  },
  {
    "text": "developer can actually add the library or the application to the build and they",
    "start": "256159",
    "end": "263060"
  },
  {
    "text": "can see you know from 0 to completely built and running this",
    "start": "263060",
    "end": "269060"
  },
  {
    "text": "container works on my laptop and then they can hand that container off or at least hand the description of the",
    "start": "269060",
    "end": "275240"
  },
  {
    "text": "container off to their person their operations person and that person can",
    "start": "275240",
    "end": "280340"
  },
  {
    "text": "just build it and it should build flawlessly and it should run exactly the",
    "start": "280340",
    "end": "286400"
  },
  {
    "text": "same way that it ran on the developer's laptop so that was the original sort of problem",
    "start": "286400",
    "end": "293360"
  },
  {
    "text": "that docker was trying to solve make it simple for developers to describe to",
    "start": "293360",
    "end": "299539"
  },
  {
    "text": "everyone else how to build this application how to package it up and how to ship it they also built tooling",
    "start": "299539",
    "end": "307910"
  },
  {
    "text": "around pushing containers around so you can very easily push an in an image and",
    "start": "307910",
    "end": "315080"
  },
  {
    "text": "artifact to a registry and then you can very easily pull that artifact down from",
    "start": "315080",
    "end": "321139"
  },
  {
    "text": "the registry so they you know in a way we're solving two separate problems very",
    "start": "321139",
    "end": "327410"
  },
  {
    "text": "elegantly they were able to solve building code and then shipping and",
    "start": "327410",
    "end": "334970"
  },
  {
    "text": "deploying code so docker thank you that",
    "start": "334970",
    "end": "340910"
  },
  {
    "text": "was really awesome of you and you know we the community has built upon docker a",
    "start": "340910",
    "end": "346430"
  },
  {
    "text": "lot of additional tooling that we'll be looking at throughout the day so before docker you could do this with",
    "start": "346430",
    "end": "353840"
  },
  {
    "text": "VMs how many of you deploy today or at",
    "start": "353840",
    "end": "359030"
  },
  {
    "text": "least remember a time when you deployed let's say in Amazon by building an ami",
    "start": "359030",
    "end": "366260"
  },
  {
    "text": "with your code baked into it and then spinning it up don't be embarrassed to raise your hand",
    "start": "366260",
    "end": "371660"
  },
  {
    "text": "it's okay I've done it so this is kind of the same idea take the code take the",
    "start": "371660",
    "end": "378440"
  },
  {
    "text": "build process automate it bake it into an ami and then deploy that new ami the",
    "start": "378440",
    "end": "386750"
  },
  {
    "text": "problem with this is it's very heavyweight it takes a long time it",
    "start": "386750",
    "end": "392690"
  },
  {
    "text": "takes many minutes to even went once it's fully automated takes very many minutes to build the ami",
    "start": "392690",
    "end": "400020"
  },
  {
    "text": "and then to rotate out all your infrastructure or bring up all new infrastructure and then kill off all old",
    "start": "400020",
    "end": "406710"
  },
  {
    "text": "infrastructure your deploy times you know might approach an hour best-case",
    "start": "406710",
    "end": "412349"
  },
  {
    "text": "scenario sometimes even longer so it's it's something that while yes it's great",
    "start": "412349",
    "end": "419189"
  },
  {
    "text": "to have that mechanism it was better than nothing but we can improve on it",
    "start": "419189",
    "end": "424680"
  },
  {
    "text": "and docker came along and they took that's those same concepts of being able to very easily move a single artifact",
    "start": "424680",
    "end": "431940"
  },
  {
    "text": "around and they applied it to shipping code and we're now able to iterate our",
    "start": "431940",
    "end": "437370"
  },
  {
    "text": "versions very quickly in a matter of seconds two minutes so the way that",
    "start": "437370",
    "end": "442830"
  },
  {
    "text": "happens is rather than shipping around a whole VM that includes a whole operating",
    "start": "442830",
    "end": "448710"
  },
  {
    "text": "system we can actually just ship around a docker image that just includes what",
    "start": "448710",
    "end": "453960"
  },
  {
    "text": "we need to execute our code just the libraries just the application and",
    "start": "453960",
    "end": "459150"
  },
  {
    "text": "nothing else so what the side effect of this is the host operating system now",
    "start": "459150",
    "end": "466139"
  },
  {
    "text": "that we're baking in all of our needs into a docker image the host operating",
    "start": "466139",
    "end": "471960"
  },
  {
    "text": "system can become very simple again so in the old days you used to have to be",
    "start": "471960",
    "end": "478560"
  },
  {
    "text": "very thoughtful very mindful of how you configured your host operating system and you would use config managers to",
    "start": "478560",
    "end": "484949"
  },
  {
    "text": "make sure that it was repeatable so you would have chef puppet ansible they would come along and they would",
    "start": "484949",
    "end": "491430"
  },
  {
    "text": "configure whatever is necessary in that host operating system today the only",
    "start": "491430",
    "end": "497759"
  },
  {
    "text": "thing you need in the host operating system is a kernel and the docker daemon",
    "start": "497759",
    "end": "503509"
  },
  {
    "text": "may be an agent for communicating to your Orchestrator and that's it so once",
    "start": "503509",
    "end": "509550"
  },
  {
    "text": "you have those things you can run docker applications and once you can run docker applications if your entire suite of",
    "start": "509550",
    "end": "517550"
  },
  {
    "text": "micro services is in docker you have everything you need so that's the",
    "start": "517550",
    "end": "523649"
  },
  {
    "text": "movement that the industry is moving towards docker izing everything deploying everything via docker and then",
    "start": "523649",
    "end": "531779"
  },
  {
    "text": "you can very rapidly iterate on just the parts that you're working on so I kind",
    "start": "531779",
    "end": "539100"
  },
  {
    "text": "of have gone over some of this already why are containers so popular they're portable they can run on a laptop they",
    "start": "539100",
    "end": "545670"
  },
  {
    "text": "can run on a server as long as you're staying within the very high-level kernel family you can put it you can run",
    "start": "545670",
    "end": "552269"
  },
  {
    "text": "a docker image pretty much anywhere so Linux containers won't really run on Windows directly and windows containers",
    "start": "552269",
    "end": "558930"
  },
  {
    "text": "won't really run on Linux directly but other than that you can run Linux",
    "start": "558930",
    "end": "563939"
  },
  {
    "text": "containers on Mac you can build a container using Mac OS and then ship it over to a Linux operating system no big",
    "start": "563939",
    "end": "571740"
  },
  {
    "text": "deal they're lightweight they're easy to push around they're easy to upload and download they're standardized so because",
    "start": "571740",
    "end": "579899"
  },
  {
    "text": "of this of this standard we can build we can take the time to build tooling",
    "start": "579899",
    "end": "585420"
  },
  {
    "text": "around testing and deployment and then we know that no matter what the language",
    "start": "585420",
    "end": "592019"
  },
  {
    "text": "is inside we'll be able to use our tooling to deploy and have a good test",
    "start": "592019",
    "end": "598170"
  },
  {
    "text": "pipeline and deploy pipeline so that has encouraged experimentation they're easy",
    "start": "598170",
    "end": "604379"
  },
  {
    "text": "to deploy and then of course this monolith to microservices thing this actually this movement started before",
    "start": "604379",
    "end": "610860"
  },
  {
    "text": "docker but the problem was there were some barriers to it you had to have so many more servers because every service",
    "start": "610860",
    "end": "618149"
  },
  {
    "text": "ran on a server and you had to configure each server a different way depending on what service was going to run on it and",
    "start": "618149",
    "end": "624920"
  },
  {
    "text": "now with containers we can stuff a bunch of containers onto fewer servers servers",
    "start": "624920",
    "end": "630720"
  },
  {
    "text": "and we can have more density so this is sort of accelerated the monolith to",
    "start": "630720",
    "end": "636059"
  },
  {
    "text": "micro services story so historically the",
    "start": "636059",
    "end": "641519"
  },
  {
    "text": "way things have gone first customers ran docker on ec2 and some of you indicated",
    "start": "641519",
    "end": "647819"
  },
  {
    "text": "you're still here and that's cool so ec2 and docker it's great this is definitely",
    "start": "647819",
    "end": "654660"
  },
  {
    "text": "a step in the right direction but we were hearing from our customers make",
    "start": "654660",
    "end": "660420"
  },
  {
    "text": "this easier for us and you're going to detect a theme in this talk make this easier for us is something we listen for from our",
    "start": "660420",
    "end": "667569"
  },
  {
    "text": "customers and when we start hearing you know the same idea from many customers or at least the same",
    "start": "667569",
    "end": "673600"
  },
  {
    "text": "pain point from many customers we go off and we figure out how can we make this",
    "start": "673600",
    "end": "678819"
  },
  {
    "text": "easier so for us we came up with elastic container service or ECS ECS we looked",
    "start": "678819",
    "end": "688360"
  },
  {
    "text": "at what customers were doing and what customers wanted to be able to do and we thought you know we could come up with",
    "start": "688360",
    "end": "694779"
  },
  {
    "text": "an easy way to make this happen so we wanted to make it easy to build and",
    "start": "694779",
    "end": "700689"
  },
  {
    "text": "scale applications deploy applications and control where they're running so",
    "start": "700689",
    "end": "707339"
  },
  {
    "text": "managing the fleet of servers that the applications would run on was the",
    "start": "707339",
    "end": "713679"
  },
  {
    "text": "difficult part it was the pain point that we were trying to solve many customers were trying to do this using",
    "start": "713679",
    "end": "719529"
  },
  {
    "text": "chef or puppet and they were still stuck in that mode of of having a description",
    "start": "719529",
    "end": "727779"
  },
  {
    "text": "of a server that needed to run a select few containers and then anytime they",
    "start": "727779",
    "end": "734170"
  },
  {
    "text": "needed to adjust sizing they would have you know they would have to do it on a server by server basis",
    "start": "734170",
    "end": "739929"
  },
  {
    "text": "well when ECS came along lots of animation here when ECS came along we",
    "start": "739929",
    "end": "747579"
  },
  {
    "text": "were able to make the fleet of servers generic it's just a big pool of",
    "start": "747579",
    "end": "752799"
  },
  {
    "text": "resources at this point and we can deploy containers anywhere out onto that pool and you no longer have to think in",
    "start": "752799",
    "end": "760209"
  },
  {
    "text": "terms of scaling instance by instance you can just add and remove your",
    "start": "760209",
    "end": "766119"
  },
  {
    "text": "applications as needed and then occasionally if you hit the wall on how",
    "start": "766119",
    "end": "771910"
  },
  {
    "text": "big the pool of resources is you just add more to the pool right that's when you get to scale up or scale down the",
    "start": "771910",
    "end": "778290"
  },
  {
    "text": "instances so it becomes a lot easier to you know add or remove instances so",
    "start": "778290",
    "end": "788150"
  },
  {
    "text": "excuse me we were trying to remove the pain points and heavy lifting of",
    "start": "788150",
    "end": "794110"
  },
  {
    "text": "scheduling tasks so instead of scheduling on an instance by instance basis now you can just schedule out onto",
    "start": "794110",
    "end": "802010"
  },
  {
    "text": "the pool placement you no longer have to worry about I'm gonna build a web tier a front-end",
    "start": "802010",
    "end": "808610"
  },
  {
    "text": "tier a cache tier of whatever to your and have all of those instances to",
    "start": "808610",
    "end": "814430"
  },
  {
    "text": "manage maintain scale reboot etc you just have a fleet of instances and you",
    "start": "814430",
    "end": "821000"
  },
  {
    "text": "launch those applications oh and my favorite management control",
    "start": "821000",
    "end": "829020"
  },
  {
    "text": "plane updates so this is actually referring to think about the control",
    "start": "829020",
    "end": "834930"
  },
  {
    "text": "well we'll get into it but the control plane of your Orchestrator we also wanted it to be easy for you to not have",
    "start": "834930",
    "end": "841440"
  },
  {
    "text": "to worry about running it operating it updating it etc so we wanted that to",
    "start": "841440",
    "end": "848100"
  },
  {
    "text": "just be automatic and you never have to worry about it so if you take a look at ECS today by the way raise your hand if",
    "start": "848100",
    "end": "855089"
  },
  {
    "text": "you're running ECS today nice several hands anyone just shout out",
    "start": "855089",
    "end": "861510"
  },
  {
    "text": "what version of ECS are you running the",
    "start": "861510",
    "end": "867000"
  },
  {
    "text": "latest I usually I get silence I'm happy that you're creative enough to have an",
    "start": "867000",
    "end": "872010"
  },
  {
    "text": "answer yeah so that it's a trick question there are no versions in ECS so",
    "start": "872010",
    "end": "878040"
  },
  {
    "text": "you're always running the latest right answer we upgrade things in the",
    "start": "878040",
    "end": "883890"
  },
  {
    "text": "background we're constantly improving it and you never have to worry about it you just get those changes automatically so",
    "start": "883890",
    "end": "891240"
  },
  {
    "text": "I think that's really cool especially if you've ever compared it to some of the",
    "start": "891240",
    "end": "896339"
  },
  {
    "text": "other orchestration choices that are out there I personally think orchestrating containers is the way to go and I would",
    "start": "896339",
    "end": "903900"
  },
  {
    "text": "pick any Orchestrator over none but at the same time there are you know within",
    "start": "903900",
    "end": "910290"
  },
  {
    "text": "the selection of orchestrators there are some that are easier than others and ECS is among the easiest mainly because you",
    "start": "910290",
    "end": "916980"
  },
  {
    "text": "never have to worry about updating it you never have to like rotate to the next version or anything like that it's",
    "start": "916980",
    "end": "923310"
  },
  {
    "text": "really cool so it's a managed platform and it gives us a way to manage a fleet",
    "start": "923310",
    "end": "931529"
  },
  {
    "text": "of servers cluster management it also gives us a way to deploy containers so",
    "start": "931529",
    "end": "937650"
  },
  {
    "text": "we can just schedule on a container by container basis or on a service by service basis and then it has deep",
    "start": "937650",
    "end": "944850"
  },
  {
    "text": "integration into other AWS services and we'll talk more about that in a little bit a lot of customers",
    "start": "944850",
    "end": "952560"
  },
  {
    "text": "are actually using ECS and they're using it on a very large scale ECS is one of the most scalable",
    "start": "952560",
    "end": "959480"
  },
  {
    "text": "orchestrators available to customers if you think about like all of the",
    "start": "959480",
    "end": "964500"
  },
  {
    "text": "orchestrators that you have that you can choose at some point you'll hit an upper limit where you you know can't add any",
    "start": "964500",
    "end": "973170"
  },
  {
    "text": "more nodes or you can't churn containers any faster than you already are",
    "start": "973170",
    "end": "979410"
  },
  {
    "text": "and that met that limit for some customers might sound pretty high but it's very approachable for almost any",
    "start": "979410",
    "end": "987090"
  },
  {
    "text": "customer with ECS we were on a managed control plane for every customer in the",
    "start": "987090",
    "end": "994230"
  },
  {
    "text": "region so one control plane multi-tenant for every customer so you can imagine",
    "start": "994230",
    "end": "999450"
  },
  {
    "text": "that we are we have you know hundreds of value hundreds of thousands of instances",
    "start": "999450",
    "end": "1005840"
  },
  {
    "text": "under management and we're launching millions of containers you know all the time so it's really impressive that that",
    "start": "1005840",
    "end": "1014390"
  },
  {
    "text": "we're handing over a control plane that is this scalable and giving you",
    "start": "1014390",
    "end": "1020530"
  },
  {
    "text": "basically no boundaries to be able to launch experiment and run your",
    "start": "1020530",
    "end": "1026329"
  },
  {
    "text": "applications go pro by taking advantage of Amazon ECS we have the power to",
    "start": "1026330",
    "end": "1033410"
  },
  {
    "text": "understand manipulate and manage our environment easily so they are constantly experimenting and launching",
    "start": "1033410",
    "end": "1040040"
  },
  {
    "text": "applications out onto ECS and then routing a little bit of traffic to it and seeing you know how how does it",
    "start": "1040040",
    "end": "1046970"
  },
  {
    "text": "working is it slow is it fast am I getting a lot of errors am I not and then if they need to they can roll",
    "start": "1046970",
    "end": "1052640"
  },
  {
    "text": "it back or they can iterate and continue to roll it forward they were able to",
    "start": "1052640",
    "end": "1059060"
  },
  {
    "text": "achieve a 70% reduction in their compute footprint so they were able to reduce",
    "start": "1059060",
    "end": "1065000"
  },
  {
    "text": "their instances by 70% think about that for a second instead of running a an",
    "start": "1065000",
    "end": "1071600"
  },
  {
    "text": "instance or its set of instances or a fleet of instances per service they can",
    "start": "1071600",
    "end": "1077450"
  },
  {
    "text": "now combine everything into one big pool and run in a much more dense fashion and have fewer",
    "start": "1077450",
    "end": "1084440"
  },
  {
    "text": "instances that they have to worry about paying for so I mentioned we're",
    "start": "1084440",
    "end": "1090260"
  },
  {
    "text": "constantly improving constantly adding to ECS and you just get those changes automatically",
    "start": "1090260",
    "end": "1096460"
  },
  {
    "text": "what have we added in 2018 faster launch times we've improved launch time for ECS",
    "start": "1096460",
    "end": "1103570"
  },
  {
    "text": "I'm not sure what the statistic is but faster is always better right task",
    "start": "1103570",
    "end": "1109070"
  },
  {
    "text": "metric and metadata endpoint this can this can be used for you to establish",
    "start": "1109070",
    "end": "1114170"
  },
  {
    "text": "insight into where your containers running your container might want to",
    "start": "1114170",
    "end": "1119570"
  },
  {
    "text": "know where it's running so that it can have an understanding of the best option for it to for example talk to its",
    "start": "1119570",
    "end": "1126380"
  },
  {
    "text": "back-end or talk to another container so we have a metadata endpoint that allows",
    "start": "1126380",
    "end": "1132320"
  },
  {
    "text": "you to discover that kind of information we're out 53 auto naming as your",
    "start": "1132320",
    "end": "1137900"
  },
  {
    "text": "containers come up and down it's nice to be able to locate them sometimes",
    "start": "1137900",
    "end": "1143060"
  },
  {
    "text": "especially when it comes to horizontal traffic container to container traffic that kind of traffic you can do directly",
    "start": "1143060",
    "end": "1150890"
  },
  {
    "text": "instead of going over a load balancer if you can know where the other container is running we update a docker to 1709 so",
    "start": "1150890",
    "end": "1160760"
  },
  {
    "text": "you now have a pretty modern docker engine and then we allowed config",
    "start": "1160760",
    "end": "1166580"
  },
  {
    "text": "options sh m size and temp FS there's actually a bigger list of options we've",
    "start": "1166580",
    "end": "1171890"
  },
  {
    "text": "added two since then but you see that the idea where can we r constantly",
    "start": "1171890",
    "end": "1177620"
  },
  {
    "text": "adding docker options to the task definition so that you can add them",
    "start": "1177620",
    "end": "1182690"
  },
  {
    "text": "yourself daemon scheduling this was a big one customers were asking for this because",
    "start": "1182690",
    "end": "1190390"
  },
  {
    "text": "sometimes there's a workload that you need to launch and the way you want to",
    "start": "1190390",
    "end": "1195500"
  },
  {
    "text": "schedule it isn't based on any kind of scaling metric or any kind of capacity",
    "start": "1195500",
    "end": "1201130"
  },
  {
    "text": "it's actually based on number of instances you have an example of this is",
    "start": "1201130",
    "end": "1206570"
  },
  {
    "text": "a log driver or the data dog agent so if you need to deploy",
    "start": "1206570",
    "end": "1211790"
  },
  {
    "text": "you know one per server that's now completely doable using daemon",
    "start": "1211790",
    "end": "1218480"
  },
  {
    "text": "scheduling this was something that before we launched this you would have to you know be sort of constantly on the",
    "start": "1218480",
    "end": "1224630"
  },
  {
    "text": "lookout of how many instances do I have in my auto-scale group and then you would adjust the deployment accordingly",
    "start": "1224630",
    "end": "1231370"
  },
  {
    "text": "and there were no guarantees about you know would would your container would",
    "start": "1231370",
    "end": "1236929"
  },
  {
    "text": "that you're trying to deploy make it onto every instance because some instances might be full they might be",
    "start": "1236929",
    "end": "1243590"
  },
  {
    "text": "full of other services so with the daemon scheduler in place we're actually able to as you add or remove instances",
    "start": "1243590",
    "end": "1250880"
  },
  {
    "text": "adjust the number of of this type of container that we expect to be deployed",
    "start": "1250880",
    "end": "1257360"
  },
  {
    "text": "and those will be deployed on every machine CLI support for docker compose",
    "start": "1257360",
    "end": "1263710"
  },
  {
    "text": "v3 some shops will actually have a local",
    "start": "1263710",
    "end": "1268820"
  },
  {
    "text": "docker compose environment for their developers so their developers if they need to bring up all the services to",
    "start": "1268820",
    "end": "1275030"
  },
  {
    "text": "test against on their laptop they'll use docker compose up and that's cool but then what if you want to translate that",
    "start": "1275030",
    "end": "1282230"
  },
  {
    "text": "into deploying out onto ECS so we've always been able to translate a docker",
    "start": "1282230",
    "end": "1289760"
  },
  {
    "text": "compose file but we were locked down to I think v2 I don't remember the version specifically but we've updated now to v3",
    "start": "1289760",
    "end": "1297110"
  },
  {
    "text": "so you can docker compose locally and then you can use that docker compose file to get you started out on ECS",
    "start": "1297110",
    "end": "1305050"
  },
  {
    "text": "docker container health checks was another big one one of the cool things about docker is and health and one of",
    "start": "1305050",
    "end": "1313610"
  },
  {
    "text": "the cool things about docker is you have health checking built into it so rather",
    "start": "1313610",
    "end": "1319040"
  },
  {
    "text": "than worrying about you know am i listening on an HTTP port is that port",
    "start": "1319040",
    "end": "1324470"
  },
  {
    "text": "always available yeah that's a great health check but not everything that's running in docker is an HTTP process",
    "start": "1324470",
    "end": "1331070"
  },
  {
    "text": "sometimes it's it's a worker process that's just processing something or sometimes it's listening on you know a",
    "start": "1331070",
    "end": "1337880"
  },
  {
    "text": "UDP port or it's listening on I don't know something else that's not",
    "start": "1337880",
    "end": "1343110"
  },
  {
    "text": "HTTP protocol so having your load balancer reach out and check is",
    "start": "1343110",
    "end": "1348750"
  },
  {
    "text": "certainly it's still available and that was that was the starting point but now you can define a check right in the",
    "start": "1348750",
    "end": "1355320"
  },
  {
    "text": "docker file and then we can honor that by looking and seeing hey this container",
    "start": "1355320",
    "end": "1361559"
  },
  {
    "text": "is healthy or if it's not healthy we can kill it and bring up a new one we",
    "start": "1361559",
    "end": "1369360"
  },
  {
    "text": "started signing the ECS agent to add reassurance that you're running the",
    "start": "1369360",
    "end": "1374580"
  },
  {
    "text": "correct agent that's unmodified and then we built an SSM parameter support this",
    "start": "1374580",
    "end": "1380820"
  },
  {
    "text": "is one of my favorites because secrets management and parameter management is sort of a difficult to solve problem",
    "start": "1380820",
    "end": "1388669"
  },
  {
    "text": "only now it's simple as how many of you guys use SSM today this is a little very",
    "start": "1388669",
    "end": "1396899"
  },
  {
    "text": "few hands by the way went up this is a little-known service that everyone needs",
    "start": "1396899",
    "end": "1402059"
  },
  {
    "text": "to be aware of and start using it so it's just a simple key value store that",
    "start": "1402059",
    "end": "1407340"
  },
  {
    "text": "you can write into and you can encrypt using KSM and then you can using iam",
    "start": "1407340",
    "end": "1416070"
  },
  {
    "text": "roles assign privileges that are that allow pulling of these keys and values",
    "start": "1416070",
    "end": "1423649"
  },
  {
    "text": "so by having this you can put encrypted secrets into SSM and then you can pull",
    "start": "1423649",
    "end": "1432779"
  },
  {
    "text": "them out so like for example a database password the database username and password is something that you very",
    "start": "1432779",
    "end": "1439350"
  },
  {
    "text": "often need to provide to an API server the way that you do that there are many",
    "start": "1439350",
    "end": "1446010"
  },
  {
    "text": "ways to do it but one way customers do it is by writing that or injecting it into their container environment so",
    "start": "1446010",
    "end": "1453659"
  },
  {
    "text": "we've basically built integration that'll do that for you so you just",
    "start": "1453659",
    "end": "1459029"
  },
  {
    "text": "define in the task definition these are the keys that I need to know and it will",
    "start": "1459029",
    "end": "1464279"
  },
  {
    "text": "reach out to SSM as the container starts up and read in those values and add them",
    "start": "1464279",
    "end": "1470320"
  },
  {
    "text": "to the container environment for you and then service discovery I mentioned",
    "start": "1470320",
    "end": "1476620"
  },
  {
    "text": "horizontal container traffic service discovery is sort of the higher level",
    "start": "1476620",
    "end": "1482259"
  },
  {
    "text": "version of that so we we built on route 53 auto naming the ability to basically",
    "start": "1482259",
    "end": "1488740"
  },
  {
    "text": "use route 53 and have a DNS based service discovery so now if you have a",
    "start": "1488740",
    "end": "1495730"
  },
  {
    "text": "container that's named you know cache or something like that and you need to be",
    "start": "1495730",
    "end": "1501759"
  },
  {
    "text": "able to reach it from some other container you can just DNS resolve cache",
    "start": "1501759",
    "end": "1507250"
  },
  {
    "text": "dot local and go with you know send your traffic directly to that container since",
    "start": "1507250",
    "end": "1513159"
  },
  {
    "text": "it's built on route 53 route 53 is an extremely reliable DNS service and the",
    "start": "1513159",
    "end": "1521519"
  },
  {
    "text": "domains are all local and internal only to the V PC so this is traffic that'll",
    "start": "1521519",
    "end": "1528850"
  },
  {
    "text": "just stay in the V PC and only resolve inside the V PC that way we also run ECR",
    "start": "1528850",
    "end": "1539320"
  },
  {
    "text": "this is another this is another to me great service that solved a huge problem",
    "start": "1539320",
    "end": "1544899"
  },
  {
    "text": "but it didn't actually feel like it was a huge problem I think because it came",
    "start": "1544899",
    "end": "1551559"
  },
  {
    "text": "along so early with the solution has anyone ever run their own registry I did",
    "start": "1551559",
    "end": "1558129"
  },
  {
    "text": "it was it was awesome until one day when it wasn't I fired up the registry and",
    "start": "1558129",
    "end": "1564039"
  },
  {
    "text": "and I had a writing to s3 and everything was great I thought wow this is easy you",
    "start": "1564039",
    "end": "1570309"
  },
  {
    "text": "know everything is configurable in the environment all I need to do if I need to change something is is change an",
    "start": "1570309",
    "end": "1576850"
  },
  {
    "text": "environment variable and redeploy all my images stay in s3 it's perfect why would",
    "start": "1576850",
    "end": "1582070"
  },
  {
    "text": "I do anything different and then as I started scaling scaling scaling I",
    "start": "1582070",
    "end": "1587409"
  },
  {
    "text": "started noticing that container pull times were much slower and I was like",
    "start": "1587409",
    "end": "1592720"
  },
  {
    "text": "what's going on and I realized oh I need to add caching and so there's a there's",
    "start": "1592720",
    "end": "1598539"
  },
  {
    "text": "a way to using Redis so now I'm running a fleet of Redis servers that have you know a",
    "start": "1598539",
    "end": "1604940"
  },
  {
    "text": "Redis cluster and I started looking at it and I'm thinking why am I doing this I have you know capacity for running in",
    "start": "1604940",
    "end": "1613010"
  },
  {
    "text": "number of registries and then I have capacity for running Redis and I'm having to manage all of this stuff ECR",
    "start": "1613010",
    "end": "1620630"
  },
  {
    "text": "on the other hand I just point at it and it works and it scales perfectly in the",
    "start": "1620630",
    "end": "1626720"
  },
  {
    "text": "backend I never have to think about it it's just they're always available it also encrypts it rest using KSM and",
    "start": "1626720",
    "end": "1634330"
  },
  {
    "text": "it compresses my images for me so I don't have to work worried about how",
    "start": "1634330",
    "end": "1639860"
  },
  {
    "text": "bitten well I still worry about how big the image is but the only thing that I pay for with the ECR is how much space",
    "start": "1639860",
    "end": "1646940"
  },
  {
    "text": "I'm taking up and because it's compressing if I did happen to push a",
    "start": "1646940",
    "end": "1652190"
  },
  {
    "text": "big image that's okay you know it'll compress it down if it's compressible so I get to take advantage",
    "start": "1652190",
    "end": "1659090"
  },
  {
    "text": "of that as well the way that instances",
    "start": "1659090",
    "end": "1664100"
  },
  {
    "text": "interact with a docker registry is by logging into them and so we built a",
    "start": "1664100",
    "end": "1669140"
  },
  {
    "text": "command ECR get log in that would actually get a proper doctor login",
    "start": "1669140",
    "end": "1675470"
  },
  {
    "text": "command so this is really step one for you using ecr's to simply log into it so",
    "start": "1675470",
    "end": "1681050"
  },
  {
    "text": "run this command get the output and then paste it into your terminal and you'll be logged in to ECR",
    "start": "1681050",
    "end": "1688000"
  },
  {
    "text": "so kubernetes how many of you guys run kubernetes not as many hands as I",
    "start": "1688000",
    "end": "1695720"
  },
  {
    "text": "expected so I'm probably I shouldn't ask bub curious does anyone run kubernetes",
    "start": "1695720",
    "end": "1701030"
  },
  {
    "text": "in production but openshift",
    "start": "1701030",
    "end": "1706400"
  },
  {
    "text": "alright we'll count that so we launched",
    "start": "1706400",
    "end": "1712120"
  },
  {
    "text": "kubernetes ga-in I believe June before",
    "start": "1712120",
    "end": "1719090"
  },
  {
    "text": "that we were looking around actually CN CF did a survey but we were internally",
    "start": "1719090",
    "end": "1725630"
  },
  {
    "text": "trying to figure out we were talking to customers that were asking us about kubernetes and and we started noticing a lot of",
    "start": "1725630",
    "end": "1732080"
  },
  {
    "text": "customers Nettie's on AWS now they could run kubernetes elsewhere or they could",
    "start": "1732080",
    "end": "1739700"
  },
  {
    "text": "choose to manage it themselves and launch it on ec2 instances and run their",
    "start": "1739700",
    "end": "1745130"
  },
  {
    "text": "own control plane on AWS and then this CN CF survey came out and we and we see",
    "start": "1745130",
    "end": "1751789"
  },
  {
    "text": "that 57% of kubernetes workloads are running on AWS before we actually",
    "start": "1751789",
    "end": "1758149"
  },
  {
    "text": "launched a managed service and so we announced last year that we were going",
    "start": "1758149",
    "end": "1765500"
  },
  {
    "text": "to come out with a managed service and then it went GA I believe June or maybe",
    "start": "1765500",
    "end": "1771470"
  },
  {
    "text": "early July of this year so again make it easier for us type moment right we saw",
    "start": "1771470",
    "end": "1779779"
  },
  {
    "text": "that customers were struggling to run kubernetes manage the control plane deal",
    "start": "1779779",
    "end": "1785120"
  },
  {
    "text": "with upgrades deal with @cd outages and all that stuff and we said you know what",
    "start": "1785120",
    "end": "1790610"
  },
  {
    "text": "if we put a team of experts on this we could probably do this at scale for all",
    "start": "1790610",
    "end": "1795649"
  },
  {
    "text": "of our customers so that's what we did and then we want to add native AWS",
    "start": "1795649",
    "end": "1803480"
  },
  {
    "text": "integrations so on top of kubernetes it would be really nice if we could you",
    "start": "1803480",
    "end": "1809450"
  },
  {
    "text": "know just like we do for ECS try and integrate in as many other AWS services as possible to make that a seamless",
    "start": "1809450",
    "end": "1817059"
  },
  {
    "text": "experience so there's two approaches when you want to do something like that",
    "start": "1817059",
    "end": "1822500"
  },
  {
    "text": "one approach is to fork the upstream project and then maintain your own",
    "start": "1822500",
    "end": "1828769"
  },
  {
    "text": "version of it and that's a fine approach but that's not what we wanted to do we",
    "start": "1828769",
    "end": "1834769"
  },
  {
    "text": "wanted to we understood that the kubernetes community values openness and",
    "start": "1834769",
    "end": "1840409"
  },
  {
    "text": "values you know upstream contribution and so instead of doing that we want to",
    "start": "1840409",
    "end": "1848120"
  },
  {
    "text": "provide the absolute vanilla upstream version of kubernetes so it is pure",
    "start": "1848120",
    "end": "1855110"
  },
  {
    "text": "kubernetes unmodified upstream version and then anything that we want to add on",
    "start": "1855110",
    "end": "1861350"
  },
  {
    "text": "we actually work upstream with the community to get it added so",
    "start": "1861350",
    "end": "1866969"
  },
  {
    "text": "that is Amazon eks elastic container service for kubernetes it is certified",
    "start": "1866969",
    "end": "1874499"
  },
  {
    "text": "by the CN CF so they've taken a look at it taking a look at our setup and they've said yes this is pure vanilla",
    "start": "1874499",
    "end": "1882299"
  },
  {
    "text": "upstream kubernetes unmodified etc so it has our seal of approval excuse me",
    "start": "1882299",
    "end": "1891229"
  },
  {
    "text": "it is again managed upstream service it does have some native integrations into",
    "start": "1891599",
    "end": "1896989"
  },
  {
    "text": "AWS there's a deep dive on eks coming up later today you'll get to see some of",
    "start": "1896989",
    "end": "1903509"
  },
  {
    "text": "that and then we have a lot of projects where we are contributing back to the community if you've ever paid attention to the",
    "start": "1903509",
    "end": "1910559"
  },
  {
    "text": "kubernetes community they're divided up into SIG's special interest groups and",
    "start": "1910559",
    "end": "1916320"
  },
  {
    "text": "the AWS cig is a very active group that",
    "start": "1916320",
    "end": "1921779"
  },
  {
    "text": "is now operated by us but has a lot of",
    "start": "1921779",
    "end": "1926789"
  },
  {
    "text": "contributions that we've that we've brought so far in a pretty short amount of time so we've launched for example",
    "start": "1926789",
    "end": "1933299"
  },
  {
    "text": "alb integration so now as a 1.0 you can",
    "start": "1933299",
    "end": "1938519"
  },
  {
    "text": "you can have your ingress controller be an ALB rather than a whole bunch of",
    "start": "1938519",
    "end": "1943649"
  },
  {
    "text": "elby's prior to that it was e L bees and our customers were you know they start out it was fine everything was working",
    "start": "1943649",
    "end": "1951749"
  },
  {
    "text": "but then they started noticing you know what I have like 20 or 30 lbs and they",
    "start": "1951749",
    "end": "1957149"
  },
  {
    "text": "all have a certain fee per month or per however long they're up so e lb is",
    "start": "1957149",
    "end": "1962820"
  },
  {
    "text": "actually a pretty substantial portion of my bill now and we said well you know lb",
    "start": "1962820",
    "end": "1968309"
  },
  {
    "text": "is more scalable and you would just need one of those so we started working on integrating alb so that's a great",
    "start": "1968309",
    "end": "1975570"
  },
  {
    "text": "example of contributing back to the community and the community gets then to",
    "start": "1975570",
    "end": "1980940"
  },
  {
    "text": "take advantage of that if they're using e KS they can take advantage of the alb ingress controller or if they're running",
    "start": "1980940",
    "end": "1989009"
  },
  {
    "text": "their own control plane no big deal they still get to take advantage of that ingress controller so the way it works",
    "start": "1989009",
    "end": "1998300"
  },
  {
    "text": "if you've ever used kubernetes or you have ever seen someone use kubernetes you've almost certainly seen the cube",
    "start": "1998300",
    "end": "2005480"
  },
  {
    "text": "control command so someone at their laptop is running cube control they're issuing commands to an API process",
    "start": "2005480",
    "end": "2013040"
  },
  {
    "text": "that's running on the control plane so this API process on the control plane",
    "start": "2013040",
    "end": "2018220"
  },
  {
    "text": "normally if you're running the control plane is just a container running on a",
    "start": "2018220",
    "end": "2023450"
  },
  {
    "text": "fleet of hopefully highly available control plane servers in our case on the",
    "start": "2023450",
    "end": "2030470"
  },
  {
    "text": "other hand we're running those for you so that's why we have a little cloud icon you don't have to worry about",
    "start": "2030470",
    "end": "2036530"
  },
  {
    "text": "running those or managing that you just issue cube control commands and it talks",
    "start": "2036530",
    "end": "2041870"
  },
  {
    "text": "to the API on our control plane and then",
    "start": "2041870",
    "end": "2047800"
  },
  {
    "text": "we will issue instructions and any worker nodes that you have that are",
    "start": "2047800",
    "end": "2053898"
  },
  {
    "text": "registered to that control plane will start to act on those instructions and",
    "start": "2053899",
    "end": "2059270"
  },
  {
    "text": "start to spin up servers or containers I should say so eks workers these are the",
    "start": "2059270",
    "end": "2068030"
  },
  {
    "text": "instances that you bring that you attach to the control plane and then the",
    "start": "2068030",
    "end": "2073429"
  },
  {
    "text": "control plane itself was just my cluster dot eks Amazon AWS comm so it's just a control",
    "start": "2073429",
    "end": "2080419"
  },
  {
    "text": "plane that we're operating for you we offer semantic versioning of eks so",
    "start": "2080419",
    "end": "2088070"
  },
  {
    "text": "unlike ECS where there is no version because there are releases of kubernetes",
    "start": "2088070",
    "end": "2094250"
  },
  {
    "text": "in a version manner we want to make sure that we have that same feature so we",
    "start": "2094250",
    "end": "2100790"
  },
  {
    "text": "release versions of kubernetes as they come out and that you're able to upgrade",
    "start": "2100790",
    "end": "2105800"
  },
  {
    "text": "to them by the way I believe we demoed at reinvent the upgrade process and that",
    "start": "2105800",
    "end": "2113630"
  },
  {
    "text": "should be rolling out very very soon for you to upgrade your clusters from one ten eleven to",
    "start": "2113630",
    "end": "2120520"
  },
  {
    "text": "eleven I forget the patch number so you'll be able to very easily just in a",
    "start": "2120520",
    "end": "2125680"
  },
  {
    "text": "drop-down box pick the next version and upgrade your cluster I don't know if",
    "start": "2125680",
    "end": "2131380"
  },
  {
    "text": "you've ever raised your hand if you've ever upgraded a kubernetes cluster that you were running how long did it take",
    "start": "2131380",
    "end": "2138010"
  },
  {
    "text": "you 20 minutes wow that's impressive I",
    "start": "2138010",
    "end": "2146560"
  },
  {
    "text": "was expecting all day it's it's not a it's not an easy process and in fact for",
    "start": "2146560",
    "end": "2153070"
  },
  {
    "text": "a while the process was actually go build another cluster and cut traffic deploy all your applications and cut",
    "start": "2153070",
    "end": "2160390"
  },
  {
    "text": "traffic over to it so it's been it's been a very grueling process to deal",
    "start": "2160390",
    "end": "2166150"
  },
  {
    "text": "with and our customers don't like having to do it so just having a drop-down and picking the next version makes it",
    "start": "2166150",
    "end": "2173950"
  },
  {
    "text": "trivially easy so kubernetes upgrade will come out we will automatically",
    "start": "2173950",
    "end": "2179560"
  },
  {
    "text": "apply patch updates for you so you don't have to do anything for those those will",
    "start": "2179560",
    "end": "2185890"
  },
  {
    "text": "just you'll get them and then for the minor version updates the ones that",
    "start": "2185890",
    "end": "2191080"
  },
  {
    "text": "include new features that'll be where you take action and you decide which clusters to upgrade and which maybe you",
    "start": "2191080",
    "end": "2198250"
  },
  {
    "text": "don't want to upgrade so what does that",
    "start": "2198250",
    "end": "2203350"
  },
  {
    "text": "leave for managing it leaves managing workers right so we're managing the",
    "start": "2203350",
    "end": "2209680"
  },
  {
    "text": "control plane for you now that leaves the data plane by the way all day long you're probably gonna hear me refer to",
    "start": "2209680",
    "end": "2216240"
  },
  {
    "text": "control plane data plane we think just about everything at AWS that's how we think about it we think",
    "start": "2216240",
    "end": "2222730"
  },
  {
    "text": "about it in terms of the management of the service and then the the execution",
    "start": "2222730",
    "end": "2228520"
  },
  {
    "text": "of what the service is trying to do so in the kubernetes realm the control",
    "start": "2228520",
    "end": "2235540"
  },
  {
    "text": "plane is the scheduler yet the thing that did the cluster Orchestrator the",
    "start": "2235540",
    "end": "2241060"
  },
  {
    "text": "api service that's all control plane processes and then they come up with",
    "start": "2241060",
    "end": "2246350"
  },
  {
    "text": "a set of instructions that they're going to apply to the worker nodes and the worker nodes are just where your",
    "start": "2246350",
    "end": "2252500"
  },
  {
    "text": "containers are going to execute so your containers launch out onto the data plane so we want we hear from customers",
    "start": "2252500",
    "end": "2260780"
  },
  {
    "text": "you know what I don't want to worry about even managing the data plane so we",
    "start": "2260780",
    "end": "2266810"
  },
  {
    "text": "came out with far gate far gate is a managed data plane so just like we",
    "start": "2266810",
    "end": "2273080"
  },
  {
    "text": "managed to control planes for you you get a choice you get the control plane for ECS or you get the control plane for",
    "start": "2273080",
    "end": "2280600"
  },
  {
    "text": "eks we actually now offer you a data plane management service called far gate",
    "start": "2280600",
    "end": "2287090"
  },
  {
    "text": "and right now far gates available for ECS integration and we hope sometime in",
    "start": "2287090",
    "end": "2292460"
  },
  {
    "text": "2019 to make it available for kubernetes as well and you should see again in the",
    "start": "2292460",
    "end": "2298130"
  },
  {
    "text": "AWS se you should see work toward in that direction you know hopefully very",
    "start": "2298130",
    "end": "2304730"
  },
  {
    "text": "soon so no cluster no infrastructure to manage no instances this is as close to",
    "start": "2304730",
    "end": "2312380"
  },
  {
    "text": "Cerberus as you can think of so you know no servers to patch upgrade update worry",
    "start": "2312380",
    "end": "2319610"
  },
  {
    "text": "about the sizing of etc I said most of",
    "start": "2319610",
    "end": "2326750"
  },
  {
    "text": "this already so all the goal is just give it a task definition say run my container and far",
    "start": "2326750",
    "end": "2334340"
  },
  {
    "text": "gate will you know the control plane will take that definition and launch it",
    "start": "2334340",
    "end": "2339830"
  },
  {
    "text": "out onto a set of infrastructure and you never have to worry about do I have enough capacity so this allows you to",
    "start": "2339830",
    "end": "2348440"
  },
  {
    "text": "focus more on the workload less on making it run the idea is to shift your",
    "start": "2348440",
    "end": "2356060"
  },
  {
    "text": "focus up the stack keep shifting it up so that you can worry about less and",
    "start": "2356060",
    "end": "2361160"
  },
  {
    "text": "less and less of the dependencies and more about the business logic",
    "start": "2361160",
    "end": "2366350"
  },
  {
    "text": "we're always driving towards doing the commodity work for you doing the utility",
    "start": "2366350",
    "end": "2371870"
  },
  {
    "text": "work for you so that you can do the thing that makes your company unique",
    "start": "2371870",
    "end": "2377890"
  },
  {
    "text": "so how does this look in practice well used to before we launched Fargate a",
    "start": "2377970",
    "end": "2384060"
  },
  {
    "text": "cluster would have this line and you would see that there are two services two running tasks two pending tasks and",
    "start": "2384060",
    "end": "2390660"
  },
  {
    "text": "you keep going and you see your CPU and memory aggregate utilization for all",
    "start": "2390660",
    "end": "2396450"
  },
  {
    "text": "your instances and that you have two container instances well on Fargate we added a second line and you can still",
    "start": "2396450",
    "end": "2403680"
  },
  {
    "text": "see services running tasks pending tasks but there are no instances now the thing",
    "start": "2403680",
    "end": "2409079"
  },
  {
    "text": "that it doesn't call out on the slide is every cluster is a Fargate cluster",
    "start": "2409079",
    "end": "2416000"
  },
  {
    "text": "automatically every cluster is a heterogeneous cluster so you can launch tasks onto instances or you can launch",
    "start": "2416000",
    "end": "2424890"
  },
  {
    "text": "tasks as Fargate tasks all on the same cluster the same isolation boundary you",
    "start": "2424890",
    "end": "2432420"
  },
  {
    "text": "have a very wide variety of combinations of such of container sizing you can pick",
    "start": "2432420",
    "end": "2437780"
  },
  {
    "text": "down to a quarter CPU so I don't know if you know this but docker allows you to",
    "start": "2437780",
    "end": "2443400"
  },
  {
    "text": "run with fractional CPUs so we'll go all the way down to 1/4 CPU and half a gig",
    "start": "2443400",
    "end": "2450780"
  },
  {
    "text": "of ram or all the way up to 4 CPUs and 30 gigs of ram i just gave this talk two",
    "start": "2450780",
    "end": "2458880"
  },
  {
    "text": "days ago and i was and i said to the audience I've never met anyone that actually needs 30 gigs of ram for their",
    "start": "2458880",
    "end": "2466170"
  },
  {
    "text": "container and someone came up to me after and they said I'm embarrassed to say that we use 30 gigs of ram for our",
    "start": "2466170",
    "end": "2473310"
  },
  {
    "text": "container and they were actually running Fargate tasks so they were running batch",
    "start": "2473310",
    "end": "2480270"
  },
  {
    "text": "workloads that were doing you know a high amount of processing large amounts",
    "start": "2480270",
    "end": "2485400"
  },
  {
    "text": "of data and and they needed a bunch of in-memory calculation space so it makes sense it was just something that I I was",
    "start": "2485400",
    "end": "2492750"
  },
  {
    "text": "shocked to find out about the cool thing is though you pay for what you use what",
    "start": "2492750",
    "end": "2499740"
  },
  {
    "text": "you provision not for what you have to have running and the reason that customer on",
    "start": "2499740",
    "end": "2505530"
  },
  {
    "text": "Monday told me that they switched to Fargate is because before Fargate they",
    "start": "2505530",
    "end": "2510780"
  },
  {
    "text": "had to have very large instances running all the time because when work would",
    "start": "2510780",
    "end": "2516030"
  },
  {
    "text": "come in and get dropped into their queue they would have to launch the container and process the job today they still",
    "start": "2516030",
    "end": "2523680"
  },
  {
    "text": "have that same way of working but they don't have to have large instances running to launch the container onto so",
    "start": "2523680",
    "end": "2531480"
  },
  {
    "text": "they aren't paying for the for the capacity unless they're using it and so they were actually able to cut their",
    "start": "2531480",
    "end": "2537960"
  },
  {
    "text": "bill because they launched a far gate task it processes everything necessary and then that container dies and they",
    "start": "2537960",
    "end": "2545040"
  },
  {
    "text": "stop paying for it they don't have they don't have to have that capacity all the time and then they can also horizontally",
    "start": "2545040",
    "end": "2551580"
  },
  {
    "text": "scale so every time a task comes in a container gets launched and then when",
    "start": "2551580",
    "end": "2557460"
  },
  {
    "text": "it's done it dies versus you know having to have a queuing system in place before",
    "start": "2557460",
    "end": "2564150"
  },
  {
    "text": "when they were running instances they would launch as many as they had capacity for and then they would have to",
    "start": "2564150",
    "end": "2570240"
  },
  {
    "text": "sit there and wait to process the next job until one of the containers was",
    "start": "2570240",
    "end": "2575250"
  },
  {
    "text": "finished and died so this is changing",
    "start": "2575250",
    "end": "2580740"
  },
  {
    "text": "compute I'm sure I hope that there's something that I've said right now that that you can identify with you know we",
    "start": "2580740",
    "end": "2587850"
  },
  {
    "text": "should maybe think about changing that whether it's being able to fan out horizontally infinitely or being able to",
    "start": "2587850",
    "end": "2595740"
  },
  {
    "text": "have containers you know that are huge at your disposal without having to pay",
    "start": "2595740",
    "end": "2600870"
  },
  {
    "text": "for the hot capacity just to keep around unused these are all things that we're",
    "start": "2600870",
    "end": "2606570"
  },
  {
    "text": "hoping you know you can start to think about start to evolve your stack and hopefully improve your situation really",
    "start": "2606570",
    "end": "2615930"
  },
  {
    "text": "the movement is to treat the container as the new compute primitive so instead",
    "start": "2615930",
    "end": "2621870"
  },
  {
    "text": "of thinking about EC to think about as ec2 was growing up as a service we were",
    "start": "2621870",
    "end": "2628590"
  },
  {
    "text": "we were adding features to it adding features to it make better making it better now we're doing",
    "start": "2628590",
    "end": "2634919"
  },
  {
    "text": "that for containers so over time you've seen us add Eni networking to it add IM",
    "start": "2634919",
    "end": "2643229"
  },
  {
    "text": "roles to it add security group definitions so now you can define for",
    "start": "2643229",
    "end": "2649650"
  },
  {
    "text": "your container or for your task it's going to get a custom Eni attached to it",
    "start": "2649650",
    "end": "2654869"
  },
  {
    "text": "it's going to get a security group built for it it's going to get an iamb role attached directly to it so you don't",
    "start": "2654869",
    "end": "2662069"
  },
  {
    "text": "have to think about those things in terms of in terms of the underlying ec2",
    "start": "2662069",
    "end": "2667319"
  },
  {
    "text": "instance anymore you just attach them to your container so we're continuing to",
    "start": "2667319",
    "end": "2672599"
  },
  {
    "text": "evolve that and continuing to enhance the container experience it's becoming",
    "start": "2672599",
    "end": "2677640"
  },
  {
    "text": "the new compute primitive auto scaling I",
    "start": "2677640",
    "end": "2683249"
  },
  {
    "text": "left out so that list of things that we've enhanced now you can auto scale",
    "start": "2683249",
    "end": "2689099"
  },
  {
    "text": "the tasks rather than auto scale instance by instance so these are all",
    "start": "2689099",
    "end": "2694429"
  },
  {
    "text": "things that we're evolving the container evolving the tasks to be the new compute",
    "start": "2694429",
    "end": "2701099"
  },
  {
    "text": "primitive what does this allow you to do",
    "start": "2701099",
    "end": "2706219"
  },
  {
    "text": "focus on running your application focus on the higher level the business logic",
    "start": "2706219",
    "end": "2712529"
  },
  {
    "text": "the stuff that you are good at that your company is is around for that makes you",
    "start": "2712529",
    "end": "2719369"
  },
  {
    "text": "different from your competitor and leave the utility stuff the commodity stuff to",
    "start": "2719369",
    "end": "2726209"
  },
  {
    "text": "us so quick summary and then I'll get",
    "start": "2726209",
    "end": "2731969"
  },
  {
    "text": "you out for a break we have this is the container landscape for AWS we have e CS",
    "start": "2731969",
    "end": "2739079"
  },
  {
    "text": "e KS for control plane and then for data plane we have far gate for ECS and",
    "start": "2739079",
    "end": "2746150"
  },
  {
    "text": "coming hopefully soon in 2019 far gate for eks ECS is a managed first party",
    "start": "2746150",
    "end": "2756849"
  },
  {
    "text": "form so it has deep integration into other AWS services and you can launch",
    "start": "2756849",
    "end": "2763119"
  },
  {
    "text": "your containers there's really no end to how big it can scale eks is a more open",
    "start": "2763119",
    "end": "2773109"
  },
  {
    "text": "source experience so if you are running in multiple locations perhaps in your",
    "start": "2773109",
    "end": "2778180"
  },
  {
    "text": "own data center and you want the same experience everywhere out including",
    "start": "2778180",
    "end": "2783759"
  },
  {
    "text": "outside of AWS then this is a good choice for you it gives you that open",
    "start": "2783759",
    "end": "2789069"
  },
  {
    "text": "source experience everywhere you operate Fargate managed data plane no end to the",
    "start": "2789069",
    "end": "2796089"
  },
  {
    "text": "amount of scaling you have available to you and you can scale up and scale down as needed second by second and add",
    "start": "2796089",
    "end": "2804190"
  },
  {
    "text": "capacity or remove capacity without worrying about having the underlying",
    "start": "2804190",
    "end": "2809829"
  },
  {
    "text": "instances available if you need help figuring out what option is best for you",
    "start": "2809829",
    "end": "2815019"
  },
  {
    "text": "my coworker Nathan Peck wrote a blog article here's a link and you'll get the slides by the way so you'll have this in",
    "start": "2815019",
    "end": "2823029"
  },
  {
    "text": "the in the slide deck there's more links available to you for getting started",
    "start": "2823029",
    "end": "2829019"
  },
  {
    "text": "getting started with eks getting started with Fargate we have blogs here's the",
    "start": "2829019",
    "end": "2835029"
  },
  {
    "text": "Nathan Peck article and then the GM of the container organization actually has",
    "start": "2835029",
    "end": "2841690"
  },
  {
    "text": "a presentation that he did it reinvent the State of the Union so definitely check these things out and with that",
    "start": "2841690",
    "end": "2849450"
  },
  {
    "text": "hopefully you now know everything there is to know about containers on AWS so",
    "start": "2849450",
    "end": "2855339"
  },
  {
    "text": "the rest of the day we're going to spend kind of diving a little bit deeper into each of these areas that we talked about",
    "start": "2855339",
    "end": "2861130"
  },
  {
    "text": "and please come back for the parts that interest you but until until then we have a break",
    "start": "2861130",
    "end": "2868089"
  },
  {
    "text": "until I believe 11:30 so see you around I'll be upfront if you have any questions that you want to ask",
    "start": "2868089",
    "end": "2875578"
  },
  {
    "text": "you",
    "start": "2884300",
    "end": "2886360"
  }
]