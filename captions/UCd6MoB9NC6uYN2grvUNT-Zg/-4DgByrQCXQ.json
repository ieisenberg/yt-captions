[
  {
    "start": "0",
    "end": "42000"
  },
  {
    "text": "are you overwhelmed by the volume of",
    "start": "3040",
    "end": "4799"
  },
  {
    "text": "customer service email messages your",
    "start": "4799",
    "end": "6600"
  },
  {
    "text": "business receives do you wish you had an",
    "start": "6600",
    "end": "8599"
  },
  {
    "text": "easier way of extracting the relevant",
    "start": "8599",
    "end": "10480"
  },
  {
    "text": "information from those customer service",
    "start": "10480",
    "end": "12400"
  },
  {
    "text": "email messages and storing the data in a",
    "start": "12400",
    "end": "14759"
  },
  {
    "text": "structured format hello my name is Steve",
    "start": "14759",
    "end": "17560"
  },
  {
    "text": "Brown and I'm a senior technical account",
    "start": "17560",
    "end": "19279"
  },
  {
    "text": "manager at AWS in this video I'll show",
    "start": "19279",
    "end": "22160"
  },
  {
    "text": "you how to build a serverless solution",
    "start": "22160",
    "end": "23920"
  },
  {
    "text": "on AWS to automatically summarize and",
    "start": "23920",
    "end": "26840"
  },
  {
    "text": "provide structure to customer service",
    "start": "26840",
    "end": "29080"
  },
  {
    "text": "email messages using just Amazon simple",
    "start": "29080",
    "end": "31840"
  },
  {
    "text": "email service Lambda S3 and bedrock and",
    "start": "31840",
    "end": "36399"
  },
  {
    "text": "the only prerequisite is ownership of",
    "start": "36399",
    "end": "38239"
  },
  {
    "text": "the domain your customer service email",
    "start": "38239",
    "end": "40399"
  },
  {
    "text": "resides in let's get started here's how",
    "start": "40399",
    "end": "42800"
  },
  {
    "text": "the different Services work together to",
    "start": "42800",
    "end": "44960"
  },
  {
    "text": "analyze and structure a customer service",
    "start": "44960",
    "end": "47719"
  },
  {
    "text": "email message first a customer's",
    "start": "47719",
    "end": "50079"
  },
  {
    "text": "incoming email message is delivered to a",
    "start": "50079",
    "end": "52280"
  },
  {
    "text": "customer service email address",
    "start": "52280",
    "end": "54480"
  },
  {
    "text": "associated with the Amazon simple email",
    "start": "54480",
    "end": "57440"
  },
  {
    "text": "service if you don't want to use Amazon",
    "start": "57440",
    "end": "59640"
  },
  {
    "text": "simp email service as your primary",
    "start": "59640",
    "end": "62000"
  },
  {
    "text": "customer service address that's okay you",
    "start": "62000",
    "end": "64478"
  },
  {
    "text": "can set up a rule to automatically",
    "start": "64479",
    "end": "66400"
  },
  {
    "text": "forward customer service emails from",
    "start": "66400",
    "end": "68840"
  },
  {
    "text": "your primary email service to the",
    "start": "68840",
    "end": "71040"
  },
  {
    "text": "address we're going to set up in Amazon",
    "start": "71040",
    "end": "73360"
  },
  {
    "text": "sces next upon successful delivery sces",
    "start": "73360",
    "end": "77799"
  },
  {
    "text": "automatically saves the raw email as an",
    "start": "77799",
    "end": "80600"
  },
  {
    "text": "object to the first S3 bucket an S3",
    "start": "80600",
    "end": "83479"
  },
  {
    "text": "event is then generated which triggers",
    "start": "83479",
    "end": "85840"
  },
  {
    "text": "an invocation of a Lambda function to",
    "start": "85840",
    "end": "88360"
  },
  {
    "text": "process the raw content of the email",
    "start": "88360",
    "end": "90840"
  },
  {
    "text": "message stored inside of the S3 object",
    "start": "90840",
    "end": "93439"
  },
  {
    "text": "next the Lambda function uses a Bedrock",
    "start": "93439",
    "end": "96040"
  },
  {
    "text": "Foundation model to both summarize the",
    "start": "96040",
    "end": "98200"
  },
  {
    "text": "emails content and extract and structure",
    "start": "98200",
    "end": "101759"
  },
  {
    "text": "data including customer sentiment",
    "start": "101759",
    "end": "104479"
  },
  {
    "text": "customer name employee names and assign",
    "start": "104479",
    "end": "108439"
  },
  {
    "text": "an urgency indicator inside of a Json",
    "start": "108439",
    "end": "111799"
  },
  {
    "text": "object the Json formatted data is then",
    "start": "111799",
    "end": "114560"
  },
  {
    "text": "saved to the second S3 bucket for",
    "start": "114560",
    "end": "117399"
  },
  {
    "text": "automated analysis and Reporting before",
    "start": "117399",
    "end": "120479"
  },
  {
    "text": "I start the walkthr I want to remind you",
    "start": "120479",
    "end": "122840"
  },
  {
    "text": "that you will need to have ownership of",
    "start": "122840",
    "end": "124399"
  },
  {
    "text": "a domain for your customer service email",
    "start": "124399",
    "end": "126600"
  },
  {
    "text": "address viewers who don't own a domain",
    "start": "126600",
    "end": "128879"
  },
  {
    "text": "can still benefit from the walkth",
    "start": "128879",
    "end": "130640"
  },
  {
    "text": "through but to actually follow along",
    "start": "130640",
    "end": "132840"
  },
  {
    "text": "ownership of a domain is required first",
    "start": "132840",
    "end": "135959"
  },
  {
    "text": "I will create two S3 buckets one bucket",
    "start": "135959",
    "end": "139360"
  },
  {
    "text": "will be used by the Amazon simple email",
    "start": "139360",
    "end": "142319"
  },
  {
    "text": "service to save the raw incoming",
    "start": "142319",
    "end": "145640"
  },
  {
    "text": "customer service email messages the",
    "start": "145640",
    "end": "148319"
  },
  {
    "text": "second S3 bucket will be used to store",
    "start": "148319",
    "end": "151480"
  },
  {
    "text": "the analyzed structured Json objects",
    "start": "151480",
    "end": "155400"
  },
  {
    "text": "obtained from the email messages in the",
    "start": "155400",
    "end": "158560"
  },
  {
    "text": "next step I will apply some",
    "start": "158560",
    "end": "160200"
  },
  {
    "text": "configuration settings to the first two",
    "start": "160200",
    "end": "162159"
  },
  {
    "text": "buckets I created that are associated",
    "start": "162159",
    "end": "165000"
  },
  {
    "text": "with customer service email handling in",
    "start": "165000",
    "end": "167560"
  },
  {
    "text": "the example architecture Amazon simple",
    "start": "167560",
    "end": "170720"
  },
  {
    "text": "email service will need the ability to",
    "start": "170720",
    "end": "173920"
  },
  {
    "text": "write the raw incoming customer service",
    "start": "173920",
    "end": "176519"
  },
  {
    "text": "email messages to the S3 bucket we've",
    "start": "176519",
    "end": "179120"
  },
  {
    "text": "set aside for for that purpose similarly",
    "start": "179120",
    "end": "181760"
  },
  {
    "text": "to allow our Lambda function to process",
    "start": "181760",
    "end": "183920"
  },
  {
    "text": "the email we need to Grant the Lambda",
    "start": "183920",
    "end": "186159"
  },
  {
    "text": "service permissions as well to Grant",
    "start": "186159",
    "end": "188640"
  },
  {
    "text": "these abilities we'll set up an S3",
    "start": "188640",
    "end": "190680"
  },
  {
    "text": "bucket policy to allow that to happen",
    "start": "190680",
    "end": "193400"
  },
  {
    "text": "I'll assign the following bucket policy",
    "start": "193400",
    "end": "195440"
  },
  {
    "text": "to the S3 bucket I'll provide the bucket",
    "start": "195440",
    "end": "198239"
  },
  {
    "text": "policy in the description of the",
    "start": "198239",
    "end": "202360"
  },
  {
    "text": "video the second S3 bucket that was",
    "start": "203599",
    "end": "206480"
  },
  {
    "text": "created to house the Amazon Bedrock",
    "start": "206480",
    "end": "209360"
  },
  {
    "text": "process",
    "start": "209360",
    "end": "210480"
  },
  {
    "text": "email messages will likewise need a",
    "start": "210480",
    "end": "212560"
  },
  {
    "text": "bucket policy to enable the Lambda",
    "start": "212560",
    "end": "215840"
  },
  {
    "text": "function to write the Json object to S3",
    "start": "215840",
    "end": "219319"
  },
  {
    "text": "enable this with a second S3 bucket",
    "start": "219319",
    "end": "221959"
  },
  {
    "text": "policy and I'll include this policy in",
    "start": "221959",
    "end": "224480"
  },
  {
    "text": "the description as well next let's get",
    "start": "224480",
    "end": "227239"
  },
  {
    "text": "the Amazon simple email service or sees",
    "start": "227239",
    "end": "232000"
  },
  {
    "text": "set up to enable Amazon sees to receive",
    "start": "232000",
    "end": "235720"
  },
  {
    "text": "customer service email messages I",
    "start": "235720",
    "end": "238040"
  },
  {
    "text": "mentioned earlier that I'll need to have",
    "start": "238040",
    "end": "239760"
  },
  {
    "text": "ownership of a registered domain and",
    "start": "239760",
    "end": "242439"
  },
  {
    "text": "I'll have needed to configure an MX",
    "start": "242439",
    "end": "244560"
  },
  {
    "text": "record for that domain previously",
    "start": "244560",
    "end": "246959"
  },
  {
    "text": "according to instructions available from",
    "start": "246959",
    "end": "249079"
  },
  {
    "text": "the domain registar now to save time",
    "start": "249079",
    "end": "252920"
  },
  {
    "text": "I've already performed the necessary",
    "start": "252920",
    "end": "254840"
  },
  {
    "text": "Amazon simple email service or sees",
    "start": "254840",
    "end": "258519"
  },
  {
    "text": "domain identity creation steps but I'll",
    "start": "258519",
    "end": "261959"
  },
  {
    "text": "go through the steps again for the",
    "start": "261959",
    "end": "263400"
  },
  {
    "text": "domain example.com to demonstrate what",
    "start": "263400",
    "end": "266440"
  },
  {
    "text": "was",
    "start": "266440",
    "end": "267400"
  },
  {
    "text": "required inside of the Amazon sces",
    "start": "267400",
    "end": "270440"
  },
  {
    "text": "console I'll select identities on the",
    "start": "270440",
    "end": "273320"
  },
  {
    "text": "left followed by the orange create",
    "start": "273320",
    "end": "275680"
  },
  {
    "text": "identity button next I want to select",
    "start": "275680",
    "end": "279120"
  },
  {
    "text": "the domain",
    "start": "279120",
    "end": "281199"
  },
  {
    "text": "option I'll enter example.com and then",
    "start": "281199",
    "end": "285680"
  },
  {
    "text": "scroll down and select create Identity",
    "start": "285680",
    "end": "288320"
  },
  {
    "text": "On The Following screen scroll down to",
    "start": "288320",
    "end": "290280"
  },
  {
    "text": "the domain Keys identified mail or dkim",
    "start": "290280",
    "end": "294680"
  },
  {
    "text": "section if necessary select the",
    "start": "294680",
    "end": "297240"
  },
  {
    "text": "drop-down Arrow next to publish DNS",
    "start": "297240",
    "end": "300280"
  },
  {
    "text": "records if I owned the example.com",
    "start": "300280",
    "end": "303160"
  },
  {
    "text": "domain I would need to add each of the",
    "start": "303160",
    "end": "306160"
  },
  {
    "text": "cname records displayed here to verify",
    "start": "306160",
    "end": "309080"
  },
  {
    "text": "that I own the domain the steps for this",
    "start": "309080",
    "end": "311479"
  },
  {
    "text": "procedure will vary depending on who is",
    "start": "311479",
    "end": "313520"
  },
  {
    "text": "selected as the domain provider so I'll",
    "start": "313520",
    "end": "315759"
  },
  {
    "text": "not go into detail on this step once",
    "start": "315759",
    "end": "318440"
  },
  {
    "text": "those cname records have been entered",
    "start": "318440",
    "end": "320160"
  },
  {
    "text": "into DNS the Amazon sces service will",
    "start": "320160",
    "end": "323479"
  },
  {
    "text": "periodically check for the presence of",
    "start": "323479",
    "end": "325520"
  },
  {
    "text": "these records before allowing mail to be",
    "start": "325520",
    "end": "329160"
  },
  {
    "text": "received for the domain allow up to 72",
    "start": "329160",
    "end": "332039"
  },
  {
    "text": "hours for this verification process to",
    "start": "332039",
    "end": "336000"
  },
  {
    "text": "complete when it does complete a green",
    "start": "336000",
    "end": "339039"
  },
  {
    "text": "check mark with the verbiage verified",
    "start": "339039",
    "end": "342160"
  },
  {
    "text": "will be displayed on the identity screen",
    "start": "342160",
    "end": "344440"
  },
  {
    "text": "of the Amazon simple email service until",
    "start": "344440",
    "end": "347600"
  },
  {
    "text": "this verbiage is present this",
    "start": "347600",
    "end": "349400"
  },
  {
    "text": "architecture won't be fully functional I",
    "start": "349400",
    "end": "351560"
  },
  {
    "text": "have one additional step to take inside",
    "start": "351560",
    "end": "353680"
  },
  {
    "text": "of the Amazon simple email service",
    "start": "353680",
    "end": "355680"
  },
  {
    "text": "console before I can begin receiving",
    "start": "355680",
    "end": "357840"
  },
  {
    "text": "customer service email messages with my",
    "start": "357840",
    "end": "360280"
  },
  {
    "text": "generative AI Bedrock based architecture",
    "start": "360280",
    "end": "363160"
  },
  {
    "text": "on the left side of the browser window",
    "start": "363160",
    "end": "365440"
  },
  {
    "text": "in the configuration section I need to",
    "start": "365440",
    "end": "368080"
  },
  {
    "text": "select email receiving and then verify",
    "start": "368080",
    "end": "371160"
  },
  {
    "text": "that the active section on the next",
    "start": "371160",
    "end": "372880"
  },
  {
    "text": "screen is the receipt rule sets section",
    "start": "372880",
    "end": "375919"
  },
  {
    "text": "and not IP address filters here I'll",
    "start": "375919",
    "end": "379520"
  },
  {
    "text": "create a rule set that instructs Amazon",
    "start": "379520",
    "end": "381680"
  },
  {
    "text": "simple email service to write incoming",
    "start": "381680",
    "end": "384240"
  },
  {
    "text": "customer service email messages to our",
    "start": "384240",
    "end": "386360"
  },
  {
    "text": "incoming S3 bucket by first selecting",
    "start": "386360",
    "end": "389120"
  },
  {
    "text": "create rule set I'll provide a name for",
    "start": "389120",
    "end": "391520"
  },
  {
    "text": "the rule set and then click create rule",
    "start": "391520",
    "end": "395120"
  },
  {
    "text": "set next I need to create a rule to save",
    "start": "395120",
    "end": "398319"
  },
  {
    "text": "the incoming message to the incoming S3",
    "start": "398319",
    "end": "400800"
  },
  {
    "text": "bucket the rule I create will be",
    "start": "400800",
    "end": "403120"
  },
  {
    "text": "associated with the rule set I created a",
    "start": "403120",
    "end": "405720"
  },
  {
    "text": "moment ago I'll select create rule as",
    "start": "405720",
    "end": "408919"
  },
  {
    "text": "the first step in getting the rule",
    "start": "408919",
    "end": "410680"
  },
  {
    "text": "created I'll provide a name for this",
    "start": "410680",
    "end": "412840"
  },
  {
    "text": "Rule and make sure that the status",
    "start": "412840",
    "end": "415400"
  },
  {
    "text": "enabled checkbox is selected selecting",
    "start": "415400",
    "end": "418800"
  },
  {
    "text": "next will take me to the add recipients",
    "start": "418800",
    "end": "421599"
  },
  {
    "text": "condition page here I will select add",
    "start": "421599",
    "end": "424560"
  },
  {
    "text": "new recipient condition and then enter",
    "start": "424560",
    "end": "427400"
  },
  {
    "text": "customer service at followed by the",
    "start": "427400",
    "end": "429680"
  },
  {
    "text": "domain name I'm using inside of the",
    "start": "429680",
    "end": "431599"
  },
  {
    "text": "recipient condition text box this",
    "start": "431599",
    "end": "434520"
  },
  {
    "text": "address I provided will act as the",
    "start": "434520",
    "end": "436400"
  },
  {
    "text": "customer service email address that my",
    "start": "436400",
    "end": "438800"
  },
  {
    "text": "customers will send their email to I'll",
    "start": "438800",
    "end": "441479"
  },
  {
    "text": "select next to continue we arrive at the",
    "start": "441479",
    "end": "444440"
  },
  {
    "text": "add actions step here I'll select the",
    "start": "444440",
    "end": "447599"
  },
  {
    "text": "drop-down box with the title add new",
    "start": "447599",
    "end": "449960"
  },
  {
    "text": "action and then I'll select the deliver",
    "start": "449960",
    "end": "452879"
  },
  {
    "text": "to S3 bucket option here I'll select the",
    "start": "452879",
    "end": "456479"
  },
  {
    "text": "drop-down box with the title add new",
    "start": "456479",
    "end": "458599"
  },
  {
    "text": "action and then I'll select the deliver",
    "start": "458599",
    "end": "461160"
  },
  {
    "text": "to S3 bucket option since I've already",
    "start": "461160",
    "end": "463759"
  },
  {
    "text": "created the S3 bucket that will hold the",
    "start": "463759",
    "end": "465879"
  },
  {
    "text": "raw incoming customer service email",
    "start": "465879",
    "end": "468280"
  },
  {
    "text": "objects I'll select the choose S3 bucket",
    "start": "468280",
    "end": "471960"
  },
  {
    "text": "or enter bucket name box inside of the",
    "start": "471960",
    "end": "474840"
  },
  {
    "text": "S3 bucket section and then select the S3",
    "start": "474840",
    "end": "478120"
  },
  {
    "text": "bucket created to store the incoming",
    "start": "478120",
    "end": "480120"
  },
  {
    "text": "email messages I may end up using this",
    "start": "480120",
    "end": "482800"
  },
  {
    "text": "architecture for different domains in",
    "start": "482800",
    "end": "484599"
  },
  {
    "text": "the future so I will supply the domain",
    "start": "484599",
    "end": "487479"
  },
  {
    "text": "name of the customer service email",
    "start": "487479",
    "end": "489520"
  },
  {
    "text": "address to use as the object key prefix",
    "start": "489520",
    "end": "493319"
  },
  {
    "text": "this will provide a very easy way for me",
    "start": "493319",
    "end": "495520"
  },
  {
    "text": "to keep customer service email messages",
    "start": "495520",
    "end": "498240"
  },
  {
    "text": "separate for each domain for this",
    "start": "498240",
    "end": "501000"
  },
  {
    "text": "particular demonstration I'll leave the",
    "start": "501000",
    "end": "503240"
  },
  {
    "text": "rest of the fields untouched on this",
    "start": "503240",
    "end": "505280"
  },
  {
    "text": "screen and simply click next followed by",
    "start": "505280",
    "end": "509159"
  },
  {
    "text": "create rule if the bucket policy we set",
    "start": "509159",
    "end": "512399"
  },
  {
    "text": "earlier for the S3 bucket that will hold",
    "start": "512399",
    "end": "514640"
  },
  {
    "text": "our incoming messages was properly",
    "start": "514640",
    "end": "516640"
  },
  {
    "text": "configured the console will confirm that",
    "start": "516640",
    "end": "519599"
  },
  {
    "text": "our rule was added successfully before",
    "start": "519599",
    "end": "522039"
  },
  {
    "text": "moving on to the next step I'll need to",
    "start": "522039",
    "end": "524480"
  },
  {
    "text": "select set as active at the top of the",
    "start": "524480",
    "end": "527560"
  },
  {
    "text": "screen to activate the rule",
    "start": "527560",
    "end": "531040"
  },
  {
    "text": "set next I'll move on to the Lambda",
    "start": "531040",
    "end": "533880"
  },
  {
    "text": "function remember the ultimate goal of",
    "start": "533880",
    "end": "536080"
  },
  {
    "start": "534000",
    "end": "998000"
  },
  {
    "text": "this architecture is three-fold",
    "start": "536080",
    "end": "538560"
  },
  {
    "text": "summarize and incoming customer service",
    "start": "538560",
    "end": "540760"
  },
  {
    "text": "email messages extract details we're",
    "start": "540760",
    "end": "544000"
  },
  {
    "text": "interested in from the email combine",
    "start": "544000",
    "end": "546959"
  },
  {
    "text": "both the summary and details into",
    "start": "546959",
    "end": "549360"
  },
  {
    "text": "adjacent object for easier analysis to",
    "start": "549360",
    "end": "552600"
  },
  {
    "text": "accomplish this goal the Lambda function",
    "start": "552600",
    "end": "554920"
  },
  {
    "text": "will be making use of S3 along with",
    "start": "554920",
    "end": "557640"
  },
  {
    "text": "bedrocks Converse API let's take a look",
    "start": "557640",
    "end": "560839"
  },
  {
    "text": "at the Lambda function code now right",
    "start": "560839",
    "end": "562959"
  },
  {
    "text": "after importing the relevant python",
    "start": "562959",
    "end": "565000"
  },
  {
    "text": "modules on lines seven and 8 I create",
    "start": "565000",
    "end": "568320"
  },
  {
    "text": "two boto 3 clients one for S3 and",
    "start": "568320",
    "end": "572360"
  },
  {
    "text": "another for Bedrock next on line 12 I",
    "start": "572360",
    "end": "575760"
  },
  {
    "text": "want the version of the boto3 package to",
    "start": "575760",
    "end": "578360"
  },
  {
    "text": "be displayed in cloudwatch logs during",
    "start": "578360",
    "end": "580640"
  },
  {
    "text": "the execution of the Lambda function for",
    "start": "580640",
    "end": "583120"
  },
  {
    "text": "reasons that I'll cover shortly because",
    "start": "583120",
    "end": "585240"
  },
  {
    "text": "I want to keep track of the cost of the",
    "start": "585240",
    "end": "587440"
  },
  {
    "text": "Bedrock Foundation model portion of the",
    "start": "587440",
    "end": "589880"
  },
  {
    "text": "architecture on lines 15 through 18 I'll",
    "start": "589880",
    "end": "593800"
  },
  {
    "text": "set up and initialize a python",
    "start": "593800",
    "end": "595959"
  },
  {
    "text": "dictionary called email token usage",
    "start": "595959",
    "end": "599120"
  },
  {
    "text": "which will be used to track token",
    "start": "599120",
    "end": "601120"
  },
  {
    "text": "consumption for each invocation of the",
    "start": "601120",
    "end": "603440"
  },
  {
    "text": "Lambda function it's important to note",
    "start": "603440",
    "end": "605600"
  },
  {
    "text": "that this dictionary will become part of",
    "start": "605600",
    "end": "607600"
  },
  {
    "text": "the Json object the function will",
    "start": "607600",
    "end": "609959"
  },
  {
    "text": "produce and it will be stored with the",
    "start": "609959",
    "end": "611839"
  },
  {
    "text": "Bedrock processed object inside of S3",
    "start": "611839",
    "end": "616240"
  },
  {
    "text": "doing so will enable me to query the",
    "start": "616240",
    "end": "618680"
  },
  {
    "text": "information in S3 with Athena and will",
    "start": "618680",
    "end": "621440"
  },
  {
    "text": "also enable the generation of quick site",
    "start": "621440",
    "end": "623920"
  },
  {
    "text": "dashboards to visually track the Bedrock",
    "start": "623920",
    "end": "626920"
  },
  {
    "text": "Foundation model cost over time time",
    "start": "626920",
    "end": "630200"
  },
  {
    "text": "next I created one of the most important",
    "start": "630200",
    "end": "632440"
  },
  {
    "text": "portions of the Lambda functions python",
    "start": "632440",
    "end": "634680"
  },
  {
    "text": "code on line 22 I created a python list",
    "start": "634680",
    "end": "638800"
  },
  {
    "text": "named tool list which will make the",
    "start": "638800",
    "end": "641360"
  },
  {
    "text": "Bedrock Foundation model I will use",
    "start": "641360",
    "end": "643600"
  },
  {
    "text": "later aware that it has in my case a",
    "start": "643600",
    "end": "646680"
  },
  {
    "text": "single tool it can draw from to help it",
    "start": "646680",
    "end": "649680"
  },
  {
    "text": "process information it would otherwise",
    "start": "649680",
    "end": "652079"
  },
  {
    "text": "be unable to process formally use of",
    "start": "652079",
    "end": "655240"
  },
  {
    "text": "tools in conjunction with generative AI",
    "start": "655240",
    "end": "657600"
  },
  {
    "text": "models is referred to as fun function",
    "start": "657600",
    "end": "659600"
  },
  {
    "text": "calling and it's important to note that",
    "start": "659600",
    "end": "662079"
  },
  {
    "text": "again at the time this video was created",
    "start": "662079",
    "end": "665120"
  },
  {
    "text": "the majority of Bedrock Foundation",
    "start": "665120",
    "end": "667279"
  },
  {
    "text": "models support function calling with a",
    "start": "667279",
    "end": "670160"
  },
  {
    "text": "Bedrock Converse API but not all of them",
    "start": "670160",
    "end": "672959"
  },
  {
    "text": "as seen in the only element of the tool",
    "start": "672959",
    "end": "675120"
  },
  {
    "text": "list python list variable the tool is",
    "start": "675120",
    "end": "677839"
  },
  {
    "text": "defined with ad Json schema based tool",
    "start": "677839",
    "end": "681120"
  },
  {
    "text": "specification object lines 25 and 26 of",
    "start": "681120",
    "end": "685680"
  },
  {
    "text": "the tool specification object include a",
    "start": "685680",
    "end": "688240"
  },
  {
    "text": "name and description attribute along",
    "start": "688240",
    "end": "691200"
  },
  {
    "text": "with the input schema tool input schema",
    "start": "691200",
    "end": "695079"
  },
  {
    "text": "object in the tool input schema portion",
    "start": "695079",
    "end": "698519"
  },
  {
    "text": "of the tool specification object I",
    "start": "698519",
    "end": "701279"
  },
  {
    "text": "Define the different properties that I",
    "start": "701279",
    "end": "703040"
  },
  {
    "text": "want the tool to be able to recognize",
    "start": "703040",
    "end": "704959"
  },
  {
    "text": "and include inside of the summary Json",
    "start": "704959",
    "end": "708200"
  },
  {
    "text": "object along with the associated type of",
    "start": "708200",
    "end": "711160"
  },
  {
    "text": "the properties to expect beginning on",
    "start": "711160",
    "end": "713720"
  },
  {
    "text": "line 31 I defined seven main properties",
    "start": "713720",
    "end": "717040"
  },
  {
    "text": "that I'd like the tool to be able to",
    "start": "717040",
    "end": "718800"
  },
  {
    "text": "extract",
    "start": "718800",
    "end": "719880"
  },
  {
    "text": "from the raw customer service email a",
    "start": "719880",
    "end": "722320"
  },
  {
    "text": "summary of the message body a Boolean",
    "start": "722320",
    "end": "724920"
  },
  {
    "text": "value indicating whether or not the",
    "start": "724920",
    "end": "726720"
  },
  {
    "text": "email needs to be escalated an integer",
    "start": "726720",
    "end": "729680"
  },
  {
    "text": "value indicating the level of concern",
    "start": "729680",
    "end": "731639"
  },
  {
    "text": "from 1 to 10 with 10 being the highest",
    "start": "731639",
    "end": "734279"
  },
  {
    "text": "concern an overall sentiment to",
    "start": "734279",
    "end": "736720"
  },
  {
    "text": "associate with the email message either",
    "start": "736720",
    "end": "739440"
  },
  {
    "text": "positive neutral or negative the",
    "start": "739440",
    "end": "742399"
  },
  {
    "text": "supporting business unit for the email",
    "start": "742399",
    "end": "745199"
  },
  {
    "text": "the names of the customers mentioned in",
    "start": "745199",
    "end": "747240"
  },
  {
    "text": "the email and finally a list of employee",
    "start": "747240",
    "end": "750240"
  },
  {
    "text": "names mentioned in the email and the",
    "start": "750240",
    "end": "752720"
  },
  {
    "text": "customer sentiment of those employees",
    "start": "752720",
    "end": "755320"
  },
  {
    "text": "now nowhere in the Lambda function",
    "start": "755320",
    "end": "757560"
  },
  {
    "text": "itself am I programmatically specifying",
    "start": "757560",
    "end": "760680"
  },
  {
    "text": "how to derive these values all of the",
    "start": "760680",
    "end": "763480"
  },
  {
    "text": "heavy lifting in this regard is being",
    "start": "763480",
    "end": "765320"
  },
  {
    "text": "done by the Bedrock foundational model",
    "start": "765320",
    "end": "767959"
  },
  {
    "text": "as it extracts this information itself",
    "start": "767959",
    "end": "771040"
  },
  {
    "text": "from the raw customer service email",
    "start": "771040",
    "end": "773240"
  },
  {
    "text": "message used as input because this is",
    "start": "773240",
    "end": "776040"
  },
  {
    "text": "the case it provides an enormous amount",
    "start": "776040",
    "end": "778279"
  },
  {
    "text": "of flexibility to the individual",
    "start": "778279",
    "end": "780320"
  },
  {
    "text": "developer to be able to specify what",
    "start": "780320",
    "end": "783000"
  },
  {
    "text": "information to extract from the raw",
    "start": "783000",
    "end": "785040"
  },
  {
    "text": "email message based on their own",
    "start": "785040",
    "end": "787399"
  },
  {
    "text": "requirements after the tool",
    "start": "787399",
    "end": "789079"
  },
  {
    "text": "specification has been provided a",
    "start": "789079",
    "end": "791720"
  },
  {
    "text": "function tally tokens is defined",
    "start": "791720",
    "end": "795160"
  },
  {
    "text": "starting on line 93 to pick up the",
    "start": "795160",
    "end": "797839"
  },
  {
    "text": "number of tokens input tokens output and",
    "start": "797839",
    "end": "800800"
  },
  {
    "text": "total number of tokens for storage",
    "start": "800800",
    "end": "803040"
  },
  {
    "text": "inside of the email token usage python",
    "start": "803040",
    "end": "806240"
  },
  {
    "text": "dictionary defined earlier on line 102 I",
    "start": "806240",
    "end": "809639"
  },
  {
    "text": "come to the Lambda Handler function",
    "start": "809639",
    "end": "812279"
  },
  {
    "text": "itself the Handler function is",
    "start": "812279",
    "end": "814800"
  },
  {
    "text": "responsible for fielding the S3 event",
    "start": "814800",
    "end": "817320"
  },
  {
    "text": "issued as a result of the Amazon simple",
    "start": "817320",
    "end": "820360"
  },
  {
    "text": "email service storing an email into the",
    "start": "820360",
    "end": "823560"
  },
  {
    "text": "incoming S3 bucket it extracts the",
    "start": "823560",
    "end": "826399"
  },
  {
    "text": "bucket and key and issues an S3 git",
    "start": "826399",
    "end": "829839"
  },
  {
    "text": "object API call to ingest and analyze",
    "start": "829839",
    "end": "833639"
  },
  {
    "text": "the incoming email content the incoming",
    "start": "833639",
    "end": "836680"
  },
  {
    "text": "email content is next packaged into a",
    "start": "836680",
    "end": "839639"
  },
  {
    "text": "python dictionary object named next",
    "start": "839639",
    "end": "843040"
  },
  {
    "text": "message this variable is used to store",
    "start": "843040",
    "end": "845880"
  },
  {
    "text": "the actual structure and content of the",
    "start": "845880",
    "end": "848320"
  },
  {
    "text": "prompt will supply to the Bedrock",
    "start": "848320",
    "end": "850920"
  },
  {
    "text": "foundational model through the Bedrock",
    "start": "850920",
    "end": "853519"
  },
  {
    "text": "Converse API a response variable is used",
    "start": "853519",
    "end": "857199"
  },
  {
    "text": "to hold the return content from the",
    "start": "857199",
    "end": "859440"
  },
  {
    "text": "Bedrock Converse API call for this",
    "start": "859440",
    "end": "862320"
  },
  {
    "text": "example I'll use anthropics Claude 3",
    "start": "862320",
    "end": "865639"
  },
  {
    "text": "sonnet Foundation model although it's",
    "start": "865639",
    "end": "868240"
  },
  {
    "text": "likely that other Foundation models",
    "start": "868240",
    "end": "870320"
  },
  {
    "text": "would work as well since the foundation",
    "start": "870320",
    "end": "872519"
  },
  {
    "text": "model used for the solution is simply a",
    "start": "872519",
    "end": "874959"
  },
  {
    "text": "matter of changing an API parameter it's",
    "start": "874959",
    "end": "877800"
  },
  {
    "text": "easy to experiment in order to determine",
    "start": "877800",
    "end": "880480"
  },
  {
    "text": "which Foundation model provides the best",
    "start": "880480",
    "end": "882800"
  },
  {
    "text": "performance for your specific scenario",
    "start": "882800",
    "end": "885880"
  },
  {
    "text": "on line 146 I set the max tokens",
    "start": "885880",
    "end": "889199"
  },
  {
    "text": "configuration variable to 2,000 so that",
    "start": "889199",
    "end": "892240"
  },
  {
    "text": "I can put limits on the number of tokens",
    "start": "892240",
    "end": "894680"
  },
  {
    "text": "the API call returns I won't need and",
    "start": "894680",
    "end": "897800"
  },
  {
    "text": "don't want a lot of creativity in the",
    "start": "897800",
    "end": "899920"
  },
  {
    "text": "response provided by the foundational",
    "start": "899920",
    "end": "902000"
  },
  {
    "text": "model so I'll leave the temperature set",
    "start": "902000",
    "end": "904000"
  },
  {
    "text": "to zero lastly I provide a tool config",
    "start": "904000",
    "end": "907399"
  },
  {
    "text": "parameter to make the foundation model",
    "start": "907399",
    "end": "909800"
  },
  {
    "text": "aware of the email summary tool that I",
    "start": "909800",
    "end": "911880"
  },
  {
    "text": "defined earlier I gather the current",
    "start": "911880",
    "end": "914000"
  },
  {
    "text": "time and number of tokens and add them",
    "start": "914000",
    "end": "916920"
  },
  {
    "text": "to the tool result dict variable which",
    "start": "916920",
    "end": "919800"
  },
  {
    "text": "holds my final result and I issue an S3",
    "start": "919800",
    "end": "923040"
  },
  {
    "text": "put object call to store the final",
    "start": "923040",
    "end": "925600"
  },
  {
    "text": "result as a Json object in the S3 bucket",
    "start": "925600",
    "end": "929040"
  },
  {
    "text": "we created to hold processed email",
    "start": "929040",
    "end": "931240"
  },
  {
    "text": "messages earlier at the time of the",
    "start": "931240",
    "end": "933279"
  },
  {
    "text": "creation of this video The Python 312",
    "start": "933279",
    "end": "937079"
  },
  {
    "text": "version 29 Lambda runtime contained",
    "start": "937079",
    "end": "940560"
  },
  {
    "text": "version",
    "start": "940560",
    "end": "942959"
  },
  {
    "text": "13442 of the Bodo 3 package which was",
    "start": "943079",
    "end": "946199"
  },
  {
    "text": "not aware of the newer Bedrock Converse",
    "start": "946199",
    "end": "948839"
  },
  {
    "text": "API I chose to include version 1.",
    "start": "948839",
    "end": "953000"
  },
  {
    "text": "34140 of the Bodo 3 package with my",
    "start": "953000",
    "end": "956399"
  },
  {
    "text": "Lambda function by following the",
    "start": "956399",
    "end": "958199"
  },
  {
    "text": "packaging instru instructions provided",
    "start": "958199",
    "end": "960319"
  },
  {
    "text": "by the instructions found in AWS",
    "start": "960319",
    "end": "962920"
  },
  {
    "text": "documentation titled working with zip",
    "start": "962920",
    "end": "966199"
  },
  {
    "text": "file archives for python Lambda",
    "start": "966199",
    "end": "968680"
  },
  {
    "text": "functions which I'll include a link to",
    "start": "968680",
    "end": "971360"
  },
  {
    "text": "in the description below this is the",
    "start": "971360",
    "end": "973680"
  },
  {
    "text": "reason for the boto 3 version check at",
    "start": "973680",
    "end": "976240"
  },
  {
    "text": "the beginning of the Lambda function",
    "start": "976240",
    "end": "978399"
  },
  {
    "text": "that I mentioned earlier these",
    "start": "978399",
    "end": "980120"
  },
  {
    "text": "instructions called for me to create a",
    "start": "980120",
    "end": "982199"
  },
  {
    "text": "package directory in the directory my",
    "start": "982199",
    "end": "984759"
  },
  {
    "text": "Lambda function resided in install my",
    "start": "984759",
    "end": "987880"
  },
  {
    "text": "python dependency inside of that",
    "start": "987880",
    "end": "989880"
  },
  {
    "text": "directory and then package the finished",
    "start": "989880",
    "end": "992560"
  },
  {
    "text": "Lambda function up with the dependencies",
    "start": "992560",
    "end": "995240"
  },
  {
    "text": "for upload to the AWS Lambda service now",
    "start": "995240",
    "end": "999279"
  },
  {
    "start": "998000",
    "end": "1023000"
  },
  {
    "text": "that I have the Lambda function written",
    "start": "999279",
    "end": "1001319"
  },
  {
    "text": "I will upload it to the AWS Lambda",
    "start": "1001319",
    "end": "1003959"
  },
  {
    "text": "service through the",
    "start": "1003959",
    "end": "1006880"
  },
  {
    "text": "console now that the Lambda codee's been",
    "start": "1009360",
    "end": "1011759"
  },
  {
    "text": "uploaded to the Lambda service it's a",
    "start": "1011759",
    "end": "1014079"
  },
  {
    "text": "good time to check on the default",
    "start": "1014079",
    "end": "1015959"
  },
  {
    "text": "timeout for the Lambda functions",
    "start": "1015959",
    "end": "1017720"
  },
  {
    "text": "execution to do so I'll click on the",
    "start": "1017720",
    "end": "1019959"
  },
  {
    "text": "configuration tab I'll go to General",
    "start": "1019959",
    "end": "1022560"
  },
  {
    "text": "configuration and I can see that the",
    "start": "1022560",
    "end": "1024438"
  },
  {
    "start": "1023000",
    "end": "1058000"
  },
  {
    "text": "timeout is 3 seconds which won't do to",
    "start": "1024439",
    "end": "1026918"
  },
  {
    "text": "change this I'll select edit and come",
    "start": "1026919",
    "end": "1029160"
  },
  {
    "text": "down to the timeout section and for our",
    "start": "1029160",
    "end": "1031480"
  },
  {
    "text": "purposes specify 5 minutes this should",
    "start": "1031480",
    "end": "1033959"
  },
  {
    "text": "give us plenty of time for the Lambda",
    "start": "1033959",
    "end": "1035959"
  },
  {
    "text": "function to finish execution I'll select",
    "start": "1035959",
    "end": "1038280"
  },
  {
    "text": "save to commit the change while I'm in",
    "start": "1038280",
    "end": "1040319"
  },
  {
    "text": "the configuration section for the Lambda",
    "start": "1040319",
    "end": "1042360"
  },
  {
    "text": "function I'll need to set the",
    "start": "1042360",
    "end": "1044079"
  },
  {
    "text": "appropriate permissions for the Lambda",
    "start": "1044079",
    "end": "1045959"
  },
  {
    "text": "functions execution rule to be able to",
    "start": "1045959",
    "end": "1048319"
  },
  {
    "text": "execute correctly I select the",
    "start": "1048319",
    "end": "1050919"
  },
  {
    "text": "permissions Tab and after that I select",
    "start": "1050919",
    "end": "1054000"
  },
  {
    "text": "the edit button at the bottom of the",
    "start": "1054000",
    "end": "1055679"
  },
  {
    "text": "screen in the existing RO section of the",
    "start": "1055679",
    "end": "1058120"
  },
  {
    "start": "1058000",
    "end": "1118000"
  },
  {
    "text": "console I select the link provided to",
    "start": "1058120",
    "end": "1060559"
  },
  {
    "text": "view the existing execution role I need",
    "start": "1060559",
    "end": "1062799"
  },
  {
    "text": "to add permissions to execute S3 and",
    "start": "1062799",
    "end": "1065120"
  },
  {
    "text": "Bedrock to the Lambda functions",
    "start": "1065120",
    "end": "1066760"
  },
  {
    "text": "execution rule so I select the add",
    "start": "1066760",
    "end": "1069400"
  },
  {
    "text": "permissions dropdown and choose attach",
    "start": "1069400",
    "end": "1072200"
  },
  {
    "text": "policies in this search box under other",
    "start": "1072200",
    "end": "1074720"
  },
  {
    "text": "permissions policies I search for",
    "start": "1074720",
    "end": "1077039"
  },
  {
    "text": "bedrock",
    "start": "1077039",
    "end": "1079880"
  },
  {
    "text": "and select Amazon Bedrock full access",
    "start": "1079880",
    "end": "1083760"
  },
  {
    "text": "and then clear the search box after the",
    "start": "1083760",
    "end": "1086520"
  },
  {
    "text": "search box is cleared I entered S3 in",
    "start": "1086520",
    "end": "1089600"
  },
  {
    "text": "the search box and select Amazon S3 full",
    "start": "1089600",
    "end": "1093360"
  },
  {
    "text": "access followed by add permissions after",
    "start": "1093360",
    "end": "1096799"
  },
  {
    "text": "doing so both the Amazon Bedrock full",
    "start": "1096799",
    "end": "1099600"
  },
  {
    "text": "access and the Amazon S3 full access",
    "start": "1099600",
    "end": "1103000"
  },
  {
    "text": "policies should show up in the",
    "start": "1103000",
    "end": "1104559"
  },
  {
    "text": "permissions policies section for",
    "start": "1104559",
    "end": "1106960"
  },
  {
    "text": "production environments it would be",
    "start": "1106960",
    "end": "1108320"
  },
  {
    "text": "worthwhile to restrict the service",
    "start": "1108320",
    "end": "1110679"
  },
  {
    "text": "permissions to the bare minimum to",
    "start": "1110679",
    "end": "1112919"
  },
  {
    "text": "comply with the policy of least",
    "start": "1112919",
    "end": "1115080"
  },
  {
    "text": "privilege while I'm on the topic of",
    "start": "1115080",
    "end": "1117039"
  },
  {
    "text": "permissions I need to make sure to",
    "start": "1117039",
    "end": "1119240"
  },
  {
    "start": "1118000",
    "end": "1168000"
  },
  {
    "text": "request access to the Bedrock Foundation",
    "start": "1119240",
    "end": "1122039"
  },
  {
    "text": "model that I'll be using for this",
    "start": "1122039",
    "end": "1124600"
  },
  {
    "text": "architecture even if all the other role",
    "start": "1124600",
    "end": "1127039"
  },
  {
    "text": "and resource policies were configured",
    "start": "1127039",
    "end": "1129120"
  },
  {
    "text": "correctly without access to the",
    "start": "1129120",
    "end": "1131120"
  },
  {
    "text": "foundation model the architecture I'm",
    "start": "1131120",
    "end": "1133120"
  },
  {
    "text": "building would not work to check my",
    "start": "1133120",
    "end": "1134880"
  },
  {
    "text": "Foundation model access I'll go to the",
    "start": "1134880",
    "end": "1137280"
  },
  {
    "text": "Bedrock console screen select the icon",
    "start": "1137280",
    "end": "1140159"
  },
  {
    "text": "in the upper left hand corner and select",
    "start": "1140159",
    "end": "1143320"
  },
  {
    "text": "model access under the Bedrock",
    "start": "1143320",
    "end": "1146280"
  },
  {
    "text": "configurations because I had requested",
    "start": "1146280",
    "end": "1148480"
  },
  {
    "text": "this access ahead of time I can see that",
    "start": "1148480",
    "end": "1150880"
  },
  {
    "text": "I already have access to most of the",
    "start": "1150880",
    "end": "1152960"
  },
  {
    "text": "foundation models that I might want to",
    "start": "1152960",
    "end": "1155200"
  },
  {
    "text": "experiment with so there's nothing to be",
    "start": "1155200",
    "end": "1157080"
  },
  {
    "text": "done here if I hadn't taken this step",
    "start": "1157080",
    "end": "1159360"
  },
  {
    "text": "ahead of time I would simply need to",
    "start": "1159360",
    "end": "1161280"
  },
  {
    "text": "select modify model access or request",
    "start": "1161280",
    "end": "1164760"
  },
  {
    "text": "model access and then select the",
    "start": "1164760",
    "end": "1167159"
  },
  {
    "text": "foundation models that I wanted access",
    "start": "1167159",
    "end": "1169280"
  },
  {
    "start": "1168000",
    "end": "1188000"
  },
  {
    "text": "to earlier I set up a policy for the",
    "start": "1169280",
    "end": "1171720"
  },
  {
    "text": "incoming S3 bucket so that the Amazon",
    "start": "1171720",
    "end": "1174120"
  },
  {
    "text": "simple email service or sees could write",
    "start": "1174120",
    "end": "1177760"
  },
  {
    "text": "to the bucket and the AWS Lambda service",
    "start": "1177760",
    "end": "1181080"
  },
  {
    "text": "could read from the bucket the only",
    "start": "1181080",
    "end": "1182600"
  },
  {
    "text": "thing left to configure for this bucket",
    "start": "1182600",
    "end": "1184320"
  },
  {
    "text": "is to set up an event notification which",
    "start": "1184320",
    "end": "1186360"
  },
  {
    "text": "will trigger an indication of our AWS",
    "start": "1186360",
    "end": "1189280"
  },
  {
    "start": "1188000",
    "end": "1238000"
  },
  {
    "text": "Lambda function to do this I'll select",
    "start": "1189280",
    "end": "1191840"
  },
  {
    "text": "the bucket I created and select the",
    "start": "1191840",
    "end": "1194039"
  },
  {
    "text": "properties tab once here I'll scroll",
    "start": "1194039",
    "end": "1196520"
  },
  {
    "text": "down to the event notifications set",
    "start": "1196520",
    "end": "1198760"
  },
  {
    "text": "section and select create event",
    "start": "1198760",
    "end": "1201880"
  },
  {
    "text": "notification I'll name the event and use",
    "start": "1201880",
    "end": "1205360"
  },
  {
    "text": "the domain of the customer service email",
    "start": "1205360",
    "end": "1208159"
  },
  {
    "text": "address as the prefix so that if needed",
    "start": "1208159",
    "end": "1210720"
  },
  {
    "text": "I can reuse the bucket and track email",
    "start": "1210720",
    "end": "1212880"
  },
  {
    "text": "messages by domain in the event types",
    "start": "1212880",
    "end": "1215760"
  },
  {
    "text": "section I'll select all object create",
    "start": "1215760",
    "end": "1218520"
  },
  {
    "text": "events and lastly in the destination",
    "start": "1218520",
    "end": "1221919"
  },
  {
    "text": "section I'll select the choose Lambda",
    "start": "1221919",
    "end": "1224520"
  },
  {
    "text": "function drop-down pick the name of the",
    "start": "1224520",
    "end": "1226880"
  },
  {
    "text": "AWS Lambda function that I created",
    "start": "1226880",
    "end": "1229280"
  },
  {
    "text": "earlier and select save changes now that",
    "start": "1229280",
    "end": "1232440"
  },
  {
    "text": "my S3 event has been configured All That",
    "start": "1232440",
    "end": "1235360"
  },
  {
    "text": "Remains now is to test the solution to",
    "start": "1235360",
    "end": "1237720"
  },
  {
    "text": "make certain that the solution works",
    "start": "1237720",
    "end": "1240039"
  },
  {
    "start": "1238000",
    "end": "1332000"
  },
  {
    "text": "I've created an example customer service",
    "start": "1240039",
    "end": "1242320"
  },
  {
    "text": "email message from a fictional customer",
    "start": "1242320",
    "end": "1244760"
  },
  {
    "text": "named John Doe who had a great",
    "start": "1244760",
    "end": "1247120"
  },
  {
    "text": "experience with a car rental agency",
    "start": "1247120",
    "end": "1249720"
  },
  {
    "text": "fictional car rental Jon can't wait to",
    "start": "1249720",
    "end": "1252360"
  },
  {
    "text": "share his fantastic experience with the",
    "start": "1252360",
    "end": "1254520"
  },
  {
    "text": "rental agency so he drafts his email",
    "start": "1254520",
    "end": "1257039"
  },
  {
    "text": "message and sends it to my customer",
    "start": "1257039",
    "end": "1259480"
  },
  {
    "text": "service email address checking the",
    "start": "1259480",
    "end": "1262320"
  },
  {
    "text": "content of the S3 bucket used to store",
    "start": "1262320",
    "end": "1265000"
  },
  {
    "text": "the analysis I can immediately see that",
    "start": "1265000",
    "end": "1268280"
  },
  {
    "text": "my email message was properly received",
    "start": "1268280",
    "end": "1270600"
  },
  {
    "text": "and stored as expected let's open the",
    "start": "1270600",
    "end": "1273279"
  },
  {
    "text": "object in a separate window and take a",
    "start": "1273279",
    "end": "1275720"
  },
  {
    "text": "look at its contents after having",
    "start": "1275720",
    "end": "1277840"
  },
  {
    "text": "extracted the content from the",
    "start": "1277840",
    "end": "1279559"
  },
  {
    "text": "downloaded object I can immediately see",
    "start": "1279559",
    "end": "1281960"
  },
  {
    "text": "that our architecture has properly",
    "start": "1281960",
    "end": "1283799"
  },
  {
    "text": "summarized the email message and",
    "start": "1283799",
    "end": "1286200"
  },
  {
    "text": "extracted the relevant information",
    "start": "1286200",
    "end": "1288039"
  },
  {
    "text": "additionally the object contains token",
    "start": "1288039",
    "end": "1290559"
  },
  {
    "text": "counts so that the cost can be analyzed",
    "start": "1290559",
    "end": "1293080"
  },
  {
    "text": "over time since this is a single line",
    "start": "1293080",
    "end": "1295159"
  },
  {
    "text": "Json object services such as Amazon",
    "start": "1295159",
    "end": "1297960"
  },
  {
    "text": "Athena can be used to easily query the",
    "start": "1297960",
    "end": "1300760"
  },
  {
    "text": "processed emails and integration into",
    "start": "1300760",
    "end": "1302919"
  },
  {
    "text": "Quick site for dashboard reporting as a",
    "start": "1302919",
    "end": "1305200"
  },
  {
    "text": "breeze with this serverless AI powerered",
    "start": "1305200",
    "end": "1307960"
  },
  {
    "text": "solution you can streamline your",
    "start": "1307960",
    "end": "1310159"
  },
  {
    "text": "customer service operations improve",
    "start": "1310159",
    "end": "1312960"
  },
  {
    "text": "efficiency and visibility and deliver",
    "start": "1312960",
    "end": "1315360"
  },
  {
    "text": "better support experiences all built on",
    "start": "1315360",
    "end": "1318159"
  },
  {
    "text": "a us using services such as Amazon",
    "start": "1318159",
    "end": "1321320"
  },
  {
    "text": "simple email service Lambda and Bedrock",
    "start": "1321320",
    "end": "1324880"
  },
  {
    "text": "find additional information in the links",
    "start": "1324880",
    "end": "1326799"
  },
  {
    "text": "below and thank you for your time",
    "start": "1326799",
    "end": "1331559"
  }
]