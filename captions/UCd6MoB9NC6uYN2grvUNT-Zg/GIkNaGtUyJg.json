[
  {
    "start": "0",
    "end": "20000"
  },
  {
    "text": "good afternoon in next 45 minutes you're going to go through the journey of",
    "start": "110",
    "end": "6890"
  },
  {
    "text": "processes obviously go from waterfall to hrl to DevOps Microsoft services cannot",
    "start": "6890",
    "end": "13650"
  },
  {
    "text": "be in itself without talking about the processes but let's start with the first",
    "start": "13650",
    "end": "20580"
  },
  {
    "start": "20000",
    "end": "20000"
  },
  {
    "text": "thing monolith I mean a big rock is a monolith a big mud is a monolith what do",
    "start": "20580",
    "end": "29519"
  },
  {
    "text": "we consider monolith I mean if you want to take attributes of monolith I would say take a stack in the when we moved",
    "start": "29519",
    "end": "36899"
  },
  {
    "text": "from client-server to enter your based architecture let's take a Java j2ee",
    "start": "36899",
    "end": "42420"
  },
  {
    "text": "stack or let's take a dotnet C sharp a stack and let's see how that evolves you",
    "start": "42420",
    "end": "49230"
  },
  {
    "text": "you have a entire based application which talks to a data store you have",
    "start": "49230",
    "end": "56250"
  },
  {
    "text": "shared libraries which different services leverages you have those shared libraries making call to database or",
    "start": "56250",
    "end": "63030"
  },
  {
    "text": "other storage you are starting to build the coupling you're starting to build",
    "start": "63030",
    "end": "68189"
  },
  {
    "text": "getting tightly coupled your when you build it you get a big DLL or or odds",
    "start": "68189",
    "end": "75720"
  },
  {
    "text": "are output and anytime you have to do change you start seeing those blockers",
    "start": "75720",
    "end": "81210"
  },
  {
    "text": "you have big teams to associate it that's how the monolith evolves and it",
    "start": "81210",
    "end": "88290"
  },
  {
    "text": "reaches to a point where you can't move faster you actually hit hit a roadblock and it's long term you have merge",
    "start": "88290",
    "end": "96450"
  },
  {
    "text": "Fridays you have days in which you are actually figuring out oh this is broad branch this is my pre prod branch this",
    "start": "96450",
    "end": "103380"
  },
  {
    "text": "is my bug fix branch how do I merge those K code changes that's that's the",
    "start": "103380",
    "end": "108509"
  },
  {
    "text": "monolith now what's the pitch here to understand I want to give you the",
    "start": "108509",
    "end": "113939"
  },
  {
    "text": "scenario run through you probably have heard this amazon.com in 2001 was was",
    "start": "113939",
    "end": "119460"
  },
  {
    "text": "kind of monolith and was hitting similar set of challenges any changes was taking months to",
    "start": "119460",
    "end": "126360"
  },
  {
    "text": "actually get get through the home page itself was so big that you needed a release team to coordinate different",
    "start": "126360",
    "end": "132900"
  },
  {
    "text": "components homepage to be released that's where amazon.com was so it the stack we are",
    "start": "132900",
    "end": "139989"
  },
  {
    "text": "talking is obidos and it moved towards the group I stack which is a web server and it has a third based calls which can",
    "start": "139989",
    "end": "147610"
  },
  {
    "text": "make to either database or or a file server now how does that that move in",
    "start": "147610",
    "end": "152980"
  },
  {
    "text": "let's let's take the challenges that that we see we are difficult to scale",
    "start": "152980",
    "end": "158739"
  },
  {
    "start": "155000",
    "end": "155000"
  },
  {
    "text": "obviously once you have a monolith you actually replicate the whole thing right",
    "start": "158739",
    "end": "164230"
  },
  {
    "text": "I mean if you take the age-old load balancer what do you do you replicate the whole stack not necessarily the",
    "start": "164230",
    "end": "170230"
  },
  {
    "text": "place where the request is coming in different services could have a different request throughput expectations but you actually replicate",
    "start": "170230",
    "end": "177519"
  },
  {
    "text": "the whole stack because that's how it gets scaled long build tests release",
    "start": "177519",
    "end": "182590"
  },
  {
    "text": "cycles that has to do with little bit in the if you take the waterfall to agile",
    "start": "182590",
    "end": "188519"
  },
  {
    "text": "that even agile many people used to do many waterfalls inside that so that that",
    "start": "188519",
    "end": "195040"
  },
  {
    "text": "has a tie with the processes and the whole group which is developing it it's large teams it's not small small teams",
    "start": "195040",
    "end": "202299"
  },
  {
    "text": "affected so the large teams have to have so much of collaboration that's that's another reason operations is nightmare",
    "start": "202299",
    "end": "209410"
  },
  {
    "text": "because if you see the age-old segregation you have a dev team you have a test team you have operations team so",
    "start": "209410",
    "end": "216579"
  },
  {
    "text": "there is a good amount of separations dev team releases the code it works on my box I am done with it I don't care if",
    "start": "216579",
    "end": "222160"
  },
  {
    "text": "it doesn't work on the other side so there is no ownership that that's the primary reason why operations is a",
    "start": "222160",
    "end": "227530"
  },
  {
    "text": "nightmare because when you find a bug like who wrote this who is the owner for this some time goes in just figuring",
    "start": "227530",
    "end": "234010"
  },
  {
    "text": "that out what is the end result obviously I have been a customer I would",
    "start": "234010",
    "end": "239470"
  },
  {
    "text": "be definitely frustrated if I give a feature request I would want that be a request to not to hear that oh this has",
    "start": "239470",
    "end": "244810"
  },
  {
    "text": "been taken into roadmap it'll come in 2019 first water okay that's that's definitely not about something I want to",
    "start": "244810",
    "end": "250989"
  },
  {
    "text": "hear lack of innovation obviously the there are so many ideas and those ideas if you want to implement",
    "start": "250989",
    "end": "257289"
  },
  {
    "text": "you have to have a very very fast cycle between the idea and getting in the hands of the customer what actually",
    "start": "257289",
    "end": "263919"
  },
  {
    "text": "happens with waterfall and monolith is that you spend so much time between this that by the time",
    "start": "263919",
    "end": "269470"
  },
  {
    "text": "you came here maybe there is a better idea to actually work on common",
    "start": "269470",
    "end": "274630"
  },
  {
    "text": "challenges now as we as we have word I have been given a box that I can't come",
    "start": "274630",
    "end": "280510"
  },
  {
    "start": "275000",
    "end": "275000"
  },
  {
    "text": "out of there so I'll try to be inside the box the whole dev team is working let's take an example of a one daughter",
    "start": "280510",
    "end": "287860"
  },
  {
    "text": "application which has 80 developers right just to make it real now there's",
    "start": "287860",
    "end": "293500"
  },
  {
    "text": "good amount of coordination there is a release team which works to get each component and then okay this has a",
    "start": "293500",
    "end": "299710"
  },
  {
    "text": "dependency on this this has dependency on this I need to get this built first then this build first there that's how",
    "start": "299710",
    "end": "304720"
  },
  {
    "text": "I'll get it you will have to three iterations where you'll find oh I I deployed this but no the signature is",
    "start": "304720",
    "end": "310750"
  },
  {
    "text": "different so you have that churn you get into now if you see this this is typical like a bandwidth thing you have so many",
    "start": "310750",
    "end": "318760"
  },
  {
    "text": "teams releasing it but they have to go through the same build cycle end to end release process they have to go through",
    "start": "318760",
    "end": "325030"
  },
  {
    "text": "the same so that is another biggest blocker because there is good amount of days when you plan for those release it",
    "start": "325030",
    "end": "332710"
  },
  {
    "text": "is not like if a team if a service on its own can build and can release agnostic of others so if you have that",
    "start": "332710",
    "end": "340090"
  },
  {
    "text": "core collaboration needs you are actually blocking how teams can work and proceed to much software coupling when",
    "start": "340090",
    "end": "351370"
  },
  {
    "start": "348000",
    "end": "348000"
  },
  {
    "text": "you say coupling we evolved from client-server to services model you started doing sharing of code so if you",
    "start": "351370",
    "end": "358300"
  },
  {
    "text": "take age-old structured programming you have a function as terrible cold you move into object-oriented you have",
    "start": "358300",
    "end": "364419"
  },
  {
    "text": "classes which is shareable code you moved into components you moved into shared libraries could be a DLL which",
    "start": "364419",
    "end": "370479"
  },
  {
    "text": "either runs inside the same address space or is hosted across different process but it is a shared library it",
    "start": "370479",
    "end": "376870"
  },
  {
    "text": "has a version multiple teams will use the shared library now what happens there is a version associated each team",
    "start": "376870",
    "end": "384070"
  },
  {
    "text": "can be at different versions again you will hit the issues there I need the latest version no he can't",
    "start": "384070",
    "end": "389979"
  },
  {
    "text": "change so everyone has to change to support that latest version of the component that's the reason where you",
    "start": "389979",
    "end": "395500"
  },
  {
    "text": "have too much software coupling share data this is another issue",
    "start": "395500",
    "end": "401139"
  },
  {
    "text": "if all those different entir components are talking to the same database and if you have a schema change you drop the",
    "start": "401139",
    "end": "408639"
  },
  {
    "text": "field you added a new field you had a query which output something it will end",
    "start": "408639",
    "end": "414129"
  },
  {
    "text": "up breaking it is very hard to reverse engineer water all the places those",
    "start": "414129",
    "end": "419199"
  },
  {
    "text": "calls are being made for that database usually it ends up being break build deploy either you find it because",
    "start": "419199",
    "end": "425979"
  },
  {
    "text": "certain things you can find at the build time but some things you find at the runtime when actually the call happens right so you have shared data across",
    "start": "425979",
    "end": "433029"
  },
  {
    "text": "different services and that becomes the blocker so one shared libraries to share",
    "start": "433029",
    "end": "439000"
  },
  {
    "text": "data those two primary thinks that the micro services world hits before I go",
    "start": "439000",
    "end": "447400"
  },
  {
    "text": "into micro services how the Amazon divided let's discuss what actually in terms of definition what is a micro",
    "start": "447400",
    "end": "454000"
  },
  {
    "text": "services there's a Wikipedia definition and this is one of the definition given",
    "start": "454000",
    "end": "460240"
  },
  {
    "text": "by Adrian Cockcroft he's our VP of cloud architecture I'm sure service-oriented architecture",
    "start": "460240",
    "end": "467229"
  },
  {
    "text": "many people will say yeah I kind of feel like it's similar it is it is service oriented architecture if I if I have to",
    "start": "467229",
    "end": "474669"
  },
  {
    "text": "say when we move from client server to entir or services model we got into",
    "start": "474669",
    "end": "480789"
  },
  {
    "text": "service-oriented but it is today that we are realizing how a unit can be a",
    "start": "480789",
    "end": "486789"
  },
  {
    "text": "service so a unit as a service has to have its own data store what it is",
    "start": "486789",
    "end": "492069"
  },
  {
    "text": "manipulating it has to have its own depth release pipe size psych cycle then",
    "start": "492069",
    "end": "497589"
  },
  {
    "text": "it is on its own it's it's a unit on its own it is no dependency services",
    "start": "497589",
    "end": "503560"
  },
  {
    "text": "communicate with each other over network over a standard protocols HTTP HTTP 84 43 you are talking with",
    "start": "503560",
    "end": "511779"
  },
  {
    "text": "each other we can talk about performance impacts of different services and going over these layers but they are talking",
    "start": "511779",
    "end": "518198"
  },
  {
    "text": "on a standard protocol that's one of the key they are not going the other way",
    "start": "518199",
    "end": "523560"
  },
  {
    "text": "loosely coupled elements essentially you can each service can change itself",
    "start": "523560",
    "end": "530050"
  },
  {
    "text": "agnostic of other I mean yes there is a signature that you have to add here you to have a plan in terms of if you have a",
    "start": "530050",
    "end": "536510"
  },
  {
    "text": "signature change have a way in which you have a version change and intimating the clients and then you move towards new",
    "start": "536510",
    "end": "543110"
  },
  {
    "text": "signature but you're loosely coupled everyone can run on its own think of it like a team each person has a different",
    "start": "543110",
    "end": "549980"
  },
  {
    "text": "speed to work if you make them together that you have to go into meeting together the least slowest guy will make",
    "start": "549980",
    "end": "557360"
  },
  {
    "text": "that's the speed the lowest speed if they go on their own the fastest guy you can do things faster and and that way",
    "start": "557360",
    "end": "564410"
  },
  {
    "text": "you get advantage of that bounded context this this contact concept comes",
    "start": "564410",
    "end": "569930"
  },
  {
    "text": "from like a domain modeling where you're thinking of your microservices in one",
    "start": "569930",
    "end": "575660"
  },
  {
    "text": "particular domain or an entity if I take let's take a college you have student as",
    "start": "575660",
    "end": "582709"
  },
  {
    "text": "an entity you have a teacher as an entity course and as an entity you can directly correlate microservices with",
    "start": "582709",
    "end": "589070"
  },
  {
    "text": "the same I can have all student based manipulation student based or exposed as",
    "start": "589070",
    "end": "595040"
  },
  {
    "text": "an API rest again rest has its own history we kind of went from 1960 where",
    "start": "595040",
    "end": "601790"
  },
  {
    "text": "we got the STD p warps to a packaging wrapping so player that then oh no this",
    "start": "601790",
    "end": "607160"
  },
  {
    "text": "is too much overhead let's go back to HTTP right so that's where the rest is and that's becoming the standard so you",
    "start": "607160",
    "end": "613339"
  },
  {
    "text": "have a rest-based API you have a service which has its own data store that in",
    "start": "613339",
    "end": "618920"
  },
  {
    "text": "itself is microservices anatomy so you",
    "start": "618920",
    "end": "624290"
  },
  {
    "text": "have the application logic you have the data store and you're exposing them by a public stdp rest endpoints okay you are",
    "start": "624290",
    "end": "634250"
  },
  {
    "start": "633000",
    "end": "633000"
  },
  {
    "text": "avoiding coupling by going through the standard protocols you are not having either reference callable wrappers",
    "start": "634250",
    "end": "641800"
  },
  {
    "text": "interfaces inside the abstract factory based loading there is none of that it",
    "start": "641800",
    "end": "647180"
  },
  {
    "text": "is called the call goes to network layer HTTP TCP get the callback you don't have",
    "start": "647180",
    "end": "654380"
  },
  {
    "text": "any dependency now that service can be used by any other members of the team because it's it's its own standard port",
    "start": "654380",
    "end": "661370"
  },
  {
    "text": "if you have a shared library it has to be shared go on somebody has to track whenever you change there's good amount of",
    "start": "661370",
    "end": "667700"
  },
  {
    "text": "dependencies that brings if you go through the standard STD people-based hosting services you I avoid that coupling there",
    "start": "667700",
    "end": "675140"
  },
  {
    "text": "is a performance impact of it that's that's something you have to always have it in mind yes there is a question yes",
    "start": "675140",
    "end": "685010"
  },
  {
    "text": "so it's it's the STD P if I have a student API and I have a course API so",
    "start": "685010",
    "end": "690920"
  },
  {
    "text": "to manipulate a student API you call the student one now if you are talking about",
    "start": "690920",
    "end": "696170"
  },
  {
    "text": "orchestration layer like if you have a call which can span across multiple services API gateways the answer from",
    "start": "696170",
    "end": "703970"
  },
  {
    "text": "from the ADA so you need a gateway kind of architecture which is the front and all the micro services are abstracted at",
    "start": "703970",
    "end": "711290"
  },
  {
    "text": "the back yes yes",
    "start": "711290",
    "end": "720519"
  },
  {
    "text": "yes we will we will actually talk about that yeah okay this is another example",
    "start": "720600",
    "end": "726490"
  },
  {
    "text": "of how restaurant the microservices would evolve you can see payment takes",
    "start": "726490",
    "end": "732010"
  },
  {
    "text": "care of payment based processing location has location and now if you see you can easily correlate like this could",
    "start": "732010",
    "end": "739270"
  },
  {
    "text": "easily be reusable across different different needs wherever there's a location-based need like GPS coordinates",
    "start": "739270",
    "end": "746110"
  },
  {
    "text": "or the where you currently are drivers restaurant so the more generic and unit",
    "start": "746110",
    "end": "752110"
  },
  {
    "text": "is accomplished on its own it can it is more reusable okay so there",
    "start": "752110",
    "end": "757840"
  },
  {
    "text": "is one element of how these software teams have evolved right as I said in the initial start there is a developer",
    "start": "757840",
    "end": "763690"
  },
  {
    "start": "763000",
    "end": "763000"
  },
  {
    "text": "developer there's a tester tester there is a QA there's analysts there is BD",
    "start": "763690",
    "end": "770380"
  },
  {
    "text": "business development it is solutions manager different roles in a whole as DLC right agile tried to break that like",
    "start": "770380",
    "end": "778150"
  },
  {
    "text": "hey you have spring team's the scrum version of agile and it is a combination of dev test PM and they're working",
    "start": "778150",
    "end": "784600"
  },
  {
    "text": "together they are doing design together they are doing tests together they are doing test-driven development together",
    "start": "784600",
    "end": "790720"
  },
  {
    "text": "and even the skill set is supposed to be everybody doing the same dev can do",
    "start": "790720",
    "end": "795880"
  },
  {
    "text": "sometimes test tests can do actually sometimes dev but in reality what ended",
    "start": "795880",
    "end": "801310"
  },
  {
    "text": "up happening was you had many waterfalls inside those Sprint's so if it is a one month sprint cycles one week of design",
    "start": "801310",
    "end": "808030"
  },
  {
    "text": "one week of development one week of deployment and last week of may be stabilization and there are some backs",
    "start": "808030",
    "end": "813880"
  },
  {
    "text": "identified which goes to another sprint so one of the another reason in the industry is there is like you can ask",
    "start": "813880",
    "end": "820570"
  },
  {
    "text": "people you're a developer you UI developer are you a middle tire developer or are you a database",
    "start": "820570",
    "end": "826420"
  },
  {
    "text": "developer so UI developer kind of HTML Javascript CSS or if you take take",
    "start": "826420",
    "end": "832330"
  },
  {
    "text": "client there is some kind of UI based SDK that they know middle they're mostly",
    "start": "832330",
    "end": "837340"
  },
  {
    "text": "it's the services stack either they do the soap based services or ST STD based",
    "start": "837340",
    "end": "843040"
  },
  {
    "text": "services they're writing middle tier services to process the requests coming in and the database guys are more in the",
    "start": "843040",
    "end": "850510"
  },
  {
    "text": "either database functions designing database or DBA tuning now",
    "start": "850510",
    "end": "857079"
  },
  {
    "text": "sometimes that drove how the actual application architecture was so we will",
    "start": "857079",
    "end": "862540"
  },
  {
    "text": "divide this application into a UI application a military application and a database application that itself tells",
    "start": "862540",
    "end": "869259"
  },
  {
    "text": "you that that is not the way you are going to divide once you go into micro services you're going to design in a",
    "start": "869259",
    "end": "875230"
  },
  {
    "text": "cross-functional team it's a self-contained unit you can combine a UI guy a military guy or DB a guy together",
    "start": "875230",
    "end": "881679"
  },
  {
    "text": "yes sorry yeah so this actually goes",
    "start": "881679",
    "end": "894069"
  },
  {
    "text": "into this I load application model right where you have each UI application is separate the military application is",
    "start": "894069",
    "end": "900939"
  },
  {
    "text": "separate because the same the skillset is driving the architecture whereas once",
    "start": "900939",
    "end": "906100"
  },
  {
    "start": "906000",
    "end": "906000"
  },
  {
    "text": "you go into the micro services architecture you have a team which is cross-functional and it is",
    "start": "906100",
    "end": "911529"
  },
  {
    "text": "self-contained the idea is it's not the skill set that should drive the",
    "start": "911529",
    "end": "918069"
  },
  {
    "text": "architecture of the application sometimes I have even seen this like large application it's very hard to work",
    "start": "918069",
    "end": "923919"
  },
  {
    "text": "on a Eclipse IDE or a visual studio D they create separate solution just to",
    "start": "923919",
    "end": "929739"
  },
  {
    "text": "satisfy that they create separate because we have separate dev teams oh I'll give you a separate project for you",
    "start": "929739",
    "end": "935439"
  },
  {
    "text": "because the project gives out come with a jar or a DLL that's how it gets divided the idea is when you go to micro",
    "start": "935439",
    "end": "941769"
  },
  {
    "text": "services you are not going to think of that you're thinking from entity perspective and a business domain perspective so we come to the Amazon",
    "start": "941769",
    "end": "950139"
  },
  {
    "text": "terminology we have this concept of two pieces or teams I'm pretty sure you have must have heard by now so a service a",
    "start": "950139",
    "end": "956649"
  },
  {
    "text": "service is a as many people who can be fed by two pieces that's that's the idea",
    "start": "956649",
    "end": "962139"
  },
  {
    "text": "there so it's smaller smaller teams full accountability that is critical right from the requirements to designing to",
    "start": "962139",
    "end": "970980"
  },
  {
    "text": "developing to deploying to user experience to stability to supporting",
    "start": "970980",
    "end": "978040"
  },
  {
    "text": "it's the same team it is end to end ownership not I have",
    "start": "978040",
    "end": "983679"
  },
  {
    "text": "developed it's working on my machine I am done that add small lay and the more layers you",
    "start": "983679",
    "end": "988750"
  },
  {
    "text": "add the more complexity for an application so that's the idea behind Amazon DevOps model where you have the",
    "start": "988750",
    "end": "996040"
  },
  {
    "text": "team divided smaller chunks who own end to end the architecture is you are",
    "start": "996040",
    "end": "1001680"
  },
  {
    "text": "actually thinking of your application into small subsets of micro services and each micro service is kind of a entity",
    "start": "1001680",
    "end": "1008730"
  },
  {
    "text": "one entity which has its own data store each has its own API layer on top of it",
    "start": "1008730",
    "end": "1015440"
  },
  {
    "text": "okay so that's the idea here each one of",
    "start": "1015440",
    "end": "1020550"
  },
  {
    "text": "them can do their build release on their own they do not have to be having a",
    "start": "1020550",
    "end": "1027990"
  },
  {
    "text": "release day or a release week or a march Fridays it does not mean that there is",
    "start": "1027990",
    "end": "1033569"
  },
  {
    "text": "no collaboration there still is collaboration obviously there is signatures API has signatures a",
    "start": "1033570",
    "end": "1038730"
  },
  {
    "text": "signature is a function which has different layers of parameters so whenever there is a signature changes",
    "start": "1038730",
    "end": "1043740"
  },
  {
    "text": "going on there has to be some communication the idea is the design of the service should be in a way that it",
    "start": "1043740",
    "end": "1049950"
  },
  {
    "text": "has backward compatibility built in and the versioning the semantic versioning that we have the major minor and the",
    "start": "1049950",
    "end": "1056640"
  },
  {
    "text": "patching based that should give the actual end users of the API an indication that hey this set this this",
    "start": "1056640",
    "end": "1063780"
  },
  {
    "text": "API is going to be deprecated you better move to this particular API and give them time and then next time when a",
    "start": "1063780",
    "end": "1068940"
  },
  {
    "text": "major version comes they are ready for it they're prepared for it okay so",
    "start": "1068940",
    "end": "1076940"
  },
  {
    "text": "yes yes each each is a micro service in this this representation you have 1 2 3",
    "start": "1079800",
    "end": "1085900"
  },
  {
    "text": "4 5 6 micro services being developed yes",
    "start": "1085900",
    "end": "1100870"
  },
  {
    "text": "so again the service what like if you talk AWS service you literally have a",
    "start": "1100870",
    "end": "1107140"
  },
  {
    "text": "managed ad service with 8 people it's a big service ask now if you are dividing",
    "start": "1107140",
    "end": "1114070"
  },
  {
    "text": "a smaller application there it could be that one person can own one service and",
    "start": "1114070",
    "end": "1119530"
  },
  {
    "text": "can do it but usually a large like a service expectation is you will at least",
    "start": "1119530",
    "end": "1126070"
  },
  {
    "text": "need more than one people to do the actual work the composition of a micro",
    "start": "1126070",
    "end": "1132070"
  },
  {
    "text": "services team if for a small application could change I would definitely give you on that so yeah",
    "start": "1132070",
    "end": "1140130"
  },
  {
    "text": "yeah that's that's very very spot-on now there is an element of architecture",
    "start": "1194340",
    "end": "1200680"
  },
  {
    "text": "advantages that we have not even spoken about like if your things are being designed in microservices they can scale",
    "start": "1200680",
    "end": "1207580"
  },
  {
    "text": "on their own right they can scale on their own you can abstract things on their own",
    "start": "1207580",
    "end": "1214180"
  },
  {
    "text": "like today our micro service is abstracting a data store something tomorrow it can change we will talk there are a lot of in terms of how you",
    "start": "1214180",
    "end": "1220750"
  },
  {
    "text": "are designing the actual micro services the frameworks it will it will get more clarity once once we have covered that",
    "start": "1220750",
    "end": "1226540"
  },
  {
    "text": "ok ok this is a sample of how it evolved and the different micro services that",
    "start": "1226540",
    "end": "1232720"
  },
  {
    "text": "the Amazon took the journey this is a build number across all the teams with",
    "start": "1232720",
    "end": "1240250"
  },
  {
    "text": "Microsoft's micro services architecture you move 250 million deployments a year",
    "start": "1240250",
    "end": "1246270"
  },
  {
    "text": "0.63 per second for poor build now let's go into the what are the implementation",
    "start": "1246270",
    "end": "1251590"
  },
  {
    "text": "options and at the end we will see the architectural advantages so how do you",
    "start": "1251590",
    "end": "1256660"
  },
  {
    "text": "go about implementing in AWS right the first obviously is Elastic Compute cloud you use ec2 instances you have a web",
    "start": "1256660",
    "end": "1264070"
  },
  {
    "text": "server some kind of either engines or is or others and you host your web services",
    "start": "1264070",
    "end": "1269530"
  },
  {
    "text": "there you have a load balancer layer to",
    "start": "1269530",
    "end": "1276010"
  },
  {
    "text": "host it so you have a load balancer the services are in the ec2 instance this can scale it is talking to the database",
    "start": "1276010",
    "end": "1283270"
  },
  {
    "text": "layer the deployment could work why are the elastic beanstalk that's the plain",
    "start": "1283270",
    "end": "1288610"
  },
  {
    "start": "1285000",
    "end": "1285000"
  },
  {
    "text": "vanilla the first level which you talk the second which is the ec2 container service this is where things become more",
    "start": "1288610",
    "end": "1295000"
  },
  {
    "text": "interesting you are actually talking about different services and the services have tasks now you could",
    "start": "1295000",
    "end": "1302050"
  },
  {
    "text": "actually gain by using container service it gives you automatic scheduling the orchestration of it so you still have",
    "start": "1302050",
    "end": "1309010"
  },
  {
    "text": "ec2 instances the orchestration will make sure that it deploys different services on different",
    "start": "1309010",
    "end": "1315130"
  },
  {
    "text": "ec2 instances and that plumbing is done by the container service you see to also",
    "start": "1315130",
    "end": "1320380"
  },
  {
    "text": "give our container service also has integration with alb alb is the layer 7 load balancer so layer 4 and layer 7",
    "start": "1320380",
    "end": "1328419"
  },
  {
    "text": "layer 7 actually helps you have multiple copies of same service on same host",
    "start": "1328419",
    "end": "1334620"
  },
  {
    "text": "using the host headers so you can actually use ec2 instances more the utilization grows more in the previous",
    "start": "1334620",
    "end": "1341289"
  },
  {
    "text": "case you will have mostly one because you tie it to a host and port in this case you can have n number of it",
    "start": "1341289",
    "end": "1347650"
  },
  {
    "text": "depending on your ec2 instance size and your service expectation of memory what what it needs so that's that's another",
    "start": "1347650",
    "end": "1354400"
  },
  {
    "text": "another one it is build you can have the end-to-end or CI CD with the AWS build pipeline the",
    "start": "1354400",
    "end": "1362740"
  },
  {
    "text": "next which is obviously when you say micro services what is micro is it a service which is all the api's of the",
    "start": "1362740",
    "end": "1368620"
  },
  {
    "text": "microbe or is a function a micro service right and that there is a separate",
    "start": "1368620",
    "end": "1375010"
  },
  {
    "text": "debate which I want didn't want to go into aa API back-end there like a API",
    "start": "1375010",
    "end": "1380380"
  },
  {
    "text": "get to a back-end could be lambda and lambda is basically nothing but a function which triggers like in a",
    "start": "1380380",
    "end": "1386230"
  },
  {
    "text": "database there is a trigger which gets triggered when there is a change or the event lambda actually gives you a new",
    "start": "1386230",
    "end": "1392770"
  },
  {
    "text": "architectural pattern in the cloud Oh whenever there is a s3 object update whenever there is a new object being",
    "start": "1392770",
    "end": "1398799"
  },
  {
    "text": "added trigger lambda Denise's stream trigger lambda so you can have an event",
    "start": "1398799",
    "end": "1403860"
  },
  {
    "text": "event driven for AWS cloud kind of programming with lambda it does have a limit of five-minute execution time so",
    "start": "1403860",
    "end": "1410710"
  },
  {
    "text": "anything in that function has to be finished within five minutes period yes",
    "start": "1410710",
    "end": "1416070"
  },
  {
    "text": "yes",
    "start": "1417840",
    "end": "1420840"
  },
  {
    "text": "okay so one key thing is the amount of",
    "start": "1437250",
    "end": "1442330"
  },
  {
    "text": "time that function is going to take to execute right lambda has five minutes execution time period so it has to",
    "start": "1442330",
    "end": "1448809"
  },
  {
    "text": "finish within that time period that's that's one if you have a long-running call done lambda is not the right thing",
    "start": "1448809",
    "end": "1454680"
  },
  {
    "text": "micro-services an api gateway back end could be lambda so a call that comes to",
    "start": "1454680",
    "end": "1461920"
  },
  {
    "text": "api gateway it can actually in vague lambda so lambda is also a form of",
    "start": "1461920",
    "end": "1467620"
  },
  {
    "text": "implementing micro-service that's what I meant to say now whether you use lambda for short running calls or you use EC as",
    "start": "1467620",
    "end": "1474640"
  },
  {
    "text": "jobs for long running calls right or you have your own HTTP endpoint hosted",
    "start": "1474640",
    "end": "1480160"
  },
  {
    "text": "somewhere it will be all those are choices which you have like once you have the API gateway created you can",
    "start": "1480160",
    "end": "1486460"
  },
  {
    "text": "either have lambda you can either have easiest container invocation you can either have your own HTTP based service",
    "start": "1486460",
    "end": "1491860"
  },
  {
    "text": "these are all different ways in which you can implement micro service",
    "start": "1491860",
    "end": "1496740"
  },
  {
    "text": "yes yeah",
    "start": "1505049",
    "end": "1508860"
  },
  {
    "text": "there is one key difference here that the if you have seen the shared responsibility model with ec2 there are",
    "start": "1511889",
    "end": "1519429"
  },
  {
    "text": "things that you have to do right patching on top of it lambda is abstracting you from all those",
    "start": "1519429",
    "end": "1525220"
  },
  {
    "text": "plumbing you do not even have access to login to the machine where the lambda is",
    "start": "1525220",
    "end": "1530440"
  },
  {
    "text": "executing all you have control is give me the function define the amount of",
    "start": "1530440",
    "end": "1535749"
  },
  {
    "text": "time or maybe if it needs to have access to some other thing that that's the level so it's the abstracted higher",
    "start": "1535749",
    "end": "1540909"
  },
  {
    "text": "level but if you have the need like hey I do need to go manipulate I have custom",
    "start": "1540909",
    "end": "1546519"
  },
  {
    "text": "things that I need to have if you have darker based instance needs so there are other things that will be at play when",
    "start": "1546519",
    "end": "1552639"
  },
  {
    "text": "you want ec2 based service or I ec2 container based service or a lambda",
    "start": "1552639",
    "end": "1557649"
  },
  {
    "text": "there is an element of how much operational work also you want to take that that will come in and it will also",
    "start": "1557649",
    "end": "1563259"
  },
  {
    "text": "depend on your application dependencies because sometimes getting all dependencies working in lambda is little",
    "start": "1563259",
    "end": "1569049"
  },
  {
    "text": "bit harder than getting it working in a ec2 based services yes",
    "start": "1569049",
    "end": "1582570"
  },
  {
    "text": "then the function yes yes",
    "start": "1594929",
    "end": "1608940"
  },
  {
    "text": "you're saying where's the metadata that actually so there are different sources",
    "start": "1626489",
    "end": "1632889"
  },
  {
    "text": "that could be so I'll give you a high",
    "start": "1632889",
    "end": "1656769"
  },
  {
    "text": "level for the underpinnings of how it works we may need to have more conversation so there are different",
    "start": "1656769",
    "end": "1662710"
  },
  {
    "text": "services that support lambda call back and there is the underpinning infrastructure that they subscribe to",
    "start": "1662710",
    "end": "1670029"
  },
  {
    "text": "whenever that even happens it's like a AIA sync result of a call back like when",
    "start": "1670029",
    "end": "1675580"
  },
  {
    "text": "you call something and you say when it's finished call me this so there is an element of the events that you associate",
    "start": "1675580",
    "end": "1682149"
  },
  {
    "text": "that events like I want to have a s3 port I want this lambda to be invoked",
    "start": "1682149",
    "end": "1687309"
  },
  {
    "text": "you configure that that hey whenever there is this s3 put event on this bucket please call this particular",
    "start": "1687309",
    "end": "1692859"
  },
  {
    "text": "lambda that configuration goes into a plumbing and that's being monitored whenever that call comes in now how that",
    "start": "1692859",
    "end": "1699460"
  },
  {
    "text": "actually the data structures of it I can I can explain you after or we can take that offline okay thank you okay so",
    "start": "1699460",
    "end": "1706599"
  },
  {
    "text": "these are the options lambda can be implemented with so many different runtimes Java Python Nord and out",
    "start": "1706599",
    "end": "1712599"
  },
  {
    "text": "support Thorton it also several s endpoints it automatically scales there is an element of first time launch",
    "start": "1712599",
    "end": "1719169"
  },
  {
    "text": "issues right it can take some time for because as you know from the Java or.net world the first call is slow because",
    "start": "1719169",
    "end": "1725619"
  },
  {
    "text": "it's doing JIT compilation the same thing goes goes here also there is also a other element of spawning things and",
    "start": "1725619",
    "end": "1732279"
  },
  {
    "text": "getting it up to speed there are ways you can speed that up or you can pre warm things like 4lbs you can pre warm",
    "start": "1732279",
    "end": "1738519"
  },
  {
    "text": "to the scale for 10 some kind of DDoS attack you can pre warm things at lambda also ok so API gateway that's the key here",
    "start": "1738519",
    "end": "1746169"
  },
  {
    "start": "1744000",
    "end": "1744000"
  },
  {
    "text": "this is the glue that that gets you this is the front end for the clients when I",
    "start": "1746169",
    "end": "1751210"
  },
  {
    "text": "have micro services let's say I have 10 micro services in my application there are two ways I",
    "start": "1751210",
    "end": "1756250"
  },
  {
    "text": "suppose each one as a URL to the client no that is not the idea behind micro",
    "start": "1756250",
    "end": "1761710"
  },
  {
    "text": "services because you again got a coupling in terms of endpoint the service discovery is what you want to",
    "start": "1761710",
    "end": "1767500"
  },
  {
    "text": "use api gateway gives you several advantages create a unified API",
    "start": "1767500",
    "end": "1773380"
  },
  {
    "text": "front-end for multiple micro services it's one unified it takes care of abstracting the backend micro services",
    "start": "1773380",
    "end": "1779910"
  },
  {
    "text": "authenticate and authorize I don't know what sam'l JWT token what happened to this",
    "start": "1779910",
    "end": "1793350"
  },
  {
    "text": "something",
    "start": "1794160",
    "end": "1797160"
  },
  {
    "text": "yeah some even trigger",
    "start": "1802230",
    "end": "1805940"
  },
  {
    "text": "okay thank you you're the man okay another advantage DDoS protection",
    "start": "1819920",
    "end": "1825700"
  },
  {
    "text": "distributed denial-of-service it is built-in into the product the cloud",
    "start": "1825700",
    "end": "1831740"
  },
  {
    "text": "front pop are the first ones who are going to get that request and based on the users region it will route you have",
    "start": "1831740",
    "end": "1837500"
  },
  {
    "text": "caching you have different caching that's available output caching that's available via API gateway so there's",
    "start": "1837500",
    "end": "1842990"
  },
  {
    "text": "significant advantage with the API gateway as a front for for the all other",
    "start": "1842990",
    "end": "1848180"
  },
  {
    "text": "micro services storage obviously I mean I have dynamodb as a no sequel but",
    "start": "1848180",
    "end": "1853490"
  },
  {
    "text": "technically there's a term called polyglot frameworks and polyglot storage",
    "start": "1853490",
    "end": "1859910"
  },
  {
    "text": "I mean it's a fancy name basically use the right storage mechanism for right",
    "start": "1859910",
    "end": "1865160"
  },
  {
    "text": "needs I mean if you have our DBS knee our DBMS need you will use the RDS or other our DBMS engines if you have",
    "start": "1865160",
    "end": "1871760"
  },
  {
    "text": "caching searching you'll use the lusty cache no sequel base needs you will is the dynamodb this is one example of how",
    "start": "1871760",
    "end": "1878690"
  },
  {
    "text": "guilt which is luxury designer brands actually created their own lambda I",
    "start": "1878690",
    "end": "1883940"
  },
  {
    "text": "would highly recommend if you can go to some time find time to go through this session it has an end-to-end journey",
    "start": "1883940",
    "end": "1890750"
  },
  {
    "text": "from monolithic to micro services for for the gilt application if you see",
    "start": "1890750",
    "end": "1896170"
  },
  {
    "text": "browser load balance a storefront UI API gateway has the different layers this is a obviously first layer layer you could",
    "start": "1896170",
    "end": "1903170"
  },
  {
    "text": "you could have the lambda based implementation also this is like a common set of architecture so I'm gonna",
    "start": "1903170",
    "end": "1908720"
  },
  {
    "text": "break the rule this is the client you get the request in the client request",
    "start": "1908720",
    "end": "1914840"
  },
  {
    "text": "comes to the pop first we have last I know 76 popup locations for the cloud",
    "start": "1914840",
    "end": "1919850"
  },
  {
    "text": "front right that's where the first request come comes in you can gain advantage of the regional caching of",
    "start": "1919850",
    "end": "1925580"
  },
  {
    "text": "pop-up for some kind of files that are static in nature for output caching you",
    "start": "1925580",
    "end": "1930830"
  },
  {
    "text": "can get advantage of the API gateway output caching the call comes to the API gateway API gateway then routes the",
    "start": "1930830",
    "end": "1937160"
  },
  {
    "text": "request to the actual micro service there's also an element of API gateways",
    "start": "1937160",
    "end": "1942560"
  },
  {
    "text": "another layer you see one layer two layer and anytime you add a layer there is a latency but over scale point of",
    "start": "1942560",
    "end": "1948620"
  },
  {
    "text": "view you gain advantage so architecture is always trade-off right so if you see here threeways you go to lambda lambda",
    "start": "1948620",
    "end": "1955760"
  },
  {
    "text": "execution second you can go to ec2 container based approach you can have",
    "start": "1955760",
    "end": "1961160"
  },
  {
    "text": "your own third party or some other hosted version it need not be a AWS service as long as it has stdp endpoint",
    "start": "1961160",
    "end": "1968810"
  },
  {
    "text": "which it can hit if I get ready to work yes yes",
    "start": "1968810",
    "end": "1985060"
  },
  {
    "text": "so this endpoint is not available to these guys the client does not know",
    "start": "1986590",
    "end": "1993500"
  },
  {
    "text": "these endpoints these are dynamic in nature many times if you say ec2 container it will spawn things at",
    "start": "1993500",
    "end": "1999200"
  },
  {
    "text": "runtime and it will be create that dynamic port mechanism at runtime the",
    "start": "1999200",
    "end": "2004540"
  },
  {
    "text": "that plumbing is here the endpoint that is exposed to them it's wireless service",
    "start": "2004540",
    "end": "2009850"
  },
  {
    "text": "discovery",
    "start": "2009850",
    "end": "2012419"
  },
  {
    "text": "yes it all depends on if you have",
    "start": "2028910",
    "end": "2040380"
  },
  {
    "text": "internal DNS you can have any kind of like naming it's it's fqdn and that fqdn",
    "start": "2040380",
    "end": "2046770"
  },
  {
    "text": "and port now if you have a private DNS you can have the mapping I mean it's and there is a dynamic that",
    "start": "2046770",
    "end": "2053550"
  },
  {
    "text": "it responds it does it always have my account number as a prefix I am Not sure",
    "start": "2053550",
    "end": "2058648"
  },
  {
    "text": "but you could have a DNS base prefix you could have a count base prefix at the",
    "start": "2058649",
    "end": "2063720"
  },
  {
    "text": "end it is a hostname and a port that's the key hostname and a port al B's or",
    "start": "2063720",
    "end": "2069060"
  },
  {
    "text": "containers they will spawn things at runtime so there will be a dynamic URLs for for them but that plumbing is done",
    "start": "2069060",
    "end": "2076260"
  },
  {
    "text": "and gateways aware of that just like ELB is aware of the newer instances coming in which is yes yes yes resource numbers",
    "start": "2076260",
    "end": "2088830"
  },
  {
    "text": "also there yes",
    "start": "2088830",
    "end": "2093919"
  },
  {
    "start": "2091000",
    "end": "2091000"
  },
  {
    "text": "that's pretty much the complexity is more when you have ec2 container on the",
    "start": "2111920",
    "end": "2118260"
  },
  {
    "text": "same ec2 instance different services maybe multiple copies of it also available so alb does that magic of",
    "start": "2118260",
    "end": "2125520"
  },
  {
    "text": "dynamic mapping right okay so let's go through the 6-week",
    "start": "2125520",
    "end": "2130710"
  },
  {
    "text": "principles you got to communicate via public stdp",
    "start": "2130710",
    "end": "2136970"
  },
  {
    "text": "84 43 in olden days we used to find out the dev who knows which database it is",
    "start": "2136970",
    "end": "2143490"
  },
  {
    "text": "and we could get around and get access to it that is an anti-pattern once you get it because it is hard for a",
    "start": "2143490",
    "end": "2149790"
  },
  {
    "text": "database or any storage to know upstream and downstream dependencies it's it's very hard unless you remove that and",
    "start": "2149790",
    "end": "2155220"
  },
  {
    "text": "that's when you figure out okay there are so many things dependant on it so technically do not give a backdoor entry",
    "start": "2155220",
    "end": "2161280"
  },
  {
    "text": "to the storage or the or the shared database any kind of storage layer one",
    "start": "2161280",
    "end": "2167970"
  },
  {
    "text": "one another thing on the storage when you go in the cloud is there's the concept of this eventually consistent",
    "start": "2167970",
    "end": "2174390"
  },
  {
    "text": "and strongly consistent right now just like when we started a synchronous",
    "start": "2174390",
    "end": "2180360"
  },
  {
    "text": "programming and you're calling different a synchronous thread at some point you want to make sure that these have",
    "start": "2180360",
    "end": "2185580"
  },
  {
    "text": "finished before you proceed right that's the same idea here like if it is the",
    "start": "2185580",
    "end": "2192180"
  },
  {
    "text": "consistency it's going to take time you want to factor that in in your design",
    "start": "2192180",
    "end": "2198270"
  },
  {
    "text": "that if I go to this particular instance will I have the copied version or not so",
    "start": "2198270",
    "end": "2205920"
  },
  {
    "text": "you have to factor that in the strongly consistent it's available there",
    "start": "2205920",
    "end": "2211290"
  },
  {
    "text": "eventually consistent is where you have to factor that in micro-services this one is key if you see versions one zero",
    "start": "2211290",
    "end": "2220170"
  },
  {
    "text": "zero major minor and patch that's the semantic versioning in this case I",
    "start": "2220170",
    "end": "2225210"
  },
  {
    "text": "changed minor if you see it's pretty much like I have added rather overload for another function so still can use it",
    "start": "2225210",
    "end": "2232950"
  },
  {
    "text": "but it looks like I may move towards this with the documentation appropriate documentation the clients can actually",
    "start": "2232950",
    "end": "2239370"
  },
  {
    "text": "know hey this is going to be deprecated you please make sure and then eventually when you move to the major version you changed it so you",
    "start": "2239370",
    "end": "2247800"
  },
  {
    "text": "don't break that lines it probably is",
    "start": "2247800",
    "end": "2255120"
  },
  {
    "text": "the last version that'sthat's their API gateway gives you last two versions at the same time you can have multiple",
    "start": "2255120",
    "end": "2261840"
  },
  {
    "text": "versions of the service being hosted right so your clients can actually communicate wire in this case one point",
    "start": "2261840",
    "end": "2268410"
  },
  {
    "text": "1.0 and 2.0 point zero yes",
    "start": "2268410",
    "end": "2274310"
  },
  {
    "text": "okay so right tools for right job I mean this is more on the storage there you",
    "start": "2274310",
    "end": "2280440"
  },
  {
    "text": "will have different needs so you should like age-old I used to see in database blobs images everything being stored not",
    "start": "2280440",
    "end": "2287640"
  },
  {
    "text": "a place to store that right so that that idea is there the framework this is another advantage polyglot framework in",
    "start": "2287640",
    "end": "2294420"
  },
  {
    "text": "the old days if you chose Java every damn thing is Java if you chose darknet or C sharp everything is C sharp with",
    "start": "2294420",
    "end": "2301020"
  },
  {
    "text": "micro-services it's gone each service can choose their own platform so a",
    "start": "2301020",
    "end": "2306090"
  },
  {
    "text": "developer if you say hey you are responsible for operations he may say no I don't know and you will give him that",
    "start": "2306090",
    "end": "2311820"
  },
  {
    "text": "you have the right to choose which platform which framework which open source or he'll be super happy so you",
    "start": "2311820",
    "end": "2316980"
  },
  {
    "text": "give them something to happy with operations I don't know I have a different take on that secure your",
    "start": "2316980",
    "end": "2322650"
  },
  {
    "text": "service now this is this is important right we have the standard AWS oriented",
    "start": "2322650",
    "end": "2328200"
  },
  {
    "text": "defense-in-depth you have the network isolation this is key any API API",
    "start": "2328200",
    "end": "2336330"
  },
  {
    "text": "throttling is key and before working in cloud I really didn't have that much of",
    "start": "2336330",
    "end": "2341610"
  },
  {
    "text": "respect for throttling now I really really respect a throttling a lot I don't know I still went down",
    "start": "2341610",
    "end": "2349430"
  },
  {
    "text": "okay so let him get it up but throttling I'll give you example like I have seen",
    "start": "2352640",
    "end": "2359150"
  },
  {
    "text": "so",
    "start": "2387609",
    "end": "2390609"
  },
  {
    "text": "okay that's a very interesting question you can have the end clients calling the",
    "start": "2393040",
    "end": "2399619"
  },
  {
    "text": "API you can have a service a call service B call service C you could have",
    "start": "2399619",
    "end": "2405559"
  },
  {
    "text": "right so now whether they go Y up public Internet",
    "start": "2405559",
    "end": "2411530"
  },
  {
    "text": "route and then come back or whether they do just like a V PC endpoint where you",
    "start": "2411530",
    "end": "2417079"
  },
  {
    "text": "don't want to go outside for there's three access there are ways in which you can get that working so it's the DNS who",
    "start": "2417079",
    "end": "2423319"
  },
  {
    "text": "that you can do the resolution so that it does not have to go through the public internet and then come back",
    "start": "2423319",
    "end": "2428930"
  },
  {
    "text": "anything exposed outside that I can discover on like service discovery protocols that are available that's",
    "start": "2428930",
    "end": "2435799"
  },
  {
    "text": "public right anything that I don't want to expose obviously you will have the factors in that it is only exposed",
    "start": "2435799",
    "end": "2441920"
  },
  {
    "text": "within the V PC and you will do the necessary security group for that but the the concept of multiple services",
    "start": "2441920",
    "end": "2449089"
  },
  {
    "text": "talking to each other and not going outside will be a little bit of DNS trick that you'll have to do sorry",
    "start": "2449089",
    "end": "2457540"
  },
  {
    "text": "DNS DNS trick that you'd have to do like don't resolve the fqdn the outside there",
    "start": "2457540",
    "end": "2462920"
  },
  {
    "text": "is a routing that does internal based yeah resolution the route table based",
    "start": "2462920",
    "end": "2473299"
  },
  {
    "start": "2466000",
    "end": "2466000"
  },
  {
    "text": "there is the hoops that you can do that okay so threatening I wanted to say one live",
    "start": "2473299",
    "end": "2478579"
  },
  {
    "text": "example there is an issue that that happened I'm not going to go into details of what the issue is if you have",
    "start": "2478579",
    "end": "2484280"
  },
  {
    "text": "designed throttling properly it is such a good mechanism like if you see that",
    "start": "2484280",
    "end": "2490280"
  },
  {
    "text": "there are n number of consumers for a particular service which is hammered thoroughly if you do if you don't have",
    "start": "2490280",
    "end": "2497809"
  },
  {
    "text": "those knobs to throttle it is very hard to troubleshoot those problems if you",
    "start": "2497809",
    "end": "2503150"
  },
  {
    "text": "have the knobs throttle them bring down the number of requests that you can support throttling essentially means",
    "start": "2503150",
    "end": "2509200"
  },
  {
    "text": "transactions per second that you are supporting for that service so bring having throttling in the service will",
    "start": "2509200",
    "end": "2515510"
  },
  {
    "text": "give you ability to troubleshoot them in those kind of complex scenarios it's very important authorization and",
    "start": "2515510",
    "end": "2521630"
  },
  {
    "text": "authentication again it goes back to who the caller is right that's one definitely and again Oh",
    "start": "2521630",
    "end": "2529169"
  },
  {
    "text": "sam'l all that is supported by the custom authorizations of API gateway you",
    "start": "2529169",
    "end": "2534659"
  },
  {
    "text": "could have the standard access key base mechanism most of the time I see Federation in the enterprise world okay",
    "start": "2534659",
    "end": "2542579"
  },
  {
    "text": "so let's just do be good citizen this is one good example I need a service can I",
    "start": "2542579",
    "end": "2548099"
  },
  {
    "text": "call you yeah tell me which one and I'll let you know thank you use so this is",
    "start": "2548099",
    "end": "2554789"
  },
  {
    "text": "one of the good citizens in terms of knowing who your caller is maintaining the registry of the caller API so this",
    "start": "2554789",
    "end": "2562349"
  },
  {
    "text": "helps you in whitelisting DDoS kind of attacks and being a good citizen right this is another one before we let you",
    "start": "2562349",
    "end": "2568650"
  },
  {
    "text": "over call our micro service we need to understand your use case expectation this was a big problem in the olden days",
    "start": "2568650",
    "end": "2574589"
  },
  {
    "text": "like when you asked any customer when they were you having performance issues what's the expectation like watch the",
    "start": "2574589",
    "end": "2580499"
  },
  {
    "text": "throughput expectation how many calls you are expecting or we expect thousand users okay is it concurrent is it one at",
    "start": "2580499",
    "end": "2586619"
  },
  {
    "text": "a time is it 100x continent it's never flushed out is it for all the API is",
    "start": "2586619",
    "end": "2592199"
  },
  {
    "text": "which API never you'll get that answer that is what is driving because if you",
    "start": "2592199",
    "end": "2597419"
  },
  {
    "text": "have that information you will better architect design and think through upfront so getting those TPS numbers",
    "start": "2597419",
    "end": "2603390"
  },
  {
    "text": "beforehand is always a good idea okay be a good citizen there are a lot of SLA",
    "start": "2603390",
    "end": "2609059"
  },
  {
    "text": "related questions now there's one thing on the client like we have been talking",
    "start": "2609059",
    "end": "2614729"
  },
  {
    "text": "on the server side most of the time the clients can do two key things in cloud",
    "start": "2614729",
    "end": "2620369"
  },
  {
    "text": "world it is important to do retries and also exponential back-off s-- so you",
    "start": "2620369",
    "end": "2627359"
  },
  {
    "text": "know every now and then because we are in the CI CD devops world there are things being released every point six",
    "start": "2627359",
    "end": "2633659"
  },
  {
    "text": "three seconds I'm sure you have you must have seen something up here in the amazon.com and disappear right thinks",
    "start": "2633659",
    "end": "2639929"
  },
  {
    "text": "there can be some time that a service is for a millisecond not performing well your call at that at that time it came I",
    "start": "2639929",
    "end": "2647069"
  },
  {
    "text": "will give you example I am you are creating an instance profile right that moment I am service had a issue what",
    "start": "2647069",
    "end": "2652919"
  },
  {
    "text": "will happen you will get error and if you don't have retry everything goes away retry having",
    "start": "2652919",
    "end": "2658650"
  },
  {
    "text": "rise in your service cause is very very important exponential back-off s-- is essentially like you wait for some time",
    "start": "2658650",
    "end": "2664920"
  },
  {
    "text": "you retry still didn't work you wait for some time now multiply that because I'm",
    "start": "2664920",
    "end": "2671430"
  },
  {
    "text": "in two minutes nothing happened four minutes so you pretty much have that some logic and not",
    "start": "2671430",
    "end": "2677130"
  },
  {
    "text": "just hammering it again retry retry retry know you saw it three times it did work wait for some time and then you do",
    "start": "2677130",
    "end": "2682740"
  },
  {
    "text": "it that's from the client-side for the cloud world it is very important to have there's a code from our CTO warner",
    "start": "2682740",
    "end": "2689970"
  },
  {
    "text": "Vogel's everything fails all the time self-healing and having those self-healing solutions implemented in",
    "start": "2689970",
    "end": "2696990"
  },
  {
    "text": "your design is always critical in cloud world this is one service which is going",
    "start": "2696990",
    "end": "2702990"
  },
  {
    "text": "to be very very useful for correlations when I say correlations from my UI the",
    "start": "2702990",
    "end": "2708150"
  },
  {
    "text": "call comes to web server called score to another service call goes to a database may be call goes to another reporting",
    "start": "2708150",
    "end": "2713670"
  },
  {
    "text": "something like that how do you know how do you track like hey requesters I see your request came to the web server it",
    "start": "2713670",
    "end": "2719579"
  },
  {
    "text": "when do this another service vendor Mouse or within database x-rays your answer it gives you a correlation ID you",
    "start": "2719579",
    "end": "2725999"
  },
  {
    "text": "log correlation ID across you'd be able to actually just put the correlation ID and see that request across the whole",
    "start": "2725999",
    "end": "2731670"
  },
  {
    "text": "trip that's the idea behind AWS x-ray right it's it's a pricing service which",
    "start": "2731670",
    "end": "2737460"
  },
  {
    "text": "you can embed inside your application at each layer UI middle tier wherever and it will give you a correlation it's very",
    "start": "2737460",
    "end": "2743670"
  },
  {
    "text": "very super useful for correlation troubleshooting like if somebody says slow what is slow one call is slow which",
    "start": "2743670",
    "end": "2750809"
  },
  {
    "text": "user is slow okay which request was that it's easier if you don't know it's hard to actually troubleshoot that okay",
    "start": "2750809",
    "end": "2757739"
  },
  {
    "start": "2757000",
    "end": "2757000"
  },
  {
    "text": "automate everything it's easier said than done but with run instances API and",
    "start": "2757739",
    "end": "2763259"
  },
  {
    "text": "with everything being able to do at runtime it sometimes I feel like DevOps",
    "start": "2763259",
    "end": "2769019"
  },
  {
    "text": "culture run instances the API micro services they were all made to like somehow coincide and come together this",
    "start": "2769019",
    "end": "2776489"
  },
  {
    "text": "is this is the time and everything can be automated obviously right doing your security design doing your",
    "start": "2776489",
    "end": "2783900"
  },
  {
    "text": "infrastructure provisioning and to an automation is always a good idea if somebody creates a V PC I always ask",
    "start": "2783900",
    "end": "2790319"
  },
  {
    "text": "them the question can you recreate it like I just try and pregrated you will find 10 steps which is manual there so having that",
    "start": "2790319",
    "end": "2797460"
  },
  {
    "text": "ability like what if it goes down I can recreate my whole environment within 5",
    "start": "2797460",
    "end": "2802710"
  },
  {
    "text": "minutes or 10 minutes or 2 hours that confidence will give you such a peace of mind it's easier said than done",
    "start": "2802710",
    "end": "2808560"
  },
  {
    "text": "that that's also I want to make that point okay all these somebodies that we have rely on public use the right tool",
    "start": "2808560",
    "end": "2815880"
  },
  {
    "text": "for the job secure your services be a good citizen more than just technology transformation",
    "start": "2815880",
    "end": "2821130"
  },
  {
    "text": "micro services cannot happen if you don't change your DevOps culture it's it's gonna make it more worse in that",
    "start": "2821130",
    "end": "2826620"
  },
  {
    "text": "case I would rather let you live in the monolithic world if it is small you don't have so many innovations you probably live there automate everything",
    "start": "2826620",
    "end": "2833100"
  },
  {
    "text": "DevOps is the culture ok that's a journey you have this ok today is Diwali",
    "start": "2833100",
    "end": "2840210"
  },
  {
    "text": "so I'm gonna wish whoever celebrates happy Diwali Diwali has a coat like you",
    "start": "2840210",
    "end": "2846060"
  },
  {
    "text": "are moving from darkness to light you are moving from ignorance to knowledge I",
    "start": "2846060",
    "end": "2851160"
  },
  {
    "text": "will add moving from one analytic to microservices thank you",
    "start": "2851160",
    "end": "2856369"
  },
  {
    "text": "Thank You Amit that's great are there any questions in the back so the",
    "start": "2858600",
    "end": "2874380"
  },
  {
    "text": "question is it seems like the architecture has a lot of overhead so how's the performance I actually might",
    "start": "2874380",
    "end": "2882240"
  },
  {
    "text": "take a stab at answering that when you're talking about just pure performance you know the contrast to",
    "start": "2882240",
    "end": "2889590"
  },
  {
    "text": "this architecture would be a monolithic style architecture and I think you know",
    "start": "2889590",
    "end": "2894900"
  },
  {
    "text": "the the speaker downstairs this morning from betterment kind of pointed out that they started with a monolithic",
    "start": "2894900",
    "end": "2901800"
  },
  {
    "text": "application and they were happy that that was their start you you have sort",
    "start": "2901800",
    "end": "2906990"
  },
  {
    "text": "of a an agility speed that you start to lose the bigger your monolith gets the",
    "start": "2906990",
    "end": "2914640"
  },
  {
    "text": "more people you add on the more people more developers you add on to a project the more sort of constrained the",
    "start": "2914640",
    "end": "2922440"
  },
  {
    "text": "knowledge becomes the harder it is for you to make a change in that monolith so you start rapid and you devolve that's",
    "start": "2922440",
    "end": "2930390"
  },
  {
    "text": "kind of the the pattern that happens with a monolith micro-services on the",
    "start": "2930390",
    "end": "2936000"
  },
  {
    "text": "other hand trying of that's the thing that they're trying to avoid so that you",
    "start": "2936000",
    "end": "2941070"
  },
  {
    "text": "can start rapid within a service and hopefully not devolve because the",
    "start": "2941070",
    "end": "2947490"
  },
  {
    "text": "service itself is so simple so you as you make changes you aren't necessarily",
    "start": "2947490",
    "end": "2953360"
  },
  {
    "text": "worried about breaking something else that you hadn't thought of elsewhere in the the platform so as far as just pure",
    "start": "2953360",
    "end": "2961230"
  },
  {
    "text": "performance goes there are choices you can make about like what you're choosing to run your micro service micro services",
    "start": "2961230",
    "end": "2969360"
  },
  {
    "text": "with you know you can choose go it's very fast very responsive",
    "start": "2969360",
    "end": "2975570"
  },
  {
    "text": "my last startup that I was at we did a project where we converted from a ruby",
    "start": "2975570",
    "end": "2981840"
  },
  {
    "text": "on rails app monolith to micro services running in containers and we were seeing",
    "start": "2981840",
    "end": "2989160"
  },
  {
    "text": "as we would take each function of that rails app and break it off into",
    "start": "2989160",
    "end": "2994750"
  },
  {
    "text": "a set of micro-services we chose go as our as our language and we were seeing",
    "start": "2994750",
    "end": "2999970"
  },
  {
    "text": "calls that would take hundreds of milliseconds and rails take you know two milliseconds and go so by being able to",
    "start": "2999970",
    "end": "3008520"
  },
  {
    "text": "make choices like that you know one services team might like go another one might like Java and you know being able",
    "start": "3008520",
    "end": "3015599"
  },
  {
    "text": "to make those kinds of choices about one specific part of the application you're",
    "start": "3015599",
    "end": "3021030"
  },
  {
    "text": "able to pick the best tool for the job so ultimately you might pick up performance even though it appears at",
    "start": "3021030",
    "end": "3027420"
  },
  {
    "text": "first that there might be a cost to to this style of architecture yes",
    "start": "3027420",
    "end": "3035900"
  },
  {
    "text": "I don't think I've I'm answering this",
    "start": "3051760",
    "end": "3073720"
  },
  {
    "text": "question - sorry I don't think I've ever felt locked into DynamoDB I think if you",
    "start": "3073720",
    "end": "3079750"
  },
  {
    "text": "talk to people at Amazon you're going to hear some fantastic stories about",
    "start": "3079750",
    "end": "3084760"
  },
  {
    "text": "DynamoDB because we're very proud of how performing it is but I think there are",
    "start": "3084760",
    "end": "3090130"
  },
  {
    "text": "plenty of architectures out there that you know use other no sequel solutions",
    "start": "3090130",
    "end": "3096490"
  },
  {
    "text": "they're a you know a lot of shops that use I personally have used I've",
    "start": "3096490",
    "end": "3101890"
  },
  {
    "text": "personally used Cassandra as a no sequel datastore this still has a schema so",
    "start": "3101890",
    "end": "3108160"
  },
  {
    "text": "yeah I think there's you know I think there are plenty of examples out there and nothing locks you into any one",
    "start": "3108160",
    "end": "3115570"
  },
  {
    "text": "particular direction or another I mean I",
    "start": "3115570",
    "end": "3120640"
  },
  {
    "text": "I think if you if you read tutorials from Netflix for example you'll probably see a lot more around Cassandra",
    "start": "3120640",
    "end": "3129240"
  },
  {
    "text": "yeah one of the points that Amit made earlier was that the data store should be with the micro-service so you know as",
    "start": "3141440",
    "end": "3149370"
  },
  {
    "text": "you're breaking down a monolith into its various components it's not gonna be one function of the monolith is one",
    "start": "3149370",
    "end": "3155120"
  },
  {
    "text": "micro-service it's going to be one function of the monolith is one set of micro services and those services",
    "start": "3155120",
    "end": "3161040"
  },
  {
    "text": "together might talk to a single data store and that itself could be postgrads",
    "start": "3161040",
    "end": "3167370"
  },
  {
    "text": "for one one set of services and for another set of services and dinamo",
    "start": "3167370",
    "end": "3173130"
  },
  {
    "text": "for a third set of services there's no there's no restrictions around that it's just that's kind of how you group things",
    "start": "3173130",
    "end": "3179490"
  },
  {
    "text": "together is a set of services that are working together to provide one core bit",
    "start": "3179490",
    "end": "3186360"
  },
  {
    "text": "of functionality of your application and they tend to share a data store today",
    "start": "3186360",
    "end": "3198290"
  },
  {
    "text": "today",
    "start": "3198290",
    "end": "3201290"
  },
  {
    "text": "can I answer it",
    "start": "3212260",
    "end": "3215769"
  },
  {
    "text": "yeah so batch level processing I think is probably what I would categorize that",
    "start": "3228730",
    "end": "3235180"
  },
  {
    "text": "into and we do have AWS batch which runs on ECS by the way ECS is our container",
    "start": "3235180",
    "end": "3241390"
  },
  {
    "text": "Orchestrator and if you wanted to orchestrate it yourself through ECS your you could do that as well we have one",
    "start": "3241390",
    "end": "3269170"
  },
  {
    "text": "more question here",
    "start": "3269170",
    "end": "3272099"
  },
  {
    "text": "anytime a question starts with do I have to my answer is no do you want so the",
    "start": "3319820",
    "end": "3329130"
  },
  {
    "text": "question is basically do I have to employ the techniques and services that",
    "start": "3329130",
    "end": "3334530"
  },
  {
    "text": "we've talked about here to do things like AI on Amazon or if I want to keep",
    "start": "3334530",
    "end": "3340950"
  },
  {
    "text": "it simple what are my options is that a good way to characterize",
    "start": "3340950",
    "end": "3346339"
  },
  {
    "text": "you so yes you are free to architect and",
    "start": "3359000",
    "end": "3364049"
  },
  {
    "text": "build as custom as you like so ec2 is a",
    "start": "3364049",
    "end": "3369630"
  },
  {
    "text": "great place for doing that kind of custom level stuff I think a pattern",
    "start": "3369630",
    "end": "3375569"
  },
  {
    "text": "that we see a lot is there are there are companies out there who are ahead of us",
    "start": "3375569",
    "end": "3382380"
  },
  {
    "text": "as far as you know developing technology I like to point at Netflix for this kind",
    "start": "3382380",
    "end": "3389099"
  },
  {
    "text": "of thing because Netflix in a way led us to a lot of the technologies that we now",
    "start": "3389099",
    "end": "3396030"
  },
  {
    "text": "offer today they had to build it before we had it available and today if you",
    "start": "3396030",
    "end": "3402030"
  },
  {
    "text": "were going to build something like their architecture we have lots of services that you would that you'd be able to",
    "start": "3402030",
    "end": "3408750"
  },
  {
    "text": "take advantage of but if they don't work the way you really want them to work then you have to figure out what's the",
    "start": "3408750",
    "end": "3415349"
  },
  {
    "text": "best answer for your for your company and as that go and customize it and run",
    "start": "3415349",
    "end": "3421349"
  },
  {
    "text": "it all yourself or is that adapt the way you expect it to work and give us",
    "start": "3421349",
    "end": "3427109"
  },
  {
    "text": "feedback so that we can hopefully change the way our service operates as well we're always listening for feedback and",
    "start": "3427109",
    "end": "3433680"
  },
  {
    "text": "we always encourage that from the customer and if there's a feature that you feel like would get a get us from an",
    "start": "3433680",
    "end": "3440280"
  },
  {
    "text": "80% solution to a 90% solution or a hundred percent solution we want to know about that kind of stuff and we and we",
    "start": "3440280",
    "end": "3446490"
  },
  {
    "text": "will take that and work on it so we're always iterating on our services trying to make them better and if that's a good",
    "start": "3446490",
    "end": "3453180"
  },
  {
    "text": "enough answer for you if you can live with the 80% today hoping that the ninety and a hundred come in a while",
    "start": "3453180",
    "end": "3459240"
  },
  {
    "text": "then that's what I would recommend to help keep it simple but if you know on",
    "start": "3459240",
    "end": "3465599"
  },
  {
    "text": "the other hand you need that extra today then yeah we have you know a custom path",
    "start": "3465599",
    "end": "3472589"
  },
  {
    "text": "that you can do you know the sky's the limit on what you're able to do all",
    "start": "3472589",
    "end": "3479040"
  },
  {
    "text": "right cool",
    "start": "3479040",
    "end": "3481520"
  }
]