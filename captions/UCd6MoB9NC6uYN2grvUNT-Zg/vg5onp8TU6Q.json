[
  {
    "start": "0",
    "end": "32000"
  },
  {
    "text": "well hello welcome to scaling up to your first 10 million users I actually have a",
    "start": "4160",
    "end": "9719"
  },
  {
    "text": "big treat for you today we're going to raise the bar for this session and we're not going to scale to",
    "start": "9719",
    "end": "15750"
  },
  {
    "text": "10 million users but we're actually going to scale all the way up to 11 million users pretty cool huh yeah thank",
    "start": "15750",
    "end": "22769"
  },
  {
    "text": "you so a little bit about myself real quick I don't spend a whole lot of time",
    "start": "22769",
    "end": "28980"
  },
  {
    "text": "on this my name is Joel Williams I'm a Solutions Architect for Amazon Web Services been doing this for a little over three years now",
    "start": "28980",
    "end": "35430"
  },
  {
    "start": "32000",
    "end": "32000"
  },
  {
    "text": "before coming over to AWS I worked at a healthcare claims review company",
    "start": "35430",
    "end": "41070"
  },
  {
    "text": "managing the infrastructure from the the network level all the way down to the printers I mean if it plugged into a wall basically I was responsible for it",
    "start": "41070",
    "end": "48019"
  },
  {
    "text": "you guys hopefully you're here you're obviously looking to scale your web applications on AWS but I'm imagining",
    "start": "48019",
    "end": "54629"
  },
  {
    "text": "you're probably at different journeys of your of your you know your Amazon Web Services you know journey I guess and to",
    "start": "54629",
    "end": "62519"
  },
  {
    "text": "say that means that some of you are running production workloads on AWS some of you are probably running some tests",
    "start": "62519",
    "end": "67710"
  },
  {
    "text": "and dev and and I understand that so I need to do a little bit of level setting at least to get started I'm going to",
    "start": "67710",
    "end": "72900"
  },
  {
    "text": "brush through this because I'm lucky for me Andy included a lot of this during his keynote so we'll kind of go through",
    "start": "72900",
    "end": "79770"
  },
  {
    "text": "it quickly you're asking yourself though how do you scale right that's the fundamental question of this talk so I'm",
    "start": "79770",
    "end": "86940"
  },
  {
    "text": "going to answer that for you um if I'm looking up to to figure out how to do something the first thing I'm going to",
    "start": "86940",
    "end": "92730"
  },
  {
    "text": "do is go pull up my favorite search engine pull my favorite you know web browser search engine I'm going to type",
    "start": "92730",
    "end": "97860"
  },
  {
    "text": "in scaling on AWS right that is a lot of stuff to read and I'm going to suggest",
    "start": "97860",
    "end": "105390"
  },
  {
    "text": "to you that this is not where we want to start auto scaling is is a tool and it's",
    "start": "105390",
    "end": "111450"
  },
  {
    "text": "a destination we're going to get there eventually but we don't want to start there we have to do some things to our",
    "start": "111450",
    "end": "116580"
  },
  {
    "text": "infrastructure before we're in a state that's going to really make sense to leverage all the capabilities of auto",
    "start": "116580",
    "end": "122160"
  },
  {
    "text": "scaling it's not that that single thing even when we get there that's just going",
    "start": "122160",
    "end": "127350"
  },
  {
    "text": "to to fix everything we need to do some things first so those basics that I promise you we",
    "start": "127350",
    "end": "133709"
  },
  {
    "text": "talked about first of all you need to know that we have eleven around the world I'm also going to throw",
    "start": "133709",
    "end": "139770"
  },
  {
    "text": "in India there because we did pre announce that one last year at this time and within those regions we have the",
    "start": "139770",
    "end": "146670"
  },
  {
    "start": "145000",
    "end": "145000"
  },
  {
    "text": "concept of availability zones and this is going to be an important aspect for you not only as you scale your",
    "start": "146670",
    "end": "152450"
  },
  {
    "text": "architecture but it's going to give you some abilities that you traditionally don't have in a on-premise environment to actually have some high availability",
    "start": "152450",
    "end": "160610"
  },
  {
    "text": "all of our regions are built out with at least two of these availability zones and we have many services that leverage",
    "start": "160610",
    "end": "166620"
  },
  {
    "text": "the multiple availability zones architecture but we also allow you then to use those multiple availability zones",
    "start": "166620",
    "end": "171959"
  },
  {
    "text": "to architect your applications for that high availability as you scale the last",
    "start": "171959",
    "end": "178170"
  },
  {
    "start": "177000",
    "end": "177000"
  },
  {
    "text": "piece of the global infrastructure I need to point out is our edge locations we currently have 53 edge locations",
    "start": "178170",
    "end": "183660"
  },
  {
    "text": "around the globe and just like our regions and availability zones of our edge locations is an area of our",
    "start": "183660",
    "end": "189720"
  },
  {
    "text": "infrastructure that we're constantly expanding so it's 53 today it might be 54 tomorrow and that's important because",
    "start": "189720",
    "end": "195540"
  },
  {
    "text": "these edge locations are used by two of our services our content distribution network cloud front as well as our our",
    "start": "195540",
    "end": "202340"
  },
  {
    "text": "route 53 our managed DNS service and that gives your users the ability to get",
    "start": "202340",
    "end": "208410"
  },
  {
    "text": "their content at a very low latency globally Andy showed a a slide that",
    "start": "208410",
    "end": "217200"
  },
  {
    "text": "looked a lot like this in his keynote so I don't want to spend a whole lot of time on it other than to say that we're not talking about all these services",
    "start": "217200",
    "end": "222840"
  },
  {
    "text": "today you can use these services and these patterns to scale but we can only go into a few of them obviously in 60",
    "start": "222840",
    "end": "229350"
  },
  {
    "text": "minutes so the area that I want to focus in most importantly is that one in the",
    "start": "229350",
    "end": "234959"
  },
  {
    "text": "lower left corner there to me that's the most important thing right anybody agree",
    "start": "234959",
    "end": "241049"
  },
  {
    "text": "that this is the most important part of our service okay I needed a couple",
    "start": "241049",
    "end": "246120"
  },
  {
    "text": "laughs thank you very much no actually we're going to talk about services that are fallen of these little",
    "start": "246120",
    "end": "251700"
  },
  {
    "text": "buckets here I've talked about the region's the availability zones and the the global infrastructure but obviously",
    "start": "251700",
    "end": "258150"
  },
  {
    "text": "we've got a bunch of fundamental foundational services there at the bottom that are going to be very important as we scale as well as a lot",
    "start": "258150",
    "end": "264660"
  },
  {
    "text": "of those application services there on the left later on the talk we're going to talk about decoupling and those services are",
    "start": "264660",
    "end": "270210"
  },
  {
    "text": "going to come into handy there so this multi availability zone architecture that we",
    "start": "270210",
    "end": "276590"
  },
  {
    "start": "273000",
    "end": "273000"
  },
  {
    "text": "have gives us the ability to build out a number of services that you get to leverage that that are inherently fault",
    "start": "276590",
    "end": "284060"
  },
  {
    "text": "tolerant because they leverage the multiple availability zones these availability zones are our physical",
    "start": "284060",
    "end": "289610"
  },
  {
    "text": "locations that exist within a region think of them as data centers but sometimes they actually comprised of multiple data centers but they're",
    "start": "289610",
    "end": "296060"
  },
  {
    "text": "separate enough that they've got separate powers separate internet pipes they the only connection they have is a",
    "start": "296060",
    "end": "302780"
  },
  {
    "text": "low latency connection between each other so that you're able to architect your applications as if they exist in",
    "start": "302780",
    "end": "308270"
  },
  {
    "text": "the same physical location but yet they're actually separated by like five or fifteen miles from each other so that",
    "start": "308270",
    "end": "314960"
  },
  {
    "text": "now they can withstand the availability issues of one area very important so the",
    "start": "314960",
    "end": "320900"
  },
  {
    "text": "services that I've listed on the right of the screen there those are services that exist within an availability zone",
    "start": "320900",
    "end": "326060"
  },
  {
    "text": "and we're going to work with those today but I'm going to show you how you can leverage those services to create a",
    "start": "326060",
    "end": "332150"
  },
  {
    "text": "highly available architecture even though those services themselves exist only in a single availability zone so we",
    "start": "332150",
    "end": "340460"
  },
  {
    "text": "want to get to 10 million or 11 million users that I promise you we're going to start from day one and usually day one",
    "start": "340460",
    "end": "346520"
  },
  {
    "text": "is one user right and that's you right you're building your infrastructure you",
    "start": "346520",
    "end": "351949"
  },
  {
    "text": "you need basic components to start your you know to get a web application up and you're the only user that's going to use",
    "start": "351949",
    "end": "357650"
  },
  {
    "text": "it so at a very minimum this is what your architecture is probably going to look like right you're going to have a",
    "start": "357650",
    "end": "363229"
  },
  {
    "text": "single instance that's running your entire web stack you attach an elastic IP address to it your your you know you",
    "start": "363229",
    "end": "370669"
  },
  {
    "text": "put an entry in route 53 our managed DNS service so that your you have a way to you know not type in an IP address to",
    "start": "370669",
    "end": "377750"
  },
  {
    "text": "actually get to your infrastructure and use a fully qualified domain name and and this works right this is a",
    "start": "377750",
    "end": "383539"
  },
  {
    "text": "functional fully functional web application that will service your needs at least as you with you as a user",
    "start": "383539",
    "end": "390050"
  },
  {
    "start": "389000",
    "end": "389000"
  },
  {
    "text": "however at some point we're going to need a bigger box right we might have started with a t2 micro but we need more",
    "start": "390050",
    "end": "397090"
  },
  {
    "text": "you know more compute power and that's the simplest approach to scaling right just choosing a different instance type",
    "start": "397090",
    "end": "403550"
  },
  {
    "text": "and we make it really easy for you to do that right you just stop the instance choose a new instance type and Wham you're running with new compute",
    "start": "403550",
    "end": "409940"
  },
  {
    "text": "power and we can provide you with a whole lot of stuff I can give you a system with 244 gigs of RAM 2 terabytes",
    "start": "409940",
    "end": "416930"
  },
  {
    "text": "coming soon or I can give you one with you know with with 40 cores of CPU I mean it's we can",
    "start": "416930",
    "end": "423020"
  },
  {
    "text": "give you a lot of stuff but we're going to hit an end point at some point we can only get so big right at some point we",
    "start": "423020",
    "end": "428990"
  },
  {
    "text": "have to do something else and you know this architecture as we scale what I'm",
    "start": "428990",
    "end": "435470"
  },
  {
    "text": "going to call vertically this can get us you know pretty far we can do a lot with this with this vertical scaling it does",
    "start": "435470",
    "end": "442490"
  },
  {
    "text": "have some inherent problems as you've probably noticed there's no no failover no redundancy there's we've got all of",
    "start": "442490",
    "end": "448520"
  },
  {
    "text": "our eggs in that one basket that single instance has our entire web stack right the database the application logic the",
    "start": "448520",
    "end": "455150"
  },
  {
    "text": "web server it's all confined in that one instance that obviously has some problems that we need to address and we",
    "start": "455150",
    "end": "460700"
  },
  {
    "text": "will so we want to the goal here is to get to more than one user right it's great that you can log into your you",
    "start": "460700",
    "end": "467330"
  },
  {
    "text": "know your you can hit your web app and everything works fine but at some point we're going to need to get somewhere more than one maybe it's the ten users I",
    "start": "467330",
    "end": "473300"
  },
  {
    "text": "just popped in here maybe it's a little bit more and I want to suggest that this might be the time that you start to",
    "start": "473300",
    "end": "479450"
  },
  {
    "text": "think about taking your database and moving it off of your web server don't",
    "start": "479450",
    "end": "485660"
  },
  {
    "text": "put all your eggs in one basket this is going to give us a wonderful ability now to scale the tiers of my application",
    "start": "485660",
    "end": "492500"
  },
  {
    "text": "independently from each other right I can skate they have different needs my website has different needs in my data so why not break them apart and scale",
    "start": "492500",
    "end": "499640"
  },
  {
    "text": "them independently from each other and I'm also going to suggest that this is the right time to start thinking about using a managed database service most",
    "start": "499640",
    "end": "507980"
  },
  {
    "text": "people that are architecting web applications on AWS they're not database administrators and they don't want to",
    "start": "507980",
    "end": "514280"
  },
  {
    "text": "deal with those mundane tasks of managing a database whether it's the backup or the high availability and we",
    "start": "514280",
    "end": "519890"
  },
  {
    "text": "have tools that you can use to help in that regard so I'm going to and I'll get to those tools in a minute but this is",
    "start": "519890",
    "end": "525800"
  },
  {
    "text": "the time where you really want to start thinking about that these tools so the",
    "start": "525800",
    "end": "531410"
  },
  {
    "start": "528000",
    "end": "528000"
  },
  {
    "text": "left side there yes you can put your database whatever database you really want to put on your ec2 instance",
    "start": "531410",
    "end": "538400"
  },
  {
    "text": "and manage that yourself of course now you're not only managing the database but you're managing the underlying OS and everything that goes with that if",
    "start": "538400",
    "end": "544490"
  },
  {
    "text": "you want to fully managed database we've got a number of options for you right we've got the Amazon RDS and I I must",
    "start": "544490",
    "end": "553820"
  },
  {
    "text": "point out that we've got two newer services in Amazon RDS the Morea DB which we just announced yesterday right",
    "start": "553820",
    "end": "559820"
  },
  {
    "text": "and and then aurora i've got some more data on aurora on the slide that follows",
    "start": "559820",
    "end": "565250"
  },
  {
    "text": "this one and that's just your that's a relational database service so in this particular case you don't have to worry",
    "start": "565250",
    "end": "571910"
  },
  {
    "text": "about them the backups the patching all those mundane operating system tasks",
    "start": "571910",
    "end": "576920"
  },
  {
    "text": "that that are that are that you needed to worry about when you are managing a database on your own as well as the",
    "start": "576920",
    "end": "583610"
  },
  {
    "text": "ability to create multi availability zone architectures that's huge you can",
    "start": "583610",
    "end": "589760"
  },
  {
    "text": "literally have a a a highly available database with a single click and and you",
    "start": "589760",
    "end": "594950"
  },
  {
    "text": "don't have to manage the replication huge benefit Amazon DynamoDB that's our no sequel a managed database again you",
    "start": "594950",
    "end": "603200"
  },
  {
    "text": "can run a no sequel database on ec2 and manage all that yourself or you can leverage Amazon DynamoDB",
    "start": "603200",
    "end": "608420"
  },
  {
    "text": "and then of course Amazon redshift which as Andy mentioned in the keynote was our",
    "start": "608420",
    "end": "613610"
  },
  {
    "text": "fastest growing service in the history of Amazon Web Services and it's our petabyte scale data warehousing platform",
    "start": "613610",
    "end": "620530"
  },
  {
    "text": "just a little bit more about Aurora because it's it's very popular and it's",
    "start": "620530",
    "end": "625970"
  },
  {
    "start": "623000",
    "end": "623000"
  },
  {
    "text": "becoming a fast growing service for us um you know being able to dynamically",
    "start": "625970",
    "end": "631370"
  },
  {
    "text": "scale up to 64 terabytes so I no longer have to provision the storage for my",
    "start": "631370",
    "end": "637310"
  },
  {
    "text": "data that's huge right because typically if I provision storage I'm now obviously",
    "start": "637310",
    "end": "642560"
  },
  {
    "text": "paying for that provision storage and I might not be using all that storage so with Amazon Aurora we give you the",
    "start": "642560",
    "end": "647840"
  },
  {
    "text": "ability to dynamically scale and up to 64 terabytes which is is awesome totally",
    "start": "647840",
    "end": "653210"
  },
  {
    "text": "awesome and then the other stuff you know you can read that on your own but I do want to point out the the six-way",
    "start": "653210",
    "end": "658280"
  },
  {
    "text": "replication so taking advantage of the multi availability zone architecture and making sure that you have multiple",
    "start": "658280",
    "end": "664070"
  },
  {
    "text": "copies of the data all over the place so you can withstand failure and that's going to be also extremely important as",
    "start": "664070",
    "end": "670880"
  },
  {
    "text": "you scale out your application so you're you have",
    "start": "670880",
    "end": "676290"
  },
  {
    "text": "to make a decision you know am I going to use a no sequel database or am I going to use a traditional non relational database and a number of you",
    "start": "676290",
    "end": "683339"
  },
  {
    "text": "aren't going to like this in this room but I'm going to suggest that you start with a traditional relational database",
    "start": "683339",
    "end": "688949"
  },
  {
    "text": "and and the reason here is that it's it's well-worn technology there's a",
    "start": "688949",
    "end": "694470"
  },
  {
    "text": "boatload of information on how to scale these databases on how to interact with these databases lots of support groups",
    "start": "694470",
    "end": "701819"
  },
  {
    "text": "it's it's you're not going to break this database in your first 10 million users most likely um I've got a little star",
    "start": "701819",
    "end": "708959"
  },
  {
    "text": "there right I've got that little asterisks which basically says you know you might be doing something funky with your data that's going to require you to",
    "start": "708959",
    "end": "715649"
  },
  {
    "text": "use a no sequel database but those are edge cases so for the majority of you I'm going to say start with your",
    "start": "715649",
    "end": "721920"
  },
  {
    "text": "traditional relational data store okay so you're one of those people in the",
    "start": "721920",
    "end": "727829"
  },
  {
    "text": "room that has a massive amount of data and you're like oh yeah I'm not on the edge case I'm the one guy in the room",
    "start": "727829",
    "end": "733920"
  },
  {
    "text": "that probably should start with a with a no sequel database okay so if if this is",
    "start": "733920",
    "end": "740189"
  },
  {
    "text": "you you know you've got that the massive amount of data or you've got a super intensive data workload then okay I'm",
    "start": "740189",
    "end": "746880"
  },
  {
    "text": "not going to argue with you um maybe the right place to start why else might you",
    "start": "746880",
    "end": "752399"
  },
  {
    "start": "751000",
    "end": "751000"
  },
  {
    "text": "need to start with a no sequel database again you know I you have the massive",
    "start": "752399",
    "end": "757500"
  },
  {
    "text": "amount of data you need the the really high throughput um you need to be able to really tweak the the iOS that you're",
    "start": "757500",
    "end": "763889"
  },
  {
    "text": "getting both on the reads and the rights maybe you don't have any relational data right you're not doing any complex joins",
    "start": "763889",
    "end": "769980"
  },
  {
    "text": "and there's just really no reason for a relational database that's a possibility as well okay so we're we want to scale",
    "start": "769980",
    "end": "780029"
  },
  {
    "text": "obviously that's the title this session how do we get you know get more people let's put those hundred people there quickly beautiful so I've decided that",
    "start": "780029",
    "end": "788430"
  },
  {
    "text": "I'm going to you know take my my my database and I'm going to put it in a in a in the Amazon RDS platform because I",
    "start": "788430",
    "end": "796199"
  },
  {
    "text": "don't want to manage those mundane tasks and so I've chosen an RDS database and for the purposes of this presentation",
    "start": "796199",
    "end": "801480"
  },
  {
    "text": "we're going to call it a MySQL database",
    "start": "801480",
    "end": "806029"
  },
  {
    "text": "that thousand users awesome we're moving right along so at the beginning of the",
    "start": "809329",
    "end": "817019"
  },
  {
    "text": "beginning when we talked about vertical scaling and we had all of our eggs in one basket I mentioned that we have some problems that we need to address and one",
    "start": "817019",
    "end": "823949"
  },
  {
    "text": "of those problems is going to be you know the the availability of that application right if that one single web",
    "start": "823949",
    "end": "829110"
  },
  {
    "text": "server goes down we've got a problem so I've added a few more things to this architecture to help this out the first",
    "start": "829110",
    "end": "834149"
  },
  {
    "text": "thing I've added is that the the other web instance right and I put it in another availability zone that's a",
    "start": "834149",
    "end": "840000"
  },
  {
    "text": "really important concept I didn't put in the same availability zone in another one and that's okay because the latency between those availability zones is in",
    "start": "840000",
    "end": "847050"
  },
  {
    "text": "the low single-digit milliseconds it's almost like they're in the racks right next to each other that's awesome I've",
    "start": "847050",
    "end": "853050"
  },
  {
    "text": "also added the slave database for my RDS implementation so I now have a failover",
    "start": "853050",
    "end": "859769"
  },
  {
    "text": "database for my my sequel relational database so that it forced some problem with the master my application can",
    "start": "859769",
    "end": "866459"
  },
  {
    "text": "automatically switch over to the slave and by the way there's no application changes that you need to make because it's the same endpoint it's the same",
    "start": "866459",
    "end": "873540"
  },
  {
    "text": "connection string so your application doesn't have to be aware of that slave finally you'll notice I threw in the e",
    "start": "873540",
    "end": "880439"
  },
  {
    "text": "lb balancer right the elastic load balancer and that's another important part of this puzzle because my users",
    "start": "880439",
    "end": "886079"
  },
  {
    "text": "want to be evenly distributed between those two instances in those two different availability zones and the elastic load balancer is going to give",
    "start": "886079",
    "end": "892319"
  },
  {
    "text": "me that ability a little bit more about that the elastic load balancer is a highly available managed load balancer",
    "start": "892319",
    "end": "898800"
  },
  {
    "start": "893000",
    "end": "893000"
  },
  {
    "text": "so although you notice the previous app in the previous slide it looks like I had one load balancer kind of in between",
    "start": "898800",
    "end": "904319"
  },
  {
    "text": "to availability zones it actually exists in both but I put it there because logically it looks to your application",
    "start": "904319",
    "end": "910559"
  },
  {
    "text": "is one elastic load balancer so it's a single DNS end point for you to throw in",
    "start": "910559",
    "end": "915720"
  },
  {
    "text": "a route 53 and navigate your users to but if you've got services that are exist in both availability zones route",
    "start": "915720",
    "end": "922889"
  },
  {
    "text": "53 and the EOB are going to make sure that it goes to both web servers and out of in the two different availability",
    "start": "922889",
    "end": "928079"
  },
  {
    "text": "zones the my favorite feature of the elastic load balancer is the health checks so that you configure a health",
    "start": "928079",
    "end": "934110"
  },
  {
    "text": "check on the ELB so that if the EOB then determines that and it's behind it is not healthy it's just",
    "start": "934110",
    "end": "940450"
  },
  {
    "text": "not going to distribute traffic to it anymore so that's also very important so this",
    "start": "940450",
    "end": "950170"
  },
  {
    "text": "horizontal scaling that we get with the elastic load balancer and the vertical scaling that we get with simply choosing",
    "start": "950170",
    "end": "955990"
  },
  {
    "text": "a new instance type this is going to get us pretty far okay it's I mean we're going to be able to get to you know the",
    "start": "955990",
    "end": "961900"
  },
  {
    "text": "hundreds of thousands of users but there's it and this kind of explains part of why we can do that because",
    "start": "961900",
    "end": "967300"
  },
  {
    "text": "although I only showed two you know two instances behind that ELB really I can put thousands of instances behind that",
    "start": "967300",
    "end": "973780"
  },
  {
    "text": "elastic load balancer I'm showing four and two different availability zones here but you can think of this as going",
    "start": "973780",
    "end": "978790"
  },
  {
    "text": "out horizontally as far as the eye can see and also notice I threw in a couple other Amazon RDS concepts here with the",
    "start": "978790",
    "end": "988090"
  },
  {
    "text": "read replicas so I'm going to take I'm going to take some of that load off of",
    "start": "988090",
    "end": "993100"
  },
  {
    "text": "my right master and get it off there right let my master handle rights let my",
    "start": "993100",
    "end": "998890"
  },
  {
    "text": "read replicas handle all the other traffic it's going to be really important to me as I scale we also need",
    "start": "998890",
    "end": "1008100"
  },
  {
    "text": "to consider performance and efficiency there's there are some things that we need to do to tweak that and I'm going",
    "start": "1008100",
    "end": "1014280"
  },
  {
    "text": "to do this by lightening the load on my on the tiers of my application so the",
    "start": "1014280",
    "end": "1020040"
  },
  {
    "text": "first thing we're going to do is we're going to move some static content that exists in my web app I'm going to put it",
    "start": "1020040",
    "end": "1026579"
  },
  {
    "text": "in Amazon s3 and I'm going to front it with Amazon Cloud Front and just took as",
    "start": "1026580",
    "end": "1032819"
  },
  {
    "text": "a reminder cloud front is one of those services that leverages the 53 edge locations that we have around the globe",
    "start": "1032820",
    "end": "1039060"
  },
  {
    "text": "again that's a current number that constantly expanding I'm going to dive a little deeper into these services so",
    "start": "1039060",
    "end": "1045930"
  },
  {
    "start": "1045000",
    "end": "1045000"
  },
  {
    "text": "Amazon s3 it's it's an object based store it's not the type of storage you attach to an ec2 instance it's not it's",
    "start": "1045930",
    "end": "1052980"
  },
  {
    "text": "not it's not that type of storage it's an object store not block store but it's a great place to put all that static",
    "start": "1052980",
    "end": "1058800"
  },
  {
    "text": "content your JavaScript your CSS files your images your videos all that stuff",
    "start": "1058800",
    "end": "1063990"
  },
  {
    "text": "doesn't need to sit on an ec2 instance it should be in in an object store in",
    "start": "1063990",
    "end": "1070320"
  },
  {
    "text": "Amazon three it's highly durable 11 nines of durability is what it was designed for",
    "start": "1070320",
    "end": "1076020"
  },
  {
    "text": "it's infinitely scalable you can throw as much data at it as you want we have customers storing petabytes upon",
    "start": "1076020",
    "end": "1083260"
  },
  {
    "text": "petabytes of data inside of Amazon s3 and and give us up you know objects up",
    "start": "1083260",
    "end": "1089530"
  },
  {
    "text": "to five terabytes in size as well you can encrypt it using our encryption using your encryption we actually have",
    "start": "1089530",
    "end": "1095260"
  },
  {
    "text": "encryption services that you can leverage the the key management service for example to actually manage your keys",
    "start": "1095260",
    "end": "1101590"
  },
  {
    "text": "for the objects that you store in s3 and then cloud front that is the cache right",
    "start": "1101590",
    "end": "1107470"
  },
  {
    "start": "1104000",
    "end": "1104000"
  },
  {
    "text": "you're you want to get that content out to your end users as quickly as possible you want to have the very lowest latency",
    "start": "1107470",
    "end": "1113290"
  },
  {
    "text": "that you get you that you can to those end users and cloud front is that ability to do that I can cache my static",
    "start": "1113290",
    "end": "1120520"
  },
  {
    "text": "content at those edge locations to get it there quickly and you can see now that I'm lightening that load on my web",
    "start": "1120520",
    "end": "1126700"
  },
  {
    "text": "tier right I'm taking that off of my web tier and getting it out to these edge locations and it's and it's going to really help me scale a couple charts",
    "start": "1126700",
    "end": "1138070"
  },
  {
    "text": "here I mean they're pretty basic you know the top one showing you that hey if you don't have a CDN you're going to",
    "start": "1138070",
    "end": "1143620"
  },
  {
    "text": "have high response times and an high server load versus you know the middle one there I've got a CDN for static",
    "start": "1143620",
    "end": "1149800"
  },
  {
    "text": "content and my response times and my server load is obviously going to go down and then notice on the the other",
    "start": "1149800",
    "end": "1155230"
  },
  {
    "text": "one I've listed dynamic content because although cloud front does do static",
    "start": "1155230",
    "end": "1160330"
  },
  {
    "text": "content delivery it also does dynamic content delivery and I'll dive into that a little bit more as we move along and",
    "start": "1160330",
    "end": "1166240"
  },
  {
    "text": "then the bottom one is actually a graph that shows a real customer that was leveraging cloud front and and you know",
    "start": "1166240",
    "end": "1172690"
  },
  {
    "text": "they had a need to get you know 60 gigabits per second out of their out of their application and they the web tier",
    "start": "1172690",
    "end": "1179440"
  },
  {
    "text": "didn't even blink they didn't have to do anything nothing cloud front was able to absorb all that and deliver the content to the",
    "start": "1179440",
    "end": "1185860"
  },
  {
    "text": "end users that's huge huge value there so the other thing I want to I want to",
    "start": "1185860",
    "end": "1192220"
  },
  {
    "text": "look at is is getting my session state off of my web tier um that's going to do a number of things obviously it's part",
    "start": "1192220",
    "end": "1199270"
  },
  {
    "text": "of lessening the load on that web tier getting the session data off and sticking it either in",
    "start": "1199270",
    "end": "1204850"
  },
  {
    "text": "ask the cash or as I'm suggesting here dynamodb and and the other thing that's",
    "start": "1204850",
    "end": "1209980"
  },
  {
    "text": "going to do is it's going to be one of those things that's going to help us get to that auto-scaling that we saw at the",
    "start": "1209980",
    "end": "1217330"
  },
  {
    "text": "very beginning when I typed in on my my browser search the next thing is",
    "start": "1217330",
    "end": "1222610"
  },
  {
    "text": "actually using ElastiCache again this is now going to help me with getting data off of my my data tier and lessening the",
    "start": "1222610",
    "end": "1229690"
  },
  {
    "text": "load there if i've got content that's getting read all the time it's the same content put in a cache",
    "start": "1229690",
    "end": "1235660"
  },
  {
    "text": "I don't need my database handling that ElastiCache is our managed service for taking care of that so DynamoDB a little more about that yes",
    "start": "1235660",
    "end": "1243850"
  },
  {
    "start": "1240000",
    "end": "1240000"
  },
  {
    "text": "this is our managed no SQL database you actually get to provision the throughput",
    "start": "1243850",
    "end": "1249580"
  },
  {
    "text": "that you want you're dialing up the the amount of performance the reads and the write separately from each other so",
    "start": "1249580",
    "end": "1256570"
  },
  {
    "text": "really powerful there I can really create database infrastructure that's that's highly performant it's a key",
    "start": "1256570",
    "end": "1264430"
  },
  {
    "text": "value pair of the key value store we also support JSON documents and documents up to four hundred kilobytes",
    "start": "1264430",
    "end": "1271030"
  },
  {
    "text": "as well um one thing to point out also that this is one of those services at the beginning I said that is inherently",
    "start": "1271030",
    "end": "1276820"
  },
  {
    "text": "fault-tolerant right it exists in multiple availability zones so that um you know you can it can withstand the",
    "start": "1276820",
    "end": "1283120"
  },
  {
    "text": "the issues in one availability zone and still provide value to your application",
    "start": "1283120",
    "end": "1288570"
  },
  {
    "start": "1288000",
    "end": "1288000"
  },
  {
    "text": "ElastiCache is a managed memcache or Redis and again you know when we're",
    "start": "1288570",
    "end": "1293890"
  },
  {
    "text": "looking at something like this you can run memcache or Edison your own cluster and you can manage those clusters on",
    "start": "1293890",
    "end": "1299200"
  },
  {
    "text": "your own and an ec2 instance but I'm suggesting that that's probably not your you're it's not it's not differentiating",
    "start": "1299200",
    "end": "1306250"
  },
  {
    "text": "you your ability to manage a memcache cluster is not making you more money so consider letting us handle that put it",
    "start": "1306250",
    "end": "1312400"
  },
  {
    "text": "in a managed service and then you don't have to worry about the management of the clusters we will automatically scale the clusters for you and also we've got",
    "start": "1312400",
    "end": "1320560"
  },
  {
    "text": "you know it's a self-healing infrastructure so that we can detect when nodes are no longer working and",
    "start": "1320560",
    "end": "1326680"
  },
  {
    "text": "bring up new nodes to replace them without you having to worry about it",
    "start": "1326680",
    "end": "1331529"
  },
  {
    "text": "and then the final thing is again that dynamic content that I mentioned earlier",
    "start": "1334750",
    "end": "1340960"
  },
  {
    "text": "the cloud front has the ability to cache not just static content but dynamic",
    "start": "1340960",
    "end": "1346730"
  },
  {
    "text": "content that's going to be a huge value again for being able to lighten that load on your web tier so now we have a",
    "start": "1346730",
    "end": "1357559"
  },
  {
    "text": "web tier that's you know much more lightweight this is the time to start going back to the beginning of our talk",
    "start": "1357559",
    "end": "1363740"
  },
  {
    "text": "and we can go to auto scaling at least start to make use of that so what is",
    "start": "1363740",
    "end": "1368900"
  },
  {
    "text": "auto scaling again it's not that magic button you push and then everything's just scales and you're away you go but",
    "start": "1368900",
    "end": "1374240"
  },
  {
    "text": "it does do automatic resizing of those compute clusters that you create you get",
    "start": "1374240",
    "end": "1379370"
  },
  {
    "text": "to define the minimum and the maximum size of your pools so I'd you know as a user I decide how what's the smallest",
    "start": "1379370",
    "end": "1386300"
  },
  {
    "text": "number of instances I want my cluster and what's the largest number of instances I want my cluster you use a",
    "start": "1386300",
    "end": "1392540"
  },
  {
    "text": "service that we have called cloud watch which is our manage our management service and it's embedded into all of",
    "start": "1392540",
    "end": "1398210"
  },
  {
    "text": "our applications and cloud watches that is that tool that you use to let your auto scaling group know what that event",
    "start": "1398210",
    "end": "1405740"
  },
  {
    "text": "is that's going to make you scale are you going to scale on CPU utilization are you going to scale on latency are",
    "start": "1405740",
    "end": "1411530"
  },
  {
    "text": "you going to scale on network traffic what are you going to scale on well cloud watch is that is that piece that",
    "start": "1411530",
    "end": "1416660"
  },
  {
    "text": "you that you tell what you want to scale on and you can actually push your own custom metrics in a cloud watch so",
    "start": "1416660",
    "end": "1422030"
  },
  {
    "text": "that's huge right if you want to scale on something that's application specific you can push that metric in a cloud",
    "start": "1422030",
    "end": "1427429"
  },
  {
    "text": "watch and then tell auto scaling I want to scale on that particular custom metric another great value I you know",
    "start": "1427429",
    "end": "1435740"
  },
  {
    "text": "just for kicks I threw in a little bit of what the the different pieces of the auto scaling configuration looked like",
    "start": "1435740",
    "end": "1441920"
  },
  {
    "text": "it starts with that launch configuration where you basically define what is the instance type that I want to launch you",
    "start": "1441920",
    "end": "1449000"
  },
  {
    "text": "know where am I going to put that instance type what availability zone that kind of thing the auto scaling group that's where I am defining what",
    "start": "1449000",
    "end": "1455570"
  },
  {
    "text": "are my parameters you know what's the minimum what's the maximum that I want to get to and then of course the the",
    "start": "1455570",
    "end": "1461390"
  },
  {
    "text": "auto scaling policy is what's that event that's going to trigger my my",
    "start": "1461390",
    "end": "1466830"
  },
  {
    "text": "auto scaling group to move up or down and and and you know that's obviously an important part right",
    "start": "1466830",
    "end": "1474440"
  },
  {
    "text": "so if you look at this graph I mean this is the the typical weekly traffic to amazon.com this was taken from a sample",
    "start": "1476990",
    "end": "1483690"
  },
  {
    "text": "in November this might actually look a lot like what your traffic looks like you know spiking during the day going down at night",
    "start": "1483690",
    "end": "1488789"
  },
  {
    "text": "it's a typical traffic not just Amazon but to other places um and if you wanted",
    "start": "1488789",
    "end": "1494460"
  },
  {
    "text": "to you know provision enough capacity you might say give me 15% more than what I'm going to peak at I want to provision",
    "start": "1494460",
    "end": "1500730"
  },
  {
    "text": "that capacity and and your application is probably going to behave okay but what about November traffic to Amazon",
    "start": "1500730",
    "end": "1508350"
  },
  {
    "text": "the whole month you know we've got you know Black Friday Cyber Monday that's a huge spike and if",
    "start": "1508350",
    "end": "1514590"
  },
  {
    "text": "I had to provision that much compute power I'd be wasting a whole lot of",
    "start": "1514590",
    "end": "1520409"
  },
  {
    "text": "money a whole lot of compute power that's sitting around doing nothing for most of the time wouldn't it be nice if",
    "start": "1520409",
    "end": "1528179"
  },
  {
    "text": "I could always make sure that my compute power matched the demands of my application well yeah that's exactly",
    "start": "1528179",
    "end": "1535260"
  },
  {
    "text": "what auto scaling lets you do so auto scaling is going to let you always move",
    "start": "1535260",
    "end": "1541799"
  },
  {
    "text": "up and move down based on the the demands of your of your application so",
    "start": "1541799",
    "end": "1549620"
  },
  {
    "text": "I've been using this guy for one user I'm running out of real estate so we're",
    "start": "1549620",
    "end": "1554639"
  },
  {
    "text": "going to use this guy for a hundred thousand users but I realized as I was doing this deck that that's not going to work so now we've got this guy's going",
    "start": "1554639",
    "end": "1560970"
  },
  {
    "text": "to represent a million users and we got to get up to 11 million so we need something you know a little bit more big",
    "start": "1560970",
    "end": "1566970"
  },
  {
    "text": "so we're going to go with this guy wait we gotta cut them in half if he's a million half of him would be five hundred thousand so we want to get to",
    "start": "1566970",
    "end": "1574440"
  },
  {
    "text": "the next level notice what I have here so I've added an it looks like it's complicated but it's really not that",
    "start": "1574440",
    "end": "1580260"
  },
  {
    "text": "complicated notice the auto scaling groups I just kind of made those get bigger and",
    "start": "1580260",
    "end": "1585929"
  },
  {
    "text": "smaller for you notice I put auto scaling groups now around my my web tier and again I've only put three instances",
    "start": "1585929",
    "end": "1592799"
  },
  {
    "text": "in my auto scaling group in each availability zone but again that could be thousands of instances right I can",
    "start": "1592799",
    "end": "1598950"
  },
  {
    "text": "say I want a minimum of ten and a maximum of a thousand or whatever it is it doesn't matter whatever your application needs but there's something",
    "start": "1598950",
    "end": "1605639"
  },
  {
    "text": "wrong with this particular architecture at least in my mind one thing I want to do I'm going to take that load bound or",
    "start": "1605639",
    "end": "1611940"
  },
  {
    "text": "that that up that's the auto scaling group and I'm going to put it around both availability zones so a single auto",
    "start": "1611940",
    "end": "1618179"
  },
  {
    "text": "scaling group that's going to span multiple availability zones and that can be to availability zones three",
    "start": "1618179",
    "end": "1623340"
  },
  {
    "text": "availability zones whatever availability zones you have available to you and your in your account let it as long as it's within the same",
    "start": "1623340",
    "end": "1629309"
  },
  {
    "text": "region let it span both of those because now I can have instances popping up in",
    "start": "1629309",
    "end": "1635009"
  },
  {
    "text": "multiple availability zones for that not just scalability but also for that availability piece Bob you'll also",
    "start": "1635009",
    "end": "1642210"
  },
  {
    "text": "notice that you know I again I'm still showing my read replicas in my slave databases I've added the cache in there",
    "start": "1642210",
    "end": "1648869"
  },
  {
    "text": "I've thrown in some elastic cache so that I can get those those reads those those you know those the reads that are",
    "start": "1648869",
    "end": "1655019"
  },
  {
    "text": "really popular I can get them into my cache I have also shown taking my session data and throwing it off to",
    "start": "1655019",
    "end": "1661320"
  },
  {
    "text": "DynamoDB we thought amasian now I mean",
    "start": "1661320",
    "end": "1667559"
  },
  {
    "text": "this this infrastructure is getting big if we're scaling to thousands of instances and we've got read replicas",
    "start": "1667559",
    "end": "1673739"
  },
  {
    "text": "and we've got all this you know our data tiers expanding we're doing this horizontal stuff which is great we're really taking advantage of all the",
    "start": "1673739",
    "end": "1679950"
  },
  {
    "text": "benefits that AWS you know has to offer we need some automation to help with this process because we don't want to",
    "start": "1679950",
    "end": "1685350"
  },
  {
    "text": "manage each individual piece of the the tiers independently we need some automation so we've got some tools that",
    "start": "1685350",
    "end": "1692639"
  },
  {
    "start": "1691000",
    "end": "1691000"
  },
  {
    "text": "help there I'm going to start actually on the far right which is really no tools right",
    "start": "1692639",
    "end": "1698190"
  },
  {
    "text": "using ec2 and automating it yourself you can use tools like like chef or puppet and do a lot of the automation on your",
    "start": "1698190",
    "end": "1704489"
  },
  {
    "text": "own and if that's your bread and butter and that's differentiating you as a business then maybe that's where you",
    "start": "1704489",
    "end": "1709529"
  },
  {
    "text": "want to go I would suggest though that you might want to move on the continuum there and go a little bit more to the",
    "start": "1709529",
    "end": "1715499"
  },
  {
    "text": "convenience side because it's it's going to make your life a lot easier so let's",
    "start": "1715499",
    "end": "1721019"
  },
  {
    "text": "start on the far left where we've got that convenience the Amazon Elastic Beanstalk that is really simple I mean",
    "start": "1721019",
    "end": "1728730"
  },
  {
    "text": "you simply point Beanstalk to your application code and Amazon Beanstalk manages the infrastructure",
    "start": "1728730",
    "end": "1734370"
  },
  {
    "text": "Cerie to run that application really simple but it noticed not a lot of control a lot of convenience not a lot",
    "start": "1734370",
    "end": "1741090"
  },
  {
    "text": "of control AWS opsworks that is a an environment where you build your application in layers you use chef",
    "start": "1741090",
    "end": "1748260"
  },
  {
    "text": "recipes we've got a bunch of built-in chef recipes for you to use but you can you know bring your own custom chef",
    "start": "1748260",
    "end": "1753660"
  },
  {
    "text": "recipes in as well to manage the layers of your application and also provides you with some really good flexibility",
    "start": "1753660",
    "end": "1759540"
  },
  {
    "text": "for doing some continuous integration and deployment and managing the lifecycle of your application and they",
    "start": "1759540",
    "end": "1765120"
  },
  {
    "text": "cloud formation that's the been the one that has been around the longest it offers the most flexibility because it's",
    "start": "1765120",
    "end": "1772440"
  },
  {
    "text": "just a a template i x'd view of your environment of your stack you can use it",
    "start": "1772440",
    "end": "1777690"
  },
  {
    "text": "to built you can use this to build up an entire stack or just components of your stack if you want to update your stack",
    "start": "1777690",
    "end": "1783510"
  },
  {
    "text": "you simply update your cloud formation template and it will update that one piece of your of your application very",
    "start": "1783510",
    "end": "1789450"
  },
  {
    "text": "lots of control a little bit more involvement on your part obviously and maybe a little less convenient but",
    "start": "1789450",
    "end": "1795510"
  },
  {
    "text": "massive control the next thing I want to talk about though is that we've we've",
    "start": "1795510",
    "end": "1801420"
  },
  {
    "text": "also developed a suite of services around more around continuous",
    "start": "1801420",
    "end": "1806460"
  },
  {
    "text": "integration and deployment and just the the management of your application code and getting application code from the",
    "start": "1806460",
    "end": "1812550"
  },
  {
    "text": "repository the whole lifecycle to getting it on to the instances we've got some the code pipeline we've got the",
    "start": "1812550",
    "end": "1818820"
  },
  {
    "text": "code commit but the one I want to focus on here is the code deploy which is the one that's going to get our application",
    "start": "1818820",
    "end": "1824700"
  },
  {
    "text": "code to our instances and again this is a managed service that you can use to help do that automation of getting your",
    "start": "1824700",
    "end": "1831570"
  },
  {
    "text": "application code out there you can use it for getting the application go to one instance or you know thousands of",
    "start": "1831570",
    "end": "1837210"
  },
  {
    "text": "instances you can you can point your your code deploy to an auto scaling",
    "start": "1837210",
    "end": "1843380"
  },
  {
    "text": "configuration so that now it auto scaling and code deploy can work together so that you're not deploying",
    "start": "1843380",
    "end": "1848940"
  },
  {
    "text": "code to a single instance you're deploying code to a a group of instances that's managed by that auto scaling",
    "start": "1848940",
    "end": "1854250"
  },
  {
    "text": "group and you know one other thing to mention is that this can also be used in",
    "start": "1854250",
    "end": "1861270"
  },
  {
    "text": "conjunction with you know chef and puppet puppet as well",
    "start": "1861270",
    "end": "1866240"
  },
  {
    "text": "so we get to a point where I'm going to",
    "start": "1866480",
    "end": "1872870"
  },
  {
    "text": "suggest that you probably want to monitor your application all the time but we're going to get to a point where that's not going to become an option",
    "start": "1872870",
    "end": "1879080"
  },
  {
    "text": "it's going to become a necessity you can build your own monitoring internally I'm going to suggest that you probably don't",
    "start": "1879080",
    "end": "1885350"
  },
  {
    "text": "do that because it's a lot of work and again it's probably not differentiating you as a company it's not making you",
    "start": "1885350",
    "end": "1890540"
  },
  {
    "text": "money so I would suggest that maybe you outsource it let somebody else handle that for you",
    "start": "1890540",
    "end": "1895910"
  },
  {
    "text": "the second bullet is really important you need to know what your customers are saying like it's it's great that I",
    "start": "1895910",
    "end": "1902630"
  },
  {
    "text": "manage my infrastructure and I'm like oh CPUs great latency is awesome but my customer is having a terrible experience",
    "start": "1902630",
    "end": "1909380"
  },
  {
    "text": "for whatever reason you know they're getting an error and when they go to my webpage well that's a problem or they're",
    "start": "1909380",
    "end": "1914390"
  },
  {
    "text": "they're latency is bad so we you need to make sure you focus on that there's a number of ways you can do it obviously",
    "start": "1914390",
    "end": "1919850"
  },
  {
    "text": "there's the you know the help desk side right listen to my customers hey I got a problem my application but wouldn't it",
    "start": "1919850",
    "end": "1925430"
  },
  {
    "text": "be nice if I could be a little more proactive about that and then of course trying to squeeze as much performance",
    "start": "1925430",
    "end": "1930770"
  },
  {
    "text": "out of what you what you have your implementation you you don't want underutilized resources auto-scaling",
    "start": "1930770",
    "end": "1937340"
  },
  {
    "text": "obviously is going to help with that but you want to make sure that you're you know you don't have systems that are sitting there at 20% CPU utilization if",
    "start": "1937340",
    "end": "1944750"
  },
  {
    "text": "they can realistically run at 80% CPU utilization different types of metrics",
    "start": "1944750",
    "end": "1952160"
  },
  {
    "text": "for different things there's obviously there's the host level metrics that's probably the most granular piece right I",
    "start": "1952160",
    "end": "1957260"
  },
  {
    "text": "can look at a single ec2 instance inside of an auto scaling group and figure out what's going on with that instance the",
    "start": "1957260",
    "end": "1964610"
  },
  {
    "text": "aggregate level instances I think are probably a little bit better maybe I'm looking at the the metrics on my elastic",
    "start": "1964610",
    "end": "1970010"
  },
  {
    "text": "load balancer right so I get an idea of what is the entire everything that the elastic load balancer is responsible for",
    "start": "1970010",
    "end": "1976280"
  },
  {
    "text": "all those ec2 instances what is you know what's going on there that provides me another level that might be even more",
    "start": "1976280",
    "end": "1983000"
  },
  {
    "text": "beneficial than just those those those a host level metrics you got to analyze logs right at some point you've got to",
    "start": "1983000",
    "end": "1991970"
  },
  {
    "text": "look at what your applicator specially what the application is telling you right collecting those logs we have",
    "start": "1991970",
    "end": "1997280"
  },
  {
    "text": "services that help with that we've got we've got cloud watch logs that help with managing your application logs we've got cloud",
    "start": "1997280",
    "end": "2004210"
  },
  {
    "text": "trail we've got things that you can use to to help you you know analyze and",
    "start": "2004210",
    "end": "2009760"
  },
  {
    "text": "manage those those are those logs um and then that last one there in the lower right that's where I'm talking",
    "start": "2009760",
    "end": "2015580"
  },
  {
    "text": "about where you have to know what your customers are seeing and and it's great to you know get on the phone and talk",
    "start": "2015580",
    "end": "2021550"
  },
  {
    "text": "with them but I'm suggesting that you use a service that's going to let you figure you know that let you know what your application looks like as an end",
    "start": "2021550",
    "end": "2028000"
  },
  {
    "text": "user I think that the the the graph I've got there is from Pingdom they do that",
    "start": "2028000",
    "end": "2033220"
  },
  {
    "text": "you know maybe you're using New Relic maybe there's a number of partners that can help in that regard I'm sure a",
    "start": "2033220",
    "end": "2038290"
  },
  {
    "text": "number of them are out there in the in the expo there's still a lot more that",
    "start": "2038290",
    "end": "2043960"
  },
  {
    "text": "we can do here though we need to we need to further decouple our infrastructure",
    "start": "2043960",
    "end": "2049840"
  },
  {
    "text": "and we're going to do that through SOA so just like we did when we want to know",
    "start": "2049840",
    "end": "2056470"
  },
  {
    "text": "what auto-scaling you know how to auto scale when I want to know how to what SOA means I'm going to pull up my web",
    "start": "2056470",
    "end": "2061629"
  },
  {
    "text": "browser and my search engine and all that jazz I'm going to type in SOA and it's again going to come up with a whole",
    "start": "2061630",
    "end": "2066850"
  },
  {
    "text": "boatload of suggestions I'm going to suggest that this is not where you want to start I'm a huge Sons of Anarchy fan",
    "start": "2066850",
    "end": "2073149"
  },
  {
    "text": "but I probably not what I'm looking for here but I am going to suggest that this",
    "start": "2073150",
    "end": "2078820"
  },
  {
    "text": "is actually the right where we might want to start this is going to tell me what actually what I'm looking for service-oriented architectures and SOA",
    "start": "2078820",
    "end": "2087240"
  },
  {
    "text": "essentially is taking components of your tears and separating them out so I'm",
    "start": "2087240",
    "end": "2092919"
  },
  {
    "text": "creating separate you know individual components that just like I did when I separated my data from my web tier I can",
    "start": "2092920",
    "end": "2099970"
  },
  {
    "text": "now scale these independently from each other that's going to give me huge flexibility not just in scaling but",
    "start": "2099970",
    "end": "2106420"
  },
  {
    "text": "again in resiliency and the availability of my application we do this intensively",
    "start": "2106420",
    "end": "2111430"
  },
  {
    "text": "here at Amazon Web Services amazon.com does this intensively when we build out our applications SOA is a key a key",
    "start": "2111430",
    "end": "2118440"
  },
  {
    "text": "component of our architectures",
    "start": "2118440",
    "end": "2122609"
  },
  {
    "text": "don't reinvent the wheel I you know one of the themes that I've been you know giving you here is if it's not if you're",
    "start": "2125380",
    "end": "2132320"
  },
  {
    "text": "engaging in a task that's not differentiating you as a customer or as not differentiating you as a as a",
    "start": "2132320",
    "end": "2139340"
  },
  {
    "text": "business don't do it we've got a lot of services that that are inherently fault-tolerant because",
    "start": "2139340",
    "end": "2145190"
  },
  {
    "text": "they span multiple availability zones like queuing and emailing and transcoding and things like that that you don't have to build these yourself",
    "start": "2145190",
    "end": "2152210"
  },
  {
    "text": "you can leverage these services and take advantage of that that SOA and that decoupling I've listed you know a few of",
    "start": "2152210",
    "end": "2160730"
  },
  {
    "text": "the services here that that that might be able to help you and we have others as well sqs for example this is a this",
    "start": "2160730",
    "end": "2169520"
  },
  {
    "start": "2166000",
    "end": "2166000"
  },
  {
    "text": "is actually the first AWS service that we ever launched was sqs and this is a",
    "start": "2169520",
    "end": "2177650"
  },
  {
    "text": "it's it expands multiple availability zones so it's inherently fault-tolerant",
    "start": "2177650",
    "end": "2183560"
  },
  {
    "text": "it's highly scalable it's highly secure very simple API is to use it and you",
    "start": "2183560",
    "end": "2189650"
  },
  {
    "text": "know we use this example a lot but it's a really good example of how queuing can help your infrastructure basically",
    "start": "2189650",
    "end": "2195680"
  },
  {
    "text": "passing messages between different components of your application so if I use a like a photo CMS for example I",
    "start": "2195680",
    "end": "2201560"
  },
  {
    "text": "might have you know get a photo that gets brought in by a user and I've got to do something with it maybe it's",
    "start": "2201560",
    "end": "2206870"
  },
  {
    "text": "creating a thumbnail maybe it's making it better resolution or lower resolution whatever it might be and I've got the",
    "start": "2206870",
    "end": "2214700"
  },
  {
    "text": "system that's going to collect the the image and the system that's going to do the work they should be two different",
    "start": "2214700",
    "end": "2221930"
  },
  {
    "text": "systems I can scale them independently they shouldn't be tightly coupled so",
    "start": "2221930",
    "end": "2227510"
  },
  {
    "text": "queuing allows me to do this I can ingest the photo I can I can have a cue that another set of workers goes to and",
    "start": "2227510",
    "end": "2234530"
  },
  {
    "text": "says oh there's a message waiting in the queue let me pull it oh there's a there's an image sitting out in s3 I need to do something with it it's it's a",
    "start": "2234530",
    "end": "2240890"
  },
  {
    "text": "very simple use case but very very important very powerful to convey the value of having sqs and those and the",
    "start": "2240890",
    "end": "2248060"
  },
  {
    "text": "messages being sent between those distributed components of your application",
    "start": "2248060",
    "end": "2253570"
  },
  {
    "text": "AWS lamda another great tool for allowing you to decouple your",
    "start": "2253600",
    "end": "2258810"
  },
  {
    "text": "your application and using the same scenario as the photo CMS it lambda can",
    "start": "2258810",
    "end": "2264690"
  },
  {
    "text": "take care of that right I can have lambda responding to two events that are occurring inside of an s3 bucket",
    "start": "2264690",
    "end": "2272070"
  },
  {
    "text": "hey users uploaded an object into s3 I need to do something with it what is that oh I need to make a thumbnail put it back in s3 really",
    "start": "2272070",
    "end": "2279630"
  },
  {
    "text": "valuable the great thing about lambda though is that now you notice there's no ec2 in this architecture right",
    "start": "2279630",
    "end": "2285240"
  },
  {
    "text": "there's no instances lambda is a managed service it scales out for you and you",
    "start": "2285240",
    "end": "2290520"
  },
  {
    "text": "have absolutely no operating system to manage so well it's an awesome service for allowing you to decouple and and get",
    "start": "2290520",
    "end": "2297810"
  },
  {
    "text": "things done very quickly and and have that that SOA type architecture also I",
    "start": "2297810",
    "end": "2304230"
  },
  {
    "text": "had to add in fact I just did it a couple hours ago through Python on there right because we just added Python as a",
    "start": "2304230",
    "end": "2310110"
  },
  {
    "text": "language that now lambda supports and you know I'm sure that that's not the",
    "start": "2310110",
    "end": "2315390"
  },
  {
    "text": "end loose coupling sets you free I don't know who said that once but I liked the",
    "start": "2315390",
    "end": "2321930"
  },
  {
    "text": "quote so I threw it in here we're where I've thrown both architectures in here because they essentially accomplish the",
    "start": "2321930",
    "end": "2328260"
  },
  {
    "text": "same thing right if I'm doing that if I'm using the photo CMS example um but you know we're designing everything as a",
    "start": "2328260",
    "end": "2335070"
  },
  {
    "text": "black box so that now I can scale and fail independently from each other like",
    "start": "2335070",
    "end": "2341460"
  },
  {
    "text": "do I really care if one of my worker nodes in my sqs example has a problem no",
    "start": "2341460",
    "end": "2347070"
  },
  {
    "text": "I don't care it'll I'll kill it and another instance you'll pick up the job and take care of it it doesn't matter",
    "start": "2347070",
    "end": "2352980"
  },
  {
    "text": "it's it's it allows me to be infinitely scalable and handle that that inevitable failure right things are going to fail",
    "start": "2352980",
    "end": "2359280"
  },
  {
    "text": "let's let's build an architecture then it's going to handle that",
    "start": "2359280",
    "end": "2364310"
  },
  {
    "text": "all right we got to a million users outstanding so this type of if we take",
    "start": "2368369",
    "end": "2375749"
  },
  {
    "text": "all the stuff if we're kind of doing a recap of everything we've been talking about so far we can easily get to more",
    "start": "2375749",
    "end": "2381359"
  },
  {
    "text": "than a million users with this using the multi availability zones the the elastic load balancer not just on the web tier",
    "start": "2381359",
    "end": "2387569"
  },
  {
    "text": "but we can actually you know if we if you have an architecture that's got multiple tiers you know you've got your",
    "start": "2387569",
    "end": "2392640"
  },
  {
    "text": "typical three-tier maybe you've got a web tier and app tier and data tier and you want to you actually want to scale on the app tier as well sure using the",
    "start": "2392640",
    "end": "2398640"
  },
  {
    "text": "elbe for that auto scaling SOA you know caching off the DB getting the state off",
    "start": "2398640",
    "end": "2404069"
  },
  {
    "text": "of our web tier and and you know this is",
    "start": "2404069",
    "end": "2409289"
  },
  {
    "text": "basically what our if we were to encompass all the stuff that we've been talking about this is what our architecture is going to look like at",
    "start": "2409289",
    "end": "2414990"
  },
  {
    "text": "this point I do need to make one comment though you notice I've taken out an availability zone I really haven't I",
    "start": "2414990",
    "end": "2421349"
  },
  {
    "text": "just couldn't get it on the slide too much you know I'm out of real estate so everything you see in that single",
    "start": "2421349",
    "end": "2426869"
  },
  {
    "text": "availability zone I'd have in another availability zone right stick my load balancer right in front of it right so",
    "start": "2426869",
    "end": "2432059"
  },
  {
    "text": "that now I've got that that not just the scaling ability but be highly availability I've thrown in Amazon SES",
    "start": "2432059",
    "end": "2441480"
  },
  {
    "text": "for sending mail I got cloud watch there now for doing my monitoring cloud watch",
    "start": "2441480",
    "end": "2446789"
  },
  {
    "text": "is not just for monitoring for my auto scaling cloud watch is built into all of our applications so I can monitor just",
    "start": "2446789",
    "end": "2453210"
  },
  {
    "text": "about anything with cloud watch that's happening inside the AWS infrastructure",
    "start": "2453210",
    "end": "2458328"
  },
  {
    "text": "next big steps getting to more than 10",
    "start": "2463350",
    "end": "2468360"
  },
  {
    "text": "million users we're gonna we're going to run into some issues at some point as we",
    "start": "2468360",
    "end": "2475590"
  },
  {
    "text": "start to as we start to get bigger and it's likely going to be on our data tier it's great that I've got you know my my",
    "start": "2475590",
    "end": "2482370"
  },
  {
    "text": "master database my slave database my read replicas I've got the the elastic",
    "start": "2482370",
    "end": "2487440"
  },
  {
    "text": "cache that I'm using for the rights that's awesome and that's going to help a lot but at some point I'm going to get",
    "start": "2487440",
    "end": "2492840"
  },
  {
    "text": "to a certain number of users and I'm going to need to do something else I'm going to need some more some more ability to scale and I'm going to do",
    "start": "2492840",
    "end": "2498630"
  },
  {
    "text": "that using one of those three methods either using Federation using sharding or maybe now maybe now is the time to",
    "start": "2498630",
    "end": "2507060"
  },
  {
    "text": "start thinking about using some no sequels database solutions database",
    "start": "2507060",
    "end": "2514110"
  },
  {
    "text": "Federation I'm simply splitting my database up by different functions right so now I've",
    "start": "2514110",
    "end": "2520020"
  },
  {
    "start": "2516000",
    "end": "2516000"
  },
  {
    "text": "got a in this particular example I've got a forms database a users database in a products database whereas typically I",
    "start": "2520020",
    "end": "2525900"
  },
  {
    "text": "might have had these in a single database now I've simply spread them out once again giving me that ability to",
    "start": "2525900",
    "end": "2531330"
  },
  {
    "text": "scale them independently from each other that gives me so much more flexibility anytime you look at your architecture",
    "start": "2531330",
    "end": "2536940"
  },
  {
    "text": "you're like hey can i scale these independent i decouple this and scale independently that's going to give me",
    "start": "2536940",
    "end": "2542070"
  },
  {
    "text": "more ability to scale it's it's it's something you really need to think about yes there's some there's some",
    "start": "2542070",
    "end": "2549680"
  },
  {
    "text": "application things that have to happen here right my my my queries that if I need to join tables between two",
    "start": "2549680",
    "end": "2555420"
  },
  {
    "text": "different databases it makes it a little bit more difficult um this type of scenario essentially delays",
    "start": "2555420",
    "end": "2560520"
  },
  {
    "text": "my need to get to the next point which is sharding and I'll talk about that on the next slide and sharding is a it is",
    "start": "2560520",
    "end": "2569780"
  },
  {
    "text": "it's more complex because you got to do some more applicants more application logic but in this particular example I",
    "start": "2569780",
    "end": "2575970"
  },
  {
    "text": "might if I have a users database I might be sending you know a third of my users to one database the middle third to",
    "start": "2575970",
    "end": "2582120"
  },
  {
    "text": "another and the last third to another so it's it's my application obviously has to know which you know is my user M",
    "start": "2582120",
    "end": "2589410"
  },
  {
    "text": "through L or you know I mean a through L or M through Z right it has to know where to send them and but it also like",
    "start": "2589410",
    "end": "2596820"
  },
  {
    "text": "duration gives me the ability now to again you know scale independently and I can still with Federation or with",
    "start": "2596820",
    "end": "2603390"
  },
  {
    "text": "sharding I can still have my my slave databases in my read replicas it's may",
    "start": "2603390",
    "end": "2609450"
  },
  {
    "text": "be more to manage but again allows me to get to that that that beyond 10 million that I'm really looking to get to and",
    "start": "2609450",
    "end": "2619280"
  },
  {
    "text": "then that that third area that I can really help with my data tier is to",
    "start": "2619280",
    "end": "2624870"
  },
  {
    "text": "start thinking about a no SQL database and there the obvious choice here is if",
    "start": "2624870",
    "end": "2631290"
  },
  {
    "start": "2630000",
    "end": "2630000"
  },
  {
    "text": "I've got data sitting in my relational data that data tier that's that's non-relational it's just it's easy to",
    "start": "2631290",
    "end": "2636870"
  },
  {
    "text": "pull out maybe it's some of those use cases that you see on the screen there it's just it's I'm not doing any complex",
    "start": "2636870",
    "end": "2643140"
  },
  {
    "text": "join so this is that's great data to pull out of my relational data put it in",
    "start": "2643140",
    "end": "2648480"
  },
  {
    "text": "the no sequel data I might even get some better performance out of it while I have the ability to scale them again",
    "start": "2648480",
    "end": "2654510"
  },
  {
    "text": "independently from each other lightening the load going back to that theory as well and lots of no sequel",
    "start": "2654510",
    "end": "2663740"
  },
  {
    "text": "databases out there right a whole bunch of them and you can run them on ec2 of course I'm going to suggest that you use",
    "start": "2663740",
    "end": "2669900"
  },
  {
    "text": "dynamo DB again residing in multiple availability zones being able to tune",
    "start": "2669900",
    "end": "2675630"
  },
  {
    "text": "the number of reads the number of writes independently from each other lots of abilities therefore for performance and",
    "start": "2675630",
    "end": "2682770"
  },
  {
    "text": "you don't have to manage any sort of underlying operating system quick review",
    "start": "2682770",
    "end": "2690850"
  },
  {
    "text": "again the multi AZ using self scaling services the elastic load balancer I",
    "start": "2690850",
    "end": "2697160"
  },
  {
    "text": "didn't mention this before I probably should have mentioned this might was talking about the elastic load balancer it it scales without you having to do",
    "start": "2697160",
    "end": "2704030"
  },
  {
    "text": "anything as the elastic load balancer sees additional traffic it scales behind the scenes both horizontally and",
    "start": "2704030",
    "end": "2709880"
  },
  {
    "text": "vertically so you don't have to manage that so is your application scaling so is the elastic load balancer Amazon s3",
    "start": "2709880",
    "end": "2716590"
  },
  {
    "text": "highly performant in datastore for your static objects and it's it's literally",
    "start": "2716590",
    "end": "2723950"
  },
  {
    "text": "infinitely scalable SNS sqs we've talked about those well I didn't talk about SNS",
    "start": "2723950",
    "end": "2728960"
  },
  {
    "text": "SNS is our messaging plateau is a messaging platform you can send you know for example an SMS message or it's it's",
    "start": "2728960",
    "end": "2736580"
  },
  {
    "text": "it's built in very closely with them with sqs and highly available build that",
    "start": "2736580",
    "end": "2742670"
  },
  {
    "text": "redundancy at every layer there's no reason why you have to think of scalability and redundancy in two",
    "start": "2742670",
    "end": "2749060"
  },
  {
    "text": "separate as two separate concepts because you can often do both at the same time start with their traditional",
    "start": "2749060",
    "end": "2755960"
  },
  {
    "text": "relational database start with sequel caching both inside and outside of your",
    "start": "2755960",
    "end": "2762440"
  },
  {
    "text": "infrastructure what I mean by that is caching using like the CDN caching using ElastiCache and the automation tools",
    "start": "2762440",
    "end": "2769670"
  },
  {
    "text": "right use something like being stock or opsworks or cloud formation chef puppet",
    "start": "2769670",
    "end": "2776380"
  },
  {
    "start": "2776000",
    "end": "2776000"
  },
  {
    "text": "make sure you've got really good metrics really good logging make sure you're finding out what your customers",
    "start": "2776380",
    "end": "2782450"
  },
  {
    "text": "experiences with your application you know again not just it's not good enough to know that your application is",
    "start": "2782450",
    "end": "2788600"
  },
  {
    "text": "performing great from the inside make sure it's performing great from the outside SOA splitting the the tiers of",
    "start": "2788600",
    "end": "2795230"
  },
  {
    "text": "your application at different components let them scale and fail independently from each other use auto scaling but not",
    "start": "2795230",
    "end": "2804380"
  },
  {
    "text": "at the beginning use auto scaling when your infrastructure is ready to use auto scaling do not reinvent the wheel if",
    "start": "2804380",
    "end": "2811880"
  },
  {
    "text": "there's a managed service for what for what you need to do give really think",
    "start": "2811880",
    "end": "2817430"
  },
  {
    "text": "about using it it's probably the right choice not always there's there situations where you're doing something",
    "start": "2817430",
    "end": "2824000"
  },
  {
    "text": "think you're doing something unique and you've got some requirement that the managed service just can't do I get it but in most cases it's going to work",
    "start": "2824000",
    "end": "2830750"
  },
  {
    "text": "consider doing it and then moving to a no SQL database when it's the right time",
    "start": "2830750",
    "end": "2836570"
  },
  {
    "text": "when it makes sense for your application doing all this is going to get us to ten",
    "start": "2836570",
    "end": "2842990"
  },
  {
    "text": "eleven and and and really as far as we want to get there's still more that we",
    "start": "2842990",
    "end": "2849530"
  },
  {
    "text": "can do though and it's it this is an iterative process right scaling isn't something you you do once you it's as",
    "start": "2849530",
    "end": "2856910"
  },
  {
    "text": "you get bigger there's more and more things that you need to work on and you're going to get to certain points of your of your journey on scaling and",
    "start": "2856910",
    "end": "2863540"
  },
  {
    "text": "you're going to realize you still need something else so there's always something that we're going to need to do to get to you know beyond 10 million 11",
    "start": "2863540",
    "end": "2870410"
  },
  {
    "text": "million 100 million maybe more fine-tuning of the application more SOA",
    "start": "2870410",
    "end": "2876560"
  },
  {
    "text": "there's you know this deck now is stamped on October 8th 20 2015 this deck",
    "start": "2876560",
    "end": "2883220"
  },
  {
    "text": "is going to be out of date tomorrow right there's going to be more things that aren't going to be in this deck that you're going to be able to utilize as you get as you get bigger you might",
    "start": "2883220",
    "end": "2891350"
  },
  {
    "text": "think about going multi-region maybe that's your scalability requires that now cloud front is going to let you not",
    "start": "2891350",
    "end": "2897890"
  },
  {
    "text": "go multi-region in most cases but there may be a use case for you to go multi region you may need to build some custom",
    "start": "2897890",
    "end": "2904610"
  },
  {
    "text": "solutions right I mean if you're servicing a billion customers you know it you might need to do something",
    "start": "2904610",
    "end": "2910430"
  },
  {
    "text": "specific just to your particular workload that nobody's ever done before so you might need something like that",
    "start": "2910430",
    "end": "2915590"
  },
  {
    "text": "and then of course the more analysis you can do on your on your application stack the better it's going to be for your",
    "start": "2915590",
    "end": "2921710"
  },
  {
    "text": "ability to scale we've got lots of documentation here's some that I would",
    "start": "2921710",
    "end": "2927800"
  },
  {
    "text": "suggest you look at my favorite is the the one about architecture it's got great not just on scaling but it's got a",
    "start": "2927800",
    "end": "2935240"
  },
  {
    "text": "whole wealth of reference architectures that that might be very niche and very specific to what you guys are doing in",
    "start": "2935240",
    "end": "2941600"
  },
  {
    "text": "your particular architectures and give you a great just a great example of a visual 30,000 foot view of what you",
    "start": "2941600",
    "end": "2948620"
  },
  {
    "text": "might want to to look for you know what should what's your end goal",
    "start": "2948620",
    "end": "2954820"
  },
  {
    "text": "and you know ask for help right lots of places we've got we have support both",
    "start": "2955609",
    "end": "2960650"
  },
  {
    "text": "free and paid for support we've got forums that you can go to many of you have an Account Manager many of",
    "start": "2960650",
    "end": "2965989"
  },
  {
    "text": "you have a Solutions Architect like myself of course I like that picture better so you know use the resources",
    "start": "2965989",
    "end": "2972319"
  },
  {
    "text": "that you have available to you",
    "start": "2972319",
    "end": "2975309"
  }
]