[
  {
    "start": "0",
    "end": "181000"
  },
  {
    "text": "[Music] hi everyone uh i'm tanya and i'm a",
    "start": "360",
    "end": "7359"
  },
  {
    "text": "technical account manager here at aws and i'm based out of delhi india",
    "start": "7359",
    "end": "13519"
  },
  {
    "text": "welcome to aws supports you where aws support experts provides tips to optimize performance in the cloud lower",
    "start": "13519",
    "end": "21199"
  },
  {
    "text": "cost and provides you with the best practices and design considerations",
    "start": "21199",
    "end": "26240"
  },
  {
    "text": "joining me today are my colleagues asmitha and vibhu from aws",
    "start": "26240",
    "end": "31679"
  },
  {
    "text": "can you give us a quick introduction asmada and vivo",
    "start": "31679",
    "end": "37199"
  },
  {
    "text": "sure thanks tanya hello everyone my name is asmita varma and i'm a technical account manager here at aws based out of",
    "start": "37280",
    "end": "44160"
  },
  {
    "text": "mumbai india i've been with aws for four plus years now and my area of expertise is",
    "start": "44160",
    "end": "50000"
  },
  {
    "text": "databases as a technical account manager i help customers navigate the challenges",
    "start": "50000",
    "end": "55199"
  },
  {
    "text": "and complexities of aws cloud to attain that operational excellence and i'm really happy to be here to talk to you",
    "start": "55199",
    "end": "61520"
  },
  {
    "text": "about some of the monitoring tools for rds hey thanks asmata for your introduction",
    "start": "61520",
    "end": "66960"
  },
  {
    "text": "hi everyone my name is vigoparik i work as a solutions architect with aws i've been with aws for close to six years now",
    "start": "66960",
    "end": "74400"
  },
  {
    "text": "as a solutions architect i help my customers in their cloud adoption journey to implementation of",
    "start": "74400",
    "end": "79920"
  },
  {
    "text": "well-architected scalable solutions my area of expertise is database and really excited to be part of the show",
    "start": "79920",
    "end": "88479"
  },
  {
    "text": "thank you smitha and thank you so everyone today we will be introducing",
    "start": "88799",
    "end": "93840"
  },
  {
    "text": "you to the monitoring offerings for amazon rds for mysql and postgresql",
    "start": "93840",
    "end": "100159"
  },
  {
    "text": "we will specifically be focusing on what these tools are and how you can use them",
    "start": "100159",
    "end": "105439"
  },
  {
    "text": "effectively to monitor your databases before we get into the details a quick",
    "start": "105439",
    "end": "110960"
  },
  {
    "text": "note to the attendees online please feel free to use the chat window on the right hand side of your screen to",
    "start": "110960",
    "end": "118000"
  },
  {
    "text": "let us know where you are joining us from today and also please share your thoughts and",
    "start": "118000",
    "end": "123680"
  },
  {
    "text": "questions throughout the episode we look forward to hearing from you we will also provide you a link to our",
    "start": "123680",
    "end": "129840"
  },
  {
    "text": "survey at the end of the session so if you would like to let us know how we did please click the link and leave your",
    "start": "129840",
    "end": "136000"
  },
  {
    "text": "feedback there with that uh asmata can you walk us through what we are going to be talking",
    "start": "136000",
    "end": "141760"
  },
  {
    "text": "about today sure tanya so let's look into the agenda for today",
    "start": "141760",
    "end": "149440"
  },
  {
    "text": "we'll talk about what is amazon ideas how it makes our customers life easier",
    "start": "149440",
    "end": "154640"
  },
  {
    "text": "and next up we will dive deep into monitoring tools that amazon rds for mysql and postgresql offers this will",
    "start": "154640",
    "end": "161840"
  },
  {
    "text": "help you understand how you can monitor your rds databases with a much better view compared to your on-prem or",
    "start": "161840",
    "end": "167760"
  },
  {
    "text": "self-managed environment and post this we'll see all these monitoring tools in action with the help",
    "start": "167760",
    "end": "173280"
  },
  {
    "text": "of a demo finally we will leave you with some resources to dive deep further on these",
    "start": "173280",
    "end": "178800"
  },
  {
    "text": "tools so what is amazon ideas now amazon rds",
    "start": "178800",
    "end": "184720"
  },
  {
    "start": "181000",
    "end": "347000"
  },
  {
    "text": "is a managed relational database service with a choice of popular commercial database engines like oracle and sql",
    "start": "184720",
    "end": "191360"
  },
  {
    "text": "server and open source database engines like mysql mariadb and postgres",
    "start": "191360",
    "end": "196879"
  },
  {
    "text": "we also do have our cloud native engine amazon aurora that we have redesigned to be optimized for cloud infrastructure",
    "start": "196879",
    "end": "204959"
  },
  {
    "text": "now when we say manage databases what we mean by that is that we take the database engines and put a management",
    "start": "204959",
    "end": "211200"
  },
  {
    "text": "layer around them to provide automation around common tasks that dbas or devops engineers that operate these database",
    "start": "211200",
    "end": "218080"
  },
  {
    "text": "have to do otherwise you know kind of manually now rds brings this kind of ease of",
    "start": "218080",
    "end": "224239"
  },
  {
    "text": "administration to the table so you don't have to worry about things like provisioning your hardware patching your",
    "start": "224239",
    "end": "229760"
  },
  {
    "text": "databases maintaining it over time because aws takes care of that for you",
    "start": "229760",
    "end": "236000"
  },
  {
    "text": "now amazon rds offers out of the box high scalability and high availability options which can be enabled with just a",
    "start": "236000",
    "end": "243120"
  },
  {
    "text": "few clicks and keeping in mind that security is always the number one priority for us at aws you can leverage",
    "start": "243120",
    "end": "249599"
  },
  {
    "text": "things like data encryption at rest and in transit and use tools like identity access management to control the access",
    "start": "249599",
    "end": "256400"
  },
  {
    "text": "and authentication to your amazon rds databases now let's have a dive deep view on the",
    "start": "256400",
    "end": "261759"
  },
  {
    "text": "division of responsibilities and how it looks like under the rds umbrella",
    "start": "261759",
    "end": "268000"
  },
  {
    "text": "so when we are thinking about administrating the databases if you were to do everything by yourself there are a",
    "start": "268000",
    "end": "274800"
  },
  {
    "text": "whole lot of things that you have to worry about starting from availability backup security scaling patching and",
    "start": "274800",
    "end": "281520"
  },
  {
    "text": "whatnot and traditionally a majority of time a self-managed environment",
    "start": "281520",
    "end": "287759"
  },
  {
    "text": "you really spend it on these kind of tasks what we really like to call undifferentiated heavy lifting tasks",
    "start": "287759",
    "end": "295759"
  },
  {
    "text": "with rds we take a lot of that away so that you can focus on the tasks that really bring value to your business",
    "start": "295759",
    "end": "302160"
  },
  {
    "text": "you can focus on things that matter for your application like the schema design query construction and optimization of",
    "start": "302160",
    "end": "308560"
  },
  {
    "text": "those queries today as a part of this session we are going to dive deep into the monitoring",
    "start": "308560",
    "end": "314720"
  },
  {
    "text": "tools with respect to open source engines like mysql and poster sequel which are available right out of the box",
    "start": "314720",
    "end": "321280"
  },
  {
    "text": "for you to use and are a part of our aws offerings now before i hand it over to webhook for",
    "start": "321280",
    "end": "327840"
  },
  {
    "text": "starting this discussion about rds monitoring capabilities uh tanya do we have any questions in the chat",
    "start": "327840",
    "end": "335199"
  },
  {
    "text": "no i don't see any questions from the audience so i guess we are good to proceed thank you smitha",
    "start": "336320",
    "end": "343759"
  },
  {
    "text": "awesome we do over to you hey thanks asmita for handing me the",
    "start": "343840",
    "end": "349360"
  },
  {
    "start": "347000",
    "end": "857000"
  },
  {
    "text": "mantle once you provision your environments monitoring them effectively is the most",
    "start": "349360",
    "end": "354880"
  },
  {
    "text": "important aspect for any organization to make optimal usage of resources by",
    "start": "354880",
    "end": "359919"
  },
  {
    "text": "ensuring application continuity generally database is the crux of any application thus any kind of bottleneck",
    "start": "359919",
    "end": "367199"
  },
  {
    "text": "in your database can result in your application slow down and even adversely",
    "start": "367199",
    "end": "372319"
  },
  {
    "text": "affecting your customer experience right monitoring tools will actually give you the ability or should give you",
    "start": "372319",
    "end": "378479"
  },
  {
    "text": "the ability to identify bottlenecks further with right monitoring tools you will have the ability to ensure faster",
    "start": "378479",
    "end": "385280"
  },
  {
    "text": "reactive responses using automated flows as you would know keeping operating",
    "start": "385280",
    "end": "390720"
  },
  {
    "text": "costs optimal with acceptable performance is very very important for any business the monitoring tools in",
    "start": "390720",
    "end": "397600"
  },
  {
    "text": "place should help you make decisions in right sizing your database so it should actually indicate whether",
    "start": "397600",
    "end": "403919"
  },
  {
    "text": "you are undersized as a dvd or oversized based on which you can make calls in",
    "start": "403919",
    "end": "409039"
  },
  {
    "text": "order to ensure that your rds database or any form of a database is at the",
    "start": "409039",
    "end": "414319"
  },
  {
    "text": "optimal size finally your teams are always making changes in the application to make the",
    "start": "414319",
    "end": "420319"
  },
  {
    "text": "customer experience better right monitoring tools in place should give you the ability to quantify those",
    "start": "420319",
    "end": "426319"
  },
  {
    "text": "changes by observing their effect on the load of the database with amazon rds environments monitoring",
    "start": "426319",
    "end": "433360"
  },
  {
    "text": "with above tenants in mind can be categorized into four categories",
    "start": "433360",
    "end": "439360"
  },
  {
    "text": "so these tools are cloud watch enhanced monitoring performance insights and even the third party tools which you can",
    "start": "440160",
    "end": "446960"
  },
  {
    "text": "build may be on top of things like db logs system catalogs or even events",
    "start": "446960",
    "end": "452880"
  },
  {
    "text": "as first step what we are going to do is we are going to dive deep into amazon cloud watch cloud watch has been around",
    "start": "452880",
    "end": "459599"
  },
  {
    "text": "for a while you would have heard of it it actually gives you the capability to have a quick view on how your db infra",
    "start": "459599",
    "end": "466720"
  },
  {
    "text": "is performing with metrics providing as low as one minute granularity which",
    "start": "466720",
    "end": "472000"
  },
  {
    "text": "means that each data point for example say your cpu utilization metric or any other metric will be available at a",
    "start": "472000",
    "end": "478960"
  },
  {
    "text": "minutes interval that's it the thing that i find most valuable about cloudwatch is not just",
    "start": "478960",
    "end": "484720"
  },
  {
    "text": "the metrics but what you can do with them you can use cloudwatch to make sure that",
    "start": "484720",
    "end": "489759"
  },
  {
    "text": "you get alerted or you get a page or a notification of some sort if some kind of threshold gets crossed",
    "start": "489759",
    "end": "496800"
  },
  {
    "text": "if i have to make a sample architecture of this it would look like something that would come on your screen right now",
    "start": "496800",
    "end": "502319"
  },
  {
    "text": "right so what i can do here is i can actually set alarms on some common metrics associated with my database for",
    "start": "502319",
    "end": "508479"
  },
  {
    "text": "example whenever the free storage space is let's just say less than 10 percent of the available space in the tv the alarm will",
    "start": "508479",
    "end": "515200"
  },
  {
    "text": "get triggered cloudwatch alarm actually has integration with sns amazon sns or",
    "start": "515200",
    "end": "520560"
  },
  {
    "text": "simple notification service does whenever this alarm gets triggered then via sns your dba or devops engineer in",
    "start": "520560",
    "end": "527440"
  },
  {
    "text": "your team can get a notification on which they can act you can also run automated tasks like modifying the rds",
    "start": "527440",
    "end": "534640"
  },
  {
    "text": "instance to scale the instance type by invoking lambda function from sns or maybe in case required initiate scripts",
    "start": "534640",
    "end": "541279"
  },
  {
    "text": "for collecting data from db level which may help you to find the root cause in addition to this sns can even send post",
    "start": "541279",
    "end": "548720"
  },
  {
    "text": "requests to your third party monitoring tools which can be used as an input for let's just say your warehouse to",
    "start": "548720",
    "end": "554880"
  },
  {
    "text": "understand the state of the system in the long run or can be an input for maybe your internal ticketing mechanisms",
    "start": "554880",
    "end": "561600"
  },
  {
    "text": "where actionables can be defined better if i have to talk about a typical metrics you will be concerned about for",
    "start": "561600",
    "end": "568240"
  },
  {
    "text": "your database or have to create custom views on in case of a self-managed dbs these are enabled by default in case of",
    "start": "568240",
    "end": "575440"
  },
  {
    "text": "amazon rds and that too at no extra cost metrics like ship utilization and",
    "start": "575440",
    "end": "580720"
  },
  {
    "text": "freeable memory can actually help you keep tab if a sudden resource intensive query is fired similarly you can",
    "start": "580720",
    "end": "587680"
  },
  {
    "text": "actually set alarm to get a notification whenever let's just say free storage space is down to the last 20 percent to",
    "start": "587680",
    "end": "593839"
  },
  {
    "text": "ensure some form of zero down times through the scaling and to avoid those scary out of storage downtimes in the",
    "start": "593839",
    "end": "600880"
  },
  {
    "text": "same way keeping a tab on data latency matrix can be indicative of the fact that you maybe are running out of read",
    "start": "600880",
    "end": "607360"
  },
  {
    "text": "write iops and same can be confirmed from the read write iops metrics",
    "start": "607360",
    "end": "612880"
  },
  {
    "text": "among many others there are also engine level specific metrics like maximum use",
    "start": "612880",
    "end": "618160"
  },
  {
    "text": "transaction ids in postgres alarm on these can actually help you be very of",
    "start": "618160",
    "end": "623360"
  },
  {
    "text": "the current transaction ids and help you prevent certain db downtime with timely notification it's a very common saying",
    "start": "623360",
    "end": "629600"
  },
  {
    "text": "in postgres that 2 billion is where the world ends an alarm on this cloud watch metric can it actually help you initiate",
    "start": "629600",
    "end": "636959"
  },
  {
    "text": "timely proactive measures to ensure your transactions are vacuumed to avoid any",
    "start": "636959",
    "end": "642240"
  },
  {
    "text": "form of downtime now this all is okay but your question would be what about the microburst in",
    "start": "642240",
    "end": "648240"
  },
  {
    "text": "between that one minute interval that you talked about or let's just say the output of the top command that i'm very",
    "start": "648240",
    "end": "654480"
  },
  {
    "text": "used to to explain how we solve this in more detail with amazon rds i'll hand it over to us meta to walk you through the",
    "start": "654480",
    "end": "661120"
  },
  {
    "text": "next section but before i do that tanya do we have any questions",
    "start": "661120",
    "end": "666399"
  },
  {
    "text": "uh i don't see any questions yet from the audience so i guess we go we are all good thank you cool thanks sandhya yeah",
    "start": "667360",
    "end": "675440"
  },
  {
    "text": "over to you smackdown thanks now back in 2016 in amazon rds we",
    "start": "675440",
    "end": "683760"
  },
  {
    "text": "released something called enhanced monitoring and this is a little bit different than cloudwatch",
    "start": "683760",
    "end": "689279"
  },
  {
    "text": "the difference is that this is an os centric monitoring tool meaning it tells you about the operating",
    "start": "689279",
    "end": "695279"
  },
  {
    "text": "system your database is running on and offers you additional metrics beyond what is available by cloud watch",
    "start": "695279",
    "end": "701680"
  },
  {
    "text": "so as you can see in the overlapping image on the screen enhanced monitoring shows you the",
    "start": "701680",
    "end": "707519"
  },
  {
    "text": "process list in case of rds you can't shell into the host on your own and hence you have to",
    "start": "707519",
    "end": "713200"
  },
  {
    "text": "get all the information through the console so in the console we can see the process list which is kind of like the output of",
    "start": "713200",
    "end": "720079"
  },
  {
    "text": "the top command on unix and you can see the top processes by memory or top processes by cpu",
    "start": "720079",
    "end": "727519"
  },
  {
    "text": "now another cool thing about enhanced monitoring is that the data data points can be collected at a granularity of up",
    "start": "727519",
    "end": "734079"
  },
  {
    "text": "to one second and to give you a comparison like vivo mentioned a couple of minutes ago right like cloud watch",
    "start": "734079",
    "end": "740320"
  },
  {
    "text": "metrics are collected every 60 seconds but you can set the granularity for enhanced monitoring to 1 or 5 or 15",
    "start": "740320",
    "end": "748160"
  },
  {
    "text": "seconds this is a great tool for troubleshooting performance issue and i always recommend",
    "start": "748160",
    "end": "753680"
  },
  {
    "text": "customers to have enhanced monitoring enabled for their critical rds database instances so that they can actually see",
    "start": "753680",
    "end": "759920"
  },
  {
    "text": "how different processes or threads are utilizing the cpu look at that one five and 15 minute load average data like you",
    "start": "759920",
    "end": "767200"
  },
  {
    "text": "see in the output of the top command kind of look into the memory statistics",
    "start": "767200",
    "end": "772399"
  },
  {
    "text": "view into the number of processes which are active running or blocked and whatnot",
    "start": "772399",
    "end": "778560"
  },
  {
    "text": "bottom line is that enhanced monitoring we can identify scenario like the exact",
    "start": "778560",
    "end": "783760"
  },
  {
    "text": "second when the kernel changed its behavior and that level of granularity is invaluable when you're",
    "start": "783760",
    "end": "789440"
  },
  {
    "text": "troubleshooting issues with your databases in addition to these features enhanced",
    "start": "789440",
    "end": "795200"
  },
  {
    "text": "monitoring also pushes these os metrics to cloudwatch logs now this is again a very useful lever",
    "start": "795200",
    "end": "801920"
  },
  {
    "text": "because this data in the cloudwatch logs can be used to create custom dashboards by creating metric filters as you can",
    "start": "801920",
    "end": "808399"
  },
  {
    "text": "see on the screen right now so basically you can use these cloud watch logs called rds os metrics to",
    "start": "808399",
    "end": "816480"
  },
  {
    "text": "either simplify simply visualize the information on your management console or use it as an input for creating",
    "start": "816480",
    "end": "822880"
  },
  {
    "text": "custom dashboards and setting alarms on them or even as a secure as a source for",
    "start": "822880",
    "end": "828880"
  },
  {
    "text": "your third party application for log analysis now one thing to note about both uh this",
    "start": "828880",
    "end": "835360"
  },
  {
    "text": "cloud watch and enhanced monitoring is that both of these tools are about monitoring the infrastructure of your",
    "start": "835360",
    "end": "840800"
  },
  {
    "text": "database so here comes the question right what about monitoring what is happening inside the database",
    "start": "840800",
    "end": "847440"
  },
  {
    "text": "for this let's talk about third party and let's talk i'm so sorry so let's talk about this third and pretty interesting",
    "start": "847440",
    "end": "853839"
  },
  {
    "text": "and powerful tool called performance insights like i mentioned a minute ago right like",
    "start": "853839",
    "end": "860320"
  },
  {
    "start": "857000",
    "end": "1283000"
  },
  {
    "text": "enhanced monitoring tells you about the operating system your database is running on whereas performance in sight",
    "start": "860320",
    "end": "866320"
  },
  {
    "text": "is a window into your database with enhanced monitoring i might see a problem on the operating system but i",
    "start": "866320",
    "end": "872959"
  },
  {
    "text": "will not know exactly where the problem is coming from within the database however",
    "start": "872959",
    "end": "878079"
  },
  {
    "text": "with performance inside dashboard we will exactly see what is happening in the database",
    "start": "878079",
    "end": "884480"
  },
  {
    "text": "on the top of it you can retain your performance inside data for seven days to a maximum of two years and when you",
    "start": "884480",
    "end": "890720"
  },
  {
    "text": "open performance insights dashboard the default time range is set to one hour but you can kind of zoom out to a",
    "start": "890720",
    "end": "897279"
  },
  {
    "text": "maximum of two years if that is the retention period you have set or if you have that much of data available",
    "start": "897279",
    "end": "905360"
  },
  {
    "text": "now this is what a part of the performance inside dashboard looks like you can filter the data by different",
    "start": "905360",
    "end": "910639"
  },
  {
    "text": "attributes such as what are the sql putting load on the database which users are putting the load where am i spending",
    "start": "910639",
    "end": "916720"
  },
  {
    "text": "my time on the database is it cpu or am i waiting for locks or am i waiting for some other resources and then we clearly",
    "start": "916720",
    "end": "924240"
  },
  {
    "text": "show which sql is causing the high load on the database now this dashboard gives you a guided",
    "start": "924240",
    "end": "930240"
  },
  {
    "text": "experience of looking at the database performance and really it doesn't matter if you're a beginner or a database",
    "start": "930240",
    "end": "935839"
  },
  {
    "text": "expert this dashboard is equally useful for both by exploring the station database you",
    "start": "935839",
    "end": "942320"
  },
  {
    "text": "learn about your database the interface is really easy to understand and it really encourages the",
    "start": "942320",
    "end": "948160"
  },
  {
    "text": "kind of exploration at the same time and you have that the data which is present in this dashboard is really really",
    "start": "948160",
    "end": "955120"
  },
  {
    "text": "powerful and it is the exact kind of data that a database export would want to see",
    "start": "955120",
    "end": "961519"
  },
  {
    "text": "now coming to all these databases that we talked about maybe mysql or postgresql all these database engines",
    "start": "961920",
    "end": "969279"
  },
  {
    "text": "have a structure that tells us who's connected to the database what are the connection to the database and for each",
    "start": "969279",
    "end": "975040"
  },
  {
    "text": "of those connection it will tell us which ones are active and which ones are idle",
    "start": "975040",
    "end": "980720"
  },
  {
    "text": "a performance insights looks into this structure once every second and it ignores the idle connection",
    "start": "980720",
    "end": "987519"
  },
  {
    "text": "it is only concerned with the active connections to your database so if a connection is active we get the",
    "start": "987519",
    "end": "993360"
  },
  {
    "text": "information like what sql is the user running who is the user what is the state they are on and if they are",
    "start": "993360",
    "end": "999360"
  },
  {
    "text": "waiting of some for some resources like maybe i o or a lock or a buffer access or whatnot",
    "start": "999360",
    "end": "1007920"
  },
  {
    "text": "so then there is this um there is also this very important metric called average active session or aas which you",
    "start": "1008079",
    "end": "1014800"
  },
  {
    "text": "can see in the bottom left left corner of the screenshot and this is really a measurement of the concurrency of the",
    "start": "1014800",
    "end": "1020480"
  },
  {
    "text": "workload on your database like how many sessions are concurrently active in the database",
    "start": "1020480",
    "end": "1026079"
  },
  {
    "text": "in addition to this i also wanted to introduce another really important graphic artifact that i have added to",
    "start": "1026079",
    "end": "1032079"
  },
  {
    "text": "the graph by checking the top left box and it is this dashed line that is called the max vcpu line",
    "start": "1032079",
    "end": "1038558"
  },
  {
    "text": "it kind of represents the number of vcpu on the host the database is running on",
    "start": "1038559",
    "end": "1044160"
  },
  {
    "text": "and this is very important because you know kind of say for example i have two processes uh that we want to run on cpu",
    "start": "1044160",
    "end": "1051520"
  },
  {
    "text": "and there are two vcpus in this case they can run in parallel each on a",
    "start": "1051520",
    "end": "1057039"
  },
  {
    "text": "different vcpu and they're not really bothering each other but now say if there is a third process",
    "start": "1057039",
    "end": "1062880"
  },
  {
    "text": "that wants to run then they will have to share those two vcpus which means that the process will",
    "start": "1062880",
    "end": "1068960"
  },
  {
    "text": "have to wait for the cpu and this can indicate a bottleneck now i have an idea about the levers i",
    "start": "1068960",
    "end": "1075919"
  },
  {
    "text": "see on the dashboard but looking at this graph i still have a really important question you know",
    "start": "1075919",
    "end": "1081440"
  },
  {
    "text": "what does this tell me about the state of my database is this good or bad is my database heavily loaded or not",
    "start": "1081440",
    "end": "1089200"
  },
  {
    "text": "so to answer those questions you know if the database load is above the max vcpu",
    "start": "1089200",
    "end": "1094480"
  },
  {
    "text": "line it means that somebody is waiting now they might be waiting for a cpu or",
    "start": "1094480",
    "end": "1099600"
  },
  {
    "text": "they might be waiting for something else which will be well indicated by the weight events that we see on the",
    "start": "1099600",
    "end": "1105039"
  },
  {
    "text": "dashboard now this will give an indication of the bottleneck and a possibility of optimization",
    "start": "1105039",
    "end": "1111280"
  },
  {
    "text": "so whenever you are tuning your database or troubleshooting a performance issue you would want to find out the resources",
    "start": "1111280",
    "end": "1117280"
  },
  {
    "text": "that sessions are waiting for and breaking down the database load by weight types can help you understand",
    "start": "1117280",
    "end": "1123520"
  },
  {
    "text": "what kind of database mechanism are chiefly contributing to the load and understanding what sql is majorly",
    "start": "1123520",
    "end": "1130320"
  },
  {
    "text": "contributing to the load can really help you understand what parts of your application are",
    "start": "1130320",
    "end": "1135440"
  },
  {
    "text": "responsible for this bottleneck lastly you also get these super useful",
    "start": "1135440",
    "end": "1141280"
  },
  {
    "text": "graphs called the counter metrics on the performance inside dashboard and counter metrics are operating",
    "start": "1141280",
    "end": "1146799"
  },
  {
    "text": "operating system and database performance metrics it allows you to select from a pool of counter metrics",
    "start": "1146799",
    "end": "1152799"
  },
  {
    "text": "which are nothing but a bunch of server status variables along with a couple of non-native content variables as well",
    "start": "1152799",
    "end": "1159520"
  },
  {
    "text": "now what are these non-native counters so these are essentially nothing but the kind of a derived metrics where two or",
    "start": "1159520",
    "end": "1165919"
  },
  {
    "text": "more service data status variables are used in calculation for ratios hit rates or latencies",
    "start": "1165919",
    "end": "1173600"
  },
  {
    "text": "so now that we have understood all these rda specific tools right you might think what about the database levers what",
    "start": "1173679",
    "end": "1179440"
  },
  {
    "text": "about my in-house scripts that i use um you know which are dependent on the system catalogs or maybe the database",
    "start": "1179440",
    "end": "1185600"
  },
  {
    "text": "logs and before we jump into that whole discussion let's quickly see if we have",
    "start": "1185600",
    "end": "1191039"
  },
  {
    "text": "any questions in the chat",
    "start": "1191039",
    "end": "1193840"
  },
  {
    "text": "thank you smitha for taking us through on these monitoring tools and performance insights so just one",
    "start": "1196160",
    "end": "1201200"
  },
  {
    "text": "question uh that is there can any of these monitoring tools can help optimize the",
    "start": "1201200",
    "end": "1208480"
  },
  {
    "text": "rds cost okay yeah let me take that tanya right so by default these monitoring tools are",
    "start": "1208480",
    "end": "1215679"
  },
  {
    "text": "designed in a way that they can help you in tandem to right size your database instance right which in turn so once",
    "start": "1215679",
    "end": "1222880"
  },
  {
    "text": "your database instance is the right size it will actually help you save cost for example one of the examples that asmita",
    "start": "1222880",
    "end": "1228960"
  },
  {
    "text": "gave right now right so when you're in case of performance insights let's just say your average active session is much",
    "start": "1228960",
    "end": "1235360"
  },
  {
    "text": "less than the number of max v cpu so you know that your db is uh is uh oversized",
    "start": "1235360",
    "end": "1240720"
  },
  {
    "text": "right similarly let's just say if your average active session is really really high and maybe your db is under size so",
    "start": "1240720",
    "end": "1246880"
  },
  {
    "text": "you can actually right size your db in addition to this if you think about things like cpu utilization metric and",
    "start": "1246880",
    "end": "1252880"
  },
  {
    "text": "cloud watch if it's constantly hundred percent then probably you are undersized on the cpu right you actually need more",
    "start": "1252880",
    "end": "1259360"
  },
  {
    "text": "cpu and similarly so what so in short the answer is that yes these tools in",
    "start": "1259360",
    "end": "1264960"
  },
  {
    "text": "tandem can actually help you right size your database which in turn will actually save you help and optimize the",
    "start": "1264960",
    "end": "1271120"
  },
  {
    "text": "cost yes correct that makes sense thanks webu i think this is going to be useful for",
    "start": "1271120",
    "end": "1277280"
  },
  {
    "text": "the audience over to you",
    "start": "1277280",
    "end": "1280960"
  },
  {
    "text": "awesome so let's move on to the fourth lever for rds monitoring which is your system",
    "start": "1282480",
    "end": "1288559"
  },
  {
    "start": "1283000",
    "end": "1597000"
  },
  {
    "text": "catalogs or database log um like mysql slow query for login queries running",
    "start": "1288559",
    "end": "1294000"
  },
  {
    "text": "longer than a specific defined period or audit logs for auditing db activities like who accessed or modified the data",
    "start": "1294000",
    "end": "1301120"
  },
  {
    "text": "or when was it done and so much more similarly with postgres you also have",
    "start": "1301120",
    "end": "1306480"
  },
  {
    "text": "access to postgresql error logs now postgres error logs can be configured to log time taken queries",
    "start": "1306480",
    "end": "1313440"
  },
  {
    "text": "lock weights and a lot more when logging is enabled amazon rds",
    "start": "1313440",
    "end": "1318720"
  },
  {
    "text": "rotates the table logs or deletes these log files at regular intervals in case of postgresql the default",
    "start": "1318720",
    "end": "1325120"
  },
  {
    "text": "retention period for error logs is one day and can be modified to up to three days while in the case of my sequel the",
    "start": "1325120",
    "end": "1331679"
  },
  {
    "text": "retention period can vary depending on the value for log output set in your parameter group",
    "start": "1331679",
    "end": "1338159"
  },
  {
    "text": "so for example if the log output is set to table so before that there are two values for log output which is stable",
    "start": "1338159",
    "end": "1344480"
  },
  {
    "text": "and five so in case your log output value is set to table which is the default value rotation occurs if the",
    "start": "1344480",
    "end": "1351280"
  },
  {
    "text": "space used by the table log is more than 20 percent of the allocated storage space or the size of all the logs",
    "start": "1351280",
    "end": "1357360"
  },
  {
    "text": "combined is greater than 10 gb and if you set the log output as file then",
    "start": "1357360",
    "end": "1363440"
  },
  {
    "text": "log files are examined every hour and log files more than two weeks old are deleted",
    "start": "1363440",
    "end": "1370400"
  },
  {
    "text": "one really cool thing about rds is that these database logs can be published to cloud watch for durability and analysis",
    "start": "1370400",
    "end": "1377120"
  },
  {
    "text": "so i've put an example of a simple architecture you can use for analyzing your database logs so your rds for mysql",
    "start": "1377120",
    "end": "1383840"
  },
  {
    "text": "logs with long query time enabled can be pushed to cloud watch where you can create filters on the specific patterns",
    "start": "1383840",
    "end": "1390000"
  },
  {
    "text": "found in your log events and publish cloudwatch metrics on those now it's worth noting that in case of",
    "start": "1390000",
    "end": "1396080"
  },
  {
    "text": "mysql you can only push logs to cloudwatch when the log output value is set to file",
    "start": "1396080",
    "end": "1401679"
  },
  {
    "text": "you can use the custom metrics to create alarm notifying you when abnormal conditions occur or action using lambda",
    "start": "1401679",
    "end": "1408320"
  },
  {
    "text": "or sms for example you can monitor the volume of a slow query occurring on your",
    "start": "1408320",
    "end": "1414320"
  },
  {
    "text": "db instance now slow queries can be a result of workload requirements however",
    "start": "1414320",
    "end": "1419919"
  },
  {
    "text": "you know unexpected changes in the volume of such queries can indicate performance problems as well",
    "start": "1419919",
    "end": "1426559"
  },
  {
    "text": "now we have looked at the tools that will help us to monitor our rds infrastructure as well as dive deep into",
    "start": "1426720",
    "end": "1432480"
  },
  {
    "text": "the database states but what about the state of my rds instance itself right",
    "start": "1432480",
    "end": "1438480"
  },
  {
    "text": "now let's say there was an outage of my application uh downtime on my production application and the whole team is all",
    "start": "1438480",
    "end": "1446159"
  },
  {
    "text": "over the place trying to figure out what actually went wrong amongst all the other possibilities that",
    "start": "1446159",
    "end": "1451919"
  },
  {
    "text": "could have led to this consider that in this case your rds database was the source of this issue maybe because there",
    "start": "1451919",
    "end": "1458320"
  },
  {
    "text": "was an unplanned reboot or a multi-ac failover now wouldn't it be great to be informed",
    "start": "1458320",
    "end": "1465120"
  },
  {
    "text": "timely of any such event that affected your databases well fortunately for us rds does offer",
    "start": "1465120",
    "end": "1471760"
  },
  {
    "text": "something called event subscription which does exactly that and these rds events indicate a change in the rds",
    "start": "1471760",
    "end": "1478480"
  },
  {
    "text": "environment rds kind of delivers these events to cloudwatch event and eventbridge in near",
    "start": "1478480",
    "end": "1483840"
  },
  {
    "text": "real time and from there you can set up an sns topic which will notify the subscribed",
    "start": "1483840",
    "end": "1489600"
  },
  {
    "text": "email address about these events or you can also utilize the events to trigger a lambda function which can kind of take",
    "start": "1489600",
    "end": "1495760"
  },
  {
    "text": "custom actions on your behalf now that we have understood all these levers we will we are ready to see all",
    "start": "1495760",
    "end": "1503200"
  },
  {
    "text": "of them in action in a demo uh which is going to be shown to us by vibu but before we do that let's quickly look",
    "start": "1503200",
    "end": "1509679"
  },
  {
    "text": "into the chat if we have any questions yep",
    "start": "1509679",
    "end": "1515279"
  },
  {
    "text": "one more question uh so what if i want to share store my general logs or the",
    "start": "1515279",
    "end": "1520960"
  },
  {
    "text": "slow query logs for long term can i do that with ideas for maybe say",
    "start": "1520960",
    "end": "1526480"
  },
  {
    "text": "compliance purpose purposes well absolutely that's a good that's a",
    "start": "1526480",
    "end": "1531919"
  },
  {
    "text": "good question so like i said right you can um you can publish your uh cloud watch logs too you can actually publish",
    "start": "1531919",
    "end": "1539279"
  },
  {
    "text": "these database logs to cloud cloudwatch so you what you have to do is simply in the case of mysql or even in the case of",
    "start": "1539279",
    "end": "1545919"
  },
  {
    "text": "postgrad sql while you're modifying your instances you can just kind of click on the boxes which says publish my database",
    "start": "1545919",
    "end": "1552640"
  },
  {
    "text": "logs to cloudwatch once absolutely once you have enabled them on your databases via parameter groups and once you do",
    "start": "1552640",
    "end": "1559279"
  },
  {
    "text": "that um cloudwatch logs kind of give you this capability of changing the retention period you can keep it to one",
    "start": "1559279",
    "end": "1565760"
  },
  {
    "text": "day one month two months or kind of even set it to never expire whatever your compliance is i hope that answers the",
    "start": "1565760",
    "end": "1572240"
  },
  {
    "text": "question thank you smitha that's really helpful",
    "start": "1572240",
    "end": "1578080"
  },
  {
    "text": "hey thanks asmata for that great insight into how you can store these logs for long term",
    "start": "1580480",
    "end": "1587039"
  },
  {
    "text": "now we'll probably switch to the demo thanks for your time on this",
    "start": "1587039",
    "end": "1593039"
  },
  {
    "text": "so okay we just switch to a demo give us a second okay so now we have to demo on",
    "start": "1593039",
    "end": "1599440"
  },
  {
    "start": "1597000",
    "end": "2301000"
  },
  {
    "text": "your screen and what you can see here is that we are in the very familiar rds dashboard",
    "start": "1599440",
    "end": "1605679"
  },
  {
    "text": "uh you see and on the screen you see a rds mysql and rds postgresql db instance",
    "start": "1605679",
    "end": "1611360"
  },
  {
    "text": "what we have done is we have put some load on top of them to actually show you how the monitoring levels that we",
    "start": "1611360",
    "end": "1616559"
  },
  {
    "text": "discussed till now can be leveraged please note that most of the things will remain same for both mysql and",
    "start": "1616559",
    "end": "1623120"
  },
  {
    "text": "positively sql here however if there there's a difference anywhere i'll let you know accordingly what i've done here",
    "start": "1623120",
    "end": "1628640"
  },
  {
    "text": "is i've clicked on the postgres sql demo or postgres demo database instance and",
    "start": "1628640",
    "end": "1633840"
  },
  {
    "text": "now what i'll do is i'll switch to the monitoring tab once i do that i can actually see the cloud watch metrics",
    "start": "1633840",
    "end": "1639760"
  },
  {
    "text": "associated with my rds instance from this i can actually get a top level view of what is happening i can further set",
    "start": "1639760",
    "end": "1647200"
  },
  {
    "text": "different relative intervals from top right say 1 hour 3 hours 6 hours 24 hours and so on so what it's really",
    "start": "1647200",
    "end": "1653600"
  },
  {
    "text": "going to give me is a one hour three hour six hours or whatever interval i put in kind of a high level view of all",
    "start": "1653600",
    "end": "1660720"
  },
  {
    "text": "the metrics or all the cloud watch metrics associated with my database as next steps what i'll do is i'll switch",
    "start": "1660720",
    "end": "1666399"
  },
  {
    "text": "to the logs and events tab here what we can do is we can create alarms on top of cloud watch metrics what you see is one",
    "start": "1666399",
    "end": "1673840"
  },
  {
    "text": "for cpu so whenever it goes 80 percent i can actually get a notification on my email similarly i if i have less than",
    "start": "1673840",
    "end": "1680960"
  },
  {
    "text": "maybe let's just say 20 free storage space available i'll proactively be informed because my alarm",
    "start": "1680960",
    "end": "1687120"
  },
  {
    "text": "is integrated with something called sns notification or simple notification service notifications right",
    "start": "1687120",
    "end": "1693760"
  },
  {
    "text": "and of course these are just examples and you can customize the thresholds as per your requirements so you might not",
    "start": "1693760",
    "end": "1699200"
  },
  {
    "text": "so according in accordance with your workload maybe let's just say seventy percent of sea utilization threshold",
    "start": "1699200",
    "end": "1704399"
  },
  {
    "text": "makes more sense to you so you can create a alarm on that now i've come back to the monitoring tab and i'll go",
    "start": "1704399",
    "end": "1711039"
  },
  {
    "text": "and set maybe the relative time to last 24 hours right so what i see here is uh",
    "start": "1711039",
    "end": "1719120"
  },
  {
    "text": "what i see here is a top level view of last 24 hours of all these metrics now",
    "start": "1719120",
    "end": "1724240"
  },
  {
    "text": "let me zoom in a bit on one of them what i can see is a cpu for last 24",
    "start": "1724240",
    "end": "1730399"
  },
  {
    "text": "hours and of course you do see a absolute hundred percent spike there however i don't see the absolute time",
    "start": "1730399",
    "end": "1736720"
  },
  {
    "text": "here i cannot really set the exact time for which i would want to troubleshoot and that's very important",
    "start": "1736720",
    "end": "1743279"
  },
  {
    "text": "for troubleshooting any historic element right although you cannot do that from the rds console but in order to do that you can",
    "start": "1743279",
    "end": "1749600"
  },
  {
    "text": "actually switch to the cloud watch console right and see the metrics there you can also create your own dashboard",
    "start": "1749600",
    "end": "1755120"
  },
  {
    "text": "in cloud watch on the metrics for demonstration purposes today what i've done is i've created a few dashboards",
    "start": "1755120",
    "end": "1760240"
  },
  {
    "text": "out of these metrics and we'll dive into them in this dashboard we actually provide you the capability to set",
    "start": "1760240",
    "end": "1765840"
  },
  {
    "text": "absolute time so you can set the exact time for which you need to troubleshoot",
    "start": "1765840",
    "end": "1770880"
  },
  {
    "text": "another cool capability that cloudwatch dashboards comes with is that you can populate this dashboard for multiple",
    "start": "1770880",
    "end": "1776880"
  },
  {
    "text": "databases as you can see i populated this on my sequel demo and postgres demo",
    "start": "1776880",
    "end": "1782240"
  },
  {
    "text": "now this can be very useful for relative analysis say if i have multiple dbs backing my",
    "start": "1782240",
    "end": "1787919"
  },
  {
    "text": "application with started load with this dashboard i'll actually have a relative view in case a particular database is",
    "start": "1787919",
    "end": "1794000"
  },
  {
    "text": "causing a lot of skewness with cpu or any other unexpected spike now coming",
    "start": "1794000",
    "end": "1799200"
  },
  {
    "text": "back to this uh scenario that we just discussed right uh this spike was actually the time whereby where my cpu",
    "start": "1799200",
    "end": "1805520"
  },
  {
    "text": "utilization was very high it was 100 percent for a good amount of time so i zoom in a bit on this",
    "start": "1805520",
    "end": "1812398"
  },
  {
    "text": "next what we can see is that the cpu metric is actually is in sync with db",
    "start": "1812559",
    "end": "1817679"
  },
  {
    "text": "connections which means that when the db connections are going up the cpu is going up the insights that i can draw",
    "start": "1817679",
    "end": "1824480"
  },
  {
    "text": "from here is that my db connections are probably the ones which are driving the high cpu on the instance now all that is",
    "start": "1824480",
    "end": "1832559"
  },
  {
    "text": "okay right i can have high level insights which are minute apart from each other but what about the seconds in",
    "start": "1832559",
    "end": "1838640"
  },
  {
    "text": "between where a burst might have happened which is especially useful for i o public double shooting scenarios",
    "start": "1838640",
    "end": "1845279"
  },
  {
    "text": "we can also see that the cpu is high but we still don't know what was actually causing the cpu to go high what's its",
    "start": "1845279",
    "end": "1851279"
  },
  {
    "text": "system weight or maybe nice to get understanding on these points we have something called enhanced monitoring for",
    "start": "1851279",
    "end": "1858080"
  },
  {
    "text": "this what i'll do is i'll go back to the rds console",
    "start": "1858080",
    "end": "1863440"
  },
  {
    "text": "and here under the monitoring tab i need to choose and as monitoring",
    "start": "1863440",
    "end": "1869760"
  },
  {
    "text": "with enhanced monitoring in place i'm actually able to see os level metrics i'm able to see cpu weight cpu nice also",
    "start": "1869760",
    "end": "1876720"
  },
  {
    "text": "the load average as you can see in the output of the top command further i can find data points at per second",
    "start": "1876720",
    "end": "1883039"
  },
  {
    "text": "granularity now this is very helpful to understand if there was a certain small burst in addition to this there are",
    "start": "1883039",
    "end": "1889120"
  },
  {
    "text": "multiple graphs with os level view that you can find in enhanced monitoring from the manage graphs point right so once",
    "start": "1889120",
    "end": "1896000"
  },
  {
    "text": "you enable enhanced monitoring and you can see the same here right so once you have enabled enhanced",
    "start": "1896000",
    "end": "1902320"
  },
  {
    "text": "monitoring the data that you saw in the form of metrics is also available in cloud watch under log groups once you",
    "start": "1902320",
    "end": "1908720"
  },
  {
    "text": "click on rds os metrics and go to a particular db you'll",
    "start": "1908720",
    "end": "1913840"
  },
  {
    "text": "actually be able to see this data in json format the log stream identifier for a particular db will have the same",
    "start": "1913840",
    "end": "1920720"
  },
  {
    "text": "name as the db instance resource id you can see here now coming back to the monitoring tab so",
    "start": "1920720",
    "end": "1927919"
  },
  {
    "text": "i'll switch to the monitoring tab again in the rds console all right and i can again go for my drop",
    "start": "1927919",
    "end": "1935120"
  },
  {
    "text": "down on the right side i can actually choose the os process list under the monitor tab now this is a view which is",
    "start": "1935120",
    "end": "1941519"
  },
  {
    "text": "similar to top command output and you can see the os process is running in mysql this will actually give you the",
    "start": "1941519",
    "end": "1948000"
  },
  {
    "text": "thread information and my sequel specific process info again all this is fine but what if i want to see the exact",
    "start": "1948000",
    "end": "1955360"
  },
  {
    "text": "query or what is happening at the database level for that what you can do is you can switch to the performance",
    "start": "1955360",
    "end": "1961519"
  },
  {
    "text": "insights from monitoring tab here i get the capability to choose my database it can be my sequel or postgres",
    "start": "1961519",
    "end": "1969840"
  },
  {
    "text": "again i can set the absolute time range for this case i'm going to choose",
    "start": "1969840",
    "end": "1975120"
  },
  {
    "text": "let's just say maybe a relative time range of last 24 hours",
    "start": "1975120",
    "end": "1980399"
  },
  {
    "text": "i can also choose or set some counter metrics and performance insights counter metrics are actually operating system",
    "start": "1981440",
    "end": "1987120"
  },
  {
    "text": "and database performance metrics in the performance inside dashboards and i can choose things like tuple phase tuple",
    "start": "1987120",
    "end": "1992159"
  },
  {
    "text": "inserted etcetera so let me do that so what i can do what i see here is",
    "start": "1992159",
    "end": "1999200"
  },
  {
    "text": "actually double fetched when my cpu is very high right so you can also zoom in at the time of",
    "start": "1999200",
    "end": "2005360"
  },
  {
    "text": "the spike once i do that and if i go further down",
    "start": "2005360",
    "end": "2010960"
  },
  {
    "text": "here i can actually able to see the exact weight event and in this case that cpu in addition to",
    "start": "2010960",
    "end": "2018960"
  },
  {
    "text": "this what i can do is i can actually see the exact query which was causing a particular load vertical weight event or",
    "start": "2018960",
    "end": "2025600"
  },
  {
    "text": "load uh in the case that we're discussing so far this analytical query was actually the culprit further when",
    "start": "2025600",
    "end": "2033200"
  },
  {
    "text": "dealing with aws support and they're helping you troubleshoot scenarios they'll actually share an aw support id",
    "start": "2033200",
    "end": "2038720"
  },
  {
    "text": "with you which you see on your screen and you can map the support id from here and see the exact query to ensure privacy of your",
    "start": "2038720",
    "end": "2046080"
  },
  {
    "text": "queries support engineers cannot see the exact query being run from the backend in addition to this you can also see top",
    "start": "2046080",
    "end": "2052638"
  },
  {
    "text": "host that is where the connection came from you can see the top users the user which actually ran the query you can see",
    "start": "2052639",
    "end": "2059440"
  },
  {
    "text": "top applications so in this case what i actually did is i ran a pg bench benchmark and as you can",
    "start": "2059440",
    "end": "2065440"
  },
  {
    "text": "see it's there and finally you can also see the top databases that is database on which the load is there now there are",
    "start": "2065440",
    "end": "2072079"
  },
  {
    "text": "a few things which are different in case of mysql and postgresql here",
    "start": "2072079",
    "end": "2077599"
  },
  {
    "text": "for example your database matrix or your counter metrics are more engine specific",
    "start": "2077599",
    "end": "2084960"
  },
  {
    "text": "similarly in mysql there are different weight events as you can see here",
    "start": "2084960",
    "end": "2090800"
  },
  {
    "text": "and so moving on now that we found out the culprit query uh which was responsible for the high ec utilization",
    "start": "2090800",
    "end": "2097599"
  },
  {
    "text": "you'll be thinking what about my existing tools can i take care of that or can i use those with rds",
    "start": "2097599",
    "end": "2104640"
  },
  {
    "text": "these tools typically takes locks as input to derive insights yes you can do that and for that what i've done here is",
    "start": "2104640",
    "end": "2111440"
  },
  {
    "text": "i've switched back to the rds console i've chosen the logs and events tab",
    "start": "2111440",
    "end": "2118400"
  },
  {
    "text": "if i go down here what i can actually do is actually see the postgresql error",
    "start": "2118960",
    "end": "2124079"
  },
  {
    "text": "logs you can view watch and download the same to keep them more verbose you can set parameters like let's just say the",
    "start": "2124079",
    "end": "2130079"
  },
  {
    "text": "log statement or the log min duration statement and other long waiting parameters from the left side pane",
    "start": "2130079",
    "end": "2135280"
  },
  {
    "text": "called parameter groups similarly if i see this for mysql you can actually see",
    "start": "2135280",
    "end": "2140480"
  },
  {
    "text": "your database logs you can see your audit logs error logs slow query locks and even general logs however by default",
    "start": "2140480",
    "end": "2146960"
  },
  {
    "text": "you only get error locks displayed here if you want to set up your slow query or general logs you need to enable them",
    "start": "2146960",
    "end": "2152800"
  },
  {
    "text": "like you would do in your on-premise environments via via parameter groups similarly your",
    "start": "2152800",
    "end": "2159599"
  },
  {
    "text": "audit logs can be enabled via option groups again from the left side of the screen",
    "start": "2159599",
    "end": "2165280"
  },
  {
    "text": "now these logs have limited retention period as we talked about earlier as well and if you want to retain these",
    "start": "2165280",
    "end": "2170720"
  },
  {
    "text": "logs for long term what you would want to do is you would want to click on modify instance which will land you on the screen and here",
    "start": "2170720",
    "end": "2177040"
  },
  {
    "text": "you want to choose export these lots to cloud watch",
    "start": "2177040",
    "end": "2182560"
  },
  {
    "text": "hey as you can see in the cloud watch side of it i've exported these logs to cloud",
    "start": "2182560",
    "end": "2188720"
  },
  {
    "text": "watch so i've exported my error log my audit log and my slow query logs to cloud watch by default the retention is",
    "start": "2188720",
    "end": "2195440"
  },
  {
    "text": "set to never expire but you can set it in accordance with your requirements further from here this can actually be a",
    "start": "2195440",
    "end": "2202640"
  },
  {
    "text": "feed for a third party tool or maybe your application or you can even create a cloud watch dashboard out of it i've",
    "start": "2202640",
    "end": "2208720"
  },
  {
    "text": "created a dashboard today to show you the possibilities what i see here is i can actually list the queries by time",
    "start": "2208720",
    "end": "2214880"
  },
  {
    "text": "the data here is from the slow query logs and you can set it in accordance with your",
    "start": "2214880",
    "end": "2219920"
  },
  {
    "text": "requirements uh the the detail that i can gather from here is actually i can see that the query was running for seven",
    "start": "2219920",
    "end": "2227200"
  },
  {
    "text": "seconds now this can be really really useful now let's just think about it right you have the slow query logs you",
    "start": "2227200",
    "end": "2232800"
  },
  {
    "text": "want to find a culprit query which was outlier you can just go here and you are able to see what was going wrong at a",
    "start": "2232800",
    "end": "2239359"
  },
  {
    "text": "particular scenario right that may be your db or maybe a query which was outlier and for 10 seconds which was",
    "start": "2239359",
    "end": "2245920"
  },
  {
    "text": "supposed to run run for maybe one second and you know how difficult this it is to do the same thing when you are maybe",
    "start": "2245920",
    "end": "2252240"
  },
  {
    "text": "scrolling through the log file so this is a lot better and gives you a much easier way to derive insights now going",
    "start": "2252240",
    "end": "2258880"
  },
  {
    "text": "back to the rds tab what i finally want to show you is events now these are same for mysql and postgres and these are",
    "start": "2258880",
    "end": "2265440"
  },
  {
    "text": "published in case of a configurations change maybe let's just say a failover or maybe a restart of the database",
    "start": "2265440",
    "end": "2271680"
  },
  {
    "text": "best part is that you can actually subscribe to these events via event subscription to get a notification for",
    "start": "2271680",
    "end": "2277520"
  },
  {
    "text": "the same and get a notification for the same what i've done here is i've created a notification for failover so you can",
    "start": "2277520",
    "end": "2284400"
  },
  {
    "text": "choose a particular or or instance as source i can choose the event type and i can even configure the sns topic to",
    "start": "2284400",
    "end": "2291119"
  },
  {
    "text": "receive notifications on my email now this was all from the demo from my side uh we'll switch back to the",
    "start": "2291119",
    "end": "2297280"
  },
  {
    "text": "presentation now next up what we have done is we are",
    "start": "2297280",
    "end": "2304320"
  },
  {
    "start": "2301000",
    "end": "2489000"
  },
  {
    "text": "going to share a few resources with you which will help you dive deep into the monitoring tools we'll discuss today we",
    "start": "2304320",
    "end": "2310079"
  },
  {
    "text": "have discussed today we'll also share the same in the description section once uh a recording of this is posted",
    "start": "2310079",
    "end": "2317680"
  },
  {
    "text": "uh so for the final time today uh any questions for us tanya",
    "start": "2317680",
    "end": "2323359"
  },
  {
    "text": "thank you vibhu uh for walking us through this demo one question so",
    "start": "2324079",
    "end": "2329760"
  },
  {
    "text": "that is is enhanced monitoring and performance insights are enabled by default for the",
    "start": "2329760",
    "end": "2335599"
  },
  {
    "text": "rds databases so i'll take that up so basically",
    "start": "2335599",
    "end": "2342640"
  },
  {
    "text": "enhanced monitoring and performance insights are not enabled by default but then you get this option of enabling it",
    "start": "2342640",
    "end": "2348079"
  },
  {
    "text": "while you're creating your databases or you can even later modify your rdsdb instances to enable these options",
    "start": "2348079",
    "end": "2354400"
  },
  {
    "text": "so it's completely optional but we definitely do recommend to enable these for a better performance troubleshooting",
    "start": "2354400",
    "end": "2361839"
  },
  {
    "text": "got it that's really helpful thank you esvata thank you vibhu i think there's one more comment uh that we have from",
    "start": "2361839",
    "end": "2368400"
  },
  {
    "text": "the audience somebody mentions hire me yeah sure so we acknowledge that and uh",
    "start": "2368400",
    "end": "2374800"
  },
  {
    "text": "we would pass you on the link to the amazon jobs so you can just go on to that page search for the jobs if that",
    "start": "2374800",
    "end": "2381599"
  },
  {
    "text": "suits your uh interest and description and do apply thank you",
    "start": "2381599",
    "end": "2388400"
  },
  {
    "text": "so i guess we don't have any further questions so we are good and with that",
    "start": "2389359",
    "end": "2396160"
  },
  {
    "text": "everyone we looked at uh you know different monitoring tools where our experts asmuta and bibu uh also",
    "start": "2396160",
    "end": "2403520"
  },
  {
    "text": "explained us little bit more of details uh going deeper and also",
    "start": "2403520",
    "end": "2408640"
  },
  {
    "text": "you know presenting a demo i hope that was useful if there are any questions that were not answered today you can",
    "start": "2408640",
    "end": "2415520"
  },
  {
    "text": "post your questions on repost.aws where one of our experts can provide you",
    "start": "2415520",
    "end": "2421440"
  },
  {
    "text": "with the answer to your questions and your question can also become a topic of one of our future shows",
    "start": "2421440",
    "end": "2427680"
  },
  {
    "text": "and if you have a feedback for us uh please check the chat box again on the right hand side uh there's a link to the",
    "start": "2427680",
    "end": "2433920"
  },
  {
    "text": "survey or you can also email us at aws supports you at amazon.com",
    "start": "2433920",
    "end": "2440319"
  },
  {
    "text": "we would really want to hear from you tell us what else you would like us uh to present on these episodes on the show",
    "start": "2440319",
    "end": "2448000"
  },
  {
    "text": "and with that uh i request all of you to also join us in two weeks from now on august 24th",
    "start": "2448000",
    "end": "2454640"
  },
  {
    "text": "at 10 a.m ist where we would be discussing and working with the security standards and controls to improve the",
    "start": "2454640",
    "end": "2461520"
  },
  {
    "text": "security posture as our next show so thank you again everyone uh for",
    "start": "2461520",
    "end": "2467280"
  },
  {
    "text": "joining us today happy cloud computing thanks folks",
    "start": "2467280",
    "end": "2473660"
  },
  {
    "text": "[Music]",
    "start": "2473660",
    "end": "2485260"
  },
  {
    "text": "you",
    "start": "2487839",
    "end": "2489920"
  }
]