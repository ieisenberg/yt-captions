[
  {
    "text": "all right hi everyone welcome welcome to",
    "start": "3830",
    "end": "9240"
  },
  {
    "text": "the container State of the Union my name is Deepak Singh and I run the containers org for AWS if you've been to reinvent",
    "start": "9240",
    "end": "17070"
  },
  {
    "text": "before you've probably heard me do this a couple of times first of all thank you it's Thursday it's a Thursday after a",
    "start": "17070",
    "end": "23460"
  },
  {
    "text": "pub crawl it's a Thursday after a keynote which is not in this hotel so for those of you who walked all the way",
    "start": "23460",
    "end": "28560"
  },
  {
    "text": "really appreciate it know when I gave this talk this time last year we were",
    "start": "28560",
    "end": "35460"
  },
  {
    "text": "starting to see the first meaningful production workloads come on in containers on AWS you know some people",
    "start": "35460",
    "end": "40590"
  },
  {
    "text": "have started a couple of years ago you know there's been folks who'd be using containers for much longer time but really last year was the first time we",
    "start": "40590",
    "end": "47460"
  },
  {
    "text": "started seeing multiple customers starting to run meaningful workloads on containers and in our case with DCs",
    "start": "47460",
    "end": "53160"
  },
  {
    "text": "primarily it was pretty clear the containers are a thing they weren't this thing they weren't just this fad that it",
    "start": "53160",
    "end": "58949"
  },
  {
    "text": "started because a bunch of you know a bunch of geeks liked it and there people are starting to build real meaningful",
    "start": "58949",
    "end": "64018"
  },
  {
    "text": "applications they were starting to ask for more and more features that are relevant to running applications in",
    "start": "64019",
    "end": "69180"
  },
  {
    "text": "production so in many ways it's kind of nice that you know customers of ours who",
    "start": "69180",
    "end": "75840"
  },
  {
    "text": "have grown up on ec2 and we're started building these architectures and this is kind of what happened you had folks like",
    "start": "75840",
    "end": "82560"
  },
  {
    "text": "Netflix help because the Adrienne's name Adrienne's the one who said this who had started building what they called and I",
    "start": "82560",
    "end": "88560"
  },
  {
    "text": "guess now I call cloud native architectures decoupled applications using managed services when possible",
    "start": "88560",
    "end": "94350"
  },
  {
    "text": "taking advantage of the fact that AWS has multiple regions taking advantage of",
    "start": "94350",
    "end": "100200"
  },
  {
    "text": "the elasticity and along the way came containers and this is my assumption",
    "start": "100200",
    "end": "105920"
  },
  {
    "text": "seems to at least be like that is that containers made this transition from monolithic applications to cloud native",
    "start": "105920",
    "end": "113130"
  },
  {
    "text": "applications a little easier for many people and as the tooling became better and better as the software and",
    "start": "113130",
    "end": "120180"
  },
  {
    "text": "management services that they had around containers got better and better our customers started taking this journey from containers from building things on",
    "start": "120180",
    "end": "128910"
  },
  {
    "text": "ec2 potentially putting them in JVMs to running them in things like docker last year we had will wipe from map box",
    "start": "128910",
    "end": "137000"
  },
  {
    "text": "talk about the journey that map box had taken and the reasons that there started running on containers the ones that",
    "start": "137000",
    "end": "142400"
  },
  {
    "text": "usually that you usually expect so how has the customer like that evolved with",
    "start": "142400",
    "end": "149330"
  },
  {
    "text": "and they've had a bunch of experience running containers in production over the last couple of years so no to talk",
    "start": "149330",
    "end": "154910"
  },
  {
    "text": "about how map box has gone from building and growing the container based",
    "start": "154910",
    "end": "161630"
  },
  {
    "text": "infrastructure to the lessons that a customer that's been experienced it's running containers for a couple of years halves and some of the non-obvious",
    "start": "161630",
    "end": "168110"
  },
  {
    "text": "lessons of running containers I'd like to invite from a box Francisca Schmidt",
    "start": "168110",
    "end": "173890"
  },
  {
    "text": "hi everyone I'm really excited to be here today thank you Deepak for the introduction so maca box",
    "start": "184280",
    "end": "191730"
  },
  {
    "text": "has been on a journey of migrating to ECS over the last year so if you ask 10",
    "start": "191730",
    "end": "197310"
  },
  {
    "text": "developers why you would want to continue eyes your infrastructure's chances are the answers are you get are",
    "start": "197310",
    "end": "202920"
  },
  {
    "text": "going to get something like this cost reduction developer productivity and",
    "start": "202920",
    "end": "208489"
  },
  {
    "text": "faster scaling and those are the reasons why MapBox decided to migrate our infrastructure as well like Deepak said",
    "start": "208489",
    "end": "216060"
  },
  {
    "text": "a year ago we're on the stage talking about how we're going to start our journey and now I'm back to tell you about how it went",
    "start": "216060",
    "end": "221100"
  },
  {
    "text": "we're now running 95 percent of our infrastructure on ECS and through this journey we found some non obvious or",
    "start": "221100",
    "end": "228090"
  },
  {
    "text": "hidden benefits that we didn't anticipate when we started out and I want to share those with you today my",
    "start": "228090",
    "end": "234450"
  },
  {
    "text": "name is Francisco I'm apart from engineer at matte box so the reasons we",
    "start": "234450",
    "end": "239820"
  },
  {
    "text": "decided to migrate to ECS like I said number one cost savings we knew that running on ECS we would be able to place",
    "start": "239820",
    "end": "246690"
  },
  {
    "text": "multiple tasks on any ec2 therefore really simply just cutting down on our bills number two fast and more flexible",
    "start": "246690",
    "end": "253709"
  },
  {
    "text": "scaling as a start up in the kind of web traffic space we would be we have to be",
    "start": "253709",
    "end": "260579"
  },
  {
    "text": "able to respond to incoming waves of traffic really quickly without being over scaled at all times because that",
    "start": "260579",
    "end": "267090"
  },
  {
    "text": "would be a waste of resources and money ECS allows us to scale by starting up",
    "start": "267090",
    "end": "272970"
  },
  {
    "text": "new containers and fast in a matter of seconds whereas on ec2 of course it's a matter of in a ballpark of minutes to",
    "start": "272970",
    "end": "280410"
  },
  {
    "text": "food and provision a new ec2 so that was a really interesting benefit for us and",
    "start": "280410",
    "end": "287240"
  },
  {
    "text": "number three increased developer productivity of course and stocker launched has been become really obvious",
    "start": "287240",
    "end": "293039"
  },
  {
    "text": "to many people that docker is just a great tool for developers to become more",
    "start": "293039",
    "end": "298289"
  },
  {
    "text": "productive by reducing iteration cycles from being in a development environment to production and we wanted to read",
    "start": "298289",
    "end": "305460"
  },
  {
    "text": "those benefits for us as well there's a",
    "start": "305460",
    "end": "310500"
  },
  {
    "text": "few non-obvious benefits and I'm going to go into each of these in more detail in a second so map ups is",
    "start": "310500",
    "end": "316900"
  },
  {
    "text": "mapping and location platform for developers we offer a range of tools and that you can use to build mapping and",
    "start": "316900",
    "end": "324100"
  },
  {
    "text": "location services with your applications we have map services that render",
    "start": "324100",
    "end": "330040"
  },
  {
    "text": "beautiful maps we have geocoding and directions API s and we have developer tools such as SDKs for iOS and Android",
    "start": "330040",
    "end": "336520"
  },
  {
    "text": "and we recently even launched a unity SDK that you can use to make games with",
    "start": "336520",
    "end": "341830"
  },
  {
    "text": "maps and locations which is super cool our traffic and production systems look",
    "start": "341830",
    "end": "347770"
  },
  {
    "text": "something like this we have processing jobs which are batch processing jobs and data analysis jobs",
    "start": "347770",
    "end": "353310"
  },
  {
    "text": "and we run those with the ECS run task API and so for example we have a",
    "start": "353310",
    "end": "358570"
  },
  {
    "text": "pipeline that gets input data from OpenStreetMap and uses us to render beautiful maps and then we have API",
    "start": "358570",
    "end": "365050"
  },
  {
    "text": "services which are just if HTTP web services this respond to user requests",
    "start": "365050",
    "end": "370750"
  },
  {
    "text": "so for example we have an API map service that gets requests let's say I want to mapped have for a certain",
    "start": "370750",
    "end": "376810"
  },
  {
    "text": "coordinate and with a certain map style what does the traffic look like on these both two types of services so on the",
    "start": "376810",
    "end": "384910"
  },
  {
    "text": "processing side we run up to 70,000 tasks within one hour so those might be long running tasks that have gone for",
    "start": "384910",
    "end": "391870"
  },
  {
    "text": "days or short tasks that run only a matter of seconds we have up to 200 ec2",
    "start": "391870",
    "end": "397180"
  },
  {
    "text": "that peak on the processing side and these clusters are running into AWS regions on the API side it's a little",
    "start": "397180",
    "end": "405220"
  },
  {
    "text": "bit different we have 500 to 15,000 tasks and containers in any given clusters which",
    "start": "405220",
    "end": "411100"
  },
  {
    "text": "corresponds to a number 40 to 200 ec2 s and our API services are currently",
    "start": "411100",
    "end": "416170"
  },
  {
    "text": "co-located in seven AWS regions which is cool so we're running all over the world",
    "start": "416170",
    "end": "421480"
  },
  {
    "text": "in different regions in the US Ireland and asia-pacific like Singapore so let's",
    "start": "421480",
    "end": "428380"
  },
  {
    "text": "look at these benefits the first one is open source private infrastructure so",
    "start": "428380",
    "end": "433660"
  },
  {
    "text": "when we started migrating to ECS we started thinking about how we can manage",
    "start": "433660",
    "end": "441880"
  },
  {
    "text": "our repositories in a way to adapt them to ECS and what ended up happening is",
    "start": "441880",
    "end": "448660"
  },
  {
    "text": "that we separated a lot of the infrastructure code from the actual application code since now and as",
    "start": "448660",
    "end": "455139"
  },
  {
    "text": "servicers developers didn't have to think about how to boot a provision an EC to remove that code from the service",
    "start": "455139",
    "end": "461650"
  },
  {
    "text": "repositories this was beneficial in a variety of ways our service developers",
    "start": "461650",
    "end": "466960"
  },
  {
    "text": "didn't need to touch the infrastructure scripts anymore and we also had therefore centralized the infrastructure",
    "start": "466960",
    "end": "472419"
  },
  {
    "text": "scripts putting all the EECS related code in one place which was much easier",
    "start": "472419",
    "end": "477430"
  },
  {
    "text": "for us platform developers to manage and it had the sort of side benefit that we could now open source our application",
    "start": "477430",
    "end": "484060"
  },
  {
    "text": "code a lot easier since all of the infrastructure related craft code let's say was removed from the application",
    "start": "484060",
    "end": "490870"
  },
  {
    "text": "code made it much easier to open source things and we open sourced the right variety of repositories that you can",
    "start": "490870",
    "end": "496510"
  },
  {
    "text": "check out on our github at map box so migrating to EECS helped us separate our",
    "start": "496510",
    "end": "502960"
  },
  {
    "text": "infrastructure from the core domain code which is beneficial in multiple ways",
    "start": "502960",
    "end": "508470"
  },
  {
    "text": "next consistency across the organization so when we started writing to ECS we",
    "start": "508470",
    "end": "514510"
  },
  {
    "text": "touched of course all of our repositories and try to adapt them to work in a container so the first thing",
    "start": "514510",
    "end": "520539"
  },
  {
    "text": "you do when you try to do that is normally like writing a docker file and then maybe some more ECS related things",
    "start": "520539",
    "end": "526920"
  },
  {
    "text": "like any developer would do we noticed that we were kind of writing the same code over and over again so we wrote a",
    "start": "526920",
    "end": "532870"
  },
  {
    "text": "shared library to handle this for us cyber is called ECS api unfortunately",
    "start": "532870",
    "end": "538839"
  },
  {
    "text": "not open-source yet and then it's the confirmation helpful ID for setting up ECS based HTTP api and setting this up",
    "start": "538839",
    "end": "546940"
  },
  {
    "text": "for all of our API services turned out to be really great help to have more consistency across our and cross our",
    "start": "546940",
    "end": "554440"
  },
  {
    "text": "code bases so we have now better patterns and conventions for backpass best practices across our ECS use and we",
    "start": "554440",
    "end": "562420"
  },
  {
    "text": "were able to reduce the copy-paste shared functionalities and it was much easier to pick up contexts and unknown",
    "start": "562420",
    "end": "568450"
  },
  {
    "text": "projects this way so for us the system",
    "start": "568450",
    "end": "573640"
  },
  {
    "text": "migration to ecs was really an opportunity as well to kind of stop and rethink the way we were designing our",
    "start": "573640",
    "end": "579370"
  },
  {
    "text": "systems and to reconsider this different philosophies so that's also a chance for you if",
    "start": "579370",
    "end": "585160"
  },
  {
    "text": "you're thinking about migrating adding new systems to think about how you want your code bases to look and to apply",
    "start": "585160",
    "end": "590319"
  },
  {
    "text": "these philosophies and take a step to rethink alright cost clarity um so we're",
    "start": "590319",
    "end": "596980"
  },
  {
    "text": "running on spot instances already before migrating to ecs but only since being",
    "start": "596980",
    "end": "602589"
  },
  {
    "text": "running on ECS we're able to fully leverage spot we're now running on spot by default this is possible for us on",
    "start": "602589",
    "end": "611559"
  },
  {
    "text": "ECS for a few ways one like I said at the beginning we have faster start test start up now so it's much easier to",
    "start": "611559",
    "end": "618189"
  },
  {
    "text": "handle any spot disruptions that might happen if you do have a spot disruption",
    "start": "618189",
    "end": "624189"
  },
  {
    "text": "it's also easier to actually mitigate it because you can launch more tasks and",
    "start": "624189",
    "end": "629410"
  },
  {
    "text": "therefore avoid potential fallout and we've also diversified our clusters because now ECS tasks are more",
    "start": "629410",
    "end": "636300"
  },
  {
    "text": "obstructed and oblivious to the instances they're running on it's easier to have different kinds of diverse",
    "start": "636300",
    "end": "642579"
  },
  {
    "text": "instances and be not sort of locked into one specific instance type with one",
    "start": "642579",
    "end": "648610"
  },
  {
    "text": "specific spot price so we save costs through running on spot by default and",
    "start": "648610",
    "end": "653920"
  },
  {
    "text": "we gain some clarity through monitoring systems that we've built and lastly empowering teams so the mission of the",
    "start": "653920",
    "end": "660519"
  },
  {
    "text": "platform team at map box is really to empower other developer teams to running their code successfully on AWS and",
    "start": "660519",
    "end": "666879"
  },
  {
    "text": "running on ECS has made this easier for us in a few ways we gave our developers",
    "start": "666879",
    "end": "673059"
  },
  {
    "text": "better tools to launch code faster and we gave them more ownership over custom spendings with a range of monitoring",
    "start": "673059",
    "end": "679629"
  },
  {
    "text": "tools that we built so these are the non-obvious benefits that we found in",
    "start": "679629",
    "end": "685779"
  },
  {
    "text": "our migration to ECS and tomorrow morning I'm giving a session a breakout session that's actually come 356 not",
    "start": "685779",
    "end": "692920"
  },
  {
    "text": "come four or five and I'm going to give you a lot more technical details on how we manage this migration journey over",
    "start": "692920",
    "end": "698589"
  },
  {
    "text": "the last year thank you all so much",
    "start": "698589",
    "end": "702509"
  },
  {
    "text": "thank you very much wow thanks and it's always great to see customers evolve the",
    "start": "704570",
    "end": "714900"
  },
  {
    "text": "usage of a service I mean this is we have seen this with ec2 we've seen this for things like lambda being asked to be",
    "start": "714900",
    "end": "720600"
  },
  {
    "text": "seeing this at containers you know in the early days of containers people Eastern simple deployment jobs they",
    "start": "720600",
    "end": "725670"
  },
  {
    "text": "moved autumn so slightly more decoupled services micro services but taking advantage of things like spot taking",
    "start": "725670",
    "end": "733200"
  },
  {
    "text": "advantage of diverse instance types and not getting blocked by a pool getting constrained for a particular period of",
    "start": "733200",
    "end": "739230"
  },
  {
    "text": "time those are things that even we had not thought of when we started when we launched TCS and in a great example of",
    "start": "739230",
    "end": "745080"
  },
  {
    "text": "that was that earlier this summer we added the ability to launch spot fleets",
    "start": "745080",
    "end": "750450"
  },
  {
    "text": "directly from the ECS console because folks like Francisca and company and started doing that you know by deep as a",
    "start": "750450",
    "end": "756780"
  },
  {
    "text": "way of running their infrastructure so show of hands who knows what this is",
    "start": "756780",
    "end": "762030"
  },
  {
    "text": "where this is from what are you not allowed to great a few people yes so for",
    "start": "762030",
    "end": "773370"
  },
  {
    "text": "those of you who don't know this is from a song that Frodo",
    "start": "773370",
    "end": "778860"
  },
  {
    "text": "I think I'll step in and Sam sang when they set out on the journey to breathe where they're gonna meet Gandalf it's",
    "start": "778860",
    "end": "785040"
  },
  {
    "text": "from Lord of the Rings I like this and it's particularly appropriate for this because I believe it has two messages",
    "start": "785040",
    "end": "791010"
  },
  {
    "text": "one it is the start of a grand journey hopefully this one doesn't end us end up in Mordor but still and many people who",
    "start": "791010",
    "end": "799980"
  },
  {
    "text": "are starting to adopt containers especially those who are coming from traditional monolithic infrastructures and using containers as a way to build",
    "start": "799980",
    "end": "806250"
  },
  {
    "text": "new waves of applications for them it is kind of in that way but the second comes from people who have built cloud native",
    "start": "806250",
    "end": "812730"
  },
  {
    "text": "infrastructures before are and are evolving them and quite honestly for us and that is that you know as you're as",
    "start": "812730",
    "end": "820620"
  },
  {
    "text": "you go down roads new roads you often find that you get to the roads that you already had traveled on so you you know",
    "start": "820620",
    "end": "826680"
  },
  {
    "text": "in our so if you'll think about it a little more it's basically our yes this is new but you can always learn from",
    "start": "826680",
    "end": "832800"
  },
  {
    "text": "lessons from the past and we find ourselves doing that again and again and again we shouldn't be a surprise but it's good to",
    "start": "832800",
    "end": "838560"
  },
  {
    "text": "keep that in mind so three years ago I stood not in this state somewhere in the",
    "start": "838560",
    "end": "843779"
  },
  {
    "text": "Venetian talking about the preview of VCs we had we had just launched it and you",
    "start": "843779",
    "end": "852600"
  },
  {
    "text": "know that over those three years our customers have taken us along the journey if you've developed features you'll hear about some of them today you",
    "start": "852600",
    "end": "858990"
  },
  {
    "text": "you'll hear about some of the journeys that a customers have taken and some of that kinds of applications that they're building but let's start where it began",
    "start": "858990",
    "end": "867240"
  },
  {
    "text": "so early 2014 this is about a year 9 months after docker got launched we",
    "start": "867240",
    "end": "872880"
  },
  {
    "text": "started hearing a lot about hey Amazon build us a docker service for those of",
    "start": "872880",
    "end": "878430"
  },
  {
    "text": "you have seen me talk before I often say nobody ever asked us for an Alexi service before that so there must be",
    "start": "878430",
    "end": "884130"
  },
  {
    "text": "something here so we started paying attention and it became clear that there were a few reasons that people care one",
    "start": "884130",
    "end": "889440"
  },
  {
    "text": "was the polyglot packaging you could write applications in whichever language you wanted package up its dependencies",
    "start": "889440",
    "end": "894589"
  },
  {
    "text": "you could ship it and the runtime was portable for the most part it ran on any",
    "start": "894589",
    "end": "899640"
  },
  {
    "text": "modern Linux kernel if you ran on your laptop it ran on your you know VPS",
    "start": "899640",
    "end": "905250"
  },
  {
    "text": "server somewhere it ran on AWS it ran somewhere else and for them for again for the most part these things just ran",
    "start": "905250",
    "end": "910890"
  },
  {
    "text": "the way they were supposed to and perhaps most importantly it was pretty easy to get started you know there's",
    "start": "910890",
    "end": "917640"
  },
  {
    "text": "this docker book that a few people have written if you get started with it you're probably done and running your",
    "start": "917640",
    "end": "923130"
  },
  {
    "text": "first containers in a few minutes in ten minutes or so it's not that difficult but then comes reality here to stitch",
    "start": "923130",
    "end": "930510"
  },
  {
    "text": "together applications applications aren't made of single containers applications don't get run by one team",
    "start": "930510",
    "end": "936779"
  },
  {
    "text": "usually they are more than one team if you're a large company you are not in the same place you have multiple",
    "start": "936779",
    "end": "941910"
  },
  {
    "text": "applications potentially different compliance regimes and different ways of building software so how do you solve",
    "start": "941910",
    "end": "947279"
  },
  {
    "text": "these problems and for that you have to jump into the deep end right off the bat so when we started thinking about how to",
    "start": "947279",
    "end": "955290"
  },
  {
    "text": "build a container management service there was really nothing out there you had HPC schedulers that had been",
    "start": "955290",
    "end": "961800"
  },
  {
    "text": "around for a while but they solve a very specific problem you had mazes and yarn and maces",
    "start": "961800",
    "end": "967530"
  },
  {
    "text": "at that time in particular a lot of its heritage in HPC systems that's how they had started it had and",
    "start": "967530",
    "end": "974290"
  },
  {
    "text": "but had built a two-level system that was nice yeah okay let's take a look at that Google had just published the",
    "start": "974290",
    "end": "981610"
  },
  {
    "text": "somewhat now well-known paper on what was called Omega which had which not only had insights into how they were",
    "start": "981610",
    "end": "990070"
  },
  {
    "text": "running the cluster scheduler but how it compared to other systems and you also",
    "start": "990070",
    "end": "995140"
  },
  {
    "text": "had the first few sort of native container management systems they used to be this thing called Flynn I don't",
    "start": "995140",
    "end": "1000750"
  },
  {
    "text": "think it's around anymore or maybe but it's pretty fascinating it was complex but it had abstractions that seemed to",
    "start": "1000750",
    "end": "1006810"
  },
  {
    "text": "make a lot of sense so we looked at all of those try to understand what we could learn from them and how they might apply",
    "start": "1006810",
    "end": "1012240"
  },
  {
    "text": "to the way we wanted to build our services but in the end what we really really ended up looking at was the way",
    "start": "1012240",
    "end": "1017820"
  },
  {
    "text": "we were running our own infrastructure you see - had been around at that time for seven years it operates at massive",
    "start": "1017820",
    "end": "1023220"
  },
  {
    "text": "scale it solves a big scheduling problem so there are lots of lessons to be learned but we also learned from the",
    "start": "1023220",
    "end": "1028530"
  },
  {
    "text": "abstractions that people have started using to run containers and so for that for us that meant building a foundation",
    "start": "1028530",
    "end": "1034370"
  },
  {
    "text": "and the foundation was you had to maintain like you did not want people to",
    "start": "1034370",
    "end": "1040680"
  },
  {
    "text": "run their own cluster managers like the container management system is fine but nobody wanted to run zookeeper",
    "start": "1040680",
    "end": "1046980"
  },
  {
    "text": "nobody wanted to try and figure out how to spin up a cluster and try and figure out placement or at least most people",
    "start": "1046980",
    "end": "1052260"
  },
  {
    "text": "didn't so we needed to solve that problem our customers in running an ec2 for years the ec2 us oh you know well",
    "start": "1052260",
    "end": "1058860"
  },
  {
    "text": "over a million customers you needed to figure they were familiar with the API they were familiar with how it worked so",
    "start": "1058860",
    "end": "1064050"
  },
  {
    "text": "you needed to build something that they could get started with really quickly and perhaps most importantly they wanted",
    "start": "1064050",
    "end": "1069510"
  },
  {
    "text": "the same capabilities that ec2 had they wanted the same power and you're still not there yet but that's what they told",
    "start": "1069510",
    "end": "1075660"
  },
  {
    "text": "us them and so there are these yes we started in the preview other than half",
    "start": "1075660",
    "end": "1082980"
  },
  {
    "text": "three years ago we went GA a few months after that and we've kept releasing features since then probably if I",
    "start": "1082980",
    "end": "1089100"
  },
  {
    "text": "remember correctly about 55 not counting the ones this week since then and this year we've been busy",
    "start": "1089100",
    "end": "1094770"
  },
  {
    "text": "including I'll call it a couple because there are somewhat recent and you may not have heard about them so a few",
    "start": "1094770",
    "end": "1101130"
  },
  {
    "text": "months some months ago we after windows added docker support we announced a preview of",
    "start": "1101130",
    "end": "1106660"
  },
  {
    "text": "docker for ECF of windows containers free CS this week we released an optimized army that we've been working",
    "start": "1106660",
    "end": "1112480"
  },
  {
    "text": "with folks at Microsoft and doc and doc Iran to improve start performance",
    "start": "1112480",
    "end": "1117700"
  },
  {
    "text": "improve stability get the networking to a place that we were comfortable and we consider this as generally available now",
    "start": "1117700",
    "end": "1123880"
  },
  {
    "text": "next week we'll have blog posts and marketing material that will tell you that Windows containers and ECS are GA",
    "start": "1123880",
    "end": "1128950"
  },
  {
    "text": "so you can run them in production and will be this super excited to see what people are doing there are people who",
    "start": "1128950",
    "end": "1134530"
  },
  {
    "text": "run Windows containers and not just for trying to migrate monolithic",
    "start": "1134530",
    "end": "1139600"
  },
  {
    "text": "applications there's a bunch of dotnet developers who really like that platform and there's a couple of other I already",
    "start": "1139600",
    "end": "1145990"
  },
  {
    "text": "mentioned the the spot the spot fleet integration in the console the other thing that I will add is regional",
    "start": "1145990",
    "end": "1151690"
  },
  {
    "text": "expansion we have customers like map box that are now running in seven regions and I think eight hopefully some time",
    "start": "1151690",
    "end": "1156820"
  },
  {
    "text": "soon and there's but there's still a couple of regions commercially that we are not available in and some of our",
    "start": "1156820",
    "end": "1162520"
  },
  {
    "text": "non-commercial regions like gov cloud that we need to go in and our hope is that very soon will be available every",
    "start": "1162520",
    "end": "1168190"
  },
  {
    "text": "AWS region globally and then every new region when it comes up ECS any CR will be there by default so",
    "start": "1168190",
    "end": "1175270"
  },
  {
    "text": "why do you customers use ECS these are some of the obvious benefits the that were mentioned earlier the first one is",
    "start": "1175270",
    "end": "1181270"
  },
  {
    "text": "speed in the cloud speed tends to be the reason why people move to the cloud",
    "start": "1181270",
    "end": "1186429"
  },
  {
    "text": "agility is what you know anytime you talk to someone especially larger enterprises why why using AWS oh we can",
    "start": "1186429",
    "end": "1193059"
  },
  {
    "text": "move a lot faster that's cool container seems to have have made that even more tenable for customers and so what",
    "start": "1193059",
    "end": "1201160"
  },
  {
    "text": "happens when you are one of the work when you are the world's largest restaurant company that's McDonald's and",
    "start": "1201160",
    "end": "1208270"
  },
  {
    "text": "that you have to develop a new platform to give customers more burgers apparently people like eating burgers I",
    "start": "1208270",
    "end": "1214690"
  },
  {
    "text": "do and to talk about how McDonald's solve that problem and how they got built a new platform to get food",
    "start": "1214690",
    "end": "1221590"
  },
  {
    "text": "delivery to customers in less than four months here's clean our gonna sing get from McDonald's",
    "start": "1221590",
    "end": "1228120"
  },
  {
    "text": "[Applause] thanks debuck and it's always amazing to",
    "start": "1230940",
    "end": "1236549"
  },
  {
    "text": "see the level of engineering and innovation that goes into building Amazon container services graph alone",
    "start": "1236549",
    "end": "1243480"
  },
  {
    "text": "everybody my name is Dylan aggressing ha I hope you guys are enjoying Raymond I'm",
    "start": "1243480",
    "end": "1248639"
  },
  {
    "text": "here to talk about how we at McDonald's use ECS to massively scale our home",
    "start": "1248639",
    "end": "1254669"
  },
  {
    "text": "delivery platform so let's get right to it here's some interesting facts about us",
    "start": "1254669",
    "end": "1259769"
  },
  {
    "text": "we have about 37 thousand restaurants spread across 120 countries globally and",
    "start": "1259769",
    "end": "1265230"
  },
  {
    "text": "we proudly serve about 64 million plus customers on a daily basis right so this",
    "start": "1265230",
    "end": "1271559"
  },
  {
    "text": "probably will give you a idea of our scale and mind you this is also distributed scale with a very large customer network",
    "start": "1271559",
    "end": "1279529"
  },
  {
    "text": "so let's talk a bit about a home delivery solution um think of this as you as a customer using a third-party",
    "start": "1279529",
    "end": "1286169"
  },
  {
    "text": "delivery platform such as uber each to order and get McDonald's for delivered",
    "start": "1286169",
    "end": "1291720"
  },
  {
    "text": "right so we work with multiple delivery partners here in the US we use uber uber eats in countries in Europe as well as",
    "start": "1291720",
    "end": "1299940"
  },
  {
    "text": "countries in Asia we use other partners so I've kind of used like a generic flow to go through the experience using our",
    "start": "1299940",
    "end": "1306090"
  },
  {
    "text": "own mobile mobile app first the customer picks a restaurant goes through",
    "start": "1306090",
    "end": "1312990"
  },
  {
    "text": "basically the menu of the restaurant right so I've used to use our signature crafted sandwiches right to illustrate",
    "start": "1312990",
    "end": "1321499"
  },
  {
    "text": "next you build your order basket right so this is based on what you want to eat and then you check out at this point",
    "start": "1321499",
    "end": "1328710"
  },
  {
    "text": "right once you check out when the delivery networks driver or rider is",
    "start": "1328710",
    "end": "1334740"
  },
  {
    "text": "close to the restaurant the order is released to the restaurant to make your food fresh right once the food is then",
    "start": "1334740",
    "end": "1341669"
  },
  {
    "text": "delivered to the driver the driver then basically comes and delivers to you so this is basically the business solution",
    "start": "1341669",
    "end": "1347399"
  },
  {
    "text": "that we used our easiest to really scale all right so what was some of the",
    "start": "1347399",
    "end": "1353429"
  },
  {
    "text": "business requirements right so Deepak mentioned that at the beginning the new norm is speed to market right so you go",
    "start": "1353429",
    "end": "1360659"
  },
  {
    "text": "from an idea to a concept to development to massive scale and this took us about four months to do",
    "start": "1360659",
    "end": "1367450"
  },
  {
    "text": "right and that's kind of the new norm right so you want a concept you want to really scale right second thing is the",
    "start": "1367450",
    "end": "1373960"
  },
  {
    "text": "scalability and reliability right so we certified our platform for 250 to 500",
    "start": "1373960",
    "end": "1379149"
  },
  {
    "text": "thousand orders for the P cover mind you the P cover happens three times for us",
    "start": "1379149",
    "end": "1385749"
  },
  {
    "text": "every day right you got to eat this breakfast lunch and dinner right to put",
    "start": "1385749",
    "end": "1391450"
  },
  {
    "text": "this in perspective this equates to about 20,000 transactions per second",
    "start": "1391450",
    "end": "1396700"
  },
  {
    "text": "right so that's the scale that we're talking about here multi-country support",
    "start": "1396700",
    "end": "1401710"
  },
  {
    "text": "this is again not just a single country you've got to work in all those countries that I mentioned right those",
    "start": "1401710",
    "end": "1408340"
  },
  {
    "text": "countries have different business rules and also different delivery partners to work with right so that was another thing finally the cost sensitivity for",
    "start": "1408340",
    "end": "1415690"
  },
  {
    "text": "us right so again we're not selling big screen TVs through our through this platform you're talking about an average",
    "start": "1415690",
    "end": "1421450"
  },
  {
    "text": "check off about three to five dollars right so that also is a pretty critical target for us to hit so let's go under",
    "start": "1421450",
    "end": "1428529"
  },
  {
    "text": "the covers in our architecture right it's the point here the experience that",
    "start": "1428529",
    "end": "1433539"
  },
  {
    "text": "I mentioned starts over here with a third-party delivery platform all our API is had then hosted through a API",
    "start": "1433539",
    "end": "1441039"
  },
  {
    "text": "middleware write this consistently follows the API gateway pattern with restful api so that then wired through a",
    "start": "1441039",
    "end": "1448419"
  },
  {
    "text": "OBS to the heart of the solution which is ECS right we have a range of micro",
    "start": "1448419",
    "end": "1454419"
  },
  {
    "text": "services that are running here and for simplicity I've used two services here right think of let's say one of the",
    "start": "1454419",
    "end": "1461019"
  },
  {
    "text": "services requiring one of those customer facing mission-critical highly scalable highly reliable highly performant",
    "start": "1461019",
    "end": "1467590"
  },
  {
    "text": "characteristics right then you could through ECS use a scale profile a",
    "start": "1467590",
    "end": "1473139"
  },
  {
    "text": "runtime profile with the correct auto scaling policy task placement strategies you do it the next service let's assume",
    "start": "1473139",
    "end": "1479379"
  },
  {
    "text": "that it's like a complex event processing type scenario where maybe scalability is not the number one goal",
    "start": "1479379",
    "end": "1485649"
  },
  {
    "text": "but optimization or workload optimization is the key right so in a",
    "start": "1485649",
    "end": "1491139"
  },
  {
    "text": "situation like that you could use like a bin packing surgery and we'll double click on this in a second right so ECS",
    "start": "1491139",
    "end": "1497379"
  },
  {
    "text": "is the heart of the solution of course it gets connected to the restaurant and under the covers for all our eventing we use sqs right so think",
    "start": "1497379",
    "end": "1504429"
  },
  {
    "text": "of again two micro-services wanting to talk to each other through an asynchronous pattern we use SQS it's not",
    "start": "1504429",
    "end": "1511690"
  },
  {
    "text": "just about scale though it's also performance right and the days of like your transactions taking 1 or 2 seconds",
    "start": "1511690",
    "end": "1518200"
  },
  {
    "text": "have gone right the new norm is under 100 milliseconds right and that's what we achieved using a ElastiCache in this",
    "start": "1518200",
    "end": "1525400"
  },
  {
    "text": "case right to keep a lot of things in memory again don't think of this has just read work loss this is read and",
    "start": "1525400",
    "end": "1530830"
  },
  {
    "text": "write combined right and then that's backed up by RDS and s3 so hopefully",
    "start": "1530830",
    "end": "1536410"
  },
  {
    "text": "that will give you an overview of how we really scaled with easy s all right so",
    "start": "1536410",
    "end": "1541809"
  },
  {
    "text": "what are some of the architecture principles we use right so number one is",
    "start": "1541809",
    "end": "1547750"
  },
  {
    "text": "getting your micro-services strategy right right so on this will help with your containerization and this is again",
    "start": "1547750",
    "end": "1553900"
  },
  {
    "text": "not a talk about micro services but having a clean api having a good service model behind it right having a level of",
    "start": "1553900",
    "end": "1560679"
  },
  {
    "text": "isolation for your data model independent deployments right so those are some of the key micro services",
    "start": "1560679",
    "end": "1567070"
  },
  {
    "text": "principles that we used then that gave us the basis to containerize this right right then the magic of ECS kicked in",
    "start": "1567070",
    "end": "1575559"
  },
  {
    "text": "when you use that containerize and orchestrated for scale right and we'll cover that in a second wanna cover this",
    "start": "1575559",
    "end": "1581500"
  },
  {
    "text": "third point so I'm not going to belabor it right I'll use platformer service components as possible instead of doing",
    "start": "1581500",
    "end": "1588100"
  },
  {
    "text": "your own clusters right it's not for the faint at heart so therefore you know you",
    "start": "1588100",
    "end": "1594160"
  },
  {
    "text": "get scale out of the box with some of these things synchronous and even programmer I think for the developers in",
    "start": "1594160",
    "end": "1600549"
  },
  {
    "text": "the room this is obvious right pick a good programming model develop your micro service on that then use",
    "start": "1600549",
    "end": "1605950"
  },
  {
    "text": "containerization so these are some of our key principles so here's now under",
    "start": "1605950",
    "end": "1611470"
  },
  {
    "text": "the covers look up how did we really achieve this right there's two constructs that we use out of the box",
    "start": "1611470",
    "end": "1618100"
  },
  {
    "text": "through ACS number one is the auto scaling policies right you've got to figure out a good way to trigger the",
    "start": "1618100",
    "end": "1624580"
  },
  {
    "text": "auto scaling right so think of like using something like a cloud watch alarm to do it right that's number one number",
    "start": "1624580",
    "end": "1630309"
  },
  {
    "text": "two is what we've disk here right these primitives really helped us to really scale right again",
    "start": "1630309",
    "end": "1637840"
  },
  {
    "text": "I'll walk you through walk you through an example here assume that there are",
    "start": "1637840",
    "end": "1643390"
  },
  {
    "text": "three services and the scale properties of all three services are different right number one is that customer facing",
    "start": "1643390",
    "end": "1650170"
  },
  {
    "text": "mission-critical highly performant highly scalable micro service right we used the spread strategy for that so",
    "start": "1650170",
    "end": "1657220"
  },
  {
    "text": "with spread easy s basically spreads your workloads across the availability",
    "start": "1657220",
    "end": "1662230"
  },
  {
    "text": "zones right so task placement with spread really helped us scale number to",
    "start": "1662230",
    "end": "1667300"
  },
  {
    "text": "assume that workload optimization is what's important here right so for that we use bin pack right so bin",
    "start": "1667300",
    "end": "1673780"
  },
  {
    "text": "pack basically optimizes your infrastructure will help with the cost sensitivity goals that we had right and",
    "start": "1673780",
    "end": "1678820"
  },
  {
    "text": "number three is if you want process level isolation assume that for example",
    "start": "1678820",
    "end": "1683860"
  },
  {
    "text": "the u.s. processing versus the European countries processing need to be isolated we use member of right so this is how we",
    "start": "1683860",
    "end": "1691900"
  },
  {
    "text": "used with auto scaling policies as well as task placement strategies to really scale alright so some final takeaways",
    "start": "1691900",
    "end": "1702070"
  },
  {
    "text": "right I won't belabor the pointed micro services again scalability reliability comes at microservices right we really",
    "start": "1702070",
    "end": "1708550"
  },
  {
    "text": "hit north of 20,000 TPS with this solution right so under that hundred milliseconds and again to put this in",
    "start": "1708550",
    "end": "1714940"
  },
  {
    "text": "perspective think of this about 1.7 billion transactions a day right that's",
    "start": "1714940",
    "end": "1720580"
  },
  {
    "text": "kind of the scale moving to containers if you have not done it do it if will simplify your life quite a bit and then",
    "start": "1720580",
    "end": "1727780"
  },
  {
    "text": "finally kudos to Deepak and the team for giving all of these features out of the",
    "start": "1727780",
    "end": "1733210"
  },
  {
    "text": "box with good integration with the whole AWS stack as well for example alb",
    "start": "1733210",
    "end": "1738760"
  },
  {
    "text": "integration comes out-of-the-box right and your deb pipelines also easily integrates so hope you guys enjoyed it",
    "start": "1738760",
    "end": "1745060"
  },
  {
    "text": "thank you very much [Applause]",
    "start": "1745060",
    "end": "1750200"
  },
  {
    "text": "what",
    "start": "1752309",
    "end": "1755309"
  },
  {
    "text": "thanks Selina so you have heard from two customers",
    "start": "1757490",
    "end": "1763010"
  },
  {
    "text": "there's a whole bunch they range from some of some from nimble startups to",
    "start": "1763010",
    "end": "1769620"
  },
  {
    "text": "some of the largest companies in the world running a variety of workloads there are people just using containers",
    "start": "1769620",
    "end": "1775800"
  },
  {
    "text": "for deployments that people running containers at scaled with massive micro services the people just doing batch",
    "start": "1775800",
    "end": "1781020"
  },
  {
    "text": "jobs and one of the things that we have learnt is that there's no one-size-fits-all solution but if you",
    "start": "1781020",
    "end": "1787500"
  },
  {
    "text": "give people a set of key primitives they can build really really powerful applications as you just heard and what",
    "start": "1787500",
    "end": "1793620"
  },
  {
    "text": "does this translate into usage the I'm going to use DCs usage as a microcosm of",
    "start": "1793620",
    "end": "1800850"
  },
  {
    "text": "container adoption in general so since 2016 since January of last year",
    "start": "1800850",
    "end": "1805890"
  },
  {
    "text": "ECS user growth have been 462 percent and as you can see the law the growth in",
    "start": "1805890",
    "end": "1812040"
  },
  {
    "text": "2017 it just took off and I'm I suspect it's not going to slow down anytime soon as container management systems become",
    "start": "1812040",
    "end": "1818700"
  },
  {
    "text": "more robust right now at this point of time there's over 100,000 clusters under",
    "start": "1818700",
    "end": "1824640"
  },
  {
    "text": "management by ICS so that's easy I saw the regional control plane so if you",
    "start": "1824640",
    "end": "1830490"
  },
  {
    "text": "take all the regions that ECS operates in those eight or nine control planes are operating over hundred thousand",
    "start": "1830490",
    "end": "1836520"
  },
  {
    "text": "clusters these hundred thousand clusters translate into millions of instances so some of our clusters are you know small",
    "start": "1836520",
    "end": "1843090"
  },
  {
    "text": "couple of t2 instances others are tens of you know you have people or tens of thousands of instances in a single",
    "start": "1843090",
    "end": "1848370"
  },
  {
    "text": "cluster doing some very interesting optical running some very interesting applications and this is probably the",
    "start": "1848370",
    "end": "1853800"
  },
  {
    "text": "number that took me the hardest that was hardest for me to get to which is hundreds of hundreds of millions the new",
    "start": "1853800",
    "end": "1861180"
  },
  {
    "text": "containers are being launched these are new containers not existing that are already running because there's lots of",
    "start": "1861180",
    "end": "1866460"
  },
  {
    "text": "long-running applications and that's every week every week there's one hundreds of millions of new containers",
    "start": "1866460",
    "end": "1871590"
  },
  {
    "text": "being launched and that's just with DCs there's customers running all kinds of container management systems you can only imagine what overall broad adoption",
    "start": "1871590",
    "end": "1878370"
  },
  {
    "text": "is like having said that you heard about",
    "start": "1878370",
    "end": "1883650"
  },
  {
    "text": "some pretty exciting applications mapping getting a food delivery application out in in",
    "start": "1883650",
    "end": "1889350"
  },
  {
    "text": "in just a few months but what we also find is that there are a bunch of customers who use containers in a much",
    "start": "1889350",
    "end": "1895080"
  },
  {
    "text": "more pragmatic way they're pretty chilled like the AMA over here and what what they try and do is okay",
    "start": "1895080",
    "end": "1901230"
  },
  {
    "text": "let's not try and throw the baby out with the bathwater let's take what we have let's solve a critical business",
    "start": "1901230",
    "end": "1906630"
  },
  {
    "text": "problem and then leverage containers for their strengths to get that and to talk about that from the Washington Post",
    "start": "1906630",
    "end": "1912929"
  },
  {
    "text": "Patrick column",
    "start": "1912929",
    "end": "1915768"
  },
  {
    "text": "thanks Deepak so I'm excited to be here today I want to talk about how the",
    "start": "1926210",
    "end": "1931470"
  },
  {
    "text": "Washington Post built a new software as a service business powered by ECS I think it's a really interesting story",
    "start": "1931470",
    "end": "1937080"
  },
  {
    "text": "and it's it's one that really I'm excited about so if you're not familiar",
    "start": "1937080",
    "end": "1942299"
  },
  {
    "text": "with the Washington Post we're a major news publisher with more than 95 million monthly visitors and a billion page",
    "start": "1942299",
    "end": "1948570"
  },
  {
    "text": "views over the last few years The Washington Post has seen tremendous growth and the engine behind this growth",
    "start": "1948570",
    "end": "1954450"
  },
  {
    "text": "has been an equal focus on excellence in journalism and technology innovation",
    "start": "1954450",
    "end": "1960200"
  },
  {
    "text": "because technology innovation is such an important part of this growth story we wanted to take the same technology that",
    "start": "1960200",
    "end": "1966570"
  },
  {
    "text": "powers the Washington Post and build a business out of it and so we launched a business called arc publishing a disk or arc publishing is a",
    "start": "1966570",
    "end": "1976109"
  },
  {
    "text": "fast and efficient CMS for modern publishers speed and innovation for readers newsrooms and developers are the",
    "start": "1976109",
    "end": "1982470"
  },
  {
    "text": "core goals of arc publishing many years",
    "start": "1982470",
    "end": "1987899"
  },
  {
    "text": "ago the Washington Post had a an architecture very similar to other major",
    "start": "1987899",
    "end": "1993210"
  },
  {
    "text": "news publishers we had a commercial monolithic CMS and all the content was stored in one application and database",
    "start": "1993210",
    "end": "1999210"
  },
  {
    "text": "stack the problem with this architecture is that it makes innovation difficult because it reduces the flexibility to",
    "start": "1999210",
    "end": "2005929"
  },
  {
    "text": "experiment with new ideas we gradually migrated to a new architecture or each",
    "start": "2005929",
    "end": "2011539"
  },
  {
    "text": "content type is stored in its own microservice so in this example we have a video story and photo service that are",
    "start": "2011539",
    "end": "2018409"
  },
  {
    "text": "all separate they have their own application and database stacks the benefit of this architecture is it allows us to independently develop and",
    "start": "2018409",
    "end": "2025249"
  },
  {
    "text": "deploy each of these and this architecture increases the rate of experimentation leading to higher quality product when we launched our",
    "start": "2025249",
    "end": "2035840"
  },
  {
    "text": "publishing we wanted to bring the same innovative architecture to our customers because our microservice architecture",
    "start": "2035840",
    "end": "2042409"
  },
  {
    "text": "was designed for just a single tenant the Washington Post there was no native support for multiple",
    "start": "2042409",
    "end": "2048408"
  },
  {
    "text": "tenants so this is a real problem for us this meant that each art publishing customer would need their own copy of",
    "start": "2048409",
    "end": "2054049"
  },
  {
    "text": "each Micra service although we considered we architected all of our services to be multi ten",
    "start": "2054049",
    "end": "2059690"
  },
  {
    "text": "we realized that would significantly delay the launch of art publishing so instead we decided to clone the",
    "start": "2059690",
    "end": "2065480"
  },
  {
    "text": "environments for each art publishing customer this allowed us to quickly iterate with real users and to launch",
    "start": "2065480",
    "end": "2072589"
  },
  {
    "text": "the business but it means scaling the business very challenging to put these",
    "start": "2072589",
    "end": "2078679"
  },
  {
    "text": "scaling challenges into context we needed a platform that supported more than 50 deployments an hour across a",
    "start": "2078679",
    "end": "2083960"
  },
  {
    "text": "hundred unique micro services and in our infrastructure this translated into over 150 ECS cluster instances and many",
    "start": "2083960",
    "end": "2091039"
  },
  {
    "text": "thousands of docker containers adding to our challenge we had a devops culture which means there was no dedicated",
    "start": "2091039",
    "end": "2096500"
  },
  {
    "text": "operations team to manage this infrastructure and unlike a traditional software company we had limited",
    "start": "2096500",
    "end": "2101990"
  },
  {
    "text": "engineering resources to focus on these scaling challenges to solve these",
    "start": "2101990",
    "end": "2108079"
  },
  {
    "text": "scaling challenges we built a container platform powered by ECS that we call Nile now takes docker containers as the",
    "start": "2108079",
    "end": "2114530"
  },
  {
    "text": "unit of deployment and schedules those containers across multiple ECS clusters Nile made it easy to port our existing",
    "start": "2114530",
    "end": "2121250"
  },
  {
    "text": "technology to docker containers that can then run on ECS Nile also keeps track of",
    "start": "2121250",
    "end": "2126920"
  },
  {
    "text": "tenant containers so that we can quickly update a particular micro service across our entire environment and keep that",
    "start": "2126920",
    "end": "2132799"
  },
  {
    "text": "rate of experimentation high the Nile platform is also designed for reliability because Ark publishing",
    "start": "2132799",
    "end": "2139339"
  },
  {
    "text": "customers are some of the top media companies in the world with very demanding uptime and performance requirements building Nile and ECS",
    "start": "2139339",
    "end": "2146480"
  },
  {
    "text": "allowed us to take our limited engineering resources and focus those on building new customer features instead",
    "start": "2146480",
    "end": "2152510"
  },
  {
    "text": "of managing infrastructure and we're able to do this without a dedicated operation team to manage our environment",
    "start": "2152510",
    "end": "2158440"
  },
  {
    "text": "thank you [Applause]",
    "start": "2158440",
    "end": "2165589"
  },
  {
    "text": "I wonder what that 2017 graph was going up it's been a busy year for the Washington Post I think so you know we",
    "start": "2166120",
    "end": "2179560"
  },
  {
    "text": "are starting year four of a journey and when I say our yes I'm talking about container services an AWS but this is",
    "start": "2179560",
    "end": "2185290"
  },
  {
    "text": "pretty much year four of meaningful container adoption as well because dr. garde launched March of 2013 and that",
    "start": "2185290",
    "end": "2191500"
  },
  {
    "text": "adoption just started growing has started accelerating as I saw in the adoption graph for acs a few slides ago",
    "start": "2191500",
    "end": "2198370"
  },
  {
    "text": "now our customers running very very meaningful workloads you've heard from three of them today you're hearing from",
    "start": "2198370",
    "end": "2203650"
  },
  {
    "text": "many of them throughout this conference and people are talking about it in much more detail so customers are you know",
    "start": "2203650",
    "end": "2211210"
  },
  {
    "text": "I've said customers earning deployments they're owning batch jobs there are any micro services that trust us to be reliable they trust us to scale and they",
    "start": "2211210",
    "end": "2218380"
  },
  {
    "text": "trust us to be secure so what does this mean from a production application standpoint the first one is getting the right",
    "start": "2218380",
    "end": "2225480"
  },
  {
    "text": "certifications not everybody here cares about them but there's a whole bunch of people who do so about a year ago we",
    "start": "2225480",
    "end": "2232060"
  },
  {
    "text": "started working on getting the same certifications for ECS NEC R as we have for ec2 we started off with is L some",
    "start": "2232060",
    "end": "2240730"
  },
  {
    "text": "along the long line we got the infocomm certification PCI HIPAA and I think last",
    "start": "2240730",
    "end": "2245800"
  },
  {
    "text": "month we got Sauk once off - and soft three that that happens in a short",
    "start": "2245800",
    "end": "2251650"
  },
  {
    "text": "period of time because you've built something with the right sort of right problems and the right challenges in mind you want to be able to scale you",
    "start": "2251650",
    "end": "2258430"
  },
  {
    "text": "think hard about how you want to build your application how you want to operate them and what it also allows us to do is",
    "start": "2258430",
    "end": "2263560"
  },
  {
    "text": "then go and tackle harder certifications like FedRAMP which is something we're working on right now it also allows us",
    "start": "2263560",
    "end": "2269020"
  },
  {
    "text": "to do this so either this week we are adding ECS to",
    "start": "2269020",
    "end": "2274180"
  },
  {
    "text": "the and to the ec2 any BS compute SLA which is a four nines SLA now so for",
    "start": "2274180",
    "end": "2280030"
  },
  {
    "text": "those of you who care about SLS we have one it's been it's something that comes up so I just wanted to bring that up",
    "start": "2280030",
    "end": "2285990"
  },
  {
    "text": "from it as an engineering team and a service team our goal is to make AWS the best place to run containerized",
    "start": "2285990",
    "end": "2291790"
  },
  {
    "text": "applications and for which ends up make for us meaning you have to think about",
    "start": "2291790",
    "end": "2296830"
  },
  {
    "text": "containers as a fundamental computer motive not necessary sir thing that he just orchestrate on top of",
    "start": "2296830",
    "end": "2301989"
  },
  {
    "text": "ec2 instances are primitive is not a container actually it's a task for those",
    "start": "2301989",
    "end": "2308349"
  },
  {
    "text": "of you don't know what a task is a task is the collection of containers that you put in a single file that get placed",
    "start": "2308349",
    "end": "2313690"
  },
  {
    "text": "together of common metadata and everything that ECS does primarily it",
    "start": "2313690",
    "end": "2319269"
  },
  {
    "text": "operates at the level of a task so we started going down that route some time ago the first one was adding I am roles",
    "start": "2319269",
    "end": "2325569"
  },
  {
    "text": "probably the first feature we heard of in my launch CCS when I when I when am I going to get I am roles for tasks so we",
    "start": "2325569",
    "end": "2331839"
  },
  {
    "text": "worked on that we did that the second thing we probably heard was how can I water scale my tasks it's very fine that",
    "start": "2331839",
    "end": "2338349"
  },
  {
    "text": "you allow me to scale my ec2 instances but that doesn't really help me to a point but what I want to do is react to",
    "start": "2338349",
    "end": "2344410"
  },
  {
    "text": "traffic on a fixed set of instances or a small number of instances and be really efficient at using them we also had to",
    "start": "2344410",
    "end": "2351969"
  },
  {
    "text": "work with the load balancing team and the culmination of developing tasks load balancers became alb and now in LB so",
    "start": "2351969",
    "end": "2358259"
  },
  {
    "text": "new kinds of load balancers that we built out of the centralized gob team and the last one and I'm very",
    "start": "2358259",
    "end": "2364869"
  },
  {
    "text": "unabashedly very partial to this feature estas networking and I'll talk about that one a little more the reason this",
    "start": "2364869",
    "end": "2372910"
  },
  {
    "text": "is probably the favorite thing of mine that we ever launched was because it started with ASCII art it was a proposal",
    "start": "2372910",
    "end": "2379900"
  },
  {
    "text": "that we submitted to github about nine months ago I think I forget exactly and the idea was hey we have a proposal to",
    "start": "2379900",
    "end": "2387219"
  },
  {
    "text": "give you V to give you to solve a problem that we'd heard from customers and the problem was we want direct",
    "start": "2387219",
    "end": "2394029"
  },
  {
    "text": "address ability of tasks that are not on the same host and that is not trivial tell you that doesn't work very easily",
    "start": "2394029",
    "end": "2400599"
  },
  {
    "text": "and I'll tell you why in a second and we started thinking about how we could do it better how could we give people better performance and how could",
    "start": "2400599",
    "end": "2407109"
  },
  {
    "text": "we give people an ec2 like networking experience it turns out we have this networking fabric called VPC and the",
    "start": "2407109",
    "end": "2414910"
  },
  {
    "text": "solution was okay let's try and figure out how it can bring VPC into the container layer and that took some work",
    "start": "2414910",
    "end": "2419979"
  },
  {
    "text": "and let's go through what we are trying to do so over here you see let's assume",
    "start": "2419979",
    "end": "2426969"
  },
  {
    "text": "this is one host that's the second host you have a bunch of containers in them they all connected we are dr0 bridge",
    "start": "2426969",
    "end": "2434050"
  },
  {
    "text": "that's how they communicate each can within within the dock at zero bridge each container gets gets its own IP they",
    "start": "2434050",
    "end": "2440830"
  },
  {
    "text": "get there they're in that namespace but that namespace is that IP is only relevant in the context of that house it",
    "start": "2440830",
    "end": "2447130"
  },
  {
    "text": "does not mean so if you try and take this packet and send it to here and you",
    "start": "2447130",
    "end": "2452380"
  },
  {
    "text": "address that IP address it won't work because it's going to try and that's IP address you need to need to go to the",
    "start": "2452380",
    "end": "2458770"
  },
  {
    "text": "way doctor networking works and our our goal was to try and figure out how can we take oops sorry how can we take this",
    "start": "2458770",
    "end": "2468730"
  },
  {
    "text": "packet get it over here I by directly addressing that IP address so so we built a whole workflow it",
    "start": "2468730",
    "end": "2477580"
  },
  {
    "text": "starts off with the agent and things we built into the agent but it's a workflow that's managed by the ECS control plane the first thing we did was take elastic",
    "start": "2477580",
    "end": "2485110"
  },
  {
    "text": "network interfaces before an elastic network interface is attached your primary ni is in the default namespace",
    "start": "2485110",
    "end": "2490930"
  },
  {
    "text": "ECS then attaches that eni to the host and so and then it's the new en i that's",
    "start": "2490930",
    "end": "2497200"
  },
  {
    "text": "one becomes the default namespace and then we brought a bunch of C&I plugins",
    "start": "2497200",
    "end": "2502600"
  },
  {
    "text": "you can get them on docker on on github and we basically move this eni into a new namespace address it you know",
    "start": "2502600",
    "end": "2508840"
  },
  {
    "text": "configure it with addresses and routes and that gives you a ton of benefits well the first benefit is you can take",
    "start": "2508840",
    "end": "2516400"
  },
  {
    "text": "this packet and send it here by directly addressing that IP because now the IP is",
    "start": "2516400",
    "end": "2523000"
  },
  {
    "text": "actually the IP of that well in this case our task you can attach because now",
    "start": "2523000",
    "end": "2528190"
  },
  {
    "text": "you have an en I with a primary IP attached to it you can put security groups on it you get every feature of",
    "start": "2528190",
    "end": "2533380"
  },
  {
    "text": "epc including flow logs you can I think that the whole bunch of EPC features are",
    "start": "2533380",
    "end": "2539290"
  },
  {
    "text": "announced at this reinvent you can take advantage of all of them and it really makes we think it's a really powerful",
    "start": "2539290",
    "end": "2544840"
  },
  {
    "text": "feature the good news is you don't understand up anything the whole workflow is managed by the by the ECS",
    "start": "2544840",
    "end": "2550150"
  },
  {
    "text": "control plane so this said it's probably the favorite feature of ours that we've launched this year taking that forward",
    "start": "2550150",
    "end": "2557820"
  },
  {
    "text": "what else can we do to make it make it easier for running applications for",
    "start": "2557820",
    "end": "2562990"
  },
  {
    "text": "those of you who have not there's a demo of native service discovery from ETS yes we many of you'll say finally it is true",
    "start": "2562990",
    "end": "2570670"
  },
  {
    "text": "but our goal is to do something similar it's managed that service discovery experience just the way we do load",
    "start": "2570670",
    "end": "2576100"
  },
  {
    "text": "balancers for example so you build your app you give it a use in what give",
    "start": "2576100",
    "end": "2581170"
  },
  {
    "text": "services a simple name a common name and the name resolves to an IP and port dynamically ECS manages the whole life",
    "start": "2581170",
    "end": "2587410"
  },
  {
    "text": "cycle so you activated during a service deployment we update the service registry based on a naming convention we",
    "start": "2587410",
    "end": "2595420"
  },
  {
    "text": "worked with route 53 to basically they're built as a service registry and a naming service and ECS manages the rest we take things in and out of",
    "start": "2595420",
    "end": "2602080"
  },
  {
    "text": "private hosted zones we do that we give them the health checks the actually building new health check for this and",
    "start": "2602080",
    "end": "2608350"
  },
  {
    "text": "what it allows you to do is take advantage of the scale of route 53 and the feature set but without having to",
    "start": "2608350",
    "end": "2613960"
  },
  {
    "text": "set up this service discover yourself it's just built into how you operate services so we're pretty excited to give",
    "start": "2613960",
    "end": "2619210"
  },
  {
    "text": "it to customers there is a live demo in the talk you can probably go to the booth and get it as well and we hope to",
    "start": "2619210",
    "end": "2626020"
  },
  {
    "text": "release it early next year the second thing that we are that you'll probably get to see at this reinvent and that's",
    "start": "2626020",
    "end": "2631720"
  },
  {
    "text": "going to come out very soon is integration into code pipeline so for people doing end to end deployment in",
    "start": "2631720",
    "end": "2637480"
  },
  {
    "text": "the end developers actually don't care about ECS they just want to write code and deploy it and like any standard",
    "start": "2637480",
    "end": "2643480"
  },
  {
    "text": "deployment pipeline this is kind of how code pipeline works you have a source repository your build system and your",
    "start": "2643480",
    "end": "2649180"
  },
  {
    "text": "deployment system till now ECS was not a deployment target for code",
    "start": "2649180",
    "end": "2655000"
  },
  {
    "text": "pipeline but now it is and the way it works is and this is the console you go",
    "start": "2655000",
    "end": "2660640"
  },
  {
    "text": "to you go to the console you select a source provider it could be github it could be code commit you select a build",
    "start": "2660640",
    "end": "2668170"
  },
  {
    "text": "provider I actually don't know what other build providers go to our plant support so code build and then you",
    "start": "2668170",
    "end": "2673960"
  },
  {
    "text": "select a deployment provider used to be code deploy and potentially others now you can choose ECS what that means is",
    "start": "2673960",
    "end": "2679960"
  },
  {
    "text": "you can deploy it directly to ECS if you make an update to your code you this",
    "start": "2679960",
    "end": "2686050"
  },
  {
    "text": "uses the easiest update api to update your services and so you can get a very clean pipeline and your developers can",
    "start": "2686050",
    "end": "2691690"
  },
  {
    "text": "keep writing code and deploying it but and with and let code pipeline do all the heavy lifting it allows you to set",
    "start": "2691690",
    "end": "2697480"
  },
  {
    "text": "guardrails because good with code power plan you can set up rules and deployment workflows and this will",
    "start": "2697480",
    "end": "2703660"
  },
  {
    "text": "keep evolving and we are super excited to have this in the hands of customers as well so where is the road going from",
    "start": "2703660",
    "end": "2711880"
  },
  {
    "text": "here you've got to this point you know we've got tasks networking we got tossed load balancing auto scaling I am rolls",
    "start": "2711880",
    "end": "2718450"
  },
  {
    "text": "you also heard about service discovery and deployments but they're pieces of the puzzle you're still running this on",
    "start": "2718450",
    "end": "2724210"
  },
  {
    "text": "ec2 a good analogy to this is I when is",
    "start": "2724210",
    "end": "2730930"
  },
  {
    "text": "the last time you ever ask somebody else AWS I have an ec2 instance when I run the run instances API which server enemy",
    "start": "2730930",
    "end": "2737410"
  },
  {
    "text": "AWS data sent are you putting it on nobody asks that question at least I've been there nine years nobody has asked me that maybe one or two people they can",
    "start": "2737410",
    "end": "2745510"
  },
  {
    "text": "I go touch one so cluster is a fundamentally a relic of physical infrastructure because you need to put boundaries on things to be able to run",
    "start": "2745510",
    "end": "2752260"
  },
  {
    "text": "on them they end up having a master node that becomes a traffic cop as opposed to single control plane so what people want",
    "start": "2752260",
    "end": "2758410"
  },
  {
    "text": "is much like ec2 gives you an API to get an instance you want an API to a container or in our case a task and you",
    "start": "2758410",
    "end": "2765850"
  },
  {
    "text": "heard about this in Andy's keynote you probably heard about it in bonus keynote and that's AWS Fargate so we started",
    "start": "2765850",
    "end": "2771670"
  },
  {
    "text": "working on Fargate a while ago once we understood what it meant to operate containers at scale and manage",
    "start": "2771670",
    "end": "2777640"
  },
  {
    "text": "that scalability for all the customers that we had and what Fargate does and it's best explained with this diagram is",
    "start": "2777640",
    "end": "2784830"
  },
  {
    "text": "let's assume this is three ec2 instances in three availability zones and you have",
    "start": "2784830",
    "end": "2790630"
  },
  {
    "text": "a bunch of tasks running on them and you spin up those instances you put them in an auto scaling group and you schedule",
    "start": "2790630",
    "end": "2796150"
  },
  {
    "text": "if you are very smart you using placement constraints and all a placement logic to schedule instances",
    "start": "2796150",
    "end": "2802210"
  },
  {
    "text": "based on some business requirements but guess what you don't have to do that anymore all you do is launch tasks how",
    "start": "2802210",
    "end": "2808840"
  },
  {
    "text": "we optimize it how we give you great start times how we manage it becomes a declarative signal you give us and we",
    "start": "2808840",
    "end": "2815650"
  },
  {
    "text": "run that for you and I think that's it sounds simple but I think I'm kind of we",
    "start": "2815650",
    "end": "2822340"
  },
  {
    "text": "still haven't figured out how customers are completely going to adopt to this world where they are not where a lot of the features in container management are",
    "start": "2822340",
    "end": "2828820"
  },
  {
    "text": "around scheduling you don't have to do that anymore the scheduler shouldn't be what you think about you think about the application and the application",
    "start": "2828820",
    "end": "2834760"
  },
  {
    "text": "behavior scheduling shouldn't matter other than figuring out which one gets more importance than the other one or",
    "start": "2834760",
    "end": "2840730"
  },
  {
    "text": "whether you want it highly available or make it run fast and have low latency networking the other problems that we",
    "start": "2840730",
    "end": "2846670"
  },
  {
    "text": "want to solve so let's take a look at it here's a little demo that I'm gonna try",
    "start": "2846670",
    "end": "2851710"
  },
  {
    "text": "and do let's see if this works it's a video I'll talk to it kind of give you a",
    "start": "2851710",
    "end": "2857320"
  },
  {
    "text": "sense of how far gate works I'm going to use the ECSC Li for it the ECSC Li got updated this week to support for gate",
    "start": "2857320",
    "end": "2863590"
  },
  {
    "text": "and the CSC Li for those of you have not used it it's not the AWS CLI it's an",
    "start": "2863590",
    "end": "2868660"
  },
  {
    "text": "open source project that we have that uses docker compose as an input format to launch services on ECS it work let's",
    "start": "2868660",
    "end": "2877990"
  },
  {
    "text": "try that again no not yet",
    "start": "2877990",
    "end": "2884590"
  },
  {
    "text": "let's try this one more time oh it did",
    "start": "2884590",
    "end": "2889440"
  },
  {
    "text": "so the first thing you do is configure your defaults so you know the like any",
    "start": "2889740",
    "end": "2895180"
  },
  {
    "text": "an icy Li you have a configuration option far gate only available in US East one right now and is made",
    "start": "2895180",
    "end": "2901990"
  },
  {
    "text": "available to VCS customers as a launch type and a launch type could be easy too or it could be Fargate ec2 is what you",
    "start": "2901990",
    "end": "2909040"
  },
  {
    "text": "do now what would you use to do till now and now you have the ability to do far gate and then once you have your can",
    "start": "2909040",
    "end": "2915160"
  },
  {
    "text": "default configuration setup you launch and start building your environments and underneath the hood",
    "start": "2915160",
    "end": "2921220"
  },
  {
    "text": "it's running a CloudFormation stack that's setting up your VP sees all off VCS runs in VP see you get it made a VP",
    "start": "2921220",
    "end": "2926980"
  },
  {
    "text": "see networking and so let's go to a running cluster while that's setting up and see what happens so you see there's",
    "start": "2926980",
    "end": "2932860"
  },
  {
    "text": "a couple of subnets that that standard your two files once your docker compose file and which is wonderfully your",
    "start": "2932860",
    "end": "2939850"
  },
  {
    "text": "WordPress file in the easiest console we actually have templates on some of these more common applications that you may",
    "start": "2939850",
    "end": "2945100"
  },
  {
    "text": "want to run that you can just click through and start and you can look at the ECS parameter file where you put in",
    "start": "2945100",
    "end": "2950590"
  },
  {
    "text": "things like let's go back to that when it comes yeah that's where you add your subnets though the only two things you",
    "start": "2950590",
    "end": "2955870"
  },
  {
    "text": "need to configure the other thing you need to configure if that's required in Fargate but not in classic ECS task",
    "start": "2955870",
    "end": "2962170"
  },
  {
    "text": "definitions is your memory and CPU limit because that's how we bill you you pay for the CPU and memory that you reserved",
    "start": "2962170",
    "end": "2968020"
  },
  {
    "text": "there by the second you put into subnets in because the subnet is your availability model in this case and I'm an eMac sky",
    "start": "2968020",
    "end": "2978099"
  },
  {
    "text": "so somebody else obviously did this demo and you do a compose service and you",
    "start": "2978099",
    "end": "2985119"
  },
  {
    "text": "launch and if you go do and this is",
    "start": "2985119",
    "end": "2991000"
  },
  {
    "text": "launching the service let's wait a few seconds and look at the and you'll get a",
    "start": "2991000",
    "end": "2996220"
  },
  {
    "text": "log at the end",
    "start": "2996220",
    "end": "2999328"
  },
  {
    "text": "so grab the you want to grab the service ID so they can grab the logs to see if your service actually launched will do",
    "start": "3005090",
    "end": "3011990"
  },
  {
    "text": "that and just do a docker PS I think",
    "start": "3011990",
    "end": "3018160"
  },
  {
    "text": "look at the log task ID hit that and as",
    "start": "3018640",
    "end": "3023840"
  },
  {
    "text": "far as I can tell there won't be any errors and this should have started nicely again it's very boring but that's",
    "start": "3023840",
    "end": "3031250"
  },
  {
    "text": "what it's meant to be our goal with Fargate is to make the setup of your applications really simple because all",
    "start": "3031250",
    "end": "3037460"
  },
  {
    "text": "you need to do is define a task definition figure out what the subnet said you wants to launch new services into and hit go and all of this if",
    "start": "3037460",
    "end": "3045860"
  },
  {
    "text": "you're using the console you get a bunch of templates to start with I presume we may we'll probably have many of these",
    "start": "3045860",
    "end": "3051590"
  },
  {
    "text": "term templates on github as well so that was a WS Fargate we've been looking at",
    "start": "3051590",
    "end": "3057590"
  },
  {
    "text": "for a while they're super excited about it you don't have clusters a cluster becomes just essentially a namespace that you launch applications into it",
    "start": "3057590",
    "end": "3065210"
  },
  {
    "text": "also allows you to do things like take an existing application you can keep the same cluster name change the launch type",
    "start": "3065210",
    "end": "3071030"
  },
  {
    "text": "create new service new tasks and David can coexist with each other except in one case they're running on ec2 and in",
    "start": "3071030",
    "end": "3077540"
  },
  {
    "text": "the other case they're just running cool awesome we did that but he says not the",
    "start": "3077540",
    "end": "3083900"
  },
  {
    "text": "only game in town I even as recently as a year ago the definition of which was",
    "start": "3083900",
    "end": "3089660"
  },
  {
    "text": "the game in town was a little tricky there were many today that's pretty much an ambiguous and that's kubernetes so a",
    "start": "3089660",
    "end": "3096500"
  },
  {
    "text": "lot of our customers have started running kubernetes there's probably folks in this room who do that and we",
    "start": "3096500",
    "end": "3101900"
  },
  {
    "text": "were trying to figure out how best to support that so we started off by working with a bunch of partners and joining the CN CF the CN CF was",
    "start": "3101900",
    "end": "3109520"
  },
  {
    "text": "interesting for multiple reasons it was the home for kubernetes it was also the home for things like container D and CNI which are very important to us",
    "start": "3109520",
    "end": "3116060"
  },
  {
    "text": "because those are ways that we're building building our container services but what really people wanted was can",
    "start": "3116060",
    "end": "3123080"
  },
  {
    "text": "you just run my kubernetes for me I hate managing the control plane okay I also want to be able to use alb I",
    "start": "3123080",
    "end": "3130130"
  },
  {
    "text": "absolutely want to be able to use I am because I can't really be useful in AWS",
    "start": "3130130",
    "end": "3135290"
  },
  {
    "text": "without that and I still want to take the app that I'm running on my laptop and just move it to",
    "start": "3135290",
    "end": "3140760"
  },
  {
    "text": "AWS and run it those are things that our customers are telling us and you heard this and that's the wonderfully named",
    "start": "3140760",
    "end": "3147270"
  },
  {
    "text": "elastic container service for kubernetes or eks also the world's best kept secret how does this work",
    "start": "3147270",
    "end": "3154490"
  },
  {
    "text": "we give you an end point the end point is behind that end point we are managing",
    "start": "3154490",
    "end": "3159600"
  },
  {
    "text": "your masters we manage and we are managing your persistence layer you bring you have a bunch of you see two",
    "start": "3159600",
    "end": "3165600"
  },
  {
    "text": "instances underneath that that you won't they're running in your account the master is the endpoint and everything",
    "start": "3165600",
    "end": "3170820"
  },
  {
    "text": "behind that is running in our world you use this you you you interact with it using the same tools that we used to",
    "start": "3170820",
    "end": "3177030"
  },
  {
    "text": "today so you scoop kettle or you know whatever tools that you want to use and things should just work",
    "start": "3177030",
    "end": "3183110"
  },
  {
    "text": "we had three tenets as we started building this that came from some of the feature requests we had heard from our",
    "start": "3183110",
    "end": "3189330"
  },
  {
    "text": "customers one I'm not building toys I have production grade applications give me the same kind of capabilities",
    "start": "3189330",
    "end": "3196080"
  },
  {
    "text": "that I would expect for something like ECS so give me highly available give me a highly available control plane and",
    "start": "3196080",
    "end": "3201750"
  },
  {
    "text": "that was probably number one thing for us so there's no single master we run three across three AG's manager",
    "start": "3201750",
    "end": "3207330"
  },
  {
    "text": "persistence layer we manage the updates without downtime that's a big goal for us the second tenet was provide an",
    "start": "3207330",
    "end": "3214890"
  },
  {
    "text": "upstream experience so we are right now during the preview we are starting off with one seven because that's where we",
    "start": "3214890",
    "end": "3220710"
  },
  {
    "text": "were when we started but in general our goal is to be conforming to whatever standards of what a standard kubernetes",
    "start": "3220710",
    "end": "3226440"
  },
  {
    "text": "experience is and be able to support that and the last one is if you want to",
    "start": "3226440",
    "end": "3232230"
  },
  {
    "text": "use AWS services you want the same integrations that say something like ECS has and the first thing that comes to",
    "start": "3232230",
    "end": "3238650"
  },
  {
    "text": "mind is networking nobody wants to run an overlay when you have something like VPC around now there are some",
    "start": "3238650",
    "end": "3244980"
  },
  {
    "text": "interesting differences between the way ACS has built on the way kubernetes works but we try to do some very much",
    "start": "3244980",
    "end": "3250680"
  },
  {
    "text": "the same thing we have a CNI plugin it should be on github now and open source now that we have launched your pods get",
    "start": "3250680",
    "end": "3257820"
  },
  {
    "text": "the same VPC addresses inside the pod as on the V PC so you're getting native addressing again you're taking advantage",
    "start": "3257820",
    "end": "3263940"
  },
  {
    "text": "of all the bpc features and as I said it's up on github right now the one",
    "start": "3263940",
    "end": "3269040"
  },
  {
    "text": "difference is in the yes case you get a primary IP in this case you get a secondary IP because the",
    "start": "3269040",
    "end": "3274289"
  },
  {
    "text": "way port networking works you you'll run out of IP primary IP is pretty soon you",
    "start": "3274289",
    "end": "3279960"
  },
  {
    "text": "get multiple secondary IP spur Ani so we give it still giving any ni you attach a secondary IP to it what does that mean",
    "start": "3279960",
    "end": "3286559"
  },
  {
    "text": "you can't put a psychic security group on a diaper level because it's at the host host level so we worked with a Gera",
    "start": "3286559",
    "end": "3293400"
  },
  {
    "text": "so you can use calicoes policy engine with is with eks you don't have to run",
    "start": "3293400",
    "end": "3299430"
  },
  {
    "text": "the overlay network but it uses the native interfaces that we are providing and you get this all the features that calico does so you get policy management",
    "start": "3299430",
    "end": "3306480"
  },
  {
    "text": "through calico and the way we are doing to do upgrades is when a new version comes out whether it's a point version",
    "start": "3306480",
    "end": "3312599"
  },
  {
    "text": "or a major version we won't upgrade you automatically you tell us when you want",
    "start": "3312599",
    "end": "3317640"
  },
  {
    "text": "to get upgraded when you are comfortable when you've tested the new version out for example in a development cluster and when we say go Beeville so you know it's",
    "start": "3317640",
    "end": "3325799"
  },
  {
    "text": "a much more fine grained control upgrade process unless there's a security vulnerability or something maybe we just",
    "start": "3325799",
    "end": "3331380"
  },
  {
    "text": "have to upgrade you and we will do that these are lessons that we have learned from ec2 which has been doing this for a while so it's in preview now from what I",
    "start": "3331380",
    "end": "3339390"
  },
  {
    "text": "can tell all of you and some more have signed up so awesome and you lo GA in",
    "start": "3339390",
    "end": "3344640"
  },
  {
    "text": "2018 and there's one more thing everything I've described it's kind of",
    "start": "3344640",
    "end": "3350130"
  },
  {
    "text": "the old way of running container there the cluster that you have to schedule on to you still have to think about instances you're paying for those",
    "start": "3350130",
    "end": "3355769"
  },
  {
    "text": "instances so one of the things they started working on and we can't wait to get out it's going to take some work is",
    "start": "3355769",
    "end": "3361230"
  },
  {
    "text": "to have eks run on top of our gate so the mechanism that you will have is you",
    "start": "3361230",
    "end": "3367980"
  },
  {
    "text": "pick your scheduler of choice right now your VCS any KS tomorrow there could be some some new thing that comes up and we",
    "start": "3367980",
    "end": "3374549"
  },
  {
    "text": "are happy to support that as well if that becomes super popular underneath the hood you have a runtime that's designed and will keep evolving to be",
    "start": "3374549",
    "end": "3381000"
  },
  {
    "text": "the best runtime you can get for containers and that's going to be foggy and if you're super excited about how",
    "start": "3381000",
    "end": "3386579"
  },
  {
    "text": "people will run all these applications and what else they will do with them and what they'll ask us to do so you know",
    "start": "3386579",
    "end": "3393839"
  },
  {
    "text": "we've talked about a journey it's a four-year-old three-year journey here for is just starting I we firmly believe",
    "start": "3393839",
    "end": "3401069"
  },
  {
    "text": "that fog it changes the way you think about how containers run in the cloud it's a much more native experience we",
    "start": "3401069",
    "end": "3406950"
  },
  {
    "text": "have multiple scheduling and orchestration options you pick the one that you like and I and I'm looking",
    "start": "3406950",
    "end": "3412739"
  },
  {
    "text": "forward to coming back next year with a new generation of apps that even perhaps bigger scale than what you heard today oh that's hard and thank you very much",
    "start": "3412739",
    "end": "3421690"
  },
  {
    "text": "[Applause]",
    "start": "3421690",
    "end": "3425589"
  }
]