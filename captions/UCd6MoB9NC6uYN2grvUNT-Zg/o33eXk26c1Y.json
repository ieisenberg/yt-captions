[
  {
    "text": "hi everybody thank you for being here sorry for this short delay but I was",
    "start": "4540",
    "end": "10549"
  },
  {
    "text": "having issue with the network so i will not do all the demo that i was planning",
    "start": "10549",
    "end": "16490"
  },
  {
    "text": "to do during this session but there's still a lot of good content that we can see the idea here is so my name is",
    "start": "16490",
    "end": "22520"
  },
  {
    "text": "Danilo I'm technical evangelist at amazon web services and the idea today",
    "start": "22520",
    "end": "27710"
  },
  {
    "text": "is to see together how the common line interface that we provide to our users",
    "start": "27710",
    "end": "32989"
  },
  {
    "text": "is really powerful probably more powerful that you can expect today we",
    "start": "32989",
    "end": "39860"
  },
  {
    "text": "will we will see different things we will start with a crash course so some",
    "start": "39860",
    "end": "45640"
  },
  {
    "text": "fundamental so now the AWS command-line interface works then we will see the",
    "start": "45640",
    "end": "53320"
  },
  {
    "text": "foundation so we will see how the basic",
    "start": "53320",
    "end": "58640"
  },
  {
    "text": "functionality of our service is available through the common line and then we will see some advanced scenarios",
    "start": "58640",
    "end": "65149"
  },
  {
    "text": "so some use cases more advanced that can be useful for example when you have multiple accounts that you want to",
    "start": "65149",
    "end": "71060"
  },
  {
    "text": "manage from a single control station",
    "start": "71060",
    "end": "75909"
  },
  {
    "text": "let's start with the crash course the command line interface is something that",
    "start": "77229",
    "end": "82819"
  },
  {
    "text": "will release two years ago previously there were a lot of command-line",
    "start": "82819",
    "end": "88490"
  },
  {
    "text": "interface for each of the services that we had and we thought that it was complex for our customers so we released",
    "start": "88490",
    "end": "94969"
  },
  {
    "text": "this single command line interface single command with which you can really",
    "start": "94969",
    "end": "100159"
  },
  {
    "text": "control all of your AWS services and it's a unified tool that is for the",
    "start": "100159",
    "end": "107630"
  },
  {
    "text": "developers written in a python and being Python in can run anywhere so you can",
    "start": "107630",
    "end": "113479"
  },
  {
    "text": "run windows you can run on Linux in Quran on a Mac on Windows we provide an MSI installer that you can download and",
    "start": "113479",
    "end": "121069"
  },
  {
    "text": "install on linux or mac we suggest to use people that is the pythoness titan",
    "start": "121069",
    "end": "128030"
  },
  {
    "text": "installer to install it it's just peep install AWS clip and also we provide a",
    "start": "128030",
    "end": "134090"
  },
  {
    "text": "bundle aid just an archive that you can download and really put anywhere Python runs for",
    "start": "134090",
    "end": "140030"
  },
  {
    "text": "example I played myself with a Sperry pie and most of the things that you can do on a normal server you can do also on",
    "start": "140030",
    "end": "146840"
  },
  {
    "text": "a raspberry pi the first step when you",
    "start": "146840",
    "end": "152090"
  },
  {
    "text": "install the Blessed command-line interface is AWS configure a SS configure is the first common that you",
    "start": "152090",
    "end": "158360"
  },
  {
    "text": "used to configure the credentials so you can configure the access key and the",
    "start": "158360",
    "end": "163640"
  },
  {
    "text": "secret key that you want to use of course if you using the ws command-line interface not on your lap door your",
    "start": "163640",
    "end": "171830"
  },
  {
    "text": "server but on an ec2 instance don't install credential in the instance and use easy to roles we will see something",
    "start": "171830",
    "end": "179090"
  },
  {
    "text": "towards the end on you can use them when you configure the credit the command",
    "start": "179090",
    "end": "184190"
  },
  {
    "text": "line interface then this is the basic syntax that you find for every command and by the way we also provide a",
    "start": "184190",
    "end": "191860"
  },
  {
    "text": "complete a completer for most of the shell that you can find for example on",
    "start": "191860",
    "end": "197959"
  },
  {
    "text": "UNIX so that you don't need two digit all the syntax all the comments you can",
    "start": "197959",
    "end": "202970"
  },
  {
    "text": "just how to complete the comments so the basic syntax is AWS the main command the",
    "start": "202970",
    "end": "208670"
  },
  {
    "text": "name of the service and then the operation the sub comment that you want to run on that service in this case AWS",
    "start": "208670",
    "end": "215570"
  },
  {
    "text": "ec2 so on the Elastic Compute cloud on our virtual server service you can",
    "start": "215570",
    "end": "220700"
  },
  {
    "text": "describe the instances and see which instance are running in the region that you configure when you configure the",
    "start": "220700",
    "end": "226760"
  },
  {
    "text": "command line tool you can also specify a default region so that you know that automatically the comments will use the",
    "start": "226760",
    "end": "233269"
  },
  {
    "text": "region you use the most and the same for other services this is an example with the identity and access management",
    "start": "233269",
    "end": "239660"
  },
  {
    "text": "service where you can run comments and in this case the operation is to list",
    "start": "239660",
    "end": "244820"
  },
  {
    "text": "their the access keys that are active or not active in your account the output of",
    "start": "244820",
    "end": "251180"
  },
  {
    "text": "the of the command-line interface can be customized by default is pure Jason and",
    "start": "251180",
    "end": "258650"
  },
  {
    "text": "this is an example of not of course the command-line interface but of how you can get in a JSON format",
    "start": "258650",
    "end": "265840"
  },
  {
    "text": "two of two towns in two different the US states but you can customize in the",
    "start": "265840",
    "end": "271810"
  },
  {
    "text": "configure or energy in any execution of the command-line interface the kind of output that you want using the dash dash",
    "start": "271810",
    "end": "279130"
  },
  {
    "text": "output parameter in this case Jason is the default and this is the output that you get another interesting Foreman is",
    "start": "279130",
    "end": "286630"
  },
  {
    "text": "text text is a tab-delimited output so it's very easy to integrate with other",
    "start": "286630",
    "end": "293979"
  },
  {
    "text": "command line tools like cut on unix and linux mac so for example if you want to",
    "start": "293979",
    "end": "300460"
  },
  {
    "text": "get only the list of the state here you can just type this output to cut and get",
    "start": "300460",
    "end": "307030"
  },
  {
    "text": "the only the third column with dash f3 and there is another format that you can",
    "start": "307030",
    "end": "314139"
  },
  {
    "text": "use that is not for machines it's for humans is the output table format and as",
    "start": "314139",
    "end": "320830"
  },
  {
    "text": "you can see it's much much more readable so now you can easily see that we are looking at places that displaces they",
    "start": "320830",
    "end": "327280"
  },
  {
    "text": "have CD and they have a state and there are two cities in two different states so when you want to look visually at the",
    "start": "327280",
    "end": "333490"
  },
  {
    "text": "output of the command line interface you can use the output table you can specify every time or you can set it as your",
    "start": "333490",
    "end": "339580"
  },
  {
    "text": "default so there are different kind of output and you can put one of these in",
    "start": "339580",
    "end": "346599"
  },
  {
    "text": "your basic configuration and then eventually change to another format when you need to have a visual understanding",
    "start": "346599",
    "end": "353770"
  },
  {
    "text": "or your output or if you want to feed your out go to another server so another",
    "start": "353770",
    "end": "359139"
  },
  {
    "text": "process that maybe needs JSON or to limit at the syntax so this step as I",
    "start": "359139",
    "end": "365650"
  },
  {
    "text": "told you we have to go very fast the demo is not working now so let's see",
    "start": "365650",
    "end": "371820"
  },
  {
    "text": "what are the basic functionality that you can get from this command line",
    "start": "371820",
    "end": "377289"
  },
  {
    "text": "interface because we say that you can run the configuration but actually the configuration is much much more powerful",
    "start": "377289",
    "end": "384160"
  },
  {
    "text": "that what I just said because this is the basic configuration so you would be",
    "start": "384160",
    "end": "389380"
  },
  {
    "text": "access key the secret key and the default region and the output format",
    "start": "389380",
    "end": "394650"
  },
  {
    "text": "actually the configure commander is more powerful and you can put other sub comments and the most",
    "start": "394650",
    "end": "401380"
  },
  {
    "text": "common sub comments are least get and set and this should let you understand",
    "start": "401380",
    "end": "407350"
  },
  {
    "text": "that we are talking about managing for properties for the configuration directly from the command line for",
    "start": "407350",
    "end": "414880"
  },
  {
    "text": "example you can have a WS configure get region and it will output from the basic",
    "start": "414880",
    "end": "421540"
  },
  {
    "text": "configuration which is your default region and in the same way you can have set region and set for example you with",
    "start": "421540",
    "end": "429010"
  },
  {
    "text": "West one as your default region more on then that you can also create more than",
    "start": "429010",
    "end": "435820"
  },
  {
    "text": "work profile so instead of having only the default profile of the command line interface the one that you use the most",
    "start": "435820",
    "end": "442090"
  },
  {
    "text": "you can create multiple profiles this can be useful for example if you have different accounts but also if you have",
    "start": "442090",
    "end": "448630"
  },
  {
    "text": "a single account because you can create different profile with different power maybe you have a read-only profiled it",
    "start": "448630",
    "end": "455830"
  },
  {
    "text": "it's more used inside the company to get information and I read right profile they may be able to add files to a three",
    "start": "455830",
    "end": "464620"
  },
  {
    "text": "or start an ec2 instance and this more important and powerful profile you only",
    "start": "464620",
    "end": "469630"
  },
  {
    "text": "distribute it to a restricted number of people this is normally known in ideas",
    "start": "469630",
    "end": "474790"
  },
  {
    "text": "the least privileged approach to securities to in every moment only use",
    "start": "474790",
    "end": "481540"
  },
  {
    "text": "the least minimum amount of privilege that you need to do the action that you want to do never create bigger privilege",
    "start": "481540",
    "end": "488590"
  },
  {
    "text": "because this can open to possible attacks in case you want to work with a",
    "start": "488590",
    "end": "496420"
  },
  {
    "text": "profile you just have to add the dash dash profile option to the to the common",
    "start": "496420",
    "end": "502060"
  },
  {
    "text": "line and everything you do will be related to the specific profile this is an example with configure but exactly",
    "start": "502060",
    "end": "509290"
  },
  {
    "text": "the same syntax works with any common so if you want to describe the dc2 instance it would be AWS easy to",
    "start": "509290",
    "end": "517099"
  },
  {
    "text": "describe instances and then dash dash this profile and if you want you can use",
    "start": "517099",
    "end": "524390"
  },
  {
    "text": "also they get and set command sub comments of the configuration directly",
    "start": "524390",
    "end": "530630"
  },
  {
    "text": "on a specific profile and this is the syntax so you have to specify previously",
    "start": "530630",
    "end": "536300"
  },
  {
    "text": "we said set region us here you have to say set profile dot the name of the",
    "start": "536300",
    "end": "543710"
  },
  {
    "text": "profile in this case prod because it's a production profile for example and then the region so you have to add profile",
    "start": "543710",
    "end": "550370"
  },
  {
    "text": "and the name of the profile to the set and get operations all this",
    "start": "550370",
    "end": "556730"
  },
  {
    "text": "configuration that you do the credentials that the vault rejoin the different profiles they are written into",
    "start": "556730",
    "end": "562520"
  },
  {
    "text": "two different configuration files that / default are written into the dot AWS",
    "start": "562520",
    "end": "568480"
  },
  {
    "text": "subdirectory of your user dot you know in UNIX and make Oasis and Linux is the",
    "start": "568480",
    "end": "576530"
  },
  {
    "text": "is the default to hit make a directory hidden so it is not accessible if you",
    "start": "576530",
    "end": "582290"
  },
  {
    "text": "don't know that is there and then you have two different files why do you",
    "start": "582290",
    "end": "587600"
  },
  {
    "text": "think we created two different files for all these options because there are two different level of security into these",
    "start": "587600",
    "end": "593930"
  },
  {
    "text": "files one file contains the credentials so containing the credentials it's a",
    "start": "593930",
    "end": "599120"
  },
  {
    "text": "much more sensitive file the other one contains all the other configurations like the region so let's see it for",
    "start": "599120",
    "end": "606890"
  },
  {
    "text": "example if you do a SS configure and you set for the profile prod the AWS access",
    "start": "606890",
    "end": "615320"
  },
  {
    "text": "key to a full value this will be written here in the credential file and to",
    "start": "615320",
    "end": "622940"
  },
  {
    "text": "specify that it is the prod profile we use this bracket square syntax to",
    "start": "622940",
    "end": "629540"
  },
  {
    "text": "identify the name of the profile then if we put the secret access key to bar look",
    "start": "629540",
    "end": "637760"
  },
  {
    "text": "of course is exactly the same it's part of the credentials but if we put for",
    "start": "637760",
    "end": "643760"
  },
  {
    "text": "example the default region so for this profile this production profile I want to have the credentials using as the",
    "start": "643760",
    "end": "650920"
  },
  {
    "text": "default region ii us this goes into the AWS config and if you see the syntax for",
    "start": "650920",
    "end": "658420"
  },
  {
    "text": "the profile in the config file is slightly different because we opened the",
    "start": "658420",
    "end": "664360"
  },
  {
    "text": "prophet we prepare the profile to the name of the actual profile so here you",
    "start": "664360",
    "end": "669460"
  },
  {
    "text": "will get prod because I call it prod and then your profile prod the reason for",
    "start": "669460",
    "end": "675310"
  },
  {
    "text": "that is that in the configuration file in the config finally you may have more things than just profiles so we have to",
    "start": "675310",
    "end": "682090"
  },
  {
    "text": "specify that while in the credentials you only have profiles one good thing of",
    "start": "682090",
    "end": "688420"
  },
  {
    "text": "dis credentials is that this syntax and this file into this directory is the",
    "start": "688420",
    "end": "694270"
  },
  {
    "text": "default also for all the SDKs so if you configure the a tablet comment line and",
    "start": "694270",
    "end": "699310"
  },
  {
    "text": "then you download any SDK from a WS so I'm talking of Python a PHP Ruby or",
    "start": "699310",
    "end": "707110"
  },
  {
    "text": "whatever all these will automatically look for credentials here and so everything will be already configured",
    "start": "707110",
    "end": "712830"
  },
  {
    "text": "for for your SDK if you want also to set",
    "start": "712830",
    "end": "718750"
  },
  {
    "text": "up the output of course this is the format of the output to text the delimited format this is of course",
    "start": "718750",
    "end": "726130"
  },
  {
    "text": "another kind of configuration and all this means that you can really automate",
    "start": "726130",
    "end": "732850"
  },
  {
    "text": "also the creation of the profile with the command line interface so this is let's see this a little bit more complex",
    "start": "732850",
    "end": "739510"
  },
  {
    "text": "example so this is a script that creates an we use new user a new users inside an",
    "start": "739510",
    "end": "745540"
  },
  {
    "text": "AWS account you know with I am you have an address account and this account can have multiple users each one with a",
    "start": "745540",
    "end": "752140"
  },
  {
    "text": "different policy a different way to access to the data the first common AWS",
    "start": "752140",
    "end": "759460"
  },
  {
    "text": "em will create a user and you can specify as an option the user name so we",
    "start": "759460",
    "end": "764620"
  },
  {
    "text": "are creating the summit user then you can launch another comment that will",
    "start": "764620",
    "end": "771150"
  },
  {
    "text": "use AWS yam to create the credentials the access screens and cigarette ki and",
    "start": "771150",
    "end": "778320"
  },
  {
    "text": "you want to extract with the query command we will see how the query parameter works later on to extract this",
    "start": "778320",
    "end": "787150"
  },
  {
    "text": "information in the limited format text so the credential variable here it's an",
    "start": "787150",
    "end": "793300"
  },
  {
    "text": "environmental variable of the script will contain in winner delimited syntax",
    "start": "793300",
    "end": "798790"
  },
  {
    "text": "the access key and the secret key so now we can extract the access key the secret",
    "start": "798790",
    "end": "804910"
  },
  {
    "text": "key from this single variable using cut and we will use a delimiter based on",
    "start": "804910",
    "end": "811900"
  },
  {
    "text": "space so the first common the first part of the before the delimiter will be the",
    "start": "811900",
    "end": "817480"
  },
  {
    "text": "access key the second part so f2 will be the secret access key in this way we created a user created a set of",
    "start": "817480",
    "end": "824950"
  },
  {
    "text": "credentials extracted critters credentials and put it into two configuration variable now we can use",
    "start": "824950",
    "end": "832030"
  },
  {
    "text": "this to configuration variables to environmental variable to configure the command line interface saying ok now I",
    "start": "832030",
    "end": "839290"
  },
  {
    "text": "created a new profile that is the summit profile with this set of credentials the",
    "start": "839290",
    "end": "846010"
  },
  {
    "text": "secret key and the access key as they are in the environmental variable so this script really makes automatic the",
    "start": "846010",
    "end": "852670"
  },
  {
    "text": "creation of a new users of this credential you struck them and then you automatically configure locally into",
    "start": "852670",
    "end": "858460"
  },
  {
    "text": "your AWS command-line interface the credential that you want to use this is an idea that can help you for example",
    "start": "858460",
    "end": "864400"
  },
  {
    "text": "you can also create a user on demand use it for the purpose of what you need to",
    "start": "864400",
    "end": "869530"
  },
  {
    "text": "do maybe backup or so you need to write that down the stree maybe you want to",
    "start": "869530",
    "end": "876030"
  },
  {
    "text": "start or shut down a group of ec2 instances and then you can even delete",
    "start": "876030",
    "end": "882340"
  },
  {
    "text": "the user because you create the user on the mound and we saw that the SS",
    "start": "882340",
    "end": "890350"
  },
  {
    "text": "configure come and this is quite powerful here but one of the things that we saw was the use of this query",
    "start": "890350",
    "end": "896950"
  },
  {
    "text": "parameter and query was used to extract the information the access key and the",
    "start": "896950",
    "end": "902750"
  },
  {
    "text": "secret key in that commander this is because query is one of the most powerful option that you can use with",
    "start": "902750",
    "end": "909200"
  },
  {
    "text": "the command-line interface and the syntax is dash dash query and then you",
    "start": "909200",
    "end": "914900"
  },
  {
    "text": "put a string usually you would put under what the string let you pass to the",
    "start": "914900",
    "end": "921110"
  },
  {
    "text": "common line interface and we use the gem spot syntax the Janes spot syntax is a",
    "start": "921110",
    "end": "927040"
  },
  {
    "text": "standard and it's a syntax the apura syntax for a JSON content so how do we",
    "start": "927040",
    "end": "934550"
  },
  {
    "text": "work we work in this way so the iws command-line interface with get starting",
    "start": "934550",
    "end": "941420"
  },
  {
    "text": "from the top of the parameters from your command line interface we run the HTTP",
    "start": "941420",
    "end": "947090"
  },
  {
    "text": "request towards our API endpoints to execute the request so I want to",
    "start": "947090",
    "end": "952670"
  },
  {
    "text": "describe instance I want to upload something to s3 and then we will parse",
    "start": "952670",
    "end": "957680"
  },
  {
    "text": "the response the pencils will be formatted and then displayed on screen in the format that you want so the",
    "start": "957680",
    "end": "964640"
  },
  {
    "text": "formatted responses the step that will decide if you want to go with text with JSON with table format but the parcel",
    "start": "964640",
    "end": "972350"
  },
  {
    "text": "response in this part we apply the query parameter so when we parse the response",
    "start": "972350",
    "end": "977540"
  },
  {
    "text": "from the service we will apply the query so that you only get the subset of the",
    "start": "977540",
    "end": "983630"
  },
  {
    "text": "data that you ask and this is an example if you run this some of our api's you",
    "start": "983630",
    "end": "990020"
  },
  {
    "text": "get for example and it XML return code return data so in this case you have",
    "start": "990020",
    "end": "997130"
  },
  {
    "text": "this this is what our internally to the command line interface HTTP request will",
    "start": "997130",
    "end": "1003280"
  },
  {
    "text": "get feedback from from our API endpoints our CLI will internally change this into",
    "start": "1003280",
    "end": "1010540"
  },
  {
    "text": "JSON so this is exactly the same XML syntax in JSON and then we will apply",
    "start": "1010540",
    "end": "1016000"
  },
  {
    "text": "the query and this is an example of a query you see in this output you get a",
    "start": "1016000",
    "end": "1022240"
  },
  {
    "text": "list of users actually there is a single user but it's still a list for Jason because there are the square",
    "start": "1022240",
    "end": "1028668"
  },
  {
    "text": "brackets after you sir so you can extract user at zero user 0 is the first",
    "start": "1028669",
    "end": "1034730"
  },
  {
    "text": "user in the list in this case is one but can be more and you can also replace the",
    "start": "1034730",
    "end": "1039949"
  },
  {
    "text": "0 with an asterisk that means bring me all the users so all the list or you can",
    "start": "1039949",
    "end": "1045740"
  },
  {
    "text": "also use negative syntax so if you put minus 1 it would be the last user",
    "start": "1045740",
    "end": "1051350"
  },
  {
    "text": "reported minus 2 not the last one about the one before and then we actually",
    "start": "1051350",
    "end": "1058220"
  },
  {
    "text": "after we select the user 0 we don't want to have all the data associated with the",
    "start": "1058220",
    "end": "1063710"
  },
  {
    "text": "user structure that is here but we only want the user name at least because we",
    "start": "1063710",
    "end": "1068870"
  },
  {
    "text": "have square brackets of user name but and user ID so the query will extract",
    "start": "1068870",
    "end": "1075529"
  },
  {
    "text": "this information and this will be the return so at least containing a single element that is itself a list with the",
    "start": "1075529",
    "end": "1083809"
  },
  {
    "text": "user name the slash and the idea so this is an example of how the query common",
    "start": "1083809",
    "end": "1089269"
  },
  {
    "text": "works starting from the internal format to this returning from the API that can be already JSON that can also because ml",
    "start": "1089269",
    "end": "1096409"
  },
  {
    "text": "we convert it into JSON and then we apply the gem spot query to this JSON",
    "start": "1096409",
    "end": "1101690"
  },
  {
    "text": "document and this can be reported then to a formatted output so in case you",
    "start": "1101690",
    "end": "1108110"
  },
  {
    "text": "select table for example this would be the formatted output that you get from the table format this also works with",
    "start": "1108110",
    "end": "1120130"
  },
  {
    "text": "pagination you see there is on on the on your right of the slide the pagination",
    "start": "1120130",
    "end": "1126799"
  },
  {
    "text": "this is because some of our api's doesn't return all the data with a",
    "start": "1126799",
    "end": "1132260"
  },
  {
    "text": "single call Cinco for example of a list back at least object or honest three so",
    "start": "1132260",
    "end": "1138110"
  },
  {
    "text": "on an s3 bucket we don't have a maximum number of objects that you can have so",
    "start": "1138110",
    "end": "1143539"
  },
  {
    "text": "when you do at least we have some default that you can customize and after some point we end and return the first",
    "start": "1143539",
    "end": "1149779"
  },
  {
    "text": "list part of the list of object if we give you an endpoint that you can use to start again the next",
    "start": "1149779",
    "end": "1155399"
  },
  {
    "text": "the request to get the second part of the list of the of the object in the",
    "start": "1155399",
    "end": "1160529"
  },
  {
    "text": "bucket and the same for any API there's a strong list like with DynamoDB the query or even with easy to with the",
    "start": "1160529",
    "end": "1167279"
  },
  {
    "text": "described instance you can add something like this if you have a lot of instances this approach of the query even if it's",
    "start": "1167279",
    "end": "1174509"
  },
  {
    "text": "applied before the pagination it works the same so we filtered this before the",
    "start": "1174509",
    "end": "1179820"
  },
  {
    "text": "pagination and but at any iteration we will apply the same query the exact",
    "start": "1179820",
    "end": "1186359"
  },
  {
    "text": "syntax that I would have loved to show you with a live demo it's into is",
    "start": "1186359",
    "end": "1192029"
  },
  {
    "text": "described herein to this website where there is the full specification and an",
    "start": "1192029",
    "end": "1198839"
  },
  {
    "text": "interactive tutorial that you may use with the interactive tutorial use a sample data set the DISA JSON document",
    "start": "1198839",
    "end": "1206909"
  },
  {
    "text": "and then you can apply the query and see how this reaction gives a return code to you and this is the step that I have to",
    "start": "1206909",
    "end": "1217469"
  },
  {
    "text": "to go quick so I can do another test at",
    "start": "1217469",
    "end": "1223529"
  },
  {
    "text": "the end of this like the visitation but i have no no hopes so another important things that we added the quite recently",
    "start": "1223529",
    "end": "1230879"
  },
  {
    "text": "now is the waiters so you we saw you can create things and you can execute any",
    "start": "1230879",
    "end": "1236309"
  },
  {
    "text": "easy to s3 any aw service commander but",
    "start": "1236309",
    "end": "1241649"
  },
  {
    "text": "some of our comments take some time to be completed think for example if you",
    "start": "1241649",
    "end": "1247589"
  },
  {
    "text": "want to start a new ec2 instance when you start an issue ec2 instance this is the transition state and in situ",
    "start": "1247589",
    "end": "1254789"
  },
  {
    "text": "instance can be so usually when you start it it goes into pending and you often see that from the incident from",
    "start": "1254789",
    "end": "1261359"
  },
  {
    "text": "the in situ web console from pending research the best resource to allocate",
    "start": "1261359",
    "end": "1266429"
  },
  {
    "text": "to your instance and it goes into a running state from running you can stop it and then start it again so there is",
    "start": "1266429",
    "end": "1274710"
  },
  {
    "text": "this loop or you can reboot it so it goes into the rebooting state and it goes back and then this you can do a",
    "start": "1274710",
    "end": "1281669"
  },
  {
    "text": "shutdown and also you can terminate aniston so you destroy it because you don't need it anymore so let's imagine",
    "start": "1281669",
    "end": "1287880"
  },
  {
    "text": "it in a command-line interface that our script using the command line interface you want to start an ec2 instance and",
    "start": "1287880",
    "end": "1294360"
  },
  {
    "text": "when the eastern sea ray is ready you want to do something you need to know how much time it takes for the instance",
    "start": "1294360",
    "end": "1300930"
  },
  {
    "text": "to go from the pending state to the running state usually is a matter of few seconds but you still need to wait",
    "start": "1300930",
    "end": "1307800"
  },
  {
    "text": "because computers are much faster than us we we have to slow them down in these",
    "start": "1307800",
    "end": "1313710"
  },
  {
    "text": "cases so in this if you look at this is a simple scripted a lot of our customer over time bro so you starting from the",
    "start": "1313710",
    "end": "1321690"
  },
  {
    "text": "top lunch they stands using AWS ec2 run instances with all the option that you",
    "start": "1321690",
    "end": "1326910"
  },
  {
    "text": "want to run we want to use for this specific use case and this will return",
    "start": "1326910",
    "end": "1331920"
  },
  {
    "text": "because we use the query from the list of what we call is our internal naming",
    "start": "1331920",
    "end": "1337470"
  },
  {
    "text": "the list of the reservation that you create the list of instances and the distance ed so this will bring you the",
    "start": "1337470",
    "end": "1344850"
  },
  {
    "text": "list of the instance ed that has been started it can be only one but with the run instance you can also start more",
    "start": "1344850",
    "end": "1351540"
  },
  {
    "text": "than one instant instance at one this goes into this environmental variable the instance ID and then you can extract",
    "start": "1351540",
    "end": "1358470"
  },
  {
    "text": "with the second command an AWS easy to describe instances you describe this",
    "start": "1358470",
    "end": "1364470"
  },
  {
    "text": "instance this particular instance that you just launched to get with the query filter with the query option from the",
    "start": "1364470",
    "end": "1372270"
  },
  {
    "text": "reservation not the instance ed but the state name the state name is the textual",
    "start": "1372270",
    "end": "1378090"
  },
  {
    "text": "description of the state so it could be pending running the one that we just saw in the previous slide so now in this new",
    "start": "1378090",
    "end": "1385620"
  },
  {
    "text": "variable instance state you have the current state of distance and this distance has just been started it will",
    "start": "1385620",
    "end": "1391800"
  },
  {
    "text": "probably be still pending so what you do you do a while loop while the instance",
    "start": "1391800",
    "end": "1397470"
  },
  {
    "text": "state is not running sleep for one to three seconds and then check again the",
    "start": "1397470",
    "end": "1404040"
  },
  {
    "text": "instance state to see if the instances running this is a sample script that we saw a lot of our customer use not only",
    "start": "1404040",
    "end": "1411180"
  },
  {
    "text": "for ec2 because also DynamoDB similar behavior when you create a table you can take a few seconds until the",
    "start": "1411180",
    "end": "1417250"
  },
  {
    "text": "table is ready and this few seconds you have to slow down the script because the script will be immediately do something",
    "start": "1417250",
    "end": "1422650"
  },
  {
    "text": "into the dynamo DB table the problem we descriptive this it is not managing all possible states so for example what",
    "start": "1422650",
    "end": "1430180"
  },
  {
    "text": "happens here if I terminate by mistake maybe the instance before it goes",
    "start": "1430180",
    "end": "1436300"
  },
  {
    "text": "running so the essence is pending and ie terminated what would happen I'm very",
    "start": "1436300",
    "end": "1443620"
  },
  {
    "text": "nice infinite loop so you have to think of all the possible educators here and say okay if this happens I have to check",
    "start": "1443620",
    "end": "1451330"
  },
  {
    "text": "for the infinite loop maybe I have to put a timeout and this script starts to get longer and longer and instead of you",
    "start": "1451330",
    "end": "1458800"
  },
  {
    "text": "working on your application you work writing so I've wrapper around our CLI so this is actually the same steps that",
    "start": "1458800",
    "end": "1466450"
  },
  {
    "text": "we just saw so all this was an example to see why we introduce the waiters the",
    "start": "1466450",
    "end": "1472120"
  },
  {
    "text": "waiters will make this script much simpler because this script is not managing the timeout is not managing the",
    "start": "1472120",
    "end": "1478720"
  },
  {
    "text": "failure state the edge cases and its unwritten code that you must develop and",
    "start": "1478720",
    "end": "1484150"
  },
  {
    "text": "maintain and keep updated if we change something this is the syntax that we introduced so the first step to launch",
    "start": "1484150",
    "end": "1490810"
  },
  {
    "text": "the instance is exactly the same then we introduce the easy to wait this is what",
    "start": "1490810",
    "end": "1496570"
  },
  {
    "text": "we've been called by waiters that will wait until the instance is running so you pass one or possibly more lists of",
    "start": "1496570",
    "end": "1504460"
  },
  {
    "text": "instances ed can be one that can be more and this second commonly the places you",
    "start": "1504460",
    "end": "1509470"
  },
  {
    "text": "to wait instance running will wait until all this those instances will go into the running state and if they are",
    "start": "1509470",
    "end": "1516250"
  },
  {
    "text": "terminated for example it will automatically go on sobredosis we manage all the possible edge cases we have time",
    "start": "1516250",
    "end": "1523570"
  },
  {
    "text": "we manage the time outs so you don't have to write your own script it's really helpful every time you have an",
    "start": "1523570",
    "end": "1529720"
  },
  {
    "text": "action on our services look if we have already made available the waiter so one",
    "start": "1529720",
    "end": "1535600"
  },
  {
    "text": "example is here for ec2 another very common example is for dynamo dB all of",
    "start": "1535600",
    "end": "1542020"
  },
  {
    "text": "our comments are very well described in the documentation of the CLI that is available online but",
    "start": "1542020",
    "end": "1549040"
  },
  {
    "text": "it's also available within the within the common line itself so if you run for",
    "start": "1549040",
    "end": "1554710"
  },
  {
    "text": "example AWS easy to help you get the list of all the possible option that you",
    "start": "1554710",
    "end": "1560230"
  },
  {
    "text": "can use a sub common and then if you add this a comment and then help you get the",
    "start": "1560230",
    "end": "1565270"
  },
  {
    "text": "help of the specific subcom and the same for the way there if you do AWS you see to wait help you get the list of the",
    "start": "1565270",
    "end": "1573250"
  },
  {
    "text": "waiter that we implemented for in situ and I think you can also imagine the",
    "start": "1573250",
    "end": "1578320"
  },
  {
    "text": "same syntax for DynamoDB so it will be a WS DynamoDB wait help you get the list",
    "start": "1578320",
    "end": "1583570"
  },
  {
    "text": "of waiter for dynamo dB so in this case we are really trying to make it simple",
    "start": "1583570",
    "end": "1589960"
  },
  {
    "text": "to do automation and this step of waiting for resources to act is also a",
    "start": "1589960",
    "end": "1596860"
  },
  {
    "text": "very common mistake in automation scripts because maybe when you work in a very small test environment things work",
    "start": "1596860",
    "end": "1603700"
  },
  {
    "text": "because the environment is small everything starts quickly then when you go in production of course things gets",
    "start": "1603700",
    "end": "1609730"
  },
  {
    "text": "larger a little bit slower so always think of you have transition States for",
    "start": "1609730",
    "end": "1614800"
  },
  {
    "text": "your AWS resources so that you can manage the transition of the state and we are trying to help with these waiters",
    "start": "1614800",
    "end": "1622320"
  },
  {
    "text": "let's see some more advanced some more",
    "start": "1622830",
    "end": "1628120"
  },
  {
    "text": "advanced the usage of the command line interface and since as you can imagine",
    "start": "1628120",
    "end": "1633880"
  },
  {
    "text": "every command as a lot of different options we introduce it templates to",
    "start": "1633880",
    "end": "1639370"
  },
  {
    "text": "make it simple for you to manage all these possible options without always looking to the documentation imagine it",
    "start": "1639370",
    "end": "1646480"
  },
  {
    "text": "you want to for example run an instance what happens is that internally our command line interface is completely the",
    "start": "1646480",
    "end": "1653410"
  },
  {
    "text": "data driven so internally all the data is in kept into a JSON syntax similar to",
    "start": "1653410",
    "end": "1659410"
  },
  {
    "text": "this one this is an example of run instances as I was saying and if you",
    "start": "1659410",
    "end": "1664510"
  },
  {
    "text": "look inside this very easy to read the JSON you will find that there are X",
    "start": "1664510",
    "end": "1670380"
  },
  {
    "text": "Lee in all the option that you have to pass through the common line so the image ID so there are me that you want",
    "start": "1670380",
    "end": "1676620"
  },
  {
    "text": "to use the minimum and maximum number of instance that you want to start the key for the login the key pair the security",
    "start": "1676620",
    "end": "1683670"
  },
  {
    "text": "group that you want to put around this instance so what we thought is let's take all this information and put it on",
    "start": "1683670",
    "end": "1689400"
  },
  {
    "text": "a side and this can be a nice argument that you can pass in a single pass to",
    "start": "1689400",
    "end": "1696750"
  },
  {
    "text": "the home from command line interface as in JSON format so you see is much more readable that all these options and in",
    "start": "1696750",
    "end": "1703950"
  },
  {
    "text": "this way you can also save the arguments and reuse them and what is nice is good",
    "start": "1703950",
    "end": "1709800"
  },
  {
    "text": "you can also rewrite them so if you write this albumin to JSON you can use",
    "start": "1709800",
    "end": "1715080"
  },
  {
    "text": "this syntax to run the comments 0 AWS ec2 the command the subcommander remains",
    "start": "1715080",
    "end": "1722160"
  },
  {
    "text": "exactly the same so it's a run instances and then you say all the arguments are not hit on the line but are into this",
    "start": "1722160",
    "end": "1728970"
  },
  {
    "text": "click input a JSON file and this file syntax this file URL syntax is used by",
    "start": "1728970",
    "end": "1737940"
  },
  {
    "text": "the common line interface to understand that the value of the of this parameter is not what I ran a road here in the",
    "start": "1737940",
    "end": "1744300"
  },
  {
    "text": "command line but it's contained into that file and by the way I tell you this",
    "start": "1744300",
    "end": "1749310"
  },
  {
    "text": "because it took me some time to understand it if you use to slash after",
    "start": "1749310",
    "end": "1754830"
  },
  {
    "text": "file the location of the file is relative to where you are if you put",
    "start": "1754830",
    "end": "1760080"
  },
  {
    "text": "sorry if you put three slashes is absolute so the third / goes as the",
    "start": "1760080",
    "end": "1765210"
  },
  {
    "text": "absolute part of the file system of course this is all so sorry one thing is",
    "start": "1765210",
    "end": "1772830"
  },
  {
    "text": "that you can also override some of the parameters so for example if you want to start another instance where everything",
    "start": "1772830",
    "end": "1779910"
  },
  {
    "text": "is the same as this JSON file but you want to change the image ID you can still pass the JSON file and then add",
    "start": "1779910",
    "end": "1787050"
  },
  {
    "text": "only the parameter that you want to override this time like the image ID or",
    "start": "1787050",
    "end": "1792450"
  },
  {
    "text": "the maximum count or the security group so you can keep your JSON file as templates and then overwrite only those",
    "start": "1792450",
    "end": "1799110"
  },
  {
    "text": "option that you need to change but the Jason syntax of course the same issue I have to remember the",
    "start": "1799110",
    "end": "1806130"
  },
  {
    "text": "JSON syntax the first time that's why we also added another option that is generate CLE skeleton that will generate",
    "start": "1806130",
    "end": "1813060"
  },
  {
    "text": "the mtj some template for you and we'll print it to standard output so if you",
    "start": "1813060",
    "end": "1819090"
  },
  {
    "text": "want to know how to launch an ec2 instance and you don't want to remember all the possible option you just run",
    "start": "1819090",
    "end": "1824580"
  },
  {
    "text": "easy to run instances or any calm and generate clean skeleton then you send",
    "start": "1824580",
    "end": "1829980"
  },
  {
    "text": "this to a file under TMP for example and you have the empty skeleton over all the",
    "start": "1829980",
    "end": "1836490"
  },
  {
    "text": "JSON that you have to populate with the image ad all the security group and then",
    "start": "1836490",
    "end": "1841500"
  },
  {
    "text": "you can pass it as before so generate clean skeleton and the previous step",
    "start": "1841500",
    "end": "1846710"
  },
  {
    "text": "clean put JSON really can make it easy to understand which parameter you want",
    "start": "1846710",
    "end": "1852060"
  },
  {
    "text": "to use and reuse the JSON file as templates when you only have to overwrite the option that you want to",
    "start": "1852060",
    "end": "1858300"
  },
  {
    "text": "change in years another step that I have to go fast where I would like to show",
    "start": "1858300",
    "end": "1864750"
  },
  {
    "text": "this the demo here i would use DynamoDB and the idea is that you may if you want",
    "start": "1864750",
    "end": "1869880"
  },
  {
    "text": "to create two similar tables with the different name you the first time create the JSON template you generate them",
    "start": "1869880",
    "end": "1876780"
  },
  {
    "text": "plate and then you apply and then the second time you apply the the JSON",
    "start": "1876780",
    "end": "1881790"
  },
  {
    "text": "template again overriding the template the table name another interesting",
    "start": "1881790",
    "end": "1888120"
  },
  {
    "text": "feature this is one of the latest features that we are that is the credential provider the credential",
    "start": "1888120",
    "end": "1894510"
  },
  {
    "text": "locator inside the command line interface will automatically look for credentials inside the very mental",
    "start": "1894510",
    "end": "1900780"
  },
  {
    "text": "variables if they are not into the evironment availables we look into the credential file that we mentioned at the",
    "start": "1900780",
    "end": "1907170"
  },
  {
    "text": "beginning and if you are in easy to instance will also look inside the",
    "start": "1907170",
    "end": "1913140"
  },
  {
    "text": "amazon ec2 instance metadata to use easy to roles so never use credentials inside",
    "start": "1913140",
    "end": "1919800"
  },
  {
    "text": "an ec2 instance always use easy to roles or instance profiles as we sometimes",
    "start": "1919800",
    "end": "1925170"
  },
  {
    "text": "called them but we also added a new possibility the possibility to assume",
    "start": "1925170",
    "end": "1931110"
  },
  {
    "text": "are all the what we are saying is that using a user you can assume are all that is different",
    "start": "1931110",
    "end": "1937469"
  },
  {
    "text": "from what the user is doing this is a very nice way to delegate access to a wh",
    "start": "1937469",
    "end": "1942989"
  },
  {
    "text": "resources and it's very powerful if you have multiple accounts and you want to",
    "start": "1942989",
    "end": "1948570"
  },
  {
    "text": "have a single centralized station to control mode more accounts and this is",
    "start": "1948570",
    "end": "1954029"
  },
  {
    "text": "also what we usually suggest don't have a single AWS account use an account for production and another one for",
    "start": "1954029",
    "end": "1960299"
  },
  {
    "text": "everything it is not production because the security is different you don't want to mix and match the two things but",
    "start": "1960299",
    "end": "1966389"
  },
  {
    "text": "sometimes you may want someone using the development account of access may be",
    "start": "1966389",
    "end": "1971519"
  },
  {
    "text": "read-only access to the production account and this is where things came handy so let's imagine it you have these",
    "start": "1971519",
    "end": "1977849"
  },
  {
    "text": "two accounts the production account and the development account in the production account you have a s3 bucket",
    "start": "1977849",
    "end": "1984419"
  },
  {
    "text": "and maybe you want to give read access to a developer to this s3 data what you",
    "start": "1984419",
    "end": "1991379"
  },
  {
    "text": "can do is that you can create a role inside the de production account so from",
    "start": "1991379",
    "end": "1997679"
  },
  {
    "text": "the young console you create a role this role has two components the first",
    "start": "1997679",
    "end": "2002989"
  },
  {
    "text": "component that you have to give in the creation is the trust policy the Tres policy tales to the to Twitter place who",
    "start": "2002989",
    "end": "2010999"
  },
  {
    "text": "can assume this policy because they have the trust and in the trust policy you",
    "start": "2010999",
    "end": "2016099"
  },
  {
    "text": "can reference a user inside an order AWS account in this case you say this user",
    "start": "2016099",
    "end": "2022369"
  },
  {
    "text": "that is in another AWS account development account can do something",
    "start": "2022369",
    "end": "2027769"
  },
  {
    "text": "inside this production account what can you do what is specified in the second",
    "start": "2027769",
    "end": "2033979"
  },
  {
    "text": "component of the role that is the role policy and here for example I can give read-only access to this three bucket to",
    "start": "2033979",
    "end": "2042139"
  },
  {
    "text": "a single exit packet to all this reebok the syntax is quite broad so what you have to do now is that the user can call",
    "start": "2042139",
    "end": "2049579"
  },
  {
    "text": "the assume role API of the our security token service aw SSDs and it will get",
    "start": "2049579",
    "end": "2056450"
  },
  {
    "text": "some temporary credentials that will give him access to the what was",
    "start": "2056450",
    "end": "2062118"
  },
  {
    "text": "specified in the in the policy role and these are temporary credentials that must be rotated every 15 minutes or you can",
    "start": "2062119",
    "end": "2069579"
  },
  {
    "text": "specify a longer period but must also be rotated so it's something that you have to do manually is not easy because you",
    "start": "2069579",
    "end": "2076329"
  },
  {
    "text": "have to around the assume role get the credentials when the credential inspire you have to run the assume role again to",
    "start": "2076329",
    "end": "2082929"
  },
  {
    "text": "make it much much simpler we integrated this into the AWS console so what you",
    "start": "2082929",
    "end": "2088210"
  },
  {
    "text": "have to do you have to create a production role that is another profile",
    "start": "2088210",
    "end": "2093250"
  },
  {
    "text": "like the profile that we saw where you specify a role amazon resource name a",
    "start": "2093250",
    "end": "2098890"
  },
  {
    "text": "role arm so you reference a role can be in another account and then you have to",
    "start": "2098890",
    "end": "2104440"
  },
  {
    "text": "specify a user inside this account that is the one that it is doing as you",
    "start": "2104440",
    "end": "2110020"
  },
  {
    "text": "remember the assume color because you need a user to the resume role and then it will be able to do more things so in",
    "start": "2110020",
    "end": "2118119"
  },
  {
    "text": "this case the development user can access their own art but of course there's the server-side configuration",
    "start": "2118119",
    "end": "2124779"
  },
  {
    "text": "otherwise this would be not very good for security and this is an example of what you can see in the configuration",
    "start": "2124779",
    "end": "2130750"
  },
  {
    "text": "file here you have the credential of the development user there you have the role and they are",
    "start": "2130750",
    "end": "2138080"
  },
  {
    "text": "the role and the suits profile to use and what this is saying is to assume",
    "start": "2138080",
    "end": "2143480"
  },
  {
    "text": "this role you must use the development profile so here's another step that I",
    "start": "2143480",
    "end": "2151190"
  },
  {
    "text": "cannot show alive one interesting thing is that you can use this directly like",
    "start": "2151190",
    "end": "2156470"
  },
  {
    "text": "this so you can assume the role so you have just to specify a profile like we",
    "start": "2156470",
    "end": "2161600"
  },
  {
    "text": "did you show so you view for example you want to do you want to copy some file",
    "start": "2161600",
    "end": "2166940"
  },
  {
    "text": "and read from history and then you specify the prod role as a dash dash profile and you can also activate",
    "start": "2166940",
    "end": "2173710"
  },
  {
    "text": "multi-factor authentication in that case you know booty factored education means that the user it must use another format",
    "start": "2173710",
    "end": "2179960"
  },
  {
    "text": "authentication rather than the password and usually use a token generation like a camel toe key or the mobile",
    "start": "2179960",
    "end": "2185570"
  },
  {
    "text": "application regenerate tokens on the visual devices and if you activate that",
    "start": "2185570",
    "end": "2191060"
  },
  {
    "text": "then you can you can also ask for an additional password that the token",
    "start": "2191060",
    "end": "2197930"
  },
  {
    "text": "before accessing the resources what is interesting is that the assume role and mfa are cached from the depending on the",
    "start": "2197930",
    "end": "2205520"
  },
  {
    "text": "life of the credentials so for 15 minutes you can continue to work and the",
    "start": "2205520",
    "end": "2210950"
  },
  {
    "text": "credentials are cached so you don't have continuously to access this the SDS and to assume the role you just need to do",
    "start": "2210950",
    "end": "2217460"
  },
  {
    "text": "it one and then everything is cash last thing that I want to show you is the",
    "start": "2217460",
    "end": "2222500"
  },
  {
    "text": "street streaming with HD streaming but we add that is the possibility to run",
    "start": "2222500",
    "end": "2228560"
  },
  {
    "text": "comments like the copy avoiding disk access so the SS three copies coping",
    "start": "2228560",
    "end": "2235700"
  },
  {
    "text": "from a street west three or from local twist three we want to avoid this access",
    "start": "2235700",
    "end": "2241670"
  },
  {
    "text": "so we added a syntax that is very common in UNIX the dash the dash means the standard input or standard output",
    "start": "2241670",
    "end": "2248120"
  },
  {
    "text": "depending if it's the first of the second parameter so this syntax with mean copying everything that is in",
    "start": "2248120",
    "end": "2253970"
  },
  {
    "text": "standard input so the output of a command to this object identified by",
    "start": "2253970",
    "end": "2260000"
  },
  {
    "text": "this bucket in this key and the opposite is the same so take this object and send",
    "start": "2260000",
    "end": "2265670"
  },
  {
    "text": "it to standard output this is powerful because allows you to automate things without",
    "start": "2265670",
    "end": "2271570"
  },
  {
    "text": "any disk access and one use case that we saw the customer like the most is the compression without using the earth",
    "start": "2271570",
    "end": "2278200"
  },
  {
    "text": "drive so in this case what we do is awss three copy an original file send the",
    "start": "2278200",
    "end": "2284110"
  },
  {
    "text": "output to standard output then we use the UNIX pipe to send this output to our",
    "start": "2284110",
    "end": "2289260"
  },
  {
    "text": "compressor utilities in this case bit zip can be gzip can be any compressor",
    "start": "2289260",
    "end": "2294700"
  },
  {
    "text": "and the compressive output is sent as a standard output to the key dot bg2 or",
    "start": "2294700",
    "end": "2300940"
  },
  {
    "text": "the extension 81 so this is reading a 5-3 comp reaming or doing whatever you",
    "start": "2300940",
    "end": "2306640"
  },
  {
    "text": "want and writing the output to s3 without any local disk access so it's",
    "start": "2306640",
    "end": "2311650"
  },
  {
    "text": "very effective to be used so as a summary we saw a lot of things not live",
    "start": "2311650",
    "end": "2318310"
  },
  {
    "text": "sorry how to manage configuration and manage profiles and rolls with the",
    "start": "2318310",
    "end": "2323980"
  },
  {
    "text": "configuration waiters if you have instance transition state so then I'm gonna be when you create a table how to",
    "start": "2323980",
    "end": "2330820"
  },
  {
    "text": "use the query syntax and the James part dot org website will explain it much better than I did templates you can",
    "start": "2330820",
    "end": "2338050"
  },
  {
    "text": "generate the skeleton of your template use it and overwrite options how to manage credential providers and Amazon",
    "start": "2338050",
    "end": "2345070"
  },
  {
    "text": "s3 streaming to read and write to standard input a standard output the directory from history without any disk",
    "start": "2345070",
    "end": "2351700"
  },
  {
    "text": "access for more information we are here so you know this very colorful t-shirts",
    "start": "2351700",
    "end": "2358180"
  },
  {
    "text": "are here to help you today but we have also a lot of information online so the",
    "start": "2358180",
    "end": "2364270"
  },
  {
    "text": "common line interface is open suse on get up so you can see the source and maybe improve it if you want then there",
    "start": "2364270",
    "end": "2370360"
  },
  {
    "text": "is the user guide and the reference guide there is a full room online so when we are not here you can use the",
    "start": "2370360",
    "end": "2376180"
  },
  {
    "text": "forum and someone will try to help you with your questions and this is the specification the last one for the James",
    "start": "2376180",
    "end": "2381670"
  },
  {
    "text": "part so thank you for your for your dance",
    "start": "2381670",
    "end": "2387280"
  },
  {
    "text": "you",
    "start": "2405100",
    "end": "2407160"
  }
]