[
  {
    "text": "Good morning, everyone.",
    "start": "6572",
    "end": "7599"
  },
  {
    "text": "Welcome to this episode\nof This is My Architecture.",
    "start": "7623",
    "end": "10142"
  },
  {
    "text": "My name is Marc\nand today I'm with Pierre,",
    "start": "10177",
    "end": "12137"
  },
  {
    "text": "from the Klap.",
    "start": "12169",
    "end": "13802"
  },
  {
    "text": "- Welcome, Pierre.\n- Hello Marc.",
    "start": "13827",
    "end": "15429"
  },
  {
    "text": "Well, tell me Pierre,\ncould you tell us a little bit",
    "start": "15474",
    "end": "17518"
  },
  {
    "text": "about Klap's use case today?",
    "start": "17534",
    "end": "19508"
  },
  {
    "text": "Yes, so Klap does automated editing",
    "start": "19532",
    "end": "22330"
  },
  {
    "text": "and video processing for sports.",
    "start": "22354",
    "end": "24997"
  },
  {
    "text": "It is used for sports betting",
    "start": "25021",
    "end": "26979"
  },
  {
    "text": "or sport events of all kinds.",
    "start": "27003",
    "end": "31238"
  },
  {
    "text": "We manage large video streams,",
    "start": "31262",
    "end": "32979"
  },
  {
    "text": "for example, football matches,",
    "start": "33003",
    "end": "35879"
  },
  {
    "text": "we make edits, in which we include",
    "start": "35904",
    "end": "37787"
  },
  {
    "text": "all the goals of the football match",
    "start": "37811",
    "end": "39406"
  },
  {
    "text": "or statistics, such as the number\nof passes per player.",
    "start": "39430",
    "end": "42195"
  },
  {
    "text": "Right, and today you've created",
    "start": "42219",
    "end": "43829"
  },
  {
    "text": "your app solution directly on AWS.",
    "start": "43853",
    "end": "46039"
  },
  {
    "text": "Could you tell us more about it?",
    "start": "46063",
    "end": "47499"
  },
  {
    "text": "Yes, we used AWS and its cloud,",
    "start": "47523",
    "end": "50843"
  },
  {
    "text": "first for its storage, Amazon S3,",
    "start": "50868",
    "end": "54108"
  },
  {
    "text": "which allows us to manage huge videos",
    "start": "54132",
    "end": "56219"
  },
  {
    "text": "since we handle very high quality streams,",
    "start": "56243",
    "end": "59595"
  },
  {
    "text": "from 50 Mbps per second,",
    "start": "59619",
    "end": "61043"
  },
  {
    "text": "which is about 50 gigabytes\nfor two hours of video.",
    "start": "61067",
    "end": "63601"
  },
  {
    "text": "Thus, we quickly have a lot\nof video to manage",
    "start": "63625",
    "end": "66386"
  },
  {
    "text": "and managing that in the AWS cloud",
    "start": "66410",
    "end": "69964"
  },
  {
    "text": "allows us not to manage videos\non hard drives,",
    "start": "69988",
    "end": "72790"
  },
  {
    "text": "which creates reliability issues.",
    "start": "72814",
    "end": "74899"
  },
  {
    "text": "And in the same way, we also use a lot",
    "start": "74923",
    "end": "76982"
  },
  {
    "text": "of AWS Lambda for computations,",
    "start": "77007",
    "end": "78661"
  },
  {
    "text": "which also allows us",
    "start": "78685",
    "end": "80367"
  },
  {
    "text": "not to have a single server\ndoing computations,",
    "start": "80391",
    "end": "82738"
  },
  {
    "text": "but to distribute computations\nin the Amazon Cloud.",
    "start": "82762",
    "end": "85096"
  },
  {
    "text": "All right, and could you describe",
    "start": "85120",
    "end": "86806"
  },
  {
    "text": "the architecture we have on the board?",
    "start": "86830",
    "end": "88708"
  },
  {
    "text": "Yes, then I'll show you\nthe path used by a video",
    "start": "88732",
    "end": "91520"
  },
  {
    "text": "in the Klap cloud.",
    "start": "91544",
    "end": "93000"
  },
  {
    "text": "The video arrives in an Amazon S3 bucket",
    "start": "93024",
    "end": "98358"
  },
  {
    "text": "and the arrival of this video\nwill automatically start",
    "start": "99480",
    "end": "102522"
  },
  {
    "text": "the execution, a Step Function execution.",
    "start": "103269",
    "end": "107269"
  },
  {
    "text": "This Step Function execution\nwill trigger sequentially",
    "start": "107457",
    "end": "112457"
  },
  {
    "text": "four steps.",
    "start": "112887",
    "end": "114051"
  },
  {
    "text": "We start first with a Lambda",
    "start": "114075",
    "end": "116617"
  },
  {
    "text": "that will take this video",
    "start": "116899",
    "end": "119146"
  },
  {
    "text": "and transform it into thousands of frames",
    "start": "119170",
    "end": "121130"
  },
  {
    "text": "that will be stored again on Amazon S3",
    "start": "121393",
    "end": "123915"
  },
  {
    "text": "as PNG.",
    "start": "123939",
    "end": "124904"
  },
  {
    "text": "All right, so once you've generated",
    "start": "124928",
    "end": "126489"
  },
  {
    "text": "all these frames, what are\nyou going to do with them?",
    "start": "126513",
    "end": "129638"
  },
  {
    "text": "Then these images are then analyzed",
    "start": "129662",
    "end": "133550"
  },
  {
    "text": "by a second Lambda.",
    "start": "133574",
    "end": "135050"
  },
  {
    "text": "But this second Lambda is going\nto list the images,",
    "start": "135074",
    "end": "137162"
  },
  {
    "text": "and since there's a large\nnumber of images,",
    "start": "137186",
    "end": "139589"
  },
  {
    "text": "there are a large amount of computations to do,",
    "start": "139613",
    "end": "141561"
  },
  {
    "text": "in fact, instead of doing\nthe computation directly,",
    "start": "141585",
    "end": "144044"
  },
  {
    "text": "it's going to run a batch process,",
    "start": "144692",
    "end": "147067"
  },
  {
    "text": "in batches of 50 to 200 images in Lambda's",
    "start": "147335",
    "end": "150201"
  },
  {
    "text": "that are going to be run in parallel.",
    "start": "150225",
    "end": "151586"
  },
  {
    "text": "So, in practice, it's going to launch,",
    "start": "151711",
    "end": "154793"
  },
  {
    "text": "it can be 50 or 100 Lambda's in parallel,",
    "start": "156073",
    "end": "158935"
  },
  {
    "text": "or up to 1000 Lambda's,",
    "start": "158959",
    "end": "160061"
  },
  {
    "text": "since that's what we can do\nwith AWS,",
    "start": "160085",
    "end": "162210"
  },
  {
    "text": "which will process",
    "start": "162234",
    "end": "163456"
  },
  {
    "text": "all the images of the video\nat the same time",
    "start": "163480",
    "end": "165805"
  },
  {
    "text": "and will extract, thanks\nto a TensorFlow model,",
    "start": "165829",
    "end": "169121"
  },
  {
    "text": "for example the position\nof the ball in each image",
    "start": "169693",
    "end": "172614"
  },
  {
    "text": "and store this position again",
    "start": "172639",
    "end": "174777"
  },
  {
    "text": "in an Amazon S3 bucket.",
    "start": "174801",
    "end": "176243"
  },
  {
    "text": "All right, so you have trained\na TensorFlow model",
    "start": "176268",
    "end": "178946"
  },
  {
    "text": "and then imported it\ninto a Lambda function.",
    "start": "178970",
    "end": "181328"
  },
  {
    "text": "Why did you choose the Lambda inference?",
    "start": "181352",
    "end": "184315"
  },
  {
    "text": "Lambda has a lot\nof advantages in this case.",
    "start": "184339",
    "end": "187137"
  },
  {
    "text": "First of all, it is a system\nthat is extremely reliable",
    "start": "187161",
    "end": "189258"
  },
  {
    "text": "because as our computation is distributed,",
    "start": "189282",
    "end": "191428"
  },
  {
    "text": "if one of the computation units falls,",
    "start": "191452",
    "end": "193286"
  },
  {
    "text": "we can restart it dynamically.",
    "start": "193562",
    "end": "194922"
  },
  {
    "text": "Secondly, it's extremely scalable,\nas I explained,",
    "start": "195662",
    "end": "198377"
  },
  {
    "text": "regardless of the amount of video",
    "start": "198401",
    "end": "200283"
  },
  {
    "text": "we have to process.",
    "start": "200307",
    "end": "201349"
  },
  {
    "text": "You can constantly adjust the available\ncomputing capacity by simply",
    "start": "201646",
    "end": "206147"
  },
  {
    "text": "sending more Lambda's in parallel.",
    "start": "206407",
    "end": "208860"
  },
  {
    "text": "And finally, in terms of cost,",
    "start": "208884",
    "end": "210343"
  },
  {
    "text": "it's interesting because it allows\nus to manage",
    "start": "210829",
    "end": "215161"
  },
  {
    "text": "all our Lambda computations",
    "start": "216428",
    "end": "218812"
  },
  {
    "text": "and not have to pay for the scale up\nand scale down",
    "start": "218836",
    "end": "222028"
  },
  {
    "text": "that we can have\non the usual instances.",
    "start": "222053",
    "end": "224590"
  },
  {
    "text": "All right, so on this second step,",
    "start": "224614",
    "end": "226133"
  },
  {
    "text": "you're going to generate features",
    "start": "226157",
    "end": "227185"
  },
  {
    "text": "that will be stored on S3.",
    "start": "227209",
    "end": "228663"
  },
  {
    "text": "What are you going to do\nwith these features afterwards?",
    "start": "228687",
    "end": "230506"
  },
  {
    "text": "These features are processed\nby the following Lambda",
    "start": "230530",
    "end": "235821"
  },
  {
    "text": "in the Step Function execution.",
    "start": "236113",
    "end": "239154"
  },
  {
    "text": "This Lambda is similar\nto a decision engine,",
    "start": "239948",
    "end": "241905"
  },
  {
    "text": "i.e. we know where the ball\nis in each frame.",
    "start": "241929",
    "end": "244680"
  },
  {
    "text": "What we're going to do...\nwe also know where the goal is.",
    "start": "245221",
    "end": "247763"
  },
  {
    "text": "We just have to look at",
    "start": "248165",
    "end": "249249"
  },
  {
    "text": "when the ball enters the goal,",
    "start": "249273",
    "end": "251032"
  },
  {
    "text": "in which frame, and decide\nat that moment",
    "start": "251098",
    "end": "253227"
  },
  {
    "text": "which editing we want to do.",
    "start": "253251",
    "end": "254310"
  },
  {
    "text": "In this case, we want\na slow motion of the goal.",
    "start": "254334",
    "end": "257456"
  },
  {
    "text": "So, that decision is made",
    "start": "257802",
    "end": "259969"
  },
  {
    "text": "in that Lambda,",
    "start": "259998",
    "end": "261982"
  },
  {
    "text": "based on all the detections\nthat were made in the frames,",
    "start": "262007",
    "end": "263491"
  },
  {
    "text": "and that will then allow us to edit.",
    "start": "263516",
    "end": "265242"
  },
  {
    "text": "All right, so once you've determined",
    "start": "265266",
    "end": "267039"
  },
  {
    "text": "the decision engine, how do you launch",
    "start": "267063",
    "end": "269154"
  },
  {
    "text": "the editing step?",
    "start": "269178",
    "end": "270437"
  },
  {
    "text": "Well, the editing step is not done",
    "start": "270461",
    "end": "271980"
  },
  {
    "text": "in a Lambda function.",
    "start": "272004",
    "end": "273176"
  },
  {
    "text": "It's done in an ECS cluster.",
    "start": "273200",
    "end": "274992"
  },
  {
    "text": "This ECS cluster carries EC2 instances.",
    "start": "275433",
    "end": "279975"
  },
  {
    "text": "These EC2 instances will carry",
    "start": "280035",
    "end": "284310"
  },
  {
    "text": "an FFmpeg engine that will do\nthe actual editing of the video",
    "start": "284334",
    "end": "290085"
  },
  {
    "text": "and then send this video",
    "start": "290726",
    "end": "292435"
  },
  {
    "text": "to the streaming platforms...",
    "start": "292881",
    "end": "294334"
  },
  {
    "text": "All right.",
    "start": "294358",
    "end": "295298"
  },
  {
    "text": "...so that it can be viewed\nby the customers of our customers.",
    "start": "295322",
    "end": "298852"
  },
  {
    "text": "All right, and why did you\nchoose specifically",
    "start": "298876",
    "end": "301355"
  },
  {
    "text": "ECS and not Lambda for this last step?",
    "start": "301379",
    "end": "303880"
  },
  {
    "text": "Well, at Klap, we're big fans of Lambda.",
    "start": "304301",
    "end": "307551"
  },
  {
    "text": "It's got a lot of advantages\nover the whole computation.",
    "start": "307898",
    "end": "311331"
  },
  {
    "text": "But the problem\nwith this last function step",
    "start": "311355",
    "end": "314774"
  },
  {
    "text": "is that you can't have",
    "start": "314798",
    "end": "318030"
  },
  {
    "text": "a computation that lasts\nless than 15 minutes.",
    "start": "318054",
    "end": "321013"
  },
  {
    "text": "Let’s imagine that we want\nto edit a goal.",
    "start": "321377",
    "end": "324824"
  },
  {
    "text": "For the 20 minutes before that goal,",
    "start": "324848",
    "end": "327310"
  },
  {
    "text": "you have to do all the transcoding, etc.",
    "start": "327334",
    "end": "329078"
  },
  {
    "text": "These are rather heavy computations",
    "start": "329102",
    "end": "330302"
  },
  {
    "text": "and therefore the limitations\nthat are inherent",
    "start": "330512",
    "end": "332981"
  },
  {
    "text": "to Lambda functions,\nin fact, can create",
    "start": "333005",
    "end": "336636"
  },
  {
    "text": "business problems for us,\non this last step.",
    "start": "336660",
    "end": "339886"
  },
  {
    "text": "So we preferred to use an ECS Cluster,",
    "start": "339910",
    "end": "342536"
  },
  {
    "text": "which allows us to have fewer limitations,",
    "start": "342803",
    "end": "344697"
  },
  {
    "text": "to be freer.",
    "start": "344721",
    "end": "345775"
  },
  {
    "text": "And since it's not",
    "start": "345799",
    "end": "348197"
  },
  {
    "text": "the most expensive step for us,",
    "start": "348221",
    "end": "349713"
  },
  {
    "text": "we didn't need",
    "start": "349737",
    "end": "350988"
  },
  {
    "text": "to optimize a lot in this part.",
    "start": "351012",
    "end": "353221"
  },
  {
    "text": "This part, all right.",
    "start": "353295",
    "end": "354063"
  },
  {
    "text": "And could you share some figures",
    "start": "354087",
    "end": "355471"
  },
  {
    "text": "on the use of this architecture today?",
    "start": "355495",
    "end": "357511"
  },
  {
    "text": "So, this architecture today allows us",
    "start": "357535",
    "end": "359261"
  },
  {
    "text": "to process 1 to 5 million\nanalyzed images per day",
    "start": "359285",
    "end": "362808"
  },
  {
    "text": "for costs that will be less than\n10,000 euros per day.",
    "start": "363266",
    "end": "367431"
  },
  {
    "text": "It may seem expensive,",
    "start": "368096",
    "end": "370889"
  },
  {
    "text": "but video is extremely heavy to process.",
    "start": "370913",
    "end": "372925"
  },
  {
    "text": "The computations are heavy.",
    "start": "372949",
    "end": "374270"
  },
  {
    "text": "And compared to other solutions,",
    "start": "374294",
    "end": "375968"
  },
  {
    "text": "our analysis is very competitive.",
    "start": "375992",
    "end": "378075"
  },
  {
    "text": "The other advantage we have is that,",
    "start": "378490",
    "end": "381162"
  },
  {
    "text": "regardless of the amount of data\nwe're going to have as input,",
    "start": "381186",
    "end": "385020"
  },
  {
    "text": "we can guarantee processing\nat least up to this step,",
    "start": "385416",
    "end": "388216"
  },
  {
    "text": "on this first part,",
    "start": "388241",
    "end": "389636"
  },
  {
    "text": "which will last less than five minutes.",
    "start": "389660",
    "end": "391118"
  },
  {
    "text": "For example, to process large batches",
    "start": "391690",
    "end": "394690"
  },
  {
    "text": "of our users' data archives,",
    "start": "394933",
    "end": "396215"
  },
  {
    "text": "this is an extremely fast solution.",
    "start": "396239",
    "end": "398698"
  },
  {
    "text": "All right, and what improvements",
    "start": "398918",
    "end": "400735"
  },
  {
    "text": "could you make to this architecture?",
    "start": "400759",
    "end": "402680"
  },
  {
    "text": "There's a lot of improvements.",
    "start": "403075",
    "end": "405586"
  },
  {
    "text": "The first point that is important for us",
    "start": "405610",
    "end": "408780"
  },
  {
    "text": "is to reduce the 5-minute slot,",
    "start": "408804",
    "end": "410680"
  },
  {
    "text": "to be able to reduce it on live streams,\nto be able to be able",
    "start": "410958",
    "end": "414249"
  },
  {
    "text": "to output a result\nin less than 30 seconds.",
    "start": "414273",
    "end": "416074"
  },
  {
    "text": "And for that, we hope to connect...",
    "start": "416309",
    "end": "418459"
  },
  {
    "text": "Well, we are currently connecting\nan Amazon Kinesis stream",
    "start": "418483",
    "end": "421965"
  },
  {
    "text": "that will replace the input\nby the S3 bucket",
    "start": "421989",
    "end": "424573"
  },
  {
    "text": "and that will allow to have\nmore fluidity in the stream",
    "start": "424865",
    "end": "428008"
  },
  {
    "text": "and to manage the stream\nreally in real time.",
    "start": "428032",
    "end": "430032"
  },
  {
    "text": "The other point is to transform,",
    "start": "430281",
    "end": "432887"
  },
  {
    "text": "to complete this architecture",
    "start": "432911",
    "end": "434758"
  },
  {
    "text": "with GPU processing at the Lambda level,",
    "start": "434782",
    "end": "437161"
  },
  {
    "text": "to be able to benefit\nfrom hybrid processing",
    "start": "437185",
    "end": "439185"
  },
  {
    "text": "and to be able to run larger",
    "start": "439578",
    "end": "441639"
  },
  {
    "text": "TensorFlow models,",
    "start": "441663",
    "end": "442872"
  },
  {
    "text": "which are not nowadays part\nof the Lambda functions.",
    "start": "443180",
    "end": "445117"
  },
  {
    "text": "All right.",
    "start": "445141",
    "end": "445992"
  },
  {
    "text": "Thank you Pierre for sharing\nyour experience with us.",
    "start": "446016",
    "end": "447952"
  },
  {
    "text": "Thank you Marc for inviting us.",
    "start": "447976",
    "end": "449320"
  },
  {
    "text": "And thank you for following us\non this episode",
    "start": "449344",
    "end": "451362"
  },
  {
    "text": "of This is My Architecture.",
    "start": "451386",
    "end": "452732"
  },
  {
    "text": "Goodbye.",
    "start": "452756",
    "end": "453798"
  }
]