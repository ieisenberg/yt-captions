[
  {
    "start": "0",
    "end": "21000"
  },
  {
    "text": "- [Instructor] In this video,",
    "start": "1120",
    "end": "1970"
  },
  {
    "text": "you'll see how to integrate Fluent Bit",
    "start": "1970",
    "end": "3580"
  },
  {
    "text": "into CloudWatch Container Insights",
    "start": "3580",
    "end": "5279"
  },
  {
    "text": "for Amazon Elastic Kubernetes\nService, or Amazon EKS.",
    "start": "5280",
    "end": "9060"
  },
  {
    "text": "With this lightweight solution,",
    "start": "9060",
    "end": "10430"
  },
  {
    "text": "you can efficiently stream Amazon EKS logs",
    "start": "10430",
    "end": "12830"
  },
  {
    "text": "into CloudWatch Logs,",
    "start": "12830",
    "end": "14280"
  },
  {
    "text": "reduce your log delivery\nresource footprint,",
    "start": "14280",
    "end": "16510"
  },
  {
    "text": "and track your log stream",
    "start": "16510",
    "end": "17590"
  },
  {
    "text": "to prevent bottlenecks\nand delivery errors.",
    "start": "17590",
    "end": "19740"
  },
  {
    "start": "21000",
    "end": "78000"
  },
  {
    "text": "To get started,",
    "start": "21740",
    "end": "22573"
  },
  {
    "text": "let's review some\ninformation about Fluent Bit,",
    "start": "22573",
    "end": "24700"
  },
  {
    "text": "which we'll be using to send logs",
    "start": "24700",
    "end": "26050"
  },
  {
    "text": "from an Amazon EKS cluster\nto CloudWatch Logs.",
    "start": "26050",
    "end": "28793"
  },
  {
    "text": "Fluent Bit is an open source",
    "start": "29870",
    "end": "31240"
  },
  {
    "text": "and multi-platform log\nprocessor and forwarder",
    "start": "31240",
    "end": "33670"
  },
  {
    "text": "that allows you to collect data and logs",
    "start": "33670",
    "end": "35239"
  },
  {
    "text": "from different sources",
    "start": "35240",
    "end": "36350"
  },
  {
    "text": "and unify and send them\nto different designations",
    "start": "36350",
    "end": "38379"
  },
  {
    "text": "for logs storage and analytics.",
    "start": "38380",
    "end": "40263"
  },
  {
    "text": "These statistics demonstrate\nthe performance advantage",
    "start": "41170",
    "end": "43440"
  },
  {
    "text": "Fluent Bit has over Fluentd\nin CPU and memory usages.",
    "start": "43440",
    "end": "46732"
  },
  {
    "text": "Let's navigate to Amazon EKS",
    "start": "47810",
    "end": "49590"
  },
  {
    "text": "and take a look at the\ncluster we've set up",
    "start": "49590",
    "end": "51090"
  },
  {
    "text": "for the purposes of this example.",
    "start": "51090",
    "end": "53190"
  },
  {
    "text": "Let's drill down into the cluster",
    "start": "53190",
    "end": "54539"
  },
  {
    "text": "and review its configuration.",
    "start": "54540",
    "end": "55990"
  },
  {
    "text": "This cluster has the latest\nKubernetes version installed.",
    "start": "59650",
    "end": "62500"
  },
  {
    "text": "It also has three worker nodes.",
    "start": "65610",
    "end": "67480"
  },
  {
    "text": "Next, let's take a quick look\nat the AWS Cloud9 environment",
    "start": "67480",
    "end": "70540"
  },
  {
    "text": "we've set up for the per\npurposes of this example.",
    "start": "70540",
    "end": "73130"
  },
  {
    "text": "Before we start setting up Fluent Bit,",
    "start": "73130",
    "end": "74969"
  },
  {
    "text": "let's review the documentation.",
    "start": "74970",
    "end": "76563"
  },
  {
    "start": "78000",
    "end": "147000"
  },
  {
    "text": "This documentation provides details",
    "start": "78810",
    "end": "80560"
  },
  {
    "text": "on how to deploy Fluent Bit to send logs",
    "start": "80560",
    "end": "82490"
  },
  {
    "text": "from containers to CloudWatch Logs.",
    "start": "82490",
    "end": "84283"
  },
  {
    "text": "The first step is to create a namespace.",
    "start": "85150",
    "end": "87560"
  },
  {
    "text": "Let's copy the command to do so",
    "start": "87560",
    "end": "89020"
  },
  {
    "text": "and paste it into the Cloud9 console.",
    "start": "89020",
    "end": "90993"
  },
  {
    "text": "Next, let's return to\nthe setup documentation",
    "start": "95440",
    "end": "97600"
  },
  {
    "text": "and copy another command.",
    "start": "97600",
    "end": "98933"
  },
  {
    "text": "We'll use this command\nto create a config map",
    "start": "99830",
    "end": "101760"
  },
  {
    "text": "with the cluster name and\nregion to send the logs to.",
    "start": "101760",
    "end": "104410"
  },
  {
    "text": "Next, we'll copy the command to download",
    "start": "111800",
    "end": "113650"
  },
  {
    "text": "and deploy the Fluent Bit\nDaemonSet to the cluster.",
    "start": "113650",
    "end": "116400"
  },
  {
    "text": "For our purposes, we'll use\nthe optimized configuration",
    "start": "116400",
    "end": "119230"
  },
  {
    "text": "rather than the one that\nis more similar to Fluentd.",
    "start": "119230",
    "end": "121830"
  },
  {
    "text": "Finally, let's copy and paste the command",
    "start": "125530",
    "end": "127369"
  },
  {
    "text": "to validate the Fluent Bit deployment.",
    "start": "127370",
    "end": "129270"
  },
  {
    "text": "As you can see, we have three\nFluent Bit pods running.",
    "start": "132440",
    "end": "135210"
  },
  {
    "text": "Let's make sure",
    "start": "135210",
    "end": "136043"
  },
  {
    "text": "that events are being\nsent to CloudWatch Logs.",
    "start": "136043",
    "end": "138750"
  },
  {
    "text": "We've confirmed that the\nevents are being sent.",
    "start": "138750",
    "end": "141040"
  },
  {
    "text": "Let's navigate to CloudWatch.",
    "start": "141040",
    "end": "142799"
  },
  {
    "start": "147000",
    "end": "186000"
  },
  {
    "text": "We'll search for our EKS\ncluster among the log groups.",
    "start": "148771",
    "end": "153771"
  },
  {
    "text": "Here are the three log groups\nassociated with our cluster.",
    "start": "153900",
    "end": "157620"
  },
  {
    "text": "Let's drill down into one of them",
    "start": "157620",
    "end": "158970"
  },
  {
    "text": "and check the application logs.",
    "start": "158970",
    "end": "160520"
  },
  {
    "text": "Let's expand our view of\nthe Log stream column.",
    "start": "164530",
    "end": "166880"
  },
  {
    "text": "Now let's search for logs\nrelated to the billing app.",
    "start": "169130",
    "end": "171780"
  },
  {
    "text": "We can drill down into the\nindividual log streams.",
    "start": "173880",
    "end": "176423"
  },
  {
    "text": "Here we can see all the logs\nrunning on this billing app.",
    "start": "179660",
    "end": "182560"
  },
  {
    "text": "We can drill down further\nto see even more specifics.",
    "start": "182560",
    "end": "185209"
  },
  {
    "start": "186000",
    "end": "270000"
  },
  {
    "text": "Next, let's go over some best practices",
    "start": "186350",
    "end": "188350"
  },
  {
    "text": "for creating a successful\nlog delivery pipeline.",
    "start": "188350",
    "end": "191620"
  },
  {
    "text": "First, when defining\nyour Fluent Bit image,",
    "start": "191620",
    "end": "193980"
  },
  {
    "text": "it's recommended that you use\nthe latest official version",
    "start": "193980",
    "end": "196300"
  },
  {
    "text": "of Fluent Bit.",
    "start": "196300",
    "end": "197750"
  },
  {
    "text": "Second, always define\nmemory and CPU limits",
    "start": "197750",
    "end": "200220"
  },
  {
    "text": "for each Fluent Bit pod.",
    "start": "200220",
    "end": "201623"
  },
  {
    "text": "Third, it is recommended to\ndefine multiple input streams",
    "start": "202730",
    "end": "205519"
  },
  {
    "text": "based on smart logical groupings.",
    "start": "205520",
    "end": "207980"
  },
  {
    "text": "Another best practice is to\nuse the Kubernetes filter",
    "start": "207980",
    "end": "210420"
  },
  {
    "text": "to enrich the log entries.",
    "start": "210420",
    "end": "211803"
  },
  {
    "text": "Let's take a look at\nthe optimized YAML file",
    "start": "212870",
    "end": "214980"
  },
  {
    "text": "we implemented earlier.",
    "start": "214980",
    "end": "216400"
  },
  {
    "text": "As you can see, we're\nrunning Kubernetes filter,",
    "start": "218190",
    "end": "220550"
  },
  {
    "text": "which is providing metadata for our logs.",
    "start": "220550",
    "end": "222793"
  },
  {
    "text": "It's also recommended to run AWS filter",
    "start": "225240",
    "end": "227520"
  },
  {
    "text": "alongside Kubernetes\nfilter, as we are here.",
    "start": "227520",
    "end": "230093"
  },
  {
    "text": "Another recommendation is to increase",
    "start": "232580",
    "end": "234180"
  },
  {
    "text": "the memory buffer limit of\nFluent Bit to 50 megabytes",
    "start": "234180",
    "end": "236750"
  },
  {
    "text": "for application logs.",
    "start": "236750",
    "end": "238023"
  },
  {
    "text": "Finally, AWS recommends\nenabling a built-in HTTP server,",
    "start": "240510",
    "end": "244510"
  },
  {
    "text": "which makes it easier to monitor metrics.",
    "start": "244510",
    "end": "246560"
  },
  {
    "text": "After enabling the HTTP server,",
    "start": "249100",
    "end": "251200"
  },
  {
    "text": "you can create dashboards\nresembling these graphs",
    "start": "251200",
    "end": "253410"
  },
  {
    "text": "in CloudWatch Logs or Grafana.",
    "start": "253410",
    "end": "255113"
  },
  {
    "text": "You've just seen how\nto integrate Fluent Bit",
    "start": "257660",
    "end": "259359"
  },
  {
    "text": "into CloudWatch Container\nInsights for Amazon EKS.",
    "start": "259360",
    "end": "262293"
  },
  {
    "text": "You can learn more about this topic",
    "start": "263330",
    "end": "264650"
  },
  {
    "text": "in the description and\nlinks for this video.",
    "start": "264650",
    "end": "266610"
  },
  {
    "text": "Thanks for watching. Now\nit's your turn to try.",
    "start": "266610",
    "end": "268960"
  }
]