[
  {
    "start": "0",
    "end": "21000"
  },
  {
    "text": "in this video you'll see how to use",
    "start": "399",
    "end": "2000"
  },
  {
    "text": "cloudwatch lambda insights",
    "start": "2000",
    "end": "4000"
  },
  {
    "text": "with this new tool you can monitor",
    "start": "4000",
    "end": "5680"
  },
  {
    "text": "lambda performance and aggregate system",
    "start": "5680",
    "end": "7440"
  },
  {
    "text": "level metrics for your serverless",
    "start": "7440",
    "end": "8880"
  },
  {
    "text": "applications",
    "start": "8880",
    "end": "9840"
  },
  {
    "text": "and optimize lambda functions through",
    "start": "9840",
    "end": "11440"
  },
  {
    "text": "easy-to-use automatic dashboards",
    "start": "11440",
    "end": "14080"
  },
  {
    "text": "to get started let's navigate to",
    "start": "14080",
    "end": "15759"
  },
  {
    "text": "cloudwatch",
    "start": "15759",
    "end": "18320"
  },
  {
    "start": "21000",
    "end": "83000"
  },
  {
    "text": "lambda insights is a new feature of",
    "start": "21279",
    "end": "23039"
  },
  {
    "text": "cloudwatch that allows advanced logging",
    "start": "23039",
    "end": "24880"
  },
  {
    "text": "and application tracing for single",
    "start": "24880",
    "end": "26480"
  },
  {
    "text": "lambda functions",
    "start": "26480",
    "end": "27439"
  },
  {
    "text": "as well as for multi-function",
    "start": "27439",
    "end": "28840"
  },
  {
    "text": "architectures",
    "start": "28840",
    "end": "31840"
  },
  {
    "text": "let's go to the aws lambda console to",
    "start": "31920",
    "end": "34160"
  },
  {
    "text": "see the functions for a sample web",
    "start": "34160",
    "end": "35680"
  },
  {
    "text": "application that we have already set up",
    "start": "35680",
    "end": "39120"
  },
  {
    "text": "let's select a function to see how to",
    "start": "39760",
    "end": "41360"
  },
  {
    "text": "enable monitoring using lambda insights",
    "start": "41360",
    "end": "45840"
  },
  {
    "text": "the lambda insights option can be found",
    "start": "47520",
    "end": "49200"
  },
  {
    "text": "on the functions configuration tab",
    "start": "49200",
    "end": "51120"
  },
  {
    "text": "under monitoring tools",
    "start": "51120",
    "end": "59840"
  },
  {
    "text": "when cloudwatch lambda insights is",
    "start": "63600",
    "end": "65280"
  },
  {
    "text": "enabled the lambda console adds a layer",
    "start": "65280",
    "end": "67520"
  },
  {
    "text": "to the function and verifies the",
    "start": "67520",
    "end": "69040"
  },
  {
    "text": "execution role's permissions",
    "start": "69040",
    "end": "71600"
  },
  {
    "text": "this is the lambda insights extension",
    "start": "71600",
    "end": "73360"
  },
  {
    "text": "layer it collects system level metrics",
    "start": "73360",
    "end": "75680"
  },
  {
    "text": "and emits a log event for every",
    "start": "75680",
    "end": "77119"
  },
  {
    "text": "invocation of that lambda function",
    "start": "77119",
    "end": "79600"
  },
  {
    "text": "let's return to cloudwatch",
    "start": "79600",
    "end": "82798"
  },
  {
    "text": "selecting multi-function brings up a",
    "start": "83520",
    "end": "85360"
  },
  {
    "text": "dashboard of metrics for all lambda",
    "start": "85360",
    "end": "86960"
  },
  {
    "text": "functions in our account that have",
    "start": "86960",
    "end": "88240"
  },
  {
    "text": "lambda insights enabled",
    "start": "88240",
    "end": "91438"
  },
  {
    "text": "in this case four lambda functions are",
    "start": "92320",
    "end": "94240"
  },
  {
    "text": "enabled the graphs display their shared",
    "start": "94240",
    "end": "96560"
  },
  {
    "text": "metrics",
    "start": "96560",
    "end": "97439"
  },
  {
    "text": "hovering over a function isolates that",
    "start": "97439",
    "end": "99360"
  },
  {
    "text": "function's metrics in all of the graphs",
    "start": "99360",
    "end": "102240"
  },
  {
    "text": "hovering over individual points in the",
    "start": "102240",
    "end": "103920"
  },
  {
    "text": "graph shows a pop-up overview of that",
    "start": "103920",
    "end": "105840"
  },
  {
    "text": "point's data",
    "start": "105840",
    "end": "107439"
  },
  {
    "text": "each graph can be expanded and filtered",
    "start": "107439",
    "end": "114079"
  },
  {
    "text": "we can also filter all the graphs at",
    "start": "114079",
    "end": "115759"
  },
  {
    "text": "once",
    "start": "115759",
    "end": "118079"
  },
  {
    "text": "we can add these lambda performance",
    "start": "119680",
    "end": "121200"
  },
  {
    "text": "monitoring metrics to an existing or new",
    "start": "121200",
    "end": "123280"
  },
  {
    "text": "cloudwatch dashboard",
    "start": "123280",
    "end": "129840"
  },
  {
    "start": "130000",
    "end": "240000"
  },
  {
    "text": "this newly created dashboard can be",
    "start": "130640",
    "end": "132319"
  },
  {
    "text": "further customized to contain only some",
    "start": "132319",
    "end": "134560"
  },
  {
    "text": "or all lambda insights functions for our",
    "start": "134560",
    "end": "136480"
  },
  {
    "text": "application",
    "start": "136480",
    "end": "137440"
  },
  {
    "text": "as well as cloudwatch metrics graphs and",
    "start": "137440",
    "end": "139360"
  },
  {
    "text": "data views for other aws services",
    "start": "139360",
    "end": "142160"
  },
  {
    "text": "let's return to lambda insights",
    "start": "142160",
    "end": "145760"
  },
  {
    "text": "at the bottom of the screen we can see a",
    "start": "146959",
    "end": "148800"
  },
  {
    "text": "function summary which is helpful for",
    "start": "148800",
    "end": "150640"
  },
  {
    "text": "identifying over and under utilized",
    "start": "150640",
    "end": "152560"
  },
  {
    "text": "lambda functions",
    "start": "152560",
    "end": "154560"
  },
  {
    "text": "we can select an individual function to",
    "start": "154560",
    "end": "156319"
  },
  {
    "text": "view it in lambda or view its",
    "start": "156319",
    "end": "157920"
  },
  {
    "text": "performance or application logs in",
    "start": "157920",
    "end": "159599"
  },
  {
    "text": "cloudwatch",
    "start": "159599",
    "end": "161280"
  },
  {
    "text": "we are now in cloudwatch logs insights",
    "start": "161280",
    "end": "163840"
  },
  {
    "text": "where we can run a ready-made log query",
    "start": "163840",
    "end": "165760"
  },
  {
    "text": "to select the application logs relating",
    "start": "165760",
    "end": "167599"
  },
  {
    "text": "to our lambda function",
    "start": "167599",
    "end": "169680"
  },
  {
    "text": "this is a histogram of all log records",
    "start": "169680",
    "end": "171760"
  },
  {
    "text": "recorded for our function",
    "start": "171760",
    "end": "173200"
  },
  {
    "text": "let's take a quick look at one of the",
    "start": "173200",
    "end": "174560"
  },
  {
    "text": "logs",
    "start": "174560",
    "end": "176959"
  },
  {
    "text": "next let's look at the function's",
    "start": "178640",
    "end": "180000"
  },
  {
    "text": "performance logs",
    "start": "180000",
    "end": "185680"
  },
  {
    "text": "again our query is returned to histogram",
    "start": "185680",
    "end": "187760"
  },
  {
    "text": "and list of logs",
    "start": "187760",
    "end": "188879"
  },
  {
    "text": "we can click on a log entry to view more",
    "start": "188879",
    "end": "190720"
  },
  {
    "text": "data",
    "start": "190720",
    "end": "193040"
  },
  {
    "text": "the log stream url for the entry",
    "start": "194400",
    "end": "196239"
  },
  {
    "text": "displays a page of related log events in",
    "start": "196239",
    "end": "198319"
  },
  {
    "text": "embedded metric format or emf",
    "start": "198319",
    "end": "202239"
  },
  {
    "text": "expanding a log event reveals the json",
    "start": "202959",
    "end": "205120"
  },
  {
    "text": "output of the data",
    "start": "205120",
    "end": "207920"
  },
  {
    "text": "notice the namespace called lambda",
    "start": "208080",
    "end": "209920"
  },
  {
    "text": "insights which shows we are collecting",
    "start": "209920",
    "end": "211680"
  },
  {
    "text": "metrics under two dimensions",
    "start": "211680",
    "end": "215040"
  },
  {
    "text": "this data is collected in cloudwatch",
    "start": "216239",
    "end": "217920"
  },
  {
    "text": "metrics let's take a quick look",
    "start": "217920",
    "end": "221599"
  },
  {
    "text": "as you can see we have a custom",
    "start": "222319",
    "end": "223680"
  },
  {
    "text": "namespace for lambda insights",
    "start": "223680",
    "end": "227840"
  },
  {
    "text": "these are the two dimensions we saw in",
    "start": "227840",
    "end": "229440"
  },
  {
    "text": "the json output",
    "start": "229440",
    "end": "232400"
  },
  {
    "text": "we can delve deeper to see the metrics",
    "start": "232959",
    "end": "234560"
  },
  {
    "text": "for each dimension",
    "start": "234560",
    "end": "236159"
  },
  {
    "text": "let's select a metric for the same",
    "start": "236159",
    "end": "237599"
  },
  {
    "text": "function we saw earlier",
    "start": "237599",
    "end": "240799"
  },
  {
    "start": "240000",
    "end": "361000"
  },
  {
    "text": "with cloudwatch lambda insights enabled",
    "start": "240799",
    "end": "242959"
  },
  {
    "text": "we are able to view graft metrics",
    "start": "242959",
    "end": "244720"
  },
  {
    "text": "create alarms and perform all the",
    "start": "244720",
    "end": "246480"
  },
  {
    "text": "actions we can perform on other",
    "start": "246480",
    "end": "247920"
  },
  {
    "text": "cloudwatch metrics",
    "start": "247920",
    "end": "249680"
  },
  {
    "text": "let's return to lambda insights to view",
    "start": "249680",
    "end": "251439"
  },
  {
    "text": "tracing information",
    "start": "251439",
    "end": "254480"
  },
  {
    "text": "when we click on a function's name we",
    "start": "254480",
    "end": "256160"
  },
  {
    "text": "are presented with the single function",
    "start": "256160",
    "end": "257600"
  },
  {
    "text": "lambda insights view",
    "start": "257600",
    "end": "259440"
  },
  {
    "text": "let's view the most recent 1000",
    "start": "259440",
    "end": "261199"
  },
  {
    "text": "invocations",
    "start": "261199",
    "end": "262880"
  },
  {
    "text": "we can sort by highest network i o usage",
    "start": "262880",
    "end": "265199"
  },
  {
    "text": "to see trace information for a",
    "start": "265199",
    "end": "266560"
  },
  {
    "text": "potentially anomalous invocation",
    "start": "266560",
    "end": "270160"
  },
  {
    "text": "since the invocation with the highest",
    "start": "274080",
    "end": "275600"
  },
  {
    "text": "network i o usage has tracing enabled",
    "start": "275600",
    "end": "277759"
  },
  {
    "text": "we can select the view link for more",
    "start": "277759",
    "end": "280840"
  },
  {
    "text": "information",
    "start": "280840",
    "end": "282560"
  },
  {
    "text": "this trace map shows an interactive",
    "start": "282560",
    "end": "284160"
  },
  {
    "text": "schematic of information traversal",
    "start": "284160",
    "end": "285919"
  },
  {
    "text": "within our application architecture",
    "start": "285919",
    "end": "289600"
  },
  {
    "text": "hovering over the node for the lambda",
    "start": "290960",
    "end": "292560"
  },
  {
    "text": "function provides a quick overview of",
    "start": "292560",
    "end": "294320"
  },
  {
    "text": "the latency",
    "start": "294320",
    "end": "295040"
  },
  {
    "text": "requests and faults at the time of this",
    "start": "295040",
    "end": "296880"
  },
  {
    "text": "invocation",
    "start": "296880",
    "end": "298560"
  },
  {
    "text": "selecting the node enables us to view",
    "start": "298560",
    "end": "300240"
  },
  {
    "text": "logs for the function traces and",
    "start": "300240",
    "end": "301919"
  },
  {
    "text": "dashboard",
    "start": "301919",
    "end": "302720"
  },
  {
    "text": "all of which we saw earlier",
    "start": "302720",
    "end": "306000"
  },
  {
    "text": "below the trace map is a trace summary",
    "start": "306080",
    "end": "307919"
  },
  {
    "text": "with basic information about the",
    "start": "307919",
    "end": "309280"
  },
  {
    "text": "invocation",
    "start": "309280",
    "end": "311840"
  },
  {
    "text": "the segments timeline shows how services",
    "start": "313120",
    "end": "315039"
  },
  {
    "text": "that play a role in the function's",
    "start": "315039",
    "end": "316320"
  },
  {
    "text": "request and response contribute to",
    "start": "316320",
    "end": "318000"
  },
  {
    "text": "duration",
    "start": "318000",
    "end": "318880"
  },
  {
    "text": "as well as their respective status and",
    "start": "318880",
    "end": "320720"
  },
  {
    "text": "response codes",
    "start": "320720",
    "end": "322240"
  },
  {
    "text": "selecting a component in this view",
    "start": "322240",
    "end": "323840"
  },
  {
    "text": "enables us to view its log entries at",
    "start": "323840",
    "end": "325520"
  },
  {
    "text": "the bottom of the page",
    "start": "325520",
    "end": "328160"
  },
  {
    "text": "beginning here we can see segment graphs",
    "start": "328160",
    "end": "330080"
  },
  {
    "text": "for each of our lambda functions",
    "start": "330080",
    "end": "333439"
  },
  {
    "text": "beneath the segment's timeline are",
    "start": "335520",
    "end": "336960"
  },
  {
    "text": "segment details and metadata for the",
    "start": "336960",
    "end": "338720"
  },
  {
    "text": "selected component's contribution to the",
    "start": "338720",
    "end": "340479"
  },
  {
    "text": "invocation",
    "start": "340479",
    "end": "343039"
  },
  {
    "text": "and at the bottom of the page we can see",
    "start": "344720",
    "end": "346639"
  },
  {
    "text": "the logs related to the selected",
    "start": "346639",
    "end": "348160"
  },
  {
    "text": "component",
    "start": "348160",
    "end": "349600"
  },
  {
    "text": "you've just seen how to use cloudwatch",
    "start": "349600",
    "end": "351280"
  },
  {
    "text": "lambda insights",
    "start": "351280",
    "end": "353120"
  },
  {
    "text": "you can learn more about this topic in",
    "start": "353120",
    "end": "354800"
  },
  {
    "text": "the description and links for this video",
    "start": "354800",
    "end": "357199"
  },
  {
    "text": "thanks for watching now it's your turn",
    "start": "357199",
    "end": "358720"
  },
  {
    "text": "to try",
    "start": "358720",
    "end": "363120"
  }
]