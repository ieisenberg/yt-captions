[
  {
    "start": "0",
    "end": "49000"
  },
  {
    "text": "hello and welcome to this tutorial on",
    "start": "799",
    "end": "3679"
  },
  {
    "text": "using cloud front to serve dynamic",
    "start": "3679",
    "end": "5900"
  },
  {
    "text": "content my name is David Brown and I am",
    "start": "5900",
    "end": "8900"
  },
  {
    "text": "an edge specialized Solutions Architect",
    "start": "8900",
    "end": "10940"
  },
  {
    "text": "for AWS in this tutorial we're going to",
    "start": "10940",
    "end": "14809"
  },
  {
    "text": "cover how to configure cloud front to",
    "start": "14809",
    "end": "16790"
  },
  {
    "text": "serve dynamic content or content that",
    "start": "16790",
    "end": "19340"
  },
  {
    "text": "cannot be cached within cloud front",
    "start": "19340",
    "end": "21760"
  },
  {
    "text": "serving dynamic content over a cloud",
    "start": "21760",
    "end": "24200"
  },
  {
    "text": "front is a very common use case for",
    "start": "24200",
    "end": "26420"
  },
  {
    "text": "customers that are looking to lower",
    "start": "26420",
    "end": "28369"
  },
  {
    "text": "their overall latency and accelerate",
    "start": "28369",
    "end": "30740"
  },
  {
    "text": "delivery of requests to their",
    "start": "30740",
    "end": "32300"
  },
  {
    "text": "applications by leveraging both cloud",
    "start": "32300",
    "end": "34820"
  },
  {
    "text": "fronts edge locations as well as the AWS",
    "start": "34820",
    "end": "38090"
  },
  {
    "text": "backbone network our origin for this",
    "start": "38090",
    "end": "41120"
  },
  {
    "text": "cloud front distribution will be an",
    "start": "41120",
    "end": "42890"
  },
  {
    "text": "application load balancer with ec2",
    "start": "42890",
    "end": "45710"
  },
  {
    "text": "instances running behind the application",
    "start": "45710",
    "end": "47840"
  },
  {
    "text": "load balancer to start we're going to",
    "start": "47840",
    "end": "50720"
  },
  {
    "start": "49000",
    "end": "80000"
  },
  {
    "text": "log in to the AWS console and the first",
    "start": "50720",
    "end": "53450"
  },
  {
    "text": "thing we're going to want to do is set",
    "start": "53450",
    "end": "55250"
  },
  {
    "text": "up our web servers that will serve as",
    "start": "55250",
    "end": "56780"
  },
  {
    "text": "the origin for cloud front so we'll",
    "start": "56780",
    "end": "59149"
  },
  {
    "text": "navigate to ec2 and then we'll go look",
    "start": "59149",
    "end": "66200"
  },
  {
    "text": "at our running instances for the sake of",
    "start": "66200",
    "end": "70459"
  },
  {
    "text": "this tutorial I've already set up two",
    "start": "70459",
    "end": "72439"
  },
  {
    "text": "ec2 instances across two different",
    "start": "72439",
    "end": "74749"
  },
  {
    "text": "availability zones and both of these",
    "start": "74749",
    "end": "77179"
  },
  {
    "text": "instances are running in Gen X next",
    "start": "77179",
    "end": "81319"
  },
  {
    "start": "80000",
    "end": "110000"
  },
  {
    "text": "we're going to want to create the",
    "start": "81319",
    "end": "82789"
  },
  {
    "text": "application load balancer so we're going",
    "start": "82789",
    "end": "85399"
  },
  {
    "text": "to scroll down to the load balancing",
    "start": "85399",
    "end": "86689"
  },
  {
    "text": "section and click on load balancer you",
    "start": "86689",
    "end": "89899"
  },
  {
    "text": "can see I've already created a load",
    "start": "89899",
    "end": "91639"
  },
  {
    "text": "balancer called cloud front dynamic",
    "start": "91639",
    "end": "93859"
  },
  {
    "text": "content I've also created a target group",
    "start": "93859",
    "end": "96920"
  },
  {
    "text": "for this application load balancer",
    "start": "96920",
    "end": "98749"
  },
  {
    "text": "called my web server and the targets are",
    "start": "98749",
    "end": "105499"
  },
  {
    "text": "going to be the ec2 instances that we",
    "start": "105499",
    "end": "107869"
  },
  {
    "text": "showed earlier",
    "start": "107869",
    "end": "110319"
  },
  {
    "text": "if we were to actually go to the DNS",
    "start": "110380",
    "end": "112900"
  },
  {
    "text": "name given for the application load",
    "start": "112900",
    "end": "114759"
  },
  {
    "text": "balancer you'll see I'm returning the",
    "start": "114759",
    "end": "117070"
  },
  {
    "text": "instance ID as well as the current time",
    "start": "117070",
    "end": "119799"
  },
  {
    "text": "if I continue to refresh the page you'll",
    "start": "119799",
    "end": "123040"
  },
  {
    "text": "see the instance is changing as I load",
    "start": "123040",
    "end": "125049"
  },
  {
    "text": "balance between those two ec2 instances",
    "start": "125049",
    "end": "127679"
  },
  {
    "text": "you can also see that the time continues",
    "start": "127679",
    "end": "130270"
  },
  {
    "text": "to increase the reason we're going to do",
    "start": "130270",
    "end": "133030"
  },
  {
    "text": "this is once we configure cloud front",
    "start": "133030",
    "end": "134980"
  },
  {
    "text": "we'll want to make sure that the traffic",
    "start": "134980",
    "end": "136810"
  },
  {
    "text": "is always going back through the",
    "start": "136810",
    "end": "138430"
  },
  {
    "text": "application load balancer in cloud front",
    "start": "138430",
    "end": "140709"
  },
  {
    "text": "is not caching any of the content",
    "start": "140709",
    "end": "144480"
  },
  {
    "start": "145000",
    "end": "238000"
  },
  {
    "text": "let's go back into the AWS console and",
    "start": "145360",
    "end": "148640"
  },
  {
    "text": "we'll navigate to cloud front we're",
    "start": "148640",
    "end": "153650"
  },
  {
    "text": "going to want to create a new",
    "start": "153650",
    "end": "155000"
  },
  {
    "text": "distribution so click create",
    "start": "155000",
    "end": "157160"
  },
  {
    "text": "distribution and this is going to be a",
    "start": "157160",
    "end": "159860"
  },
  {
    "text": "web distribution the first thing we'll",
    "start": "159860",
    "end": "163850"
  },
  {
    "text": "want to do is specify the origin domain",
    "start": "163850",
    "end": "166100"
  },
  {
    "text": "name when you click into this field you",
    "start": "166100",
    "end": "168230"
  },
  {
    "text": "should see a drop-down and if we scroll",
    "start": "168230",
    "end": "170450"
  },
  {
    "text": "down you'll find the application load",
    "start": "170450",
    "end": "172430"
  },
  {
    "text": "balancer we created earlier when you",
    "start": "172430",
    "end": "175100"
  },
  {
    "text": "click on it it will auto populate the",
    "start": "175100",
    "end": "177410"
  },
  {
    "text": "origin ID for us if assets on your",
    "start": "177410",
    "end": "180680"
  },
  {
    "text": "origin server are not in the root",
    "start": "180680",
    "end": "182239"
  },
  {
    "text": "directory you can specify the origin",
    "start": "182239",
    "end": "184280"
  },
  {
    "text": "path to the resources for the sake of",
    "start": "184280",
    "end": "187190"
  },
  {
    "text": "this tutorial just leave that blank if",
    "start": "187190",
    "end": "191810"
  },
  {
    "text": "you're going to be serving HTTP traffic",
    "start": "191810",
    "end": "194150"
  },
  {
    "text": "from your origin you can specify which",
    "start": "194150",
    "end": "196489"
  },
  {
    "text": "TLS version your origin supports as well",
    "start": "196489",
    "end": "199610"
  },
  {
    "text": "as the HTTP protocol policy you can also",
    "start": "199610",
    "end": "203959"
  },
  {
    "text": "specify the origin response timeouts and",
    "start": "203959",
    "end": "206600"
  },
  {
    "text": "keep alive timeouts but for the sake of",
    "start": "206600",
    "end": "209209"
  },
  {
    "text": "this tutorial we'll leave those as the",
    "start": "209209",
    "end": "211340"
  },
  {
    "text": "default values you can also specify",
    "start": "211340",
    "end": "216739"
  },
  {
    "text": "which ports to make requests over to",
    "start": "216739",
    "end": "219650"
  },
  {
    "text": "your origin since we're using standard",
    "start": "219650",
    "end": "222769"
  },
  {
    "text": "ports we're not going to change these",
    "start": "222769",
    "end": "224630"
  },
  {
    "text": "from port 80 or port 443 you can also",
    "start": "224630",
    "end": "228530"
  },
  {
    "text": "specify custom header values if your",
    "start": "228530",
    "end": "231019"
  },
  {
    "text": "origin requires them for the sake of",
    "start": "231019",
    "end": "233269"
  },
  {
    "text": "this tutorial we're not going to do",
    "start": "233269",
    "end": "234590"
  },
  {
    "text": "anything custom so just leave those",
    "start": "234590",
    "end": "236390"
  },
  {
    "text": "blank now we're getting into the default",
    "start": "236390",
    "end": "240440"
  },
  {
    "start": "238000",
    "end": "294000"
  },
  {
    "text": "cache behavior settings this is going to",
    "start": "240440",
    "end": "243410"
  },
  {
    "text": "be the caching policy that our",
    "start": "243410",
    "end": "244880"
  },
  {
    "text": "distribution is going to use so the",
    "start": "244880",
    "end": "247519"
  },
  {
    "text": "first thing we'll want to define is what",
    "start": "247519",
    "end": "249110"
  },
  {
    "text": "is the viewer policy protocol we want to",
    "start": "249110",
    "end": "252260"
  },
  {
    "text": "allow users to connect to cloud front",
    "start": "252260",
    "end": "254239"
  },
  {
    "text": "over HTTP HTTPS or both for our sake",
    "start": "254239",
    "end": "259220"
  },
  {
    "text": "we're going to redirect any requests",
    "start": "259220",
    "end": "261019"
  },
  {
    "text": "over HTTP to HTTPS you can also specify",
    "start": "261019",
    "end": "265720"
  },
  {
    "text": "which HTTP methods you want to allow for",
    "start": "265720",
    "end": "269150"
  },
  {
    "text": "our sake we're not going to do any",
    "start": "269150",
    "end": "271729"
  },
  {
    "text": "posting of data so we're just going to",
    "start": "271729",
    "end": "273950"
  },
  {
    "text": "leave that as the default of get and",
    "start": "273950",
    "end": "275870"
  },
  {
    "text": "head",
    "start": "275870",
    "end": "276450"
  },
  {
    "text": "if you're going to be handling sensitive",
    "start": "276450",
    "end": "278910"
  },
  {
    "text": "data like credit card information from",
    "start": "278910",
    "end": "281220"
  },
  {
    "text": "users you can enable field level",
    "start": "281220",
    "end": "283650"
  },
  {
    "text": "encryption to encrypt that sensitive",
    "start": "283650",
    "end": "285930"
  },
  {
    "text": "data as it transits the network and it",
    "start": "285930",
    "end": "288600"
  },
  {
    "text": "will stay encrypted until it reaches",
    "start": "288600",
    "end": "290370"
  },
  {
    "text": "your origin server",
    "start": "290370",
    "end": "293240"
  },
  {
    "text": "the next couple of fields are related to",
    "start": "293999",
    "end": "296879"
  },
  {
    "start": "294000",
    "end": "415000"
  },
  {
    "text": "caching and since we're trying to create",
    "start": "296879",
    "end": "299159"
  },
  {
    "text": "a dynamic distribution where no caching",
    "start": "299159",
    "end": "301409"
  },
  {
    "text": "is enabled we'll want to adjust some of",
    "start": "301409",
    "end": "303779"
  },
  {
    "text": "these settings the first one we'll look",
    "start": "303779",
    "end": "306059"
  },
  {
    "text": "at is cache based on selected request",
    "start": "306059",
    "end": "308669"
  },
  {
    "text": "headers this is currently set to none",
    "start": "308669",
    "end": "311129"
  },
  {
    "text": "which is the default value however if we",
    "start": "311129",
    "end": "314459"
  },
  {
    "text": "set this to all you'll notice that we",
    "start": "314459",
    "end": "316529"
  },
  {
    "text": "now have this warning message telling us",
    "start": "316529",
    "end": "318689"
  },
  {
    "text": "that all requests through CloudFront",
    "start": "318689",
    "end": "320610"
  },
  {
    "text": "will now be passed directly to the",
    "start": "320610",
    "end": "322169"
  },
  {
    "text": "origin in other words cloud front is not",
    "start": "322169",
    "end": "324959"
  },
  {
    "text": "going to do any caching of the objects",
    "start": "324959",
    "end": "327179"
  },
  {
    "text": "and instead will always pass requests",
    "start": "327179",
    "end": "330059"
  },
  {
    "text": "through to the origin this is what we",
    "start": "330059",
    "end": "332429"
  },
  {
    "text": "want so we're going to leave this as all",
    "start": "332429",
    "end": "334679"
  },
  {
    "text": "I will note that cloud front will always",
    "start": "334679",
    "end": "337709"
  },
  {
    "text": "honor the cache control headers being",
    "start": "337709",
    "end": "339569"
  },
  {
    "text": "set by your origin server so long as",
    "start": "339569",
    "end": "342389"
  },
  {
    "text": "your origin server is sending the",
    "start": "342389",
    "end": "343979"
  },
  {
    "text": "correct cache control headers cloud",
    "start": "343979",
    "end": "345899"
  },
  {
    "text": "front will use those headers you'll",
    "start": "345899",
    "end": "349169"
  },
  {
    "text": "notice I don't have the ability to",
    "start": "349169",
    "end": "350939"
  },
  {
    "text": "adjust the TTL s since they're not",
    "start": "350939",
    "end": "353879"
  },
  {
    "text": "needed because we're not caching",
    "start": "353879",
    "end": "355619"
  },
  {
    "text": "anything in this particular use case you",
    "start": "355619",
    "end": "358139"
  },
  {
    "text": "also have the ability to forward cookies",
    "start": "358139",
    "end": "360360"
  },
  {
    "text": "or query strings to the origin by",
    "start": "360360",
    "end": "363509"
  },
  {
    "text": "default cookies and query strings are",
    "start": "363509",
    "end": "365579"
  },
  {
    "text": "not passed to the origin but since we're",
    "start": "365579",
    "end": "368399"
  },
  {
    "text": "not using cookies or query strings we'll",
    "start": "368399",
    "end": "370800"
  },
  {
    "text": "leave this as none we're also not doing",
    "start": "370800",
    "end": "374339"
  },
  {
    "text": "any Smooth Streaming so we can leave",
    "start": "374339",
    "end": "376079"
  },
  {
    "text": "this as no nor are we going to use any",
    "start": "376079",
    "end": "379469"
  },
  {
    "text": "signed urls or signed cookies signed",
    "start": "379469",
    "end": "382679"
  },
  {
    "text": "urls or signed cookies are just a way to",
    "start": "382679",
    "end": "385019"
  },
  {
    "text": "restrict access to certain content based",
    "start": "385019",
    "end": "387869"
  },
  {
    "text": "off of access policies that you set for",
    "start": "387869",
    "end": "389909"
  },
  {
    "text": "different assets we can also have cloud",
    "start": "389909",
    "end": "393299"
  },
  {
    "text": "front compress objects automatically",
    "start": "393299",
    "end": "395329"
  },
  {
    "text": "we'll want to set this to yes generally",
    "start": "395329",
    "end": "398789"
  },
  {
    "text": "speaking compressing objects is",
    "start": "398789",
    "end": "400349"
  },
  {
    "text": "something you want to do to help lower",
    "start": "400349",
    "end": "402059"
  },
  {
    "text": "your overall egress costs and it usually",
    "start": "402059",
    "end": "404849"
  },
  {
    "text": "boosts performance at the same time",
    "start": "404849",
    "end": "407419"
  },
  {
    "text": "we're not going to be running any lambda",
    "start": "407419",
    "end": "409799"
  },
  {
    "text": "functions in this particular",
    "start": "409799",
    "end": "411209"
  },
  {
    "text": "distribution so we'll leave those as",
    "start": "411209",
    "end": "413189"
  },
  {
    "text": "blank as well the last section is called",
    "start": "413189",
    "end": "416849"
  },
  {
    "start": "415000",
    "end": "466000"
  },
  {
    "text": "distribution settings and this is where",
    "start": "416849",
    "end": "419459"
  },
  {
    "text": "you can define your price class of this",
    "start": "419459",
    "end": "421409"
  },
  {
    "text": "distribution for this tutorial we'll",
    "start": "421409",
    "end": "424259"
  },
  {
    "text": "keep this as the default of use all edge",
    "start": "424259",
    "end": "427139"
  },
  {
    "text": "locate",
    "start": "427139",
    "end": "428360"
  },
  {
    "text": "we're also not using a web application",
    "start": "428360",
    "end": "430560"
  },
  {
    "text": "firewall for this distribution so leave",
    "start": "430560",
    "end": "433050"
  },
  {
    "text": "that as none we also have the option to",
    "start": "433050",
    "end": "435750"
  },
  {
    "text": "specify an alternative domain name or",
    "start": "435750",
    "end": "438180"
  },
  {
    "text": "cname we want to use in conjunction with",
    "start": "438180",
    "end": "441120"
  },
  {
    "text": "this distribution however because we're",
    "start": "441120",
    "end": "444060"
  },
  {
    "text": "not setting up anything unique for this",
    "start": "444060",
    "end": "445830"
  },
  {
    "text": "tutorial we're going to leave it blank",
    "start": "445830",
    "end": "447360"
  },
  {
    "text": "and just use the default CloudFront",
    "start": "447360",
    "end": "449880"
  },
  {
    "text": "dotnet URL if you do want to have C",
    "start": "449880",
    "end": "453210"
  },
  {
    "text": "names that you're using with your",
    "start": "453210",
    "end": "454680"
  },
  {
    "text": "distribution you can define SSL",
    "start": "454680",
    "end": "457199"
  },
  {
    "text": "Certificates for use with that",
    "start": "457199",
    "end": "458610"
  },
  {
    "text": "distribution and you can import those",
    "start": "458610",
    "end": "460830"
  },
  {
    "text": "certificates directly from the AWS",
    "start": "460830",
    "end": "462990"
  },
  {
    "text": "certificate manager",
    "start": "462990",
    "end": "466069"
  },
  {
    "start": "466000",
    "end": "547000"
  },
  {
    "text": "believe the supported HTTP versions as",
    "start": "466290",
    "end": "469560"
  },
  {
    "text": "the default to just know that you can",
    "start": "469560",
    "end": "471990"
  },
  {
    "text": "disable HTTP to if needed if you want to",
    "start": "471990",
    "end": "476400"
  },
  {
    "text": "enable logging you can by clicking on",
    "start": "476400",
    "end": "478740"
  },
  {
    "text": "and then you can select the s3 bucket",
    "start": "478740",
    "end": "481500"
  },
  {
    "text": "where you would like those logs to be",
    "start": "481500",
    "end": "483060"
  },
  {
    "text": "stored you can also define any prefix",
    "start": "483060",
    "end": "486900"
  },
  {
    "text": "that you need in order to differentiate",
    "start": "486900",
    "end": "488550"
  },
  {
    "text": "CloudFront logs from any other types of",
    "start": "488550",
    "end": "491250"
  },
  {
    "text": "logs going to that same bucket the last",
    "start": "491250",
    "end": "494730"
  },
  {
    "text": "setting is to enable ipv6 which is on by",
    "start": "494730",
    "end": "497730"
  },
  {
    "text": "default and then when you're done you",
    "start": "497730",
    "end": "501360"
  },
  {
    "text": "just click create distribution I'm not",
    "start": "501360",
    "end": "504330"
  },
  {
    "text": "going to do that since I already have a",
    "start": "504330",
    "end": "505830"
  },
  {
    "text": "distribution created this is the",
    "start": "505830",
    "end": "508200"
  },
  {
    "text": "distribution here that I created earlier",
    "start": "508200",
    "end": "509760"
  },
  {
    "text": "and if I were to copy this domain name",
    "start": "509760",
    "end": "512550"
  },
  {
    "text": "and go into my browser now you can see",
    "start": "512550",
    "end": "516539"
  },
  {
    "text": "I'm using the cloud front net URL and",
    "start": "516540",
    "end": "519270"
  },
  {
    "text": "I've been automatically redirected to",
    "start": "519270",
    "end": "521580"
  },
  {
    "text": "the HTTPS version of my site",
    "start": "521580",
    "end": "523680"
  },
  {
    "text": "I'm getting my instance name as well as",
    "start": "523680",
    "end": "526530"
  },
  {
    "text": "the current time and as I continue to",
    "start": "526530",
    "end": "529350"
  },
  {
    "text": "refresh this page you can see the",
    "start": "529350",
    "end": "531450"
  },
  {
    "text": "instances changing between the two ec2",
    "start": "531450",
    "end": "533760"
  },
  {
    "text": "instances and my load balancer then the",
    "start": "533760",
    "end": "536520"
  },
  {
    "text": "time continues to increase this",
    "start": "536520",
    "end": "538950"
  },
  {
    "text": "concludes our tutorial I hope you found",
    "start": "538950",
    "end": "541200"
  },
  {
    "text": "this helpful thank you",
    "start": "541200",
    "end": "544670"
  }
]