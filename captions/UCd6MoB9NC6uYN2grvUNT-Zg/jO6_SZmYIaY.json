[
  {
    "text": "こんにちは Solving with AWS Solutions へようこそ\nAWSが構築した クラウドですぐにデプロイ可能な",
    "start": "9840",
    "end": "15114"
  },
  {
    "text": "リファレンスアーキテクチャを\n深く掘り下げていきます",
    "start": "15114",
    "end": "18889"
  },
  {
    "text": "ホストのロブです\n本日はソリューションの達人のトムに参加いただいています",
    "start": "18889",
    "end": "22926"
  },
  {
    "text": "ありがとう ロブ\n本日は 「AWS Solutions Constructs」ソリューション",
    "start": "22926",
    "end": "26473"
  },
  {
    "text": "つまり AWSクラウドで アーキテクチャをより簡単に",
    "start": "26473",
    "end": "31015"
  },
  {
    "text": "構築できるビルディングブロックについて\n見ていきます",
    "start": "31016",
    "end": "34054"
  },
  {
    "text": "AWS Solution Constructsは",
    "start": "34054",
    "end": "37185"
  },
  {
    "text": "抽象化レイヤーを追加し \n開発プロセスを加速させるのに役立ちます",
    "start": "37185",
    "end": "41236"
  },
  {
    "text": "それでは 見てみましょう",
    "start": "41236",
    "end": "43911"
  },
  {
    "text": "それではトム AWS Solutions Constructsの\nランディングページの説明をしてもらえますか？",
    "start": "43911",
    "end": "47950"
  },
  {
    "text": "もちろんです Constructsソリューションは\n通常のAWSソリューションとは 異なるものです",
    "start": "47950",
    "end": "53191"
  },
  {
    "text": "ですので単にCloudFormationを使って\nご自身のアカウントにデプロイするようなものでは ありません",
    "start": "53191",
    "end": "58137"
  },
  {
    "text": "本ソリューションは よくある さまざまな\nアーキテクチャパターンを観察した上で",
    "start": "58137",
    "end": "62382"
  },
  {
    "text": "それらのパターンを取り入れて\nバンドルし",
    "start": "62382",
    "end": "64838"
  },
  {
    "text": "大規模な アプリケーションやアーキテクチャの\nビルディングブロックとして使えるようにしたものです",
    "start": "64839",
    "end": "70437"
  },
  {
    "text": "なるほど\nAWSクラウド開発キット(CDK) とは",
    "start": "70438",
    "end": "73471"
  },
  {
    "text": "どのように 関係しているのでしょうか？",
    "start": "73471",
    "end": "75158"
  },
  {
    "text": "これらは実際には CDK の上に 構築されています",
    "start": "75158",
    "end": "78434"
  },
  {
    "text": "CDK つまり クラウド開発キットとは 簡単に言うと",
    "start": "78434",
    "end": "84078"
  },
  {
    "text": "インフラストラクチャを コードとして\n定義できるようにした オープンソースフレームワークで",
    "start": "84079",
    "end": "89702"
  },
  {
    "text": "CloudFormationを通じて\nデプロイしたり プロビジョニングすることができます",
    "start": "89702",
    "end": "92908"
  },
  {
    "text": "そして これはオープンソースのプロジェクトです",
    "start": "92908",
    "end": "94983"
  },
  {
    "text": "Githubで公開されており",
    "start": "94984",
    "end": "99538"
  },
  {
    "text": "JavaScript / Python / .NET 版が利用可能です",
    "start": "99538",
    "end": "103541"
  },
  {
    "text": "なるほど\nところで私はビジュアルで覚えるタイプの人間なので",
    "start": "103541",
    "end": "105581"
  },
  {
    "text": "そのアーキテクチャパターンの\n一例を見せてもらえますか？",
    "start": "105581",
    "end": "108728"
  },
  {
    "text": "ひとつのパターンをピックアップした後\n様々なバリエーションを見て",
    "start": "108728",
    "end": "113940"
  },
  {
    "text": "デプロイ方法を見てみましょう",
    "start": "113941",
    "end": "117106"
  },
  {
    "text": "よくあるパターンの１例として\n「LambdaからS3」のパターンを見ていきましょう",
    "start": "117106",
    "end": "120487"
  },
  {
    "text": "このミニアーキテクチャは 何をするんですか？",
    "start": "120487",
    "end": "123120"
  },
  {
    "text": "簡単に言うと CloudFormation テンプレートで",
    "start": "123120",
    "end": "126410"
  },
  {
    "text": "これが何度も繰り返されると考えてください",
    "start": "126410",
    "end": "128821"
  },
  {
    "text": "Amazon S3バケットにアクセスする\nLambda関数があるのですが",
    "start": "128821",
    "end": "134449"
  },
  {
    "text": "IAMロールを通じて アクセスを許可しています",
    "start": "134449",
    "end": "137750"
  },
  {
    "text": "なるほど　CloudFormationで これを構築する場合\nどのようにするのでしょうか？",
    "start": "137750",
    "end": "140694"
  },
  {
    "text": "CloudFormationで構築することもできますし\nその場合は",
    "start": "140694",
    "end": "144747"
  },
  {
    "text": "こういった感じになります",
    "start": "144747",
    "end": "147762"
  },
  {
    "text": "これは YAML形式のCloudFormationテンプレートです",
    "start": "147762",
    "end": "151174"
  },
  {
    "text": "JSONで書くことも可能ですし",
    "start": "151174",
    "end": "153866"
  },
  {
    "text": "一般的に というか 大部分は 手書きです",
    "start": "153867",
    "end": "159182"
  },
  {
    "text": "１行ずつ定義して これが私のS3バケットで\nここにログバケットの設定があって",
    "start": "159182",
    "end": "165809"
  },
  {
    "text": "さっきお話しした\nIAMロールと Lambda関数があります",
    "start": "165809",
    "end": "170983"
  },
  {
    "text": "なるほど　CloudFormationの中に\n詳細な情報がたくさん記載されているのですね",
    "start": "170983",
    "end": "173932"
  },
  {
    "text": "では  CDKを利用すると\nどのようになるのでしょうか",
    "start": "173932",
    "end": "177387"
  },
  {
    "text": "CDK はこのように なります",
    "start": "177387",
    "end": "181525"
  },
  {
    "text": "これはJavaScript版です",
    "start": "181525",
    "end": "184006"
  },
  {
    "text": "ご覧のようにCDKの様々なエレメントを",
    "start": "184007",
    "end": "187291"
  },
  {
    "text": "自身のプロジェクトにインポートすることができます",
    "start": "187291",
    "end": "191300"
  },
  {
    "text": "そしてCDKコンストラクト \n自身のログバケット",
    "start": "191300",
    "end": "196775"
  },
  {
    "text": "自身のS3バケット そして自身のLambda関数を\n定義していきます",
    "start": "196775",
    "end": "200679"
  },
  {
    "text": "すると ここで いくつかのIAM ポリシーを\nLambda関数にアタッチして",
    "start": "200679",
    "end": "203752"
  },
  {
    "text": "S3へのアクセス権限を与えているのが\n分かります",
    "start": "203752",
    "end": "209647"
  },
  {
    "text": "なるほど　抽象化レベルを追加したんですね",
    "start": "209647",
    "end": "211941"
  },
  {
    "text": "AWS Solutions Constructsを使って\n何を行っているのでしょうか？",
    "start": "211941",
    "end": "215243"
  },
  {
    "text": "AWS Solutions Constructsではこれを\n取り込んで オープンソースライブラリに",
    "start": "215244",
    "end": "220456"
  },
  {
    "text": "バンドルし利用できるようにしています",
    "start": "220456",
    "end": "223864"
  },
  {
    "text": "なので コンストラクトバージョンを 見てみると",
    "start": "223865",
    "end": "227091"
  },
  {
    "text": "AWS Solutions Constructsの\n「LambdaからS3」をインポートした場合",
    "start": "227091",
    "end": "231731"
  },
  {
    "text": "自身のコード内では単にそのコンストラクトの\nインスタンスを宣言するだけです",
    "start": "231731",
    "end": "237252"
  },
  {
    "text": "そして Lambda関数用の\nいくつかのシンプルなパラメーターを記載しています",
    "start": "237252",
    "end": "240870"
  },
  {
    "text": "自身のプロジェクト内のLambdaコードの場所\nそしてランタイムなどです",
    "start": "240870",
    "end": "245603"
  },
  {
    "text": "抽象化でよりシンプルになったと\nいうことですね",
    "start": "245604",
    "end": "248678"
  },
  {
    "text": "AWS Solutions Constructsを使うことで",
    "start": "248678",
    "end": "251138"
  },
  {
    "text": "他にどのようなことや 価値が得られるのでしょうか？",
    "start": "251138",
    "end": "254391"
  },
  {
    "text": "価値についてですが 私たちが行なっているのは\n繰り返し行われるパターンをアーキテクチャに取り込むことです",
    "start": "254391",
    "end": "257390"
  },
  {
    "text": "そしてご覧の通り ここにたくさん集めました",
    "start": "257391",
    "end": "262758"
  },
  {
    "text": "たとえば 「CloudWatchイベントルールからSNS」や\n「IoTからLambda」 ",
    "start": "262758",
    "end": "267954"
  },
  {
    "text": "「LambdaからS3」\n「S3からLambda」といったものです",
    "start": "267954",
    "end": "270458"
  },
  {
    "text": "これらを ご利用いただけるよう\nパッケージ化しました",
    "start": "270458",
    "end": "273151"
  },
  {
    "text": "また CDKを組み込み",
    "start": "273151",
    "end": "276667"
  },
  {
    "text": "ベストプラクティスを組み入れて\nそしてまた",
    "start": "276667",
    "end": "279477"
  },
  {
    "text": "これらのアーキテクチャを構築するのに\n安全なアプローチをとっています",
    "start": "279477",
    "end": "283086"
  },
  {
    "text": "なので これを使うことで\n大規模なアーキテクチャを構築するプロセスを",
    "start": "283087",
    "end": "286564"
  },
  {
    "text": "加速化 効率化するのに役立ちます",
    "start": "286564",
    "end": "289955"
  },
  {
    "text": "これらのパターンを複数利用することで\n独自のアーキテクチャやソリューションを",
    "start": "289955",
    "end": "295284"
  },
  {
    "text": "構築できるのですね",
    "start": "295284",
    "end": "297927"
  },
  {
    "text": "はい その通りです",
    "start": "297927",
    "end": "299284"
  },
  {
    "text": "得られる その他のメリットとしては",
    "start": "299284",
    "end": "303578"
  },
  {
    "text": "お見せした例で言うと\nLambda関数とS3バケットが作成されるだけでなく",
    "start": "303578",
    "end": "308311"
  },
  {
    "text": "設定に関してもある程度行われます",
    "start": "308311",
    "end": "312053"
  },
  {
    "text": "アクセスログの記録といったものや\n自身のS3 バケットのサーバーサイド暗号化といった",
    "start": "312053",
    "end": "317119"
  },
  {
    "text": "我々が ベストプラクティスと考えるあらゆるものが\nこのコンストラクトに含まれます",
    "start": "317119",
    "end": "321611"
  },
  {
    "text": "これらのベストプラクティスに関する事項は\nパラメータを渡すことで ご自身でも上書き設定が可能ですが",
    "start": "321611",
    "end": "324893"
  },
  {
    "text": "私たちはInfrastructure as Code (IaC)の開発と\nベストプラクティスの適用のプロセスを",
    "start": "324893",
    "end": "330111"
  },
  {
    "text": "加速することを 本ソリューションで支援します",
    "start": "330111",
    "end": "333074"
  },
  {
    "text": "AWS Solutions Constructsソリューションの\n概要を説明していただき ありがとうございました",
    "start": "333074",
    "end": "336920"
  },
  {
    "text": "どういたしまして",
    "start": "336920",
    "end": "338792"
  },
  {
    "text": "AWS Solutions Constructsソリューションは 抽象化レイヤーを\n追加し コーディングプロセスをシンプルにするのに役立ちます",
    "start": "338792",
    "end": "344210"
  },
  {
    "text": "ソリューションのページで\nAWS Solutions Constructs をチェックしてみてください",
    "start": "345185",
    "end": "349300"
  }
]