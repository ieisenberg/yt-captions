[
  {
    "text": "welcome back everyone assuming you came back and aren't new if",
    "start": "6350",
    "end": "12840"
  },
  {
    "text": "you are I'm Brent Langston I'm a senior developer advocate on the containers team so we wanted as part of today",
    "start": "12840",
    "end": "22019"
  },
  {
    "text": "since reinvent was so recent just two weeks ago we wanted to make sure that we",
    "start": "22019",
    "end": "27179"
  },
  {
    "text": "covered sort of a recap of stuff that was announced at reinvent there was a",
    "start": "27179",
    "end": "34230"
  },
  {
    "text": "flurry of announcement I want to make sure that I cover things that are",
    "start": "34230",
    "end": "39630"
  },
  {
    "text": "container related so that's what today is about that's what this session is about we're gonna go over some container",
    "start": "39630",
    "end": "47160"
  },
  {
    "text": "related reinvents announcements and then I want to demo one of the ones that I'm",
    "start": "47160",
    "end": "52320"
  },
  {
    "text": "most excited about so let's start by talking about app mesh app mesh is a new",
    "start": "52320",
    "end": "58980"
  },
  {
    "text": "service that we announced at reinvent and it's in public preview which means",
    "start": "58980",
    "end": "66270"
  },
  {
    "text": "all of you in this room are able to start using it today it means none of you in this room should",
    "start": "66270",
    "end": "74070"
  },
  {
    "text": "start using it in production so there's gonna be a lot that changes by the time",
    "start": "74070",
    "end": "80159"
  },
  {
    "text": "we go GA we we are reserving the right to make breaking changes so we want to",
    "start": "80159",
    "end": "87840"
  },
  {
    "text": "be able to modify api's and and perhaps in ways that will make them incompatible",
    "start": "87840",
    "end": "94140"
  },
  {
    "text": "with anything that you've written so we want to at least warn you by labeling",
    "start": "94140",
    "end": "99300"
  },
  {
    "text": "this preview don't run production workloads against this or anything but",
    "start": "99300",
    "end": "105800"
  },
  {
    "text": "start looking at it start using it and give us feedback because it's in preview",
    "start": "105800",
    "end": "111530"
  },
  {
    "text": "we are especially interested in collecting feedback on what you know",
    "start": "111530",
    "end": "117000"
  },
  {
    "text": "what your thoughts are the ways that you imagined you would use this in production and so forth but let's start",
    "start": "117000",
    "end": "124170"
  },
  {
    "text": "by defining what is app much I want to ask the question of the room",
    "start": "124170",
    "end": "129780"
  },
  {
    "text": "you might have discovered this I asked the room a lot of questions does anyone",
    "start": "129780",
    "end": "134999"
  },
  {
    "text": "today use any kind of servus no one in the room amazing has",
    "start": "134999",
    "end": "143670"
  },
  {
    "text": "anyone asked themselves as I'm breaking my monolith to microservices this is a",
    "start": "143670",
    "end": "149519"
  },
  {
    "text": "pretty common question by the way as I'm breaking my monolith to microservices really I'm gonna start having a whole",
    "start": "149519",
    "end": "156510"
  },
  {
    "text": "lot of services that are now going to have to talk over the network so the network is suddenly going to become even",
    "start": "156510",
    "end": "164160"
  },
  {
    "text": "more important than it ever has been so it has have you guys thought about",
    "start": "164160",
    "end": "169590"
  },
  {
    "text": "that okay cool some hands good good",
    "start": "169590",
    "end": "174720"
  },
  {
    "text": "smart so as you start to think about that the network becoming so important",
    "start": "174720",
    "end": "180440"
  },
  {
    "text": "you'll find that in the beginning anyway customers were starting to realize that",
    "start": "180440",
    "end": "186480"
  },
  {
    "text": "you know what I need to start I need to have an edict every service needs to for",
    "start": "186480",
    "end": "193170"
  },
  {
    "text": "example needs to have retries so there needs to be retry logic and if you've",
    "start": "193170",
    "end": "199769"
  },
  {
    "text": "ever written retries there's you know there's a few ways to do it but there's",
    "start": "199769",
    "end": "205049"
  },
  {
    "text": "one important thing that should go along with retries anyone know what you do when you write retries into your service",
    "start": "205049",
    "end": "211980"
  },
  {
    "text": "how should they retry with back off thank you",
    "start": "211980",
    "end": "218060"
  },
  {
    "text": "there are some famous outages caused by retry logic that doesn't have back off",
    "start": "218060",
    "end": "224989"
  },
  {
    "text": "talk to me you know after some time I'll tell you a funny story",
    "start": "224989",
    "end": "230569"
  },
  {
    "text": "so retry logic should include back off so now all of a sudden you have",
    "start": "230569",
    "end": "235829"
  },
  {
    "text": "requirements for your requirements I require every service to have retry logic I require all retry logic to have",
    "start": "235829",
    "end": "243510"
  },
  {
    "text": "exponential back-off okay well that's great but you know I just want to write",
    "start": "243510",
    "end": "249660"
  },
  {
    "text": "my code I just want to focus on writing my business logic and I don't want to",
    "start": "249660",
    "end": "256019"
  },
  {
    "text": "have to think about you know all the stuff that you need in order to run my",
    "start": "256019",
    "end": "261209"
  },
  {
    "text": "service so customers will then start to say well don't worry about it I'll write",
    "start": "261209",
    "end": "268229"
  },
  {
    "text": "it for you and I'll make library so all you need to do in your code is just include my library great",
    "start": "268229",
    "end": "276650"
  },
  {
    "text": "but you don't have a library written in the language that I want to write in so",
    "start": "276650",
    "end": "282629"
  },
  {
    "text": "now all the sudden customers are having to support multiple languages of libraries that include among other",
    "start": "282629",
    "end": "290129"
  },
  {
    "text": "things requirements like having retry logic with exponential back-off so the",
    "start": "290129",
    "end": "295860"
  },
  {
    "text": "answer to all of this is what if we can just in a generic way come up with a",
    "start": "295860",
    "end": "301530"
  },
  {
    "text": "layer for the network that has all that built into it so instead of it having to",
    "start": "301530",
    "end": "308400"
  },
  {
    "text": "exist in the code we can just have it be part of the network instead of having to",
    "start": "308400",
    "end": "313800"
  },
  {
    "text": "have service discovery in the code we can just have that be part of the network so all I need to do is hear an",
    "start": "313800",
    "end": "320819"
  },
  {
    "text": "incoming connection and respond to it or make an outgoing connection and take in",
    "start": "320819",
    "end": "327659"
  },
  {
    "text": "whatever I receive and that's all I need to worry about in my code and everything else can be taken care of for me that's",
    "start": "327659",
    "end": "334650"
  },
  {
    "text": "the promise of a mesh a mesh gives us the ability to extrapolate all of the",
    "start": "334650",
    "end": "342000"
  },
  {
    "text": "requirements for talking service to service out on to the fabric of the mesh",
    "start": "342000",
    "end": "347759"
  },
  {
    "text": "and then any language is free to have that communication just run over the",
    "start": "347759",
    "end": "354569"
  },
  {
    "text": "mesh and inherit those those functions automatically so there are some meshes",
    "start": "354569",
    "end": "361710"
  },
  {
    "text": "out there already that you can run I won't list them but there are a few they",
    "start": "361710",
    "end": "368729"
  },
  {
    "text": "tend to be confined or constrained to whatever cluster they're running on so",
    "start": "368729",
    "end": "374219"
  },
  {
    "text": "one of the cool things about at mesh is it works just like those except it's not",
    "start": "374219",
    "end": "381180"
  },
  {
    "text": "constrained to a single cluster so if we look at a service mesh a service mesh",
    "start": "381180",
    "end": "387289"
  },
  {
    "text": "just gets deployed right alongside your service so this would be the code that I",
    "start": "387289",
    "end": "393659"
  },
  {
    "text": "may have written as a developer but instead of me talking to",
    "start": "393659",
    "end": "399230"
  },
  {
    "text": "you know some other random horizontal service over service discovery I'm just",
    "start": "399230",
    "end": "404630"
  },
  {
    "text": "going to talk to a sidecar proxy and the sidecar proxy is going to see what I'm",
    "start": "404630",
    "end": "410210"
  },
  {
    "text": "trying to get at and it's going to route my traffic to the appropriate location and it's gonna do it with exponential",
    "start": "410210",
    "end": "417410"
  },
  {
    "text": "back-off s-- or excuse me with reduce patch so if I reach out to that",
    "start": "417410",
    "end": "424370"
  },
  {
    "text": "destination and the destination isn't there it may have just died what happens",
    "start": "424370",
    "end": "429830"
  },
  {
    "text": "to that transaction I want it reduced to another healthy container so that my request can still",
    "start": "429830",
    "end": "437180"
  },
  {
    "text": "be serviced so these are a couple of examples of what I get just by running a",
    "start": "437180",
    "end": "442640"
  },
  {
    "text": "service mesh so sidecar is deployed alongside all services in a service mesh",
    "start": "442640",
    "end": "451340"
  },
  {
    "text": "but as you can imagine that means you have to manage the configuration of all",
    "start": "451340",
    "end": "456410"
  },
  {
    "text": "of those sidecars now so you know customers historically when they think about breaking a monolith into micro",
    "start": "456410",
    "end": "464480"
  },
  {
    "text": "services they go from a handful of big services to hundreds or potentially",
    "start": "464480",
    "end": "470480"
  },
  {
    "text": "thousands of micro services and managing those has been daunting and that's how",
    "start": "470480",
    "end": "475850"
  },
  {
    "text": "ECS helps that's how eks helps it helps orchestrate those services but now we're",
    "start": "475850",
    "end": "481760"
  },
  {
    "text": "talking about you know virtually doubling the number of items to manage because now for every one of those",
    "start": "481760",
    "end": "488320"
  },
  {
    "text": "instantiation zuv services we're going to have a sidecar and we have to manage the configuration of all of those",
    "start": "488320",
    "end": "494180"
  },
  {
    "text": "sidecars so we have a control plane that can manage that configuration so data",
    "start": "494180",
    "end": "500720"
  },
  {
    "text": "plane is the sidecar control plane is the management of that sidecar so the",
    "start": "500720",
    "end": "507860"
  },
  {
    "text": "service mesh plane handles figuring out what route should be used figuring out",
    "start": "507860",
    "end": "513620"
  },
  {
    "text": "the monitoring and health of every service and it'll deal with security if",
    "start": "513620",
    "end": "518840"
  },
  {
    "text": "we want to layer in TLS encryption between all of these nodes we can do",
    "start": "518840",
    "end": "524120"
  },
  {
    "text": "that and we can manage that configuration and that TLS setup using",
    "start": "524120",
    "end": "529160"
  },
  {
    "text": "the control plane excuse me",
    "start": "529160",
    "end": "534490"
  },
  {
    "text": "so at mesh gives us a control plane that we can use to monitor manage and control",
    "start": "534490",
    "end": "541760"
  },
  {
    "text": "all of our micro services at scale and manage the site cars for those services",
    "start": "541760",
    "end": "548570"
  },
  {
    "text": "so in this example micro-service a is trying to talk to micro service B and C",
    "start": "548570",
    "end": "556510"
  },
  {
    "text": "but when it tries to reach out to micro service see the traffic is just what",
    "start": "556510",
    "end": "563870"
  },
  {
    "text": "happens let's say micro-service c is having a problem so it tries to make the connection the",
    "start": "563870",
    "end": "570620"
  },
  {
    "text": "connection fails either it just never connects in which case I hope you've",
    "start": "570620",
    "end": "577670"
  },
  {
    "text": "remembered in your library to write a standard timeout or the connection is",
    "start": "577670",
    "end": "584570"
  },
  {
    "text": "reached but gets back in error so in either case that transaction is just",
    "start": "584570",
    "end": "590779"
  },
  {
    "text": "gone we either return an error or we never really return at least not in a",
    "start": "590779",
    "end": "595850"
  },
  {
    "text": "timely manner we never return any result from microservice C so micro-service a is",
    "start": "595850",
    "end": "601370"
  },
  {
    "text": "very likely just going to serve an error back to the customer so we don't we want to eliminate that we want to try and",
    "start": "601370",
    "end": "607910"
  },
  {
    "text": "improve that situation so with an app mesh proxies are running alongside each",
    "start": "607910",
    "end": "613970"
  },
  {
    "text": "of these services so when the connection of microservice c is attempted and fails",
    "start": "613970",
    "end": "619430"
  },
  {
    "text": "then we can the their proxy notices that and says you know what I'm going to",
    "start": "619430",
    "end": "625160"
  },
  {
    "text": "reduce patch that connection to another copy of micro service C and hopefully",
    "start": "625160",
    "end": "631880"
  },
  {
    "text": "that works so as long as that works then I can still serve back a result to the",
    "start": "631880",
    "end": "637670"
  },
  {
    "text": "customer everyone follow that cool okay",
    "start": "637670",
    "end": "644420"
  },
  {
    "text": "so why a WS app mesh well external traffic is going to come in to the proxy",
    "start": "644420",
    "end": "654019"
  },
  {
    "text": "and then the proxy is going to route the traffic to the micro service so we can",
    "start": "654019",
    "end": "659990"
  },
  {
    "text": "more or less deal with both traffic and inbound traffic and the",
    "start": "659990",
    "end": "665470"
  },
  {
    "text": "micro service itself is only ever communicating with the proxy so this can also help when it comes to security for",
    "start": "665470",
    "end": "673720"
  },
  {
    "text": "example we can know we know what traffic to expect and we know that only the",
    "start": "673720",
    "end": "679000"
  },
  {
    "text": "proxy is actually going to be communicating in and out so if anything is ever compromised in the application",
    "start": "679000",
    "end": "685570"
  },
  {
    "text": "we can set it up so the application never communicates out it can't communicate out it can only communicate",
    "start": "685570",
    "end": "692530"
  },
  {
    "text": "through the proxy so we get a little bit more isolation by running things this",
    "start": "692530",
    "end": "698500"
  },
  {
    "text": "way the proxy that we're deploying is envoy I think this is an open source",
    "start": "698500",
    "end": "703990"
  },
  {
    "text": "project I believe from lyft someone looked that up for me",
    "start": "703990",
    "end": "709480"
  },
  {
    "text": "I think it's lived though but this open source project has very quickly become",
    "start": "709480",
    "end": "714730"
  },
  {
    "text": "one of the most popular sidecar proxies to use in a mesh so we we knew that",
    "start": "714730",
    "end": "721150"
  },
  {
    "text": "customers were already using this from our observation it looked like this was the most popular so we wanted the least",
    "start": "721150",
    "end": "727420"
  },
  {
    "text": "shift so we said you know what we're going to build at mesh at least to start",
    "start": "727420",
    "end": "733030"
  },
  {
    "text": "with to work with envoy proxy so the proxy layer that can the data plane",
    "start": "733030",
    "end": "739450"
  },
  {
    "text": "layer this service is envoy proxy so how do you do it",
    "start": "739450",
    "end": "744670"
  },
  {
    "text": "well ELB will route traffic into your",
    "start": "744670",
    "end": "750730"
  },
  {
    "text": "virtual node and your virtual node will have a listener and then it will have a",
    "start": "750730",
    "end": "757260"
  },
  {
    "text": "sort of notion of service discovery to be able to route traffic to other",
    "start": "757260",
    "end": "762340"
  },
  {
    "text": "backends that that it needs to reach and then it will have knowledge of other horizontal services that are back in",
    "start": "762340",
    "end": "769720"
  },
  {
    "text": "services so in this example the virtual",
    "start": "769720",
    "end": "775960"
  },
  {
    "text": "router excuse me the virtual router sees that hey traffic is coming in to slash",
    "start": "775960",
    "end": "783670"
  },
  {
    "text": "so I'm going to send that traffic to one of these virtual nodes and it's going to",
    "start": "783670",
    "end": "789940"
  },
  {
    "text": "respond but we might then whoops I thought I had another slide where the prefix might be something more",
    "start": "789940",
    "end": "796649"
  },
  {
    "text": "specific like a shopping cart or catalog or something like that and we can route",
    "start": "796649",
    "end": "802259"
  },
  {
    "text": "that into a different set of services and all of this is happening over the",
    "start": "802259",
    "end": "807389"
  },
  {
    "text": "mesh and then as services need to talk horizontally to each other they can also",
    "start": "807389",
    "end": "813899"
  },
  {
    "text": "route using this same virtual router style over the mesh so all we're paying",
    "start": "813899",
    "end": "819240"
  },
  {
    "text": "attention to are the headers that are being asked for through the virtual",
    "start": "819240",
    "end": "824970"
  },
  {
    "text": "router cloud map sorry cloud map is another announcement",
    "start": "824970",
    "end": "832529"
  },
  {
    "text": "from reinvent so I talked in the last session about service discovery imagined",
    "start": "832529",
    "end": "840360"
  },
  {
    "text": "and and I mentioned the service discovery was route 53 based so you do a DNS query but what if you want to",
    "start": "840360",
    "end": "846690"
  },
  {
    "text": "discover something else that isn't a service running in your cluster or what if you want to just to have a discovery",
    "start": "846690",
    "end": "853529"
  },
  {
    "text": "mechanism that is API based instead of DNS based or you need to look something",
    "start": "853529",
    "end": "858600"
  },
  {
    "text": "up according to tag so cloud map gives us the ability to have an API that we",
    "start": "858600",
    "end": "865199"
  },
  {
    "text": "can call to see virtually everything related to our counts inventory and we",
    "start": "865199",
    "end": "871980"
  },
  {
    "text": "can understand that for example if I need to write some data into an s3",
    "start": "871980",
    "end": "877079"
  },
  {
    "text": "bucket I don't need to hard-code the name of the bucket into my application or I",
    "start": "877079",
    "end": "882870"
  },
  {
    "text": "don't need to write it into the environment anymore I can actually discover it using cloud map and I can try and find what is",
    "start": "882870",
    "end": "890100"
  },
  {
    "text": "today's version of the bucket for example maybe I shard by day and every",
    "start": "890100",
    "end": "896279"
  },
  {
    "text": "day I have a new bucket that I'm going to write data into so I can actually do that using cloud map and do searches by",
    "start": "896279",
    "end": "902880"
  },
  {
    "text": "tag searches by environment and however else I want to carve thing up things up",
    "start": "902880",
    "end": "908970"
  },
  {
    "text": "until I get to a single result that I know is going to be my result and then I",
    "start": "908970",
    "end": "915000"
  },
  {
    "text": "start writing my data into that s3 bucket so cloud map is something that's really cool I hope I hope it solves some",
    "start": "915000",
    "end": "922110"
  },
  {
    "text": "problems for you I have an interesting for an application that I run the",
    "start": "922110",
    "end": "927510"
  },
  {
    "text": "application needs to know what availability zone it's in so that it can order itself and it needs to know I'm in",
    "start": "927510",
    "end": "934110"
  },
  {
    "text": "the first second or third of the three availability zones and that works beautifully in almost every region",
    "start": "934110",
    "end": "941720"
  },
  {
    "text": "because we only have three availability zones so when I wrote it it worked so I",
    "start": "941720",
    "end": "948450"
  },
  {
    "text": "just was happy I didn't realize when I deployed it to us east one u.s. East one",
    "start": "948450",
    "end": "955320"
  },
  {
    "text": "has six availability zones and I'm not always getting the six a be you know",
    "start": "955320",
    "end": "962130"
  },
  {
    "text": "starting with a then B then C sometimes I'm getting B D F and my services don't",
    "start": "962130",
    "end": "970860"
  },
  {
    "text": "understand how they should order themselves because of that so as soon as I get home now that this is launched I",
    "start": "970860",
    "end": "977670"
  },
  {
    "text": "plan to go and rewrite the service to use cloud map so that it can look up not only where is that one container running",
    "start": "977670",
    "end": "984660"
  },
  {
    "text": "but also where does it fall in relationship to all of the serve all of",
    "start": "984660",
    "end": "991200"
  },
  {
    "text": "the availability zones that are in use is it first is it second or is it third so that's just one example of being able",
    "start": "991200",
    "end": "998190"
  },
  {
    "text": "to use cloud map and having an easy solution to you know a problem that was",
    "start": "998190",
    "end": "1003560"
  },
  {
    "text": "incredibly hard to solve three weeks ago so we can dynamically lookup any version",
    "start": "1003560",
    "end": "1013580"
  },
  {
    "text": "any tag any characteristic of a service",
    "start": "1013580",
    "end": "1018710"
  },
  {
    "text": "or a resource in our AWS account so this",
    "start": "1018710",
    "end": "1026060"
  },
  {
    "text": "is an example for of like a back-end app either discovering and using a lambda or",
    "start": "1026060",
    "end": "1033520"
  },
  {
    "text": "discovering and using a load balancer so",
    "start": "1033520",
    "end": "1038320"
  },
  {
    "text": "this is from the service discovery service you can discover instances and",
    "start": "1039190",
    "end": "1045230"
  },
  {
    "text": "then anything with a namespace my opcom service name front end and then you have",
    "start": "1045230",
    "end": "1051020"
  },
  {
    "text": "query parameters that you can pass in and those query parameters",
    "start": "1051020",
    "end": "1056090"
  },
  {
    "text": "together and you can see that you know the service needs to be active and it",
    "start": "1056090",
    "end": "1061580"
  },
  {
    "text": "needs to be version 1.0 and so we'll get back a result that we can then process with our application excuse me",
    "start": "1061580",
    "end": "1074019"
  },
  {
    "text": "so this is my favorite announcement its firecracker did anyone see the",
    "start": "1074019",
    "end": "1080659"
  },
  {
    "text": "firecracker announcement or watch the livestream or anything cool a few hands went up firecracker is something that",
    "start": "1080659",
    "end": "1087830"
  },
  {
    "text": "we've been working on internally for a while and not only did we announce it but one of the reasons it's my favorite",
    "start": "1087830",
    "end": "1093889"
  },
  {
    "text": "is we also open sourced it so this is this was announced and released to the",
    "start": "1093889",
    "end": "1099710"
  },
  {
    "text": "public as open source two weeks ago what is firecracker firecracker is is",
    "start": "1099710",
    "end": "1108070"
  },
  {
    "text": "effectively what we use under the covers behind the scenes to run Fargate and",
    "start": "1108070",
    "end": "1115279"
  },
  {
    "text": "lambda so if you've ever wondered how do you guys launch code so quickly in",
    "start": "1115279",
    "end": "1121549"
  },
  {
    "text": "lambda or how do you guys spin up a container so quickly in Fargate or how",
    "start": "1121549",
    "end": "1128779"
  },
  {
    "text": "do I have a guarantee that my workload in Fargate is going to be secure and not",
    "start": "1128779",
    "end": "1135220"
  },
  {
    "text": "run you know not affected by someone else breaking out of their container so",
    "start": "1135220",
    "end": "1142179"
  },
  {
    "text": "firecracker is what is offering all of this functionality to us it gives us a",
    "start": "1142179",
    "end": "1147919"
  },
  {
    "text": "difference a different set of security boundaries than containers and then",
    "start": "1147919",
    "end": "1154039"
  },
  {
    "text": "instances so we don't have to worry as",
    "start": "1154039",
    "end": "1160190"
  },
  {
    "text": "much about container breakout for example if some one buffer overflows their application what can they do",
    "start": "1160190",
    "end": "1167269"
  },
  {
    "text": "inside their container inside their sandbox can they break out of it well if they do what are they left with a",
    "start": "1167269",
    "end": "1176019"
  },
  {
    "text": "firecracker VM so firecracker is a micro VM in other words that talk that I gave",
    "start": "1176019",
    "end": "1184519"
  },
  {
    "text": "in the first session about how vm's are big and slow and and that's why",
    "start": "1184519",
    "end": "1190130"
  },
  {
    "text": "containers are so awesome because they're they're only what you need and they're super fast to start well that",
    "start": "1190130",
    "end": "1198440"
  },
  {
    "text": "actually changes a little bit when when we start talking about micro viens micro VMS are not big and slow they're",
    "start": "1198440",
    "end": "1205429"
  },
  {
    "text": "actually tiny micro and fast because they're so tiny they can start up very",
    "start": "1205429",
    "end": "1211460"
  },
  {
    "text": "very quickly and because they can start up very very quickly we can for example launch a docker container inside a",
    "start": "1211460",
    "end": "1218779"
  },
  {
    "text": "microvia and if anything is ever broken out of you're just left with the microvia and whatever's inside of that",
    "start": "1218779",
    "end": "1226190"
  },
  {
    "text": "and we then have a hard boundary to isolate that container with so very low",
    "start": "1226190",
    "end": "1235580"
  },
  {
    "text": "overhead very high density and we get very fast start times and it also then",
    "start": "1235580",
    "end": "1241610"
  },
  {
    "text": "includes because micro VMS are built on k vm k vm is a virtualization technology",
    "start": "1241610",
    "end": "1247730"
  },
  {
    "text": "that's built into the linux kernel because this is all in effectively managed by the kernel we can have very",
    "start": "1247730",
    "end": "1254419"
  },
  {
    "text": "fair scheduling across all of our VMs does anyone happen to know what's the maximum number of docker containers you",
    "start": "1254419",
    "end": "1260899"
  },
  {
    "text": "can launch in an instance I don't know why and I know why I know this I know",
    "start": "1260899",
    "end": "1266090"
  },
  {
    "text": "this because at my last job I had to launch a ton of docker containers for testing and I found out that the maximum",
    "start": "1266090",
    "end": "1274010"
  },
  {
    "text": "you can launch is a thousand 24 we're going to launch 4,000 micro VMs on a",
    "start": "1274010",
    "end": "1281659"
  },
  {
    "text": "single instance here in a second and imagine then if each of those had a docker container inside of them so",
    "start": "1281659",
    "end": "1288529"
  },
  {
    "text": "suddenly the limitation of docker is no longer a limitation we can actually have",
    "start": "1288529",
    "end": "1294470"
  },
  {
    "text": "more containers running per instance if we really want to so firecracker gives",
    "start": "1294470",
    "end": "1301250"
  },
  {
    "text": "us secure containers that we can do things inside of like run your code run",
    "start": "1301250",
    "end": "1307340"
  },
  {
    "text": "an operating system run a container so lambda for example they're able to",
    "start": "1307340",
    "end": "1312890"
  },
  {
    "text": "launch very quickly your code because there get inside a microvia and that micro VM",
    "start": "1312890",
    "end": "1319850"
  },
  {
    "text": "can start up in a small number of milliseconds so as I said this is",
    "start": "1319850",
    "end": "1327970"
  },
  {
    "text": "available open source through the Apache 200 license and there's a github repo",
    "start": "1327970",
    "end": "1332990"
  },
  {
    "text": "fire cracker micro VM on well I said github repos so it's on github over time",
    "start": "1332990",
    "end": "1341150"
  },
  {
    "text": "I think we're going to see integration added so the one I'm excited about the",
    "start": "1341150",
    "end": "1347870"
  },
  {
    "text": "most is container D container D is the docker engine that I think you know the",
    "start": "1347870",
    "end": "1353840"
  },
  {
    "text": "vast majority of people that use containers they use the docker engine",
    "start": "1353840",
    "end": "1359480"
  },
  {
    "text": "container D as their image platform so being able to docker run your container",
    "start": "1359480",
    "end": "1367730"
  },
  {
    "text": "is really important imagine if while you did that we were not only starting up",
    "start": "1367730",
    "end": "1373670"
  },
  {
    "text": "your container but we were starting it up wrapped in a microvia and imagine then that there was no real perceivable",
    "start": "1373670",
    "end": "1381080"
  },
  {
    "text": "increase in ty in start-up time startup time on average I think what we're gonna",
    "start": "1381080",
    "end": "1386540"
  },
  {
    "text": "see I believe is going to be a hundred 25 milliseconds and to a human most",
    "start": "1386540",
    "end": "1391910"
  },
  {
    "text": "humans don't perceive anything below 250 ish milliseconds so no perceived",
    "start": "1391910",
    "end": "1397490"
  },
  {
    "text": "difference in really 125 milliseconds is pretty fast so to add that in to get the",
    "start": "1397490",
    "end": "1404300"
  },
  {
    "text": "level of security that you're going to get by being virtualized is really",
    "start": "1404300",
    "end": "1410120"
  },
  {
    "text": "worthwhile ok so enough talk let's take",
    "start": "1410120",
    "end": "1415940"
  },
  {
    "text": "a look at a demo oh and by the way",
    "start": "1415940",
    "end": "1422080"
  },
  {
    "text": "there's my closing slide so I'm gonna close the presentation now and we'll be",
    "start": "1422080",
    "end": "1429500"
  },
  {
    "text": "ready for the demo so to virtualize ideally you're gonna do this on a bare",
    "start": "1429500",
    "end": "1437300"
  },
  {
    "text": "metal instance and in fact that's so that way you have access to the the hypervisor and luckily AWS provides the",
    "start": "1437300",
    "end": "1445910"
  },
  {
    "text": "ability to provision bare metal instances did it did anyone know that already this",
    "start": "1445910",
    "end": "1451649"
  },
  {
    "text": "is not a reinvent announcement but it's relatively new it happened a couple of months ago if I remember correctly so I",
    "start": "1451649",
    "end": "1459090"
  },
  {
    "text": "three metal is a bare metal instance that you provision just like you do any other ec2 instance so if when it comes",
    "start": "1459090",
    "end": "1466710"
  },
  {
    "text": "up I have access to the full host bare metal no virtualization already in place",
    "start": "1466710",
    "end": "1472340"
  },
  {
    "text": "except I can then take advantage of using KVM so instead I have some",
    "start": "1472340",
    "end": "1480059"
  },
  {
    "text": "instructions here that I'm going to ignore I've already done some of this and I actually installed cloud 9 onto my",
    "start": "1480059",
    "end": "1487259"
  },
  {
    "text": "bare metal instance who by the way is this for the back of the room is this big enough yeah okay let me see let me",
    "start": "1487259",
    "end": "1495929"
  },
  {
    "text": "work on making it bigger how's this cool",
    "start": "1495929",
    "end": "1502740"
  },
  {
    "text": "alright so cloud 9 installed on a bare",
    "start": "1502740",
    "end": "1508169"
  },
  {
    "text": "metal instance I'm connecting to it using the UI using the console I like to",
    "start": "1508169",
    "end": "1514019"
  },
  {
    "text": "do everything in cloud 9 I think it's pretty awesome it gives me a really cool text editor IDE environment that I can",
    "start": "1514019",
    "end": "1520619"
  },
  {
    "text": "use and then also I have terminals that I can launch and run so at the fire",
    "start": "1520619",
    "end": "1529830"
  },
  {
    "text": "cracker site the github repo they actually have a demo so I've actually",
    "start": "1529830",
    "end": "1535529"
  },
  {
    "text": "cloned it and then I'm going to CD into it and in the first terminal I'm going",
    "start": "1535529",
    "end": "1543240"
  },
  {
    "text": "to run this tiles application so what this is doing right now it's not doing",
    "start": "1543240",
    "end": "1549149"
  },
  {
    "text": "anything but what this will do is show us network activity for all of our VMs",
    "start": "1549149",
    "end": "1556559"
  },
  {
    "text": "so I haven't launched any VMs there's nothing to look at but over over as I",
    "start": "1556559",
    "end": "1561840"
  },
  {
    "text": "launched them what we should see is sort of a snake pattern that builds so our",
    "start": "1561840",
    "end": "1567179"
  },
  {
    "text": "VMs are built to automatically start up and automatically run I",
    "start": "1567179",
    "end": "1573629"
  },
  {
    "text": "generate traffic for about six seconds and then sleep for a random amount of",
    "start": "1573629",
    "end": "1579089"
  },
  {
    "text": "time and then generate traffic for one second so they're going to start with a",
    "start": "1579089",
    "end": "1585509"
  },
  {
    "text": "long trail of traffic then you're going to see dots start to happen for those",
    "start": "1585509",
    "end": "1591389"
  },
  {
    "text": "one second bursts of traffic and we're gonna do this for four thousand containers so I will I'm curious to see",
    "start": "1591389",
    "end": "1598349"
  },
  {
    "text": "how long does it take to start up four thousand containers how quickly does",
    "start": "1598349",
    "end": "1603389"
  },
  {
    "text": "each container start on average and then the fact that I can start four thousand",
    "start": "1603389",
    "end": "1609899"
  },
  {
    "text": "and that four thousand can be generating network traffic all roughly at the same time I think is gonna be pretty",
    "start": "1609899",
    "end": "1615899"
  },
  {
    "text": "interesting to me so in my second terminal that's where I'm going to oh",
    "start": "1615899",
    "end": "1623809"
  },
  {
    "text": "excuse me do the work and I've done the setup parts already so let's just do",
    "start": "1623809",
    "end": "1633749"
  },
  {
    "text": "parallel start",
    "start": "1633749",
    "end": "1636799"
  },
  {
    "text": "so while that's running over here you see our snake pattern starting to show",
    "start": "1640330",
    "end": "1645560"
  },
  {
    "text": "up and I don't know if the resolution change is going to affect refreshing or",
    "start": "1645560",
    "end": "1651290"
  },
  {
    "text": "not but you get the idea we're seeing a lot of startup times a lot of VMs that",
    "start": "1651290",
    "end": "1657260"
  },
  {
    "text": "are starting and doing their bursts of traffic let's check back over here real quick we're still starting our 4,000 VMs",
    "start": "1657260",
    "end": "1667570"
  },
  {
    "text": "I don't know actually and they weren't different colors when I ran this in my",
    "start": "1672250",
    "end": "1677350"
  },
  {
    "text": "terminal so when that happened I know red as the long burst of like one",
    "start": "1677350",
    "end": "1682539"
  },
  {
    "text": "direction of traffic but I don't know what what it means beyond that and we're",
    "start": "1682539",
    "end": "1693250"
  },
  {
    "text": "done we launched 4000 micro vm's in 50",
    "start": "1693250",
    "end": "1699990"
  },
  {
    "text": "1672 milliseconds so 78 milliseconds on",
    "start": "1699990",
    "end": "1706120"
  },
  {
    "text": "average per VM I mean that's pretty impressive right so you can see how",
    "start": "1706120",
    "end": "1713429"
  },
  {
    "text": "excuse me how wrapping a docker container you shouldn't be too worried",
    "start": "1713429",
    "end": "1719590"
  },
  {
    "text": "about you know added startup time added overhead and stuff like that but you still get the benefit of being",
    "start": "1719590",
    "end": "1726840"
  },
  {
    "text": "virtualized and now you're starting to see that you know the traffic is oh and",
    "start": "1726840",
    "end": "1733000"
  },
  {
    "text": "the traffic bursts for a little bit of time and then the then it goes to sleep",
    "start": "1733000",
    "end": "1738580"
  },
  {
    "text": "again so we're just seeing you know random activity now but it should be not",
    "start": "1738580",
    "end": "1744940"
  },
  {
    "text": "even but relatively even and we don't have any any real contention or anything",
    "start": "1744940",
    "end": "1750070"
  },
  {
    "text": "like that what does the micro VM look",
    "start": "1750070",
    "end": "1755530"
  },
  {
    "text": "like well I don't know let's see if we can see what we have here",
    "start": "1755530",
    "end": "1764830"
  },
  {
    "text": "has anyone ever compiled a Linux kernel okay right cool so here is our Linux",
    "start": "1764830",
    "end": "1772600"
  },
  {
    "text": "kernel and then we have a root file system that we bond together and that is",
    "start": "1772600",
    "end": "1779590"
  },
  {
    "text": "our micro VM so in the root filesystem I can actually oh my favorite",
    "start": "1779590",
    "end": "1787390"
  },
  {
    "text": "if config I'm just gonna let this run for a second",
    "start": "1787390",
    "end": "1794280"
  },
  {
    "text": "so you guys can see every if you can't see in the back it's it's running",
    "start": "1794280",
    "end": "1799710"
  },
  {
    "text": "scrolling very quickly every VM gets its own network interface a tap interface so",
    "start": "1799710",
    "end": "1808710"
  },
  {
    "text": "we're able to you know network tap to other VMs if we need to or route outward",
    "start": "1808710",
    "end": "1815640"
  },
  {
    "text": "if we need to everything gets its own IP address in",
    "start": "1815640",
    "end": "1820710"
  },
  {
    "text": "the 169 254 name space so if we were to actually look at you know a particular a",
    "start": "1820710",
    "end": "1829670"
  },
  {
    "text": "particular device like number 42 for",
    "start": "1829670",
    "end": "1834990"
  },
  {
    "text": "example let's see ID if I set my ID to",
    "start": "1834990",
    "end": "1844580"
  },
  {
    "text": "42 and then I look at that device it has",
    "start": "1844580",
    "end": "1853170"
  },
  {
    "text": "an IP address at 170 well to get to this I would SSH to its host address which is",
    "start": "1853170",
    "end": "1860970"
  },
  {
    "text": "one less than this so 169 and I have an",
    "start": "1860970",
    "end": "1868710"
  },
  {
    "text": "SSH key to be able to get into it that SSH key is in the root filesystem of the",
    "start": "1868710",
    "end": "1874200"
  },
  {
    "text": "micro VM that I booted and you see we're just running alpine Linux so very very",
    "start": "1874200",
    "end": "1880860"
  },
  {
    "text": "simple very small lightweight linux but it's a full Linux so I could you know",
    "start": "1880860",
    "end": "1885870"
  },
  {
    "text": "potentially imagine embedding new code into this Linux and launching it or",
    "start": "1885870",
    "end": "1891680"
  },
  {
    "text": "using this to launch a docker container",
    "start": "1891680",
    "end": "1896870"
  },
  {
    "text": "what else do we have if I stop this workload then it will",
    "start": "1896870",
    "end": "1904620"
  },
  {
    "text": "actually stop sending network traffic in",
    "start": "1904620",
    "end": "1909960"
  },
  {
    "text": "theory I would probably see once in a while I would see a gray box or a hole",
    "start": "1909960",
    "end": "1917010"
  },
  {
    "text": "in this heat map but I'm not sure I never actually spotted it this stuff is",
    "start": "1917010",
    "end": "1923730"
  },
  {
    "text": "happening too quickly what I'd really like to do is instead send it like a ton",
    "start": "1923730",
    "end": "1930840"
  },
  {
    "text": "of traffic and get get it to blow up so",
    "start": "1930840",
    "end": "1936690"
  },
  {
    "text": "also I've plotted or I can plot the start-up time the the script that I use",
    "start": "1936690",
    "end": "1942809"
  },
  {
    "text": "to start things up recorded startup times for each VM so the new plot and",
    "start": "1942809",
    "end": "1951920"
  },
  {
    "text": "execute the new plot script and what I end up with is a boot time PNG that was",
    "start": "1951920",
    "end": "1959390"
  },
  {
    "text": "just generated 1202 and let's just open",
    "start": "1959390",
    "end": "1964500"
  },
  {
    "text": "that up so here's boot time dot PNG let me",
    "start": "1964500",
    "end": "1970950"
  },
  {
    "text": "resize it so that we can see the whole thing and now I'll zoom in to bits and",
    "start": "1970950",
    "end": "1978750"
  },
  {
    "text": "pieces of it so that you can see what it's telling us so this was our maximum",
    "start": "1978750",
    "end": "1983760"
  },
  {
    "text": "startup time 211 milliseconds remember human perception generally 250 is where",
    "start": "1983760",
    "end": "1992640"
  },
  {
    "text": "we start to perceive that we've waited for something so even at the maximum we",
    "start": "1992640",
    "end": "1999390"
  },
  {
    "text": "really won't notice that we've waited for something minimum startup time is",
    "start": "1999390",
    "end": "2004690"
  },
  {
    "text": "123 milliseconds and the total mean average 144 standard deviation 16 so we",
    "start": "2004690",
    "end": "2011660"
  },
  {
    "text": "get a very very fair very even startup time over the course of starting 4,000",
    "start": "2011660",
    "end": "2019460"
  },
  {
    "text": "micro viens so again super early this this was just released two weeks ago but",
    "start": "2019460",
    "end": "2027440"
  },
  {
    "text": "I think over the next year you're going to see integrations",
    "start": "2027440",
    "end": "2032470"
  },
  {
    "text": "to orchestrators and into container runtimes so that your container is going",
    "start": "2032470",
    "end": "2039789"
  },
  {
    "text": "to launch wrapped in something like this whenever it's available and I think you",
    "start": "2039789",
    "end": "2044950"
  },
  {
    "text": "know that's something that's going to be really cool and really exciting because you'll be able to have more per host",
    "start": "2044950",
    "end": "2050710"
  },
  {
    "text": "you'll be able to have better networking and more fair networking per host and",
    "start": "2050710",
    "end": "2056470"
  },
  {
    "text": "you'll be able to have a lot more isolation per host or per container",
    "start": "2056470",
    "end": "2063658"
  },
  {
    "text": "alright so if you want you now have another break for lunch so I get you out",
    "start": "2064230",
    "end": "2071260"
  },
  {
    "text": "early so that you don't have to wait in line for lunch I'll be up front if you have any questions and I'm happy to",
    "start": "2071260",
    "end": "2078700"
  },
  {
    "text": "answer questions on on any of these topics or others just come find me thanks",
    "start": "2078700",
    "end": "2086580"
  },
  {
    "text": "[Music]",
    "start": "2087949",
    "end": "2091459"
  },
  {
    "text": "you",
    "start": "2095980",
    "end": "2098040"
  }
]