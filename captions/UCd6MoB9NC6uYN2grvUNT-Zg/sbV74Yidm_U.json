[
  {
    "start": "0",
    "end": "24000"
  },
  {
    "text": "[Music]",
    "start": "4110",
    "end": "8120"
  },
  {
    "text": "hello I'm FIA a cloud support engineer",
    "start": "8120",
    "end": "10639"
  },
  {
    "text": "here at the AWS office in Sydney today",
    "start": "10639",
    "end": "13040"
  },
  {
    "text": "I'm going to show you how to use Amazon",
    "start": "13040",
    "end": "15160"
  },
  {
    "text": "elastic container service top task",
    "start": "15160",
    "end": "17279"
  },
  {
    "text": "reason to troubleshoot a stopped Amazon",
    "start": "17279",
    "end": "19240"
  },
  {
    "text": "ECS task let's get",
    "start": "19240",
    "end": "21960"
  },
  {
    "text": "started when an Amazon ECS task stops",
    "start": "21960",
    "end": "25279"
  },
  {
    "start": "24000",
    "end": "197000"
  },
  {
    "text": "the first thing to check for is the stop",
    "start": "25279",
    "end": "27480"
  },
  {
    "text": "code for example you might see one of",
    "start": "27480",
    "end": "30279"
  },
  {
    "text": "the following stop codes essential",
    "start": "30279",
    "end": "32920"
  },
  {
    "text": "container and task exited task failed",
    "start": "32920",
    "end": "36200"
  },
  {
    "text": "elastic load balancing health checks",
    "start": "36200",
    "end": "38680"
  },
  {
    "text": "unhealthy container instance task failed",
    "start": "38680",
    "end": "42120"
  },
  {
    "text": "container heal checks service scaling",
    "start": "42120",
    "end": "44520"
  },
  {
    "text": "event",
    "start": "44520",
    "end": "45559"
  },
  {
    "text": "triggered you will also see the stopped",
    "start": "45559",
    "end": "48120"
  },
  {
    "text": "reason with additional information that",
    "start": "48120",
    "end": "50559"
  },
  {
    "text": "you can use to help resolve the issue to",
    "start": "50559",
    "end": "53320"
  },
  {
    "text": "view stop task errors use any of the",
    "start": "53320",
    "end": "56359"
  },
  {
    "text": "following methods Amazon ECS console AWS",
    "start": "56359",
    "end": "60600"
  },
  {
    "text": "command line interface Amazon ECS API",
    "start": "60600",
    "end": "64478"
  },
  {
    "text": "AWS sdks Amazon cloudwatch logs note",
    "start": "64479",
    "end": "68880"
  },
  {
    "text": "that stop tasks appear in The Returned",
    "start": "68880",
    "end": "71280"
  },
  {
    "text": "results for 1 hour past their stop time",
    "start": "71280",
    "end": "74320"
  },
  {
    "text": "after that the stop task details are",
    "start": "74320",
    "end": "76680"
  },
  {
    "text": "cleared from ECS console or AWS",
    "start": "76680",
    "end": "80159"
  },
  {
    "text": "CLI stop to reason one essential",
    "start": "80159",
    "end": "83360"
  },
  {
    "text": "container in task exited as you can see",
    "start": "83360",
    "end": "87119"
  },
  {
    "text": "I'm already logged in the AWS Management",
    "start": "87119",
    "end": "89520"
  },
  {
    "text": "console let's navigate to the Amazon ECS",
    "start": "89520",
    "end": "92520"
  },
  {
    "text": "console search ECS in the search",
    "start": "92520",
    "end": "96079"
  },
  {
    "text": "bar on the Amazon ECS homepage in the",
    "start": "96079",
    "end": "99439"
  },
  {
    "text": "navigation pane choose cluster choose",
    "start": "99439",
    "end": "103159"
  },
  {
    "text": "tasks filter desired status to",
    "start": "103159",
    "end": "106600"
  },
  {
    "text": "stopped choose the task ID view the task",
    "start": "106600",
    "end": "110719"
  },
  {
    "text": "stop time in UTC and stop code on top of",
    "start": "110719",
    "end": "114079"
  },
  {
    "text": "the task console scroll down to the",
    "start": "114079",
    "end": "116640"
  },
  {
    "text": "container section and then scroll down",
    "start": "116640",
    "end": "118560"
  },
  {
    "text": "to the right",
    "start": "118560",
    "end": "120439"
  },
  {
    "text": "view the task stopped status and exit",
    "start": "120439",
    "end": "122920"
  },
  {
    "text": "code under the status tab in the",
    "start": "122920",
    "end": "124759"
  },
  {
    "text": "container section this container stopped",
    "start": "124759",
    "end": "127360"
  },
  {
    "text": "with Docker exit Code Zero which means",
    "start": "127360",
    "end": "129959"
  },
  {
    "text": "that the command successfully completed",
    "start": "129959",
    "end": "132239"
  },
  {
    "text": "and so the container is",
    "start": "132239",
    "end": "134879"
  },
  {
    "text": "stopped stopped reason two task failed",
    "start": "134879",
    "end": "138560"
  },
  {
    "text": "elb health",
    "start": "138560",
    "end": "139879"
  },
  {
    "text": "checks navigate to Amazon ECS console",
    "start": "139879",
    "end": "143360"
  },
  {
    "text": "and choose",
    "start": "143360",
    "end": "146080"
  },
  {
    "text": "cluster choose service",
    "start": "147720",
    "end": "150680"
  },
  {
    "text": "select events tab look for stop task ID",
    "start": "150680",
    "end": "154920"
  },
  {
    "text": "and then select it view the task stop",
    "start": "154920",
    "end": "157920"
  },
  {
    "text": "time in UTC and stop code on top of the",
    "start": "157920",
    "end": "160879"
  },
  {
    "text": "task console select the networking tab",
    "start": "160879",
    "end": "165239"
  },
  {
    "text": "select the task Security Group make sure",
    "start": "165239",
    "end": "168480"
  },
  {
    "text": "that inbound rule in task Security Group",
    "start": "168480",
    "end": "170959"
  },
  {
    "text": "allow traffic from the load balancer",
    "start": "170959",
    "end": "173080"
  },
  {
    "text": "Security",
    "start": "173080",
    "end": "175560"
  },
  {
    "text": "Group navigate back to health and",
    "start": "175840",
    "end": "178640"
  },
  {
    "text": "metrics tab in e CS service and confirm",
    "start": "178640",
    "end": "181319"
  },
  {
    "text": "targets are healthy select the events",
    "start": "181319",
    "end": "184400"
  },
  {
    "text": "tab confirm that service has reached a",
    "start": "184400",
    "end": "187040"
  },
  {
    "text": "steady state note this scenario runs the",
    "start": "187040",
    "end": "190959"
  },
  {
    "text": "task in AWS VPC Network",
    "start": "190959",
    "end": "194480"
  },
  {
    "text": "Mode stopped reason",
    "start": "194480",
    "end": "197680"
  },
  {
    "start": "197000",
    "end": "406000"
  },
  {
    "text": "three this stopped reason indicates that",
    "start": "197680",
    "end": "200519"
  },
  {
    "text": "the security groups attached to your",
    "start": "200519",
    "end": "202159"
  },
  {
    "text": "load balancer and container instance or",
    "start": "202159",
    "end": "204560"
  },
  {
    "text": "the eascs task elastic network interface",
    "start": "204560",
    "end": "206959"
  },
  {
    "text": "for AWS VPC Network Mode are not conf",
    "start": "206959",
    "end": "209760"
  },
  {
    "text": "configured correctly it's a best",
    "start": "209760",
    "end": "211760"
  },
  {
    "text": "practice to configure different security",
    "start": "211760",
    "end": "213840"
  },
  {
    "text": "groups for your load balancer and",
    "start": "213840",
    "end": "215840"
  },
  {
    "text": "container instance or task elastic",
    "start": "215840",
    "end": "218120"
  },
  {
    "text": "network",
    "start": "218120",
    "end": "219080"
  },
  {
    "text": "interface with this approach you allow",
    "start": "219080",
    "end": "221720"
  },
  {
    "text": "all traffic between your load balancers",
    "start": "221720",
    "end": "224120"
  },
  {
    "text": "and container instances or task elastic",
    "start": "224120",
    "end": "226720"
  },
  {
    "text": "network interface you can also set your",
    "start": "226720",
    "end": "230080"
  },
  {
    "text": "container instance to accept traffic on",
    "start": "230080",
    "end": "232159"
  },
  {
    "text": "the port that's specified for the",
    "start": "232159",
    "end": "234879"
  },
  {
    "text": "task navigate to the ECS console and",
    "start": "234879",
    "end": "238000"
  },
  {
    "text": "choose cluster",
    "start": "238000",
    "end": "241400"
  },
  {
    "text": "choose",
    "start": "241400",
    "end": "243879"
  },
  {
    "text": "service select the events",
    "start": "244040",
    "end": "248040"
  },
  {
    "text": "tab look for service event instance",
    "start": "248200",
    "end": "251840"
  },
  {
    "text": "sport that is unhealthy in the Target",
    "start": "251840",
    "end": "253920"
  },
  {
    "text": "group Target group name because of",
    "start": "253920",
    "end": "256160"
  },
  {
    "text": "Reason request timed out navigate to the",
    "start": "256160",
    "end": "259600"
  },
  {
    "text": "ECS service health and Metric",
    "start": "259600",
    "end": "263080"
  },
  {
    "text": "tab under the load balancer Health",
    "start": "263080",
    "end": "265840"
  },
  {
    "text": "select Target group name protocol",
    "start": "265840",
    "end": "270520"
  },
  {
    "text": "see the registered Target status",
    "start": "270520",
    "end": "272720"
  },
  {
    "text": "unhealthy note this scenario runs the",
    "start": "272720",
    "end": "275520"
  },
  {
    "text": "task in Bridge Network Mode select the",
    "start": "275520",
    "end": "278600"
  },
  {
    "text": "unhealthy instance ID this takes you to",
    "start": "278600",
    "end": "281240"
  },
  {
    "text": "ec2 instance console select ec2 instance",
    "start": "281240",
    "end": "284680"
  },
  {
    "text": "name select security tab confirm that",
    "start": "284680",
    "end": "288479"
  },
  {
    "text": "the security group that's associated",
    "start": "288479",
    "end": "290400"
  },
  {
    "text": "with your container instance allows all",
    "start": "290400",
    "end": "292840"
  },
  {
    "text": "Ingress traffic on the task host Port",
    "start": "292840",
    "end": "295160"
  },
  {
    "text": "range from the security group that's",
    "start": "295160",
    "end": "297600"
  },
  {
    "text": "associated with your load balancer",
    "start": "297600",
    "end": "300400"
  },
  {
    "text": "navigate back to health and metrics tab",
    "start": "300400",
    "end": "302520"
  },
  {
    "text": "in ECS service and confirm targets are",
    "start": "302520",
    "end": "305160"
  },
  {
    "text": "healthy select the events tab confirm",
    "start": "305160",
    "end": "308479"
  },
  {
    "text": "that service has reached a steady",
    "start": "308479",
    "end": "312160"
  },
  {
    "text": "state stopped reason for task failed",
    "start": "312720",
    "end": "316479"
  },
  {
    "text": "container health checks you receive the",
    "start": "316479",
    "end": "319280"
  },
  {
    "text": "error of task failed container health",
    "start": "319280",
    "end": "321479"
  },
  {
    "text": "checks when the Amazon ECS containers in",
    "start": "321479",
    "end": "323919"
  },
  {
    "text": "your task are using health checks that",
    "start": "323919",
    "end": "326319"
  },
  {
    "text": "your service can't pass choose ECS",
    "start": "326319",
    "end": "331639"
  },
  {
    "text": "service select the tasks tab filter",
    "start": "332520",
    "end": "336199"
  },
  {
    "text": "desired status to",
    "start": "336199",
    "end": "337960"
  },
  {
    "text": "stop select the task ID look for the",
    "start": "337960",
    "end": "341440"
  },
  {
    "text": "task stop reason under the configuration",
    "start": "341440",
    "end": "344639"
  },
  {
    "text": "tab select task definition select Json",
    "start": "344639",
    "end": "348280"
  },
  {
    "text": "tab make sure that you use the correct",
    "start": "348280",
    "end": "350960"
  },
  {
    "text": "health check commands and syntax in the",
    "start": "350960",
    "end": "353360"
  },
  {
    "text": "container",
    "start": "353360",
    "end": "354720"
  },
  {
    "text": "definition an exit code of zero",
    "start": "354720",
    "end": "357039"
  },
  {
    "text": "indicates success and a nonzero exit",
    "start": "357039",
    "end": "359840"
  },
  {
    "text": "code indicates failure confirm that the",
    "start": "359840",
    "end": "362720"
  },
  {
    "text": "health check parameters of interval",
    "start": "362720",
    "end": "364840"
  },
  {
    "text": "timeout retries and start period are",
    "start": "364840",
    "end": "367479"
  },
  {
    "text": "configured",
    "start": "367479",
    "end": "369000"
  },
  {
    "text": "correctly if your container takes a long",
    "start": "369000",
    "end": "371520"
  },
  {
    "text": "time to initiate then your container can",
    "start": "371520",
    "end": "374000"
  },
  {
    "text": "fail the container he check set the",
    "start": "374000",
    "end": "376840"
  },
  {
    "text": "start period in the advanced container",
    "start": "376840",
    "end": "379000"
  },
  {
    "text": "definition parameter this gives your",
    "start": "379000",
    "end": "381400"
  },
  {
    "text": "Amazon ECS container time to bootstrap",
    "start": "381400",
    "end": "384400"
  },
  {
    "text": "before any failed health checks are",
    "start": "384400",
    "end": "386360"
  },
  {
    "text": "included in the maximum number of",
    "start": "386360",
    "end": "388160"
  },
  {
    "text": "retries navig get back to",
    "start": "388160",
    "end": "390759"
  },
  {
    "text": "service and then select logs tab look",
    "start": "390759",
    "end": "394039"
  },
  {
    "text": "for errors coming from application logs",
    "start": "394039",
    "end": "396599"
  },
  {
    "text": "if your Amazon ECS tasks uses the AWS",
    "start": "396599",
    "end": "399560"
  },
  {
    "text": "log driver then check your application",
    "start": "399560",
    "end": "401919"
  },
  {
    "text": "logs on Amazon",
    "start": "401919",
    "end": "404560"
  },
  {
    "text": "cloudwatch stopped reason five service",
    "start": "404560",
    "end": "407919"
  },
  {
    "start": "406000",
    "end": "448000"
  },
  {
    "text": "scaling event triggered first check ECS",
    "start": "407919",
    "end": "411520"
  },
  {
    "text": "service select the events tab look for",
    "start": "411520",
    "end": "414800"
  },
  {
    "text": "Service events with ECS service topping",
    "start": "414800",
    "end": "417440"
  },
  {
    "text": "the task and then setting the desired",
    "start": "417440",
    "end": "419800"
  },
  {
    "text": "account select the configuration and",
    "start": "419800",
    "end": "422280"
  },
  {
    "text": "networking tab scroll down to the",
    "start": "422280",
    "end": "424720"
  },
  {
    "text": "autoscaling section select alarm and",
    "start": "424720",
    "end": "427800"
  },
  {
    "text": "open the cloudwatch low alarm and high",
    "start": "427800",
    "end": "429919"
  },
  {
    "text": "alarm in the cloudwatch alarms console",
    "start": "429919",
    "end": "432840"
  },
  {
    "text": "check the status of both alarms the",
    "start": "432840",
    "end": "435560"
  },
  {
    "text": "service scheduler respects the desired",
    "start": "435560",
    "end": "437520"
  },
  {
    "text": "count at all times but as long as you",
    "start": "437520",
    "end": "440000"
  },
  {
    "text": "have active scaling policies and alarms",
    "start": "440000",
    "end": "442319"
  },
  {
    "text": "on a service service autoscaling could",
    "start": "442319",
    "end": "444680"
  },
  {
    "text": "change account that you manually",
    "start": "444680",
    "end": "447599"
  },
  {
    "text": "set thank you for watching and happy",
    "start": "447599",
    "end": "450280"
  },
  {
    "start": "448000",
    "end": "464000"
  },
  {
    "text": "cloud computing from all of us here at",
    "start": "450280",
    "end": "452520"
  },
  {
    "text": "AWS",
    "start": "452520",
    "end": "454080"
  },
  {
    "text": "[Applause]",
    "start": "454080",
    "end": "456130"
  },
  {
    "text": "[Music]",
    "start": "456130",
    "end": "459240"
  }
]