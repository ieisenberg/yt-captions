[
  {
    "start": "0",
    "end": "34000"
  },
  {
    "text": "[Music]",
    "start": "0",
    "end": "4500"
  },
  {
    "text": "hello and thank you for watching this",
    "start": "5600",
    "end": "7919"
  },
  {
    "text": "video my name is Thor getting's and I'm",
    "start": "7919",
    "end": "10139"
  },
  {
    "text": "a senior solutions architect here at AWS",
    "start": "10139",
    "end": "12530"
  },
  {
    "text": "Amazon CloudWatch is a great service you",
    "start": "12530",
    "end": "15599"
  },
  {
    "text": "can use to centralize your application",
    "start": "15599",
    "end": "17490"
  },
  {
    "text": "logs most at net application developers",
    "start": "17490",
    "end": "20820"
  },
  {
    "text": "have chosen either log for net or end",
    "start": "20820",
    "end": "23100"
  },
  {
    "text": "log as a logging framework the great",
    "start": "23100",
    "end": "25859"
  },
  {
    "text": "news is that you can very simply change",
    "start": "25859",
    "end": "27869"
  },
  {
    "text": "your configuration file to send your",
    "start": "27869",
    "end": "29880"
  },
  {
    "text": "logs to cloud watch without changing",
    "start": "29880",
    "end": "32340"
  },
  {
    "text": "your existing net application let's take",
    "start": "32340",
    "end": "35489"
  },
  {
    "start": "34000",
    "end": "66000"
  },
  {
    "text": "a look in my environment I'm using the",
    "start": "35489",
    "end": "37920"
  },
  {
    "text": "AWS toolkit for visual studio this",
    "start": "37920",
    "end": "40739"
  },
  {
    "text": "allows me to interact with AWS resources",
    "start": "40739",
    "end": "42899"
  },
  {
    "text": "and services without leaving the visual",
    "start": "42899",
    "end": "45750"
  },
  {
    "text": "studio ide it isn't required but it does",
    "start": "45750",
    "end": "48989"
  },
  {
    "text": "make my development a lot easier it is",
    "start": "48989",
    "end": "52140"
  },
  {
    "text": "available for visual studio versions",
    "start": "52140",
    "end": "54090"
  },
  {
    "text": "from 2008 to 2019 so first let's take a",
    "start": "54090",
    "end": "58829"
  },
  {
    "text": "look at the new get packages that i'm",
    "start": "58829",
    "end": "60690"
  },
  {
    "text": "using AWS has created nougat packages",
    "start": "60690",
    "end": "69270"
  },
  {
    "start": "66000",
    "end": "93000"
  },
  {
    "text": "for all of its services and resources so",
    "start": "69270",
    "end": "71549"
  },
  {
    "text": "that dotnet developers can easily",
    "start": "71549",
    "end": "73140"
  },
  {
    "text": "interact with AWS you can see I added",
    "start": "73140",
    "end": "77009"
  },
  {
    "text": "the AWS logger log4net package and the",
    "start": "77009",
    "end": "81900"
  },
  {
    "text": "AWS logger dot n log package in this",
    "start": "81900",
    "end": "85439"
  },
  {
    "text": "sample application this will allow me to",
    "start": "85439",
    "end": "88049"
  },
  {
    "text": "log directly to cloud watch without the",
    "start": "88049",
    "end": "90119"
  },
  {
    "text": "need to write any new code so if I take",
    "start": "90119",
    "end": "94799"
  },
  {
    "start": "93000",
    "end": "122000"
  },
  {
    "text": "a look at my n log config file you will",
    "start": "94799",
    "end": "98100"
  },
  {
    "text": "see that I added a new target called AWS",
    "start": "98100",
    "end": "101640"
  },
  {
    "text": "of type AWS target I specify the log",
    "start": "101640",
    "end": "106500"
  },
  {
    "text": "group that's the cloud watch log group",
    "start": "106500",
    "end": "108810"
  },
  {
    "text": "that I want to log to and the region",
    "start": "108810",
    "end": "111180"
  },
  {
    "text": "that I want to use then in my logging",
    "start": "111180",
    "end": "115380"
  },
  {
    "text": "rules I go ahead and add an my new",
    "start": "115380",
    "end": "118020"
  },
  {
    "text": "target in the write to section similarly",
    "start": "118020",
    "end": "123680"
  },
  {
    "start": "122000",
    "end": "150000"
  },
  {
    "text": "for log Fernet",
    "start": "123680",
    "end": "126650"
  },
  {
    "text": "if I take a look at the log for net dot",
    "start": "126650",
    "end": "129170"
  },
  {
    "text": "config file I've added an append er",
    "start": "129170",
    "end": "131990"
  },
  {
    "text": "called a WS of with a type of AWS logger",
    "start": "131990",
    "end": "136820"
  },
  {
    "text": "log for net dot AWS offender and AWS",
    "start": "136820",
    "end": "141110"
  },
  {
    "text": "logger dot log for net and then I add a",
    "start": "141110",
    "end": "145610"
  },
  {
    "text": "reference for the appender called",
    "start": "145610",
    "end": "149060"
  },
  {
    "text": "AWS okay so let's take a look at what",
    "start": "149060",
    "end": "152390"
  },
  {
    "start": "150000",
    "end": "203000"
  },
  {
    "text": "the sample application does so quite",
    "start": "152390",
    "end": "155750"
  },
  {
    "text": "simply all it's going to do is do an",
    "start": "155750",
    "end": "158510"
  },
  {
    "text": "example of logging with n log and",
    "start": "158510",
    "end": "161230"
  },
  {
    "text": "logging with log for net so in here you",
    "start": "161230",
    "end": "164030"
  },
  {
    "text": "can see in the n log section I'm just",
    "start": "164030",
    "end": "167420"
  },
  {
    "text": "going to write a couple of sample",
    "start": "167420",
    "end": "168650"
  },
  {
    "text": "messages and then in the log for net",
    "start": "168650",
    "end": "173390"
  },
  {
    "text": "section I'm going to write a couple of",
    "start": "173390",
    "end": "175160"
  },
  {
    "text": "sample messages and you can see I'm not",
    "start": "175160",
    "end": "177050"
  },
  {
    "text": "doing anything specific to AWS in my",
    "start": "177050",
    "end": "180350"
  },
  {
    "text": "code all I'm doing is getting a",
    "start": "180350",
    "end": "183560"
  },
  {
    "text": "reference to the logger and logging some",
    "start": "183560",
    "end": "186530"
  },
  {
    "text": "messages so let's go ahead and run this",
    "start": "186530",
    "end": "188870"
  },
  {
    "text": "code",
    "start": "188870",
    "end": "190940"
  },
  {
    "text": "[Music]",
    "start": "190940",
    "end": "199360"
  },
  {
    "text": "okay now if I go to the AWS console to",
    "start": "201240",
    "end": "206860"
  },
  {
    "start": "203000",
    "end": "258000"
  },
  {
    "text": "view the cloud watch logs I go into the",
    "start": "206860",
    "end": "211090"
  },
  {
    "text": "cloud watch service click on logs and I",
    "start": "211090",
    "end": "217420"
  },
  {
    "text": "can see here is my n log example and you",
    "start": "217420",
    "end": "222820"
  },
  {
    "text": "can see the example messages that I've",
    "start": "222820",
    "end": "228280"
  },
  {
    "text": "sent and then similarly for log4net",
    "start": "228280",
    "end": "232590"
  },
  {
    "text": "you can see the example messages that",
    "start": "232590",
    "end": "236080"
  },
  {
    "text": "I've sent it's just that easy to start",
    "start": "236080",
    "end": "240070"
  },
  {
    "text": "using cloud watch with log Fernet and n",
    "start": "240070",
    "end": "243490"
  },
  {
    "text": "log in your dotnet applications I hope",
    "start": "243490",
    "end": "246670"
  },
  {
    "text": "you enjoyed this video and learn",
    "start": "246670",
    "end": "247990"
  },
  {
    "text": "something thanks again for watching",
    "start": "247990",
    "end": "250790"
  },
  {
    "text": "[Music]",
    "start": "250790",
    "end": "255140"
  },
  {
    "text": "you",
    "start": "255140",
    "end": "257200"
  }
]