[
  {
    "start": "0",
    "end": "159000"
  },
  {
    "text": "so hi everyone my name is Eid butcher's dear I'm a Solutions Architect with AWS and today we'll be talking about",
    "start": "120",
    "end": "6899"
  },
  {
    "text": "production readiness so how many developers do we have okay good how many",
    "start": "6899",
    "end": "13080"
  },
  {
    "text": "of you think whatever you shipped or whatever your shape is is bulletproof",
    "start": "13080",
    "end": "19310"
  },
  {
    "text": "know what you are overconfident I will I'd like to talk to you after",
    "start": "19310",
    "end": "25619"
  },
  {
    "text": "this session so so yeah we'll talk about",
    "start": "25619",
    "end": "31109"
  },
  {
    "text": "some tenants of best practices on on how to be ready to deploy code and there is",
    "start": "31109",
    "end": "37680"
  },
  {
    "text": "about nine of them I know that typically whenever you hear something about best practices top five top ten but this is",
    "start": "37680",
    "end": "45090"
  },
  {
    "text": "nine so bear with me I'm working on number ten so to get started yeah there you go so I",
    "start": "45090",
    "end": "55710"
  },
  {
    "text": "want to start with our CTO Verner Vogel's who said this and one of the",
    "start": "55710",
    "end": "61410"
  },
  {
    "text": "sessions that reinvent everything fails all the time so this is something that",
    "start": "61410",
    "end": "66780"
  },
  {
    "text": "you should have as kind of a philosophy going into building your applications in",
    "start": "66780",
    "end": "71939"
  },
  {
    "text": "the cloud so always assume that things will fail and as you probably know or experienced software fails hardware",
    "start": "71939",
    "end": "78390"
  },
  {
    "text": "fails human error can be a failure so try your best to always think before you",
    "start": "78390",
    "end": "84570"
  },
  {
    "text": "build anything okay what can I do how can we build this environment where a component can fail without impacting",
    "start": "84570",
    "end": "92909"
  },
  {
    "text": "your your business so these are the nine",
    "start": "92909",
    "end": "98189"
  },
  {
    "text": "tenants I talked about we're going to dive deep in each one of them but on a high level right now we're going to talk",
    "start": "98189",
    "end": "105000"
  },
  {
    "text": "about architecture design and review we're going to talk about monitoring and login we're going to talk about",
    "start": "105000",
    "end": "112259"
  },
  {
    "text": "documentation and alerting right service level agreements SLA and we're going to",
    "start": "112259",
    "end": "118320"
  },
  {
    "text": "talk about expected throughput right what is the expected stage of your application and how to measure that",
    "start": "118320",
    "end": "123540"
  },
  {
    "text": "we're going to talk about some testing and deployment strategies one thing",
    "start": "123540",
    "end": "129030"
  },
  {
    "text": "that's important here if you are in an early stage in your kind of lifetime as a start-up",
    "start": "129030",
    "end": "135000"
  },
  {
    "text": "it is not mandatory to have all of these right away so this is kind of the",
    "start": "135000",
    "end": "140760"
  },
  {
    "text": "building tenants you can adopt a couple of them when you first start in but as you grow you want to make sure you're",
    "start": "140760",
    "end": "147870"
  },
  {
    "text": "adapting more and more so they're not a must right away but it's good to have them in front of you and keep them as a",
    "start": "147870",
    "end": "153720"
  },
  {
    "text": "target so we'll review the architectural design right so I'll talk about the",
    "start": "153720",
    "end": "161280"
  },
  {
    "start": "159000",
    "end": "159000"
  },
  {
    "text": "Netflix chaos engineer in a minute but really you want to define your study state and what I mean by that is to",
    "start": "161280",
    "end": "168030"
  },
  {
    "text": "define a steady state you want to look at measurable outputs and you measure the outputs by looking at error rates",
    "start": "168030",
    "end": "173579"
  },
  {
    "text": "latencies transactions per second and you want to define that so that you know",
    "start": "173579",
    "end": "178970"
  },
  {
    "text": "how is my application going to behave or react when I have users you know trying",
    "start": "178970",
    "end": "184200"
  },
  {
    "text": "to access my application or consume in my application now once you define the steady state you want to test that so",
    "start": "184200",
    "end": "190980"
  },
  {
    "text": "back to that earlier comments from that I opened up Wade which is everything fails so defining a",
    "start": "190980",
    "end": "197579"
  },
  {
    "text": "scope is great now we don't know if it's gonna react in real life or how it's",
    "start": "197579",
    "end": "202620"
  },
  {
    "text": "gonna react so after you define your steady state you want to make sure to high pitayas right and when you're happy",
    "start": "202620",
    "end": "208530"
  },
  {
    "text": "ties you want to to run tests in a in a simulator environment right where you can actually run your application",
    "start": "208530",
    "end": "215099"
  },
  {
    "text": "through a real workload you can experiment with groups or any stable",
    "start": "215099",
    "end": "220680"
  },
  {
    "text": "environments you can expose your experiments to simulated real world so",
    "start": "220680",
    "end": "226790"
  },
  {
    "text": "production will produce in one environment try to emulate that production environment and send real",
    "start": "226790",
    "end": "233519"
  },
  {
    "text": "traffic to it and see what kind of behaviors are you going to to observe and if you have less differences between",
    "start": "233519",
    "end": "241169"
  },
  {
    "text": "the simulated environment you're highly likely that you're built you can think that you're highly likely built a",
    "start": "241169",
    "end": "247410"
  },
  {
    "text": "resilient environment if you see a lot of our normalities or differences then it's time to iterate and dig deeper and",
    "start": "247410",
    "end": "253260"
  },
  {
    "text": "find out why so testing your hypotheses is very important so I'll go back to the",
    "start": "253260",
    "end": "258870"
  },
  {
    "text": "kind of the methodology or philosophy of Netflix chaos engineering how many of",
    "start": "258870",
    "end": "264599"
  },
  {
    "text": "you have heard of simian army - I'm not gonna - you every",
    "start": "264599",
    "end": "271949"
  },
  {
    "text": "way okay so simian army is this this is",
    "start": "271949",
    "end": "277020"
  },
  {
    "text": "a concept that Netflix has developed it's in github so you can look this up and basically what it is is a bunch of",
    "start": "277020",
    "end": "284630"
  },
  {
    "text": "rogue applications so to speak and they all have monkey names so chaos monkey",
    "start": "284630",
    "end": "290669"
  },
  {
    "text": "gorilla monkey gorilla this gorilla that but anyway the objective of these monkeys of these tools is to actually",
    "start": "290669",
    "end": "297990"
  },
  {
    "text": "forcefully break the environment right without any prior knowledge or anything",
    "start": "297990",
    "end": "303660"
  },
  {
    "text": "you just send this cron jobs or these applications and they start tearing things down and then they look at",
    "start": "303660",
    "end": "310610"
  },
  {
    "text": "customer impact downtime what's one wrong logs and then start to",
    "start": "310610",
    "end": "316169"
  },
  {
    "text": "build the environment in a resilient way I don't recommend that you go and start with this right away it's good to read and it's good to think",
    "start": "316169",
    "end": "323520"
  },
  {
    "text": "in this fashion right because this is actually the way Netflix does it is a",
    "start": "323520",
    "end": "328590"
  },
  {
    "text": "little bit more advanced or it actually goes into production environment and start syncing stuff out it'll take a",
    "start": "328590",
    "end": "334500"
  },
  {
    "text": "cluster of ec2 instances it'll take IBS storage L break security groups between",
    "start": "334500",
    "end": "341729"
  },
  {
    "text": "two to two clusters so it's very very impactful but for them obviously they have teams what we call a wall room what",
    "start": "341729",
    "end": "349560"
  },
  {
    "text": "they actually are ready and prepared to investigate but the idea here we what we like to share is once you build your",
    "start": "349560",
    "end": "356460"
  },
  {
    "text": "environment you decide on the steady-state and then you do those experiments now try to introduce failure",
    "start": "356460",
    "end": "361889"
  },
  {
    "text": "into the production environment minimizing impact on your customers on a",
    "start": "361889",
    "end": "369539"
  },
  {
    "text": "high level when you talk about high availability and redundancy you want to make sure to look at these three kind of",
    "start": "369539",
    "end": "375090"
  },
  {
    "text": "pillars and these pillars are so the problem usually is a failure of a specific service or a location so to",
    "start": "375090",
    "end": "383370"
  },
  {
    "text": "mitigate that you want to build in a multi HD fashion you guys familiar with availability zones and what it means yes",
    "start": "383370",
    "end": "391590"
  },
  {
    "text": "no three four okay so availability zone is basically a separated data center right with",
    "start": "391590",
    "end": "399100"
  },
  {
    "text": "that's connected with the different power grid networking it's completely",
    "start": "399100",
    "end": "404860"
  },
  {
    "text": "isolated right so when you build your application in a multi easy fashion you're basically taking advantage of to",
    "start": "404860",
    "end": "412950"
  },
  {
    "text": "the data centers so run across multiple availability zones or even regions so to",
    "start": "412950",
    "end": "420250"
  },
  {
    "text": "be able to handle spikes for example and this is kind of a low-hanging fruit you launched a new application and you're",
    "start": "420250",
    "end": "426010"
  },
  {
    "text": "expecting a large volume of spikes leveraged auto scaling so auto scaling is something that you can deploy right",
    "start": "426010",
    "end": "432670"
  },
  {
    "text": "away very easy with in conjunction with the cloud watch where you can scale up",
    "start": "432670",
    "end": "439330"
  },
  {
    "text": "an end or down as you see fit and there are parameters that you define right",
    "start": "439330",
    "end": "445120"
  },
  {
    "text": "when I reach 80% CPU for this period of time increased by when I reach when I",
    "start": "445120",
    "end": "451480"
  },
  {
    "text": "decrease my CPU by X percentage for this period of time decreased by an avoid",
    "start": "451480",
    "end": "459130"
  },
  {
    "text": "single point of failure so look at your architecture as a whole and and you should not have any single point",
    "start": "459130",
    "end": "465370"
  },
  {
    "text": "failures at all and you can leverage again multi easy you can leverage backup elastic load balancers these are all",
    "start": "465370",
    "end": "472270"
  },
  {
    "text": "technologies that are available to you today within AWS or you can completely ISIL remove the single point of failure",
    "start": "472270",
    "end": "481080"
  },
  {
    "text": "now we're both a little bit of the stack so standardizing on libraries and design",
    "start": "483100",
    "end": "488440"
  },
  {
    "text": "Paris is very important so when you're thinking about when you're thinking",
    "start": "488440",
    "end": "493900"
  },
  {
    "text": "about production readiness and you're you know writing code and trying to ship code and you're getting create ready to close to production think about",
    "start": "493900",
    "end": "500320"
  },
  {
    "text": "standardizing on libraries and languages even on styles and guidelines and there are tools actually to help you with that",
    "start": "500320",
    "end": "505990"
  },
  {
    "text": "like yes and less or gof MT and these tools help you make troubleshooting",
    "start": "505990",
    "end": "512830"
  },
  {
    "text": "easier even later down the road if you have compliance requirements or additional security requirements you'll",
    "start": "512830",
    "end": "518680"
  },
  {
    "text": "find yourself are a better place because you've standardized your code is clean it's well-documented and you don't have",
    "start": "518680",
    "end": "524620"
  },
  {
    "text": "kind of a normalities or just ad hoc languages all over the place spot",
    "start": "524620",
    "end": "531010"
  },
  {
    "text": "situations where you your code may be duplicated and be able to be refactored look for",
    "start": "531010",
    "end": "537700"
  },
  {
    "text": "opportunities to implement good design patterns and last but not least know",
    "start": "537700",
    "end": "543100"
  },
  {
    "text": "your licenses right difference between open source and no or MIT Apache so",
    "start": "543100",
    "end": "548590"
  },
  {
    "text": "these are best practices just before shipping code to think about and implement ahead of time before you",
    "start": "548590",
    "end": "555730"
  },
  {
    "text": "actually push code security security is",
    "start": "555730",
    "end": "561640"
  },
  {
    "start": "560000",
    "end": "560000"
  },
  {
    "text": "very very important at AWS security we call it security's job zero it's even before number one so always think",
    "start": "561640",
    "end": "568920"
  },
  {
    "text": "security whenever you're thinking about launching your code or production readiness in general so with security",
    "start": "568920",
    "end": "575670"
  },
  {
    "text": "ensure that and I heard this on the previous during the previous presentation it's very very important",
    "start": "575670",
    "end": "581860"
  },
  {
    "text": "never store credentials on your application and you can kind of tell we keep repeating this over and over so",
    "start": "581860",
    "end": "588130"
  },
  {
    "text": "don't store up like credentials on your application be sure to code defensively",
    "start": "588130",
    "end": "593410"
  },
  {
    "text": "so protect yourself event against sequel injection cross-site scripting and there",
    "start": "593410",
    "end": "600580"
  },
  {
    "text": "are methods and open-source libraries out there that can help you develop or adopt best practices right for example",
    "start": "600580",
    "end": "607210"
  },
  {
    "text": "to code defensively against sequel injections at least privileges one way",
    "start": "607210",
    "end": "613980"
  },
  {
    "text": "another way is against sequel injection",
    "start": "613980",
    "end": "621190"
  },
  {
    "text": "another way is it skips my mind I'll get back to but there's a couple of techniques you can utilize to defend",
    "start": "621190",
    "end": "628120"
  },
  {
    "text": "yourself from the beginning or defensively consider pre-commit Bael how",
    "start": "628120",
    "end": "634750"
  },
  {
    "text": "many of you have heard of it the pre-commit buy-up it's also on gate so take a look at that so what it does is",
    "start": "634750",
    "end": "640210"
  },
  {
    "text": "really it's an open source software that allows you to pre commit your code",
    "start": "640210",
    "end": "647470"
  },
  {
    "text": "before you actually commit and look at a normalities look at code issues look at",
    "start": "647470",
    "end": "652750"
  },
  {
    "text": "you know anything that's that's kind of buggy with your code before you push code to production and this is all open",
    "start": "652750",
    "end": "660070"
  },
  {
    "text": "source tools these are all open source tools that are available to you",
    "start": "660070",
    "end": "665700"
  },
  {
    "text": "last but not least is try to leverage other startups I've worked with customers that have this cadence where",
    "start": "666410",
    "end": "673200"
  },
  {
    "start": "669000",
    "end": "669000"
  },
  {
    "text": "they do every last Friday of the month they work in a kind of a shared space and they invite developers from their",
    "start": "673200",
    "end": "681930"
  },
  {
    "text": "neighbors or in neighbor company and then they look at each other's code and try to see if there's some kind of ways",
    "start": "681930",
    "end": "688050"
  },
  {
    "text": "of improvement what can be done better another way is even within your team so",
    "start": "688050",
    "end": "693270"
  },
  {
    "text": "if a team is working on say micro services and another team is working on another project have those teams a kind",
    "start": "693270",
    "end": "699000"
  },
  {
    "text": "of cross function so you can get a different perspective because we tend to I'm guilty of it to get that narrow",
    "start": "699000",
    "end": "705150"
  },
  {
    "text": "vision or kind of a vacuum look and we think this this is a this is the only way get a different perspective even",
    "start": "705150",
    "end": "711930"
  },
  {
    "text": "within your team or outside and those customers that actually I've worked with that do cross not teams but cross",
    "start": "711930",
    "end": "718950"
  },
  {
    "text": "company across startup code review have mentioned that they've realized a lot of",
    "start": "718950",
    "end": "724380"
  },
  {
    "text": "benefit monitoring so with monitoring",
    "start": "724380",
    "end": "731790"
  },
  {
    "text": "there's a couple different levels of monitoring and alerting so there's a service level monitoring an application",
    "start": "731790",
    "end": "736980"
  },
  {
    "text": "level monitoring with these types of monitoring you want to identify first what's critical what's important what",
    "start": "736980",
    "end": "744390"
  },
  {
    "text": "should I notify on what who should do should i page at 3:00 a.m. in the morning and what kind of issues should i",
    "start": "744390",
    "end": "750750"
  },
  {
    "text": "page for or not so what I mean by that is for server the server level service level monitoring you want to make sure",
    "start": "750750",
    "end": "756960"
  },
  {
    "text": "to classify create a classification of your application where by if for example",
    "start": "756960",
    "end": "762780"
  },
  {
    "text": "I'm running an e-commerce website and my payment system is down everybody should",
    "start": "762780",
    "end": "771000"
  },
  {
    "text": "get paged because we're not working we're not open for business however on the application level if say at midnight",
    "start": "771000",
    "end": "780090"
  },
  {
    "text": "on Sunday I have an alarm of some kind of throughput latency right minor should",
    "start": "780090",
    "end": "785820"
  },
  {
    "text": "i page someone at rheya maybe not necessarily so classify the way you're",
    "start": "785820",
    "end": "791250"
  },
  {
    "text": "alerting and monitoring right what's important and who the who gets paged",
    "start": "791250",
    "end": "796290"
  },
  {
    "text": "and what's lesson ortant and is it does it worth a page in the middle of the night or it can just",
    "start": "796290",
    "end": "801600"
  },
  {
    "text": "be an email to a group on alias performance metrics this is very",
    "start": "801600",
    "end": "808080"
  },
  {
    "text": "important obviously if you can't measure something you can't do anything about it right so start building dashboards of",
    "start": "808080",
    "end": "814260"
  },
  {
    "text": "important metrics this is very critical ties back to what I just said before",
    "start": "814260",
    "end": "819690"
  },
  {
    "text": "about classifying your applications so those applications that are critical to your business right or to your",
    "start": "819690",
    "end": "825470"
  },
  {
    "text": "environment make sure that there is a way to to have them in a dashboard and",
    "start": "825470",
    "end": "831390"
  },
  {
    "text": "there's third party obviously tools out there open source and not well you can have a dashboard so you're aware of all",
    "start": "831390",
    "end": "838860"
  },
  {
    "text": "the normalities issues blips hiccups that happen to that application because",
    "start": "838860",
    "end": "844769"
  },
  {
    "text": "you want to be able to to be aware right away right so if we lose the analogy of",
    "start": "844769",
    "end": "850350"
  },
  {
    "text": "pillars for example if we remove pillars of a building it will collapse so you need to look at your application and",
    "start": "850350",
    "end": "856620"
  },
  {
    "text": "know what are those pillars and you need to be notified on those right away because you don't want the business to collapse now if a piece of tile is",
    "start": "856620",
    "end": "864300"
  },
  {
    "text": "broken here or there that can be fixed the next day so you always think to have",
    "start": "864300",
    "end": "869310"
  },
  {
    "text": "metrics that are being gathered so oh so so the second the second point is when",
    "start": "869310",
    "end": "875459"
  },
  {
    "text": "you start when you build this this metric about the pillars so to speak you think you're done right and then the",
    "start": "875459",
    "end": "882149"
  },
  {
    "text": "moment an issue happens or you have an alert alert or alarm then you figure out that you didn't measure a specific",
    "start": "882149",
    "end": "888420"
  },
  {
    "text": "metric and now you need it and this this is just comes with the experience there's gonna be things you're gonna miss and they all rise when when the",
    "start": "888420",
    "end": "895950"
  },
  {
    "text": "time is right and you have to add those and classify them as well is this priority one two and three etc one more",
    "start": "895950",
    "end": "903570"
  },
  {
    "text": "important item here on monitoring is average highs issues and there is a reason why we put it involved there so",
    "start": "903570",
    "end": "910170"
  },
  {
    "text": "when you set it up your monitoring systems make sure you just don't look at medium and average or median and average",
    "start": "910170",
    "end": "916320"
  },
  {
    "text": "right look at the look at your system in a percentage style because when you go",
    "start": "916320",
    "end": "923579"
  },
  {
    "text": "with average it hides the big anomalies and I'll show you an example here and we if you miss those abnormalities even",
    "start": "923579",
    "end": "930089"
  },
  {
    "text": "though if they're small they can be very impactful if you have a large user base plus in order for you to",
    "start": "930089",
    "end": "936569"
  },
  {
    "text": "be successful in digging deep for root cause analysis you need to know exactly where that a normality happened",
    "start": "936569",
    "end": "942359"
  },
  {
    "text": "otherwise it just goes right by and you never see it so more about application",
    "start": "942359",
    "end": "951179"
  },
  {
    "text": "visibility so here you want more insight in your application right so you want to",
    "start": "951179",
    "end": "956220"
  },
  {
    "text": "dig deep into the performance of the application itself so you want to be able to know how long are the cause",
    "start": "956220",
    "end": "963119"
  },
  {
    "text": "being retained right you want to know if if the issues are trending up or end or",
    "start": "963119",
    "end": "969059"
  },
  {
    "text": "down you want to know what part of the application generates in most number of errors so make sure you utilize a tool",
    "start": "969059",
    "end": "976769"
  },
  {
    "text": "application level monitoring so your deep you have a deep understanding of the your applications behavior this is",
    "start": "976769",
    "end": "986489"
  },
  {
    "text": "an example of looking at latency in function of time where we look at the",
    "start": "986489",
    "end": "992160"
  },
  {
    "text": "mean and median if we look at this example here I mean there's a little bit of a blip around 936 but it's not enough",
    "start": "992160",
    "end": "999629"
  },
  {
    "text": "to raise eyebrows or speak but if we switch to percentile now we have a",
    "start": "999629",
    "end": "1006799"
  },
  {
    "text": "problem so you can see how at that same time 936 we have a giant spike and also",
    "start": "1006799",
    "end": "1012709"
  },
  {
    "text": "at 448 we didn't see anything on the previous time so you want to make sure always leverage 90 and I was a 95",
    "start": "1012709",
    "end": "1020089"
  },
  {
    "text": "percentile I'm I came from a network engineering background so not 95 percentile but percentile in general so",
    "start": "1020089",
    "end": "1026240"
  },
  {
    "text": "you can peek and dig deep on these anomalies and find out why there was a spike there different types of",
    "start": "1026240",
    "end": "1034370"
  },
  {
    "text": "monitoring there is a synthetic monitor and real user monitoring so synthetic monitoring is also known as proactive",
    "start": "1034370",
    "end": "1041720"
  },
  {
    "text": "monitoring so don't wait until things happen because real-time monitoring is is that which is your it tells you",
    "start": "1041720",
    "end": "1049039"
  },
  {
    "text": "exactly how you use them users are interacting with your application and it reports back to you and then your your",
    "start": "1049039",
    "end": "1054919"
  },
  {
    "text": "reactively making actions right or taking actions synthetic matter",
    "start": "1054919",
    "end": "1060620"
  },
  {
    "text": "monitoring is proactive so try to emulate the user experience as I mentioned earlier if we take the",
    "start": "1060620",
    "end": "1066770"
  },
  {
    "text": "example of e-commerce website right and I have a user that comes in answers the",
    "start": "1066770",
    "end": "1072650"
  },
  {
    "text": "enters that information credit card information clicks a couple of places buy a few things checks out and leaves",
    "start": "1072650",
    "end": "1079190"
  },
  {
    "text": "emulate that experience and see where the application is mal performing so to",
    "start": "1079190",
    "end": "1085100"
  },
  {
    "text": "speak and if everything works great I'll tell you what you can do later to break it because you want to make sure if",
    "start": "1085100",
    "end": "1091039"
  },
  {
    "text": "everything was great that's good but you want to make sure you introduce errors you introduce issues because that's the",
    "start": "1091039",
    "end": "1096860"
  },
  {
    "text": "only way for you to find out the hard way or the easy way how how how to react",
    "start": "1096860",
    "end": "1103820"
  },
  {
    "text": "to those problems because if if your application works well and to end the day something goes wrong you have you're",
    "start": "1103820",
    "end": "1109250"
  },
  {
    "text": "going to be scrambling might as well just introduce it yourself and find out a good analogy that Netflix team uses",
    "start": "1109250",
    "end": "1117340"
  },
  {
    "text": "that kind of ties into what I just said is if you drive a car you know that you",
    "start": "1117340",
    "end": "1124309"
  },
  {
    "text": "have a spare tire right so if you have a problem with a with your tire you can just stop and change it but you don't",
    "start": "1124309",
    "end": "1130400"
  },
  {
    "text": "know you don't necessarily know if the tire is inflated you don't necessarily know if you have the tools or if they",
    "start": "1130400",
    "end": "1136250"
  },
  {
    "text": "are in the trunk someone removed them so if the tire goes flat you assume you have a flat tire well you have a spare",
    "start": "1136250",
    "end": "1142789"
  },
  {
    "text": "tire you go open the trunk and it's like whoops my backup is failed so make sure you introduce that failure punch a hole",
    "start": "1142789",
    "end": "1149870"
  },
  {
    "text": "in the flat tire in the tire and go find out if you have a spare tire monitoring",
    "start": "1149870",
    "end": "1157539"
  },
  {
    "start": "1155000",
    "end": "1155000"
  },
  {
    "text": "continuous monitoring with circuit breakers how many of you are familiar with the concept of circuit breakers",
    "start": "1157539",
    "end": "1163690"
  },
  {
    "text": "okay so this is a good concept to to adopt it is somewhat similar to load",
    "start": "1163690",
    "end": "1169580"
  },
  {
    "text": "balancing so if you if you flip this diagram clockwise think of it think of",
    "start": "1169580",
    "end": "1176480"
  },
  {
    "text": "the API is kind of a load balancer right sending loads to different areas so on the right there we have think of it",
    "start": "1176480",
    "end": "1182450"
  },
  {
    "text": "again same example as e-commerce customers like all the customers enter the data the order forms and invoices",
    "start": "1182450",
    "end": "1189049"
  },
  {
    "text": "right and you have API calls coming from clients everything is working fine now",
    "start": "1189049",
    "end": "1194780"
  },
  {
    "text": "all of a sudden the invoice section of your system experiencing latency so what do you do",
    "start": "1194780",
    "end": "1201610"
  },
  {
    "text": "if you don't imply or if you don't apply circuit breaker methodology this can be",
    "start": "1201610",
    "end": "1207290"
  },
  {
    "text": "painful for your consumers so with circuit breakers what will happen is and there are tools I can share with you and",
    "start": "1207290",
    "end": "1213050"
  },
  {
    "text": "third-party tools that you can leverage to help you with circuit breaking methodology it helps you with error",
    "start": "1213050",
    "end": "1219620"
  },
  {
    "text": "handling and rerouting of traffic so then the traffic doesn't keep going to",
    "start": "1219620",
    "end": "1225380"
  },
  {
    "text": "the you know areas that is experiencing high latency sorry so reduces error rate",
    "start": "1225380",
    "end": "1234290"
  },
  {
    "text": "and then he'll eventually mitigate the issue some of the tools that you can",
    "start": "1234290",
    "end": "1240950"
  },
  {
    "text": "leverage with with excuse me sorry yes",
    "start": "1240950",
    "end": "1249920"
  },
  {
    "text": "so service service mesh and linker D have you guys heard of linker D yeah so",
    "start": "1249920",
    "end": "1255710"
  },
  {
    "text": "linker D is a tool that you can look up that can help you with auto discovery",
    "start": "1255710",
    "end": "1260800"
  },
  {
    "text": "rerouting and an mitigation when it comes to circuit breaking technology or",
    "start": "1260800",
    "end": "1266390"
  },
  {
    "text": "methodology and this diagram really illustrates kind of circuit breaker as a whole how it works when everything is",
    "start": "1266390",
    "end": "1273620"
  },
  {
    "text": "successful you have a clean loop right from open to closed and if not it goes",
    "start": "1273620",
    "end": "1280820"
  },
  {
    "text": "back and keeps trying so make sure you have make sure you leverage like I said",
    "start": "1280820",
    "end": "1286040"
  },
  {
    "text": "linker D because it's a transparent system the kind of allows you to do auto",
    "start": "1286040",
    "end": "1291680"
  },
  {
    "text": "discovery rerouting right because if you have for example micro services and",
    "start": "1291680",
    "end": "1297170"
  },
  {
    "text": "invoices is in one section and then that section is getting hit a lot and you experience in high latency a linker D",
    "start": "1297170",
    "end": "1304490"
  },
  {
    "text": "can help you kind of rewrapped to a different container or application now",
    "start": "1304490",
    "end": "1312470"
  },
  {
    "text": "we move on to login so we log in what's important here is to think long term so",
    "start": "1312470",
    "end": "1317930"
  },
  {
    "start": "1314000",
    "end": "1314000"
  },
  {
    "text": "what I mean by that is try to adopt a framework that's going to help you in",
    "start": "1317930",
    "end": "1324140"
  },
  {
    "text": "the future JSON is a good format for login and reason why we say that is because it's",
    "start": "1324140",
    "end": "1330980"
  },
  {
    "text": "compatible with most party applications out there to help you if you're going to do data analysis or",
    "start": "1330980",
    "end": "1337150"
  },
  {
    "text": "deep analysis or any kind of business analysis with it add contacts your login",
    "start": "1337150",
    "end": "1343690"
  },
  {
    "text": "statements so it makes sense log behaviors and errors and consider",
    "start": "1343690",
    "end": "1349300"
  },
  {
    "text": "how analytics will be used with your data again that ties into that unify",
    "start": "1349300",
    "end": "1354700"
  },
  {
    "text": "unify your logs if you can as long as you as much as you can to a framework or",
    "start": "1354700",
    "end": "1359860"
  },
  {
    "text": "a language that can work across platforms and JSON we found that JSON is one of them another thing that you can",
    "start": "1359860",
    "end": "1368170"
  },
  {
    "text": "do have you guys any of you using data leak or no what a derelict is no okay so",
    "start": "1368170",
    "end": "1374320"
  },
  {
    "text": "derelict is basically an aggregate of lots of different data it can be logs",
    "start": "1374320",
    "end": "1380760"
  },
  {
    "text": "predominantly logs but it can be any kind of data but the trick with that is the reason why it's called derelict is",
    "start": "1380760",
    "end": "1386320"
  },
  {
    "text": "all these streams come in different formats so you have JSON CSV text you",
    "start": "1386320",
    "end": "1392110"
  },
  {
    "text": "know a all kinds and then we have customers that want to run queries against that but the format is all",
    "start": "1392110",
    "end": "1398170"
  },
  {
    "text": "different so the idea of derelict is to be able to take all those different formats into a derelict and then run",
    "start": "1398170",
    "end": "1404950"
  },
  {
    "text": "queries against those that data the data set there is a tool with AWS it was",
    "start": "1404950",
    "end": "1413080"
  },
  {
    "text": "launched earlier this year called Amazon Athena you guys familiar with Athena yeah so Athena does exactly that so Tina",
    "start": "1413080",
    "end": "1419410"
  },
  {
    "text": "allows you to run interactive sequel queries against s3 bucket which is",
    "start": "1419410",
    "end": "1424570"
  },
  {
    "text": "derelict regardless of the format so you can use JSON CSV text file all kinds of",
    "start": "1424570",
    "end": "1430480"
  },
  {
    "text": "formats but in the long term thinking for the purpose of this conversation try to pick a language that will help you",
    "start": "1430480",
    "end": "1437890"
  },
  {
    "text": "look down the road UTC timestamp some",
    "start": "1437890",
    "end": "1443530"
  },
  {
    "text": "people think or sometimes just skip this part right or think like oh who cares",
    "start": "1443530",
    "end": "1448600"
  },
  {
    "text": "right I actually should because the argument is well were they were our",
    "start": "1448600",
    "end": "1453730"
  },
  {
    "text": "environment is deployed in u.s. East why should I care about West or UTC you",
    "start": "1453730",
    "end": "1459580"
  },
  {
    "text": "would care about it because if you grow and you start having customers or even another pod or",
    "start": "1459580",
    "end": "1465720"
  },
  {
    "text": "deployments in Europe or a pack or even us east and west then you're gonna have to do conversion and it's not fun if you",
    "start": "1465720",
    "end": "1473130"
  },
  {
    "text": "have logs coming from all different places and you have to do time conversion it's gonna be very painful so unify your time stamp into UTC",
    "start": "1473130",
    "end": "1480510"
  },
  {
    "text": "because then it's UTC - right or UTC + and you know exactly what you need to do",
    "start": "1480510",
    "end": "1486770"
  },
  {
    "text": "it helps you a lot especially when you start going global another thing that we",
    "start": "1486770",
    "end": "1492060"
  },
  {
    "text": "found that there was very interesting through a customer is getting rid of the sub sub second field if you don't have a",
    "start": "1492060",
    "end": "1499410"
  },
  {
    "text": "need for sub second field just eliminate it it helps with a couple of things performance when you querying against",
    "start": "1499410",
    "end": "1506070"
  },
  {
    "text": "lots of data and it all has the sub second field it takes longer right so get rid of sub second if you don't need",
    "start": "1506070",
    "end": "1512640"
  },
  {
    "text": "it because mostly you would need obviously date/time minute and second sub second is not that relevant but if",
    "start": "1512640",
    "end": "1520500"
  },
  {
    "text": "you get rid of that you will help you with performance and cost and a lot of other things again continuous on log in",
    "start": "1520500",
    "end": "1529680"
  },
  {
    "text": "individual transaction on IDs so what I like to highlight here is the level of",
    "start": "1529680",
    "end": "1535050"
  },
  {
    "text": "visibility you should always expect from your application so in order for you to",
    "start": "1535050",
    "end": "1540150"
  },
  {
    "text": "troubleshoot or to get to root cause analysis you have to have a good x-ray",
    "start": "1540150",
    "end": "1545550"
  },
  {
    "text": "vision so to speak of the entire process or life of packets or speak like your",
    "start": "1545550",
    "end": "1550650"
  },
  {
    "text": "application you should have end-to-end visibility so right here we'd like to",
    "start": "1550650",
    "end": "1555960"
  },
  {
    "text": "tell you that you should have a session ID logged right that generated the error you should have who the user is right",
    "start": "1555960",
    "end": "1563400"
  },
  {
    "text": "that encountered the error you should log the user location and the application right user location in the",
    "start": "1563400",
    "end": "1571380"
  },
  {
    "text": "application the idea of the transaction of product that caused the error and last but not least just be careful if",
    "start": "1571380",
    "end": "1578670"
  },
  {
    "text": "you're dealing with pH high data right health personal health information or",
    "start": "1578670",
    "end": "1583800"
  },
  {
    "text": "PCI you want to make sure you consult with your InfoSec team to make sure a is this type of data we can log or not",
    "start": "1583800",
    "end": "1590490"
  },
  {
    "text": "that's the caveat but in order for you to do root cause analysis on anything you have",
    "start": "1590490",
    "end": "1596150"
  },
  {
    "text": "to log all of these elements to have a good vision again I want to tie this up",
    "start": "1596150",
    "end": "1601700"
  },
  {
    "text": "to AWS x-ray if you guys heard of x-ray but x-ray is a tool that allows you to",
    "start": "1601700",
    "end": "1607760"
  },
  {
    "text": "do exactly this right and to end x-ray vision of your into off the entire",
    "start": "1607760",
    "end": "1614330"
  },
  {
    "text": "cycle right when a user logs in what happens what happens after that what happens after that at the end so you can",
    "start": "1614330",
    "end": "1619810"
  },
  {
    "text": "kind of laser focus on what you need to troubleshoot documentation of your code",
    "start": "1619810",
    "end": "1628510"
  },
  {
    "start": "1626000",
    "end": "1626000"
  },
  {
    "text": "again this is another very very important element sometimes it can be",
    "start": "1628510",
    "end": "1633770"
  },
  {
    "text": "over overseen or kind of pushed to the bottom of the list but try to adopt this as early as you can the more work you do",
    "start": "1633770",
    "end": "1640790"
  },
  {
    "text": "now the less you can have to do later and it's actually easier to to adopt this early then later I'm sure for those",
    "start": "1640790",
    "end": "1649370"
  },
  {
    "text": "of you who are coders will agree with all of this right make sure your documents what the code",
    "start": "1649370",
    "end": "1655880"
  },
  {
    "text": "does right first of all readme file within your code have good comments right I used to be developer in my past",
    "start": "1655880",
    "end": "1663470"
  },
  {
    "text": "life and it drove me nuts when there was poor documentation or comments in the code like you have no idea you know I",
    "start": "1663470",
    "end": "1670460"
  },
  {
    "text": "mean you know what's going on but there's like all kinds of redundant stuff so make sure your code is clean and it's well commented instructions on",
    "start": "1670460",
    "end": "1678440"
  },
  {
    "text": "how to install it and run it what it does how to stop it start it kill it also dependencies right when you stop",
    "start": "1678440",
    "end": "1685340"
  },
  {
    "text": "this code what else can happen what else is going to be impacted right when you start it what other dependencies does it",
    "start": "1685340",
    "end": "1692000"
  },
  {
    "text": "have on other tools or other codes so make sure that's all documented how to configure it how to troubleshoot it and",
    "start": "1692000",
    "end": "1697340"
  },
  {
    "text": "then what metrics are available in the dashboard for that particular code this",
    "start": "1697340",
    "end": "1702440"
  },
  {
    "text": "is going to be very very helpful because when you start to grow let's say today you're three three people or three",
    "start": "1702440",
    "end": "1708770"
  },
  {
    "text": "person team right by happy half of the year or next year you double your six or",
    "start": "1708770",
    "end": "1714230"
  },
  {
    "text": "eight right then instead of going and doing a one-hour session with each new developer you don't really have to you",
    "start": "1714230",
    "end": "1722180"
  },
  {
    "text": "hand them the code self-sufficient they look at it they can hit the ground so this is a good investment early then",
    "start": "1722180",
    "end": "1728790"
  },
  {
    "text": "later if you do this later you're gonna pay the price because now you have to go back words in time and what was this",
    "start": "1728790",
    "end": "1735090"
  },
  {
    "text": "again what you know what dependencies do we have here etc so all we're going to",
    "start": "1735090",
    "end": "1740610"
  },
  {
    "text": "talk about to the production of this is all things that you should do before you you jump into production now we're going",
    "start": "1740610",
    "end": "1748170"
  },
  {
    "text": "to move into our lerton so mean dog so with the lerton the rule of thumb that",
    "start": "1748170",
    "end": "1754380"
  },
  {
    "start": "1749000",
    "end": "1749000"
  },
  {
    "text": "you should think about is that if you can define a run book that should be",
    "start": "1754380",
    "end": "1761130"
  },
  {
    "text": "automated if you have a run book of a process that's that you should take that and basically automate it because the",
    "start": "1761130",
    "end": "1766860"
  },
  {
    "text": "run book is steps right do this then do this tender this tender this so think about automating as much as you can",
    "start": "1766860",
    "end": "1773070"
  },
  {
    "text": "especially level one operation stuff there's a lot of tools again there are",
    "start": "1773070",
    "end": "1778830"
  },
  {
    "text": "tools that are native to AWS like cloud watch but there is a really good tool called monitor that helps with all this",
    "start": "1778830",
    "end": "1784110"
  },
  {
    "text": "level well bless you all this level one kind of monitoring what you want to get system alerts CPU things like that right",
    "start": "1784110",
    "end": "1792300"
  },
  {
    "text": "automate just automate don't even you know wait for someone to write a code or cron or anything it's available these",
    "start": "1792300",
    "end": "1798990"
  },
  {
    "text": "are tools that are available to you the other thing that I'd like to highlight is you guys familiar with the ec2",
    "start": "1798990",
    "end": "1805380"
  },
  {
    "text": "autorecover easy to auto recover yeah no yes did you say yes yeah okay yeah so",
    "start": "1805380",
    "end": "1813060"
  },
  {
    "text": "easy to auto recovery is a really good tool to look into and this is a tool that comes with with you know AWS your",
    "start": "1813060",
    "end": "1820710"
  },
  {
    "text": "AWS account let me just skip right to it Auto recovery and what this does this",
    "start": "1820710",
    "end": "1826470"
  },
  {
    "text": "tool does is that allows you to automatically move your I'm a machine",
    "start": "1826470",
    "end": "1834960"
  },
  {
    "text": "image Amazon machine image or ec2 instance from a physical host or another",
    "start": "1834960",
    "end": "1840900"
  },
  {
    "text": "in case of an event unlikely event so what this does is if there was an issue",
    "start": "1840900",
    "end": "1846360"
  },
  {
    "text": "right there's a status status status check failed system if there is an issue with the underlying host so we have a",
    "start": "1846360",
    "end": "1854190"
  },
  {
    "text": "lot of sister checks behind the scenes that look for power failure application level failure",
    "start": "1854190",
    "end": "1860460"
  },
  {
    "text": "on the host Network failure and many other things when we notice those you",
    "start": "1860460",
    "end": "1866789"
  },
  {
    "text": "can automatically say hey move my my virtual machine to another physical host",
    "start": "1866789",
    "end": "1873659"
  },
  {
    "text": "and that can happen automatically now the beauty is it not it just it doesn't just move your machine but it moves your",
    "start": "1873659",
    "end": "1879870"
  },
  {
    "text": "machine it moves its ID it moves its private IP public IP if you have given",
    "start": "1879870",
    "end": "1885090"
  },
  {
    "text": "it one an EB s storage so it moves all of its identities with it leverage this",
    "start": "1885090",
    "end": "1891960"
  },
  {
    "text": "because it's gonna save you a lot of time if things fail you know like we said at the beginning takes fail all the",
    "start": "1891960",
    "end": "1898140"
  },
  {
    "text": "time but if in the unlikely event a host has a glitch or an issue move your ec2",
    "start": "1898140",
    "end": "1904169"
  },
  {
    "text": "instance it moves all its of its identities with it and it's all automatic you'll get a notification you're aware your team will go in and",
    "start": "1904169",
    "end": "1911190"
  },
  {
    "text": "make sure your application is actually launched everything is good but at least you're not doing the heavy lifting of",
    "start": "1911190",
    "end": "1917039"
  },
  {
    "text": "figuring out why why is my ec2 instance not responsive and responding etc",
    "start": "1917039",
    "end": "1923750"
  },
  {
    "text": "leverage auto scaling which I mentioned earlier so auto scaling helps in a lot of ways",
    "start": "1924620",
    "end": "1930679"
  },
  {
    "text": "again you can set thresholds usage right CPU the reach is this much or this",
    "start": "1930679",
    "end": "1937500"
  },
  {
    "text": "percentage for this much time then lower you can also leverage auto scaling with",
    "start": "1937500",
    "end": "1945570"
  },
  {
    "text": "let's say you have an instance that's experienced in high CPU right the",
    "start": "1945570",
    "end": "1951510"
  },
  {
    "text": "assumption is like oh maybe we're getting a lot of requests now use auto scaling to handle the request but then",
    "start": "1951510",
    "end": "1957899"
  },
  {
    "text": "go back to that instance and look and see is it really are you really having a lot of users or it's just the instance",
    "start": "1957899",
    "end": "1964200"
  },
  {
    "text": "that's having issues or is it code sometimes we neglect code right we do we push a new version of code and then that",
    "start": "1964200",
    "end": "1970500"
  },
  {
    "text": "code does something funky and all of a sudden CPUs up but the users or the",
    "start": "1970500",
    "end": "1975779"
  },
  {
    "text": "number of requests you're having are the same didn't change so auto scaling will help you serve traffic but also give you",
    "start": "1975779",
    "end": "1982710"
  },
  {
    "text": "that flexibility to go back and mitigate and look at that instance and find out why you saw that spike",
    "start": "1982710",
    "end": "1990590"
  },
  {
    "text": "with alerting make sure you have proper eight escalation pads and alerts with",
    "start": "1991409",
    "end": "1998530"
  },
  {
    "text": "proper escalation pads you want to make sure that you have at least this is by",
    "start": "1998530",
    "end": "2004620"
  },
  {
    "text": "the way it so mean you have more than two people in a startup if you have two people they're all gonna be right there",
    "start": "2004620",
    "end": "2011070"
  },
  {
    "text": "they're gonna be the escalation they're gonna be everything but if you have more than two people a team then this is a best practice so you want to have a",
    "start": "2011070",
    "end": "2017789"
  },
  {
    "text": "primary person right there always gets page and who is the primary person is",
    "start": "2017789",
    "end": "2023010"
  },
  {
    "text": "most important so I'll tell you what we do at Amazon we adopt a culture of if you build it you fix it so if you build",
    "start": "2023010",
    "end": "2030299"
  },
  {
    "text": "something you're the one responsible for encore you're doing responsible to fix it not someone else so you want to make",
    "start": "2030299",
    "end": "2036600"
  },
  {
    "text": "sure you have a primary person preferably two because oftentimes the",
    "start": "2036600",
    "end": "2041850"
  },
  {
    "text": "person on call just happens to be in an area where it's dead in terms of signal or in the basement and then they don't",
    "start": "2041850",
    "end": "2048750"
  },
  {
    "text": "get the call and then it stops there right and then you have an impact so make sure it's two people and then after",
    "start": "2048750",
    "end": "2056158"
  },
  {
    "text": "that make sure you set up an auto escalation every ten minutes if there is no action taken it should escalate to",
    "start": "2056159",
    "end": "2063270"
  },
  {
    "text": "the secondary level and if after that it should hear a team and after that it should go to management and this should",
    "start": "2063270",
    "end": "2068550"
  },
  {
    "text": "be an automated process I give you an example in my past life I used to work",
    "start": "2068550",
    "end": "2073770"
  },
  {
    "text": "in a kind of a stock rock type scenario and we had a unified kind of pane of",
    "start": "2073770",
    "end": "2081300"
  },
  {
    "text": "glass or speak for alerts it was very very highly automated and it lessened a",
    "start": "2081300",
    "end": "2087148"
  },
  {
    "text": "chatter it lessened chat it lessened talk it less than all of that why because when there was an event with an",
    "start": "2087149",
    "end": "2092730"
  },
  {
    "text": "application or infrastructure first it showed and it shows severity it gives",
    "start": "2092730",
    "end": "2098250"
  },
  {
    "text": "you all the details IP source everything then we had as Network and security",
    "start": "2098250",
    "end": "2103650"
  },
  {
    "text": "engineers we had an SLA of five minutes to own it so within five minutes somebody from the team has to own it so",
    "start": "2103650",
    "end": "2109530"
  },
  {
    "text": "once you own it then everybody in the team no matter where they are because we were global they know Yazeed owned this one so it's good then",
    "start": "2109530",
    "end": "2116940"
  },
  {
    "text": "after you own it you have another SLA to resolve it and everything was automated in the sense of if it's not resolved",
    "start": "2116940",
    "end": "2122940"
  },
  {
    "text": "within specific period of time it escalates it goes red and it moves too you know team that",
    "start": "2122940",
    "end": "2128530"
  },
  {
    "text": "manager etc so adopt some of those methodologies again there are lots of open-source tools out there where you",
    "start": "2128530",
    "end": "2135700"
  },
  {
    "text": "have a portal that aggregates all of your which my colleague earlier talks about log aggregation but this is more",
    "start": "2135700",
    "end": "2142300"
  },
  {
    "text": "alerting I will get sorry or alerts and classify them right is the website down",
    "start": "2142300",
    "end": "2148300"
  },
  {
    "text": "is the payment gateway down is someone experiencing low latency that might be",
    "start": "2148300",
    "end": "2153520"
  },
  {
    "text": "kind of a low severity type incident so",
    "start": "2153520",
    "end": "2158619"
  },
  {
    "text": "auto escalate wins issues are not technology so as I mentioned if you",
    "start": "2158619",
    "end": "2163720"
  },
  {
    "text": "don't own the issue then it should Auto escalate after ten minutes right so you don't need to email a team and say hey",
    "start": "2163720",
    "end": "2169450"
  },
  {
    "text": "are you on this are you working on this it's just centralized to that earlier",
    "start": "2169450",
    "end": "2178720"
  },
  {
    "start": "2175000",
    "end": "2175000"
  },
  {
    "text": "point that I just mentioned that what we adapted AWS so developers should own the",
    "start": "2178720",
    "end": "2186250"
  },
  {
    "text": "burden of fixing the code they built right you build it you fix it so what typically what we see is",
    "start": "2186250",
    "end": "2191500"
  },
  {
    "text": "whenever we know this excuse me the bad application code for example that it you",
    "start": "2191500",
    "end": "2197560"
  },
  {
    "text": "know trigger is a 40% increase in CPU the easy way out is throw more resources",
    "start": "2197560",
    "end": "2203829"
  },
  {
    "text": "at it so short term fix is you throw more capacity and then problem solved there are no problem not really the",
    "start": "2203829",
    "end": "2210579"
  },
  {
    "text": "problem is you need to go back and look at the code and find out root cause why is it you know bringing that 40% CPU and",
    "start": "2210579",
    "end": "2219550"
  },
  {
    "text": "then fix it by you know doing root cause analysis and finding out why so capacity",
    "start": "2219550",
    "end": "2226839"
  },
  {
    "text": "is only short-term fix long term fixes root cause and find out why the code is acting that way now",
    "start": "2226839",
    "end": "2234609"
  },
  {
    "text": "we're gonna move on to service level agreements so service level agreement it's kind of a big word but we'll go",
    "start": "2234609",
    "end": "2241810"
  },
  {
    "start": "2240000",
    "end": "2240000"
  },
  {
    "text": "ahead and kind of walk you through methodology and how you should think about service level agreements so the",
    "start": "2241810",
    "end": "2247720"
  },
  {
    "text": "way you should think about the server levels agreement is not by a blanket statement so you shouldn't think okay",
    "start": "2247720",
    "end": "2253089"
  },
  {
    "text": "my entire stack should just be up all the time you it's good to think that way but when you",
    "start": "2253089",
    "end": "2258309"
  },
  {
    "text": "talk in in in depth and detail you should break that down into again classify right so I am going to for my",
    "start": "2258309",
    "end": "2267069"
  },
  {
    "text": "search portion of my website for example I'm going to expect 99.99% of the time",
    "start": "2267069",
    "end": "2273009"
  },
  {
    "text": "to be up for the cart that's the highest which is the shopping cart I need you know five nines and for",
    "start": "2273009",
    "end": "2280839"
  },
  {
    "text": "the avatars which is where my customers can go and pick an avatar while the shopping I'm just gonna do three nines",
    "start": "2280839",
    "end": "2286209"
  },
  {
    "text": "so classify your workload in relation to its importance right the more important",
    "start": "2286209",
    "end": "2292359"
  },
  {
    "text": "the workload is and critical it is the higher the SLA so try to get away from a",
    "start": "2292359",
    "end": "2298059"
  },
  {
    "text": "blanket SLA into service level SLA by specific service so the reason why I say",
    "start": "2298059",
    "end": "2305259"
  },
  {
    "text": "this because it's it can be very very very expensive in in human resources and",
    "start": "2305259",
    "end": "2310469"
  },
  {
    "text": "financially to have a blanket SLA for everybody if we just want to say I want five nines for everything it's doable",
    "start": "2310469",
    "end": "2316239"
  },
  {
    "text": "but it's gonna take you a lot so try to break that down by criticality what's",
    "start": "2316239",
    "end": "2321489"
  },
  {
    "text": "critical I'm gonna give it this mini as this mini nines less critical this mini nines etc so on",
    "start": "2321489",
    "end": "2327519"
  },
  {
    "text": "and so forth now this is important when using micro services you know for teams",
    "start": "2327519",
    "end": "2333400"
  },
  {
    "text": "to reliably build dependencies on your service obviously when they build when your team do build the service in micro",
    "start": "2333400",
    "end": "2339519"
  },
  {
    "text": "service environment they already know what the SLA is are for the cart so if whatever they're building isn't",
    "start": "2339519",
    "end": "2344739"
  },
  {
    "text": "going to be in the cart or part of the cart they know we're expecting five nines so that architecture needs to evolve around",
    "start": "2344739",
    "end": "2351969"
  },
  {
    "text": "five nine availability but if they're building an avatar then they know it's only three nine so we shouldn't put too",
    "start": "2351969",
    "end": "2359289"
  },
  {
    "text": "much resource ahead of it so this helps with one efficiency it helps with",
    "start": "2359289",
    "end": "2366329"
  },
  {
    "text": "resiliency for in relation to importance of your system and it helps with the",
    "start": "2366329",
    "end": "2372729"
  },
  {
    "text": "with financial so you're not spending so much money just building this giant",
    "start": "2372729",
    "end": "2378189"
  },
  {
    "text": "castle what you just need you know maybe a house and SLA can also be tricky in",
    "start": "2378189",
    "end": "2386229"
  },
  {
    "text": "the sense of you know how do you achieve how do you achieve 1-9 how do you have",
    "start": "2386229",
    "end": "2392110"
  },
  {
    "text": "four nines and I can show you a little table that can help with identifying the",
    "start": "2392110",
    "end": "2400110"
  },
  {
    "text": "the downtime you know you know how to achieve a 1:9 all the way to how to",
    "start": "2400260",
    "end": "2405700"
  },
  {
    "text": "achieve six nines but really the way you want to look at this table is you need to categorize the first the applications",
    "start": "2405700",
    "end": "2413080"
  },
  {
    "start": "2408000",
    "end": "2408000"
  },
  {
    "text": "then you need to look at the impact and measure that so what I mean by that is you want to look at I'm going to go back",
    "start": "2413080",
    "end": "2419890"
  },
  {
    "text": "to that the Xperia loved a shopping cart if the shopping cart is down what does",
    "start": "2419890",
    "end": "2425800"
  },
  {
    "text": "that mean to my customer so that means it means they can't buy anything okay now how do you translate that into",
    "start": "2425800",
    "end": "2431020"
  },
  {
    "text": "business if you can't earn if you take can take that and map it into a business impact and if I say my users or my",
    "start": "2431020",
    "end": "2438460"
  },
  {
    "text": "shopping cart can be down for two and a half hours right or 2.4 hours what is",
    "start": "2438460",
    "end": "2443560"
  },
  {
    "text": "the business impact right to your business if you're down two and a half hours nobody can buy anything so that's",
    "start": "2443560",
    "end": "2450040"
  },
  {
    "text": "how you should think you start from there and work backwards now if I look at the other extreme which is Avatar",
    "start": "2450040",
    "end": "2456550"
  },
  {
    "text": "what does it mean if my users can't pick an avatar for two and a half hours they",
    "start": "2456550",
    "end": "2462220"
  },
  {
    "text": "just can't do it how does that impact the business I'd say not so much they",
    "start": "2462220",
    "end": "2467530"
  },
  {
    "text": "might get some angry people here and there but they can still buy but the buy-in is very important if they can't",
    "start": "2467530",
    "end": "2474160"
  },
  {
    "text": "buy you're losing business so you wanna you want to classify your applications in that fashion and work backwards",
    "start": "2474160",
    "end": "2480610"
  },
  {
    "text": "so I actually double check the math here it's actually correct so I I don't like",
    "start": "2480610",
    "end": "2487300"
  },
  {
    "text": "slices that have numbers that I didn't run by myself so I was like I'm gonna double check so the math is actually its",
    "start": "2487300",
    "end": "2492580"
  },
  {
    "text": "parent so this is what you need to do for two nines you're gonna have an uptime of 99 percent your total downtime",
    "start": "2492580",
    "end": "2499990"
  },
  {
    "text": "per year is three and three point six five days downtime per day is fourteen minutes now you want to ask yourself is",
    "start": "2499990",
    "end": "2506860"
  },
  {
    "text": "14 minutes acceptable and if the answer is yes great if no how can we reduce that and what does it take to reduce",
    "start": "2506860",
    "end": "2513190"
  },
  {
    "text": "that this slides by the way will be",
    "start": "2513190",
    "end": "2518400"
  },
  {
    "text": "after you do a survey you don't need to take pictures or anything so you can have this this is very important so load",
    "start": "2518400",
    "end": "2526740"
  },
  {
    "start": "2525000",
    "end": "2525000"
  },
  {
    "text": "testing so now we're going to talk about load test in understanding your limits so clearly before you go life you want",
    "start": "2526740",
    "end": "2532380"
  },
  {
    "text": "to make sure your load test right make sure you put heavy load on your application to make sure it what your",
    "start": "2532380",
    "end": "2538049"
  },
  {
    "text": "braking points are or not is it bandwidth is it throughput is it out of scale what do I need to do know your",
    "start": "2538049",
    "end": "2546119"
  },
  {
    "text": "bare minimum which is what we talked about at the beginning the steady state what is the steady state if I launch my",
    "start": "2546119",
    "end": "2552240"
  },
  {
    "text": "application today right normal business I need to know what is the minimum to just run my application another common",
    "start": "2552240",
    "end": "2559890"
  },
  {
    "text": "term for this is how to keep the lights on right just the minimum I want to keep the website up and running just normal",
    "start": "2559890",
    "end": "2566640"
  },
  {
    "text": "traffic you want to know what that minimum is and it becomes your baseline and then you build on top of that know",
    "start": "2566640",
    "end": "2573569"
  },
  {
    "text": "your maximum throughput that you can handle or your architecture can handle because once you build your environment there's gonna have it's gonna have these",
    "start": "2573569",
    "end": "2580079"
  },
  {
    "text": "minimums in maximum so know your limits when is the threshold where I'm gonna need to start thinking about it",
    "start": "2580079",
    "end": "2586319"
  },
  {
    "text": "auto-scaling where is the threshold where I'm gonna start thinking about adding some more micro services when is",
    "start": "2586319",
    "end": "2592440"
  },
  {
    "text": "my trash hold where I'm gonna need to launch new database cluster so you need",
    "start": "2592440",
    "end": "2597960"
  },
  {
    "text": "to know those limits and then you set alerts on those limits so you can be notified ahead of time because we can",
    "start": "2597960",
    "end": "2605549"
  },
  {
    "text": "somehow know when we expect large traffic if there is some kind of acquisition or maybe you're preparing large marketing events but really if you",
    "start": "2605549",
    "end": "2613740"
  },
  {
    "text": "look at it you're not sure once you're launch of products you just wait right it might launch you might go you know",
    "start": "2613740",
    "end": "2620339"
  },
  {
    "text": "viral or it might not you want to know what that limit is and",
    "start": "2620339",
    "end": "2625730"
  },
  {
    "text": "calculate your throughput per instance ratio so you can accurately auto properly auto scale so this is kind of",
    "start": "2625730",
    "end": "2631950"
  },
  {
    "text": "advanced level of auto scaling instead of auto scaling by a specific number of instances you increase you auto scale in",
    "start": "2631950",
    "end": "2639930"
  },
  {
    "text": "a percentage fashion right instead of saying add two instances you say I want 10% more right so that way you're very",
    "start": "2639930",
    "end": "2648509"
  },
  {
    "text": "very lean but you can only do that if you know exactly what you're a trooper to",
    "start": "2648509",
    "end": "2654730"
  },
  {
    "text": "instance ratio is you need to do monitoring have good visibility right a",
    "start": "2654730",
    "end": "2659950"
  },
  {
    "text": "lot of testing in order to do this so",
    "start": "2659950",
    "end": "2665740"
  },
  {
    "text": "again this is what we just talked about increasing or taking action or using",
    "start": "2665740",
    "end": "2670840"
  },
  {
    "text": "auto scaling on a percentage based vs. number of instances again the the",
    "start": "2670840",
    "end": "2682390"
  },
  {
    "text": "performance baseline for the future always think whenever you launch code in this example actually talks about",
    "start": "2682390",
    "end": "2688180"
  },
  {
    "text": "version 1 of this code and we moved from version one to version 15 so your code",
    "start": "2688180",
    "end": "2693520"
  },
  {
    "text": "evolves with time right your your evolve in your code you're sending patches you're just adding features as your code",
    "start": "2693520",
    "end": "2701170"
  },
  {
    "text": "evolves so does the infrastructure running it right the underlying infrastructure so make sure you understand the relationship there as",
    "start": "2701170",
    "end": "2707530"
  },
  {
    "text": "your code evolves what does it mean what are we increasing why do we need to",
    "start": "2707530",
    "end": "2712660"
  },
  {
    "text": "increase and in certain instances you might actually decrease right instead of having say a cluster of large instances",
    "start": "2712660",
    "end": "2720160"
  },
  {
    "text": "for V 1 V 14 because we did a lot of tweaking right on the application and",
    "start": "2720160",
    "end": "2726040"
  },
  {
    "text": "modernized it we're going to use multiple medium-sized instances so think",
    "start": "2726040",
    "end": "2731830"
  },
  {
    "text": "about that think about how code evolvement impacts the underlying",
    "start": "2731830",
    "end": "2738520"
  },
  {
    "text": "infrastructure right are we just growing or can we consolidate shrink or can we decouple further so that that kind of mindset so",
    "start": "2738520",
    "end": "2747340"
  },
  {
    "text": "this example he talked about how we see sixty three point five eight percent increase in performance from V 1 to V 14",
    "start": "2747340",
    "end": "2753880"
  },
  {
    "text": "and this directly correlates to the infrastructure cost you add you as you",
    "start": "2753880",
    "end": "2759990"
  },
  {
    "text": "modify your code so does the the underlined infrastructure now we move on",
    "start": "2759990",
    "end": "2766840"
  },
  {
    "text": "to testing so with testing you want to",
    "start": "2766840",
    "end": "2773920"
  },
  {
    "start": "2771000",
    "end": "2771000"
  },
  {
    "text": "kind of I hope I'm not telling you anything you don't already know here so",
    "start": "2773920",
    "end": "2779470"
  },
  {
    "text": "with testing you want to follow the kind of foundation about testing which is you plan your",
    "start": "2779470",
    "end": "2786069"
  },
  {
    "text": "code you build continuous testing release deploy operate monitor rinse and repeat so you",
    "start": "2786069",
    "end": "2792069"
  },
  {
    "text": "kind of follow that cycle so you want to build confidence in your code right before being released allows you to test",
    "start": "2792069",
    "end": "2800430"
  },
  {
    "text": "more of your application in less time when you arm it right so you're not doing everything manually and then",
    "start": "2800430",
    "end": "2806970"
  },
  {
    "text": "manual testing prone error prawns is removed so again back to that human intervention remove human intervention",
    "start": "2806970",
    "end": "2813849"
  },
  {
    "text": "as much as possible and just automate automate automate and again plenty of",
    "start": "2813849",
    "end": "2819609"
  },
  {
    "text": "tools out there AWS you know code pipelines the ICD all the C ICD stuff",
    "start": "2819609",
    "end": "2825369"
  },
  {
    "text": "called pipeline code deploy code build and plenty of other open-source tools",
    "start": "2825369",
    "end": "2830950"
  },
  {
    "text": "that you can leverage to help you automate and remove human involvement because the less you have to do manually",
    "start": "2830950",
    "end": "2836829"
  },
  {
    "text": "the less error-prone your environment is just driven deployment so this talks",
    "start": "2836829",
    "end": "2844089"
  },
  {
    "text": "about build tests you know develop code",
    "start": "2844089",
    "end": "2849099"
  },
  {
    "text": "so so that it passes and then refactor optimized code so kind of a similar cycle right rinse and repeat so always",
    "start": "2849099",
    "end": "2856599"
  },
  {
    "text": "build tests first look at those failures reiterate develop your code obviously with the intent that",
    "start": "2856599",
    "end": "2863260"
  },
  {
    "text": "it it's ready for production put load tests on it and then rinse and repeat rinse and repeat automation is really",
    "start": "2863260",
    "end": "2870099"
  },
  {
    "text": "the takeaway here automation automated deployment strategies so with deployment",
    "start": "2870099",
    "end": "2875650"
  },
  {
    "text": "strategies you want to think about how you can be less disruptive right so how",
    "start": "2875650",
    "end": "2881440"
  },
  {
    "text": "many of you are familiar or are using canary or blue-green deployment are you",
    "start": "2881440",
    "end": "2888970"
  },
  {
    "text": "familiar with Bluegreen deployment anyone know okay so these are",
    "start": "2888970",
    "end": "2895470"
  },
  {
    "text": "methodologies you probably want to look into and they help you with code",
    "start": "2895470",
    "end": "2901960"
  },
  {
    "text": "deployment and less impact right so when you say you have a v1 code that's up and",
    "start": "2901960",
    "end": "2908619"
  },
  {
    "text": "running and then you have v2 coming up so how do you do that without impacting users so there's a lot of techniques you",
    "start": "2908619",
    "end": "2913660"
  },
  {
    "text": "can use canary is one of them blue/green deployment is one where you can lunch and will dig deeper into into",
    "start": "2913660",
    "end": "2920580"
  },
  {
    "text": "them in the next couple slides but really the the premises here is that you can deploy a new version of code with",
    "start": "2920580",
    "end": "2927210"
  },
  {
    "text": "less impact most importantly you can revert it sometimes you push V to something breaks what do you do right",
    "start": "2927210",
    "end": "2933720"
  },
  {
    "text": "you want to go back so so keep yeah so",
    "start": "2933720",
    "end": "2940590"
  },
  {
    "text": "this talks about kind of think of it think of code deployments as kind of a database because you don't want to",
    "start": "2940590",
    "end": "2945960"
  },
  {
    "text": "interrupt you know the flow of your work so in a database world for example you",
    "start": "2945960",
    "end": "2951630"
  },
  {
    "text": "know you don't you don't remove columns right you remove column it's a big problem in the database",
    "start": "2951630",
    "end": "2956760"
  },
  {
    "text": "you only make additions to reduce risk but let me jump into the canary poll and",
    "start": "2956760",
    "end": "2961980"
  },
  {
    "text": "kind of blue-green deployment so here as you can see we have a load balancer we",
    "start": "2961980",
    "end": "2967440"
  },
  {
    "text": "have version 1 of code right and version 2 so what we do is we launch version 2",
    "start": "2967440",
    "end": "2974430"
  },
  {
    "text": "right in its own little cluster and version 1 is still working up and running no problem and then on the load",
    "start": "2974430",
    "end": "2980340"
  },
  {
    "text": "balancer we set a waiting condition where we say send 90% of traffic to v1",
    "start": "2980340",
    "end": "2985950"
  },
  {
    "text": "and 10% to veto why we do that because we want to one not impact our entire",
    "start": "2985950",
    "end": "2992070"
  },
  {
    "text": "user base and by the way we're just using these numbers as an example you can do 95 and 5 you can do 80 in 20 but",
    "start": "2992070",
    "end": "2998400"
  },
  {
    "text": "majority has to say in v1 then once you run the 10% on v2 you observe if",
    "start": "2998400",
    "end": "3005900"
  },
  {
    "text": "everything looks great you can increase the traffic a little bit more 20% then 30% and so on until you go to 100% zero",
    "start": "3005900",
    "end": "3014390"
  },
  {
    "text": "if things go wrong here at 10% then you stop you move that 10% back to v1 right",
    "start": "3014390",
    "end": "3021590"
  },
  {
    "text": "minimize impact and go and investigate what's that why did the application crash why did we have this issue so this",
    "start": "3021590",
    "end": "3028640"
  },
  {
    "text": "is one of the most seamless ways where you can kind of have v1 v2 or",
    "start": "3028640",
    "end": "3033680"
  },
  {
    "text": "application the version in the deployment without impact trigger and user and you want to have a way to",
    "start": "3033680",
    "end": "3040940"
  },
  {
    "text": "revert back and what you see there on the right is basically a successful migration so",
    "start": "3040940",
    "end": "3048020"
  },
  {
    "text": "to speak we started 9010 and then we move to zero 100%",
    "start": "3048020",
    "end": "3055089"
  },
  {
    "text": "and then within the deployment strategy to go a little further into it there's a",
    "start": "3056559",
    "end": "3061789"
  },
  {
    "start": "3060000",
    "end": "3060000"
  },
  {
    "text": "lot of techniques sort of speak that you can adopt and again there is no one",
    "start": "3061789",
    "end": "3068839"
  },
  {
    "text": "secret key for all it it all depends on your business requirements your application your end-users your",
    "start": "3068839",
    "end": "3075229"
  },
  {
    "text": "tolerance you know a lot of things but this is good to know as a whole so the opt-in method the Killswitch method",
    "start": "3075229",
    "end": "3081829"
  },
  {
    "text": "scalable rollout etc so the opt-in message is basically you select a",
    "start": "3081829",
    "end": "3088400"
  },
  {
    "text": "specific group of users and only those users have access to the new version of the application",
    "start": "3088400",
    "end": "3094039"
  },
  {
    "text": "right and you get feedback get feedback and those users can be customers can be internal can be preferably external",
    "start": "3094039",
    "end": "3099769"
  },
  {
    "text": "people right also known as beta or preview so you know sometimes you have beta beta so",
    "start": "3099769",
    "end": "3106249"
  },
  {
    "text": "only certain group of people because that gives you the feedback it gives you lots of information before you go live",
    "start": "3106249",
    "end": "3112390"
  },
  {
    "text": "you want to make sure you have a kill switch if the application starts acting",
    "start": "3112390",
    "end": "3117589"
  },
  {
    "text": "up you want to make sure you have a way to revert back and just get rid of it without impacting all of your users",
    "start": "3117589",
    "end": "3123579"
  },
  {
    "text": "scalable rollout is what we saw in the preview previous example which is you do",
    "start": "3123579",
    "end": "3129679"
  },
  {
    "text": "90 percent 10 new wait as as you see that application is acting properly add",
    "start": "3129679",
    "end": "3135739"
  },
  {
    "text": "another 10 or 20 percent right 80/20 70/30 until you move everything because",
    "start": "3135739",
    "end": "3141709"
  },
  {
    "text": "that gives you a chance to revert back and load balancer is very easy very highly automated you can literally set",
    "start": "3141709",
    "end": "3147469"
  },
  {
    "text": "the the wait condition there and it just it just works block users so prevent",
    "start": "3147469",
    "end": "3154249"
  },
  {
    "text": "users from using this feature so you can launch a feature for example internally in the company and only have a specific",
    "start": "3154249",
    "end": "3160400"
  },
  {
    "text": "group of users have access to it and the rest don't even know it exists and you can do that by a feature flag in yeah",
    "start": "3160400",
    "end": "3168619"
  },
  {
    "text": "right there so if you're not familiar with feature flag in look it up it's a very very cool feature this allows you",
    "start": "3168619",
    "end": "3175309"
  },
  {
    "text": "to exactly do this where you can in the same environment same group of people I",
    "start": "3175309",
    "end": "3181159"
  },
  {
    "text": "can choose that this five or 10 people on this side can have access to my veto application and",
    "start": "3181159",
    "end": "3187430"
  },
  {
    "text": "this group will not even know about it but you're using the same application right so that's kind of it's it's done",
    "start": "3187430",
    "end": "3193100"
  },
  {
    "text": "with with feature flags and there are tools also open source tools that you",
    "start": "3193100",
    "end": "3200540"
  },
  {
    "text": "can leverage for this a and B testing test and compare new features and then",
    "start": "3200540",
    "end": "3206840"
  },
  {
    "text": "sunset all features so sometimes you just obviously once once you move onto that we start from nine to ten and then",
    "start": "3206840",
    "end": "3212869"
  },
  {
    "text": "you move on to one hundred zero you sense that v1 v1 becomes obsolete and then your v3 is the next iteration right",
    "start": "3212869",
    "end": "3220940"
  },
  {
    "text": "on v3 you repeat again you do 90 percent on v2 ten percent and then you move on",
    "start": "3220940",
    "end": "3227180"
  },
  {
    "text": "from there but feature flags is very important look look it up it really helps with with kind of isolating users",
    "start": "3227180",
    "end": "3236230"
  },
  {
    "text": "seamlessly okay error budget so this is this is also",
    "start": "3236230",
    "end": "3242630"
  },
  {
    "start": "3241000",
    "end": "3241000"
  },
  {
    "text": "important if you have it not very many people have it but if you do spend it error budget it really talks about in",
    "start": "3242630",
    "end": "3249500"
  },
  {
    "text": "some companies they have what they call error budget like likes of Netflix and so on where at the end of the year you",
    "start": "3249500",
    "end": "3256310"
  },
  {
    "text": "have a specific allocation of money that you need to spend on that you need to",
    "start": "3256310",
    "end": "3261950"
  },
  {
    "text": "spend on your environment in terms of testing resiliency robustness etc if you",
    "start": "3261950",
    "end": "3268490"
  },
  {
    "text": "have it use it meaning if you can afford to run a duplicate of your environment",
    "start": "3268490",
    "end": "3274220"
  },
  {
    "text": "like a test environment but almost same identical and run tests against it do it",
    "start": "3274220",
    "end": "3281840"
  },
  {
    "text": "it's it can be it comes with costs obviously but if you have a budget and",
    "start": "3281840",
    "end": "3287150"
  },
  {
    "text": "you can do it this is very very important because you will only find out what's wrong with your application when",
    "start": "3287150",
    "end": "3292580"
  },
  {
    "text": "you introduce problems and if you let's say you launch your application and you just it just works perfectly you should",
    "start": "3292580",
    "end": "3299690"
  },
  {
    "text": "introduce errors you should introduce errors at all levels right from the",
    "start": "3299690",
    "end": "3306680"
  },
  {
    "text": "system application level all kinds of a storage level database make sure that",
    "start": "3306680",
    "end": "3311780"
  },
  {
    "text": "you're aware of what's going to happen right you want to do that in practice environment and not in real",
    "start": "3311780",
    "end": "3317970"
  },
  {
    "text": "right you don't want to do it in in your production environment so some companies",
    "start": "3317970",
    "end": "3323600"
  },
  {
    "text": "are forced to spender their budget here will not utilize and they're encouraged to build gracefully failed so this is",
    "start": "3323600",
    "end": "3329880"
  },
  {
    "text": "ties into that Netflix simian army I mentioned at the beginning so this is",
    "start": "3329880",
    "end": "3335430"
  },
  {
    "text": "part of why they kind of use the simian army to go and test the resiliency because you can build a really robust",
    "start": "3335430",
    "end": "3342119"
  },
  {
    "text": "resilient highly available environment but you only find out the weaknesses when something goes wrong now instead of",
    "start": "3342119",
    "end": "3348510"
  },
  {
    "text": "you waiting for that when something goes wrong introduce it ahead of time and find out so you can learn how to",
    "start": "3348510",
    "end": "3355470"
  },
  {
    "text": "mitigate and also learn how to build against it right so there's ways where",
    "start": "3355470",
    "end": "3360660"
  },
  {
    "text": "you can find out oh we had a single point of failure which we didn't know about now we need to solve for that and",
    "start": "3360660",
    "end": "3372030"
  },
  {
    "text": "this kind of summarizes what we talked about so production of readiness review so we talked about architectural design",
    "start": "3372030",
    "end": "3379740"
  },
  {
    "start": "3376000",
    "end": "3376000"
  },
  {
    "text": "review so this is where you want a void single point of failure multi easy do",
    "start": "3379740",
    "end": "3386040"
  },
  {
    "text": "that kind of team cross team pollination sort of speak if I might use the term",
    "start": "3386040",
    "end": "3391619"
  },
  {
    "text": "loosely so have other teams look at each other's code monitoring so this is",
    "start": "3391619",
    "end": "3397140"
  },
  {
    "text": "important I remember try to aggregate your monitoring tools into a kind of a single pane of glass if you can and the more",
    "start": "3397140",
    "end": "3404910"
  },
  {
    "text": "data you log the better you're going to be at root cause analysis I remember",
    "start": "3404910",
    "end": "3410760"
  },
  {
    "text": "when we talked about what you should log and to end write the entire transaction should be locked and it should be",
    "start": "3410760",
    "end": "3418040"
  },
  {
    "text": "available to you so that if something goes wrong you know what to look for if you don't have time stamp for example if",
    "start": "3418040",
    "end": "3424619"
  },
  {
    "text": "you don't have IP address of the requester if you don't have you know specific application area where that",
    "start": "3424619",
    "end": "3431640"
  },
  {
    "text": "error occurred is very hard to to get the root cause analysis documentation",
    "start": "3431640",
    "end": "3437450"
  },
  {
    "text": "standardized on code documents what code does what its dependencies are do that",
    "start": "3437450",
    "end": "3444150"
  },
  {
    "text": "now rather than later because you're gonna save a lot of time alerting have a system in place where the right",
    "start": "3444150",
    "end": "3451770"
  },
  {
    "text": "people are getting alerted for for for the right reasons right don't alert someone at midnight when a customer",
    "start": "3451770",
    "end": "3457830"
  },
  {
    "text": "can't choose the right avatar but do alert everyone if the shopping cart is broken service level agreement again",
    "start": "3457830",
    "end": "3464340"
  },
  {
    "text": "look at the business side and see what the impact is and work backwards from there what does it mean for me if my",
    "start": "3464340",
    "end": "3470160"
  },
  {
    "text": "customers can buy and how many knives do I need what does it mean for me if my customers have sporadic latency right",
    "start": "3470160",
    "end": "3477830"
  },
  {
    "text": "and build a table on the SLA right don't have a blanket SLA for everything have an SLA per service no you're expected",
    "start": "3477830",
    "end": "3487020"
  },
  {
    "text": "throughput so this assumes that we've already done everything and the environments is ready to go so know your",
    "start": "3487020",
    "end": "3492480"
  },
  {
    "text": "baseline what is the expected report where how far can i push the envelope so to speak meaning where is my limit right",
    "start": "3492480",
    "end": "3499530"
  },
  {
    "text": "from an infrastructure side from a throughput side from the application behavior side you wanna make sure to know your limit so you can plan for",
    "start": "3499530",
    "end": "3505910"
  },
  {
    "text": "increase testing testing testing and testing there is only one way to find out is to test and test and test again",
    "start": "3505910",
    "end": "3512910"
  },
  {
    "text": "and last is deployment strategy right so the deployment strategy which is what we",
    "start": "3512910",
    "end": "3518490"
  },
  {
    "text": "talked about the canary Bluegreen deployment learn how to shift right",
    "start": "3518490",
    "end": "3524130"
  },
  {
    "text": "traffic from one cluster to another or one microservice to another without impacting your users and ability to",
    "start": "3524130",
    "end": "3530160"
  },
  {
    "text": "revert back to it so deployment strategy is very important and feature flagging",
    "start": "3530160",
    "end": "3535320"
  },
  {
    "text": "remember that feature of flagging where you can send specific set of features to only a group of users make it visible so",
    "start": "3535320",
    "end": "3541590"
  },
  {
    "text": "to speak and then the rest of the users wouldn't even know about it and you do that just so that if there is an impact",
    "start": "3541590",
    "end": "3547770"
  },
  {
    "text": "or an issue not everyone is affected so it reduces your risk and it reduces",
    "start": "3547770",
    "end": "3553790"
  },
  {
    "text": "having a wider a widespread impact on your application and I think after that",
    "start": "3553790",
    "end": "3560790"
  },
  {
    "text": "I will there are some resources which you will get this talks about the circuit breakers I talked about the",
    "start": "3560790",
    "end": "3567000"
  },
  {
    "start": "3565000",
    "end": "3565000"
  },
  {
    "text": "feature flag error budgeting monitoring and then production readiness this is",
    "start": "3567000",
    "end": "3572040"
  },
  {
    "text": "really really good information which you will get from the team after the read after the",
    "start": "3572040",
    "end": "3577120"
  },
  {
    "text": "[Music] survey and thank you very much I'll be",
    "start": "3577120",
    "end": "3583470"
  },
  {
    "text": "around for a question is severe person all right thank you",
    "start": "3583470",
    "end": "3589670"
  }
]