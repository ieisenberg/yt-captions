[
  {
    "start": "0",
    "end": "47000"
  },
  {
    "text": "hello everyone can you hear me soundcheck okay everyone please scoot in",
    "start": "560",
    "end": "8429"
  },
  {
    "text": "toward the middle more folks are filtering in and their seats up here please make some room for everyone all",
    "start": "8429",
    "end": "17940"
  },
  {
    "text": "right good afternoon I'm Robert with AWS I'm gonna talk to you about graph QL",
    "start": "17940",
    "end": "26060"
  },
  {
    "text": "graph QL is an open source declarative API query language that was created at",
    "start": "26060",
    "end": "33000"
  },
  {
    "text": "Facebook has now used at other companies such as Amazon Microsoft New York Times",
    "start": "33000",
    "end": "40399"
  },
  {
    "text": "Twitter and Virgin Trains before I dive",
    "start": "40399",
    "end": "48300"
  },
  {
    "start": "47000",
    "end": "85000"
  },
  {
    "text": "in let me introduce myself I'm a principal Technical Evangelist with AWS",
    "start": "48300",
    "end": "53730"
  },
  {
    "text": "I joined AWS last year prior to that I was a software engineer at Facebook",
    "start": "53730",
    "end": "60239"
  },
  {
    "text": "where I worked on the graph QL team and contributed to the graph Gale specification and before that I was a",
    "start": "60239",
    "end": "65939"
  },
  {
    "text": "software engineer at Microsoft where I worked on the.net framework Xbox windows",
    "start": "65939",
    "end": "71280"
  },
  {
    "text": "server and the startup business group I'm proud to announce that last year I",
    "start": "71280",
    "end": "77369"
  },
  {
    "text": "published my first book check it out but don't buy it or read it I prepared a",
    "start": "77369",
    "end": "87630"
  },
  {
    "start": "85000",
    "end": "110000"
  },
  {
    "text": "demo for you that we're gonna follow along with if the Wi-Fi network is",
    "start": "87630",
    "end": "93770"
  },
  {
    "text": "helping out we can go to this URL and your phone or your laptop and follow along",
    "start": "93770",
    "end": "100579"
  },
  {
    "start": "110000",
    "end": "146000"
  },
  {
    "text": "can everybody see this okay in the back show hands yeah okay good all right",
    "start": "110360",
    "end": "119330"
  },
  {
    "text": "for this demo we're going to do a very simple exercise we're going to fetch the",
    "start": "119330",
    "end": "124980"
  },
  {
    "text": "names of all the Star Wars characters that appeared in movies with Luke",
    "start": "124980",
    "end": "130020"
  },
  {
    "text": "Skywalker now of course we need some api's to do this and the links that we",
    "start": "130020",
    "end": "136290"
  },
  {
    "text": "have up here this first one is the Star Wars rest API it is at swap eco let me",
    "start": "136290",
    "end": "144420"
  },
  {
    "text": "zoom in a bit and this API has a bunch of Star Wars data such as characters",
    "start": "144420",
    "end": "152330"
  },
  {
    "start": "146000",
    "end": "285000"
  },
  {
    "text": "films planets starships and what-have-you and it's frequently used",
    "start": "152330",
    "end": "158040"
  },
  {
    "text": "as an exemplary REST API that is an API",
    "start": "158040",
    "end": "163800"
  },
  {
    "text": "that specifically abides by the uniform interface constraint in plain English",
    "start": "163800",
    "end": "168870"
  },
  {
    "text": "that means that this resource references other resources by means of these hyper",
    "start": "168870",
    "end": "175050"
  },
  {
    "text": "media links for example the home world is designated by this URL for the home",
    "start": "175050",
    "end": "182310"
  },
  {
    "text": "world field instead of an embedded JSON sub structure but let me make a note of",
    "start": "182310",
    "end": "189390"
  },
  {
    "text": "this rest architectural style for a moment this field I don't actually know",
    "start": "189390",
    "end": "198180"
  },
  {
    "text": "what the shape and the structure of this home world field is maybe it has a",
    "start": "198180",
    "end": "203730"
  },
  {
    "text": "property called name that'll tell me the name of the home world that Lucas from maybe it has a property called mass",
    "start": "203730",
    "end": "210330"
  },
  {
    "text": "maybe it has a location for where the planet is in the galaxy I just don't",
    "start": "210330",
    "end": "216959"
  },
  {
    "text": "know but I do know that I can copy this URL and I can paste it into the browser over here and then I get the resource",
    "start": "216959",
    "end": "224459"
  },
  {
    "text": "that represents planets slash one which we can see is the planet that Luke lives",
    "start": "224459",
    "end": "230430"
  },
  {
    "text": "on or lived on and I can see that it also has a bunch of other related",
    "start": "230430",
    "end": "236489"
  },
  {
    "text": "resources it follows this exact same pattern and has these other hypermedia links to express this",
    "start": "236489",
    "end": "242000"
  },
  {
    "text": "resources relations to other resources such as residents on the planet and",
    "start": "242000",
    "end": "247700"
  },
  {
    "text": "films that the planet appears in now",
    "start": "247700",
    "end": "253810"
  },
  {
    "text": "with this knowledge of the Star Wars REST API let's revisit our requirement",
    "start": "253810",
    "end": "259370"
  },
  {
    "text": "fetch the names of all the Star Wars characters that appeared in movies with Luke Skywalker well this is the great",
    "start": "259370",
    "end": "266030"
  },
  {
    "text": "thing about REST API so as as human beings we kind of we're so used to navigating websites that we kind of know",
    "start": "266030",
    "end": "271850"
  },
  {
    "text": "how to do this right we can just go in here and look at all these films we can say well I could perform an HTTP request",
    "start": "271850",
    "end": "279190"
  },
  {
    "text": "against every one of these films for example let's take the first one and",
    "start": "279190",
    "end": "285190"
  },
  {
    "start": "285000",
    "end": "634000"
  },
  {
    "text": "we're gonna paste it into the browser and we say ok well this film has a bunch",
    "start": "285190",
    "end": "291500"
  },
  {
    "text": "of characters this one represents Empire Strikes Back it has all these characters in this array here and I can just click",
    "start": "291500",
    "end": "300050"
  },
  {
    "text": "on each one of these and get the name out of the related resource for each",
    "start": "300050",
    "end": "306260"
  },
  {
    "text": "character simple enough right well let me point out another thing in",
    "start": "306260",
    "end": "311479"
  },
  {
    "text": "the process of fetching this film resource there's a lot of data that I didn't actually use all I needed was",
    "start": "311479",
    "end": "317780"
  },
  {
    "text": "this characters array but in fact when I performed this HTTP GET against film / - I have all this extra data check out",
    "start": "317780",
    "end": "326300"
  },
  {
    "text": "this opening crawl text field this is the text that Scrolls up when the movie",
    "start": "326300",
    "end": "331310"
  },
  {
    "text": "starts I'm not using that data at all but it came with the resource nonetheless so we're gonna see why all",
    "start": "331310",
    "end": "338180"
  },
  {
    "text": "this stuff starts to matter when I run the demo and so in here I'm just going",
    "start": "338180",
    "end": "344720"
  },
  {
    "text": "to open up the network inspector",
    "start": "344720",
    "end": "348190"
  },
  {
    "text": "and when I click fetch with rest let me show you the code briefly it's going to",
    "start": "350900",
    "end": "358160"
  },
  {
    "text": "run this function right here I'm not going to go through all of it but this run rest function we've hard-coded the",
    "start": "358160",
    "end": "364430"
  },
  {
    "text": "URL for Luke Skywalker and then we do exactly what I just described we're",
    "start": "364430",
    "end": "369650"
  },
  {
    "text": "making these HCP calls to fetch the Luke Skywalker resource we take the",
    "start": "369650",
    "end": "374680"
  },
  {
    "text": "characters array and then we fetch all of those resources and then when when we",
    "start": "374680",
    "end": "380150"
  },
  {
    "text": "have all those we massage the data a little bit and then we put it into the",
    "start": "380150",
    "end": "385280"
  },
  {
    "text": "names field which is an invisible field right now because we haven't run the the demo yet now I'm gonna switch over the",
    "start": "385280",
    "end": "393080"
  },
  {
    "text": "network tab and I want you to pay attention what happens in the network tab when I click fetch with rest",
    "start": "393080",
    "end": "399880"
  },
  {
    "text": "okay so it looks like we made about a hundred Network requests in order to",
    "start": "403870",
    "end": "409030"
  },
  {
    "text": "fetch the names of all the characters that appeared in movies with Luke Skywalker and collectively it took",
    "start": "409030",
    "end": "418530"
  },
  {
    "text": "little over three seconds okay that's a REST API we all know what that is",
    "start": "418530",
    "end": "425530"
  },
  {
    "text": "what about graph QL this is a talk about graph QL so the second link takes us to",
    "start": "425530",
    "end": "431740"
  },
  {
    "text": "the graph QL API of course would be nice if it were running let me fix that",
    "start": "431740",
    "end": "439229"
  },
  {
    "text": "and let me bump it up everybody see this in the back in the back ok some hands ok",
    "start": "445660",
    "end": "455780"
  },
  {
    "text": "thank you so this API is the exact same data that",
    "start": "455780",
    "end": "463370"
  },
  {
    "text": "we saw in the Star Wars REST API but I've rebuilt it as a graph QL endpoint",
    "start": "463370",
    "end": "469930"
  },
  {
    "text": "and what we're looking at here in the browser is called graphical graphical is",
    "start": "469930",
    "end": "475310"
  },
  {
    "text": "the graph QL IDE using graphical on the",
    "start": "475310",
    "end": "480440"
  },
  {
    "text": "left hand pane here we can offer a graphic ql document we send it to the server the server executes it and then",
    "start": "480440",
    "end": "486800"
  },
  {
    "text": "sends us back JSON in the right hand side here so what can we write in terms",
    "start": "486800",
    "end": "494390"
  },
  {
    "text": "of the graph QL document to know that we can click this schema button and that'll",
    "start": "494390",
    "end": "500570"
  },
  {
    "text": "tell me all the types that are supported on this API particularly if I wanted to",
    "start": "500570",
    "end": "508430"
  },
  {
    "text": "do what we did with the Star Wars API I can click this film's field but the difference is that before I ever perform",
    "start": "508430",
    "end": "513890"
  },
  {
    "text": "an HTTP GET request against a URL I can preview this type I can see that film",
    "start": "513890",
    "end": "519440"
  },
  {
    "text": "has a bunch of scalar fields in the form of title episode ID opening crawl etc",
    "start": "519440",
    "end": "524680"
  },
  {
    "text": "but where before we had hyper media links for the character field we now",
    "start": "524680",
    "end": "530690"
  },
  {
    "text": "have a graph QL relation and this relation allows us to click through the",
    "start": "530690",
    "end": "536210"
  },
  {
    "text": "characters and see that if I were to fetch the characters field on the film I get an array of objects of type person",
    "start": "536210",
    "end": "543950"
  },
  {
    "text": "and each person has these scalar fields name height masts hair color and then it",
    "start": "543950",
    "end": "550160"
  },
  {
    "text": "itself has a whole bunch of other relations so using this we can see that this is a way to explore the graph of",
    "start": "550160",
    "end": "556640"
  },
  {
    "text": "data that I have here now that I know what the schema is I can go in here and",
    "start": "556640",
    "end": "563570"
  },
  {
    "text": "write my query I'm going to specify that I want to execute a query which is the",
    "start": "563570",
    "end": "569720"
  },
  {
    "text": "only operation type that this API supports right now I want to fetch films",
    "start": "569720",
    "end": "575000"
  },
  {
    "text": "and then for each film I want to fetch the title so there we have all the",
    "start": "575000",
    "end": "584590"
  },
  {
    "text": "movies that are in this particular set of data and I've just specs only the",
    "start": "584590",
    "end": "590230"
  },
  {
    "text": "title if I just want the title for the movies I see that this particular API has it is not up to date with the last",
    "start": "590230",
    "end": "598900"
  },
  {
    "text": "Jedi good taste I choose to ignore that movie as well and I said that we can",
    "start": "598900",
    "end": "605020"
  },
  {
    "text": "fetch characters in line right here so for each character in the film I can come in here and say name and now I",
    "start": "605020",
    "end": "614080"
  },
  {
    "text": "don't know the formatting is a little bit off I mean let me blow this up here and now we can see that we've only",
    "start": "614080",
    "end": "621310"
  },
  {
    "text": "fetched the names of the characters for all the films and I don't have any of",
    "start": "621310",
    "end": "627700"
  },
  {
    "text": "that extra data that I didn't use going",
    "start": "627700",
    "end": "635950"
  },
  {
    "start": "634000",
    "end": "720000"
  },
  {
    "text": "back to the demo this means that if I fetch with graph QL let me show you the",
    "start": "635950",
    "end": "642490"
  },
  {
    "text": "code briefly this is the graph GL request notice that I still have to do some massaging of the data after it gets",
    "start": "642490",
    "end": "648790"
  },
  {
    "text": "to the client but none of these calls are asynchronous none of these calls are Network requests the only network",
    "start": "648790",
    "end": "654400"
  },
  {
    "text": "requests is fetch graph QL up here and this query looks a lot like what we just offered in the Korea Explorer so if I",
    "start": "654400",
    "end": "664390"
  },
  {
    "text": "click fetch graph QL I can see that the same data came back except it's much",
    "start": "664390",
    "end": "671170"
  },
  {
    "text": "faster less than half a second about 6 times faster than the rest API call why",
    "start": "671170",
    "end": "678250"
  },
  {
    "text": "because it's only one Network call just to prove that that is actually happening let me refresh this get a clean Network",
    "start": "678250",
    "end": "684970"
  },
  {
    "text": "tab I'll run this again so you can see that there's just two network calls one is for the HTTP",
    "start": "684970",
    "end": "692230"
  },
  {
    "text": "options call for cores and then the second one is the one that actually returned the exact data that I asked for",
    "start": "692230",
    "end": "697570"
  },
  {
    "text": "and we'll talk more about this later but this is one of the super powers of rest or graph QL because you can get exactly",
    "start": "697570",
    "end": "705160"
  },
  {
    "text": "the data that you asked for and nothing more nothing less",
    "start": "705160",
    "end": "709440"
  },
  {
    "text": "okay let me break down what we just saw we",
    "start": "718150",
    "end": "724079"
  },
  {
    "start": "720000",
    "end": "806000"
  },
  {
    "text": "authored a graphical document in graphical we sent it to the server the",
    "start": "724079",
    "end": "729089"
  },
  {
    "text": "server validated and then executed that document and then it's sent back the",
    "start": "729089",
    "end": "734339"
  },
  {
    "text": "response as a JSON document but there were some rules when we were writing",
    "start": "734339",
    "end": "739800"
  },
  {
    "text": "that that document we said hey it starts with the operation type and then it's followed by that pair of curly braces",
    "start": "739800",
    "end": "745529"
  },
  {
    "text": "and then within the curly braces we wrote some other text write the curly braces in the operation type those are",
    "start": "745529",
    "end": "751350"
  },
  {
    "text": "all part of the language specification for graph QL you can think of it as a little bit like sequel without even",
    "start": "751350",
    "end": "758279"
  },
  {
    "text": "knowing the schema of the tables you're working with you can roughly tell whether or not a query is valid sequel syntax so it is with graph QL next we",
    "start": "758279",
    "end": "767279"
  },
  {
    "text": "had the selections which were was when we fetched the people and the films and the characters and all the different",
    "start": "767279",
    "end": "773279"
  },
  {
    "text": "fields we wanted out of those types and that's schema specific that's domain specific that only works because the",
    "start": "773279",
    "end": "779610"
  },
  {
    "text": "schema for the graph QL API for Star Wars had those specific types with those specific field definitions and finally",
    "start": "779610",
    "end": "788190"
  },
  {
    "text": "there's a server that answered that query there's this process running somewhere it takes this document as",
    "start": "788190",
    "end": "794639"
  },
  {
    "text": "input it parses it and it validates it and it assembles the response after it gets the results from fulfilling the",
    "start": "794639",
    "end": "801120"
  },
  {
    "text": "different fields it's also instructive to talk about what",
    "start": "801120",
    "end": "808500"
  },
  {
    "start": "806000",
    "end": "960000"
  },
  {
    "text": "graph QL is not despite the QL in a name it's not a graph database query language",
    "start": "808500",
    "end": "816830"
  },
  {
    "text": "it's also not a solution for client-side state management and this is tempting because when you see this object come",
    "start": "816830",
    "end": "822990"
  },
  {
    "text": "back in the exact form that you want maybe you want to just use it directly and get rid of any sort of client-side",
    "start": "822990",
    "end": "828540"
  },
  {
    "text": "caching layer but that's generally a mistake there's more work to be done after the data reaches the client such",
    "start": "828540",
    "end": "834300"
  },
  {
    "text": "as D normalization and caching and cross referencing so graph kill doesn't solve",
    "start": "834300",
    "end": "839310"
  },
  {
    "text": "any of those problems for you it's not a solution for binary streams we saw that all the data that was coming back was",
    "start": "839310",
    "end": "845190"
  },
  {
    "text": "text and it was expressible in a JSON document and that's exactly what graph QL is used for it's not going to be a",
    "start": "845190",
    "end": "852060"
  },
  {
    "text": "good solution if you are using it for large file transfers if you're using it to stream audio or video it's not what",
    "start": "852060",
    "end": "857970"
  },
  {
    "text": "it's built for and it's also frequently confused with the Facebook Graph API",
    "start": "857970",
    "end": "863250"
  },
  {
    "text": "they're not the same thing the Facebook Graph API is Facebook's REST API for",
    "start": "863250",
    "end": "869040"
  },
  {
    "text": "third-party developers it's not limited to any specific databases or it doesn't",
    "start": "869040",
    "end": "875730"
  },
  {
    "text": "have to use the base a database at all all the fields in the graphical schema are optionally backed by what are called",
    "start": "875730",
    "end": "881660"
  },
  {
    "text": "resolver functions the resolver functions are just regular functions in whatever language you choose to write which means that you can return data",
    "start": "881660",
    "end": "888660"
  },
  {
    "text": "that is generated on the fly data that is right out of a cache data pulled from a flat file or of course data read from",
    "start": "888660",
    "end": "895290"
  },
  {
    "text": "a database it's not exclusive to the JavaScript ecosystem there are",
    "start": "895290",
    "end": "902940"
  },
  {
    "text": "implementations of graph QL in every popular language and on the front end",
    "start": "902940",
    "end": "907980"
  },
  {
    "text": "you don't have to use some sort of web technology react relay it's a great",
    "start": "907980",
    "end": "913290"
  },
  {
    "text": "solution for these kinds of technologies but it's just as applicable if you're building native applications for iOS and",
    "start": "913290",
    "end": "920040"
  },
  {
    "text": "Android or even just writing bash scripts or command line utilities and",
    "start": "920040",
    "end": "926760"
  },
  {
    "text": "lastly at the transport level it's not restricted to HTTP you frequently see",
    "start": "926760",
    "end": "932550"
  },
  {
    "text": "graph QL used with HTTP but that's because of the ubiquitous ubiquity of",
    "start": "932550",
    "end": "938640"
  },
  {
    "text": "HTTP in fact if you want to use the graph QL subscription operation HTTP isn't even",
    "start": "938640",
    "end": "945540"
  },
  {
    "text": "sufficient so you can use whatever transport you'd like as long as it supports request response style",
    "start": "945540",
    "end": "951000"
  },
  {
    "text": "semantics and guaranteed in order delivery semantics of TCP so we saw some",
    "start": "951000",
    "end": "961920"
  },
  {
    "text": "operations I talked about operations briefly and we saw the query operation in practice and the query operation",
    "start": "961920",
    "end": "969660"
  },
  {
    "text": "roughly models a read this is an operation where you are not changing the",
    "start": "969660",
    "end": "975780"
  },
  {
    "text": "state of the server by executing it so you can run this as many times as you want then you have an operation called",
    "start": "975780",
    "end": "983040"
  },
  {
    "text": "the mutation and the mutation is used to roughly model writes and it's called a",
    "start": "983040",
    "end": "989400"
  },
  {
    "text": "mutation because conceptually it should mutate the state on the server and lastly we have the subscription the",
    "start": "989400",
    "end": "995070"
  },
  {
    "text": "subscription operation creates a persistent connection between the client and the server and then whenever the",
    "start": "995070",
    "end": "1001250"
  },
  {
    "text": "underlying domain-specific event triggers the selection set is react",
    "start": "1001250",
    "end": "1006530"
  },
  {
    "text": "Secutor and the data is pushed back down to the client and using the subscription operation you can build all sorts of interesting real-time use cases like",
    "start": "1006530",
    "end": "1012950"
  },
  {
    "text": "chat applications or transportation or communication applications you name it",
    "start": "1012950",
    "end": "1018160"
  },
  {
    "text": "but I want to mention one other thing these operations have especially the query and the mutation operations are",
    "start": "1018160",
    "end": "1023990"
  },
  {
    "text": "only here for semantic purposes that means that you can go and create a",
    "start": "1023990",
    "end": "1030319"
  },
  {
    "text": "mutation that doesn't actually change any data and you can also create a query that actually goes and deletes a bunch",
    "start": "1030319",
    "end": "1035810"
  },
  {
    "text": "of rows from the database it would not be intuitive and it would probably really be really confusing to whoever's using the API but you can do that just",
    "start": "1035810",
    "end": "1042350"
  },
  {
    "text": "like you can mess with the HTTP verbs get put post delete right so let's put",
    "start": "1042350",
    "end": "1049880"
  },
  {
    "start": "1048000",
    "end": "1200000"
  },
  {
    "text": "the query under a microscope this query document what we're looking at here is a",
    "start": "1049880",
    "end": "1055220"
  },
  {
    "text": "query document and this contains valid graph QL text within the first word here",
    "start": "1055220",
    "end": "1063200"
  },
  {
    "text": "is special this is the operation type following the operation type we have an",
    "start": "1063200",
    "end": "1069860"
  },
  {
    "text": "optional operation name the operation name is an alphanumeric string specified by",
    "start": "1069860",
    "end": "1075530"
  },
  {
    "text": "the client and this string is helpful if you're trying to trace or debug this",
    "start": "1075530",
    "end": "1081290"
  },
  {
    "text": "request on the server next within these",
    "start": "1081290",
    "end": "1086360"
  },
  {
    "text": "parentheses we have the input variables and at the very top the query name",
    "start": "1086360",
    "end": "1092600"
  },
  {
    "text": "defines all of the input variables that the subsequent selections will use in this case the lowercase ID is the",
    "start": "1092600",
    "end": "1100700"
  },
  {
    "text": "variable name and the uppercase ID is the type ID is a graphical primitive",
    "start": "1100700",
    "end": "1106760"
  },
  {
    "text": "type and the the bank means that this is not an optional variable it must be",
    "start": "1106760",
    "end": "1112070"
  },
  {
    "text": "supplied or else the graph Gale server does not need to evaluate any further and then you can see that we actually",
    "start": "1112070",
    "end": "1118430"
  },
  {
    "text": "use the ID in the author field right inside the selection and by doing this",
    "start": "1118430",
    "end": "1125270"
  },
  {
    "text": "we can make this entire query reusable we can pass in whatever ID for the author that we want to fetch and then we",
    "start": "1125270",
    "end": "1132110"
  },
  {
    "text": "will fetch the field specified here for the author with the matching ID this",
    "start": "1132110",
    "end": "1140450"
  },
  {
    "text": "highlighted section is the selection set for the entire document and this specifies the structure of the JSON blob",
    "start": "1140450",
    "end": "1147320"
  },
  {
    "text": "that's going to be returned to us when the graphical success' graphical server successfully fulfills our request author",
    "start": "1147320",
    "end": "1155420"
  },
  {
    "text": "here is the route field think of this as the entry point into the graph of data you need to start accessing the graph",
    "start": "1155420",
    "end": "1161270"
  },
  {
    "text": "somewhere and this is the field that you use to enter it and then here we have a",
    "start": "1161270",
    "end": "1167330"
  },
  {
    "text": "selection set on a nested field for books or saying for all books fetched",
    "start": "1167330",
    "end": "1172910"
  },
  {
    "text": "title and ISBN and this is instructive because the graphical query the fields must terminate in what are called scalar",
    "start": "1172910",
    "end": "1180500"
  },
  {
    "text": "fields these are strings bools int enums",
    "start": "1180500",
    "end": "1185990"
  },
  {
    "text": "you can't just say I want books because it doesn't know what fields from books",
    "start": "1185990",
    "end": "1191630"
  },
  {
    "text": "to fetch and it would not result in a legal graph qaul query",
    "start": "1191630",
    "end": "1198370"
  },
  {
    "start": "1200000",
    "end": "1245000"
  },
  {
    "text": "so at this point you're probably wondering what we've seen what graph QL",
    "start": "1200649",
    "end": "1205850"
  },
  {
    "text": "is like from the clients perspective what does it like to build a graph QL",
    "start": "1205850",
    "end": "1211250"
  },
  {
    "text": "server and I'm going to show you the code for the graphical server that we were just using the starwars graph QL",
    "start": "1211250",
    "end": "1217370"
  },
  {
    "text": "server can everybody see that in the",
    "start": "1217370",
    "end": "1224539"
  },
  {
    "text": "back ends okay I'm gonna keep going",
    "start": "1224539",
    "end": "1230740"
  },
  {
    "text": "this graph QL server is built with a ecosystem project called Apollo server",
    "start": "1231940",
    "end": "1237980"
  },
  {
    "text": "which is one of the most popular graph kill servers oh sorry should have okay now can everybody see",
    "start": "1237980",
    "end": "1247190"
  },
  {
    "text": "that in back okay thank you so this server what we're doing here is",
    "start": "1247190",
    "end": "1254419"
  },
  {
    "text": "pretty simple this entry point server TS is just instantiating an instance of the Apollo server and we're passing it a",
    "start": "1254419",
    "end": "1263240"
  },
  {
    "text": "schema and as we saw earlier this schema really defines everything that this graphical server is capable of so let me",
    "start": "1263240",
    "end": "1270620"
  },
  {
    "text": "just click through to the schema how did we build the schema well not that helpful wait we have this handy build",
    "start": "1270620",
    "end": "1277159"
  },
  {
    "text": "schema function but I passed in a bunch of resolvers and these are the resolvers that fulfill the data for all the",
    "start": "1277159",
    "end": "1284330"
  },
  {
    "text": "different types for the film's resolver and go back here and show you the film's",
    "start": "1284330",
    "end": "1296389"
  },
  {
    "text": "resolver runs whenever I try to access this root field films how was that",
    "start": "1296389",
    "end": "1304340"
  },
  {
    "text": "defined in the code this is what it's doing it's saying",
    "start": "1304340",
    "end": "1312009"
  },
  {
    "text": "under the query I'm going to return a collection of films and where do I get",
    "start": "1312009",
    "end": "1318700"
  },
  {
    "text": "those films it's just from a flat file right now okay and knowing that I can",
    "start": "1318700",
    "end": "1326919"
  },
  {
    "text": "come in here and I can start creating other fields as you see here I wanted to",
    "start": "1326919",
    "end": "1334029"
  },
  {
    "text": "share a little greeting with everyone but we can change this thing and we can add any field we want I can create",
    "start": "1334029",
    "end": "1342039"
  },
  {
    "text": "something called foo and then I save this I have a hot reloading feature",
    "start": "1342039",
    "end": "1349269"
  },
  {
    "text": "running here so it'll recompile the server and restart it anytime it detects a change and now if everything worked",
    "start": "1349269",
    "end": "1356889"
  },
  {
    "text": "accordingly then I should be able to go back to graphical and I should see this field show up so I click on you to the",
    "start": "1356889",
    "end": "1365139"
  },
  {
    "text": "schema I can see my foo field has shown up it says that it returns a type string",
    "start": "1365139",
    "end": "1371490"
  },
  {
    "text": "so I can come in here and do something like that and that's it pretty simple",
    "start": "1371490",
    "end": "1379710"
  },
  {
    "text": "and these resolvers so for example in the schema when we compose these resolvers this is where we can kind of",
    "start": "1383750",
    "end": "1389930"
  },
  {
    "text": "leave out entire resolvers for hole types let me resume in the slides",
    "start": "1389930",
    "end": "1400660"
  },
  {
    "start": "1406000",
    "end": "1540000"
  },
  {
    "text": "okay I also wanted to mention that that particular example was built with a project called type graph QL and it was",
    "start": "1406159",
    "end": "1413190"
  },
  {
    "text": "using typescript and as I said before graph QL is available in just about",
    "start": "1413190",
    "end": "1418320"
  },
  {
    "text": "every popular language so if your Java developer your.net developer you if you",
    "start": "1418320",
    "end": "1423539"
  },
  {
    "text": "are a Python developer there are graphical servers available in all those languages and they're very well tested",
    "start": "1423539",
    "end": "1429119"
  },
  {
    "text": "and they're run at massive scales okay a",
    "start": "1429119",
    "end": "1434940"
  },
  {
    "text": "bit of history how did we get here well in 2012 we built graph QL internally at",
    "start": "1434940",
    "end": "1440580"
  },
  {
    "text": "Facebook for the data fetching needs of our native mobile applications and this",
    "start": "1440580",
    "end": "1448139"
  },
  {
    "text": "was this was back before we open source graph QL so we iterated on the internal",
    "start": "1448139",
    "end": "1453690"
  },
  {
    "text": "version of graph QL for a couple years and in 2015 we open sourced it by creating the specification as a separate",
    "start": "1453690",
    "end": "1460529"
  },
  {
    "text": "project and then in 2018 just last year we announced the formation of the",
    "start": "1460529",
    "end": "1466320"
  },
  {
    "text": "graphical foundation which is organized under the CNC F and the graphical foundation is a neutral governing body",
    "start": "1466320",
    "end": "1472679"
  },
  {
    "text": "that will ensure that graph QL can evolve in a healthy way without any",
    "start": "1472679",
    "end": "1478889"
  },
  {
    "text": "undue vendor influence for the years to come and graph QL is proven at massive",
    "start": "1478889",
    "end": "1486239"
  },
  {
    "text": "scale specifically have Facebook with over 2 billion monthly active users we",
    "start": "1486239",
    "end": "1492869"
  },
  {
    "text": "were seeing collectively over a trillion graphical queries per day and now we see",
    "start": "1492869",
    "end": "1498450"
  },
  {
    "text": "similar scales at Amazon and github and Coursera Yelp New York Times all these",
    "start": "1498450",
    "end": "1504929"
  },
  {
    "text": "other big companies that are starting to use graphic you all",
    "start": "1504929",
    "end": "1508549"
  },
  {
    "text": "but there are a lot of other api's we talked a little bit about rest but there are so many others so gr PC thrift",
    "start": "1511070",
    "end": "1518330"
  },
  {
    "text": "json-ld and we'd be here for a long time if we were to compare graph QL to all of",
    "start": "1518330",
    "end": "1524190"
  },
  {
    "text": "these other API solutions so I'm going to compare to rest because rest is",
    "start": "1524190",
    "end": "1530580"
  },
  {
    "text": "generally the the API technology style that the most number of people understands because it's the technology",
    "start": "1530580",
    "end": "1536639"
  },
  {
    "text": "of the web and so I'm going to do a",
    "start": "1536639",
    "end": "1541919"
  },
  {
    "start": "1540000",
    "end": "1667000"
  },
  {
    "text": "comparison between these two but instead of treating this as a scorecard where we",
    "start": "1541919",
    "end": "1547499"
  },
  {
    "text": "tally up the score at the end and then we just choose one and nor the other one forever these are all going to be couched as trade-offs in some cases rest",
    "start": "1547499",
    "end": "1554639"
  },
  {
    "text": "is going to be better in some cases graph QL is going to be better but",
    "start": "1554639",
    "end": "1559889"
  },
  {
    "text": "before before I dive in here let me see a show of hands how many people here",
    "start": "1559889",
    "end": "1566100"
  },
  {
    "text": "know what a REST API is okay keep your keep your hands up keep your hand up",
    "start": "1566100",
    "end": "1571859"
  },
  {
    "text": "only if you think you're gonna agree with everybody else what a REST API is okay a lot of hands went down a couple",
    "start": "1571859",
    "end": "1578580"
  },
  {
    "text": "hands this is awesome I want to talk to you afterward so a lot of hands went down and that's because rest has no",
    "start": "1578580",
    "end": "1586889"
  },
  {
    "text": "shared definition in fact the origin of rest is that dr. Roy fielding created",
    "start": "1586889",
    "end": "1593340"
  },
  {
    "text": "this dissertation where he described the architectural patterns of the web back in 2000 so it was kind of a what do",
    "start": "1593340",
    "end": "1600840"
  },
  {
    "text": "people build what were the successful patterns and then let me give those things names and as a result it",
    "start": "1600840",
    "end": "1605970"
  },
  {
    "text": "shouldn't surprise us that there is no shared definition the closest thing you get to the rest definition is the",
    "start": "1605970",
    "end": "1612629"
  },
  {
    "text": "dissertation which contains six architectural constraints I'm not going to go into all of those but you can go",
    "start": "1612629",
    "end": "1618359"
  },
  {
    "text": "and find online is everywhere but graph QL is different graph QL is not up for",
    "start": "1618359",
    "end": "1624179"
  },
  {
    "text": "debate it's not up for interpretation there's a specification and an implementation so if I tell you have a",
    "start": "1624179",
    "end": "1629609"
  },
  {
    "text": "graph kill server there's a very good chance you can figure out how to use it without ever talking to me again",
    "start": "1629609",
    "end": "1635899"
  },
  {
    "text": "they also differ in terms of the conceptual organizing model at the heart",
    "start": "1637290",
    "end": "1642340"
  },
  {
    "text": "of rest you have the resource which is identified by the URI and the resource",
    "start": "1642340",
    "end": "1647500"
  },
  {
    "text": "roughly translates and you can think of it as a virtual file that lives on the server but with graph QL the conceptual",
    "start": "1647500",
    "end": "1653890"
  },
  {
    "text": "model is the graph that is a collection of nodes and edges that relate those",
    "start": "1653890",
    "end": "1659230"
  },
  {
    "text": "notes and then on each node there are scaler properties rest in graphical also",
    "start": "1659230",
    "end": "1669280"
  },
  {
    "start": "1667000",
    "end": "1879000"
  },
  {
    "text": "different in terms of the organizing organizing model and here I say that rest is federated what I mean here is",
    "start": "1669280",
    "end": "1676060"
  },
  {
    "text": "it's trivial to have rest resources link between different domains for example on",
    "start": "1676060",
    "end": "1681070"
  },
  {
    "text": "a Wikipedia article I can have a URI that references something from IMDB which references something from a",
    "start": "1681070",
    "end": "1686410"
  },
  {
    "text": "Facebook post which substance is something from CNN that's what makes the web so great in graph QL because there's",
    "start": "1686410",
    "end": "1693310"
  },
  {
    "text": "no standard addressing model for any particular node graph QL is centralized and it's difficult to go and create a",
    "start": "1693310",
    "end": "1699430"
  },
  {
    "text": "schema that spans the entire way I would just say that that's almost impossible so these differences matter a lot when",
    "start": "1699430",
    "end": "1707290"
  },
  {
    "text": "you start to talk about whether you're building an API for a first party developer that is a developer that works",
    "start": "1707290",
    "end": "1712450"
  },
  {
    "text": "within your company or a developer that works outside of your organization graph",
    "start": "1712450",
    "end": "1718210"
  },
  {
    "text": "QL rest also has this concept called related operations on resources it's",
    "start": "1718210",
    "end": "1723700"
  },
  {
    "text": "part of the uniform interface constraint and what this says is that if you're looking at a given resource let's say",
    "start": "1723700",
    "end": "1728950"
  },
  {
    "text": "it's an appointment there are hyper media links that allow you to operate on that resource so for example you can",
    "start": "1728950",
    "end": "1734980"
  },
  {
    "text": "change the time and date of that appointment with that embedded hyper media link you can cancel the appointment or you can move around",
    "start": "1734980",
    "end": "1741130"
  },
  {
    "text": "usually all the operations that can affect that resource that are advertised right there but graph Gale doesn't have",
    "start": "1741130",
    "end": "1747190"
  },
  {
    "text": "a similar concept if you're looking at a particular node there's no way to say give me all the queries and all",
    "start": "1747190",
    "end": "1752350"
  },
  {
    "text": "mutations and all the subscriptions that will tell me whenever this object changes for example the closest thing",
    "start": "1752350",
    "end": "1758920"
  },
  {
    "text": "graph Gale has to that is something called introspection an introspection is a special query that you can execute",
    "start": "1758920",
    "end": "1765370"
  },
  {
    "text": "against the graph QL endpoint that can dump out the contents of the entire schema and the introspection query is exactly",
    "start": "1765370",
    "end": "1772269"
  },
  {
    "text": "how graphical the tool that we were using earlier was built that tool goes and executes an introspection query and",
    "start": "1772269",
    "end": "1779080"
  },
  {
    "text": "then it uses the data that comes back to populate that schema button and with all the types and the relations between",
    "start": "1779080",
    "end": "1784719"
  },
  {
    "text": "those types for rest there's no there's no there's no similar thing at least not",
    "start": "1784719",
    "end": "1791289"
  },
  {
    "text": "in any sort of standardized way that I've seen because what you're essentially asking rest is give me an index of all the different resources and",
    "start": "1791289",
    "end": "1797169"
  },
  {
    "text": "their fields and the types of all of those fields the only way that rest supports this is if you add in",
    "start": "1797169",
    "end": "1802570"
  },
  {
    "text": "additional frameworks like swagger on top of it and that brings us a data",
    "start": "1802570",
    "end": "1808960"
  },
  {
    "text": "typing with rest for the example that we saw earlier before I fetched the resource representing the planet I",
    "start": "1808960",
    "end": "1815019"
  },
  {
    "text": "didn't know what fields are on that resource and I didn't know what the types are I don't know what fields are numbers whether their floats whether",
    "start": "1815019",
    "end": "1820719"
  },
  {
    "text": "they're in sweather there's strings but graph Gale tells you that in advance with the introspection query so that",
    "start": "1820719",
    "end": "1827889"
  },
  {
    "text": "schema also acts as this type system that spans between the client and the server and this data typing will be come",
    "start": "1827889",
    "end": "1833830"
  },
  {
    "text": "in handy later and there's also no support for real-time or at least no",
    "start": "1833830",
    "end": "1841320"
  },
  {
    "text": "true real-time support I would say because this is specifically because of the of the rest constraint known as the",
    "start": "1841320",
    "end": "1847119"
  },
  {
    "text": "statelessness constraint and the statelessness constraint makes it difficult for the client in the server to remember what transpired in their",
    "start": "1847119",
    "end": "1852999"
  },
  {
    "text": "conversation up until now so it's difficult for the server to say well let me push this new payload because I couldn't keep track of all the other",
    "start": "1852999",
    "end": "1858729"
  },
  {
    "text": "ones whereas in graph QL graph no subscriptions are stateful graph Gale doesn't have anything like the",
    "start": "1858729",
    "end": "1864339"
  },
  {
    "text": "statelessness constraint so it supports real-time operations via subscriptions well the trade-off here is of course",
    "start": "1864339",
    "end": "1870519"
  },
  {
    "text": "that once you have a stateful system that adds challenges when you try to scale it",
    "start": "1870519",
    "end": "1876929"
  },
  {
    "start": "1879000",
    "end": "2141000"
  },
  {
    "text": "now there are a lot of challenges that face modern API a modern API design",
    "start": "1879050",
    "end": "1885770"
  },
  {
    "text": "efficiency predictability security documentation versioning and on and on",
    "start": "1885770",
    "end": "1890960"
  },
  {
    "text": "and on and I'm gonna pick out a couple of these and talk about how graph QL addresses them or chooses explicitly to not",
    "start": "1890960",
    "end": "1898940"
  },
  {
    "text": "address them the first is efficiency and that's what",
    "start": "1898940",
    "end": "1904520"
  },
  {
    "text": "the entire demo was trying to show at the start of the talk for efficiency",
    "start": "1904520",
    "end": "1910670"
  },
  {
    "text": "there are two common problems with api's the first is called over fetching and",
    "start": "1910670",
    "end": "1915980"
  },
  {
    "text": "this is where the request contains the data that you asked for but it also contains a bunch of other data for",
    "start": "1915980",
    "end": "1921800"
  },
  {
    "text": "example like that opening crawl text that was included in the film document we didn't need that to fulfill our",
    "start": "1921800",
    "end": "1928100"
  },
  {
    "text": "requirement but the data came along nonetheless the second problem is under fetching and",
    "start": "1928100",
    "end": "1933620"
  },
  {
    "text": "under fetching is when the response does not contain enough data and this is",
    "start": "1933620",
    "end": "1939290"
  },
  {
    "text": "exactly what happens when the document that you request contains a hyper media link if you need to follow that hyper",
    "start": "1939290",
    "end": "1945140"
  },
  {
    "text": "media link through there is no recourse but to make another Network request and under fetching gets worse the better you",
    "start": "1945140",
    "end": "1954050"
  },
  {
    "text": "get at implementing the rest constraint node known as hey Dios which stands for hyper media as the engine of application",
    "start": "1954050",
    "end": "1960830"
  },
  {
    "text": "states this is the thing this is the part of the uniform in America's face constraint that makes documents reference to one another via hyper media",
    "start": "1960830",
    "end": "1967550"
  },
  {
    "text": "links the more you have of those the more subsequent network requests are necessary that's why it took about a",
    "start": "1967550",
    "end": "1972980"
  },
  {
    "text": "hundred network requests to fetch all the names of all the characters that appeared in films with Luke Skywalker",
    "start": "1972980",
    "end": "1978340"
  },
  {
    "text": "and the last point is why does this all matter well it matters because networks suck and I think we failed to appreciate",
    "start": "1978340",
    "end": "1984920"
  },
  {
    "text": "just how much of a problem this is let's make a quick comparison if we were to read one megabyte of sequential data",
    "start": "1984920",
    "end": "1991760"
  },
  {
    "text": "from a modern SSD that takes about four hundred microseconds but if we send a",
    "start": "1991760",
    "end": "1998990"
  },
  {
    "text": "packet round-trip from the u.s. to Europe that's gonna be a hundred and fifty milliseconds that's a difference",
    "start": "1998990",
    "end": "2007090"
  },
  {
    "text": "of about four hundred four hundred times that would be like the difference",
    "start": "2007090",
    "end": "2012460"
  },
  {
    "text": "between ordering something on Amazon and getting next days shipping versus getting next year shipping so it's a huge difference",
    "start": "2012460",
    "end": "2020090"
  },
  {
    "text": "and also let's not forget even if we live in developed parts of the world networks can still degrade very quickly",
    "start": "2020090",
    "end": "2026840"
  },
  {
    "text": "case in point the Wi-Fi network here at this conference or if you are at an airport right imagine trying to run that",
    "start": "2026840",
    "end": "2033260"
  },
  {
    "text": "rest demo at an airport or off of the conference Wi-Fi I don't have anybody brave enough to try that already no",
    "start": "2033260",
    "end": "2039710"
  },
  {
    "text": "hands ok and yeah and so also a lot of parts",
    "start": "2039710",
    "end": "2046220"
  },
  {
    "text": "of the world their their networks their mobile networks are just catching up",
    "start": "2046220",
    "end": "2051290"
  },
  {
    "text": "sometimes they have data allowance caps sometimes the transfer rates are capped at 2g rates and so you really want to be",
    "start": "2051290",
    "end": "2059210"
  },
  {
    "text": "careful with using the network with executing superfluous network requests",
    "start": "2059210",
    "end": "2065378"
  },
  {
    "text": "and consequently this is what graph QL is great at this is where graph Gale",
    "start": "2065379",
    "end": "2070700"
  },
  {
    "text": "shines the client gets to declare all the data that it wants in advance and it",
    "start": "2070700",
    "end": "2075740"
  },
  {
    "text": "gets exactly that data no more no less in a single network round-trip this also",
    "start": "2075740",
    "end": "2082669"
  },
  {
    "text": "reduces the need for client-side joins error handling and retry so the type",
    "start": "2082669",
    "end": "2090830"
  },
  {
    "text": "system from the schema we know the types of all the different nodes that are in",
    "start": "2090830",
    "end": "2096470"
  },
  {
    "text": "the graph and the scalar fields that are on those types and what this allows us to do is to have increased",
    "start": "2096470",
    "end": "2102140"
  },
  {
    "text": "predictability when working with our API it reduces the cases where we try to",
    "start": "2102140",
    "end": "2107750"
  },
  {
    "text": "deserialize a field into a mismatch data type and get an exception it reduces the cases where a field doesn't exist at all",
    "start": "2107750",
    "end": "2114260"
  },
  {
    "text": "and it works particularly well with native clients that are built with statically typed languages such as",
    "start": "2114260",
    "end": "2120740"
  },
  {
    "text": "Objective C and Java and at Facebook in particular this allowed us to generate",
    "start": "2120740",
    "end": "2126859"
  },
  {
    "text": "typesafe client code for ios and android which means that we can detect",
    "start": "2126859",
    "end": "2132100"
  },
  {
    "text": "compatibility breaking changes as quickly as possible in the development feedback loop",
    "start": "2132100",
    "end": "2139240"
  },
  {
    "start": "2141000",
    "end": "2209000"
  },
  {
    "text": "another really interesting benefit that graphical brings is that in a tables fluent domain modeling and this is from",
    "start": "2141790",
    "end": "2149809"
  },
  {
    "text": "the domain driven design book by Eric Evans in 2004 Eric had this idea that",
    "start": "2149809",
    "end": "2156230"
  },
  {
    "text": "both technical and non-technical people develop what he called ubiquitous language and the ubiquitous language is",
    "start": "2156230",
    "end": "2162230"
  },
  {
    "text": "just plain language that is used to describe the business processes entities and relationships well with graph QL",
    "start": "2162230",
    "end": "2169369"
  },
  {
    "text": "because the relations are always nodes and edges the queries end up being a",
    "start": "2169369",
    "end": "2174970"
  },
  {
    "text": "very close a very closed model of the language that you use to describe what's",
    "start": "2174970",
    "end": "2181309"
  },
  {
    "text": "going on and that means instead of describing your business process in terms of HTTP verbs and resources and/or",
    "start": "2181309",
    "end": "2188650"
  },
  {
    "text": "tables and joins and rows you're now just using natural language you're saying for the film get me all the",
    "start": "2188650",
    "end": "2194329"
  },
  {
    "text": "characters in the film for the character get the name and this means that you can",
    "start": "2194329",
    "end": "2200299"
  },
  {
    "text": "develop this shared language more effectively you can develop the ubiquitous language to mean more to more people with less confusion versioning",
    "start": "2200299",
    "end": "2210819"
  },
  {
    "start": "2209000",
    "end": "2260000"
  },
  {
    "text": "the web has really spoiled us if anybody's been building native applications for mobile you know that",
    "start": "2210819",
    "end": "2217099"
  },
  {
    "text": "this versioning strategies are not really foolproof because the web essentially gives you the ability to",
    "start": "2217099",
    "end": "2222530"
  },
  {
    "text": "force the client to download the latest version of the app every time they visit the web page but on a mobile device",
    "start": "2222530",
    "end": "2227589"
  },
  {
    "text": "maybe the user has run out of storage maybe the user has chosen to disable automatic updates you can't guarantee",
    "start": "2227589",
    "end": "2233390"
  },
  {
    "text": "that that native application is running at the version that you want to run and as a result the best practice for graph",
    "start": "2233390",
    "end": "2239359"
  },
  {
    "text": "QL api's is to not version them and we know this is possible because the largest grunt of fuel API and use that",
    "start": "2239359",
    "end": "2244940"
  },
  {
    "text": "Facebook has over 10,000 types and has never been versioned and the cool thing is that you can fire up a version of the",
    "start": "2244940",
    "end": "2251089"
  },
  {
    "text": "the Facebook mobile app back from 2013 and it still works",
    "start": "2251089",
    "end": "2256780"
  },
  {
    "text": "to lien documentation graphical is probably the best example of a graph QL tool but there's other tooling that you",
    "start": "2260960",
    "end": "2266900"
  },
  {
    "text": "can build with the introspection query and the graphical language specification the best example would be the IDE",
    "start": "2266900",
    "end": "2273830"
  },
  {
    "text": "integration with vs code here's a quick demo of it let me see if I can get this",
    "start": "2273830",
    "end": "2279410"
  },
  {
    "text": "playing so here if you're in vs code you don't have to ever have to leave vs code",
    "start": "2279410",
    "end": "2284690"
  },
  {
    "text": "you can start writing the query you can start pulling out the fields in the",
    "start": "2284690",
    "end": "2289730"
  },
  {
    "text": "different types you can get in line intellisense to tell you that something",
    "start": "2289730",
    "end": "2296030"
  },
  {
    "text": "is wrong a field doesn't exist or you've validated the graphic your syntax rules and all this because we've pulled the",
    "start": "2296030",
    "end": "2303380"
  },
  {
    "text": "entire schema from the server by way of introspection query earlier so the client knows before it ever has to",
    "start": "2303380",
    "end": "2308930"
  },
  {
    "text": "execute the network request what is a valid request look like okay",
    "start": "2308930",
    "end": "2317000"
  },
  {
    "start": "2316000",
    "end": "2338000"
  },
  {
    "text": "authentication and authorization this is this is one of the most commonly asked questions for graph QL how do you do",
    "start": "2317000",
    "end": "2322070"
  },
  {
    "text": "authentication how do you do authorization I don't have an API where anybody can just ask for anything and quick refresher authentication refers to",
    "start": "2322070",
    "end": "2329870"
  },
  {
    "text": "who you are and whether you can prove who you are an authorization refers to whether you have the permission to do",
    "start": "2329870",
    "end": "2335870"
  },
  {
    "text": "what you want to do so to make that to make it more clear we're going to look",
    "start": "2335870",
    "end": "2342770"
  },
  {
    "start": "2338000",
    "end": "2476000"
  },
  {
    "text": "at the stack stack diagram authentication and authorization actually don't happen in graph QL at all",
    "start": "2342770",
    "end": "2349280"
  },
  {
    "text": "and so it's a bit of a weird question to ask how you solve this problem because if you think about a REST API",
    "start": "2349280",
    "end": "2354890"
  },
  {
    "text": "it also doesn't happen inside the rest layer either it happens before at the HTTP server and that's where this server",
    "start": "2354890",
    "end": "2360710"
  },
  {
    "text": "is checking the validity of the access token that the client is providing or some sort of HTTP header right and if",
    "start": "2360710",
    "end": "2367580"
  },
  {
    "text": "that's that token has a bad signature it has a bad validity period well then the server just rejects that request it just",
    "start": "2367580",
    "end": "2373520"
  },
  {
    "text": "says this is a bad request you don't have a valid auth token I'm not gonna go any further and try to execute anything else and so it is with graph QL if",
    "start": "2373520",
    "end": "2380540"
  },
  {
    "text": "there's an authentication token and that authentication token doesn't pass the check you don't call graph QL at all there's a",
    "start": "2380540",
    "end": "2387050"
  },
  {
    "text": "server layer ahead of it that integrates with the transport layer that will reject those requests",
    "start": "2387050",
    "end": "2393570"
  },
  {
    "text": "authorization is a form of business logic that's why I've pulled out into this business logic layer and to",
    "start": "2393570",
    "end": "2399120"
  },
  {
    "text": "understand why authorization doesn't go inside graph QL let's use the counter position what if it did go inside graph",
    "start": "2399120",
    "end": "2405210"
  },
  {
    "text": "QL what if I had a rule what if I were building a blog and I had an authorization rule that said something",
    "start": "2405210",
    "end": "2411150"
  },
  {
    "text": "like only authors and admins can view a blog post in a draft state if I put that",
    "start": "2411150",
    "end": "2418740"
  },
  {
    "text": "rule into the graph QL server and I have a legacy REST API and I also have an RPC",
    "start": "2418740",
    "end": "2423990"
  },
  {
    "text": "API where exactly is that rule enforced if it's enforcement a graphical server",
    "start": "2423990",
    "end": "2429660"
  },
  {
    "text": "my best recourse is to copy that code into the other ways in which the data",
    "start": "2429660",
    "end": "2434790"
  },
  {
    "text": "can execute write and copy the code around it doesn't seem like a good idea",
    "start": "2434790",
    "end": "2440540"
  },
  {
    "text": "think of another way how would you unit test this business logic rule only",
    "start": "2440540",
    "end": "2446600"
  },
  {
    "text": "authors and admins can view their draft posts if it were in the graphical server again that means that you have to lock",
    "start": "2446600",
    "end": "2453500"
  },
  {
    "text": "load up the graphical server and then run an integration test to just test that one rule that authorization rule so",
    "start": "2453500",
    "end": "2460260"
  },
  {
    "text": "that's why graph QL authorization rules belong in the business logic layer where",
    "start": "2460260",
    "end": "2465660"
  },
  {
    "text": "the rule is uniformly enforced across rest graph QL RPC and any other way that",
    "start": "2465660",
    "end": "2471720"
  },
  {
    "text": "you use to call into your business logic",
    "start": "2471720",
    "end": "2475820"
  },
  {
    "start": "2476000",
    "end": "2561000"
  },
  {
    "text": "now I just covered a lot of challenges from on an API and that's just the surface and we know that building",
    "start": "2477500",
    "end": "2483840"
  },
  {
    "text": "graphical servers is difficult that's why at AWS we built apps sync app sync",
    "start": "2483840",
    "end": "2490380"
  },
  {
    "text": "is a managed graph QL service that deals with a lot of the most common challenges that come up when you're trying to build",
    "start": "2490380",
    "end": "2496110"
  },
  {
    "text": "a graphical server what I showed you earlier with type graph QL and V s code was",
    "start": "2496110",
    "end": "2501210"
  },
  {
    "text": "where you're composing this schema yourself and you're starting the server yourself but if you want to go the serverless route you want to go to",
    "start": "2501210",
    "end": "2506700"
  },
  {
    "text": "managed route you want to take a look at app sync first and just to go over some of the common challenges that app sync",
    "start": "2506700",
    "end": "2512580"
  },
  {
    "text": "deals with authentication and authorization it's automatically integrated with Cognito user pools for",
    "start": "2512580",
    "end": "2518520"
  },
  {
    "text": "automatic real-time updates app sync supports subscriptions and I mentioned earlier that's very challenging just to",
    "start": "2518520",
    "end": "2524040"
  },
  {
    "text": "scale out a stateful real-time server here especially for subscription support apps Inc does it for you and not only",
    "start": "2524040",
    "end": "2530849"
  },
  {
    "text": "that it triggers those subscriptions whenever a declarative set of mutations is executed",
    "start": "2530849",
    "end": "2536089"
  },
  {
    "text": "it also supports connectors with common AWS data sources such as lambda s3 or",
    "start": "2536089",
    "end": "2542190"
  },
  {
    "text": "our server lists and more and also on the front end when you're using app sync",
    "start": "2542190",
    "end": "2548099"
  },
  {
    "text": "you have these really cool features that allow you to build offline first capabilities so you can still use the",
    "start": "2548099",
    "end": "2553380"
  },
  {
    "text": "the api's when your client is offline and then later on appsync can help you resolve the document conflicts for the",
    "start": "2553380",
    "end": "2558839"
  },
  {
    "text": "updates ok when should you use graph QL",
    "start": "2558839",
    "end": "2566310"
  },
  {
    "start": "2561000",
    "end": "2679000"
  },
  {
    "text": "I don't think this question is talked about enough anytime you use something new there's a learning curve there's a",
    "start": "2566310",
    "end": "2574290"
  },
  {
    "text": "cost that has to be paid compared to the thing that you already know so if you already have a REST API on you know perfectly well how to use the REST API",
    "start": "2574290",
    "end": "2580130"
  },
  {
    "text": "when should you move to graphical or from RPC to graph Gale from anything in a graph QL and I'm gonna give you a",
    "start": "2580130",
    "end": "2587579"
  },
  {
    "text": "general answer this question it's really when do you use any new technology and I stole this from Martin Fowler he calls",
    "start": "2587579",
    "end": "2595230"
  },
  {
    "text": "this the design stamina hypothesis and this came up when he was asking the question what is the purpose of good",
    "start": "2595230",
    "end": "2601200"
  },
  {
    "text": "design he visualized it like this if you have on the x-axis time and on the",
    "start": "2601200",
    "end": "2607680"
  },
  {
    "text": "y-axis cumulative functionality that your project has to deliver then when",
    "start": "2607680",
    "end": "2613319"
  },
  {
    "text": "you start the project with no design you can actually move very quickly in the beginning because there's nothing to",
    "start": "2613319",
    "end": "2619440"
  },
  {
    "text": "getting your way that's why the slope in the beginning is very high buts as you start to add more and more features the",
    "start": "2619440",
    "end": "2626640"
  },
  {
    "text": "lack of design starts to starts to force the project to weigh in on itself changes are slower when you change one",
    "start": "2626640",
    "end": "2632940"
  },
  {
    "text": "thing here something else breaks somewhere else so you need organization you need design consequently he believes",
    "start": "2632940",
    "end": "2639329"
  },
  {
    "text": "that good design looks like this it means that any time you spend choosing the right design pattern on the right",
    "start": "2639329",
    "end": "2644609"
  },
  {
    "text": "framework or adding documentation is time spent not adding incremental features that's why good design takes",
    "start": "2644609",
    "end": "2651000"
  },
  {
    "text": "away from cumulative functionality in the beginning and where these two lines cross is called the design payoff line",
    "start": "2651000",
    "end": "2656869"
  },
  {
    "text": "so the overly simplified conclusion here is that if you're below the design payoff line in terms of",
    "start": "2656869",
    "end": "2661950"
  },
  {
    "text": "complexity you don't need to reach for something complex but if you're going",
    "start": "2661950",
    "end": "2667530"
  },
  {
    "text": "beyond the design payoff line in terms of complexity you need to have good design in place whether that's design patterns whether that's rich frameworks",
    "start": "2667530",
    "end": "2673440"
  },
  {
    "text": "whether that's react whether that's relay whether it's graph QL that's when you want to start thinking about it okay",
    "start": "2673440",
    "end": "2682340"
  },
  {
    "start": "2679000",
    "end": "2728000"
  },
  {
    "text": "it looks like we are out of time but very quickly you want to get graphical and production do not build the entire",
    "start": "2682340",
    "end": "2687900"
  },
  {
    "text": "schema upfront build it piecemeal definitely share and educate your team share the information with your team so",
    "start": "2687900",
    "end": "2694710"
  },
  {
    "text": "everybody knows what's happening check out a lot of these advanced use cases for graph QL people use them as API",
    "start": "2694710",
    "end": "2700260"
  },
  {
    "text": "gateways people use them for third-party services people use them to make service to service calls definitely check out",
    "start": "2700260",
    "end": "2707310"
  },
  {
    "text": "app sync Apollo server Prisma and hoster 'his or is really cool if you're using Postgres you can generate a graphical",
    "start": "2707310",
    "end": "2713760"
  },
  {
    "text": "server right on top of Postgres some of the resources and thank you very much i'm roberts please remember to fill out",
    "start": "2713760",
    "end": "2720840"
  },
  {
    "text": "the survey at the end it's in the events app thank you very much [Applause]",
    "start": "2720840",
    "end": "2730459"
  }
]