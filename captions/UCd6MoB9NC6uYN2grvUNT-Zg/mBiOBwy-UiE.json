[
  {
    "start": "0",
    "end": "29000"
  },
  {
    "text": "good morning builders hope everyone enjoyed the keynote session containers",
    "start": "30",
    "end": "5040"
  },
  {
    "text": "are changing the way that we develop test and deploy software making it",
    "start": "5040",
    "end": "10860"
  },
  {
    "text": "faster for us to test and deploy and experiment with these new features and capabilities but with these newfound superpowers of rapid deployment come a",
    "start": "10860",
    "end": "18300"
  },
  {
    "text": "newfound set of responsibilities and most of us are turning to container orchestration tools to help us solve",
    "start": "18300",
    "end": "23760"
  },
  {
    "text": "those newfound sets of responsibilities since about 2014 AWS has been innovating",
    "start": "23760",
    "end": "30359"
  },
  {
    "start": "29000",
    "end": "29000"
  },
  {
    "text": "on behalf of you the builders to help solve some of these challenges for you we started introducing ECS in around",
    "start": "30359",
    "end": "36360"
  },
  {
    "text": "2014 or elastic container service then in 2017 we introduced eks or elastic",
    "start": "36360",
    "end": "42329"
  },
  {
    "text": "container service for kubernetes 2015 if I recall correctly we introduced ECR",
    "start": "42329",
    "end": "48480"
  },
  {
    "text": "elastic container registry which is a docker compliant container image registry service then again in 2017 we",
    "start": "48480",
    "end": "56190"
  },
  {
    "text": "announced a really exciting new technology called Fargate which allows you to provision your containerized",
    "start": "56190",
    "end": "61590"
  },
  {
    "text": "applications within an ECS cluster without having to worry about managing clusters of ec2 instances and all the",
    "start": "61590",
    "end": "68460"
  },
  {
    "text": "heavy lifting that goes goes along with scheduling scaling and managing those instances and in the fullness of time we",
    "start": "68460",
    "end": "75030"
  },
  {
    "text": "hope to bring that same capability over to to over 2 e KS as well both ECS and",
    "start": "75030",
    "end": "81270"
  },
  {
    "text": "ich es take away a lot of the heavy lifting that's associated with typically managing complex cluster orchestration",
    "start": "81270",
    "end": "87509"
  },
  {
    "text": "frameworks and both of those services allow you to bring along your own ec2 instances and run your containerized",
    "start": "87509",
    "end": "92850"
  },
  {
    "text": "applications on those ec2 instances now as Adam mentioned kubernetes is a very",
    "start": "92850",
    "end": "99390"
  },
  {
    "text": "popular service for orchestrating containers at scale and in 2017 at our",
    "start": "99390",
    "end": "104399"
  },
  {
    "text": "reinvent conference we announced the availability or introduced should I say the elastic container service for",
    "start": "104399",
    "end": "110040"
  },
  {
    "text": "kubernetes and over the rest of this session for the next 28 minutes and 15 seconds what I'm going to share with you is some",
    "start": "110040",
    "end": "116640"
  },
  {
    "text": "insights and tips on how to get the most out of kubernetes when you're trying to deploy it on top of AWS we'll talk about",
    "start": "116640",
    "end": "122670"
  },
  {
    "text": "some of the options that are available to you and we'll help you try and avoid some of the pitfalls to help get you up",
    "start": "122670",
    "end": "127710"
  },
  {
    "text": "and running as quickly as possible move out of the way so that you can start developing those really awesome and exciting capability",
    "start": "127710",
    "end": "133620"
  },
  {
    "text": "and features that your customers are asking for it's always good to start with a level playing field can I just",
    "start": "133620",
    "end": "139830"
  },
  {
    "start": "138000",
    "end": "138000"
  },
  {
    "text": "have a quick show of hands here who has heard of kubernetes okay who's using",
    "start": "139830",
    "end": "145200"
  },
  {
    "text": "kubernetes okay cool good numbers so",
    "start": "145200",
    "end": "150629"
  },
  {
    "text": "Cuba Nettie's tune open-source projects it was started at Google and around about 2014 from memory and by three",
    "start": "150629",
    "end": "157560"
  },
  {
    "text": "engineers a lot of its design principles and primitives were derived from a system that Google used internally",
    "start": "157560",
    "end": "162870"
  },
  {
    "text": "called Borg which they used to manage and orchestrate their workloads across their global infrastructure it's an open",
    "start": "162870",
    "end": "168599"
  },
  {
    "text": "source container orchestration tool that automates the management the deployment and the scaling of your containerized",
    "start": "168599",
    "end": "173849"
  },
  {
    "text": "applications and in 2015 if memory serves me correctly it was the first",
    "start": "173849",
    "end": "179370"
  },
  {
    "text": "project that was picked up by the cloud native computing foundation or the C&C F it's since gone on to graduate through",
    "start": "179370",
    "end": "186120"
  },
  {
    "text": "the CNC F program so congratulations to kubernetes on that milestone an interesting facts the CNC F ran a survey",
    "start": "186120",
    "end": "193319"
  },
  {
    "text": "a little while ago and close to 60% of kubernetes deployments actually run on",
    "start": "193319",
    "end": "198930"
  },
  {
    "text": "AWS today that's a massive amount of kubernetes deployments and there's a lot of information and feedback that we've",
    "start": "198930",
    "end": "204180"
  },
  {
    "text": "been able to gather from customers like yourselves and I'm hoping I can distill some of that down over the next few",
    "start": "204180",
    "end": "209730"
  },
  {
    "text": "slides to give you an idea of how we can better deploy and implement kubernetes on the platform so without further ado",
    "start": "209730",
    "end": "215340"
  },
  {
    "text": "let's dive straight into the top tips for deploying my first tip and those of",
    "start": "215340",
    "end": "221130"
  },
  {
    "text": "you that have deployed a kubernetes cluster yourself before on AWS or in fact on any platform I'm sure can read",
    "start": "221130",
    "end": "226349"
  },
  {
    "text": "this this tip resonates with you but the tip is never try and build a kubernetes cluster by hand a quick show of hands",
    "start": "226349",
    "end": "231989"
  },
  {
    "text": "has anyone ever tried to build a kubernetes cluster the hard way before few people put your hands up if you",
    "start": "231989",
    "end": "239760"
  },
  {
    "text": "thought it was easy yes that's about what we hear from people it's not an easy process there's a lot of complexity",
    "start": "239760",
    "end": "246299"
  },
  {
    "text": "involved in provisioning kubernetes and clusters on top of AWS in fact wherever you deploy them so there are lots of",
    "start": "246299",
    "end": "252269"
  },
  {
    "start": "252000",
    "end": "252000"
  },
  {
    "text": "options available to you here is a list of some of the community available options for you so cops or kubernetes",
    "start": "252269",
    "end": "257400"
  },
  {
    "text": "operations is a very popular open-source project that helps you stand up the base resources that are required through a",
    "start": "257400",
    "end": "263940"
  },
  {
    "text": "few command lines and also lays out an optimized or a best practice configuration for operating a baseline",
    "start": "263940",
    "end": "270870"
  },
  {
    "text": "kubernetes cluster tools like Kubb ADM will they expect you to have the infrastructure there already but once",
    "start": "270870",
    "end": "276810"
  },
  {
    "text": "you've got the infrastructure it will then lay out the foundations and the configuration for you to run kubernetes a tool that was released recently in",
    "start": "276810",
    "end": "284100"
  },
  {
    "text": "conjunction with the general availability of elastic container service for kubernetes with eks CTL this",
    "start": "284100",
    "end": "289410"
  },
  {
    "text": "is a tool that streamlines the process for the provisioning of an eks cluster if you're looking for more turnkey or",
    "start": "289410",
    "end": "295350"
  },
  {
    "text": "enterprise-grade solutions eks is obviously a very popular option that we're seeing",
    "start": "295350",
    "end": "300480"
  },
  {
    "text": "customers turn to now but there are options by organizations like red hats and their open shift product as one some",
    "start": "300480",
    "end": "306990"
  },
  {
    "text": "of our partners like hep CEO of released QuickStart guides that help you get started deploying kubernetes on top of",
    "start": "306990",
    "end": "312000"
  },
  {
    "text": "the platform very quickly with pre-canned cloud formation templates and step-by-step guide so I would encourage",
    "start": "312000",
    "end": "317370"
  },
  {
    "text": "you to hop along and look at some of those and then we've got some of these other options that I've listed down the bottom here so things like cloud",
    "start": "317370",
    "end": "322890"
  },
  {
    "text": "formation and terraform terraform very popular with our customers and in again",
    "start": "322890",
    "end": "327990"
  },
  {
    "text": "in conjunction with the availability of eks some very thoughtful individuals put",
    "start": "327990",
    "end": "333900"
  },
  {
    "text": "together an e KS module for terraformers also you can now provision eks clusters using terraform and then we've got the",
    "start": "333900",
    "end": "339960"
  },
  {
    "text": "standard configuration management tools like ansible and puppet which we can use to manage the configuration of our clusters once we've deployed them cops",
    "start": "339960",
    "end": "347640"
  },
  {
    "start": "345000",
    "end": "345000"
  },
  {
    "text": "is a very popular option as I mentioned before and in fact we have an open-source workshop if you pop along to",
    "start": "347640",
    "end": "352800"
  },
  {
    "text": "AWS samples the github organization or the project you'll see the workshop there and it guides you through provisioning a cluster using the cops",
    "start": "352800",
    "end": "358980"
  },
  {
    "text": "tool it's an open source it's driven by the special interest group for AWS within the kubernetes community there's",
    "start": "358980",
    "end": "365460"
  },
  {
    "text": "regular office hours and if you'd like to learn more about that I'll encourage you to pop along there and have a listen one of the really nice features of the",
    "start": "365460",
    "end": "371790"
  },
  {
    "text": "cops project is it can out port story outputs CloudFormation templates and terraform manifest files as well which",
    "start": "371790",
    "end": "378180"
  },
  {
    "text": "you can then use to drive the deployment of your own clusters or use as a baseline foundation to start customizing",
    "start": "378180",
    "end": "383820"
  },
  {
    "text": "and configuring your own kubernetes clusters here are some of the options that are typically available when we",
    "start": "383820",
    "end": "388830"
  },
  {
    "text": "deploy a cluster using cops you can see there we're specifying some availability zones we're choosing a master count so",
    "start": "388830",
    "end": "394950"
  },
  {
    "text": "this is the control plane that's responsible for scheduling of our tasks or our pods across the cluster we're choosing an instant size and we're",
    "start": "394950",
    "end": "402009"
  },
  {
    "text": "specifying the nodes and the nodes of where the Attic the action actually happens this is where a containerized application will get scheduled there's a",
    "start": "402009",
    "end": "408699"
  },
  {
    "text": "few more variables in there but essentially when we run this command that gets written to a configuration stored in s3 and then our cluster we get",
    "start": "408699",
    "end": "415419"
  },
  {
    "text": "we can then deploy a cluster using that configuration very quick very easy and a really good way to get started with",
    "start": "415419",
    "end": "420490"
  },
  {
    "text": "kubernetes quickly once we've deployed the cluster though there is a lot of operational work that goes into managing",
    "start": "420490",
    "end": "426250"
  },
  {
    "text": "and maintaining that cluster we've got things like security of the cluster we've got managing the reliability making sure that our nodes and our",
    "start": "426250",
    "end": "432370"
  },
  {
    "text": "masters are highly available we've got to make sure that we're backing up the persistent data store the stores the state of our API all of this heavy",
    "start": "432370",
    "end": "439360"
  },
  {
    "text": "lifting that goes into managing the cluster really gets in the way of what we're here to do which is focus on",
    "start": "439360",
    "end": "444699"
  },
  {
    "text": "building cool applications for our customers so we listen to that feedback and we introduced eks or developed eks",
    "start": "444699",
    "end": "450939"
  },
  {
    "text": "elastic container service for kubernetes which which went GA and around june time currently available in u.s. East One and",
    "start": "450939",
    "end": "458490"
  },
  {
    "text": "us to West two regions what is eks well",
    "start": "458490",
    "end": "463539"
  },
  {
    "start": "462000",
    "end": "462000"
  },
  {
    "text": "it's this it's a multi availability zone deployed kubernetes control plants and",
    "start": "463539",
    "end": "469960"
  },
  {
    "text": "we typically deploy it with always deploy three master nodes for you this is where the cluster itself is managed",
    "start": "469960",
    "end": "476050"
  },
  {
    "text": "and operated from we provision for you a highly available distributed data story net CD across three availability zones",
    "start": "476050",
    "end": "482800"
  },
  {
    "text": "again to give you that peace of mind that we're anticipating failure we're thinking operational best practices and",
    "start": "482800",
    "end": "488319"
  },
  {
    "text": "then we give you the ability then as I mentioned previously to bring your own ec2 instances to the party and run your",
    "start": "488319",
    "end": "493449"
  },
  {
    "text": "containerized applications on those ec2 instances once we've provisioned that cluster for you using a simple",
    "start": "493449",
    "end": "499750"
  },
  {
    "text": "command-line tool or using the user interface you end up with an endpoint and we take the endpoint we feed that",
    "start": "499750",
    "end": "505479"
  },
  {
    "text": "into our cube control utility and through the magic of api's we're able to",
    "start": "505479",
    "end": "510490"
  },
  {
    "text": "start provisioning containerized workloads into our kubernetes cluster so",
    "start": "510490",
    "end": "516039"
  },
  {
    "text": "when we're thinking about deploying these clusters remember there are options out there that that are much easy and doing it the hard way use the",
    "start": "516039",
    "end": "521620"
  },
  {
    "text": "community tools like cops always think about provisioning this infrastructure as code and cops goes a long way to",
    "start": "521620",
    "end": "527199"
  },
  {
    "text": "helping us do that cloud formation templates and terraform are also really good options to help you get moving with",
    "start": "527199",
    "end": "533050"
  },
  {
    "text": "this enforced code pattern and eks is a really great option to get started with running",
    "start": "533050",
    "end": "538360"
  },
  {
    "text": "kubernetes on AWS and currently available in u.s. East One and us West",
    "start": "538360",
    "end": "543610"
  },
  {
    "text": "to my next tip is around networking",
    "start": "543610",
    "end": "549040"
  },
  {
    "text": "options now networking is at the core of most or if not all distributed systems and kubernetes is no different and the",
    "start": "549040",
    "end": "555069"
  },
  {
    "text": "applications that you deploy on kubernetes are no different we really have to spend some time thinking about this and understanding the requirements",
    "start": "555069",
    "end": "560860"
  },
  {
    "start": "558000",
    "end": "558000"
  },
  {
    "text": "of our application kubernetes has a very simple principle around networking every",
    "start": "560860",
    "end": "565870"
  },
  {
    "text": "pod needs to have its own IP address and all of those pods in the cluster should be able to talk to one another how do we",
    "start": "565870",
    "end": "571749"
  },
  {
    "text": "go about implementing this IP per pod model few options kubernetes supports",
    "start": "571749",
    "end": "579279"
  },
  {
    "text": "the cni framework which is an open standard for essentially wiring your containers into an underlying",
    "start": "579279",
    "end": "584589"
  },
  {
    "text": "software-defined network container networking interface it's a pluggable architecture which means that there are",
    "start": "584589",
    "end": "589809"
  },
  {
    "text": "lots of third parties out there developing these CLI plugins that we can bring into kubernetes each of them",
    "start": "589809",
    "end": "595480"
  },
  {
    "text": "offers a variety of different capabilities it's also a CNC F project so its development is closely aligned",
    "start": "595480",
    "end": "600970"
  },
  {
    "text": "with that of the kubernetes project as well which is great here's an example of some of the options that are available",
    "start": "600970",
    "end": "606670"
  },
  {
    "start": "605000",
    "end": "605000"
  },
  {
    "text": "to you with regards to CNI plugins flannel is a very popular one we've also",
    "start": "606670",
    "end": "611889"
  },
  {
    "text": "has a very popular plugin there we've been developing our own and I'll talk a little bit more about that shortly as",
    "start": "611889",
    "end": "617170"
  },
  {
    "text": "well lots of options how do you go about choosing those wealth again back to my original statement understand your",
    "start": "617170",
    "end": "623259"
  },
  {
    "text": "requirements each of these plugins requires a very specific environment to operate in some require a data store to",
    "start": "623259",
    "end": "629769"
  },
  {
    "text": "store the configuration some require an overlay network some offer advanced capabilities like the ability to segment",
    "start": "629769",
    "end": "636160"
  },
  {
    "text": "traffic between the applications that you're deploying within the cluster so understand what you're looking for",
    "start": "636160",
    "end": "641259"
  },
  {
    "text": "before you make those decisions another option especially when we're",
    "start": "641259",
    "end": "646750"
  },
  {
    "text": "deploying clusters using the cop's tool is cube Annette cube Nets a very simple",
    "start": "646750",
    "end": "651819"
  },
  {
    "text": "implement a simple implementation of a networking provider that enables us to network our containers or our pods",
    "start": "651819",
    "end": "656920"
  },
  {
    "text": "within the cluster now the way cube networks is it takes a cider block and allocates a cider block to each of the",
    "start": "656920",
    "end": "663490"
  },
  {
    "text": "nodes that we deploy within the cluster then when we provision a pod excuse me each pod gets an IP address from that",
    "start": "663490",
    "end": "670430"
  },
  {
    "text": "side a block that we've allocated hoobnet then registers The Cider block this attached to that ec2 instance",
    "start": "670430",
    "end": "677360"
  },
  {
    "text": "within the VPC round table that's how the routing happens between the various pods within the various nodes across the",
    "start": "677360",
    "end": "683870"
  },
  {
    "text": "cluster those of you that are familiar with VPC networking and some of the constraints of that you will",
    "start": "683870",
    "end": "689180"
  },
  {
    "text": "straightaway realize that there's a limit there around 50 routes per VPC route table this might be a reason for",
    "start": "689180",
    "end": "695420"
  },
  {
    "text": "you not to choose to use cube that especially if you're thinking of scaling your cluster beyond 50 nodes so what",
    "start": "695420",
    "end": "700940"
  },
  {
    "text": "other options are there overlay networks and I mentioned overlay networks briefly earlier on why might I choose to deploy",
    "start": "700940",
    "end": "708140"
  },
  {
    "start": "703000",
    "end": "703000"
  },
  {
    "text": "an overlay network well it could be for the obvious reason I just mentioned perhaps I need more nodes than the cube",
    "start": "708140",
    "end": "713930"
  },
  {
    "text": "net provider supports or offers perhaps I've architected my VP CMI subnets with",
    "start": "713930",
    "end": "719780"
  },
  {
    "text": "my original design which related to hundreds of ec2 instances which is very different to thousands of containers",
    "start": "719780",
    "end": "726500"
  },
  {
    "text": "each of which need their own IP address so it might be simply I just don't have enough IPS or it might be that I want",
    "start": "726500",
    "end": "732290"
  },
  {
    "text": "additional capabilities over and above what the standard and networking providers can offer me so things like",
    "start": "732290",
    "end": "737510"
  },
  {
    "text": "network policies I've called out specifically they'll talk more about that shortly one simple implement a simple",
    "start": "737510",
    "end": "743840"
  },
  {
    "start": "742000",
    "end": "742000"
  },
  {
    "text": "implementation of a networking provider that supports overlay networking is flannel so flannel can be deployed again",
    "start": "743840",
    "end": "750260"
  },
  {
    "text": "using cops through a few configuration options and the way this works is very simple it has a has a bridge adapter and",
    "start": "750260",
    "end": "757700"
  },
  {
    "text": "a daemon that sits on each of the nodes essentially all of the packets that need to reverse the network getting capsulated with a few bits of",
    "start": "757700",
    "end": "763970"
  },
  {
    "text": "information about the destination and the source of those those packets that need to reverse the network and then the",
    "start": "763970",
    "end": "770060"
  },
  {
    "text": "pods sorry the packets are sent out through the elastic network interface of the hosts encapsulated passed on to the",
    "start": "770060",
    "end": "776810"
  },
  {
    "text": "destination node D encapsulated at the other side and forwarded on to the appropriate pod this is great it's very",
    "start": "776810",
    "end": "782900"
  },
  {
    "text": "simple it's very performance however it does come with some challenges I mentioned encapsulation and",
    "start": "782900",
    "end": "789500"
  },
  {
    "text": "encapsulation incurs some performance penalties there's lots of CPU cycles associated with encapsulating and D",
    "start": "789500",
    "end": "794690"
  },
  {
    "text": "encapsulating packets so this is something to be mindful of do you need an overlay Network not",
    "start": "794690",
    "end": "801210"
  },
  {
    "text": "necessarily I mentioned we've been developing our own capability in a known seer and I plug in and this is the cni",
    "start": "801210",
    "end": "807930"
  },
  {
    "start": "802000",
    "end": "802000"
  },
  {
    "text": "plug in the Amazon VP CC and I plug in that we've developed in conjunction with the launch of e K s the way this works",
    "start": "807930",
    "end": "814230"
  },
  {
    "text": "is we actually assign the pods within the kubernetes cluster their own IP",
    "start": "814230",
    "end": "819750"
  },
  {
    "text": "address which is native to the V PC itself so essentially each of the pods within you within your cluster acts and",
    "start": "819750",
    "end": "826110"
  },
  {
    "text": "behave very similarly to that of an ec2 instance so you can see here when I start up my cluster I have a CNI plugin",
    "start": "826110",
    "end": "831660"
  },
  {
    "text": "it reaches out to the V PC it gets say an IP address or a set of secondary IP addresses and allocates those to the",
    "start": "831660",
    "end": "838410"
  },
  {
    "text": "elastic network interface of the node when a pod is started so my java pod here it starts up it requests an IP",
    "start": "838410",
    "end": "844650"
  },
  {
    "text": "address and we allocate an IP address one of those secondary addresses that's attached to the primary interface to",
    "start": "844650",
    "end": "850380"
  },
  {
    "text": "that pod all of a sudden then that pod is able to route natively across the V PC using the standard V PC routing",
    "start": "850380",
    "end": "856800"
  },
  {
    "text": "fabric there's a really performant option there's no encapsulation and decapsulation and using tools like V PC",
    "start": "856800",
    "end": "862350"
  },
  {
    "text": "flow logs we can gain much more visibility into the traffic as it starts to reverse our cluster that's available",
    "start": "862350",
    "end": "868770"
  },
  {
    "text": "online now it's an open source project it's out of alpha I think now it's general or stable release so I would",
    "start": "868770",
    "end": "875130"
  },
  {
    "text": "encourage you to hop along and have a look at this it also isn't restricted to working with eks so you can actually use",
    "start": "875130",
    "end": "880440"
  },
  {
    "text": "this plug-in with your own deployments of kubernetes using things like cops so",
    "start": "880440",
    "end": "887670"
  },
  {
    "text": "with regards to networking all of our pods needs are at need their own IP addresses to communicate with one another as I mentioned before cops the",
    "start": "887670",
    "end": "895080"
  },
  {
    "text": "tallit for deploying clusters defaults to using the cube net provider it has some limitations so just be mindful of",
    "start": "895080",
    "end": "900750"
  },
  {
    "text": "the potential scale of your cluster CNI is a great option there are plenty of plugins that are available from various",
    "start": "900750",
    "end": "906960"
  },
  {
    "text": "providers out there to facilitate communication between your pods and Amazon eks currently supports the Amazon",
    "start": "906960",
    "end": "912870"
  },
  {
    "text": "V PC CNI plugin but you can also use that with your own kubernetes deployments on top of AWS with regards",
    "start": "912870",
    "end": "921900"
  },
  {
    "text": "to networking again I mentioned briefly network policies earlier on",
    "start": "921900",
    "end": "927709"
  },
  {
    "text": "those of you that that again familiar with EPC will have identified a slight challenge with the design model I talked",
    "start": "927809",
    "end": "933420"
  },
  {
    "text": "about earlier and that is that if all pods are communicating over a single E and I and a security group is as a",
    "start": "933420",
    "end": "939959"
  },
  {
    "text": "resource that's attached or a property of an en I how can I restrict the flow of traffic the specific pods within that",
    "start": "939959",
    "end": "945480"
  },
  {
    "text": "instance we address that through the use of network policies which are a native kubernetes api object and the AWS of EPC",
    "start": "945480",
    "end": "954569"
  },
  {
    "text": "CNI plug-in supports the Calico network policy engine so what we can do with the Calico network policy engine in",
    "start": "954569",
    "end": "960839"
  },
  {
    "text": "conjunction with the VPC CNI plugin is we can create model policies that",
    "start": "960839",
    "end": "965850"
  },
  {
    "text": "reflects the application calls that are that we need to make across our distributed system so we see here we've got three pods deployed these can be on",
    "start": "965850",
    "end": "972389"
  },
  {
    "text": "the same host they can be distributed across different hosts we're going to apply a basic policy that first of all",
    "start": "972389",
    "end": "977549"
  },
  {
    "text": "denies all access between those pods or all traffic between those pods the next policy next policy we're going to",
    "start": "977549",
    "end": "982889"
  },
  {
    "text": "provide we're going to attach allows inbound access from the outside world so you can see the 0 0 0 side of lock there",
    "start": "982889",
    "end": "989610"
  },
  {
    "text": "and we're attaching that policy through a label to the front end once we attach that policy traffic's now able to flow",
    "start": "989610",
    "end": "995970"
  },
  {
    "text": "inside we're now going to attach another policy and these policies are additive and this policy is going to be attached",
    "start": "995970",
    "end": "1002029"
  },
  {
    "text": "to the cat's container and this Kelton the cats pod and this cats pod now is able to accept requests over port 80",
    "start": "1002029",
    "end": "1008119"
  },
  {
    "text": "from the front end and we'll keep building and building and building and we can model these network policies in exactly the way that we want our",
    "start": "1008119",
    "end": "1014509"
  },
  {
    "text": "application flow to look keeping in mind the principles of least privilege and leaf access isolation its network",
    "start": "1014509",
    "end": "1022759"
  },
  {
    "text": "segmentation isolation itself how do i isolate the resources within my cluster we have a solution to that kubernetes",
    "start": "1022759",
    "end": "1029298"
  },
  {
    "text": "has a concept called namespaces namespaces allow us to isolate resources within our kubernetes cluster when I",
    "start": "1029299",
    "end": "1036110"
  },
  {
    "text": "talk about resources I mean basically everything you can create and consume within an kubernetes cluster services",
    "start": "1036110",
    "end": "1042438"
  },
  {
    "text": "pods memory CPU all of those resources can be isolated and segmented into these",
    "start": "1042439",
    "end": "1048799"
  },
  {
    "text": "namespaces so simply here what I've done is I've created two namespaces I've got a dev and a prod and this might be the",
    "start": "1048799",
    "end": "1054500"
  },
  {
    "text": "pattern that you decide to adopt by creating these namespaces and then allocating policies to these names",
    "start": "1054500",
    "end": "1060770"
  },
  {
    "text": "I'm restricting who can access and interact both from an API perspective but also from a network perspective so I",
    "start": "1060770",
    "end": "1066860"
  },
  {
    "text": "can fine grained control over the network traffic flow that the east-west traffic flow between the services that I",
    "start": "1066860",
    "end": "1073130"
  },
  {
    "text": "deploy within my cluster here again simply by defining the namespace itself sysadmin tation network policies is a",
    "start": "1073130",
    "end": "1080780"
  },
  {
    "text": "great option for that isolating the resources in your environment using namespaces and those namespaces can",
    "start": "1080780",
    "end": "1087260"
  },
  {
    "text": "follow teams departments release cycles however you want to do them it doesn't really matter it's entirely up to you",
    "start": "1087260",
    "end": "1093440"
  },
  {
    "text": "and resource quotas is another great option that's available within kubernetes to allow you to have much more control over which services which",
    "start": "1093440",
    "end": "1101150"
  },
  {
    "text": "applications which containerized resources consume what resources and namespaces themselves together I already",
    "start": "1101150",
    "end": "1107030"
  },
  {
    "text": "talked about that another element of isolation that I",
    "start": "1107030",
    "end": "1112070"
  },
  {
    "text": "haven't talked about yet and I think is really important and that's why I've given it its own tip number is is our",
    "start": "1112070",
    "end": "1117380"
  },
  {
    "text": "back or role based access control AWS offers role based access control through iam or Identity and Access Management",
    "start": "1117380",
    "end": "1124660"
  },
  {
    "text": "kubernetes has a very similar model for internal implementing role based access control we're always going to try and",
    "start": "1124660",
    "end": "1130550"
  },
  {
    "text": "implement lease privilege that's the well architected way with the launch of",
    "start": "1130550",
    "end": "1136420"
  },
  {
    "start": "1134000",
    "end": "1134000"
  },
  {
    "text": "eks actually prior to the launch of eks hexie oh another again a partner I",
    "start": "1136420",
    "end": "1142580"
  },
  {
    "text": "mentioned earlier on at least a really great integration called the hep Co AWS",
    "start": "1142580",
    "end": "1147740"
  },
  {
    "text": "Authenticator for iam what this allows us to do is allows us to use AWS",
    "start": "1147740",
    "end": "1153680"
  },
  {
    "text": "credentials which were already using to control access to resources within our AWS environments to control access to",
    "start": "1153680",
    "end": "1160370"
  },
  {
    "text": "resources that are deployed within our kubernetes clusters so by installing the hep c Authenticator onto our",
    "start": "1160370",
    "end": "1166310"
  },
  {
    "text": "workstations we're now off entik ating against the kubernetes cluster with a token that's provided by the AWS",
    "start": "1166310",
    "end": "1172010"
  },
  {
    "text": "authentication service at which point then we're handing off the role based access control of what we can be at what",
    "start": "1172010",
    "end": "1177890"
  },
  {
    "text": "we're able to do within the cluster back down to the kubernetes role based access control tables themselves this means",
    "start": "1177890",
    "end": "1184190"
  },
  {
    "text": "that we've got another one less area that we have to worry about can you imagine having to manage sets of identities both in kubernetes and",
    "start": "1184190",
    "end": "1191150"
  },
  {
    "text": "they're all based access control world and I am as well again heavy lifting that probably is not a great use of your time",
    "start": "1191150",
    "end": "1198909"
  },
  {
    "text": "when we think about creating policies for role based access control we can map these policies to roles within I am and",
    "start": "1198909",
    "end": "1206630"
  },
  {
    "start": "1200000",
    "end": "1200000"
  },
  {
    "text": "it might be that we want to restrict developers operations engineers to",
    "start": "1206630",
    "end": "1212000"
  },
  {
    "text": "perform specific actions within specific namespaces and using what we call a role binding and a role we can do that so I",
    "start": "1212000",
    "end": "1218570"
  },
  {
    "text": "can restrict both users and service accounts and these are credentials that we allocate to a specific application",
    "start": "1218570",
    "end": "1224419"
  },
  {
    "text": "that could be running in our cluster I can restrict them down to these very specific functions only within a",
    "start": "1224419",
    "end": "1229820"
  },
  {
    "text": "namespace and then using what we call a cluster role binding I can do the same thing but at a cluster level so now my",
    "start": "1229820",
    "end": "1235789"
  },
  {
    "text": "service accounts and my users are able to list and get pods across the entire cluster remembering that lease",
    "start": "1235789",
    "end": "1242750"
  },
  {
    "text": "privileged access is extremely important and we should follow that model irrespective of whether this is just",
    "start": "1242750",
    "end": "1247940"
  },
  {
    "text": "kubernetes or just AWS or a combination of the two and role based access control helps us do that don't give Cube control",
    "start": "1247940",
    "end": "1255980"
  },
  {
    "text": "the utility to everybody we don't everybody doesn't need it there are plenty of ways to interact with the",
    "start": "1255980",
    "end": "1261620"
  },
  {
    "text": "kubernetes cluster without using cube control so consider your your access patterns and who actually need access to",
    "start": "1261620",
    "end": "1267470"
  },
  {
    "text": "the cluster and we've got these great tools by third parties again hep tio keeps coming up because there's such an awesome partner in this space",
    "start": "1267470",
    "end": "1273770"
  },
  {
    "text": "they've got tools like sauna boy that help us assess the security posture of your kubernetes clusters and you can run these tools against them and get some",
    "start": "1273770",
    "end": "1279890"
  },
  {
    "text": "interesting reports back next tip monitoring all of the things this is",
    "start": "1279890",
    "end": "1286789"
  },
  {
    "text": "extremely important kubernetes is a very dynamic environment containers are a very dynamic resource as they come and",
    "start": "1286789",
    "end": "1292820"
  },
  {
    "text": "go extremely quickly and there's lots of telemetry that gets emitted from these applications that we deploy here's some",
    "start": "1292820",
    "end": "1299000"
  },
  {
    "text": "examples we've got clusters and nodes and containers and applications and each of those is emitting some kind of",
    "start": "1299000",
    "end": "1304130"
  },
  {
    "text": "information that we need to capture to be able to assess and analyze and make decisions about the right path forward",
    "start": "1304130",
    "end": "1310130"
  },
  {
    "text": "for our applications diagnosing and debugging problems in our systems so having tools in place to capture this",
    "start": "1310130",
    "end": "1316640"
  },
  {
    "text": "information that adapts to the dynamic nature of our solutions is extremely important one pattern that we see",
    "start": "1316640",
    "end": "1323270"
  },
  {
    "text": "customers adopting a lot is the X the elasticsearch fluent D and Cabana",
    "start": "1323270",
    "end": "1329070"
  },
  {
    "text": "stank in this pattern what we do is we deploy fluent D as a daemon set across the kubernetes cluster that then listens",
    "start": "1329070",
    "end": "1336180"
  },
  {
    "text": "and captures log information that gets emitted from the pods within the cluster we then ship that information over to",
    "start": "1336180",
    "end": "1341820"
  },
  {
    "text": "cloud watch logs which is subscribed to an elastic search service that information gets fed into an index and",
    "start": "1341820",
    "end": "1347700"
  },
  {
    "text": "then we're able to visualize that information using Cabana and make some interesting decisions and gain some",
    "start": "1347700",
    "end": "1354060"
  },
  {
    "text": "insights about how our application is performing and behaving on the cluster",
    "start": "1354060",
    "end": "1359270"
  },
  {
    "start": "1359000",
    "end": "1359000"
  },
  {
    "text": "if we look at this graphic here what you can see it's really trying to articulate the various levels of which we need to",
    "start": "1359450",
    "end": "1365700"
  },
  {
    "text": "be thinking about the metrics and the telemetry coming from our cluster so if we look at the purple layer there we've got data coming out of our nodes and our",
    "start": "1365700",
    "end": "1372300"
  },
  {
    "text": "applications and our containers themselves with any tools to aggregate that information and I already talked",
    "start": "1372300",
    "end": "1377820"
  },
  {
    "text": "about things like elastic search and Cabana to visualize that Prometheus is a very good option a very popular option",
    "start": "1377820",
    "end": "1384230"
  },
  {
    "text": "we also then need to drive insights and actions from those statistics or metrics",
    "start": "1384230",
    "end": "1389280"
  },
  {
    "text": "that we're getting from the cluster itself so using alert manager which is part of Prometheus and many other tools out",
    "start": "1389280",
    "end": "1395640"
  },
  {
    "text": "there and then the visualization piece which piece excuse me which I talked about earlier again that helps us",
    "start": "1395640",
    "end": "1401480"
  },
  {
    "text": "understand what's going on put dashboards around our offices see pretty pictures because that always keeps keeps",
    "start": "1401480",
    "end": "1407790"
  },
  {
    "text": "the management happy and then underlying all of that we need a data model that supports the kinds of data that we're",
    "start": "1407790",
    "end": "1413760"
  },
  {
    "text": "going to be emitting from our cluster Prometheus is a time series system so what that information needs to get stored in things like influx DB lots of",
    "start": "1413760",
    "end": "1421440"
  },
  {
    "text": "options some great partner solutions out there that can help address this without having to do it all yourself so I would",
    "start": "1421440",
    "end": "1427590"
  },
  {
    "text": "encourage you I think New Relic are out there today so gonna have a chat with those guys to see what they can do for you in this space to try and solve the",
    "start": "1427590",
    "end": "1434130"
  },
  {
    "text": "problem of monitoring all the things within your cluster the tools that you",
    "start": "1434130",
    "end": "1440310"
  },
  {
    "text": "have to monitor need to cater for the dynamic nature of the environment that's not just the containers that are",
    "start": "1440310",
    "end": "1445800"
  },
  {
    "text": "continually shifting and changing shape and mutating but it's also the ec2 instance is coming and going on a fairly",
    "start": "1445800",
    "end": "1451230"
  },
  {
    "text": "regular basis especially if you're doing lots of auto scaling the log information from our applications and our clusters",
    "start": "1451230",
    "end": "1457140"
  },
  {
    "text": "are going to give us the insights that we need to make logical decisions about the way forward for our applications we",
    "start": "1457140",
    "end": "1464039"
  },
  {
    "text": "continually need to refine these operational procedures and the only way we can do that is by capturing that information and gaining insights from",
    "start": "1464039",
    "end": "1470340"
  },
  {
    "text": "him and I already mentioned some of the partners out there New Relic is out there now data dog has some great solutions to help solve that problem as",
    "start": "1470340",
    "end": "1476760"
  },
  {
    "text": "well tip number six relates to the",
    "start": "1476760",
    "end": "1481980"
  },
  {
    "text": "building the shipping and the running of software which is really what kubernetes is all about it's about accelerating our",
    "start": "1481980",
    "end": "1488900"
  },
  {
    "text": "the deployments and the the closing and reducing that feedback loop with regards to the software and experiments they",
    "start": "1488900",
    "end": "1494850"
  },
  {
    "text": "were performing how do I do rapid software deployment and testing and gain",
    "start": "1494850",
    "end": "1500760"
  },
  {
    "text": "lots of insights very quickly well there's lots of tools available to help you solve this problem right now Jenkins",
    "start": "1500760",
    "end": "1507809"
  },
  {
    "text": "there's the whole suite of code services there that I talked about lots of interesting open source projects coming",
    "start": "1507809",
    "end": "1513659"
  },
  {
    "text": "up in this space Spinnaker's been around for a while it's part of a net fixed suite of open source software scaffold",
    "start": "1513659",
    "end": "1518880"
  },
  {
    "text": "is a really interesting project that really kind of bridges the gap between local developments and kubernetes base",
    "start": "1518880",
    "end": "1525179"
  },
  {
    "text": "developments as well tools like Brigade draft is another exciting project in",
    "start": "1525179",
    "end": "1530940"
  },
  {
    "text": "that space as well and I would encourage you to pop along and have a look at some of those and then we've got partner solutions by people like get loud and",
    "start": "1530940",
    "end": "1537150"
  },
  {
    "text": "shippable and circles see I I wanted to take a quick second just to quickly go",
    "start": "1537150",
    "end": "1542730"
  },
  {
    "start": "1541000",
    "end": "1541000"
  },
  {
    "text": "through a solution that was put together by one of one of my colleagues gentleman called Omar Laurie this is a reference",
    "start": "1542730",
    "end": "1549600"
  },
  {
    "text": "architecture that you'll find on our public blog and it talks about how we implement a continuous delivery pipeline",
    "start": "1549600",
    "end": "1555530"
  },
  {
    "text": "to kubernetes using the code suite of services so here",
    "start": "1555530",
    "end": "1561090"
  },
  {
    "text": "we're using code pipe point and to orchestrate the flow we're then our developer is is checking in his commit",
    "start": "1561090",
    "end": "1567570"
  },
  {
    "text": "code into into code commits and that's then triggering a workflow which involves taking that code from the",
    "start": "1567570",
    "end": "1573630"
  },
  {
    "text": "source code repository and building a container image so code build facilitates the building of that container image for us once we've built",
    "start": "1573630",
    "end": "1580020"
  },
  {
    "text": "that container image then we're going to ship that container image this is our deployable artifact we're going to",
    "start": "1580020",
    "end": "1585390"
  },
  {
    "text": "version and tag it accordingly it's going to be dropped into ECR elastic container registry service again which I",
    "start": "1585390",
    "end": "1591179"
  },
  {
    "text": "mentioned before was our docker compliant to manage container registry from there then the next step",
    "start": "1591179",
    "end": "1596950"
  },
  {
    "text": "in the process is to fire off a lambda function now what does the lambda function have to do with this well currently right now there is no native",
    "start": "1596950",
    "end": "1603730"
  },
  {
    "text": "integration between the code suite of services and aw sorry and kubernetes so",
    "start": "1603730",
    "end": "1610630"
  },
  {
    "text": "lambda provides that glue as lambda tends to do so often so what we're doing",
    "start": "1610630",
    "end": "1615880"
  },
  {
    "text": "with lambda here is were taking lambda and we're retrieving some attributes about the application that's already",
    "start": "1615880",
    "end": "1620950"
  },
  {
    "text": "deployed and we're rewriting the kubernetes api object that represents the state of that application or that",
    "start": "1620950",
    "end": "1627280"
  },
  {
    "text": "deployment of the minute with some new information that relates to the image that we've actually just created and",
    "start": "1627280",
    "end": "1632620"
  },
  {
    "text": "pushed into ECR once we've rewritten that information we then deploy that information back into the cluster using",
    "start": "1632620",
    "end": "1638679"
  },
  {
    "text": "the API calls and kubernetes will then do a rolling update of our application across the cluster and by pulling the",
    "start": "1638679",
    "end": "1645490"
  },
  {
    "text": "image from elastic container registry fully managed mostly service with the",
    "start": "1645490",
    "end": "1650980"
  },
  {
    "text": "exception of the kubernetes piece and again it's a blog post that you can pop along to and have a look on the public",
    "start": "1650980",
    "end": "1656559"
  },
  {
    "text": "the public blog a lot of the tips and",
    "start": "1656559",
    "end": "1661600"
  },
  {
    "start": "1658000",
    "end": "1658000"
  },
  {
    "text": "the summaries in this section a fairly common sense to most people but you know deploying small and frequently helps us",
    "start": "1661600",
    "end": "1667419"
  },
  {
    "text": "gives us the flexibility in the confidence that we can quickly roll back in the event of some kind of issue",
    "start": "1667419",
    "end": "1672960"
  },
  {
    "text": "kubernetes supports this concept of rollout histories as well so when we're creating our deployments some of the",
    "start": "1672960",
    "end": "1679000"
  },
  {
    "text": "attributes that we can define within the manifest files allow us to specify a retention period for previous versions",
    "start": "1679000",
    "end": "1685240"
  },
  {
    "text": "of our API object or our configuration which gives us a quick way to roll back to that previous state and the",
    "start": "1685240",
    "end": "1691870"
  },
  {
    "text": "containers themselves support this concept of aliveness and readiness probe which means that we can perform checks",
    "start": "1691870",
    "end": "1697000"
  },
  {
    "text": "on the application when we've deployed it just to be sure that it's doing what we want it to do rather than releasing",
    "start": "1697000",
    "end": "1703720"
  },
  {
    "text": "it to the outside world before it's ready you might for example be running an internal bootstrap process when the",
    "start": "1703720",
    "end": "1709960"
  },
  {
    "text": "container comes up that maybe does a get pulled from a repository for example and you don't necessarily want that",
    "start": "1709960",
    "end": "1715809"
  },
  {
    "text": "container to start server and requests before it has completed its bootstrap process",
    "start": "1715809",
    "end": "1721500"
  },
  {
    "start": "1721000",
    "end": "1721000"
  },
  {
    "text": "so in summary of all of the exciting things that we've talked about lots of options available available to",
    "start": "1721500",
    "end": "1728320"
  },
  {
    "text": "deploy these clusters on AWS cops is a very popular open source project eks is",
    "start": "1728320",
    "end": "1733900"
  },
  {
    "text": "now available in u.s. East 1 and u.s. West 2 with regards to networking make sure you fully understand what your",
    "start": "1733900",
    "end": "1740410"
  },
  {
    "text": "current architecture looks like potentially what some of the constraints are and what the requirements are as",
    "start": "1740410",
    "end": "1745420"
  },
  {
    "text": "well for your clusters going forward thinking lease privilege segmentation well architected make sure that you use",
    "start": "1745420",
    "end": "1753370"
  },
  {
    "text": "the capabilities of the platform like namespaces and role based access control to drive those best practice best",
    "start": "1753370",
    "end": "1759760"
  },
  {
    "text": "practice cluster configurations and always make sure that we have the appropriate tooling in place ahead of time to capture the log application",
    "start": "1759760",
    "end": "1768040"
  },
  {
    "text": "information the tracing information so that we can make some intelligent decisions about how we how we evolve our",
    "start": "1768040",
    "end": "1774340"
  },
  {
    "text": "application architectures going forward but also to help the operations guys that are managing these things at 3 a.m.",
    "start": "1774340",
    "end": "1779590"
  },
  {
    "text": "in the morning when the when the pager goes off this session has been primarily",
    "start": "1779590",
    "end": "1784750"
  },
  {
    "text": "focused on the deploy so and that's the problem space that kubernetes primarily addresses the deploying of our",
    "start": "1784750",
    "end": "1790810"
  },
  {
    "text": "applications after this I'm going to be doing another session which focuses on the run time of containerized",
    "start": "1790810",
    "end": "1796090"
  },
  {
    "text": "applications I'm going to talk about a technology called service mesh if you're interested in learning more about",
    "start": "1796090",
    "end": "1801310"
  },
  {
    "text": "service mesh and seeing how we might deploy a service mesh on to Amazon eks stick around it'd be great to share some",
    "start": "1801310",
    "end": "1807970"
  },
  {
    "text": "insights with you thank you very much for your time we really appreciate it make sure you fill out the feedback forms obviously we're always looking to",
    "start": "1807970",
    "end": "1814390"
  },
  {
    "text": "try and improve on these sessions and get your feedback so that's very helpful there are some takeaways that you can go",
    "start": "1814390",
    "end": "1820630"
  },
  {
    "text": "and grab from the people outside when you scan your badges some content links that we'll share with you and with that",
    "start": "1820630",
    "end": "1825670"
  },
  {
    "text": "I will let you go and have a break thank you very much",
    "start": "1825670",
    "end": "1830070"
  }
]