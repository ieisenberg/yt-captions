[
  {
    "start": "0",
    "end": "132000"
  },
  {
    "text": "hello and thank you for joining our webcast today uh this will be getting started with Amazon Cloud search how to",
    "start": "1120",
    "end": "7160"
  },
  {
    "text": "add powerful search to your web applications this is Mike buik I'm responsible for marketing on the cloud",
    "start": "7160",
    "end": "13040"
  },
  {
    "text": "search team based here in paloalto a couple of words of housekeeping before we get started one",
    "start": "13040",
    "end": "19199"
  },
  {
    "text": "this webcast will be recorded and we'll make the recording available to you as",
    "start": "19199",
    "end": "24240"
  },
  {
    "text": "well as a copy of the slides you'll receive an email with links or just check out the recording that will be",
    "start": "24240",
    "end": "30800"
  },
  {
    "text": "posted to the AWS Channel on YouTube as well as the AWS channel on",
    "start": "30800",
    "end": "37840"
  },
  {
    "text": "SlideShare uh in addition you'll see a link with a survey um at the end that",
    "start": "37840",
    "end": "43600"
  },
  {
    "text": "you can respond to and we'd appreciate any feedback on the webcast today and uh",
    "start": "43600",
    "end": "49680"
  },
  {
    "text": "any comments on how we could make it an even better experience for you it's my pleasure to introduce our speaker today",
    "start": "49680",
    "end": "56760"
  },
  {
    "text": "and that's John Handler John is solution architect here on our Cloud search team",
    "start": "56760",
    "end": "62920"
  },
  {
    "text": "uh he brings a deep amount of experience in search I was a Search application",
    "start": "62920",
    "end": "68159"
  },
  {
    "text": "engineer uh and developer for a major online e-commerce vendor and has led um",
    "start": "68159",
    "end": "75119"
  },
  {
    "text": "development and Engineering teams for search as well so with that I'll turn over to John hi everybody my name is",
    "start": "75119",
    "end": "82200"
  },
  {
    "text": "John Handler as Mike said I'm a solution architect with AWS working with the cloud search team for about 2 years as",
    "start": "82200",
    "end": "89479"
  },
  {
    "text": "we all know know search is a critical component of today's web applications um it unites our customers",
    "start": "89479",
    "end": "96600"
  },
  {
    "text": "with products it unites people allows them to find one another allows us to find the content that we're searching",
    "start": "96600",
    "end": "102799"
  },
  {
    "text": "for and today we're going to go into a little bit of depth about what search is",
    "start": "102799",
    "end": "110079"
  },
  {
    "text": "and how it works we'll talk about Amazon Cloud search and some of the benefits",
    "start": "110079",
    "end": "115920"
  },
  {
    "text": "that working in the cloud brings and do uh deep technical dive on Amazon Cloud",
    "start": "115920",
    "end": "123479"
  },
  {
    "text": "search understand exactly what you need to do to get started with Cloud search and we'll finish up with a little bit of",
    "start": "123479",
    "end": "128520"
  },
  {
    "text": "a demo so as we navigate the web and we",
    "start": "128520",
    "end": "135239"
  },
  {
    "start": "132000",
    "end": "183000"
  },
  {
    "text": "visit our favorite sites we're often interacting with a search box this slide",
    "start": "135239",
    "end": "141200"
  },
  {
    "text": "shows some of our uh Cloud search customers who are currently running their search through Cloud search and we",
    "start": "141200",
    "end": "149560"
  },
  {
    "text": "have a number of different verticals represented we have some media companies like SmugMug and Xfm IMDb is a a sort of",
    "start": "149560",
    "end": "158519"
  },
  {
    "text": "Social and movies site that allows us to find out about movies TV shows all of that kind of stuff Reddit is a social",
    "start": "158519",
    "end": "165560"
  },
  {
    "text": "networking site uh PBS of course the television station uh using Cloud search",
    "start": "165560",
    "end": "171040"
  },
  {
    "text": "to help get users to the programs and content that they really want to uh",
    "start": "171040",
    "end": "176480"
  },
  {
    "text": "really want to see so as we look at our search boxes and we think",
    "start": "176480",
    "end": "182720"
  },
  {
    "text": "about a little bit about what happens a user will come to our application or",
    "start": "182720",
    "end": "188000"
  },
  {
    "text": "website with a particular information need in this case a user may come to an",
    "start": "188000",
    "end": "193680"
  },
  {
    "text": "e-commerce site with an idea to buy some shoes and at that point they have the",
    "start": "193680",
    "end": "201239"
  },
  {
    "text": "opportunity to interact with that site primarily and usually through a search",
    "start": "201239",
    "end": "206360"
  },
  {
    "text": "box where they'll take their information the the information that they desire and",
    "start": "206360",
    "end": "211840"
  },
  {
    "text": "they'll express it in some English text format or some textual format and enter",
    "start": "211840",
    "end": "218319"
  },
  {
    "text": "it into the search box the job of search at that point is to take the information that the user has provided in the form",
    "start": "218319",
    "end": "225200"
  },
  {
    "text": "of text compare that text with all of the products and content that the search",
    "start": "225200",
    "end": "231519"
  },
  {
    "text": "engine is aware of and bring back results that hopefully will be a good match for that user's information need",
    "start": "231519",
    "end": "239560"
  },
  {
    "text": "if if we type for instance shoes on amazon.com we would see some men's",
    "start": "239560",
    "end": "245560"
  },
  {
    "text": "shoes we would see some kids shoes we might see some women's shoes",
    "start": "245560",
    "end": "252760"
  },
  {
    "text": "and we might even see a shoe rack all of these are representative uh of a text",
    "start": "252760",
    "end": "258600"
  },
  {
    "text": "match between shoes and that item and the search engine and and the",
    "start": "258600",
    "end": "265479"
  },
  {
    "text": "the website would be successful in as much as it brings back a result that",
    "start": "265479",
    "end": "270720"
  },
  {
    "text": "matches that user's information need and allows that user to for instance make a purchase uh like in this case if that if",
    "start": "270720",
    "end": "278039"
  },
  {
    "text": "they bought that pair of",
    "start": "278039",
    "end": "281160"
  },
  {
    "text": "shoes so given that search is a critical component and a a critical way that users interact with our system there are",
    "start": "283320",
    "end": "291120"
  },
  {
    "start": "284000",
    "end": "380000"
  },
  {
    "text": "several ways that we can go about trying to add search to our applications the first one we have a a sort of homegrown",
    "start": "291120",
    "end": "297759"
  },
  {
    "text": "build your own solution and there are a number of different paths that uh we can",
    "start": "297759",
    "end": "302840"
  },
  {
    "text": "take the first one would be a database path where we can use a the database's",
    "start": "302840",
    "end": "308759"
  },
  {
    "text": "own textual comparison functions to compare user text to items that are in",
    "start": "308759",
    "end": "315199"
  },
  {
    "text": "the database um we can use a home roll solution sometimes we can have a",
    "start": "315199",
    "end": "320880"
  },
  {
    "text": "memcache or other uh simple solution that pulls items based on an exact match",
    "start": "320880",
    "end": "327720"
  },
  {
    "text": "between text or we can use uh even some um sitewide search provided by another",
    "start": "327720",
    "end": "335720"
  },
  {
    "text": "uh provider in a little bit more complicated realm there's there are open- Source solutions for search that",
    "start": "335720",
    "end": "342840"
  },
  {
    "text": "allow us directly to send the documents that we're interested in the items that",
    "start": "342840",
    "end": "348319"
  },
  {
    "text": "we're interested to a search engine and um perform search using a real search",
    "start": "348319",
    "end": "355360"
  },
  {
    "text": "engine and finally there are larger uh more more Legacy Enterprise search",
    "start": "355360",
    "end": "361240"
  },
  {
    "text": "solutions that um can allow companies both tight integration uh within the",
    "start": "361240",
    "end": "370319"
  },
  {
    "text": "internet and um also for user facing data uh they can provide search at a",
    "start": "370319",
    "end": "379720"
  },
  {
    "start": "380000",
    "end": "501000"
  },
  {
    "text": "price but all of these different methods have challenges so search itself is a complex",
    "start": "380240",
    "end": "388759"
  },
  {
    "text": "problem involv oling uh complex algorithms and a discipline of study",
    "start": "388759",
    "end": "393880"
  },
  {
    "text": "information science which is very deep and and has um a long history of work",
    "start": "393880",
    "end": "400759"
  },
  {
    "text": "that people are doing in figuring out well if I have a user with an information need how do I bring the",
    "start": "400759",
    "end": "406039"
  },
  {
    "text": "information that's relevant to that user so rolling your own or some of the",
    "start": "406039",
    "end": "411120"
  },
  {
    "text": "simpler Solutions are often um difficult to carry out with any great success",
    "start": "411120",
    "end": "419800"
  },
  {
    "text": "search also can be a very costly Endeavor uh requiring hardware and uh",
    "start": "420160",
    "end": "426120"
  },
  {
    "text": "upfront costs to deploy a search engine and maintain that search engine and",
    "start": "426120",
    "end": "432080"
  },
  {
    "text": "especially to scale that uh to handle large volumes of traffic or data can",
    "start": "432080",
    "end": "437680"
  },
  {
    "text": "cost uh quite a bit of money because of both of these challenges there's often a long time to",
    "start": "437680",
    "end": "444280"
  },
  {
    "text": "Market when when trying to add search to an application the the time needed to",
    "start": "444280",
    "end": "450479"
  },
  {
    "text": "deploy the hardware to support search as well as the personnel and expertise",
    "start": "450479",
    "end": "455560"
  },
  {
    "text": "required to create a good search experience mean that it's harder to",
    "start": "455560",
    "end": "461080"
  },
  {
    "text": "innovate quick and experiment quickly to bring something to Market",
    "start": "461080",
    "end": "466360"
  },
  {
    "text": "fast and finally in in administering and uh dealing with the hardware and other",
    "start": "466360",
    "end": "472840"
  },
  {
    "text": "aspects of the search engine itself uh there's a lot of operational overhead",
    "start": "472840",
    "end": "479159"
  },
  {
    "text": "which is not really the the focus of most businesses and it takes uh resources",
    "start": "479159",
    "end": "487080"
  },
  {
    "text": "away from the primary focus of your business which uh essentially it's",
    "start": "487080",
    "end": "492319"
  },
  {
    "text": "undifferentiated work that doesn't contribute much to the the success of",
    "start": "492319",
    "end": "498199"
  },
  {
    "text": "the business so let's talk a little bit about Amazon Cloud search Amazon Cloud",
    "start": "498199",
    "end": "504840"
  },
  {
    "start": "501000",
    "end": "659000"
  },
  {
    "text": "search is an AWS service and as such we derive many of the benefits of other AWS",
    "start": "504840",
    "end": "510919"
  },
  {
    "text": "services and we in creating Cloud search thought about how to provide the",
    "start": "510919",
    "end": "516240"
  },
  {
    "text": "benefits of AWS within the context of search one of the primary benefits is",
    "start": "516240",
    "end": "522880"
  },
  {
    "text": "that you pay for in infrastructure you need when you need it so instead of a long uh wait time for Hardware to get",
    "start": "522880",
    "end": "530760"
  },
  {
    "text": "online you're able to with a simple push of a button get the hardware you need to run your search solution uh as and when",
    "start": "530760",
    "end": "538640"
  },
  {
    "text": "you need it Amazon Cloud search is low cost so we",
    "start": "538640",
    "end": "545160"
  },
  {
    "text": "pass on many of the benefits of large scale infrastructure and as we get those",
    "start": "545160",
    "end": "551240"
  },
  {
    "text": "benefits we pass them on to our customers much like the many of the rest of aws's",
    "start": "551240",
    "end": "558839"
  },
  {
    "text": "services you don't need to guess capacity so Cloud search is an elastic",
    "start": "559200",
    "end": "564240"
  },
  {
    "text": "service that scales for the data and traffic that you are pushing through it",
    "start": "564240",
    "end": "570200"
  },
  {
    "text": "to match the resource demand as you send it um one of the big problems in search",
    "start": "570200",
    "end": "576360"
  },
  {
    "text": "is figuring out how to provision how much Hardware to provision and when to provision it both in response to daily",
    "start": "576360",
    "end": "582839"
  },
  {
    "text": "as well as seasonal peaks with Cloud search we'll scale up and down to match",
    "start": "582839",
    "end": "588320"
  },
  {
    "text": "exactly the the capacity needed at any given time providing a lot of",
    "start": "588320",
    "end": "594360"
  },
  {
    "text": "efficiency all of this means as a you're able to experiment fast and with Amazon",
    "start": "594360",
    "end": "600640"
  },
  {
    "text": "Cloud search you can push a button have a search engine running in 15 or 20 minutes and just get started playing",
    "start": "600640",
    "end": "607399"
  },
  {
    "text": "with it it's simple to then take that down shut it off and uh move on this",
    "start": "607399",
    "end": "613959"
  },
  {
    "text": "this really makes it a great opportunity to try things out experiment innovate",
    "start": "613959",
    "end": "619600"
  },
  {
    "text": "try different things um and we do all that undifferentiated",
    "start": "619600",
    "end": "624720"
  },
  {
    "text": "heavy lifting Cloud search wraps up as a service all of the hardware and other",
    "start": "624720",
    "end": "630040"
  },
  {
    "text": "infrastructure tasks allowing you to focus on really the core of your business and your",
    "start": "630040",
    "end": "636440"
  },
  {
    "text": "mission and finally you can go Global in minutes Amazon Cloud search is deployed in Us East US West Singapore and Europe",
    "start": "636440",
    "end": "647519"
  },
  {
    "text": "so with a push of a button you can create search engines in all of these different regions allowing you to deploy",
    "start": "647519",
    "end": "652920"
  },
  {
    "text": "your app application globally with the best latency uh constraints",
    "start": "652920",
    "end": "660519"
  },
  {
    "start": "659000",
    "end": "823000"
  },
  {
    "text": "uh Mike is reminding me if you have questions uh please type them into the question box on your console and we'll",
    "start": "660519",
    "end": "666160"
  },
  {
    "text": "answer them at the end of the presentation so let's look uh in a",
    "start": "666160",
    "end": "671920"
  },
  {
    "text": "little detail at the uh Amazon Cloud search architecture and just highlight",
    "start": "671920",
    "end": "677160"
  },
  {
    "text": "some of the points of how you'll interact with the service when you start using Amazon",
    "start": "677160",
    "end": "683639"
  },
  {
    "text": "Cloud search you create what we call a search domain a search domain wraps all",
    "start": "683639",
    "end": "688680"
  },
  {
    "text": "of the software and Hardware required to run a single search solution within that",
    "start": "688680",
    "end": "694240"
  },
  {
    "text": "search domain we have a couple of services that we run that are available as restful",
    "start": "694240",
    "end": "699760"
  },
  {
    "text": "Services the first of those is of course a search service the search service is",
    "start": "699760",
    "end": "705480"
  },
  {
    "text": "available at a particular uh URL and allows you to use HTTP to get search",
    "start": "705480",
    "end": "714680"
  },
  {
    "text": "responses uh from the search service we provide responses in both Json and",
    "start": "714680",
    "end": "721240"
  },
  {
    "text": "XML and we have a direct API as well as a console integration with the search",
    "start": "721240",
    "end": "726800"
  },
  {
    "text": "service our second service is the document service you use again this is a a URL",
    "start": "726800",
    "end": "733440"
  },
  {
    "text": "stable DNS entry where you will post using HTTP post your search",
    "start": "733440",
    "end": "741519"
  },
  {
    "text": "documents and those documents would then be taken in indexed and provided in near",
    "start": "741519",
    "end": "747480"
  },
  {
    "text": "real time as search result in the search service and again here we have uh direct",
    "start": "747480",
    "end": "753600"
  },
  {
    "text": "to API as well as we have some command line tools that allow that allow you to post documents and there's console",
    "start": "753600",
    "end": "760079"
  },
  {
    "text": "integration as well that lets you post documents to Cloud search all of this is available behind load balancing that",
    "start": "760079",
    "end": "767600"
  },
  {
    "text": "takes care of the the Distributing the load to both of these Services across",
    "start": "767600",
    "end": "772720"
  },
  {
    "text": "all of the hosts and other Hardware that we use to run the services as a final service we provide a",
    "start": "772720",
    "end": "779240"
  },
  {
    "text": "configuration service and this allows you to configure your uh search index",
    "start": "779240",
    "end": "785920"
  },
  {
    "text": "and how we're handling the different fields that you're sending to us as well as controlling at a domain level things",
    "start": "785920",
    "end": "792959"
  },
  {
    "text": "like creating domains deleting domains access policies text options for the",
    "start": "792959",
    "end": "798800"
  },
  {
    "text": "domain Etc configuration service is available",
    "start": "798800",
    "end": "804160"
  },
  {
    "text": "as an AWS query language interface we have a direct API there as well and also",
    "start": "804160",
    "end": "809839"
  },
  {
    "text": "a suite of command line tools to make administering Cloud search easier as well as uh the AWS console integration",
    "start": "809839",
    "end": "818560"
  },
  {
    "text": "uh for doing that visually and I did want to call out a",
    "start": "818560",
    "end": "824040"
  },
  {
    "start": "823000",
    "end": "936000"
  },
  {
    "text": "little bit about the elasticity of cloud search just to give you a feel for how",
    "start": "824040",
    "end": "829800"
  },
  {
    "text": "we simplify things when you start up with Cloud search you would start up with a single instance we call it a",
    "start": "829800",
    "end": "836920"
  },
  {
    "text": "search instance and again this surprises the hardware and software for search and",
    "start": "836920",
    "end": "842320"
  },
  {
    "text": "on this instance we would keep in Ram the contents of the index for your",
    "start": "842320",
    "end": "848360"
  },
  {
    "text": "search engine as you're pushing data into the search engine through the",
    "start": "848360",
    "end": "853519"
  },
  {
    "text": "document service we would eventually run out of ram to hold that index when that",
    "start": "853519",
    "end": "859639"
  },
  {
    "text": "happens we will automatically and in the background move you up onto a large",
    "start": "859639",
    "end": "865120"
  },
  {
    "text": "instance and then we would move you onto an extra large instance when you filled up the large and then if you continued",
    "start": "865120",
    "end": "871160"
  },
  {
    "text": "to send data we would partition that data in parallel in the",
    "start": "871160",
    "end": "877240"
  },
  {
    "text": "background providing a second search instance and a second partition of data",
    "start": "877399",
    "end": "883360"
  },
  {
    "text": "if you continue to send data we would of course continue to scale out partitioning your data and deploying it",
    "start": "883360",
    "end": "889480"
  },
  {
    "text": "to host optimally to hold that data similarly we will scale for traffic",
    "start": "889480",
    "end": "896399"
  },
  {
    "text": "if we started out with three partitions we would be monitoring the CPU usage on",
    "start": "896399",
    "end": "901600"
  },
  {
    "text": "those partitions and when we hit a trigger point we would then add additional hosts to handle the traffic",
    "start": "901600",
    "end": "909680"
  },
  {
    "text": "uh in excess of what one host could handle if you continue to send traffic of course we would continue to scale to",
    "start": "909680",
    "end": "916040"
  },
  {
    "text": "handle the additional load again all of this happens in the background with no",
    "start": "916040",
    "end": "921320"
  },
  {
    "text": "intervention uh on the user's part you don't have to figure out how to partition your data or how to deploy it",
    "start": "921320",
    "end": "928000"
  },
  {
    "text": "optimally to host or how many hosts you need Cloud sarch does all of that management for",
    "start": "928000",
    "end": "935120"
  },
  {
    "text": "you and again within the single search instance we've wrapped up all of the",
    "start": "935120",
    "end": "940959"
  },
  {
    "start": "936000",
    "end": "1159000"
  },
  {
    "text": "compute as well as storage load balancing and security so that the",
    "start": "940959",
    "end": "946440"
  },
  {
    "text": "search instance itself is really a self-contained unit should you have an",
    "start": "946440",
    "end": "951880"
  },
  {
    "text": "outage in one of these instances Cloud search can automatically heal that and bring in a new instance with",
    "start": "951880",
    "end": "959480"
  },
  {
    "text": "the existing index and all of the documents and the search will be up and running again",
    "start": "959480",
    "end": "966160"
  },
  {
    "text": "quickly so that's a little bit of an overview of Amazon Cloud search and how it works we're going to take a look at",
    "start": "966160",
    "end": "972920"
  },
  {
    "text": "at search on the web to see some of the features that we've come to expect and",
    "start": "972920",
    "end": "977959"
  },
  {
    "text": "talk about how they might how they they are implemented in search I'm looking at here a page from",
    "start": "977959",
    "end": "986480"
  },
  {
    "text": "amazon.com I've entered what happened sorry about that I've entered a",
    "start": "986480",
    "end": "993720"
  },
  {
    "text": "text query for Kindle paper white and as you can see I've received two results",
    "start": "993720",
    "end": "998959"
  },
  {
    "text": "that are Kindle paper whites and this text based search the terms Kindle paper",
    "start": "998959",
    "end": "1005000"
  },
  {
    "text": "white have matched the term Kindle paper white in my results so as I'm typing text I'm matching particular pieces of",
    "start": "1005000",
    "end": "1012000"
  },
  {
    "text": "text from the from the database ultimately and in the search engine of",
    "start": "1012000",
    "end": "1018000"
  },
  {
    "text": "the items available for sale and of course we don't typically",
    "start": "1018000",
    "end": "1024480"
  },
  {
    "text": "get just any matches what we want to see is the matches that are most likely to",
    "start": "1024480",
    "end": "1030480"
  },
  {
    "text": "be the ones that would fulfill my need in typing Kindle paper white and we call",
    "start": "1030480",
    "end": "1035918"
  },
  {
    "text": "that relevance and what we'd like to see is the results",
    "start": "1035919",
    "end": "1041038"
  },
  {
    "text": "that come to the top are the most relevant results for whatever query we've generated",
    "start": "1041039",
    "end": "1048319"
  },
  {
    "text": "we also are able to add additional drill down via what we call facets facets are",
    "start": "1050840",
    "end": "1058600"
  },
  {
    "text": "uh on Amazon U shown in the left rail of the page and this represents different",
    "start": "1058600",
    "end": "1065480"
  },
  {
    "text": "attributes that each of the products has that allow that allow a user of Amazon",
    "start": "1065480",
    "end": "1071360"
  },
  {
    "text": "to specify in more detail what they're looking for so facets can include things",
    "start": "1071360",
    "end": "1078440"
  },
  {
    "text": "like compartments colors sizes uh users are able through clicking on those",
    "start": "1078440",
    "end": "1084440"
  },
  {
    "text": "facets to narrow their search and restrict it to particular subsets of the",
    "start": "1084440",
    "end": "1089880"
  },
  {
    "text": "products that are available one example of that is a a",
    "start": "1089880",
    "end": "1099080"
  },
  {
    "text": "price-based narrowing where we're able to specify a range of prices that we",
    "start": "1099080",
    "end": "1104760"
  },
  {
    "text": "want to use to limit our choices",
    "start": "1104760",
    "end": "1109919"
  },
  {
    "text": "so we want to be able to type an integer and support searching over a range of values for that",
    "start": "1109919",
    "end": "1116919"
  },
  {
    "text": "integer and finally we want to be able to combine all of these different text",
    "start": "1118159",
    "end": "1125960"
  },
  {
    "text": "attributes numeric ranges in arbitrarily complex queries where we can search",
    "start": "1125960",
    "end": "1132240"
  },
  {
    "text": "search for things like in the electronics department for $1 to $200 and they have to be new with for stars",
    "start": "1132240",
    "end": "1139000"
  },
  {
    "text": "and up Prime eligible so all of these represent a Boolean combination of attributes that each of these products",
    "start": "1139000",
    "end": "1145280"
  },
  {
    "text": "should have in order to be a relevant result for my query so these are some of the features",
    "start": "1145280",
    "end": "1152120"
  },
  {
    "text": "that we've come to expect and use quite fluently with search we'll have a look at how the",
    "start": "1152120",
    "end": "1159360"
  },
  {
    "start": "1159000",
    "end": "1300000"
  },
  {
    "text": "search engine itself works and how it functions to bring these results to the",
    "start": "1159360",
    "end": "1165320"
  },
  {
    "text": "user search engines are based on what we call an invert inverted index an inverted index Maps terms to documents",
    "start": "1165320",
    "end": "1175480"
  },
  {
    "text": "the search document you can think of as a single search result so in my example",
    "start": "1175480",
    "end": "1180600"
  },
  {
    "text": "I had two search documents that were shown as search results both of them Kindle paper whites the index Maps the term Kindle to",
    "start": "1180600",
    "end": "1189200"
  },
  {
    "text": "the list of all documents that contain that term and paper white to the list of",
    "start": "1189200",
    "end": "1194320"
  },
  {
    "text": "all documents that contain that term as well what we do in the matching phase is",
    "start": "1194320",
    "end": "1199919"
  },
  {
    "text": "we take the terms the user has typed and retrieve from the index the list of all the documents that contain those terms",
    "start": "1199919",
    "end": "1207440"
  },
  {
    "text": "we then use Boolean logic to combine those lists into the final list of all of the documents that match the user's",
    "start": "1207440",
    "end": "1214159"
  },
  {
    "text": "query and this can work not only across text Fields but faceted drill down works",
    "start": "1214159",
    "end": "1219720"
  },
  {
    "text": "this way as well where the facets are attributes on the document and also",
    "start": "1219720",
    "end": "1225039"
  },
  {
    "text": "match against the text based term that's coming in and picking out a list from the",
    "start": "1225039",
    "end": "1230880"
  },
  {
    "text": "index and this is what we typically call filtering where we take these additional",
    "start": "1230880",
    "end": "1236799"
  },
  {
    "text": "items and using again Boolean algebra combined the lists of possible matches",
    "start": "1236799",
    "end": "1242679"
  },
  {
    "text": "to come up with ultimately the one list of matches for the user's",
    "start": "1242679",
    "end": "1248399"
  },
  {
    "text": "query once we have that list of matches we would then compute a score for each",
    "start": "1248480",
    "end": "1254280"
  },
  {
    "text": "of the documents based on a number of criteria it can be a text based relevance score which would map the user",
    "start": "1254280",
    "end": "1263039"
  },
  {
    "text": "terms to their frequency and also uh a presence in each of the documents to",
    "start": "1263039",
    "end": "1269159"
  },
  {
    "text": "generate a text based match score we can also apply integer criteria things like",
    "start": "1269159",
    "end": "1275480"
  },
  {
    "text": "popularities or ranks or uh other integer other integers that we have",
    "start": "1275480",
    "end": "1281600"
  },
  {
    "text": "around to combine those into a full function to generate a score for each",
    "start": "1281600",
    "end": "1287080"
  },
  {
    "text": "document once the documents are scored we can sort them and provide the sorted",
    "start": "1287080",
    "end": "1292240"
  },
  {
    "text": "list to the user as the ultimate search",
    "start": "1292240",
    "end": "1296640"
  },
  {
    "text": "result I'm pres I'm showing here a reference architecture which is a simplified version of a website just to",
    "start": "1299400",
    "end": "1308080"
  },
  {
    "start": "1300000",
    "end": "1420000"
  },
  {
    "text": "give a feel for how Cloud search fits into the overall picture of a web application uh a web application we have",
    "start": "1308080",
    "end": "1315400"
  },
  {
    "text": "users coming in at the bottom left going to my it.com uh their traffic is load balanced",
    "start": "1315400",
    "end": "1322080"
  },
  {
    "text": "across a number of web servers and each of those web servers is responsible for handling the user the users's uh the the",
    "start": "1322080",
    "end": "1330960"
  },
  {
    "text": "HTTP request generating a page and displaying it back to the user within that if a user has entered something in",
    "start": "1330960",
    "end": "1338600"
  },
  {
    "text": "a search box the web app the web server would then pass that query off to Amazon",
    "start": "1338600",
    "end": "1345279"
  },
  {
    "text": "Cloud search over the uh URL based uh HTTP uh endpoint and Cloud search would",
    "start": "1345279",
    "end": "1354520"
  },
  {
    "text": "generate a response uh Cloud search can generate responses in either Json or XML",
    "start": "1354520",
    "end": "1360200"
  },
  {
    "text": "and send that back to the web server which would use that to construct a page",
    "start": "1360200",
    "end": "1365559"
  },
  {
    "text": "for the user to see construct the search results page behind the web servers typically we",
    "start": "1365559",
    "end": "1373159"
  },
  {
    "text": "would see some kind of database server or other um system of reference that has",
    "start": "1373159",
    "end": "1379320"
  },
  {
    "text": "all of the data that comprises the application the web server is running or",
    "start": "1379320",
    "end": "1384840"
  },
  {
    "text": "presenting uh that database server would be monitoring or receiving changes and",
    "start": "1384840",
    "end": "1390559"
  },
  {
    "text": "updates to the data that it's holding as that's happening there's a a second uh",
    "start": "1390559",
    "end": "1398279"
  },
  {
    "text": "an update processing system that needs to be running to pull those changes in and push them out to Cloud search so",
    "start": "1398279",
    "end": "1406000"
  },
  {
    "text": "it's a very simple uh integration there are to really just the two touch points there's the HTTP gets and the HTTP posts",
    "start": "1406000",
    "end": "1413640"
  },
  {
    "text": "where you pushing data in and pulling search results",
    "start": "1413640",
    "end": "1417919"
  },
  {
    "start": "1420000",
    "end": "1614000"
  },
  {
    "text": "out using Amazon Cloud search is uh really simple and we'll see an example of this but as we said when you start",
    "start": "1420919",
    "end": "1429159"
  },
  {
    "text": "with Cloud search you create a cloud search domain in the uh AWS console this",
    "start": "1429159",
    "end": "1435360"
  },
  {
    "text": "amounts to uh essentially clicking a a button and running through a wizard to a",
    "start": "1435360",
    "end": "1443240"
  },
  {
    "text": "few quick steps and in about 15 minutes you've got a search engine",
    "start": "1443240",
    "end": "1448919"
  },
  {
    "text": "running so let's talk a little bit about what's behind the functionality that",
    "start": "1448919",
    "end": "1454640"
  },
  {
    "text": "we've seen in search and search results if we go back to our example",
    "start": "1454640",
    "end": "1460880"
  },
  {
    "text": "where I've typed Kindle paper white we have again a user query and we have some",
    "start": "1460880",
    "end": "1466200"
  },
  {
    "text": "search documents now this user query contains two terms and we'll notice that the",
    "start": "1466200",
    "end": "1472960"
  },
  {
    "text": "titles for the Kindle paper whites con turn contain many terms we'd like to be able to match one or fewer than the",
    "start": "1472960",
    "end": "1481440"
  },
  {
    "text": "whole string uh in each of these titles to do that in Cloud search we have a",
    "start": "1481440",
    "end": "1488120"
  },
  {
    "text": "text type field which is processed and tokenized so that individual terms that",
    "start": "1488120",
    "end": "1493720"
  },
  {
    "text": "a user types can match against the individual terms in that field",
    "start": "1493720",
    "end": "1500320"
  },
  {
    "text": "in Cloud search you're also able to specify a flag that you want to be able to retrieve the original Source data",
    "start": "1500679",
    "end": "1508120"
  },
  {
    "text": "from the document and in this case we would be able to retrieve the title of the each of these products Kindle paper",
    "start": "1508120",
    "end": "1515120"
  },
  {
    "text": "white law uh along with our source data to display it to the",
    "start": "1515120",
    "end": "1521039"
  },
  {
    "text": "user in some cases we don't want to match individual terms from a particular",
    "start": "1523399",
    "end": "1530520"
  },
  {
    "text": "uh portion of a query we want to match exactly and only typically we would do",
    "start": "1530520",
    "end": "1537240"
  },
  {
    "text": "this in the case where we're fating these are not user enter terms these are terms that are in the application itself",
    "start": "1537240",
    "end": "1544159"
  },
  {
    "text": "we use in Cloud search a literal field which is not processed and not tokenized but must match exactly for this kind of",
    "start": "1544159",
    "end": "1551520"
  },
  {
    "text": "uh this kind of matching and for fating we're also able to turn on a flag that",
    "start": "1551520",
    "end": "1559000"
  },
  {
    "text": "uh asks Cloud search to retrieve facet counts along with search results for",
    "start": "1559000",
    "end": "1564919"
  },
  {
    "text": "particular Fields so if I had a color field I might enable fasting and and",
    "start": "1564919",
    "end": "1570399"
  },
  {
    "text": "that would allow me to pull color counts with each of my search results and finally we can enable search on fields",
    "start": "1570399",
    "end": "1577360"
  },
  {
    "text": "uh to enable direct searching against that",
    "start": "1577360",
    "end": "1581720"
  },
  {
    "text": "field the last kind of field we have is an integer field integer Fields allow us",
    "start": "1582600",
    "end": "1587799"
  },
  {
    "text": "to do range searches as we've seen with price and they also allow us to narrow",
    "start": "1587799",
    "end": "1594120"
  },
  {
    "text": "um narrow down into particular results four stars or more and they can also be",
    "start": "1594120",
    "end": "1599679"
  },
  {
    "text": "used in creating customized rank functions uh that can combine those",
    "start": "1599679",
    "end": "1604919"
  },
  {
    "text": "integer Fields along with text relevance and other information from the product to perform the",
    "start": "1604919",
    "end": "1612559"
  },
  {
    "text": "ranking in Cloud search and this is a a screenshot of the cloud search con",
    "start": "1612559",
    "end": "1618399"
  },
  {
    "start": "1614000",
    "end": "1669000"
  },
  {
    "text": "console we have a simple configuration screen that allows us to name the",
    "start": "1618399",
    "end": "1623919"
  },
  {
    "text": "different fields that are available in our documents uh in this case we're looking at a movie example we have an",
    "start": "1623919",
    "end": "1629960"
  },
  {
    "text": "actor director a genre title and a year and we can set the type of field uh text",
    "start": "1629960",
    "end": "1636480"
  },
  {
    "text": "type literal type or uint type we can set our options with a checkbox so they",
    "start": "1636480",
    "end": "1643240"
  },
  {
    "text": "could be searchable facet or result enabled we can also specify sources for fields which allows us to copy the data",
    "start": "1643240",
    "end": "1650200"
  },
  {
    "text": "from a field into a second field so the whole configuration process is very",
    "start": "1650200",
    "end": "1655520"
  },
  {
    "text": "straightforward and you know almost visual in this case but allows you with a few clicks to set up the processing of",
    "start": "1655520",
    "end": "1664039"
  },
  {
    "text": "the data that's in your search",
    "start": "1664039",
    "end": "1667398"
  },
  {
    "start": "1669000",
    "end": "1726000"
  },
  {
    "text": "documents as we mentioned in the reference architecture slide we typically would have a system of record",
    "start": "1669159",
    "end": "1675000"
  },
  {
    "text": "that's holding the information that we're using to construct our application we want to take if in the",
    "start": "1675000",
    "end": "1681640"
  },
  {
    "text": "case of a database we can take each of the rows and we can map that onto a possible",
    "start": "1681640",
    "end": "1687080"
  },
  {
    "text": "search result so we use those rows to create what we call search documents in a",
    "start": "1687080",
    "end": "1694480"
  },
  {
    "text": "little bit of a proprietary syntax called stf search data format this is",
    "start": "1694480",
    "end": "1699919"
  },
  {
    "text": "either adjacent or XML format that'll that wraps the values and Fields in your",
    "start": "1699919",
    "end": "1706200"
  },
  {
    "text": "search document and provides them to Cloud search in a in a format that it can read we'd have a process running to",
    "start": "1706200",
    "end": "1713720"
  },
  {
    "text": "extract search documents from our system of record our database and put those",
    "start": "1713720",
    "end": "1718799"
  },
  {
    "text": "together into batches to be posted to Amazon Cloud",
    "start": "1718799",
    "end": "1724600"
  },
  {
    "start": "1726000",
    "end": "1734000"
  },
  {
    "text": "search and we'll just show a quick example of a cloud search SDF",
    "start": "1726039",
    "end": "1733039"
  },
  {
    "start": "1734000",
    "end": "1797000"
  },
  {
    "text": "document every SDF document has a type we have two types in Cloud search",
    "start": "1734519",
    "end": "1740039"
  },
  {
    "text": "there's an ADD and a delete add allows you to either add new documents to Cloud",
    "start": "1740039",
    "end": "1745519"
  },
  {
    "text": "search or update existing documents each document also has some",
    "start": "1745519",
    "end": "1751360"
  },
  {
    "text": "identifying information uh an ID which should be globally unique across the",
    "start": "1751360",
    "end": "1756919"
  },
  {
    "text": "domain as well as a version number Cloud search will always serve the highest",
    "start": "1756919",
    "end": "1762080"
  },
  {
    "text": "version number that it's seen for any document that comes in and finally we have field in the",
    "start": "1762080",
    "end": "1769159"
  },
  {
    "text": "document in this case we have a title a description a category and a price",
    "start": "1769159",
    "end": "1776399"
  },
  {
    "text": "and the values for these fields can be either single or multivalued so the title is a single value the string",
    "start": "1776399",
    "end": "1782840"
  },
  {
    "text": "Kindle paper white the category is a multiple value two of them electronics",
    "start": "1782840",
    "end": "1787919"
  },
  {
    "text": "and ebook readers Cloud search is able to search against both single and multiple values",
    "start": "1787919",
    "end": "1795080"
  },
  {
    "text": "equally and now just going a little bit deeper we'd have we can have a quick look at the interaction with the",
    "start": "1796799",
    "end": "1803000"
  },
  {
    "start": "1797000",
    "end": "1844000"
  },
  {
    "text": "document service again it's over HTTP um you would provide the document",
    "start": "1803000",
    "end": "1810399"
  },
  {
    "text": "service endpoint and then the path to the restful resource which is 201121 that's an API version and",
    "start": "1810399",
    "end": "1818600"
  },
  {
    "text": "documents batch if you posted to this endpoint the body is there you would",
    "start": "1818600",
    "end": "1824360"
  },
  {
    "text": "have a content type content length an accept type Ty and a host that's the",
    "start": "1824360",
    "end": "1830320"
  },
  {
    "text": "HTTP header followed by in the body of the post the SDF documents that you've",
    "start": "1830320",
    "end": "1836279"
  },
  {
    "text": "constructed from your",
    "start": "1836279",
    "end": "1839600"
  },
  {
    "text": "database and looking at the search API again we have",
    "start": "1843320",
    "end": "1848440"
  },
  {
    "start": "1844000",
    "end": "1944000"
  },
  {
    "text": "HTTP the service endpoint 201021 search is the path and then we",
    "start": "1848440",
    "end": "1857039"
  },
  {
    "text": "can specify in the query parameters the query itself we support simple searches which",
    "start": "1857039",
    "end": "1863799"
  },
  {
    "text": "are just text against all the text fields in a domain with the Q equals URL",
    "start": "1863799",
    "end": "1870720"
  },
  {
    "text": "parameter we support Boolean combinations more complicated searches with our BQ parameter and here we have",
    "start": "1870720",
    "end": "1878919"
  },
  {
    "text": "an or of an and uh where a field has either a value one or value two and",
    "start": "1878919",
    "end": "1885720"
  },
  {
    "text": "value three fating is simple in Cloud search you",
    "start": "1885720",
    "end": "1890960"
  },
  {
    "text": "spec you specify the fields you'd like to retrieve facets for with facet equal",
    "start": "1890960",
    "end": "1896639"
  },
  {
    "text": "parameter we also support pagination with the start equals and size equals",
    "start": "1896639",
    "end": "1902080"
  },
  {
    "text": "parameters start equals specifies the first result you'd like to get and size equals is the number of results and we",
    "start": "1902080",
    "end": "1909080"
  },
  {
    "text": "support a customized ranking with our rank equals parameter this enables this allows you to sort either by a field",
    "start": "1909080",
    "end": "1917039"
  },
  {
    "text": "value you can sort alphabetically or numerically by the value of any field as well as by what we call rank Expressions",
    "start": "1917039",
    "end": "1924600"
  },
  {
    "text": "which can combine text relevance integer Fields uh and using using algebraic",
    "start": "1924600",
    "end": "1931720"
  },
  {
    "text": "expressions including you know standard math functions like multiplication division all that powers logarithms",
    "start": "1931720",
    "end": "1939240"
  },
  {
    "text": "geometric functions",
    "start": "1939240",
    "end": "1942679"
  },
  {
    "start": "1944000",
    "end": "1986000"
  },
  {
    "text": "Etc looking quickly at some at a search result and again Cloud search can provide results in either Json or XML we",
    "start": "1944760",
    "end": "1952639"
  },
  {
    "text": "would get back this example is in Json the rank function that was used to",
    "start": "1952639",
    "end": "1958080"
  },
  {
    "text": "compute this result the expression that was used this is the query that was provided to the",
    "start": "1958080",
    "end": "1964559"
  },
  {
    "text": "search engine and then a set of hits each hit represents one of the matches",
    "start": "1964559",
    "end": "1971240"
  },
  {
    "text": "Hits come out in sorted order of course most relevant at the top and each hit in this case we're just retrieving the",
    "start": "1971240",
    "end": "1978760"
  },
  {
    "text": "document ID of that",
    "start": "1978760",
    "end": "1982200"
  },
  {
    "text": "hit okay I'm going to move to do a little bit of a demo of cloud search",
    "start": "1985200",
    "end": "1992159"
  },
  {
    "start": "1986000",
    "end": "2407000"
  },
  {
    "text": "and if I can get this",
    "start": "1992159",
    "end": "1996440"
  },
  {
    "text": "going so what you should uh be seeing on your screen is a view of the console as",
    "start": "1999080",
    "end": "2006880"
  },
  {
    "text": "I first see it before I've created any search domains and we have a big uh call",
    "start": "2006880",
    "end": "2013159"
  },
  {
    "text": "to action in the middle create your first search domain I click that and there's a few",
    "start": "2013159",
    "end": "2020679"
  },
  {
    "text": "steps as we walk through the wizard first I'll give it a name um we'll call",
    "start": "2020679",
    "end": "2025799"
  },
  {
    "text": "it my demo domain I click continue I now have the option to set my",
    "start": "2025799",
    "end": "2033399"
  },
  {
    "text": "configuration up front usually a good idea to bring clouds are in with the configuration you want if you know it",
    "start": "2033399",
    "end": "2040399"
  },
  {
    "text": "but there are several options I have here I can analyze some sample files either from my local machine or from S3",
    "start": "2040399",
    "end": "2047080"
  },
  {
    "text": "if I have created SDF already this would allow me to Simply push SDF into Cloud search and Cloud search will generate a",
    "start": "2047080",
    "end": "2054720"
  },
  {
    "text": "heris configuration based on all of the fields that are present in the SDF As I",
    "start": "2054720",
    "end": "2059760"
  },
  {
    "text": "push it in I can also use a predefined configuration uh in this case we have uh",
    "start": "2059760",
    "end": "2067240"
  },
  {
    "text": "one we have a caned demo set which is an IMDb demo",
    "start": "2067240",
    "end": "2072679"
  },
  {
    "text": "set or I can configure manually I am going to select the IMDb",
    "start": "2072679",
    "end": "2078800"
  },
  {
    "text": "movies uh example and we'll see here that cloud",
    "start": "2078800",
    "end": "2086960"
  },
  {
    "text": "search has brought the configuration uh the suggested configuration for the IMDb",
    "start": "2086960",
    "end": "2093118"
  },
  {
    "text": "uh data set I'm able to edit this and add fields and change types and and do all that right here but I'm going to",
    "start": "2093119",
    "end": "2100000"
  },
  {
    "text": "pass that by for now I'm now able to set my access",
    "start": "2100000",
    "end": "2107520"
  },
  {
    "text": "policies Cloud search's security model is based on IP white listing and black",
    "start": "2107520",
    "end": "2113079"
  },
  {
    "text": "listing I can employ",
    "start": "2113079",
    "end": "2119000"
  },
  {
    "text": "um I can use my console to set my uh my",
    "start": "2119000",
    "end": "2124720"
  },
  {
    "text": "recommended rules so I can ow only my IP address I can allow everyone access to",
    "start": "2124720",
    "end": "2131200"
  },
  {
    "text": "all service I can deny access from everyone to all services uh in this case",
    "start": "2131200",
    "end": "2137560"
  },
  {
    "text": "I'm going to allow everyone access to all services and as you can see this is a a",
    "start": "2137560",
    "end": "2143680"
  },
  {
    "text": "sitter block so I'm able to specify both an IP and a range of ips uh",
    "start": "2143680",
    "end": "2150560"
  },
  {
    "text": "easily once I've walked through the wizard my I'm ready to set my domain I",
    "start": "2150560",
    "end": "2158119"
  },
  {
    "text": "can confirm that and Cloud search will initialize my",
    "start": "2158119",
    "end": "2164920"
  },
  {
    "text": "domain as I said this is a this is a uh",
    "start": "2169880",
    "end": "2175000"
  },
  {
    "text": "somewhat lengthy process this takes about a half an hour um I'll click okay",
    "start": "2175000",
    "end": "2180760"
  },
  {
    "text": "there when I do that I can see my dashboard I have on the left my search domain I have",
    "start": "2180760",
    "end": "2188800"
  },
  {
    "text": "in the middle uh a status for my domain and currently my domain is",
    "start": "2188800",
    "end": "2194160"
  },
  {
    "text": "loading I'm going to flip over",
    "start": "2194160",
    "end": "2199039"
  },
  {
    "text": "to I'm going to flip over to uh domain that I've brought up in this case I've simply walked",
    "start": "2200480",
    "end": "2207400"
  },
  {
    "text": "through the wizard and created this domain we can see on my dashboard I have",
    "start": "2207400",
    "end": "2212880"
  },
  {
    "text": "an indicator that tells me how many documents are currently in my domain not at the moment how many index Fields I",
    "start": "2212880",
    "end": "2219599"
  },
  {
    "text": "have and how many instances and partitions I have to support my search",
    "start": "2219599",
    "end": "2224880"
  },
  {
    "text": "here we also see the search and document endpoints which provide a good reference",
    "start": "2224880",
    "end": "2230200"
  },
  {
    "text": "to copy those out and use those in your own application one of the first things",
    "start": "2230200",
    "end": "2235839"
  },
  {
    "text": "we'll want to do here is upload documents and I will click the upload",
    "start": "2235839",
    "end": "2241880"
  },
  {
    "text": "documents button and here too it's a quick wizard uh we can upload files from",
    "start": "2241880",
    "end": "2248440"
  },
  {
    "text": "the local disk from S3 or we can pick predefined data in this case I'm going",
    "start": "2248440",
    "end": "2254359"
  },
  {
    "text": "to load the sample data for IMDb movies I click",
    "start": "2254359",
    "end": "2260440"
  },
  {
    "text": "continue There are 5,28 documents containing those fields and I can click",
    "start": "2260440",
    "end": "2267760"
  },
  {
    "text": "upload I can also download the generated SDF to see it Cloud search is now posting those",
    "start": "2267760",
    "end": "2274480"
  },
  {
    "text": "documents to my search domain",
    "start": "2274480",
    "end": "2279200"
  },
  {
    "text": "and successfully added 5,28 if we come back to our dashboard we",
    "start": "2293960",
    "end": "2300800"
  },
  {
    "text": "can see that cloud search is indexing those documents and those would",
    "start": "2300800",
    "end": "2308200"
  },
  {
    "text": "be done fairly",
    "start": "2308200",
    "end": "2312560"
  },
  {
    "text": "shortly in the meantime I can uh from the console I can",
    "start": "2314960",
    "end": "2320400"
  },
  {
    "text": "run a test search so I can search for say Star Wars one of my favorite",
    "start": "2320400",
    "end": "2328359"
  },
  {
    "text": "movies and I would see here uh our search results within the console of course we don't have a specialized UI to",
    "start": "2328520",
    "end": "2336920"
  },
  {
    "text": "display these these results to users what we do is we display all of the uh result enabled Fields along with any",
    "start": "2336920",
    "end": "2344560"
  },
  {
    "text": "facets in this case we have these documents 1 two 3 and four uh we have a",
    "start": "2344560",
    "end": "2351560"
  },
  {
    "text": "an indication of their relevance in terms of the text relevance we have the fields that were present in the docu the",
    "start": "2351560",
    "end": "2358240"
  },
  {
    "text": "documents the actor director title and year and over here we have the genre is",
    "start": "2358240",
    "end": "2364079"
  },
  {
    "text": "specified as a facetal field there are seven action films seven Adventure films seven sci-fi films",
    "start": "2364079",
    "end": "2370640"
  },
  {
    "text": "mostly because each of those Star Wars films is tagged with each of those genres and also fantasy and animation",
    "start": "2370640",
    "end": "2377839"
  },
  {
    "text": "and I can drill down here I can uh pick the adventure films from that uh from",
    "start": "2377839",
    "end": "2384640"
  },
  {
    "text": "that result set as well so this provides us you know again a simple way for us to look at what are",
    "start": "2384640",
    "end": "2391760"
  },
  {
    "text": "the documents or how our searches going to come out there's a number of other features and functionality here which uh",
    "start": "2391760",
    "end": "2398839"
  },
  {
    "text": "we won't go over in this webinar but I encourage everybody to go check it out with the uh can data set that we",
    "start": "2398839",
    "end": "2407520"
  },
  {
    "start": "2407000",
    "end": "2480000"
  },
  {
    "text": "have okay just a quick note on the",
    "start": "2413960",
    "end": "2420680"
  },
  {
    "text": "pricing uh with Amazon Cloud search on a single small instance like my IMDb uh",
    "start": "2420680",
    "end": "2425839"
  },
  {
    "text": "demo domain I can get started for just $2.40 a day which works out to about $75",
    "start": "2425839",
    "end": "2432400"
  },
  {
    "text": "a month uh as I said low cost we're providing this service uh on an hourly",
    "start": "2432400",
    "end": "2438079"
  },
  {
    "text": "basis allows you to bring it up take it down and um just 10 cents a day 10 cents",
    "start": "2438079",
    "end": "2444359"
  },
  {
    "text": "an hour in Us East we also have uh the AWS cost calculator we're integrated in",
    "start": "2444359",
    "end": "2451680"
  },
  {
    "text": "that and you can go and check out uh and game out different scenarios in terms of",
    "start": "2451680",
    "end": "2457440"
  },
  {
    "text": "numbers of documents size of data set and all of that to figure out how much Cloud search might",
    "start": "2457440",
    "end": "2463960"
  },
  {
    "text": "cost and right now we're having a free trial where your first 30 days of cloud",
    "start": "2463960",
    "end": "2470079"
  },
  {
    "text": "cloud search usage are free so easy to get started easy to kick the tires uh",
    "start": "2470079",
    "end": "2475920"
  },
  {
    "text": "inexpensive to run it as well so you know summing up we talked a",
    "start": "2475920",
    "end": "2483440"
  },
  {
    "text": "little bit about how powerful search is really critical for uh getting users to",
    "start": "2483440",
    "end": "2489640"
  },
  {
    "text": "the information that they need whether it's products or Media or even in a",
    "start": "2489640",
    "end": "2495200"
  },
  {
    "text": "social context getting them to friends um and Amazon Cloud search really makes",
    "start": "2495200",
    "end": "2500280"
  },
  {
    "text": "adding that search easy for for your web application you simply create a domain",
    "start": "2500280",
    "end": "2506960"
  },
  {
    "text": "post your documents and get your search",
    "start": "2506960",
    "end": "2511160"
  },
  {
    "text": "results I have some resources available on the Amazon Cloud search overview view page you can see at HTTP aws.amazon.com",
    "start": "2512839",
    "end": "2521200"
  },
  {
    "start": "2513000",
    "end": "2545000"
  },
  {
    "text": "cloudsearch we have FAQs we have a forum available we have documentation and",
    "start": "2521200",
    "end": "2526400"
  },
  {
    "text": "getting started including a walkth through that helps you set up the same",
    "start": "2526400",
    "end": "2531800"
  },
  {
    "text": "demo that we looked at we also have demos and tutorials white papers plenty of information there on how to get",
    "start": "2531800",
    "end": "2538440"
  },
  {
    "text": "started uh and build your Search",
    "start": "2538440",
    "end": "2543760"
  },
  {
    "start": "2545000",
    "end": "2879000"
  },
  {
    "text": "application thank you everybody very much uh we're going to pause now for",
    "start": "2545760",
    "end": "2550839"
  },
  {
    "text": "questions and uh please type those into the question box if you'd like to do",
    "start": "2550839",
    "end": "2557319"
  },
  {
    "text": "that great thanks very much John uh it was a great overview of cloud search and what it can do in action um let me just",
    "start": "2557319",
    "end": "2564480"
  },
  {
    "text": "uh go to some of the questions that we've received already um if you have any others as John said please just type",
    "start": "2564480",
    "end": "2570680"
  },
  {
    "text": "them into that question box um first question I have here is around language",
    "start": "2570680",
    "end": "2576480"
  },
  {
    "text": "support uh believe somebody says that you're in English only uh what if I have some of",
    "start": "2576480",
    "end": "2583440"
  },
  {
    "text": "my uh documents that are include foreign languages not English languages",
    "start": "2583440",
    "end": "2588800"
  },
  {
    "text": "excellent question excellent question um Cloud search Amazon Cloud search supports the full Unicode character set",
    "start": "2588800",
    "end": "2596680"
  },
  {
    "text": "so you're able to work with documents in other languages um we only",
    "start": "2596680",
    "end": "2604359"
  },
  {
    "text": "support uh English natively and what that means is that um we the the",
    "start": "2604359",
    "end": "2611599"
  },
  {
    "text": "tokenization and the separation of words uh stemming and and stop words would be",
    "start": "2611599",
    "end": "2618720"
  },
  {
    "text": "english-based but you can work around that and you can actually provide a good search experience even just using the uh",
    "start": "2618720",
    "end": "2626640"
  },
  {
    "text": "the direct matching great thanks John um a question",
    "start": "2626640",
    "end": "2632920"
  },
  {
    "text": "about synonyms can I upload uh synonym dictionary from a file and then in",
    "start": "2632920",
    "end": "2639960"
  },
  {
    "text": "addition can my synonyms be two words so let's say VP might be vice",
    "start": "2639960",
    "end": "2647200"
  },
  {
    "text": "president so um yes Cloud search does support uh",
    "start": "2647720",
    "end": "2652920"
  },
  {
    "text": "synonyms synonyms are applied at index time so if I had something like wrench and I wanted to make a synonym spanner I",
    "start": "2652920",
    "end": "2661079"
  },
  {
    "text": "could either uh through the console I can provide wrench and spanner as",
    "start": "2661079",
    "end": "2666400"
  },
  {
    "text": "synonyms Direct directly in the console as well you can create a synonym file",
    "start": "2666400",
    "end": "2672000"
  },
  {
    "text": "and either using the uh command line tools or the direct to API communication",
    "start": "2672000",
    "end": "2677559"
  },
  {
    "text": "with configuration service you can upload that set of synonyms I believe",
    "start": "2677559",
    "end": "2683440"
  },
  {
    "text": "that we do support multi-word synonyms um that would not be through",
    "start": "2683440",
    "end": "2688640"
  },
  {
    "text": "the console though I believe only through command line or direct to",
    "start": "2688640",
    "end": "2694680"
  },
  {
    "text": "API question about reliability uh in the case of an e-commerce site where search",
    "start": "2695240",
    "end": "2701400"
  },
  {
    "text": "is really Central to not just the user experience but ultimately to revenue um",
    "start": "2701400",
    "end": "2707680"
  },
  {
    "text": "can you comment about reliability requirements and then in addition uh what about performance um sure comment",
    "start": "2707680",
    "end": "2715079"
  },
  {
    "text": "here is uh I need let's say 100 millisecond uh latency can can can Cloud",
    "start": "2715079",
    "end": "2722440"
  },
  {
    "text": "search do that sure so um Cloud search again the search instance itself",
    "start": "2722440",
    "end": "2729079"
  },
  {
    "text": "encapsulates all of the storage compute all of that stuff necessary to uh run",
    "start": "2729079",
    "end": "2735839"
  },
  {
    "text": "your search engine should a host go offline the service as a whole is able",
    "start": "2735839",
    "end": "2741359"
  },
  {
    "text": "to bring a new host in and bring the the index onto that host and make it",
    "start": "2741359",
    "end": "2746640"
  },
  {
    "text": "available as part of your search engine so Cloud search itself is self-healing",
    "start": "2746640",
    "end": "2752040"
  },
  {
    "text": "it will bring host back into play albe it with a 5 to 10 minute uh window where",
    "start": "2752040",
    "end": "2757839"
  },
  {
    "text": "it's regenerating that host um beyond that cloud search as an AWS Service uh",
    "start": "2757839",
    "end": "2765079"
  },
  {
    "text": "you know within AWS mostly we would look at multi- availability zones as a way of",
    "start": "2765079",
    "end": "2771640"
  },
  {
    "text": "providing High availability Solutions Cloud search itself right now is not multi-az enabled but we are of course as",
    "start": "2771640",
    "end": "2780319"
  },
  {
    "text": "an AWS service it's kind of a core functionality of AWS and it's something",
    "start": "2780319",
    "end": "2785440"
  },
  {
    "text": "that we're highly interested in and bringing to Market very soon um so",
    "start": "2785440",
    "end": "2790720"
  },
  {
    "text": "that's in the realm of reliability with respect to query",
    "start": "2790720",
    "end": "2795960"
  },
  {
    "text": "performance uh it's a yeah it's a little bit of a caveat because as with a",
    "start": "2795960",
    "end": "2801920"
  },
  {
    "text": "database you can provide queries that are arbitrarily complex and quer some queries will run slower than other",
    "start": "2801920",
    "end": "2808160"
  },
  {
    "text": "queries so it's hard to put an absolute relative number on how quickly queries run in Cloud search having said that we",
    "start": "2808160",
    "end": "2815680"
  },
  {
    "text": "see across the Sur that we have a typical you know 50 millisecond or less response time for",
    "start": "2815680",
    "end": "2822960"
  },
  {
    "text": "most of the queries that are coming to the service thank you uh here's a question",
    "start": "2822960",
    "end": "2830760"
  },
  {
    "text": "um I'm building a social site that tracks user behavior and I would like to",
    "start": "2830760",
    "end": "2836359"
  },
  {
    "text": "use jQuery or Ajax rather than you know ec2 would post and get um is there",
    "start": "2836359",
    "end": "2843520"
  },
  {
    "text": "support for this now or in the future yeah thanks um Cloud search does not",
    "start": "2843520",
    "end": "2850839"
  },
  {
    "text": "support uh jsonp which is a typical workaround for cross-side scripting um",
    "start": "2850839",
    "end": "2857520"
  },
  {
    "text": "we generally recommend to do the the Ajax uh",
    "start": "2857520",
    "end": "2862800"
  },
  {
    "text": "interaction a proxying service or proxying host that sits in front of",
    "start": "2862800",
    "end": "2868240"
  },
  {
    "text": "cloud search and allows uh allows you to talk to that service through Ajax or",
    "start": "2868240",
    "end": "2873839"
  },
  {
    "text": "jQuery okay",
    "start": "2873839",
    "end": "2877839"
  },
  {
    "start": "2879000",
    "end": "3046000"
  },
  {
    "text": "is it possible to use Amazon Cloud search when 100% encrypted",
    "start": "2880640",
    "end": "2886960"
  },
  {
    "text": "manner um that is the index data being encrypted and queries against it being encrypted as well so classer supports uh",
    "start": "2886960",
    "end": "2895800"
  },
  {
    "text": "https Communications in terms of both the upload and the the document service",
    "start": "2895800",
    "end": "2903079"
  },
  {
    "text": "post and the search service get so in flight the data is",
    "start": "2903079",
    "end": "2909240"
  },
  {
    "text": "encrypted however we don't support or an encrypted index at rest on on disk um",
    "start": "2909240",
    "end": "2917640"
  },
  {
    "text": "this is a topic of you know research in the search Community how to do encryption encrypted indices they",
    "start": "2917640",
    "end": "2925000"
  },
  {
    "text": "basically have to be unencrypted in order to use them uh uh to generate the",
    "start": "2925000",
    "end": "2931119"
  },
  {
    "text": "the listings of documents that contain matches for the terms got a couple of questions about",
    "start": "2931119",
    "end": "2937520"
  },
  {
    "text": "upload batch uploads uh one is you know if I have a 10 gig database and do I",
    "start": "2937520",
    "end": "2945280"
  },
  {
    "text": "have to then do multiple uh five gig uh 5 megabyte I",
    "start": "2945280",
    "end": "2950319"
  },
  {
    "text": "should say batch uploads so as of now Cloud search does",
    "start": "2950319",
    "end": "2955520"
  },
  {
    "text": "not provide a direct data pipeline that would allow you to hook your database directly uh to upload your data in",
    "start": "2955520",
    "end": "2961880"
  },
  {
    "text": "larger chunks since the communication is over uh http there's the HTTP connection",
    "start": "2961880",
    "end": "2968640"
  },
  {
    "text": "timeout which kind of limits the amount of data that we can accept in any chunk",
    "start": "2968640",
    "end": "2974680"
  },
  {
    "text": "and uh that that's where we put the limit at 5 megabytes just in terms of total transfer time 5 megabytes in terms",
    "start": "2974680",
    "end": "2982400"
  },
  {
    "text": "of total transfer time so with a 10 gigabyte databas database yes you would",
    "start": "2982400",
    "end": "2987960"
  },
  {
    "text": "have to download that 10 gabt create SDF from it and then push each 5 megabyte",
    "start": "2987960",
    "end": "2994079"
  },
  {
    "text": "chunk into Cloud search okay um question about can I use cloud search",
    "start": "2994079",
    "end": "3000880"
  },
  {
    "text": "Standalone in other words without any other AWS Services uh or do I have to use it in",
    "start": "3000880",
    "end": "3007880"
  },
  {
    "text": "conjunction with other AWS Services yeah you can absolutely use cloud search as a",
    "start": "3007880",
    "end": "3013319"
  },
  {
    "text": "standalone product um again the interaction is all restful over those uh",
    "start": "3013319",
    "end": "3019599"
  },
  {
    "text": "URLs over those DNS entries and as such",
    "start": "3019599",
    "end": "3024960"
  },
  {
    "text": "Cloud search itself as a service wraps all of the AWS services that would be required to deploy and to deploy a",
    "start": "3024960",
    "end": "3033440"
  },
  {
    "text": "search engine um so there's no need to purchase other AWS services in order to",
    "start": "3033440",
    "end": "3039839"
  },
  {
    "text": "interact with Cloud search you'd simply interact with the two end",
    "start": "3039839",
    "end": "3045680"
  },
  {
    "start": "3046000",
    "end": "3463000"
  },
  {
    "text": "points um this relates to the rank Expressions that you mentioned John can",
    "start": "3046119",
    "end": "3051280"
  },
  {
    "text": "rank Expressions be complex so that they can include factors like freshness or or",
    "start": "3051280",
    "end": "3057040"
  },
  {
    "text": "quality or user preferences and behaviors based on PL past clicks and",
    "start": "3057040",
    "end": "3063319"
  },
  {
    "text": "usage yeah uh so we didn't get deeply into rank Expressions but um Cloud",
    "start": "3063319",
    "end": "3069680"
  },
  {
    "text": "search also supports what we call a query time rank expression and this allows you to define a rank expression",
    "start": "3069680",
    "end": "3076640"
  },
  {
    "text": "along with the query so if you're looking at a particular user you're able",
    "start": "3076640",
    "end": "3081760"
  },
  {
    "text": "to take data that you have about that user in terms of location or preferences or uh other things and wrap that into a",
    "start": "3081760",
    "end": "3090880"
  },
  {
    "text": "a ranking function that you apply to the search results so customizing them a little bit for that particular user for",
    "start": "3090880",
    "end": "3098640"
  },
  {
    "text": "freshness and popularity and other metrics that are more static that adhere",
    "start": "3098640",
    "end": "3104040"
  },
  {
    "text": "to a particular document you're also able to create rank Expressions that are more static and push them into your",
    "start": "3104040",
    "end": "3109920"
  },
  {
    "text": "Cloud search domain for usage um against for usage with your queries",
    "start": "3109920",
    "end": "3117000"
  },
  {
    "text": "so for these you're able to again arbitrarily if you have a date stamp or a time stamp on your document you can",
    "start": "3117000",
    "end": "3123520"
  },
  {
    "text": "use that in a mathematical expression to uh to create a rank based on the",
    "start": "3123520",
    "end": "3129319"
  },
  {
    "text": "freshness of that document so we can both do the more",
    "start": "3129319",
    "end": "3135440"
  },
  {
    "text": "static uh ranking that's based on numeric or based on metrics that adhere",
    "start": "3135440",
    "end": "3141599"
  },
  {
    "text": "to a document as well as a more Dynamic rank expression where it depends depends",
    "start": "3141599",
    "end": "3146720"
  },
  {
    "text": "on the particular user and the particular query related to that there was a",
    "start": "3146720",
    "end": "3152680"
  },
  {
    "text": "question about do we support geospatial or location based search yeah absolutely",
    "start": "3152680",
    "end": "3159640"
  },
  {
    "text": "we do support uh geospatial search we don't have a native goo type which is a",
    "start": "3159640",
    "end": "3165520"
  },
  {
    "text": "latitude or a longitude but you could translate the latitude and longitude",
    "start": "3165520",
    "end": "3170720"
  },
  {
    "text": "themselves into an integer format and store that along with your documents with those those integer",
    "start": "3170720",
    "end": "3177280"
  },
  {
    "text": "latitude and longitudes you're able to construct what's essentially a bounding box using an integer range across the",
    "start": "3177280",
    "end": "3184920"
  },
  {
    "text": "latitude and longitude to provide a search within a box Geographic box at",
    "start": "3184920",
    "end": "3191839"
  },
  {
    "text": "query time you can also embed the user's latitude and longitude in the query and",
    "start": "3191839",
    "end": "3197480"
  },
  {
    "text": "provide a ranking function based on a distance metric that you calculate in that ranking function so you can both do",
    "start": "3197480",
    "end": "3204839"
  },
  {
    "text": "a bounding box search as well as a distance-based sorting",
    "start": "3204839",
    "end": "3210240"
  },
  {
    "text": "okay so here's a scenario question regarding large real time uh",
    "start": "3210240",
    "end": "3216200"
  },
  {
    "text": "applications where there might be millions of documents that would need to be published in that kind of situation",
    "start": "3216200",
    "end": "3222960"
  },
  {
    "text": "how do you deal with the IP restrictions and specifically if one machine can't",
    "start": "3222960",
    "end": "3228000"
  },
  {
    "text": "handle the job how would you scale the publishing as well as having the IPS",
    "start": "3228000",
    "end": "3234640"
  },
  {
    "text": "accepted sure so we generally recommend that uh users",
    "start": "3234640",
    "end": "3241760"
  },
  {
    "text": "employ elastic IPS with um AWS this allows you to manage a pool of hosts",
    "start": "3241760",
    "end": "3248799"
  },
  {
    "text": "that are essentially proxying updates to Cloud search in that way um you can Channel",
    "start": "3248799",
    "end": "3257280"
  },
  {
    "text": "all of the results through known IP addresses and uh get them into your search or document service",
    "start": "3257280",
    "end": "3263960"
  },
  {
    "text": "securely having said that the security model of IP addresses is one that we're",
    "start": "3263960",
    "end": "3270280"
  },
  {
    "text": "looking at quite intently and we feel like there there's a better match within",
    "start": "3270280",
    "end": "3276359"
  },
  {
    "text": "the realm of the of the cloud than IP addresses so we'd like to see some kind",
    "start": "3276359",
    "end": "3281799"
  },
  {
    "text": "of integration with our uh identity and access management systems or uh security",
    "start": "3281799",
    "end": "3288079"
  },
  {
    "text": "groups or some other way of allowing users to uh securely connect to their",
    "start": "3288079",
    "end": "3294720"
  },
  {
    "text": "document and search services I think we have time for two more questions so I haven't stumped you yet",
    "start": "3294720",
    "end": "3301960"
  },
  {
    "text": "so let me come up with two more uh one question was around how long does it normally take for new documents to show",
    "start": "3301960",
    "end": "3310200"
  },
  {
    "text": "up uh in the search results so here here too as within as",
    "start": "3310200",
    "end": "3317079"
  },
  {
    "text": "with query performance the update performance has to be caveat with and it depends on the",
    "start": "3317079",
    "end": "3325240"
  },
  {
    "text": "total volume that you're pushing into the system at any given time along with the configuration of the index and the",
    "start": "3325240",
    "end": "3331839"
  },
  {
    "text": "contents of the documents themselves all of these can have pretty significant effects on the latency of the indexing",
    "start": "3331839",
    "end": "3339400"
  },
  {
    "text": "of that document having said that what we expect is that in most cases new",
    "start": "3339400",
    "end": "3345520"
  },
  {
    "text": "documents should be available within a few seconds to a few minutes U last question is really around",
    "start": "3345520",
    "end": "3353440"
  },
  {
    "text": "document types can I search on HTML or word office docs or",
    "start": "3353440",
    "end": "3361319"
  },
  {
    "text": "PDFs so yes you can absolutely search on those types um before being able to search on those",
    "start": "3361319",
    "end": "3368880"
  },
  {
    "text": "documents the you have to extract the text from those documents we've provided in our command line tools uh a basic uh",
    "start": "3368880",
    "end": "3377839"
  },
  {
    "text": "really it's a an experimental tool that we're working with to try to figure out what's the best way to do this text",
    "start": "3377839",
    "end": "3383720"
  },
  {
    "text": "extraction so there's a choice either you can do that text extraction yourself pull out",
    "start": "3383720",
    "end": "3390359"
  },
  {
    "text": "the text from those documents and then index that text or you can use the cloud search command line tools to do that",
    "start": "3390359",
    "end": "3397000"
  },
  {
    "text": "extraction for you and there's also uh this would also apply through the console the console is able to accept",
    "start": "3397000",
    "end": "3404599"
  },
  {
    "text": "files either from the local disk or from S3 which are and then extract the",
    "start": "3404599",
    "end": "3409839"
  },
  {
    "text": "content from those documents so you can do that kind of search there's a little bit of a text extraction issue either",
    "start": "3409839",
    "end": "3415880"
  },
  {
    "text": "you do it yourself or you let the cloud search tools do it for you and perhaps we should mention that at really large",
    "start": "3415880",
    "end": "3421720"
  },
  {
    "text": "scale we have some partners that have some tools and technologies that can help with this so let us know if that's",
    "start": "3421720",
    "end": "3428079"
  },
  {
    "text": "a a requirement for your use case so thank you very much um appreciate you",
    "start": "3428079",
    "end": "3433720"
  },
  {
    "text": "coming to this webcast today as I mentioned we'll we'll post the slides and the recording shortly uh if you have",
    "start": "3433720",
    "end": "3440599"
  },
  {
    "text": "any um questions about some of the things that we addressed please take a look at 8 aws.amazon.com",
    "start": "3440599",
    "end": "3449319"
  },
  {
    "text": "cloudsearch and there's a whole lot of resources there for you including more information about how you can get",
    "start": "3449319",
    "end": "3455119"
  },
  {
    "text": "started with the free trial so thank you once again and uh we look forward to speaking with you bye-bye",
    "start": "3455119",
    "end": "3463280"
  }
]