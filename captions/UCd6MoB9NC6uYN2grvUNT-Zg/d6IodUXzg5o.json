[
  {
    "start": "0",
    "end": "164000"
  },
  {
    "text": "hi everybody first of all thank you so much for coming I will say that if you come sit in the front I will give you",
    "start": "0",
    "end": "7410"
  },
  {
    "text": "stickers that is a thing that you can get and they're great stickers there AWS lamda stickers this talk has relatively",
    "start": "7410",
    "end": "14190"
  },
  {
    "text": "little to do with AWS lamda but I just like Liam do a lot so how many of you",
    "start": "14190",
    "end": "19350"
  },
  {
    "text": "see me speak before great so I have no",
    "start": "19350",
    "end": "25380"
  },
  {
    "text": "reputation to ruin today we're not getting started yet we're gonna let people come in for a little bit longer",
    "start": "25380",
    "end": "31470"
  },
  {
    "text": "but I'm curious how many people are already using x-ray okay how many people",
    "start": "31470",
    "end": "37860"
  },
  {
    "text": "are planning on using x-ray after this talk having not seen any of the slides yet wonderful perfect 100% of the",
    "start": "37860",
    "end": "45390"
  },
  {
    "text": "audience so my name is Randall I am a software engineer at Amazon Web Services as a millennial I take a lot of selfies",
    "start": "45390",
    "end": "51750"
  },
  {
    "text": "and I'm curious would you guys be interested in taking a selfie right now there's a there's a point to this so",
    "start": "51750",
    "end": "57780"
  },
  {
    "text": "there's a demo this this corresponds to the demo later if you don't want to be in the selfie I don't know I don't know",
    "start": "57780",
    "end": "67080"
  },
  {
    "text": "how laws in England work in America it's just like tough luck but also spelling",
    "start": "67080",
    "end": "73110"
  },
  {
    "text": "here is very strange if you guys notice that like all so Ashley is from Britain",
    "start": "73110",
    "end": "78840"
  },
  {
    "text": "I guess and I had to correct the spelling on all of his slides it's like everything was spelled with s's and no",
    "start": "78840",
    "end": "84000"
  },
  {
    "text": "Z's and all right are you guys ready for this do you wanna alright",
    "start": "84000",
    "end": "90530"
  },
  {
    "text": "okay",
    "start": "91770",
    "end": "94770"
  },
  {
    "text": "okay thank you guys so this is part of the demo that we're gonna show potentially later and now we're gonna",
    "start": "97250",
    "end": "105840"
  },
  {
    "text": "get started so first of all I wanted to",
    "start": "105840",
    "end": "112320"
  },
  {
    "text": "say thanks to everybody for coming to this session I know you have a choice in sessions today and we want to thank you for flying with me I mean coming to this",
    "start": "112320",
    "end": "120360"
  },
  {
    "text": "session there's a lot of really great content here at these summits we put these on for developers like you guys who need to learn about this stuff in",
    "start": "120360",
    "end": "127080"
  },
  {
    "text": "order to be more effective and my goal today is to get you as much information in the shortest amount of time that I",
    "start": "127080",
    "end": "133170"
  },
  {
    "text": "can that said this is a deep dive session so I will be very technical I",
    "start": "133170",
    "end": "138570"
  },
  {
    "text": "will not be going slowly and if you are not interested in a deep dive session",
    "start": "138570",
    "end": "144150"
  },
  {
    "text": "now's the time to get out because there are other sessions that are more introductory that I think may be helpful but this is going to be deep dive",
    "start": "144150",
    "end": "151230"
  },
  {
    "text": "everybody okay with that great and I'm gonna try my best to avoid as much of",
    "start": "151230",
    "end": "156660"
  },
  {
    "text": "the kind of AWS spin as I can I'm gonna try and be as like open and broad about",
    "start": "156660",
    "end": "162000"
  },
  {
    "text": "it as I can so let's get started this is me you should follow me on Twitter it's",
    "start": "162000",
    "end": "168660"
  },
  {
    "text": "the only real takeaway from this this is my actually Amazon email address there's no filters there are lambda functions",
    "start": "168660",
    "end": "174390"
  },
  {
    "text": "that Aldo respond but I would really enjoy it if everybody here shot me an",
    "start": "174390",
    "end": "179610"
  },
  {
    "text": "email and was just like hey I'm planning on building this do you have any advice my day job is to actually answer",
    "start": "179610",
    "end": "185040"
  },
  {
    "text": "questions from customers from developers and I spend a lot of time doing that and I'm very interested in doing that so",
    "start": "185040",
    "end": "191400"
  },
  {
    "text": "please send me your use cases you know if you want me to retweet you or blog about something I'm happy to do that",
    "start": "191400",
    "end": "197790"
  },
  {
    "text": "and I also want to say thank you to all the other people at AWS who worked on these slides I've been trying to click",
    "start": "197790",
    "end": "203940"
  },
  {
    "text": "to the next slide for a little bit and it's not working there we go I have to point in that general direction so what",
    "start": "203940",
    "end": "209100"
  },
  {
    "text": "we're gonna do is we're gonna and I also want to apologize to the cameraman briefly because I'm a very energetic",
    "start": "209100",
    "end": "214110"
  },
  {
    "text": "speaker I'm gonna be moving around a lot sorry and thank you okay so first we're gonna cover what is x-ray",
    "start": "214110",
    "end": "221970"
  },
  {
    "text": "we're gonna go over some core concepts some vocabulary that's necessary for x-ray we're gonna go do a really quick deep dive on the API",
    "start": "221970",
    "end": "228720"
  },
  {
    "text": "for Amazon x-ray and we're gonna go over some use cases and Ashley is going to talk about that and I don't know what",
    "start": "228720",
    "end": "235260"
  },
  {
    "text": "getting started is we're not gonna do that we're gonna do some Q&A though okay",
    "start": "235260",
    "end": "240270"
  },
  {
    "start": "239000",
    "end": "294000"
  },
  {
    "text": "so how many people already have a micro services based application deployed and",
    "start": "240270",
    "end": "246720"
  },
  {
    "text": "production for the purposes of any video audience later on that was 100 percent of the audience so how many people find",
    "start": "246720",
    "end": "253380"
  },
  {
    "text": "this more difficult to debug than your previous iteration whether it was a monolithic application or okay so again",
    "start": "253380",
    "end": "261480"
  },
  {
    "text": "100% of the audience so we have these issues right when we move to micro",
    "start": "261480",
    "end": "268350"
  },
  {
    "text": "services of not being able to instrument them using the software that we're used to not being able to build them with the",
    "start": "268350",
    "end": "275070"
  },
  {
    "text": "same frameworks and stuff that we're used to building with I can't SSH into a server and run l sof when i've got a",
    "start": "275070",
    "end": "281580"
  },
  {
    "text": "hundred and fifty different servers you know i if i'm it's hard for me to figure out how and where things are failing",
    "start": "281580",
    "end": "287250"
  },
  {
    "text": "especially when you're at a production load so those are some of the challenges that we face and xray solve some of",
    "start": "287250",
    "end": "296190"
  },
  {
    "start": "294000",
    "end": "421000"
  },
  {
    "text": "these challenges xray solve some of",
    "start": "296190",
    "end": "302040"
  },
  {
    "text": "these challenges by helping you to identify both latency and performance bottlenecks exceptions taking production",
    "start": "302040",
    "end": "310980"
  },
  {
    "text": "data that's going through your system and creating telemetry around it that you can query and the query aspect is",
    "start": "310980",
    "end": "317400"
  },
  {
    "text": "very important so this is x-ray I'm",
    "start": "317400",
    "end": "322650"
  },
  {
    "text": "missing a slide I'm sorry oh no oh well",
    "start": "322650",
    "end": "328820"
  },
  {
    "text": "so right now we have SDK is available for Java net and nodejs",
    "start": "328820",
    "end": "334020"
  },
  {
    "text": "there are a couple of different community frameworks that support many other languages whether that's go Ruby Python I'll recommend some of those",
    "start": "334020",
    "end": "340290"
  },
  {
    "text": "frameworks later but Rackspace came out with something called fleece which i think is the most excellent Python",
    "start": "340290",
    "end": "347070"
  },
  {
    "text": "framework for x-ray right now the the",
    "start": "347070",
    "end": "353130"
  },
  {
    "text": "SDKs that we've released also have instrumentation very easily especially in Java for instrumenting",
    "start": "353130",
    "end": "360240"
  },
  {
    "text": "HTTP requests through tomcat or various databases my sequel Postgres and dynamo",
    "start": "360240",
    "end": "365820"
  },
  {
    "text": "DB and then queues and all these other things and in addition to that every call that you make out to the AWS SDK",
    "start": "365820",
    "end": "374310"
  },
  {
    "text": "will be instrumented so what is x-ray made out of x-ray has two kind of",
    "start": "374310",
    "end": "380009"
  },
  {
    "text": "concepts here there's like a site there's like a whole section of my presentation that's like missing I'm",
    "start": "380009",
    "end": "386850"
  },
  {
    "text": "really sorry I have to fix this okay",
    "start": "386850",
    "end": "396150"
  },
  {
    "text": "we're just gonna go through it anyway sorry about that okay so there are two key components there's the SDK which you",
    "start": "396150",
    "end": "404580"
  },
  {
    "text": "run in your code it's you know a library that you include and then there's the x-ray Damon and the next ray Damon runs",
    "start": "404580",
    "end": "410370"
  },
  {
    "text": "on your instances whether it's on premises or in AWS or even if it didn't",
    "start": "410370",
    "end": "415949"
  },
  {
    "text": "lambda function the X ray Damon runs and collects metrics that are produced by the SDKs so here's some key vocabulary",
    "start": "415949",
    "end": "424110"
  },
  {
    "start": "421000",
    "end": "495000"
  },
  {
    "text": "words to kind of keep us moving there's a trace so a trace provides an Indian",
    "start": "424110",
    "end": "430740"
  },
  {
    "text": "data analysis kind of ID for all of the",
    "start": "430740",
    "end": "436229"
  },
  {
    "text": "services so I'll show you what a trace ID looks like in a little bit they're segments and segments are kind of the",
    "start": "436229",
    "end": "443250"
  },
  {
    "text": "the the portions of a trace ID that you're interested in diving deep on so",
    "start": "443250",
    "end": "448289"
  },
  {
    "text": "you can add various sub segments and annotations metadata to each of these segments and you can let's say you are",
    "start": "448289",
    "end": "456650"
  },
  {
    "text": "pushing data into dynamo DB and it's not scaling quickly enough so you get",
    "start": "456650",
    "end": "461880"
  },
  {
    "text": "throttled and you want to figure out which of your requests are being throttled it's actually really easy to do so you have a trace ID or you have a",
    "start": "461880",
    "end": "469710"
  },
  {
    "text": "whole series of trace IDs and you can put in brackets throttled on the the the",
    "start": "469710",
    "end": "475430"
  },
  {
    "text": "service DynamoDB or the name of your table even and it will find you all of",
    "start": "475430",
    "end": "480570"
  },
  {
    "text": "the traces that were throttled and you can associate various metadata with each",
    "start": "480570",
    "end": "486360"
  },
  {
    "text": "of these traces so you can say hey I want to include the item that I'm trying to insert as an",
    "start": "486360",
    "end": "492729"
  },
  {
    "text": "annotation in x-ray then obviously that's a lot of data that's a lot of",
    "start": "492729",
    "end": "498490"
  },
  {
    "start": "495000",
    "end": "540000"
  },
  {
    "text": "telemetry to be moving around so what we do it to kind of minimize the performance impact of doing all of this",
    "start": "498490",
    "end": "506530"
  },
  {
    "text": "tracing and all of this extra network traffic is we have something called a sampling configuration and this is just",
    "start": "506530",
    "end": "511960"
  },
  {
    "text": "a JSON document that allows you to define what stuff should be sampled what",
    "start": "511960",
    "end": "517060"
  },
  {
    "text": "stuff should be traced and what things should not and my general piece of",
    "start": "517060",
    "end": "523930"
  },
  {
    "text": "advice for this is you should trace every single error so anything that results in a user getting a 500 or 400",
    "start": "523930",
    "end": "530560"
  },
  {
    "text": "you should absolutely send that telemetry up and everything else you can probably rely on only 10 to 5% of those",
    "start": "530560",
    "end": "537820"
  },
  {
    "text": "requests being traced ok so the API xr8",
    "start": "537820",
    "end": "543190"
  },
  {
    "start": "540000",
    "end": "636000"
  },
  {
    "text": "provides a set of API is that allow you to do both batch requests and single",
    "start": "543190",
    "end": "548709"
  },
  {
    "text": "requests you can also send traces that are currently in progress so you don't have to wait for a request to complete",
    "start": "548709",
    "end": "554470"
  },
  {
    "text": "to send all of the data you can send it partially and then send it an addendum to that later on and you can get all of",
    "start": "554470",
    "end": "562240"
  },
  {
    "text": "that data through various queries so the batch gate API is allow you to construct filters and queries on the traces that",
    "start": "562240",
    "end": "568420"
  },
  {
    "text": "you're submitting to kind of dive deep on the data more than what the current console allows you to do now I have not",
    "start": "568420",
    "end": "575320"
  },
  {
    "text": "yet run into a situation and I do run production applications with a lot of daily active users there's one called",
    "start": "575320",
    "end": "580540"
  },
  {
    "text": "get shots has anybody heard of that what it does is it takes a picture of your face every time you do it get commits",
    "start": "580540",
    "end": "586270"
  },
  {
    "text": "and then it uploads that and a bunch of personal data to the cloud and you can",
    "start": "586270",
    "end": "591970"
  },
  {
    "text": "you can add dot avi on to the end of the URL check out get shots comm just saying it's pretty cool so you have a bunch of",
    "start": "591970",
    "end": "599770"
  },
  {
    "text": "daily active users you're trying to instrument all of this you're trying to understand it and I have not yet reached",
    "start": "599770",
    "end": "605260"
  },
  {
    "text": "the point where I wasn't able to construct a query in the console that solved what I was trying to do now when",
    "start": "605260",
    "end": "611560"
  },
  {
    "text": "you get into more advanced use cases you may need to go outside of the console there's also something in the console",
    "start": "611560",
    "end": "617800"
  },
  {
    "text": "called the service map which is very very pretty did you guys go to the keynote this morning so in the keynote I think Vernor",
    "start": "617800",
    "end": "624310"
  },
  {
    "text": "talked to x-ray and I think he probably showed a picture of the service map I don't ever really use the service map it's very",
    "start": "624310",
    "end": "630160"
  },
  {
    "text": "pretty though most of the time I'm kind of diving deep on individual traces to figure out where something went wrong so",
    "start": "630160",
    "end": "636820"
  },
  {
    "start": "636000",
    "end": "686000"
  },
  {
    "text": "here's the API there they're really only four they're more calls than this but",
    "start": "636820",
    "end": "642160"
  },
  {
    "text": "these are the four main actions you can put trace segments you can batch get traces and you can get the service graph",
    "start": "642160",
    "end": "647620"
  },
  {
    "text": "the service graph is defined as a JSON dock one of the things that I wanted to say about the service graph that is not",
    "start": "647620",
    "end": "653380"
  },
  {
    "text": "immediately clear is it's only showing a sample so it's not a it's showing a",
    "start": "653380",
    "end": "659740"
  },
  {
    "text": "representative sample of all of the data that x-ray is collected but it is not showing a perfect high fidelity picture",
    "start": "659740",
    "end": "668320"
  },
  {
    "text": "just like elasticsearch in Cabana it's only taking you know data points and honing in the resolution over time so",
    "start": "668320",
    "end": "674590"
  },
  {
    "text": "that allows us to send the information out a lot faster and reduce the amount",
    "start": "674590",
    "end": "679930"
  },
  {
    "text": "of network traffic and then get trace summaries just receives all of the individual segments within a trace so",
    "start": "679930",
    "end": "687400"
  },
  {
    "start": "686000",
    "end": "721000"
  },
  {
    "text": "this is what a segment document looks like does this have a laser pointer I'm gonna poke somebody's eye up so this is",
    "start": "687400",
    "end": "694600"
  },
  {
    "text": "what segments document looks like and it's really straightforward you have this kind of ID and you have a trace ID",
    "start": "694600",
    "end": "702310"
  },
  {
    "text": "this trace idea I'll explain more about it later but this is a version number this is a hexadecimal encoded UNIX epoch",
    "start": "702310",
    "end": "709210"
  },
  {
    "text": "time and this is a [Music] 94-96 bit ID unique ID that should be",
    "start": "709210",
    "end": "715750"
  },
  {
    "text": "globally unique and then you can also kind of do in-progress stuff which is",
    "start": "715750",
    "end": "720850"
  },
  {
    "text": "what I was talking about really oh yeah here great so this is what a trace ID looks like ninety-six bit globally unique ID which translates to about",
    "start": "720850",
    "end": "727420"
  },
  {
    "text": "twenty four hex digits and then you have this kind of sample equals one on the end and this is this header anything",
    "start": "727420",
    "end": "735190"
  },
  {
    "text": "that has this header most of the x-ray SDKs will take that and start adding additional segments into that trace ID",
    "start": "735190",
    "end": "741970"
  },
  {
    "text": "so let's say you have traffic coming in over ELB ELB will generate this header",
    "start": "741970",
    "end": "748600"
  },
  {
    "text": "for you let's say you have a customer who's trying to forge a header well we have protections against that too and",
    "start": "748600",
    "end": "754990"
  },
  {
    "text": "that's explained pretty in a pretty detailed way in our commentation but if anybody's interesting that I can talk more about",
    "start": "754990",
    "end": "760070"
  },
  {
    "text": "it and then we also have this kind of parent segment ID which is where you can",
    "start": "760070",
    "end": "765200"
  },
  {
    "text": "say this trace is a child of this other trace and you can build kind of a",
    "start": "765200",
    "end": "770810"
  },
  {
    "text": "directed acyclic graph from this series of traces and that's what helps us get",
    "start": "770810",
    "end": "776000"
  },
  {
    "text": "that service map that I'll show in a little while okay that is a very fast speed through",
    "start": "776000",
    "end": "781670"
  },
  {
    "text": "of the AWS x-ray service I'm gonna let",
    "start": "781670",
    "end": "787430"
  },
  {
    "text": "Ashley who is a nativist customer and a software engineer at sky scanner come",
    "start": "787430",
    "end": "793370"
  },
  {
    "text": "and talk about how they use x-ray to be to build more effective micro services",
    "start": "793370",
    "end": "799010"
  },
  {
    "text": "so Ashley cool thanks friend oh yeah",
    "start": "799010",
    "end": "806870"
  },
  {
    "text": "that's me I'm actually up in it Skyscanner probably given half so we",
    "start": "806870",
    "end": "813140"
  },
  {
    "text": "recently took on to look at x-ray about three or four months ago to decide to",
    "start": "813140",
    "end": "820070"
  },
  {
    "text": "sort of think about how it could improve our micro services across physical so is",
    "start": "820070",
    "end": "825980"
  },
  {
    "text": "anyone not her disguise kind of first up really I think most people want one",
    "start": "825980",
    "end": "831170"
  },
  {
    "text": "person so we have a goal to be the most user most trusted online travel brand in",
    "start": "831170",
    "end": "837230"
  },
  {
    "text": "the world and by ambitious goal so with that comes like a lot of complexity we're approaching 100 million monthly",
    "start": "837230",
    "end": "843860"
  },
  {
    "text": "unique visitors to the site we get in towards a thousand micro services in a dress as well we do thousands of deploys",
    "start": "843860",
    "end": "851990"
  },
  {
    "text": "in fact we have a stretch goal of 10,000 deployments a day to a TBS that's that's kind of our goal that we want it it's a",
    "start": "851990",
    "end": "857960"
  },
  {
    "text": "rate change get very quick feedback cycles so with this like massive complexity it comes to a point where",
    "start": "857960",
    "end": "864470"
  },
  {
    "text": "like no single person understands the whole system the complexity is so vast that you need tools and things that help",
    "start": "864470",
    "end": "872030"
  },
  {
    "text": "you to actually understand parts of the system so we have goals of hundreds and",
    "start": "872030",
    "end": "879680"
  },
  {
    "start": "876000",
    "end": "917000"
  },
  {
    "text": "availability site going down for maintenance is absolutely not acceptable",
    "start": "879680",
    "end": "886190"
  },
  {
    "text": "nowadays we need to be 24/7 availability as a global product so it costs the whole whole site so what does they",
    "start": "886190",
    "end": "895660"
  },
  {
    "text": "do a sex week and so request tracing gives us the ability to track requests",
    "start": "895660",
    "end": "901180"
  },
  {
    "text": "around this vast complex system from the very first user like searching on our",
    "start": "901180",
    "end": "908170"
  },
  {
    "text": "website to get some flight details to them getting the flights in return and everything in between the thousands of",
    "start": "908170",
    "end": "914499"
  },
  {
    "text": "micro services that have that request hits during so what do we built so we've",
    "start": "914499",
    "end": "921910"
  },
  {
    "text": "we've added x-ray to we have projects booked to allowable engineers to create",
    "start": "921910",
    "end": "928509"
  },
  {
    "text": "Java services we use Java drop wizard and node react for creating services and",
    "start": "928509",
    "end": "934779"
  },
  {
    "text": "we've we've supplied wrappers for the Jersey client and request him a quest",
    "start": "934779",
    "end": "940149"
  },
  {
    "text": "BOM isn't native node clients for doing HTTP calls between services we promote",
    "start": "940149",
    "end": "949569"
  },
  {
    "start": "947000",
    "end": "981000"
  },
  {
    "text": "functions for developers to wrap particular bits of code so we're going to see some examples of this in a minute but what we've got here is how the laser",
    "start": "949569",
    "end": "958749"
  },
  {
    "text": "works up there there's basically you can",
    "start": "958749",
    "end": "964139"
  },
  {
    "text": "wrap particular sections of code maybe problem bits of code or particularly compute to compute intensive bits of",
    "start": "964139",
    "end": "970569"
  },
  {
    "text": "code that you want to trace you want to know more about we've guarded the ability to wrap Eva developers that",
    "start": "970569",
    "end": "976509"
  },
  {
    "text": "easily wrap like bits of code around tracing and then be able to see the results of that we founded simple",
    "start": "976509",
    "end": "983050"
  },
  {
    "start": "981000",
    "end": "999000"
  },
  {
    "text": "annotations that trace sub segments - this is for Java so people can just add",
    "start": "983050",
    "end": "988209"
  },
  {
    "text": "that that annotation to a method and there and that will immediately be traced and then can be visualized in the",
    "start": "988209",
    "end": "994839"
  },
  {
    "text": "in the in the x-ray that we're going to see in a minute the next really cool",
    "start": "994839",
    "end": "1003420"
  },
  {
    "start": "999000",
    "end": "1040000"
  },
  {
    "text": "thing that we've built is like X ray has deep linking so you can create a URL",
    "start": "1003420",
    "end": "1008579"
  },
  {
    "text": "that will link right into X ray so we have at the top here we have a log",
    "start": "1008579",
    "end": "1014129"
  },
  {
    "text": "message that's log in in in Cabana like some errors occurred 500 or something",
    "start": "1014129",
    "end": "1020459"
  },
  {
    "text": "and then there's a field that's actually the link at the end hyperlink it says the trace link there",
    "start": "1020459",
    "end": "1026290"
  },
  {
    "text": "the the developer can click the they see the arrow they might get an alert on the",
    "start": "1026290",
    "end": "1031720"
  },
  {
    "text": "error and then you can click the link and go be linked directly into x-ray and they can start digging deeper to see",
    "start": "1031720",
    "end": "1037660"
  },
  {
    "text": "what the problem was and find out more about it so like all these features",
    "start": "1037660",
    "end": "1043569"
  },
  {
    "start": "1040000",
    "end": "1074000"
  },
  {
    "text": "sound great but like how does x-ray actually help us you know it's just that we want to do request tracing but why so",
    "start": "1043570",
    "end": "1051570"
  },
  {
    "text": "so we've got a couple use cases I'm going to talk about so the first use case is by understanding your dependencies so in when your system is",
    "start": "1051570",
    "end": "1060580"
  },
  {
    "text": "like this it was simple or when you're like you know you have a monitor application or whatever it's just one service and you can kind of understand",
    "start": "1060580",
    "end": "1067240"
  },
  {
    "text": "like you get the replay you see all the code and you can maybe understand when you've got something like this as well where you've got different services",
    "start": "1067240",
    "end": "1072760"
  },
  {
    "text": "talking to each other but when you have systems like this and obviously it's much much more vaster than this when",
    "start": "1072760",
    "end": "1078370"
  },
  {
    "start": "1074000",
    "end": "1124000"
  },
  {
    "text": "you've got thousands of micro services what do you do when like you know service way way far away from yours goes",
    "start": "1078370",
    "end": "1086590"
  },
  {
    "text": "down or starts and submitted like a bug",
    "start": "1086590",
    "end": "1091600"
  },
  {
    "text": "or it's behaving badly for whatever reason and you're depending on it through like chains of different services how do you how do you even like",
    "start": "1091600",
    "end": "1097930"
  },
  {
    "text": "find that out I mean we've had a instance where for example we've got",
    "start": "1097930",
    "end": "1105190"
  },
  {
    "text": "like sandbox test environment and you know production services might be referencing that sandbox environment and",
    "start": "1105190",
    "end": "1111960"
  },
  {
    "text": "yeah we don't know that that's the case that's that that's a mistake that shouldn't be happening but we don't",
    "start": "1111960",
    "end": "1117280"
  },
  {
    "text": "really know that until we shut down a sandbox service and it's like something on productions broken we didn't have the oversight of that so x-ray allows you to",
    "start": "1117280",
    "end": "1126640"
  },
  {
    "start": "1124000",
    "end": "1194000"
  },
  {
    "text": "this is the service map Randall was talking about very briefly so this is just one example of like a client",
    "start": "1126640",
    "end": "1132160"
  },
  {
    "text": "request coming in and we see it's hitting a service in this case that the",
    "start": "1132160",
    "end": "1137170"
  },
  {
    "text": "very first like circle and then it's fanning out to multiple different services so you might think that your",
    "start": "1137170",
    "end": "1144960"
  },
  {
    "text": "system looks something like this like you know I've got a service and I depend on these bunch of different services but",
    "start": "1144960",
    "end": "1150550"
  },
  {
    "text": "what x-ray gives you is like the real data what actually is happening who's actually calling Wow",
    "start": "1150550",
    "end": "1156110"
  },
  {
    "text": "so now she might send up some something like this like Oh actually I'm calling services I didn't realize it was or like",
    "start": "1156110",
    "end": "1161149"
  },
  {
    "text": "I'm calling these caches actually because I'm connected to this guy and this guy's added a new dependency that I didn't know about and stuff so you you",
    "start": "1161149",
    "end": "1167779"
  },
  {
    "text": "really start to get more oversight about your system and your dependencies so this is the first used case like x-ray",
    "start": "1167779",
    "end": "1175640"
  },
  {
    "text": "helps us to understand the complexity of our distributed systems which in a way",
    "start": "1175640",
    "end": "1180769"
  },
  {
    "text": "that like logs can the service map in particular allows us to visualize the",
    "start": "1180769",
    "end": "1186470"
  },
  {
    "text": "system as a whole and dive in and out where we need you know you can select on a service map dive into a service see",
    "start": "1186470",
    "end": "1192169"
  },
  {
    "text": "see dependencies like that so the second use case is on troubleshooting",
    "start": "1192169",
    "end": "1200899"
  },
  {
    "start": "1194000",
    "end": "1239000"
  },
  {
    "text": "I've got slow performance here but it's troubleshooting problems basically so imagine you get an alert some things",
    "start": "1200899",
    "end": "1208039"
  },
  {
    "text": "this creased in performance you might you know latency of an endpoint web has gone to a point where it's not",
    "start": "1208039",
    "end": "1214399"
  },
  {
    "text": "acceptable anymore you get an alert on that so how would you do bugs that you might look at the code might look at the",
    "start": "1214399",
    "end": "1220039"
  },
  {
    "text": "recent commits you might start trolling through the logs these are all like things that you do as an engineer but",
    "start": "1220039",
    "end": "1225830"
  },
  {
    "text": "you know let's try using x-ray instead now like and see sort of how it could help so what I'm about to show you is a",
    "start": "1225830",
    "end": "1232159"
  },
  {
    "text": "genuine bug that was found using x-ray like a month or two months ago so they",
    "start": "1232159",
    "end": "1242570"
  },
  {
    "start": "1239000",
    "end": "1311000"
  },
  {
    "text": "had a service that was performing a bit slower than expected so we will look",
    "start": "1242570",
    "end": "1248480"
  },
  {
    "text": "into the trace and see what's going on so this is a trace view I'm gonna dive into a little bit of the sections here",
    "start": "1248480",
    "end": "1254960"
  },
  {
    "text": "so we have here at the top is a service OC registry it's called and there's there's a particular set of",
    "start": "1254960",
    "end": "1262059"
  },
  {
    "text": "functions that are called which at the top essentially the main call took 43 milliseconds and then there's this this",
    "start": "1262059",
    "end": "1269809"
  },
  {
    "text": "next line down it says UMS generate URL I appreciate it's probably too small to read but it says it takes 41",
    "start": "1269809",
    "end": "1276860"
  },
  {
    "text": "milliseconds and it did a couple of remote calls and such so that's what the trace fee does it okay we can look at",
    "start": "1276860",
    "end": "1283279"
  },
  {
    "text": "the code and maybe we can kind of understand it but that's it's digging it a little deeper so so this first section vote what was",
    "start": "1283279",
    "end": "1291049"
  },
  {
    "text": "happening so we've got your message an irate URL calls a thing called shared cash fetch the show cash fetch pulls off",
    "start": "1291049",
    "end": "1298549"
  },
  {
    "text": "to a thing called shared cash buhbuh buhbuh buhbuh 80s and then that takes two milliseconds and then there's",
    "start": "1298549",
    "end": "1304849"
  },
  {
    "text": "another call to UMS proxy that took 37 million milliseconds so let me dive dive",
    "start": "1304849",
    "end": "1313909"
  },
  {
    "start": "1311000",
    "end": "1326000"
  },
  {
    "text": "dive into this a bit more so what's actually being cooled so OC registry is calling um s generate URL that's calling",
    "start": "1313909",
    "end": "1320960"
  },
  {
    "text": "shared cache fetch and that makes two calls okay well we've understood that from x-ray fine as what's happening so",
    "start": "1320960",
    "end": "1326769"
  },
  {
    "start": "1326000",
    "end": "1365000"
  },
  {
    "text": "so they started into this first one so shared cache fetch we can click on it and see actually what's going on so we",
    "start": "1326769",
    "end": "1332450"
  },
  {
    "text": "can see from the very first screenshot that took two milliseconds and it was a remote call that's that's what x-ray has",
    "start": "1332450",
    "end": "1338690"
  },
  {
    "text": "told us we've then got some metadata about it we've got these annotations we can see that you know from the name",
    "start": "1338690",
    "end": "1345019"
  },
  {
    "text": "shared cache it's a get with the annotations that we're getting a cache key is this is the key that we're",
    "start": "1345019",
    "end": "1350509"
  },
  {
    "text": "getting and the operation is a get so we're fetching someone from the cache because even more they about it here",
    "start": "1350509",
    "end": "1356239"
  },
  {
    "text": "we've got for example start time end time it's not in progress anymore stuff like that we're really getting deep",
    "start": "1356239",
    "end": "1361369"
  },
  {
    "text": "insight here now",
    "start": "1361369",
    "end": "1364330"
  },
  {
    "start": "1365000",
    "end": "1418000"
  },
  {
    "text": "so the second call is a remote call to to retrieve it requested value so",
    "start": "1367840",
    "end": "1374110"
  },
  {
    "text": "similarly it was like the other one was a remote call to it Shay cash this is now UMS we're calling off the UM Xbox II",
    "start": "1374110",
    "end": "1381190"
  },
  {
    "text": "it's a hasty endpoint that we're calling we've got the request URL here we can",
    "start": "1381190",
    "end": "1386380"
  },
  {
    "text": "see that we're requesting a particular thing from from a service and we get the response state this was a two hundred",
    "start": "1386380",
    "end": "1391480"
  },
  {
    "text": "and it took roughly thirty seven milliseconds to respond so what's",
    "start": "1391480",
    "end": "1397480"
  },
  {
    "text": "actually happening here like what do i what am i gain what knowledge of my gaining from looking at this so actually",
    "start": "1397480",
    "end": "1403300"
  },
  {
    "text": "we're getting it we're getting had cache miss so we're hitting the cache is returned it's returning without my key",
    "start": "1403300",
    "end": "1410200"
  },
  {
    "text": "and then I'm calling off to the underlying service to get it for real so",
    "start": "1410200",
    "end": "1419490"
  },
  {
    "start": "1418000",
    "end": "1471000"
  },
  {
    "text": "but we seem to be getting awful lot of cache misses so going back to our original trace we can see that we do",
    "start": "1419490",
    "end": "1427690"
  },
  {
    "text": "share cache fetch and that takes two milliseconds and then we call off to the underlying service and that takes 37",
    "start": "1427690",
    "end": "1434110"
  },
  {
    "text": "milliseconds can anyone spot a problem here shout out",
    "start": "1434110",
    "end": "1440200"
  },
  {
    "text": "I seen you not in",
    "start": "1440200",
    "end": "1445049"
  },
  {
    "text": "I heard somewhere I cashed not being updated yeah exactly cats not be we're not popular we're getting we're trying",
    "start": "1447530",
    "end": "1453680"
  },
  {
    "text": "to get from the cash nothing there so we're going off to a service but then we're not putting it back in the cash when we've got it so yeah great we've",
    "start": "1453680",
    "end": "1460490"
  },
  {
    "text": "supplied a bug like using x-ray we didn't have to fall through logs so yeah that's exactly right we're doing a cache",
    "start": "1460490",
    "end": "1466400"
  },
  {
    "text": "get but no cache set so we can see here cache get and we've got the annotations there yeah so so what do we do we fix",
    "start": "1466400",
    "end": "1473240"
  },
  {
    "start": "1471000",
    "end": "1515000"
  },
  {
    "text": "the bug deploy check x-ray again so this is the bug submitted I mean fixed so",
    "start": "1473240",
    "end": "1480440"
  },
  {
    "text": "again the same call shared cache either get it took two milliseconds the and",
    "start": "1480440",
    "end": "1486560"
  },
  {
    "text": "then we go off to the underlying service 37 is like milliseconds and then we've",
    "start": "1486560",
    "end": "1492350"
  },
  {
    "text": "got this now the third call here shared cache which is it took nine milliseconds",
    "start": "1492350",
    "end": "1498650"
  },
  {
    "text": "I'm actually calling that asynchronously we see the bar going off the edges taking nine seconds but we don't need to",
    "start": "1498650",
    "end": "1504740"
  },
  {
    "text": "wait for that to complete in order to return that's why it's the bars going off the end of so we can return the",
    "start": "1504740",
    "end": "1510020"
  },
  {
    "text": "value back to the user but then asynchronously populate our cache so yeah that's what we're doing",
    "start": "1510020",
    "end": "1518810"
  },
  {
    "text": "and then if we dive into that final piece we can see yeah the operation and we're doing that was a set we're setting",
    "start": "1518810",
    "end": "1524480"
  },
  {
    "text": "that cache key back so then we see subsequent calls to this to this",
    "start": "1524480",
    "end": "1531740"
  },
  {
    "start": "1526000",
    "end": "1555000"
  },
  {
    "text": "function they're actually now getting begin cache hits which is obviously what we wanted and that's what we want to",
    "start": "1531740",
    "end": "1537020"
  },
  {
    "text": "speed up our service and and we're talking like the tenth a 10 times speed up here this was the bug being solved so",
    "start": "1537020",
    "end": "1543740"
  },
  {
    "text": "we previously was taking 41 milliseconds for this endpoint to return constantly now when we get a cache here we're",
    "start": "1543740",
    "end": "1549530"
  },
  {
    "text": "getting returns of 4 milliseconds so so obviously we've sped up the service a lot so that's just one example and why",
    "start": "1549530",
    "end": "1558950"
  },
  {
    "start": "1555000",
    "end": "1596000"
  },
  {
    "text": "x-ray gives us deep insight into our services when things go wrong analysis",
    "start": "1558950",
    "end": "1564380"
  },
  {
    "text": "of the traces allows us to really understand information about how services have interacting with each",
    "start": "1564380",
    "end": "1569750"
  },
  {
    "text": "other and it's like it's just another tool to your armory right you know you",
    "start": "1569750",
    "end": "1575000"
  },
  {
    "text": "might have a bunch of different lurtz and graphs and logs and all these sort of stuff but x-ray is just another",
    "start": "1575000",
    "end": "1581630"
  },
  {
    "text": "one that it's like okay when something goes wrong and things do go wrong very very often you've just got this other",
    "start": "1581630",
    "end": "1587780"
  },
  {
    "text": "tool to pick up and really start investigating into your services so that",
    "start": "1587780",
    "end": "1593330"
  },
  {
    "text": "was it that's how we use it it's guys gonna I think I'll hand back to Randall",
    "start": "1593330",
    "end": "1598420"
  },
  {
    "text": "okay so okay so you guys can you hear me",
    "start": "1603040",
    "end": "1611140"
  },
  {
    "text": "you guys can see how you could use x-ray really dive deep in various production",
    "start": "1611140",
    "end": "1617450"
  },
  {
    "text": "telemetry was that running in production okay so it was I mean it's it's a pretty",
    "start": "1617450",
    "end": "1622880"
  },
  {
    "text": "powerful service that allows you to do that and how many people have used something like Cabana or new relic to",
    "start": "1622880",
    "end": "1628880"
  },
  {
    "text": "kind of trace all this stuff before it so this these this service is not a",
    "start": "1628880",
    "end": "1634040"
  },
  {
    "text": "complete replacement for any of those because you guys still use Cabana as well and then you have the deep linking into x-ray so what it's allowing you to",
    "start": "1634040",
    "end": "1640640"
  },
  {
    "text": "do is something that these other services don't allow you to do which is dive deep on production telemetry as",
    "start": "1640640",
    "end": "1648650"
  },
  {
    "text": "it's happening so progress and I want to I want to cover a few different things and I also want to check the time to see",
    "start": "1648650",
    "end": "1654860"
  },
  {
    "text": "if we have enough time for a demo and I think we do so pricing is very very",
    "start": "1654860",
    "end": "1662660"
  },
  {
    "start": "1660000",
    "end": "1704000"
  },
  {
    "text": "cheap or you know it's pay on demand it's essentially the first time in sales",
    "start": "1662660",
    "end": "1668330"
  },
  {
    "text": "and Chase is recording four months are free and then the first million traces that you retrieve or scan or query are",
    "start": "1668330",
    "end": "1673670"
  },
  {
    "text": "free and then beyond that it's $5 per million traces per month and it's 50",
    "start": "1673670",
    "end": "1680570"
  },
  {
    "text": "cents per million for treat traces that you're scanning and querying and you can",
    "start": "1680570",
    "end": "1686780"
  },
  {
    "text": "define your sampling rules on lambda and ELB and all of these other different",
    "start": "1686780",
    "end": "1691970"
  },
  {
    "text": "services that you use to only sample errors are only sample you know ten",
    "start": "1691970",
    "end": "1697040"
  },
  {
    "text": "percent of your total request volume to kind of get a better idea of what's happening there and also you don't have",
    "start": "1697040",
    "end": "1703310"
  },
  {
    "text": "to trace every single request you can so these are currently supported frameworks and SDKs we've got Java and you can",
    "start": "1703310",
    "end": "1709550"
  },
  {
    "start": "1704000",
    "end": "1721000"
  },
  {
    "text": "instrument Tomcat spring Boothe a bunch of servlet servlet filters you can do c-sharp with net and",
    "start": "1709550",
    "end": "1716059"
  },
  {
    "text": "dotnet core on lambda and nodejs we have Express filters and request filters and things like that these are the services",
    "start": "1716059",
    "end": "1723440"
  },
  {
    "text": "that are currently natively supported that will automatically generate trace IDs for you alb lambda api gateway ec2 and elastic",
    "start": "1723440",
    "end": "1730550"
  },
  {
    "text": "beanstalk and elastic Beanstalk is just a combination of the above services so you can also generate and this is",
    "start": "1730550",
    "end": "1740150"
  },
  {
    "text": "something that I don't have slides for but I wanted to talk about it briefly the the coolest thing that I've seen so",
    "start": "1740150",
    "end": "1745190"
  },
  {
    "text": "far is you're actually able to treat external services as nodes in your service graph so even though you don't",
    "start": "1745190",
    "end": "1751130"
  },
  {
    "text": "have the ability to instrument the code that's executing in those other sections",
    "start": "1751130",
    "end": "1757370"
  },
  {
    "text": "you are able to treat your calls out to that and measure the latency to to these",
    "start": "1757370",
    "end": "1762830"
  },
  {
    "text": "external services over time and you can dive deep you can say okay what's the p99 what's the 99th percentile value when I",
    "start": "1762830",
    "end": "1770390"
  },
  {
    "text": "call it to this external service and if it's 180 milliseconds when you really need it to be 10 milliseconds you can",
    "start": "1770390",
    "end": "1776000"
  },
  {
    "text": "kind of figure out ok what it what it's different about this call that I'm making to this service that's causing it",
    "start": "1776000",
    "end": "1781490"
  },
  {
    "text": "to take so much longer and sometimes the answer is external service which is just slower for some mystery but often it",
    "start": "1781490",
    "end": "1787070"
  },
  {
    "text": "could be I'm sending you know Unicode or I'm sending doubly encoded and stuff all",
    "start": "1787070",
    "end": "1795140"
  },
  {
    "text": "right do you guys want to see a demo that was not energetic for the purposes of any",
    "start": "1795140",
    "end": "1804559"
  },
  {
    "text": "video recording the audience was super enthused about a demo [Music]",
    "start": "1804559",
    "end": "1812339"
  },
  {
    "text": "I probably should have connected to the the ethernet cord up here",
    "start": "1815389",
    "end": "1823089"
  },
  {
    "text": "so lambda functions are very very simple to enable x-ray on it's basically you go",
    "start": "1830540",
    "end": "1838920"
  },
  {
    "text": "in to you know you can say you can say",
    "start": "1838920",
    "end": "1844350"
  },
  {
    "start": "1842000",
    "end": "1905000"
  },
  {
    "text": "AWS lamda configure or update function",
    "start": "1844350",
    "end": "1853820"
  },
  {
    "text": "configuration and then just enable tracing mode active it's really",
    "start": "1853820",
    "end": "1861179"
  },
  {
    "text": "straightforward really simple to do that in lamda I can show you in the console as well but you guys remember that",
    "start": "1861179",
    "end": "1866820"
  },
  {
    "text": "selfie we took earlier right this is not the right region everybody remembers the",
    "start": "1866820",
    "end": "1877559"
  },
  {
    "text": "selfie we took earlier right I have to have audio responses just because the",
    "start": "1877559",
    "end": "1882750"
  },
  {
    "text": "videos can't see the incredibly enthusiastic nods from everybody in this room so I've tried to replace as much of",
    "start": "1882750",
    "end": "1890880"
  },
  {
    "text": "my life as possible with the lambda function so I have this one lambda",
    "start": "1890880",
    "end": "1896190"
  },
  {
    "text": "function that my mom still has not figured out that like responds with my current location and health and well-being but that's not the one we're",
    "start": "1896190",
    "end": "1902850"
  },
  {
    "text": "looking for right now we're looking for this one this is the selfie processor and being a millennial and self-obsessed",
    "start": "1902850",
    "end": "1909510"
  },
  {
    "start": "1905000",
    "end": "1928000"
  },
  {
    "text": "I take a lot of selfies and then I like to analyze them using recognition has anybody seen recognition the framework",
    "start": "1909510",
    "end": "1915920"
  },
  {
    "text": "so recognition for those of you who are not aware is kind of an image analysis framework that we have at AWS and the I",
    "start": "1915920",
    "end": "1925679"
  },
  {
    "text": "am role that I have on this is delete lambda x-ray great the way you can enable x-ray is to just click enable",
    "start": "1925679",
    "end": "1932130"
  },
  {
    "start": "1928000",
    "end": "1995000"
  },
  {
    "text": "active tracing now one component of this to take keep in mind is when you enable active tracing on a request everything",
    "start": "1932130",
    "end": "1938700"
  },
  {
    "text": "that comes through with a tracing with trace as true in the in the request is",
    "start": "1938700",
    "end": "1944040"
  },
  {
    "text": "going to be traced but if you explicitly set that you don't want the requests traced it will not log that in addition",
    "start": "1944040",
    "end": "1950340"
  },
  {
    "text": "to that this does take some memory running the daemon takes at maximum 5",
    "start": "1950340",
    "end": "1955679"
  },
  {
    "text": "percent of the total memory of your function so it does have some minor performance and it's important to keep",
    "start": "1955679",
    "end": "1961919"
  },
  {
    "text": "that in mind with lambda it's not so important with ec2 or other services because the effect is negligible but with lambda you're",
    "start": "1961919",
    "end": "1968230"
  },
  {
    "text": "concerned about individual hundreds of milliseconds for execution because that's our smallest billing so you want",
    "start": "1968230",
    "end": "1975400"
  },
  {
    "text": "to try and make sure that you're you're executing quickly okay so we're going to",
    "start": "1975400",
    "end": "1980940"
  },
  {
    "text": "SSH into an instance it's not the right one hopefully this is the right one",
    "start": "1980940",
    "end": "1991590"
  },
  {
    "text": "we're gonna figure out what the right instance is",
    "start": "1995750",
    "end": "1999669"
  },
  {
    "text": "did anybody see my one-and-a-half factors of authentication earlier that's",
    "start": "2002860",
    "end": "2010060"
  },
  {
    "text": "the basis of my rejected PyCon talk",
    "start": "2010060",
    "end": "2014130"
  },
  {
    "text": "I can't remember which of these instances it's on let's go with this one",
    "start": "2017940",
    "end": "2024350"
  },
  {
    "text": "Oh so I'll go into my selfies folder and",
    "start": "2026440",
    "end": "2033240"
  },
  {
    "text": "I'm just gonna say hey copy all of these into",
    "start": "2033240",
    "end": "2040650"
  },
  {
    "text": "into this selfies bucket Oh unknown option recursive did I spell it wrong I",
    "start": "2045080",
    "end": "2050510"
  },
  {
    "text": "I live stream and live code on Twitch and the number one problem that I have",
    "start": "2050510",
    "end": "2055679"
  },
  {
    "text": "is spelling okay so that's gonna run for",
    "start": "2055679",
    "end": "2062490"
  },
  {
    "start": "2061000",
    "end": "2087000"
  },
  {
    "text": "a bit and I'm doing it over SSH so that I don't destroy the Wi-Fi you're welcome",
    "start": "2062490",
    "end": "2067520"
  },
  {
    "text": "and then we can go and we can go into x-ray and we should be able to see some",
    "start": "2067520",
    "end": "2074579"
  },
  {
    "text": "results pretty darn fast so I'm gonna go with the last I don't know hour",
    "start": "2074579",
    "end": "2083058"
  },
  {
    "text": "and okay so you can see there's this Twitter bot that we used earlier so",
    "start": "2087440",
    "end": "2093710"
  },
  {
    "text": "those of you who are on Twitter you can go follow at gar hunt and you can see an example of the services that we were",
    "start": "2093710",
    "end": "2098990"
  },
  {
    "text": "calling out to that was the selfie we took earlier I tweeted it out and replaced all of our pictures with a little cloud ninjas so that your faces",
    "start": "2098990",
    "end": "2105500"
  },
  {
    "text": "are hidden and you can see I called out the recognition you can see I've got this response distribution graph here I",
    "start": "2105500",
    "end": "2111140"
  },
  {
    "text": "can zoom in on that and I can see okay how many time often when I call out to this is it you know having some error I",
    "start": "2111140",
    "end": "2116960"
  },
  {
    "text": "am putting some stuff in a tweets table I am grabbing some stuff from s3 and I'm doing this lambda function and I can",
    "start": "2116960",
    "end": "2123470"
  },
  {
    "text": "actually view the individual traces and I can see what exactly is happening and this is a Python function and it's being",
    "start": "2123470",
    "end": "2129380"
  },
  {
    "text": "instrumented pretty well I'm not getting a ton of extra stuff one of the advantages of X ray with lambda is that",
    "start": "2129380",
    "end": "2135350"
  },
  {
    "text": "you can see each of the individual attempts that it makes because lambda has automatic retry policies for events",
    "start": "2135350",
    "end": "2140840"
  },
  {
    "text": "that fail and you can see how long it was what the dwell time of the function was so if your lambda function is being",
    "start": "2140840",
    "end": "2146990"
  },
  {
    "text": "throttled you can figure out how long was it waiting to execute that's a lot of stuff that's just given to you for",
    "start": "2146990",
    "end": "2152120"
  },
  {
    "text": "free from the lambda service and now we should be able to see this kind of selfies processor thing running and okay",
    "start": "2152120",
    "end": "2165500"
  },
  {
    "text": "and you can immediately see I'm being throttled here by recognition and I'm starting to get some errors in the",
    "start": "2165500",
    "end": "2171140"
  },
  {
    "text": "lambda function and I can see the distribution of requests and the algorithm that we use to build this map",
    "start": "2171140",
    "end": "2176330"
  },
  {
    "text": "is really interesting if you guys want you can read all about it it's it's called the T digest algorithm",
    "start": "2176330",
    "end": "2182950"
  },
  {
    "text": "fun stuff so what I want to do is I actually want to find all of these",
    "start": "2182950",
    "end": "2188360"
  },
  {
    "text": "requests that are being throttled and I want to try and understand them so I can dive deep very quickly you can see I've",
    "start": "2188360",
    "end": "2194570"
  },
  {
    "start": "2191000",
    "end": "2237000"
  },
  {
    "text": "got this query here that's just throttled it's true and I can see all these traces I can see what's happening and okay well I see that attempt number",
    "start": "2194570",
    "end": "2202910"
  },
  {
    "text": "one failed and I got an error what was that error it's not available yet but it",
    "start": "2202910",
    "end": "2208970"
  },
  {
    "text": "will be shortly it's essentially gonna say you're being throttled by recognition yeah so I'm being throttled",
    "start": "2208970",
    "end": "2217760"
  },
  {
    "text": "by recognition my prevision throughput is exceeded but then I see attempt number two I succeeded it took",
    "start": "2217760",
    "end": "2223369"
  },
  {
    "text": "619 milliseconds all in all it's a pretty powerful service x-ray and",
    "start": "2223369",
    "end": "2229269"
  },
  {
    "text": "because I have zoomed in my there we go you can see that things are still in",
    "start": "2229269",
    "end": "2235309"
  },
  {
    "text": "progress here and that's my only demo we could do just a little bit of QA",
    "start": "2235309",
    "end": "2242119"
  },
  {
    "start": "2237000",
    "end": "2267000"
  },
  {
    "text": "but I'm also going to let you guys go out to your break earlier I wanted to thank everybody very much for coming to",
    "start": "2242119",
    "end": "2247699"
  },
  {
    "text": "this presentation and I will remind you that you should absolutely follow me on",
    "start": "2247699",
    "end": "2253279"
  },
  {
    "text": "Twitter because I'm trying to be a be Fuller for followers thanks and I also",
    "start": "2253279",
    "end": "2262549"
  },
  {
    "text": "wanted to thank Skyscanner for coming out and talking and so Ashley thanks a lot",
    "start": "2262549",
    "end": "2268149"
  }
]