[
  {
    "start": "0",
    "end": "24000"
  },
  {
    "text": "- Hello everyone.",
    "start": "270",
    "end": "1110"
  },
  {
    "text": "My name is Raj Pathak and\nI'm a Principal Solutions",
    "start": "1110",
    "end": "3659"
  },
  {
    "text": "Architect here at AWS.",
    "start": "3660",
    "end": "5970"
  },
  {
    "text": "In today's video, we'll discuss guardrails",
    "start": "5970",
    "end": "8100"
  },
  {
    "text": "for Amazon Bedrock, a way for\nyou to implement safeguards",
    "start": "8100",
    "end": "11160"
  },
  {
    "text": "customized to your\napplication requirement,",
    "start": "11160",
    "end": "13530"
  },
  {
    "text": "and responsible AI policies.",
    "start": "13530",
    "end": "16110"
  },
  {
    "text": "In the video, we'll discuss\nthe need for guardrails,",
    "start": "16110",
    "end": "18930"
  },
  {
    "text": "deep dive into the feature,\nand end with the product demo.",
    "start": "18930",
    "end": "22500"
  },
  {
    "text": "So let's get into it.",
    "start": "22500",
    "end": "23643"
  },
  {
    "start": "24000",
    "end": "58000"
  },
  {
    "text": "Generative AI is very\npowerful, but it comes",
    "start": "25830",
    "end": "28560"
  },
  {
    "text": "with some considerations and challenges.",
    "start": "28560",
    "end": "31260"
  },
  {
    "text": "We want our applications to avoid",
    "start": "31260",
    "end": "32950"
  },
  {
    "text": "undesired content and\navoid irrelevant topics.",
    "start": "34020",
    "end": "37920"
  },
  {
    "text": "We also want to make sure\nthey're not engaging in any toxic",
    "start": "37920",
    "end": "40620"
  },
  {
    "text": "or harmful interactions.",
    "start": "40620",
    "end": "42153"
  },
  {
    "text": "In the scenario where we have",
    "start": "43170",
    "end": "44219"
  },
  {
    "text": "to process sensitive information,",
    "start": "44220",
    "end": "46350"
  },
  {
    "text": "we want to ensure it's protected.",
    "start": "46350",
    "end": "48780"
  },
  {
    "text": "And lastly, anytime we\ncommunicate to our end users,",
    "start": "48780",
    "end": "52079"
  },
  {
    "text": "we want to make sure\nit's factual and correct",
    "start": "52080",
    "end": "54570"
  },
  {
    "text": "and is grounded in truth.",
    "start": "54570",
    "end": "56013"
  },
  {
    "start": "58000",
    "end": "80000"
  },
  {
    "text": "To address these risks,",
    "start": "59040",
    "end": "60540"
  },
  {
    "text": "many model providers within\nAmazon Bedrock have already",
    "start": "60540",
    "end": "64050"
  },
  {
    "text": "built in these protections",
    "start": "64050",
    "end": "65820"
  },
  {
    "text": "and are working towards\nbuilding safer models.",
    "start": "65820",
    "end": "68940"
  },
  {
    "text": "But challenges arise when\nwe want consistency across",
    "start": "68940",
    "end": "71850"
  },
  {
    "text": "different model providers,",
    "start": "71850",
    "end": "73500"
  },
  {
    "text": "or we need to have\nsafeguards that are specific",
    "start": "73500",
    "end": "76170"
  },
  {
    "text": "and customized to our organization.",
    "start": "76170",
    "end": "78333"
  },
  {
    "start": "80000",
    "end": "114000"
  },
  {
    "text": "And this is where guardrails",
    "start": "80910",
    "end": "82260"
  },
  {
    "text": "for Amazon Bedrock comes into play.",
    "start": "82260",
    "end": "84750"
  },
  {
    "text": "It's a way for you to define\ncustom safeguards specific",
    "start": "84750",
    "end": "88290"
  },
  {
    "text": "to your organization\nregardless of model used.",
    "start": "88290",
    "end": "91473"
  },
  {
    "text": "You can use guardrails\nwith models on Bedrock",
    "start": "92580",
    "end": "95370"
  },
  {
    "text": "or with any third party\nor self-hosted model.",
    "start": "95370",
    "end": "98880"
  },
  {
    "text": "You can configure responsible AI filters,",
    "start": "98880",
    "end": "101520"
  },
  {
    "text": "block specific topics in natural language,",
    "start": "101520",
    "end": "104520"
  },
  {
    "text": "block or mask sensitive\ninformation, and help filter",
    "start": "104520",
    "end": "107609"
  },
  {
    "text": "and reduce irrelevant or\nhallucinated responses.",
    "start": "107610",
    "end": "111213"
  },
  {
    "start": "114000",
    "end": "155000"
  },
  {
    "text": "Now let's dive into how guardrails work.",
    "start": "115050",
    "end": "117050"
  },
  {
    "text": "It will take the user input",
    "start": "118110",
    "end": "120090"
  },
  {
    "text": "and before even sending it to the model,",
    "start": "120090",
    "end": "122310"
  },
  {
    "text": "the input will be reviewed.",
    "start": "122310",
    "end": "123753"
  },
  {
    "text": "This is invoked by either a\nBedrock invoke model API call,",
    "start": "124590",
    "end": "129000"
  },
  {
    "text": "or through the independent\nguardrail's API.",
    "start": "129000",
    "end": "131677"
  },
  {
    "text": "It will then be scanned\nacross multiple components",
    "start": "132870",
    "end": "135750"
  },
  {
    "text": "of a guardrail.",
    "start": "135750",
    "end": "137400"
  },
  {
    "text": "And if any of these are triggered,",
    "start": "137400",
    "end": "139079"
  },
  {
    "text": "the prompt will not be sent for inference,",
    "start": "139080",
    "end": "141810"
  },
  {
    "text": "and instead will be replaced\nwith a defined response.",
    "start": "141810",
    "end": "145142"
  },
  {
    "text": "If the prompt passes the\nguardrail, the same checks are done",
    "start": "146220",
    "end": "150090"
  },
  {
    "text": "for the model response.",
    "start": "150090",
    "end": "151713"
  },
  {
    "text": "Now let's dive into each\nof these configurations.",
    "start": "153090",
    "end": "155540"
  },
  {
    "start": "155000",
    "end": "190000"
  },
  {
    "text": "The first configuration\nis content filters.",
    "start": "158010",
    "end": "161250"
  },
  {
    "text": "This allows for the filtering\nof harmful and toxic content.",
    "start": "161250",
    "end": "165060"
  },
  {
    "text": "You can configure thresholds\nto filter harmful content",
    "start": "165060",
    "end": "168510"
  },
  {
    "text": "to a varied degrees from none to high.",
    "start": "168510",
    "end": "172140"
  },
  {
    "text": "And this is for prompts\nand model responses.",
    "start": "172140",
    "end": "174903"
  },
  {
    "text": "Increasing the strength of the filter also",
    "start": "175830",
    "end": "178080"
  },
  {
    "text": "increases the strength of filtering.",
    "start": "178080",
    "end": "179880"
  },
  {
    "text": "Currently, you can configure\nacross six categories, hate,",
    "start": "180870",
    "end": "184769"
  },
  {
    "text": "insults, criminal, prompt\nattack, sexual, and violence.",
    "start": "184770",
    "end": "189303"
  },
  {
    "start": "190000",
    "end": "216000"
  },
  {
    "text": "The second configuration is denied topics.",
    "start": "192030",
    "end": "195543"
  },
  {
    "text": "Denied topics act as a deny",
    "start": "196380",
    "end": "198210"
  },
  {
    "text": "for your generative AI application.",
    "start": "198210",
    "end": "200610"
  },
  {
    "text": "This will block any interaction",
    "start": "200610",
    "end": "202530"
  },
  {
    "text": "that is detected in the topic.",
    "start": "202530",
    "end": "205140"
  },
  {
    "text": "You define these in simple\nlanguage with a definition,",
    "start": "205140",
    "end": "208170"
  },
  {
    "text": "a name, and then some example phrases.",
    "start": "208170",
    "end": "211500"
  },
  {
    "text": "If it's detected to be similar,",
    "start": "211500",
    "end": "213180"
  },
  {
    "text": "this will block these types of messages.",
    "start": "213180",
    "end": "215372"
  },
  {
    "start": "216000",
    "end": "242000"
  },
  {
    "text": "The next is sensitive information filters.",
    "start": "217800",
    "end": "221400"
  },
  {
    "text": "This is used for blocking PII",
    "start": "221400",
    "end": "224040"
  },
  {
    "text": "and custom sensitive information.",
    "start": "224040",
    "end": "226142"
  },
  {
    "text": "Scenarios where we just want to mask PII",
    "start": "227040",
    "end": "230010"
  },
  {
    "text": "or sensitive information is supported",
    "start": "230010",
    "end": "232650"
  },
  {
    "text": "through a supported list of PII types.",
    "start": "232650",
    "end": "235920"
  },
  {
    "text": "In the event you have custom\nsensitive information,",
    "start": "235920",
    "end": "238470"
  },
  {
    "text": "you can define regex patterns.",
    "start": "238470",
    "end": "240243"
  },
  {
    "text": "Next are word filters.",
    "start": "241230",
    "end": "243269"
  },
  {
    "start": "242000",
    "end": "259000"
  },
  {
    "text": "They allow you to configure\na set of custom words",
    "start": "243270",
    "end": "245460"
  },
  {
    "text": "that you want to detect or\nblock in the interaction",
    "start": "245460",
    "end": "248370"
  },
  {
    "text": "between you and your users",
    "start": "248370",
    "end": "250319"
  },
  {
    "text": "and your generative AI application.",
    "start": "250320",
    "end": "252070"
  },
  {
    "text": "It will also let you define\nand block out profanity.",
    "start": "252930",
    "end": "256712"
  },
  {
    "text": "Lastly, guardrail support,\ncontextual grounding,",
    "start": "260370",
    "end": "263190"
  },
  {
    "text": "and relevance checks.",
    "start": "263190",
    "end": "265020"
  },
  {
    "text": "This allows you to define a threshold",
    "start": "265020",
    "end": "267210"
  },
  {
    "text": "and will help you validate\nwhether your model responses are",
    "start": "267210",
    "end": "269759"
  },
  {
    "text": "grounded in a reference source.",
    "start": "269760",
    "end": "272580"
  },
  {
    "text": "It'll also help you ensure",
    "start": "272580",
    "end": "274199"
  },
  {
    "text": "that your model responses are\nrelevant to the user queries.",
    "start": "274200",
    "end": "278760"
  },
  {
    "start": "278000",
    "end": "573000"
  },
  {
    "text": "Now let's see this all in\naction with a demo of guardrails",
    "start": "278760",
    "end": "282510"
  },
  {
    "text": "for Amazon Bedrock.",
    "start": "282510",
    "end": "283623"
  },
  {
    "text": "We can start by pressing\n\"Create guardrail\"",
    "start": "284460",
    "end": "287729"
  },
  {
    "text": "and giving our guardrail a name",
    "start": "287730",
    "end": "289860"
  },
  {
    "text": "and a message when it intervenes.",
    "start": "289860",
    "end": "293400"
  },
  {
    "text": "For today's demo, we're\ngoing to create a guardrail",
    "start": "293400",
    "end": "295979"
  },
  {
    "text": "for a fictional doctor's office called",
    "start": "295980",
    "end": "297780"
  },
  {
    "text": "Dr. Tanya's Ophthalmology Clinic.",
    "start": "297780",
    "end": "300450"
  },
  {
    "text": "Our generative AI application will be used",
    "start": "300450",
    "end": "302400"
  },
  {
    "text": "to help patients schedule appointments",
    "start": "302400",
    "end": "304650"
  },
  {
    "text": "and learn general\ninformation about the clinic.",
    "start": "304650",
    "end": "307022"
  },
  {
    "text": "We're going to apply\nthe same block messaging",
    "start": "308040",
    "end": "309900"
  },
  {
    "text": "for responses as well.",
    "start": "309900",
    "end": "311820"
  },
  {
    "text": "The first configuration\nis content filters.",
    "start": "311820",
    "end": "315330"
  },
  {
    "text": "We're going to enable,\nthe strength is high",
    "start": "315330",
    "end": "318720"
  },
  {
    "text": "for all the categories,",
    "start": "318720",
    "end": "320700"
  },
  {
    "text": "as we want to make sure\nour users are protected.",
    "start": "320700",
    "end": "323100"
  },
  {
    "text": "Next is denied topics.",
    "start": "325140",
    "end": "327630"
  },
  {
    "text": "We want our application to\navoid providing medical advice,",
    "start": "327630",
    "end": "331440"
  },
  {
    "text": "so let's create a denied\ntopic by giving it a name",
    "start": "331440",
    "end": "334860"
  },
  {
    "text": "and a clear definition.",
    "start": "334860",
    "end": "336332"
  },
  {
    "text": "We can also apply sample\nphrases, so we'll do that here.",
    "start": "337830",
    "end": "341582"
  },
  {
    "text": "Now let's create a second denied topic",
    "start": "345750",
    "end": "348540"
  },
  {
    "text": "for non-ophthalmology\nrelated medical conditions.",
    "start": "348540",
    "end": "351573"
  },
  {
    "text": "Once that's done, we can move\non to our next configuration,",
    "start": "356880",
    "end": "360723"
  },
  {
    "text": "which is word filters.",
    "start": "361620",
    "end": "363093"
  },
  {
    "text": "In our demo today, we're just\ngoing to filter profanity,",
    "start": "364080",
    "end": "367830"
  },
  {
    "text": "however you can add\ncustom words or phrases.",
    "start": "367830",
    "end": "370383"
  },
  {
    "text": "Next, let's do sensitive\ninformation filters.",
    "start": "372570",
    "end": "376500"
  },
  {
    "text": "For today's demo, let's add a PII type",
    "start": "376500",
    "end": "380130"
  },
  {
    "text": "for Canadian Health Service Number,",
    "start": "380130",
    "end": "382620"
  },
  {
    "text": "and we'll choose to mask\nthis in our model responses.",
    "start": "382620",
    "end": "386103"
  },
  {
    "text": "In the event you have custom\nregex related sensitive",
    "start": "386970",
    "end": "390630"
  },
  {
    "text": "information filters, you\ncan provide a regex pattern.",
    "start": "390630",
    "end": "394110"
  },
  {
    "text": "Next, to make sure our model\nresponses are grounded in",
    "start": "394110",
    "end": "398159"
  },
  {
    "text": "factual information, we'll set\nup a grounding configuration.",
    "start": "398160",
    "end": "402300"
  },
  {
    "text": "Let's set it up as 0.75.",
    "start": "402300",
    "end": "405120"
  },
  {
    "text": "And to make sure our model responses are",
    "start": "405120",
    "end": "406860"
  },
  {
    "text": "relevant to user queries,",
    "start": "406860",
    "end": "408659"
  },
  {
    "text": "we'll also set it up for relevance.",
    "start": "408660",
    "end": "410730"
  },
  {
    "text": "We'll keep that at 0.75 as well.",
    "start": "410730",
    "end": "412623"
  },
  {
    "text": "Once you're done, you can\nreview and create the guardrail.",
    "start": "414150",
    "end": "418533"
  },
  {
    "text": "Now, to experiment with it,\nlet's select our guardrail",
    "start": "420510",
    "end": "423730"
  },
  {
    "text": "and let's provide a reference source.",
    "start": "425010",
    "end": "426990"
  },
  {
    "text": "In today's reference source,\nwe're going to provide",
    "start": "426990",
    "end": "430410"
  },
  {
    "text": "a quick explanation of what\nthe assistant does along",
    "start": "430410",
    "end": "434130"
  },
  {
    "text": "with some information\nabout the clinic itself.",
    "start": "434130",
    "end": "436920"
  },
  {
    "text": "This includes things like\nthe address, the languages",
    "start": "436920",
    "end": "439110"
  },
  {
    "text": "that the staff speak, along\nwith the services offered by",
    "start": "439110",
    "end": "442379"
  },
  {
    "text": "Dr. Tanya.",
    "start": "442380",
    "end": "444030"
  },
  {
    "text": "We'll select a model.",
    "start": "444030",
    "end": "445350"
  },
  {
    "text": "For today's demo, we'll use\nthe Claude Instant 1.2 model.",
    "start": "445350",
    "end": "448800"
  },
  {
    "text": "Let's start with our first example.",
    "start": "448800",
    "end": "450449"
  },
  {
    "text": "We're going to ask the assistant about",
    "start": "450450",
    "end": "452940"
  },
  {
    "text": "what eye drops they\nshould use for itchy eyes.",
    "start": "452940",
    "end": "455940"
  },
  {
    "text": "And from here we can run.",
    "start": "455940",
    "end": "457650"
  },
  {
    "text": "We'll see that we have\nan intervene instance.",
    "start": "457650",
    "end": "459960"
  },
  {
    "text": "We can view the trace to see",
    "start": "459960",
    "end": "461880"
  },
  {
    "text": "that we triggered our blocked\nproviding medical advice",
    "start": "461880",
    "end": "465540"
  },
  {
    "text": "or diagnosis topic.",
    "start": "465540",
    "end": "467400"
  },
  {
    "text": "Let's try another question.",
    "start": "467400",
    "end": "469259"
  },
  {
    "text": "Let's ask it about stomach pain.",
    "start": "469260",
    "end": "470860"
  },
  {
    "text": "Let's run, and we see that it detected",
    "start": "471810",
    "end": "474780"
  },
  {
    "text": "the discussing non-ophthalmology related",
    "start": "474780",
    "end": "476760"
  },
  {
    "text": "medical conditions or\nmedical specialties topic.",
    "start": "476760",
    "end": "479643"
  },
  {
    "text": "Another thing I want to highlight is",
    "start": "480690",
    "end": "482400"
  },
  {
    "text": "that the model response is blank.",
    "start": "482400",
    "end": "484770"
  },
  {
    "text": "This is because the guardrail\nintervened at the prompt level",
    "start": "484770",
    "end": "488129"
  },
  {
    "text": "and the prompt was never sent",
    "start": "488130",
    "end": "489600"
  },
  {
    "text": "to the foundational model for inference.",
    "start": "489600",
    "end": "492000"
  },
  {
    "text": "Now, let's pick a valid example.",
    "start": "492000",
    "end": "494430"
  },
  {
    "text": "We have someone who wants\nto book an appointment",
    "start": "494430",
    "end": "497970"
  },
  {
    "text": "with Dr. Tanya.",
    "start": "497970",
    "end": "499440"
  },
  {
    "text": "Let's run, and we can see that we have one",
    "start": "499440",
    "end": "502560"
  },
  {
    "text": "intervened instance at\nthe model response level,",
    "start": "502560",
    "end": "506250"
  },
  {
    "text": "and this is where we detected the PII type",
    "start": "506250",
    "end": "509130"
  },
  {
    "text": "as Canadian Health Number.",
    "start": "509130",
    "end": "511020"
  },
  {
    "text": "And we can see in our final response",
    "start": "511020",
    "end": "512880"
  },
  {
    "text": "that the guardrail intervened\nby masking the health number.",
    "start": "512880",
    "end": "516659"
  },
  {
    "text": "Now let's see our contextual\ngrounding checks in action.",
    "start": "516660",
    "end": "520259"
  },
  {
    "text": "Let's ask it a question about\nan ophthalmology related.",
    "start": "520260",
    "end": "523023"
  },
  {
    "text": "We see that the model responded\nwith a pretty good answer.",
    "start": "524970",
    "end": "528930"
  },
  {
    "text": "That's why our relevance was very high.",
    "start": "528930",
    "end": "531360"
  },
  {
    "text": "However, it was not grounded\nin any of the context that",
    "start": "531360",
    "end": "535110"
  },
  {
    "text": "provided the model.",
    "start": "535110",
    "end": "537000"
  },
  {
    "text": "Therefore, the guardrail intervened",
    "start": "537000",
    "end": "538830"
  },
  {
    "text": "with a contextual grounding check.",
    "start": "538830",
    "end": "540530"
  },
  {
    "text": "Our response was also deemed to provide",
    "start": "541620",
    "end": "544620"
  },
  {
    "text": "any medical advice or diagnoses.",
    "start": "544620",
    "end": "547140"
  },
  {
    "text": "Therefore, our denied\ntopic was also triggered.",
    "start": "547140",
    "end": "549603"
  },
  {
    "text": "Now let's ask the question about",
    "start": "550860",
    "end": "552660"
  },
  {
    "text": "the location of Dr. Tanya's office.",
    "start": "552660",
    "end": "555839"
  },
  {
    "text": "As we can see, no\nguardrail action was taken",
    "start": "555840",
    "end": "559650"
  },
  {
    "text": "as the response is grounded\nin factual information",
    "start": "559650",
    "end": "563220"
  },
  {
    "text": "and the response is\nrelevant to our end user.",
    "start": "563220",
    "end": "566339"
  },
  {
    "text": "Thank you all for watching,",
    "start": "566340",
    "end": "567600"
  },
  {
    "text": "and we're excited for\nyou to try out guardrails",
    "start": "567600",
    "end": "569790"
  },
  {
    "text": "for Amazon Bedrock.",
    "start": "569790",
    "end": "571053"
  }
]