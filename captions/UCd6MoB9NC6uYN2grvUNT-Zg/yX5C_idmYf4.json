[
  {
    "start": "0",
    "end": "125000"
  },
  {
    "text": "good evening I am so happy to see so many people",
    "start": "960",
    "end": "6720"
  },
  {
    "text": "still awake at 5 pm after all the stuff that we have done today",
    "start": "6720",
    "end": "11820"
  },
  {
    "text": "my name is Darren briskman and I have the honor to be your guide as we go",
    "start": "11820",
    "end": "16980"
  },
  {
    "text": "through an introduction to manage database Services across the world of Amazon web services",
    "start": "16980",
    "end": "22560"
  },
  {
    "text": "so I'll start out by saying with me is the amazing team from FanDuel and if you",
    "start": "22560",
    "end": "28019"
  },
  {
    "text": "don't know what FanDuel is you'll find out today as well as them showing us a",
    "start": "28019",
    "end": "33180"
  },
  {
    "text": "great example about how you go through these decisions so I'm going to warn you right now I'm going to talk really fast",
    "start": "33180",
    "end": "39660"
  },
  {
    "text": "so if you don't understand what I'm saying like everything else at this conference it will all be online next",
    "start": "39660",
    "end": "44760"
  },
  {
    "text": "week so manage databases here's our landscape we",
    "start": "44760",
    "end": "50760"
  },
  {
    "text": "have a wide number of things that we're doing and they all fall in the managed database world into four broad categories they're relational databases",
    "start": "50760",
    "end": "56579"
  },
  {
    "text": "or their big data and integration or their nosql and memory databases or their analytics and search",
    "start": "56579",
    "end": "63300"
  },
  {
    "text": "so this is a boring slide so let's dive into them in detail so first why use a",
    "start": "63300",
    "end": "68400"
  },
  {
    "text": "managed database at all well it's the next step in the cloud evolution",
    "start": "68400",
    "end": "73680"
  },
  {
    "text": "right before you use cloud you had to do everything so everything from the HVAC the air conditioning the",
    "start": "73680",
    "end": "81420"
  },
  {
    "text": "rack and stack of through the operating system the database is scaling whatever but hey now we're on ec2",
    "start": "81420",
    "end": "87600"
  },
  {
    "text": "so when you use Amazon web services it's taking care of a big chunk of this for you so we have automated systems that",
    "start": "87600",
    "end": "93780"
  },
  {
    "text": "are taking care of the power of the rack and stack of the server or the operating system or at least the install",
    "start": "93780",
    "end": "99119"
  },
  {
    "text": "and we've got many many customers who are doing this and are very happy with running databases on ec2 and it's a",
    "start": "99119",
    "end": "104579"
  },
  {
    "text": "great solution it works fine works for almost any database certainly anything that could run on Linux or Windows but",
    "start": "104579",
    "end": "111360"
  },
  {
    "text": "you're still doing a lot of work in this world you're still installing the database you're still patching the",
    "start": "111360",
    "end": "117840"
  },
  {
    "text": "database you're still doing High availability you're still doing scaling you're still doing optimization when you",
    "start": "117840",
    "end": "123360"
  },
  {
    "text": "move to a managed service all you have to worry about is the app everything else becomes Amazon's problem",
    "start": "123360",
    "end": "128700"
  },
  {
    "start": "125000",
    "end": "125000"
  },
  {
    "text": "we do it for you now it's interesting to me to watch us",
    "start": "128700",
    "end": "133800"
  },
  {
    "text": "having the same conversations now that we used to have six years ago about the cloud I remember like 10 years ago people go",
    "start": "133800",
    "end": "139920"
  },
  {
    "text": "why would I want a cloud and then five years ago I talked to a lot of our customers who were not yet",
    "start": "139920",
    "end": "145500"
  },
  {
    "text": "our customers who would say things like well yeah but I can do all this it's not that hard to run a server",
    "start": "145500",
    "end": "151140"
  },
  {
    "text": "you're right it's not it's not that hard to run a database but it's a suck of time it's a suck of",
    "start": "151140",
    "end": "158400"
  },
  {
    "text": "attention it means you're doing things that are not what you want to do what you want to do is do something awesome",
    "start": "158400",
    "end": "164819"
  },
  {
    "text": "for your company for your business for your industry not manage High availability in a database environment",
    "start": "164819",
    "end": "171180"
  },
  {
    "text": "so if you're a database company that's awesome if you do anything else you want someone else to do that so you can focus",
    "start": "171180",
    "end": "177420"
  },
  {
    "text": "on what matters and that's the whole point behind managed databases so managed databases are important part of",
    "start": "177420",
    "end": "183599"
  },
  {
    "text": "Amazon web services it was one of the things that one of the first Services we started offering it's an increasing part",
    "start": "183599",
    "end": "190319"
  },
  {
    "text": "of what our customers are using in order to get the real benefit of the cloud and you know across the benefits of",
    "start": "190319",
    "end": "196920"
  },
  {
    "text": "cloud elasticity agility Global reach cost reduction the big one to me I think",
    "start": "196920",
    "end": "203580"
  },
  {
    "text": "really becomes the agility the fact that you are able to focus on what you care about not focus on running systems",
    "start": "203580",
    "end": "211319"
  },
  {
    "text": "however there's a lot of choices in here so we're going to walk through what some of them are for a few minutes",
    "start": "211319",
    "end": "217260"
  },
  {
    "start": "215000",
    "end": "215000"
  },
  {
    "text": "so I'm going to start with our oldest of these Services which is our relational database service Amazon RDS",
    "start": "217260",
    "end": "222780"
  },
  {
    "text": "and RDS is essentially the idea of no no infrastructure to manage and instant",
    "start": "222780",
    "end": "229500"
  },
  {
    "text": "provisioning across multiple engines so we started with the MySQL engine and since then we've expanded to numerous",
    "start": "229500",
    "end": "236519"
  },
  {
    "text": "other engines so we have my Sequel and and Maria DB or mariahdb depending on who you ask of that organization uh we",
    "start": "236519",
    "end": "243659"
  },
  {
    "text": "also have postgres postgresql and then we have a couple of commercial offerings so Oracle or Microsoft SQL Server all of",
    "start": "243659",
    "end": "251220"
  },
  {
    "text": "those run as a fully managed revision environment that we can scale up and",
    "start": "251220",
    "end": "256620"
  },
  {
    "text": "down use different instance types use different pieces and then as many of you",
    "start": "256620",
    "end": "261720"
  },
  {
    "text": "may have heard last year we introduced Aurora",
    "start": "261720",
    "end": "266960"
  },
  {
    "text": "MySQL is a great product but it has to support every possible piece of infrastructure out there it needs to run",
    "start": "267440",
    "end": "274020"
  },
  {
    "text": "on a laptop it needs to run on a cluster it needs to run on everything in between we don't need to do that we just need to",
    "start": "274020",
    "end": "279300"
  },
  {
    "text": "make it run on ec2 because we're Amazon web services and that gives us a huge Advantage so Aurora was keeping the open",
    "start": "279300",
    "end": "286680"
  },
  {
    "text": "standard open source interfaces your MySQL code runs just fine on Aurora no",
    "start": "286680",
    "end": "292500"
  },
  {
    "text": "changes except changing the endpoint but because Aurora is only going to run an AWS it lets us optimize and get huge",
    "start": "292500",
    "end": "301380"
  },
  {
    "text": "advantages with Aurora as noted here we are able to get 500 000 reads per second",
    "start": "301380",
    "end": "308160"
  },
  {
    "text": "100 000 writes per second 64 terabytes in a single database all on the cloud",
    "start": "308160",
    "end": "313500"
  },
  {
    "text": "we're able to do replication today we call it 15-way replication because there's 16 regions so I can have it in",
    "start": "313500",
    "end": "319680"
  },
  {
    "text": "every region every time we open a new region we'll add one to that count because you can have the same data",
    "start": "319680",
    "end": "325500"
  },
  {
    "text": "replicated everywhere all automated all happening on its own and of course you",
    "start": "325500",
    "end": "331380"
  },
  {
    "text": "can take advantage of the rest of the ecosystem such as your stored procedure is calling on Lambda",
    "start": "331380",
    "end": "337380"
  },
  {
    "start": "336000",
    "end": "336000"
  },
  {
    "text": "and we have this great High availability so you got a primary node and up to 15 secondary nodes in one region and then",
    "start": "337380",
    "end": "345360"
  },
  {
    "text": "of course they can also have secondary nodes in Cross region so when a database node fails it's automatically detected",
    "start": "345360",
    "end": "351840"
  },
  {
    "text": "it's automatically replaced uh processes are detected and recycled the and the",
    "start": "351840",
    "end": "358080"
  },
  {
    "text": "clients don't know that this happened we hide it all under the endpoints if it's the primary node that that fails then",
    "start": "358080",
    "end": "365699"
  },
  {
    "text": "very quickly within within under a minute almost always we're able to",
    "start": "365699",
    "end": "371460"
  },
  {
    "text": "switch switch that over and promote one of those replicas to primary so we're able to scale out read traffic across",
    "start": "371460",
    "end": "378240"
  },
  {
    "text": "the whole range so this lets us get to a world where we are reading hundreds of",
    "start": "378240",
    "end": "384479"
  },
  {
    "text": "thousands or more per second really useful in this relational world now Aurora when we announced it last year",
    "start": "384479",
    "end": "391160"
  },
  {
    "text": "was my sequel as you may have heard this morning when you configure Aurora you",
    "start": "391160",
    "end": "396180"
  },
  {
    "text": "now have the choice of using either MySQL or postgres so I've got the same Aurora capabilities underneath but you",
    "start": "396180",
    "end": "402600"
  },
  {
    "text": "can choose whether you want to use the MySQL interface or the postgres interface it gives us a lot of control",
    "start": "402600",
    "end": "407759"
  },
  {
    "text": "and power so somebody who's got no benefit out of this our friends at Pacific Gas and Electric if you're not",
    "start": "407759",
    "end": "414240"
  },
  {
    "text": "familiar with them they're the main power electric utility in the San Francisco Bay Area",
    "start": "414240",
    "end": "419699"
  },
  {
    "text": "so the big issue they've always had with their databases is when you have an outage",
    "start": "419699",
    "end": "424979"
  },
  {
    "text": "right it's California you're going to get wildfires you're going to get earthquakes when that happens you're going to have a",
    "start": "424979",
    "end": "430319"
  },
  {
    "text": "lot of things stop working and you're going to have a lot of angry and scared customers and you need to know where your technicians are where your",
    "start": "430319",
    "end": "435840"
  },
  {
    "text": "information is get that information quickly they often had database outages to go with these power outages that was",
    "start": "435840",
    "end": "442139"
  },
  {
    "text": "not helping because you get a huge Spike moving to Aurora not a problem anymore earthquakes are still a problem but now",
    "start": "442139",
    "end": "449039"
  },
  {
    "text": "PG e can deal with them more quickly and more effectively because they're able to use Amazon Aurora and",
    "start": "449039",
    "end": "456479"
  },
  {
    "text": "because they're able to do multi-region replication even if the earthquake does manage to damage say our Northern",
    "start": "456479",
    "end": "462060"
  },
  {
    "text": "California region they also have that data in Oregon they also have the data in Virginia other places so that we're",
    "start": "462060",
    "end": "468960"
  },
  {
    "text": "able to keep running even under high stress now if you didn't start on one of the",
    "start": "468960",
    "end": "475800"
  },
  {
    "start": "472000",
    "end": "472000"
  },
  {
    "text": "Amazon databases how do you get there so I'm going to do a little plug on the side here for a database migration service database migration service makes",
    "start": "475800",
    "end": "483120"
  },
  {
    "text": "it super easy to move from a source database onto one of our targets so here's a few examples of what we can do",
    "start": "483120",
    "end": "489900"
  },
  {
    "text": "this makes it simple to take say a my sequel on Oracle or a postgres environment and move it into various",
    "start": "489900",
    "end": "496860"
  },
  {
    "text": "targets so this is not a comprehensive list this is just some of the examples we can do you can choose to do this as a",
    "start": "496860",
    "end": "502680"
  },
  {
    "text": "once and done or you can choose to do this as a continuous copy or anything in between so we're making it easy to move",
    "start": "502680",
    "end": "509639"
  },
  {
    "text": "that data around and choose the data environment you want it to be all right",
    "start": "509639",
    "end": "515399"
  },
  {
    "start": "513000",
    "end": "513000"
  },
  {
    "text": "relational databases are great but they have some limits right relational databases grew out of",
    "start": "515399",
    "end": "521039"
  },
  {
    "text": "uh theoretical work done in the 1970s that turned into the relational database world that we started seeing in the 80s",
    "start": "521039",
    "end": "527760"
  },
  {
    "text": "and became dominant in the 90s and it's optimized for storage it's normalized it scales vertically look there's a table",
    "start": "527760",
    "end": "536120"
  },
  {
    "text": "okay so as as defined with rows and columns it's Greed for a lot of uses but not all",
    "start": "536220",
    "end": "542279"
  },
  {
    "text": "uses one of the places where you have a problem is if your schema keeps changing so let's pretend that you're a huge",
    "start": "542279",
    "end": "549600"
  },
  {
    "text": "online retailer that started in books and expanded into other things and when you're putting a book in your",
    "start": "549600",
    "end": "555660"
  },
  {
    "text": "database then you have you need to have information about the title and the author and the publisher but when you",
    "start": "555660",
    "end": "560820"
  },
  {
    "text": "put a tennis shoe into the database you need a different set of information and when you put a t-shirt you need a different set and when you put a cooking",
    "start": "560820",
    "end": "567360"
  },
  {
    "text": "pot you need a different set so in the early days of of this of this company which I'm sure you all figured out by",
    "start": "567360",
    "end": "573540"
  },
  {
    "text": "now is amazon.com we had a lot of work redoing schemas and changing the tables",
    "start": "573540",
    "end": "579899"
  },
  {
    "text": "so our Engineers worked on creating what later become called nosql so we invented",
    "start": "579899",
    "end": "586019"
  },
  {
    "text": "the we wrote what was called the Dynamo paper uh on what we had developed in order to run our growing retail business",
    "start": "586019",
    "end": "592560"
  },
  {
    "text": "and of course a few years ago we made this available to our customers as well",
    "start": "592560",
    "end": "597839"
  },
  {
    "start": "596000",
    "end": "596000"
  },
  {
    "text": "so dynamodb is a non-relational managed nosql database service well that was a lot to say",
    "start": "597839",
    "end": "603839"
  },
  {
    "text": "so nosql was an analyst term that took off today the marketing people say that actually stands for not only SQL",
    "start": "603839",
    "end": "610380"
  },
  {
    "text": "but whatever it means it means that I don't have a schema controlling my world so I can have many different objects of",
    "start": "610380",
    "end": "617100"
  },
  {
    "text": "different types stored in the same database or in the case of Dynamo on the same table so it's a scheme of this data",
    "start": "617100",
    "end": "622500"
  },
  {
    "text": "model and the great thing about Dynamo is that you get the same consistent performance",
    "start": "622500",
    "end": "628080"
  },
  {
    "text": "no matter how much data is in it and there's no limits on how much data you can have you're almost always going to",
    "start": "628080",
    "end": "633779"
  },
  {
    "text": "get a query in four to six milliseconds if you have a megabyte four to six milliseconds if you have a gigabyte 46",
    "start": "633779",
    "end": "640019"
  },
  {
    "text": "milliseconds if you have a petabyte 46 milliseconds so it gives us a very",
    "start": "640019",
    "end": "645959"
  },
  {
    "text": "consistent and reliable speed and of course the reason for that is underneath the hood it's doing partitioning and and",
    "start": "645959",
    "end": "651240"
  },
  {
    "text": "splitting that up automatically for you um we scale for you it's designed to be",
    "start": "651240",
    "end": "656339"
  },
  {
    "text": "low cost and the cost here is modeled on how much data you're moving so actually provision how many reads and how many",
    "start": "656339",
    "end": "662100"
  },
  {
    "text": "writes per second you want to pay for so no throughput limit no storage limit",
    "start": "662100",
    "end": "668700"
  },
  {
    "text": "now it's not truly no storage limit if you say hey I want an exabyte in the database our answer would be let's talk",
    "start": "668700",
    "end": "675240"
  },
  {
    "text": "and find if that's really the right way to do it but we have customers who are using dynamodb with uh with tens of of",
    "start": "675240",
    "end": "683399"
  },
  {
    "text": "terabytes hundreds of terabytes and getting up into the petabyte scale it automatically partitions when either the",
    "start": "683399",
    "end": "688920"
  },
  {
    "text": "data set grows or the amount of throughput you need grows so it's able to actually scale up extremely effectively and invisibly",
    "start": "688920",
    "end": "696000"
  },
  {
    "text": "and of course it's durable it is always deployed in three availability zones unless you're in one of our regions it",
    "start": "696000",
    "end": "702540"
  },
  {
    "text": "only has two availability zones but then it's in two so you're always writing three times you",
    "start": "702540",
    "end": "708240"
  },
  {
    "text": "don't have to worry about clustering it's always clustered so we're able to provide consistent high performance and",
    "start": "708240",
    "end": "713399"
  },
  {
    "text": "consistent High availability to these nosql relational environments",
    "start": "713399",
    "end": "719399"
  },
  {
    "text": "now one of the customers who's doing this that we think is a little bit interesting is Nexon if you're not",
    "start": "719399",
    "end": "724800"
  },
  {
    "text": "familiar with Nexon the one of the biggest game developers in the world they use Dynamo as a game as their game",
    "start": "724800",
    "end": "731459"
  },
  {
    "text": "database for a number of games the big one right now is something called Heroes of incredible Tales so if you've ever",
    "start": "731459",
    "end": "736920"
  },
  {
    "text": "done gaming you have no idea to launch if it's going to go like that or it's going to go this this one didn't go plop",
    "start": "736920",
    "end": "743700"
  },
  {
    "text": "so uh hit went out there it had two million registered users on day one",
    "start": "743700",
    "end": "749459"
  },
  {
    "text": "it currently has uh somewhere in the range well I don't know the exact number but it's more than 50 times what they",
    "start": "749459",
    "end": "755880"
  },
  {
    "text": "had on the first day so I got a huge number of people playing this and because it's Dynamo they didn't have to",
    "start": "755880",
    "end": "761220"
  },
  {
    "text": "scale the database so you don't play the game in the database but the database is where I'm keeping track of players and IDs this is",
    "start": "761220",
    "end": "768959"
  },
  {
    "text": "a fantasy battle game so you know what kind of Sword you have and how many gold pieces you have and all that other",
    "start": "768959",
    "end": "774540"
  },
  {
    "text": "information as well as doing the matchmaking so you know who you're going to fight it's actually a mobile game where six people can fight at the same",
    "start": "774540",
    "end": "781079"
  },
  {
    "text": "time and I first learned about this when I was on a trip to Korea and I noticed everyone else on the subway were",
    "start": "781079",
    "end": "787200"
  },
  {
    "text": "fighting each other on their mobile phones and it was all here so they typically have about 170 000 concurrent",
    "start": "787200",
    "end": "794820"
  },
  {
    "text": "players at once but because they can scale this this skit they don't have to scale It On Demand it scales by itself",
    "start": "794820",
    "end": "800940"
  },
  {
    "text": "lets us do some great stuff um they're about to come out with uh they've announced their next game which",
    "start": "800940",
    "end": "807899"
  },
  {
    "text": "is a multi a massive multiplayer role-playing game on a world that involves rockets and dinosaurs called",
    "start": "807899",
    "end": "813899"
  },
  {
    "text": "Durango so we're looking forward to that as they build that out using Dynamo and",
    "start": "813899",
    "end": "818940"
  },
  {
    "text": "elastic hash so elastic cache is Magic sauce that makes all databases faster and cheaper",
    "start": "818940",
    "end": "825600"
  },
  {
    "text": "okay that's a lie there's no such thing as magic there's only code but this uses",
    "start": "825600",
    "end": "831000"
  },
  {
    "text": "two engines memcache memcache D has been around for quite a long time it actually",
    "start": "831000",
    "end": "836279"
  },
  {
    "text": "first came out of the gaming world with a live journal and Zynga and redis which has been around since 2009 but give us",
    "start": "836279",
    "end": "842579"
  },
  {
    "text": "options for very high speed in-memory key Value Store what's high speed this",
    "start": "842579",
    "end": "847680"
  },
  {
    "text": "is why my shirt has the cute thing on it that says milliseconds or microseconds I blew the line wow microseconds are the",
    "start": "847680",
    "end": "855120"
  },
  {
    "text": "new milliseconds our average object to read or write in an elastic cache is",
    "start": "855120",
    "end": "860940"
  },
  {
    "text": "about 400 microseconds 0.4 milliseconds that makes it about 10 to 15 times",
    "start": "860940",
    "end": "867180"
  },
  {
    "text": "faster than any other option we have why is it so fast it's all in memory so what's great about all in memory",
    "start": "867180",
    "end": "872820"
  },
  {
    "text": "simple fast what's bad about all the memory you can only hold as much data as you have memory so today that limit's pretty good it's",
    "start": "872820",
    "end": "879420"
  },
  {
    "text": "3.5 terabytes and with some of the announcements you heard today about R4 nodes and other things those numbers are",
    "start": "879420",
    "end": "885180"
  },
  {
    "text": "going to go up but again it's fully managed no Administration we provide the availability and the reliability and",
    "start": "885180",
    "end": "891839"
  },
  {
    "text": "kind of like Aurora it's a hundred percent open source interface but we've put some hardening underneath so they",
    "start": "891839",
    "end": "898560"
  },
  {
    "text": "could take advantage of ec2 so that it is indeed ridiculously fast I",
    "start": "898560",
    "end": "903600"
  },
  {
    "text": "can say that because it's in the documentation that it's ridiculously fast but it's also open source we have",
    "start": "903600",
    "end": "909600"
  },
  {
    "text": "persistence so the data is not stored on disk but I can take snapshots for backup in order to recover and we have a very",
    "start": "909600",
    "end": "915839"
  },
  {
    "text": "highly available environment where in each redis cluster I can have 15 shards",
    "start": "915839",
    "end": "921240"
  },
  {
    "text": "and each Shard can have up to five replicas so right now on our elastic cache cluster we can handle 4.5 million",
    "start": "921240",
    "end": "928560"
  },
  {
    "text": "writes per second and 20 million reads per second do you need to write and read data that fast you will",
    "start": "928560",
    "end": "935459"
  },
  {
    "text": "and even if you don't right now it's good to know that the ceiling is way above your current needs so this is",
    "start": "935459",
    "end": "942420"
  },
  {
    "text": "a tool that makes it really easy to make databases fast and reliable you can put this you can use this as a primary data",
    "start": "942420",
    "end": "949500"
  },
  {
    "text": "store some of our customers do but most of our customers has a name elastic hash implies use it as a caching model to",
    "start": "949500",
    "end": "956160"
  },
  {
    "text": "increase the speed and reduce the costs of Amazon RDS or dynamodb or some of our",
    "start": "956160",
    "end": "962459"
  },
  {
    "text": "other options some of them will use it for other databases on db2 sorry on ec2",
    "start": "962459",
    "end": "967920"
  },
  {
    "text": "such as IBM db2 or mongodb or other pieces so one example of that is Expedia",
    "start": "967920",
    "end": "974579"
  },
  {
    "text": "currently the world's largest travel agency Expedia deployed a number of systems",
    "start": "974579",
    "end": "979980"
  },
  {
    "text": "onto dynamodb and they were happy with the performance but they had to provision for the",
    "start": "979980",
    "end": "986760"
  },
  {
    "text": "maximum throughput by putting a caching layer in front of there we were able to move them from",
    "start": "986760",
    "end": "991920"
  },
  {
    "text": "paying 35 000 in this case rates percent right right units rights per second to 3 500",
    "start": "991920",
    "end": "998940"
  },
  {
    "text": "because by using the caching layer we could intercept those rights and drip them in at the appropriate level because",
    "start": "998940",
    "end": "1004639"
  },
  {
    "text": "they didn't all have to write immediately similar thing on the read side we've had customers that we can reduce the number",
    "start": "1004639",
    "end": "1010579"
  },
  {
    "text": "of reads they need read units on Dynamo by 99 percent or customers that were needing 20 30 40",
    "start": "1010579",
    "end": "1018199"
  },
  {
    "text": "nodes of database down to five or six by caching those reads so in the case of",
    "start": "1018199",
    "end": "1023720"
  },
  {
    "text": "Expedia that's about 200 million messages a day they come in these big bursts but we can use the caching layer",
    "start": "1023720",
    "end": "1030199"
  },
  {
    "text": "to slow down where it gets into the database and therefore significantly reduce their costs in their case about",
    "start": "1030199",
    "end": "1036079"
  },
  {
    "text": "an 84 percent reduction in the cost of running their application why not 90 percent well the caching",
    "start": "1036079",
    "end": "1041839"
  },
  {
    "text": "isn't free but I cut the database cost 90 and there was about six percent in order to do",
    "start": "1041839",
    "end": "1047418"
  },
  {
    "text": "this work good trade for Expedia they were happy with it now there's Analytics",
    "start": "1047419",
    "end": "1053840"
  },
  {
    "text": "so redshift is another way Beyond Aurora that we're taking advantage of pro scare SQL Technologies in this case we're",
    "start": "1053840",
    "end": "1061700"
  },
  {
    "text": "using a postgres based environment in order to create a really effective system for Analytics",
    "start": "1061700",
    "end": "1067820"
  },
  {
    "text": "because we looked at this and we saw a lot of our customers are using big expensive dedicated Hardware to data",
    "start": "1067820",
    "end": "1073460"
  },
  {
    "text": "warehousing and we said well could we make that a lot faster a lot simpler and a lot cheaper",
    "start": "1073460",
    "end": "1079039"
  },
  {
    "text": "and you know if you've ever dealt with AWS or the rest of Amazon that's kind of our whole point of existing as a company",
    "start": "1079039",
    "end": "1085460"
  },
  {
    "text": "so it's everything from how do we deliver a package faster simpler and cheaper so how do we deliver data",
    "start": "1085460",
    "end": "1092120"
  },
  {
    "text": "warehouse It's a relational data warehouse it puts information in sorted by columns not by rows which makes it",
    "start": "1092120",
    "end": "1098720"
  },
  {
    "text": "possible to do huge scans really fast so usually through large environments",
    "start": "1098720",
    "end": "1103940"
  },
  {
    "text": "we're scanning at about four gigabytes per second and then we're able to do that only on the columns that apply to",
    "start": "1103940",
    "end": "1110179"
  },
  {
    "text": "your query so we've got lots of customers who have put this in here and found well I can",
    "start": "1110179",
    "end": "1115460"
  },
  {
    "text": "have so we support up to two petabytes and we can scan through that in in less",
    "start": "1115460",
    "end": "1120559"
  },
  {
    "text": "than an hour so that gives us the ability to do interesting things but you don't have to be a big customer to have big data so",
    "start": "1120559",
    "end": "1127160"
  },
  {
    "text": "we've got lots of you know internet customers like Yelp with with petabytes or big customers like NTT docomo and",
    "start": "1127160",
    "end": "1133280"
  },
  {
    "text": "Japan here's another Japanese company I dealt with they're not a big company they're called sushiro so Shiro is using",
    "start": "1133280",
    "end": "1139100"
  },
  {
    "text": "internet of things because this is one of those places you have sushi on plates and it goes around a conveyor and every plate has an iot in it so by using",
    "start": "1139100",
    "end": "1147679"
  },
  {
    "text": "redshift in real time they know who's buying what Sushi how quickly and what they've been able to reduce their food",
    "start": "1147679",
    "end": "1153860"
  },
  {
    "text": "waste by 80 percent because they know globally who's eating what and what restaurants",
    "start": "1153860",
    "end": "1159559"
  },
  {
    "text": "so they're a nice chain they've got about 380 stores across Japan and a few outside but the inventory and the",
    "start": "1159559",
    "end": "1166160"
  },
  {
    "text": "consumption information has let this relatively small company use big data to",
    "start": "1166160",
    "end": "1171740"
  },
  {
    "text": "have big savings and be able to provide better food the other one I'll mention in the uh two",
    "start": "1171740",
    "end": "1178340"
  },
  {
    "text": "others I'll mention the analytics space so elastic search service elasticsearch is an open source",
    "start": "1178340",
    "end": "1183679"
  },
  {
    "text": "distributed search and analytics engine about a year ago we started offering it as a service because like everything",
    "start": "1183679",
    "end": "1190820"
  },
  {
    "text": "else we've been talking about running databases you know running databases isn't hard running available databases",
    "start": "1190820",
    "end": "1196340"
  },
  {
    "text": "is hard but the really hard thing about running databases is you'll hear from our friends at FanDuel is how much time",
    "start": "1196340",
    "end": "1202400"
  },
  {
    "text": "and effort you spend running the database elasticsearch Falls in that category it's kind of hard to run an",
    "start": "1202400",
    "end": "1208220"
  },
  {
    "text": "elasticsearch environment and it's really hard to size search engines when user service all you do is go and say",
    "start": "1208220",
    "end": "1213980"
  },
  {
    "text": "okay I don't want three nodes I want five nodes no outages it automatically changes for you change the instant size change it",
    "start": "1213980",
    "end": "1220880"
  },
  {
    "text": "from an M3 medium to a r32xl whatever makes sense move it around but the most",
    "start": "1220880",
    "end": "1226520"
  },
  {
    "text": "common use for this isn't actually a traditional search engine it's log Analytics because you can move stuff in and of",
    "start": "1226520",
    "end": "1233000"
  },
  {
    "text": "course what generates logs everything so there's built-in patterns here to",
    "start": "1233000",
    "end": "1239120"
  },
  {
    "text": "take your AWS cloudwatch and cloud trail logs pull them in for visualization I'd",
    "start": "1239120",
    "end": "1244580"
  },
  {
    "text": "urge all of you to give this a try because the pattern to do this is completely built out if you go to AWS",
    "start": "1244580",
    "end": "1250460"
  },
  {
    "text": "and look for centralized logging you'll find a full cloud formation that with one click and 20 minutes later you're",
    "start": "1250460",
    "end": "1256460"
  },
  {
    "text": "visualizing all of your your logs for AWS and it's easy to add in logs for almost any other application",
    "start": "1256460",
    "end": "1264020"
  },
  {
    "start": "1263000",
    "end": "1263000"
  },
  {
    "text": "so sometimes Beyond log analytics we use it for business like McGraw-Hill the education group in McGraw-Hill is",
    "start": "1264020",
    "end": "1270440"
  },
  {
    "text": "providing tests and quizzes and information for Education across dozens",
    "start": "1270440",
    "end": "1275600"
  },
  {
    "text": "of countries and thousands of jurisdictions each month they have 100 to 150 million learning events student",
    "start": "1275600",
    "end": "1282140"
  },
  {
    "text": "took a quiz a teacher met with a parent by pulling all this in and using elasticsearch",
    "start": "1282140",
    "end": "1288140"
  },
  {
    "text": "they're able to analyze those results and both prevent dashboards so apparent news what their children is doing a",
    "start": "1288140",
    "end": "1294440"
  },
  {
    "text": "teacher knows what everyone in their class is doing a Headmaster knows what everyone in their school is doing but also be able to track Effectiveness",
    "start": "1294440",
    "end": "1301159"
  },
  {
    "text": "and progress and give people analytics that are useful and doing all of that through a search",
    "start": "1301159",
    "end": "1306440"
  },
  {
    "text": "engine that allows me to do flexible and efficient searches so so logs are not just for operational intelligence",
    "start": "1306440",
    "end": "1312500"
  },
  {
    "text": "they're also for figuring out what's happening in my whole organization before they were using elasticsearch",
    "start": "1312500",
    "end": "1318080"
  },
  {
    "text": "there was some really expensive data warehousing stuff going on radically cheaper and radically more effective",
    "start": "1318080",
    "end": "1325280"
  },
  {
    "start": "1324000",
    "end": "1324000"
  },
  {
    "text": "the last one I'm going to mention is Amazon EMR so this is a managed platform",
    "start": "1325280",
    "end": "1331480"
  },
  {
    "text": "with originally around mapreduce now mostly around tez it also spark and",
    "start": "1331480",
    "end": "1337220"
  },
  {
    "text": "press Presto so this is the whole world of Hadoop Technologies and This Is Us running Hadoop for you so again Hadoop",
    "start": "1337220",
    "end": "1344419"
  },
  {
    "text": "isn't hard to use it's not that hard to set up it's hard to keep it running it's like anything else in databases to",
    "start": "1344419",
    "end": "1350419"
  },
  {
    "text": "have a high availability reliable database there's a thousand things you have to get right and if you get 999",
    "start": "1350419",
    "end": "1355880"
  },
  {
    "text": "right it doesn't work you have to get all thousand right so our customers use this because it's",
    "start": "1355880",
    "end": "1361460"
  },
  {
    "text": "easier to let Amazon get those thousand things right so here I can use S3 or hdfs or map r as my storage options",
    "start": "1361460",
    "end": "1369020"
  },
  {
    "text": "leverage elasticity and the security features that we have and a lot of people use Amazon EMR with spot",
    "start": "1369020",
    "end": "1375320"
  },
  {
    "text": "instances so when I have a big chunk of analytics and I want to get it done on the next day but I don't really care about the exact time I wanted to get it",
    "start": "1375320",
    "end": "1381740"
  },
  {
    "text": "cheap I can use this to set up with spot decide how much I'm willing to pay and when the availability hits that level it",
    "start": "1381740",
    "end": "1388580"
  },
  {
    "text": "does the Analytics so one company I'll mention using this is Amgen Amgen is a major",
    "start": "1388580",
    "end": "1395179"
  },
  {
    "text": "biopharmaceutical company based out of California and Amgen what is whenever they do a",
    "start": "1395179",
    "end": "1402320"
  },
  {
    "text": "product launch they need to know how is this drug selling is it working and how is it going against our internal sales",
    "start": "1402320",
    "end": "1408200"
  },
  {
    "text": "figures versus external sales figures to see if they match up so they would they generally do this about once a month and",
    "start": "1408200",
    "end": "1414080"
  },
  {
    "text": "then more often when their product launches they used to do this with internal teradata systems and it was",
    "start": "1414080",
    "end": "1419299"
  },
  {
    "text": "taking 16 to 24 hours to do the run plus they had to pay for really expensive",
    "start": "1419299",
    "end": "1425059"
  },
  {
    "text": "teradata system which is a pretty pricey set of equipment when they move this onto Amazon EMR then",
    "start": "1425059",
    "end": "1431539"
  },
  {
    "text": "running on AWS first of all it only takes about eight hours now and in fact they could do it faster",
    "start": "1431539",
    "end": "1437299"
  },
  {
    "text": "because it's basically a money trade-off how much am I willing to spend but I use it eight hours a month I pay for eight",
    "start": "1437299",
    "end": "1443419"
  },
  {
    "text": "hours a month so not only do we get the results faster and more flexible but they're radically",
    "start": "1443419",
    "end": "1448580"
  },
  {
    "text": "less expensive Plus they had a pretty large staff that was dedicated to running the teradata",
    "start": "1448580",
    "end": "1454340"
  },
  {
    "text": "environment that staff no longer has to run the environment that staff can now be working on what is the value to Amgen",
    "start": "1454340",
    "end": "1460280"
  },
  {
    "text": "are these drugs doing what they need to do are we getting the information we need to have and that's been very valuable to them",
    "start": "1460280",
    "end": "1466220"
  },
  {
    "text": "all right I warned you I would talk quickly so that was an overview of our relational database service and dynamodb",
    "start": "1466220",
    "end": "1474080"
  },
  {
    "text": "and elasticash and Aurora and redshift and",
    "start": "1474080",
    "end": "1479600"
  },
  {
    "text": "EMR and elasticsearch so let's talk to somebody who's actually made this stuff work in real life",
    "start": "1479600",
    "end": "1487100"
  },
  {
    "text": "if I can make my clicker work nope",
    "start": "1487100",
    "end": "1494200"
  },
  {
    "text": "all right so you will get no movie so I would like to invite up to the",
    "start": "1496760",
    "end": "1502100"
  },
  {
    "text": "stage Robin Spira from FanDuel",
    "start": "1502100",
    "end": "1506980"
  },
  {
    "text": "sir is this the clicker here is that cool hello everyone",
    "start": "1511400",
    "end": "1519080"
  },
  {
    "text": "uh thanks Darren um it's a great privilege to be here today to tell you about our journey with",
    "start": "1519080",
    "end": "1524960"
  },
  {
    "text": "Amazon managed database services but before we get stuck in I'm going to give you a quick History of fanduel's Time",
    "start": "1524960",
    "end": "1534460"
  },
  {
    "text": "all right yep so in 2007 an Englishman an Irishman two",
    "start": "1535279",
    "end": "1540679"
  },
  {
    "text": "Welshman and a scotswoman launched an online news prediction game called Hub dub it was a game that",
    "start": "1540679",
    "end": "1547159"
  },
  {
    "text": "attracted a great audience but it didn't really attract any Revenue so in 2009 at",
    "start": "1547159",
    "end": "1553100"
  },
  {
    "text": "South by Southwest Conference in Texas the founders gathered in a garden with a group of Hub dub users to consider the",
    "start": "1553100",
    "end": "1560179"
  },
  {
    "text": "problem they knew that Sports particularly American Sports were by far the most",
    "start": "1560179",
    "end": "1565520"
  },
  {
    "text": "popular part of Hub dub and this led to the idea to do a complete pivot of the company the photograph",
    "start": "1565520",
    "end": "1572480"
  },
  {
    "text": "shows the very session in progress and the moment the FanDuel was born so FanDuel pioneered daily fantasy",
    "start": "1572480",
    "end": "1579080"
  },
  {
    "text": "sports or DFS for sure and the pivot turned out to be a great idea because this time it had a pretty",
    "start": "1579080",
    "end": "1584539"
  },
  {
    "text": "good Revenue model the breakout year was in 2014 and by the end of 2015 we had six million",
    "start": "1584539",
    "end": "1590900"
  },
  {
    "text": "registered users this year we've seen a dramatic change in the way people interact with FanDuel",
    "start": "1590900",
    "end": "1595940"
  },
  {
    "text": "and the majority of users now play exclusively using the mobile apps",
    "start": "1595940",
    "end": "1601340"
  },
  {
    "text": "we've also made it much easier to play socially with friends mode now I know many of you",
    "start": "1601340",
    "end": "1610299"
  },
  {
    "text": "from the US will probably know what DFS is but here's a quick recap for those who are less familiar because I know",
    "start": "1611059",
    "end": "1616100"
  },
  {
    "text": "everyone in here is from the US as with traditional fantasy sports daily fantasy sports allows you to create or",
    "start": "1616100",
    "end": "1622220"
  },
  {
    "text": "draft a team made up of players from real life teams and the fantasy scoring is then based on the events in the real",
    "start": "1622220",
    "end": "1628580"
  },
  {
    "text": "life games but compared to traditional fantasy sports where you're committed to a team for an entire season",
    "start": "1628580",
    "end": "1633799"
  },
  {
    "text": "DFS is more like a one-night stand allowing you to draft a new team every time you play",
    "start": "1633799",
    "end": "1639860"
  },
  {
    "text": "every player you pick has an assigned value and obviously the best players are the most expensive players so there's",
    "start": "1639860",
    "end": "1645620"
  },
  {
    "text": "quite a skill to drafting a team within the budget and it's something our users tell us is",
    "start": "1645620",
    "end": "1651860"
  },
  {
    "text": "the one of the most fun parts of the game FanDuel originally offered simple winner",
    "start": "1651860",
    "end": "1656900"
  },
  {
    "text": "head-to-head Winner Takes all head-to-head contests uh for the NFL but since then we've come quite a long way",
    "start": "1656900",
    "end": "1662900"
  },
  {
    "text": "and we now offer a variety of sports and contest types with our biggest tournaments offering million dollar",
    "start": "1662900",
    "end": "1669620"
  },
  {
    "text": "prize pools as with any disruptive business we are always innovating and this year we",
    "start": "1669620",
    "end": "1675380"
  },
  {
    "text": "launched friends mode which was designed to combine the social aspects of traditional fantasy sports with a sort",
    "start": "1675380",
    "end": "1682220"
  },
  {
    "text": "of instant gratification of daily fantasy sports by offering users the chance to play against their friends for",
    "start": "1682220",
    "end": "1688880"
  },
  {
    "text": "cash or bragging rights season long",
    "start": "1688880",
    "end": "1693279"
  },
  {
    "start": "1694000",
    "end": "1694000"
  },
  {
    "text": "so while for many friends mode was somewhat revolutionary in fact it's actually just",
    "start": "1695360",
    "end": "1701179"
  },
  {
    "text": "a significant step in what's been a constant evolution of the product when FanDuel launched there was no template",
    "start": "1701179",
    "end": "1707720"
  },
  {
    "text": "or blueprint for what DFS product should look like and no one knew how big it would become what now seems like",
    "start": "1707720",
    "end": "1713480"
  },
  {
    "text": "standard stuff for a DFS product in the same way that a shopping cart is obvious for an online shop",
    "start": "1713480",
    "end": "1719059"
  },
  {
    "text": "at the start these things weren't really obvious at all what's really important",
    "start": "1719059",
    "end": "1724880"
  },
  {
    "text": "it and that's really important because as software Engineers we know it can sometimes be hard to balance moving fast",
    "start": "1724880",
    "end": "1730460"
  },
  {
    "text": "and innovating with brilliant engineering which is something those of you who are also working for disruptive",
    "start": "1730460",
    "end": "1736100"
  },
  {
    "text": "companies uh will identify with excuse me I am got a very dry mouth",
    "start": "1736100",
    "end": "1743139"
  },
  {
    "text": "when you're innovating you often have to try different things to get traction and this means technical",
    "start": "1744980",
    "end": "1750679"
  },
  {
    "text": "decisions made for the right reasons based on what you know today will come back to hauntly we definitely have had",
    "start": "1750679",
    "end": "1756740"
  },
  {
    "text": "our fair share of these so it's important as your company and product evolves your platform evolves",
    "start": "1756740",
    "end": "1762799"
  },
  {
    "text": "with it last year as part of our platform roadmap we decided to move our data stores to AWS managed database",
    "start": "1762799",
    "end": "1769700"
  },
  {
    "text": "services for a variety of reasons now it's one thing for me is the CTO to sit there and sign off in such a move but",
    "start": "1769700",
    "end": "1775700"
  },
  {
    "text": "the real work is carried out by my awesome team and two of my team members are with me here today to tell you more",
    "start": "1775700",
    "end": "1781640"
  },
  {
    "text": "about it so with that I'll hand you over to Alan thank you [Applause]",
    "start": "1781640",
    "end": "1790039"
  },
  {
    "text": "hi there everyone um so that video who tells our users how they can become",
    "start": "1795380",
    "end": "1802460"
  },
  {
    "text": "Sports rich but before Financial could become the success that it is today the business",
    "start": "1802460",
    "end": "1807860"
  },
  {
    "text": "had to um become what I would term from an engineering perspective to be platform rich and if I just click onto the slide",
    "start": "1807860",
    "end": "1815659"
  },
  {
    "text": "that might actually there we go so this slide shows the kind of problem that most businesses would like to have",
    "start": "1815659",
    "end": "1822260"
  },
  {
    "start": "1817000",
    "end": "1817000"
  },
  {
    "text": "hockey stick growth and fangital has been extremely lucky to experience this phenomenon",
    "start": "1822260",
    "end": "1827899"
  },
  {
    "text": "but as a brand awareness grew so did the year-on-year growth in terms of active deposits Revenue",
    "start": "1827899",
    "end": "1834679"
  },
  {
    "text": "and as I run through the Journey that our platform has taken you're going to see a number in the top right hand corner of each slide this number",
    "start": "1834679",
    "end": "1840260"
  },
  {
    "text": "represents the approximate growth in our business as measured relative to that first year",
    "start": "1840260",
    "end": "1845360"
  },
  {
    "text": "the evolution of our platform was very much driven by this business expansion and we had to evolve to be able to cope",
    "start": "1845360",
    "end": "1851539"
  },
  {
    "text": "the load at the time we had so many new users but we had no idea how fast the platform was",
    "start": "1851539",
    "end": "1856880"
  },
  {
    "text": "going to be able to grow so the next half dozen or two slides",
    "start": "1856880",
    "end": "1861980"
  },
  {
    "start": "1859000",
    "end": "1859000"
  },
  {
    "text": "what I'm going to do is take you on a journey that views the platform through the lens of business uptime I'll share some of the data challenges that we",
    "start": "1861980",
    "end": "1867860"
  },
  {
    "text": "encountered along the way and I'll also talk about the Amazon technology choices that we made and how they helped us",
    "start": "1867860",
    "end": "1873140"
  },
  {
    "text": "stabilize our business so at the outset Franjo had found her code running on a lamp stack in a cool",
    "start": "1873140",
    "end": "1879200"
  },
  {
    "text": "location Center which was pretty much how all these things started back in those days the stack had a monolithic PHP code base",
    "start": "1879200",
    "end": "1885260"
  },
  {
    "text": "running on top of a monolithical MySQL instance and that MySQL instance had a",
    "start": "1885260",
    "end": "1890360"
  },
  {
    "text": "schema layout that wasn't optimized for the scale that fanjoy was about to experience",
    "start": "1890360",
    "end": "1895940"
  },
  {
    "text": "so as the business grew decisions were made that were appropriate at the time to deal with the scale problem at hand",
    "start": "1895940",
    "end": "1901700"
  },
  {
    "text": "we also realized that we would have to revisit those decisions pretty much on a yearly basis to be able to cope with the",
    "start": "1901700",
    "end": "1907640"
  },
  {
    "text": "next wave of business growth some of the problems we had related to the Legacy code being carried forward",
    "start": "1907640",
    "end": "1913580"
  },
  {
    "text": "without the requisite attention being paid to technical debt reduction and the software itself didn't scale very easily",
    "start": "1913580",
    "end": "1920299"
  },
  {
    "text": "so there was a heavy Reliance on the monolithic database server at the back end to meet the business the demands of",
    "start": "1920299",
    "end": "1926059"
  },
  {
    "text": "the business scale operationally this meant that the database server was running hot pretty much most NFL Sundays and On Any Given",
    "start": "1926059",
    "end": "1933380"
  },
  {
    "text": "NFL Sunday as we approached game lock that server would run at 90 plus of its compute capacity",
    "start": "1933380",
    "end": "1939320"
  },
  {
    "text": "and in so much the software didn't easily scale we also had a problem with co-location with co-location itself with",
    "start": "1939320",
    "end": "1945559"
  },
  {
    "text": "physical Hardware that it echoes the first syllable it's just hard to scale with physical co-location",
    "start": "1945559",
    "end": "1951740"
  },
  {
    "text": "and so the not so unusual takeaway from this slide is that scaling was a real problem for the business",
    "start": "1951740",
    "end": "1958299"
  },
  {
    "start": "1958000",
    "end": "1958000"
  },
  {
    "text": "so moving forward to 2010 Evangel realized the need to scale and it was this year that we made an initial foray",
    "start": "1958700",
    "end": "1964220"
  },
  {
    "text": "into cloud computing back in 2010 it wasn't clear that Amazon was the going to be the leader in Cloud technology",
    "start": "1964220",
    "end": "1970640"
  },
  {
    "text": "that it is today so we were with a different provider at that time we chose that provider based on price but we",
    "start": "1970640",
    "end": "1976520"
  },
  {
    "text": "experienced some pretty hairy operational issues with them particularly in relation to networking",
    "start": "1976520",
    "end": "1982760"
  },
  {
    "text": "it was these early issues coupled with some pretty mediocre support that would force us to move Lock Stock and Barrel",
    "start": "1982760",
    "end": "1987799"
  },
  {
    "text": "to Amazon the following year however that initialed foray into cloud computing gave us the impetus to move",
    "start": "1987799",
    "end": "1993740"
  },
  {
    "text": "our platform to more towards a cloud-based model for hosting in doing so we let go of the pain points",
    "start": "1993740",
    "end": "2000039"
  },
  {
    "text": "that we would normally have with terrestrial hosting we acquired a whole new bunch of growing pains in the process",
    "start": "2000039",
    "end": "2006340"
  },
  {
    "text": "so in 2010 we made several significant platform changes the application was refactored",
    "start": "2006340",
    "end": "2013299"
  },
  {
    "text": "to a degree in order to enable the web server layer to scale horizontally but despite our best Endeavors to scale",
    "start": "2013299",
    "end": "2020140"
  },
  {
    "text": "we still had that monolithic throbbing database at the back end moving forward to 2011. this was the",
    "start": "2020140",
    "end": "2027460"
  },
  {
    "text": "year that franjul migrated Lock Stock and Barrel to Amazon web services moving",
    "start": "2027460",
    "end": "2032740"
  },
  {
    "text": "to AWS was simply the best move that fanjul ever made did you put that in",
    "start": "2032740",
    "end": "2038140"
  },
  {
    "text": "here I'll take that here thank you very much you said Amazon was great so there we go thank you",
    "start": "2038140",
    "end": "2044200"
  },
  {
    "text": "do that once but moving to AWS didn't magically solve the scaling problems that we had the",
    "start": "2044200",
    "end": "2050080"
  },
  {
    "text": "site still went down frequently on NFL Sundays and I have a slide coming up that will show you the traffic shape that we had to contend with this will",
    "start": "2050080",
    "end": "2056560"
  },
  {
    "text": "help put into context the difficulty of the scaling problem that we actually had to solve",
    "start": "2056560",
    "end": "2062098"
  },
  {
    "text": "so the initial database setup we had with Amazon was self and so MySQL running on self-managed ec2 with",
    "start": "2064839",
    "end": "2070480"
  },
  {
    "text": "statement based replication we were extremely fortunate at this time in that our code base had a relatively clean",
    "start": "2070480",
    "end": "2076300"
  },
  {
    "text": "separation of read and write functionality depending on which request was coming in from what endpoint we could either route it to the master or",
    "start": "2076300",
    "end": "2082419"
  },
  {
    "text": "to the appropriate read replica this gave us a higher degree of scalability for any read heavy workload",
    "start": "2082419",
    "end": "2088300"
  },
  {
    "text": "that we had and not having to deal with the separation of the reason why it concerns at that time allowed us to focus on other endeavors that would help",
    "start": "2088300",
    "end": "2095080"
  },
  {
    "text": "mitigate the technical debt that we had in our data layer there were drawbacks to this new",
    "start": "2095080",
    "end": "2101859"
  },
  {
    "text": "self-managed setup the addition of each new read replica would place ever more burden on the master forcing it to spend",
    "start": "2101859",
    "end": "2107560"
  },
  {
    "text": "more of its compute capacity keeping the replicas in sync data loss was another concern if we lost the master then we",
    "start": "2107560",
    "end": "2113680"
  },
  {
    "text": "lost whatever replication data was in flight and adding a read replica to the cluster was a long drawn out process",
    "start": "2113680",
    "end": "2120400"
  },
  {
    "text": "ec2s had to be lovingly curated by hand this involved OS configuration MySQL installation and configuration seeding",
    "start": "2120400",
    "end": "2127599"
  },
  {
    "text": "it with the data warming up the creative cash warming up the buffer pool and so on and so forth and all of these activities were crucial",
    "start": "2127599",
    "end": "2134200"
  },
  {
    "text": "before that replica become online on reflection we were doing all of that heavy lifting that Amazon does for us",
    "start": "2134200",
    "end": "2140380"
  },
  {
    "text": "today however one thing was true in 2011 and that was our data layer capability had moved on significantly",
    "start": "2140380",
    "end": "2147720"
  },
  {
    "text": "in 2012 work started in Earnest to carve chunks off the application monolith and move the platform more towards a service",
    "start": "2147820",
    "end": "2153940"
  },
  {
    "text": "oriented architecture discreet back-end Java service components were created each with their own backing store and",
    "start": "2153940",
    "end": "2160540"
  },
  {
    "text": "application components were decoupled with the introduction of message queues and for better for worse we also started",
    "start": "2160540",
    "end": "2165880"
  },
  {
    "text": "to look at redis as a persistence option after all Twitter were using it at the time so it had to be pretty cool right",
    "start": "2165880",
    "end": "2173020"
  },
  {
    "text": "we identified puppet as the tool of choice in order to button things down in terms of configuration",
    "start": "2173020",
    "end": "2178420"
  },
  {
    "text": "management clicker works",
    "start": "2178420",
    "end": "2183700"
  },
  {
    "text": "there we go and consideration was given and how we would elasticize all the things right so we started looking at",
    "start": "2183700",
    "end": "2190000"
  },
  {
    "text": "elbs and considering how to build stateless application layers that could horizontally scale up to the point up to",
    "start": "2190000",
    "end": "2196240"
  },
  {
    "text": "this point in time rather our infrastructure of elasticity had been managed by a homegrown parallel script",
    "start": "2196240",
    "end": "2201760"
  },
  {
    "text": "and whilst Noble in its aim this script was very occasionally unreliable my colleague Steve who'll speak shortly",
    "start": "2201760",
    "end": "2207400"
  },
  {
    "text": "will give you a little bit more detail on that if you buy them a beer afterwards so with auto scaling groups maturing as",
    "start": "2207400",
    "end": "2213220"
  },
  {
    "text": "a capability within AWS we started to use them to manage our scaling needs almost immediately we benefited from",
    "start": "2213220",
    "end": "2218800"
  },
  {
    "text": "better fault tolerance service availability and cost management",
    "start": "2218800",
    "end": "2223740"
  },
  {
    "text": "but we still have that huge Legacy database at the end the master was running on one of Amazon's biggest ec2s",
    "start": "2223839",
    "end": "2229060"
  },
  {
    "text": "at the time and it was running pretty hot still on NFL Sundays we were continually asking Amazon for more and",
    "start": "2229060",
    "end": "2234280"
  },
  {
    "text": "more iops reaching a provisioning peak of over 8 000 at one stage",
    "start": "2234280",
    "end": "2240000"
  },
  {
    "text": "for 2013 business volumes had not really increased 625x and we had new platform",
    "start": "2241060",
    "end": "2247119"
  },
  {
    "text": "challenges we had time pressure to get an IELTS app to Market and that desire largely shaped the initial development",
    "start": "2247119",
    "end": "2253060"
  },
  {
    "text": "path of what would be our new rest based API layer little consideration was given at the outset of this journey as to how",
    "start": "2253060",
    "end": "2259180"
  },
  {
    "text": "that new mobile app would be furnished with the right data and we continued to carve parts of the application monolith",
    "start": "2259180",
    "end": "2265960"
  },
  {
    "text": "to implement them as Java back-end services but then what happened boom we had the",
    "start": "2265960",
    "end": "2271240"
  },
  {
    "text": "great NFL blackout we went down in the opening day of the 2013 NFL season but we weren't alone I think pretty much all",
    "start": "2271240",
    "end": "2277540"
  },
  {
    "text": "the other DFS providers went down at the same time the monolithic database had suffered a",
    "start": "2277540",
    "end": "2282760"
  },
  {
    "text": "Cascade failure caused by the killer combination of a schema that wasn't optimized for scale and a high number of",
    "start": "2282760",
    "end": "2288460"
  },
  {
    "text": "write queries in the lead up to game lock this caused ever higher levels of contention as the number of table locks",
    "start": "2288460",
    "end": "2293920"
  },
  {
    "text": "increased eventually leading to the demise of the database",
    "start": "2293920",
    "end": "2299020"
  },
  {
    "text": "so the focus naturally turns to improve our Dr position so we migrated from a single Master to an active passive",
    "start": "2299020",
    "end": "2305260"
  },
  {
    "text": "multi-master setup with each Master having its own replication chain this gave us higher availability but it",
    "start": "2305260",
    "end": "2311500"
  },
  {
    "text": "still fell short of what was possible it was still possible to lose replication data in flight to the",
    "start": "2311500",
    "end": "2317740"
  },
  {
    "text": "passive master but in reality with this setup we never actually had to failover but it did give us the added advantage of being able to",
    "start": "2317740",
    "end": "2324640"
  },
  {
    "text": "make database changes to the secondary and then flip that over to be the primary for backup provision we would take a",
    "start": "2324640",
    "end": "2330880"
  },
  {
    "text": "read replica offline snapshot its data volumes which contain the DB files bring it back into the cluster and let it",
    "start": "2330880",
    "end": "2337060"
  },
  {
    "text": "catch up with replication and this was done on an hourly basis but introduced you know a load of operational",
    "start": "2337060",
    "end": "2342160"
  },
  {
    "text": "complexity and whilst we manage the",
    "start": "2342160",
    "end": "2347279"
  },
  {
    "text": "there we go whilst we manage the rest of the NFL season without any service degradations",
    "start": "2348880",
    "end": "2354099"
  },
  {
    "text": "we still had that pesky monolithic database at the back end",
    "start": "2354099",
    "end": "2358680"
  },
  {
    "text": "by 2014 business volumes had taken another giant leap but we did manage to make it through that NFL season without what was left of",
    "start": "2359859",
    "end": "2366940"
  },
  {
    "text": "our monolithic database causing us any further outages and this was progress we launched our core internal API and",
    "start": "2366940",
    "end": "2373599"
  },
  {
    "text": "started to re-platform our front-end web components to be able to use it and we also launched our award-winning iOS",
    "start": "2373599",
    "end": "2380560"
  },
  {
    "text": "mobile app the same year but 2014 wasn't all plain sailing in the",
    "start": "2380560",
    "end": "2385720"
  },
  {
    "text": "second week we endured a service degradation this time with one of our redis components at the back end",
    "start": "2385720",
    "end": "2391180"
  },
  {
    "text": "one of the reddest read replicas had fallen so far behind its Master possibly due to a network partition that it made",
    "start": "2391180",
    "end": "2397180"
  },
  {
    "text": "a full dump request to the master to be reseeded and unfortunately this situation persisted with no step off and",
    "start": "2397180",
    "end": "2403480"
  },
  {
    "text": "frequency of occurrence so we ended up with the Masters compute bandwidth being totally saturated and annihilating the",
    "start": "2403480",
    "end": "2409660"
  },
  {
    "text": "service what I'm trying to point out here is that there's an error Pro nature of trying to self-manage a redis cluster",
    "start": "2409660",
    "end": "2416740"
  },
  {
    "text": "and whilst it's fast redis does have some operational drawbacks if you run it in a single instance it's single",
    "start": "2416740",
    "end": "2422680"
  },
  {
    "text": "threaded and its performance is vertically limited by CPU clock speed but still at the end of 2014 we had that",
    "start": "2422680",
    "end": "2430240"
  },
  {
    "text": "monolithic database wine forward to last year as most of our us audience members will",
    "start": "2430240",
    "end": "2436300"
  },
  {
    "text": "be aware the main DF industry protagonists ran enormous user acquisition campaigns during 2015.",
    "start": "2436300",
    "end": "2442599"
  },
  {
    "text": "there was a DFS ad on TV every four or five ads it'd be DFS ad automobile ad",
    "start": "2442599",
    "end": "2448119"
  },
  {
    "text": "pharmaceutical ad DFS ad and so the cycle would continue this drove business volumes up by",
    "start": "2448119",
    "end": "2453280"
  },
  {
    "text": "another order of magnitude and in 2015 alone we ended up paying out over two billion dollars in winning Super users",
    "start": "2453280",
    "end": "2459760"
  },
  {
    "text": "just to be clear that's billion with a B 2015 also saw the formation of a",
    "start": "2459760",
    "end": "2465700"
  },
  {
    "text": "dedicated architecture function and from an infrastructure perspective we had widespread adoption of",
    "start": "2465700",
    "end": "2471160"
  },
  {
    "text": "infrastructure as code using cloud formation all provisioned using Sparkle formation",
    "start": "2471160",
    "end": "2476740"
  },
  {
    "text": "the platform continue to add more Java back-end service components with their own specific data stores and crucially",
    "start": "2476740",
    "end": "2483400"
  },
  {
    "text": "for the data layer we migrated our monolithic database from a self-hosted multi-master setup to an identical setup",
    "start": "2483400",
    "end": "2489520"
  },
  {
    "text": "on Amazon RDS for MySQL moving to RDS from my sequel took away a lot of pain points for us backup",
    "start": "2489520",
    "end": "2496180"
  },
  {
    "text": "management and replication management became Amazon's problems overnight before our RDS it would take one to two",
    "start": "2496180",
    "end": "2502180"
  },
  {
    "text": "devops colleagues most of the day to create a read replica provision the ec2 configure my SQL manually copy the",
    "start": "2502180",
    "end": "2509260"
  },
  {
    "text": "data warm the query cache and so on and so forth as I mentioned before this was time consuming in a fidgety task and",
    "start": "2509260",
    "end": "2515440"
  },
  {
    "text": "configuring and swapping at a master was a whole different ball game RDS from MySQL took these pain points away for us",
    "start": "2515440",
    "end": "2521020"
  },
  {
    "text": "pretty much overnight this is where we really got to appreciate the value of Amazon doing that undifferentiated heavy",
    "start": "2521020",
    "end": "2526900"
  },
  {
    "text": "lifting for us so where are we now in 2016 halfway through the NFL season well platform was",
    "start": "2526900",
    "end": "2533320"
  },
  {
    "text": "pretty stable touchwood our recovery point in time objectives are significantly lower than they have been in previous years and service",
    "start": "2533320",
    "end": "2539320"
  },
  {
    "text": "interruptions are now mercifully rare one of the keys to that has been our",
    "start": "2539320",
    "end": "2544480"
  },
  {
    "text": "performance testing capability which is now Rock Solid and one of the things we focus on with that is what we call broad",
    "start": "2544480",
    "end": "2550420"
  },
  {
    "text": "endpoint testing this is the ability of being able to test all platform components simultaneously you",
    "start": "2550420",
    "end": "2557380"
  },
  {
    "text": "know redlining those components and figuring out where the operational bottlenecks might be found",
    "start": "2557380",
    "end": "2562660"
  },
  {
    "text": "as a result our platform now has significant operational Headroom which is truly amazing",
    "start": "2562660",
    "end": "2568060"
  },
  {
    "text": "and as I've touched on along the way we focused a lot in this year on reducing the tech debt we had in our platform we",
    "start": "2568060",
    "end": "2574839"
  },
  {
    "text": "untied those application Guardian knots by taking a kind of slice at a time approach",
    "start": "2574839",
    "end": "2580740"
  },
  {
    "text": "and architecturally we have now predominantly service oriented architecture and getting this breathing space has",
    "start": "2580900",
    "end": "2587200"
  },
  {
    "text": "allowed us to shift our Focus to the adoption of more modern architectural paradigms yes we still have that monolithic",
    "start": "2587200",
    "end": "2593440"
  },
  {
    "text": "database yes it can still be a provisioning thorn in our operational site but our dependency on it is a lot",
    "start": "2593440",
    "end": "2599740"
  },
  {
    "text": "less than it once was at this point some of you might be wondering why we didn't consider using dynamodb to address some",
    "start": "2599740",
    "end": "2605319"
  },
  {
    "text": "of our scaling needs the answer to that question is that we did consider it but it just wasn't fit for our use case",
    "start": "2605319",
    "end": "2612660"
  },
  {
    "text": "now this slide won't be easy to make out but I wanted to show it to you anyway one of those unreadable slides that you always have to show",
    "start": "2613060",
    "end": "2618640"
  },
  {
    "text": "but it's just to give you a feel for the service oriented architecture that I've been talking about at the top there you can see the clients which will be the",
    "start": "2618640",
    "end": "2625359"
  },
  {
    "text": "IOS app the Android app and web and there's the service layers there and the data layers",
    "start": "2625359",
    "end": "2630579"
  },
  {
    "text": "just below that whoops there we go",
    "start": "2630579",
    "end": "2637119"
  },
  {
    "start": "2633000",
    "end": "2633000"
  },
  {
    "text": "so at this point I'd like to pause to recap some of our data challenges the prevailing operational model for most",
    "start": "2637119",
    "end": "2642520"
  },
  {
    "text": "businesses is that if their service fails they fix that problem as soon as possible",
    "start": "2642520",
    "end": "2647680"
  },
  {
    "text": "whereupon their users can come back and retry the transaction that failed before",
    "start": "2647680",
    "end": "2652859"
  },
  {
    "text": "e-commerce providers for example franchise model is somewhat inverted to this if we fail at the wrong time then",
    "start": "2652859",
    "end": "2658540"
  },
  {
    "text": "there is literally no opportunity for the users to come back to retry the transaction our pre-game lock engine edit traffic is",
    "start": "2658540",
    "end": "2665319"
  },
  {
    "text": "seasonal and for the most part predictable and it follows real sporting fixtures we have absolute times that we",
    "start": "2665319",
    "end": "2670359"
  },
  {
    "text": "cannot miss such as game start this means that our platform",
    "start": "2670359",
    "end": "2676300"
  },
  {
    "text": "has to be appropriately scaled in advance of Gamestar usually in the three hours leading up to game start very few",
    "start": "2676300",
    "end": "2682240"
  },
  {
    "text": "businesses have to cope with a traffic shape where everything is near to zero it's then it becomes go go go go and",
    "start": "2682240",
    "end": "2688420"
  },
  {
    "text": "then we have to be complete all our entry and edit transactions must be complete prior to GameStop we have no",
    "start": "2688420",
    "end": "2693940"
  },
  {
    "text": "business failure safety net whatsoever any failure at this time we'd place a colossal burden on our customer services",
    "start": "2693940",
    "end": "2700119"
  },
  {
    "text": "team refunding users and so on not to mention the intangible cost of reputational damage I think at one point",
    "start": "2700119",
    "end": "2706480"
  },
  {
    "text": "we did ask the NFL if they would be prepared to pause game start for us if we experience any data consistency",
    "start": "2706480",
    "end": "2712180"
  },
  {
    "text": "issues but so far they've failed to give back to us on that one so entering edit",
    "start": "2712180",
    "end": "2718420"
  },
  {
    "start": "2716000",
    "end": "2716000"
  },
  {
    "text": "as I mentioned in the last slide we have a hard stop at gamestart we're taking people's money in return for an entry that has a nominal value and the sums of",
    "start": "2718420",
    "end": "2725800"
  },
  {
    "text": "money involved are substantial atomicity is extremely important we're performing Atomic distributed",
    "start": "2725800",
    "end": "2731740"
  },
  {
    "text": "transactions whose Integrity is Paramount and availability whilst important is the only cap compromise we",
    "start": "2731740",
    "end": "2737800"
  },
  {
    "text": "can make in return for safeguarding that data consistency at our peak in 2015",
    "start": "2737800",
    "end": "2744660"
  },
  {
    "text": "we processed around a thousand inserts and 200 updates per second this doesn't sound like a lot but remember this was",
    "start": "2745000",
    "end": "2750940"
  },
  {
    "text": "against a database who schema wasn't optimized for scale to give an example we had some core",
    "start": "2750940",
    "end": "2756280"
  },
  {
    "text": "tables with overburdening numbers of indexes to enable out-of-band business reporting",
    "start": "2756280",
    "end": "2761560"
  },
  {
    "text": "one table in particular that we had had over 600 million rows and 14 indexes so",
    "start": "2761560",
    "end": "2767680"
  },
  {
    "text": "any right operation against that table was extremely computationally expensive",
    "start": "2767680",
    "end": "2773160"
  },
  {
    "text": "51 is in Houston this year well at the peak that I've been talking about from last year we processed transactions at a",
    "start": "2775540",
    "end": "2781540"
  },
  {
    "text": "rate that would fill out the Reliant Stadium in less than six minutes but whilst we can cope with the volume",
    "start": "2781540",
    "end": "2787960"
  },
  {
    "text": "of traffic that we've talked about today you've seen that this journey hasn't been easy replication lag would still be",
    "start": "2787960",
    "end": "2793359"
  },
  {
    "text": "a problem with data rights still pending at gamestart and at one point we had an issue where users were able to see",
    "start": "2793359",
    "end": "2799000"
  },
  {
    "text": "another user's lineup changing after game start only a page refresh would bring everything back into Line This was",
    "start": "2799000",
    "end": "2805420"
  },
  {
    "text": "caused by our live scoring service reading data from a read replica that had yet to be updated from the master",
    "start": "2805420",
    "end": "2811119"
  },
  {
    "text": "those users thought they were seeing an ability being granted to other users to be able to edit their lineups after game",
    "start": "2811119",
    "end": "2816700"
  },
  {
    "text": "lock and this is a situation that we ended up having to compensate some users for in general we kept the replication lag",
    "start": "2816700",
    "end": "2822700"
  },
  {
    "text": "down to under 30 seconds and to obviate any operational concerns we introduced a grace period between game block and game",
    "start": "2822700",
    "end": "2828460"
  },
  {
    "text": "start sufficiently long enough to make sure that all transactions had been flushed through before live scoring came",
    "start": "2828460",
    "end": "2833859"
  },
  {
    "text": "into effect now I've got some graphs in the next couple of slides here that will hopefully provide a little bit more",
    "start": "2833859",
    "end": "2839560"
  },
  {
    "text": "context the x-axis on this graph shows GMT On Any Given NFL Sunday and the",
    "start": "2839560",
    "end": "2845200"
  },
  {
    "text": "y-axis is the number of modifications per second so the magenta line you see is the number of lineups being modified",
    "start": "2845200",
    "end": "2850599"
  },
  {
    "text": "and the turquoise line above that is the number of entries entries is the higher line here because most people who create",
    "start": "2850599",
    "end": "2856240"
  },
  {
    "text": "lineups tend to enter those more than once into different contests the main Spike you see is 1 pm Eastern",
    "start": "2856240",
    "end": "2862000"
  },
  {
    "text": "that's when all the NFL games start and the smaller spikes to the right represent the same kind of activity in",
    "start": "2862000",
    "end": "2867579"
  },
  {
    "text": "other sporting fixtures like baseball or basketball",
    "start": "2867579",
    "end": "2871859"
  },
  {
    "start": "2872000",
    "end": "2872000"
  },
  {
    "text": "live scoring so fundamentally fangital has two insanely high peaks of data traffic to deal with and a smooth",
    "start": "2872740",
    "end": "2877960"
  },
  {
    "text": "transition between the two is essential we must have a consistent view of the data",
    "start": "2877960",
    "end": "2883119"
  },
  {
    "text": "so immediately after our biggest hurdle of entry and edit data consistency we have our next biggest hurdle",
    "start": "2883119",
    "end": "2888640"
  },
  {
    "text": "and that's live scoring that sharp drop off you saw in the last slide is matched by an equally sharp climb that",
    "start": "2888640",
    "end": "2894760"
  },
  {
    "text": "represents the data aggregation and provisioning to underpin our live scoring experience you'll see this climb on the next slide",
    "start": "2894760",
    "end": "2902819"
  },
  {
    "text": "initially live scoring was treated as an optional extra for for us but we quickly realized that users saw it as a major",
    "start": "2903400",
    "end": "2909160"
  },
  {
    "text": "attraction for post-game lock to provide a little context when Peyton Manning throws a 30-yard touchdown pass that",
    "start": "2909160",
    "end": "2915339"
  },
  {
    "text": "event is recorded at the stadium like other events is available for fangital to consume electronically within about",
    "start": "2915339",
    "end": "2920680"
  },
  {
    "text": "15 seconds we take that data we process it we pump it back down to the devices mobile",
    "start": "2920680",
    "end": "2926980"
  },
  {
    "text": "devices and web and that near real-time client update capability has caused a January genuinely exciting two two",
    "start": "2926980",
    "end": "2933880"
  },
  {
    "text": "screen experience for our users they watch the TV they see they're going to do well they look at their phones about",
    "start": "2933880",
    "end": "2939400"
  },
  {
    "text": "30 seconds later and they see that update reflected as their Avatar moves toward a more positive place",
    "start": "2939400",
    "end": "2945700"
  },
  {
    "text": "now live scoring has two major scalability concerns at the back end we",
    "start": "2945700",
    "end": "2951099"
  },
  {
    "text": "have to ingest all those events and update huge data structures and store them in our backing store which is redis",
    "start": "2951099",
    "end": "2956859"
  },
  {
    "text": "in this particular case and then we have the front end concern where we pump all that data down to the user devices",
    "start": "2956859",
    "end": "2962859"
  },
  {
    "text": "the total time from field event to uh client being updated can vary from tens",
    "start": "2962859",
    "end": "2968500"
  },
  {
    "text": "of seconds to a minute so the x-axis in this graph again GMT On",
    "start": "2968500",
    "end": "2975700"
  },
  {
    "text": "Any Given NFL Sunday and the y-axis here showing the number of contests that have been scored per second so this is the climb that I was talking about just a",
    "start": "2975700",
    "end": "2982540"
  },
  {
    "text": "moment ago what you're seeing here is a peak of about 3 000 user contests being scored per second you know this is a",
    "start": "2982540",
    "end": "2989859"
  },
  {
    "text": "huge exercise in data aggregation and is extremely computationally intense the spikiness is driven by the",
    "start": "2989859",
    "end": "2996579"
  },
  {
    "text": "number of real-time events that come into the to come into the system and to give you a feel for that ingestion rate if you think of all the NFL fields that",
    "start": "2996579",
    "end": "3003240"
  },
  {
    "text": "there are around the country people throwing the ball catching the ball rushing whatever the different terms are you have to excuse me I'm from the UK",
    "start": "3003240",
    "end": "3009839"
  },
  {
    "text": "not terribly familiar with those but we ingest all those events and then we update these data structures it's pretty",
    "start": "3009839",
    "end": "3014880"
  },
  {
    "text": "it's pretty full-on the next graph here the scoring views per second again uh GMT On Any Given NFL",
    "start": "3014880",
    "end": "3022260"
  },
  {
    "start": "3017000",
    "end": "3017000"
  },
  {
    "text": "Sunday you see the steady growth on the left hand side of the graph that is in direct proportion to the number of entries that we're seeing the reason for",
    "start": "3022260",
    "end": "3028859"
  },
  {
    "text": "that is because once the user has entered the contest the next uh part of their user experience is the live",
    "start": "3028859",
    "end": "3034680"
  },
  {
    "text": "scoring page but at that point in time live scoring isn't running but then come 1 pm Eastern boom that number goes up",
    "start": "3034680",
    "end": "3041640"
  },
  {
    "text": "like a rocket now after entering edit and live scoring",
    "start": "3041640",
    "end": "3048119"
  },
  {
    "text": "we get the next part of our challenging data life cycle which is that of settlement salmon is the process that happens when all the games in a slated",
    "start": "3048119",
    "end": "3054660"
  },
  {
    "text": "fixtures are complete it involves totally up the scores and then paying out real money that's that",
    "start": "3054660",
    "end": "3060059"
  },
  {
    "text": "kind of two billion figure that I was talking about earlier to put some context around this",
    "start": "3060059",
    "end": "3065640"
  },
  {
    "text": "settling one slate of fixtures alone can involve as many as many as 10 million reads from and 55 million rights to that",
    "start": "3065640",
    "end": "3072480"
  },
  {
    "text": "monolithic database and we have a limited time window within settlement within which settlement must complete",
    "start": "3072480",
    "end": "3079880"
  },
  {
    "text": "in terms of performance they've got a before and after here on self-managed ec2 running MySQL we got about five",
    "start": "3081119",
    "end": "3087780"
  },
  {
    "text": "hours for settling once later fixtures and by the time we've taken settlement and made that into a distinct Java",
    "start": "3087780",
    "end": "3093720"
  },
  {
    "text": "back-end service component with its own RDS backing store we managed to cut that down to about 1 hour 20 minutes",
    "start": "3093720",
    "end": "3100520"
  },
  {
    "text": "so what do we learn on this you know bumpy journey of managing our own data well our number one concern is data",
    "start": "3100680",
    "end": "3106859"
  },
  {
    "text": "consistency and aside from scaling replication lag has hurt us in a number",
    "start": "3106859",
    "end": "3113099"
  },
  {
    "text": "of areas I talked earlier about the grace period we had to insert but another stage we hedged against",
    "start": "3113099",
    "end": "3118440"
  },
  {
    "text": "replication lag by inserting an artificial time delay between the point where a user's entry was taken and that",
    "start": "3118440",
    "end": "3124020"
  },
  {
    "text": "next step in their experience the ability to view the lineup they just entered this was clearly an agricultural",
    "start": "3124020",
    "end": "3129059"
  },
  {
    "text": "solution to a problem that we just simply shouldn't have had",
    "start": "3129059",
    "end": "3133220"
  },
  {
    "text": "prior to using any AWS managed database Services the devops team had to carry the significant burden in relation to",
    "start": "3134280",
    "end": "3140160"
  },
  {
    "text": "the preparation of read replicas and the maintenance of the self-managed database clusters for example failure and",
    "start": "3140160",
    "end": "3146160"
  },
  {
    "text": "Recovery we were constantly trying to get our RPO and RTO numbers down as close to zero as possible and management",
    "start": "3146160",
    "end": "3151440"
  },
  {
    "text": "of the active passive multi-master setup was pretty non-trivial I talked earlier about having to handcraft new read",
    "start": "3151440",
    "end": "3156540"
  },
  {
    "text": "replicas and all these work items were done by hand and of course what's more is they took a lot of time and effort to",
    "start": "3156540",
    "end": "3161940"
  },
  {
    "text": "perform the first step we took was to with Amazon managed database Services was to",
    "start": "3161940",
    "end": "3168059"
  },
  {
    "text": "migrate our monolithic database from self-managed multi-master to RDS from MySQL we couldn't go straight to Aurora",
    "start": "3168059",
    "end": "3174960"
  },
  {
    "text": "at the time because the migration tools well Aurora itself is still in beta but the migration tools for that were not",
    "start": "3174960",
    "end": "3180420"
  },
  {
    "text": "quite as mature as they are now I've hinted at the advantages",
    "start": "3180420",
    "end": "3185700"
  },
  {
    "text": "that we got along the way but almost immediately we started to reap the benefits of not having to do any of that hard work I talked about on the last",
    "start": "3185700",
    "end": "3191760"
  },
  {
    "text": "slide all those pain points pretty much gone automated failover wow no more time",
    "start": "3191760",
    "end": "3197520"
  },
  {
    "text": "consuming manual and error-prone intervention our RPO and RTO numbers improved and we've got a uniform",
    "start": "3197520",
    "end": "3202920"
  },
  {
    "text": "interface and ways to interact with our databases backups were not Amazon's problem and a rep lag problem whilst",
    "start": "3202920",
    "end": "3209700"
  },
  {
    "text": "reduced wasn't yet eliminated with the move to RDS that that happy day was still to come",
    "start": "3209700",
    "end": "3216180"
  },
  {
    "text": "and my colleague Steve was heavily involved in some of these migrations he's going to share very shortly with you some of his experiences",
    "start": "3216180",
    "end": "3222960"
  },
  {
    "start": "3222000",
    "end": "3222000"
  },
  {
    "text": "the second step in our journey with AWS managed database Services was the move to Aurora we recognized that Aurora",
    "start": "3222960",
    "end": "3228900"
  },
  {
    "text": "could potentially bring a lot of benefits for our platform and so when the beta was released we jumped a board straight away and started",
    "start": "3228900",
    "end": "3234780"
  },
  {
    "text": "smoke testing we found a handful of minor teething issues with Aurora initially the data",
    "start": "3234780",
    "end": "3241559"
  },
  {
    "text": "import was a little bit on the slow side and we found an odd Edge case where there was a network MTU mismatch between",
    "start": "3241559",
    "end": "3247800"
  },
  {
    "text": "Aurora and ec2 instances but these issues were all pretty minor in nature and they were all fixed by Amazon very",
    "start": "3247800",
    "end": "3253500"
  },
  {
    "text": "very quickly and we were able to get on with things so for our first Aurora use case we picked an internal service which",
    "start": "3253500",
    "end": "3260160"
  },
  {
    "text": "is known to us as the action log basically basically it is an append-only log",
    "start": "3260160",
    "end": "3265380"
  },
  {
    "text": "this is uh rarely read from excuse me really read from but it's written too",
    "start": "3265380",
    "end": "3271079"
  },
  {
    "text": "heavily by a lot of platform components and for us this was a simple and concise performance test case for Aurora",
    "start": "3271079",
    "end": "3278720"
  },
  {
    "text": "data consistency is the key for the action log because this service is used by our customer service team to address",
    "start": "3281400",
    "end": "3286680"
  },
  {
    "text": "any user uh complaints that we might have for example why did my lineup edits not go through or why did my entry not",
    "start": "3286680",
    "end": "3291780"
  },
  {
    "text": "go into this contest but this initial migration was successful and it gave us the the confidence to make Aurora the",
    "start": "3291780",
    "end": "3297900"
  },
  {
    "text": "backing store of choice for not only our monolithic database but also for our Java back-end service components",
    "start": "3297900",
    "end": "3305420"
  },
  {
    "text": "boom you can do it there we go so in terms of the benefit we got from Aurora the",
    "start": "3305760",
    "end": "3311700"
  },
  {
    "text": "biggest one had to be read after write consistency reads from replicas uh were",
    "start": "3311700",
    "end": "3317220"
  },
  {
    "text": "immediately see the data that was committed on the master and replication lag therefore ceased to become a problem",
    "start": "3317220",
    "end": "3322980"
  },
  {
    "text": "for us and this was absolutely huge another notch in our RPO and in the switch to Aurora we",
    "start": "3322980",
    "end": "3328920"
  },
  {
    "text": "definitely got a decent performance boost for many of our relational backing stores and even for our monolithic database with that less than optimal",
    "start": "3328920",
    "end": "3334920"
  },
  {
    "text": "schema layout all in all I would say that our Aurora experience has been extremely positive",
    "start": "3334920",
    "end": "3340920"
  },
  {
    "text": "this presentation is focused largely on our relational databases but I wanted to share one slide that covered our experience with redis",
    "start": "3340920",
    "end": "3347280"
  },
  {
    "text": "you've heard earlier about a live scoring service being backed by redis but we also use redis for a number of our cash-based service components",
    "start": "3347280",
    "end": "3353579"
  },
  {
    "text": "weather cache players cash user auth tokens Global session and so on up until 2015 these were all",
    "start": "3353579",
    "end": "3360240"
  },
  {
    "text": "self-managed on ec2 in pretty much the same way that we started out with our relational banking stores all the same pain points we had in terms",
    "start": "3360240",
    "end": "3367260"
  },
  {
    "text": "of management we had the same pain points with these as well we actually had one red is back",
    "start": "3367260",
    "end": "3373380"
  },
  {
    "text": "component that we moved from redis to Aurora that sounds kind of strange but initially when that component was put",
    "start": "3373380",
    "end": "3379619"
  },
  {
    "text": "there the speed benefits we got from redis were greatly offset by the work we had to do in the application layer to",
    "start": "3379619",
    "end": "3385800"
  },
  {
    "text": "keep the data consistent and very much like the uh operational scenario",
    "start": "3385800",
    "end": "3392640"
  },
  {
    "text": "I'll go here in a second the benefits were pretty much the same when we moved from self-hosted on ec2 to elastic cache",
    "start": "3392640",
    "end": "3400319"
  },
  {
    "text": "uh we improved the management of the the Clusters we improved our RPO RTO",
    "start": "3400319",
    "end": "3405900"
  },
  {
    "text": "numbers and we the master failed over time it was automated it was a heck of a lot quicker and my colleague Steve before we had the",
    "start": "3405900",
    "end": "3412559"
  },
  {
    "text": "term undifferentiated heavy lifting he's done a lot of that himself so I feel like your biceps Steve got to be as big",
    "start": "3412559",
    "end": "3418319"
  },
  {
    "text": "as Arnold Schwarzenegger here so I'm going to hand over to Steve he'll give you a tiny bit of experience of what he",
    "start": "3418319",
    "end": "3423540"
  },
  {
    "text": "had to endure thanks buddy",
    "start": "3423540",
    "end": "3430319"
  },
  {
    "text": "good thanks Alan so I realized there's a pub cruel and a couple of After parties to",
    "start": "3430319",
    "end": "3436559"
  },
  {
    "text": "get to so I'll I've got a fairly short story to go through let's just clicker works so I'm",
    "start": "3436559",
    "end": "3442680"
  },
  {
    "start": "3441000",
    "end": "3441000"
  },
  {
    "text": "going to talk about migrations and we've run a lot of these over the last couple of years particularly in these 2011 2012",
    "start": "3442680",
    "end": "3449099"
  },
  {
    "text": "2013 2014 from ec2 to RDS and to Aurora",
    "start": "3449099",
    "end": "3455400"
  },
  {
    "text": "um and so I'll talk through some of the some of the quite quickly the short the the processes we've taken to go through that",
    "start": "3455400",
    "end": "3463800"
  },
  {
    "text": "um so our customers are Upward at all times of the day and night so a lot of our",
    "start": "3463800",
    "end": "3469200"
  },
  {
    "text": "steps here had to focus very heavily on uptime and we also process a lot of transactions a lot a lot of user actions",
    "start": "3469200",
    "end": "3476160"
  },
  {
    "text": "entries edits cash deposits and withdrawals with every committed transaction being sacred so we get to we",
    "start": "3476160",
    "end": "3482819"
  },
  {
    "text": "have to go to Great Lengths to make sure we don't lose a single transaction",
    "start": "3482819",
    "end": "3487400"
  },
  {
    "text": "uh where are we in RDS you don't get access to the underlying file system so you can create",
    "start": "3488520",
    "end": "3495180"
  },
  {
    "text": "snapshots within AWS and use those to spin up copies and rdf itself but you don't get to ship the actual files on",
    "start": "3495180",
    "end": "3501240"
  },
  {
    "text": "disk around so for migrating to and from my SQL use tools like my SQL dump and the Kona",
    "start": "3501240",
    "end": "3507780"
  },
  {
    "text": "toolkit and we we've become very familiar with those over the years",
    "start": "3507780",
    "end": "3513078"
  },
  {
    "text": "as Alan mentioned earlier our first production system to make its way to Aurora was the action log this database",
    "start": "3516900",
    "end": "3522359"
  },
  {
    "text": "is over a few terabytes in size with a couple of billion rows so taking the dump from The Source database took",
    "start": "3522359",
    "end": "3527760"
  },
  {
    "text": "around eight hours and when we had that file loading it into Aurora took another few days",
    "start": "3527760",
    "end": "3534020"
  },
  {
    "text": "I've called out the master data flag here in the MySQL",
    "start": "3535920",
    "end": "3541920"
  },
  {
    "text": "dump command um since in the time between dumping the data out and dumping the data into the",
    "start": "3541920",
    "end": "3548640"
  },
  {
    "text": "target database I'll have to run through millions of transactions and in any case need to start replication from the",
    "start": "3548640",
    "end": "3555059"
  },
  {
    "text": "correct spot for consistency",
    "start": "3555059",
    "end": "3558260"
  },
  {
    "text": "uh at that point we need to set up replication in RDS you don't get root",
    "start": "3560819",
    "end": "3566160"
  },
  {
    "text": "access as I said instead your admin user can run a bunch of AWS managed stored procedures that let you do things like",
    "start": "3566160",
    "end": "3571980"
  },
  {
    "text": "set the replication master and start and stop replication so at this point we use these log",
    "start": "3571980",
    "end": "3578940"
  },
  {
    "text": "coordinates that we collected earlier to make sure that the target database is collected is carrying on from the",
    "start": "3578940",
    "end": "3583980"
  },
  {
    "text": "correct log position and very critically that we're not losing any data this sort of things like catching up the",
    "start": "3583980",
    "end": "3590460"
  },
  {
    "text": "replication can take a few days again so we've sort of taken a few days to copy all the data in and then we've got actually waiting another couple of days",
    "start": "3590460",
    "end": "3596880"
  },
  {
    "text": "with all those millions of transactions in the meantime to catch up",
    "start": "3596880",
    "end": "3602298"
  },
  {
    "text": "um in every change we make to the platform rollback is very important",
    "start": "3603420",
    "end": "3608700"
  },
  {
    "text": "excuse me I've put a consistency so yeah I've put a consistency check at this stage in the",
    "start": "3608700",
    "end": "3615420"
  },
  {
    "text": "process but in reality we smoke test and review each other's code throughout every process we do we we run",
    "start": "3615420",
    "end": "3621299"
  },
  {
    "text": "code review and we um as losing data we're losing up time",
    "start": "3621299",
    "end": "3626700"
  },
  {
    "text": "are painful at the best of times and even worse if we've inflicted it upon ourselves depending on the schema a consistency",
    "start": "3626700",
    "end": "3632940"
  },
  {
    "text": "check once the data dump and replication are set up would most likely cover checking table sizes match and checking",
    "start": "3632940",
    "end": "3638700"
  },
  {
    "text": "the schema matches depending on the use case we may want to build out a little more",
    "start": "3638700",
    "end": "3644700"
  },
  {
    "text": "architecture on the right hand side we may want to add more replicas or even change the instance type size and at",
    "start": "3644700",
    "end": "3650760"
  },
  {
    "text": "this point we can do this so we've in fact we've got this target that we can change it will and",
    "start": "3650760",
    "end": "3657420"
  },
  {
    "text": "we've not impacted production traffic because we have this multi-master setup that's that allows us to change the right hand",
    "start": "3657420",
    "end": "3663960"
  },
  {
    "text": "side of this diagram without impact on the left",
    "start": "3663960",
    "end": "3668180"
  },
  {
    "text": "and yeah I told you the story would be quick so in fact we've got this sort of we've created a very safe architecture",
    "start": "3670440",
    "end": "3675720"
  },
  {
    "text": "we've got multi-master and at this point we can choose to demote the old master",
    "start": "3675720",
    "end": "3681420"
  },
  {
    "text": "in a typical multi-master fashion we can demote the old the left-hand side and promote the new Master",
    "start": "3681420",
    "end": "3688520"
  },
  {
    "text": "in our particular case we do that with changing DNS entries or you might be able to do this through changing config",
    "start": "3688559",
    "end": "3694680"
  },
  {
    "text": "or updating your um service Discovery mechanisms or load balances",
    "start": "3694680",
    "end": "3701599"
  },
  {
    "text": "now after saying all of that along con DMS Darren touched on this earlier",
    "start": "3702119",
    "end": "3709619"
  },
  {
    "text": "um in typical Amazon fashion they like to produce tools pretty much straight after we've solved all the heavy lifting",
    "start": "3709619",
    "end": "3715980"
  },
  {
    "text": "ourselves um it you know it sort of looks simple on a",
    "start": "3715980",
    "end": "3721559"
  },
  {
    "text": "slide but we've done this we've done this process many times and you know",
    "start": "3721559",
    "end": "3727440"
  },
  {
    "text": "DMS came out six months ago and at that point we've migrated literally everything to Aurora so it was there's this service out there that I suggest",
    "start": "3727440",
    "end": "3733500"
  },
  {
    "text": "you look into I don't know too much about it but Darren probably does and I know there's a talk on it tomorrow",
    "start": "3733500",
    "end": "3739020"
  },
  {
    "text": "and I told you my slide would be quick so thanks and I'll hand back over to Alan",
    "start": "3739020",
    "end": "3746298"
  },
  {
    "text": "that's actually a good job yeah thank you Steve uh just before I hand back to Darren I'd like to use this last slide",
    "start": "3749160",
    "end": "3755579"
  },
  {
    "text": "which I think will be here oh there's that five dollars I mustn't",
    "start": "3755579",
    "end": "3761220"
  },
  {
    "text": "forget that hand in the bar later so um [Music]",
    "start": "3761220",
    "end": "3768059"
  },
  {
    "text": "before I had invites down I'd like to use this last slide just to summarize the benefits that the financial platform currently enjoys",
    "start": "3768059",
    "end": "3775079"
  },
  {
    "text": "one more time automated failover automated failover is no longer complex Amazon has really taken away a lot of",
    "start": "3775079",
    "end": "3781559"
  },
  {
    "text": "pain for us in this particular area I think as Darren touched on earlier for Aurora is a very fast transition time",
    "start": "3781559",
    "end": "3787680"
  },
  {
    "text": "from promoting a read replica to a Master usually less than 60 seconds on average",
    "start": "3787680",
    "end": "3792839"
  },
  {
    "text": "one more time manage backups manage backups again this is another big win when you do through the lens of disaster",
    "start": "3792839",
    "end": "3798900"
  },
  {
    "text": "recoverability and to eliminate that most non-deterministic of data headaches",
    "start": "3798900",
    "end": "3805440"
  },
  {
    "text": "replication lag that has been absolutely huge for our business and Aurora has really helped us out there",
    "start": "3805440",
    "end": "3811440"
  },
  {
    "text": "all of our relational data stores now have the same interfaces and ways of working with them so Simplicity there is",
    "start": "3811440",
    "end": "3817140"
  },
  {
    "text": "good and when you consider the uh the alternative of self-managed solutions",
    "start": "3817140",
    "end": "3822180"
  },
  {
    "text": "there is a clear cost and operational benefit in the managed Services approach all in all the financial data layer is",
    "start": "3822180",
    "end": "3828599"
  },
  {
    "text": "in a much better place than it was at the outset and Amazon really solved a lot of hard problems for us here that we",
    "start": "3828599",
    "end": "3834240"
  },
  {
    "text": "got pretty much sick and tired of trying to manage ourselves and in all this let's not forget",
    "start": "3834240",
    "end": "3839520"
  },
  {
    "text": "redshift I've majored today on the operational aspects of fanjul but we also ingest and",
    "start": "3839520",
    "end": "3844740"
  },
  {
    "text": "process a huge amount of analytic data and the Natural Choice For Us in that space has been redshift and I'd like to",
    "start": "3844740",
    "end": "3850559"
  },
  {
    "text": "point out that the same pain points we had in the analytics space were greatly reduced and resolved just as equally",
    "start": "3850559",
    "end": "3855960"
  },
  {
    "text": "when we made the move to redshift and finally Rob and Steve and I are here",
    "start": "3855960",
    "end": "3861599"
  },
  {
    "text": "representing fan Jewel's engineering team back home in Scotland and none of this work I've talked about",
    "start": "3861599",
    "end": "3866940"
  },
  {
    "text": "today would have been possible without having worked with this great team of individuals they really are an awesome",
    "start": "3866940",
    "end": "3872880"
  },
  {
    "text": "Bunch so thank you for bearing with me I know it's the end of the day I'm grateful to you for your time I hope you found some of this material useful and",
    "start": "3872880",
    "end": "3879599"
  },
  {
    "text": "I'll hand back to you Dan [Applause]",
    "start": "3879599",
    "end": "3887339"
  },
  {
    "text": "so you've now heard about the range of what we're doing now",
    "start": "3887339",
    "end": "3894540"
  },
  {
    "text": "as you heard Andy Jesse say this morning we're just getting started there's a lot coming in the future but right now",
    "start": "3894540",
    "end": "3901319"
  },
  {
    "text": "we have what's there to let our customers understand how to run a",
    "start": "3901319",
    "end": "3907380"
  },
  {
    "text": "managed database and for us to do the heavy lifting and the confusing stuff for you so let's hear it again for our",
    "start": "3907380",
    "end": "3912839"
  },
  {
    "text": "friends at FanDuel and get out there and manage some databases [Applause]",
    "start": "3912839",
    "end": "3919869"
  }
]