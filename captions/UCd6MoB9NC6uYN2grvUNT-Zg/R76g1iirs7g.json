[
  {
    "start": "0",
    "end": "215000"
  },
  {
    "text": "okay I think we should get started we're a couple of minutes early but it sounds",
    "start": "120",
    "end": "5250"
  },
  {
    "text": "very very quiet downstairs so I think everybody's seated in a room and I'll say sorry again for the seating go try",
    "start": "5250",
    "end": "10830"
  },
  {
    "text": "and get some more seating in here at the break so hopefully if you come back after the break we'll have chairs for you that are standing I'm very sorry",
    "start": "10830",
    "end": "15960"
  },
  {
    "text": "about the lack of accommodation so my name is Ian massing ham I lead a function at AWS on developer",
    "start": "15960",
    "end": "23070"
  },
  {
    "text": "relations we call it developer evangelism it's really focused on developer effectiveness trying to help",
    "start": "23070",
    "end": "28800"
  },
  {
    "text": "developers make best use of use of the AWS platform so that's what I and my",
    "start": "28800",
    "end": "33840"
  },
  {
    "text": "team do and quite a few of the speakers here today from my group within the US and also here in Europe",
    "start": "33840",
    "end": "40530"
  },
  {
    "text": "this is AWS dev day so it's a new event format this is actually the third of",
    "start": "40530",
    "end": "46559"
  },
  {
    "text": "four of these events that we're running here in Germany what we're trying to do really is get away from the cycle of",
    "start": "46559",
    "end": "52940"
  },
  {
    "text": "introductory content that AWS has become a little bit too focused on and try to",
    "start": "52940",
    "end": "58109"
  },
  {
    "text": "do more for customers that are already using the platform to try to help",
    "start": "58109",
    "end": "63629"
  },
  {
    "text": "customers move beyond introductory use cases and get more value out of AWS",
    "start": "63629",
    "end": "68850"
  },
  {
    "text": "that's really the objective of this program we've got four tracks here today obviously you're sitting in the service",
    "start": "68850",
    "end": "74189"
  },
  {
    "text": "track and watching the service track if you're watching this on video and we're going to start with a piece of content",
    "start": "74189",
    "end": "81479"
  },
  {
    "text": "which is kind of introductory nature nature I'd say 200 to 300 level content just going to take a quick tour around",
    "start": "81479",
    "end": "87659"
  },
  {
    "text": "some of the new announcements associated with service application architecture on AWS then we'll have a break at 10:30 and",
    "start": "87659",
    "end": "95759"
  },
  {
    "text": "then after 10:30 we're going to dive into more technical content so we'll take a look at the developer experience",
    "start": "95759",
    "end": "101970"
  },
  {
    "text": "for building service applications on AWS move on from that and talk about",
    "start": "101970",
    "end": "107119"
  },
  {
    "text": "architectural patterns for service so what are common approaches that we we see being used by customers what are",
    "start": "107119",
    "end": "113700"
  },
  {
    "text": "common combinations of services that we see being used to solve particular common use cases so that I'll just",
    "start": "113700",
    "end": "120210"
  },
  {
    "text": "before lunch be just before lunch and then after that we'll take a look at multi region operations with DynamoDB",
    "start": "120210",
    "end": "128369"
  },
  {
    "text": "global tables which is a new service that we announced a reinvent that allows you to extend an on relation",
    "start": "128369",
    "end": "133800"
  },
  {
    "text": "all database across the globe and have that available via multiple different endpoints in multiple different regions",
    "start": "133800",
    "end": "140520"
  },
  {
    "text": "and and we're going to wrap up in here later on with another talk which will be at the intersection of data and service",
    "start": "140520",
    "end": "147330"
  },
  {
    "text": "which is about graph QL that'll be delivered by by one of our customers here in Germany so that's the plan for",
    "start": "147330",
    "end": "153390"
  },
  {
    "text": "the day but all of the sessions from today will be available on the AWS",
    "start": "153390",
    "end": "158820"
  },
  {
    "text": "YouTube channel after the event if you want to jump between tracks maybe explore some of the topics just to be",
    "start": "158820",
    "end": "165090"
  },
  {
    "text": "able to catch up with what we cover in here on video ok there's actually a lot of AWS resources available on that",
    "start": "165090",
    "end": "170850"
  },
  {
    "text": "YouTube channel if you're not familiar with it it's a really good place to go to find technical content there's well",
    "start": "170850",
    "end": "176700"
  },
  {
    "text": "over 400 sessions from AWS reinvent last year on that YouTube channel including",
    "start": "176700",
    "end": "182190"
  },
  {
    "text": "deep dives on everything that I'm going to cover in this first in this first piece of content for you today ok I want",
    "start": "182190",
    "end": "189210"
  },
  {
    "text": "this to be interactive so if you've got any questions you can throw your hand up during the session I'll happily try and",
    "start": "189210",
    "end": "194580"
  },
  {
    "text": "repeat your question back for the video don't forget that and also answer your questions during the session and if",
    "start": "194580",
    "end": "201180"
  },
  {
    "text": "you've got a follow up you can find me on twitter at um with forums or you can email me it's just",
    "start": "201180",
    "end": "206880"
  },
  {
    "text": "Ian M with one M amazon.com okay so you can reach me there as well okay so let's just start off with a",
    "start": "206880",
    "end": "213120"
  },
  {
    "text": "quick discussion of the problem that we were trying to solve when we started",
    "start": "213120",
    "end": "218370"
  },
  {
    "start": "215000",
    "end": "215000"
  },
  {
    "text": "thinking about creating new types of",
    "start": "218370",
    "end": "223650"
  },
  {
    "text": "services for developers that were using AWS okay now we'd always always had",
    "start": "223650",
    "end": "229400"
  },
  {
    "text": "services that move the majority of the",
    "start": "229400",
    "end": "234660"
  },
  {
    "text": "burden for operations scaling deployment and failure management to Amazon Web",
    "start": "234660",
    "end": "240959"
  },
  {
    "text": "Services if you think about services like dynamo DB for example so service has been around a long time",
    "start": "240959",
    "end": "246360"
  },
  {
    "text": "it's a service data management service like a service document-oriented",
    "start": "246360",
    "end": "251790"
  },
  {
    "text": "database or a service key value store depending on how you use it of course there aren't machines there in",
    "start": "251790",
    "end": "258419"
  },
  {
    "text": "fact special types of machines that are used to host all of the tables that customers established within dynamo but",
    "start": "258419",
    "end": "264810"
  },
  {
    "text": "in thinking about service delivery models what you should really be thinking about is do I carry the burden",
    "start": "264810",
    "end": "271600"
  },
  {
    "text": "of deploying operating scaling and dealing with failures for any of the",
    "start": "271600",
    "end": "277630"
  },
  {
    "text": "components the underlying technology components associated with this service or do I just consume the service",
    "start": "277630",
    "end": "285120"
  },
  {
    "text": "directly as a developer or as a user without having to concern myself with what we always talk about as heavy",
    "start": "285120",
    "end": "291940"
  },
  {
    "text": "lifting or undifferentiated heavy lifting associated with those operational activities and what we're",
    "start": "291940",
    "end": "297820"
  },
  {
    "text": "doing with service is trying to tackle these challenges scaling and making",
    "start": "297820",
    "end": "304990"
  },
  {
    "text": "things easy for customers to manage and operate ok so that's really what our goal is with dynamo obviously it's about",
    "start": "304990",
    "end": "311320"
  },
  {
    "text": "data management but with services like AWS lambda and some of the other",
    "start": "311320",
    "end": "317230"
  },
  {
    "text": "services that we're going to talk about later on in the day it's about other things like running custom code without",
    "start": "317230",
    "end": "325210"
  },
  {
    "text": "having to worry about machines operating systems deployment scaling failure management and all of those other",
    "start": "325210",
    "end": "331570"
  },
  {
    "text": "activities or authentication with services like Amazon kognito where you want an ID provider you don't want to",
    "start": "331570",
    "end": "338290"
  },
  {
    "text": "have to worry about deploying scaling operating managing and dealing with failures in the ID provider",
    "start": "338290",
    "end": "343540"
  },
  {
    "text": "infrastructure or you want a Q or a mechanism for managing streaming data or",
    "start": "343540",
    "end": "348580"
  },
  {
    "text": "one of these other low-level components that developers use over and over again we're trying to turn them into services",
    "start": "348580",
    "end": "355150"
  },
  {
    "text": "that you consume rather than things that you have to deploy a management deploy and manage and I've just hinted about",
    "start": "355150",
    "end": "361150"
  },
  {
    "start": "359000",
    "end": "359000"
  },
  {
    "text": "what some of the benefits of doing that are the first thing is it gives you time back that you can focus on other",
    "start": "361150",
    "end": "367780"
  },
  {
    "text": "activities that are specific to your particular use case or the problem area",
    "start": "367780",
    "end": "373240"
  },
  {
    "text": "within which you're working this is one of the biggest benefits of using this kind of approach it's about the things",
    "start": "373240",
    "end": "379990"
  },
  {
    "text": "that you no longer have to do ok and how you can reclaim that time and and reuse",
    "start": "379990",
    "end": "385870"
  },
  {
    "text": "it on another activities that are more valuable for you in scaling scaling",
    "start": "385870",
    "end": "391840"
  },
  {
    "text": "works both ways but you don't have to take action in order to initiate scaling",
    "start": "391840",
    "end": "397300"
  },
  {
    "text": "the systems are responsive to the level of usage they see the service is a responsive to",
    "start": "397300",
    "end": "403000"
  },
  {
    "text": "the level of usage that they see in both directions both scaling up okay and also in in scaling down and doing that in a",
    "start": "403000",
    "end": "409930"
  },
  {
    "text": "responsive way very efficient okay and I'll talk about a case for that in a second that also show you a demo that",
    "start": "409930",
    "end": "417310"
  },
  {
    "text": "uses that case later on over in the AI track high availability both in the",
    "start": "417310",
    "end": "424210"
  },
  {
    "text": "sense that you automatically take advantage of AWS availability management",
    "start": "424210",
    "end": "431039"
  },
  {
    "text": "constructs so I'm talking about things here like availability zones hopefully",
    "start": "431039",
    "end": "436479"
  },
  {
    "text": "means a lot to many of you that are using it with us today and regions as",
    "start": "436479",
    "end": "441520"
  },
  {
    "text": "well in some cases the geographic locations around the world where we provide services services like DynamoDB",
    "start": "441520",
    "end": "448419"
  },
  {
    "text": "AWS lamda sqs SNS the api gateway they're all built on top of these",
    "start": "448419",
    "end": "454360"
  },
  {
    "text": "primitives so they inherit failure tolerant characteristics from the",
    "start": "454360",
    "end": "459430"
  },
  {
    "text": "underlying infrastructure if a machine or an availability zone fails your AWS",
    "start": "459430",
    "end": "465520"
  },
  {
    "text": "lamda execution will not be interrupted the next time you start another",
    "start": "465520",
    "end": "471220"
  },
  {
    "text": "container the next time you fire that function it will automatically get invoked in one of the remaining",
    "start": "471220",
    "end": "477250"
  },
  {
    "text": "availability zones one of the remaining machines that is available to you and it's a developer or as a user you'll see",
    "start": "477250",
    "end": "483370"
  },
  {
    "text": "no impact and have to take no action in order to recover from failure so that's a really important component and then",
    "start": "483370",
    "end": "489639"
  },
  {
    "text": "secondly you have no idle you have elastic scaling in both directions",
    "start": "489639",
    "end": "495490"
  },
  {
    "text": "you have no idle and as a result of having no idle you have no fixed costs",
    "start": "495490",
    "end": "500560"
  },
  {
    "start": "499000",
    "end": "499000"
  },
  {
    "text": "you know you have you know no carried costs that you would have if you were deploying onto ect where you've got a",
    "start": "500560",
    "end": "506139"
  },
  {
    "text": "minimum fixed monthly charge of around three books for the smallest instance",
    "start": "506139",
    "end": "511180"
  },
  {
    "text": "type that we have you just don't have that with with AWS lambda you have no",
    "start": "511180",
    "end": "517029"
  },
  {
    "text": "fixed costs and the cost will be zero if you have no usage and they'll scale up from there as you see usage and scale",
    "start": "517029",
    "end": "523180"
  },
  {
    "text": "back down again when that drops away I was over in Singapore a couple of weeks",
    "start": "523180",
    "end": "529000"
  },
  {
    "text": "ago for an AWS summit event which is obviously our large global developer education for",
    "start": "529000",
    "end": "534820"
  },
  {
    "text": "mostly in Berlin with that event at the beginning of June so I hope some of you",
    "start": "534820",
    "end": "539890"
  },
  {
    "text": "will join us there and I was doing the closing keynote there and I had a demo that I was sharing which involves Amazon",
    "start": "539890",
    "end": "546100"
  },
  {
    "text": "Lex this is our conversational interface tool enables you to build and deploy chat BOTS across a variety of different",
    "start": "546100",
    "end": "553420"
  },
  {
    "text": "channels I've done this demo a few times before in the UK and also in Sweden okay",
    "start": "553420",
    "end": "559750"
  },
  {
    "text": "where I've been doing actually event simmers race and I've been seeing you know an audience of maybe a hundred or",
    "start": "559750",
    "end": "565360"
  },
  {
    "text": "200 people in front of me when I got into this keynote in Singapore I knew there would be between",
    "start": "565360",
    "end": "570640"
  },
  {
    "text": "two thousand and four and a half thousand people in the room so the audience for the demo was roughly ten",
    "start": "570640",
    "end": "577090"
  },
  {
    "text": "times bigger than anything that I'd done before what action did I need to take in order to scale all the application to",
    "start": "577090",
    "end": "583990"
  },
  {
    "text": "deploy in front of that much larger audience I had to raise a support ticket and I had to get my concurrency limit",
    "start": "583990",
    "end": "591340"
  },
  {
    "text": "for my lambda functions raised from one thousand to five thousand concurrent functions took about a day and that was",
    "start": "591340",
    "end": "598090"
  },
  {
    "text": "it other than that I didn't have to take any action I had nothing to deploy nothing to scale I actually use Twilio",
    "start": "598090",
    "end": "604780"
  },
  {
    "text": "for a component of the service as well for the elastic inbound and outbound SMS and I had absolutely no no changes to",
    "start": "604780",
    "end": "611050"
  },
  {
    "text": "make to my code and no deployment actions to undertake either okay so that really just illustrates this idea of",
    "start": "611050",
    "end": "617470"
  },
  {
    "text": "scaling built-in never pay for idle and you have no infrastructure to provision",
    "start": "617470",
    "end": "622720"
  },
  {
    "text": "manage or to monitor especially a very successful demo and several hundred of",
    "start": "622720",
    "end": "630730"
  },
  {
    "text": "the individuals in the audience interacted with the demo during the course of the session okay and",
    "start": "630730",
    "end": "635830"
  },
  {
    "text": "consistent performance and had no actions to take in order to in order to enable apps it just proves that this",
    "start": "635830",
    "end": "641860"
  },
  {
    "text": "model does work does work really well okay so what are some of the new things that we've done to improve the developer",
    "start": "641860",
    "end": "649060"
  },
  {
    "text": "experience for developers that are working with service over the course the last few months these are the next",
    "start": "649060",
    "end": "654700"
  },
  {
    "text": "things that I want to focus on during the course of this session so who here has built something with AWS lambda or",
    "start": "654700",
    "end": "662830"
  },
  {
    "text": "with serverless approaches already okay so I'd say just let",
    "start": "662830",
    "end": "668380"
  },
  {
    "text": "than half of you so for those of you that didn't put your hand up this might be interesting okay this is about",
    "start": "668380",
    "end": "673570"
  },
  {
    "text": "getting started and about finding examples of service of service",
    "start": "673570",
    "end": "679480"
  },
  {
    "text": "applications a lot of the stuff that I learned I learned by looking at other people's working code samples or looking",
    "start": "679480",
    "end": "686320"
  },
  {
    "text": "at open source projects that other developers have worked on to implement solutions to similar problems to the one",
    "start": "686320",
    "end": "692380"
  },
  {
    "text": "that I'm tackling it's just I find that a really effective way to learn about new approaches and I think a lot of developers do the same thing who learns",
    "start": "692380",
    "end": "699400"
  },
  {
    "text": "by looking at other people's code finds that a really effective way yeah everybody okay okay who who has stuck",
    "start": "699400",
    "end": "707140"
  },
  {
    "text": "overflow up and while they work come on you guys should all be putting your hands up if you put your hands up to the",
    "start": "707140",
    "end": "712330"
  },
  {
    "text": "first one surely that's where you look at other people's code right okay so finding a working example is important",
    "start": "712330",
    "end": "717910"
  },
  {
    "text": "okay and of course a lot of applications have already built been built using this approach half the people who put their",
    "start": "717910",
    "end": "724000"
  },
  {
    "text": "hand up and said they'd already built something using AWS on-demand service approaches half of you didn't so if we",
    "start": "724000",
    "end": "729970"
  },
  {
    "text": "could get a mechanism for allowing new developers or developers that are new to this model to have easier access to",
    "start": "729970",
    "end": "737350"
  },
  {
    "text": "applications that other people have built wouldn't that be valuable wouldn't be a helpful way to help people learn and",
    "start": "737350",
    "end": "742930"
  },
  {
    "text": "more than learning wouldn't it be cool if we just allowed developers that were",
    "start": "742930",
    "end": "748300"
  },
  {
    "text": "interested in deploying applications using serverless approaches to discover those apps and deploy them directly into",
    "start": "748300",
    "end": "754690"
  },
  {
    "text": "their AWS accounts so that they didn't just learn from other people's code they could actually pick up and run other",
    "start": "754690",
    "end": "760480"
  },
  {
    "text": "people's applications or the people's services that have been developed this way and deploy them straight into",
    "start": "760480",
    "end": "766240"
  },
  {
    "text": "straight into their own AWS accounts so that's what we're trying to tackle with this first new service this just came",
    "start": "766240",
    "end": "773080"
  },
  {
    "text": "out of beta into general availability a few weeks ago and it's called the service application repository you can",
    "start": "773080",
    "end": "779740"
  },
  {
    "text": "see it up here this is the create function console by the way within the AWS lamda",
    "start": "779740",
    "end": "785800"
  },
  {
    "text": "service console so if you logged into our console you click on AWS lamda click on create function which is a little",
    "start": "785800",
    "end": "791290"
  },
  {
    "text": "blue button that you'll see on the top right of the console you'll see this there are really three ways that you can get started with deployment now there",
    "start": "791290",
    "end": "797560"
  },
  {
    "text": "were two the first one is author from scratch so here our bid drop",
    "start": "797560",
    "end": "802690"
  },
  {
    "text": "into a in consult code editor that allows me to author a function directly",
    "start": "802690",
    "end": "808930"
  },
  {
    "text": "from scratch with a very simple hello world example written in a few different",
    "start": "808930",
    "end": "814210"
  },
  {
    "text": "languages that I can use as a basis it's helpful because it shows me how to deal with handling the event data that my",
    "start": "814210",
    "end": "820450"
  },
  {
    "text": "function will receive when it is triggered so how to access those important not really environment",
    "start": "820450",
    "end": "827350"
  },
  {
    "text": "variables without data from the environment okay and the second way to deploy is by using these blueprints okay",
    "start": "827350",
    "end": "833650"
  },
  {
    "text": "so these blueprints are pre-configured templates which you can use as a",
    "start": "833650",
    "end": "839470"
  },
  {
    "text": "starting point for your lambda function these are all managed and curated and maintained directly by AWS the",
    "start": "839470",
    "end": "846280"
  },
  {
    "text": "blueprints okay and again if you come down to the Amazon next session that I'm going to be doing directly before lunch",
    "start": "846280",
    "end": "852780"
  },
  {
    "text": "later on downstairs in the AI track you'll see this in action because I'm going to use blueprints as part of the",
    "start": "852780",
    "end": "859300"
  },
  {
    "text": "demo down there so you'll be able to see that but we wanted to broaden out the ecosystem and make more application",
    "start": "859300",
    "end": "866800"
  },
  {
    "text": "types and more examples available to customers we wanted to allow customers",
    "start": "866800",
    "end": "872560"
  },
  {
    "text": "to share their own services and share their own code and applications directly within the user experience so to enable",
    "start": "872560",
    "end": "879250"
  },
  {
    "text": "that we created something called the server application repository okay and that gives you access to contributed",
    "start": "879250",
    "end": "887020"
  },
  {
    "text": "examples of service apps directly within the AWS lambda console it's like a",
    "start": "887020",
    "end": "892270"
  },
  {
    "text": "catalog based model for searching and discovering different application types you can't literally search for them by",
    "start": "892270",
    "end": "898930"
  },
  {
    "text": "putting search variables into this field here you can do the same on blueprints actually so you can search here and",
    "start": "898930",
    "end": "904810"
  },
  {
    "text": "you'll get back matches underneath so a stateless web app that stands up Amazon API gateway API is to handle requests",
    "start": "904810",
    "end": "911800"
  },
  {
    "text": "processed by the lambda functions of the app developed by Salman probably butcher",
    "start": "911800",
    "end": "917350"
  },
  {
    "text": "this name party aha maybe and it's been deployed 15 times so you can see the author and the popularity of the",
    "start": "917350",
    "end": "924310"
  },
  {
    "text": "applications that you're choosing to deploy and then you're dropped into a",
    "start": "924310",
    "end": "929320"
  },
  {
    "text": "configuration dialog for the app ok and you can configure application specific",
    "start": "929320",
    "end": "934930"
  },
  {
    "text": "settings and those will very based upon the template that is",
    "start": "934930",
    "end": "940270"
  },
  {
    "text": "being that has been defined and uploaded by the application creator okay what we're using here is something called the",
    "start": "940270",
    "end": "947140"
  },
  {
    "text": "service application model or Sam okay which is a cloud formation extension DSL",
    "start": "947140",
    "end": "955030"
  },
  {
    "text": "sits atop AWS CloudFormation and it offers up simplified abstractions for",
    "start": "955030",
    "end": "961990"
  },
  {
    "text": "common service components so if you want to deploy api gateway endpoints for",
    "start": "961990",
    "end": "967630"
  },
  {
    "text": "example or you want to create very simple DynamoDB tables or you want to establish new lambda functions there are",
    "start": "967630",
    "end": "974470"
  },
  {
    "text": "simplified definition models for those resource types within the Sam templating",
    "start": "974470",
    "end": "979750"
  },
  {
    "text": "language so it simplifies the process of creating the most common resources that are used by service application",
    "start": "979750",
    "end": "986380"
  },
  {
    "text": "developers that's really what Sam does and you can see that we support expansion tokens here these expansion",
    "start": "986380",
    "end": "992380"
  },
  {
    "text": "tokens define the configuration questions that get asked when a user chooses to deploy an application that is",
    "start": "992380",
    "end": "999070"
  },
  {
    "text": "defined in this way okay so they'll be populated into the template and that allows the deploying",
    "start": "999070",
    "end": "1005220"
  },
  {
    "text": "customer to customize the deployment for their particular use case just last week",
    "start": "1005220",
    "end": "1011540"
  },
  {
    "text": "last week was the day week before last even we announced that the Sam",
    "start": "1011540",
    "end": "1018410"
  },
  {
    "text": "processing model so the thing that converts from the Sam definition language to the CloudFormation",
    "start": "1018410",
    "end": "1025050"
  },
  {
    "text": "underlies that has been open sourced so the transformation engine is now open source it's on the AWS github you can",
    "start": "1025050",
    "end": "1032819"
  },
  {
    "text": "obviously review the code that is used to affect execute those transformations",
    "start": "1032820",
    "end": "1038430"
  },
  {
    "text": "and we also welcome a pull request to extend and handsome fee or specific use",
    "start": "1038430",
    "end": "1045630"
  },
  {
    "text": "case requirements as well so that's something that customers have been asking for since we announced this last",
    "start": "1045630",
    "end": "1050880"
  },
  {
    "text": "year and I think quite a popular launch ok the definitions themselves have been",
    "start": "1050880",
    "end": "1057150"
  },
  {
    "text": "open source for a long time but now the transformation engine that implements those definitions is also available for",
    "start": "1057150",
    "end": "1063240"
  },
  {
    "text": "you to inspect to modify it and to contribute to as well ok so what we're",
    "start": "1063240",
    "end": "1069120"
  },
  {
    "start": "1068000",
    "end": "1068000"
  },
  {
    "text": "trying to do here easier for developers to search and browse ready-made apps and samples",
    "start": "1069120",
    "end": "1074130"
  },
  {
    "text": "giving you a library of open source apps that you can customize to get started with enabling it to share both publicly",
    "start": "1074130",
    "end": "1080370"
  },
  {
    "text": "and privately so you can use this obviously into organization to share application templates publicly with the",
    "start": "1080370",
    "end": "1087269"
  },
  {
    "text": "broad ecosystem of developers that are using the service but also a little bit like Amazon machine images if you've",
    "start": "1087269",
    "end": "1094049"
  },
  {
    "text": "used ec2 as a thing for me now now we can say if you've used ec2 because we have one other customers using AWS that",
    "start": "1094049",
    "end": "1100559"
  },
  {
    "text": "don't use ec2 a few years ago that would be a very unusual thing to say if you use easy - if you use ec2 you'll know",
    "start": "1100559",
    "end": "1106710"
  },
  {
    "text": "about image sharing where I can create an Amazon machine image like a gold master for a new virtual machine and I",
    "start": "1106710",
    "end": "1112080"
  },
  {
    "text": "can specify a list of account IDs and privately share that machine image just with that list of accounts it's good for",
    "start": "1112080",
    "end": "1117929"
  },
  {
    "text": "intra organization shares of sharing software builds with specific entities",
    "start": "1117929",
    "end": "1123840"
  },
  {
    "text": "you know maybe I've got a customer and I want to give them a b2 of my software well I could share an army to achieve",
    "start": "1123840",
    "end": "1129480"
  },
  {
    "text": "that can do the same with with service application repository you can share privately with nominated accounts so",
    "start": "1129480",
    "end": "1136139"
  },
  {
    "text": "this can be a mechanism for creating and sharing code intra organization as well",
    "start": "1136139",
    "end": "1141269"
  },
  {
    "text": "as externally between known or anonymous parties okay so it's quite a useful",
    "start": "1141269",
    "end": "1146460"
  },
  {
    "text": "mechanism can't directly monetize within the service application repository today",
    "start": "1146460",
    "end": "1152279"
  },
  {
    "text": "but you can build applications that have dependencies on api's okay in those",
    "start": "1152279",
    "end": "1158279"
  },
  {
    "text": "api's can of course be monetized and you can sell access through api's now",
    "start": "1158279",
    "end": "1163710"
  },
  {
    "text": "through the AWS marketplace so if you do have an API based service could actually",
    "start": "1163710",
    "end": "1169769"
  },
  {
    "text": "use the service application repository as a mechanism for reducing friction in",
    "start": "1169769",
    "end": "1175440"
  },
  {
    "text": "onboarding say I am a payment provider like a stripe for example and I want to",
    "start": "1175440",
    "end": "1181529"
  },
  {
    "text": "make it really easy for my customers to integrate my payment engine into their service apps one approach that I could",
    "start": "1181529",
    "end": "1188970"
  },
  {
    "text": "take would be to build a stripe service application using sar little application",
    "start": "1188970",
    "end": "1194970"
  },
  {
    "text": "repository and allow other AWS customers to provision that access application",
    "start": "1194970",
    "end": "1200340"
  },
  {
    "text": "directly with into the into their AWS accounts if you do have serve says that are expressed using api's this",
    "start": "1200340",
    "end": "1207120"
  },
  {
    "text": "can be a friction reduction mechanism for onboarding new customers where you don't just provide an SDK but you",
    "start": "1207120",
    "end": "1213600"
  },
  {
    "text": "provide a complete app a complete service for access to your service which customers can deploy natively inside",
    "start": "1213600",
    "end": "1220710"
  },
  {
    "text": "their own AWS account okay so there's a lot of opportunities there I think for developers to use this in an interesting",
    "start": "1220710",
    "end": "1227250"
  },
  {
    "text": "way some real examples of things that have been built just to give you a flavor looking at this one thing that I",
    "start": "1227250",
    "end": "1234840"
  },
  {
    "text": "discovered is image conversion services like format conversion services seem to",
    "start": "1234840",
    "end": "1240600"
  },
  {
    "text": "be a very popular use case like PNG - JPEG or TIF to jpg and resizing services",
    "start": "1240600",
    "end": "1246539"
  },
  {
    "text": "as well so there's lots of lots of stuff there that developers obviously using as components of their apps and they've",
    "start": "1246539",
    "end": "1252480"
  },
  {
    "text": "packaged them up and made them available via this model so there's lots of stuff I'd really advise you to jump on the",
    "start": "1252480",
    "end": "1257610"
  },
  {
    "text": "console and just take a look at what's there and if you've got great ideas either share them natively or try to",
    "start": "1257610",
    "end": "1263070"
  },
  {
    "text": "find other developers to collaborate with you maybe build an open-source project and then push the output of your",
    "start": "1263070",
    "end": "1268530"
  },
  {
    "text": "open-source project into into the service application repository as a mechanism for making it available it's a",
    "start": "1268530",
    "end": "1274020"
  },
  {
    "text": "interesting tool to use in that way as well okay so that's service application repository some other things that we've",
    "start": "1274020",
    "end": "1280380"
  },
  {
    "start": "1279000",
    "end": "1279000"
  },
  {
    "text": "done we've dramatically improved the editor that is present inside the AWS",
    "start": "1280380",
    "end": "1287130"
  },
  {
    "text": "lambda console and we'll see you'll see a lot more of this in action if you come to the next session after the break",
    "start": "1287130",
    "end": "1292409"
  },
  {
    "text": "which is the server list developer experience session will actually do a demo of this this is something called",
    "start": "1292409",
    "end": "1298620"
  },
  {
    "text": "the cloud9 IDE which is a fully featured IDE that we announced that AWS reinvent",
    "start": "1298620",
    "end": "1304049"
  },
  {
    "text": "last year a version of that is available natively within the lambda console as an",
    "start": "1304049",
    "end": "1309870"
  },
  {
    "text": "embedded editor so it has syntax highlighting capability to edit files",
    "start": "1309870",
    "end": "1316620"
  },
  {
    "text": "within the deployment package beyond the entry point function the original handler function and a lot of other",
    "start": "1316620",
    "end": "1322140"
  },
  {
    "text": "enhanced features as well so that really improves the developer experience for people that want to edit natively within",
    "start": "1322140",
    "end": "1327690"
  },
  {
    "text": "the console there's also integration between AWS lambda and under the service",
    "start": "1327690",
    "end": "1334350"
  },
  {
    "text": "we have called code star okay which is our pipelines service our continuous integration continuous deployment",
    "start": "1334350",
    "end": "1340330"
  },
  {
    "text": "service yeah yeah so the question is",
    "start": "1340330",
    "end": "1371620"
  },
  {
    "text": "about continuous updates of applications that are deployed through the application repository and also security",
    "start": "1371620",
    "end": "1377350"
  },
  {
    "text": "I think is what you're driving at verification through curation so the answer on the first one is no once you",
    "start": "1377350",
    "end": "1384310"
  },
  {
    "text": "deploy then you're taking a copy of that application creating an instance of it essentially within your account and it's",
    "start": "1384310",
    "end": "1391230"
  },
  {
    "text": "something that you then edit and control from that point forward so you can't sort of change the master branch and",
    "start": "1391230",
    "end": "1397690"
  },
  {
    "text": "have that reflected through into your production environment so that's not possible okay on the curation yes there is a",
    "start": "1397690",
    "end": "1405070"
  },
  {
    "text": "curation but we're novice lis not warranting the code so we are providing",
    "start": "1405070",
    "end": "1411060"
  },
  {
    "text": "validation of the code okay looking it over but we're not guaranteeing that",
    "start": "1411060",
    "end": "1416110"
  },
  {
    "text": "it's free from bugs orphan vulnerabilities so you need to verify it as well no no no and of course you can",
    "start": "1416110",
    "end": "1427090"
  },
  {
    "text": "see exactly what they are doing by looking at the Sam template you can see all the resources that are created the",
    "start": "1427090",
    "end": "1432280"
  },
  {
    "text": "lambda functions themselves that are being established to being pushed into your account and you can inspect them",
    "start": "1432280",
    "end": "1438100"
  },
  {
    "text": "you know using either the in-line editor or downloading those packages to",
    "start": "1438100",
    "end": "1443500"
  },
  {
    "text": "evaluate them with an IDE",
    "start": "1443500",
    "end": "1446820"
  },
  {
    "text": "no they can do that as well they can do that as well so the Sam template can include both the simplified",
    "start": "1450300",
    "end": "1457090"
  },
  {
    "text": "resources and it can also include full-blown cloud formation so they can do anything that a cloud formation",
    "start": "1457090",
    "end": "1462580"
  },
  {
    "text": "template can do which is a lot of things and this is one of the reasons that we do the light touch verification but you",
    "start": "1462580",
    "end": "1468280"
  },
  {
    "text": "said you should also do the verification what I would recommend is that you do the deployments in a sandbox account",
    "start": "1468280",
    "end": "1474730"
  },
  {
    "text": "first of all before you bring them into your production account and then you'll be able to see exactly what resources",
    "start": "1474730",
    "end": "1480340"
  },
  {
    "text": "get created okay that's how I would tackle it if I was considering bringing this code into a production environment",
    "start": "1480340",
    "end": "1486460"
  },
  {
    "text": "or into an environment where there is production data actually yeah okay so",
    "start": "1486460",
    "end": "1492610"
  },
  {
    "text": "yeah so an enhanced editor experience is something else that been working on okay",
    "start": "1492610",
    "end": "1497700"
  },
  {
    "start": "1496000",
    "end": "1496000"
  },
  {
    "text": "some other things as well so concurrency we'll talk about concurrency a little",
    "start": "1497700",
    "end": "1504280"
  },
  {
    "text": "bit more later okay but we have introduced a mechanism for auto approving concurrency requests increased",
    "start": "1504280",
    "end": "1512770"
  },
  {
    "text": "concurrency requests you get a thousand concurrent executions across all lambda functions within each region where you",
    "start": "1512770",
    "end": "1519490"
  },
  {
    "text": "deploy them okay as default within your account so I can have like in my example",
    "start": "1519490",
    "end": "1524860"
  },
  {
    "text": "I gave before if a thousand of the people in that audience of two and a half thousand that all interacted with",
    "start": "1524860",
    "end": "1529990"
  },
  {
    "text": "the chat box and currently within the same say 50 millisecond period and that's quite unlikely but if they had",
    "start": "1529990",
    "end": "1535210"
  },
  {
    "text": "done that my account would have capped with a thousand concurrent executions of my lambda function and I would have got",
    "start": "1535210",
    "end": "1541660"
  },
  {
    "text": "a invocation error appearing in my cloud watch logs and also in my metrics",
    "start": "1541660",
    "end": "1547090"
  },
  {
    "text": "showing me that I'd hit the cap and my concurrent invitations metric in cloud watch would have flatlined a thousand",
    "start": "1547090",
    "end": "1553570"
  },
  {
    "text": "okay so what would happen okay now I raise the ticket through our internal system which we call fleet management",
    "start": "1553570",
    "end": "1559680"
  },
  {
    "text": "actually very similar to a limit increase that you can do through the support console and within a couple of",
    "start": "1559680",
    "end": "1565330"
  },
  {
    "text": "days I had my 5000 limit actually it's easier for external customers okay if you go and request a limit increase to",
    "start": "1565330",
    "end": "1572920"
  },
  {
    "text": "three thousand we have an automated scoring system that will assess your account okay and if you're assessed as a",
    "start": "1572920",
    "end": "1580630"
  },
  {
    "text": "low-risk account you automatically get approved for 3,000 concurrent in each region that you",
    "start": "1580630",
    "end": "1585670"
  },
  {
    "text": "specify and it's done on a per region basis okay so then you can run up to 3,000 concurrent functions customers",
    "start": "1585670",
    "end": "1593170"
  },
  {
    "text": "often ask why we have these limits if they're Auto approved for increase so",
    "start": "1593170",
    "end": "1598450"
  },
  {
    "text": "why do we have the limits if they were to approve for increase well many AWS limits are there to protect customers",
    "start": "1598450",
    "end": "1606070"
  },
  {
    "text": "from Mis configuration or costs that might arrive arise from Mis",
    "start": "1606070",
    "end": "1612040"
  },
  {
    "text": "configuration so the reason the limit there really is for your protection rather than for hours okay",
    "start": "1612040",
    "end": "1617440"
  },
  {
    "text": "and we want customers to consciously evaluate their usage needs and ask us to raise the limit so that if you have code",
    "start": "1617440",
    "end": "1624730"
  },
  {
    "text": "that misbehaves and you end up driving a lot of concurrent executions by mistake you don't end up with a big AWS bill we",
    "start": "1624730",
    "end": "1630940"
  },
  {
    "text": "want to protect you from that and that's why a lot of our our service limits are actually in place especially soft limits",
    "start": "1630940",
    "end": "1636220"
  },
  {
    "text": "they're really in place to protect customers from over running usage okay",
    "start": "1636220",
    "end": "1642430"
  },
  {
    "text": "so automatic approval to three times the default and you can go up to lots lots more than that",
    "start": "1642430",
    "end": "1647440"
  },
  {
    "text": "I know of customers that have got limits in the high tens of thousands of concurrency and beyond actually so you",
    "start": "1647440",
    "end": "1653770"
  },
  {
    "text": "can drive a lot of functions if your use case warrants it if you ask for something like that you'll get a call or",
    "start": "1653770",
    "end": "1659470"
  },
  {
    "text": "a discussion with one of our solutions architects again for the same reason really that I mentioned before it's",
    "start": "1659470",
    "end": "1664480"
  },
  {
    "text": "about trying to ensure that customers are using the platform in the most cost efficient way possible ok so we'll try to give some guidance to",
    "start": "1664480",
    "end": "1671590"
  },
  {
    "text": "help you contain your costs try to offer some mechanisms that you might want to use in order to drive down constrain the",
    "start": "1671590",
    "end": "1678760"
  },
  {
    "text": "amount of usage that you have ok kind of counterintuitive for customers often to hear that from us but we actually want",
    "start": "1678760",
    "end": "1685000"
  },
  {
    "text": "customers to spend as little as possible on AWS because we think if you do that you'll end up being more successful over",
    "start": "1685000",
    "end": "1691660"
  },
  {
    "text": "a longer term and therefore using more of our stuff and if we allow you to burn through a lot of budget on our platform",
    "start": "1691660",
    "end": "1699090"
  },
  {
    "text": "cold dark so this is a area of concern for customers that are using AWS lambda",
    "start": "1699220",
    "end": "1706330"
  },
  {
    "text": "within applications that are latency sensitive so it might be applications",
    "start": "1706330",
    "end": "1711340"
  },
  {
    "text": "where lambda calls are blocking for the UI so users can see when AWS lambda has",
    "start": "1711340",
    "end": "1719490"
  },
  {
    "text": "been invoked maybe it's to call an API to deliver some dynamic content into a web page or maybe it's part of a",
    "start": "1719490",
    "end": "1725420"
  },
  {
    "text": "transaction flow with a customer and be delivering a push notification or something to move a customer on to the",
    "start": "1725420",
    "end": "1731040"
  },
  {
    "text": "next part of a transaction flow we all know there's lots of data points out there that suggests that latency reduces",
    "start": "1731040",
    "end": "1738840"
  },
  {
    "text": "user satisfaction and there's actually some really good studies that have been done by a lot of large internet companies about how latency affects",
    "start": "1738840",
    "end": "1746220"
  },
  {
    "text": "customer lifetime value or propensity to buy and other things as well so keeping latency down it's much advantageous in",
    "start": "1746220",
    "end": "1753690"
  },
  {
    "text": "many different ways right we had a challenge here particularly with customers that had very large deployment",
    "start": "1753690",
    "end": "1761820"
  },
  {
    "text": "bundles for their functions often customers that had developed lambda",
    "start": "1761820",
    "end": "1766980"
  },
  {
    "text": "functions in Java okay included a lot of pre compile classes ended up with",
    "start": "1766980",
    "end": "1772320"
  },
  {
    "text": "deployables that were you know hundreds of megabytes or larger in size what do you think actually happens into the hood",
    "start": "1772320",
    "end": "1778470"
  },
  {
    "text": "when you first invoke a lambda function does anybody know what happens under the hood when you first invoke a lambda",
    "start": "1778470",
    "end": "1783630"
  },
  {
    "text": "function for the first time or for the first time in a while why does it take a",
    "start": "1783630",
    "end": "1789360"
  },
  {
    "text": "long time though yep so the response",
    "start": "1789360",
    "end": "1797940"
  },
  {
    "text": "here is that the JVM is fired up and that these classes have to be loaded but there's something before that actually which is when you trigger the function a",
    "start": "1797940",
    "end": "1806480"
  },
  {
    "text": "container has to get deployed into the execution environment that contains the",
    "start": "1806480",
    "end": "1812970"
  },
  {
    "text": "JVM and that contains the code associated with it so each lambda",
    "start": "1812970",
    "end": "1818460"
  },
  {
    "text": "runtime that we produce is effectively a base container image okay and each piece",
    "start": "1818460",
    "end": "1824220"
  },
  {
    "text": "of function code that you deploy is a new container which is built from that base image ready for invocation the",
    "start": "1824220",
    "end": "1831090"
  },
  {
    "text": "first time you get an event and the first time you get an event we get the container from our repository internal",
    "start": "1831090",
    "end": "1838290"
  },
  {
    "text": "repository and we've staged it down on to a machine so that it can be deployed with the resources that are required",
    "start": "1838290",
    "end": "1843630"
  },
  {
    "text": "namely a CPU some memory some disk and a bus to connect those",
    "start": "1843630",
    "end": "1849120"
  },
  {
    "text": "resources together which is a computer of course and that's when your code starts to execute and you start to get results so that's why the cold start",
    "start": "1849120",
    "end": "1857190"
  },
  {
    "text": "happens because that container has to move across the network from the repository on to the execution host once",
    "start": "1857190",
    "end": "1863910"
  },
  {
    "text": "it's there it's there and subsequent requests well they're handled much much more quickly it's already resident until",
    "start": "1863910",
    "end": "1870570"
  },
  {
    "text": "the cache TTL expires if it's not being used for a while it gets D staged then the next time you fire it you have the",
    "start": "1870570",
    "end": "1876630"
  },
  {
    "text": "cold start again and if you have a lot of functions running tens or hundreds or thousands you don't just see one cold star you see",
    "start": "1876630",
    "end": "1883800"
  },
  {
    "text": "a new cold star each time a new machine gets provisioned to deal with scale out",
    "start": "1883800",
    "end": "1889559"
  },
  {
    "text": "each time the container lands on to a new machine you'll see one function that takes longer than all the rest okay so",
    "start": "1889559",
    "end": "1896010"
  },
  {
    "text": "that's just how the service works so we've optimized now internally within our infrastructure to try to reduce that",
    "start": "1896010",
    "end": "1903840"
  },
  {
    "text": "we're not just closing what techniques were using for that but given what I've just described you can probably guess",
    "start": "1903840",
    "end": "1909450"
  },
  {
    "text": "what a few of the techniques are that we're using to minimize the time they takes to get those containers down onto",
    "start": "1909450",
    "end": "1915780"
  },
  {
    "text": "the machines in response to invocation actions yeah yeah yeah you don't have to",
    "start": "1915780",
    "end": "1922860"
  },
  {
    "text": "do anything okay you don't have to do anything you'll just if you were using lambda before AWS reinvent with large",
    "start": "1922860",
    "end": "1928980"
  },
  {
    "text": "functions and you're using it now and you compare the impact of the cold",
    "start": "1928980",
    "end": "1934230"
  },
  {
    "text": "starts they're still there okay it's just so up to 80% smaller now so what might have taken a second before might",
    "start": "1934230",
    "end": "1940679"
  },
  {
    "text": "take 200 milliseconds now okay so that is a implicit optimization that we've",
    "start": "1940679",
    "end": "1949080"
  },
  {
    "text": "done to the platform this is one of the nice features of course of using the cloud using a service provider like AWS",
    "start": "1949080",
    "end": "1954780"
  },
  {
    "text": "you don't have to do anything you didn't have to re-engineer anything in order to get that we've obviously received",
    "start": "1954780",
    "end": "1959970"
  },
  {
    "text": "feedback from customers and working on that feedback we're trying to optimize the platform so you'll see that",
    "start": "1959970",
    "end": "1965880"
  },
  {
    "text": "particularly relevant if you are including a lot of dependencies within",
    "start": "1965880",
    "end": "1971450"
  },
  {
    "text": "your deployable package either statically compiled binaries or lots and lots of Java classes bytecode that's",
    "start": "1971450",
    "end": "1979110"
  },
  {
    "text": "where the problem normally manifests logging this is a user experience improvement if you",
    "start": "1979110",
    "end": "1984630"
  },
  {
    "text": "jump into the AWS console for lambda now look up monitoring you can directly jump",
    "start": "1984630",
    "end": "1989850"
  },
  {
    "text": "through into the cloud watch logs console to access logs for a specific function without intermediary step okay",
    "start": "1989850",
    "end": "1995400"
  },
  {
    "text": "so it's user experience improvement for making it simpler to access logs are",
    "start": "1995400",
    "end": "2000590"
  },
  {
    "text": "something we've done we've also increased the maximum memory footprint for lambda functions as well from 1.5",
    "start": "2000590",
    "end": "2010040"
  },
  {
    "text": "gigs up to 3 gigs and there's a very this is really important because with",
    "start": "2010040",
    "end": "2016480"
  },
  {
    "text": "AWS lambda the dial you twist or the slider you move is the amount of memory",
    "start": "2016480",
    "end": "2022550"
  },
  {
    "text": "that is allocated to the function ok but the probably one of the most important best practices that you need to know",
    "start": "2022550",
    "end": "2028580"
  },
  {
    "text": "about in using AWS lambda is that all resource of scale in proportion to the amount of memory that you allocate so by",
    "start": "2028580",
    "end": "2035390"
  },
  {
    "text": "moving that slider up or twisting that dial and allocating more memory you're also giving more CPU shares you're",
    "start": "2035390",
    "end": "2041810"
  },
  {
    "text": "giving more network throughput and you're also allocating more sockets and other host resources as well so",
    "start": "2041810",
    "end": "2048290"
  },
  {
    "text": "everything scales in accordance with the amount of memory that is allocated so when we say we're giving 3 gigs of RAM",
    "start": "2048290",
    "end": "2054740"
  },
  {
    "text": "we're also doubling the maximum amount of CPU that can provide it and doubling the maximum amount of network throughput",
    "start": "2054740",
    "end": "2060260"
  },
  {
    "text": "so we're basically creating a twice as big lambda function machine on all the",
    "start": "2060260",
    "end": "2065629"
  },
  {
    "text": "resource very all resource axes all these sorts of vectors ok so just more horsepower for computationally intensive",
    "start": "2065630",
    "end": "2072490"
  },
  {
    "text": "computationally intensive tasks in the",
    "start": "2072490",
    "end": "2078520"
  },
  {
    "text": "responsive use case like the micro services use case where you are building API logic into lambda functions this is",
    "start": "2078520",
    "end": "2086510"
  },
  {
    "text": "not a huge huge issue for most customers ok cause mostly they are building really",
    "start": "2086510",
    "end": "2091820"
  },
  {
    "text": "really small services that have a kind of simple footprint and don't drive a lot of CPU but consider things like",
    "start": "2091820",
    "end": "2099850"
  },
  {
    "text": "encapsulating machine learning inference models inside lambda functions or building servers map produce processors",
    "start": "2099850",
    "end": "2107720"
  },
  {
    "text": "where you want to do large-scale data processing within lambda functions that's where these capabilities are",
    "start": "2107720",
    "end": "2113150"
  },
  {
    "text": "particularly relevant ok so you can have very big models for inference you can have very",
    "start": "2113150",
    "end": "2118660"
  },
  {
    "text": "computationally intensive inference operations or you can load large amounts of data into each function for data",
    "start": "2118660",
    "end": "2125500"
  },
  {
    "text": "processing operations gets very valuable when you consider those use cases okay and then finally we also have these two",
    "start": "2125500",
    "end": "2133960"
  },
  {
    "start": "2132000",
    "end": "2132000"
  },
  {
    "text": "things these came a little bit later this was in January AWS Lambda support for C sharp with",
    "start": "2133960",
    "end": "2142150"
  },
  {
    "text": "dotnet core 2.0 and AWS lambda support for golang as well so these are",
    "start": "2142150",
    "end": "2148660"
  },
  {
    "text": "essentially new container types that have been made available for developers that include the relevant JVM and in",
    "start": "2148660",
    "end": "2155230"
  },
  {
    "text": "this case include the capability for you to invoke lambda functions that are",
    "start": "2155230",
    "end": "2161830"
  },
  {
    "text": "written in go anyone familiar with AWS x-ray minority of people this is our",
    "start": "2161830",
    "end": "2170700"
  },
  {
    "text": "distributed tracing tool you can embed the x-ray SDK within your application",
    "start": "2170700",
    "end": "2175860"
  },
  {
    "text": "typically your lambda based application and then you can gather statistics at",
    "start": "2175860",
    "end": "2181750"
  },
  {
    "text": "the individual invocation level or the at the aggregate level about performance of your code so it allows you to embed",
    "start": "2181750",
    "end": "2187830"
  },
  {
    "text": "instrumentation inside your lambda functions for observability we also have x-ray support for go and x-ray support",
    "start": "2187830",
    "end": "2195700"
  },
  {
    "text": "for for c-sharp c-sharp is in beta so that gives you the same observability on",
    "start": "2195700",
    "end": "2201730"
  },
  {
    "text": "these two runtime environments that you have on Python JavaScript and Java",
    "start": "2201730",
    "end": "2207340"
  },
  {
    "text": "okay so filling out the ecosystem and we also have some local support for both of",
    "start": "2207340",
    "end": "2212980"
  },
  {
    "text": "these as well which enables you to run lambda functions and other service resources on your development machine in",
    "start": "2212980",
    "end": "2219910"
  },
  {
    "text": "the same way that you might run them in AWS okay so next area of improvement is",
    "start": "2219910",
    "end": "2225400"
  },
  {
    "text": "about the developer experience as it pertains to wrapping around functions",
    "start": "2225400",
    "end": "2234220"
  },
  {
    "text": "that make it easier for developers to safely develop and deploy code and to be",
    "start": "2234220",
    "end": "2241210"
  },
  {
    "text": "more productive okay the first thing here is AWS cloud 9 which I mentioned earlier which is",
    "start": "2241210",
    "end": "2248440"
  },
  {
    "text": "a version of which is embedded directly within the lamda console for cold for code anything but which is also a",
    "start": "2248440",
    "end": "2254589"
  },
  {
    "text": "standalone service okay so you can jump onto the AWS console you can provision a cloud 9 workspace for you or other",
    "start": "2254589",
    "end": "2262450"
  },
  {
    "text": "members of your team okay and then you have a web-based IDE that you can use",
    "start": "2262450",
    "end": "2268780"
  },
  {
    "text": "for code authoring debugging what actually happened under the covers is a",
    "start": "2268780",
    "end": "2274950"
  },
  {
    "text": "ec2 instance gets provisioned for you and on the ec2 instance is installed the",
    "start": "2274950",
    "end": "2281109"
  },
  {
    "text": "IDE and the fact that you have an ec2 instance underlying this means that you",
    "start": "2281109",
    "end": "2286569"
  },
  {
    "text": "have a Linux console experience as well as the idea available to you in fact the",
    "start": "2286569",
    "end": "2291640"
  },
  {
    "text": "Linux console experience is embedded natively within the IDE so you'll see a multi pane layout of the type you'll be",
    "start": "2291640",
    "end": "2297640"
  },
  {
    "text": "familiar with one of the panes is the code editor another one of the panes is the code Explorer that allows you to",
    "start": "2297640",
    "end": "2303579"
  },
  {
    "text": "explore different resources within your package and the or within your application and then the third pane is a",
    "start": "2303579",
    "end": "2310630"
  },
  {
    "text": "Linux console experience command line that you can use for interacting with source control systems and that you can",
    "start": "2310630",
    "end": "2317619"
  },
  {
    "text": "also use to manipulate customize and configure the underlying host okay for testing purposes for example we support",
    "start": "2317619",
    "end": "2325810"
  },
  {
    "text": "breakpoints on JavaScript we support Sam local which as I mentioned earlier is our local",
    "start": "2325810",
    "end": "2332580"
  },
  {
    "text": "[Music] simulation environment a local locally deployable version of API gateway",
    "start": "2332580",
    "end": "2341050"
  },
  {
    "text": "endpoints and lambda function and runtime plus a dynamo DB emulator okay",
    "start": "2341050",
    "end": "2346960"
  },
  {
    "text": "so you can build a service app using Sam deploy locally up to your laptop or",
    "start": "2346960",
    "end": "2353589"
  },
  {
    "text": "locally into the IDE remotely but locally into the IDE and you can use that for local testing IDE debugging it",
    "start": "2353589",
    "end": "2360670"
  },
  {
    "text": "allows you to do things like configure test events send those payloads to your API endpoints and then observe the",
    "start": "2360670",
    "end": "2367960"
  },
  {
    "text": "resource that you get back ok so stuff like that's built in also has land under blueprint support built in and it's easy",
    "start": "2367960",
    "end": "2374950"
  },
  {
    "text": "to use the other what I consider to be one of the killer features for this is the collaborative coding feature so you",
    "start": "2374950",
    "end": "2381940"
  },
  {
    "text": "you can work if you know Google Docs or one that I prefer quit which is a",
    "start": "2381940",
    "end": "2387339"
  },
  {
    "text": "Salesforce tool for collaborative document editing which we use lot within Amazon AWS you can work concurrently on",
    "start": "2387339",
    "end": "2394930"
  },
  {
    "text": "the same document right so it's not version control where you check in and check out it's I'm editing a doc and",
    "start": "2394930",
    "end": "2400660"
  },
  {
    "text": "you're editing a doc I can see your cursor and you can see mine yeah we have the same thing in the IDE so we can both",
    "start": "2400660",
    "end": "2406930"
  },
  {
    "text": "edit the same source file concurrently I can see what you're doing and you can see the bugs that I'm introducing and",
    "start": "2406930",
    "end": "2414339"
  },
  {
    "text": "it's fur distributed pair programming or distributed squad programming where you want a team of developers working",
    "start": "2414339",
    "end": "2419740"
  },
  {
    "text": "concurrently on the same code base we support that natively within within the editor it's actually really really nice",
    "start": "2419740",
    "end": "2425859"
  },
  {
    "text": "feature if you're bad like me at rank software your expert team members can",
    "start": "2425859",
    "end": "2430900"
  },
  {
    "text": "act as a crutch for you it's pretty much what happens in my group so yeah that's it it's it's really",
    "start": "2430900",
    "end": "2436750"
  },
  {
    "text": "nice experiment with it if you haven't tried it it cost like I want to say around $6 a month per user to provision",
    "start": "2436750",
    "end": "2443710"
  },
  {
    "start": "2438000",
    "end": "2438000"
  },
  {
    "text": "it's very cost effective see ICD processors so I just talked about code",
    "start": "2443710",
    "end": "2453250"
  },
  {
    "text": "star before I'd say that code star is probably the quickest quickest and easiest way to get started with new AWS",
    "start": "2453250",
    "end": "2461050"
  },
  {
    "text": "projects that you considering running just say I want a host of web service or a website and I want to do that service",
    "start": "2461050",
    "end": "2466420"
  },
  {
    "text": "I can jump up to the codes that are console click the project type that I",
    "start": "2466420",
    "end": "2471730"
  },
  {
    "text": "want so I want a server list web application delivered using flask let's say click that click deploy five minutes",
    "start": "2471730",
    "end": "2480400"
  },
  {
    "text": "later I'll have a source code repository with the template code in it for the",
    "start": "2480400",
    "end": "2485500"
  },
  {
    "text": "sample app I'll have build pipeline configured and deployment endpoints configured I don't have a first copy of",
    "start": "2485500",
    "end": "2491829"
  },
  {
    "text": "my application running ok and then I have a full automated see ICD pipeline",
    "start": "2491829",
    "end": "2497349"
  },
  {
    "text": "that I can use check the or clone the source repository down onto my machine",
    "start": "2497349",
    "end": "2502390"
  },
  {
    "text": "or into my cloud 9 environment edit the source check it back in again in a minute or two later I'll have a new",
    "start": "2502390",
    "end": "2508480"
  },
  {
    "text": "version of my opinon production so it establishes the complete tool chain that you need to",
    "start": "2508480",
    "end": "2515559"
  },
  {
    "text": "manage and deploy software in a team I can establish additional users and they",
    "start": "2515559",
    "end": "2522039"
  },
  {
    "text": "can work on the same resources using the version control system we can immediately start to collaborate on",
    "start": "2522039",
    "end": "2527439"
  },
  {
    "text": "developing and enhancing this app it's so easy to get started I just you know I",
    "start": "2527439",
    "end": "2532630"
  },
  {
    "text": "think it will become the default model for new new users of AWS and we have",
    "start": "2532630",
    "end": "2537809"
  },
  {
    "text": "integration there for service apps as I've just described with a variety of",
    "start": "2537809",
    "end": "2543219"
  },
  {
    "text": "different project templates so from Express through to flask through to Java",
    "start": "2543219",
    "end": "2549519"
  },
  {
    "text": "based deployment models and some new ones for going as well so if you haven't experimented with code start just take a",
    "start": "2549519",
    "end": "2555430"
  },
  {
    "text": "look at it it's a really easy way to get started with with these services in",
    "start": "2555430",
    "end": "2563049"
  },
  {
    "text": "aggregate but once you get into more complex environments customers have more",
    "start": "2563049",
    "end": "2570309"
  },
  {
    "text": "requirements and we've also made some enhancements here to try to simplify and improve the deployment model for for",
    "start": "2570309",
    "end": "2578199"
  },
  {
    "start": "2577000",
    "end": "2577000"
  },
  {
    "text": "customers that are using API gateway in lambda as a mechanism for running Production apps Production apps",
    "start": "2578199",
    "end": "2584739"
  },
  {
    "text": "obviously have customers or users attached to them and that means they need to be managed in a different way",
    "start": "2584739",
    "end": "2589989"
  },
  {
    "text": "right we need more rigor more discipline more controls around how we choose to do deployment ok so these are some of the",
    "start": "2589989",
    "end": "2596949"
  },
  {
    "text": "enhancements that we've introduced first is weighted aliases if I wanted to have",
    "start": "2596949",
    "end": "2602349"
  },
  {
    "text": "a be testing or blue-gray deployments for my API endpoints previously how",
    "start": "2602349",
    "end": "2609640"
  },
  {
    "text": "would I do that I'd use DNS more than likely right with weighted record sets where 5% of my DNS",
    "start": "2609640",
    "end": "2616689"
  },
  {
    "text": "requests get resolved down onto endpoint a and 95% get resolved down onto end",
    "start": "2616689",
    "end": "2622479"
  },
  {
    "text": "point B and then when I've established that end point a is the end point that I want to promote to production I change",
    "start": "2622479",
    "end": "2629019"
  },
  {
    "text": "the weighting so that 100% goes there ok and if I'm lucky people respect the DNS",
    "start": "2629019",
    "end": "2636009"
  },
  {
    "text": "TTL I've specified and five minutes later all of my customers are over on",
    "start": "2636009",
    "end": "2641849"
  },
  {
    "text": "endpoint a rather than on end point B which was my prior version right",
    "start": "2641849",
    "end": "2647730"
  },
  {
    "text": "and it always works that way right no because DNS gets cached some",
    "start": "2647730",
    "end": "2654780"
  },
  {
    "text": "applications won't respect the TTL I've specified or some resolvers won't respect the TTL that I've specified and",
    "start": "2654780",
    "end": "2661710"
  },
  {
    "text": "I'll end up with less specific control over the traffic migration okay and it",
    "start": "2661710",
    "end": "2667770"
  },
  {
    "text": "might end up with some clients that have a hangover of the old endpoint present in their cache and they get error",
    "start": "2667770",
    "end": "2673920"
  },
  {
    "text": "messages or break when I cut over to the new app this is why dns-based traffic",
    "start": "2673920",
    "end": "2681150"
  },
  {
    "text": "distribution is not perfect it's good okay but it's not perfect so to help improve upon that we've",
    "start": "2681150",
    "end": "2687869"
  },
  {
    "text": "introduced weighted aliases this allows me to have one API endpoint which all of",
    "start": "2687869",
    "end": "2693089"
  },
  {
    "text": "my clients have all the time always resolve to that one API endpoint but then behind the API endpoint I actually",
    "start": "2693089",
    "end": "2699990"
  },
  {
    "text": "invoke different lambda functions with different weightings so I have 95% of my traffic hitting function version prod",
    "start": "2699990",
    "end": "2707280"
  },
  {
    "text": "and 5% of my traffic hitting function version beta okay and then when I decide",
    "start": "2707280",
    "end": "2713130"
  },
  {
    "text": "I want to do my cutter over I put 100% of my traffic onto function version beta and nobody has to change anything in DNS",
    "start": "2713130",
    "end": "2720480"
  },
  {
    "text": "the traffic just shifts across it also allows me to use function execution",
    "start": "2720480",
    "end": "2727319"
  },
  {
    "text": "weighting in not in non dns-based endpoints because this is for event-driven applications right some of",
    "start": "2727319",
    "end": "2733890"
  },
  {
    "text": "the events are coming from API gateways but some of the events might be coming from other sources like my Lex bot or my",
    "start": "2733890",
    "end": "2740670"
  },
  {
    "text": "Kinesis dream where I'm processing records in real time or my IOT rules",
    "start": "2740670",
    "end": "2746190"
  },
  {
    "text": "engine ok these are internal AWS event sources that do not use the NS they",
    "start": "2746190",
    "end": "2752220"
  },
  {
    "text": "directly invoke a lambda function so I can't do waiting across them without",
    "start": "2752220",
    "end": "2757740"
  },
  {
    "text": "this feature with this feature I can do waiting across these internal event sources as well so I can do a/b testing",
    "start": "2757740",
    "end": "2764280"
  },
  {
    "text": "in my data pipeline or a be testing in my own IRT application as well as a/b",
    "start": "2764280",
    "end": "2769290"
  },
  {
    "text": "testing in my DNS resolved exposed endpoints a lot more use cases become open ok the same on API gateway we can",
    "start": "2769290",
    "end": "2779530"
  },
  {
    "text": "do this with sub stages this means the API gateway end points that aren't serviced by lambda functions can also",
    "start": "2779530",
    "end": "2786850"
  },
  {
    "text": "benefit from the same kinds of features say I'm serving some or all of my API",
    "start": "2786850",
    "end": "2792250"
  },
  {
    "text": "name space from ec2 instances that run custom code rather than from lambda well",
    "start": "2792250",
    "end": "2797710"
  },
  {
    "text": "with these sub stages I can share traffic across those two different destinations which might be two",
    "start": "2797710",
    "end": "2803770"
  },
  {
    "text": "different ECT auto-scaling groups as well okay so more granular and specific and accurate control over my API gateway",
    "start": "2803770",
    "end": "2811300"
  },
  {
    "text": "traffic as well okay and then we've also introduced automated support for safe",
    "start": "2811300",
    "end": "2817840"
  },
  {
    "text": "service deployment so this is using our code deploy service integrating code",
    "start": "2817840",
    "end": "2823300"
  },
  {
    "text": "deploy with metrics cloud watch metrics so I can do things like push a candidate",
    "start": "2823300",
    "end": "2830560"
  },
  {
    "text": "release into prod using code deploy",
    "start": "2830560",
    "end": "2836190"
  },
  {
    "text": "observe the error rates on that candidate release and if those ever rates exceed a pretty fine threshold but",
    "start": "2836190",
    "end": "2843400"
  },
  {
    "text": "I define maybe three percent I can automatically roll out to the prior",
    "start": "2843400",
    "end": "2849040"
  },
  {
    "text": "version so roll forward to the prior version okay so have this automated mechanism again it's about enabling",
    "start": "2849040",
    "end": "2855750"
  },
  {
    "text": "smaller development teams particularly to achieve higher levels of reliability",
    "start": "2855750",
    "end": "2861100"
  },
  {
    "text": "by automating aspects of the deployment process and allowing them to use rules",
    "start": "2861100",
    "end": "2866170"
  },
  {
    "text": "based deployments rules baseball forward will space roll forward okay these how",
    "start": "2866170",
    "end": "2871480"
  },
  {
    "text": "it looks in the console okay with traffic shifting and you see that our",
    "start": "2871480",
    "end": "2876970"
  },
  {
    "text": "traffic gradually gets moved over onto the new version of our app and if we had an error message errors appearing there",
    "start": "2876970",
    "end": "2884020"
  },
  {
    "text": "we could roll back from that this is canario deployments in the API gateway see we're specifying here how",
    "start": "2884020",
    "end": "2892390"
  },
  {
    "text": "many percentage of requests we want to put on our canary we're using the stage",
    "start": "2892390",
    "end": "2898480"
  },
  {
    "text": "balancing in the API gate we're here so that canary could be a new lambda function or it could be a new auto",
    "start": "2898480",
    "end": "2903790"
  },
  {
    "text": "scaling group with new endpoint code running on it okay we've got flexibility as to what's behind this part of the",
    "start": "2903790",
    "end": "2909520"
  },
  {
    "text": "namespace and then we can observe traffic shifting",
    "start": "2909520",
    "end": "2915569"
  },
  {
    "text": "and see our metrics in the cloud watch console here you can see up here so our",
    "start": "2915569",
    "end": "2920730"
  },
  {
    "text": "10% on our canary equates to 113 requests a 90% on fraud is nine times",
    "start": "2920730",
    "end": "2929430"
  },
  {
    "text": "that roughly okay we're talking now",
    "start": "2929430",
    "end": "2938130"
  },
  {
    "text": "about AWS lambda in enterprises or service approaches in enterprises one of",
    "start": "2938130",
    "end": "2946109"
  },
  {
    "text": "the things we heard a lot from customers was we want to integrate service lambda",
    "start": "2946109",
    "end": "2952349"
  },
  {
    "text": "based applications with pre-existing data sources that we've got in the enterprise you know we've got data in",
    "start": "2952349",
    "end": "2957869"
  },
  {
    "text": "our relational data stores or inside our corporate V pcs or our corporate network",
    "start": "2957869",
    "end": "2963769"
  },
  {
    "text": "they can't be exposed to the public internet but we still want business logic that's encoded within lambda",
    "start": "2963769",
    "end": "2970019"
  },
  {
    "text": "functions to be able to access that data so we can maybe open up new interaction channels for customers that use the rich",
    "start": "2970019",
    "end": "2976410"
  },
  {
    "text": "datasets that we have but expose them via API is for web or mobile apps in a more scalable reliable cost optimal way",
    "start": "2976410",
    "end": "2984660"
  },
  {
    "text": "so they want to combine lambda with existing resources okay so to solve for that we've done quite a bit of things on",
    "start": "2984660",
    "end": "2992069"
  },
  {
    "text": "legacy connectivity okay there's a couple of areas here that are interesting maybe the least obvious one",
    "start": "2992069",
    "end": "2998130"
  },
  {
    "text": "is allowing customers to defend themselves from the effects of launching",
    "start": "2998130",
    "end": "3005059"
  },
  {
    "text": "publicly available apps that rely on legacy data stores okay where your",
    "start": "3005059",
    "end": "3010069"
  },
  {
    "text": "licensing might be constrained perhaps you've got a license deployed on your legacy our DNS system that caps the",
    "start": "3010069",
    "end": "3017029"
  },
  {
    "text": "number of concurrent connections that you can make to it or where your vendor is going to charge you punitive parent",
    "start": "3017029",
    "end": "3023480"
  },
  {
    "text": "penalties if you exceed the number of concurrent connections so it's not so much that they want to limit you it's",
    "start": "3023480",
    "end": "3029089"
  },
  {
    "text": "just that they want to charge you okay so mechanisms for that's never happened right it's quite at the front slap",
    "start": "3029089",
    "end": "3034309"
  },
  {
    "text": "smiling I'm sure it's happened to him so we yeah concurrency control is really important",
    "start": "3034309",
    "end": "3039769"
  },
  {
    "text": "second thing is VP C is a security construct that customers trust you know that customers",
    "start": "3039769",
    "end": "3046200"
  },
  {
    "text": "have verified many many times and that many customers have built compliance or",
    "start": "3046200",
    "end": "3051270"
  },
  {
    "text": "privacy positions around okay so they don't want to breach that they don't want to pull down the walls of the",
    "start": "3051270",
    "end": "3057360"
  },
  {
    "text": "castle just because they need to get to the resources that are protected by those walls you know they want a",
    "start": "3057360",
    "end": "3062460"
  },
  {
    "text": "mechanism for controlled access okay maybe establishing trust zones where",
    "start": "3062460",
    "end": "3068640"
  },
  {
    "text": "lambda functions run within the walls client can access those resources and pass the results out in a secure way and",
    "start": "3068640",
    "end": "3075720"
  },
  {
    "text": "then thirdly on auditing okay so specific customer feedback that we're hearing so it's stuff like this control",
    "start": "3075720",
    "end": "3090060"
  },
  {
    "start": "3078000",
    "end": "3078000"
  },
  {
    "text": "concurrency allowing functions to be run with very low concurrency for",
    "start": "3090060",
    "end": "3096990"
  },
  {
    "text": "development purposes and then throttled when they're designated as prod okay or",
    "start": "3096990",
    "end": "3102090"
  },
  {
    "text": "temporarily disabling functions and what that really boils down to is the concurrency control really important",
    "start": "3102090",
    "end": "3108840"
  },
  {
    "text": "okay so to help with that we've done a few things first of all is exposing",
    "start": "3108840",
    "end": "3114030"
  },
  {
    "text": "concurrency metrics within cloud watch logs so you can see now within the cloud watch console with those graphical",
    "start": "3114030",
    "end": "3121140"
  },
  {
    "text": "metrics how many copies of each particular function are running concurrently so you have visibility first of all right the second thing is",
    "start": "3121140",
    "end": "3127890"
  },
  {
    "text": "you can apply per function concurrency throttles okay so quickly modify the",
    "start": "3127890",
    "end": "3134280"
  },
  {
    "text": "configuration of a specific function to set an enforced concurrency limit for",
    "start": "3134280",
    "end": "3139860"
  },
  {
    "text": "that particular function okay so this allows me to solve a few of those problems limit concurrency to legacy",
    "start": "3139860",
    "end": "3146040"
  },
  {
    "text": "systems to protect functions from being drowned out really by other functions",
    "start": "3146040",
    "end": "3153690"
  },
  {
    "text": "that are being overrun okay so we can limit less business-critical functions for example or functions that do not",
    "start": "3153690",
    "end": "3160050"
  },
  {
    "text": "directly impact the customer experience okay and then allow those functions to",
    "start": "3160050",
    "end": "3165720"
  },
  {
    "text": "get throttled as of the functions consume the available aggregate limit that we have within our account we can",
    "start": "3165720",
    "end": "3172290"
  },
  {
    "text": "set a function limit to zero which will temporarily disable that function as a very",
    "start": "3172290",
    "end": "3177980"
  },
  {
    "text": "quick atomic operation okay so just which that function off without deleting it or D staging it okay and then we can",
    "start": "3177980",
    "end": "3186609"
  },
  {
    "text": "develop functions that have limited building in runaway protection as well so there's lots and lots of different",
    "start": "3186609",
    "end": "3191630"
  },
  {
    "text": "use cases that can be solved through this capability of concurrency control",
    "start": "3191630",
    "end": "3197630"
  },
  {
    "text": "particularly in Port on in enterprise and then on the API gateway we've got a",
    "start": "3197630",
    "end": "3204560"
  },
  {
    "start": "3201000",
    "end": "3201000"
  },
  {
    "text": "couple of enhancements here there are relevant for enterprises as well V PC",
    "start": "3204560",
    "end": "3211100"
  },
  {
    "text": "private link this is a mechanism a standard mechanism for establishing",
    "start": "3211100",
    "end": "3217060"
  },
  {
    "text": "connectivity to V PC based resources okay and it can be used in several",
    "start": "3217060",
    "end": "3224990"
  },
  {
    "text": "different ways in the context of the API gateway the way it can be used is to",
    "start": "3224990",
    "end": "3231170"
  },
  {
    "text": "securely tunnel from a public API endpoint to a load balancer within a V",
    "start": "3231170",
    "end": "3239780"
  },
  {
    "text": "PC ok so I couldn't specify part of my API namespace my public API namespace so",
    "start": "3239780",
    "end": "3246410"
  },
  {
    "text": "these endpoints are public okay and I can wire that back directly to a",
    "start": "3246410",
    "end": "3251480"
  },
  {
    "text": "specific network load balancer within a specific V PC without exposing the",
    "start": "3251480",
    "end": "3257359"
  },
  {
    "text": "network load balancer to the general internet or without using security groups ok so I'm using the programmable",
    "start": "3257359",
    "end": "3264830"
  },
  {
    "text": "Network platform that AWS operates to establish private connectivity from the",
    "start": "3264830",
    "end": "3270230"
  },
  {
    "text": "edge locations or from a region specific endpoint directly into a V PC to a",
    "start": "3270230",
    "end": "3276590"
  },
  {
    "text": "network load balancer behind which I can place obviously an array of ec2 instances in an auto scaling group that",
    "start": "3276590",
    "end": "3283400"
  },
  {
    "text": "service that particular part of the namespace and I can do that in a secure way where neither the network load",
    "start": "3283400",
    "end": "3288980"
  },
  {
    "text": "balancer all the instances are otherwise exposed to the internet and those",
    "start": "3288980",
    "end": "3294530"
  },
  {
    "text": "resources needn't necessarily be in AWS the network load balancer needs to be an AWS but the resources could be at the",
    "start": "3294530",
    "end": "3301160"
  },
  {
    "text": "end of a Direct Connect connection in my own private data center ok so I can",
    "start": "3301160",
    "end": "3306920"
  },
  {
    "text": "thread connectivity through the cloud back to a specific point directing behind that let Warlow bouncer",
    "start": "3306920",
    "end": "3313020"
  },
  {
    "text": "very useful for high security API services okay and then on regional endpoint two just mentioned so either",
    "start": "3313020",
    "end": "3320040"
  },
  {
    "text": "from the broadly distributed API gateway endpoints which are operating over 100",
    "start": "3320040",
    "end": "3325560"
  },
  {
    "text": "different locations around the world atop our cloud for an infrastructure endpoints or new region specific API",
    "start": "3325560",
    "end": "3333840"
  },
  {
    "text": "endpoints that we're now providing so you can specify that you want an API endpoint in Frankfort for example ok",
    "start": "3333840",
    "end": "3340680"
  },
  {
    "text": "your customers will reach that API endpoint in Frankfort that might be served by lambda functions that are",
    "start": "3340680",
    "end": "3346530"
  },
  {
    "text": "running in Frankfort so your data is going to be localized to Germany the whole time or they might be served by",
    "start": "3346530",
    "end": "3352190"
  },
  {
    "text": "private link resources which could also be running inside VP C's that were located within Frankfort as well so",
    "start": "3352190",
    "end": "3358410"
  },
  {
    "text": "you're able to scope down where your data flows keep it within specific regions region being a geographic",
    "start": "3358410",
    "end": "3364980"
  },
  {
    "text": "location within which AWS provides services of course ok here in Europe",
    "start": "3364980",
    "end": "3370680"
  },
  {
    "text": "Dublin London Frankfurt and Paris was dock home to come and more to come in",
    "start": "3370680",
    "end": "3377220"
  },
  {
    "text": "the future I'm sure as well question no",
    "start": "3377220",
    "end": "3383070"
  },
  {
    "text": "ok this is how you set it up so VP see links this is in the API gateway console",
    "start": "3383070",
    "end": "3390120"
  },
  {
    "text": "and create a V PC link okay which specifies a specific Network load",
    "start": "3390120",
    "end": "3398880"
  },
  {
    "text": "balancer that you can see here okay and your integration type is V PC very simple this creates the threading that I",
    "start": "3398880",
    "end": "3405180"
  },
  {
    "text": "described the channel I described from the API gateway to those V PC based resources now what you end up with is a",
    "start": "3405180",
    "end": "3412950"
  },
  {
    "start": "3411000",
    "end": "3411000"
  },
  {
    "text": "matrix of solutions we used to only have internet to Internet with the existing service by opening up these two of the",
    "start": "3412950",
    "end": "3420030"
  },
  {
    "text": "models the regional AWS service you can have your region optimized endpoints and to the customer V PC you have private V",
    "start": "3420030",
    "end": "3427950"
  },
  {
    "text": "PC or region endpoints Plus private V PC available to you this is done with that private link service that I mentioned a",
    "start": "3427950",
    "end": "3434100"
  },
  {
    "text": "second ago and then on logging in order a few different things here structured",
    "start": "3434100",
    "end": "3440670"
  },
  {
    "text": "logging for api's so making it easier an index API requests discover them",
    "start": "3440670",
    "end": "3447059"
  },
  {
    "text": "troubleshoot issues manage traffic the last seven point in the stack and also a",
    "start": "3447059",
    "end": "3456630"
  },
  {
    "text": "cloud trail support for lambda functions so they said air bulls you to have thrilling with cloud trail anyone not",
    "start": "3456630",
    "end": "3464599"
  },
  {
    "text": "I'll say anyway it's an auditing service that allows you to record all AWS API requests made",
    "start": "3464599",
    "end": "3472799"
  },
  {
    "text": "using identities associated with specific account so you'll if you turn it on and it's turned on by default for",
    "start": "3472799",
    "end": "3478199"
  },
  {
    "text": "all customers for seven days you can also turn on extended retention you're then able to go back and verify observe",
    "start": "3478199",
    "end": "3486839"
  },
  {
    "text": "inspect query operations that have taken place within your account so it's good",
    "start": "3486839",
    "end": "3492539"
  },
  {
    "text": "for incident remediation it's good for security forensics operations if your",
    "start": "3492539",
    "end": "3498029"
  },
  {
    "text": "accounts being breached and you want to know how which credentials where from that date will be tied up in cloud trail",
    "start": "3498029",
    "end": "3504089"
  },
  {
    "text": "for period of seven days by default you can inspect it very useful we have lambda function invocation within cloud",
    "start": "3504089",
    "end": "3510959"
  },
  {
    "text": "trail as well as if you are invoking lambda functions synchronously or asynchronously directly using our API",
    "start": "3510959",
    "end": "3516599"
  },
  {
    "text": "that that will be recorded in your cloud trail logs now so you'll be able to see who's done what when and where from okay",
    "start": "3516599",
    "end": "3523289"
  },
  {
    "text": "so that pretty much wraps it up a lot of focus on service for enterprise use",
    "start": "3523289",
    "end": "3529559"
  },
  {
    "start": "3524000",
    "end": "3524000"
  },
  {
    "text": "cases when we started with this back in when was it two thousand of fifteen",
    "start": "3529559",
    "end": "3535249"
  },
  {
    "text": "lambda I think yeah you know as usual the early adopters were in startups that",
    "start": "3535249",
    "end": "3541439"
  },
  {
    "text": "were building brand new products but the benefits case for using lambda is very compelling inside larger enterprises as",
    "start": "3541439",
    "end": "3547769"
  },
  {
    "text": "well and we've seen customers like Capital One and actually a lot of other customers really accelerate ahead with",
    "start": "3547769",
    "end": "3554729"
  },
  {
    "text": "lambda and want to use it for a lot more use cases and a lot of the recent work that we've been doing and improving the",
    "start": "3554729",
    "end": "3561109"
  },
  {
    "text": "fit for AWS lambda in the enterprise has come from feedback that we've received",
    "start": "3561109",
    "end": "3566549"
  },
  {
    "text": "from customers like that so if you've looked at London before and you thought it's not a fit for security compliance",
    "start": "3566549",
    "end": "3572579"
  },
  {
    "text": "or privacy reasons I'd encourage you to take another look based on what you've seen today and of course",
    "start": "3572579",
    "end": "3578099"
  },
  {
    "text": "stay in this track for the rest of the day and learn a little bit more about the technical detail of some of the",
    "start": "3578099",
    "end": "3583349"
  },
  {
    "text": "things that I've covered during this first session thank you any questions",
    "start": "3583349",
    "end": "3597079"
  },
  {
    "text": "yes",
    "start": "3597529",
    "end": "3600529"
  },
  {
    "text": "so the question is about cloud formation service coverage right the fact is that",
    "start": "3624110",
    "end": "3630450"
  },
  {
    "text": "there is a lag between new services getting introduced and often new features getting introduced and support",
    "start": "3630450",
    "end": "3637290"
  },
  {
    "text": "for those new services and features arriving within cloud formation a couple of things to say about that there is a",
    "start": "3637290",
    "end": "3643200"
  },
  {
    "text": "lag but the lag is reducing so we're generally getting better at delivering those coverage features in a more timely",
    "start": "3643200",
    "end": "3650220"
  },
  {
    "text": "manner the second thing to say is there's been some changes within AWS and Amazon as to",
    "start": "3650220",
    "end": "3659040"
  },
  {
    "text": "how those new services and features have cloud formations support delivered for",
    "start": "3659040",
    "end": "3664890"
  },
  {
    "text": "them and those changes should continue to compress that time so it should continue to go down and get closer to",
    "start": "3664890",
    "end": "3671280"
  },
  {
    "text": "immediate okay and then the final thing to say is you can use lambda functions to create custom resource types okay",
    "start": "3671280",
    "end": "3678600"
  },
  {
    "text": "which bridge those gaps yourselves if you wish to do so and of course you can open-source those and contribute them to",
    "start": "3678600",
    "end": "3685290"
  },
  {
    "text": "the community it's not necessarily the answer that you'll want to hear because it's taking on heavy lifting that we",
    "start": "3685290",
    "end": "3690570"
  },
  {
    "text": "should probably be doing but if you've got a really pressing need and you desperately need coverage for some resource that isn't there you can do it",
    "start": "3690570",
    "end": "3697200"
  },
  {
    "text": "in that way and there are lots of examples out there of customer resource resources that have been created by",
    "start": "3697200",
    "end": "3702840"
  },
  {
    "text": "other customers that you can basically reuse so I encourage you to do that okay",
    "start": "3702840",
    "end": "3708560"
  },
  {
    "text": "any other questions okay I'll say thank",
    "start": "3708560",
    "end": "3713790"
  },
  {
    "text": "you again and we've got a break now until 11:00 and after 11:00",
    "start": "3713790",
    "end": "3719160"
  },
  {
    "text": "it's service developer experience so we'll take a look at cloud 9 and some of the tools that I've talked about with",
    "start": "3719160",
    "end": "3724200"
  },
  {
    "text": "some demos in this room obviously you're free to visit your the tracks as well if you wish to do so thanks again",
    "start": "3724200",
    "end": "3730820"
  },
  {
    "text": "you",
    "start": "3731490",
    "end": "3733550"
  }
]