[
  {
    "start": "0",
    "end": "277000"
  },
  {
    "text": "[Music]",
    "start": "0",
    "end": "3159"
  },
  {
    "text": "[Music] I've had a pretty interesting career working in big data in one form or",
    "start": "5960",
    "end": "11559"
  },
  {
    "text": "another I'm really glad to see that everybody is here to talk about no squel the reason why is because out of all the",
    "start": "11559",
    "end": "19000"
  },
  {
    "text": "AWS services that we do we recently did a marketing survey to find out that not many people know that we have Dynamo DB",
    "start": "19000",
    "end": "27119"
  },
  {
    "text": "well that's a little disappointing because you know it's a little near and dear to my part so while uh most folks",
    "start": "27119",
    "end": "33680"
  },
  {
    "text": "don't hear about Dynamo DB nearly as much as some of our other services we did find that the people that are using",
    "start": "33680",
    "end": "40239"
  },
  {
    "text": "Dynamo DB really like it they like it so much in fact that uh we have very few",
    "start": "40239",
    "end": "46920"
  },
  {
    "text": "customers that um you know rotate off of Dynamo DB and the reason why has to do",
    "start": "46920",
    "end": "52719"
  },
  {
    "text": "with um how we manage nosql how many today is are managing a nosql solution",
    "start": "52719",
    "end": "59559"
  },
  {
    "text": "of some flavor Cassandra hbas something all right so everybody is",
    "start": "59559",
    "end": "65439"
  },
  {
    "text": "familiar with what no SQL is and we can skip over a whole lot of early explanation so with how many of you guys",
    "start": "65439",
    "end": "72759"
  },
  {
    "text": "are familiar with using a fully managed service from AWS raise your",
    "start": "72759",
    "end": "78560"
  },
  {
    "text": "hands all right shout out what you're using shout",
    "start": "78560",
    "end": "84200"
  },
  {
    "text": "louder all of it all right okay great um that's kind",
    "start": "84200",
    "end": "90040"
  },
  {
    "text": "of the magic of what Dynamo DB is managing a nosql database across multiple regions is uh can be a bit",
    "start": "90040",
    "end": "95960"
  },
  {
    "text": "hairy it's very timec consuming and um people don't like doing it because it's not really uh as a differentiated task",
    "start": "95960",
    "end": "102640"
  },
  {
    "text": "for your business as you would hope in the best use of your time so what if what if Amazon could do that for you",
    "start": "102640",
    "end": "108920"
  },
  {
    "text": "what if we would manage your nosql solution so that you could have time",
    "start": "108920",
    "end": "114119"
  },
  {
    "text": "back that's what a number of our customers do customers for instance like adroll ad roll famously claims they",
    "start": "114119",
    "end": "120479"
  },
  {
    "text": "spend more on snacks than they do on Dynamo DB it's a lot of snacks I really want to",
    "start": "120479",
    "end": "126520"
  },
  {
    "text": "see those snacks additionally they only have like one or two dbas managing that nosql",
    "start": "126520",
    "end": "133080"
  },
  {
    "text": "database adroll does adte uh speed is of the Ence and what they deliver is a 40",
    "start": "133080",
    "end": "141040"
  },
  {
    "text": "millisecond round trip that's pretty difficult to do and they're all building all of this on Dynamo",
    "start": "141040",
    "end": "147080"
  },
  {
    "text": "DB so what Dynamo DB enables you to do is focus more on other aspects of your business instead of managing a nosql",
    "start": "147080",
    "end": "153640"
  },
  {
    "text": "database and allows your business to be more agile more scalable all the stuff that we promise across the rest of the",
    "start": "153640",
    "end": "161480"
  },
  {
    "text": "organization and customers who have not adopted no SQL and have a workload that warranted kind of have a cautionary tale",
    "start": "162159",
    "end": "170319"
  },
  {
    "text": "um of the folks that are using some no sequel permutation today were you using",
    "start": "170319",
    "end": "176440"
  },
  {
    "text": "a relational database for that workload before you moved over so you have PTSD I call it relational",
    "start": "176440",
    "end": "182720"
  },
  {
    "text": "PTSD because I swear to gosh if someone says let's Shard the database I start",
    "start": "182720",
    "end": "187879"
  },
  {
    "text": "you know shaking because it's just painful right I mean nobody wants to refactor a database you know from",
    "start": "187879",
    "end": "193519"
  },
  {
    "text": "relational to non-relational but man nobody wants to Shard a relational database either that stuff is tough so",
    "start": "193519",
    "end": "200959"
  },
  {
    "text": "we had a number of customers in the past two years that uh well actually I should take a step back probably in the last",
    "start": "200959",
    "end": "206760"
  },
  {
    "text": "four years but it's really taken off in the last two years where they start off of the relational database for a fast",
    "start": "206760",
    "end": "213920"
  },
  {
    "text": "moving project let's say it's iot and they get into a lot of trouble",
    "start": "213920",
    "end": "219000"
  },
  {
    "text": "because it can't grow and respond and read and write fast enough so Dynamo DB",
    "start": "219000",
    "end": "225200"
  },
  {
    "text": "is an excellent solution for those of us who are suffering from sharding PTSD so with that I'm going to handang",
    "start": "225200",
    "end": "231560"
  },
  {
    "text": "it over to Nate and he's going to come over and he's going to sort of make the",
    "start": "231560",
    "end": "237680"
  },
  {
    "text": "transition from where we are from a Rel ational standpoint to non-relational and at the end give you an idea of how it",
    "start": "237680",
    "end": "244360"
  },
  {
    "text": "incorporates directly into an application Nate is one of our solution Architects uh that has deep expertise on",
    "start": "244360",
    "end": "252040"
  },
  {
    "text": "uh nosql Solutions and then after Nate speaks Rick hulahan who is going to speak Rick is a principal solution",
    "start": "252040",
    "end": "259040"
  },
  {
    "text": "architect focused on no SQL as well and he's going to talk a little bit more about design patterns and best practices",
    "start": "259040",
    "end": "265160"
  },
  {
    "text": "and where the gotas are with Dynamo DB because Dynamo DB is just like any other no SQL solution that the devil is in the",
    "start": "265160",
    "end": "272400"
  },
  {
    "text": "details and wouldn't it be great if somebody give you a heads up before you hit them head on what we're going to do",
    "start": "272400",
    "end": "277560"
  },
  {
    "start": "277000",
    "end": "312000"
  },
  {
    "text": "today is we're actually going to walk through building a location aware recommendation engine application right",
    "start": "277560",
    "end": "284199"
  },
  {
    "text": "so rather than start with just sort of diving deep on the services we're going to think about this like software",
    "start": "284199",
    "end": "289759"
  },
  {
    "text": "engineers and really look at a set of requirements and characterize the data",
    "start": "289759",
    "end": "295120"
  },
  {
    "text": "that we're going to be accessing characterize our query patterns uh and then pick an assortment of AWS services",
    "start": "295120",
    "end": "302080"
  },
  {
    "text": "and we're gonna we're going to talk about a lot of them today a lot that come from our big data ecosystem uh and actually build an application at the end",
    "start": "302080",
    "end": "308120"
  },
  {
    "text": "I'm going to show you a working demo uh of an application that uses these services this is the agenda we're going to VI uh review some key Concepts uh",
    "start": "308120",
    "end": "316000"
  },
  {
    "start": "312000",
    "end": "361000"
  },
  {
    "text": "then we will review our application requirements uh we're going to go through some data modeling and and this",
    "start": "316000",
    "end": "321120"
  },
  {
    "text": "is to Rory's point about you know folks that are familiar with relational databases and entity relationship",
    "start": "321120",
    "end": "326160"
  },
  {
    "text": "modeling we're going to show how you can uh evolve from that into a nosql",
    "start": "326160",
    "end": "331720"
  },
  {
    "text": "solution right so we'll actually take a look at some actual ER diagrams and what those look like uh in the nosql world uh",
    "start": "331720",
    "end": "338280"
  },
  {
    "text": "we'll talk a little bit about the data collection and storage uh this is really the the represents the suite of services",
    "start": "338280",
    "end": "343800"
  },
  {
    "text": "that we're going to use to build this right so this is going to cover not only Dynam DB it's going to cover Kinesis uh",
    "start": "343800",
    "end": "349720"
  },
  {
    "text": "it's going to cover uh uh to the next Point uh machine learning which you can use to actually analyze data uh that",
    "start": "349720",
    "end": "356680"
  },
  {
    "text": "you're storing in Dynamo uh and then finally we'll go through a demo at the end let's talk first about what we mean",
    "start": "356680",
    "end": "363080"
  },
  {
    "start": "361000",
    "end": "467000"
  },
  {
    "text": "uh by location awareness Okay so we've all used a location aware app we use",
    "start": "363080",
    "end": "368599"
  },
  {
    "text": "them all the time right you know once once uh people started carrying mobile devices around you know we all have uh",
    "start": "368599",
    "end": "374120"
  },
  {
    "text": "one of these devices you know uh basically one of the great things about this is it knows where you are right it",
    "start": "374120",
    "end": "379440"
  },
  {
    "text": "has a GPS in it and so uh it can actually communicate geoc coordinates and what that means is that application",
    "start": "379440",
    "end": "385960"
  },
  {
    "text": "content can now actually be tailored to your location right and what you often times do with this",
    "start": "385960",
    "end": "393240"
  },
  {
    "text": "data is you may uh if someone invokes a search or if someone's looking for some content you're going to do your search",
    "start": "393240",
    "end": "400319"
  },
  {
    "text": "and then filter It Down based on the data that's most contextual based on your location and so you know with some",
    "start": "400319",
    "end": "406560"
  },
  {
    "text": "of the examples of this you know we have local shops or merchants or attractions right if you're walking around San Francisco and you search for burritos it",
    "start": "406560",
    "end": "414199"
  },
  {
    "text": "doesn't do a whole lot of good to show you burrito stands uh in San Jose right so you're want to search for those",
    "start": "414199",
    "end": "422440"
  },
  {
    "text": "establishments that are close by and then likewise with news and events right if you're if you have an automated news",
    "start": "422440",
    "end": "428120"
  },
  {
    "text": "feed uh something along those lines uh it probably makes sense to show you the News That's most relevant to you right",
    "start": "428120",
    "end": "434039"
  },
  {
    "text": "obviously we do want to follow international news we want to follow national news but it's also nice to have some local news put in there uh anybody",
    "start": "434039",
    "end": "441000"
  },
  {
    "text": "who's used social networking and I'm sure most of us in this room have uh you can also do some very interesting things",
    "start": "441000",
    "end": "446720"
  },
  {
    "text": "with image uh and location right so if you take a picture snap a photo with your friends at dinner uh the photo",
    "start": "446720",
    "end": "453319"
  },
  {
    "text": "photo app that you use on your phone will tag it with the geoc coordinates and then you can begin to build applications that let you uh you know do",
    "start": "453319",
    "end": "460720"
  },
  {
    "text": "things like show you all the photos from your birthday in San Francisco right can actually it can actually use location to",
    "start": "460720",
    "end": "465759"
  },
  {
    "text": "show you the the relevant content so what do we mean by a recommendation engine so a recommendation engine uh",
    "start": "465759",
    "end": "471639"
  },
  {
    "start": "467000",
    "end": "569000"
  },
  {
    "text": "similar to the location based content the recommendation engine is actually going to try and choose content that it",
    "start": "471639",
    "end": "477800"
  },
  {
    "text": "feels like you will like or that going to respond well to and uh you know we've",
    "start": "477800",
    "end": "483120"
  },
  {
    "text": "all seen this right uh advertising on on the sides of of websites or mobile apps",
    "start": "483120",
    "end": "489319"
  },
  {
    "text": "uh tends to be based on information that is available in the cookie that is used",
    "start": "489319",
    "end": "494919"
  },
  {
    "text": "to determine which ads to show you right uh but there's other sort of ways that you can use this right uh again going",
    "start": "494919",
    "end": "501479"
  },
  {
    "text": "back to our restaurant example uh if you're walking around San Francisco and",
    "start": "501479",
    "end": "506720"
  },
  {
    "text": "uh it's 12:00 noon hey maybe show you a list of restaurants that are local to",
    "start": "506720",
    "end": "511919"
  },
  {
    "text": "where you are right that would be an algorithmic way of generating a recommendation and that's a very simple",
    "start": "511919",
    "end": "517599"
  },
  {
    "text": "example and you you can do quite a lot of fancy things with algorithmic recommendations but generally what happens is the logic the if else logic",
    "start": "517599",
    "end": "523719"
  },
  {
    "text": "as you start to you know analyze multiple uh attributes gets really complex and to solve that problem uh",
    "start": "523719",
    "end": "532200"
  },
  {
    "text": "you'll generally switch to something like a machine learning Model A predictive model and so you can see in that ex second example there here we're",
    "start": "532200",
    "end": "539040"
  },
  {
    "text": "basically saying if I get an input of a male who's between the ages of 18 to 25",
    "start": "539040",
    "end": "545160"
  },
  {
    "text": "with a food budget of $10 to $20 uh and he just searched for a restaurant called Taco Time let's",
    "start": "545160",
    "end": "551760"
  },
  {
    "text": "predict how well they're going to like that restaurant in this case we're saying the predicted class is three stars and the probability uh of that",
    "start": "551760",
    "end": "560320"
  },
  {
    "text": "prediction being accurate is you know almost 50% right so this is just an example of what you can do with with",
    "start": "560320",
    "end": "567519"
  },
  {
    "text": "these recommendation engines so now now that we know what uh location awareness is and recommendations engines are let's",
    "start": "567519",
    "end": "573720"
  },
  {
    "start": "569000",
    "end": "606000"
  },
  {
    "text": "talk about our app requirements so uh we want to you know obviously uh do",
    "start": "573720",
    "end": "579200"
  },
  {
    "text": "searching uh based on location so simple requirement the user should be able to",
    "start": "579200",
    "end": "584920"
  },
  {
    "text": "search for local businesses on their mobile device uh and these are the terms right they would search by the name by",
    "start": "584920",
    "end": "590760"
  },
  {
    "text": "the address by the description and then by keywords right keywords are just a random assortment of sort of key value",
    "start": "590760",
    "end": "596720"
  },
  {
    "text": "pairs that we're going to ascribe uh to this data and as we mentioned in the previous",
    "start": "596720",
    "end": "602000"
  },
  {
    "text": "slide we want those search results to actually be location aware we're going to filter the results so we're going to",
    "start": "602000",
    "end": "607360"
  },
  {
    "start": "606000",
    "end": "642000"
  },
  {
    "text": "execute a query and then we're going to filter the uh query results by location",
    "start": "607360",
    "end": "612519"
  },
  {
    "text": "and generally when you do this there's a number of different ways you can do uh Geo filtering uh but one very common way",
    "start": "612519",
    "end": "617600"
  },
  {
    "text": "and one that's sort of simple to understand is uh imagine drawing a rectangle on a map and then taking the",
    "start": "617600",
    "end": "623760"
  },
  {
    "text": "diagonal of the rectangle so in this case we're going to take an XY coordinate from the top right and an XY coordinate from the bottom left we draw",
    "start": "623760",
    "end": "630279"
  },
  {
    "text": "a diagonal and basically we're going to show all of the results that have geoc coordinates within that rectangle that's called polygon Geo filtering there's",
    "start": "630279",
    "end": "636560"
  },
  {
    "text": "other sort of fancier things that you can do with circles and Geo proximity but for this should work really well for",
    "start": "636560",
    "end": "642320"
  },
  {
    "start": "642000",
    "end": "742000"
  },
  {
    "text": "the recommendation piece we want our recommendations to be based on a predictive model so in other words we're",
    "start": "642320",
    "end": "647399"
  },
  {
    "text": "going to actually use application data that we're generating as users are interacting with the application uh",
    "start": "647399",
    "end": "653560"
  },
  {
    "text": "we're going to store it and then we're going to use that to train a model using uh machine learning we want the user",
    "start": "653560",
    "end": "659639"
  },
  {
    "text": "registration process to feel sort of non-intrusive you know nowadays uh privacy tends to be a big concern in",
    "start": "659639",
    "end": "664959"
  },
  {
    "text": "fact it's a little Eerie sometimes with some of these uh you know digital marketing campaigns of how well they seem to be able to Target you uh so we",
    "start": "664959",
    "end": "671680"
  },
  {
    "text": "don't want our our users to feel you know like we're we're really asking them for lots of personal information so we're going to keep it pretty simple",
    "start": "671680",
    "end": "677399"
  },
  {
    "text": "we're basically going to ask for their email address their gender their age group and this will just be a a a",
    "start": "677399",
    "end": "683000"
  },
  {
    "text": "grouping of Ages like a binning of Ages not a specific age or a birthday and then a postal code and you know in the",
    "start": "683000",
    "end": "688600"
  },
  {
    "text": "real world when you're doing machine learning these may or may not have any correlation to what we're trying to do but for the purposes of of just you know",
    "start": "688600",
    "end": "694519"
  },
  {
    "text": "demonstration and education uh we can assume that we've done some analysis and we know uh from our analysis that these",
    "start": "694519",
    "end": "700800"
  },
  {
    "text": "tend to be correlated to the way uh users are going to respond to our our",
    "start": "700800",
    "end": "705880"
  },
  {
    "text": "campaigns uh the recommendations are going to be offers from local Merchants right so you know users are walking around they're searching our app and uh",
    "start": "705880",
    "end": "712839"
  },
  {
    "text": "we're going to promote some uh search results uh that that have special offers from local merchants",
    "start": "712839",
    "end": "719600"
  },
  {
    "text": "uh and the last Point here this is really what what's key to actually making the machine learning model work",
    "start": "719600",
    "end": "724720"
  },
  {
    "text": "which is we need to be able to track who clicks on the offer and then possibly",
    "start": "724720",
    "end": "729839"
  },
  {
    "text": "even if we can work something out with a vendor or we have some payment scheme through our app how many of them actually convert on the offer right so",
    "start": "729839",
    "end": "735320"
  },
  {
    "text": "it's one thing to click on it it's another thing to actually um you know actually go in then buy the the offer",
    "start": "735320",
    "end": "741279"
  },
  {
    "text": "itself but now let's get into Data modeling right so just like any other application we've got our requirements",
    "start": "741279",
    "end": "747480"
  },
  {
    "start": "742000",
    "end": "755000"
  },
  {
    "text": "uh we now need to essentially figure out what type of data are we going to store what does that data look like how does",
    "start": "747480",
    "end": "753440"
  },
  {
    "text": "that data behave one of the things that you're going to do and this is again nothing nothing new here right these these are things that software Engineers",
    "start": "753440",
    "end": "759720"
  },
  {
    "start": "755000",
    "end": "841000"
  },
  {
    "text": "have been doing for decades uh first thing is you you want to characterize your data right you want to look at your",
    "start": "759720",
    "end": "764959"
  },
  {
    "text": "data and and decide well what type of data is it so in our case our location",
    "start": "764959",
    "end": "770399"
  },
  {
    "text": "data so these are the places that we're going to be displaying in the search results of our application uh I think it's safe to say",
    "start": "770399",
    "end": "777320"
  },
  {
    "text": "that it's structured right you know we we saw with the Search terms uh that we were going to have a name and we were going to have an address we're going to",
    "start": "777320",
    "end": "783720"
  },
  {
    "text": "have the geoc coordinates we're going to have some keywords arguably you could say that's that's fairly structured data",
    "start": "783720",
    "end": "789959"
  },
  {
    "text": "uh it's mutable right it's going to change over time right if someone someone you know puts in a a location uh",
    "start": "789959",
    "end": "796160"
  },
  {
    "text": "maybe the name changes uh maybe it goes out of business right so we're going to do updates on that data uh and we have",
    "start": "796160",
    "end": "801440"
  },
  {
    "text": "some onet to many relationships right so we have this this keywords uh where basically for any location we can have",
    "start": "801440",
    "end": "806839"
  },
  {
    "text": "you know one or more zero or more keywords then we have the clickstream data and this is a little different so this is",
    "start": "806839",
    "end": "813320"
  },
  {
    "text": "really semi-structured right it's going to be emitted as Json so there's some structure that's applied by the Json but",
    "start": "813320",
    "end": "820079"
  },
  {
    "text": "it's likely not going to be fixed right over time we may add attributes to Json",
    "start": "820079",
    "end": "825120"
  },
  {
    "text": "we may change attributes to the Json uh and the the second point is really the the more important of the two is it's",
    "start": "825120",
    "end": "831160"
  },
  {
    "text": "immutable right there makes no sense to go back and update an event that already occurred right we're just doing an append only operation here it's",
    "start": "831160",
    "end": "837240"
  },
  {
    "text": "basically we're just keeping a a journal log of these events you know if this was",
    "start": "837240",
    "end": "842480"
  },
  {
    "start": "841000",
    "end": "914000"
  },
  {
    "text": "15 years ago let's say maybe even as recently as 10 years ago a software engineer I used to be a software",
    "start": "842480",
    "end": "847600"
  },
  {
    "text": "engineer in my past life did a lot of this type of application development I'd sit down and I'd build an ER model right",
    "start": "847600",
    "end": "853079"
  },
  {
    "text": "I'd sit down and I'd say okay so here are my uh here's my location data uh I'm going to Define an entity called a place",
    "start": "853079",
    "end": "861000"
  },
  {
    "text": "the place is going to have a primary key it's going to have a name it's going to have a description uh we're going to",
    "start": "861000",
    "end": "866600"
  },
  {
    "text": "have a type that may be like restaurant store wine store something like that you know controlled vocabulary so we're",
    "start": "866600",
    "end": "873240"
  },
  {
    "text": "going to normalize that into a type table uh we're going to have our keywords right so this is a onet to many",
    "start": "873240",
    "end": "879199"
  },
  {
    "text": "relationship between place and keyword and so for each place you can have zero or more",
    "start": "879199",
    "end": "885120"
  },
  {
    "text": "keywords uh we're going to have our location so this is where we're going to store the latitude and the longitude uh",
    "start": "885120",
    "end": "890959"
  },
  {
    "text": "and then off the location we'll have the address right makes sense to keep the address and location kind of in a in a set of related entities a lot of",
    "start": "890959",
    "end": "897320"
  },
  {
    "text": "different ways you can model this I didn't didn't intend this to be sort of the the canonical way of doing this but",
    "start": "897320",
    "end": "902800"
  },
  {
    "text": "uh I think you know in general it's going to look something like this and and this works great right you know in the relational world uh this this will",
    "start": "902800",
    "end": "909880"
  },
  {
    "text": "serve you pretty well uh but let's take a look at this in a slightly different way what if we looked at this instead of",
    "start": "909880",
    "end": "916639"
  },
  {
    "start": "914000",
    "end": "952000"
  },
  {
    "text": "a ER model but instead as a document model so again here we have some Json",
    "start": "916639",
    "end": "922079"
  },
  {
    "text": "and you can say see we essentially have the same set of attributes that we're storing in our ER model and we even have",
    "start": "922079",
    "end": "928120"
  },
  {
    "text": "the same Rel ships right uh you you can see uh that you know keywords is an",
    "start": "928120",
    "end": "934480"
  },
  {
    "text": "array I can have you know zero or more of those right that's the one to many uh",
    "start": "934480",
    "end": "939560"
  },
  {
    "text": "we have the notion of a a subobject in a location that has the address and the geocoordinate embedded in it so you know",
    "start": "939560",
    "end": "946319"
  },
  {
    "text": "we're really representing the data in in a similar way uh but instead of using tables we're using a document what's the",
    "start": "946319",
    "end": "952800"
  },
  {
    "start": "952000",
    "end": "1072000"
  },
  {
    "text": "advantage of of using a document model in our our case here well the ER model",
    "start": "952800",
    "end": "958279"
  },
  {
    "text": "is normalized uh which you know has some advantages uh but the disadvantages are that you now",
    "start": "958279",
    "end": "964199"
  },
  {
    "text": "have lots of tables that you need to join together in order to get your your results uh it's transactional right",
    "start": "964199",
    "end": "969560"
  },
  {
    "text": "every table has a key uh you could conceivably do an update to all of the entities that comprise a place right you",
    "start": "969560",
    "end": "975519"
  },
  {
    "text": "could update the place the address the location and the keywords in a single transaction uh if you're using an",
    "start": "975519",
    "end": "981279"
  },
  {
    "text": "rdbms um search though if we wanted to search on on any potential attribute",
    "start": "981279",
    "end": "987319"
  },
  {
    "text": "we're going to basically end up indexing ing almost every column in every table",
    "start": "987319",
    "end": "993120"
  },
  {
    "text": "uh and in relational databases that gets expensive right uh and then the fourth point is is really significant you know",
    "start": "993120",
    "end": "1000079"
  },
  {
    "text": "over time we may evolve our app in fact it's likely that we will right we may decide you know what um you know we we've we modeled Place pretty well but",
    "start": "1000079",
    "end": "1007399"
  },
  {
    "text": "it doesn't handle attractions very well like we also want to have you know museums and zoos and other things that",
    "start": "1007399",
    "end": "1013560"
  },
  {
    "text": "aren't really the same as like a merchant based Place well now all of a sudden you know we're we're faced with having to actually you know change our",
    "start": "1013560",
    "end": "1019680"
  },
  {
    "text": "schema and that can be costly and expensive in the document model we're non-normalized so we're going to have",
    "start": "1019680",
    "end": "1025360"
  },
  {
    "text": "some data redundancy right uh we're not going to have the D duplication that you get from normalization uh but we can add",
    "start": "1025360",
    "end": "1032120"
  },
  {
    "text": "attributes without schema change that's really a key Point here in that you know we can create a new type of place that",
    "start": "1032120",
    "end": "1038918"
  },
  {
    "text": "has all or none of the attributes as other places maybe we keep the primary key and we keep the keywords but you",
    "start": "1038919",
    "end": "1045798"
  },
  {
    "text": "know we could we can make it completely different uh and then the third point and this is something we'll talk about when we go into the actual architecture",
    "start": "1045799",
    "end": "1052360"
  },
  {
    "text": "of this is uh using some of the technologies that we offer uh at AWS you can actually very easily index the",
    "start": "1052360",
    "end": "1059280"
  },
  {
    "text": "entire document and make it you know really searchable and most importantly you can",
    "start": "1059280",
    "end": "1065240"
  },
  {
    "text": "make it searchable not only by keywords and you know text Bas attributes but also geoc coordinates and that's exactly",
    "start": "1065240",
    "end": "1071240"
  },
  {
    "text": "what we're going to do now that we know what our data is and how to characterize it let's talk a little bit about data",
    "start": "1071240",
    "end": "1077520"
  },
  {
    "start": "1072000",
    "end": "1082000"
  },
  {
    "text": "collection and storage and here's where we're we're going to start talking about the actual AWS services so when we look at our data we've got transactional data",
    "start": "1077520",
    "end": "1084559"
  },
  {
    "start": "1082000",
    "end": "1297000"
  },
  {
    "text": "which uh you know is the typical oltp uh type data can also be document based as we just saw uh we have file data uh",
    "start": "1084559",
    "end": "1092400"
  },
  {
    "text": "those are log files typically uh they could be images they could be other you know file bases and then we have stream",
    "start": "1092400",
    "end": "1098600"
  },
  {
    "text": "data and you see stream data quite a bit with Internet of Things uh as well as the clickstream data that we need to",
    "start": "1098600",
    "end": "1104280"
  },
  {
    "text": "actually uh obtain in our app and so if we look at that top line up there we have our our apps you know we're going",
    "start": "1104280",
    "end": "1111080"
  },
  {
    "text": "to build a mobile app but it's going to talk to an app server and a web server right the way the mobile app architecture works is you usually have",
    "start": "1111080",
    "end": "1116240"
  },
  {
    "text": "it you know hit a bunch of API endpoints that you're hosting on on web servers uh and those are really going to be",
    "start": "1116240",
    "end": "1121799"
  },
  {
    "text": "transactional systems right they're going to they're going to be reading and writing data from transactional databases like Amazon RDS and Dynamo DB",
    "start": "1121799",
    "end": "1128880"
  },
  {
    "text": "well which one do we choose uh well if we start with the RDS model and we use our ER diagram uh that would work pretty",
    "start": "1128880",
    "end": "1135440"
  },
  {
    "text": "well uh there are some gaps in what you'll be able to quer out of RDS uh",
    "start": "1135440",
    "end": "1140480"
  },
  {
    "text": "directly right you would have to use a plugin like the postgis plugin to do geo queries but you can do it right works",
    "start": "1140480",
    "end": "1146520"
  },
  {
    "text": "works well if we do Dynamo DB uh the document based model works really well so we can easily store our document in",
    "start": "1146520",
    "end": "1152480"
  },
  {
    "text": "there uh we also have a gap there though too right Dynamo does not have built in a geoquery support uh but there are ways",
    "start": "1152480",
    "end": "1159400"
  },
  {
    "text": "that we can combine Dynamo with other services to get that rich query capability why would you choose one over",
    "start": "1159400",
    "end": "1165520"
  },
  {
    "text": "the other well uh in this case we're concerned with scale scale right we're hoping that our app goes from an install",
    "start": "1165520",
    "end": "1171559"
  },
  {
    "text": "base of several thousand to several million right we're going to potentially have users all over the world scaling",
    "start": "1171559",
    "end": "1176679"
  },
  {
    "text": "that on RDS is going to be tricky right you'll it'll work up to a point but eventually you're going to be running the biggest fastest instance type and",
    "start": "1176679",
    "end": "1183919"
  },
  {
    "text": "there's just no place else you can go uh and when that happens you end up in this sort of means of needing to scale",
    "start": "1183919",
    "end": "1189400"
  },
  {
    "text": "horizontally which means charting your database that basically means putting subsets of data across different database instances and if you're going",
    "start": "1189400",
    "end": "1196280"
  },
  {
    "text": "to go horizontal scaling I would argue you're in no SQL territory right if horizontal scaling is what you need then",
    "start": "1196280",
    "end": "1201679"
  },
  {
    "text": "you really should look at no SQL so we're going to choose Dynamo DB for this uh it's also worth mentioning that IM mutable clickstream data is really",
    "start": "1201679",
    "end": "1209480"
  },
  {
    "text": "really great to store in Dynamo right you can basically do a pendon operations into Dynamo uh it's also going to scale",
    "start": "1209480",
    "end": "1216440"
  },
  {
    "text": "really really well right uh it can handle you know however much right uh",
    "start": "1216440",
    "end": "1221480"
  },
  {
    "text": "units you can throw at a right capacity you can throw at it let's now look at the entire ecosystem because there's a few other uh services that we we should",
    "start": "1221480",
    "end": "1229000"
  },
  {
    "text": "consider for this uh so on the left hand side you can see all of the sources of data right that's what we call data",
    "start": "1229000",
    "end": "1234799"
  },
  {
    "text": "collection so we've got the app servers and the web servers that we just talked about we've got mobile devices possibly",
    "start": "1234799",
    "end": "1240320"
  },
  {
    "text": "iot devices um we have log emitters right you have all kinds of of log servers uh CIS logd and others that can",
    "start": "1240320",
    "end": "1246919"
  },
  {
    "text": "basically stream log data all day long uh and then you may even have some apps that are collecting data and so if we",
    "start": "1246919",
    "end": "1253280"
  },
  {
    "text": "look at you know how this works you can see from the transactional side uh with",
    "start": "1253280",
    "end": "1258360"
  },
  {
    "text": "d D and RDS uh we can basically use those as data sources for lots of",
    "start": "1258360",
    "end": "1264720"
  },
  {
    "text": "different analytical uh tools right we could uh extract transform and load it",
    "start": "1264720",
    "end": "1270520"
  },
  {
    "text": "into an MPP type system like red shift or presso those are data warehouses uh Hive in some ways could also be",
    "start": "1270520",
    "end": "1276720"
  },
  {
    "text": "considered a data warehouse although it runs on top of the Hadoop uh framework um you can do spark which is a uh",
    "start": "1276720",
    "end": "1282799"
  },
  {
    "text": "basically an alternative uh to map ruce uh that that allows you to you know",
    "start": "1282799",
    "end": "1288240"
  },
  {
    "text": "process data in parallel batch processing uh we have a service called Lambda you can stream data into Lambda",
    "start": "1288240",
    "end": "1293840"
  },
  {
    "text": "and we're going to talk a lot about Lambda uh today as we go through this and then finally for the stream data",
    "start": "1293840",
    "end": "1299400"
  },
  {
    "text": "right uh typically there you're going to do streaming analysis right so you're going to do something like spark streaming Lambda uh or a Kinesis uh",
    "start": "1299400",
    "end": "1307559"
  },
  {
    "text": "client application which is basically an application that uses a a special library that has some features that make",
    "start": "1307559",
    "end": "1313720"
  },
  {
    "text": "it easy to process data off a Kinesis stream and so in our case uh you know",
    "start": "1313720",
    "end": "1319159"
  },
  {
    "text": "we're we're going to be dealing both with stream data that's going to be our click stream data and we'll be using Kinesis uh to handle that and uh we'll",
    "start": "1319159",
    "end": "1326640"
  },
  {
    "text": "we'll be um using redshift uh to basically uh analyze the clickstream",
    "start": "1326640",
    "end": "1332279"
  },
  {
    "text": "results and as an input into machine learning so uh red shift is a a very",
    "start": "1332279",
    "end": "1337559"
  },
  {
    "text": "nice system for doing kind of ad hoc analysis ad hoc queries we're going to use that uh to basically sift through",
    "start": "1337559",
    "end": "1343400"
  },
  {
    "text": "our clickstream data and then build our machine learning model we're going to use Dynamo DB uh to store everything",
    "start": "1343400",
    "end": "1348880"
  },
  {
    "text": "else right and in fact with Kinesis one really nice feature Kinesis is you get a multicast type of effect we can actually",
    "start": "1348880",
    "end": "1355400"
  },
  {
    "text": "have Kinesis send data to multiple places uh and that's exactly what we're going to do here why transactional data",
    "start": "1355400",
    "end": "1362559"
  },
  {
    "start": "1361000",
    "end": "1383000"
  },
  {
    "text": "storage for our app well we need High throughput uh it's going to be read write and update intensive right we're",
    "start": "1362559",
    "end": "1367679"
  },
  {
    "text": "not probably not going to do any updates but we're definitely doing reads and wres uh and again if if this application takes off and we have an install base of",
    "start": "1367679",
    "end": "1374039"
  },
  {
    "text": "you know a million different users uh you know on different mobile devices we could possibly have you know High",
    "start": "1374039",
    "end": "1379520"
  },
  {
    "text": "concurrency uh and then of course we need availability speed and recoverability Dynamo DB supports all of",
    "start": "1379520",
    "end": "1385120"
  },
  {
    "start": "1383000",
    "end": "1409000"
  },
  {
    "text": "this so uh again we'll go into the details of of you know how Dynamo works and how it stores data in the next",
    "start": "1385120",
    "end": "1390799"
  },
  {
    "text": "presentation but uh for the purposes of this discussion just know that uh we can store our documents in there um we're",
    "start": "1390799",
    "end": "1397360"
  },
  {
    "text": "going to be able to scale uh we can get consistent latencies uh for reads and writs uh highly available right we copy",
    "start": "1397360",
    "end": "1404520"
  },
  {
    "text": "copy data to three different availability zones within the region and the API is simple and easy to use one",
    "start": "1404520",
    "end": "1410120"
  },
  {
    "start": "1409000",
    "end": "1451000"
  },
  {
    "text": "other feature that uh hasn't been mentioned yet that we will be using extensively to build this is something",
    "start": "1410120",
    "end": "1415159"
  },
  {
    "text": "called Dynamo DB streams so it's a a relatively new feature uh been out for",
    "start": "1415159",
    "end": "1420440"
  },
  {
    "text": "six months or so maybe a little longer uh really really cool feature this basically allows you to capture a uh",
    "start": "1420440",
    "end": "1426960"
  },
  {
    "text": "change set from your Dynamo table so if you enable this on your table any insert or update of data in your table is going",
    "start": "1426960",
    "end": "1434080"
  },
  {
    "text": "to be captured in the Stream and then you can process that and uh you'll see I think I have a a slide coming up in the",
    "start": "1434080",
    "end": "1439760"
  },
  {
    "text": "next slide or two uh this really unlocks a couple of of powerful uh architectural patterns that that work really well and",
    "start": "1439760",
    "end": "1446559"
  },
  {
    "text": "they'll and and one and this pattern will be how we solve the searching uh issue with with Dynamo generally what",
    "start": "1446559",
    "end": "1452480"
  },
  {
    "start": "1451000",
    "end": "1540000"
  },
  {
    "text": "you'll do with streams is you're going to combine them with Lambda right so Lambda is a way of executing functions",
    "start": "1452480",
    "end": "1458760"
  },
  {
    "text": "uh without having to run any compute you just upload your code to us and we run the function for you we scale all the",
    "start": "1458760",
    "end": "1464720"
  },
  {
    "text": "compute out the back end you never actually have to touch an ec2 instance and Lambda has various event sources",
    "start": "1464720",
    "end": "1472320"
  },
  {
    "text": "they're called and Dynamo DB streams are one of those event sources so basically you create the stream on the table",
    "start": "1472320",
    "end": "1477760"
  },
  {
    "text": "enable the stream and then you write a Lambda function that's bound to the stream as an event source and so every",
    "start": "1477760",
    "end": "1483399"
  },
  {
    "text": "time there are events that are being put into the stream the Lambda function is going to execute and what we've seen",
    "start": "1483399",
    "end": "1491279"
  },
  {
    "text": "customers doing more and more here is if you look at that middle uh Dynamo DB uh",
    "start": "1491279",
    "end": "1497840"
  },
  {
    "text": "no se line there you can see with Dynamo DB streams and Lambda I can do some very",
    "start": "1497840",
    "end": "1504039"
  },
  {
    "text": "interesting things I can basically materialize some of my Dynamo data into say elasticache or to search in this",
    "start": "1504039",
    "end": "1511640"
  },
  {
    "text": "case we're showing Cloud search on the uh slide but I'm actually going to use the Amazon elastic search and that's how",
    "start": "1511640",
    "end": "1517360"
  },
  {
    "text": "we're basically going to in this application uh search our location data",
    "start": "1517360",
    "end": "1523600"
  },
  {
    "text": "effectively right we're going to store it in Dynamo because we want the durability and the availability and just the the concurrency and the scalability",
    "start": "1523600",
    "end": "1530000"
  },
  {
    "text": "of Dynamo but we're gonna actually Farm all the searching off to Cloud search and we're going to use Dynamo bdb",
    "start": "1530000",
    "end": "1536360"
  },
  {
    "text": "streams and Lambda to do this and I'm actually going to show a demo of how this works okay let's talk a little bit about the event stream now so we've got",
    "start": "1536360",
    "end": "1542960"
  },
  {
    "start": "1540000",
    "end": "1650000"
  },
  {
    "text": "this click stream data um you know this is sort of again this is important for our application but it's not something the user is going to interact with this",
    "start": "1542960",
    "end": "1548720"
  },
  {
    "text": "is more for us this is what we're really going to use to to build our analytics this is what we're going to use to you",
    "start": "1548720",
    "end": "1554120"
  },
  {
    "text": "know do our really great machine learning predictive models uh so Kinesis is perfect for that type of event stream",
    "start": "1554120",
    "end": "1560679"
  },
  {
    "text": "you can imagine you know users are clicking around in the application uh we want to capture all of that we may want",
    "start": "1560679",
    "end": "1565720"
  },
  {
    "text": "to do ab testing you know all the all the things that require you know having to know what the user is doing how they're interacting with the app uh and",
    "start": "1565720",
    "end": "1572679"
  },
  {
    "text": "Kinesis is uh well suited for this so basically uh all of your producers you",
    "start": "1572679",
    "end": "1579000"
  },
  {
    "text": "know essentially put data into a stream we have authorization and authentication on the stream so that's very nice you",
    "start": "1579000",
    "end": "1584679"
  },
  {
    "text": "can you can make this secure uh just as we do with Dynamo we're actually going to copy the data in the Stream to three",
    "start": "1584679",
    "end": "1591080"
  },
  {
    "text": "different availability zones so you have really good durability of your data and high availability of the Kinesis service",
    "start": "1591080",
    "end": "1597520"
  },
  {
    "text": "and then you can see on the on the end there what's what's great is we can actually direct the data from that stream to lots of different places right",
    "start": "1597520",
    "end": "1604200"
  },
  {
    "text": "we could put it into S3 we could do realtime dashboards if we wanted to you know how much activity are we seeing on",
    "start": "1604200",
    "end": "1610440"
  },
  {
    "text": "the app right now uh which offers are are performing better than others right",
    "start": "1610440",
    "end": "1615799"
  },
  {
    "text": "you might you might put the stream data back in Dynamo if you're doing that for example uh you can see the orange squares right beneath that that's",
    "start": "1615799",
    "end": "1621960"
  },
  {
    "text": "machine learning right you could actually send the Kinesis data to machine learning or you can send it to a data warehouse like red shift uh or",
    "start": "1621960",
    "end": "1628559"
  },
  {
    "text": "Hadoop so what we're going to do here is we're not going to send the data directly to the to the machine learning service you actually you can't send it",
    "start": "1628559",
    "end": "1634960"
  },
  {
    "text": "directly today machine learning takes a data source that has to be a file on S3 or a red shift uh database so what we're",
    "start": "1634960",
    "end": "1641080"
  },
  {
    "text": "going to do is we're going to send the stream data to S3 and to redshift and then once it's in redshift we'll be able",
    "start": "1641080",
    "end": "1647279"
  },
  {
    "text": "to create a data source that we can use to train a machine learning model Kinesis fire hose so this is a new",
    "start": "1647279",
    "end": "1652799"
  },
  {
    "start": "1650000",
    "end": "1759000"
  },
  {
    "text": "service uh announced this uh past November or October at reinvent uh and",
    "start": "1652799",
    "end": "1657919"
  },
  {
    "text": "really what Kinesis fire hose does is it just makes working with Kinesis easier right Kinesis is actually pretty simple",
    "start": "1657919",
    "end": "1663720"
  },
  {
    "text": "to work with on its own but you know if you're dealing with a a client application you generally have to learn",
    "start": "1663720",
    "end": "1668840"
  },
  {
    "text": "how to use the Kinesis client Library you have to run that code somewhere probably on an ec2 instance uh Lambda",
    "start": "1668840",
    "end": "1675000"
  },
  {
    "text": "has helped right running uh Lambda functions that that respond to kesa streams is is easier in my opinion you",
    "start": "1675000",
    "end": "1680399"
  },
  {
    "text": "don't have all the compute to worry about but you still have all that code to write so what what we've done with fire hose is we basically uh have uh",
    "start": "1680399",
    "end": "1688159"
  },
  {
    "text": "created just some automatic uh or fully managed pipelines for getting data to S3",
    "start": "1688159",
    "end": "1693880"
  },
  {
    "text": "and redshift using Kinesis under the hood so you don't need to write any client library or Lambda functions right",
    "start": "1693880",
    "end": "1700519"
  },
  {
    "text": "you just go into the console you enable your stream uh rather your fire hose uh it's in the same console as a Kinesis",
    "start": "1700519",
    "end": "1706919"
  },
  {
    "text": "console and then you can tell it send the output to S3 send it to Red shift and you give it some information about",
    "start": "1706919",
    "end": "1713000"
  },
  {
    "text": "you know which S3 bucket you want to go to which red shift cluster you want to go to uh we scale it for you so whether",
    "start": "1713000",
    "end": "1718480"
  },
  {
    "text": "you have a trickle of data coming in and then a you know a tital wave you know we'll we'll handle all that for you so again splitting shards and all the",
    "start": "1718480",
    "end": "1724840"
  },
  {
    "text": "things that you can do manually with Kinesis are handled automatically by fire hose uh it's near real time so uh",
    "start": "1724840",
    "end": "1731480"
  },
  {
    "text": "we we make best effort to get the data into S3 or red shift within 60 seconds",
    "start": "1731480",
    "end": "1736519"
  },
  {
    "text": "of hitting the stream that's that's pretty fast right I mean I think um that means your data warehouse is is probably",
    "start": "1736519",
    "end": "1742240"
  },
  {
    "text": "uh just slightly eventually consistent and you know most data warehouses are eventually consistent to the tune of",
    "start": "1742240",
    "end": "1747840"
  },
  {
    "text": "sometimes 12 or 24 hours right you may load them once a day uh and then of course as I mentioned fully managed uh",
    "start": "1747840",
    "end": "1753880"
  },
  {
    "text": "you really don't have to do anything other than turn it on and then put data to the to the fire hose stream what is",
    "start": "1753880",
    "end": "1760080"
  },
  {
    "start": "1759000",
    "end": "1770000"
  },
  {
    "text": "machine learning uh you know we hear a lot about it self-driving cars you know there's movies that come out that have",
    "start": "1760080",
    "end": "1766080"
  },
  {
    "text": "all sorts of artificial intelligence based themes and characters in them and all of that to some extent is related to",
    "start": "1766080",
    "end": "1773279"
  },
  {
    "start": "1770000",
    "end": "1821000"
  },
  {
    "text": "machine learning but there are some important distinctions machine learning is really an offshoot of artificial intelligence which which is basically a",
    "start": "1773279",
    "end": "1780039"
  },
  {
    "text": "broad uh computer science discipline that essentially studies how machines can learn right uh off of machine",
    "start": "1780039",
    "end": "1787480"
  },
  {
    "text": "learning you do have things like Robotics and computer vision so th those would be you know some of the things you might see with like a self-driving car",
    "start": "1787480",
    "end": "1793880"
  },
  {
    "text": "uh and then on the right or you know your your left uh we have know Discovery and data mining and that and that's what",
    "start": "1793880",
    "end": "1800000"
  },
  {
    "text": "we're going to use here that that's sort of the classic uh you know you take a it's a called supervised machine",
    "start": "1800000",
    "end": "1805440"
  },
  {
    "text": "learning you take a known data set and you uh run it through uh a number of",
    "start": "1805440",
    "end": "1811480"
  },
  {
    "text": "different algorithms uh you can do uh decision tree algorithms you can do logistic regression uh and then you get",
    "start": "1811480",
    "end": "1817480"
  },
  {
    "text": "a model that comes out the other end and you can use that model to make predictions how does the model do this",
    "start": "1817480",
    "end": "1823000"
  },
  {
    "start": "1821000",
    "end": "1905000"
  },
  {
    "text": "right how does it generalize your data well an important concept is something known as segment",
    "start": "1823000",
    "end": "1828760"
  },
  {
    "text": "so you can see here this's a very simple example I've got a bunch of different colored circles I've got green circles",
    "start": "1828760",
    "end": "1834760"
  },
  {
    "text": "I've got yellow circles and I've got gray circles and then we have the target variable which in this case is yes or no",
    "start": "1834760",
    "end": "1840600"
  },
  {
    "text": "it's a binary variable we just want to know maybe we want to know is this person going to respond to this uh ad",
    "start": "1840600",
    "end": "1847120"
  },
  {
    "text": "that I serve them how do you how do you build a model around that well in this case we could say well let's see it looks like green",
    "start": "1847120",
    "end": "1853960"
  },
  {
    "text": "circles are always no the yellow circles are yes and no and the gray circles are",
    "start": "1853960",
    "end": "1859600"
  },
  {
    "text": "yes and yes so maybe we just split on color another way of of looking at this that that's exactly what we do here and",
    "start": "1859600",
    "end": "1864880"
  },
  {
    "text": "you can see okay yeah color color works pretty well right uh for the gray it's",
    "start": "1864880",
    "end": "1870480"
  },
  {
    "text": "always yes for the green it's always no and for the yellow it's mixed so we can call these pure uh selections right",
    "start": "1870480",
    "end": "1876919"
  },
  {
    "text": "meaning the the this is a this is a leaf node in the tree meaning every item on",
    "start": "1876919",
    "end": "1882200"
  },
  {
    "text": "that in that node has the same value for the Target variable that's good that's what you want right you want to try and",
    "start": "1882200",
    "end": "1888440"
  },
  {
    "text": "find the attributes that give you this pure splitting well this is a super simple example right what if we had 15",
    "start": "1888440",
    "end": "1894840"
  },
  {
    "text": "different attributes we were looking at you know it becomes impossible to do this uh you know manually you need to",
    "start": "1894840",
    "end": "1900200"
  },
  {
    "text": "use uh some mathematics and some algorithms to do it and that's exactly what machine learning does another way",
    "start": "1900200",
    "end": "1906440"
  },
  {
    "text": "to look at this is is through a linear model right you could say well here's all my pluses and minuses yes and NOS",
    "start": "1906440",
    "end": "1914120"
  },
  {
    "text": "across these two different dimensions can I draw a line that segments one set",
    "start": "1914120",
    "end": "1920080"
  },
  {
    "text": "of of uh outcomes from the other in this case yeah we can we can draw it right here and uh it it basically gives us a a",
    "start": "1920080",
    "end": "1927919"
  },
  {
    "text": "pure data set here and an almost pure data set there uh and this is the basis of logistic regression which is the type",
    "start": "1927919",
    "end": "1934559"
  },
  {
    "text": "of machine learning that Amazon machine learning does uh I could probably spend the next six hours talking about uh",
    "start": "1934559",
    "end": "1940039"
  },
  {
    "text": "machine learning uh it's a deep uh deep topic so uh we'll have to just sort of gloss over some of the details uh but uh",
    "start": "1940039",
    "end": "1947039"
  },
  {
    "text": "this is this is the the underlying principle behind it is you want to segment your data in a way that that",
    "start": "1947039",
    "end": "1952080"
  },
  {
    "text": "gives you uh the ability to take an unknown data point and categorize it uh",
    "start": "1952080",
    "end": "1957240"
  },
  {
    "text": "into one of these these nodes okay so Amazon machine learning uh easy to use completely managed right again no",
    "start": "1957240",
    "end": "1963519"
  },
  {
    "start": "1958000",
    "end": "2003000"
  },
  {
    "text": "compute that you need to run uh you just basically prepare your data set and feed it into machine learning uh you know we",
    "start": "1963519",
    "end": "1970720"
  },
  {
    "text": "do a lot of recommendations on you know the Amazon site I'm sure folks who've been shopping have seen that you know it",
    "start": "1970720",
    "end": "1976240"
  },
  {
    "text": "tends to pick products that uh you'd be likely to buy so a lot of this is based on you know our own experience doing",
    "start": "1976240",
    "end": "1981880"
  },
  {
    "text": "this at scale uh it can create models using data that's already stored in the cloud in our case we're going to use red",
    "start": "1981880",
    "end": "1988600"
  },
  {
    "text": "shift data and then uh finally once you have your model you want to use it to make predictions and so you can actually",
    "start": "1988600",
    "end": "1994519"
  },
  {
    "text": "deploy those models uh in seconds and then make you know thousands and thousands of predictions in real time on",
    "start": "1994519",
    "end": "2000360"
  },
  {
    "text": "the model and again you don't have to scale any of it we do it for you as a managed service right uh you know we've",
    "start": "2000360",
    "end": "2006480"
  },
  {
    "start": "2003000",
    "end": "2017000"
  },
  {
    "text": "battle hardened this based on our own experience uh it'll grow right you can start with a very small amount of data",
    "start": "2006480",
    "end": "2012639"
  },
  {
    "text": "and you can grow it to a very large amount of data where you're generating you know billions of predictions what does a workflow look like well you first",
    "start": "2012639",
    "end": "2019320"
  },
  {
    "start": "2017000",
    "end": "2071000"
  },
  {
    "text": "you build and you train your model uh then you evaluate and optimize and then once you've got a model that you feel is",
    "start": "2019320",
    "end": "2025320"
  },
  {
    "text": "working well you're going to use it to generate predictions uh this looks really simple uh I think anybody in the",
    "start": "2025320",
    "end": "2031000"
  },
  {
    "text": "room who's been you know working with data science will tell you you know it's really one and two are the hard part um",
    "start": "2031000",
    "end": "2036799"
  },
  {
    "text": "you know you first you need to understand your data you need to understand uh you know which data is",
    "start": "2036799",
    "end": "2042120"
  },
  {
    "text": "going to work best in a logistic regression type model uh and then you're probably going to iterate on the model a little bit right you're going to run it",
    "start": "2042120",
    "end": "2047919"
  },
  {
    "text": "you're going to look to see how well it performs uh the machine learning service has ways of evaluating your model and if",
    "start": "2047919",
    "end": "2052960"
  },
  {
    "text": "we have time during the demo I can show you what that looks like for a a multiclass model which we're using here",
    "start": "2052960",
    "end": "2058320"
  },
  {
    "text": "uh and then once you've got a working model you're going to use it to generate predictions and this can be an ongoing process right A lot of times your model",
    "start": "2058320",
    "end": "2063760"
  },
  {
    "text": "is going to get better the more data you have and so I've seen a lot of customers they'll nightly retrain their machine",
    "start": "2063760",
    "end": "2069560"
  },
  {
    "text": "learning models and push them out the next morning because it's a managed service and really there's not a lot of",
    "start": "2069560",
    "end": "2074919"
  },
  {
    "start": "2071000",
    "end": "2108000"
  },
  {
    "text": "other stuff you need to run you can very easily add it to an existing data flow so you could imagine if we had an application uh that's writing out events",
    "start": "2074919",
    "end": "2082000"
  },
  {
    "text": "to Dynamo DB um we could see hey maybe maybe our app is is sending updates",
    "start": "2082000",
    "end": "2087398"
  },
  {
    "text": "every every minute with the new geoc coordinates of the the person who's walking around with their phone we could",
    "start": "2087399",
    "end": "2092878"
  },
  {
    "text": "say oh we just got an update of the geoc coordinate let's actually do another prediction to see which offers this user",
    "start": "2092879",
    "end": "2099000"
  },
  {
    "text": "is going to respond to and you swap the the ads out you you you display a new set of offers so um really easy if you",
    "start": "2099000",
    "end": "2104720"
  },
  {
    "text": "use Lambda with this to to enable uh predictions that's uh basically all the Talking I have and uh we'll jump into a",
    "start": "2104720",
    "end": "2112079"
  },
  {
    "start": "2108000",
    "end": "2122000"
  },
  {
    "text": "demo now and and look at some source code and and actually see some working code assuming everything is still working I brought it up last night and",
    "start": "2112079",
    "end": "2118000"
  },
  {
    "text": "it looked good but with any live demo uh you know things can change this is our architecture right uh and you can see",
    "start": "2118000",
    "end": "2124800"
  },
  {
    "start": "2122000",
    "end": "2163000"
  },
  {
    "text": "it's almost serverless aside from red shift which is the only piece of compute that we're",
    "start": "2124800",
    "end": "2130119"
  },
  {
    "text": "running in our VPC and red shift is managed right you never have to log into the red shift instances or anything like",
    "start": "2130119",
    "end": "2135280"
  },
  {
    "text": "that but you do need to lay out a network put it in a VPC uh create the database every everything else is a",
    "start": "2135280",
    "end": "2140880"
  },
  {
    "text": "managed service right all this this sits in you know Amazon the the the region that you're in",
    "start": "2140880",
    "end": "2146079"
  },
  {
    "text": "the adabas region Dynamo DB elastic search S3 Kinesis fire hose and Lambda",
    "start": "2146079",
    "end": "2151440"
  },
  {
    "text": "so you know pretty pretty powerful stuff here you can actually build uh really rich apps uh without having to run much",
    "start": "2151440",
    "end": "2158680"
  },
  {
    "text": "compute at all so let's uh now take a look at the demo this is a a mapping",
    "start": "2158680",
    "end": "2165000"
  },
  {
    "start": "2163000",
    "end": "2203000"
  },
  {
    "text": "component uh partner of ours that makes a really nice JavaScript mapping component uh and you know let's pretend",
    "start": "2165000",
    "end": "2170280"
  },
  {
    "text": "that this is a a mobile app and and this will actually work in a in a mobile phone browser but uh you know probably",
    "start": "2170280",
    "end": "2175480"
  },
  {
    "text": "we'd be doing a native app and you can see when I when I loaded the page it actually showed me some search results",
    "start": "2175480",
    "end": "2181280"
  },
  {
    "text": "right you can see these little pins uh on the on the page what what we did was we basically just took that top right",
    "start": "2181280",
    "end": "2188160"
  },
  {
    "text": "and the bottom left so we we were able to compute what the geoc coordinate was uh from the top right and the bottom",
    "start": "2188160",
    "end": "2193319"
  },
  {
    "text": "left uh and then that's what we we Ed to filter the query results and I'll I'll SC I'll move around in here and show you",
    "start": "2193319",
    "end": "2198880"
  },
  {
    "text": "how how things change uh as we as we go to different areas uh we how did we know",
    "start": "2198880",
    "end": "2204240"
  },
  {
    "text": "to show San Francisco well you know we got the geoc coordinate and we basically centered it on San Francisco so these",
    "start": "2204240",
    "end": "2209599"
  },
  {
    "text": "are all just sort of common things that you do with location you're basically going to say well where is the person and now Center that you can either do a",
    "start": "2209599",
    "end": "2217160"
  },
  {
    "text": "a basic a circle based where you know you basically like you know Center them in this circumference uh or you can do a",
    "start": "2217160",
    "end": "2223319"
  },
  {
    "text": "poly polygon based and that's what we did uh so if I if I click on you know let me actually do a",
    "start": "2223319",
    "end": "2230599"
  },
  {
    "text": "search okay fantastic so it it searched and let's just make sure we really did get burger joints",
    "start": "2234119",
    "end": "2240400"
  },
  {
    "start": "2235000",
    "end": "2304000"
  },
  {
    "text": "here yeah Umami Burger there we go okay uh and uh you know we have this machine",
    "start": "2240400",
    "end": "2246079"
  },
  {
    "text": "learning if if I click on that it will show you uh the the uh the rating for that restaurant unfortunately I'm",
    "start": "2246079",
    "end": "2251920"
  },
  {
    "text": "getting a uh cross origin error when I click on that but I will show you it to few from the back end we'll actually run",
    "start": "2251920",
    "end": "2258119"
  },
  {
    "text": "the prediction from the back end so so how did we do this right the data was in Dynamo uh and yet I was able to search",
    "start": "2258119",
    "end": "2264480"
  },
  {
    "text": "on a keyword of burgers uh and then get a Geo filtered query back well so the real magic here is the Dynamo DB via",
    "start": "2264480",
    "end": "2272760"
  },
  {
    "text": "streams via Lambda to elastic search so let's actually look at at that",
    "start": "2272760",
    "end": "2279440"
  },
  {
    "text": "okay so here here is my Dynamo table can everybody see this let me actually make this a little",
    "start": "2305280",
    "end": "2310760"
  },
  {
    "text": "bigger so this is the uh the notion of a place that we put into Dynamo so we in",
    "start": "2311720",
    "end": "2316880"
  },
  {
    "text": "this case we're only storing restaurants again for the example I didn't didn't want to uh create you know too much",
    "start": "2316880",
    "end": "2322319"
  },
  {
    "text": "complexity and you can see you know pretty pretty similar to to the document I showed earlier right we have the the",
    "start": "2322319",
    "end": "2328200"
  },
  {
    "text": "type of cuisine in that case that's our keywords uh if I if I expand",
    "start": "2328200",
    "end": "2334119"
  },
  {
    "text": "this you can see in this case it's a Malaysian restaurant if we look at the location I've got my address and I've",
    "start": "2334359",
    "end": "2339960"
  },
  {
    "text": "got my geoc coordinates uh and so what we need to do yikes that's annoying what",
    "start": "2339960",
    "end": "2345880"
  },
  {
    "start": "2345000",
    "end": "2398000"
  },
  {
    "text": "we need to do is uh basically when we insert data into Dynamo we need it to go",
    "start": "2345880",
    "end": "2351079"
  },
  {
    "text": "into elastic search right so let me let me do that let me actually put some data into Dynamo",
    "start": "2351079",
    "end": "2358839"
  },
  {
    "text": "not a whole lot to look at here but what I'm doing is I'm I have a Json document a big old Json document that has a bunch of these restaurants in it and I'm",
    "start": "2385000",
    "end": "2391040"
  },
  {
    "text": "actually just you know using a simple node.js program uh to uh read through that list of restaurants and insert them",
    "start": "2391040",
    "end": "2397000"
  },
  {
    "text": "into Dynamo DB so as this is running what's happening is is that the the restaurants are being inserted into",
    "start": "2397000",
    "end": "2402440"
  },
  {
    "text": "Dynamo and uh the Dynamo DB stream is basically producing those uh those items",
    "start": "2402440",
    "end": "2409040"
  },
  {
    "text": "to the Lambda function right so i' I've inserted a bunch of restaurants I have streams enabled on the table those items",
    "start": "2409040",
    "end": "2415319"
  },
  {
    "text": "are being passed into a Lambda function and then the Lambda function calls elastic search and and has it index",
    "start": "2415319",
    "end": "2421480"
  },
  {
    "text": "items and we'll actually look at that code in a second but first let's see what's going on with Lambda",
    "start": "2421480",
    "end": "2427318"
  },
  {
    "start": "2448000",
    "end": "2471000"
  },
  {
    "text": "so what I'm doing now is I'm actually uh uh just going into the Lambda console this is just the Lambda console and we",
    "start": "2448520",
    "end": "2454720"
  },
  {
    "text": "have monitoring over here and you can see uh if I go to this link here view logs and cloudwatch this is going to",
    "start": "2454720",
    "end": "2459880"
  },
  {
    "text": "show me the Lambda function execution and it looks like I think it's",
    "start": "2459880",
    "end": "2465079"
  },
  {
    "text": "this guy right here this is our stream and again let me just make this",
    "start": "2465079",
    "end": "2470880"
  },
  {
    "text": "bigger you can kind of make out here uh you can see I here's my my data that was",
    "start": "2470920",
    "end": "2476240"
  },
  {
    "text": "passed in and then I actually did a a uh using the nodejs SDK for elastic search",
    "start": "2476240",
    "end": "2482200"
  },
  {
    "text": "I actually just did a an index operation right what you do is you basically uh and again we'll look at the source code in a second",
    "start": "2482200",
    "end": "2487920"
  },
  {
    "text": "but it's it's real basic I essentially just said hey here's my Json now index it uh there's a little bit of magic you",
    "start": "2487920",
    "end": "2494520"
  },
  {
    "text": "need to do under the hood to tell elastic search which coordinates are actually Geo based uh but that's",
    "start": "2494520",
    "end": "2500839"
  },
  {
    "text": "relatively easy to do you just set up what's called a mapping which essentially defines the part of your document that has the um the coordinates",
    "start": "2500839",
    "end": "2507280"
  },
  {
    "text": "in it uh so you know you can see this is working right we have a whole bunch of events here uh that you know correspond",
    "start": "2507280",
    "end": "2514480"
  },
  {
    "text": "to our data that we just we just loaded into uh Dynamo and then via streams got",
    "start": "2514480",
    "end": "2520560"
  },
  {
    "start": "2515000",
    "end": "2567000"
  },
  {
    "text": "to elastic search and you can see even here here's the operation right this is the URL of my elastic search server uh",
    "start": "2520560",
    "end": "2526680"
  },
  {
    "text": "and I'm basically doing a post and this is the payload of it okay so let's look at the code right",
    "start": "2526680",
    "end": "2532240"
  },
  {
    "text": "you know obviously uh I work for AWS you know uh is this easy to do is this hard",
    "start": "2532240",
    "end": "2537760"
  },
  {
    "text": "to do actually really easy to do",
    "start": "2537760",
    "end": "2542119"
  },
  {
    "start": "2567000",
    "end": "2647000"
  },
  {
    "text": "you know basically when you write a Lambda function and this is using node.js you can actually do this with Java and you can do it with python as",
    "start": "2567359",
    "end": "2573280"
  },
  {
    "text": "well uh but you create this Handler function and that's what passes in the",
    "start": "2573280",
    "end": "2579640"
  },
  {
    "text": "the data that you're going to that that's what hands you the data that you're going to process and so in this case uh I've got a couple of things that",
    "start": "2579640",
    "end": "2587160"
  },
  {
    "text": "I'm doing where I'm getting some config information um this is where uh the searching would occur right uh so when",
    "start": "2587160",
    "end": "2594559"
  },
  {
    "text": "I'm building my search uh query uh I'm doing it right here so when I typed in",
    "start": "2594559",
    "end": "2600720"
  },
  {
    "text": "burgers at the top of the uh the search box uh that we're we're hitting this",
    "start": "2600720",
    "end": "2605960"
  },
  {
    "text": "this here and you can see this is this filtering part right here is where I'm telling uh elastic search hey I'm going",
    "start": "2605960",
    "end": "2613240"
  },
  {
    "text": "to do a bounded box and here's my top left and bottom right sometimes it's you know top right and bottom left some you",
    "start": "2613240",
    "end": "2619760"
  },
  {
    "text": "know it moves around but in this case we're doing top left and bottom right and then we get the results back and I",
    "start": "2619760",
    "end": "2624960"
  },
  {
    "text": "just send back Json directly to uh the client and I'll show another I'll show exactly how I invoke the Lambda function",
    "start": "2624960",
    "end": "2631440"
  },
  {
    "text": "from the website let's look at the uh the stream processing piece",
    "start": "2631440",
    "end": "2637960"
  },
  {
    "start": "2647000",
    "end": "2738000"
  },
  {
    "text": "so what What's Happening Here is um in this case I'm processing the stream data and so the records are the collection of",
    "start": "2647079",
    "end": "2655680"
  },
  {
    "text": "restaurants that I just uploaded into Dynamo DB or inserted into Dynamo and what I'm doing is I'm basically just",
    "start": "2655680",
    "end": "2662280"
  },
  {
    "text": "taking the Dynamo uh wire format it's called if anybody here who worked with Dynamo it it it's basically a key value",
    "start": "2662280",
    "end": "2669119"
  },
  {
    "text": "format uh represented as Json but it has the data type embedded in it and I'm just turning it to regular old Json so",
    "start": "2669119",
    "end": "2677640"
  },
  {
    "text": "you know numbers have this n uh type attached to it strings have an S L's lists have an L again that's just the",
    "start": "2677640",
    "end": "2684960"
  },
  {
    "text": "Dynamo wire format all I'm doing is just creating a plain old uh Json document",
    "start": "2684960",
    "end": "2690960"
  },
  {
    "text": "right actually really it's just a JavaScript object that gets uh serialized to Json and then I call the",
    "start": "2690960",
    "end": "2697520"
  },
  {
    "text": "elastic search index operation on the client and I just pass in the body that's the restaurant and it takes care",
    "start": "2697520",
    "end": "2702559"
  },
  {
    "text": "of everything else and that that's how we that's how we do the do the search so how do we wire this all together though",
    "start": "2702559",
    "end": "2708640"
  },
  {
    "text": "right so I've got this Lambda function all right well this is firing a response to the streams but what about the search right I have this web application that's",
    "start": "2708640",
    "end": "2715240"
  },
  {
    "text": "actually needing to call Lambda how do you do that well let's take a look at that piece",
    "start": "2715240",
    "end": "2723318"
  },
  {
    "start": "2738000",
    "end": "2782000"
  },
  {
    "text": "so we have another service called API Gateway uh which basically allows you to",
    "start": "2738040",
    "end": "2743319"
  },
  {
    "text": "create public endpoints uh that are backed by code and",
    "start": "2743319",
    "end": "2749079"
  },
  {
    "text": "in this case they're backed by Lambda lamba function so my client application this case my my uh no uh it's a",
    "start": "2749079",
    "end": "2755720"
  },
  {
    "text": "JavaScript web application it runs entirely out of S3 so it's all JavaScript there's no",
    "start": "2755720",
    "end": "2761160"
  },
  {
    "text": "serers side code at all in the web in the website uh it'll actually call these",
    "start": "2761160",
    "end": "2766280"
  },
  {
    "text": "endpoints uh that I've exposed through API Gateway and you can see these are rest endpoints right so for search uh I",
    "start": "2766280",
    "end": "2773400"
  },
  {
    "text": "basically have essentially a get call that I've defined and if we look at",
    "start": "2773400",
    "end": "2779838"
  },
  {
    "text": "that uh this is this is basically what it looks like I have uh my integration you can see see my integration request",
    "start": "2781839",
    "end": "2788880"
  },
  {
    "start": "2782000",
    "end": "2833000"
  },
  {
    "text": "is Lambda so what that means is when the request comes in I'm just going to hand it off to Lambda and that was the code",
    "start": "2788880",
    "end": "2793920"
  },
  {
    "text": "we just looked at and then likewise when lambda's done it's going to send the response back to the client and uh you",
    "start": "2793920",
    "end": "2801240"
  },
  {
    "text": "know API Gateway is a topic in and of itself but basically I I generate the Json in the Lambda method uh and I just",
    "start": "2801240",
    "end": "2807800"
  },
  {
    "text": "pass it back out to the client uh let's actually just run this right so you can actually see this in action here if I go",
    "start": "2807800",
    "end": "2814040"
  },
  {
    "text": "uh to test oh I'm sorry I'm on the wrong one let's do",
    "start": "2814040",
    "end": "2819880"
  },
  {
    "text": "restaurants so in this case I don't have any geoc coordinates handy but I'm just going to run with a this one here I",
    "start": "2822800",
    "end": "2830520"
  },
  {
    "text": "click test and you can see this is the Json that comes back uh",
    "start": "2830520",
    "end": "2836760"
  },
  {
    "text": "and we've we've converted it uh and again you can do that very easily with API Gateway uh and this basically is the",
    "start": "2836760",
    "end": "2843000"
  },
  {
    "text": "format that the mapping uh component that I'm using needs in order to to place items on the map and so you can",
    "start": "2843000",
    "end": "2849800"
  },
  {
    "text": "see I I've got the you know name of the restaurant the description these are fixed right we decided to just use these",
    "start": "2849800",
    "end": "2856960"
  },
  {
    "text": "colors uh and then you know some information about the price and the restaurant and we need the the why do we",
    "start": "2856960",
    "end": "2863800"
  },
  {
    "text": "need these well these are the things that we feed into machine learning right and I can actually show you a prediction",
    "start": "2863800",
    "end": "2869559"
  },
  {
    "text": "uh let's do that right now that restaurant is 1591 so let's actually do a prediction",
    "start": "2869559",
    "end": "2876240"
  },
  {
    "text": "what the machine learning model needs is it needs the the restaurant that we're doing the prediction on and then it needs the user ID and it's from the user",
    "start": "2889280",
    "end": "2896480"
  },
  {
    "text": "information where I look up the things like the age group uh the budget preference the gender and those are what",
    "start": "2896480",
    "end": "2902800"
  },
  {
    "text": "are fed into the machine learning model and so what I'm doing now is I have this test user that I've set up in the system",
    "start": "2902800",
    "end": "2907839"
  },
  {
    "text": "and I'm going to I'm going to see how how much would this guy like restaurant 1591 based on machine",
    "start": "2907839",
    "end": "2915960"
  },
  {
    "text": "learning something happened here let's see what's going",
    "start": "2918000",
    "end": "2922480"
  },
  {
    "text": "on I must have put in a bad restaurant well let's uh let's jump into we can",
    "start": "2925880",
    "end": "2931799"
  },
  {
    "text": "actually look at the machine learning itself right in the console",
    "start": "2931799",
    "end": "2937039"
  },
  {
    "text": "let's take a look at how I built this model because you'll see you'll see the here we",
    "start": "2945119",
    "end": "2952960"
  },
  {
    "start": "2953000",
    "end": "3019000"
  },
  {
    "text": "go these These are the inputs into our model so um age budget Cuisine type",
    "start": "2953240",
    "end": "2960839"
  },
  {
    "text": "gender price that's the price of the restaurant and then the rating that's our Target variable right so what I did",
    "start": "2960839",
    "end": "2966400"
  },
  {
    "text": "was I built a data set that uh you know had a an even distribution of people of different ages different budget",
    "start": "2966400",
    "end": "2972640"
  },
  {
    "text": "preferences different Cuisines different genders and then given a given a restaurant so if I pass in a restaurant",
    "start": "2972640",
    "end": "2978960"
  },
  {
    "text": "ID I can I can look up the the the how expensive that restaurant is that's what price is and then the model will predict",
    "start": "2978960",
    "end": "2985960"
  },
  {
    "text": "okay how well does someone who's you know 35 to 50 who has a 20 to $40 budget",
    "start": "2985960",
    "end": "2991839"
  },
  {
    "text": "who likes Asian food and who's male going to like a",
    "start": "2991839",
    "end": "2997559"
  },
  {
    "text": "cheap $10 Taco Stand uh what's that rating going to be right and it'll predict it for me uh and when you",
    "start": "2997559",
    "end": "3005400"
  },
  {
    "text": "evaluate your model you can look to see how well it performs uh let me pick this one's",
    "start": "3005400",
    "end": "3013119"
  },
  {
    "text": "probably a good one for for this particular um case uh",
    "start": "3013119",
    "end": "3021440"
  },
  {
    "start": "3019000",
    "end": "3085000"
  },
  {
    "text": "we're doing what's called a multiclass uh prediction meaning we have a a sort of a a set of values that we're",
    "start": "3021440",
    "end": "3029079"
  },
  {
    "text": "going to get back in this case it's one star two stars three stars four stars or five stars I think actually it's not",
    "start": "3029079",
    "end": "3034559"
  },
  {
    "text": "even that many it's just four dislike satisfactory good and excellent we turn those into stars um a binary model would",
    "start": "3034559",
    "end": "3041079"
  },
  {
    "text": "just be yes or no and then you have what's called a regression which will basically give you an actual number",
    "start": "3041079",
    "end": "3047440"
  },
  {
    "text": "it'll predict a value so in my case I just wanted to predict this set of values so the way that you evaluate the",
    "start": "3047440",
    "end": "3053480"
  },
  {
    "text": "model is you take 70% or so of your data and you use that to train the model you",
    "start": "3053480",
    "end": "3059160"
  },
  {
    "text": "keep 30% aside to evaluate the model you don't want to actually use all of the data to train the model because what",
    "start": "3059160",
    "end": "3065920"
  },
  {
    "text": "that means is when you go to evaluate the data it may just be memorizing the data right it's just going to be predicting itself so the diagonal here",
    "start": "3065920",
    "end": "3074160"
  },
  {
    "text": "is the real value against the predicted value and you can see for excellent",
    "start": "3074160",
    "end": "3079559"
  },
  {
    "text": "we're we're doing really really well here right um you know if we Mouse over this it's probably close to 100 % so",
    "start": "3079559",
    "end": "3087599"
  },
  {
    "text": "yeah 93% of the time when it predicted excellent when we tested it using our",
    "start": "3087599",
    "end": "3094359"
  },
  {
    "text": "our evaluation data set it actually was excellent so that's good when we go down here to very good",
    "start": "3094359",
    "end": "3101520"
  },
  {
    "text": "also also pretty solid right we're at 91.18% so you know the darker these squares are the better right if you see",
    "start": "3101520",
    "end": "3108040"
  },
  {
    "text": "a nice dark diagonal here it's okay satisfactory not so much right so this",
    "start": "3108040",
    "end": "3113559"
  },
  {
    "text": "one we're at 61.74 per. uh decent better",
    "start": "3113559",
    "end": "3118720"
  },
  {
    "text": "than a coin flip but not by much uh you can imagine if it's 50% or lower you",
    "start": "3118720",
    "end": "3123799"
  },
  {
    "text": "might as well just flip a coin to decide if someone's going to predict satisfactory or not and you can see if we look over here it looks like we have",
    "start": "3123799",
    "end": "3129720"
  },
  {
    "text": "some issues where um satisfactor are being uh mixed with excellent so for whatever reason the model is Mis Mis uh",
    "start": "3129720",
    "end": "3136119"
  },
  {
    "text": "predicting there and then finally down here uh for dislike uh you know we have",
    "start": "3136119",
    "end": "3141559"
  },
  {
    "start": "3137000",
    "end": "3207000"
  },
  {
    "text": "82% so pretty good so this is a decent model right you know not not great there's definitely some optimization we can do here uh and this is this is how",
    "start": "3141559",
    "end": "3148480"
  },
  {
    "text": "you this is how you basically evaluate so when I showed you that steps one two and three where you build your data set",
    "start": "3148480",
    "end": "3154599"
  },
  {
    "text": "uh you train your model and then you evaluate your model you're going to iterate on those steps right you're going to try and maybe I have to cleanse",
    "start": "3154599",
    "end": "3160440"
  },
  {
    "text": "some data Maybe maybe I have some satisfactor that are outliers right you know someone was having a bad day and",
    "start": "3160440",
    "end": "3166240"
  },
  {
    "text": "they just said ah you know they weren't they weren't going to give a good vote to anything whereas you know lots of other people who share their same",
    "start": "3166240",
    "end": "3173000"
  },
  {
    "text": "attributes would you know the these are a lot of things that go in and for every machine learning use case um it's going",
    "start": "3173000",
    "end": "3178920"
  },
  {
    "text": "to be different right I mean I think there's a there's a misconception with this type of stuff that you can just throw a bunch of math at it and it'll",
    "start": "3178920",
    "end": "3185280"
  },
  {
    "text": "work it's not true at all you actually do need the math absolutely you need the software engineering to help make it work but you also need the the business",
    "start": "3185280",
    "end": "3191599"
  },
  {
    "text": "sense right you need to understand who your customers are what is your Market what's anecdotal what's real what's what's a signal and what's not a signal",
    "start": "3191599",
    "end": "3198599"
  },
  {
    "text": "so uh it's an iterative process uh but machine learning makes it makes it really easy and these data sources just",
    "start": "3198599",
    "end": "3204480"
  },
  {
    "text": "going you know bringing this back to our our uh example application these are you you know you can build these off text",
    "start": "3204480",
    "end": "3210599"
  },
  {
    "text": "files in S3 or you can create them from Red shift and I really like redshift for this because again you know machine",
    "start": "3210599",
    "end": "3217240"
  },
  {
    "text": "learning is one of these things where it's garbage in garbage out if you just throw data at it you're not going to get a good model but if you know you take",
    "start": "3217240",
    "end": "3223559"
  },
  {
    "text": "your data and you query it and you look at it in red shift you filter it you run some reports I mean a lot of a lot of",
    "start": "3223559",
    "end": "3228799"
  },
  {
    "text": "data science is just plain old you know running queries looking at reports looking at historical data looking for patterns that you can then use to decide",
    "start": "3228799",
    "end": "3235920"
  },
  {
    "text": "what's the optimal set of attributes that I want to use to train my machine learning model uh you can basically then",
    "start": "3235920",
    "end": "3242000"
  },
  {
    "text": "just write what you do is you tell machine learning here's the query I want you to run to get the data out of red",
    "start": "3242000",
    "end": "3247040"
  },
  {
    "text": "shift and then it writes those out to a file in S3 and then it builds the data source off that file and what's really",
    "start": "3247040",
    "end": "3252920"
  },
  {
    "text": "nice about that as well is because it's tracking these you can see how well your model is performing over time as you",
    "start": "3252920",
    "end": "3258359"
  },
  {
    "text": "create new data sets as you build new models you can always go back and and compare and see see what's changed so uh",
    "start": "3258359",
    "end": "3266760"
  },
  {
    "text": "I think I'm probably right uh on time here so uh thanks so much uh hopefully you found it useful I know we covered a",
    "start": "3266760",
    "end": "3272359"
  },
  {
    "text": "lot of ground uh in the next talk we're going to go really really deep uh into Dynamo DB and so you'll learn all of the",
    "start": "3272359",
    "end": "3280720"
  },
  {
    "text": "details about what I kind of glossed over here but hopefully you can see uh with the services that we have uh you",
    "start": "3280720",
    "end": "3286880"
  },
  {
    "text": "can build really really powerful apps uh without really having to manage a lot of stuff",
    "start": "3286880",
    "end": "3294079"
  }
]