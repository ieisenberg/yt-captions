[
  {
    "text": "hello everyone welcome to this video my name is anush co and I'm a senior technical account manager at a in",
    "start": "4759",
    "end": "11559"
  },
  {
    "text": "today's video we are going to talk about how you can consolidate your S3 inventory into a central account and you",
    "start": "11559",
    "end": "17640"
  },
  {
    "text": "talk about that solution we have youo who is product manager in EST inventry",
    "start": "17640",
    "end": "23199"
  },
  {
    "text": "we have B Singh who is principal solution architect and we have ranel who solution architect at AWS so before we",
    "start": "23199",
    "end": "30039"
  },
  {
    "text": "start talking about folks can you briefly introduce yourself to our viewers you know you can start and then",
    "start": "30039",
    "end": "35960"
  },
  {
    "text": "we can go to absolutely thank you very much my name is p suan and I'm a product manager",
    "start": "35960",
    "end": "42360"
  },
  {
    "text": "on the as team thank you Pino Balo hey my name is",
    "start": "42360",
    "end": "47840"
  },
  {
    "text": "Balo Singh I'm a principal Solutions architect at AWS and I have been with AWS little over",
    "start": "47840",
    "end": "54320"
  },
  {
    "text": "10 years happy to be here than you yeah uh thank you anush uh my name",
    "start": "54320",
    "end": "61160"
  },
  {
    "text": "is prangel uh I'm a Solutions architect at AWS I have been with AWS for over",
    "start": "61160",
    "end": "66240"
  },
  {
    "text": "four years now and I'm based out of SE thank you br so folks before we start talking the",
    "start": "66240",
    "end": "73040"
  },
  {
    "text": "solution can you talk about what is S3 inventory Ag and what is what are the",
    "start": "73040",
    "end": "78119"
  },
  {
    "text": "different use cases about S3 inventory yeah I can start with this one",
    "start": "78119",
    "end": "84520"
  },
  {
    "text": "so Amazon S3 inventory provides object level information about all objects in",
    "start": "84520",
    "end": "90040"
  },
  {
    "text": "your bucket along with their corresponding metadata such as object size encryption status storage class and",
    "start": "90040",
    "end": "96159"
  },
  {
    "text": "more you can choose among a CSV orc or Apache parz output formats that are",
    "start": "96159",
    "end": "102439"
  },
  {
    "text": "written to the destination bucket on a defined schedule you can also configure multiple",
    "start": "102439",
    "end": "108520"
  },
  {
    "text": "inventory to list the objects um for your bucket or a prefix we're seeing customers using it",
    "start": "108520",
    "end": "115479"
  },
  {
    "text": "for multiple use cases and just to name a few you can use EST inventory to gain",
    "start": "115479",
    "end": "122560"
  },
  {
    "text": "object level visibility for your data in EST and to audit and Report the status of your objects for your business",
    "start": "122560",
    "end": "128879"
  },
  {
    "text": "compliance or regulatory needs and to simplify or speed up any big data and",
    "start": "128879",
    "end": "134560"
  },
  {
    "text": "analytics jobs as you can quy the inventory data using Amazon Thea Amazon red shift spectrum and other tools like",
    "start": "134560",
    "end": "141920"
  },
  {
    "text": "Presto Apache hve and Apache spark got it thank you Boo one quick",
    "start": "141920",
    "end": "148720"
  },
  {
    "text": "question I have like when we configure this S3 inventory and when we get the inventory data does it get the meta data",
    "start": "148720",
    "end": "155760"
  },
  {
    "text": "for the storage classes like deep arive here yes so within the inventory report",
    "start": "155760",
    "end": "164680"
  },
  {
    "text": "um you get metadata for the objects and this metadata include the stage classes",
    "start": "164680",
    "end": "170040"
  },
  {
    "text": "um that are supported in EST okay perfect so next can we talk about how",
    "start": "170040",
    "end": "176400"
  },
  {
    "text": "user can configure this s inventory okay anush I will take this",
    "start": "176400",
    "end": "181800"
  },
  {
    "text": "question user can configure S3 inventory on a bucket using AWS Management console",
    "start": "181800",
    "end": "188840"
  },
  {
    "text": "CLI rest API or AWS SDK the bucket that inventory lists",
    "start": "188840",
    "end": "195840"
  },
  {
    "text": "object for is called Source bucket it is labeled as Amazon S3 bucket here the",
    "start": "195840",
    "end": "202640"
  },
  {
    "text": "bucket where inventory list file is stored is called destination bucket it",
    "start": "202640",
    "end": "207760"
  },
  {
    "text": "is labeled as Amazon S3 inventory over here on the source bucket you configure",
    "start": "207760",
    "end": "215439"
  },
  {
    "text": "an inventory to list the object and publish the list to the destination",
    "start": "215439",
    "end": "220640"
  },
  {
    "text": "bucket you can choose which format you want the reports in the supported",
    "start": "220640",
    "end": "225879"
  },
  {
    "text": "formats are CSV orc and Apache Park you can choose how often you want",
    "start": "225879",
    "end": "233560"
  },
  {
    "text": "to generate inventory report daily or weekly on the destination bucket you",
    "start": "233560",
    "end": "240280"
  },
  {
    "text": "must have a bucket policy to give Amazon S3 a permission to verify the ownership",
    "start": "240280",
    "end": "246200"
  },
  {
    "text": "of the bucket and a permission to write files to the bucket here's how the bucket policy look",
    "start": "246200",
    "end": "253439"
  },
  {
    "text": "like you can see it grants Amazon S3 permission to to the",
    "start": "253439",
    "end": "259759"
  },
  {
    "text": "bucket it allows Amazon S3 to write inventory report published by The Source",
    "start": "259759",
    "end": "265280"
  },
  {
    "text": "bucket to the destination bucket destination bucket must be in the",
    "start": "265280",
    "end": "271880"
  },
  {
    "text": "same region as the source bucket at the defined frequency a",
    "start": "271880",
    "end": "278520"
  },
  {
    "text": "inventory report is generated from The Source bucket and send it to the destination",
    "start": "278520",
    "end": "285440"
  },
  {
    "text": "bucket okay so that's great so we can configure inventory on the source and it will deliver that report on the",
    "start": "285440",
    "end": "292360"
  },
  {
    "text": "destination bucket so Bal right now we talked about a single bucket what if",
    "start": "292360",
    "end": "297960"
  },
  {
    "text": "user has multiple buckets in the same region how that solution would look like",
    "start": "297960",
    "end": "304479"
  },
  {
    "text": "sure so if you have more than one bucket in your region or if you add new bucket",
    "start": "304479",
    "end": "311759"
  },
  {
    "text": "you have to configure S3 inventory on those Source bucket MH then add",
    "start": "311759",
    "end": "318440"
  },
  {
    "text": "appropriate or update your bucket policy so that when reports are generated from",
    "start": "318440",
    "end": "326280"
  },
  {
    "text": "The Source bucket they can be delivered to the destination bucket got it so any",
    "start": "326280",
    "end": "332400"
  },
  {
    "text": "new bucket comes in they have to do these two step to configure the S3 inventory and update the S3 bucket",
    "start": "332400",
    "end": "339600"
  },
  {
    "text": "policy that is correct so till now we talked about multiple buckets within a",
    "start": "339600",
    "end": "345400"
  },
  {
    "text": "region but users operate from multiple region so what if they have a different",
    "start": "345400",
    "end": "351319"
  },
  {
    "text": "region how or what they need to do so if you have another region within",
    "start": "351319",
    "end": "357319"
  },
  {
    "text": "an account they have to follow follow user have to follow the same process",
    "start": "357319",
    "end": "362720"
  },
  {
    "text": "where they configure S3 inventories on the source bucket and update or add bucket policy",
    "start": "362720",
    "end": "370919"
  },
  {
    "text": "on the destination bucket so that when reports are generated from The Source",
    "start": "370919",
    "end": "377039"
  },
  {
    "text": "buckets Amazon S3 can write those files into the destination",
    "start": "377039",
    "end": "383160"
  },
  {
    "text": "bucket got it so what about if we have like our organizations like users have",
    "start": "383160",
    "end": "390160"
  },
  {
    "text": "multiple accounts within their organization do they need to do the same in every",
    "start": "390160",
    "end": "396919"
  },
  {
    "text": "account yes so let's assume you have an organization more than one account then",
    "start": "397160",
    "end": "405080"
  },
  {
    "text": "you have to configure The Source bucket and the destination bucket as we",
    "start": "405080",
    "end": "410560"
  },
  {
    "text": "explained in the previous steps B it so Balo with this if someone",
    "start": "410560",
    "end": "416960"
  },
  {
    "text": "need to go and check the inventory they need to go to a particular account and",
    "start": "416960",
    "end": "422000"
  },
  {
    "text": "particular region to read that or to check that inventory right that is",
    "start": "422000",
    "end": "427720"
  },
  {
    "text": "correct so they have some Athena or red shift connected in that particular",
    "start": "427720",
    "end": "433039"
  },
  {
    "text": "region for the the bucket and that's how they will read it right that is correct so let's assume you want to read these",
    "start": "433039",
    "end": "440800"
  },
  {
    "text": "reports M if you want to read this report you can configure as you mentioned Amazon",
    "start": "440800",
    "end": "447039"
  },
  {
    "text": "Athena on each region across account and you set the location of the table as",
    "start": "447039",
    "end": "454919"
  },
  {
    "text": "this destination bucket so you can query this data and do some uh",
    "start": "454919",
    "end": "461199"
  },
  {
    "text": "analysis got it so Bal this is great that we can set it up but with many of",
    "start": "461199",
    "end": "469639"
  },
  {
    "text": "our organization they don't want to give their users access to their all the accounts and they also want to",
    "start": "469639",
    "end": "477560"
  },
  {
    "text": "centralize the data in in stead of going to the each account and doing that so do we have any solution where that S3",
    "start": "477560",
    "end": "485000"
  },
  {
    "text": "inventory can go to a centralized account instead of we collecting it in each individual",
    "start": "485000",
    "end": "491440"
  },
  {
    "text": "account it's a great question we heard this question from many other customer as well so the solution that we have",
    "start": "491440",
    "end": "499879"
  },
  {
    "text": "built does consolidate S3 inventory report for all Source buckets in a",
    "start": "499879",
    "end": "506240"
  },
  {
    "text": "region across account and deliver it to the centralized inventory bucket in that",
    "start": "506240",
    "end": "511919"
  },
  {
    "text": "region in a designated account that way you have a single place for all the",
    "start": "511919",
    "end": "518518"
  },
  {
    "text": "inventory reports within a region in your designated account oh that's great",
    "start": "518519",
    "end": "524760"
  },
  {
    "text": "so can you talk about a little bit more about that solution how and how people can configure and how that solution work",
    "start": "524760",
    "end": "532399"
  },
  {
    "text": "sure anus let's assume a scenario where you have an organization with multiple",
    "start": "532399",
    "end": "538760"
  },
  {
    "text": "accounts and each account has multiple regions",
    "start": "538760",
    "end": "544120"
  },
  {
    "text": "and each region has multiple buckets for the purpose of this",
    "start": "544120",
    "end": "549160"
  },
  {
    "text": "presentation I'm showing two accounts you can have more than two",
    "start": "549160",
    "end": "554279"
  },
  {
    "text": "accounts to implement the solution that we have provided to implement our solution the",
    "start": "554279",
    "end": "561200"
  },
  {
    "text": "user must have a design must have to designate one of their account as the",
    "start": "561200",
    "end": "567720"
  },
  {
    "text": "central AWS account from the central AWS account they can",
    "start": "567720",
    "end": "573640"
  },
  {
    "text": "run AWS cloud formations stxs provided in the solution this stack creates an IM am",
    "start": "573640",
    "end": "581279"
  },
  {
    "text": "role in each account which grants needed S3 service permission such as get and",
    "start": "581279",
    "end": "588959"
  },
  {
    "text": "list S3 bucket get and put S3 inventory",
    "start": "588959",
    "end": "594839"
  },
  {
    "text": "configuration it also creates a trust with Central AWS account to assume this",
    "start": "594839",
    "end": "602480"
  },
  {
    "text": "role next from the central AWS account you can run the python script provided",
    "start": "602480",
    "end": "608760"
  },
  {
    "text": "in this solution this python script performs three",
    "start": "608760",
    "end": "614279"
  },
  {
    "text": "tasks first it creates a destination bucket for each region in the",
    "start": "614279",
    "end": "620120"
  },
  {
    "text": "centralized AWS account the destination bucket is labeled as Amazon S3",
    "start": "620120",
    "end": "626480"
  },
  {
    "text": "centralized inventory it configures an inventory for all the",
    "start": "626480",
    "end": "633440"
  },
  {
    "text": "source buckets across account and adds appropriate bucket policy to the",
    "start": "633440",
    "end": "639399"
  },
  {
    "text": "destination bucket lastly it creates Athena work",
    "start": "639399",
    "end": "645560"
  },
  {
    "text": "groups and bucket to store Athena query results per",
    "start": "645560",
    "end": "653480"
  },
  {
    "text": "region at a defined frequency the Consolidated report reps",
    "start": "653839",
    "end": "659360"
  },
  {
    "text": "from all Source buckets in a region across accounts are written to the",
    "start": "659360",
    "end": "664920"
  },
  {
    "text": "destination bucket in the same region in the AWS Central",
    "start": "664920",
    "end": "672519"
  },
  {
    "text": "account you can analyze the data from this destination bucket using Amazon",
    "start": "672519",
    "end": "678320"
  },
  {
    "text": "atina which is automatically configured in each region in central AWS",
    "start": "678320",
    "end": "685440"
  },
  {
    "text": "account that's great Balu so now user don't need to go to each of the account",
    "start": "685440",
    "end": "693399"
  },
  {
    "text": "to configure the inventory uh the solution is going to do that for them and consolidate all the data in a",
    "start": "693399",
    "end": "700399"
  },
  {
    "text": "Central's account that correct I have few question what if a user has a new",
    "start": "700399",
    "end": "706920"
  },
  {
    "text": "bucket in in any of the account or any of the region so how that solution will",
    "start": "706920",
    "end": "713480"
  },
  {
    "text": "take care of that new bucket so let's assume that you add a new bucket in any",
    "start": "713480",
    "end": "719800"
  },
  {
    "text": "account in any region the next time this script that python script that user run",
    "start": "719800",
    "end": "727320"
  },
  {
    "text": "MH it automatically detects that particular bucket MH add S3",
    "start": "727320",
    "end": "733680"
  },
  {
    "text": "configuration for it MH and accordingly update the destination bucket for that",
    "start": "733680",
    "end": "740920"
  },
  {
    "text": "particular bucket in the region where that bucket is uh assigned got it so",
    "start": "740920",
    "end": "748000"
  },
  {
    "text": "next question I have B in the starting we talked about that when configuring",
    "start": "748000",
    "end": "753760"
  },
  {
    "text": "the3 inventory you have options like you can get the data weekly or daily and you",
    "start": "753760",
    "end": "760199"
  },
  {
    "text": "have option that you can choose a particular parket format or CSV format",
    "start": "760199",
    "end": "765839"
  },
  {
    "text": "so with this solution does our users have or in this python script user have that option to configure that what what",
    "start": "765839",
    "end": "773279"
  },
  {
    "text": "frequency they want to collect the data and in which format they want to collect the data it's a great question kush",
    "start": "773279",
    "end": "780079"
  },
  {
    "text": "before we build this solution actually I went and PLL with many of our customers",
    "start": "780079",
    "end": "786560"
  },
  {
    "text": "to understand that what is a popular format and how often they are running",
    "start": "786560",
    "end": "792560"
  },
  {
    "text": "inventory reports if they are so from the poll what we have learned that most",
    "start": "792560",
    "end": "799199"
  },
  {
    "text": "of the customers would like to see the format output format as",
    "start": "799199",
    "end": "806399"
  },
  {
    "text": "Park and they normally run their reports weekly so the solution that we design is",
    "start": "806399",
    "end": "814680"
  },
  {
    "text": "set for format as pachy par and frequency as",
    "start": "814680",
    "end": "820519"
  },
  {
    "text": "weekly but these are the two parameters that user can go in the python script",
    "start": "820519",
    "end": "826959"
  },
  {
    "text": "and change as per their requirement got it and other question B",
    "start": "826959",
    "end": "834560"
  },
  {
    "text": "like with this solution now we collecting data from many accounts many region into a santaliz bucket does it",
    "start": "834560",
    "end": "843440"
  },
  {
    "text": "does it cause any performance impact to the buckets that's a great question anush no",
    "start": "843440",
    "end": "850440"
  },
  {
    "text": "it does not cause any performance impact the reason is this inventory is managed",
    "start": "850440",
    "end": "858560"
  },
  {
    "text": "and produced by Amazon S3 got it and the last question",
    "start": "858560",
    "end": "866399"
  },
  {
    "text": "Balo I see the Lambda here but we have not talked about that so how Lambda is",
    "start": "866399",
    "end": "872399"
  },
  {
    "text": "related here and what is doing again that's a great question anush I almost missed that one this AWS",
    "start": "872399",
    "end": "880519"
  },
  {
    "text": "Lambda function performs couple of task here first it copies the high prefix",
    "start": "880519",
    "end": "887199"
  },
  {
    "text": "from the inventory report to a new prefix centralized inventory in the same",
    "start": "887199",
    "end": "894720"
  },
  {
    "text": "bucket across each region mhm it adds two partition to the Athena",
    "start": "894720",
    "end": "902279"
  },
  {
    "text": "table bucket name and date which is the date of the inventory",
    "start": "902279",
    "end": "909120"
  },
  {
    "text": "report so if you want to analyze objects from specific bucket and from specific",
    "start": "909120",
    "end": "916120"
  },
  {
    "text": "inventory report you can filter them using bucket name and date this helps in",
    "start": "916120",
    "end": "924680"
  },
  {
    "text": "reducing the cost for running a Thea query and optimize your per query",
    "start": "924680",
    "end": "931000"
  },
  {
    "text": "performance got it so it does not need to go to the all the data because we have create some kind of indexing within",
    "start": "931000",
    "end": "938040"
  },
  {
    "text": "the bucket to get the data from there that is correct thank you so much that's",
    "start": "938040",
    "end": "943759"
  },
  {
    "text": "all the question I have I'm looking forward to see how it work um in a demo",
    "start": "943759",
    "end": "949560"
  },
  {
    "text": "okay so for demo I'm going to hand over to praner yeah thank you anos Balu and Pino",
    "start": "949560",
    "end": "957399"
  },
  {
    "text": "um I'm now going to demonstrate the solution and show you how you can query",
    "start": "957399",
    "end": "962920"
  },
  {
    "text": "your S3 inventory data once you have deployed the solution uh for the purpose of this demo",
    "start": "962920",
    "end": "969759"
  },
  {
    "text": "I have already deployed this solution in my environment uh so what that means is I have already deployed the roles using",
    "start": "969759",
    "end": "977040"
  },
  {
    "text": "stack set I have run the script uh I ran the script a week back um so that we",
    "start": "977040",
    "end": "982839"
  },
  {
    "text": "have inventory data I have already set up the query mechanisms uh the Lambda functions they are all in",
    "start": "982839",
    "end": "989199"
  },
  {
    "text": "uh so this solution uh what I'm going to present is the end result of once uh you deploy the solution got it so one thing",
    "start": "989199",
    "end": "997279"
  },
  {
    "text": "I want to ask I forgot to ask Bal earlier ranel you mentioned that you already deployed everything so that you",
    "start": "997279",
    "end": "1003360"
  },
  {
    "text": "can get the inventory data so does it take load of time to get the inventory data once we configure it it it can take",
    "start": "1003360",
    "end": "1011240"
  },
  {
    "text": "anywhere from 24 hours to 48 hours to get uh inventory data in yes got it okay",
    "start": "1011240",
    "end": "1016680"
  },
  {
    "text": "thank you thank you anush for the that question uh so let me navigate to my uh",
    "start": "1016680",
    "end": "1022199"
  },
  {
    "text": "S3 console and show you um at the very basic level what the solution has has",
    "start": "1022199",
    "end": "1027280"
  },
  {
    "text": "done for you right uh for example if I select this in this bucket here and if I",
    "start": "1027280",
    "end": "1033038"
  },
  {
    "text": "go to the management tab you will see that uh this solution has already uh",
    "start": "1033039",
    "end": "1038360"
  },
  {
    "text": "created an inventory configuration for you right and what this invent inventory",
    "start": "1038360",
    "end": "1043760"
  },
  {
    "text": "configuration does is it is sending all the uh files to this particular S3",
    "start": "1043760",
    "end": "1050080"
  },
  {
    "text": "bucket uh with the pref which has the prefix uh inventory right so the name of",
    "start": "1050080",
    "end": "1055360"
  },
  {
    "text": "the S3 bucket is S3 inventory followed by the region uh followed uh by the account ID right uh similarly uh if you",
    "start": "1055360",
    "end": "1063640"
  },
  {
    "text": "look at any bucket right now in my account let me go to this other bucket again if you scroll down to management",
    "start": "1063640",
    "end": "1069280"
  },
  {
    "text": "uh you will see uh I have this inventory configuration already created for me and it is pointed to uh a a bucket which is",
    "start": "1069280",
    "end": "1078200"
  },
  {
    "text": "again again in the format of S3 inventory followed by my region followed by my account number and the prefix as",
    "start": "1078200",
    "end": "1085080"
  },
  {
    "text": "inventory right so right now uh I am in the account which I have chosen as the",
    "start": "1085080",
    "end": "1092320"
  },
  {
    "text": "uh Central account to collect all of the S3 inventory uh configurations and",
    "start": "1092320",
    "end": "1099159"
  },
  {
    "text": "consolidate consolidate them uh on a per region basis right and you can see here",
    "start": "1099159",
    "end": "1105120"
  },
  {
    "text": "I have uh these two buckets right these two buckets they have very unique name the unique name is uh S3 inventory Dash",
    "start": "1105120",
    "end": "1113039"
  },
  {
    "text": "um region Das the account ID right so this is the unique name uh this solution",
    "start": "1113039",
    "end": "1119640"
  },
  {
    "text": "gives to the S3 bucket that will consolidate data regionally uh you only",
    "start": "1119640",
    "end": "1125400"
  },
  {
    "text": "see yeah you only see uh two buckets here one for us East one and us east2",
    "start": "1125400",
    "end": "1131000"
  },
  {
    "text": "that is because I only have S3 buckets in these two regions uh if I had let's",
    "start": "1131000",
    "end": "1137080"
  },
  {
    "text": "say a bucket in the Us East two region you would have another uh for uh S3",
    "start": "1137080",
    "end": "1142480"
  },
  {
    "text": "bucket here with the name S3 inventory uh uss2 us east2 followed by my account ID",
    "start": "1142480",
    "end": "1149720"
  },
  {
    "text": "got it so basically whatever region you bucket in central account you'll get a corresponding inventory centralized",
    "start": "1149720",
    "end": "1155200"
  },
  {
    "text": "inventory bucket here yes yes uh so let's go ahead and and and",
    "start": "1155200",
    "end": "1160960"
  },
  {
    "text": "check out uh this inventory bucket right uh when I showed you the the individual",
    "start": "1160960",
    "end": "1167840"
  },
  {
    "text": "bucket you saw that all of the inventory configuration was being delivered uh to",
    "start": "1167840",
    "end": "1172880"
  },
  {
    "text": "this uh this inventory uh folder right so this is where you see if I select this this is where you see that all of",
    "start": "1172880",
    "end": "1180120"
  },
  {
    "text": "the inventory configuration reports uh they are being uh delivered uh from the",
    "start": "1180120",
    "end": "1185679"
  },
  {
    "text": "account uh from this account which ends with 8721 from the account which ends",
    "start": "1185679",
    "end": "1190760"
  },
  {
    "text": "with 7166 right all of these inventory uh files are being delivered uh to this",
    "start": "1190760",
    "end": "1196799"
  },
  {
    "text": "uh inventory prefix right so basically one bucket one object or folder per",
    "start": "1196799",
    "end": "1204159"
  },
  {
    "text": "bucket in the particular corresponding account or region right yes correct okay",
    "start": "1204159",
    "end": "1210559"
  },
  {
    "text": "uh and then if I go back to the top level uh Balo also mentioned about the",
    "start": "1210559",
    "end": "1215919"
  },
  {
    "text": "centralized inventory folder uh that is created by the Lambda function uh so what this uh this for this folder does",
    "start": "1215919",
    "end": "1223320"
  },
  {
    "text": "for you is it optimizes the query mechanism uh by uh consolidating all the",
    "start": "1223320",
    "end": "1228679"
  },
  {
    "text": "Sim Lings and then partitioning them as per date and then as per bucket right so",
    "start": "1228679",
    "end": "1234840"
  },
  {
    "text": "this allows you to query uh the inventory as per date uh and as well as",
    "start": "1234840",
    "end": "1240120"
  },
  {
    "text": "with the the bucket name right so this is how uh the consolidation Works uh the",
    "start": "1240120",
    "end": "1245320"
  },
  {
    "text": "step one is all the inventory configurations are created all the inventory files they are sent to the",
    "start": "1245320",
    "end": "1251679"
  },
  {
    "text": "inventory folder here and the Second Step where uh the query mechanism is created uh so that uh the query",
    "start": "1251679",
    "end": "1258600"
  },
  {
    "text": "experiences is optimal for you right uh so let me go ahead and show you",
    "start": "1258600",
    "end": "1264240"
  },
  {
    "text": "how the query part of this this solution actually looks like right uh the first thing I would say if you head to the",
    "start": "1264240",
    "end": "1272360"
  },
  {
    "text": "top right corner here uh you see that um",
    "start": "1272360",
    "end": "1277520"
  },
  {
    "text": "you have a work group created um and this work group allows you to like uh",
    "start": "1277520",
    "end": "1283760"
  },
  {
    "text": "have control on which users can run queries on the work group and how you",
    "start": "1283760",
    "end": "1289039"
  },
  {
    "text": "how you can control cost right so we are using this work group to run run run our queries uh here you also see that the",
    "start": "1289039",
    "end": "1296880"
  },
  {
    "text": "table has been created right so you have uh the inventory table that has been uh created for you if I expand this right",
    "start": "1296880",
    "end": "1305039"
  },
  {
    "text": "you will see various uh fields from from the object uh metadata like bucket uh",
    "start": "1305039",
    "end": "1311039"
  },
  {
    "text": "key which is the object name uh storage class replication status scrolling down",
    "start": "1311039",
    "end": "1316880"
  },
  {
    "text": "I also see uh the object Access Control list field right uh this field was added",
    "start": "1316880",
    "end": "1322799"
  },
  {
    "text": "uh back in July this year that is 2023 and this field uh tells you which",
    "start": "1322799",
    "end": "1328320"
  },
  {
    "text": "accounts or groups are granted access to uh this object and the type of access",
    "start": "1328320",
    "end": "1334480"
  },
  {
    "text": "that is granted right this field is yeah so this is what what what it tells you so let me go ahead and uh preview",
    "start": "1334480",
    "end": "1343080"
  },
  {
    "text": "this table right and as I preview you can see",
    "start": "1343080",
    "end": "1349120"
  },
  {
    "text": "uh the first uh 10 records of this bucket they are from like two different",
    "start": "1349120",
    "end": "1354600"
  },
  {
    "text": "accounts right so these buckets are are housed in in different accounts uh I've just named my buckets in a way so that",
    "start": "1354600",
    "end": "1361760"
  },
  {
    "text": "you can make out that hey this bucket is from a different account this bucket is from a different account",
    "start": "1361760",
    "end": "1368559"
  },
  {
    "text": "per uh and then let's let's say that uh one of the",
    "start": "1368559",
    "end": "1373679"
  },
  {
    "text": "purposes of us to create this solution is for you to like be able to play with",
    "start": "1373679",
    "end": "1379400"
  },
  {
    "text": "uh these metadata Fields like for example you have bucket you have key um",
    "start": "1379400",
    "end": "1384520"
  },
  {
    "text": "you have size so let's say I want to like figure out how many objects I have",
    "start": "1384520",
    "end": "1390039"
  },
  {
    "text": "uh that are above a certain size right if if that is something I want to look at right so out here I have I have a",
    "start": "1390039",
    "end": "1396600"
  },
  {
    "text": "query here right uh object size that's how I I have named the query right so in",
    "start": "1396600",
    "end": "1402400"
  },
  {
    "text": "this query what I'm doing is I'm selecting uh all the records which have",
    "start": "1402400",
    "end": "1408480"
  },
  {
    "text": "size greater than uh 15 kilobytes right so if I run this query right what you",
    "start": "1408480",
    "end": "1413600"
  },
  {
    "text": "will see is all the objects which have size greater than 15 kilobytes they will",
    "start": "1413600",
    "end": "1419000"
  },
  {
    "text": "they will pop up once I run this query right yeah so this was like just a just",
    "start": "1419000",
    "end": "1425799"
  },
  {
    "text": "a very basic example of like how you can run run a query uh you can look at some other fields like I would say uh next to",
    "start": "1425799",
    "end": "1433720"
  },
  {
    "text": "size you have this last modified date so if you want to figure out uh um like",
    "start": "1433720",
    "end": "1439880"
  },
  {
    "text": "like after 24th of October uh What uh I",
    "start": "1439880",
    "end": "1445039"
  },
  {
    "text": "what objects were modified or created uh you could you could run a query like this where you can uh select on the date",
    "start": "1445039",
    "end": "1452039"
  },
  {
    "text": "and you can select on the bucket name right and that's how we have we have partitioned the centralized inventory uh",
    "start": "1452039",
    "end": "1458200"
  },
  {
    "text": "folder as well which we saw in the previous uh tab right so if I run this yeah you will get all the objects which",
    "start": "1458200",
    "end": "1464520"
  },
  {
    "text": "are modified or created uh after October 24th right and on these kind of scenario",
    "start": "1464520",
    "end": "1470799"
  },
  {
    "text": "that optimization the Lambda created prefix will come into the picture instead of going to the all the buckets",
    "start": "1470799",
    "end": "1476440"
  },
  {
    "text": "is just go to the particular yeah that's a that's a spot on anos you absolutely correct there",
    "start": "1476440",
    "end": "1484399"
  },
  {
    "text": "yeah apart from uh doing these basic investigations uh our customers use",
    "start": "1484399",
    "end": "1490600"
  },
  {
    "text": "Amazon S3 inventory for cost optimization they use it for uh security",
    "start": "1490600",
    "end": "1495919"
  },
  {
    "text": "auditing purposes they use it for compliance purposes so I I'll show you some more examples here for example",
    "start": "1495919",
    "end": "1501240"
  },
  {
    "text": "let's say one of the easiest way to um cost optimize is that if you have",
    "start": "1501240",
    "end": "1506760"
  },
  {
    "text": "duplicate objects right uh you can delete uh whatever object is duplicated",
    "start": "1506760",
    "end": "1514200"
  },
  {
    "text": "right so this squarey out here um can help you identify um duplicate",
    "start": "1514200",
    "end": "1522559"
  },
  {
    "text": "objects right so what this uh does is it uses uh the eag e tag is the entity tag",
    "start": "1522559",
    "end": "1529120"
  },
  {
    "text": "and entity tag is uh the hash of an object right so if two objects have the",
    "start": "1529120",
    "end": "1534640"
  },
  {
    "text": "same e tag that is entity tag it means those are are duplicate right so if you",
    "start": "1534640",
    "end": "1539880"
  },
  {
    "text": "run this query right you will get to know okay in which bucket do have I have",
    "start": "1539880",
    "end": "1545000"
  },
  {
    "text": "duplicates and this query will run will identify all the uh duplicate objects",
    "start": "1545000",
    "end": "1551240"
  },
  {
    "text": "within that particular region right for whichever yeah so if you run this you will see okay um",
    "start": "1551240",
    "end": "1558279"
  },
  {
    "text": "um yeah so you see I I do have room for lot of cost optimization I see um there",
    "start": "1558279",
    "end": "1564880"
  },
  {
    "text": "are multiple duplicates uh for certain certain queries here um another way that you can",
    "start": "1564880",
    "end": "1573279"
  },
  {
    "text": "optimize um your cost is by uh using the right storage class uh",
    "start": "1573279",
    "end": "1581919"
  },
  {
    "text": "by default if you are uploading an object and you don't specify like a storage class S3 standard is the class",
    "start": "1581919",
    "end": "1589360"
  },
  {
    "text": "uh that yeah it is assigned to right uh but uh with S3 you can choose uh the storage",
    "start": "1589360",
    "end": "1596520"
  },
  {
    "text": "class based on the data access pattern based on your resiliency requirements based on your cost requirements uh so",
    "start": "1596520",
    "end": "1603840"
  },
  {
    "text": "for example I would use S3 standard for frequently accessed data right but if I have less frequently accessed data I",
    "start": "1603840",
    "end": "1610279"
  },
  {
    "text": "would go for S3 standard in frequent access right um if I'm not aware about",
    "start": "1610279",
    "end": "1615919"
  },
  {
    "text": "my data access pattern I can I'll go with S3 intelligent Heering right uh if",
    "start": "1615919",
    "end": "1621640"
  },
  {
    "text": "I want to Archive my data I'll go with Amazon S3 Glacier storage class right so",
    "start": "1621640",
    "end": "1627600"
  },
  {
    "text": "so all of these uh things so once I identify okay how are my uh objects being grouped",
    "start": "1627600",
    "end": "1635399"
  },
  {
    "text": "right for example when I run this query here right uh I see 48 objects are in",
    "start": "1635399",
    "end": "1642200"
  },
  {
    "text": "the standard class so it does look like that I have not optimized my objects uh",
    "start": "1642200",
    "end": "1648520"
  },
  {
    "text": "it feels like that there is there is room for investigation here that should I be moving these objects to like different classes right right so based",
    "start": "1648520",
    "end": "1655760"
  },
  {
    "text": "on those query like data you're getting you can take action and you can either put a life cycle policy or move around",
    "start": "1655760",
    "end": "1662799"
  },
  {
    "text": "those subjects correct correct aners yeah uh and then just one thing I wanted",
    "start": "1662799",
    "end": "1668480"
  },
  {
    "text": "to touch upon was this uh non encrypted right so in Amazon S3 you have the",
    "start": "1668480",
    "end": "1676159"
  },
  {
    "text": "option of encrypting your object using the Amazon man Amazon S3 managed key",
    "start": "1676159",
    "end": "1681960"
  },
  {
    "text": "right or you can use like a AWS Key Management Service which is AWS KMS key or you can use like a customer provided",
    "start": "1681960",
    "end": "1688640"
  },
  {
    "text": "key right so these are the options using which you can encrypt right now let's say you want to audit your environment and see hey which of my objects are not",
    "start": "1688640",
    "end": "1695840"
  },
  {
    "text": "encrypted right so you can filter on the encryption status right and you can",
    "start": "1695840",
    "end": "1701679"
  },
  {
    "text": "Define it as not- SS and you can see hey are there any objects which are not in",
    "start": "1701679",
    "end": "1707440"
  },
  {
    "text": "crypted in my case there are none so I'm I'm following AWS best practices right right uh similar to encryption status",
    "start": "1707440",
    "end": "1714200"
  },
  {
    "text": "you can also query upon let's say you have some compliance requirement and you want to check the replication status so",
    "start": "1714200",
    "end": "1720799"
  },
  {
    "text": "replication status is also another fed right so the S invent can help you with",
    "start": "1720799",
    "end": "1725960"
  },
  {
    "text": "security auditing and also making sure that you compliant with the with the policies so this is all I had for the",
    "start": "1725960",
    "end": "1731840"
  },
  {
    "text": "demo anush thank you so much panel for walking us through that how user can",
    "start": "1731840",
    "end": "1738559"
  },
  {
    "text": "query and then it's good to see that instead of going in each region in each account and querying this data and then",
    "start": "1738559",
    "end": "1745240"
  },
  {
    "text": "consolidating it with this solution I think we can have everything at one place",
    "start": "1745240",
    "end": "1750360"
  },
  {
    "text": "and user can just query in that particular account and get data metadata for all the objects in across their",
    "start": "1750360",
    "end": "1757399"
  },
  {
    "text": "organization so thank thank you so much for showing it thank you anush thank you",
    "start": "1757399",
    "end": "1763360"
  },
  {
    "text": "so much Fox Now do we have any AWS document ation or blog which users can",
    "start": "1763360",
    "end": "1770240"
  },
  {
    "text": "follow as a step-by-step guide to implement this solution so yes user can scan below QR",
    "start": "1770240",
    "end": "1779000"
  },
  {
    "text": "codes to learn more about Amazon S3 inventory and also stepbystep",
    "start": "1779000",
    "end": "1784840"
  },
  {
    "text": "instruction of the solution that we discuss in this video thank you so much Valu uh Bal p",
    "start": "1784840",
    "end": "1793159"
  },
  {
    "text": "panel thank you so much for coming online today and talking about this solu and providing guidance at how our users",
    "start": "1793159",
    "end": "1800760"
  },
  {
    "text": "can consolidate their inventory in a centralized account so thank you so much",
    "start": "1800760",
    "end": "1806399"
  },
  {
    "text": "have a good day bye thank",
    "start": "1806399",
    "end": "1813159"
  }
]