[
  {
    "text": "good morning and welcome thank you for joining today's session I am for",
    "start": "920",
    "end": "6150"
  },
  {
    "text": "enterprises how Vanguard has matured there I am controls to support a micro count strategy my name is Ilya Epstein",
    "start": "6150",
    "end": "12570"
  },
  {
    "text": "I'm a principal Solutions Architect with AWS I've been with AWS for three and a half years working primarily with",
    "start": "12570",
    "end": "18000"
  },
  {
    "text": "financial services organizations like Vanguard I'm joined by Ross Sharma who",
    "start": "18000",
    "end": "23430"
  },
  {
    "text": "is a senior application security architect at Vanguard before we get started I just wanted to ask a few",
    "start": "23430",
    "end": "28619"
  },
  {
    "text": "questions from the audience how many folks here work for organizations and highly regulated industries awesome how",
    "start": "28619",
    "end": "36809"
  },
  {
    "text": "many folks here are developers or engineers and how many are security",
    "start": "36809",
    "end": "41820"
  },
  {
    "text": "professionals okay great and how many of you sometimes struggle to find a balance",
    "start": "41820",
    "end": "47879"
  },
  {
    "text": "between agility DevOps and security awesome this is the right session for",
    "start": "47879",
    "end": "53550"
  },
  {
    "text": "you I'm really excited about this session because when you go to AWS security talks very often we talk about",
    "start": "53550",
    "end": "59010"
  },
  {
    "text": "the fact that you don't need to compromise between being agile and DevOps and security but not as often do",
    "start": "59010",
    "end": "65880"
  },
  {
    "text": "you hear customers like Vanguard Enterprise in an highly regulated industry talk about how they're actually",
    "start": "65880",
    "end": "72510"
  },
  {
    "text": "being able to accomplish that and that's exactly what Raj is gonna talk about today we're going to talk about how",
    "start": "72510",
    "end": "78479"
  },
  {
    "text": "Vanguard is enabling their developers to move fast to be agile but without compromising on security and making sure",
    "start": "78479",
    "end": "85200"
  },
  {
    "text": "that developers stay within the boundaries now before we before we get",
    "start": "85200",
    "end": "90689"
  },
  {
    "text": "started with Vanguard's micro accounts strategy and how they're enabling their developers to move fast and how they're",
    "start": "90689",
    "end": "97049"
  },
  {
    "text": "using Federation and permission boundaries and organizational boundaries I want to provide a brief overview of I",
    "start": "97049",
    "end": "103649"
  },
  {
    "text": "am just to make sure that we're familiar with the key concepts that Raj is going to talk about especially things like",
    "start": "103649",
    "end": "109649"
  },
  {
    "text": "permission boundaries which is a relatively new feature but super powerful that was launched just a few",
    "start": "109649",
    "end": "115290"
  },
  {
    "text": "months ago I'm gonna start with a basic I am primer this is a 300 level session",
    "start": "115290",
    "end": "120930"
  },
  {
    "text": "so I'm assuming most of you are familiar with I am again I just want to make sure we're all on the same page in terms of",
    "start": "120930",
    "end": "126329"
  },
  {
    "text": "the key terminology and concepts so what I'm going to do is I'm going to start with a typical i.m workflow and just",
    "start": "126329",
    "end": "131879"
  },
  {
    "text": "explain some of the key component you you first start with a principle a principle ni m could be a user and of",
    "start": "131879",
    "end": "139470"
  },
  {
    "text": "course users could be put inside groups but a principle could also be an IM role unlike a user which is typically",
    "start": "139470",
    "end": "146130"
  },
  {
    "text": "associated with a specific person and typically has long lift credentials like a user name and password or an access",
    "start": "146130",
    "end": "152520"
  },
  {
    "text": "key and secret key and IM role is something that could be assumed by a trusted entity right so you could use",
    "start": "152520",
    "end": "160080"
  },
  {
    "text": "for example I am roles for delegated access cross accounts or you could use I am roles for federated access from your",
    "start": "160080",
    "end": "166620"
  },
  {
    "text": "identity provider or you could also have service linked roles which are roles that are services use to execute certain",
    "start": "166620",
    "end": "173280"
  },
  {
    "text": "actions on your behalf in your accounts and then of course you could also have your applications write your",
    "start": "173280",
    "end": "178620"
  },
  {
    "text": "applications can be making calls to other AWS services and that could be a principal as well and typically would",
    "start": "178620",
    "end": "184410"
  },
  {
    "text": "use an IM role in that case also now in order to do anything in AWS it's an API",
    "start": "184410",
    "end": "190170"
  },
  {
    "text": "call so first you have a request now that requests will contain certain things the request contains an action",
    "start": "190170",
    "end": "195900"
  },
  {
    "text": "what am I trying to do so for example easy to run instances right it will contain the resource maybe my",
    "start": "195900",
    "end": "202080"
  },
  {
    "text": "instance ID it will also contain principal who is the calling principal of that API action environment data",
    "start": "202080",
    "end": "209730"
  },
  {
    "text": "environment data could include for example an IP address where's that call coming from and some additional resource",
    "start": "209730",
    "end": "215820"
  },
  {
    "text": "data for example the tag on that ec2 instance then I am has to authenticate",
    "start": "215820",
    "end": "222150"
  },
  {
    "text": "you right now depending on who you are if you are a user that could be long-lived credentials it could be",
    "start": "222150",
    "end": "228000"
  },
  {
    "text": "username and password it could be an API access key but if you using an IM role",
    "start": "228000",
    "end": "233040"
  },
  {
    "text": "that could be a short short-lived credential that maybe is vented to you by our simple token servers STS and of",
    "start": "233040",
    "end": "240300"
  },
  {
    "text": "course you could also have things like an MFA to make sure that the authentication is secure now once you're",
    "start": "240300",
    "end": "247020"
  },
  {
    "text": "authenticated we have to determine authorization and in order to determine authorization I am has to look at a",
    "start": "247020",
    "end": "252330"
  },
  {
    "text": "bunch of different types of policies first we have what's called an identity based policy that's a policy that's",
    "start": "252330",
    "end": "258720"
  },
  {
    "text": "actually attached to the principal it's a policy that could be attached to a user to a group or to a role and it",
    "start": "258720",
    "end": "264900"
  },
  {
    "text": "determines what services and API actions you're able to use as a principal the",
    "start": "264900",
    "end": "270780"
  },
  {
    "text": "second type of policy is resource based policy now this is not to be confused with a resource level policy research",
    "start": "270780",
    "end": "278370"
  },
  {
    "text": "level policy is simply whether you could specify an Arn inside your policy",
    "start": "278370",
    "end": "283860"
  },
  {
    "text": "statement a resource based policy is something that you attach to a resource directly a good example would be a",
    "start": "283860",
    "end": "290850"
  },
  {
    "text": "bucket policy or a kms key policy some services within AWS support a resource",
    "start": "290850",
    "end": "297840"
  },
  {
    "text": "based policy and then there are other policies that you have to look at as well for example the trust policy if",
    "start": "297840",
    "end": "303480"
  },
  {
    "text": "you're using an IM role who are the entities that are allowed to assume that role so trust policies have to be",
    "start": "303480",
    "end": "309600"
  },
  {
    "text": "evaluated also and a permission boundary which I'm going to talk about in a few minutes a new type of policy that we",
    "start": "309600",
    "end": "315990"
  },
  {
    "text": "introduced relatively recently so I am will look at all of these things together and of course if you have",
    "start": "315990",
    "end": "322080"
  },
  {
    "text": "permissions to be able to perform that action you'll be granted access to that resource and of course if you don't have",
    "start": "322080",
    "end": "328740"
  },
  {
    "text": "permissions you will be denied so now that I'm talking about the concept of",
    "start": "328740",
    "end": "334530"
  },
  {
    "text": "roles I just want to go through a simple workflow of how cross account access for example works with SDS because I was",
    "start": "334530",
    "end": "341730"
  },
  {
    "text": "going to talk a lot about how they've implemented Federation within Vanguard so I just want to make sure we're familiar with the concepts so let's look",
    "start": "341730",
    "end": "348210"
  },
  {
    "text": "at a simple use case we have two accounts we have a dev account and a product out in a dev account we have a",
    "start": "348210",
    "end": "354140"
  },
  {
    "text": "identity and I am user called Alice and perhaps Alice for a production support",
    "start": "354140",
    "end": "360060"
  },
  {
    "text": "issue it needs to temporarily look at some data within a dynamodb table and we don't want to create an identity for",
    "start": "360060",
    "end": "366090"
  },
  {
    "text": "Alice in the production account we just want to delegate some access to her on temporary basis to be able to look at",
    "start": "366090",
    "end": "371880"
  },
  {
    "text": "the dynamodb table so what do we do the first step is in the production account",
    "start": "371880",
    "end": "376920"
  },
  {
    "text": "will create an IM role let's say called dynamodb role and that role is going to have to have a trust statement to allow",
    "start": "376920",
    "end": "384030"
  },
  {
    "text": "principals within the dev account to assume that role that's called the trust policy that policy in this case it's",
    "start": "384030",
    "end": "390810"
  },
  {
    "text": "allowing any principal to assume that role but you could be granular and could say only alice is allowed to assume that",
    "start": "390810",
    "end": "396450"
  },
  {
    "text": "role I then have to attach a permission policy to that DynamoDB role",
    "start": "396450",
    "end": "401460"
  },
  {
    "text": "that specifies exactly what is it that Alice will be able to do within that account in this case it's only read",
    "start": "401460",
    "end": "407190"
  },
  {
    "text": "api's to dynamodb and you could see we are only allowing one specific table",
    "start": "407190",
    "end": "412919"
  },
  {
    "text": "within that research policy just the books table and then of course the final step is in the dev account because Alice",
    "start": "412919",
    "end": "420630"
  },
  {
    "text": "is now going to be doing an assumed roll call to STS she needs to have permissions to assume a role within the",
    "start": "420630",
    "end": "426930"
  },
  {
    "text": "production account so what does the flow look like Alice first authenticates herself with her own credentials to STS",
    "start": "426930",
    "end": "433919"
  },
  {
    "text": "and makes an assumed roll call STS gives back temporary credentials and then",
    "start": "433919",
    "end": "440639"
  },
  {
    "text": "Alice could use those temporary credentials to be able to access that dynamodb table and this is a much better",
    "start": "440639",
    "end": "446310"
  },
  {
    "text": "model to use this delegated approach than having to create an identity for Alice within the production account",
    "start": "446310",
    "end": "452659"
  },
  {
    "text": "another flow that I want to walk through it very typical is a Tobias console access right that's another use case for",
    "start": "452659",
    "end": "458729"
  },
  {
    "text": "an IM role and in this case let's talk about integration with your on-prem identity provider and let's say using",
    "start": "458729",
    "end": "464729"
  },
  {
    "text": "sam'l in this case in this case the first step is the user will log in to a",
    "start": "464729",
    "end": "470340"
  },
  {
    "text": "portal to authenticate themselves against their IDP this could be for example a DFS once the user is",
    "start": "470340",
    "end": "477539"
  },
  {
    "text": "authenticated they get back a sam'l assertion the same assertion based on a sam'l claims so for example for AWS",
    "start": "477539",
    "end": "483719"
  },
  {
    "text": "console access very often that will mean what groups am i part of which map to I",
    "start": "483719",
    "end": "489120"
  },
  {
    "text": "am roles within AWS typically one to one relationship and Raj is actually going to talk about that as well and then you",
    "start": "489120",
    "end": "496020"
  },
  {
    "text": "take all that Santa MOU assertion information you pass it in to the AWS sign in URL and then because there is a",
    "start": "496020",
    "end": "503490"
  },
  {
    "text": "trust relationship that's established between your identity provider and AWS console service you're able to access",
    "start": "503490",
    "end": "510360"
  },
  {
    "text": "the AWS console so that's another typical flow now there's many other things we have in AWS SSO service I'm",
    "start": "510360",
    "end": "516779"
  },
  {
    "text": "not going to go deep into some of these other services and just want to kind of prep you for some of the concepts that",
    "start": "516779",
    "end": "522300"
  },
  {
    "text": "Raj is going to talk about the next key concept I want to discuss is permission",
    "start": "522300",
    "end": "527760"
  },
  {
    "text": "boundaries and the idea of permission boundaries is that allows you to create delegated i.m administrators within a",
    "start": "527760",
    "end": "535060"
  },
  {
    "text": "with governance and control in mind now why do you need to delegate",
    "start": "535060",
    "end": "540490"
  },
  {
    "text": "I am controls why can't the centralized IMT and create all the policies and the",
    "start": "540490",
    "end": "546400"
  },
  {
    "text": "answer is sometimes when you use AWS services like for example lambda if you're familiar you have to create",
    "start": "546400",
    "end": "551740"
  },
  {
    "text": "what's called an execution role right if your lambda function needs access I say an s3 bucket the lambda function needs",
    "start": "551740",
    "end": "557500"
  },
  {
    "text": "an execution role that has permission to that s3 bucket having the developers wait for a centralized team to create",
    "start": "557500",
    "end": "563350"
  },
  {
    "text": "that role attach a policy could really take a long time so we want to have a concept of developers in a DevOps team",
    "start": "563350",
    "end": "570100"
  },
  {
    "text": "to be able to create their iam roles but we want to do it in a safe manner before",
    "start": "570100",
    "end": "575770"
  },
  {
    "text": "permission boundaries this was challenging right because you really had certain I am actions that you know we",
    "start": "575770",
    "end": "582100"
  },
  {
    "text": "call them godlike right if you allow a developer to attach a role policy or put",
    "start": "582100",
    "end": "587290"
  },
  {
    "text": "a user role policy they could grant access to any resource in the account and they could do anything they want in that account so historically what have",
    "start": "587290",
    "end": "594940"
  },
  {
    "text": "customers done they would have to implement a whole bunch of detective and responsive controls to be able to",
    "start": "594940",
    "end": "601060"
  },
  {
    "text": "address that maybe they would have a cloud watch events that would trigger off and see what kind of role the user",
    "start": "601060",
    "end": "606100"
  },
  {
    "text": "created and maybe have to roll it back but it was not really effective and it was not really a preventive policy right",
    "start": "606100",
    "end": "613930"
  },
  {
    "text": "it was really just detective and responsive so what permission boundaries allows you to do is it allows you to",
    "start": "613930",
    "end": "620010"
  },
  {
    "text": "delegate I am Administration to your DevOps teams but put a boundary of scope",
    "start": "620010",
    "end": "626230"
  },
  {
    "text": "to what they could do so you they could create their lambda I am role they could create their lambda policies but they",
    "start": "626230",
    "end": "633339"
  },
  {
    "text": "could never step outside of the boundary that you have defined and this really allows developers to move fast they",
    "start": "633339",
    "end": "639880"
  },
  {
    "text": "don't have to wait on that centralized team and that's what increases the agility so let's walk through an example",
    "start": "639880",
    "end": "646510"
  },
  {
    "text": "and enter an example with permission boundaries and how it works and whenever you're dealing with permission",
    "start": "646510",
    "end": "651760"
  },
  {
    "text": "boundaries you want to look at it from two perspectives the account admin who in this case assume it's a centralized I",
    "start": "651760",
    "end": "658600"
  },
  {
    "text": "am team and the actual DevOps team so let's start with the account admin the first step is to create your permission",
    "start": "658600",
    "end": "665470"
  },
  {
    "text": "boundary the permission boundary uses the same I am see language anything you could do in a",
    "start": "665470",
    "end": "670959"
  },
  {
    "text": "typical IM policy you could do in a permission boundary so in this case if you could see we're defining certain",
    "start": "670959",
    "end": "677500"
  },
  {
    "text": "actions they are allowed in the account like access to s3 lamda DynamoDB and so forth but we don't want the developers",
    "start": "677500",
    "end": "685360"
  },
  {
    "text": "to do anything with certain sensitive buckets so we put a deny policy on the",
    "start": "685360",
    "end": "690490"
  },
  {
    "text": "cloud trailer bucket so the developers don't accidentally delete that bucket and we're going to call this permission",
    "start": "690490",
    "end": "696339"
  },
  {
    "text": "boundary as company boundary so that's step number one step number two is now",
    "start": "696339",
    "end": "703000"
  },
  {
    "text": "I'm gonna create my DevOps role and I'm gonna allow the developers to create iam",
    "start": "703000",
    "end": "708899"
  },
  {
    "text": "policies and roles right so I want to give them I am create role permissions I want to allow them to attach the",
    "start": "708899",
    "end": "714760"
  },
  {
    "text": "policies but if you notice there's a condition statement that says only if they attach the company boundary if they",
    "start": "714760",
    "end": "722350"
  },
  {
    "text": "don't attach that company boundary the ability to create that policy will fail",
    "start": "722350",
    "end": "727360"
  },
  {
    "text": "so this becomes a really safe way to allow the developers to create these",
    "start": "727360",
    "end": "733200"
  },
  {
    "text": "policies in these roles for let's say their lambda functions but making sure that they will never step outside of the",
    "start": "733200",
    "end": "739089"
  },
  {
    "text": "boundary now also at the bottom snippet you will see that we also allowing the",
    "start": "739089",
    "end": "745029"
  },
  {
    "text": "developers to create certain policies and even delete versions of policies but we're scoping it down to a specific",
    "start": "745029",
    "end": "750459"
  },
  {
    "text": "prefix one of the nice features in I am is you can organize your policies into folders prefixes so for example if the",
    "start": "750459",
    "end": "757630"
  },
  {
    "text": "account administrators the I am central team has certain policies they don't want anyone to touch they could put them",
    "start": "757630",
    "end": "762970"
  },
  {
    "text": "in one prefix and all the application policies could go to different prefix and because we could use research level",
    "start": "762970",
    "end": "768970"
  },
  {
    "text": "permissions we could restrict developers to only be able to delete or modifies their policies so I'm done with the",
    "start": "768970",
    "end": "775570"
  },
  {
    "text": "account administrator side now let's look at it from the developer experience the developer now is able to create an",
    "start": "775570",
    "end": "781990"
  },
  {
    "text": "IM role so in this case I'm creating an IM role but you will notice the third argument is permission boundary and if I",
    "start": "781990",
    "end": "789100"
  },
  {
    "text": "don't pass in that permission boundary this API call will fail you'll get an access denied so you cannot you know if they'd that",
    "start": "789100",
    "end": "797250"
  },
  {
    "text": "now the developer could then create their policy and in this case you will see",
    "start": "797250",
    "end": "802660"
  },
  {
    "text": "they're actually allowing themselves access to entire s3 API right all",
    "start": "802660",
    "end": "807670"
  },
  {
    "text": "there's three resources the resource star and I'll come back to this in a second and then of course the developer",
    "start": "807670",
    "end": "814180"
  },
  {
    "text": "then takes that policy that they have created and attaches it to their role which then it could use with their lambda function so what's going to",
    "start": "814180",
    "end": "821110"
  },
  {
    "text": "happen here because we have a permission boundary that says deny on the cloud",
    "start": "821110",
    "end": "826569"
  },
  {
    "text": "trail bucket we have a permission that the user created for themselves that DevOps user created that gave them",
    "start": "826569",
    "end": "832660"
  },
  {
    "text": "access to everything but the effective permission will be denied if the user tries to do anything with that s3 cloud",
    "start": "832660",
    "end": "839019"
  },
  {
    "text": "shell bucket they will be denied now why is that because the way permission boundaries work is when you have",
    "start": "839019",
    "end": "846370"
  },
  {
    "text": "permission boundaries and permission policies the effective permission is the overlap of those two so for example if",
    "start": "846370",
    "end": "853089"
  },
  {
    "text": "my permission boundary gives me access to ec2 and s3 and my permission policy",
    "start": "853089",
    "end": "858610"
  },
  {
    "text": "gives me access to ec2 and SQS my effective permission will only be ec2 same thing in our use case the effective",
    "start": "858610",
    "end": "865569"
  },
  {
    "text": "permission will be the developer could use any s3 bucket they want but not the cloud shell bucket which was denied in",
    "start": "865569",
    "end": "871389"
  },
  {
    "text": "the permission boundary now some of you may be thinking that this concept is familiar and it is if you are a familiar",
    "start": "871389",
    "end": "879550"
  },
  {
    "text": "with AWS organizations AWS organizations allows you to create a master account",
    "start": "879550",
    "end": "884920"
  },
  {
    "text": "which will become your billing account it allows you to programmatically to create organizational units Oh use",
    "start": "884920",
    "end": "891100"
  },
  {
    "text": "and it allows you then to create accounts all programmatically and what",
    "start": "891100",
    "end": "896139"
  },
  {
    "text": "you're able to do is you're able to attach what's called service control policies on each of these levels you could do it at the root level you could",
    "start": "896139",
    "end": "902740"
  },
  {
    "text": "do it at the owe you level or you could do it at the account level and scps are somewhat similar to permission",
    "start": "902740",
    "end": "908589"
  },
  {
    "text": "boundaries SCPs allow you to control what the principles in the underlying",
    "start": "908589",
    "end": "913600"
  },
  {
    "text": "accounts could do so for example you could have a white list of all the services that the principal could use in",
    "start": "913600",
    "end": "921309"
  },
  {
    "text": "the accounts or you could block certain services you could use it in two modes and the idea is those permissions could",
    "start": "921309",
    "end": "928660"
  },
  {
    "text": "not be overridden by the local i.m administrator so for example I could whitelist specific AWS services let's",
    "start": "928660",
    "end": "935470"
  },
  {
    "text": "say ec2 s3 but not maybe I don't know sqs just as an example and then even if the",
    "start": "935470",
    "end": "940810"
  },
  {
    "text": "developer then even if the IM administrators in the local accounts give them access to sqs they will not be",
    "start": "940810",
    "end": "946000"
  },
  {
    "text": "able to use SQL service because in SCP you have not whitelist at that service and that's what we mean by SCPs are",
    "start": "946000",
    "end": "952899"
  },
  {
    "text": "necessary but not sufficient SCPs themselves don't grant you access they just create a boundary and organizational boundaries or that you",
    "start": "952899",
    "end": "959350"
  },
  {
    "text": "cannot step over but you will always need the permissions within I am to actually perform and use that specific",
    "start": "959350",
    "end": "966399"
  },
  {
    "text": "service and what's the effective permission between an SCP and the iam permissions in the child accounts it's",
    "start": "966399",
    "end": "973029"
  },
  {
    "text": "the same concept it's the overlap of the two only things that overlap between SCP and your",
    "start": "973029",
    "end": "979329"
  },
  {
    "text": "permission policies within the actual child account is what you could do now if we put this all together if we now",
    "start": "979329",
    "end": "986529"
  },
  {
    "text": "have our service control policies our scps which are think of them as organizational boundaries then we have",
    "start": "986529",
    "end": "993010"
  },
  {
    "text": "our permission boundaries which are principal level boundaries and then we have our actual permission policy the",
    "start": "993010",
    "end": "1000029"
  },
  {
    "text": "effective permission of the users will be now the intersection of all of these of all of these three things so let's",
    "start": "1000029",
    "end": "1008610"
  },
  {
    "text": "just look at a policy evaluation now that I have all these pieces that in place house is going to work well",
    "start": "1008610",
    "end": "1014130"
  },
  {
    "text": "immediately we start with an implicit deny and we look for any explicit deny if there's no explicit deny then we go",
    "start": "1014130",
    "end": "1021420"
  },
  {
    "text": "on to the next step we evaluate their organizational boundary which is the SCP if there is an allow in the",
    "start": "1021420",
    "end": "1027928"
  },
  {
    "text": "organizational boundary now I could look at the principal boundary if there's an allow there I could proceed to the next",
    "start": "1027929",
    "end": "1033780"
  },
  {
    "text": "step if the user for example is using an IM role then I could go ahead and",
    "start": "1033780",
    "end": "1038819"
  },
  {
    "text": "evaluate my assumed role permissions and make sure that the user is actually trusted to assume that role then I could",
    "start": "1038819",
    "end": "1045209"
  },
  {
    "text": "evaluate their permissions and make sure that they're actually allowed to use the AWS resources and only if they could do",
    "start": "1045209",
    "end": "1051870"
  },
  {
    "text": "all of those things the final decision will be yes if there is a no in any one of these steps the final decision will",
    "start": "1051870",
    "end": "1058020"
  },
  {
    "text": "be a no so this is a brief primer and will help you prepare for the next part",
    "start": "1058020",
    "end": "1064260"
  },
  {
    "text": "of the presentation and with that I'm going to pass it on to Raj who's going to talk about how Vanguard is using these concepts",
    "start": "1064260",
    "end": "1070260"
  },
  {
    "text": "create organizational and principal level boundaries okay good morning Thank",
    "start": "1070260",
    "end": "1079560"
  },
  {
    "text": "You Ilya my name is Raj Sharma I'm a security architect at Vanguard and we've",
    "start": "1079560",
    "end": "1085110"
  },
  {
    "text": "been working with Ilya quite extensively on our I am and I'm gonna show you a couple things how we use these concepts",
    "start": "1085110",
    "end": "1091470"
  },
  {
    "text": "in our enterprise just as a related note we have some there's actually some other",
    "start": "1091470",
    "end": "1098010"
  },
  {
    "text": "breakouts here that describe permission boundaries and our account structure so",
    "start": "1098010",
    "end": "1103230"
  },
  {
    "text": "ent 302 is going to talk about how Vanguard did there are billing at scale",
    "start": "1103230",
    "end": "1110240"
  },
  {
    "text": "net 323 this is how we're used private",
    "start": "1110240",
    "end": "1115320"
  },
  {
    "text": "link and then also there's the sec 316 which was a presentation earlier Monday",
    "start": "1115320",
    "end": "1122130"
  },
  {
    "text": "and it really talked about how I am policies are and permission boundaries",
    "start": "1122130",
    "end": "1127680"
  },
  {
    "text": "are put together so these are these are some related topics here just a little",
    "start": "1127680",
    "end": "1133050"
  },
  {
    "text": "bit background about Vanguard so Vanguard is one of the world's largest investment companies offering a large",
    "start": "1133050",
    "end": "1139770"
  },
  {
    "text": "selection of low costs mutual funds ETFs advice and related services we get began",
    "start": "1139770",
    "end": "1146040"
  },
  {
    "text": "operations in 1975 and headquartered in Malvern Pennsylvania we have multiple",
    "start": "1146040",
    "end": "1153930"
  },
  {
    "text": "lines of business we have retail business which is for for shareholders",
    "start": "1153930",
    "end": "1159360"
  },
  {
    "text": "and also institutional advisory services and international lines of business so",
    "start": "1159360",
    "end": "1165300"
  },
  {
    "text": "some of the goals that I want to talk to about today is really what Ilya was mentioning around DevOps and how do we",
    "start": "1165300",
    "end": "1170370"
  },
  {
    "text": "flatten speedbumps to get product to market safely and quickly a lot of times when we're dealing with I am and the",
    "start": "1170370",
    "end": "1176490"
  },
  {
    "text": "centralized Authority these develop teams they need to go and request put a ticket and a ticketing system to gain",
    "start": "1176490",
    "end": "1182550"
  },
  {
    "text": "access to a certain certain system so that's the sort of traditional I am",
    "start": "1182550",
    "end": "1187590"
  },
  {
    "text": "approach and that ticketing system is really the audit of who's doing what where and where they're coming from so",
    "start": "1187590",
    "end": "1195170"
  },
  {
    "text": "in the future we really want to systematically keep users within their boundary so we're going to use these",
    "start": "1195170",
    "end": "1201210"
  },
  {
    "text": "concepts like scps I am policies and permission boundaries to make that happen some of the things that I was",
    "start": "1201210",
    "end": "1208770"
  },
  {
    "text": "that I'm going to demonstrate here is an example of our custom Federation using Amazon's STS using permission boundaries",
    "start": "1208770",
    "end": "1216779"
  },
  {
    "text": "on the current roll to the rent boundary escape of their current role also using",
    "start": "1216779",
    "end": "1222870"
  },
  {
    "text": "preventative I am controls and then I'm going to touch at the end using an operating system level control",
    "start": "1222870",
    "end": "1230658"
  },
  {
    "text": "so micro count strategy and blast radius so this is how we can help control what",
    "start": "1231110",
    "end": "1238350"
  },
  {
    "text": "users can actually do and through them through a micro account strategy this",
    "start": "1238350",
    "end": "1243899"
  },
  {
    "text": "was actually our approach back in 2016 we we took our basic data center",
    "start": "1243899",
    "end": "1249230"
  },
  {
    "text": "approach and forklifted it up into the cloud we had big large counts we had",
    "start": "1249230",
    "end": "1255120"
  },
  {
    "text": "many many users in the accounts many many roles and we started having so many roles in these large accounts you're",
    "start": "1255120",
    "end": "1262380"
  },
  {
    "text": "going to have to create very fine-grained access control so things like resources and conditions with the inner iam policy and this this was all",
    "start": "1262380",
    "end": "1270870"
  },
  {
    "text": "controlled through a central organization and it was actually difficult to scale up also all these",
    "start": "1270870",
    "end": "1276419"
  },
  {
    "text": "lines that are going back and forth these would be things like DBC peering in between these large accounts all that",
    "start": "1276419",
    "end": "1282809"
  },
  {
    "text": "is going to get replaced with private link so how are we doing Federation so",
    "start": "1282809",
    "end": "1289020"
  },
  {
    "text": "the original approach was we have our our user that needs access to something in AWS this user would talk to the IDP",
    "start": "1289020",
    "end": "1297000"
  },
  {
    "text": "service which is actually a custom written service that uses Amazon's STS it authenticates the user against our",
    "start": "1297000",
    "end": "1303419"
  },
  {
    "text": "corporate LDAP Active Directory and then we'll call the STS assume role on the",
    "start": "1303419",
    "end": "1309450"
  },
  {
    "text": "Amazon sign-in service a role is created and assigned to that user and the user has a set of access keys as well as",
    "start": "1309450",
    "end": "1316049"
  },
  {
    "text": "policies that apply to that user they can then use that to connect to Amazon and the way we did this was we mapped",
    "start": "1316049",
    "end": "1323850"
  },
  {
    "text": "roles in Amazon to groups inside our Active Directory and there was a",
    "start": "1323850",
    "end": "1329669"
  },
  {
    "text": "one-to-one mapping of these groups so every time we've created an Amazon I am role we had to create the",
    "start": "1329669",
    "end": "1335700"
  },
  {
    "text": "equivalent directory role on the other so this would be a simple example we",
    "start": "1335700",
    "end": "1343409"
  },
  {
    "text": "would have basically a user here John Doe has multiple roles that are assigned within the directory service and the",
    "start": "1343409",
    "end": "1350549"
  },
  {
    "text": "naming convention here that we used was we started with AWS and then the account number and then the actual name of the",
    "start": "1350549",
    "end": "1357750"
  },
  {
    "text": "role that was in the account our IDP service then took that information and created the AR and to do the STS assume",
    "start": "1357750",
    "end": "1364080"
  },
  {
    "text": "role action our custom IDP also has a",
    "start": "1364080",
    "end": "1371460"
  },
  {
    "text": "rest interface so we built this out this would be an example of the the rest call you would make you would request tokens",
    "start": "1371460",
    "end": "1379080"
  },
  {
    "text": "for the dev ops role for this account of all ones you'd get back this JSON object",
    "start": "1379080",
    "end": "1384360"
  },
  {
    "text": "that would have your access key your secret access key and your session key which you could use for command line we",
    "start": "1384360",
    "end": "1390779"
  },
  {
    "text": "also generate a console URL so if you wanted to go ahead and hit the console directly you could do that so we have to",
    "start": "1390779",
    "end": "1397860"
  },
  {
    "text": "create these roles in Active Directory to create these roles on our directory server so one of the issues with this approach was that as these users started",
    "start": "1397860",
    "end": "1406289"
  },
  {
    "text": "using our accounts we had to create many many roles in these large accounts and create this fine-grained access control",
    "start": "1406289",
    "end": "1413809"
  },
  {
    "text": "it was a manual process to set up accounts as well back then so when we set up an accounts we had to create the",
    "start": "1413809",
    "end": "1419610"
  },
  {
    "text": "roles we have to create the items and the directory server and it just took days sometimes weeks to have all this",
    "start": "1419610",
    "end": "1425399"
  },
  {
    "text": "set up and the Federation and the entitlement grant even became very complex so how do we solve this problem",
    "start": "1425399",
    "end": "1431809"
  },
  {
    "text": "we want to actually shrink the account so the number of people that were in the",
    "start": "1431809",
    "end": "1437399"
  },
  {
    "text": "account for the number systems in the account was limited to just that domain and we did that through some automation",
    "start": "1437399",
    "end": "1444590"
  },
  {
    "text": "in one of the prior sessions the NT 323 covers this was the Vanguard cloud",
    "start": "1444590",
    "end": "1450750"
  },
  {
    "text": "registry service and so this is a custom-built application it's really an account orchestration tool it's",
    "start": "1450750",
    "end": "1457620"
  },
  {
    "text": "connected to a root oh you and then our account structure looks something like this in organizations we have very",
    "start": "1457620",
    "end": "1463919"
  },
  {
    "text": "system levels so a developer system level a staging level and a production level underneath of those",
    "start": "1463919",
    "end": "1471630"
  },
  {
    "text": "we would have the individual line of businesses and then under the line of businesses would be the the multiple",
    "start": "1471630",
    "end": "1477660"
  },
  {
    "text": "accounts and all these accounts will be created through this automation tool so for example a user could go ahead to",
    "start": "1477660",
    "end": "1485040"
  },
  {
    "text": "this orchestration call it create account and then start creating these accounts now if we were in our prior",
    "start": "1485040",
    "end": "1492060"
  },
  {
    "text": "model where we're actually creating roles for each one of these accounts and then creating the corresponding LDAP",
    "start": "1492060",
    "end": "1498570"
  },
  {
    "text": "roles every time when these accounts was created we have to create a whole nother set of roles that just turned into rol sprawl within our directory server so",
    "start": "1498570",
    "end": "1506640"
  },
  {
    "text": "I'll show you how we address that Ilya touched upon the SCPs so that's actually a control this place that every level of",
    "start": "1506640",
    "end": "1513300"
  },
  {
    "text": "the OU's where we can control access as to what services are allowed and which servers are not allowed this is really a",
    "start": "1513300",
    "end": "1520170"
  },
  {
    "text": "the sledgehammer approach so this if you've ever used it if you've ever used it SCP and you put a denying that SCP",
    "start": "1520170",
    "end": "1527520"
  },
  {
    "text": "nobody no principle in that account would have access to do those actions so that you can set up very tight you know",
    "start": "1527520",
    "end": "1534240"
  },
  {
    "text": "very strong boundaries that way some of the benefits of these smaller accounts",
    "start": "1534240",
    "end": "1539970"
  },
  {
    "text": "with this would be this blast radius so we trust our developers we we want",
    "start": "1539970",
    "end": "1545190"
  },
  {
    "text": "them to be able to move faster and we want them to be able to create I am execution rolls and instance profiles",
    "start": "1545190",
    "end": "1550620"
  },
  {
    "text": "but if we put them in these larger accounts they can start walking all over the account so with the smaller account",
    "start": "1550620",
    "end": "1557430"
  },
  {
    "text": "the account itself is like its own firewall and can reduce that blast",
    "start": "1557430",
    "end": "1563520"
  },
  {
    "text": "radius of anything does go wrong the I am is is actually easier to do and since",
    "start": "1563520",
    "end": "1568800"
  },
  {
    "text": "we're moving away from the V PC peering we can use things like declarative networking or private link instead of",
    "start": "1568800",
    "end": "1574830"
  },
  {
    "text": "the V PC peering and this will help us determine actually what accounts have access to what other accounts some of",
    "start": "1574830",
    "end": "1583200"
  },
  {
    "text": "the benefits of our orchestration this is really a self-serve account self-service account creation so as",
    "start": "1583200",
    "end": "1588990"
  },
  {
    "text": "opposed to go into a central authority that creates your account for you we can go in and create one yourself and also",
    "start": "1588990",
    "end": "1594870"
  },
  {
    "text": "because that blast radius is very small the I am policies no longer need to have",
    "start": "1594870",
    "end": "1600780"
  },
  {
    "text": "these explicit condition statements anymore we can actually have things like resource tarnower policy or we actually remove the",
    "start": "1600780",
    "end": "1607450"
  },
  {
    "text": "condition entirely because they can only impact the things that are within that account okay so how do we get from that",
    "start": "1607450",
    "end": "1616149"
  },
  {
    "text": "original model of STS to the newer model so I said that the problems with some of",
    "start": "1616149",
    "end": "1621519"
  },
  {
    "text": "the direct mapping a large amount of our Active Directory roles and the entitlement granting so we came up with",
    "start": "1621519",
    "end": "1628210"
  },
  {
    "text": "this system of indirect mapping to accounts at the öyou level and with that",
    "start": "1628210",
    "end": "1634480"
  },
  {
    "text": "led to was fewer Active Directory roles and a simpler entitlement granting strategy folks who were administrators",
    "start": "1634480",
    "end": "1642220"
  },
  {
    "text": "automatically got access to new accounts so we're actually doing the entitlement",
    "start": "1642220",
    "end": "1647230"
  },
  {
    "text": "granting at the owe you so if new accounts are created and there's an administrator let's say a production support or an I am a user I am",
    "start": "1647230",
    "end": "1653769"
  },
  {
    "text": "administrator they would automatically get access to that account that leads to",
    "start": "1653769",
    "end": "1658809"
  },
  {
    "text": "the scalability and also helps with the role lifecycle management so we don't have so many roles to to keep track of",
    "start": "1658809",
    "end": "1666120"
  },
  {
    "text": "okay so how do we update our RS our IEP service so this time our user is going",
    "start": "1666240",
    "end": "1672429"
  },
  {
    "text": "to go ahead and authenticate to the IDP service just like they did before and we'll pull a list of roles by oh you we",
    "start": "1672429",
    "end": "1678549"
  },
  {
    "text": "do this by using the organization's so organizations has all our accounts set up in there and we know which oh you",
    "start": "1678549",
    "end": "1684970"
  },
  {
    "text": "that they're going after and we could pull all the accounts the account numbers for that oh you we then call the",
    "start": "1684970",
    "end": "1691179"
  },
  {
    "text": "the sign-on endpoint for STS and instead of with a single Arn we call it with multiple Lords so we do multiple assume",
    "start": "1691179",
    "end": "1697870"
  },
  {
    "text": "role commands and then this leads to a set of access keys and a set of",
    "start": "1697870",
    "end": "1703899"
  },
  {
    "text": "permissions that they can use so now our LDAP role is actually mapped to an AW",
    "start": "1703899",
    "end": "1709690"
  },
  {
    "text": "and this is all done through custom coding of the IDP using Amazon's STS service so now when you look at our",
    "start": "1709690",
    "end": "1717659"
  },
  {
    "text": "entitlement mapping here you have the same user here John Doe but instead of",
    "start": "1717659",
    "end": "1722799"
  },
  {
    "text": "the entitlements done at the account level they're done at an oh you level",
    "start": "1722799",
    "end": "1728049"
  },
  {
    "text": "and this is what the IDP uses to pull out the various account numbers so what",
    "start": "1728049",
    "end": "1734440"
  },
  {
    "text": "does this look like if this is our account structure or simplified account structure and I have three users here Enon is an i am an",
    "start": "1734440",
    "end": "1742160"
  },
  {
    "text": "administrator bob is a retail devops user and alice is production support and",
    "start": "1742160",
    "end": "1747170"
  },
  {
    "text": "there are members of these corresponding groups let me do the Federation for",
    "start": "1747170",
    "end": "1754520"
  },
  {
    "text": "Alice for prod support she gets access to all the production support she gets",
    "start": "1754520",
    "end": "1759650"
  },
  {
    "text": "access Keys for all these production support accounts bob is a developer so",
    "start": "1759650",
    "end": "1764900"
  },
  {
    "text": "he is his entitlement granting is going to be done at the retail oh you level for developer and has access to just",
    "start": "1764900",
    "end": "1771170"
  },
  {
    "text": "those accounts in the retail environment and Enon who's an IM administrator has",
    "start": "1771170",
    "end": "1776660"
  },
  {
    "text": "to manage all the accounts will assign the entitlement at the root level and then our STS service will generate keys",
    "start": "1776660",
    "end": "1783620"
  },
  {
    "text": "for every single account so we're able to accomplish blast radius because you can only feder a tin to one account at a",
    "start": "1783620",
    "end": "1790040"
  },
  {
    "text": "time if you needed to move to another account you actually have to log off and log back into the next account so our",
    "start": "1790040",
    "end": "1797600"
  },
  {
    "text": "IDP service now our REST API instead of returning just a single access key and secret keys it returns an array of these",
    "start": "1797600",
    "end": "1805580"
  },
  {
    "text": "keys we're also able to then create common roles for each one of these",
    "start": "1805580",
    "end": "1810590"
  },
  {
    "text": "accounts things like administrator or privileged roles these will be like your bootstrap network administrator hiam",
    "start": "1810590",
    "end": "1817640"
  },
  {
    "text": "admins and then some of the non administrator roles like auditors devops fraud and also some third party monitors",
    "start": "1817640",
    "end": "1824240"
  },
  {
    "text": "so every one of these accounts as the VCR service spins up these accounts it",
    "start": "1824240",
    "end": "1829280"
  },
  {
    "text": "automatically creates these roles with the proper trust relationship and that's",
    "start": "1829280",
    "end": "1834440"
  },
  {
    "text": "how we're able to contain the blast radius using micro accounts but how do",
    "start": "1834440",
    "end": "1840290"
  },
  {
    "text": "we keep people once they're within the account how do we keep them from getting outside the boundaries of the accounts",
    "start": "1840290",
    "end": "1845690"
  },
  {
    "text": "how do we stop a non administrator from becoming an administrator and that's where we use these the concept I am",
    "start": "1845690",
    "end": "1851990"
  },
  {
    "text": "Boundaries so Ilya touched upon this at the beginning here's sort of an example day of what one of our developers could",
    "start": "1851990",
    "end": "1859040"
  },
  {
    "text": "be doing they could create let's say that's three bucket and then they're",
    "start": "1859040",
    "end": "1864740"
  },
  {
    "text": "going to create an I am role then they're going to put an I am policy on",
    "start": "1864740",
    "end": "1870380"
  },
  {
    "text": "the role that has a specific s3 bucket as a resource so the the IM policy says i can",
    "start": "1870380",
    "end": "1877619"
  },
  {
    "text": "access this s3 bucket and that's a resource constraint they're also gonna put the corresponding bucket policy on",
    "start": "1877619",
    "end": "1884190"
  },
  {
    "text": "the bucket restricting only access to that one I am role so we're trying to tightly couple two things together here",
    "start": "1884190",
    "end": "1890700"
  },
  {
    "text": "and then they could deploy a lambda or in ec2 instance with that I am role so",
    "start": "1890700",
    "end": "1898559"
  },
  {
    "text": "what does this look like so the DevOps user here would have would",
    "start": "1898559",
    "end": "1904229"
  },
  {
    "text": "require full access to lambda and ec2 to make this happen and some limited I am and s3 access and what you wind up doing",
    "start": "1904229",
    "end": "1911489"
  },
  {
    "text": "is you wind up binding sort of this let's say a lambda function here with his execution well policy that with a",
    "start": "1911489",
    "end": "1916859"
  },
  {
    "text": "specified resource and this s3 bucket policy that's also pointing back to the",
    "start": "1916859",
    "end": "1923609"
  },
  {
    "text": "role ID so creates that type coupling so any other lambda functions that are in",
    "start": "1923609",
    "end": "1929009"
  },
  {
    "text": "this account are not going to be able to get into that s3 bucket okay so what was",
    "start": "1929009",
    "end": "1936119"
  },
  {
    "text": "the I M permissions that allow the DevOps role to do this they could look something like this so here we're",
    "start": "1936119",
    "end": "1942929"
  },
  {
    "text": "allowing lambda star we're allowing EC to star this is just for the for",
    "start": "1942929",
    "end": "1947970"
  },
  {
    "text": "simplifying this this demonstration here we have a set of I am policies I am",
    "start": "1947970",
    "end": "1953669"
  },
  {
    "text": "actions that are allowed in a setup s3 actions that are loud and then one thing I mentioned was we set this to resource",
    "start": "1953669",
    "end": "1959849"
  },
  {
    "text": "star this is really allowing them to access anything within that account but since the account is so small it's it's",
    "start": "1959849",
    "end": "1966989"
  },
  {
    "text": "really not that big of a deal but what you find is that there was no denies in",
    "start": "1966989",
    "end": "1973409"
  },
  {
    "text": "that statement so all the denies were implicit denies and we sort of have this",
    "start": "1973409",
    "end": "1981059"
  },
  {
    "text": "policy in place that let's say only the security team can manage an iam user or an Internet gateway or VP CP or a cloud",
    "start": "1981059",
    "end": "1989159"
  },
  {
    "text": "trail but what if this devops user since theta you know what if the dev ops user",
    "start": "1989159",
    "end": "1996450"
  },
  {
    "text": "tries to do any of these things if they try to create an I am user they could be an attacker trying to masquerade as a",
    "start": "1996450",
    "end": "2002239"
  },
  {
    "text": "different person if they create an Internet gateway these hacker could cause data breach they could create or create a phishing site",
    "start": "2002239",
    "end": "2008240"
  },
  {
    "text": "out of your account if you have a V PC peer set up they can leak data to an unsanctioned AWS accounts and then",
    "start": "2008240",
    "end": "2016160"
  },
  {
    "text": "lastly cloud trail if the attacker can stop cloud trail they can start hiding their tracks so these are things that we",
    "start": "2016160",
    "end": "2022040"
  },
  {
    "text": "reserved for the security team or an administrator and we don't want a devops person having the ability to do this so",
    "start": "2022040",
    "end": "2032090"
  },
  {
    "text": "how does how does a devops person do this how do they escape the simplicity die this happens is because they have",
    "start": "2032090",
    "end": "2039230"
  },
  {
    "text": "this one permission called patrol policy and this is a first degree",
    "start": "2039230",
    "end": "2045080"
  },
  {
    "text": "implicit first degree escape meaning that they're going to try to manipulate their own role to to get out of this",
    "start": "2045080",
    "end": "2052730"
  },
  {
    "text": "boundary so I'm actually going to show you a demo here of how this works",
    "start": "2052730",
    "end": "2059649"
  },
  {
    "text": "this screen set up here",
    "start": "2068800",
    "end": "2073270"
  },
  {
    "text": "okay in my demonstrations here I have basically two windows setup the the",
    "start": "2074889",
    "end": "2080870"
  },
  {
    "text": "browser window that you see here would be your administrator user the the",
    "start": "2080870",
    "end": "2086060"
  },
  {
    "text": "actual legitimate person that's supposed to be able to Minister the account there's a terminal window in here and",
    "start": "2086060",
    "end": "2091520"
  },
  {
    "text": "the terminal window represents the attacker and in this case the attackers name is Alice so what you see here is",
    "start": "2091520",
    "end": "2101380"
  },
  {
    "text": "this is the the DevOps role that we saw before and it has this policy here and",
    "start": "2101380",
    "end": "2109750"
  },
  {
    "text": "here's the the window for clout trail and you can see the cloud trail is actually turned on in this account okay",
    "start": "2109750",
    "end": "2120410"
  },
  {
    "text": "so here's our attacker Alice Alice is actually a federated user in here so we",
    "start": "2120410",
    "end": "2125690"
  },
  {
    "text": "can call STS and I can show you that is it assumed role with the dev ops role of Alice so Allison wants to actually turn",
    "start": "2125690",
    "end": "2134420"
  },
  {
    "text": "clout trail off so first she's going to take a look and describe trails and gets an access denied because this is the",
    "start": "2134420",
    "end": "2140630"
  },
  {
    "text": "implicit implicit deny was unable to do that but she knows she has put role",
    "start": "2140630",
    "end": "2147260"
  },
  {
    "text": "policy so she's going to create something called an administrator access and this is a JSON file that has all",
    "start": "2147260",
    "end": "2153950"
  },
  {
    "text": "actions on all resources and she's going to attach this to her own role so it",
    "start": "2153950",
    "end": "2159530"
  },
  {
    "text": "puts this on the on the dev ops role itself and because they have put role policy that was successful Alice is just",
    "start": "2159530",
    "end": "2168530"
  },
  {
    "text": "elevated her privilege at this point",
    "start": "2168530",
    "end": "2173930"
  },
  {
    "text": "Alice can go ahead and do describe trails and that function works now she",
    "start": "2173930",
    "end": "2182120"
  },
  {
    "text": "can then go ahead and tried to stop the trails and that was successful there was",
    "start": "2182120",
    "end": "2189530"
  },
  {
    "text": "no error returned if you look at the administrator view here in the browser we'll just refresh this and you'll see",
    "start": "2189530",
    "end": "2198950"
  },
  {
    "text": "the login was turned off so this attack was successful",
    "start": "2198950",
    "end": "2204430"
  },
  {
    "text": "okay so how do we normally stop this alright we'll stop this through the typical processes through an IM",
    "start": "2205210",
    "end": "2211070"
  },
  {
    "text": "enforcement will add the explicit denied to the I am role so you'll see here that",
    "start": "2211070",
    "end": "2217280"
  },
  {
    "text": "at the bottom of this deny policy set stop logging is actually a denied action",
    "start": "2217280",
    "end": "2223810"
  },
  {
    "text": "we also don't want them doing anything else anymore to this this role so we'll add another policy on here that denies",
    "start": "2223810",
    "end": "2230300"
  },
  {
    "text": "them the ability to modify or put role policy on the dev ops role so we'll name",
    "start": "2230300",
    "end": "2237020"
  },
  {
    "text": "the resource and we'll see you cannot modify your own role you cannot modify yourself anymore okay so here again is",
    "start": "2237020",
    "end": "2246290"
  },
  {
    "text": "the the outcome of that so this has been reset here so caught your login has been",
    "start": "2246290",
    "end": "2253460"
  },
  {
    "text": "turned back on you can see here in the",
    "start": "2253460",
    "end": "2258470"
  },
  {
    "text": "role we're going to go ahead and add the restricted policies so we're gonna take",
    "start": "2258470",
    "end": "2266570"
  },
  {
    "text": "a look for customer manage policy that was set up with all the restricted actions with all the denies and we'll",
    "start": "2266570",
    "end": "2273350"
  },
  {
    "text": "attach that policy so the administrator has added this restricted access collateral stop logging is one of the",
    "start": "2273350",
    "end": "2280970"
  },
  {
    "text": "deny actions here and then just for good measure also deny self role modification",
    "start": "2280970",
    "end": "2289030"
  },
  {
    "text": "and that's on the patrol policy so they're not not able they're unable to",
    "start": "2289030",
    "end": "2295100"
  },
  {
    "text": "put any other policies on this role okay",
    "start": "2295100",
    "end": "2301250"
  },
  {
    "text": "so here's our user again log backed in with the dev ops role this is Alice",
    "start": "2301250",
    "end": "2307600"
  },
  {
    "text": "Alice is gonna go ahead and try to do described trails again and as expected",
    "start": "2307600",
    "end": "2314180"
  },
  {
    "text": "gets the access denied so she's going to go ahead and try to add the",
    "start": "2314180",
    "end": "2320210"
  },
  {
    "text": "administrator policy like she did the first time here and this actually fails okay because the patrol policy is not",
    "start": "2320210",
    "end": "2329090"
  },
  {
    "text": "allowed on this resource dev ops it's there's an explicit deny so that's how we've prevented our DevOps folks from",
    "start": "2329090",
    "end": "2336860"
  },
  {
    "text": "elevating their own privilege or escape their boundaries okay well what about",
    "start": "2336860",
    "end": "2345500"
  },
  {
    "text": "the second degree right there they're able to create roles for their lambda function and the second degree this is",
    "start": "2345500",
    "end": "2351440"
  },
  {
    "text": "for the security folks this is like the confused deputy problem the DevOps person is going to create a deputy this",
    "start": "2351440",
    "end": "2357680"
  },
  {
    "text": "is the lambda function that will do their escalation for them so the way",
    "start": "2357680",
    "end": "2363800"
  },
  {
    "text": "they'll do this is the DevOps person will create a role they'll create a",
    "start": "2363800",
    "end": "2369619"
  },
  {
    "text": "lambda function they'll update the code any execution role on that lambda invoke",
    "start": "2369619",
    "end": "2377960"
  },
  {
    "text": "the lambda and in this case what the attacker is going to do is they'll actually create a new set of access keys",
    "start": "2377960",
    "end": "2384859"
  },
  {
    "text": "they're going to create a brand new user and with elevator privilege and use that as part of their attack the code to do",
    "start": "2384859",
    "end": "2393619"
  },
  {
    "text": "this isn't very much this is this is all the Python code it really takes you can",
    "start": "2393619",
    "end": "2399200"
  },
  {
    "text": "see in this example the user the user",
    "start": "2399200",
    "end": "2404270"
  },
  {
    "text": "variable here is Eve and the the aren't here is an administrator access and what",
    "start": "2404270",
    "end": "2409400"
  },
  {
    "text": "the code is doing it's going to create the user attach the policy the immense traitor access to the policy and then",
    "start": "2409400",
    "end": "2415640"
  },
  {
    "text": "generated set access keys and then return those access keys back to the caller all right so here's quick",
    "start": "2415640",
    "end": "2427130"
  },
  {
    "text": "demonstration of that so here we've got cloud trail turned off I started turn",
    "start": "2427130",
    "end": "2433369"
  },
  {
    "text": "back on you can see in the roles we have six roles in this account in the sample",
    "start": "2433369",
    "end": "2439670"
  },
  {
    "text": "account one of them is the DevOps role",
    "start": "2439670",
    "end": "2443470"
  },
  {
    "text": "there's one I am user here this just for this example this is the I am user that's actually logged into the console",
    "start": "2444849",
    "end": "2450970"
  },
  {
    "text": "as an administrator user just for this purpose for this demo and then there's the single lambda function here as part",
    "start": "2450970",
    "end": "2457099"
  },
  {
    "text": "of our IDP alright so Allison's gonna",
    "start": "2457099",
    "end": "2463070"
  },
  {
    "text": "log back in and she's gonna confirm that she is logged in so she's logged in with the DevOps role remember it has all",
    "start": "2463070",
    "end": "2468500"
  },
  {
    "text": "those restrictions they cannot modify yourself",
    "start": "2468500",
    "end": "2472809"
  },
  {
    "text": "so first thing to do is create a trust file and this is used for role creation",
    "start": "2474830",
    "end": "2480180"
  },
  {
    "text": "if you've created an execution role you need a trust profile so she's gonna",
    "start": "2480180",
    "end": "2485250"
  },
  {
    "text": "create this role called I am full access lambda role and that was successful so",
    "start": "2485250",
    "end": "2491240"
  },
  {
    "text": "this is just the empty role that was created now we're going to attach a policy to the role and because there was",
    "start": "2492410",
    "end": "2500880"
  },
  {
    "text": "no condition that stopped her from doing that she can go ahead and create that policy imitator policy the same action",
    "start": "2500880",
    "end": "2507480"
  },
  {
    "text": "star resource star and just to show you that policy this is what it looks like",
    "start": "2507480",
    "end": "2514220"
  },
  {
    "text": "okay and then the lambda code is here so this is the the lambda code this is you",
    "start": "2519410",
    "end": "2525750"
  },
  {
    "text": "can see the user here is Eve again which is the user that's going to get created with this policy arm of an administrator",
    "start": "2525750",
    "end": "2532470"
  },
  {
    "text": "access okay so we'll take that piece of",
    "start": "2532470",
    "end": "2541290"
  },
  {
    "text": "code and and zip it up and copy it up to",
    "start": "2541290",
    "end": "2546840"
  },
  {
    "text": "s 3 so we can deploy it into the account so we'll copy it up to s3 and the upload",
    "start": "2546840",
    "end": "2554280"
  },
  {
    "text": "was successful sent to the the s3 bucket",
    "start": "2554280",
    "end": "2560270"
  },
  {
    "text": "and then now we'll go ahead and create the lambda function and the we'll give",
    "start": "2562820",
    "end": "2568020"
  },
  {
    "text": "it the name create user lambda and we'll give it this execution role that we",
    "start": "2568020",
    "end": "2573750"
  },
  {
    "text": "created earlier and the the soft word that we just zipped up and sent up to the T s3 bucket and that was a that was",
    "start": "2573750",
    "end": "2581040"
  },
  {
    "text": "successful so now we have a lambda function with this highly powerful",
    "start": "2581040",
    "end": "2586190"
  },
  {
    "text": "execution roll attached to it now it's just a matter of execution invoking this lambda and the output is going to go",
    "start": "2586190",
    "end": "2595080"
  },
  {
    "text": "into this alt out log file so that was successful if we take a look at our output we can see that an access key was",
    "start": "2595080",
    "end": "2601560"
  },
  {
    "text": "returned so two things happen here alice was actually able to to elevate her",
    "start": "2601560",
    "end": "2609240"
  },
  {
    "text": "privilege and create it create a user and a set access keys now Alice can go",
    "start": "2609240",
    "end": "2615600"
  },
  {
    "text": "ahead and use the command line to configure a new profile called Eve remember this this person Eve doesn't",
    "start": "2615600",
    "end": "2621600"
  },
  {
    "text": "really exist it was just made up now she's going to copy the access key and and set up the the CLI here and the",
    "start": "2621600",
    "end": "2631530"
  },
  {
    "text": "secret key set this up in u.s. West one",
    "start": "2631530",
    "end": "2640460"
  },
  {
    "text": "and JSON as an output format so that was set up",
    "start": "2640460",
    "end": "2646549"
  },
  {
    "text": "and so now using that profile we can",
    "start": "2646820",
    "end": "2651980"
  },
  {
    "text": "verify that profile does exist there's the user it's an I am user call the Yves",
    "start": "2651980",
    "end": "2658089"
  },
  {
    "text": "else is going to go ahead and use this newly created user to describe trails",
    "start": "2660010",
    "end": "2665930"
  },
  {
    "text": "and now this works and then she can go",
    "start": "2665930",
    "end": "2673220"
  },
  {
    "text": "ahead and actually stop the trails oh well we'll get the trail status first just to make sure that logging is still",
    "start": "2673220",
    "end": "2679430"
  },
  {
    "text": "turned on and we'll stop the trail so",
    "start": "2679430",
    "end": "2691310"
  },
  {
    "text": "that was successful that worked",
    "start": "2691310",
    "end": "2694600"
  },
  {
    "text": "okay and just to make sure that the login was turned off it is turned off",
    "start": "2697510",
    "end": "2703030"
  },
  {
    "text": "there okay so now if you take a look at our console now will refresh all these",
    "start": "2703030",
    "end": "2710440"
  },
  {
    "text": "pages you can see that logging was turned off successfully if you took a",
    "start": "2710440",
    "end": "2715780"
  },
  {
    "text": "look at the I am console we originally have six users there should be seven now",
    "start": "2715780",
    "end": "2721660"
  },
  {
    "text": "the seventh user is now created and that is sorry that's a role the the seventh",
    "start": "2721660",
    "end": "2727150"
  },
  {
    "text": "role was created within administrator policy and here's the the fictitious",
    "start": "2727150",
    "end": "2734230"
  },
  {
    "text": "user Eve which was just created and Eve",
    "start": "2734230",
    "end": "2740170"
  },
  {
    "text": "who has the administrator access policy attached to her and then as far as a",
    "start": "2740170",
    "end": "2745810"
  },
  {
    "text": "lambda function this was the the function that actually executed the attack so that was that's there now and",
    "start": "2745810",
    "end": "2752310"
  },
  {
    "text": "here's the code that was elevated to it okay",
    "start": "2752310",
    "end": "2757890"
  },
  {
    "text": "so how are we going to stop this well in the past there really wasn't an easy way to stop this if you wanted to if you",
    "start": "2757890",
    "end": "2765160"
  },
  {
    "text": "wanted to give developers the agility to create lambda to create execution profiles in order to build systems this",
    "start": "2765160",
    "end": "2771730"
  },
  {
    "text": "type of an attack was hard - excuse me hard to stop until we had this thing",
    "start": "2771730",
    "end": "2778900"
  },
  {
    "text": "called permission boundaries so we use",
    "start": "2778900",
    "end": "2785260"
  },
  {
    "text": "permission boundaries to prevent this type of an attack we're going to move the I am deny statements that were in",
    "start": "2785260",
    "end": "2790570"
  },
  {
    "text": "the I am role we're gonna move them to the permission boundary instead and then",
    "start": "2790570",
    "end": "2795580"
  },
  {
    "text": "we're gonna add a condition so that the DevOps role cannot remove the boundary",
    "start": "2795580",
    "end": "2801400"
  },
  {
    "text": "that was attached to them so they can no longer attach a policy to their their role now we're actually actually where",
    "start": "2801400",
    "end": "2806920"
  },
  {
    "text": "we're adding another policy that says they cannot remove the boundary that was attached okay so here's how the",
    "start": "2806920",
    "end": "2813850"
  },
  {
    "text": "mitigation happens so now we have a new actor here the I am an administrator the first thing you're going to do is",
    "start": "2813850",
    "end": "2819430"
  },
  {
    "text": "they're going to set a boundary on that DevOps role and this is represented by the the letters PB the permission",
    "start": "2819430",
    "end": "2826150"
  },
  {
    "text": "boundary so now the DevOps person is going to try to create the role",
    "start": "2826150",
    "end": "2831390"
  },
  {
    "text": "when they tried to create the role they're gonna be forced to create it with a permission boundary they'll go",
    "start": "2831390",
    "end": "2837329"
  },
  {
    "text": "head into the attack again create the lambda update the code with the execution roll which has the permission",
    "start": "2837329",
    "end": "2842700"
  },
  {
    "text": "boundary on it invoke they can go ahead and invoke the lambda function however when they try to create the access key",
    "start": "2842700",
    "end": "2848010"
  },
  {
    "text": "it will fail okay so here's that here's",
    "start": "2848010",
    "end": "2857309"
  },
  {
    "text": "the the code for the the permission boundaries permission boundaries like",
    "start": "2857309",
    "end": "2862380"
  },
  {
    "text": "SCPs you have to set up what you're allowed to do as well as what you're not allowed to do so here in the permission",
    "start": "2862380",
    "end": "2869279"
  },
  {
    "text": "boundary we have to allow statements one is allowing the s3 and EC to star lambda",
    "start": "2869279",
    "end": "2875250"
  },
  {
    "text": "star as well as a set of I am functionality we're also allowing them",
    "start": "2875250",
    "end": "2881369"
  },
  {
    "text": "to create a role but in the create role we have a condition that says you must",
    "start": "2881369",
    "end": "2887309"
  },
  {
    "text": "create the role with the permission boundary we also took some of the deny",
    "start": "2887309",
    "end": "2894269"
  },
  {
    "text": "statements and put them into the boundary as well so things like creating new policies or delete policies things",
    "start": "2894269",
    "end": "2901380"
  },
  {
    "text": "like that setting default versions but more importantly the second statement",
    "start": "2901380",
    "end": "2907589"
  },
  {
    "text": "here which is which is the deny on delete permission boundary so they cannot remove a permission boundary one",
    "start": "2907589",
    "end": "2917339"
  },
  {
    "text": "thing as we were experimenting with this just just as we figured out you'll want to avoid any kind of action overlap when",
    "start": "2917339",
    "end": "2923970"
  },
  {
    "text": "it comes to the allows statements if you have to allow statements one without a condition and one with a condition it's",
    "start": "2923970",
    "end": "2930599"
  },
  {
    "text": "actually evaluated like an or statement so we had actually put in here I am star",
    "start": "2930599",
    "end": "2936779"
  },
  {
    "text": "and what in the allow and that actually gave them full access even though we put",
    "start": "2936779",
    "end": "2943200"
  },
  {
    "text": "a condition in the second statement so allows are always considered as an or",
    "start": "2943200",
    "end": "2949259"
  },
  {
    "text": "condition alright so",
    "start": "2949259",
    "end": "2956450"
  },
  {
    "text": "to show you what this looks like this is the actual mitigation so the IM",
    "start": "2957349",
    "end": "2962839"
  },
  {
    "text": "administrator is going to go ahead and set the permission boundary here so this is this is new as of a few months ago",
    "start": "2962839",
    "end": "2968619"
  },
  {
    "text": "the boundary name is a it's a managed policy call it boundaries and will set",
    "start": "2968619",
    "end": "2975589"
  },
  {
    "text": "the permission boundary on this roll so now we have the restricted access now",
    "start": "2975589",
    "end": "2981019"
  },
  {
    "text": "we've also put the permission boundary on it so the provision boundary shows",
    "start": "2981019",
    "end": "2987140"
  },
  {
    "text": "you what is allowed so all the statements that were in the slide and then here the create roll has the",
    "start": "2987140",
    "end": "2996049"
  },
  {
    "text": "condition that you must include a permission boundary with it all right",
    "start": "2996049",
    "end": "3003130"
  },
  {
    "text": "so else is gonna go and try or attack in she has the the DevOps roll and now",
    "start": "3003130",
    "end": "3013479"
  },
  {
    "text": "she's going to go ahead and create a roll just like she did before but this time gets an access denied right we had that condition the permission boundary",
    "start": "3013479",
    "end": "3018789"
  },
  {
    "text": "she's gonna goes back and remembers aha I remember something someone said I had to add a permission boundary so here she",
    "start": "3018789",
    "end": "3025690"
  },
  {
    "text": "goes adds the permission boundary and that was successful so the roll was created with the boundary now",
    "start": "3025690",
    "end": "3033150"
  },
  {
    "text": "so now she's gonna go ahead and and put that administrator access on that role so that that's successful and then go",
    "start": "3038700",
    "end": "3052530"
  },
  {
    "text": "ahead and create the lambda function so it's the same same piece of software that we had before with the new with",
    "start": "3052530",
    "end": "3057870"
  },
  {
    "text": "that role that was created but this role has a boundary set on it and this this",
    "start": "3057870",
    "end": "3063060"
  },
  {
    "text": "will succeed so that's all good now it's time to invoke it and try to actually create this user Eve and get the",
    "start": "3063060",
    "end": "3070140"
  },
  {
    "text": "elevated credentials and this will fail",
    "start": "3070140",
    "end": "3078050"
  },
  {
    "text": "boom we get a function error write lambda returned an error the R is going to be sent back to the standardout and",
    "start": "3078050",
    "end": "3085860"
  },
  {
    "text": "you can see here access denied when calling create user so this is how we're able to block the",
    "start": "3085860",
    "end": "3093690"
  },
  {
    "text": "create user on that second degree or a stop the confused deputy problem from happening so permission boundaries can",
    "start": "3093690",
    "end": "3100890"
  },
  {
    "text": "be very powerful in this way all right well what if my confused deputy is",
    "start": "3100890",
    "end": "3107190"
  },
  {
    "text": "actually ec2 I am and permission boundaries really only impact the I am",
    "start": "3107190",
    "end": "3114450"
  },
  {
    "text": "sorry the AWS API plain they don't apply to things like the SSH data plane so",
    "start": "3114450",
    "end": "3119670"
  },
  {
    "text": "attackers could use this SSH vector to their advantage you could lock down pass",
    "start": "3119670",
    "end": "3125880"
  },
  {
    "text": "role but it's really difficult to do this based on naming conventions inside of a micro account remember we want to",
    "start": "3125880",
    "end": "3132600"
  },
  {
    "text": "get away from centralized control over these people so we just want to say look you have resource star you can do",
    "start": "3132600",
    "end": "3137760"
  },
  {
    "text": "whatever you want within this small tiny account and we don't want to enforce a naming convention on them so how do you",
    "start": "3137760",
    "end": "3146760"
  },
  {
    "text": "mitigate that at least on the Linux side we can use something like IP tables to",
    "start": "3146760",
    "end": "3151860"
  },
  {
    "text": "block that so you would set these commands up as part of your your base ami so your the hard today amide that",
    "start": "3151860",
    "end": "3158910"
  },
  {
    "text": "your developers are going to use should have this software in it this little piece of code and what this is saying is",
    "start": "3158910",
    "end": "3164610"
  },
  {
    "text": "that the owners the the root or the apache user would have access to the",
    "start": "3164610",
    "end": "3171090"
  },
  {
    "text": "metadata service which resides at 169 254 169.254",
    "start": "3171090",
    "end": "3177200"
  },
  {
    "text": "everybody else is rejected so unless you're one of these two users you're not",
    "start": "3177200",
    "end": "3182400"
  },
  {
    "text": "going to get access to the instance profile that's attached to the ec2 instance all right so I'll show you how",
    "start": "3182400",
    "end": "3190500"
  },
  {
    "text": "this works I've set up two machines in this demo one machine has that IP table",
    "start": "3190500",
    "end": "3196560"
  },
  {
    "text": "set up and the other one doesn't so here",
    "start": "3196560",
    "end": "3202650"
  },
  {
    "text": "we can see logging is turned on and I have a roll set up here at cloud trail",
    "start": "3202650",
    "end": "3208160"
  },
  {
    "text": "manager roll it just has the cloud trail full access and this is what we're going to use as our instance profile role I",
    "start": "3208160",
    "end": "3215599"
  },
  {
    "text": "have two computers set up here one says secure and one says one's just not secure and they both have the same",
    "start": "3215599",
    "end": "3222180"
  },
  {
    "text": "instance profile attached to them so the first thing I do is log in to the or the",
    "start": "3222180",
    "end": "3228660"
  },
  {
    "text": "one that's not secure and I'll try to go ahead and stop the trails so I'll see",
    "start": "3228660",
    "end": "3236880"
  },
  {
    "text": "what trails are out here I could see that there is cloud trail turned on and I can go ahead and stop the trail so I",
    "start": "3236880",
    "end": "3245310"
  },
  {
    "text": "is a user and you see the ec2 user of this machine have access to the instance",
    "start": "3245310",
    "end": "3250500"
  },
  {
    "text": "profile through the metadata service and then you can see here that log in was indeed turned off alright so we'll turn",
    "start": "3250500",
    "end": "3261060"
  },
  {
    "text": "login back on here and then now I'll show you what it looks like when we do",
    "start": "3261060",
    "end": "3267119"
  },
  {
    "text": "it with the other machine sort of the hardened AMI and the way we set this up",
    "start": "3267119",
    "end": "3272670"
  },
  {
    "text": "for this one was using just for this example user data so this script will",
    "start": "3272670",
    "end": "3277830"
  },
  {
    "text": "run as the Machine fires up and it's basically saying everybody's denied accept routes to the metadata service",
    "start": "3277830",
    "end": "3286880"
  },
  {
    "text": "so here's the machine that has that those IP tables set and we need to",
    "start": "3292170",
    "end": "3300310"
  },
  {
    "text": "describe trails you're not going to be able to get access to the metadata service so you won't you won't have any credentials you don't really get an",
    "start": "3300310",
    "end": "3306250"
  },
  {
    "text": "access denied you just don't have any credentials to do any work here",
    "start": "3306250",
    "end": "3310680"
  },
  {
    "text": "all right so that was that that's how we really allow people the flexibility and",
    "start": "3319150",
    "end": "3327870"
  },
  {
    "text": "you know the the speed for development for developers that they can go ahead and do whatever they want as long as we",
    "start": "3327870",
    "end": "3334210"
  },
  {
    "text": "keep them in a small account and we use things like permission boundaries so one of the takeaways here is really use",
    "start": "3334210",
    "end": "3340000"
  },
  {
    "text": "permission boundaries on your federated roles automate the account creation and",
    "start": "3340000",
    "end": "3345400"
  },
  {
    "text": "include the role creation if federating and then also this this gives DevOps",
    "start": "3345400",
    "end": "3351010"
  },
  {
    "text": "team as the maximum flexibility right it gives them the ability to innovate you're not saying that you have to name",
    "start": "3351010",
    "end": "3356260"
  },
  {
    "text": "your machines this you have to name your buckets that they're they can do what",
    "start": "3356260",
    "end": "3361480"
  },
  {
    "text": "they need to do so you know the the challenges that we addressed here using",
    "start": "3361480",
    "end": "3368830"
  },
  {
    "text": "these I am preventative controls is to use the the policies to prevent principals from changing their own",
    "start": "3368830",
    "end": "3374170"
  },
  {
    "text": "permissions use permission boundaries to limit the privilege of new compute and then use things like OS level controls",
    "start": "3374170",
    "end": "3381280"
  },
  {
    "text": "like like IP tables to limit any of these powerful incidence profiles know",
    "start": "3381280",
    "end": "3388720"
  },
  {
    "text": "that say thank you and please keep it this way [Applause]",
    "start": "3388720",
    "end": "3398649"
  }
]