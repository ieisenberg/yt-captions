[
  {
    "text": "hey everybody and welcome to our twitch session for today myself and Ryan with",
    "start": "650",
    "end": "10320"
  },
  {
    "text": "you welcome to the AWS IOT app challenge",
    "start": "10320",
    "end": "16139"
  },
  {
    "text": "kick off Ryan how you doing I'm great how are you doing work yeah I'm awesome",
    "start": "16139",
    "end": "22020"
  },
  {
    "text": "it's a nice early dark cold spring",
    "start": "22020",
    "end": "27330"
  },
  {
    "text": "morning in Melbourne Australia yeah yeah",
    "start": "27330",
    "end": "32640"
  },
  {
    "text": "it's a nice afternoon in Seattle fantastic nice and early here so I've",
    "start": "32640",
    "end": "37950"
  },
  {
    "text": "got my cup of coffee with me thanks for joining us guys we're gonna do a couple",
    "start": "37950",
    "end": "44460"
  },
  {
    "text": "of things over the next hour and a half or so right now you're gonna spend some time with you talking about the AWS IOT",
    "start": "44460",
    "end": "52559"
  },
  {
    "text": "app challenge kick-off I'm going to take some time and walk you through a piece",
    "start": "52559",
    "end": "58170"
  },
  {
    "text": "of code that we've got for you to assist in your development efforts that you're",
    "start": "58170",
    "end": "63449"
  },
  {
    "text": "doing with with the challenge this piece of code is called weather Jen I'm gonna",
    "start": "63449",
    "end": "69060"
  },
  {
    "text": "run you through that and really it's a traffic generator that spits out weather",
    "start": "69060",
    "end": "74670"
  },
  {
    "text": "related data for you guys to consume you can run that on an ec2 instance on the",
    "start": "74670",
    "end": "80970"
  },
  {
    "text": "AWS platform but you could also take that code and run it locally on your",
    "start": "80970",
    "end": "86850"
  },
  {
    "text": "laptop and say MQTT stream producer and we'll talk about what that means a little bit later and we're going to run",
    "start": "86850",
    "end": "93930"
  },
  {
    "text": "you through that and we're going to do that top to bottom so we're going to go",
    "start": "93930",
    "end": "99540"
  },
  {
    "text": "through looking at the the repo which is sitting in AWS labs that's our our place",
    "start": "99540",
    "end": "105030"
  },
  {
    "text": "where we keep all our publicly accessible code we're going to have a look at how you pull that down we're",
    "start": "105030",
    "end": "111000"
  },
  {
    "text": "going to look at how you can use things like cloud formation to fire up an ec2 instance and bring that code live and",
    "start": "111000",
    "end": "118310"
  },
  {
    "text": "we're going to dissect the code we're going to have a look at some of the streams and along the way we can have a",
    "start": "118310",
    "end": "123780"
  },
  {
    "text": "bit of a conversation around what that means from an IOT perspective and how you could consume that data within the",
    "start": "123780",
    "end": "131580"
  },
  {
    "text": "that you're doing and then what I'm gonna do is hand over to Ryan and Ryan's gonna do a little bit of work with you",
    "start": "131580",
    "end": "137850"
  },
  {
    "text": "guys around Kinesis you want to give us some insight Ryan into what you're going to be doing yeah so we're gonna go",
    "start": "137850",
    "end": "143850"
  },
  {
    "text": "through another way to sort of ingest and mock data into AWS IOT and an Amazon",
    "start": "143850",
    "end": "151890"
  },
  {
    "text": "Kinesis stream we'll also to use some other options for writing directly to cases streams and",
    "start": "151890",
    "end": "159390"
  },
  {
    "text": "fire hoses to help you guys out with testing various pieces of your solutions",
    "start": "159390",
    "end": "165290"
  },
  {
    "text": "will also go through some real-time sequel queries and I'll give you guys some ideas on some things you can do",
    "start": "165290",
    "end": "171660"
  },
  {
    "text": "with both can uses analytics and it's lambda and some other services but at the end of it what you'll basically get",
    "start": "171660",
    "end": "177630"
  },
  {
    "text": "is an end-to-end application which ingest data feed of AWS IOT and then",
    "start": "177630",
    "end": "182750"
  },
  {
    "text": "price sort of real-time the analytics and then provide some visualization and",
    "start": "182750",
    "end": "187920"
  },
  {
    "text": "I want to go through one example but as I go through those examples I'll talk about some various options of other AWS",
    "start": "187920",
    "end": "193740"
  },
  {
    "text": "services you can use during the process so it should be fun I think the whole",
    "start": "193740",
    "end": "198900"
  },
  {
    "text": "session should be about I think about an hour and a half maybe two hours mark great yeah I think that's about right I",
    "start": "198900",
    "end": "204810"
  },
  {
    "text": "guess we're happy to take questions along the way so we can address those so yeah let's see how we go right I",
    "start": "204810",
    "end": "211920"
  },
  {
    "text": "reckon it's uh it's going to be really cool but Before we jump into the good",
    "start": "211920",
    "end": "217200"
  },
  {
    "text": "old geeky stuff let's talk a little bit about the AWS IOT app challenge so this",
    "start": "217200",
    "end": "225690"
  },
  {
    "text": "is an awesome program and I'm sure most of you guys out there joining us at the",
    "start": "225690",
    "end": "231420"
  },
  {
    "text": "moment hopefully going to take part in it and really what this challenge is about is to ask you guys to go out there",
    "start": "231420",
    "end": "239310"
  },
  {
    "text": "and build some apps and build some built-in code that allows you to collect",
    "start": "239310",
    "end": "245489"
  },
  {
    "text": "and process sensor data and we want you guys to identify some problems and try and solve those problems that are out",
    "start": "245489",
    "end": "251280"
  },
  {
    "text": "there so it could be anything from things like how do you ingest data",
    "start": "251280",
    "end": "256769"
  },
  {
    "text": "around watering of groceries automating requests for changing printer cartridges",
    "start": "256769",
    "end": "263460"
  },
  {
    "text": "that might be out there collecting data from industrial IOT applications you've got to be using",
    "start": "263460",
    "end": "270240"
  },
  {
    "text": "three key things of course you could have been using the AWS platform otherwise we wouldn't be here today I",
    "start": "270240",
    "end": "275940"
  },
  {
    "text": "guess we really want to see you guys also out there using AWS IOT services",
    "start": "275940",
    "end": "281970"
  },
  {
    "text": "and that's what I'm going to be focusing on in today's twitch session and we want to see you guys do some amazing stuff",
    "start": "281970",
    "end": "288750"
  },
  {
    "text": "with Amazon Kinesis so we really want to see some innovative thinking and get out",
    "start": "288750",
    "end": "295680"
  },
  {
    "text": "there and show us what you can do there's some awesome prizes that are out there we've got a prize pool of ten",
    "start": "295680",
    "end": "302280"
  },
  {
    "text": "thousand dollars we've got some Amazon echoes to go we've got AWS and credits there's a whole bunch more so this is",
    "start": "302280",
    "end": "309330"
  },
  {
    "text": "really the start of what is hopefully going to be a great experience for you",
    "start": "309330",
    "end": "314970"
  },
  {
    "text": "guys out there so I'm ready to jump into it Ryan what do you reckon I'm really",
    "start": "314970",
    "end": "321780"
  },
  {
    "text": "jump into it as well sounds good alright so what I'm going to do is I'm going to jump across to the",
    "start": "321780",
    "end": "330200"
  },
  {
    "text": "AWS labs github repository so for those of you who are familiar with we've get",
    "start": "330200",
    "end": "337410"
  },
  {
    "text": "this may be a little laborious but for those of you who are not get is a",
    "start": "337410",
    "end": "343229"
  },
  {
    "text": "distributed version control platform that allows you to maintain code and to",
    "start": "343229",
    "end": "350070"
  },
  {
    "text": "distribute that code to a broad community into manage changes to that",
    "start": "350070",
    "end": "355650"
  },
  {
    "text": "code and what you can see here is the AWS labs weather gem page and the",
    "start": "355650",
    "end": "362430"
  },
  {
    "text": "software that we're going to look at today is really a starter kit for you guys to be able to take a range of",
    "start": "362430",
    "end": "368610"
  },
  {
    "text": "sensor data and to have that data published on to arbitrary MQTT topic so",
    "start": "368610",
    "end": "373650"
  },
  {
    "text": "I'll touch on mqtt as we go along and we'll do a bit of a deep dive on that and then you can take these streams of",
    "start": "373650",
    "end": "379830"
  },
  {
    "text": "data and you can consume them and ingest them into the AWS platform why are by",
    "start": "379830",
    "end": "388740"
  },
  {
    "text": "chosen to use weather data today well where the data I think is it's quite",
    "start": "388740",
    "end": "394919"
  },
  {
    "text": "topical with all the discussion around climate change looking at all the unfortunate news",
    "start": "394919",
    "end": "400500"
  },
  {
    "text": "about what's going on in Florida and other places around the u.s. I think",
    "start": "400500",
    "end": "405900"
  },
  {
    "text": "this is really a topical a topical piece of information to have a look at but the",
    "start": "405900",
    "end": "413100"
  },
  {
    "text": "code that I'm going to present to you today can really be modified to stream",
    "start": "413100",
    "end": "419490"
  },
  {
    "text": "any sorts of data so let's start by having a look at the structure of this",
    "start": "419490",
    "end": "425640"
  },
  {
    "text": "this repository so what you can see here at the top of the repository is and most",
    "start": "425640",
    "end": "434700"
  },
  {
    "text": "importantly this generator j/s application and what I have a look at this in an editor shortly but this is",
    "start": "434700",
    "end": "440010"
  },
  {
    "text": "the application that generates the data and pushes it onto an arbitrary MQTT",
    "start": "440010",
    "end": "445770"
  },
  {
    "text": "stream what we've done in this weather data generators was focused in on",
    "start": "445770",
    "end": "452370"
  },
  {
    "text": "streaming data around three sorry four key environmental pieces of information",
    "start": "452370",
    "end": "459120"
  },
  {
    "text": "that is rain and we're pushing out rain data let's measure the inches per minute",
    "start": "459120",
    "end": "465030"
  },
  {
    "text": "we're pushing out temperature measured in degrees Fahrenheit we're also pushing",
    "start": "465030",
    "end": "471150"
  },
  {
    "text": "out vibrational data so those of you in",
    "start": "471150",
    "end": "476270"
  },
  {
    "text": "earthquake prone areas are interested in seismic data that's one piece of data",
    "start": "476270",
    "end": "483240"
  },
  {
    "text": "you can hook into and we're also sending out wind speed data now the wind speed",
    "start": "483240",
    "end": "488610"
  },
  {
    "text": "data is an interesting one in this application because it is a vector the",
    "start": "488610",
    "end": "494040"
  },
  {
    "text": "others are all straight forward either integer or float values but wind speed",
    "start": "494040",
    "end": "501090"
  },
  {
    "text": "actually sends two pieces of information it has a direction which is measured in degrees from north and it has a",
    "start": "501090",
    "end": "509520"
  },
  {
    "text": "magnitude measured in miles per hour so they're the four pieces of data that",
    "start": "509520",
    "end": "514979"
  },
  {
    "text": "you'll receive on this stream now what an emergency as our sourcing Taylor just",
    "start": "514979",
    "end": "522180"
  },
  {
    "text": "a quick question just the weather data Jenna one of those some differences that you typically see from sort of this mock",
    "start": "522180",
    "end": "528480"
  },
  {
    "text": "data from and sort of a real IOT sensor how was it similar to say well we've",
    "start": "528480",
    "end": "535800"
  },
  {
    "text": "been a little bit sneaky here on what we've done is we've work with our friends at forecast IO and that's guide",
    "start": "535800",
    "end": "541769"
  },
  {
    "text": "net and when we fire up the generator applicate actually going to make an API",
    "start": "541769",
    "end": "547440"
  },
  {
    "text": "call and we get the weather data from a location that you specify in the command",
    "start": "547440",
    "end": "555269"
  },
  {
    "text": "line and we get that data from 24 hours ago and we'll stream that data to you so",
    "start": "555269",
    "end": "561050"
  },
  {
    "text": "it is actually real data from 24 hours ago which is pretty cool right that is",
    "start": "561050",
    "end": "567209"
  },
  {
    "text": "really cool that's pretty awesome so this is very typical of what you'd see from an IOT sensor absolutely absolutely",
    "start": "567209",
    "end": "574800"
  },
  {
    "text": "it really is a real-world stream of data so that will give you guys out there the",
    "start": "574800",
    "end": "582450"
  },
  {
    "text": "ability to do some real calculations when we step through the code Ryan what I'm going to show you is that the data",
    "start": "582450",
    "end": "588360"
  },
  {
    "text": "we get from these api's is not as granular as we would like it which means",
    "start": "588360",
    "end": "595050"
  },
  {
    "text": "that there's some gaps in the time frame so we want to send data out on these streams about once a second but",
    "start": "595050",
    "end": "602160"
  },
  {
    "text": "sometimes that's too regular for the data set that we actually get so we use",
    "start": "602160",
    "end": "607170"
  },
  {
    "text": "some interpolation between those data points and we make some pretty intelligent guesses around what that",
    "start": "607170",
    "end": "613589"
  },
  {
    "text": "data might look like between those data points that we actually get from forecast IO and we push out on the",
    "start": "613589",
    "end": "620730"
  },
  {
    "text": "stream but ultimately the stream of that data is based on real world information",
    "start": "620730",
    "end": "628040"
  },
  {
    "text": "very cool there are a couple of things that you're going to need out there to",
    "start": "628040",
    "end": "634860"
  },
  {
    "text": "kick this off and one of the key ones is an API key so before you get started go",
    "start": "634860",
    "end": "640529"
  },
  {
    "text": "out and register get an API key the link is there to go and fire off a request",
    "start": "640529",
    "end": "649019"
  },
  {
    "text": "for an API key it is free for the data that we're using so you can just go",
    "start": "649019",
    "end": "654390"
  },
  {
    "text": "ahead and register and you'll get an API key and I'll show we can where you can put that key when",
    "start": "654390",
    "end": "659830"
  },
  {
    "text": "we get started now of course we can run code on our local development machines",
    "start": "659830",
    "end": "667630"
  },
  {
    "text": "and we're going to get out on that shortly but we can also run the code",
    "start": "667630",
    "end": "673300"
  },
  {
    "text": "that we're providing on AWS ec2 instances which is our compute platform",
    "start": "673300",
    "end": "679690"
  },
  {
    "text": "elastic cloud compute platform to make that easy for you we've provided a cloud",
    "start": "679690",
    "end": "685930"
  },
  {
    "text": "formation template and some helper scripts that are going to stand up a virtual private cloud of EPC which is",
    "start": "685930",
    "end": "693430"
  },
  {
    "text": "your own walled garden within the AWS public cloud environment it's going to configure the appropriate security for",
    "start": "693430",
    "end": "701140"
  },
  {
    "text": "that virtual private cloud it's going to fire off a ec2 instance and it's also",
    "start": "701140",
    "end": "707830"
  },
  {
    "text": "going to install all the prerequisites required for you guys to get started so this is just a great way to really kick",
    "start": "707830",
    "end": "714610"
  },
  {
    "text": "things off and we're going to step through that CloudFormation template one of the cool things about having this in",
    "start": "714610",
    "end": "720580"
  },
  {
    "text": "cloud formation is you may want to have multiple streams representing multiple",
    "start": "720580",
    "end": "725830"
  },
  {
    "text": "locations so right you know what you couldn't do is you could have a stream of data represented for Los Angeles a",
    "start": "725830",
    "end": "732220"
  },
  {
    "text": "stream of data represented for New York and the ec2 instances are going to be generating this data one ec2 instance",
    "start": "732220",
    "end": "738730"
  },
  {
    "text": "per location if you run this stuff on your laptop of course you're going to",
    "start": "738730",
    "end": "744220"
  },
  {
    "text": "close the lid and you're going to walk away you might turn it off and those streams will stop if you've got embedded",
    "start": "744220",
    "end": "751900"
  },
  {
    "text": "devices or something like a Raspberry Pi out there consuming that data your application will effectively stop",
    "start": "751900",
    "end": "758230"
  },
  {
    "text": "because there's no source data anymore if you use our cloud formation template",
    "start": "758230",
    "end": "763270"
  },
  {
    "text": "that rely on ec2 they're gonna stay up regardless of what you're doing on your development environment so it's just a",
    "start": "763270",
    "end": "769600"
  },
  {
    "text": "great way to continually stream data throughout the throughout the lifecycle",
    "start": "769600",
    "end": "775060"
  },
  {
    "text": "of your project so we'll look at the cloud formation we'll also talk about",
    "start": "775060",
    "end": "781510"
  },
  {
    "text": "how you do this from a local installation standpoint we're going to use yarn today which is",
    "start": "781510",
    "end": "788030"
  },
  {
    "text": "package manager for nodejs from our friends at Facebook but you could also equally use NPM if you're more",
    "start": "788030",
    "end": "794990"
  },
  {
    "text": "comfortable with that and I'm gonna run you through what the command line parameters are in order to",
    "start": "794990",
    "end": "802040"
  },
  {
    "text": "get this kicked off yep just a jump in",
    "start": "802040",
    "end": "807110"
  },
  {
    "text": "real quick so mark showing one way to use confirmation to spin up a portion of",
    "start": "807110",
    "end": "812120"
  },
  {
    "text": "the application but one of the things that we're going to encourage is part of your guys's submissions is that you also use CloudFormation it makes it a lot",
    "start": "812120",
    "end": "819290"
  },
  {
    "text": "easier for you guys the package and more people to use it as well as it makes it easier for us to test and in general and",
    "start": "819290",
    "end": "825200"
  },
  {
    "text": "as we like to share your guys's solutions it's a lot easier if they're packaged together CloudFormation",
    "start": "825200",
    "end": "830470"
  },
  {
    "text": "definitely not a requirement but something that we'd encourage you guys to do broadly as you guys develop your",
    "start": "830470",
    "end": "836270"
  },
  {
    "text": "solutions yeah absolutely one of the great things about cloud formation is",
    "start": "836270",
    "end": "842300"
  },
  {
    "text": "that it makes your deployments on to the AWS platform consistent and it allows",
    "start": "842300",
    "end": "847730"
  },
  {
    "text": "you to stand up and tear it down what we call stacks which are effectively stacks of resources they could be easy to",
    "start": "847730",
    "end": "854360"
  },
  {
    "text": "instances they could be Kinesis streams it could be SNS topics it allows you to",
    "start": "854360",
    "end": "860360"
  },
  {
    "text": "stand those up in a in a consistent way and then to tear them down again when",
    "start": "860360",
    "end": "865370"
  },
  {
    "text": "you're finished and we're happy to take questions on cloud formation I guess as we go along if it's new for some of you",
    "start": "865370",
    "end": "871850"
  },
  {
    "text": "but it is really a great way to really stand up that AWS infrastructure to do",
    "start": "871850",
    "end": "878390"
  },
  {
    "text": "that consistently and to enable you to stand it up and tear it down as demand basis so excuse me let's let's jump into",
    "start": "878390",
    "end": "890500"
  },
  {
    "text": "what this code actually looks like so I'm using an editor here visual studio",
    "start": "890500",
    "end": "898900"
  },
  {
    "text": "code it's my favorite editor I've got lots of different plugins here if you",
    "start": "898900",
    "end": "904250"
  },
  {
    "text": "want any more information on these let me know the first thing we're going to",
    "start": "904250",
    "end": "909590"
  },
  {
    "text": "have a look at here is the config file and you'll notice here in the config",
    "start": "909590",
    "end": "915440"
  },
  {
    "text": "directory we've got this file called config j/s this confi j/s",
    "start": "915440",
    "end": "921650"
  },
  {
    "text": "really just defines tookie-tookie objects that we use throughout the application the first one is the MQTT",
    "start": "921650",
    "end": "929390"
  },
  {
    "text": "configuration and it enables us to fire up the nfu TT server which is going to",
    "start": "929390",
    "end": "935720"
  },
  {
    "text": "be streaming out the data and provides some configuration elements unless you're doing something really funky",
    "start": "935720",
    "end": "941450"
  },
  {
    "text": "which we always encourage you to do you probably don't really need to change this part of the configuration the key",
    "start": "941450",
    "end": "948230"
  },
  {
    "text": "element here in the configuration is the API key and you'll notice here there are",
    "start": "948230",
    "end": "954560"
  },
  {
    "text": "two parts to this or two members to this forecast object the first one is the API",
    "start": "954560",
    "end": "960800"
  },
  {
    "text": "key and the second one is the URL in the code base we've included a link where to",
    "start": "960800",
    "end": "967940"
  },
  {
    "text": "go to register so let's just go and have a look how we would get an API key so",
    "start": "967940",
    "end": "973640"
  },
  {
    "text": "let's jump across to a browser I'll open up a new tab and this is really straightforward so we jump across the",
    "start": "973640",
    "end": "979070"
  },
  {
    "text": "dark sky and we just read we just register within there you'll get an API",
    "start": "979070",
    "end": "984830"
  },
  {
    "text": "key that you can copy and paste into the configuration now for today I've just",
    "start": "984830",
    "end": "993440"
  },
  {
    "text": "kept a copy of my API key so I'm gonna copy that API key now you're all going",
    "start": "993440",
    "end": "998720"
  },
  {
    "text": "to see it I just encourage you not to actually use it it's not included in the repository I encourage you all to go and",
    "start": "998720",
    "end": "1005890"
  },
  {
    "text": "get your own because there are some limits into the amount of calls that can be made within the free tier for this",
    "start": "1005890",
    "end": "1011770"
  },
  {
    "text": "API so what you can do once you've received your API is just copy the API",
    "start": "1011770",
    "end": "1016779"
  },
  {
    "text": "key into that section of code and replace all those X X X's within the",
    "start": "1016779",
    "end": "1023260"
  },
  {
    "text": "within the within the object and that's basically all that you'll need to do to configure the code to run now of course",
    "start": "1023260",
    "end": "1032020"
  },
  {
    "text": "we are running a node.js application so jumping across to the console if we have",
    "start": "1032020",
    "end": "1039069"
  },
  {
    "text": "a look at the the code base you'll notice in here there is a node modules directory these node modules are the",
    "start": "1039069",
    "end": "1046390"
  },
  {
    "text": "third-party dependencies that this application relies on and those third-party dependencies are expressed",
    "start": "1046390",
    "end": "1053170"
  },
  {
    "text": "in the in the package.json file so let's have a look at that package JSON file",
    "start": "1053170",
    "end": "1059770"
  },
  {
    "text": "it's a standard package definition and",
    "start": "1059770",
    "end": "1065800"
  },
  {
    "text": "you can see here there's a number of third-party dependencies linked in here",
    "start": "1065800",
    "end": "1071200"
  },
  {
    "text": "and what we'll do here is we'll use a package manager called yarn as I mentioned before and yarn is going to",
    "start": "1071200",
    "end": "1077410"
  },
  {
    "text": "bring in those dependencies when you clone this repository you'll actually",
    "start": "1077410",
    "end": "1083530"
  },
  {
    "text": "notice that there is no node modules directory already there so if we jump",
    "start": "1083530",
    "end": "1090220"
  },
  {
    "text": "across to what that repository looks like from the ground up there is no node",
    "start": "1090220",
    "end": "1097900"
  },
  {
    "text": "modules dependencies yet so what I'm going to do just to show you how to do",
    "start": "1097900",
    "end": "1104260"
  },
  {
    "text": "this installation of the dependencies is I'm going to remove my local node modules directory and you know Rhino is",
    "start": "1104260",
    "end": "1111700"
  },
  {
    "text": "getting nervous when I do this I RM minus RF command I've done some pretty horrible things with that before",
    "start": "1111700",
    "end": "1117280"
  },
  {
    "text": "something just make sure guys that you're in the right directory and then you're deleting the right thing so I'm",
    "start": "1117280",
    "end": "1123490"
  },
  {
    "text": "going to delete all those node modules from my local machine here and you'll",
    "start": "1123490",
    "end": "1129520"
  },
  {
    "text": "see here from my LS I'll just clear my screen so you can see it that that's gone and what we can do here is we could",
    "start": "1129520",
    "end": "1135940"
  },
  {
    "text": "just go yarn installed that we'll go in and read the package.json directory and",
    "start": "1135940",
    "end": "1141700"
  },
  {
    "text": "we'll pull in all out dependencies you could do exactly the same by using NPM install the node package manager and",
    "start": "1141700",
    "end": "1149350"
  },
  {
    "text": "it's really up to you if you're using cloud formation the cloud formation scripts that we've provided this will be",
    "start": "1149350",
    "end": "1156910"
  },
  {
    "text": "done for you in the ec2 initialization",
    "start": "1156910",
    "end": "1162760"
  },
  {
    "text": "we'll have a look at that as we go along but what you can see here is on pulling down all the third-party dependencies it",
    "start": "1162760",
    "end": "1169900"
  },
  {
    "text": "does take a minute or two but once you've got them the only thing that's required is to keep them up to date if",
    "start": "1169900",
    "end": "1176440"
  },
  {
    "text": "need be but again if there's no new features or functionality you need in",
    "start": "1176440",
    "end": "1181510"
  },
  {
    "text": "later versions and we can probably just stick to the versions that are defined in the package.json file",
    "start": "1181510",
    "end": "1187240"
  },
  {
    "text": "so 47.88 seconds later 47 seconds of our lives we'll never get back",
    "start": "1187240",
    "end": "1193480"
  },
  {
    "text": "especially this to me rattle on you'll notice here we now have a node modules",
    "start": "1193480",
    "end": "1199179"
  },
  {
    "text": "directory and if I look into that node modules directory here are all the",
    "start": "1199179",
    "end": "1205630"
  },
  {
    "text": "third-party dependencies that our application requires so what we've done so far is we've got an API key that we",
    "start": "1205630",
    "end": "1213549"
  },
  {
    "text": "need to make those calls out to the dark sky or whether or forecast i/o API and",
    "start": "1213549",
    "end": "1219070"
  },
  {
    "text": "we've installed our third-party dependencies so from a local perspective we're pretty much ready to go so what",
    "start": "1219070",
    "end": "1228100"
  },
  {
    "text": "I'd like to do is before we get going on the local machine or my local",
    "start": "1228100",
    "end": "1233559"
  },
  {
    "text": "development environment let's go in and have a look at these cloud formation templates that we've provided you you'll",
    "start": "1233559",
    "end": "1241720"
  },
  {
    "text": "still need to do the configuration steps that I've just mentioned in terms of getting an API key before you get",
    "start": "1241720",
    "end": "1248110"
  },
  {
    "text": "started so we'll talk about that once we fire up the the cloud formation stack",
    "start": "1248110",
    "end": "1256600"
  },
  {
    "text": "what you can see here is we've got an AWS directory at the top of our project",
    "start": "1256600",
    "end": "1261940"
  },
  {
    "text": "within the AWS director we've got a CF end which is kind of a short form that",
    "start": "1261940",
    "end": "1267730"
  },
  {
    "text": "we use for cloud formation I've got a Stax directory and inside there I've got a weather gen stacked directory and I've",
    "start": "1267730",
    "end": "1274870"
  },
  {
    "text": "got three shell scripts in there and a configuration file as well the first",
    "start": "1274870",
    "end": "1280270"
  },
  {
    "text": "shell script is called create this enables us to create the stack I've got",
    "start": "1280270",
    "end": "1285520"
  },
  {
    "text": "another one called delete which enables us to delete the stack when we're finished and I've got an update which if",
    "start": "1285520",
    "end": "1291159"
  },
  {
    "text": "we have any changes to our cloud formation template we could just issue the update command and it will go off",
    "start": "1291159",
    "end": "1297220"
  },
  {
    "text": "and update the stack and add any changes or remove resources etc according to the",
    "start": "1297220",
    "end": "1303429"
  },
  {
    "text": "changes we've made in our stack the config file is pretty simple it enables",
    "start": "1303429",
    "end": "1309490"
  },
  {
    "text": "us to define a name for the stack we're",
    "start": "1309490",
    "end": "1315429"
  },
  {
    "text": "not using s3 buckets for this we're doing an upload directly from our local machine",
    "start": "1315429",
    "end": "1321240"
  },
  {
    "text": "development environments to the cloud formation engine so we don't really need",
    "start": "1321240",
    "end": "1326790"
  },
  {
    "text": "an s3 bucket but you if you wanted to update these scripts you could reference that s3 bucket variable to your own",
    "start": "1326790",
    "end": "1335130"
  },
  {
    "text": "where you may have additional metadata or additional configure that you might",
    "start": "1335130",
    "end": "1342510"
  },
  {
    "text": "want to pull in to your cloud formation template here I reference a a bucket",
    "start": "1342510",
    "end": "1348480"
  },
  {
    "text": "which is a object store and this is where I keep some of my lambda function",
    "start": "1348480",
    "end": "1355020"
  },
  {
    "text": "definitions and of course a region in the region is the AWS region you can run",
    "start": "1355020",
    "end": "1360390"
  },
  {
    "text": "this code in any region that you like there won't be a problem there we're not",
    "start": "1360390",
    "end": "1366060"
  },
  {
    "text": "using a huge amount of services so you should have all the service availability",
    "start": "1366060",
    "end": "1372150"
  },
  {
    "text": "to everything that you need in the majority of the regions the create script is very simple we pull in the",
    "start": "1372150",
    "end": "1380990"
  },
  {
    "text": "config and then we basically issue the AWS CLI command AWS CloudFormation",
    "start": "1380990",
    "end": "1388380"
  },
  {
    "text": "creates stack we give that stack a name we tell it where the template body is",
    "start": "1388380",
    "end": "1394110"
  },
  {
    "text": "and that's a JSON definition we also support yeah Mille I don't know what do you prefer Ryan I mean I'm a bit of a",
    "start": "1394110",
    "end": "1399570"
  },
  {
    "text": "JSON guy cuz I'm a glutton for punishment I definitely prefer a JSON",
    "start": "1399570",
    "end": "1404930"
  },
  {
    "text": "yeah me too but feel free to use Yammer if you're comfortable with that and we",
    "start": "1404930",
    "end": "1411600"
  },
  {
    "text": "also pass in a region so this is going to create our stack on the AWS platform",
    "start": "1411600",
    "end": "1416610"
  },
  {
    "text": "and deploy all the resources that we've asked or that we've defined in our stack",
    "start": "1416610",
    "end": "1422490"
  },
  {
    "text": "JSON file so I'm not going to go through everything in this JSON file but you'll",
    "start": "1422490",
    "end": "1429150"
  },
  {
    "text": "notice in here we define a range of resources for example we define a V PC",
    "start": "1429150",
    "end": "1434300"
  },
  {
    "text": "that V PC has a set of properties like what block of IP addresses do you want",
    "start": "1434300",
    "end": "1440190"
  },
  {
    "text": "to give it what side a block is available within that V PC we also give",
    "start": "1440190",
    "end": "1446520"
  },
  {
    "text": "it tags and tags are really cool because it enables us to group resources to search for resources",
    "start": "1446520",
    "end": "1453059"
  },
  {
    "text": "and even to go through our building for example from AWS and have a look at what",
    "start": "1453059",
    "end": "1458909"
  },
  {
    "text": "resources have consumed what component of our cost and we do fewer things in it",
    "start": "1458909",
    "end": "1465270"
  },
  {
    "text": "yeah I got one comment in one big question so one of the things that I",
    "start": "1465270",
    "end": "1470940"
  },
  {
    "text": "like to do everybody and since there's a lot in this confirmation template it's actually hugely helpful is just to run",
    "start": "1470940",
    "end": "1477480"
  },
  {
    "text": "the script and then go to the console and watch the CloudFormation template get generated and then you'll be able to",
    "start": "1477480",
    "end": "1483330"
  },
  {
    "text": "see all of the resources and their steps getting generated and sort of get an overview of what the templates doing I",
    "start": "1483330",
    "end": "1490070"
  },
  {
    "text": "find it hugely helpful so it's one way to walk through sort of what the",
    "start": "1490070",
    "end": "1495120"
  },
  {
    "text": "templates doing in addition to see like how what you change in the JSON or your demo file how it impacts what the cloud",
    "start": "1495120",
    "end": "1502140"
  },
  {
    "text": "formations have been whether it was successful in the creation of the entire staff exactly so one comment and the",
    "start": "1502140",
    "end": "1508590"
  },
  {
    "text": "second question is we have a I think Marc answered the question so well he'll",
    "start": "1508590",
    "end": "1514770"
  },
  {
    "text": "Davis had a question was yellow tips Kendrick generator do we need to create them and they're providing the get rehab",
    "start": "1514770",
    "end": "1520860"
  },
  {
    "text": "repo that's it work back - yeah exactly we want to make this as easy as possible",
    "start": "1520860",
    "end": "1526080"
  },
  {
    "text": "for everybody Ryan so we've done the heavy lifting for you guys so if you if",
    "start": "1526080",
    "end": "1532080"
  },
  {
    "text": "you go to this URL I'll leave that up here for a moment all these scripts are provided in the",
    "start": "1532080",
    "end": "1538770"
  },
  {
    "text": "AWS CFN stacks where the gem directory so you will not need to create any",
    "start": "1538770",
    "end": "1546600"
  },
  {
    "text": "scripts everything is provided for you guys we try to make this as simple and quick as possible for you to get started",
    "start": "1546600",
    "end": "1553470"
  },
  {
    "text": "and I think Brian your input there was really good around having a look in the console and seeing what cloud formation",
    "start": "1553470",
    "end": "1561659"
  },
  {
    "text": "is actually doing as you're standing up your stack so I'll just point out a couple of extra things before we do that",
    "start": "1561659",
    "end": "1568640"
  },
  {
    "text": "you'll notice in here and I've just collapsed some of these objects we're defining some resources like VP C's and",
    "start": "1568640",
    "end": "1576690"
  },
  {
    "text": "route tables and default routes and we're associating subnets to a route",
    "start": "1576690",
    "end": "1582419"
  },
  {
    "text": "table and I can talk about what that means if you guys have any questions we attach some some elastic IPS to our",
    "start": "1582419",
    "end": "1591530"
  },
  {
    "text": "ec2 instances and here you'll see our definition for the ec2 resource and this",
    "start": "1591530",
    "end": "1597390"
  },
  {
    "text": "resource type is an AWS ec2 instance and in here we define an image ID which is",
    "start": "1597390",
    "end": "1604650"
  },
  {
    "text": "an AMI and the ami is an Amazon machine image we're using a standard Amazon",
    "start": "1604650",
    "end": "1610980"
  },
  {
    "text": "Linux image here you guys can feel free to change that and to use a operating",
    "start": "1610980",
    "end": "1618600"
  },
  {
    "text": "system that you're comfortable with one of the great things about deploying node.js code is that it's really really",
    "start": "1618600",
    "end": "1625860"
  },
  {
    "text": "portable so you could use Ubuntu you could use CentOS you could pick another",
    "start": "1625860",
    "end": "1632130"
  },
  {
    "text": "publicly available ami ami but if you've already got an ami that you use you",
    "start": "1632130",
    "end": "1637350"
  },
  {
    "text": "could also leverage that and we define what ami were using up here in our",
    "start": "1637350",
    "end": "1643530"
  },
  {
    "text": "parameters so you'll see here there's an ami parameter defined and I defaulted to",
    "start": "1643530",
    "end": "1649559"
  },
  {
    "text": "this ami ID and this here is the Amazon machine sorry the Amazon Linux ami that",
    "start": "1649559",
    "end": "1657539"
  },
  {
    "text": "we're going to deploy and we're deploying it on a tee to micro so that's a that's a pretty small but really",
    "start": "1657539",
    "end": "1663419"
  },
  {
    "text": "useful instance type it's a burst of all instance and because we're not very CPU",
    "start": "1663419",
    "end": "1669390"
  },
  {
    "text": "heavy and we don't need an incredible amount of CPU we just want to stream out",
    "start": "1669390",
    "end": "1674610"
  },
  {
    "text": "some basic data t2 Micro is a great choice very very cost effective I think",
    "start": "1674610",
    "end": "1680280"
  },
  {
    "text": "these end up if you're running these they work out to be a few dollars a month to run so that's just a great",
    "start": "1680280",
    "end": "1686880"
  },
  {
    "text": "instance type so what I might do is open up the AWS console log in and we'll open",
    "start": "1686880",
    "end": "1698159"
  },
  {
    "text": "up the cloud formation screen and you'll",
    "start": "1698159",
    "end": "1703650"
  },
  {
    "text": "notice in here I've got a bunch of other stacks deployed obviously you know we're pretty busy we stuff here at at AWS but",
    "start": "1703650",
    "end": "1711419"
  },
  {
    "text": "you'll notice I don't have a weather gen stack created so I'm going to show you",
    "start": "1711419",
    "end": "1717270"
  },
  {
    "text": "guys how you can really bootstrap this very very fast from an ec2 perspective so if you go",
    "start": "1717270",
    "end": "1723480"
  },
  {
    "text": "into the AWS CFN stacks whether Jen",
    "start": "1723480",
    "end": "1729179"
  },
  {
    "text": "directory and we have a look in there there's our create delete update our",
    "start": "1729179",
    "end": "1735090"
  },
  {
    "text": "configuration and our stack definition all I need to do to create the stack is just go create SH and that's going to",
    "start": "1735090",
    "end": "1743370"
  },
  {
    "text": "use the AWS CLI so if you don't have the AWS CLI we'll post a link in the chat",
    "start": "1743370",
    "end": "1750149"
  },
  {
    "text": "window about where you can get some help for that in terms of installing it it is",
    "start": "1750149",
    "end": "1755190"
  },
  {
    "text": "really a fantastic way to interact with the AWS platform and everything you can",
    "start": "1755190",
    "end": "1760919"
  },
  {
    "text": "do in the console you can do in the AP R in the CLI this is because we're an API",
    "start": "1760919",
    "end": "1766110"
  },
  {
    "text": "first company and everything we do is accessible via API is and CLI so you can",
    "start": "1766110",
    "end": "1772889"
  },
  {
    "text": "see here I'm starting I've told the AWS platform to go and stand up this cloud",
    "start": "1772889",
    "end": "1778440"
  },
  {
    "text": "formation stack now if I jump back into the console you'll notice over here I've",
    "start": "1778440",
    "end": "1784529"
  },
  {
    "text": "now got a weather gen stack that's being created and it says creating progress I think this is what you were talking",
    "start": "1784529",
    "end": "1790110"
  },
  {
    "text": "about Ryan have a look at what's going on you'll notice here there are some",
    "start": "1790110",
    "end": "1795509"
  },
  {
    "text": "outputs resources what I'm going to do is just have a look at the events and you'll see here those resources that I",
    "start": "1795509",
    "end": "1802649"
  },
  {
    "text": "was talking about before you can track how the progress of your stack creation",
    "start": "1802649",
    "end": "1808679"
  },
  {
    "text": "is working and what is currently being processed so you can see here that AWS",
    "start": "1808679",
    "end": "1815639"
  },
  {
    "text": "ec2 instance resource that I was talking about before is currently being created",
    "start": "1815639",
    "end": "1821730"
  },
  {
    "text": "so this is a great way to keep track of how your stack is going error messages",
    "start": "1821730",
    "end": "1827970"
  },
  {
    "text": "are also shown in here so if you need to go back or you're troubleshooting and this is a great place to get all that",
    "start": "1827970",
    "end": "1833519"
  },
  {
    "text": "information as resources are being created on the AWS platform you'll see",
    "start": "1833519",
    "end": "1840179"
  },
  {
    "text": "them turning up in here so you'll you can already see we've got an ec2 instance it's just finished being",
    "start": "1840179",
    "end": "1847679"
  },
  {
    "text": "created we've got an instance ID we've got elastic IP that's been allocated to it",
    "start": "1847679",
    "end": "1853889"
  },
  {
    "text": "and of course we've stood up an Internet gateways and it gateways are required in",
    "start": "1853889",
    "end": "1859740"
  },
  {
    "text": "V pcs in order to access the Internet and you could just see here the range of",
    "start": "1859740",
    "end": "1866850"
  },
  {
    "text": "resources that have been created what I do want to show you is that it's easy in",
    "start": "1866850",
    "end": "1872100"
  },
  {
    "text": "the console to jump between the various different services so you can see in here we've got a link to our ec2",
    "start": "1872100",
    "end": "1878490"
  },
  {
    "text": "instance it's being created so I can click on that and we open up a new window to the ec2 manager and straight",
    "start": "1878490",
    "end": "1886320"
  },
  {
    "text": "away we can jump in and we can see that that t2 my career that I was talking about has been created the instance is",
    "start": "1886320",
    "end": "1894389"
  },
  {
    "text": "running it's got a Public DNS but it's also got a private public IP address and",
    "start": "1894389",
    "end": "1901529"
  },
  {
    "text": "you'll notice that we've also got security groups attached to this ec2 instance so security group is really a",
    "start": "1901529",
    "end": "1908070"
  },
  {
    "text": "wrapper around AWS resources that enables you to define excuse me enables",
    "start": "1908070",
    "end": "1916620"
  },
  {
    "text": "you to define things like ports protocols and source addresses to a to",
    "start": "1916620",
    "end": "1922139"
  },
  {
    "text": "control traffic ingress and egress from resources and you'll notice in here I'm",
    "start": "1922139",
    "end": "1928950"
  },
  {
    "text": "allowing port 80 we're allowing that you guys might want to put up a web server on this instance to serve some extra",
    "start": "1928950",
    "end": "1935340"
  },
  {
    "text": "data for your application we're allowing port 22 which is SSH but we're also",
    "start": "1935340",
    "end": "1940679"
  },
  {
    "text": "allowing port 1883 I'm going to take a guess what 1883 is right say again mark",
    "start": "1940679",
    "end": "1949980"
  },
  {
    "text": "do you want to have a guess what port 1883 is you go ahead that one that's a",
    "start": "1949980",
    "end": "1961470"
  },
  {
    "text": "few and far between 1883 is the mqtt server port so that enables our MQTT",
    "start": "1961470",
    "end": "1969000"
  },
  {
    "text": "clients that are sitting out there on the on the internet or in the real world to access this ec2 instance to receive",
    "start": "1969000",
    "end": "1976200"
  },
  {
    "text": "those MQTT streams thanks for calling here",
    "start": "1976200",
    "end": "1981320"
  },
  {
    "text": "just a quick message for those that have joined us since we've got quite quite a few people join us since we started the",
    "start": "1982110",
    "end": "1989190"
  },
  {
    "text": "broadcast this is from the AWS IOT app challenge shondor under matru b CH c has",
    "start": "1989190",
    "end": "1998250"
  },
  {
    "text": "posted sort of where you sign up and register for the challenge and the github repo that mark is going through",
    "start": "1998250",
    "end": "2004280"
  },
  {
    "text": "and in mark if you just give a quick overview for those that joined a little bit late about where we are in the",
    "start": "2004280",
    "end": "2009350"
  },
  {
    "text": "process sure no problem thanks for joining us awesome to have",
    "start": "2009350",
    "end": "2014870"
  },
  {
    "text": "you if you've just joined we're running through two key areas today I'm covering",
    "start": "2014870",
    "end": "2020660"
  },
  {
    "text": "off a tool that we've built called weather jinn this is a MQTT stream",
    "start": "2020660",
    "end": "2026059"
  },
  {
    "text": "generator that you guys can use to generate funnily enough real world",
    "start": "2026059",
    "end": "2031299"
  },
  {
    "text": "weather data rainfall wind speed and wind direction vibrational data and",
    "start": "2031299",
    "end": "2039980"
  },
  {
    "text": "temperature we're showing you guys how you can stand this up on an ec2 instance",
    "start": "2039980",
    "end": "2045049"
  },
  {
    "text": "in a V PC we're also showing you how you can stand up this code and stream the data from your local laptop we're going",
    "start": "2045049",
    "end": "2053388"
  },
  {
    "text": "to do a deep dive onto the code and get really geeky and then sort of when I'm when I've run out of steam on this",
    "start": "2053389",
    "end": "2059780"
  },
  {
    "text": "Ryan's gonna pick up and run you guys through how you can take this data process it using some of our streaming",
    "start": "2059780",
    "end": "2066169"
  },
  {
    "text": "tools Ryan 20 give the guide as a quick update on what you want to cover off yeah so like what Marcus showing is what",
    "start": "2066169",
    "end": "2073908"
  },
  {
    "text": "I'll be showing you a little bit different is instead of using a CloudFormation template I'll be showing how to interact with some of the Amazon",
    "start": "2073909",
    "end": "2082340"
  },
  {
    "text": "Kinesis services by hand using the CLI as well as the console and I'll be",
    "start": "2082340",
    "end": "2087440"
  },
  {
    "text": "showing how they interact with the AWS IOT services is really simple to set up and I'll be showing some some different",
    "start": "2087440",
    "end": "2096500"
  },
  {
    "text": "types of sort of processing you can do on the streaming data as it comes in so",
    "start": "2096500",
    "end": "2102410"
  },
  {
    "text": "we should start that it's probably like 20 or 30 minutes I think all right guys",
    "start": "2102410",
    "end": "2108740"
  },
  {
    "text": "keep the questions streaming in as well love to see the questions in the sky",
    "start": "2108740",
    "end": "2114250"
  },
  {
    "text": "happening at the awesome one thing I do want to point out is if you're firing up",
    "start": "2114250",
    "end": "2119640"
  },
  {
    "text": "ec2 instances on the AWS platform one of the things that you need to provide is a",
    "start": "2119640",
    "end": "2125110"
  },
  {
    "text": "keypad name these key pairs are generally used to access instances and",
    "start": "2125110",
    "end": "2130300"
  },
  {
    "text": "to provide a level of security around that access the cloud formation template",
    "start": "2130300",
    "end": "2136900"
  },
  {
    "text": "that we supplied which is this one we touched on this before includes a number",
    "start": "2136900",
    "end": "2143170"
  },
  {
    "text": "of parameters and these parameters you can really view as variables that get that get define one of them is the key",
    "start": "2143170",
    "end": "2151900"
  },
  {
    "text": "pair name now of course I'm deploying this I'm defining a default key pair name which",
    "start": "2151900",
    "end": "2158380"
  },
  {
    "text": "is my surname AWS - own which is one that I use you may need to create your",
    "start": "2158380",
    "end": "2167500"
  },
  {
    "text": "own key if you don't have one and you probably want to modify this because you don't have access to my pin",
    "start": "2167500",
    "end": "2172810"
  },
  {
    "text": "one great thing about the AWS platform is it will not allow you to access things that you do not have permission",
    "start": "2172810",
    "end": "2177880"
  },
  {
    "text": "to access so you'll need to create your own key if you need some help on that we",
    "start": "2177880",
    "end": "2183400"
  },
  {
    "text": "can post some links as we go along but I'm using my own key here please replace",
    "start": "2183400",
    "end": "2190090"
  },
  {
    "text": "with your key if you want to use the cloud formation template what I'm going",
    "start": "2190090",
    "end": "2197200"
  },
  {
    "text": "to do is jump onto that ec2 instance I've got a public IP address over here I've just done a copy and paste so I'm",
    "start": "2197200",
    "end": "2203080"
  },
  {
    "text": "going to go back into my decal screen and I'm going to SSH into that instance",
    "start": "2203080",
    "end": "2209130"
  },
  {
    "text": "so that's a secure shell pretty stock standard I'm going to SSH I'm going to",
    "start": "2209130",
    "end": "2215350"
  },
  {
    "text": "use the standard ec2 user user name I'm",
    "start": "2215350",
    "end": "2221500"
  },
  {
    "text": "going to pop in the IP address and I'm going to provide a dash I which allows",
    "start": "2221500",
    "end": "2228220"
  },
  {
    "text": "us to define which key we're going to use for this identity now I happened to",
    "start": "2228220",
    "end": "2233950"
  },
  {
    "text": "keep all my keys locked away in my home directory slash keys and over here I can",
    "start": "2233950",
    "end": "2241480"
  },
  {
    "text": "just specify the key and of course I can't see what I'm doing properly so there's no fittings up",
    "start": "2241480",
    "end": "2247790"
  },
  {
    "text": "I'm going to get the right key which is this one and I will be able to login so",
    "start": "2247790",
    "end": "2256930"
  },
  {
    "text": "after we go and here we are so I pop into the top directory and you'll notice",
    "start": "2256930",
    "end": "2262730"
  },
  {
    "text": "in here that our cloud formation has even gone and bought in the latest code",
    "start": "2262730",
    "end": "2269060"
  },
  {
    "text": "for us on this ec2 instance so I can go",
    "start": "2269060",
    "end": "2275000"
  },
  {
    "text": "straight into this directory you'll notice here we are on this ec2 instance",
    "start": "2275000",
    "end": "2280460"
  },
  {
    "text": "as we said before we want to run yarn install this will resolve our packages",
    "start": "2280460",
    "end": "2286190"
  },
  {
    "text": "and have a look at this we're already up to date because we've provided some",
    "start": "2286190",
    "end": "2291280"
  },
  {
    "text": "initialization code in our cloud formation template that already updates",
    "start": "2291280",
    "end": "2296830"
  },
  {
    "text": "this instance with the latest packages for this for this application so that's",
    "start": "2296830",
    "end": "2304340"
  },
  {
    "text": "pretty cool let's have a quick look back into the cloud formation around how we do that we'll just do a look at that",
    "start": "2304340",
    "end": "2309530"
  },
  {
    "text": "very quickly because if you guys want to modify your initialization on these ec2",
    "start": "2309530",
    "end": "2314540"
  },
  {
    "text": "instances this is where you'll want to do it so when it is easy to instance fires up we look for something called",
    "start": "2314540",
    "end": "2320480"
  },
  {
    "text": "user data which is supplied to the cloud formation engine in base64 encoded",
    "start": "2320480",
    "end": "2326450"
  },
  {
    "text": "format but you can supply it by just your normal command line so what we do",
    "start": "2326450",
    "end": "2333650"
  },
  {
    "text": "in this instance fires up is we make sure that we're running our bash shell",
    "start": "2333650",
    "end": "2339340"
  },
  {
    "text": "we run some updates we bring in yarn you can see that here on line 188 we set",
    "start": "2339340",
    "end": "2346700"
  },
  {
    "text": "some repository information so we get the latest version of node J yes and then we go ahead and we install nodejs",
    "start": "2346700",
    "end": "2353360"
  },
  {
    "text": "yarn and we've installed yes why do we need get well because our code is sitting in a repository so for those of",
    "start": "2353360",
    "end": "2360620"
  },
  {
    "text": "you who aren't familiar with git and you can use this git clone command and this",
    "start": "2360620",
    "end": "2365990"
  },
  {
    "text": "URL to clone that code onto the ec2",
    "start": "2365990",
    "end": "2372230"
  },
  {
    "text": "instance when we're finished with that we change directory into that new",
    "start": "2372230",
    "end": "2378170"
  },
  {
    "text": "repository that we port down and I just do yarn store so that's really cool you guys don't",
    "start": "2378170",
    "end": "2383690"
  },
  {
    "text": "have to do anything the application is there and ready for you to go what do",
    "start": "2383690",
    "end": "2389630"
  },
  {
    "text": "you reckon right pretty cool huh it is pretty cool nice and quick nice and quick and we're up and running but",
    "start": "2389630",
    "end": "2395930"
  },
  {
    "text": "as I mentioned before we need to bring our API keys in we don't have access to",
    "start": "2395930",
    "end": "2401359"
  },
  {
    "text": "your API keys so on the ec2 instance we can change directory into our config and",
    "start": "2401359",
    "end": "2407270"
  },
  {
    "text": "we can just paste in to our config j/s that API key now I'll just jump across",
    "start": "2407270",
    "end": "2414529"
  },
  {
    "text": "I'll copy the API key that I bought across into my local configuration earlier and we'll paste this into the",
    "start": "2414529",
    "end": "2422869"
  },
  {
    "text": "confi j/s and of course I'm not running as the right user typical we'll jump in",
    "start": "2422869",
    "end": "2431510"
  },
  {
    "text": "and we will put our API key in that will give us access to the dark sky or",
    "start": "2431510",
    "end": "2439069"
  },
  {
    "text": "forecast i/o API if you don't do that you will get an error that's pretty",
    "start": "2439069",
    "end": "2444770"
  },
  {
    "text": "self-explanatory it says it's an invalid API key so keep your eyes open for that and that's it web configured and ready",
    "start": "2444770",
    "end": "2453020"
  },
  {
    "text": "to go so what I want to do is walk you through the command line how we fire up",
    "start": "2453020",
    "end": "2458180"
  },
  {
    "text": "our instance so not our instance sorry our application so we'll jump across to",
    "start": "2458180",
    "end": "2463880"
  },
  {
    "text": "the git repository again and in here we",
    "start": "2463880",
    "end": "2469099"
  },
  {
    "text": "step you through the cloud formation as we've just done but we also run you",
    "start": "2469099",
    "end": "2474349"
  },
  {
    "text": "through how to actually run the code so if we look at the command line you'll see here we're calling generate j/s we",
    "start": "2474349",
    "end": "2481819"
  },
  {
    "text": "provide a state and the example I have here is California we define a city Palo",
    "start": "2481819",
    "end": "2487609"
  },
  {
    "text": "Alto is one of my favorite cities in the US I just wish I could afford to live there apparently every time there's a",
    "start": "2487609",
    "end": "2494750"
  },
  {
    "text": "new Silicon Valley IPO prices in Palo Alto go through the roof even further so",
    "start": "2494750",
    "end": "2500500"
  },
  {
    "text": "yeah I don't think I'll ever be fortunate enough to live there but I do love it and then we provide the",
    "start": "2500500",
    "end": "2506900"
  },
  {
    "text": "longitude and latitude of that location in the longitudinal attitude options and",
    "start": "2506900",
    "end": "2512210"
  },
  {
    "text": "we provide a sensor name and I've just given this in this example sense of but this could be any arbitrary name so",
    "start": "2512210",
    "end": "2520510"
  },
  {
    "text": "just to get this running I'm going to copy this command line from the readme",
    "start": "2520510",
    "end": "2528470"
  },
  {
    "text": "and I can just paste it straight into my ec2 instance and with any luck we're",
    "start": "2528470",
    "end": "2538369"
  },
  {
    "text": "going to have a look at what happens so our application fires up we do do some",
    "start": "2538369",
    "end": "2543890"
  },
  {
    "text": "local logging so I'm going to step you through this logging and you'll see here that in the first four lines of our",
    "start": "2543890",
    "end": "2550510"
  },
  {
    "text": "application logging we initialize four sensors we define a an arbitrary",
    "start": "2550510",
    "end": "2557390"
  },
  {
    "text": "globally unique ID for each of these sensors and you'll see here we've got a rain sensor a temperature sensor a",
    "start": "2557390",
    "end": "2564740"
  },
  {
    "text": "vibration sensor and a wind speed sensor we fire up web sockets we're not using",
    "start": "2564740",
    "end": "2571400"
  },
  {
    "text": "it in this application that we do fire up web sockets we fire up our MQTT",
    "start": "2571400",
    "end": "2577160"
  },
  {
    "text": "server and then have a look at what we do here aren't we going we fetch that weather data from that with a forecast",
    "start": "2577160",
    "end": "2584960"
  },
  {
    "text": "i/o API and then we attach that sensor",
    "start": "2584960",
    "end": "2590569"
  },
  {
    "text": "and the sensor data to the appropriate city and state and then we start",
    "start": "2590569",
    "end": "2597140"
  },
  {
    "text": "generating data and if you have a look at the data that's being generated here on the command line and I'm sorry it's",
    "start": "2597140",
    "end": "2603710"
  },
  {
    "text": "breaking across lines but if I go any smaller people might have trouble seeing",
    "start": "2603710",
    "end": "2609550"
  },
  {
    "text": "we're generating for the rain sensor we generate a sense of timestamp and that's",
    "start": "2609550",
    "end": "2617000"
  },
  {
    "text": "a pop timestamp so what's at January 1 1970 we generate a sense of value so in",
    "start": "2617000",
    "end": "2625550"
  },
  {
    "text": "this case this time yesterday in Palo Alto surprise-surprise beautiful California no rain unlike",
    "start": "2625550",
    "end": "2634130"
  },
  {
    "text": "unlike beautiful Melbourne where it was quite rainy yesterday and also a",
    "start": "2634130",
    "end": "2640700"
  },
  {
    "text": "direction when we supply a negative one direction it just means that there it's",
    "start": "2640700",
    "end": "2646250"
  },
  {
    "text": "not a a vector value so you can ignore you'll",
    "start": "2646250",
    "end": "2651450"
  },
  {
    "text": "see here in the temperature sensor we're generating sixty point five six which is",
    "start": "2651450",
    "end": "2656760"
  },
  {
    "text": "the temperature at this point in time yesterday in Palo Alto I hope that's correct I didn't I haven't checked it",
    "start": "2656760",
    "end": "2662790"
  },
  {
    "text": "but I'm pretty sure it is we also generate some vibrational data and this is measured in G's in terms of gravities",
    "start": "2662790",
    "end": "2671250"
  },
  {
    "text": "so this is 0.95 percent of 1g four point nine five one and then we generate our",
    "start": "2671250",
    "end": "2679920"
  },
  {
    "text": "wind speed and direction as well and this data will just continue to stream",
    "start": "2679920",
    "end": "2685910"
  },
  {
    "text": "so that's really pretty cool we've now got this empty TT data streaming but how",
    "start": "2685910",
    "end": "2693000"
  },
  {
    "text": "do we actually get to this data how do we get our iot devices and applications",
    "start": "2693000",
    "end": "2698210"
  },
  {
    "text": "to have access to this data there are two ways to do this the first one is",
    "start": "2698210",
    "end": "2704550"
  },
  {
    "text": "understanding that mqtt streams data on arbitrarily named topics in the case of",
    "start": "2704550",
    "end": "2712470"
  },
  {
    "text": "this application the topics that we generate are in the format of weather / and then the state that you specified on",
    "start": "2712470",
    "end": "2719550"
  },
  {
    "text": "the command line the city you specified on the command line and then whether you want the rain sensor the temperature",
    "start": "2719550",
    "end": "2726030"
  },
  {
    "text": "sensor the vibration sensor or the wind speed sensor so I reckon it's not a",
    "start": "2726030",
    "end": "2733550"
  },
  {
    "text": "complicated thing to draw the conclusion that from California Palo Alto these",
    "start": "2733550",
    "end": "2738720"
  },
  {
    "text": "would be the topics that the data is being streamed on so for example that you wanted to look at the payload of",
    "start": "2738720",
    "end": "2744930"
  },
  {
    "text": "palo alto wind speed you would have you would see sensor data flowing like this",
    "start": "2744930",
    "end": "2751040"
  },
  {
    "text": "where this is 0.4 51 miles per hour and 291 degrees from north so that's sort of",
    "start": "2751040",
    "end": "2761520"
  },
  {
    "text": "what's that north north west what do you reckon - 91 - 70s west",
    "start": "2761520",
    "end": "2769700"
  },
  {
    "text": "it's too early here this complex complex",
    "start": "2772600",
    "end": "2778250"
  },
  {
    "text": "stuff but let's push on so we're streaming data but how do we",
    "start": "2778250",
    "end": "2783860"
  },
  {
    "text": "get access to it there are two ways that I'm suggesting here to have a look at",
    "start": "2783860",
    "end": "2788990"
  },
  {
    "text": "this data the first one is there's a great tool out there called mqtt FX and",
    "start": "2788990",
    "end": "2794840"
  },
  {
    "text": "I'm going to look at that or you could use mqt tjs and the readme has links to",
    "start": "2794840",
    "end": "2800210"
  },
  {
    "text": "all of those and you can follow the installations of how to do that let's have a look I'm going to attempt to",
    "start": "2800210",
    "end": "2808670"
  },
  {
    "text": "subscribe to that stream from my local laptop so what we need to do here is",
    "start": "2808670",
    "end": "2814580"
  },
  {
    "text": "just grab this command line that we've we've given in the readme I'm going to",
    "start": "2814580",
    "end": "2821060"
  },
  {
    "text": "open up another window here when my machine decides to listen to me we can",
    "start": "2821060",
    "end": "2827060"
  },
  {
    "text": "see the data streaming away in the background I'm going to paste in that command line the only thing I really",
    "start": "2827060",
    "end": "2832850"
  },
  {
    "text": "need to do here is just change that - H and that's the host we're using default",
    "start": "2832850",
    "end": "2838580"
  },
  {
    "text": "ports so there's no no need to change any other configuration so I can jump",
    "start": "2838580",
    "end": "2844970"
  },
  {
    "text": "back over to my cloud formation output and that has the IP address of my ec2",
    "start": "2844970",
    "end": "2853160"
  },
  {
    "text": "instance in it so again Ryan you're exactly right the console is really useful for getting data and watching how",
    "start": "2853160",
    "end": "2860810"
  },
  {
    "text": "things progress so I'm going to change out that - H and I'm going to drop in my IP address now one of the things I love",
    "start": "2860810",
    "end": "2868610"
  },
  {
    "text": "to do in life is make predictions it's pretty early so I'm hoping I'm not wrong",
    "start": "2868610",
    "end": "2875480"
  },
  {
    "text": "but I'm going to predict that I'm going to start seeing some wind speed data come in that matches the data we see",
    "start": "2875480",
    "end": "2882140"
  },
  {
    "text": "streaming behind so let's give that a try and subscribe to that MQTT topic",
    "start": "2882140",
    "end": "2887530"
  },
  {
    "text": "here we go how are we looking it's not looking good it's not looking",
    "start": "2887530",
    "end": "2894110"
  },
  {
    "text": "good at all I would have expected that to have already connected and received",
    "start": "2894110",
    "end": "2899890"
  },
  {
    "text": "some of that data so what we're going to do is jump across to another tool",
    "start": "2899890",
    "end": "2906339"
  },
  {
    "text": "which is a bit more visual and that's the MQTT FX tool again say it's a free",
    "start": "2906339",
    "end": "2914599"
  },
  {
    "text": "tool we've got links in the readme for that and it looks when it decides to",
    "start": "2914599",
    "end": "2921440"
  },
  {
    "text": "load a little laptop is having trouble here it comes",
    "start": "2921440",
    "end": "2926750"
  },
  {
    "text": "it looks something like this what you can do is you can click on the little cog in here you can pop in the IP",
    "start": "2926750",
    "end": "2934789"
  },
  {
    "text": "address of the ec2 instance and hit OK",
    "start": "2934789",
    "end": "2941390"
  },
  {
    "text": "and with any lark I'm unable to connect to the server and I'm betting that's",
    "start": "2941390",
    "end": "2946640"
  },
  {
    "text": "because I'm on the corporate network silly me",
    "start": "2946640",
    "end": "2951849"
  },
  {
    "text": "which does not allow me to connect so I'm going to change that will give my",
    "start": "2952150",
    "end": "2960289"
  },
  {
    "text": "machine a second and we should be able to receive that data GZ no Ryan I told",
    "start": "2960289",
    "end": "2966140"
  },
  {
    "text": "you it was early I feel check that before we got started it's not even yet",
    "start": "2966140",
    "end": "2975980"
  },
  {
    "text": "7:00 a.m. I've had three cups of coffee already I'm still not still not quite with it let's see how we go connecting",
    "start": "2975980",
    "end": "2984589"
  },
  {
    "text": "to our our guest network here in the office hopefully that's going to go well",
    "start": "2984589",
    "end": "2991480"
  },
  {
    "text": "failing that I'm going to show you still the same subscription but we'll do it on the local ec2 instance so I'm not going",
    "start": "2991480",
    "end": "3000400"
  },
  {
    "text": "to spend any more time on that so we'll just switch back again to the",
    "start": "3000400",
    "end": "3006089"
  },
  {
    "text": "to the network I'm going to reconnect to that ec2 instance because I would have",
    "start": "3006089",
    "end": "3013210"
  },
  {
    "text": "dropped off yep so I'm gonna go back I'm going to look for my SSH command I'm",
    "start": "3013210",
    "end": "3020380"
  },
  {
    "text": "going to drop back into that ec2 instance",
    "start": "3020380",
    "end": "3024509"
  },
  {
    "text": "the gods are not with me this morning Ryan I think that your faith in my",
    "start": "3027880",
    "end": "3042770"
  },
  {
    "text": "skills is underwhelming I'm gonna go",
    "start": "3042770",
    "end": "3050119"
  },
  {
    "text": "back and run my generate command and that's gonna get that data flowing again",
    "start": "3050119",
    "end": "3055369"
  },
  {
    "text": "and off we go I'm gonna open up another window to the same ec2 instance and room remember what",
    "start": "3055369",
    "end": "3062960"
  },
  {
    "text": "I'm doing here you can do exactly the same on your local machine but we do encourage you to use an ec2 instance now",
    "start": "3062960",
    "end": "3069710"
  },
  {
    "text": "as I mentioned before we just use the subscribe command from our mqtt tool but",
    "start": "3069710",
    "end": "3076280"
  },
  {
    "text": "not having thought through that I would need to do this I may not have installed that MQTT tool I haven't so we're gonna",
    "start": "3076280",
    "end": "3083780"
  },
  {
    "text": "quickly install that and we're going to do that using let's use NPM so I can",
    "start": "3083780",
    "end": "3090560"
  },
  {
    "text": "install that globally and I believe it's just mqtt dududududu install let's do",
    "start": "3090560",
    "end": "3100070"
  },
  {
    "text": "that and install that MQTT tool it doesn't like that because I've asked it",
    "start": "3100070",
    "end": "3106369"
  },
  {
    "text": "to be global so I'll switch this to the super user and I'll run that again - G",
    "start": "3106369",
    "end": "3114109"
  },
  {
    "text": "means that we're installed in this globally they're all users on the on that ec2 instance has that have access",
    "start": "3114109",
    "end": "3120230"
  },
  {
    "text": "to it and I'm just going to install that application and with any luck I now have",
    "start": "3120230",
    "end": "3125869"
  },
  {
    "text": "a command line tool called MQTT and there we go that's how easy it is so I'm",
    "start": "3125869",
    "end": "3132859"
  },
  {
    "text": "just going to jump back over here to my command line and now because I am on",
    "start": "3132859",
    "end": "3140150"
  },
  {
    "text": "that localhost I should just be able to subscribe to that stream and just I'll",
    "start": "3140150",
    "end": "3146599"
  },
  {
    "text": "just make this a bit smaller let us know on chat if that's getting too small but it's just a little bit cleaner to have a",
    "start": "3146599",
    "end": "3151670"
  },
  {
    "text": "look at it like this here we go I have hit enter and I've subscribed to this to",
    "start": "3151670",
    "end": "3157099"
  },
  {
    "text": "the the wind speed sensor and you can see",
    "start": "3157099",
    "end": "3164109"
  },
  {
    "text": "here I'm getting a timestamp I'm getting a wind speed and direction and that direction is moving around a little bit",
    "start": "3164109",
    "end": "3170349"
  },
  {
    "text": "I'm not surprised that wind generally tends to do that but what if I want to",
    "start": "3170349",
    "end": "3176140"
  },
  {
    "text": "get multiple sensor data at the same time",
    "start": "3176140",
    "end": "3181509"
  },
  {
    "text": "well MQ mqtt allows us to use wildcards within the stream within the topic name",
    "start": "3181509",
    "end": "3188410"
  },
  {
    "text": "so I can change out that WS which was the wind speed I can put in a hash and",
    "start": "3188410",
    "end": "3195039"
  },
  {
    "text": "that means we will subscribe to everything on that weather California",
    "start": "3195039",
    "end": "3201039"
  },
  {
    "text": "Palo Alto MQTT stream and you'll see here I'm now getting multiple pieces of",
    "start": "3201039",
    "end": "3207640"
  },
  {
    "text": "data I'll just stop it so you can see we're getting some temperature we're",
    "start": "3207640",
    "end": "3213880"
  },
  {
    "text": "getting let's have a look here we're getting some temperature we're probably getting zero rainfall we're getting wind",
    "start": "3213880",
    "end": "3222700"
  },
  {
    "text": "speed and we're getting some by a little bit of vibrational data as well so this",
    "start": "3222700",
    "end": "3228369"
  },
  {
    "text": "is a great way to have a look at all the data that's streaming in to or from your",
    "start": "3228369",
    "end": "3236259"
  },
  {
    "text": "instance to your application one of the great things about using nodejs is this code is completely portable on two",
    "start": "3236259",
    "end": "3242680"
  },
  {
    "text": "devices like the Raspberry Pi so you can install that mqtt client just like I did",
    "start": "3242680",
    "end": "3249489"
  },
  {
    "text": "on a Raspberry Pi and consume this stream on a Raspberry Pi and then you can take that stream data and republish",
    "start": "3249489",
    "end": "3256269"
  },
  {
    "text": "that into the AWS IOT service how we're",
    "start": "3256269",
    "end": "3261279"
  },
  {
    "text": "going for time Ryan I've got about another five minutes how's that it sounds great great so you can see here",
    "start": "3261279",
    "end": "3268329"
  },
  {
    "text": "we're generating our four sets of data it's streaming continuously that's set",
    "start": "3268329",
    "end": "3276369"
  },
  {
    "text": "up at one-second intervals which is probably sufficient for weather data you",
    "start": "3276369",
    "end": "3281589"
  },
  {
    "text": "probably don't want anything faster than that and we're better able to receive the data as well so if we jump back to",
    "start": "3281589",
    "end": "3291309"
  },
  {
    "text": "our readme you can see over here the links to that",
    "start": "3291309",
    "end": "3297520"
  },
  {
    "text": "mqtt code MQTT tool and the MQTT FX visual tool so I encourage you to have a",
    "start": "3297520",
    "end": "3305020"
  },
  {
    "text": "look at both of those there are some other ones out there that you can use so feel free to use whatever you're",
    "start": "3305020",
    "end": "3311050"
  },
  {
    "text": "comfortable with to to consume that data",
    "start": "3311050",
    "end": "3317040"
  },
  {
    "text": "so I'm going to jump across and just run everybody quickly in the last five minutes through the code and give you an",
    "start": "3317040",
    "end": "3324970"
  },
  {
    "text": "idea around how we've actually built this because you may want to use this as a prototype for your own work and you",
    "start": "3324970",
    "end": "3333370"
  },
  {
    "text": "are absolutely encouraged to take this code and improve on it we are open to",
    "start": "3333370",
    "end": "3340630"
  },
  {
    "text": "pull requests on on this code so if you find bugs or issues feel free to make",
    "start": "3340630",
    "end": "3346570"
  },
  {
    "text": "the changes and open a pull request I'd be more than happy to review it and and possibly merge it so what we've got in",
    "start": "3346570",
    "end": "3356320"
  },
  {
    "text": "this application is basically a range of",
    "start": "3356320",
    "end": "3362640"
  },
  {
    "text": "objects that get created for each of the senses and we use we use Lib modules",
    "start": "3362640",
    "end": "3374050"
  },
  {
    "text": "sensors for those definitions so you can see over here we generate a rainfall sensor called rain which is what's",
    "start": "3374050",
    "end": "3381970"
  },
  {
    "text": "included in the topic it's called rainfall and we just create a generic G UID a globally unique ID",
    "start": "3381970",
    "end": "3391330"
  },
  {
    "text": "using this device ID hash so we create a hash which is unique we create an array",
    "start": "3391330",
    "end": "3397510"
  },
  {
    "text": "of sensors and then we iterate through that array of sensors to start them up",
    "start": "3397510",
    "end": "3402840"
  },
  {
    "text": "so we attach a sensor to the weather station so you can basically view this",
    "start": "3402840",
    "end": "3407860"
  },
  {
    "text": "code as as a weather station so we iterate through that and then we tell each sensor to start so you know what",
    "start": "3407860",
    "end": "3415000"
  },
  {
    "text": "does the sensor look like well let's have a look at a sensor so we've got for all intents and purposes then we jump",
    "start": "3415000",
    "end": "3421210"
  },
  {
    "text": "down to the where am i the definition here we are we",
    "start": "3421210",
    "end": "3428080"
  },
  {
    "text": "define a sin so this is for all intents and purposes a base function that our Singleton's within the application we've",
    "start": "3428080",
    "end": "3435790"
  },
  {
    "text": "got some valid types if you want to introduce a new type don't forget to update this valid types of ray we set",
    "start": "3435790",
    "end": "3444400"
  },
  {
    "text": "some defaults we check that we're of a valid type so if you try and define a",
    "start": "3444400",
    "end": "3450880"
  },
  {
    "text": "sensor I don't know not vibration but seismology or seismological that would",
    "start": "3450880",
    "end": "3458410"
  },
  {
    "text": "not work because it's not a valid type we cook we if you recall in our station",
    "start": "3458410",
    "end": "3466290"
  },
  {
    "text": "das sorry you know generate a s on each of the sensors we call an attach",
    "start": "3466290",
    "end": "3472510"
  },
  {
    "text": "function or method this is where we attach those sensors to the weather",
    "start": "3472510",
    "end": "3480760"
  },
  {
    "text": "station we've got some utility logging that you can use here and then this is",
    "start": "3480760",
    "end": "3486640"
  },
  {
    "text": "how we basically start a sensor we call start on the method and then from there",
    "start": "3486640",
    "end": "3491650"
  },
  {
    "text": "we go in we process the forecast data and then at one-second intervals sorry",
    "start": "3491650",
    "end": "3499630"
  },
  {
    "text": "at frequency intervals which I'll show you in a minute is defined to 1 so this is one second intervals in this",
    "start": "3499630",
    "end": "3505570"
  },
  {
    "text": "application we basically publish the data and publishing the data is actually",
    "start": "3505570",
    "end": "3510670"
  },
  {
    "text": "pretty straightforward so for the for the the classes that we sit on top of",
    "start": "3510670",
    "end": "3516640"
  },
  {
    "text": "sensors you can see here we define a frequency if you want it more if you",
    "start": "3516640",
    "end": "3522580"
  },
  {
    "text": "want it faster or more granular you can increase this frequency it's measured in hertz and then you if you remember",
    "start": "3522580",
    "end": "3531970"
  },
  {
    "text": "before I said sometimes the data we get from forecast IO is not granular enough",
    "start": "3531970",
    "end": "3537490"
  },
  {
    "text": "to support the one-second intervals so we use some distribution techniques to",
    "start": "3537490",
    "end": "3545230"
  },
  {
    "text": "take the the data samples and use a Gaussian distribution across them",
    "start": "3545230",
    "end": "3550300"
  },
  {
    "text": "to spread them out between the samples and then we when we have our processed",
    "start": "3550300",
    "end": "3555580"
  },
  {
    "text": "forecast we basically get data out create a distribution curve for",
    "start": "3555580",
    "end": "3562420"
  },
  {
    "text": "that data and that enables us to create a message on the weather topic the",
    "start": "3562420",
    "end": "3568450"
  },
  {
    "text": "station name the sensor name create that payload that we see so this payload",
    "start": "3568450",
    "end": "3574599"
  },
  {
    "text": "definition is what you see being streamed over here this is the payload",
    "start": "3574599",
    "end": "3582599"
  },
  {
    "text": "and then we stringify that so we get it",
    "start": "3582599",
    "end": "3587979"
  },
  {
    "text": "as a string representation of a JSON object and then we give it to the MQTT",
    "start": "3587979",
    "end": "3594160"
  },
  {
    "text": "server to publish so it's actually really straightforward now if you're running this for more than 24 hours",
    "start": "3594160",
    "end": "3601559"
  },
  {
    "text": "because we only get 24 hours of data from the forecast IO API we just want to",
    "start": "3601559",
    "end": "3606849"
  },
  {
    "text": "make sure that we don't exceed the number of samples that we have so we",
    "start": "3606849",
    "end": "3613380"
  },
  {
    "text": "loop back to the start of what we want to publish point back to zero so we go",
    "start": "3613380",
    "end": "3618910"
  },
  {
    "text": "back to the start so that's kind of a",
    "start": "3618910",
    "end": "3625119"
  },
  {
    "text": "very high-level introduction to the code I encourage you to dig into it and have",
    "start": "3625119",
    "end": "3630249"
  },
  {
    "text": "a look it may look a little bit overwhelming for those of you who are not used to dealing with nodejs and",
    "start": "3630249",
    "end": "3638859"
  },
  {
    "text": "things like promises etc if you do get stuck feel free to raise an issue in the",
    "start": "3638859",
    "end": "3644589"
  },
  {
    "text": "git repository again the URL for that is up here I think Chandra has been kind",
    "start": "3644589",
    "end": "3650319"
  },
  {
    "text": "enough to post it and we'll be able to to answer your questions there now one",
    "start": "3650319",
    "end": "3658029"
  },
  {
    "text": "thing I do want to call out I have a look at we've got we've got some sunshine in Melbourne I've been heads down on the screen so I haven't been",
    "start": "3658029",
    "end": "3664209"
  },
  {
    "text": "able to see that beautiful sunrise in Melbourne so you've generated a stream",
    "start": "3664209",
    "end": "3672130"
  },
  {
    "text": "of MQTT data that's a nice representation of a whole bunch of environmental data but what do you do",
    "start": "3672130",
    "end": "3678309"
  },
  {
    "text": "with it so you can consume this data on to say for example a raspberry pi",
    "start": "3678309",
    "end": "3685890"
  },
  {
    "text": "a chip or any other sort of capable I Oh",
    "start": "3685890",
    "end": "3691359"
  },
  {
    "text": "T enabled device and you can consume this data using that MQTT nodejs tool",
    "start": "3691359",
    "end": "3699579"
  },
  {
    "text": "that i showed you before and based on that you can use the AWS nodejs SDK to",
    "start": "3699579",
    "end": "3707140"
  },
  {
    "text": "consume that data and then publish it into into AWS so what I want to quickly",
    "start": "3707140",
    "end": "3712900"
  },
  {
    "text": "do is show you what the IOT service looks like from a console standpoint so",
    "start": "3712900",
    "end": "3720280"
  },
  {
    "text": "I jump across to AWS IOT Ryan's going to cover Kinesis but I'll quickly touching",
    "start": "3720280",
    "end": "3725859"
  },
  {
    "text": "the IOT service for you so when you use the AWS IOT service we really think",
    "start": "3725859",
    "end": "3734050"
  },
  {
    "text": "about it in terms of three big chunks of data connecting and managing your IOT devices processing and acting upon the",
    "start": "3734050",
    "end": "3741640"
  },
  {
    "text": "device data and then the ability to read a set device state at any time one cool",
    "start": "3741640",
    "end": "3748510"
  },
  {
    "text": "thing about the AWS IOT service is customers like yourselves out there have",
    "start": "3748510",
    "end": "3754510"
  },
  {
    "text": "told us that IOT devices quite often have intermittent network connectivity and you need to be able to resynchronize",
    "start": "3754510",
    "end": "3761650"
  },
  {
    "text": "state when an IOT device gets disconnected and then later reconnect to the network so we have this capability",
    "start": "3761650",
    "end": "3767920"
  },
  {
    "text": "called the IOT device Shadow and that device Shadow is a managed way of",
    "start": "3767920",
    "end": "3775329"
  },
  {
    "text": "synchronizing state when a device comes back online after an outage or a battery change or",
    "start": "3775329",
    "end": "3781990"
  },
  {
    "text": "even a change out of device you can manage the the device state using the",
    "start": "3781990",
    "end": "3787869"
  },
  {
    "text": "AWS IOT device Shadow so I'm not going",
    "start": "3787869",
    "end": "3795490"
  },
  {
    "text": "to run through how to configure the AWS IOT service but I encourage you to have",
    "start": "3795490",
    "end": "3800859"
  },
  {
    "text": "a look in the console it's a relatively straightforward process of how to",
    "start": "3800859",
    "end": "3806619"
  },
  {
    "text": "connect your IOT devices using the AWS SDK for node or C++ or Java is also not",
    "start": "3806619",
    "end": "3816460"
  },
  {
    "text": "an overly complex task so I encourage you to go and have a read of that documentation the documentation is over",
    "start": "3816460",
    "end": "3825069"
  },
  {
    "text": "here it's extremely rich documentation have a look at how you can read this",
    "start": "3825069",
    "end": "3830589"
  },
  {
    "text": "data in that we've just generated from your ec2 instances or your local development environment into your iot",
    "start": "3830589",
    "end": "3836950"
  },
  {
    "text": "service consume it process it and then publish it into the AWS platform using",
    "start": "3836950",
    "end": "3843789"
  },
  {
    "text": "the iot service you can either potentially use the Kinesis service couldn't arrive yes you could",
    "start": "3843789",
    "end": "3850299"
  },
  {
    "text": "I'm actually going to walk right through that exactly so with that I'm going to",
    "start": "3850299",
    "end": "3856920"
  },
  {
    "text": "stop prattling on I'm going to thank everybody for their attention and",
    "start": "3856920",
    "end": "3862240"
  },
  {
    "text": "joining me today I'm gonna hang around to answer some questions I encourage you",
    "start": "3862240",
    "end": "3868089"
  },
  {
    "text": "all to stick around have a chat with with Ryan I'm going to disconnect my",
    "start": "3868089",
    "end": "3873549"
  },
  {
    "text": "screen and hand over to Ryan now so thanks everybody again I encourage you",
    "start": "3873549",
    "end": "3880420"
  },
  {
    "text": "all to clone that git repository stand up your ec2 instances contribute back",
    "start": "3880420",
    "end": "3885569"
  },
  {
    "text": "through pull requests open issues in get if you have them or you find bug can be",
    "start": "3885569",
    "end": "3891910"
  },
  {
    "text": "more than happy to address them and I wish everybody great luck with their AWS",
    "start": "3891910",
    "end": "3897549"
  },
  {
    "text": "IOT challenge work and I hope the information we've provided today has been useful Ryan what have you got to",
    "start": "3897549",
    "end": "3903640"
  },
  {
    "text": "share with us so thank you very much much Marc that was a great presentation",
    "start": "3903640",
    "end": "3909160"
  },
  {
    "text": "of the AWS IOT service and working with some real-life sensor data what we're",
    "start": "3909160",
    "end": "3916599"
  },
  {
    "text": "going to share today is I'm havin go through so Marcus showed how to work",
    "start": "3916599",
    "end": "3921670"
  },
  {
    "text": "sort of like programmatically through the API using a set of a database IT services a lot of you may not be",
    "start": "3921670",
    "end": "3928329"
  },
  {
    "text": "familiar with how to use the console or the Amazon command line interface so we're going to go through basically one",
    "start": "3928329",
    "end": "3936579"
  },
  {
    "text": "example implementation this on this AWS big data block those actually paste it in the chat on how to build sort of an",
    "start": "3936579",
    "end": "3945880"
  },
  {
    "text": "end-to-end solution using AWS IOT a couple of Amazon Canisius products and",
    "start": "3945880",
    "end": "3952250"
  },
  {
    "text": "some quick site to build a real-time visualization so what I'll also do is",
    "start": "3952250",
    "end": "3959990"
  },
  {
    "text": "I'm going to present some alternatives you got to you guys so this is like one example architecture and there's a lot",
    "start": "3959990",
    "end": "3965869"
  },
  {
    "text": "of different things that you can do here so each step I'll present I'll go",
    "start": "3965869",
    "end": "3970880"
  },
  {
    "text": "through some of the options that you have search as an example for ingesting",
    "start": "3970880",
    "end": "3977420"
  },
  {
    "text": "data you can use the Kinesis firehose or it can you see a stream and we'll talk about what whether you would make one",
    "start": "3977420",
    "end": "3983359"
  },
  {
    "text": "choice or the other but with that let's get started so I in order to simplify",
    "start": "3983359",
    "end": "3988730"
  },
  {
    "text": "this a little bit I've got some of the portions already running but actually go through this the first thing is how do",
    "start": "3988730",
    "end": "3995960"
  },
  {
    "text": "we ingest data and why do we use Amazon cases so the anywhere's IOT provides a",
    "start": "3995960",
    "end": "4003609"
  },
  {
    "text": "very very good friend for interacting with devices via MQTT amazon Kinesis",
    "start": "4003609",
    "end": "4009280"
  },
  {
    "text": "deals with very high volume or high throughput streams of data which is a very natural fit for IOT devices so if",
    "start": "4009280",
    "end": "4016930"
  },
  {
    "text": "you're generating a very in real-time you're generating a lot of very small pieces of data like sensor data how do i",
    "start": "4016930",
    "end": "4022869"
  },
  {
    "text": "cheaply and efficiently get that data and process it and that's really where it was on Kinesis fits it so we have a",
    "start": "4022869",
    "end": "4030339"
  },
  {
    "text": "set of services i'll navigate to the console as I do this",
    "start": "4030339",
    "end": "4035460"
  },
  {
    "text": "so Kinesis has a set of services Amazon cases streams which allows you to build",
    "start": "4038910",
    "end": "4044980"
  },
  {
    "text": "sort of custom applications and ingest in at a very high volume Amazon cases fire most whose primary purpose is to",
    "start": "4044980",
    "end": "4051790"
  },
  {
    "text": "both ingest high volumes of streaming data as well as loading into a specific destination so in a very simple solution",
    "start": "4051790",
    "end": "4059200"
  },
  {
    "text": "if all you're trying to do is get sensors from point A to an s3 bucket or",
    "start": "4059200",
    "end": "4066010"
  },
  {
    "text": "an elastic search cluster fire hose really fits the bill boots it's very easy to set up and we'll walk through",
    "start": "4066010",
    "end": "4071589"
  },
  {
    "text": "that and you can do things like transformations before the data arrives and it's a very good good way to set up",
    "start": "4071589",
    "end": "4078310"
  },
  {
    "text": "sort of getting data from point A to point B quickly cheaply and efficiently",
    "start": "4078310",
    "end": "4083540"
  },
  {
    "text": "jeesus analytics is the last words part of services of Kinesis firehose it",
    "start": "4083540",
    "end": "4089010"
  },
  {
    "text": "allows you to run sequel queries on both streams and fibers so this is great when if you imagine if you have a stream",
    "start": "4089010",
    "end": "4095220"
  },
  {
    "text": "coming in of data of continuously generated data points and you have say you know tens of thousands of data",
    "start": "4095220",
    "end": "4101640"
  },
  {
    "text": "points and you want to send that to a dynamo DB table or cloud watch metrics",
    "start": "4101640",
    "end": "4107130"
  },
  {
    "text": "or in my sequel database obviously you don't want to write you know ten",
    "start": "4107130",
    "end": "4113160"
  },
  {
    "text": "thousand events per second to those databases because it's very costly it's very expensive but undo load possibly on",
    "start": "4113160",
    "end": "4120180"
  },
  {
    "text": "the database what analytics allows you to do is compute those analytics in real time and",
    "start": "4120180",
    "end": "4126600"
  },
  {
    "text": "load aggregated events into your store or react to it in real time so an",
    "start": "4126600",
    "end": "4132390"
  },
  {
    "text": "example might be an IOT sensor has a particular sensor has a temperature",
    "start": "4132390",
    "end": "4137850"
  },
  {
    "text": "reading that's coming in the only temperature readings you care about our temperature readings above a certain",
    "start": "4137850",
    "end": "4143370"
  },
  {
    "text": "amount analytics will allow you to filter it to that and then react to it in real time so when you guys work on",
    "start": "4143370",
    "end": "4148859"
  },
  {
    "text": "the IOT app challenge sort of solutions this is one cool thing you can do is get",
    "start": "4148859",
    "end": "4154770"
  },
  {
    "text": "the data flowing from a doubler society into a case of stream or firehose filter",
    "start": "4154770",
    "end": "4160470"
  },
  {
    "text": "out interesting events and then react to it in real time either in a visual way or through an alarm or a metric or",
    "start": "4160470",
    "end": "4166920"
  },
  {
    "text": "through a dashboard that type of solution is really really compelling and that's what we see our customers",
    "start": "4166920",
    "end": "4172380"
  },
  {
    "text": "themselves implement so I encourage you to try out all three services we're going to walk through sort of how this",
    "start": "4172380",
    "end": "4178500"
  },
  {
    "text": "solution and then show you how many sort of work so Ryan yeah question for you",
    "start": "4178500",
    "end": "4184920"
  },
  {
    "text": "Connect is one of my absolute favorite AWS services it just makes life so easy",
    "start": "4184920",
    "end": "4191779"
  },
  {
    "text": "with Kinesis analytics if I'm thinking about weather data I might want to do",
    "start": "4191780",
    "end": "4197670"
  },
  {
    "text": "things like what was the average temperature over the last five minutes",
    "start": "4197670",
    "end": "4203160"
  },
  {
    "text": "or what's been the average rainfall do I need to keep all that state in my",
    "start": "4203160",
    "end": "4208830"
  },
  {
    "text": "application or could Kinesis analytics do some of that for me so what's great",
    "start": "4208830",
    "end": "4214200"
  },
  {
    "text": "about and Shahs 3d I'm sending you the link to them to the blogpost now or a",
    "start": "4214200",
    "end": "4223340"
  },
  {
    "text": "mirror of the black post let me get a actual link market can you tell me out there i think i pasted the wrong length",
    "start": "4223340",
    "end": "4229980"
  },
  {
    "text": "yeah thanks to the mirror to the link of the so but the answer marks question one",
    "start": "4229980",
    "end": "4237480"
  },
  {
    "text": "of the great examples of what you can do is analytics uses standard window in front ability and sequel so you can",
    "start": "4237480",
    "end": "4244290"
  },
  {
    "text": "produce metrics in real time overtime windows so for example for the",
    "start": "4244290",
    "end": "4250260"
  },
  {
    "text": "temperature thing that we were just talking about you can compute things like what was the average temperature per device over the last minute over the",
    "start": "4250260",
    "end": "4258870"
  },
  {
    "text": "last five minutes over the last ten seconds and these are simple declarative sequel statements versus doing a lot of",
    "start": "4258870",
    "end": "4265200"
  },
  {
    "text": "the heavy lifting say in Java or Python so that's one of the key use cases of",
    "start": "4265200",
    "end": "4270720"
  },
  {
    "text": "analytics is just it's not simple too similar to express some of these types of analytics in sequel other than some",
    "start": "4270720",
    "end": "4277680"
  },
  {
    "text": "of them other languages does that may answer your question mark yeah I'm just trying to just trying to think around",
    "start": "4277680",
    "end": "4283710"
  },
  {
    "text": "what what that means for the AWS IOT challenge does that mean that I don't need to run like my own compute to do",
    "start": "4283710",
    "end": "4291930"
  },
  {
    "text": "those sort of things exactly right thanks for leading me in the right direction so Kinesis analytics",
    "start": "4291930",
    "end": "4298170"
  },
  {
    "text": "is a completely service solution so there are no underlying ec2 instances to",
    "start": "4298170",
    "end": "4305070"
  },
  {
    "text": "manage we handle sort of automatically reading from a stream or a firehose with",
    "start": "4305070",
    "end": "4310590"
  },
  {
    "text": "discovering that schema and then applying your sequel statements to you and then streaming that data out of the application there are good alternatives",
    "start": "4310590",
    "end": "4318450"
  },
  {
    "text": "like AWS lambda the Kinesis client library apache spark streaming that you",
    "start": "4318450",
    "end": "4325350"
  },
  {
    "text": "can definitely include in your solution however the easiest ones that I'd steer you to are the service options because",
    "start": "4325350",
    "end": "4331230"
  },
  {
    "text": "they're just so much simpler to get up and running so for the challenge if you choose to use these two streams or",
    "start": "4331230",
    "end": "4336450"
  },
  {
    "text": "firehose I'd strongly steer you to either analytics or AWS lambda because there is no ec2 innocents to stand up or moderate",
    "start": "4336450",
    "end": "4343680"
  },
  {
    "text": "or get included in any skips or anything like that it's very simple to get",
    "start": "4343680",
    "end": "4348690"
  },
  {
    "text": "started it's also simple to iterate on these solutions so both of them offer an easy way to test me in the console so I'm",
    "start": "4348690",
    "end": "4355380"
  },
  {
    "text": "going to show you a little bit of that so it's definitely a good approach to sort of get your feet wet with this AWS",
    "start": "4355380",
    "end": "4360930"
  },
  {
    "text": "IOT challenge great so the first step is",
    "start": "4360930",
    "end": "4368280"
  },
  {
    "text": "how do I get data into a stream and there's two ways I want to show you how",
    "start": "4368280",
    "end": "4373980"
  },
  {
    "text": "to do this and these are both these are both good solutions for basically your development right I think Mark's",
    "start": "4373980",
    "end": "4379920"
  },
  {
    "text": "solution that he showed in the very beginning is a better solution for like getting scripts up and running and",
    "start": "4379920",
    "end": "4385740"
  },
  {
    "text": "continuously running what I'm about to show is while you're in development while you're testing your applications some very simple ways to test it to get",
    "start": "4385740",
    "end": "4393030"
  },
  {
    "text": "up and started running so the first thing I'm going to go is I'm going to go to the AWS IOT service so if you have",
    "start": "4393030",
    "end": "4409380"
  },
  {
    "text": "nothing on here mark just showed that a couple minutes ago you'll be presented with some various startup options so I",
    "start": "4409380",
    "end": "4415830"
  },
  {
    "text": "connect so here is actually the startup option so configuring a device setting",
    "start": "4415830",
    "end": "4421740"
  },
  {
    "text": "up a nativist iot button highly encouraged you go down that route that's a very cool route to go for this",
    "start": "4421740",
    "end": "4428130"
  },
  {
    "text": "challenge but or you can just get started right away all right so here",
    "start": "4428130",
    "end": "4435510"
  },
  {
    "text": "like you go through things you need to register advice downloaded connections can configure and test your device so as",
    "start": "4435510",
    "end": "4441750"
  },
  {
    "text": "you go through these options when we go ahead and click get started whenever I get started on these battery",
    "start": "4441750",
    "end": "4448470"
  },
  {
    "text": "solutions I usually just program start my solution from the device being my like laptop so I use a Windows laptop",
    "start": "4448470",
    "end": "4454830"
  },
  {
    "text": "and I'm most familiar with Python it's been a while since I did Java remember",
    "start": "4454830",
    "end": "4460770"
  },
  {
    "text": "so you'll click Next you'll choose a name for the device",
    "start": "4460770",
    "end": "4467450"
  },
  {
    "text": "and then some pertinent information being included so what are your certificates that you need how do you",
    "start": "4472460",
    "end": "4478740"
  },
  {
    "text": "write to the device so on and so forth you'll be able to download a kit so in this case I have a Windows Python kit",
    "start": "4478740",
    "end": "4485280"
  },
  {
    "text": "that I'm downloading click the next step",
    "start": "4485280",
    "end": "4492990"
  },
  {
    "text": "and then if they give you a set of instructions these are pretty simple instructions to like unzipping the",
    "start": "4492990",
    "end": "4498060"
  },
  {
    "text": "device and adding up a couple parameters so once you do that what you'll have",
    "start": "4498060",
    "end": "4505560"
  },
  {
    "text": "ended up happening is or have a register device that is your laptop with an SDK you can start playing around with so you",
    "start": "4505560",
    "end": "4515370"
  },
  {
    "text": "see my trading one go ahead and write this is this is pretty cool because if you if you think about the two parts of",
    "start": "4515370",
    "end": "4521040"
  },
  {
    "text": "what we've discussed today you've got this ec2 instance running in the cloud pushing data out your laptop could",
    "start": "4521040",
    "end": "4528630"
  },
  {
    "text": "effectively be this thing sitting out there as that as the collector all right exactly right so if especially if you're",
    "start": "4528630",
    "end": "4536190"
  },
  {
    "text": "for those of you as part of the challenge that are unfamiliar with a lot of the tools that Mark showed I what I'd",
    "start": "4536190",
    "end": "4541680"
  },
  {
    "text": "recommend is going down this route and building something incredibly simple by hand first and then going to mark Stefan",
    "start": "4541680",
    "end": "4548460"
  },
  {
    "text": "which will automate a bunch of the stuff for you and the tool is that I'm going to use they're primarily just the",
    "start": "4548460",
    "end": "4554400"
  },
  {
    "text": "console and the command-line interface so it's an easy way to get your feet wet in under an hour so great so now I have",
    "start": "4554400",
    "end": "4564420"
  },
  {
    "text": "this thing and there's nothing really associated with it right so one of the",
    "start": "4564420",
    "end": "4570060"
  },
  {
    "text": "things that I've been associated with is an IOT rule all right and rules are very simple to create I've got one created",
    "start": "4570060",
    "end": "4578730"
  },
  {
    "text": "already and the IOT console provides a really good interface for configuring",
    "start": "4578730",
    "end": "4584370"
  },
  {
    "text": "these rules so I'm gonna go into the cream",
    "start": "4584370",
    "end": "4588320"
  },
  {
    "text": "and what's really cool about this is that you get this limited sequel language to apply filters look at",
    "start": "4606699",
    "end": "4614290"
  },
  {
    "text": "attributes so on and so forth in here so in a real world scenario you can for",
    "start": "4614290",
    "end": "4621400"
  },
  {
    "text": "specific use cases you can apply a very fine-grained rules so which as an",
    "start": "4621400",
    "end": "4626800"
  },
  {
    "text": "example we're going to set up a role to forward data to a Kinesis firehose one of the things you might do is apply a",
    "start": "4626800",
    "end": "4631929"
  },
  {
    "text": "filter on that which is a fantastic way to just say I want a portion of my data",
    "start": "4631929",
    "end": "4637179"
  },
  {
    "text": "sent to this particular Kinesis pyrokinesis string",
    "start": "4637179",
    "end": "4642150"
  },
  {
    "text": "so the data source is setup so I finished step 1 I'm skipping around a little bit to just",
    "start": "4656869",
    "end": "4663059"
  },
  {
    "text": "what I wanted to show you the console the role the rule that we're going to set up is very very simple so on a particular topic you're going to",
    "start": "4663059",
    "end": "4672809"
  },
  {
    "text": "set up an action and the action is available to you are all of them are",
    "start": "4672809",
    "end": "4678449"
  },
  {
    "text": "very close so you can just send a message directly it has three you can send messages to kinases fire those like",
    "start": "4678449",
    "end": "4684389"
  },
  {
    "text": "for example if you wanted to do ETL prior to hitting s3 to sqs topics - if",
    "start": "4684389",
    "end": "4691800"
  },
  {
    "text": "you've used AWS before you'll see that there's probably a service that you're very familiar with and just ingesting",
    "start": "4691800",
    "end": "4698369"
  },
  {
    "text": "data in in this particular case I'm going to send doing Kinesis firehose and",
    "start": "4698369",
    "end": "4704239"
  },
  {
    "text": "once I configure this action and set the attributes correctly basically any data",
    "start": "4705110",
    "end": "4711119"
  },
  {
    "text": "sent to my IOT a sense of IOT service to meet the specific criteria are just",
    "start": "4711119",
    "end": "4717929"
  },
  {
    "text": "going to be forward long to the Canisius stream or fire those I'm not actually",
    "start": "4717929",
    "end": "4723570"
  },
  {
    "text": "going to create it because I've already created for you so this is the role and it's enabled it's turned on I'm gonna",
    "start": "4723570",
    "end": "4731039"
  },
  {
    "text": "give you guys another sort of best practice that I had while I'm building these end applications and that's to use",
    "start": "4731039",
    "end": "4736170"
  },
  {
    "text": "cloud watch and cloud watch dashboards very liberally because it's a lot easier to visually say and verify data is",
    "start": "4736170",
    "end": "4744030"
  },
  {
    "text": "flowing through solution X data is flowing into an out of solution axis and",
    "start": "4744030",
    "end": "4749699"
  },
  {
    "text": "you can see as I first started out in this architecture diagram we're basically building in this continuous",
    "start": "4749699",
    "end": "4755460"
  },
  {
    "text": "pipeline and before I do on the next step I just want to verify is data flowing to it so there's a great script",
    "start": "4755460",
    "end": "4763619"
  },
  {
    "text": "sort of short Python script I'll show it to you real quick there's a simple Python script that we include in that",
    "start": "4763619",
    "end": "4770250"
  },
  {
    "text": "blog post to get data in that generates some random data the random data",
    "start": "4770250",
    "end": "4775590"
  },
  {
    "text": "includes a device value which is SBS 0 1 and then a random number associated with",
    "start": "4775590",
    "end": "4782309"
  },
  {
    "text": "it a device parameter so they may have flow temperature humidity",
    "start": "4782309",
    "end": "4788719"
  },
  {
    "text": "a set of device names and then the client timestamp so I'll kill this real",
    "start": "4789210",
    "end": "4796080"
  },
  {
    "text": "quick so I'm opening up my command prompt and I'm just gonna run this",
    "start": "4796080",
    "end": "4802890"
  },
  {
    "text": "script and what this script will do is it allows me to just continuously",
    "start": "4802890",
    "end": "4807930"
  },
  {
    "text": "generate data for my desktop and you can see the the print right here contains generate from my desktop into the AWS",
    "start": "4807930",
    "end": "4815190"
  },
  {
    "text": "iot service and with the rule i just set up for it to Acacia Strain so i visually",
    "start": "4815190",
    "end": "4821100"
  },
  {
    "text": "see the data is being sent I want to see the next steps so how do I do that with",
    "start": "4821100",
    "end": "4827210"
  },
  {
    "text": "cloud watch metrics so you navigate the",
    "start": "4827210",
    "end": "4834420"
  },
  {
    "text": "cloud watch here before I do that make sure I saved my dashboard navigate to",
    "start": "4834420",
    "end": "4844950"
  },
  {
    "text": "cloud watch here go to metrics and add that as part of a blog post they have you name most of the stuff I ot so you",
    "start": "4844950",
    "end": "4851880"
  },
  {
    "text": "can put some search metrics and then just search for IOT you can see IMT metrics IOT real metrics so click on IOT",
    "start": "4851880",
    "end": "4858989"
  },
  {
    "text": "metrics rule is executed and then you want to pay attention to what statistic",
    "start": "4858989",
    "end": "4864540"
  },
  {
    "text": "you're using so this is average we want to use some for most of the stuff that we're doing and you see this rule is",
    "start": "4864540",
    "end": "4870840"
  },
  {
    "text": "being continuously executed well I've been running this for a couple hours the script you can see I actually turned it",
    "start": "4870840",
    "end": "4877560"
  },
  {
    "text": "off so it went down a little bit so David is certainly hitting the AWS IOT service so great news the first step I",
    "start": "4877560",
    "end": "4886560"
  },
  {
    "text": "was successful in the next thing I were going to tech is like is the rule working is it actually forwarding it dated to my Kinesis firehose so I'm",
    "start": "4886560",
    "end": "4893070"
  },
  {
    "text": "gonna go back and I have a some other",
    "start": "4893070",
    "end": "4899460"
  },
  {
    "text": "pass work that I have for related IOT things but the firearms that I choose to 42 is the IOT source stream so you just",
    "start": "4899460",
    "end": "4907530"
  },
  {
    "text": "click on incoming records and you see it",
    "start": "4907530",
    "end": "4913800"
  },
  {
    "text": "matches very closely to the rural executions so fantastic",
    "start": "4913800",
    "end": "4919610"
  },
  {
    "text": "then I'm going to show you another trick that not a lot of customers know about at AWS I wish more is the cloud watch",
    "start": "4921290",
    "end": "4927680"
  },
  {
    "text": "team continues to iterate very quickly on this feature and it's really really nice for real-time dashboards when you",
    "start": "4927680",
    "end": "4933440"
  },
  {
    "text": "get a graph setup you can name the graph and then add it to a dashboard I have a",
    "start": "4933440",
    "end": "4943460"
  },
  {
    "text": "bunch of dashboards that I have related to other test applications once you provide a name you can choose a line",
    "start": "4943460",
    "end": "4949610"
  },
  {
    "text": "graph to click Add to dashboard I've started to build a dashboard already for this and you can see the first graph",
    "start": "4949610",
    "end": "4956900"
  },
  {
    "text": "that I just showed you do by doing the sine of T publishing data and firehose",
    "start": "4956900",
    "end": "4962270"
  },
  {
    "text": "incoming records so the data is being sent to fire and I get a great visual",
    "start": "4962270",
    "end": "4967850"
  },
  {
    "text": "view that hey my aspirin and I'm successfully ingesting getting into my Kinesis firehose so let's talk about",
    "start": "4967850",
    "end": "4974930"
  },
  {
    "text": "Kinesis Pyro's a little bit why we chose it to fire to start out with so I",
    "start": "4974930",
    "end": "4981440"
  },
  {
    "text": "mentioned the three services in the beginning KC streams can use as far as a thesis analytics firehose is one of the",
    "start": "4981440",
    "end": "4987830"
  },
  {
    "text": "simplest services to use of the three so I definitely if you haven't touched streams or firing legs before I",
    "start": "4987830",
    "end": "4993680"
  },
  {
    "text": "definitely recommend you start there so just getting the IOT data into other AWS services it's a really great solution",
    "start": "4993680",
    "end": "4999830"
  },
  {
    "text": "streams is also pretty simple so you can definitely form you set up your world afford to extreme but I'm gonna show",
    "start": "4999830",
    "end": "5007120"
  },
  {
    "text": "firehose for today so we're to go to the firehose console so what's Brian what's",
    "start": "5007120",
    "end": "5015250"
  },
  {
    "text": "the big difference between the two I always get a little even though I love lengthy service I always get stuck about",
    "start": "5015250",
    "end": "5020770"
  },
  {
    "text": "which one do I choose and for water that's a great question so fire hose",
    "start": "5020770",
    "end": "5027700"
  },
  {
    "text": "serves a very broad and simple use case and it serves it very very well and that",
    "start": "5027700",
    "end": "5034960"
  },
  {
    "text": "is how do i ingest a large volume of small records and get them into my",
    "start": "5034960",
    "end": "5040060"
  },
  {
    "text": "downstream analytic services quickly with very little operations and very",
    "start": "5040060",
    "end": "5045220"
  },
  {
    "text": "very cheaply so you're getting a large volume of events you need to get them",
    "start": "5045220",
    "end": "5050630"
  },
  {
    "text": "s3 and when you write dated an s3 eight or redshift or elasticsearch and the",
    "start": "5050630",
    "end": "5055790"
  },
  {
    "text": "destination of the firehose supports you want to load that data in a specific way as an example the script that we have",
    "start": "5055790",
    "end": "5063710"
  },
  {
    "text": "running right now generates something like you know ten twenty events a second",
    "start": "5063710",
    "end": "5068960"
  },
  {
    "text": "when you upload data to s3 you don't want that data in separate vitals with",
    "start": "5068960",
    "end": "5074990"
  },
  {
    "text": "very very small events in it you want a nice large chunks that are easy to deal with it so you want to buffer the",
    "start": "5074990",
    "end": "5080840"
  },
  {
    "text": "records first and then possibly transform them before delivering a destory firehose provides that",
    "start": "5080840",
    "end": "5087050"
  },
  {
    "text": "functionality firehose also allows you to compress the data before you write it to your destination and quick the data",
    "start": "5087050",
    "end": "5092480"
  },
  {
    "text": "before you ready to do destination and even before an inline transforms before you set it up to a destination may think",
    "start": "5092480",
    "end": "5098210"
  },
  {
    "text": "most an entire end n scenario without worrying about anything else so it's a great choice if you're getting data from",
    "start": "5098210",
    "end": "5104330"
  },
  {
    "text": "point A to point B and you need to do it at scale continuously with very very",
    "start": "5104330",
    "end": "5109670"
  },
  {
    "text": "little setup Kinesis streams provides a lot more flexibility what do I mean by",
    "start": "5109670",
    "end": "5114890"
  },
  {
    "text": "flexibility so similar to firehose it'll ingest a high volume stream of data but this time we're two fire hose",
    "start": "5114890",
    "end": "5121730"
  },
  {
    "text": "it provides a lot of different options to consume and process the data in real time so instead of just delivering the",
    "start": "5121730",
    "end": "5128510"
  },
  {
    "text": "data you can run a lot of the open source packages that we provide as Amazon Web Services things like the",
    "start": "5128510",
    "end": "5133610"
  },
  {
    "text": "cases client library you can use a lot of either of us services to consume data off of the stream like AWS lambda",
    "start": "5133610",
    "end": "5140210"
  },
  {
    "text": "Kinesis analytics you know a spark streaming cluster on Amazon EMR and a",
    "start": "5140210",
    "end": "5145550"
  },
  {
    "text": "lot of even more options so it gives you that flexibility now with that flexibility there's a little bit of",
    "start": "5145550",
    "end": "5151100"
  },
  {
    "text": "added complexity so where as five over there fire hose completely auto skills for you konista streams you provision a",
    "start": "5151100",
    "end": "5157310"
  },
  {
    "text": "stream with a certain number of shards or partitions which gives you a certain amount of throughput for the purposes of",
    "start": "5157310",
    "end": "5163640"
  },
  {
    "text": "the IOT hat challenge if you just create like a five shard or a ten shark and ease the strain you'll have so much",
    "start": "5163640",
    "end": "5169430"
  },
  {
    "text": "available throughput it you won't have to worry about spilling the stream up and down but when you stop are burning",
    "start": "5169430",
    "end": "5175850"
  },
  {
    "text": "the scale that's something in addition we have to worry about it so where you get increased flexibility there's a little bit added complexity but there is",
    "start": "5175850",
    "end": "5182300"
  },
  {
    "text": "a flexibility definitely allows you to do a lot more things it gives you more choices to process the data in real time",
    "start": "5182300",
    "end": "5188989"
  },
  {
    "text": "so I'm going to click create a blue string you can see how a huge fan of the service in one reason I have a couple of",
    "start": "5190190",
    "end": "5196530"
  },
  {
    "text": "them so the blog post has you create three different streams so a source",
    "start": "5196530",
    "end": "5202230"
  },
  {
    "text": "screen this is the screen that will ingest data from the IOT service in and then to services that we'll use for",
    "start": "5202230",
    "end": "5208920"
  },
  {
    "text": "processed data after we processed data from the fire rose I'm gonna go through what it's like to create just one string",
    "start": "5208920",
    "end": "5215010"
  },
  {
    "text": "to show you to demonstrate that and",
    "start": "5215010",
    "end": "5226620"
  },
  {
    "text": "here's a great sort of graphic to show what fire hose does it ingests a large",
    "start": "5226620",
    "end": "5232020"
  },
  {
    "text": "volume of source data it buffers that data gives you an opportunity to transform those records and then sends",
    "start": "5232020",
    "end": "5238590"
  },
  {
    "text": "them to the destination your destination of choice you've got two options to get",
    "start": "5238590",
    "end": "5244469"
  },
  {
    "text": "data into Kinesis firehose you can directly write to it which is what we're gonna do here basically were going to",
    "start": "5244469",
    "end": "5252120"
  },
  {
    "text": "forward the data from a diverse IOT to a casus fire hose or you can just attach a",
    "start": "5252120",
    "end": "5257219"
  },
  {
    "text": "fire hose through a Canisius stream so this is what I talked about the flexibility of Kinesis streams case the",
    "start": "5257219",
    "end": "5263219"
  },
  {
    "text": "streams allows you to do on one stream attach an ad with this lambda function attach a fire hose delivery stream that",
    "start": "5263219",
    "end": "5269280"
  },
  {
    "text": "will just archive the data to your destination and attach that can use to say analytics application and so on and",
    "start": "5269280",
    "end": "5274679"
  },
  {
    "text": "so forth it gives you that flexibility with fire hose you have some options but you don't have as many options pay",
    "start": "5274679",
    "end": "5282690"
  },
  {
    "text": "attention to this bottom part of the screen when you created for a Spyros because it it provides very broadly fire",
    "start": "5282690",
    "end": "5288390"
  },
  {
    "text": "hose and Kinesis in general provide a lot of options that get data into the stream you see here is the example that",
    "start": "5288390",
    "end": "5295560"
  },
  {
    "text": "we're showing right now but we have a bunch of agents as well as you can use the Amazon SDKs you can forward gate it",
    "start": "5295560",
    "end": "5302850"
  },
  {
    "text": "directly from cloud watch there's a lot of good options for getting data into the delivery string so I chose the",
    "start": "5302850",
    "end": "5310560"
  },
  {
    "text": "direct foot because we're forwarding from iOS T this step we're gonna skip",
    "start": "5310560",
    "end": "5315870"
  },
  {
    "text": "is a very valuable step so if you want to transform the data prior to",
    "start": "5315870",
    "end": "5323790"
  },
  {
    "text": "delivering it to the destination you see step to transform records you can configure an AWS lambda function to",
    "start": "5323790",
    "end": "5330510"
  },
  {
    "text": "do so aw slamming is a service compute option what it means to use native is land in",
    "start": "5330510",
    "end": "5337500"
  },
  {
    "text": "the context of cases firehose is once data is sent from AWS IOT or from",
    "start": "5337500",
    "end": "5343050"
  },
  {
    "text": "whatever data producer you want to a Kinesis strip amount of firehose delivery stream you have the opportunity",
    "start": "5343050",
    "end": "5349170"
  },
  {
    "text": "to transform records using a to resist lambda so if you want to do any enrichment you want to clean up your",
    "start": "5349170",
    "end": "5354360"
  },
  {
    "text": "records that everything it's great for that so I get confused a lot Ryan",
    "start": "5354360",
    "end": "5359520"
  },
  {
    "text": "between miles per hour and kilometers and feet and inches and all the rest could I do that conversion here could I",
    "start": "5359520",
    "end": "5366420"
  },
  {
    "text": "do that before we write it away using this transformer absolutely the most common things that customer do is when",
    "start": "5366420",
    "end": "5374070"
  },
  {
    "text": "for this functionality is to do format translation and then to do field level transformations what I mean format",
    "start": "5374070",
    "end": "5380730"
  },
  {
    "text": "translations I mean like going from JSON to protobuf or Avro to CSV records so",
    "start": "5380730",
    "end": "5388650"
  },
  {
    "text": "different just for simple format translations we're paddling logs to JSON",
    "start": "5388650",
    "end": "5394020"
  },
  {
    "text": "des and that type of thing and then secondly to do like for a particular column to like you might have a UNIX",
    "start": "5394020",
    "end": "5399750"
  },
  {
    "text": "timestamp you want to change it into a sequel timestamp or you might have a mile per hour you want to convert",
    "start": "5399750",
    "end": "5404910"
  },
  {
    "text": "kilometres per hour this type of simple computation is great for these inline transformations so I could almost use it",
    "start": "5404910",
    "end": "5411390"
  },
  {
    "text": "like a basic ETL yes exactly right oh you see what thank you cool so here are your options for",
    "start": "5411390",
    "end": "5422400"
  },
  {
    "text": "delivering data to various destinations s3 redshift or elasticsearch for this",
    "start": "5422400",
    "end": "5429630"
  },
  {
    "text": "challenge I like you can send it an s3 and pull data from s3 that's a great option I'd recommend that another great",
    "start": "5429630",
    "end": "5437850"
  },
  {
    "text": "option is to send it to the Amazon Elastic search service if you're familiar with that you can get very rich dashboards and real-time search",
    "start": "5437850",
    "end": "5444690"
  },
  {
    "text": "capabilities with that service and the fact I fire Tango's the hole injection pad for you will make the majority of your",
    "start": "5444690",
    "end": "5450659"
  },
  {
    "text": "development effort spent on getting those cool analytics set up I'm going to",
    "start": "5450659",
    "end": "5456209"
  },
  {
    "text": "choose s3 because we're actually going to use Kinesis analytics in this flow so I'm not going to use the molasses route",
    "start": "5456209",
    "end": "5462449"
  },
  {
    "text": "service you'll choose an s3 bucket I'm going to just choose a random one of my",
    "start": "5462449",
    "end": "5468840"
  },
  {
    "text": "existing buckets that sounds good no",
    "start": "5468840",
    "end": "5474150"
  },
  {
    "text": "prefix when I click Next so he was an",
    "start": "5474150",
    "end": "5480929"
  },
  {
    "text": "important why are you doing testing there's a set of configurations that you have under delivery so we have a",
    "start": "5480929",
    "end": "5487439"
  },
  {
    "text": "high-volume unit of events and one of the primary value props of Kinesis firehose is to basically aggregate that",
    "start": "5487439",
    "end": "5494369"
  },
  {
    "text": "data before sending it to it into like larger files what parameters do we want",
    "start": "5494369",
    "end": "5500070"
  },
  {
    "text": "to send to them there are these things called buffering camps that we provide and it basically says you have to",
    "start": "5500070",
    "end": "5505949"
  },
  {
    "text": "provide a certain size and a certain time interval and fire hose will wait to",
    "start": "5505949",
    "end": "5512699"
  },
  {
    "text": "basically the minimum of either one of those to deliver data to your destination so you can choose extremely",
    "start": "5512699",
    "end": "5518219"
  },
  {
    "text": "large files and like five minutes six",
    "start": "5518219",
    "end": "5523709"
  },
  {
    "text": "minutes ten minutes that type of thing or you can choose very small files while",
    "start": "5523709",
    "end": "5529650"
  },
  {
    "text": "I'm doing my development I always choose the minimum options because I want data to show up as quickly as possible to the",
    "start": "5529650",
    "end": "5536130"
  },
  {
    "text": "s3 bucket there are some I mentioned you can do compression in line so there's a",
    "start": "5536130",
    "end": "5541920"
  },
  {
    "text": "couple of options there you can encrypt data with a your key or a key supplied",
    "start": "5541920",
    "end": "5547920"
  },
  {
    "text": "by the key management service and you can do error logging you want to leave",
    "start": "5547920",
    "end": "5553679"
  },
  {
    "text": "this on the reason being is because if there's any issues with delivering data to say your as three bucket or anything",
    "start": "5553679",
    "end": "5559650"
  },
  {
    "text": "like that any I get any access management issues will log in the cloud watch logs and they'll give you this",
    "start": "5559650",
    "end": "5565350"
  },
  {
    "text": "those issues you can create and I am",
    "start": "5565350",
    "end": "5570420"
  },
  {
    "text": "role here this is a one-click set up so we'll go through it it creates the role",
    "start": "5570420",
    "end": "5576120"
  },
  {
    "text": "with the necessary permissions based off of your configurations just click allow",
    "start": "5576120",
    "end": "5581400"
  },
  {
    "text": "click Next and then you'll review",
    "start": "5581400",
    "end": "5586530"
  },
  {
    "text": "everything you have associated with it so I'm not going to create it I've already created a fiery stream it takes about 30 seconds to create once you have",
    "start": "5586530",
    "end": "5595740"
  },
  {
    "text": "the fire hose delivery stream set up and your role set your IOT role set up to four data to the Kinesis fire hose and",
    "start": "5595740",
    "end": "5601800"
  },
  {
    "text": "i'm gonna go back to the high level diagram here once you have this set up again I'm going to go back to cloud",
    "start": "5601800",
    "end": "5608820"
  },
  {
    "text": "watch who's not want to make sure it's working correctly so you'll go back to cloud much metrics again I have the",
    "start": "5608820",
    "end": "5620460"
  },
  {
    "text": "search criteria set up for IOT I have my source stream that I just collect",
    "start": "5620460",
    "end": "5626820"
  },
  {
    "text": "created I'm going to click on that and you'll see the records start flowing in you want to refresh it and you'll see",
    "start": "5626820",
    "end": "5632910"
  },
  {
    "text": "and then you'll add it to that dashboard and you'll get is click on my dashboard",
    "start": "5632910",
    "end": "5639650"
  },
  {
    "text": "when you'll give us a graph like this it's like okay I'm successfully ingesting a denial tea service and the",
    "start": "5639650",
    "end": "5645900"
  },
  {
    "text": "IOT service is successfully forwarding it to firearms so the only other thing",
    "start": "5645900",
    "end": "5651030"
  },
  {
    "text": "you might want to check is to make sure that fire hose is correctly delivering it in s3 there's another dimension for",
    "start": "5651030",
    "end": "5656220"
  },
  {
    "text": "that and it's basically delivery success",
    "start": "5656220",
    "end": "5661790"
  },
  {
    "text": "before we can choose records and you'll see they're all about the same so my entire end end flow is created I highly",
    "start": "5667690",
    "end": "5676490"
  },
  {
    "text": "recommend you guys start here for the ingestion piece because it's super simple to setup and you can get something working quickly go back to my",
    "start": "5676490",
    "end": "5684800"
  },
  {
    "text": "dashboard so the next thing I'm going to do is I'm going to set up a Kinesis analytics application right so what",
    "start": "5684800",
    "end": "5692930"
  },
  {
    "text": "again what casus analytics allows you to do is read data from a fire hose or a Kinesis stream and then process that",
    "start": "5692930",
    "end": "5699650"
  },
  {
    "text": "data in real time so you can react to the data in real time which is quite cool so I'm going to go to the Kinesis",
    "start": "5699650",
    "end": "5707330"
  },
  {
    "text": "in the console go to Kinesis analytics I'm gonna click create application",
    "start": "5707330",
    "end": "5716140"
  },
  {
    "text": "so here you see the three parts of what we'll do in the application so we're",
    "start": "5723419",
    "end": "5728530"
  },
  {
    "text": "going to connect to a source configure our real time analytics and then send",
    "start": "5728530",
    "end": "5733869"
  },
  {
    "text": "data to a destination so the first step I'm going to connect to a source and all",
    "start": "5733869",
    "end": "5740169"
  },
  {
    "text": "of the Canisius streams and fires delivery streams are event made available to me so I can select them and",
    "start": "5740169",
    "end": "5747280"
  },
  {
    "text": "get it set up so I'm going to click on my IOT source stream that's the stream I",
    "start": "5747280",
    "end": "5754449"
  },
  {
    "text": "created to ingest data from IOT from the IOT service here's an important point so",
    "start": "5754449",
    "end": "5763510"
  },
  {
    "text": "you in this sequel you refer to the stream basically a source sequel stream and then the I am role associated with",
    "start": "5763510",
    "end": "5769689"
  },
  {
    "text": "that I am role associated with that is created automatically so there's an",
    "start": "5769689",
    "end": "5776409"
  },
  {
    "text": "error here so what's sexy just hit refresh and it'll get one more time so",
    "start": "5776409",
    "end": "5789969"
  },
  {
    "text": "it tells you schema discovery successful so there's an important point here so",
    "start": "5789969",
    "end": "5795479"
  },
  {
    "text": "Amazon case analytics will discover a schema for you sort of automatically and",
    "start": "5795479",
    "end": "5801039"
  },
  {
    "text": "it works for most JSON and CSV data if your record starts to get more complex",
    "start": "5801039",
    "end": "5806199"
  },
  {
    "text": "you might have to edit it by hand so what I mean by edit by hand is you can click Edit schema and from there you",
    "start": "5806199",
    "end": "5816459"
  },
  {
    "text": "can specify basically build your schema by hand for specific elements you may",
    "start": "5816459",
    "end": "5822429"
  },
  {
    "text": "want to do this or modify it as needed if you like I said if your JSON",
    "start": "5822429",
    "end": "5828760"
  },
  {
    "text": "structure is quite complex but for the most part we'll do it automatically for you the the row path here is basically just",
    "start": "5828760",
    "end": "5834550"
  },
  {
    "text": "pointing to specific elements and what we're doing is flattening higher-up core bottom so flagging a JSON document it",
    "start": "5834550",
    "end": "5840729"
  },
  {
    "text": "uses something called JSON path which basically allows you to index into a JSON document and then you specify like",
    "start": "5840729",
    "end": "5848679"
  },
  {
    "text": "the sequel column types",
    "start": "5848679",
    "end": "5851729"
  },
  {
    "text": "so once you have this set up the next step you'll do is you'll click Save and continue to continue processing the",
    "start": "5856480",
    "end": "5863270"
  },
  {
    "text": "application you can see that the data that we're generating I'll go to my script real quick data that we're",
    "start": "5863270",
    "end": "5869630"
  },
  {
    "text": "generating here is being sent to the Kinesis service and we're applying a",
    "start": "5869630",
    "end": "5875960"
  },
  {
    "text": "tight structure to it so we can write sequel code on it",
    "start": "5875960",
    "end": "5880540"
  },
  {
    "text": "so I mentioned you click Save and continue here I'm actually going to click cancel and move away from it I",
    "start": "5881260",
    "end": "5886280"
  },
  {
    "text": "actually already have an application that's set up processing data and I really just want to show you some of the",
    "start": "5886280",
    "end": "5891650"
  },
  {
    "text": "sequel code so as you walk through that",
    "start": "5891650",
    "end": "5904250"
  },
  {
    "text": "blog post you'll see sort of an end in an application reading from an IMT source screen sending it to an IMT",
    "start": "5904250",
    "end": "5910430"
  },
  {
    "text": "destination there's you the setting up",
    "start": "5910430",
    "end": "5916310"
  },
  {
    "text": "the destination there's in the blog which covers how to use it via the CLI which is great so I'll show you a little",
    "start": "5916310",
    "end": "5922460"
  },
  {
    "text": "bit of that after the sequel code but let's just go to the sequel code so this",
    "start": "5922460",
    "end": "5927469"
  },
  {
    "text": "is the interface for Canisius analytics",
    "start": "5927469",
    "end": "5931570"
  },
  {
    "text": "the the there's a couple steps in here but that's basically the top of the what",
    "start": "5932530",
    "end": "5939199"
  },
  {
    "text": "we have here is not zoomed in hopefully we can see that actually a little bit more the top of the browser shows",
    "start": "5939199",
    "end": "5948170"
  },
  {
    "text": "basically a text editor all right with sequel code it is your sequel based",
    "start": "5948170",
    "end": "5953210"
  },
  {
    "text": "editor that you'll use to iterate on your applications the bottom of the screen shows data flowing through your",
    "start": "5953210",
    "end": "5960350"
  },
  {
    "text": "application so there's a number of templates you can have to get started",
    "start": "5960350",
    "end": "5966760"
  },
  {
    "text": "alright so aggregating during a tumbling time window a sliding time window",
    "start": "5966760",
    "end": "5971810"
  },
  {
    "text": "applying a continuous filter I'll walk through sort of what the code in the in the blog post does first but there's",
    "start": "5971810",
    "end": "5979130"
  },
  {
    "text": "some other ideas you can have here and we have a sequel reference guide that you can pull additional examples for so",
    "start": "5979130",
    "end": "5985960"
  },
  {
    "text": "for the most part this is standard sequel there are some extensions that we have so we read data from an application",
    "start": "5985960",
    "end": "5992930"
  },
  {
    "text": "and we insert into what we call an in application stream you can think of this as sort of like an in-memory object so",
    "start": "5992930",
    "end": "5999830"
  },
  {
    "text": "we're taking the data from the source firehose delivery stream and then we're formatting it and it ends up as our",
    "start": "5999830",
    "end": "6006700"
  },
  {
    "text": "first stream which is our source sequel stream and you can see it here and I'm going to have to zoom out a little bit",
    "start": "6006700",
    "end": "6012490"
  },
  {
    "text": "to show some of the columns you can you can just see it here and you can see the four columns that we have right here the",
    "start": "6012490",
    "end": "6019330"
  },
  {
    "text": "device value device ID date time stamp and device parameter we also add some additional columns this row time is the",
    "start": "6019330",
    "end": "6026140"
  },
  {
    "text": "time we ingested into the application so it's basically there's some underlying nodes that are processing your data we",
    "start": "6026140",
    "end": "6031930"
  },
  {
    "text": "append a timestamp to them as data flows in there's an approximate arrival",
    "start": "6031930",
    "end": "6037240"
  },
  {
    "text": "timestamp here this is when for the finest delivery stream received the data and you can see it's very the we're",
    "start": "6037240",
    "end": "6045100"
  },
  {
    "text": "processing data in real time so it happens very very fast here so less than a second after the data was ingested",
    "start": "6045100",
    "end": "6050380"
  },
  {
    "text": "from firehose it was read into the Kinesis analytics application when you",
    "start": "6050380",
    "end": "6056890"
  },
  {
    "text": "write your sequel code you do so into basically two steps so you've created a stream to send process results and then",
    "start": "6056890",
    "end": "6064750"
  },
  {
    "text": "you create a pump where the majority of your sequel statement lives so this first stream I have is just a",
    "start": "6064750",
    "end": "6071680"
  },
  {
    "text": "simple pass through so I'm creating a stream with the times that caught the",
    "start": "6071680",
    "end": "6078460"
  },
  {
    "text": "columns that I care about right and then I'm selecting from that stream the",
    "start": "6078460",
    "end": "6085540"
  },
  {
    "text": "source single stream and I'm inserting it into that destination basic single stream and it's just a simple pass",
    "start": "6085540",
    "end": "6092590"
  },
  {
    "text": "through and from here you can do things like we're device parameter is equal to",
    "start": "6092590",
    "end": "6106710"
  },
  {
    "text": "say some filters so we can choose say sound",
    "start": "6106710",
    "end": "6111630"
  },
  {
    "text": "so I'm going to run this but right now I just have the basic scheme which is just passing data through alright so that's",
    "start": "6116159",
    "end": "6123280"
  },
  {
    "text": "the point so you create a pump it writes data continuously reads data and then insert something to this target stream",
    "start": "6123280",
    "end": "6128710"
  },
  {
    "text": "that you've created before I say that",
    "start": "6128710",
    "end": "6135070"
  },
  {
    "text": "I'm not sure of the second thing so the second thing I have is a completely sort of independent step so the thing is your",
    "start": "6135070",
    "end": "6142179"
  },
  {
    "text": "sequel queries in your steps they can be run in parallel or in serial so for example I could read from that back",
    "start": "6142179",
    "end": "6149949"
  },
  {
    "text": "stream the stream that I just created that destination sequel basic stream or I could read from the source string",
    "start": "6149949",
    "end": "6157420"
  },
  {
    "text": "which is what I'm doing here just click there so it's a little bit easier to read zoom in here so I so here I have a",
    "start": "6157420",
    "end": "6173320"
  },
  {
    "text": "couple of statements right here so I have the stream that I created right this basically defines the called the",
    "start": "6173320",
    "end": "6181330"
  },
  {
    "text": "target columns the date time stamp the highest temperatures fall into the lowest temperature and then I have some",
    "start": "6181330",
    "end": "6187900"
  },
  {
    "text": "calculations all right so the first is the day time basically I'm taking a",
    "start": "6187900",
    "end": "6193360"
  },
  {
    "text": "floor of it so of aggregating a minute intervals the maximum of the device",
    "start": "6193360",
    "end": "6198400"
  },
  {
    "text": "value as the highest temp and the minimum of the device value is the lowest temp and then I'm filtering for",
    "start": "6198400",
    "end": "6206760"
  },
  {
    "text": "the temperatures here and I'm grouping by a tumbling time window so this is one",
    "start": "6206760",
    "end": "6215469"
  },
  {
    "text": "way to write a tumbling time window another one is this",
    "start": "6215469",
    "end": "6219719"
  },
  {
    "text": "another is a step function alright there's multiple ways to write it but what this basically does and I'll write",
    "start": "6222730",
    "end": "6228550"
  },
  {
    "text": "it updated real quick but one of the things that this does is it basically says over a minute long interval",
    "start": "6228550",
    "end": "6233980"
  },
  {
    "text": "aggregate all events and they give me the max value of the height of the",
    "start": "6233980",
    "end": "6239260"
  },
  {
    "text": "temperature and the min value of the temperature let's look at what that is",
    "start": "6239260",
    "end": "6246850"
  },
  {
    "text": "doing",
    "start": "6246850",
    "end": "6249120"
  },
  {
    "text": "so because I have a minute aggregation is going to take a little bit to pull data from it because data is being",
    "start": "6255920",
    "end": "6262020"
  },
  {
    "text": "outputted every minute again this is the same thing with the firehose configuration you want it while",
    "start": "6262020",
    "end": "6267360"
  },
  {
    "text": "you're doing your development you want to change these values to as little as possible so I'm gonna actually - let's",
    "start": "6267360",
    "end": "6273840"
  },
  {
    "text": "save something showed up so yeah so we got one value with the highest and lowest temperature and that associated",
    "start": "6273840",
    "end": "6279570"
  },
  {
    "text": "daytime I'm gonna do the same thing I'm going to use a little slightly simpler syntax that makes it a little bit easier",
    "start": "6279570",
    "end": "6285360"
  },
  {
    "text": "to use because not all you might be familiar with the store floor so we also",
    "start": "6285360",
    "end": "6290610"
  },
  {
    "text": "have this step function that basically if you can think about a tumbling window it steps you through the stream so you",
    "start": "6290610",
    "end": "6298020"
  },
  {
    "text": "can activate it on like 10-second intervals or one-minute intervals but at the end of that time interval we compute",
    "start": "6298020",
    "end": "6304350"
  },
  {
    "text": "the analytic and give it to you so I'm gonna choose",
    "start": "6304350",
    "end": "6309740"
  },
  {
    "text": "I'm going to do the same thing up here",
    "start": "6335059",
    "end": "6338949"
  },
  {
    "text": "and I might actually remove this guy and then I'll update my application so I",
    "start": "6340090",
    "end": "6349070"
  },
  {
    "text": "think I intentionally added an error just so I can show you guys the error folks down maybe I did get it right the",
    "start": "6349070",
    "end": "6354139"
  },
  {
    "text": "first time yeah so while you're entering applications will produce error codes",
    "start": "6354139",
    "end": "6359179"
  },
  {
    "text": "but there's a little bit of a lag here on the video machine so I'll wait",
    "start": "6359179",
    "end": "6364570"
  },
  {
    "text": "so the error comes to introduced basically show you what was the sequel",
    "start": "6364570",
    "end": "6370130"
  },
  {
    "text": "statement that caused the error all right and what was the error so unsigned",
    "start": "6370130",
    "end": "6376039"
  },
  {
    "text": "integer literal ten column so you should use a quoted string so here we're gonna",
    "start": "6376039",
    "end": "6385280"
  },
  {
    "text": "go ahead and add that",
    "start": "6385280",
    "end": "6387820"
  },
  {
    "text": "so my application was correctly updated",
    "start": "6397239",
    "end": "6402570"
  },
  {
    "text": "so once the application gets updated what we'll see is instead of one minute intervals of analytics we'll see every",
    "start": "6402570",
    "end": "6409360"
  },
  {
    "text": "10 seconds so okay I'm all you're doing a development I definitely encourage",
    "start": "6409360",
    "end": "6414390"
  },
  {
    "text": "basically making the interval a lot less so like every 10 seconds as opposed to every minute or every 5 minutes or 10",
    "start": "6414390",
    "end": "6421090"
  },
  {
    "text": "minutes when you go to publish your application I might change it to a higher interval and while our",
    "start": "6421090",
    "end": "6426520"
  },
  {
    "text": "application is updating I'm going to show go back to my dashboard I have to zoom out a second the next thing you",
    "start": "6426520",
    "end": "6436210"
  },
  {
    "text": "want to set up is show sort of on your dashboard is the Kinesis analytics",
    "start": "6436210",
    "end": "6441820"
  },
  {
    "text": "applications the blog post has you go through adding a destination that's quite simple I'll walk through it in a",
    "start": "6441820",
    "end": "6448239"
  },
  {
    "text": "second but what you want to look for and your metrics for your dashboard is IOT",
    "start": "6448239",
    "end": "6455280"
  },
  {
    "text": "and then you'll go to Kinesis analytics applications flow and ID and you want to",
    "start": "6455280",
    "end": "6460960"
  },
  {
    "text": "choose the you want to choose basically",
    "start": "6460960",
    "end": "6466810"
  },
  {
    "text": "input records where input bytes the show that data is flowing in uncheck some of",
    "start": "6466810",
    "end": "6475540"
  },
  {
    "text": "these here and then you want to when you set up the output you want to show the",
    "start": "6475540",
    "end": "6482440"
  },
  {
    "text": "output so data is flowing out and again",
    "start": "6482440",
    "end": "6489700"
  },
  {
    "text": "like with almost all of the graphs that we have here you want to make sure it's some so both of them are set to some",
    "start": "6489700",
    "end": "6497890"
  },
  {
    "text": "great and I like to usually set it to one minute so why is looks like IIM",
    "start": "6497890",
    "end": "6507760"
  },
  {
    "text": "issue can give saying the data valid so I'll go through and fix that but what you will notice is as we're ingesting",
    "start": "6507760",
    "end": "6515170"
  },
  {
    "text": "data in every one minute all right you'll see the amount of data that we",
    "start": "6515170",
    "end": "6520420"
  },
  {
    "text": "send out is a lot less and what's the reason for that it's because obviously when we're aggregating things providing",
    "start": "6520420",
    "end": "6526870"
  },
  {
    "text": "mins and maxes over one minute we know the 60th data points that we are ingesting",
    "start": "6526870",
    "end": "6534670"
  },
  {
    "text": "will turn into one data input point that we're writing out so you sort of see the",
    "start": "6534670",
    "end": "6540040"
  },
  {
    "text": "value profit Kinesis analytics I mentioned in the earlier that you're trying to write data to a database or",
    "start": "6540040",
    "end": "6545140"
  },
  {
    "text": "anything like that it definitely decreases loads on the database as well",
    "start": "6545140",
    "end": "6550540"
  },
  {
    "text": "as if you're reacting to the data in real time so maybe you're updating a dashboard or anything like that you're",
    "start": "6550540",
    "end": "6556900"
  },
  {
    "text": "already sending that dashboard or destination processed data so it definitely ascended up attempting to do",
    "start": "6556900",
    "end": "6563080"
  },
  {
    "text": "the analytics after the data arrives you're able to do the analytics in real time and reduce all of the load on your",
    "start": "6563080",
    "end": "6568660"
  },
  {
    "text": "data stream system that's so cool and you do all that with no servers I agree",
    "start": "6568660",
    "end": "6578200"
  },
  {
    "text": "it is quite cool and what's great about this is that it allows you to push your analytics a lot further upstream so a",
    "start": "6578200",
    "end": "6585220"
  },
  {
    "text": "lot of the customers are used to nice analytics for the first time we're using cases the first time they're going from",
    "start": "6585220",
    "end": "6590590"
  },
  {
    "text": "getting dashboards that are updated maybe every hour maybe every day to",
    "start": "6590590",
    "end": "6595720"
  },
  {
    "text": "getting dashboards that are updated in real time which is definitely a high value problem and for IOT use cases",
    "start": "6595720",
    "end": "6600820"
  },
  {
    "text": "where it's so important for those devices to be connected all the time it's really why people so many IOT",
    "start": "6600820",
    "end": "6606520"
  },
  {
    "text": "customers use Amazon Kinesis an Amazon Kinesis analytics here's my updated",
    "start": "6606520",
    "end": "6613930"
  },
  {
    "text": "query you can see the highest temp and the lowest temp you can also see the output of the day timestamp is every 10",
    "start": "6613930",
    "end": "6621070"
  },
  {
    "text": "seconds right we do some sampling on the on the console as you can see so sometimes every once in a while we skip",
    "start": "6621070",
    "end": "6627100"
  },
  {
    "text": "one but largely they come in every 10 seconds and the data is sent downstream",
    "start": "6627100",
    "end": "6632170"
  },
  {
    "text": "if you have your everything set up correctly which I don't think I did so we're gonna go and fix that",
    "start": "6632170",
    "end": "6638110"
  },
  {
    "text": "and show you guys how to do that",
    "start": "6638110",
    "end": "6641400"
  },
  {
    "text": "so I already found the issue when you go",
    "start": "6645760",
    "end": "6651770"
  },
  {
    "text": "to this destination page you're going to choose either a fire hose or Kinesis string to deliver the process data form",
    "start": "6651770",
    "end": "6658390"
  },
  {
    "text": "you're then going to choose and in an application stream name and this is",
    "start": "6658390",
    "end": "6664190"
  },
  {
    "text": "remember I talked about the streams that you create that are sort of like in memory objects where you insert process",
    "start": "6664190",
    "end": "6669320"
  },
  {
    "text": "data the event going to choose an output format and I animal and then save so the",
    "start": "6669320",
    "end": "6677720"
  },
  {
    "text": "issue that I've identified immediately because I'm used to working with this service is this name is wrong this this",
    "start": "6677720",
    "end": "6684500"
  },
  {
    "text": "is the default name for the application stream name and we don't have any an application streams name destination",
    "start": "6684500",
    "end": "6689989"
  },
  {
    "text": "sequel stream I'm going to go back to the the application code you can see",
    "start": "6689989",
    "end": "6697850"
  },
  {
    "text": "these these streams that we created one of them is called destination sequel basic stream the other one is called",
    "start": "6697850",
    "end": "6703670"
  },
  {
    "text": "destination sequel aggregate stream so we're what I did when I first stepped that up earlier today is I basically set",
    "start": "6703670",
    "end": "6710840"
  },
  {
    "text": "up a destination to read for a non-existent stream does that was my next mistake I'm going to go ahead and",
    "start": "6710840",
    "end": "6716300"
  },
  {
    "text": "click Edit we're going to edit that go",
    "start": "6716300",
    "end": "6723050"
  },
  {
    "text": "ahead and copy and paste click check and then click Save and continue",
    "start": "6723050",
    "end": "6728590"
  },
  {
    "text": "and I'll let the application update so as I do that I should see in these",
    "start": "6728590",
    "end": "6738050"
  },
  {
    "text": "metrics this turned from zero to from",
    "start": "6738050",
    "end": "6743150"
  },
  {
    "text": "zero to either sixty or six so when I",
    "start": "6743150",
    "end": "6749090"
  },
  {
    "text": "say 60 the stream that I just pointed to is just a simple pass-through that's not",
    "start": "6749090",
    "end": "6754310"
  },
  {
    "text": "doing anything it's not building records so it should be about sixty records passing through similar to here if I",
    "start": "6754310",
    "end": "6759410"
  },
  {
    "text": "we're at a point of the aggregate stream that would see six the reason being is because I'm outputting the data every 10",
    "start": "6759410",
    "end": "6764989"
  },
  {
    "text": "seconds so there will be six data points every minute but this sort of illustrates why I use cloud watch these",
    "start": "6764989",
    "end": "6771590"
  },
  {
    "text": "dashboards as I go through with my development process because it helps identify issues",
    "start": "6771590",
    "end": "6777880"
  },
  {
    "text": "I'm gonna go back here I'm going to autograph the metrics and I'm going to make sure that I got the right metrics",
    "start": "6784900",
    "end": "6790030"
  },
  {
    "text": "selected for the Kinesis analytics application and what we'll see is cloud",
    "start": "6790030",
    "end": "6795969"
  },
  {
    "text": "watch takes about 30 seconds to a minute to propagate metrics so while that",
    "start": "6795969",
    "end": "6802560"
  },
  {
    "text": "populates output records there we go",
    "start": "6802560",
    "end": "6810120"
  },
  {
    "text": "it's quicker than I thought so you see",
    "start": "6810120",
    "end": "6815620"
  },
  {
    "text": "some the first minute data point that we have outputted is already showing up",
    "start": "6815620",
    "end": "6822040"
  },
  {
    "text": "let's see if it shows up on my dashboard yes it's actually zoom in I'm gonna talk",
    "start": "6822040",
    "end": "6832600"
  },
  {
    "text": "about one hour it looks like I have the wrong metric selected here so what's",
    "start": "6832600",
    "end": "6839140"
  },
  {
    "text": "great about these dashboards is you can edit them so let me just make sure I have removed this metric and add the",
    "start": "6839140",
    "end": "6847179"
  },
  {
    "text": "metric I was just looking at",
    "start": "6847179",
    "end": "6850290"
  },
  {
    "text": "great so 60 because just a simple pass through fantastic and my dashboard is",
    "start": "6859369",
    "end": "6867800"
  },
  {
    "text": "updated so the last thing I want to show",
    "start": "6867800",
    "end": "6877730"
  },
  {
    "text": "you is a way to sort of mock different data very quickly with Amazon Kinesis",
    "start": "6877730",
    "end": "6883909"
  },
  {
    "text": "and it's the Kinesis data generator so right now in the past I have this Python",
    "start": "6883909",
    "end": "6890179"
  },
  {
    "text": "script basically running continuously my browser this is one great way and you",
    "start": "6890179",
    "end": "6895670"
  },
  {
    "text": "can modify the Python script that's included in that blog post to sort of mat match the data format that you want",
    "start": "6895670",
    "end": "6901639"
  },
  {
    "text": "or you can use the solution that Mark showed earlier in the broadcast but",
    "start": "6901639",
    "end": "6906889"
  },
  {
    "text": "another great way to test quickly is this is the Kinesis data generator and",
    "start": "6906889",
    "end": "6912949"
  },
  {
    "text": "well that switches I'm going to provide the link sorry about the delay here guys",
    "start": "6912949",
    "end": "6923920"
  },
  {
    "text": "so the ears of the link to the github for the Kinesis data generator and when",
    "start": "6938810",
    "end": "6946700"
  },
  {
    "text": "you first visit the URL you can actually just go straight to the euro your what",
    "start": "6946700",
    "end": "6953690"
  },
  {
    "text": "you'll do is you'll go to help and you'll click on this and will give you a custom link for your own generator and",
    "start": "6953690",
    "end": "6960530"
  },
  {
    "text": "all this is a simple website driven off of Amazon s3 this again uses",
    "start": "6960530",
    "end": "6965840"
  },
  {
    "text": "CloudFormation which were huge fans of here and the what the data generator",
    "start": "6965840",
    "end": "6977870"
  },
  {
    "text": "allows you to do is allows you to pick a region so I was using US wheat west to which is Oregon and then pick a stream",
    "start": "6977870",
    "end": "6985300"
  },
  {
    "text": "so in this I'll pick the aggregate stream for this case if that allows you to test the different throughput so you",
    "start": "6985300",
    "end": "6991280"
  },
  {
    "text": "can do one or a thousand or two thousand I usually test with about like 100 or",
    "start": "6991280",
    "end": "6997250"
  },
  {
    "text": "200 which is why it's the sort of default and you can see there in these",
    "start": "6997250",
    "end": "7002290"
  },
  {
    "text": "templates that use basically a j/s Locker template rocker tool JavaScript",
    "start": "7002290",
    "end": "7008350"
  },
  {
    "text": "based JSON Locker tool that allows you to generate basically different interesting combinations here I've generated the exact same record but you",
    "start": "7008350",
    "end": "7016210"
  },
  {
    "text": "can see you can do like random array elements device values device IDs dates",
    "start": "7016210",
    "end": "7021580"
  },
  {
    "text": "that type of thing and then test the templates and the data looks exactly like what we had previously and then you",
    "start": "7021580",
    "end": "7028870"
  },
  {
    "text": "click send it into a Kinesis string and the data just gets generated it's a very helpful tool when you're working with",
    "start": "7028870",
    "end": "7035230"
  },
  {
    "text": "AWS lambda or Kinesis analytics the",
    "start": "7035230",
    "end": "7040450"
  },
  {
    "text": "final thing I'll show you is I'm going to point to and I'll link this as well",
    "start": "7040450",
    "end": "7046980"
  },
  {
    "text": "another great option to get data into the stream is just to build the data producer yourself so in our developer",
    "start": "7053130",
    "end": "7062080"
  },
  {
    "text": "guide there's a great section on under learning Amazon can see streams I",
    "start": "7062080",
    "end": "7068490"
  },
  {
    "text": "basically how do you implement a producer alright and you can go through",
    "start": "7068490",
    "end": "7073720"
  },
  {
    "text": "this and this does stock tickers and shows you a very simple of a piece of Java code on how to generate data very",
    "start": "7073720",
    "end": "7080350"
  },
  {
    "text": "easily and in a continuous manner the point I want to stress is whatever you",
    "start": "7080350",
    "end": "7085750"
  },
  {
    "text": "guys choose to do for your data producers and whether you're writing directly to Kinesis streams or AWS IMT",
    "start": "7085750",
    "end": "7091390"
  },
  {
    "text": "service you want to set up something that you can do so continuously so you can continuously step setup which is why",
    "start": "7091390",
    "end": "7096730"
  },
  {
    "text": "all the tools Marc and I showed today demonstrate that so with that we will",
    "start": "7096730",
    "end": "7104650"
  },
  {
    "text": "stay on I mean I'm done that's a we went through most of the blog post I have",
    "start": "7104650",
    "end": "7110230"
  },
  {
    "text": "data flowing through my IMT rule into my",
    "start": "7110230",
    "end": "7115720"
  },
  {
    "text": "fire hose I have processed data going in and out of my Kinesis on application so",
    "start": "7115720",
    "end": "7123100"
  },
  {
    "text": "I've stopped it here the next part of",
    "start": "7123100",
    "end": "7128230"
  },
  {
    "text": "the blog post is a set up quick site to visualize data off the esterday bucket but I want to pause before I do that I",
    "start": "7128230",
    "end": "7134830"
  },
  {
    "text": "sort of do a time check to make sure that we answer any questions about what Mark and I showed today so do you guys",
    "start": "7134830",
    "end": "7140710"
  },
  {
    "text": "have any questions on the blog list about where to get started I would approach to use man you covered a lot",
    "start": "7140710",
    "end": "7147760"
  },
  {
    "text": "Ryan my brains hurting and you're",
    "start": "7147760",
    "end": "7154270"
  },
  {
    "text": "thirsty does Kinesis integrate with DynamoDB so the it doesn't integrate directly but",
    "start": "7154270",
    "end": "7163239"
  },
  {
    "text": "that's a very good question Shah's 3 be as Tuscany's just integrate",
    "start": "7163239",
    "end": "7169120"
  },
  {
    "text": "directly without having to be very very good question no we don't the most common approaches",
    "start": "7169120",
    "end": "7176290"
  },
  {
    "text": "for you to integrate with dynamodb are first to use an AWS lambda function so",
    "start": "7176290",
    "end": "7183460"
  },
  {
    "text": "for example in this flow you can attach an AWS lambda function to a casus stream",
    "start": "7183460",
    "end": "7188469"
  },
  {
    "text": "to write data directly to DynamoDB AWS maybe i'll navigate to the console real",
    "start": "7188469",
    "end": "7194050"
  },
  {
    "text": "quick",
    "start": "7194050",
    "end": "7196260"
  },
  {
    "text": "you'll click create function and I'm just going to filter by Kinesis because",
    "start": "7206380",
    "end": "7211570"
  },
  {
    "text": "there's a lot of the blueprints and you want to choose Kinesis process record",
    "start": "7211570",
    "end": "7217750"
  },
  {
    "text": "which is the basic one and then you'll select your Canisius stream the back",
    "start": "7217750",
    "end": "7225969"
  },
  {
    "text": "size that you want to operate on hundreds of good one a thousand might be a better one but a",
    "start": "7225969",
    "end": "7231520"
  },
  {
    "text": "lot of times I just put the maximum in or a large much larger number so five",
    "start": "7231520",
    "end": "7242170"
  },
  {
    "text": "thousand and then in the starting position for test purposes you want to always choose the latest for other",
    "start": "7242170",
    "end": "7250929"
  },
  {
    "text": "purposes trim horizon is a very good option will enable the trigger and it",
    "start": "7250929",
    "end": "7261310"
  },
  {
    "text": "provides a good example here and here you can just put a piece of Python code that reads data from the konista stream",
    "start": "7261310",
    "end": "7267190"
  },
  {
    "text": "their rights to DynamoDB the second",
    "start": "7267190",
    "end": "7275139"
  },
  {
    "text": "option that I point you to is on github",
    "start": "7275139",
    "end": "7280320"
  },
  {
    "text": "we have a connector so there's another open source library called the Amazon",
    "start": "7284410",
    "end": "7291190"
  },
  {
    "text": "Kinesis client library which is the library you'll run on ec2 it's also fairly simple to get started the",
    "start": "7291190",
    "end": "7297610"
  },
  {
    "text": "documentation that I pointed to here or is it I lost a link the documentation",
    "start": "7297610",
    "end": "7305680"
  },
  {
    "text": "according boss to an example of that we have a connector that our right-to-die noannie be for you so this will set up a",
    "start": "7305680",
    "end": "7311230"
  },
  {
    "text": "consumer running on ec2 using the Amazon cases crying library and for data to these",
    "start": "7311230",
    "end": "7317110"
  },
  {
    "text": "services so that's another option I would steer you toward the lambda option",
    "start": "7317110",
    "end": "7323280"
  },
  {
    "text": "tonight low Steve asked can I run differently under functions based on the partition key in ocation stream so when",
    "start": "7325380",
    "end": "7334690"
  },
  {
    "text": "you read when you assign the lambda function to a Canisius stream what",
    "start": "7334690",
    "end": "7340030"
  },
  {
    "text": "happens is that each stream has a set of partitions called shards your kind of",
    "start": "7340030",
    "end": "7345550"
  },
  {
    "text": "land that function is continuously on a shard a partition team can use to stream",
    "start": "7345550",
    "end": "7351610"
  },
  {
    "text": "when you write data to a stream is a key that you can use to route data in",
    "start": "7351610",
    "end": "7356650"
  },
  {
    "text": "particular shards so if we're example you might use a device ID in an IMT",
    "start": "7356650",
    "end": "7361720"
  },
  {
    "text": "scenario to make sure that the data is evenly distributed across the entire stream so in a scenario where you have",
    "start": "7361720",
    "end": "7368500"
  },
  {
    "text": "ten shards and you want the data to be evenly distributed on this stream you choose a partition key that has a high",
    "start": "7368500",
    "end": "7375730"
  },
  {
    "text": "cardinality between the key and the partition so in this particular case the",
    "start": "7375730",
    "end": "7382300"
  },
  {
    "text": "device ID would be a good good fit so to the question can I use a different",
    "start": "7382300",
    "end": "7388630"
  },
  {
    "text": "lambda function to read data out of the stream because lambda is triggered on a shard basis it gets access to the keys",
    "start": "7388630",
    "end": "7395050"
  },
  {
    "text": "associated with that particular shard there's no way to filter down to the particular key the customers will do is",
    "start": "7395050",
    "end": "7402070"
  },
  {
    "text": "still have logic in their lambda function to basically read it from the stream and then operate on specific",
    "start": "7402070",
    "end": "7407590"
  },
  {
    "text": "partition keys or alternatively you can use Kinesis analytics to like group data by particular key",
    "start": "7407590",
    "end": "7413699"
  },
  {
    "text": "like we were showing earlier where you group by the partition key and the partition key is the device ID for",
    "start": "7413699",
    "end": "7419040"
  },
  {
    "text": "example and you get analytics based onto the device ID hopefully that answers your question Steve tonight on the Steve",
    "start": "7419040",
    "end": "7428060"
  },
  {
    "text": "what other questions can we help you guys out on both for mark and I but how",
    "start": "7432320",
    "end": "7437790"
  },
  {
    "text": "to get started",
    "start": "7437790",
    "end": "7440480"
  },
  {
    "text": "no problem Steve yeah I think I'll cover",
    "start": "7445590",
    "end": "7452190"
  },
  {
    "text": "just the IOT challenge again",
    "start": "7452190",
    "end": "7458330"
  },
  {
    "text": "that's a good question she has you need",
    "start": "7463640",
    "end": "7471410"
  },
  {
    "text": "to be using the AWS IOT service so I",
    "start": "7471410",
    "end": "7477260"
  },
  {
    "text": "think provided you're using the service having to use a physical device is not necessarily mandatory as far as I",
    "start": "7477260",
    "end": "7485390"
  },
  {
    "text": "understand Chandler I think you're there if you want to chime in on chat if I've gone down the wrong path but I believe",
    "start": "7485390",
    "end": "7492920"
  },
  {
    "text": "you don't you don't need to necessarily use a physical device I pulled up the",
    "start": "7492920",
    "end": "7498650"
  },
  {
    "text": "requirements so that must use either a wsit or Amazon Kinesis or both so it can",
    "start": "7498650",
    "end": "7506600"
  },
  {
    "text": "use either I highly encourage you use both this is pretty simple you just both",
    "start": "7506600",
    "end": "7512180"
  },
  {
    "text": "if you want to just use AWS IOT for example to directly send messages to DynamoDB the question that tuff",
    "start": "7512180",
    "end": "7518780"
  },
  {
    "text": "economist Steve at which I updated or society service will do that's one example if you can just using the AWS",
    "start": "7518780",
    "end": "7525200"
  },
  {
    "text": "IOT service another example is there's a set of IOT customers that just write",
    "start": "7525200",
    "end": "7530870"
  },
  {
    "text": "directly to an Amazon case to stream or Kimmy Amazon cases firehose delivery stream which is why I showed the data",
    "start": "7530870",
    "end": "7537890"
  },
  {
    "text": "generator and that data producer code of how to just write directly to a stream that's another option but I definitely",
    "start": "7537890",
    "end": "7543740"
  },
  {
    "text": "recommend you guys use both just because the integration between the two is really really nice it simply gets",
    "start": "7543740",
    "end": "7551300"
  },
  {
    "text": "started but if you just have a bunch of raspberry PI's any want to write directly to the stream you can yeah if",
    "start": "7551300",
    "end": "7558710"
  },
  {
    "text": "you if you do want to use physical devices again I would encourage you to use something that is capable of running",
    "start": "7558710",
    "end": "7564380"
  },
  {
    "text": "the AWS SDK so I would just recommend",
    "start": "7564380",
    "end": "7570140"
  },
  {
    "text": "against going down these extremely low powered tiny devices they they tend to",
    "start": "7570140",
    "end": "7577100"
  },
  {
    "text": "struggle to do things like SSL and encryption and all of the good stuff",
    "start": "7577100",
    "end": "7582320"
  },
  {
    "text": "that that we would expect in a really quality submission so if you are going to go with the biases you I recommend",
    "start": "7582320",
    "end": "7587930"
  },
  {
    "text": "things like you know the Raspberry Pi or the Intel Edison et cetera but yeah as we said you don't",
    "start": "7587930",
    "end": "7595219"
  },
  {
    "text": "necessarily have to use a physical device what are the questions have we got out there about the challenge that",
    "start": "7595219",
    "end": "7600560"
  },
  {
    "text": "we can help with because we've covered a",
    "start": "7600560",
    "end": "7607190"
  },
  {
    "text": "an incredible amount of ground today and I have to apologize Ryan I was doing",
    "start": "7607190",
    "end": "7613190"
  },
  {
    "text": "some yawning back there but it had nothing to do with you you did a",
    "start": "7613190",
    "end": "7623810"
  },
  {
    "text": "fantastic job I think that really gave everybody some excellent insight into",
    "start": "7623810",
    "end": "7629239"
  },
  {
    "text": "how to integrate Kinesis into their challenge is a challenge app do anything",
    "start": "7629239",
    "end": "7636530"
  },
  {
    "text": "you want to wrap up with right or we we done I think we're good I I definitely",
    "start": "7636530",
    "end": "7644840"
  },
  {
    "text": "encourage you to review the video again the assets that we mark and I showed our",
    "start": "7644840",
    "end": "7650840"
  },
  {
    "text": "great starting points I definitely you also encourage you guys to use as many",
    "start": "7650840",
    "end": "7655969"
  },
  {
    "text": "any of their services as possible because we're for the use case that",
    "start": "7655969",
    "end": "7661070"
  },
  {
    "text": "would make sense rather because it's just gonna be a lot easier to get started and then the final thing I would",
    "start": "7661070",
    "end": "7668480"
  },
  {
    "text": "say is hopefully we'll do another one of these twit sessions maybe in a month or so but that we haven't made of us slack",
    "start": "7668480",
    "end": "7675469"
  },
  {
    "text": "channel all right it's on this page click here to join I'm logged in",
    "start": "7675469",
    "end": "7687140"
  },
  {
    "text": "throughout the day answering questions do you guys have any other questions you know we're there if you guys have topic",
    "start": "7687140",
    "end": "7694400"
  },
  {
    "text": "development it's a very easy way to ping us yeah that's an awesome way to get in",
    "start": "7694400",
    "end": "7699800"
  },
  {
    "text": "touch get in touch with AWS in terms of",
    "start": "7699800",
    "end": "7704960"
  },
  {
    "text": "the stuff that I presented again use issues in github if you're having trouble there so we can track those and",
    "start": "7704960",
    "end": "7711500"
  },
  {
    "text": "resolve them for you in real time and guys the stuff we've covered today is",
    "start": "7711500",
    "end": "7717320"
  },
  {
    "text": "applicable not just to the AWS IOT app challenge applicable right across your businesses",
    "start": "7717320",
    "end": "7722970"
  },
  {
    "text": "and applicable to to a wide variety of",
    "start": "7722970",
    "end": "7728720"
  },
  {
    "text": "applications across your businesses so I encourage you to think not just in terms",
    "start": "7728720",
    "end": "7734160"
  },
  {
    "text": "of the AWS IOT have challenged but but more broadly across your business how you can use these services and",
    "start": "7734160",
    "end": "7740940"
  },
  {
    "text": "technologies how you can transition of businesses to service applications as",
    "start": "7740940",
    "end": "7747360"
  },
  {
    "text": "we've touched on today and ease the burden of having to run and manage infrastructure as well so with that if",
    "start": "7747360",
    "end": "7755070"
  },
  {
    "text": "there are no more questions on chat we we can wrap up what do you reckon Ryan",
    "start": "7755070",
    "end": "7760680"
  },
  {
    "text": "and then you wrap up I hope the rest of your very early day in Sydney goes well",
    "start": "7760680",
    "end": "7766320"
  },
  {
    "text": "mark in Melbourne in there now sorry I don't get that don't get the two mixed up because I always think of the region",
    "start": "7766320",
    "end": "7775950"
  },
  {
    "text": "name I'm sorry alright everybody thanks",
    "start": "7775950",
    "end": "7781020"
  },
  {
    "text": "so much for joining good luck with your AWS IOT app challenge and we will see",
    "start": "7781020",
    "end": "7787740"
  },
  {
    "text": "you in the future we look forward to doing another one of these and helping you along the path hi everybody",
    "start": "7787740",
    "end": "7794870"
  },
  {
    "text": "you",
    "start": "7801240",
    "end": "7803300"
  }
]