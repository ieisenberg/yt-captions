[
  {
    "start": "0",
    "end": "17000"
  },
  {
    "text": "in this video you'll see how to create",
    "start": "399",
    "end": "2240"
  },
  {
    "text": "aws cloud formation registry resources",
    "start": "2240",
    "end": "5600"
  },
  {
    "text": "with this capability you can create your",
    "start": "5600",
    "end": "7520"
  },
  {
    "text": "own resource types for use in cloud",
    "start": "7520",
    "end": "9200"
  },
  {
    "text": "formation templates",
    "start": "9200",
    "end": "10400"
  },
  {
    "text": "share private resources with your",
    "start": "10400",
    "end": "11920"
  },
  {
    "text": "account and manage private resources",
    "start": "11920",
    "end": "14160"
  },
  {
    "text": "using aws config",
    "start": "14160",
    "end": "15599"
  },
  {
    "text": "and drift detection the cloud formation",
    "start": "15599",
    "end": "18480"
  },
  {
    "start": "17000",
    "end": "46000"
  },
  {
    "text": "registry lists the resources available",
    "start": "18480",
    "end": "20400"
  },
  {
    "text": "to your cloudformation account for use",
    "start": "20400",
    "end": "22080"
  },
  {
    "text": "in your stack templates",
    "start": "22080",
    "end": "23920"
  },
  {
    "text": "to get started let's go to the registry",
    "start": "23920",
    "end": "27920"
  },
  {
    "text": "there are two types of cloud formation",
    "start": "29119",
    "end": "30720"
  },
  {
    "text": "registry resources",
    "start": "30720",
    "end": "32160"
  },
  {
    "text": "public resources provided by aws and",
    "start": "32160",
    "end": "35040"
  },
  {
    "text": "private resources developed and",
    "start": "35040",
    "end": "36480"
  },
  {
    "text": "registered for use in your account",
    "start": "36480",
    "end": "39120"
  },
  {
    "text": "this account has no private registry",
    "start": "39120",
    "end": "40800"
  },
  {
    "text": "resources",
    "start": "40800",
    "end": "42160"
  },
  {
    "text": "to start defining a private resource",
    "start": "42160",
    "end": "44079"
  },
  {
    "text": "let's go to our development environment",
    "start": "44079",
    "end": "47120"
  },
  {
    "start": "46000",
    "end": "118000"
  },
  {
    "text": "we'll be using cloud9 but all steps we",
    "start": "47120",
    "end": "49280"
  },
  {
    "text": "take here can be done in a local",
    "start": "49280",
    "end": "50800"
  },
  {
    "text": "development environment",
    "start": "50800",
    "end": "52559"
  },
  {
    "text": "first we'll use pip to install the",
    "start": "52559",
    "end": "54160"
  },
  {
    "text": "cloudformation cli tool and the python",
    "start": "54160",
    "end": "56840"
  },
  {
    "text": "plugin",
    "start": "56840",
    "end": "58480"
  },
  {
    "text": "let's make sure the cloudformation cli",
    "start": "58480",
    "end": "60559"
  },
  {
    "text": "tool installed properly",
    "start": "60559",
    "end": "63120"
  },
  {
    "text": "next we'll install the cloudformation",
    "start": "63120",
    "end": "65040"
  },
  {
    "text": "serverless application model or sam",
    "start": "65040",
    "end": "67600"
  },
  {
    "text": "cli tool so that we'll be able to",
    "start": "67600",
    "end": "69680"
  },
  {
    "text": "locally test and debug the lambda",
    "start": "69680",
    "end": "71360"
  },
  {
    "text": "functions containing the provisioning",
    "start": "71360",
    "end": "72880"
  },
  {
    "text": "logic for our resource",
    "start": "72880",
    "end": "75439"
  },
  {
    "text": "now we'll create a project folder for",
    "start": "75439",
    "end": "76960"
  },
  {
    "text": "our resource type",
    "start": "76960",
    "end": "78880"
  },
  {
    "text": "next we'll run the cfn init command to",
    "start": "78880",
    "end": "81360"
  },
  {
    "text": "bootstrap our project folder with all",
    "start": "81360",
    "end": "83119"
  },
  {
    "text": "the necessary files and folders for the",
    "start": "83119",
    "end": "84960"
  },
  {
    "text": "creation of our resource",
    "start": "84960",
    "end": "87119"
  },
  {
    "text": "for the purposes of this example we'll",
    "start": "87119",
    "end": "89040"
  },
  {
    "text": "create a resource type to implement",
    "start": "89040",
    "end": "90640"
  },
  {
    "text": "logic for the provisioning of a password",
    "start": "90640",
    "end": "92400"
  },
  {
    "text": "policy resource",
    "start": "92400",
    "end": "94400"
  },
  {
    "text": "let's implement the provisioning logic",
    "start": "94400",
    "end": "96079"
  },
  {
    "text": "in python 3.7",
    "start": "96079",
    "end": "98479"
  },
  {
    "text": "we'll follow the recommendation to use",
    "start": "98479",
    "end": "100240"
  },
  {
    "text": "docker for packaging the provisioning",
    "start": "100240",
    "end": "101840"
  },
  {
    "text": "logic",
    "start": "101840",
    "end": "104159"
  },
  {
    "text": "let's take a look at some of the files",
    "start": "104159",
    "end": "105680"
  },
  {
    "text": "the wizard generated",
    "start": "105680",
    "end": "108640"
  },
  {
    "text": "our folder now contains a json file that",
    "start": "109119",
    "end": "111520"
  },
  {
    "text": "defines all of the parameters",
    "start": "111520",
    "end": "113040"
  },
  {
    "text": "resources utilized and metadata for our",
    "start": "113040",
    "end": "115280"
  },
  {
    "text": "new resource type",
    "start": "115280",
    "end": "118240"
  },
  {
    "start": "118000",
    "end": "263000"
  },
  {
    "text": "at the top we can define our resource",
    "start": "118880",
    "end": "120719"
  },
  {
    "text": "type name description",
    "start": "120719",
    "end": "122240"
  },
  {
    "text": "source url and any schema definition",
    "start": "122240",
    "end": "124640"
  },
  {
    "text": "metadata we choose to provide",
    "start": "124640",
    "end": "129520"
  },
  {
    "text": "here we can define any properties and",
    "start": "129520",
    "end": "131280"
  },
  {
    "text": "parameters to be used in our handler",
    "start": "131280",
    "end": "132959"
  },
  {
    "text": "logic",
    "start": "132959",
    "end": "135360"
  },
  {
    "text": "at the bottom we see that a resource",
    "start": "137280",
    "end": "139120"
  },
  {
    "text": "type implements provisioning logic for",
    "start": "139120",
    "end": "140879"
  },
  {
    "text": "create",
    "start": "140879",
    "end": "141520"
  },
  {
    "text": "read update delete and list events",
    "start": "141520",
    "end": "144879"
  },
  {
    "text": "any necessary permissions for the aws",
    "start": "144879",
    "end": "147200"
  },
  {
    "text": "identity and access management or iam",
    "start": "147200",
    "end": "149520"
  },
  {
    "text": "role to perform these tasks are defined",
    "start": "149520",
    "end": "151519"
  },
  {
    "text": "here",
    "start": "151519",
    "end": "153840"
  },
  {
    "text": "the cfn init command also generated",
    "start": "155360",
    "end": "157760"
  },
  {
    "text": "boilerplate source code for the handler",
    "start": "157760",
    "end": "159599"
  },
  {
    "text": "logic",
    "start": "159599",
    "end": "160239"
  },
  {
    "text": "let's take a look",
    "start": "160239",
    "end": "162959"
  },
  {
    "text": "this python source code file contains",
    "start": "163440",
    "end": "165440"
  },
  {
    "text": "handler logic for our resources create",
    "start": "165440",
    "end": "167680"
  },
  {
    "text": "update delete read and list operations",
    "start": "167680",
    "end": "172079"
  },
  {
    "text": "the models file contains data structure",
    "start": "172640",
    "end": "174640"
  },
  {
    "text": "definitions that will be used in our",
    "start": "174640",
    "end": "176080"
  },
  {
    "text": "handler logic",
    "start": "176080",
    "end": "177599"
  },
  {
    "text": "it was generated automatically using the",
    "start": "177599",
    "end": "179519"
  },
  {
    "text": "json file we saw earlier",
    "start": "179519",
    "end": "181920"
  },
  {
    "text": "let's return to that file to add some",
    "start": "181920",
    "end": "183519"
  },
  {
    "text": "custom fields for our password policy",
    "start": "183519",
    "end": "185440"
  },
  {
    "text": "resource type",
    "start": "185440",
    "end": "188159"
  },
  {
    "text": "let's clear the boilerplate definitions",
    "start": "188640",
    "end": "190560"
  },
  {
    "text": "section",
    "start": "190560",
    "end": "191840"
  },
  {
    "text": "for our purposes we'll define only the",
    "start": "191840",
    "end": "193920"
  },
  {
    "text": "properties and necessary iam execution",
    "start": "193920",
    "end": "196319"
  },
  {
    "text": "policy for our resource type",
    "start": "196319",
    "end": "198720"
  },
  {
    "text": "let's replace the properties section",
    "start": "198720",
    "end": "200400"
  },
  {
    "text": "with the properties we wish to define",
    "start": "200400",
    "end": "213840"
  },
  {
    "text": "under required we can specify whether",
    "start": "221519",
    "end": "223760"
  },
  {
    "text": "any of our defined fields must be filled",
    "start": "223760",
    "end": "225680"
  },
  {
    "text": "in when our resource is provisioned",
    "start": "225680",
    "end": "228159"
  },
  {
    "text": "let's set minimum password length as a",
    "start": "228159",
    "end": "230159"
  },
  {
    "text": "required field",
    "start": "230159",
    "end": "231840"
  },
  {
    "text": "we can also designate specific",
    "start": "231840",
    "end": "233439"
  },
  {
    "text": "properties as read only",
    "start": "233439",
    "end": "235360"
  },
  {
    "text": "let's do so for the resource type name",
    "start": "235360",
    "end": "239200"
  },
  {
    "text": "let's also designate the name as the",
    "start": "239519",
    "end": "241200"
  },
  {
    "text": "primary identifier",
    "start": "241200",
    "end": "244319"
  },
  {
    "text": "in the handler section we'll define any",
    "start": "244319",
    "end": "246400"
  },
  {
    "text": "necessary iam policies required by our",
    "start": "246400",
    "end": "248879"
  },
  {
    "text": "resource types corresponding iam",
    "start": "248879",
    "end": "251040"
  },
  {
    "text": "execution roles",
    "start": "251040",
    "end": "255840"
  },
  {
    "text": "let's save the file and return to the",
    "start": "258639",
    "end": "260320"
  },
  {
    "text": "terminal",
    "start": "260320",
    "end": "262720"
  },
  {
    "start": "263000",
    "end": "342000"
  },
  {
    "text": "next let's run cfn generate which will",
    "start": "263280",
    "end": "266080"
  },
  {
    "text": "automatically refresh our resource type",
    "start": "266080",
    "end": "268000"
  },
  {
    "text": "data models and documentation with the",
    "start": "268000",
    "end": "269840"
  },
  {
    "text": "fields we just defined",
    "start": "269840",
    "end": "272000"
  },
  {
    "text": "let's look at the documentation",
    "start": "272000",
    "end": "275360"
  },
  {
    "text": "as you can see the readme file was",
    "start": "276320",
    "end": "278160"
  },
  {
    "text": "automatically populated with the defined",
    "start": "278160",
    "end": "280080"
  },
  {
    "text": "properties and values",
    "start": "280080",
    "end": "283600"
  },
  {
    "text": "it also auto-generated a description of",
    "start": "283600",
    "end": "285759"
  },
  {
    "text": "each field we input",
    "start": "285759",
    "end": "286960"
  },
  {
    "text": "including links to more information",
    "start": "286960",
    "end": "290560"
  },
  {
    "text": "similarly the data models have been",
    "start": "291120",
    "end": "292800"
  },
  {
    "text": "automatically generated according to our",
    "start": "292800",
    "end": "294840"
  },
  {
    "text": "specifications",
    "start": "294840",
    "end": "297840"
  },
  {
    "text": "next we'll use the data models to",
    "start": "297919",
    "end": "299440"
  },
  {
    "text": "provide the provisioning logic for each",
    "start": "299440",
    "end": "301120"
  },
  {
    "text": "handler operation",
    "start": "301120",
    "end": "303280"
  },
  {
    "text": "first we'll define the desired state of",
    "start": "303280",
    "end": "305280"
  },
  {
    "text": "our create action using the get",
    "start": "305280",
    "end": "307039"
  },
  {
    "text": "account password policy model this model",
    "start": "307039",
    "end": "310400"
  },
  {
    "text": "returns the policy or raises an error if",
    "start": "310400",
    "end": "312639"
  },
  {
    "text": "the policy isn't there or the action",
    "start": "312639",
    "end": "314479"
  },
  {
    "text": "fails",
    "start": "314479",
    "end": "316479"
  },
  {
    "text": "next we'll implement the creation logic",
    "start": "316479",
    "end": "318320"
  },
  {
    "text": "for our password policy resource type",
    "start": "318320",
    "end": "323919"
  },
  {
    "text": "we'll continue defining the logic for",
    "start": "323919",
    "end": "325520"
  },
  {
    "text": "each of the handler functions",
    "start": "325520",
    "end": "339840"
  },
  {
    "start": "342000",
    "end": "373000"
  },
  {
    "text": "let's run cfn generate to refresh our",
    "start": "342400",
    "end": "344560"
  },
  {
    "text": "project files",
    "start": "344560",
    "end": "346320"
  },
  {
    "text": "before submitting our resource to the",
    "start": "346320",
    "end": "347919"
  },
  {
    "text": "directory we can perform tests to ensure",
    "start": "347919",
    "end": "350240"
  },
  {
    "text": "the handler functions work as expected",
    "start": "350240",
    "end": "353039"
  },
  {
    "text": "we can use sam to instantiate a local",
    "start": "353039",
    "end": "355280"
  },
  {
    "text": "lambda function using our built resource",
    "start": "355280",
    "end": "357199"
  },
  {
    "text": "type artifact and then run tests against",
    "start": "357199",
    "end": "359199"
  },
  {
    "text": "it",
    "start": "359199",
    "end": "360319"
  },
  {
    "text": "in this case we won't run tests let's",
    "start": "360319",
    "end": "362720"
  },
  {
    "text": "submit our resource type to the cloud",
    "start": "362720",
    "end": "364319"
  },
  {
    "text": "formation registry",
    "start": "364319",
    "end": "366400"
  },
  {
    "text": "our custom resource type is now",
    "start": "366400",
    "end": "367840"
  },
  {
    "text": "submitted and registered let's return to",
    "start": "367840",
    "end": "370080"
  },
  {
    "text": "cloudformation",
    "start": "370080",
    "end": "372879"
  },
  {
    "text": "our resource now appears on the private",
    "start": "373280",
    "end": "375120"
  },
  {
    "text": "resource type page in the cloudformation",
    "start": "375120",
    "end": "378840"
  },
  {
    "text": "registry a description",
    "start": "378840",
    "end": "380800"
  },
  {
    "text": "arn release date and documentation are",
    "start": "380800",
    "end": "383120"
  },
  {
    "text": "provided",
    "start": "383120",
    "end": "383840"
  },
  {
    "text": "along with the schema we defined notice",
    "start": "383840",
    "end": "386479"
  },
  {
    "text": "that multiple versions of this private",
    "start": "386479",
    "end": "388000"
  },
  {
    "text": "resource type can be created and offered",
    "start": "388000",
    "end": "389919"
  },
  {
    "text": "for selection",
    "start": "389919",
    "end": "391680"
  },
  {
    "text": "next let's create a simple",
    "start": "391680",
    "end": "393199"
  },
  {
    "text": "cloudformation template that utilizes",
    "start": "393199",
    "end": "395039"
  },
  {
    "text": "our new resource",
    "start": "395039",
    "end": "397840"
  },
  {
    "text": "next let's copy our cloudformation",
    "start": "403680",
    "end": "405440"
  },
  {
    "text": "template to an amazon simple storage",
    "start": "405440",
    "end": "407440"
  },
  {
    "text": "service or",
    "start": "407440",
    "end": "408000"
  },
  {
    "text": "amazon s3 bucket and deploy it",
    "start": "408000",
    "end": "423680"
  },
  {
    "text": "we'll need to provide the s3 url for the",
    "start": "423680",
    "end": "426000"
  },
  {
    "text": "cloudformation template we just created",
    "start": "426000",
    "end": "437840"
  },
  {
    "start": "446000",
    "end": "489000"
  },
  {
    "text": "now that the resource is provisioned",
    "start": "446880",
    "end": "448479"
  },
  {
    "text": "let's navigate to iam",
    "start": "448479",
    "end": "450080"
  },
  {
    "text": "to ensure the password policy has been",
    "start": "450080",
    "end": "451840"
  },
  {
    "text": "implemented in our account",
    "start": "451840",
    "end": "454319"
  },
  {
    "text": "the password policy has been added you",
    "start": "454319",
    "end": "456720"
  },
  {
    "text": "can see if configuration changes were",
    "start": "456720",
    "end": "458400"
  },
  {
    "text": "made to your stack resources outside of",
    "start": "458400",
    "end": "460240"
  },
  {
    "text": "cloud formation by using the drift",
    "start": "460240",
    "end": "461840"
  },
  {
    "text": "detection feature",
    "start": "461840",
    "end": "463680"
  },
  {
    "text": "in addition resource types from the",
    "start": "463680",
    "end": "465440"
  },
  {
    "text": "cloud formation registry are",
    "start": "465440",
    "end": "466720"
  },
  {
    "text": "automatically tracked in aws config",
    "start": "466720",
    "end": "469840"
  },
  {
    "text": "with aws config you can assess audit and",
    "start": "469840",
    "end": "472960"
  },
  {
    "text": "evaluate the configurations of your",
    "start": "472960",
    "end": "474560"
  },
  {
    "text": "application resources",
    "start": "474560",
    "end": "479840"
  },
  {
    "text": "you've just seen how to create aws cloud",
    "start": "480240",
    "end": "482479"
  },
  {
    "text": "formation registry resources",
    "start": "482479",
    "end": "485120"
  },
  {
    "text": "thanks for watching now it's your turn",
    "start": "485120",
    "end": "486639"
  },
  {
    "text": "to try",
    "start": "486639",
    "end": "490960"
  }
]