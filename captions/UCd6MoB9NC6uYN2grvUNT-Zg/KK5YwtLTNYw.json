[
  {
    "text": "(upbeat music)",
    "start": "170",
    "end": "2753"
  },
  {
    "text": "- Hello, I'm Gnaneshwari,\na cloud support engineer",
    "start": "12672",
    "end": "15072"
  },
  {
    "text": "here at the AWS office\nin Bangalore, India.",
    "start": "15072",
    "end": "17900"
  },
  {
    "text": "Today, I'm gonna show you",
    "start": "17900",
    "end": "19270"
  },
  {
    "text": "how you can achieve path-based routing",
    "start": "19270",
    "end": "21760"
  },
  {
    "text": "on an Application Load Balancer.",
    "start": "21760",
    "end": "24030"
  },
  {
    "text": "In an Application Load Balancer,\nyou can have a listener",
    "start": "24030",
    "end": "27350"
  },
  {
    "text": "with one or more routes\nthat forward requests",
    "start": "27350",
    "end": "29920"
  },
  {
    "text": "to specific target groups\nbased on the URL path.",
    "start": "29920",
    "end": "33320"
  },
  {
    "text": "In this video, we will consider an example",
    "start": "33320",
    "end": "36010"
  },
  {
    "text": "where we have two separate services",
    "start": "36010",
    "end": "38670"
  },
  {
    "text": "to run for URL/path1\nand /path2 on port 80.",
    "start": "38670",
    "end": "43260"
  },
  {
    "text": "I'll walk you through\ncreating target groups,",
    "start": "43260",
    "end": "45890"
  },
  {
    "text": "registering targets, and creating routes",
    "start": "45890",
    "end": "48500"
  },
  {
    "text": "on the load balancer.",
    "start": "48500",
    "end": "49690"
  },
  {
    "text": "Let's get started.",
    "start": "49690",
    "end": "50763"
  },
  {
    "text": "Prerequisites.",
    "start": "51650",
    "end": "52550"
  },
  {
    "text": "Launch Amazon EC2 instances",
    "start": "52550",
    "end": "54540"
  },
  {
    "text": "and deploy the microservices on them.",
    "start": "54540",
    "end": "56960"
  },
  {
    "text": "I have launched the instances\nService A and Service B",
    "start": "56960",
    "end": "60500"
  },
  {
    "text": "that run a microservice for /path1/*",
    "start": "60500",
    "end": "63260"
  },
  {
    "text": "and Service C and Service D",
    "start": "63260",
    "end": "65220"
  },
  {
    "text": "that run a microservice for /path2/*.",
    "start": "65220",
    "end": "68140"
  },
  {
    "text": "Now, let's go ahead and\ncreate two target groups",
    "start": "68140",
    "end": "70979"
  },
  {
    "text": "for the microservices for\n/path1 and /path2 respectively.",
    "start": "70980",
    "end": "75900"
  },
  {
    "text": "After logging into the\nAWS management console,",
    "start": "75900",
    "end": "78790"
  },
  {
    "text": "navigate to the Amazon EC2 console.",
    "start": "78790",
    "end": "81253"
  },
  {
    "text": "On the navigation bar,\nselect the same region",
    "start": "83870",
    "end": "86580"
  },
  {
    "text": "that you selected for the EC2 instances.",
    "start": "86580",
    "end": "89610"
  },
  {
    "text": "On the navigation pane,\nunder Load Balancing,",
    "start": "89610",
    "end": "92763"
  },
  {
    "text": "choose Target Groups.",
    "start": "94150",
    "end": "95843"
  },
  {
    "text": "Create a target group for\nthe first set of targets.",
    "start": "99420",
    "end": "103259"
  },
  {
    "text": "Choose create target group.",
    "start": "103260",
    "end": "105570"
  },
  {
    "text": "Specify a name, such as TargetGroup1.",
    "start": "105570",
    "end": "107663"
  },
  {
    "text": "And then the protocol, port,",
    "start": "110590",
    "end": "112299"
  },
  {
    "text": "and the VPC for the target group.",
    "start": "112300",
    "end": "114620"
  },
  {
    "text": "Choose Create.",
    "start": "114620",
    "end": "115503"
  },
  {
    "text": "To register targets, select\nthe new target group.",
    "start": "118970",
    "end": "122080"
  },
  {
    "text": "On the Targets tab, choose Edit.",
    "start": "122080",
    "end": "124183"
  },
  {
    "text": "For instances, select instances,",
    "start": "125230",
    "end": "127750"
  },
  {
    "text": "service one and service two,",
    "start": "127750",
    "end": "129470"
  },
  {
    "text": "that run the microservice for /path1.",
    "start": "129470",
    "end": "132300"
  },
  {
    "text": "Specify a port for the instances,",
    "start": "132300",
    "end": "135030"
  },
  {
    "text": "choose add to registered,\nand then choose Save.",
    "start": "135030",
    "end": "138083"
  },
  {
    "text": "In the same way, create another\ntarget group, TargetGroup2,",
    "start": "140900",
    "end": "144700"
  },
  {
    "text": "and register instances that run\nthe microservice for /path2.",
    "start": "144700",
    "end": "149280"
  },
  {
    "text": "On Application Load\nBalancers' Listeners tab,",
    "start": "149280",
    "end": "152430"
  },
  {
    "text": "for the listener you need\nthe path-based routing on.",
    "start": "152430",
    "end": "155920"
  },
  {
    "text": "Choose view/edit rules.",
    "start": "155920",
    "end": "157873"
  },
  {
    "text": "And then choose the add rules icon.",
    "start": "158960",
    "end": "161880"
  },
  {
    "text": "For /path1, let's specify\nthe rule as follows.",
    "start": "161880",
    "end": "166100"
  },
  {
    "text": "Choose Insert Rule.",
    "start": "166100",
    "end": "168160"
  },
  {
    "text": "Choose add condition,\npath is, and enter /path1.",
    "start": "168160",
    "end": "172933"
  },
  {
    "text": "To save the condition,\nchoose the check mark icon.",
    "start": "208460",
    "end": "211820"
  },
  {
    "text": "Choose add action, forward to,",
    "start": "211820",
    "end": "214960"
  },
  {
    "text": "and then choose the TargetGroup1\nthat we just created.",
    "start": "214960",
    "end": "218590"
  },
  {
    "text": "To save the action, choose\nthe check mark icon.",
    "start": "218590",
    "end": "221830"
  },
  {
    "text": "To save the rule, choose Save.",
    "start": "221830",
    "end": "223973"
  },
  {
    "text": "In the same way, let's create\na rule for /path2 as well.",
    "start": "224810",
    "end": "229030"
  },
  {
    "text": "Choose Insert Rule.",
    "start": "229030",
    "end": "230680"
  },
  {
    "text": "Choose add condition,\npath is, and enter /path2.",
    "start": "230680",
    "end": "234702"
  },
  {
    "text": "To save the action, choose\nthe check mark icon.",
    "start": "236180",
    "end": "239659"
  },
  {
    "text": "Choose add action, forward to,",
    "start": "239660",
    "end": "242210"
  },
  {
    "text": "and then choose the TargetGroup2\nthat we just created.",
    "start": "242210",
    "end": "246020"
  },
  {
    "text": "To save the action, choose\nthe check mark icon.",
    "start": "246020",
    "end": "249520"
  },
  {
    "text": "To save the rule, choose Save.",
    "start": "249520",
    "end": "251650"
  },
  {
    "text": "You can have similar\nrules for other listeners,",
    "start": "251650",
    "end": "254230"
  },
  {
    "text": "defined on your load balancer as well.",
    "start": "254230",
    "end": "256079"
  },
  {
    "text": "Thanks for watching, and\nhappy cloud computing",
    "start": "256080",
    "end": "259139"
  },
  {
    "text": "from all of us here at AWS.",
    "start": "259140",
    "end": "260844"
  },
  {
    "text": "(upbeat music)",
    "start": "260844",
    "end": "263427"
  }
]