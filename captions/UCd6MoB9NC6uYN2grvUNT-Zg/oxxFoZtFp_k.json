[
  {
    "text": "hey I'm rajat yagi I'm a product manager",
    "start": "4400",
    "end": "6440"
  },
  {
    "text": "in the ec2 networking team and today",
    "start": "6440",
    "end": "8400"
  },
  {
    "text": "I'll be talking about verified access",
    "start": "8400",
    "end": "10559"
  },
  {
    "text": "new feature that enables zero trust",
    "start": "10559",
    "end": "12880"
  },
  {
    "text": "access to resources over non HTTP",
    "start": "12880",
    "end": "15560"
  },
  {
    "text": "protocols hi everyone this is anush K",
    "start": "15560",
    "end": "18119"
  },
  {
    "text": "I'm senior technical account manager",
    "start": "18119",
    "end": "19960"
  },
  {
    "text": "here at AWS today I will be giving you",
    "start": "19960",
    "end": "22439"
  },
  {
    "text": "demo how you can use this new feature by",
    "start": "22439",
    "end": "25080"
  },
  {
    "text": "using ABA thank you Raj",
    "start": "25080",
    "end": "28519"
  },
  {
    "text": "thanks before we talk about the new",
    "start": "28519",
    "end": "30720"
  },
  {
    "text": "feature let me give you a brief overview",
    "start": "30720",
    "end": "33040"
  },
  {
    "text": "of what verified access is verified",
    "start": "33040",
    "end": "35920"
  },
  {
    "text": "access is a reverse proxy that",
    "start": "35920",
    "end": "37559"
  },
  {
    "text": "integrates with your identity provider",
    "start": "37559",
    "end": "39600"
  },
  {
    "text": "as well as your device security service",
    "start": "39600",
    "end": "41960"
  },
  {
    "text": "and allows you to Define fine grain",
    "start": "41960",
    "end": "43800"
  },
  {
    "text": "access policies which are based upon",
    "start": "43800",
    "end": "45800"
  },
  {
    "text": "users's identity as well as the device",
    "start": "45800",
    "end": "48320"
  },
  {
    "text": "Security State for example you can",
    "start": "48320",
    "end": "51120"
  },
  {
    "text": "Define simple policies such as allowing",
    "start": "51120",
    "end": "54280"
  },
  {
    "text": "only members of your Finance staff with",
    "start": "54280",
    "end": "56840"
  },
  {
    "text": "managed and compliant devices to access",
    "start": "56840",
    "end": "59480"
  },
  {
    "text": "Finance",
    "start": "59480",
    "end": "61920"
  },
  {
    "text": "applications now let's look at how",
    "start": "62359",
    "end": "65158"
  },
  {
    "text": "verified access works for non HTP",
    "start": "65159",
    "end": "69240"
  },
  {
    "text": "resources based on our customer",
    "start": "69240",
    "end": "71240"
  },
  {
    "text": "interviews we learned that there are two",
    "start": "71240",
    "end": "73400"
  },
  {
    "text": "types of non-http resources the first",
    "start": "73400",
    "end": "76200"
  },
  {
    "text": "are persistent resources which are more",
    "start": "76200",
    "end": "78159"
  },
  {
    "text": "stable parts of architecture some",
    "start": "78159",
    "end": "81320"
  },
  {
    "text": "example includes applications databases",
    "start": "81320",
    "end": "83799"
  },
  {
    "text": "such as git",
    "start": "83799",
    "end": "85159"
  },
  {
    "text": "repositories these resources remain a",
    "start": "85159",
    "end": "87680"
  },
  {
    "text": "part of your architecture for a long",
    "start": "87680",
    "end": "89240"
  },
  {
    "text": "period of time unless you explicitly",
    "start": "89240",
    "end": "92119"
  },
  {
    "text": "migrate or upgrade from",
    "start": "92119",
    "end": "94280"
  },
  {
    "text": "them the second types of resources are",
    "start": "94280",
    "end": "97159"
  },
  {
    "text": "ephemeral resources which are more",
    "start": "97159",
    "end": "98759"
  },
  {
    "text": "temporary parts of your architectures",
    "start": "98759",
    "end": "100920"
  },
  {
    "text": "such as ec2 instances which scale Up and",
    "start": "100920",
    "end": "103720"
  },
  {
    "text": "Down based on the compute demand so for",
    "start": "103720",
    "end": "106640"
  },
  {
    "text": "example if your",
    "start": "106640",
    "end": "108079"
  },
  {
    "text": "application Witnesses surge in traffic",
    "start": "108079",
    "end": "110880"
  },
  {
    "text": "ec2 instances spin up to meet the heavy",
    "start": "110880",
    "end": "113680"
  },
  {
    "text": "traffic requirements and once the",
    "start": "113680",
    "end": "115640"
  },
  {
    "text": "applications uh once the traffic",
    "start": "115640",
    "end": "117439"
  },
  {
    "text": "subsides the ec2 instances which are no",
    "start": "117439",
    "end": "119439"
  },
  {
    "text": "longer needed",
    "start": "119439",
    "end": "122320"
  },
  {
    "text": "terminate based on this understanding we",
    "start": "123560",
    "end": "126000"
  },
  {
    "text": "launched the new feature of verified",
    "start": "126000",
    "end": "127600"
  },
  {
    "text": "access this feature is in public",
    "start": "127600",
    "end": "130720"
  },
  {
    "text": "preview with using verified access for",
    "start": "130720",
    "end": "133640"
  },
  {
    "text": "accessing non HTTP resources you can",
    "start": "133640",
    "end": "135680"
  },
  {
    "text": "improve your security posture by",
    "start": "135680",
    "end": "137879"
  },
  {
    "text": "providing zero trust access to your non",
    "start": "137879",
    "end": "140000"
  },
  {
    "text": "HTTP resources you can simplify your",
    "start": "140000",
    "end": "142720"
  },
  {
    "text": "security operations by using just one",
    "start": "142720",
    "end": "145519"
  },
  {
    "text": "solution one tool to manage access for",
    "start": "145519",
    "end": "148680"
  },
  {
    "text": "all your applications and resources on",
    "start": "148680",
    "end": "151280"
  },
  {
    "text": "ews and finally you can onboard",
    "start": "151280",
    "end": "154040"
  },
  {
    "text": "resources at scale without spending too",
    "start": "154040",
    "end": "156519"
  },
  {
    "text": "much time let's see",
    "start": "156519",
    "end": "159599"
  },
  {
    "text": "how so we've launched support for two",
    "start": "159599",
    "end": "162800"
  },
  {
    "text": "new endpoints the first is TCP endpoint",
    "start": "162800",
    "end": "166040"
  },
  {
    "text": "which is built for persistent resources",
    "start": "166040",
    "end": "168319"
  },
  {
    "text": "this enables access to your applications",
    "start": "168319",
    "end": "171040"
  },
  {
    "text": "tools databases and eliminates relying",
    "start": "171040",
    "end": "173599"
  },
  {
    "text": "on static credentials only so now you",
    "start": "173599",
    "end": "176599"
  },
  {
    "text": "can add or augment your existing",
    "start": "176599",
    "end": "179200"
  },
  {
    "text": "applications",
    "start": "179200",
    "end": "180599"
  },
  {
    "text": "to uh and you can add zero trust",
    "start": "180599",
    "end": "182680"
  },
  {
    "text": "security controls on top of it ensuring",
    "start": "182680",
    "end": "185360"
  },
  {
    "text": "you have better uh security as well as",
    "start": "185360",
    "end": "189840"
  },
  {
    "text": "observability into who is accessing",
    "start": "189840",
    "end": "192480"
  },
  {
    "text": "what the second type of endpoint that",
    "start": "192480",
    "end": "194799"
  },
  {
    "text": "we've launched is called the network",
    "start": "194799",
    "end": "196159"
  },
  {
    "text": "endpoint which is built for ephemeral",
    "start": "196159",
    "end": "198000"
  },
  {
    "text": "resources this allows you to onboard",
    "start": "198000",
    "end": "200480"
  },
  {
    "text": "resources at scale by specifying a",
    "start": "200480",
    "end": "204120"
  },
  {
    "text": "network once you specify the network the",
    "start": "204120",
    "end": "206640"
  },
  {
    "text": "endpoint enables access to each resource",
    "start": "206640",
    "end": "208799"
  },
  {
    "text": "on the network",
    "start": "208799",
    "end": "210400"
  },
  {
    "text": "the users still connect to one resource",
    "start": "210400",
    "end": "212400"
  },
  {
    "text": "at a time and every time they connect to",
    "start": "212400",
    "end": "214239"
  },
  {
    "text": "a resource their polic is enforced and",
    "start": "214239",
    "end": "217599"
  },
  {
    "text": "their access is",
    "start": "217599",
    "end": "220319"
  },
  {
    "text": "logged we've built Network end point in",
    "start": "220319",
    "end": "223040"
  },
  {
    "text": "keeping in mind that every time any new",
    "start": "223040",
    "end": "225280"
  },
  {
    "text": "resources spin up or down admins don't",
    "start": "225280",
    "end": "228239"
  },
  {
    "text": "have to take any kind of actions from",
    "start": "228239",
    "end": "229879"
  },
  {
    "text": "their side and while at the same time",
    "start": "229879",
    "end": "232519"
  },
  {
    "text": "the user experience to access these",
    "start": "232519",
    "end": "234480"
  },
  {
    "text": "resources remains easy and convenient",
    "start": "234480",
    "end": "237079"
  },
  {
    "text": "for developers let's see how",
    "start": "237079",
    "end": "241079"
  },
  {
    "text": "for network and point you can delegate",
    "start": "241079",
    "end": "242879"
  },
  {
    "text": "as a subdomain from your",
    "start": "242879",
    "end": "246319"
  },
  {
    "text": "organization once you do so verified",
    "start": "246319",
    "end": "248840"
  },
  {
    "text": "access generates a public DNS record for",
    "start": "248840",
    "end": "252000"
  },
  {
    "text": "each active resource in the specified",
    "start": "252000",
    "end": "255320"
  },
  {
    "text": "Network these DNS records are uh",
    "start": "255320",
    "end": "259400"
  },
  {
    "text": "generated in the delegated subdomain",
    "start": "259400",
    "end": "262440"
  },
  {
    "text": "ensuring that your users get to use",
    "start": "262440",
    "end": "265520"
  },
  {
    "text": "userfriendly DNS records which are",
    "start": "265520",
    "end": "267440"
  },
  {
    "text": "aligned with your organization",
    "start": "267440",
    "end": "270120"
  },
  {
    "text": "and your admins don't have to take any",
    "start": "270120",
    "end": "272080"
  },
  {
    "text": "kind of actions every time anytime a use",
    "start": "272080",
    "end": "274280"
  },
  {
    "text": "a new resource is spun up or created in",
    "start": "274280",
    "end": "276759"
  },
  {
    "text": "the same",
    "start": "276759",
    "end": "278000"
  },
  {
    "text": "network let's let's just look at this in",
    "start": "278000",
    "end": "280800"
  },
  {
    "text": "action so for example if there's a new",
    "start": "280800",
    "end": "283240"
  },
  {
    "text": "resource that is added verified access",
    "start": "283240",
    "end": "285360"
  },
  {
    "text": "will immediately connect to the new",
    "start": "285360",
    "end": "286800"
  },
  {
    "text": "resource and it generates a public DNS",
    "start": "286800",
    "end": "290360"
  },
  {
    "text": "record in the delegated Zone that uh you",
    "start": "290360",
    "end": "293320"
  },
  {
    "text": "have",
    "start": "293320",
    "end": "294199"
  },
  {
    "text": "delegated and uh it administrators from",
    "start": "294199",
    "end": "297800"
  },
  {
    "text": "their side don't have to take any new",
    "start": "297800",
    "end": "299680"
  },
  {
    "text": "ction to onboard this resource or enable",
    "start": "299680",
    "end": "302039"
  },
  {
    "text": "connectivity to it and at the same time",
    "start": "302039",
    "end": "305120"
  },
  {
    "text": "your end users can simply access the new",
    "start": "305120",
    "end": "308320"
  },
  {
    "text": "resource using the public DNS",
    "start": "308320",
    "end": "312680"
  },
  {
    "text": "record to access non HTTP resources",
    "start": "316360",
    "end": "319479"
  },
  {
    "text": "users would also require a device client",
    "start": "319479",
    "end": "322560"
  },
  {
    "text": "installed on uh their devices we have",
    "start": "322560",
    "end": "325880"
  },
  {
    "text": "launched a new product component called",
    "start": "325880",
    "end": "327800"
  },
  {
    "text": "the connectivity client the connectivity",
    "start": "327800",
    "end": "330720"
  },
  {
    "text": "client is a very lightweight application",
    "start": "330720",
    "end": "332960"
  },
  {
    "text": "that connects your users devices to the",
    "start": "332960",
    "end": "336319"
  },
  {
    "text": "uh to the AWS resources that they want",
    "start": "336319",
    "end": "338800"
  },
  {
    "text": "to access and it runs in the background",
    "start": "338800",
    "end": "341600"
  },
  {
    "text": "allowing developers and analysts to use",
    "start": "341600",
    "end": "344600"
  },
  {
    "text": "their continue using their favorite",
    "start": "344600",
    "end": "346199"
  },
  {
    "text": "tools such as puty or SQL workbench",
    "start": "346199",
    "end": "349319"
  },
  {
    "text": "without any change or",
    "start": "349319",
    "end": "351919"
  },
  {
    "text": "disruption the connectivity client is",
    "start": "351919",
    "end": "354160"
  },
  {
    "text": "available for both Mac and Windows",
    "start": "354160",
    "end": "355880"
  },
  {
    "text": "operating systems and it allows users to",
    "start": "355880",
    "end": "358479"
  },
  {
    "text": "access resources in different different",
    "start": "358479",
    "end": "359919"
  },
  {
    "text": "regions simultaneously without having to",
    "start": "359919",
    "end": "363240"
  },
  {
    "text": "disconnect and",
    "start": "363240",
    "end": "365919"
  },
  {
    "text": "reconnect thank you and uh let's see",
    "start": "365919",
    "end": "369080"
  },
  {
    "text": "this feature in action I'm going to hand",
    "start": "369080",
    "end": "370880"
  },
  {
    "text": "it over to anush for a quick demo thank",
    "start": "370880",
    "end": "374080"
  },
  {
    "text": "you thank you rajath for this demo we",
    "start": "374080",
    "end": "377800"
  },
  {
    "text": "will use this architecture where I have",
    "start": "377800",
    "end": "380639"
  },
  {
    "text": "ec2 instances running in my private",
    "start": "380639",
    "end": "382840"
  },
  {
    "text": "Subnet in my VPC and my remote users",
    "start": "382840",
    "end": "386080"
  },
  {
    "text": "need to SSH into these ec2 instances",
    "start": "386080",
    "end": "388880"
  },
  {
    "text": "over the internet",
    "start": "388880",
    "end": "390720"
  },
  {
    "text": "for this we will use AWS verified access",
    "start": "390720",
    "end": "393680"
  },
  {
    "text": "and we'll see how verified access can",
    "start": "393680",
    "end": "396080"
  },
  {
    "text": "help us to control which user can SSH",
    "start": "396080",
    "end": "399199"
  },
  {
    "text": "into these ec2 instances and which user",
    "start": "399199",
    "end": "402319"
  },
  {
    "text": "cannot for that we'll start by creating",
    "start": "402319",
    "end": "405120"
  },
  {
    "text": "our first component verified access",
    "start": "405120",
    "end": "407199"
  },
  {
    "text": "instance along with the trust providers",
    "start": "407199",
    "end": "410000"
  },
  {
    "text": "as we know verified access support two",
    "start": "410000",
    "end": "412120"
  },
  {
    "text": "type of trust provider identity based or",
    "start": "412120",
    "end": "414800"
  },
  {
    "text": "the device based next we'll create our",
    "start": "414800",
    "end": "418080"
  },
  {
    "text": "verified access group where we can",
    "start": "418080",
    "end": "420199"
  },
  {
    "text": "Define the policy that what type of user",
    "start": "420199",
    "end": "422960"
  },
  {
    "text": "can SSH into these ec2 instances like I",
    "start": "422960",
    "end": "426840"
  },
  {
    "text": "have defined a policy here saying that",
    "start": "426840",
    "end": "429280"
  },
  {
    "text": "if my user email address belong to a",
    "start": "429280",
    "end": "431800"
  },
  {
    "text": "domain 1.com only those users should be",
    "start": "431800",
    "end": "435000"
  },
  {
    "text": "able to SSH into these ec2",
    "start": "435000",
    "end": "438160"
  },
  {
    "text": "instances next we'll create our verified",
    "start": "438160",
    "end": "440840"
  },
  {
    "text": "access end points in this case we will",
    "start": "440840",
    "end": "443240"
  },
  {
    "text": "use the network cider based endpoints",
    "start": "443240",
    "end": "445560"
  },
  {
    "text": "which are the new endpoints we have",
    "start": "445560",
    "end": "447400"
  },
  {
    "text": "released once the this Network endpoints",
    "start": "447400",
    "end": "450720"
  },
  {
    "text": "or the verified access endpoints are",
    "start": "450720",
    "end": "452960"
  },
  {
    "text": "available when the SSH user one will try",
    "start": "452960",
    "end": "456080"
  },
  {
    "text": "to SSH into these ec2 instances based on",
    "start": "456080",
    "end": "459680"
  },
  {
    "text": "the policy we have defined at the group",
    "start": "459680",
    "end": "461680"
  },
  {
    "text": "level this user will be allowed to SSH",
    "start": "461680",
    "end": "464759"
  },
  {
    "text": "into this E2 instances but when the user",
    "start": "464759",
    "end": "468440"
  },
  {
    "text": "two try to SSH into the cc2 instances",
    "start": "468440",
    "end": "471879"
  },
  {
    "text": "the request will be blocked because the",
    "start": "471879",
    "end": "474159"
  },
  {
    "text": "policy we have defined at the group",
    "start": "474159",
    "end": "475800"
  },
  {
    "text": "level only allow users with the domain",
    "start": "475800",
    "end": "478319"
  },
  {
    "text": "name as a domain 1.com is allowed to s",
    "start": "478319",
    "end": "482400"
  },
  {
    "text": "next let's go to the console and see how",
    "start": "482400",
    "end": "484879"
  },
  {
    "text": "it work in",
    "start": "484879",
    "end": "486919"
  },
  {
    "text": "action I've logged in into my 8bl",
    "start": "486919",
    "end": "489879"
  },
  {
    "text": "console and I am on my ec2 dashboard",
    "start": "489879",
    "end": "493000"
  },
  {
    "text": "here you will see the ec2 instance which",
    "start": "493000",
    "end": "494960"
  },
  {
    "text": "my remote users would like to SSH into",
    "start": "494960",
    "end": "497960"
  },
  {
    "text": "and the private IP address of this ec2",
    "start": "497960",
    "end": "500120"
  },
  {
    "text": "instance is",
    "start": "500120",
    "end": "501840"
  },
  {
    "text": "10.0.1",
    "start": "501840",
    "end": "503759"
  },
  {
    "text": "246 next we have created two users SSS",
    "start": "503759",
    "end": "507919"
  },
  {
    "text": "user one which has an email address of",
    "start": "507919",
    "end": "511360"
  },
  {
    "text": "XYZ domain1.com and by the second user",
    "start": "511360",
    "end": "516200"
  },
  {
    "text": "will have a email address of ABC",
    "start": "516200",
    "end": "518880"
  },
  {
    "text": "domain2.com",
    "start": "518880",
    "end": "521880"
  },
  {
    "text": "next let's go to our VPC dashboard and",
    "start": "522560",
    "end": "525640"
  },
  {
    "text": "scroll down towards the bottom under the",
    "start": "525640",
    "end": "528279"
  },
  {
    "text": "AWS verified access first we'll create",
    "start": "528279",
    "end": "531000"
  },
  {
    "text": "our first component verified access tust",
    "start": "531000",
    "end": "533519"
  },
  {
    "text": "provider for that we'll select create",
    "start": "533519",
    "end": "536399"
  },
  {
    "text": "verified access T provider which will",
    "start": "536399",
    "end": "538480"
  },
  {
    "text": "open a new screen",
    "start": "538480",
    "end": "540120"
  },
  {
    "text": "where you will provide the name tag a",
    "start": "540120",
    "end": "542360"
  },
  {
    "text": "description and a policy reference name",
    "start": "542360",
    "end": "545959"
  },
  {
    "text": "the this policy reference name will be",
    "start": "545959",
    "end": "547800"
  },
  {
    "text": "used while writing the policies at the",
    "start": "547800",
    "end": "550360"
  },
  {
    "text": "verified access group and the endpoint",
    "start": "550360",
    "end": "553399"
  },
  {
    "text": "level for the trust provider type we are",
    "start": "553399",
    "end": "556000"
  },
  {
    "text": "creating user trust provider and for",
    "start": "556000",
    "end": "558240"
  },
  {
    "text": "that we'll use our IM identity Center as",
    "start": "558240",
    "end": "560440"
  },
  {
    "text": "the trust provider",
    "start": "560440",
    "end": "562320"
  },
  {
    "text": "type then we'll select create verified",
    "start": "562320",
    "end": "565600"
  },
  {
    "text": "access tust provider for this demo I",
    "start": "565600",
    "end": "568440"
  },
  {
    "text": "have already created a verified access",
    "start": "568440",
    "end": "570680"
  },
  {
    "text": "trust",
    "start": "570680",
    "end": "571800"
  },
  {
    "text": "provider the next component we will",
    "start": "571800",
    "end": "574120"
  },
  {
    "text": "create is verified access instance for",
    "start": "574120",
    "end": "576680"
  },
  {
    "text": "that we'll select create verified access",
    "start": "576680",
    "end": "578600"
  },
  {
    "text": "instance which will open a new screen",
    "start": "578600",
    "end": "581839"
  },
  {
    "text": "there you will provide the name tag in",
    "start": "581839",
    "end": "584480"
  },
  {
    "text": "description for the network cider",
    "start": "584480",
    "end": "586640"
  },
  {
    "text": "endpoint specifically you have option to",
    "start": "586640",
    "end": "589160"
  },
  {
    "text": "provide a custom subdomain so when you",
    "start": "589160",
    "end": "591839"
  },
  {
    "text": "create a network cider end points in Ava",
    "start": "591839",
    "end": "595000"
  },
  {
    "text": "it creates a DNS name for each of your",
    "start": "595000",
    "end": "597680"
  },
  {
    "text": "ec2 instances and that DNS name you can",
    "start": "597680",
    "end": "600680"
  },
  {
    "text": "use to SSH into those ec2 instances if",
    "start": "600680",
    "end": "605279"
  },
  {
    "text": "you'd like to customize those DNS name",
    "start": "605279",
    "end": "607640"
  },
  {
    "text": "with your company DNS name you can",
    "start": "607640",
    "end": "609839"
  },
  {
    "text": "provide the DNS name here and those DNS",
    "start": "609839",
    "end": "612440"
  },
  {
    "text": "names will be customized with your",
    "start": "612440",
    "end": "614200"
  },
  {
    "text": "company domain name in this example I'm",
    "start": "614200",
    "end": "617040"
  },
  {
    "text": "not using any custom domain name but",
    "start": "617040",
    "end": "619640"
  },
  {
    "text": "towards the end of the video I'll show",
    "start": "619640",
    "end": "621440"
  },
  {
    "text": "an example where I have a custom sub",
    "start": "621440",
    "end": "623680"
  },
  {
    "text": "domain and how my endpoints or DNS",
    "start": "623680",
    "end": "626640"
  },
  {
    "text": "endpoint for those ec2 instances looks",
    "start": "626640",
    "end": "628880"
  },
  {
    "text": "different from the regular endpoint DNS",
    "start": "628880",
    "end": "631560"
  },
  {
    "text": "names next you will select the verified",
    "start": "631560",
    "end": "634079"
  },
  {
    "text": "access test provider and select create",
    "start": "634079",
    "end": "636440"
  },
  {
    "text": "verified access",
    "start": "636440",
    "end": "638600"
  },
  {
    "text": "instance for this demo I've already",
    "start": "638600",
    "end": "641000"
  },
  {
    "text": "created a verified access",
    "start": "641000",
    "end": "644440"
  },
  {
    "text": "instance next component will create a",
    "start": "644440",
    "end": "646839"
  },
  {
    "text": "verified access group for that we'll",
    "start": "646839",
    "end": "649079"
  },
  {
    "text": "select create verified access group and",
    "start": "649079",
    "end": "651880"
  },
  {
    "text": "it will open a new page where you will",
    "start": "651880",
    "end": "655040"
  },
  {
    "text": "provide the name tag a description you",
    "start": "655040",
    "end": "657440"
  },
  {
    "text": "will select the verified access instance",
    "start": "657440",
    "end": "659519"
  },
  {
    "text": "which we created and you will provide",
    "start": "659519",
    "end": "661519"
  },
  {
    "text": "the policy here you can see we use the",
    "start": "661519",
    "end": "664200"
  },
  {
    "text": "same policy reference name which we",
    "start": "664200",
    "end": "666000"
  },
  {
    "text": "provided while creating the trust",
    "start": "666000",
    "end": "667680"
  },
  {
    "text": "provider and this policy is saying that",
    "start": "667680",
    "end": "670959"
  },
  {
    "text": "any user who has an email address with",
    "start": "670959",
    "end": "673639"
  },
  {
    "text": "the domain name of domain 1.com will be",
    "start": "673639",
    "end": "676360"
  },
  {
    "text": "allowed to access my endpoints so we",
    "start": "676360",
    "end": "679440"
  },
  {
    "text": "have a we have two users SSS user one",
    "start": "679440",
    "end": "682600"
  },
  {
    "text": "which has the email address ending with",
    "start": "682600",
    "end": "684360"
  },
  {
    "text": "domain name domain1.com so that user",
    "start": "684360",
    "end": "687000"
  },
  {
    "text": "should be able to access our application",
    "start": "687000",
    "end": "689480"
  },
  {
    "text": "but the second user who has an email",
    "start": "689480",
    "end": "691880"
  },
  {
    "text": "address of ABC domain2.com should not be",
    "start": "691880",
    "end": "695360"
  },
  {
    "text": "able to access or SSH into the PC2",
    "start": "695360",
    "end": "698720"
  },
  {
    "text": "instances we'll select create verified",
    "start": "698720",
    "end": "701560"
  },
  {
    "text": "access group and it will create a",
    "start": "701560",
    "end": "703839"
  },
  {
    "text": "verified access group for this demo I",
    "start": "703839",
    "end": "706160"
  },
  {
    "text": "have already created a verified access",
    "start": "706160",
    "end": "709519"
  },
  {
    "text": "group Next component we will create",
    "start": "709519",
    "end": "712040"
  },
  {
    "text": "verified access and points for that",
    "start": "712040",
    "end": "714880"
  },
  {
    "text": "we'll select create verified access end",
    "start": "714880",
    "end": "717040"
  },
  {
    "text": "point which will open a new screen",
    "start": "717040",
    "end": "720519"
  },
  {
    "text": "there we will provide a name tag a",
    "start": "720519",
    "end": "722839"
  },
  {
    "text": "description and verified access group",
    "start": "722839",
    "end": "725480"
  },
  {
    "text": "with which this endpoint will be",
    "start": "725480",
    "end": "728480"
  },
  {
    "text": "Associated then we'll select the",
    "start": "728480",
    "end": "730320"
  },
  {
    "text": "protocol TCP attachment type as VPC and",
    "start": "730320",
    "end": "734079"
  },
  {
    "text": "endpoint type as Network CER if you want",
    "start": "734079",
    "end": "737079"
  },
  {
    "text": "to create Endo for the RDS database you",
    "start": "737079",
    "end": "739600"
  },
  {
    "text": "can do that as well by selecting Amazon",
    "start": "739600",
    "end": "741800"
  },
  {
    "text": "RDS",
    "start": "741800",
    "end": "744519"
  },
  {
    "text": "endpoints we'll select the VPC where our",
    "start": "744519",
    "end": "747440"
  },
  {
    "text": "E2 instances are running and then we'll",
    "start": "747440",
    "end": "750040"
  },
  {
    "text": "provide a side range what AWS verified",
    "start": "750040",
    "end": "753160"
  },
  {
    "text": "access will do it will create a separate",
    "start": "753160",
    "end": "756399"
  },
  {
    "text": "domain name for each of the IP address",
    "start": "756399",
    "end": "758880"
  },
  {
    "text": "of this side of range so if you want to",
    "start": "758880",
    "end": "761800"
  },
  {
    "text": "give access SSH access to all the ac2",
    "start": "761800",
    "end": "764720"
  },
  {
    "text": "instances running in your VPC you can",
    "start": "764720",
    "end": "766839"
  },
  {
    "text": "provide the CER range of the VPC or if",
    "start": "766839",
    "end": "769800"
  },
  {
    "text": "you want to restrict it to a particular",
    "start": "769800",
    "end": "771600"
  },
  {
    "text": "subnet then you can provide the CER",
    "start": "771600",
    "end": "773639"
  },
  {
    "text": "range of that particular subnet as well",
    "start": "773639",
    "end": "776560"
  },
  {
    "text": "then we'll provide the port range",
    "start": "776560",
    "end": "779199"
  },
  {
    "text": "because we are providing access to SSH",
    "start": "779199",
    "end": "781440"
  },
  {
    "text": "then we are using only the port 22 here",
    "start": "781440",
    "end": "784880"
  },
  {
    "text": "we select the subnets where AV end",
    "start": "784880",
    "end": "787399"
  },
  {
    "text": "points Enis will be created and a",
    "start": "787399",
    "end": "789680"
  },
  {
    "text": "security group if you want to use a",
    "start": "789680",
    "end": "792240"
  },
  {
    "text": "prefix to your domain name you can do",
    "start": "792240",
    "end": "794199"
  },
  {
    "text": "that by adding a prefix here in addition",
    "start": "794199",
    "end": "798480"
  },
  {
    "text": "to that if you want to enforce",
    "start": "798480",
    "end": "800120"
  },
  {
    "text": "additional policy at the endpoint level",
    "start": "800120",
    "end": "802079"
  },
  {
    "text": "you have option to put that policy as",
    "start": "802079",
    "end": "804079"
  },
  {
    "text": "well for this demo we are not using any",
    "start": "804079",
    "end": "806279"
  },
  {
    "text": "additional policy and then we'll select",
    "start": "806279",
    "end": "808480"
  },
  {
    "text": "create verified access end point for",
    "start": "808480",
    "end": "811079"
  },
  {
    "text": "this demo we have already created a",
    "start": "811079",
    "end": "812720"
  },
  {
    "text": "verified access end point verified",
    "start": "812720",
    "end": "815720"
  },
  {
    "text": "access also provides your DS record for",
    "start": "815720",
    "end": "818920"
  },
  {
    "text": "each of the used IP from the CER range",
    "start": "818920",
    "end": "821480"
  },
  {
    "text": "you provided while creating the endpoint",
    "start": "821480",
    "end": "824600"
  },
  {
    "text": "here you will notice that the DNS used",
    "start": "824600",
    "end": "827320"
  },
  {
    "text": "or the domain used for these DNS names",
    "start": "827320",
    "end": "829519"
  },
  {
    "text": "are owned by AWS but if you would have",
    "start": "829519",
    "end": "832480"
  },
  {
    "text": "provided a custom DNS name while",
    "start": "832480",
    "end": "835079"
  },
  {
    "text": "creating your verified access instance",
    "start": "835079",
    "end": "837240"
  },
  {
    "text": "in that case verified access instance",
    "start": "837240",
    "end": "840320"
  },
  {
    "text": "will use that particular custom domain",
    "start": "840320",
    "end": "842519"
  },
  {
    "text": "which you provided while creating the",
    "start": "842519",
    "end": "844320"
  },
  {
    "text": "instance and here is an example of that",
    "start": "844320",
    "end": "847839"
  },
  {
    "text": "next we will use the DNS name or the",
    "start": "847839",
    "end": "850560"
  },
  {
    "text": "domain name provided here to SSH into",
    "start": "850560",
    "end": "853560"
  },
  {
    "text": "that dc2 instance to SSH into the ec2",
    "start": "853560",
    "end": "857079"
  },
  {
    "text": "instance by using verified access end",
    "start": "857079",
    "end": "859199"
  },
  {
    "text": "points you need to download the",
    "start": "859199",
    "end": "861079"
  },
  {
    "text": "connectivity client and install it on",
    "start": "861079",
    "end": "863680"
  },
  {
    "text": "your computer so based on your operating",
    "start": "863680",
    "end": "865959"
  },
  {
    "text": "system you can download it it from a",
    "start": "865959",
    "end": "868279"
  },
  {
    "text": "documentation",
    "start": "868279",
    "end": "869639"
  },
  {
    "text": "next you need to export the client",
    "start": "869639",
    "end": "871360"
  },
  {
    "text": "configuration file from the verified",
    "start": "871360",
    "end": "873440"
  },
  {
    "text": "exess instance for that you will go to",
    "start": "873440",
    "end": "875600"
  },
  {
    "text": "verified exess instance page select the",
    "start": "875600",
    "end": "877880"
  },
  {
    "text": "instance click on action and Export",
    "start": "877880",
    "end": "880160"
  },
  {
    "text": "client configuration and then you will",
    "start": "880160",
    "end": "882399"
  },
  {
    "text": "deploy this configuration file at a",
    "start": "882399",
    "end": "884720"
  },
  {
    "text": "particular location as mentioned in A+",
    "start": "884720",
    "end": "887839"
  },
  {
    "text": "documentation I have performed both of",
    "start": "887839",
    "end": "889959"
  },
  {
    "text": "those activity and have installed the",
    "start": "889959",
    "end": "892040"
  },
  {
    "text": "connectivity client next we'll open the",
    "start": "892040",
    "end": "895360"
  },
  {
    "text": "connectivity CLI and we click on signing",
    "start": "895360",
    "end": "900160"
  },
  {
    "text": "it will open my AWS portal where we can",
    "start": "901279",
    "end": "904199"
  },
  {
    "text": "provide the SSS",
    "start": "904199",
    "end": "905880"
  },
  {
    "text": "user ID so my username and I'll click on",
    "start": "905880",
    "end": "909240"
  },
  {
    "text": "next we'll provide the",
    "start": "909240",
    "end": "912000"
  },
  {
    "text": "password and sign",
    "start": "912000",
    "end": "915480"
  },
  {
    "text": "in click on allow",
    "start": "917199",
    "end": "920920"
  },
  {
    "text": "access and within few minutes our",
    "start": "922399",
    "end": "925000"
  },
  {
    "text": "connectivity client will be connected",
    "start": "925000",
    "end": "927320"
  },
  {
    "text": "next we'll go to the terminal and we'll",
    "start": "927320",
    "end": "929800"
  },
  {
    "text": "try to SSH into this ec2 instance by",
    "start": "929800",
    "end": "932759"
  },
  {
    "text": "using that DNS name okay I have opened",
    "start": "932759",
    "end": "935519"
  },
  {
    "text": "my terminal and will try to SS into this",
    "start": "935519",
    "end": "939240"
  },
  {
    "text": "ec2",
    "start": "939240",
    "end": "940920"
  },
  {
    "text": "instance here we see the moment we give",
    "start": "940920",
    "end": "943560"
  },
  {
    "text": "our Command we are able to access this",
    "start": "943560",
    "end": "945319"
  },
  {
    "text": "ec2 instance over P22 next let's login",
    "start": "945319",
    "end": "949079"
  },
  {
    "text": "by using our second user SSH user 2 who",
    "start": "949079",
    "end": "952240"
  },
  {
    "text": "is using the domain2.com which is not",
    "start": "952240",
    "end": "955240"
  },
  {
    "text": "allowed by Ava group policy and see",
    "start": "955240",
    "end": "958120"
  },
  {
    "text": "whether we can search into this C2",
    "start": "958120",
    "end": "960279"
  },
  {
    "text": "instance or not I have opened my",
    "start": "960279",
    "end": "962319"
  },
  {
    "text": "connectivity client and we click on sign",
    "start": "962319",
    "end": "966240"
  },
  {
    "text": "in here we'll provide our second user",
    "start": "966240",
    "end": "969279"
  },
  {
    "text": "SSH user to sign in provide the",
    "start": "969279",
    "end": "974759"
  },
  {
    "text": "password okay my connectivity client is",
    "start": "979680",
    "end": "982040"
  },
  {
    "text": "connected now let's try to do SSH by",
    "start": "982040",
    "end": "985000"
  },
  {
    "text": "using this user let's rerun this SSH",
    "start": "985000",
    "end": "987839"
  },
  {
    "text": "command",
    "start": "987839",
    "end": "989360"
  },
  {
    "text": "and this time you will see you're not",
    "start": "989360",
    "end": "991160"
  },
  {
    "text": "able to SSH into the ec2 instance",
    "start": "991160",
    "end": "994360"
  },
  {
    "text": "because of the policy written at the",
    "start": "994360",
    "end": "996120"
  },
  {
    "text": "verified access group level this",
    "start": "996120",
    "end": "998319"
  },
  {
    "text": "concludes our demo for today here we saw",
    "start": "998319",
    "end": "1001160"
  },
  {
    "text": "how you can create verified access",
    "start": "1001160",
    "end": "1002880"
  },
  {
    "text": "instance and points how you can write",
    "start": "1002880",
    "end": "1005440"
  },
  {
    "text": "policies at the group level and how you",
    "start": "1005440",
    "end": "1007720"
  },
  {
    "text": "can control which user can SSH into dc2",
    "start": "1007720",
    "end": "1011120"
  },
  {
    "text": "instances and which user cannot thank",
    "start": "1011120",
    "end": "1013759"
  },
  {
    "text": "you so much for watching Fox have a nice",
    "start": "1013759",
    "end": "1016000"
  },
  {
    "text": "day bye",
    "start": "1016000",
    "end": "1019360"
  }
]