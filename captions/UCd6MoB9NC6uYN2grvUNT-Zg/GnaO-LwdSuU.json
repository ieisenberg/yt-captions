[
  {
    "start": "0",
    "end": "18000"
  },
  {
    "text": "hi folks I'm AJ ner the senior product manager in charge of AWS Lambda and",
    "start": "1040",
    "end": "6160"
  },
  {
    "text": "welcome to MBL 302 along with Olivia cleen a member of our AWS Solutions",
    "start": "6160",
    "end": "11679"
  },
  {
    "text": "Architects team we're here to talk to you about building scalable serverless mobile and iot back ends with AWS",
    "start": "11679",
    "end": "18480"
  },
  {
    "start": "18000",
    "end": "65000"
  },
  {
    "text": "Lambda for those who ARF familiar with the service we're going to start with a brief introduction what Lambda is what",
    "start": "18480",
    "end": "24080"
  },
  {
    "text": "benefits it offers you as developers what people are doing with it and how you put it to work we we'll then walk",
    "start": "24080",
    "end": "30599"
  },
  {
    "text": "through a step-by-step introduction into building a geosocial application using",
    "start": "30599",
    "end": "36040"
  },
  {
    "text": "the suit of services that AWS offers for helping mobile developers such as you these include Amazon Cognito analytics",
    "start": "36040",
    "end": "42920"
  },
  {
    "text": "SNS Dynamo DB and of course Lambda at its heart finally we will have easy1 uh",
    "start": "42920",
    "end": "50360"
  },
  {
    "text": "top 10 uh top five actually uh Russian App Store member who will walk through",
    "start": "50360",
    "end": "55399"
  },
  {
    "text": "how they rebuild their entire mobile back end powering the application with AWS Lambda at its heart and adopt the",
    "start": "55399",
    "end": "61559"
  },
  {
    "text": "serverless approach so let's get started a little bit about",
    "start": "61559",
    "end": "67759"
  },
  {
    "start": "65000",
    "end": "115000"
  },
  {
    "text": "Lambda we talk about Lambda as a event driven compute service when we say compute service we",
    "start": "67759",
    "end": "74680"
  },
  {
    "text": "mean that it allows you to run code arbitrary code of your choice without having to manage any servers you simply",
    "start": "74680",
    "end": "81119"
  },
  {
    "text": "give us your code as a Lambda function and AWS takes care of the rest we",
    "start": "81119",
    "end": "86479"
  },
  {
    "text": "provision the capacity route the requests uh load balance across the traffic required configure the",
    "start": "86479",
    "end": "91880"
  },
  {
    "text": "environment there's no additional step that you need to do other than Supply the code now the code that you give us",
    "start": "91880",
    "end": "98479"
  },
  {
    "text": "only runs when it needs to run in response to what we call events these events can be changes in data changes in",
    "start": "98479",
    "end": "104560"
  },
  {
    "text": "state of your various infrastructure in HTTP request from your client or direct calls to our",
    "start": "104560",
    "end": "111920"
  },
  {
    "start": "115000",
    "end": "225000"
  },
  {
    "text": "apis all right building applications with Lambda offers you three key benefits first the approach is",
    "start": "115000",
    "end": "121360"
  },
  {
    "text": "serverless and when I say serverless not that there are unicorns powering it in the back end it's just that you don't",
    "start": "121360",
    "end": "127000"
  },
  {
    "text": "have to think about the servers that are doing the work there's no capacity to provision no load balance to set up no network to",
    "start": "127000",
    "end": "133920"
  },
  {
    "text": "configure no environments to patch no machines to Tinker around to build a highly available scalable",
    "start": "133920",
    "end": "140959"
  },
  {
    "text": "application the operational task that you're saving time on have a direct impact on your productivity for example",
    "start": "140959",
    "end": "147640"
  },
  {
    "text": "withraw who's built their video ads serving system using Lambda tell us that",
    "start": "147640",
    "end": "152720"
  },
  {
    "text": "what previously used to take them 10 developers now takes them three so straight up 3x productivity for the same",
    "start": "152720",
    "end": "157920"
  },
  {
    "text": "kind of task that they were doing for building the application second Lambda offers event",
    "start": "157920",
    "end": "164000"
  },
  {
    "text": "driven scale what this means is Lambda automatically spins up the amount of capacity or instances of your code",
    "start": "164000",
    "end": "170840"
  },
  {
    "text": "required to serve as many number of events are being called for your code there's no capacity to provision there's",
    "start": "170840",
    "end": "176480"
  },
  {
    "text": "no over-provisioning or under-provisioning there are no Auto scaling rules to set up Lambda automatically figures out what is",
    "start": "176480",
    "end": "182239"
  },
  {
    "text": "needed for the incoming traffic and sets up the number of code whether you are a small startup on day one getting 100",
    "start": "182239",
    "end": "188480"
  },
  {
    "text": "requests a day or someone like localytics who's doing billions of events through Kinesis and Lambda Lambda",
    "start": "188480",
    "end": "195159"
  },
  {
    "text": "automatically sets up the amount of scale required for your operations third and in some ways the",
    "start": "195159",
    "end": "200840"
  },
  {
    "text": "one that actually excites a lot of developers is subsec billing with Lambda you only pay when your code is executing",
    "start": "200840",
    "end": "207799"
  },
  {
    "text": "you pay when your code starts running to the time when your code stops running in units of 100 milliseconds right so think",
    "start": "207799",
    "end": "214760"
  },
  {
    "text": "about it with Lambda you're not paying for idle ever you're only paying when your code is actually executing which",
    "start": "214760",
    "end": "220400"
  },
  {
    "text": "means you can build a very highs Scale app potentially at very low",
    "start": "220400",
    "end": "225360"
  },
  {
    "start": "225000",
    "end": "312000"
  },
  {
    "text": "cost while Lambda changes the way you operate and build your applications we still want to make certain things",
    "start": "225680",
    "end": "231879"
  },
  {
    "text": "exactly the same Lambda allows you to bring your own code in languages you know and love uh",
    "start": "231879",
    "end": "237879"
  },
  {
    "text": "Lambda supports node in Java and as of the morning it supports python um you can write the code uh shell out to",
    "start": "237879",
    "end": "244079"
  },
  {
    "text": "binaries have threads working package native dependencies write application code the exact same way that you do",
    "start": "244079",
    "end": "250040"
  },
  {
    "text": "today package it as a Lambda function and deploy it you have control of how much compute power is available to your",
    "start": "250040",
    "end": "256239"
  },
  {
    "text": "Lambda function Lambda gives you a simple resource model simply slide up the memory in units of 64 MB all the way",
    "start": "256239",
    "end": "262199"
  },
  {
    "text": "up to 1.5 gigs and it allocates proportional CPU to you essentially giving you a bigger and bigger box you",
    "start": "262199",
    "end": "268240"
  },
  {
    "text": "need more compute power on Hos SP on the kind of code you have you just dial up that single dial the same function that",
    "start": "268240",
    "end": "274560"
  },
  {
    "text": "you set up can be invoked in different ways you can configure it automatically to run when certain events happen such",
    "start": "274560",
    "end": "280320"
  },
  {
    "text": "as an S3 bucket getting updated a Dynamo DV table getting updated or a Kinesis stream getting updated you can invoke",
    "start": "280320",
    "end": "286639"
  },
  {
    "text": "the function using an HTTP request by fronting it with API Gateway or you can use the Lambda apis to write your own",
    "start": "286639",
    "end": "293080"
  },
  {
    "text": "client or the mobile sdks is to write your own client and just invoke the Lambda function on demand and finally",
    "start": "293080",
    "end": "299360"
  },
  {
    "text": "while your code can do anything it's your code after all what it does within the AWS ecosystem is completely under",
    "start": "299360",
    "end": "305400"
  },
  {
    "text": "your control because Lambda works with the identity and access management tools that AWS offers",
    "start": "305400",
    "end": "312000"
  },
  {
    "start": "312000",
    "end": "397000"
  },
  {
    "text": "you now Lambda is a way to build application so there's a development workflow again we the goal here is",
    "start": "312000",
    "end": "317680"
  },
  {
    "text": "familiarity build applications the same way that you do it but changes the way how it runs in the cloud first uh you",
    "start": "317680",
    "end": "324199"
  },
  {
    "text": "can author Lambda functions the tools you care about we support Eclipse ID plugins you can use the Lambda console for author the code that you care about",
    "start": "324199",
    "end": "330840"
  },
  {
    "text": "if it's a node and python Visual Studio ID plugins for node.js or whim for the",
    "start": "330840",
    "end": "336240"
  },
  {
    "text": "power users you have inside here once your code is written you specify a few simple configurations the amount of",
    "start": "336240",
    "end": "342400"
  },
  {
    "text": "memory you need the role you wanted to assume for the permissions that you care about the event sources that you want to",
    "start": "342400",
    "end": "348000"
  },
  {
    "text": "trigger this particular function or the API Gateway you wanted to be associated with you take the library dependencies",
    "start": "348000",
    "end": "354800"
  },
  {
    "text": "and the code that you have and the configuration and package it as a deployment package and publish it to",
    "start": "354800",
    "end": "360479"
  },
  {
    "text": "Lambda to do this you can use cicd tools that you're familiar with uh Lambda has a Jenkins plugin supports thoughtworks",
    "start": "360479",
    "end": "367440"
  },
  {
    "text": "uh has grunt plugins as of this morning we uh announc the ability for you to version and deploy your functions so you",
    "start": "367440",
    "end": "373800"
  },
  {
    "text": "can follow a stage deployment approach for pushing your Lambda code outside once your code is up and running",
    "start": "373800",
    "end": "380599"
  },
  {
    "text": "Lambda automatically instruments and monitor your code and publishes all the logs into cloudwatch logs any statements",
    "start": "380599",
    "end": "386440"
  },
  {
    "text": "that you write in your code for logging automatically get published corresponding cloudwatch log stream and",
    "start": "386440",
    "end": "391720"
  },
  {
    "text": "generate corresponding cloudwatch log metrics such as invocations durations and",
    "start": "391720",
    "end": "397800"
  },
  {
    "start": "397000",
    "end": "527000"
  },
  {
    "text": "errors that's great so what do people do with an event Ren compute system we see",
    "start": "398120",
    "end": "403160"
  },
  {
    "text": "three major patterns first people building interactive backends you have a",
    "start": "403160",
    "end": "408440"
  },
  {
    "text": "Lambda function you invoke it synchronously using the mobile SDK client or using HTTP you will actually",
    "start": "408440",
    "end": "414280"
  },
  {
    "text": "see a great example of this when easy 10 is up on stage the second big pattern we see is",
    "start": "414280",
    "end": "420199"
  },
  {
    "text": "having customers use Lambda for data processing customers like Thompson Reuters are using S3 plus Lambda for",
    "start": "420199",
    "end": "427080"
  },
  {
    "text": "doing large scale file processing of all the content they get from different Publishers you can use Lambda for log",
    "start": "427080",
    "end": "433199"
  },
  {
    "text": "filtering video pron coding and all the way a genetic algorithm matching like some of our customers have been able to",
    "start": "433199",
    "end": "439160"
  },
  {
    "text": "do the point I want to make here though is since Lambda allows you to run arbitrary code the complexity of the",
    "start": "439160",
    "end": "445199"
  },
  {
    "text": "task that you can do is essentially bounded by essentially the code that you can write",
    "start": "445199",
    "end": "451520"
  },
  {
    "text": "the same model applies to Dynamo DB the ability for you to write triggers for a nosql store opens up new avenues you can",
    "start": "451639",
    "end": "457599"
  },
  {
    "text": "now validate individual rows that are being written to Dynamo DB you can add calculated columns as soon as the data",
    "start": "457599",
    "end": "463240"
  },
  {
    "text": "is written you can uh copy a partition copy of your data into cross regions all",
    "start": "463240",
    "end": "468520"
  },
  {
    "text": "with a single Lambda functions attached to your Dynamo DB table in the third pattern in some ways",
    "start": "468520",
    "end": "474599"
  },
  {
    "text": "the most fun pattern is Lambda acting is sort of an extensibility story for various AWS Services as well as non AWS",
    "start": "474599",
    "end": "483159"
  },
  {
    "text": "services for example Lambda is being used to power Alexa voice skills you can write a Lambda function that Define what",
    "start": "483159",
    "end": "489599"
  },
  {
    "text": "happens when you talk to Alexa The Voice Assistant offered by Amazon you can",
    "start": "489599",
    "end": "494800"
  },
  {
    "text": "specify a Lambda function as a custom resource within a cloud formation deployment that tells what happens or",
    "start": "494800",
    "end": "501240"
  },
  {
    "text": "what should happen when a stack is deployed and completed uh uh deployment over there you can also use Lambda as an",
    "start": "501240",
    "end": "507599"
  },
  {
    "text": "extension for simple notification service and customize what happens or uh",
    "start": "507599",
    "end": "512880"
  },
  {
    "text": "when an SNS notification comes in this opens up Avenues such as using Lambda for customizing cloudwatch alarms that",
    "start": "512880",
    "end": "519200"
  },
  {
    "text": "many of you will be managing in your day-to-day tasks and the list continues to grow now today we're going to be",
    "start": "519200",
    "end": "525320"
  },
  {
    "text": "focusing on a specific pattern which is using Lambda for cloud backends for mobile apps but stepping back a second",
    "start": "525320",
    "end": "531880"
  },
  {
    "start": "527000",
    "end": "638000"
  },
  {
    "text": "what does that mean right when we think of a mobile back end in the cloud we",
    "start": "531880",
    "end": "537160"
  },
  {
    "text": "think of things that are not not they're impossible to do on the device but they are hard to do think about things like",
    "start": "537160",
    "end": "543880"
  },
  {
    "text": "user Administration storing the identity uh and credentials associated with the user properties associated with the user",
    "start": "543880",
    "end": "550800"
  },
  {
    "text": "that you want to make available across multiple devices they log in on where would you store the content that's being",
    "start": "550800",
    "end": "556000"
  },
  {
    "text": "uploaded through a mobile device as part of interacting with your app uh what about push notifications if you want to",
    "start": "556000",
    "end": "561640"
  },
  {
    "text": "engage customers as a result of their app activity or as a result of someone else using your app how do you engage",
    "start": "561640",
    "end": "567200"
  },
  {
    "text": "back to them analyzing user behav Behavior so that you know what are the next cool set of features you should be building for the things that your",
    "start": "567200",
    "end": "573200"
  },
  {
    "text": "customers are doing and last and something that probably not everyone thinks of is where your app logic should",
    "start": "573200",
    "end": "579399"
  },
  {
    "text": "be running app logic in the client is great but now that adds an additional",
    "start": "579399",
    "end": "584640"
  },
  {
    "text": "task for rebuilding it when you're having a crossplatform opportunity or pushing out new versions of your code",
    "start": "584640",
    "end": "590120"
  },
  {
    "text": "requires you to propagate through the App Store the back end that you build has",
    "start": "590120",
    "end": "595399"
  },
  {
    "text": "some certain unique characteristics we have heard a lot from mobile Developers cost should follow usage if my app is",
    "start": "595399",
    "end": "601320"
  },
  {
    "text": "not getting the millions of users I thought it would on day one I don't want to be paying for the cost of supporting",
    "start": "601320",
    "end": "606720"
  },
  {
    "text": "millions of users if I get the million users hey take my money right uh minimal",
    "start": "606720",
    "end": "612000"
  },
  {
    "text": "undifferentiated heavy lifting which is my job is to build a app the app logic is what makes my business different but",
    "start": "612000",
    "end": "618440"
  },
  {
    "text": "I don't want to be in the business of configuring infrastructure iterating quickly and reducing my time to Market",
    "start": "618440",
    "end": "624440"
  },
  {
    "text": "such that I can get the next fature out there and grow my user base and finally when that suc access point comes in I",
    "start": "624440",
    "end": "630680"
  },
  {
    "text": "get the instant scale I need while maintaining a reliable and secure back end that doesn't drop the experience for",
    "start": "630680",
    "end": "636160"
  },
  {
    "text": "my customers AWS offers a suit of services",
    "start": "636160",
    "end": "641600"
  },
  {
    "start": "638000",
    "end": "703000"
  },
  {
    "text": "that allow you to uh build different pieces of this we have Amazon Cognito that allows you to authenticate your end",
    "start": "641600",
    "end": "647720"
  },
  {
    "text": "users and store user data associated with them Amazon S3 gives you a reliable",
    "start": "647720",
    "end": "652880"
  },
  {
    "text": "store for any content that's being pushed in through your app SNS allows you to engage with these",
    "start": "652880",
    "end": "658680"
  },
  {
    "text": "customers through simp push notifications and mobile analytics allows you to analyze the behavior of",
    "start": "658680",
    "end": "664240"
  },
  {
    "text": "the users within your app and figure out through easy to use analytics what the next step should be and Lambda gives you",
    "start": "664240",
    "end": "671279"
  },
  {
    "text": "a way to run the business logic that you need to back back your app and a way to glue all these Services together without",
    "start": "671279",
    "end": "677079"
  },
  {
    "text": "having to set up and manage any servers along with Dynamo DB that gives you reliable no SQL store the mobile sdks",
    "start": "677079",
    "end": "684600"
  },
  {
    "text": "that give you a front an easy way to integrate within your mobile app independent of platform",
    "start": "684600",
    "end": "689760"
  },
  {
    "text": "and API Gateway that opens up the possibility to use your back end across different clients including web apps you",
    "start": "689760",
    "end": "695519"
  },
  {
    "text": "now have a pretty rich powerful set of tools to build the back end that you",
    "start": "695519",
    "end": "701360"
  },
  {
    "text": "need so enough Theory let's get back into what a real app looks",
    "start": "701360",
    "end": "706399"
  },
  {
    "start": "703000",
    "end": "790000"
  },
  {
    "text": "like we're going to walk you through an app that we call find like it creates a",
    "start": "706399",
    "end": "711800"
  },
  {
    "text": "profile with interests and gets notified when like-minded users are nearby at reinvent we have lock lot of like-minded",
    "start": "711800",
    "end": "718480"
  },
  {
    "text": "people everyone's asking the question where's the best food where should I go for the pop crawl is Taylor Swift really",
    "start": "718480",
    "end": "724560"
  },
  {
    "text": "going to show up at the replay conference these are all important discussions that people like to have and an app like this can help how would you",
    "start": "724560",
    "end": "730920"
  },
  {
    "text": "go about building this app right you as a user come in I set up a profile",
    "start": "730920",
    "end": "736279"
  },
  {
    "text": "specify what my interests are maybe upload a picture straightforward enough many of you build apps that do that I",
    "start": "736279",
    "end": "743480"
  },
  {
    "text": "want to be able to track the location of you as a user and tell you where you are so that I can find nearby people little",
    "start": "743480",
    "end": "749279"
  },
  {
    "text": "bit more complicated requires some custom logic in the back end doable and now comes out of the secret source of",
    "start": "749279",
    "end": "754959"
  },
  {
    "text": "your app which is when locations change interest change or even your profile change figuring out and then notifying",
    "start": "754959",
    "end": "760920"
  },
  {
    "text": "you hey someone nearby likes the same things that you do all the while keeping and tracking what the interesting",
    "start": "760920",
    "end": "767720"
  },
  {
    "text": "behavior of the app of your end user is within your app now to walk you through the code and the architecture involved",
    "start": "767720",
    "end": "773440"
  },
  {
    "text": "in this I'm going to invite Olivia on stage Olivia",
    "start": "773440",
    "end": "779800"
  },
  {
    "text": "thank you RJ good afternoon everyone so basically when we develop an application it's good",
    "start": "781079",
    "end": "787920"
  },
  {
    "text": "to think about the functionalities but another thing that I like to do when I develop something is to say how about we",
    "start": "787920",
    "end": "793440"
  },
  {
    "start": "790000",
    "end": "899000"
  },
  {
    "text": "break this down into different kind of layers and approach it like an onion that we peel um if you think about this",
    "start": "793440",
    "end": "800199"
  },
  {
    "text": "app where we say okay I can collect interests from a certain user he creates a profile he tells us what he likes and",
    "start": "800199",
    "end": "806720"
  },
  {
    "text": "then we track his location and we match at those users together that are in the same vcinity and have similar interests",
    "start": "806720",
    "end": "813480"
  },
  {
    "text": "we could see that by laying it in three layers the first one would be what I like to refer to as the app Centric",
    "start": "813480",
    "end": "819920"
  },
  {
    "text": "layer the U layer what you do within that application on your phone this would be creating your profile taking a",
    "start": "819920",
    "end": "827040"
  },
  {
    "text": "selfie of yourself uploading that into your profile and also tracking the usage of what you're doing the next thing now",
    "start": "827040",
    "end": "834199"
  },
  {
    "text": "is as you use that app you're going to walk around with it you're going to add new interests into it this is the",
    "start": "834199",
    "end": "840120"
  },
  {
    "text": "activity Centric um layer that we're going to talk about which is the second one so track the location and collect",
    "start": "840120",
    "end": "846279"
  },
  {
    "text": "the user interests lastly as we now have multiple users using that app and we're tracking",
    "start": "846279",
    "end": "852279"
  },
  {
    "text": "locations of many different users and different vicinities including the interests that they have we want to now",
    "start": "852279",
    "end": "858360"
  },
  {
    "text": "match users that together with similar like-minded interest in a certain radius",
    "start": "858360",
    "end": "863399"
  },
  {
    "text": "and then alert them accordingly if we want to built this with AWS on the right side you see the service icons of what",
    "start": "863399",
    "end": "870360"
  },
  {
    "text": "we would use so for the first layer we're going to leverage on Amazon Cognito Amazon mobile analytics and",
    "start": "870360",
    "end": "876480"
  },
  {
    "text": "Amazon S3 for the second layer we're going to leverage Amazon's API Gateway",
    "start": "876480",
    "end": "881560"
  },
  {
    "text": "AWS Lambda and also Dynamo DB to store the interests and lastly when we match",
    "start": "881560",
    "end": "887079"
  },
  {
    "text": "an alert users the matching logic we're going to put it into a Lambda function and to notify the users we're going to",
    "start": "887079",
    "end": "893360"
  },
  {
    "text": "use Amazon SNS mobile push all right so let's go to this one by one one so first",
    "start": "893360",
    "end": "900759"
  },
  {
    "text": "layer creating a profile uploading cing and tracking Usage Now when we want to use AWS Services we generally want to",
    "start": "900759",
    "end": "908680"
  },
  {
    "text": "not write the restful API calls ourselves for that reason we have sdks for various programming languages now",
    "start": "908680",
    "end": "915639"
  },
  {
    "text": "this includes sdks that are specifically targeted for mobile specifically for IOS",
    "start": "915639",
    "end": "921880"
  },
  {
    "text": "and Android and we also got some other Frameworks like Unity for example where we got sdks for it why would I use that",
    "start": "921880",
    "end": "929199"
  },
  {
    "text": "mobile SDK well it doesn't only allow me to talk to the core building block Services which the other sdks would do",
    "start": "929199",
    "end": "935680"
  },
  {
    "text": "but it also adds another layer which is mobile optimized connectors to those Services as you know with a mobile",
    "start": "935680",
    "end": "942600"
  },
  {
    "text": "device you might not always have connectivity it might be choppy uh you might not always be connected Etc if you",
    "start": "942600",
    "end": "948759"
  },
  {
    "text": "write your own API calls yourself you kind of need to handle that if you do a file upload you need to make sure it",
    "start": "948759",
    "end": "953920"
  },
  {
    "text": "resumes you want to write something into a kinesia stream you want to make sure it's available or not or buffer it if it",
    "start": "953920",
    "end": "960000"
  },
  {
    "text": "isn't and then you know have kind of a exponential back off uh algorithm that",
    "start": "960000",
    "end": "965079"
  },
  {
    "text": "retries if it wouldn't work those optimized connectors do that for you so if you use the mobile SDK and you",
    "start": "965079",
    "end": "971720"
  },
  {
    "text": "leverage for example the SV transfer utility then we take all that heavy lift of retrying and resuming things for you",
    "start": "971720",
    "end": "980279"
  },
  {
    "text": "so that you can focus purely on building your application yet leverage our services straight from the device now if",
    "start": "980279",
    "end": "987440"
  },
  {
    "text": "we do an API call against AWS this one always needs to be authenticated and",
    "start": "987440",
    "end": "993959"
  },
  {
    "text": "secured for this we have a principle called identity and exess management which allows us to get access keys and",
    "start": "993959",
    "end": "1000199"
  },
  {
    "text": "secret access keys to make those API calls now obviously you never want a hardcode those credentials within new",
    "start": "1000199",
    "end": "1006800"
  },
  {
    "text": "application so what you can do is you leverage temporary security tokens which you can obtain from the AWS security",
    "start": "1006800",
    "end": "1014519"
  },
  {
    "text": "token service STS which basically talks to I IM um looks at the IM rols that you",
    "start": "1014519",
    "end": "1020160"
  },
  {
    "text": "have configured gives that rols the permission creates a temporary token sends that back to your device so that",
    "start": "1020160",
    "end": "1026760"
  },
  {
    "text": "you can then sign the API request to another AWS service that you have sign the payload and connect to that AWS",
    "start": "1026760",
    "end": "1034280"
  },
  {
    "text": "service such as for example an S3 bucket now you see this is a certain process that we would need to follow so we",
    "start": "1034280",
    "end": "1040400"
  },
  {
    "text": "wanted to make this easier for you for that reason we launched a service called",
    "start": "1040400",
    "end": "1047000"
  },
  {
    "start": "1046000",
    "end": "1095000"
  },
  {
    "text": "Amazon cognito what is Amazon Cognito well it allows you to authenticate your",
    "start": "1047000",
    "end": "1053080"
  },
  {
    "text": "users um anonymously or true third party providers such as for example Facebook",
    "start": "1053080",
    "end": "1058360"
  },
  {
    "text": "Twitter Google Amazon any open ID provider or even your own authentication",
    "start": "1058360",
    "end": "1063559"
  },
  {
    "text": "or login mechanism Kono will then automatically issue a a temporary",
    "start": "1063559",
    "end": "1069160"
  },
  {
    "text": "credential and also rotate this temporary credential so that you align with some of the best practices uh",
    "start": "1069160",
    "end": "1075559"
  },
  {
    "text": "around IM security with AWS it also allows you to share that",
    "start": "1075559",
    "end": "1081039"
  },
  {
    "text": "identity across multiple devices so if you have a phone if you have a tablet if a lock in if I used da on both devices",
    "start": "1081039",
    "end": "1087080"
  },
  {
    "text": "and I log in through my Facebook account for example Cognito will know that this is the same user on those two different",
    "start": "1087080",
    "end": "1094880"
  },
  {
    "text": "devices if I want to implement this I want just want to show you a little code snippet here this is for an iOS device",
    "start": "1094880",
    "end": "1102480"
  },
  {
    "start": "1095000",
    "end": "1271000"
  },
  {
    "text": "an Apple device how would that look like well basically you you initialize the AWS Cognito credentials provider object",
    "start": "1102480",
    "end": "1109559"
  },
  {
    "text": "so you allocate that one and you just give us a few information such as what is your AWS account ID what is the uh",
    "start": "1109559",
    "end": "1116760"
  },
  {
    "text": "Cognito sorry the region you're doing this in and what is the Cognito identity pool that you previously created that",
    "start": "1116760",
    "end": "1123039"
  },
  {
    "text": "you want to use and then you also tell us what is the authenticated and",
    "start": "1123039",
    "end": "1128799"
  },
  {
    "text": "unauthenticated am role that you want to give this user If he if he connects to",
    "start": "1128799",
    "end": "1134360"
  },
  {
    "text": "so that we can give him the permission through that role the next thing you can do now is to say every subsequent calls",
    "start": "1134360",
    "end": "1141400"
  },
  {
    "text": "to AWS Services I want to leverage Cognito as that identity provider so",
    "start": "1141400",
    "end": "1146520"
  },
  {
    "text": "that the those temporary tokens that we created they are used to make the other subsequent AWS APR calls to do that we",
    "start": "1146520",
    "end": "1153840"
  },
  {
    "text": "can change the AWS service configuration which is the the third line of code that you see here and we just say this new",
    "start": "1153840",
    "end": "1160039"
  },
  {
    "text": "Cognito credentials provider becomes our default service configuration so every",
    "start": "1160039",
    "end": "1165200"
  },
  {
    "text": "subsequent AWS call will now use the temporary credentials issued by Cognito",
    "start": "1165200",
    "end": "1170880"
  },
  {
    "text": "to make subsequent calls Cognito has another interesting",
    "start": "1170880",
    "end": "1176120"
  },
  {
    "text": "functionality which is to synchronize locally stored key value pairs from the",
    "start": "1176120",
    "end": "1181640"
  },
  {
    "text": "devices across your devices so going back to the app that we're building we want to create a profile and that",
    "start": "1181640",
    "end": "1187440"
  },
  {
    "text": "profile uh contains certain information such as my username for example or my name in general and then another thing",
    "start": "1187440",
    "end": "1193919"
  },
  {
    "text": "since this AB is find the like who is in a certain area right so we want to define a certain interest radius in",
    "start": "1193919",
    "end": "1200400"
  },
  {
    "text": "which we want to be matched right and by the way this is kilometers you see I'm a European I adapt the metric system but",
    "start": "1200400",
    "end": "1207480"
  },
  {
    "text": "somebody can probably convert that to miles for me so how would I use this well basically with Cognito sync I write",
    "start": "1207480",
    "end": "1214320"
  },
  {
    "text": "he Value Pass locally on the device Cognito will automatically sync that with the Cognito service in AWS and if",
    "start": "1214320",
    "end": "1221159"
  },
  {
    "text": "you have another device synchronize those key value pairs to those other devices how would I leverage it well",
    "start": "1221159",
    "end": "1227600"
  },
  {
    "text": "basically you see the piece of code right here you initialize the Kono object you then open or create a data",
    "start": "1227600",
    "end": "1235480"
  },
  {
    "text": "set this will create a local preference file on the device or if it already exists it will just open that local",
    "start": "1235480",
    "end": "1242600"
  },
  {
    "text": "preference file which is basically a small sqlite uh preference file database",
    "start": "1242600",
    "end": "1247880"
  },
  {
    "text": "um you then set the key values that you want to have here I'm just going to give an example of setting a name and the",
    "start": "1247880",
    "end": "1252919"
  },
  {
    "text": "interest radius of what I want to be matched and then I can tell Cognito to synchronize this and cognito will now",
    "start": "1252919",
    "end": "1259120"
  },
  {
    "text": "automatically maintain this profile and synchronize it not only with my cloud environment but also with all the other",
    "start": "1259120",
    "end": "1265280"
  },
  {
    "text": "devices where I potentially have this application",
    "start": "1265280",
    "end": "1270039"
  },
  {
    "start": "1271000",
    "end": "1397000"
  },
  {
    "text": "installed now I mentioned we also want to take pictures and we want to upload this um where's a good place to store",
    "start": "1271279",
    "end": "1277360"
  },
  {
    "text": "user generated content in Amazon s tree for those of you who don't know what Amazon S3 is it's our simple storage",
    "start": "1277360",
    "end": "1283840"
  },
  {
    "text": "service that's S3 which allows you to put any kind of objects into two",
    "start": "1283840",
    "end": "1288919"
  },
  {
    "text": "so-called S3 buckets they have virtually unlimited storage space so you don't need to tell us how much storage you",
    "start": "1288919",
    "end": "1295039"
  },
  {
    "text": "want to capacitate and we only charge you for exactly what you use so perfect place to store user generated content",
    "start": "1295039",
    "end": "1302600"
  },
  {
    "text": "now if we talk to S3 we're going to leverage the mobile SDK functionalities by using the S3 transfer utility the S3",
    "start": "1302600",
    "end": "1310559"
  },
  {
    "text": "transfer utility makes our life a little bit easier because we just tell them what is the data or the file that we",
    "start": "1310559",
    "end": "1315679"
  },
  {
    "text": "want to upload and it handles the rest meaning that if a if a file upload will get interrupted it will try to resume it",
    "start": "1315679",
    "end": "1323080"
  },
  {
    "text": "if you put your application in the background it will leverage the background CPU time that it has to",
    "start": "1323080",
    "end": "1328520"
  },
  {
    "text": "actually upload that file so the different varieties between Android and iOS devices how much time you have the",
    "start": "1328520",
    "end": "1334760"
  },
  {
    "text": "S3 transfer utility takes care of that and it also allows you to upload binary",
    "start": "1334760",
    "end": "1340200"
  },
  {
    "text": "data straight so sometimes you might take a picture and then you write it locally to a file on the device then",
    "start": "1340200",
    "end": "1345799"
  },
  {
    "text": "upload it with the transfer utility you can straight sent that binary data into an S3 bucket so we take a picture we",
    "start": "1345799",
    "end": "1353279"
  },
  {
    "text": "upload it to the S3 transfer utility how would that look like in terms of code it would look like this we initialize an",
    "start": "1353279",
    "end": "1360000"
  },
  {
    "text": "AWS transfer utility object we then give it the data that we want to upload so",
    "start": "1360000",
    "end": "1365679"
  },
  {
    "text": "here I took binary data th NS data uh which contains the binary data that I",
    "start": "1365679",
    "end": "1370919"
  },
  {
    "text": "want to upload I just tell it which S3 bucket I want to put this in um how I",
    "start": "1370919",
    "end": "1376440"
  },
  {
    "text": "want to name it which is the key pref as we refer to it and just give it some additional information such as content",
    "start": "1376440",
    "end": "1382679"
  },
  {
    "text": "type which is optional um this is all I need to do now the data automatically moves into my S3 bucket the S3 transfer",
    "start": "1382679",
    "end": "1390559"
  },
  {
    "text": "utility is aware if you get disconnected and um resumes the the file",
    "start": "1390559",
    "end": "1396559"
  },
  {
    "text": "uploads now lastly if we create a mobile application we also want to understand",
    "start": "1396559",
    "end": "1402240"
  },
  {
    "start": "1397000",
    "end": "1476000"
  },
  {
    "text": "that our users a little bit better and for that reason we want to track them from day one so for this we're going to",
    "start": "1402240",
    "end": "1407919"
  },
  {
    "text": "Leverage Amazon mobile analytics which allows us to collect visualize and understand the app usage of your",
    "start": "1407919",
    "end": "1414360"
  },
  {
    "text": "application that you're building things like what am my daily active users what is the stickiness factor of an individual users how many open sessions",
    "start": "1414360",
    "end": "1421480"
  },
  {
    "text": "does does he have um as most AWS services this is designed to scale for",
    "start": "1421480",
    "end": "1426559"
  },
  {
    "text": "potentially billions of events fully scalable in the sense that you don't need to worry about that and one",
    "start": "1426559",
    "end": "1432080"
  },
  {
    "text": "important thing you retain full control and ownership of all the data that is locked through mobile analytics so you",
    "start": "1432080",
    "end": "1438880"
  },
  {
    "text": "own that data and you can move it around for example in your tree bucket or into your data warehouse how would I use this",
    "start": "1438880",
    "end": "1445400"
  },
  {
    "text": "the mobile SDK again makes our life fairly easy the one line it's one line of code to enable it you just initialize",
    "start": "1445400",
    "end": "1452400"
  },
  {
    "text": "the mobile analytics object you tell us what is the application ID that you created in the mobile analytics service",
    "start": "1452400",
    "end": "1459320"
  },
  {
    "text": "and it will now automatically lock in the background the activity of the app in addition to that you can also set",
    "start": "1459320",
    "end": "1466640"
  },
  {
    "text": "custom events or even monetize ation event so if you have inapp purchases or you have a specific activity that you",
    "start": "1466640",
    "end": "1472159"
  },
  {
    "text": "want to lock you can also lock that easily by one line of code this is the way it would look like",
    "start": "1472159",
    "end": "1478520"
  },
  {
    "start": "1476000",
    "end": "1506000"
  },
  {
    "text": "on a dashboard this is the default dashboard that you would get with some information around stickiness Factor",
    "start": "1478520",
    "end": "1484360"
  },
  {
    "text": "retentions Etc and if you lock custom events you would also be able to explore those custom events and drill in in",
    "start": "1484360",
    "end": "1491080"
  },
  {
    "text": "addition to that if this is not enough since this is potentially just a basic overview you can export that data into",
    "start": "1491080",
    "end": "1497480"
  },
  {
    "text": "your data warehouse into your S3 bucket then potentially leverage other services like quick site to visualize that more",
    "start": "1497480",
    "end": "1506120"
  },
  {
    "text": "complex now we achieved the basic parts of the application now right we authenticated to user we allow him to",
    "start": "1506120",
    "end": "1512440"
  },
  {
    "text": "create a profile set his name tell us what is the the radius that I want to look for other matches and I allow him",
    "start": "1512440",
    "end": "1518799"
  },
  {
    "text": "to upload pictures let's get to the juicier part which is we need to track the location of the user and we also",
    "start": "1518799",
    "end": "1525279"
  },
  {
    "text": "want to understand what his user interests are and Stor those somewhere so how would we go ahead with",
    "start": "1525279",
    "end": "1531440"
  },
  {
    "start": "1529000",
    "end": "1557000"
  },
  {
    "text": "something like this well generally you have a mobile application and then we have a certain backend logic and we need",
    "start": "1531440",
    "end": "1536480"
  },
  {
    "text": "to have a database where we store information such as the location or the different interests that I have now in",
    "start": "1536480",
    "end": "1542760"
  },
  {
    "text": "older days you probably think that means lots of ec2 and load balancer um and",
    "start": "1542760",
    "end": "1548320"
  },
  {
    "text": "then a certain database that I need to scale to create that API backend now",
    "start": "1548320",
    "end": "1553360"
  },
  {
    "text": "with Lambda we have new capabilities now so the way we can do achieve this is to say let's create a microservice together",
    "start": "1553360",
    "end": "1561240"
  },
  {
    "start": "1557000",
    "end": "1640000"
  },
  {
    "text": "with Lambda and Amazon API Gateway and let's store information of the user in a",
    "start": "1561240",
    "end": "1567960"
  },
  {
    "text": "managed database such as Amazon Dynamo DB which is our fully managed nosql",
    "start": "1567960",
    "end": "1573039"
  },
  {
    "text": "database so the way this would look like now is that you create a Lambda function for every individual microservice that",
    "start": "1573039",
    "end": "1579320"
  },
  {
    "text": "you want to that you want to have such as for example I want to report the location of user as he go walks around I",
    "start": "1579320",
    "end": "1585919"
  },
  {
    "text": "have his GPS coordinates and I want to send this back where I'm going to send it to well to Amazon API Gateway which",
    "start": "1585919",
    "end": "1593159"
  },
  {
    "text": "then calls the Lambda function here you see an example of how that could look like so it could be a Rest full call to/",
    "start": "1593159",
    "end": "1599600"
  },
  {
    "text": "location this would call the report location Lambda function which in effect",
    "start": "1599600",
    "end": "1605000"
  },
  {
    "text": "stores that information then in the location table of Dynamo DB um and we",
    "start": "1605000",
    "end": "1610799"
  },
  {
    "text": "just lock user and the different locations in which they are similar if you want to have interests right if",
    "start": "1610799",
    "end": "1616159"
  },
  {
    "text": "somebody likes an interest or dislikes an interest the call will be made against Amazon's API Gateway calls the",
    "start": "1616159",
    "end": "1621840"
  },
  {
    "text": "Lambda function stores that information into Dynamo DB table now this allows you to now say all the functionalities that",
    "start": "1621840",
    "end": "1628440"
  },
  {
    "text": "I'm creating for my app becomes such a microservice of a Lambda function fronted by uh the API Gateway backed by",
    "start": "1628440",
    "end": "1636919"
  },
  {
    "text": "the Amazon Dynam DB database to store that information now if we talk about",
    "start": "1636919",
    "end": "1642559"
  },
  {
    "start": "1640000",
    "end": "1719000"
  },
  {
    "text": "geolocation you might say well how do I store GIS data in Dynamo DB well there's",
    "start": "1642559",
    "end": "1648559"
  },
  {
    "text": "a concept called geohash which is basically a geocode system to uh code",
    "start": "1648559",
    "end": "1654240"
  },
  {
    "text": "latitude and longitude in one hash that can potentially be numerical um I'm not",
    "start": "1654240",
    "end": "1660039"
  },
  {
    "text": "going to go into too much detail but just roughly outlining it how does it work well it's basically saying let's",
    "start": "1660039",
    "end": "1665760"
  },
  {
    "text": "imagine planet Earth uh in terms of cells that we have we're divided into six cells we could name those AB bcde EF",
    "start": "1665760",
    "end": "1672360"
  },
  {
    "text": "for example and then we take those cells and we divide each of those cells into subcells and those cells into subcells",
    "start": "1672360",
    "end": "1679360"
  },
  {
    "text": "and so on and and that allows us to basically drill down to a specific location that's what a geoh has is about",
    "start": "1679360",
    "end": "1685880"
  },
  {
    "text": "so if you would look at a scenario here uh where we have a square if you see the Red Dot here if that's the location I",
    "start": "1685880",
    "end": "1692039"
  },
  {
    "text": "want to look around then that would be a224 for example this can be fully",
    "start": "1692039",
    "end": "1697120"
  },
  {
    "text": "numerical which allows us to put it into Dynamo DB so it could be a numerical number like the one that you see here on",
    "start": "1697120",
    "end": "1703960"
  },
  {
    "text": "the left side and that allows us to put it into Dynamo DB and used the normal indexation principles of Dynamo DB to",
    "start": "1703960",
    "end": "1711480"
  },
  {
    "text": "search in between certain strings or numbers here to define the location now",
    "start": "1711480",
    "end": "1718120"
  },
  {
    "text": "you're going to say that's great so now I know how to store it but how am I going to use it I don't want to write the code for you know to do geohashing",
    "start": "1718120",
    "end": "1724679"
  },
  {
    "start": "1719000",
    "end": "1796000"
  },
  {
    "text": "properly well we actually provide you with a library uh for Amazon Dynamo DB",
    "start": "1724679",
    "end": "1729919"
  },
  {
    "text": "to actually create and querry those geospatial geohash data so the good news",
    "start": "1729919",
    "end": "1735600"
  },
  {
    "text": "is this library is written in Java and as such we can put it into a Lambda function right because Lambda supports",
    "start": "1735600",
    "end": "1742840"
  },
  {
    "text": "Java nodejs and also python today um how would that look like in terms of if we",
    "start": "1742840",
    "end": "1748159"
  },
  {
    "text": "use that Library well we can define a GE point this is the latitude longitude that we would get from our device itself",
    "start": "1748159",
    "end": "1754600"
  },
  {
    "text": "um here I put in the latitude longitude of Seattle Space Needle actually um and then we can do for example requests",
    "start": "1754600",
    "end": "1761080"
  },
  {
    "text": "against it so if we want to say give me everything that is 250 M away from the dot that I just pointed which is Seattle",
    "start": "1761080",
    "end": "1766919"
  },
  {
    "text": "Space Needle it says easy as saying create a radius request give me the distance that I have to that radius and",
    "start": "1766919",
    "end": "1773399"
  },
  {
    "text": "carry the results which will now go to Dynamo DB sort it accordingly and find",
    "start": "1773399",
    "end": "1778440"
  },
  {
    "text": "that location so that's great because that allows us now to create matching algorithms by the way if you want to",
    "start": "1778440",
    "end": "1783799"
  },
  {
    "text": "know where to get that we got a jit Hub uh subpage called AWS Labs a lot of the",
    "start": "1783799",
    "end": "1789320"
  },
  {
    "text": "the code that we produce you can find it there this one is under Dynamo DB hyphen",
    "start": "1789320",
    "end": "1795760"
  },
  {
    "text": "Geo now I mentioned API Gateway uh for those of you who don't know what API Gateway is it's a fully managed restful",
    "start": "1795760",
    "end": "1803279"
  },
  {
    "start": "1796000",
    "end": "1851000"
  },
  {
    "text": "API Gateway service that we Channel a power toow our Global content delivery Network that has 53 Edge locations all",
    "start": "1803279",
    "end": "1810640"
  },
  {
    "text": "across the world given that we also provide you with a certain distributed denial of service DDS protection around",
    "start": "1810640",
    "end": "1817360"
  },
  {
    "text": "around it and we also give you the capability to throttle individual users which is important if you have some",
    "start": "1817360",
    "end": "1823360"
  },
  {
    "text": "potential abusive user you can actually start throttling him through that uh 2hour gate way service um we also give",
    "start": "1823360",
    "end": "1829640"
  },
  {
    "text": "you different stages so you can say I have a production a test or development Gateway and I pluck that around or or",
    "start": "1829640",
    "end": "1836120"
  },
  {
    "text": "change around the API CS that I have the API CS themselves go against An Origin which would be in this scenario our",
    "start": "1836120",
    "end": "1842720"
  },
  {
    "text": "microservice Lambda function but this could also go against a virtual server such as an ec2 or even your on premise",
    "start": "1842720",
    "end": "1850799"
  },
  {
    "text": "server now you going to tell me well but the mobile SDK actually has a Lambda",
    "start": "1850799",
    "end": "1855880"
  },
  {
    "start": "1851000",
    "end": "1939000"
  },
  {
    "text": "invocation method why don't I just P the Lambda function straight from our device",
    "start": "1855880",
    "end": "1861480"
  },
  {
    "text": "nothing wrong with doing that but plugging in the API Gateway gives you a bunch of different benefits the first",
    "start": "1861480",
    "end": "1867880"
  },
  {
    "text": "one is it's easy for you to Interchange the Lambda function that you're calling without actually changing the code that",
    "start": "1867880",
    "end": "1874639"
  },
  {
    "text": "your mobile application has as you know when you change code you need to deploy it back to the App Store the Google Play",
    "start": "1874639",
    "end": "1880639"
  },
  {
    "text": "Store Etc and this the certain period of time that it takes to actually gets revalidated so having API Gateway in",
    "start": "1880639",
    "end": "1886399"
  },
  {
    "text": "between allows you to change things like a Lambda function fairly easily in terms of what we invoke without changing that",
    "start": "1886399",
    "end": "1892799"
  },
  {
    "text": "mobile code addition to that we get the protection uh of network layer attacks all the way from layer 7even down to",
    "start": "1892799",
    "end": "1899799"
  },
  {
    "text": "layer three attacks such as syn flots for example and most importantly we also gain a caching layer if you think about",
    "start": "1899799",
    "end": "1908240"
  },
  {
    "text": "this application that we're building we're tracking people's interests right so we could have one API call that just",
    "start": "1908240",
    "end": "1914159"
  },
  {
    "text": "lists the interest of a certain user this is something that doesn't necessarily change all the time so you",
    "start": "1914159",
    "end": "1919480"
  },
  {
    "text": "could say that list command I could cach it for you know half an hour for example",
    "start": "1919480",
    "end": "1924960"
  },
  {
    "text": "with API Gateway we can cache it within the API Gateway service so that we don't always need to call the Lambda function",
    "start": "1924960",
    "end": "1931519"
  },
  {
    "text": "and make the Dynamo DB request but it comes straight from that cache so those are some benefits that you get when",
    "start": "1931519",
    "end": "1937799"
  },
  {
    "text": "plugging API Gateway in between so we now created also the possibility of",
    "start": "1937799",
    "end": "1943519"
  },
  {
    "start": "1939000",
    "end": "1967000"
  },
  {
    "text": "tracking the location of the user using the principle of uh leveraging a microservice API Gateway plus Lambda and",
    "start": "1943519",
    "end": "1949799"
  },
  {
    "text": "a backend storage such as Dynamo DB now how about creating now the functionality",
    "start": "1949799",
    "end": "1955200"
  },
  {
    "text": "that actually makes out the app I want to match users together how would I go ahead of that well Lambda can help here",
    "start": "1955200",
    "end": "1963080"
  },
  {
    "text": "so click there we go if we think about what we achieved we",
    "start": "1963080",
    "end": "1969760"
  },
  {
    "text": "basically have different information coming into different services from different uh uh from different mobile",
    "start": "1969760",
    "end": "1975200"
  },
  {
    "text": "devices from all our user base we track the ation into dynb using the geohash uh",
    "start": "1975200",
    "end": "1981200"
  },
  {
    "text": "uh principle we have pictures that get uploaded into S3 buckets uh we have profiles that get set and change and we",
    "start": "1981200",
    "end": "1988440"
  },
  {
    "text": "potentially change interest radius that we have created I want to match 10 kilometers 50 kilometers away for me uh",
    "start": "1988440",
    "end": "1995000"
  },
  {
    "text": "those changes with go against Cognito and as such Cognito syn so we have all this information and this events that",
    "start": "1995000",
    "end": "2001519"
  },
  {
    "text": "are coming in now what can we do with that well we can leverage Lambda to interact on these events as they're",
    "start": "2001519",
    "end": "2008080"
  },
  {
    "text": "coming in using d by using Dynamo DB streams as2 event notifications and",
    "start": "2008080",
    "end": "2013440"
  },
  {
    "text": "Cognito sync triggers and that's great because all those movable components",
    "start": "2013440",
    "end": "2018799"
  },
  {
    "text": "that we have actually allow us to Define if we have a match so let's think about it the mobile device basically makes a",
    "start": "2018799",
    "end": "2025720"
  },
  {
    "text": "restful API call to our Amazon API Gateway which reports the location back",
    "start": "2025720",
    "end": "2031360"
  },
  {
    "text": "into a Dynamo DB geohash table using a Lambda function now this an effect will",
    "start": "2031360",
    "end": "2037799"
  },
  {
    "text": "trigger the Dynamo DB stream a Dynamo DB stream we can connect it to another Lambda function and that Lambda function",
    "start": "2037799",
    "end": "2045080"
  },
  {
    "text": "now sees what are the new information that are coming in which allows me to say well there's one person that is",
    "start": "2045080",
    "end": "2050760"
  },
  {
    "text": "moving so let's see what his interests are let's look at his proximity second and then we can find other users within",
    "start": "2050760",
    "end": "2057280"
  },
  {
    "text": "his vincinity that can potentially be a match and then say oh we got a",
    "start": "2057280",
    "end": "2062599"
  },
  {
    "text": "match now what if I change my interest same thing an interest it's a microservice right right so Amazon API",
    "start": "2062599",
    "end": "2069118"
  },
  {
    "text": "Gateway call against the Lambda function which could be a like interest function which in effect updates my dynamodb",
    "start": "2069119",
    "end": "2076158"
  },
  {
    "text": "interest table creates a dynamodb stream triggers our fine match functionality",
    "start": "2076159",
    "end": "2082320"
  },
  {
    "text": "and we again see oh he changed his interest is now there's another user that potentially matches him and if so",
    "start": "2082320",
    "end": "2089720"
  },
  {
    "text": "we found a match now what if we found a match this",
    "start": "2089720",
    "end": "2095398"
  },
  {
    "text": "is the code how it would look like on handling a Dynamo DB Stream So the records that are coming in from the",
    "start": "2095399",
    "end": "2101119"
  },
  {
    "text": "Dynamo DB table we go through all of them and then we have our fine proximity match algorithm I didn't outline that",
    "start": "2101119",
    "end": "2107400"
  },
  {
    "text": "one here but you would basically just look at the position and find the individual",
    "start": "2107400",
    "end": "2112599"
  },
  {
    "text": "users what if we found a match what are we going to do next we need to alert the user right for that reason we're going",
    "start": "2112599",
    "end": "2119480"
  },
  {
    "start": "2113000",
    "end": "2120000"
  },
  {
    "text": "to tap onto Amazon's SNS mobile push notification service which is a crossplatform mobile push notification",
    "start": "2119480",
    "end": "2126079"
  },
  {
    "text": "service so that you can push to iOS devices Android devices uh Android",
    "start": "2126079",
    "end": "2131320"
  },
  {
    "text": "devices in China through Buu Amazon Fire devices or even Windows devices um again",
    "start": "2131320",
    "end": "2138079"
  },
  {
    "text": "it's fully managed and scalable uh so scales to potentially millions of devices and it also allows us to create",
    "start": "2138079",
    "end": "2144240"
  },
  {
    "text": "so-called topics like uh on a specific go on a specific interest and subscribe",
    "start": "2144240",
    "end": "2149920"
  },
  {
    "text": "our users to those topic and then push out notifications to a topic which automatically fans it out to all the",
    "start": "2149920",
    "end": "2156480"
  },
  {
    "text": "users subscribed to that topic so that's great so we can tap onto SNS to",
    "start": "2156480",
    "end": "2162319"
  },
  {
    "text": "basically notify the user when we found a match remember we have a few movable components the interests and the",
    "start": "2162319",
    "end": "2168680"
  },
  {
    "text": "geolocation the position of the users which continuously change and whenever they change a Damo DB stream triggers my",
    "start": "2168680",
    "end": "2175280"
  },
  {
    "text": "find match Lambda function which now makes the decision of have I found a match or have I not found a match if I",
    "start": "2175280",
    "end": "2181359"
  },
  {
    "text": "found a match then I want to notify the user how do I do that well I'll make an AWS SDK call against Amazon SNS to push",
    "start": "2181359",
    "end": "2189640"
  },
  {
    "text": "out that notification because the Lambda function can obviously also Leverage The the sdks of AWS to call other Amazon web",
    "start": "2189640",
    "end": "2198800"
  },
  {
    "text": "services such as SNS for example you're going to say okay this is",
    "start": "2198800",
    "end": "2204119"
  },
  {
    "text": "great but what if I change my profile what if I change that I want to match people that are further away from me or",
    "start": "2204119",
    "end": "2211079"
  },
  {
    "text": "closer buy from me then this might not work right because I don't get an update",
    "start": "2211079",
    "end": "2216200"
  },
  {
    "text": "on the Dynamo B table and as such I might miss out on a few matches that I would otherwise have well",
    "start": "2216200",
    "end": "2223359"
  },
  {
    "text": "remember Cognito sync is good to synchronize data across your devices but also to synchronize state that you have",
    "start": "2223359",
    "end": "2229839"
  },
  {
    "text": "locally set on your device to Amazon and that in effect actually triggers",
    "start": "2229839",
    "end": "2235240"
  },
  {
    "start": "2234000",
    "end": "2324000"
  },
  {
    "text": "something called a Cognito sync trigger which we can then connect to a Lambda function so we can say whenever there's",
    "start": "2235240",
    "end": "2241720"
  },
  {
    "text": "a Cognito sync event trigger a Lambda function and that Lambda function could",
    "start": "2241720",
    "end": "2247000"
  },
  {
    "text": "then could look at what has changed so it would go to okay give me the data set",
    "start": "2247000",
    "end": "2252319"
  },
  {
    "text": "that of that specific user that just changed something hey he he changed his interest radius because we have a",
    "start": "2252319",
    "end": "2258720"
  },
  {
    "text": "replace operation on that on that value if that's the case we need to process again if we found a match on that person",
    "start": "2258720",
    "end": "2266560"
  },
  {
    "text": "now we can put the match algorithm into this Lambda function but how about we",
    "start": "2266560",
    "end": "2272359"
  },
  {
    "text": "reuse what we already have so we can Leverage The find match function that we already built earlyer",
    "start": "2272359",
    "end": "2278040"
  },
  {
    "text": "so what we're going to do in this Lambda function is just to say if interest radio has changed revalue it how do I do",
    "start": "2278040",
    "end": "2284480"
  },
  {
    "text": "that well call the F match Lambda function so we call a Lambda function within a Lambda function we basically",
    "start": "2284480",
    "end": "2290359"
  },
  {
    "text": "chain the Lambda functions together which is what I'm doing here I'm invoking the Lambda function",
    "start": "2290359",
    "end": "2296520"
  },
  {
    "text": "asynchronously the find match function from this Lambda function why asynchronously I want this function to",
    "start": "2296520",
    "end": "2303319"
  },
  {
    "text": "terminate and have the other F match function do the rest I don't want to wait for the fin match function to come",
    "start": "2303319",
    "end": "2308599"
  },
  {
    "text": "back if you want to do that you can change the invocation time so both asynchronous and synchronous invocations",
    "start": "2308599",
    "end": "2314960"
  },
  {
    "text": "are possible so basically we now went through all the layouts we have achieved all the functionalities that we actually",
    "start": "2314960",
    "end": "2321920"
  },
  {
    "text": "require and if we were to draw that out into a final architecture diagram it would look like this so we have our",
    "start": "2321920",
    "end": "2327920"
  },
  {
    "start": "2324000",
    "end": "2391000"
  },
  {
    "text": "mobile application we tap onto the mobile SDK to talk to Amazon's web",
    "start": "2327920",
    "end": "2332960"
  },
  {
    "text": "services we store our profile in Amazon Cognito potentially authenticate users against other third party providers such",
    "start": "2332960",
    "end": "2340040"
  },
  {
    "text": "such as Facebook we track usage through the mobile analytics service whenever we",
    "start": "2340040",
    "end": "2345440"
  },
  {
    "text": "need to report location or update interests we tap onto the principle of a microservice which is a combination of",
    "start": "2345440",
    "end": "2351680"
  },
  {
    "text": "Amazon's API Gateway a lampda function and a backend store which could be a Dynamo DB table um those are the uh",
    "start": "2351680",
    "end": "2361040"
  },
  {
    "text": "movable components that call Dynamo DB streams or S3 vent triggers that can call other Lambda function and if we",
    "start": "2361040",
    "end": "2367800"
  },
  {
    "text": "then found a match we're going to notify the end user using Amazon SNS and all",
    "start": "2367800",
    "end": "2373200"
  },
  {
    "text": "this basically achieved fully event driven without running any service and",
    "start": "2373200",
    "end": "2378520"
  },
  {
    "text": "only running our matching algorithm that very moment when something in our system is moving around now with that I want to",
    "start": "2378520",
    "end": "2386520"
  },
  {
    "text": "pass this on to an actual real life use case um so I'm going to call up on stage",
    "start": "2386520",
    "end": "2392040"
  },
  {
    "start": "2391000",
    "end": "2426000"
  },
  {
    "text": "uh Kirill and vasel from easy1 thank you",
    "start": "2392040",
    "end": "2399240"
  },
  {
    "text": "[Music]",
    "start": "2401130",
    "end": "2407019"
  },
  {
    "text": "thank you Olivia we're co-founders of a startup company from Moscow Russia called easy I'm am cido kill is B Team",
    "start": "2409359",
    "end": "2417680"
  },
  {
    "text": "lead and we develop a mobile app that helps people learn foreign languages by",
    "start": "2417680",
    "end": "2424079"
  },
  {
    "text": "studing 10 words a day uh uh we got over 1.2 million",
    "start": "2424079",
    "end": "2430560"
  },
  {
    "start": "2426000",
    "end": "2447000"
  },
  {
    "text": "downloads and we've been featured by Apple in over 85 countries our uh",
    "start": "2430560",
    "end": "2436640"
  },
  {
    "text": "currently our main markets are uh Russia and Brazil but we're available globally",
    "start": "2436640",
    "end": "2442319"
  },
  {
    "text": "so you can download the app and play with it right now uh so what the app does is it allows",
    "start": "2442319",
    "end": "2450480"
  },
  {
    "text": "you to pick your language level and interest then it presents you a feed of",
    "start": "2450480",
    "end": "2455520"
  },
  {
    "text": "foreign words uh based on uh which will pick B uh for you based on your learning",
    "start": "2455520",
    "end": "2462720"
  },
  {
    "text": "habits each new day you pick 10 words from that feed and uh after that you",
    "start": "2462720",
    "end": "2468800"
  },
  {
    "text": "challenge yourself with various tests to repeat and ensure you've learn the",
    "start": "2468800",
    "end": "2474800"
  },
  {
    "text": "words uh our goal is to make learning languages more entertaining productive",
    "start": "2474800",
    "end": "2480240"
  },
  {
    "text": "and time efficient so we're going to share with you today our experience moving to a completely serverless",
    "start": "2480240",
    "end": "2486560"
  },
  {
    "text": "architecture St and outline benefits we see in this approach in our app band handles",
    "start": "2486560",
    "end": "2492720"
  },
  {
    "text": "function like user authorization content update leaderboard",
    "start": "2492720",
    "end": "2497760"
  },
  {
    "text": "social features and so on while developing and maintaining our application we started facing different",
    "start": "2497760",
    "end": "2504480"
  },
  {
    "text": "problems as the system grown so let's take a brief look on our previous",
    "start": "2504480",
    "end": "2510480"
  },
  {
    "text": "approach it was a large monolithic application which was running on multiple dedicated servers and that cost",
    "start": "2510480",
    "end": "2517440"
  },
  {
    "text": "a sensible amount of money every month it was extremely difficult to keep",
    "start": "2517440",
    "end": "2522920"
  },
  {
    "text": "backand architecture Loosely coupled so we ended up having lots of unnecessary dependencies and that caused a drastic",
    "start": "2522920",
    "end": "2529520"
  },
  {
    "text": "increase in development time we paid our dedicated zop team while still having to wait a while",
    "start": "2529520",
    "end": "2536480"
  },
  {
    "text": "whenever we wanted to adjust posess configuration or conduct a load testing or so",
    "start": "2536480",
    "end": "2541880"
  },
  {
    "text": "on and also we spent a lot of time trying to build even quite simple prototype",
    "start": "2541880",
    "end": "2547640"
  },
  {
    "text": "because we had to deal with application security scalability and resilence we've",
    "start": "2547640",
    "end": "2553040"
  },
  {
    "text": "been also very limited in Technologies we can use because we realized it will take a while for us to implement",
    "start": "2553040",
    "end": "2560720"
  },
  {
    "text": "them uh so natural solution for us was to go for a microservice based",
    "start": "2560720",
    "end": "2566400"
  },
  {
    "text": "architecture and the question for us was how do we build uh Ser a microservice",
    "start": "2566400",
    "end": "2573000"
  },
  {
    "text": "backend on AWS solving all the problems stated above and we obviously wanted to avoid all",
    "start": "2573000",
    "end": "2579839"
  },
  {
    "text": "server Administration costs and work with managed Services only and after iterative prototyping and",
    "start": "2579839",
    "end": "2588839"
  },
  {
    "text": "research we came up with uh serous framework for building microservices",
    "start": "2588839",
    "end": "2595960"
  },
  {
    "start": "2592000",
    "end": "2689000"
  },
  {
    "text": "based on Lambda Dynam DB and Kinesis why we call this a framework is",
    "start": "2595960",
    "end": "2602280"
  },
  {
    "text": "because the certain way of arranging those Services was gener enough for us",
    "start": "2602280",
    "end": "2607680"
  },
  {
    "text": "to fit uh all of the business logic within it even the complex cases like realtime",
    "start": "2607680",
    "end": "2615359"
  },
  {
    "text": "word selection and the leaderboard and so on we no longer work with any kind of",
    "start": "2615359",
    "end": "2623520"
  },
  {
    "text": "dedicated system administrators because developers are now able to do all the",
    "start": "2623520",
    "end": "2629160"
  },
  {
    "text": "necessary setup themselves this reduced our costs greatly increased the",
    "start": "2629160",
    "end": "2634920"
  },
  {
    "text": "development velocity and the VAR of Technologies we use each micros service can be deployed",
    "start": "2634920",
    "end": "2641760"
  },
  {
    "text": "independently and without downtime within it framework which is a a huge improvement over our previous",
    "start": "2641760",
    "end": "2648720"
  },
  {
    "text": "approach also every single engineer can build a working prototype solution in a matter of just few hours no database",
    "start": "2648720",
    "end": "2656680"
  },
  {
    "text": "configuration no sharding replication scaling no worries about security and",
    "start": "2656680",
    "end": "2663319"
  },
  {
    "text": "authorization Hardware is fully abstracted and there is another huge benefit in",
    "start": "2663319",
    "end": "2668960"
  },
  {
    "text": "this approach which is AWS mobile SDK it allows you to use all the services as",
    "start": "2668960",
    "end": "2675640"
  },
  {
    "text": "fast and easy as possible without thinking about integration issues like weak internet connection rri policies",
    "start": "2675640",
    "end": "2682520"
  },
  {
    "text": "cashing and so on so uh this",
    "start": "2682520",
    "end": "2689200"
  },
  {
    "start": "2689000",
    "end": "2856000"
  },
  {
    "text": "is the basic scheme of our microservice framework and the core of a microservice",
    "start": "2689200",
    "end": "2696240"
  },
  {
    "text": "is what allows for all the basic features that we need it's uh Dynam DB",
    "start": "2696240",
    "end": "2702200"
  },
  {
    "text": "for data storage uh it's exposing interfaces to client applications through Lambda",
    "start": "2702200",
    "end": "2710079"
  },
  {
    "text": "endpoints and Kinesis streams and uh data processing using",
    "start": "2710079",
    "end": "2716599"
  },
  {
    "text": "Lambda Kinesis consumers and uh inner internal Lambda functions",
    "start": "2716599",
    "end": "2723800"
  },
  {
    "text": "which are triggered from the end points also each micros service has a dynamy DB log for event sourcing",
    "start": "2723800",
    "end": "2730359"
  },
  {
    "text": "purposes and additional services are used on demand based on the needs of",
    "start": "2730359",
    "end": "2735640"
  },
  {
    "text": "specific micros service so we'll now review a sophisticated scenario of how",
    "start": "2735640",
    "end": "2742720"
  },
  {
    "text": "this m how the micros service core works and makes use of additional",
    "start": "2742720",
    "end": "2747880"
  },
  {
    "text": "services in our app user can reject to accept Awards which were given to him",
    "start": "2747880",
    "end": "2753520"
  },
  {
    "text": "and we use this data to provide realtime recommendations so what do we need to accomplish that",
    "start": "2753520",
    "end": "2760559"
  },
  {
    "text": "well first we need a way to react on user Behavior events then in response we should do some computations and a",
    "start": "2760559",
    "end": "2767440"
  },
  {
    "text": "database look up for pre-computed recommendations then we should return updated data back to client and we",
    "start": "2767440",
    "end": "2774920"
  },
  {
    "text": "should also keep track of user activity and session for further analysis let's see uh the app is opens",
    "start": "2774920",
    "end": "2782440"
  },
  {
    "text": "it calls Lambda function which creates a new session and logs it into dyam be",
    "start": "2782440",
    "end": "2787599"
  },
  {
    "text": "table it also generates an sqsq and returns it back to client so we can",
    "start": "2787599",
    "end": "2793000"
  },
  {
    "text": "establish a live connection while user going for the words we track his activity via kesis",
    "start": "2793000",
    "end": "2799880"
  },
  {
    "text": "events we then process them within Lambda function uh which updates user",
    "start": "2799880",
    "end": "2805200"
  },
  {
    "text": "record and also executes the business logic which tells us whenever updates are ready or not as soon as we got new",
    "start": "2805200",
    "end": "2812599"
  },
  {
    "text": "content we push it back to SS client listens to it and immediately updates",
    "start": "2812599",
    "end": "2817680"
  },
  {
    "text": "the UI as a result user can see an updated word in his",
    "start": "2817680",
    "end": "2823440"
  },
  {
    "text": "feet so as you can see Lambda does an except an exceptional job in both handling common and very specific use",
    "start": "2823440",
    "end": "2831200"
  },
  {
    "text": "cases the latency between uh sending events from kesis from client to kesis",
    "start": "2831200",
    "end": "2837119"
  },
  {
    "text": "then processing them within Lambda then pushing them back to sqs is so small that we can easily use this approach for",
    "start": "2837119",
    "end": "2843800"
  },
  {
    "text": "realtime processing at the same time we use Lambda for common cases like validat",
    "start": "2843800",
    "end": "2849880"
  },
  {
    "text": "and purchases user data synchronization and so on so this solution now works on the",
    "start": "2849880",
    "end": "2856800"
  },
  {
    "start": "2856000",
    "end": "3026000"
  },
  {
    "text": "close testing stage and going live within a month but some of our products like Chrome extension and telegram bot",
    "start": "2856800",
    "end": "2863880"
  },
  {
    "text": "are already running on this uh framework and based on our usage metric",
    "start": "2863880",
    "end": "2871240"
  },
  {
    "text": "we expect the reduction in our database costs by over 80% and the reduction of our computation",
    "start": "2871240",
    "end": "2878880"
  },
  {
    "text": "costs by at least 65% which is absolutely",
    "start": "2878880",
    "end": "2884400"
  },
  {
    "text": "awesome we're we're we're actually very happy with the outcome because when we",
    "start": "2884400",
    "end": "2889800"
  },
  {
    "text": "started experimenting with uh this approach we were absolutely uncertain about whether it will work at all or",
    "start": "2889800",
    "end": "2897880"
  },
  {
    "text": "not uh it was it was quite heavy a change in terms of a mindset because we",
    "start": "2898000",
    "end": "2905079"
  },
  {
    "text": "were uh because we were now actually using working with AWS as a software",
    "start": "2905079",
    "end": "2911119"
  },
  {
    "text": "development platform just as Android or iOS developers would work with Apple or",
    "start": "2911119",
    "end": "2916280"
  },
  {
    "text": "Google what what that means is that we were now imposing uh number of limitations on",
    "start": "2916280",
    "end": "2924319"
  },
  {
    "text": "ourselves but in the end we were gaining what we were really looking for that is",
    "start": "2924319",
    "end": "2929920"
  },
  {
    "text": "development velocity and the ability to focus on product delivery focus on what we are good at",
    "start": "2929920",
    "end": "2938720"
  },
  {
    "text": "to end our speech I would like to go briefly through our wish list and uh",
    "start": "2938799",
    "end": "2944599"
  },
  {
    "text": "plans so by the time we started experimenting with Lambda API gway was",
    "start": "2944599",
    "end": "2949920"
  },
  {
    "text": "not available and now we're suddenly looking forward to replace all direct lamb Lambda invocations with uh API gway",
    "start": "2949920",
    "end": "2957839"
  },
  {
    "text": "layer to increase flexibility and security we're going to use Dynam DB",
    "start": "2957839",
    "end": "2963559"
  },
  {
    "text": "streams for replication purp purposes and uh also want to track uh several",
    "start": "2963559",
    "end": "2970240"
  },
  {
    "text": "business metrics in real time using them uh some tasks could not be done",
    "start": "2970240",
    "end": "2976599"
  },
  {
    "text": "with simple uh function indication you need orchestrate them in a specific",
    "start": "2976599",
    "end": "2981839"
  },
  {
    "text": "sequence or schedule them the simplest case would be tracking renewable subscriptions from Apple or Google and",
    "start": "2981839",
    "end": "2989079"
  },
  {
    "text": "we're planning to use S swf for that and actually our wish list is empty now",
    "start": "2989079",
    "end": "2995640"
  },
  {
    "text": "because uh uh it consisted of new languages for Lambda with python being",
    "start": "2995640",
    "end": "3002240"
  },
  {
    "text": "on top of the list and uh some system for managing uh for",
    "start": "3002240",
    "end": "3008680"
  },
  {
    "text": "Version Control and Stage management for Lambda which was released today",
    "start": "3008680",
    "end": "3016400"
  },
  {
    "text": "morning so thank you very much EJ great thank you guys",
    "start": "3016400",
    "end": "3023200"
  },
  {
    "text": "so there you have it hello hello all right so to bring it",
    "start": "3026760",
    "end": "3034359"
  },
  {
    "text": "back we started with talking about U wish list of sorts saying what does it",
    "start": "3034359",
    "end": "3039880"
  },
  {
    "start": "3037000",
    "end": "3111000"
  },
  {
    "text": "take to build a back end making it easier for you we walked through two examples",
    "start": "3039880",
    "end": "3045240"
  },
  {
    "text": "pretty detailed architectures of how you could achieve user Administration content storage push notifications",
    "start": "3045240",
    "end": "3051160"
  },
  {
    "text": "analyzing user Behavior with custom app logic gluing it all together using AWS Lambda in two very sophisticated",
    "start": "3051160",
    "end": "3057680"
  },
  {
    "text": "applications a learning app that has millions of downloads as well as something that looks like a geosocial",
    "start": "3057680",
    "end": "3063880"
  },
  {
    "text": "app that's a pretty common pattern that you see nowadays with probably about 100 200 lines of client side",
    "start": "3063880",
    "end": "3069520"
  },
  {
    "text": "code the most important part is this architectural approach gives you the following advantages which appeal to you",
    "start": "3069520",
    "end": "3076280"
  },
  {
    "text": "as mobile developers cost following usage all the service we talked about are build based on a per use basis",
    "start": "3076280",
    "end": "3082160"
  },
  {
    "text": "including Lambda you're not doing anything other than writing the client side code and any appside logic that you",
    "start": "3082160",
    "end": "3087799"
  },
  {
    "text": "care about everything else is management configured for you and as easy T attested it's reduced the development",
    "start": "3087799",
    "end": "3093839"
  },
  {
    "text": "time from days to hours for getting something into the market without compromising on the scale",
    "start": "3093839",
    "end": "3099359"
  },
  {
    "text": "reliability or security that they care about and what you saw today was only a",
    "start": "3099359",
    "end": "3105880"
  },
  {
    "text": "small sample of what AWS can offer for you as a developer now that I've checked the Box",
    "start": "3105880",
    "end": "3113160"
  },
  {
    "start": "3111000",
    "end": "3189000"
  },
  {
    "text": "we talked about just the development aspect of building this application AWS offers AWS device Farm such that you can",
    "start": "3113160",
    "end": "3119720"
  },
  {
    "text": "go and test your uh Android and iOS apps using a fleet of devices that AWS owns",
    "start": "3119720",
    "end": "3125240"
  },
  {
    "text": "and manages simply upload your app specify the test you want to run it'll do the rest the data that you pushed",
    "start": "3125240",
    "end": "3130960"
  },
  {
    "text": "into Mobile analytics as Olivia mentioned can be piped through red shift and into Amazon quicksite as announced",
    "start": "3130960",
    "end": "3136400"
  },
  {
    "text": "yesterday to build very custom deep analytics for the kind of resources that you cared about the notifications that",
    "start": "3136400",
    "end": "3142160"
  },
  {
    "text": "you were pushing instead of just using the default ones you can use Lambda to customize what you want want to do such as personalizing based on the interest",
    "start": "3142160",
    "end": "3149119"
  },
  {
    "text": "or location or other information that you have about the user such as their social data and straight up and manipulating",
    "start": "3149119",
    "end": "3156319"
  },
  {
    "text": "the content you get watermarking the images resizing it such that different device and form factors work for it",
    "start": "3156319",
    "end": "3162160"
  },
  {
    "text": "populating it back to Dynamo DB to maintain an index and count of the users that you have the possibilities that you",
    "start": "3162160",
    "end": "3167680"
  },
  {
    "text": "can do for extending your app are Limitless the most common phrase I've",
    "start": "3167680",
    "end": "3172920"
  },
  {
    "text": "heard from customers is that Lambda makes me faster right it's that much easier for you to now write a Lambda",
    "start": "3172920",
    "end": "3178920"
  },
  {
    "text": "function push it out to prod and have an instantly scalable um code sample out there",
    "start": "3178920",
    "end": "3183960"
  },
  {
    "text": "without having to set up any of the scaffolding and the same applies to you with the suit of mobile services that are available with AWS so here's three",
    "start": "3183960",
    "end": "3192040"
  },
  {
    "start": "3189000",
    "end": "3253000"
  },
  {
    "text": "next steps I'll challenge you to do download the AWS mobile SDK and create your first AWS back tab with the code",
    "start": "3192040",
    "end": "3198119"
  },
  {
    "text": "samples you saw here you should be up and running in no time with the new mobile hub capability announced today I",
    "start": "3198119",
    "end": "3203799"
  },
  {
    "text": "believe the count now is 20 minutes to write your first app download it second",
    "start": "3203799",
    "end": "3208839"
  },
  {
    "text": "go to the Lambda console and use the one of the blueprints available to create your first Lambda function this morning",
    "start": "3208839",
    "end": "3215200"
  },
  {
    "text": "in the keynote we had about I would say a few hundred people who created the first python Lambda function before one",
    "start": "3215200",
    "end": "3222280"
  },
  {
    "text": "a finished talking it takes about 90 seconds for you to create your first one and have go up and running and don't",
    "start": "3222280",
    "end": "3228119"
  },
  {
    "text": "worry about the cost the first 1 million requests are free on us so unless you guys are running a load test right now",
    "start": "3228119",
    "end": "3233520"
  },
  {
    "text": "you won't have any cost showing up and finally we we're constantly adding new features to all the servers we talked",
    "start": "3233520",
    "end": "3238680"
  },
  {
    "text": "about today and you can follow them using the AWS mobile and Lambda blog on the compute section of",
    "start": "3238680",
    "end": "3246079"
  },
  {
    "text": "AWS with that I'm going to close and we'll hang out here for questions thank you",
    "start": "3246400",
    "end": "3254040"
  }
]