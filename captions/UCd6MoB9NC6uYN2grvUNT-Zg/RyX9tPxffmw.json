[
  {
    "text": "welcome everybody to session dat 402 using performance insights to optimize",
    "start": "1340",
    "end": "7259"
  },
  {
    "text": "database performance my name is Kyle Haley and I'm the principal product manager for RDS performance insights and",
    "start": "7259",
    "end": "14820"
  },
  {
    "text": "a little bit about my background I've spent the past 25 years or so working on database performance I groped on many of",
    "start": "14820",
    "end": "22500"
  },
  {
    "text": "the leading industry-leading tools on database performance and this is by far the most exciting project I've been on",
    "start": "22500",
    "end": "27800"
  },
  {
    "text": "the scale and rate of growth that Amazon is amazing and it presents many unique",
    "start": "27800",
    "end": "33120"
  },
  {
    "text": "challenges and the past I've worked at Oracle I redesigned the performance pages and Enterprise Manager show of",
    "start": "33120",
    "end": "39030"
  },
  {
    "text": "hands how many people have used Enterprise Manager a lot of people okay cool I also worked at quest I worked on",
    "start": "39030",
    "end": "44820"
  },
  {
    "text": "spotlight and fog light anybody used fog light our spotlight in the past few people and then I went to a company",
    "start": "44820",
    "end": "51239"
  },
  {
    "text": "called Embarcadero and led the design of a tool called DB optimizer anybody use DB optimizer oh cool",
    "start": "51239",
    "end": "57180"
  },
  {
    "text": "that's my favorite little tool but um other things I've done I've never been known for as I wrote code that actually",
    "start": "57180",
    "end": "63210"
  },
  {
    "text": "reads direct reads the memory of a database so we don't have to run SQL and the reason I did this is when it comes",
    "start": "63210",
    "end": "69750"
  },
  {
    "text": "to performance monitoring one of the tenants that we have in our group right now performs insights is have the least",
    "start": "69750",
    "end": "75119"
  },
  {
    "text": "impact on the database as possible and by reading memory is the cheapest thing",
    "start": "75119",
    "end": "80220"
  },
  {
    "text": "you can do on a computer so if we can bypass sequel and read the performance stats directly out of memory we have",
    "start": "80220",
    "end": "85619"
  },
  {
    "text": "almost no impact on the database and this is now I'm just excited to be at",
    "start": "85619",
    "end": "92100"
  },
  {
    "text": "Amazon where I can take all this experience that I've done on different databases in the past and do it on all these new databases and my sequel",
    "start": "92100",
    "end": "98220"
  },
  {
    "text": "Postgres or warm icicle or or Postgres as well as oracle and sequel server as I",
    "start": "98220",
    "end": "103799"
  },
  {
    "text": "said the scale rate of growth of RDS is amazing and probably the most impressive thing about this project that I see is",
    "start": "103799",
    "end": "109829"
  },
  {
    "text": "the scalability of performance insights the bulk of this talk is really how to use performance insight I don't talk too",
    "start": "109829",
    "end": "115979"
  },
  {
    "text": "much about the infrastructure but we've built an infrastructure that will scale to millions of databases and typically",
    "start": "115979",
    "end": "122640"
  },
  {
    "text": "when you when one uses a performance monitoring tool one installs it either on the database machine that they have",
    "start": "122640",
    "end": "128520"
  },
  {
    "text": "the database they want to monitor or we set up a secondary machine install some software that can",
    "start": "128520",
    "end": "133620"
  },
  {
    "text": "the databases we want to monitor and that's all that can be a lot of work I don't know if any of you enterprise or",
    "start": "133620",
    "end": "140340"
  },
  {
    "text": "clear prize manager users I've ever had a break broke but it's broken on me and they can be really complex to try to get",
    "start": "140340",
    "end": "145680"
  },
  {
    "text": "it working and if we want to do something like cloud control where we're gonna monitor several databases we have to install cloud control on another",
    "start": "145680",
    "end": "151890"
  },
  {
    "text": "machine and connect it to all the databases who want to monitor and manage it with performance insights we've",
    "start": "151890",
    "end": "157440"
  },
  {
    "text": "eliminated all that we've eliminated all the headache all the administration it's incredibly simple when I create a",
    "start": "157440",
    "end": "163680"
  },
  {
    "text": "database in the wizard and RDS there's a checkbox that's checked by default you could uncheck it if you want I wouldn't",
    "start": "163680",
    "end": "169049"
  },
  {
    "text": "recommend it so it's on by default that's it that's all you do there's no management involved you don't have to",
    "start": "169049",
    "end": "174540"
  },
  {
    "text": "worry about how much space it takes up in the overhead we have a very lightweight process that runs on your database host reads the memory sends the",
    "start": "174540",
    "end": "182340"
  },
  {
    "text": "data off the host into native ABS infrastructure and we manage it at all and this and it's scalable and rapid so",
    "start": "182340",
    "end": "190609"
  },
  {
    "text": "we're putting the time we collect the data on your database and the time you visualize it in the dashboard it's typically around the second we'll do",
    "start": "190609",
    "end": "197489"
  },
  {
    "text": "some live demos and you'll be able to see the effect",
    "start": "197489",
    "end": "201290"
  },
  {
    "text": "so what's in the agenda for today first we'll talk about what is performance insights and then we'll talk about how",
    "start": "207849",
    "end": "214599"
  },
  {
    "text": "we collect data we collect data in a unique way called sampling it's a bit different from a lot of tools that use a",
    "start": "214599",
    "end": "220359"
  },
  {
    "text": "time series statistics using counters in the OS or in a database and we roll the",
    "start": "220359",
    "end": "227709"
  },
  {
    "text": "sample data up into something called average active sessions and this is our core metric in the interface and it measures database load so I'll explain",
    "start": "227709",
    "end": "234159"
  },
  {
    "text": "what is average active sessions and what is database load and then we'll go into some real-life use cases some examples",
    "start": "234159",
    "end": "239859"
  },
  {
    "text": "in the slide and then we'll look at exploring the performance insights interface by some other dimensions and",
    "start": "239859",
    "end": "245319"
  },
  {
    "text": "finally we'll do a live demo so what is",
    "start": "245319",
    "end": "251019"
  },
  {
    "text": "performance insights in RDS we've gotten a lot of great feedback from customers",
    "start": "251019",
    "end": "257109"
  },
  {
    "text": "you know they love the automated patching the automated backups the different availability zones the h.a",
    "start": "257109",
    "end": "264669"
  },
  {
    "text": "infrastructure but one thing they've been asking for is visibility into the performance of their cloud database",
    "start": "264669",
    "end": "270880"
  },
  {
    "text": "workloads and databases like my seagull and proscribes in particular I find",
    "start": "270880",
    "end": "277570"
  },
  {
    "text": "there's not a not a really rich ecosystem of tools to monitor people often have scripts are they trace or",
    "start": "277570",
    "end": "284020"
  },
  {
    "text": "they look at log files and it can be an onerous process to figure out what the performance is on a database and where",
    "start": "284020",
    "end": "290199"
  },
  {
    "text": "loads coming from so one of our goals is to create an easy tool and also we have",
    "start": "290199",
    "end": "298419"
  },
  {
    "text": "a huge huge set of customers from small to large and especially I'm a smaller",
    "start": "298419",
    "end": "303610"
  },
  {
    "text": "and customers don't even some customers don't even have a DBA or they might have a part-time DBA so the tool has to be",
    "start": "303610",
    "end": "308979"
  },
  {
    "text": "easy that anybody can use and they also want a single location I want one place to go to and see immediately what's",
    "start": "308979",
    "end": "314409"
  },
  {
    "text": "happening on the database so our first",
    "start": "314409",
    "end": "319449"
  },
  {
    "text": "step was a couple years ago in 2016 we released something called enhanced monitoring and this is a little bit",
    "start": "319449",
    "end": "325840"
  },
  {
    "text": "different than cloud watch and the differences are first is targeted RDS database RDS hosts its OS centric it's",
    "start": "325840",
    "end": "333280"
  },
  {
    "text": "not database centric its OS centric it tells you about the operating system your database is running on one of the cool things is has a process list so",
    "start": "333280",
    "end": "340970"
  },
  {
    "text": "in RDS you can't shell into them host your own you have to get it all through the console so in the console we can see",
    "start": "340970",
    "end": "346940"
  },
  {
    "text": "the process list so it's like top on UNIX I can see the top processes by memory by the top processes by CPU and",
    "start": "346940",
    "end": "354250"
  },
  {
    "text": "another cool thing the differentiator of two years ago from cloud watches we could take met collect metrics down to",
    "start": "354250",
    "end": "360470"
  },
  {
    "text": "one second granularity cloud watch has since announced that as well",
    "start": "360470",
    "end": "365690"
  },
  {
    "text": "one thing I want to point out is so these are time-series metrics if you look in the top right there's a bunch of",
    "start": "365690",
    "end": "371630"
  },
  {
    "text": "charts and a couple of problems with this is a one it can be challenging to",
    "start": "371630",
    "end": "377600"
  },
  {
    "text": "know what to look at what values are good or bad how do I correlate these graphs I personally find it a bit",
    "start": "377600",
    "end": "383540"
  },
  {
    "text": "overwhelming and confusing and so one of the goals is how do we simplify that and these are also time-series metrics so",
    "start": "383540",
    "end": "391310"
  },
  {
    "text": "time-series metrics is like how many pagans do i do on my operating system or what is my CPU utilization at each point",
    "start": "391310",
    "end": "398300"
  },
  {
    "text": "in time and these are just one metric and I can maybe I see my page ins coming up that means I'm reading data off of",
    "start": "398300",
    "end": "404360"
  },
  {
    "text": "disk that I'd already written out and that's gonna slow my process ease down well where is that coming from I need to",
    "start": "404360",
    "end": "410690"
  },
  {
    "text": "correlate that so these are single metrics they don't really they don't correlate and we're going to talk about sampling which is a different way it's",
    "start": "410690",
    "end": "416900"
  },
  {
    "text": "multi-dimensional and we can answer those questions so introducing the forms",
    "start": "416900",
    "end": "422480"
  },
  {
    "text": "insights this is database centric all these stats all the data we're gonna be showing is",
    "start": "422480",
    "end": "427940"
  },
  {
    "text": "all about the database so as opposed to enhance monitoring where I might see a problem on the operating system but not",
    "start": "427940",
    "end": "433970"
  },
  {
    "text": "know where the problems coming from the database here will see exactly what's happening in the database it's a dashboard the main thing we show is",
    "start": "433970",
    "end": "441830"
  },
  {
    "text": "database load oh we'll go into this presentation at what is database load the time Haring is adjustable when you",
    "start": "441830",
    "end": "447980"
  },
  {
    "text": "come in to the dashboard by default it's one hour but you can zoom down into per second samples we actually collect data",
    "start": "447980",
    "end": "454190"
  },
  {
    "text": "per second or you could zoom out to multiple years if you have that much data we can filter by different",
    "start": "454190",
    "end": "459530"
  },
  {
    "text": "attributes such as what are the sequel putting load on the database which users are putting load on the database where",
    "start": "459530",
    "end": "465919"
  },
  {
    "text": "am i spending my time on my database if i am i runnable on CPU or am I waiting for locks am I waiting for i/o I'm",
    "start": "465919",
    "end": "471800"
  },
  {
    "text": "awaiting for some other resource and then we show clearly which sequel are causing the high load on the",
    "start": "471800",
    "end": "477640"
  },
  {
    "text": "database now the delivery of forums and sites has been phased we've already released on both aurora's or postcards",
    "start": "477640",
    "end": "484330"
  },
  {
    "text": "and or my sequel we've released an RDS for my sequel in RDS Postgres and we",
    "start": "484330",
    "end": "489700"
  },
  {
    "text": "just recently released an RDS oracle the next to be a release to be sequel server i'm actually using it in-house the codes",
    "start": "489700",
    "end": "496510"
  },
  {
    "text": "donnas system made a matter of deploying it to the fleet and the final one will be maria DB and one of our tenants our goals with this",
    "start": "496510",
    "end": "504340"
  },
  {
    "text": "interface was have a guided experience of looking at database performance we want users explore the interface and by",
    "start": "504340",
    "end": "510070"
  },
  {
    "text": "exploring the interface they learn about databases so the interface is both for beginners and experts",
    "start": "510070",
    "end": "516099"
  },
  {
    "text": "it's a beginner expert it's inner an interface it's easy it encourages exploration but also the data is",
    "start": "516099",
    "end": "522159"
  },
  {
    "text": "powerful so it's exact kind of data that a expert user would want to see so a big",
    "start": "522160",
    "end": "529570"
  },
  {
    "text": "question what is this thing we're talking about database load well let's talk about where we get it from all",
    "start": "529570",
    "end": "535270"
  },
  {
    "text": "these database engines have a structure that tells us who's connected to the database what are the connections to the database and for each of those",
    "start": "535270",
    "end": "541990"
  },
  {
    "text": "connections it'll tell us which ones are active and which ones are idle and what we do and perform since Isis we look at",
    "start": "541990",
    "end": "547930"
  },
  {
    "text": "that structure once a second now that might sound like a lot of work but remember we're just reading from memory",
    "start": "547930",
    "end": "553000"
  },
  {
    "text": "it's super lightweight and the tests I've done it's my test it's less than 1%",
    "start": "553000",
    "end": "558130"
  },
  {
    "text": "of 1/b CPU and what we do is we look at the structure we ignore the idle",
    "start": "558130",
    "end": "563590"
  },
  {
    "text": "connections that we collect the data from the active connections so if a connection is active we get what's equal",
    "start": "563590",
    "end": "569020"
  },
  {
    "text": "is a user running who is the user what state are they on are they running on CPU are they waiting for some resource",
    "start": "569020",
    "end": "574390"
  },
  {
    "text": "like IO or a lock our buffer access what host is the sequel being sent from like",
    "start": "574390",
    "end": "580600"
  },
  {
    "text": "application server so I can see the load by application servers and who's the user running the sequel and then we",
    "start": "580600",
    "end": "586570"
  },
  {
    "text": "expose this as a metric called average active sessions which is really a measurement of the concurrency of load",
    "start": "586570",
    "end": "592480"
  },
  {
    "text": "on the database how many users are concurrently active in the database and we call this AAAS our average active",
    "start": "592480",
    "end": "598510"
  },
  {
    "text": "sessions so here's the dashboard we'll go into this in more detail as a",
    "start": "598510",
    "end": "604360"
  },
  {
    "text": "presentation goes on but basically what it's divided into two parts on top we see the load on the database over time",
    "start": "604360",
    "end": "610510"
  },
  {
    "text": "and the idea is to make it really visually impactful and so we can see any",
    "start": "610510",
    "end": "616270"
  },
  {
    "text": "problems immediately what I see here is there's two spikes if you had green spike and I see this red spike we'll go",
    "start": "616270",
    "end": "622540"
  },
  {
    "text": "into this more detail green as see users running on CPU and red in this case locking and then below that we have the",
    "start": "622540",
    "end": "629680"
  },
  {
    "text": "top sequel where is this load coming from so we're like the CPU that first sequel statements the one that's demanding all the CPU in this case so",
    "start": "629680",
    "end": "638709"
  },
  {
    "text": "we'll go into this more detail now I want to talk a little bit about how we collect the data and how we aggregate",
    "start": "638709",
    "end": "644320"
  },
  {
    "text": "and visualize it it'll help understand what's going on",
    "start": "644320",
    "end": "648629"
  },
  {
    "text": "one thing that almost always drives engineers a little bit crazy when I first introduced this is we're",
    "start": "649440",
    "end": "655510"
  },
  {
    "text": "collecting we're sampling every second so what we do is we come in and say who's active right now then we go to sleep for a second and then we wake up",
    "start": "655510",
    "end": "661600"
  },
  {
    "text": "and say who's active now in between there's a could be a bunch of activity we don't collect it it's missing and",
    "start": "661600",
    "end": "667779"
  },
  {
    "text": "that can be very unnerving for some engineers but uh what we found is that",
    "start": "667779",
    "end": "672880"
  },
  {
    "text": "collecting once a second describes database activity very well and one analogy is films when I go to the cinema",
    "start": "672880",
    "end": "679779"
  },
  {
    "text": "we're actually seeing 24 frames a second but it is completely coherent to me I don't seamless I don't see anything",
    "start": "679779",
    "end": "685839"
  },
  {
    "text": "missing and if you wanted to collect everything",
    "start": "685839",
    "end": "690970"
  },
  {
    "text": "just to talk about that for a minute some people try to but to collect everything you'd have to trace and",
    "start": "690970",
    "end": "696250"
  },
  {
    "text": "tracing all the process on the database would be a massive amount of data you'd be overwhelmed by the data to slow",
    "start": "696250",
    "end": "701560"
  },
  {
    "text": "your system down and it'd be hard to go through that data to figure out what's happening so it's not scalable and also",
    "start": "701560",
    "end": "708880"
  },
  {
    "text": "by the way we collect data these multiband inches it's multi-dimensional data will be able to answer a lot of questions and we'll see how I answer",
    "start": "708880",
    "end": "715149"
  },
  {
    "text": "those questions in this presentation so here's our visualization of what we're doing so time is running from left to",
    "start": "715149",
    "end": "721570"
  },
  {
    "text": "right the vertical black lines are every second when we collect data we wake up to collect the data the three horizontal",
    "start": "721570",
    "end": "728200"
  },
  {
    "text": "lines are three users and then the blue rectangles are active sequels in the",
    "start": "728200",
    "end": "734200"
  },
  {
    "text": "database so what do I mean active a user sends in a query it takes a certain amount of time for the database to",
    "start": "734200",
    "end": "739810"
  },
  {
    "text": "process that query and then finish it that's the activity time and now I have three different types of queries in this",
    "start": "739810",
    "end": "746160"
  },
  {
    "text": "slide the bottom queries as long-running queries not run much is run twice here but it's multi second in anything that's",
    "start": "746160",
    "end": "753029"
  },
  {
    "text": "over a second will always capture above that is a shorter query sub second query",
    "start": "753029",
    "end": "759059"
  },
  {
    "text": "that's run fairly often so we're gonna miss sub second so we're gonna miss it some of the time but a lot of time we'll",
    "start": "759059",
    "end": "764160"
  },
  {
    "text": "catch it so it'll show up in our data now the top queries a fast query that's not run very often odds are we'll miss",
    "start": "764160",
    "end": "770279"
  },
  {
    "text": "it completely that might sound unnerving but first of all that queries fast it's already",
    "start": "770279",
    "end": "776459"
  },
  {
    "text": "optimized and it's not run very often it's not putting much load on my database so I'm looking at database",
    "start": "776459",
    "end": "781499"
  },
  {
    "text": "performance it doesn't matter one of the fringe benefits the samplings that filters out all of that noise and",
    "start": "781499",
    "end": "787189"
  },
  {
    "text": "helps us concentrate on the big problems so here I've just zoomed in on one user",
    "start": "787189",
    "end": "793170"
  },
  {
    "text": "and typically we have something like an application server that's maybe feeding out webpages to an end user and once in",
    "start": "793170",
    "end": "801029"
  },
  {
    "text": "a while the application server has to go to the database to get some data from the database or if the users buying products we have to put that data in the",
    "start": "801029",
    "end": "806910"
  },
  {
    "text": "database put the transactional information in the database but a lot of times that connection is idle but then",
    "start": "806910",
    "end": "812459"
  },
  {
    "text": "the application server will send in a query he'll take a certain amount of time to process it that's when the connection is active and then return the",
    "start": "812459",
    "end": "818220"
  },
  {
    "text": "result set now if you look at multiple users visually this was my quite the",
    "start": "818220",
    "end": "826410"
  },
  {
    "text": "activity might look like and already we're seeing sort of a visualization the load going up and down on the database",
    "start": "826410",
    "end": "832110"
  },
  {
    "text": "and this is basically what we're doing in performance insights basically stacking that concurrency so you stack",
    "start": "832110",
    "end": "838290"
  },
  {
    "text": "those users and then we have a graph of what's the load like on the database when is a database idle when is there a",
    "start": "838290",
    "end": "843869"
  },
  {
    "text": "high level of concurrency now the next",
    "start": "843869",
    "end": "849899"
  },
  {
    "text": "few slides I want to show that different combinations of activity on the database will can look the same and performance",
    "start": "849899",
    "end": "855360"
  },
  {
    "text": "insights so in this case there's just one user they're running a long query we sample every second we find them each",
    "start": "855360",
    "end": "860939"
  },
  {
    "text": "time and in the graph the performance insights graph the bottom will see one user active now I could actually have a",
    "start": "860939",
    "end": "870779"
  },
  {
    "text": "different scenario that looks exactly the same in the low graph I could have one user run a five second query another user run a five-second query but",
    "start": "870779",
    "end": "878370"
  },
  {
    "text": "in the load graph is on over that time span there's on there's one user active during that time span now I don't know I",
    "start": "878370",
    "end": "887310"
  },
  {
    "text": "don't know what how long it'll craze and running they might be running shorter queries maybe one second queries using run user one runs in one second query",
    "start": "887310",
    "end": "894030"
  },
  {
    "text": "then user two and it goes back and forth it's gonna look the same in load chart the activity on the database is a",
    "start": "894030",
    "end": "899490"
  },
  {
    "text": "constant one user in this particular scenario now I don't know in what order",
    "start": "899490",
    "end": "905070"
  },
  {
    "text": "they're running the queries in the previous slide they're running it alternating here they might be running at the same time and also I've done",
    "start": "905070",
    "end": "911940"
  },
  {
    "text": "something different in this graph so the previous graphs were showing me the active sessions at a point in time what",
    "start": "911940",
    "end": "916950"
  },
  {
    "text": "we show on the performance insights dashboard by default are averages each",
    "start": "916950",
    "end": "922320"
  },
  {
    "text": "point in the perform senseiess dashboard by default is 60 seconds so what we do is they collect all the points of",
    "start": "922320",
    "end": "927450"
  },
  {
    "text": "activity in 60 seconds I mean divided by 60 that's the average number of active sessions so I've made a little bit",
    "start": "927450",
    "end": "933480"
  },
  {
    "text": "easier here what I've done is at the point in the graph represents 10 seconds so I have a ten-second time line I find",
    "start": "933480",
    "end": "939690"
  },
  {
    "text": "10 points of activity 10 divided by 10 is 1 average active session now I could",
    "start": "939690",
    "end": "946380"
  },
  {
    "text": "have a completely different scenario here but it had the same result I could have 10 sessions all run on one second",
    "start": "946380",
    "end": "951990"
  },
  {
    "text": "query at once in 9 seconds of idleness in my chart because it's an average it",
    "start": "951990",
    "end": "957060"
  },
  {
    "text": "still comes out to be 1 average active session I just want to show that different scenarios come out looking",
    "start": "957060",
    "end": "962670"
  },
  {
    "text": "similar in the chart the next few slides I'm going to talk about getting more information so far I've only been",
    "start": "962670",
    "end": "969360"
  },
  {
    "text": "talking about idle and active but just that simple idea but I don't act it tells us a lot about the load on the",
    "start": "969360",
    "end": "975120"
  },
  {
    "text": "database but we can get more information so we in this example if that one user their idle and then their active in",
    "start": "975120",
    "end": "981390"
  },
  {
    "text": "their idle but let's change that a little bit what change I'm gonna make",
    "start": "981390",
    "end": "986400"
  },
  {
    "text": "I'm gonna color code the type of activity so here I have green representing CPU time blue representing",
    "start": "986400",
    "end": "992820"
  },
  {
    "text": "waiting for i/o and orange representing waiting for some weight so weight could be I'm waiting for a lock I keep waiting",
    "start": "992820",
    "end": "998130"
  },
  {
    "text": "for access to buffer waiting for access to a cache so that first query comes in",
    "start": "998130",
    "end": "1003970"
  },
  {
    "text": "spends all of his time on CPU and returns a result set the second query comes in there's a little bit of CPU and then it",
    "start": "1003970",
    "end": "1010279"
  },
  {
    "text": "finds its missing some data in cash so it executes some IO calls down to disk to get that data load it into cash and",
    "start": "1010279",
    "end": "1016339"
  },
  {
    "text": "run some more CPU finishes it's query returns its results set the final third",
    "start": "1016339",
    "end": "1022129"
  },
  {
    "text": "query I come in I do some CPU then I run into a resource that I have to wait for word to get access to I get access to it",
    "start": "1022129",
    "end": "1028909"
  },
  {
    "text": "to some more CPU maybe I run into some other resource I need I wait for it finally do some CPU and I return the",
    "start": "1028909",
    "end": "1035089"
  },
  {
    "text": "result set now before where I just stacked activity",
    "start": "1035089",
    "end": "1040220"
  },
  {
    "text": "now we color code that stacking of activity so I can see across the board I",
    "start": "1040220",
    "end": "1045288"
  },
  {
    "text": "have a constant CPU load constant CPU activity with you know about half the",
    "start": "1045289",
    "end": "1050539"
  },
  {
    "text": "time doing some IO activity and then once in a while doing waiting for some resources so I'm starting to see what the personality is the database what's",
    "start": "1050539",
    "end": "1056539"
  },
  {
    "text": "the load like on the day basis it's coming through on the chart now remember we collect data once a second if we show",
    "start": "1056539",
    "end": "1063169"
  },
  {
    "text": "data once a second the chart be really noisy so it's hard to read it and the second thing if if we take a long time",
    "start": "1063169",
    "end": "1070669"
  },
  {
    "text": "span that's going a lot of points to display and it will slow down the display so what we do is we average the",
    "start": "1070669",
    "end": "1076970"
  },
  {
    "text": "data as I mentioned before each point in the default interface dashboard is 60",
    "start": "1076970",
    "end": "1083029"
  },
  {
    "text": "seconds so it's an average load over 60 seconds so here I'm getting to sing what the load is in my database",
    "start": "1083029",
    "end": "1088730"
  },
  {
    "text": "I see his rising and falling but if somebody showed me this chart my first question really important question is is",
    "start": "1088730",
    "end": "1094580"
  },
  {
    "text": "that good or bad I don't know is the system heavily loaded or is it lightly loaded I don't know well how do we answer that question",
    "start": "1094580",
    "end": "1101919"
  },
  {
    "text": "well it's a really important graphic artifact that we add to the dashboard and that's this dashed line it's called",
    "start": "1101919",
    "end": "1109549"
  },
  {
    "text": "the max B CPU line it represents the number of V CPUs on the host the database is running on and why is that",
    "start": "1109549",
    "end": "1115789"
  },
  {
    "text": "important well if I have two processes that we want to run on the CPU and there's two V CPUs then they can run in",
    "start": "1115789",
    "end": "1121669"
  },
  {
    "text": "parallel each on a different V CPU and they're not really bothering each other if I had here's a third process C that",
    "start": "1121669",
    "end": "1128029"
  },
  {
    "text": "wants to run on a CPU then we're gonna have to share those two VC fuze the west's gonna have to time share at any",
    "start": "1128029",
    "end": "1133880"
  },
  {
    "text": "one slice and time a processing is gonna be waiting for CPU somebody's waiting that's an opportunity for optimization",
    "start": "1133880",
    "end": "1139250"
  },
  {
    "text": "and basically we can look at this and whenever load goes above that max",
    "start": "1139250",
    "end": "1144259"
  },
  {
    "text": "PCPD line somebody's waiting now they might be waiting for a CPU or they might be waiting for something else but I know",
    "start": "1144259",
    "end": "1149899"
  },
  {
    "text": "as soon as the logos above the line somebody's waiting and when that load goes way above the line there's a",
    "start": "1149899",
    "end": "1154999"
  },
  {
    "text": "bottleneck and that's what I want to look into finding out why what's happening so now that we've got this max",
    "start": "1154999",
    "end": "1163460"
  },
  {
    "text": "BCP line and this metric average active sessions we can come up with a list of heuristics whenever average active",
    "start": "1163460",
    "end": "1171679"
  },
  {
    "text": "sessions is less than one the database is not blocked in order for the database to be blocked I need at least one",
    "start": "1171679",
    "end": "1176749"
  },
  {
    "text": "connection that's trying to do something that can't advance they're constantly waiting um if the databases have blocked",
    "start": "1176749",
    "end": "1182090"
  },
  {
    "text": "it probably go even more than that but I need at least one so whenever a s is less than 1 I know",
    "start": "1182090",
    "end": "1187100"
  },
  {
    "text": "the database is healthy there's no blockage the second point is really important but really it's are actually",
    "start": "1187100",
    "end": "1192980"
  },
  {
    "text": "sort of cool when a s is around zero it means the database is idle and I don't",
    "start": "1192980",
    "end": "1198830"
  },
  {
    "text": "know how many of you are DBA is how many people are DBA Sarah or have been DBAs um I remember one of my DBA jobs it was",
    "start": "1198830",
    "end": "1205490"
  },
  {
    "text": "like every second day or a third day the application group would call me and be like the database is blocked the database is slow and I'd be like I'd",
    "start": "1205490",
    "end": "1211850"
  },
  {
    "text": "look in the databases idle and like but what I was looking at this is Oracle I was looking at these of statspack or awr",
    "start": "1211850",
    "end": "1217100"
  },
  {
    "text": "reports and there are 30 pages long there's lots of stats and in database relational large enterprise of",
    "start": "1217100",
    "end": "1222799"
  },
  {
    "text": "relational databases there's constant activity whether users are doing thing or not the database is always managing stuff this is all the counters are always",
    "start": "1222799",
    "end": "1228649"
  },
  {
    "text": "moving so how do you prove the database is idle well if we look at the load chart and it's empty it means nobody's",
    "start": "1228649",
    "end": "1235039"
  },
  {
    "text": "waiting it doesn't mean there aren't sequel sequel might be really fast they might be coming in and getting responded to really fast and we don't catch them",
    "start": "1235039",
    "end": "1240860"
  },
  {
    "text": "but nobody's waiting for the database so it's not the databases problem the third",
    "start": "1240860",
    "end": "1246559"
  },
  {
    "text": "point whenever a is less than the number of CPUs or VC fuse their CPU available",
    "start": "1246559",
    "end": "1252590"
  },
  {
    "text": "on machine and this is specific to RDS because an RDS the only thing running the only thing running your date and your host is the database and so all the",
    "start": "1252590",
    "end": "1259999"
  },
  {
    "text": "CPU is basically available to your database and if your database isn't using it at all then there's CPU",
    "start": "1259999",
    "end": "1265190"
  },
  {
    "text": "available now and if you're on premises or something you might have some other applications on the machine using the",
    "start": "1265190",
    "end": "1270859"
  },
  {
    "text": "CPU and you need to take that into account now the next-to-last point once the average active session starts to go past",
    "start": "1270859",
    "end": "1277010"
  },
  {
    "text": "the number of ECB use then we get into bottleneck territory and then last point when a projected sessions is way above",
    "start": "1277010",
    "end": "1283010"
  },
  {
    "text": "the BCP line there is a bottleneck and we want to investigate find out why so",
    "start": "1283010",
    "end": "1289730"
  },
  {
    "text": "here's an example of an idle database so in the users call up and say the database is slow or the Davis is blocked",
    "start": "1289730",
    "end": "1295280"
  },
  {
    "text": "and you have this graph you've got no way there's no load on the database nobody's waiting for the database so you",
    "start": "1295280",
    "end": "1301340"
  },
  {
    "text": "can prove really clearly and quickly it's not the database now the load",
    "start": "1301340",
    "end": "1308450"
  },
  {
    "text": "charts also good for sizing I mean one other sort of thing that um but you know concerns me over time is like did I pick",
    "start": "1308450",
    "end": "1315350"
  },
  {
    "text": "the right instance type size well when I come in to load chart and look at the CPU usage if the CPU usage is and I can",
    "start": "1315350",
    "end": "1321950"
  },
  {
    "text": "aim by default we perform since slice you get a week of data so I can scale out to a week and I can see the whole load for the week it's a whole load for",
    "start": "1321950",
    "end": "1327830"
  },
  {
    "text": "the week never goes above what I see in that chart that machine's oversized for the database now on the other hand the",
    "start": "1327830",
    "end": "1334910"
  },
  {
    "text": "bottom chart my CP load is way above my max vcp line that machine's undersized I",
    "start": "1334910",
    "end": "1340460"
  },
  {
    "text": "need a bigger machine if I put that load on a bigger machine it's gonna run a lot faster okay now how do we access",
    "start": "1340460",
    "end": "1348530"
  },
  {
    "text": "performance insights so I don't have any",
    "start": "1348530",
    "end": "1353750"
  },
  {
    "text": "slides on this but before we talk about accident as I mentioned when you create a database with the wizard and",
    "start": "1353750",
    "end": "1359470"
  },
  {
    "text": "performance insights is available for that type of database it'll be checked on by default and that's all you have to",
    "start": "1359470",
    "end": "1364520"
  },
  {
    "text": "do you have to worry about installing anything not to worry about space or administration and once it's on there's",
    "start": "1364520",
    "end": "1370310"
  },
  {
    "text": "two ways to access it one there's a performance insights menu you can click on that and it'll give you a list of all the databases that have performance",
    "start": "1370310",
    "end": "1376280"
  },
  {
    "text": "insights enabled and the other is in the instance listing which is what I have here and the instance listing under the",
    "start": "1376280",
    "end": "1382310"
  },
  {
    "text": "current activity column which is on the far right if performs in slice is",
    "start": "1382310",
    "end": "1387350"
  },
  {
    "text": "enabled the value the metric unit there will be sessions and next to that metric",
    "start": "1387350",
    "end": "1393230"
  },
  {
    "text": "is a little rectangle when the rectangle is empty that means the database is idle once loads start to happen on that",
    "start": "1393230",
    "end": "1399860"
  },
  {
    "text": "database loosely normal blue that we'll get filled up with blue for the right-hand side of that rectangle",
    "start": "1399860",
    "end": "1405139"
  },
  {
    "text": "there's a little vertical red line that's the CPU capacity of the box wants me to pass the CPU capacity the box",
    "start": "1405139",
    "end": "1411110"
  },
  {
    "text": "there's a bottleneck the more load there is the bigger the bottleneck the more red will see that that rectangle start",
    "start": "1411110",
    "end": "1417350"
  },
  {
    "text": "to fill in with red so at the bottom of the slide I've shown you know a bunch of red there's some bottleneck on that database so let's take it an example and",
    "start": "1417350",
    "end": "1424789"
  },
  {
    "text": "we'll get to real use cases here so here's an example Aurora Postgres database I look at the rectangle I see a fair bit of red and it",
    "start": "1424789",
    "end": "1431330"
  },
  {
    "text": "it's click through I can just click on that I didn't click on the the session value on a current activity and go into",
    "start": "1431330",
    "end": "1437120"
  },
  {
    "text": "the dashboard so first example will be a CPU bottleneck so I click into that",
    "start": "1437120",
    "end": "1444889"
  },
  {
    "text": "sessions and then I brought into the forum since I stash board and remember",
    "start": "1444889",
    "end": "1450049"
  },
  {
    "text": "our sort of yardstick is that max V CPU line so I see the value going above the",
    "start": "1450049",
    "end": "1455659"
  },
  {
    "text": "max PC P line over here there's this big spike some bottleneck happening there now what kind of bottleneck is it I can",
    "start": "1455659",
    "end": "1463580"
  },
  {
    "text": "go and look at the legend the legend tells me what the different colors mean in this case we have green green",
    "start": "1463580",
    "end": "1469669"
  },
  {
    "text": "represents CPU so I know during that bottle active CPU saturation there's users waiting for CPU they can't get it",
    "start": "1469669",
    "end": "1475909"
  },
  {
    "text": "because there's not enough CPU available on the machine now why is that happening where's that coming from then I look at",
    "start": "1475909",
    "end": "1482029"
  },
  {
    "text": "the top sequel and there's only one sequel that's really taking up all the CPU remember CPUs green if I look at the",
    "start": "1482029",
    "end": "1487429"
  },
  {
    "text": "top sequel there's only one that has a lot of green in it it's that first sequel statement it's actually a select",
    "start": "1487429",
    "end": "1492740"
  },
  {
    "text": "from a function so what I want to do is drill into that function and see if I can optimize that function I mean the",
    "start": "1492740",
    "end": "1498679"
  },
  {
    "text": "other option was be putting the database on a larger instance class but you know that's gonna cost more money if I can",
    "start": "1498679",
    "end": "1504799"
  },
  {
    "text": "optimize this function I might not need to do that and one thing really cool is the interface is interactive so so far",
    "start": "1504799",
    "end": "1512330"
  },
  {
    "text": "we've been looking at an our timeline the top sequel for that our timeline but the bottleneck wasn't that long how to",
    "start": "1512330",
    "end": "1518059"
  },
  {
    "text": "make sure that what I'm looking at on top sequel is for that bottleneck I can click and drag my mouse across the bottleneck and we'll zoom into that time",
    "start": "1518059",
    "end": "1524570"
  },
  {
    "text": "period so you can see that it's highlighted in gray I've clicked my mouse and drug and dragged it across now when I release it I'll go into that",
    "start": "1524570",
    "end": "1532070"
  },
  {
    "text": "particular timeline so here I can see the and I say clearly there's one single statement using all the CPU I meant to",
    "start": "1532070",
    "end": "1540410"
  },
  {
    "text": "mention if you have questions you know feel free to ask as we go along I think it'll be time for a Q&A the session but happy to take questions as we go I think",
    "start": "1540410",
    "end": "1547550"
  },
  {
    "text": "there's a mic up front there ask people if I'm up front ask oh yeah the mics right there so if you have questions come up to the mic you raise your hand",
    "start": "1547550",
    "end": "1553880"
  },
  {
    "text": "and then come up to the mic okay going to a second use case so this is a weight",
    "start": "1553880",
    "end": "1560720"
  },
  {
    "text": "bottleneck so here we have the dashboard and I see a similar spike again but it's",
    "start": "1560720",
    "end": "1567050"
  },
  {
    "text": "a different color so something else is happening it's not CPU I'm gonna click and drag my mouse and I'm gonna zoom",
    "start": "1567050",
    "end": "1572810"
  },
  {
    "text": "into that time period so here I assumed in and just as that bottleneck and I can",
    "start": "1572810",
    "end": "1578330"
  },
  {
    "text": "see that almost all my Lotus is light orange color if I go to the legend I see",
    "start": "1578330",
    "end": "1583460"
  },
  {
    "text": "that light orange is IO corn ex-ac sink anybody note that is I I don't expect",
    "start": "1583460",
    "end": "1590630"
  },
  {
    "text": "users to know what these things are each database has its own weight events in the names particularly obscure so what we're doing and this is an ongoing",
    "start": "1590630",
    "end": "1596600"
  },
  {
    "text": "project because there's thousands of wait a minute and we're tackling the ones that we see the most the most common first well we added flyover help",
    "start": "1596600",
    "end": "1604070"
  },
  {
    "text": "I put my mouse over the name and it'll pop up an explanation of what that wait event is and what what kind of",
    "start": "1604070",
    "end": "1610430"
  },
  {
    "text": "remediation action we can take so just to summarize what's happening here if we look at the text basically",
    "start": "1610430",
    "end": "1615920"
  },
  {
    "text": "saying that we're waiting for confirmations to writes to stable storage and that typically happens when we do a commit why I do a commit I need",
    "start": "1615920",
    "end": "1622790"
  },
  {
    "text": "a confirmation that that data is not just in memory but written to stable storage where is it coming from",
    "start": "1622790",
    "end": "1627920"
  },
  {
    "text": "I look at The Seagull the first sequel I see there is this insert statement it says insert into authors three fields",
    "start": "1627920",
    "end": "1633890"
  },
  {
    "text": "and the three values and what's going on here is we're doing lots of inserts and I'm using a DJ DDC connection and by",
    "start": "1633890",
    "end": "1640220"
  },
  {
    "text": "default it doesn't auto commit so every single insert is getting committed and that means I've every insert that every",
    "start": "1640220",
    "end": "1646430"
  },
  {
    "text": "commit I have to wait and visually we can see the how this and how much this slows us down if we look at the bar for",
    "start": "1646430",
    "end": "1652820"
  },
  {
    "text": "that first statement that insert statement to the left there's a little bit of green that's a CPU that's when we're accomplishing work all the rest of",
    "start": "1652820",
    "end": "1659720"
  },
  {
    "text": "it is basically waiting and I can sort of see the how much I the ratio that I",
    "start": "1659720",
    "end": "1666080"
  },
  {
    "text": "can speed up this prod this batch job so say CPUs maybe 1% of that bar then",
    "start": "1666080",
    "end": "1672980"
  },
  {
    "text": "potentially I could go a hundred times faster I can see visually how big an impact I can make on the database and",
    "start": "1672980",
    "end": "1678760"
  },
  {
    "text": "we'll go into live demo where we'll do that at the end so so far I've just been",
    "start": "1678760",
    "end": "1685160"
  },
  {
    "text": "talking about the default layout of performance insights but we can actually group the data by different dimensions",
    "start": "1685160",
    "end": "1692770"
  },
  {
    "text": "in the legend on the top right it says by default sliced by weights and weight",
    "start": "1692770",
    "end": "1698750"
  },
  {
    "text": "so I think the most powerful way look at load on a database but if we click on that little triangle that points",
    "start": "1698750",
    "end": "1704690"
  },
  {
    "text": "downward will be some other options we can group by sequel by host by user and similarly in the bottom that invite in",
    "start": "1704690",
    "end": "1712100"
  },
  {
    "text": "the bottom I show by default top sequel here I've clicked on hosts so there's four values weight sequel host and user",
    "start": "1712100",
    "end": "1717680"
  },
  {
    "text": "so now I see the load by hosts and typically host your application servers and typically I'm have multiple",
    "start": "1717680",
    "end": "1724520"
  },
  {
    "text": "application servers the balance the load across them so I'd expect the load to be similar and in this case they're roughly the same one application server says",
    "start": "1724520",
    "end": "1731630"
  },
  {
    "text": "1.23 average active sessions and the other says 0.99 so they're both around one but I'm gonna go ahead and click on",
    "start": "1731630",
    "end": "1738830"
  },
  {
    "text": "the top and I'm going to group the load and the timeline by sequel so the Lotus",
    "start": "1738830",
    "end": "1745220"
  },
  {
    "text": "stayed the same exact same load the total load what's changes the grouping the colors before we were grouping my weight type",
    "start": "1745220",
    "end": "1751610"
  },
  {
    "text": "by the weights that we're on narrow grouping my sequel so I can see on the left hand side you know most of my loads",
    "start": "1751610",
    "end": "1757580"
  },
  {
    "text": "by this teal blue and this is orange sequel but then where there's that spike",
    "start": "1757580",
    "end": "1762650"
  },
  {
    "text": "I see this lavender color it's that means during the spike some new sequel was run and was putting load on the system now if I look at my application",
    "start": "1762650",
    "end": "1769850"
  },
  {
    "text": "servers below I also see something interesting as we change the grouping on top that'll change that what the colors",
    "start": "1769850",
    "end": "1775790"
  },
  {
    "text": "mean on the bar on the bottom now that the colors before you speed how much basically the ratio of time spent in",
    "start": "1775790",
    "end": "1782630"
  },
  {
    "text": "those weights now it's not how much time that is coming from those sequel",
    "start": "1782630",
    "end": "1788210"
  },
  {
    "text": "statements and what I can see is that one application server runs a bunch of different sequel statements and the other application server is running just",
    "start": "1788210",
    "end": "1793940"
  },
  {
    "text": "one single statement a different one so that could represent maybe I had a code roll out this morning and the code made",
    "start": "1793940",
    "end": "1799790"
  },
  {
    "text": "it to one application server but didn't make it to the other the work they're doing is different and maybe the code didn't deploy correctly",
    "start": "1799790",
    "end": "1807710"
  },
  {
    "text": "so one thing is really cool is this interface is the same across all the databases most my career has been in",
    "start": "1809480",
    "end": "1815730"
  },
  {
    "text": "Oracle so I'm used to Oracle and it can be hard to jump to another database and do performance tuning but here the",
    "start": "1815730",
    "end": "1820950"
  },
  {
    "text": "interface for all these databases is exactly the same thing the only thing changes is the name of the wait events",
    "start": "1820950",
    "end": "1826010"
  },
  {
    "text": "so for instance sites currently supports both versions Aurora or a my sequel and or Postgres as well - RDS my skill RDS",
    "start": "1826010",
    "end": "1833070"
  },
  {
    "text": "Postgres an RDS Oracle artistical servers coming very soon and then will be hip more ADB so this interface is the",
    "start": "1833070",
    "end": "1841710"
  },
  {
    "text": "same this allows a DBA who's comfortable in one platform that jump to another platform to do performance tuning so the",
    "start": "1841710",
    "end": "1846990"
  },
  {
    "text": "next few slides are just examples of the same load across different types of databases so here's a load of five users",
    "start": "1846990",
    "end": "1856230"
  },
  {
    "text": "on Aurora my sequel and another ongoing project that we're working on is color",
    "start": "1856230",
    "end": "1863070"
  },
  {
    "text": "coding similar weights across the differentials with the same color so",
    "start": "1863070",
    "end": "1868500"
  },
  {
    "text": "right now I see that a little bit of green there's a little CPU going on and most of my time spent waiting for the slight orange that's the same light",
    "start": "1868500",
    "end": "1874650"
  },
  {
    "text": "orange we saw before on Aurora Postgres it means we're waiting for writes to the stable writes just writes a stable",
    "start": "1874650",
    "end": "1880830"
  },
  {
    "text": "storage and I can see that visually without even knowing the name of the weight of him so here is their or",
    "start": "1880830",
    "end": "1888480"
  },
  {
    "text": "Postgres the same workload this is a simple workload of inserts spikes updates and cleats I can see I'm using",
    "start": "1888480",
    "end": "1894480"
  },
  {
    "text": "more CPU and I can see that light orange again I'm doing this waits for stable storage and I see a little bit of red",
    "start": "1894480",
    "end": "1900570"
  },
  {
    "text": "Red's locking so for some reason this workload has a bit of a different characteristic on postcards or a post",
    "start": "1900570",
    "end": "1906780"
  },
  {
    "text": "ghost and then on my sequel and I can see that visually",
    "start": "1906780",
    "end": "1911120"
  },
  {
    "text": "here's Oracle again similar to the previous ones I do a little bit of CPU a",
    "start": "1912020",
    "end": "1917970"
  },
  {
    "text": "lot of time center for writes the stable storage and then or was a little",
    "start": "1917970",
    "end": "1923970"
  },
  {
    "text": "different role cause a background process that writes the data out to log files that light blue is actually a background process wait it's not a user",
    "start": "1923970",
    "end": "1930090"
  },
  {
    "text": "wait here's our Tia's Postgres",
    "start": "1930090",
    "end": "1935670"
  },
  {
    "text": "here we can we haven't yet color-coded the weight events so even though it's the same load the weight of it comes",
    "start": "1935670",
    "end": "1940800"
  },
  {
    "text": "where color is a little different so soon we'll be adding the weight event color so this will look like the other",
    "start": "1940800",
    "end": "1945870"
  },
  {
    "text": "ones but I can see here I'm using more CPU than for example this is my sardius",
    "start": "1945870",
    "end": "1952080"
  },
  {
    "text": "my sickle using a little bit of CPU and again RTS my sickle hasn't been color coded yet either",
    "start": "1952080",
    "end": "1958400"
  },
  {
    "text": "okay what's available the engines released so far I've",
    "start": "1959270",
    "end": "1964350"
  },
  {
    "text": "mentioned before but here we have them in detail we support all versions or or Postgres on Aurora my sickle is just or",
    "start": "1964350",
    "end": "1970470"
  },
  {
    "text": "my skill 5/6 1.17 dot 3 and above we're working on a 5 7 we support our diaz",
    "start": "1970470",
    "end": "1978720"
  },
  {
    "text": "Postgres 10 and above only we don't have any plans to support below 10 the main reason being is but before 10 the weight",
    "start": "1978720",
    "end": "1985020"
  },
  {
    "text": "events weren't sufficiently instrumented to be very rich they're a week in post",
    "start": "1985020",
    "end": "1990660"
  },
  {
    "text": "goes 10 we have a rich set of weight events that describe the workload quite well for RTS my sequel we do 5 6 & 5 7",
    "start": "1990660",
    "end": "1998550"
  },
  {
    "text": "but only the more recent versions and then for RTS Oracle we support all versions and one thing cool with Oracle",
    "start": "1998550",
    "end": "2004970"
  },
  {
    "text": "is Oracle if you use Enterprise Manager you can't use it on standard edition performance insights works in any",
    "start": "2004970",
    "end": "2010670"
  },
  {
    "text": "version of Oracle standard edition Enterprise doesn't matter and you don't need any of the Oracle Performance Pack licenses as far as functionality right",
    "start": "2010670",
    "end": "2018170"
  },
  {
    "text": "now we have what we've shown so far the DB low chart and the top sequel our top end table and then we support these four",
    "start": "2018170",
    "end": "2024320"
  },
  {
    "text": "dimensions weights users host and sequel we have a public API so if you have a",
    "start": "2024320",
    "end": "2029360"
  },
  {
    "text": "custom dashboard and you want to add this data to a custom dashboard you can leverage the API and put in a graphical",
    "start": "2029360",
    "end": "2035030"
  },
  {
    "text": "widget in your dashboard we have long term retention by default the free tier",
    "start": "2035030",
    "end": "2040190"
  },
  {
    "text": "we check it is a 7-day rolling data window of horns history if you want",
    "start": "2040190",
    "end": "2045560"
  },
  {
    "text": "everything you can subscribe to pay for option you know basically we'll save all your performance history right now it's",
    "start": "2045560",
    "end": "2051500"
  },
  {
    "text": "a cap at two years but really the goal is to save all your performs history what's a pay for option and then for",
    "start": "2051500",
    "end": "2057139"
  },
  {
    "text": "alerting the performance insights infrastructure doesn't have its own alerting so what we do is a egress are we since some of the data to cloud watch",
    "start": "2057140",
    "end": "2063800"
  },
  {
    "text": "right now when you in performance insight is a name we automatically send three metrics we",
    "start": "2063800",
    "end": "2069020"
  },
  {
    "text": "send the total DB load and then we send the two components of DB load which is DB load by CPU and DB load by Nam CPU ie",
    "start": "2069020",
    "end": "2075470"
  },
  {
    "text": "how much time are spending waiting for stuff now what's coming so we working",
    "start": "2075470",
    "end": "2083720"
  },
  {
    "text": "over my school 5:7 working on our ds3 DB and RDS single server",
    "start": "2083720",
    "end": "2089990"
  },
  {
    "text": "Arya single server is the next one to go out should be quite soon and then functionality will be enriching the functionality over the next year so",
    "start": "2089990",
    "end": "2096500"
  },
  {
    "text": "right now in the interface when I see the top sequel I can get the sequel text but I don't have the execution plan so",
    "start": "2096500",
    "end": "2102380"
  },
  {
    "text": "we'll be adding the execution plan right now you could copy the sequel text and run your own execution plan but that's a",
    "start": "2102380",
    "end": "2107570"
  },
  {
    "text": "bit of friction we want to make it as easy and frictionless as possible we'll also be adding sequel stats so",
    "start": "2107570",
    "end": "2114020"
  },
  {
    "text": "when I look at the top sequel I see the load by this sequel in the sequel statement but I don't know how many times has been executed I don't know",
    "start": "2114020",
    "end": "2120470"
  },
  {
    "text": "what it's the elapsed time is so we'll be adding these per sequel statistics as well and then finally I'm the short term",
    "start": "2120470",
    "end": "2127280"
  },
  {
    "text": "roadmap is OS and DB statistics so right now in the interface we only show DB load which by far is the most important",
    "start": "2127280",
    "end": "2133550"
  },
  {
    "text": "thing to look at but you might want to correlate DB load with something else for example maybe I have an old TP Trent",
    "start": "2133550",
    "end": "2139790"
  },
  {
    "text": "old CP database and I know the transaction rate is pretty consistent maybe I want a graph of transactions",
    "start": "2139790",
    "end": "2145640"
  },
  {
    "text": "above the load chart so I can correlate it if load DB low goes up and transactions go up that might make sense",
    "start": "2145640",
    "end": "2151790"
  },
  {
    "text": "if DB low goes up and transaction go down that might tell me that whatever that DB load is is some bottleneck",
    "start": "2151790",
    "end": "2157250"
  },
  {
    "text": "that's slowing my application down so we'll be adding about 50 OS metrics and 50 DB metrics that you can customize the",
    "start": "2157250",
    "end": "2164300"
  },
  {
    "text": "interface and add these graphs above the load chart and correlate them so in",
    "start": "2164300",
    "end": "2171800"
  },
  {
    "text": "summary Amazon RDS reports insights it all",
    "start": "2171800",
    "end": "2177330"
  },
  {
    "text": "centers around DB load DB load is measured in average active sessions it clearly identifies the bottlenecks it's",
    "start": "2177330",
    "end": "2183510"
  },
  {
    "text": "easy as powerful and with top sequel we can see where those bottlenecks are coming from and that tells us where we",
    "start": "2183510",
    "end": "2188820"
  },
  {
    "text": "want to apply our efforts we encourage problem discovery in the interface click and drag to zoom in on bottlenecks we",
    "start": "2188820",
    "end": "2195330"
  },
  {
    "text": "look at data by different dimensions and if you have any questions we have a group I'm probably the main person on it",
    "start": "2195330",
    "end": "2200970"
  },
  {
    "text": "but there's other developers and people at Amazon RDS P ia can send us questions or if you have an enhancement request",
    "start": "2200970",
    "end": "2207570"
  },
  {
    "text": "I'd love to know what kind of information you like to see in the interface that's not there yet it's like it helps set our priorities ok now I'll",
    "start": "2207570",
    "end": "2216840"
  },
  {
    "text": "do a little live demo",
    "start": "2216840",
    "end": "2219830"
  },
  {
    "text": "okay here's an idol database and what I'm going to do is I'm going to run a load on it and then we'll optimize that",
    "start": "2232680",
    "end": "2238289"
  },
  {
    "text": "load",
    "start": "2238289",
    "end": "2240529"
  },
  {
    "text": "and you'll be able to see the reactivity so here I'm gonna kick off the load I'm gonna go into the five-minute time frame",
    "start": "2251270",
    "end": "2257180"
  },
  {
    "text": "because the five-minute time frame is gonna show me my per second samples so I just kicked off the load I almost",
    "start": "2257180",
    "end": "2262790"
  },
  {
    "text": "immediately see the load that's going and in latency is amazingly low we see",
    "start": "2262790",
    "end": "2268670"
  },
  {
    "text": "our load coming on what I'm doing here is I have four users they're running ten thousand updates on four different",
    "start": "2268670",
    "end": "2274760"
  },
  {
    "text": "tables so I can see my four different",
    "start": "2274760",
    "end": "2280730"
  },
  {
    "text": "table my four different update statements in each of the tables I see the load coming on we can see the database is what we call heavily low",
    "start": "2280730",
    "end": "2287300"
  },
  {
    "text": "we're fairly heavily loaded my loads all the way up to the max PCP line and what we're doing here and with these updates",
    "start": "2287300",
    "end": "2293990"
  },
  {
    "text": "is this is where auto commit is set on that means every updates can have to wait for a commit and we can see I don't",
    "start": "2293990",
    "end": "2300140"
  },
  {
    "text": "see hardly I don't really see any CPU usage right now our very little which",
    "start": "2300140",
    "end": "2306230"
  },
  {
    "text": "means that we're spending almost all of our time waiting and not getting work done so waiting for the database to",
    "start": "2306230",
    "end": "2312800"
  },
  {
    "text": "reply to us for these commits so this takes about a minute after it finishes",
    "start": "2312800",
    "end": "2318619"
  },
  {
    "text": "I'm going to sleep for 10 seconds and then we're gonna do the same workload with Auto commit off basically you can",
    "start": "2318619",
    "end": "2323930"
  },
  {
    "text": "commit every 50 rows every 100 rows and basically it will see what the impact of that is so in the bottom left is the",
    "start": "2323930",
    "end": "2334220"
  },
  {
    "text": "window running it when it finishes it'll show you the timings",
    "start": "2334220",
    "end": "2339010"
  },
  {
    "text": "one thing I want to point out is so these weight of it names are over here on the right they're a bit long so you",
    "start": "2356089",
    "end": "2361380"
  },
  {
    "text": "don't see the whole name now you can pass your mouse over it and see the full",
    "start": "2361380",
    "end": "2366539"
  },
  {
    "text": "name but one easy way to see all the way to Vince is to click on the weights and the top table and if you look at the",
    "start": "2366539",
    "end": "2371700"
  },
  {
    "text": "weights you sort of them again these names are bit obscure but what I can see in the weight of it names is they all have to do with either the bin log or",
    "start": "2371700",
    "end": "2377700"
  },
  {
    "text": "logging it's all about waiting for rights log rights now we can see that the the",
    "start": "2377700",
    "end": "2383279"
  },
  {
    "text": "load ended I'm now on my sleep period I could see that my first batch job",
    "start": "2383279",
    "end": "2389640"
  },
  {
    "text": "finished the time was 1 minute 49 it looks like and so now I was think 10",
    "start": "2389640",
    "end": "2396690"
  },
  {
    "text": "seconds and then I'm gonna run the same 40,000 updates by for users it's",
    "start": "2396690",
    "end": "2402809"
  },
  {
    "text": "finished boom so earlier in a slideshow I wanted to show you that that that load",
    "start": "2402809",
    "end": "2409440"
  },
  {
    "text": "bar for that sequel set insert single statement almost all it was weight and if you got rid of it you could potentially go 200 times faster here I",
    "start": "2409440",
    "end": "2415950"
  },
  {
    "text": "guess we only went 12 times faster but still pretty impressive",
    "start": "2415950",
    "end": "2421009"
  },
  {
    "text": "okay a few quotes from our customers some of these people in the dinner hall",
    "start": "2433170",
    "end": "2438210"
  },
  {
    "text": "if you want to talk to them cloud abilities there they said with performance insights we we have been",
    "start": "2438210",
    "end": "2443460"
  },
  {
    "text": "able to quickly isolate slow and under pouring under performing queries",
    "start": "2443460",
    "end": "2448549"
  },
  {
    "text": "catalyze not only as performance insights saved us a lot of time in diagnosing queries it's also helped us",
    "start": "2448549",
    "end": "2454319"
  },
  {
    "text": "lower costs new innovations one of the most valuable tools AWS provides for",
    "start": "2454319",
    "end": "2459960"
  },
  {
    "text": "rorrer's performance insights our DBAs uses this dashboard on a daily basis",
    "start": "2459960",
    "end": "2465619"
  },
  {
    "text": "anova before our diagnostic processes were laborious with performance insights",
    "start": "2465619",
    "end": "2470819"
  },
  {
    "text": "we've opened one tool and quickly and easily see where we have problems one quote that I don't have official sign",
    "start": "2470819",
    "end": "2476819"
  },
  {
    "text": "off on is a customer set is they just got support on twirlers like it's Christmas come early",
    "start": "2476819",
    "end": "2482900"
  },
  {
    "text": "okay last part of this presentation this is sort of fun part what we did is he's a little",
    "start": "2483980",
    "end": "2489869"
  },
  {
    "text": "collaboration with a consulting company called slalom which has a booth that you can go visit and and go interact with",
    "start": "2489869",
    "end": "2495119"
  },
  {
    "text": "this demo booth 1438 but what we did is we hooked up Alexa to perform sim sites",
    "start": "2495119",
    "end": "2500160"
  },
  {
    "text": "so now you can in this demo you can talk to Alexa and ask us performance questions about perform sim sites so I",
    "start": "2500160",
    "end": "2507569"
  },
  {
    "text": "can imagine some manager having this on this desk I'm saying how's my cleat doing today so the next slide is gonna",
    "start": "2507569",
    "end": "2513059"
  },
  {
    "text": "be a video Alexa open performance",
    "start": "2513059",
    "end": "2524640"
  },
  {
    "text": "insights how are the databases doing in",
    "start": "2524640",
    "end": "2534779"
  },
  {
    "text": "Ohio performance insights reported no issues in your databases in Ohio",
    "start": "2534779",
    "end": "2542029"
  },
  {
    "text": "check the database performance in Northern California for the past two days on Wednesday November 14th",
    "start": "2542029",
    "end": "2552390"
  },
  {
    "text": "the average active sessions on AMS five six was eight point seven more than the allocated for V CPUs what would you like",
    "start": "2552390",
    "end": "2560220"
  },
  {
    "text": "to know about this incident what's causing the load",
    "start": "2560220",
    "end": "2565300"
  },
  {
    "text": "ninety four point four percent of the load on DMS five six was coming from CPU",
    "start": "2565300",
    "end": "2570560"
  },
  {
    "text": "load from the other weight types is low who was responsible for the load user KY",
    "start": "2570560",
    "end": "2580369"
  },
  {
    "text": "LEL F is causing ninety one point nine percent of the load on EMS five six would you like to notify the user yes",
    "start": "2580369",
    "end": "2589060"
  },
  {
    "text": "would you like me to email or send the user a text message email him email has",
    "start": "2589060",
    "end": "2596420"
  },
  {
    "text": "been sent stop good bye",
    "start": "2596420",
    "end": "2603250"
  },
  {
    "text": "[Music] [Applause]",
    "start": "2604320",
    "end": "2610059"
  },
  {
    "text": "so I sort of for fun but that's a real demo and it's a real information now the",
    "start": "2613680",
    "end": "2619599"
  },
  {
    "text": "person doing the demo is just interacting with LexA but on their desktop they had forms in sites like Alexa's not driving the UI we're just",
    "start": "2619599",
    "end": "2625869"
  },
  {
    "text": "talking to Alexa but so you could sort of visually see what Alexis talking about we had the UI the UI was in",
    "start": "2625869",
    "end": "2630940"
  },
  {
    "text": "Northern Virginia he first asked about Ohio the database in Ohio running fine but that one database we had visually",
    "start": "2630940",
    "end": "2637390"
  },
  {
    "text": "shown there was the database with problems it showed the problem and it showed the user you can see how Alexa",
    "start": "2637390",
    "end": "2642400"
  },
  {
    "text": "was responding to it so it's a lot of fun so now we have some time for Q&A if you want again there's a microphone here",
    "start": "2642400",
    "end": "2648789"
  },
  {
    "text": "please come up and ask your questions at the microphone and again if you want to ask me questions offline you can reach",
    "start": "2648789",
    "end": "2655180"
  },
  {
    "text": "us reach me at RDS P I at amazon.com one",
    "start": "2655180",
    "end": "2660519"
  },
  {
    "text": "two there's thanks Kyle for the session I have a question about the sampling I understand that what the same thing does",
    "start": "2660519",
    "end": "2667839"
  },
  {
    "text": "for you but when you have very many short queries sometimes it's an application logic thing that you need to",
    "start": "2667839",
    "end": "2674440"
  },
  {
    "text": "do because there's chatter or because and and they're actually you wouldn't",
    "start": "2674440",
    "end": "2680589"
  },
  {
    "text": "necessarily see the load but they could be an example of why it would be slow where they're responding you know the",
    "start": "2680589",
    "end": "2686259"
  },
  {
    "text": "proper remediation would be to go back to the application and change that to be",
    "start": "2686259",
    "end": "2691329"
  },
  {
    "text": "maybe more coarse-grained work but those things wouldn't show up right and I mean",
    "start": "2691329",
    "end": "2699009"
  },
  {
    "text": "would they show up on an average or I mean I guess they would be scattered enough I guess my question is how do you",
    "start": "2699009",
    "end": "2704890"
  },
  {
    "text": "see that as a potential risk of the sampling strategy okay let me try to phrase that what I heard some of the",
    "start": "2704890",
    "end": "2712690"
  },
  {
    "text": "some of the interactions the database are a lot of chatter right here a lot of chatter and that means to me that's a",
    "start": "2712690",
    "end": "2717700"
  },
  {
    "text": "lot of back and forth and back and forth means latency like the example that we",
    "start": "2717700",
    "end": "2723730"
  },
  {
    "text": "had with the commits that's chatter I'm waiting for each commit by batching it I get rid of all that chatter I just have",
    "start": "2723730",
    "end": "2729609"
  },
  {
    "text": "one community icicle II have I reduced my number of communications and responses and this is something I've",
    "start": "2729609",
    "end": "2735700"
  },
  {
    "text": "been thinking about how to visualize this but the weight those chatter",
    "start": "2735700",
    "end": "2741069"
  },
  {
    "text": "weights was actually in the dim I gave is pretty easy because it wasn't the there wasn't any latency my my load",
    "start": "2741069",
    "end": "2747620"
  },
  {
    "text": "is running really close to my database of no latency if I move my load those commits farther away from my database that load sharp as we saw it was full it",
    "start": "2747620",
    "end": "2755390"
  },
  {
    "text": "was I for users and it was for active session so it was full if I move my driving say across the country and ran",
    "start": "2755390",
    "end": "2761900"
  },
  {
    "text": "the same load that load chart would be more or less empty now what that means",
    "start": "2761900",
    "end": "2767000"
  },
  {
    "text": "to me is there's not a problem in the database the problem is the network and how to expose that inform some sites to",
    "start": "2767000",
    "end": "2774530"
  },
  {
    "text": "something I'm thinking about how to tackle but um yeah latency that happens",
    "start": "2774530",
    "end": "2779900"
  },
  {
    "text": "outside the database you're not it's basically comes across as a lower load in the database I don't know if that",
    "start": "2779900",
    "end": "2785420"
  },
  {
    "text": "answers your question the only thing the only way I know to do that as far as like somebody who's taking care that a",
    "start": "2785420",
    "end": "2792080"
  },
  {
    "text": "database is if I run a batch job and there's no sleep and it's all sequel then there better be for my first",
    "start": "2792080",
    "end": "2798440"
  },
  {
    "text": "session that are better be one active session the database and if there's not that means there's latency but that",
    "start": "2798440",
    "end": "2804110"
  },
  {
    "text": "means I have to have some knowledge of what batch job or what load I'm running and then see the load chart and they",
    "start": "2804110",
    "end": "2810080"
  },
  {
    "text": "better correspond and if they don't that's represents latency now I'm trying to think a programmatic way is to expose that to the user what we have done that",
    "start": "2810080",
    "end": "2816020"
  },
  {
    "text": "yet I hopefully I can ask two questions first is do you have anything in terms",
    "start": "2816020",
    "end": "2822260"
  },
  {
    "text": "of baselining where you could compare let's say the performance maybe over what a week looks",
    "start": "2822260",
    "end": "2828410"
  },
  {
    "text": "like or a day and does that always look the same on Monday or Tuesday etc and",
    "start": "2828410",
    "end": "2834260"
  },
  {
    "text": "then the second question was just the new features you said that are coming soon and having Maria DB are those how",
    "start": "2834260",
    "end": "2843890"
  },
  {
    "text": "soon do you have any idea okay it's a first one compared so it's compare periods and then when are the new",
    "start": "2843890",
    "end": "2849470"
  },
  {
    "text": "features coming out the compare period right now you can we have a week of",
    "start": "2849470",
    "end": "2854690"
  },
  {
    "text": "rolling data so you can manually like look at a time period and then look at a time period if you need more than a week",
    "start": "2854690",
    "end": "2861320"
  },
  {
    "text": "there's an option to save all your data so you can look at you know in the quarter in a year versus end of year",
    "start": "2861320",
    "end": "2867730"
  },
  {
    "text": "that's all manual you do like you just visually do it right now on the wrote on something that will I plan to do though",
    "start": "2867730",
    "end": "2873860"
  },
  {
    "text": "is have a automatic comparison you select a time period and then another time period and they would put out a report comparing the two",
    "start": "2873860",
    "end": "2880230"
  },
  {
    "text": "that is something that I that I plan to have the team do yes and I would like to do this year but we can talk about",
    "start": "2880230",
    "end": "2886230"
  },
  {
    "text": "delivery dates thank you no the other part was a marina being single server",
    "start": "2886230",
    "end": "2891269"
  },
  {
    "text": "um signal server I know is fairly close because it's basically I'm using it looks perfect the codes done it's ready",
    "start": "2891269",
    "end": "2897539"
  },
  {
    "text": "to deploy so I'm just waiting for deployment the fleet Marie DB should be straightforward I haven't gotten a commitment from the",
    "start": "2897539",
    "end": "2903240"
  },
  {
    "text": "team but uh I would think and I would think it should come out within a quarter but again we can't talk about it",
    "start": "2903240",
    "end": "2909289"
  },
  {
    "text": "should be ready soon by they're like four hour time period",
    "start": "2909289",
    "end": "2914299"
  },
  {
    "text": "hiko you mentioned reports a little bit but I didn't notice it on the on the",
    "start": "2914329",
    "end": "2921359"
  },
  {
    "text": "feature list coming out so what what's the recommendation for getting",
    "start": "2921359",
    "end": "2926609"
  },
  {
    "text": "developers access to a production system you know typically we use in sites in our QA and performance environments but",
    "start": "2926609",
    "end": "2935940"
  },
  {
    "text": "we don't have our engineers look at production so how would what's the",
    "start": "2935940",
    "end": "2941160"
  },
  {
    "text": "recommended way to do that is it is it to have like a read-only view into the production account or or use maybe the",
    "start": "2941160",
    "end": "2948150"
  },
  {
    "text": "API to get data out what would you recommend to do yeah so the question was",
    "start": "2948150",
    "end": "2954420"
  },
  {
    "text": "I here is how do you give developers access to this and that's a great question because you know developers",
    "start": "2954420",
    "end": "2959789"
  },
  {
    "text": "developers are usually a primary job or a primary Python or something and but they have to write sequel as part of their job but they often don't have any",
    "start": "2959789",
    "end": "2966809"
  },
  {
    "text": "idea what that does the database and if we can give them access and they can run their code they can see visually what the impact or the code is so it's great",
    "start": "2966809",
    "end": "2973980"
  },
  {
    "text": "thing to give developers the main friction I find giving developers access is mostly political and we'll go into",
    "start": "2973980",
    "end": "2980099"
  },
  {
    "text": "some other aspects of it but you can create a read-only access and give them PI access they can't change anything in",
    "start": "2980099",
    "end": "2985619"
  },
  {
    "text": "your system and they can see the data now that could have some drawbacks as maybe you don't want them to see",
    "start": "2985619",
    "end": "2991559"
  },
  {
    "text": "everything maybe there's you maybe there's visible predicates filters that might be",
    "start": "2991559",
    "end": "2997829"
  },
  {
    "text": "important credit card numbers or something another thing that we are talking about",
    "start": "2997829",
    "end": "3003230"
  },
  {
    "text": "implementing is mostly multiple levels of access right now is you see everything you don't see any you don't see anything with peak performance",
    "start": "3003230",
    "end": "3009049"
  },
  {
    "text": "insights but what we could do is and this is sort of what we haven't liked internally at Amazon I can see",
    "start": "3009049",
    "end": "3015260"
  },
  {
    "text": "your dashboard but I can't see what you're doing I see the load I can't see anything I can't see your new user names I can't see your machine IPS I can't shoot the",
    "start": "3015260",
    "end": "3021800"
  },
  {
    "text": "text your sequel because it could all be sensitive so I can see the load on your machine so we can create a user access",
    "start": "3021800",
    "end": "3026810"
  },
  {
    "text": "like that but you probably want something in between so we're talking about other things like stripping all",
    "start": "3026810",
    "end": "3033170"
  },
  {
    "text": "they put any hard-coded values stripping from the sequel and having that be a level sort of talk about employing",
    "start": "3033170",
    "end": "3038450"
  },
  {
    "text": "multiple levels of access to PII but again who's going to come out to political things I mean you still have to have a company that's gonna allow a",
    "start": "3038450",
    "end": "3044240"
  },
  {
    "text": "user to login and if that's not an option then you'll have to use the API and create your own dashboards I was",
    "start": "3044240",
    "end": "3058730"
  },
  {
    "text": "just curious about possible features regarding a memory usage per connection",
    "start": "3058730",
    "end": "3064190"
  },
  {
    "text": "and how that works because that's kind of like a black box in my sequel so you have any plans to so the question is are",
    "start": "3064190",
    "end": "3072200"
  },
  {
    "text": "we gonna expose memory and what databases to use my sequel Postgres",
    "start": "3072200",
    "end": "3077830"
  },
  {
    "text": "pretty much a single server yeah right now the first things coming is the OS",
    "start": "3077830",
    "end": "3084140"
  },
  {
    "text": "metrics and those should be coming very soon so you'll have like you'll have a typical operating system os metrics",
    "start": "3084140",
    "end": "3090530"
  },
  {
    "text": "around memory what I'm and that's a good starting place that could show us if there's some sort of memory pressure on",
    "start": "3090530",
    "end": "3096860"
  },
  {
    "text": "the system what I'm more interested in is why who who's taking up that memory and that's a longer-term project we work",
    "start": "3096860",
    "end": "3104930"
  },
  {
    "text": "for example in a aurora in Postgres as far as I know there's no real memory and that post wasn't exposed memory usage by",
    "start": "3104930",
    "end": "3111830"
  },
  {
    "text": "users but we're talking to the roscas team with the world postcodes team cool thing is we can change the kernel so",
    "start": "3111830",
    "end": "3117620"
  },
  {
    "text": "we're talking about exposing that through things that pee I can pick up and then show you per connection how",
    "start": "3117620",
    "end": "3123440"
  },
  {
    "text": "much is it using for the cursor how much is it using for Tim how much is it using for Rho caching so I would expect that",
    "start": "3123440",
    "end": "3131720"
  },
  {
    "text": "happen at some point it's something I desire highly and your feedbacks useful because that helps me set the priority on it",
    "start": "3131720",
    "end": "3137000"
  },
  {
    "text": "thank you yeah just one question about",
    "start": "3137000",
    "end": "3142849"
  },
  {
    "text": "how have you worked a lot with you know integrating it with the AWS cly and and",
    "start": "3142849",
    "end": "3149090"
  },
  {
    "text": "optimizing it for that cuz I love using it I see could get a lot of information about like V CPUs on ec2 instances but",
    "start": "3149090",
    "end": "3157310"
  },
  {
    "text": "is all the data available so I think if",
    "start": "3157310",
    "end": "3162950"
  },
  {
    "text": "the ADA goes quiet like just decline the casuai yeah this yellow oh you can you yeah so that you",
    "start": "3162950",
    "end": "3169970"
  },
  {
    "text": "can leverage the API through the through the CLI so you can run that you can get all the days for the CLI right now yeah",
    "start": "3169970",
    "end": "3176869"
  },
  {
    "text": "it's all there you can have access to it before whatever your storage retention is so the free tier seven days so you",
    "start": "3176869",
    "end": "3182150"
  },
  {
    "text": "can go use the CLI and look at via the CLI all the data with for that week and",
    "start": "3182150",
    "end": "3188300"
  },
  {
    "text": "you can use that to hook into other monitoring products or your own dashboards yeah save the data long-term",
    "start": "3188300",
    "end": "3194150"
  },
  {
    "text": "and you can yeah you could you right now yeah if you wanted to offload the data you could use the CLI API to offload",
    "start": "3194150",
    "end": "3200030"
  },
  {
    "text": "data into your own databases and do your own analytics on it one of the",
    "start": "3200030",
    "end": "3207410"
  },
  {
    "text": "limitations that I've seen playing with it up to now is that the size of query",
    "start": "3207410",
    "end": "3212660"
  },
  {
    "text": "that's exposed within IPM is that limitation kind of hard set by or using",
    "start": "3212660",
    "end": "3219320"
  },
  {
    "text": "my sequel at the moment yeah so the question okay so right now there's a limitation on the",
    "start": "3219320",
    "end": "3225349"
  },
  {
    "text": "single text seems 500 characters and yes that's that's that's a problem for a lot of queries so we are implementing what's",
    "start": "3225349",
    "end": "3232040"
  },
  {
    "text": "called a large text it's a another project the project has been implemented on Aurora Postgres right now I think a",
    "start": "3232040",
    "end": "3239450"
  },
  {
    "text": "limitation is 10 K but it'll it'll become unlimited soon and we'll be rolling out that feature soon across",
    "start": "3239450",
    "end": "3245960"
  },
  {
    "text": "because now that we've done on one platform we'll be rolling out across the other platforms so that limitation should be taken off very soon so you can",
    "start": "3245960",
    "end": "3252109"
  },
  {
    "text": "see as much as mega-hit megabytes if you wanted yeah um how is this going to play",
    "start": "3252109",
    "end": "3263420"
  },
  {
    "text": "with like I wanna ultimately I need to",
    "start": "3263420",
    "end": "3268700"
  },
  {
    "text": "be able to tell the difference between like a load that I need to increase resources versus like really crappy sequel that I",
    "start": "3268700",
    "end": "3275570"
  },
  {
    "text": "don't want to increase resources I want to fix this problem yeah so the question",
    "start": "3275570",
    "end": "3280760"
  },
  {
    "text": "is houses can work with service so right now we don't not support unsterile this service presents us some problems when",
    "start": "3280760",
    "end": "3286760"
  },
  {
    "text": "you if you delete a database we delete the forms and slice data and services you know instances are coming and going",
    "start": "3286760",
    "end": "3293390"
  },
  {
    "text": "so we're gonna have to implement a way of keeping data after the instance is gone and it is something we're working",
    "start": "3293390",
    "end": "3299120"
  },
  {
    "text": "on but that way you I imagine there be a sense or option and servlets like you keep all my service data even after",
    "start": "3299120",
    "end": "3305210"
  },
  {
    "text": "you've gotten rid of the instances so I can go back and look at it so that's on the agenda for this year you know like",
    "start": "3305210",
    "end": "3319330"
  },
  {
    "text": "like it seems like you could run into the problem where the graph always looks awesome right because it just it just",
    "start": "3319330",
    "end": "3325190"
  },
  {
    "text": "scales up and gives you more resources and so you never see the problem because they're trivialized by the fact that you",
    "start": "3325190",
    "end": "3330410"
  },
  {
    "text": "just keep throwing resources at it and how will we be able to tell like you",
    "start": "3330410",
    "end": "3336410"
  },
  {
    "text": "know like that really is a problem there and that you just kind of over resourced it like it just seems like it's gonna",
    "start": "3336410",
    "end": "3342200"
  },
  {
    "text": "get lost oh well so what I heard is how do you how do you tell it in a situation",
    "start": "3342200",
    "end": "3348710"
  },
  {
    "text": "where you've over resourced how do you tell there still is a problem yeah well that's sort of the whole point of the interface I mean if I'm waiting for",
    "start": "3348710",
    "end": "3355430"
  },
  {
    "text": "stuff okay resourcing is just affecting CPU so I might serve this might spin up",
    "start": "3355430",
    "end": "3361640"
  },
  {
    "text": "a big machine give me lots of CPU but they're not I'm spending all my time waiting for something some resource it",
    "start": "3361640",
    "end": "3367700"
  },
  {
    "text": "could be i/o locks buffers and that's what the interface shows so if we have it on server list you'll be able to see",
    "start": "3367700",
    "end": "3373130"
  },
  {
    "text": "if you're waiting for something other than CPU very clearly in one of your",
    "start": "3373130",
    "end": "3381620"
  },
  {
    "text": "slides and maybe I missed it you were talking about the exact sync wait oh",
    "start": "3381620",
    "end": "3388160"
  },
  {
    "text": "yeah I Oh entity see we've seen that a lot on some of our issues so you're",
    "start": "3388160",
    "end": "3395120"
  },
  {
    "text": "saying that is because we're constantly doing a commit on our transactions can we commit most like a commit could also",
    "start": "3395120",
    "end": "3401600"
  },
  {
    "text": "be a rollback but yeah so how would one go about alleviating that issue you have to batch it so",
    "start": "3401600",
    "end": "3407800"
  },
  {
    "text": "whatever if you're doing in lots of single row operations the idea be able to batch them into multi row like 50 rows and then commit and that will",
    "start": "3407800",
    "end": "3414760"
  },
  {
    "text": "immolate that will basically eliminate most of that way feel free to write pool",
    "start": "3414760",
    "end": "3422290"
  },
  {
    "text": "if you have some example cases feel free to write us at that RDSP I well one thing I've noticed about Postgres sequel",
    "start": "3422290",
    "end": "3429480"
  },
  {
    "text": "that I've not noted noted in recently which was really cool feature of",
    "start": "3429480",
    "end": "3435220"
  },
  {
    "text": "Oracle's being able to do batch like fetches ya know the bulk bulk collect",
    "start": "3435220",
    "end": "3442330"
  },
  {
    "text": "yeah yeah Postgres doesn't offer that does it you know I'm not sure it does",
    "start": "3442330",
    "end": "3448810"
  },
  {
    "text": "team all I mean for as far it's collections I don't know I mean collections aren't gonna run into that x io CT x io x CT sink what's gonna run",
    "start": "3448810",
    "end": "3456490"
  },
  {
    "text": "into those are some sort of manipulation insert update delete for those you can do bulk I mean I can do a multi-role",
    "start": "3456490",
    "end": "3462520"
  },
  {
    "text": "insert for dive two options one I can do a bunch of insert single inserts and",
    "start": "3462520",
    "end": "3467650"
  },
  {
    "text": "then commit with otic went off or I can do a multi row insert in a single statement which will be even faster now",
    "start": "3467650",
    "end": "3473320"
  },
  {
    "text": "I'm not opposed to his expert I don't know if there is a bulk on top of that Oracle also has these bulk inserts right",
    "start": "3473320",
    "end": "3478900"
  },
  {
    "text": "which are even faster I mean Oracle man you can stuff stuff in and yep that was",
    "start": "3478900",
    "end": "3485740"
  },
  {
    "text": "curious because we're kind of in a situation to where we'd have to rewrite",
    "start": "3485740",
    "end": "3491290"
  },
  {
    "text": "the app I think to solve some of these problems but we're seeing a little that yeah used a lot it was like okay what's",
    "start": "3491290",
    "end": "3497230"
  },
  {
    "text": "the easy fix on that yeah we're something like that you've got to rewrite your your app the way the",
    "start": "3497230",
    "end": "3502690"
  },
  {
    "text": "apps interacting with the database there's no parameter that will change it in the database just a clarification so",
    "start": "3502690",
    "end": "3513360"
  },
  {
    "text": "you mentioned the IO and CPU types and if we've got like a heavy read",
    "start": "3513360",
    "end": "3521110"
  },
  {
    "text": "operations and all of it if CPU is does",
    "start": "3521110",
    "end": "3526480"
  },
  {
    "text": "that mean it's going to the cache only and it's not never going to disk that's",
    "start": "3526480",
    "end": "3531790"
  },
  {
    "text": "just always the quick yeah what I heard if I'm wearing a heavy read load but I look at the load chart and",
    "start": "3531790",
    "end": "3539769"
  },
  {
    "text": "all I see is green CPU because I mean I getting from cash yeah most likely means you're not it's many any time waiting",
    "start": "3539769",
    "end": "3545440"
  },
  {
    "text": "for reads from i/o from the disk okay so and then you mentioned using this for",
    "start": "3545440",
    "end": "3550900"
  },
  {
    "text": "sizing is there any best practices for",
    "start": "3550900",
    "end": "3555970"
  },
  {
    "text": "using the V CPU for for sizing here I",
    "start": "3555970",
    "end": "3562059"
  },
  {
    "text": "mean right now it's all manual like I have to visually look at the chart or write a program that does analysis you",
    "start": "3562059",
    "end": "3567819"
  },
  {
    "text": "know most likely I would I mean just the way things are going there'll be a point where they'll be an",
    "start": "3567819",
    "end": "3574089"
  },
  {
    "text": "advisor that'll say look you we looked at your load for the past week or the past year and you never used more than X",
    "start": "3574089",
    "end": "3581170"
  },
  {
    "text": "percent that you know it's just that's a matter of time it'll come right now you have to visually look at it or write",
    "start": "3581170",
    "end": "3586930"
  },
  {
    "text": "general little programs right thank you",
    "start": "3586930",
    "end": "3590640"
  },
  {
    "text": "when performance insights is doing the sampling does it measure or like record",
    "start": "3592259",
    "end": "3600190"
  },
  {
    "text": "like deadlocks like table locks or row level locks and like which operation is actually holding the lock and which ones",
    "start": "3600190",
    "end": "3606700"
  },
  {
    "text": "are waiting and right so so right now the question is do we when there's",
    "start": "3606700",
    "end": "3612609"
  },
  {
    "text": "locking do we click you know other information like who's the blocker what what are they walking on right now we",
    "start": "3612609",
    "end": "3618220"
  },
  {
    "text": "just basically show the who's who's waiting for locks and what queries are running on the agenda is to do a heavy",
    "start": "3618220",
    "end": "3624009"
  },
  {
    "text": "lock analysis so that would show you who's blocking you what were they doing what were you doing what was a row that's something we're working towards",
    "start": "3624009",
    "end": "3630609"
  },
  {
    "text": "the deeper lock analysis Thanks I think",
    "start": "3630609",
    "end": "3636309"
  },
  {
    "text": "we're out of time so thank you for coming today I appreciate your time and look forward to feedback on the feature",
    "start": "3636309",
    "end": "3643590"
  },
  {
    "text": "[Applause]",
    "start": "3643590",
    "end": "3646619"
  }
]